Module([Expr(Str(' Tests for the linecache module ', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('linecache', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('os.path', None)], lineno=5, col_offset=0), ImportFrom('test', [alias('test_support', 'support')], 0, lineno=6, col_offset=0), Assign([Name('FILENAME', Store(), lineno=9, col_offset=0)], Attribute(Name('linecache', Load(), lineno=9, col_offset=11), '__file__', Load(), lineno=9, col_offset=11), lineno=9, col_offset=0), Assign([Name('INVALID_NAME', Store(), lineno=10, col_offset=0)], Str('!@$)(!@#_1', lineno=10, col_offset=15), lineno=10, col_offset=0), Assign([Name('EMPTY', Store(), lineno=11, col_offset=0)], Str('', lineno=11, col_offset=8), lineno=11, col_offset=0), Assign([Name('TESTS', Store(), lineno=12, col_offset=0)], Str('cjkencodings_test inspect_fodder inspect_fodder2 mapping_tests', lineno=12, col_offset=8), lineno=12, col_offset=0), Assign([Name('TESTS', Store(), lineno=13, col_offset=0)], Call(Attribute(Name('TESTS', Load(), lineno=13, col_offset=8), 'split', Load(), lineno=13, col_offset=8), [], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=0), Assign([Name('TEST_PATH', Store(), lineno=14, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=14, col_offset=12), 'path', Load(), lineno=14, col_offset=12), 'dirname', Load(), lineno=14, col_offset=12), [Attribute(Name('support', Load(), lineno=14, col_offset=28), '__file__', Load(), lineno=14, col_offset=28)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=0), Assign([Name('MODULES', Store(), lineno=15, col_offset=0)], Call(Attribute(Str('linecache abc', lineno=15, col_offset=10), 'split', Load(), lineno=15, col_offset=10), [], [], None, None, lineno=15, col_offset=10), lineno=15, col_offset=0), Assign([Name('MODULE_PATH', Store(), lineno=16, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=16, col_offset=14), 'path', Load(), lineno=16, col_offset=14), 'dirname', Load(), lineno=16, col_offset=14), [Name('FILENAME', Load(), lineno=16, col_offset=30)], [], None, None, lineno=16, col_offset=14), lineno=16, col_offset=0), Assign([Name('SOURCE_1', Store(), lineno=18, col_offset=0)], Str('\n" Docstring "\n\ndef function():\n    return result\n\n', lineno=24, col_offset=-1), lineno=18, col_offset=0), Assign([Name('SOURCE_2', Store(), lineno=26, col_offset=0)], Str('\ndef f():\n    return 1 + 1\n\na = f()\n\n', lineno=32, col_offset=-1), lineno=26, col_offset=0), Assign([Name('SOURCE_3', Store(), lineno=34, col_offset=0)], Str('\ndef f():\n    return 3', lineno=36, col_offset=-1), lineno=34, col_offset=0), ClassDef('LineCacheTests', [Attribute(Name('unittest', Load(), lineno=39, col_offset=21), 'TestCase', Load(), lineno=39, col_offset=21)], [FunctionDef('test_getline', arguments([Name('self', Param(), lineno=41, col_offset=21)], None, None, []), [Assign([Name('getline', Store(), lineno=42, col_offset=8)], Attribute(Name('linecache', Load(), lineno=42, col_offset=18), 'getline', Load(), lineno=42, col_offset=18), lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Call(Name('getline', Load(), lineno=45, col_offset=25), [Name('FILENAME', Load(), lineno=45, col_offset=33), BinOp(Num(2, lineno=45, col_offset=43), Pow(), Num(15, lineno=45, col_offset=46), lineno=45, col_offset=43)], [], None, None, lineno=45, col_offset=25), Name('EMPTY', Load(), lineno=45, col_offset=51)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Call(Name('getline', Load(), lineno=46, col_offset=25), [Name('FILENAME', Load(), lineno=46, col_offset=33), Num(-1, lineno=46, col_offset=44)], [], None, None, lineno=46, col_offset=25), Name('EMPTY', Load(), lineno=46, col_offset=48)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertRaises', Load(), lineno=49, col_offset=8), [Name('TypeError', Load(), lineno=49, col_offset=26), Name('getline', Load(), lineno=49, col_offset=37), Name('FILENAME', Load(), lineno=49, col_offset=46), Num(1.1, lineno=49, col_offset=56)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertEqual', Load(), lineno=52, col_offset=8), [Call(Name('getline', Load(), lineno=52, col_offset=25), [Name('EMPTY', Load(), lineno=52, col_offset=33), Num(1, lineno=52, col_offset=40)], [], None, None, lineno=52, col_offset=25), Name('EMPTY', Load(), lineno=52, col_offset=44)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Call(Name('getline', Load(), lineno=53, col_offset=25), [Name('INVALID_NAME', Load(), lineno=53, col_offset=33), Num(1, lineno=53, col_offset=47)], [], None, None, lineno=53, col_offset=25), Name('EMPTY', Load(), lineno=53, col_offset=51)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), For(Name('entry', Store(), lineno=56, col_offset=12), Name('TESTS', Load(), lineno=56, col_offset=21), [Assign([Name('filename', Store(), lineno=57, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=57, col_offset=23), 'path', Load(), lineno=57, col_offset=23), 'join', Load(), lineno=57, col_offset=23), [Name('TEST_PATH', Load(), lineno=57, col_offset=36), Name('entry', Load(), lineno=57, col_offset=47)], [], None, None, lineno=57, col_offset=23), Add(), Str('.py', lineno=57, col_offset=56), lineno=57, col_offset=23), lineno=57, col_offset=12), For(Tuple([Name('index', Store(), lineno=58, col_offset=16), Name('line', Store(), lineno=58, col_offset=23)], Store(), lineno=58, col_offset=16), Call(Name('enumerate', Load(), lineno=58, col_offset=31), [Call(Name('open', Load(), lineno=58, col_offset=41), [Name('filename', Load(), lineno=58, col_offset=46)], [], None, None, lineno=58, col_offset=41)], [], None, None, lineno=58, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=16), 'assertEqual', Load(), lineno=59, col_offset=16), [Name('line', Load(), lineno=59, col_offset=33), Call(Name('getline', Load(), lineno=59, col_offset=39), [Name('filename', Load(), lineno=59, col_offset=47), BinOp(Name('index', Load(), lineno=59, col_offset=57), Add(), Num(1, lineno=59, col_offset=65), lineno=59, col_offset=57)], [], None, None, lineno=59, col_offset=39)], [], None, None, lineno=59, col_offset=16), lineno=59, col_offset=16)], [], lineno=58, col_offset=12)], [], lineno=56, col_offset=8), For(Name('entry', Store(), lineno=62, col_offset=12), Name('MODULES', Load(), lineno=62, col_offset=21), [Assign([Name('filename', Store(), lineno=63, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=63, col_offset=23), 'path', Load(), lineno=63, col_offset=23), 'join', Load(), lineno=63, col_offset=23), [Name('MODULE_PATH', Load(), lineno=63, col_offset=36), Name('entry', Load(), lineno=63, col_offset=49)], [], None, None, lineno=63, col_offset=23), Add(), Str('.py', lineno=63, col_offset=58), lineno=63, col_offset=23), lineno=63, col_offset=12), For(Tuple([Name('index', Store(), lineno=64, col_offset=16), Name('line', Store(), lineno=64, col_offset=23)], Store(), lineno=64, col_offset=16), Call(Name('enumerate', Load(), lineno=64, col_offset=31), [Call(Name('open', Load(), lineno=64, col_offset=41), [Name('filename', Load(), lineno=64, col_offset=46)], [], None, None, lineno=64, col_offset=41)], [], None, None, lineno=64, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=16), 'assertEqual', Load(), lineno=65, col_offset=16), [Name('line', Load(), lineno=65, col_offset=33), Call(Name('getline', Load(), lineno=65, col_offset=39), [Name('filename', Load(), lineno=65, col_offset=47), BinOp(Name('index', Load(), lineno=65, col_offset=57), Add(), Num(1, lineno=65, col_offset=65), lineno=65, col_offset=57)], [], None, None, lineno=65, col_offset=39)], [], None, None, lineno=65, col_offset=16), lineno=65, col_offset=16)], [], lineno=64, col_offset=12)], [], lineno=62, col_offset=8), Assign([Name('empty', Store(), lineno=68, col_offset=8)], Call(Attribute(Name('linecache', Load(), lineno=68, col_offset=16), 'getlines', Load(), lineno=68, col_offset=16), [Str('a/b/c/__init__.py', lineno=68, col_offset=35)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Name('empty', Load(), lineno=69, col_offset=25), List([], Load(), lineno=69, col_offset=32)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('test_no_ending_newline', arguments([Name('self', Param(), lineno=71, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'addCleanup', Load(), lineno=72, col_offset=8), [Attribute(Name('support', Load(), lineno=72, col_offset=24), 'unlink', Load(), lineno=72, col_offset=24), Attribute(Name('support', Load(), lineno=72, col_offset=40), 'TESTFN', Load(), lineno=72, col_offset=40)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), With(Call(Name('open', Load(), lineno=73, col_offset=13), [Attribute(Name('support', Load(), lineno=73, col_offset=18), 'TESTFN', Load(), lineno=73, col_offset=18), Str('w', lineno=73, col_offset=34)], [], None, None, lineno=73, col_offset=13), Name('fp', Store(), lineno=73, col_offset=42), [Expr(Call(Attribute(Name('fp', Load(), lineno=74, col_offset=12), 'write', Load(), lineno=74, col_offset=12), [Name('SOURCE_3', Load(), lineno=74, col_offset=21)], [], None, None, lineno=74, col_offset=12), lineno=74, col_offset=12)], lineno=73, col_offset=13), Assign([Name('lines', Store(), lineno=75, col_offset=8)], Call(Attribute(Name('linecache', Load(), lineno=75, col_offset=16), 'getlines', Load(), lineno=75, col_offset=16), [Attribute(Name('support', Load(), lineno=75, col_offset=35), 'TESTFN', Load(), lineno=75, col_offset=35)], [], None, None, lineno=75, col_offset=16), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'assertEqual', Load(), lineno=76, col_offset=8), [Name('lines', Load(), lineno=76, col_offset=25), List([Str('\n', lineno=76, col_offset=33), Str('def f():\n', lineno=76, col_offset=39), Str('    return 3\n', lineno=76, col_offset=53)], Load(), lineno=76, col_offset=32)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_clearcache', arguments([Name('self', Param(), lineno=78, col_offset=24)], None, None, []), [Assign([Name('cached', Store(), lineno=79, col_offset=8)], List([], Load(), lineno=79, col_offset=17), lineno=79, col_offset=8), For(Name('entry', Store(), lineno=80, col_offset=12), Name('TESTS', Load(), lineno=80, col_offset=21), [Assign([Name('filename', Store(), lineno=81, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=81, col_offset=23), 'path', Load(), lineno=81, col_offset=23), 'join', Load(), lineno=81, col_offset=23), [Name('TEST_PATH', Load(), lineno=81, col_offset=36), Name('entry', Load(), lineno=81, col_offset=47)], [], None, None, lineno=81, col_offset=23), Add(), Str('.py', lineno=81, col_offset=56), lineno=81, col_offset=23), lineno=81, col_offset=12), Expr(Call(Attribute(Name('cached', Load(), lineno=82, col_offset=12), 'append', Load(), lineno=82, col_offset=12), [Name('filename', Load(), lineno=82, col_offset=26)], [], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12), Expr(Call(Attribute(Name('linecache', Load(), lineno=83, col_offset=12), 'getline', Load(), lineno=83, col_offset=12), [Name('filename', Load(), lineno=83, col_offset=30), Num(1, lineno=83, col_offset=40)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12)], [], lineno=80, col_offset=8), Assign([Name('cached_empty', Store(), lineno=86, col_offset=8)], ListComp(Name('fn', Load(), lineno=86, col_offset=24), [comprehension(Name('fn', Store(), lineno=86, col_offset=31), Name('cached', Load(), lineno=86, col_offset=37), [Compare(Name('fn', Load(), lineno=86, col_offset=47), [NotIn()], [Attribute(Name('linecache', Load(), lineno=86, col_offset=57), 'cache', Load(), lineno=86, col_offset=57)], lineno=86, col_offset=47)])], lineno=86, col_offset=24), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'assertEqual', Load(), lineno=87, col_offset=8), [Name('cached_empty', Load(), lineno=87, col_offset=25), List([], Load(), lineno=87, col_offset=39)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('linecache', Load(), lineno=90, col_offset=8), 'clearcache', Load(), lineno=90, col_offset=8), [], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Assign([Name('cached_empty', Store(), lineno=91, col_offset=8)], ListComp(Name('fn', Load(), lineno=91, col_offset=24), [comprehension(Name('fn', Store(), lineno=91, col_offset=31), Name('cached', Load(), lineno=91, col_offset=37), [Compare(Name('fn', Load(), lineno=91, col_offset=47), [In()], [Attribute(Name('linecache', Load(), lineno=91, col_offset=53), 'cache', Load(), lineno=91, col_offset=53)], lineno=91, col_offset=47)])], lineno=91, col_offset=24), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertEqual', Load(), lineno=92, col_offset=8), [Name('cached_empty', Load(), lineno=92, col_offset=25), List([], Load(), lineno=92, col_offset=39)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=78, col_offset=4), FunctionDef('test_checkcache', arguments([Name('self', Param(), lineno=94, col_offset=24)], None, None, []), [Assign([Name('getline', Store(), lineno=95, col_offset=8)], Attribute(Name('linecache', Load(), lineno=95, col_offset=18), 'getline', Load(), lineno=95, col_offset=18), lineno=95, col_offset=8), Assign([Name('source_name', Store(), lineno=97, col_offset=8)], BinOp(Attribute(Name('support', Load(), lineno=97, col_offset=22), 'TESTFN', Load(), lineno=97, col_offset=22), Add(), Str('.py', lineno=97, col_offset=39), lineno=97, col_offset=22), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'addCleanup', Load(), lineno=98, col_offset=8), [Attribute(Name('support', Load(), lineno=98, col_offset=24), 'unlink', Load(), lineno=98, col_offset=24), Name('source_name', Load(), lineno=98, col_offset=40)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), With(Call(Name('open', Load(), lineno=99, col_offset=13), [Name('source_name', Load(), lineno=99, col_offset=18), Str('w', lineno=99, col_offset=31)], [], None, None, lineno=99, col_offset=13), Name('source', Store(), lineno=99, col_offset=39), [Expr(Call(Attribute(Name('source', Load(), lineno=100, col_offset=12), 'write', Load(), lineno=100, col_offset=12), [Name('SOURCE_1', Load(), lineno=100, col_offset=25)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], lineno=99, col_offset=13), Expr(Call(Name('getline', Load(), lineno=101, col_offset=8), [Name('source_name', Load(), lineno=101, col_offset=16), Num(1, lineno=101, col_offset=29)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Assign([Name('source_list', Store(), lineno=104, col_offset=8)], List([], Load(), lineno=104, col_offset=22), lineno=104, col_offset=8), With(Call(Name('open', Load(), lineno=105, col_offset=13), [Name('source_name', Load(), lineno=105, col_offset=18)], [], None, None, lineno=105, col_offset=13), Name('source', Store(), lineno=105, col_offset=34), [For(Tuple([Name('index', Store(), lineno=106, col_offset=16), Name('line', Store(), lineno=106, col_offset=23)], Store(), lineno=106, col_offset=16), Call(Name('enumerate', Load(), lineno=106, col_offset=31), [Name('source', Load(), lineno=106, col_offset=41)], [], None, None, lineno=106, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=16), 'assertEqual', Load(), lineno=107, col_offset=16), [Name('line', Load(), lineno=107, col_offset=33), Call(Name('getline', Load(), lineno=107, col_offset=39), [Name('source_name', Load(), lineno=107, col_offset=47), BinOp(Name('index', Load(), lineno=107, col_offset=60), Add(), Num(1, lineno=107, col_offset=68), lineno=107, col_offset=60)], [], None, None, lineno=107, col_offset=39)], [], None, None, lineno=107, col_offset=16), lineno=107, col_offset=16), Expr(Call(Attribute(Name('source_list', Load(), lineno=108, col_offset=16), 'append', Load(), lineno=108, col_offset=16), [Name('line', Load(), lineno=108, col_offset=35)], [], None, None, lineno=108, col_offset=16), lineno=108, col_offset=16)], [], lineno=106, col_offset=12)], lineno=105, col_offset=13), With(Call(Name('open', Load(), lineno=110, col_offset=13), [Name('source_name', Load(), lineno=110, col_offset=18), Str('w', lineno=110, col_offset=31)], [], None, None, lineno=110, col_offset=13), Name('source', Store(), lineno=110, col_offset=39), [Expr(Call(Attribute(Name('source', Load(), lineno=111, col_offset=12), 'write', Load(), lineno=111, col_offset=12), [Name('SOURCE_2', Load(), lineno=111, col_offset=25)], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=12)], lineno=110, col_offset=13), Expr(Call(Attribute(Name('linecache', Load(), lineno=114, col_offset=8), 'checkcache', Load(), lineno=114, col_offset=8), [Str('dummy', lineno=114, col_offset=29)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), For(Tuple([Name('index', Store(), lineno=117, col_offset=12), Name('line', Store(), lineno=117, col_offset=19)], Store(), lineno=117, col_offset=12), Call(Name('enumerate', Load(), lineno=117, col_offset=27), [Name('source_list', Load(), lineno=117, col_offset=37)], [], None, None, lineno=117, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=12), 'assertEqual', Load(), lineno=118, col_offset=12), [Name('line', Load(), lineno=118, col_offset=29), Call(Name('getline', Load(), lineno=118, col_offset=35), [Name('source_name', Load(), lineno=118, col_offset=43), BinOp(Name('index', Load(), lineno=118, col_offset=56), Add(), Num(1, lineno=118, col_offset=64), lineno=118, col_offset=56)], [], None, None, lineno=118, col_offset=35)], [], None, None, lineno=118, col_offset=12), lineno=118, col_offset=12)], [], lineno=117, col_offset=8), Expr(Call(Attribute(Name('linecache', Load(), lineno=121, col_offset=8), 'checkcache', Load(), lineno=121, col_offset=8), [Name('source_name', Load(), lineno=121, col_offset=29)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), With(Call(Name('open', Load(), lineno=122, col_offset=13), [Name('source_name', Load(), lineno=122, col_offset=18)], [], None, None, lineno=122, col_offset=13), Name('source', Store(), lineno=122, col_offset=34), [For(Tuple([Name('index', Store(), lineno=123, col_offset=16), Name('line', Store(), lineno=123, col_offset=23)], Store(), lineno=123, col_offset=16), Call(Name('enumerate', Load(), lineno=123, col_offset=31), [Name('source', Load(), lineno=123, col_offset=41)], [], None, None, lineno=123, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=16), 'assertEqual', Load(), lineno=124, col_offset=16), [Name('line', Load(), lineno=124, col_offset=33), Call(Name('getline', Load(), lineno=124, col_offset=39), [Name('source_name', Load(), lineno=124, col_offset=47), BinOp(Name('index', Load(), lineno=124, col_offset=60), Add(), Num(1, lineno=124, col_offset=68), lineno=124, col_offset=60)], [], None, None, lineno=124, col_offset=39)], [], None, None, lineno=124, col_offset=16), lineno=124, col_offset=16), Expr(Call(Attribute(Name('source_list', Load(), lineno=125, col_offset=16), 'append', Load(), lineno=125, col_offset=16), [Name('line', Load(), lineno=125, col_offset=35)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=16)], [], lineno=123, col_offset=12)], lineno=122, col_offset=13)], [], lineno=94, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('support', Load(), lineno=128, col_offset=4), 'run_unittest', Load(), lineno=128, col_offset=4), [Name('LineCacheTests', Load(), lineno=128, col_offset=25)], [], None, None, lineno=128, col_offset=4), lineno=128, col_offset=4)], [], lineno=127, col_offset=0), If(Compare(Name('__name__', Load(), lineno=130, col_offset=3), [Eq()], [Str('__main__', lineno=130, col_offset=15)], lineno=130, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=131, col_offset=4), [], [], None, None, lineno=131, col_offset=4), lineno=131, col_offset=4)], [], lineno=130, col_offset=0)])
