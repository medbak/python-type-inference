Module([Expr(Str('A POP3 client class.\n\nBased on the J. Myers POP3 draft, Jan. 96\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Import([alias('re', None), alias('socket', None)], lineno=16, col_offset=0), Assign([Name('__all__', Store(), lineno=18, col_offset=0)], List([Str('POP3', lineno=18, col_offset=11), Str('error_proto', lineno=18, col_offset=18)], Load(), lineno=18, col_offset=10), lineno=18, col_offset=0), ClassDef('error_proto', [Name('Exception', Load(), lineno=22, col_offset=18)], [Pass( lineno=22, col_offset=30)], [], lineno=22, col_offset=0), Assign([Name('POP3_PORT', Store(), lineno=25, col_offset=0)], Num(110, lineno=25, col_offset=12), lineno=25, col_offset=0), Assign([Name('POP3_SSL_PORT', Store(), lineno=28, col_offset=0)], Num(995, lineno=28, col_offset=16), lineno=28, col_offset=0), Assign([Name('CR', Store(), lineno=31, col_offset=0)], Str('\r', lineno=31, col_offset=5), lineno=31, col_offset=0), Assign([Name('LF', Store(), lineno=32, col_offset=0)], Str('\n', lineno=32, col_offset=5), lineno=32, col_offset=0), Assign([Name('CRLF', Store(), lineno=33, col_offset=0)], BinOp(Name('CR', Load(), lineno=33, col_offset=7), Add(), Name('LF', Load(), lineno=33, col_offset=10), lineno=33, col_offset=7), lineno=33, col_offset=0), ClassDef('POP3', [], [Expr(Str("This class supports both the minimal and optional command sets.\n    Arguments can be strings or integers (where appropriate)\n    (e.g.: retr(1) and retr('1') both work equally well.\n\n    Minimal Command Set:\n            USER name               user(name)\n            PASS string             pass_(string)\n            STAT                    stat()\n            LIST [msg]              list(msg = None)\n            RETR msg                retr(msg)\n            DELE msg                dele(msg)\n            NOOP                    noop()\n            RSET                    rset()\n            QUIT                    quit()\n\n    Optional Commands (some servers support these):\n            RPOP name               rpop(name)\n            APOP name digest        apop(name, digest)\n            TOP msg n               top(msg, n)\n            UIDL [msg]              uidl(msg = None)\n\n    Raises one exception: 'error_proto'.\n\n    Instantiate with:\n            POP3(hostname, port=110)\n\n    NB:     the POP protocol locks the mailbox from user\n            authorization until QUIT, so be sure to get in, suck\n            the messages, and quit, each time you access the\n            mailbox.\n\n            POP is a line-based protocol, which means large mail\n            messages consume lots of python cycles reading them\n            line-by-line.\n\n            If it's available on your mail server, use IMAP4\n            instead, it doesn't suffer from the two problems\n            above.\n    ", lineno=76, col_offset=-1), lineno=76, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=79, col_offset=17), Name('host', Param(), lineno=79, col_offset=23), Name('port', Param(), lineno=79, col_offset=29), Name('timeout', Param(), lineno=80, col_offset=17)], None, None, [Name('POP3_PORT', Load(), lineno=79, col_offset=34), Attribute(Name('socket', Load(), lineno=80, col_offset=25), '_GLOBAL_DEFAULT_TIMEOUT', Load(), lineno=80, col_offset=25)]), [Assign([Attribute(Name('self', Load(), lineno=81, col_offset=8), 'host', Store(), lineno=81, col_offset=8)], Name('host', Load(), lineno=81, col_offset=20), lineno=81, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=82, col_offset=8), 'port', Store(), lineno=82, col_offset=8)], Name('port', Load(), lineno=82, col_offset=20), lineno=82, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=83, col_offset=8), 'sock', Store(), lineno=83, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=83, col_offset=20), 'create_connection', Load(), lineno=83, col_offset=20), [Tuple([Name('host', Load(), lineno=83, col_offset=46), Name('port', Load(), lineno=83, col_offset=52)], Load(), lineno=83, col_offset=46), Name('timeout', Load(), lineno=83, col_offset=59)], [], None, None, lineno=83, col_offset=20), lineno=83, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=84, col_offset=8), 'file', Store(), lineno=84, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=84, col_offset=20), 'sock', Load(), lineno=84, col_offset=20), 'makefile', Load(), lineno=84, col_offset=20), [Str('rb', lineno=84, col_offset=39)], [], None, None, lineno=84, col_offset=20), lineno=84, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=85, col_offset=8), '_debugging', Store(), lineno=85, col_offset=8)], Num(0, lineno=85, col_offset=26), lineno=85, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=86, col_offset=8), 'welcome', Store(), lineno=86, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=86, col_offset=23), '_getresp', Load(), lineno=86, col_offset=23), [], [], None, None, lineno=86, col_offset=23), lineno=86, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('_putline', arguments([Name('self', Param(), lineno=89, col_offset=17), Name('line', Param(), lineno=89, col_offset=23)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=90, col_offset=11), '_debugging', Load(), lineno=90, col_offset=11), [Gt()], [Num(1, lineno=90, col_offset=29)], lineno=90, col_offset=11), [Print(None, [Str('*put*', lineno=90, col_offset=38), Call(Name('repr', Load(), lineno=90, col_offset=47), [Name('line', Load(), lineno=90, col_offset=52)], [], None, None, lineno=90, col_offset=47)], True, lineno=90, col_offset=32)], [], lineno=90, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'sock', Load(), lineno=91, col_offset=8), 'sendall', Load(), lineno=91, col_offset=8), [BinOp(Str('%s%s', lineno=91, col_offset=26), Mod(), Tuple([Name('line', Load(), lineno=91, col_offset=36), Name('CRLF', Load(), lineno=91, col_offset=42)], Load(), lineno=91, col_offset=36), lineno=91, col_offset=26)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=89, col_offset=4), FunctionDef('_putcmd', arguments([Name('self', Param(), lineno=96, col_offset=16), Name('line', Param(), lineno=96, col_offset=22)], None, None, []), [If(Attribute(Name('self', Load(), lineno=97, col_offset=11), '_debugging', Load(), lineno=97, col_offset=11), [Print(None, [Str('*cmd*', lineno=97, col_offset=34), Call(Name('repr', Load(), lineno=97, col_offset=43), [Name('line', Load(), lineno=97, col_offset=48)], [], None, None, lineno=97, col_offset=43)], True, lineno=97, col_offset=28)], [], lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), '_putline', Load(), lineno=98, col_offset=8), [Name('line', Load(), lineno=98, col_offset=22)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('_getline', arguments([Name('self', Param(), lineno=105, col_offset=17)], None, None, []), [Assign([Name('line', Store(), lineno=106, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=106, col_offset=15), 'file', Load(), lineno=106, col_offset=15), 'readline', Load(), lineno=106, col_offset=15), [], [], None, None, lineno=106, col_offset=15), lineno=106, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=107, col_offset=11), '_debugging', Load(), lineno=107, col_offset=11), [Gt()], [Num(1, lineno=107, col_offset=29)], lineno=107, col_offset=11), [Print(None, [Str('*get*', lineno=107, col_offset=38), Call(Name('repr', Load(), lineno=107, col_offset=47), [Name('line', Load(), lineno=107, col_offset=52)], [], None, None, lineno=107, col_offset=47)], True, lineno=107, col_offset=32)], [], lineno=107, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=108, col_offset=15), lineno=108, col_offset=11), [Raise(Call(Name('error_proto', Load(), lineno=108, col_offset=27), [Str('-ERR EOF', lineno=108, col_offset=39)], [], None, None, lineno=108, col_offset=27), None, None, lineno=108, col_offset=21)], [], lineno=108, col_offset=8), Assign([Name('octets', Store(), lineno=109, col_offset=8)], Call(Name('len', Load(), lineno=109, col_offset=17), [Name('line', Load(), lineno=109, col_offset=21)], [], None, None, lineno=109, col_offset=17), lineno=109, col_offset=8), If(Compare(Subscript(Name('line', Load(), lineno=113, col_offset=11), Slice(Num(-2, lineno=113, col_offset=17), None, None), Load(), lineno=113, col_offset=11), [Eq()], [Name('CRLF', Load(), lineno=113, col_offset=24)], lineno=113, col_offset=11), [Return(Tuple([Subscript(Name('line', Load(), lineno=114, col_offset=19), Slice(None, Num(-2, lineno=114, col_offset=26), None), Load(), lineno=114, col_offset=19), Name('octets', Load(), lineno=114, col_offset=30)], Load(), lineno=114, col_offset=19), lineno=114, col_offset=12)], [], lineno=113, col_offset=8), If(Compare(Subscript(Name('line', Load(), lineno=115, col_offset=11), Index(Num(0, lineno=115, col_offset=16)), Load(), lineno=115, col_offset=11), [Eq()], [Name('CR', Load(), lineno=115, col_offset=22)], lineno=115, col_offset=11), [Return(Tuple([Subscript(Name('line', Load(), lineno=116, col_offset=19), Slice(Num(1, lineno=116, col_offset=24), Num(-1, lineno=116, col_offset=27), None), Load(), lineno=116, col_offset=19), Name('octets', Load(), lineno=116, col_offset=31)], Load(), lineno=116, col_offset=19), lineno=116, col_offset=12)], [], lineno=115, col_offset=8), Return(Tuple([Subscript(Name('line', Load(), lineno=117, col_offset=15), Slice(None, Num(-1, lineno=117, col_offset=22), None), Load(), lineno=117, col_offset=15), Name('octets', Load(), lineno=117, col_offset=26)], Load(), lineno=117, col_offset=15), lineno=117, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('_getresp', arguments([Name('self', Param(), lineno=123, col_offset=17)], None, None, []), [Assign([Tuple([Name('resp', Store(), lineno=124, col_offset=8), Name('o', Store(), lineno=124, col_offset=14)], Store(), lineno=124, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=124, col_offset=18), '_getline', Load(), lineno=124, col_offset=18), [], [], None, None, lineno=124, col_offset=18), lineno=124, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=125, col_offset=11), '_debugging', Load(), lineno=125, col_offset=11), [Gt()], [Num(1, lineno=125, col_offset=29)], lineno=125, col_offset=11), [Print(None, [Str('*resp*', lineno=125, col_offset=38), Call(Name('repr', Load(), lineno=125, col_offset=48), [Name('resp', Load(), lineno=125, col_offset=53)], [], None, None, lineno=125, col_offset=48)], True, lineno=125, col_offset=32)], [], lineno=125, col_offset=8), Assign([Name('c', Store(), lineno=126, col_offset=8)], Subscript(Name('resp', Load(), lineno=126, col_offset=12), Slice(None, Num(1, lineno=126, col_offset=18), None), Load(), lineno=126, col_offset=12), lineno=126, col_offset=8), If(Compare(Name('c', Load(), lineno=127, col_offset=11), [NotEq()], [Str('+', lineno=127, col_offset=16)], lineno=127, col_offset=11), [Raise(Call(Name('error_proto', Load(), lineno=128, col_offset=18), [Name('resp', Load(), lineno=128, col_offset=30)], [], None, None, lineno=128, col_offset=18), None, None, lineno=128, col_offset=12)], [], lineno=127, col_offset=8), Return(Name('resp', Load(), lineno=129, col_offset=15), lineno=129, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('_getlongresp', arguments([Name('self', Param(), lineno=134, col_offset=21)], None, None, []), [Assign([Name('resp', Store(), lineno=135, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=135, col_offset=15), '_getresp', Load(), lineno=135, col_offset=15), [], [], None, None, lineno=135, col_offset=15), lineno=135, col_offset=8), Assign([Name('list', Store(), lineno=136, col_offset=8)], List([], Load(), lineno=136, col_offset=15), lineno=136, col_offset=8), Assign([Name('octets', Store(), lineno=136, col_offset=19)], Num(0, lineno=136, col_offset=28), lineno=136, col_offset=19), Assign([Tuple([Name('line', Store(), lineno=137, col_offset=8), Name('o', Store(), lineno=137, col_offset=14)], Store(), lineno=137, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=137, col_offset=18), '_getline', Load(), lineno=137, col_offset=18), [], [], None, None, lineno=137, col_offset=18), lineno=137, col_offset=8), While(Compare(Name('line', Load(), lineno=138, col_offset=14), [NotEq()], [Str('.', lineno=138, col_offset=22)], lineno=138, col_offset=14), [If(Compare(Subscript(Name('line', Load(), lineno=139, col_offset=15), Slice(None, Num(2, lineno=139, col_offset=21), None), Load(), lineno=139, col_offset=15), [Eq()], [Str('..', lineno=139, col_offset=27)], lineno=139, col_offset=15), [Assign([Name('o', Store(), lineno=140, col_offset=16)], BinOp(Name('o', Load(), lineno=140, col_offset=20), Sub(), Num(1, lineno=140, col_offset=22), lineno=140, col_offset=20), lineno=140, col_offset=16), Assign([Name('line', Store(), lineno=141, col_offset=16)], Subscript(Name('line', Load(), lineno=141, col_offset=23), Slice(Num(1, lineno=141, col_offset=28), None, None), Load(), lineno=141, col_offset=23), lineno=141, col_offset=16)], [], lineno=139, col_offset=12), Assign([Name('octets', Store(), lineno=142, col_offset=12)], BinOp(Name('octets', Load(), lineno=142, col_offset=21), Add(), Name('o', Load(), lineno=142, col_offset=30), lineno=142, col_offset=21), lineno=142, col_offset=12), Expr(Call(Attribute(Name('list', Load(), lineno=143, col_offset=12), 'append', Load(), lineno=143, col_offset=12), [Name('line', Load(), lineno=143, col_offset=24)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12), Assign([Tuple([Name('line', Store(), lineno=144, col_offset=12), Name('o', Store(), lineno=144, col_offset=18)], Store(), lineno=144, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=144, col_offset=22), '_getline', Load(), lineno=144, col_offset=22), [], [], None, None, lineno=144, col_offset=22), lineno=144, col_offset=12)], [], lineno=138, col_offset=8), Return(Tuple([Name('resp', Load(), lineno=145, col_offset=15), Name('list', Load(), lineno=145, col_offset=21), Name('octets', Load(), lineno=145, col_offset=27)], Load(), lineno=145, col_offset=15), lineno=145, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('_shortcmd', arguments([Name('self', Param(), lineno=150, col_offset=18), Name('line', Param(), lineno=150, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), '_putcmd', Load(), lineno=151, col_offset=8), [Name('line', Load(), lineno=151, col_offset=21)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=152, col_offset=15), '_getresp', Load(), lineno=152, col_offset=15), [], [], None, None, lineno=152, col_offset=15), lineno=152, col_offset=8)], [], lineno=150, col_offset=4), FunctionDef('_longcmd', arguments([Name('self', Param(), lineno=157, col_offset=17), Name('line', Param(), lineno=157, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=8), '_putcmd', Load(), lineno=158, col_offset=8), [Name('line', Load(), lineno=158, col_offset=21)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=159, col_offset=15), '_getlongresp', Load(), lineno=159, col_offset=15), [], [], None, None, lineno=159, col_offset=15), lineno=159, col_offset=8)], [], lineno=157, col_offset=4), FunctionDef('getwelcome', arguments([Name('self', Param(), lineno=164, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=165, col_offset=15), 'welcome', Load(), lineno=165, col_offset=15), lineno=165, col_offset=8)], [], lineno=164, col_offset=4), FunctionDef('set_debuglevel', arguments([Name('self', Param(), lineno=168, col_offset=23), Name('level', Param(), lineno=168, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=169, col_offset=8), '_debugging', Store(), lineno=169, col_offset=8)], Name('level', Load(), lineno=169, col_offset=26), lineno=169, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('user', arguments([Name('self', Param(), lineno=174, col_offset=13), Name('user', Param(), lineno=174, col_offset=19)], None, None, []), [Expr(Str('Send user name, return response\n\n        (should indicate password required).\n        ', lineno=178, col_offset=-1), lineno=178, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=179, col_offset=15), '_shortcmd', Load(), lineno=179, col_offset=15), [BinOp(Str('USER %s', lineno=179, col_offset=30), Mod(), Name('user', Load(), lineno=179, col_offset=42), lineno=179, col_offset=30)], [], None, None, lineno=179, col_offset=15), lineno=179, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('pass_', arguments([Name('self', Param(), lineno=182, col_offset=14), Name('pswd', Param(), lineno=182, col_offset=20)], None, None, []), [Expr(Str("Send password, return response\n\n        (response includes message count, mailbox size).\n\n        NB: mailbox is locked by server from here to 'quit()'\n        ", lineno=188, col_offset=-1), lineno=188, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=189, col_offset=15), '_shortcmd', Load(), lineno=189, col_offset=15), [BinOp(Str('PASS %s', lineno=189, col_offset=30), Mod(), Name('pswd', Load(), lineno=189, col_offset=42), lineno=189, col_offset=30)], [], None, None, lineno=189, col_offset=15), lineno=189, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('stat', arguments([Name('self', Param(), lineno=192, col_offset=13)], None, None, []), [Expr(Str('Get mailbox status.\n\n        Result is tuple of 2 ints (message count, mailbox size)\n        ', lineno=196, col_offset=-1), lineno=196, col_offset=-1), Assign([Name('retval', Store(), lineno=197, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=197, col_offset=17), '_shortcmd', Load(), lineno=197, col_offset=17), [Str('STAT', lineno=197, col_offset=32)], [], None, None, lineno=197, col_offset=17), lineno=197, col_offset=8), Assign([Name('rets', Store(), lineno=198, col_offset=8)], Call(Attribute(Name('retval', Load(), lineno=198, col_offset=15), 'split', Load(), lineno=198, col_offset=15), [], [], None, None, lineno=198, col_offset=15), lineno=198, col_offset=8), If(Attribute(Name('self', Load(), lineno=199, col_offset=11), '_debugging', Load(), lineno=199, col_offset=11), [Print(None, [Str('*stat*', lineno=199, col_offset=34), Call(Name('repr', Load(), lineno=199, col_offset=44), [Name('rets', Load(), lineno=199, col_offset=49)], [], None, None, lineno=199, col_offset=44)], True, lineno=199, col_offset=28)], [], lineno=199, col_offset=8), Assign([Name('numMessages', Store(), lineno=200, col_offset=8)], Call(Name('int', Load(), lineno=200, col_offset=22), [Subscript(Name('rets', Load(), lineno=200, col_offset=26), Index(Num(1, lineno=200, col_offset=31)), Load(), lineno=200, col_offset=26)], [], None, None, lineno=200, col_offset=22), lineno=200, col_offset=8), Assign([Name('sizeMessages', Store(), lineno=201, col_offset=8)], Call(Name('int', Load(), lineno=201, col_offset=23), [Subscript(Name('rets', Load(), lineno=201, col_offset=27), Index(Num(2, lineno=201, col_offset=32)), Load(), lineno=201, col_offset=27)], [], None, None, lineno=201, col_offset=23), lineno=201, col_offset=8), Return(Tuple([Name('numMessages', Load(), lineno=202, col_offset=16), Name('sizeMessages', Load(), lineno=202, col_offset=29)], Load(), lineno=202, col_offset=16), lineno=202, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('list', arguments([Name('self', Param(), lineno=205, col_offset=13), Name('which', Param(), lineno=205, col_offset=19)], None, None, [Name('None', Load(), lineno=205, col_offset=25)]), [Expr(Str('Request listing, return result.\n\n        Result without a message number argument is in form\n        [\'response\', [\'mesg_num octets\', ...], octets].\n\n        Result when a message number argument is given is a\n        single response: the "scan listing" for that message.\n        ', lineno=213, col_offset=-1), lineno=213, col_offset=-1), If(Compare(Name('which', Load(), lineno=214, col_offset=11), [IsNot()], [Name('None', Load(), lineno=214, col_offset=24)], lineno=214, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=215, col_offset=19), '_shortcmd', Load(), lineno=215, col_offset=19), [BinOp(Str('LIST %s', lineno=215, col_offset=34), Mod(), Name('which', Load(), lineno=215, col_offset=46), lineno=215, col_offset=34)], [], None, None, lineno=215, col_offset=19), lineno=215, col_offset=12)], [], lineno=214, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=216, col_offset=15), '_longcmd', Load(), lineno=216, col_offset=15), [Str('LIST', lineno=216, col_offset=29)], [], None, None, lineno=216, col_offset=15), lineno=216, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('retr', arguments([Name('self', Param(), lineno=219, col_offset=13), Name('which', Param(), lineno=219, col_offset=19)], None, None, []), [Expr(Str("Retrieve whole message number 'which'.\n\n        Result is in form ['response', ['line', ...], octets].\n        ", lineno=223, col_offset=-1), lineno=223, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=224, col_offset=15), '_longcmd', Load(), lineno=224, col_offset=15), [BinOp(Str('RETR %s', lineno=224, col_offset=29), Mod(), Name('which', Load(), lineno=224, col_offset=41), lineno=224, col_offset=29)], [], None, None, lineno=224, col_offset=15), lineno=224, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('dele', arguments([Name('self', Param(), lineno=227, col_offset=13), Name('which', Param(), lineno=227, col_offset=19)], None, None, []), [Expr(Str("Delete message number 'which'.\n\n        Result is 'response'.\n        ", lineno=231, col_offset=-1), lineno=231, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=232, col_offset=15), '_shortcmd', Load(), lineno=232, col_offset=15), [BinOp(Str('DELE %s', lineno=232, col_offset=30), Mod(), Name('which', Load(), lineno=232, col_offset=42), lineno=232, col_offset=30)], [], None, None, lineno=232, col_offset=15), lineno=232, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('noop', arguments([Name('self', Param(), lineno=235, col_offset=13)], None, None, []), [Expr(Str('Does nothing.\n\n        One supposes the response indicates the server is alive.\n        ', lineno=239, col_offset=-1), lineno=239, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=240, col_offset=15), '_shortcmd', Load(), lineno=240, col_offset=15), [Str('NOOP', lineno=240, col_offset=30)], [], None, None, lineno=240, col_offset=15), lineno=240, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('rset', arguments([Name('self', Param(), lineno=243, col_offset=13)], None, None, []), [Expr(Str('Unmark all messages marked for deletion.', lineno=244, col_offset=8), lineno=244, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=245, col_offset=15), '_shortcmd', Load(), lineno=245, col_offset=15), [Str('RSET', lineno=245, col_offset=30)], [], None, None, lineno=245, col_offset=15), lineno=245, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('quit', arguments([Name('self', Param(), lineno=248, col_offset=13)], None, None, []), [Expr(Str('Signoff: commit changes on server, unlock mailbox, close connection.', lineno=249, col_offset=8), lineno=249, col_offset=8), TryExcept([Assign([Name('resp', Store(), lineno=251, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=251, col_offset=19), '_shortcmd', Load(), lineno=251, col_offset=19), [Str('QUIT', lineno=251, col_offset=34)], [], None, None, lineno=251, col_offset=19), lineno=251, col_offset=12)], [ExceptHandler(Name('error_proto', Load(), lineno=252, col_offset=15), Name('val', Store(), lineno=252, col_offset=28), [Assign([Name('resp', Store(), lineno=253, col_offset=12)], Name('val', Load(), lineno=253, col_offset=19), lineno=253, col_offset=12)], lineno=252, col_offset=8)], [], lineno=250, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'file', Load(), lineno=254, col_offset=8), 'close', Load(), lineno=254, col_offset=8), [], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'sock', Load(), lineno=255, col_offset=8), 'close', Load(), lineno=255, col_offset=8), [], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=256, col_offset=12), 'file', Del(), lineno=256, col_offset=12), Attribute(Name('self', Load(), lineno=256, col_offset=23), 'sock', Del(), lineno=256, col_offset=23)], lineno=256, col_offset=8), Return(Name('resp', Load(), lineno=257, col_offset=15), lineno=257, col_offset=8)], [], lineno=248, col_offset=4), FunctionDef('rpop', arguments([Name('self', Param(), lineno=264, col_offset=13), Name('user', Param(), lineno=264, col_offset=19)], None, None, []), [Expr(Str('Not sure what this does.', lineno=265, col_offset=8), lineno=265, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=266, col_offset=15), '_shortcmd', Load(), lineno=266, col_offset=15), [BinOp(Str('RPOP %s', lineno=266, col_offset=30), Mod(), Name('user', Load(), lineno=266, col_offset=42), lineno=266, col_offset=30)], [], None, None, lineno=266, col_offset=15), lineno=266, col_offset=8)], [], lineno=264, col_offset=4), Assign([Name('timestamp', Store(), lineno=269, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=269, col_offset=16), 'compile', Load(), lineno=269, col_offset=16), [Str('\\+OK.*(<[^>]+>)', lineno=269, col_offset=27)], [], None, None, lineno=269, col_offset=16), lineno=269, col_offset=4), FunctionDef('apop', arguments([Name('self', Param(), lineno=271, col_offset=13), Name('user', Param(), lineno=271, col_offset=19), Name('secret', Param(), lineno=271, col_offset=25)], None, None, []), [Expr(Str("Authorisation\n\n        - only possible if server has supplied a timestamp in initial greeting.\n\n        Args:\n                user    - mailbox user;\n                secret  - secret shared between client and server.\n\n        NB: mailbox is locked by server from here to 'quit()'\n        ", lineno=281, col_offset=-1), lineno=281, col_offset=-1), Assign([Name('m', Store(), lineno=282, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=282, col_offset=12), 'timestamp', Load(), lineno=282, col_offset=12), 'match', Load(), lineno=282, col_offset=12), [Attribute(Name('self', Load(), lineno=282, col_offset=33), 'welcome', Load(), lineno=282, col_offset=33)], [], None, None, lineno=282, col_offset=12), lineno=282, col_offset=8), If(UnaryOp(Not(), Name('m', Load(), lineno=283, col_offset=15), lineno=283, col_offset=11), [Raise(Call(Name('error_proto', Load(), lineno=284, col_offset=18), [Str('-ERR APOP not supported by server', lineno=284, col_offset=30)], [], None, None, lineno=284, col_offset=18), None, None, lineno=284, col_offset=12)], [], lineno=283, col_offset=8), Import([alias('hashlib', None)], lineno=285, col_offset=8), Assign([Name('digest', Store(), lineno=286, col_offset=8)], Call(Attribute(Call(Attribute(Name('hashlib', Load(), lineno=286, col_offset=17), 'md5', Load(), lineno=286, col_offset=17), [BinOp(Call(Attribute(Name('m', Load(), lineno=286, col_offset=29), 'group', Load(), lineno=286, col_offset=29), [Num(1, lineno=286, col_offset=37)], [], None, None, lineno=286, col_offset=29), Add(), Name('secret', Load(), lineno=286, col_offset=40), lineno=286, col_offset=29)], [], None, None, lineno=286, col_offset=17), 'digest', Load(), lineno=286, col_offset=17), [], [], None, None, lineno=286, col_offset=17), lineno=286, col_offset=8), Assign([Name('digest', Store(), lineno=287, col_offset=8)], Call(Attribute(Str('', lineno=287, col_offset=17), 'join', Load(), lineno=287, col_offset=17), [Call(Name('map', Load(), lineno=287, col_offset=25), [Lambda(arguments([Name('x', Param(), lineno=287, col_offset=36)], None, None, []), BinOp(Str('%02x', lineno=287, col_offset=38), Mod(), Call(Name('ord', Load(), lineno=287, col_offset=45), [Name('x', Load(), lineno=287, col_offset=49)], [], None, None, lineno=287, col_offset=45), lineno=287, col_offset=38), lineno=287, col_offset=29), Name('digest', Load(), lineno=287, col_offset=53)], [], None, None, lineno=287, col_offset=25)], [], None, None, lineno=287, col_offset=17), lineno=287, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=288, col_offset=15), '_shortcmd', Load(), lineno=288, col_offset=15), [BinOp(Str('APOP %s %s', lineno=288, col_offset=30), Mod(), Tuple([Name('user', Load(), lineno=288, col_offset=46), Name('digest', Load(), lineno=288, col_offset=52)], Load(), lineno=288, col_offset=46), lineno=288, col_offset=30)], [], None, None, lineno=288, col_offset=15), lineno=288, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('top', arguments([Name('self', Param(), lineno=291, col_offset=12), Name('which', Param(), lineno=291, col_offset=18), Name('howmuch', Param(), lineno=291, col_offset=25)], None, None, []), [Expr(Str("Retrieve message header of message number 'which'\n        and first 'howmuch' lines of message body.\n\n        Result is in form ['response', ['line', ...], octets].\n        ", lineno=296, col_offset=-1), lineno=296, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=297, col_offset=15), '_longcmd', Load(), lineno=297, col_offset=15), [BinOp(Str('TOP %s %s', lineno=297, col_offset=29), Mod(), Tuple([Name('which', Load(), lineno=297, col_offset=44), Name('howmuch', Load(), lineno=297, col_offset=51)], Load(), lineno=297, col_offset=44), lineno=297, col_offset=29)], [], None, None, lineno=297, col_offset=15), lineno=297, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('uidl', arguments([Name('self', Param(), lineno=300, col_offset=13), Name('which', Param(), lineno=300, col_offset=19)], None, None, [Name('None', Load(), lineno=300, col_offset=25)]), [Expr(Str("Return message digest (unique id) list.\n\n        If 'which', result contains unique id for that message\n        in the form 'response mesgnum uid', otherwise result is\n        the list ['response', ['mesgnum uid', ...], octets]\n        ", lineno=306, col_offset=-1), lineno=306, col_offset=-1), If(Compare(Name('which', Load(), lineno=307, col_offset=11), [IsNot()], [Name('None', Load(), lineno=307, col_offset=24)], lineno=307, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=308, col_offset=19), '_shortcmd', Load(), lineno=308, col_offset=19), [BinOp(Str('UIDL %s', lineno=308, col_offset=34), Mod(), Name('which', Load(), lineno=308, col_offset=46), lineno=308, col_offset=34)], [], None, None, lineno=308, col_offset=19), lineno=308, col_offset=12)], [], lineno=307, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=309, col_offset=15), '_longcmd', Load(), lineno=309, col_offset=15), [Str('UIDL', lineno=309, col_offset=29)], [], None, None, lineno=309, col_offset=15), lineno=309, col_offset=8)], [], lineno=300, col_offset=4)], [], lineno=36, col_offset=0), TryExcept([Import([alias('ssl', None)], lineno=312, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=313, col_offset=7), None, [Pass( lineno=314, col_offset=4)], lineno=313, col_offset=0)], [ClassDef('POP3_SSL', [Name('POP3', Load(), lineno=317, col_offset=19)], [Expr(Str('POP3 client class over SSL connection\n\n        Instantiate with: POP3_SSL(hostname, port=995, keyfile=None, certfile=None)\n\n               hostname - the hostname of the pop3 over ssl server\n               port - port number\n               keyfile - PEM formatted file that countains your private key\n               certfile - PEM formatted certificate chain file\n\n            See the methods of the parent class POP3 for more documentation.\n        ', lineno=328, col_offset=-1), lineno=328, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=330, col_offset=21), Name('host', Param(), lineno=330, col_offset=27), Name('port', Param(), lineno=330, col_offset=33), Name('keyfile', Param(), lineno=330, col_offset=55), Name('certfile', Param(), lineno=330, col_offset=71)], None, None, [Name('POP3_SSL_PORT', Load(), lineno=330, col_offset=40), Name('None', Load(), lineno=330, col_offset=65), Name('None', Load(), lineno=330, col_offset=82)]), [Assign([Attribute(Name('self', Load(), lineno=331, col_offset=12), 'host', Store(), lineno=331, col_offset=12)], Name('host', Load(), lineno=331, col_offset=24), lineno=331, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=332, col_offset=12), 'port', Store(), lineno=332, col_offset=12)], Name('port', Load(), lineno=332, col_offset=24), lineno=332, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=333, col_offset=12), 'keyfile', Store(), lineno=333, col_offset=12)], Name('keyfile', Load(), lineno=333, col_offset=27), lineno=333, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=334, col_offset=12), 'certfile', Store(), lineno=334, col_offset=12)], Name('certfile', Load(), lineno=334, col_offset=28), lineno=334, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=335, col_offset=12), 'buffer', Store(), lineno=335, col_offset=12)], Str('', lineno=335, col_offset=26), lineno=335, col_offset=12), Assign([Name('msg', Store(), lineno=336, col_offset=12)], Str('getaddrinfo returns an empty list', lineno=336, col_offset=18), lineno=336, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=337, col_offset=12), 'sock', Store(), lineno=337, col_offset=12)], Name('None', Load(), lineno=337, col_offset=24), lineno=337, col_offset=12), For(Name('res', Store(), lineno=338, col_offset=16), Call(Attribute(Name('socket', Load(), lineno=338, col_offset=23), 'getaddrinfo', Load(), lineno=338, col_offset=23), [Attribute(Name('self', Load(), lineno=338, col_offset=42), 'host', Load(), lineno=338, col_offset=42), Attribute(Name('self', Load(), lineno=338, col_offset=53), 'port', Load(), lineno=338, col_offset=53), Num(0, lineno=338, col_offset=64), Attribute(Name('socket', Load(), lineno=338, col_offset=67), 'SOCK_STREAM', Load(), lineno=338, col_offset=67)], [], None, None, lineno=338, col_offset=23), [Assign([Tuple([Name('af', Store(), lineno=339, col_offset=16), Name('socktype', Store(), lineno=339, col_offset=20), Name('proto', Store(), lineno=339, col_offset=30), Name('canonname', Store(), lineno=339, col_offset=37), Name('sa', Store(), lineno=339, col_offset=48)], Store(), lineno=339, col_offset=16)], Name('res', Load(), lineno=339, col_offset=53), lineno=339, col_offset=16), TryExcept([Assign([Attribute(Name('self', Load(), lineno=341, col_offset=20), 'sock', Store(), lineno=341, col_offset=20)], Call(Attribute(Name('socket', Load(), lineno=341, col_offset=32), 'socket', Load(), lineno=341, col_offset=32), [Name('af', Load(), lineno=341, col_offset=46), Name('socktype', Load(), lineno=341, col_offset=50), Name('proto', Load(), lineno=341, col_offset=60)], [], None, None, lineno=341, col_offset=32), lineno=341, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=342, col_offset=20), 'sock', Load(), lineno=342, col_offset=20), 'connect', Load(), lineno=342, col_offset=20), [Name('sa', Load(), lineno=342, col_offset=38)], [], None, None, lineno=342, col_offset=20), lineno=342, col_offset=20)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=343, col_offset=23), 'error', Load(), lineno=343, col_offset=23), Name('msg', Store(), lineno=343, col_offset=37), [If(Attribute(Name('self', Load(), lineno=344, col_offset=23), 'sock', Load(), lineno=344, col_offset=23), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=345, col_offset=24), 'sock', Load(), lineno=345, col_offset=24), 'close', Load(), lineno=345, col_offset=24), [], [], None, None, lineno=345, col_offset=24), lineno=345, col_offset=24)], [], lineno=344, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=346, col_offset=20), 'sock', Store(), lineno=346, col_offset=20)], Name('None', Load(), lineno=346, col_offset=32), lineno=346, col_offset=20), Continue( lineno=347, col_offset=20)], lineno=343, col_offset=16)], [], lineno=340, col_offset=16), Break( lineno=348, col_offset=16)], [], lineno=338, col_offset=12), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=349, col_offset=19), 'sock', Load(), lineno=349, col_offset=19), lineno=349, col_offset=15), [Raise(Attribute(Name('socket', Load(), lineno=350, col_offset=22), 'error', Load(), lineno=350, col_offset=22), Name('msg', Load(), lineno=350, col_offset=36), None, lineno=350, col_offset=16)], [], lineno=349, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=351, col_offset=12), 'file', Store(), lineno=351, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=351, col_offset=24), 'sock', Load(), lineno=351, col_offset=24), 'makefile', Load(), lineno=351, col_offset=24), [Str('rb', lineno=351, col_offset=43)], [], None, None, lineno=351, col_offset=24), lineno=351, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=352, col_offset=12), 'sslobj', Store(), lineno=352, col_offset=12)], Call(Attribute(Name('ssl', Load(), lineno=352, col_offset=26), 'wrap_socket', Load(), lineno=352, col_offset=26), [Attribute(Name('self', Load(), lineno=352, col_offset=42), 'sock', Load(), lineno=352, col_offset=42), Attribute(Name('self', Load(), lineno=352, col_offset=53), 'keyfile', Load(), lineno=352, col_offset=53), Attribute(Name('self', Load(), lineno=352, col_offset=67), 'certfile', Load(), lineno=352, col_offset=67)], [], None, None, lineno=352, col_offset=26), lineno=352, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=353, col_offset=12), '_debugging', Store(), lineno=353, col_offset=12)], Num(0, lineno=353, col_offset=30), lineno=353, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=354, col_offset=12), 'welcome', Store(), lineno=354, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=354, col_offset=27), '_getresp', Load(), lineno=354, col_offset=27), [], [], None, None, lineno=354, col_offset=27), lineno=354, col_offset=12)], [], lineno=330, col_offset=8), FunctionDef('_fillBuffer', arguments([Name('self', Param(), lineno=356, col_offset=24)], None, None, []), [Assign([Name('localbuf', Store(), lineno=357, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=357, col_offset=23), 'sslobj', Load(), lineno=357, col_offset=23), 'read', Load(), lineno=357, col_offset=23), [], [], None, None, lineno=357, col_offset=23), lineno=357, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=358, col_offset=15), [Name('localbuf', Load(), lineno=358, col_offset=19)], [], None, None, lineno=358, col_offset=15), [Eq()], [Num(0, lineno=358, col_offset=32)], lineno=358, col_offset=15), [Raise(Call(Name('error_proto', Load(), lineno=359, col_offset=22), [Str('-ERR EOF', lineno=359, col_offset=34)], [], None, None, lineno=359, col_offset=22), None, None, lineno=359, col_offset=16)], [], lineno=358, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=360, col_offset=12), 'buffer', Store(), lineno=360, col_offset=12), Add(), Name('localbuf', Load(), lineno=360, col_offset=27), lineno=360, col_offset=12)], [], lineno=356, col_offset=8), FunctionDef('_getline', arguments([Name('self', Param(), lineno=362, col_offset=21)], None, None, []), [Assign([Name('line', Store(), lineno=363, col_offset=12)], Str('', lineno=363, col_offset=19), lineno=363, col_offset=12), Assign([Name('renewline', Store(), lineno=364, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=364, col_offset=24), 'compile', Load(), lineno=364, col_offset=24), [Str('.*?\\n', lineno=364, col_offset=35)], [], None, None, lineno=364, col_offset=24), lineno=364, col_offset=12), Assign([Name('match', Store(), lineno=365, col_offset=12)], Call(Attribute(Name('renewline', Load(), lineno=365, col_offset=20), 'match', Load(), lineno=365, col_offset=20), [Attribute(Name('self', Load(), lineno=365, col_offset=36), 'buffer', Load(), lineno=365, col_offset=36)], [], None, None, lineno=365, col_offset=20), lineno=365, col_offset=12), While(UnaryOp(Not(), Name('match', Load(), lineno=366, col_offset=22), lineno=366, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=16), '_fillBuffer', Load(), lineno=367, col_offset=16), [], [], None, None, lineno=367, col_offset=16), lineno=367, col_offset=16), Assign([Name('match', Store(), lineno=368, col_offset=16)], Call(Attribute(Name('renewline', Load(), lineno=368, col_offset=24), 'match', Load(), lineno=368, col_offset=24), [Attribute(Name('self', Load(), lineno=368, col_offset=40), 'buffer', Load(), lineno=368, col_offset=40)], [], None, None, lineno=368, col_offset=24), lineno=368, col_offset=16)], [], lineno=366, col_offset=12), Assign([Name('line', Store(), lineno=369, col_offset=12)], Call(Attribute(Name('match', Load(), lineno=369, col_offset=19), 'group', Load(), lineno=369, col_offset=19), [Num(0, lineno=369, col_offset=31)], [], None, None, lineno=369, col_offset=19), lineno=369, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=370, col_offset=12), 'buffer', Store(), lineno=370, col_offset=12)], Call(Attribute(Name('renewline', Load(), lineno=370, col_offset=26), 'sub', Load(), lineno=370, col_offset=26), [Str('', lineno=370, col_offset=40), Attribute(Name('self', Load(), lineno=370, col_offset=44), 'buffer', Load(), lineno=370, col_offset=44), Num(1, lineno=370, col_offset=57)], [], None, None, lineno=370, col_offset=26), lineno=370, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=371, col_offset=15), '_debugging', Load(), lineno=371, col_offset=15), [Gt()], [Num(1, lineno=371, col_offset=33)], lineno=371, col_offset=15), [Print(None, [Str('*get*', lineno=371, col_offset=42), Call(Name('repr', Load(), lineno=371, col_offset=51), [Name('line', Load(), lineno=371, col_offset=56)], [], None, None, lineno=371, col_offset=51)], True, lineno=371, col_offset=36)], [], lineno=371, col_offset=12), Assign([Name('octets', Store(), lineno=373, col_offset=12)], Call(Name('len', Load(), lineno=373, col_offset=21), [Name('line', Load(), lineno=373, col_offset=25)], [], None, None, lineno=373, col_offset=21), lineno=373, col_offset=12), If(Compare(Subscript(Name('line', Load(), lineno=374, col_offset=15), Slice(Num(-2, lineno=374, col_offset=21), None, None), Load(), lineno=374, col_offset=15), [Eq()], [Name('CRLF', Load(), lineno=374, col_offset=28)], lineno=374, col_offset=15), [Return(Tuple([Subscript(Name('line', Load(), lineno=375, col_offset=23), Slice(None, Num(-2, lineno=375, col_offset=30), None), Load(), lineno=375, col_offset=23), Name('octets', Load(), lineno=375, col_offset=34)], Load(), lineno=375, col_offset=23), lineno=375, col_offset=16)], [], lineno=374, col_offset=12), If(Compare(Subscript(Name('line', Load(), lineno=376, col_offset=15), Index(Num(0, lineno=376, col_offset=20)), Load(), lineno=376, col_offset=15), [Eq()], [Name('CR', Load(), lineno=376, col_offset=26)], lineno=376, col_offset=15), [Return(Tuple([Subscript(Name('line', Load(), lineno=377, col_offset=23), Slice(Num(1, lineno=377, col_offset=28), Num(-1, lineno=377, col_offset=31), None), Load(), lineno=377, col_offset=23), Name('octets', Load(), lineno=377, col_offset=35)], Load(), lineno=377, col_offset=23), lineno=377, col_offset=16)], [], lineno=376, col_offset=12), Return(Tuple([Subscript(Name('line', Load(), lineno=378, col_offset=19), Slice(None, Num(-1, lineno=378, col_offset=26), None), Load(), lineno=378, col_offset=19), Name('octets', Load(), lineno=378, col_offset=30)], Load(), lineno=378, col_offset=19), lineno=378, col_offset=12)], [], lineno=362, col_offset=8), FunctionDef('_putline', arguments([Name('self', Param(), lineno=380, col_offset=21), Name('line', Param(), lineno=380, col_offset=27)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=381, col_offset=15), '_debugging', Load(), lineno=381, col_offset=15), [Gt()], [Num(1, lineno=381, col_offset=33)], lineno=381, col_offset=15), [Print(None, [Str('*put*', lineno=381, col_offset=42), Call(Name('repr', Load(), lineno=381, col_offset=51), [Name('line', Load(), lineno=381, col_offset=56)], [], None, None, lineno=381, col_offset=51)], True, lineno=381, col_offset=36)], [], lineno=381, col_offset=12), AugAssign(Name('line', Store(), lineno=382, col_offset=12), Add(), Name('CRLF', Load(), lineno=382, col_offset=20), lineno=382, col_offset=12), Assign([Name('bytes', Store(), lineno=383, col_offset=12)], Call(Name('len', Load(), lineno=383, col_offset=20), [Name('line', Load(), lineno=383, col_offset=24)], [], None, None, lineno=383, col_offset=20), lineno=383, col_offset=12), While(Compare(Name('bytes', Load(), lineno=384, col_offset=18), [Gt()], [Num(0, lineno=384, col_offset=26)], lineno=384, col_offset=18), [Assign([Name('sent', Store(), lineno=385, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=385, col_offset=23), 'sslobj', Load(), lineno=385, col_offset=23), 'write', Load(), lineno=385, col_offset=23), [Name('line', Load(), lineno=385, col_offset=41)], [], None, None, lineno=385, col_offset=23), lineno=385, col_offset=16), If(Compare(Name('sent', Load(), lineno=386, col_offset=19), [Eq()], [Name('bytes', Load(), lineno=386, col_offset=27)], lineno=386, col_offset=19), [Break( lineno=387, col_offset=20)], [], lineno=386, col_offset=16), Assign([Name('line', Store(), lineno=388, col_offset=16)], Subscript(Name('line', Load(), lineno=388, col_offset=23), Slice(Name('sent', Load(), lineno=388, col_offset=28), None, None), Load(), lineno=388, col_offset=23), lineno=388, col_offset=16), Assign([Name('bytes', Store(), lineno=389, col_offset=16)], BinOp(Name('bytes', Load(), lineno=389, col_offset=24), Sub(), Name('sent', Load(), lineno=389, col_offset=32), lineno=389, col_offset=24), lineno=389, col_offset=16)], [], lineno=384, col_offset=12)], [], lineno=380, col_offset=8), FunctionDef('quit', arguments([Name('self', Param(), lineno=391, col_offset=17)], None, None, []), [Expr(Str('Signoff: commit changes on server, unlock mailbox, close connection.', lineno=392, col_offset=12), lineno=392, col_offset=12), TryExcept([Assign([Name('resp', Store(), lineno=394, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=394, col_offset=23), '_shortcmd', Load(), lineno=394, col_offset=23), [Str('QUIT', lineno=394, col_offset=38)], [], None, None, lineno=394, col_offset=23), lineno=394, col_offset=16)], [ExceptHandler(Name('error_proto', Load(), lineno=395, col_offset=19), Name('val', Store(), lineno=395, col_offset=32), [Assign([Name('resp', Store(), lineno=396, col_offset=16)], Name('val', Load(), lineno=396, col_offset=23), lineno=396, col_offset=16)], lineno=395, col_offset=12)], [], lineno=393, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=397, col_offset=12), 'sock', Load(), lineno=397, col_offset=12), 'close', Load(), lineno=397, col_offset=12), [], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12), Delete([Attribute(Name('self', Load(), lineno=398, col_offset=16), 'sslobj', Del(), lineno=398, col_offset=16), Attribute(Name('self', Load(), lineno=398, col_offset=29), 'sock', Del(), lineno=398, col_offset=29)], lineno=398, col_offset=12), Return(Name('resp', Load(), lineno=399, col_offset=19), lineno=399, col_offset=12)], [], lineno=391, col_offset=8)], [], lineno=317, col_offset=4), Expr(Call(Attribute(Name('__all__', Load(), lineno=401, col_offset=4), 'append', Load(), lineno=401, col_offset=4), [Str('POP3_SSL', lineno=401, col_offset=19)], [], None, None, lineno=401, col_offset=4), lineno=401, col_offset=4)], lineno=311, col_offset=0), If(Compare(Name('__name__', Load(), lineno=403, col_offset=3), [Eq()], [Str('__main__', lineno=403, col_offset=15)], lineno=403, col_offset=3), [Import([alias('sys', None)], lineno=404, col_offset=4), Assign([Name('a', Store(), lineno=405, col_offset=4)], Call(Name('POP3', Load(), lineno=405, col_offset=8), [Subscript(Attribute(Name('sys', Load(), lineno=405, col_offset=13), 'argv', Load(), lineno=405, col_offset=13), Index(Num(1, lineno=405, col_offset=22)), Load(), lineno=405, col_offset=13)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=4), Print(None, [Call(Attribute(Name('a', Load(), lineno=406, col_offset=10), 'getwelcome', Load(), lineno=406, col_offset=10), [], [], None, None, lineno=406, col_offset=10)], True, lineno=406, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=407, col_offset=4), 'user', Load(), lineno=407, col_offset=4), [Subscript(Attribute(Name('sys', Load(), lineno=407, col_offset=11), 'argv', Load(), lineno=407, col_offset=11), Index(Num(2, lineno=407, col_offset=20)), Load(), lineno=407, col_offset=11)], [], None, None, lineno=407, col_offset=4), lineno=407, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=408, col_offset=4), 'pass_', Load(), lineno=408, col_offset=4), [Subscript(Attribute(Name('sys', Load(), lineno=408, col_offset=12), 'argv', Load(), lineno=408, col_offset=12), Index(Num(3, lineno=408, col_offset=21)), Load(), lineno=408, col_offset=12)], [], None, None, lineno=408, col_offset=4), lineno=408, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=409, col_offset=4), 'list', Load(), lineno=409, col_offset=4), [], [], None, None, lineno=409, col_offset=4), lineno=409, col_offset=4), Assign([Tuple([Name('numMsgs', Store(), lineno=410, col_offset=5), Name('totalSize', Store(), lineno=410, col_offset=14)], Store(), lineno=410, col_offset=5)], Call(Attribute(Name('a', Load(), lineno=410, col_offset=27), 'stat', Load(), lineno=410, col_offset=27), [], [], None, None, lineno=410, col_offset=27), lineno=410, col_offset=4), For(Name('i', Store(), lineno=411, col_offset=8), Call(Name('range', Load(), lineno=411, col_offset=13), [Num(1, lineno=411, col_offset=19), BinOp(Name('numMsgs', Load(), lineno=411, col_offset=22), Add(), Num(1, lineno=411, col_offset=32), lineno=411, col_offset=22)], [], None, None, lineno=411, col_offset=13), [Assign([Tuple([Name('header', Store(), lineno=412, col_offset=9), Name('msg', Store(), lineno=412, col_offset=17), Name('octets', Store(), lineno=412, col_offset=22)], Store(), lineno=412, col_offset=9)], Call(Attribute(Name('a', Load(), lineno=412, col_offset=32), 'retr', Load(), lineno=412, col_offset=32), [Name('i', Load(), lineno=412, col_offset=39)], [], None, None, lineno=412, col_offset=32), lineno=412, col_offset=8), Print(None, [BinOp(Str('Message %d:', lineno=413, col_offset=14), Mod(), Name('i', Load(), lineno=413, col_offset=30), lineno=413, col_offset=14)], True, lineno=413, col_offset=8), For(Name('line', Store(), lineno=414, col_offset=12), Name('msg', Load(), lineno=414, col_offset=20), [Print(None, [BinOp(Str('   ', lineno=415, col_offset=18), Add(), Name('line', Load(), lineno=415, col_offset=26), lineno=415, col_offset=18)], True, lineno=415, col_offset=12)], [], lineno=414, col_offset=8), Print(None, [Str('-----------------------', lineno=416, col_offset=14)], True, lineno=416, col_offset=8)], [], lineno=411, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=417, col_offset=4), 'quit', Load(), lineno=417, col_offset=4), [], [], None, None, lineno=417, col_offset=4), lineno=417, col_offset=4)], [], lineno=403, col_offset=0)])
