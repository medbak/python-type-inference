Module([Expr(Str('Bisection algorithms.', lineno=1, col_offset=0), lineno=1, col_offset=0), FunctionDef('insort_right', arguments([Name('a', Param(), lineno=3, col_offset=17), Name('x', Param(), lineno=3, col_offset=20), Name('lo', Param(), lineno=3, col_offset=23), Name('hi', Param(), lineno=3, col_offset=29)], None, None, [Num(0, lineno=3, col_offset=26), Name('None', Load(), lineno=3, col_offset=32)]), [Expr(Str('Insert item x in list a, and keep it sorted assuming a is sorted.\n\n    If x is already in a, insert it to the right of the rightmost x.\n\n    Optional args lo (default 0) and hi (default len(a)) bound the\n    slice of a to be searched.\n    ', lineno=10, col_offset=-1), lineno=10, col_offset=-1), If(Compare(Name('lo', Load(), lineno=12, col_offset=7), [Lt()], [Num(0, lineno=12, col_offset=12)], lineno=12, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=13, col_offset=14), [Str('lo must be non-negative', lineno=13, col_offset=25)], [], None, None, lineno=13, col_offset=14), None, None, lineno=13, col_offset=8)], [], lineno=12, col_offset=4), If(Compare(Name('hi', Load(), lineno=14, col_offset=7), [Is()], [Name('None', Load(), lineno=14, col_offset=13)], lineno=14, col_offset=7), [Assign([Name('hi', Store(), lineno=15, col_offset=8)], Call(Name('len', Load(), lineno=15, col_offset=13), [Name('a', Load(), lineno=15, col_offset=17)], [], None, None, lineno=15, col_offset=13), lineno=15, col_offset=8)], [], lineno=14, col_offset=4), While(Compare(Name('lo', Load(), lineno=16, col_offset=10), [Lt()], [Name('hi', Load(), lineno=16, col_offset=15)], lineno=16, col_offset=10), [Assign([Name('mid', Store(), lineno=17, col_offset=8)], BinOp(BinOp(Name('lo', Load(), lineno=17, col_offset=15), Add(), Name('hi', Load(), lineno=17, col_offset=18), lineno=17, col_offset=15), FloorDiv(), Num(2, lineno=17, col_offset=23), lineno=17, col_offset=14), lineno=17, col_offset=8), If(Compare(Name('x', Load(), lineno=18, col_offset=11), [Lt()], [Subscript(Name('a', Load(), lineno=18, col_offset=15), Index(Name('mid', Load(), lineno=18, col_offset=17)), Load(), lineno=18, col_offset=15)], lineno=18, col_offset=11), [Assign([Name('hi', Store(), lineno=18, col_offset=23)], Name('mid', Load(), lineno=18, col_offset=28), lineno=18, col_offset=23)], [Assign([Name('lo', Store(), lineno=19, col_offset=14)], BinOp(Name('mid', Load(), lineno=19, col_offset=19), Add(), Num(1, lineno=19, col_offset=23), lineno=19, col_offset=19), lineno=19, col_offset=14)], lineno=18, col_offset=8)], [], lineno=16, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=20, col_offset=4), 'insert', Load(), lineno=20, col_offset=4), [Name('lo', Load(), lineno=20, col_offset=13), Name('x', Load(), lineno=20, col_offset=17)], [], None, None, lineno=20, col_offset=4), lineno=20, col_offset=4)], [], lineno=3, col_offset=0), Assign([Name('insort', Store(), lineno=22, col_offset=0)], Name('insort_right', Load(), lineno=22, col_offset=9), lineno=22, col_offset=0), FunctionDef('bisect_right', arguments([Name('a', Param(), lineno=24, col_offset=17), Name('x', Param(), lineno=24, col_offset=20), Name('lo', Param(), lineno=24, col_offset=23), Name('hi', Param(), lineno=24, col_offset=29)], None, None, [Num(0, lineno=24, col_offset=26), Name('None', Load(), lineno=24, col_offset=32)]), [Expr(Str('Return the index where to insert item x in list a, assuming a is sorted.\n\n    The return value i is such that all e in a[:i] have e <= x, and all e in\n    a[i:] have e > x.  So if x already appears in the list, a.insert(x) will\n    insert just after the rightmost x already there.\n\n    Optional args lo (default 0) and hi (default len(a)) bound the\n    slice of a to be searched.\n    ', lineno=33, col_offset=-1), lineno=33, col_offset=-1), If(Compare(Name('lo', Load(), lineno=35, col_offset=7), [Lt()], [Num(0, lineno=35, col_offset=12)], lineno=35, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=36, col_offset=14), [Str('lo must be non-negative', lineno=36, col_offset=25)], [], None, None, lineno=36, col_offset=14), None, None, lineno=36, col_offset=8)], [], lineno=35, col_offset=4), If(Compare(Name('hi', Load(), lineno=37, col_offset=7), [Is()], [Name('None', Load(), lineno=37, col_offset=13)], lineno=37, col_offset=7), [Assign([Name('hi', Store(), lineno=38, col_offset=8)], Call(Name('len', Load(), lineno=38, col_offset=13), [Name('a', Load(), lineno=38, col_offset=17)], [], None, None, lineno=38, col_offset=13), lineno=38, col_offset=8)], [], lineno=37, col_offset=4), While(Compare(Name('lo', Load(), lineno=39, col_offset=10), [Lt()], [Name('hi', Load(), lineno=39, col_offset=15)], lineno=39, col_offset=10), [Assign([Name('mid', Store(), lineno=40, col_offset=8)], BinOp(BinOp(Name('lo', Load(), lineno=40, col_offset=15), Add(), Name('hi', Load(), lineno=40, col_offset=18), lineno=40, col_offset=15), FloorDiv(), Num(2, lineno=40, col_offset=23), lineno=40, col_offset=14), lineno=40, col_offset=8), If(Compare(Name('x', Load(), lineno=41, col_offset=11), [Lt()], [Subscript(Name('a', Load(), lineno=41, col_offset=15), Index(Name('mid', Load(), lineno=41, col_offset=17)), Load(), lineno=41, col_offset=15)], lineno=41, col_offset=11), [Assign([Name('hi', Store(), lineno=41, col_offset=23)], Name('mid', Load(), lineno=41, col_offset=28), lineno=41, col_offset=23)], [Assign([Name('lo', Store(), lineno=42, col_offset=14)], BinOp(Name('mid', Load(), lineno=42, col_offset=19), Add(), Num(1, lineno=42, col_offset=23), lineno=42, col_offset=19), lineno=42, col_offset=14)], lineno=41, col_offset=8)], [], lineno=39, col_offset=4), Return(Name('lo', Load(), lineno=43, col_offset=11), lineno=43, col_offset=4)], [], lineno=24, col_offset=0), Assign([Name('bisect', Store(), lineno=45, col_offset=0)], Name('bisect_right', Load(), lineno=45, col_offset=9), lineno=45, col_offset=0), FunctionDef('insort_left', arguments([Name('a', Param(), lineno=47, col_offset=16), Name('x', Param(), lineno=47, col_offset=19), Name('lo', Param(), lineno=47, col_offset=22), Name('hi', Param(), lineno=47, col_offset=28)], None, None, [Num(0, lineno=47, col_offset=25), Name('None', Load(), lineno=47, col_offset=31)]), [Expr(Str('Insert item x in list a, and keep it sorted assuming a is sorted.\n\n    If x is already in a, insert it to the left of the leftmost x.\n\n    Optional args lo (default 0) and hi (default len(a)) bound the\n    slice of a to be searched.\n    ', lineno=54, col_offset=-1), lineno=54, col_offset=-1), If(Compare(Name('lo', Load(), lineno=56, col_offset=7), [Lt()], [Num(0, lineno=56, col_offset=12)], lineno=56, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=57, col_offset=14), [Str('lo must be non-negative', lineno=57, col_offset=25)], [], None, None, lineno=57, col_offset=14), None, None, lineno=57, col_offset=8)], [], lineno=56, col_offset=4), If(Compare(Name('hi', Load(), lineno=58, col_offset=7), [Is()], [Name('None', Load(), lineno=58, col_offset=13)], lineno=58, col_offset=7), [Assign([Name('hi', Store(), lineno=59, col_offset=8)], Call(Name('len', Load(), lineno=59, col_offset=13), [Name('a', Load(), lineno=59, col_offset=17)], [], None, None, lineno=59, col_offset=13), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), While(Compare(Name('lo', Load(), lineno=60, col_offset=10), [Lt()], [Name('hi', Load(), lineno=60, col_offset=15)], lineno=60, col_offset=10), [Assign([Name('mid', Store(), lineno=61, col_offset=8)], BinOp(BinOp(Name('lo', Load(), lineno=61, col_offset=15), Add(), Name('hi', Load(), lineno=61, col_offset=18), lineno=61, col_offset=15), FloorDiv(), Num(2, lineno=61, col_offset=23), lineno=61, col_offset=14), lineno=61, col_offset=8), If(Compare(Subscript(Name('a', Load(), lineno=62, col_offset=11), Index(Name('mid', Load(), lineno=62, col_offset=13)), Load(), lineno=62, col_offset=11), [Lt()], [Name('x', Load(), lineno=62, col_offset=20)], lineno=62, col_offset=11), [Assign([Name('lo', Store(), lineno=62, col_offset=23)], BinOp(Name('mid', Load(), lineno=62, col_offset=28), Add(), Num(1, lineno=62, col_offset=32), lineno=62, col_offset=28), lineno=62, col_offset=23)], [Assign([Name('hi', Store(), lineno=63, col_offset=14)], Name('mid', Load(), lineno=63, col_offset=19), lineno=63, col_offset=14)], lineno=62, col_offset=8)], [], lineno=60, col_offset=4), Expr(Call(Attribute(Name('a', Load(), lineno=64, col_offset=4), 'insert', Load(), lineno=64, col_offset=4), [Name('lo', Load(), lineno=64, col_offset=13), Name('x', Load(), lineno=64, col_offset=17)], [], None, None, lineno=64, col_offset=4), lineno=64, col_offset=4)], [], lineno=47, col_offset=0), FunctionDef('bisect_left', arguments([Name('a', Param(), lineno=67, col_offset=16), Name('x', Param(), lineno=67, col_offset=19), Name('lo', Param(), lineno=67, col_offset=22), Name('hi', Param(), lineno=67, col_offset=28)], None, None, [Num(0, lineno=67, col_offset=25), Name('None', Load(), lineno=67, col_offset=31)]), [Expr(Str('Return the index where to insert item x in list a, assuming a is sorted.\n\n    The return value i is such that all e in a[:i] have e < x, and all e in\n    a[i:] have e >= x.  So if x already appears in the list, a.insert(x) will\n    insert just before the leftmost x already there.\n\n    Optional args lo (default 0) and hi (default len(a)) bound the\n    slice of a to be searched.\n    ', lineno=76, col_offset=-1), lineno=76, col_offset=-1), If(Compare(Name('lo', Load(), lineno=78, col_offset=7), [Lt()], [Num(0, lineno=78, col_offset=12)], lineno=78, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=79, col_offset=14), [Str('lo must be non-negative', lineno=79, col_offset=25)], [], None, None, lineno=79, col_offset=14), None, None, lineno=79, col_offset=8)], [], lineno=78, col_offset=4), If(Compare(Name('hi', Load(), lineno=80, col_offset=7), [Is()], [Name('None', Load(), lineno=80, col_offset=13)], lineno=80, col_offset=7), [Assign([Name('hi', Store(), lineno=81, col_offset=8)], Call(Name('len', Load(), lineno=81, col_offset=13), [Name('a', Load(), lineno=81, col_offset=17)], [], None, None, lineno=81, col_offset=13), lineno=81, col_offset=8)], [], lineno=80, col_offset=4), While(Compare(Name('lo', Load(), lineno=82, col_offset=10), [Lt()], [Name('hi', Load(), lineno=82, col_offset=15)], lineno=82, col_offset=10), [Assign([Name('mid', Store(), lineno=83, col_offset=8)], BinOp(BinOp(Name('lo', Load(), lineno=83, col_offset=15), Add(), Name('hi', Load(), lineno=83, col_offset=18), lineno=83, col_offset=15), FloorDiv(), Num(2, lineno=83, col_offset=23), lineno=83, col_offset=14), lineno=83, col_offset=8), If(Compare(Subscript(Name('a', Load(), lineno=84, col_offset=11), Index(Name('mid', Load(), lineno=84, col_offset=13)), Load(), lineno=84, col_offset=11), [Lt()], [Name('x', Load(), lineno=84, col_offset=20)], lineno=84, col_offset=11), [Assign([Name('lo', Store(), lineno=84, col_offset=23)], BinOp(Name('mid', Load(), lineno=84, col_offset=28), Add(), Num(1, lineno=84, col_offset=32), lineno=84, col_offset=28), lineno=84, col_offset=23)], [Assign([Name('hi', Store(), lineno=85, col_offset=14)], Name('mid', Load(), lineno=85, col_offset=19), lineno=85, col_offset=14)], lineno=84, col_offset=8)], [], lineno=82, col_offset=4), Return(Name('lo', Load(), lineno=86, col_offset=11), lineno=86, col_offset=4)], [], lineno=67, col_offset=0), TryExcept([ImportFrom('_bisect', [alias('*', None)], 0, lineno=90, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=91, col_offset=7), None, [Pass( lineno=92, col_offset=4)], lineno=91, col_offset=0)], [], lineno=89, col_offset=0)])
