Module([Import([alias('sys', None)], lineno=24, col_offset=0), Import([alias('getopt', None)], lineno=25, col_offset=0), Assign([Name('FS', Store(), lineno=27, col_offset=0)], Str('', lineno=27, col_offset=5), lineno=27, col_offset=0), Assign([Name('SCRIPT', Store(), lineno=28, col_offset=0)], List([], Load(), lineno=28, col_offset=9), lineno=28, col_offset=0), Assign([Name('AFLAG', Store(), lineno=29, col_offset=0)], Num(0, lineno=29, col_offset=8), lineno=29, col_offset=0), Assign([Name('CFLAG', Store(), lineno=30, col_offset=0)], Num(0, lineno=30, col_offset=8), lineno=30, col_offset=0), Assign([Name('DFLAG', Store(), lineno=31, col_offset=0)], Num(0, lineno=31, col_offset=8), lineno=31, col_offset=0), Assign([Name('NFLAG', Store(), lineno=32, col_offset=0)], Num(0, lineno=32, col_offset=8), lineno=32, col_offset=0), Assign([Name('PFLAG', Store(), lineno=33, col_offset=0)], Num(0, lineno=33, col_offset=8), lineno=33, col_offset=0), TryExcept([Assign([Tuple([Name('optlist', Store(), lineno=36, col_offset=4), Name('ARGS', Store(), lineno=36, col_offset=13)], Store(), lineno=36, col_offset=4)], Call(Attribute(Name('getopt', Load(), lineno=36, col_offset=20), 'getopt', Load(), lineno=36, col_offset=20), [Subscript(Attribute(Name('sys', Load(), lineno=36, col_offset=34), 'argv', Load(), lineno=36, col_offset=34), Slice(Num(1, lineno=36, col_offset=43), None, None), Load(), lineno=36, col_offset=34), Str('acde:F:np', lineno=36, col_offset=48)], [], None, None, lineno=36, col_offset=20), lineno=36, col_offset=4)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=37, col_offset=7), 'error', Load(), lineno=37, col_offset=7), Name('msg', Store(), lineno=37, col_offset=21), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=38, col_offset=4), 'stderr', Load(), lineno=38, col_offset=4), 'write', Load(), lineno=38, col_offset=4), [BinOp(Str('%s: %s\n', lineno=38, col_offset=21), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=38, col_offset=35), 'argv', Load(), lineno=38, col_offset=35), Index(Num(0, lineno=38, col_offset=44)), Load(), lineno=38, col_offset=35), Name('msg', Load(), lineno=38, col_offset=48)], Load(), lineno=38, col_offset=35), lineno=38, col_offset=21)], [], None, None, lineno=38, col_offset=4), lineno=38, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=39, col_offset=4), 'exit', Load(), lineno=39, col_offset=4), [Num(2, lineno=39, col_offset=13)], [], None, None, lineno=39, col_offset=4), lineno=39, col_offset=4)], lineno=37, col_offset=0)], [], lineno=35, col_offset=0), For(Tuple([Name('option', Store(), lineno=41, col_offset=4), Name('optarg', Store(), lineno=41, col_offset=12)], Store(), lineno=41, col_offset=4), Name('optlist', Load(), lineno=41, col_offset=22), [If(Compare(Name('option', Load(), lineno=42, col_offset=7), [Eq()], [Str('-a', lineno=42, col_offset=17)], lineno=42, col_offset=7), [Assign([Name('AFLAG', Store(), lineno=43, col_offset=8)], Num(1, lineno=43, col_offset=16), lineno=43, col_offset=8)], [If(Compare(Name('option', Load(), lineno=44, col_offset=9), [Eq()], [Str('-c', lineno=44, col_offset=19)], lineno=44, col_offset=9), [Assign([Name('CFLAG', Store(), lineno=45, col_offset=8)], Num(1, lineno=45, col_offset=16), lineno=45, col_offset=8)], [If(Compare(Name('option', Load(), lineno=46, col_offset=9), [Eq()], [Str('-d', lineno=46, col_offset=19)], lineno=46, col_offset=9), [Assign([Name('DFLAG', Store(), lineno=47, col_offset=8)], Num(1, lineno=47, col_offset=16), lineno=47, col_offset=8)], [If(Compare(Name('option', Load(), lineno=48, col_offset=9), [Eq()], [Str('-e', lineno=48, col_offset=19)], lineno=48, col_offset=9), [For(Name('line', Store(), lineno=49, col_offset=12), Call(Attribute(Name('optarg', Load(), lineno=49, col_offset=20), 'split', Load(), lineno=49, col_offset=20), [Str('\n', lineno=49, col_offset=33)], [], None, None, lineno=49, col_offset=20), [Expr(Call(Attribute(Name('SCRIPT', Load(), lineno=50, col_offset=12), 'append', Load(), lineno=50, col_offset=12), [Name('line', Load(), lineno=50, col_offset=26)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12)], [], lineno=49, col_offset=8)], [If(Compare(Name('option', Load(), lineno=51, col_offset=9), [Eq()], [Str('-F', lineno=51, col_offset=19)], lineno=51, col_offset=9), [Assign([Name('FS', Store(), lineno=52, col_offset=8)], Name('optarg', Load(), lineno=52, col_offset=13), lineno=52, col_offset=8)], [If(Compare(Name('option', Load(), lineno=53, col_offset=9), [Eq()], [Str('-n', lineno=53, col_offset=19)], lineno=53, col_offset=9), [Assign([Name('NFLAG', Store(), lineno=54, col_offset=8)], Num(1, lineno=54, col_offset=16), lineno=54, col_offset=8), Assign([Name('PFLAG', Store(), lineno=55, col_offset=8)], Num(0, lineno=55, col_offset=16), lineno=55, col_offset=8)], [If(Compare(Name('option', Load(), lineno=56, col_offset=9), [Eq()], [Str('-p', lineno=56, col_offset=19)], lineno=56, col_offset=9), [Assign([Name('NFLAG', Store(), lineno=57, col_offset=8)], Num(1, lineno=57, col_offset=16), lineno=57, col_offset=8), Assign([Name('PFLAG', Store(), lineno=58, col_offset=8)], Num(1, lineno=58, col_offset=16), lineno=58, col_offset=8)], [Print(None, [Name('option', Load(), lineno=60, col_offset=14), Str('not recognized???', lineno=60, col_offset=22)], True, lineno=60, col_offset=8)], lineno=56, col_offset=9)], lineno=53, col_offset=9)], lineno=51, col_offset=9)], lineno=48, col_offset=9)], lineno=46, col_offset=9)], lineno=44, col_offset=9)], lineno=42, col_offset=4)], [], lineno=41, col_offset=0), If(UnaryOp(Not(), Name('ARGS', Load(), lineno=62, col_offset=7), lineno=62, col_offset=3), [Expr(Call(Attribute(Name('ARGS', Load(), lineno=62, col_offset=13), 'append', Load(), lineno=62, col_offset=13), [Str('-', lineno=62, col_offset=25)], [], None, None, lineno=62, col_offset=13), lineno=62, col_offset=13)], [], lineno=62, col_offset=0), If(UnaryOp(Not(), Name('SCRIPT', Load(), lineno=64, col_offset=7), lineno=64, col_offset=3), [If(Compare(Subscript(Name('ARGS', Load(), lineno=65, col_offset=7), Index(Num(0, lineno=65, col_offset=12)), Load(), lineno=65, col_offset=7), [Eq()], [Str('-', lineno=65, col_offset=18)], lineno=65, col_offset=7), [Assign([Name('fp', Store(), lineno=66, col_offset=8)], Attribute(Name('sys', Load(), lineno=66, col_offset=13), 'stdin', Load(), lineno=66, col_offset=13), lineno=66, col_offset=8)], [Assign([Name('fp', Store(), lineno=68, col_offset=8)], Call(Name('open', Load(), lineno=68, col_offset=13), [Subscript(Name('ARGS', Load(), lineno=68, col_offset=18), Index(Num(0, lineno=68, col_offset=23)), Load(), lineno=68, col_offset=18), Str('r', lineno=68, col_offset=27)], [], None, None, lineno=68, col_offset=13), lineno=68, col_offset=8)], lineno=65, col_offset=4), While(Num(1, lineno=69, col_offset=10), [Assign([Name('line', Store(), lineno=70, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=70, col_offset=15), 'readline', Load(), lineno=70, col_offset=15), [], [], None, None, lineno=70, col_offset=15), lineno=70, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=71, col_offset=15), lineno=71, col_offset=11), [Break( lineno=71, col_offset=21)], [], lineno=71, col_offset=8), Expr(Call(Attribute(Name('SCRIPT', Load(), lineno=72, col_offset=8), 'append', Load(), lineno=72, col_offset=8), [Subscript(Name('line', Load(), lineno=72, col_offset=22), Slice(None, Num(-1, lineno=72, col_offset=29), None), Load(), lineno=72, col_offset=22)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=69, col_offset=4), Delete([Name('fp', Del(), lineno=73, col_offset=8)], lineno=73, col_offset=4), Delete([Subscript(Name('ARGS', Load(), lineno=74, col_offset=8), Index(Num(0, lineno=74, col_offset=13)), Del(), lineno=74, col_offset=8)], lineno=74, col_offset=4), If(UnaryOp(Not(), Name('ARGS', Load(), lineno=75, col_offset=11), lineno=75, col_offset=7), [Expr(Call(Attribute(Name('ARGS', Load(), lineno=75, col_offset=17), 'append', Load(), lineno=75, col_offset=17), [Str('-', lineno=75, col_offset=29)], [], None, None, lineno=75, col_offset=17), lineno=75, col_offset=17)], [], lineno=75, col_offset=4)], [], lineno=64, col_offset=0), If(Name('CFLAG', Load(), lineno=77, col_offset=3), [Assign([Name('prologue', Store(), lineno=78, col_offset=4)], List([Str('if 0:', lineno=78, col_offset=16)], Load(), lineno=78, col_offset=15), lineno=78, col_offset=4), Assign([Name('epilogue', Store(), lineno=79, col_offset=4)], List([], Load(), lineno=79, col_offset=15), lineno=79, col_offset=4)], [If(Name('NFLAG', Load(), lineno=80, col_offset=5), [Assign([Name('prologue', Store(), lineno=83, col_offset=4)], List([Str('LINECOUNT = 0', lineno=84, col_offset=12), Str('for FILE in ARGS:', lineno=85, col_offset=12), Str("   \tif FILE == '-':", lineno=86, col_offset=12), Str('   \t   \tFP = sys.stdin', lineno=87, col_offset=12), Str('   \telse:', lineno=88, col_offset=12), Str("   \t   \tFP = open(FILE, 'r')", lineno=89, col_offset=12), Str('   \tLINENO = 0', lineno=90, col_offset=12), Str('   \twhile 1:', lineno=91, col_offset=12), Str('   \t   \tLINE = FP.readline()', lineno=92, col_offset=12), Str('   \t   \tif not LINE: break', lineno=93, col_offset=12), Str('   \t   \tLINENO = LINENO + 1', lineno=94, col_offset=12), Str('   \t   \tLINECOUNT = LINECOUNT + 1', lineno=95, col_offset=12), Str('   \t   \tL = LINE[:-1]', lineno=96, col_offset=12), Str('   \t   \taflag = AFLAG', lineno=97, col_offset=12), Str('   \t   \tif aflag:', lineno=98, col_offset=12), Str('   \t   \t   \tif FS: F = L.split(FS)', lineno=99, col_offset=12), Str('   \t   \t   \telse: F = L.split()', lineno=100, col_offset=12)], Load(), lineno=83, col_offset=15), lineno=83, col_offset=4), Assign([Name('epilogue', Store(), lineno=102, col_offset=4)], List([Str('   \t   \tif not PFLAG: continue', lineno=103, col_offset=12), Str('   \t   \tif aflag:', lineno=104, col_offset=12), Str('   \t   \t   \tif FS: print FS.join(F)', lineno=105, col_offset=12), Str("   \t   \t   \telse: print ' '.join(F)", lineno=106, col_offset=12), Str('   \t   \telse: print L', lineno=107, col_offset=12)], Load(), lineno=102, col_offset=15), lineno=102, col_offset=4)], [Assign([Name('prologue', Store(), lineno=110, col_offset=4)], List([Str('if 1:', lineno=110, col_offset=16)], Load(), lineno=110, col_offset=15), lineno=110, col_offset=4), Assign([Name('epilogue', Store(), lineno=111, col_offset=4)], List([], Load(), lineno=111, col_offset=15), lineno=111, col_offset=4)], lineno=80, col_offset=5)], lineno=77, col_offset=0), Assign([Name('program', Store(), lineno=116, col_offset=0)], BinOp(Call(Attribute(Str('\n', lineno=116, col_offset=10), 'join', Load(), lineno=116, col_offset=10), [Name('prologue', Load(), lineno=116, col_offset=20)], [], None, None, lineno=116, col_offset=10), Add(), Str('\n', lineno=116, col_offset=32), lineno=116, col_offset=10), lineno=116, col_offset=0), For(Name('line', Store(), lineno=117, col_offset=4), Name('SCRIPT', Load(), lineno=117, col_offset=12), [AugAssign(Name('program', Store(), lineno=118, col_offset=4), Add(), BinOp(BinOp(Str('   \t   \t', lineno=118, col_offset=15), Add(), Name('line', Load(), lineno=118, col_offset=30), lineno=118, col_offset=15), Add(), Str('\n', lineno=118, col_offset=37), lineno=118, col_offset=35), lineno=118, col_offset=4)], [], lineno=117, col_offset=0), AugAssign(Name('program', Store(), lineno=119, col_offset=0), Add(), BinOp(Call(Attribute(Str('\n', lineno=119, col_offset=11), 'join', Load(), lineno=119, col_offset=11), [Name('epilogue', Load(), lineno=119, col_offset=21)], [], None, None, lineno=119, col_offset=11), Add(), Str('\n', lineno=119, col_offset=33), lineno=119, col_offset=11), lineno=119, col_offset=0), Import([alias('tempfile', None)], lineno=121, col_offset=0), Assign([Name('fp', Store(), lineno=122, col_offset=0)], Call(Attribute(Name('tempfile', Load(), lineno=122, col_offset=5), 'NamedTemporaryFile', Load(), lineno=122, col_offset=5), [], [], None, None, lineno=122, col_offset=5), lineno=122, col_offset=0), Expr(Call(Attribute(Name('fp', Load(), lineno=123, col_offset=0), 'write', Load(), lineno=123, col_offset=0), [Name('program', Load(), lineno=123, col_offset=9)], [], None, None, lineno=123, col_offset=0), lineno=123, col_offset=0), Expr(Call(Attribute(Name('fp', Load(), lineno=124, col_offset=0), 'flush', Load(), lineno=124, col_offset=0), [], [], None, None, lineno=124, col_offset=0), lineno=124, col_offset=0), If(Name('DFLAG', Load(), lineno=125, col_offset=3), [Import([alias('pdb', None)], lineno=126, col_offset=4), Expr(Call(Attribute(Name('pdb', Load(), lineno=127, col_offset=4), 'run', Load(), lineno=127, col_offset=4), [BinOp(Str('execfile(%r)', lineno=127, col_offset=12), Mod(), Tuple([Attribute(Name('fp', Load(), lineno=127, col_offset=30), 'name', Load(), lineno=127, col_offset=30)], Load(), lineno=127, col_offset=30), lineno=127, col_offset=12)], [], None, None, lineno=127, col_offset=4), lineno=127, col_offset=4)], [Expr(Call(Name('execfile', Load(), lineno=129, col_offset=4), [Attribute(Name('fp', Load(), lineno=129, col_offset=13), 'name', Load(), lineno=129, col_offset=13)], [], None, None, lineno=129, col_offset=4), lineno=129, col_offset=4)], lineno=125, col_offset=0)])
