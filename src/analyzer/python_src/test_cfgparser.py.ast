Module([Import([alias('ConfigParser', None)], lineno=1, col_offset=0), Import([alias('StringIO', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('UserDict', None)], lineno=5, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), ClassDef('SortedDict', [Attribute(Name('UserDict', Load(), lineno=10, col_offset=17), 'UserDict', Load(), lineno=10, col_offset=17)], [FunctionDef('items', arguments([Name('self', Param(), lineno=11, col_offset=14)], None, None, []), [Assign([Name('result', Store(), lineno=12, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=12, col_offset=17), 'data', Load(), lineno=12, col_offset=17), 'items', Load(), lineno=12, col_offset=17), [], [], None, None, lineno=12, col_offset=17), lineno=12, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=13, col_offset=8), 'sort', Load(), lineno=13, col_offset=8), [], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8), Return(Name('result', Load(), lineno=14, col_offset=15), lineno=14, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('keys', arguments([Name('self', Param(), lineno=16, col_offset=13)], None, None, []), [Assign([Name('result', Store(), lineno=17, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=17, col_offset=17), 'data', Load(), lineno=17, col_offset=17), 'keys', Load(), lineno=17, col_offset=17), [], [], None, None, lineno=17, col_offset=17), lineno=17, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=18, col_offset=8), 'sort', Load(), lineno=18, col_offset=8), [], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Return(Name('result', Load(), lineno=19, col_offset=15), lineno=19, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('values', arguments([Name('self', Param(), lineno=21, col_offset=15)], None, None, []), [Assign([Name('result', Store(), lineno=23, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=23, col_offset=17), 'items', Load(), lineno=23, col_offset=17), [], [], None, None, lineno=23, col_offset=17), lineno=23, col_offset=8), Return(ListComp(Subscript(Name('i', Load(), lineno=24, col_offset=16), Index(Num(1, lineno=24, col_offset=18)), Load(), lineno=24, col_offset=16), [comprehension(Name('i', Store(), lineno=24, col_offset=25), Name('result', Load(), lineno=24, col_offset=30), [])], lineno=24, col_offset=16), lineno=24, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('iteritems', arguments([Name('self', Param(), lineno=26, col_offset=18)], None, None, []), [Return(Call(Name('iter', Load(), lineno=26, col_offset=32), [Call(Attribute(Name('self', Load(), lineno=26, col_offset=37), 'items', Load(), lineno=26, col_offset=37), [], [], None, None, lineno=26, col_offset=37)], [], None, None, lineno=26, col_offset=32), lineno=26, col_offset=25)], [], lineno=26, col_offset=4), FunctionDef('iterkeys', arguments([Name('self', Param(), lineno=27, col_offset=17)], None, None, []), [Return(Call(Name('iter', Load(), lineno=27, col_offset=31), [Call(Attribute(Name('self', Load(), lineno=27, col_offset=36), 'keys', Load(), lineno=27, col_offset=36), [], [], None, None, lineno=27, col_offset=36)], [], None, None, lineno=27, col_offset=31), lineno=27, col_offset=24)], [], lineno=27, col_offset=4), Assign([Name('__iter__', Store(), lineno=28, col_offset=4)], Name('iterkeys', Load(), lineno=28, col_offset=15), lineno=28, col_offset=4), FunctionDef('itervalues', arguments([Name('self', Param(), lineno=29, col_offset=19)], None, None, []), [Return(Call(Name('iter', Load(), lineno=29, col_offset=33), [Call(Attribute(Name('self', Load(), lineno=29, col_offset=38), 'values', Load(), lineno=29, col_offset=38), [], [], None, None, lineno=29, col_offset=38)], [], None, None, lineno=29, col_offset=33), lineno=29, col_offset=26)], [], lineno=29, col_offset=4)], [], lineno=10, col_offset=0), ClassDef('TestCaseBase', [Attribute(Name('unittest', Load(), lineno=32, col_offset=19), 'TestCase', Load(), lineno=32, col_offset=19)], [Assign([Name('allow_no_value', Store(), lineno=33, col_offset=4)], Name('False', Load(), lineno=33, col_offset=21), lineno=33, col_offset=4), FunctionDef('newconfig', arguments([Name('self', Param(), lineno=35, col_offset=18), Name('defaults', Param(), lineno=35, col_offset=24)], None, None, [Name('None', Load(), lineno=35, col_offset=33)]), [If(Compare(Name('defaults', Load(), lineno=36, col_offset=11), [Is()], [Name('None', Load(), lineno=36, col_offset=23)], lineno=36, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=37, col_offset=12), 'cf', Store(), lineno=37, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=37, col_offset=22), 'config_class', Load(), lineno=37, col_offset=22), [], [keyword('allow_no_value', Attribute(Name('self', Load(), lineno=37, col_offset=55), 'allow_no_value', Load(), lineno=37, col_offset=55))], None, None, lineno=37, col_offset=22), lineno=37, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=39, col_offset=12), 'cf', Store(), lineno=39, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=39, col_offset=22), 'config_class', Load(), lineno=39, col_offset=22), [Name('defaults', Load(), lineno=39, col_offset=40)], [keyword('allow_no_value', Attribute(Name('self', Load(), lineno=40, col_offset=55), 'allow_no_value', Load(), lineno=40, col_offset=55))], None, None, lineno=39, col_offset=22), lineno=39, col_offset=12)], lineno=36, col_offset=8), Return(Attribute(Name('self', Load(), lineno=41, col_offset=15), 'cf', Load(), lineno=41, col_offset=15), lineno=41, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('fromstring', arguments([Name('self', Param(), lineno=43, col_offset=19), Name('string', Param(), lineno=43, col_offset=25), Name('defaults', Param(), lineno=43, col_offset=33)], None, None, [Name('None', Load(), lineno=43, col_offset=42)]), [Assign([Name('cf', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=44, col_offset=13), 'newconfig', Load(), lineno=44, col_offset=13), [Name('defaults', Load(), lineno=44, col_offset=28)], [], None, None, lineno=44, col_offset=13), lineno=44, col_offset=8), Assign([Name('sio', Store(), lineno=45, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=45, col_offset=14), 'StringIO', Load(), lineno=45, col_offset=14), [Name('string', Load(), lineno=45, col_offset=32)], [], None, None, lineno=45, col_offset=14), lineno=45, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=46, col_offset=8), 'readfp', Load(), lineno=46, col_offset=8), [Name('sio', Load(), lineno=46, col_offset=18)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Return(Name('cf', Load(), lineno=47, col_offset=15), lineno=47, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=49, col_offset=19)], None, None, []), [Assign([Name('config_string', Store(), lineno=50, col_offset=8)], Str('[Foo Bar]\nfoo=bar\n[Spacey Bar]\nfoo = bar\n[Commented Bar]\nfoo: bar ; comment\n[Long Line]\nfoo: this line is much, much longer than my editor\n   likes it.\n[Section\\with$weird%characters[\t]\n[Internationalized Stuff]\nfoo[bg]: Bulgarian\nfoo=Default\nfoo[en]=English\nfoo[de]=Deutsch\n[Spaces]\nkey with spaces : value\nanother with spaces = splat!\n', lineno=51, col_offset=12), lineno=50, col_offset=8), If(Attribute(Name('self', Load(), lineno=70, col_offset=11), 'allow_no_value', Load(), lineno=70, col_offset=11), [AugAssign(Name('config_string', Store(), lineno=71, col_offset=12), Add(), Str('[NoValue]\noption-without-value\n', lineno=72, col_offset=16), lineno=71, col_offset=12)], [], lineno=70, col_offset=8), Assign([Name('cf', Store(), lineno=76, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=76, col_offset=13), 'fromstring', Load(), lineno=76, col_offset=13), [Name('config_string', Load(), lineno=76, col_offset=29)], [], None, None, lineno=76, col_offset=13), lineno=76, col_offset=8), Assign([Name('L', Store(), lineno=77, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=77, col_offset=12), 'sections', Load(), lineno=77, col_offset=12), [], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=8), Expr(Call(Attribute(Name('L', Load(), lineno=78, col_offset=8), 'sort', Load(), lineno=78, col_offset=8), [], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Assign([Name('E', Store(), lineno=79, col_offset=8)], List([Str('Commented Bar', lineno=79, col_offset=13), Str('Foo Bar', lineno=80, col_offset=13), Str('Internationalized Stuff', lineno=81, col_offset=13), Str('Long Line', lineno=82, col_offset=13), Str('Section\\with$weird%characters[\t', lineno=83, col_offset=13), Str('Spaces', lineno=84, col_offset=13), Str('Spacey Bar', lineno=85, col_offset=13)], Load(), lineno=79, col_offset=12), lineno=79, col_offset=8), If(Attribute(Name('self', Load(), lineno=87, col_offset=11), 'allow_no_value', Load(), lineno=87, col_offset=11), [Expr(Call(Attribute(Name('E', Load(), lineno=88, col_offset=12), 'append', Load(), lineno=88, col_offset=12), [Str('NoValue', lineno=88, col_offset=21)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12)], [], lineno=87, col_offset=8), Expr(Call(Attribute(Name('E', Load(), lineno=89, col_offset=8), 'sort', Load(), lineno=89, col_offset=8), [], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Assign([Name('eq', Store(), lineno=90, col_offset=8)], Attribute(Name('self', Load(), lineno=90, col_offset=13), 'assertEqual', Load(), lineno=90, col_offset=13), lineno=90, col_offset=8), Expr(Call(Name('eq', Load(), lineno=91, col_offset=8), [Name('L', Load(), lineno=91, col_offset=11), Name('E', Load(), lineno=91, col_offset=14)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Name('eq', Load(), lineno=96, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=96, col_offset=11), 'get', Load(), lineno=96, col_offset=11), [Str('Foo Bar', lineno=96, col_offset=18), Str('foo', lineno=96, col_offset=29)], [], None, None, lineno=96, col_offset=11), Str('bar', lineno=96, col_offset=37)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Expr(Call(Name('eq', Load(), lineno=97, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=97, col_offset=11), 'get', Load(), lineno=97, col_offset=11), [Str('Spacey Bar', lineno=97, col_offset=18), Str('foo', lineno=97, col_offset=32)], [], None, None, lineno=97, col_offset=11), Str('bar', lineno=97, col_offset=40)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Expr(Call(Name('eq', Load(), lineno=98, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=98, col_offset=11), 'get', Load(), lineno=98, col_offset=11), [Str('Commented Bar', lineno=98, col_offset=18), Str('foo', lineno=98, col_offset=35)], [], None, None, lineno=98, col_offset=11), Str('bar', lineno=98, col_offset=43)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Name('eq', Load(), lineno=99, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=99, col_offset=11), 'get', Load(), lineno=99, col_offset=11), [Str('Spaces', lineno=99, col_offset=18), Str('key with spaces', lineno=99, col_offset=28)], [], None, None, lineno=99, col_offset=11), Str('value', lineno=99, col_offset=48)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Name('eq', Load(), lineno=100, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=100, col_offset=11), 'get', Load(), lineno=100, col_offset=11), [Str('Spaces', lineno=100, col_offset=18), Str('another with spaces', lineno=100, col_offset=28)], [], None, None, lineno=100, col_offset=11), Str('splat!', lineno=100, col_offset=52)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), If(Attribute(Name('self', Load(), lineno=101, col_offset=11), 'allow_no_value', Load(), lineno=101, col_offset=11), [Expr(Call(Name('eq', Load(), lineno=102, col_offset=12), [Call(Attribute(Name('cf', Load(), lineno=102, col_offset=15), 'get', Load(), lineno=102, col_offset=15), [Str('NoValue', lineno=102, col_offset=22), Str('option-without-value', lineno=102, col_offset=33)], [], None, None, lineno=102, col_offset=15), Name('None', Load(), lineno=102, col_offset=58)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], [], lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertNotIn', Load(), lineno=104, col_offset=8), [Str('__name__', lineno=104, col_offset=25), Call(Attribute(Name('cf', Load(), lineno=104, col_offset=37), 'options', Load(), lineno=104, col_offset=37), [Str('Foo Bar', lineno=104, col_offset=48)], [], None, None, lineno=104, col_offset=37), Str('__name__ "option" should not be exposed by the API!', lineno=105, col_offset=25)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'assertTrue', Load(), lineno=109, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=109, col_offset=24), 'remove_option', Load(), lineno=109, col_offset=24), [Str('Foo Bar', lineno=109, col_offset=41), Str('foo', lineno=109, col_offset=52)], [], None, None, lineno=109, col_offset=24), Str('remove_option() failed to report existence of option', lineno=110, col_offset=24)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertFalse', Load(), lineno=111, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=111, col_offset=25), 'has_option', Load(), lineno=111, col_offset=25), [Str('Foo Bar', lineno=111, col_offset=39), Str('foo', lineno=111, col_offset=50)], [], None, None, lineno=111, col_offset=25), Str('remove_option() failed to remove option', lineno=112, col_offset=20)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertFalse', Load(), lineno=113, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=113, col_offset=25), 'remove_option', Load(), lineno=113, col_offset=25), [Str('Foo Bar', lineno=113, col_offset=42), Str('foo', lineno=113, col_offset=53)], [], None, None, lineno=113, col_offset=25), Str('remove_option() failed to report non-existence of option that was removed', lineno=114, col_offset=20)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertRaises', Load(), lineno=117, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=117, col_offset=26), 'NoSectionError', Load(), lineno=117, col_offset=26), Attribute(Name('cf', Load(), lineno=118, col_offset=26), 'remove_option', Load(), lineno=118, col_offset=26), Str('No Such Section', lineno=118, col_offset=44), Str('foo', lineno=118, col_offset=63)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Expr(Call(Name('eq', Load(), lineno=120, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=120, col_offset=11), 'get', Load(), lineno=120, col_offset=11), [Str('Long Line', lineno=120, col_offset=18), Str('foo', lineno=120, col_offset=31)], [], None, None, lineno=120, col_offset=11), Str('this line is much, much longer than my editor\nlikes it.', lineno=121, col_offset=11)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('test_case_sensitivity', arguments([Name('self', Param(), lineno=123, col_offset=30)], None, None, []), [Assign([Name('cf', Store(), lineno=124, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=124, col_offset=13), 'newconfig', Load(), lineno=124, col_offset=13), [], [], None, None, lineno=124, col_offset=13), lineno=124, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=125, col_offset=8), 'add_section', Load(), lineno=125, col_offset=8), [Str('A', lineno=125, col_offset=23)], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=126, col_offset=8), 'add_section', Load(), lineno=126, col_offset=8), [Str('a', lineno=126, col_offset=23)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Assign([Name('L', Store(), lineno=127, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=127, col_offset=12), 'sections', Load(), lineno=127, col_offset=12), [], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=8), Expr(Call(Attribute(Name('L', Load(), lineno=128, col_offset=8), 'sort', Load(), lineno=128, col_offset=8), [], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Assign([Name('eq', Store(), lineno=129, col_offset=8)], Attribute(Name('self', Load(), lineno=129, col_offset=13), 'assertEqual', Load(), lineno=129, col_offset=13), lineno=129, col_offset=8), Expr(Call(Name('eq', Load(), lineno=130, col_offset=8), [Name('L', Load(), lineno=130, col_offset=11), List([Str('A', lineno=130, col_offset=15), Str('a', lineno=130, col_offset=20)], Load(), lineno=130, col_offset=14)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=131, col_offset=8), 'set', Load(), lineno=131, col_offset=8), [Str('a', lineno=131, col_offset=15), Str('B', lineno=131, col_offset=20), Str('value', lineno=131, col_offset=25)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Expr(Call(Name('eq', Load(), lineno=132, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=132, col_offset=11), 'options', Load(), lineno=132, col_offset=11), [Str('a', lineno=132, col_offset=22)], [], None, None, lineno=132, col_offset=11), List([Str('b', lineno=132, col_offset=29)], Load(), lineno=132, col_offset=28)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Expr(Call(Name('eq', Load(), lineno=133, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=133, col_offset=11), 'get', Load(), lineno=133, col_offset=11), [Str('a', lineno=133, col_offset=18), Str('b', lineno=133, col_offset=23)], [], None, None, lineno=133, col_offset=11), Str('value', lineno=133, col_offset=29), Str('could not locate option, expecting case-insensitive option names', lineno=134, col_offset=11)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'assertTrue', Load(), lineno=135, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=135, col_offset=24), 'has_option', Load(), lineno=135, col_offset=24), [Str('a', lineno=135, col_offset=38), Str('b', lineno=135, col_offset=43)], [], None, None, lineno=135, col_offset=24)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=136, col_offset=8), 'set', Load(), lineno=136, col_offset=8), [Str('A', lineno=136, col_offset=15), Str('A-B', lineno=136, col_offset=20), Str('A-B value', lineno=136, col_offset=27)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), For(Name('opt', Store(), lineno=137, col_offset=12), Tuple([Str('a-b', lineno=137, col_offset=20), Str('A-b', lineno=137, col_offset=27), Str('a-B', lineno=137, col_offset=34), Str('A-B', lineno=137, col_offset=41)], Load(), lineno=137, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=12), 'assertTrue', Load(), lineno=138, col_offset=12), [Call(Attribute(Name('cf', Load(), lineno=139, col_offset=16), 'has_option', Load(), lineno=139, col_offset=16), [Str('A', lineno=139, col_offset=30), Name('opt', Load(), lineno=139, col_offset=35)], [], None, None, lineno=139, col_offset=16), Str('has_option() returned false for option which should exist', lineno=140, col_offset=16)], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=12)], [], lineno=137, col_offset=8), Expr(Call(Name('eq', Load(), lineno=141, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=141, col_offset=11), 'options', Load(), lineno=141, col_offset=11), [Str('A', lineno=141, col_offset=22)], [], None, None, lineno=141, col_offset=11), List([Str('a-b', lineno=141, col_offset=29)], Load(), lineno=141, col_offset=28)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Name('eq', Load(), lineno=142, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=142, col_offset=11), 'options', Load(), lineno=142, col_offset=11), [Str('a', lineno=142, col_offset=22)], [], None, None, lineno=142, col_offset=11), List([Str('b', lineno=142, col_offset=29)], Load(), lineno=142, col_offset=28)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=143, col_offset=8), 'remove_option', Load(), lineno=143, col_offset=8), [Str('a', lineno=143, col_offset=25), Str('B', lineno=143, col_offset=30)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Name('eq', Load(), lineno=144, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=144, col_offset=11), 'options', Load(), lineno=144, col_offset=11), [Str('a', lineno=144, col_offset=22)], [], None, None, lineno=144, col_offset=11), List([], Load(), lineno=144, col_offset=28)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Assign([Name('cf', Store(), lineno=147, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=147, col_offset=13), 'fromstring', Load(), lineno=147, col_offset=13), [Str('[MySection]\nOption: first line\n\tsecond line\n', lineno=148, col_offset=12)], [], None, None, lineno=147, col_offset=13), lineno=147, col_offset=8), Expr(Call(Name('eq', Load(), lineno=149, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=149, col_offset=11), 'options', Load(), lineno=149, col_offset=11), [Str('MySection', lineno=149, col_offset=22)], [], None, None, lineno=149, col_offset=11), List([Str('option', lineno=149, col_offset=37)], Load(), lineno=149, col_offset=36)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Name('eq', Load(), lineno=150, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=150, col_offset=11), 'get', Load(), lineno=150, col_offset=11), [Str('MySection', lineno=150, col_offset=18), Str('Option', lineno=150, col_offset=31)], [], None, None, lineno=150, col_offset=11), Str('first line\nsecond line', lineno=150, col_offset=42)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Assign([Name('cf', Store(), lineno=153, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=153, col_offset=13), 'fromstring', Load(), lineno=153, col_offset=13), [Str('[section]\nnekey=nevalue\n', lineno=153, col_offset=29)], [keyword('defaults', Dict([Str('key', lineno=154, col_offset=39)], [Str('value', lineno=154, col_offset=45)], lineno=154, col_offset=38))], None, None, lineno=153, col_offset=13), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'assertTrue', Load(), lineno=155, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=155, col_offset=24), 'has_option', Load(), lineno=155, col_offset=24), [Str('section', lineno=155, col_offset=38), Str('Key', lineno=155, col_offset=49)], [], None, None, lineno=155, col_offset=24)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('test_default_case_sensitivity', arguments([Name('self', Param(), lineno=158, col_offset=38)], None, None, []), [Assign([Name('cf', Store(), lineno=159, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=159, col_offset=13), 'newconfig', Load(), lineno=159, col_offset=13), [Dict([Str('foo', lineno=159, col_offset=29)], [Str('Bar', lineno=159, col_offset=36)], lineno=159, col_offset=28)], [], None, None, lineno=159, col_offset=13), lineno=159, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=8), 'assertEqual', Load(), lineno=160, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=161, col_offset=12), 'get', Load(), lineno=161, col_offset=12), [Str('DEFAULT', lineno=161, col_offset=19), Str('Foo', lineno=161, col_offset=30)], [], None, None, lineno=161, col_offset=12), Str('Bar', lineno=161, col_offset=38), Str('could not locate option, expecting case-insensitive option names', lineno=162, col_offset=12)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8), Assign([Name('cf', Store(), lineno=163, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=163, col_offset=13), 'newconfig', Load(), lineno=163, col_offset=13), [Dict([Str('Foo', lineno=163, col_offset=29)], [Str('Bar', lineno=163, col_offset=36)], lineno=163, col_offset=28)], [], None, None, lineno=163, col_offset=13), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertEqual', Load(), lineno=164, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=165, col_offset=12), 'get', Load(), lineno=165, col_offset=12), [Str('DEFAULT', lineno=165, col_offset=19), Str('Foo', lineno=165, col_offset=30)], [], None, None, lineno=165, col_offset=12), Str('Bar', lineno=165, col_offset=38), Str('could not locate option, expecting case-insensitive defaults', lineno=166, col_offset=12)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('test_parse_errors', arguments([Name('self', Param(), lineno=168, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'newconfig', Load(), lineno=169, col_offset=8), [], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'parse_error', Load(), lineno=170, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=170, col_offset=25), 'ParsingError', Load(), lineno=170, col_offset=25), Str('[Foo]\n  extra-spaces: splat\n', lineno=171, col_offset=25)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=8), 'parse_error', Load(), lineno=172, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=172, col_offset=25), 'ParsingError', Load(), lineno=172, col_offset=25), Str('[Foo]\n  extra-spaces= splat\n', lineno=173, col_offset=25)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'parse_error', Load(), lineno=174, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=174, col_offset=25), 'ParsingError', Load(), lineno=174, col_offset=25), Str('[Foo]\n:value-without-option-name\n', lineno=175, col_offset=25)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'parse_error', Load(), lineno=176, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=176, col_offset=25), 'ParsingError', Load(), lineno=176, col_offset=25), Str('[Foo]\n=value-without-option-name\n', lineno=177, col_offset=25)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'parse_error', Load(), lineno=178, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=178, col_offset=25), 'MissingSectionHeaderError', Load(), lineno=178, col_offset=25), Str('No Section!\n', lineno=179, col_offset=25)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('parse_error', arguments([Name('self', Param(), lineno=181, col_offset=20), Name('exc', Param(), lineno=181, col_offset=26), Name('src', Param(), lineno=181, col_offset=31)], None, None, []), [Assign([Name('sio', Store(), lineno=182, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=182, col_offset=14), 'StringIO', Load(), lineno=182, col_offset=14), [Name('src', Load(), lineno=182, col_offset=32)], [], None, None, lineno=182, col_offset=14), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'assertRaises', Load(), lineno=183, col_offset=8), [Name('exc', Load(), lineno=183, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=183, col_offset=31), 'cf', Load(), lineno=183, col_offset=31), 'readfp', Load(), lineno=183, col_offset=31), Name('sio', Load(), lineno=183, col_offset=47)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_query_errors', arguments([Name('self', Param(), lineno=185, col_offset=26)], None, None, []), [Assign([Name('cf', Store(), lineno=186, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=186, col_offset=13), 'newconfig', Load(), lineno=186, col_offset=13), [], [], None, None, lineno=186, col_offset=13), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertEqual', Load(), lineno=187, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=187, col_offset=25), 'sections', Load(), lineno=187, col_offset=25), [], [], None, None, lineno=187, col_offset=25), List([], Load(), lineno=187, col_offset=40), Str('new ConfigParser should have no defined sections', lineno=188, col_offset=25)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertFalse', Load(), lineno=189, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=189, col_offset=25), 'has_section', Load(), lineno=189, col_offset=25), [Str('Foo', lineno=189, col_offset=40)], [], None, None, lineno=189, col_offset=25), Str('new ConfigParser should have no acknowledged sections', lineno=190, col_offset=25)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertRaises', Load(), lineno=192, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=192, col_offset=26), 'NoSectionError', Load(), lineno=192, col_offset=26), Attribute(Name('cf', Load(), lineno=193, col_offset=26), 'options', Load(), lineno=193, col_offset=26), Str('Foo', lineno=193, col_offset=38)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertRaises', Load(), lineno=194, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=194, col_offset=26), 'NoSectionError', Load(), lineno=194, col_offset=26), Attribute(Name('cf', Load(), lineno=195, col_offset=26), 'set', Load(), lineno=195, col_offset=26), Str('foo', lineno=195, col_offset=34), Str('bar', lineno=195, col_offset=41), Str('value', lineno=195, col_offset=48)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'get_error', Load(), lineno=196, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=196, col_offset=23), 'NoSectionError', Load(), lineno=196, col_offset=23), Str('foo', lineno=196, col_offset=52), Str('bar', lineno=196, col_offset=59)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=197, col_offset=8), 'add_section', Load(), lineno=197, col_offset=8), [Str('foo', lineno=197, col_offset=23)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'get_error', Load(), lineno=198, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=198, col_offset=23), 'NoOptionError', Load(), lineno=198, col_offset=23), Str('foo', lineno=198, col_offset=51), Str('bar', lineno=198, col_offset=58)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('get_error', arguments([Name('self', Param(), lineno=200, col_offset=18), Name('exc', Param(), lineno=200, col_offset=24), Name('section', Param(), lineno=200, col_offset=29), Name('option', Param(), lineno=200, col_offset=38)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=202, col_offset=12), 'cf', Load(), lineno=202, col_offset=12), 'get', Load(), lineno=202, col_offset=12), [Name('section', Load(), lineno=202, col_offset=24), Name('option', Load(), lineno=202, col_offset=33)], [], None, None, lineno=202, col_offset=12), lineno=202, col_offset=12)], [ExceptHandler(Name('exc', Load(), lineno=203, col_offset=15), Name('e', Store(), lineno=203, col_offset=20), [Return(Name('e', Load(), lineno=204, col_offset=19), lineno=204, col_offset=12)], lineno=203, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=12), 'fail', Load(), lineno=206, col_offset=12), [BinOp(Str('expected exception type %s.%s', lineno=206, col_offset=22), Mod(), Tuple([Attribute(Name('exc', Load(), lineno=207, col_offset=25), '__module__', Load(), lineno=207, col_offset=25), Attribute(Name('exc', Load(), lineno=207, col_offset=41), '__name__', Load(), lineno=207, col_offset=41)], Load(), lineno=207, col_offset=25), lineno=206, col_offset=22)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12)], lineno=201, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_boolean', arguments([Name('self', Param(), lineno=209, col_offset=21)], None, None, []), [Assign([Name('cf', Store(), lineno=210, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=210, col_offset=13), 'fromstring', Load(), lineno=210, col_offset=13), [Str('[BOOLTEST]\nT1=1\nT2=TRUE\nT3=True\nT4=oN\nT5=yes\nF1=0\nF2=FALSE\nF3=False\nF4=oFF\nF5=nO\nE1=2\nE2=foo\nE3=-1\nE4=0.1\nE5=FALSE AND MORE', lineno=211, col_offset=12)], [], None, None, lineno=210, col_offset=13), lineno=210, col_offset=8), For(Name('x', Store(), lineno=228, col_offset=12), Call(Name('range', Load(), lineno=228, col_offset=17), [Num(1, lineno=228, col_offset=23), Num(5, lineno=228, col_offset=26)], [], None, None, lineno=228, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=12), 'assertTrue', Load(), lineno=229, col_offset=12), [Call(Attribute(Name('cf', Load(), lineno=229, col_offset=28), 'getboolean', Load(), lineno=229, col_offset=28), [Str('BOOLTEST', lineno=229, col_offset=42), BinOp(Str('t%d', lineno=229, col_offset=54), Mod(), Name('x', Load(), lineno=229, col_offset=62), lineno=229, col_offset=54)], [], None, None, lineno=229, col_offset=28)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=12), 'assertFalse', Load(), lineno=230, col_offset=12), [Call(Attribute(Name('cf', Load(), lineno=230, col_offset=29), 'getboolean', Load(), lineno=230, col_offset=29), [Str('BOOLTEST', lineno=230, col_offset=43), BinOp(Str('f%d', lineno=230, col_offset=55), Mod(), Name('x', Load(), lineno=230, col_offset=63), lineno=230, col_offset=55)], [], None, None, lineno=230, col_offset=29)], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=12), 'assertRaises', Load(), lineno=231, col_offset=12), [Name('ValueError', Load(), lineno=231, col_offset=30), Attribute(Name('cf', Load(), lineno=232, col_offset=30), 'getboolean', Load(), lineno=232, col_offset=30), Str('BOOLTEST', lineno=232, col_offset=45), BinOp(Str('e%d', lineno=232, col_offset=57), Mod(), Name('x', Load(), lineno=232, col_offset=65), lineno=232, col_offset=57)], [], None, None, lineno=231, col_offset=12), lineno=231, col_offset=12)], [], lineno=228, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('test_weird_errors', arguments([Name('self', Param(), lineno=234, col_offset=26)], None, None, []), [Assign([Name('cf', Store(), lineno=235, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=235, col_offset=13), 'newconfig', Load(), lineno=235, col_offset=13), [], [], None, None, lineno=235, col_offset=13), lineno=235, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=236, col_offset=8), 'add_section', Load(), lineno=236, col_offset=8), [Str('Foo', lineno=236, col_offset=23)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=237, col_offset=26), 'DuplicateSectionError', Load(), lineno=237, col_offset=26), Attribute(Name('cf', Load(), lineno=238, col_offset=26), 'add_section', Load(), lineno=238, col_offset=26), Str('Foo', lineno=238, col_offset=42)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8)], [], lineno=234, col_offset=4), FunctionDef('test_write', arguments([Name('self', Param(), lineno=240, col_offset=19)], None, None, []), [Assign([Name('config_string', Store(), lineno=241, col_offset=8)], Str('[Long Line]\nfoo: this line is much, much longer than my editor\n   likes it.\n[DEFAULT]\nfoo: another very\n long line\n', lineno=242, col_offset=12), lineno=241, col_offset=8), If(Attribute(Name('self', Load(), lineno=249, col_offset=11), 'allow_no_value', Load(), lineno=249, col_offset=11), [AugAssign(Name('config_string', Store(), lineno=250, col_offset=12), Add(), Str('[Valueless]\noption-without-value\n', lineno=251, col_offset=12), lineno=250, col_offset=12)], [], lineno=249, col_offset=8), Assign([Name('cf', Store(), lineno=255, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=255, col_offset=13), 'fromstring', Load(), lineno=255, col_offset=13), [Name('config_string', Load(), lineno=255, col_offset=29)], [], None, None, lineno=255, col_offset=13), lineno=255, col_offset=8), Assign([Name('output', Store(), lineno=256, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=256, col_offset=17), 'StringIO', Load(), lineno=256, col_offset=17), [], [], None, None, lineno=256, col_offset=17), lineno=256, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=257, col_offset=8), 'write', Load(), lineno=257, col_offset=8), [Name('output', Load(), lineno=257, col_offset=17)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Assign([Name('expect_string', Store(), lineno=258, col_offset=8)], Str('[DEFAULT]\nfoo = another very\n\tlong line\n\n[Long Line]\nfoo = this line is much, much longer than my editor\n\tlikes it.\n\n', lineno=259, col_offset=12), lineno=258, col_offset=8), If(Attribute(Name('self', Load(), lineno=268, col_offset=11), 'allow_no_value', Load(), lineno=268, col_offset=11), [AugAssign(Name('expect_string', Store(), lineno=269, col_offset=12), Add(), Str('[Valueless]\noption-without-value\n\n', lineno=270, col_offset=16), lineno=269, col_offset=12)], [], lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'assertEqual', Load(), lineno=274, col_offset=8), [Call(Attribute(Name('output', Load(), lineno=274, col_offset=25), 'getvalue', Load(), lineno=274, col_offset=25), [], [], None, None, lineno=274, col_offset=25), Name('expect_string', Load(), lineno=274, col_offset=44)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('test_set_string_types', arguments([Name('self', Param(), lineno=276, col_offset=30)], None, None, []), [Assign([Name('cf', Store(), lineno=277, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=277, col_offset=13), 'fromstring', Load(), lineno=277, col_offset=13), [Str('[sect]\noption1=foo\n', lineno=277, col_offset=29)], [], None, None, lineno=277, col_offset=13), lineno=277, col_offset=8), ClassDef('mystr', [Name('str', Load(), lineno=281, col_offset=20)], [Pass( lineno=282, col_offset=12)], [], lineno=281, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=283, col_offset=8), 'set', Load(), lineno=283, col_offset=8), [Str('sect', lineno=283, col_offset=15), Str('option1', lineno=283, col_offset=23), Str('splat', lineno=283, col_offset=34)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=284, col_offset=8), 'set', Load(), lineno=284, col_offset=8), [Str('sect', lineno=284, col_offset=15), Str('option1', lineno=284, col_offset=23), Call(Name('mystr', Load(), lineno=284, col_offset=34), [Str('splat', lineno=284, col_offset=40)], [], None, None, lineno=284, col_offset=34)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=285, col_offset=8), 'set', Load(), lineno=285, col_offset=8), [Str('sect', lineno=285, col_offset=15), Str('option2', lineno=285, col_offset=23), Str('splat', lineno=285, col_offset=34)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=286, col_offset=8), 'set', Load(), lineno=286, col_offset=8), [Str('sect', lineno=286, col_offset=15), Str('option2', lineno=286, col_offset=23), Call(Name('mystr', Load(), lineno=286, col_offset=34), [Str('splat', lineno=286, col_offset=40)], [], None, None, lineno=286, col_offset=34)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8), TryExcept([Expr(Name('unicode', Load(), lineno=288, col_offset=12), lineno=288, col_offset=12)], [ExceptHandler(Name('NameError', Load(), lineno=289, col_offset=15), None, [Pass( lineno=290, col_offset=12)], lineno=289, col_offset=8)], [Expr(Call(Attribute(Name('cf', Load(), lineno=292, col_offset=12), 'set', Load(), lineno=292, col_offset=12), [Str('sect', lineno=292, col_offset=19), Str('option1', lineno=292, col_offset=27), Call(Name('unicode', Load(), lineno=292, col_offset=38), [Str('splat', lineno=292, col_offset=46)], [], None, None, lineno=292, col_offset=38)], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=12), Expr(Call(Attribute(Name('cf', Load(), lineno=293, col_offset=12), 'set', Load(), lineno=293, col_offset=12), [Str('sect', lineno=293, col_offset=19), Str('option2', lineno=293, col_offset=27), Call(Name('unicode', Load(), lineno=293, col_offset=38), [Str('splat', lineno=293, col_offset=46)], [], None, None, lineno=293, col_offset=38)], [], None, None, lineno=293, col_offset=12), lineno=293, col_offset=12)], lineno=287, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('test_read_returns_file_list', arguments([Name('self', Param(), lineno=295, col_offset=36)], None, None, []), [Assign([Name('file1', Store(), lineno=296, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=296, col_offset=16), 'findfile', Load(), lineno=296, col_offset=16), [Str('cfgparser.1', lineno=296, col_offset=38)], [], None, None, lineno=296, col_offset=16), lineno=296, col_offset=8), Assign([Name('cf', Store(), lineno=298, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=298, col_offset=13), 'newconfig', Load(), lineno=298, col_offset=13), [], [], None, None, lineno=298, col_offset=13), lineno=298, col_offset=8), Assign([Name('parsed_files', Store(), lineno=299, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=299, col_offset=23), 'read', Load(), lineno=299, col_offset=23), [List([Name('file1', Load(), lineno=299, col_offset=32), Str('nonexistent-file', lineno=299, col_offset=39)], Load(), lineno=299, col_offset=31)], [], None, None, lineno=299, col_offset=23), lineno=299, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'assertEqual', Load(), lineno=300, col_offset=8), [Name('parsed_files', Load(), lineno=300, col_offset=25), List([Name('file1', Load(), lineno=300, col_offset=40)], Load(), lineno=300, col_offset=39)], [], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertEqual', Load(), lineno=301, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=301, col_offset=25), 'get', Load(), lineno=301, col_offset=25), [Str('Foo Bar', lineno=301, col_offset=32), Str('foo', lineno=301, col_offset=43)], [], None, None, lineno=301, col_offset=25), Str('newbar', lineno=301, col_offset=51)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Assign([Name('cf', Store(), lineno=303, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=303, col_offset=13), 'newconfig', Load(), lineno=303, col_offset=13), [], [], None, None, lineno=303, col_offset=13), lineno=303, col_offset=8), Assign([Name('parsed_files', Store(), lineno=304, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=304, col_offset=23), 'read', Load(), lineno=304, col_offset=23), [Name('file1', Load(), lineno=304, col_offset=31)], [], None, None, lineno=304, col_offset=23), lineno=304, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'assertEqual', Load(), lineno=305, col_offset=8), [Name('parsed_files', Load(), lineno=305, col_offset=25), List([Name('file1', Load(), lineno=305, col_offset=40)], Load(), lineno=305, col_offset=39)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=8), 'assertEqual', Load(), lineno=306, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=306, col_offset=25), 'get', Load(), lineno=306, col_offset=25), [Str('Foo Bar', lineno=306, col_offset=32), Str('foo', lineno=306, col_offset=43)], [], None, None, lineno=306, col_offset=25), Str('newbar', lineno=306, col_offset=51)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Assign([Name('cf', Store(), lineno=308, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=308, col_offset=13), 'newconfig', Load(), lineno=308, col_offset=13), [], [], None, None, lineno=308, col_offset=13), lineno=308, col_offset=8), Assign([Name('parsed_files', Store(), lineno=309, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=309, col_offset=23), 'read', Load(), lineno=309, col_offset=23), [List([Str('nonexistent-file', lineno=309, col_offset=32)], Load(), lineno=309, col_offset=31)], [], None, None, lineno=309, col_offset=23), lineno=309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=310, col_offset=8), 'assertEqual', Load(), lineno=310, col_offset=8), [Name('parsed_files', Load(), lineno=310, col_offset=25), List([], Load(), lineno=310, col_offset=39)], [], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8), Assign([Name('cf', Store(), lineno=312, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=312, col_offset=13), 'newconfig', Load(), lineno=312, col_offset=13), [], [], None, None, lineno=312, col_offset=13), lineno=312, col_offset=8), Assign([Name('parsed_files', Store(), lineno=313, col_offset=8)], Call(Attribute(Name('cf', Load(), lineno=313, col_offset=23), 'read', Load(), lineno=313, col_offset=23), [List([], Load(), lineno=313, col_offset=31)], [], None, None, lineno=313, col_offset=23), lineno=313, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'assertEqual', Load(), lineno=314, col_offset=8), [Name('parsed_files', Load(), lineno=314, col_offset=25), List([], Load(), lineno=314, col_offset=39)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8)], [], lineno=295, col_offset=4), FunctionDef('get_interpolation_config', arguments([Name('self', Param(), lineno=317, col_offset=33)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=318, col_offset=15), 'fromstring', Load(), lineno=318, col_offset=15), [Str('[Foo]\nbar=something %(with1)s interpolation (1 step)\nbar9=something %(with9)s lots of interpolation (9 steps)\nbar10=something %(with10)s lots of interpolation (10 steps)\nbar11=something %(with11)s lots of interpolation (11 steps)\nwith11=%(with10)s\nwith10=%(with9)s\nwith9=%(with8)s\nwith8=%(With7)s\nwith7=%(WITH6)s\nwith6=%(with5)s\nWith5=%(with4)s\nWITH4=%(with3)s\nwith3=%(with2)s\nwith2=%(with1)s\nwith1=with\n\n[Mutual Recursion]\nfoo=%(bar)s\nbar=%(foo)s\n\n[Interpolation Error]\nname=%(reference)s\n', lineno=319, col_offset=12)], [keyword('defaults', Dict([Str('getname', lineno=343, col_offset=22)], [Str('%(__name__)s', lineno=343, col_offset=33)], lineno=343, col_offset=21))], None, None, lineno=318, col_offset=15), lineno=318, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('check_items_config', arguments([Name('self', Param(), lineno=345, col_offset=27), Name('expected', Param(), lineno=345, col_offset=33)], None, None, []), [Assign([Name('cf', Store(), lineno=346, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=346, col_offset=13), 'fromstring', Load(), lineno=346, col_offset=13), [Str('[section]\nname = value\nkey: |%(name)s| \ngetdefault: |%(default)s|\ngetname: |%(__name__)s|', lineno=347, col_offset=12)], [keyword('defaults', Dict([Str('default', lineno=352, col_offset=22)], [Str('<default>', lineno=352, col_offset=33)], lineno=352, col_offset=21))], None, None, lineno=346, col_offset=13), lineno=346, col_offset=8), Assign([Name('L', Store(), lineno=353, col_offset=8)], Call(Name('list', Load(), lineno=353, col_offset=12), [Call(Attribute(Name('cf', Load(), lineno=353, col_offset=17), 'items', Load(), lineno=353, col_offset=17), [Str('section', lineno=353, col_offset=26)], [], None, None, lineno=353, col_offset=17)], [], None, None, lineno=353, col_offset=12), lineno=353, col_offset=8), Expr(Call(Attribute(Name('L', Load(), lineno=354, col_offset=8), 'sort', Load(), lineno=354, col_offset=8), [], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertEqual', Load(), lineno=355, col_offset=8), [Name('L', Load(), lineno=355, col_offset=25), Name('expected', Load(), lineno=355, col_offset=28)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8)], [], lineno=345, col_offset=4)], [], lineno=32, col_offset=0), ClassDef('ConfigParserTestCase', [Name('TestCaseBase', Load(), lineno=358, col_offset=27)], [Assign([Name('config_class', Store(), lineno=359, col_offset=4)], Attribute(Name('ConfigParser', Load(), lineno=359, col_offset=19), 'ConfigParser', Load(), lineno=359, col_offset=19), lineno=359, col_offset=4), Assign([Name('allow_no_value', Store(), lineno=360, col_offset=4)], Name('True', Load(), lineno=360, col_offset=21), lineno=360, col_offset=4), FunctionDef('test_interpolation', arguments([Name('self', Param(), lineno=362, col_offset=27)], None, None, []), [Assign([Name('rawval', Store(), lineno=363, col_offset=8)], Dict([Attribute(Name('ConfigParser', Load(), lineno=364, col_offset=12), 'ConfigParser', Load(), lineno=364, col_offset=12), Attribute(Name('ConfigParser', Load(), lineno=366, col_offset=12), 'SafeConfigParser', Load(), lineno=366, col_offset=12)], [Str('something %(with11)s lots of interpolation (11 steps)', lineno=364, col_offset=40), Str('%(with1)s', lineno=366, col_offset=43)], lineno=363, col_offset=17), lineno=363, col_offset=8), Assign([Name('cf', Store(), lineno=368, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=368, col_offset=13), 'get_interpolation_config', Load(), lineno=368, col_offset=13), [], [], None, None, lineno=368, col_offset=13), lineno=368, col_offset=8), Assign([Name('eq', Store(), lineno=369, col_offset=8)], Attribute(Name('self', Load(), lineno=369, col_offset=13), 'assertEqual', Load(), lineno=369, col_offset=13), lineno=369, col_offset=8), Expr(Call(Name('eq', Load(), lineno=370, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=370, col_offset=11), 'get', Load(), lineno=370, col_offset=11), [Str('Foo', lineno=370, col_offset=18), Str('getname', lineno=370, col_offset=25)], [], None, None, lineno=370, col_offset=11), Str('Foo', lineno=370, col_offset=37)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Expr(Call(Name('eq', Load(), lineno=371, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=371, col_offset=11), 'get', Load(), lineno=371, col_offset=11), [Str('Foo', lineno=371, col_offset=18), Str('bar', lineno=371, col_offset=25)], [], None, None, lineno=371, col_offset=11), Str('something with interpolation (1 step)', lineno=371, col_offset=33)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Name('eq', Load(), lineno=372, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=372, col_offset=11), 'get', Load(), lineno=372, col_offset=11), [Str('Foo', lineno=372, col_offset=18), Str('bar9', lineno=372, col_offset=25)], [], None, None, lineno=372, col_offset=11), Str('something with lots of interpolation (9 steps)', lineno=373, col_offset=11)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Name('eq', Load(), lineno=374, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=374, col_offset=11), 'get', Load(), lineno=374, col_offset=11), [Str('Foo', lineno=374, col_offset=18), Str('bar10', lineno=374, col_offset=25)], [], None, None, lineno=374, col_offset=11), Str('something with lots of interpolation (10 steps)', lineno=375, col_offset=11)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'get_error', Load(), lineno=376, col_offset=8), [Attribute(Name('ConfigParser', Load(), lineno=376, col_offset=23), 'InterpolationDepthError', Load(), lineno=376, col_offset=23), Str('Foo', lineno=376, col_offset=61), Str('bar11', lineno=376, col_offset=68)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8)], [], lineno=362, col_offset=4), FunctionDef('test_interpolation_missing_value', arguments([Name('self', Param(), lineno=378, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'get_interpolation_config', Load(), lineno=379, col_offset=8), [], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Assign([Name('e', Store(), lineno=380, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=380, col_offset=12), 'get_error', Load(), lineno=380, col_offset=12), [Attribute(Name('ConfigParser', Load(), lineno=380, col_offset=27), 'InterpolationError', Load(), lineno=380, col_offset=27), Str('Interpolation Error', lineno=381, col_offset=27), Str('name', lineno=381, col_offset=50)], [], None, None, lineno=380, col_offset=12), lineno=380, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'assertEqual', Load(), lineno=382, col_offset=8), [Attribute(Name('e', Load(), lineno=382, col_offset=25), 'reference', Load(), lineno=382, col_offset=25), Str('reference', lineno=382, col_offset=38)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'assertEqual', Load(), lineno=383, col_offset=8), [Attribute(Name('e', Load(), lineno=383, col_offset=25), 'section', Load(), lineno=383, col_offset=25), Str('Interpolation Error', lineno=383, col_offset=36)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertEqual', Load(), lineno=384, col_offset=8), [Attribute(Name('e', Load(), lineno=384, col_offset=25), 'option', Load(), lineno=384, col_offset=25), Str('name', lineno=384, col_offset=35)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8)], [], lineno=378, col_offset=4), FunctionDef('test_items', arguments([Name('self', Param(), lineno=386, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'check_items_config', Load(), lineno=387, col_offset=8), [List([Tuple([Str('default', lineno=387, col_offset=34), Str('<default>', lineno=387, col_offset=45)], Load(), lineno=387, col_offset=34), Tuple([Str('getdefault', lineno=388, col_offset=34), Str('|<default>|', lineno=388, col_offset=48)], Load(), lineno=388, col_offset=34), Tuple([Str('getname', lineno=389, col_offset=34), Str('|section|', lineno=389, col_offset=45)], Load(), lineno=389, col_offset=34), Tuple([Str('key', lineno=390, col_offset=34), Str('|value|', lineno=390, col_offset=41)], Load(), lineno=390, col_offset=34), Tuple([Str('name', lineno=391, col_offset=34), Str('value', lineno=391, col_offset=42)], Load(), lineno=391, col_offset=34)], Load(), lineno=387, col_offset=32)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8)], [], lineno=386, col_offset=4), FunctionDef('test_set_nonstring_types', arguments([Name('self', Param(), lineno=393, col_offset=33)], None, None, []), [Assign([Name('cf', Store(), lineno=394, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=394, col_offset=13), 'newconfig', Load(), lineno=394, col_offset=13), [], [], None, None, lineno=394, col_offset=13), lineno=394, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=395, col_offset=8), 'add_section', Load(), lineno=395, col_offset=8), [Str('non-string', lineno=395, col_offset=23)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=396, col_offset=8), 'set', Load(), lineno=396, col_offset=8), [Str('non-string', lineno=396, col_offset=15), Str('int', lineno=396, col_offset=29), Num(1, lineno=396, col_offset=36)], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=397, col_offset=8), 'set', Load(), lineno=397, col_offset=8), [Str('non-string', lineno=397, col_offset=15), Str('list', lineno=397, col_offset=29), List([Num(0, lineno=397, col_offset=38), Num(1, lineno=397, col_offset=41), Num(1, lineno=397, col_offset=44), Num(2, lineno=397, col_offset=47), Num(3, lineno=397, col_offset=50), Num(5, lineno=397, col_offset=53), Num(8, lineno=397, col_offset=56), Num(13, lineno=397, col_offset=59), Str('%(', lineno=397, col_offset=63)], Load(), lineno=397, col_offset=37)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=398, col_offset=8), 'set', Load(), lineno=398, col_offset=8), [Str('non-string', lineno=398, col_offset=15), Str('dict', lineno=398, col_offset=29), Dict([Str('pi', lineno=398, col_offset=38), Str('%(', lineno=398, col_offset=53), Str('%(list)', lineno=399, col_offset=38)], [Num(3.14159, lineno=398, col_offset=44), Num(1, lineno=398, col_offset=59), Str('%(list)', lineno=399, col_offset=49)], lineno=398, col_offset=37)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=400, col_offset=8), 'set', Load(), lineno=400, col_offset=8), [Str('non-string', lineno=400, col_offset=15), Str('string_with_interpolation', lineno=400, col_offset=29), Str('%(list)s', lineno=400, col_offset=58)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=401, col_offset=8), 'set', Load(), lineno=401, col_offset=8), [Str('non-string', lineno=401, col_offset=15), Str('no-value', lineno=401, col_offset=29)], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=402, col_offset=25), 'get', Load(), lineno=402, col_offset=25), [Str('non-string', lineno=402, col_offset=32), Str('int', lineno=402, col_offset=46)], [keyword('raw', Name('True', Load(), lineno=402, col_offset=57))], None, None, lineno=402, col_offset=25), Num(1, lineno=402, col_offset=64)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertRaises', Load(), lineno=403, col_offset=8), [Name('TypeError', Load(), lineno=403, col_offset=26), Attribute(Name('cf', Load(), lineno=403, col_offset=37), 'get', Load(), lineno=403, col_offset=37), Str('non-string', lineno=403, col_offset=45), Str('int', lineno=403, col_offset=59)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertEqual', Load(), lineno=404, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=404, col_offset=25), 'get', Load(), lineno=404, col_offset=25), [Str('non-string', lineno=404, col_offset=32), Str('list', lineno=404, col_offset=46)], [keyword('raw', Name('True', Load(), lineno=404, col_offset=58))], None, None, lineno=404, col_offset=25), List([Num(0, lineno=405, col_offset=26), Num(1, lineno=405, col_offset=29), Num(1, lineno=405, col_offset=32), Num(2, lineno=405, col_offset=35), Num(3, lineno=405, col_offset=38), Num(5, lineno=405, col_offset=41), Num(8, lineno=405, col_offset=44), Num(13, lineno=405, col_offset=47), Str('%(', lineno=405, col_offset=51)], Load(), lineno=405, col_offset=25)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertRaises', Load(), lineno=406, col_offset=8), [Name('TypeError', Load(), lineno=406, col_offset=26), Attribute(Name('cf', Load(), lineno=406, col_offset=37), 'get', Load(), lineno=406, col_offset=37), Str('non-string', lineno=406, col_offset=45), Str('list', lineno=406, col_offset=59)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertEqual', Load(), lineno=407, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=407, col_offset=25), 'get', Load(), lineno=407, col_offset=25), [Str('non-string', lineno=407, col_offset=32), Str('dict', lineno=407, col_offset=46)], [keyword('raw', Name('True', Load(), lineno=407, col_offset=58))], None, None, lineno=407, col_offset=25), Dict([Str('pi', lineno=408, col_offset=26), Str('%(', lineno=408, col_offset=41), Str('%(list)', lineno=408, col_offset=50)], [Num(3.14159, lineno=408, col_offset=32), Num(1, lineno=408, col_offset=47), Str('%(list)', lineno=408, col_offset=61)], lineno=408, col_offset=25)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertRaises', Load(), lineno=409, col_offset=8), [Name('TypeError', Load(), lineno=409, col_offset=26), Attribute(Name('cf', Load(), lineno=409, col_offset=37), 'get', Load(), lineno=409, col_offset=37), Str('non-string', lineno=409, col_offset=45), Str('dict', lineno=409, col_offset=59)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=410, col_offset=25), 'get', Load(), lineno=410, col_offset=25), [Str('non-string', lineno=410, col_offset=32), Str('string_with_interpolation', lineno=410, col_offset=46)], [keyword('raw', Name('True', Load(), lineno=411, col_offset=36))], None, None, lineno=410, col_offset=25), Str('%(list)s', lineno=411, col_offset=43)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertRaises', Load(), lineno=412, col_offset=8), [Name('ValueError', Load(), lineno=412, col_offset=26), Attribute(Name('cf', Load(), lineno=412, col_offset=38), 'get', Load(), lineno=412, col_offset=38), Str('non-string', lineno=412, col_offset=46), Str('string_with_interpolation', lineno=413, col_offset=26)], [keyword('raw', Name('False', Load(), lineno=413, col_offset=59))], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'assertEqual', Load(), lineno=414, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=414, col_offset=25), 'get', Load(), lineno=414, col_offset=25), [Str('non-string', lineno=414, col_offset=32), Str('no-value', lineno=414, col_offset=46)], [], None, None, lineno=414, col_offset=25), Name('None', Load(), lineno=414, col_offset=59)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8)], [], lineno=393, col_offset=4)], [], lineno=358, col_offset=0), ClassDef('MultilineValuesTestCase', [Name('TestCaseBase', Load(), lineno=416, col_offset=30)], [Assign([Name('config_class', Store(), lineno=417, col_offset=4)], Attribute(Name('ConfigParser', Load(), lineno=417, col_offset=19), 'ConfigParser', Load(), lineno=417, col_offset=19), lineno=417, col_offset=4), Assign([Name('wonderful_spam', Store(), lineno=418, col_offset=4)], Call(Attribute(Str("I'm having spam spam spam spam spam spam spam beaked beans spam spam spam and spam!", lineno=418, col_offset=22), 'replace', Load(), lineno=418, col_offset=22), [Str(' ', lineno=420, col_offset=53), Str('\t\n', lineno=420, col_offset=58)], [], None, None, lineno=418, col_offset=22), lineno=418, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=422, col_offset=14)], None, None, []), [Assign([Name('cf', Store(), lineno=423, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=423, col_offset=13), 'newconfig', Load(), lineno=423, col_offset=13), [], [], None, None, lineno=423, col_offset=13), lineno=423, col_offset=8), For(Name('i', Store(), lineno=424, col_offset=12), Call(Name('range', Load(), lineno=424, col_offset=17), [Num(100, lineno=424, col_offset=23)], [], None, None, lineno=424, col_offset=17), [Assign([Name('s', Store(), lineno=425, col_offset=12)], Call(Attribute(Str('section{}', lineno=425, col_offset=16), 'format', Load(), lineno=425, col_offset=16), [Name('i', Load(), lineno=425, col_offset=35)], [], None, None, lineno=425, col_offset=16), lineno=425, col_offset=12), Expr(Call(Attribute(Name('cf', Load(), lineno=426, col_offset=12), 'add_section', Load(), lineno=426, col_offset=12), [Name('s', Load(), lineno=426, col_offset=27)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=12), For(Name('j', Store(), lineno=427, col_offset=16), Call(Name('range', Load(), lineno=427, col_offset=21), [Num(10, lineno=427, col_offset=27)], [], None, None, lineno=427, col_offset=21), [Expr(Call(Attribute(Name('cf', Load(), lineno=428, col_offset=16), 'set', Load(), lineno=428, col_offset=16), [Name('s', Load(), lineno=428, col_offset=23), Call(Attribute(Str('lovely_spam{}', lineno=428, col_offset=26), 'format', Load(), lineno=428, col_offset=26), [Name('j', Load(), lineno=428, col_offset=49)], [], None, None, lineno=428, col_offset=26), Attribute(Name('self', Load(), lineno=428, col_offset=53), 'wonderful_spam', Load(), lineno=428, col_offset=53)], [], None, None, lineno=428, col_offset=16), lineno=428, col_offset=16)], [], lineno=427, col_offset=12)], [], lineno=424, col_offset=8), With(Call(Name('open', Load(), lineno=429, col_offset=13), [Attribute(Name('test_support', Load(), lineno=429, col_offset=18), 'TESTFN', Load(), lineno=429, col_offset=18), Str('w', lineno=429, col_offset=39)], [], None, None, lineno=429, col_offset=13), Name('f', Store(), lineno=429, col_offset=47), [Expr(Call(Attribute(Name('cf', Load(), lineno=430, col_offset=12), 'write', Load(), lineno=430, col_offset=12), [Name('f', Load(), lineno=430, col_offset=21)], [], None, None, lineno=430, col_offset=12), lineno=430, col_offset=12)], lineno=429, col_offset=13)], [], lineno=422, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=432, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=433, col_offset=8), 'unlink', Load(), lineno=433, col_offset=8), [Attribute(Name('test_support', Load(), lineno=433, col_offset=18), 'TESTFN', Load(), lineno=433, col_offset=18)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8)], [], lineno=432, col_offset=4), FunctionDef('test_dominating_multiline_values', arguments([Name('self', Param(), lineno=435, col_offset=41)], None, None, []), [Assign([Name('cf_from_file', Store(), lineno=438, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=438, col_offset=23), 'newconfig', Load(), lineno=438, col_offset=23), [], [], None, None, lineno=438, col_offset=23), lineno=438, col_offset=8), With(Call(Name('open', Load(), lineno=439, col_offset=13), [Attribute(Name('test_support', Load(), lineno=439, col_offset=18), 'TESTFN', Load(), lineno=439, col_offset=18)], [], None, None, lineno=439, col_offset=13), Name('f', Store(), lineno=439, col_offset=42), [Expr(Call(Attribute(Name('cf_from_file', Load(), lineno=440, col_offset=12), 'readfp', Load(), lineno=440, col_offset=12), [Name('f', Load(), lineno=440, col_offset=32)], [], None, None, lineno=440, col_offset=12), lineno=440, col_offset=12)], lineno=439, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=441, col_offset=8), 'assertEqual', Load(), lineno=441, col_offset=8), [Call(Attribute(Name('cf_from_file', Load(), lineno=441, col_offset=25), 'get', Load(), lineno=441, col_offset=25), [Str('section8', lineno=441, col_offset=42), Str('lovely_spam4', lineno=441, col_offset=54)], [], None, None, lineno=441, col_offset=25), Call(Attribute(Attribute(Name('self', Load(), lineno=442, col_offset=25), 'wonderful_spam', Load(), lineno=442, col_offset=25), 'replace', Load(), lineno=442, col_offset=25), [Str('\t\n', lineno=442, col_offset=53), Str('\n', lineno=442, col_offset=61)], [], None, None, lineno=442, col_offset=25)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8)], [], lineno=435, col_offset=4)], [], lineno=416, col_offset=0), ClassDef('RawConfigParserTestCase', [Name('TestCaseBase', Load(), lineno=444, col_offset=30)], [Assign([Name('config_class', Store(), lineno=445, col_offset=4)], Attribute(Name('ConfigParser', Load(), lineno=445, col_offset=19), 'RawConfigParser', Load(), lineno=445, col_offset=19), lineno=445, col_offset=4), FunctionDef('test_interpolation', arguments([Name('self', Param(), lineno=447, col_offset=27)], None, None, []), [Assign([Name('cf', Store(), lineno=448, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=448, col_offset=13), 'get_interpolation_config', Load(), lineno=448, col_offset=13), [], [], None, None, lineno=448, col_offset=13), lineno=448, col_offset=8), Assign([Name('eq', Store(), lineno=449, col_offset=8)], Attribute(Name('self', Load(), lineno=449, col_offset=13), 'assertEqual', Load(), lineno=449, col_offset=13), lineno=449, col_offset=8), Expr(Call(Name('eq', Load(), lineno=450, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=450, col_offset=11), 'get', Load(), lineno=450, col_offset=11), [Str('Foo', lineno=450, col_offset=18), Str('getname', lineno=450, col_offset=25)], [], None, None, lineno=450, col_offset=11), Str('%(__name__)s', lineno=450, col_offset=37)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8), Expr(Call(Name('eq', Load(), lineno=451, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=451, col_offset=11), 'get', Load(), lineno=451, col_offset=11), [Str('Foo', lineno=451, col_offset=18), Str('bar', lineno=451, col_offset=25)], [], None, None, lineno=451, col_offset=11), Str('something %(with1)s interpolation (1 step)', lineno=452, col_offset=11)], [], None, None, lineno=451, col_offset=8), lineno=451, col_offset=8), Expr(Call(Name('eq', Load(), lineno=453, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=453, col_offset=11), 'get', Load(), lineno=453, col_offset=11), [Str('Foo', lineno=453, col_offset=18), Str('bar9', lineno=453, col_offset=25)], [], None, None, lineno=453, col_offset=11), Str('something %(with9)s lots of interpolation (9 steps)', lineno=454, col_offset=11)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8), Expr(Call(Name('eq', Load(), lineno=455, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=455, col_offset=11), 'get', Load(), lineno=455, col_offset=11), [Str('Foo', lineno=455, col_offset=18), Str('bar10', lineno=455, col_offset=25)], [], None, None, lineno=455, col_offset=11), Str('something %(with10)s lots of interpolation (10 steps)', lineno=456, col_offset=11)], [], None, None, lineno=455, col_offset=8), lineno=455, col_offset=8), Expr(Call(Name('eq', Load(), lineno=457, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=457, col_offset=11), 'get', Load(), lineno=457, col_offset=11), [Str('Foo', lineno=457, col_offset=18), Str('bar11', lineno=457, col_offset=25)], [], None, None, lineno=457, col_offset=11), Str('something %(with11)s lots of interpolation (11 steps)', lineno=458, col_offset=11)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8)], [], lineno=447, col_offset=4), FunctionDef('test_items', arguments([Name('self', Param(), lineno=460, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=8), 'check_items_config', Load(), lineno=461, col_offset=8), [List([Tuple([Str('default', lineno=461, col_offset=34), Str('<default>', lineno=461, col_offset=45)], Load(), lineno=461, col_offset=34), Tuple([Str('getdefault', lineno=462, col_offset=34), Str('|%(default)s|', lineno=462, col_offset=48)], Load(), lineno=462, col_offset=34), Tuple([Str('getname', lineno=463, col_offset=34), Str('|%(__name__)s|', lineno=463, col_offset=45)], Load(), lineno=463, col_offset=34), Tuple([Str('key', lineno=464, col_offset=34), Str('|%(name)s|', lineno=464, col_offset=41)], Load(), lineno=464, col_offset=34), Tuple([Str('name', lineno=465, col_offset=34), Str('value', lineno=465, col_offset=42)], Load(), lineno=465, col_offset=34)], Load(), lineno=461, col_offset=32)], [], None, None, lineno=461, col_offset=8), lineno=461, col_offset=8)], [], lineno=460, col_offset=4), FunctionDef('test_set_nonstring_types', arguments([Name('self', Param(), lineno=467, col_offset=33)], None, None, []), [Assign([Name('cf', Store(), lineno=468, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=468, col_offset=13), 'newconfig', Load(), lineno=468, col_offset=13), [], [], None, None, lineno=468, col_offset=13), lineno=468, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=469, col_offset=8), 'add_section', Load(), lineno=469, col_offset=8), [Str('non-string', lineno=469, col_offset=23)], [], None, None, lineno=469, col_offset=8), lineno=469, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=470, col_offset=8), 'set', Load(), lineno=470, col_offset=8), [Str('non-string', lineno=470, col_offset=15), Str('int', lineno=470, col_offset=29), Num(1, lineno=470, col_offset=36)], [], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=471, col_offset=8), 'set', Load(), lineno=471, col_offset=8), [Str('non-string', lineno=471, col_offset=15), Str('list', lineno=471, col_offset=29), List([Num(0, lineno=471, col_offset=38), Num(1, lineno=471, col_offset=41), Num(1, lineno=471, col_offset=44), Num(2, lineno=471, col_offset=47), Num(3, lineno=471, col_offset=50), Num(5, lineno=471, col_offset=53), Num(8, lineno=471, col_offset=56), Num(13, lineno=471, col_offset=59)], Load(), lineno=471, col_offset=37)], [], None, None, lineno=471, col_offset=8), lineno=471, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=472, col_offset=8), 'set', Load(), lineno=472, col_offset=8), [Str('non-string', lineno=472, col_offset=15), Str('dict', lineno=472, col_offset=29), Dict([Str('pi', lineno=472, col_offset=38)], [Num(3.14159, lineno=472, col_offset=44)], lineno=472, col_offset=37)], [], None, None, lineno=472, col_offset=8), lineno=472, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=473, col_offset=8), 'assertEqual', Load(), lineno=473, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=473, col_offset=25), 'get', Load(), lineno=473, col_offset=25), [Str('non-string', lineno=473, col_offset=32), Str('int', lineno=473, col_offset=46)], [], None, None, lineno=473, col_offset=25), Num(1, lineno=473, col_offset=54)], [], None, None, lineno=473, col_offset=8), lineno=473, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=474, col_offset=8), 'assertEqual', Load(), lineno=474, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=474, col_offset=25), 'get', Load(), lineno=474, col_offset=25), [Str('non-string', lineno=474, col_offset=32), Str('list', lineno=474, col_offset=46)], [], None, None, lineno=474, col_offset=25), List([Num(0, lineno=475, col_offset=26), Num(1, lineno=475, col_offset=29), Num(1, lineno=475, col_offset=32), Num(2, lineno=475, col_offset=35), Num(3, lineno=475, col_offset=38), Num(5, lineno=475, col_offset=41), Num(8, lineno=475, col_offset=44), Num(13, lineno=475, col_offset=47)], Load(), lineno=475, col_offset=25)], [], None, None, lineno=474, col_offset=8), lineno=474, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=476, col_offset=8), 'assertEqual', Load(), lineno=476, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=476, col_offset=25), 'get', Load(), lineno=476, col_offset=25), [Str('non-string', lineno=476, col_offset=32), Str('dict', lineno=476, col_offset=46)], [], None, None, lineno=476, col_offset=25), Dict([Str('pi', lineno=476, col_offset=56)], [Num(3.14159, lineno=476, col_offset=62)], lineno=476, col_offset=55)], [], None, None, lineno=476, col_offset=8), lineno=476, col_offset=8)], [], lineno=467, col_offset=4)], [], lineno=444, col_offset=0), ClassDef('SafeConfigParserTestCase', [Name('ConfigParserTestCase', Load(), lineno=479, col_offset=31)], [Assign([Name('config_class', Store(), lineno=480, col_offset=4)], Attribute(Name('ConfigParser', Load(), lineno=480, col_offset=19), 'SafeConfigParser', Load(), lineno=480, col_offset=19), lineno=480, col_offset=4), FunctionDef('test_safe_interpolation', arguments([Name('self', Param(), lineno=482, col_offset=32)], None, None, []), [Assign([Name('cf', Store(), lineno=484, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=484, col_offset=13), 'fromstring', Load(), lineno=484, col_offset=13), [Str('[section]\noption1=xxx\noption2=%(option1)s/xxx\nok=%(option1)s/%%s\nnot_ok=%(option2)s/%%s', lineno=484, col_offset=29)], [], None, None, lineno=484, col_offset=13), lineno=484, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=489, col_offset=8), 'assertEqual', Load(), lineno=489, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=489, col_offset=25), 'get', Load(), lineno=489, col_offset=25), [Str('section', lineno=489, col_offset=32), Str('ok', lineno=489, col_offset=43)], [], None, None, lineno=489, col_offset=25), Str('xxx/%s', lineno=489, col_offset=50)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'assertEqual', Load(), lineno=490, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=490, col_offset=25), 'get', Load(), lineno=490, col_offset=25), [Str('section', lineno=490, col_offset=32), Str('not_ok', lineno=490, col_offset=43)], [], None, None, lineno=490, col_offset=25), Str('xxx/xxx/%s', lineno=490, col_offset=54)], [], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8)], [], lineno=482, col_offset=4), FunctionDef('test_set_malformatted_interpolation', arguments([Name('self', Param(), lineno=492, col_offset=44)], None, None, []), [Assign([Name('cf', Store(), lineno=493, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=493, col_offset=13), 'fromstring', Load(), lineno=493, col_offset=13), [Str('[sect]\noption1=foo\n', lineno=493, col_offset=29)], [], None, None, lineno=493, col_offset=13), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=8), 'assertEqual', Load(), lineno=496, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=496, col_offset=25), 'get', Load(), lineno=496, col_offset=25), [Str('sect', lineno=496, col_offset=32), Str('option1', lineno=496, col_offset=40)], [], None, None, lineno=496, col_offset=25), Str('foo', lineno=496, col_offset=52)], [], None, None, lineno=496, col_offset=8), lineno=496, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=498, col_offset=8), 'assertRaises', Load(), lineno=498, col_offset=8), [Name('ValueError', Load(), lineno=498, col_offset=26), Attribute(Name('cf', Load(), lineno=498, col_offset=38), 'set', Load(), lineno=498, col_offset=38), Str('sect', lineno=498, col_offset=46), Str('option1', lineno=498, col_offset=54), Str('%foo', lineno=498, col_offset=65)], [], None, None, lineno=498, col_offset=8), lineno=498, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=8), 'assertRaises', Load(), lineno=499, col_offset=8), [Name('ValueError', Load(), lineno=499, col_offset=26), Attribute(Name('cf', Load(), lineno=499, col_offset=38), 'set', Load(), lineno=499, col_offset=38), Str('sect', lineno=499, col_offset=46), Str('option1', lineno=499, col_offset=54), Str('foo%', lineno=499, col_offset=65)], [], None, None, lineno=499, col_offset=8), lineno=499, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=500, col_offset=8), 'assertRaises', Load(), lineno=500, col_offset=8), [Name('ValueError', Load(), lineno=500, col_offset=26), Attribute(Name('cf', Load(), lineno=500, col_offset=38), 'set', Load(), lineno=500, col_offset=38), Str('sect', lineno=500, col_offset=46), Str('option1', lineno=500, col_offset=54), Str('f%oo', lineno=500, col_offset=65)], [], None, None, lineno=500, col_offset=8), lineno=500, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=502, col_offset=8), 'assertEqual', Load(), lineno=502, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=502, col_offset=25), 'get', Load(), lineno=502, col_offset=25), [Str('sect', lineno=502, col_offset=32), Str('option1', lineno=502, col_offset=40)], [], None, None, lineno=502, col_offset=25), Str('foo', lineno=502, col_offset=52)], [], None, None, lineno=502, col_offset=8), lineno=502, col_offset=8), Expr(Call(Attribute(Name('cf', Load(), lineno=505, col_offset=8), 'set', Load(), lineno=505, col_offset=8), [Str('sect', lineno=505, col_offset=15), Str('option2', lineno=505, col_offset=23), Str('foo%%bar', lineno=505, col_offset=34)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=506, col_offset=8), 'assertEqual', Load(), lineno=506, col_offset=8), [Call(Attribute(Name('cf', Load(), lineno=506, col_offset=25), 'get', Load(), lineno=506, col_offset=25), [Str('sect', lineno=506, col_offset=32), Str('option2', lineno=506, col_offset=40)], [], None, None, lineno=506, col_offset=25), Str('foo%bar', lineno=506, col_offset=52)], [], None, None, lineno=506, col_offset=8), lineno=506, col_offset=8)], [], lineno=492, col_offset=4), FunctionDef('test_set_nonstring_types', arguments([Name('self', Param(), lineno=508, col_offset=33)], None, None, []), [Assign([Name('cf', Store(), lineno=509, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=509, col_offset=13), 'fromstring', Load(), lineno=509, col_offset=13), [Str('[sect]\noption1=foo\n', lineno=509, col_offset=29)], [], None, None, lineno=509, col_offset=13), lineno=509, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=513, col_offset=8), 'assertRaises', Load(), lineno=513, col_offset=8), [Name('TypeError', Load(), lineno=513, col_offset=26), Attribute(Name('cf', Load(), lineno=513, col_offset=37), 'set', Load(), lineno=513, col_offset=37), Str('sect', lineno=513, col_offset=45), Str('option1', lineno=513, col_offset=53), Num(1, lineno=513, col_offset=64)], [], None, None, lineno=513, col_offset=8), lineno=513, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=514, col_offset=8), 'assertRaises', Load(), lineno=514, col_offset=8), [Name('TypeError', Load(), lineno=514, col_offset=26), Attribute(Name('cf', Load(), lineno=514, col_offset=37), 'set', Load(), lineno=514, col_offset=37), Str('sect', lineno=514, col_offset=45), Str('option1', lineno=514, col_offset=53), Num(1.0, lineno=514, col_offset=64)], [], None, None, lineno=514, col_offset=8), lineno=514, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=8), 'assertRaises', Load(), lineno=515, col_offset=8), [Name('TypeError', Load(), lineno=515, col_offset=26), Attribute(Name('cf', Load(), lineno=515, col_offset=37), 'set', Load(), lineno=515, col_offset=37), Str('sect', lineno=515, col_offset=45), Str('option1', lineno=515, col_offset=53), Call(Name('object', Load(), lineno=515, col_offset=64), [], [], None, None, lineno=515, col_offset=64)], [], None, None, lineno=515, col_offset=8), lineno=515, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertRaises', Load(), lineno=516, col_offset=8), [Name('TypeError', Load(), lineno=516, col_offset=26), Attribute(Name('cf', Load(), lineno=516, col_offset=37), 'set', Load(), lineno=516, col_offset=37), Str('sect', lineno=516, col_offset=45), Str('option2', lineno=516, col_offset=53), Num(1, lineno=516, col_offset=64)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=517, col_offset=8), 'assertRaises', Load(), lineno=517, col_offset=8), [Name('TypeError', Load(), lineno=517, col_offset=26), Attribute(Name('cf', Load(), lineno=517, col_offset=37), 'set', Load(), lineno=517, col_offset=37), Str('sect', lineno=517, col_offset=45), Str('option2', lineno=517, col_offset=53), Num(1.0, lineno=517, col_offset=64)], [], None, None, lineno=517, col_offset=8), lineno=517, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=8), 'assertRaises', Load(), lineno=518, col_offset=8), [Name('TypeError', Load(), lineno=518, col_offset=26), Attribute(Name('cf', Load(), lineno=518, col_offset=37), 'set', Load(), lineno=518, col_offset=37), Str('sect', lineno=518, col_offset=45), Str('option2', lineno=518, col_offset=53), Call(Name('object', Load(), lineno=518, col_offset=64), [], [], None, None, lineno=518, col_offset=64)], [], None, None, lineno=518, col_offset=8), lineno=518, col_offset=8)], [], lineno=508, col_offset=4), FunctionDef('test_add_section_default_1', arguments([Name('self', Param(), lineno=520, col_offset=35)], None, None, []), [Assign([Name('cf', Store(), lineno=521, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=521, col_offset=13), 'newconfig', Load(), lineno=521, col_offset=13), [], [], None, None, lineno=521, col_offset=13), lineno=521, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=522, col_offset=8), 'assertRaises', Load(), lineno=522, col_offset=8), [Name('ValueError', Load(), lineno=522, col_offset=26), Attribute(Name('cf', Load(), lineno=522, col_offset=38), 'add_section', Load(), lineno=522, col_offset=38), Str('default', lineno=522, col_offset=54)], [], None, None, lineno=522, col_offset=8), lineno=522, col_offset=8)], [], lineno=520, col_offset=4), FunctionDef('test_add_section_default_2', arguments([Name('self', Param(), lineno=524, col_offset=35)], None, None, []), [Assign([Name('cf', Store(), lineno=525, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=525, col_offset=13), 'newconfig', Load(), lineno=525, col_offset=13), [], [], None, None, lineno=525, col_offset=13), lineno=525, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=8), 'assertRaises', Load(), lineno=526, col_offset=8), [Name('ValueError', Load(), lineno=526, col_offset=26), Attribute(Name('cf', Load(), lineno=526, col_offset=38), 'add_section', Load(), lineno=526, col_offset=38), Str('DEFAULT', lineno=526, col_offset=54)], [], None, None, lineno=526, col_offset=8), lineno=526, col_offset=8)], [], lineno=524, col_offset=4)], [], lineno=479, col_offset=0), ClassDef('SafeConfigParserTestCaseNoValue', [Name('SafeConfigParserTestCase', Load(), lineno=529, col_offset=38)], [Assign([Name('allow_no_value', Store(), lineno=530, col_offset=4)], Name('True', Load(), lineno=530, col_offset=21), lineno=530, col_offset=4)], [], lineno=529, col_offset=0), ClassDef('Issue7005TestCase', [Attribute(Name('unittest', Load(), lineno=533, col_offset=24), 'TestCase', Load(), lineno=533, col_offset=24)], [Expr(Str('Test output when None is set() as a value and allow_no_value == False.\n\n    http://bugs.python.org/issue7005\n\n    ', lineno=538, col_offset=-1), lineno=538, col_offset=-1), Assign([Name('expected_output', Store(), lineno=540, col_offset=4)], Str('[section]\noption = None\n\n', lineno=540, col_offset=22), lineno=540, col_offset=4), FunctionDef('prepare', arguments([Name('self', Param(), lineno=542, col_offset=16), Name('config_class', Param(), lineno=542, col_offset=22)], None, None, []), [Assign([Name('cp', Store(), lineno=544, col_offset=8)], Call(Name('config_class', Load(), lineno=544, col_offset=13), [], [keyword('allow_no_value', Name('False', Load(), lineno=544, col_offset=41))], None, None, lineno=544, col_offset=13), lineno=544, col_offset=8), Expr(Call(Attribute(Name('cp', Load(), lineno=545, col_offset=8), 'add_section', Load(), lineno=545, col_offset=8), [Str('section', lineno=545, col_offset=23)], [], None, None, lineno=545, col_offset=8), lineno=545, col_offset=8), Expr(Call(Attribute(Name('cp', Load(), lineno=546, col_offset=8), 'set', Load(), lineno=546, col_offset=8), [Str('section', lineno=546, col_offset=15), Str('option', lineno=546, col_offset=26), Name('None', Load(), lineno=546, col_offset=36)], [], None, None, lineno=546, col_offset=8), lineno=546, col_offset=8), Assign([Name('sio', Store(), lineno=547, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=547, col_offset=14), 'StringIO', Load(), lineno=547, col_offset=14), [], [], None, None, lineno=547, col_offset=14), lineno=547, col_offset=8), Expr(Call(Attribute(Name('cp', Load(), lineno=548, col_offset=8), 'write', Load(), lineno=548, col_offset=8), [Name('sio', Load(), lineno=548, col_offset=17)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8), Return(Call(Attribute(Name('sio', Load(), lineno=549, col_offset=15), 'getvalue', Load(), lineno=549, col_offset=15), [], [], None, None, lineno=549, col_offset=15), lineno=549, col_offset=8)], [], lineno=542, col_offset=4), FunctionDef('test_none_as_value_stringified', arguments([Name('self', Param(), lineno=551, col_offset=39)], None, None, []), [Assign([Name('output', Store(), lineno=552, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=552, col_offset=17), 'prepare', Load(), lineno=552, col_offset=17), [Attribute(Name('ConfigParser', Load(), lineno=552, col_offset=30), 'ConfigParser', Load(), lineno=552, col_offset=30)], [], None, None, lineno=552, col_offset=17), lineno=552, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=553, col_offset=8), 'assertEqual', Load(), lineno=553, col_offset=8), [Name('output', Load(), lineno=553, col_offset=25), Attribute(Name('self', Load(), lineno=553, col_offset=33), 'expected_output', Load(), lineno=553, col_offset=33)], [], None, None, lineno=553, col_offset=8), lineno=553, col_offset=8)], [], lineno=551, col_offset=4), FunctionDef('test_none_as_value_stringified_raw', arguments([Name('self', Param(), lineno=555, col_offset=43)], None, None, []), [Assign([Name('output', Store(), lineno=556, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=556, col_offset=17), 'prepare', Load(), lineno=556, col_offset=17), [Attribute(Name('ConfigParser', Load(), lineno=556, col_offset=30), 'RawConfigParser', Load(), lineno=556, col_offset=30)], [], None, None, lineno=556, col_offset=17), lineno=556, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=557, col_offset=8), 'assertEqual', Load(), lineno=557, col_offset=8), [Name('output', Load(), lineno=557, col_offset=25), Attribute(Name('self', Load(), lineno=557, col_offset=33), 'expected_output', Load(), lineno=557, col_offset=33)], [], None, None, lineno=557, col_offset=8), lineno=557, col_offset=8)], [], lineno=555, col_offset=4)], [], lineno=533, col_offset=0), ClassDef('SortedTestCase', [Name('RawConfigParserTestCase', Load(), lineno=560, col_offset=21)], [FunctionDef('newconfig', arguments([Name('self', Param(), lineno=561, col_offset=18), Name('defaults', Param(), lineno=561, col_offset=24)], None, None, [Name('None', Load(), lineno=561, col_offset=33)]), [Assign([Attribute(Name('self', Load(), lineno=562, col_offset=8), 'cf', Store(), lineno=562, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=562, col_offset=18), 'config_class', Load(), lineno=562, col_offset=18), [], [keyword('defaults', Name('defaults', Load(), lineno=562, col_offset=45)), keyword('dict_type', Name('SortedDict', Load(), lineno=562, col_offset=65))], None, None, lineno=562, col_offset=18), lineno=562, col_offset=8), Return(Attribute(Name('self', Load(), lineno=563, col_offset=15), 'cf', Load(), lineno=563, col_offset=15), lineno=563, col_offset=8)], [], lineno=561, col_offset=4), FunctionDef('test_sorted', arguments([Name('self', Param(), lineno=565, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=566, col_offset=8), 'fromstring', Load(), lineno=566, col_offset=8), [Str('[b]\no4=1\no3=2\no2=3\no1=4\n[a]\nk=v\n', lineno=566, col_offset=24)], [], None, None, lineno=566, col_offset=8), lineno=566, col_offset=8), Assign([Name('output', Store(), lineno=573, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=573, col_offset=17), 'StringIO', Load(), lineno=573, col_offset=17), [], [], None, None, lineno=573, col_offset=17), lineno=573, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=574, col_offset=8), 'cf', Load(), lineno=574, col_offset=8), 'write', Load(), lineno=574, col_offset=8), [Name('output', Load(), lineno=574, col_offset=22)], [], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=575, col_offset=8), 'assertEqual', Load(), lineno=575, col_offset=8), [Call(Attribute(Name('output', Load(), lineno=575, col_offset=25), 'getvalue', Load(), lineno=575, col_offset=25), [], [], None, None, lineno=575, col_offset=25), Str('[a]\nk = v\n\n[b]\no1 = 4\no2 = 3\no3 = 2\no4 = 1\n\n', lineno=576, col_offset=25)], [], None, None, lineno=575, col_offset=8), lineno=575, col_offset=8)], [], lineno=565, col_offset=4)], [], lineno=560, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=586, col_offset=4), 'run_unittest', Load(), lineno=586, col_offset=4), [Name('ConfigParserTestCase', Load(), lineno=587, col_offset=8), Name('MultilineValuesTestCase', Load(), lineno=588, col_offset=8), Name('RawConfigParserTestCase', Load(), lineno=589, col_offset=8), Name('SafeConfigParserTestCase', Load(), lineno=590, col_offset=8), Name('SafeConfigParserTestCaseNoValue', Load(), lineno=591, col_offset=8), Name('SortedTestCase', Load(), lineno=592, col_offset=8), Name('Issue7005TestCase', Load(), lineno=593, col_offset=8)], [], None, None, lineno=586, col_offset=4), lineno=586, col_offset=4)], [], lineno=585, col_offset=0), If(Compare(Name('__name__', Load(), lineno=597, col_offset=3), [Eq()], [Str('__main__', lineno=597, col_offset=15)], lineno=597, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=598, col_offset=4), [], [], None, None, lineno=598, col_offset=4), lineno=598, col_offset=4)], [], lineno=597, col_offset=0)])
