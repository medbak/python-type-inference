Module([Assign([Name('__all__', Store(), lineno=9, col_offset=0)], List([Str('Process', lineno=9, col_offset=11), Str('current_process', lineno=9, col_offset=22), Str('active_children', lineno=9, col_offset=41)], Load(), lineno=9, col_offset=10), lineno=9, col_offset=0), Import([alias('os', None)], lineno=15, col_offset=0), Import([alias('sys', None)], lineno=16, col_offset=0), Import([alias('signal', None)], lineno=17, col_offset=0), Import([alias('itertools', None)], lineno=18, col_offset=0), TryExcept([Assign([Name('ORIGINAL_DIR', Store(), lineno=25, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=25, col_offset=19), 'path', Load(), lineno=25, col_offset=19), 'abspath', Load(), lineno=25, col_offset=19), [Call(Attribute(Name('os', Load(), lineno=25, col_offset=35), 'getcwd', Load(), lineno=25, col_offset=35), [], [], None, None, lineno=25, col_offset=35)], [], None, None, lineno=25, col_offset=19), lineno=25, col_offset=4)], [ExceptHandler(Name('OSError', Load(), lineno=26, col_offset=7), None, [Assign([Name('ORIGINAL_DIR', Store(), lineno=27, col_offset=4)], Name('None', Load(), lineno=27, col_offset=19), lineno=27, col_offset=4)], lineno=26, col_offset=0)], [], lineno=24, col_offset=0), FunctionDef('current_process', arguments([], None, None, []), [Expr(Str('\n    Return process object representing the current process\n    ', lineno=36, col_offset=-1), lineno=36, col_offset=-1), Return(Name('_current_process', Load(), lineno=37, col_offset=11), lineno=37, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('active_children', arguments([], None, None, []), [Expr(Str('\n    Return list of process objects corresponding to live child processes\n    ', lineno=42, col_offset=-1), lineno=42, col_offset=-1), Expr(Call(Name('_cleanup', Load(), lineno=43, col_offset=4), [], [], None, None, lineno=43, col_offset=4), lineno=43, col_offset=4), Return(Call(Name('list', Load(), lineno=44, col_offset=11), [Attribute(Name('_current_process', Load(), lineno=44, col_offset=16), '_children', Load(), lineno=44, col_offset=16)], [], None, None, lineno=44, col_offset=11), lineno=44, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('_cleanup', arguments([], None, None, []), [For(Name('p', Store(), lineno=52, col_offset=8), Call(Name('list', Load(), lineno=52, col_offset=13), [Attribute(Name('_current_process', Load(), lineno=52, col_offset=18), '_children', Load(), lineno=52, col_offset=18)], [], None, None, lineno=52, col_offset=13), [If(Compare(Call(Attribute(Attribute(Name('p', Load(), lineno=53, col_offset=11), '_popen', Load(), lineno=53, col_offset=11), 'poll', Load(), lineno=53, col_offset=11), [], [], None, None, lineno=53, col_offset=11), [IsNot()], [Name('None', Load(), lineno=53, col_offset=34)], lineno=53, col_offset=11), [Expr(Call(Attribute(Attribute(Name('_current_process', Load(), lineno=54, col_offset=12), '_children', Load(), lineno=54, col_offset=12), 'discard', Load(), lineno=54, col_offset=12), [Name('p', Load(), lineno=54, col_offset=47)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], [], lineno=53, col_offset=8)], [], lineno=52, col_offset=4)], [], lineno=50, col_offset=0), ClassDef('Process', [Name('object', Load(), lineno=60, col_offset=14)], [Expr(Str('\n    Process objects represent activity that is run in a separate process\n\n    The class is analagous to `threading.Thread`\n    ', lineno=65, col_offset=-1), lineno=65, col_offset=-1), Assign([Name('_Popen', Store(), lineno=66, col_offset=4)], Name('None', Load(), lineno=66, col_offset=13), lineno=66, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=68, col_offset=17), Name('group', Param(), lineno=68, col_offset=23), Name('target', Param(), lineno=68, col_offset=35), Name('name', Param(), lineno=68, col_offset=48), Name('args', Param(), lineno=68, col_offset=59), Name('kwargs', Param(), lineno=68, col_offset=68)], None, None, [Name('None', Load(), lineno=68, col_offset=29), Name('None', Load(), lineno=68, col_offset=42), Name('None', Load(), lineno=68, col_offset=53), Tuple([], Load(), lineno=68, col_offset=64), Dict([], [], lineno=68, col_offset=75)]), [Assert(Compare(Name('group', Load(), lineno=69, col_offset=15), [Is()], [Name('None', Load(), lineno=69, col_offset=24)], lineno=69, col_offset=15), Str('group argument must be None for now', lineno=69, col_offset=30), lineno=69, col_offset=8), Assign([Name('count', Store(), lineno=70, col_offset=8)], Call(Attribute(Attribute(Name('_current_process', Load(), lineno=70, col_offset=16), '_counter', Load(), lineno=70, col_offset=16), 'next', Load(), lineno=70, col_offset=16), [], [], None, None, lineno=70, col_offset=16), lineno=70, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=71, col_offset=8), '_identity', Store(), lineno=71, col_offset=8)], BinOp(Attribute(Name('_current_process', Load(), lineno=71, col_offset=25), '_identity', Load(), lineno=71, col_offset=25), Add(), Tuple([Name('count', Load(), lineno=71, col_offset=55)], Load(), lineno=71, col_offset=55), lineno=71, col_offset=25), lineno=71, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=72, col_offset=8), '_authkey', Store(), lineno=72, col_offset=8)], Attribute(Name('_current_process', Load(), lineno=72, col_offset=24), '_authkey', Load(), lineno=72, col_offset=24), lineno=72, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=73, col_offset=8), '_daemonic', Store(), lineno=73, col_offset=8)], Attribute(Name('_current_process', Load(), lineno=73, col_offset=25), '_daemonic', Load(), lineno=73, col_offset=25), lineno=73, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=74, col_offset=8), '_tempdir', Store(), lineno=74, col_offset=8)], Attribute(Name('_current_process', Load(), lineno=74, col_offset=24), '_tempdir', Load(), lineno=74, col_offset=24), lineno=74, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=75, col_offset=8), '_parent_pid', Store(), lineno=75, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=75, col_offset=27), 'getpid', Load(), lineno=75, col_offset=27), [], [], None, None, lineno=75, col_offset=27), lineno=75, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), '_popen', Store(), lineno=76, col_offset=8)], Name('None', Load(), lineno=76, col_offset=22), lineno=76, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=77, col_offset=8), '_target', Store(), lineno=77, col_offset=8)], Name('target', Load(), lineno=77, col_offset=23), lineno=77, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=78, col_offset=8), '_args', Store(), lineno=78, col_offset=8)], Call(Name('tuple', Load(), lineno=78, col_offset=21), [Name('args', Load(), lineno=78, col_offset=27)], [], None, None, lineno=78, col_offset=21), lineno=78, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=79, col_offset=8), '_kwargs', Store(), lineno=79, col_offset=8)], Call(Name('dict', Load(), lineno=79, col_offset=23), [Name('kwargs', Load(), lineno=79, col_offset=28)], [], None, None, lineno=79, col_offset=23), lineno=79, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=80, col_offset=8), '_name', Store(), lineno=80, col_offset=8)], BoolOp(Or(), [Name('name', Load(), lineno=80, col_offset=21), BinOp(BinOp(Attribute(Call(Name('type', Load(), lineno=80, col_offset=29), [Name('self', Load(), lineno=80, col_offset=34)], [], None, None, lineno=80, col_offset=29), '__name__', Load(), lineno=80, col_offset=29), Add(), Str('-', lineno=80, col_offset=51), lineno=80, col_offset=29), Add(), Call(Attribute(Str(':', lineno=81, col_offset=21), 'join', Load(), lineno=81, col_offset=21), [GeneratorExp(Call(Name('str', Load(), lineno=81, col_offset=30), [Name('i', Load(), lineno=81, col_offset=34)], [], None, None, lineno=81, col_offset=30), [comprehension(Name('i', Store(), lineno=81, col_offset=41), Attribute(Name('self', Load(), lineno=81, col_offset=46), '_identity', Load(), lineno=81, col_offset=46), [])], lineno=81, col_offset=30)], [], None, None, lineno=81, col_offset=21), lineno=80, col_offset=55)], lineno=80, col_offset=21), lineno=80, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=83, col_offset=12)], None, None, []), [Expr(Str('\n        Method to be run in sub-process; can be overridden in sub-class\n        ', lineno=86, col_offset=-1), lineno=86, col_offset=-1), If(Attribute(Name('self', Load(), lineno=87, col_offset=11), '_target', Load(), lineno=87, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=12), '_target', Load(), lineno=88, col_offset=12), [], [], Attribute(Name('self', Load(), lineno=88, col_offset=26), '_args', Load(), lineno=88, col_offset=26), Attribute(Name('self', Load(), lineno=88, col_offset=40), '_kwargs', Load(), lineno=88, col_offset=40), lineno=88, col_offset=12), lineno=88, col_offset=12)], [], lineno=87, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('start', arguments([Name('self', Param(), lineno=90, col_offset=14)], None, None, []), [Expr(Str('\n        Start child process\n        ', lineno=93, col_offset=-1), lineno=93, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=94, col_offset=15), '_popen', Load(), lineno=94, col_offset=15), [Is()], [Name('None', Load(), lineno=94, col_offset=30)], lineno=94, col_offset=15), Str('cannot start a process twice', lineno=94, col_offset=36), lineno=94, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=95, col_offset=15), '_parent_pid', Load(), lineno=95, col_offset=15), [Eq()], [Call(Attribute(Name('os', Load(), lineno=95, col_offset=35), 'getpid', Load(), lineno=95, col_offset=35), [], [], None, None, lineno=95, col_offset=35)], lineno=95, col_offset=15), Str('can only start a process object created by current process', lineno=96, col_offset=15), lineno=95, col_offset=8), Assert(UnaryOp(Not(), Attribute(Name('_current_process', Load(), lineno=97, col_offset=19), '_daemonic', Load(), lineno=97, col_offset=19), lineno=97, col_offset=15), Str('daemonic processes are not allowed to have children', lineno=98, col_offset=15), lineno=97, col_offset=8), Expr(Call(Name('_cleanup', Load(), lineno=99, col_offset=8), [], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=100, col_offset=11), '_Popen', Load(), lineno=100, col_offset=11), [IsNot()], [Name('None', Load(), lineno=100, col_offset=30)], lineno=100, col_offset=11), [Assign([Name('Popen', Store(), lineno=101, col_offset=12)], Attribute(Name('self', Load(), lineno=101, col_offset=20), '_Popen', Load(), lineno=101, col_offset=20), lineno=101, col_offset=12)], [ImportFrom('forking', [alias('Popen', None)], 1, lineno=103, col_offset=12)], lineno=100, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=104, col_offset=8), '_popen', Store(), lineno=104, col_offset=8)], Call(Name('Popen', Load(), lineno=104, col_offset=22), [Name('self', Load(), lineno=104, col_offset=28)], [], None, None, lineno=104, col_offset=22), lineno=104, col_offset=8), Expr(Call(Attribute(Attribute(Name('_current_process', Load(), lineno=105, col_offset=8), '_children', Load(), lineno=105, col_offset=8), 'add', Load(), lineno=105, col_offset=8), [Name('self', Load(), lineno=105, col_offset=39)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('terminate', arguments([Name('self', Param(), lineno=107, col_offset=18)], None, None, []), [Expr(Str('\n        Terminate process; sends SIGTERM signal or uses TerminateProcess()\n        ', lineno=110, col_offset=-1), lineno=110, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=111, col_offset=8), '_popen', Load(), lineno=111, col_offset=8), 'terminate', Load(), lineno=111, col_offset=8), [], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('join', arguments([Name('self', Param(), lineno=113, col_offset=13), Name('timeout', Param(), lineno=113, col_offset=19)], None, None, [Name('None', Load(), lineno=113, col_offset=27)]), [Expr(Str('\n        Wait until child process terminates\n        ', lineno=116, col_offset=-1), lineno=116, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=117, col_offset=15), '_parent_pid', Load(), lineno=117, col_offset=15), [Eq()], [Call(Attribute(Name('os', Load(), lineno=117, col_offset=35), 'getpid', Load(), lineno=117, col_offset=35), [], [], None, None, lineno=117, col_offset=35)], lineno=117, col_offset=15), Str('can only join a child process', lineno=117, col_offset=48), lineno=117, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=118, col_offset=15), '_popen', Load(), lineno=118, col_offset=15), [IsNot()], [Name('None', Load(), lineno=118, col_offset=34)], lineno=118, col_offset=15), Str('can only join a started process', lineno=118, col_offset=40), lineno=118, col_offset=8), Assign([Name('res', Store(), lineno=119, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=119, col_offset=14), '_popen', Load(), lineno=119, col_offset=14), 'wait', Load(), lineno=119, col_offset=14), [Name('timeout', Load(), lineno=119, col_offset=31)], [], None, None, lineno=119, col_offset=14), lineno=119, col_offset=8), If(Compare(Name('res', Load(), lineno=120, col_offset=11), [IsNot()], [Name('None', Load(), lineno=120, col_offset=22)], lineno=120, col_offset=11), [Expr(Call(Attribute(Attribute(Name('_current_process', Load(), lineno=121, col_offset=12), '_children', Load(), lineno=121, col_offset=12), 'discard', Load(), lineno=121, col_offset=12), [Name('self', Load(), lineno=121, col_offset=47)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=120, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('is_alive', arguments([Name('self', Param(), lineno=123, col_offset=17)], None, None, []), [Expr(Str('\n        Return whether process is alive\n        ', lineno=126, col_offset=-1), lineno=126, col_offset=-1), If(Compare(Name('self', Load(), lineno=127, col_offset=11), [Is()], [Name('_current_process', Load(), lineno=127, col_offset=19)], lineno=127, col_offset=11), [Return(Name('True', Load(), lineno=128, col_offset=19), lineno=128, col_offset=12)], [], lineno=127, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=129, col_offset=15), '_parent_pid', Load(), lineno=129, col_offset=15), [Eq()], [Call(Attribute(Name('os', Load(), lineno=129, col_offset=35), 'getpid', Load(), lineno=129, col_offset=35), [], [], None, None, lineno=129, col_offset=35)], lineno=129, col_offset=15), Str('can only test a child process', lineno=129, col_offset=48), lineno=129, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=130, col_offset=11), '_popen', Load(), lineno=130, col_offset=11), [Is()], [Name('None', Load(), lineno=130, col_offset=26)], lineno=130, col_offset=11), [Return(Name('False', Load(), lineno=131, col_offset=19), lineno=131, col_offset=12)], [], lineno=130, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=8), '_popen', Load(), lineno=132, col_offset=8), 'poll', Load(), lineno=132, col_offset=8), [], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Return(Compare(Attribute(Attribute(Name('self', Load(), lineno=133, col_offset=15), '_popen', Load(), lineno=133, col_offset=15), 'returncode', Load(), lineno=133, col_offset=15), [Is()], [Name('None', Load(), lineno=133, col_offset=41)], lineno=133, col_offset=15), lineno=133, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=136, col_offset=13)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=137, col_offset=15), '_name', Load(), lineno=137, col_offset=15), lineno=137, col_offset=8)], [Name('property', Load(), lineno=135, col_offset=5)], lineno=135, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=140, col_offset=13), Name('name', Param(), lineno=140, col_offset=19)], None, None, []), [Assert(Call(Name('isinstance', Load(), lineno=141, col_offset=15), [Name('name', Load(), lineno=141, col_offset=26), Name('basestring', Load(), lineno=141, col_offset=32)], [], None, None, lineno=141, col_offset=15), Str('name must be a string', lineno=141, col_offset=45), lineno=141, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=142, col_offset=8), '_name', Store(), lineno=142, col_offset=8)], Name('name', Load(), lineno=142, col_offset=21), lineno=142, col_offset=8)], [Attribute(Name('name', Load(), lineno=139, col_offset=5), 'setter', Load(), lineno=139, col_offset=5)], lineno=139, col_offset=4), FunctionDef('daemon', arguments([Name('self', Param(), lineno=145, col_offset=15)], None, None, []), [Expr(Str('\n        Return whether process is a daemon\n        ', lineno=148, col_offset=-1), lineno=148, col_offset=-1), Return(Attribute(Name('self', Load(), lineno=149, col_offset=15), '_daemonic', Load(), lineno=149, col_offset=15), lineno=149, col_offset=8)], [Name('property', Load(), lineno=144, col_offset=5)], lineno=144, col_offset=4), FunctionDef('daemon', arguments([Name('self', Param(), lineno=152, col_offset=15), Name('daemonic', Param(), lineno=152, col_offset=21)], None, None, []), [Expr(Str('\n        Set whether process is a daemon\n        ', lineno=155, col_offset=-1), lineno=155, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=156, col_offset=15), '_popen', Load(), lineno=156, col_offset=15), [Is()], [Name('None', Load(), lineno=156, col_offset=30)], lineno=156, col_offset=15), Str('process has already started', lineno=156, col_offset=36), lineno=156, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=157, col_offset=8), '_daemonic', Store(), lineno=157, col_offset=8)], Name('daemonic', Load(), lineno=157, col_offset=25), lineno=157, col_offset=8)], [Attribute(Name('daemon', Load(), lineno=151, col_offset=5), 'setter', Load(), lineno=151, col_offset=5)], lineno=151, col_offset=4), FunctionDef('authkey', arguments([Name('self', Param(), lineno=160, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=161, col_offset=15), '_authkey', Load(), lineno=161, col_offset=15), lineno=161, col_offset=8)], [Name('property', Load(), lineno=159, col_offset=5)], lineno=159, col_offset=4), FunctionDef('authkey', arguments([Name('self', Param(), lineno=164, col_offset=16), Name('authkey', Param(), lineno=164, col_offset=22)], None, None, []), [Expr(Str('\n        Set authorization key of process\n        ', lineno=167, col_offset=-1), lineno=167, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=168, col_offset=8), '_authkey', Store(), lineno=168, col_offset=8)], Call(Name('AuthenticationString', Load(), lineno=168, col_offset=24), [Name('authkey', Load(), lineno=168, col_offset=45)], [], None, None, lineno=168, col_offset=24), lineno=168, col_offset=8)], [Attribute(Name('authkey', Load(), lineno=163, col_offset=5), 'setter', Load(), lineno=163, col_offset=5)], lineno=163, col_offset=4), FunctionDef('exitcode', arguments([Name('self', Param(), lineno=171, col_offset=17)], None, None, []), [Expr(Str('\n        Return exit code of process or `None` if it has yet to stop\n        ', lineno=174, col_offset=-1), lineno=174, col_offset=-1), If(Compare(Attribute(Name('self', Load(), lineno=175, col_offset=11), '_popen', Load(), lineno=175, col_offset=11), [Is()], [Name('None', Load(), lineno=175, col_offset=26)], lineno=175, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=176, col_offset=19), '_popen', Load(), lineno=176, col_offset=19), lineno=176, col_offset=12)], [], lineno=175, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=177, col_offset=15), '_popen', Load(), lineno=177, col_offset=15), 'poll', Load(), lineno=177, col_offset=15), [], [], None, None, lineno=177, col_offset=15), lineno=177, col_offset=8)], [Name('property', Load(), lineno=170, col_offset=5)], lineno=170, col_offset=4), FunctionDef('ident', arguments([Name('self', Param(), lineno=180, col_offset=14)], None, None, []), [Expr(Str('\n        Return identifier (PID) of process or `None` if it has yet to start\n        ', lineno=183, col_offset=-1), lineno=183, col_offset=-1), If(Compare(Name('self', Load(), lineno=184, col_offset=11), [Is()], [Name('_current_process', Load(), lineno=184, col_offset=19)], lineno=184, col_offset=11), [Return(Call(Attribute(Name('os', Load(), lineno=185, col_offset=19), 'getpid', Load(), lineno=185, col_offset=19), [], [], None, None, lineno=185, col_offset=19), lineno=185, col_offset=12)], [Return(BoolOp(And(), [Attribute(Name('self', Load(), lineno=187, col_offset=19), '_popen', Load(), lineno=187, col_offset=19), Attribute(Attribute(Name('self', Load(), lineno=187, col_offset=35), '_popen', Load(), lineno=187, col_offset=35), 'pid', Load(), lineno=187, col_offset=35)], lineno=187, col_offset=19), lineno=187, col_offset=12)], lineno=184, col_offset=8)], [Name('property', Load(), lineno=179, col_offset=5)], lineno=179, col_offset=4), Assign([Name('pid', Store(), lineno=189, col_offset=4)], Name('ident', Load(), lineno=189, col_offset=10), lineno=189, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=191, col_offset=17)], None, None, []), [If(Compare(Name('self', Load(), lineno=192, col_offset=11), [Is()], [Name('_current_process', Load(), lineno=192, col_offset=19)], lineno=192, col_offset=11), [Assign([Name('status', Store(), lineno=193, col_offset=12)], Str('started', lineno=193, col_offset=21), lineno=193, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=194, col_offset=13), '_parent_pid', Load(), lineno=194, col_offset=13), [NotEq()], [Call(Attribute(Name('os', Load(), lineno=194, col_offset=33), 'getpid', Load(), lineno=194, col_offset=33), [], [], None, None, lineno=194, col_offset=33)], lineno=194, col_offset=13), [Assign([Name('status', Store(), lineno=195, col_offset=12)], Str('unknown', lineno=195, col_offset=21), lineno=195, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=196, col_offset=13), '_popen', Load(), lineno=196, col_offset=13), [Is()], [Name('None', Load(), lineno=196, col_offset=28)], lineno=196, col_offset=13), [Assign([Name('status', Store(), lineno=197, col_offset=12)], Str('initial', lineno=197, col_offset=21), lineno=197, col_offset=12)], [If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=199, col_offset=15), '_popen', Load(), lineno=199, col_offset=15), 'poll', Load(), lineno=199, col_offset=15), [], [], None, None, lineno=199, col_offset=15), [IsNot()], [Name('None', Load(), lineno=199, col_offset=41)], lineno=199, col_offset=15), [Assign([Name('status', Store(), lineno=200, col_offset=16)], Attribute(Name('self', Load(), lineno=200, col_offset=25), 'exitcode', Load(), lineno=200, col_offset=25), lineno=200, col_offset=16)], [Assign([Name('status', Store(), lineno=202, col_offset=16)], Str('started', lineno=202, col_offset=25), lineno=202, col_offset=16)], lineno=199, col_offset=12)], lineno=196, col_offset=13)], lineno=194, col_offset=13)], lineno=192, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=204, col_offset=11), [Name('status', Load(), lineno=204, col_offset=16)], [], None, None, lineno=204, col_offset=11), [Is()], [Name('int', Load(), lineno=204, col_offset=27)], lineno=204, col_offset=11), [If(Compare(Name('status', Load(), lineno=205, col_offset=15), [Eq()], [Num(0, lineno=205, col_offset=25)], lineno=205, col_offset=15), [Assign([Name('status', Store(), lineno=206, col_offset=16)], Str('stopped', lineno=206, col_offset=25), lineno=206, col_offset=16)], [Assign([Name('status', Store(), lineno=208, col_offset=16)], BinOp(Str('stopped[%s]', lineno=208, col_offset=25), Mod(), Call(Attribute(Name('_exitcode_to_name', Load(), lineno=208, col_offset=41), 'get', Load(), lineno=208, col_offset=41), [Name('status', Load(), lineno=208, col_offset=63), Name('status', Load(), lineno=208, col_offset=71)], [], None, None, lineno=208, col_offset=41), lineno=208, col_offset=25), lineno=208, col_offset=16)], lineno=205, col_offset=12)], [], lineno=204, col_offset=8), Return(BinOp(Str('<%s(%s, %s%s)>', lineno=210, col_offset=15), Mod(), Tuple([Attribute(Call(Name('type', Load(), lineno=210, col_offset=35), [Name('self', Load(), lineno=210, col_offset=40)], [], None, None, lineno=210, col_offset=35), '__name__', Load(), lineno=210, col_offset=35), Attribute(Name('self', Load(), lineno=210, col_offset=56), '_name', Load(), lineno=210, col_offset=56), Name('status', Load(), lineno=211, col_offset=35), BoolOp(Or(), [BoolOp(And(), [Attribute(Name('self', Load(), lineno=211, col_offset=43), '_daemonic', Load(), lineno=211, col_offset=43), Str(' daemon', lineno=211, col_offset=62)], lineno=211, col_offset=43), Str('', lineno=211, col_offset=75)], lineno=211, col_offset=43)], Load(), lineno=210, col_offset=35), lineno=210, col_offset=15), lineno=210, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('_bootstrap', arguments([Name('self', Param(), lineno=215, col_offset=19)], None, None, []), [ImportFrom(None, [alias('util', None)], 1, lineno=216, col_offset=8), Global(['_current_process'], lineno=217, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=220, col_offset=12), '_children', Store(), lineno=220, col_offset=12)], Call(Name('set', Load(), lineno=220, col_offset=29), [], [], None, None, lineno=220, col_offset=29), lineno=220, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=221, col_offset=12), '_counter', Store(), lineno=221, col_offset=12)], Call(Attribute(Name('itertools', Load(), lineno=221, col_offset=28), 'count', Load(), lineno=221, col_offset=28), [Num(1, lineno=221, col_offset=44)], [], None, None, lineno=221, col_offset=28), lineno=221, col_offset=12), TryExcept([Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=223, col_offset=16), 'stdin', Load(), lineno=223, col_offset=16), 'close', Load(), lineno=223, col_offset=16), [], [], None, None, lineno=223, col_offset=16), lineno=223, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=224, col_offset=16), 'stdin', Store(), lineno=224, col_offset=16)], Call(Name('open', Load(), lineno=224, col_offset=28), [Attribute(Name('os', Load(), lineno=224, col_offset=33), 'devnull', Load(), lineno=224, col_offset=33)], [], None, None, lineno=224, col_offset=28), lineno=224, col_offset=16)], [ExceptHandler(Tuple([Name('OSError', Load(), lineno=225, col_offset=20), Name('ValueError', Load(), lineno=225, col_offset=29)], Load(), lineno=225, col_offset=20), None, [Pass( lineno=226, col_offset=16)], lineno=225, col_offset=12)], [], lineno=222, col_offset=12), Assign([Name('_current_process', Store(), lineno=227, col_offset=12)], Name('self', Load(), lineno=227, col_offset=31), lineno=227, col_offset=12), Expr(Call(Attribute(Attribute(Name('util', Load(), lineno=228, col_offset=12), '_finalizer_registry', Load(), lineno=228, col_offset=12), 'clear', Load(), lineno=228, col_offset=12), [], [], None, None, lineno=228, col_offset=12), lineno=228, col_offset=12), Expr(Call(Attribute(Name('util', Load(), lineno=229, col_offset=12), '_run_after_forkers', Load(), lineno=229, col_offset=12), [], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12), Expr(Call(Attribute(Name('util', Load(), lineno=230, col_offset=12), 'info', Load(), lineno=230, col_offset=12), [Str('child process calling self.run()', lineno=230, col_offset=22)], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=12), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=16), 'run', Load(), lineno=232, col_offset=16), [], [], None, None, lineno=232, col_offset=16), lineno=232, col_offset=16), Assign([Name('exitcode', Store(), lineno=233, col_offset=16)], Num(0, lineno=233, col_offset=27), lineno=233, col_offset=16)], [Expr(Call(Attribute(Name('util', Load(), lineno=235, col_offset=16), '_exit_function', Load(), lineno=235, col_offset=16), [], [], None, None, lineno=235, col_offset=16), lineno=235, col_offset=16)], lineno=231, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=236, col_offset=15), Name('e', Store(), lineno=236, col_offset=27), [If(UnaryOp(Not(), Attribute(Name('e', Load(), lineno=237, col_offset=19), 'args', Load(), lineno=237, col_offset=19), lineno=237, col_offset=15), [Assign([Name('exitcode', Store(), lineno=238, col_offset=16)], Num(1, lineno=238, col_offset=27), lineno=238, col_offset=16)], [If(Compare(Call(Name('type', Load(), lineno=239, col_offset=17), [Subscript(Attribute(Name('e', Load(), lineno=239, col_offset=22), 'args', Load(), lineno=239, col_offset=22), Index(Num(0, lineno=239, col_offset=29)), Load(), lineno=239, col_offset=22)], [], None, None, lineno=239, col_offset=17), [Is()], [Name('int', Load(), lineno=239, col_offset=36)], lineno=239, col_offset=17), [Assign([Name('exitcode', Store(), lineno=240, col_offset=16)], Subscript(Attribute(Name('e', Load(), lineno=240, col_offset=27), 'args', Load(), lineno=240, col_offset=27), Index(Num(0, lineno=240, col_offset=34)), Load(), lineno=240, col_offset=27), lineno=240, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=242, col_offset=16), 'stderr', Load(), lineno=242, col_offset=16), 'write', Load(), lineno=242, col_offset=16), [BinOp(Subscript(Attribute(Name('e', Load(), lineno=242, col_offset=33), 'args', Load(), lineno=242, col_offset=33), Index(Num(0, lineno=242, col_offset=40)), Load(), lineno=242, col_offset=33), Add(), Str('\n', lineno=242, col_offset=45), lineno=242, col_offset=33)], [], None, None, lineno=242, col_offset=16), lineno=242, col_offset=16), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=243, col_offset=16), 'stderr', Load(), lineno=243, col_offset=16), 'flush', Load(), lineno=243, col_offset=16), [], [], None, None, lineno=243, col_offset=16), lineno=243, col_offset=16), Assign([Name('exitcode', Store(), lineno=244, col_offset=16)], Num(1, lineno=244, col_offset=27), lineno=244, col_offset=16)], lineno=239, col_offset=17)], lineno=237, col_offset=12)], lineno=236, col_offset=8), ExceptHandler(None, None, [Assign([Name('exitcode', Store(), lineno=246, col_offset=12)], Num(1, lineno=246, col_offset=23), lineno=246, col_offset=12), Import([alias('traceback', None)], lineno=247, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=248, col_offset=12), 'stderr', Load(), lineno=248, col_offset=12), 'write', Load(), lineno=248, col_offset=12), [BinOp(Str('Process %s:\n', lineno=248, col_offset=29), Mod(), Attribute(Name('self', Load(), lineno=248, col_offset=47), 'name', Load(), lineno=248, col_offset=47), lineno=248, col_offset=29)], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=249, col_offset=12), 'stderr', Load(), lineno=249, col_offset=12), 'flush', Load(), lineno=249, col_offset=12), [], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12), Expr(Call(Attribute(Name('traceback', Load(), lineno=250, col_offset=12), 'print_exc', Load(), lineno=250, col_offset=12), [], [], None, None, lineno=250, col_offset=12), lineno=250, col_offset=12)], lineno=245, col_offset=8)], [], lineno=219, col_offset=8), Expr(Call(Attribute(Name('util', Load(), lineno=252, col_offset=8), 'info', Load(), lineno=252, col_offset=8), [BinOp(Str('process exiting with exitcode %d', lineno=252, col_offset=18), Mod(), Name('exitcode', Load(), lineno=252, col_offset=55), lineno=252, col_offset=18)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), Return(Name('exitcode', Load(), lineno=253, col_offset=15), lineno=253, col_offset=8)], [], lineno=215, col_offset=4)], [], lineno=60, col_offset=0), ClassDef('AuthenticationString', [Name('bytes', Load(), lineno=259, col_offset=27)], [FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=260, col_offset=19)], None, None, []), [ImportFrom('forking', [alias('Popen', None)], 1, lineno=261, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('Popen', Load(), lineno=262, col_offset=15), 'thread_is_spawning', Load(), lineno=262, col_offset=15), [], [], None, None, lineno=262, col_offset=15), lineno=262, col_offset=11), [Raise(Call(Name('TypeError', Load(), lineno=263, col_offset=18), [Str('Pickling an AuthenticationString object is disallowed for security reasons', lineno=264, col_offset=16)], [], None, None, lineno=263, col_offset=18), None, None, lineno=263, col_offset=12)], [], lineno=262, col_offset=8), Return(Tuple([Name('AuthenticationString', Load(), lineno=267, col_offset=15), Tuple([Call(Name('bytes', Load(), lineno=267, col_offset=38), [Name('self', Load(), lineno=267, col_offset=44)], [], None, None, lineno=267, col_offset=38)], Load(), lineno=267, col_offset=38)], Load(), lineno=267, col_offset=15), lineno=267, col_offset=8)], [], lineno=260, col_offset=4)], [], lineno=259, col_offset=0), ClassDef('_MainProcess', [Name('Process', Load(), lineno=273, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=275, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=276, col_offset=8), '_identity', Store(), lineno=276, col_offset=8)], Tuple([], Load(), lineno=276, col_offset=25), lineno=276, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=277, col_offset=8), '_daemonic', Store(), lineno=277, col_offset=8)], Name('False', Load(), lineno=277, col_offset=25), lineno=277, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=278, col_offset=8), '_name', Store(), lineno=278, col_offset=8)], Str('MainProcess', lineno=278, col_offset=21), lineno=278, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=279, col_offset=8), '_parent_pid', Store(), lineno=279, col_offset=8)], Name('None', Load(), lineno=279, col_offset=27), lineno=279, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=280, col_offset=8), '_popen', Store(), lineno=280, col_offset=8)], Name('None', Load(), lineno=280, col_offset=22), lineno=280, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=281, col_offset=8), '_counter', Store(), lineno=281, col_offset=8)], Call(Attribute(Name('itertools', Load(), lineno=281, col_offset=24), 'count', Load(), lineno=281, col_offset=24), [Num(1, lineno=281, col_offset=40)], [], None, None, lineno=281, col_offset=24), lineno=281, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=282, col_offset=8), '_children', Store(), lineno=282, col_offset=8)], Call(Name('set', Load(), lineno=282, col_offset=25), [], [], None, None, lineno=282, col_offset=25), lineno=282, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=283, col_offset=8), '_authkey', Store(), lineno=283, col_offset=8)], Call(Name('AuthenticationString', Load(), lineno=283, col_offset=24), [Call(Attribute(Name('os', Load(), lineno=283, col_offset=45), 'urandom', Load(), lineno=283, col_offset=45), [Num(32, lineno=283, col_offset=56)], [], None, None, lineno=283, col_offset=45)], [], None, None, lineno=283, col_offset=24), lineno=283, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=284, col_offset=8), '_tempdir', Store(), lineno=284, col_offset=8)], Name('None', Load(), lineno=284, col_offset=24), lineno=284, col_offset=8)], [], lineno=275, col_offset=4)], [], lineno=273, col_offset=0), Assign([Name('_current_process', Store(), lineno=286, col_offset=0)], Call(Name('_MainProcess', Load(), lineno=286, col_offset=19), [], [], None, None, lineno=286, col_offset=19), lineno=286, col_offset=0), Delete([Name('_MainProcess', Del(), lineno=287, col_offset=4)], lineno=287, col_offset=0), Assign([Name('_exitcode_to_name', Store(), lineno=293, col_offset=0)], Dict([], [], lineno=293, col_offset=20), lineno=293, col_offset=0), For(Tuple([Name('name', Store(), lineno=295, col_offset=4), Name('signum', Store(), lineno=295, col_offset=10)], Store(), lineno=295, col_offset=4), Call(Attribute(Attribute(Name('signal', Load(), lineno=295, col_offset=20), '__dict__', Load(), lineno=295, col_offset=20), 'items', Load(), lineno=295, col_offset=20), [], [], None, None, lineno=295, col_offset=20), [If(BoolOp(And(), [Compare(Subscript(Name('name', Load(), lineno=296, col_offset=7), Slice(None, Num(3, lineno=296, col_offset=13), None), Load(), lineno=296, col_offset=7), [Eq()], [Str('SIG', lineno=296, col_offset=17)], lineno=296, col_offset=7), Compare(Str('_', lineno=296, col_offset=27), [NotIn()], [Name('name', Load(), lineno=296, col_offset=38)], lineno=296, col_offset=27)], lineno=296, col_offset=7), [Assign([Subscript(Name('_exitcode_to_name', Load(), lineno=297, col_offset=8), Index(UnaryOp(USub(), Name('signum', Load(), lineno=297, col_offset=27), lineno=297, col_offset=26)), Store(), lineno=297, col_offset=8)], Name('name', Load(), lineno=297, col_offset=37), lineno=297, col_offset=8)], [], lineno=296, col_offset=4)], [], lineno=295, col_offset=0)])
