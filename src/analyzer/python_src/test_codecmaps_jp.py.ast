Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), ImportFrom('test', [alias('test_multibytecodec_support', None)], 0, lineno=8, col_offset=0), Import([alias('unittest', None)], lineno=9, col_offset=0), ClassDef('TestCP932Map', [Attribute(Name('test_multibytecodec_support', Load(), lineno=11, col_offset=19), 'TestBase_Mapping', Load(), lineno=11, col_offset=19), Attribute(Name('unittest', Load(), lineno=12, col_offset=19), 'TestCase', Load(), lineno=12, col_offset=19)], [Assign([Name('encoding', Store(), lineno=13, col_offset=4)], Str('cp932', lineno=13, col_offset=15), lineno=13, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=14, col_offset=4)], Str('http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP932.TXT', lineno=14, col_offset=17), lineno=14, col_offset=4), Assign([Name('supmaps', Store(), lineno=16, col_offset=4)], List([Tuple([Str('\x80', lineno=17, col_offset=9), Str(u'\x80', lineno=17, col_offset=17)], Load(), lineno=17, col_offset=9), Tuple([Str('\xa0', lineno=18, col_offset=9), Str(u'\uf8f0', lineno=18, col_offset=17)], Load(), lineno=18, col_offset=9), Tuple([Str('\xfd', lineno=19, col_offset=9), Str(u'\uf8f1', lineno=19, col_offset=17)], Load(), lineno=19, col_offset=9), Tuple([Str('\xfe', lineno=20, col_offset=9), Str(u'\uf8f2', lineno=20, col_offset=17)], Load(), lineno=20, col_offset=9), Tuple([Str('\xff', lineno=21, col_offset=9), Str(u'\uf8f3', lineno=21, col_offset=17)], Load(), lineno=21, col_offset=9)], Load(), lineno=16, col_offset=14), lineno=16, col_offset=4), For(Name('i', Store(), lineno=23, col_offset=8), Call(Name('range', Load(), lineno=23, col_offset=13), [Num(161, lineno=23, col_offset=19), Num(224, lineno=23, col_offset=25)], [], None, None, lineno=23, col_offset=13), [Expr(Call(Attribute(Name('supmaps', Load(), lineno=24, col_offset=8), 'append', Load(), lineno=24, col_offset=8), [Tuple([Call(Name('chr', Load(), lineno=24, col_offset=24), [Name('i', Load(), lineno=24, col_offset=28)], [], None, None, lineno=24, col_offset=24), Call(Name('unichr', Load(), lineno=24, col_offset=32), [BinOp(Name('i', Load(), lineno=24, col_offset=39), Add(), Num(65216, lineno=24, col_offset=41), lineno=24, col_offset=39)], [], None, None, lineno=24, col_offset=32)], Load(), lineno=24, col_offset=24)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=11, col_offset=0), ClassDef('TestEUCJPCOMPATMap', [Attribute(Name('test_multibytecodec_support', Load(), lineno=27, col_offset=25), 'TestBase_Mapping', Load(), lineno=27, col_offset=25), Attribute(Name('unittest', Load(), lineno=28, col_offset=25), 'TestCase', Load(), lineno=28, col_offset=25)], [Assign([Name('encoding', Store(), lineno=29, col_offset=4)], Str('euc_jp', lineno=29, col_offset=15), lineno=29, col_offset=4), Assign([Name('mapfilename', Store(), lineno=30, col_offset=4)], Str('EUC-JP.TXT', lineno=30, col_offset=18), lineno=30, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=31, col_offset=4)], Str('http://people.freebsd.org/~perky/i18n/EUC-JP.TXT', lineno=31, col_offset=17), lineno=31, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('TestSJISCOMPATMap', [Attribute(Name('test_multibytecodec_support', Load(), lineno=34, col_offset=24), 'TestBase_Mapping', Load(), lineno=34, col_offset=24), Attribute(Name('unittest', Load(), lineno=35, col_offset=24), 'TestCase', Load(), lineno=35, col_offset=24)], [Assign([Name('encoding', Store(), lineno=36, col_offset=4)], Str('shift_jis', lineno=36, col_offset=15), lineno=36, col_offset=4), Assign([Name('mapfilename', Store(), lineno=37, col_offset=4)], Str('SHIFTJIS.TXT', lineno=37, col_offset=18), lineno=37, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=38, col_offset=4)], Str('http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/JIS/SHIFTJIS.TXT', lineno=38, col_offset=17), lineno=38, col_offset=4), Assign([Name('pass_enctest', Store(), lineno=40, col_offset=4)], List([Tuple([Str('\x81_', lineno=41, col_offset=9), Str(u'\\', lineno=41, col_offset=18)], Load(), lineno=41, col_offset=9)], Load(), lineno=40, col_offset=19), lineno=40, col_offset=4), Assign([Name('pass_dectest', Store(), lineno=43, col_offset=4)], List([Tuple([Str('\\', lineno=44, col_offset=9), Str(u'\xa5', lineno=44, col_offset=15)], Load(), lineno=44, col_offset=9), Tuple([Str('~', lineno=45, col_offset=9), Str(u'\u203e', lineno=45, col_offset=14)], Load(), lineno=45, col_offset=9), Tuple([Str('\x81_', lineno=46, col_offset=9), Str(u'\\', lineno=46, col_offset=18)], Load(), lineno=46, col_offset=9)], Load(), lineno=43, col_offset=19), lineno=43, col_offset=4)], [], lineno=34, col_offset=0), ClassDef('TestEUCJISX0213Map', [Attribute(Name('test_multibytecodec_support', Load(), lineno=49, col_offset=25), 'TestBase_Mapping', Load(), lineno=49, col_offset=25), Attribute(Name('unittest', Load(), lineno=50, col_offset=25), 'TestCase', Load(), lineno=50, col_offset=25)], [Assign([Name('encoding', Store(), lineno=51, col_offset=4)], Str('euc_jisx0213', lineno=51, col_offset=15), lineno=51, col_offset=4), Assign([Name('mapfilename', Store(), lineno=52, col_offset=4)], Str('EUC-JISX0213.TXT', lineno=52, col_offset=18), lineno=52, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=53, col_offset=4)], Str('http://people.freebsd.org/~perky/i18n/EUC-JISX0213.TXT', lineno=53, col_offset=17), lineno=53, col_offset=4)], [], lineno=49, col_offset=0), ClassDef('TestSJISX0213Map', [Attribute(Name('test_multibytecodec_support', Load(), lineno=56, col_offset=23), 'TestBase_Mapping', Load(), lineno=56, col_offset=23), Attribute(Name('unittest', Load(), lineno=57, col_offset=23), 'TestCase', Load(), lineno=57, col_offset=23)], [Assign([Name('encoding', Store(), lineno=58, col_offset=4)], Str('shift_jisx0213', lineno=58, col_offset=15), lineno=58, col_offset=4), Assign([Name('mapfilename', Store(), lineno=59, col_offset=4)], Str('SHIFT_JISX0213.TXT', lineno=59, col_offset=18), lineno=59, col_offset=4), Assign([Name('mapfileurl', Store(), lineno=60, col_offset=4)], Str('http://people.freebsd.org/~perky/i18n/SHIFT_JISX0213.TXT', lineno=60, col_offset=17), lineno=60, col_offset=4)], [], lineno=56, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=64, col_offset=4), 'run_unittest', Load(), lineno=64, col_offset=4), [Name('__name__', Load(), lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=4), lineno=64, col_offset=4)], [], lineno=63, col_offset=0), If(Compare(Name('__name__', Load(), lineno=66, col_offset=3), [Eq()], [Str('__main__', lineno=66, col_offset=15)], lineno=66, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=67, col_offset=4), [], [], None, None, lineno=67, col_offset=4), lineno=67, col_offset=4)], [], lineno=66, col_offset=0)])
