Module([Expr(Str('\nThe gc module can still invoke arbitrary Python code and crash.\nThis is an attack against _PyInstance_Lookup(), which is documented\nas follows:\n\n    The point of this routine is that it never calls arbitrary Python\n    code, so is always "safe":  all it does is dict lookups.\n\nBut of course dict lookups can call arbitrary Python code.\nThe following code causes mutation of the object graph during\nthe call to has_finalizer() in gcmodule.c, and that might\nsegfault.\n', lineno=13, col_offset=-1), lineno=13, col_offset=-1), Import([alias('gc', None)], lineno=15, col_offset=0), ClassDef('A', [], [FunctionDef('__hash__', arguments([Name('self', Param(), lineno=19, col_offset=17)], None, None, []), [Return(Call(Name('hash', Load(), lineno=20, col_offset=15), [Str('__del__', lineno=20, col_offset=20)], [], None, None, lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=21, col_offset=15), Name('other', Param(), lineno=21, col_offset=21)], None, None, []), [Delete([Attribute(Name('self', Load(), lineno=22, col_offset=12), 'other', Del(), lineno=22, col_offset=12)], lineno=22, col_offset=8), Return(Name('False', Load(), lineno=23, col_offset=15), lineno=23, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=18, col_offset=0), Assign([Name('a', Store(), lineno=25, col_offset=0)], Call(Name('A', Load(), lineno=25, col_offset=4), [], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=0), Assign([Name('b', Store(), lineno=26, col_offset=0)], Call(Name('A', Load(), lineno=26, col_offset=4), [], [], None, None, lineno=26, col_offset=4), lineno=26, col_offset=0), Assign([Subscript(Attribute(Name('a', Load(), lineno=28, col_offset=0), '__dict__', Load(), lineno=28, col_offset=0), Index(Name('b', Load(), lineno=28, col_offset=11)), Store(), lineno=28, col_offset=0)], Str('A', lineno=28, col_offset=16), lineno=28, col_offset=0), Assign([Attribute(Name('a', Load(), lineno=30, col_offset=0), 'other', Store(), lineno=30, col_offset=0)], Name('b', Load(), lineno=30, col_offset=10), lineno=30, col_offset=0), Assign([Attribute(Name('b', Load(), lineno=31, col_offset=0), 'other', Store(), lineno=31, col_offset=0)], Name('a', Load(), lineno=31, col_offset=10), lineno=31, col_offset=0), Expr(Call(Attribute(Name('gc', Load(), lineno=33, col_offset=0), 'collect', Load(), lineno=33, col_offset=0), [], [], None, None, lineno=33, col_offset=0), lineno=33, col_offset=0), Delete([Name('a', Del(), lineno=34, col_offset=4), Name('b', Del(), lineno=34, col_offset=7)], lineno=34, col_offset=0), Expr(Call(Attribute(Name('gc', Load(), lineno=36, col_offset=0), 'collect', Load(), lineno=36, col_offset=0), [], [], None, None, lineno=36, col_offset=0), lineno=36, col_offset=0)])
