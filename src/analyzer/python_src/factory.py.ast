Module([Import([alias('unittest', None)], lineno=24, col_offset=0), Import([alias('sqlite3', 'sqlite')], lineno=25, col_offset=0), ClassDef('MyConnection', [Attribute(Name('sqlite', Load(), lineno=27, col_offset=19), 'Connection', Load(), lineno=27, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=28, col_offset=17)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('sqlite', Load(), lineno=29, col_offset=8), 'Connection', Load(), lineno=29, col_offset=8), '__init__', Load(), lineno=29, col_offset=8), [Name('self', Load(), lineno=29, col_offset=35)], [], Name('args', Load(), lineno=29, col_offset=42), Name('kwargs', Load(), lineno=29, col_offset=50), lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=28, col_offset=4)], [], lineno=27, col_offset=0), FunctionDef('dict_factory', arguments([Name('cursor', Param(), lineno=31, col_offset=17), Name('row', Param(), lineno=31, col_offset=25)], None, None, []), [Assign([Name('d', Store(), lineno=32, col_offset=4)], Dict([], [], lineno=32, col_offset=8), lineno=32, col_offset=4), For(Tuple([Name('idx', Store(), lineno=33, col_offset=8), Name('col', Store(), lineno=33, col_offset=13)], Store(), lineno=33, col_offset=8), Call(Name('enumerate', Load(), lineno=33, col_offset=20), [Attribute(Name('cursor', Load(), lineno=33, col_offset=30), 'description', Load(), lineno=33, col_offset=30)], [], None, None, lineno=33, col_offset=20), [Assign([Subscript(Name('d', Load(), lineno=34, col_offset=8), Index(Subscript(Name('col', Load(), lineno=34, col_offset=10), Index(Num(0, lineno=34, col_offset=14)), Load(), lineno=34, col_offset=10)), Store(), lineno=34, col_offset=8)], Subscript(Name('row', Load(), lineno=34, col_offset=20), Index(Name('idx', Load(), lineno=34, col_offset=24)), Load(), lineno=34, col_offset=20), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), Return(Name('d', Load(), lineno=35, col_offset=11), lineno=35, col_offset=4)], [], lineno=31, col_offset=0), ClassDef('MyCursor', [Attribute(Name('sqlite', Load(), lineno=37, col_offset=15), 'Cursor', Load(), lineno=37, col_offset=15)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=38, col_offset=17)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('sqlite', Load(), lineno=39, col_offset=8), 'Cursor', Load(), lineno=39, col_offset=8), '__init__', Load(), lineno=39, col_offset=8), [Name('self', Load(), lineno=39, col_offset=31)], [], Name('args', Load(), lineno=39, col_offset=38), Name('kwargs', Load(), lineno=39, col_offset=46), lineno=39, col_offset=8), lineno=39, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=40, col_offset=8), 'row_factory', Store(), lineno=40, col_offset=8)], Name('dict_factory', Load(), lineno=40, col_offset=27), lineno=40, col_offset=8)], [], lineno=38, col_offset=4)], [], lineno=37, col_offset=0), ClassDef('ConnectionFactoryTests', [Attribute(Name('unittest', Load(), lineno=42, col_offset=29), 'TestCase', Load(), lineno=42, col_offset=29)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=43, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'con', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('sqlite', Load(), lineno=44, col_offset=19), 'connect', Load(), lineno=44, col_offset=19), [Str(':memory:', lineno=44, col_offset=34)], [keyword('factory', Name('MyConnection', Load(), lineno=44, col_offset=54))], None, None, lineno=44, col_offset=19), lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=46, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'con', Load(), lineno=47, col_offset=8), 'close', Load(), lineno=47, col_offset=8), [], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('CheckIsInstance', arguments([Name('self', Param(), lineno=49, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertTrue', Load(), lineno=50, col_offset=8), [Call(Name('isinstance', Load(), lineno=50, col_offset=24), [Attribute(Name('self', Load(), lineno=50, col_offset=35), 'con', Load(), lineno=50, col_offset=35), Name('MyConnection', Load(), lineno=51, col_offset=35)], [], None, None, lineno=50, col_offset=24), Str('connection is not instance of MyConnection', lineno=52, col_offset=24)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8)], [], lineno=49, col_offset=4)], [], lineno=42, col_offset=0), ClassDef('CursorFactoryTests', [Attribute(Name('unittest', Load(), lineno=54, col_offset=25), 'TestCase', Load(), lineno=54, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=55, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'con', Store(), lineno=56, col_offset=8)], Call(Attribute(Name('sqlite', Load(), lineno=56, col_offset=19), 'connect', Load(), lineno=56, col_offset=19), [Str(':memory:', lineno=56, col_offset=34)], [], None, None, lineno=56, col_offset=19), lineno=56, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=58, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'con', Load(), lineno=59, col_offset=8), 'close', Load(), lineno=59, col_offset=8), [], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('CheckIsInstance', arguments([Name('self', Param(), lineno=61, col_offset=24)], None, None, []), [Assign([Name('cur', Store(), lineno=62, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=62, col_offset=14), 'con', Load(), lineno=62, col_offset=14), 'cursor', Load(), lineno=62, col_offset=14), [], [keyword('factory', Name('MyCursor', Load(), lineno=62, col_offset=38))], None, None, lineno=62, col_offset=14), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertTrue', Load(), lineno=63, col_offset=8), [Call(Name('isinstance', Load(), lineno=63, col_offset=24), [Name('cur', Load(), lineno=63, col_offset=35), Name('MyCursor', Load(), lineno=64, col_offset=35)], [], None, None, lineno=63, col_offset=24), Str('cursor is not instance of MyCursor', lineno=65, col_offset=24)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8)], [], lineno=61, col_offset=4)], [], lineno=54, col_offset=0), ClassDef('RowFactoryTestsBackwardsCompat', [Attribute(Name('unittest', Load(), lineno=67, col_offset=37), 'TestCase', Load(), lineno=67, col_offset=37)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=68, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=69, col_offset=8), 'con', Store(), lineno=69, col_offset=8)], Call(Attribute(Name('sqlite', Load(), lineno=69, col_offset=19), 'connect', Load(), lineno=69, col_offset=19), [Str(':memory:', lineno=69, col_offset=34)], [], None, None, lineno=69, col_offset=19), lineno=69, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('CheckIsProducedByFactory', arguments([Name('self', Param(), lineno=71, col_offset=33)], None, None, []), [Assign([Name('cur', Store(), lineno=72, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=72, col_offset=14), 'con', Load(), lineno=72, col_offset=14), 'cursor', Load(), lineno=72, col_offset=14), [], [keyword('factory', Name('MyCursor', Load(), lineno=72, col_offset=38))], None, None, lineno=72, col_offset=14), lineno=72, col_offset=8), Expr(Call(Attribute(Name('cur', Load(), lineno=73, col_offset=8), 'execute', Load(), lineno=73, col_offset=8), [Str('select 4+5 as foo', lineno=73, col_offset=20)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Assign([Name('row', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('cur', Load(), lineno=74, col_offset=14), 'fetchone', Load(), lineno=74, col_offset=14), [], [], None, None, lineno=74, col_offset=14), lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertTrue', Load(), lineno=75, col_offset=8), [Call(Name('isinstance', Load(), lineno=75, col_offset=24), [Name('row', Load(), lineno=75, col_offset=35), Name('dict', Load(), lineno=76, col_offset=35)], [], None, None, lineno=75, col_offset=24), Str('row is not instance of dict', lineno=77, col_offset=24)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Call(Attribute(Name('cur', Load(), lineno=78, col_offset=8), 'close', Load(), lineno=78, col_offset=8), [], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=80, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'con', Load(), lineno=81, col_offset=8), 'close', Load(), lineno=81, col_offset=8), [], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=80, col_offset=4)], [], lineno=67, col_offset=0), ClassDef('RowFactoryTests', [Attribute(Name('unittest', Load(), lineno=83, col_offset=22), 'TestCase', Load(), lineno=83, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=84, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=85, col_offset=8), 'con', Store(), lineno=85, col_offset=8)], Call(Attribute(Name('sqlite', Load(), lineno=85, col_offset=19), 'connect', Load(), lineno=85, col_offset=19), [Str(':memory:', lineno=85, col_offset=34)], [], None, None, lineno=85, col_offset=19), lineno=85, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('CheckCustomFactory', arguments([Name('self', Param(), lineno=87, col_offset=27)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'con', Load(), lineno=88, col_offset=8), 'row_factory', Store(), lineno=88, col_offset=8)], Lambda(arguments([Name('cur', Param(), lineno=88, col_offset=38), Name('row', Param(), lineno=88, col_offset=43)], None, None, []), Call(Name('list', Load(), lineno=88, col_offset=48), [Name('row', Load(), lineno=88, col_offset=53)], [], None, None, lineno=88, col_offset=48), lineno=88, col_offset=31), lineno=88, col_offset=8), Assign([Name('row', Store(), lineno=89, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=89, col_offset=14), 'con', Load(), lineno=89, col_offset=14), 'execute', Load(), lineno=89, col_offset=14), [Str('select 1, 2', lineno=89, col_offset=31)], [], None, None, lineno=89, col_offset=14), 'fetchone', Load(), lineno=89, col_offset=14), [], [], None, None, lineno=89, col_offset=14), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertTrue', Load(), lineno=90, col_offset=8), [Call(Name('isinstance', Load(), lineno=90, col_offset=24), [Name('row', Load(), lineno=90, col_offset=35), Name('list', Load(), lineno=91, col_offset=35)], [], None, None, lineno=90, col_offset=24), Str('row is not instance of list', lineno=92, col_offset=24)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('CheckSqliteRowIndex', arguments([Name('self', Param(), lineno=94, col_offset=28)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'con', Load(), lineno=95, col_offset=8), 'row_factory', Store(), lineno=95, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=95, col_offset=31), 'Row', Load(), lineno=95, col_offset=31), lineno=95, col_offset=8), Assign([Name('row', Store(), lineno=96, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=96, col_offset=14), 'con', Load(), lineno=96, col_offset=14), 'execute', Load(), lineno=96, col_offset=14), [Str('select 1 as a, 2 as b', lineno=96, col_offset=31)], [], None, None, lineno=96, col_offset=14), 'fetchone', Load(), lineno=96, col_offset=14), [], [], None, None, lineno=96, col_offset=14), lineno=96, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=8), 'assertTrue', Load(), lineno=97, col_offset=8), [Call(Name('isinstance', Load(), lineno=97, col_offset=24), [Name('row', Load(), lineno=97, col_offset=35), Attribute(Name('sqlite', Load(), lineno=98, col_offset=35), 'Row', Load(), lineno=98, col_offset=35)], [], None, None, lineno=97, col_offset=24), Str('row is not instance of sqlite.Row', lineno=99, col_offset=24)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Assign([Tuple([Name('col1', Store(), lineno=101, col_offset=8), Name('col2', Store(), lineno=101, col_offset=14)], Store(), lineno=101, col_offset=8)], Tuple([Subscript(Name('row', Load(), lineno=101, col_offset=21), Index(Str('a', lineno=101, col_offset=25)), Load(), lineno=101, col_offset=21), Subscript(Name('row', Load(), lineno=101, col_offset=31), Index(Str('b', lineno=101, col_offset=35)), Load(), lineno=101, col_offset=31)], Load(), lineno=101, col_offset=21), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertTrue', Load(), lineno=102, col_offset=8), [Compare(Name('col1', Load(), lineno=102, col_offset=24), [Eq()], [Num(1, lineno=102, col_offset=32)], lineno=102, col_offset=24), Str("by name: wrong result for column 'a'", lineno=102, col_offset=35)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=8), 'assertTrue', Load(), lineno=103, col_offset=8), [Compare(Name('col2', Load(), lineno=103, col_offset=24), [Eq()], [Num(2, lineno=103, col_offset=32)], lineno=103, col_offset=24), Str("by name: wrong result for column 'a'", lineno=103, col_offset=35)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8), Assign([Tuple([Name('col1', Store(), lineno=105, col_offset=8), Name('col2', Store(), lineno=105, col_offset=14)], Store(), lineno=105, col_offset=8)], Tuple([Subscript(Name('row', Load(), lineno=105, col_offset=21), Index(Str('A', lineno=105, col_offset=25)), Load(), lineno=105, col_offset=21), Subscript(Name('row', Load(), lineno=105, col_offset=31), Index(Str('B', lineno=105, col_offset=35)), Load(), lineno=105, col_offset=31)], Load(), lineno=105, col_offset=21), lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertTrue', Load(), lineno=106, col_offset=8), [Compare(Name('col1', Load(), lineno=106, col_offset=24), [Eq()], [Num(1, lineno=106, col_offset=32)], lineno=106, col_offset=24), Str("by name: wrong result for column 'A'", lineno=106, col_offset=35)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertTrue', Load(), lineno=107, col_offset=8), [Compare(Name('col2', Load(), lineno=107, col_offset=24), [Eq()], [Num(2, lineno=107, col_offset=32)], lineno=107, col_offset=24), Str("by name: wrong result for column 'B'", lineno=107, col_offset=35)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Assign([Tuple([Name('col1', Store(), lineno=109, col_offset=8), Name('col2', Store(), lineno=109, col_offset=14)], Store(), lineno=109, col_offset=8)], Tuple([Subscript(Name('row', Load(), lineno=109, col_offset=21), Index(Num(0, lineno=109, col_offset=25)), Load(), lineno=109, col_offset=21), Subscript(Name('row', Load(), lineno=109, col_offset=29), Index(Num(1, lineno=109, col_offset=33)), Load(), lineno=109, col_offset=29)], Load(), lineno=109, col_offset=21), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertTrue', Load(), lineno=110, col_offset=8), [Compare(Name('col1', Load(), lineno=110, col_offset=24), [Eq()], [Num(1, lineno=110, col_offset=32)], lineno=110, col_offset=24), Str('by index: wrong result for column 0', lineno=110, col_offset=35)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertTrue', Load(), lineno=111, col_offset=8), [Compare(Name('col2', Load(), lineno=111, col_offset=24), [Eq()], [Num(2, lineno=111, col_offset=32)], lineno=111, col_offset=24), Str('by index: wrong result for column 1', lineno=111, col_offset=35)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('CheckSqliteRowIter', arguments([Name('self', Param(), lineno=113, col_offset=27)], None, None, []), [Expr(Str('Checks if the row object is iterable', lineno=114, col_offset=8), lineno=114, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=115, col_offset=8), 'con', Load(), lineno=115, col_offset=8), 'row_factory', Store(), lineno=115, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=115, col_offset=31), 'Row', Load(), lineno=115, col_offset=31), lineno=115, col_offset=8), Assign([Name('row', Store(), lineno=116, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=14), 'con', Load(), lineno=116, col_offset=14), 'execute', Load(), lineno=116, col_offset=14), [Str('select 1 as a, 2 as b', lineno=116, col_offset=31)], [], None, None, lineno=116, col_offset=14), 'fetchone', Load(), lineno=116, col_offset=14), [], [], None, None, lineno=116, col_offset=14), lineno=116, col_offset=8), For(Name('col', Store(), lineno=117, col_offset=12), Name('row', Load(), lineno=117, col_offset=19), [Pass( lineno=118, col_offset=12)], [], lineno=117, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('CheckSqliteRowAsTuple', arguments([Name('self', Param(), lineno=120, col_offset=30)], None, None, []), [Expr(Str('Checks if the row object can be converted to a tuple', lineno=121, col_offset=8), lineno=121, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'con', Load(), lineno=122, col_offset=8), 'row_factory', Store(), lineno=122, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=122, col_offset=31), 'Row', Load(), lineno=122, col_offset=31), lineno=122, col_offset=8), Assign([Name('row', Store(), lineno=123, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=123, col_offset=14), 'con', Load(), lineno=123, col_offset=14), 'execute', Load(), lineno=123, col_offset=14), [Str('select 1 as a, 2 as b', lineno=123, col_offset=31)], [], None, None, lineno=123, col_offset=14), 'fetchone', Load(), lineno=123, col_offset=14), [], [], None, None, lineno=123, col_offset=14), lineno=123, col_offset=8), Assign([Name('t', Store(), lineno=124, col_offset=8)], Call(Name('tuple', Load(), lineno=124, col_offset=12), [Name('row', Load(), lineno=124, col_offset=18)], [], None, None, lineno=124, col_offset=12), lineno=124, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('CheckSqliteRowAsDict', arguments([Name('self', Param(), lineno=126, col_offset=29)], None, None, []), [Expr(Str('Checks if the row object can be correctly converted to a dictionary', lineno=127, col_offset=8), lineno=127, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'con', Load(), lineno=128, col_offset=8), 'row_factory', Store(), lineno=128, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=128, col_offset=31), 'Row', Load(), lineno=128, col_offset=31), lineno=128, col_offset=8), Assign([Name('row', Store(), lineno=129, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=129, col_offset=14), 'con', Load(), lineno=129, col_offset=14), 'execute', Load(), lineno=129, col_offset=14), [Str('select 1 as a, 2 as b', lineno=129, col_offset=31)], [], None, None, lineno=129, col_offset=14), 'fetchone', Load(), lineno=129, col_offset=14), [], [], None, None, lineno=129, col_offset=14), lineno=129, col_offset=8), Assign([Name('d', Store(), lineno=130, col_offset=8)], Call(Name('dict', Load(), lineno=130, col_offset=12), [Name('row', Load(), lineno=130, col_offset=17)], [], None, None, lineno=130, col_offset=12), lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'assertEqual', Load(), lineno=131, col_offset=8), [Subscript(Name('d', Load(), lineno=131, col_offset=25), Index(Str('a', lineno=131, col_offset=27)), Load(), lineno=131, col_offset=25), Subscript(Name('row', Load(), lineno=131, col_offset=33), Index(Str('a', lineno=131, col_offset=37)), Load(), lineno=131, col_offset=33)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'assertEqual', Load(), lineno=132, col_offset=8), [Subscript(Name('d', Load(), lineno=132, col_offset=25), Index(Str('b', lineno=132, col_offset=27)), Load(), lineno=132, col_offset=25), Subscript(Name('row', Load(), lineno=132, col_offset=33), Index(Str('b', lineno=132, col_offset=37)), Load(), lineno=132, col_offset=33)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('CheckSqliteRowHashCmp', arguments([Name('self', Param(), lineno=134, col_offset=30)], None, None, []), [Expr(Str('Checks if the row object compares and hashes correctly', lineno=135, col_offset=8), lineno=135, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'con', Load(), lineno=136, col_offset=8), 'row_factory', Store(), lineno=136, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=136, col_offset=31), 'Row', Load(), lineno=136, col_offset=31), lineno=136, col_offset=8), Assign([Name('row_1', Store(), lineno=137, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=137, col_offset=16), 'con', Load(), lineno=137, col_offset=16), 'execute', Load(), lineno=137, col_offset=16), [Str('select 1 as a, 2 as b', lineno=137, col_offset=33)], [], None, None, lineno=137, col_offset=16), 'fetchone', Load(), lineno=137, col_offset=16), [], [], None, None, lineno=137, col_offset=16), lineno=137, col_offset=8), Assign([Name('row_2', Store(), lineno=138, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=138, col_offset=16), 'con', Load(), lineno=138, col_offset=16), 'execute', Load(), lineno=138, col_offset=16), [Str('select 1 as a, 2 as b', lineno=138, col_offset=33)], [], None, None, lineno=138, col_offset=16), 'fetchone', Load(), lineno=138, col_offset=16), [], [], None, None, lineno=138, col_offset=16), lineno=138, col_offset=8), Assign([Name('row_3', Store(), lineno=139, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=139, col_offset=16), 'con', Load(), lineno=139, col_offset=16), 'execute', Load(), lineno=139, col_offset=16), [Str('select 1 as a, 3 as b', lineno=139, col_offset=33)], [], None, None, lineno=139, col_offset=16), 'fetchone', Load(), lineno=139, col_offset=16), [], [], None, None, lineno=139, col_offset=16), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'assertTrue', Load(), lineno=141, col_offset=8), [Compare(Name('row_1', Load(), lineno=141, col_offset=24), [Eq()], [Name('row_1', Load(), lineno=141, col_offset=33)], lineno=141, col_offset=24)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertTrue', Load(), lineno=142, col_offset=8), [Compare(Name('row_1', Load(), lineno=142, col_offset=24), [Eq()], [Name('row_2', Load(), lineno=142, col_offset=33)], lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertTrue', Load(), lineno=143, col_offset=8), [Compare(Name('row_2', Load(), lineno=143, col_offset=24), [NotEq()], [Name('row_3', Load(), lineno=143, col_offset=33)], lineno=143, col_offset=24)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertFalse', Load(), lineno=145, col_offset=8), [Compare(Name('row_1', Load(), lineno=145, col_offset=25), [NotEq()], [Name('row_1', Load(), lineno=145, col_offset=34)], lineno=145, col_offset=25)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertFalse', Load(), lineno=146, col_offset=8), [Compare(Name('row_1', Load(), lineno=146, col_offset=25), [NotEq()], [Name('row_2', Load(), lineno=146, col_offset=34)], lineno=146, col_offset=25)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=8), 'assertFalse', Load(), lineno=147, col_offset=8), [Compare(Name('row_2', Load(), lineno=147, col_offset=25), [Eq()], [Name('row_3', Load(), lineno=147, col_offset=34)], lineno=147, col_offset=25)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Name('row_1', Load(), lineno=149, col_offset=25), Name('row_2', Load(), lineno=149, col_offset=32)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertEqual', Load(), lineno=150, col_offset=8), [Call(Name('hash', Load(), lineno=150, col_offset=25), [Name('row_1', Load(), lineno=150, col_offset=30)], [], None, None, lineno=150, col_offset=25), Call(Name('hash', Load(), lineno=150, col_offset=38), [Name('row_2', Load(), lineno=150, col_offset=43)], [], None, None, lineno=150, col_offset=38)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'assertNotEqual', Load(), lineno=151, col_offset=8), [Name('row_1', Load(), lineno=151, col_offset=28), Name('row_3', Load(), lineno=151, col_offset=35)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'assertNotEqual', Load(), lineno=152, col_offset=8), [Call(Name('hash', Load(), lineno=152, col_offset=28), [Name('row_1', Load(), lineno=152, col_offset=33)], [], None, None, lineno=152, col_offset=28), Call(Name('hash', Load(), lineno=152, col_offset=41), [Name('row_3', Load(), lineno=152, col_offset=46)], [], None, None, lineno=152, col_offset=41)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=154, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'con', Load(), lineno=155, col_offset=8), 'close', Load(), lineno=155, col_offset=8), [], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8)], [], lineno=154, col_offset=4)], [], lineno=83, col_offset=0), ClassDef('TextFactoryTests', [Attribute(Name('unittest', Load(), lineno=157, col_offset=23), 'TestCase', Load(), lineno=157, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=158, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=159, col_offset=8), 'con', Store(), lineno=159, col_offset=8)], Call(Attribute(Name('sqlite', Load(), lineno=159, col_offset=19), 'connect', Load(), lineno=159, col_offset=19), [Str(':memory:', lineno=159, col_offset=34)], [], None, None, lineno=159, col_offset=19), lineno=159, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('CheckUnicode', arguments([Name('self', Param(), lineno=161, col_offset=21)], None, None, []), [Assign([Name('austria', Store(), lineno=162, col_offset=8)], Call(Name('unicode', Load(), lineno=162, col_offset=18), [Str('\xd6sterreich', lineno=162, col_offset=26), Str('latin1', lineno=162, col_offset=40)], [], None, None, lineno=162, col_offset=18), lineno=162, col_offset=8), Assign([Name('row', Store(), lineno=163, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=163, col_offset=14), 'con', Load(), lineno=163, col_offset=14), 'execute', Load(), lineno=163, col_offset=14), [Str('select ?', lineno=163, col_offset=31), Tuple([Name('austria', Load(), lineno=163, col_offset=44)], Load(), lineno=163, col_offset=44)], [], None, None, lineno=163, col_offset=14), 'fetchone', Load(), lineno=163, col_offset=14), [], [], None, None, lineno=163, col_offset=14), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertTrue', Load(), lineno=164, col_offset=8), [Compare(Call(Name('type', Load(), lineno=164, col_offset=24), [Subscript(Name('row', Load(), lineno=164, col_offset=29), Index(Num(0, lineno=164, col_offset=33)), Load(), lineno=164, col_offset=29)], [], None, None, lineno=164, col_offset=24), [Eq()], [Name('unicode', Load(), lineno=164, col_offset=40)], lineno=164, col_offset=24), Str('type of row[0] must be unicode', lineno=164, col_offset=49)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('CheckString', arguments([Name('self', Param(), lineno=166, col_offset=20)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'con', Load(), lineno=167, col_offset=8), 'text_factory', Store(), lineno=167, col_offset=8)], Name('str', Load(), lineno=167, col_offset=32), lineno=167, col_offset=8), Assign([Name('austria', Store(), lineno=168, col_offset=8)], Call(Name('unicode', Load(), lineno=168, col_offset=18), [Str('\xd6sterreich', lineno=168, col_offset=26), Str('latin1', lineno=168, col_offset=40)], [], None, None, lineno=168, col_offset=18), lineno=168, col_offset=8), Assign([Name('row', Store(), lineno=169, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=169, col_offset=14), 'con', Load(), lineno=169, col_offset=14), 'execute', Load(), lineno=169, col_offset=14), [Str('select ?', lineno=169, col_offset=31), Tuple([Name('austria', Load(), lineno=169, col_offset=44)], Load(), lineno=169, col_offset=44)], [], None, None, lineno=169, col_offset=14), 'fetchone', Load(), lineno=169, col_offset=14), [], [], None, None, lineno=169, col_offset=14), lineno=169, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'assertTrue', Load(), lineno=170, col_offset=8), [Compare(Call(Name('type', Load(), lineno=170, col_offset=24), [Subscript(Name('row', Load(), lineno=170, col_offset=29), Index(Num(0, lineno=170, col_offset=33)), Load(), lineno=170, col_offset=29)], [], None, None, lineno=170, col_offset=24), [Eq()], [Name('str', Load(), lineno=170, col_offset=40)], lineno=170, col_offset=24), Str('type of row[0] must be str', lineno=170, col_offset=45)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertTrue', Load(), lineno=171, col_offset=8), [Compare(Subscript(Name('row', Load(), lineno=171, col_offset=24), Index(Num(0, lineno=171, col_offset=28)), Load(), lineno=171, col_offset=24), [Eq()], [Call(Attribute(Name('austria', Load(), lineno=171, col_offset=34), 'encode', Load(), lineno=171, col_offset=34), [Str('utf-8', lineno=171, col_offset=49)], [], None, None, lineno=171, col_offset=34)], lineno=171, col_offset=24), Str('column must equal original data in UTF-8', lineno=171, col_offset=59)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('CheckCustom', arguments([Name('self', Param(), lineno=173, col_offset=20)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'con', Load(), lineno=174, col_offset=8), 'text_factory', Store(), lineno=174, col_offset=8)], Lambda(arguments([Name('x', Param(), lineno=174, col_offset=39)], None, None, []), Call(Name('unicode', Load(), lineno=174, col_offset=42), [Name('x', Load(), lineno=174, col_offset=50), Str('utf-8', lineno=174, col_offset=53), Str('ignore', lineno=174, col_offset=62)], [], None, None, lineno=174, col_offset=42), lineno=174, col_offset=32), lineno=174, col_offset=8), Assign([Name('austria', Store(), lineno=175, col_offset=8)], Call(Name('unicode', Load(), lineno=175, col_offset=18), [Str('\xd6sterreich', lineno=175, col_offset=26), Str('latin1', lineno=175, col_offset=40)], [], None, None, lineno=175, col_offset=18), lineno=175, col_offset=8), Assign([Name('row', Store(), lineno=176, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=176, col_offset=14), 'con', Load(), lineno=176, col_offset=14), 'execute', Load(), lineno=176, col_offset=14), [Str('select ?', lineno=176, col_offset=31), Tuple([Call(Attribute(Name('austria', Load(), lineno=176, col_offset=44), 'encode', Load(), lineno=176, col_offset=44), [Str('latin1', lineno=176, col_offset=59)], [], None, None, lineno=176, col_offset=44)], Load(), lineno=176, col_offset=44)], [], None, None, lineno=176, col_offset=14), 'fetchone', Load(), lineno=176, col_offset=14), [], [], None, None, lineno=176, col_offset=14), lineno=176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'assertTrue', Load(), lineno=177, col_offset=8), [Compare(Call(Name('type', Load(), lineno=177, col_offset=24), [Subscript(Name('row', Load(), lineno=177, col_offset=29), Index(Num(0, lineno=177, col_offset=33)), Load(), lineno=177, col_offset=29)], [], None, None, lineno=177, col_offset=24), [Eq()], [Name('unicode', Load(), lineno=177, col_offset=40)], lineno=177, col_offset=24), Str('type of row[0] must be unicode', lineno=177, col_offset=49)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'assertTrue', Load(), lineno=178, col_offset=8), [Call(Attribute(Subscript(Name('row', Load(), lineno=178, col_offset=24), Index(Num(0, lineno=178, col_offset=28)), Load(), lineno=178, col_offset=24), 'endswith', Load(), lineno=178, col_offset=24), [Str(u'reich', lineno=178, col_offset=40)], [], None, None, lineno=178, col_offset=24), Str('column must contain original data', lineno=178, col_offset=51)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('CheckOptimizedUnicode', arguments([Name('self', Param(), lineno=180, col_offset=30)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'con', Load(), lineno=181, col_offset=8), 'text_factory', Store(), lineno=181, col_offset=8)], Attribute(Name('sqlite', Load(), lineno=181, col_offset=32), 'OptimizedUnicode', Load(), lineno=181, col_offset=32), lineno=181, col_offset=8), Assign([Name('austria', Store(), lineno=182, col_offset=8)], Call(Name('unicode', Load(), lineno=182, col_offset=18), [Str('\xd6sterreich', lineno=182, col_offset=26), Str('latin1', lineno=182, col_offset=40)], [], None, None, lineno=182, col_offset=18), lineno=182, col_offset=8), Assign([Name('germany', Store(), lineno=183, col_offset=8)], Call(Name('unicode', Load(), lineno=183, col_offset=18), [Str('Deutchland', lineno=183, col_offset=26)], [], None, None, lineno=183, col_offset=18), lineno=183, col_offset=8), Assign([Name('a_row', Store(), lineno=184, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=184, col_offset=16), 'con', Load(), lineno=184, col_offset=16), 'execute', Load(), lineno=184, col_offset=16), [Str('select ?', lineno=184, col_offset=33), Tuple([Name('austria', Load(), lineno=184, col_offset=46)], Load(), lineno=184, col_offset=46)], [], None, None, lineno=184, col_offset=16), 'fetchone', Load(), lineno=184, col_offset=16), [], [], None, None, lineno=184, col_offset=16), lineno=184, col_offset=8), Assign([Name('d_row', Store(), lineno=185, col_offset=8)], Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=185, col_offset=16), 'con', Load(), lineno=185, col_offset=16), 'execute', Load(), lineno=185, col_offset=16), [Str('select ?', lineno=185, col_offset=33), Tuple([Name('germany', Load(), lineno=185, col_offset=46)], Load(), lineno=185, col_offset=46)], [], None, None, lineno=185, col_offset=16), 'fetchone', Load(), lineno=185, col_offset=16), [], [], None, None, lineno=185, col_offset=16), lineno=185, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), 'assertTrue', Load(), lineno=186, col_offset=8), [Compare(Call(Name('type', Load(), lineno=186, col_offset=24), [Subscript(Name('a_row', Load(), lineno=186, col_offset=29), Index(Num(0, lineno=186, col_offset=35)), Load(), lineno=186, col_offset=29)], [], None, None, lineno=186, col_offset=24), [Eq()], [Name('unicode', Load(), lineno=186, col_offset=42)], lineno=186, col_offset=24), Str('type of non-ASCII row must be unicode', lineno=186, col_offset=51)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertTrue', Load(), lineno=187, col_offset=8), [Compare(Call(Name('type', Load(), lineno=187, col_offset=24), [Subscript(Name('d_row', Load(), lineno=187, col_offset=29), Index(Num(0, lineno=187, col_offset=35)), Load(), lineno=187, col_offset=29)], [], None, None, lineno=187, col_offset=24), [Eq()], [Name('str', Load(), lineno=187, col_offset=42)], lineno=187, col_offset=24), Str('type of ASCII-only row must be str', lineno=187, col_offset=47)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=189, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'con', Load(), lineno=190, col_offset=8), 'close', Load(), lineno=190, col_offset=8), [], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=189, col_offset=4)], [], lineno=157, col_offset=0), FunctionDef('suite', arguments([], None, None, []), [Assign([Name('connection_suite', Store(), lineno=193, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=193, col_offset=23), 'makeSuite', Load(), lineno=193, col_offset=23), [Name('ConnectionFactoryTests', Load(), lineno=193, col_offset=42), Str('Check', lineno=193, col_offset=66)], [], None, None, lineno=193, col_offset=23), lineno=193, col_offset=4), Assign([Name('cursor_suite', Store(), lineno=194, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=194, col_offset=19), 'makeSuite', Load(), lineno=194, col_offset=19), [Name('CursorFactoryTests', Load(), lineno=194, col_offset=38), Str('Check', lineno=194, col_offset=58)], [], None, None, lineno=194, col_offset=19), lineno=194, col_offset=4), Assign([Name('row_suite_compat', Store(), lineno=195, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=195, col_offset=23), 'makeSuite', Load(), lineno=195, col_offset=23), [Name('RowFactoryTestsBackwardsCompat', Load(), lineno=195, col_offset=42), Str('Check', lineno=195, col_offset=74)], [], None, None, lineno=195, col_offset=23), lineno=195, col_offset=4), Assign([Name('row_suite', Store(), lineno=196, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=196, col_offset=16), 'makeSuite', Load(), lineno=196, col_offset=16), [Name('RowFactoryTests', Load(), lineno=196, col_offset=35), Str('Check', lineno=196, col_offset=52)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=4), Assign([Name('text_suite', Store(), lineno=197, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=197, col_offset=17), 'makeSuite', Load(), lineno=197, col_offset=17), [Name('TextFactoryTests', Load(), lineno=197, col_offset=36), Str('Check', lineno=197, col_offset=54)], [], None, None, lineno=197, col_offset=17), lineno=197, col_offset=4), Return(Call(Attribute(Name('unittest', Load(), lineno=198, col_offset=11), 'TestSuite', Load(), lineno=198, col_offset=11), [Tuple([Name('connection_suite', Load(), lineno=198, col_offset=31), Name('cursor_suite', Load(), lineno=198, col_offset=49), Name('row_suite_compat', Load(), lineno=198, col_offset=63), Name('row_suite', Load(), lineno=198, col_offset=81), Name('text_suite', Load(), lineno=198, col_offset=92)], Load(), lineno=198, col_offset=31)], [], None, None, lineno=198, col_offset=11), lineno=198, col_offset=4)], [], lineno=192, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Assign([Name('runner', Store(), lineno=201, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=201, col_offset=13), 'TextTestRunner', Load(), lineno=201, col_offset=13), [], [], None, None, lineno=201, col_offset=13), lineno=201, col_offset=4), Expr(Call(Attribute(Name('runner', Load(), lineno=202, col_offset=4), 'run', Load(), lineno=202, col_offset=4), [Call(Name('suite', Load(), lineno=202, col_offset=15), [], [], None, None, lineno=202, col_offset=15)], [], None, None, lineno=202, col_offset=4), lineno=202, col_offset=4)], [], lineno=200, col_offset=0), If(Compare(Name('__name__', Load(), lineno=204, col_offset=3), [Eq()], [Str('__main__', lineno=204, col_offset=15)], lineno=204, col_offset=3), [Expr(Call(Name('test', Load(), lineno=205, col_offset=4), [], [], None, None, lineno=205, col_offset=4), lineno=205, col_offset=4)], [], lineno=204, col_offset=0)])
