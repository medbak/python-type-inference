Module([Expr(Str('Import hook support.\n\nConsistent use of this module will make it possible to change the\ndifferent mechanisms involved in loading modules independently.\n\nWhile the built-in module imp exports interfaces to the built-in\nmodule searching and loading algorithm, and it is possible to replace\nthe built-in function __import__ in order to change the semantics of\nthe import statement, until now it has been difficult to combine the\neffect of different __import__ hacks, like loading modules from URLs\nby rimport.py, or restricted execution by rexec.py.\n\nThis module defines three new concepts:\n\n1) A "file system hooks" class provides an interface to a filesystem.\n\nOne hooks class is defined (Hooks), which uses the interface provided\nby standard modules os and os.path.  It should be used as the base\nclass for other hooks classes.\n\n2) A "module loader" class provides an interface to search for a\nmodule in a search path and to load it.  It defines a method which\nsearches for a module in a single directory; by overriding this method\none can redefine the details of the search.  If the directory is None,\nbuilt-in and frozen modules are searched instead.\n\nTwo module loader class are defined, both implementing the search\nstrategy used by the built-in __import__ function: ModuleLoader uses\nthe imp module\'s find_module interface, while HookableModuleLoader\nuses a file system hooks class to interact with the file system.  Both\nuse the imp module\'s load_* interfaces to actually load the module.\n\n3) A "module importer" class provides an interface to import a\nmodule, as well as interfaces to reload and unload a module.  It also\nprovides interfaces to install and uninstall itself instead of the\ndefault __import__ and reload (and unload) functions.\n\nOne module importer class is defined (ModuleImporter), which uses a\nmodule loader instance passed in (by default HookableModuleLoader is\ninstantiated).\n\nThe classes defined here should be used as base classes for extended\nfunctionality along those lines.\n\nIf a module importer class supports dotted names, its import_module()\nmust return a different value depending on whether it is called on\nbehalf of a "from ... import ..." statement or not.  (This is caused\nby the way the __import__ hook is used by the Python interpreter.)  It\nwould also do wise to install a different version of reload().\n\n', lineno=51, col_offset=-1), lineno=51, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None), alias('warn', None)], 0, lineno=52, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=53, col_offset=0), [Str('the ihooks module has been removed in Python 3.0', lineno=53, col_offset=9)], [keyword('stacklevel', Num(2, lineno=53, col_offset=72))], None, None, lineno=53, col_offset=0), lineno=53, col_offset=0), Delete([Name('warnpy3k', Del(), lineno=54, col_offset=4)], lineno=54, col_offset=0), Import([alias('__builtin__', None)], lineno=56, col_offset=0), Import([alias('imp', None)], lineno=57, col_offset=0), Import([alias('os', None)], lineno=58, col_offset=0), Import([alias('sys', None)], lineno=59, col_offset=0), Assign([Name('__all__', Store(), lineno=61, col_offset=0)], List([Str('BasicModuleLoader', lineno=61, col_offset=11), Str('Hooks', lineno=61, col_offset=31), Str('ModuleLoader', lineno=61, col_offset=39), Str('FancyModuleLoader', lineno=61, col_offset=54), Str('BasicModuleImporter', lineno=62, col_offset=11), Str('ModuleImporter', lineno=62, col_offset=33), Str('install', lineno=62, col_offset=50), Str('uninstall', lineno=62, col_offset=60)], Load(), lineno=61, col_offset=10), lineno=61, col_offset=0), Assign([Name('VERBOSE', Store(), lineno=64, col_offset=0)], Num(0, lineno=64, col_offset=10), lineno=64, col_offset=0), ImportFrom('imp', [alias('C_EXTENSION', None), alias('PY_SOURCE', None), alias('PY_COMPILED', None)], 0, lineno=67, col_offset=0), ImportFrom('imp', [alias('C_BUILTIN', None), alias('PY_FROZEN', None), alias('PKG_DIRECTORY', None)], 0, lineno=68, col_offset=0), Assign([Name('BUILTIN_MODULE', Store(), lineno=69, col_offset=0)], Name('C_BUILTIN', Load(), lineno=69, col_offset=17), lineno=69, col_offset=0), Assign([Name('FROZEN_MODULE', Store(), lineno=70, col_offset=0)], Name('PY_FROZEN', Load(), lineno=70, col_offset=16), lineno=70, col_offset=0), ClassDef('_Verbose', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=75, col_offset=17), Name('verbose', Param(), lineno=75, col_offset=23)], None, None, [Name('VERBOSE', Load(), lineno=75, col_offset=33)]), [Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), 'verbose', Store(), lineno=76, col_offset=8)], Name('verbose', Load(), lineno=76, col_offset=23), lineno=76, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('get_verbose', arguments([Name('self', Param(), lineno=78, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=79, col_offset=15), 'verbose', Load(), lineno=79, col_offset=15), lineno=79, col_offset=8)], [], lineno=78, col_offset=4), FunctionDef('set_verbose', arguments([Name('self', Param(), lineno=81, col_offset=20), Name('verbose', Param(), lineno=81, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=82, col_offset=8), 'verbose', Store(), lineno=82, col_offset=8)], Name('verbose', Load(), lineno=82, col_offset=23), lineno=82, col_offset=8)], [], lineno=81, col_offset=4), FunctionDef('note', arguments([Name('self', Param(), lineno=86, col_offset=13)], 'args', None, []), [If(Attribute(Name('self', Load(), lineno=87, col_offset=11), 'verbose', Load(), lineno=87, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=12), 'message', Load(), lineno=88, col_offset=12), [], [], Name('args', Load(), lineno=88, col_offset=26), None, lineno=88, col_offset=12), lineno=88, col_offset=12)], [], lineno=87, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('message', arguments([Name('self', Param(), lineno=90, col_offset=16), Name('format', Param(), lineno=90, col_offset=22)], 'args', None, []), [If(Name('args', Load(), lineno=91, col_offset=11), [Print(None, [BinOp(Name('format', Load(), lineno=92, col_offset=18), Mod(), Name('args', Load(), lineno=92, col_offset=25), lineno=92, col_offset=18)], True, lineno=92, col_offset=12)], [Print(None, [Name('format', Load(), lineno=94, col_offset=18)], True, lineno=94, col_offset=12)], lineno=91, col_offset=8)], [], lineno=90, col_offset=4)], [], lineno=73, col_offset=0), ClassDef('BasicModuleLoader', [Name('_Verbose', Load(), lineno=97, col_offset=24)], [Expr(Str("Basic module loader.\n\n    This provides the same functionality as built-in import.  It\n    doesn't deal with checking sys.modules -- all it provides is\n    find_module() and a load_module(), as well as find_module_in_dir()\n    which searches just one directory, and can be overridden by a\n    derived class to change the module search algorithm when the basic\n    dependency on sys.path is unchanged.\n\n    The interface is a little more convenient than imp's:\n    find_module(name, [path]) returns None or 'stuff', and\n    load_module(name, stuff) loads the module.\n\n    ", lineno=112, col_offset=-1), lineno=112, col_offset=-1), FunctionDef('find_module', arguments([Name('self', Param(), lineno=114, col_offset=20), Name('name', Param(), lineno=114, col_offset=26), Name('path', Param(), lineno=114, col_offset=32)], None, None, [Name('None', Load(), lineno=114, col_offset=39)]), [If(Compare(Name('path', Load(), lineno=115, col_offset=11), [Is()], [Name('None', Load(), lineno=115, col_offset=19)], lineno=115, col_offset=11), [Assign([Name('path', Store(), lineno=116, col_offset=12)], BinOp(List([Name('None', Load(), lineno=116, col_offset=20)], Load(), lineno=116, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=116, col_offset=28), 'default_path', Load(), lineno=116, col_offset=28), [], [], None, None, lineno=116, col_offset=28), lineno=116, col_offset=19), lineno=116, col_offset=12)], [], lineno=115, col_offset=8), For(Name('dir', Store(), lineno=117, col_offset=12), Name('path', Load(), lineno=117, col_offset=19), [Assign([Name('stuff', Store(), lineno=118, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=118, col_offset=20), 'find_module_in_dir', Load(), lineno=118, col_offset=20), [Name('name', Load(), lineno=118, col_offset=44), Name('dir', Load(), lineno=118, col_offset=50)], [], None, None, lineno=118, col_offset=20), lineno=118, col_offset=12), If(Name('stuff', Load(), lineno=119, col_offset=15), [Return(Name('stuff', Load(), lineno=119, col_offset=29), lineno=119, col_offset=22)], [], lineno=119, col_offset=12)], [], lineno=117, col_offset=8), Return(Name('None', Load(), lineno=120, col_offset=15), lineno=120, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('default_path', arguments([Name('self', Param(), lineno=122, col_offset=21)], None, None, []), [Return(Attribute(Name('sys', Load(), lineno=123, col_offset=15), 'path', Load(), lineno=123, col_offset=15), lineno=123, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('find_module_in_dir', arguments([Name('self', Param(), lineno=125, col_offset=27), Name('name', Param(), lineno=125, col_offset=33), Name('dir', Param(), lineno=125, col_offset=39)], None, None, []), [If(Compare(Name('dir', Load(), lineno=126, col_offset=11), [Is()], [Name('None', Load(), lineno=126, col_offset=18)], lineno=126, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=127, col_offset=19), 'find_builtin_module', Load(), lineno=127, col_offset=19), [Name('name', Load(), lineno=127, col_offset=44)], [], None, None, lineno=127, col_offset=19), lineno=127, col_offset=12)], [TryExcept([Return(Call(Attribute(Name('imp', Load(), lineno=130, col_offset=23), 'find_module', Load(), lineno=130, col_offset=23), [Name('name', Load(), lineno=130, col_offset=39), List([Name('dir', Load(), lineno=130, col_offset=46)], Load(), lineno=130, col_offset=45)], [], None, None, lineno=130, col_offset=23), lineno=130, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=131, col_offset=19), None, [Return(Name('None', Load(), lineno=132, col_offset=23), lineno=132, col_offset=16)], lineno=131, col_offset=12)], [], lineno=129, col_offset=12)], lineno=126, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('find_builtin_module', arguments([Name('self', Param(), lineno=134, col_offset=28), Name('name', Param(), lineno=134, col_offset=34)], None, None, []), [If(Call(Attribute(Name('imp', Load(), lineno=136, col_offset=11), 'is_builtin', Load(), lineno=136, col_offset=11), [Name('name', Load(), lineno=136, col_offset=26)], [], None, None, lineno=136, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=137, col_offset=19), Str('', lineno=137, col_offset=25), Tuple([Str('', lineno=137, col_offset=30), Str('', lineno=137, col_offset=34), Name('BUILTIN_MODULE', Load(), lineno=137, col_offset=38)], Load(), lineno=137, col_offset=30)], Load(), lineno=137, col_offset=19), lineno=137, col_offset=12)], [], lineno=136, col_offset=8), If(Call(Attribute(Name('imp', Load(), lineno=138, col_offset=11), 'is_frozen', Load(), lineno=138, col_offset=11), [Name('name', Load(), lineno=138, col_offset=25)], [], None, None, lineno=138, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=139, col_offset=19), Str('', lineno=139, col_offset=25), Tuple([Str('', lineno=139, col_offset=30), Str('', lineno=139, col_offset=34), Name('FROZEN_MODULE', Load(), lineno=139, col_offset=38)], Load(), lineno=139, col_offset=30)], Load(), lineno=139, col_offset=19), lineno=139, col_offset=12)], [], lineno=138, col_offset=8), Return(Name('None', Load(), lineno=140, col_offset=15), lineno=140, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=142, col_offset=20), Name('name', Param(), lineno=142, col_offset=26), Name('stuff', Param(), lineno=142, col_offset=32)], None, None, []), [Assign([Tuple([Name('file', Store(), lineno=143, col_offset=8), Name('filename', Store(), lineno=143, col_offset=14), Name('info', Store(), lineno=143, col_offset=24)], Store(), lineno=143, col_offset=8)], Name('stuff', Load(), lineno=143, col_offset=31), lineno=143, col_offset=8), TryFinally([Return(Call(Attribute(Name('imp', Load(), lineno=145, col_offset=19), 'load_module', Load(), lineno=145, col_offset=19), [Name('name', Load(), lineno=145, col_offset=35), Name('file', Load(), lineno=145, col_offset=41), Name('filename', Load(), lineno=145, col_offset=47), Name('info', Load(), lineno=145, col_offset=57)], [], None, None, lineno=145, col_offset=19), lineno=145, col_offset=12)], [If(Name('file', Load(), lineno=147, col_offset=15), [Expr(Call(Attribute(Name('file', Load(), lineno=147, col_offset=21), 'close', Load(), lineno=147, col_offset=21), [], [], None, None, lineno=147, col_offset=21), lineno=147, col_offset=21)], [], lineno=147, col_offset=12)], lineno=144, col_offset=8)], [], lineno=142, col_offset=4)], [], lineno=97, col_offset=0), ClassDef('Hooks', [Name('_Verbose', Load(), lineno=150, col_offset=12)], [Expr(Str('Hooks into the filesystem and interpreter.\n\n    By deriving a subclass you can redefine your filesystem interface,\n    e.g. to merge it with the URL space.\n\n    This base class behaves just like the native filesystem.\n\n    ', lineno=159, col_offset=-1), lineno=159, col_offset=-1), FunctionDef('get_suffixes', arguments([Name('self', Param(), lineno=162, col_offset=21)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=162, col_offset=35), 'get_suffixes', Load(), lineno=162, col_offset=35), [], [], None, None, lineno=162, col_offset=35), lineno=162, col_offset=28)], [], lineno=162, col_offset=4), FunctionDef('new_module', arguments([Name('self', Param(), lineno=163, col_offset=19), Name('name', Param(), lineno=163, col_offset=25)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=163, col_offset=39), 'new_module', Load(), lineno=163, col_offset=39), [Name('name', Load(), lineno=163, col_offset=54)], [], None, None, lineno=163, col_offset=39), lineno=163, col_offset=32)], [], lineno=163, col_offset=4), FunctionDef('is_builtin', arguments([Name('self', Param(), lineno=164, col_offset=19), Name('name', Param(), lineno=164, col_offset=25)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=164, col_offset=39), 'is_builtin', Load(), lineno=164, col_offset=39), [Name('name', Load(), lineno=164, col_offset=54)], [], None, None, lineno=164, col_offset=39), lineno=164, col_offset=32)], [], lineno=164, col_offset=4), FunctionDef('init_builtin', arguments([Name('self', Param(), lineno=165, col_offset=21), Name('name', Param(), lineno=165, col_offset=27)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=165, col_offset=41), 'init_builtin', Load(), lineno=165, col_offset=41), [Name('name', Load(), lineno=165, col_offset=58)], [], None, None, lineno=165, col_offset=41), lineno=165, col_offset=34)], [], lineno=165, col_offset=4), FunctionDef('is_frozen', arguments([Name('self', Param(), lineno=166, col_offset=18), Name('name', Param(), lineno=166, col_offset=24)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=166, col_offset=38), 'is_frozen', Load(), lineno=166, col_offset=38), [Name('name', Load(), lineno=166, col_offset=52)], [], None, None, lineno=166, col_offset=38), lineno=166, col_offset=31)], [], lineno=166, col_offset=4), FunctionDef('init_frozen', arguments([Name('self', Param(), lineno=167, col_offset=20), Name('name', Param(), lineno=167, col_offset=26)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=167, col_offset=40), 'init_frozen', Load(), lineno=167, col_offset=40), [Name('name', Load(), lineno=167, col_offset=56)], [], None, None, lineno=167, col_offset=40), lineno=167, col_offset=33)], [], lineno=167, col_offset=4), FunctionDef('get_frozen_object', arguments([Name('self', Param(), lineno=168, col_offset=26), Name('name', Param(), lineno=168, col_offset=32)], None, None, []), [Return(Call(Attribute(Name('imp', Load(), lineno=168, col_offset=46), 'get_frozen_object', Load(), lineno=168, col_offset=46), [Name('name', Load(), lineno=168, col_offset=68)], [], None, None, lineno=168, col_offset=46), lineno=168, col_offset=39)], [], lineno=168, col_offset=4), FunctionDef('load_source', arguments([Name('self', Param(), lineno=169, col_offset=20), Name('name', Param(), lineno=169, col_offset=26), Name('filename', Param(), lineno=169, col_offset=32), Name('file', Param(), lineno=169, col_offset=42)], None, None, [Name('None', Load(), lineno=169, col_offset=47)]), [Return(Call(Attribute(Name('imp', Load(), lineno=170, col_offset=15), 'load_source', Load(), lineno=170, col_offset=15), [Name('name', Load(), lineno=170, col_offset=31), Name('filename', Load(), lineno=170, col_offset=37), Name('file', Load(), lineno=170, col_offset=47)], [], None, None, lineno=170, col_offset=15), lineno=170, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('load_compiled', arguments([Name('self', Param(), lineno=171, col_offset=22), Name('name', Param(), lineno=171, col_offset=28), Name('filename', Param(), lineno=171, col_offset=34), Name('file', Param(), lineno=171, col_offset=44)], None, None, [Name('None', Load(), lineno=171, col_offset=49)]), [Return(Call(Attribute(Name('imp', Load(), lineno=172, col_offset=15), 'load_compiled', Load(), lineno=172, col_offset=15), [Name('name', Load(), lineno=172, col_offset=33), Name('filename', Load(), lineno=172, col_offset=39), Name('file', Load(), lineno=172, col_offset=49)], [], None, None, lineno=172, col_offset=15), lineno=172, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('load_dynamic', arguments([Name('self', Param(), lineno=173, col_offset=21), Name('name', Param(), lineno=173, col_offset=27), Name('filename', Param(), lineno=173, col_offset=33), Name('file', Param(), lineno=173, col_offset=43)], None, None, [Name('None', Load(), lineno=173, col_offset=48)]), [Return(Call(Attribute(Name('imp', Load(), lineno=174, col_offset=15), 'load_dynamic', Load(), lineno=174, col_offset=15), [Name('name', Load(), lineno=174, col_offset=32), Name('filename', Load(), lineno=174, col_offset=38), Name('file', Load(), lineno=174, col_offset=48)], [], None, None, lineno=174, col_offset=15), lineno=174, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('load_package', arguments([Name('self', Param(), lineno=175, col_offset=21), Name('name', Param(), lineno=175, col_offset=27), Name('filename', Param(), lineno=175, col_offset=33), Name('file', Param(), lineno=175, col_offset=43)], None, None, [Name('None', Load(), lineno=175, col_offset=48)]), [Return(Call(Attribute(Name('imp', Load(), lineno=176, col_offset=15), 'load_module', Load(), lineno=176, col_offset=15), [Name('name', Load(), lineno=176, col_offset=31), Name('file', Load(), lineno=176, col_offset=37), Name('filename', Load(), lineno=176, col_offset=43), Tuple([Str('', lineno=176, col_offset=54), Str('', lineno=176, col_offset=58), Name('PKG_DIRECTORY', Load(), lineno=176, col_offset=62)], Load(), lineno=176, col_offset=54)], [], None, None, lineno=176, col_offset=15), lineno=176, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('add_module', arguments([Name('self', Param(), lineno=178, col_offset=19), Name('name', Param(), lineno=178, col_offset=25)], None, None, []), [Assign([Name('d', Store(), lineno=179, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=179, col_offset=12), 'modules_dict', Load(), lineno=179, col_offset=12), [], [], None, None, lineno=179, col_offset=12), lineno=179, col_offset=8), If(Compare(Name('name', Load(), lineno=180, col_offset=11), [In()], [Name('d', Load(), lineno=180, col_offset=19)], lineno=180, col_offset=11), [Return(Subscript(Name('d', Load(), lineno=180, col_offset=29), Index(Name('name', Load(), lineno=180, col_offset=31)), Load(), lineno=180, col_offset=29), lineno=180, col_offset=22)], [], lineno=180, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=181, col_offset=8), Index(Name('name', Load(), lineno=181, col_offset=10)), Store(), lineno=181, col_offset=8), Name('m', Store(), lineno=181, col_offset=18)], Call(Attribute(Name('self', Load(), lineno=181, col_offset=22), 'new_module', Load(), lineno=181, col_offset=22), [Name('name', Load(), lineno=181, col_offset=38)], [], None, None, lineno=181, col_offset=22), lineno=181, col_offset=8), Return(Name('m', Load(), lineno=182, col_offset=15), lineno=182, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('modules_dict', arguments([Name('self', Param(), lineno=185, col_offset=21)], None, None, []), [Return(Attribute(Name('sys', Load(), lineno=185, col_offset=35), 'modules', Load(), lineno=185, col_offset=35), lineno=185, col_offset=28)], [], lineno=185, col_offset=4), FunctionDef('default_path', arguments([Name('self', Param(), lineno=186, col_offset=21)], None, None, []), [Return(Attribute(Name('sys', Load(), lineno=186, col_offset=35), 'path', Load(), lineno=186, col_offset=35), lineno=186, col_offset=28)], [], lineno=186, col_offset=4), FunctionDef('path_split', arguments([Name('self', Param(), lineno=188, col_offset=19), Name('x', Param(), lineno=188, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=188, col_offset=36), 'path', Load(), lineno=188, col_offset=36), 'split', Load(), lineno=188, col_offset=36), [Name('x', Load(), lineno=188, col_offset=50)], [], None, None, lineno=188, col_offset=36), lineno=188, col_offset=29)], [], lineno=188, col_offset=4), FunctionDef('path_join', arguments([Name('self', Param(), lineno=189, col_offset=18), Name('x', Param(), lineno=189, col_offset=24), Name('y', Param(), lineno=189, col_offset=27)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=189, col_offset=38), 'path', Load(), lineno=189, col_offset=38), 'join', Load(), lineno=189, col_offset=38), [Name('x', Load(), lineno=189, col_offset=51), Name('y', Load(), lineno=189, col_offset=54)], [], None, None, lineno=189, col_offset=38), lineno=189, col_offset=31)], [], lineno=189, col_offset=4), FunctionDef('path_isabs', arguments([Name('self', Param(), lineno=190, col_offset=19), Name('x', Param(), lineno=190, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=190, col_offset=36), 'path', Load(), lineno=190, col_offset=36), 'isabs', Load(), lineno=190, col_offset=36), [Name('x', Load(), lineno=190, col_offset=50)], [], None, None, lineno=190, col_offset=36), lineno=190, col_offset=29)], [], lineno=190, col_offset=4), FunctionDef('path_exists', arguments([Name('self', Param(), lineno=193, col_offset=20), Name('x', Param(), lineno=193, col_offset=26)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=193, col_offset=37), 'path', Load(), lineno=193, col_offset=37), 'exists', Load(), lineno=193, col_offset=37), [Name('x', Load(), lineno=193, col_offset=52)], [], None, None, lineno=193, col_offset=37), lineno=193, col_offset=30)], [], lineno=193, col_offset=4), FunctionDef('path_isdir', arguments([Name('self', Param(), lineno=194, col_offset=19), Name('x', Param(), lineno=194, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=194, col_offset=36), 'path', Load(), lineno=194, col_offset=36), 'isdir', Load(), lineno=194, col_offset=36), [Name('x', Load(), lineno=194, col_offset=50)], [], None, None, lineno=194, col_offset=36), lineno=194, col_offset=29)], [], lineno=194, col_offset=4), FunctionDef('path_isfile', arguments([Name('self', Param(), lineno=195, col_offset=20), Name('x', Param(), lineno=195, col_offset=26)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=195, col_offset=37), 'path', Load(), lineno=195, col_offset=37), 'isfile', Load(), lineno=195, col_offset=37), [Name('x', Load(), lineno=195, col_offset=52)], [], None, None, lineno=195, col_offset=37), lineno=195, col_offset=30)], [], lineno=195, col_offset=4), FunctionDef('path_islink', arguments([Name('self', Param(), lineno=196, col_offset=20), Name('x', Param(), lineno=196, col_offset=26)], None, None, []), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=196, col_offset=37), 'path', Load(), lineno=196, col_offset=37), 'islink', Load(), lineno=196, col_offset=37), [Name('x', Load(), lineno=196, col_offset=52)], [], None, None, lineno=196, col_offset=37), lineno=196, col_offset=30)], [], lineno=196, col_offset=4), FunctionDef('openfile', arguments([Name('self', Param(), lineno=199, col_offset=17)], 'x', None, []), [Return(Call(Name('open', Load(), lineno=199, col_offset=35), [], [], Name('x', Load(), lineno=199, col_offset=41), None, lineno=199, col_offset=35), lineno=199, col_offset=28)], [], lineno=199, col_offset=4), Assign([Name('openfile_error', Store(), lineno=200, col_offset=4)], Name('IOError', Load(), lineno=200, col_offset=21), lineno=200, col_offset=4), FunctionDef('listdir', arguments([Name('self', Param(), lineno=201, col_offset=16), Name('x', Param(), lineno=201, col_offset=22)], None, None, []), [Return(Call(Attribute(Name('os', Load(), lineno=201, col_offset=33), 'listdir', Load(), lineno=201, col_offset=33), [Name('x', Load(), lineno=201, col_offset=44)], [], None, None, lineno=201, col_offset=33), lineno=201, col_offset=26)], [], lineno=201, col_offset=4), Assign([Name('listdir_error', Store(), lineno=202, col_offset=4)], Attribute(Name('os', Load(), lineno=202, col_offset=20), 'error', Load(), lineno=202, col_offset=20), lineno=202, col_offset=4)], [], lineno=150, col_offset=0), ClassDef('ModuleLoader', [Name('BasicModuleLoader', Load(), lineno=206, col_offset=19)], [Expr(Str("Default module loader; uses file system hooks.\n\n    By defining suitable hooks, you might be able to load modules from\n    other sources than the file system, e.g. from compressed or\n    encrypted files, tar files or (if you're brave!) URLs.\n\n    ", lineno=214, col_offset=-1), lineno=214, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=216, col_offset=17), Name('hooks', Param(), lineno=216, col_offset=23), Name('verbose', Param(), lineno=216, col_offset=37)], None, None, [Name('None', Load(), lineno=216, col_offset=31), Name('VERBOSE', Load(), lineno=216, col_offset=47)]), [Expr(Call(Attribute(Name('BasicModuleLoader', Load(), lineno=217, col_offset=8), '__init__', Load(), lineno=217, col_offset=8), [Name('self', Load(), lineno=217, col_offset=35), Name('verbose', Load(), lineno=217, col_offset=41)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=218, col_offset=8), 'hooks', Store(), lineno=218, col_offset=8)], BoolOp(Or(), [Name('hooks', Load(), lineno=218, col_offset=21), Call(Name('Hooks', Load(), lineno=218, col_offset=30), [Name('verbose', Load(), lineno=218, col_offset=36)], [], None, None, lineno=218, col_offset=30)], lineno=218, col_offset=21), lineno=218, col_offset=8)], [], lineno=216, col_offset=4), FunctionDef('default_path', arguments([Name('self', Param(), lineno=220, col_offset=21)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=221, col_offset=15), 'hooks', Load(), lineno=221, col_offset=15), 'default_path', Load(), lineno=221, col_offset=15), [], [], None, None, lineno=221, col_offset=15), lineno=221, col_offset=8)], [], lineno=220, col_offset=4), FunctionDef('modules_dict', arguments([Name('self', Param(), lineno=223, col_offset=21)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=224, col_offset=15), 'hooks', Load(), lineno=224, col_offset=15), 'modules_dict', Load(), lineno=224, col_offset=15), [], [], None, None, lineno=224, col_offset=15), lineno=224, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('get_hooks', arguments([Name('self', Param(), lineno=226, col_offset=18)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=227, col_offset=15), 'hooks', Load(), lineno=227, col_offset=15), lineno=227, col_offset=8)], [], lineno=226, col_offset=4), FunctionDef('set_hooks', arguments([Name('self', Param(), lineno=229, col_offset=18), Name('hooks', Param(), lineno=229, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=230, col_offset=8), 'hooks', Store(), lineno=230, col_offset=8)], Name('hooks', Load(), lineno=230, col_offset=21), lineno=230, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('find_builtin_module', arguments([Name('self', Param(), lineno=232, col_offset=28), Name('name', Param(), lineno=232, col_offset=34)], None, None, []), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=234, col_offset=11), 'hooks', Load(), lineno=234, col_offset=11), 'is_builtin', Load(), lineno=234, col_offset=11), [Name('name', Load(), lineno=234, col_offset=33)], [], None, None, lineno=234, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=235, col_offset=19), Str('', lineno=235, col_offset=25), Tuple([Str('', lineno=235, col_offset=30), Str('', lineno=235, col_offset=34), Name('BUILTIN_MODULE', Load(), lineno=235, col_offset=38)], Load(), lineno=235, col_offset=30)], Load(), lineno=235, col_offset=19), lineno=235, col_offset=12)], [], lineno=234, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=236, col_offset=11), 'hooks', Load(), lineno=236, col_offset=11), 'is_frozen', Load(), lineno=236, col_offset=11), [Name('name', Load(), lineno=236, col_offset=32)], [], None, None, lineno=236, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=237, col_offset=19), Str('', lineno=237, col_offset=25), Tuple([Str('', lineno=237, col_offset=30), Str('', lineno=237, col_offset=34), Name('FROZEN_MODULE', Load(), lineno=237, col_offset=38)], Load(), lineno=237, col_offset=30)], Load(), lineno=237, col_offset=19), lineno=237, col_offset=12)], [], lineno=236, col_offset=8), Return(Name('None', Load(), lineno=238, col_offset=15), lineno=238, col_offset=8)], [], lineno=232, col_offset=4), FunctionDef('find_module_in_dir', arguments([Name('self', Param(), lineno=240, col_offset=27), Name('name', Param(), lineno=240, col_offset=33), Name('dir', Param(), lineno=240, col_offset=39), Name('allow_packages', Param(), lineno=240, col_offset=44)], None, None, [Num(1, lineno=240, col_offset=59)]), [If(Compare(Name('dir', Load(), lineno=241, col_offset=11), [Is()], [Name('None', Load(), lineno=241, col_offset=18)], lineno=241, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=242, col_offset=19), 'find_builtin_module', Load(), lineno=242, col_offset=19), [Name('name', Load(), lineno=242, col_offset=44)], [], None, None, lineno=242, col_offset=19), lineno=242, col_offset=12)], [], lineno=241, col_offset=8), If(Name('allow_packages', Load(), lineno=243, col_offset=11), [Assign([Name('fullname', Store(), lineno=244, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=244, col_offset=23), 'hooks', Load(), lineno=244, col_offset=23), 'path_join', Load(), lineno=244, col_offset=23), [Name('dir', Load(), lineno=244, col_offset=44), Name('name', Load(), lineno=244, col_offset=49)], [], None, None, lineno=244, col_offset=23), lineno=244, col_offset=12), If(Call(Attribute(Attribute(Name('self', Load(), lineno=245, col_offset=15), 'hooks', Load(), lineno=245, col_offset=15), 'path_isdir', Load(), lineno=245, col_offset=15), [Name('fullname', Load(), lineno=245, col_offset=37)], [], None, None, lineno=245, col_offset=15), [Assign([Name('stuff', Store(), lineno=246, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=246, col_offset=24), 'find_module_in_dir', Load(), lineno=246, col_offset=24), [Str('__init__', lineno=246, col_offset=48), Name('fullname', Load(), lineno=246, col_offset=60), Num(0, lineno=246, col_offset=70)], [], None, None, lineno=246, col_offset=24), lineno=246, col_offset=16), If(Name('stuff', Load(), lineno=247, col_offset=19), [Assign([Name('file', Store(), lineno=248, col_offset=20)], Subscript(Name('stuff', Load(), lineno=248, col_offset=27), Index(Num(0, lineno=248, col_offset=33)), Load(), lineno=248, col_offset=27), lineno=248, col_offset=20), If(Name('file', Load(), lineno=249, col_offset=23), [Expr(Call(Attribute(Name('file', Load(), lineno=249, col_offset=29), 'close', Load(), lineno=249, col_offset=29), [], [], None, None, lineno=249, col_offset=29), lineno=249, col_offset=29)], [], lineno=249, col_offset=20), Return(Tuple([Name('None', Load(), lineno=250, col_offset=27), Name('fullname', Load(), lineno=250, col_offset=33), Tuple([Str('', lineno=250, col_offset=44), Str('', lineno=250, col_offset=48), Name('PKG_DIRECTORY', Load(), lineno=250, col_offset=52)], Load(), lineno=250, col_offset=44)], Load(), lineno=250, col_offset=27), lineno=250, col_offset=20)], [], lineno=247, col_offset=16)], [], lineno=245, col_offset=12)], [], lineno=243, col_offset=8), For(Name('info', Store(), lineno=251, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=251, col_offset=20), 'hooks', Load(), lineno=251, col_offset=20), 'get_suffixes', Load(), lineno=251, col_offset=20), [], [], None, None, lineno=251, col_offset=20), [Assign([Tuple([Name('suff', Store(), lineno=252, col_offset=12), Name('mode', Store(), lineno=252, col_offset=18), Name('type', Store(), lineno=252, col_offset=24)], Store(), lineno=252, col_offset=12)], Name('info', Load(), lineno=252, col_offset=31), lineno=252, col_offset=12), Assign([Name('fullname', Store(), lineno=253, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=253, col_offset=23), 'hooks', Load(), lineno=253, col_offset=23), 'path_join', Load(), lineno=253, col_offset=23), [Name('dir', Load(), lineno=253, col_offset=44), BinOp(Name('name', Load(), lineno=253, col_offset=49), Add(), Name('suff', Load(), lineno=253, col_offset=54), lineno=253, col_offset=49)], [], None, None, lineno=253, col_offset=23), lineno=253, col_offset=12), TryExcept([Assign([Name('fp', Store(), lineno=255, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=255, col_offset=21), 'hooks', Load(), lineno=255, col_offset=21), 'openfile', Load(), lineno=255, col_offset=21), [Name('fullname', Load(), lineno=255, col_offset=41), Name('mode', Load(), lineno=255, col_offset=51)], [], None, None, lineno=255, col_offset=21), lineno=255, col_offset=16), Return(Tuple([Name('fp', Load(), lineno=256, col_offset=23), Name('fullname', Load(), lineno=256, col_offset=27), Name('info', Load(), lineno=256, col_offset=37)], Load(), lineno=256, col_offset=23), lineno=256, col_offset=16)], [ExceptHandler(Attribute(Attribute(Name('self', Load(), lineno=257, col_offset=19), 'hooks', Load(), lineno=257, col_offset=19), 'openfile_error', Load(), lineno=257, col_offset=19), None, [Pass( lineno=258, col_offset=16)], lineno=257, col_offset=12)], [], lineno=254, col_offset=12)], [], lineno=251, col_offset=8), Return(Name('None', Load(), lineno=259, col_offset=15), lineno=259, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=261, col_offset=20), Name('name', Param(), lineno=261, col_offset=26), Name('stuff', Param(), lineno=261, col_offset=32)], None, None, []), [Assign([Tuple([Name('file', Store(), lineno=262, col_offset=8), Name('filename', Store(), lineno=262, col_offset=14), Name('info', Store(), lineno=262, col_offset=24)], Store(), lineno=262, col_offset=8)], Name('stuff', Load(), lineno=262, col_offset=31), lineno=262, col_offset=8), Assign([Tuple([Name('suff', Store(), lineno=263, col_offset=9), Name('mode', Store(), lineno=263, col_offset=15), Name('type', Store(), lineno=263, col_offset=21)], Store(), lineno=263, col_offset=9)], Name('info', Load(), lineno=263, col_offset=29), lineno=263, col_offset=8), TryFinally([If(Compare(Name('type', Load(), lineno=265, col_offset=15), [Eq()], [Name('BUILTIN_MODULE', Load(), lineno=265, col_offset=23)], lineno=265, col_offset=15), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=266, col_offset=23), 'hooks', Load(), lineno=266, col_offset=23), 'init_builtin', Load(), lineno=266, col_offset=23), [Name('name', Load(), lineno=266, col_offset=47)], [], None, None, lineno=266, col_offset=23), lineno=266, col_offset=16)], [], lineno=265, col_offset=12), If(Compare(Name('type', Load(), lineno=267, col_offset=15), [Eq()], [Name('FROZEN_MODULE', Load(), lineno=267, col_offset=23)], lineno=267, col_offset=15), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=268, col_offset=23), 'hooks', Load(), lineno=268, col_offset=23), 'init_frozen', Load(), lineno=268, col_offset=23), [Name('name', Load(), lineno=268, col_offset=46)], [], None, None, lineno=268, col_offset=23), lineno=268, col_offset=16)], [], lineno=267, col_offset=12), If(Compare(Name('type', Load(), lineno=269, col_offset=15), [Eq()], [Name('C_EXTENSION', Load(), lineno=269, col_offset=23)], lineno=269, col_offset=15), [Assign([Name('m', Store(), lineno=270, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=270, col_offset=20), 'hooks', Load(), lineno=270, col_offset=20), 'load_dynamic', Load(), lineno=270, col_offset=20), [Name('name', Load(), lineno=270, col_offset=44), Name('filename', Load(), lineno=270, col_offset=50), Name('file', Load(), lineno=270, col_offset=60)], [], None, None, lineno=270, col_offset=20), lineno=270, col_offset=16)], [If(Compare(Name('type', Load(), lineno=271, col_offset=17), [Eq()], [Name('PY_SOURCE', Load(), lineno=271, col_offset=25)], lineno=271, col_offset=17), [Assign([Name('m', Store(), lineno=272, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=272, col_offset=20), 'hooks', Load(), lineno=272, col_offset=20), 'load_source', Load(), lineno=272, col_offset=20), [Name('name', Load(), lineno=272, col_offset=43), Name('filename', Load(), lineno=272, col_offset=49), Name('file', Load(), lineno=272, col_offset=59)], [], None, None, lineno=272, col_offset=20), lineno=272, col_offset=16)], [If(Compare(Name('type', Load(), lineno=273, col_offset=17), [Eq()], [Name('PY_COMPILED', Load(), lineno=273, col_offset=25)], lineno=273, col_offset=17), [Assign([Name('m', Store(), lineno=274, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=274, col_offset=20), 'hooks', Load(), lineno=274, col_offset=20), 'load_compiled', Load(), lineno=274, col_offset=20), [Name('name', Load(), lineno=274, col_offset=45), Name('filename', Load(), lineno=274, col_offset=51), Name('file', Load(), lineno=274, col_offset=61)], [], None, None, lineno=274, col_offset=20), lineno=274, col_offset=16)], [If(Compare(Name('type', Load(), lineno=275, col_offset=17), [Eq()], [Name('PKG_DIRECTORY', Load(), lineno=275, col_offset=25)], lineno=275, col_offset=17), [Assign([Name('m', Store(), lineno=276, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=276, col_offset=20), 'hooks', Load(), lineno=276, col_offset=20), 'load_package', Load(), lineno=276, col_offset=20), [Name('name', Load(), lineno=276, col_offset=44), Name('filename', Load(), lineno=276, col_offset=50), Name('file', Load(), lineno=276, col_offset=60)], [], None, None, lineno=276, col_offset=20), lineno=276, col_offset=16)], [Raise(Name('ImportError', Load(), lineno=278, col_offset=22), BinOp(Str('Unrecognized module type (%r) for %s', lineno=278, col_offset=35), Mod(), Tuple([Name('type', Load(), lineno=279, col_offset=23), Name('name', Load(), lineno=279, col_offset=29)], Load(), lineno=279, col_offset=23), lineno=278, col_offset=35), None, lineno=278, col_offset=16)], lineno=275, col_offset=17)], lineno=273, col_offset=17)], lineno=271, col_offset=17)], lineno=269, col_offset=12)], [If(Name('file', Load(), lineno=281, col_offset=15), [Expr(Call(Attribute(Name('file', Load(), lineno=281, col_offset=21), 'close', Load(), lineno=281, col_offset=21), [], [], None, None, lineno=281, col_offset=21), lineno=281, col_offset=21)], [], lineno=281, col_offset=12)], lineno=264, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=282, col_offset=8), '__file__', Store(), lineno=282, col_offset=8)], Name('filename', Load(), lineno=282, col_offset=21), lineno=282, col_offset=8), Return(Name('m', Load(), lineno=283, col_offset=15), lineno=283, col_offset=8)], [], lineno=261, col_offset=4)], [], lineno=206, col_offset=0), ClassDef('FancyModuleLoader', [Name('ModuleLoader', Load(), lineno=286, col_offset=24)], [Expr(Str('Fancy module loader -- parses and execs the code itself.', lineno=288, col_offset=4), lineno=288, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=290, col_offset=20), Name('name', Param(), lineno=290, col_offset=26), Name('stuff', Param(), lineno=290, col_offset=32)], None, None, []), [Assign([Tuple([Name('file', Store(), lineno=291, col_offset=8), Name('filename', Store(), lineno=291, col_offset=14), Tuple([Name('suff', Store(), lineno=291, col_offset=25), Name('mode', Store(), lineno=291, col_offset=31), Name('type', Store(), lineno=291, col_offset=37)], Store(), lineno=291, col_offset=25)], Store(), lineno=291, col_offset=8)], Name('stuff', Load(), lineno=291, col_offset=45), lineno=291, col_offset=8), Assign([Name('realfilename', Store(), lineno=292, col_offset=8)], Name('filename', Load(), lineno=292, col_offset=23), lineno=292, col_offset=8), Assign([Name('path', Store(), lineno=293, col_offset=8)], Name('None', Load(), lineno=293, col_offset=15), lineno=293, col_offset=8), If(Compare(Name('type', Load(), lineno=295, col_offset=11), [Eq()], [Name('PKG_DIRECTORY', Load(), lineno=295, col_offset=19)], lineno=295, col_offset=11), [Assign([Name('initstuff', Store(), lineno=296, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=296, col_offset=24), 'find_module_in_dir', Load(), lineno=296, col_offset=24), [Str('__init__', lineno=296, col_offset=48), Name('filename', Load(), lineno=296, col_offset=60), Num(0, lineno=296, col_offset=70)], [], None, None, lineno=296, col_offset=24), lineno=296, col_offset=12), If(UnaryOp(Not(), Name('initstuff', Load(), lineno=297, col_offset=19), lineno=297, col_offset=15), [Raise(Name('ImportError', Load(), lineno=298, col_offset=22), BinOp(Str('No __init__ module in package %s', lineno=298, col_offset=35), Mod(), Name('name', Load(), lineno=298, col_offset=72), lineno=298, col_offset=35), None, lineno=298, col_offset=16)], [], lineno=297, col_offset=12), Assign([Tuple([Name('initfile', Store(), lineno=299, col_offset=12), Name('initfilename', Store(), lineno=299, col_offset=22), Name('initinfo', Store(), lineno=299, col_offset=36)], Store(), lineno=299, col_offset=12)], Name('initstuff', Load(), lineno=299, col_offset=47), lineno=299, col_offset=12), Assign([Tuple([Name('initsuff', Store(), lineno=300, col_offset=12), Name('initmode', Store(), lineno=300, col_offset=22), Name('inittype', Store(), lineno=300, col_offset=32)], Store(), lineno=300, col_offset=12)], Name('initinfo', Load(), lineno=300, col_offset=43), lineno=300, col_offset=12), If(Compare(Name('inittype', Load(), lineno=301, col_offset=15), [NotIn()], [Tuple([Name('PY_COMPILED', Load(), lineno=301, col_offset=32), Name('PY_SOURCE', Load(), lineno=301, col_offset=45)], Load(), lineno=301, col_offset=32)], lineno=301, col_offset=15), [If(Name('initfile', Load(), lineno=302, col_offset=19), [Expr(Call(Attribute(Name('initfile', Load(), lineno=302, col_offset=29), 'close', Load(), lineno=302, col_offset=29), [], [], None, None, lineno=302, col_offset=29), lineno=302, col_offset=29)], [], lineno=302, col_offset=16), Raise(Name('ImportError', Load(), lineno=303, col_offset=22), BinOp(Str('Bad type (%r) for __init__ module in package %s', lineno=304, col_offset=20), Mod(), Tuple([Name('inittype', Load(), lineno=305, col_offset=20), Name('name', Load(), lineno=305, col_offset=30)], Load(), lineno=305, col_offset=20), lineno=304, col_offset=20), None, lineno=303, col_offset=16)], [], lineno=301, col_offset=12), Assign([Name('path', Store(), lineno=306, col_offset=12)], List([Name('filename', Load(), lineno=306, col_offset=20)], Load(), lineno=306, col_offset=19), lineno=306, col_offset=12), Assign([Name('file', Store(), lineno=307, col_offset=12)], Name('initfile', Load(), lineno=307, col_offset=19), lineno=307, col_offset=12), Assign([Name('realfilename', Store(), lineno=308, col_offset=12)], Name('initfilename', Load(), lineno=308, col_offset=27), lineno=308, col_offset=12), Assign([Name('type', Store(), lineno=309, col_offset=12)], Name('inittype', Load(), lineno=309, col_offset=19), lineno=309, col_offset=12)], [], lineno=295, col_offset=8), If(Compare(Name('type', Load(), lineno=311, col_offset=11), [Eq()], [Name('FROZEN_MODULE', Load(), lineno=311, col_offset=19)], lineno=311, col_offset=11), [Assign([Name('code', Store(), lineno=312, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=312, col_offset=19), 'hooks', Load(), lineno=312, col_offset=19), 'get_frozen_object', Load(), lineno=312, col_offset=19), [Name('name', Load(), lineno=312, col_offset=48)], [], None, None, lineno=312, col_offset=19), lineno=312, col_offset=12)], [If(Compare(Name('type', Load(), lineno=313, col_offset=13), [Eq()], [Name('PY_COMPILED', Load(), lineno=313, col_offset=21)], lineno=313, col_offset=13), [Import([alias('marshal', None)], lineno=314, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=315, col_offset=12), 'seek', Load(), lineno=315, col_offset=12), [Num(8, lineno=315, col_offset=22)], [], None, None, lineno=315, col_offset=12), lineno=315, col_offset=12), Assign([Name('code', Store(), lineno=316, col_offset=12)], Call(Attribute(Name('marshal', Load(), lineno=316, col_offset=19), 'load', Load(), lineno=316, col_offset=19), [Name('file', Load(), lineno=316, col_offset=32)], [], None, None, lineno=316, col_offset=19), lineno=316, col_offset=12)], [If(Compare(Name('type', Load(), lineno=317, col_offset=13), [Eq()], [Name('PY_SOURCE', Load(), lineno=317, col_offset=21)], lineno=317, col_offset=13), [Assign([Name('data', Store(), lineno=318, col_offset=12)], Call(Attribute(Name('file', Load(), lineno=318, col_offset=19), 'read', Load(), lineno=318, col_offset=19), [], [], None, None, lineno=318, col_offset=19), lineno=318, col_offset=12), Assign([Name('code', Store(), lineno=319, col_offset=12)], Call(Name('compile', Load(), lineno=319, col_offset=19), [Name('data', Load(), lineno=319, col_offset=27), Name('realfilename', Load(), lineno=319, col_offset=33), Str('exec', lineno=319, col_offset=47)], [], None, None, lineno=319, col_offset=19), lineno=319, col_offset=12)], [Return(Call(Attribute(Name('ModuleLoader', Load(), lineno=321, col_offset=19), 'load_module', Load(), lineno=321, col_offset=19), [Name('self', Load(), lineno=321, col_offset=44), Name('name', Load(), lineno=321, col_offset=50), Name('stuff', Load(), lineno=321, col_offset=56)], [], None, None, lineno=321, col_offset=19), lineno=321, col_offset=12)], lineno=317, col_offset=13)], lineno=313, col_offset=13)], lineno=311, col_offset=8), Assign([Name('m', Store(), lineno=323, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=323, col_offset=12), 'hooks', Load(), lineno=323, col_offset=12), 'add_module', Load(), lineno=323, col_offset=12), [Name('name', Load(), lineno=323, col_offset=34)], [], None, None, lineno=323, col_offset=12), lineno=323, col_offset=8), If(Name('path', Load(), lineno=324, col_offset=11), [Assign([Attribute(Name('m', Load(), lineno=325, col_offset=12), '__path__', Store(), lineno=325, col_offset=12)], Name('path', Load(), lineno=325, col_offset=25), lineno=325, col_offset=12)], [], lineno=324, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=326, col_offset=8), '__file__', Store(), lineno=326, col_offset=8)], Name('filename', Load(), lineno=326, col_offset=21), lineno=326, col_offset=8), TryExcept([Exec(Name('code', Load(), lineno=328, col_offset=17), Attribute(Name('m', Load(), lineno=328, col_offset=25), '__dict__', Load(), lineno=328, col_offset=25), None, lineno=328, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('d', Store(), lineno=330, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=330, col_offset=16), 'hooks', Load(), lineno=330, col_offset=16), 'modules_dict', Load(), lineno=330, col_offset=16), [], [], None, None, lineno=330, col_offset=16), lineno=330, col_offset=12), If(Compare(Name('name', Load(), lineno=331, col_offset=15), [In()], [Name('d', Load(), lineno=331, col_offset=23)], lineno=331, col_offset=15), [Delete([Subscript(Name('d', Load(), lineno=332, col_offset=20), Index(Name('name', Load(), lineno=332, col_offset=22)), Del(), lineno=332, col_offset=20)], lineno=332, col_offset=16)], [], lineno=331, col_offset=12), Raise(None, None, None, lineno=333, col_offset=12)], lineno=329, col_offset=8)], [], lineno=327, col_offset=8), Return(Name('m', Load(), lineno=334, col_offset=15), lineno=334, col_offset=8)], [], lineno=290, col_offset=4)], [], lineno=286, col_offset=0), ClassDef('BasicModuleImporter', [Name('_Verbose', Load(), lineno=337, col_offset=26)], [Expr(Str('Basic module importer; uses module loader.\n\n    This provides basic import facilities but no package imports.\n\n    ', lineno=343, col_offset=-1), lineno=343, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=345, col_offset=17), Name('loader', Param(), lineno=345, col_offset=23), Name('verbose', Param(), lineno=345, col_offset=38)], None, None, [Name('None', Load(), lineno=345, col_offset=32), Name('VERBOSE', Load(), lineno=345, col_offset=48)]), [Expr(Call(Attribute(Name('_Verbose', Load(), lineno=346, col_offset=8), '__init__', Load(), lineno=346, col_offset=8), [Name('self', Load(), lineno=346, col_offset=26), Name('verbose', Load(), lineno=346, col_offset=32)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=347, col_offset=8), 'loader', Store(), lineno=347, col_offset=8)], BoolOp(Or(), [Name('loader', Load(), lineno=347, col_offset=22), Call(Name('ModuleLoader', Load(), lineno=347, col_offset=32), [Name('None', Load(), lineno=347, col_offset=45), Name('verbose', Load(), lineno=347, col_offset=51)], [], None, None, lineno=347, col_offset=32)], lineno=347, col_offset=22), lineno=347, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=348, col_offset=8), 'modules', Store(), lineno=348, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=348, col_offset=23), 'loader', Load(), lineno=348, col_offset=23), 'modules_dict', Load(), lineno=348, col_offset=23), [], [], None, None, lineno=348, col_offset=23), lineno=348, col_offset=8)], [], lineno=345, col_offset=4), FunctionDef('get_loader', arguments([Name('self', Param(), lineno=350, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=351, col_offset=15), 'loader', Load(), lineno=351, col_offset=15), lineno=351, col_offset=8)], [], lineno=350, col_offset=4), FunctionDef('set_loader', arguments([Name('self', Param(), lineno=353, col_offset=19), Name('loader', Param(), lineno=353, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=354, col_offset=8), 'loader', Store(), lineno=354, col_offset=8)], Name('loader', Load(), lineno=354, col_offset=22), lineno=354, col_offset=8)], [], lineno=353, col_offset=4), FunctionDef('get_hooks', arguments([Name('self', Param(), lineno=356, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=357, col_offset=15), 'loader', Load(), lineno=357, col_offset=15), 'get_hooks', Load(), lineno=357, col_offset=15), [], [], None, None, lineno=357, col_offset=15), lineno=357, col_offset=8)], [], lineno=356, col_offset=4), FunctionDef('set_hooks', arguments([Name('self', Param(), lineno=359, col_offset=18), Name('hooks', Param(), lineno=359, col_offset=24)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=360, col_offset=15), 'loader', Load(), lineno=360, col_offset=15), 'set_hooks', Load(), lineno=360, col_offset=15), [Name('hooks', Load(), lineno=360, col_offset=37)], [], None, None, lineno=360, col_offset=15), lineno=360, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('import_module', arguments([Name('self', Param(), lineno=362, col_offset=22), Name('name', Param(), lineno=362, col_offset=28), Name('globals', Param(), lineno=362, col_offset=34), Name('locals', Param(), lineno=362, col_offset=46), Name('fromlist', Param(), lineno=362, col_offset=57)], None, None, [Dict([], [], lineno=362, col_offset=42), Dict([], [], lineno=362, col_offset=53), List([], Load(), lineno=362, col_offset=66)]), [Assign([Name('name', Store(), lineno=363, col_offset=8)], Call(Name('str', Load(), lineno=363, col_offset=15), [Name('name', Load(), lineno=363, col_offset=19)], [], None, None, lineno=363, col_offset=15), lineno=363, col_offset=8), If(Compare(Name('name', Load(), lineno=364, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=364, col_offset=19), 'modules', Load(), lineno=364, col_offset=19)], lineno=364, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=365, col_offset=19), 'modules', Load(), lineno=365, col_offset=19), Index(Name('name', Load(), lineno=365, col_offset=32)), Load(), lineno=365, col_offset=19), lineno=365, col_offset=12)], [], lineno=364, col_offset=8), Assign([Name('stuff', Store(), lineno=366, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=366, col_offset=16), 'loader', Load(), lineno=366, col_offset=16), 'find_module', Load(), lineno=366, col_offset=16), [Name('name', Load(), lineno=366, col_offset=40)], [], None, None, lineno=366, col_offset=16), lineno=366, col_offset=8), If(UnaryOp(Not(), Name('stuff', Load(), lineno=367, col_offset=15), lineno=367, col_offset=11), [Raise(Name('ImportError', Load(), lineno=368, col_offset=18), BinOp(Str('No module named %s', lineno=368, col_offset=31), Mod(), Name('name', Load(), lineno=368, col_offset=54), lineno=368, col_offset=31), None, lineno=368, col_offset=12)], [], lineno=367, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=15), 'loader', Load(), lineno=369, col_offset=15), 'load_module', Load(), lineno=369, col_offset=15), [Name('name', Load(), lineno=369, col_offset=39), Name('stuff', Load(), lineno=369, col_offset=45)], [], None, None, lineno=369, col_offset=15), lineno=369, col_offset=8)], [], lineno=362, col_offset=4), FunctionDef('reload', arguments([Name('self', Param(), lineno=371, col_offset=15), Name('module', Param(), lineno=371, col_offset=21), Name('path', Param(), lineno=371, col_offset=29)], None, None, [Name('None', Load(), lineno=371, col_offset=36)]), [Assign([Name('name', Store(), lineno=372, col_offset=8)], Call(Name('str', Load(), lineno=372, col_offset=15), [Attribute(Name('module', Load(), lineno=372, col_offset=19), '__name__', Load(), lineno=372, col_offset=19)], [], None, None, lineno=372, col_offset=15), lineno=372, col_offset=8), Assign([Name('stuff', Store(), lineno=373, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=373, col_offset=16), 'loader', Load(), lineno=373, col_offset=16), 'find_module', Load(), lineno=373, col_offset=16), [Name('name', Load(), lineno=373, col_offset=40), Name('path', Load(), lineno=373, col_offset=46)], [], None, None, lineno=373, col_offset=16), lineno=373, col_offset=8), If(UnaryOp(Not(), Name('stuff', Load(), lineno=374, col_offset=15), lineno=374, col_offset=11), [Raise(Name('ImportError', Load(), lineno=375, col_offset=18), BinOp(Str('Module %s not found for reload', lineno=375, col_offset=31), Mod(), Name('name', Load(), lineno=375, col_offset=66), lineno=375, col_offset=31), None, lineno=375, col_offset=12)], [], lineno=374, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=376, col_offset=15), 'loader', Load(), lineno=376, col_offset=15), 'load_module', Load(), lineno=376, col_offset=15), [Name('name', Load(), lineno=376, col_offset=39), Name('stuff', Load(), lineno=376, col_offset=45)], [], None, None, lineno=376, col_offset=15), lineno=376, col_offset=8)], [], lineno=371, col_offset=4), FunctionDef('unload', arguments([Name('self', Param(), lineno=378, col_offset=15), Name('module', Param(), lineno=378, col_offset=21)], None, None, []), [Delete([Subscript(Attribute(Name('self', Load(), lineno=379, col_offset=12), 'modules', Load(), lineno=379, col_offset=12), Index(Call(Name('str', Load(), lineno=379, col_offset=25), [Attribute(Name('module', Load(), lineno=379, col_offset=29), '__name__', Load(), lineno=379, col_offset=29)], [], None, None, lineno=379, col_offset=25)), Del(), lineno=379, col_offset=12)], lineno=379, col_offset=8)], [], lineno=378, col_offset=4), FunctionDef('install', arguments([Name('self', Param(), lineno=382, col_offset=16)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=383, col_offset=8), 'save_import_module', Store(), lineno=383, col_offset=8)], Attribute(Name('__builtin__', Load(), lineno=383, col_offset=34), '__import__', Load(), lineno=383, col_offset=34), lineno=383, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=384, col_offset=8), 'save_reload', Store(), lineno=384, col_offset=8)], Attribute(Name('__builtin__', Load(), lineno=384, col_offset=27), 'reload', Load(), lineno=384, col_offset=27), lineno=384, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=385, col_offset=15), [Name('__builtin__', Load(), lineno=385, col_offset=23), Str('unload', lineno=385, col_offset=36)], [], None, None, lineno=385, col_offset=15), lineno=385, col_offset=11), [Assign([Attribute(Name('__builtin__', Load(), lineno=386, col_offset=12), 'unload', Store(), lineno=386, col_offset=12)], Name('None', Load(), lineno=386, col_offset=33), lineno=386, col_offset=12)], [], lineno=385, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=387, col_offset=8), 'save_unload', Store(), lineno=387, col_offset=8)], Attribute(Name('__builtin__', Load(), lineno=387, col_offset=27), 'unload', Load(), lineno=387, col_offset=27), lineno=387, col_offset=8), Assign([Attribute(Name('__builtin__', Load(), lineno=388, col_offset=8), '__import__', Store(), lineno=388, col_offset=8)], Attribute(Name('self', Load(), lineno=388, col_offset=33), 'import_module', Load(), lineno=388, col_offset=33), lineno=388, col_offset=8), Assign([Attribute(Name('__builtin__', Load(), lineno=389, col_offset=8), 'reload', Store(), lineno=389, col_offset=8)], Attribute(Name('self', Load(), lineno=389, col_offset=29), 'reload', Load(), lineno=389, col_offset=29), lineno=389, col_offset=8), Assign([Attribute(Name('__builtin__', Load(), lineno=390, col_offset=8), 'unload', Store(), lineno=390, col_offset=8)], Attribute(Name('self', Load(), lineno=390, col_offset=29), 'unload', Load(), lineno=390, col_offset=29), lineno=390, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('uninstall', arguments([Name('self', Param(), lineno=392, col_offset=18)], None, None, []), [Assign([Attribute(Name('__builtin__', Load(), lineno=393, col_offset=8), '__import__', Store(), lineno=393, col_offset=8)], Attribute(Name('self', Load(), lineno=393, col_offset=33), 'save_import_module', Load(), lineno=393, col_offset=33), lineno=393, col_offset=8), Assign([Attribute(Name('__builtin__', Load(), lineno=394, col_offset=8), 'reload', Store(), lineno=394, col_offset=8)], Attribute(Name('self', Load(), lineno=394, col_offset=29), 'save_reload', Load(), lineno=394, col_offset=29), lineno=394, col_offset=8), Assign([Attribute(Name('__builtin__', Load(), lineno=395, col_offset=8), 'unload', Store(), lineno=395, col_offset=8)], Attribute(Name('self', Load(), lineno=395, col_offset=29), 'save_unload', Load(), lineno=395, col_offset=29), lineno=395, col_offset=8), If(UnaryOp(Not(), Attribute(Name('__builtin__', Load(), lineno=396, col_offset=15), 'unload', Load(), lineno=396, col_offset=15), lineno=396, col_offset=11), [Delete([Attribute(Name('__builtin__', Load(), lineno=397, col_offset=16), 'unload', Del(), lineno=397, col_offset=16)], lineno=397, col_offset=12)], [], lineno=396, col_offset=8)], [], lineno=392, col_offset=4)], [], lineno=337, col_offset=0), ClassDef('ModuleImporter', [Name('BasicModuleImporter', Load(), lineno=400, col_offset=21)], [Expr(Str('A module importer that supports packages.', lineno=402, col_offset=4), lineno=402, col_offset=4), FunctionDef('import_module', arguments([Name('self', Param(), lineno=404, col_offset=22), Name('name', Param(), lineno=404, col_offset=28), Name('globals', Param(), lineno=404, col_offset=34), Name('locals', Param(), lineno=404, col_offset=48), Name('fromlist', Param(), lineno=404, col_offset=61), Name('level', Param(), lineno=405, col_offset=22)], None, None, [Name('None', Load(), lineno=404, col_offset=42), Name('None', Load(), lineno=404, col_offset=55), Name('None', Load(), lineno=404, col_offset=70), Num(-1, lineno=405, col_offset=29)]), [Assign([Name('parent', Store(), lineno=406, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=406, col_offset=17), 'determine_parent', Load(), lineno=406, col_offset=17), [Name('globals', Load(), lineno=406, col_offset=39), Name('level', Load(), lineno=406, col_offset=48)], [], None, None, lineno=406, col_offset=17), lineno=406, col_offset=8), Assign([Tuple([Name('q', Store(), lineno=407, col_offset=8), Name('tail', Store(), lineno=407, col_offset=11)], Store(), lineno=407, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=407, col_offset=18), 'find_head_package', Load(), lineno=407, col_offset=18), [Name('parent', Load(), lineno=407, col_offset=41), Call(Name('str', Load(), lineno=407, col_offset=49), [Name('name', Load(), lineno=407, col_offset=53)], [], None, None, lineno=407, col_offset=49)], [], None, None, lineno=407, col_offset=18), lineno=407, col_offset=8), Assign([Name('m', Store(), lineno=408, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=408, col_offset=12), 'load_tail', Load(), lineno=408, col_offset=12), [Name('q', Load(), lineno=408, col_offset=27), Name('tail', Load(), lineno=408, col_offset=30)], [], None, None, lineno=408, col_offset=12), lineno=408, col_offset=8), If(UnaryOp(Not(), Name('fromlist', Load(), lineno=409, col_offset=15), lineno=409, col_offset=11), [Return(Name('q', Load(), lineno=410, col_offset=19), lineno=410, col_offset=12)], [], lineno=409, col_offset=8), If(Call(Name('hasattr', Load(), lineno=411, col_offset=11), [Name('m', Load(), lineno=411, col_offset=19), Str('__path__', lineno=411, col_offset=22)], [], None, None, lineno=411, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=12), 'ensure_fromlist', Load(), lineno=412, col_offset=12), [Name('m', Load(), lineno=412, col_offset=33), Name('fromlist', Load(), lineno=412, col_offset=36)], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12)], [], lineno=411, col_offset=8), Return(Name('m', Load(), lineno=413, col_offset=15), lineno=413, col_offset=8)], [], lineno=404, col_offset=4), FunctionDef('determine_parent', arguments([Name('self', Param(), lineno=415, col_offset=25), Name('globals', Param(), lineno=415, col_offset=31), Name('level', Param(), lineno=415, col_offset=40)], None, None, [Num(-1, lineno=415, col_offset=47)]), [If(BoolOp(Or(), [UnaryOp(Not(), Name('globals', Load(), lineno=416, col_offset=15), lineno=416, col_offset=11), UnaryOp(Not(), Name('level', Load(), lineno=416, col_offset=30), lineno=416, col_offset=26)], lineno=416, col_offset=11), [Return(Name('None', Load(), lineno=417, col_offset=19), lineno=417, col_offset=12)], [], lineno=416, col_offset=8), Assign([Name('pkgname', Store(), lineno=418, col_offset=8)], Call(Attribute(Name('globals', Load(), lineno=418, col_offset=18), 'get', Load(), lineno=418, col_offset=18), [Str('__package__', lineno=418, col_offset=30)], [], None, None, lineno=418, col_offset=18), lineno=418, col_offset=8), If(Compare(Name('pkgname', Load(), lineno=419, col_offset=11), [IsNot()], [Name('None', Load(), lineno=419, col_offset=26)], lineno=419, col_offset=11), [If(BoolOp(And(), [UnaryOp(Not(), Name('pkgname', Load(), lineno=420, col_offset=19), lineno=420, col_offset=15), Compare(Name('level', Load(), lineno=420, col_offset=31), [Gt()], [Num(0, lineno=420, col_offset=39)], lineno=420, col_offset=31)], lineno=420, col_offset=15), [Raise(Name('ValueError', Load(), lineno=421, col_offset=22), Str('Attempted relative import in non-package', lineno=421, col_offset=34), None, lineno=421, col_offset=16)], [], lineno=420, col_offset=12)], [Assign([Name('modname', Store(), lineno=424, col_offset=12)], Call(Attribute(Name('globals', Load(), lineno=424, col_offset=22), 'get', Load(), lineno=424, col_offset=22), [Str('__name__', lineno=424, col_offset=34)], [], None, None, lineno=424, col_offset=22), lineno=424, col_offset=12), If(Compare(Name('modname', Load(), lineno=425, col_offset=15), [Is()], [Name('None', Load(), lineno=425, col_offset=26)], lineno=425, col_offset=15), [Return(Name('None', Load(), lineno=426, col_offset=23), lineno=426, col_offset=16)], [], lineno=425, col_offset=12), If(Compare(Str('__path__', lineno=427, col_offset=15), [In()], [Name('globals', Load(), lineno=427, col_offset=29)], lineno=427, col_offset=15), [Assign([Name('pkgname', Store(), lineno=429, col_offset=16)], Name('modname', Load(), lineno=429, col_offset=26), lineno=429, col_offset=16)], [If(Compare(Str('.', lineno=432, col_offset=19), [NotIn()], [Name('modname', Load(), lineno=432, col_offset=30)], lineno=432, col_offset=19), [If(Compare(Name('level', Load(), lineno=433, col_offset=23), [Gt()], [Num(0, lineno=433, col_offset=31)], lineno=433, col_offset=23), [Raise(Name('ValueError', Load(), lineno=434, col_offset=30), Str('Attempted relative import in non-package', lineno=434, col_offset=43), None, lineno=434, col_offset=24)], [], lineno=433, col_offset=20), Assign([Subscript(Name('globals', Load(), lineno=436, col_offset=20), Index(Str('__package__', lineno=436, col_offset=28)), Store(), lineno=436, col_offset=20)], Name('None', Load(), lineno=436, col_offset=45), lineno=436, col_offset=20), Return(Name('None', Load(), lineno=437, col_offset=27), lineno=437, col_offset=20)], [], lineno=432, col_offset=16), Assign([Name('pkgname', Store(), lineno=438, col_offset=16)], Subscript(Call(Attribute(Name('modname', Load(), lineno=438, col_offset=26), 'rpartition', Load(), lineno=438, col_offset=26), [Str('.', lineno=438, col_offset=45)], [], None, None, lineno=438, col_offset=26), Index(Num(0, lineno=438, col_offset=50)), Load(), lineno=438, col_offset=26), lineno=438, col_offset=16)], lineno=427, col_offset=12), Assign([Subscript(Name('globals', Load(), lineno=439, col_offset=12), Index(Str('__package__', lineno=439, col_offset=20)), Store(), lineno=439, col_offset=12)], Name('pkgname', Load(), lineno=439, col_offset=37), lineno=439, col_offset=12)], lineno=419, col_offset=8), If(Compare(Name('level', Load(), lineno=440, col_offset=11), [Gt()], [Num(0, lineno=440, col_offset=19)], lineno=440, col_offset=11), [Assign([Name('dot', Store(), lineno=441, col_offset=12)], Call(Name('len', Load(), lineno=441, col_offset=18), [Name('pkgname', Load(), lineno=441, col_offset=22)], [], None, None, lineno=441, col_offset=18), lineno=441, col_offset=12), For(Name('x', Store(), lineno=442, col_offset=16), Call(Name('range', Load(), lineno=442, col_offset=21), [Name('level', Load(), lineno=442, col_offset=27), Num(1, lineno=442, col_offset=34), Num(-1, lineno=442, col_offset=38)], [], None, None, lineno=442, col_offset=21), [TryExcept([Assign([Name('dot', Store(), lineno=444, col_offset=20)], Call(Attribute(Name('pkgname', Load(), lineno=444, col_offset=26), 'rindex', Load(), lineno=444, col_offset=26), [Str('.', lineno=444, col_offset=41), Num(0, lineno=444, col_offset=46), Name('dot', Load(), lineno=444, col_offset=49)], [], None, None, lineno=444, col_offset=26), lineno=444, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=445, col_offset=23), None, [Raise(Call(Name('ValueError', Load(), lineno=446, col_offset=26), [Str('attempted relative import beyond top-level package', lineno=446, col_offset=37)], [], None, None, lineno=446, col_offset=26), None, None, lineno=446, col_offset=20)], lineno=445, col_offset=16)], [], lineno=443, col_offset=16)], [], lineno=442, col_offset=12), Assign([Name('pkgname', Store(), lineno=448, col_offset=12)], Subscript(Name('pkgname', Load(), lineno=448, col_offset=22), Slice(None, Name('dot', Load(), lineno=448, col_offset=31), None), Load(), lineno=448, col_offset=22), lineno=448, col_offset=12)], [], lineno=440, col_offset=8), TryExcept([Return(Subscript(Attribute(Name('sys', Load(), lineno=450, col_offset=19), 'modules', Load(), lineno=450, col_offset=19), Index(Name('pkgname', Load(), lineno=450, col_offset=31)), Load(), lineno=450, col_offset=19), lineno=450, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=451, col_offset=15), None, [If(Compare(Name('level', Load(), lineno=452, col_offset=15), [Lt()], [Num(1, lineno=452, col_offset=23)], lineno=452, col_offset=15), [Expr(Call(Name('warn', Load(), lineno=453, col_offset=16), [BinOp(Str("Parent module '%s' not found while handling absolute import", lineno=453, col_offset=21), Mod(), Name('pkgname', Load(), lineno=454, col_offset=41), lineno=453, col_offset=21), Name('RuntimeWarning', Load(), lineno=454, col_offset=50), Num(1, lineno=454, col_offset=66)], [], None, None, lineno=453, col_offset=16), lineno=453, col_offset=16), Return(Name('None', Load(), lineno=455, col_offset=23), lineno=455, col_offset=16)], [Raise(Name('SystemError', Load(), lineno=457, col_offset=22), BinOp(Str("Parent module '%s' not loaded, cannot perform relative import", lineno=457, col_offset=36), Mod(), Name('pkgname', Load(), lineno=458, col_offset=64), lineno=457, col_offset=36), None, lineno=457, col_offset=16)], lineno=452, col_offset=12)], lineno=451, col_offset=8)], [], lineno=449, col_offset=8)], [], lineno=415, col_offset=4), FunctionDef('find_head_package', arguments([Name('self', Param(), lineno=460, col_offset=26), Name('parent', Param(), lineno=460, col_offset=32), Name('name', Param(), lineno=460, col_offset=40)], None, None, []), [If(Compare(Str('.', lineno=461, col_offset=11), [In()], [Name('name', Load(), lineno=461, col_offset=18)], lineno=461, col_offset=11), [Assign([Name('i', Store(), lineno=462, col_offset=12)], Call(Attribute(Name('name', Load(), lineno=462, col_offset=16), 'find', Load(), lineno=462, col_offset=16), [Str('.', lineno=462, col_offset=26)], [], None, None, lineno=462, col_offset=16), lineno=462, col_offset=12), Assign([Name('head', Store(), lineno=463, col_offset=12)], Subscript(Name('name', Load(), lineno=463, col_offset=19), Slice(None, Name('i', Load(), lineno=463, col_offset=25), None), Load(), lineno=463, col_offset=19), lineno=463, col_offset=12), Assign([Name('tail', Store(), lineno=464, col_offset=12)], Subscript(Name('name', Load(), lineno=464, col_offset=19), Slice(BinOp(Name('i', Load(), lineno=464, col_offset=24), Add(), Num(1, lineno=464, col_offset=26), lineno=464, col_offset=24), None, None), Load(), lineno=464, col_offset=19), lineno=464, col_offset=12)], [Assign([Name('head', Store(), lineno=466, col_offset=12)], Name('name', Load(), lineno=466, col_offset=19), lineno=466, col_offset=12), Assign([Name('tail', Store(), lineno=467, col_offset=12)], Str('', lineno=467, col_offset=19), lineno=467, col_offset=12)], lineno=461, col_offset=8), If(Name('parent', Load(), lineno=468, col_offset=11), [Assign([Name('qname', Store(), lineno=469, col_offset=12)], BinOp(Str('%s.%s', lineno=469, col_offset=20), Mod(), Tuple([Attribute(Name('parent', Load(), lineno=469, col_offset=31), '__name__', Load(), lineno=469, col_offset=31), Name('head', Load(), lineno=469, col_offset=48)], Load(), lineno=469, col_offset=31), lineno=469, col_offset=20), lineno=469, col_offset=12)], [Assign([Name('qname', Store(), lineno=471, col_offset=12)], Name('head', Load(), lineno=471, col_offset=20), lineno=471, col_offset=12)], lineno=468, col_offset=8), Assign([Name('q', Store(), lineno=472, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=472, col_offset=12), 'import_it', Load(), lineno=472, col_offset=12), [Name('head', Load(), lineno=472, col_offset=27), Name('qname', Load(), lineno=472, col_offset=33), Name('parent', Load(), lineno=472, col_offset=40)], [], None, None, lineno=472, col_offset=12), lineno=472, col_offset=8), If(Name('q', Load(), lineno=473, col_offset=11), [Return(Tuple([Name('q', Load(), lineno=473, col_offset=21), Name('tail', Load(), lineno=473, col_offset=24)], Load(), lineno=473, col_offset=21), lineno=473, col_offset=14)], [], lineno=473, col_offset=8), If(Name('parent', Load(), lineno=474, col_offset=11), [Assign([Name('qname', Store(), lineno=475, col_offset=12)], Name('head', Load(), lineno=475, col_offset=20), lineno=475, col_offset=12), Assign([Name('parent', Store(), lineno=476, col_offset=12)], Name('None', Load(), lineno=476, col_offset=21), lineno=476, col_offset=12), Assign([Name('q', Store(), lineno=477, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=477, col_offset=16), 'import_it', Load(), lineno=477, col_offset=16), [Name('head', Load(), lineno=477, col_offset=31), Name('qname', Load(), lineno=477, col_offset=37), Name('parent', Load(), lineno=477, col_offset=44)], [], None, None, lineno=477, col_offset=16), lineno=477, col_offset=12), If(Name('q', Load(), lineno=478, col_offset=15), [Return(Tuple([Name('q', Load(), lineno=478, col_offset=25), Name('tail', Load(), lineno=478, col_offset=28)], Load(), lineno=478, col_offset=25), lineno=478, col_offset=18)], [], lineno=478, col_offset=12)], [], lineno=474, col_offset=8), Raise(Name('ImportError', Load(), lineno=479, col_offset=14), BinOp(Str("No module named '%s'", lineno=479, col_offset=27), Mod(), Name('qname', Load(), lineno=479, col_offset=52), lineno=479, col_offset=27), None, lineno=479, col_offset=8)], [], lineno=460, col_offset=4), FunctionDef('load_tail', arguments([Name('self', Param(), lineno=481, col_offset=18), Name('q', Param(), lineno=481, col_offset=24), Name('tail', Param(), lineno=481, col_offset=27)], None, None, []), [Assign([Name('m', Store(), lineno=482, col_offset=8)], Name('q', Load(), lineno=482, col_offset=12), lineno=482, col_offset=8), While(Name('tail', Load(), lineno=483, col_offset=14), [Assign([Name('i', Store(), lineno=484, col_offset=12)], Call(Attribute(Name('tail', Load(), lineno=484, col_offset=16), 'find', Load(), lineno=484, col_offset=16), [Str('.', lineno=484, col_offset=26)], [], None, None, lineno=484, col_offset=16), lineno=484, col_offset=12), If(Compare(Name('i', Load(), lineno=485, col_offset=15), [Lt()], [Num(0, lineno=485, col_offset=19)], lineno=485, col_offset=15), [Assign([Name('i', Store(), lineno=485, col_offset=22)], Call(Name('len', Load(), lineno=485, col_offset=26), [Name('tail', Load(), lineno=485, col_offset=30)], [], None, None, lineno=485, col_offset=26), lineno=485, col_offset=22)], [], lineno=485, col_offset=12), Assign([Tuple([Name('head', Store(), lineno=486, col_offset=12), Name('tail', Store(), lineno=486, col_offset=18)], Store(), lineno=486, col_offset=12)], Tuple([Subscript(Name('tail', Load(), lineno=486, col_offset=25), Slice(None, Name('i', Load(), lineno=486, col_offset=31), None), Load(), lineno=486, col_offset=25), Subscript(Name('tail', Load(), lineno=486, col_offset=35), Slice(BinOp(Name('i', Load(), lineno=486, col_offset=40), Add(), Num(1, lineno=486, col_offset=42), lineno=486, col_offset=40), None, None), Load(), lineno=486, col_offset=35)], Load(), lineno=486, col_offset=25), lineno=486, col_offset=12), Assign([Name('mname', Store(), lineno=487, col_offset=12)], BinOp(Str('%s.%s', lineno=487, col_offset=20), Mod(), Tuple([Attribute(Name('m', Load(), lineno=487, col_offset=31), '__name__', Load(), lineno=487, col_offset=31), Name('head', Load(), lineno=487, col_offset=43)], Load(), lineno=487, col_offset=31), lineno=487, col_offset=20), lineno=487, col_offset=12), Assign([Name('m', Store(), lineno=488, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=488, col_offset=16), 'import_it', Load(), lineno=488, col_offset=16), [Name('head', Load(), lineno=488, col_offset=31), Name('mname', Load(), lineno=488, col_offset=37), Name('m', Load(), lineno=488, col_offset=44)], [], None, None, lineno=488, col_offset=16), lineno=488, col_offset=12), If(UnaryOp(Not(), Name('m', Load(), lineno=489, col_offset=19), lineno=489, col_offset=15), [Raise(Name('ImportError', Load(), lineno=490, col_offset=22), BinOp(Str("No module named '%s'", lineno=490, col_offset=35), Mod(), Name('mname', Load(), lineno=490, col_offset=60), lineno=490, col_offset=35), None, lineno=490, col_offset=16)], [], lineno=489, col_offset=12)], [], lineno=483, col_offset=8), Return(Name('m', Load(), lineno=491, col_offset=15), lineno=491, col_offset=8)], [], lineno=481, col_offset=4), FunctionDef('ensure_fromlist', arguments([Name('self', Param(), lineno=493, col_offset=24), Name('m', Param(), lineno=493, col_offset=30), Name('fromlist', Param(), lineno=493, col_offset=33), Name('recursive', Param(), lineno=493, col_offset=43)], None, None, [Num(0, lineno=493, col_offset=53)]), [For(Name('sub', Store(), lineno=494, col_offset=12), Name('fromlist', Load(), lineno=494, col_offset=19), [If(Compare(Name('sub', Load(), lineno=495, col_offset=15), [Eq()], [Str('*', lineno=495, col_offset=22)], lineno=495, col_offset=15), [If(UnaryOp(Not(), Name('recursive', Load(), lineno=496, col_offset=23), lineno=496, col_offset=19), [TryExcept([Assign([Name('all', Store(), lineno=498, col_offset=24)], Attribute(Name('m', Load(), lineno=498, col_offset=30), '__all__', Load(), lineno=498, col_offset=30), lineno=498, col_offset=24)], [ExceptHandler(Name('AttributeError', Load(), lineno=499, col_offset=27), None, [Pass( lineno=500, col_offset=24)], lineno=499, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=502, col_offset=24), 'ensure_fromlist', Load(), lineno=502, col_offset=24), [Name('m', Load(), lineno=502, col_offset=45), Name('all', Load(), lineno=502, col_offset=48), Num(1, lineno=502, col_offset=53)], [], None, None, lineno=502, col_offset=24), lineno=502, col_offset=24)], lineno=497, col_offset=20)], [], lineno=496, col_offset=16), Continue( lineno=503, col_offset=16)], [], lineno=495, col_offset=12), If(BoolOp(And(), [Compare(Name('sub', Load(), lineno=504, col_offset=15), [NotEq()], [Str('*', lineno=504, col_offset=22)], lineno=504, col_offset=15), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=504, col_offset=34), [Name('m', Load(), lineno=504, col_offset=42), Name('sub', Load(), lineno=504, col_offset=45)], [], None, None, lineno=504, col_offset=34), lineno=504, col_offset=30)], lineno=504, col_offset=15), [Assign([Name('subname', Store(), lineno=505, col_offset=16)], BinOp(Str('%s.%s', lineno=505, col_offset=26), Mod(), Tuple([Attribute(Name('m', Load(), lineno=505, col_offset=37), '__name__', Load(), lineno=505, col_offset=37), Name('sub', Load(), lineno=505, col_offset=49)], Load(), lineno=505, col_offset=37), lineno=505, col_offset=26), lineno=505, col_offset=16), Assign([Name('submod', Store(), lineno=506, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=506, col_offset=25), 'import_it', Load(), lineno=506, col_offset=25), [Name('sub', Load(), lineno=506, col_offset=40), Name('subname', Load(), lineno=506, col_offset=45), Name('m', Load(), lineno=506, col_offset=54)], [], None, None, lineno=506, col_offset=25), lineno=506, col_offset=16), If(UnaryOp(Not(), Name('submod', Load(), lineno=507, col_offset=23), lineno=507, col_offset=19), [Raise(Name('ImportError', Load(), lineno=508, col_offset=26), BinOp(Str("No module named '%s'", lineno=508, col_offset=39), Mod(), Name('subname', Load(), lineno=508, col_offset=64), lineno=508, col_offset=39), None, lineno=508, col_offset=20)], [], lineno=507, col_offset=16)], [], lineno=504, col_offset=12)], [], lineno=494, col_offset=8)], [], lineno=493, col_offset=4), FunctionDef('import_it', arguments([Name('self', Param(), lineno=510, col_offset=18), Name('partname', Param(), lineno=510, col_offset=24), Name('fqname', Param(), lineno=510, col_offset=34), Name('parent', Param(), lineno=510, col_offset=42), Name('force_load', Param(), lineno=510, col_offset=50)], None, None, [Num(0, lineno=510, col_offset=61)]), [If(UnaryOp(Not(), Name('partname', Load(), lineno=511, col_offset=15), lineno=511, col_offset=11), [Return(Name('parent', Load(), lineno=514, col_offset=19), lineno=514, col_offset=12)], [], lineno=511, col_offset=8), If(UnaryOp(Not(), Name('force_load', Load(), lineno=515, col_offset=15), lineno=515, col_offset=11), [TryExcept([Return(Subscript(Attribute(Name('self', Load(), lineno=517, col_offset=23), 'modules', Load(), lineno=517, col_offset=23), Index(Name('fqname', Load(), lineno=517, col_offset=36)), Load(), lineno=517, col_offset=23), lineno=517, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=518, col_offset=19), None, [Pass( lineno=519, col_offset=16)], lineno=518, col_offset=12)], [], lineno=516, col_offset=12)], [], lineno=515, col_offset=8), TryExcept([Assign([Name('path', Store(), lineno=521, col_offset=12)], BoolOp(And(), [Name('parent', Load(), lineno=521, col_offset=19), Attribute(Name('parent', Load(), lineno=521, col_offset=30), '__path__', Load(), lineno=521, col_offset=30)], lineno=521, col_offset=19), lineno=521, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=522, col_offset=15), None, [Return(Name('None', Load(), lineno=523, col_offset=19), lineno=523, col_offset=12)], lineno=522, col_offset=8)], [], lineno=520, col_offset=8), Assign([Name('partname', Store(), lineno=524, col_offset=8)], Call(Name('str', Load(), lineno=524, col_offset=19), [Name('partname', Load(), lineno=524, col_offset=23)], [], None, None, lineno=524, col_offset=19), lineno=524, col_offset=8), Assign([Name('stuff', Store(), lineno=525, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=525, col_offset=16), 'loader', Load(), lineno=525, col_offset=16), 'find_module', Load(), lineno=525, col_offset=16), [Name('partname', Load(), lineno=525, col_offset=40), Name('path', Load(), lineno=525, col_offset=50)], [], None, None, lineno=525, col_offset=16), lineno=525, col_offset=8), If(UnaryOp(Not(), Name('stuff', Load(), lineno=526, col_offset=15), lineno=526, col_offset=11), [Return(Name('None', Load(), lineno=527, col_offset=19), lineno=527, col_offset=12)], [], lineno=526, col_offset=8), Assign([Name('fqname', Store(), lineno=528, col_offset=8)], Call(Name('str', Load(), lineno=528, col_offset=17), [Name('fqname', Load(), lineno=528, col_offset=21)], [], None, None, lineno=528, col_offset=17), lineno=528, col_offset=8), Assign([Name('m', Store(), lineno=529, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=529, col_offset=12), 'loader', Load(), lineno=529, col_offset=12), 'load_module', Load(), lineno=529, col_offset=12), [Name('fqname', Load(), lineno=529, col_offset=36), Name('stuff', Load(), lineno=529, col_offset=44)], [], None, None, lineno=529, col_offset=12), lineno=529, col_offset=8), If(Name('parent', Load(), lineno=530, col_offset=11), [Expr(Call(Name('setattr', Load(), lineno=531, col_offset=12), [Name('parent', Load(), lineno=531, col_offset=20), Name('partname', Load(), lineno=531, col_offset=28), Name('m', Load(), lineno=531, col_offset=38)], [], None, None, lineno=531, col_offset=12), lineno=531, col_offset=12)], [], lineno=530, col_offset=8), Return(Name('m', Load(), lineno=532, col_offset=15), lineno=532, col_offset=8)], [], lineno=510, col_offset=4), FunctionDef('reload', arguments([Name('self', Param(), lineno=534, col_offset=15), Name('module', Param(), lineno=534, col_offset=21)], None, None, []), [Assign([Name('name', Store(), lineno=535, col_offset=8)], Call(Name('str', Load(), lineno=535, col_offset=15), [Attribute(Name('module', Load(), lineno=535, col_offset=19), '__name__', Load(), lineno=535, col_offset=19)], [], None, None, lineno=535, col_offset=15), lineno=535, col_offset=8), If(Compare(Str('.', lineno=536, col_offset=11), [NotIn()], [Name('name', Load(), lineno=536, col_offset=22)], lineno=536, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=537, col_offset=19), 'import_it', Load(), lineno=537, col_offset=19), [Name('name', Load(), lineno=537, col_offset=34), Name('name', Load(), lineno=537, col_offset=40), Name('None', Load(), lineno=537, col_offset=46)], [keyword('force_load', Num(1, lineno=537, col_offset=63))], None, None, lineno=537, col_offset=19), lineno=537, col_offset=12)], [], lineno=536, col_offset=8), Assign([Name('i', Store(), lineno=538, col_offset=8)], Call(Attribute(Name('name', Load(), lineno=538, col_offset=12), 'rfind', Load(), lineno=538, col_offset=12), [Str('.', lineno=538, col_offset=23)], [], None, None, lineno=538, col_offset=12), lineno=538, col_offset=8), Assign([Name('pname', Store(), lineno=539, col_offset=8)], Subscript(Name('name', Load(), lineno=539, col_offset=16), Slice(None, Name('i', Load(), lineno=539, col_offset=22), None), Load(), lineno=539, col_offset=16), lineno=539, col_offset=8), Assign([Name('parent', Store(), lineno=540, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=540, col_offset=17), 'modules', Load(), lineno=540, col_offset=17), Index(Name('pname', Load(), lineno=540, col_offset=30)), Load(), lineno=540, col_offset=17), lineno=540, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=541, col_offset=15), 'import_it', Load(), lineno=541, col_offset=15), [Subscript(Name('name', Load(), lineno=541, col_offset=30), Slice(BinOp(Name('i', Load(), lineno=541, col_offset=35), Add(), Num(1, lineno=541, col_offset=37), lineno=541, col_offset=35), None, None), Load(), lineno=541, col_offset=30), Name('name', Load(), lineno=541, col_offset=42), Name('parent', Load(), lineno=541, col_offset=48)], [keyword('force_load', Num(1, lineno=541, col_offset=67))], None, None, lineno=541, col_offset=15), lineno=541, col_offset=8)], [], lineno=534, col_offset=4)], [], lineno=400, col_offset=0), Assign([Name('default_importer', Store(), lineno=544, col_offset=0)], Name('None', Load(), lineno=544, col_offset=19), lineno=544, col_offset=0), Assign([Name('current_importer', Store(), lineno=545, col_offset=0)], Name('None', Load(), lineno=545, col_offset=19), lineno=545, col_offset=0), FunctionDef('install', arguments([Name('importer', Param(), lineno=547, col_offset=12)], None, None, [Name('None', Load(), lineno=547, col_offset=23)]), [Global(['current_importer'], lineno=548, col_offset=4), Assign([Name('current_importer', Store(), lineno=549, col_offset=4)], BoolOp(Or(), [Name('importer', Load(), lineno=549, col_offset=23), Name('default_importer', Load(), lineno=549, col_offset=35), Call(Name('ModuleImporter', Load(), lineno=549, col_offset=55), [], [], None, None, lineno=549, col_offset=55)], lineno=549, col_offset=23), lineno=549, col_offset=4), Expr(Call(Attribute(Name('current_importer', Load(), lineno=550, col_offset=4), 'install', Load(), lineno=550, col_offset=4), [], [], None, None, lineno=550, col_offset=4), lineno=550, col_offset=4)], [], lineno=547, col_offset=0), FunctionDef('uninstall', arguments([], None, None, []), [Global(['current_importer'], lineno=553, col_offset=4), Expr(Call(Attribute(Name('current_importer', Load(), lineno=554, col_offset=4), 'uninstall', Load(), lineno=554, col_offset=4), [], [], None, None, lineno=554, col_offset=4), lineno=554, col_offset=4)], [], lineno=552, col_offset=0)])
