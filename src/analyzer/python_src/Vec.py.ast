Module([ClassDef('Vec', [], [Expr(Str(' A simple vector class\n\n    Instances of the Vec class  can be constructed from numbers\n\n    >>> a = Vec(1, 2, 3)\n    >>> b = Vec(3, 2, 1)\n\n    added\n    >>> a + b\n    Vec(4, 4, 4)\n\n    subtracted\n    >>> a - b\n    Vec(-2, 0, 2)\n\n    and multiplied by a scalar on the left\n    >>> 3.0 * a\n    Vec(3.0, 6.0, 9.0)\n\n    or on the right\n    >>> a * 3.0\n    Vec(3.0, 6.0, 9.0)\n    ', lineno=24, col_offset=-1), lineno=24, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=25, col_offset=17)], 'v', None, []), [Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'v', Store(), lineno=26, col_offset=8)], Call(Name('list', Load(), lineno=26, col_offset=17), [Name('v', Load(), lineno=26, col_offset=22)], [], None, None, lineno=26, col_offset=17), lineno=26, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('fromlist', arguments([Name('cls', Param(), lineno=29, col_offset=17), Name('v', Param(), lineno=29, col_offset=22)], None, None, []), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=30, col_offset=15), [Name('v', Load(), lineno=30, col_offset=26), Name('list', Load(), lineno=30, col_offset=29)], [], None, None, lineno=30, col_offset=15), lineno=30, col_offset=11), [Raise(Name('TypeError', Load(), lineno=31, col_offset=18), None, None, lineno=31, col_offset=12)], [], lineno=30, col_offset=8), Assign([Name('inst', Store(), lineno=32, col_offset=8)], Call(Name('cls', Load(), lineno=32, col_offset=15), [], [], None, None, lineno=32, col_offset=15), lineno=32, col_offset=8), Assign([Attribute(Name('inst', Load(), lineno=33, col_offset=8), 'v', Store(), lineno=33, col_offset=8)], Name('v', Load(), lineno=33, col_offset=17), lineno=33, col_offset=8), Return(Name('inst', Load(), lineno=34, col_offset=15), lineno=34, col_offset=8)], [Name('classmethod', Load(), lineno=28, col_offset=5)], lineno=28, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=36, col_offset=17)], None, None, []), [Assign([Name('args', Store(), lineno=37, col_offset=8)], Call(Attribute(Str(', ', lineno=37, col_offset=15), 'join', Load(), lineno=37, col_offset=15), [GeneratorExp(Call(Name('repr', Load(), lineno=37, col_offset=25), [Name('x', Load(), lineno=37, col_offset=30)], [], None, None, lineno=37, col_offset=25), [comprehension(Name('x', Store(), lineno=37, col_offset=37), Attribute(Name('self', Load(), lineno=37, col_offset=42), 'v', Load(), lineno=37, col_offset=42), [])], lineno=37, col_offset=25)], [], None, None, lineno=37, col_offset=15), lineno=37, col_offset=8), Return(Call(Attribute(Str('Vec({0})', lineno=38, col_offset=15), 'format', Load(), lineno=38, col_offset=15), [Name('args', Load(), lineno=38, col_offset=33)], [], None, None, lineno=38, col_offset=15), lineno=38, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=40, col_offset=16)], None, None, []), [Return(Call(Name('len', Load(), lineno=41, col_offset=15), [Attribute(Name('self', Load(), lineno=41, col_offset=19), 'v', Load(), lineno=41, col_offset=19)], [], None, None, lineno=41, col_offset=15), lineno=41, col_offset=8)], [], lineno=40, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=43, col_offset=20), Name('i', Param(), lineno=43, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=44, col_offset=15), 'v', Load(), lineno=44, col_offset=15), Index(Name('i', Load(), lineno=44, col_offset=22)), Load(), lineno=44, col_offset=15), lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('__add__', arguments([Name('self', Param(), lineno=46, col_offset=16), Name('other', Param(), lineno=46, col_offset=22)], None, None, []), [Assign([Name('v', Store(), lineno=48, col_offset=8)], ListComp(BinOp(Name('x', Load(), lineno=48, col_offset=13), Add(), Name('y', Load(), lineno=48, col_offset=17), lineno=48, col_offset=13), [comprehension(Tuple([Name('x', Store(), lineno=48, col_offset=23), Name('y', Store(), lineno=48, col_offset=26)], Store(), lineno=48, col_offset=23), Call(Name('zip', Load(), lineno=48, col_offset=31), [Attribute(Name('self', Load(), lineno=48, col_offset=35), 'v', Load(), lineno=48, col_offset=35), Attribute(Name('other', Load(), lineno=48, col_offset=43), 'v', Load(), lineno=48, col_offset=43)], [], None, None, lineno=48, col_offset=31), [])], lineno=48, col_offset=13), lineno=48, col_offset=8), Return(Call(Attribute(Name('Vec', Load(), lineno=49, col_offset=15), 'fromlist', Load(), lineno=49, col_offset=15), [Name('v', Load(), lineno=49, col_offset=28)], [], None, None, lineno=49, col_offset=15), lineno=49, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('__sub__', arguments([Name('self', Param(), lineno=51, col_offset=16), Name('other', Param(), lineno=51, col_offset=22)], None, None, []), [Assign([Name('v', Store(), lineno=53, col_offset=8)], ListComp(BinOp(Name('x', Load(), lineno=53, col_offset=13), Sub(), Name('y', Load(), lineno=53, col_offset=17), lineno=53, col_offset=13), [comprehension(Tuple([Name('x', Store(), lineno=53, col_offset=23), Name('y', Store(), lineno=53, col_offset=26)], Store(), lineno=53, col_offset=23), Call(Name('zip', Load(), lineno=53, col_offset=31), [Attribute(Name('self', Load(), lineno=53, col_offset=35), 'v', Load(), lineno=53, col_offset=35), Attribute(Name('other', Load(), lineno=53, col_offset=43), 'v', Load(), lineno=53, col_offset=43)], [], None, None, lineno=53, col_offset=31), [])], lineno=53, col_offset=13), lineno=53, col_offset=8), Return(Call(Attribute(Name('Vec', Load(), lineno=54, col_offset=15), 'fromlist', Load(), lineno=54, col_offset=15), [Name('v', Load(), lineno=54, col_offset=28)], [], None, None, lineno=54, col_offset=15), lineno=54, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('__mul__', arguments([Name('self', Param(), lineno=56, col_offset=16), Name('scalar', Param(), lineno=56, col_offset=22)], None, None, []), [Assign([Name('v', Store(), lineno=58, col_offset=8)], ListComp(BinOp(Name('x', Load(), lineno=58, col_offset=13), Mult(), Name('scalar', Load(), lineno=58, col_offset=17), lineno=58, col_offset=13), [comprehension(Name('x', Store(), lineno=58, col_offset=28), Attribute(Name('self', Load(), lineno=58, col_offset=33), 'v', Load(), lineno=58, col_offset=33), [])], lineno=58, col_offset=13), lineno=58, col_offset=8), Return(Call(Attribute(Name('Vec', Load(), lineno=59, col_offset=15), 'fromlist', Load(), lineno=59, col_offset=15), [Name('v', Load(), lineno=59, col_offset=28)], [], None, None, lineno=59, col_offset=15), lineno=59, col_offset=8)], [], lineno=56, col_offset=4), Assign([Name('__rmul__', Store(), lineno=61, col_offset=4)], Name('__mul__', Load(), lineno=61, col_offset=15), lineno=61, col_offset=4)], [], lineno=1, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Import([alias('doctest', None)], lineno=65, col_offset=4), Expr(Call(Attribute(Name('doctest', Load(), lineno=66, col_offset=4), 'testmod', Load(), lineno=66, col_offset=4), [], [], None, None, lineno=66, col_offset=4), lineno=66, col_offset=4)], [], lineno=64, col_offset=0), Expr(Call(Name('test', Load(), lineno=68, col_offset=0), [], [], None, None, lineno=68, col_offset=0), lineno=68, col_offset=0)])
