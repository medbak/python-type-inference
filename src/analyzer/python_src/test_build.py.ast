Module([Expr(Str('Tests for distutils.command.build.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), ImportFrom('distutils.command.build', [alias('build', None)], 0, lineno=6, col_offset=0), ImportFrom('distutils.tests', [alias('support', None)], 0, lineno=7, col_offset=0), ImportFrom('sysconfig', [alias('get_platform', None)], 0, lineno=8, col_offset=0), ClassDef('BuildTestCase', [Attribute(Name('support', Load(), lineno=10, col_offset=20), 'TempdirManager', Load(), lineno=10, col_offset=20), Attribute(Name('support', Load(), lineno=11, col_offset=20), 'LoggingSilencer', Load(), lineno=11, col_offset=20), Attribute(Name('unittest', Load(), lineno=12, col_offset=20), 'TestCase', Load(), lineno=12, col_offset=20)], [FunctionDef('test_finalize_options', arguments([Name('self', Param(), lineno=14, col_offset=30)], None, None, []), [Assign([Tuple([Name('pkg_dir', Store(), lineno=15, col_offset=8), Name('dist', Store(), lineno=15, col_offset=17)], Store(), lineno=15, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=15, col_offset=24), 'create_dist', Load(), lineno=15, col_offset=24), [], [], None, None, lineno=15, col_offset=24), lineno=15, col_offset=8), Assign([Name('cmd', Store(), lineno=16, col_offset=8)], Call(Name('build', Load(), lineno=16, col_offset=14), [Name('dist', Load(), lineno=16, col_offset=20)], [], None, None, lineno=16, col_offset=14), lineno=16, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=17, col_offset=8), 'finalize_options', Load(), lineno=17, col_offset=8), [], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Attribute(Name('cmd', Load(), lineno=20, col_offset=25), 'plat_name', Load(), lineno=20, col_offset=25), Call(Name('get_platform', Load(), lineno=20, col_offset=40), [], [], None, None, lineno=20, col_offset=40)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Assign([Name('wanted', Store(), lineno=23, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=23, col_offset=17), 'path', Load(), lineno=23, col_offset=17), 'join', Load(), lineno=23, col_offset=17), [Attribute(Name('cmd', Load(), lineno=23, col_offset=30), 'build_base', Load(), lineno=23, col_offset=30), Str('lib', lineno=23, col_offset=46)], [], None, None, lineno=23, col_offset=17), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Attribute(Name('cmd', Load(), lineno=24, col_offset=25), 'build_purelib', Load(), lineno=24, col_offset=25), Name('wanted', Load(), lineno=24, col_offset=44)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Assign([Name('plat_spec', Store(), lineno=29, col_offset=8)], BinOp(Str('.%s-%s', lineno=29, col_offset=20), Mod(), Tuple([Attribute(Name('cmd', Load(), lineno=29, col_offset=32), 'plat_name', Load(), lineno=29, col_offset=32), Subscript(Attribute(Name('sys', Load(), lineno=29, col_offset=47), 'version', Load(), lineno=29, col_offset=47), Slice(Num(0, lineno=29, col_offset=59), Num(3, lineno=29, col_offset=61), None), Load(), lineno=29, col_offset=47)], Load(), lineno=29, col_offset=32), lineno=29, col_offset=20), lineno=29, col_offset=8), If(Call(Name('hasattr', Load(), lineno=30, col_offset=11), [Name('sys', Load(), lineno=30, col_offset=19), Str('gettotalrefcount', lineno=30, col_offset=24)], [], None, None, lineno=30, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=12), 'assertTrue', Load(), lineno=31, col_offset=12), [Call(Attribute(Attribute(Name('cmd', Load(), lineno=31, col_offset=28), 'build_platlib', Load(), lineno=31, col_offset=28), 'endswith', Load(), lineno=31, col_offset=28), [Str('-pydebug', lineno=31, col_offset=55)], [], None, None, lineno=31, col_offset=28)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=12), AugAssign(Name('plat_spec', Store(), lineno=32, col_offset=12), Add(), Str('-pydebug', lineno=32, col_offset=25), lineno=32, col_offset=12)], [], lineno=30, col_offset=8), Assign([Name('wanted', Store(), lineno=33, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=33, col_offset=17), 'path', Load(), lineno=33, col_offset=17), 'join', Load(), lineno=33, col_offset=17), [Attribute(Name('cmd', Load(), lineno=33, col_offset=30), 'build_base', Load(), lineno=33, col_offset=30), BinOp(Str('lib', lineno=33, col_offset=46), Add(), Name('plat_spec', Load(), lineno=33, col_offset=54), lineno=33, col_offset=46)], [], None, None, lineno=33, col_offset=17), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Attribute(Name('cmd', Load(), lineno=34, col_offset=25), 'build_platlib', Load(), lineno=34, col_offset=25), Name('wanted', Load(), lineno=34, col_offset=44)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertEqual', Load(), lineno=37, col_offset=8), [Attribute(Name('cmd', Load(), lineno=37, col_offset=25), 'build_lib', Load(), lineno=37, col_offset=25), Attribute(Name('cmd', Load(), lineno=37, col_offset=40), 'build_purelib', Load(), lineno=37, col_offset=40)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), Assign([Name('wanted', Store(), lineno=40, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=40, col_offset=17), 'path', Load(), lineno=40, col_offset=17), 'join', Load(), lineno=40, col_offset=17), [Attribute(Name('cmd', Load(), lineno=40, col_offset=30), 'build_base', Load(), lineno=40, col_offset=30), BinOp(Str('temp', lineno=40, col_offset=46), Add(), Name('plat_spec', Load(), lineno=40, col_offset=55), lineno=40, col_offset=46)], [], None, None, lineno=40, col_offset=17), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Attribute(Name('cmd', Load(), lineno=41, col_offset=25), 'build_temp', Load(), lineno=41, col_offset=25), Name('wanted', Load(), lineno=41, col_offset=41)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Assign([Name('wanted', Store(), lineno=44, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=44, col_offset=17), 'path', Load(), lineno=44, col_offset=17), 'join', Load(), lineno=44, col_offset=17), [Attribute(Name('cmd', Load(), lineno=44, col_offset=30), 'build_base', Load(), lineno=44, col_offset=30), BinOp(Str('scripts-', lineno=44, col_offset=46), Add(), Subscript(Attribute(Name('sys', Load(), lineno=44, col_offset=60), 'version', Load(), lineno=44, col_offset=60), Slice(Num(0, lineno=44, col_offset=72), Num(3, lineno=44, col_offset=74), None), Load(), lineno=44, col_offset=60), lineno=44, col_offset=46)], [], None, None, lineno=44, col_offset=17), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Attribute(Name('cmd', Load(), lineno=45, col_offset=25), 'build_scripts', Load(), lineno=45, col_offset=25), Name('wanted', Load(), lineno=45, col_offset=44)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertEqual', Load(), lineno=48, col_offset=8), [Attribute(Name('cmd', Load(), lineno=48, col_offset=25), 'executable', Load(), lineno=48, col_offset=25), Call(Attribute(Attribute(Name('os', Load(), lineno=48, col_offset=41), 'path', Load(), lineno=48, col_offset=41), 'normpath', Load(), lineno=48, col_offset=41), [Attribute(Name('sys', Load(), lineno=48, col_offset=58), 'executable', Load(), lineno=48, col_offset=58)], [], None, None, lineno=48, col_offset=41)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=10, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Return(Call(Attribute(Name('unittest', Load(), lineno=51, col_offset=11), 'makeSuite', Load(), lineno=51, col_offset=11), [Name('BuildTestCase', Load(), lineno=51, col_offset=30)], [], None, None, lineno=51, col_offset=11), lineno=51, col_offset=4)], [], lineno=50, col_offset=0), If(Compare(Name('__name__', Load(), lineno=53, col_offset=3), [Eq()], [Str('__main__', lineno=53, col_offset=15)], lineno=53, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=54, col_offset=4), 'main', Load(), lineno=54, col_offset=4), [], [keyword('defaultTest', Str('test_suite', lineno=54, col_offset=30))], None, None, lineno=54, col_offset=4), lineno=54, col_offset=4)], [], lineno=53, col_offset=0)])
