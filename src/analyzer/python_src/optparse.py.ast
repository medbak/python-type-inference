Module([Expr(Str('A powerful, extensible, and easy-to-use option parser.\n\nBy Greg Ward <gward@python.net>\n\nOriginally distributed as Optik.\n\nFor support, use the optik-users@lists.sourceforge.net mailing list\n(http://lists.sourceforge.net/lists/listinfo/optik-users).\n\nSimple usage example:\n\n   from optparse import OptionParser\n\n   parser = OptionParser()\n   parser.add_option("-f", "--file", dest="filename",\n                     help="write report to FILE", metavar="FILE")\n   parser.add_option("-q", "--quiet",\n                     action="store_false", dest="verbose", default=True,\n                     help="don\'t print status messages to stdout")\n\n   (options, args) = parser.parse_args()\n', lineno=22, col_offset=-1), lineno=22, col_offset=-1), Assign([Name('__version__', Store(), lineno=24, col_offset=0)], Str('1.5.3', lineno=24, col_offset=14), lineno=24, col_offset=0), Assign([Name('__all__', Store(), lineno=26, col_offset=0)], List([Str('Option', lineno=26, col_offset=11), Str('make_option', lineno=27, col_offset=11), Str('SUPPRESS_HELP', lineno=28, col_offset=11), Str('SUPPRESS_USAGE', lineno=29, col_offset=11), Str('Values', lineno=30, col_offset=11), Str('OptionContainer', lineno=31, col_offset=11), Str('OptionGroup', lineno=32, col_offset=11), Str('OptionParser', lineno=33, col_offset=11), Str('HelpFormatter', lineno=34, col_offset=11), Str('IndentedHelpFormatter', lineno=35, col_offset=11), Str('TitledHelpFormatter', lineno=36, col_offset=11), Str('OptParseError', lineno=37, col_offset=11), Str('OptionError', lineno=38, col_offset=11), Str('OptionConflictError', lineno=39, col_offset=11), Str('OptionValueError', lineno=40, col_offset=11), Str('BadOptionError', lineno=41, col_offset=11)], Load(), lineno=26, col_offset=10), lineno=26, col_offset=0), Assign([Name('__copyright__', Store(), lineno=43, col_offset=0)], Str('\nCopyright (c) 2001-2006 Gregory P. Ward.  All rights reserved.\nCopyright (c) 2002-2006 Python Software Foundation.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n  * Neither the name of the author nor the names of its\n    contributors may be used to endorse or promote products derived from\n    this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS\nIS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n', lineno=73, col_offset=-1), lineno=43, col_offset=0), Import([alias('sys', None), alias('os', None)], lineno=75, col_offset=0), Import([alias('types', None)], lineno=76, col_offset=0), Import([alias('textwrap', None)], lineno=77, col_offset=0), FunctionDef('_repr', arguments([Name('self', Param(), lineno=79, col_offset=10)], None, None, []), [Return(BinOp(Str('<%s at 0x%x: %s>', lineno=80, col_offset=11), Mod(), Tuple([Attribute(Attribute(Name('self', Load(), lineno=80, col_offset=33), '__class__', Load(), lineno=80, col_offset=33), '__name__', Load(), lineno=80, col_offset=33), Call(Name('id', Load(), lineno=80, col_offset=58), [Name('self', Load(), lineno=80, col_offset=61)], [], None, None, lineno=80, col_offset=58), Name('self', Load(), lineno=80, col_offset=68)], Load(), lineno=80, col_offset=33), lineno=80, col_offset=11), lineno=80, col_offset=4)], [], lineno=79, col_offset=0), TryExcept([ImportFrom('gettext', [alias('gettext', None)], 0, lineno=90, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=91, col_offset=7), None, [FunctionDef('gettext', arguments([Name('message', Param(), lineno=92, col_offset=16)], None, None, []), [Return(Name('message', Load(), lineno=93, col_offset=15), lineno=93, col_offset=8)], [], lineno=92, col_offset=4)], lineno=91, col_offset=0)], [], lineno=89, col_offset=0), Assign([Name('_', Store(), lineno=94, col_offset=0)], Name('gettext', Load(), lineno=94, col_offset=4), lineno=94, col_offset=0), ClassDef('OptParseError', [Name('Exception', Load(), lineno=97, col_offset=21)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=98, col_offset=17), Name('msg', Param(), lineno=98, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=99, col_offset=8), 'msg', Store(), lineno=99, col_offset=8)], Name('msg', Load(), lineno=99, col_offset=19), lineno=99, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=101, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=102, col_offset=15), 'msg', Load(), lineno=102, col_offset=15), lineno=102, col_offset=8)], [], lineno=101, col_offset=4)], [], lineno=97, col_offset=0), ClassDef('OptionError', [Name('OptParseError', Load(), lineno=105, col_offset=19)], [Expr(Str('\n    Raised if an Option instance is created with invalid or\n    inconsistent arguments.\n    ', lineno=109, col_offset=-1), lineno=109, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=111, col_offset=17), Name('msg', Param(), lineno=111, col_offset=23), Name('option', Param(), lineno=111, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=112, col_offset=8), 'msg', Store(), lineno=112, col_offset=8)], Name('msg', Load(), lineno=112, col_offset=19), lineno=112, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=113, col_offset=8), 'option_id', Store(), lineno=113, col_offset=8)], Call(Name('str', Load(), lineno=113, col_offset=25), [Name('option', Load(), lineno=113, col_offset=29)], [], None, None, lineno=113, col_offset=25), lineno=113, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=115, col_offset=16)], None, None, []), [If(Attribute(Name('self', Load(), lineno=116, col_offset=11), 'option_id', Load(), lineno=116, col_offset=11), [Return(BinOp(Str('option %s: %s', lineno=117, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=117, col_offset=38), 'option_id', Load(), lineno=117, col_offset=38), Attribute(Name('self', Load(), lineno=117, col_offset=54), 'msg', Load(), lineno=117, col_offset=54)], Load(), lineno=117, col_offset=38), lineno=117, col_offset=19), lineno=117, col_offset=12)], [Return(Attribute(Name('self', Load(), lineno=119, col_offset=19), 'msg', Load(), lineno=119, col_offset=19), lineno=119, col_offset=12)], lineno=116, col_offset=8)], [], lineno=115, col_offset=4)], [], lineno=105, col_offset=0), ClassDef('OptionConflictError', [Name('OptionError', Load(), lineno=121, col_offset=27)], [Expr(Str('\n    Raised if conflicting options are added to an OptionParser.\n    ', lineno=124, col_offset=-1), lineno=124, col_offset=-1)], [], lineno=121, col_offset=0), ClassDef('OptionValueError', [Name('OptParseError', Load(), lineno=126, col_offset=24)], [Expr(Str('\n    Raised if an invalid option value is encountered on the command\n    line.\n    ', lineno=130, col_offset=-1), lineno=130, col_offset=-1)], [], lineno=126, col_offset=0), ClassDef('BadOptionError', [Name('OptParseError', Load(), lineno=132, col_offset=22)], [Expr(Str('\n    Raised if an invalid option is seen on the command line.\n    ', lineno=135, col_offset=-1), lineno=135, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=136, col_offset=17), Name('opt_str', Param(), lineno=136, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=137, col_offset=8), 'opt_str', Store(), lineno=137, col_offset=8)], Name('opt_str', Load(), lineno=137, col_offset=23), lineno=137, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=139, col_offset=16)], None, None, []), [Return(BinOp(Call(Name('_', Load(), lineno=140, col_offset=15), [Str('no such option: %s', lineno=140, col_offset=17)], [], None, None, lineno=140, col_offset=15), Mod(), Attribute(Name('self', Load(), lineno=140, col_offset=41), 'opt_str', Load(), lineno=140, col_offset=41), lineno=140, col_offset=15), lineno=140, col_offset=8)], [], lineno=139, col_offset=4)], [], lineno=132, col_offset=0), ClassDef('AmbiguousOptionError', [Name('BadOptionError', Load(), lineno=142, col_offset=28)], [Expr(Str('\n    Raised if an ambiguous option is seen on the command line.\n    ', lineno=145, col_offset=-1), lineno=145, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=146, col_offset=17), Name('opt_str', Param(), lineno=146, col_offset=23), Name('possibilities', Param(), lineno=146, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('BadOptionError', Load(), lineno=147, col_offset=8), '__init__', Load(), lineno=147, col_offset=8), [Name('self', Load(), lineno=147, col_offset=32), Name('opt_str', Load(), lineno=147, col_offset=38)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=148, col_offset=8), 'possibilities', Store(), lineno=148, col_offset=8)], Name('possibilities', Load(), lineno=148, col_offset=29), lineno=148, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=150, col_offset=16)], None, None, []), [Return(BinOp(Call(Name('_', Load(), lineno=151, col_offset=16), [Str('ambiguous option: %s (%s?)', lineno=151, col_offset=18)], [], None, None, lineno=151, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=152, col_offset=19), 'opt_str', Load(), lineno=152, col_offset=19), Call(Attribute(Str(', ', lineno=152, col_offset=33), 'join', Load(), lineno=152, col_offset=33), [Attribute(Name('self', Load(), lineno=152, col_offset=43), 'possibilities', Load(), lineno=152, col_offset=43)], [], None, None, lineno=152, col_offset=33)], Load(), lineno=152, col_offset=19), lineno=151, col_offset=16), lineno=151, col_offset=8)], [], lineno=150, col_offset=4)], [], lineno=142, col_offset=0), ClassDef('HelpFormatter', [], [Expr(Str('\n    Abstract base class for formatting option help.  OptionParser\n    instances should use one of the HelpFormatter subclasses for\n    formatting help; by default IndentedHelpFormatter is used.\n\n    Instance attributes:\n      parser : OptionParser\n        the controlling OptionParser instance\n      indent_increment : int\n        the number of columns to indent per nesting level\n      max_help_position : int\n        the maximum starting column for option help text\n      help_position : int\n        the calculated starting column for option help text;\n        initially the same as the maximum\n      width : int\n        total number of columns for output (pass None to constructor for\n        this value to be taken from the $COLUMNS environment variable)\n      level : int\n        current indentation level\n      current_indent : int\n        current indentation level (in columns)\n      help_width : int\n        number of columns available for option help text (calculated)\n      default_tag : str\n        text to replace with each option\'s default value, "%default"\n        by default.  Set to false value to disable default value expansion.\n      option_strings : { Option : str }\n        maps Option instances to the snippet of help text explaining\n        the syntax of that option, e.g. "-h, --help" or\n        "-fFILE, --file=FILE"\n      _short_opt_fmt : str\n        format string controlling how short options with values are\n        printed in help text.  Must be either "%s%s" ("-fFILE") or\n        "%s %s" ("-f FILE"), because those are the two syntaxes that\n        Optik supports.\n      _long_opt_fmt : str\n        similar but for long options; must be either "%s %s" ("--file FILE")\n        or "%s=%s" ("--file=FILE").\n    ', lineno=196, col_offset=-1), lineno=196, col_offset=-1), Assign([Name('NO_DEFAULT_VALUE', Store(), lineno=198, col_offset=4)], Str('none', lineno=198, col_offset=23), lineno=198, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=200, col_offset=17), Name('indent_increment', Param(), lineno=201, col_offset=17), Name('max_help_position', Param(), lineno=202, col_offset=17), Name('width', Param(), lineno=203, col_offset=17), Name('short_first', Param(), lineno=204, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=205, col_offset=8), 'parser', Store(), lineno=205, col_offset=8)], Name('None', Load(), lineno=205, col_offset=22), lineno=205, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=206, col_offset=8), 'indent_increment', Store(), lineno=206, col_offset=8)], Name('indent_increment', Load(), lineno=206, col_offset=32), lineno=206, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=207, col_offset=8), 'help_position', Store(), lineno=207, col_offset=8), Attribute(Name('self', Load(), lineno=207, col_offset=29), 'max_help_position', Store(), lineno=207, col_offset=29)], Name('max_help_position', Load(), lineno=207, col_offset=54), lineno=207, col_offset=8), If(Compare(Name('width', Load(), lineno=208, col_offset=11), [Is()], [Name('None', Load(), lineno=208, col_offset=20)], lineno=208, col_offset=11), [TryExcept([Assign([Name('width', Store(), lineno=210, col_offset=16)], Call(Name('int', Load(), lineno=210, col_offset=24), [Subscript(Attribute(Name('os', Load(), lineno=210, col_offset=28), 'environ', Load(), lineno=210, col_offset=28), Index(Str('COLUMNS', lineno=210, col_offset=39)), Load(), lineno=210, col_offset=28)], [], None, None, lineno=210, col_offset=24), lineno=210, col_offset=16)], [ExceptHandler(Tuple([Name('KeyError', Load(), lineno=211, col_offset=20), Name('ValueError', Load(), lineno=211, col_offset=30)], Load(), lineno=211, col_offset=20), None, [Assign([Name('width', Store(), lineno=212, col_offset=16)], Num(80, lineno=212, col_offset=24), lineno=212, col_offset=16)], lineno=211, col_offset=12)], [], lineno=209, col_offset=12), AugAssign(Name('width', Store(), lineno=213, col_offset=12), Sub(), Num(2, lineno=213, col_offset=21), lineno=213, col_offset=12)], [], lineno=208, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=214, col_offset=8), 'width', Store(), lineno=214, col_offset=8)], Name('width', Load(), lineno=214, col_offset=21), lineno=214, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=215, col_offset=8), 'current_indent', Store(), lineno=215, col_offset=8)], Num(0, lineno=215, col_offset=30), lineno=215, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=216, col_offset=8), 'level', Store(), lineno=216, col_offset=8)], Num(0, lineno=216, col_offset=21), lineno=216, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=217, col_offset=8), 'help_width', Store(), lineno=217, col_offset=8)], Name('None', Load(), lineno=217, col_offset=26), lineno=217, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=218, col_offset=8), 'short_first', Store(), lineno=218, col_offset=8)], Name('short_first', Load(), lineno=218, col_offset=27), lineno=218, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), 'default_tag', Store(), lineno=219, col_offset=8)], Str('%default', lineno=219, col_offset=27), lineno=219, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=220, col_offset=8), 'option_strings', Store(), lineno=220, col_offset=8)], Dict([], [], lineno=220, col_offset=30), lineno=220, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=221, col_offset=8), '_short_opt_fmt', Store(), lineno=221, col_offset=8)], Str('%s %s', lineno=221, col_offset=30), lineno=221, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=222, col_offset=8), '_long_opt_fmt', Store(), lineno=222, col_offset=8)], Str('%s=%s', lineno=222, col_offset=29), lineno=222, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('set_parser', arguments([Name('self', Param(), lineno=224, col_offset=19), Name('parser', Param(), lineno=224, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=225, col_offset=8), 'parser', Store(), lineno=225, col_offset=8)], Name('parser', Load(), lineno=225, col_offset=22), lineno=225, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('set_short_opt_delimiter', arguments([Name('self', Param(), lineno=227, col_offset=32), Name('delim', Param(), lineno=227, col_offset=38)], None, None, []), [If(Compare(Name('delim', Load(), lineno=228, col_offset=11), [NotIn()], [Tuple([Str('', lineno=228, col_offset=25), Str(' ', lineno=228, col_offset=29)], Load(), lineno=228, col_offset=25)], lineno=228, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=229, col_offset=18), [BinOp(Str('invalid metavar delimiter for short options: %r', lineno=230, col_offset=16), Mod(), Name('delim', Load(), lineno=230, col_offset=68), lineno=230, col_offset=16)], [], None, None, lineno=229, col_offset=18), None, None, lineno=229, col_offset=12)], [], lineno=228, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=231, col_offset=8), '_short_opt_fmt', Store(), lineno=231, col_offset=8)], BinOp(BinOp(Str('%s', lineno=231, col_offset=30), Add(), Name('delim', Load(), lineno=231, col_offset=37), lineno=231, col_offset=30), Add(), Str('%s', lineno=231, col_offset=45), lineno=231, col_offset=43), lineno=231, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('set_long_opt_delimiter', arguments([Name('self', Param(), lineno=233, col_offset=31), Name('delim', Param(), lineno=233, col_offset=37)], None, None, []), [If(Compare(Name('delim', Load(), lineno=234, col_offset=11), [NotIn()], [Tuple([Str('=', lineno=234, col_offset=25), Str(' ', lineno=234, col_offset=30)], Load(), lineno=234, col_offset=25)], lineno=234, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=235, col_offset=18), [BinOp(Str('invalid metavar delimiter for long options: %r', lineno=236, col_offset=16), Mod(), Name('delim', Load(), lineno=236, col_offset=67), lineno=236, col_offset=16)], [], None, None, lineno=235, col_offset=18), None, None, lineno=235, col_offset=12)], [], lineno=234, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=237, col_offset=8), '_long_opt_fmt', Store(), lineno=237, col_offset=8)], BinOp(BinOp(Str('%s', lineno=237, col_offset=29), Add(), Name('delim', Load(), lineno=237, col_offset=36), lineno=237, col_offset=29), Add(), Str('%s', lineno=237, col_offset=44), lineno=237, col_offset=42), lineno=237, col_offset=8)], [], lineno=233, col_offset=4), FunctionDef('indent', arguments([Name('self', Param(), lineno=239, col_offset=15)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'current_indent', Store(), lineno=240, col_offset=8), Add(), Attribute(Name('self', Load(), lineno=240, col_offset=31), 'indent_increment', Load(), lineno=240, col_offset=31), lineno=240, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'level', Store(), lineno=241, col_offset=8), Add(), Num(1, lineno=241, col_offset=22), lineno=241, col_offset=8)], [], lineno=239, col_offset=4), FunctionDef('dedent', arguments([Name('self', Param(), lineno=243, col_offset=15)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'current_indent', Store(), lineno=244, col_offset=8), Sub(), Attribute(Name('self', Load(), lineno=244, col_offset=31), 'indent_increment', Load(), lineno=244, col_offset=31), lineno=244, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=245, col_offset=15), 'current_indent', Load(), lineno=245, col_offset=15), [GtE()], [Num(0, lineno=245, col_offset=38)], lineno=245, col_offset=15), Str('Indent decreased below 0.', lineno=245, col_offset=41), lineno=245, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'level', Store(), lineno=246, col_offset=8), Sub(), Num(1, lineno=246, col_offset=22), lineno=246, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('format_usage', arguments([Name('self', Param(), lineno=248, col_offset=21), Name('usage', Param(), lineno=248, col_offset=27)], None, None, []), [Raise(Name('NotImplementedError', Load(), lineno=249, col_offset=14), Str('subclasses must implement', lineno=249, col_offset=35), None, lineno=249, col_offset=8)], [], lineno=248, col_offset=4), FunctionDef('format_heading', arguments([Name('self', Param(), lineno=251, col_offset=23), Name('heading', Param(), lineno=251, col_offset=29)], None, None, []), [Raise(Name('NotImplementedError', Load(), lineno=252, col_offset=14), Str('subclasses must implement', lineno=252, col_offset=35), None, lineno=252, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('_format_text', arguments([Name('self', Param(), lineno=254, col_offset=21), Name('text', Param(), lineno=254, col_offset=27)], None, None, []), [Expr(Str('\n        Format a paragraph of free-form text for inclusion in the\n        help output at the current indentation level.\n        ', lineno=258, col_offset=-1), lineno=258, col_offset=-1), Assign([Name('text_width', Store(), lineno=259, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=259, col_offset=21), 'width', Load(), lineno=259, col_offset=21), Sub(), Attribute(Name('self', Load(), lineno=259, col_offset=34), 'current_indent', Load(), lineno=259, col_offset=34), lineno=259, col_offset=21), lineno=259, col_offset=8), Assign([Name('indent', Store(), lineno=260, col_offset=8)], BinOp(Str(' ', lineno=260, col_offset=17), Mult(), Attribute(Name('self', Load(), lineno=260, col_offset=21), 'current_indent', Load(), lineno=260, col_offset=21), lineno=260, col_offset=17), lineno=260, col_offset=8), Return(Call(Attribute(Name('textwrap', Load(), lineno=261, col_offset=15), 'fill', Load(), lineno=261, col_offset=15), [Name('text', Load(), lineno=261, col_offset=29), Name('text_width', Load(), lineno=262, col_offset=29)], [keyword('initial_indent', Name('indent', Load(), lineno=263, col_offset=44)), keyword('subsequent_indent', Name('indent', Load(), lineno=264, col_offset=47))], None, None, lineno=261, col_offset=15), lineno=261, col_offset=8)], [], lineno=254, col_offset=4), FunctionDef('format_description', arguments([Name('self', Param(), lineno=266, col_offset=27), Name('description', Param(), lineno=266, col_offset=33)], None, None, []), [If(Name('description', Load(), lineno=267, col_offset=11), [Return(BinOp(Call(Attribute(Name('self', Load(), lineno=268, col_offset=19), '_format_text', Load(), lineno=268, col_offset=19), [Name('description', Load(), lineno=268, col_offset=37)], [], None, None, lineno=268, col_offset=19), Add(), Str('\n', lineno=268, col_offset=52), lineno=268, col_offset=19), lineno=268, col_offset=12)], [Return(Str('', lineno=270, col_offset=19), lineno=270, col_offset=12)], lineno=267, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('format_epilog', arguments([Name('self', Param(), lineno=272, col_offset=22), Name('epilog', Param(), lineno=272, col_offset=28)], None, None, []), [If(Name('epilog', Load(), lineno=273, col_offset=11), [Return(BinOp(BinOp(Str('\n', lineno=274, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=274, col_offset=26), '_format_text', Load(), lineno=274, col_offset=26), [Name('epilog', Load(), lineno=274, col_offset=44)], [], None, None, lineno=274, col_offset=26), lineno=274, col_offset=19), Add(), Str('\n', lineno=274, col_offset=54), lineno=274, col_offset=52), lineno=274, col_offset=12)], [Return(Str('', lineno=276, col_offset=19), lineno=276, col_offset=12)], lineno=273, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('expand_default', arguments([Name('self', Param(), lineno=279, col_offset=23), Name('option', Param(), lineno=279, col_offset=29)], None, None, []), [If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=280, col_offset=11), 'parser', Load(), lineno=280, col_offset=11), [Is()], [Name('None', Load(), lineno=280, col_offset=26)], lineno=280, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=280, col_offset=38), 'default_tag', Load(), lineno=280, col_offset=38), lineno=280, col_offset=34)], lineno=280, col_offset=11), [Return(Attribute(Name('option', Load(), lineno=281, col_offset=19), 'help', Load(), lineno=281, col_offset=19), lineno=281, col_offset=12)], [], lineno=280, col_offset=8), Assign([Name('default_value', Store(), lineno=283, col_offset=8)], Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=283, col_offset=24), 'parser', Load(), lineno=283, col_offset=24), 'defaults', Load(), lineno=283, col_offset=24), 'get', Load(), lineno=283, col_offset=24), [Attribute(Name('option', Load(), lineno=283, col_offset=49), 'dest', Load(), lineno=283, col_offset=49)], [], None, None, lineno=283, col_offset=24), lineno=283, col_offset=8), If(BoolOp(Or(), [Compare(Name('default_value', Load(), lineno=284, col_offset=11), [Is()], [Name('NO_DEFAULT', Load(), lineno=284, col_offset=28)], lineno=284, col_offset=11), Compare(Name('default_value', Load(), lineno=284, col_offset=42), [Is()], [Name('None', Load(), lineno=284, col_offset=59)], lineno=284, col_offset=42)], lineno=284, col_offset=11), [Assign([Name('default_value', Store(), lineno=285, col_offset=12)], Attribute(Name('self', Load(), lineno=285, col_offset=28), 'NO_DEFAULT_VALUE', Load(), lineno=285, col_offset=28), lineno=285, col_offset=12)], [], lineno=284, col_offset=8), Return(Call(Attribute(Attribute(Name('option', Load(), lineno=287, col_offset=15), 'help', Load(), lineno=287, col_offset=15), 'replace', Load(), lineno=287, col_offset=15), [Attribute(Name('self', Load(), lineno=287, col_offset=35), 'default_tag', Load(), lineno=287, col_offset=35), Call(Name('str', Load(), lineno=287, col_offset=53), [Name('default_value', Load(), lineno=287, col_offset=57)], [], None, None, lineno=287, col_offset=53)], [], None, None, lineno=287, col_offset=15), lineno=287, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('format_option', arguments([Name('self', Param(), lineno=289, col_offset=22), Name('option', Param(), lineno=289, col_offset=28)], None, None, []), [Assign([Name('result', Store(), lineno=304, col_offset=8)], List([], Load(), lineno=304, col_offset=17), lineno=304, col_offset=8), Assign([Name('opts', Store(), lineno=305, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=305, col_offset=15), 'option_strings', Load(), lineno=305, col_offset=15), Index(Name('option', Load(), lineno=305, col_offset=35)), Load(), lineno=305, col_offset=15), lineno=305, col_offset=8), Assign([Name('opt_width', Store(), lineno=306, col_offset=8)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=306, col_offset=20), 'help_position', Load(), lineno=306, col_offset=20), Sub(), Attribute(Name('self', Load(), lineno=306, col_offset=41), 'current_indent', Load(), lineno=306, col_offset=41), lineno=306, col_offset=20), Sub(), Num(2, lineno=306, col_offset=63), lineno=306, col_offset=61), lineno=306, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=307, col_offset=11), [Name('opts', Load(), lineno=307, col_offset=15)], [], None, None, lineno=307, col_offset=11), [Gt()], [Name('opt_width', Load(), lineno=307, col_offset=23)], lineno=307, col_offset=11), [Assign([Name('opts', Store(), lineno=308, col_offset=12)], BinOp(Str('%*s%s\n', lineno=308, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=308, col_offset=32), 'current_indent', Load(), lineno=308, col_offset=32), Str('', lineno=308, col_offset=53), Name('opts', Load(), lineno=308, col_offset=57)], Load(), lineno=308, col_offset=32), lineno=308, col_offset=19), lineno=308, col_offset=12), Assign([Name('indent_first', Store(), lineno=309, col_offset=12)], Attribute(Name('self', Load(), lineno=309, col_offset=27), 'help_position', Load(), lineno=309, col_offset=27), lineno=309, col_offset=12)], [Assign([Name('opts', Store(), lineno=311, col_offset=12)], BinOp(Str('%*s%-*s  ', lineno=311, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=311, col_offset=34), 'current_indent', Load(), lineno=311, col_offset=34), Str('', lineno=311, col_offset=55), Name('opt_width', Load(), lineno=311, col_offset=59), Name('opts', Load(), lineno=311, col_offset=70)], Load(), lineno=311, col_offset=34), lineno=311, col_offset=19), lineno=311, col_offset=12), Assign([Name('indent_first', Store(), lineno=312, col_offset=12)], Num(0, lineno=312, col_offset=27), lineno=312, col_offset=12)], lineno=307, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=313, col_offset=8), 'append', Load(), lineno=313, col_offset=8), [Name('opts', Load(), lineno=313, col_offset=22)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), If(Attribute(Name('option', Load(), lineno=314, col_offset=11), 'help', Load(), lineno=314, col_offset=11), [Assign([Name('help_text', Store(), lineno=315, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=315, col_offset=24), 'expand_default', Load(), lineno=315, col_offset=24), [Name('option', Load(), lineno=315, col_offset=44)], [], None, None, lineno=315, col_offset=24), lineno=315, col_offset=12), Assign([Name('help_lines', Store(), lineno=316, col_offset=12)], Call(Attribute(Name('textwrap', Load(), lineno=316, col_offset=25), 'wrap', Load(), lineno=316, col_offset=25), [Name('help_text', Load(), lineno=316, col_offset=39), Attribute(Name('self', Load(), lineno=316, col_offset=50), 'help_width', Load(), lineno=316, col_offset=50)], [], None, None, lineno=316, col_offset=25), lineno=316, col_offset=12), Expr(Call(Attribute(Name('result', Load(), lineno=317, col_offset=12), 'append', Load(), lineno=317, col_offset=12), [BinOp(Str('%*s%s\n', lineno=317, col_offset=26), Mod(), Tuple([Name('indent_first', Load(), lineno=317, col_offset=39), Str('', lineno=317, col_offset=53), Subscript(Name('help_lines', Load(), lineno=317, col_offset=57), Index(Num(0, lineno=317, col_offset=68)), Load(), lineno=317, col_offset=57)], Load(), lineno=317, col_offset=39), lineno=317, col_offset=26)], [], None, None, lineno=317, col_offset=12), lineno=317, col_offset=12), Expr(Call(Attribute(Name('result', Load(), lineno=318, col_offset=12), 'extend', Load(), lineno=318, col_offset=12), [ListComp(BinOp(Str('%*s%s\n', lineno=318, col_offset=27), Mod(), Tuple([Attribute(Name('self', Load(), lineno=318, col_offset=40), 'help_position', Load(), lineno=318, col_offset=40), Str('', lineno=318, col_offset=60), Name('line', Load(), lineno=318, col_offset=64)], Load(), lineno=318, col_offset=40), lineno=318, col_offset=27), [comprehension(Name('line', Store(), lineno=319, col_offset=31), Subscript(Name('help_lines', Load(), lineno=319, col_offset=39), Slice(Num(1, lineno=319, col_offset=50), None, None), Load(), lineno=319, col_offset=39), [])], lineno=318, col_offset=27)], [], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12)], [If(Compare(Subscript(Name('opts', Load(), lineno=320, col_offset=13), Index(Num(-1, lineno=320, col_offset=19)), Load(), lineno=320, col_offset=13), [NotEq()], [Str('\n', lineno=320, col_offset=25)], lineno=320, col_offset=13), [Expr(Call(Attribute(Name('result', Load(), lineno=321, col_offset=12), 'append', Load(), lineno=321, col_offset=12), [Str('\n', lineno=321, col_offset=26)], [], None, None, lineno=321, col_offset=12), lineno=321, col_offset=12)], [], lineno=320, col_offset=13)], lineno=314, col_offset=8), Return(Call(Attribute(Str('', lineno=322, col_offset=15), 'join', Load(), lineno=322, col_offset=15), [Name('result', Load(), lineno=322, col_offset=23)], [], None, None, lineno=322, col_offset=15), lineno=322, col_offset=8)], [], lineno=289, col_offset=4), FunctionDef('store_option_strings', arguments([Name('self', Param(), lineno=324, col_offset=29), Name('parser', Param(), lineno=324, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'indent', Load(), lineno=325, col_offset=8), [], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Assign([Name('max_len', Store(), lineno=326, col_offset=8)], Num(0, lineno=326, col_offset=18), lineno=326, col_offset=8), For(Name('opt', Store(), lineno=327, col_offset=12), Attribute(Name('parser', Load(), lineno=327, col_offset=19), 'option_list', Load(), lineno=327, col_offset=19), [Assign([Name('strings', Store(), lineno=328, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=328, col_offset=22), 'format_option_strings', Load(), lineno=328, col_offset=22), [Name('opt', Load(), lineno=328, col_offset=49)], [], None, None, lineno=328, col_offset=22), lineno=328, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=329, col_offset=12), 'option_strings', Load(), lineno=329, col_offset=12), Index(Name('opt', Load(), lineno=329, col_offset=32)), Store(), lineno=329, col_offset=12)], Name('strings', Load(), lineno=329, col_offset=39), lineno=329, col_offset=12), Assign([Name('max_len', Store(), lineno=330, col_offset=12)], Call(Name('max', Load(), lineno=330, col_offset=22), [Name('max_len', Load(), lineno=330, col_offset=26), BinOp(Call(Name('len', Load(), lineno=330, col_offset=35), [Name('strings', Load(), lineno=330, col_offset=39)], [], None, None, lineno=330, col_offset=35), Add(), Attribute(Name('self', Load(), lineno=330, col_offset=50), 'current_indent', Load(), lineno=330, col_offset=50), lineno=330, col_offset=35)], [], None, None, lineno=330, col_offset=22), lineno=330, col_offset=12)], [], lineno=327, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=8), 'indent', Load(), lineno=331, col_offset=8), [], [], None, None, lineno=331, col_offset=8), lineno=331, col_offset=8), For(Name('group', Store(), lineno=332, col_offset=12), Attribute(Name('parser', Load(), lineno=332, col_offset=21), 'option_groups', Load(), lineno=332, col_offset=21), [For(Name('opt', Store(), lineno=333, col_offset=16), Attribute(Name('group', Load(), lineno=333, col_offset=23), 'option_list', Load(), lineno=333, col_offset=23), [Assign([Name('strings', Store(), lineno=334, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=334, col_offset=26), 'format_option_strings', Load(), lineno=334, col_offset=26), [Name('opt', Load(), lineno=334, col_offset=53)], [], None, None, lineno=334, col_offset=26), lineno=334, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=335, col_offset=16), 'option_strings', Load(), lineno=335, col_offset=16), Index(Name('opt', Load(), lineno=335, col_offset=36)), Store(), lineno=335, col_offset=16)], Name('strings', Load(), lineno=335, col_offset=43), lineno=335, col_offset=16), Assign([Name('max_len', Store(), lineno=336, col_offset=16)], Call(Name('max', Load(), lineno=336, col_offset=26), [Name('max_len', Load(), lineno=336, col_offset=30), BinOp(Call(Name('len', Load(), lineno=336, col_offset=39), [Name('strings', Load(), lineno=336, col_offset=43)], [], None, None, lineno=336, col_offset=39), Add(), Attribute(Name('self', Load(), lineno=336, col_offset=54), 'current_indent', Load(), lineno=336, col_offset=54), lineno=336, col_offset=39)], [], None, None, lineno=336, col_offset=26), lineno=336, col_offset=16)], [], lineno=333, col_offset=12)], [], lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'dedent', Load(), lineno=337, col_offset=8), [], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'dedent', Load(), lineno=338, col_offset=8), [], [], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=339, col_offset=8), 'help_position', Store(), lineno=339, col_offset=8)], Call(Name('min', Load(), lineno=339, col_offset=29), [BinOp(Name('max_len', Load(), lineno=339, col_offset=33), Add(), Num(2, lineno=339, col_offset=43), lineno=339, col_offset=33), Attribute(Name('self', Load(), lineno=339, col_offset=46), 'max_help_position', Load(), lineno=339, col_offset=46)], [], None, None, lineno=339, col_offset=29), lineno=339, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=340, col_offset=8), 'help_width', Store(), lineno=340, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=340, col_offset=26), 'width', Load(), lineno=340, col_offset=26), Sub(), Attribute(Name('self', Load(), lineno=340, col_offset=39), 'help_position', Load(), lineno=340, col_offset=39), lineno=340, col_offset=26), lineno=340, col_offset=8)], [], lineno=324, col_offset=4), FunctionDef('format_option_strings', arguments([Name('self', Param(), lineno=342, col_offset=30), Name('option', Param(), lineno=342, col_offset=36)], None, None, []), [Expr(Str('Return a comma-separated list of option strings & metavariables.', lineno=343, col_offset=8), lineno=343, col_offset=8), If(Call(Attribute(Name('option', Load(), lineno=344, col_offset=11), 'takes_value', Load(), lineno=344, col_offset=11), [], [], None, None, lineno=344, col_offset=11), [Assign([Name('metavar', Store(), lineno=345, col_offset=12)], BoolOp(Or(), [Attribute(Name('option', Load(), lineno=345, col_offset=22), 'metavar', Load(), lineno=345, col_offset=22), Call(Attribute(Attribute(Name('option', Load(), lineno=345, col_offset=40), 'dest', Load(), lineno=345, col_offset=40), 'upper', Load(), lineno=345, col_offset=40), [], [], None, None, lineno=345, col_offset=40)], lineno=345, col_offset=22), lineno=345, col_offset=12), Assign([Name('short_opts', Store(), lineno=346, col_offset=12)], ListComp(BinOp(Attribute(Name('self', Load(), lineno=346, col_offset=26), '_short_opt_fmt', Load(), lineno=346, col_offset=26), Mod(), Tuple([Name('sopt', Load(), lineno=346, col_offset=49), Name('metavar', Load(), lineno=346, col_offset=55)], Load(), lineno=346, col_offset=49), lineno=346, col_offset=26), [comprehension(Name('sopt', Store(), lineno=347, col_offset=30), Attribute(Name('option', Load(), lineno=347, col_offset=38), '_short_opts', Load(), lineno=347, col_offset=38), [])], lineno=346, col_offset=26), lineno=346, col_offset=12), Assign([Name('long_opts', Store(), lineno=348, col_offset=12)], ListComp(BinOp(Attribute(Name('self', Load(), lineno=348, col_offset=25), '_long_opt_fmt', Load(), lineno=348, col_offset=25), Mod(), Tuple([Name('lopt', Load(), lineno=348, col_offset=47), Name('metavar', Load(), lineno=348, col_offset=53)], Load(), lineno=348, col_offset=47), lineno=348, col_offset=25), [comprehension(Name('lopt', Store(), lineno=349, col_offset=29), Attribute(Name('option', Load(), lineno=349, col_offset=37), '_long_opts', Load(), lineno=349, col_offset=37), [])], lineno=348, col_offset=25), lineno=348, col_offset=12)], [Assign([Name('short_opts', Store(), lineno=351, col_offset=12)], Attribute(Name('option', Load(), lineno=351, col_offset=25), '_short_opts', Load(), lineno=351, col_offset=25), lineno=351, col_offset=12), Assign([Name('long_opts', Store(), lineno=352, col_offset=12)], Attribute(Name('option', Load(), lineno=352, col_offset=24), '_long_opts', Load(), lineno=352, col_offset=24), lineno=352, col_offset=12)], lineno=344, col_offset=8), If(Attribute(Name('self', Load(), lineno=354, col_offset=11), 'short_first', Load(), lineno=354, col_offset=11), [Assign([Name('opts', Store(), lineno=355, col_offset=12)], BinOp(Name('short_opts', Load(), lineno=355, col_offset=19), Add(), Name('long_opts', Load(), lineno=355, col_offset=32), lineno=355, col_offset=19), lineno=355, col_offset=12)], [Assign([Name('opts', Store(), lineno=357, col_offset=12)], BinOp(Name('long_opts', Load(), lineno=357, col_offset=19), Add(), Name('short_opts', Load(), lineno=357, col_offset=31), lineno=357, col_offset=19), lineno=357, col_offset=12)], lineno=354, col_offset=8), Return(Call(Attribute(Str(', ', lineno=359, col_offset=15), 'join', Load(), lineno=359, col_offset=15), [Name('opts', Load(), lineno=359, col_offset=25)], [], None, None, lineno=359, col_offset=15), lineno=359, col_offset=8)], [], lineno=342, col_offset=4)], [], lineno=155, col_offset=0), ClassDef('IndentedHelpFormatter', [Name('HelpFormatter', Load(), lineno=361, col_offset=29)], [Expr(Str('Format help with indented section bodies.\n    ', lineno=363, col_offset=-1), lineno=363, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=365, col_offset=17), Name('indent_increment', Param(), lineno=366, col_offset=17), Name('max_help_position', Param(), lineno=367, col_offset=17), Name('width', Param(), lineno=368, col_offset=17), Name('short_first', Param(), lineno=369, col_offset=17)], None, None, [Num(2, lineno=366, col_offset=34), Num(24, lineno=367, col_offset=35), Name('None', Load(), lineno=368, col_offset=23), Num(1, lineno=369, col_offset=29)]), [Expr(Call(Attribute(Name('HelpFormatter', Load(), lineno=370, col_offset=8), '__init__', Load(), lineno=370, col_offset=8), [Name('self', Load(), lineno=371, col_offset=12), Name('indent_increment', Load(), lineno=371, col_offset=18), Name('max_help_position', Load(), lineno=371, col_offset=36), Name('width', Load(), lineno=371, col_offset=55), Name('short_first', Load(), lineno=371, col_offset=62)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('format_usage', arguments([Name('self', Param(), lineno=373, col_offset=21), Name('usage', Param(), lineno=373, col_offset=27)], None, None, []), [Return(BinOp(Call(Name('_', Load(), lineno=374, col_offset=15), [Str('Usage: %s\n', lineno=374, col_offset=17)], [], None, None, lineno=374, col_offset=15), Mod(), Name('usage', Load(), lineno=374, col_offset=34), lineno=374, col_offset=15), lineno=374, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('format_heading', arguments([Name('self', Param(), lineno=376, col_offset=23), Name('heading', Param(), lineno=376, col_offset=29)], None, None, []), [Return(BinOp(Str('%*s%s:\n', lineno=377, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=377, col_offset=29), 'current_indent', Load(), lineno=377, col_offset=29), Str('', lineno=377, col_offset=50), Name('heading', Load(), lineno=377, col_offset=54)], Load(), lineno=377, col_offset=29), lineno=377, col_offset=15), lineno=377, col_offset=8)], [], lineno=376, col_offset=4)], [], lineno=361, col_offset=0), ClassDef('TitledHelpFormatter', [Name('HelpFormatter', Load(), lineno=380, col_offset=27)], [Expr(Str('Format help with underlined section headers.\n    ', lineno=382, col_offset=-1), lineno=382, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=384, col_offset=17), Name('indent_increment', Param(), lineno=385, col_offset=17), Name('max_help_position', Param(), lineno=386, col_offset=17), Name('width', Param(), lineno=387, col_offset=17), Name('short_first', Param(), lineno=388, col_offset=17)], None, None, [Num(0, lineno=385, col_offset=34), Num(24, lineno=386, col_offset=35), Name('None', Load(), lineno=387, col_offset=23), Num(0, lineno=388, col_offset=29)]), [Expr(Call(Attribute(Name('HelpFormatter', Load(), lineno=389, col_offset=8), '__init__', Load(), lineno=389, col_offset=8), [Name('self', Load(), lineno=390, col_offset=12), Name('indent_increment', Load(), lineno=390, col_offset=18), Name('max_help_position', Load(), lineno=390, col_offset=36), Name('width', Load(), lineno=390, col_offset=55), Name('short_first', Load(), lineno=390, col_offset=62)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8)], [], lineno=384, col_offset=4), FunctionDef('format_usage', arguments([Name('self', Param(), lineno=392, col_offset=21), Name('usage', Param(), lineno=392, col_offset=27)], None, None, []), [Return(BinOp(Str('%s  %s\n', lineno=393, col_offset=15), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=393, col_offset=29), 'format_heading', Load(), lineno=393, col_offset=29), [Call(Name('_', Load(), lineno=393, col_offset=49), [Str('Usage', lineno=393, col_offset=51)], [], None, None, lineno=393, col_offset=49)], [], None, None, lineno=393, col_offset=29), Name('usage', Load(), lineno=393, col_offset=62)], Load(), lineno=393, col_offset=29), lineno=393, col_offset=15), lineno=393, col_offset=8)], [], lineno=392, col_offset=4), FunctionDef('format_heading', arguments([Name('self', Param(), lineno=395, col_offset=23), Name('heading', Param(), lineno=395, col_offset=29)], None, None, []), [Return(BinOp(Str('%s\n%s\n', lineno=396, col_offset=15), Mod(), Tuple([Name('heading', Load(), lineno=396, col_offset=29), BinOp(Subscript(Str('=-', lineno=396, col_offset=38), Index(Attribute(Name('self', Load(), lineno=396, col_offset=43), 'level', Load(), lineno=396, col_offset=43)), Load(), lineno=396, col_offset=38), Mult(), Call(Name('len', Load(), lineno=396, col_offset=57), [Name('heading', Load(), lineno=396, col_offset=61)], [], None, None, lineno=396, col_offset=57), lineno=396, col_offset=38)], Load(), lineno=396, col_offset=29), lineno=396, col_offset=15), lineno=396, col_offset=8)], [], lineno=395, col_offset=4)], [], lineno=380, col_offset=0), FunctionDef('_parse_num', arguments([Name('val', Param(), lineno=399, col_offset=15), Name('type', Param(), lineno=399, col_offset=20)], None, None, []), [If(Compare(Call(Attribute(Subscript(Name('val', Load(), lineno=400, col_offset=7), Slice(None, Num(2, lineno=400, col_offset=12), None), Load(), lineno=400, col_offset=7), 'lower', Load(), lineno=400, col_offset=7), [], [], None, None, lineno=400, col_offset=7), [Eq()], [Str('0x', lineno=400, col_offset=26)], lineno=400, col_offset=7), [Assign([Name('radix', Store(), lineno=401, col_offset=8)], Num(16, lineno=401, col_offset=16), lineno=401, col_offset=8)], [If(Compare(Call(Attribute(Subscript(Name('val', Load(), lineno=402, col_offset=9), Slice(None, Num(2, lineno=402, col_offset=14), None), Load(), lineno=402, col_offset=9), 'lower', Load(), lineno=402, col_offset=9), [], [], None, None, lineno=402, col_offset=9), [Eq()], [Str('0b', lineno=402, col_offset=28)], lineno=402, col_offset=9), [Assign([Name('radix', Store(), lineno=403, col_offset=8)], Num(2, lineno=403, col_offset=16), lineno=403, col_offset=8), Assign([Name('val', Store(), lineno=404, col_offset=8)], BoolOp(Or(), [Subscript(Name('val', Load(), lineno=404, col_offset=14), Slice(Num(2, lineno=404, col_offset=18), None, None), Load(), lineno=404, col_offset=14), Str('0', lineno=404, col_offset=25)], lineno=404, col_offset=14), lineno=404, col_offset=8)], [If(Compare(Subscript(Name('val', Load(), lineno=405, col_offset=9), Slice(None, Num(1, lineno=405, col_offset=14), None), Load(), lineno=405, col_offset=9), [Eq()], [Str('0', lineno=405, col_offset=20)], lineno=405, col_offset=9), [Assign([Name('radix', Store(), lineno=406, col_offset=8)], Num(8, lineno=406, col_offset=16), lineno=406, col_offset=8)], [Assign([Name('radix', Store(), lineno=408, col_offset=8)], Num(10, lineno=408, col_offset=16), lineno=408, col_offset=8)], lineno=405, col_offset=9)], lineno=402, col_offset=9)], lineno=400, col_offset=4), Return(Call(Name('type', Load(), lineno=410, col_offset=11), [Name('val', Load(), lineno=410, col_offset=16), Name('radix', Load(), lineno=410, col_offset=21)], [], None, None, lineno=410, col_offset=11), lineno=410, col_offset=4)], [], lineno=399, col_offset=0), FunctionDef('_parse_int', arguments([Name('val', Param(), lineno=412, col_offset=15)], None, None, []), [Return(Call(Name('_parse_num', Load(), lineno=413, col_offset=11), [Name('val', Load(), lineno=413, col_offset=22), Name('int', Load(), lineno=413, col_offset=27)], [], None, None, lineno=413, col_offset=11), lineno=413, col_offset=4)], [], lineno=412, col_offset=0), FunctionDef('_parse_long', arguments([Name('val', Param(), lineno=415, col_offset=16)], None, None, []), [Return(Call(Name('_parse_num', Load(), lineno=416, col_offset=11), [Name('val', Load(), lineno=416, col_offset=22), Name('long', Load(), lineno=416, col_offset=27)], [], None, None, lineno=416, col_offset=11), lineno=416, col_offset=4)], [], lineno=415, col_offset=0), Assign([Name('_builtin_cvt', Store(), lineno=418, col_offset=0)], Dict([Str('int', lineno=418, col_offset=17), Str('long', lineno=419, col_offset=17), Str('float', lineno=420, col_offset=17), Str('complex', lineno=421, col_offset=17)], [Tuple([Name('_parse_int', Load(), lineno=418, col_offset=26), Call(Name('_', Load(), lineno=418, col_offset=38), [Str('integer', lineno=418, col_offset=40)], [], None, None, lineno=418, col_offset=38)], Load(), lineno=418, col_offset=26), Tuple([Name('_parse_long', Load(), lineno=419, col_offset=27), Call(Name('_', Load(), lineno=419, col_offset=40), [Str('long integer', lineno=419, col_offset=42)], [], None, None, lineno=419, col_offset=40)], Load(), lineno=419, col_offset=27), Tuple([Name('float', Load(), lineno=420, col_offset=28), Call(Name('_', Load(), lineno=420, col_offset=35), [Str('floating-point', lineno=420, col_offset=37)], [], None, None, lineno=420, col_offset=35)], Load(), lineno=420, col_offset=28), Tuple([Name('complex', Load(), lineno=421, col_offset=30), Call(Name('_', Load(), lineno=421, col_offset=39), [Str('complex', lineno=421, col_offset=41)], [], None, None, lineno=421, col_offset=39)], Load(), lineno=421, col_offset=30)], lineno=418, col_offset=15), lineno=418, col_offset=0), FunctionDef('check_builtin', arguments([Name('option', Param(), lineno=423, col_offset=18), Name('opt', Param(), lineno=423, col_offset=26), Name('value', Param(), lineno=423, col_offset=31)], None, None, []), [Assign([Tuple([Name('cvt', Store(), lineno=424, col_offset=5), Name('what', Store(), lineno=424, col_offset=10)], Store(), lineno=424, col_offset=5)], Subscript(Name('_builtin_cvt', Load(), lineno=424, col_offset=18), Index(Attribute(Name('option', Load(), lineno=424, col_offset=31), 'type', Load(), lineno=424, col_offset=31)), Load(), lineno=424, col_offset=18), lineno=424, col_offset=4), TryExcept([Return(Call(Name('cvt', Load(), lineno=426, col_offset=15), [Name('value', Load(), lineno=426, col_offset=19)], [], None, None, lineno=426, col_offset=15), lineno=426, col_offset=8)], [ExceptHandler(Name('ValueError', Load(), lineno=427, col_offset=11), None, [Raise(Call(Name('OptionValueError', Load(), lineno=428, col_offset=14), [BinOp(Call(Name('_', Load(), lineno=429, col_offset=12), [Str('option %s: invalid %s value: %r', lineno=429, col_offset=14)], [], None, None, lineno=429, col_offset=12), Mod(), Tuple([Name('opt', Load(), lineno=429, col_offset=52), Name('what', Load(), lineno=429, col_offset=57), Name('value', Load(), lineno=429, col_offset=63)], Load(), lineno=429, col_offset=52), lineno=429, col_offset=12)], [], None, None, lineno=428, col_offset=14), None, None, lineno=428, col_offset=8)], lineno=427, col_offset=4)], [], lineno=425, col_offset=4)], [], lineno=423, col_offset=0), FunctionDef('check_choice', arguments([Name('option', Param(), lineno=431, col_offset=17), Name('opt', Param(), lineno=431, col_offset=25), Name('value', Param(), lineno=431, col_offset=30)], None, None, []), [If(Compare(Name('value', Load(), lineno=432, col_offset=7), [In()], [Attribute(Name('option', Load(), lineno=432, col_offset=16), 'choices', Load(), lineno=432, col_offset=16)], lineno=432, col_offset=7), [Return(Name('value', Load(), lineno=433, col_offset=15), lineno=433, col_offset=8)], [Assign([Name('choices', Store(), lineno=435, col_offset=8)], Call(Attribute(Str(', ', lineno=435, col_offset=18), 'join', Load(), lineno=435, col_offset=18), [Call(Name('map', Load(), lineno=435, col_offset=28), [Name('repr', Load(), lineno=435, col_offset=32), Attribute(Name('option', Load(), lineno=435, col_offset=38), 'choices', Load(), lineno=435, col_offset=38)], [], None, None, lineno=435, col_offset=28)], [], None, None, lineno=435, col_offset=18), lineno=435, col_offset=8), Raise(Call(Name('OptionValueError', Load(), lineno=436, col_offset=14), [BinOp(Call(Name('_', Load(), lineno=437, col_offset=12), [Str('option %s: invalid choice: %r (choose from %s)', lineno=437, col_offset=14)], [], None, None, lineno=437, col_offset=12), Mod(), Tuple([Name('opt', Load(), lineno=438, col_offset=15), Name('value', Load(), lineno=438, col_offset=20), Name('choices', Load(), lineno=438, col_offset=27)], Load(), lineno=438, col_offset=15), lineno=437, col_offset=12)], [], None, None, lineno=436, col_offset=14), None, None, lineno=436, col_offset=8)], lineno=432, col_offset=4)], [], lineno=431, col_offset=0), Assign([Name('NO_DEFAULT', Store(), lineno=442, col_offset=0)], Tuple([Str('NO', lineno=442, col_offset=14), Str('DEFAULT', lineno=442, col_offset=20)], Load(), lineno=442, col_offset=14), lineno=442, col_offset=0), ClassDef('Option', [], [Expr(Str('\n    Instance attributes:\n      _short_opts : [string]\n      _long_opts : [string]\n\n      action : string\n      type : string\n      dest : string\n      default : any\n      nargs : int\n      const : any\n      choices : [string]\n      callback : function\n      callback_args : (any*)\n      callback_kwargs : { string : any }\n      help : string\n      metavar : string\n    ', lineno=463, col_offset=-1), lineno=463, col_offset=-1), Assign([Name('ATTRS', Store(), lineno=467, col_offset=4)], List([Str('action', lineno=467, col_offset=13), Str('type', lineno=468, col_offset=13), Str('dest', lineno=469, col_offset=13), Str('default', lineno=470, col_offset=13), Str('nargs', lineno=471, col_offset=13), Str('const', lineno=472, col_offset=13), Str('choices', lineno=473, col_offset=13), Str('callback', lineno=474, col_offset=13), Str('callback_args', lineno=475, col_offset=13), Str('callback_kwargs', lineno=476, col_offset=13), Str('help', lineno=477, col_offset=13), Str('metavar', lineno=478, col_offset=13)], Load(), lineno=467, col_offset=12), lineno=467, col_offset=4), Assign([Name('ACTIONS', Store(), lineno=482, col_offset=4)], Tuple([Str('store', lineno=482, col_offset=15), Str('store_const', lineno=483, col_offset=15), Str('store_true', lineno=484, col_offset=15), Str('store_false', lineno=485, col_offset=15), Str('append', lineno=486, col_offset=15), Str('append_const', lineno=487, col_offset=15), Str('count', lineno=488, col_offset=15), Str('callback', lineno=489, col_offset=15), Str('help', lineno=490, col_offset=15), Str('version', lineno=491, col_offset=15)], Load(), lineno=482, col_offset=15), lineno=482, col_offset=4), Assign([Name('STORE_ACTIONS', Store(), lineno=496, col_offset=4)], Tuple([Str('store', lineno=496, col_offset=21), Str('store_const', lineno=497, col_offset=21), Str('store_true', lineno=498, col_offset=21), Str('store_false', lineno=499, col_offset=21), Str('append', lineno=500, col_offset=21), Str('append_const', lineno=501, col_offset=21), Str('count', lineno=502, col_offset=21)], Load(), lineno=496, col_offset=21), lineno=496, col_offset=4), Assign([Name('TYPED_ACTIONS', Store(), lineno=506, col_offset=4)], Tuple([Str('store', lineno=506, col_offset=21), Str('append', lineno=507, col_offset=21), Str('callback', lineno=508, col_offset=21)], Load(), lineno=506, col_offset=21), lineno=506, col_offset=4), Assign([Name('ALWAYS_TYPED_ACTIONS', Store(), lineno=512, col_offset=4)], Tuple([Str('store', lineno=512, col_offset=28), Str('append', lineno=513, col_offset=28)], Load(), lineno=512, col_offset=28), lineno=512, col_offset=4), Assign([Name('CONST_ACTIONS', Store(), lineno=516, col_offset=4)], Tuple([Str('store_const', lineno=516, col_offset=21), Str('append_const', lineno=517, col_offset=21)], Load(), lineno=516, col_offset=21), lineno=516, col_offset=4), Assign([Name('TYPES', Store(), lineno=521, col_offset=4)], Tuple([Str('string', lineno=521, col_offset=13), Str('int', lineno=521, col_offset=23), Str('long', lineno=521, col_offset=30), Str('float', lineno=521, col_offset=38), Str('complex', lineno=521, col_offset=47), Str('choice', lineno=521, col_offset=58)], Load(), lineno=521, col_offset=13), lineno=521, col_offset=4), Assign([Name('TYPE_CHECKER', Store(), lineno=539, col_offset=4)], Dict([Str('int', lineno=539, col_offset=21), Str('long', lineno=540, col_offset=21), Str('float', lineno=541, col_offset=21), Str('complex', lineno=542, col_offset=21), Str('choice', lineno=543, col_offset=21)], [Name('check_builtin', Load(), lineno=539, col_offset=32), Name('check_builtin', Load(), lineno=540, col_offset=32), Name('check_builtin', Load(), lineno=541, col_offset=32), Name('check_builtin', Load(), lineno=542, col_offset=32), Name('check_choice', Load(), lineno=543, col_offset=32)], lineno=539, col_offset=19), lineno=539, col_offset=4), Assign([Name('CHECK_METHODS', Store(), lineno=555, col_offset=4)], Name('None', Load(), lineno=555, col_offset=20), lineno=555, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=560, col_offset=17)], 'opts', 'attrs', []), [Assign([Attribute(Name('self', Load(), lineno=563, col_offset=8), '_short_opts', Store(), lineno=563, col_offset=8)], List([], Load(), lineno=563, col_offset=27), lineno=563, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=564, col_offset=8), '_long_opts', Store(), lineno=564, col_offset=8)], List([], Load(), lineno=564, col_offset=26), lineno=564, col_offset=8), Assign([Name('opts', Store(), lineno=565, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=565, col_offset=15), '_check_opt_strings', Load(), lineno=565, col_offset=15), [Name('opts', Load(), lineno=565, col_offset=39)], [], None, None, lineno=565, col_offset=15), lineno=565, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=566, col_offset=8), '_set_opt_strings', Load(), lineno=566, col_offset=8), [Name('opts', Load(), lineno=566, col_offset=30)], [], None, None, lineno=566, col_offset=8), lineno=566, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=569, col_offset=8), '_set_attrs', Load(), lineno=569, col_offset=8), [Name('attrs', Load(), lineno=569, col_offset=24)], [], None, None, lineno=569, col_offset=8), lineno=569, col_offset=8), For(Name('checker', Store(), lineno=576, col_offset=12), Attribute(Name('self', Load(), lineno=576, col_offset=23), 'CHECK_METHODS', Load(), lineno=576, col_offset=23), [Expr(Call(Name('checker', Load(), lineno=577, col_offset=12), [Name('self', Load(), lineno=577, col_offset=20)], [], None, None, lineno=577, col_offset=12), lineno=577, col_offset=12)], [], lineno=576, col_offset=8)], [], lineno=560, col_offset=4), FunctionDef('_check_opt_strings', arguments([Name('self', Param(), lineno=579, col_offset=27), Name('opts', Param(), lineno=579, col_offset=33)], None, None, []), [Assign([Name('opts', Store(), lineno=583, col_offset=8)], Call(Name('filter', Load(), lineno=583, col_offset=15), [Name('None', Load(), lineno=583, col_offset=22), Name('opts', Load(), lineno=583, col_offset=28)], [], None, None, lineno=583, col_offset=15), lineno=583, col_offset=8), If(UnaryOp(Not(), Name('opts', Load(), lineno=584, col_offset=15), lineno=584, col_offset=11), [Raise(Call(Name('TypeError', Load(), lineno=585, col_offset=18), [Str('at least one option string must be supplied', lineno=585, col_offset=28)], [], None, None, lineno=585, col_offset=18), None, None, lineno=585, col_offset=12)], [], lineno=584, col_offset=8), Return(Name('opts', Load(), lineno=586, col_offset=15), lineno=586, col_offset=8)], [], lineno=579, col_offset=4), FunctionDef('_set_opt_strings', arguments([Name('self', Param(), lineno=588, col_offset=25), Name('opts', Param(), lineno=588, col_offset=31)], None, None, []), [For(Name('opt', Store(), lineno=589, col_offset=12), Name('opts', Load(), lineno=589, col_offset=19), [If(Compare(Call(Name('len', Load(), lineno=590, col_offset=15), [Name('opt', Load(), lineno=590, col_offset=19)], [], None, None, lineno=590, col_offset=15), [Lt()], [Num(2, lineno=590, col_offset=26)], lineno=590, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=591, col_offset=22), [BinOp(Str('invalid option string %r: must be at least two characters long', lineno=592, col_offset=20), Mod(), Name('opt', Load(), lineno=593, col_offset=61), lineno=592, col_offset=20), Name('self', Load(), lineno=593, col_offset=66)], [], None, None, lineno=591, col_offset=22), None, None, lineno=591, col_offset=16)], [If(Compare(Call(Name('len', Load(), lineno=594, col_offset=17), [Name('opt', Load(), lineno=594, col_offset=21)], [], None, None, lineno=594, col_offset=17), [Eq()], [Num(2, lineno=594, col_offset=29)], lineno=594, col_offset=17), [If(UnaryOp(Not(), BoolOp(And(), [Compare(Subscript(Name('opt', Load(), lineno=595, col_offset=24), Index(Num(0, lineno=595, col_offset=28)), Load(), lineno=595, col_offset=24), [Eq()], [Str('-', lineno=595, col_offset=34)], lineno=595, col_offset=24), Compare(Subscript(Name('opt', Load(), lineno=595, col_offset=42), Index(Num(1, lineno=595, col_offset=46)), Load(), lineno=595, col_offset=42), [NotEq()], [Str('-', lineno=595, col_offset=52)], lineno=595, col_offset=42)], lineno=595, col_offset=24), lineno=595, col_offset=19), [Raise(Call(Name('OptionError', Load(), lineno=596, col_offset=26), [BinOp(Str('invalid short option string %r: must be of the form -x, (x any non-dash char)', lineno=597, col_offset=24), Mod(), Name('opt', Load(), lineno=598, col_offset=74), lineno=597, col_offset=24), Name('self', Load(), lineno=599, col_offset=24)], [], None, None, lineno=596, col_offset=26), None, None, lineno=596, col_offset=20)], [], lineno=595, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=600, col_offset=16), '_short_opts', Load(), lineno=600, col_offset=16), 'append', Load(), lineno=600, col_offset=16), [Name('opt', Load(), lineno=600, col_offset=40)], [], None, None, lineno=600, col_offset=16), lineno=600, col_offset=16)], [If(UnaryOp(Not(), BoolOp(And(), [Compare(Subscript(Name('opt', Load(), lineno=602, col_offset=24), Slice(Num(0, lineno=602, col_offset=28), Num(2, lineno=602, col_offset=30), None), Load(), lineno=602, col_offset=24), [Eq()], [Str('--', lineno=602, col_offset=36)], lineno=602, col_offset=24), Compare(Subscript(Name('opt', Load(), lineno=602, col_offset=45), Index(Num(2, lineno=602, col_offset=49)), Load(), lineno=602, col_offset=45), [NotEq()], [Str('-', lineno=602, col_offset=55)], lineno=602, col_offset=45)], lineno=602, col_offset=24), lineno=602, col_offset=19), [Raise(Call(Name('OptionError', Load(), lineno=603, col_offset=26), [BinOp(Str('invalid long option string %r: must start with --, followed by non-dash', lineno=604, col_offset=24), Mod(), Name('opt', Load(), lineno=605, col_offset=69), lineno=604, col_offset=24), Name('self', Load(), lineno=606, col_offset=24)], [], None, None, lineno=603, col_offset=26), None, None, lineno=603, col_offset=20)], [], lineno=602, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=607, col_offset=16), '_long_opts', Load(), lineno=607, col_offset=16), 'append', Load(), lineno=607, col_offset=16), [Name('opt', Load(), lineno=607, col_offset=39)], [], None, None, lineno=607, col_offset=16), lineno=607, col_offset=16)], lineno=594, col_offset=17)], lineno=590, col_offset=12)], [], lineno=589, col_offset=8)], [], lineno=588, col_offset=4), FunctionDef('_set_attrs', arguments([Name('self', Param(), lineno=609, col_offset=19), Name('attrs', Param(), lineno=609, col_offset=25)], None, None, []), [For(Name('attr', Store(), lineno=610, col_offset=12), Attribute(Name('self', Load(), lineno=610, col_offset=20), 'ATTRS', Load(), lineno=610, col_offset=20), [If(Compare(Name('attr', Load(), lineno=611, col_offset=15), [In()], [Name('attrs', Load(), lineno=611, col_offset=23)], lineno=611, col_offset=15), [Expr(Call(Name('setattr', Load(), lineno=612, col_offset=16), [Name('self', Load(), lineno=612, col_offset=24), Name('attr', Load(), lineno=612, col_offset=30), Subscript(Name('attrs', Load(), lineno=612, col_offset=36), Index(Name('attr', Load(), lineno=612, col_offset=42)), Load(), lineno=612, col_offset=36)], [], None, None, lineno=612, col_offset=16), lineno=612, col_offset=16), Delete([Subscript(Name('attrs', Load(), lineno=613, col_offset=20), Index(Name('attr', Load(), lineno=613, col_offset=26)), Del(), lineno=613, col_offset=20)], lineno=613, col_offset=16)], [If(Compare(Name('attr', Load(), lineno=615, col_offset=19), [Eq()], [Str('default', lineno=615, col_offset=27)], lineno=615, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=616, col_offset=20), [Name('self', Load(), lineno=616, col_offset=28), Name('attr', Load(), lineno=616, col_offset=34), Name('NO_DEFAULT', Load(), lineno=616, col_offset=40)], [], None, None, lineno=616, col_offset=20), lineno=616, col_offset=20)], [Expr(Call(Name('setattr', Load(), lineno=618, col_offset=20), [Name('self', Load(), lineno=618, col_offset=28), Name('attr', Load(), lineno=618, col_offset=34), Name('None', Load(), lineno=618, col_offset=40)], [], None, None, lineno=618, col_offset=20), lineno=618, col_offset=20)], lineno=615, col_offset=16)], lineno=611, col_offset=12)], [], lineno=610, col_offset=8), If(Name('attrs', Load(), lineno=619, col_offset=11), [Assign([Name('attrs', Store(), lineno=620, col_offset=12)], Call(Attribute(Name('attrs', Load(), lineno=620, col_offset=20), 'keys', Load(), lineno=620, col_offset=20), [], [], None, None, lineno=620, col_offset=20), lineno=620, col_offset=12), Expr(Call(Attribute(Name('attrs', Load(), lineno=621, col_offset=12), 'sort', Load(), lineno=621, col_offset=12), [], [], None, None, lineno=621, col_offset=12), lineno=621, col_offset=12), Raise(Call(Name('OptionError', Load(), lineno=622, col_offset=18), [BinOp(Str('invalid keyword arguments: %s', lineno=623, col_offset=16), Mod(), Call(Attribute(Str(', ', lineno=623, col_offset=50), 'join', Load(), lineno=623, col_offset=50), [Name('attrs', Load(), lineno=623, col_offset=60)], [], None, None, lineno=623, col_offset=50), lineno=623, col_offset=16), Name('self', Load(), lineno=624, col_offset=16)], [], None, None, lineno=622, col_offset=18), None, None, lineno=622, col_offset=12)], [], lineno=619, col_offset=8)], [], lineno=609, col_offset=4), FunctionDef('_check_action', arguments([Name('self', Param(), lineno=629, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=630, col_offset=11), 'action', Load(), lineno=630, col_offset=11), [Is()], [Name('None', Load(), lineno=630, col_offset=26)], lineno=630, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=631, col_offset=12), 'action', Store(), lineno=631, col_offset=12)], Str('store', lineno=631, col_offset=26), lineno=631, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=632, col_offset=13), 'action', Load(), lineno=632, col_offset=13), [NotIn()], [Attribute(Name('self', Load(), lineno=632, col_offset=32), 'ACTIONS', Load(), lineno=632, col_offset=32)], lineno=632, col_offset=13), [Raise(Call(Name('OptionError', Load(), lineno=633, col_offset=18), [BinOp(Str('invalid action: %r', lineno=633, col_offset=30), Mod(), Attribute(Name('self', Load(), lineno=633, col_offset=53), 'action', Load(), lineno=633, col_offset=53), lineno=633, col_offset=30), Name('self', Load(), lineno=633, col_offset=66)], [], None, None, lineno=633, col_offset=18), None, None, lineno=633, col_offset=12)], [], lineno=632, col_offset=13)], lineno=630, col_offset=8)], [], lineno=629, col_offset=4), FunctionDef('_check_type', arguments([Name('self', Param(), lineno=635, col_offset=20)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=636, col_offset=11), 'type', Load(), lineno=636, col_offset=11), [Is()], [Name('None', Load(), lineno=636, col_offset=24)], lineno=636, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=637, col_offset=15), 'action', Load(), lineno=637, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=637, col_offset=30), 'ALWAYS_TYPED_ACTIONS', Load(), lineno=637, col_offset=30)], lineno=637, col_offset=15), [If(Compare(Attribute(Name('self', Load(), lineno=638, col_offset=19), 'choices', Load(), lineno=638, col_offset=19), [IsNot()], [Name('None', Load(), lineno=638, col_offset=39)], lineno=638, col_offset=19), [Assign([Attribute(Name('self', Load(), lineno=640, col_offset=20), 'type', Store(), lineno=640, col_offset=20)], Str('choice', lineno=640, col_offset=32), lineno=640, col_offset=20)], [Assign([Attribute(Name('self', Load(), lineno=643, col_offset=20), 'type', Store(), lineno=643, col_offset=20)], Str('string', lineno=643, col_offset=32), lineno=643, col_offset=20)], lineno=638, col_offset=16)], [], lineno=637, col_offset=12)], [Import([alias('__builtin__', None)], lineno=650, col_offset=12), If(BoolOp(Or(), [Compare(Call(Name('type', Load(), lineno=651, col_offset=17), [Attribute(Name('self', Load(), lineno=651, col_offset=22), 'type', Load(), lineno=651, col_offset=22)], [], None, None, lineno=651, col_offset=17), [Is()], [Attribute(Name('types', Load(), lineno=651, col_offset=36), 'TypeType', Load(), lineno=651, col_offset=36)], lineno=651, col_offset=17), BoolOp(And(), [Call(Name('hasattr', Load(), lineno=652, col_offset=18), [Attribute(Name('self', Load(), lineno=652, col_offset=26), 'type', Load(), lineno=652, col_offset=26), Str('__name__', lineno=652, col_offset=37)], [], None, None, lineno=652, col_offset=18), Compare(Call(Name('getattr', Load(), lineno=653, col_offset=18), [Name('__builtin__', Load(), lineno=653, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=653, col_offset=39), 'type', Load(), lineno=653, col_offset=39), '__name__', Load(), lineno=653, col_offset=39), Name('None', Load(), lineno=653, col_offset=59)], [], None, None, lineno=653, col_offset=18), [Is()], [Attribute(Name('self', Load(), lineno=653, col_offset=68), 'type', Load(), lineno=653, col_offset=68)], lineno=653, col_offset=18)], lineno=652, col_offset=18)], lineno=651, col_offset=17), [Assign([Attribute(Name('self', Load(), lineno=654, col_offset=16), 'type', Store(), lineno=654, col_offset=16)], Attribute(Attribute(Name('self', Load(), lineno=654, col_offset=28), 'type', Load(), lineno=654, col_offset=28), '__name__', Load(), lineno=654, col_offset=28), lineno=654, col_offset=16)], [], lineno=651, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=656, col_offset=15), 'type', Load(), lineno=656, col_offset=15), [Eq()], [Str('str', lineno=656, col_offset=28)], lineno=656, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=657, col_offset=16), 'type', Store(), lineno=657, col_offset=16)], Str('string', lineno=657, col_offset=28), lineno=657, col_offset=16)], [], lineno=656, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=659, col_offset=15), 'type', Load(), lineno=659, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=659, col_offset=32), 'TYPES', Load(), lineno=659, col_offset=32)], lineno=659, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=660, col_offset=22), [BinOp(Str('invalid option type: %r', lineno=660, col_offset=34), Mod(), Attribute(Name('self', Load(), lineno=660, col_offset=62), 'type', Load(), lineno=660, col_offset=62), lineno=660, col_offset=34), Name('self', Load(), lineno=660, col_offset=73)], [], None, None, lineno=660, col_offset=22), None, None, lineno=660, col_offset=16)], [], lineno=659, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=661, col_offset=15), 'action', Load(), lineno=661, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=661, col_offset=34), 'TYPED_ACTIONS', Load(), lineno=661, col_offset=34)], lineno=661, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=662, col_offset=22), [BinOp(Str('must not supply a type for action %r', lineno=663, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=663, col_offset=61), 'action', Load(), lineno=663, col_offset=61), lineno=663, col_offset=20), Name('self', Load(), lineno=663, col_offset=74)], [], None, None, lineno=662, col_offset=22), None, None, lineno=662, col_offset=16)], [], lineno=661, col_offset=12)], lineno=636, col_offset=8)], [], lineno=635, col_offset=4), FunctionDef('_check_choice', arguments([Name('self', Param(), lineno=665, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=666, col_offset=11), 'type', Load(), lineno=666, col_offset=11), [Eq()], [Str('choice', lineno=666, col_offset=24)], lineno=666, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=667, col_offset=15), 'choices', Load(), lineno=667, col_offset=15), [Is()], [Name('None', Load(), lineno=667, col_offset=31)], lineno=667, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=668, col_offset=22), [Str("must supply a list of choices for type 'choice'", lineno=669, col_offset=20), Name('self', Load(), lineno=669, col_offset=71)], [], None, None, lineno=668, col_offset=22), None, None, lineno=668, col_offset=16)], [If(Compare(Call(Name('type', Load(), lineno=670, col_offset=17), [Attribute(Name('self', Load(), lineno=670, col_offset=22), 'choices', Load(), lineno=670, col_offset=22)], [], None, None, lineno=670, col_offset=17), [NotIn()], [Tuple([Attribute(Name('types', Load(), lineno=670, col_offset=44), 'TupleType', Load(), lineno=670, col_offset=44), Attribute(Name('types', Load(), lineno=670, col_offset=61), 'ListType', Load(), lineno=670, col_offset=61)], Load(), lineno=670, col_offset=44)], lineno=670, col_offset=17), [Raise(Call(Name('OptionError', Load(), lineno=671, col_offset=22), [BinOp(Str("choices must be a list of strings ('%s' supplied)", lineno=672, col_offset=20), Mod(), Subscript(Call(Attribute(Call(Name('str', Load(), lineno=673, col_offset=22), [Call(Name('type', Load(), lineno=673, col_offset=26), [Attribute(Name('self', Load(), lineno=673, col_offset=31), 'choices', Load(), lineno=673, col_offset=31)], [], None, None, lineno=673, col_offset=26)], [], None, None, lineno=673, col_offset=22), 'split', Load(), lineno=673, col_offset=22), [Str("'", lineno=673, col_offset=52)], [], None, None, lineno=673, col_offset=22), Index(Num(1, lineno=673, col_offset=57)), Load(), lineno=673, col_offset=22), lineno=672, col_offset=20), Name('self', Load(), lineno=673, col_offset=61)], [], None, None, lineno=671, col_offset=22), None, None, lineno=671, col_offset=16)], [], lineno=670, col_offset=17)], lineno=667, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=674, col_offset=13), 'choices', Load(), lineno=674, col_offset=13), [IsNot()], [Name('None', Load(), lineno=674, col_offset=33)], lineno=674, col_offset=13), [Raise(Call(Name('OptionError', Load(), lineno=675, col_offset=18), [BinOp(Str('must not supply choices for type %r', lineno=676, col_offset=16), Mod(), Attribute(Name('self', Load(), lineno=676, col_offset=56), 'type', Load(), lineno=676, col_offset=56), lineno=676, col_offset=16), Name('self', Load(), lineno=676, col_offset=67)], [], None, None, lineno=675, col_offset=18), None, None, lineno=675, col_offset=12)], [], lineno=674, col_offset=13)], lineno=666, col_offset=8)], [], lineno=665, col_offset=4), FunctionDef('_check_dest', arguments([Name('self', Param(), lineno=678, col_offset=20)], None, None, []), [Assign([Name('takes_value', Store(), lineno=681, col_offset=8)], BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=681, col_offset=23), 'action', Load(), lineno=681, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=681, col_offset=38), 'STORE_ACTIONS', Load(), lineno=681, col_offset=38)], lineno=681, col_offset=23), Compare(Attribute(Name('self', Load(), lineno=682, col_offset=23), 'type', Load(), lineno=682, col_offset=23), [IsNot()], [Name('None', Load(), lineno=682, col_offset=40)], lineno=682, col_offset=23)], lineno=681, col_offset=23), lineno=681, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=683, col_offset=11), 'dest', Load(), lineno=683, col_offset=11), [Is()], [Name('None', Load(), lineno=683, col_offset=24)], lineno=683, col_offset=11), Name('takes_value', Load(), lineno=683, col_offset=33)], lineno=683, col_offset=11), [If(Attribute(Name('self', Load(), lineno=687, col_offset=15), '_long_opts', Load(), lineno=687, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=689, col_offset=16), 'dest', Store(), lineno=689, col_offset=16)], Call(Attribute(Subscript(Subscript(Attribute(Name('self', Load(), lineno=689, col_offset=28), '_long_opts', Load(), lineno=689, col_offset=28), Index(Num(0, lineno=689, col_offset=44)), Load(), lineno=689, col_offset=28), Slice(Num(2, lineno=689, col_offset=47), None, None), Load(), lineno=689, col_offset=28), 'replace', Load(), lineno=689, col_offset=28), [Str('-', lineno=689, col_offset=59), Str('_', lineno=689, col_offset=64)], [], None, None, lineno=689, col_offset=28), lineno=689, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=691, col_offset=16), 'dest', Store(), lineno=691, col_offset=16)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=691, col_offset=28), '_short_opts', Load(), lineno=691, col_offset=28), Index(Num(0, lineno=691, col_offset=45)), Load(), lineno=691, col_offset=28), Index(Num(1, lineno=691, col_offset=48)), Load(), lineno=691, col_offset=28), lineno=691, col_offset=16)], lineno=687, col_offset=12)], [], lineno=683, col_offset=8)], [], lineno=678, col_offset=4), FunctionDef('_check_const', arguments([Name('self', Param(), lineno=693, col_offset=21)], None, None, []), [If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=694, col_offset=11), 'action', Load(), lineno=694, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=694, col_offset=30), 'CONST_ACTIONS', Load(), lineno=694, col_offset=30)], lineno=694, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=694, col_offset=53), 'const', Load(), lineno=694, col_offset=53), [IsNot()], [Name('None', Load(), lineno=694, col_offset=71)], lineno=694, col_offset=53)], lineno=694, col_offset=11), [Raise(Call(Name('OptionError', Load(), lineno=695, col_offset=18), [BinOp(Str("'const' must not be supplied for action %r", lineno=696, col_offset=16), Mod(), Attribute(Name('self', Load(), lineno=696, col_offset=63), 'action', Load(), lineno=696, col_offset=63), lineno=696, col_offset=16), Name('self', Load(), lineno=697, col_offset=16)], [], None, None, lineno=695, col_offset=18), None, None, lineno=695, col_offset=12)], [], lineno=694, col_offset=8)], [], lineno=693, col_offset=4), FunctionDef('_check_nargs', arguments([Name('self', Param(), lineno=699, col_offset=21)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=700, col_offset=11), 'action', Load(), lineno=700, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=700, col_offset=26), 'TYPED_ACTIONS', Load(), lineno=700, col_offset=26)], lineno=700, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=701, col_offset=15), 'nargs', Load(), lineno=701, col_offset=15), [Is()], [Name('None', Load(), lineno=701, col_offset=29)], lineno=701, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=702, col_offset=16), 'nargs', Store(), lineno=702, col_offset=16)], Num(1, lineno=702, col_offset=29), lineno=702, col_offset=16)], [], lineno=701, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=703, col_offset=13), 'nargs', Load(), lineno=703, col_offset=13), [IsNot()], [Name('None', Load(), lineno=703, col_offset=31)], lineno=703, col_offset=13), [Raise(Call(Name('OptionError', Load(), lineno=704, col_offset=18), [BinOp(Str("'nargs' must not be supplied for action %r", lineno=705, col_offset=16), Mod(), Attribute(Name('self', Load(), lineno=705, col_offset=63), 'action', Load(), lineno=705, col_offset=63), lineno=705, col_offset=16), Name('self', Load(), lineno=706, col_offset=16)], [], None, None, lineno=704, col_offset=18), None, None, lineno=704, col_offset=12)], [], lineno=703, col_offset=13)], lineno=700, col_offset=8)], [], lineno=699, col_offset=4), FunctionDef('_check_callback', arguments([Name('self', Param(), lineno=708, col_offset=24)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=709, col_offset=11), 'action', Load(), lineno=709, col_offset=11), [Eq()], [Str('callback', lineno=709, col_offset=26)], lineno=709, col_offset=11), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=710, col_offset=19), [Attribute(Name('self', Load(), lineno=710, col_offset=27), 'callback', Load(), lineno=710, col_offset=27), Str('__call__', lineno=710, col_offset=42)], [], None, None, lineno=710, col_offset=19), lineno=710, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=711, col_offset=22), [BinOp(Str('callback not callable: %r', lineno=712, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=712, col_offset=50), 'callback', Load(), lineno=712, col_offset=50), lineno=712, col_offset=20), Name('self', Load(), lineno=712, col_offset=65)], [], None, None, lineno=711, col_offset=22), None, None, lineno=711, col_offset=16)], [], lineno=710, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=713, col_offset=16), 'callback_args', Load(), lineno=713, col_offset=16), [IsNot()], [Name('None', Load(), lineno=713, col_offset=42)], lineno=713, col_offset=16), Compare(Call(Name('type', Load(), lineno=714, col_offset=16), [Attribute(Name('self', Load(), lineno=714, col_offset=21), 'callback_args', Load(), lineno=714, col_offset=21)], [], None, None, lineno=714, col_offset=16), [IsNot()], [Attribute(Name('types', Load(), lineno=714, col_offset=48), 'TupleType', Load(), lineno=714, col_offset=48)], lineno=714, col_offset=16)], lineno=713, col_offset=16), [Raise(Call(Name('OptionError', Load(), lineno=715, col_offset=22), [BinOp(Str('callback_args, if supplied, must be a tuple: not %r', lineno=716, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=717, col_offset=22), 'callback_args', Load(), lineno=717, col_offset=22), lineno=716, col_offset=20), Name('self', Load(), lineno=717, col_offset=42)], [], None, None, lineno=715, col_offset=22), None, None, lineno=715, col_offset=16)], [], lineno=713, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=718, col_offset=16), 'callback_kwargs', Load(), lineno=718, col_offset=16), [IsNot()], [Name('None', Load(), lineno=718, col_offset=44)], lineno=718, col_offset=16), Compare(Call(Name('type', Load(), lineno=719, col_offset=16), [Attribute(Name('self', Load(), lineno=719, col_offset=21), 'callback_kwargs', Load(), lineno=719, col_offset=21)], [], None, None, lineno=719, col_offset=16), [IsNot()], [Attribute(Name('types', Load(), lineno=719, col_offset=50), 'DictType', Load(), lineno=719, col_offset=50)], lineno=719, col_offset=16)], lineno=718, col_offset=16), [Raise(Call(Name('OptionError', Load(), lineno=720, col_offset=22), [BinOp(Str('callback_kwargs, if supplied, must be a dict: not %r', lineno=721, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=722, col_offset=22), 'callback_kwargs', Load(), lineno=722, col_offset=22), lineno=721, col_offset=20), Name('self', Load(), lineno=722, col_offset=44)], [], None, None, lineno=720, col_offset=22), None, None, lineno=720, col_offset=16)], [], lineno=718, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=724, col_offset=15), 'callback', Load(), lineno=724, col_offset=15), [IsNot()], [Name('None', Load(), lineno=724, col_offset=36)], lineno=724, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=725, col_offset=22), [BinOp(Str('callback supplied (%r) for non-callback option', lineno=726, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=727, col_offset=22), 'callback', Load(), lineno=727, col_offset=22), lineno=726, col_offset=20), Name('self', Load(), lineno=727, col_offset=37)], [], None, None, lineno=725, col_offset=22), None, None, lineno=725, col_offset=16)], [], lineno=724, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=728, col_offset=15), 'callback_args', Load(), lineno=728, col_offset=15), [IsNot()], [Name('None', Load(), lineno=728, col_offset=41)], lineno=728, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=729, col_offset=22), [Str('callback_args supplied for non-callback option', lineno=730, col_offset=20), Name('self', Load(), lineno=730, col_offset=70)], [], None, None, lineno=729, col_offset=22), None, None, lineno=729, col_offset=16)], [], lineno=728, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=731, col_offset=15), 'callback_kwargs', Load(), lineno=731, col_offset=15), [IsNot()], [Name('None', Load(), lineno=731, col_offset=43)], lineno=731, col_offset=15), [Raise(Call(Name('OptionError', Load(), lineno=732, col_offset=22), [Str('callback_kwargs supplied for non-callback option', lineno=733, col_offset=20), Name('self', Load(), lineno=733, col_offset=72)], [], None, None, lineno=732, col_offset=22), None, None, lineno=732, col_offset=16)], [], lineno=731, col_offset=12)], lineno=709, col_offset=8)], [], lineno=708, col_offset=4), Assign([Name('CHECK_METHODS', Store(), lineno=736, col_offset=4)], List([Name('_check_action', Load(), lineno=736, col_offset=21), Name('_check_type', Load(), lineno=737, col_offset=21), Name('_check_choice', Load(), lineno=738, col_offset=21), Name('_check_dest', Load(), lineno=739, col_offset=21), Name('_check_const', Load(), lineno=740, col_offset=21), Name('_check_nargs', Load(), lineno=741, col_offset=21), Name('_check_callback', Load(), lineno=742, col_offset=21)], Load(), lineno=736, col_offset=20), lineno=736, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=747, col_offset=16)], None, None, []), [Return(Call(Attribute(Str('/', lineno=748, col_offset=15), 'join', Load(), lineno=748, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=748, col_offset=24), '_short_opts', Load(), lineno=748, col_offset=24), Add(), Attribute(Name('self', Load(), lineno=748, col_offset=43), '_long_opts', Load(), lineno=748, col_offset=43), lineno=748, col_offset=24)], [], None, None, lineno=748, col_offset=15), lineno=748, col_offset=8)], [], lineno=747, col_offset=4), Assign([Name('__repr__', Store(), lineno=750, col_offset=4)], Name('_repr', Load(), lineno=750, col_offset=15), lineno=750, col_offset=4), FunctionDef('takes_value', arguments([Name('self', Param(), lineno=752, col_offset=20)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=753, col_offset=15), 'type', Load(), lineno=753, col_offset=15), [IsNot()], [Name('None', Load(), lineno=753, col_offset=32)], lineno=753, col_offset=15), lineno=753, col_offset=8)], [], lineno=752, col_offset=4), FunctionDef('get_opt_string', arguments([Name('self', Param(), lineno=755, col_offset=23)], None, None, []), [If(Attribute(Name('self', Load(), lineno=756, col_offset=11), '_long_opts', Load(), lineno=756, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=757, col_offset=19), '_long_opts', Load(), lineno=757, col_offset=19), Index(Num(0, lineno=757, col_offset=35)), Load(), lineno=757, col_offset=19), lineno=757, col_offset=12)], [Return(Subscript(Attribute(Name('self', Load(), lineno=759, col_offset=19), '_short_opts', Load(), lineno=759, col_offset=19), Index(Num(0, lineno=759, col_offset=36)), Load(), lineno=759, col_offset=19), lineno=759, col_offset=12)], lineno=756, col_offset=8)], [], lineno=755, col_offset=4), FunctionDef('check_value', arguments([Name('self', Param(), lineno=764, col_offset=20), Name('opt', Param(), lineno=764, col_offset=26), Name('value', Param(), lineno=764, col_offset=31)], None, None, []), [Assign([Name('checker', Store(), lineno=765, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=765, col_offset=18), 'TYPE_CHECKER', Load(), lineno=765, col_offset=18), 'get', Load(), lineno=765, col_offset=18), [Attribute(Name('self', Load(), lineno=765, col_offset=40), 'type', Load(), lineno=765, col_offset=40)], [], None, None, lineno=765, col_offset=18), lineno=765, col_offset=8), If(Compare(Name('checker', Load(), lineno=766, col_offset=11), [Is()], [Name('None', Load(), lineno=766, col_offset=22)], lineno=766, col_offset=11), [Return(Name('value', Load(), lineno=767, col_offset=19), lineno=767, col_offset=12)], [Return(Call(Name('checker', Load(), lineno=769, col_offset=19), [Name('self', Load(), lineno=769, col_offset=27), Name('opt', Load(), lineno=769, col_offset=33), Name('value', Load(), lineno=769, col_offset=38)], [], None, None, lineno=769, col_offset=19), lineno=769, col_offset=12)], lineno=766, col_offset=8)], [], lineno=764, col_offset=4), FunctionDef('convert_value', arguments([Name('self', Param(), lineno=771, col_offset=22), Name('opt', Param(), lineno=771, col_offset=28), Name('value', Param(), lineno=771, col_offset=33)], None, None, []), [If(Compare(Name('value', Load(), lineno=772, col_offset=11), [IsNot()], [Name('None', Load(), lineno=772, col_offset=24)], lineno=772, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=773, col_offset=15), 'nargs', Load(), lineno=773, col_offset=15), [Eq()], [Num(1, lineno=773, col_offset=29)], lineno=773, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=774, col_offset=23), 'check_value', Load(), lineno=774, col_offset=23), [Name('opt', Load(), lineno=774, col_offset=40), Name('value', Load(), lineno=774, col_offset=45)], [], None, None, lineno=774, col_offset=23), lineno=774, col_offset=16)], [Return(Call(Name('tuple', Load(), lineno=776, col_offset=23), [ListComp(Call(Attribute(Name('self', Load(), lineno=776, col_offset=30), 'check_value', Load(), lineno=776, col_offset=30), [Name('opt', Load(), lineno=776, col_offset=47), Name('v', Load(), lineno=776, col_offset=52)], [], None, None, lineno=776, col_offset=30), [comprehension(Name('v', Store(), lineno=776, col_offset=59), Name('value', Load(), lineno=776, col_offset=64), [])], lineno=776, col_offset=30)], [], None, None, lineno=776, col_offset=23), lineno=776, col_offset=16)], lineno=773, col_offset=12)], [], lineno=772, col_offset=8)], [], lineno=771, col_offset=4), FunctionDef('process', arguments([Name('self', Param(), lineno=778, col_offset=16), Name('opt', Param(), lineno=778, col_offset=22), Name('value', Param(), lineno=778, col_offset=27), Name('values', Param(), lineno=778, col_offset=34), Name('parser', Param(), lineno=778, col_offset=42)], None, None, []), [Assign([Name('value', Store(), lineno=782, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=782, col_offset=16), 'convert_value', Load(), lineno=782, col_offset=16), [Name('opt', Load(), lineno=782, col_offset=35), Name('value', Load(), lineno=782, col_offset=40)], [], None, None, lineno=782, col_offset=16), lineno=782, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=787, col_offset=15), 'take_action', Load(), lineno=787, col_offset=15), [Attribute(Name('self', Load(), lineno=788, col_offset=12), 'action', Load(), lineno=788, col_offset=12), Attribute(Name('self', Load(), lineno=788, col_offset=25), 'dest', Load(), lineno=788, col_offset=25), Name('opt', Load(), lineno=788, col_offset=36), Name('value', Load(), lineno=788, col_offset=41), Name('values', Load(), lineno=788, col_offset=48), Name('parser', Load(), lineno=788, col_offset=56)], [], None, None, lineno=787, col_offset=15), lineno=787, col_offset=8)], [], lineno=778, col_offset=4), FunctionDef('take_action', arguments([Name('self', Param(), lineno=790, col_offset=20), Name('action', Param(), lineno=790, col_offset=26), Name('dest', Param(), lineno=790, col_offset=34), Name('opt', Param(), lineno=790, col_offset=40), Name('value', Param(), lineno=790, col_offset=45), Name('values', Param(), lineno=790, col_offset=52), Name('parser', Param(), lineno=790, col_offset=60)], None, None, []), [If(Compare(Name('action', Load(), lineno=791, col_offset=11), [Eq()], [Str('store', lineno=791, col_offset=21)], lineno=791, col_offset=11), [Expr(Call(Name('setattr', Load(), lineno=792, col_offset=12), [Name('values', Load(), lineno=792, col_offset=20), Name('dest', Load(), lineno=792, col_offset=28), Name('value', Load(), lineno=792, col_offset=34)], [], None, None, lineno=792, col_offset=12), lineno=792, col_offset=12)], [If(Compare(Name('action', Load(), lineno=793, col_offset=13), [Eq()], [Str('store_const', lineno=793, col_offset=23)], lineno=793, col_offset=13), [Expr(Call(Name('setattr', Load(), lineno=794, col_offset=12), [Name('values', Load(), lineno=794, col_offset=20), Name('dest', Load(), lineno=794, col_offset=28), Attribute(Name('self', Load(), lineno=794, col_offset=34), 'const', Load(), lineno=794, col_offset=34)], [], None, None, lineno=794, col_offset=12), lineno=794, col_offset=12)], [If(Compare(Name('action', Load(), lineno=795, col_offset=13), [Eq()], [Str('store_true', lineno=795, col_offset=23)], lineno=795, col_offset=13), [Expr(Call(Name('setattr', Load(), lineno=796, col_offset=12), [Name('values', Load(), lineno=796, col_offset=20), Name('dest', Load(), lineno=796, col_offset=28), Name('True', Load(), lineno=796, col_offset=34)], [], None, None, lineno=796, col_offset=12), lineno=796, col_offset=12)], [If(Compare(Name('action', Load(), lineno=797, col_offset=13), [Eq()], [Str('store_false', lineno=797, col_offset=23)], lineno=797, col_offset=13), [Expr(Call(Name('setattr', Load(), lineno=798, col_offset=12), [Name('values', Load(), lineno=798, col_offset=20), Name('dest', Load(), lineno=798, col_offset=28), Name('False', Load(), lineno=798, col_offset=34)], [], None, None, lineno=798, col_offset=12), lineno=798, col_offset=12)], [If(Compare(Name('action', Load(), lineno=799, col_offset=13), [Eq()], [Str('append', lineno=799, col_offset=23)], lineno=799, col_offset=13), [Expr(Call(Attribute(Call(Attribute(Name('values', Load(), lineno=800, col_offset=12), 'ensure_value', Load(), lineno=800, col_offset=12), [Name('dest', Load(), lineno=800, col_offset=32), List([], Load(), lineno=800, col_offset=38)], [], None, None, lineno=800, col_offset=12), 'append', Load(), lineno=800, col_offset=12), [Name('value', Load(), lineno=800, col_offset=49)], [], None, None, lineno=800, col_offset=12), lineno=800, col_offset=12)], [If(Compare(Name('action', Load(), lineno=801, col_offset=13), [Eq()], [Str('append_const', lineno=801, col_offset=23)], lineno=801, col_offset=13), [Expr(Call(Attribute(Call(Attribute(Name('values', Load(), lineno=802, col_offset=12), 'ensure_value', Load(), lineno=802, col_offset=12), [Name('dest', Load(), lineno=802, col_offset=32), List([], Load(), lineno=802, col_offset=38)], [], None, None, lineno=802, col_offset=12), 'append', Load(), lineno=802, col_offset=12), [Attribute(Name('self', Load(), lineno=802, col_offset=49), 'const', Load(), lineno=802, col_offset=49)], [], None, None, lineno=802, col_offset=12), lineno=802, col_offset=12)], [If(Compare(Name('action', Load(), lineno=803, col_offset=13), [Eq()], [Str('count', lineno=803, col_offset=23)], lineno=803, col_offset=13), [Expr(Call(Name('setattr', Load(), lineno=804, col_offset=12), [Name('values', Load(), lineno=804, col_offset=20), Name('dest', Load(), lineno=804, col_offset=28), BinOp(Call(Attribute(Name('values', Load(), lineno=804, col_offset=34), 'ensure_value', Load(), lineno=804, col_offset=34), [Name('dest', Load(), lineno=804, col_offset=54), Num(0, lineno=804, col_offset=60)], [], None, None, lineno=804, col_offset=34), Add(), Num(1, lineno=804, col_offset=65), lineno=804, col_offset=34)], [], None, None, lineno=804, col_offset=12), lineno=804, col_offset=12)], [If(Compare(Name('action', Load(), lineno=805, col_offset=13), [Eq()], [Str('callback', lineno=805, col_offset=23)], lineno=805, col_offset=13), [Assign([Name('args', Store(), lineno=806, col_offset=12)], BoolOp(Or(), [Attribute(Name('self', Load(), lineno=806, col_offset=19), 'callback_args', Load(), lineno=806, col_offset=19), Tuple([], Load(), lineno=806, col_offset=41)], lineno=806, col_offset=19), lineno=806, col_offset=12), Assign([Name('kwargs', Store(), lineno=807, col_offset=12)], BoolOp(Or(), [Attribute(Name('self', Load(), lineno=807, col_offset=21), 'callback_kwargs', Load(), lineno=807, col_offset=21), Dict([], [], lineno=807, col_offset=45)], lineno=807, col_offset=21), lineno=807, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=808, col_offset=12), 'callback', Load(), lineno=808, col_offset=12), [Name('self', Load(), lineno=808, col_offset=26), Name('opt', Load(), lineno=808, col_offset=32), Name('value', Load(), lineno=808, col_offset=37), Name('parser', Load(), lineno=808, col_offset=44)], [], Name('args', Load(), lineno=808, col_offset=53), Name('kwargs', Load(), lineno=808, col_offset=61), lineno=808, col_offset=12), lineno=808, col_offset=12)], [If(Compare(Name('action', Load(), lineno=809, col_offset=13), [Eq()], [Str('help', lineno=809, col_offset=23)], lineno=809, col_offset=13), [Expr(Call(Attribute(Name('parser', Load(), lineno=810, col_offset=12), 'print_help', Load(), lineno=810, col_offset=12), [], [], None, None, lineno=810, col_offset=12), lineno=810, col_offset=12), Expr(Call(Attribute(Name('parser', Load(), lineno=811, col_offset=12), 'exit', Load(), lineno=811, col_offset=12), [], [], None, None, lineno=811, col_offset=12), lineno=811, col_offset=12)], [If(Compare(Name('action', Load(), lineno=812, col_offset=13), [Eq()], [Str('version', lineno=812, col_offset=23)], lineno=812, col_offset=13), [Expr(Call(Attribute(Name('parser', Load(), lineno=813, col_offset=12), 'print_version', Load(), lineno=813, col_offset=12), [], [], None, None, lineno=813, col_offset=12), lineno=813, col_offset=12), Expr(Call(Attribute(Name('parser', Load(), lineno=814, col_offset=12), 'exit', Load(), lineno=814, col_offset=12), [], [], None, None, lineno=814, col_offset=12), lineno=814, col_offset=12)], [Raise(Call(Name('ValueError', Load(), lineno=816, col_offset=18), [BinOp(Str('unknown action %r', lineno=816, col_offset=29), Mod(), Attribute(Name('self', Load(), lineno=816, col_offset=51), 'action', Load(), lineno=816, col_offset=51), lineno=816, col_offset=29)], [], None, None, lineno=816, col_offset=18), None, None, lineno=816, col_offset=12)], lineno=812, col_offset=13)], lineno=809, col_offset=13)], lineno=805, col_offset=13)], lineno=803, col_offset=13)], lineno=801, col_offset=13)], lineno=799, col_offset=13)], lineno=797, col_offset=13)], lineno=795, col_offset=13)], lineno=793, col_offset=13)], lineno=791, col_offset=8), Return(Num(1, lineno=818, col_offset=15), lineno=818, col_offset=8)], [], lineno=790, col_offset=4)], [], lineno=445, col_offset=0), Assign([Name('SUPPRESS_HELP', Store(), lineno=823, col_offset=0)], BinOp(Str('SUPPRESS', lineno=823, col_offset=16), Add(), Str('HELP', lineno=823, col_offset=27), lineno=823, col_offset=16), lineno=823, col_offset=0), Assign([Name('SUPPRESS_USAGE', Store(), lineno=824, col_offset=0)], BinOp(Str('SUPPRESS', lineno=824, col_offset=17), Add(), Str('USAGE', lineno=824, col_offset=28), lineno=824, col_offset=17), lineno=824, col_offset=0), TryExcept([Expr(Name('basestring', Load(), lineno=827, col_offset=4), lineno=827, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=828, col_offset=7), None, [FunctionDef('isbasestring', arguments([Name('x', Param(), lineno=829, col_offset=21)], None, None, []), [Return(Call(Name('isinstance', Load(), lineno=830, col_offset=15), [Name('x', Load(), lineno=830, col_offset=26), Tuple([Attribute(Name('types', Load(), lineno=830, col_offset=30), 'StringType', Load(), lineno=830, col_offset=30), Attribute(Name('types', Load(), lineno=830, col_offset=48), 'UnicodeType', Load(), lineno=830, col_offset=48)], Load(), lineno=830, col_offset=30)], [], None, None, lineno=830, col_offset=15), lineno=830, col_offset=8)], [], lineno=829, col_offset=4)], lineno=828, col_offset=0)], [FunctionDef('isbasestring', arguments([Name('x', Param(), lineno=832, col_offset=21)], None, None, []), [Return(Call(Name('isinstance', Load(), lineno=833, col_offset=15), [Name('x', Load(), lineno=833, col_offset=26), Name('basestring', Load(), lineno=833, col_offset=29)], [], None, None, lineno=833, col_offset=15), lineno=833, col_offset=8)], [], lineno=832, col_offset=4)], lineno=826, col_offset=0), ClassDef('Values', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=837, col_offset=17), Name('defaults', Param(), lineno=837, col_offset=23)], None, None, [Name('None', Load(), lineno=837, col_offset=32)]), [If(Name('defaults', Load(), lineno=838, col_offset=11), [For(Tuple([Name('attr', Store(), lineno=839, col_offset=17), Name('val', Store(), lineno=839, col_offset=23)], Store(), lineno=839, col_offset=17), Call(Attribute(Name('defaults', Load(), lineno=839, col_offset=31), 'items', Load(), lineno=839, col_offset=31), [], [], None, None, lineno=839, col_offset=31), [Expr(Call(Name('setattr', Load(), lineno=840, col_offset=16), [Name('self', Load(), lineno=840, col_offset=24), Name('attr', Load(), lineno=840, col_offset=30), Name('val', Load(), lineno=840, col_offset=36)], [], None, None, lineno=840, col_offset=16), lineno=840, col_offset=16)], [], lineno=839, col_offset=12)], [], lineno=838, col_offset=8)], [], lineno=837, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=842, col_offset=16)], None, None, []), [Return(Call(Name('str', Load(), lineno=843, col_offset=15), [Attribute(Name('self', Load(), lineno=843, col_offset=19), '__dict__', Load(), lineno=843, col_offset=19)], [], None, None, lineno=843, col_offset=15), lineno=843, col_offset=8)], [], lineno=842, col_offset=4), Assign([Name('__repr__', Store(), lineno=845, col_offset=4)], Name('_repr', Load(), lineno=845, col_offset=15), lineno=845, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=847, col_offset=16), Name('other', Param(), lineno=847, col_offset=22)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=848, col_offset=11), [Name('other', Load(), lineno=848, col_offset=22), Name('Values', Load(), lineno=848, col_offset=29)], [], None, None, lineno=848, col_offset=11), [Return(Call(Name('cmp', Load(), lineno=849, col_offset=19), [Attribute(Name('self', Load(), lineno=849, col_offset=23), '__dict__', Load(), lineno=849, col_offset=23), Attribute(Name('other', Load(), lineno=849, col_offset=38), '__dict__', Load(), lineno=849, col_offset=38)], [], None, None, lineno=849, col_offset=19), lineno=849, col_offset=12)], [If(Call(Name('isinstance', Load(), lineno=850, col_offset=13), [Name('other', Load(), lineno=850, col_offset=24), Attribute(Name('types', Load(), lineno=850, col_offset=31), 'DictType', Load(), lineno=850, col_offset=31)], [], None, None, lineno=850, col_offset=13), [Return(Call(Name('cmp', Load(), lineno=851, col_offset=19), [Attribute(Name('self', Load(), lineno=851, col_offset=23), '__dict__', Load(), lineno=851, col_offset=23), Name('other', Load(), lineno=851, col_offset=38)], [], None, None, lineno=851, col_offset=19), lineno=851, col_offset=12)], [Return(Num(-1, lineno=853, col_offset=20), lineno=853, col_offset=12)], lineno=850, col_offset=13)], lineno=848, col_offset=8)], [], lineno=847, col_offset=4), FunctionDef('_update_careful', arguments([Name('self', Param(), lineno=855, col_offset=24), Name('dict', Param(), lineno=855, col_offset=30)], None, None, []), [Expr(Str('\n        Update the option values from an arbitrary dictionary, but only\n        use keys from dict that already have a corresponding attribute\n        in self.  Any keys in dict without a corresponding attribute\n        are silently ignored.\n        ', lineno=861, col_offset=-1), lineno=861, col_offset=-1), For(Name('attr', Store(), lineno=862, col_offset=12), Call(Name('dir', Load(), lineno=862, col_offset=20), [Name('self', Load(), lineno=862, col_offset=24)], [], None, None, lineno=862, col_offset=20), [If(Compare(Name('attr', Load(), lineno=863, col_offset=15), [In()], [Name('dict', Load(), lineno=863, col_offset=23)], lineno=863, col_offset=15), [Assign([Name('dval', Store(), lineno=864, col_offset=16)], Subscript(Name('dict', Load(), lineno=864, col_offset=23), Index(Name('attr', Load(), lineno=864, col_offset=28)), Load(), lineno=864, col_offset=23), lineno=864, col_offset=16), If(Compare(Name('dval', Load(), lineno=865, col_offset=19), [IsNot()], [Name('None', Load(), lineno=865, col_offset=31)], lineno=865, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=866, col_offset=20), [Name('self', Load(), lineno=866, col_offset=28), Name('attr', Load(), lineno=866, col_offset=34), Name('dval', Load(), lineno=866, col_offset=40)], [], None, None, lineno=866, col_offset=20), lineno=866, col_offset=20)], [], lineno=865, col_offset=16)], [], lineno=863, col_offset=12)], [], lineno=862, col_offset=8)], [], lineno=855, col_offset=4), FunctionDef('_update_loose', arguments([Name('self', Param(), lineno=868, col_offset=22), Name('dict', Param(), lineno=868, col_offset=28)], None, None, []), [Expr(Str('\n        Update the option values from an arbitrary dictionary,\n        using all keys from the dictionary regardless of whether\n        they have a corresponding attribute in self or not.\n        ', lineno=873, col_offset=-1), lineno=873, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=874, col_offset=8), '__dict__', Load(), lineno=874, col_offset=8), 'update', Load(), lineno=874, col_offset=8), [Name('dict', Load(), lineno=874, col_offset=29)], [], None, None, lineno=874, col_offset=8), lineno=874, col_offset=8)], [], lineno=868, col_offset=4), FunctionDef('_update', arguments([Name('self', Param(), lineno=876, col_offset=16), Name('dict', Param(), lineno=876, col_offset=22), Name('mode', Param(), lineno=876, col_offset=28)], None, None, []), [If(Compare(Name('mode', Load(), lineno=877, col_offset=11), [Eq()], [Str('careful', lineno=877, col_offset=19)], lineno=877, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=878, col_offset=12), '_update_careful', Load(), lineno=878, col_offset=12), [Name('dict', Load(), lineno=878, col_offset=33)], [], None, None, lineno=878, col_offset=12), lineno=878, col_offset=12)], [If(Compare(Name('mode', Load(), lineno=879, col_offset=13), [Eq()], [Str('loose', lineno=879, col_offset=21)], lineno=879, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=880, col_offset=12), '_update_loose', Load(), lineno=880, col_offset=12), [Name('dict', Load(), lineno=880, col_offset=31)], [], None, None, lineno=880, col_offset=12), lineno=880, col_offset=12)], [Raise(Name('ValueError', Load(), lineno=882, col_offset=18), BinOp(Str('invalid update mode: %r', lineno=882, col_offset=30), Mod(), Name('mode', Load(), lineno=882, col_offset=58), lineno=882, col_offset=30), None, lineno=882, col_offset=12)], lineno=879, col_offset=13)], lineno=877, col_offset=8)], [], lineno=876, col_offset=4), FunctionDef('read_module', arguments([Name('self', Param(), lineno=884, col_offset=20), Name('modname', Param(), lineno=884, col_offset=26), Name('mode', Param(), lineno=884, col_offset=35)], None, None, [Str('careful', lineno=884, col_offset=40)]), [Expr(Call(Name('__import__', Load(), lineno=885, col_offset=8), [Name('modname', Load(), lineno=885, col_offset=19)], [], None, None, lineno=885, col_offset=8), lineno=885, col_offset=8), Assign([Name('mod', Store(), lineno=886, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=886, col_offset=14), 'modules', Load(), lineno=886, col_offset=14), Index(Name('modname', Load(), lineno=886, col_offset=26)), Load(), lineno=886, col_offset=14), lineno=886, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=887, col_offset=8), '_update', Load(), lineno=887, col_offset=8), [Call(Name('vars', Load(), lineno=887, col_offset=21), [Name('mod', Load(), lineno=887, col_offset=26)], [], None, None, lineno=887, col_offset=21), Name('mode', Load(), lineno=887, col_offset=32)], [], None, None, lineno=887, col_offset=8), lineno=887, col_offset=8)], [], lineno=884, col_offset=4), FunctionDef('read_file', arguments([Name('self', Param(), lineno=889, col_offset=18), Name('filename', Param(), lineno=889, col_offset=24), Name('mode', Param(), lineno=889, col_offset=34)], None, None, [Str('careful', lineno=889, col_offset=39)]), [Assign([Name('vars', Store(), lineno=890, col_offset=8)], Dict([], [], lineno=890, col_offset=15), lineno=890, col_offset=8), Expr(Call(Name('execfile', Load(), lineno=891, col_offset=8), [Name('filename', Load(), lineno=891, col_offset=17), Name('vars', Load(), lineno=891, col_offset=27)], [], None, None, lineno=891, col_offset=8), lineno=891, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=892, col_offset=8), '_update', Load(), lineno=892, col_offset=8), [Name('vars', Load(), lineno=892, col_offset=21), Name('mode', Load(), lineno=892, col_offset=27)], [], None, None, lineno=892, col_offset=8), lineno=892, col_offset=8)], [], lineno=889, col_offset=4), FunctionDef('ensure_value', arguments([Name('self', Param(), lineno=894, col_offset=21), Name('attr', Param(), lineno=894, col_offset=27), Name('value', Param(), lineno=894, col_offset=33)], None, None, []), [If(BoolOp(Or(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=895, col_offset=15), [Name('self', Load(), lineno=895, col_offset=23), Name('attr', Load(), lineno=895, col_offset=29)], [], None, None, lineno=895, col_offset=15), lineno=895, col_offset=11), Compare(Call(Name('getattr', Load(), lineno=895, col_offset=38), [Name('self', Load(), lineno=895, col_offset=46), Name('attr', Load(), lineno=895, col_offset=52)], [], None, None, lineno=895, col_offset=38), [Is()], [Name('None', Load(), lineno=895, col_offset=61)], lineno=895, col_offset=38)], lineno=895, col_offset=11), [Expr(Call(Name('setattr', Load(), lineno=896, col_offset=12), [Name('self', Load(), lineno=896, col_offset=20), Name('attr', Load(), lineno=896, col_offset=26), Name('value', Load(), lineno=896, col_offset=32)], [], None, None, lineno=896, col_offset=12), lineno=896, col_offset=12)], [], lineno=895, col_offset=8), Return(Call(Name('getattr', Load(), lineno=897, col_offset=15), [Name('self', Load(), lineno=897, col_offset=23), Name('attr', Load(), lineno=897, col_offset=29)], [], None, None, lineno=897, col_offset=15), lineno=897, col_offset=8)], [], lineno=894, col_offset=4)], [], lineno=835, col_offset=0), ClassDef('OptionContainer', [], [Expr(Str('\n    Abstract base class.\n\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      option_list : [Option]\n        the list of Option objects contained by this OptionContainer\n      _short_opt : { string : Option }\n        dictionary mapping short option strings, eg. "-f" or "-X",\n        to the Option instances that implement them.  If an Option\n        has multiple short option strings, it will appears in this\n        dictionary multiple times. [1]\n      _long_opt : { string : Option }\n        dictionary mapping long option strings, eg. "--file" or\n        "--exclude", to the Option instances that implement them.\n        Again, a given Option can occur multiple times in this\n        dictionary. [1]\n      defaults : { string : any }\n        dictionary mapping option destination names to default\n        values for each destination [1]\n\n    [1] These mappings are common to (shared by) all components of the\n        controlling OptionParser, where they are initially created.\n\n    ', lineno=930, col_offset=-1), lineno=930, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=932, col_offset=17), Name('option_class', Param(), lineno=932, col_offset=23), Name('conflict_handler', Param(), lineno=932, col_offset=37), Name('description', Param(), lineno=932, col_offset=55)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=937, col_offset=8), '_create_option_list', Load(), lineno=937, col_offset=8), [], [], None, None, lineno=937, col_offset=8), lineno=937, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=939, col_offset=8), 'option_class', Store(), lineno=939, col_offset=8)], Name('option_class', Load(), lineno=939, col_offset=28), lineno=939, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=940, col_offset=8), 'set_conflict_handler', Load(), lineno=940, col_offset=8), [Name('conflict_handler', Load(), lineno=940, col_offset=34)], [], None, None, lineno=940, col_offset=8), lineno=940, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=941, col_offset=8), 'set_description', Load(), lineno=941, col_offset=8), [Name('description', Load(), lineno=941, col_offset=29)], [], None, None, lineno=941, col_offset=8), lineno=941, col_offset=8)], [], lineno=932, col_offset=4), FunctionDef('_create_option_mappings', arguments([Name('self', Param(), lineno=943, col_offset=32)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=947, col_offset=8), '_short_opt', Store(), lineno=947, col_offset=8)], Dict([], [], lineno=947, col_offset=26), lineno=947, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=948, col_offset=8), '_long_opt', Store(), lineno=948, col_offset=8)], Dict([], [], lineno=948, col_offset=25), lineno=948, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=949, col_offset=8), 'defaults', Store(), lineno=949, col_offset=8)], Dict([], [], lineno=949, col_offset=24), lineno=949, col_offset=8)], [], lineno=943, col_offset=4), FunctionDef('_share_option_mappings', arguments([Name('self', Param(), lineno=952, col_offset=31), Name('parser', Param(), lineno=952, col_offset=37)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=955, col_offset=8), '_short_opt', Store(), lineno=955, col_offset=8)], Attribute(Name('parser', Load(), lineno=955, col_offset=26), '_short_opt', Load(), lineno=955, col_offset=26), lineno=955, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=956, col_offset=8), '_long_opt', Store(), lineno=956, col_offset=8)], Attribute(Name('parser', Load(), lineno=956, col_offset=25), '_long_opt', Load(), lineno=956, col_offset=25), lineno=956, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=957, col_offset=8), 'defaults', Store(), lineno=957, col_offset=8)], Attribute(Name('parser', Load(), lineno=957, col_offset=24), 'defaults', Load(), lineno=957, col_offset=24), lineno=957, col_offset=8)], [], lineno=952, col_offset=4), FunctionDef('set_conflict_handler', arguments([Name('self', Param(), lineno=959, col_offset=29), Name('handler', Param(), lineno=959, col_offset=35)], None, None, []), [If(Compare(Name('handler', Load(), lineno=960, col_offset=11), [NotIn()], [Tuple([Str('error', lineno=960, col_offset=27), Str('resolve', lineno=960, col_offset=36)], Load(), lineno=960, col_offset=27)], lineno=960, col_offset=11), [Raise(Name('ValueError', Load(), lineno=961, col_offset=18), BinOp(Str('invalid conflict_resolution value %r', lineno=961, col_offset=30), Mod(), Name('handler', Load(), lineno=961, col_offset=71), lineno=961, col_offset=30), None, lineno=961, col_offset=12)], [], lineno=960, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=962, col_offset=8), 'conflict_handler', Store(), lineno=962, col_offset=8)], Name('handler', Load(), lineno=962, col_offset=32), lineno=962, col_offset=8)], [], lineno=959, col_offset=4), FunctionDef('set_description', arguments([Name('self', Param(), lineno=964, col_offset=24), Name('description', Param(), lineno=964, col_offset=30)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=965, col_offset=8), 'description', Store(), lineno=965, col_offset=8)], Name('description', Load(), lineno=965, col_offset=27), lineno=965, col_offset=8)], [], lineno=964, col_offset=4), FunctionDef('get_description', arguments([Name('self', Param(), lineno=967, col_offset=24)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=968, col_offset=15), 'description', Load(), lineno=968, col_offset=15), lineno=968, col_offset=8)], [], lineno=967, col_offset=4), FunctionDef('destroy', arguments([Name('self', Param(), lineno=971, col_offset=16)], None, None, []), [Expr(Str('see OptionParser.destroy().', lineno=972, col_offset=8), lineno=972, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=973, col_offset=12), '_short_opt', Del(), lineno=973, col_offset=12)], lineno=973, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=974, col_offset=12), '_long_opt', Del(), lineno=974, col_offset=12)], lineno=974, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=975, col_offset=12), 'defaults', Del(), lineno=975, col_offset=12)], lineno=975, col_offset=8)], [], lineno=971, col_offset=4), FunctionDef('_check_conflict', arguments([Name('self', Param(), lineno=980, col_offset=24), Name('option', Param(), lineno=980, col_offset=30)], None, None, []), [Assign([Name('conflict_opts', Store(), lineno=981, col_offset=8)], List([], Load(), lineno=981, col_offset=24), lineno=981, col_offset=8), For(Name('opt', Store(), lineno=982, col_offset=12), Attribute(Name('option', Load(), lineno=982, col_offset=19), '_short_opts', Load(), lineno=982, col_offset=19), [If(Compare(Name('opt', Load(), lineno=983, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=983, col_offset=22), '_short_opt', Load(), lineno=983, col_offset=22)], lineno=983, col_offset=15), [Expr(Call(Attribute(Name('conflict_opts', Load(), lineno=984, col_offset=16), 'append', Load(), lineno=984, col_offset=16), [Tuple([Name('opt', Load(), lineno=984, col_offset=38), Subscript(Attribute(Name('self', Load(), lineno=984, col_offset=43), '_short_opt', Load(), lineno=984, col_offset=43), Index(Name('opt', Load(), lineno=984, col_offset=59)), Load(), lineno=984, col_offset=43)], Load(), lineno=984, col_offset=38)], [], None, None, lineno=984, col_offset=16), lineno=984, col_offset=16)], [], lineno=983, col_offset=12)], [], lineno=982, col_offset=8), For(Name('opt', Store(), lineno=985, col_offset=12), Attribute(Name('option', Load(), lineno=985, col_offset=19), '_long_opts', Load(), lineno=985, col_offset=19), [If(Compare(Name('opt', Load(), lineno=986, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=986, col_offset=22), '_long_opt', Load(), lineno=986, col_offset=22)], lineno=986, col_offset=15), [Expr(Call(Attribute(Name('conflict_opts', Load(), lineno=987, col_offset=16), 'append', Load(), lineno=987, col_offset=16), [Tuple([Name('opt', Load(), lineno=987, col_offset=38), Subscript(Attribute(Name('self', Load(), lineno=987, col_offset=43), '_long_opt', Load(), lineno=987, col_offset=43), Index(Name('opt', Load(), lineno=987, col_offset=58)), Load(), lineno=987, col_offset=43)], Load(), lineno=987, col_offset=38)], [], None, None, lineno=987, col_offset=16), lineno=987, col_offset=16)], [], lineno=986, col_offset=12)], [], lineno=985, col_offset=8), If(Name('conflict_opts', Load(), lineno=989, col_offset=11), [Assign([Name('handler', Store(), lineno=990, col_offset=12)], Attribute(Name('self', Load(), lineno=990, col_offset=22), 'conflict_handler', Load(), lineno=990, col_offset=22), lineno=990, col_offset=12), If(Compare(Name('handler', Load(), lineno=991, col_offset=15), [Eq()], [Str('error', lineno=991, col_offset=26)], lineno=991, col_offset=15), [Raise(Call(Name('OptionConflictError', Load(), lineno=992, col_offset=22), [BinOp(Str('conflicting option string(s): %s', lineno=993, col_offset=20), Mod(), Call(Attribute(Str(', ', lineno=994, col_offset=22), 'join', Load(), lineno=994, col_offset=22), [ListComp(Subscript(Name('co', Load(), lineno=994, col_offset=33), Index(Num(0, lineno=994, col_offset=36)), Load(), lineno=994, col_offset=33), [comprehension(Name('co', Store(), lineno=994, col_offset=43), Name('conflict_opts', Load(), lineno=994, col_offset=49), [])], lineno=994, col_offset=33)], [], None, None, lineno=994, col_offset=22), lineno=993, col_offset=20), Name('option', Load(), lineno=995, col_offset=20)], [], None, None, lineno=992, col_offset=22), None, None, lineno=992, col_offset=16)], [If(Compare(Name('handler', Load(), lineno=996, col_offset=17), [Eq()], [Str('resolve', lineno=996, col_offset=28)], lineno=996, col_offset=17), [For(Tuple([Name('opt', Store(), lineno=997, col_offset=21), Name('c_option', Store(), lineno=997, col_offset=26)], Store(), lineno=997, col_offset=21), Name('conflict_opts', Load(), lineno=997, col_offset=39), [If(Call(Attribute(Name('opt', Load(), lineno=998, col_offset=23), 'startswith', Load(), lineno=998, col_offset=23), [Str('--', lineno=998, col_offset=38)], [], None, None, lineno=998, col_offset=23), [Expr(Call(Attribute(Attribute(Name('c_option', Load(), lineno=999, col_offset=24), '_long_opts', Load(), lineno=999, col_offset=24), 'remove', Load(), lineno=999, col_offset=24), [Name('opt', Load(), lineno=999, col_offset=51)], [], None, None, lineno=999, col_offset=24), lineno=999, col_offset=24), Delete([Subscript(Attribute(Name('self', Load(), lineno=1000, col_offset=28), '_long_opt', Load(), lineno=1000, col_offset=28), Index(Name('opt', Load(), lineno=1000, col_offset=43)), Del(), lineno=1000, col_offset=28)], lineno=1000, col_offset=24)], [Expr(Call(Attribute(Attribute(Name('c_option', Load(), lineno=1002, col_offset=24), '_short_opts', Load(), lineno=1002, col_offset=24), 'remove', Load(), lineno=1002, col_offset=24), [Name('opt', Load(), lineno=1002, col_offset=52)], [], None, None, lineno=1002, col_offset=24), lineno=1002, col_offset=24), Delete([Subscript(Attribute(Name('self', Load(), lineno=1003, col_offset=28), '_short_opt', Load(), lineno=1003, col_offset=28), Index(Name('opt', Load(), lineno=1003, col_offset=44)), Del(), lineno=1003, col_offset=28)], lineno=1003, col_offset=24)], lineno=998, col_offset=20), If(UnaryOp(Not(), BoolOp(Or(), [Attribute(Name('c_option', Load(), lineno=1004, col_offset=28), '_short_opts', Load(), lineno=1004, col_offset=28), Attribute(Name('c_option', Load(), lineno=1004, col_offset=52), '_long_opts', Load(), lineno=1004, col_offset=52)], lineno=1004, col_offset=28), lineno=1004, col_offset=23), [Expr(Call(Attribute(Attribute(Attribute(Name('c_option', Load(), lineno=1005, col_offset=24), 'container', Load(), lineno=1005, col_offset=24), 'option_list', Load(), lineno=1005, col_offset=24), 'remove', Load(), lineno=1005, col_offset=24), [Name('c_option', Load(), lineno=1005, col_offset=62)], [], None, None, lineno=1005, col_offset=24), lineno=1005, col_offset=24)], [], lineno=1004, col_offset=20)], [], lineno=997, col_offset=16)], [], lineno=996, col_offset=17)], lineno=991, col_offset=12)], [], lineno=989, col_offset=8)], [], lineno=980, col_offset=4), FunctionDef('add_option', arguments([Name('self', Param(), lineno=1007, col_offset=19)], 'args', 'kwargs', []), [Expr(Str('add_option(Option)\n           add_option(opt_str, ..., kwarg=val, ...)\n        ', lineno=1010, col_offset=-1), lineno=1010, col_offset=-1), If(Compare(Call(Name('type', Load(), lineno=1011, col_offset=11), [Subscript(Name('args', Load(), lineno=1011, col_offset=16), Index(Num(0, lineno=1011, col_offset=21)), Load(), lineno=1011, col_offset=16)], [], None, None, lineno=1011, col_offset=11), [In()], [Attribute(Name('types', Load(), lineno=1011, col_offset=28), 'StringTypes', Load(), lineno=1011, col_offset=28)], lineno=1011, col_offset=11), [Assign([Name('option', Store(), lineno=1012, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1012, col_offset=21), 'option_class', Load(), lineno=1012, col_offset=21), [], [], Name('args', Load(), lineno=1012, col_offset=40), Name('kwargs', Load(), lineno=1012, col_offset=48), lineno=1012, col_offset=21), lineno=1012, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=1013, col_offset=13), [Name('args', Load(), lineno=1013, col_offset=17)], [], None, None, lineno=1013, col_offset=13), [Eq()], [Num(1, lineno=1013, col_offset=26)], lineno=1013, col_offset=13), UnaryOp(Not(), Name('kwargs', Load(), lineno=1013, col_offset=36), lineno=1013, col_offset=32)], lineno=1013, col_offset=13), [Assign([Name('option', Store(), lineno=1014, col_offset=12)], Subscript(Name('args', Load(), lineno=1014, col_offset=21), Index(Num(0, lineno=1014, col_offset=26)), Load(), lineno=1014, col_offset=21), lineno=1014, col_offset=12), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=1015, col_offset=19), [Name('option', Load(), lineno=1015, col_offset=30), Name('Option', Load(), lineno=1015, col_offset=38)], [], None, None, lineno=1015, col_offset=19), lineno=1015, col_offset=15), [Raise(Name('TypeError', Load(), lineno=1016, col_offset=22), BinOp(Str('not an Option instance: %r', lineno=1016, col_offset=33), Mod(), Name('option', Load(), lineno=1016, col_offset=64), lineno=1016, col_offset=33), None, lineno=1016, col_offset=16)], [], lineno=1015, col_offset=12)], [Raise(Name('TypeError', Load(), lineno=1018, col_offset=18), Str('invalid arguments', lineno=1018, col_offset=29), None, lineno=1018, col_offset=12)], lineno=1013, col_offset=13)], lineno=1011, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1020, col_offset=8), '_check_conflict', Load(), lineno=1020, col_offset=8), [Name('option', Load(), lineno=1020, col_offset=29)], [], None, None, lineno=1020, col_offset=8), lineno=1020, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1022, col_offset=8), 'option_list', Load(), lineno=1022, col_offset=8), 'append', Load(), lineno=1022, col_offset=8), [Name('option', Load(), lineno=1022, col_offset=32)], [], None, None, lineno=1022, col_offset=8), lineno=1022, col_offset=8), Assign([Attribute(Name('option', Load(), lineno=1023, col_offset=8), 'container', Store(), lineno=1023, col_offset=8)], Name('self', Load(), lineno=1023, col_offset=27), lineno=1023, col_offset=8), For(Name('opt', Store(), lineno=1024, col_offset=12), Attribute(Name('option', Load(), lineno=1024, col_offset=19), '_short_opts', Load(), lineno=1024, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1025, col_offset=12), '_short_opt', Load(), lineno=1025, col_offset=12), Index(Name('opt', Load(), lineno=1025, col_offset=28)), Store(), lineno=1025, col_offset=12)], Name('option', Load(), lineno=1025, col_offset=35), lineno=1025, col_offset=12)], [], lineno=1024, col_offset=8), For(Name('opt', Store(), lineno=1026, col_offset=12), Attribute(Name('option', Load(), lineno=1026, col_offset=19), '_long_opts', Load(), lineno=1026, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1027, col_offset=12), '_long_opt', Load(), lineno=1027, col_offset=12), Index(Name('opt', Load(), lineno=1027, col_offset=27)), Store(), lineno=1027, col_offset=12)], Name('option', Load(), lineno=1027, col_offset=34), lineno=1027, col_offset=12)], [], lineno=1026, col_offset=8), If(Compare(Attribute(Name('option', Load(), lineno=1029, col_offset=11), 'dest', Load(), lineno=1029, col_offset=11), [IsNot()], [Name('None', Load(), lineno=1029, col_offset=30)], lineno=1029, col_offset=11), [If(Compare(Attribute(Name('option', Load(), lineno=1030, col_offset=15), 'default', Load(), lineno=1030, col_offset=15), [IsNot()], [Name('NO_DEFAULT', Load(), lineno=1030, col_offset=37)], lineno=1030, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1031, col_offset=16), 'defaults', Load(), lineno=1031, col_offset=16), Index(Attribute(Name('option', Load(), lineno=1031, col_offset=30), 'dest', Load(), lineno=1031, col_offset=30)), Store(), lineno=1031, col_offset=16)], Attribute(Name('option', Load(), lineno=1031, col_offset=45), 'default', Load(), lineno=1031, col_offset=45), lineno=1031, col_offset=16)], [If(Compare(Attribute(Name('option', Load(), lineno=1032, col_offset=17), 'dest', Load(), lineno=1032, col_offset=17), [NotIn()], [Attribute(Name('self', Load(), lineno=1032, col_offset=36), 'defaults', Load(), lineno=1032, col_offset=36)], lineno=1032, col_offset=17), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1033, col_offset=16), 'defaults', Load(), lineno=1033, col_offset=16), Index(Attribute(Name('option', Load(), lineno=1033, col_offset=30), 'dest', Load(), lineno=1033, col_offset=30)), Store(), lineno=1033, col_offset=16)], Name('None', Load(), lineno=1033, col_offset=45), lineno=1033, col_offset=16)], [], lineno=1032, col_offset=17)], lineno=1030, col_offset=12)], [], lineno=1029, col_offset=8), Return(Name('option', Load(), lineno=1035, col_offset=15), lineno=1035, col_offset=8)], [], lineno=1007, col_offset=4), FunctionDef('add_options', arguments([Name('self', Param(), lineno=1037, col_offset=20), Name('option_list', Param(), lineno=1037, col_offset=26)], None, None, []), [For(Name('option', Store(), lineno=1038, col_offset=12), Name('option_list', Load(), lineno=1038, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=1039, col_offset=12), 'add_option', Load(), lineno=1039, col_offset=12), [Name('option', Load(), lineno=1039, col_offset=28)], [], None, None, lineno=1039, col_offset=12), lineno=1039, col_offset=12)], [], lineno=1038, col_offset=8)], [], lineno=1037, col_offset=4), FunctionDef('get_option', arguments([Name('self', Param(), lineno=1043, col_offset=19), Name('opt_str', Param(), lineno=1043, col_offset=25)], None, None, []), [Return(BoolOp(Or(), [Call(Attribute(Attribute(Name('self', Load(), lineno=1044, col_offset=16), '_short_opt', Load(), lineno=1044, col_offset=16), 'get', Load(), lineno=1044, col_offset=16), [Name('opt_str', Load(), lineno=1044, col_offset=36)], [], None, None, lineno=1044, col_offset=16), Call(Attribute(Attribute(Name('self', Load(), lineno=1045, col_offset=16), '_long_opt', Load(), lineno=1045, col_offset=16), 'get', Load(), lineno=1045, col_offset=16), [Name('opt_str', Load(), lineno=1045, col_offset=35)], [], None, None, lineno=1045, col_offset=16)], lineno=1044, col_offset=16), lineno=1044, col_offset=8)], [], lineno=1043, col_offset=4), FunctionDef('has_option', arguments([Name('self', Param(), lineno=1047, col_offset=19), Name('opt_str', Param(), lineno=1047, col_offset=25)], None, None, []), [Return(BoolOp(Or(), [Compare(Name('opt_str', Load(), lineno=1048, col_offset=16), [In()], [Attribute(Name('self', Load(), lineno=1048, col_offset=27), '_short_opt', Load(), lineno=1048, col_offset=27)], lineno=1048, col_offset=16), Compare(Name('opt_str', Load(), lineno=1049, col_offset=16), [In()], [Attribute(Name('self', Load(), lineno=1049, col_offset=27), '_long_opt', Load(), lineno=1049, col_offset=27)], lineno=1049, col_offset=16)], lineno=1048, col_offset=16), lineno=1048, col_offset=8)], [], lineno=1047, col_offset=4), FunctionDef('remove_option', arguments([Name('self', Param(), lineno=1051, col_offset=22), Name('opt_str', Param(), lineno=1051, col_offset=28)], None, None, []), [Assign([Name('option', Store(), lineno=1052, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1052, col_offset=17), '_short_opt', Load(), lineno=1052, col_offset=17), 'get', Load(), lineno=1052, col_offset=17), [Name('opt_str', Load(), lineno=1052, col_offset=37)], [], None, None, lineno=1052, col_offset=17), lineno=1052, col_offset=8), If(Compare(Name('option', Load(), lineno=1053, col_offset=11), [Is()], [Name('None', Load(), lineno=1053, col_offset=21)], lineno=1053, col_offset=11), [Assign([Name('option', Store(), lineno=1054, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1054, col_offset=21), '_long_opt', Load(), lineno=1054, col_offset=21), 'get', Load(), lineno=1054, col_offset=21), [Name('opt_str', Load(), lineno=1054, col_offset=40)], [], None, None, lineno=1054, col_offset=21), lineno=1054, col_offset=12)], [], lineno=1053, col_offset=8), If(Compare(Name('option', Load(), lineno=1055, col_offset=11), [Is()], [Name('None', Load(), lineno=1055, col_offset=21)], lineno=1055, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=1056, col_offset=18), [BinOp(Str('no such option %r', lineno=1056, col_offset=29), Mod(), Name('opt_str', Load(), lineno=1056, col_offset=51), lineno=1056, col_offset=29)], [], None, None, lineno=1056, col_offset=18), None, None, lineno=1056, col_offset=12)], [], lineno=1055, col_offset=8), For(Name('opt', Store(), lineno=1058, col_offset=12), Attribute(Name('option', Load(), lineno=1058, col_offset=19), '_short_opts', Load(), lineno=1058, col_offset=19), [Delete([Subscript(Attribute(Name('self', Load(), lineno=1059, col_offset=16), '_short_opt', Load(), lineno=1059, col_offset=16), Index(Name('opt', Load(), lineno=1059, col_offset=32)), Del(), lineno=1059, col_offset=16)], lineno=1059, col_offset=12)], [], lineno=1058, col_offset=8), For(Name('opt', Store(), lineno=1060, col_offset=12), Attribute(Name('option', Load(), lineno=1060, col_offset=19), '_long_opts', Load(), lineno=1060, col_offset=19), [Delete([Subscript(Attribute(Name('self', Load(), lineno=1061, col_offset=16), '_long_opt', Load(), lineno=1061, col_offset=16), Index(Name('opt', Load(), lineno=1061, col_offset=31)), Del(), lineno=1061, col_offset=16)], lineno=1061, col_offset=12)], [], lineno=1060, col_offset=8), Expr(Call(Attribute(Attribute(Attribute(Name('option', Load(), lineno=1062, col_offset=8), 'container', Load(), lineno=1062, col_offset=8), 'option_list', Load(), lineno=1062, col_offset=8), 'remove', Load(), lineno=1062, col_offset=8), [Name('option', Load(), lineno=1062, col_offset=44)], [], None, None, lineno=1062, col_offset=8), lineno=1062, col_offset=8)], [], lineno=1051, col_offset=4), FunctionDef('format_option_help', arguments([Name('self', Param(), lineno=1067, col_offset=27), Name('formatter', Param(), lineno=1067, col_offset=33)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1068, col_offset=15), 'option_list', Load(), lineno=1068, col_offset=15), lineno=1068, col_offset=11), [Return(Str('', lineno=1069, col_offset=19), lineno=1069, col_offset=12)], [], lineno=1068, col_offset=8), Assign([Name('result', Store(), lineno=1070, col_offset=8)], List([], Load(), lineno=1070, col_offset=17), lineno=1070, col_offset=8), For(Name('option', Store(), lineno=1071, col_offset=12), Attribute(Name('self', Load(), lineno=1071, col_offset=22), 'option_list', Load(), lineno=1071, col_offset=22), [If(UnaryOp(Not(), Compare(Attribute(Name('option', Load(), lineno=1072, col_offset=19), 'help', Load(), lineno=1072, col_offset=19), [Is()], [Name('SUPPRESS_HELP', Load(), lineno=1072, col_offset=34)], lineno=1072, col_offset=19), lineno=1072, col_offset=15), [Expr(Call(Attribute(Name('result', Load(), lineno=1073, col_offset=16), 'append', Load(), lineno=1073, col_offset=16), [Call(Attribute(Name('formatter', Load(), lineno=1073, col_offset=30), 'format_option', Load(), lineno=1073, col_offset=30), [Name('option', Load(), lineno=1073, col_offset=54)], [], None, None, lineno=1073, col_offset=30)], [], None, None, lineno=1073, col_offset=16), lineno=1073, col_offset=16)], [], lineno=1072, col_offset=12)], [], lineno=1071, col_offset=8), Return(Call(Attribute(Str('', lineno=1074, col_offset=15), 'join', Load(), lineno=1074, col_offset=15), [Name('result', Load(), lineno=1074, col_offset=23)], [], None, None, lineno=1074, col_offset=15), lineno=1074, col_offset=8)], [], lineno=1067, col_offset=4), FunctionDef('format_description', arguments([Name('self', Param(), lineno=1076, col_offset=27), Name('formatter', Param(), lineno=1076, col_offset=33)], None, None, []), [Return(Call(Attribute(Name('formatter', Load(), lineno=1077, col_offset=15), 'format_description', Load(), lineno=1077, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=1077, col_offset=44), 'get_description', Load(), lineno=1077, col_offset=44), [], [], None, None, lineno=1077, col_offset=44)], [], None, None, lineno=1077, col_offset=15), lineno=1077, col_offset=8)], [], lineno=1076, col_offset=4), FunctionDef('format_help', arguments([Name('self', Param(), lineno=1079, col_offset=20), Name('formatter', Param(), lineno=1079, col_offset=26)], None, None, []), [Assign([Name('result', Store(), lineno=1080, col_offset=8)], List([], Load(), lineno=1080, col_offset=17), lineno=1080, col_offset=8), If(Attribute(Name('self', Load(), lineno=1081, col_offset=11), 'description', Load(), lineno=1081, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=1082, col_offset=12), 'append', Load(), lineno=1082, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1082, col_offset=26), 'format_description', Load(), lineno=1082, col_offset=26), [Name('formatter', Load(), lineno=1082, col_offset=50)], [], None, None, lineno=1082, col_offset=26)], [], None, None, lineno=1082, col_offset=12), lineno=1082, col_offset=12)], [], lineno=1081, col_offset=8), If(Attribute(Name('self', Load(), lineno=1083, col_offset=11), 'option_list', Load(), lineno=1083, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=1084, col_offset=12), 'append', Load(), lineno=1084, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1084, col_offset=26), 'format_option_help', Load(), lineno=1084, col_offset=26), [Name('formatter', Load(), lineno=1084, col_offset=50)], [], None, None, lineno=1084, col_offset=26)], [], None, None, lineno=1084, col_offset=12), lineno=1084, col_offset=12)], [], lineno=1083, col_offset=8), Return(Call(Attribute(Str('\n', lineno=1085, col_offset=15), 'join', Load(), lineno=1085, col_offset=15), [Name('result', Load(), lineno=1085, col_offset=25)], [], None, None, lineno=1085, col_offset=15), lineno=1085, col_offset=8)], [], lineno=1079, col_offset=4)], [], lineno=900, col_offset=0), ClassDef('OptionGroup', [Name('OptionContainer', Load(), lineno=1088, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1090, col_offset=17), Name('parser', Param(), lineno=1090, col_offset=23), Name('title', Param(), lineno=1090, col_offset=31), Name('description', Param(), lineno=1090, col_offset=38)], None, None, [Name('None', Load(), lineno=1090, col_offset=50)]), [Assign([Attribute(Name('self', Load(), lineno=1091, col_offset=8), 'parser', Store(), lineno=1091, col_offset=8)], Name('parser', Load(), lineno=1091, col_offset=22), lineno=1091, col_offset=8), Expr(Call(Attribute(Name('OptionContainer', Load(), lineno=1092, col_offset=8), '__init__', Load(), lineno=1092, col_offset=8), [Name('self', Load(), lineno=1093, col_offset=12), Attribute(Name('parser', Load(), lineno=1093, col_offset=18), 'option_class', Load(), lineno=1093, col_offset=18), Attribute(Name('parser', Load(), lineno=1093, col_offset=39), 'conflict_handler', Load(), lineno=1093, col_offset=39), Name('description', Load(), lineno=1093, col_offset=64)], [], None, None, lineno=1092, col_offset=8), lineno=1092, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1094, col_offset=8), 'title', Store(), lineno=1094, col_offset=8)], Name('title', Load(), lineno=1094, col_offset=21), lineno=1094, col_offset=8)], [], lineno=1090, col_offset=4), FunctionDef('_create_option_list', arguments([Name('self', Param(), lineno=1096, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1097, col_offset=8), 'option_list', Store(), lineno=1097, col_offset=8)], List([], Load(), lineno=1097, col_offset=27), lineno=1097, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1098, col_offset=8), '_share_option_mappings', Load(), lineno=1098, col_offset=8), [Attribute(Name('self', Load(), lineno=1098, col_offset=36), 'parser', Load(), lineno=1098, col_offset=36)], [], None, None, lineno=1098, col_offset=8), lineno=1098, col_offset=8)], [], lineno=1096, col_offset=4), FunctionDef('set_title', arguments([Name('self', Param(), lineno=1100, col_offset=18), Name('title', Param(), lineno=1100, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1101, col_offset=8), 'title', Store(), lineno=1101, col_offset=8)], Name('title', Load(), lineno=1101, col_offset=21), lineno=1101, col_offset=8)], [], lineno=1100, col_offset=4), FunctionDef('destroy', arguments([Name('self', Param(), lineno=1103, col_offset=16)], None, None, []), [Expr(Str('see OptionParser.destroy().', lineno=1104, col_offset=8), lineno=1104, col_offset=8), Expr(Call(Attribute(Name('OptionContainer', Load(), lineno=1105, col_offset=8), 'destroy', Load(), lineno=1105, col_offset=8), [Name('self', Load(), lineno=1105, col_offset=32)], [], None, None, lineno=1105, col_offset=8), lineno=1105, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=1106, col_offset=12), 'option_list', Del(), lineno=1106, col_offset=12)], lineno=1106, col_offset=8)], [], lineno=1103, col_offset=4), FunctionDef('format_help', arguments([Name('self', Param(), lineno=1110, col_offset=20), Name('formatter', Param(), lineno=1110, col_offset=26)], None, None, []), [Assign([Name('result', Store(), lineno=1111, col_offset=8)], Call(Attribute(Name('formatter', Load(), lineno=1111, col_offset=17), 'format_heading', Load(), lineno=1111, col_offset=17), [Attribute(Name('self', Load(), lineno=1111, col_offset=42), 'title', Load(), lineno=1111, col_offset=42)], [], None, None, lineno=1111, col_offset=17), lineno=1111, col_offset=8), Expr(Call(Attribute(Name('formatter', Load(), lineno=1112, col_offset=8), 'indent', Load(), lineno=1112, col_offset=8), [], [], None, None, lineno=1112, col_offset=8), lineno=1112, col_offset=8), AugAssign(Name('result', Store(), lineno=1113, col_offset=8), Add(), Call(Attribute(Name('OptionContainer', Load(), lineno=1113, col_offset=18), 'format_help', Load(), lineno=1113, col_offset=18), [Name('self', Load(), lineno=1113, col_offset=46), Name('formatter', Load(), lineno=1113, col_offset=52)], [], None, None, lineno=1113, col_offset=18), lineno=1113, col_offset=8), Expr(Call(Attribute(Name('formatter', Load(), lineno=1114, col_offset=8), 'dedent', Load(), lineno=1114, col_offset=8), [], [], None, None, lineno=1114, col_offset=8), lineno=1114, col_offset=8), Return(Name('result', Load(), lineno=1115, col_offset=15), lineno=1115, col_offset=8)], [], lineno=1110, col_offset=4)], [], lineno=1088, col_offset=0), ClassDef('OptionParser', [Name('OptionContainer', Load(), lineno=1118, col_offset=20)], [Expr(Str('\n    Class attributes:\n      standard_option_list : [Option]\n        list of standard options that will be accepted by all instances\n        of this parser class (intended to be overridden by subclasses).\n\n    Instance attributes:\n      usage : string\n        a usage string for your program.  Before it is displayed\n        to the user, "%prog" will be expanded to the name of\n        your program (self.prog or os.path.basename(sys.argv[0])).\n      prog : string\n        the name of the current program (to override\n        os.path.basename(sys.argv[0])).\n      epilog : string\n        paragraph of help text to print after option help\n\n      option_groups : [OptionGroup]\n        list of option groups in this parser (option groups are\n        irrelevant for parsing the command-line, but very useful\n        for generating help)\n\n      allow_interspersed_args : bool = true\n        if true, positional arguments may be interspersed with options.\n        Assuming -a and -b each take a single argument, the command-line\n          -ablah foo bar -bboo baz\n        will be interpreted the same as\n          -ablah -bboo -- foo bar baz\n        If this flag were false, that command line would be interpreted as\n          -ablah -- foo bar -bboo baz\n        -- ie. we stop processing options as soon as we see the first\n        non-option argument.  (This is the tradition followed by\n        Python\'s getopt module, Perl\'s Getopt::Std, and other argument-\n        parsing libraries, but it is generally annoying to users.)\n\n      process_default_values : bool = true\n        if true, option default values are processed similarly to option\n        values from the command line: that is, they are passed to the\n        type-checking function for the option\'s type (as long as the\n        default value is a string).  (This really only matters if you\n        have defined custom types; see SF bug #955889.)  Set it to false\n        to restore the behaviour of Optik 1.4.1 and earlier.\n\n      rargs : [string]\n        the argument list currently being parsed.  Only set when\n        parse_args() is active, and continually trimmed down as\n        we consume arguments.  Mainly there for the benefit of\n        callback options.\n      largs : [string]\n        the list of leftover arguments that we have skipped while\n        parsing options.  If allow_interspersed_args is false, this\n        list is always empty.\n      values : Values\n        the set of option values currently being accumulated.  Only\n        set when parse_args() is active.  Also mainly for callbacks.\n\n    Because of the \'rargs\', \'largs\', and \'values\' attributes,\n    OptionParser is not thread-safe.  If, for some perverse reason, you\n    need to parse command-line arguments simultaneously in different\n    threads, use different OptionParser instances.\n\n    ', lineno=1181, col_offset=-1), lineno=1181, col_offset=-1), Assign([Name('standard_option_list', Store(), lineno=1183, col_offset=4)], List([], Load(), lineno=1183, col_offset=27), lineno=1183, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1185, col_offset=17), Name('usage', Param(), lineno=1186, col_offset=17), Name('option_list', Param(), lineno=1187, col_offset=17), Name('option_class', Param(), lineno=1188, col_offset=17), Name('version', Param(), lineno=1189, col_offset=17), Name('conflict_handler', Param(), lineno=1190, col_offset=17), Name('description', Param(), lineno=1191, col_offset=17), Name('formatter', Param(), lineno=1192, col_offset=17), Name('add_help_option', Param(), lineno=1193, col_offset=17), Name('prog', Param(), lineno=1194, col_offset=17), Name('epilog', Param(), lineno=1195, col_offset=17)], None, None, [Name('None', Load(), lineno=1186, col_offset=23), Name('None', Load(), lineno=1187, col_offset=29), Name('Option', Load(), lineno=1188, col_offset=30), Name('None', Load(), lineno=1189, col_offset=25), Str('error', lineno=1190, col_offset=34), Name('None', Load(), lineno=1191, col_offset=29), Name('None', Load(), lineno=1192, col_offset=27), Name('True', Load(), lineno=1193, col_offset=33), Name('None', Load(), lineno=1194, col_offset=22), Name('None', Load(), lineno=1195, col_offset=24)]), [Expr(Call(Attribute(Name('OptionContainer', Load(), lineno=1196, col_offset=8), '__init__', Load(), lineno=1196, col_offset=8), [Name('self', Load(), lineno=1197, col_offset=12), Name('option_class', Load(), lineno=1197, col_offset=18), Name('conflict_handler', Load(), lineno=1197, col_offset=32), Name('description', Load(), lineno=1197, col_offset=50)], [], None, None, lineno=1196, col_offset=8), lineno=1196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1198, col_offset=8), 'set_usage', Load(), lineno=1198, col_offset=8), [Name('usage', Load(), lineno=1198, col_offset=23)], [], None, None, lineno=1198, col_offset=8), lineno=1198, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1199, col_offset=8), 'prog', Store(), lineno=1199, col_offset=8)], Name('prog', Load(), lineno=1199, col_offset=20), lineno=1199, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1200, col_offset=8), 'version', Store(), lineno=1200, col_offset=8)], Name('version', Load(), lineno=1200, col_offset=23), lineno=1200, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1201, col_offset=8), 'allow_interspersed_args', Store(), lineno=1201, col_offset=8)], Name('True', Load(), lineno=1201, col_offset=39), lineno=1201, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1202, col_offset=8), 'process_default_values', Store(), lineno=1202, col_offset=8)], Name('True', Load(), lineno=1202, col_offset=38), lineno=1202, col_offset=8), If(Compare(Name('formatter', Load(), lineno=1203, col_offset=11), [Is()], [Name('None', Load(), lineno=1203, col_offset=24)], lineno=1203, col_offset=11), [Assign([Name('formatter', Store(), lineno=1204, col_offset=12)], Call(Name('IndentedHelpFormatter', Load(), lineno=1204, col_offset=24), [], [], None, None, lineno=1204, col_offset=24), lineno=1204, col_offset=12)], [], lineno=1203, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1205, col_offset=8), 'formatter', Store(), lineno=1205, col_offset=8)], Name('formatter', Load(), lineno=1205, col_offset=25), lineno=1205, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1206, col_offset=8), 'formatter', Load(), lineno=1206, col_offset=8), 'set_parser', Load(), lineno=1206, col_offset=8), [Name('self', Load(), lineno=1206, col_offset=34)], [], None, None, lineno=1206, col_offset=8), lineno=1206, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1207, col_offset=8), 'epilog', Store(), lineno=1207, col_offset=8)], Name('epilog', Load(), lineno=1207, col_offset=22), lineno=1207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1213, col_offset=8), '_populate_option_list', Load(), lineno=1213, col_offset=8), [Name('option_list', Load(), lineno=1213, col_offset=35)], [keyword('add_help', Name('add_help_option', Load(), lineno=1214, col_offset=44))], None, None, lineno=1213, col_offset=8), lineno=1213, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1216, col_offset=8), '_init_parsing_state', Load(), lineno=1216, col_offset=8), [], [], None, None, lineno=1216, col_offset=8), lineno=1216, col_offset=8)], [], lineno=1185, col_offset=4), FunctionDef('destroy', arguments([Name('self', Param(), lineno=1219, col_offset=16)], None, None, []), [Expr(Str('\n        Declare that you are done with this OptionParser.  This cleans up\n        reference cycles so the OptionParser (and all objects referenced by\n        it) can be garbage-collected promptly.  After calling destroy(), the\n        OptionParser is unusable.\n        ', lineno=1225, col_offset=-1), lineno=1225, col_offset=-1), Expr(Call(Attribute(Name('OptionContainer', Load(), lineno=1226, col_offset=8), 'destroy', Load(), lineno=1226, col_offset=8), [Name('self', Load(), lineno=1226, col_offset=32)], [], None, None, lineno=1226, col_offset=8), lineno=1226, col_offset=8), For(Name('group', Store(), lineno=1227, col_offset=12), Attribute(Name('self', Load(), lineno=1227, col_offset=21), 'option_groups', Load(), lineno=1227, col_offset=21), [Expr(Call(Attribute(Name('group', Load(), lineno=1228, col_offset=12), 'destroy', Load(), lineno=1228, col_offset=12), [], [], None, None, lineno=1228, col_offset=12), lineno=1228, col_offset=12)], [], lineno=1227, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=1229, col_offset=12), 'option_list', Del(), lineno=1229, col_offset=12)], lineno=1229, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=1230, col_offset=12), 'option_groups', Del(), lineno=1230, col_offset=12)], lineno=1230, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=1231, col_offset=12), 'formatter', Del(), lineno=1231, col_offset=12)], lineno=1231, col_offset=8)], [], lineno=1219, col_offset=4), FunctionDef('_create_option_list', arguments([Name('self', Param(), lineno=1237, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1238, col_offset=8), 'option_list', Store(), lineno=1238, col_offset=8)], List([], Load(), lineno=1238, col_offset=27), lineno=1238, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1239, col_offset=8), 'option_groups', Store(), lineno=1239, col_offset=8)], List([], Load(), lineno=1239, col_offset=29), lineno=1239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1240, col_offset=8), '_create_option_mappings', Load(), lineno=1240, col_offset=8), [], [], None, None, lineno=1240, col_offset=8), lineno=1240, col_offset=8)], [], lineno=1237, col_offset=4), FunctionDef('_add_help_option', arguments([Name('self', Param(), lineno=1242, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1243, col_offset=8), 'add_option', Load(), lineno=1243, col_offset=8), [Str('-h', lineno=1243, col_offset=24), Str('--help', lineno=1243, col_offset=30)], [keyword('action', Str('help', lineno=1244, col_offset=31)), keyword('help', Call(Name('_', Load(), lineno=1245, col_offset=29), [Str('show this help message and exit', lineno=1245, col_offset=31)], [], None, None, lineno=1245, col_offset=29))], None, None, lineno=1243, col_offset=8), lineno=1243, col_offset=8)], [], lineno=1242, col_offset=4), FunctionDef('_add_version_option', arguments([Name('self', Param(), lineno=1247, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1248, col_offset=8), 'add_option', Load(), lineno=1248, col_offset=8), [Str('--version', lineno=1248, col_offset=24)], [keyword('action', Str('version', lineno=1249, col_offset=31)), keyword('help', Call(Name('_', Load(), lineno=1250, col_offset=29), [Str("show program's version number and exit", lineno=1250, col_offset=31)], [], None, None, lineno=1250, col_offset=29))], None, None, lineno=1248, col_offset=8), lineno=1248, col_offset=8)], [], lineno=1247, col_offset=4), FunctionDef('_populate_option_list', arguments([Name('self', Param(), lineno=1252, col_offset=30), Name('option_list', Param(), lineno=1252, col_offset=36), Name('add_help', Param(), lineno=1252, col_offset=49)], None, None, [Name('True', Load(), lineno=1252, col_offset=58)]), [If(Attribute(Name('self', Load(), lineno=1253, col_offset=11), 'standard_option_list', Load(), lineno=1253, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1254, col_offset=12), 'add_options', Load(), lineno=1254, col_offset=12), [Attribute(Name('self', Load(), lineno=1254, col_offset=29), 'standard_option_list', Load(), lineno=1254, col_offset=29)], [], None, None, lineno=1254, col_offset=12), lineno=1254, col_offset=12)], [], lineno=1253, col_offset=8), If(Name('option_list', Load(), lineno=1255, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1256, col_offset=12), 'add_options', Load(), lineno=1256, col_offset=12), [Name('option_list', Load(), lineno=1256, col_offset=29)], [], None, None, lineno=1256, col_offset=12), lineno=1256, col_offset=12)], [], lineno=1255, col_offset=8), If(Attribute(Name('self', Load(), lineno=1257, col_offset=11), 'version', Load(), lineno=1257, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1258, col_offset=12), '_add_version_option', Load(), lineno=1258, col_offset=12), [], [], None, None, lineno=1258, col_offset=12), lineno=1258, col_offset=12)], [], lineno=1257, col_offset=8), If(Name('add_help', Load(), lineno=1259, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1260, col_offset=12), '_add_help_option', Load(), lineno=1260, col_offset=12), [], [], None, None, lineno=1260, col_offset=12), lineno=1260, col_offset=12)], [], lineno=1259, col_offset=8)], [], lineno=1252, col_offset=4), FunctionDef('_init_parsing_state', arguments([Name('self', Param(), lineno=1262, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1264, col_offset=8), 'rargs', Store(), lineno=1264, col_offset=8)], Name('None', Load(), lineno=1264, col_offset=21), lineno=1264, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1265, col_offset=8), 'largs', Store(), lineno=1265, col_offset=8)], Name('None', Load(), lineno=1265, col_offset=21), lineno=1265, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1266, col_offset=8), 'values', Store(), lineno=1266, col_offset=8)], Name('None', Load(), lineno=1266, col_offset=22), lineno=1266, col_offset=8)], [], lineno=1262, col_offset=4), FunctionDef('set_usage', arguments([Name('self', Param(), lineno=1271, col_offset=18), Name('usage', Param(), lineno=1271, col_offset=24)], None, None, []), [If(Compare(Name('usage', Load(), lineno=1272, col_offset=11), [Is()], [Name('None', Load(), lineno=1272, col_offset=20)], lineno=1272, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=1273, col_offset=12), 'usage', Store(), lineno=1273, col_offset=12)], Call(Name('_', Load(), lineno=1273, col_offset=25), [Str('%prog [options]', lineno=1273, col_offset=27)], [], None, None, lineno=1273, col_offset=25), lineno=1273, col_offset=12)], [If(Compare(Name('usage', Load(), lineno=1274, col_offset=13), [Is()], [Name('SUPPRESS_USAGE', Load(), lineno=1274, col_offset=22)], lineno=1274, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=1275, col_offset=12), 'usage', Store(), lineno=1275, col_offset=12)], Name('None', Load(), lineno=1275, col_offset=25), lineno=1275, col_offset=12)], [If(Call(Attribute(Call(Attribute(Name('usage', Load(), lineno=1277, col_offset=13), 'lower', Load(), lineno=1277, col_offset=13), [], [], None, None, lineno=1277, col_offset=13), 'startswith', Load(), lineno=1277, col_offset=13), [Str('usage: ', lineno=1277, col_offset=38)], [], None, None, lineno=1277, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=1278, col_offset=12), 'usage', Store(), lineno=1278, col_offset=12)], Subscript(Name('usage', Load(), lineno=1278, col_offset=25), Slice(Num(7, lineno=1278, col_offset=31), None, None), Load(), lineno=1278, col_offset=25), lineno=1278, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=1280, col_offset=12), 'usage', Store(), lineno=1280, col_offset=12)], Name('usage', Load(), lineno=1280, col_offset=25), lineno=1280, col_offset=12)], lineno=1277, col_offset=13)], lineno=1274, col_offset=13)], lineno=1272, col_offset=8)], [], lineno=1271, col_offset=4), FunctionDef('enable_interspersed_args', arguments([Name('self', Param(), lineno=1282, col_offset=33)], None, None, []), [Expr(Str('Set parsing to not stop on the first non-option, allowing\n        interspersing switches with command arguments. This is the\n        default behavior. See also disable_interspersed_args() and the\n        class documentation description of the attribute\n        allow_interspersed_args.', lineno=1287, col_offset=-1), lineno=1287, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=1288, col_offset=8), 'allow_interspersed_args', Store(), lineno=1288, col_offset=8)], Name('True', Load(), lineno=1288, col_offset=39), lineno=1288, col_offset=8)], [], lineno=1282, col_offset=4), FunctionDef('disable_interspersed_args', arguments([Name('self', Param(), lineno=1290, col_offset=34)], None, None, []), [Expr(Str("Set parsing to stop on the first non-option. Use this if\n        you have a command processor which runs another command that\n        has options of its own and you want to make sure these options\n        don't get confused.\n        ", lineno=1295, col_offset=-1), lineno=1295, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=1296, col_offset=8), 'allow_interspersed_args', Store(), lineno=1296, col_offset=8)], Name('False', Load(), lineno=1296, col_offset=39), lineno=1296, col_offset=8)], [], lineno=1290, col_offset=4), FunctionDef('set_process_default_values', arguments([Name('self', Param(), lineno=1298, col_offset=35), Name('process', Param(), lineno=1298, col_offset=41)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1299, col_offset=8), 'process_default_values', Store(), lineno=1299, col_offset=8)], Name('process', Load(), lineno=1299, col_offset=38), lineno=1299, col_offset=8)], [], lineno=1298, col_offset=4), FunctionDef('set_default', arguments([Name('self', Param(), lineno=1301, col_offset=20), Name('dest', Param(), lineno=1301, col_offset=26), Name('value', Param(), lineno=1301, col_offset=32)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1302, col_offset=8), 'defaults', Load(), lineno=1302, col_offset=8), Index(Name('dest', Load(), lineno=1302, col_offset=22)), Store(), lineno=1302, col_offset=8)], Name('value', Load(), lineno=1302, col_offset=30), lineno=1302, col_offset=8)], [], lineno=1301, col_offset=4), FunctionDef('set_defaults', arguments([Name('self', Param(), lineno=1304, col_offset=21)], None, 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1305, col_offset=8), 'defaults', Load(), lineno=1305, col_offset=8), 'update', Load(), lineno=1305, col_offset=8), [Name('kwargs', Load(), lineno=1305, col_offset=29)], [], None, None, lineno=1305, col_offset=8), lineno=1305, col_offset=8)], [], lineno=1304, col_offset=4), FunctionDef('_get_all_options', arguments([Name('self', Param(), lineno=1307, col_offset=25)], None, None, []), [Assign([Name('options', Store(), lineno=1308, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1308, col_offset=18), 'option_list', Load(), lineno=1308, col_offset=18), Slice(None, None, None), Load(), lineno=1308, col_offset=18), lineno=1308, col_offset=8), For(Name('group', Store(), lineno=1309, col_offset=12), Attribute(Name('self', Load(), lineno=1309, col_offset=21), 'option_groups', Load(), lineno=1309, col_offset=21), [Expr(Call(Attribute(Name('options', Load(), lineno=1310, col_offset=12), 'extend', Load(), lineno=1310, col_offset=12), [Attribute(Name('group', Load(), lineno=1310, col_offset=27), 'option_list', Load(), lineno=1310, col_offset=27)], [], None, None, lineno=1310, col_offset=12), lineno=1310, col_offset=12)], [], lineno=1309, col_offset=8), Return(Name('options', Load(), lineno=1311, col_offset=15), lineno=1311, col_offset=8)], [], lineno=1307, col_offset=4), FunctionDef('get_default_values', arguments([Name('self', Param(), lineno=1313, col_offset=27)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1314, col_offset=15), 'process_default_values', Load(), lineno=1314, col_offset=15), lineno=1314, col_offset=11), [Return(Call(Name('Values', Load(), lineno=1316, col_offset=19), [Attribute(Name('self', Load(), lineno=1316, col_offset=26), 'defaults', Load(), lineno=1316, col_offset=26)], [], None, None, lineno=1316, col_offset=19), lineno=1316, col_offset=12)], [], lineno=1314, col_offset=8), Assign([Name('defaults', Store(), lineno=1318, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1318, col_offset=19), 'defaults', Load(), lineno=1318, col_offset=19), 'copy', Load(), lineno=1318, col_offset=19), [], [], None, None, lineno=1318, col_offset=19), lineno=1318, col_offset=8), For(Name('option', Store(), lineno=1319, col_offset=12), Call(Attribute(Name('self', Load(), lineno=1319, col_offset=22), '_get_all_options', Load(), lineno=1319, col_offset=22), [], [], None, None, lineno=1319, col_offset=22), [Assign([Name('default', Store(), lineno=1320, col_offset=12)], Call(Attribute(Name('defaults', Load(), lineno=1320, col_offset=22), 'get', Load(), lineno=1320, col_offset=22), [Attribute(Name('option', Load(), lineno=1320, col_offset=35), 'dest', Load(), lineno=1320, col_offset=35)], [], None, None, lineno=1320, col_offset=22), lineno=1320, col_offset=12), If(Call(Name('isbasestring', Load(), lineno=1321, col_offset=15), [Name('default', Load(), lineno=1321, col_offset=28)], [], None, None, lineno=1321, col_offset=15), [Assign([Name('opt_str', Store(), lineno=1322, col_offset=16)], Call(Attribute(Name('option', Load(), lineno=1322, col_offset=26), 'get_opt_string', Load(), lineno=1322, col_offset=26), [], [], None, None, lineno=1322, col_offset=26), lineno=1322, col_offset=16), Assign([Subscript(Name('defaults', Load(), lineno=1323, col_offset=16), Index(Attribute(Name('option', Load(), lineno=1323, col_offset=25), 'dest', Load(), lineno=1323, col_offset=25)), Store(), lineno=1323, col_offset=16)], Call(Attribute(Name('option', Load(), lineno=1323, col_offset=40), 'check_value', Load(), lineno=1323, col_offset=40), [Name('opt_str', Load(), lineno=1323, col_offset=59), Name('default', Load(), lineno=1323, col_offset=68)], [], None, None, lineno=1323, col_offset=40), lineno=1323, col_offset=16)], [], lineno=1321, col_offset=12)], [], lineno=1319, col_offset=8), Return(Call(Name('Values', Load(), lineno=1325, col_offset=15), [Name('defaults', Load(), lineno=1325, col_offset=22)], [], None, None, lineno=1325, col_offset=15), lineno=1325, col_offset=8)], [], lineno=1313, col_offset=4), FunctionDef('add_option_group', arguments([Name('self', Param(), lineno=1330, col_offset=25)], 'args', 'kwargs', []), [If(Compare(Call(Name('type', Load(), lineno=1332, col_offset=11), [Subscript(Name('args', Load(), lineno=1332, col_offset=16), Index(Num(0, lineno=1332, col_offset=21)), Load(), lineno=1332, col_offset=16)], [], None, None, lineno=1332, col_offset=11), [Is()], [Attribute(Name('types', Load(), lineno=1332, col_offset=28), 'StringType', Load(), lineno=1332, col_offset=28)], lineno=1332, col_offset=11), [Assign([Name('group', Store(), lineno=1333, col_offset=12)], Call(Name('OptionGroup', Load(), lineno=1333, col_offset=20), [Name('self', Load(), lineno=1333, col_offset=32)], [], Name('args', Load(), lineno=1333, col_offset=39), Name('kwargs', Load(), lineno=1333, col_offset=47), lineno=1333, col_offset=20), lineno=1333, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=1334, col_offset=13), [Name('args', Load(), lineno=1334, col_offset=17)], [], None, None, lineno=1334, col_offset=13), [Eq()], [Num(1, lineno=1334, col_offset=26)], lineno=1334, col_offset=13), UnaryOp(Not(), Name('kwargs', Load(), lineno=1334, col_offset=36), lineno=1334, col_offset=32)], lineno=1334, col_offset=13), [Assign([Name('group', Store(), lineno=1335, col_offset=12)], Subscript(Name('args', Load(), lineno=1335, col_offset=20), Index(Num(0, lineno=1335, col_offset=25)), Load(), lineno=1335, col_offset=20), lineno=1335, col_offset=12), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=1336, col_offset=19), [Name('group', Load(), lineno=1336, col_offset=30), Name('OptionGroup', Load(), lineno=1336, col_offset=37)], [], None, None, lineno=1336, col_offset=19), lineno=1336, col_offset=15), [Raise(Name('TypeError', Load(), lineno=1337, col_offset=22), BinOp(Str('not an OptionGroup instance: %r', lineno=1337, col_offset=33), Mod(), Name('group', Load(), lineno=1337, col_offset=69), lineno=1337, col_offset=33), None, lineno=1337, col_offset=16)], [], lineno=1336, col_offset=12), If(Compare(Attribute(Name('group', Load(), lineno=1338, col_offset=15), 'parser', Load(), lineno=1338, col_offset=15), [IsNot()], [Name('self', Load(), lineno=1338, col_offset=35)], lineno=1338, col_offset=15), [Raise(Name('ValueError', Load(), lineno=1339, col_offset=22), Str('invalid OptionGroup (wrong parser)', lineno=1339, col_offset=34), None, lineno=1339, col_offset=16)], [], lineno=1338, col_offset=12)], [Raise(Name('TypeError', Load(), lineno=1341, col_offset=18), Str('invalid arguments', lineno=1341, col_offset=29), None, lineno=1341, col_offset=12)], lineno=1334, col_offset=13)], lineno=1332, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1343, col_offset=8), 'option_groups', Load(), lineno=1343, col_offset=8), 'append', Load(), lineno=1343, col_offset=8), [Name('group', Load(), lineno=1343, col_offset=34)], [], None, None, lineno=1343, col_offset=8), lineno=1343, col_offset=8), Return(Name('group', Load(), lineno=1344, col_offset=15), lineno=1344, col_offset=8)], [], lineno=1330, col_offset=4), FunctionDef('get_option_group', arguments([Name('self', Param(), lineno=1346, col_offset=25), Name('opt_str', Param(), lineno=1346, col_offset=31)], None, None, []), [Assign([Name('option', Store(), lineno=1347, col_offset=8)], BoolOp(Or(), [Call(Attribute(Attribute(Name('self', Load(), lineno=1347, col_offset=18), '_short_opt', Load(), lineno=1347, col_offset=18), 'get', Load(), lineno=1347, col_offset=18), [Name('opt_str', Load(), lineno=1347, col_offset=38)], [], None, None, lineno=1347, col_offset=18), Call(Attribute(Attribute(Name('self', Load(), lineno=1348, col_offset=18), '_long_opt', Load(), lineno=1348, col_offset=18), 'get', Load(), lineno=1348, col_offset=18), [Name('opt_str', Load(), lineno=1348, col_offset=37)], [], None, None, lineno=1348, col_offset=18)], lineno=1347, col_offset=18), lineno=1347, col_offset=8), If(BoolOp(And(), [Name('option', Load(), lineno=1349, col_offset=11), Compare(Attribute(Name('option', Load(), lineno=1349, col_offset=22), 'container', Load(), lineno=1349, col_offset=22), [IsNot()], [Name('self', Load(), lineno=1349, col_offset=46)], lineno=1349, col_offset=22)], lineno=1349, col_offset=11), [Return(Attribute(Name('option', Load(), lineno=1350, col_offset=19), 'container', Load(), lineno=1350, col_offset=19), lineno=1350, col_offset=12)], [], lineno=1349, col_offset=8), Return(Name('None', Load(), lineno=1351, col_offset=15), lineno=1351, col_offset=8)], [], lineno=1346, col_offset=4), FunctionDef('_get_args', arguments([Name('self', Param(), lineno=1356, col_offset=18), Name('args', Param(), lineno=1356, col_offset=24)], None, None, []), [If(Compare(Name('args', Load(), lineno=1357, col_offset=11), [Is()], [Name('None', Load(), lineno=1357, col_offset=19)], lineno=1357, col_offset=11), [Return(Subscript(Attribute(Name('sys', Load(), lineno=1358, col_offset=19), 'argv', Load(), lineno=1358, col_offset=19), Slice(Num(1, lineno=1358, col_offset=28), None, None), Load(), lineno=1358, col_offset=19), lineno=1358, col_offset=12)], [Return(Subscript(Name('args', Load(), lineno=1360, col_offset=19), Slice(None, None, None), Load(), lineno=1360, col_offset=19), lineno=1360, col_offset=12)], lineno=1357, col_offset=8)], [], lineno=1356, col_offset=4), FunctionDef('parse_args', arguments([Name('self', Param(), lineno=1362, col_offset=19), Name('args', Param(), lineno=1362, col_offset=25), Name('values', Param(), lineno=1362, col_offset=36)], None, None, [Name('None', Load(), lineno=1362, col_offset=30), Name('None', Load(), lineno=1362, col_offset=43)]), [Expr(Str("\n        parse_args(args : [string] = sys.argv[1:],\n                   values : Values = None)\n        -> (values : Values, args : [string])\n\n        Parse the command-line options found in 'args' (default:\n        sys.argv[1:]).  Any errors result in a call to 'error()', which\n        by default prints the usage message to stderr and calls\n        sys.exit() with an error message.  On success returns a pair\n        (values, args) where 'values' is an Values instance (with all\n        your option values) and 'args' is the list of arguments left\n        over after parsing options.\n        ", lineno=1375, col_offset=-1), lineno=1375, col_offset=-1), Assign([Name('rargs', Store(), lineno=1376, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1376, col_offset=16), '_get_args', Load(), lineno=1376, col_offset=16), [Name('args', Load(), lineno=1376, col_offset=31)], [], None, None, lineno=1376, col_offset=16), lineno=1376, col_offset=8), If(Compare(Name('values', Load(), lineno=1377, col_offset=11), [Is()], [Name('None', Load(), lineno=1377, col_offset=21)], lineno=1377, col_offset=11), [Assign([Name('values', Store(), lineno=1378, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1378, col_offset=21), 'get_default_values', Load(), lineno=1378, col_offset=21), [], [], None, None, lineno=1378, col_offset=21), lineno=1378, col_offset=12)], [], lineno=1377, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1389, col_offset=8), 'rargs', Store(), lineno=1389, col_offset=8)], Name('rargs', Load(), lineno=1389, col_offset=21), lineno=1389, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1390, col_offset=8), 'largs', Store(), lineno=1390, col_offset=8), Name('largs', Store(), lineno=1390, col_offset=21)], List([], Load(), lineno=1390, col_offset=29), lineno=1390, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1391, col_offset=8), 'values', Store(), lineno=1391, col_offset=8)], Name('values', Load(), lineno=1391, col_offset=22), lineno=1391, col_offset=8), TryExcept([Assign([Name('stop', Store(), lineno=1394, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1394, col_offset=19), '_process_args', Load(), lineno=1394, col_offset=19), [Name('largs', Load(), lineno=1394, col_offset=38), Name('rargs', Load(), lineno=1394, col_offset=45), Name('values', Load(), lineno=1394, col_offset=52)], [], None, None, lineno=1394, col_offset=19), lineno=1394, col_offset=12)], [ExceptHandler(Tuple([Name('BadOptionError', Load(), lineno=1395, col_offset=16), Name('OptionValueError', Load(), lineno=1395, col_offset=32)], Load(), lineno=1395, col_offset=16), Name('err', Store(), lineno=1395, col_offset=51), [Expr(Call(Attribute(Name('self', Load(), lineno=1396, col_offset=12), 'error', Load(), lineno=1396, col_offset=12), [Call(Name('str', Load(), lineno=1396, col_offset=23), [Name('err', Load(), lineno=1396, col_offset=27)], [], None, None, lineno=1396, col_offset=23)], [], None, None, lineno=1396, col_offset=12), lineno=1396, col_offset=12)], lineno=1395, col_offset=8)], [], lineno=1393, col_offset=8), Assign([Name('args', Store(), lineno=1398, col_offset=8)], BinOp(Name('largs', Load(), lineno=1398, col_offset=15), Add(), Name('rargs', Load(), lineno=1398, col_offset=23), lineno=1398, col_offset=15), lineno=1398, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=1399, col_offset=15), 'check_values', Load(), lineno=1399, col_offset=15), [Name('values', Load(), lineno=1399, col_offset=33), Name('args', Load(), lineno=1399, col_offset=41)], [], None, None, lineno=1399, col_offset=15), lineno=1399, col_offset=8)], [], lineno=1362, col_offset=4), FunctionDef('check_values', arguments([Name('self', Param(), lineno=1401, col_offset=21), Name('values', Param(), lineno=1401, col_offset=27), Name('args', Param(), lineno=1401, col_offset=35)], None, None, []), [Expr(Str('\n        check_values(values : Values, args : [string])\n        -> (values : Values, args : [string])\n\n        Check that the supplied option values and leftover arguments are\n        valid.  Returns the option values and leftover arguments\n        (possibly adjusted, possibly completely new -- whatever you\n        like).  Default implementation just returns the passed-in\n        values; subclasses may override as desired.\n        ', lineno=1411, col_offset=-1), lineno=1411, col_offset=-1), Return(Tuple([Name('values', Load(), lineno=1412, col_offset=16), Name('args', Load(), lineno=1412, col_offset=24)], Load(), lineno=1412, col_offset=16), lineno=1412, col_offset=8)], [], lineno=1401, col_offset=4), FunctionDef('_process_args', arguments([Name('self', Param(), lineno=1414, col_offset=22), Name('largs', Param(), lineno=1414, col_offset=28), Name('rargs', Param(), lineno=1414, col_offset=35), Name('values', Param(), lineno=1414, col_offset=42)], None, None, []), [Expr(Str("_process_args(largs : [string],\n                         rargs : [string],\n                         values : Values)\n\n        Process command-line arguments and populate 'values', consuming\n        options and arguments from 'rargs'.  If 'allow_interspersed_args' is\n        false, stop at the first non-option argument.  If true, accumulate any\n        interspersed non-option arguments in 'largs'.\n        ", lineno=1423, col_offset=-1), lineno=1423, col_offset=-1), While(Name('rargs', Load(), lineno=1424, col_offset=14), [Assign([Name('arg', Store(), lineno=1425, col_offset=12)], Subscript(Name('rargs', Load(), lineno=1425, col_offset=18), Index(Num(0, lineno=1425, col_offset=24)), Load(), lineno=1425, col_offset=18), lineno=1425, col_offset=12), If(Compare(Name('arg', Load(), lineno=1429, col_offset=15), [Eq()], [Str('--', lineno=1429, col_offset=22)], lineno=1429, col_offset=15), [Delete([Subscript(Name('rargs', Load(), lineno=1430, col_offset=20), Index(Num(0, lineno=1430, col_offset=26)), Del(), lineno=1430, col_offset=20)], lineno=1430, col_offset=16), Return(None, lineno=1431, col_offset=16)], [If(Compare(Subscript(Name('arg', Load(), lineno=1432, col_offset=17), Slice(Num(0, lineno=1432, col_offset=21), Num(2, lineno=1432, col_offset=23), None), Load(), lineno=1432, col_offset=17), [Eq()], [Str('--', lineno=1432, col_offset=29)], lineno=1432, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1434, col_offset=16), '_process_long_opt', Load(), lineno=1434, col_offset=16), [Name('rargs', Load(), lineno=1434, col_offset=39), Name('values', Load(), lineno=1434, col_offset=46)], [], None, None, lineno=1434, col_offset=16), lineno=1434, col_offset=16)], [If(BoolOp(And(), [Compare(Subscript(Name('arg', Load(), lineno=1435, col_offset=17), Slice(None, Num(1, lineno=1435, col_offset=22), None), Load(), lineno=1435, col_offset=17), [Eq()], [Str('-', lineno=1435, col_offset=28)], lineno=1435, col_offset=17), Compare(Call(Name('len', Load(), lineno=1435, col_offset=36), [Name('arg', Load(), lineno=1435, col_offset=40)], [], None, None, lineno=1435, col_offset=36), [Gt()], [Num(1, lineno=1435, col_offset=47)], lineno=1435, col_offset=36)], lineno=1435, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1438, col_offset=16), '_process_short_opts', Load(), lineno=1438, col_offset=16), [Name('rargs', Load(), lineno=1438, col_offset=41), Name('values', Load(), lineno=1438, col_offset=48)], [], None, None, lineno=1438, col_offset=16), lineno=1438, col_offset=16)], [If(Attribute(Name('self', Load(), lineno=1439, col_offset=17), 'allow_interspersed_args', Load(), lineno=1439, col_offset=17), [Expr(Call(Attribute(Name('largs', Load(), lineno=1440, col_offset=16), 'append', Load(), lineno=1440, col_offset=16), [Name('arg', Load(), lineno=1440, col_offset=29)], [], None, None, lineno=1440, col_offset=16), lineno=1440, col_offset=16), Delete([Subscript(Name('rargs', Load(), lineno=1441, col_offset=20), Index(Num(0, lineno=1441, col_offset=26)), Del(), lineno=1441, col_offset=20)], lineno=1441, col_offset=16)], [Return(None, lineno=1443, col_offset=16)], lineno=1439, col_offset=17)], lineno=1435, col_offset=17)], lineno=1432, col_offset=17)], lineno=1429, col_offset=12)], [], lineno=1424, col_offset=8)], [], lineno=1414, col_offset=4), FunctionDef('_match_long_opt', arguments([Name('self', Param(), lineno=1465, col_offset=24), Name('opt', Param(), lineno=1465, col_offset=30)], None, None, []), [Expr(Str("_match_long_opt(opt : string) -> string\n\n        Determine which long option string 'opt' matches, ie. which one\n        it is an unambiguous abbrevation for.  Raises BadOptionError if\n        'opt' doesn't unambiguously match any long option string.\n        ", lineno=1471, col_offset=-1), lineno=1471, col_offset=-1), Return(Call(Name('_match_abbrev', Load(), lineno=1472, col_offset=15), [Name('opt', Load(), lineno=1472, col_offset=29), Attribute(Name('self', Load(), lineno=1472, col_offset=34), '_long_opt', Load(), lineno=1472, col_offset=34)], [], None, None, lineno=1472, col_offset=15), lineno=1472, col_offset=8)], [], lineno=1465, col_offset=4), FunctionDef('_process_long_opt', arguments([Name('self', Param(), lineno=1474, col_offset=26), Name('rargs', Param(), lineno=1474, col_offset=32), Name('values', Param(), lineno=1474, col_offset=39)], None, None, []), [Assign([Name('arg', Store(), lineno=1475, col_offset=8)], Call(Attribute(Name('rargs', Load(), lineno=1475, col_offset=14), 'pop', Load(), lineno=1475, col_offset=14), [Num(0, lineno=1475, col_offset=24)], [], None, None, lineno=1475, col_offset=14), lineno=1475, col_offset=8), If(Compare(Str('=', lineno=1479, col_offset=11), [In()], [Name('arg', Load(), lineno=1479, col_offset=18)], lineno=1479, col_offset=11), [Assign([Tuple([Name('opt', Store(), lineno=1480, col_offset=13), Name('next_arg', Store(), lineno=1480, col_offset=18)], Store(), lineno=1480, col_offset=13)], Call(Attribute(Name('arg', Load(), lineno=1480, col_offset=30), 'split', Load(), lineno=1480, col_offset=30), [Str('=', lineno=1480, col_offset=40), Num(1, lineno=1480, col_offset=45)], [], None, None, lineno=1480, col_offset=30), lineno=1480, col_offset=12), Expr(Call(Attribute(Name('rargs', Load(), lineno=1481, col_offset=12), 'insert', Load(), lineno=1481, col_offset=12), [Num(0, lineno=1481, col_offset=25), Name('next_arg', Load(), lineno=1481, col_offset=28)], [], None, None, lineno=1481, col_offset=12), lineno=1481, col_offset=12), Assign([Name('had_explicit_value', Store(), lineno=1482, col_offset=12)], Name('True', Load(), lineno=1482, col_offset=33), lineno=1482, col_offset=12)], [Assign([Name('opt', Store(), lineno=1484, col_offset=12)], Name('arg', Load(), lineno=1484, col_offset=18), lineno=1484, col_offset=12), Assign([Name('had_explicit_value', Store(), lineno=1485, col_offset=12)], Name('False', Load(), lineno=1485, col_offset=33), lineno=1485, col_offset=12)], lineno=1479, col_offset=8), Assign([Name('opt', Store(), lineno=1487, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1487, col_offset=14), '_match_long_opt', Load(), lineno=1487, col_offset=14), [Name('opt', Load(), lineno=1487, col_offset=35)], [], None, None, lineno=1487, col_offset=14), lineno=1487, col_offset=8), Assign([Name('option', Store(), lineno=1488, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1488, col_offset=17), '_long_opt', Load(), lineno=1488, col_offset=17), Index(Name('opt', Load(), lineno=1488, col_offset=32)), Load(), lineno=1488, col_offset=17), lineno=1488, col_offset=8), If(Call(Attribute(Name('option', Load(), lineno=1489, col_offset=11), 'takes_value', Load(), lineno=1489, col_offset=11), [], [], None, None, lineno=1489, col_offset=11), [Assign([Name('nargs', Store(), lineno=1490, col_offset=12)], Attribute(Name('option', Load(), lineno=1490, col_offset=20), 'nargs', Load(), lineno=1490, col_offset=20), lineno=1490, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=1491, col_offset=15), [Name('rargs', Load(), lineno=1491, col_offset=19)], [], None, None, lineno=1491, col_offset=15), [Lt()], [Name('nargs', Load(), lineno=1491, col_offset=28)], lineno=1491, col_offset=15), [If(Compare(Name('nargs', Load(), lineno=1492, col_offset=19), [Eq()], [Num(1, lineno=1492, col_offset=28)], lineno=1492, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=1493, col_offset=20), 'error', Load(), lineno=1493, col_offset=20), [BinOp(Call(Name('_', Load(), lineno=1493, col_offset=31), [Str('%s option requires an argument', lineno=1493, col_offset=33)], [], None, None, lineno=1493, col_offset=31), Mod(), Name('opt', Load(), lineno=1493, col_offset=69), lineno=1493, col_offset=31)], [], None, None, lineno=1493, col_offset=20), lineno=1493, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=1495, col_offset=20), 'error', Load(), lineno=1495, col_offset=20), [BinOp(Call(Name('_', Load(), lineno=1495, col_offset=31), [Str('%s option requires %d arguments', lineno=1495, col_offset=33)], [], None, None, lineno=1495, col_offset=31), Mod(), Tuple([Name('opt', Load(), lineno=1496, col_offset=34), Name('nargs', Load(), lineno=1496, col_offset=39)], Load(), lineno=1496, col_offset=34), lineno=1495, col_offset=31)], [], None, None, lineno=1495, col_offset=20), lineno=1495, col_offset=20)], lineno=1492, col_offset=16)], [If(Compare(Name('nargs', Load(), lineno=1497, col_offset=17), [Eq()], [Num(1, lineno=1497, col_offset=26)], lineno=1497, col_offset=17), [Assign([Name('value', Store(), lineno=1498, col_offset=16)], Call(Attribute(Name('rargs', Load(), lineno=1498, col_offset=24), 'pop', Load(), lineno=1498, col_offset=24), [Num(0, lineno=1498, col_offset=34)], [], None, None, lineno=1498, col_offset=24), lineno=1498, col_offset=16)], [Assign([Name('value', Store(), lineno=1500, col_offset=16)], Call(Name('tuple', Load(), lineno=1500, col_offset=24), [Subscript(Name('rargs', Load(), lineno=1500, col_offset=30), Slice(Num(0, lineno=1500, col_offset=36), Name('nargs', Load(), lineno=1500, col_offset=38), None), Load(), lineno=1500, col_offset=30)], [], None, None, lineno=1500, col_offset=24), lineno=1500, col_offset=16), Delete([Subscript(Name('rargs', Load(), lineno=1501, col_offset=20), Slice(Num(0, lineno=1501, col_offset=26), Name('nargs', Load(), lineno=1501, col_offset=28), None), Del(), lineno=1501, col_offset=20)], lineno=1501, col_offset=16)], lineno=1497, col_offset=17)], lineno=1491, col_offset=12)], [If(Name('had_explicit_value', Load(), lineno=1503, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1504, col_offset=12), 'error', Load(), lineno=1504, col_offset=12), [BinOp(Call(Name('_', Load(), lineno=1504, col_offset=23), [Str('%s option does not take a value', lineno=1504, col_offset=25)], [], None, None, lineno=1504, col_offset=23), Mod(), Name('opt', Load(), lineno=1504, col_offset=62), lineno=1504, col_offset=23)], [], None, None, lineno=1504, col_offset=12), lineno=1504, col_offset=12)], [Assign([Name('value', Store(), lineno=1507, col_offset=12)], Name('None', Load(), lineno=1507, col_offset=20), lineno=1507, col_offset=12)], lineno=1503, col_offset=13)], lineno=1489, col_offset=8), Expr(Call(Attribute(Name('option', Load(), lineno=1509, col_offset=8), 'process', Load(), lineno=1509, col_offset=8), [Name('opt', Load(), lineno=1509, col_offset=23), Name('value', Load(), lineno=1509, col_offset=28), Name('values', Load(), lineno=1509, col_offset=35), Name('self', Load(), lineno=1509, col_offset=43)], [], None, None, lineno=1509, col_offset=8), lineno=1509, col_offset=8)], [], lineno=1474, col_offset=4), FunctionDef('_process_short_opts', arguments([Name('self', Param(), lineno=1511, col_offset=28), Name('rargs', Param(), lineno=1511, col_offset=34), Name('values', Param(), lineno=1511, col_offset=41)], None, None, []), [Assign([Name('arg', Store(), lineno=1512, col_offset=8)], Call(Attribute(Name('rargs', Load(), lineno=1512, col_offset=14), 'pop', Load(), lineno=1512, col_offset=14), [Num(0, lineno=1512, col_offset=24)], [], None, None, lineno=1512, col_offset=14), lineno=1512, col_offset=8), Assign([Name('stop', Store(), lineno=1513, col_offset=8)], Name('False', Load(), lineno=1513, col_offset=15), lineno=1513, col_offset=8), Assign([Name('i', Store(), lineno=1514, col_offset=8)], Num(1, lineno=1514, col_offset=12), lineno=1514, col_offset=8), For(Name('ch', Store(), lineno=1515, col_offset=12), Subscript(Name('arg', Load(), lineno=1515, col_offset=18), Slice(Num(1, lineno=1515, col_offset=22), None, None), Load(), lineno=1515, col_offset=18), [Assign([Name('opt', Store(), lineno=1516, col_offset=12)], BinOp(Str('-', lineno=1516, col_offset=18), Add(), Name('ch', Load(), lineno=1516, col_offset=24), lineno=1516, col_offset=18), lineno=1516, col_offset=12), Assign([Name('option', Store(), lineno=1517, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1517, col_offset=21), '_short_opt', Load(), lineno=1517, col_offset=21), 'get', Load(), lineno=1517, col_offset=21), [Name('opt', Load(), lineno=1517, col_offset=41)], [], None, None, lineno=1517, col_offset=21), lineno=1517, col_offset=12), AugAssign(Name('i', Store(), lineno=1518, col_offset=12), Add(), Num(1, lineno=1518, col_offset=17), lineno=1518, col_offset=12), If(UnaryOp(Not(), Name('option', Load(), lineno=1520, col_offset=19), lineno=1520, col_offset=15), [Raise(Call(Name('BadOptionError', Load(), lineno=1521, col_offset=22), [Name('opt', Load(), lineno=1521, col_offset=37)], [], None, None, lineno=1521, col_offset=22), None, None, lineno=1521, col_offset=16)], [], lineno=1520, col_offset=12), If(Call(Attribute(Name('option', Load(), lineno=1522, col_offset=15), 'takes_value', Load(), lineno=1522, col_offset=15), [], [], None, None, lineno=1522, col_offset=15), [If(Compare(Name('i', Load(), lineno=1525, col_offset=19), [Lt()], [Call(Name('len', Load(), lineno=1525, col_offset=23), [Name('arg', Load(), lineno=1525, col_offset=27)], [], None, None, lineno=1525, col_offset=23)], lineno=1525, col_offset=19), [Expr(Call(Attribute(Name('rargs', Load(), lineno=1526, col_offset=20), 'insert', Load(), lineno=1526, col_offset=20), [Num(0, lineno=1526, col_offset=33), Subscript(Name('arg', Load(), lineno=1526, col_offset=36), Slice(Name('i', Load(), lineno=1526, col_offset=40), None, None), Load(), lineno=1526, col_offset=36)], [], None, None, lineno=1526, col_offset=20), lineno=1526, col_offset=20), Assign([Name('stop', Store(), lineno=1527, col_offset=20)], Name('True', Load(), lineno=1527, col_offset=27), lineno=1527, col_offset=20)], [], lineno=1525, col_offset=16), Assign([Name('nargs', Store(), lineno=1529, col_offset=16)], Attribute(Name('option', Load(), lineno=1529, col_offset=24), 'nargs', Load(), lineno=1529, col_offset=24), lineno=1529, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=1530, col_offset=19), [Name('rargs', Load(), lineno=1530, col_offset=23)], [], None, None, lineno=1530, col_offset=19), [Lt()], [Name('nargs', Load(), lineno=1530, col_offset=32)], lineno=1530, col_offset=19), [If(Compare(Name('nargs', Load(), lineno=1531, col_offset=23), [Eq()], [Num(1, lineno=1531, col_offset=32)], lineno=1531, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=1532, col_offset=24), 'error', Load(), lineno=1532, col_offset=24), [BinOp(Call(Name('_', Load(), lineno=1532, col_offset=35), [Str('%s option requires an argument', lineno=1532, col_offset=37)], [], None, None, lineno=1532, col_offset=35), Mod(), Name('opt', Load(), lineno=1532, col_offset=73), lineno=1532, col_offset=35)], [], None, None, lineno=1532, col_offset=24), lineno=1532, col_offset=24)], [Expr(Call(Attribute(Name('self', Load(), lineno=1534, col_offset=24), 'error', Load(), lineno=1534, col_offset=24), [BinOp(Call(Name('_', Load(), lineno=1534, col_offset=35), [Str('%s option requires %d arguments', lineno=1534, col_offset=37)], [], None, None, lineno=1534, col_offset=35), Mod(), Tuple([Name('opt', Load(), lineno=1535, col_offset=38), Name('nargs', Load(), lineno=1535, col_offset=43)], Load(), lineno=1535, col_offset=38), lineno=1534, col_offset=35)], [], None, None, lineno=1534, col_offset=24), lineno=1534, col_offset=24)], lineno=1531, col_offset=20)], [If(Compare(Name('nargs', Load(), lineno=1536, col_offset=21), [Eq()], [Num(1, lineno=1536, col_offset=30)], lineno=1536, col_offset=21), [Assign([Name('value', Store(), lineno=1537, col_offset=20)], Call(Attribute(Name('rargs', Load(), lineno=1537, col_offset=28), 'pop', Load(), lineno=1537, col_offset=28), [Num(0, lineno=1537, col_offset=38)], [], None, None, lineno=1537, col_offset=28), lineno=1537, col_offset=20)], [Assign([Name('value', Store(), lineno=1539, col_offset=20)], Call(Name('tuple', Load(), lineno=1539, col_offset=28), [Subscript(Name('rargs', Load(), lineno=1539, col_offset=34), Slice(Num(0, lineno=1539, col_offset=40), Name('nargs', Load(), lineno=1539, col_offset=42), None), Load(), lineno=1539, col_offset=34)], [], None, None, lineno=1539, col_offset=28), lineno=1539, col_offset=20), Delete([Subscript(Name('rargs', Load(), lineno=1540, col_offset=24), Slice(Num(0, lineno=1540, col_offset=30), Name('nargs', Load(), lineno=1540, col_offset=32), None), Del(), lineno=1540, col_offset=24)], lineno=1540, col_offset=20)], lineno=1536, col_offset=21)], lineno=1530, col_offset=16)], [Assign([Name('value', Store(), lineno=1543, col_offset=16)], Name('None', Load(), lineno=1543, col_offset=24), lineno=1543, col_offset=16)], lineno=1522, col_offset=12), Expr(Call(Attribute(Name('option', Load(), lineno=1545, col_offset=12), 'process', Load(), lineno=1545, col_offset=12), [Name('opt', Load(), lineno=1545, col_offset=27), Name('value', Load(), lineno=1545, col_offset=32), Name('values', Load(), lineno=1545, col_offset=39), Name('self', Load(), lineno=1545, col_offset=47)], [], None, None, lineno=1545, col_offset=12), lineno=1545, col_offset=12), If(Name('stop', Load(), lineno=1547, col_offset=15), [Break( lineno=1548, col_offset=16)], [], lineno=1547, col_offset=12)], [], lineno=1515, col_offset=8)], [], lineno=1511, col_offset=4), FunctionDef('get_prog_name', arguments([Name('self', Param(), lineno=1553, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=1554, col_offset=11), 'prog', Load(), lineno=1554, col_offset=11), [Is()], [Name('None', Load(), lineno=1554, col_offset=24)], lineno=1554, col_offset=11), [Return(Call(Attribute(Attribute(Name('os', Load(), lineno=1555, col_offset=19), 'path', Load(), lineno=1555, col_offset=19), 'basename', Load(), lineno=1555, col_offset=19), [Subscript(Attribute(Name('sys', Load(), lineno=1555, col_offset=36), 'argv', Load(), lineno=1555, col_offset=36), Index(Num(0, lineno=1555, col_offset=45)), Load(), lineno=1555, col_offset=36)], [], None, None, lineno=1555, col_offset=19), lineno=1555, col_offset=12)], [Return(Attribute(Name('self', Load(), lineno=1557, col_offset=19), 'prog', Load(), lineno=1557, col_offset=19), lineno=1557, col_offset=12)], lineno=1554, col_offset=8)], [], lineno=1553, col_offset=4), FunctionDef('expand_prog_name', arguments([Name('self', Param(), lineno=1559, col_offset=25), Name('s', Param(), lineno=1559, col_offset=31)], None, None, []), [Return(Call(Attribute(Name('s', Load(), lineno=1560, col_offset=15), 'replace', Load(), lineno=1560, col_offset=15), [Str('%prog', lineno=1560, col_offset=25), Call(Attribute(Name('self', Load(), lineno=1560, col_offset=34), 'get_prog_name', Load(), lineno=1560, col_offset=34), [], [], None, None, lineno=1560, col_offset=34)], [], None, None, lineno=1560, col_offset=15), lineno=1560, col_offset=8)], [], lineno=1559, col_offset=4), FunctionDef('get_description', arguments([Name('self', Param(), lineno=1562, col_offset=24)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=1563, col_offset=15), 'expand_prog_name', Load(), lineno=1563, col_offset=15), [Attribute(Name('self', Load(), lineno=1563, col_offset=37), 'description', Load(), lineno=1563, col_offset=37)], [], None, None, lineno=1563, col_offset=15), lineno=1563, col_offset=8)], [], lineno=1562, col_offset=4), FunctionDef('exit', arguments([Name('self', Param(), lineno=1565, col_offset=13), Name('status', Param(), lineno=1565, col_offset=19), Name('msg', Param(), lineno=1565, col_offset=29)], None, None, [Num(0, lineno=1565, col_offset=26), Name('None', Load(), lineno=1565, col_offset=33)]), [If(Name('msg', Load(), lineno=1566, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1567, col_offset=12), 'stderr', Load(), lineno=1567, col_offset=12), 'write', Load(), lineno=1567, col_offset=12), [Name('msg', Load(), lineno=1567, col_offset=29)], [], None, None, lineno=1567, col_offset=12), lineno=1567, col_offset=12)], [], lineno=1566, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1568, col_offset=8), 'exit', Load(), lineno=1568, col_offset=8), [Name('status', Load(), lineno=1568, col_offset=17)], [], None, None, lineno=1568, col_offset=8), lineno=1568, col_offset=8)], [], lineno=1565, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=1570, col_offset=14), Name('msg', Param(), lineno=1570, col_offset=20)], None, None, []), [Expr(Str("error(msg : string)\n\n        Print a usage message incorporating 'msg' to stderr and exit.\n        If you override this in a subclass, it should not return -- it\n        should either exit or raise an exception.\n        ", lineno=1576, col_offset=-1), lineno=1576, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=1577, col_offset=8), 'print_usage', Load(), lineno=1577, col_offset=8), [Attribute(Name('sys', Load(), lineno=1577, col_offset=25), 'stderr', Load(), lineno=1577, col_offset=25)], [], None, None, lineno=1577, col_offset=8), lineno=1577, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1578, col_offset=8), 'exit', Load(), lineno=1578, col_offset=8), [Num(2, lineno=1578, col_offset=18), BinOp(Str('%s: error: %s\n', lineno=1578, col_offset=21), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=1578, col_offset=42), 'get_prog_name', Load(), lineno=1578, col_offset=42), [], [], None, None, lineno=1578, col_offset=42), Name('msg', Load(), lineno=1578, col_offset=64)], Load(), lineno=1578, col_offset=42), lineno=1578, col_offset=21)], [], None, None, lineno=1578, col_offset=8), lineno=1578, col_offset=8)], [], lineno=1570, col_offset=4), FunctionDef('get_usage', arguments([Name('self', Param(), lineno=1580, col_offset=18)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1581, col_offset=11), 'usage', Load(), lineno=1581, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=1582, col_offset=19), 'formatter', Load(), lineno=1582, col_offset=19), 'format_usage', Load(), lineno=1582, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=1583, col_offset=16), 'expand_prog_name', Load(), lineno=1583, col_offset=16), [Attribute(Name('self', Load(), lineno=1583, col_offset=38), 'usage', Load(), lineno=1583, col_offset=38)], [], None, None, lineno=1583, col_offset=16)], [], None, None, lineno=1582, col_offset=19), lineno=1582, col_offset=12)], [Return(Str('', lineno=1585, col_offset=19), lineno=1585, col_offset=12)], lineno=1581, col_offset=8)], [], lineno=1580, col_offset=4), FunctionDef('print_usage', arguments([Name('self', Param(), lineno=1587, col_offset=20), Name('file', Param(), lineno=1587, col_offset=26)], None, None, [Name('None', Load(), lineno=1587, col_offset=31)]), [Expr(Str('print_usage(file : file = stdout)\n\n        Print the usage message for the current program (self.usage) to\n        \'file\' (default stdout).  Any occurrence of the string "%prog" in\n        self.usage is replaced with the name of the current program\n        (basename of sys.argv[0]).  Does nothing if self.usage is empty\n        or not defined.\n        ', lineno=1595, col_offset=-1), lineno=1595, col_offset=-1), If(Attribute(Name('self', Load(), lineno=1596, col_offset=11), 'usage', Load(), lineno=1596, col_offset=11), [Print(Name('file', Load(), lineno=1597, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=1597, col_offset=26), 'get_usage', Load(), lineno=1597, col_offset=26), [], [], None, None, lineno=1597, col_offset=26)], True, lineno=1597, col_offset=12)], [], lineno=1596, col_offset=8)], [], lineno=1587, col_offset=4), FunctionDef('get_version', arguments([Name('self', Param(), lineno=1599, col_offset=20)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1600, col_offset=11), 'version', Load(), lineno=1600, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=1601, col_offset=19), 'expand_prog_name', Load(), lineno=1601, col_offset=19), [Attribute(Name('self', Load(), lineno=1601, col_offset=41), 'version', Load(), lineno=1601, col_offset=41)], [], None, None, lineno=1601, col_offset=19), lineno=1601, col_offset=12)], [Return(Str('', lineno=1603, col_offset=19), lineno=1603, col_offset=12)], lineno=1600, col_offset=8)], [], lineno=1599, col_offset=4), FunctionDef('print_version', arguments([Name('self', Param(), lineno=1605, col_offset=22), Name('file', Param(), lineno=1605, col_offset=28)], None, None, [Name('None', Load(), lineno=1605, col_offset=33)]), [Expr(Str('print_version(file : file = stdout)\n\n        Print the version message for this program (self.version) to\n        \'file\' (default stdout).  As with print_usage(), any occurrence\n        of "%prog" in self.version is replaced by the current program\'s\n        name.  Does nothing if self.version is empty or undefined.\n        ', lineno=1612, col_offset=-1), lineno=1612, col_offset=-1), If(Attribute(Name('self', Load(), lineno=1613, col_offset=11), 'version', Load(), lineno=1613, col_offset=11), [Print(Name('file', Load(), lineno=1614, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=1614, col_offset=26), 'get_version', Load(), lineno=1614, col_offset=26), [], [], None, None, lineno=1614, col_offset=26)], True, lineno=1614, col_offset=12)], [], lineno=1613, col_offset=8)], [], lineno=1605, col_offset=4), FunctionDef('format_option_help', arguments([Name('self', Param(), lineno=1616, col_offset=27), Name('formatter', Param(), lineno=1616, col_offset=33)], None, None, [Name('None', Load(), lineno=1616, col_offset=43)]), [If(Compare(Name('formatter', Load(), lineno=1617, col_offset=11), [Is()], [Name('None', Load(), lineno=1617, col_offset=24)], lineno=1617, col_offset=11), [Assign([Name('formatter', Store(), lineno=1618, col_offset=12)], Attribute(Name('self', Load(), lineno=1618, col_offset=24), 'formatter', Load(), lineno=1618, col_offset=24), lineno=1618, col_offset=12)], [], lineno=1617, col_offset=8), Expr(Call(Attribute(Name('formatter', Load(), lineno=1619, col_offset=8), 'store_option_strings', Load(), lineno=1619, col_offset=8), [Name('self', Load(), lineno=1619, col_offset=39)], [], None, None, lineno=1619, col_offset=8), lineno=1619, col_offset=8), Assign([Name('result', Store(), lineno=1620, col_offset=8)], List([], Load(), lineno=1620, col_offset=17), lineno=1620, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=1621, col_offset=8), 'append', Load(), lineno=1621, col_offset=8), [Call(Attribute(Name('formatter', Load(), lineno=1621, col_offset=22), 'format_heading', Load(), lineno=1621, col_offset=22), [Call(Name('_', Load(), lineno=1621, col_offset=47), [Str('Options', lineno=1621, col_offset=49)], [], None, None, lineno=1621, col_offset=47)], [], None, None, lineno=1621, col_offset=22)], [], None, None, lineno=1621, col_offset=8), lineno=1621, col_offset=8), Expr(Call(Attribute(Name('formatter', Load(), lineno=1622, col_offset=8), 'indent', Load(), lineno=1622, col_offset=8), [], [], None, None, lineno=1622, col_offset=8), lineno=1622, col_offset=8), If(Attribute(Name('self', Load(), lineno=1623, col_offset=11), 'option_list', Load(), lineno=1623, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=1624, col_offset=12), 'append', Load(), lineno=1624, col_offset=12), [Call(Attribute(Name('OptionContainer', Load(), lineno=1624, col_offset=26), 'format_option_help', Load(), lineno=1624, col_offset=26), [Name('self', Load(), lineno=1624, col_offset=61), Name('formatter', Load(), lineno=1624, col_offset=67)], [], None, None, lineno=1624, col_offset=26)], [], None, None, lineno=1624, col_offset=12), lineno=1624, col_offset=12), Expr(Call(Attribute(Name('result', Load(), lineno=1625, col_offset=12), 'append', Load(), lineno=1625, col_offset=12), [Str('\n', lineno=1625, col_offset=26)], [], None, None, lineno=1625, col_offset=12), lineno=1625, col_offset=12)], [], lineno=1623, col_offset=8), For(Name('group', Store(), lineno=1626, col_offset=12), Attribute(Name('self', Load(), lineno=1626, col_offset=21), 'option_groups', Load(), lineno=1626, col_offset=21), [Expr(Call(Attribute(Name('result', Load(), lineno=1627, col_offset=12), 'append', Load(), lineno=1627, col_offset=12), [Call(Attribute(Name('group', Load(), lineno=1627, col_offset=26), 'format_help', Load(), lineno=1627, col_offset=26), [Name('formatter', Load(), lineno=1627, col_offset=44)], [], None, None, lineno=1627, col_offset=26)], [], None, None, lineno=1627, col_offset=12), lineno=1627, col_offset=12), Expr(Call(Attribute(Name('result', Load(), lineno=1628, col_offset=12), 'append', Load(), lineno=1628, col_offset=12), [Str('\n', lineno=1628, col_offset=26)], [], None, None, lineno=1628, col_offset=12), lineno=1628, col_offset=12)], [], lineno=1626, col_offset=8), Expr(Call(Attribute(Name('formatter', Load(), lineno=1629, col_offset=8), 'dedent', Load(), lineno=1629, col_offset=8), [], [], None, None, lineno=1629, col_offset=8), lineno=1629, col_offset=8), Return(Call(Attribute(Str('', lineno=1631, col_offset=15), 'join', Load(), lineno=1631, col_offset=15), [Subscript(Name('result', Load(), lineno=1631, col_offset=23), Slice(None, Num(-1, lineno=1631, col_offset=32), None), Load(), lineno=1631, col_offset=23)], [], None, None, lineno=1631, col_offset=15), lineno=1631, col_offset=8)], [], lineno=1616, col_offset=4), FunctionDef('format_epilog', arguments([Name('self', Param(), lineno=1633, col_offset=22), Name('formatter', Param(), lineno=1633, col_offset=28)], None, None, []), [Return(Call(Attribute(Name('formatter', Load(), lineno=1634, col_offset=15), 'format_epilog', Load(), lineno=1634, col_offset=15), [Attribute(Name('self', Load(), lineno=1634, col_offset=39), 'epilog', Load(), lineno=1634, col_offset=39)], [], None, None, lineno=1634, col_offset=15), lineno=1634, col_offset=8)], [], lineno=1633, col_offset=4), FunctionDef('format_help', arguments([Name('self', Param(), lineno=1636, col_offset=20), Name('formatter', Param(), lineno=1636, col_offset=26)], None, None, [Name('None', Load(), lineno=1636, col_offset=36)]), [If(Compare(Name('formatter', Load(), lineno=1637, col_offset=11), [Is()], [Name('None', Load(), lineno=1637, col_offset=24)], lineno=1637, col_offset=11), [Assign([Name('formatter', Store(), lineno=1638, col_offset=12)], Attribute(Name('self', Load(), lineno=1638, col_offset=24), 'formatter', Load(), lineno=1638, col_offset=24), lineno=1638, col_offset=12)], [], lineno=1637, col_offset=8), Assign([Name('result', Store(), lineno=1639, col_offset=8)], List([], Load(), lineno=1639, col_offset=17), lineno=1639, col_offset=8), If(Attribute(Name('self', Load(), lineno=1640, col_offset=11), 'usage', Load(), lineno=1640, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=1641, col_offset=12), 'append', Load(), lineno=1641, col_offset=12), [BinOp(Call(Attribute(Name('self', Load(), lineno=1641, col_offset=26), 'get_usage', Load(), lineno=1641, col_offset=26), [], [], None, None, lineno=1641, col_offset=26), Add(), Str('\n', lineno=1641, col_offset=45), lineno=1641, col_offset=26)], [], None, None, lineno=1641, col_offset=12), lineno=1641, col_offset=12)], [], lineno=1640, col_offset=8), If(Attribute(Name('self', Load(), lineno=1642, col_offset=11), 'description', Load(), lineno=1642, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=1643, col_offset=12), 'append', Load(), lineno=1643, col_offset=12), [BinOp(Call(Attribute(Name('self', Load(), lineno=1643, col_offset=26), 'format_description', Load(), lineno=1643, col_offset=26), [Name('formatter', Load(), lineno=1643, col_offset=50)], [], None, None, lineno=1643, col_offset=26), Add(), Str('\n', lineno=1643, col_offset=63), lineno=1643, col_offset=26)], [], None, None, lineno=1643, col_offset=12), lineno=1643, col_offset=12)], [], lineno=1642, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=1644, col_offset=8), 'append', Load(), lineno=1644, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=1644, col_offset=22), 'format_option_help', Load(), lineno=1644, col_offset=22), [Name('formatter', Load(), lineno=1644, col_offset=46)], [], None, None, lineno=1644, col_offset=22)], [], None, None, lineno=1644, col_offset=8), lineno=1644, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=1645, col_offset=8), 'append', Load(), lineno=1645, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=1645, col_offset=22), 'format_epilog', Load(), lineno=1645, col_offset=22), [Name('formatter', Load(), lineno=1645, col_offset=41)], [], None, None, lineno=1645, col_offset=22)], [], None, None, lineno=1645, col_offset=8), lineno=1645, col_offset=8), Return(Call(Attribute(Str('', lineno=1646, col_offset=15), 'join', Load(), lineno=1646, col_offset=15), [Name('result', Load(), lineno=1646, col_offset=23)], [], None, None, lineno=1646, col_offset=15), lineno=1646, col_offset=8)], [], lineno=1636, col_offset=4), FunctionDef('_get_encoding', arguments([Name('self', Param(), lineno=1649, col_offset=22), Name('file', Param(), lineno=1649, col_offset=28)], None, None, []), [Assign([Name('encoding', Store(), lineno=1650, col_offset=8)], Call(Name('getattr', Load(), lineno=1650, col_offset=19), [Name('file', Load(), lineno=1650, col_offset=27), Str('encoding', lineno=1650, col_offset=33), Name('None', Load(), lineno=1650, col_offset=45)], [], None, None, lineno=1650, col_offset=19), lineno=1650, col_offset=8), If(UnaryOp(Not(), Name('encoding', Load(), lineno=1651, col_offset=15), lineno=1651, col_offset=11), [Assign([Name('encoding', Store(), lineno=1652, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=1652, col_offset=23), 'getdefaultencoding', Load(), lineno=1652, col_offset=23), [], [], None, None, lineno=1652, col_offset=23), lineno=1652, col_offset=12)], [], lineno=1651, col_offset=8), Return(Name('encoding', Load(), lineno=1653, col_offset=15), lineno=1653, col_offset=8)], [], lineno=1649, col_offset=4), FunctionDef('print_help', arguments([Name('self', Param(), lineno=1655, col_offset=19), Name('file', Param(), lineno=1655, col_offset=25)], None, None, [Name('None', Load(), lineno=1655, col_offset=30)]), [Expr(Str("print_help(file : file = stdout)\n\n        Print an extended help message, listing all options and any\n        help text provided with them, to 'file' (default stdout).\n        ", lineno=1660, col_offset=-1), lineno=1660, col_offset=-1), If(Compare(Name('file', Load(), lineno=1661, col_offset=11), [Is()], [Name('None', Load(), lineno=1661, col_offset=19)], lineno=1661, col_offset=11), [Assign([Name('file', Store(), lineno=1662, col_offset=12)], Attribute(Name('sys', Load(), lineno=1662, col_offset=19), 'stdout', Load(), lineno=1662, col_offset=19), lineno=1662, col_offset=12)], [], lineno=1661, col_offset=8), Assign([Name('encoding', Store(), lineno=1663, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1663, col_offset=19), '_get_encoding', Load(), lineno=1663, col_offset=19), [Name('file', Load(), lineno=1663, col_offset=38)], [], None, None, lineno=1663, col_offset=19), lineno=1663, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1664, col_offset=8), 'write', Load(), lineno=1664, col_offset=8), [Call(Attribute(Call(Attribute(Name('self', Load(), lineno=1664, col_offset=19), 'format_help', Load(), lineno=1664, col_offset=19), [], [], None, None, lineno=1664, col_offset=19), 'encode', Load(), lineno=1664, col_offset=19), [Name('encoding', Load(), lineno=1664, col_offset=45), Str('replace', lineno=1664, col_offset=55)], [], None, None, lineno=1664, col_offset=19)], [], None, None, lineno=1664, col_offset=8), lineno=1664, col_offset=8)], [], lineno=1655, col_offset=4)], [], lineno=1118, col_offset=0), FunctionDef('_match_abbrev', arguments([Name('s', Param(), lineno=1669, col_offset=18), Name('wordmap', Param(), lineno=1669, col_offset=21)], None, None, []), [Expr(Str("_match_abbrev(s : string, wordmap : {string : Option}) -> string\n\n    Return the string key in 'wordmap' for which 's' is an unambiguous\n    abbreviation.  If 's' is found to be ambiguous or doesn't match any of\n    'words', raise BadOptionError.\n    ", lineno=1675, col_offset=-1), lineno=1675, col_offset=-1), If(Compare(Name('s', Load(), lineno=1677, col_offset=7), [In()], [Name('wordmap', Load(), lineno=1677, col_offset=12)], lineno=1677, col_offset=7), [Return(Name('s', Load(), lineno=1678, col_offset=15), lineno=1678, col_offset=8)], [Assign([Name('possibilities', Store(), lineno=1681, col_offset=8)], ListComp(Name('word', Load(), lineno=1681, col_offset=25), [comprehension(Name('word', Store(), lineno=1681, col_offset=34), Call(Attribute(Name('wordmap', Load(), lineno=1681, col_offset=42), 'keys', Load(), lineno=1681, col_offset=42), [], [], None, None, lineno=1681, col_offset=42), [Call(Attribute(Name('word', Load(), lineno=1682, col_offset=28), 'startswith', Load(), lineno=1682, col_offset=28), [Name('s', Load(), lineno=1682, col_offset=44)], [], None, None, lineno=1682, col_offset=28)])], lineno=1681, col_offset=25), lineno=1681, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=1684, col_offset=11), [Name('possibilities', Load(), lineno=1684, col_offset=15)], [], None, None, lineno=1684, col_offset=11), [Eq()], [Num(1, lineno=1684, col_offset=33)], lineno=1684, col_offset=11), [Return(Subscript(Name('possibilities', Load(), lineno=1685, col_offset=19), Index(Num(0, lineno=1685, col_offset=33)), Load(), lineno=1685, col_offset=19), lineno=1685, col_offset=12)], [If(UnaryOp(Not(), Name('possibilities', Load(), lineno=1686, col_offset=17), lineno=1686, col_offset=13), [Raise(Call(Name('BadOptionError', Load(), lineno=1687, col_offset=18), [Name('s', Load(), lineno=1687, col_offset=33)], [], None, None, lineno=1687, col_offset=18), None, None, lineno=1687, col_offset=12)], [Expr(Call(Attribute(Name('possibilities', Load(), lineno=1690, col_offset=12), 'sort', Load(), lineno=1690, col_offset=12), [], [], None, None, lineno=1690, col_offset=12), lineno=1690, col_offset=12), Raise(Call(Name('AmbiguousOptionError', Load(), lineno=1691, col_offset=18), [Name('s', Load(), lineno=1691, col_offset=39), Name('possibilities', Load(), lineno=1691, col_offset=42)], [], None, None, lineno=1691, col_offset=18), None, None, lineno=1691, col_offset=12)], lineno=1686, col_offset=13)], lineno=1684, col_offset=8)], lineno=1677, col_offset=4)], [], lineno=1669, col_offset=0), Assign([Name('make_option', Store(), lineno=1698, col_offset=0)], Name('Option', Load(), lineno=1698, col_offset=14), lineno=1698, col_offset=0)])
