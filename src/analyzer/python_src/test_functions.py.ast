Module([Import([alias('sys', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), Import([alias('ttk', None)], lineno=4, col_offset=0), ClassDef('MockTclObj', [Name('object', Load(), lineno=6, col_offset=17)], [Assign([Name('typename', Store(), lineno=7, col_offset=4)], Str('test', lineno=7, col_offset=15), lineno=7, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=9, col_offset=17), Name('val', Param(), lineno=9, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=10, col_offset=8), 'val', Store(), lineno=10, col_offset=8)], Name('val', Load(), lineno=10, col_offset=19), lineno=10, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=12, col_offset=16)], None, None, []), [Return(Call(Name('unicode', Load(), lineno=13, col_offset=15), [Attribute(Name('self', Load(), lineno=13, col_offset=23), 'val', Load(), lineno=13, col_offset=23)], [], None, None, lineno=13, col_offset=15), lineno=13, col_offset=8)], [], lineno=12, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('MockStateSpec', [Name('object', Load(), lineno=16, col_offset=20)], [Assign([Name('typename', Store(), lineno=17, col_offset=4)], Str('StateSpec', lineno=17, col_offset=15), lineno=17, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=19, col_offset=17)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=20, col_offset=8), 'val', Store(), lineno=20, col_offset=8)], Name('args', Load(), lineno=20, col_offset=19), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=22, col_offset=16)], None, None, []), [Return(Call(Attribute(Str(' ', lineno=23, col_offset=15), 'join', Load(), lineno=23, col_offset=15), [Attribute(Name('self', Load(), lineno=23, col_offset=24), 'val', Load(), lineno=23, col_offset=24)], [], None, None, lineno=23, col_offset=15), lineno=23, col_offset=8)], [], lineno=22, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('InternalFunctionsTest', [Attribute(Name('unittest', Load(), lineno=26, col_offset=28), 'TestCase', Load(), lineno=26, col_offset=28)], [FunctionDef('test_format_optdict', arguments([Name('self', Param(), lineno=28, col_offset=28)], None, None, []), [FunctionDef('check_against', arguments([Name('fmt_opts', Param(), lineno=29, col_offset=26), Name('result', Param(), lineno=29, col_offset=36)], None, None, []), [For(Name('i', Store(), lineno=30, col_offset=16), Call(Name('range', Load(), lineno=30, col_offset=21), [Num(0, lineno=30, col_offset=27), Call(Name('len', Load(), lineno=30, col_offset=30), [Name('fmt_opts', Load(), lineno=30, col_offset=34)], [], None, None, lineno=30, col_offset=30), Num(2, lineno=30, col_offset=45)], [], None, None, lineno=30, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=16), 'assertEqual', Load(), lineno=31, col_offset=16), [Call(Attribute(Name('result', Load(), lineno=31, col_offset=33), 'pop', Load(), lineno=31, col_offset=33), [Subscript(Name('fmt_opts', Load(), lineno=31, col_offset=44), Index(Name('i', Load(), lineno=31, col_offset=53)), Load(), lineno=31, col_offset=44)], [], None, None, lineno=31, col_offset=33), Subscript(Name('fmt_opts', Load(), lineno=31, col_offset=58), Index(BinOp(Name('i', Load(), lineno=31, col_offset=67), Add(), Num(1, lineno=31, col_offset=71), lineno=31, col_offset=67)), Load(), lineno=31, col_offset=58)], [], None, None, lineno=31, col_offset=16), lineno=31, col_offset=16)], [], lineno=30, col_offset=12), If(Name('result', Load(), lineno=32, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=16), 'fail', Load(), lineno=33, col_offset=16), [BinOp(Str('result still got elements: %s', lineno=33, col_offset=26), Mod(), Name('result', Load(), lineno=33, col_offset=60), lineno=33, col_offset=26)], [], None, None, lineno=33, col_offset=16), lineno=33, col_offset=16)], [], lineno=32, col_offset=12)], [], lineno=29, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertFalse', Load(), lineno=36, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=36, col_offset=25), '_format_optdict', Load(), lineno=36, col_offset=25), [Dict([], [], lineno=36, col_offset=45)], [], None, None, lineno=36, col_offset=25)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=39, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=40, col_offset=12), '_format_optdict', Load(), lineno=40, col_offset=12), [Dict([Str('fg', lineno=40, col_offset=33), Str('padding', lineno=40, col_offset=47)], [Str('blue', lineno=40, col_offset=39), List([Num(1, lineno=40, col_offset=59), Num(2, lineno=40, col_offset=62), Num(3, lineno=40, col_offset=65), Num(4, lineno=40, col_offset=68)], Load(), lineno=40, col_offset=58)], lineno=40, col_offset=32)], [], None, None, lineno=40, col_offset=12), Dict([Str('-fg', lineno=41, col_offset=13), Str('-padding', lineno=41, col_offset=28)], [Str('blue', lineno=41, col_offset=20), Str('1 2 3 4', lineno=41, col_offset=40)], lineno=41, col_offset=12)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=44, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=45, col_offset=12), '_format_optdict', Load(), lineno=45, col_offset=12), [Dict([Str('test', lineno=45, col_offset=33)], [Tuple([Num(1, lineno=45, col_offset=42), Num(2, lineno=45, col_offset=45), Str('', lineno=45, col_offset=48), Num(0, lineno=45, col_offset=52)], Load(), lineno=45, col_offset=42)], lineno=45, col_offset=32)], [], None, None, lineno=45, col_offset=12), Dict([Str('-test', lineno=46, col_offset=13)], [Str('1 2 {} 0', lineno=46, col_offset=22)], lineno=46, col_offset=12)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=49, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=50, col_offset=12), '_format_optdict', Load(), lineno=50, col_offset=12), [Dict([Str('test', lineno=50, col_offset=33)], [Dict([Str('left', lineno=50, col_offset=42)], [Str('as is', lineno=50, col_offset=50)], lineno=50, col_offset=41)], lineno=50, col_offset=32)], [], None, None, lineno=50, col_offset=12), Dict([Str('-test', lineno=51, col_offset=13)], [Dict([Str('left', lineno=51, col_offset=23)], [Str('as is', lineno=51, col_offset=31)], lineno=51, col_offset=22)], lineno=51, col_offset=12)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=54, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=55, col_offset=12), '_format_optdict', Load(), lineno=55, col_offset=12), [Dict([Str('test', lineno=56, col_offset=17), Str('nochange1', lineno=56, col_offset=47), Str('nochange2', lineno=57, col_offset=17)], [List([Num(1, lineno=56, col_offset=26), Num(-1, lineno=56, col_offset=30), Str('', lineno=56, col_offset=33), Str('2m', lineno=56, col_offset=37), Num(0, lineno=56, col_offset=43)], Load(), lineno=56, col_offset=25), Num(3, lineno=56, col_offset=60), Str('abc def', lineno=57, col_offset=30)], lineno=56, col_offset=16)], [keyword('script', Name('True', Load(), lineno=57, col_offset=49))], None, None, lineno=55, col_offset=12), Dict([Str('-test', lineno=58, col_offset=13), Str('-nochange1', lineno=58, col_offset=40), Str('-nochange2', lineno=59, col_offset=13)], [Str('{1 -1 {} 2m 0}', lineno=58, col_offset=22), Num(3, lineno=58, col_offset=54), Str('abc def', lineno=59, col_offset=27)], lineno=58, col_offset=12)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Assign([Name('opts', Store(), lineno=61, col_offset=8)], Dict([Str(u'\u03b1\u03b2\u03b3', lineno=61, col_offset=16), Str(u'\xe1', lineno=61, col_offset=33)], [Name('True', Load(), lineno=61, col_offset=27), Name('False', Load(), lineno=61, col_offset=40)], lineno=61, col_offset=15), lineno=61, col_offset=8), Assign([Name('orig_opts', Store(), lineno=62, col_offset=8)], Call(Attribute(Name('opts', Load(), lineno=62, col_offset=20), 'copy', Load(), lineno=62, col_offset=20), [], [], None, None, lineno=62, col_offset=20), lineno=62, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=64, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=64, col_offset=22), '_format_optdict', Load(), lineno=64, col_offset=22), [Name('opts', Load(), lineno=64, col_offset=42)], [], None, None, lineno=64, col_offset=22), Dict([Str(u'-\u03b1\u03b2\u03b3', lineno=64, col_offset=50), Str(u'-\xe1', lineno=64, col_offset=68)], [Name('True', Load(), lineno=64, col_offset=62), Name('False', Load(), lineno=64, col_offset=76)], lineno=64, col_offset=49)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertEqual', Load(), lineno=66, col_offset=8), [Name('opts', Load(), lineno=66, col_offset=25), Name('orig_opts', Load(), lineno=66, col_offset=31)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Name('check_against', Load(), lineno=69, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=70, col_offset=12), '_format_optdict', Load(), lineno=70, col_offset=12), [Dict([Str('option', lineno=71, col_offset=17)], [Tuple([Str('one two', lineno=71, col_offset=28), Str('three', lineno=71, col_offset=39)], Load(), lineno=71, col_offset=28)], lineno=71, col_offset=16)], [], None, None, lineno=70, col_offset=12), Dict([Str('-option', lineno=72, col_offset=13)], [Str('{one two} three', lineno=72, col_offset=24)], lineno=72, col_offset=12)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Name('amount_opts', Store(), lineno=75, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=75, col_offset=22), [Call(Attribute(Name('ttk', Load(), lineno=75, col_offset=26), '_format_optdict', Load(), lineno=75, col_offset=26), [Name('opts', Load(), lineno=75, col_offset=46)], [keyword('ignore', Str(u'\xe1', lineno=75, col_offset=60))], None, None, lineno=75, col_offset=26)], [], None, None, lineno=75, col_offset=22), FloorDiv(), Num(2, lineno=75, col_offset=72), lineno=75, col_offset=22), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'assertEqual', Load(), lineno=76, col_offset=8), [Name('amount_opts', Load(), lineno=76, col_offset=25), BinOp(Call(Name('len', Load(), lineno=76, col_offset=38), [Name('opts', Load(), lineno=76, col_offset=42)], [], None, None, lineno=76, col_offset=38), Sub(), Num(1, lineno=76, col_offset=50), lineno=76, col_offset=38)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), Assign([Name('amount_opts', Store(), lineno=79, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=79, col_offset=22), [Call(Attribute(Name('ttk', Load(), lineno=79, col_offset=26), '_format_optdict', Load(), lineno=79, col_offset=26), [Name('opts', Load(), lineno=79, col_offset=46)], [keyword('ignore', Tuple([Str(u'\xe1', lineno=79, col_offset=60), Str('b', lineno=79, col_offset=67)], Load(), lineno=79, col_offset=60))], None, None, lineno=79, col_offset=26)], [], None, None, lineno=79, col_offset=22), FloorDiv(), Num(2, lineno=79, col_offset=77), lineno=79, col_offset=22), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Name('amount_opts', Load(), lineno=80, col_offset=25), BinOp(Call(Name('len', Load(), lineno=80, col_offset=38), [Name('opts', Load(), lineno=80, col_offset=42)], [], None, None, lineno=80, col_offset=38), Sub(), Num(1, lineno=80, col_offset=50), lineno=80, col_offset=38)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'assertFalse', Load(), lineno=83, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=83, col_offset=25), '_format_optdict', Load(), lineno=83, col_offset=25), [Name('opts', Load(), lineno=83, col_offset=45)], [keyword('ignore', Call(Attribute(Name('opts', Load(), lineno=83, col_offset=58), 'keys', Load(), lineno=83, col_offset=58), [], [], None, None, lineno=83, col_offset=58))], None, None, lineno=83, col_offset=25)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_format_mapdict', arguments([Name('self', Param(), lineno=86, col_offset=28)], None, None, []), [Assign([Name('opts', Store(), lineno=87, col_offset=8)], Dict([Str('a', lineno=87, col_offset=16)], [List([Tuple([Str('b', lineno=87, col_offset=23), Str('c', lineno=87, col_offset=28), Str('val', lineno=87, col_offset=33)], Load(), lineno=87, col_offset=23), Tuple([Str('d', lineno=87, col_offset=42), Str('otherval', lineno=87, col_offset=47)], Load(), lineno=87, col_offset=42), Tuple([Str('', lineno=87, col_offset=61), Str('single', lineno=87, col_offset=65)], Load(), lineno=87, col_offset=61)], Load(), lineno=87, col_offset=21)], lineno=87, col_offset=15), lineno=87, col_offset=8), Assign([Name('result', Store(), lineno=88, col_offset=8)], Call(Attribute(Name('ttk', Load(), lineno=88, col_offset=17), '_format_mapdict', Load(), lineno=88, col_offset=17), [Name('opts', Load(), lineno=88, col_offset=37)], [], None, None, lineno=88, col_offset=17), lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertEqual', Load(), lineno=89, col_offset=8), [Call(Name('len', Load(), lineno=89, col_offset=25), [Name('result', Load(), lineno=89, col_offset=29)], [], None, None, lineno=89, col_offset=25), BinOp(Call(Name('len', Load(), lineno=89, col_offset=38), [Call(Attribute(Name('opts', Load(), lineno=89, col_offset=42), 'keys', Load(), lineno=89, col_offset=42), [], [], None, None, lineno=89, col_offset=42)], [], None, None, lineno=89, col_offset=38), Mult(), Num(2, lineno=89, col_offset=57), lineno=89, col_offset=38)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [Name('result', Load(), lineno=90, col_offset=25), Tuple([Str('-a', lineno=90, col_offset=34), Str('{b c} val d otherval {} single', lineno=90, col_offset=40)], Load(), lineno=90, col_offset=34)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertEqual', Load(), lineno=91, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=91, col_offset=25), '_format_mapdict', Load(), lineno=91, col_offset=25), [Name('opts', Load(), lineno=91, col_offset=45)], [keyword('script', Name('True', Load(), lineno=91, col_offset=58))], None, None, lineno=91, col_offset=25), Tuple([Str('-a', lineno=92, col_offset=13), Str('{{b c} val d otherval {} single}', lineno=92, col_offset=19)], Load(), lineno=92, col_offset=13)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'assertEqual', Load(), lineno=94, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=94, col_offset=25), '_format_mapdict', Load(), lineno=94, col_offset=25), [Dict([Num(2, lineno=94, col_offset=46)], [List([], Load(), lineno=94, col_offset=49)], lineno=94, col_offset=45)], [], None, None, lineno=94, col_offset=25), Tuple([Str('-2', lineno=94, col_offset=56), Str('', lineno=94, col_offset=62)], Load(), lineno=94, col_offset=56)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Assign([Name('opts', Store(), lineno=96, col_offset=8)], Dict([Str(u'\xfc\xf1\xed\u0107\xf3d\xe8', lineno=96, col_offset=16)], [List([Tuple([Str(u'\xe1', lineno=96, col_offset=36), Str(u'v\xe3l', lineno=96, col_offset=43)], Load(), lineno=96, col_offset=36)], Load(), lineno=96, col_offset=34)], lineno=96, col_offset=15), lineno=96, col_offset=8), Assign([Name('result', Store(), lineno=97, col_offset=8)], Call(Attribute(Name('ttk', Load(), lineno=97, col_offset=17), '_format_mapdict', Load(), lineno=97, col_offset=17), [Name('opts', Load(), lineno=97, col_offset=37)], [], None, None, lineno=97, col_offset=17), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'assertEqual', Load(), lineno=98, col_offset=8), [Name('result', Load(), lineno=98, col_offset=25), Tuple([Str(u'-\xfc\xf1\xed\u0107\xf3d\xe8', lineno=98, col_offset=34), Str(u'\xe1 v\xe3l', lineno=98, col_offset=53)], Load(), lineno=98, col_offset=34)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Assign([Name('valid', Store(), lineno=101, col_offset=8)], Dict([Str('opt', lineno=101, col_offset=17)], [List([Tuple([Str('', lineno=101, col_offset=26), Str(u'', lineno=101, col_offset=30), Str('hi', lineno=101, col_offset=35)], Load(), lineno=101, col_offset=26)], Load(), lineno=101, col_offset=24)], lineno=101, col_offset=16), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertEqual', Load(), lineno=102, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=102, col_offset=25), '_format_mapdict', Load(), lineno=102, col_offset=25), [Name('valid', Load(), lineno=102, col_offset=45)], [], None, None, lineno=102, col_offset=25), Tuple([Str('-opt', lineno=102, col_offset=54), Str('{ } hi', lineno=102, col_offset=62)], Load(), lineno=102, col_offset=54)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Assign([Name('invalid', Store(), lineno=105, col_offset=8)], Dict([Str('opt', lineno=105, col_offset=19)], [List([Tuple([Num(1, lineno=105, col_offset=28), Num(2, lineno=105, col_offset=31), Str('valid val', lineno=105, col_offset=34)], Load(), lineno=105, col_offset=28)], Load(), lineno=105, col_offset=26)], lineno=105, col_offset=18), lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertRaises', Load(), lineno=106, col_offset=8), [Name('TypeError', Load(), lineno=106, col_offset=26), Attribute(Name('ttk', Load(), lineno=106, col_offset=37), '_format_mapdict', Load(), lineno=106, col_offset=37), Name('invalid', Load(), lineno=106, col_offset=58)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), Assign([Name('invalid', Store(), lineno=107, col_offset=8)], Dict([Str('opt', lineno=107, col_offset=19)], [List([Tuple([List([Num(1, lineno=107, col_offset=29)], Load(), lineno=107, col_offset=28), Str('2', lineno=107, col_offset=33), Str('valid val', lineno=107, col_offset=38)], Load(), lineno=107, col_offset=28)], Load(), lineno=107, col_offset=26)], lineno=107, col_offset=18), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertRaises', Load(), lineno=108, col_offset=8), [Name('TypeError', Load(), lineno=108, col_offset=26), Attribute(Name('ttk', Load(), lineno=108, col_offset=37), '_format_mapdict', Load(), lineno=108, col_offset=37), Name('invalid', Load(), lineno=108, col_offset=58)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Assign([Name('valid', Store(), lineno=110, col_offset=8)], Dict([Str('opt', lineno=110, col_offset=17)], [List([List([Num(1, lineno=110, col_offset=26), Str('value', lineno=110, col_offset=29)], Load(), lineno=110, col_offset=25)], Load(), lineno=110, col_offset=24)], lineno=110, col_offset=16), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertEqual', Load(), lineno=111, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=111, col_offset=25), '_format_mapdict', Load(), lineno=111, col_offset=25), [Name('valid', Load(), lineno=111, col_offset=45)], [], None, None, lineno=111, col_offset=25), Tuple([Str('-opt', lineno=111, col_offset=54), Str('1 value', lineno=111, col_offset=62)], Load(), lineno=111, col_offset=54)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), For(Name('stateval', Store(), lineno=113, col_offset=12), Tuple([Name('None', Load(), lineno=113, col_offset=25), Num(0, lineno=113, col_offset=31), Name('False', Load(), lineno=113, col_offset=34), Str('', lineno=113, col_offset=41), Call(Name('set', Load(), lineno=113, col_offset=45), [], [], None, None, lineno=113, col_offset=45)], Load(), lineno=113, col_offset=25), [Assign([Name('valid', Store(), lineno=114, col_offset=12)], Dict([Str('opt', lineno=114, col_offset=21)], [List([Tuple([Name('stateval', Load(), lineno=114, col_offset=30), Str('value', lineno=114, col_offset=40)], Load(), lineno=114, col_offset=30)], Load(), lineno=114, col_offset=28)], lineno=114, col_offset=20), lineno=114, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=12), 'assertEqual', Load(), lineno=115, col_offset=12), [Call(Attribute(Name('ttk', Load(), lineno=115, col_offset=29), '_format_mapdict', Load(), lineno=115, col_offset=29), [Name('valid', Load(), lineno=115, col_offset=49)], [], None, None, lineno=115, col_offset=29), Tuple([Str('-opt', lineno=116, col_offset=17), Str('{} value', lineno=116, col_offset=25)], Load(), lineno=116, col_offset=17)], [], None, None, lineno=115, col_offset=12), lineno=115, col_offset=12)], [], lineno=113, col_offset=8), Assign([Name('opts', Store(), lineno=119, col_offset=8)], Dict([Str('a', lineno=119, col_offset=16)], [Name('None', Load(), lineno=119, col_offset=21)], lineno=119, col_offset=15), lineno=119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'assertRaises', Load(), lineno=120, col_offset=8), [Name('TypeError', Load(), lineno=120, col_offset=26), Attribute(Name('ttk', Load(), lineno=120, col_offset=37), '_format_mapdict', Load(), lineno=120, col_offset=37), Name('opts', Load(), lineno=120, col_offset=58)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=8), 'assertRaises', Load(), lineno=123, col_offset=8), [Name('IndexError', Load(), lineno=123, col_offset=26), Attribute(Name('ttk', Load(), lineno=123, col_offset=38), '_format_mapdict', Load(), lineno=123, col_offset=38), Dict([Str('a', lineno=124, col_offset=13)], [List([Tuple([Str('invalid', lineno=124, col_offset=20)], Load(), lineno=124, col_offset=20)], Load(), lineno=124, col_offset=18)], lineno=124, col_offset=12)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('test_format_elemcreate', arguments([Name('self', Param(), lineno=127, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'assertTrue', Load(), lineno=128, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=128, col_offset=24), '_format_elemcreate', Load(), lineno=128, col_offset=24), [Name('None', Load(), lineno=128, col_offset=47)], [], None, None, lineno=128, col_offset=24), Tuple([Name('None', Load(), lineno=128, col_offset=55), Tuple([], Load(), lineno=128, col_offset=61)], Load(), lineno=128, col_offset=55)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'assertRaises', Load(), lineno=133, col_offset=8), [Name('IndexError', Load(), lineno=133, col_offset=26), Attribute(Name('ttk', Load(), lineno=133, col_offset=38), '_format_elemcreate', Load(), lineno=133, col_offset=38), Str('image', lineno=133, col_offset=62)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertEqual', Load(), lineno=137, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=137, col_offset=25), '_format_elemcreate', Load(), lineno=137, col_offset=25), [Str('image', lineno=137, col_offset=48), Name('False', Load(), lineno=137, col_offset=57), Str('test', lineno=137, col_offset=64)], [], None, None, lineno=137, col_offset=25), Tuple([Str('test ', lineno=138, col_offset=13), Tuple([], Load(), lineno=138, col_offset=22)], Load(), lineno=138, col_offset=13)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'assertEqual', Load(), lineno=140, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=140, col_offset=25), '_format_elemcreate', Load(), lineno=140, col_offset=25), [Str('image', lineno=140, col_offset=48), Name('False', Load(), lineno=140, col_offset=57), Str('test', lineno=140, col_offset=64), Tuple([Str('', lineno=141, col_offset=13), Str('a', lineno=141, col_offset=17)], Load(), lineno=141, col_offset=13)], [], None, None, lineno=140, col_offset=25), Tuple([Str('test {} a', lineno=141, col_offset=25), Tuple([], Load(), lineno=141, col_offset=38)], Load(), lineno=141, col_offset=25)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertEqual', Load(), lineno=143, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=143, col_offset=25), '_format_elemcreate', Load(), lineno=143, col_offset=25), [Str('image', lineno=143, col_offset=48), Name('False', Load(), lineno=143, col_offset=57), Str('test', lineno=143, col_offset=64), Tuple([Str('a', lineno=144, col_offset=13), Str('b', lineno=144, col_offset=18), Str('c', lineno=144, col_offset=23)], Load(), lineno=144, col_offset=13)], [], None, None, lineno=143, col_offset=25), Tuple([Str('test {a b} c', lineno=144, col_offset=31), Tuple([], Load(), lineno=144, col_offset=47)], Load(), lineno=144, col_offset=31)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertEqual', Load(), lineno=146, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=146, col_offset=25), '_format_elemcreate', Load(), lineno=146, col_offset=25), [Str('image', lineno=146, col_offset=48), Name('False', Load(), lineno=146, col_offset=57), Str('test', lineno=146, col_offset=64), Tuple([Str('a', lineno=147, col_offset=13), Str('b', lineno=147, col_offset=18)], Load(), lineno=147, col_offset=13)], [keyword('a', Str('x', lineno=147, col_offset=26)), keyword('b', Str('y', lineno=147, col_offset=33))], None, None, lineno=146, col_offset=25), Tuple([Str('test a b', lineno=147, col_offset=40), Tuple([Str('-a', lineno=147, col_offset=53), Str('x', lineno=147, col_offset=59), Str('-b', lineno=147, col_offset=64), Str('y', lineno=147, col_offset=70)], Load(), lineno=147, col_offset=53)], Load(), lineno=147, col_offset=40)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertEqual', Load(), lineno=150, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=150, col_offset=25), '_format_elemcreate', Load(), lineno=150, col_offset=25), [Str('image', lineno=150, col_offset=48), Name('True', Load(), lineno=150, col_offset=57), Str('test', lineno=150, col_offset=63), Tuple([Str('a', lineno=151, col_offset=13), Str('b', lineno=151, col_offset=18), Str('c', lineno=151, col_offset=23), Str('d', lineno=151, col_offset=28)], Load(), lineno=151, col_offset=13)], [keyword('x', List([Num(2, lineno=151, col_offset=37), Num(3, lineno=151, col_offset=40)], Load(), lineno=151, col_offset=36))], None, None, lineno=150, col_offset=25), Tuple([Str('{test {a b c} d}', lineno=151, col_offset=46), Str('-x {2 3}', lineno=151, col_offset=66)], Load(), lineno=151, col_offset=46)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertRaises', Load(), lineno=157, col_offset=8), [Name('ValueError', Load(), lineno=157, col_offset=26), Attribute(Name('ttk', Load(), lineno=157, col_offset=38), '_format_elemcreate', Load(), lineno=157, col_offset=38), Str('vsapi', lineno=157, col_offset=62)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=8), 'assertEqual', Load(), lineno=161, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=161, col_offset=25), '_format_elemcreate', Load(), lineno=161, col_offset=25), [Str('vsapi', lineno=161, col_offset=48), Name('False', Load(), lineno=161, col_offset=57), Str('a', lineno=161, col_offset=64), Str('b', lineno=161, col_offset=69)], [], None, None, lineno=161, col_offset=25), Tuple([Str('a b ', lineno=162, col_offset=13), Tuple([], Load(), lineno=162, col_offset=21)], Load(), lineno=162, col_offset=13)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertEqual', Load(), lineno=164, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=164, col_offset=25), '_format_elemcreate', Load(), lineno=164, col_offset=25), [Str('vsapi', lineno=164, col_offset=48), Name('False', Load(), lineno=164, col_offset=57), Str('a', lineno=164, col_offset=64), Str('b', lineno=164, col_offset=69), Tuple([Str('a', lineno=165, col_offset=13), Str('b', lineno=165, col_offset=18), Str('c', lineno=165, col_offset=23)], Load(), lineno=165, col_offset=13)], [], None, None, lineno=164, col_offset=25), Tuple([Str('a b {a b} c', lineno=165, col_offset=31), Tuple([], Load(), lineno=165, col_offset=46)], Load(), lineno=165, col_offset=31)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'assertEqual', Load(), lineno=167, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=167, col_offset=25), '_format_elemcreate', Load(), lineno=167, col_offset=25), [Str('vsapi', lineno=167, col_offset=48), Name('False', Load(), lineno=167, col_offset=57), Str('a', lineno=167, col_offset=64), Str('b', lineno=167, col_offset=69), Tuple([Str('a', lineno=168, col_offset=13), Str('b', lineno=168, col_offset=18)], Load(), lineno=168, col_offset=13)], [keyword('opt', Str('x', lineno=168, col_offset=28))], None, None, lineno=167, col_offset=25), Tuple([Str('a b a b', lineno=168, col_offset=35), Tuple([Str('-opt', lineno=168, col_offset=47), Str('x', lineno=168, col_offset=55)], Load(), lineno=168, col_offset=47)], Load(), lineno=168, col_offset=35)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertEqual', Load(), lineno=171, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=171, col_offset=25), '_format_elemcreate', Load(), lineno=171, col_offset=25), [Str('vsapi', lineno=171, col_offset=48), Name('True', Load(), lineno=171, col_offset=57), Str('a', lineno=171, col_offset=63), Str('b', lineno=171, col_offset=68), Tuple([Str('a', lineno=172, col_offset=13), Str('b', lineno=172, col_offset=18), List([Num(1, lineno=172, col_offset=24), Num(2, lineno=172, col_offset=27)], Load(), lineno=172, col_offset=23)], Load(), lineno=172, col_offset=13)], [keyword('opt', Str('x', lineno=172, col_offset=36))], None, None, lineno=171, col_offset=25), Tuple([Str('{a b {a b} {1 2}}', lineno=172, col_offset=43), Str('-opt x', lineno=172, col_offset=64)], Load(), lineno=172, col_offset=43)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'assertRaises', Load(), lineno=176, col_offset=8), [Name('IndexError', Load(), lineno=176, col_offset=26), Attribute(Name('ttk', Load(), lineno=176, col_offset=38), '_format_elemcreate', Load(), lineno=176, col_offset=38), Str('from', lineno=176, col_offset=62)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'assertEqual', Load(), lineno=178, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=178, col_offset=25), '_format_elemcreate', Load(), lineno=178, col_offset=25), [Str('from', lineno=178, col_offset=48), Name('False', Load(), lineno=178, col_offset=56), Str('a', lineno=178, col_offset=63)], [], None, None, lineno=178, col_offset=25), Tuple([Str('a', lineno=179, col_offset=13), Tuple([], Load(), lineno=179, col_offset=18)], Load(), lineno=179, col_offset=13)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertEqual', Load(), lineno=180, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=180, col_offset=25), '_format_elemcreate', Load(), lineno=180, col_offset=25), [Str('from', lineno=180, col_offset=48), Name('False', Load(), lineno=180, col_offset=56), Str('a', lineno=180, col_offset=63), Str('b', lineno=180, col_offset=68)], [], None, None, lineno=180, col_offset=25), Tuple([Str('a', lineno=181, col_offset=13), Tuple([Str('b', lineno=181, col_offset=19)], Load(), lineno=181, col_offset=19)], Load(), lineno=181, col_offset=13)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=8), 'assertEqual', Load(), lineno=182, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=182, col_offset=25), '_format_elemcreate', Load(), lineno=182, col_offset=25), [Str('from', lineno=182, col_offset=48), Name('True', Load(), lineno=182, col_offset=56), Str('a', lineno=182, col_offset=62), Str('b', lineno=182, col_offset=67)], [], None, None, lineno=182, col_offset=25), Tuple([Str('{a}', lineno=183, col_offset=13), Str('b', lineno=183, col_offset=20)], Load(), lineno=183, col_offset=13)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('test_format_layoutlist', arguments([Name('self', Param(), lineno=186, col_offset=31)], None, None, []), [FunctionDef('sample', arguments([Name('indent', Param(), lineno=187, col_offset=19), Name('indent_size', Param(), lineno=187, col_offset=29)], None, None, [Num(0, lineno=187, col_offset=26), Num(2, lineno=187, col_offset=41)]), [Return(Subscript(Call(Attribute(Name('ttk', Load(), lineno=188, col_offset=19), '_format_layoutlist', Load(), lineno=188, col_offset=19), [List([Tuple([Str('a', lineno=189, col_offset=14), Dict([Str('other', lineno=189, col_offset=20), Str('children', lineno=189, col_offset=40)], [List([Num(1, lineno=189, col_offset=30), Num(2, lineno=189, col_offset=33), Num(3, lineno=189, col_offset=36)], Load(), lineno=189, col_offset=29), List([Tuple([Str('b', lineno=190, col_offset=18), Dict([Str('children', lineno=190, col_offset=24)], [List([Tuple([Str('c', lineno=191, col_offset=22), Dict([Str('children', lineno=191, col_offset=28), Str('something', lineno=192, col_offset=50)], [List([Tuple([Str('d', lineno=192, col_offset=26), Dict([Str('nice', lineno=192, col_offset=32)], [Str('opt', lineno=192, col_offset=40)], lineno=192, col_offset=31)], Load(), lineno=192, col_offset=26)], Load(), lineno=192, col_offset=24), Tuple([Num(1, lineno=192, col_offset=64), Num(2, lineno=192, col_offset=67)], Load(), lineno=192, col_offset=64)], lineno=191, col_offset=27)], Load(), lineno=191, col_offset=22)], Load(), lineno=191, col_offset=20)], lineno=190, col_offset=23)], Load(), lineno=190, col_offset=18)], Load(), lineno=190, col_offset=16)], lineno=189, col_offset=19)], Load(), lineno=189, col_offset=14)], Load(), lineno=189, col_offset=12)], [keyword('indent', Name('indent', Load(), lineno=195, col_offset=24)), keyword('indent_size', Name('indent_size', Load(), lineno=195, col_offset=44))], None, None, lineno=188, col_offset=19), Index(Num(0, lineno=195, col_offset=57)), Load(), lineno=188, col_offset=19), lineno=188, col_offset=12)], [], lineno=187, col_offset=8), FunctionDef('sample_expected', arguments([Name('indent', Param(), lineno=197, col_offset=28), Name('indent_size', Param(), lineno=197, col_offset=38)], None, None, [Num(0, lineno=197, col_offset=35), Num(2, lineno=197, col_offset=50)]), [Assign([Name('spaces', Store(), lineno=198, col_offset=12)], Lambda(arguments([Name('amount', Param(), lineno=198, col_offset=28)], None, None, [Num(0, lineno=198, col_offset=35)]), BinOp(Str(' ', lineno=198, col_offset=38), Mult(), BinOp(Name('amount', Load(), lineno=198, col_offset=45), Add(), Name('indent', Load(), lineno=198, col_offset=54), lineno=198, col_offset=45), lineno=198, col_offset=38), lineno=198, col_offset=21), lineno=198, col_offset=12), Return(BinOp(Str('%sa -other {1 2 3} -children {\n%sb -children {\n%sc -something {1 2} -children {\n%sd -nice opt\n%s}\n%s}\n%s}', lineno=200, col_offset=16), Mod(), Tuple([Call(Name('spaces', Load(), lineno=206, col_offset=25), [], [], None, None, lineno=206, col_offset=25), Call(Name('spaces', Load(), lineno=206, col_offset=35), [Name('indent_size', Load(), lineno=206, col_offset=42)], [], None, None, lineno=206, col_offset=35), Call(Name('spaces', Load(), lineno=207, col_offset=20), [BinOp(Num(2, lineno=207, col_offset=27), Mult(), Name('indent_size', Load(), lineno=207, col_offset=31), lineno=207, col_offset=27)], [], None, None, lineno=207, col_offset=20), Call(Name('spaces', Load(), lineno=207, col_offset=45), [BinOp(Num(3, lineno=207, col_offset=52), Mult(), Name('indent_size', Load(), lineno=207, col_offset=56), lineno=207, col_offset=52)], [], None, None, lineno=207, col_offset=45), Call(Name('spaces', Load(), lineno=208, col_offset=20), [BinOp(Num(2, lineno=208, col_offset=27), Mult(), Name('indent_size', Load(), lineno=208, col_offset=31), lineno=208, col_offset=27)], [], None, None, lineno=208, col_offset=20), Call(Name('spaces', Load(), lineno=208, col_offset=45), [Name('indent_size', Load(), lineno=208, col_offset=52)], [], None, None, lineno=208, col_offset=45), Call(Name('spaces', Load(), lineno=208, col_offset=66), [], [], None, None, lineno=208, col_offset=66)], Load(), lineno=206, col_offset=25), lineno=200, col_offset=16), lineno=199, col_offset=12)], [], lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Subscript(Call(Attribute(Name('ttk', Load(), lineno=211, col_offset=25), '_format_layoutlist', Load(), lineno=211, col_offset=25), [List([], Load(), lineno=211, col_offset=48)], [], None, None, lineno=211, col_offset=25), Index(Num(0, lineno=211, col_offset=52)), Load(), lineno=211, col_offset=25), Str('', lineno=211, col_offset=56)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Assign([Name('smallest', Store(), lineno=214, col_offset=8)], Call(Attribute(Name('ttk', Load(), lineno=214, col_offset=19), '_format_layoutlist', Load(), lineno=214, col_offset=19), [List([Tuple([Str('a', lineno=214, col_offset=44), Name('None', Load(), lineno=214, col_offset=49)], Load(), lineno=214, col_offset=44)], Load(), lineno=214, col_offset=42)], [keyword('indent', Num(0, lineno=214, col_offset=64))], None, None, lineno=214, col_offset=19), lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertEqual', Load(), lineno=215, col_offset=8), [Name('smallest', Load(), lineno=215, col_offset=25), Call(Attribute(Name('ttk', Load(), lineno=216, col_offset=12), '_format_layoutlist', Load(), lineno=216, col_offset=12), [List([Tuple([Str('a', lineno=216, col_offset=37), Str('', lineno=216, col_offset=42)], Load(), lineno=216, col_offset=37)], Load(), lineno=216, col_offset=35)], [keyword('indent', Num(0, lineno=216, col_offset=55))], None, None, lineno=216, col_offset=12)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertEqual', Load(), lineno=217, col_offset=8), [Subscript(Name('smallest', Load(), lineno=217, col_offset=25), Index(Num(0, lineno=217, col_offset=34)), Load(), lineno=217, col_offset=25), Str('a', lineno=217, col_offset=38)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertEqual', Load(), lineno=220, col_offset=8), [Call(Name('sample', Load(), lineno=220, col_offset=25), [], [], None, None, lineno=220, col_offset=25), Call(Name('sample_expected', Load(), lineno=220, col_offset=35), [], [], None, None, lineno=220, col_offset=35)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), For(Name('i', Store(), lineno=221, col_offset=12), Call(Name('range', Load(), lineno=221, col_offset=17), [Num(4, lineno=221, col_offset=23)], [], None, None, lineno=221, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=12), 'assertEqual', Load(), lineno=222, col_offset=12), [Call(Name('sample', Load(), lineno=222, col_offset=29), [Name('i', Load(), lineno=222, col_offset=36)], [], None, None, lineno=222, col_offset=29), Call(Name('sample_expected', Load(), lineno=222, col_offset=40), [Name('i', Load(), lineno=222, col_offset=56)], [], None, None, lineno=222, col_offset=40)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=12), 'assertEqual', Load(), lineno=223, col_offset=12), [Call(Name('sample', Load(), lineno=223, col_offset=29), [Name('i', Load(), lineno=223, col_offset=36), Name('i', Load(), lineno=223, col_offset=39)], [], None, None, lineno=223, col_offset=29), Call(Name('sample_expected', Load(), lineno=223, col_offset=43), [Name('i', Load(), lineno=223, col_offset=59), Name('i', Load(), lineno=223, col_offset=62)], [], None, None, lineno=223, col_offset=43)], [], None, None, lineno=223, col_offset=12), lineno=223, col_offset=12)], [], lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertRaises', Load(), lineno=229, col_offset=8), [Name('ValueError', Load(), lineno=229, col_offset=26), Attribute(Name('ttk', Load(), lineno=229, col_offset=38), '_format_layoutlist', Load(), lineno=229, col_offset=38), List([Str('bad', lineno=230, col_offset=13), Str('format', lineno=230, col_offset=20)], Load(), lineno=230, col_offset=12)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertRaises', Load(), lineno=231, col_offset=8), [Name('TypeError', Load(), lineno=231, col_offset=26), Attribute(Name('ttk', Load(), lineno=231, col_offset=37), '_format_layoutlist', Load(), lineno=231, col_offset=37), Name('None', Load(), lineno=231, col_offset=61)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=8), 'assertRaises', Load(), lineno=234, col_offset=8), [Name('AttributeError', Load(), lineno=234, col_offset=26), Attribute(Name('ttk', Load(), lineno=235, col_offset=12), '_format_layoutlist', Load(), lineno=235, col_offset=12), List([Tuple([Str('a', lineno=235, col_offset=38), Str('b', lineno=235, col_offset=43)], Load(), lineno=235, col_offset=38)], Load(), lineno=235, col_offset=36)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Name('ValueError', Load(), lineno=237, col_offset=26), Attribute(Name('ttk', Load(), lineno=237, col_offset=38), '_format_layoutlist', Load(), lineno=237, col_offset=38), List([Tuple([Str('name', lineno=238, col_offset=14), Dict([Str('children', lineno=238, col_offset=23)], [Dict([Str('a', lineno=238, col_offset=36)], [Name('None', Load(), lineno=238, col_offset=41)], lineno=238, col_offset=35)], lineno=238, col_offset=22)], Load(), lineno=238, col_offset=14)], Load(), lineno=238, col_offset=12)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('test_script_from_settings', arguments([Name('self', Param(), lineno=241, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertFalse', Load(), lineno=243, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=243, col_offset=25), '_script_from_settings', Load(), lineno=243, col_offset=25), [Dict([Str('name', lineno=243, col_offset=52)], [Dict([Str('configure', lineno=244, col_offset=13), Str('map', lineno=244, col_offset=32), Str('element create', lineno=244, col_offset=45)], [Name('None', Load(), lineno=244, col_offset=26), Name('None', Load(), lineno=244, col_offset=39), Name('None', Load(), lineno=244, col_offset=63)], lineno=244, col_offset=12)], lineno=243, col_offset=51)], [], None, None, lineno=243, col_offset=25)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'assertEqual', Load(), lineno=247, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=248, col_offset=12), '_script_from_settings', Load(), lineno=248, col_offset=12), [Dict([Str('name', lineno=248, col_offset=39)], [Dict([Str('layout', lineno=248, col_offset=48)], [Name('None', Load(), lineno=248, col_offset=58)], lineno=248, col_offset=47)], lineno=248, col_offset=38)], [], None, None, lineno=248, col_offset=12), Str('ttk::style layout name {\nnull\n}', lineno=249, col_offset=12)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8), Assign([Name('configdict', Store(), lineno=251, col_offset=8)], Dict([Str(u'\u03b1\u03b2\u03b3', lineno=251, col_offset=22), Str(u'\xe1', lineno=251, col_offset=39)], [Name('True', Load(), lineno=251, col_offset=33), Name('False', Load(), lineno=251, col_offset=46)], lineno=251, col_offset=21), lineno=251, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertTrue', Load(), lineno=252, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=253, col_offset=12), '_script_from_settings', Load(), lineno=253, col_offset=12), [Dict([Str('name', lineno=253, col_offset=39)], [Dict([Str('configure', lineno=253, col_offset=48)], [Name('configdict', Load(), lineno=253, col_offset=61)], lineno=253, col_offset=47)], lineno=253, col_offset=38)], [], None, None, lineno=253, col_offset=12)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), Assign([Name('mapdict', Store(), lineno=255, col_offset=8)], Dict([Str(u'\xfc\xf1\xed\u0107\xf3d\xe8', lineno=255, col_offset=19)], [List([Tuple([Str(u'\xe1', lineno=255, col_offset=39), Str(u'v\xe3l', lineno=255, col_offset=46)], Load(), lineno=255, col_offset=39)], Load(), lineno=255, col_offset=37)], lineno=255, col_offset=18), lineno=255, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=8), 'assertTrue', Load(), lineno=256, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=257, col_offset=12), '_script_from_settings', Load(), lineno=257, col_offset=12), [Dict([Str('name', lineno=257, col_offset=39)], [Dict([Str('map', lineno=257, col_offset=48)], [Name('mapdict', Load(), lineno=257, col_offset=55)], lineno=257, col_offset=47)], lineno=257, col_offset=38)], [], None, None, lineno=257, col_offset=12)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=260, col_offset=8), 'assertRaises', Load(), lineno=260, col_offset=8), [Name('IndexError', Load(), lineno=260, col_offset=26), Attribute(Name('ttk', Load(), lineno=261, col_offset=12), '_script_from_settings', Load(), lineno=261, col_offset=12), Dict([Str('name', lineno=261, col_offset=40)], [Dict([Str('element create', lineno=261, col_offset=49)], [List([Str('image', lineno=261, col_offset=68)], Load(), lineno=261, col_offset=67)], lineno=261, col_offset=48)], lineno=261, col_offset=39)], [], None, None, lineno=260, col_offset=8), lineno=260, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=8), 'assertTrue', Load(), lineno=264, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=264, col_offset=24), '_script_from_settings', Load(), lineno=264, col_offset=24), [Dict([Str('name', lineno=264, col_offset=51)], [Dict([Str('element create', lineno=265, col_offset=13)], [List([Str('image', lineno=265, col_offset=32), Str('name', lineno=265, col_offset=41)], Load(), lineno=265, col_offset=31)], lineno=265, col_offset=12)], lineno=264, col_offset=50)], [], None, None, lineno=264, col_offset=24)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8), Assign([Name('image', Store(), lineno=267, col_offset=8)], Dict([Str('thing', lineno=267, col_offset=17)], [Dict([Str('element create', lineno=267, col_offset=27)], [List([Str('image', lineno=268, col_offset=13), Str('name', lineno=268, col_offset=22), Tuple([Str('state1', lineno=268, col_offset=31), Str('state2', lineno=268, col_offset=41), Str('val', lineno=268, col_offset=51)], Load(), lineno=268, col_offset=31)], Load(), lineno=268, col_offset=12)], lineno=267, col_offset=26)], lineno=267, col_offset=16), lineno=267, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'assertEqual', Load(), lineno=269, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=269, col_offset=25), '_script_from_settings', Load(), lineno=269, col_offset=25), [Name('image', Load(), lineno=269, col_offset=51)], [], None, None, lineno=269, col_offset=25), Str('ttk::style element create thing image {name {state1 state2} val} ', lineno=270, col_offset=12)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8), Expr(Call(Attribute(Subscript(Subscript(Name('image', Load(), lineno=272, col_offset=8), Index(Str('thing', lineno=272, col_offset=14)), Load(), lineno=272, col_offset=8), Index(Str('element create', lineno=272, col_offset=23)), Load(), lineno=272, col_offset=8), 'append', Load(), lineno=272, col_offset=8), [Dict([Str('opt', lineno=272, col_offset=49)], [Num(30, lineno=272, col_offset=56)], lineno=272, col_offset=48)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertEqual', Load(), lineno=273, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=273, col_offset=25), '_script_from_settings', Load(), lineno=273, col_offset=25), [Name('image', Load(), lineno=273, col_offset=51)], [], None, None, lineno=273, col_offset=25), Str('ttk::style element create thing image {name {state1 state2} val} -opt 30', lineno=274, col_offset=12)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Assign([Subscript(Subscript(Subscript(Subscript(Name('image', Load(), lineno=277, col_offset=8), Index(Str('thing', lineno=277, col_offset=14)), Load(), lineno=277, col_offset=8), Index(Str('element create', lineno=277, col_offset=23)), Load(), lineno=277, col_offset=8), Index(Num(-1, lineno=277, col_offset=42)), Load(), lineno=277, col_offset=8), Index(Str('opt', lineno=277, col_offset=45)), Store(), lineno=277, col_offset=8)], List([Call(Name('MockTclObj', Load(), lineno=277, col_offset=55), [Num(3, lineno=277, col_offset=66)], [], None, None, lineno=277, col_offset=55), Call(Name('MockTclObj', Load(), lineno=278, col_offset=12), [Str('2m', lineno=278, col_offset=23)], [], None, None, lineno=278, col_offset=12)], Load(), lineno=277, col_offset=54), lineno=277, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertEqual', Load(), lineno=279, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=279, col_offset=25), '_script_from_settings', Load(), lineno=279, col_offset=25), [Name('image', Load(), lineno=279, col_offset=51)], [], None, None, lineno=279, col_offset=25), Str('ttk::style element create thing image {name {state1 state2} val} -opt {3 2m}', lineno=280, col_offset=12)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=241, col_offset=4), FunctionDef('test_dict_from_tcltuple', arguments([Name('self', Param(), lineno=284, col_offset=32)], None, None, []), [Assign([Name('fakettuple', Store(), lineno=285, col_offset=8)], Tuple([Str('-a', lineno=285, col_offset=22), Str('{1 2 3}', lineno=285, col_offset=28), Str('-something', lineno=285, col_offset=39), Str('foo', lineno=285, col_offset=53)], Load(), lineno=285, col_offset=22), lineno=285, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=287, col_offset=8), 'assertEqual', Load(), lineno=287, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=287, col_offset=25), '_dict_from_tcltuple', Load(), lineno=287, col_offset=25), [Name('fakettuple', Load(), lineno=287, col_offset=49), Name('False', Load(), lineno=287, col_offset=61)], [], None, None, lineno=287, col_offset=25), Dict([Str('-a', lineno=288, col_offset=13), Str('-something', lineno=288, col_offset=30)], [Str('{1 2 3}', lineno=288, col_offset=19), Str('foo', lineno=288, col_offset=44)], lineno=288, col_offset=12)], [], None, None, lineno=287, col_offset=8), lineno=287, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'assertEqual', Load(), lineno=290, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=290, col_offset=25), '_dict_from_tcltuple', Load(), lineno=290, col_offset=25), [Name('fakettuple', Load(), lineno=290, col_offset=49)], [], None, None, lineno=290, col_offset=25), Dict([Str('a', lineno=291, col_offset=13), Str('something', lineno=291, col_offset=29)], [Str('{1 2 3}', lineno=291, col_offset=18), Str('foo', lineno=291, col_offset=42)], lineno=291, col_offset=12)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=295, col_offset=8), 'assertFalse', Load(), lineno=295, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=295, col_offset=25), '_dict_from_tcltuple', Load(), lineno=295, col_offset=25), [Tuple([Str('single', lineno=295, col_offset=50)], Load(), lineno=295, col_offset=50)], [], None, None, lineno=295, col_offset=25)], [], None, None, lineno=295, col_offset=8), lineno=295, col_offset=8), Assign([Name('sspec', Store(), lineno=297, col_offset=8)], Call(Name('MockStateSpec', Load(), lineno=297, col_offset=16), [Str('a', lineno=297, col_offset=30), Str('b', lineno=297, col_offset=35)], [], None, None, lineno=297, col_offset=16), lineno=297, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=8), 'assertEqual', Load(), lineno=298, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=298, col_offset=25), '_dict_from_tcltuple', Load(), lineno=298, col_offset=25), [Tuple([Str('-a', lineno=298, col_offset=50), Tuple([Name('sspec', Load(), lineno=298, col_offset=57), Str('val', lineno=298, col_offset=64)], Load(), lineno=298, col_offset=57)], Load(), lineno=298, col_offset=50)], [], None, None, lineno=298, col_offset=25), Dict([Str('a', lineno=299, col_offset=13)], [List([Tuple([Str('a', lineno=299, col_offset=20), Str('b', lineno=299, col_offset=25), Str('val', lineno=299, col_offset=30)], Load(), lineno=299, col_offset=20)], Load(), lineno=299, col_offset=18)], lineno=299, col_offset=12)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertEqual', Load(), lineno=301, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=301, col_offset=25), '_dict_from_tcltuple', Load(), lineno=301, col_offset=25), [Tuple([Call(Name('MockTclObj', Load(), lineno=301, col_offset=50), [Str('-padding', lineno=301, col_offset=61)], [], None, None, lineno=301, col_offset=50), List([Call(Name('MockTclObj', Load(), lineno=302, col_offset=13), [Str('1', lineno=302, col_offset=24)], [], None, None, lineno=302, col_offset=13), Num(2, lineno=302, col_offset=30), Call(Name('MockTclObj', Load(), lineno=302, col_offset=33), [Str('3m', lineno=302, col_offset=44)], [], None, None, lineno=302, col_offset=33)], Load(), lineno=302, col_offset=12)], Load(), lineno=301, col_offset=50)], [], None, None, lineno=301, col_offset=25), Dict([Str('padding', lineno=303, col_offset=13)], [List([Num(1, lineno=303, col_offset=25), Num(2, lineno=303, col_offset=28), Str('3m', lineno=303, col_offset=31)], Load(), lineno=303, col_offset=24)], lineno=303, col_offset=12)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('test_list_from_statespec', arguments([Name('self', Param(), lineno=306, col_offset=33)], None, None, []), [FunctionDef('test_it', arguments([Name('sspec', Param(), lineno=307, col_offset=20), Name('value', Param(), lineno=307, col_offset=27), Name('res_value', Param(), lineno=307, col_offset=34), Name('states', Param(), lineno=307, col_offset=45)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=12), 'assertEqual', Load(), lineno=308, col_offset=12), [Call(Attribute(Name('ttk', Load(), lineno=308, col_offset=29), '_list_from_statespec', Load(), lineno=308, col_offset=29), [Tuple([Name('sspec', Load(), lineno=309, col_offset=17), Name('value', Load(), lineno=309, col_offset=24)], Load(), lineno=309, col_offset=17)], [], None, None, lineno=308, col_offset=29), List([BinOp(Name('states', Load(), lineno=309, col_offset=34), Add(), Tuple([Name('res_value', Load(), lineno=309, col_offset=44)], Load(), lineno=309, col_offset=44), lineno=309, col_offset=34)], Load(), lineno=309, col_offset=33)], [], None, None, lineno=308, col_offset=12), lineno=308, col_offset=12)], [], lineno=307, col_offset=8), Assign([Name('states_even', Store(), lineno=311, col_offset=8)], Call(Name('tuple', Load(), lineno=311, col_offset=22), [GeneratorExp(BinOp(Str('state%d', lineno=311, col_offset=28), Mod(), Name('i', Load(), lineno=311, col_offset=40), lineno=311, col_offset=28), [comprehension(Name('i', Store(), lineno=311, col_offset=46), Call(Name('range', Load(), lineno=311, col_offset=51), [Num(6, lineno=311, col_offset=57)], [], None, None, lineno=311, col_offset=51), [])], lineno=311, col_offset=28)], [], None, None, lineno=311, col_offset=22), lineno=311, col_offset=8), Assign([Name('statespec', Store(), lineno=312, col_offset=8)], Call(Name('MockStateSpec', Load(), lineno=312, col_offset=20), [], [], Name('states_even', Load(), lineno=312, col_offset=35), None, lineno=312, col_offset=20), lineno=312, col_offset=8), Expr(Call(Name('test_it', Load(), lineno=313, col_offset=8), [Name('statespec', Load(), lineno=313, col_offset=16), Str('val', lineno=313, col_offset=27), Str('val', lineno=313, col_offset=34), Name('states_even', Load(), lineno=313, col_offset=41)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Expr(Call(Name('test_it', Load(), lineno=314, col_offset=8), [Name('statespec', Load(), lineno=314, col_offset=16), Call(Name('MockTclObj', Load(), lineno=314, col_offset=27), [Str('val', lineno=314, col_offset=38)], [], None, None, lineno=314, col_offset=27), Str('val', lineno=314, col_offset=46), Name('states_even', Load(), lineno=314, col_offset=53)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Assign([Name('states_odd', Store(), lineno=316, col_offset=8)], Call(Name('tuple', Load(), lineno=316, col_offset=21), [GeneratorExp(BinOp(Str('state%d', lineno=316, col_offset=27), Mod(), Name('i', Load(), lineno=316, col_offset=39), lineno=316, col_offset=27), [comprehension(Name('i', Store(), lineno=316, col_offset=45), Call(Name('range', Load(), lineno=316, col_offset=50), [Num(5, lineno=316, col_offset=56)], [], None, None, lineno=316, col_offset=50), [])], lineno=316, col_offset=27)], [], None, None, lineno=316, col_offset=21), lineno=316, col_offset=8), Assign([Name('statespec', Store(), lineno=317, col_offset=8)], Call(Name('MockStateSpec', Load(), lineno=317, col_offset=20), [], [], Name('states_odd', Load(), lineno=317, col_offset=35), None, lineno=317, col_offset=20), lineno=317, col_offset=8), Expr(Call(Name('test_it', Load(), lineno=318, col_offset=8), [Name('statespec', Load(), lineno=318, col_offset=16), Str('val', lineno=318, col_offset=27), Str('val', lineno=318, col_offset=34), Name('states_odd', Load(), lineno=318, col_offset=41)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8), Expr(Call(Name('test_it', Load(), lineno=320, col_offset=8), [Tuple([Str('a', lineno=320, col_offset=17), Str('b', lineno=320, col_offset=22), Str('c', lineno=320, col_offset=27)], Load(), lineno=320, col_offset=17), Call(Name('MockTclObj', Load(), lineno=320, col_offset=33), [Str('val', lineno=320, col_offset=44)], [], None, None, lineno=320, col_offset=33), Str('val', lineno=320, col_offset=52), Tuple([Str('a', lineno=320, col_offset=60), Str('b', lineno=320, col_offset=65), Str('c', lineno=320, col_offset=70)], Load(), lineno=320, col_offset=60)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8)], [], lineno=306, col_offset=4), FunctionDef('test_list_from_layouttuple', arguments([Name('self', Param(), lineno=323, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'assertFalse', Load(), lineno=325, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=325, col_offset=25), '_list_from_layouttuple', Load(), lineno=325, col_offset=25), [Tuple([], Load(), lineno=325, col_offset=52)], [], None, None, lineno=325, col_offset=25)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=8), 'assertEqual', Load(), lineno=328, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=328, col_offset=25), '_list_from_layouttuple', Load(), lineno=328, col_offset=25), [Tuple([Str('name', lineno=328, col_offset=53)], Load(), lineno=328, col_offset=53)], [], None, None, lineno=328, col_offset=25), List([Tuple([Str('name', lineno=329, col_offset=14), Dict([], [], lineno=329, col_offset=22)], Load(), lineno=329, col_offset=14)], Load(), lineno=329, col_offset=12)], [], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8), Assign([Name('sample_ltuple', Store(), lineno=332, col_offset=8)], Tuple([Str('name', lineno=332, col_offset=25), Str('-option', lineno=332, col_offset=33), Str('value', lineno=332, col_offset=44)], Load(), lineno=332, col_offset=25), lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=8), 'assertEqual', Load(), lineno=333, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=333, col_offset=25), '_list_from_layouttuple', Load(), lineno=333, col_offset=25), [Name('sample_ltuple', Load(), lineno=333, col_offset=52)], [], None, None, lineno=333, col_offset=25), List([Tuple([Str('name', lineno=334, col_offset=14), Dict([Str('option', lineno=334, col_offset=23)], [Str('value', lineno=334, col_offset=33)], lineno=334, col_offset=22)], Load(), lineno=334, col_offset=14)], Load(), lineno=334, col_offset=12)], [], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertEqual', Load(), lineno=337, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=337, col_offset=25), '_list_from_layouttuple', Load(), lineno=337, col_offset=25), [Tuple([Str('something', lineno=338, col_offset=13), Str('-children', lineno=338, col_offset=26), Tuple([], Load(), lineno=338, col_offset=39)], Load(), lineno=338, col_offset=13)], [], None, None, lineno=337, col_offset=25), List([Tuple([Str('something', lineno=339, col_offset=14), Dict([Str('children', lineno=339, col_offset=28)], [List([], Load(), lineno=339, col_offset=40)], lineno=339, col_offset=27)], Load(), lineno=339, col_offset=14)], Load(), lineno=339, col_offset=12)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8), Assign([Name('ltuple', Store(), lineno=343, col_offset=8)], Tuple([Str('name', lineno=344, col_offset=12), Str('-option', lineno=344, col_offset=20), Str('niceone', lineno=344, col_offset=31), Str('-children', lineno=344, col_offset=42), Tuple([Str('otherone', lineno=345, col_offset=17), Str('-children', lineno=345, col_offset=29), Tuple([Str('child', lineno=346, col_offset=21)], Load(), lineno=346, col_offset=21), Str('-otheropt', lineno=346, col_offset=34), Str('othervalue', lineno=346, col_offset=47)], Load(), lineno=345, col_offset=17)], Load(), lineno=344, col_offset=12), lineno=343, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=8), 'assertEqual', Load(), lineno=350, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=350, col_offset=25), '_list_from_layouttuple', Load(), lineno=350, col_offset=25), [Name('ltuple', Load(), lineno=350, col_offset=52)], [], None, None, lineno=350, col_offset=25), List([Tuple([Str('name', lineno=351, col_offset=14), Dict([Str('option', lineno=351, col_offset=23), Str('children', lineno=351, col_offset=44)], [Str('niceone', lineno=351, col_offset=33), List([Tuple([Str('otherone', lineno=352, col_offset=18), Dict([Str('otheropt', lineno=352, col_offset=31), Str('children', lineno=352, col_offset=57)], [Str('othervalue', lineno=352, col_offset=43), List([Tuple([Str('child', lineno=353, col_offset=22), Dict([], [], lineno=353, col_offset=31)], Load(), lineno=353, col_offset=22)], Load(), lineno=353, col_offset=20)], lineno=352, col_offset=30)], Load(), lineno=352, col_offset=18)], Load(), lineno=352, col_offset=16)], lineno=351, col_offset=22)], Load(), lineno=351, col_offset=14)], Load(), lineno=351, col_offset=12)], [], None, None, lineno=350, col_offset=8), lineno=350, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertRaises', Load(), lineno=359, col_offset=8), [Name('ValueError', Load(), lineno=359, col_offset=26), Attribute(Name('ttk', Load(), lineno=359, col_offset=38), '_list_from_layouttuple', Load(), lineno=359, col_offset=38), Tuple([Str('name', lineno=360, col_offset=13), Str('no_minus', lineno=360, col_offset=21)], Load(), lineno=360, col_offset=13)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertRaises', Load(), lineno=361, col_offset=8), [Name('ValueError', Load(), lineno=361, col_offset=26), Attribute(Name('ttk', Load(), lineno=361, col_offset=38), '_list_from_layouttuple', Load(), lineno=361, col_offset=38), Tuple([Str('name', lineno=362, col_offset=13), Str('no_minus', lineno=362, col_offset=21), Str('value', lineno=362, col_offset=33)], Load(), lineno=362, col_offset=13)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'assertRaises', Load(), lineno=363, col_offset=8), [Name('ValueError', Load(), lineno=363, col_offset=26), Attribute(Name('ttk', Load(), lineno=363, col_offset=38), '_list_from_layouttuple', Load(), lineno=363, col_offset=38), Tuple([Str('something', lineno=364, col_offset=13), Str('-children', lineno=364, col_offset=26)], Load(), lineno=364, col_offset=13)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertRaises', Load(), lineno=365, col_offset=8), [Name('ValueError', Load(), lineno=365, col_offset=26), Attribute(Name('ttk', Load(), lineno=365, col_offset=38), '_list_from_layouttuple', Load(), lineno=365, col_offset=38), Tuple([Str('something', lineno=366, col_offset=13), Str('-children', lineno=366, col_offset=26), Str('value', lineno=366, col_offset=39)], Load(), lineno=366, col_offset=13)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8)], [], lineno=323, col_offset=4), FunctionDef('test_val_or_dict', arguments([Name('self', Param(), lineno=369, col_offset=25)], None, None, []), [FunctionDef('func', arguments([Name('opt', Param(), lineno=370, col_offset=17), Name('val', Param(), lineno=370, col_offset=22)], None, None, [Name('None', Load(), lineno=370, col_offset=26)]), [If(Compare(Name('val', Load(), lineno=371, col_offset=15), [Is()], [Name('None', Load(), lineno=371, col_offset=22)], lineno=371, col_offset=15), [Return(Str('test val', lineno=372, col_offset=23), lineno=372, col_offset=16)], [], lineno=371, col_offset=12), Return(Tuple([Name('opt', Load(), lineno=373, col_offset=20), Name('val', Load(), lineno=373, col_offset=25)], Load(), lineno=373, col_offset=20), lineno=373, col_offset=12)], [], lineno=370, col_offset=8), Assign([Name('options', Store(), lineno=375, col_offset=8)], Dict([Str('test', lineno=375, col_offset=19)], [Name('None', Load(), lineno=375, col_offset=27)], lineno=375, col_offset=18), lineno=375, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertEqual', Load(), lineno=376, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=376, col_offset=25), '_val_or_dict', Load(), lineno=376, col_offset=25), [Name('options', Load(), lineno=376, col_offset=42), Name('func', Load(), lineno=376, col_offset=51)], [], None, None, lineno=376, col_offset=25), Str('test val', lineno=376, col_offset=58)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8), Assign([Name('options', Store(), lineno=378, col_offset=8)], Dict([Str('test', lineno=378, col_offset=19)], [Num(3, lineno=378, col_offset=27)], lineno=378, col_offset=18), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertEqual', Load(), lineno=379, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=379, col_offset=25), '_val_or_dict', Load(), lineno=379, col_offset=25), [Name('options', Load(), lineno=379, col_offset=42), Name('func', Load(), lineno=379, col_offset=51)], [], None, None, lineno=379, col_offset=25), Name('options', Load(), lineno=379, col_offset=58)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8)], [], lineno=369, col_offset=4), FunctionDef('test_convert_stringval', arguments([Name('self', Param(), lineno=382, col_offset=31)], None, None, []), [Assign([Name('tests', Store(), lineno=383, col_offset=8)], Tuple([Tuple([Num(0, lineno=384, col_offset=13), Num(0, lineno=384, col_offset=16)], Load(), lineno=384, col_offset=13), Tuple([Str('09', lineno=384, col_offset=21), Num(9, lineno=384, col_offset=27)], Load(), lineno=384, col_offset=21), Tuple([Str('a', lineno=384, col_offset=32), Str('a', lineno=384, col_offset=37)], Load(), lineno=384, col_offset=32), Tuple([Str(u'\xe1\xda', lineno=384, col_offset=44), Str(u'\xe1\xda', lineno=384, col_offset=53)], Load(), lineno=384, col_offset=44), Tuple([List([], Load(), lineno=384, col_offset=64), Str('[]', lineno=384, col_offset=68)], Load(), lineno=384, col_offset=64), Tuple([Name('None', Load(), lineno=385, col_offset=13), Str('None', lineno=385, col_offset=19)], Load(), lineno=385, col_offset=13)], Load(), lineno=384, col_offset=12), lineno=383, col_offset=8), For(Tuple([Name('orig', Store(), lineno=387, col_offset=12), Name('expected', Store(), lineno=387, col_offset=18)], Store(), lineno=387, col_offset=12), Name('tests', Load(), lineno=387, col_offset=30), [Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=12), 'assertEqual', Load(), lineno=388, col_offset=12), [Call(Attribute(Name('ttk', Load(), lineno=388, col_offset=29), '_convert_stringval', Load(), lineno=388, col_offset=29), [Name('orig', Load(), lineno=388, col_offset=52)], [], None, None, lineno=388, col_offset=29), Name('expected', Load(), lineno=388, col_offset=59)], [], None, None, lineno=388, col_offset=12), lineno=388, col_offset=12)], [], lineno=387, col_offset=8), If(Compare(Call(Attribute(Name('sys', Load(), lineno=390, col_offset=11), 'getdefaultencoding', Load(), lineno=390, col_offset=11), [], [], None, None, lineno=390, col_offset=11), [Eq()], [Str('ascii', lineno=390, col_offset=39)], lineno=390, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=12), 'assertRaises', Load(), lineno=391, col_offset=12), [Name('UnicodeDecodeError', Load(), lineno=391, col_offset=30), Attribute(Name('ttk', Load(), lineno=392, col_offset=16), '_convert_stringval', Load(), lineno=392, col_offset=16), Str('\xc3\xa1', lineno=392, col_offset=40)], [], None, None, lineno=391, col_offset=12), lineno=391, col_offset=12)], [], lineno=390, col_offset=8)], [], lineno=382, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('TclObjsToPyTest', [Attribute(Name('unittest', Load(), lineno=395, col_offset=22), 'TestCase', Load(), lineno=395, col_offset=22)], [FunctionDef('test_unicode', arguments([Name('self', Param(), lineno=397, col_offset=21)], None, None, []), [Assign([Name('adict', Store(), lineno=398, col_offset=8)], Dict([Str('opt', lineno=398, col_offset=17)], [Str(u'v\xe4l\xfa\xe8', lineno=398, col_offset=24)], lineno=398, col_offset=16), lineno=398, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=8), 'assertEqual', Load(), lineno=399, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=399, col_offset=25), 'tclobjs_to_py', Load(), lineno=399, col_offset=25), [Name('adict', Load(), lineno=399, col_offset=43)], [], None, None, lineno=399, col_offset=25), Dict([Str('opt', lineno=399, col_offset=52)], [Str(u'v\xe4l\xfa\xe8', lineno=399, col_offset=59)], lineno=399, col_offset=51)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8), Assign([Subscript(Name('adict', Load(), lineno=401, col_offset=8), Index(Str('opt', lineno=401, col_offset=14)), Store(), lineno=401, col_offset=8)], Call(Name('MockTclObj', Load(), lineno=401, col_offset=23), [Subscript(Name('adict', Load(), lineno=401, col_offset=34), Index(Str('opt', lineno=401, col_offset=40)), Load(), lineno=401, col_offset=34)], [], None, None, lineno=401, col_offset=23), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertEqual', Load(), lineno=402, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=402, col_offset=25), 'tclobjs_to_py', Load(), lineno=402, col_offset=25), [Name('adict', Load(), lineno=402, col_offset=43)], [], None, None, lineno=402, col_offset=25), Dict([Str('opt', lineno=402, col_offset=52)], [Str(u'v\xe4l\xfa\xe8', lineno=402, col_offset=59)], lineno=402, col_offset=51)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8)], [], lineno=397, col_offset=4), FunctionDef('test_multivalues', arguments([Name('self', Param(), lineno=404, col_offset=25)], None, None, []), [Assign([Name('adict', Store(), lineno=405, col_offset=8)], Dict([Str('opt', lineno=405, col_offset=17)], [List([Num(1, lineno=405, col_offset=25), Num(2, lineno=405, col_offset=28), Num(3, lineno=405, col_offset=31), Num(4, lineno=405, col_offset=34)], Load(), lineno=405, col_offset=24)], lineno=405, col_offset=16), lineno=405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertEqual', Load(), lineno=406, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=406, col_offset=25), 'tclobjs_to_py', Load(), lineno=406, col_offset=25), [Name('adict', Load(), lineno=406, col_offset=43)], [], None, None, lineno=406, col_offset=25), Dict([Str('opt', lineno=406, col_offset=52)], [List([Num(1, lineno=406, col_offset=60), Num(2, lineno=406, col_offset=63), Num(3, lineno=406, col_offset=66), Num(4, lineno=406, col_offset=69)], Load(), lineno=406, col_offset=59)], lineno=406, col_offset=51)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Assign([Subscript(Name('adict', Load(), lineno=408, col_offset=8), Index(Str('opt', lineno=408, col_offset=14)), Store(), lineno=408, col_offset=8)], List([Num(1, lineno=408, col_offset=24), Str('xm', lineno=408, col_offset=27), Num(3, lineno=408, col_offset=33)], Load(), lineno=408, col_offset=23), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertEqual', Load(), lineno=409, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=409, col_offset=25), 'tclobjs_to_py', Load(), lineno=409, col_offset=25), [Name('adict', Load(), lineno=409, col_offset=43)], [], None, None, lineno=409, col_offset=25), Dict([Str('opt', lineno=409, col_offset=52)], [List([Num(1, lineno=409, col_offset=60), Str('xm', lineno=409, col_offset=63), Num(3, lineno=409, col_offset=69)], Load(), lineno=409, col_offset=59)], lineno=409, col_offset=51)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Assign([Subscript(Name('adict', Load(), lineno=411, col_offset=8), Index(Str('opt', lineno=411, col_offset=14)), Store(), lineno=411, col_offset=8)], Tuple([Call(Name('MockStateSpec', Load(), lineno=411, col_offset=24), [Str('a', lineno=411, col_offset=38), Str('b', lineno=411, col_offset=43)], [], None, None, lineno=411, col_offset=24), Str(u'v\xe1l\u0169\xe8', lineno=411, col_offset=49)], Load(), lineno=411, col_offset=24), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertEqual', Load(), lineno=412, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=412, col_offset=25), 'tclobjs_to_py', Load(), lineno=412, col_offset=25), [Name('adict', Load(), lineno=412, col_offset=43)], [], None, None, lineno=412, col_offset=25), Dict([Str('opt', lineno=413, col_offset=13)], [List([Tuple([Str('a', lineno=413, col_offset=22), Str('b', lineno=413, col_offset=27), Str(u'v\xe1l\u0169\xe8', lineno=413, col_offset=32)], Load(), lineno=413, col_offset=22)], Load(), lineno=413, col_offset=20)], lineno=413, col_offset=12)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertEqual', Load(), lineno=415, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=415, col_offset=25), 'tclobjs_to_py', Load(), lineno=415, col_offset=25), [Dict([Str('x', lineno=415, col_offset=44)], [List([Str('y z', lineno=415, col_offset=50)], Load(), lineno=415, col_offset=49)], lineno=415, col_offset=43)], [], None, None, lineno=415, col_offset=25), Dict([Str('x', lineno=416, col_offset=13)], [List([Str('y z', lineno=416, col_offset=19)], Load(), lineno=416, col_offset=18)], lineno=416, col_offset=12)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8)], [], lineno=404, col_offset=4), FunctionDef('test_nosplit', arguments([Name('self', Param(), lineno=418, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=8), 'assertEqual', Load(), lineno=419, col_offset=8), [Call(Attribute(Name('ttk', Load(), lineno=419, col_offset=25), 'tclobjs_to_py', Load(), lineno=419, col_offset=25), [Dict([Str('text', lineno=419, col_offset=44)], [Str('some text', lineno=419, col_offset=52)], lineno=419, col_offset=43)], [], None, None, lineno=419, col_offset=25), Dict([Str('text', lineno=420, col_offset=13)], [Str('some text', lineno=420, col_offset=21)], lineno=420, col_offset=12)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8)], [], lineno=418, col_offset=4)], [], lineno=395, col_offset=0), Assign([Name('tests_nogui', Store(), lineno=422, col_offset=0)], Tuple([Name('InternalFunctionsTest', Load(), lineno=422, col_offset=15), Name('TclObjsToPyTest', Load(), lineno=422, col_offset=38)], Load(), lineno=422, col_offset=15), lineno=422, col_offset=0), If(Compare(Name('__name__', Load(), lineno=424, col_offset=3), [Eq()], [Str('__main__', lineno=424, col_offset=15)], lineno=424, col_offset=3), [ImportFrom('test.test_support', [alias('run_unittest', None)], 0, lineno=425, col_offset=4), Expr(Call(Name('run_unittest', Load(), lineno=426, col_offset=4), [], [], Name('tests_nogui', Load(), lineno=426, col_offset=18), None, lineno=426, col_offset=4), lineno=426, col_offset=4)], [], lineno=424, col_offset=0)])
