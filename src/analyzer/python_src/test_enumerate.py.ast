Module([Import([alias('unittest', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), ClassDef('G', [], [Expr(Str('Sequence using __getitem__', lineno=7, col_offset=4), lineno=7, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=8, col_offset=17), Name('seqn', Param(), lineno=8, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=9, col_offset=8), 'seqn', Store(), lineno=9, col_offset=8)], Name('seqn', Load(), lineno=9, col_offset=20), lineno=9, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=10, col_offset=20), Name('i', Param(), lineno=10, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=11, col_offset=15), 'seqn', Load(), lineno=11, col_offset=15), Index(Name('i', Load(), lineno=11, col_offset=25)), Load(), lineno=11, col_offset=15), lineno=11, col_offset=8)], [], lineno=10, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('I', [], [Expr(Str('Sequence using iterator protocol', lineno=14, col_offset=4), lineno=14, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=15, col_offset=17), Name('seqn', Param(), lineno=15, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=16, col_offset=8), 'seqn', Store(), lineno=16, col_offset=8)], Name('seqn', Load(), lineno=16, col_offset=20), lineno=16, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=17, col_offset=8), 'i', Store(), lineno=17, col_offset=8)], Num(0, lineno=17, col_offset=17), lineno=17, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=18, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=19, col_offset=15), lineno=19, col_offset=8)], [], lineno=18, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=20, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=21, col_offset=11), 'i', Load(), lineno=21, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=21, col_offset=21), [Attribute(Name('self', Load(), lineno=21, col_offset=25), 'seqn', Load(), lineno=21, col_offset=25)], [], None, None, lineno=21, col_offset=21)], lineno=21, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=21, col_offset=43), None, None, lineno=21, col_offset=37)], [], lineno=21, col_offset=8), Assign([Name('v', Store(), lineno=22, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=22, col_offset=12), 'seqn', Load(), lineno=22, col_offset=12), Index(Attribute(Name('self', Load(), lineno=22, col_offset=22), 'i', Load(), lineno=22, col_offset=22)), Load(), lineno=22, col_offset=12), lineno=22, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'i', Store(), lineno=23, col_offset=8), Add(), Num(1, lineno=23, col_offset=18), lineno=23, col_offset=8), Return(Name('v', Load(), lineno=24, col_offset=15), lineno=24, col_offset=8)], [], lineno=20, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('Ig', [], [Expr(Str('Sequence using iterator protocol defined with a generator', lineno=27, col_offset=4), lineno=27, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=28, col_offset=17), Name('seqn', Param(), lineno=28, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'seqn', Store(), lineno=29, col_offset=8)], Name('seqn', Load(), lineno=29, col_offset=20), lineno=29, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=30, col_offset=8), 'i', Store(), lineno=30, col_offset=8)], Num(0, lineno=30, col_offset=17), lineno=30, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=31, col_offset=17)], None, None, []), [For(Name('val', Store(), lineno=32, col_offset=12), Attribute(Name('self', Load(), lineno=32, col_offset=19), 'seqn', Load(), lineno=32, col_offset=19), [Expr(Yield(Name('val', Load(), lineno=33, col_offset=18), lineno=33, col_offset=12), lineno=33, col_offset=12)], [], lineno=32, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('X', [], [Expr(Str('Missing __getitem__ and __iter__', lineno=36, col_offset=4), lineno=36, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=37, col_offset=17), Name('seqn', Param(), lineno=37, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'seqn', Store(), lineno=38, col_offset=8)], Name('seqn', Load(), lineno=38, col_offset=20), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=8), 'i', Store(), lineno=39, col_offset=8)], Num(0, lineno=39, col_offset=17), lineno=39, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=40, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=41, col_offset=11), 'i', Load(), lineno=41, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=41, col_offset=21), [Attribute(Name('self', Load(), lineno=41, col_offset=25), 'seqn', Load(), lineno=41, col_offset=25)], [], None, None, lineno=41, col_offset=21)], lineno=41, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=41, col_offset=43), None, None, lineno=41, col_offset=37)], [], lineno=41, col_offset=8), Assign([Name('v', Store(), lineno=42, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'seqn', Load(), lineno=42, col_offset=12), Index(Attribute(Name('self', Load(), lineno=42, col_offset=22), 'i', Load(), lineno=42, col_offset=22)), Load(), lineno=42, col_offset=12), lineno=42, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'i', Store(), lineno=43, col_offset=8), Add(), Num(1, lineno=43, col_offset=18), lineno=43, col_offset=8), Return(Name('v', Load(), lineno=44, col_offset=15), lineno=44, col_offset=8)], [], lineno=40, col_offset=4)], [], lineno=35, col_offset=0), ClassDef('E', [], [Expr(Str('Test propagation of exceptions', lineno=47, col_offset=4), lineno=47, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=48, col_offset=17), Name('seqn', Param(), lineno=48, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=49, col_offset=8), 'seqn', Store(), lineno=49, col_offset=8)], Name('seqn', Load(), lineno=49, col_offset=20), lineno=49, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=50, col_offset=8), 'i', Store(), lineno=50, col_offset=8)], Num(0, lineno=50, col_offset=17), lineno=50, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=51, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=53, col_offset=13)], None, None, []), [Expr(BinOp(Num(3, lineno=54, col_offset=8), FloorDiv(), Num(0, lineno=54, col_offset=13), lineno=54, col_offset=8), lineno=54, col_offset=8)], [], lineno=53, col_offset=4)], [], lineno=46, col_offset=0), ClassDef('N', [], [Expr(Str('Iterator missing next()', lineno=57, col_offset=4), lineno=57, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=58, col_offset=17), Name('seqn', Param(), lineno=58, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), 'seqn', Store(), lineno=59, col_offset=8)], Name('seqn', Load(), lineno=59, col_offset=20), lineno=59, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'i', Store(), lineno=60, col_offset=8)], Num(0, lineno=60, col_offset=17), lineno=60, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=61, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=62, col_offset=15), lineno=62, col_offset=8)], [], lineno=61, col_offset=4)], [], lineno=56, col_offset=0), ClassDef('EnumerateTestCase', [Attribute(Name('unittest', Load(), lineno=64, col_offset=24), 'TestCase', Load(), lineno=64, col_offset=24)], [Assign([Name('enum', Store(), lineno=66, col_offset=4)], Name('enumerate', Load(), lineno=66, col_offset=11), lineno=66, col_offset=4), Assign([Tuple([Name('seq', Store(), lineno=67, col_offset=4), Name('res', Store(), lineno=67, col_offset=9)], Store(), lineno=67, col_offset=4)], Tuple([Str('abc', lineno=67, col_offset=15), List([Tuple([Num(0, lineno=67, col_offset=24), Str('a', lineno=67, col_offset=26)], Load(), lineno=67, col_offset=24), Tuple([Num(1, lineno=67, col_offset=33), Str('b', lineno=67, col_offset=35)], Load(), lineno=67, col_offset=33), Tuple([Num(2, lineno=67, col_offset=42), Str('c', lineno=67, col_offset=44)], Load(), lineno=67, col_offset=42)], Load(), lineno=67, col_offset=22)], Load(), lineno=67, col_offset=15), lineno=67, col_offset=4), FunctionDef('test_basicfunction', arguments([Name('self', Param(), lineno=69, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertEqual', Load(), lineno=70, col_offset=8), [Call(Name('type', Load(), lineno=70, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=70, col_offset=30), 'enum', Load(), lineno=70, col_offset=30), [Attribute(Name('self', Load(), lineno=70, col_offset=40), 'seq', Load(), lineno=70, col_offset=40)], [], None, None, lineno=70, col_offset=30)], [], None, None, lineno=70, col_offset=25), Attribute(Name('self', Load(), lineno=70, col_offset=52), 'enum', Load(), lineno=70, col_offset=52)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Name('e', Store(), lineno=71, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'enum', Load(), lineno=71, col_offset=12), [Attribute(Name('self', Load(), lineno=71, col_offset=22), 'seq', Load(), lineno=71, col_offset=22)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Call(Name('iter', Load(), lineno=72, col_offset=25), [Name('e', Load(), lineno=72, col_offset=30)], [], None, None, lineno=72, col_offset=25), Name('e', Load(), lineno=72, col_offset=34)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertEqual', Load(), lineno=73, col_offset=8), [Call(Name('list', Load(), lineno=73, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=73, col_offset=30), 'enum', Load(), lineno=73, col_offset=30), [Attribute(Name('self', Load(), lineno=73, col_offset=40), 'seq', Load(), lineno=73, col_offset=40)], [], None, None, lineno=73, col_offset=30)], [], None, None, lineno=73, col_offset=25), Attribute(Name('self', Load(), lineno=73, col_offset=52), 'res', Load(), lineno=73, col_offset=52)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Expr(Attribute(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'enum', Load(), lineno=74, col_offset=8), '__doc__', Load(), lineno=74, col_offset=8), lineno=74, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('test_getitemseqn', arguments([Name('self', Param(), lineno=76, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'assertEqual', Load(), lineno=77, col_offset=8), [Call(Name('list', Load(), lineno=77, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=77, col_offset=30), 'enum', Load(), lineno=77, col_offset=30), [Call(Name('G', Load(), lineno=77, col_offset=40), [Attribute(Name('self', Load(), lineno=77, col_offset=42), 'seq', Load(), lineno=77, col_offset=42)], [], None, None, lineno=77, col_offset=40)], [], None, None, lineno=77, col_offset=30)], [], None, None, lineno=77, col_offset=25), Attribute(Name('self', Load(), lineno=77, col_offset=55), 'res', Load(), lineno=77, col_offset=55)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Assign([Name('e', Store(), lineno=78, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), 'enum', Load(), lineno=78, col_offset=12), [Call(Name('G', Load(), lineno=78, col_offset=22), [Str('', lineno=78, col_offset=24)], [], None, None, lineno=78, col_offset=22)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertRaises', Load(), lineno=79, col_offset=8), [Name('StopIteration', Load(), lineno=79, col_offset=26), Attribute(Name('e', Load(), lineno=79, col_offset=41), 'next', Load(), lineno=79, col_offset=41)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('test_iteratorseqn', arguments([Name('self', Param(), lineno=81, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertEqual', Load(), lineno=82, col_offset=8), [Call(Name('list', Load(), lineno=82, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=82, col_offset=30), 'enum', Load(), lineno=82, col_offset=30), [Call(Name('I', Load(), lineno=82, col_offset=40), [Attribute(Name('self', Load(), lineno=82, col_offset=42), 'seq', Load(), lineno=82, col_offset=42)], [], None, None, lineno=82, col_offset=40)], [], None, None, lineno=82, col_offset=30)], [], None, None, lineno=82, col_offset=25), Attribute(Name('self', Load(), lineno=82, col_offset=55), 'res', Load(), lineno=82, col_offset=55)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), Assign([Name('e', Store(), lineno=83, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=83, col_offset=12), 'enum', Load(), lineno=83, col_offset=12), [Call(Name('I', Load(), lineno=83, col_offset=22), [Str('', lineno=83, col_offset=24)], [], None, None, lineno=83, col_offset=22)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'assertRaises', Load(), lineno=84, col_offset=8), [Name('StopIteration', Load(), lineno=84, col_offset=26), Attribute(Name('e', Load(), lineno=84, col_offset=41), 'next', Load(), lineno=84, col_offset=41)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8)], [], lineno=81, col_offset=4), FunctionDef('test_iteratorgenerator', arguments([Name('self', Param(), lineno=86, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'assertEqual', Load(), lineno=87, col_offset=8), [Call(Name('list', Load(), lineno=87, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=87, col_offset=30), 'enum', Load(), lineno=87, col_offset=30), [Call(Name('Ig', Load(), lineno=87, col_offset=40), [Attribute(Name('self', Load(), lineno=87, col_offset=43), 'seq', Load(), lineno=87, col_offset=43)], [], None, None, lineno=87, col_offset=40)], [], None, None, lineno=87, col_offset=30)], [], None, None, lineno=87, col_offset=25), Attribute(Name('self', Load(), lineno=87, col_offset=56), 'res', Load(), lineno=87, col_offset=56)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Assign([Name('e', Store(), lineno=88, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=88, col_offset=12), 'enum', Load(), lineno=88, col_offset=12), [Call(Name('Ig', Load(), lineno=88, col_offset=22), [Str('', lineno=88, col_offset=25)], [], None, None, lineno=88, col_offset=22)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertRaises', Load(), lineno=89, col_offset=8), [Name('StopIteration', Load(), lineno=89, col_offset=26), Attribute(Name('e', Load(), lineno=89, col_offset=41), 'next', Load(), lineno=89, col_offset=41)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('test_noniterable', arguments([Name('self', Param(), lineno=91, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertRaises', Load(), lineno=92, col_offset=8), [Name('TypeError', Load(), lineno=92, col_offset=26), Attribute(Name('self', Load(), lineno=92, col_offset=37), 'enum', Load(), lineno=92, col_offset=37), Call(Name('X', Load(), lineno=92, col_offset=48), [Attribute(Name('self', Load(), lineno=92, col_offset=50), 'seq', Load(), lineno=92, col_offset=50)], [], None, None, lineno=92, col_offset=48)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=91, col_offset=4), FunctionDef('test_illformediterable', arguments([Name('self', Param(), lineno=94, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertRaises', Load(), lineno=95, col_offset=8), [Name('TypeError', Load(), lineno=95, col_offset=26), Name('list', Load(), lineno=95, col_offset=37), Call(Attribute(Name('self', Load(), lineno=95, col_offset=43), 'enum', Load(), lineno=95, col_offset=43), [Call(Name('N', Load(), lineno=95, col_offset=53), [Attribute(Name('self', Load(), lineno=95, col_offset=55), 'seq', Load(), lineno=95, col_offset=55)], [], None, None, lineno=95, col_offset=53)], [], None, None, lineno=95, col_offset=43)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('test_exception_propagation', arguments([Name('self', Param(), lineno=97, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'assertRaises', Load(), lineno=98, col_offset=8), [Name('ZeroDivisionError', Load(), lineno=98, col_offset=26), Name('list', Load(), lineno=98, col_offset=45), Call(Attribute(Name('self', Load(), lineno=98, col_offset=51), 'enum', Load(), lineno=98, col_offset=51), [Call(Name('E', Load(), lineno=98, col_offset=61), [Attribute(Name('self', Load(), lineno=98, col_offset=63), 'seq', Load(), lineno=98, col_offset=63)], [], None, None, lineno=98, col_offset=61)], [], None, None, lineno=98, col_offset=51)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=97, col_offset=4), FunctionDef('test_argumentcheck', arguments([Name('self', Param(), lineno=100, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertRaises', Load(), lineno=101, col_offset=8), [Name('TypeError', Load(), lineno=101, col_offset=26), Attribute(Name('self', Load(), lineno=101, col_offset=37), 'enum', Load(), lineno=101, col_offset=37)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertRaises', Load(), lineno=102, col_offset=8), [Name('TypeError', Load(), lineno=102, col_offset=26), Attribute(Name('self', Load(), lineno=102, col_offset=37), 'enum', Load(), lineno=102, col_offset=37), Num(1, lineno=102, col_offset=48)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=8), 'assertRaises', Load(), lineno=103, col_offset=8), [Name('TypeError', Load(), lineno=103, col_offset=26), Attribute(Name('self', Load(), lineno=103, col_offset=37), 'enum', Load(), lineno=103, col_offset=37), Str('abc', lineno=103, col_offset=48), Str('a', lineno=103, col_offset=55)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertRaises', Load(), lineno=104, col_offset=8), [Name('TypeError', Load(), lineno=104, col_offset=26), Attribute(Name('self', Load(), lineno=104, col_offset=37), 'enum', Load(), lineno=104, col_offset=37), Str('abc', lineno=104, col_offset=48), Num(2, lineno=104, col_offset=55), Num(3, lineno=104, col_offset=58)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('test_tuple_reuse', arguments([Name('self', Param(), lineno=107, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertEqual', Load(), lineno=110, col_offset=8), [Call(Name('len', Load(), lineno=110, col_offset=25), [Call(Name('set', Load(), lineno=110, col_offset=29), [Call(Name('map', Load(), lineno=110, col_offset=33), [Name('id', Load(), lineno=110, col_offset=37), Call(Name('list', Load(), lineno=110, col_offset=41), [Call(Name('enumerate', Load(), lineno=110, col_offset=46), [Attribute(Name('self', Load(), lineno=110, col_offset=56), 'seq', Load(), lineno=110, col_offset=56)], [], None, None, lineno=110, col_offset=46)], [], None, None, lineno=110, col_offset=41)], [], None, None, lineno=110, col_offset=33)], [], None, None, lineno=110, col_offset=29)], [], None, None, lineno=110, col_offset=25), Call(Name('len', Load(), lineno=110, col_offset=71), [Attribute(Name('self', Load(), lineno=110, col_offset=75), 'seq', Load(), lineno=110, col_offset=75)], [], None, None, lineno=110, col_offset=71)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertEqual', Load(), lineno=111, col_offset=8), [Call(Name('len', Load(), lineno=111, col_offset=25), [Call(Name('set', Load(), lineno=111, col_offset=29), [Call(Name('map', Load(), lineno=111, col_offset=33), [Name('id', Load(), lineno=111, col_offset=37), Call(Name('enumerate', Load(), lineno=111, col_offset=41), [Attribute(Name('self', Load(), lineno=111, col_offset=51), 'seq', Load(), lineno=111, col_offset=51)], [], None, None, lineno=111, col_offset=41)], [], None, None, lineno=111, col_offset=33)], [], None, None, lineno=111, col_offset=29)], [], None, None, lineno=111, col_offset=25), Call(Name('min', Load(), lineno=111, col_offset=65), [Num(1, lineno=111, col_offset=69), Call(Name('len', Load(), lineno=111, col_offset=71), [Attribute(Name('self', Load(), lineno=111, col_offset=75), 'seq', Load(), lineno=111, col_offset=75)], [], None, None, lineno=111, col_offset=71)], [], None, None, lineno=111, col_offset=65)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [Attribute(Name('test_support', Load(), lineno=106, col_offset=5), 'cpython_only', Load(), lineno=106, col_offset=5)], lineno=106, col_offset=4)], [], lineno=64, col_offset=0), ClassDef('MyEnum', [Name('enumerate', Load(), lineno=113, col_offset=13)], [Pass( lineno=114, col_offset=4)], [], lineno=113, col_offset=0), ClassDef('SubclassTestCase', [Name('EnumerateTestCase', Load(), lineno=116, col_offset=23)], [Assign([Name('enum', Store(), lineno=118, col_offset=4)], Name('MyEnum', Load(), lineno=118, col_offset=11), lineno=118, col_offset=4)], [], lineno=116, col_offset=0), ClassDef('TestEmpty', [Name('EnumerateTestCase', Load(), lineno=120, col_offset=16)], [Assign([Tuple([Name('seq', Store(), lineno=122, col_offset=4), Name('res', Store(), lineno=122, col_offset=9)], Store(), lineno=122, col_offset=4)], Tuple([Str('', lineno=122, col_offset=15), List([], Load(), lineno=122, col_offset=19)], Load(), lineno=122, col_offset=15), lineno=122, col_offset=4)], [], lineno=120, col_offset=0), ClassDef('TestBig', [Name('EnumerateTestCase', Load(), lineno=124, col_offset=14)], [Assign([Name('seq', Store(), lineno=126, col_offset=4)], Call(Name('range', Load(), lineno=126, col_offset=10), [Num(10, lineno=126, col_offset=16), Num(20000, lineno=126, col_offset=19), Num(2, lineno=126, col_offset=25)], [], None, None, lineno=126, col_offset=10), lineno=126, col_offset=4), Assign([Name('res', Store(), lineno=127, col_offset=4)], Call(Name('zip', Load(), lineno=127, col_offset=10), [Call(Name('range', Load(), lineno=127, col_offset=14), [Num(20000, lineno=127, col_offset=20)], [], None, None, lineno=127, col_offset=14), Name('seq', Load(), lineno=127, col_offset=28)], [], None, None, lineno=127, col_offset=10), lineno=127, col_offset=4)], [], lineno=124, col_offset=0), ClassDef('TestReversed', [Attribute(Name('unittest', Load(), lineno=129, col_offset=19), 'TestCase', Load(), lineno=129, col_offset=19)], [FunctionDef('test_simple', arguments([Name('self', Param(), lineno=131, col_offset=20)], None, None, []), [ClassDef('A', [], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=133, col_offset=28), Name('i', Param(), lineno=133, col_offset=34)], None, None, []), [If(Compare(Name('i', Load(), lineno=134, col_offset=19), [Lt()], [Num(5, lineno=134, col_offset=23)], lineno=134, col_offset=19), [Return(Call(Name('str', Load(), lineno=135, col_offset=27), [Name('i', Load(), lineno=135, col_offset=31)], [], None, None, lineno=135, col_offset=27), lineno=135, col_offset=20)], [], lineno=134, col_offset=16), Raise(Name('StopIteration', Load(), lineno=136, col_offset=22), None, None, lineno=136, col_offset=16)], [], lineno=133, col_offset=12), FunctionDef('__len__', arguments([Name('self', Param(), lineno=137, col_offset=24)], None, None, []), [Return(Num(5, lineno=138, col_offset=23), lineno=138, col_offset=16)], [], lineno=137, col_offset=12)], [], lineno=132, col_offset=8), For(Name('data', Store(), lineno=139, col_offset=12), Tuple([Str('abc', lineno=139, col_offset=20), Call(Name('range', Load(), lineno=139, col_offset=27), [Num(5, lineno=139, col_offset=33)], [], None, None, lineno=139, col_offset=27), Call(Name('tuple', Load(), lineno=139, col_offset=37), [Call(Name('enumerate', Load(), lineno=139, col_offset=43), [Str('abc', lineno=139, col_offset=53)], [], None, None, lineno=139, col_offset=43)], [], None, None, lineno=139, col_offset=37), Call(Name('A', Load(), lineno=139, col_offset=62), [], [], None, None, lineno=139, col_offset=62), Call(Name('xrange', Load(), lineno=139, col_offset=67), [Num(1, lineno=139, col_offset=74), Num(17, lineno=139, col_offset=76), Num(5, lineno=139, col_offset=79)], [], None, None, lineno=139, col_offset=67)], Load(), lineno=139, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=12), 'assertEqual', Load(), lineno=140, col_offset=12), [Subscript(Call(Name('list', Load(), lineno=140, col_offset=29), [Name('data', Load(), lineno=140, col_offset=34)], [], None, None, lineno=140, col_offset=29), Slice(None, None, Num(-1, lineno=140, col_offset=43)), Load(), lineno=140, col_offset=29), Call(Name('list', Load(), lineno=140, col_offset=47), [Call(Name('reversed', Load(), lineno=140, col_offset=52), [Name('data', Load(), lineno=140, col_offset=61)], [], None, None, lineno=140, col_offset=52)], [], None, None, lineno=140, col_offset=47)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=12)], [], lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'assertRaises', Load(), lineno=141, col_offset=8), [Name('TypeError', Load(), lineno=141, col_offset=26), Name('reversed', Load(), lineno=141, col_offset=37), Dict([], [], lineno=141, col_offset=47)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertRaises', Load(), lineno=143, col_offset=8), [Name('TypeError', Load(), lineno=143, col_offset=26), Name('reversed', Load(), lineno=143, col_offset=37), List([], Load(), lineno=143, col_offset=47)], [keyword('a', Num(1, lineno=143, col_offset=53))], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('test_classic_class', arguments([Name('self', Param(), lineno=145, col_offset=27)], None, None, []), [ClassDef('A', [], [FunctionDef('__reversed__', arguments([Name('self', Param(), lineno=147, col_offset=29)], None, None, []), [Return(List([Num(2, lineno=148, col_offset=24), Num(1, lineno=148, col_offset=27)], Load(), lineno=148, col_offset=23), lineno=148, col_offset=16)], [], lineno=147, col_offset=12)], [], lineno=146, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Call(Name('list', Load(), lineno=149, col_offset=25), [Call(Name('reversed', Load(), lineno=149, col_offset=30), [Call(Name('A', Load(), lineno=149, col_offset=39), [], [], None, None, lineno=149, col_offset=39)], [], None, None, lineno=149, col_offset=30)], [], None, None, lineno=149, col_offset=25), List([Num(2, lineno=149, col_offset=47), Num(1, lineno=149, col_offset=50)], Load(), lineno=149, col_offset=46)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('test_xrange_optimization', arguments([Name('self', Param(), lineno=151, col_offset=33)], None, None, []), [Assign([Name('x', Store(), lineno=152, col_offset=8)], Call(Name('xrange', Load(), lineno=152, col_offset=12), [Num(1, lineno=152, col_offset=19)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'assertEqual', Load(), lineno=153, col_offset=8), [Call(Name('type', Load(), lineno=153, col_offset=25), [Call(Name('reversed', Load(), lineno=153, col_offset=30), [Name('x', Load(), lineno=153, col_offset=39)], [], None, None, lineno=153, col_offset=30)], [], None, None, lineno=153, col_offset=25), Call(Name('type', Load(), lineno=153, col_offset=44), [Call(Name('iter', Load(), lineno=153, col_offset=49), [Name('x', Load(), lineno=153, col_offset=54)], [], None, None, lineno=153, col_offset=49)], [], None, None, lineno=153, col_offset=44)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('test_len', arguments([Name('self', Param(), lineno=156, col_offset=17)], None, None, []), [ImportFrom('test.test_iterlen', [alias('len', None)], 0, lineno=158, col_offset=8), For(Name('s', Store(), lineno=159, col_offset=12), Tuple([Str('hello', lineno=159, col_offset=18), Call(Name('tuple', Load(), lineno=159, col_offset=27), [Str('hello', lineno=159, col_offset=33)], [], None, None, lineno=159, col_offset=27), Call(Name('list', Load(), lineno=159, col_offset=43), [Str('hello', lineno=159, col_offset=48)], [], None, None, lineno=159, col_offset=43), Call(Name('xrange', Load(), lineno=159, col_offset=58), [Num(5, lineno=159, col_offset=65)], [], None, None, lineno=159, col_offset=58)], Load(), lineno=159, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=12), 'assertEqual', Load(), lineno=160, col_offset=12), [Call(Name('len', Load(), lineno=160, col_offset=29), [Call(Name('reversed', Load(), lineno=160, col_offset=33), [Name('s', Load(), lineno=160, col_offset=42)], [], None, None, lineno=160, col_offset=33)], [], None, None, lineno=160, col_offset=29), Call(Name('len', Load(), lineno=160, col_offset=47), [Name('s', Load(), lineno=160, col_offset=51)], [], None, None, lineno=160, col_offset=47)], [], None, None, lineno=160, col_offset=12), lineno=160, col_offset=12), Assign([Name('r', Store(), lineno=161, col_offset=12)], Call(Name('reversed', Load(), lineno=161, col_offset=16), [Name('s', Load(), lineno=161, col_offset=25)], [], None, None, lineno=161, col_offset=16), lineno=161, col_offset=12), Expr(Call(Name('list', Load(), lineno=162, col_offset=12), [Name('r', Load(), lineno=162, col_offset=17)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=12), 'assertEqual', Load(), lineno=163, col_offset=12), [Call(Name('len', Load(), lineno=163, col_offset=29), [Name('r', Load(), lineno=163, col_offset=33)], [], None, None, lineno=163, col_offset=29), Num(0, lineno=163, col_offset=37)], [], None, None, lineno=163, col_offset=12), lineno=163, col_offset=12)], [], lineno=159, col_offset=8), ClassDef('SeqWithWeirdLen', [], [Assign([Name('called', Store(), lineno=165, col_offset=12)], Name('False', Load(), lineno=165, col_offset=21), lineno=165, col_offset=12), FunctionDef('__len__', arguments([Name('self', Param(), lineno=166, col_offset=24)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=167, col_offset=23), 'called', Load(), lineno=167, col_offset=23), lineno=167, col_offset=19), [Assign([Attribute(Name('self', Load(), lineno=168, col_offset=20), 'called', Store(), lineno=168, col_offset=20)], Name('True', Load(), lineno=168, col_offset=34), lineno=168, col_offset=20), Return(Num(10, lineno=169, col_offset=27), lineno=169, col_offset=20)], [], lineno=167, col_offset=16), Raise(Name('ZeroDivisionError', Load(), lineno=170, col_offset=22), None, None, lineno=170, col_offset=16)], [], lineno=166, col_offset=12), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=171, col_offset=28), Name('index', Param(), lineno=171, col_offset=34)], None, None, []), [Return(Name('index', Load(), lineno=172, col_offset=23), lineno=172, col_offset=16)], [], lineno=171, col_offset=12)], [], lineno=164, col_offset=8), Assign([Name('r', Store(), lineno=173, col_offset=8)], Call(Name('reversed', Load(), lineno=173, col_offset=12), [Call(Name('SeqWithWeirdLen', Load(), lineno=173, col_offset=21), [], [], None, None, lineno=173, col_offset=21)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertRaises', Load(), lineno=174, col_offset=8), [Name('ZeroDivisionError', Load(), lineno=174, col_offset=26), Name('len', Load(), lineno=174, col_offset=45), Name('r', Load(), lineno=174, col_offset=50)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8)], [Attribute(Name('test_support', Load(), lineno=155, col_offset=5), 'cpython_only', Load(), lineno=155, col_offset=5)], lineno=155, col_offset=4), FunctionDef('test_gc', arguments([Name('self', Param(), lineno=177, col_offset=16)], None, None, []), [ClassDef('Seq', [], [FunctionDef('__len__', arguments([Name('self', Param(), lineno=179, col_offset=24)], None, None, []), [Return(Num(10, lineno=180, col_offset=23), lineno=180, col_offset=16)], [], lineno=179, col_offset=12), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=181, col_offset=28), Name('index', Param(), lineno=181, col_offset=34)], None, None, []), [Return(Name('index', Load(), lineno=182, col_offset=23), lineno=182, col_offset=16)], [], lineno=181, col_offset=12)], [], lineno=178, col_offset=8), Assign([Name('s', Store(), lineno=183, col_offset=8)], Call(Name('Seq', Load(), lineno=183, col_offset=12), [], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=8), Assign([Name('r', Store(), lineno=184, col_offset=8)], Call(Name('reversed', Load(), lineno=184, col_offset=12), [Name('s', Load(), lineno=184, col_offset=21)], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=8), Assign([Attribute(Name('s', Load(), lineno=185, col_offset=8), 'r', Store(), lineno=185, col_offset=8)], Name('r', Load(), lineno=185, col_offset=14), lineno=185, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('test_args', arguments([Name('self', Param(), lineno=187, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'assertRaises', Load(), lineno=188, col_offset=8), [Name('TypeError', Load(), lineno=188, col_offset=26), Name('reversed', Load(), lineno=188, col_offset=37)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertRaises', Load(), lineno=189, col_offset=8), [Name('TypeError', Load(), lineno=189, col_offset=26), Name('reversed', Load(), lineno=189, col_offset=37), List([], Load(), lineno=189, col_offset=47), Str('extra', lineno=189, col_offset=51)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('test_bug1229429', arguments([Name('self', Param(), lineno=191, col_offset=24)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=194, col_offset=15), [Name('sys', Load(), lineno=194, col_offset=23), Str('getrefcount', lineno=194, col_offset=28)], [], None, None, lineno=194, col_offset=15), lineno=194, col_offset=11), [Return(None, lineno=195, col_offset=12)], [], lineno=194, col_offset=8), FunctionDef('f', arguments([], None, None, []), [Pass( lineno=197, col_offset=12)], [], lineno=196, col_offset=8), Assign([Name('r', Store(), lineno=198, col_offset=8), Attribute(Name('f', Load(), lineno=198, col_offset=12), '__reversed__', Store(), lineno=198, col_offset=12)], Call(Name('object', Load(), lineno=198, col_offset=29), [], [], None, None, lineno=198, col_offset=29), lineno=198, col_offset=8), Assign([Name('rc', Store(), lineno=199, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=199, col_offset=13), 'getrefcount', Load(), lineno=199, col_offset=13), [Name('r', Load(), lineno=199, col_offset=29)], [], None, None, lineno=199, col_offset=13), lineno=199, col_offset=8), For(Name('i', Store(), lineno=200, col_offset=12), Call(Name('range', Load(), lineno=200, col_offset=17), [Num(10, lineno=200, col_offset=23)], [], None, None, lineno=200, col_offset=17), [TryExcept([Expr(Call(Name('reversed', Load(), lineno=202, col_offset=16), [Name('f', Load(), lineno=202, col_offset=25)], [], None, None, lineno=202, col_offset=16), lineno=202, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=203, col_offset=19), None, [Pass( lineno=204, col_offset=16)], lineno=203, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=16), 'fail', Load(), lineno=206, col_offset=16), [Str("non-callable __reversed__ didn't raise!", lineno=206, col_offset=26)], [], None, None, lineno=206, col_offset=16), lineno=206, col_offset=16)], lineno=201, col_offset=12)], [], lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Name('rc', Load(), lineno=207, col_offset=25), Call(Attribute(Name('sys', Load(), lineno=207, col_offset=29), 'getrefcount', Load(), lineno=207, col_offset=29), [Name('r', Load(), lineno=207, col_offset=45)], [], None, None, lineno=207, col_offset=29)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_objmethods', arguments([Name('self', Param(), lineno=209, col_offset=24)], None, None, []), [ClassDef('NoLen', [Name('object', Load(), lineno=211, col_offset=20)], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=212, col_offset=28)], None, None, []), [Return(Num(1, lineno=212, col_offset=42), lineno=212, col_offset=35)], [], lineno=212, col_offset=12)], [], lineno=211, col_offset=8), Assign([Name('nl', Store(), lineno=213, col_offset=8)], Call(Name('NoLen', Load(), lineno=213, col_offset=13), [], [], None, None, lineno=213, col_offset=13), lineno=213, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'assertRaises', Load(), lineno=214, col_offset=8), [Name('TypeError', Load(), lineno=214, col_offset=26), Name('reversed', Load(), lineno=214, col_offset=37), Name('nl', Load(), lineno=214, col_offset=47)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), ClassDef('NoGetItem', [Name('object', Load(), lineno=216, col_offset=24)], [FunctionDef('__len__', arguments([Name('self', Param(), lineno=217, col_offset=24)], None, None, []), [Return(Num(2, lineno=217, col_offset=38), lineno=217, col_offset=31)], [], lineno=217, col_offset=12)], [], lineno=216, col_offset=8), Assign([Name('ngi', Store(), lineno=218, col_offset=8)], Call(Name('NoGetItem', Load(), lineno=218, col_offset=14), [], [], None, None, lineno=218, col_offset=14), lineno=218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertRaises', Load(), lineno=219, col_offset=8), [Name('TypeError', Load(), lineno=219, col_offset=26), Name('reversed', Load(), lineno=219, col_offset=37), Name('ngi', Load(), lineno=219, col_offset=47)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8)], [], lineno=209, col_offset=4)], [], lineno=129, col_offset=0), ClassDef('EnumerateStartTestCase', [Name('EnumerateTestCase', Load(), lineno=222, col_offset=29)], [FunctionDef('test_basicfunction', arguments([Name('self', Param(), lineno=224, col_offset=27)], None, None, []), [Assign([Name('e', Store(), lineno=225, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=225, col_offset=12), 'enum', Load(), lineno=225, col_offset=12), [Attribute(Name('self', Load(), lineno=225, col_offset=22), 'seq', Load(), lineno=225, col_offset=22)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertEqual', Load(), lineno=226, col_offset=8), [Call(Name('iter', Load(), lineno=226, col_offset=25), [Name('e', Load(), lineno=226, col_offset=30)], [], None, None, lineno=226, col_offset=25), Name('e', Load(), lineno=226, col_offset=34)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=8), 'assertEqual', Load(), lineno=227, col_offset=8), [Call(Name('list', Load(), lineno=227, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=227, col_offset=30), 'enum', Load(), lineno=227, col_offset=30), [Attribute(Name('self', Load(), lineno=227, col_offset=40), 'seq', Load(), lineno=227, col_offset=40)], [], None, None, lineno=227, col_offset=30)], [], None, None, lineno=227, col_offset=25), Attribute(Name('self', Load(), lineno=227, col_offset=52), 'res', Load(), lineno=227, col_offset=52)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8)], [], lineno=224, col_offset=4)], [], lineno=222, col_offset=0), ClassDef('TestStart', [Name('EnumerateStartTestCase', Load(), lineno=230, col_offset=16)], [Assign([Name('enum', Store(), lineno=232, col_offset=4)], Lambda(arguments([Name('self', Param(), lineno=232, col_offset=18), Name('i', Param(), lineno=232, col_offset=24)], None, None, []), Call(Name('enumerate', Load(), lineno=232, col_offset=27), [Name('i', Load(), lineno=232, col_offset=37)], [keyword('start', Num(11, lineno=232, col_offset=46))], None, None, lineno=232, col_offset=27), lineno=232, col_offset=11), lineno=232, col_offset=4), Assign([Tuple([Name('seq', Store(), lineno=233, col_offset=4), Name('res', Store(), lineno=233, col_offset=9)], Store(), lineno=233, col_offset=4)], Tuple([Str('abc', lineno=233, col_offset=15), List([Tuple([Num(11, lineno=233, col_offset=24), Str('a', lineno=233, col_offset=28)], Load(), lineno=233, col_offset=24), Tuple([Num(12, lineno=233, col_offset=35), Str('b', lineno=233, col_offset=39)], Load(), lineno=233, col_offset=35), Tuple([Num(13, lineno=233, col_offset=46), Str('c', lineno=233, col_offset=50)], Load(), lineno=233, col_offset=46)], Load(), lineno=233, col_offset=22)], Load(), lineno=233, col_offset=15), lineno=233, col_offset=4)], [], lineno=230, col_offset=0), ClassDef('TestLongStart', [Name('EnumerateStartTestCase', Load(), lineno=236, col_offset=20)], [Assign([Name('enum', Store(), lineno=238, col_offset=4)], Lambda(arguments([Name('self', Param(), lineno=238, col_offset=18), Name('i', Param(), lineno=238, col_offset=24)], None, None, []), Call(Name('enumerate', Load(), lineno=238, col_offset=27), [Name('i', Load(), lineno=238, col_offset=37)], [keyword('start', BinOp(Attribute(Name('sys', Load(), lineno=238, col_offset=46), 'maxint', Load(), lineno=238, col_offset=46), Add(), Num(1, lineno=238, col_offset=57), lineno=238, col_offset=46))], None, None, lineno=238, col_offset=27), lineno=238, col_offset=11), lineno=238, col_offset=4), Assign([Tuple([Name('seq', Store(), lineno=239, col_offset=4), Name('res', Store(), lineno=239, col_offset=9)], Store(), lineno=239, col_offset=4)], Tuple([Str('abc', lineno=239, col_offset=15), List([Tuple([BinOp(Attribute(Name('sys', Load(), lineno=239, col_offset=24), 'maxint', Load(), lineno=239, col_offset=24), Add(), Num(1, lineno=239, col_offset=35), lineno=239, col_offset=24), Str('a', lineno=239, col_offset=37)], Load(), lineno=239, col_offset=24), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=239, col_offset=44), 'maxint', Load(), lineno=239, col_offset=44), Add(), Num(2, lineno=239, col_offset=55), lineno=239, col_offset=44), Str('b', lineno=239, col_offset=57)], Load(), lineno=239, col_offset=44), Tuple([BinOp(Attribute(Name('sys', Load(), lineno=240, col_offset=24), 'maxint', Load(), lineno=240, col_offset=24), Add(), Num(3, lineno=240, col_offset=35), lineno=240, col_offset=24), Str('c', lineno=240, col_offset=37)], Load(), lineno=240, col_offset=24)], Load(), lineno=239, col_offset=22)], Load(), lineno=239, col_offset=15), lineno=239, col_offset=4)], [], lineno=236, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=243, col_offset=14)], None, None, [Name('None', Load(), lineno=243, col_offset=22)]), [Expr(Call(Attribute(Name('test_support', Load(), lineno=244, col_offset=4), 'run_unittest', Load(), lineno=244, col_offset=4), [Name('__name__', Load(), lineno=244, col_offset=30)], [], None, None, lineno=244, col_offset=4), lineno=244, col_offset=4), If(BoolOp(And(), [Name('verbose', Load(), lineno=247, col_offset=7), Call(Name('hasattr', Load(), lineno=247, col_offset=19), [Name('sys', Load(), lineno=247, col_offset=27), Str('gettotalrefcount', lineno=247, col_offset=32)], [], None, None, lineno=247, col_offset=19)], lineno=247, col_offset=7), [Assign([Name('counts', Store(), lineno=248, col_offset=8)], BinOp(List([Name('None', Load(), lineno=248, col_offset=18)], Load(), lineno=248, col_offset=17), Mult(), Num(5, lineno=248, col_offset=26), lineno=248, col_offset=17), lineno=248, col_offset=8), For(Name('i', Store(), lineno=249, col_offset=12), Call(Name('xrange', Load(), lineno=249, col_offset=17), [Call(Name('len', Load(), lineno=249, col_offset=24), [Name('counts', Load(), lineno=249, col_offset=28)], [], None, None, lineno=249, col_offset=24)], [], None, None, lineno=249, col_offset=17), [Expr(Call(Attribute(Name('test_support', Load(), lineno=250, col_offset=12), 'run_unittest', Load(), lineno=250, col_offset=12), [Name('__name__', Load(), lineno=250, col_offset=38)], [], None, None, lineno=250, col_offset=12), lineno=250, col_offset=12), Assign([Subscript(Name('counts', Load(), lineno=251, col_offset=12), Index(Name('i', Load(), lineno=251, col_offset=19)), Store(), lineno=251, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=251, col_offset=24), 'gettotalrefcount', Load(), lineno=251, col_offset=24), [], [], None, None, lineno=251, col_offset=24), lineno=251, col_offset=12)], [], lineno=249, col_offset=8), Print(None, [Name('counts', Load(), lineno=252, col_offset=14)], True, lineno=252, col_offset=8)], [], lineno=247, col_offset=4)], [], lineno=243, col_offset=0), If(Compare(Name('__name__', Load(), lineno=254, col_offset=3), [Eq()], [Str('__main__', lineno=254, col_offset=15)], lineno=254, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=255, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=255, col_offset=22))], None, None, lineno=255, col_offset=4), lineno=255, col_offset=4)], [], lineno=254, col_offset=0)])
