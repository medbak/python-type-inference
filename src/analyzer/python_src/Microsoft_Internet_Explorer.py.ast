Module([Expr(Str('Suite Microsoft Internet Explorer Suite: Events defined by Internet Explorer\nLevel 1, version 1\n\nGenerated from /Applications/Internet Explorer.app\nAETE/AEUT resource version 1/0, language 0, script 0\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('MSIE', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('Microsoft_Internet_Explorer_Events', [], [FunctionDef('GetSource', arguments([Name('self', Param(), lineno=15, col_offset=18), Name('_object', Param(), lineno=15, col_offset=24), Name('_attributes', Param(), lineno=15, col_offset=38)], None, '_arguments', [Name('None', Load(), lineno=15, col_offset=32), Dict([], [], lineno=15, col_offset=50)]), [Expr(Str("GetSource: Get the HTML source of a browser window\n        Required argument: Window Identifier of window from which to get the source. No value means get the source from the frontmost window.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'TEXT'\n        ", lineno=20, col_offset=-1), lineno=20, col_offset=-1), Assign([Name('_code', Store(), lineno=21, col_offset=8)], Str('MSIE', lineno=21, col_offset=16), lineno=21, col_offset=8), Assign([Name('_subcode', Store(), lineno=22, col_offset=8)], Str('SORC', lineno=22, col_offset=19), lineno=22, col_offset=8), If(Name('_arguments', Load(), lineno=24, col_offset=11), [Raise(Name('TypeError', Load(), lineno=24, col_offset=29), Str('No optional args expected', lineno=24, col_offset=40), None, lineno=24, col_offset=23)], [], lineno=24, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=25, col_offset=8), Index(Str('----', lineno=25, col_offset=19)), Store(), lineno=25, col_offset=8)], Name('_object', Load(), lineno=25, col_offset=29), lineno=25, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=28, col_offset=8), Name('_arguments', Store(), lineno=28, col_offset=16), Name('_attributes', Store(), lineno=28, col_offset=28)], Store(), lineno=28, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=28, col_offset=42), 'send', Load(), lineno=28, col_offset=42), [Name('_code', Load(), lineno=28, col_offset=52), Name('_subcode', Load(), lineno=28, col_offset=59), Name('_arguments', Load(), lineno=29, col_offset=16), Name('_attributes', Load(), lineno=29, col_offset=28)], [], None, None, lineno=28, col_offset=42), lineno=28, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=30, col_offset=11), 'get', Load(), lineno=30, col_offset=11), [Str('errn', lineno=30, col_offset=26), Num(0, lineno=30, col_offset=34)], [], None, None, lineno=30, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=31, col_offset=18), 'Error', Load(), lineno=31, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=31, col_offset=33), 'decodeerror', Load(), lineno=31, col_offset=33), [Name('_arguments', Load(), lineno=31, col_offset=53)], [], None, None, lineno=31, col_offset=33), None, lineno=31, col_offset=12)], [], lineno=30, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=33, col_offset=11), 'has_key', Load(), lineno=33, col_offset=11), [Str('----', lineno=33, col_offset=30)], [], None, None, lineno=33, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=34, col_offset=19), Index(Str('----', lineno=34, col_offset=30)), Load(), lineno=34, col_offset=19), lineno=34, col_offset=12)], [], lineno=33, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('PrintBrowserWindow', arguments([Name('self', Param(), lineno=36, col_offset=27), Name('_object', Param(), lineno=36, col_offset=33), Name('_attributes', Param(), lineno=36, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=36, col_offset=41), Dict([], [], lineno=36, col_offset=59)]), [Expr(Str('PrintBrowserWindow: Print contents of browser window (HTML)\n        Required argument: Window Identifier of the window to print. No value means print the frontmost browser window.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=40, col_offset=-1), lineno=40, col_offset=-1), Assign([Name('_code', Store(), lineno=41, col_offset=8)], Str('misc', lineno=41, col_offset=16), lineno=41, col_offset=8), Assign([Name('_subcode', Store(), lineno=42, col_offset=8)], Str('pWND', lineno=42, col_offset=19), lineno=42, col_offset=8), If(Name('_arguments', Load(), lineno=44, col_offset=11), [Raise(Name('TypeError', Load(), lineno=44, col_offset=29), Str('No optional args expected', lineno=44, col_offset=40), None, lineno=44, col_offset=23)], [], lineno=44, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=45, col_offset=8), Index(Str('----', lineno=45, col_offset=19)), Store(), lineno=45, col_offset=8)], Name('_object', Load(), lineno=45, col_offset=29), lineno=45, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=48, col_offset=8), Name('_arguments', Store(), lineno=48, col_offset=16), Name('_attributes', Store(), lineno=48, col_offset=28)], Store(), lineno=48, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=48, col_offset=42), 'send', Load(), lineno=48, col_offset=42), [Name('_code', Load(), lineno=48, col_offset=52), Name('_subcode', Load(), lineno=48, col_offset=59), Name('_arguments', Load(), lineno=49, col_offset=16), Name('_attributes', Load(), lineno=49, col_offset=28)], [], None, None, lineno=48, col_offset=42), lineno=48, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=50, col_offset=11), 'get', Load(), lineno=50, col_offset=11), [Str('errn', lineno=50, col_offset=26), Num(0, lineno=50, col_offset=34)], [], None, None, lineno=50, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=51, col_offset=18), 'Error', Load(), lineno=51, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=51, col_offset=33), 'decodeerror', Load(), lineno=51, col_offset=33), [Name('_arguments', Load(), lineno=51, col_offset=53)], [], None, None, lineno=51, col_offset=33), None, lineno=51, col_offset=12)], [], lineno=50, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=53, col_offset=11), 'has_key', Load(), lineno=53, col_offset=11), [Str('----', lineno=53, col_offset=30)], [], None, None, lineno=53, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=54, col_offset=19), Index(Str('----', lineno=54, col_offset=30)), Load(), lineno=54, col_offset=19), lineno=54, col_offset=12)], [], lineno=53, col_offset=8)], [], lineno=36, col_offset=4), Assign([Name('_argmap_do_script', Store(), lineno=56, col_offset=4)], Dict([Str('window', lineno=57, col_offset=8)], [Str('WIND', lineno=57, col_offset=19)], lineno=56, col_offset=24), lineno=56, col_offset=4), FunctionDef('do_script', arguments([Name('self', Param(), lineno=60, col_offset=18), Name('_object', Param(), lineno=60, col_offset=24), Name('_attributes', Param(), lineno=60, col_offset=33)], None, '_arguments', [Dict([], [], lineno=60, col_offset=45)]), [Expr(Str('do script: Execute script commands\n        Required argument: JavaScript text to execute\n        Keyword argument window: optional Window Identifier (as supplied by the ListWindows event) specifying context in which to execute the script\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Return value\n        ', lineno=66, col_offset=-1), lineno=66, col_offset=-1), Assign([Name('_code', Store(), lineno=67, col_offset=8)], Str('misc', lineno=67, col_offset=16), lineno=67, col_offset=8), Assign([Name('_subcode', Store(), lineno=68, col_offset=8)], Str('dosc', lineno=68, col_offset=19), lineno=68, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=70, col_offset=8), 'keysubst', Load(), lineno=70, col_offset=8), [Name('_arguments', Load(), lineno=70, col_offset=25), Attribute(Name('self', Load(), lineno=70, col_offset=37), '_argmap_do_script', Load(), lineno=70, col_offset=37)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=71, col_offset=8), Index(Str('----', lineno=71, col_offset=19)), Store(), lineno=71, col_offset=8)], Name('_object', Load(), lineno=71, col_offset=29), lineno=71, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=74, col_offset=8), Name('_arguments', Store(), lineno=74, col_offset=16), Name('_attributes', Store(), lineno=74, col_offset=28)], Store(), lineno=74, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=74, col_offset=42), 'send', Load(), lineno=74, col_offset=42), [Name('_code', Load(), lineno=74, col_offset=52), Name('_subcode', Load(), lineno=74, col_offset=59), Name('_arguments', Load(), lineno=75, col_offset=16), Name('_attributes', Load(), lineno=75, col_offset=28)], [], None, None, lineno=74, col_offset=42), lineno=74, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=76, col_offset=11), 'get', Load(), lineno=76, col_offset=11), [Str('errn', lineno=76, col_offset=26), Num(0, lineno=76, col_offset=34)], [], None, None, lineno=76, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=77, col_offset=18), 'Error', Load(), lineno=77, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=77, col_offset=33), 'decodeerror', Load(), lineno=77, col_offset=33), [Name('_arguments', Load(), lineno=77, col_offset=53)], [], None, None, lineno=77, col_offset=33), None, lineno=77, col_offset=12)], [], lineno=76, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=79, col_offset=11), 'has_key', Load(), lineno=79, col_offset=11), [Str('----', lineno=79, col_offset=30)], [], None, None, lineno=79, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=80, col_offset=19), Index(Str('----', lineno=80, col_offset=30)), Load(), lineno=80, col_offset=19), lineno=80, col_offset=12)], [], lineno=79, col_offset=8)], [], lineno=60, col_offset=4)], [], lineno=13, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=86, col_offset=0)], Dict([], [], lineno=86, col_offset=21), lineno=86, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=89, col_offset=0)], Dict([], [], lineno=89, col_offset=20), lineno=89, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=92, col_offset=0)], Dict([], [], lineno=92, col_offset=20), lineno=92, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=95, col_offset=0)], Dict([], [], lineno=95, col_offset=20), lineno=95, col_offset=0)])
