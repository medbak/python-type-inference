Module([Import([alias('test.test_support', None), alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('future_builtins', [alias('hex', None), alias('oct', None), alias('map', None), alias('zip', None), alias('filter', None)], 0, lineno=4, col_offset=0), ClassDef('BuiltinTest', [Attribute(Name('unittest', Load(), lineno=6, col_offset=18), 'TestCase', Load(), lineno=6, col_offset=18)], [FunctionDef('test_hex', arguments([Name('self', Param(), lineno=7, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=8, col_offset=8), 'assertEqual', Load(), lineno=8, col_offset=8), [Call(Name('hex', Load(), lineno=8, col_offset=25), [Num(0, lineno=8, col_offset=29)], [], None, None, lineno=8, col_offset=25), Str('0x0', lineno=8, col_offset=33)], [], None, None, lineno=8, col_offset=8), lineno=8, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=8), 'assertEqual', Load(), lineno=9, col_offset=8), [Call(Name('hex', Load(), lineno=9, col_offset=25), [Num(16, lineno=9, col_offset=29)], [], None, None, lineno=9, col_offset=25), Str('0x10', lineno=9, col_offset=34)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertEqual', Load(), lineno=10, col_offset=8), [Call(Name('hex', Load(), lineno=10, col_offset=25), [Num(16L, lineno=10, col_offset=29)], [], None, None, lineno=10, col_offset=25), Str('0x10', lineno=10, col_offset=35)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=8), 'assertEqual', Load(), lineno=11, col_offset=8), [Call(Name('hex', Load(), lineno=11, col_offset=25), [Num(-16, lineno=11, col_offset=30)], [], None, None, lineno=11, col_offset=25), Str('-0x10', lineno=11, col_offset=35)], [], None, None, lineno=11, col_offset=8), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Call(Name('hex', Load(), lineno=12, col_offset=25), [Num(-16L, lineno=12, col_offset=30)], [], None, None, lineno=12, col_offset=25), Str('-0x10', lineno=12, col_offset=36)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertRaises', Load(), lineno=13, col_offset=8), [Name('TypeError', Load(), lineno=13, col_offset=26), Name('hex', Load(), lineno=13, col_offset=37), Dict([], [], lineno=13, col_offset=42)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8)], [], lineno=7, col_offset=4), FunctionDef('test_oct', arguments([Name('self', Param(), lineno=15, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertEqual', Load(), lineno=16, col_offset=8), [Call(Name('oct', Load(), lineno=16, col_offset=25), [Num(0, lineno=16, col_offset=29)], [], None, None, lineno=16, col_offset=25), Str('0o0', lineno=16, col_offset=33)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Call(Name('oct', Load(), lineno=17, col_offset=25), [Num(100, lineno=17, col_offset=29)], [], None, None, lineno=17, col_offset=25), Str('0o144', lineno=17, col_offset=35)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertEqual', Load(), lineno=18, col_offset=8), [Call(Name('oct', Load(), lineno=18, col_offset=25), [Num(100L, lineno=18, col_offset=29)], [], None, None, lineno=18, col_offset=25), Str('0o144', lineno=18, col_offset=36)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertEqual', Load(), lineno=19, col_offset=8), [Call(Name('oct', Load(), lineno=19, col_offset=25), [Num(-100, lineno=19, col_offset=30)], [], None, None, lineno=19, col_offset=25), Str('-0o144', lineno=19, col_offset=36)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Call(Name('oct', Load(), lineno=20, col_offset=25), [Num(-100L, lineno=20, col_offset=30)], [], None, None, lineno=20, col_offset=25), Str('-0o144', lineno=20, col_offset=37)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertRaises', Load(), lineno=21, col_offset=8), [Name('TypeError', Load(), lineno=21, col_offset=26), Name('oct', Load(), lineno=21, col_offset=37), Tuple([], Load(), lineno=21, col_offset=42)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('test_itertools', arguments([Name('self', Param(), lineno=23, col_offset=23)], None, None, []), [ImportFrom('itertools', [alias('imap', None), alias('izip', None), alias('ifilter', None)], 0, lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Name('map', Load(), lineno=27, col_offset=25), Name('imap', Load(), lineno=27, col_offset=30)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Name('zip', Load(), lineno=28, col_offset=25), Name('izip', Load(), lineno=28, col_offset=30)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Name('filter', Load(), lineno=29, col_offset=25), Name('ifilter', Load(), lineno=29, col_offset=33)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=34, col_offset=14)], None, None, [Name('None', Load(), lineno=34, col_offset=22)]), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=35, col_offset=4), 'test_support', Load(), lineno=35, col_offset=4), 'run_unittest', Load(), lineno=35, col_offset=4), [Name('BuiltinTest', Load(), lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=4), lineno=35, col_offset=4)], [], lineno=34, col_offset=0), If(Compare(Name('__name__', Load(), lineno=37, col_offset=3), [Eq()], [Str('__main__', lineno=37, col_offset=15)], lineno=37, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=38, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=38, col_offset=22))], None, None, lineno=38, col_offset=4), lineno=38, col_offset=4)], [], lineno=37, col_offset=0)])
