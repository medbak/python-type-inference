Module([ImportFrom('unittest', [alias('TestCase', None)], 0, lineno=1, col_offset=0), ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=2, col_offset=0), Import([alias('json', None)], lineno=4, col_offset=0), ClassDef('TestDump', [Name('TestCase', Load(), lineno=6, col_offset=15)], [FunctionDef('test_dump', arguments([Name('self', Param(), lineno=7, col_offset=18)], None, None, []), [Assign([Name('sio', Store(), lineno=8, col_offset=8)], Call(Name('StringIO', Load(), lineno=8, col_offset=14), [], [], None, None, lineno=8, col_offset=14), lineno=8, col_offset=8), Expr(Call(Attribute(Name('json', Load(), lineno=9, col_offset=8), 'dump', Load(), lineno=9, col_offset=8), [Dict([], [], lineno=9, col_offset=18), Name('sio', Load(), lineno=9, col_offset=22)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertEqual', Load(), lineno=10, col_offset=8), [Call(Attribute(Name('sio', Load(), lineno=10, col_offset=25), 'getvalue', Load(), lineno=10, col_offset=25), [], [], None, None, lineno=10, col_offset=25), Str('{}', lineno=10, col_offset=41)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8)], [], lineno=7, col_offset=4), FunctionDef('test_dumps', arguments([Name('self', Param(), lineno=12, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertEqual', Load(), lineno=13, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=13, col_offset=25), 'dumps', Load(), lineno=13, col_offset=25), [Dict([], [], lineno=13, col_offset=36)], [], None, None, lineno=13, col_offset=25), Str('{}', lineno=13, col_offset=41)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('test_encode_truefalse', arguments([Name('self', Param(), lineno=15, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertEqual', Load(), lineno=16, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=16, col_offset=25), 'dumps', Load(), lineno=16, col_offset=25), [Dict([Name('True', Load(), lineno=17, col_offset=18), Name('False', Load(), lineno=17, col_offset=31)], [Name('False', Load(), lineno=17, col_offset=24), Name('True', Load(), lineno=17, col_offset=38)], lineno=17, col_offset=17)], [keyword('sort_keys', Name('True', Load(), lineno=17, col_offset=55))], None, None, lineno=16, col_offset=25), Str('{"false": true, "true": false}', lineno=18, col_offset=17)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertEqual', Load(), lineno=19, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=19, col_offset=25), 'dumps', Load(), lineno=19, col_offset=25), [Dict([Num(2, lineno=20, col_offset=17), Num(4.0, lineno=20, col_offset=25), Name('False', Load(), lineno=20, col_offset=34), Num(6L, lineno=20, col_offset=44)], [Num(3.0, lineno=20, col_offset=20), Num(5L, lineno=20, col_offset=30), Num(1, lineno=20, col_offset=41), Name('True', Load(), lineno=20, col_offset=48)], lineno=20, col_offset=16)], [keyword('sort_keys', Name('True', Load(), lineno=20, col_offset=65))], None, None, lineno=19, col_offset=25), Str('{"false": 1, "2": 3.0, "4.0": 5, "6": true}', lineno=21, col_offset=16)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8)], [], lineno=15, col_offset=4)], [], lineno=6, col_offset=0)])
