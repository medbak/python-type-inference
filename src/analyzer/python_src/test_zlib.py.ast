Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), Import([alias('binascii', None)], lineno=3, col_offset=0), Import([alias('random', None)], lineno=4, col_offset=0), ImportFrom('test.test_support', [alias('precisionbigmemtest', None), alias('_1G', None)], 0, lineno=5, col_offset=0), Assign([Name('zlib', Store(), lineno=7, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=7, col_offset=7), 'import_module', Load(), lineno=7, col_offset=7), [Str('zlib', lineno=7, col_offset=34)], [], None, None, lineno=7, col_offset=7), lineno=7, col_offset=0), ClassDef('ChecksumTestCase', [Attribute(Name('unittest', Load(), lineno=10, col_offset=23), 'TestCase', Load(), lineno=10, col_offset=23)], [FunctionDef('test_crc32start', arguments([Name('self', Param(), lineno=12, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertEqual', Load(), lineno=13, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=13, col_offset=25), 'crc32', Load(), lineno=13, col_offset=25), [Str('', lineno=13, col_offset=36)], [], None, None, lineno=13, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=13, col_offset=41), 'crc32', Load(), lineno=13, col_offset=41), [Str('', lineno=13, col_offset=52), Num(0, lineno=13, col_offset=56)], [], None, None, lineno=13, col_offset=41)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertTrue', Load(), lineno=14, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=14, col_offset=24), 'crc32', Load(), lineno=14, col_offset=24), [Str('abc', lineno=14, col_offset=35), Num(4294967295, lineno=14, col_offset=42)], [], None, None, lineno=14, col_offset=24)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('test_crc32empty', arguments([Name('self', Param(), lineno=16, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=17, col_offset=25), 'crc32', Load(), lineno=17, col_offset=25), [Str('', lineno=17, col_offset=36), Num(0, lineno=17, col_offset=40)], [], None, None, lineno=17, col_offset=25), Num(0, lineno=17, col_offset=44)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertEqual', Load(), lineno=18, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=18, col_offset=25), 'crc32', Load(), lineno=18, col_offset=25), [Str('', lineno=18, col_offset=36), Num(1, lineno=18, col_offset=40)], [], None, None, lineno=18, col_offset=25), Num(1, lineno=18, col_offset=44)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertEqual', Load(), lineno=19, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=19, col_offset=25), 'crc32', Load(), lineno=19, col_offset=25), [Str('', lineno=19, col_offset=36), Num(432, lineno=19, col_offset=40)], [], None, None, lineno=19, col_offset=25), Num(432, lineno=19, col_offset=46)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_adler32start', arguments([Name('self', Param(), lineno=21, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertEqual', Load(), lineno=22, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=22, col_offset=25), 'adler32', Load(), lineno=22, col_offset=25), [Str('', lineno=22, col_offset=38)], [], None, None, lineno=22, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=22, col_offset=43), 'adler32', Load(), lineno=22, col_offset=43), [Str('', lineno=22, col_offset=56), Num(1, lineno=22, col_offset=60)], [], None, None, lineno=22, col_offset=43)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertTrue', Load(), lineno=23, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=23, col_offset=24), 'adler32', Load(), lineno=23, col_offset=24), [Str('abc', lineno=23, col_offset=37), Num(4294967295, lineno=23, col_offset=44)], [], None, None, lineno=23, col_offset=24)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('test_adler32empty', arguments([Name('self', Param(), lineno=25, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=26, col_offset=25), 'adler32', Load(), lineno=26, col_offset=25), [Str('', lineno=26, col_offset=38), Num(0, lineno=26, col_offset=42)], [], None, None, lineno=26, col_offset=25), Num(0, lineno=26, col_offset=46)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=27, col_offset=25), 'adler32', Load(), lineno=27, col_offset=25), [Str('', lineno=27, col_offset=38), Num(1, lineno=27, col_offset=42)], [], None, None, lineno=27, col_offset=25), Num(1, lineno=27, col_offset=46)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=28, col_offset=25), 'adler32', Load(), lineno=28, col_offset=25), [Str('', lineno=28, col_offset=38), Num(432, lineno=28, col_offset=42)], [], None, None, lineno=28, col_offset=25), Num(432, lineno=28, col_offset=48)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('assertEqual32', arguments([Name('self', Param(), lineno=30, col_offset=22), Name('seen', Param(), lineno=30, col_offset=28), Name('expected', Param(), lineno=30, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [BinOp(Name('seen', Load(), lineno=33, col_offset=25), BitAnd(), Num(4294967295L, lineno=33, col_offset=32), lineno=33, col_offset=25), BinOp(Name('expected', Load(), lineno=33, col_offset=46), BitAnd(), Num(4294967295L, lineno=33, col_offset=57), lineno=33, col_offset=46)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('test_penguins', arguments([Name('self', Param(), lineno=35, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual32', Load(), lineno=36, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=36, col_offset=27), 'crc32', Load(), lineno=36, col_offset=27), [Str('penguin', lineno=36, col_offset=38), Num(0, lineno=36, col_offset=49)], [], None, None, lineno=36, col_offset=27), Num(3854672160L, lineno=36, col_offset=53)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertEqual32', Load(), lineno=37, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=37, col_offset=27), 'crc32', Load(), lineno=37, col_offset=27), [Str('penguin', lineno=37, col_offset=38), Num(1, lineno=37, col_offset=49)], [], None, None, lineno=37, col_offset=27), Num(1136044692, lineno=37, col_offset=53)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertEqual32', Load(), lineno=38, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=38, col_offset=27), 'adler32', Load(), lineno=38, col_offset=27), [Str('penguin', lineno=38, col_offset=40), Num(0, lineno=38, col_offset=51)], [], None, None, lineno=38, col_offset=27), Num(198116086, lineno=38, col_offset=55)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual32', Load(), lineno=39, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=39, col_offset=27), 'adler32', Load(), lineno=39, col_offset=27), [Str('penguin', lineno=39, col_offset=40), Num(1, lineno=39, col_offset=51)], [], None, None, lineno=39, col_offset=27), Num(198574839, lineno=39, col_offset=55)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=41, col_offset=25), 'crc32', Load(), lineno=41, col_offset=25), [Str('penguin', lineno=41, col_offset=36)], [], None, None, lineno=41, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=41, col_offset=48), 'crc32', Load(), lineno=41, col_offset=48), [Str('penguin', lineno=41, col_offset=59), Num(0, lineno=41, col_offset=70)], [], None, None, lineno=41, col_offset=48)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=42, col_offset=25), 'adler32', Load(), lineno=42, col_offset=25), [Str('penguin', lineno=42, col_offset=38)], [], None, None, lineno=42, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=42, col_offset=49), 'adler32', Load(), lineno=42, col_offset=49), [Str('penguin', lineno=42, col_offset=62), Num(1, lineno=42, col_offset=72)], [], None, None, lineno=42, col_offset=49)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('test_abcdefghijklmnop', arguments([Name('self', Param(), lineno=44, col_offset=30)], None, None, []), [Expr(Str('test issue1202 compliance: signed crc32, adler32 in 2.x', lineno=45, col_offset=8), lineno=45, col_offset=8), Assign([Name('foo', Store(), lineno=46, col_offset=8)], Str('abcdefghijklmnop', lineno=46, col_offset=14), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertEqual', Load(), lineno=48, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=48, col_offset=25), 'crc32', Load(), lineno=48, col_offset=25), [Name('foo', Load(), lineno=48, col_offset=36)], [], None, None, lineno=48, col_offset=25), Num(-1808088941, lineno=48, col_offset=43)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertEqual', Load(), lineno=49, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=49, col_offset=25), 'crc32', Load(), lineno=49, col_offset=25), [Str('spam', lineno=49, col_offset=36)], [], None, None, lineno=49, col_offset=25), Num(1138425661, lineno=49, col_offset=45)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertEqual', Load(), lineno=50, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=50, col_offset=25), 'adler32', Load(), lineno=50, col_offset=25), [BinOp(Name('foo', Load(), lineno=50, col_offset=38), Add(), Name('foo', Load(), lineno=50, col_offset=42), lineno=50, col_offset=38)], [], None, None, lineno=50, col_offset=25), Num(-721416943, lineno=50, col_offset=49)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertEqual', Load(), lineno=51, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=51, col_offset=25), 'adler32', Load(), lineno=51, col_offset=25), [Str('spam', lineno=51, col_offset=38)], [], None, None, lineno=51, col_offset=25), Num(72286642, lineno=51, col_offset=47)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=44, col_offset=4), FunctionDef('test_same_as_binascii_crc32', arguments([Name('self', Param(), lineno=53, col_offset=36)], None, None, []), [Assign([Name('foo', Store(), lineno=54, col_offset=8)], Str('abcdefghijklmnop', lineno=54, col_offset=14), lineno=54, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertEqual', Load(), lineno=55, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=55, col_offset=25), 'crc32', Load(), lineno=55, col_offset=25), [Name('foo', Load(), lineno=55, col_offset=40)], [], None, None, lineno=55, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=55, col_offset=46), 'crc32', Load(), lineno=55, col_offset=46), [Name('foo', Load(), lineno=55, col_offset=57)], [], None, None, lineno=55, col_offset=46)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertEqual', Load(), lineno=56, col_offset=8), [Call(Attribute(Name('binascii', Load(), lineno=56, col_offset=25), 'crc32', Load(), lineno=56, col_offset=25), [Str('spam', lineno=56, col_offset=40)], [], None, None, lineno=56, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=56, col_offset=49), 'crc32', Load(), lineno=56, col_offset=49), [Str('spam', lineno=56, col_offset=60)], [], None, None, lineno=56, col_offset=49)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('test_negative_crc_iv_input', arguments([Name('self', Param(), lineno=58, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertEqual', Load(), lineno=62, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=62, col_offset=25), 'crc32', Load(), lineno=62, col_offset=25), [Str('ham', lineno=62, col_offset=36), Num(-1, lineno=62, col_offset=44)], [], None, None, lineno=62, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=62, col_offset=48), 'crc32', Load(), lineno=62, col_offset=48), [Str('ham', lineno=62, col_offset=59), Num(4294967295L, lineno=62, col_offset=66)], [], None, None, lineno=62, col_offset=48)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertEqual', Load(), lineno=63, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=63, col_offset=25), 'crc32', Load(), lineno=63, col_offset=25), [Str('spam', lineno=63, col_offset=36), Num(-3141593, lineno=63, col_offset=45)], [], None, None, lineno=63, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=64, col_offset=25), 'crc32', Load(), lineno=64, col_offset=25), [Str('spam', lineno=64, col_offset=36), Num(4291825703L, lineno=64, col_offset=45)], [], None, None, lineno=64, col_offset=25)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=8), 'assertEqual', Load(), lineno=65, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=65, col_offset=25), 'crc32', Load(), lineno=65, col_offset=25), [Str('spam', lineno=65, col_offset=36), UnaryOp(USub(), BinOp(Num(2, lineno=65, col_offset=46), Pow(), Num(31, lineno=65, col_offset=49), lineno=65, col_offset=46), lineno=65, col_offset=44)], [], None, None, lineno=65, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=66, col_offset=25), 'crc32', Load(), lineno=66, col_offset=25), [Str('spam', lineno=66, col_offset=36), BinOp(Num(2, lineno=66, col_offset=46), Pow(), Num(31, lineno=66, col_offset=49), lineno=66, col_offset=46)], [], None, None, lineno=66, col_offset=25)], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8)], [], lineno=58, col_offset=4)], [], lineno=10, col_offset=0), ClassDef('ExceptionTestCase', [Attribute(Name('unittest', Load(), lineno=69, col_offset=24), 'TestCase', Load(), lineno=69, col_offset=24)], [FunctionDef('test_badlevel', arguments([Name('self', Param(), lineno=71, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertRaises', Load(), lineno=75, col_offset=8), [Attribute(Name('zlib', Load(), lineno=75, col_offset=26), 'error', Load(), lineno=75, col_offset=26), Attribute(Name('zlib', Load(), lineno=75, col_offset=38), 'compress', Load(), lineno=75, col_offset=38), Str('ERROR', lineno=75, col_offset=53), Num(10, lineno=75, col_offset=62)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_badcompressobj', arguments([Name('self', Param(), lineno=77, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertRaises', Load(), lineno=79, col_offset=8), [Name('ValueError', Load(), lineno=79, col_offset=26), Attribute(Name('zlib', Load(), lineno=79, col_offset=38), 'compressobj', Load(), lineno=79, col_offset=38), Num(1, lineno=79, col_offset=56), Attribute(Name('zlib', Load(), lineno=79, col_offset=59), 'DEFLATED', Load(), lineno=79, col_offset=59), Num(0, lineno=79, col_offset=74)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertRaises', Load(), lineno=81, col_offset=8), [Name('ValueError', Load(), lineno=81, col_offset=26), Attribute(Name('zlib', Load(), lineno=82, col_offset=16), 'compressobj', Load(), lineno=82, col_offset=16), Num(1, lineno=82, col_offset=34), Attribute(Name('zlib', Load(), lineno=82, col_offset=37), 'DEFLATED', Load(), lineno=82, col_offset=37), BinOp(Attribute(Name('zlib', Load(), lineno=82, col_offset=52), 'MAX_WBITS', Load(), lineno=82, col_offset=52), Add(), Num(1, lineno=82, col_offset=69), lineno=82, col_offset=52)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('test_baddecompressobj', arguments([Name('self', Param(), lineno=84, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'assertRaises', Load(), lineno=86, col_offset=8), [Name('ValueError', Load(), lineno=86, col_offset=26), Attribute(Name('zlib', Load(), lineno=86, col_offset=38), 'decompressobj', Load(), lineno=86, col_offset=38), Num(-1, lineno=86, col_offset=59)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('test_decompressobj_badflush', arguments([Name('self', Param(), lineno=88, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertRaises', Load(), lineno=90, col_offset=8), [Name('ValueError', Load(), lineno=90, col_offset=26), Attribute(Call(Attribute(Name('zlib', Load(), lineno=90, col_offset=38), 'decompressobj', Load(), lineno=90, col_offset=38), [], [], None, None, lineno=90, col_offset=38), 'flush', Load(), lineno=90, col_offset=38), Num(0, lineno=90, col_offset=66)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertRaises', Load(), lineno=91, col_offset=8), [Name('ValueError', Load(), lineno=91, col_offset=26), Attribute(Call(Attribute(Name('zlib', Load(), lineno=91, col_offset=38), 'decompressobj', Load(), lineno=91, col_offset=38), [], [], None, None, lineno=91, col_offset=38), 'flush', Load(), lineno=91, col_offset=38), Num(-1, lineno=91, col_offset=67)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=88, col_offset=4)], [], lineno=69, col_offset=0), ClassDef('BaseCompressTestCase', [Name('object', Load(), lineno=94, col_offset=27)], [FunctionDef('check_big_compress_buffer', arguments([Name('self', Param(), lineno=95, col_offset=34), Name('size', Param(), lineno=95, col_offset=40), Name('compress_func', Param(), lineno=95, col_offset=46)], None, None, []), [Assign([Name('_1M', Store(), lineno=96, col_offset=8)], BinOp(Num(1024, lineno=96, col_offset=14), Mult(), Num(1024, lineno=96, col_offset=21), lineno=96, col_offset=14), lineno=96, col_offset=8), Assign([Name('fmt', Store(), lineno=97, col_offset=8)], BinOp(Str('%%0%dx', lineno=97, col_offset=14), Mod(), BinOp(Num(2, lineno=97, col_offset=26), Mult(), Name('_1M', Load(), lineno=97, col_offset=30), lineno=97, col_offset=26), lineno=97, col_offset=14), lineno=97, col_offset=8), Assign([Name('data', Store(), lineno=101, col_offset=8)], Call(Attribute(Str('', lineno=101, col_offset=15), 'join', Load(), lineno=101, col_offset=15), [ListComp(Call(Attribute(Name('binascii', Load(), lineno=101, col_offset=24), 'a2b_hex', Load(), lineno=101, col_offset=24), [BinOp(Name('fmt', Load(), lineno=101, col_offset=41), Mod(), Call(Attribute(Name('random', Load(), lineno=101, col_offset=47), 'getrandbits', Load(), lineno=101, col_offset=47), [BinOp(Num(8, lineno=101, col_offset=66), Mult(), Name('_1M', Load(), lineno=101, col_offset=70), lineno=101, col_offset=66)], [], None, None, lineno=101, col_offset=47), lineno=101, col_offset=41)], [], None, None, lineno=101, col_offset=24), [comprehension(Name('i', Store(), lineno=102, col_offset=28), Call(Name('range', Load(), lineno=102, col_offset=33), [Num(10, lineno=102, col_offset=39)], [], None, None, lineno=102, col_offset=33), [])], lineno=101, col_offset=24)], [], None, None, lineno=101, col_offset=15), lineno=101, col_offset=8), Assign([Name('data', Store(), lineno=103, col_offset=8)], BinOp(Name('data', Load(), lineno=103, col_offset=15), Mult(), BinOp(BinOp(Name('size', Load(), lineno=103, col_offset=23), FloorDiv(), Call(Name('len', Load(), lineno=103, col_offset=31), [Name('data', Load(), lineno=103, col_offset=35)], [], None, None, lineno=103, col_offset=31), lineno=103, col_offset=23), Add(), Num(1, lineno=103, col_offset=43), lineno=103, col_offset=23), lineno=103, col_offset=15), lineno=103, col_offset=8), TryFinally([Expr(Call(Name('compress_func', Load(), lineno=105, col_offset=12), [Name('data', Load(), lineno=105, col_offset=26)], [], None, None, lineno=105, col_offset=12), lineno=105, col_offset=12)], [Assign([Name('data', Store(), lineno=108, col_offset=12)], Name('None', Load(), lineno=108, col_offset=19), lineno=108, col_offset=12)], lineno=104, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('check_big_decompress_buffer', arguments([Name('self', Param(), lineno=110, col_offset=36), Name('size', Param(), lineno=110, col_offset=42), Name('decompress_func', Param(), lineno=110, col_offset=48)], None, None, []), [Assign([Name('data', Store(), lineno=111, col_offset=8)], BinOp(Str('x', lineno=111, col_offset=15), Mult(), Name('size', Load(), lineno=111, col_offset=21), lineno=111, col_offset=15), lineno=111, col_offset=8), TryFinally([Assign([Name('compressed', Store(), lineno=113, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=113, col_offset=25), 'compress', Load(), lineno=113, col_offset=25), [Name('data', Load(), lineno=113, col_offset=39), Num(1, lineno=113, col_offset=45)], [], None, None, lineno=113, col_offset=25), lineno=113, col_offset=12)], [Assign([Name('data', Store(), lineno=116, col_offset=12)], Name('None', Load(), lineno=116, col_offset=19), lineno=116, col_offset=12)], lineno=112, col_offset=8), Assign([Name('data', Store(), lineno=117, col_offset=8)], Call(Name('decompress_func', Load(), lineno=117, col_offset=15), [Name('compressed', Load(), lineno=117, col_offset=31)], [], None, None, lineno=117, col_offset=15), lineno=117, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=12), 'assertEqual', Load(), lineno=120, col_offset=12), [Call(Name('len', Load(), lineno=120, col_offset=29), [Name('data', Load(), lineno=120, col_offset=33)], [], None, None, lineno=120, col_offset=29), Name('size', Load(), lineno=120, col_offset=40)], [], None, None, lineno=120, col_offset=12), lineno=120, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=12), 'assertEqual', Load(), lineno=121, col_offset=12), [Call(Name('len', Load(), lineno=121, col_offset=29), [Call(Attribute(Name('data', Load(), lineno=121, col_offset=33), 'strip', Load(), lineno=121, col_offset=33), [Str('x', lineno=121, col_offset=44)], [], None, None, lineno=121, col_offset=33)], [], None, None, lineno=121, col_offset=29), Num(0, lineno=121, col_offset=51)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [Assign([Name('data', Store(), lineno=123, col_offset=12)], Name('None', Load(), lineno=123, col_offset=19), lineno=123, col_offset=12)], lineno=119, col_offset=8)], [], lineno=110, col_offset=4)], [], lineno=94, col_offset=0), ClassDef('CompressTestCase', [Name('BaseCompressTestCase', Load(), lineno=126, col_offset=23), Attribute(Name('unittest', Load(), lineno=126, col_offset=45), 'TestCase', Load(), lineno=126, col_offset=45)], [FunctionDef('test_speech', arguments([Name('self', Param(), lineno=128, col_offset=20)], None, None, []), [Assign([Name('x', Store(), lineno=129, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=129, col_offset=12), 'compress', Load(), lineno=129, col_offset=12), [Name('HAMLET_SCENE', Load(), lineno=129, col_offset=26)], [], None, None, lineno=129, col_offset=12), lineno=129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'assertEqual', Load(), lineno=130, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=130, col_offset=25), 'decompress', Load(), lineno=130, col_offset=25), [Name('x', Load(), lineno=130, col_offset=41)], [], None, None, lineno=130, col_offset=25), Name('HAMLET_SCENE', Load(), lineno=130, col_offset=45)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('test_speech128', arguments([Name('self', Param(), lineno=132, col_offset=23)], None, None, []), [Assign([Name('data', Store(), lineno=134, col_offset=8)], BinOp(Name('HAMLET_SCENE', Load(), lineno=134, col_offset=15), Mult(), Num(128, lineno=134, col_offset=30), lineno=134, col_offset=15), lineno=134, col_offset=8), Assign([Name('x', Store(), lineno=135, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=135, col_offset=12), 'compress', Load(), lineno=135, col_offset=12), [Name('data', Load(), lineno=135, col_offset=26)], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertEqual', Load(), lineno=136, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=136, col_offset=25), 'decompress', Load(), lineno=136, col_offset=25), [Name('x', Load(), lineno=136, col_offset=41)], [], None, None, lineno=136, col_offset=25), Name('data', Load(), lineno=136, col_offset=45)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8)], [], lineno=132, col_offset=4), FunctionDef('test_incomplete_stream', arguments([Name('self', Param(), lineno=138, col_offset=31)], None, None, []), [Assign([Name('x', Store(), lineno=140, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=140, col_offset=12), 'compress', Load(), lineno=140, col_offset=12), [Name('HAMLET_SCENE', Load(), lineno=140, col_offset=26)], [], None, None, lineno=140, col_offset=12), lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'assertRaisesRegexp', Load(), lineno=141, col_offset=8), [Attribute(Name('zlib', Load(), lineno=141, col_offset=32), 'error', Load(), lineno=141, col_offset=32), Str('Error -5 while decompressing data: incomplete or truncated stream', lineno=142, col_offset=12), Attribute(Name('zlib', Load(), lineno=143, col_offset=12), 'decompress', Load(), lineno=143, col_offset=12), Subscript(Name('x', Load(), lineno=143, col_offset=29), Slice(None, Num(-1, lineno=143, col_offset=33), None), Load(), lineno=143, col_offset=29)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8)], [], lineno=138, col_offset=4), FunctionDef('test_big_compress_buffer', arguments([Name('self', Param(), lineno=148, col_offset=33), Name('size', Param(), lineno=148, col_offset=39)], None, None, []), [Assign([Name('compress', Store(), lineno=149, col_offset=8)], Lambda(arguments([Name('s', Param(), lineno=149, col_offset=26)], None, None, []), Call(Attribute(Name('zlib', Load(), lineno=149, col_offset=29), 'compress', Load(), lineno=149, col_offset=29), [Name('s', Load(), lineno=149, col_offset=43), Num(1, lineno=149, col_offset=46)], [], None, None, lineno=149, col_offset=29), lineno=149, col_offset=19), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'check_big_compress_buffer', Load(), lineno=150, col_offset=8), [Name('size', Load(), lineno=150, col_offset=39), Name('compress', Load(), lineno=150, col_offset=45)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=147, col_offset=5), [], [keyword('size', BinOp(Name('_1G', Load(), lineno=147, col_offset=30), Add(), BinOp(Num(1024, lineno=147, col_offset=36), Mult(), Num(1024, lineno=147, col_offset=43), lineno=147, col_offset=36), lineno=147, col_offset=30)), keyword('memuse', Num(3, lineno=147, col_offset=56))], None, None, lineno=147, col_offset=5)], lineno=147, col_offset=4), FunctionDef('test_big_decompress_buffer', arguments([Name('self', Param(), lineno=153, col_offset=35), Name('size', Param(), lineno=153, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'check_big_decompress_buffer', Load(), lineno=154, col_offset=8), [Name('size', Load(), lineno=154, col_offset=41), Attribute(Name('zlib', Load(), lineno=154, col_offset=47), 'decompress', Load(), lineno=154, col_offset=47)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=152, col_offset=5), [], [keyword('size', BinOp(Name('_1G', Load(), lineno=152, col_offset=30), Add(), BinOp(Num(1024, lineno=152, col_offset=36), Mult(), Num(1024, lineno=152, col_offset=43), lineno=152, col_offset=36), lineno=152, col_offset=30)), keyword('memuse', Num(2, lineno=152, col_offset=56))], None, None, lineno=152, col_offset=5)], lineno=152, col_offset=4)], [], lineno=126, col_offset=0), ClassDef('CompressObjectTestCase', [Name('BaseCompressTestCase', Load(), lineno=157, col_offset=29), Attribute(Name('unittest', Load(), lineno=157, col_offset=51), 'TestCase', Load(), lineno=157, col_offset=51)], [FunctionDef('test_pair', arguments([Name('self', Param(), lineno=159, col_offset=18)], None, None, []), [Assign([Name('data', Store(), lineno=161, col_offset=8)], BinOp(Name('HAMLET_SCENE', Load(), lineno=161, col_offset=15), Mult(), Num(128, lineno=161, col_offset=30), lineno=161, col_offset=15), lineno=161, col_offset=8), Assign([Name('co', Store(), lineno=162, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=162, col_offset=13), 'compressobj', Load(), lineno=162, col_offset=13), [], [], None, None, lineno=162, col_offset=13), lineno=162, col_offset=8), Assign([Name('x1', Store(), lineno=163, col_offset=8)], Call(Attribute(Name('co', Load(), lineno=163, col_offset=13), 'compress', Load(), lineno=163, col_offset=13), [Name('data', Load(), lineno=163, col_offset=25)], [], None, None, lineno=163, col_offset=13), lineno=163, col_offset=8), Assign([Name('x2', Store(), lineno=164, col_offset=8)], Call(Attribute(Name('co', Load(), lineno=164, col_offset=13), 'flush', Load(), lineno=164, col_offset=13), [], [], None, None, lineno=164, col_offset=13), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'assertRaises', Load(), lineno=165, col_offset=8), [Attribute(Name('zlib', Load(), lineno=165, col_offset=26), 'error', Load(), lineno=165, col_offset=26), Attribute(Name('co', Load(), lineno=165, col_offset=38), 'flush', Load(), lineno=165, col_offset=38)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Assign([Name('dco', Store(), lineno=166, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=166, col_offset=14), 'decompressobj', Load(), lineno=166, col_offset=14), [], [], None, None, lineno=166, col_offset=14), lineno=166, col_offset=8), Assign([Name('y1', Store(), lineno=167, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=167, col_offset=13), 'decompress', Load(), lineno=167, col_offset=13), [BinOp(Name('x1', Load(), lineno=167, col_offset=28), Add(), Name('x2', Load(), lineno=167, col_offset=33), lineno=167, col_offset=28)], [], None, None, lineno=167, col_offset=13), lineno=167, col_offset=8), Assign([Name('y2', Store(), lineno=168, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=168, col_offset=13), 'flush', Load(), lineno=168, col_offset=13), [], [], None, None, lineno=168, col_offset=13), lineno=168, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'assertEqual', Load(), lineno=169, col_offset=8), [Name('data', Load(), lineno=169, col_offset=25), BinOp(Name('y1', Load(), lineno=169, col_offset=31), Add(), Name('y2', Load(), lineno=169, col_offset=36), lineno=169, col_offset=31)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('test_compressoptions', arguments([Name('self', Param(), lineno=171, col_offset=29)], None, None, []), [Assign([Name('level', Store(), lineno=173, col_offset=8)], Num(2, lineno=173, col_offset=16), lineno=173, col_offset=8), Assign([Name('method', Store(), lineno=174, col_offset=8)], Attribute(Name('zlib', Load(), lineno=174, col_offset=17), 'DEFLATED', Load(), lineno=174, col_offset=17), lineno=174, col_offset=8), Assign([Name('wbits', Store(), lineno=175, col_offset=8)], Num(-12, lineno=175, col_offset=17), lineno=175, col_offset=8), Assign([Name('memlevel', Store(), lineno=176, col_offset=8)], Num(9, lineno=176, col_offset=19), lineno=176, col_offset=8), Assign([Name('strategy', Store(), lineno=177, col_offset=8)], Attribute(Name('zlib', Load(), lineno=177, col_offset=19), 'Z_FILTERED', Load(), lineno=177, col_offset=19), lineno=177, col_offset=8), Assign([Name('co', Store(), lineno=178, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=178, col_offset=13), 'compressobj', Load(), lineno=178, col_offset=13), [Name('level', Load(), lineno=178, col_offset=30), Name('method', Load(), lineno=178, col_offset=37), Name('wbits', Load(), lineno=178, col_offset=45), Name('memlevel', Load(), lineno=178, col_offset=52), Name('strategy', Load(), lineno=178, col_offset=62)], [], None, None, lineno=178, col_offset=13), lineno=178, col_offset=8), Assign([Name('x1', Store(), lineno=179, col_offset=8)], Call(Attribute(Name('co', Load(), lineno=179, col_offset=13), 'compress', Load(), lineno=179, col_offset=13), [Name('HAMLET_SCENE', Load(), lineno=179, col_offset=25)], [], None, None, lineno=179, col_offset=13), lineno=179, col_offset=8), Assign([Name('x2', Store(), lineno=180, col_offset=8)], Call(Attribute(Name('co', Load(), lineno=180, col_offset=13), 'flush', Load(), lineno=180, col_offset=13), [], [], None, None, lineno=180, col_offset=13), lineno=180, col_offset=8), Assign([Name('dco', Store(), lineno=181, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=181, col_offset=14), 'decompressobj', Load(), lineno=181, col_offset=14), [Name('wbits', Load(), lineno=181, col_offset=33)], [], None, None, lineno=181, col_offset=14), lineno=181, col_offset=8), Assign([Name('y1', Store(), lineno=182, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=182, col_offset=13), 'decompress', Load(), lineno=182, col_offset=13), [BinOp(Name('x1', Load(), lineno=182, col_offset=28), Add(), Name('x2', Load(), lineno=182, col_offset=33), lineno=182, col_offset=28)], [], None, None, lineno=182, col_offset=13), lineno=182, col_offset=8), Assign([Name('y2', Store(), lineno=183, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=183, col_offset=13), 'flush', Load(), lineno=183, col_offset=13), [], [], None, None, lineno=183, col_offset=13), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'assertEqual', Load(), lineno=184, col_offset=8), [Name('HAMLET_SCENE', Load(), lineno=184, col_offset=25), BinOp(Name('y1', Load(), lineno=184, col_offset=39), Add(), Name('y2', Load(), lineno=184, col_offset=44), lineno=184, col_offset=39)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('test_compressincremental', arguments([Name('self', Param(), lineno=186, col_offset=33)], None, None, []), [Assign([Name('data', Store(), lineno=188, col_offset=8)], BinOp(Name('HAMLET_SCENE', Load(), lineno=188, col_offset=15), Mult(), Num(128, lineno=188, col_offset=30), lineno=188, col_offset=15), lineno=188, col_offset=8), Assign([Name('co', Store(), lineno=189, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=189, col_offset=13), 'compressobj', Load(), lineno=189, col_offset=13), [], [], None, None, lineno=189, col_offset=13), lineno=189, col_offset=8), Assign([Name('bufs', Store(), lineno=190, col_offset=8)], List([], Load(), lineno=190, col_offset=15), lineno=190, col_offset=8), For(Name('i', Store(), lineno=191, col_offset=12), Call(Name('range', Load(), lineno=191, col_offset=17), [Num(0, lineno=191, col_offset=23), Call(Name('len', Load(), lineno=191, col_offset=26), [Name('data', Load(), lineno=191, col_offset=30)], [], None, None, lineno=191, col_offset=26), Num(256, lineno=191, col_offset=37)], [], None, None, lineno=191, col_offset=17), [Expr(Call(Attribute(Name('bufs', Load(), lineno=192, col_offset=12), 'append', Load(), lineno=192, col_offset=12), [Call(Attribute(Name('co', Load(), lineno=192, col_offset=24), 'compress', Load(), lineno=192, col_offset=24), [Subscript(Name('data', Load(), lineno=192, col_offset=36), Slice(Name('i', Load(), lineno=192, col_offset=41), BinOp(Name('i', Load(), lineno=192, col_offset=43), Add(), Num(256, lineno=192, col_offset=45), lineno=192, col_offset=43), None), Load(), lineno=192, col_offset=36)], [], None, None, lineno=192, col_offset=24)], [], None, None, lineno=192, col_offset=12), lineno=192, col_offset=12)], [], lineno=191, col_offset=8), Expr(Call(Attribute(Name('bufs', Load(), lineno=193, col_offset=8), 'append', Load(), lineno=193, col_offset=8), [Call(Attribute(Name('co', Load(), lineno=193, col_offset=20), 'flush', Load(), lineno=193, col_offset=20), [], [], None, None, lineno=193, col_offset=20)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Assign([Name('combuf', Store(), lineno=194, col_offset=8)], Call(Attribute(Str('', lineno=194, col_offset=17), 'join', Load(), lineno=194, col_offset=17), [Name('bufs', Load(), lineno=194, col_offset=25)], [], None, None, lineno=194, col_offset=17), lineno=194, col_offset=8), Assign([Name('dco', Store(), lineno=196, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=196, col_offset=14), 'decompressobj', Load(), lineno=196, col_offset=14), [], [], None, None, lineno=196, col_offset=14), lineno=196, col_offset=8), Assign([Name('y1', Store(), lineno=197, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=197, col_offset=13), 'decompress', Load(), lineno=197, col_offset=13), [Call(Attribute(Str('', lineno=197, col_offset=28), 'join', Load(), lineno=197, col_offset=28), [Name('bufs', Load(), lineno=197, col_offset=36)], [], None, None, lineno=197, col_offset=28)], [], None, None, lineno=197, col_offset=13), lineno=197, col_offset=8), Assign([Name('y2', Store(), lineno=198, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=198, col_offset=13), 'flush', Load(), lineno=198, col_offset=13), [], [], None, None, lineno=198, col_offset=13), lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Name('data', Load(), lineno=199, col_offset=25), BinOp(Name('y1', Load(), lineno=199, col_offset=31), Add(), Name('y2', Load(), lineno=199, col_offset=36), lineno=199, col_offset=31)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('test_decompinc', arguments([Name('self', Param(), lineno=201, col_offset=23), Name('flush', Param(), lineno=201, col_offset=29), Name('source', Param(), lineno=201, col_offset=42), Name('cx', Param(), lineno=201, col_offset=55), Name('dcx', Param(), lineno=201, col_offset=63)], None, None, [Name('False', Load(), lineno=201, col_offset=35), Name('None', Load(), lineno=201, col_offset=49), Num(256, lineno=201, col_offset=58), Num(64, lineno=201, col_offset=67)]), [Assign([Name('source', Store(), lineno=203, col_offset=8)], BoolOp(Or(), [Name('source', Load(), lineno=203, col_offset=17), Name('HAMLET_SCENE', Load(), lineno=203, col_offset=27)], lineno=203, col_offset=17), lineno=203, col_offset=8), Assign([Name('data', Store(), lineno=204, col_offset=8)], BinOp(Name('source', Load(), lineno=204, col_offset=15), Mult(), Num(128, lineno=204, col_offset=24), lineno=204, col_offset=15), lineno=204, col_offset=8), Assign([Name('co', Store(), lineno=205, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=205, col_offset=13), 'compressobj', Load(), lineno=205, col_offset=13), [], [], None, None, lineno=205, col_offset=13), lineno=205, col_offset=8), Assign([Name('bufs', Store(), lineno=206, col_offset=8)], List([], Load(), lineno=206, col_offset=15), lineno=206, col_offset=8), For(Name('i', Store(), lineno=207, col_offset=12), Call(Name('range', Load(), lineno=207, col_offset=17), [Num(0, lineno=207, col_offset=23), Call(Name('len', Load(), lineno=207, col_offset=26), [Name('data', Load(), lineno=207, col_offset=30)], [], None, None, lineno=207, col_offset=26), Name('cx', Load(), lineno=207, col_offset=37)], [], None, None, lineno=207, col_offset=17), [Expr(Call(Attribute(Name('bufs', Load(), lineno=208, col_offset=12), 'append', Load(), lineno=208, col_offset=12), [Call(Attribute(Name('co', Load(), lineno=208, col_offset=24), 'compress', Load(), lineno=208, col_offset=24), [Subscript(Name('data', Load(), lineno=208, col_offset=36), Slice(Name('i', Load(), lineno=208, col_offset=41), BinOp(Name('i', Load(), lineno=208, col_offset=43), Add(), Name('cx', Load(), lineno=208, col_offset=45), lineno=208, col_offset=43), None), Load(), lineno=208, col_offset=36)], [], None, None, lineno=208, col_offset=24)], [], None, None, lineno=208, col_offset=12), lineno=208, col_offset=12)], [], lineno=207, col_offset=8), Expr(Call(Attribute(Name('bufs', Load(), lineno=209, col_offset=8), 'append', Load(), lineno=209, col_offset=8), [Call(Attribute(Name('co', Load(), lineno=209, col_offset=20), 'flush', Load(), lineno=209, col_offset=20), [], [], None, None, lineno=209, col_offset=20)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Assign([Name('combuf', Store(), lineno=210, col_offset=8)], Call(Attribute(Str('', lineno=210, col_offset=17), 'join', Load(), lineno=210, col_offset=17), [Name('bufs', Load(), lineno=210, col_offset=25)], [], None, None, lineno=210, col_offset=17), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertEqual', Load(), lineno=212, col_offset=8), [Name('data', Load(), lineno=212, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=212, col_offset=31), 'decompress', Load(), lineno=212, col_offset=31), [Name('combuf', Load(), lineno=212, col_offset=47)], [], None, None, lineno=212, col_offset=31)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Assign([Name('dco', Store(), lineno=214, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=214, col_offset=14), 'decompressobj', Load(), lineno=214, col_offset=14), [], [], None, None, lineno=214, col_offset=14), lineno=214, col_offset=8), Assign([Name('bufs', Store(), lineno=215, col_offset=8)], List([], Load(), lineno=215, col_offset=15), lineno=215, col_offset=8), For(Name('i', Store(), lineno=216, col_offset=12), Call(Name('range', Load(), lineno=216, col_offset=17), [Num(0, lineno=216, col_offset=23), Call(Name('len', Load(), lineno=216, col_offset=26), [Name('combuf', Load(), lineno=216, col_offset=30)], [], None, None, lineno=216, col_offset=26), Name('dcx', Load(), lineno=216, col_offset=39)], [], None, None, lineno=216, col_offset=17), [Expr(Call(Attribute(Name('bufs', Load(), lineno=217, col_offset=12), 'append', Load(), lineno=217, col_offset=12), [Call(Attribute(Name('dco', Load(), lineno=217, col_offset=24), 'decompress', Load(), lineno=217, col_offset=24), [Subscript(Name('combuf', Load(), lineno=217, col_offset=39), Slice(Name('i', Load(), lineno=217, col_offset=46), BinOp(Name('i', Load(), lineno=217, col_offset=48), Add(), Name('dcx', Load(), lineno=217, col_offset=50), lineno=217, col_offset=48), None), Load(), lineno=217, col_offset=39)], [], None, None, lineno=217, col_offset=24)], [], None, None, lineno=217, col_offset=12), lineno=217, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=12), 'assertEqual', Load(), lineno=218, col_offset=12), [Str('', lineno=218, col_offset=29), Attribute(Name('dco', Load(), lineno=218, col_offset=33), 'unconsumed_tail', Load(), lineno=218, col_offset=33), BinOp(Str("(A) uct should be '': not %d long", lineno=219, col_offset=29), Mod(), Call(Name('len', Load(), lineno=220, col_offset=39), [Attribute(Name('dco', Load(), lineno=220, col_offset=43), 'unconsumed_tail', Load(), lineno=220, col_offset=43)], [], None, None, lineno=220, col_offset=39), lineno=219, col_offset=29)], [], None, None, lineno=218, col_offset=12), lineno=218, col_offset=12)], [], lineno=216, col_offset=8), If(Name('flush', Load(), lineno=221, col_offset=11), [Expr(Call(Attribute(Name('bufs', Load(), lineno=222, col_offset=12), 'append', Load(), lineno=222, col_offset=12), [Call(Attribute(Name('dco', Load(), lineno=222, col_offset=24), 'flush', Load(), lineno=222, col_offset=24), [], [], None, None, lineno=222, col_offset=24)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12)], [While(Name('True', Load(), lineno=224, col_offset=18), [Assign([Name('chunk', Store(), lineno=225, col_offset=16)], Call(Attribute(Name('dco', Load(), lineno=225, col_offset=24), 'decompress', Load(), lineno=225, col_offset=24), [Str('', lineno=225, col_offset=39)], [], None, None, lineno=225, col_offset=24), lineno=225, col_offset=16), If(Name('chunk', Load(), lineno=226, col_offset=19), [Expr(Call(Attribute(Name('bufs', Load(), lineno=227, col_offset=20), 'append', Load(), lineno=227, col_offset=20), [Name('chunk', Load(), lineno=227, col_offset=32)], [], None, None, lineno=227, col_offset=20), lineno=227, col_offset=20)], [Break( lineno=229, col_offset=20)], lineno=226, col_offset=16)], [], lineno=224, col_offset=12)], lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=8), 'assertEqual', Load(), lineno=230, col_offset=8), [Str('', lineno=230, col_offset=25), Attribute(Name('dco', Load(), lineno=230, col_offset=29), 'unconsumed_tail', Load(), lineno=230, col_offset=29), BinOp(Str("(B) uct should be '': not %d long", lineno=231, col_offset=25), Mod(), Call(Name('len', Load(), lineno=232, col_offset=39), [Attribute(Name('dco', Load(), lineno=232, col_offset=43), 'unconsumed_tail', Load(), lineno=232, col_offset=43)], [], None, None, lineno=232, col_offset=39), lineno=231, col_offset=25)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'assertEqual', Load(), lineno=233, col_offset=8), [Name('data', Load(), lineno=233, col_offset=25), Call(Attribute(Str('', lineno=233, col_offset=31), 'join', Load(), lineno=233, col_offset=31), [Name('bufs', Load(), lineno=233, col_offset=39)], [], None, None, lineno=233, col_offset=31)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('test_decompincflush', arguments([Name('self', Param(), lineno=236, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'test_decompinc', Load(), lineno=237, col_offset=8), [], [keyword('flush', Name('True', Load(), lineno=237, col_offset=34))], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8)], [], lineno=236, col_offset=4), FunctionDef('test_decompimax', arguments([Name('self', Param(), lineno=239, col_offset=24), Name('source', Param(), lineno=239, col_offset=30), Name('cx', Param(), lineno=239, col_offset=43), Name('dcx', Param(), lineno=239, col_offset=51)], None, None, [Name('None', Load(), lineno=239, col_offset=37), Num(256, lineno=239, col_offset=46), Num(64, lineno=239, col_offset=55)]), [Assign([Name('source', Store(), lineno=241, col_offset=8)], BoolOp(Or(), [Name('source', Load(), lineno=241, col_offset=17), Name('HAMLET_SCENE', Load(), lineno=241, col_offset=27)], lineno=241, col_offset=17), lineno=241, col_offset=8), Assign([Name('data', Store(), lineno=243, col_offset=8)], BinOp(Name('source', Load(), lineno=243, col_offset=15), Mult(), Num(128, lineno=243, col_offset=24), lineno=243, col_offset=15), lineno=243, col_offset=8), Assign([Name('co', Store(), lineno=244, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=244, col_offset=13), 'compressobj', Load(), lineno=244, col_offset=13), [], [], None, None, lineno=244, col_offset=13), lineno=244, col_offset=8), Assign([Name('bufs', Store(), lineno=245, col_offset=8)], List([], Load(), lineno=245, col_offset=15), lineno=245, col_offset=8), For(Name('i', Store(), lineno=246, col_offset=12), Call(Name('range', Load(), lineno=246, col_offset=17), [Num(0, lineno=246, col_offset=23), Call(Name('len', Load(), lineno=246, col_offset=26), [Name('data', Load(), lineno=246, col_offset=30)], [], None, None, lineno=246, col_offset=26), Name('cx', Load(), lineno=246, col_offset=37)], [], None, None, lineno=246, col_offset=17), [Expr(Call(Attribute(Name('bufs', Load(), lineno=247, col_offset=12), 'append', Load(), lineno=247, col_offset=12), [Call(Attribute(Name('co', Load(), lineno=247, col_offset=24), 'compress', Load(), lineno=247, col_offset=24), [Subscript(Name('data', Load(), lineno=247, col_offset=36), Slice(Name('i', Load(), lineno=247, col_offset=41), BinOp(Name('i', Load(), lineno=247, col_offset=43), Add(), Name('cx', Load(), lineno=247, col_offset=45), lineno=247, col_offset=43), None), Load(), lineno=247, col_offset=36)], [], None, None, lineno=247, col_offset=24)], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=12)], [], lineno=246, col_offset=8), Expr(Call(Attribute(Name('bufs', Load(), lineno=248, col_offset=8), 'append', Load(), lineno=248, col_offset=8), [Call(Attribute(Name('co', Load(), lineno=248, col_offset=20), 'flush', Load(), lineno=248, col_offset=20), [], [], None, None, lineno=248, col_offset=20)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Assign([Name('combuf', Store(), lineno=249, col_offset=8)], Call(Attribute(Str('', lineno=249, col_offset=17), 'join', Load(), lineno=249, col_offset=17), [Name('bufs', Load(), lineno=249, col_offset=25)], [], None, None, lineno=249, col_offset=17), lineno=249, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'assertEqual', Load(), lineno=250, col_offset=8), [Name('data', Load(), lineno=250, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=250, col_offset=31), 'decompress', Load(), lineno=250, col_offset=31), [Name('combuf', Load(), lineno=250, col_offset=47)], [], None, None, lineno=250, col_offset=31), Str('compressed data failure', lineno=251, col_offset=25)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Assign([Name('dco', Store(), lineno=253, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=253, col_offset=14), 'decompressobj', Load(), lineno=253, col_offset=14), [], [], None, None, lineno=253, col_offset=14), lineno=253, col_offset=8), Assign([Name('bufs', Store(), lineno=254, col_offset=8)], List([], Load(), lineno=254, col_offset=15), lineno=254, col_offset=8), Assign([Name('cb', Store(), lineno=255, col_offset=8)], Name('combuf', Load(), lineno=255, col_offset=13), lineno=255, col_offset=8), While(Name('cb', Load(), lineno=256, col_offset=14), [Assign([Name('chunk', Store(), lineno=258, col_offset=12)], Call(Attribute(Name('dco', Load(), lineno=258, col_offset=20), 'decompress', Load(), lineno=258, col_offset=20), [Name('cb', Load(), lineno=258, col_offset=35), Name('dcx', Load(), lineno=258, col_offset=39)], [], None, None, lineno=258, col_offset=20), lineno=258, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=12), 'assertFalse', Load(), lineno=259, col_offset=12), [Compare(Call(Name('len', Load(), lineno=259, col_offset=29), [Name('chunk', Load(), lineno=259, col_offset=33)], [], None, None, lineno=259, col_offset=29), [Gt()], [Name('dcx', Load(), lineno=259, col_offset=42)], lineno=259, col_offset=29), BinOp(Str('chunk too big (%d>%d)', lineno=260, col_offset=20), Mod(), Tuple([Call(Name('len', Load(), lineno=260, col_offset=47), [Name('chunk', Load(), lineno=260, col_offset=51)], [], None, None, lineno=260, col_offset=47), Name('dcx', Load(), lineno=260, col_offset=59)], Load(), lineno=260, col_offset=47), lineno=260, col_offset=20)], [], None, None, lineno=259, col_offset=12), lineno=259, col_offset=12), Expr(Call(Attribute(Name('bufs', Load(), lineno=261, col_offset=12), 'append', Load(), lineno=261, col_offset=12), [Name('chunk', Load(), lineno=261, col_offset=24)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=12), Assign([Name('cb', Store(), lineno=262, col_offset=12)], Attribute(Name('dco', Load(), lineno=262, col_offset=17), 'unconsumed_tail', Load(), lineno=262, col_offset=17), lineno=262, col_offset=12)], [], lineno=256, col_offset=8), Expr(Call(Attribute(Name('bufs', Load(), lineno=263, col_offset=8), 'append', Load(), lineno=263, col_offset=8), [Call(Attribute(Name('dco', Load(), lineno=263, col_offset=20), 'flush', Load(), lineno=263, col_offset=20), [], [], None, None, lineno=263, col_offset=20)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=8), 'assertEqual', Load(), lineno=264, col_offset=8), [Name('data', Load(), lineno=264, col_offset=25), Call(Attribute(Str('', lineno=264, col_offset=31), 'join', Load(), lineno=264, col_offset=31), [Name('bufs', Load(), lineno=264, col_offset=39)], [], None, None, lineno=264, col_offset=31), Str('Wrong data retrieved', lineno=264, col_offset=46)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8)], [], lineno=239, col_offset=4), FunctionDef('test_decompressmaxlen', arguments([Name('self', Param(), lineno=266, col_offset=30), Name('flush', Param(), lineno=266, col_offset=36)], None, None, [Name('False', Load(), lineno=266, col_offset=42)]), [Assign([Name('data', Store(), lineno=268, col_offset=8)], BinOp(Name('HAMLET_SCENE', Load(), lineno=268, col_offset=15), Mult(), Num(128, lineno=268, col_offset=30), lineno=268, col_offset=15), lineno=268, col_offset=8), Assign([Name('co', Store(), lineno=269, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=269, col_offset=13), 'compressobj', Load(), lineno=269, col_offset=13), [], [], None, None, lineno=269, col_offset=13), lineno=269, col_offset=8), Assign([Name('bufs', Store(), lineno=270, col_offset=8)], List([], Load(), lineno=270, col_offset=15), lineno=270, col_offset=8), For(Name('i', Store(), lineno=271, col_offset=12), Call(Name('range', Load(), lineno=271, col_offset=17), [Num(0, lineno=271, col_offset=23), Call(Name('len', Load(), lineno=271, col_offset=26), [Name('data', Load(), lineno=271, col_offset=30)], [], None, None, lineno=271, col_offset=26), Num(256, lineno=271, col_offset=37)], [], None, None, lineno=271, col_offset=17), [Expr(Call(Attribute(Name('bufs', Load(), lineno=272, col_offset=12), 'append', Load(), lineno=272, col_offset=12), [Call(Attribute(Name('co', Load(), lineno=272, col_offset=24), 'compress', Load(), lineno=272, col_offset=24), [Subscript(Name('data', Load(), lineno=272, col_offset=36), Slice(Name('i', Load(), lineno=272, col_offset=41), BinOp(Name('i', Load(), lineno=272, col_offset=43), Add(), Num(256, lineno=272, col_offset=45), lineno=272, col_offset=43), None), Load(), lineno=272, col_offset=36)], [], None, None, lineno=272, col_offset=24)], [], None, None, lineno=272, col_offset=12), lineno=272, col_offset=12)], [], lineno=271, col_offset=8), Expr(Call(Attribute(Name('bufs', Load(), lineno=273, col_offset=8), 'append', Load(), lineno=273, col_offset=8), [Call(Attribute(Name('co', Load(), lineno=273, col_offset=20), 'flush', Load(), lineno=273, col_offset=20), [], [], None, None, lineno=273, col_offset=20)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Assign([Name('combuf', Store(), lineno=274, col_offset=8)], Call(Attribute(Str('', lineno=274, col_offset=17), 'join', Load(), lineno=274, col_offset=17), [Name('bufs', Load(), lineno=274, col_offset=25)], [], None, None, lineno=274, col_offset=17), lineno=274, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=8), 'assertEqual', Load(), lineno=275, col_offset=8), [Name('data', Load(), lineno=275, col_offset=25), Call(Attribute(Name('zlib', Load(), lineno=275, col_offset=31), 'decompress', Load(), lineno=275, col_offset=31), [Name('combuf', Load(), lineno=275, col_offset=47)], [], None, None, lineno=275, col_offset=31), Str('compressed data failure', lineno=276, col_offset=25)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Assign([Name('dco', Store(), lineno=278, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=278, col_offset=14), 'decompressobj', Load(), lineno=278, col_offset=14), [], [], None, None, lineno=278, col_offset=14), lineno=278, col_offset=8), Assign([Name('bufs', Store(), lineno=279, col_offset=8)], List([], Load(), lineno=279, col_offset=15), lineno=279, col_offset=8), Assign([Name('cb', Store(), lineno=280, col_offset=8)], Name('combuf', Load(), lineno=280, col_offset=13), lineno=280, col_offset=8), While(Name('cb', Load(), lineno=281, col_offset=14), [Assign([Name('max_length', Store(), lineno=282, col_offset=12)], BinOp(Num(1, lineno=282, col_offset=25), Add(), BinOp(Call(Name('len', Load(), lineno=282, col_offset=29), [Name('cb', Load(), lineno=282, col_offset=33)], [], None, None, lineno=282, col_offset=29), FloorDiv(), Num(10, lineno=282, col_offset=38), lineno=282, col_offset=29), lineno=282, col_offset=25), lineno=282, col_offset=12), Assign([Name('chunk', Store(), lineno=283, col_offset=12)], Call(Attribute(Name('dco', Load(), lineno=283, col_offset=20), 'decompress', Load(), lineno=283, col_offset=20), [Name('cb', Load(), lineno=283, col_offset=35), Name('max_length', Load(), lineno=283, col_offset=39)], [], None, None, lineno=283, col_offset=20), lineno=283, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=12), 'assertFalse', Load(), lineno=284, col_offset=12), [Compare(Call(Name('len', Load(), lineno=284, col_offset=29), [Name('chunk', Load(), lineno=284, col_offset=33)], [], None, None, lineno=284, col_offset=29), [Gt()], [Name('max_length', Load(), lineno=284, col_offset=42)], lineno=284, col_offset=29), BinOp(Str('chunk too big (%d>%d)', lineno=285, col_offset=24), Mod(), Tuple([Call(Name('len', Load(), lineno=285, col_offset=51), [Name('chunk', Load(), lineno=285, col_offset=55)], [], None, None, lineno=285, col_offset=51), Name('max_length', Load(), lineno=285, col_offset=62)], Load(), lineno=285, col_offset=51), lineno=285, col_offset=24)], [], None, None, lineno=284, col_offset=12), lineno=284, col_offset=12), Expr(Call(Attribute(Name('bufs', Load(), lineno=286, col_offset=12), 'append', Load(), lineno=286, col_offset=12), [Name('chunk', Load(), lineno=286, col_offset=24)], [], None, None, lineno=286, col_offset=12), lineno=286, col_offset=12), Assign([Name('cb', Store(), lineno=287, col_offset=12)], Attribute(Name('dco', Load(), lineno=287, col_offset=17), 'unconsumed_tail', Load(), lineno=287, col_offset=17), lineno=287, col_offset=12)], [], lineno=281, col_offset=8), If(Name('flush', Load(), lineno=288, col_offset=11), [Expr(Call(Attribute(Name('bufs', Load(), lineno=289, col_offset=12), 'append', Load(), lineno=289, col_offset=12), [Call(Attribute(Name('dco', Load(), lineno=289, col_offset=24), 'flush', Load(), lineno=289, col_offset=24), [], [], None, None, lineno=289, col_offset=24)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=12)], [While(Name('chunk', Load(), lineno=291, col_offset=18), [Assign([Name('chunk', Store(), lineno=292, col_offset=16)], Call(Attribute(Name('dco', Load(), lineno=292, col_offset=24), 'decompress', Load(), lineno=292, col_offset=24), [Str('', lineno=292, col_offset=39), Name('max_length', Load(), lineno=292, col_offset=43)], [], None, None, lineno=292, col_offset=24), lineno=292, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=16), 'assertFalse', Load(), lineno=293, col_offset=16), [Compare(Call(Name('len', Load(), lineno=293, col_offset=33), [Name('chunk', Load(), lineno=293, col_offset=37)], [], None, None, lineno=293, col_offset=33), [Gt()], [Name('max_length', Load(), lineno=293, col_offset=46)], lineno=293, col_offset=33), BinOp(Str('chunk too big (%d>%d)', lineno=294, col_offset=28), Mod(), Tuple([Call(Name('len', Load(), lineno=294, col_offset=55), [Name('chunk', Load(), lineno=294, col_offset=59)], [], None, None, lineno=294, col_offset=55), Name('max_length', Load(), lineno=294, col_offset=66)], Load(), lineno=294, col_offset=55), lineno=294, col_offset=28)], [], None, None, lineno=293, col_offset=16), lineno=293, col_offset=16), Expr(Call(Attribute(Name('bufs', Load(), lineno=295, col_offset=16), 'append', Load(), lineno=295, col_offset=16), [Name('chunk', Load(), lineno=295, col_offset=28)], [], None, None, lineno=295, col_offset=16), lineno=295, col_offset=16)], [], lineno=291, col_offset=12)], lineno=288, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'assertEqual', Load(), lineno=296, col_offset=8), [Name('data', Load(), lineno=296, col_offset=25), Call(Attribute(Str('', lineno=296, col_offset=31), 'join', Load(), lineno=296, col_offset=31), [Name('bufs', Load(), lineno=296, col_offset=39)], [], None, None, lineno=296, col_offset=31), Str('Wrong data retrieved', lineno=296, col_offset=46)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('test_decompressmaxlenflush', arguments([Name('self', Param(), lineno=298, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=299, col_offset=8), 'test_decompressmaxlen', Load(), lineno=299, col_offset=8), [], [keyword('flush', Name('True', Load(), lineno=299, col_offset=41))], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8)], [], lineno=298, col_offset=4), FunctionDef('test_maxlenmisc', arguments([Name('self', Param(), lineno=301, col_offset=24)], None, None, []), [Assign([Name('dco', Store(), lineno=303, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=303, col_offset=14), 'decompressobj', Load(), lineno=303, col_offset=14), [], [], None, None, lineno=303, col_offset=14), lineno=303, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=304, col_offset=8), 'assertRaises', Load(), lineno=304, col_offset=8), [Name('ValueError', Load(), lineno=304, col_offset=26), Attribute(Name('dco', Load(), lineno=304, col_offset=38), 'decompress', Load(), lineno=304, col_offset=38), Str('', lineno=304, col_offset=54), Num(-1, lineno=304, col_offset=59)], [], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'assertEqual', Load(), lineno=305, col_offset=8), [Str('', lineno=305, col_offset=25), Attribute(Name('dco', Load(), lineno=305, col_offset=29), 'unconsumed_tail', Load(), lineno=305, col_offset=29)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8)], [], lineno=301, col_offset=4), FunctionDef('test_flushes', arguments([Name('self', Param(), lineno=307, col_offset=21)], None, None, []), [Assign([Name('sync_opt', Store(), lineno=310, col_offset=8)], List([Str('Z_NO_FLUSH', lineno=310, col_offset=20), Str('Z_SYNC_FLUSH', lineno=310, col_offset=34), Str('Z_FULL_FLUSH', lineno=310, col_offset=50)], Load(), lineno=310, col_offset=19), lineno=310, col_offset=8), Assign([Name('sync_opt', Store(), lineno=311, col_offset=8)], ListComp(Call(Name('getattr', Load(), lineno=311, col_offset=20), [Name('zlib', Load(), lineno=311, col_offset=28), Name('opt', Load(), lineno=311, col_offset=34)], [], None, None, lineno=311, col_offset=20), [comprehension(Name('opt', Store(), lineno=311, col_offset=43), Name('sync_opt', Load(), lineno=311, col_offset=50), [Call(Name('hasattr', Load(), lineno=312, col_offset=23), [Name('zlib', Load(), lineno=312, col_offset=31), Name('opt', Load(), lineno=312, col_offset=37)], [], None, None, lineno=312, col_offset=23)])], lineno=311, col_offset=20), lineno=311, col_offset=8), Assign([Name('data', Store(), lineno=313, col_offset=8)], BinOp(Name('HAMLET_SCENE', Load(), lineno=313, col_offset=15), Mult(), Num(8, lineno=313, col_offset=30), lineno=313, col_offset=15), lineno=313, col_offset=8), For(Name('sync', Store(), lineno=315, col_offset=12), Name('sync_opt', Load(), lineno=315, col_offset=20), [For(Name('level', Store(), lineno=316, col_offset=16), Call(Name('range', Load(), lineno=316, col_offset=25), [Num(10, lineno=316, col_offset=31)], [], None, None, lineno=316, col_offset=25), [Assign([Name('obj', Store(), lineno=317, col_offset=16)], Call(Attribute(Name('zlib', Load(), lineno=317, col_offset=22), 'compressobj', Load(), lineno=317, col_offset=22), [Name('level', Load(), lineno=317, col_offset=40)], [], None, None, lineno=317, col_offset=22), lineno=317, col_offset=16), Assign([Name('a', Store(), lineno=318, col_offset=16)], Call(Attribute(Name('obj', Load(), lineno=318, col_offset=20), 'compress', Load(), lineno=318, col_offset=20), [Subscript(Name('data', Load(), lineno=318, col_offset=34), Slice(None, Num(3000, lineno=318, col_offset=40), None), Load(), lineno=318, col_offset=34)], [], None, None, lineno=318, col_offset=20), lineno=318, col_offset=16), Assign([Name('b', Store(), lineno=319, col_offset=16)], Call(Attribute(Name('obj', Load(), lineno=319, col_offset=20), 'flush', Load(), lineno=319, col_offset=20), [Name('sync', Load(), lineno=319, col_offset=31)], [], None, None, lineno=319, col_offset=20), lineno=319, col_offset=16), Assign([Name('c', Store(), lineno=320, col_offset=16)], Call(Attribute(Name('obj', Load(), lineno=320, col_offset=20), 'compress', Load(), lineno=320, col_offset=20), [Subscript(Name('data', Load(), lineno=320, col_offset=34), Slice(Num(3000, lineno=320, col_offset=39), None, None), Load(), lineno=320, col_offset=34)], [], None, None, lineno=320, col_offset=20), lineno=320, col_offset=16), Assign([Name('d', Store(), lineno=321, col_offset=16)], Call(Attribute(Name('obj', Load(), lineno=321, col_offset=20), 'flush', Load(), lineno=321, col_offset=20), [], [], None, None, lineno=321, col_offset=20), lineno=321, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=16), 'assertEqual', Load(), lineno=322, col_offset=16), [Call(Attribute(Name('zlib', Load(), lineno=322, col_offset=33), 'decompress', Load(), lineno=322, col_offset=33), [Call(Attribute(Str('', lineno=322, col_offset=49), 'join', Load(), lineno=322, col_offset=49), [List([Name('a', Load(), lineno=322, col_offset=58), Name('b', Load(), lineno=322, col_offset=60), Name('c', Load(), lineno=322, col_offset=62), Name('d', Load(), lineno=322, col_offset=64)], Load(), lineno=322, col_offset=57)], [], None, None, lineno=322, col_offset=49)], [], None, None, lineno=322, col_offset=33), Name('data', Load(), lineno=323, col_offset=33), BinOp(Str('Decompress failed: flush mode=%i, level=%i', lineno=323, col_offset=40), Mod(), Tuple([Name('sync', Load(), lineno=324, col_offset=64), Name('level', Load(), lineno=324, col_offset=70)], Load(), lineno=324, col_offset=64), lineno=323, col_offset=39)], [], None, None, lineno=322, col_offset=16), lineno=322, col_offset=16), Delete([Name('obj', Del(), lineno=325, col_offset=20)], lineno=325, col_offset=16)], [], lineno=316, col_offset=12)], [], lineno=315, col_offset=8)], [], lineno=307, col_offset=4), FunctionDef('test_odd_flush', arguments([Name('self', Param(), lineno=327, col_offset=23)], None, None, []), [Import([alias('random', None)], lineno=329, col_offset=8), If(Call(Name('hasattr', Load(), lineno=331, col_offset=11), [Name('zlib', Load(), lineno=331, col_offset=19), Str('Z_SYNC_FLUSH', lineno=331, col_offset=25)], [], None, None, lineno=331, col_offset=11), [Assign([Name('co', Store(), lineno=335, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=335, col_offset=17), 'compressobj', Load(), lineno=335, col_offset=17), [Attribute(Name('zlib', Load(), lineno=335, col_offset=34), 'Z_BEST_COMPRESSION', Load(), lineno=335, col_offset=34)], [], None, None, lineno=335, col_offset=17), lineno=335, col_offset=12), Assign([Name('dco', Store(), lineno=336, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=336, col_offset=18), 'decompressobj', Load(), lineno=336, col_offset=18), [], [], None, None, lineno=336, col_offset=18), lineno=336, col_offset=12), TryExcept([Assign([Name('gen', Store(), lineno=342, col_offset=16)], Call(Attribute(Name('random', Load(), lineno=342, col_offset=22), 'WichmannHill', Load(), lineno=342, col_offset=22), [], [], None, None, lineno=342, col_offset=22), lineno=342, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=343, col_offset=19), None, [TryExcept([Assign([Name('gen', Store(), lineno=346, col_offset=20)], Call(Attribute(Name('random', Load(), lineno=346, col_offset=26), 'Random', Load(), lineno=346, col_offset=26), [], [], None, None, lineno=346, col_offset=26), lineno=346, col_offset=20)], [ExceptHandler(Name('AttributeError', Load(), lineno=347, col_offset=23), None, [Assign([Name('gen', Store(), lineno=349, col_offset=20)], Name('random', Load(), lineno=349, col_offset=26), lineno=349, col_offset=20)], lineno=347, col_offset=16)], [], lineno=344, col_offset=16)], lineno=343, col_offset=12)], [], lineno=340, col_offset=12), Expr(Call(Attribute(Name('gen', Load(), lineno=350, col_offset=12), 'seed', Load(), lineno=350, col_offset=12), [Num(1, lineno=350, col_offset=21)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=12), Assign([Name('data', Store(), lineno=351, col_offset=12)], Call(Name('genblock', Load(), lineno=351, col_offset=19), [Num(1, lineno=351, col_offset=28), BinOp(Num(17, lineno=351, col_offset=31), Mult(), Num(1024, lineno=351, col_offset=36), lineno=351, col_offset=31)], [keyword('generator', Name('gen', Load(), lineno=351, col_offset=52))], None, None, lineno=351, col_offset=19), lineno=351, col_offset=12), Assign([Name('first', Store(), lineno=354, col_offset=12)], Call(Attribute(Name('co', Load(), lineno=354, col_offset=20), 'compress', Load(), lineno=354, col_offset=20), [Name('data', Load(), lineno=354, col_offset=32)], [], None, None, lineno=354, col_offset=20), lineno=354, col_offset=12), Assign([Name('second', Store(), lineno=355, col_offset=12)], Call(Attribute(Name('co', Load(), lineno=355, col_offset=21), 'flush', Load(), lineno=355, col_offset=21), [Attribute(Name('zlib', Load(), lineno=355, col_offset=30), 'Z_SYNC_FLUSH', Load(), lineno=355, col_offset=30)], [], None, None, lineno=355, col_offset=21), lineno=355, col_offset=12), Assign([Name('expanded', Store(), lineno=356, col_offset=12)], Call(Attribute(Name('dco', Load(), lineno=356, col_offset=23), 'decompress', Load(), lineno=356, col_offset=23), [BinOp(Name('first', Load(), lineno=356, col_offset=38), Add(), Name('second', Load(), lineno=356, col_offset=46), lineno=356, col_offset=38)], [], None, None, lineno=356, col_offset=23), lineno=356, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=12), 'assertEqual', Load(), lineno=359, col_offset=12), [Name('expanded', Load(), lineno=359, col_offset=29), Name('data', Load(), lineno=359, col_offset=39), Str("17K random source doesn't match", lineno=359, col_offset=45)], [], None, None, lineno=359, col_offset=12), lineno=359, col_offset=12)], [], lineno=331, col_offset=8)], [], lineno=327, col_offset=4), FunctionDef('test_empty_flush', arguments([Name('self', Param(), lineno=361, col_offset=25)], None, None, []), [Assign([Name('co', Store(), lineno=366, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=366, col_offset=13), 'compressobj', Load(), lineno=366, col_offset=13), [Attribute(Name('zlib', Load(), lineno=366, col_offset=30), 'Z_BEST_COMPRESSION', Load(), lineno=366, col_offset=30)], [], None, None, lineno=366, col_offset=13), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertTrue', Load(), lineno=367, col_offset=8), [Call(Attribute(Name('co', Load(), lineno=367, col_offset=24), 'flush', Load(), lineno=367, col_offset=24), [], [], None, None, lineno=367, col_offset=24)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Assign([Name('dco', Store(), lineno=368, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=368, col_offset=14), 'decompressobj', Load(), lineno=368, col_offset=14), [], [], None, None, lineno=368, col_offset=14), lineno=368, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'assertEqual', Load(), lineno=369, col_offset=8), [Call(Attribute(Name('dco', Load(), lineno=369, col_offset=25), 'flush', Load(), lineno=369, col_offset=25), [], [], None, None, lineno=369, col_offset=25), Str('', lineno=369, col_offset=38)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8)], [], lineno=361, col_offset=4), FunctionDef('test_decompress_incomplete_stream', arguments([Name('self', Param(), lineno=371, col_offset=42)], None, None, []), [Assign([Name('x', Store(), lineno=373, col_offset=8)], Str('x\x9cK\xcb\xcf\x07\x00\x02\x82\x01E', lineno=373, col_offset=12), lineno=373, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'assertEqual', Load(), lineno=375, col_offset=8), [Call(Attribute(Name('zlib', Load(), lineno=375, col_offset=25), 'decompress', Load(), lineno=375, col_offset=25), [Name('x', Load(), lineno=375, col_offset=41)], [], None, None, lineno=375, col_offset=25), Str('foo', lineno=375, col_offset=45)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertRaises', Load(), lineno=376, col_offset=8), [Attribute(Name('zlib', Load(), lineno=376, col_offset=26), 'error', Load(), lineno=376, col_offset=26), Attribute(Name('zlib', Load(), lineno=376, col_offset=38), 'decompress', Load(), lineno=376, col_offset=38), Subscript(Name('x', Load(), lineno=376, col_offset=55), Slice(None, Num(-5, lineno=376, col_offset=59), None), Load(), lineno=376, col_offset=55)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8), Assign([Name('dco', Store(), lineno=379, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=379, col_offset=14), 'decompressobj', Load(), lineno=379, col_offset=14), [], [], None, None, lineno=379, col_offset=14), lineno=379, col_offset=8), Assign([Name('y', Store(), lineno=380, col_offset=8)], Call(Attribute(Name('dco', Load(), lineno=380, col_offset=12), 'decompress', Load(), lineno=380, col_offset=12), [Subscript(Name('x', Load(), lineno=380, col_offset=27), Slice(None, Num(-5, lineno=380, col_offset=31), None), Load(), lineno=380, col_offset=27)], [], None, None, lineno=380, col_offset=12), lineno=380, col_offset=8), AugAssign(Name('y', Store(), lineno=381, col_offset=8), Add(), Call(Attribute(Name('dco', Load(), lineno=381, col_offset=13), 'flush', Load(), lineno=381, col_offset=13), [], [], None, None, lineno=381, col_offset=13), lineno=381, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'assertEqual', Load(), lineno=382, col_offset=8), [Name('y', Load(), lineno=382, col_offset=25), Str('foo', lineno=382, col_offset=28)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8)], [], lineno=371, col_offset=4), If(Call(Name('hasattr', Load(), lineno=384, col_offset=7), [Call(Attribute(Name('zlib', Load(), lineno=384, col_offset=15), 'compressobj', Load(), lineno=384, col_offset=15), [], [], None, None, lineno=384, col_offset=15), Str('copy', lineno=384, col_offset=35)], [], None, None, lineno=384, col_offset=7), [FunctionDef('test_compresscopy', arguments([Name('self', Param(), lineno=385, col_offset=30)], None, None, []), [Assign([Name('data0', Store(), lineno=387, col_offset=12)], Name('HAMLET_SCENE', Load(), lineno=387, col_offset=20), lineno=387, col_offset=12), Assign([Name('data1', Store(), lineno=388, col_offset=12)], Call(Attribute(Name('HAMLET_SCENE', Load(), lineno=388, col_offset=20), 'swapcase', Load(), lineno=388, col_offset=20), [], [], None, None, lineno=388, col_offset=20), lineno=388, col_offset=12), Assign([Name('c0', Store(), lineno=389, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=389, col_offset=17), 'compressobj', Load(), lineno=389, col_offset=17), [Attribute(Name('zlib', Load(), lineno=389, col_offset=34), 'Z_BEST_COMPRESSION', Load(), lineno=389, col_offset=34)], [], None, None, lineno=389, col_offset=17), lineno=389, col_offset=12), Assign([Name('bufs0', Store(), lineno=390, col_offset=12)], List([], Load(), lineno=390, col_offset=20), lineno=390, col_offset=12), Expr(Call(Attribute(Name('bufs0', Load(), lineno=391, col_offset=12), 'append', Load(), lineno=391, col_offset=12), [Call(Attribute(Name('c0', Load(), lineno=391, col_offset=25), 'compress', Load(), lineno=391, col_offset=25), [Name('data0', Load(), lineno=391, col_offset=37)], [], None, None, lineno=391, col_offset=25)], [], None, None, lineno=391, col_offset=12), lineno=391, col_offset=12), Assign([Name('c1', Store(), lineno=393, col_offset=12)], Call(Attribute(Name('c0', Load(), lineno=393, col_offset=17), 'copy', Load(), lineno=393, col_offset=17), [], [], None, None, lineno=393, col_offset=17), lineno=393, col_offset=12), Assign([Name('bufs1', Store(), lineno=394, col_offset=12)], Subscript(Name('bufs0', Load(), lineno=394, col_offset=20), Slice(None, None, None), Load(), lineno=394, col_offset=20), lineno=394, col_offset=12), Expr(Call(Attribute(Name('bufs0', Load(), lineno=396, col_offset=12), 'append', Load(), lineno=396, col_offset=12), [Call(Attribute(Name('c0', Load(), lineno=396, col_offset=25), 'compress', Load(), lineno=396, col_offset=25), [Name('data0', Load(), lineno=396, col_offset=37)], [], None, None, lineno=396, col_offset=25)], [], None, None, lineno=396, col_offset=12), lineno=396, col_offset=12), Expr(Call(Attribute(Name('bufs0', Load(), lineno=397, col_offset=12), 'append', Load(), lineno=397, col_offset=12), [Call(Attribute(Name('c0', Load(), lineno=397, col_offset=25), 'flush', Load(), lineno=397, col_offset=25), [], [], None, None, lineno=397, col_offset=25)], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12), Assign([Name('s0', Store(), lineno=398, col_offset=12)], Call(Attribute(Str('', lineno=398, col_offset=17), 'join', Load(), lineno=398, col_offset=17), [Name('bufs0', Load(), lineno=398, col_offset=25)], [], None, None, lineno=398, col_offset=17), lineno=398, col_offset=12), Expr(Call(Attribute(Name('bufs1', Load(), lineno=400, col_offset=12), 'append', Load(), lineno=400, col_offset=12), [Call(Attribute(Name('c1', Load(), lineno=400, col_offset=25), 'compress', Load(), lineno=400, col_offset=25), [Name('data1', Load(), lineno=400, col_offset=37)], [], None, None, lineno=400, col_offset=25)], [], None, None, lineno=400, col_offset=12), lineno=400, col_offset=12), Expr(Call(Attribute(Name('bufs1', Load(), lineno=401, col_offset=12), 'append', Load(), lineno=401, col_offset=12), [Call(Attribute(Name('c1', Load(), lineno=401, col_offset=25), 'flush', Load(), lineno=401, col_offset=25), [], [], None, None, lineno=401, col_offset=25)], [], None, None, lineno=401, col_offset=12), lineno=401, col_offset=12), Assign([Name('s1', Store(), lineno=402, col_offset=12)], Call(Attribute(Str('', lineno=402, col_offset=17), 'join', Load(), lineno=402, col_offset=17), [Name('bufs1', Load(), lineno=402, col_offset=25)], [], None, None, lineno=402, col_offset=17), lineno=402, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=12), 'assertEqual', Load(), lineno=404, col_offset=12), [Call(Attribute(Name('zlib', Load(), lineno=404, col_offset=29), 'decompress', Load(), lineno=404, col_offset=29), [Name('s0', Load(), lineno=404, col_offset=45)], [], None, None, lineno=404, col_offset=29), BinOp(Name('data0', Load(), lineno=404, col_offset=49), Add(), Name('data0', Load(), lineno=404, col_offset=55), lineno=404, col_offset=49)], [], None, None, lineno=404, col_offset=12), lineno=404, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=12), 'assertEqual', Load(), lineno=405, col_offset=12), [Call(Attribute(Name('zlib', Load(), lineno=405, col_offset=29), 'decompress', Load(), lineno=405, col_offset=29), [Name('s1', Load(), lineno=405, col_offset=45)], [], None, None, lineno=405, col_offset=29), BinOp(Name('data0', Load(), lineno=405, col_offset=49), Add(), Name('data1', Load(), lineno=405, col_offset=55), lineno=405, col_offset=49)], [], None, None, lineno=405, col_offset=12), lineno=405, col_offset=12)], [], lineno=385, col_offset=8), FunctionDef('test_badcompresscopy', arguments([Name('self', Param(), lineno=407, col_offset=33)], None, None, []), [Assign([Name('c', Store(), lineno=409, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=409, col_offset=16), 'compressobj', Load(), lineno=409, col_offset=16), [], [], None, None, lineno=409, col_offset=16), lineno=409, col_offset=12), Expr(Call(Attribute(Name('c', Load(), lineno=410, col_offset=12), 'compress', Load(), lineno=410, col_offset=12), [Name('HAMLET_SCENE', Load(), lineno=410, col_offset=23)], [], None, None, lineno=410, col_offset=12), lineno=410, col_offset=12), Expr(Call(Attribute(Name('c', Load(), lineno=411, col_offset=12), 'flush', Load(), lineno=411, col_offset=12), [], [], None, None, lineno=411, col_offset=12), lineno=411, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=12), 'assertRaises', Load(), lineno=412, col_offset=12), [Name('ValueError', Load(), lineno=412, col_offset=30), Attribute(Name('c', Load(), lineno=412, col_offset=42), 'copy', Load(), lineno=412, col_offset=42)], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12)], [], lineno=407, col_offset=8)], [], lineno=384, col_offset=4), If(Call(Name('hasattr', Load(), lineno=414, col_offset=7), [Call(Attribute(Name('zlib', Load(), lineno=414, col_offset=15), 'decompressobj', Load(), lineno=414, col_offset=15), [], [], None, None, lineno=414, col_offset=15), Str('copy', lineno=414, col_offset=37)], [], None, None, lineno=414, col_offset=7), [FunctionDef('test_decompresscopy', arguments([Name('self', Param(), lineno=415, col_offset=32)], None, None, []), [Assign([Name('data', Store(), lineno=417, col_offset=12)], Name('HAMLET_SCENE', Load(), lineno=417, col_offset=19), lineno=417, col_offset=12), Assign([Name('comp', Store(), lineno=418, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=418, col_offset=19), 'compress', Load(), lineno=418, col_offset=19), [Name('data', Load(), lineno=418, col_offset=33)], [], None, None, lineno=418, col_offset=19), lineno=418, col_offset=12), Assign([Name('d0', Store(), lineno=420, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=420, col_offset=17), 'decompressobj', Load(), lineno=420, col_offset=17), [], [], None, None, lineno=420, col_offset=17), lineno=420, col_offset=12), Assign([Name('bufs0', Store(), lineno=421, col_offset=12)], List([], Load(), lineno=421, col_offset=20), lineno=421, col_offset=12), Expr(Call(Attribute(Name('bufs0', Load(), lineno=422, col_offset=12), 'append', Load(), lineno=422, col_offset=12), [Call(Attribute(Name('d0', Load(), lineno=422, col_offset=25), 'decompress', Load(), lineno=422, col_offset=25), [Subscript(Name('comp', Load(), lineno=422, col_offset=39), Slice(None, Num(32, lineno=422, col_offset=45), None), Load(), lineno=422, col_offset=39)], [], None, None, lineno=422, col_offset=25)], [], None, None, lineno=422, col_offset=12), lineno=422, col_offset=12), Assign([Name('d1', Store(), lineno=424, col_offset=12)], Call(Attribute(Name('d0', Load(), lineno=424, col_offset=17), 'copy', Load(), lineno=424, col_offset=17), [], [], None, None, lineno=424, col_offset=17), lineno=424, col_offset=12), Assign([Name('bufs1', Store(), lineno=425, col_offset=12)], Subscript(Name('bufs0', Load(), lineno=425, col_offset=20), Slice(None, None, None), Load(), lineno=425, col_offset=20), lineno=425, col_offset=12), Expr(Call(Attribute(Name('bufs0', Load(), lineno=427, col_offset=12), 'append', Load(), lineno=427, col_offset=12), [Call(Attribute(Name('d0', Load(), lineno=427, col_offset=25), 'decompress', Load(), lineno=427, col_offset=25), [Subscript(Name('comp', Load(), lineno=427, col_offset=39), Slice(Num(32, lineno=427, col_offset=44), None, None), Load(), lineno=427, col_offset=39)], [], None, None, lineno=427, col_offset=25)], [], None, None, lineno=427, col_offset=12), lineno=427, col_offset=12), Assign([Name('s0', Store(), lineno=428, col_offset=12)], Call(Attribute(Str('', lineno=428, col_offset=17), 'join', Load(), lineno=428, col_offset=17), [Name('bufs0', Load(), lineno=428, col_offset=25)], [], None, None, lineno=428, col_offset=17), lineno=428, col_offset=12), Expr(Call(Attribute(Name('bufs1', Load(), lineno=430, col_offset=12), 'append', Load(), lineno=430, col_offset=12), [Call(Attribute(Name('d1', Load(), lineno=430, col_offset=25), 'decompress', Load(), lineno=430, col_offset=25), [Subscript(Name('comp', Load(), lineno=430, col_offset=39), Slice(Num(32, lineno=430, col_offset=44), None, None), Load(), lineno=430, col_offset=39)], [], None, None, lineno=430, col_offset=25)], [], None, None, lineno=430, col_offset=12), lineno=430, col_offset=12), Assign([Name('s1', Store(), lineno=431, col_offset=12)], Call(Attribute(Str('', lineno=431, col_offset=17), 'join', Load(), lineno=431, col_offset=17), [Name('bufs1', Load(), lineno=431, col_offset=25)], [], None, None, lineno=431, col_offset=17), lineno=431, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=12), 'assertEqual', Load(), lineno=433, col_offset=12), [Name('s0', Load(), lineno=433, col_offset=29), Name('s1', Load(), lineno=433, col_offset=32)], [], None, None, lineno=433, col_offset=12), lineno=433, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=12), 'assertEqual', Load(), lineno=434, col_offset=12), [Name('s0', Load(), lineno=434, col_offset=29), Name('data', Load(), lineno=434, col_offset=32)], [], None, None, lineno=434, col_offset=12), lineno=434, col_offset=12)], [], lineno=415, col_offset=8), FunctionDef('test_baddecompresscopy', arguments([Name('self', Param(), lineno=436, col_offset=35)], None, None, []), [Assign([Name('data', Store(), lineno=438, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=438, col_offset=19), 'compress', Load(), lineno=438, col_offset=19), [Name('HAMLET_SCENE', Load(), lineno=438, col_offset=33)], [], None, None, lineno=438, col_offset=19), lineno=438, col_offset=12), Assign([Name('d', Store(), lineno=439, col_offset=12)], Call(Attribute(Name('zlib', Load(), lineno=439, col_offset=16), 'decompressobj', Load(), lineno=439, col_offset=16), [], [], None, None, lineno=439, col_offset=16), lineno=439, col_offset=12), Expr(Call(Attribute(Name('d', Load(), lineno=440, col_offset=12), 'decompress', Load(), lineno=440, col_offset=12), [Name('data', Load(), lineno=440, col_offset=25)], [], None, None, lineno=440, col_offset=12), lineno=440, col_offset=12), Expr(Call(Attribute(Name('d', Load(), lineno=441, col_offset=12), 'flush', Load(), lineno=441, col_offset=12), [], [], None, None, lineno=441, col_offset=12), lineno=441, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=442, col_offset=12), 'assertRaises', Load(), lineno=442, col_offset=12), [Name('ValueError', Load(), lineno=442, col_offset=30), Attribute(Name('d', Load(), lineno=442, col_offset=42), 'copy', Load(), lineno=442, col_offset=42)], [], None, None, lineno=442, col_offset=12), lineno=442, col_offset=12)], [], lineno=436, col_offset=8)], [], lineno=414, col_offset=4), FunctionDef('test_big_compress_buffer', arguments([Name('self', Param(), lineno=447, col_offset=33), Name('size', Param(), lineno=447, col_offset=39)], None, None, []), [Assign([Name('c', Store(), lineno=448, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=448, col_offset=12), 'compressobj', Load(), lineno=448, col_offset=12), [Num(1, lineno=448, col_offset=29)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=8), Assign([Name('compress', Store(), lineno=449, col_offset=8)], Lambda(arguments([Name('s', Param(), lineno=449, col_offset=26)], None, None, []), BinOp(Call(Attribute(Name('c', Load(), lineno=449, col_offset=29), 'compress', Load(), lineno=449, col_offset=29), [Name('s', Load(), lineno=449, col_offset=40)], [], None, None, lineno=449, col_offset=29), Add(), Call(Attribute(Name('c', Load(), lineno=449, col_offset=45), 'flush', Load(), lineno=449, col_offset=45), [], [], None, None, lineno=449, col_offset=45), lineno=449, col_offset=29), lineno=449, col_offset=19), lineno=449, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=450, col_offset=8), 'check_big_compress_buffer', Load(), lineno=450, col_offset=8), [Name('size', Load(), lineno=450, col_offset=39), Name('compress', Load(), lineno=450, col_offset=45)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=446, col_offset=5), [], [keyword('size', BinOp(Name('_1G', Load(), lineno=446, col_offset=30), Add(), BinOp(Num(1024, lineno=446, col_offset=36), Mult(), Num(1024, lineno=446, col_offset=43), lineno=446, col_offset=36), lineno=446, col_offset=30)), keyword('memuse', Num(3, lineno=446, col_offset=56))], None, None, lineno=446, col_offset=5)], lineno=446, col_offset=4), FunctionDef('test_big_decompress_buffer', arguments([Name('self', Param(), lineno=453, col_offset=35), Name('size', Param(), lineno=453, col_offset=41)], None, None, []), [Assign([Name('d', Store(), lineno=454, col_offset=8)], Call(Attribute(Name('zlib', Load(), lineno=454, col_offset=12), 'decompressobj', Load(), lineno=454, col_offset=12), [], [], None, None, lineno=454, col_offset=12), lineno=454, col_offset=8), Assign([Name('decompress', Store(), lineno=455, col_offset=8)], Lambda(arguments([Name('s', Param(), lineno=455, col_offset=28)], None, None, []), BinOp(Call(Attribute(Name('d', Load(), lineno=455, col_offset=31), 'decompress', Load(), lineno=455, col_offset=31), [Name('s', Load(), lineno=455, col_offset=44)], [], None, None, lineno=455, col_offset=31), Add(), Call(Attribute(Name('d', Load(), lineno=455, col_offset=49), 'flush', Load(), lineno=455, col_offset=49), [], [], None, None, lineno=455, col_offset=49), lineno=455, col_offset=31), lineno=455, col_offset=21), lineno=455, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=456, col_offset=8), 'check_big_decompress_buffer', Load(), lineno=456, col_offset=8), [Name('size', Load(), lineno=456, col_offset=41), Name('decompress', Load(), lineno=456, col_offset=47)], [], None, None, lineno=456, col_offset=8), lineno=456, col_offset=8)], [Call(Name('precisionbigmemtest', Load(), lineno=452, col_offset=5), [], [keyword('size', BinOp(Name('_1G', Load(), lineno=452, col_offset=30), Add(), BinOp(Num(1024, lineno=452, col_offset=36), Mult(), Num(1024, lineno=452, col_offset=43), lineno=452, col_offset=36), lineno=452, col_offset=30)), keyword('memuse', Num(2, lineno=452, col_offset=56))], None, None, lineno=452, col_offset=5)], lineno=452, col_offset=4)], [], lineno=157, col_offset=0), FunctionDef('genblock', arguments([Name('seed', Param(), lineno=459, col_offset=13), Name('length', Param(), lineno=459, col_offset=19), Name('step', Param(), lineno=459, col_offset=27), Name('generator', Param(), lineno=459, col_offset=38)], None, None, [Num(1024, lineno=459, col_offset=32), Name('random', Load(), lineno=459, col_offset=48)]), [Expr(Str('length-byte stream of random data from a seed (in step-byte blocks).', lineno=460, col_offset=4), lineno=460, col_offset=4), If(Compare(Name('seed', Load(), lineno=461, col_offset=7), [IsNot()], [Name('None', Load(), lineno=461, col_offset=19)], lineno=461, col_offset=7), [Expr(Call(Attribute(Name('generator', Load(), lineno=462, col_offset=8), 'seed', Load(), lineno=462, col_offset=8), [Name('seed', Load(), lineno=462, col_offset=23)], [], None, None, lineno=462, col_offset=8), lineno=462, col_offset=8)], [], lineno=461, col_offset=4), Assign([Name('randint', Store(), lineno=463, col_offset=4)], Attribute(Name('generator', Load(), lineno=463, col_offset=14), 'randint', Load(), lineno=463, col_offset=14), lineno=463, col_offset=4), If(BoolOp(Or(), [Compare(Name('length', Load(), lineno=464, col_offset=7), [Lt()], [Name('step', Load(), lineno=464, col_offset=16)], lineno=464, col_offset=7), Compare(Name('step', Load(), lineno=464, col_offset=24), [Lt()], [Num(2, lineno=464, col_offset=31)], lineno=464, col_offset=24)], lineno=464, col_offset=7), [Assign([Name('step', Store(), lineno=465, col_offset=8)], Name('length', Load(), lineno=465, col_offset=15), lineno=465, col_offset=8)], [], lineno=464, col_offset=4), Assign([Name('blocks', Store(), lineno=466, col_offset=4)], List([], Load(), lineno=466, col_offset=13), lineno=466, col_offset=4), For(Name('i', Store(), lineno=467, col_offset=8), Call(Name('range', Load(), lineno=467, col_offset=13), [Num(0, lineno=467, col_offset=19), Name('length', Load(), lineno=467, col_offset=22), Name('step', Load(), lineno=467, col_offset=30)], [], None, None, lineno=467, col_offset=13), [Expr(Call(Attribute(Name('blocks', Load(), lineno=468, col_offset=8), 'append', Load(), lineno=468, col_offset=8), [Call(Attribute(Str('', lineno=468, col_offset=22), 'join', Load(), lineno=468, col_offset=22), [ListComp(Call(Name('chr', Load(), lineno=468, col_offset=31), [Call(Name('randint', Load(), lineno=468, col_offset=35), [Num(0, lineno=468, col_offset=43), Num(255, lineno=468, col_offset=45)], [], None, None, lineno=468, col_offset=35)], [], None, None, lineno=468, col_offset=31), [comprehension(Name('x', Store(), lineno=469, col_offset=35), Call(Name('range', Load(), lineno=469, col_offset=40), [Name('step', Load(), lineno=469, col_offset=46)], [], None, None, lineno=469, col_offset=40), [])], lineno=468, col_offset=31)], [], None, None, lineno=468, col_offset=22)], [], None, None, lineno=468, col_offset=8), lineno=468, col_offset=8)], [], lineno=467, col_offset=4), Return(Subscript(Call(Attribute(Str('', lineno=470, col_offset=11), 'join', Load(), lineno=470, col_offset=11), [Name('blocks', Load(), lineno=470, col_offset=19)], [], None, None, lineno=470, col_offset=11), Slice(None, Name('length', Load(), lineno=470, col_offset=28), None), Load(), lineno=470, col_offset=11), lineno=470, col_offset=4)], [], lineno=459, col_offset=0), FunctionDef('choose_lines', arguments([Name('source', Param(), lineno=474, col_offset=17), Name('number', Param(), lineno=474, col_offset=25), Name('seed', Param(), lineno=474, col_offset=33), Name('generator', Param(), lineno=474, col_offset=44)], None, None, [Name('None', Load(), lineno=474, col_offset=38), Name('random', Load(), lineno=474, col_offset=54)]), [Expr(Str('Return a list of number lines randomly chosen from the source', lineno=475, col_offset=4), lineno=475, col_offset=4), If(Compare(Name('seed', Load(), lineno=476, col_offset=7), [IsNot()], [Name('None', Load(), lineno=476, col_offset=19)], lineno=476, col_offset=7), [Expr(Call(Attribute(Name('generator', Load(), lineno=477, col_offset=8), 'seed', Load(), lineno=477, col_offset=8), [Name('seed', Load(), lineno=477, col_offset=23)], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8)], [], lineno=476, col_offset=4), Assign([Name('sources', Store(), lineno=478, col_offset=4)], Call(Attribute(Name('source', Load(), lineno=478, col_offset=14), 'split', Load(), lineno=478, col_offset=14), [Str('\n', lineno=478, col_offset=27)], [], None, None, lineno=478, col_offset=14), lineno=478, col_offset=4), Return(ListComp(Call(Attribute(Name('generator', Load(), lineno=479, col_offset=12), 'choice', Load(), lineno=479, col_offset=12), [Name('sources', Load(), lineno=479, col_offset=29)], [], None, None, lineno=479, col_offset=12), [comprehension(Name('n', Store(), lineno=479, col_offset=42), Call(Name('range', Load(), lineno=479, col_offset=47), [Name('number', Load(), lineno=479, col_offset=53)], [], None, None, lineno=479, col_offset=47), [])], lineno=479, col_offset=12), lineno=479, col_offset=4)], [], lineno=474, col_offset=0), Assign([Name('HAMLET_SCENE', Store(), lineno=483, col_offset=0)], Str("\nLAERTES\n\n       O, fear me not.\n       I stay too long: but here my father comes.\n\n       Enter POLONIUS\n\n       A double blessing is a double grace,\n       Occasion smiles upon a second leave.\n\nLORD POLONIUS\n\n       Yet here, Laertes! aboard, aboard, for shame!\n       The wind sits in the shoulder of your sail,\n       And you are stay'd for. There; my blessing with thee!\n       And these few precepts in thy memory\n       See thou character. Give thy thoughts no tongue,\n       Nor any unproportioned thought his act.\n       Be thou familiar, but by no means vulgar.\n       Those friends thou hast, and their adoption tried,\n       Grapple them to thy soul with hoops of steel;\n       But do not dull thy palm with entertainment\n       Of each new-hatch'd, unfledged comrade. Beware\n       Of entrance to a quarrel, but being in,\n       Bear't that the opposed may beware of thee.\n       Give every man thy ear, but few thy voice;\n       Take each man's censure, but reserve thy judgment.\n       Costly thy habit as thy purse can buy,\n       But not express'd in fancy; rich, not gaudy;\n       For the apparel oft proclaims the man,\n       And they in France of the best rank and station\n       Are of a most select and generous chief in that.\n       Neither a borrower nor a lender be;\n       For loan oft loses both itself and friend,\n       And borrowing dulls the edge of husbandry.\n       This above all: to thine ownself be true,\n       And it must follow, as the night the day,\n       Thou canst not then be false to any man.\n       Farewell: my blessing season this in thee!\n\nLAERTES\n\n       Most humbly do I take my leave, my lord.\n\nLORD POLONIUS\n\n       The time invites you; go; your servants tend.\n\nLAERTES\n\n       Farewell, Ophelia; and remember well\n       What I have said to you.\n\nOPHELIA\n\n       'Tis in my memory lock'd,\n       And you yourself shall keep the key of it.\n\nLAERTES\n\n       Farewell.\n", lineno=545, col_offset=-1), lineno=483, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=549, col_offset=4), 'run_unittest', Load(), lineno=549, col_offset=4), [Name('ChecksumTestCase', Load(), lineno=550, col_offset=8), Name('ExceptionTestCase', Load(), lineno=551, col_offset=8), Name('CompressTestCase', Load(), lineno=552, col_offset=8), Name('CompressObjectTestCase', Load(), lineno=553, col_offset=8)], [], None, None, lineno=549, col_offset=4), lineno=549, col_offset=4)], [], lineno=548, col_offset=0), If(Compare(Name('__name__', Load(), lineno=556, col_offset=3), [Eq()], [Str('__main__', lineno=556, col_offset=15)], lineno=556, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=557, col_offset=4), [], [], None, None, lineno=557, col_offset=4), lineno=557, col_offset=4)], [], lineno=556, col_offset=0)])
