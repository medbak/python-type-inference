Module([Expr(Str('Test script for the binhex C module\n\n   Uses the mechanism of the python binhex module\n   Based on an original test by Roger E. Masse.\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('binhex', None)], lineno=7, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), Import([alias('unittest', None)], lineno=9, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=10, col_offset=0), ClassDef('BinHexTestCase', [Attribute(Name('unittest', Load(), lineno=13, col_offset=21), 'TestCase', Load(), lineno=13, col_offset=21)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=15, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=16, col_offset=8), 'fname1', Store(), lineno=16, col_offset=8)], BinOp(Attribute(Name('test_support', Load(), lineno=16, col_offset=22), 'TESTFN', Load(), lineno=16, col_offset=22), Add(), Str('1', lineno=16, col_offset=44), lineno=16, col_offset=22), lineno=16, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=17, col_offset=8), 'fname2', Store(), lineno=17, col_offset=8)], BinOp(Attribute(Name('test_support', Load(), lineno=17, col_offset=22), 'TESTFN', Load(), lineno=17, col_offset=22), Add(), Str('2', lineno=17, col_offset=44), lineno=17, col_offset=22), lineno=17, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=19, col_offset=17)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=20, col_offset=13), 'unlink', Load(), lineno=20, col_offset=13), [Attribute(Name('self', Load(), lineno=20, col_offset=23), 'fname1', Load(), lineno=20, col_offset=23)], [], None, None, lineno=20, col_offset=13), lineno=20, col_offset=13)], [ExceptHandler(Name('OSError', Load(), lineno=21, col_offset=15), None, [Pass( lineno=21, col_offset=24)], lineno=21, col_offset=8)], [], lineno=20, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=23, col_offset=13), 'unlink', Load(), lineno=23, col_offset=13), [Attribute(Name('self', Load(), lineno=23, col_offset=23), 'fname2', Load(), lineno=23, col_offset=23)], [], None, None, lineno=23, col_offset=13), lineno=23, col_offset=13)], [ExceptHandler(Name('OSError', Load(), lineno=24, col_offset=15), None, [Pass( lineno=24, col_offset=24)], lineno=24, col_offset=8)], [], lineno=23, col_offset=8)], [], lineno=19, col_offset=4), Assign([Name('DATA', Store(), lineno=26, col_offset=4)], Str('Jack is my hero', lineno=26, col_offset=11), lineno=26, col_offset=4), FunctionDef('test_binhex', arguments([Name('self', Param(), lineno=28, col_offset=20)], None, None, []), [Assign([Name('f', Store(), lineno=29, col_offset=8)], Call(Name('open', Load(), lineno=29, col_offset=12), [Attribute(Name('self', Load(), lineno=29, col_offset=17), 'fname1', Load(), lineno=29, col_offset=17), Str('w', lineno=29, col_offset=30)], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=30, col_offset=8), 'write', Load(), lineno=30, col_offset=8), [Attribute(Name('self', Load(), lineno=30, col_offset=16), 'DATA', Load(), lineno=30, col_offset=16)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=31, col_offset=8), 'close', Load(), lineno=31, col_offset=8), [], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('binhex', Load(), lineno=33, col_offset=8), 'binhex', Load(), lineno=33, col_offset=8), [Attribute(Name('self', Load(), lineno=33, col_offset=22), 'fname1', Load(), lineno=33, col_offset=22), Attribute(Name('self', Load(), lineno=33, col_offset=35), 'fname2', Load(), lineno=33, col_offset=35)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('binhex', Load(), lineno=35, col_offset=8), 'hexbin', Load(), lineno=35, col_offset=8), [Attribute(Name('self', Load(), lineno=35, col_offset=22), 'fname2', Load(), lineno=35, col_offset=22), Attribute(Name('self', Load(), lineno=35, col_offset=35), 'fname1', Load(), lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Assign([Name('f', Store(), lineno=37, col_offset=8)], Call(Name('open', Load(), lineno=37, col_offset=12), [Attribute(Name('self', Load(), lineno=37, col_offset=17), 'fname1', Load(), lineno=37, col_offset=17), Str('r', lineno=37, col_offset=30)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=8), Assign([Name('finish', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=38, col_offset=17), 'readline', Load(), lineno=38, col_offset=17), [], [], None, None, lineno=38, col_offset=17), lineno=38, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=39, col_offset=8), 'close', Load(), lineno=39, col_offset=8), [], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Attribute(Name('self', Load(), lineno=41, col_offset=25), 'DATA', Load(), lineno=41, col_offset=25), Name('finish', Load(), lineno=41, col_offset=36)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=28, col_offset=4)], [], lineno=13, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=45, col_offset=4), 'run_unittest', Load(), lineno=45, col_offset=4), [Name('BinHexTestCase', Load(), lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=4), lineno=45, col_offset=4)], [], lineno=44, col_offset=0), If(Compare(Name('__name__', Load(), lineno=48, col_offset=3), [Eq()], [Str('__main__', lineno=48, col_offset=15)], lineno=48, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=49, col_offset=4), [], [], None, None, lineno=49, col_offset=4), lineno=49, col_offset=4)], [], lineno=48, col_offset=0)])
