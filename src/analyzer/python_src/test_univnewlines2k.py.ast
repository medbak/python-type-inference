Module([Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=7, col_offset=7), [Attribute(Name('sys', Load(), lineno=7, col_offset=15), 'stdin', Load(), lineno=7, col_offset=15), Str('newlines', lineno=7, col_offset=26)], [], None, None, lineno=7, col_offset=7), lineno=7, col_offset=3), [Raise(Attribute(Name('unittest', Load(), lineno=8, col_offset=10), 'SkipTest', Load(), lineno=8, col_offset=10), Str('This Python does not have universal newline support', lineno=9, col_offset=8), None, lineno=8, col_offset=4)], [], lineno=7, col_offset=0), Assign([Name('FATX', Store(), lineno=11, col_offset=0)], BinOp(Str('x', lineno=11, col_offset=7), Mult(), BinOp(Num(2, lineno=11, col_offset=14), Pow(), Num(14, lineno=11, col_offset=17), lineno=11, col_offset=14), lineno=11, col_offset=7), lineno=11, col_offset=0), Assign([Name('DATA_TEMPLATE', Store(), lineno=13, col_offset=0)], List([Str('line1=1', lineno=14, col_offset=4), BinOp(BinOp(BinOp(Str("line2='this is a very long line designed to go past the magic ", lineno=15, col_offset=4), Add(), Str('hundred character limit that is inside fileobject.c and which ', lineno=16, col_offset=8), lineno=15, col_offset=4), Add(), Str('is meant to speed up the common case, but we also want to test ', lineno=17, col_offset=8), lineno=16, col_offset=73), Add(), Str("the uncommon case, naturally.'", lineno=18, col_offset=8), lineno=17, col_offset=74), Str('def line3():pass', lineno=19, col_offset=4), BinOp(Str("line4 = '%s'", lineno=20, col_offset=4), Mod(), Name('FATX', Load(), lineno=20, col_offset=21), lineno=20, col_offset=4)], Load(), lineno=13, col_offset=16), lineno=13, col_offset=0), Assign([Name('DATA_LF', Store(), lineno=23, col_offset=0)], BinOp(Call(Attribute(Str('\n', lineno=23, col_offset=10), 'join', Load(), lineno=23, col_offset=10), [Name('DATA_TEMPLATE', Load(), lineno=23, col_offset=20)], [], None, None, lineno=23, col_offset=10), Add(), Str('\n', lineno=23, col_offset=37), lineno=23, col_offset=10), lineno=23, col_offset=0), Assign([Name('DATA_CR', Store(), lineno=24, col_offset=0)], BinOp(Call(Attribute(Str('\r', lineno=24, col_offset=10), 'join', Load(), lineno=24, col_offset=10), [Name('DATA_TEMPLATE', Load(), lineno=24, col_offset=20)], [], None, None, lineno=24, col_offset=10), Add(), Str('\r', lineno=24, col_offset=37), lineno=24, col_offset=10), lineno=24, col_offset=0), Assign([Name('DATA_CRLF', Store(), lineno=25, col_offset=0)], BinOp(Call(Attribute(Str('\r\n', lineno=25, col_offset=12), 'join', Load(), lineno=25, col_offset=12), [Name('DATA_TEMPLATE', Load(), lineno=25, col_offset=24)], [], None, None, lineno=25, col_offset=12), Add(), Str('\r\n', lineno=25, col_offset=41), lineno=25, col_offset=12), lineno=25, col_offset=0), Assign([Name('DATA_MIXED', Store(), lineno=29, col_offset=0)], BinOp(Call(Attribute(Str('\n', lineno=29, col_offset=13), 'join', Load(), lineno=29, col_offset=13), [Name('DATA_TEMPLATE', Load(), lineno=29, col_offset=23)], [], None, None, lineno=29, col_offset=13), Add(), Str('\r', lineno=29, col_offset=40), lineno=29, col_offset=13), lineno=29, col_offset=0), Assign([Name('DATA_SPLIT', Store(), lineno=30, col_offset=0)], ListComp(BinOp(Name('x', Load(), lineno=30, col_offset=14), Add(), Str('\n', lineno=30, col_offset=18), lineno=30, col_offset=14), [comprehension(Name('x', Store(), lineno=30, col_offset=27), Name('DATA_TEMPLATE', Load(), lineno=30, col_offset=32), [])], lineno=30, col_offset=14), lineno=30, col_offset=0), Delete([Name('x', Del(), lineno=31, col_offset=4)], lineno=31, col_offset=0), ClassDef('TestGenericUnivNewlines', [Attribute(Name('unittest', Load(), lineno=33, col_offset=30), 'TestCase', Load(), lineno=33, col_offset=30)], [Assign([Name('READMODE', Store(), lineno=36, col_offset=4)], Str('U', lineno=36, col_offset=15), lineno=36, col_offset=4), Assign([Name('WRITEMODE', Store(), lineno=37, col_offset=4)], Str('wb', lineno=37, col_offset=16), lineno=37, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=39, col_offset=14)], None, None, []), [With(Call(Name('open', Load(), lineno=40, col_offset=13), [Attribute(Name('test_support', Load(), lineno=40, col_offset=18), 'TESTFN', Load(), lineno=40, col_offset=18), Attribute(Name('self', Load(), lineno=40, col_offset=39), 'WRITEMODE', Load(), lineno=40, col_offset=39)], [], None, None, lineno=40, col_offset=13), Name('fp', Store(), lineno=40, col_offset=58), [Expr(Call(Attribute(Name('fp', Load(), lineno=41, col_offset=12), 'write', Load(), lineno=41, col_offset=12), [Attribute(Name('self', Load(), lineno=41, col_offset=21), 'DATA', Load(), lineno=41, col_offset=21)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12)], lineno=40, col_offset=13)], [], lineno=39, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=43, col_offset=17)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=45, col_offset=12), 'unlink', Load(), lineno=45, col_offset=12), [Attribute(Name('test_support', Load(), lineno=45, col_offset=22), 'TESTFN', Load(), lineno=45, col_offset=22)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=47, col_offset=12)], lineno=46, col_offset=8)], [], lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_read', arguments([Name('self', Param(), lineno=49, col_offset=18)], None, None, []), [With(Call(Name('open', Load(), lineno=50, col_offset=13), [Attribute(Name('test_support', Load(), lineno=50, col_offset=18), 'TESTFN', Load(), lineno=50, col_offset=18), Attribute(Name('self', Load(), lineno=50, col_offset=39), 'READMODE', Load(), lineno=50, col_offset=39)], [], None, None, lineno=50, col_offset=13), Name('fp', Store(), lineno=50, col_offset=57), [Assign([Name('data', Store(), lineno=51, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=51, col_offset=19), 'read', Load(), lineno=51, col_offset=19), [], [], None, None, lineno=51, col_offset=19), lineno=51, col_offset=12)], lineno=50, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertEqual', Load(), lineno=52, col_offset=8), [Name('data', Load(), lineno=52, col_offset=25), Name('DATA_LF', Load(), lineno=52, col_offset=31)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Call(Name('repr', Load(), lineno=53, col_offset=25), [Attribute(Name('fp', Load(), lineno=53, col_offset=30), 'newlines', Load(), lineno=53, col_offset=30)], [], None, None, lineno=53, col_offset=25), Call(Name('repr', Load(), lineno=53, col_offset=44), [Attribute(Name('self', Load(), lineno=53, col_offset=49), 'NEWLINE', Load(), lineno=53, col_offset=49)], [], None, None, lineno=53, col_offset=44)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('test_readlines', arguments([Name('self', Param(), lineno=55, col_offset=23)], None, None, []), [With(Call(Name('open', Load(), lineno=56, col_offset=13), [Attribute(Name('test_support', Load(), lineno=56, col_offset=18), 'TESTFN', Load(), lineno=56, col_offset=18), Attribute(Name('self', Load(), lineno=56, col_offset=39), 'READMODE', Load(), lineno=56, col_offset=39)], [], None, None, lineno=56, col_offset=13), Name('fp', Store(), lineno=56, col_offset=57), [Assign([Name('data', Store(), lineno=57, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=57, col_offset=19), 'readlines', Load(), lineno=57, col_offset=19), [], [], None, None, lineno=57, col_offset=19), lineno=57, col_offset=12)], lineno=56, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=8), 'assertEqual', Load(), lineno=58, col_offset=8), [Name('data', Load(), lineno=58, col_offset=25), Name('DATA_SPLIT', Load(), lineno=58, col_offset=31)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertEqual', Load(), lineno=59, col_offset=8), [Call(Name('repr', Load(), lineno=59, col_offset=25), [Attribute(Name('fp', Load(), lineno=59, col_offset=30), 'newlines', Load(), lineno=59, col_offset=30)], [], None, None, lineno=59, col_offset=25), Call(Name('repr', Load(), lineno=59, col_offset=44), [Attribute(Name('self', Load(), lineno=59, col_offset=49), 'NEWLINE', Load(), lineno=59, col_offset=49)], [], None, None, lineno=59, col_offset=44)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('test_readline', arguments([Name('self', Param(), lineno=61, col_offset=22)], None, None, []), [With(Call(Name('open', Load(), lineno=62, col_offset=13), [Attribute(Name('test_support', Load(), lineno=62, col_offset=18), 'TESTFN', Load(), lineno=62, col_offset=18), Attribute(Name('self', Load(), lineno=62, col_offset=39), 'READMODE', Load(), lineno=62, col_offset=39)], [], None, None, lineno=62, col_offset=13), Name('fp', Store(), lineno=62, col_offset=57), [Assign([Name('data', Store(), lineno=63, col_offset=12)], List([], Load(), lineno=63, col_offset=19), lineno=63, col_offset=12), Assign([Name('d', Store(), lineno=64, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=64, col_offset=16), 'readline', Load(), lineno=64, col_offset=16), [], [], None, None, lineno=64, col_offset=16), lineno=64, col_offset=12), While(Name('d', Load(), lineno=65, col_offset=18), [Expr(Call(Attribute(Name('data', Load(), lineno=66, col_offset=16), 'append', Load(), lineno=66, col_offset=16), [Name('d', Load(), lineno=66, col_offset=28)], [], None, None, lineno=66, col_offset=16), lineno=66, col_offset=16), Assign([Name('d', Store(), lineno=67, col_offset=16)], Call(Attribute(Name('fp', Load(), lineno=67, col_offset=20), 'readline', Load(), lineno=67, col_offset=20), [], [], None, None, lineno=67, col_offset=20), lineno=67, col_offset=16)], [], lineno=65, col_offset=12)], lineno=62, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertEqual', Load(), lineno=68, col_offset=8), [Name('data', Load(), lineno=68, col_offset=25), Name('DATA_SPLIT', Load(), lineno=68, col_offset=31)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Call(Name('repr', Load(), lineno=69, col_offset=25), [Attribute(Name('fp', Load(), lineno=69, col_offset=30), 'newlines', Load(), lineno=69, col_offset=30)], [], None, None, lineno=69, col_offset=25), Call(Name('repr', Load(), lineno=69, col_offset=44), [Attribute(Name('self', Load(), lineno=69, col_offset=49), 'NEWLINE', Load(), lineno=69, col_offset=49)], [], None, None, lineno=69, col_offset=44)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('test_seek', arguments([Name('self', Param(), lineno=71, col_offset=18)], None, None, []), [With(Call(Name('open', Load(), lineno=72, col_offset=13), [Attribute(Name('test_support', Load(), lineno=72, col_offset=18), 'TESTFN', Load(), lineno=72, col_offset=18), Attribute(Name('self', Load(), lineno=72, col_offset=39), 'READMODE', Load(), lineno=72, col_offset=39)], [], None, None, lineno=72, col_offset=13), Name('fp', Store(), lineno=72, col_offset=57), [Expr(Call(Attribute(Name('fp', Load(), lineno=73, col_offset=12), 'readline', Load(), lineno=73, col_offset=12), [], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12), Assign([Name('pos', Store(), lineno=74, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=74, col_offset=18), 'tell', Load(), lineno=74, col_offset=18), [], [], None, None, lineno=74, col_offset=18), lineno=74, col_offset=12), Assign([Name('data', Store(), lineno=75, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=75, col_offset=19), 'readlines', Load(), lineno=75, col_offset=19), [], [], None, None, lineno=75, col_offset=19), lineno=75, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=12), 'assertEqual', Load(), lineno=76, col_offset=12), [Name('data', Load(), lineno=76, col_offset=29), Subscript(Name('DATA_SPLIT', Load(), lineno=76, col_offset=35), Slice(Num(1, lineno=76, col_offset=46), None, None), Load(), lineno=76, col_offset=35)], [], None, None, lineno=76, col_offset=12), lineno=76, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=77, col_offset=12), 'seek', Load(), lineno=77, col_offset=12), [Name('pos', Load(), lineno=77, col_offset=20)], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=12), Assign([Name('data', Store(), lineno=78, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=78, col_offset=19), 'readlines', Load(), lineno=78, col_offset=19), [], [], None, None, lineno=78, col_offset=19), lineno=78, col_offset=12)], lineno=72, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertEqual', Load(), lineno=79, col_offset=8), [Name('data', Load(), lineno=79, col_offset=25), Subscript(Name('DATA_SPLIT', Load(), lineno=79, col_offset=31), Slice(Num(1, lineno=79, col_offset=42), None, None), Load(), lineno=79, col_offset=31)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_execfile', arguments([Name('self', Param(), lineno=81, col_offset=22)], None, None, []), [Assign([Name('namespace', Store(), lineno=82, col_offset=8)], Dict([], [], lineno=82, col_offset=20), lineno=82, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=83, col_offset=13), 'check_py3k_warnings', Load(), lineno=83, col_offset=13), [], [], None, None, lineno=83, col_offset=13), None, [Expr(Call(Name('execfile', Load(), lineno=84, col_offset=12), [Attribute(Name('test_support', Load(), lineno=84, col_offset=21), 'TESTFN', Load(), lineno=84, col_offset=21), Name('namespace', Load(), lineno=84, col_offset=42)], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=12)], lineno=83, col_offset=13), Assign([Name('func', Store(), lineno=85, col_offset=8)], Subscript(Name('namespace', Load(), lineno=85, col_offset=15), Index(Str('line3', lineno=85, col_offset=25)), Load(), lineno=85, col_offset=15), lineno=85, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'assertEqual', Load(), lineno=86, col_offset=8), [Attribute(Attribute(Name('func', Load(), lineno=86, col_offset=25), 'func_code', Load(), lineno=86, col_offset=25), 'co_firstlineno', Load(), lineno=86, col_offset=25), Num(3, lineno=86, col_offset=56)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'assertEqual', Load(), lineno=87, col_offset=8), [Subscript(Name('namespace', Load(), lineno=87, col_offset=25), Index(Str('line4', lineno=87, col_offset=35)), Load(), lineno=87, col_offset=25), Name('FATX', Load(), lineno=87, col_offset=45)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=81, col_offset=4)], [], lineno=33, col_offset=0), ClassDef('TestNativeNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=90, col_offset=25)], [Assign([Name('NEWLINE', Store(), lineno=91, col_offset=4)], Name('None', Load(), lineno=91, col_offset=14), lineno=91, col_offset=4), Assign([Name('DATA', Store(), lineno=92, col_offset=4)], Name('DATA_LF', Load(), lineno=92, col_offset=11), lineno=92, col_offset=4), Assign([Name('READMODE', Store(), lineno=93, col_offset=4)], Str('r', lineno=93, col_offset=15), lineno=93, col_offset=4), Assign([Name('WRITEMODE', Store(), lineno=94, col_offset=4)], Str('w', lineno=94, col_offset=16), lineno=94, col_offset=4)], [], lineno=90, col_offset=0), ClassDef('TestCRNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=96, col_offset=21)], [Assign([Name('NEWLINE', Store(), lineno=97, col_offset=4)], Str('\r', lineno=97, col_offset=14), lineno=97, col_offset=4), Assign([Name('DATA', Store(), lineno=98, col_offset=4)], Name('DATA_CR', Load(), lineno=98, col_offset=11), lineno=98, col_offset=4)], [], lineno=96, col_offset=0), ClassDef('TestLFNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=100, col_offset=21)], [Assign([Name('NEWLINE', Store(), lineno=101, col_offset=4)], Str('\n', lineno=101, col_offset=14), lineno=101, col_offset=4), Assign([Name('DATA', Store(), lineno=102, col_offset=4)], Name('DATA_LF', Load(), lineno=102, col_offset=11), lineno=102, col_offset=4)], [], lineno=100, col_offset=0), ClassDef('TestCRLFNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=104, col_offset=23)], [Assign([Name('NEWLINE', Store(), lineno=105, col_offset=4)], Str('\r\n', lineno=105, col_offset=14), lineno=105, col_offset=4), Assign([Name('DATA', Store(), lineno=106, col_offset=4)], Name('DATA_CRLF', Load(), lineno=106, col_offset=11), lineno=106, col_offset=4), FunctionDef('test_tell', arguments([Name('self', Param(), lineno=108, col_offset=18)], None, None, []), [With(Call(Name('open', Load(), lineno=109, col_offset=13), [Attribute(Name('test_support', Load(), lineno=109, col_offset=18), 'TESTFN', Load(), lineno=109, col_offset=18), Attribute(Name('self', Load(), lineno=109, col_offset=39), 'READMODE', Load(), lineno=109, col_offset=39)], [], None, None, lineno=109, col_offset=13), Name('fp', Store(), lineno=109, col_offset=57), [Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'assertEqual', Load(), lineno=110, col_offset=12), [Call(Name('repr', Load(), lineno=110, col_offset=29), [Attribute(Name('fp', Load(), lineno=110, col_offset=34), 'newlines', Load(), lineno=110, col_offset=34)], [], None, None, lineno=110, col_offset=29), Call(Name('repr', Load(), lineno=110, col_offset=48), [Name('None', Load(), lineno=110, col_offset=53)], [], None, None, lineno=110, col_offset=48)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12), Assign([Name('data', Store(), lineno=111, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=111, col_offset=19), 'readline', Load(), lineno=111, col_offset=19), [], [], None, None, lineno=111, col_offset=19), lineno=111, col_offset=12), Assign([Name('pos', Store(), lineno=112, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=112, col_offset=18), 'tell', Load(), lineno=112, col_offset=18), [], [], None, None, lineno=112, col_offset=18), lineno=112, col_offset=12)], lineno=109, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Call(Name('repr', Load(), lineno=113, col_offset=25), [Attribute(Name('fp', Load(), lineno=113, col_offset=30), 'newlines', Load(), lineno=113, col_offset=30)], [], None, None, lineno=113, col_offset=25), Call(Name('repr', Load(), lineno=113, col_offset=44), [Attribute(Name('self', Load(), lineno=113, col_offset=49), 'NEWLINE', Load(), lineno=113, col_offset=49)], [], None, None, lineno=113, col_offset=44)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=108, col_offset=4)], [], lineno=104, col_offset=0), ClassDef('TestMixedNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=115, col_offset=24)], [Assign([Name('NEWLINE', Store(), lineno=116, col_offset=4)], Tuple([Str('\r', lineno=116, col_offset=15), Str('\n', lineno=116, col_offset=21)], Load(), lineno=116, col_offset=15), lineno=116, col_offset=4), Assign([Name('DATA', Store(), lineno=117, col_offset=4)], Name('DATA_MIXED', Load(), lineno=117, col_offset=11), lineno=117, col_offset=4)], [], lineno=115, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=121, col_offset=4), 'run_unittest', Load(), lineno=121, col_offset=4), [Name('TestNativeNewlines', Load(), lineno=122, col_offset=8), Name('TestCRNewlines', Load(), lineno=123, col_offset=8), Name('TestLFNewlines', Load(), lineno=124, col_offset=8), Name('TestCRLFNewlines', Load(), lineno=125, col_offset=8), Name('TestMixedNewlines', Load(), lineno=126, col_offset=8)], [], None, None, lineno=121, col_offset=4), lineno=121, col_offset=4)], [], lineno=120, col_offset=0), If(Compare(Name('__name__', Load(), lineno=129, col_offset=3), [Eq()], [Str('__main__', lineno=129, col_offset=15)], lineno=129, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=130, col_offset=4), [], [], None, None, lineno=130, col_offset=4), lineno=130, col_offset=4)], [], lineno=129, col_offset=0)])
