Module([Expr(Str('Utility functions, node construction macros, etc.', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('itertools', [alias('islice', None)], 0, lineno=4, col_offset=0), ImportFrom('pgen2', [alias('token', None)], 1, lineno=7, col_offset=0), ImportFrom('pytree', [alias('Leaf', None), alias('Node', None)], 1, lineno=8, col_offset=0), ImportFrom('pygram', [alias('python_symbols', 'syms')], 1, lineno=9, col_offset=0), ImportFrom(None, [alias('patcomp', None)], 1, lineno=10, col_offset=0), FunctionDef('KeywordArg', arguments([Name('keyword', Param(), lineno=17, col_offset=15), Name('value', Param(), lineno=17, col_offset=24)], None, None, []), [Return(Call(Name('Node', Load(), lineno=18, col_offset=11), [Attribute(Name('syms', Load(), lineno=18, col_offset=16), 'argument', Load(), lineno=18, col_offset=16), List([Name('keyword', Load(), lineno=19, col_offset=17), Call(Name('Leaf', Load(), lineno=19, col_offset=26), [Attribute(Name('token', Load(), lineno=19, col_offset=31), 'EQUAL', Load(), lineno=19, col_offset=31), Str(u'=', lineno=19, col_offset=44)], [], None, None, lineno=19, col_offset=26), Name('value', Load(), lineno=19, col_offset=51)], Load(), lineno=19, col_offset=16)], [], None, None, lineno=18, col_offset=11), lineno=18, col_offset=4)], [], lineno=17, col_offset=0), FunctionDef('LParen', arguments([], None, None, []), [Return(Call(Name('Leaf', Load(), lineno=22, col_offset=11), [Attribute(Name('token', Load(), lineno=22, col_offset=16), 'LPAR', Load(), lineno=22, col_offset=16), Str(u'(', lineno=22, col_offset=28)], [], None, None, lineno=22, col_offset=11), lineno=22, col_offset=4)], [], lineno=21, col_offset=0), FunctionDef('RParen', arguments([], None, None, []), [Return(Call(Name('Leaf', Load(), lineno=25, col_offset=11), [Attribute(Name('token', Load(), lineno=25, col_offset=16), 'RPAR', Load(), lineno=25, col_offset=16), Str(u')', lineno=25, col_offset=28)], [], None, None, lineno=25, col_offset=11), lineno=25, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('Assign', arguments([Name('target', Param(), lineno=27, col_offset=11), Name('source', Param(), lineno=27, col_offset=19)], None, None, []), [Expr(Str('Build an assignment statement', lineno=28, col_offset=4), lineno=28, col_offset=4), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=29, col_offset=11), [Name('target', Load(), lineno=29, col_offset=22), Name('list', Load(), lineno=29, col_offset=30)], [], None, None, lineno=29, col_offset=11), lineno=29, col_offset=7), [Assign([Name('target', Store(), lineno=30, col_offset=8)], List([Name('target', Load(), lineno=30, col_offset=18)], Load(), lineno=30, col_offset=17), lineno=30, col_offset=8)], [], lineno=29, col_offset=4), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=31, col_offset=11), [Name('source', Load(), lineno=31, col_offset=22), Name('list', Load(), lineno=31, col_offset=30)], [], None, None, lineno=31, col_offset=11), lineno=31, col_offset=7), [Assign([Attribute(Name('source', Load(), lineno=32, col_offset=8), 'prefix', Store(), lineno=32, col_offset=8)], Str(u' ', lineno=32, col_offset=24), lineno=32, col_offset=8), Assign([Name('source', Store(), lineno=33, col_offset=8)], List([Name('source', Load(), lineno=33, col_offset=18)], Load(), lineno=33, col_offset=17), lineno=33, col_offset=8)], [], lineno=31, col_offset=4), Return(Call(Name('Node', Load(), lineno=35, col_offset=11), [Attribute(Name('syms', Load(), lineno=35, col_offset=16), 'atom', Load(), lineno=35, col_offset=16), BinOp(BinOp(Name('target', Load(), lineno=36, col_offset=16), Add(), List([Call(Name('Leaf', Load(), lineno=36, col_offset=26), [Attribute(Name('token', Load(), lineno=36, col_offset=31), 'EQUAL', Load(), lineno=36, col_offset=31), Str(u'=', lineno=36, col_offset=44)], [keyword('prefix', Str(u' ', lineno=36, col_offset=57))], None, None, lineno=36, col_offset=26)], Load(), lineno=36, col_offset=25), lineno=36, col_offset=16), Add(), Name('source', Load(), lineno=36, col_offset=66), lineno=36, col_offset=64)], [], None, None, lineno=35, col_offset=11), lineno=35, col_offset=4)], [], lineno=27, col_offset=0), FunctionDef('Name', arguments([Name('name', Param(), lineno=38, col_offset=9), Name('prefix', Param(), lineno=38, col_offset=15)], None, None, [Name('None', Load(), lineno=38, col_offset=22)]), [Expr(Str('Return a NAME leaf', lineno=39, col_offset=4), lineno=39, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=40, col_offset=11), [Attribute(Name('token', Load(), lineno=40, col_offset=16), 'NAME', Load(), lineno=40, col_offset=16), Name('name', Load(), lineno=40, col_offset=28)], [keyword('prefix', Name('prefix', Load(), lineno=40, col_offset=41))], None, None, lineno=40, col_offset=11), lineno=40, col_offset=4)], [], lineno=38, col_offset=0), FunctionDef('Attr', arguments([Name('obj', Param(), lineno=42, col_offset=9), Name('attr', Param(), lineno=42, col_offset=14)], None, None, []), [Expr(Str('A node tuple for obj.attr', lineno=43, col_offset=4), lineno=43, col_offset=4), Return(List([Name('obj', Load(), lineno=44, col_offset=12), Call(Name('Node', Load(), lineno=44, col_offset=17), [Attribute(Name('syms', Load(), lineno=44, col_offset=22), 'trailer', Load(), lineno=44, col_offset=22), List([Call(Name('Dot', Load(), lineno=44, col_offset=37), [], [], None, None, lineno=44, col_offset=37), Name('attr', Load(), lineno=44, col_offset=44)], Load(), lineno=44, col_offset=36)], [], None, None, lineno=44, col_offset=17)], Load(), lineno=44, col_offset=11), lineno=44, col_offset=4)], [], lineno=42, col_offset=0), FunctionDef('Comma', arguments([], None, None, []), [Expr(Str('A comma leaf', lineno=47, col_offset=4), lineno=47, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=48, col_offset=11), [Attribute(Name('token', Load(), lineno=48, col_offset=16), 'COMMA', Load(), lineno=48, col_offset=16), Str(u',', lineno=48, col_offset=29)], [], None, None, lineno=48, col_offset=11), lineno=48, col_offset=4)], [], lineno=46, col_offset=0), FunctionDef('Dot', arguments([], None, None, []), [Expr(Str('A period (.) leaf', lineno=51, col_offset=4), lineno=51, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=52, col_offset=11), [Attribute(Name('token', Load(), lineno=52, col_offset=16), 'DOT', Load(), lineno=52, col_offset=16), Str(u'.', lineno=52, col_offset=27)], [], None, None, lineno=52, col_offset=11), lineno=52, col_offset=4)], [], lineno=50, col_offset=0), FunctionDef('ArgList', arguments([Name('args', Param(), lineno=54, col_offset=12), Name('lparen', Param(), lineno=54, col_offset=18), Name('rparen', Param(), lineno=54, col_offset=35)], None, None, [Call(Name('LParen', Load(), lineno=54, col_offset=25), [], [], None, None, lineno=54, col_offset=25), Call(Name('RParen', Load(), lineno=54, col_offset=42), [], [], None, None, lineno=54, col_offset=42)]), [Expr(Str('A parenthesised argument list, used by Call()', lineno=55, col_offset=4), lineno=55, col_offset=4), Assign([Name('node', Store(), lineno=56, col_offset=4)], Call(Name('Node', Load(), lineno=56, col_offset=11), [Attribute(Name('syms', Load(), lineno=56, col_offset=16), 'trailer', Load(), lineno=56, col_offset=16), List([Call(Attribute(Name('lparen', Load(), lineno=56, col_offset=31), 'clone', Load(), lineno=56, col_offset=31), [], [], None, None, lineno=56, col_offset=31), Call(Attribute(Name('rparen', Load(), lineno=56, col_offset=47), 'clone', Load(), lineno=56, col_offset=47), [], [], None, None, lineno=56, col_offset=47)], Load(), lineno=56, col_offset=30)], [], None, None, lineno=56, col_offset=11), lineno=56, col_offset=4), If(Name('args', Load(), lineno=57, col_offset=7), [Expr(Call(Attribute(Name('node', Load(), lineno=58, col_offset=8), 'insert_child', Load(), lineno=58, col_offset=8), [Num(1, lineno=58, col_offset=26), Call(Name('Node', Load(), lineno=58, col_offset=29), [Attribute(Name('syms', Load(), lineno=58, col_offset=34), 'arglist', Load(), lineno=58, col_offset=34), Name('args', Load(), lineno=58, col_offset=48)], [], None, None, lineno=58, col_offset=29)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8)], [], lineno=57, col_offset=4), Return(Name('node', Load(), lineno=59, col_offset=11), lineno=59, col_offset=4)], [], lineno=54, col_offset=0), FunctionDef('Call', arguments([Name('func_name', Param(), lineno=61, col_offset=9), Name('args', Param(), lineno=61, col_offset=20), Name('prefix', Param(), lineno=61, col_offset=31)], None, None, [Name('None', Load(), lineno=61, col_offset=25), Name('None', Load(), lineno=61, col_offset=38)]), [Expr(Str('A function call', lineno=62, col_offset=4), lineno=62, col_offset=4), Assign([Name('node', Store(), lineno=63, col_offset=4)], Call(Name('Node', Load(), lineno=63, col_offset=11), [Attribute(Name('syms', Load(), lineno=63, col_offset=16), 'power', Load(), lineno=63, col_offset=16), List([Name('func_name', Load(), lineno=63, col_offset=29), Call(Name('ArgList', Load(), lineno=63, col_offset=40), [Name('args', Load(), lineno=63, col_offset=48)], [], None, None, lineno=63, col_offset=40)], Load(), lineno=63, col_offset=28)], [], None, None, lineno=63, col_offset=11), lineno=63, col_offset=4), If(Compare(Name('prefix', Load(), lineno=64, col_offset=7), [IsNot()], [Name('None', Load(), lineno=64, col_offset=21)], lineno=64, col_offset=7), [Assign([Attribute(Name('node', Load(), lineno=65, col_offset=8), 'prefix', Store(), lineno=65, col_offset=8)], Name('prefix', Load(), lineno=65, col_offset=22), lineno=65, col_offset=8)], [], lineno=64, col_offset=4), Return(Name('node', Load(), lineno=66, col_offset=11), lineno=66, col_offset=4)], [], lineno=61, col_offset=0), FunctionDef('Newline', arguments([], None, None, []), [Expr(Str('A newline literal', lineno=69, col_offset=4), lineno=69, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=70, col_offset=11), [Attribute(Name('token', Load(), lineno=70, col_offset=16), 'NEWLINE', Load(), lineno=70, col_offset=16), Str(u'\n', lineno=70, col_offset=31)], [], None, None, lineno=70, col_offset=11), lineno=70, col_offset=4)], [], lineno=68, col_offset=0), FunctionDef('BlankLine', arguments([], None, None, []), [Expr(Str('A blank line', lineno=73, col_offset=4), lineno=73, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=74, col_offset=11), [Attribute(Name('token', Load(), lineno=74, col_offset=16), 'NEWLINE', Load(), lineno=74, col_offset=16), Str(u'', lineno=74, col_offset=31)], [], None, None, lineno=74, col_offset=11), lineno=74, col_offset=4)], [], lineno=72, col_offset=0), FunctionDef('Number', arguments([Name('n', Param(), lineno=76, col_offset=11), Name('prefix', Param(), lineno=76, col_offset=14)], None, None, [Name('None', Load(), lineno=76, col_offset=21)]), [Return(Call(Name('Leaf', Load(), lineno=77, col_offset=11), [Attribute(Name('token', Load(), lineno=77, col_offset=16), 'NUMBER', Load(), lineno=77, col_offset=16), Name('n', Load(), lineno=77, col_offset=30)], [keyword('prefix', Name('prefix', Load(), lineno=77, col_offset=40))], None, None, lineno=77, col_offset=11), lineno=77, col_offset=4)], [], lineno=76, col_offset=0), FunctionDef('Subscript', arguments([Name('index_node', Param(), lineno=79, col_offset=14)], None, None, []), [Expr(Str('A numeric or string subscript', lineno=80, col_offset=4), lineno=80, col_offset=4), Return(Call(Name('Node', Load(), lineno=81, col_offset=11), [Attribute(Name('syms', Load(), lineno=81, col_offset=16), 'trailer', Load(), lineno=81, col_offset=16), List([Call(Name('Leaf', Load(), lineno=81, col_offset=31), [Attribute(Name('token', Load(), lineno=81, col_offset=36), 'LBRACE', Load(), lineno=81, col_offset=36), Str(u'[', lineno=81, col_offset=50)], [], None, None, lineno=81, col_offset=31), Name('index_node', Load(), lineno=82, col_offset=31), Call(Name('Leaf', Load(), lineno=83, col_offset=31), [Attribute(Name('token', Load(), lineno=83, col_offset=36), 'RBRACE', Load(), lineno=83, col_offset=36), Str(u']', lineno=83, col_offset=50)], [], None, None, lineno=83, col_offset=31)], Load(), lineno=81, col_offset=30)], [], None, None, lineno=81, col_offset=11), lineno=81, col_offset=4)], [], lineno=79, col_offset=0), FunctionDef('String', arguments([Name('string', Param(), lineno=85, col_offset=11), Name('prefix', Param(), lineno=85, col_offset=19)], None, None, [Name('None', Load(), lineno=85, col_offset=26)]), [Expr(Str('A string leaf', lineno=86, col_offset=4), lineno=86, col_offset=4), Return(Call(Name('Leaf', Load(), lineno=87, col_offset=11), [Attribute(Name('token', Load(), lineno=87, col_offset=16), 'STRING', Load(), lineno=87, col_offset=16), Name('string', Load(), lineno=87, col_offset=30)], [keyword('prefix', Name('prefix', Load(), lineno=87, col_offset=45))], None, None, lineno=87, col_offset=11), lineno=87, col_offset=4)], [], lineno=85, col_offset=0), FunctionDef('ListComp', arguments([Name('xp', Param(), lineno=89, col_offset=13), Name('fp', Param(), lineno=89, col_offset=17), Name('it', Param(), lineno=89, col_offset=21), Name('test', Param(), lineno=89, col_offset=25)], None, None, [Name('None', Load(), lineno=89, col_offset=30)]), [Expr(Str('A list comprehension of the form [xp for fp in it if test].\n\n    If test is None, the "if test" part is omitted.\n    ', lineno=93, col_offset=-1), lineno=93, col_offset=-1), Assign([Attribute(Name('xp', Load(), lineno=94, col_offset=4), 'prefix', Store(), lineno=94, col_offset=4)], Str(u'', lineno=94, col_offset=16), lineno=94, col_offset=4), Assign([Attribute(Name('fp', Load(), lineno=95, col_offset=4), 'prefix', Store(), lineno=95, col_offset=4)], Str(u' ', lineno=95, col_offset=16), lineno=95, col_offset=4), Assign([Attribute(Name('it', Load(), lineno=96, col_offset=4), 'prefix', Store(), lineno=96, col_offset=4)], Str(u' ', lineno=96, col_offset=16), lineno=96, col_offset=4), Assign([Name('for_leaf', Store(), lineno=97, col_offset=4)], Call(Name('Leaf', Load(), lineno=97, col_offset=15), [Attribute(Name('token', Load(), lineno=97, col_offset=20), 'NAME', Load(), lineno=97, col_offset=20), Str(u'for', lineno=97, col_offset=32)], [], None, None, lineno=97, col_offset=15), lineno=97, col_offset=4), Assign([Attribute(Name('for_leaf', Load(), lineno=98, col_offset=4), 'prefix', Store(), lineno=98, col_offset=4)], Str(u' ', lineno=98, col_offset=22), lineno=98, col_offset=4), Assign([Name('in_leaf', Store(), lineno=99, col_offset=4)], Call(Name('Leaf', Load(), lineno=99, col_offset=14), [Attribute(Name('token', Load(), lineno=99, col_offset=19), 'NAME', Load(), lineno=99, col_offset=19), Str(u'in', lineno=99, col_offset=31)], [], None, None, lineno=99, col_offset=14), lineno=99, col_offset=4), Assign([Attribute(Name('in_leaf', Load(), lineno=100, col_offset=4), 'prefix', Store(), lineno=100, col_offset=4)], Str(u' ', lineno=100, col_offset=21), lineno=100, col_offset=4), Assign([Name('inner_args', Store(), lineno=101, col_offset=4)], List([Name('for_leaf', Load(), lineno=101, col_offset=18), Name('fp', Load(), lineno=101, col_offset=28), Name('in_leaf', Load(), lineno=101, col_offset=32), Name('it', Load(), lineno=101, col_offset=41)], Load(), lineno=101, col_offset=17), lineno=101, col_offset=4), If(Name('test', Load(), lineno=102, col_offset=7), [Assign([Attribute(Name('test', Load(), lineno=103, col_offset=8), 'prefix', Store(), lineno=103, col_offset=8)], Str(u' ', lineno=103, col_offset=22), lineno=103, col_offset=8), Assign([Name('if_leaf', Store(), lineno=104, col_offset=8)], Call(Name('Leaf', Load(), lineno=104, col_offset=18), [Attribute(Name('token', Load(), lineno=104, col_offset=23), 'NAME', Load(), lineno=104, col_offset=23), Str(u'if', lineno=104, col_offset=35)], [], None, None, lineno=104, col_offset=18), lineno=104, col_offset=8), Assign([Attribute(Name('if_leaf', Load(), lineno=105, col_offset=8), 'prefix', Store(), lineno=105, col_offset=8)], Str(u' ', lineno=105, col_offset=25), lineno=105, col_offset=8), Expr(Call(Attribute(Name('inner_args', Load(), lineno=106, col_offset=8), 'append', Load(), lineno=106, col_offset=8), [Call(Name('Node', Load(), lineno=106, col_offset=26), [Attribute(Name('syms', Load(), lineno=106, col_offset=31), 'comp_if', Load(), lineno=106, col_offset=31), List([Name('if_leaf', Load(), lineno=106, col_offset=46), Name('test', Load(), lineno=106, col_offset=55)], Load(), lineno=106, col_offset=45)], [], None, None, lineno=106, col_offset=26)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8)], [], lineno=102, col_offset=4), Assign([Name('inner', Store(), lineno=107, col_offset=4)], Call(Name('Node', Load(), lineno=107, col_offset=12), [Attribute(Name('syms', Load(), lineno=107, col_offset=17), 'listmaker', Load(), lineno=107, col_offset=17), List([Name('xp', Load(), lineno=107, col_offset=34), Call(Name('Node', Load(), lineno=107, col_offset=38), [Attribute(Name('syms', Load(), lineno=107, col_offset=43), 'comp_for', Load(), lineno=107, col_offset=43), Name('inner_args', Load(), lineno=107, col_offset=58)], [], None, None, lineno=107, col_offset=38)], Load(), lineno=107, col_offset=33)], [], None, None, lineno=107, col_offset=12), lineno=107, col_offset=4), Return(Call(Name('Node', Load(), lineno=108, col_offset=11), [Attribute(Name('syms', Load(), lineno=108, col_offset=16), 'atom', Load(), lineno=108, col_offset=16), List([Call(Name('Leaf', Load(), lineno=109, col_offset=24), [Attribute(Name('token', Load(), lineno=109, col_offset=29), 'LBRACE', Load(), lineno=109, col_offset=29), Str(u'[', lineno=109, col_offset=43)], [], None, None, lineno=109, col_offset=24), Name('inner', Load(), lineno=110, col_offset=24), Call(Name('Leaf', Load(), lineno=111, col_offset=24), [Attribute(Name('token', Load(), lineno=111, col_offset=29), 'RBRACE', Load(), lineno=111, col_offset=29), Str(u']', lineno=111, col_offset=43)], [], None, None, lineno=111, col_offset=24)], Load(), lineno=109, col_offset=23)], [], None, None, lineno=108, col_offset=11), lineno=108, col_offset=4)], [], lineno=89, col_offset=0), FunctionDef('FromImport', arguments([Name('package_name', Param(), lineno=113, col_offset=15), Name('name_leafs', Param(), lineno=113, col_offset=29)], None, None, []), [Expr(Str(' Return an import statement in the form:\n        from package import name_leafs', lineno=115, col_offset=-1), lineno=115, col_offset=-1), For(Name('leaf', Store(), lineno=121, col_offset=8), Name('name_leafs', Load(), lineno=121, col_offset=16), [Expr(Call(Attribute(Name('leaf', Load(), lineno=123, col_offset=8), 'remove', Load(), lineno=123, col_offset=8), [], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=121, col_offset=4), Assign([Name('children', Store(), lineno=125, col_offset=4)], List([Call(Name('Leaf', Load(), lineno=125, col_offset=16), [Attribute(Name('token', Load(), lineno=125, col_offset=21), 'NAME', Load(), lineno=125, col_offset=21), Str(u'from', lineno=125, col_offset=33)], [], None, None, lineno=125, col_offset=16), Call(Name('Leaf', Load(), lineno=126, col_offset=16), [Attribute(Name('token', Load(), lineno=126, col_offset=21), 'NAME', Load(), lineno=126, col_offset=21), Name('package_name', Load(), lineno=126, col_offset=33)], [keyword('prefix', Str(u' ', lineno=126, col_offset=54))], None, None, lineno=126, col_offset=16), Call(Name('Leaf', Load(), lineno=127, col_offset=16), [Attribute(Name('token', Load(), lineno=127, col_offset=21), 'NAME', Load(), lineno=127, col_offset=21), Str(u'import', lineno=127, col_offset=33)], [keyword('prefix', Str(u' ', lineno=127, col_offset=51))], None, None, lineno=127, col_offset=16), Call(Name('Node', Load(), lineno=128, col_offset=16), [Attribute(Name('syms', Load(), lineno=128, col_offset=21), 'import_as_names', Load(), lineno=128, col_offset=21), Name('name_leafs', Load(), lineno=128, col_offset=43)], [], None, None, lineno=128, col_offset=16)], Load(), lineno=125, col_offset=15), lineno=125, col_offset=4), Assign([Name('imp', Store(), lineno=129, col_offset=4)], Call(Name('Node', Load(), lineno=129, col_offset=10), [Attribute(Name('syms', Load(), lineno=129, col_offset=15), 'import_from', Load(), lineno=129, col_offset=15), Name('children', Load(), lineno=129, col_offset=33)], [], None, None, lineno=129, col_offset=10), lineno=129, col_offset=4), Return(Name('imp', Load(), lineno=130, col_offset=11), lineno=130, col_offset=4)], [], lineno=113, col_offset=0), FunctionDef('is_tuple', arguments([Name('node', Param(), lineno=137, col_offset=13)], None, None, []), [Expr(Str('Does the node represent a tuple literal?', lineno=138, col_offset=4), lineno=138, col_offset=4), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=139, col_offset=7), [Name('node', Load(), lineno=139, col_offset=18), Name('Node', Load(), lineno=139, col_offset=24)], [], None, None, lineno=139, col_offset=7), Compare(Attribute(Name('node', Load(), lineno=139, col_offset=34), 'children', Load(), lineno=139, col_offset=34), [Eq()], [List([Call(Name('LParen', Load(), lineno=139, col_offset=52), [], [], None, None, lineno=139, col_offset=52), Call(Name('RParen', Load(), lineno=139, col_offset=62), [], [], None, None, lineno=139, col_offset=62)], Load(), lineno=139, col_offset=51)], lineno=139, col_offset=34)], lineno=139, col_offset=7), [Return(Name('True', Load(), lineno=140, col_offset=15), lineno=140, col_offset=8)], [], lineno=139, col_offset=4), Return(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=141, col_offset=12), [Name('node', Load(), lineno=141, col_offset=23), Name('Node', Load(), lineno=141, col_offset=29)], [], None, None, lineno=141, col_offset=12), Compare(Call(Name('len', Load(), lineno=142, col_offset=16), [Attribute(Name('node', Load(), lineno=142, col_offset=20), 'children', Load(), lineno=142, col_offset=20)], [], None, None, lineno=142, col_offset=16), [Eq()], [Num(3, lineno=142, col_offset=38)], lineno=142, col_offset=16), Call(Name('isinstance', Load(), lineno=143, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=143, col_offset=27), 'children', Load(), lineno=143, col_offset=27), Index(Num(0, lineno=143, col_offset=41)), Load(), lineno=143, col_offset=27), Name('Leaf', Load(), lineno=143, col_offset=45)], [], None, None, lineno=143, col_offset=16), Call(Name('isinstance', Load(), lineno=144, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=144, col_offset=27), 'children', Load(), lineno=144, col_offset=27), Index(Num(1, lineno=144, col_offset=41)), Load(), lineno=144, col_offset=27), Name('Node', Load(), lineno=144, col_offset=45)], [], None, None, lineno=144, col_offset=16), Call(Name('isinstance', Load(), lineno=145, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=145, col_offset=27), 'children', Load(), lineno=145, col_offset=27), Index(Num(2, lineno=145, col_offset=41)), Load(), lineno=145, col_offset=27), Name('Leaf', Load(), lineno=145, col_offset=45)], [], None, None, lineno=145, col_offset=16), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=146, col_offset=16), 'children', Load(), lineno=146, col_offset=16), Index(Num(0, lineno=146, col_offset=30)), Load(), lineno=146, col_offset=16), 'value', Load(), lineno=146, col_offset=16), [Eq()], [Str(u'(', lineno=146, col_offset=42)], lineno=146, col_offset=16), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=147, col_offset=16), 'children', Load(), lineno=147, col_offset=16), Index(Num(2, lineno=147, col_offset=30)), Load(), lineno=147, col_offset=16), 'value', Load(), lineno=147, col_offset=16), [Eq()], [Str(u')', lineno=147, col_offset=42)], lineno=147, col_offset=16)], lineno=141, col_offset=12), lineno=141, col_offset=4)], [], lineno=137, col_offset=0), FunctionDef('is_list', arguments([Name('node', Param(), lineno=149, col_offset=12)], None, None, []), [Expr(Str('Does the node represent a list literal?', lineno=150, col_offset=4), lineno=150, col_offset=4), Return(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=151, col_offset=12), [Name('node', Load(), lineno=151, col_offset=23), Name('Node', Load(), lineno=151, col_offset=29)], [], None, None, lineno=151, col_offset=12), Compare(Call(Name('len', Load(), lineno=152, col_offset=16), [Attribute(Name('node', Load(), lineno=152, col_offset=20), 'children', Load(), lineno=152, col_offset=20)], [], None, None, lineno=152, col_offset=16), [Gt()], [Num(1, lineno=152, col_offset=37)], lineno=152, col_offset=16), Call(Name('isinstance', Load(), lineno=153, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=153, col_offset=27), 'children', Load(), lineno=153, col_offset=27), Index(Num(0, lineno=153, col_offset=41)), Load(), lineno=153, col_offset=27), Name('Leaf', Load(), lineno=153, col_offset=45)], [], None, None, lineno=153, col_offset=16), Call(Name('isinstance', Load(), lineno=154, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=154, col_offset=27), 'children', Load(), lineno=154, col_offset=27), Index(Num(-1, lineno=154, col_offset=42)), Load(), lineno=154, col_offset=27), Name('Leaf', Load(), lineno=154, col_offset=46)], [], None, None, lineno=154, col_offset=16), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=155, col_offset=16), 'children', Load(), lineno=155, col_offset=16), Index(Num(0, lineno=155, col_offset=30)), Load(), lineno=155, col_offset=16), 'value', Load(), lineno=155, col_offset=16), [Eq()], [Str(u'[', lineno=155, col_offset=42)], lineno=155, col_offset=16), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=156, col_offset=16), 'children', Load(), lineno=156, col_offset=16), Index(Num(-1, lineno=156, col_offset=31)), Load(), lineno=156, col_offset=16), 'value', Load(), lineno=156, col_offset=16), [Eq()], [Str(u']', lineno=156, col_offset=43)], lineno=156, col_offset=16)], lineno=151, col_offset=12), lineno=151, col_offset=4)], [], lineno=149, col_offset=0), FunctionDef('parenthesize', arguments([Name('node', Param(), lineno=163, col_offset=17)], None, None, []), [Return(Call(Name('Node', Load(), lineno=164, col_offset=11), [Attribute(Name('syms', Load(), lineno=164, col_offset=16), 'atom', Load(), lineno=164, col_offset=16), List([Call(Name('LParen', Load(), lineno=164, col_offset=28), [], [], None, None, lineno=164, col_offset=28), Name('node', Load(), lineno=164, col_offset=38), Call(Name('RParen', Load(), lineno=164, col_offset=44), [], [], None, None, lineno=164, col_offset=44)], Load(), lineno=164, col_offset=27)], [], None, None, lineno=164, col_offset=11), lineno=164, col_offset=4)], [], lineno=163, col_offset=0), Assign([Name('consuming_calls', Store(), lineno=167, col_offset=0)], Call(Name('set', Load(), lineno=167, col_offset=18), [List([Str('sorted', lineno=167, col_offset=23), Str('list', lineno=167, col_offset=33), Str('set', lineno=167, col_offset=41), Str('any', lineno=167, col_offset=48), Str('all', lineno=167, col_offset=55), Str('tuple', lineno=167, col_offset=62), Str('sum', lineno=167, col_offset=71), Str('min', lineno=168, col_offset=23), Str('max', lineno=168, col_offset=30)], Load(), lineno=167, col_offset=22)], [], None, None, lineno=167, col_offset=18), lineno=167, col_offset=0), FunctionDef('attr_chain', arguments([Name('obj', Param(), lineno=170, col_offset=15), Name('attr', Param(), lineno=170, col_offset=20)], None, None, []), [Expr(Str('Follow an attribute chain.\n\n    If you have a chain of objects where a.foo -> b, b.foo-> c, etc,\n    use this to iterate over all objects in the chain. Iteration is\n    terminated by getattr(x, attr) is None.\n\n    Args:\n        obj: the starting object\n        attr: the name of the chaining attribute\n\n    Yields:\n        Each successive object in the chain.\n    ', lineno=183, col_offset=-1), lineno=183, col_offset=-1), Assign([Name('next', Store(), lineno=184, col_offset=4)], Call(Name('getattr', Load(), lineno=184, col_offset=11), [Name('obj', Load(), lineno=184, col_offset=19), Name('attr', Load(), lineno=184, col_offset=24)], [], None, None, lineno=184, col_offset=11), lineno=184, col_offset=4), While(Name('next', Load(), lineno=185, col_offset=10), [Expr(Yield(Name('next', Load(), lineno=186, col_offset=14), lineno=186, col_offset=8), lineno=186, col_offset=8), Assign([Name('next', Store(), lineno=187, col_offset=8)], Call(Name('getattr', Load(), lineno=187, col_offset=15), [Name('next', Load(), lineno=187, col_offset=23), Name('attr', Load(), lineno=187, col_offset=29)], [], None, None, lineno=187, col_offset=15), lineno=187, col_offset=8)], [], lineno=185, col_offset=4)], [], lineno=170, col_offset=0), Assign([Name('p0', Store(), lineno=189, col_offset=0)], Str("for_stmt< 'for' any 'in' node=any ':' any* >\n        | comp_for< 'for' any 'in' node=any any* >\n     ", lineno=191, col_offset=-1), lineno=189, col_offset=0), Assign([Name('p1', Store(), lineno=192, col_offset=0)], Str("\npower<\n    ( 'iter' | 'list' | 'tuple' | 'sorted' | 'set' | 'sum' |\n      'any' | 'all' | (any* trailer< '.' 'join' >) )\n    trailer< '(' node=any ')' >\n    any*\n>\n", lineno=199, col_offset=-1), lineno=192, col_offset=0), Assign([Name('p2', Store(), lineno=200, col_offset=0)], Str("\npower<\n    'sorted'\n    trailer< '(' arglist<node=any any*> ')' >\n    any*\n>\n", lineno=206, col_offset=-1), lineno=200, col_offset=0), Assign([Name('pats_built', Store(), lineno=207, col_offset=0)], Name('False', Load(), lineno=207, col_offset=13), lineno=207, col_offset=0), FunctionDef('in_special_context', arguments([Name('node', Param(), lineno=208, col_offset=23)], None, None, []), [Expr(Str(" Returns true if node is in an environment where all that is required\n        of it is being itterable (ie, it doesn't matter if it returns a list\n        or an itterator).\n        See test_map_nochange in test_fixers.py for some examples and tests.\n        ", lineno=213, col_offset=-1), lineno=213, col_offset=-1), Global(['p0', 'p1', 'p2', 'pats_built'], lineno=214, col_offset=4), If(UnaryOp(Not(), Name('pats_built', Load(), lineno=215, col_offset=11), lineno=215, col_offset=7), [Assign([Name('p1', Store(), lineno=216, col_offset=8)], Call(Attribute(Name('patcomp', Load(), lineno=216, col_offset=13), 'compile_pattern', Load(), lineno=216, col_offset=13), [Name('p1', Load(), lineno=216, col_offset=37)], [], None, None, lineno=216, col_offset=13), lineno=216, col_offset=8), Assign([Name('p0', Store(), lineno=217, col_offset=8)], Call(Attribute(Name('patcomp', Load(), lineno=217, col_offset=13), 'compile_pattern', Load(), lineno=217, col_offset=13), [Name('p0', Load(), lineno=217, col_offset=37)], [], None, None, lineno=217, col_offset=13), lineno=217, col_offset=8), Assign([Name('p2', Store(), lineno=218, col_offset=8)], Call(Attribute(Name('patcomp', Load(), lineno=218, col_offset=13), 'compile_pattern', Load(), lineno=218, col_offset=13), [Name('p2', Load(), lineno=218, col_offset=37)], [], None, None, lineno=218, col_offset=13), lineno=218, col_offset=8), Assign([Name('pats_built', Store(), lineno=219, col_offset=8)], Name('True', Load(), lineno=219, col_offset=21), lineno=219, col_offset=8)], [], lineno=215, col_offset=4), Assign([Name('patterns', Store(), lineno=220, col_offset=4)], List([Name('p0', Load(), lineno=220, col_offset=16), Name('p1', Load(), lineno=220, col_offset=20), Name('p2', Load(), lineno=220, col_offset=24)], Load(), lineno=220, col_offset=15), lineno=220, col_offset=4), For(Tuple([Name('pattern', Store(), lineno=221, col_offset=8), Name('parent', Store(), lineno=221, col_offset=17)], Store(), lineno=221, col_offset=8), Call(Name('zip', Load(), lineno=221, col_offset=27), [Name('patterns', Load(), lineno=221, col_offset=31), Call(Name('attr_chain', Load(), lineno=221, col_offset=41), [Name('node', Load(), lineno=221, col_offset=52), Str('parent', lineno=221, col_offset=58)], [], None, None, lineno=221, col_offset=41)], [], None, None, lineno=221, col_offset=27), [Assign([Name('results', Store(), lineno=222, col_offset=8)], Dict([], [], lineno=222, col_offset=18), lineno=222, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('pattern', Load(), lineno=223, col_offset=11), 'match', Load(), lineno=223, col_offset=11), [Name('parent', Load(), lineno=223, col_offset=25), Name('results', Load(), lineno=223, col_offset=33)], [], None, None, lineno=223, col_offset=11), Compare(Subscript(Name('results', Load(), lineno=223, col_offset=46), Index(Str('node', lineno=223, col_offset=54)), Load(), lineno=223, col_offset=46), [Is()], [Name('node', Load(), lineno=223, col_offset=65)], lineno=223, col_offset=46)], lineno=223, col_offset=11), [Return(Name('True', Load(), lineno=224, col_offset=19), lineno=224, col_offset=12)], [], lineno=223, col_offset=8)], [], lineno=221, col_offset=4), Return(Name('False', Load(), lineno=225, col_offset=11), lineno=225, col_offset=4)], [], lineno=208, col_offset=0), FunctionDef('is_probably_builtin', arguments([Name('node', Param(), lineno=227, col_offset=24)], None, None, []), [Expr(Str("\n    Check that something isn't an attribute or function name etc.\n    ", lineno=230, col_offset=-1), lineno=230, col_offset=-1), Assign([Name('prev', Store(), lineno=231, col_offset=4)], Attribute(Name('node', Load(), lineno=231, col_offset=11), 'prev_sibling', Load(), lineno=231, col_offset=11), lineno=231, col_offset=4), If(BoolOp(And(), [Compare(Name('prev', Load(), lineno=232, col_offset=7), [IsNot()], [Name('None', Load(), lineno=232, col_offset=19)], lineno=232, col_offset=7), Compare(Attribute(Name('prev', Load(), lineno=232, col_offset=28), 'type', Load(), lineno=232, col_offset=28), [Eq()], [Attribute(Name('token', Load(), lineno=232, col_offset=41), 'DOT', Load(), lineno=232, col_offset=41)], lineno=232, col_offset=28)], lineno=232, col_offset=7), [Return(Name('False', Load(), lineno=234, col_offset=15), lineno=234, col_offset=8)], [], lineno=232, col_offset=4), Assign([Name('parent', Store(), lineno=235, col_offset=4)], Attribute(Name('node', Load(), lineno=235, col_offset=13), 'parent', Load(), lineno=235, col_offset=13), lineno=235, col_offset=4), If(Compare(Attribute(Name('parent', Load(), lineno=236, col_offset=7), 'type', Load(), lineno=236, col_offset=7), [In()], [Tuple([Attribute(Name('syms', Load(), lineno=236, col_offset=23), 'funcdef', Load(), lineno=236, col_offset=23), Attribute(Name('syms', Load(), lineno=236, col_offset=37), 'classdef', Load(), lineno=236, col_offset=37)], Load(), lineno=236, col_offset=23)], lineno=236, col_offset=7), [Return(Name('False', Load(), lineno=237, col_offset=15), lineno=237, col_offset=8)], [], lineno=236, col_offset=4), If(BoolOp(And(), [Compare(Attribute(Name('parent', Load(), lineno=238, col_offset=7), 'type', Load(), lineno=238, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=238, col_offset=22), 'expr_stmt', Load(), lineno=238, col_offset=22)], lineno=238, col_offset=7), Compare(Subscript(Attribute(Name('parent', Load(), lineno=238, col_offset=41), 'children', Load(), lineno=238, col_offset=41), Index(Num(0, lineno=238, col_offset=57)), Load(), lineno=238, col_offset=41), [Is()], [Name('node', Load(), lineno=238, col_offset=63)], lineno=238, col_offset=41)], lineno=238, col_offset=7), [Return(Name('False', Load(), lineno=240, col_offset=15), lineno=240, col_offset=8)], [], lineno=238, col_offset=4), If(BoolOp(Or(), [Compare(Attribute(Name('parent', Load(), lineno=241, col_offset=7), 'type', Load(), lineno=241, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=241, col_offset=22), 'parameters', Load(), lineno=241, col_offset=22)], lineno=241, col_offset=7), BoolOp(And(), [Compare(Attribute(Name('parent', Load(), lineno=242, col_offset=13), 'type', Load(), lineno=242, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=242, col_offset=28), 'typedargslist', Load(), lineno=242, col_offset=28)], lineno=242, col_offset=13), BoolOp(Or(), [BoolOp(And(), [Compare(Name('prev', Load(), lineno=243, col_offset=13), [IsNot()], [Name('None', Load(), lineno=243, col_offset=25)], lineno=243, col_offset=13), Compare(Attribute(Name('prev', Load(), lineno=243, col_offset=34), 'type', Load(), lineno=243, col_offset=34), [Eq()], [Attribute(Name('token', Load(), lineno=243, col_offset=47), 'COMMA', Load(), lineno=243, col_offset=47)], lineno=243, col_offset=34)], lineno=243, col_offset=13), Compare(Subscript(Attribute(Name('parent', Load(), lineno=244, col_offset=12), 'children', Load(), lineno=244, col_offset=12), Index(Num(0, lineno=244, col_offset=28)), Load(), lineno=244, col_offset=12), [Is()], [Name('node', Load(), lineno=244, col_offset=34)], lineno=244, col_offset=12)], lineno=243, col_offset=12)], lineno=242, col_offset=13)], lineno=241, col_offset=7), [Return(Name('False', Load(), lineno=247, col_offset=15), lineno=247, col_offset=8)], [], lineno=241, col_offset=4), Return(Name('True', Load(), lineno=248, col_offset=11), lineno=248, col_offset=4)], [], lineno=227, col_offset=0), FunctionDef('find_indentation', arguments([Name('node', Param(), lineno=250, col_offset=21)], None, None, []), [Expr(Str('Find the indentation of *node*.', lineno=251, col_offset=4), lineno=251, col_offset=4), While(Compare(Name('node', Load(), lineno=252, col_offset=10), [IsNot()], [Name('None', Load(), lineno=252, col_offset=22)], lineno=252, col_offset=10), [If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=253, col_offset=11), 'type', Load(), lineno=253, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=253, col_offset=24), 'suite', Load(), lineno=253, col_offset=24)], lineno=253, col_offset=11), Compare(Call(Name('len', Load(), lineno=253, col_offset=39), [Attribute(Name('node', Load(), lineno=253, col_offset=43), 'children', Load(), lineno=253, col_offset=43)], [], None, None, lineno=253, col_offset=39), [Gt()], [Num(2, lineno=253, col_offset=60)], lineno=253, col_offset=39)], lineno=253, col_offset=11), [Assign([Name('indent', Store(), lineno=254, col_offset=12)], Subscript(Attribute(Name('node', Load(), lineno=254, col_offset=21), 'children', Load(), lineno=254, col_offset=21), Index(Num(1, lineno=254, col_offset=35)), Load(), lineno=254, col_offset=21), lineno=254, col_offset=12), If(Compare(Attribute(Name('indent', Load(), lineno=255, col_offset=15), 'type', Load(), lineno=255, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=255, col_offset=30), 'INDENT', Load(), lineno=255, col_offset=30)], lineno=255, col_offset=15), [Return(Attribute(Name('indent', Load(), lineno=256, col_offset=23), 'value', Load(), lineno=256, col_offset=23), lineno=256, col_offset=16)], [], lineno=255, col_offset=12)], [], lineno=253, col_offset=8), Assign([Name('node', Store(), lineno=257, col_offset=8)], Attribute(Name('node', Load(), lineno=257, col_offset=15), 'parent', Load(), lineno=257, col_offset=15), lineno=257, col_offset=8)], [], lineno=252, col_offset=4), Return(Str(u'', lineno=258, col_offset=11), lineno=258, col_offset=4)], [], lineno=250, col_offset=0), FunctionDef('make_suite', arguments([Name('node', Param(), lineno=264, col_offset=15)], None, None, []), [If(Compare(Attribute(Name('node', Load(), lineno=265, col_offset=7), 'type', Load(), lineno=265, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=265, col_offset=20), 'suite', Load(), lineno=265, col_offset=20)], lineno=265, col_offset=7), [Return(Name('node', Load(), lineno=266, col_offset=15), lineno=266, col_offset=8)], [], lineno=265, col_offset=4), Assign([Name('node', Store(), lineno=267, col_offset=4)], Call(Attribute(Name('node', Load(), lineno=267, col_offset=11), 'clone', Load(), lineno=267, col_offset=11), [], [], None, None, lineno=267, col_offset=11), lineno=267, col_offset=4), Assign([Tuple([Name('parent', Store(), lineno=268, col_offset=4), Attribute(Name('node', Load(), lineno=268, col_offset=12), 'parent', Store(), lineno=268, col_offset=12)], Store(), lineno=268, col_offset=4)], Tuple([Attribute(Name('node', Load(), lineno=268, col_offset=26), 'parent', Load(), lineno=268, col_offset=26), Name('None', Load(), lineno=268, col_offset=39)], Load(), lineno=268, col_offset=26), lineno=268, col_offset=4), Assign([Name('suite', Store(), lineno=269, col_offset=4)], Call(Name('Node', Load(), lineno=269, col_offset=12), [Attribute(Name('syms', Load(), lineno=269, col_offset=17), 'suite', Load(), lineno=269, col_offset=17), List([Name('node', Load(), lineno=269, col_offset=30)], Load(), lineno=269, col_offset=29)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=4), Assign([Attribute(Name('suite', Load(), lineno=270, col_offset=4), 'parent', Store(), lineno=270, col_offset=4)], Name('parent', Load(), lineno=270, col_offset=19), lineno=270, col_offset=4), Return(Name('suite', Load(), lineno=271, col_offset=11), lineno=271, col_offset=4)], [], lineno=264, col_offset=0), FunctionDef('find_root', arguments([Name('node', Param(), lineno=273, col_offset=14)], None, None, []), [Expr(Str('Find the top level namespace.', lineno=274, col_offset=4), lineno=274, col_offset=4), While(Compare(Attribute(Name('node', Load(), lineno=276, col_offset=10), 'type', Load(), lineno=276, col_offset=10), [NotEq()], [Attribute(Name('syms', Load(), lineno=276, col_offset=23), 'file_input', Load(), lineno=276, col_offset=23)], lineno=276, col_offset=10), [Assert(Attribute(Name('node', Load(), lineno=277, col_offset=15), 'parent', Load(), lineno=277, col_offset=15), Str('Tree is insane! root found before file_input node was found.', lineno=277, col_offset=28), lineno=277, col_offset=8), Assign([Name('node', Store(), lineno=279, col_offset=8)], Attribute(Name('node', Load(), lineno=279, col_offset=15), 'parent', Load(), lineno=279, col_offset=15), lineno=279, col_offset=8)], [], lineno=276, col_offset=4), Return(Name('node', Load(), lineno=280, col_offset=11), lineno=280, col_offset=4)], [], lineno=273, col_offset=0), FunctionDef('does_tree_import', arguments([Name('package', Param(), lineno=282, col_offset=21), Name('name', Param(), lineno=282, col_offset=30), Name('node', Param(), lineno=282, col_offset=36)], None, None, []), [Expr(Str(" Returns true if name is imported from package at the\n        top level of the tree which node belongs to.\n        To cover the case of an import like 'import foo', use\n        None for the package and 'foo' for the name. ", lineno=286, col_offset=-1), lineno=286, col_offset=-1), Assign([Name('binding', Store(), lineno=287, col_offset=4)], Call(Name('find_binding', Load(), lineno=287, col_offset=14), [Name('name', Load(), lineno=287, col_offset=27), Call(Name('find_root', Load(), lineno=287, col_offset=33), [Name('node', Load(), lineno=287, col_offset=43)], [], None, None, lineno=287, col_offset=33), Name('package', Load(), lineno=287, col_offset=50)], [], None, None, lineno=287, col_offset=14), lineno=287, col_offset=4), Return(Call(Name('bool', Load(), lineno=288, col_offset=11), [Name('binding', Load(), lineno=288, col_offset=16)], [], None, None, lineno=288, col_offset=11), lineno=288, col_offset=4)], [], lineno=282, col_offset=0), FunctionDef('is_import', arguments([Name('node', Param(), lineno=290, col_offset=14)], None, None, []), [Expr(Str('Returns true if the node is an import statement.', lineno=291, col_offset=4), lineno=291, col_offset=4), Return(Compare(Attribute(Name('node', Load(), lineno=292, col_offset=11), 'type', Load(), lineno=292, col_offset=11), [In()], [Tuple([Attribute(Name('syms', Load(), lineno=292, col_offset=25), 'import_name', Load(), lineno=292, col_offset=25), Attribute(Name('syms', Load(), lineno=292, col_offset=43), 'import_from', Load(), lineno=292, col_offset=43)], Load(), lineno=292, col_offset=25)], lineno=292, col_offset=11), lineno=292, col_offset=4)], [], lineno=290, col_offset=0), FunctionDef('touch_import', arguments([Name('package', Param(), lineno=294, col_offset=17), Name('name', Param(), lineno=294, col_offset=26), Name('node', Param(), lineno=294, col_offset=32)], None, None, []), [Expr(Str(' Works like `does_tree_import` but adds an import statement\n        if it was not imported. ', lineno=296, col_offset=-1), lineno=296, col_offset=-1), FunctionDef('is_import_stmt', arguments([Name('node', Param(), lineno=297, col_offset=23)], None, None, []), [Return(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=298, col_offset=16), 'type', Load(), lineno=298, col_offset=16), [Eq()], [Attribute(Name('syms', Load(), lineno=298, col_offset=29), 'simple_stmt', Load(), lineno=298, col_offset=29)], lineno=298, col_offset=16), Attribute(Name('node', Load(), lineno=298, col_offset=50), 'children', Load(), lineno=298, col_offset=50), Call(Name('is_import', Load(), lineno=299, col_offset=16), [Subscript(Attribute(Name('node', Load(), lineno=299, col_offset=26), 'children', Load(), lineno=299, col_offset=26), Index(Num(0, lineno=299, col_offset=40)), Load(), lineno=299, col_offset=26)], [], None, None, lineno=299, col_offset=16)], lineno=298, col_offset=16), lineno=298, col_offset=8)], [], lineno=297, col_offset=4), Assign([Name('root', Store(), lineno=301, col_offset=4)], Call(Name('find_root', Load(), lineno=301, col_offset=11), [Name('node', Load(), lineno=301, col_offset=21)], [], None, None, lineno=301, col_offset=11), lineno=301, col_offset=4), If(Call(Name('does_tree_import', Load(), lineno=303, col_offset=7), [Name('package', Load(), lineno=303, col_offset=24), Name('name', Load(), lineno=303, col_offset=33), Name('root', Load(), lineno=303, col_offset=39)], [], None, None, lineno=303, col_offset=7), [Return(None, lineno=304, col_offset=8)], [], lineno=303, col_offset=4), Assign([Name('insert_pos', Store(), lineno=308, col_offset=4), Name('offset', Store(), lineno=308, col_offset=17)], Num(0, lineno=308, col_offset=26), lineno=308, col_offset=4), For(Tuple([Name('idx', Store(), lineno=309, col_offset=8), Name('node', Store(), lineno=309, col_offset=13)], Store(), lineno=309, col_offset=8), Call(Name('enumerate', Load(), lineno=309, col_offset=21), [Attribute(Name('root', Load(), lineno=309, col_offset=31), 'children', Load(), lineno=309, col_offset=31)], [], None, None, lineno=309, col_offset=21), [If(UnaryOp(Not(), Call(Name('is_import_stmt', Load(), lineno=310, col_offset=15), [Name('node', Load(), lineno=310, col_offset=30)], [], None, None, lineno=310, col_offset=15), lineno=310, col_offset=11), [Continue( lineno=311, col_offset=12)], [], lineno=310, col_offset=8), For(Tuple([Name('offset', Store(), lineno=312, col_offset=12), Name('node2', Store(), lineno=312, col_offset=20)], Store(), lineno=312, col_offset=12), Call(Name('enumerate', Load(), lineno=312, col_offset=29), [Subscript(Attribute(Name('root', Load(), lineno=312, col_offset=39), 'children', Load(), lineno=312, col_offset=39), Slice(Name('idx', Load(), lineno=312, col_offset=53), None, None), Load(), lineno=312, col_offset=39)], [], None, None, lineno=312, col_offset=29), [If(UnaryOp(Not(), Call(Name('is_import_stmt', Load(), lineno=313, col_offset=19), [Name('node2', Load(), lineno=313, col_offset=34)], [], None, None, lineno=313, col_offset=19), lineno=313, col_offset=15), [Break( lineno=314, col_offset=16)], [], lineno=313, col_offset=12)], [], lineno=312, col_offset=8), Assign([Name('insert_pos', Store(), lineno=315, col_offset=8)], BinOp(Name('idx', Load(), lineno=315, col_offset=21), Add(), Name('offset', Load(), lineno=315, col_offset=27), lineno=315, col_offset=21), lineno=315, col_offset=8), Break( lineno=316, col_offset=8)], [], lineno=309, col_offset=4), If(Compare(Name('insert_pos', Load(), lineno=320, col_offset=7), [Eq()], [Num(0, lineno=320, col_offset=21)], lineno=320, col_offset=7), [For(Tuple([Name('idx', Store(), lineno=321, col_offset=12), Name('node', Store(), lineno=321, col_offset=17)], Store(), lineno=321, col_offset=12), Call(Name('enumerate', Load(), lineno=321, col_offset=25), [Attribute(Name('root', Load(), lineno=321, col_offset=35), 'children', Load(), lineno=321, col_offset=35)], [], None, None, lineno=321, col_offset=25), [If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=322, col_offset=16), 'type', Load(), lineno=322, col_offset=16), [Eq()], [Attribute(Name('syms', Load(), lineno=322, col_offset=29), 'simple_stmt', Load(), lineno=322, col_offset=29)], lineno=322, col_offset=16), Attribute(Name('node', Load(), lineno=322, col_offset=50), 'children', Load(), lineno=322, col_offset=50), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=323, col_offset=15), 'children', Load(), lineno=323, col_offset=15), Index(Num(0, lineno=323, col_offset=29)), Load(), lineno=323, col_offset=15), 'type', Load(), lineno=323, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=323, col_offset=40), 'STRING', Load(), lineno=323, col_offset=40)], lineno=323, col_offset=15)], lineno=322, col_offset=16), [Assign([Name('insert_pos', Store(), lineno=324, col_offset=16)], BinOp(Name('idx', Load(), lineno=324, col_offset=29), Add(), Num(1, lineno=324, col_offset=35), lineno=324, col_offset=29), lineno=324, col_offset=16), Break( lineno=325, col_offset=16)], [], lineno=322, col_offset=12)], [], lineno=321, col_offset=8)], [], lineno=320, col_offset=4), If(Compare(Name('package', Load(), lineno=327, col_offset=7), [Is()], [Name('None', Load(), lineno=327, col_offset=18)], lineno=327, col_offset=7), [Assign([Name('import_', Store(), lineno=328, col_offset=8)], Call(Name('Node', Load(), lineno=328, col_offset=18), [Attribute(Name('syms', Load(), lineno=328, col_offset=23), 'import_name', Load(), lineno=328, col_offset=23), List([Call(Name('Leaf', Load(), lineno=329, col_offset=12), [Attribute(Name('token', Load(), lineno=329, col_offset=17), 'NAME', Load(), lineno=329, col_offset=17), Str(u'import', lineno=329, col_offset=29)], [], None, None, lineno=329, col_offset=12), Call(Name('Leaf', Load(), lineno=330, col_offset=12), [Attribute(Name('token', Load(), lineno=330, col_offset=17), 'NAME', Load(), lineno=330, col_offset=17), Name('name', Load(), lineno=330, col_offset=29)], [keyword('prefix', Str(u' ', lineno=330, col_offset=42))], None, None, lineno=330, col_offset=12)], Load(), lineno=328, col_offset=41)], [], None, None, lineno=328, col_offset=18), lineno=328, col_offset=8)], [Assign([Name('import_', Store(), lineno=333, col_offset=8)], Call(Name('FromImport', Load(), lineno=333, col_offset=18), [Name('package', Load(), lineno=333, col_offset=29), List([Call(Name('Leaf', Load(), lineno=333, col_offset=39), [Attribute(Name('token', Load(), lineno=333, col_offset=44), 'NAME', Load(), lineno=333, col_offset=44), Name('name', Load(), lineno=333, col_offset=56)], [keyword('prefix', Str(u' ', lineno=333, col_offset=69))], None, None, lineno=333, col_offset=39)], Load(), lineno=333, col_offset=38)], [], None, None, lineno=333, col_offset=18), lineno=333, col_offset=8)], lineno=327, col_offset=4), Assign([Name('children', Store(), lineno=335, col_offset=4)], List([Name('import_', Load(), lineno=335, col_offset=16), Call(Name('Newline', Load(), lineno=335, col_offset=25), [], [], None, None, lineno=335, col_offset=25)], Load(), lineno=335, col_offset=15), lineno=335, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=336, col_offset=4), 'insert_child', Load(), lineno=336, col_offset=4), [Name('insert_pos', Load(), lineno=336, col_offset=22), Call(Name('Node', Load(), lineno=336, col_offset=34), [Attribute(Name('syms', Load(), lineno=336, col_offset=39), 'simple_stmt', Load(), lineno=336, col_offset=39), Name('children', Load(), lineno=336, col_offset=57)], [], None, None, lineno=336, col_offset=34)], [], None, None, lineno=336, col_offset=4), lineno=336, col_offset=4)], [], lineno=294, col_offset=0), Assign([Name('_def_syms', Store(), lineno=339, col_offset=0)], Call(Name('set', Load(), lineno=339, col_offset=12), [List([Attribute(Name('syms', Load(), lineno=339, col_offset=17), 'classdef', Load(), lineno=339, col_offset=17), Attribute(Name('syms', Load(), lineno=339, col_offset=32), 'funcdef', Load(), lineno=339, col_offset=32)], Load(), lineno=339, col_offset=16)], [], None, None, lineno=339, col_offset=12), lineno=339, col_offset=0), FunctionDef('find_binding', arguments([Name('name', Param(), lineno=340, col_offset=17), Name('node', Param(), lineno=340, col_offset=23), Name('package', Param(), lineno=340, col_offset=29)], None, None, [Name('None', Load(), lineno=340, col_offset=37)]), [Expr(Str(' Returns the node which binds variable name, otherwise None.\n        If optional argument package is supplied, only imports will\n        be returned.\n        See test cases for examples.', lineno=344, col_offset=-1), lineno=344, col_offset=-1), For(Name('child', Store(), lineno=345, col_offset=8), Attribute(Name('node', Load(), lineno=345, col_offset=17), 'children', Load(), lineno=345, col_offset=17), [Assign([Name('ret', Store(), lineno=346, col_offset=8)], Name('None', Load(), lineno=346, col_offset=14), lineno=346, col_offset=8), If(Compare(Attribute(Name('child', Load(), lineno=347, col_offset=11), 'type', Load(), lineno=347, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=347, col_offset=25), 'for_stmt', Load(), lineno=347, col_offset=25)], lineno=347, col_offset=11), [If(Call(Name('_find', Load(), lineno=348, col_offset=15), [Name('name', Load(), lineno=348, col_offset=21), Subscript(Attribute(Name('child', Load(), lineno=348, col_offset=27), 'children', Load(), lineno=348, col_offset=27), Index(Num(1, lineno=348, col_offset=42)), Load(), lineno=348, col_offset=27)], [], None, None, lineno=348, col_offset=15), [Return(Name('child', Load(), lineno=349, col_offset=23), lineno=349, col_offset=16)], [], lineno=348, col_offset=12), Assign([Name('n', Store(), lineno=350, col_offset=12)], Call(Name('find_binding', Load(), lineno=350, col_offset=16), [Name('name', Load(), lineno=350, col_offset=29), Call(Name('make_suite', Load(), lineno=350, col_offset=35), [Subscript(Attribute(Name('child', Load(), lineno=350, col_offset=46), 'children', Load(), lineno=350, col_offset=46), Index(Num(-1, lineno=350, col_offset=62)), Load(), lineno=350, col_offset=46)], [], None, None, lineno=350, col_offset=35), Name('package', Load(), lineno=350, col_offset=67)], [], None, None, lineno=350, col_offset=16), lineno=350, col_offset=12), If(Name('n', Load(), lineno=351, col_offset=15), [Assign([Name('ret', Store(), lineno=351, col_offset=18)], Name('n', Load(), lineno=351, col_offset=24), lineno=351, col_offset=18)], [], lineno=351, col_offset=12)], [If(Compare(Attribute(Name('child', Load(), lineno=352, col_offset=13), 'type', Load(), lineno=352, col_offset=13), [In()], [Tuple([Attribute(Name('syms', Load(), lineno=352, col_offset=28), 'if_stmt', Load(), lineno=352, col_offset=28), Attribute(Name('syms', Load(), lineno=352, col_offset=42), 'while_stmt', Load(), lineno=352, col_offset=42)], Load(), lineno=352, col_offset=28)], lineno=352, col_offset=13), [Assign([Name('n', Store(), lineno=353, col_offset=12)], Call(Name('find_binding', Load(), lineno=353, col_offset=16), [Name('name', Load(), lineno=353, col_offset=29), Call(Name('make_suite', Load(), lineno=353, col_offset=35), [Subscript(Attribute(Name('child', Load(), lineno=353, col_offset=46), 'children', Load(), lineno=353, col_offset=46), Index(Num(-1, lineno=353, col_offset=62)), Load(), lineno=353, col_offset=46)], [], None, None, lineno=353, col_offset=35), Name('package', Load(), lineno=353, col_offset=67)], [], None, None, lineno=353, col_offset=16), lineno=353, col_offset=12), If(Name('n', Load(), lineno=354, col_offset=15), [Assign([Name('ret', Store(), lineno=354, col_offset=18)], Name('n', Load(), lineno=354, col_offset=24), lineno=354, col_offset=18)], [], lineno=354, col_offset=12)], [If(Compare(Attribute(Name('child', Load(), lineno=355, col_offset=13), 'type', Load(), lineno=355, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=355, col_offset=27), 'try_stmt', Load(), lineno=355, col_offset=27)], lineno=355, col_offset=13), [Assign([Name('n', Store(), lineno=356, col_offset=12)], Call(Name('find_binding', Load(), lineno=356, col_offset=16), [Name('name', Load(), lineno=356, col_offset=29), Call(Name('make_suite', Load(), lineno=356, col_offset=35), [Subscript(Attribute(Name('child', Load(), lineno=356, col_offset=46), 'children', Load(), lineno=356, col_offset=46), Index(Num(2, lineno=356, col_offset=61)), Load(), lineno=356, col_offset=46)], [], None, None, lineno=356, col_offset=35), Name('package', Load(), lineno=356, col_offset=66)], [], None, None, lineno=356, col_offset=16), lineno=356, col_offset=12), If(Name('n', Load(), lineno=357, col_offset=15), [Assign([Name('ret', Store(), lineno=358, col_offset=16)], Name('n', Load(), lineno=358, col_offset=22), lineno=358, col_offset=16)], [For(Tuple([Name('i', Store(), lineno=360, col_offset=20), Name('kid', Store(), lineno=360, col_offset=23)], Store(), lineno=360, col_offset=20), Call(Name('enumerate', Load(), lineno=360, col_offset=30), [Subscript(Attribute(Name('child', Load(), lineno=360, col_offset=40), 'children', Load(), lineno=360, col_offset=40), Slice(Num(3, lineno=360, col_offset=55), None, None), Load(), lineno=360, col_offset=40)], [], None, None, lineno=360, col_offset=30), [If(BoolOp(And(), [Compare(Attribute(Name('kid', Load(), lineno=361, col_offset=23), 'type', Load(), lineno=361, col_offset=23), [Eq()], [Attribute(Name('token', Load(), lineno=361, col_offset=35), 'COLON', Load(), lineno=361, col_offset=35)], lineno=361, col_offset=23), Compare(Attribute(Name('kid', Load(), lineno=361, col_offset=51), 'value', Load(), lineno=361, col_offset=51), [Eq()], [Str(':', lineno=361, col_offset=64)], lineno=361, col_offset=51)], lineno=361, col_offset=23), [Assign([Name('n', Store(), lineno=363, col_offset=24)], Call(Name('find_binding', Load(), lineno=363, col_offset=28), [Name('name', Load(), lineno=363, col_offset=41), Call(Name('make_suite', Load(), lineno=363, col_offset=47), [Subscript(Attribute(Name('child', Load(), lineno=363, col_offset=58), 'children', Load(), lineno=363, col_offset=58), Index(BinOp(Name('i', Load(), lineno=363, col_offset=73), Add(), Num(4, lineno=363, col_offset=75), lineno=363, col_offset=73)), Load(), lineno=363, col_offset=58)], [], None, None, lineno=363, col_offset=47), Name('package', Load(), lineno=363, col_offset=80)], [], None, None, lineno=363, col_offset=28), lineno=363, col_offset=24), If(Name('n', Load(), lineno=364, col_offset=27), [Assign([Name('ret', Store(), lineno=364, col_offset=30)], Name('n', Load(), lineno=364, col_offset=36), lineno=364, col_offset=30)], [], lineno=364, col_offset=24)], [], lineno=361, col_offset=20)], [], lineno=360, col_offset=16)], lineno=357, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('child', Load(), lineno=365, col_offset=13), 'type', Load(), lineno=365, col_offset=13), [In()], [Name('_def_syms', Load(), lineno=365, col_offset=27)], lineno=365, col_offset=13), Compare(Attribute(Subscript(Attribute(Name('child', Load(), lineno=365, col_offset=41), 'children', Load(), lineno=365, col_offset=41), Index(Num(1, lineno=365, col_offset=56)), Load(), lineno=365, col_offset=41), 'value', Load(), lineno=365, col_offset=41), [Eq()], [Name('name', Load(), lineno=365, col_offset=68)], lineno=365, col_offset=41)], lineno=365, col_offset=13), [Assign([Name('ret', Store(), lineno=366, col_offset=12)], Name('child', Load(), lineno=366, col_offset=18), lineno=366, col_offset=12)], [If(Call(Name('_is_import_binding', Load(), lineno=367, col_offset=13), [Name('child', Load(), lineno=367, col_offset=32), Name('name', Load(), lineno=367, col_offset=39), Name('package', Load(), lineno=367, col_offset=45)], [], None, None, lineno=367, col_offset=13), [Assign([Name('ret', Store(), lineno=368, col_offset=12)], Name('child', Load(), lineno=368, col_offset=18), lineno=368, col_offset=12)], [If(Compare(Attribute(Name('child', Load(), lineno=369, col_offset=13), 'type', Load(), lineno=369, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=369, col_offset=27), 'simple_stmt', Load(), lineno=369, col_offset=27)], lineno=369, col_offset=13), [Assign([Name('ret', Store(), lineno=370, col_offset=12)], Call(Name('find_binding', Load(), lineno=370, col_offset=18), [Name('name', Load(), lineno=370, col_offset=31), Name('child', Load(), lineno=370, col_offset=37), Name('package', Load(), lineno=370, col_offset=44)], [], None, None, lineno=370, col_offset=18), lineno=370, col_offset=12)], [If(Compare(Attribute(Name('child', Load(), lineno=371, col_offset=13), 'type', Load(), lineno=371, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=371, col_offset=27), 'expr_stmt', Load(), lineno=371, col_offset=27)], lineno=371, col_offset=13), [If(Call(Name('_find', Load(), lineno=372, col_offset=15), [Name('name', Load(), lineno=372, col_offset=21), Subscript(Attribute(Name('child', Load(), lineno=372, col_offset=27), 'children', Load(), lineno=372, col_offset=27), Index(Num(0, lineno=372, col_offset=42)), Load(), lineno=372, col_offset=27)], [], None, None, lineno=372, col_offset=15), [Assign([Name('ret', Store(), lineno=373, col_offset=16)], Name('child', Load(), lineno=373, col_offset=22), lineno=373, col_offset=16)], [], lineno=372, col_offset=12)], [], lineno=371, col_offset=13)], lineno=369, col_offset=13)], lineno=367, col_offset=13)], lineno=365, col_offset=13)], lineno=355, col_offset=13)], lineno=352, col_offset=13)], lineno=347, col_offset=8), If(Name('ret', Load(), lineno=375, col_offset=11), [If(UnaryOp(Not(), Name('package', Load(), lineno=376, col_offset=19), lineno=376, col_offset=15), [Return(Name('ret', Load(), lineno=377, col_offset=23), lineno=377, col_offset=16)], [], lineno=376, col_offset=12), If(Call(Name('is_import', Load(), lineno=378, col_offset=15), [Name('ret', Load(), lineno=378, col_offset=25)], [], None, None, lineno=378, col_offset=15), [Return(Name('ret', Load(), lineno=379, col_offset=23), lineno=379, col_offset=16)], [], lineno=378, col_offset=12)], [], lineno=375, col_offset=8)], [], lineno=345, col_offset=4), Return(Name('None', Load(), lineno=380, col_offset=11), lineno=380, col_offset=4)], [], lineno=340, col_offset=0), Assign([Name('_block_syms', Store(), lineno=382, col_offset=0)], Call(Name('set', Load(), lineno=382, col_offset=14), [List([Attribute(Name('syms', Load(), lineno=382, col_offset=19), 'funcdef', Load(), lineno=382, col_offset=19), Attribute(Name('syms', Load(), lineno=382, col_offset=33), 'classdef', Load(), lineno=382, col_offset=33), Attribute(Name('syms', Load(), lineno=382, col_offset=48), 'trailer', Load(), lineno=382, col_offset=48)], Load(), lineno=382, col_offset=18)], [], None, None, lineno=382, col_offset=14), lineno=382, col_offset=0), FunctionDef('_find', arguments([Name('name', Param(), lineno=383, col_offset=10), Name('node', Param(), lineno=383, col_offset=16)], None, None, []), [Assign([Name('nodes', Store(), lineno=384, col_offset=4)], List([Name('node', Load(), lineno=384, col_offset=13)], Load(), lineno=384, col_offset=12), lineno=384, col_offset=4), While(Name('nodes', Load(), lineno=385, col_offset=10), [Assign([Name('node', Store(), lineno=386, col_offset=8)], Call(Attribute(Name('nodes', Load(), lineno=386, col_offset=15), 'pop', Load(), lineno=386, col_offset=15), [], [], None, None, lineno=386, col_offset=15), lineno=386, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=387, col_offset=11), 'type', Load(), lineno=387, col_offset=11), [Gt()], [Num(256, lineno=387, col_offset=23)], lineno=387, col_offset=11), Compare(Attribute(Name('node', Load(), lineno=387, col_offset=31), 'type', Load(), lineno=387, col_offset=31), [NotIn()], [Name('_block_syms', Load(), lineno=387, col_offset=48)], lineno=387, col_offset=31)], lineno=387, col_offset=11), [Expr(Call(Attribute(Name('nodes', Load(), lineno=388, col_offset=12), 'extend', Load(), lineno=388, col_offset=12), [Attribute(Name('node', Load(), lineno=388, col_offset=25), 'children', Load(), lineno=388, col_offset=25)], [], None, None, lineno=388, col_offset=12), lineno=388, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=389, col_offset=13), 'type', Load(), lineno=389, col_offset=13), [Eq()], [Attribute(Name('token', Load(), lineno=389, col_offset=26), 'NAME', Load(), lineno=389, col_offset=26)], lineno=389, col_offset=13), Compare(Attribute(Name('node', Load(), lineno=389, col_offset=41), 'value', Load(), lineno=389, col_offset=41), [Eq()], [Name('name', Load(), lineno=389, col_offset=55)], lineno=389, col_offset=41)], lineno=389, col_offset=13), [Return(Name('node', Load(), lineno=390, col_offset=19), lineno=390, col_offset=12)], [], lineno=389, col_offset=13)], lineno=387, col_offset=8)], [], lineno=385, col_offset=4), Return(Name('None', Load(), lineno=391, col_offset=11), lineno=391, col_offset=4)], [], lineno=383, col_offset=0), FunctionDef('_is_import_binding', arguments([Name('node', Param(), lineno=393, col_offset=23), Name('name', Param(), lineno=393, col_offset=29), Name('package', Param(), lineno=393, col_offset=35)], None, None, [Name('None', Load(), lineno=393, col_offset=43)]), [Expr(Str(' Will reuturn node if node will import name, or node\n        will import * from package.  None is returned otherwise.\n        See test cases for examples. ', lineno=396, col_offset=-1), lineno=396, col_offset=-1), If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=398, col_offset=7), 'type', Load(), lineno=398, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=398, col_offset=20), 'import_name', Load(), lineno=398, col_offset=20)], lineno=398, col_offset=7), UnaryOp(Not(), Name('package', Load(), lineno=398, col_offset=45), lineno=398, col_offset=41)], lineno=398, col_offset=7), [Assign([Name('imp', Store(), lineno=399, col_offset=8)], Subscript(Attribute(Name('node', Load(), lineno=399, col_offset=14), 'children', Load(), lineno=399, col_offset=14), Index(Num(1, lineno=399, col_offset=28)), Load(), lineno=399, col_offset=14), lineno=399, col_offset=8), If(Compare(Attribute(Name('imp', Load(), lineno=400, col_offset=11), 'type', Load(), lineno=400, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=400, col_offset=23), 'dotted_as_names', Load(), lineno=400, col_offset=23)], lineno=400, col_offset=11), [For(Name('child', Store(), lineno=401, col_offset=16), Attribute(Name('imp', Load(), lineno=401, col_offset=25), 'children', Load(), lineno=401, col_offset=25), [If(Compare(Attribute(Name('child', Load(), lineno=402, col_offset=19), 'type', Load(), lineno=402, col_offset=19), [Eq()], [Attribute(Name('syms', Load(), lineno=402, col_offset=33), 'dotted_as_name', Load(), lineno=402, col_offset=33)], lineno=402, col_offset=19), [If(Compare(Attribute(Subscript(Attribute(Name('child', Load(), lineno=403, col_offset=23), 'children', Load(), lineno=403, col_offset=23), Index(Num(2, lineno=403, col_offset=38)), Load(), lineno=403, col_offset=23), 'value', Load(), lineno=403, col_offset=23), [Eq()], [Name('name', Load(), lineno=403, col_offset=50)], lineno=403, col_offset=23), [Return(Name('node', Load(), lineno=404, col_offset=31), lineno=404, col_offset=24)], [], lineno=403, col_offset=20)], [If(BoolOp(And(), [Compare(Attribute(Name('child', Load(), lineno=405, col_offset=21), 'type', Load(), lineno=405, col_offset=21), [Eq()], [Attribute(Name('token', Load(), lineno=405, col_offset=35), 'NAME', Load(), lineno=405, col_offset=35)], lineno=405, col_offset=21), Compare(Attribute(Name('child', Load(), lineno=405, col_offset=50), 'value', Load(), lineno=405, col_offset=50), [Eq()], [Name('name', Load(), lineno=405, col_offset=65)], lineno=405, col_offset=50)], lineno=405, col_offset=21), [Return(Name('node', Load(), lineno=406, col_offset=27), lineno=406, col_offset=20)], [], lineno=405, col_offset=21)], lineno=402, col_offset=16)], [], lineno=401, col_offset=12)], [If(Compare(Attribute(Name('imp', Load(), lineno=407, col_offset=13), 'type', Load(), lineno=407, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=407, col_offset=25), 'dotted_as_name', Load(), lineno=407, col_offset=25)], lineno=407, col_offset=13), [Assign([Name('last', Store(), lineno=408, col_offset=12)], Subscript(Attribute(Name('imp', Load(), lineno=408, col_offset=19), 'children', Load(), lineno=408, col_offset=19), Index(Num(-1, lineno=408, col_offset=33)), Load(), lineno=408, col_offset=19), lineno=408, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('last', Load(), lineno=409, col_offset=15), 'type', Load(), lineno=409, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=409, col_offset=28), 'NAME', Load(), lineno=409, col_offset=28)], lineno=409, col_offset=15), Compare(Attribute(Name('last', Load(), lineno=409, col_offset=43), 'value', Load(), lineno=409, col_offset=43), [Eq()], [Name('name', Load(), lineno=409, col_offset=57)], lineno=409, col_offset=43)], lineno=409, col_offset=15), [Return(Name('node', Load(), lineno=410, col_offset=23), lineno=410, col_offset=16)], [], lineno=409, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('imp', Load(), lineno=411, col_offset=13), 'type', Load(), lineno=411, col_offset=13), [Eq()], [Attribute(Name('token', Load(), lineno=411, col_offset=25), 'NAME', Load(), lineno=411, col_offset=25)], lineno=411, col_offset=13), Compare(Attribute(Name('imp', Load(), lineno=411, col_offset=40), 'value', Load(), lineno=411, col_offset=40), [Eq()], [Name('name', Load(), lineno=411, col_offset=53)], lineno=411, col_offset=40)], lineno=411, col_offset=13), [Return(Name('node', Load(), lineno=412, col_offset=19), lineno=412, col_offset=12)], [], lineno=411, col_offset=13)], lineno=407, col_offset=13)], lineno=400, col_offset=8)], [If(Compare(Attribute(Name('node', Load(), lineno=413, col_offset=9), 'type', Load(), lineno=413, col_offset=9), [Eq()], [Attribute(Name('syms', Load(), lineno=413, col_offset=22), 'import_from', Load(), lineno=413, col_offset=22)], lineno=413, col_offset=9), [If(BoolOp(And(), [Name('package', Load(), lineno=416, col_offset=11), Compare(Call(Attribute(Call(Name('unicode', Load(), lineno=416, col_offset=23), [Subscript(Attribute(Name('node', Load(), lineno=416, col_offset=31), 'children', Load(), lineno=416, col_offset=31), Index(Num(1, lineno=416, col_offset=45)), Load(), lineno=416, col_offset=31)], [], None, None, lineno=416, col_offset=23), 'strip', Load(), lineno=416, col_offset=23), [], [], None, None, lineno=416, col_offset=23), [NotEq()], [Name('package', Load(), lineno=416, col_offset=60)], lineno=416, col_offset=23)], lineno=416, col_offset=11), [Return(Name('None', Load(), lineno=417, col_offset=19), lineno=417, col_offset=12)], [], lineno=416, col_offset=8), Assign([Name('n', Store(), lineno=418, col_offset=8)], Subscript(Attribute(Name('node', Load(), lineno=418, col_offset=12), 'children', Load(), lineno=418, col_offset=12), Index(Num(3, lineno=418, col_offset=26)), Load(), lineno=418, col_offset=12), lineno=418, col_offset=8), If(BoolOp(And(), [Name('package', Load(), lineno=419, col_offset=11), Call(Name('_find', Load(), lineno=419, col_offset=23), [Str(u'as', lineno=419, col_offset=29), Name('n', Load(), lineno=419, col_offset=36)], [], None, None, lineno=419, col_offset=23)], lineno=419, col_offset=11), [Return(Name('None', Load(), lineno=421, col_offset=19), lineno=421, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('n', Load(), lineno=422, col_offset=13), 'type', Load(), lineno=422, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=422, col_offset=23), 'import_as_names', Load(), lineno=422, col_offset=23)], lineno=422, col_offset=13), Call(Name('_find', Load(), lineno=422, col_offset=48), [Name('name', Load(), lineno=422, col_offset=54), Name('n', Load(), lineno=422, col_offset=60)], [], None, None, lineno=422, col_offset=48)], lineno=422, col_offset=13), [Return(Name('node', Load(), lineno=423, col_offset=19), lineno=423, col_offset=12)], [If(Compare(Attribute(Name('n', Load(), lineno=424, col_offset=13), 'type', Load(), lineno=424, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=424, col_offset=23), 'import_as_name', Load(), lineno=424, col_offset=23)], lineno=424, col_offset=13), [Assign([Name('child', Store(), lineno=425, col_offset=12)], Subscript(Attribute(Name('n', Load(), lineno=425, col_offset=20), 'children', Load(), lineno=425, col_offset=20), Index(Num(2, lineno=425, col_offset=31)), Load(), lineno=425, col_offset=20), lineno=425, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('child', Load(), lineno=426, col_offset=15), 'type', Load(), lineno=426, col_offset=15), [Eq()], [Attribute(Name('token', Load(), lineno=426, col_offset=29), 'NAME', Load(), lineno=426, col_offset=29)], lineno=426, col_offset=15), Compare(Attribute(Name('child', Load(), lineno=426, col_offset=44), 'value', Load(), lineno=426, col_offset=44), [Eq()], [Name('name', Load(), lineno=426, col_offset=59)], lineno=426, col_offset=44)], lineno=426, col_offset=15), [Return(Name('node', Load(), lineno=427, col_offset=23), lineno=427, col_offset=16)], [], lineno=426, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('n', Load(), lineno=428, col_offset=13), 'type', Load(), lineno=428, col_offset=13), [Eq()], [Attribute(Name('token', Load(), lineno=428, col_offset=23), 'NAME', Load(), lineno=428, col_offset=23)], lineno=428, col_offset=13), Compare(Attribute(Name('n', Load(), lineno=428, col_offset=38), 'value', Load(), lineno=428, col_offset=38), [Eq()], [Name('name', Load(), lineno=428, col_offset=49)], lineno=428, col_offset=38)], lineno=428, col_offset=13), [Return(Name('node', Load(), lineno=429, col_offset=19), lineno=429, col_offset=12)], [If(BoolOp(And(), [Name('package', Load(), lineno=430, col_offset=13), Compare(Attribute(Name('n', Load(), lineno=430, col_offset=25), 'type', Load(), lineno=430, col_offset=25), [Eq()], [Attribute(Name('token', Load(), lineno=430, col_offset=35), 'STAR', Load(), lineno=430, col_offset=35)], lineno=430, col_offset=25)], lineno=430, col_offset=13), [Return(Name('node', Load(), lineno=431, col_offset=19), lineno=431, col_offset=12)], [], lineno=430, col_offset=13)], lineno=428, col_offset=13)], lineno=424, col_offset=13)], lineno=422, col_offset=13)], lineno=419, col_offset=8)], [], lineno=413, col_offset=9)], lineno=398, col_offset=4), Return(Name('None', Load(), lineno=432, col_offset=11), lineno=432, col_offset=4)], [], lineno=393, col_offset=0)])
