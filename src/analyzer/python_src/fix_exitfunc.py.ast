Module([Expr(Str('\nConvert use of sys.exitfunc to use the atexit module.\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), ImportFrom('lib2to3', [alias('pytree', None), alias('fixer_base', None)], 0, lineno=7, col_offset=0), ImportFrom('lib2to3.fixer_util', [alias('Name', None), alias('Attr', None), alias('Call', None), alias('Comma', None), alias('Newline', None), alias('syms', None)], 0, lineno=8, col_offset=0), ClassDef('FixExitfunc', [Attribute(Name('fixer_base', Load(), lineno=11, col_offset=18), 'BaseFix', Load(), lineno=11, col_offset=18)], [Assign([Name('keep_line_order', Store(), lineno=12, col_offset=4)], Name('True', Load(), lineno=12, col_offset=22), lineno=12, col_offset=4), Assign([Name('BM_compatible', Store(), lineno=13, col_offset=4)], Name('True', Load(), lineno=13, col_offset=20), lineno=13, col_offset=4), Assign([Name('PATTERN', Store(), lineno=15, col_offset=4)], Str("\n              (\n                  sys_import=import_name<'import'\n                      ('sys'\n                      |\n                      dotted_as_names< (any ',')* 'sys' (',' any)* >\n                      )\n                  >\n              |\n                  expr_stmt<\n                      power< 'sys' trailer< '.' 'exitfunc' > >\n                  '=' func=any >\n              )\n              ", lineno=28, col_offset=-1), lineno=15, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=30, col_offset=17)], 'args', None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=31, col_offset=8), [Name('FixExitfunc', Load(), lineno=31, col_offset=14), Name('self', Load(), lineno=31, col_offset=27)], [], None, None, lineno=31, col_offset=8), '__init__', Load(), lineno=31, col_offset=8), [], [], Name('args', Load(), lineno=31, col_offset=43), None, lineno=31, col_offset=8), lineno=31, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('start_tree', arguments([Name('self', Param(), lineno=33, col_offset=19), Name('tree', Param(), lineno=33, col_offset=25), Name('filename', Param(), lineno=33, col_offset=31)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=34, col_offset=8), [Name('FixExitfunc', Load(), lineno=34, col_offset=14), Name('self', Load(), lineno=34, col_offset=27)], [], None, None, lineno=34, col_offset=8), 'start_tree', Load(), lineno=34, col_offset=8), [Name('tree', Load(), lineno=34, col_offset=44), Name('filename', Load(), lineno=34, col_offset=50)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'sys_import', Store(), lineno=35, col_offset=8)], Name('None', Load(), lineno=35, col_offset=26), lineno=35, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=37, col_offset=18), Name('node', Param(), lineno=37, col_offset=24), Name('results', Param(), lineno=37, col_offset=30)], None, None, []), [If(Compare(Str('sys_import', lineno=39, col_offset=11), [In()], [Name('results', Load(), lineno=39, col_offset=27)], lineno=39, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=40, col_offset=15), 'sys_import', Load(), lineno=40, col_offset=15), [Is()], [Name('None', Load(), lineno=40, col_offset=34)], lineno=40, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=41, col_offset=16), 'sys_import', Store(), lineno=41, col_offset=16)], Subscript(Name('results', Load(), lineno=41, col_offset=34), Index(Str('sys_import', lineno=41, col_offset=42)), Load(), lineno=41, col_offset=34), lineno=41, col_offset=16)], [], lineno=40, col_offset=12), Return(None, lineno=42, col_offset=12)], [], lineno=39, col_offset=8), Assign([Name('func', Store(), lineno=44, col_offset=8)], Call(Attribute(Subscript(Name('results', Load(), lineno=44, col_offset=15), Index(Str('func', lineno=44, col_offset=23)), Load(), lineno=44, col_offset=15), 'clone', Load(), lineno=44, col_offset=15), [], [], None, None, lineno=44, col_offset=15), lineno=44, col_offset=8), Assign([Attribute(Name('func', Load(), lineno=45, col_offset=8), 'prefix', Store(), lineno=45, col_offset=8)], Str(u'', lineno=45, col_offset=22), lineno=45, col_offset=8), Assign([Name('register', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('pytree', Load(), lineno=46, col_offset=19), 'Node', Load(), lineno=46, col_offset=19), [Attribute(Name('syms', Load(), lineno=46, col_offset=31), 'power', Load(), lineno=46, col_offset=31), Call(Name('Attr', Load(), lineno=47, col_offset=31), [Call(Name('Name', Load(), lineno=47, col_offset=36), [Str(u'atexit', lineno=47, col_offset=41)], [], None, None, lineno=47, col_offset=36), Call(Name('Name', Load(), lineno=47, col_offset=53), [Str(u'register', lineno=47, col_offset=58)], [], None, None, lineno=47, col_offset=53)], [], None, None, lineno=47, col_offset=31)], [], None, None, lineno=46, col_offset=19), lineno=46, col_offset=8), Assign([Name('call', Store(), lineno=49, col_offset=8)], Call(Name('Call', Load(), lineno=49, col_offset=15), [Name('register', Load(), lineno=49, col_offset=20), List([Name('func', Load(), lineno=49, col_offset=31)], Load(), lineno=49, col_offset=30), Attribute(Name('node', Load(), lineno=49, col_offset=38), 'prefix', Load(), lineno=49, col_offset=38)], [], None, None, lineno=49, col_offset=15), lineno=49, col_offset=8), Expr(Call(Attribute(Name('node', Load(), lineno=50, col_offset=8), 'replace', Load(), lineno=50, col_offset=8), [Name('call', Load(), lineno=50, col_offset=21)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=52, col_offset=11), 'sys_import', Load(), lineno=52, col_offset=11), [Is()], [Name('None', Load(), lineno=52, col_offset=30)], lineno=52, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'warning', Load(), lineno=54, col_offset=12), [Name('node', Load(), lineno=54, col_offset=25), Str("Can't find sys import; Please add an atexit import at the top of your file.", lineno=54, col_offset=31)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Return(None, lineno=56, col_offset=12)], [], lineno=52, col_offset=8), Assign([Name('names', Store(), lineno=59, col_offset=8)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=59, col_offset=16), 'sys_import', Load(), lineno=59, col_offset=16), 'children', Load(), lineno=59, col_offset=16), Index(Num(1, lineno=59, col_offset=41)), Load(), lineno=59, col_offset=16), lineno=59, col_offset=8), If(Compare(Attribute(Name('names', Load(), lineno=60, col_offset=11), 'type', Load(), lineno=60, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=60, col_offset=25), 'dotted_as_names', Load(), lineno=60, col_offset=25)], lineno=60, col_offset=11), [Expr(Call(Attribute(Name('names', Load(), lineno=61, col_offset=12), 'append_child', Load(), lineno=61, col_offset=12), [Call(Name('Comma', Load(), lineno=61, col_offset=31), [], [], None, None, lineno=61, col_offset=31)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12), Expr(Call(Attribute(Name('names', Load(), lineno=62, col_offset=12), 'append_child', Load(), lineno=62, col_offset=12), [Call(Name('Name', Load(), lineno=62, col_offset=31), [Str(u'atexit', lineno=62, col_offset=36), Str(u' ', lineno=62, col_offset=47)], [], None, None, lineno=62, col_offset=31)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12)], [Assign([Name('containing_stmt', Store(), lineno=64, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=64, col_offset=30), 'sys_import', Load(), lineno=64, col_offset=30), 'parent', Load(), lineno=64, col_offset=30), lineno=64, col_offset=12), Assign([Name('position', Store(), lineno=65, col_offset=12)], Call(Attribute(Attribute(Name('containing_stmt', Load(), lineno=65, col_offset=23), 'children', Load(), lineno=65, col_offset=23), 'index', Load(), lineno=65, col_offset=23), [Attribute(Name('self', Load(), lineno=65, col_offset=54), 'sys_import', Load(), lineno=65, col_offset=54)], [], None, None, lineno=65, col_offset=23), lineno=65, col_offset=12), Assign([Name('stmt_container', Store(), lineno=66, col_offset=12)], Attribute(Name('containing_stmt', Load(), lineno=66, col_offset=29), 'parent', Load(), lineno=66, col_offset=29), lineno=66, col_offset=12), Assign([Name('new_import', Store(), lineno=67, col_offset=12)], Call(Attribute(Name('pytree', Load(), lineno=67, col_offset=25), 'Node', Load(), lineno=67, col_offset=25), [Attribute(Name('syms', Load(), lineno=67, col_offset=37), 'import_name', Load(), lineno=67, col_offset=37), List([Call(Name('Name', Load(), lineno=68, col_offset=31), [Str(u'import', lineno=68, col_offset=36)], [], None, None, lineno=68, col_offset=31), Call(Name('Name', Load(), lineno=68, col_offset=48), [Str(u'atexit', lineno=68, col_offset=53), Str(u' ', lineno=68, col_offset=64)], [], None, None, lineno=68, col_offset=48)], Load(), lineno=68, col_offset=30)], [], None, None, lineno=67, col_offset=25), lineno=67, col_offset=12), Assign([Name('new', Store(), lineno=70, col_offset=12)], Call(Attribute(Name('pytree', Load(), lineno=70, col_offset=18), 'Node', Load(), lineno=70, col_offset=18), [Attribute(Name('syms', Load(), lineno=70, col_offset=30), 'simple_stmt', Load(), lineno=70, col_offset=30), List([Name('new_import', Load(), lineno=70, col_offset=49)], Load(), lineno=70, col_offset=48)], [], None, None, lineno=70, col_offset=18), lineno=70, col_offset=12), Expr(Call(Attribute(Name('containing_stmt', Load(), lineno=71, col_offset=12), 'insert_child', Load(), lineno=71, col_offset=12), [BinOp(Name('position', Load(), lineno=71, col_offset=41), Add(), Num(1, lineno=71, col_offset=52), lineno=71, col_offset=41), Call(Name('Newline', Load(), lineno=71, col_offset=55), [], [], None, None, lineno=71, col_offset=55)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12), Expr(Call(Attribute(Name('containing_stmt', Load(), lineno=72, col_offset=12), 'insert_child', Load(), lineno=72, col_offset=12), [BinOp(Name('position', Load(), lineno=72, col_offset=41), Add(), Num(2, lineno=72, col_offset=52), lineno=72, col_offset=41), Name('new', Load(), lineno=72, col_offset=55)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=12)], lineno=60, col_offset=8)], [], lineno=37, col_offset=4)], [], lineno=11, col_offset=0)])
