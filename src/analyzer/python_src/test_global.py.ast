Module([Expr(Str('Verify that warnings are issued for global statements following use.', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('check_syntax_error', None)], 0, lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('warnings', None)], lineno=5, col_offset=0), ClassDef('GlobalTests', [Attribute(Name('unittest', Load(), lineno=8, col_offset=18), 'TestCase', Load(), lineno=8, col_offset=18)], [FunctionDef('test1', arguments([Name('self', Param(), lineno=10, col_offset=14)], None, None, []), [Assign([Name('prog_text_1', Store(), lineno=11, col_offset=8)], Str('def wrong1():\n    a = 1\n    b = 2\n    global a\n    global b\n', lineno=17, col_offset=-1), lineno=11, col_offset=8), Expr(Call(Name('check_syntax_error', Load(), lineno=18, col_offset=8), [Name('self', Load(), lineno=18, col_offset=27), Name('prog_text_1', Load(), lineno=18, col_offset=33)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('test2', arguments([Name('self', Param(), lineno=20, col_offset=14)], None, None, []), [Assign([Name('prog_text_2', Store(), lineno=21, col_offset=8)], Str('def wrong2():\n    print x\n    global x\n', lineno=25, col_offset=-1), lineno=21, col_offset=8), Expr(Call(Name('check_syntax_error', Load(), lineno=26, col_offset=8), [Name('self', Load(), lineno=26, col_offset=27), Name('prog_text_2', Load(), lineno=26, col_offset=33)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('test3', arguments([Name('self', Param(), lineno=28, col_offset=14)], None, None, []), [Assign([Name('prog_text_3', Store(), lineno=29, col_offset=8)], Str('def wrong3():\n    print x\n    x = 2\n    global x\n', lineno=34, col_offset=-1), lineno=29, col_offset=8), Expr(Call(Name('check_syntax_error', Load(), lineno=35, col_offset=8), [Name('self', Load(), lineno=35, col_offset=27), Name('prog_text_3', Load(), lineno=35, col_offset=33)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test4', arguments([Name('self', Param(), lineno=37, col_offset=14)], None, None, []), [Assign([Name('prog_text_4', Store(), lineno=38, col_offset=8)], Str('global x\nx = 2\n', lineno=41, col_offset=-1), lineno=38, col_offset=8), Expr(Call(Name('compile', Load(), lineno=43, col_offset=8), [Name('prog_text_4', Load(), lineno=43, col_offset=16), Str('<test string>', lineno=43, col_offset=29), Str('exec', lineno=43, col_offset=46)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8)], [], lineno=37, col_offset=4)], [], lineno=8, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('warnings', Load(), lineno=47, col_offset=9), 'catch_warnings', Load(), lineno=47, col_offset=9), [], [], None, None, lineno=47, col_offset=9), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=48, col_offset=8), 'filterwarnings', Load(), lineno=48, col_offset=8), [Str('error', lineno=48, col_offset=32)], [keyword('module', Str('<test string>', lineno=48, col_offset=48))], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Name('run_unittest', Load(), lineno=49, col_offset=8), [Name('GlobalTests', Load(), lineno=49, col_offset=21)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], lineno=47, col_offset=9)], [], lineno=46, col_offset=0), If(Compare(Name('__name__', Load(), lineno=51, col_offset=3), [Eq()], [Str('__main__', lineno=51, col_offset=15)], lineno=51, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=52, col_offset=4), [], [], None, None, lineno=52, col_offset=4), lineno=52, col_offset=4)], [], lineno=51, col_offset=0)])
