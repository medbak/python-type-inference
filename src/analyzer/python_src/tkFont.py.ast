Module([Assign([Name('__version__', Store(), lineno=9, col_offset=0)], Str('0.9', lineno=9, col_offset=14), lineno=9, col_offset=0), Import([alias('Tkinter', None)], lineno=11, col_offset=0), Assign([Name('NORMAL', Store(), lineno=14, col_offset=0)], Str('normal', lineno=14, col_offset=9), lineno=14, col_offset=0), Assign([Name('ROMAN', Store(), lineno=15, col_offset=0)], Str('roman', lineno=15, col_offset=8), lineno=15, col_offset=0), Assign([Name('BOLD', Store(), lineno=16, col_offset=0)], Str('bold', lineno=16, col_offset=9), lineno=16, col_offset=0), Assign([Name('ITALIC', Store(), lineno=17, col_offset=0)], Str('italic', lineno=17, col_offset=9), lineno=17, col_offset=0), FunctionDef('nametofont', arguments([Name('name', Param(), lineno=19, col_offset=15)], None, None, []), [Expr(Str('Given the name of a tk named font, returns a Font representation.\n    ', lineno=21, col_offset=-1), lineno=21, col_offset=-1), Return(Call(Name('Font', Load(), lineno=22, col_offset=11), [], [keyword('name', Name('name', Load(), lineno=22, col_offset=21)), keyword('exists', Name('True', Load(), lineno=22, col_offset=34))], None, None, lineno=22, col_offset=11), lineno=22, col_offset=4)], [], lineno=19, col_offset=0), ClassDef('Font', [], [Expr(Str("Represents a named font.\n\n    Constructor options are:\n\n    font -- font specifier (name, system font, or (family, size, style)-tuple)\n    name -- name to use for this font configuration (defaults to a unique name)\n    exists -- does a named font by this name already exist?\n       Creates a new named font if False, points to the existing font if True.\n       Raises _Tkinter.TclError if the assertion is false.\n\n       the following are ignored if font is specified:\n\n    family -- font 'family', e.g. Courier, Times, Helvetica\n    size -- font size in points\n    weight -- font thickness: NORMAL, BOLD\n    slant -- font slant: ROMAN, ITALIC\n    underline -- font underlining: false (0), true (1)\n    overstrike -- font strikeout: false (0), true (1)\n\n    ", lineno=45, col_offset=-1), lineno=45, col_offset=-1), FunctionDef('_set', arguments([Name('self', Param(), lineno=47, col_offset=13), Name('kw', Param(), lineno=47, col_offset=19)], None, None, []), [Assign([Name('options', Store(), lineno=48, col_offset=8)], List([], Load(), lineno=48, col_offset=18), lineno=48, col_offset=8), For(Tuple([Name('k', Store(), lineno=49, col_offset=12), Name('v', Store(), lineno=49, col_offset=15)], Store(), lineno=49, col_offset=12), Call(Attribute(Name('kw', Load(), lineno=49, col_offset=20), 'items', Load(), lineno=49, col_offset=20), [], [], None, None, lineno=49, col_offset=20), [Expr(Call(Attribute(Name('options', Load(), lineno=50, col_offset=12), 'append', Load(), lineno=50, col_offset=12), [BinOp(Str('-', lineno=50, col_offset=27), Add(), Name('k', Load(), lineno=50, col_offset=31), lineno=50, col_offset=27)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12), Expr(Call(Attribute(Name('options', Load(), lineno=51, col_offset=12), 'append', Load(), lineno=51, col_offset=12), [Call(Name('str', Load(), lineno=51, col_offset=27), [Name('v', Load(), lineno=51, col_offset=31)], [], None, None, lineno=51, col_offset=27)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12)], [], lineno=49, col_offset=8), Return(Call(Name('tuple', Load(), lineno=52, col_offset=15), [Name('options', Load(), lineno=52, col_offset=21)], [], None, None, lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('_get', arguments([Name('self', Param(), lineno=54, col_offset=13), Name('args', Param(), lineno=54, col_offset=19)], None, None, []), [Assign([Name('options', Store(), lineno=55, col_offset=8)], List([], Load(), lineno=55, col_offset=18), lineno=55, col_offset=8), For(Name('k', Store(), lineno=56, col_offset=12), Name('args', Load(), lineno=56, col_offset=17), [Expr(Call(Attribute(Name('options', Load(), lineno=57, col_offset=12), 'append', Load(), lineno=57, col_offset=12), [BinOp(Str('-', lineno=57, col_offset=27), Add(), Name('k', Load(), lineno=57, col_offset=31), lineno=57, col_offset=27)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12)], [], lineno=56, col_offset=8), Return(Call(Name('tuple', Load(), lineno=58, col_offset=15), [Name('options', Load(), lineno=58, col_offset=21)], [], None, None, lineno=58, col_offset=15), lineno=58, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('_mkdict', arguments([Name('self', Param(), lineno=60, col_offset=16), Name('args', Param(), lineno=60, col_offset=22)], None, None, []), [Assign([Name('options', Store(), lineno=61, col_offset=8)], Dict([], [], lineno=61, col_offset=18), lineno=61, col_offset=8), For(Name('i', Store(), lineno=62, col_offset=12), Call(Name('range', Load(), lineno=62, col_offset=17), [Num(0, lineno=62, col_offset=23), Call(Name('len', Load(), lineno=62, col_offset=26), [Name('args', Load(), lineno=62, col_offset=30)], [], None, None, lineno=62, col_offset=26), Num(2, lineno=62, col_offset=37)], [], None, None, lineno=62, col_offset=17), [Assign([Subscript(Name('options', Load(), lineno=63, col_offset=12), Index(Subscript(Subscript(Name('args', Load(), lineno=63, col_offset=20), Index(Name('i', Load(), lineno=63, col_offset=25)), Load(), lineno=63, col_offset=20), Slice(Num(1, lineno=63, col_offset=28), None, None), Load(), lineno=63, col_offset=20)), Store(), lineno=63, col_offset=12)], Subscript(Name('args', Load(), lineno=63, col_offset=35), Index(BinOp(Name('i', Load(), lineno=63, col_offset=40), Add(), Num(1, lineno=63, col_offset=42), lineno=63, col_offset=40)), Load(), lineno=63, col_offset=35), lineno=63, col_offset=12)], [], lineno=62, col_offset=8), Return(Name('options', Load(), lineno=64, col_offset=15), lineno=64, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=66, col_offset=17), Name('root', Param(), lineno=66, col_offset=23), Name('font', Param(), lineno=66, col_offset=34), Name('name', Param(), lineno=66, col_offset=45), Name('exists', Param(), lineno=66, col_offset=56)], None, 'options', [Name('None', Load(), lineno=66, col_offset=28), Name('None', Load(), lineno=66, col_offset=39), Name('None', Load(), lineno=66, col_offset=50), Name('False', Load(), lineno=66, col_offset=63)]), [If(UnaryOp(Not(), Name('root', Load(), lineno=67, col_offset=15), lineno=67, col_offset=11), [Assign([Name('root', Store(), lineno=68, col_offset=12)], Attribute(Name('Tkinter', Load(), lineno=68, col_offset=19), '_default_root', Load(), lineno=68, col_offset=19), lineno=68, col_offset=12)], [], lineno=67, col_offset=8), If(Name('font', Load(), lineno=69, col_offset=11), [Assign([Name('font', Store(), lineno=71, col_offset=12)], Call(Attribute(Attribute(Name('root', Load(), lineno=71, col_offset=19), 'tk', Load(), lineno=71, col_offset=19), 'splitlist', Load(), lineno=71, col_offset=19), [Call(Attribute(Attribute(Name('root', Load(), lineno=71, col_offset=37), 'tk', Load(), lineno=71, col_offset=37), 'call', Load(), lineno=71, col_offset=37), [Str('font', lineno=71, col_offset=50), Str('actual', lineno=71, col_offset=58), Name('font', Load(), lineno=71, col_offset=68)], [], None, None, lineno=71, col_offset=37)], [], None, None, lineno=71, col_offset=19), lineno=71, col_offset=12)], [Assign([Name('font', Store(), lineno=73, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=73, col_offset=19), '_set', Load(), lineno=73, col_offset=19), [Name('options', Load(), lineno=73, col_offset=29)], [], None, None, lineno=73, col_offset=19), lineno=73, col_offset=12)], lineno=69, col_offset=8), If(UnaryOp(Not(), Name('name', Load(), lineno=74, col_offset=15), lineno=74, col_offset=11), [Assign([Name('name', Store(), lineno=75, col_offset=12)], BinOp(Str('font', lineno=75, col_offset=19), Add(), Call(Name('str', Load(), lineno=75, col_offset=28), [Call(Name('id', Load(), lineno=75, col_offset=32), [Name('self', Load(), lineno=75, col_offset=35)], [], None, None, lineno=75, col_offset=32)], [], None, None, lineno=75, col_offset=28), lineno=75, col_offset=19), lineno=75, col_offset=12)], [], lineno=74, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), 'name', Store(), lineno=76, col_offset=8)], Name('name', Load(), lineno=76, col_offset=20), lineno=76, col_offset=8), If(Name('exists', Load(), lineno=78, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=79, col_offset=12), 'delete_font', Store(), lineno=79, col_offset=12)], Name('False', Load(), lineno=79, col_offset=31), lineno=79, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=81, col_offset=15), 'name', Load(), lineno=81, col_offset=15), [NotIn()], [Call(Attribute(Attribute(Name('root', Load(), lineno=81, col_offset=32), 'tk', Load(), lineno=81, col_offset=32), 'call', Load(), lineno=81, col_offset=32), [Str('font', lineno=81, col_offset=45), Str('names', lineno=81, col_offset=53)], [], None, None, lineno=81, col_offset=32)], lineno=81, col_offset=15), [Raise(Attribute(Attribute(Name('Tkinter', Load(), lineno=82, col_offset=22), '_tkinter', Load(), lineno=82, col_offset=22), 'TclError', Load(), lineno=82, col_offset=22), BinOp(Str('named font %s does not already exist', lineno=82, col_offset=49), Mod(), Tuple([Attribute(Name('self', Load(), lineno=82, col_offset=91), 'name', Load(), lineno=82, col_offset=91)], Load(), lineno=82, col_offset=91), lineno=82, col_offset=49), None, lineno=82, col_offset=16)], [], lineno=81, col_offset=12), If(Name('font', Load(), lineno=84, col_offset=15), [Expr(Call(Attribute(Attribute(Name('root', Load(), lineno=85, col_offset=16), 'tk', Load(), lineno=85, col_offset=16), 'call', Load(), lineno=85, col_offset=16), [Str('font', lineno=85, col_offset=29), Str('configure', lineno=85, col_offset=37), Attribute(Name('self', Load(), lineno=85, col_offset=50), 'name', Load(), lineno=85, col_offset=50)], [], Name('font', Load(), lineno=85, col_offset=62), None, lineno=85, col_offset=16), lineno=85, col_offset=16)], [], lineno=84, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('root', Load(), lineno=88, col_offset=12), 'tk', Load(), lineno=88, col_offset=12), 'call', Load(), lineno=88, col_offset=12), [Str('font', lineno=88, col_offset=25), Str('create', lineno=88, col_offset=33), Attribute(Name('self', Load(), lineno=88, col_offset=43), 'name', Load(), lineno=88, col_offset=43)], [], Name('font', Load(), lineno=88, col_offset=55), None, lineno=88, col_offset=12), lineno=88, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=12), 'delete_font', Store(), lineno=89, col_offset=12)], Name('True', Load(), lineno=89, col_offset=31), lineno=89, col_offset=12)], lineno=78, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), '_root', Store(), lineno=91, col_offset=8)], Name('root', Load(), lineno=91, col_offset=22), lineno=91, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=92, col_offset=8), '_split', Store(), lineno=92, col_offset=8)], Attribute(Attribute(Name('root', Load(), lineno=92, col_offset=22), 'tk', Load(), lineno=92, col_offset=22), 'splitlist', Load(), lineno=92, col_offset=22), lineno=92, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=93, col_offset=8), '_call', Store(), lineno=93, col_offset=8)], Attribute(Attribute(Name('root', Load(), lineno=93, col_offset=22), 'tk', Load(), lineno=93, col_offset=22), 'call', Load(), lineno=93, col_offset=22), lineno=93, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=95, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=96, col_offset=15), 'name', Load(), lineno=96, col_offset=15), lineno=96, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=98, col_offset=15), Name('other', Param(), lineno=98, col_offset=21)], None, None, []), [Return(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=99, col_offset=15), 'name', Load(), lineno=99, col_offset=15), [Eq()], [Attribute(Name('other', Load(), lineno=99, col_offset=28), 'name', Load(), lineno=99, col_offset=28)], lineno=99, col_offset=15), Call(Name('isinstance', Load(), lineno=99, col_offset=43), [Name('other', Load(), lineno=99, col_offset=54), Name('Font', Load(), lineno=99, col_offset=61)], [], None, None, lineno=99, col_offset=43)], lineno=99, col_offset=15), lineno=99, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=101, col_offset=20), Name('key', Param(), lineno=101, col_offset=26)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=102, col_offset=15), 'cget', Load(), lineno=102, col_offset=15), [Name('key', Load(), lineno=102, col_offset=25)], [], None, None, lineno=102, col_offset=15), lineno=102, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=104, col_offset=20), Name('key', Param(), lineno=104, col_offset=26), Name('value', Param(), lineno=104, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'configure', Load(), lineno=105, col_offset=8), [], [], None, Dict([Name('key', Load(), lineno=105, col_offset=26)], [Name('value', Load(), lineno=105, col_offset=31)], lineno=105, col_offset=25), lineno=105, col_offset=8), lineno=105, col_offset=8)], [], lineno=104, col_offset=4), FunctionDef('__del__', arguments([Name('self', Param(), lineno=107, col_offset=16)], None, None, []), [TryExcept([If(Attribute(Name('self', Load(), lineno=109, col_offset=15), 'delete_font', Load(), lineno=109, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=16), '_call', Load(), lineno=110, col_offset=16), [Str('font', lineno=110, col_offset=27), Str('delete', lineno=110, col_offset=35), Attribute(Name('self', Load(), lineno=110, col_offset=45), 'name', Load(), lineno=110, col_offset=45)], [], None, None, lineno=110, col_offset=16), lineno=110, col_offset=16)], [], lineno=109, col_offset=12)], [ExceptHandler(Tuple([Name('KeyboardInterrupt', Load(), lineno=111, col_offset=16), Name('SystemExit', Load(), lineno=111, col_offset=35)], Load(), lineno=111, col_offset=16), None, [Raise(None, None, None, lineno=112, col_offset=12)], lineno=111, col_offset=8), ExceptHandler(Name('Exception', Load(), lineno=113, col_offset=15), None, [Pass( lineno=114, col_offset=12)], lineno=113, col_offset=8)], [], lineno=108, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('copy', arguments([Name('self', Param(), lineno=116, col_offset=13)], None, None, []), [Expr(Str('Return a distinct copy of the current font', lineno=117, col_offset=8), lineno=117, col_offset=8), Return(Call(Name('Font', Load(), lineno=118, col_offset=15), [Attribute(Name('self', Load(), lineno=118, col_offset=20), '_root', Load(), lineno=118, col_offset=20)], [], None, Call(Attribute(Name('self', Load(), lineno=118, col_offset=34), 'actual', Load(), lineno=118, col_offset=34), [], [], None, None, lineno=118, col_offset=34), lineno=118, col_offset=15), lineno=118, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('actual', arguments([Name('self', Param(), lineno=120, col_offset=15), Name('option', Param(), lineno=120, col_offset=21)], None, None, [Name('None', Load(), lineno=120, col_offset=28)]), [Expr(Str('Return actual font attributes', lineno=121, col_offset=8), lineno=121, col_offset=8), If(Name('option', Load(), lineno=122, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=123, col_offset=19), '_call', Load(), lineno=123, col_offset=19), [Str('font', lineno=123, col_offset=30), Str('actual', lineno=123, col_offset=38), Attribute(Name('self', Load(), lineno=123, col_offset=48), 'name', Load(), lineno=123, col_offset=48), BinOp(Str('-', lineno=123, col_offset=59), Add(), Name('option', Load(), lineno=123, col_offset=63), lineno=123, col_offset=59)], [], None, None, lineno=123, col_offset=19), lineno=123, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=125, col_offset=19), '_mkdict', Load(), lineno=125, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=126, col_offset=16), '_split', Load(), lineno=126, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=126, col_offset=28), '_call', Load(), lineno=126, col_offset=28), [Str('font', lineno=126, col_offset=39), Str('actual', lineno=126, col_offset=47), Attribute(Name('self', Load(), lineno=126, col_offset=57), 'name', Load(), lineno=126, col_offset=57)], [], None, None, lineno=126, col_offset=28)], [], None, None, lineno=126, col_offset=16)], [], None, None, lineno=125, col_offset=19), lineno=125, col_offset=12)], lineno=122, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('cget', arguments([Name('self', Param(), lineno=129, col_offset=13), Name('option', Param(), lineno=129, col_offset=19)], None, None, []), [Expr(Str('Get font attribute', lineno=130, col_offset=8), lineno=130, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=131, col_offset=15), '_call', Load(), lineno=131, col_offset=15), [Str('font', lineno=131, col_offset=26), Str('config', lineno=131, col_offset=34), Attribute(Name('self', Load(), lineno=131, col_offset=44), 'name', Load(), lineno=131, col_offset=44), BinOp(Str('-', lineno=131, col_offset=55), Add(), Name('option', Load(), lineno=131, col_offset=59), lineno=131, col_offset=55)], [], None, None, lineno=131, col_offset=15), lineno=131, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('config', arguments([Name('self', Param(), lineno=133, col_offset=15)], None, 'options', []), [Expr(Str('Modify font attributes', lineno=134, col_offset=8), lineno=134, col_offset=8), If(Name('options', Load(), lineno=135, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=12), '_call', Load(), lineno=136, col_offset=12), [Str('font', lineno=136, col_offset=23), Str('config', lineno=136, col_offset=31), Attribute(Name('self', Load(), lineno=136, col_offset=41), 'name', Load(), lineno=136, col_offset=41)], [], Call(Attribute(Name('self', Load(), lineno=137, col_offset=19), '_set', Load(), lineno=137, col_offset=19), [Name('options', Load(), lineno=137, col_offset=29)], [], None, None, lineno=137, col_offset=19), None, lineno=136, col_offset=12), lineno=136, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=139, col_offset=19), '_mkdict', Load(), lineno=139, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=140, col_offset=16), '_split', Load(), lineno=140, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=140, col_offset=28), '_call', Load(), lineno=140, col_offset=28), [Str('font', lineno=140, col_offset=39), Str('config', lineno=140, col_offset=47), Attribute(Name('self', Load(), lineno=140, col_offset=57), 'name', Load(), lineno=140, col_offset=57)], [], None, None, lineno=140, col_offset=28)], [], None, None, lineno=140, col_offset=16)], [], None, None, lineno=139, col_offset=19), lineno=139, col_offset=12)], lineno=135, col_offset=8)], [], lineno=133, col_offset=4), Assign([Name('configure', Store(), lineno=143, col_offset=4)], Name('config', Load(), lineno=143, col_offset=16), lineno=143, col_offset=4), FunctionDef('measure', arguments([Name('self', Param(), lineno=145, col_offset=16), Name('text', Param(), lineno=145, col_offset=22)], None, None, []), [Expr(Str('Return text width', lineno=146, col_offset=8), lineno=146, col_offset=8), Return(Call(Name('int', Load(), lineno=147, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=147, col_offset=19), '_call', Load(), lineno=147, col_offset=19), [Str('font', lineno=147, col_offset=30), Str('measure', lineno=147, col_offset=38), Attribute(Name('self', Load(), lineno=147, col_offset=49), 'name', Load(), lineno=147, col_offset=49), Name('text', Load(), lineno=147, col_offset=60)], [], None, None, lineno=147, col_offset=19)], [], None, None, lineno=147, col_offset=15), lineno=147, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('metrics', arguments([Name('self', Param(), lineno=149, col_offset=16)], 'options', None, []), [Expr(Str('Return font metrics.\n\n        For best performance, create a dummy widget\n        using this font before calling this method.', lineno=153, col_offset=-1), lineno=153, col_offset=-1), If(Name('options', Load(), lineno=155, col_offset=11), [Return(Call(Name('int', Load(), lineno=156, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=157, col_offset=16), '_call', Load(), lineno=157, col_offset=16), [Str('font', lineno=157, col_offset=27), Str('metrics', lineno=157, col_offset=35), Attribute(Name('self', Load(), lineno=157, col_offset=46), 'name', Load(), lineno=157, col_offset=46), Call(Attribute(Name('self', Load(), lineno=157, col_offset=57), '_get', Load(), lineno=157, col_offset=57), [Name('options', Load(), lineno=157, col_offset=67)], [], None, None, lineno=157, col_offset=57)], [], None, None, lineno=157, col_offset=16)], [], None, None, lineno=156, col_offset=19), lineno=156, col_offset=12)], [Assign([Name('res', Store(), lineno=160, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=160, col_offset=18), '_split', Load(), lineno=160, col_offset=18), [Call(Attribute(Name('self', Load(), lineno=160, col_offset=30), '_call', Load(), lineno=160, col_offset=30), [Str('font', lineno=160, col_offset=41), Str('metrics', lineno=160, col_offset=49), Attribute(Name('self', Load(), lineno=160, col_offset=60), 'name', Load(), lineno=160, col_offset=60)], [], None, None, lineno=160, col_offset=30)], [], None, None, lineno=160, col_offset=18), lineno=160, col_offset=12), Assign([Name('options', Store(), lineno=161, col_offset=12)], Dict([], [], lineno=161, col_offset=22), lineno=161, col_offset=12), For(Name('i', Store(), lineno=162, col_offset=16), Call(Name('range', Load(), lineno=162, col_offset=21), [Num(0, lineno=162, col_offset=27), Call(Name('len', Load(), lineno=162, col_offset=30), [Name('res', Load(), lineno=162, col_offset=34)], [], None, None, lineno=162, col_offset=30), Num(2, lineno=162, col_offset=40)], [], None, None, lineno=162, col_offset=21), [Assign([Subscript(Name('options', Load(), lineno=163, col_offset=16), Index(Subscript(Subscript(Name('res', Load(), lineno=163, col_offset=24), Index(Name('i', Load(), lineno=163, col_offset=28)), Load(), lineno=163, col_offset=24), Slice(Num(1, lineno=163, col_offset=31), None, None), Load(), lineno=163, col_offset=24)), Store(), lineno=163, col_offset=16)], Call(Name('int', Load(), lineno=163, col_offset=38), [Subscript(Name('res', Load(), lineno=163, col_offset=42), Index(BinOp(Name('i', Load(), lineno=163, col_offset=46), Add(), Num(1, lineno=163, col_offset=48), lineno=163, col_offset=46)), Load(), lineno=163, col_offset=42)], [], None, None, lineno=163, col_offset=38), lineno=163, col_offset=16)], [], lineno=162, col_offset=12), Return(Name('options', Load(), lineno=164, col_offset=19), lineno=164, col_offset=12)], lineno=155, col_offset=8)], [], lineno=149, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('families', arguments([Name('root', Param(), lineno=166, col_offset=13)], None, None, [Name('None', Load(), lineno=166, col_offset=18)]), [Expr(Str('Get font families (as a tuple)', lineno=167, col_offset=4), lineno=167, col_offset=4), If(UnaryOp(Not(), Name('root', Load(), lineno=168, col_offset=11), lineno=168, col_offset=7), [Assign([Name('root', Store(), lineno=169, col_offset=8)], Attribute(Name('Tkinter', Load(), lineno=169, col_offset=15), '_default_root', Load(), lineno=169, col_offset=15), lineno=169, col_offset=8)], [], lineno=168, col_offset=4), Return(Call(Attribute(Attribute(Name('root', Load(), lineno=170, col_offset=11), 'tk', Load(), lineno=170, col_offset=11), 'splitlist', Load(), lineno=170, col_offset=11), [Call(Attribute(Attribute(Name('root', Load(), lineno=170, col_offset=29), 'tk', Load(), lineno=170, col_offset=29), 'call', Load(), lineno=170, col_offset=29), [Str('font', lineno=170, col_offset=42), Str('families', lineno=170, col_offset=50)], [], None, None, lineno=170, col_offset=29)], [], None, None, lineno=170, col_offset=11), lineno=170, col_offset=4)], [], lineno=166, col_offset=0), FunctionDef('names', arguments([Name('root', Param(), lineno=172, col_offset=10)], None, None, [Name('None', Load(), lineno=172, col_offset=15)]), [Expr(Str('Get names of defined fonts (as a tuple)', lineno=173, col_offset=4), lineno=173, col_offset=4), If(UnaryOp(Not(), Name('root', Load(), lineno=174, col_offset=11), lineno=174, col_offset=7), [Assign([Name('root', Store(), lineno=175, col_offset=8)], Attribute(Name('Tkinter', Load(), lineno=175, col_offset=15), '_default_root', Load(), lineno=175, col_offset=15), lineno=175, col_offset=8)], [], lineno=174, col_offset=4), Return(Call(Attribute(Attribute(Name('root', Load(), lineno=176, col_offset=11), 'tk', Load(), lineno=176, col_offset=11), 'splitlist', Load(), lineno=176, col_offset=11), [Call(Attribute(Attribute(Name('root', Load(), lineno=176, col_offset=29), 'tk', Load(), lineno=176, col_offset=29), 'call', Load(), lineno=176, col_offset=29), [Str('font', lineno=176, col_offset=42), Str('names', lineno=176, col_offset=50)], [], None, None, lineno=176, col_offset=29)], [], None, None, lineno=176, col_offset=11), lineno=176, col_offset=4)], [], lineno=172, col_offset=0), If(Compare(Name('__name__', Load(), lineno=181, col_offset=3), [Eq()], [Str('__main__', lineno=181, col_offset=15)], lineno=181, col_offset=3), [Assign([Name('root', Store(), lineno=183, col_offset=4)], Call(Attribute(Name('Tkinter', Load(), lineno=183, col_offset=11), 'Tk', Load(), lineno=183, col_offset=11), [], [], None, None, lineno=183, col_offset=11), lineno=183, col_offset=4), Assign([Name('f', Store(), lineno=186, col_offset=4)], Call(Name('Font', Load(), lineno=186, col_offset=8), [], [keyword('family', Str('times', lineno=186, col_offset=20)), keyword('size', Num(30, lineno=186, col_offset=34)), keyword('weight', Name('NORMAL', Load(), lineno=186, col_offset=45))], None, None, lineno=186, col_offset=8), lineno=186, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=188, col_offset=10), 'actual', Load(), lineno=188, col_offset=10), [], [], None, None, lineno=188, col_offset=10)], True, lineno=188, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=189, col_offset=10), 'actual', Load(), lineno=189, col_offset=10), [Str('family', lineno=189, col_offset=19)], [], None, None, lineno=189, col_offset=10)], True, lineno=189, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=190, col_offset=10), 'actual', Load(), lineno=190, col_offset=10), [Str('weight', lineno=190, col_offset=19)], [], None, None, lineno=190, col_offset=10)], True, lineno=190, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=192, col_offset=10), 'config', Load(), lineno=192, col_offset=10), [], [], None, None, lineno=192, col_offset=10)], True, lineno=192, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=193, col_offset=10), 'cget', Load(), lineno=193, col_offset=10), [Str('family', lineno=193, col_offset=17)], [], None, None, lineno=193, col_offset=10)], True, lineno=193, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=194, col_offset=10), 'cget', Load(), lineno=194, col_offset=10), [Str('weight', lineno=194, col_offset=17)], [], None, None, lineno=194, col_offset=10)], True, lineno=194, col_offset=4), Print(None, [Call(Name('names', Load(), lineno=196, col_offset=10), [], [], None, None, lineno=196, col_offset=10)], True, lineno=196, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=198, col_offset=10), 'measure', Load(), lineno=198, col_offset=10), [Str('hello', lineno=198, col_offset=20)], [], None, None, lineno=198, col_offset=10), Call(Attribute(Name('f', Load(), lineno=198, col_offset=30), 'metrics', Load(), lineno=198, col_offset=30), [Str('linespace', lineno=198, col_offset=40)], [], None, None, lineno=198, col_offset=30)], True, lineno=198, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=200, col_offset=10), 'metrics', Load(), lineno=200, col_offset=10), [], [], None, None, lineno=200, col_offset=10)], True, lineno=200, col_offset=4), Assign([Name('f', Store(), lineno=202, col_offset=4)], Call(Name('Font', Load(), lineno=202, col_offset=8), [], [keyword('font', Tuple([Str('Courier', lineno=202, col_offset=19), Num(20, lineno=202, col_offset=30), Str('bold', lineno=202, col_offset=34)], Load(), lineno=202, col_offset=19))], None, None, lineno=202, col_offset=8), lineno=202, col_offset=4), Print(None, [Call(Attribute(Name('f', Load(), lineno=203, col_offset=10), 'measure', Load(), lineno=203, col_offset=10), [Str('hello', lineno=203, col_offset=20)], [], None, None, lineno=203, col_offset=10), Call(Attribute(Name('f', Load(), lineno=203, col_offset=30), 'metrics', Load(), lineno=203, col_offset=30), [Str('linespace', lineno=203, col_offset=40)], [], None, None, lineno=203, col_offset=30)], True, lineno=203, col_offset=4), Assign([Name('w', Store(), lineno=205, col_offset=4)], Call(Attribute(Name('Tkinter', Load(), lineno=205, col_offset=8), 'Label', Load(), lineno=205, col_offset=8), [Name('root', Load(), lineno=205, col_offset=22)], [keyword('text', Str('Hello, world', lineno=205, col_offset=33)), keyword('font', Name('f', Load(), lineno=205, col_offset=54))], None, None, lineno=205, col_offset=8), lineno=205, col_offset=4), Expr(Call(Attribute(Name('w', Load(), lineno=206, col_offset=4), 'pack', Load(), lineno=206, col_offset=4), [], [], None, None, lineno=206, col_offset=4), lineno=206, col_offset=4), Assign([Name('w', Store(), lineno=208, col_offset=4)], Call(Attribute(Name('Tkinter', Load(), lineno=208, col_offset=8), 'Button', Load(), lineno=208, col_offset=8), [Name('root', Load(), lineno=208, col_offset=23)], [keyword('text', Str('Quit!', lineno=208, col_offset=34)), keyword('command', Attribute(Name('root', Load(), lineno=208, col_offset=51), 'destroy', Load(), lineno=208, col_offset=51))], None, None, lineno=208, col_offset=8), lineno=208, col_offset=4), Expr(Call(Attribute(Name('w', Load(), lineno=209, col_offset=4), 'pack', Load(), lineno=209, col_offset=4), [], [], None, None, lineno=209, col_offset=4), lineno=209, col_offset=4), Assign([Name('fb', Store(), lineno=211, col_offset=4)], Call(Attribute(Call(Name('Font', Load(), lineno=211, col_offset=9), [], [keyword('font', Subscript(Name('w', Load(), lineno=211, col_offset=19), Index(Str('font', lineno=211, col_offset=21)), Load(), lineno=211, col_offset=19))], None, None, lineno=211, col_offset=9), 'copy', Load(), lineno=211, col_offset=9), [], [], None, None, lineno=211, col_offset=9), lineno=211, col_offset=4), Expr(Call(Attribute(Name('fb', Load(), lineno=212, col_offset=4), 'config', Load(), lineno=212, col_offset=4), [], [keyword('weight', Name('BOLD', Load(), lineno=212, col_offset=21))], None, None, lineno=212, col_offset=4), lineno=212, col_offset=4), Expr(Call(Attribute(Name('w', Load(), lineno=214, col_offset=4), 'config', Load(), lineno=214, col_offset=4), [], [keyword('font', Name('fb', Load(), lineno=214, col_offset=18))], None, None, lineno=214, col_offset=4), lineno=214, col_offset=4), Expr(Call(Attribute(Name('Tkinter', Load(), lineno=216, col_offset=4), 'mainloop', Load(), lineno=216, col_offset=4), [], [], None, None, lineno=216, col_offset=4), lineno=216, col_offset=4)], [], lineno=181, col_offset=0)])
