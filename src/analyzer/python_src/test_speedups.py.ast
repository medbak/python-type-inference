Module([Import([alias('decimal', None)], lineno=1, col_offset=0), ImportFrom('unittest', [alias('TestCase', None)], 0, lineno=2, col_offset=0), ImportFrom('json', [alias('decoder', None), alias('encoder', None), alias('scanner', None)], 0, lineno=4, col_offset=0), ClassDef('TestSpeedups', [Name('TestCase', Load(), lineno=6, col_offset=19)], [FunctionDef('test_scanstring', arguments([Name('self', Param(), lineno=7, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=8, col_offset=8), 'assertEqual', Load(), lineno=8, col_offset=8), [Attribute(Attribute(Name('decoder', Load(), lineno=8, col_offset=25), 'scanstring', Load(), lineno=8, col_offset=25), '__module__', Load(), lineno=8, col_offset=25), Str('_json', lineno=8, col_offset=56)], [], None, None, lineno=8, col_offset=8), lineno=8, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=8), 'assertTrue', Load(), lineno=9, col_offset=8), [Compare(Attribute(Name('decoder', Load(), lineno=9, col_offset=24), 'scanstring', Load(), lineno=9, col_offset=24), [Is()], [Attribute(Name('decoder', Load(), lineno=9, col_offset=46), 'c_scanstring', Load(), lineno=9, col_offset=46)], lineno=9, col_offset=24)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8)], [], lineno=7, col_offset=4), FunctionDef('test_encode_basestring_ascii', arguments([Name('self', Param(), lineno=11, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Attribute(Attribute(Name('encoder', Load(), lineno=12, col_offset=25), 'encode_basestring_ascii', Load(), lineno=12, col_offset=25), '__module__', Load(), lineno=12, col_offset=25), Str('_json', lineno=12, col_offset=69)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertTrue', Load(), lineno=13, col_offset=8), [Compare(Attribute(Name('encoder', Load(), lineno=13, col_offset=24), 'encode_basestring_ascii', Load(), lineno=13, col_offset=24), [Is()], [Attribute(Name('encoder', Load(), lineno=14, col_offset=26), 'c_encode_basestring_ascii', Load(), lineno=14, col_offset=26)], lineno=13, col_offset=24)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8)], [], lineno=11, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('TestDecode', [Name('TestCase', Load(), lineno=16, col_offset=17)], [FunctionDef('test_make_scanner', arguments([Name('self', Param(), lineno=17, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertRaises', Load(), lineno=18, col_offset=8), [Name('AttributeError', Load(), lineno=18, col_offset=26), Attribute(Name('scanner', Load(), lineno=18, col_offset=42), 'c_make_scanner', Load(), lineno=18, col_offset=42), Num(1, lineno=18, col_offset=66)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('test_make_encoder', arguments([Name('self', Param(), lineno=20, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertRaises', Load(), lineno=21, col_offset=8), [Name('TypeError', Load(), lineno=21, col_offset=26), Attribute(Name('encoder', Load(), lineno=21, col_offset=37), 'c_make_encoder', Load(), lineno=21, col_offset=37), Name('None', Load(), lineno=22, col_offset=12), Str("\xcd}=N\x12L\xf9y\xd7R\xba\x82\xf2'J}\xa0\xcau", lineno=23, col_offset=12), Name('None', Load(), lineno=24, col_offset=12)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=20, col_offset=4)], [], lineno=16, col_offset=0)])
