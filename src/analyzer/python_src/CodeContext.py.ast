Module([Expr(Str("CodeContext - Extension to display the block context above the edit window\n\nOnce code has scrolled off the top of a window, it can be difficult to\ndetermine which block you are in.  This extension implements a pane at the top\nof each IDLE edit window which provides block structure hints.  These hints are\nthe lines which contain the block opening keywords, e.g. 'if', for the\nenclosing block.  The number of hint lines is determined by the numlines\nvariable in the CodeContext section of config-extensions.def. Lines which do\nnot open blocks are not shown in the context hints pane.\n\n", lineno=11, col_offset=-1), lineno=11, col_offset=-1), Import([alias('Tkinter', None)], lineno=12, col_offset=0), ImportFrom('Tkconstants', [alias('TOP', None), alias('LEFT', None), alias('X', None), alias('W', None), alias('SUNKEN', None)], 0, lineno=13, col_offset=0), Import([alias('re', None)], lineno=14, col_offset=0), ImportFrom('sys', [alias('maxint', 'INFINITY')], 0, lineno=15, col_offset=0), ImportFrom('idlelib.configHandler', [alias('idleConf', None)], 0, lineno=16, col_offset=0), Assign([Name('BLOCKOPENERS', Store(), lineno=18, col_offset=0)], Call(Name('set', Load(), lineno=18, col_offset=15), [List([Str('class', lineno=18, col_offset=20), Str('def', lineno=18, col_offset=29), Str('elif', lineno=18, col_offset=36), Str('else', lineno=18, col_offset=44), Str('except', lineno=18, col_offset=52), Str('finally', lineno=18, col_offset=62), Str('for', lineno=18, col_offset=73), Str('if', lineno=19, col_offset=20), Str('try', lineno=19, col_offset=26), Str('while', lineno=19, col_offset=33), Str('with', lineno=19, col_offset=42)], Load(), lineno=18, col_offset=19)], [], None, None, lineno=18, col_offset=15), lineno=18, col_offset=0), Assign([Name('UPDATEINTERVAL', Store(), lineno=20, col_offset=0)], Num(100, lineno=20, col_offset=17), lineno=20, col_offset=0), Assign([Name('FONTUPDATEINTERVAL', Store(), lineno=21, col_offset=0)], Num(1000, lineno=21, col_offset=21), lineno=21, col_offset=0), Assign([Name('getspacesfirstword', Store(), lineno=23, col_offset=0)], Lambda(arguments([Name('s', Param(), lineno=24, col_offset=26), Name('c', Param(), lineno=24, col_offset=29)], None, None, [Call(Attribute(Name('re', Load(), lineno=24, col_offset=31), 'compile', Load(), lineno=24, col_offset=31), [Str('^(\\s*)(\\w*)', lineno=24, col_offset=42)], [], None, None, lineno=24, col_offset=31)]), Call(Attribute(Call(Attribute(Name('c', Load(), lineno=24, col_offset=59), 'match', Load(), lineno=24, col_offset=59), [Name('s', Load(), lineno=24, col_offset=67)], [], None, None, lineno=24, col_offset=59), 'groups', Load(), lineno=24, col_offset=59), [], [], None, None, lineno=24, col_offset=59), lineno=24, col_offset=19), lineno=23, col_offset=0), ClassDef('CodeContext', [], [Assign([Name('menudefs', Store(), lineno=27, col_offset=4)], List([Tuple([Str('options', lineno=27, col_offset=17), List([Tuple([Str('!Code Conte_xt', lineno=27, col_offset=30), Str('<<toggle-code-context>>', lineno=27, col_offset=48)], Load(), lineno=27, col_offset=30)], Load(), lineno=27, col_offset=28)], Load(), lineno=27, col_offset=17)], Load(), lineno=27, col_offset=15), lineno=27, col_offset=4), Assign([Name('context_depth', Store(), lineno=28, col_offset=4)], Call(Attribute(Name('idleConf', Load(), lineno=28, col_offset=20), 'GetOption', Load(), lineno=28, col_offset=20), [Str('extensions', lineno=28, col_offset=39), Str('CodeContext', lineno=28, col_offset=53), Str('numlines', lineno=29, col_offset=39)], [keyword('type', Str('int', lineno=29, col_offset=56)), keyword('default', Num(3, lineno=29, col_offset=71))], None, None, lineno=28, col_offset=20), lineno=28, col_offset=4), Assign([Name('bgcolor', Store(), lineno=30, col_offset=4)], Call(Attribute(Name('idleConf', Load(), lineno=30, col_offset=14), 'GetOption', Load(), lineno=30, col_offset=14), [Str('extensions', lineno=30, col_offset=33), Str('CodeContext', lineno=30, col_offset=47), Str('bgcolor', lineno=31, col_offset=33)], [keyword('type', Str('str', lineno=31, col_offset=49)), keyword('default', Str('LightGray', lineno=31, col_offset=64))], None, None, lineno=30, col_offset=14), lineno=30, col_offset=4), Assign([Name('fgcolor', Store(), lineno=32, col_offset=4)], Call(Attribute(Name('idleConf', Load(), lineno=32, col_offset=14), 'GetOption', Load(), lineno=32, col_offset=14), [Str('extensions', lineno=32, col_offset=33), Str('CodeContext', lineno=32, col_offset=47), Str('fgcolor', lineno=33, col_offset=33)], [keyword('type', Str('str', lineno=33, col_offset=49)), keyword('default', Str('Black', lineno=33, col_offset=64))], None, None, lineno=32, col_offset=14), lineno=32, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=34, col_offset=17), Name('editwin', Param(), lineno=34, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'editwin', Store(), lineno=35, col_offset=8)], Name('editwin', Load(), lineno=35, col_offset=23), lineno=35, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'text', Store(), lineno=36, col_offset=8)], Attribute(Name('editwin', Load(), lineno=36, col_offset=20), 'text', Load(), lineno=36, col_offset=20), lineno=36, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'textfont', Store(), lineno=37, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=37, col_offset=24), 'text', Load(), lineno=37, col_offset=24), Index(Str('font', lineno=37, col_offset=34)), Load(), lineno=37, col_offset=24), lineno=37, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'label', Store(), lineno=38, col_offset=8)], Name('None', Load(), lineno=38, col_offset=21), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'info', Store(), lineno=44, col_offset=8)], List([Tuple([Num(0, lineno=44, col_offset=22), Num(-1, lineno=44, col_offset=26), Str('', lineno=44, col_offset=29), Name('False', Load(), lineno=44, col_offset=33)], Load(), lineno=44, col_offset=22)], Load(), lineno=44, col_offset=20), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'topvisible', Store(), lineno=45, col_offset=8)], Num(1, lineno=45, col_offset=26), lineno=45, col_offset=8), Assign([Name('visible', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('idleConf', Load(), lineno=46, col_offset=18), 'GetOption', Load(), lineno=46, col_offset=18), [Str('extensions', lineno=46, col_offset=37), Str('CodeContext', lineno=46, col_offset=51), Str('visible', lineno=47, col_offset=37)], [keyword('type', Str('bool', lineno=47, col_offset=53)), keyword('default', Name('False', Load(), lineno=47, col_offset=69))], None, None, lineno=46, col_offset=18), lineno=46, col_offset=8), If(Name('visible', Load(), lineno=48, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=12), 'toggle_code_context_event', Load(), lineno=49, col_offset=12), [], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'editwin', Load(), lineno=50, col_offset=12), 'setvar', Load(), lineno=50, col_offset=12), [Str('<<toggle-code-context>>', lineno=50, col_offset=32), Name('True', Load(), lineno=50, col_offset=59)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12)], [], lineno=48, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'text', Load(), lineno=52, col_offset=8), 'after', Load(), lineno=52, col_offset=8), [Name('UPDATEINTERVAL', Load(), lineno=52, col_offset=24), Attribute(Name('self', Load(), lineno=52, col_offset=40), 'timer_event', Load(), lineno=52, col_offset=40)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'text', Load(), lineno=53, col_offset=8), 'after', Load(), lineno=53, col_offset=8), [Name('FONTUPDATEINTERVAL', Load(), lineno=53, col_offset=24), Attribute(Name('self', Load(), lineno=53, col_offset=44), 'font_timer_event', Load(), lineno=53, col_offset=44)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('toggle_code_context_event', arguments([Name('self', Param(), lineno=55, col_offset=34), Name('event', Param(), lineno=55, col_offset=40)], None, None, [Name('None', Load(), lineno=55, col_offset=46)]), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=56, col_offset=15), 'label', Load(), lineno=56, col_offset=15), lineno=56, col_offset=11), [Assign([Name('widgets', Store(), lineno=62, col_offset=12)], Tuple([Attribute(Attribute(Name('self', Load(), lineno=62, col_offset=22), 'editwin', Load(), lineno=62, col_offset=22), 'text', Load(), lineno=62, col_offset=22), Attribute(Attribute(Name('self', Load(), lineno=62, col_offset=41), 'editwin', Load(), lineno=62, col_offset=41), 'text_frame', Load(), lineno=62, col_offset=41)], Load(), lineno=62, col_offset=22), lineno=62, col_offset=12), Assign([Name('padx', Store(), lineno=64, col_offset=12)], Num(0, lineno=64, col_offset=19), lineno=64, col_offset=12), For(Name('widget', Store(), lineno=65, col_offset=16), Name('widgets', Load(), lineno=65, col_offset=26), [AugAssign(Name('padx', Store(), lineno=66, col_offset=16), Add(), Call(Name('int', Load(), lineno=66, col_offset=24), [Call(Name('str', Load(), lineno=66, col_offset=28), [Subscript(Call(Attribute(Name('widget', Load(), lineno=66, col_offset=33), 'pack_info', Load(), lineno=66, col_offset=33), [], [], None, None, lineno=66, col_offset=33), Index(Str('padx', lineno=66, col_offset=52)), Load(), lineno=66, col_offset=33)], [], None, None, lineno=66, col_offset=28)], [], None, None, lineno=66, col_offset=24), lineno=66, col_offset=16), AugAssign(Name('padx', Store(), lineno=67, col_offset=16), Add(), Call(Name('int', Load(), lineno=67, col_offset=24), [Call(Name('str', Load(), lineno=67, col_offset=28), [Call(Attribute(Name('widget', Load(), lineno=67, col_offset=33), 'cget', Load(), lineno=67, col_offset=33), [Str('padx', lineno=67, col_offset=45)], [], None, None, lineno=67, col_offset=33)], [], None, None, lineno=67, col_offset=28)], [], None, None, lineno=67, col_offset=24), lineno=67, col_offset=16)], [], lineno=65, col_offset=12), Assign([Name('border', Store(), lineno=69, col_offset=12)], Num(0, lineno=69, col_offset=21), lineno=69, col_offset=12), For(Name('widget', Store(), lineno=70, col_offset=16), Name('widgets', Load(), lineno=70, col_offset=26), [AugAssign(Name('border', Store(), lineno=71, col_offset=16), Add(), Call(Name('int', Load(), lineno=71, col_offset=26), [Call(Name('str', Load(), lineno=71, col_offset=30), [Call(Attribute(Name('widget', Load(), lineno=71, col_offset=35), 'cget', Load(), lineno=71, col_offset=35), [Str('border', lineno=71, col_offset=47)], [], None, None, lineno=71, col_offset=35)], [], None, None, lineno=71, col_offset=30)], [], None, None, lineno=71, col_offset=26), lineno=71, col_offset=16)], [], lineno=70, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=72, col_offset=12), 'label', Store(), lineno=72, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=72, col_offset=25), 'Label', Load(), lineno=72, col_offset=25), [Attribute(Attribute(Name('self', Load(), lineno=72, col_offset=39), 'editwin', Load(), lineno=72, col_offset=39), 'top', Load(), lineno=72, col_offset=39)], [keyword('text', BinOp(Str('\n', lineno=73, col_offset=44), Mult(), BinOp(Attribute(Name('self', Load(), lineno=73, col_offset=52), 'context_depth', Load(), lineno=73, col_offset=52), Sub(), Num(1, lineno=73, col_offset=73), lineno=73, col_offset=52), lineno=73, col_offset=44)), keyword('anchor', Name('W', Load(), lineno=74, col_offset=46)), keyword('justify', Name('LEFT', Load(), lineno=74, col_offset=57)), keyword('font', Attribute(Name('self', Load(), lineno=75, col_offset=44), 'textfont', Load(), lineno=75, col_offset=44)), keyword('bg', Attribute(Name('self', Load(), lineno=76, col_offset=42), 'bgcolor', Load(), lineno=76, col_offset=42)), keyword('fg', Attribute(Name('self', Load(), lineno=76, col_offset=59), 'fgcolor', Load(), lineno=76, col_offset=59)), keyword('width', Num(1, lineno=77, col_offset=45)), keyword('padx', Name('padx', Load(), lineno=78, col_offset=44)), keyword('border', Name('border', Load(), lineno=78, col_offset=57)), keyword('relief', Name('SUNKEN', Load(), lineno=79, col_offset=46))], None, None, lineno=72, col_offset=25), lineno=72, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=82, col_offset=12), 'label', Load(), lineno=82, col_offset=12), 'pack', Load(), lineno=82, col_offset=12), [], [keyword('side', Name('TOP', Load(), lineno=82, col_offset=33)), keyword('fill', Name('X', Load(), lineno=82, col_offset=43)), keyword('expand', Name('False', Load(), lineno=82, col_offset=53)), keyword('before', Attribute(Attribute(Name('self', Load(), lineno=83, col_offset=35), 'editwin', Load(), lineno=83, col_offset=35), 'text_frame', Load(), lineno=83, col_offset=35))], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=85, col_offset=12), 'label', Load(), lineno=85, col_offset=12), 'destroy', Load(), lineno=85, col_offset=12), [], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=86, col_offset=12), 'label', Store(), lineno=86, col_offset=12)], Name('None', Load(), lineno=86, col_offset=25), lineno=86, col_offset=12)], lineno=56, col_offset=8), Expr(Call(Attribute(Name('idleConf', Load(), lineno=87, col_offset=8), 'SetOption', Load(), lineno=87, col_offset=8), [Str('extensions', lineno=87, col_offset=27), Str('CodeContext', lineno=87, col_offset=41), Str('visible', lineno=87, col_offset=56), Call(Name('str', Load(), lineno=88, col_offset=27), [Compare(Attribute(Name('self', Load(), lineno=88, col_offset=31), 'label', Load(), lineno=88, col_offset=31), [IsNot()], [Name('None', Load(), lineno=88, col_offset=49)], lineno=88, col_offset=31)], [], None, None, lineno=88, col_offset=27)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('idleConf', Load(), lineno=89, col_offset=8), 'SaveUserCfgFiles', Load(), lineno=89, col_offset=8), [], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('get_line_info', arguments([Name('self', Param(), lineno=91, col_offset=22), Name('linenum', Param(), lineno=91, col_offset=28)], None, None, []), [Expr(Str('Get the line indent value, text, and any block start keyword\n\n        If the line does not start a block, the keyword value is False.\n        The indentation of empty lines (or comment lines) is INFINITY.\n\n        ', lineno=97, col_offset=-1), lineno=97, col_offset=-1), Assign([Name('text', Store(), lineno=98, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=15), 'text', Load(), lineno=98, col_offset=15), 'get', Load(), lineno=98, col_offset=15), [BinOp(Str('%d.0', lineno=98, col_offset=29), Mod(), Name('linenum', Load(), lineno=98, col_offset=38), lineno=98, col_offset=29), BinOp(Str('%d.end', lineno=98, col_offset=47), Mod(), Name('linenum', Load(), lineno=98, col_offset=58), lineno=98, col_offset=47)], [], None, None, lineno=98, col_offset=15), lineno=98, col_offset=8), Assign([Tuple([Name('spaces', Store(), lineno=99, col_offset=8), Name('firstword', Store(), lineno=99, col_offset=16)], Store(), lineno=99, col_offset=8)], Call(Name('getspacesfirstword', Load(), lineno=99, col_offset=28), [Name('text', Load(), lineno=99, col_offset=47)], [], None, None, lineno=99, col_offset=28), lineno=99, col_offset=8), Assign([Name('opener', Store(), lineno=100, col_offset=8)], BoolOp(And(), [Compare(Name('firstword', Load(), lineno=100, col_offset=17), [In()], [Name('BLOCKOPENERS', Load(), lineno=100, col_offset=30)], lineno=100, col_offset=17), Name('firstword', Load(), lineno=100, col_offset=47)], lineno=100, col_offset=17), lineno=100, col_offset=8), If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=101, col_offset=11), [Name('text', Load(), lineno=101, col_offset=15)], [], None, None, lineno=101, col_offset=11), [Eq()], [Call(Name('len', Load(), lineno=101, col_offset=24), [Name('spaces', Load(), lineno=101, col_offset=28)], [], None, None, lineno=101, col_offset=24)], lineno=101, col_offset=11), Compare(Subscript(Name('text', Load(), lineno=101, col_offset=39), Index(Call(Name('len', Load(), lineno=101, col_offset=44), [Name('spaces', Load(), lineno=101, col_offset=48)], [], None, None, lineno=101, col_offset=44)), Load(), lineno=101, col_offset=39), [Eq()], [Str('#', lineno=101, col_offset=60)], lineno=101, col_offset=39)], lineno=101, col_offset=11), [Assign([Name('indent', Store(), lineno=102, col_offset=12)], Name('INFINITY', Load(), lineno=102, col_offset=21), lineno=102, col_offset=12)], [Assign([Name('indent', Store(), lineno=104, col_offset=12)], Call(Name('len', Load(), lineno=104, col_offset=21), [Name('spaces', Load(), lineno=104, col_offset=25)], [], None, None, lineno=104, col_offset=21), lineno=104, col_offset=12)], lineno=101, col_offset=8), Return(Tuple([Name('indent', Load(), lineno=105, col_offset=15), Name('text', Load(), lineno=105, col_offset=23), Name('opener', Load(), lineno=105, col_offset=29)], Load(), lineno=105, col_offset=15), lineno=105, col_offset=8)], [], lineno=91, col_offset=4), FunctionDef('get_context', arguments([Name('self', Param(), lineno=107, col_offset=20), Name('new_topvisible', Param(), lineno=107, col_offset=26), Name('stopline', Param(), lineno=107, col_offset=42), Name('stopindent', Param(), lineno=107, col_offset=54)], None, None, [Num(1, lineno=107, col_offset=51), Num(0, lineno=107, col_offset=65)]), [Expr(Str('Get context lines, starting at new_topvisible and working backwards.\n\n        Stop when stopline or stopindent is reached. Return a tuple of context\n        data and the indent level at the top of the region inspected.\n\n        ', lineno=113, col_offset=-1), lineno=113, col_offset=-1), Assert(Compare(Name('stopline', Load(), lineno=114, col_offset=15), [Gt()], [Num(0, lineno=114, col_offset=26)], lineno=114, col_offset=15), None, lineno=114, col_offset=8), Assign([Name('lines', Store(), lineno=115, col_offset=8)], List([], Load(), lineno=115, col_offset=16), lineno=115, col_offset=8), Assign([Name('lastindent', Store(), lineno=117, col_offset=8)], Name('INFINITY', Load(), lineno=117, col_offset=21), lineno=117, col_offset=8), For(Name('linenum', Store(), lineno=120, col_offset=12), Call(Name('xrange', Load(), lineno=120, col_offset=23), [Name('new_topvisible', Load(), lineno=120, col_offset=30), BinOp(Name('stopline', Load(), lineno=120, col_offset=46), Sub(), Num(1, lineno=120, col_offset=55), lineno=120, col_offset=46), Num(-1, lineno=120, col_offset=59)], [], None, None, lineno=120, col_offset=23), [Assign([Tuple([Name('indent', Store(), lineno=121, col_offset=12), Name('text', Store(), lineno=121, col_offset=20), Name('opener', Store(), lineno=121, col_offset=26)], Store(), lineno=121, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=121, col_offset=35), 'get_line_info', Load(), lineno=121, col_offset=35), [Name('linenum', Load(), lineno=121, col_offset=54)], [], None, None, lineno=121, col_offset=35), lineno=121, col_offset=12), If(Compare(Name('indent', Load(), lineno=122, col_offset=15), [Lt()], [Name('lastindent', Load(), lineno=122, col_offset=24)], lineno=122, col_offset=15), [Assign([Name('lastindent', Store(), lineno=123, col_offset=16)], Name('indent', Load(), lineno=123, col_offset=29), lineno=123, col_offset=16), If(Compare(Name('opener', Load(), lineno=124, col_offset=19), [In()], [Tuple([Str('else', lineno=124, col_offset=30), Str('elif', lineno=124, col_offset=38)], Load(), lineno=124, col_offset=30)], lineno=124, col_offset=19), [AugAssign(Name('lastindent', Store(), lineno=126, col_offset=20), Add(), Num(1, lineno=126, col_offset=34), lineno=126, col_offset=20)], [], lineno=124, col_offset=16), If(BoolOp(And(), [Name('opener', Load(), lineno=127, col_offset=19), Compare(Name('linenum', Load(), lineno=127, col_offset=30), [Lt()], [Name('new_topvisible', Load(), lineno=127, col_offset=40)], lineno=127, col_offset=30), Compare(Name('indent', Load(), lineno=127, col_offset=59), [GtE()], [Name('stopindent', Load(), lineno=127, col_offset=69)], lineno=127, col_offset=59)], lineno=127, col_offset=19), [Expr(Call(Attribute(Name('lines', Load(), lineno=128, col_offset=20), 'append', Load(), lineno=128, col_offset=20), [Tuple([Name('linenum', Load(), lineno=128, col_offset=34), Name('indent', Load(), lineno=128, col_offset=43), Name('text', Load(), lineno=128, col_offset=51), Name('opener', Load(), lineno=128, col_offset=57)], Load(), lineno=128, col_offset=34)], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=20)], [], lineno=127, col_offset=16), If(Compare(Name('lastindent', Load(), lineno=129, col_offset=19), [LtE()], [Name('stopindent', Load(), lineno=129, col_offset=33)], lineno=129, col_offset=19), [Break( lineno=130, col_offset=20)], [], lineno=129, col_offset=16)], [], lineno=122, col_offset=12)], [], lineno=120, col_offset=8), Expr(Call(Attribute(Name('lines', Load(), lineno=131, col_offset=8), 'reverse', Load(), lineno=131, col_offset=8), [], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Return(Tuple([Name('lines', Load(), lineno=132, col_offset=15), Name('lastindent', Load(), lineno=132, col_offset=22)], Load(), lineno=132, col_offset=15), lineno=132, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('update_code_context', arguments([Name('self', Param(), lineno=134, col_offset=28)], None, None, []), [Expr(Str('Update context information and lines visible in the context pane.\n\n        ', lineno=137, col_offset=-1), lineno=137, col_offset=-1), Assign([Name('new_topvisible', Store(), lineno=138, col_offset=8)], Call(Name('int', Load(), lineno=138, col_offset=25), [Subscript(Call(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=138, col_offset=29), 'text', Load(), lineno=138, col_offset=29), 'index', Load(), lineno=138, col_offset=29), [Str('@0,0', lineno=138, col_offset=45)], [], None, None, lineno=138, col_offset=29), 'split', Load(), lineno=138, col_offset=29), [Str('.', lineno=138, col_offset=59)], [], None, None, lineno=138, col_offset=29), Index(Num(0, lineno=138, col_offset=64)), Load(), lineno=138, col_offset=29)], [], None, None, lineno=138, col_offset=25), lineno=138, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=139, col_offset=11), 'topvisible', Load(), lineno=139, col_offset=11), [Eq()], [Name('new_topvisible', Load(), lineno=139, col_offset=30)], lineno=139, col_offset=11), [Return(None, lineno=140, col_offset=12)], [], lineno=139, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=141, col_offset=11), 'topvisible', Load(), lineno=141, col_offset=11), [Lt()], [Name('new_topvisible', Load(), lineno=141, col_offset=29)], lineno=141, col_offset=11), [Assign([Tuple([Name('lines', Store(), lineno=142, col_offset=12), Name('lastindent', Store(), lineno=142, col_offset=19)], Store(), lineno=142, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=142, col_offset=32), 'get_context', Load(), lineno=142, col_offset=32), [Name('new_topvisible', Load(), lineno=142, col_offset=49), Attribute(Name('self', Load(), lineno=143, col_offset=49), 'topvisible', Load(), lineno=143, col_offset=49)], [], None, None, lineno=142, col_offset=32), lineno=142, col_offset=12), While(Compare(Subscript(Subscript(Attribute(Name('self', Load(), lineno=146, col_offset=18), 'info', Load(), lineno=146, col_offset=18), Index(Num(-1, lineno=146, col_offset=29)), Load(), lineno=146, col_offset=18), Index(Num(1, lineno=146, col_offset=32)), Load(), lineno=146, col_offset=18), [GtE()], [Name('lastindent', Load(), lineno=146, col_offset=38)], lineno=146, col_offset=18), [Delete([Subscript(Attribute(Name('self', Load(), lineno=147, col_offset=20), 'info', Load(), lineno=147, col_offset=20), Index(Num(-1, lineno=147, col_offset=31)), Del(), lineno=147, col_offset=20)], lineno=147, col_offset=16)], [], lineno=146, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=148, col_offset=13), 'topvisible', Load(), lineno=148, col_offset=13), [Gt()], [Name('new_topvisible', Load(), lineno=148, col_offset=31)], lineno=148, col_offset=13), [Assign([Name('stopindent', Store(), lineno=149, col_offset=12)], BinOp(Subscript(Subscript(Attribute(Name('self', Load(), lineno=149, col_offset=25), 'info', Load(), lineno=149, col_offset=25), Index(Num(-1, lineno=149, col_offset=36)), Load(), lineno=149, col_offset=25), Index(Num(1, lineno=149, col_offset=39)), Load(), lineno=149, col_offset=25), Add(), Num(1, lineno=149, col_offset=44), lineno=149, col_offset=25), lineno=149, col_offset=12), While(Compare(Subscript(Subscript(Attribute(Name('self', Load(), lineno=152, col_offset=18), 'info', Load(), lineno=152, col_offset=18), Index(Num(-1, lineno=152, col_offset=29)), Load(), lineno=152, col_offset=18), Index(Num(0, lineno=152, col_offset=32)), Load(), lineno=152, col_offset=18), [GtE()], [Name('new_topvisible', Load(), lineno=152, col_offset=38)], lineno=152, col_offset=18), [Assign([Name('stopindent', Store(), lineno=153, col_offset=16)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=153, col_offset=29), 'info', Load(), lineno=153, col_offset=29), Index(Num(-1, lineno=153, col_offset=40)), Load(), lineno=153, col_offset=29), Index(Num(1, lineno=153, col_offset=43)), Load(), lineno=153, col_offset=29), lineno=153, col_offset=16), Delete([Subscript(Attribute(Name('self', Load(), lineno=154, col_offset=20), 'info', Load(), lineno=154, col_offset=20), Index(Num(-1, lineno=154, col_offset=31)), Del(), lineno=154, col_offset=20)], lineno=154, col_offset=16)], [], lineno=152, col_offset=12), Assign([Tuple([Name('lines', Store(), lineno=155, col_offset=12), Name('lastindent', Store(), lineno=155, col_offset=19)], Store(), lineno=155, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=155, col_offset=32), 'get_context', Load(), lineno=155, col_offset=32), [Name('new_topvisible', Load(), lineno=155, col_offset=49), BinOp(Subscript(Subscript(Attribute(Name('self', Load(), lineno=156, col_offset=49), 'info', Load(), lineno=156, col_offset=49), Index(Num(-1, lineno=156, col_offset=60)), Load(), lineno=156, col_offset=49), Index(Num(0, lineno=156, col_offset=63)), Load(), lineno=156, col_offset=49), Add(), Num(1, lineno=156, col_offset=66), lineno=156, col_offset=49), Name('stopindent', Load(), lineno=157, col_offset=49)], [], None, None, lineno=155, col_offset=32), lineno=155, col_offset=12)], [], lineno=148, col_offset=13)], lineno=141, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=158, col_offset=8), 'info', Load(), lineno=158, col_offset=8), 'extend', Load(), lineno=158, col_offset=8), [Name('lines', Load(), lineno=158, col_offset=25)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=159, col_offset=8), 'topvisible', Store(), lineno=159, col_offset=8)], Name('new_topvisible', Load(), lineno=159, col_offset=26), lineno=159, col_offset=8), Assign([Name('context_strings', Store(), lineno=161, col_offset=8)], BinOp(List([Str('', lineno=161, col_offset=27)], Load(), lineno=161, col_offset=26), Mult(), Call(Name('max', Load(), lineno=161, col_offset=33), [Num(0, lineno=161, col_offset=37), BinOp(Attribute(Name('self', Load(), lineno=161, col_offset=40), 'context_depth', Load(), lineno=161, col_offset=40), Sub(), Call(Name('len', Load(), lineno=161, col_offset=61), [Attribute(Name('self', Load(), lineno=161, col_offset=65), 'info', Load(), lineno=161, col_offset=65)], [], None, None, lineno=161, col_offset=61), lineno=161, col_offset=40)], [], None, None, lineno=161, col_offset=33), lineno=161, col_offset=26), lineno=161, col_offset=8), AugAssign(Name('context_strings', Store(), lineno=163, col_offset=8), Add(), ListComp(Subscript(Name('x', Load(), lineno=163, col_offset=28), Index(Num(2, lineno=163, col_offset=30)), Load(), lineno=163, col_offset=28), [comprehension(Name('x', Store(), lineno=163, col_offset=37), Subscript(Attribute(Name('self', Load(), lineno=163, col_offset=42), 'info', Load(), lineno=163, col_offset=42), Slice(UnaryOp(USub(), Attribute(Name('self', Load(), lineno=163, col_offset=53), 'context_depth', Load(), lineno=163, col_offset=53), lineno=163, col_offset=52), None, None), Load(), lineno=163, col_offset=42), [])], lineno=163, col_offset=28), lineno=163, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'label', Load(), lineno=164, col_offset=8), Index(Str('text', lineno=164, col_offset=19)), Store(), lineno=164, col_offset=8)], Call(Attribute(Str('\n', lineno=164, col_offset=29), 'join', Load(), lineno=164, col_offset=29), [Name('context_strings', Load(), lineno=164, col_offset=39)], [], None, None, lineno=164, col_offset=29), lineno=164, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('timer_event', arguments([Name('self', Param(), lineno=166, col_offset=20)], None, None, []), [If(Attribute(Name('self', Load(), lineno=167, col_offset=11), 'label', Load(), lineno=167, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=12), 'update_code_context', Load(), lineno=168, col_offset=12), [], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12)], [], lineno=167, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'text', Load(), lineno=169, col_offset=8), 'after', Load(), lineno=169, col_offset=8), [Name('UPDATEINTERVAL', Load(), lineno=169, col_offset=24), Attribute(Name('self', Load(), lineno=169, col_offset=40), 'timer_event', Load(), lineno=169, col_offset=40)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('font_timer_event', arguments([Name('self', Param(), lineno=171, col_offset=25)], None, None, []), [Assign([Name('newtextfont', Store(), lineno=172, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=172, col_offset=22), 'text', Load(), lineno=172, col_offset=22), Index(Str('font', lineno=172, col_offset=32)), Load(), lineno=172, col_offset=22), lineno=172, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=173, col_offset=11), 'label', Load(), lineno=173, col_offset=11), Compare(Name('newtextfont', Load(), lineno=173, col_offset=26), [NotEq()], [Attribute(Name('self', Load(), lineno=173, col_offset=41), 'textfont', Load(), lineno=173, col_offset=41)], lineno=173, col_offset=26)], lineno=173, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=174, col_offset=12), 'textfont', Store(), lineno=174, col_offset=12)], Name('newtextfont', Load(), lineno=174, col_offset=28), lineno=174, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'label', Load(), lineno=175, col_offset=12), Index(Str('font', lineno=175, col_offset=23)), Store(), lineno=175, col_offset=12)], Attribute(Name('self', Load(), lineno=175, col_offset=33), 'textfont', Load(), lineno=175, col_offset=33), lineno=175, col_offset=12)], [], lineno=173, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'text', Load(), lineno=176, col_offset=8), 'after', Load(), lineno=176, col_offset=8), [Name('FONTUPDATEINTERVAL', Load(), lineno=176, col_offset=24), Attribute(Name('self', Load(), lineno=176, col_offset=44), 'font_timer_event', Load(), lineno=176, col_offset=44)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=171, col_offset=4)], [], lineno=26, col_offset=0)])
