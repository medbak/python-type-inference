Module([Expr(Str("distutils.spawn\n\nProvides the 'spawn()' function, a front-end to various platform-\nspecific functions for launching another program in a sub-process.\nAlso provides the 'find_executable()' to search the path for a given\nexecutable name.\n", lineno=7, col_offset=-1), lineno=7, col_offset=-1), Assign([Name('__revision__', Store(), lineno=9, col_offset=0)], Str('$Id: spawn.py 73147 2009-06-02 15:58:43Z tarek.ziade $', lineno=9, col_offset=15), lineno=9, col_offset=0), Import([alias('sys', None)], lineno=11, col_offset=0), Import([alias('os', None)], lineno=12, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsPlatformError', None), alias('DistutilsExecError', None)], 0, lineno=14, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=15, col_offset=0), FunctionDef('spawn', arguments([Name('cmd', Param(), lineno=17, col_offset=10), Name('search_path', Param(), lineno=17, col_offset=15), Name('verbose', Param(), lineno=17, col_offset=30), Name('dry_run', Param(), lineno=17, col_offset=41)], None, None, [Num(1, lineno=17, col_offset=27), Num(0, lineno=17, col_offset=38), Num(0, lineno=17, col_offset=49)]), [Expr(Str("Run another program, specified as a command list 'cmd', in a new process.\n\n    'cmd' is just the argument list for the new process, ie.\n    cmd[0] is the program to run and cmd[1:] are the rest of its arguments.\n    There is no way to run a program with a name different from that of its\n    executable.\n\n    If 'search_path' is true (the default), the system's executable\n    search path will be used to find the program; otherwise, cmd[0]\n    must be the exact path to the executable.  If 'dry_run' is true,\n    the command will not actually be run.\n\n    Raise DistutilsExecError if running the program fails in any way; just\n    return on success.\n    ", lineno=32, col_offset=-1), lineno=32, col_offset=-1), If(Compare(Attribute(Name('os', Load(), lineno=33, col_offset=7), 'name', Load(), lineno=33, col_offset=7), [Eq()], [Str('posix', lineno=33, col_offset=18)], lineno=33, col_offset=7), [Expr(Call(Name('_spawn_posix', Load(), lineno=34, col_offset=8), [Name('cmd', Load(), lineno=34, col_offset=21), Name('search_path', Load(), lineno=34, col_offset=26)], [keyword('dry_run', Name('dry_run', Load(), lineno=34, col_offset=47))], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [If(Compare(Attribute(Name('os', Load(), lineno=35, col_offset=9), 'name', Load(), lineno=35, col_offset=9), [Eq()], [Str('nt', lineno=35, col_offset=20)], lineno=35, col_offset=9), [Expr(Call(Name('_spawn_nt', Load(), lineno=36, col_offset=8), [Name('cmd', Load(), lineno=36, col_offset=18), Name('search_path', Load(), lineno=36, col_offset=23)], [keyword('dry_run', Name('dry_run', Load(), lineno=36, col_offset=44))], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [If(Compare(Attribute(Name('os', Load(), lineno=37, col_offset=9), 'name', Load(), lineno=37, col_offset=9), [Eq()], [Str('os2', lineno=37, col_offset=20)], lineno=37, col_offset=9), [Expr(Call(Name('_spawn_os2', Load(), lineno=38, col_offset=8), [Name('cmd', Load(), lineno=38, col_offset=19), Name('search_path', Load(), lineno=38, col_offset=24)], [keyword('dry_run', Name('dry_run', Load(), lineno=38, col_offset=45))], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [Raise(Name('DistutilsPlatformError', Load(), lineno=40, col_offset=14), BinOp(Str("don't know how to spawn programs on platform '%s'", lineno=41, col_offset=14), Mod(), Attribute(Name('os', Load(), lineno=41, col_offset=68), 'name', Load(), lineno=41, col_offset=68), lineno=41, col_offset=14), None, lineno=40, col_offset=8)], lineno=37, col_offset=9)], lineno=35, col_offset=9)], lineno=33, col_offset=4)], [], lineno=17, col_offset=0), FunctionDef('_nt_quote_args', arguments([Name('args', Param(), lineno=43, col_offset=19)], None, None, []), [Expr(Str('Quote command-line arguments for DOS/Windows conventions.\n\n    Just wraps every argument which contains blanks in double quotes, and\n    returns a new argument list.\n    ', lineno=48, col_offset=-1), lineno=48, col_offset=-1), For(Tuple([Name('i', Store(), lineno=54, col_offset=8), Name('arg', Store(), lineno=54, col_offset=11)], Store(), lineno=54, col_offset=8), Call(Name('enumerate', Load(), lineno=54, col_offset=18), [Name('args', Load(), lineno=54, col_offset=28)], [], None, None, lineno=54, col_offset=18), [If(Compare(Str(' ', lineno=55, col_offset=11), [In()], [Name('arg', Load(), lineno=55, col_offset=18)], lineno=55, col_offset=11), [Assign([Subscript(Name('args', Load(), lineno=56, col_offset=12), Index(Name('i', Load(), lineno=56, col_offset=17)), Store(), lineno=56, col_offset=12)], BinOp(Str('"%s"', lineno=56, col_offset=22), Mod(), Name('arg', Load(), lineno=56, col_offset=31), lineno=56, col_offset=22), lineno=56, col_offset=12)], [], lineno=55, col_offset=8)], [], lineno=54, col_offset=4), Return(Name('args', Load(), lineno=57, col_offset=11), lineno=57, col_offset=4)], [], lineno=43, col_offset=0), FunctionDef('_spawn_nt', arguments([Name('cmd', Param(), lineno=59, col_offset=14), Name('search_path', Param(), lineno=59, col_offset=19), Name('verbose', Param(), lineno=59, col_offset=34), Name('dry_run', Param(), lineno=59, col_offset=45)], None, None, [Num(1, lineno=59, col_offset=31), Num(0, lineno=59, col_offset=42), Num(0, lineno=59, col_offset=53)]), [Assign([Name('executable', Store(), lineno=60, col_offset=4)], Subscript(Name('cmd', Load(), lineno=60, col_offset=17), Index(Num(0, lineno=60, col_offset=21)), Load(), lineno=60, col_offset=17), lineno=60, col_offset=4), Assign([Name('cmd', Store(), lineno=61, col_offset=4)], Call(Name('_nt_quote_args', Load(), lineno=61, col_offset=10), [Name('cmd', Load(), lineno=61, col_offset=25)], [], None, None, lineno=61, col_offset=10), lineno=61, col_offset=4), If(Name('search_path', Load(), lineno=62, col_offset=7), [Assign([Name('executable', Store(), lineno=64, col_offset=8)], BoolOp(Or(), [Call(Name('find_executable', Load(), lineno=64, col_offset=21), [Name('executable', Load(), lineno=64, col_offset=37)], [], None, None, lineno=64, col_offset=21), Name('executable', Load(), lineno=64, col_offset=52)], lineno=64, col_offset=21), lineno=64, col_offset=8)], [], lineno=62, col_offset=4), Expr(Call(Attribute(Name('log', Load(), lineno=65, col_offset=4), 'info', Load(), lineno=65, col_offset=4), [Call(Attribute(Str(' ', lineno=65, col_offset=13), 'join', Load(), lineno=65, col_offset=13), [BinOp(List([Name('executable', Load(), lineno=65, col_offset=23)], Load(), lineno=65, col_offset=22), Add(), Subscript(Name('cmd', Load(), lineno=65, col_offset=37), Slice(Num(1, lineno=65, col_offset=41), None, None), Load(), lineno=65, col_offset=37), lineno=65, col_offset=22)], [], None, None, lineno=65, col_offset=13)], [], None, None, lineno=65, col_offset=4), lineno=65, col_offset=4), If(UnaryOp(Not(), Name('dry_run', Load(), lineno=66, col_offset=11), lineno=66, col_offset=7), [TryExcept([Assign([Name('rc', Store(), lineno=69, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=69, col_offset=17), 'spawnv', Load(), lineno=69, col_offset=17), [Attribute(Name('os', Load(), lineno=69, col_offset=27), 'P_WAIT', Load(), lineno=69, col_offset=27), Name('executable', Load(), lineno=69, col_offset=38), Name('cmd', Load(), lineno=69, col_offset=50)], [], None, None, lineno=69, col_offset=17), lineno=69, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=70, col_offset=15), Name('exc', Store(), lineno=70, col_offset=24), [Raise(Name('DistutilsExecError', Load(), lineno=72, col_offset=18), BinOp(Str("command '%s' failed: %s", lineno=73, col_offset=18), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=73, col_offset=47), Index(Num(0, lineno=73, col_offset=51)), Load(), lineno=73, col_offset=47), Subscript(Name('exc', Load(), lineno=73, col_offset=55), Index(Num(-1, lineno=73, col_offset=60)), Load(), lineno=73, col_offset=55)], Load(), lineno=73, col_offset=47), lineno=73, col_offset=18), None, lineno=72, col_offset=12)], lineno=70, col_offset=8)], [], lineno=68, col_offset=8), If(Compare(Name('rc', Load(), lineno=74, col_offset=11), [NotEq()], [Num(0, lineno=74, col_offset=17)], lineno=74, col_offset=11), [Raise(Name('DistutilsExecError', Load(), lineno=76, col_offset=18), BinOp(Str("command '%s' failed with exit status %d", lineno=77, col_offset=18), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=77, col_offset=63), Index(Num(0, lineno=77, col_offset=67)), Load(), lineno=77, col_offset=63), Name('rc', Load(), lineno=77, col_offset=71)], Load(), lineno=77, col_offset=63), lineno=77, col_offset=18), None, lineno=76, col_offset=12)], [], lineno=74, col_offset=8)], [], lineno=66, col_offset=4)], [], lineno=59, col_offset=0), FunctionDef('_spawn_os2', arguments([Name('cmd', Param(), lineno=79, col_offset=15), Name('search_path', Param(), lineno=79, col_offset=20), Name('verbose', Param(), lineno=79, col_offset=35), Name('dry_run', Param(), lineno=79, col_offset=46)], None, None, [Num(1, lineno=79, col_offset=32), Num(0, lineno=79, col_offset=43), Num(0, lineno=79, col_offset=54)]), [Assign([Name('executable', Store(), lineno=80, col_offset=4)], Subscript(Name('cmd', Load(), lineno=80, col_offset=17), Index(Num(0, lineno=80, col_offset=21)), Load(), lineno=80, col_offset=17), lineno=80, col_offset=4), If(Name('search_path', Load(), lineno=81, col_offset=7), [Assign([Name('executable', Store(), lineno=83, col_offset=8)], BoolOp(Or(), [Call(Name('find_executable', Load(), lineno=83, col_offset=21), [Name('executable', Load(), lineno=83, col_offset=37)], [], None, None, lineno=83, col_offset=21), Name('executable', Load(), lineno=83, col_offset=52)], lineno=83, col_offset=21), lineno=83, col_offset=8)], [], lineno=81, col_offset=4), Expr(Call(Attribute(Name('log', Load(), lineno=84, col_offset=4), 'info', Load(), lineno=84, col_offset=4), [Call(Attribute(Str(' ', lineno=84, col_offset=13), 'join', Load(), lineno=84, col_offset=13), [BinOp(List([Name('executable', Load(), lineno=84, col_offset=23)], Load(), lineno=84, col_offset=22), Add(), Subscript(Name('cmd', Load(), lineno=84, col_offset=37), Slice(Num(1, lineno=84, col_offset=41), None, None), Load(), lineno=84, col_offset=37), lineno=84, col_offset=22)], [], None, None, lineno=84, col_offset=13)], [], None, None, lineno=84, col_offset=4), lineno=84, col_offset=4), If(UnaryOp(Not(), Name('dry_run', Load(), lineno=85, col_offset=11), lineno=85, col_offset=7), [TryExcept([Assign([Name('rc', Store(), lineno=88, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=88, col_offset=17), 'spawnv', Load(), lineno=88, col_offset=17), [Attribute(Name('os', Load(), lineno=88, col_offset=27), 'P_WAIT', Load(), lineno=88, col_offset=27), Name('executable', Load(), lineno=88, col_offset=38), Name('cmd', Load(), lineno=88, col_offset=50)], [], None, None, lineno=88, col_offset=17), lineno=88, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=89, col_offset=15), Name('exc', Store(), lineno=89, col_offset=24), [Raise(Name('DistutilsExecError', Load(), lineno=91, col_offset=18), BinOp(Str("command '%s' failed: %s", lineno=92, col_offset=18), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=92, col_offset=47), Index(Num(0, lineno=92, col_offset=51)), Load(), lineno=92, col_offset=47), Subscript(Name('exc', Load(), lineno=92, col_offset=55), Index(Num(-1, lineno=92, col_offset=60)), Load(), lineno=92, col_offset=55)], Load(), lineno=92, col_offset=47), lineno=92, col_offset=18), None, lineno=91, col_offset=12)], lineno=89, col_offset=8)], [], lineno=87, col_offset=8), If(Compare(Name('rc', Load(), lineno=93, col_offset=11), [NotEq()], [Num(0, lineno=93, col_offset=17)], lineno=93, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=95, col_offset=12), 'debug', Load(), lineno=95, col_offset=12), [BinOp(Str("command '%s' failed with exit status %d", lineno=95, col_offset=22), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=95, col_offset=67), Index(Num(0, lineno=95, col_offset=71)), Load(), lineno=95, col_offset=67), Name('rc', Load(), lineno=95, col_offset=75)], Load(), lineno=95, col_offset=67), lineno=95, col_offset=22)], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12), Raise(Name('DistutilsExecError', Load(), lineno=96, col_offset=18), BinOp(Str("command '%s' failed with exit status %d", lineno=97, col_offset=18), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=97, col_offset=63), Index(Num(0, lineno=97, col_offset=67)), Load(), lineno=97, col_offset=63), Name('rc', Load(), lineno=97, col_offset=71)], Load(), lineno=97, col_offset=63), lineno=97, col_offset=18), None, lineno=96, col_offset=12)], [], lineno=93, col_offset=8)], [], lineno=85, col_offset=4)], [], lineno=79, col_offset=0), FunctionDef('_spawn_posix', arguments([Name('cmd', Param(), lineno=100, col_offset=17), Name('search_path', Param(), lineno=100, col_offset=22), Name('verbose', Param(), lineno=100, col_offset=37), Name('dry_run', Param(), lineno=100, col_offset=48)], None, None, [Num(1, lineno=100, col_offset=34), Num(0, lineno=100, col_offset=45), Num(0, lineno=100, col_offset=56)]), [Expr(Call(Attribute(Name('log', Load(), lineno=101, col_offset=4), 'info', Load(), lineno=101, col_offset=4), [Call(Attribute(Str(' ', lineno=101, col_offset=13), 'join', Load(), lineno=101, col_offset=13), [Name('cmd', Load(), lineno=101, col_offset=22)], [], None, None, lineno=101, col_offset=13)], [], None, None, lineno=101, col_offset=4), lineno=101, col_offset=4), If(Name('dry_run', Load(), lineno=102, col_offset=7), [Return(None, lineno=103, col_offset=8)], [], lineno=102, col_offset=4), Assign([Name('exec_fn', Store(), lineno=104, col_offset=4)], BoolOp(Or(), [BoolOp(And(), [Name('search_path', Load(), lineno=104, col_offset=14), Attribute(Name('os', Load(), lineno=104, col_offset=30), 'execvp', Load(), lineno=104, col_offset=30)], lineno=104, col_offset=14), Attribute(Name('os', Load(), lineno=104, col_offset=43), 'execv', Load(), lineno=104, col_offset=43)], lineno=104, col_offset=14), lineno=104, col_offset=4), Assign([Name('pid', Store(), lineno=105, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=105, col_offset=10), 'fork', Load(), lineno=105, col_offset=10), [], [], None, None, lineno=105, col_offset=10), lineno=105, col_offset=4), If(Compare(Name('pid', Load(), lineno=107, col_offset=7), [Eq()], [Num(0, lineno=107, col_offset=14)], lineno=107, col_offset=7), [TryExcept([Expr(Call(Name('exec_fn', Load(), lineno=109, col_offset=12), [Subscript(Name('cmd', Load(), lineno=109, col_offset=20), Index(Num(0, lineno=109, col_offset=24)), Load(), lineno=109, col_offset=20), Name('cmd', Load(), lineno=109, col_offset=28)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=110, col_offset=15), Name('e', Store(), lineno=110, col_offset=24), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=111, col_offset=12), 'stderr', Load(), lineno=111, col_offset=12), 'write', Load(), lineno=111, col_offset=12), [BinOp(Str('unable to execute %s: %s\n', lineno=111, col_offset=29), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=112, col_offset=30), Index(Num(0, lineno=112, col_offset=34)), Load(), lineno=112, col_offset=30), Attribute(Name('e', Load(), lineno=112, col_offset=38), 'strerror', Load(), lineno=112, col_offset=38)], Load(), lineno=112, col_offset=30), lineno=111, col_offset=29)], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=113, col_offset=12), '_exit', Load(), lineno=113, col_offset=12), [Num(1, lineno=113, col_offset=21)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=12)], lineno=110, col_offset=8)], [], lineno=108, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=115, col_offset=8), 'stderr', Load(), lineno=115, col_offset=8), 'write', Load(), lineno=115, col_offset=8), [BinOp(Str('unable to execute %s for unknown reasons', lineno=115, col_offset=25), Mod(), Subscript(Name('cmd', Load(), lineno=115, col_offset=70), Index(Num(0, lineno=115, col_offset=74)), Load(), lineno=115, col_offset=70), lineno=115, col_offset=25)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=116, col_offset=8), '_exit', Load(), lineno=116, col_offset=8), [Num(1, lineno=116, col_offset=17)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8)], [While(Num(1, lineno=120, col_offset=14), [TryExcept([Assign([Tuple([Name('pid', Store(), lineno=122, col_offset=16), Name('status', Store(), lineno=122, col_offset=21)], Store(), lineno=122, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=122, col_offset=30), 'waitpid', Load(), lineno=122, col_offset=30), [Name('pid', Load(), lineno=122, col_offset=41), Num(0, lineno=122, col_offset=46)], [], None, None, lineno=122, col_offset=30), lineno=122, col_offset=16)], [ExceptHandler(Name('OSError', Load(), lineno=123, col_offset=19), Name('exc', Store(), lineno=123, col_offset=28), [Import([alias('errno', None)], lineno=124, col_offset=16), If(Compare(Attribute(Name('exc', Load(), lineno=125, col_offset=19), 'errno', Load(), lineno=125, col_offset=19), [Eq()], [Attribute(Name('errno', Load(), lineno=125, col_offset=32), 'EINTR', Load(), lineno=125, col_offset=32)], lineno=125, col_offset=19), [Continue( lineno=126, col_offset=20)], [], lineno=125, col_offset=16), Raise(Name('DistutilsExecError', Load(), lineno=127, col_offset=22), BinOp(Str("command '%s' failed: %s", lineno=128, col_offset=22), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=128, col_offset=51), Index(Num(0, lineno=128, col_offset=55)), Load(), lineno=128, col_offset=51), Subscript(Name('exc', Load(), lineno=128, col_offset=59), Index(Num(-1, lineno=128, col_offset=64)), Load(), lineno=128, col_offset=59)], Load(), lineno=128, col_offset=51), lineno=128, col_offset=22), None, lineno=127, col_offset=16)], lineno=123, col_offset=12)], [], lineno=121, col_offset=12), If(Call(Attribute(Name('os', Load(), lineno=129, col_offset=15), 'WIFSIGNALED', Load(), lineno=129, col_offset=15), [Name('status', Load(), lineno=129, col_offset=30)], [], None, None, lineno=129, col_offset=15), [Raise(Name('DistutilsExecError', Load(), lineno=130, col_offset=22), BinOp(Str("command '%s' terminated by signal %d", lineno=131, col_offset=22), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=132, col_offset=23), Index(Num(0, lineno=132, col_offset=27)), Load(), lineno=132, col_offset=23), Call(Attribute(Name('os', Load(), lineno=132, col_offset=31), 'WTERMSIG', Load(), lineno=132, col_offset=31), [Name('status', Load(), lineno=132, col_offset=43)], [], None, None, lineno=132, col_offset=31)], Load(), lineno=132, col_offset=23), lineno=131, col_offset=22), None, lineno=130, col_offset=16)], [If(Call(Attribute(Name('os', Load(), lineno=134, col_offset=17), 'WIFEXITED', Load(), lineno=134, col_offset=17), [Name('status', Load(), lineno=134, col_offset=30)], [], None, None, lineno=134, col_offset=17), [Assign([Name('exit_status', Store(), lineno=135, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=135, col_offset=30), 'WEXITSTATUS', Load(), lineno=135, col_offset=30), [Name('status', Load(), lineno=135, col_offset=45)], [], None, None, lineno=135, col_offset=30), lineno=135, col_offset=16), If(Compare(Name('exit_status', Load(), lineno=136, col_offset=19), [Eq()], [Num(0, lineno=136, col_offset=34)], lineno=136, col_offset=19), [Return(None, lineno=137, col_offset=20)], [Raise(Name('DistutilsExecError', Load(), lineno=139, col_offset=26), BinOp(Str("command '%s' failed with exit status %d", lineno=140, col_offset=26), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=141, col_offset=27), Index(Num(0, lineno=141, col_offset=31)), Load(), lineno=141, col_offset=27), Name('exit_status', Load(), lineno=141, col_offset=35)], Load(), lineno=141, col_offset=27), lineno=140, col_offset=26), None, lineno=139, col_offset=20)], lineno=136, col_offset=16)], [If(Call(Attribute(Name('os', Load(), lineno=143, col_offset=17), 'WIFSTOPPED', Load(), lineno=143, col_offset=17), [Name('status', Load(), lineno=143, col_offset=31)], [], None, None, lineno=143, col_offset=17), [Continue( lineno=144, col_offset=16)], [Raise(Name('DistutilsExecError', Load(), lineno=147, col_offset=22), BinOp(Str("unknown error executing '%s': termination status %d", lineno=148, col_offset=22), Mod(), Tuple([Subscript(Name('cmd', Load(), lineno=149, col_offset=23), Index(Num(0, lineno=149, col_offset=27)), Load(), lineno=149, col_offset=23), Name('status', Load(), lineno=149, col_offset=31)], Load(), lineno=149, col_offset=23), lineno=148, col_offset=22), None, lineno=147, col_offset=16)], lineno=143, col_offset=17)], lineno=134, col_offset=17)], lineno=129, col_offset=12)], [], lineno=120, col_offset=8)], lineno=107, col_offset=4)], [], lineno=100, col_offset=0), FunctionDef('find_executable', arguments([Name('executable', Param(), lineno=151, col_offset=20), Name('path', Param(), lineno=151, col_offset=32)], None, None, [Name('None', Load(), lineno=151, col_offset=37)]), [Expr(Str("Tries to find 'executable' in the directories listed in 'path'.\n\n    A string listing directories separated by 'os.pathsep'; defaults to\n    os.environ['PATH'].  Returns the complete filename or None if not found.\n    ", lineno=156, col_offset=-1), lineno=156, col_offset=-1), If(Compare(Name('path', Load(), lineno=157, col_offset=7), [Is()], [Name('None', Load(), lineno=157, col_offset=15)], lineno=157, col_offset=7), [Assign([Name('path', Store(), lineno=158, col_offset=8)], Subscript(Attribute(Name('os', Load(), lineno=158, col_offset=15), 'environ', Load(), lineno=158, col_offset=15), Index(Str('PATH', lineno=158, col_offset=26)), Load(), lineno=158, col_offset=15), lineno=158, col_offset=8)], [], lineno=157, col_offset=4), Assign([Name('paths', Store(), lineno=159, col_offset=4)], Call(Attribute(Name('path', Load(), lineno=159, col_offset=12), 'split', Load(), lineno=159, col_offset=12), [Attribute(Name('os', Load(), lineno=159, col_offset=23), 'pathsep', Load(), lineno=159, col_offset=23)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=4), Assign([Tuple([Name('base', Store(), lineno=160, col_offset=4), Name('ext', Store(), lineno=160, col_offset=10)], Store(), lineno=160, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=160, col_offset=16), 'path', Load(), lineno=160, col_offset=16), 'splitext', Load(), lineno=160, col_offset=16), [Name('executable', Load(), lineno=160, col_offset=33)], [], None, None, lineno=160, col_offset=16), lineno=160, col_offset=4), If(BoolOp(And(), [BoolOp(Or(), [Compare(Attribute(Name('sys', Load(), lineno=162, col_offset=8), 'platform', Load(), lineno=162, col_offset=8), [Eq()], [Str('win32', lineno=162, col_offset=24)], lineno=162, col_offset=8), Compare(Attribute(Name('os', Load(), lineno=162, col_offset=35), 'name', Load(), lineno=162, col_offset=35), [Eq()], [Str('os2', lineno=162, col_offset=46)], lineno=162, col_offset=35)], lineno=162, col_offset=8), Compare(Name('ext', Load(), lineno=162, col_offset=58), [NotEq()], [Str('.exe', lineno=162, col_offset=65)], lineno=162, col_offset=58)], lineno=162, col_offset=7), [Assign([Name('executable', Store(), lineno=163, col_offset=8)], BinOp(Name('executable', Load(), lineno=163, col_offset=21), Add(), Str('.exe', lineno=163, col_offset=34), lineno=163, col_offset=21), lineno=163, col_offset=8)], [], lineno=162, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=165, col_offset=11), 'path', Load(), lineno=165, col_offset=11), 'isfile', Load(), lineno=165, col_offset=11), [Name('executable', Load(), lineno=165, col_offset=26)], [], None, None, lineno=165, col_offset=11), lineno=165, col_offset=7), [For(Name('p', Store(), lineno=166, col_offset=12), Name('paths', Load(), lineno=166, col_offset=17), [Assign([Name('f', Store(), lineno=167, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=167, col_offset=16), 'path', Load(), lineno=167, col_offset=16), 'join', Load(), lineno=167, col_offset=16), [Name('p', Load(), lineno=167, col_offset=29), Name('executable', Load(), lineno=167, col_offset=32)], [], None, None, lineno=167, col_offset=16), lineno=167, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=15), 'path', Load(), lineno=168, col_offset=15), 'isfile', Load(), lineno=168, col_offset=15), [Name('f', Load(), lineno=168, col_offset=30)], [], None, None, lineno=168, col_offset=15), [Return(Name('f', Load(), lineno=170, col_offset=23), lineno=170, col_offset=16)], [], lineno=168, col_offset=12)], [], lineno=166, col_offset=8), Return(Name('None', Load(), lineno=171, col_offset=15), lineno=171, col_offset=8)], [Return(Name('executable', Load(), lineno=173, col_offset=15), lineno=173, col_offset=8)], lineno=165, col_offset=4)], [], lineno=151, col_offset=0)])
