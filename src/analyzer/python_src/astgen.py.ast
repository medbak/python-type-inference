Module([Expr(Str('Generate ast module from specification\n\nThis script generates the ast module from a simple specification,\nwhich makes it easy to accomodate changes in the grammar.  This\napproach would be quite reasonable if the grammar changed often.\nInstead, it is rather complex to generate the appropriate code.  And\nthe Node interface has changed more often than the grammar.\n', lineno=8, col_offset=-1), lineno=8, col_offset=-1), Import([alias('fileinput', None)], lineno=10, col_offset=0), Import([alias('re', None)], lineno=11, col_offset=0), Import([alias('sys', None)], lineno=12, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=13, col_offset=0), Assign([Name('SPEC', Store(), lineno=15, col_offset=0)], Str('ast.txt', lineno=15, col_offset=7), lineno=15, col_offset=0), Assign([Name('COMMA', Store(), lineno=16, col_offset=0)], Str(', ', lineno=16, col_offset=8), lineno=16, col_offset=0), FunctionDef('load_boilerplate', arguments([Name('file', Param(), lineno=18, col_offset=21)], None, None, []), [Assign([Name('f', Store(), lineno=19, col_offset=4)], Call(Name('open', Load(), lineno=19, col_offset=8), [Name('file', Load(), lineno=19, col_offset=13)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=4), Assign([Name('buf', Store(), lineno=20, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=20, col_offset=10), 'read', Load(), lineno=20, col_offset=10), [], [], None, None, lineno=20, col_offset=10), lineno=20, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=21, col_offset=4), 'close', Load(), lineno=21, col_offset=4), [], [], None, None, lineno=21, col_offset=4), lineno=21, col_offset=4), Assign([Name('i', Store(), lineno=22, col_offset=4)], Call(Attribute(Name('buf', Load(), lineno=22, col_offset=8), 'find', Load(), lineno=22, col_offset=8), [Str('### PROLOGUE', lineno=22, col_offset=17)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=4), Assign([Name('j', Store(), lineno=23, col_offset=4)], Call(Attribute(Name('buf', Load(), lineno=23, col_offset=8), 'find', Load(), lineno=23, col_offset=8), [Str('### EPILOGUE', lineno=23, col_offset=17)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=4), Assign([Name('pro', Store(), lineno=24, col_offset=4)], Call(Attribute(Subscript(Name('buf', Load(), lineno=24, col_offset=10), Slice(BinOp(Name('i', Load(), lineno=24, col_offset=14), Add(), Num(12, lineno=24, col_offset=16), lineno=24, col_offset=14), Name('j', Load(), lineno=24, col_offset=19), None), Load(), lineno=24, col_offset=10), 'strip', Load(), lineno=24, col_offset=10), [], [], None, None, lineno=24, col_offset=10), lineno=24, col_offset=4), Assign([Name('epi', Store(), lineno=25, col_offset=4)], Call(Attribute(Subscript(Name('buf', Load(), lineno=25, col_offset=10), Slice(BinOp(Name('j', Load(), lineno=25, col_offset=14), Add(), Num(12, lineno=25, col_offset=16), lineno=25, col_offset=14), None, None), Load(), lineno=25, col_offset=10), 'strip', Load(), lineno=25, col_offset=10), [], [], None, None, lineno=25, col_offset=10), lineno=25, col_offset=4), Return(Tuple([Name('pro', Load(), lineno=26, col_offset=11), Name('epi', Load(), lineno=26, col_offset=16)], Load(), lineno=26, col_offset=11), lineno=26, col_offset=4)], [], lineno=18, col_offset=0), FunctionDef('strip_default', arguments([Name('arg', Param(), lineno=28, col_offset=18)], None, None, []), [Expr(Str("Return the argname from an 'arg = default' string", lineno=29, col_offset=4), lineno=29, col_offset=4), Assign([Name('i', Store(), lineno=30, col_offset=4)], Call(Attribute(Name('arg', Load(), lineno=30, col_offset=8), 'find', Load(), lineno=30, col_offset=8), [Str('=', lineno=30, col_offset=17)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=4), If(Compare(Name('i', Load(), lineno=31, col_offset=7), [Eq()], [Num(-1, lineno=31, col_offset=13)], lineno=31, col_offset=7), [Return(Name('arg', Load(), lineno=32, col_offset=15), lineno=32, col_offset=8)], [], lineno=31, col_offset=4), Assign([Name('t', Store(), lineno=33, col_offset=4)], Call(Attribute(Subscript(Name('arg', Load(), lineno=33, col_offset=8), Slice(None, Name('i', Load(), lineno=33, col_offset=13), None), Load(), lineno=33, col_offset=8), 'strip', Load(), lineno=33, col_offset=8), [], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=4), Return(Name('t', Load(), lineno=34, col_offset=11), lineno=34, col_offset=4)], [], lineno=28, col_offset=0), Assign([Name('P_NODE', Store(), lineno=36, col_offset=0)], Num(1, lineno=36, col_offset=9), lineno=36, col_offset=0), Assign([Name('P_OTHER', Store(), lineno=37, col_offset=0)], Num(2, lineno=37, col_offset=10), lineno=37, col_offset=0), Assign([Name('P_NESTED', Store(), lineno=38, col_offset=0)], Num(3, lineno=38, col_offset=11), lineno=38, col_offset=0), Assign([Name('P_NONE', Store(), lineno=39, col_offset=0)], Num(4, lineno=39, col_offset=9), lineno=39, col_offset=0), ClassDef('NodeInfo', [], [Expr(Str('Each instance describes a specific AST node', lineno=42, col_offset=4), lineno=42, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=43, col_offset=17), Name('name', Param(), lineno=43, col_offset=23), Name('args', Param(), lineno=43, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'name', Store(), lineno=44, col_offset=8)], Name('name', Load(), lineno=44, col_offset=20), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'args', Store(), lineno=45, col_offset=8)], Call(Attribute(Name('args', Load(), lineno=45, col_offset=20), 'strip', Load(), lineno=45, col_offset=20), [], [], None, None, lineno=45, col_offset=20), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 'argnames', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=46, col_offset=24), 'get_argnames', Load(), lineno=46, col_offset=24), [], [], None, None, lineno=46, col_offset=24), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=47, col_offset=8), 'argprops', Store(), lineno=47, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=47, col_offset=24), 'get_argprops', Load(), lineno=47, col_offset=24), [], [], None, None, lineno=47, col_offset=24), lineno=47, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=48, col_offset=8), 'nargs', Store(), lineno=48, col_offset=8)], Call(Name('len', Load(), lineno=48, col_offset=21), [Attribute(Name('self', Load(), lineno=48, col_offset=25), 'argnames', Load(), lineno=48, col_offset=25)], [], None, None, lineno=48, col_offset=21), lineno=48, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=49, col_offset=8), 'init', Store(), lineno=49, col_offset=8)], List([], Load(), lineno=49, col_offset=20), lineno=49, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('get_argnames', arguments([Name('self', Param(), lineno=51, col_offset=21)], None, None, []), [If(Compare(Str('(', lineno=52, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=52, col_offset=18), 'args', Load(), lineno=52, col_offset=18)], lineno=52, col_offset=11), [Assign([Name('i', Store(), lineno=53, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=53, col_offset=16), 'args', Load(), lineno=53, col_offset=16), 'find', Load(), lineno=53, col_offset=16), [Str('(', lineno=53, col_offset=31)], [], None, None, lineno=53, col_offset=16), lineno=53, col_offset=12), Assign([Name('j', Store(), lineno=54, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=54, col_offset=16), 'args', Load(), lineno=54, col_offset=16), 'rfind', Load(), lineno=54, col_offset=16), [Str(')', lineno=54, col_offset=32)], [], None, None, lineno=54, col_offset=16), lineno=54, col_offset=12), Assign([Name('args', Store(), lineno=55, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=55, col_offset=19), 'args', Load(), lineno=55, col_offset=19), Slice(BinOp(Name('i', Load(), lineno=55, col_offset=29), Add(), Num(1, lineno=55, col_offset=31), lineno=55, col_offset=29), Name('j', Load(), lineno=55, col_offset=33), None), Load(), lineno=55, col_offset=19), lineno=55, col_offset=12)], [Assign([Name('args', Store(), lineno=57, col_offset=12)], Attribute(Name('self', Load(), lineno=57, col_offset=19), 'args', Load(), lineno=57, col_offset=19), lineno=57, col_offset=12)], lineno=52, col_offset=8), Return(ListComp(Call(Name('strip_default', Load(), lineno=58, col_offset=16), [Call(Attribute(Name('arg', Load(), lineno=58, col_offset=30), 'strip', Load(), lineno=58, col_offset=30), [], [], None, None, lineno=58, col_offset=30)], [], None, None, lineno=58, col_offset=16), [comprehension(Name('arg', Store(), lineno=59, col_offset=20), Call(Attribute(Name('args', Load(), lineno=59, col_offset=27), 'split', Load(), lineno=59, col_offset=27), [Str(',', lineno=59, col_offset=38)], [], None, None, lineno=59, col_offset=27), [Name('arg', Load(), lineno=59, col_offset=46)])], lineno=58, col_offset=16), lineno=58, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('get_argprops', arguments([Name('self', Param(), lineno=61, col_offset=21)], None, None, []), [Expr(Str("Each argument can have a property like '*' or '!'\n\n        XXX This method modifies the argnames in place!\n        ", lineno=65, col_offset=-1), lineno=65, col_offset=-1), Assign([Name('d', Store(), lineno=66, col_offset=8)], Dict([], [], lineno=66, col_offset=12), lineno=66, col_offset=8), Assign([Name('hardest_arg', Store(), lineno=67, col_offset=8)], Name('P_NODE', Load(), lineno=67, col_offset=22), lineno=67, col_offset=8), For(Name('i', Store(), lineno=68, col_offset=12), Call(Name('range', Load(), lineno=68, col_offset=17), [Call(Name('len', Load(), lineno=68, col_offset=23), [Attribute(Name('self', Load(), lineno=68, col_offset=27), 'argnames', Load(), lineno=68, col_offset=27)], [], None, None, lineno=68, col_offset=23)], [], None, None, lineno=68, col_offset=17), [Assign([Name('arg', Store(), lineno=69, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=69, col_offset=18), 'argnames', Load(), lineno=69, col_offset=18), Index(Name('i', Load(), lineno=69, col_offset=32)), Load(), lineno=69, col_offset=18), lineno=69, col_offset=12), If(Call(Attribute(Name('arg', Load(), lineno=70, col_offset=15), 'endswith', Load(), lineno=70, col_offset=15), [Str('*', lineno=70, col_offset=28)], [], None, None, lineno=70, col_offset=15), [Assign([Name('arg', Store(), lineno=71, col_offset=16), Subscript(Attribute(Name('self', Load(), lineno=71, col_offset=22), 'argnames', Load(), lineno=71, col_offset=22), Index(Name('i', Load(), lineno=71, col_offset=36)), Store(), lineno=71, col_offset=22)], Subscript(Name('arg', Load(), lineno=71, col_offset=41), Slice(None, Num(-1, lineno=71, col_offset=47), None), Load(), lineno=71, col_offset=41), lineno=71, col_offset=16), Assign([Subscript(Name('d', Load(), lineno=72, col_offset=16), Index(Name('arg', Load(), lineno=72, col_offset=18)), Store(), lineno=72, col_offset=16)], Name('P_OTHER', Load(), lineno=72, col_offset=25), lineno=72, col_offset=16), Assign([Name('hardest_arg', Store(), lineno=73, col_offset=16)], Call(Name('max', Load(), lineno=73, col_offset=30), [Name('hardest_arg', Load(), lineno=73, col_offset=34), Name('P_OTHER', Load(), lineno=73, col_offset=47)], [], None, None, lineno=73, col_offset=30), lineno=73, col_offset=16)], [If(Call(Attribute(Name('arg', Load(), lineno=74, col_offset=17), 'endswith', Load(), lineno=74, col_offset=17), [Str('!', lineno=74, col_offset=30)], [], None, None, lineno=74, col_offset=17), [Assign([Name('arg', Store(), lineno=75, col_offset=16), Subscript(Attribute(Name('self', Load(), lineno=75, col_offset=22), 'argnames', Load(), lineno=75, col_offset=22), Index(Name('i', Load(), lineno=75, col_offset=36)), Store(), lineno=75, col_offset=22)], Subscript(Name('arg', Load(), lineno=75, col_offset=41), Slice(None, Num(-1, lineno=75, col_offset=47), None), Load(), lineno=75, col_offset=41), lineno=75, col_offset=16), Assign([Subscript(Name('d', Load(), lineno=76, col_offset=16), Index(Name('arg', Load(), lineno=76, col_offset=18)), Store(), lineno=76, col_offset=16)], Name('P_NESTED', Load(), lineno=76, col_offset=25), lineno=76, col_offset=16), Assign([Name('hardest_arg', Store(), lineno=77, col_offset=16)], Call(Name('max', Load(), lineno=77, col_offset=30), [Name('hardest_arg', Load(), lineno=77, col_offset=34), Name('P_NESTED', Load(), lineno=77, col_offset=47)], [], None, None, lineno=77, col_offset=30), lineno=77, col_offset=16)], [If(Call(Attribute(Name('arg', Load(), lineno=78, col_offset=17), 'endswith', Load(), lineno=78, col_offset=17), [Str('&', lineno=78, col_offset=30)], [], None, None, lineno=78, col_offset=17), [Assign([Name('arg', Store(), lineno=79, col_offset=16), Subscript(Attribute(Name('self', Load(), lineno=79, col_offset=22), 'argnames', Load(), lineno=79, col_offset=22), Index(Name('i', Load(), lineno=79, col_offset=36)), Store(), lineno=79, col_offset=22)], Subscript(Name('arg', Load(), lineno=79, col_offset=41), Slice(None, Num(-1, lineno=79, col_offset=47), None), Load(), lineno=79, col_offset=41), lineno=79, col_offset=16), Assign([Subscript(Name('d', Load(), lineno=80, col_offset=16), Index(Name('arg', Load(), lineno=80, col_offset=18)), Store(), lineno=80, col_offset=16)], Name('P_NONE', Load(), lineno=80, col_offset=25), lineno=80, col_offset=16), Assign([Name('hardest_arg', Store(), lineno=81, col_offset=16)], Call(Name('max', Load(), lineno=81, col_offset=30), [Name('hardest_arg', Load(), lineno=81, col_offset=34), Name('P_NONE', Load(), lineno=81, col_offset=47)], [], None, None, lineno=81, col_offset=30), lineno=81, col_offset=16)], [Assign([Subscript(Name('d', Load(), lineno=83, col_offset=16), Index(Name('arg', Load(), lineno=83, col_offset=18)), Store(), lineno=83, col_offset=16)], Name('P_NODE', Load(), lineno=83, col_offset=25), lineno=83, col_offset=16)], lineno=78, col_offset=17)], lineno=74, col_offset=17)], lineno=70, col_offset=12)], [], lineno=68, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=84, col_offset=8), 'hardest_arg', Store(), lineno=84, col_offset=8)], Name('hardest_arg', Load(), lineno=84, col_offset=27), lineno=84, col_offset=8), If(Compare(Name('hardest_arg', Load(), lineno=86, col_offset=11), [Gt()], [Name('P_NODE', Load(), lineno=86, col_offset=25)], lineno=86, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=87, col_offset=12), 'args', Store(), lineno=87, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=87, col_offset=24), 'args', Load(), lineno=87, col_offset=24), 'replace', Load(), lineno=87, col_offset=24), [Str('*', lineno=87, col_offset=42), Str('', lineno=87, col_offset=47)], [], None, None, lineno=87, col_offset=24), lineno=87, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=88, col_offset=12), 'args', Store(), lineno=88, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=88, col_offset=24), 'args', Load(), lineno=88, col_offset=24), 'replace', Load(), lineno=88, col_offset=24), [Str('!', lineno=88, col_offset=42), Str('', lineno=88, col_offset=47)], [], None, None, lineno=88, col_offset=24), lineno=88, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=12), 'args', Store(), lineno=89, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=89, col_offset=24), 'args', Load(), lineno=89, col_offset=24), 'replace', Load(), lineno=89, col_offset=24), [Str('&', lineno=89, col_offset=42), Str('', lineno=89, col_offset=47)], [], None, None, lineno=89, col_offset=24), lineno=89, col_offset=12)], [], lineno=86, col_offset=8), Return(Name('d', Load(), lineno=91, col_offset=15), lineno=91, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('gen_source', arguments([Name('self', Param(), lineno=93, col_offset=19)], None, None, []), [Assign([Name('buf', Store(), lineno=94, col_offset=8)], Call(Name('StringIO', Load(), lineno=94, col_offset=14), [], [], None, None, lineno=94, col_offset=14), lineno=94, col_offset=8), Print(Name('buf', Load(), lineno=95, col_offset=17), [BinOp(Str('class %s(Node):', lineno=95, col_offset=22), Mod(), Attribute(Name('self', Load(), lineno=95, col_offset=42), 'name', Load(), lineno=95, col_offset=42), lineno=95, col_offset=22)], True, lineno=95, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=96, col_offset=8), '_gen_init', Load(), lineno=96, col_offset=8), [Name('buf', Load(), lineno=96, col_offset=23)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Print(Name('buf', Load(), lineno=97, col_offset=17), [], True, lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), '_gen_getChildren', Load(), lineno=98, col_offset=8), [Name('buf', Load(), lineno=98, col_offset=30)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Print(Name('buf', Load(), lineno=99, col_offset=17), [], True, lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), '_gen_getChildNodes', Load(), lineno=100, col_offset=8), [Name('buf', Load(), lineno=100, col_offset=32)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Print(Name('buf', Load(), lineno=101, col_offset=17), [], True, lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), '_gen_repr', Load(), lineno=102, col_offset=8), [Name('buf', Load(), lineno=102, col_offset=23)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('buf', Load(), lineno=103, col_offset=8), 'seek', Load(), lineno=103, col_offset=8), [Num(0, lineno=103, col_offset=17), Num(0, lineno=103, col_offset=20)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8), Return(Call(Attribute(Name('buf', Load(), lineno=104, col_offset=15), 'read', Load(), lineno=104, col_offset=15), [], [], None, None, lineno=104, col_offset=15), lineno=104, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('_gen_init', arguments([Name('self', Param(), lineno=106, col_offset=18), Name('buf', Param(), lineno=106, col_offset=24)], None, None, []), [If(Attribute(Name('self', Load(), lineno=107, col_offset=11), 'args', Load(), lineno=107, col_offset=11), [Assign([Name('argtuple', Store(), lineno=108, col_offset=12)], Compare(Str('(', lineno=108, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=108, col_offset=30), 'args', Load(), lineno=108, col_offset=30)], lineno=108, col_offset=23), lineno=108, col_offset=12), Assign([Name('args', Store(), lineno=109, col_offset=12)], IfExp(UnaryOp(Not(), Name('argtuple', Load(), lineno=109, col_offset=36), lineno=109, col_offset=32), Attribute(Name('self', Load(), lineno=109, col_offset=19), 'args', Load(), lineno=109, col_offset=19), Call(Attribute(Str('', lineno=109, col_offset=50), 'join', Load(), lineno=109, col_offset=50), [Attribute(Name('self', Load(), lineno=109, col_offset=58), 'argnames', Load(), lineno=109, col_offset=58)], [], None, None, lineno=109, col_offset=50), lineno=109, col_offset=19), lineno=109, col_offset=12), Print(Name('buf', Load(), lineno=110, col_offset=21), [BinOp(Str('    def __init__(self, %s, lineno=None):', lineno=110, col_offset=26), Mod(), Name('args', Load(), lineno=110, col_offset=71), lineno=110, col_offset=26)], True, lineno=110, col_offset=12)], [Print(Name('buf', Load(), lineno=112, col_offset=21), [Str('    def __init__(self, lineno=None):', lineno=112, col_offset=26)], True, lineno=112, col_offset=12)], lineno=107, col_offset=8), If(Attribute(Name('self', Load(), lineno=113, col_offset=11), 'argnames', Load(), lineno=113, col_offset=11), [If(Name('argtuple', Load(), lineno=114, col_offset=15), [For(Tuple([Name('idx', Store(), lineno=115, col_offset=20), Name('name', Store(), lineno=115, col_offset=25)], Store(), lineno=115, col_offset=20), Call(Name('enumerate', Load(), lineno=115, col_offset=33), [Attribute(Name('self', Load(), lineno=115, col_offset=43), 'argnames', Load(), lineno=115, col_offset=43)], [], None, None, lineno=115, col_offset=33), [Print(Name('buf', Load(), lineno=116, col_offset=29), [BinOp(Str('        self.%s = %s[%s]', lineno=116, col_offset=34), Mod(), Tuple([Name('name', Load(), lineno=116, col_offset=64), Name('args', Load(), lineno=116, col_offset=70), Name('idx', Load(), lineno=116, col_offset=76)], Load(), lineno=116, col_offset=64), lineno=116, col_offset=34)], True, lineno=116, col_offset=20)], [], lineno=115, col_offset=16)], [For(Name('name', Store(), lineno=118, col_offset=20), Attribute(Name('self', Load(), lineno=118, col_offset=28), 'argnames', Load(), lineno=118, col_offset=28), [Print(Name('buf', Load(), lineno=119, col_offset=29), [BinOp(Str('        self.%s = %s', lineno=119, col_offset=34), Mod(), Tuple([Name('name', Load(), lineno=119, col_offset=60), Name('name', Load(), lineno=119, col_offset=66)], Load(), lineno=119, col_offset=60), lineno=119, col_offset=34)], True, lineno=119, col_offset=20)], [], lineno=118, col_offset=16)], lineno=114, col_offset=12)], [], lineno=113, col_offset=8), Print(Name('buf', Load(), lineno=120, col_offset=17), [Str('        self.lineno = lineno', lineno=120, col_offset=22)], True, lineno=120, col_offset=8), For(Name('line', Store(), lineno=124, col_offset=12), Attribute(Name('self', Load(), lineno=124, col_offset=20), 'init', Load(), lineno=124, col_offset=20), [Print(Name('buf', Load(), lineno=125, col_offset=21), [Call(Attribute(BinOp(Str('    ', lineno=125, col_offset=27), Add(), Name('line', Load(), lineno=125, col_offset=36), lineno=125, col_offset=27), 'rstrip', Load(), lineno=125, col_offset=27), [], [], None, None, lineno=125, col_offset=27)], True, lineno=125, col_offset=12)], [], lineno=124, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('_gen_getChildren', arguments([Name('self', Param(), lineno=127, col_offset=25), Name('buf', Param(), lineno=127, col_offset=31)], None, None, []), [Print(Name('buf', Load(), lineno=128, col_offset=17), [Str('    def getChildren(self):', lineno=128, col_offset=22)], True, lineno=128, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=129, col_offset=11), [Attribute(Name('self', Load(), lineno=129, col_offset=15), 'argnames', Load(), lineno=129, col_offset=15)], [], None, None, lineno=129, col_offset=11), [Eq()], [Num(0, lineno=129, col_offset=33)], lineno=129, col_offset=11), [Print(Name('buf', Load(), lineno=130, col_offset=21), [Str('        return ()', lineno=130, col_offset=26)], True, lineno=130, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=132, col_offset=15), 'hardest_arg', Load(), lineno=132, col_offset=15), [Lt()], [Name('P_NESTED', Load(), lineno=132, col_offset=34)], lineno=132, col_offset=15), [Assign([Name('clist', Store(), lineno=133, col_offset=16)], Call(Attribute(Name('COMMA', Load(), lineno=133, col_offset=24), 'join', Load(), lineno=133, col_offset=24), [ListComp(BinOp(Str('self.%s', lineno=133, col_offset=36), Mod(), Name('c', Load(), lineno=133, col_offset=48), lineno=133, col_offset=36), [comprehension(Name('c', Store(), lineno=134, col_offset=40), Attribute(Name('self', Load(), lineno=134, col_offset=45), 'argnames', Load(), lineno=134, col_offset=45), [])], lineno=133, col_offset=36)], [], None, None, lineno=133, col_offset=24), lineno=133, col_offset=16), If(Compare(Attribute(Name('self', Load(), lineno=135, col_offset=19), 'nargs', Load(), lineno=135, col_offset=19), [Eq()], [Num(1, lineno=135, col_offset=33)], lineno=135, col_offset=19), [Print(Name('buf', Load(), lineno=136, col_offset=29), [BinOp(Str('        return %s,', lineno=136, col_offset=34), Mod(), Name('clist', Load(), lineno=136, col_offset=57), lineno=136, col_offset=34)], True, lineno=136, col_offset=20)], [Print(Name('buf', Load(), lineno=138, col_offset=29), [BinOp(Str('        return %s', lineno=138, col_offset=34), Mod(), Name('clist', Load(), lineno=138, col_offset=56), lineno=138, col_offset=34)], True, lineno=138, col_offset=20)], lineno=135, col_offset=16)], [If(Compare(Call(Name('len', Load(), lineno=140, col_offset=19), [Attribute(Name('self', Load(), lineno=140, col_offset=23), 'argnames', Load(), lineno=140, col_offset=23)], [], None, None, lineno=140, col_offset=19), [Eq()], [Num(1, lineno=140, col_offset=41)], lineno=140, col_offset=19), [Print(Name('buf', Load(), lineno=141, col_offset=29), [BinOp(Str('        return tuple(flatten(self.%s))', lineno=141, col_offset=34), Mod(), Subscript(Attribute(Name('self', Load(), lineno=141, col_offset=77), 'argnames', Load(), lineno=141, col_offset=77), Index(Num(0, lineno=141, col_offset=91)), Load(), lineno=141, col_offset=77), lineno=141, col_offset=34)], True, lineno=141, col_offset=20)], [Print(Name('buf', Load(), lineno=143, col_offset=29), [Str('        children = []', lineno=143, col_offset=34)], True, lineno=143, col_offset=20), Assign([Name('template', Store(), lineno=144, col_offset=20)], Str('        children.%s(%sself.%s%s)', lineno=144, col_offset=31), lineno=144, col_offset=20), For(Name('name', Store(), lineno=145, col_offset=24), Attribute(Name('self', Load(), lineno=145, col_offset=32), 'argnames', Load(), lineno=145, col_offset=32), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=146, col_offset=27), 'argprops', Load(), lineno=146, col_offset=27), Index(Name('name', Load(), lineno=146, col_offset=41)), Load(), lineno=146, col_offset=27), [Eq()], [Name('P_NESTED', Load(), lineno=146, col_offset=50)], lineno=146, col_offset=27), [Print(Name('buf', Load(), lineno=147, col_offset=37), [BinOp(Name('template', Load(), lineno=147, col_offset=42), Mod(), Tuple([Str('extend', lineno=147, col_offset=54), Str('flatten(', lineno=147, col_offset=64), Name('name', Load(), lineno=148, col_offset=54), Str(')', lineno=148, col_offset=60)], Load(), lineno=147, col_offset=54), lineno=147, col_offset=42)], True, lineno=147, col_offset=28)], [Print(Name('buf', Load(), lineno=150, col_offset=37), [BinOp(Name('template', Load(), lineno=150, col_offset=42), Mod(), Tuple([Str('append', lineno=150, col_offset=54), Str('', lineno=150, col_offset=64), Name('name', Load(), lineno=150, col_offset=68), Str('', lineno=150, col_offset=74)], Load(), lineno=150, col_offset=54), lineno=150, col_offset=42)], True, lineno=150, col_offset=28)], lineno=146, col_offset=24)], [], lineno=145, col_offset=20), Print(Name('buf', Load(), lineno=151, col_offset=29), [Str('        return tuple(children)', lineno=151, col_offset=34)], True, lineno=151, col_offset=20)], lineno=140, col_offset=16)], lineno=132, col_offset=12)], lineno=129, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('_gen_getChildNodes', arguments([Name('self', Param(), lineno=153, col_offset=27), Name('buf', Param(), lineno=153, col_offset=33)], None, None, []), [Print(Name('buf', Load(), lineno=154, col_offset=17), [Str('    def getChildNodes(self):', lineno=154, col_offset=22)], True, lineno=154, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=155, col_offset=11), [Attribute(Name('self', Load(), lineno=155, col_offset=15), 'argnames', Load(), lineno=155, col_offset=15)], [], None, None, lineno=155, col_offset=11), [Eq()], [Num(0, lineno=155, col_offset=33)], lineno=155, col_offset=11), [Print(Name('buf', Load(), lineno=156, col_offset=21), [Str('        return ()', lineno=156, col_offset=26)], True, lineno=156, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=158, col_offset=15), 'hardest_arg', Load(), lineno=158, col_offset=15), [Lt()], [Name('P_NESTED', Load(), lineno=158, col_offset=34)], lineno=158, col_offset=15), [Assign([Name('clist', Store(), lineno=159, col_offset=16)], ListComp(BinOp(Str('self.%s', lineno=159, col_offset=25), Mod(), Name('c', Load(), lineno=159, col_offset=37), lineno=159, col_offset=25), [comprehension(Name('c', Store(), lineno=160, col_offset=29), Attribute(Name('self', Load(), lineno=160, col_offset=34), 'argnames', Load(), lineno=160, col_offset=34), [Compare(Subscript(Attribute(Name('self', Load(), lineno=161, col_offset=28), 'argprops', Load(), lineno=161, col_offset=28), Index(Name('c', Load(), lineno=161, col_offset=42)), Load(), lineno=161, col_offset=28), [Eq()], [Name('P_NODE', Load(), lineno=161, col_offset=48)], lineno=161, col_offset=28)])], lineno=159, col_offset=25), lineno=159, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=162, col_offset=19), [Name('clist', Load(), lineno=162, col_offset=23)], [], None, None, lineno=162, col_offset=19), [Eq()], [Num(0, lineno=162, col_offset=33)], lineno=162, col_offset=19), [Print(Name('buf', Load(), lineno=163, col_offset=29), [Str('        return ()', lineno=163, col_offset=34)], True, lineno=163, col_offset=20)], [If(Compare(Call(Name('len', Load(), lineno=164, col_offset=21), [Name('clist', Load(), lineno=164, col_offset=25)], [], None, None, lineno=164, col_offset=21), [Eq()], [Num(1, lineno=164, col_offset=35)], lineno=164, col_offset=21), [Print(Name('buf', Load(), lineno=165, col_offset=29), [BinOp(Str('        return %s,', lineno=165, col_offset=34), Mod(), Subscript(Name('clist', Load(), lineno=165, col_offset=57), Index(Num(0, lineno=165, col_offset=63)), Load(), lineno=165, col_offset=57), lineno=165, col_offset=34)], True, lineno=165, col_offset=20)], [Print(Name('buf', Load(), lineno=167, col_offset=29), [BinOp(Str('        return %s', lineno=167, col_offset=34), Mod(), Call(Attribute(Name('COMMA', Load(), lineno=167, col_offset=56), 'join', Load(), lineno=167, col_offset=56), [Name('clist', Load(), lineno=167, col_offset=67)], [], None, None, lineno=167, col_offset=56), lineno=167, col_offset=34)], True, lineno=167, col_offset=20)], lineno=164, col_offset=21)], lineno=162, col_offset=16)], [Print(Name('buf', Load(), lineno=169, col_offset=25), [Str('        nodelist = []', lineno=169, col_offset=30)], True, lineno=169, col_offset=16), Assign([Name('template', Store(), lineno=170, col_offset=16)], Str('        nodelist.%s(%sself.%s%s)', lineno=170, col_offset=27), lineno=170, col_offset=16), For(Name('name', Store(), lineno=171, col_offset=20), Attribute(Name('self', Load(), lineno=171, col_offset=28), 'argnames', Load(), lineno=171, col_offset=28), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=172, col_offset=23), 'argprops', Load(), lineno=172, col_offset=23), Index(Name('name', Load(), lineno=172, col_offset=37)), Load(), lineno=172, col_offset=23), [Eq()], [Name('P_NONE', Load(), lineno=172, col_offset=46)], lineno=172, col_offset=23), [Assign([Name('tmp', Store(), lineno=173, col_offset=24)], Str('        if self.%s is not None:\n            nodelist.append(self.%s)', lineno=173, col_offset=31), lineno=173, col_offset=24), Print(Name('buf', Load(), lineno=175, col_offset=33), [BinOp(Name('tmp', Load(), lineno=175, col_offset=38), Mod(), Tuple([Name('name', Load(), lineno=175, col_offset=45), Name('name', Load(), lineno=175, col_offset=51)], Load(), lineno=175, col_offset=45), lineno=175, col_offset=38)], True, lineno=175, col_offset=24)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=176, col_offset=25), 'argprops', Load(), lineno=176, col_offset=25), Index(Name('name', Load(), lineno=176, col_offset=39)), Load(), lineno=176, col_offset=25), [Eq()], [Name('P_NESTED', Load(), lineno=176, col_offset=48)], lineno=176, col_offset=25), [Print(Name('buf', Load(), lineno=177, col_offset=33), [BinOp(Name('template', Load(), lineno=177, col_offset=38), Mod(), Tuple([Str('extend', lineno=177, col_offset=50), Str('flatten_nodes(', lineno=177, col_offset=60), Name('name', Load(), lineno=178, col_offset=50), Str(')', lineno=178, col_offset=56)], Load(), lineno=177, col_offset=50), lineno=177, col_offset=38)], True, lineno=177, col_offset=24)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=179, col_offset=25), 'argprops', Load(), lineno=179, col_offset=25), Index(Name('name', Load(), lineno=179, col_offset=39)), Load(), lineno=179, col_offset=25), [Eq()], [Name('P_NODE', Load(), lineno=179, col_offset=48)], lineno=179, col_offset=25), [Print(Name('buf', Load(), lineno=180, col_offset=33), [BinOp(Name('template', Load(), lineno=180, col_offset=38), Mod(), Tuple([Str('append', lineno=180, col_offset=50), Str('', lineno=180, col_offset=60), Name('name', Load(), lineno=180, col_offset=64), Str('', lineno=180, col_offset=70)], Load(), lineno=180, col_offset=50), lineno=180, col_offset=38)], True, lineno=180, col_offset=24)], [], lineno=179, col_offset=25)], lineno=176, col_offset=25)], lineno=172, col_offset=20)], [], lineno=171, col_offset=16), Print(Name('buf', Load(), lineno=181, col_offset=25), [Str('        return tuple(nodelist)', lineno=181, col_offset=30)], True, lineno=181, col_offset=16)], lineno=158, col_offset=12)], lineno=155, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('_gen_repr', arguments([Name('self', Param(), lineno=183, col_offset=18), Name('buf', Param(), lineno=183, col_offset=24)], None, None, []), [Print(Name('buf', Load(), lineno=184, col_offset=17), [Str('    def __repr__(self):', lineno=184, col_offset=22)], True, lineno=184, col_offset=8), If(Attribute(Name('self', Load(), lineno=185, col_offset=11), 'argnames', Load(), lineno=185, col_offset=11), [Assign([Name('fmt', Store(), lineno=186, col_offset=12)], Call(Attribute(Name('COMMA', Load(), lineno=186, col_offset=18), 'join', Load(), lineno=186, col_offset=18), [BinOp(List([Str('%s', lineno=186, col_offset=30)], Load(), lineno=186, col_offset=29), Mult(), Attribute(Name('self', Load(), lineno=186, col_offset=38), 'nargs', Load(), lineno=186, col_offset=38), lineno=186, col_offset=29)], [], None, None, lineno=186, col_offset=18), lineno=186, col_offset=12), If(Compare(Str('(', lineno=187, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=187, col_offset=22), 'args', Load(), lineno=187, col_offset=22)], lineno=187, col_offset=15), [Assign([Name('fmt', Store(), lineno=188, col_offset=16)], BinOp(Str('(%s)', lineno=188, col_offset=22), Mod(), Name('fmt', Load(), lineno=188, col_offset=31), lineno=188, col_offset=22), lineno=188, col_offset=16)], [], lineno=187, col_offset=12), Assign([Name('vals', Store(), lineno=189, col_offset=12)], ListComp(BinOp(Str('repr(self.%s)', lineno=189, col_offset=20), Mod(), Name('name', Load(), lineno=189, col_offset=38), lineno=189, col_offset=20), [comprehension(Name('name', Store(), lineno=189, col_offset=47), Attribute(Name('self', Load(), lineno=189, col_offset=55), 'argnames', Load(), lineno=189, col_offset=55), [])], lineno=189, col_offset=20), lineno=189, col_offset=12), Assign([Name('vals', Store(), lineno=190, col_offset=12)], Call(Attribute(Name('COMMA', Load(), lineno=190, col_offset=19), 'join', Load(), lineno=190, col_offset=19), [Name('vals', Load(), lineno=190, col_offset=30)], [], None, None, lineno=190, col_offset=19), lineno=190, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=191, col_offset=15), 'nargs', Load(), lineno=191, col_offset=15), [Eq()], [Num(1, lineno=191, col_offset=29)], lineno=191, col_offset=15), [Assign([Name('vals', Store(), lineno=192, col_offset=16)], BinOp(Name('vals', Load(), lineno=192, col_offset=23), Add(), Str(',', lineno=192, col_offset=30), lineno=192, col_offset=23), lineno=192, col_offset=16)], [], lineno=191, col_offset=12), Print(Name('buf', Load(), lineno=193, col_offset=21), [BinOp(Str('        return "%s(%s)" %% (%s)', lineno=193, col_offset=26), Mod(), Tuple([Attribute(Name('self', Load(), lineno=194, col_offset=19), 'name', Load(), lineno=194, col_offset=19), Name('fmt', Load(), lineno=194, col_offset=30), Name('vals', Load(), lineno=194, col_offset=35)], Load(), lineno=194, col_offset=19), lineno=193, col_offset=26)], True, lineno=193, col_offset=12)], [Print(Name('buf', Load(), lineno=196, col_offset=21), [BinOp(Str('        return "%s()"', lineno=196, col_offset=26), Mod(), Attribute(Name('self', Load(), lineno=196, col_offset=52), 'name', Load(), lineno=196, col_offset=52), lineno=196, col_offset=26)], True, lineno=196, col_offset=12)], lineno=185, col_offset=8)], [], lineno=183, col_offset=4)], [], lineno=41, col_offset=0), Assign([Name('rx_init', Store(), lineno=198, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=198, col_offset=10), 'compile', Load(), lineno=198, col_offset=10), [Str('init\\((.*)\\):', lineno=198, col_offset=21)], [], None, None, lineno=198, col_offset=10), lineno=198, col_offset=0), FunctionDef('parse_spec', arguments([Name('file', Param(), lineno=200, col_offset=15)], None, None, []), [Assign([Name('classes', Store(), lineno=201, col_offset=4)], Dict([], [], lineno=201, col_offset=14), lineno=201, col_offset=4), Assign([Name('cur', Store(), lineno=202, col_offset=4)], Name('None', Load(), lineno=202, col_offset=10), lineno=202, col_offset=4), For(Name('line', Store(), lineno=203, col_offset=8), Call(Attribute(Name('fileinput', Load(), lineno=203, col_offset=16), 'input', Load(), lineno=203, col_offset=16), [Name('file', Load(), lineno=203, col_offset=32)], [], None, None, lineno=203, col_offset=16), [If(Call(Attribute(Call(Attribute(Name('line', Load(), lineno=204, col_offset=11), 'strip', Load(), lineno=204, col_offset=11), [], [], None, None, lineno=204, col_offset=11), 'startswith', Load(), lineno=204, col_offset=11), [Str('#', lineno=204, col_offset=35)], [], None, None, lineno=204, col_offset=11), [Continue( lineno=205, col_offset=12)], [], lineno=204, col_offset=8), Assign([Name('mo', Store(), lineno=206, col_offset=8)], Call(Attribute(Name('rx_init', Load(), lineno=206, col_offset=13), 'search', Load(), lineno=206, col_offset=13), [Name('line', Load(), lineno=206, col_offset=28)], [], None, None, lineno=206, col_offset=13), lineno=206, col_offset=8), If(Compare(Name('mo', Load(), lineno=207, col_offset=11), [Is()], [Name('None', Load(), lineno=207, col_offset=17)], lineno=207, col_offset=11), [If(Compare(Name('cur', Load(), lineno=208, col_offset=15), [Is()], [Name('None', Load(), lineno=208, col_offset=22)], lineno=208, col_offset=15), [TryExcept([Assign([Tuple([Name('name', Store(), lineno=211, col_offset=20), Name('args', Store(), lineno=211, col_offset=26)], Store(), lineno=211, col_offset=20)], Call(Attribute(Name('line', Load(), lineno=211, col_offset=33), 'split', Load(), lineno=211, col_offset=33), [Str(':', lineno=211, col_offset=44)], [], None, None, lineno=211, col_offset=33), lineno=211, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=212, col_offset=23), None, [Continue( lineno=213, col_offset=20)], lineno=212, col_offset=16)], [], lineno=210, col_offset=16), Assign([Subscript(Name('classes', Load(), lineno=214, col_offset=16), Index(Name('name', Load(), lineno=214, col_offset=24)), Store(), lineno=214, col_offset=16)], Call(Name('NodeInfo', Load(), lineno=214, col_offset=32), [Name('name', Load(), lineno=214, col_offset=41), Name('args', Load(), lineno=214, col_offset=47)], [], None, None, lineno=214, col_offset=32), lineno=214, col_offset=16), Assign([Name('cur', Store(), lineno=215, col_offset=16)], Name('None', Load(), lineno=215, col_offset=22), lineno=215, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('cur', Load(), lineno=218, col_offset=16), 'init', Load(), lineno=218, col_offset=16), 'append', Load(), lineno=218, col_offset=16), [Name('line', Load(), lineno=218, col_offset=32)], [], None, None, lineno=218, col_offset=16), lineno=218, col_offset=16)], lineno=208, col_offset=12)], [Assign([Name('name', Store(), lineno=221, col_offset=12)], Call(Attribute(Name('mo', Load(), lineno=221, col_offset=19), 'group', Load(), lineno=221, col_offset=19), [Num(1, lineno=221, col_offset=28)], [], None, None, lineno=221, col_offset=19), lineno=221, col_offset=12), Assign([Name('cur', Store(), lineno=222, col_offset=12)], Subscript(Name('classes', Load(), lineno=222, col_offset=18), Index(Name('name', Load(), lineno=222, col_offset=26)), Load(), lineno=222, col_offset=18), lineno=222, col_offset=12)], lineno=207, col_offset=8)], [], lineno=203, col_offset=4), Return(Call(Name('sorted', Load(), lineno=223, col_offset=11), [Call(Attribute(Name('classes', Load(), lineno=223, col_offset=18), 'values', Load(), lineno=223, col_offset=18), [], [], None, None, lineno=223, col_offset=18)], [keyword('key', Lambda(arguments([Name('n', Param(), lineno=223, col_offset=47)], None, None, []), Attribute(Name('n', Load(), lineno=223, col_offset=50), 'name', Load(), lineno=223, col_offset=50), lineno=223, col_offset=40))], None, None, lineno=223, col_offset=11), lineno=223, col_offset=4)], [], lineno=200, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Tuple([Name('prologue', Store(), lineno=226, col_offset=4), Name('epilogue', Store(), lineno=226, col_offset=14)], Store(), lineno=226, col_offset=4)], Call(Name('load_boilerplate', Load(), lineno=226, col_offset=25), [Subscript(Attribute(Name('sys', Load(), lineno=226, col_offset=42), 'argv', Load(), lineno=226, col_offset=42), Index(Num(-1, lineno=226, col_offset=52)), Load(), lineno=226, col_offset=42)], [], None, None, lineno=226, col_offset=25), lineno=226, col_offset=4), Print(None, [Name('prologue', Load(), lineno=227, col_offset=10)], True, lineno=227, col_offset=4), Print(None, [], True, lineno=228, col_offset=4), Assign([Name('classes', Store(), lineno=229, col_offset=4)], Call(Name('parse_spec', Load(), lineno=229, col_offset=14), [Name('SPEC', Load(), lineno=229, col_offset=25)], [], None, None, lineno=229, col_offset=14), lineno=229, col_offset=4), For(Name('info', Store(), lineno=230, col_offset=8), Name('classes', Load(), lineno=230, col_offset=16), [Print(None, [Call(Attribute(Name('info', Load(), lineno=231, col_offset=14), 'gen_source', Load(), lineno=231, col_offset=14), [], [], None, None, lineno=231, col_offset=14)], True, lineno=231, col_offset=8)], [], lineno=230, col_offset=4), Print(None, [Name('epilogue', Load(), lineno=232, col_offset=10)], True, lineno=232, col_offset=4)], [], lineno=225, col_offset=0), If(Compare(Name('__name__', Load(), lineno=234, col_offset=3), [Eq()], [Str('__main__', lineno=234, col_offset=15)], lineno=234, col_offset=3), [Expr(Call(Name('main', Load(), lineno=235, col_offset=4), [], [], None, None, lineno=235, col_offset=4), lineno=235, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=236, col_offset=4), 'exit', Load(), lineno=236, col_offset=4), [Num(0, lineno=236, col_offset=13)], [], None, None, lineno=236, col_offset=4), lineno=236, col_offset=4)], [], lineno=234, col_offset=0), Expr(Str('Python abstract syntax node definitions\n\nThis file is automatically generated by Tools/compiler/astgen.py\n', lineno=242, col_offset=-1), lineno=242, col_offset=-1), ImportFrom('consts', [alias('CO_VARARGS', None), alias('CO_VARKEYWORDS', None)], 0, lineno=243, col_offset=0), FunctionDef('flatten', arguments([Name('seq', Param(), lineno=245, col_offset=12)], None, None, []), [Assign([Name('l', Store(), lineno=246, col_offset=4)], List([], Load(), lineno=246, col_offset=8), lineno=246, col_offset=4), For(Name('elt', Store(), lineno=247, col_offset=8), Name('seq', Load(), lineno=247, col_offset=15), [Assign([Name('t', Store(), lineno=248, col_offset=8)], Call(Name('type', Load(), lineno=248, col_offset=12), [Name('elt', Load(), lineno=248, col_offset=17)], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=8), If(BoolOp(Or(), [Compare(Name('t', Load(), lineno=249, col_offset=11), [Is()], [Name('tuple', Load(), lineno=249, col_offset=16)], lineno=249, col_offset=11), Compare(Name('t', Load(), lineno=249, col_offset=25), [Is()], [Name('list', Load(), lineno=249, col_offset=30)], lineno=249, col_offset=25)], lineno=249, col_offset=11), [For(Name('elt2', Store(), lineno=250, col_offset=16), Call(Name('flatten', Load(), lineno=250, col_offset=24), [Name('elt', Load(), lineno=250, col_offset=32)], [], None, None, lineno=250, col_offset=24), [Expr(Call(Attribute(Name('l', Load(), lineno=251, col_offset=16), 'append', Load(), lineno=251, col_offset=16), [Name('elt2', Load(), lineno=251, col_offset=25)], [], None, None, lineno=251, col_offset=16), lineno=251, col_offset=16)], [], lineno=250, col_offset=12)], [Expr(Call(Attribute(Name('l', Load(), lineno=253, col_offset=12), 'append', Load(), lineno=253, col_offset=12), [Name('elt', Load(), lineno=253, col_offset=21)], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=12)], lineno=249, col_offset=8)], [], lineno=247, col_offset=4), Return(Name('l', Load(), lineno=254, col_offset=11), lineno=254, col_offset=4)], [], lineno=245, col_offset=0), FunctionDef('flatten_nodes', arguments([Name('seq', Param(), lineno=256, col_offset=18)], None, None, []), [Return(ListComp(Name('n', Load(), lineno=257, col_offset=12), [comprehension(Name('n', Store(), lineno=257, col_offset=18), Call(Name('flatten', Load(), lineno=257, col_offset=23), [Name('seq', Load(), lineno=257, col_offset=31)], [], None, None, lineno=257, col_offset=23), [Call(Name('isinstance', Load(), lineno=257, col_offset=39), [Name('n', Load(), lineno=257, col_offset=50), Name('Node', Load(), lineno=257, col_offset=53)], [], None, None, lineno=257, col_offset=39)])], lineno=257, col_offset=12), lineno=257, col_offset=4)], [], lineno=256, col_offset=0), Assign([Name('nodes', Store(), lineno=259, col_offset=0)], Dict([], [], lineno=259, col_offset=8), lineno=259, col_offset=0), ClassDef('Node', [], [Expr(Str('Abstract base class for ast nodes.', lineno=262, col_offset=4), lineno=262, col_offset=4), FunctionDef('getChildren', arguments([Name('self', Param(), lineno=263, col_offset=20)], None, None, []), [Pass( lineno=264, col_offset=8)], [], lineno=263, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=265, col_offset=17)], None, None, []), [For(Name('n', Store(), lineno=266, col_offset=12), Call(Attribute(Name('self', Load(), lineno=266, col_offset=17), 'getChildren', Load(), lineno=266, col_offset=17), [], [], None, None, lineno=266, col_offset=17), [Expr(Yield(Name('n', Load(), lineno=267, col_offset=18), lineno=267, col_offset=12), lineno=267, col_offset=12)], [], lineno=266, col_offset=8)], [], lineno=265, col_offset=4), FunctionDef('asList', arguments([Name('self', Param(), lineno=268, col_offset=15)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=269, col_offset=15), 'getChildren', Load(), lineno=269, col_offset=15), [], [], None, None, lineno=269, col_offset=15), lineno=269, col_offset=8)], [], lineno=268, col_offset=4), FunctionDef('getChildNodes', arguments([Name('self', Param(), lineno=270, col_offset=22)], None, None, []), [Pass( lineno=271, col_offset=8)], [], lineno=270, col_offset=4)], [], lineno=261, col_offset=0), ClassDef('EmptyNode', [Name('Node', Load(), lineno=273, col_offset=16)], [Pass( lineno=274, col_offset=4)], [], lineno=273, col_offset=0), ClassDef('Expression', [Name('Node', Load(), lineno=276, col_offset=17)], [Assign([Subscript(Name('nodes', Load(), lineno=278, col_offset=4), Index(Str('expression', lineno=278, col_offset=10)), Store(), lineno=278, col_offset=4)], Str('Expression', lineno=278, col_offset=26), lineno=278, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=279, col_offset=17), Name('node', Param(), lineno=279, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=280, col_offset=8), 'node', Store(), lineno=280, col_offset=8)], Name('node', Load(), lineno=280, col_offset=20), lineno=280, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('getChildren', arguments([Name('self', Param(), lineno=282, col_offset=20)], None, None, []), [Return(Tuple([Attribute(Name('self', Load(), lineno=283, col_offset=15), 'node', Load(), lineno=283, col_offset=15)], Load(), lineno=283, col_offset=15), lineno=283, col_offset=8)], [], lineno=282, col_offset=4), FunctionDef('getChildNodes', arguments([Name('self', Param(), lineno=285, col_offset=22)], None, None, []), [Return(Tuple([Attribute(Name('self', Load(), lineno=286, col_offset=15), 'node', Load(), lineno=286, col_offset=15)], Load(), lineno=286, col_offset=15), lineno=286, col_offset=8)], [], lineno=285, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=288, col_offset=17)], None, None, []), [Return(BinOp(Str('Expression(%s)', lineno=289, col_offset=15), Mod(), Call(Name('repr', Load(), lineno=289, col_offset=35), [Attribute(Name('self', Load(), lineno=289, col_offset=40), 'node', Load(), lineno=289, col_offset=40)], [], None, None, lineno=289, col_offset=35), lineno=289, col_offset=15), lineno=289, col_offset=8)], [], lineno=288, col_offset=4)], [], lineno=276, col_offset=0), For(Tuple([Name('name', Store(), lineno=292, col_offset=4), Name('obj', Store(), lineno=292, col_offset=10)], Store(), lineno=292, col_offset=4), Call(Attribute(Call(Name('globals', Load(), lineno=292, col_offset=17), [], [], None, None, lineno=292, col_offset=17), 'items', Load(), lineno=292, col_offset=17), [], [], None, None, lineno=292, col_offset=17), [If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=293, col_offset=7), [Name('obj', Load(), lineno=293, col_offset=18), Name('type', Load(), lineno=293, col_offset=23)], [], None, None, lineno=293, col_offset=7), Call(Name('issubclass', Load(), lineno=293, col_offset=33), [Name('obj', Load(), lineno=293, col_offset=44), Name('Node', Load(), lineno=293, col_offset=49)], [], None, None, lineno=293, col_offset=33)], lineno=293, col_offset=7), [Assign([Subscript(Name('nodes', Load(), lineno=294, col_offset=8), Index(Call(Attribute(Name('name', Load(), lineno=294, col_offset=14), 'lower', Load(), lineno=294, col_offset=14), [], [], None, None, lineno=294, col_offset=14)), Store(), lineno=294, col_offset=8)], Name('obj', Load(), lineno=294, col_offset=30), lineno=294, col_offset=8)], [], lineno=293, col_offset=4)], [], lineno=292, col_offset=0)])
