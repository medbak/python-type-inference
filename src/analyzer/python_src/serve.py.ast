Module([Expr(Str('\nSmall wsgiref based web server. Takes a path to serve from and an\noptional port number (defaults to 8000), then tries to serve files.\nMime types are guessed from the file names, 404 errors are thrown\nif the file is not found. Used for the make serve target in Doc.\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('os', None)], lineno=9, col_offset=0), Import([alias('mimetypes', None)], lineno=10, col_offset=0), ImportFrom('wsgiref', [alias('simple_server', None), alias('util', None)], 0, lineno=11, col_offset=0), FunctionDef('app', arguments([Name('environ', Param(), lineno=13, col_offset=8), Name('respond', Param(), lineno=13, col_offset=17)], None, None, []), [Assign([Name('fn', Store(), lineno=15, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=15, col_offset=9), 'path', Load(), lineno=15, col_offset=9), 'join', Load(), lineno=15, col_offset=9), [Name('path', Load(), lineno=15, col_offset=22), Subscript(Subscript(Name('environ', Load(), lineno=15, col_offset=28), Index(Str('PATH_INFO', lineno=15, col_offset=36)), Load(), lineno=15, col_offset=28), Slice(Num(1, lineno=15, col_offset=49), None, None), Load(), lineno=15, col_offset=28)], [], None, None, lineno=15, col_offset=9), lineno=15, col_offset=4), If(Compare(Str('.', lineno=16, col_offset=7), [NotIn()], [Subscript(Call(Attribute(Name('fn', Load(), lineno=16, col_offset=18), 'split', Load(), lineno=16, col_offset=18), [Attribute(Attribute(Name('os', Load(), lineno=16, col_offset=27), 'path', Load(), lineno=16, col_offset=27), 'sep', Load(), lineno=16, col_offset=27)], [], None, None, lineno=16, col_offset=18), Index(Num(-1, lineno=16, col_offset=41)), Load(), lineno=16, col_offset=18)], lineno=16, col_offset=7), [Assign([Name('fn', Store(), lineno=17, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=17, col_offset=13), 'path', Load(), lineno=17, col_offset=13), 'join', Load(), lineno=17, col_offset=13), [Name('fn', Load(), lineno=17, col_offset=26), Str('index.html', lineno=17, col_offset=30)], [], None, None, lineno=17, col_offset=13), lineno=17, col_offset=8)], [], lineno=16, col_offset=4), Assign([Name('type', Store(), lineno=18, col_offset=4)], Subscript(Call(Attribute(Name('mimetypes', Load(), lineno=18, col_offset=11), 'guess_type', Load(), lineno=18, col_offset=11), [Name('fn', Load(), lineno=18, col_offset=32)], [], None, None, lineno=18, col_offset=11), Index(Num(0, lineno=18, col_offset=36)), Load(), lineno=18, col_offset=11), lineno=18, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=20, col_offset=7), 'path', Load(), lineno=20, col_offset=7), 'exists', Load(), lineno=20, col_offset=7), [Name('fn', Load(), lineno=20, col_offset=22)], [], None, None, lineno=20, col_offset=7), [Expr(Call(Name('respond', Load(), lineno=21, col_offset=8), [Str('200 OK', lineno=21, col_offset=16), List([Tuple([Str('Content-Type', lineno=21, col_offset=28), Name('type', Load(), lineno=21, col_offset=44)], Load(), lineno=21, col_offset=28)], Load(), lineno=21, col_offset=26)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8), Return(Call(Attribute(Name('util', Load(), lineno=22, col_offset=15), 'FileWrapper', Load(), lineno=22, col_offset=15), [Call(Name('open', Load(), lineno=22, col_offset=32), [Name('fn', Load(), lineno=22, col_offset=37)], [], None, None, lineno=22, col_offset=32)], [], None, None, lineno=22, col_offset=15), lineno=22, col_offset=8)], [Expr(Call(Name('respond', Load(), lineno=24, col_offset=8), [Str('404 Not Found', lineno=24, col_offset=16), List([Tuple([Str('Content-Type', lineno=24, col_offset=35), Str('text/plain', lineno=24, col_offset=51)], Load(), lineno=24, col_offset=35)], Load(), lineno=24, col_offset=33)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Return(List([Str('not found', lineno=25, col_offset=16)], Load(), lineno=25, col_offset=15), lineno=25, col_offset=8)], lineno=20, col_offset=4)], [], lineno=13, col_offset=0), If(Compare(Name('__name__', Load(), lineno=27, col_offset=3), [Eq()], [Str('__main__', lineno=27, col_offset=15)], lineno=27, col_offset=3), [Assign([Name('path', Store(), lineno=28, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=28, col_offset=11), 'argv', Load(), lineno=28, col_offset=11), Index(Num(1, lineno=28, col_offset=20)), Load(), lineno=28, col_offset=11), lineno=28, col_offset=4), Assign([Name('port', Store(), lineno=29, col_offset=4)], IfExp(Compare(Call(Name('len', Load(), lineno=29, col_offset=31), [Attribute(Name('sys', Load(), lineno=29, col_offset=35), 'argv', Load(), lineno=29, col_offset=35)], [], None, None, lineno=29, col_offset=31), [Gt()], [Num(2, lineno=29, col_offset=47)], lineno=29, col_offset=31), Call(Name('int', Load(), lineno=29, col_offset=11), [Subscript(Attribute(Name('sys', Load(), lineno=29, col_offset=15), 'argv', Load(), lineno=29, col_offset=15), Index(Num(2, lineno=29, col_offset=24)), Load(), lineno=29, col_offset=15)], [], None, None, lineno=29, col_offset=11), Num(8000, lineno=29, col_offset=54), lineno=29, col_offset=11), lineno=29, col_offset=4), Assign([Name('httpd', Store(), lineno=30, col_offset=4)], Call(Attribute(Name('simple_server', Load(), lineno=30, col_offset=12), 'make_server', Load(), lineno=30, col_offset=12), [Str('', lineno=30, col_offset=38), Name('port', Load(), lineno=30, col_offset=42), Name('app', Load(), lineno=30, col_offset=48)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=4), Print(None, [BinOp(Str('Serving %s on port %s, control-C to stop', lineno=31, col_offset=10), Mod(), Tuple([Name('path', Load(), lineno=31, col_offset=56), Name('port', Load(), lineno=31, col_offset=62)], Load(), lineno=31, col_offset=56), lineno=31, col_offset=10)], True, lineno=31, col_offset=4), TryExcept([Expr(Call(Attribute(Name('httpd', Load(), lineno=33, col_offset=8), 'serve_forever', Load(), lineno=33, col_offset=8), [], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=34, col_offset=11), None, [Print(None, [Str('\x08\x08Shutting down.', lineno=35, col_offset=14)], True, lineno=35, col_offset=8)], lineno=34, col_offset=4)], [], lineno=32, col_offset=4)], [], lineno=27, col_offset=0)])
