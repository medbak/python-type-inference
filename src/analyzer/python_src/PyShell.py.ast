Module([Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('os.path', None)], lineno=4, col_offset=0), Import([alias('sys', None)], lineno=5, col_offset=0), Import([alias('string', None)], lineno=6, col_offset=0), Import([alias('getopt', None)], lineno=7, col_offset=0), Import([alias('re', None)], lineno=8, col_offset=0), Import([alias('socket', None)], lineno=9, col_offset=0), Import([alias('time', None)], lineno=10, col_offset=0), Import([alias('threading', None)], lineno=11, col_offset=0), Import([alias('traceback', None)], lineno=12, col_offset=0), Import([alias('types', None)], lineno=13, col_offset=0), Import([alias('linecache', None)], lineno=15, col_offset=0), ImportFrom('code', [alias('InteractiveInterpreter', None)], 0, lineno=16, col_offset=0), TryExcept([ImportFrom('Tkinter', [alias('*', None)], 0, lineno=19, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=20, col_offset=7), None, [Print(Attribute(Name('sys', Load(), lineno=21, col_offset=11), '__stderr__', Load(), lineno=21, col_offset=11), [Str("** IDLE can't import Tkinter.  Your Python may not be configured for Tk. **", lineno=21, col_offset=27)], True, lineno=21, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=23, col_offset=4), 'exit', Load(), lineno=23, col_offset=4), [Num(1, lineno=23, col_offset=13)], [], None, None, lineno=23, col_offset=4), lineno=23, col_offset=4)], lineno=20, col_offset=0)], [], lineno=18, col_offset=0), Import([alias('tkMessageBox', None)], lineno=24, col_offset=0), ImportFrom('idlelib.EditorWindow', [alias('EditorWindow', None), alias('fixwordbreaks', None)], 0, lineno=26, col_offset=0), ImportFrom('idlelib.FileList', [alias('FileList', None)], 0, lineno=27, col_offset=0), ImportFrom('idlelib.ColorDelegator', [alias('ColorDelegator', None)], 0, lineno=28, col_offset=0), ImportFrom('idlelib.UndoDelegator', [alias('UndoDelegator', None)], 0, lineno=29, col_offset=0), ImportFrom('idlelib.OutputWindow', [alias('OutputWindow', None)], 0, lineno=30, col_offset=0), ImportFrom('idlelib.configHandler', [alias('idleConf', None)], 0, lineno=31, col_offset=0), ImportFrom('idlelib', [alias('idlever', None)], 0, lineno=32, col_offset=0), ImportFrom('idlelib', [alias('rpc', None)], 0, lineno=33, col_offset=0), ImportFrom('idlelib', [alias('Debugger', None)], 0, lineno=34, col_offset=0), ImportFrom('idlelib', [alias('RemoteDebugger', None)], 0, lineno=35, col_offset=0), ImportFrom('idlelib', [alias('macosxSupport', None)], 0, lineno=36, col_offset=0), Assign([Name('IDENTCHARS', Store(), lineno=38, col_offset=0)], BinOp(BinOp(Attribute(Name('string', Load(), lineno=38, col_offset=13), 'ascii_letters', Load(), lineno=38, col_offset=13), Add(), Attribute(Name('string', Load(), lineno=38, col_offset=36), 'digits', Load(), lineno=38, col_offset=36), lineno=38, col_offset=13), Add(), Str('_', lineno=38, col_offset=52), lineno=38, col_offset=50), lineno=38, col_offset=0), Assign([Name('HOST', Store(), lineno=39, col_offset=0)], Str('127.0.0.1', lineno=39, col_offset=7), lineno=39, col_offset=0), Assign([Name('PORT', Store(), lineno=40, col_offset=0)], Num(0, lineno=40, col_offset=7), lineno=40, col_offset=0), TryExcept([ImportFrom('signal', [alias('SIGTERM', None)], 0, lineno=43, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=44, col_offset=7), None, [Assign([Name('SIGTERM', Store(), lineno=45, col_offset=4)], Num(15, lineno=45, col_offset=14), lineno=45, col_offset=4)], lineno=44, col_offset=0)], [], lineno=42, col_offset=0), Global(['warning_stream'], lineno=51, col_offset=0), Assign([Name('warning_stream', Store(), lineno=52, col_offset=0)], Attribute(Name('sys', Load(), lineno=52, col_offset=17), '__stderr__', Load(), lineno=52, col_offset=17), lineno=52, col_offset=0), TryExcept([Import([alias('warnings', None)], lineno=54, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=55, col_offset=7), None, [Pass( lineno=56, col_offset=4)], lineno=55, col_offset=0)], [FunctionDef('idle_showwarning', arguments([Name('message', Param(), lineno=58, col_offset=25), Name('category', Param(), lineno=58, col_offset=34), Name('filename', Param(), lineno=58, col_offset=44), Name('lineno', Param(), lineno=58, col_offset=54), Name('file', Param(), lineno=59, col_offset=25), Name('line', Param(), lineno=59, col_offset=36)], None, None, [Name('None', Load(), lineno=59, col_offset=30), Name('None', Load(), lineno=59, col_offset=41)]), [If(Compare(Name('file', Load(), lineno=60, col_offset=11), [Is()], [Name('None', Load(), lineno=60, col_offset=19)], lineno=60, col_offset=11), [Assign([Name('file', Store(), lineno=61, col_offset=12)], Name('warning_stream', Load(), lineno=61, col_offset=19), lineno=61, col_offset=12)], [], lineno=60, col_offset=8), TryExcept([Expr(Call(Attribute(Name('file', Load(), lineno=63, col_offset=12), 'write', Load(), lineno=63, col_offset=12), [Call(Attribute(Name('warnings', Load(), lineno=63, col_offset=23), 'formatwarning', Load(), lineno=63, col_offset=23), [Name('message', Load(), lineno=63, col_offset=46), Name('category', Load(), lineno=63, col_offset=55), Name('filename', Load(), lineno=63, col_offset=65), Name('lineno', Load(), lineno=64, col_offset=46)], [keyword('file', Name('file', Load(), lineno=64, col_offset=59)), keyword('line', Name('line', Load(), lineno=64, col_offset=70))], None, None, lineno=63, col_offset=23)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=65, col_offset=15), None, [Pass( lineno=66, col_offset=12)], lineno=65, col_offset=8)], [], lineno=62, col_offset=8)], [], lineno=58, col_offset=4), Assign([Attribute(Name('warnings', Load(), lineno=67, col_offset=4), 'showwarning', Store(), lineno=67, col_offset=4)], Name('idle_showwarning', Load(), lineno=67, col_offset=27), lineno=67, col_offset=4), FunctionDef('idle_formatwarning', arguments([Name('message', Param(), lineno=68, col_offset=27), Name('category', Param(), lineno=68, col_offset=36), Name('filename', Param(), lineno=68, col_offset=46), Name('lineno', Param(), lineno=68, col_offset=56), Name('line', Param(), lineno=68, col_offset=64)], None, None, [Name('None', Load(), lineno=68, col_offset=69)]), [Expr(Str('Format warnings the IDLE way', lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Name('s', Store(), lineno=70, col_offset=8)], Str('\nWarning (from warnings module):\n', lineno=70, col_offset=12), lineno=70, col_offset=8), AugAssign(Name('s', Store(), lineno=71, col_offset=8), Add(), BinOp(Str('  File "%s", line %s\n', lineno=71, col_offset=13), Mod(), Tuple([Name('filename', Load(), lineno=71, col_offset=43), Name('lineno', Load(), lineno=71, col_offset=53)], Load(), lineno=71, col_offset=43), lineno=71, col_offset=13), lineno=71, col_offset=8), If(Compare(Name('line', Load(), lineno=72, col_offset=11), [Is()], [Name('None', Load(), lineno=72, col_offset=19)], lineno=72, col_offset=11), [Assign([Name('line', Store(), lineno=73, col_offset=12)], Call(Attribute(Name('linecache', Load(), lineno=73, col_offset=19), 'getline', Load(), lineno=73, col_offset=19), [Name('filename', Load(), lineno=73, col_offset=37), Name('lineno', Load(), lineno=73, col_offset=47)], [], None, None, lineno=73, col_offset=19), lineno=73, col_offset=12)], [], lineno=72, col_offset=8), Assign([Name('line', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=74, col_offset=15), 'strip', Load(), lineno=74, col_offset=15), [], [], None, None, lineno=74, col_offset=15), lineno=74, col_offset=8), If(Name('line', Load(), lineno=75, col_offset=11), [AugAssign(Name('s', Store(), lineno=76, col_offset=12), Add(), BinOp(Str('    %s\n', lineno=76, col_offset=17), Mod(), Name('line', Load(), lineno=76, col_offset=30), lineno=76, col_offset=17), lineno=76, col_offset=12)], [], lineno=75, col_offset=8), AugAssign(Name('s', Store(), lineno=77, col_offset=8), Add(), BinOp(Str('%s: %s\n>>> ', lineno=77, col_offset=13), Mod(), Tuple([Attribute(Name('category', Load(), lineno=77, col_offset=31), '__name__', Load(), lineno=77, col_offset=31), Name('message', Load(), lineno=77, col_offset=50)], Load(), lineno=77, col_offset=31), lineno=77, col_offset=13), lineno=77, col_offset=8), Return(Name('s', Load(), lineno=78, col_offset=15), lineno=78, col_offset=8)], [], lineno=68, col_offset=4), Assign([Attribute(Name('warnings', Load(), lineno=79, col_offset=4), 'formatwarning', Store(), lineno=79, col_offset=4)], Name('idle_formatwarning', Load(), lineno=79, col_offset=29), lineno=79, col_offset=4)], lineno=53, col_offset=0), FunctionDef('extended_linecache_checkcache', arguments([Name('filename', Param(), lineno=81, col_offset=34), Name('orig_checkcache', Param(), lineno=82, col_offset=34)], None, None, [Name('None', Load(), lineno=81, col_offset=43), Attribute(Name('linecache', Load(), lineno=82, col_offset=50), 'checkcache', Load(), lineno=82, col_offset=50)]), [Expr(Str('Extend linecache.checkcache to preserve the <pyshell#...> entries\n\n    Rather than repeating the linecache code, patch it to save the\n    <pyshell#...> entries, call the original linecache.checkcache()\n    (skipping them), and then restore the saved entries.\n\n    orig_checkcache is bound at definition time to the original\n    method, allowing it to be patched.\n    ', lineno=91, col_offset=-1), lineno=91, col_offset=-1), Assign([Name('cache', Store(), lineno=92, col_offset=4)], Attribute(Name('linecache', Load(), lineno=92, col_offset=12), 'cache', Load(), lineno=92, col_offset=12), lineno=92, col_offset=4), Assign([Name('save', Store(), lineno=93, col_offset=4)], Dict([], [], lineno=93, col_offset=11), lineno=93, col_offset=4), For(Name('key', Store(), lineno=94, col_offset=8), Call(Name('list', Load(), lineno=94, col_offset=15), [Name('cache', Load(), lineno=94, col_offset=20)], [], None, None, lineno=94, col_offset=15), [If(Compare(BinOp(Subscript(Name('key', Load(), lineno=95, col_offset=11), Slice(None, Num(1, lineno=95, col_offset=16), None), Load(), lineno=95, col_offset=11), Add(), Subscript(Name('key', Load(), lineno=95, col_offset=21), Slice(Num(-1, lineno=95, col_offset=26), None, None), Load(), lineno=95, col_offset=21), lineno=95, col_offset=11), [Eq()], [Str('<>', lineno=95, col_offset=33)], lineno=95, col_offset=11), [Assign([Subscript(Name('save', Load(), lineno=96, col_offset=12), Index(Name('key', Load(), lineno=96, col_offset=17)), Store(), lineno=96, col_offset=12)], Call(Attribute(Name('cache', Load(), lineno=96, col_offset=24), 'pop', Load(), lineno=96, col_offset=24), [Name('key', Load(), lineno=96, col_offset=34)], [], None, None, lineno=96, col_offset=24), lineno=96, col_offset=12)], [], lineno=95, col_offset=8)], [], lineno=94, col_offset=4), Expr(Call(Name('orig_checkcache', Load(), lineno=97, col_offset=4), [Name('filename', Load(), lineno=97, col_offset=20)], [], None, None, lineno=97, col_offset=4), lineno=97, col_offset=4), Expr(Call(Attribute(Name('cache', Load(), lineno=98, col_offset=4), 'update', Load(), lineno=98, col_offset=4), [Name('save', Load(), lineno=98, col_offset=17)], [], None, None, lineno=98, col_offset=4), lineno=98, col_offset=4)], [], lineno=81, col_offset=0), Assign([Attribute(Name('linecache', Load(), lineno=101, col_offset=0), 'checkcache', Store(), lineno=101, col_offset=0)], Name('extended_linecache_checkcache', Load(), lineno=101, col_offset=23), lineno=101, col_offset=0), ClassDef('PyShellEditorWindow', [Name('EditorWindow', Load(), lineno=104, col_offset=26)], [Expr(Str('Regular text edit window in IDLE, supports breakpoints', lineno=105, col_offset=4), lineno=105, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=107, col_offset=17)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=108, col_offset=8), 'breakpoints', Store(), lineno=108, col_offset=8)], List([], Load(), lineno=108, col_offset=27), lineno=108, col_offset=8), Expr(Call(Attribute(Name('EditorWindow', Load(), lineno=109, col_offset=8), '__init__', Load(), lineno=109, col_offset=8), [Name('self', Load(), lineno=109, col_offset=30)], [], Name('args', Load(), lineno=109, col_offset=37), None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'text', Load(), lineno=110, col_offset=8), 'bind', Load(), lineno=110, col_offset=8), [Str('<<set-breakpoint-here>>', lineno=110, col_offset=23), Attribute(Name('self', Load(), lineno=110, col_offset=50), 'set_breakpoint_here', Load(), lineno=110, col_offset=50)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'text', Load(), lineno=111, col_offset=8), 'bind', Load(), lineno=111, col_offset=8), [Str('<<clear-breakpoint-here>>', lineno=111, col_offset=23), Attribute(Name('self', Load(), lineno=111, col_offset=52), 'clear_breakpoint_here', Load(), lineno=111, col_offset=52)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'text', Load(), lineno=112, col_offset=8), 'bind', Load(), lineno=112, col_offset=8), [Str('<<open-python-shell>>', lineno=112, col_offset=23), Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=48), 'flist', Load(), lineno=112, col_offset=48), 'open_shell', Load(), lineno=112, col_offset=48)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=114, col_offset=8), 'breakpointPath', Store(), lineno=114, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=114, col_offset=30), 'path', Load(), lineno=114, col_offset=30), 'join', Load(), lineno=114, col_offset=30), [Call(Attribute(Name('idleConf', Load(), lineno=114, col_offset=43), 'GetUserCfgDir', Load(), lineno=114, col_offset=43), [], [], None, None, lineno=114, col_offset=43), Str('breakpoints.lst', lineno=115, col_offset=43)], [], None, None, lineno=114, col_offset=30), lineno=114, col_offset=8), If(Attribute(Attribute(Name('self', Load(), lineno=117, col_offset=11), 'io', Load(), lineno=117, col_offset=11), 'filename', Load(), lineno=117, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=29), 'restore_file_breaks', Load(), lineno=117, col_offset=29), [], [], None, None, lineno=117, col_offset=29), lineno=117, col_offset=29)], [], lineno=117, col_offset=8), FunctionDef('filename_changed_hook', arguments([Name('old_hook', Param(), lineno=118, col_offset=34), Name('self', Param(), lineno=119, col_offset=34)], None, None, [Attribute(Attribute(Name('self', Load(), lineno=118, col_offset=43), 'io', Load(), lineno=118, col_offset=43), 'filename_change_hook', Load(), lineno=118, col_offset=43), Name('self', Load(), lineno=119, col_offset=39)]), [Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=12), 'restore_file_breaks', Load(), lineno=120, col_offset=12), [], [], None, None, lineno=120, col_offset=12), lineno=120, col_offset=12), Expr(Call(Name('old_hook', Load(), lineno=121, col_offset=12), [], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=118, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'io', Load(), lineno=122, col_offset=8), 'set_filename_change_hook', Load(), lineno=122, col_offset=8), [Name('filename_changed_hook', Load(), lineno=122, col_offset=41)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8)], [], lineno=107, col_offset=4), Assign([Name('rmenu_specs', Store(), lineno=124, col_offset=4)], List([Tuple([Str('Set Breakpoint', lineno=124, col_offset=20), Str('<<set-breakpoint-here>>', lineno=124, col_offset=38)], Load(), lineno=124, col_offset=20), Tuple([Str('Clear Breakpoint', lineno=125, col_offset=20), Str('<<clear-breakpoint-here>>', lineno=125, col_offset=40)], Load(), lineno=125, col_offset=20)], Load(), lineno=124, col_offset=18), lineno=124, col_offset=4), FunctionDef('set_breakpoint', arguments([Name('self', Param(), lineno=127, col_offset=23), Name('lineno', Param(), lineno=127, col_offset=29)], None, None, []), [Assign([Name('text', Store(), lineno=128, col_offset=8)], Attribute(Name('self', Load(), lineno=128, col_offset=15), 'text', Load(), lineno=128, col_offset=15), lineno=128, col_offset=8), Assign([Name('filename', Store(), lineno=129, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=129, col_offset=19), 'io', Load(), lineno=129, col_offset=19), 'filename', Load(), lineno=129, col_offset=19), lineno=129, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=130, col_offset=8), 'tag_add', Load(), lineno=130, col_offset=8), [Str('BREAK', lineno=130, col_offset=21), BinOp(Str('%d.0', lineno=130, col_offset=30), Mod(), Name('lineno', Load(), lineno=130, col_offset=39), lineno=130, col_offset=30), BinOp(Str('%d.0', lineno=130, col_offset=47), Mod(), BinOp(Name('lineno', Load(), lineno=130, col_offset=57), Add(), Num(1, lineno=130, col_offset=64), lineno=130, col_offset=57), lineno=130, col_offset=47)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), TryExcept([Assign([Name('i', Store(), lineno=132, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=16), 'breakpoints', Load(), lineno=132, col_offset=16), 'index', Load(), lineno=132, col_offset=16), [Name('lineno', Load(), lineno=132, col_offset=39)], [], None, None, lineno=132, col_offset=16), lineno=132, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=133, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=12), 'breakpoints', Load(), lineno=134, col_offset=12), 'append', Load(), lineno=134, col_offset=12), [Name('lineno', Load(), lineno=134, col_offset=36)], [], None, None, lineno=134, col_offset=12), lineno=134, col_offset=12)], lineno=133, col_offset=8)], [], lineno=131, col_offset=8), TryExcept([Assign([Name('debug', Store(), lineno=136, col_offset=12)], Attribute(Attribute(Attribute(Attribute(Name('self', Load(), lineno=136, col_offset=20), 'flist', Load(), lineno=136, col_offset=20), 'pyshell', Load(), lineno=136, col_offset=20), 'interp', Load(), lineno=136, col_offset=20), 'debugger', Load(), lineno=136, col_offset=20), lineno=136, col_offset=12), Expr(Call(Attribute(Name('debug', Load(), lineno=137, col_offset=12), 'set_breakpoint_here', Load(), lineno=137, col_offset=12), [Name('filename', Load(), lineno=137, col_offset=38), Name('lineno', Load(), lineno=137, col_offset=48)], [], None, None, lineno=137, col_offset=12), lineno=137, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=139, col_offset=12)], lineno=138, col_offset=8)], [], lineno=135, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('set_breakpoint_here', arguments([Name('self', Param(), lineno=141, col_offset=28), Name('event', Param(), lineno=141, col_offset=34)], None, None, [Name('None', Load(), lineno=141, col_offset=40)]), [Assign([Name('text', Store(), lineno=142, col_offset=8)], Attribute(Name('self', Load(), lineno=142, col_offset=15), 'text', Load(), lineno=142, col_offset=15), lineno=142, col_offset=8), Assign([Name('filename', Store(), lineno=143, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=143, col_offset=19), 'io', Load(), lineno=143, col_offset=19), 'filename', Load(), lineno=143, col_offset=19), lineno=143, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=144, col_offset=15), lineno=144, col_offset=11), [Expr(Call(Attribute(Name('text', Load(), lineno=145, col_offset=12), 'bell', Load(), lineno=145, col_offset=12), [], [], None, None, lineno=145, col_offset=12), lineno=145, col_offset=12), Return(None, lineno=146, col_offset=12)], [], lineno=144, col_offset=8), Assign([Name('lineno', Store(), lineno=147, col_offset=8)], Call(Name('int', Load(), lineno=147, col_offset=17), [Call(Name('float', Load(), lineno=147, col_offset=21), [Call(Attribute(Name('text', Load(), lineno=147, col_offset=27), 'index', Load(), lineno=147, col_offset=27), [Str('insert', lineno=147, col_offset=38)], [], None, None, lineno=147, col_offset=27)], [], None, None, lineno=147, col_offset=21)], [], None, None, lineno=147, col_offset=17), lineno=147, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=8), 'set_breakpoint', Load(), lineno=148, col_offset=8), [Name('lineno', Load(), lineno=148, col_offset=28)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('clear_breakpoint_here', arguments([Name('self', Param(), lineno=150, col_offset=30), Name('event', Param(), lineno=150, col_offset=36)], None, None, [Name('None', Load(), lineno=150, col_offset=42)]), [Assign([Name('text', Store(), lineno=151, col_offset=8)], Attribute(Name('self', Load(), lineno=151, col_offset=15), 'text', Load(), lineno=151, col_offset=15), lineno=151, col_offset=8), Assign([Name('filename', Store(), lineno=152, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=152, col_offset=19), 'io', Load(), lineno=152, col_offset=19), 'filename', Load(), lineno=152, col_offset=19), lineno=152, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=153, col_offset=15), lineno=153, col_offset=11), [Expr(Call(Attribute(Name('text', Load(), lineno=154, col_offset=12), 'bell', Load(), lineno=154, col_offset=12), [], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12), Return(None, lineno=155, col_offset=12)], [], lineno=153, col_offset=8), Assign([Name('lineno', Store(), lineno=156, col_offset=8)], Call(Name('int', Load(), lineno=156, col_offset=17), [Call(Name('float', Load(), lineno=156, col_offset=21), [Call(Attribute(Name('text', Load(), lineno=156, col_offset=27), 'index', Load(), lineno=156, col_offset=27), [Str('insert', lineno=156, col_offset=38)], [], None, None, lineno=156, col_offset=27)], [], None, None, lineno=156, col_offset=21)], [], None, None, lineno=156, col_offset=17), lineno=156, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=158, col_offset=12), 'breakpoints', Load(), lineno=158, col_offset=12), 'remove', Load(), lineno=158, col_offset=12), [Name('lineno', Load(), lineno=158, col_offset=36)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=160, col_offset=12)], lineno=159, col_offset=8)], [], lineno=157, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=161, col_offset=8), 'tag_remove', Load(), lineno=161, col_offset=8), [Str('BREAK', lineno=161, col_offset=24), Str('insert linestart', lineno=161, col_offset=33), Str('insert lineend +1char', lineno=162, col_offset=24)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), TryExcept([Assign([Name('debug', Store(), lineno=164, col_offset=12)], Attribute(Attribute(Attribute(Attribute(Name('self', Load(), lineno=164, col_offset=20), 'flist', Load(), lineno=164, col_offset=20), 'pyshell', Load(), lineno=164, col_offset=20), 'interp', Load(), lineno=164, col_offset=20), 'debugger', Load(), lineno=164, col_offset=20), lineno=164, col_offset=12), Expr(Call(Attribute(Name('debug', Load(), lineno=165, col_offset=12), 'clear_breakpoint_here', Load(), lineno=165, col_offset=12), [Name('filename', Load(), lineno=165, col_offset=40), Name('lineno', Load(), lineno=165, col_offset=50)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=167, col_offset=12)], lineno=166, col_offset=8)], [], lineno=163, col_offset=8)], [], lineno=150, col_offset=4), FunctionDef('clear_file_breaks', arguments([Name('self', Param(), lineno=169, col_offset=26)], None, None, []), [If(Attribute(Name('self', Load(), lineno=170, col_offset=11), 'breakpoints', Load(), lineno=170, col_offset=11), [Assign([Name('text', Store(), lineno=171, col_offset=12)], Attribute(Name('self', Load(), lineno=171, col_offset=19), 'text', Load(), lineno=171, col_offset=19), lineno=171, col_offset=12), Assign([Name('filename', Store(), lineno=172, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=172, col_offset=23), 'io', Load(), lineno=172, col_offset=23), 'filename', Load(), lineno=172, col_offset=23), lineno=172, col_offset=12), If(UnaryOp(Not(), Name('filename', Load(), lineno=173, col_offset=19), lineno=173, col_offset=15), [Expr(Call(Attribute(Name('text', Load(), lineno=174, col_offset=16), 'bell', Load(), lineno=174, col_offset=16), [], [], None, None, lineno=174, col_offset=16), lineno=174, col_offset=16), Return(None, lineno=175, col_offset=16)], [], lineno=173, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=176, col_offset=12), 'breakpoints', Store(), lineno=176, col_offset=12)], List([], Load(), lineno=176, col_offset=31), lineno=176, col_offset=12), Expr(Call(Attribute(Name('text', Load(), lineno=177, col_offset=12), 'tag_remove', Load(), lineno=177, col_offset=12), [Str('BREAK', lineno=177, col_offset=28), Str('1.0', lineno=177, col_offset=37), Name('END', Load(), lineno=177, col_offset=44)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12), TryExcept([Assign([Name('debug', Store(), lineno=179, col_offset=16)], Attribute(Attribute(Attribute(Attribute(Name('self', Load(), lineno=179, col_offset=24), 'flist', Load(), lineno=179, col_offset=24), 'pyshell', Load(), lineno=179, col_offset=24), 'interp', Load(), lineno=179, col_offset=24), 'debugger', Load(), lineno=179, col_offset=24), lineno=179, col_offset=16), Expr(Call(Attribute(Name('debug', Load(), lineno=180, col_offset=16), 'clear_file_breaks', Load(), lineno=180, col_offset=16), [Name('filename', Load(), lineno=180, col_offset=40)], [], None, None, lineno=180, col_offset=16), lineno=180, col_offset=16)], [ExceptHandler(None, None, [Pass( lineno=182, col_offset=16)], lineno=181, col_offset=12)], [], lineno=178, col_offset=12)], [], lineno=170, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('store_file_breaks', arguments([Name('self', Param(), lineno=184, col_offset=26)], None, None, []), [Expr(Str('Save breakpoints when file is saved', lineno=185, col_offset=8), lineno=185, col_offset=8), Assign([Name('breaks', Store(), lineno=207, col_offset=8)], Attribute(Name('self', Load(), lineno=207, col_offset=17), 'breakpoints', Load(), lineno=207, col_offset=17), lineno=207, col_offset=8), Assign([Name('filename', Store(), lineno=208, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=19), 'io', Load(), lineno=208, col_offset=19), 'filename', Load(), lineno=208, col_offset=19), lineno=208, col_offset=8), TryExcept([Assign([Name('lines', Store(), lineno=210, col_offset=12)], Call(Attribute(Call(Name('open', Load(), lineno=210, col_offset=20), [Attribute(Name('self', Load(), lineno=210, col_offset=25), 'breakpointPath', Load(), lineno=210, col_offset=25), Str('r', lineno=210, col_offset=45)], [], None, None, lineno=210, col_offset=20), 'readlines', Load(), lineno=210, col_offset=20), [], [], None, None, lineno=210, col_offset=20), lineno=210, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=211, col_offset=15), None, [Assign([Name('lines', Store(), lineno=212, col_offset=12)], List([], Load(), lineno=212, col_offset=20), lineno=212, col_offset=12)], lineno=211, col_offset=8)], [], lineno=209, col_offset=8), Assign([Name('new_file', Store(), lineno=213, col_offset=8)], Call(Name('open', Load(), lineno=213, col_offset=19), [Attribute(Name('self', Load(), lineno=213, col_offset=24), 'breakpointPath', Load(), lineno=213, col_offset=24), Str('w', lineno=213, col_offset=44)], [], None, None, lineno=213, col_offset=19), lineno=213, col_offset=8), For(Name('line', Store(), lineno=214, col_offset=12), Name('lines', Load(), lineno=214, col_offset=20), [If(UnaryOp(Not(), Call(Attribute(Name('line', Load(), lineno=215, col_offset=19), 'startswith', Load(), lineno=215, col_offset=19), [BinOp(Name('filename', Load(), lineno=215, col_offset=35), Add(), Str('=', lineno=215, col_offset=46), lineno=215, col_offset=35)], [], None, None, lineno=215, col_offset=19), lineno=215, col_offset=15), [Expr(Call(Attribute(Name('new_file', Load(), lineno=216, col_offset=16), 'write', Load(), lineno=216, col_offset=16), [Name('line', Load(), lineno=216, col_offset=31)], [], None, None, lineno=216, col_offset=16), lineno=216, col_offset=16)], [], lineno=215, col_offset=12)], [], lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'update_breakpoints', Load(), lineno=217, col_offset=8), [], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Assign([Name('breaks', Store(), lineno=218, col_offset=8)], Attribute(Name('self', Load(), lineno=218, col_offset=17), 'breakpoints', Load(), lineno=218, col_offset=17), lineno=218, col_offset=8), If(Name('breaks', Load(), lineno=219, col_offset=11), [Expr(Call(Attribute(Name('new_file', Load(), lineno=220, col_offset=12), 'write', Load(), lineno=220, col_offset=12), [BinOp(BinOp(BinOp(Name('filename', Load(), lineno=220, col_offset=27), Add(), Str('=', lineno=220, col_offset=38), lineno=220, col_offset=27), Add(), Call(Name('str', Load(), lineno=220, col_offset=44), [Name('breaks', Load(), lineno=220, col_offset=48)], [], None, None, lineno=220, col_offset=44), lineno=220, col_offset=42), Add(), Str('\n', lineno=220, col_offset=58), lineno=220, col_offset=56)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], [], lineno=219, col_offset=8), Expr(Call(Attribute(Name('new_file', Load(), lineno=221, col_offset=8), 'close', Load(), lineno=221, col_offset=8), [], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8)], [], lineno=184, col_offset=4), FunctionDef('restore_file_breaks', arguments([Name('self', Param(), lineno=223, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'text', Load(), lineno=224, col_offset=8), 'update', Load(), lineno=224, col_offset=8), [], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Assign([Name('filename', Store(), lineno=225, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=225, col_offset=19), 'io', Load(), lineno=225, col_offset=19), 'filename', Load(), lineno=225, col_offset=19), lineno=225, col_offset=8), If(Compare(Name('filename', Load(), lineno=226, col_offset=11), [Is()], [Name('None', Load(), lineno=226, col_offset=23)], lineno=226, col_offset=11), [Return(None, lineno=227, col_offset=12)], [], lineno=226, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=228, col_offset=11), 'path', Load(), lineno=228, col_offset=11), 'isfile', Load(), lineno=228, col_offset=11), [Attribute(Name('self', Load(), lineno=228, col_offset=26), 'breakpointPath', Load(), lineno=228, col_offset=26)], [], None, None, lineno=228, col_offset=11), [Assign([Name('lines', Store(), lineno=229, col_offset=12)], Call(Attribute(Call(Name('open', Load(), lineno=229, col_offset=20), [Attribute(Name('self', Load(), lineno=229, col_offset=25), 'breakpointPath', Load(), lineno=229, col_offset=25), Str('r', lineno=229, col_offset=45)], [], None, None, lineno=229, col_offset=20), 'readlines', Load(), lineno=229, col_offset=20), [], [], None, None, lineno=229, col_offset=20), lineno=229, col_offset=12), For(Name('line', Store(), lineno=230, col_offset=16), Name('lines', Load(), lineno=230, col_offset=24), [If(Call(Attribute(Name('line', Load(), lineno=231, col_offset=19), 'startswith', Load(), lineno=231, col_offset=19), [BinOp(Name('filename', Load(), lineno=231, col_offset=35), Add(), Str('=', lineno=231, col_offset=46), lineno=231, col_offset=35)], [], None, None, lineno=231, col_offset=19), [Assign([Name('breakpoint_linenumbers', Store(), lineno=232, col_offset=20)], Call(Name('eval', Load(), lineno=232, col_offset=45), [Subscript(Name('line', Load(), lineno=232, col_offset=50), Slice(BinOp(Call(Name('len', Load(), lineno=232, col_offset=55), [Name('filename', Load(), lineno=232, col_offset=59)], [], None, None, lineno=232, col_offset=55), Add(), Num(1, lineno=232, col_offset=69), lineno=232, col_offset=55), None, None), Load(), lineno=232, col_offset=50)], [], None, None, lineno=232, col_offset=45), lineno=232, col_offset=20), For(Name('breakpoint_linenumber', Store(), lineno=233, col_offset=24), Name('breakpoint_linenumbers', Load(), lineno=233, col_offset=49), [Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=24), 'set_breakpoint', Load(), lineno=234, col_offset=24), [Name('breakpoint_linenumber', Load(), lineno=234, col_offset=44)], [], None, None, lineno=234, col_offset=24), lineno=234, col_offset=24)], [], lineno=233, col_offset=20)], [], lineno=231, col_offset=16)], [], lineno=230, col_offset=12)], [], lineno=228, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('update_breakpoints', arguments([Name('self', Param(), lineno=236, col_offset=27)], None, None, []), [Expr(Str('Retrieves all the breakpoints in the current window', lineno=237, col_offset=8), lineno=237, col_offset=8), Assign([Name('text', Store(), lineno=238, col_offset=8)], Attribute(Name('self', Load(), lineno=238, col_offset=15), 'text', Load(), lineno=238, col_offset=15), lineno=238, col_offset=8), Assign([Name('ranges', Store(), lineno=239, col_offset=8)], Call(Attribute(Name('text', Load(), lineno=239, col_offset=17), 'tag_ranges', Load(), lineno=239, col_offset=17), [Str('BREAK', lineno=239, col_offset=33)], [], None, None, lineno=239, col_offset=17), lineno=239, col_offset=8), Assign([Name('linenumber_list', Store(), lineno=240, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=240, col_offset=26), 'ranges_to_linenumbers', Load(), lineno=240, col_offset=26), [Name('ranges', Load(), lineno=240, col_offset=53)], [], None, None, lineno=240, col_offset=26), lineno=240, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=241, col_offset=8), 'breakpoints', Store(), lineno=241, col_offset=8)], Name('linenumber_list', Load(), lineno=241, col_offset=27), lineno=241, col_offset=8)], [], lineno=236, col_offset=4), FunctionDef('ranges_to_linenumbers', arguments([Name('self', Param(), lineno=243, col_offset=30), Name('ranges', Param(), lineno=243, col_offset=36)], None, None, []), [Assign([Name('lines', Store(), lineno=244, col_offset=8)], List([], Load(), lineno=244, col_offset=16), lineno=244, col_offset=8), For(Name('index', Store(), lineno=245, col_offset=12), Call(Name('range', Load(), lineno=245, col_offset=21), [Num(0, lineno=245, col_offset=27), Call(Name('len', Load(), lineno=245, col_offset=30), [Name('ranges', Load(), lineno=245, col_offset=34)], [], None, None, lineno=245, col_offset=30), Num(2, lineno=245, col_offset=43)], [], None, None, lineno=245, col_offset=21), [Assign([Name('lineno', Store(), lineno=246, col_offset=12)], Call(Name('int', Load(), lineno=246, col_offset=21), [Call(Name('float', Load(), lineno=246, col_offset=25), [Subscript(Name('ranges', Load(), lineno=246, col_offset=31), Index(Name('index', Load(), lineno=246, col_offset=38)), Load(), lineno=246, col_offset=31)], [], None, None, lineno=246, col_offset=25)], [], None, None, lineno=246, col_offset=21), lineno=246, col_offset=12), Assign([Name('end', Store(), lineno=247, col_offset=12)], Call(Name('int', Load(), lineno=247, col_offset=18), [Call(Name('float', Load(), lineno=247, col_offset=22), [Subscript(Name('ranges', Load(), lineno=247, col_offset=28), Index(BinOp(Name('index', Load(), lineno=247, col_offset=35), Add(), Num(1, lineno=247, col_offset=41), lineno=247, col_offset=35)), Load(), lineno=247, col_offset=28)], [], None, None, lineno=247, col_offset=22)], [], None, None, lineno=247, col_offset=18), lineno=247, col_offset=12), While(Compare(Name('lineno', Load(), lineno=248, col_offset=18), [Lt()], [Name('end', Load(), lineno=248, col_offset=27)], lineno=248, col_offset=18), [Expr(Call(Attribute(Name('lines', Load(), lineno=249, col_offset=16), 'append', Load(), lineno=249, col_offset=16), [Name('lineno', Load(), lineno=249, col_offset=29)], [], None, None, lineno=249, col_offset=16), lineno=249, col_offset=16), AugAssign(Name('lineno', Store(), lineno=250, col_offset=16), Add(), Num(1, lineno=250, col_offset=26), lineno=250, col_offset=16)], [], lineno=248, col_offset=12)], [], lineno=245, col_offset=8), Return(Name('lines', Load(), lineno=251, col_offset=15), lineno=251, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('_close', arguments([Name('self', Param(), lineno=260, col_offset=15)], None, None, []), [Expr(Str('Extend base method - clear breaks when module is closed', lineno=261, col_offset=8), lineno=261, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=262, col_offset=8), 'clear_file_breaks', Load(), lineno=262, col_offset=8), [], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Expr(Call(Attribute(Name('EditorWindow', Load(), lineno=263, col_offset=8), '_close', Load(), lineno=263, col_offset=8), [Name('self', Load(), lineno=263, col_offset=28)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8)], [], lineno=260, col_offset=4)], [], lineno=104, col_offset=0), ClassDef('PyShellFileList', [Name('FileList', Load(), lineno=266, col_offset=22)], [Expr(Str('Extend base class: IDLE supports a shell and breakpoints', lineno=267, col_offset=4), lineno=267, col_offset=4), Assign([Name('EditorWindow', Store(), lineno=271, col_offset=4)], Name('PyShellEditorWindow', Load(), lineno=271, col_offset=19), lineno=271, col_offset=4), Assign([Name('pyshell', Store(), lineno=273, col_offset=4)], Name('None', Load(), lineno=273, col_offset=14), lineno=273, col_offset=4), FunctionDef('open_shell', arguments([Name('self', Param(), lineno=275, col_offset=19), Name('event', Param(), lineno=275, col_offset=25)], None, None, [Name('None', Load(), lineno=275, col_offset=31)]), [If(Attribute(Name('self', Load(), lineno=276, col_offset=11), 'pyshell', Load(), lineno=276, col_offset=11), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=277, col_offset=12), 'pyshell', Load(), lineno=277, col_offset=12), 'top', Load(), lineno=277, col_offset=12), 'wakeup', Load(), lineno=277, col_offset=12), [], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=279, col_offset=12), 'pyshell', Store(), lineno=279, col_offset=12)], Call(Name('PyShell', Load(), lineno=279, col_offset=27), [Name('self', Load(), lineno=279, col_offset=35)], [], None, None, lineno=279, col_offset=27), lineno=279, col_offset=12), If(Attribute(Name('self', Load(), lineno=280, col_offset=15), 'pyshell', Load(), lineno=280, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=281, col_offset=23), 'pyshell', Load(), lineno=281, col_offset=23), 'begin', Load(), lineno=281, col_offset=23), [], [], None, None, lineno=281, col_offset=23), lineno=281, col_offset=19), [Return(Name('None', Load(), lineno=282, col_offset=27), lineno=282, col_offset=20)], [], lineno=281, col_offset=16)], [], lineno=280, col_offset=12)], lineno=276, col_offset=8), Return(Attribute(Name('self', Load(), lineno=283, col_offset=15), 'pyshell', Load(), lineno=283, col_offset=15), lineno=283, col_offset=8)], [], lineno=275, col_offset=4)], [], lineno=266, col_offset=0), ClassDef('ModifiedColorDelegator', [Name('ColorDelegator', Load(), lineno=286, col_offset=29)], [Expr(Str('Extend base class: colorizer for the shell window itself', lineno=287, col_offset=4), lineno=287, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=289, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('ColorDelegator', Load(), lineno=290, col_offset=8), '__init__', Load(), lineno=290, col_offset=8), [Name('self', Load(), lineno=290, col_offset=32)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=291, col_offset=8), 'LoadTagDefs', Load(), lineno=291, col_offset=8), [], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8)], [], lineno=289, col_offset=4), FunctionDef('recolorize_main', arguments([Name('self', Param(), lineno=293, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=294, col_offset=8), 'tag_remove', Load(), lineno=294, col_offset=8), [Str('TODO', lineno=294, col_offset=24), Str('1.0', lineno=294, col_offset=32), Str('iomark', lineno=294, col_offset=39)], [], None, None, lineno=294, col_offset=8), lineno=294, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=295, col_offset=8), 'tag_add', Load(), lineno=295, col_offset=8), [Str('SYNC', lineno=295, col_offset=21), Str('1.0', lineno=295, col_offset=29), Str('iomark', lineno=295, col_offset=36)], [], None, None, lineno=295, col_offset=8), lineno=295, col_offset=8), Expr(Call(Attribute(Name('ColorDelegator', Load(), lineno=296, col_offset=8), 'recolorize_main', Load(), lineno=296, col_offset=8), [Name('self', Load(), lineno=296, col_offset=39)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=293, col_offset=4), FunctionDef('LoadTagDefs', arguments([Name('self', Param(), lineno=298, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('ColorDelegator', Load(), lineno=299, col_offset=8), 'LoadTagDefs', Load(), lineno=299, col_offset=8), [Name('self', Load(), lineno=299, col_offset=35)], [], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8), Assign([Name('theme', Store(), lineno=300, col_offset=8)], Call(Attribute(Name('idleConf', Load(), lineno=300, col_offset=16), 'GetOption', Load(), lineno=300, col_offset=16), [Str('main', lineno=300, col_offset=35), Str('Theme', lineno=300, col_offset=42), Str('name', lineno=300, col_offset=50)], [], None, None, lineno=300, col_offset=16), lineno=300, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'tagdefs', Load(), lineno=301, col_offset=8), 'update', Load(), lineno=301, col_offset=8), [Dict([Str('stdin', lineno=302, col_offset=12), Str('stdout', lineno=303, col_offset=12), Str('stderr', lineno=304, col_offset=12), Str('console', lineno=305, col_offset=12)], [Dict([Str('background', lineno=302, col_offset=22), Str('foreground', lineno=302, col_offset=40)], [Name('None', Load(), lineno=302, col_offset=35), Name('None', Load(), lineno=302, col_offset=53)], lineno=302, col_offset=21), Call(Attribute(Name('idleConf', Load(), lineno=303, col_offset=22), 'GetHighlight', Load(), lineno=303, col_offset=22), [Name('theme', Load(), lineno=303, col_offset=44), Str('stdout', lineno=303, col_offset=51)], [], None, None, lineno=303, col_offset=22), Call(Attribute(Name('idleConf', Load(), lineno=304, col_offset=22), 'GetHighlight', Load(), lineno=304, col_offset=22), [Name('theme', Load(), lineno=304, col_offset=44), Str('stderr', lineno=304, col_offset=51)], [], None, None, lineno=304, col_offset=22), Call(Attribute(Name('idleConf', Load(), lineno=305, col_offset=23), 'GetHighlight', Load(), lineno=305, col_offset=23), [Name('theme', Load(), lineno=305, col_offset=45), Str('console', lineno=305, col_offset=52)], [], None, None, lineno=305, col_offset=23)], lineno=301, col_offset=28)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8)], [], lineno=298, col_offset=4)], [], lineno=286, col_offset=0), ClassDef('ModifiedUndoDelegator', [Name('UndoDelegator', Load(), lineno=308, col_offset=28)], [Expr(Str('Extend base class: forbid insert/delete before the I/O mark', lineno=309, col_offset=4), lineno=309, col_offset=4), FunctionDef('insert', arguments([Name('self', Param(), lineno=311, col_offset=15), Name('index', Param(), lineno=311, col_offset=21), Name('chars', Param(), lineno=311, col_offset=28), Name('tags', Param(), lineno=311, col_offset=35)], None, None, [Name('None', Load(), lineno=311, col_offset=40)]), [TryExcept([If(Call(Attribute(Attribute(Name('self', Load(), lineno=313, col_offset=15), 'delegate', Load(), lineno=313, col_offset=15), 'compare', Load(), lineno=313, col_offset=15), [Name('index', Load(), lineno=313, col_offset=37), Str('<', lineno=313, col_offset=44), Str('iomark', lineno=313, col_offset=49)], [], None, None, lineno=313, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=314, col_offset=16), 'delegate', Load(), lineno=314, col_offset=16), 'bell', Load(), lineno=314, col_offset=16), [], [], None, None, lineno=314, col_offset=16), lineno=314, col_offset=16), Return(None, lineno=315, col_offset=16)], [], lineno=313, col_offset=12)], [ExceptHandler(Name('TclError', Load(), lineno=316, col_offset=15), None, [Pass( lineno=317, col_offset=12)], lineno=316, col_offset=8)], [], lineno=312, col_offset=8), Expr(Call(Attribute(Name('UndoDelegator', Load(), lineno=318, col_offset=8), 'insert', Load(), lineno=318, col_offset=8), [Name('self', Load(), lineno=318, col_offset=29), Name('index', Load(), lineno=318, col_offset=35), Name('chars', Load(), lineno=318, col_offset=42), Name('tags', Load(), lineno=318, col_offset=49)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8)], [], lineno=311, col_offset=4), FunctionDef('delete', arguments([Name('self', Param(), lineno=320, col_offset=15), Name('index1', Param(), lineno=320, col_offset=21), Name('index2', Param(), lineno=320, col_offset=29)], None, None, [Name('None', Load(), lineno=320, col_offset=36)]), [TryExcept([If(Call(Attribute(Attribute(Name('self', Load(), lineno=322, col_offset=15), 'delegate', Load(), lineno=322, col_offset=15), 'compare', Load(), lineno=322, col_offset=15), [Name('index1', Load(), lineno=322, col_offset=37), Str('<', lineno=322, col_offset=45), Str('iomark', lineno=322, col_offset=50)], [], None, None, lineno=322, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=323, col_offset=16), 'delegate', Load(), lineno=323, col_offset=16), 'bell', Load(), lineno=323, col_offset=16), [], [], None, None, lineno=323, col_offset=16), lineno=323, col_offset=16), Return(None, lineno=324, col_offset=16)], [], lineno=322, col_offset=12)], [ExceptHandler(Name('TclError', Load(), lineno=325, col_offset=15), None, [Pass( lineno=326, col_offset=12)], lineno=325, col_offset=8)], [], lineno=321, col_offset=8), Expr(Call(Attribute(Name('UndoDelegator', Load(), lineno=327, col_offset=8), 'delete', Load(), lineno=327, col_offset=8), [Name('self', Load(), lineno=327, col_offset=29), Name('index1', Load(), lineno=327, col_offset=35), Name('index2', Load(), lineno=327, col_offset=43)], [], None, None, lineno=327, col_offset=8), lineno=327, col_offset=8)], [], lineno=320, col_offset=4)], [], lineno=308, col_offset=0), ClassDef('MyRPCClient', [Attribute(Name('rpc', Load(), lineno=330, col_offset=18), 'RPCClient', Load(), lineno=330, col_offset=18)], [FunctionDef('handle_EOF', arguments([Name('self', Param(), lineno=332, col_offset=19)], None, None, []), [Expr(Str('Override the base class - just re-raise EOFError', lineno=333, col_offset=8), lineno=333, col_offset=8), Raise(Name('EOFError', Load(), lineno=334, col_offset=14), None, None, lineno=334, col_offset=8)], [], lineno=332, col_offset=4)], [], lineno=330, col_offset=0), ClassDef('ModifiedInterpreter', [Name('InteractiveInterpreter', Load(), lineno=337, col_offset=26)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=339, col_offset=17), Name('tkconsole', Param(), lineno=339, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=340, col_offset=8), 'tkconsole', Store(), lineno=340, col_offset=8)], Name('tkconsole', Load(), lineno=340, col_offset=25), lineno=340, col_offset=8), Assign([Name('locals', Store(), lineno=341, col_offset=8)], Attribute(Subscript(Attribute(Name('sys', Load(), lineno=341, col_offset=17), 'modules', Load(), lineno=341, col_offset=17), Index(Str('__main__', lineno=341, col_offset=29)), Load(), lineno=341, col_offset=17), '__dict__', Load(), lineno=341, col_offset=17), lineno=341, col_offset=8), Expr(Call(Attribute(Name('InteractiveInterpreter', Load(), lineno=342, col_offset=8), '__init__', Load(), lineno=342, col_offset=8), [Name('self', Load(), lineno=342, col_offset=40)], [keyword('locals', Name('locals', Load(), lineno=342, col_offset=53))], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=343, col_offset=8), 'save_warnings_filters', Store(), lineno=343, col_offset=8)], Name('None', Load(), lineno=343, col_offset=37), lineno=343, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=344, col_offset=8), 'restarting', Store(), lineno=344, col_offset=8)], Name('False', Load(), lineno=344, col_offset=26), lineno=344, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=345, col_offset=8), 'subprocess_arglist', Store(), lineno=345, col_offset=8)], Name('None', Load(), lineno=345, col_offset=34), lineno=345, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=346, col_offset=8), 'port', Store(), lineno=346, col_offset=8)], Name('PORT', Load(), lineno=346, col_offset=20), lineno=346, col_offset=8)], [], lineno=339, col_offset=4), Assign([Name('rpcclt', Store(), lineno=348, col_offset=4)], Name('None', Load(), lineno=348, col_offset=13), lineno=348, col_offset=4), Assign([Name('rpcpid', Store(), lineno=349, col_offset=4)], Name('None', Load(), lineno=349, col_offset=13), lineno=349, col_offset=4), FunctionDef('spawn_subprocess', arguments([Name('self', Param(), lineno=351, col_offset=25)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=352, col_offset=11), 'subprocess_arglist', Load(), lineno=352, col_offset=11), [Is()], [Name('None', Load(), lineno=352, col_offset=38)], lineno=352, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=353, col_offset=12), 'subprocess_arglist', Store(), lineno=353, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=353, col_offset=38), 'build_subprocess_arglist', Load(), lineno=353, col_offset=38), [], [], None, None, lineno=353, col_offset=38), lineno=353, col_offset=12)], [], lineno=352, col_offset=8), Assign([Name('args', Store(), lineno=354, col_offset=8)], Attribute(Name('self', Load(), lineno=354, col_offset=15), 'subprocess_arglist', Load(), lineno=354, col_offset=15), lineno=354, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=355, col_offset=8), 'rpcpid', Store(), lineno=355, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=355, col_offset=22), 'spawnv', Load(), lineno=355, col_offset=22), [Attribute(Name('os', Load(), lineno=355, col_offset=32), 'P_NOWAIT', Load(), lineno=355, col_offset=32), Attribute(Name('sys', Load(), lineno=355, col_offset=45), 'executable', Load(), lineno=355, col_offset=45), Name('args', Load(), lineno=355, col_offset=61)], [], None, None, lineno=355, col_offset=22), lineno=355, col_offset=8)], [], lineno=351, col_offset=4), FunctionDef('build_subprocess_arglist', arguments([Name('self', Param(), lineno=357, col_offset=33)], None, None, []), [Assert(Compare(Attribute(Name('self', Load(), lineno=358, col_offset=16), 'port', Load(), lineno=358, col_offset=16), [NotEq()], [Num(0, lineno=358, col_offset=27)], lineno=358, col_offset=16), Str('Socket should have been assigned a port number.', lineno=359, col_offset=12), lineno=358, col_offset=8), Assign([Name('w', Store(), lineno=360, col_offset=8)], ListComp(BinOp(Str('-W', lineno=360, col_offset=13), Add(), Name('s', Load(), lineno=360, col_offset=20), lineno=360, col_offset=13), [comprehension(Name('s', Store(), lineno=360, col_offset=26), Attribute(Name('sys', Load(), lineno=360, col_offset=31), 'warnoptions', Load(), lineno=360, col_offset=31), [])], lineno=360, col_offset=13), lineno=360, col_offset=8), If(Compare(BinOp(Num(1, lineno=361, col_offset=11), Div(), Num(2, lineno=361, col_offset=13), lineno=361, col_offset=11), [Gt()], [Num(0, lineno=361, col_offset=17)], lineno=361, col_offset=11), [Expr(Call(Attribute(Name('w', Load(), lineno=362, col_offset=12), 'append', Load(), lineno=362, col_offset=12), [Str('-Qnew', lineno=362, col_offset=21)], [], None, None, lineno=362, col_offset=12), lineno=362, col_offset=12)], [], lineno=361, col_offset=8), Assign([Name('del_exitf', Store(), lineno=366, col_offset=8)], Call(Attribute(Name('idleConf', Load(), lineno=366, col_offset=20), 'GetOption', Load(), lineno=366, col_offset=20), [Str('main', lineno=366, col_offset=39), Str('General', lineno=366, col_offset=47), Str('delete-exitfunc', lineno=366, col_offset=58)], [keyword('default', Name('False', Load(), lineno=367, col_offset=47)), keyword('type', Str('bool', lineno=367, col_offset=59))], None, None, lineno=366, col_offset=20), lineno=366, col_offset=8), If(Compare(Name('__name__', Load(), lineno=368, col_offset=11), [Eq()], [Str('idlelib.PyShell', lineno=368, col_offset=23)], lineno=368, col_offset=11), [Assign([Name('command', Store(), lineno=369, col_offset=12)], BinOp(Str("__import__('idlelib.run').run.main(%r)", lineno=369, col_offset=22), Mod(), Tuple([Name('del_exitf', Load(), lineno=369, col_offset=66)], Load(), lineno=369, col_offset=66), lineno=369, col_offset=22), lineno=369, col_offset=12)], [Assign([Name('command', Store(), lineno=371, col_offset=12)], BinOp(Str("__import__('run').main(%r)", lineno=371, col_offset=22), Mod(), Tuple([Name('del_exitf', Load(), lineno=371, col_offset=54)], Load(), lineno=371, col_offset=54), lineno=371, col_offset=22), lineno=371, col_offset=12)], lineno=368, col_offset=8), If(BoolOp(And(), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=372, col_offset=11), 'platform', Load(), lineno=372, col_offset=11), Slice(None, Num(3, lineno=372, col_offset=25), None), Load(), lineno=372, col_offset=11), [Eq()], [Str('win', lineno=372, col_offset=31)], lineno=372, col_offset=11), Compare(Str(' ', lineno=372, col_offset=41), [In()], [Attribute(Name('sys', Load(), lineno=372, col_offset=48), 'executable', Load(), lineno=372, col_offset=48)], lineno=372, col_offset=41)], lineno=372, col_offset=11), [Assign([Name('decorated_exec', Store(), lineno=374, col_offset=12)], BinOp(Str('"%s"', lineno=374, col_offset=29), Mod(), Attribute(Name('sys', Load(), lineno=374, col_offset=38), 'executable', Load(), lineno=374, col_offset=38), lineno=374, col_offset=29), lineno=374, col_offset=12)], [Assign([Name('decorated_exec', Store(), lineno=376, col_offset=12)], Attribute(Name('sys', Load(), lineno=376, col_offset=29), 'executable', Load(), lineno=376, col_offset=29), lineno=376, col_offset=12)], lineno=372, col_offset=8), Return(BinOp(BinOp(List([Name('decorated_exec', Load(), lineno=377, col_offset=16)], Load(), lineno=377, col_offset=15), Add(), Name('w', Load(), lineno=377, col_offset=34), lineno=377, col_offset=15), Add(), List([Str('-c', lineno=377, col_offset=39), Name('command', Load(), lineno=377, col_offset=45), Call(Name('str', Load(), lineno=377, col_offset=54), [Attribute(Name('self', Load(), lineno=377, col_offset=58), 'port', Load(), lineno=377, col_offset=58)], [], None, None, lineno=377, col_offset=54)], Load(), lineno=377, col_offset=38), lineno=377, col_offset=36), lineno=377, col_offset=8)], [], lineno=357, col_offset=4), FunctionDef('start_subprocess', arguments([Name('self', Param(), lineno=379, col_offset=25)], None, None, []), [Assign([Name('addr', Store(), lineno=380, col_offset=8)], Tuple([Name('HOST', Load(), lineno=380, col_offset=16), Attribute(Name('self', Load(), lineno=380, col_offset=22), 'port', Load(), lineno=380, col_offset=22)], Load(), lineno=380, col_offset=16), lineno=380, col_offset=8), For(Name('i', Store(), lineno=382, col_offset=12), Call(Name('range', Load(), lineno=382, col_offset=17), [Num(3, lineno=382, col_offset=23)], [], None, None, lineno=382, col_offset=17), [Expr(Call(Attribute(Name('time', Load(), lineno=383, col_offset=12), 'sleep', Load(), lineno=383, col_offset=12), [Name('i', Load(), lineno=383, col_offset=23)], [], None, None, lineno=383, col_offset=12), lineno=383, col_offset=12), TryExcept([Assign([Attribute(Name('self', Load(), lineno=385, col_offset=16), 'rpcclt', Store(), lineno=385, col_offset=16)], Call(Name('MyRPCClient', Load(), lineno=385, col_offset=30), [Name('addr', Load(), lineno=385, col_offset=42)], [], None, None, lineno=385, col_offset=30), lineno=385, col_offset=16), Break( lineno=386, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=387, col_offset=19), 'error', Load(), lineno=387, col_offset=19), Name('err', Store(), lineno=387, col_offset=33), [Pass( lineno=388, col_offset=16)], lineno=387, col_offset=12)], [], lineno=384, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=12), 'display_port_binding_error', Load(), lineno=390, col_offset=12), [], [], None, None, lineno=390, col_offset=12), lineno=390, col_offset=12), Return(Name('None', Load(), lineno=391, col_offset=19), lineno=391, col_offset=12)], lineno=382, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=393, col_offset=8), 'port', Store(), lineno=393, col_offset=8)], Subscript(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=393, col_offset=20), 'rpcclt', Load(), lineno=393, col_offset=20), 'listening_sock', Load(), lineno=393, col_offset=20), 'getsockname', Load(), lineno=393, col_offset=20), [], [], None, None, lineno=393, col_offset=20), Index(Num(1, lineno=393, col_offset=61)), Load(), lineno=393, col_offset=20), lineno=393, col_offset=8), If(Compare(Name('PORT', Load(), lineno=395, col_offset=11), [NotEq()], [Num(0, lineno=395, col_offset=19)], lineno=395, col_offset=11), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=400, col_offset=12), 'rpcclt', Load(), lineno=400, col_offset=12), 'listening_sock', Load(), lineno=400, col_offset=12), 'setsockopt', Load(), lineno=400, col_offset=12), [Attribute(Name('socket', Load(), lineno=400, col_offset=50), 'SOL_SOCKET', Load(), lineno=400, col_offset=50), Attribute(Name('socket', Load(), lineno=401, col_offset=43), 'SO_REUSEADDR', Load(), lineno=401, col_offset=43), Num(1, lineno=401, col_offset=64)], [], None, None, lineno=400, col_offset=12), lineno=400, col_offset=12)], [], lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'spawn_subprocess', Load(), lineno=402, col_offset=8), [], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'rpcclt', Load(), lineno=405, col_offset=8), 'listening_sock', Load(), lineno=405, col_offset=8), 'settimeout', Load(), lineno=405, col_offset=8), [Num(10, lineno=405, col_offset=46)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=407, col_offset=12), 'rpcclt', Load(), lineno=407, col_offset=12), 'accept', Load(), lineno=407, col_offset=12), [], [], None, None, lineno=407, col_offset=12), lineno=407, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=408, col_offset=15), 'timeout', Load(), lineno=408, col_offset=15), Name('err', Store(), lineno=408, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=12), 'display_no_subprocess_error', Load(), lineno=409, col_offset=12), [], [], None, None, lineno=409, col_offset=12), lineno=409, col_offset=12), Return(Name('None', Load(), lineno=410, col_offset=19), lineno=410, col_offset=12)], lineno=408, col_offset=8)], [], lineno=406, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'rpcclt', Load(), lineno=411, col_offset=8), 'register', Load(), lineno=411, col_offset=8), [Str('stdin', lineno=411, col_offset=29), Attribute(Name('self', Load(), lineno=411, col_offset=38), 'tkconsole', Load(), lineno=411, col_offset=38)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'rpcclt', Load(), lineno=412, col_offset=8), 'register', Load(), lineno=412, col_offset=8), [Str('stdout', lineno=412, col_offset=29), Attribute(Attribute(Name('self', Load(), lineno=412, col_offset=39), 'tkconsole', Load(), lineno=412, col_offset=39), 'stdout', Load(), lineno=412, col_offset=39)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'rpcclt', Load(), lineno=413, col_offset=8), 'register', Load(), lineno=413, col_offset=8), [Str('stderr', lineno=413, col_offset=29), Attribute(Attribute(Name('self', Load(), lineno=413, col_offset=39), 'tkconsole', Load(), lineno=413, col_offset=39), 'stderr', Load(), lineno=413, col_offset=39)], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'rpcclt', Load(), lineno=414, col_offset=8), 'register', Load(), lineno=414, col_offset=8), [Str('flist', lineno=414, col_offset=29), Attribute(Attribute(Name('self', Load(), lineno=414, col_offset=38), 'tkconsole', Load(), lineno=414, col_offset=38), 'flist', Load(), lineno=414, col_offset=38)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'rpcclt', Load(), lineno=415, col_offset=8), 'register', Load(), lineno=415, col_offset=8), [Str('linecache', lineno=415, col_offset=29), Name('linecache', Load(), lineno=415, col_offset=42)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'rpcclt', Load(), lineno=416, col_offset=8), 'register', Load(), lineno=416, col_offset=8), [Str('interp', lineno=416, col_offset=29), Name('self', Load(), lineno=416, col_offset=39)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=417, col_offset=8), 'transfer_path', Load(), lineno=417, col_offset=8), [], [], None, None, lineno=417, col_offset=8), lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'poll_subprocess', Load(), lineno=418, col_offset=8), [], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Return(Attribute(Name('self', Load(), lineno=419, col_offset=15), 'rpcclt', Load(), lineno=419, col_offset=15), lineno=419, col_offset=8)], [], lineno=379, col_offset=4), FunctionDef('restart_subprocess', arguments([Name('self', Param(), lineno=421, col_offset=27)], None, None, []), [If(Attribute(Name('self', Load(), lineno=422, col_offset=11), 'restarting', Load(), lineno=422, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=423, col_offset=19), 'rpcclt', Load(), lineno=423, col_offset=19), lineno=423, col_offset=12)], [], lineno=422, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=424, col_offset=8), 'restarting', Store(), lineno=424, col_offset=8)], Name('True', Load(), lineno=424, col_offset=26), lineno=424, col_offset=8), Assign([Name('debug', Store(), lineno=426, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=426, col_offset=16), 'getdebugger', Load(), lineno=426, col_offset=16), [], [], None, None, lineno=426, col_offset=16), lineno=426, col_offset=8), If(Name('debug', Load(), lineno=427, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('RemoteDebugger', Load(), lineno=430, col_offset=16), 'close_subprocess_debugger', Load(), lineno=430, col_offset=16), [Attribute(Name('self', Load(), lineno=430, col_offset=57), 'rpcclt', Load(), lineno=430, col_offset=57)], [], None, None, lineno=430, col_offset=16), lineno=430, col_offset=16)], [ExceptHandler(None, None, [Pass( lineno=432, col_offset=16)], lineno=431, col_offset=12)], [], lineno=428, col_offset=12)], [], lineno=427, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'rpcclt', Load(), lineno=434, col_offset=8), 'close', Load(), lineno=434, col_offset=8), [], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'unix_terminate', Load(), lineno=435, col_offset=8), [], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), Assign([Name('console', Store(), lineno=436, col_offset=8)], Attribute(Name('self', Load(), lineno=436, col_offset=18), 'tkconsole', Load(), lineno=436, col_offset=18), lineno=436, col_offset=8), Assign([Name('was_executing', Store(), lineno=437, col_offset=8)], Attribute(Name('console', Load(), lineno=437, col_offset=24), 'executing', Load(), lineno=437, col_offset=24), lineno=437, col_offset=8), Assign([Attribute(Name('console', Load(), lineno=438, col_offset=8), 'executing', Store(), lineno=438, col_offset=8)], Name('False', Load(), lineno=438, col_offset=28), lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'spawn_subprocess', Load(), lineno=439, col_offset=8), [], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=441, col_offset=12), 'rpcclt', Load(), lineno=441, col_offset=12), 'accept', Load(), lineno=441, col_offset=12), [], [], None, None, lineno=441, col_offset=12), lineno=441, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=442, col_offset=15), 'timeout', Load(), lineno=442, col_offset=15), Name('err', Store(), lineno=442, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=443, col_offset=12), 'display_no_subprocess_error', Load(), lineno=443, col_offset=12), [], [], None, None, lineno=443, col_offset=12), lineno=443, col_offset=12), Return(Name('None', Load(), lineno=444, col_offset=19), lineno=444, col_offset=12)], lineno=442, col_offset=8)], [], lineno=440, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=8), 'transfer_path', Load(), lineno=445, col_offset=8), [], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8), Expr(Call(Attribute(Attribute(Name('console', Load(), lineno=447, col_offset=8), 'text', Load(), lineno=447, col_offset=8), 'delete', Load(), lineno=447, col_offset=8), [Str('iomark', lineno=447, col_offset=28), Str('end-1c', lineno=447, col_offset=38)], [], None, None, lineno=447, col_offset=8), lineno=447, col_offset=8), If(Name('was_executing', Load(), lineno=448, col_offset=11), [Expr(Call(Attribute(Name('console', Load(), lineno=449, col_offset=12), 'write', Load(), lineno=449, col_offset=12), [Str('\n', lineno=449, col_offset=26)], [], None, None, lineno=449, col_offset=12), lineno=449, col_offset=12), Expr(Call(Attribute(Name('console', Load(), lineno=450, col_offset=12), 'showprompt', Load(), lineno=450, col_offset=12), [], [], None, None, lineno=450, col_offset=12), lineno=450, col_offset=12)], [], lineno=448, col_offset=8), Assign([Name('halfbar', Store(), lineno=451, col_offset=8)], BinOp(BinOp(BinOp(Call(Name('int', Load(), lineno=451, col_offset=20), [Attribute(Name('console', Load(), lineno=451, col_offset=24), 'width', Load(), lineno=451, col_offset=24)], [], None, None, lineno=451, col_offset=20), Sub(), Num(16, lineno=451, col_offset=41), lineno=451, col_offset=20), FloorDiv(), Num(2, lineno=451, col_offset=48), lineno=451, col_offset=19), Mult(), Str('=', lineno=451, col_offset=53), lineno=451, col_offset=18), lineno=451, col_offset=8), Expr(Call(Attribute(Name('console', Load(), lineno=452, col_offset=8), 'write', Load(), lineno=452, col_offset=8), [BinOp(BinOp(Name('halfbar', Load(), lineno=452, col_offset=22), Add(), Str(' RESTART ', lineno=452, col_offset=32), lineno=452, col_offset=22), Add(), Name('halfbar', Load(), lineno=452, col_offset=46), lineno=452, col_offset=44)], [], None, None, lineno=452, col_offset=8), lineno=452, col_offset=8), Expr(Call(Attribute(Attribute(Name('console', Load(), lineno=453, col_offset=8), 'text', Load(), lineno=453, col_offset=8), 'mark_set', Load(), lineno=453, col_offset=8), [Str('restart', lineno=453, col_offset=30), Str('end-1c', lineno=453, col_offset=41)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8), Expr(Call(Attribute(Attribute(Name('console', Load(), lineno=454, col_offset=8), 'text', Load(), lineno=454, col_offset=8), 'mark_gravity', Load(), lineno=454, col_offset=8), [Str('restart', lineno=454, col_offset=34), Str('left', lineno=454, col_offset=45)], [], None, None, lineno=454, col_offset=8), lineno=454, col_offset=8), Expr(Call(Attribute(Name('console', Load(), lineno=455, col_offset=8), 'showprompt', Load(), lineno=455, col_offset=8), [], [], None, None, lineno=455, col_offset=8), lineno=455, col_offset=8), If(Name('debug', Load(), lineno=457, col_offset=11), [Assign([Name('gui', Store(), lineno=459, col_offset=12)], Call(Attribute(Name('RemoteDebugger', Load(), lineno=459, col_offset=18), 'restart_subprocess_debugger', Load(), lineno=459, col_offset=18), [Attribute(Name('self', Load(), lineno=459, col_offset=61), 'rpcclt', Load(), lineno=459, col_offset=61)], [], None, None, lineno=459, col_offset=18), lineno=459, col_offset=12), Expr(Call(Attribute(Name('debug', Load(), lineno=461, col_offset=12), 'load_breakpoints', Load(), lineno=461, col_offset=12), [], [], None, None, lineno=461, col_offset=12), lineno=461, col_offset=12)], [], lineno=457, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=462, col_offset=8), 'restarting', Store(), lineno=462, col_offset=8)], Name('False', Load(), lineno=462, col_offset=26), lineno=462, col_offset=8), Return(Attribute(Name('self', Load(), lineno=463, col_offset=15), 'rpcclt', Load(), lineno=463, col_offset=15), lineno=463, col_offset=8)], [], lineno=421, col_offset=4), FunctionDef('__request_interrupt', arguments([Name('self', Param(), lineno=465, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=466, col_offset=8), 'rpcclt', Load(), lineno=466, col_offset=8), 'remotecall', Load(), lineno=466, col_offset=8), [Str('exec', lineno=466, col_offset=31), Str('interrupt_the_server', lineno=466, col_offset=39), Tuple([], Load(), lineno=466, col_offset=63), Dict([], [], lineno=466, col_offset=67)], [], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8)], [], lineno=465, col_offset=4), FunctionDef('interrupt_subprocess', arguments([Name('self', Param(), lineno=468, col_offset=29)], None, None, []), [Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=469, col_offset=8), 'Thread', Load(), lineno=469, col_offset=8), [], [keyword('target', Attribute(Name('self', Load(), lineno=469, col_offset=32), '__request_interrupt', Load(), lineno=469, col_offset=32))], None, None, lineno=469, col_offset=8), 'start', Load(), lineno=469, col_offset=8), [], [], None, None, lineno=469, col_offset=8), lineno=469, col_offset=8)], [], lineno=468, col_offset=4), FunctionDef('kill_subprocess', arguments([Name('self', Param(), lineno=471, col_offset=24)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=473, col_offset=12), 'rpcclt', Load(), lineno=473, col_offset=12), 'close', Load(), lineno=473, col_offset=12), [], [], None, None, lineno=473, col_offset=12), lineno=473, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=474, col_offset=15), None, [Pass( lineno=475, col_offset=12)], lineno=474, col_offset=8)], [], lineno=472, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=476, col_offset=8), 'unix_terminate', Load(), lineno=476, col_offset=8), [], [], None, None, lineno=476, col_offset=8), lineno=476, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=477, col_offset=8), 'tkconsole', Load(), lineno=477, col_offset=8), 'executing', Store(), lineno=477, col_offset=8)], Name('False', Load(), lineno=477, col_offset=35), lineno=477, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=478, col_offset=8), 'rpcclt', Store(), lineno=478, col_offset=8)], Name('None', Load(), lineno=478, col_offset=22), lineno=478, col_offset=8)], [], lineno=471, col_offset=4), FunctionDef('unix_terminate', arguments([Name('self', Param(), lineno=480, col_offset=23)], None, None, []), [Expr(Str('UNIX: make sure subprocess is terminated and collect status', lineno=481, col_offset=8), lineno=481, col_offset=8), If(Call(Name('hasattr', Load(), lineno=482, col_offset=11), [Name('os', Load(), lineno=482, col_offset=19), Str('kill', lineno=482, col_offset=23)], [], None, None, lineno=482, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=484, col_offset=16), 'kill', Load(), lineno=484, col_offset=16), [Attribute(Name('self', Load(), lineno=484, col_offset=24), 'rpcpid', Load(), lineno=484, col_offset=24), Name('SIGTERM', Load(), lineno=484, col_offset=37)], [], None, None, lineno=484, col_offset=16), lineno=484, col_offset=16)], [ExceptHandler(Name('OSError', Load(), lineno=485, col_offset=19), None, [Return(None, lineno=487, col_offset=16)], lineno=485, col_offset=12)], [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=490, col_offset=20), 'waitpid', Load(), lineno=490, col_offset=20), [Attribute(Name('self', Load(), lineno=490, col_offset=31), 'rpcpid', Load(), lineno=490, col_offset=31), Num(0, lineno=490, col_offset=44)], [], None, None, lineno=490, col_offset=20), lineno=490, col_offset=20)], [ExceptHandler(Name('OSError', Load(), lineno=491, col_offset=23), None, [Return(None, lineno=492, col_offset=20)], lineno=491, col_offset=16)], [], lineno=489, col_offset=16)], lineno=483, col_offset=12)], [], lineno=482, col_offset=8)], [], lineno=480, col_offset=4), FunctionDef('transfer_path', arguments([Name('self', Param(), lineno=494, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'runcommand', Load(), lineno=495, col_offset=8), [BinOp(Str('if 1:\n        import sys as _sys\n        _sys.path = %r\n        del _sys\n        \n', lineno=499, col_offset=-1), Mod(), Tuple([Attribute(Name('sys', Load(), lineno=499, col_offset=17), 'path', Load(), lineno=499, col_offset=17)], Load(), lineno=499, col_offset=17), lineno=499, col_offset=-1)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8)], [], lineno=494, col_offset=4), Assign([Name('active_seq', Store(), lineno=501, col_offset=4)], Name('None', Load(), lineno=501, col_offset=17), lineno=501, col_offset=4), FunctionDef('poll_subprocess', arguments([Name('self', Param(), lineno=503, col_offset=24)], None, None, []), [Assign([Name('clt', Store(), lineno=504, col_offset=8)], Attribute(Name('self', Load(), lineno=504, col_offset=14), 'rpcclt', Load(), lineno=504, col_offset=14), lineno=504, col_offset=8), If(Compare(Name('clt', Load(), lineno=505, col_offset=11), [Is()], [Name('None', Load(), lineno=505, col_offset=18)], lineno=505, col_offset=11), [Return(None, lineno=506, col_offset=12)], [], lineno=505, col_offset=8), TryExcept([Assign([Name('response', Store(), lineno=508, col_offset=12)], Call(Attribute(Name('clt', Load(), lineno=508, col_offset=23), 'pollresponse', Load(), lineno=508, col_offset=23), [Attribute(Name('self', Load(), lineno=508, col_offset=40), 'active_seq', Load(), lineno=508, col_offset=40)], [keyword('wait', Num(0.05, lineno=508, col_offset=62))], None, None, lineno=508, col_offset=23), lineno=508, col_offset=12)], [ExceptHandler(Tuple([Name('EOFError', Load(), lineno=509, col_offset=16), Name('IOError', Load(), lineno=509, col_offset=26), Name('KeyboardInterrupt', Load(), lineno=509, col_offset=35)], Load(), lineno=509, col_offset=16), None, [If(Attribute(Attribute(Name('self', Load(), lineno=512, col_offset=15), 'tkconsole', Load(), lineno=512, col_offset=15), 'closing', Load(), lineno=512, col_offset=15), [Return(None, lineno=513, col_offset=16)], [], lineno=512, col_offset=12), Assign([Name('response', Store(), lineno=514, col_offset=12)], Name('None', Load(), lineno=514, col_offset=23), lineno=514, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=12), 'restart_subprocess', Load(), lineno=515, col_offset=12), [], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12)], lineno=509, col_offset=8)], [], lineno=507, col_offset=8), If(Name('response', Load(), lineno=516, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=517, col_offset=12), 'tkconsole', Load(), lineno=517, col_offset=12), 'resetoutput', Load(), lineno=517, col_offset=12), [], [], None, None, lineno=517, col_offset=12), lineno=517, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=518, col_offset=12), 'active_seq', Store(), lineno=518, col_offset=12)], Name('None', Load(), lineno=518, col_offset=30), lineno=518, col_offset=12), Assign([Tuple([Name('how', Store(), lineno=519, col_offset=12), Name('what', Store(), lineno=519, col_offset=17)], Store(), lineno=519, col_offset=12)], Name('response', Load(), lineno=519, col_offset=24), lineno=519, col_offset=12), Assign([Name('console', Store(), lineno=520, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=520, col_offset=22), 'tkconsole', Load(), lineno=520, col_offset=22), 'console', Load(), lineno=520, col_offset=22), lineno=520, col_offset=12), If(Compare(Name('how', Load(), lineno=521, col_offset=15), [Eq()], [Str('OK', lineno=521, col_offset=22)], lineno=521, col_offset=15), [If(Compare(Name('what', Load(), lineno=522, col_offset=19), [IsNot()], [Name('None', Load(), lineno=522, col_offset=31)], lineno=522, col_offset=19), [Print(Name('console', Load(), lineno=523, col_offset=28), [Call(Name('repr', Load(), lineno=523, col_offset=37), [Name('what', Load(), lineno=523, col_offset=42)], [], None, None, lineno=523, col_offset=37)], True, lineno=523, col_offset=20)], [], lineno=522, col_offset=16)], [If(Compare(Name('how', Load(), lineno=524, col_offset=17), [Eq()], [Str('EXCEPTION', lineno=524, col_offset=24)], lineno=524, col_offset=17), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=525, col_offset=19), 'tkconsole', Load(), lineno=525, col_offset=19), 'getvar', Load(), lineno=525, col_offset=19), [Str('<<toggle-jit-stack-viewer>>', lineno=525, col_offset=41)], [], None, None, lineno=525, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=20), 'remote_stack_viewer', Load(), lineno=526, col_offset=20), [], [], None, None, lineno=526, col_offset=20), lineno=526, col_offset=20)], [], lineno=525, col_offset=16)], [If(Compare(Name('how', Load(), lineno=527, col_offset=17), [Eq()], [Str('ERROR', lineno=527, col_offset=24)], lineno=527, col_offset=17), [Assign([Name('errmsg', Store(), lineno=528, col_offset=16)], Str('PyShell.ModifiedInterpreter: Subprocess ERROR:\n', lineno=528, col_offset=25), lineno=528, col_offset=16), Print(Attribute(Name('sys', Load(), lineno=529, col_offset=24), '__stderr__', Load(), lineno=529, col_offset=24), [Name('errmsg', Load(), lineno=529, col_offset=40), Name('what', Load(), lineno=529, col_offset=48)], True, lineno=529, col_offset=16), Print(Name('console', Load(), lineno=530, col_offset=24), [Name('errmsg', Load(), lineno=530, col_offset=33), Name('what', Load(), lineno=530, col_offset=41)], True, lineno=530, col_offset=16)], [], lineno=527, col_offset=17)], lineno=524, col_offset=17)], lineno=521, col_offset=12), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=533, col_offset=16), 'tkconsole', Load(), lineno=533, col_offset=16), 'endexecuting', Load(), lineno=533, col_offset=16), [], [], None, None, lineno=533, col_offset=16), lineno=533, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=534, col_offset=19), None, [Pass( lineno=535, col_offset=16)], lineno=534, col_offset=12)], [], lineno=532, col_offset=12)], [], lineno=516, col_offset=8), If(UnaryOp(Not(), Attribute(Attribute(Name('self', Load(), lineno=537, col_offset=15), 'tkconsole', Load(), lineno=537, col_offset=15), 'closing', Load(), lineno=537, col_offset=15), lineno=537, col_offset=11), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=538, col_offset=12), 'tkconsole', Load(), lineno=538, col_offset=12), 'text', Load(), lineno=538, col_offset=12), 'after', Load(), lineno=538, col_offset=12), [Attribute(Attribute(Name('self', Load(), lineno=538, col_offset=38), 'tkconsole', Load(), lineno=538, col_offset=38), 'pollinterval', Load(), lineno=538, col_offset=38), Attribute(Name('self', Load(), lineno=539, col_offset=38), 'poll_subprocess', Load(), lineno=539, col_offset=38)], [], None, None, lineno=538, col_offset=12), lineno=538, col_offset=12)], [], lineno=537, col_offset=8)], [], lineno=503, col_offset=4), Assign([Name('debugger', Store(), lineno=541, col_offset=4)], Name('None', Load(), lineno=541, col_offset=15), lineno=541, col_offset=4), FunctionDef('setdebugger', arguments([Name('self', Param(), lineno=543, col_offset=20), Name('debugger', Param(), lineno=543, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=544, col_offset=8), 'debugger', Store(), lineno=544, col_offset=8)], Name('debugger', Load(), lineno=544, col_offset=24), lineno=544, col_offset=8)], [], lineno=543, col_offset=4), FunctionDef('getdebugger', arguments([Name('self', Param(), lineno=546, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=547, col_offset=15), 'debugger', Load(), lineno=547, col_offset=15), lineno=547, col_offset=8)], [], lineno=546, col_offset=4), FunctionDef('open_remote_stack_viewer', arguments([Name('self', Param(), lineno=549, col_offset=33)], None, None, []), [Expr(Str('Initiate the remote stack viewer from a separate thread.\n\n        This method is called from the subprocess, and by returning from this\n        method we allow the subprocess to unblock.  After a bit the shell\n        requests the subprocess to open the remote stack viewer which returns a\n        static object looking at the last exception.  It is queried through\n        the RPC mechanism.\n\n        ', lineno=558, col_offset=-1), lineno=558, col_offset=-1), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=559, col_offset=8), 'tkconsole', Load(), lineno=559, col_offset=8), 'text', Load(), lineno=559, col_offset=8), 'after', Load(), lineno=559, col_offset=8), [Num(300, lineno=559, col_offset=34), Attribute(Name('self', Load(), lineno=559, col_offset=39), 'remote_stack_viewer', Load(), lineno=559, col_offset=39)], [], None, None, lineno=559, col_offset=8), lineno=559, col_offset=8), Return(None, lineno=560, col_offset=8)], [], lineno=549, col_offset=4), FunctionDef('remote_stack_viewer', arguments([Name('self', Param(), lineno=562, col_offset=28)], None, None, []), [ImportFrom('idlelib', [alias('RemoteObjectBrowser', None)], 0, lineno=563, col_offset=8), Assign([Name('oid', Store(), lineno=564, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=564, col_offset=14), 'rpcclt', Load(), lineno=564, col_offset=14), 'remotequeue', Load(), lineno=564, col_offset=14), [Str('exec', lineno=564, col_offset=38), Str('stackviewer', lineno=564, col_offset=46), Tuple([Str('flist', lineno=564, col_offset=62)], Load(), lineno=564, col_offset=62), Dict([], [], lineno=564, col_offset=73)], [], None, None, lineno=564, col_offset=14), lineno=564, col_offset=8), If(Compare(Name('oid', Load(), lineno=565, col_offset=11), [Is()], [Name('None', Load(), lineno=565, col_offset=18)], lineno=565, col_offset=11), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=566, col_offset=12), 'tkconsole', Load(), lineno=566, col_offset=12), 'root', Load(), lineno=566, col_offset=12), 'bell', Load(), lineno=566, col_offset=12), [], [], None, None, lineno=566, col_offset=12), lineno=566, col_offset=12), Return(None, lineno=567, col_offset=12)], [], lineno=565, col_offset=8), Assign([Name('item', Store(), lineno=568, col_offset=8)], Call(Attribute(Name('RemoteObjectBrowser', Load(), lineno=568, col_offset=15), 'StubObjectTreeItem', Load(), lineno=568, col_offset=15), [Attribute(Name('self', Load(), lineno=568, col_offset=54), 'rpcclt', Load(), lineno=568, col_offset=54), Name('oid', Load(), lineno=568, col_offset=67)], [], None, None, lineno=568, col_offset=15), lineno=568, col_offset=8), ImportFrom('idlelib.TreeWidget', [alias('ScrolledCanvas', None), alias('TreeNode', None)], 0, lineno=569, col_offset=8), Assign([Name('top', Store(), lineno=570, col_offset=8)], Call(Name('Toplevel', Load(), lineno=570, col_offset=14), [Attribute(Attribute(Name('self', Load(), lineno=570, col_offset=23), 'tkconsole', Load(), lineno=570, col_offset=23), 'root', Load(), lineno=570, col_offset=23)], [], None, None, lineno=570, col_offset=14), lineno=570, col_offset=8), Assign([Name('theme', Store(), lineno=571, col_offset=8)], Call(Attribute(Name('idleConf', Load(), lineno=571, col_offset=16), 'GetOption', Load(), lineno=571, col_offset=16), [Str('main', lineno=571, col_offset=35), Str('Theme', lineno=571, col_offset=42), Str('name', lineno=571, col_offset=50)], [], None, None, lineno=571, col_offset=16), lineno=571, col_offset=8), Assign([Name('background', Store(), lineno=572, col_offset=8)], Subscript(Call(Attribute(Name('idleConf', Load(), lineno=572, col_offset=21), 'GetHighlight', Load(), lineno=572, col_offset=21), [Name('theme', Load(), lineno=572, col_offset=43), Str('normal', lineno=572, col_offset=50)], [], None, None, lineno=572, col_offset=21), Index(Str('background', lineno=572, col_offset=60)), Load(), lineno=572, col_offset=21), lineno=572, col_offset=8), Assign([Name('sc', Store(), lineno=573, col_offset=8)], Call(Name('ScrolledCanvas', Load(), lineno=573, col_offset=13), [Name('top', Load(), lineno=573, col_offset=28)], [keyword('bg', Name('background', Load(), lineno=573, col_offset=36)), keyword('highlightthickness', Num(0, lineno=573, col_offset=67))], None, None, lineno=573, col_offset=13), lineno=573, col_offset=8), Expr(Call(Attribute(Attribute(Name('sc', Load(), lineno=574, col_offset=8), 'frame', Load(), lineno=574, col_offset=8), 'pack', Load(), lineno=574, col_offset=8), [], [keyword('expand', Num(1, lineno=574, col_offset=29)), keyword('fill', Str('both', lineno=574, col_offset=37))], None, None, lineno=574, col_offset=8), lineno=574, col_offset=8), Assign([Name('node', Store(), lineno=575, col_offset=8)], Call(Name('TreeNode', Load(), lineno=575, col_offset=15), [Attribute(Name('sc', Load(), lineno=575, col_offset=24), 'canvas', Load(), lineno=575, col_offset=24), Name('None', Load(), lineno=575, col_offset=35), Name('item', Load(), lineno=575, col_offset=41)], [], None, None, lineno=575, col_offset=15), lineno=575, col_offset=8), Expr(Call(Attribute(Name('node', Load(), lineno=576, col_offset=8), 'expand', Load(), lineno=576, col_offset=8), [], [], None, None, lineno=576, col_offset=8), lineno=576, col_offset=8)], [], lineno=562, col_offset=4), Assign([Name('gid', Store(), lineno=579, col_offset=4)], Num(0, lineno=579, col_offset=10), lineno=579, col_offset=4), FunctionDef('execsource', arguments([Name('self', Param(), lineno=581, col_offset=19), Name('source', Param(), lineno=581, col_offset=25)], None, None, []), [Expr(Str('Like runsource() but assumes complete exec source', lineno=582, col_offset=8), lineno=582, col_offset=8), Assign([Name('filename', Store(), lineno=583, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=583, col_offset=19), 'stuffsource', Load(), lineno=583, col_offset=19), [Name('source', Load(), lineno=583, col_offset=36)], [], None, None, lineno=583, col_offset=19), lineno=583, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'execfile', Load(), lineno=584, col_offset=8), [Name('filename', Load(), lineno=584, col_offset=22), Name('source', Load(), lineno=584, col_offset=32)], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8)], [], lineno=581, col_offset=4), FunctionDef('execfile', arguments([Name('self', Param(), lineno=586, col_offset=17), Name('filename', Param(), lineno=586, col_offset=23), Name('source', Param(), lineno=586, col_offset=33)], None, None, [Name('None', Load(), lineno=586, col_offset=40)]), [Expr(Str('Execute an existing file', lineno=587, col_offset=8), lineno=587, col_offset=8), If(Compare(Name('source', Load(), lineno=588, col_offset=11), [Is()], [Name('None', Load(), lineno=588, col_offset=21)], lineno=588, col_offset=11), [Assign([Name('source', Store(), lineno=589, col_offset=12)], Call(Attribute(Call(Name('open', Load(), lineno=589, col_offset=21), [Name('filename', Load(), lineno=589, col_offset=26), Str('r', lineno=589, col_offset=36)], [], None, None, lineno=589, col_offset=21), 'read', Load(), lineno=589, col_offset=21), [], [], None, None, lineno=589, col_offset=21), lineno=589, col_offset=12)], [], lineno=588, col_offset=8), TryExcept([Assign([Name('code', Store(), lineno=591, col_offset=12)], Call(Name('compile', Load(), lineno=591, col_offset=19), [Name('source', Load(), lineno=591, col_offset=27), Name('filename', Load(), lineno=591, col_offset=35), Str('exec', lineno=591, col_offset=45)], [], None, None, lineno=591, col_offset=19), lineno=591, col_offset=12)], [ExceptHandler(Tuple([Name('OverflowError', Load(), lineno=592, col_offset=16), Name('SyntaxError', Load(), lineno=592, col_offset=31)], Load(), lineno=592, col_offset=16), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=593, col_offset=12), 'tkconsole', Load(), lineno=593, col_offset=12), 'resetoutput', Load(), lineno=593, col_offset=12), [], [], None, None, lineno=593, col_offset=12), lineno=593, col_offset=12), Assign([Name('tkerr', Store(), lineno=594, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=594, col_offset=20), 'tkconsole', Load(), lineno=594, col_offset=20), 'stderr', Load(), lineno=594, col_offset=20), lineno=594, col_offset=12), Print(Name('tkerr', Load(), lineno=595, col_offset=19), [Str('*** Error in script or command!\n', lineno=595, col_offset=26)], True, lineno=595, col_offset=12), Print(Name('tkerr', Load(), lineno=596, col_offset=19), [Str('Traceback (most recent call last):', lineno=596, col_offset=26)], True, lineno=596, col_offset=12), Expr(Call(Attribute(Name('InteractiveInterpreter', Load(), lineno=597, col_offset=12), 'showsyntaxerror', Load(), lineno=597, col_offset=12), [Name('self', Load(), lineno=597, col_offset=51), Name('filename', Load(), lineno=597, col_offset=57)], [], None, None, lineno=597, col_offset=12), lineno=597, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=598, col_offset=12), 'tkconsole', Load(), lineno=598, col_offset=12), 'showprompt', Load(), lineno=598, col_offset=12), [], [], None, None, lineno=598, col_offset=12), lineno=598, col_offset=12)], lineno=592, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=12), 'runcode', Load(), lineno=600, col_offset=12), [Name('code', Load(), lineno=600, col_offset=25)], [], None, None, lineno=600, col_offset=12), lineno=600, col_offset=12)], lineno=590, col_offset=8)], [], lineno=586, col_offset=4), FunctionDef('runsource', arguments([Name('self', Param(), lineno=602, col_offset=18), Name('source', Param(), lineno=602, col_offset=24)], None, None, []), [Expr(Str('Extend base class method: Stuff the source in the line cache first', lineno=603, col_offset=8), lineno=603, col_offset=8), Assign([Name('filename', Store(), lineno=604, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=604, col_offset=19), 'stuffsource', Load(), lineno=604, col_offset=19), [Name('source', Load(), lineno=604, col_offset=36)], [], None, None, lineno=604, col_offset=19), lineno=604, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=605, col_offset=8), 'more', Store(), lineno=605, col_offset=8)], Num(0, lineno=605, col_offset=20), lineno=605, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=606, col_offset=8), 'save_warnings_filters', Store(), lineno=606, col_offset=8)], Subscript(Attribute(Name('warnings', Load(), lineno=606, col_offset=37), 'filters', Load(), lineno=606, col_offset=37), Slice(None, None, None), Load(), lineno=606, col_offset=37), lineno=606, col_offset=8), Expr(Call(Attribute(Name('warnings', Load(), lineno=607, col_offset=8), 'filterwarnings', Load(), lineno=607, col_offset=8), [], [keyword('action', Str('error', lineno=607, col_offset=39)), keyword('category', Name('SyntaxWarning', Load(), lineno=607, col_offset=57))], None, None, lineno=607, col_offset=8), lineno=607, col_offset=8), If(Call(Name('isinstance', Load(), lineno=608, col_offset=11), [Name('source', Load(), lineno=608, col_offset=22), Attribute(Name('types', Load(), lineno=608, col_offset=30), 'UnicodeType', Load(), lineno=608, col_offset=30)], [], None, None, lineno=608, col_offset=11), [ImportFrom('idlelib', [alias('IOBinding', None)], 0, lineno=609, col_offset=12), TryExcept([Assign([Name('source', Store(), lineno=611, col_offset=16)], Call(Attribute(Name('source', Load(), lineno=611, col_offset=25), 'encode', Load(), lineno=611, col_offset=25), [Attribute(Name('IOBinding', Load(), lineno=611, col_offset=39), 'encoding', Load(), lineno=611, col_offset=39)], [], None, None, lineno=611, col_offset=25), lineno=611, col_offset=16)], [ExceptHandler(Name('UnicodeError', Load(), lineno=612, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=613, col_offset=16), 'tkconsole', Load(), lineno=613, col_offset=16), 'resetoutput', Load(), lineno=613, col_offset=16), [], [], None, None, lineno=613, col_offset=16), lineno=613, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=614, col_offset=16), 'write', Load(), lineno=614, col_offset=16), [Str('Unsupported characters in input\n', lineno=614, col_offset=27)], [], None, None, lineno=614, col_offset=16), lineno=614, col_offset=16), Return(None, lineno=615, col_offset=16)], lineno=612, col_offset=12)], [], lineno=610, col_offset=12)], [], lineno=608, col_offset=8), TryFinally([Return(Call(Attribute(Name('InteractiveInterpreter', Load(), lineno=619, col_offset=19), 'runsource', Load(), lineno=619, col_offset=19), [Name('self', Load(), lineno=619, col_offset=52), Name('source', Load(), lineno=619, col_offset=58), Name('filename', Load(), lineno=619, col_offset=66)], [], None, None, lineno=619, col_offset=19), lineno=619, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=621, col_offset=15), 'save_warnings_filters', Load(), lineno=621, col_offset=15), [IsNot()], [Name('None', Load(), lineno=621, col_offset=49)], lineno=621, col_offset=15), [Assign([Subscript(Attribute(Name('warnings', Load(), lineno=622, col_offset=16), 'filters', Load(), lineno=622, col_offset=16), Slice(None, None, None), Store(), lineno=622, col_offset=16)], Attribute(Name('self', Load(), lineno=622, col_offset=38), 'save_warnings_filters', Load(), lineno=622, col_offset=38), lineno=622, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=623, col_offset=16), 'save_warnings_filters', Store(), lineno=623, col_offset=16)], Name('None', Load(), lineno=623, col_offset=45), lineno=623, col_offset=16)], [], lineno=621, col_offset=12)], lineno=616, col_offset=8)], [], lineno=602, col_offset=4), FunctionDef('stuffsource', arguments([Name('self', Param(), lineno=625, col_offset=20), Name('source', Param(), lineno=625, col_offset=26)], None, None, []), [Expr(Str('Stuff source in the filename cache', lineno=626, col_offset=8), lineno=626, col_offset=8), Assign([Name('filename', Store(), lineno=627, col_offset=8)], BinOp(Str('<pyshell#%d>', lineno=627, col_offset=19), Mod(), Attribute(Name('self', Load(), lineno=627, col_offset=36), 'gid', Load(), lineno=627, col_offset=36), lineno=627, col_offset=19), lineno=627, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=628, col_offset=8), 'gid', Store(), lineno=628, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=628, col_offset=19), 'gid', Load(), lineno=628, col_offset=19), Add(), Num(1, lineno=628, col_offset=30), lineno=628, col_offset=19), lineno=628, col_offset=8), Assign([Name('lines', Store(), lineno=629, col_offset=8)], Call(Attribute(Name('source', Load(), lineno=629, col_offset=16), 'split', Load(), lineno=629, col_offset=16), [Str('\n', lineno=629, col_offset=29)], [], None, None, lineno=629, col_offset=16), lineno=629, col_offset=8), Assign([Subscript(Attribute(Name('linecache', Load(), lineno=630, col_offset=8), 'cache', Load(), lineno=630, col_offset=8), Index(Name('filename', Load(), lineno=630, col_offset=24)), Store(), lineno=630, col_offset=8)], Tuple([BinOp(Call(Name('len', Load(), lineno=630, col_offset=36), [Name('source', Load(), lineno=630, col_offset=40)], [], None, None, lineno=630, col_offset=36), Add(), Num(1, lineno=630, col_offset=48), lineno=630, col_offset=36), Num(0, lineno=630, col_offset=51), Name('lines', Load(), lineno=630, col_offset=54), Name('filename', Load(), lineno=630, col_offset=61)], Load(), lineno=630, col_offset=36), lineno=630, col_offset=8), Return(Name('filename', Load(), lineno=631, col_offset=15), lineno=631, col_offset=8)], [], lineno=625, col_offset=4), FunctionDef('prepend_syspath', arguments([Name('self', Param(), lineno=633, col_offset=24), Name('filename', Param(), lineno=633, col_offset=30)], None, None, []), [Expr(Str("Prepend sys.path with file's directory if not already included", lineno=634, col_offset=8), lineno=634, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=635, col_offset=8), 'runcommand', Load(), lineno=635, col_offset=8), [BinOp(Str('if 1:\n            _filename = %r\n            import sys as _sys\n            from os.path import dirname as _dirname\n            _dir = _dirname(_filename)\n            if not _dir in _sys.path:\n                _sys.path.insert(0, _dir)\n            del _filename, _sys, _dirname, _dir\n            \n', lineno=643, col_offset=-1), Mod(), Tuple([Name('filename', Load(), lineno=643, col_offset=21)], Load(), lineno=643, col_offset=21), lineno=643, col_offset=-1)], [], None, None, lineno=635, col_offset=8), lineno=635, col_offset=8)], [], lineno=633, col_offset=4), FunctionDef('showsyntaxerror', arguments([Name('self', Param(), lineno=645, col_offset=24), Name('filename', Param(), lineno=645, col_offset=30)], None, None, [Name('None', Load(), lineno=645, col_offset=39)]), [Expr(Str('Extend base class method: Add Colorizing\n\n        Color the offending position instead of printing it and pointing at it\n        with a caret.\n\n        ', lineno=651, col_offset=-1), lineno=651, col_offset=-1), Assign([Name('text', Store(), lineno=652, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=652, col_offset=15), 'tkconsole', Load(), lineno=652, col_offset=15), 'text', Load(), lineno=652, col_offset=15), lineno=652, col_offset=8), Assign([Name('stuff', Store(), lineno=653, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=653, col_offset=16), 'unpackerror', Load(), lineno=653, col_offset=16), [], [], None, None, lineno=653, col_offset=16), lineno=653, col_offset=8), If(Name('stuff', Load(), lineno=654, col_offset=11), [Assign([Tuple([Name('msg', Store(), lineno=655, col_offset=12), Name('lineno', Store(), lineno=655, col_offset=17), Name('offset', Store(), lineno=655, col_offset=25), Name('line', Store(), lineno=655, col_offset=33)], Store(), lineno=655, col_offset=12)], Name('stuff', Load(), lineno=655, col_offset=40), lineno=655, col_offset=12), If(Compare(Name('lineno', Load(), lineno=656, col_offset=15), [Eq()], [Num(1, lineno=656, col_offset=25)], lineno=656, col_offset=15), [Assign([Name('pos', Store(), lineno=657, col_offset=16)], BinOp(Str('iomark + %d chars', lineno=657, col_offset=22), Mod(), BinOp(Name('offset', Load(), lineno=657, col_offset=45), Sub(), Num(1, lineno=657, col_offset=52), lineno=657, col_offset=45), lineno=657, col_offset=22), lineno=657, col_offset=16)], [Assign([Name('pos', Store(), lineno=659, col_offset=16)], BinOp(Str('iomark linestart + %d lines + %d chars', lineno=659, col_offset=22), Mod(), Tuple([BinOp(Name('lineno', Load(), lineno=660, col_offset=23), Sub(), Num(1, lineno=660, col_offset=30), lineno=660, col_offset=23), BinOp(Name('offset', Load(), lineno=660, col_offset=33), Sub(), Num(1, lineno=660, col_offset=40), lineno=660, col_offset=33)], Load(), lineno=660, col_offset=23), lineno=659, col_offset=22), lineno=659, col_offset=16)], lineno=656, col_offset=12), Expr(Call(Attribute(Name('text', Load(), lineno=661, col_offset=12), 'tag_add', Load(), lineno=661, col_offset=12), [Str('ERROR', lineno=661, col_offset=25), Name('pos', Load(), lineno=661, col_offset=34)], [], None, None, lineno=661, col_offset=12), lineno=661, col_offset=12), Expr(Call(Attribute(Name('text', Load(), lineno=662, col_offset=12), 'see', Load(), lineno=662, col_offset=12), [Name('pos', Load(), lineno=662, col_offset=21)], [], None, None, lineno=662, col_offset=12), lineno=662, col_offset=12), Assign([Name('char', Store(), lineno=663, col_offset=12)], Call(Attribute(Name('text', Load(), lineno=663, col_offset=19), 'get', Load(), lineno=663, col_offset=19), [Name('pos', Load(), lineno=663, col_offset=28)], [], None, None, lineno=663, col_offset=19), lineno=663, col_offset=12), If(BoolOp(And(), [Name('char', Load(), lineno=664, col_offset=15), Compare(Name('char', Load(), lineno=664, col_offset=24), [In()], [Name('IDENTCHARS', Load(), lineno=664, col_offset=32)], lineno=664, col_offset=24)], lineno=664, col_offset=15), [Expr(Call(Attribute(Name('text', Load(), lineno=665, col_offset=16), 'tag_add', Load(), lineno=665, col_offset=16), [Str('ERROR', lineno=665, col_offset=29), BinOp(Name('pos', Load(), lineno=665, col_offset=38), Add(), Str(' wordstart', lineno=665, col_offset=44), lineno=665, col_offset=38), Name('pos', Load(), lineno=665, col_offset=58)], [], None, None, lineno=665, col_offset=16), lineno=665, col_offset=16)], [], lineno=664, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=666, col_offset=12), 'tkconsole', Load(), lineno=666, col_offset=12), 'resetoutput', Load(), lineno=666, col_offset=12), [], [], None, None, lineno=666, col_offset=12), lineno=666, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=667, col_offset=12), 'write', Load(), lineno=667, col_offset=12), [BinOp(Str('SyntaxError: %s\n', lineno=667, col_offset=23), Mod(), Call(Name('str', Load(), lineno=667, col_offset=45), [Name('msg', Load(), lineno=667, col_offset=49)], [], None, None, lineno=667, col_offset=45), lineno=667, col_offset=23)], [], None, None, lineno=667, col_offset=12), lineno=667, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=669, col_offset=12), 'tkconsole', Load(), lineno=669, col_offset=12), 'resetoutput', Load(), lineno=669, col_offset=12), [], [], None, None, lineno=669, col_offset=12), lineno=669, col_offset=12), Expr(Call(Attribute(Name('InteractiveInterpreter', Load(), lineno=670, col_offset=12), 'showsyntaxerror', Load(), lineno=670, col_offset=12), [Name('self', Load(), lineno=670, col_offset=51), Name('filename', Load(), lineno=670, col_offset=57)], [], None, None, lineno=670, col_offset=12), lineno=670, col_offset=12)], lineno=654, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=671, col_offset=8), 'tkconsole', Load(), lineno=671, col_offset=8), 'showprompt', Load(), lineno=671, col_offset=8), [], [], None, None, lineno=671, col_offset=8), lineno=671, col_offset=8)], [], lineno=645, col_offset=4), FunctionDef('unpackerror', arguments([Name('self', Param(), lineno=673, col_offset=20)], None, None, []), [Assign([Tuple([Name('type', Store(), lineno=674, col_offset=8), Name('value', Store(), lineno=674, col_offset=14), Name('tb', Store(), lineno=674, col_offset=21)], Store(), lineno=674, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=674, col_offset=26), 'exc_info', Load(), lineno=674, col_offset=26), [], [], None, None, lineno=674, col_offset=26), lineno=674, col_offset=8), Assign([Name('ok', Store(), lineno=675, col_offset=8)], Compare(Name('type', Load(), lineno=675, col_offset=13), [Is()], [Name('SyntaxError', Load(), lineno=675, col_offset=21)], lineno=675, col_offset=13), lineno=675, col_offset=8), If(Name('ok', Load(), lineno=676, col_offset=11), [TryExcept([Assign([Tuple([Name('msg', Store(), lineno=678, col_offset=16), Tuple([Name('dummy_filename', Store(), lineno=678, col_offset=22), Name('lineno', Store(), lineno=678, col_offset=38), Name('offset', Store(), lineno=678, col_offset=46), Name('line', Store(), lineno=678, col_offset=54)], Store(), lineno=678, col_offset=22)], Store(), lineno=678, col_offset=16)], Name('value', Load(), lineno=678, col_offset=62), lineno=678, col_offset=16), If(UnaryOp(Not(), Name('offset', Load(), lineno=679, col_offset=23), lineno=679, col_offset=19), [Assign([Name('offset', Store(), lineno=680, col_offset=20)], Num(0, lineno=680, col_offset=29), lineno=680, col_offset=20)], [], lineno=679, col_offset=16)], [ExceptHandler(None, None, [Assign([Name('ok', Store(), lineno=682, col_offset=16)], Num(0, lineno=682, col_offset=21), lineno=682, col_offset=16)], lineno=681, col_offset=12)], [], lineno=677, col_offset=12)], [], lineno=676, col_offset=8), If(Name('ok', Load(), lineno=683, col_offset=11), [Return(Tuple([Name('msg', Load(), lineno=684, col_offset=19), Name('lineno', Load(), lineno=684, col_offset=24), Name('offset', Load(), lineno=684, col_offset=32), Name('line', Load(), lineno=684, col_offset=40)], Load(), lineno=684, col_offset=19), lineno=684, col_offset=12)], [Return(Name('None', Load(), lineno=686, col_offset=19), lineno=686, col_offset=12)], lineno=683, col_offset=8)], [], lineno=673, col_offset=4), FunctionDef('showtraceback', arguments([Name('self', Param(), lineno=688, col_offset=22)], None, None, []), [Expr(Str('Extend base class method to reset output properly', lineno=689, col_offset=8), lineno=689, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=690, col_offset=8), 'tkconsole', Load(), lineno=690, col_offset=8), 'resetoutput', Load(), lineno=690, col_offset=8), [], [], None, None, lineno=690, col_offset=8), lineno=690, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=691, col_offset=8), 'checklinecache', Load(), lineno=691, col_offset=8), [], [], None, None, lineno=691, col_offset=8), lineno=691, col_offset=8), Expr(Call(Attribute(Name('InteractiveInterpreter', Load(), lineno=692, col_offset=8), 'showtraceback', Load(), lineno=692, col_offset=8), [Name('self', Load(), lineno=692, col_offset=45)], [], None, None, lineno=692, col_offset=8), lineno=692, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=693, col_offset=11), 'tkconsole', Load(), lineno=693, col_offset=11), 'getvar', Load(), lineno=693, col_offset=11), [Str('<<toggle-jit-stack-viewer>>', lineno=693, col_offset=33)], [], None, None, lineno=693, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=694, col_offset=12), 'tkconsole', Load(), lineno=694, col_offset=12), 'open_stack_viewer', Load(), lineno=694, col_offset=12), [], [], None, None, lineno=694, col_offset=12), lineno=694, col_offset=12)], [], lineno=693, col_offset=8)], [], lineno=688, col_offset=4), FunctionDef('checklinecache', arguments([Name('self', Param(), lineno=696, col_offset=23)], None, None, []), [Assign([Name('c', Store(), lineno=697, col_offset=8)], Attribute(Name('linecache', Load(), lineno=697, col_offset=12), 'cache', Load(), lineno=697, col_offset=12), lineno=697, col_offset=8), For(Name('key', Store(), lineno=698, col_offset=12), Call(Attribute(Name('c', Load(), lineno=698, col_offset=19), 'keys', Load(), lineno=698, col_offset=19), [], [], None, None, lineno=698, col_offset=19), [If(Compare(BinOp(Subscript(Name('key', Load(), lineno=699, col_offset=15), Slice(None, Num(1, lineno=699, col_offset=20), None), Load(), lineno=699, col_offset=15), Add(), Subscript(Name('key', Load(), lineno=699, col_offset=25), Slice(Num(-1, lineno=699, col_offset=30), None, None), Load(), lineno=699, col_offset=25), lineno=699, col_offset=15), [NotEq()], [Str('<>', lineno=699, col_offset=37)], lineno=699, col_offset=15), [Delete([Subscript(Name('c', Load(), lineno=700, col_offset=20), Index(Name('key', Load(), lineno=700, col_offset=22)), Del(), lineno=700, col_offset=20)], lineno=700, col_offset=16)], [], lineno=699, col_offset=12)], [], lineno=698, col_offset=8)], [], lineno=696, col_offset=4), FunctionDef('runcommand', arguments([Name('self', Param(), lineno=702, col_offset=19), Name('code', Param(), lineno=702, col_offset=25)], None, None, []), [Expr(Str('Run the code without invoking the debugger', lineno=703, col_offset=8), lineno=703, col_offset=8), If(Attribute(Attribute(Name('self', Load(), lineno=705, col_offset=11), 'tkconsole', Load(), lineno=705, col_offset=11), 'executing', Load(), lineno=705, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=706, col_offset=12), 'display_executing_dialog', Load(), lineno=706, col_offset=12), [], [], None, None, lineno=706, col_offset=12), lineno=706, col_offset=12), Return(Num(0, lineno=707, col_offset=19), lineno=707, col_offset=12)], [], lineno=705, col_offset=8), If(Attribute(Name('self', Load(), lineno=708, col_offset=11), 'rpcclt', Load(), lineno=708, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=709, col_offset=12), 'rpcclt', Load(), lineno=709, col_offset=12), 'remotequeue', Load(), lineno=709, col_offset=12), [Str('exec', lineno=709, col_offset=36), Str('runcode', lineno=709, col_offset=44), Tuple([Name('code', Load(), lineno=709, col_offset=56)], Load(), lineno=709, col_offset=56), Dict([], [], lineno=709, col_offset=64)], [], None, None, lineno=709, col_offset=12), lineno=709, col_offset=12)], [Exec(Name('code', Load(), lineno=711, col_offset=17), Attribute(Name('self', Load(), lineno=711, col_offset=25), 'locals', Load(), lineno=711, col_offset=25), None, lineno=711, col_offset=12)], lineno=708, col_offset=8), Return(Num(1, lineno=712, col_offset=15), lineno=712, col_offset=8)], [], lineno=702, col_offset=4), FunctionDef('runcode', arguments([Name('self', Param(), lineno=714, col_offset=16), Name('code', Param(), lineno=714, col_offset=22)], None, None, []), [Expr(Str('Override base class method', lineno=715, col_offset=8), lineno=715, col_offset=8), If(Attribute(Attribute(Name('self', Load(), lineno=716, col_offset=11), 'tkconsole', Load(), lineno=716, col_offset=11), 'executing', Load(), lineno=716, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=717, col_offset=12), 'interp', Load(), lineno=717, col_offset=12), 'restart_subprocess', Load(), lineno=717, col_offset=12), [], [], None, None, lineno=717, col_offset=12), lineno=717, col_offset=12)], [], lineno=716, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=718, col_offset=8), 'checklinecache', Load(), lineno=718, col_offset=8), [], [], None, None, lineno=718, col_offset=8), lineno=718, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=719, col_offset=11), 'save_warnings_filters', Load(), lineno=719, col_offset=11), [IsNot()], [Name('None', Load(), lineno=719, col_offset=45)], lineno=719, col_offset=11), [Assign([Subscript(Attribute(Name('warnings', Load(), lineno=720, col_offset=12), 'filters', Load(), lineno=720, col_offset=12), Slice(None, None, None), Store(), lineno=720, col_offset=12)], Attribute(Name('self', Load(), lineno=720, col_offset=34), 'save_warnings_filters', Load(), lineno=720, col_offset=34), lineno=720, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=721, col_offset=12), 'save_warnings_filters', Store(), lineno=721, col_offset=12)], Name('None', Load(), lineno=721, col_offset=41), lineno=721, col_offset=12)], [], lineno=719, col_offset=8), Assign([Name('debugger', Store(), lineno=722, col_offset=8)], Attribute(Name('self', Load(), lineno=722, col_offset=19), 'debugger', Load(), lineno=722, col_offset=19), lineno=722, col_offset=8), TryFinally([TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=724, col_offset=12), 'tkconsole', Load(), lineno=724, col_offset=12), 'beginexecuting', Load(), lineno=724, col_offset=12), [], [], None, None, lineno=724, col_offset=12), lineno=724, col_offset=12), If(BoolOp(And(), [UnaryOp(Not(), Name('debugger', Load(), lineno=725, col_offset=19), lineno=725, col_offset=15), Compare(Attribute(Name('self', Load(), lineno=725, col_offset=32), 'rpcclt', Load(), lineno=725, col_offset=32), [IsNot()], [Name('None', Load(), lineno=725, col_offset=51)], lineno=725, col_offset=32)], lineno=725, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=726, col_offset=16), 'active_seq', Store(), lineno=726, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=726, col_offset=34), 'rpcclt', Load(), lineno=726, col_offset=34), 'asyncqueue', Load(), lineno=726, col_offset=34), [Str('exec', lineno=726, col_offset=57), Str('runcode', lineno=726, col_offset=65), Tuple([Name('code', Load(), lineno=727, col_offset=57)], Load(), lineno=727, col_offset=57), Dict([], [], lineno=727, col_offset=65)], [], None, None, lineno=726, col_offset=34), lineno=726, col_offset=16)], [If(Name('debugger', Load(), lineno=728, col_offset=17), [Expr(Call(Attribute(Name('debugger', Load(), lineno=729, col_offset=16), 'run', Load(), lineno=729, col_offset=16), [Name('code', Load(), lineno=729, col_offset=29), Attribute(Name('self', Load(), lineno=729, col_offset=35), 'locals', Load(), lineno=729, col_offset=35)], [], None, None, lineno=729, col_offset=16), lineno=729, col_offset=16)], [Exec(Name('code', Load(), lineno=731, col_offset=21), Attribute(Name('self', Load(), lineno=731, col_offset=29), 'locals', Load(), lineno=731, col_offset=29), None, lineno=731, col_offset=16)], lineno=728, col_offset=17)], lineno=725, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=732, col_offset=15), None, [If(UnaryOp(Not(), Attribute(Attribute(Name('self', Load(), lineno=733, col_offset=19), 'tkconsole', Load(), lineno=733, col_offset=19), 'closing', Load(), lineno=733, col_offset=19), lineno=733, col_offset=15), [If(Call(Attribute(Name('tkMessageBox', Load(), lineno=734, col_offset=19), 'askyesno', Load(), lineno=734, col_offset=19), [Str('Exit?', lineno=735, col_offset=20), Str('Do you want to exit altogether?', lineno=736, col_offset=20)], [keyword('default', Str('yes', lineno=737, col_offset=28)), keyword('master', Attribute(Attribute(Name('self', Load(), lineno=738, col_offset=27), 'tkconsole', Load(), lineno=738, col_offset=27), 'text', Load(), lineno=738, col_offset=27))], None, None, lineno=734, col_offset=19), [Raise(None, None, None, lineno=739, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=741, col_offset=20), 'showtraceback', Load(), lineno=741, col_offset=20), [], [], None, None, lineno=741, col_offset=20), lineno=741, col_offset=20)], lineno=734, col_offset=16)], [Raise(None, None, None, lineno=743, col_offset=16)], lineno=733, col_offset=12)], lineno=732, col_offset=8), ExceptHandler(None, None, [If(Name('use_subprocess', Load(), lineno=745, col_offset=15), [Print(Attribute(Attribute(Name('self', Load(), lineno=746, col_offset=24), 'tkconsole', Load(), lineno=746, col_offset=24), 'stderr', Load(), lineno=746, col_offset=24), [Str('IDLE internal error in runcode()', lineno=747, col_offset=25)], True, lineno=746, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=748, col_offset=16), 'showtraceback', Load(), lineno=748, col_offset=16), [], [], None, None, lineno=748, col_offset=16), lineno=748, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=749, col_offset=16), 'tkconsole', Load(), lineno=749, col_offset=16), 'endexecuting', Load(), lineno=749, col_offset=16), [], [], None, None, lineno=749, col_offset=16), lineno=749, col_offset=16)], [If(Attribute(Attribute(Name('self', Load(), lineno=751, col_offset=19), 'tkconsole', Load(), lineno=751, col_offset=19), 'canceled', Load(), lineno=751, col_offset=19), [Assign([Attribute(Attribute(Name('self', Load(), lineno=752, col_offset=20), 'tkconsole', Load(), lineno=752, col_offset=20), 'canceled', Store(), lineno=752, col_offset=20)], Name('False', Load(), lineno=752, col_offset=46), lineno=752, col_offset=20), Print(Attribute(Attribute(Name('self', Load(), lineno=753, col_offset=28), 'tkconsole', Load(), lineno=753, col_offset=28), 'stderr', Load(), lineno=753, col_offset=28), [Str('KeyboardInterrupt', lineno=753, col_offset=51)], True, lineno=753, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=755, col_offset=20), 'showtraceback', Load(), lineno=755, col_offset=20), [], [], None, None, lineno=755, col_offset=20), lineno=755, col_offset=20)], lineno=751, col_offset=16)], lineno=745, col_offset=12)], lineno=744, col_offset=8)], [], lineno=723, col_offset=8)], [If(UnaryOp(Not(), Name('use_subprocess', Load(), lineno=757, col_offset=19), lineno=757, col_offset=15), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=759, col_offset=20), 'tkconsole', Load(), lineno=759, col_offset=20), 'endexecuting', Load(), lineno=759, col_offset=20), [], [], None, None, lineno=759, col_offset=20), lineno=759, col_offset=20)], [ExceptHandler(Name('AttributeError', Load(), lineno=760, col_offset=23), None, [Pass( lineno=761, col_offset=20)], lineno=760, col_offset=16)], [], lineno=758, col_offset=16)], [], lineno=757, col_offset=12)], lineno=723, col_offset=8)], [], lineno=714, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=763, col_offset=14), Name('s', Param(), lineno=763, col_offset=20)], None, None, []), [Expr(Str('Override base class method', lineno=764, col_offset=8), lineno=764, col_offset=8), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=765, col_offset=8), 'tkconsole', Load(), lineno=765, col_offset=8), 'stderr', Load(), lineno=765, col_offset=8), 'write', Load(), lineno=765, col_offset=8), [Name('s', Load(), lineno=765, col_offset=36)], [], None, None, lineno=765, col_offset=8), lineno=765, col_offset=8)], [], lineno=763, col_offset=4), FunctionDef('display_port_binding_error', arguments([Name('self', Param(), lineno=767, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=768, col_offset=8), 'showerror', Load(), lineno=768, col_offset=8), [Str('Port Binding Error', lineno=769, col_offset=12), Str("IDLE can't bind to a TCP/IP port, which is necessary to communicate with its Python execution server.  This might be because no networking is installed on this computer.  Run IDLE with the -n command line switch to start without a subprocess and refer to Help/IDLE Help 'Running without a subprocess' for further details.", lineno=770, col_offset=12)], [keyword('master', Attribute(Attribute(Name('self', Load(), lineno=776, col_offset=19), 'tkconsole', Load(), lineno=776, col_offset=19), 'text', Load(), lineno=776, col_offset=19))], None, None, lineno=768, col_offset=8), lineno=768, col_offset=8)], [], lineno=767, col_offset=4), FunctionDef('display_no_subprocess_error', arguments([Name('self', Param(), lineno=778, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=779, col_offset=8), 'showerror', Load(), lineno=779, col_offset=8), [Str('Subprocess Startup Error', lineno=780, col_offset=12), Str("IDLE's subprocess didn't make connection.  Either IDLE can't start a subprocess or personal firewall software is blocking the connection.", lineno=781, col_offset=12)], [keyword('master', Attribute(Attribute(Name('self', Load(), lineno=784, col_offset=19), 'tkconsole', Load(), lineno=784, col_offset=19), 'text', Load(), lineno=784, col_offset=19))], None, None, lineno=779, col_offset=8), lineno=779, col_offset=8)], [], lineno=778, col_offset=4), FunctionDef('display_executing_dialog', arguments([Name('self', Param(), lineno=786, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=787, col_offset=8), 'showerror', Load(), lineno=787, col_offset=8), [Str('Already executing', lineno=788, col_offset=12), Str('The Python Shell window is already executing a command; please wait until it is finished.', lineno=789, col_offset=12)], [keyword('master', Attribute(Attribute(Name('self', Load(), lineno=791, col_offset=19), 'tkconsole', Load(), lineno=791, col_offset=19), 'text', Load(), lineno=791, col_offset=19))], None, None, lineno=787, col_offset=8), lineno=787, col_offset=8)], [], lineno=786, col_offset=4)], [], lineno=337, col_offset=0), ClassDef('PyShell', [Name('OutputWindow', Load(), lineno=794, col_offset=14)], [Assign([Name('shell_title', Store(), lineno=796, col_offset=4)], Str('Python Shell', lineno=796, col_offset=18), lineno=796, col_offset=4), Assign([Name('ColorDelegator', Store(), lineno=799, col_offset=4)], Name('ModifiedColorDelegator', Load(), lineno=799, col_offset=21), lineno=799, col_offset=4), Assign([Name('UndoDelegator', Store(), lineno=800, col_offset=4)], Name('ModifiedUndoDelegator', Load(), lineno=800, col_offset=20), lineno=800, col_offset=4), Assign([Name('menu_specs', Store(), lineno=803, col_offset=4)], List([Tuple([Str('file', lineno=804, col_offset=9), Str('_File', lineno=804, col_offset=17)], Load(), lineno=804, col_offset=9), Tuple([Str('edit', lineno=805, col_offset=9), Str('_Edit', lineno=805, col_offset=17)], Load(), lineno=805, col_offset=9), Tuple([Str('debug', lineno=806, col_offset=9), Str('_Debug', lineno=806, col_offset=18)], Load(), lineno=806, col_offset=9), Tuple([Str('options', lineno=807, col_offset=9), Str('_Options', lineno=807, col_offset=20)], Load(), lineno=807, col_offset=9), Tuple([Str('windows', lineno=808, col_offset=9), Str('_Windows', lineno=808, col_offset=20)], Load(), lineno=808, col_offset=9), Tuple([Str('help', lineno=809, col_offset=9), Str('_Help', lineno=809, col_offset=17)], Load(), lineno=809, col_offset=9)], Load(), lineno=803, col_offset=17), lineno=803, col_offset=4), If(Call(Attribute(Name('macosxSupport', Load(), lineno=812, col_offset=7), 'runningAsOSXApp', Load(), lineno=812, col_offset=7), [], [], None, None, lineno=812, col_offset=7), [Delete([Subscript(Name('menu_specs', Load(), lineno=813, col_offset=12), Index(Num(-3, lineno=813, col_offset=24)), Del(), lineno=813, col_offset=12)], lineno=813, col_offset=8), Assign([Subscript(Name('menu_specs', Load(), lineno=814, col_offset=8), Index(Num(-2, lineno=814, col_offset=20)), Store(), lineno=814, col_offset=8)], Tuple([Str('windows', lineno=814, col_offset=26), Str('_Window', lineno=814, col_offset=37)], Load(), lineno=814, col_offset=26), lineno=814, col_offset=8)], [], lineno=812, col_offset=4), ImportFrom('idlelib.IdleHistory', [alias('History', None)], 0, lineno=818, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=820, col_offset=17), Name('flist', Param(), lineno=820, col_offset=23)], None, None, [Name('None', Load(), lineno=820, col_offset=29)]), [If(Name('use_subprocess', Load(), lineno=821, col_offset=11), [Assign([Name('ms', Store(), lineno=822, col_offset=12)], Attribute(Name('self', Load(), lineno=822, col_offset=17), 'menu_specs', Load(), lineno=822, col_offset=17), lineno=822, col_offset=12), If(Compare(Subscript(Subscript(Name('ms', Load(), lineno=823, col_offset=15), Index(Num(2, lineno=823, col_offset=18)), Load(), lineno=823, col_offset=15), Index(Num(0, lineno=823, col_offset=21)), Load(), lineno=823, col_offset=15), [NotEq()], [Str('shell', lineno=823, col_offset=27)], lineno=823, col_offset=15), [Expr(Call(Attribute(Name('ms', Load(), lineno=824, col_offset=16), 'insert', Load(), lineno=824, col_offset=16), [Num(2, lineno=824, col_offset=26), Tuple([Str('shell', lineno=824, col_offset=30), Str('She_ll', lineno=824, col_offset=39)], Load(), lineno=824, col_offset=30)], [], None, None, lineno=824, col_offset=16), lineno=824, col_offset=16)], [], lineno=823, col_offset=12)], [], lineno=821, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=825, col_offset=8), 'interp', Store(), lineno=825, col_offset=8)], Call(Name('ModifiedInterpreter', Load(), lineno=825, col_offset=22), [Name('self', Load(), lineno=825, col_offset=42)], [], None, None, lineno=825, col_offset=22), lineno=825, col_offset=8), If(Compare(Name('flist', Load(), lineno=826, col_offset=11), [Is()], [Name('None', Load(), lineno=826, col_offset=20)], lineno=826, col_offset=11), [Assign([Name('root', Store(), lineno=827, col_offset=12)], Call(Name('Tk', Load(), lineno=827, col_offset=19), [], [], None, None, lineno=827, col_offset=19), lineno=827, col_offset=12), Expr(Call(Name('fixwordbreaks', Load(), lineno=828, col_offset=12), [Name('root', Load(), lineno=828, col_offset=26)], [], None, None, lineno=828, col_offset=12), lineno=828, col_offset=12), Expr(Call(Attribute(Name('root', Load(), lineno=829, col_offset=12), 'withdraw', Load(), lineno=829, col_offset=12), [], [], None, None, lineno=829, col_offset=12), lineno=829, col_offset=12), Assign([Name('flist', Store(), lineno=830, col_offset=12)], Call(Name('PyShellFileList', Load(), lineno=830, col_offset=20), [Name('root', Load(), lineno=830, col_offset=36)], [], None, None, lineno=830, col_offset=20), lineno=830, col_offset=12)], [], lineno=826, col_offset=8), Expr(Call(Attribute(Name('OutputWindow', Load(), lineno=832, col_offset=8), '__init__', Load(), lineno=832, col_offset=8), [Name('self', Load(), lineno=832, col_offset=30), Name('flist', Load(), lineno=832, col_offset=36), Name('None', Load(), lineno=832, col_offset=43), Name('None', Load(), lineno=832, col_offset=49)], [], None, None, lineno=832, col_offset=8), lineno=832, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=835, col_offset=8), 'usetabs', Store(), lineno=835, col_offset=8)], Name('True', Load(), lineno=835, col_offset=23), lineno=835, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=837, col_offset=8), 'indentwidth', Store(), lineno=837, col_offset=8)], Num(8, lineno=837, col_offset=27), lineno=837, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=838, col_offset=8), 'context_use_ps1', Store(), lineno=838, col_offset=8)], Name('True', Load(), lineno=838, col_offset=31), lineno=838, col_offset=8), Assign([Name('text', Store(), lineno=840, col_offset=8)], Attribute(Name('self', Load(), lineno=840, col_offset=15), 'text', Load(), lineno=840, col_offset=15), lineno=840, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=841, col_offset=8), 'configure', Load(), lineno=841, col_offset=8), [], [keyword('wrap', Str('char', lineno=841, col_offset=28))], None, None, lineno=841, col_offset=8), lineno=841, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=842, col_offset=8), 'bind', Load(), lineno=842, col_offset=8), [Str('<<newline-and-indent>>', lineno=842, col_offset=18), Attribute(Name('self', Load(), lineno=842, col_offset=44), 'enter_callback', Load(), lineno=842, col_offset=44)], [], None, None, lineno=842, col_offset=8), lineno=842, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=843, col_offset=8), 'bind', Load(), lineno=843, col_offset=8), [Str('<<plain-newline-and-indent>>', lineno=843, col_offset=18), Attribute(Name('self', Load(), lineno=843, col_offset=50), 'linefeed_callback', Load(), lineno=843, col_offset=50)], [], None, None, lineno=843, col_offset=8), lineno=843, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=844, col_offset=8), 'bind', Load(), lineno=844, col_offset=8), [Str('<<interrupt-execution>>', lineno=844, col_offset=18), Attribute(Name('self', Load(), lineno=844, col_offset=45), 'cancel_callback', Load(), lineno=844, col_offset=45)], [], None, None, lineno=844, col_offset=8), lineno=844, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=845, col_offset=8), 'bind', Load(), lineno=845, col_offset=8), [Str('<<end-of-file>>', lineno=845, col_offset=18), Attribute(Name('self', Load(), lineno=845, col_offset=37), 'eof_callback', Load(), lineno=845, col_offset=37)], [], None, None, lineno=845, col_offset=8), lineno=845, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=846, col_offset=8), 'bind', Load(), lineno=846, col_offset=8), [Str('<<open-stack-viewer>>', lineno=846, col_offset=18), Attribute(Name('self', Load(), lineno=846, col_offset=43), 'open_stack_viewer', Load(), lineno=846, col_offset=43)], [], None, None, lineno=846, col_offset=8), lineno=846, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=847, col_offset=8), 'bind', Load(), lineno=847, col_offset=8), [Str('<<toggle-debugger>>', lineno=847, col_offset=18), Attribute(Name('self', Load(), lineno=847, col_offset=41), 'toggle_debugger', Load(), lineno=847, col_offset=41)], [], None, None, lineno=847, col_offset=8), lineno=847, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=848, col_offset=8), 'bind', Load(), lineno=848, col_offset=8), [Str('<<toggle-jit-stack-viewer>>', lineno=848, col_offset=18), Attribute(Name('self', Load(), lineno=848, col_offset=49), 'toggle_jit_stack_viewer', Load(), lineno=848, col_offset=49)], [], None, None, lineno=848, col_offset=8), lineno=848, col_offset=8), If(Name('use_subprocess', Load(), lineno=849, col_offset=11), [Expr(Call(Attribute(Name('text', Load(), lineno=850, col_offset=12), 'bind', Load(), lineno=850, col_offset=12), [Str('<<view-restart>>', lineno=850, col_offset=22), Attribute(Name('self', Load(), lineno=850, col_offset=42), 'view_restart_mark', Load(), lineno=850, col_offset=42)], [], None, None, lineno=850, col_offset=12), lineno=850, col_offset=12), Expr(Call(Attribute(Name('text', Load(), lineno=851, col_offset=12), 'bind', Load(), lineno=851, col_offset=12), [Str('<<restart-shell>>', lineno=851, col_offset=22), Attribute(Name('self', Load(), lineno=851, col_offset=43), 'restart_shell', Load(), lineno=851, col_offset=43)], [], None, None, lineno=851, col_offset=12), lineno=851, col_offset=12)], [], lineno=849, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=853, col_offset=8), 'save_stdout', Store(), lineno=853, col_offset=8)], Attribute(Name('sys', Load(), lineno=853, col_offset=27), 'stdout', Load(), lineno=853, col_offset=27), lineno=853, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=854, col_offset=8), 'save_stderr', Store(), lineno=854, col_offset=8)], Attribute(Name('sys', Load(), lineno=854, col_offset=27), 'stderr', Load(), lineno=854, col_offset=27), lineno=854, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=855, col_offset=8), 'save_stdin', Store(), lineno=855, col_offset=8)], Attribute(Name('sys', Load(), lineno=855, col_offset=26), 'stdin', Load(), lineno=855, col_offset=26), lineno=855, col_offset=8), ImportFrom('idlelib', [alias('IOBinding', None)], 0, lineno=856, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=857, col_offset=8), 'stdout', Store(), lineno=857, col_offset=8)], Call(Name('PseudoFile', Load(), lineno=857, col_offset=22), [Name('self', Load(), lineno=857, col_offset=33), Str('stdout', lineno=857, col_offset=39), Attribute(Name('IOBinding', Load(), lineno=857, col_offset=49), 'encoding', Load(), lineno=857, col_offset=49)], [], None, None, lineno=857, col_offset=22), lineno=857, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=858, col_offset=8), 'stderr', Store(), lineno=858, col_offset=8)], Call(Name('PseudoFile', Load(), lineno=858, col_offset=22), [Name('self', Load(), lineno=858, col_offset=33), Str('stderr', lineno=858, col_offset=39), Attribute(Name('IOBinding', Load(), lineno=858, col_offset=49), 'encoding', Load(), lineno=858, col_offset=49)], [], None, None, lineno=858, col_offset=22), lineno=858, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=859, col_offset=8), 'console', Store(), lineno=859, col_offset=8)], Call(Name('PseudoFile', Load(), lineno=859, col_offset=23), [Name('self', Load(), lineno=859, col_offset=34), Str('console', lineno=859, col_offset=40), Attribute(Name('IOBinding', Load(), lineno=859, col_offset=51), 'encoding', Load(), lineno=859, col_offset=51)], [], None, None, lineno=859, col_offset=23), lineno=859, col_offset=8), If(UnaryOp(Not(), Name('use_subprocess', Load(), lineno=860, col_offset=15), lineno=860, col_offset=11), [Assign([Attribute(Name('sys', Load(), lineno=861, col_offset=12), 'stdout', Store(), lineno=861, col_offset=12)], Attribute(Name('self', Load(), lineno=861, col_offset=25), 'stdout', Load(), lineno=861, col_offset=25), lineno=861, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=862, col_offset=12), 'stderr', Store(), lineno=862, col_offset=12)], Attribute(Name('self', Load(), lineno=862, col_offset=25), 'stderr', Load(), lineno=862, col_offset=25), lineno=862, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=863, col_offset=12), 'stdin', Store(), lineno=863, col_offset=12)], Name('self', Load(), lineno=863, col_offset=24), lineno=863, col_offset=12)], [], lineno=860, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=865, col_offset=8), 'history', Store(), lineno=865, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=865, col_offset=23), 'History', Load(), lineno=865, col_offset=23), [Attribute(Name('self', Load(), lineno=865, col_offset=36), 'text', Load(), lineno=865, col_offset=36)], [], None, None, lineno=865, col_offset=23), lineno=865, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=867, col_offset=8), 'pollinterval', Store(), lineno=867, col_offset=8)], Num(50, lineno=867, col_offset=28), lineno=867, col_offset=8)], [], lineno=820, col_offset=4), FunctionDef('get_standard_extension_names', arguments([Name('self', Param(), lineno=869, col_offset=37)], None, None, []), [Return(Call(Attribute(Name('idleConf', Load(), lineno=870, col_offset=15), 'GetExtensions', Load(), lineno=870, col_offset=15), [], [keyword('shell_only', Name('True', Load(), lineno=870, col_offset=49))], None, None, lineno=870, col_offset=15), lineno=870, col_offset=8)], [], lineno=869, col_offset=4), Assign([Name('reading', Store(), lineno=872, col_offset=4)], Name('False', Load(), lineno=872, col_offset=14), lineno=872, col_offset=4), Assign([Name('executing', Store(), lineno=873, col_offset=4)], Name('False', Load(), lineno=873, col_offset=16), lineno=873, col_offset=4), Assign([Name('canceled', Store(), lineno=874, col_offset=4)], Name('False', Load(), lineno=874, col_offset=15), lineno=874, col_offset=4), Assign([Name('endoffile', Store(), lineno=875, col_offset=4)], Name('False', Load(), lineno=875, col_offset=16), lineno=875, col_offset=4), Assign([Name('closing', Store(), lineno=876, col_offset=4)], Name('False', Load(), lineno=876, col_offset=14), lineno=876, col_offset=4), FunctionDef('set_warning_stream', arguments([Name('self', Param(), lineno=878, col_offset=27), Name('stream', Param(), lineno=878, col_offset=33)], None, None, []), [Global(['warning_stream'], lineno=879, col_offset=8), Assign([Name('warning_stream', Store(), lineno=880, col_offset=8)], Name('stream', Load(), lineno=880, col_offset=25), lineno=880, col_offset=8)], [], lineno=878, col_offset=4), FunctionDef('get_warning_stream', arguments([Name('self', Param(), lineno=882, col_offset=27)], None, None, []), [Return(Name('warning_stream', Load(), lineno=883, col_offset=15), lineno=883, col_offset=8)], [], lineno=882, col_offset=4), FunctionDef('toggle_debugger', arguments([Name('self', Param(), lineno=885, col_offset=24), Name('event', Param(), lineno=885, col_offset=30)], None, None, [Name('None', Load(), lineno=885, col_offset=36)]), [If(Attribute(Name('self', Load(), lineno=886, col_offset=11), 'executing', Load(), lineno=886, col_offset=11), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=887, col_offset=12), 'showerror', Load(), lineno=887, col_offset=12), [Str("Don't debug now", lineno=887, col_offset=35), Str('You can only toggle the debugger when idle', lineno=888, col_offset=16)], [keyword('master', Attribute(Name('self', Load(), lineno=889, col_offset=23), 'text', Load(), lineno=889, col_offset=23))], None, None, lineno=887, col_offset=12), lineno=887, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=890, col_offset=12), 'set_debugger_indicator', Load(), lineno=890, col_offset=12), [], [], None, None, lineno=890, col_offset=12), lineno=890, col_offset=12), Return(Str('break', lineno=891, col_offset=19), lineno=891, col_offset=12)], [Assign([Name('db', Store(), lineno=893, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=893, col_offset=17), 'interp', Load(), lineno=893, col_offset=17), 'getdebugger', Load(), lineno=893, col_offset=17), [], [], None, None, lineno=893, col_offset=17), lineno=893, col_offset=12), If(Name('db', Load(), lineno=894, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=895, col_offset=16), 'close_debugger', Load(), lineno=895, col_offset=16), [], [], None, None, lineno=895, col_offset=16), lineno=895, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=897, col_offset=16), 'open_debugger', Load(), lineno=897, col_offset=16), [], [], None, None, lineno=897, col_offset=16), lineno=897, col_offset=16)], lineno=894, col_offset=12)], lineno=886, col_offset=8)], [], lineno=885, col_offset=4), FunctionDef('set_debugger_indicator', arguments([Name('self', Param(), lineno=899, col_offset=31)], None, None, []), [Assign([Name('db', Store(), lineno=900, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=900, col_offset=13), 'interp', Load(), lineno=900, col_offset=13), 'getdebugger', Load(), lineno=900, col_offset=13), [], [], None, None, lineno=900, col_offset=13), lineno=900, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=901, col_offset=8), 'setvar', Load(), lineno=901, col_offset=8), [Str('<<toggle-debugger>>', lineno=901, col_offset=20), UnaryOp(Not(), UnaryOp(Not(), Name('db', Load(), lineno=901, col_offset=51), lineno=901, col_offset=47), lineno=901, col_offset=43)], [], None, None, lineno=901, col_offset=8), lineno=901, col_offset=8)], [], lineno=899, col_offset=4), FunctionDef('toggle_jit_stack_viewer', arguments([Name('self', Param(), lineno=903, col_offset=32), Name('event', Param(), lineno=903, col_offset=38)], None, None, [Name('None', Load(), lineno=903, col_offset=44)]), [Pass( lineno=904, col_offset=8)], [], lineno=903, col_offset=4), FunctionDef('close_debugger', arguments([Name('self', Param(), lineno=906, col_offset=23)], None, None, []), [Assign([Name('db', Store(), lineno=907, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=907, col_offset=13), 'interp', Load(), lineno=907, col_offset=13), 'getdebugger', Load(), lineno=907, col_offset=13), [], [], None, None, lineno=907, col_offset=13), lineno=907, col_offset=8), If(Name('db', Load(), lineno=908, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=909, col_offset=12), 'interp', Load(), lineno=909, col_offset=12), 'setdebugger', Load(), lineno=909, col_offset=12), [Name('None', Load(), lineno=909, col_offset=36)], [], None, None, lineno=909, col_offset=12), lineno=909, col_offset=12), Expr(Call(Attribute(Name('db', Load(), lineno=910, col_offset=12), 'close', Load(), lineno=910, col_offset=12), [], [], None, None, lineno=910, col_offset=12), lineno=910, col_offset=12), If(Attribute(Attribute(Name('self', Load(), lineno=911, col_offset=15), 'interp', Load(), lineno=911, col_offset=15), 'rpcclt', Load(), lineno=911, col_offset=15), [Expr(Call(Attribute(Name('RemoteDebugger', Load(), lineno=912, col_offset=16), 'close_remote_debugger', Load(), lineno=912, col_offset=16), [Attribute(Attribute(Name('self', Load(), lineno=912, col_offset=53), 'interp', Load(), lineno=912, col_offset=53), 'rpcclt', Load(), lineno=912, col_offset=53)], [], None, None, lineno=912, col_offset=16), lineno=912, col_offset=16)], [], lineno=911, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=913, col_offset=12), 'resetoutput', Load(), lineno=913, col_offset=12), [], [], None, None, lineno=913, col_offset=12), lineno=913, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=914, col_offset=12), 'console', Load(), lineno=914, col_offset=12), 'write', Load(), lineno=914, col_offset=12), [Str('[DEBUG OFF]\n', lineno=914, col_offset=31)], [], None, None, lineno=914, col_offset=12), lineno=914, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=915, col_offset=12), 'ps1', Store(), lineno=915, col_offset=12)], Str('>>> ', lineno=915, col_offset=22), lineno=915, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=916, col_offset=12), 'showprompt', Load(), lineno=916, col_offset=12), [], [], None, None, lineno=916, col_offset=12), lineno=916, col_offset=12)], [], lineno=908, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=917, col_offset=8), 'set_debugger_indicator', Load(), lineno=917, col_offset=8), [], [], None, None, lineno=917, col_offset=8), lineno=917, col_offset=8)], [], lineno=906, col_offset=4), FunctionDef('open_debugger', arguments([Name('self', Param(), lineno=919, col_offset=22)], None, None, []), [If(Attribute(Attribute(Name('self', Load(), lineno=920, col_offset=11), 'interp', Load(), lineno=920, col_offset=11), 'rpcclt', Load(), lineno=920, col_offset=11), [Assign([Name('dbg_gui', Store(), lineno=921, col_offset=12)], Call(Attribute(Name('RemoteDebugger', Load(), lineno=921, col_offset=22), 'start_remote_debugger', Load(), lineno=921, col_offset=22), [Attribute(Attribute(Name('self', Load(), lineno=921, col_offset=59), 'interp', Load(), lineno=921, col_offset=59), 'rpcclt', Load(), lineno=921, col_offset=59), Name('self', Load(), lineno=922, col_offset=59)], [], None, None, lineno=921, col_offset=22), lineno=921, col_offset=12)], [Assign([Name('dbg_gui', Store(), lineno=924, col_offset=12)], Call(Attribute(Name('Debugger', Load(), lineno=924, col_offset=22), 'Debugger', Load(), lineno=924, col_offset=22), [Name('self', Load(), lineno=924, col_offset=40)], [], None, None, lineno=924, col_offset=22), lineno=924, col_offset=12)], lineno=920, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=925, col_offset=8), 'interp', Load(), lineno=925, col_offset=8), 'setdebugger', Load(), lineno=925, col_offset=8), [Name('dbg_gui', Load(), lineno=925, col_offset=32)], [], None, None, lineno=925, col_offset=8), lineno=925, col_offset=8), Expr(Call(Attribute(Name('dbg_gui', Load(), lineno=926, col_offset=8), 'load_breakpoints', Load(), lineno=926, col_offset=8), [], [], None, None, lineno=926, col_offset=8), lineno=926, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=927, col_offset=8), 'ps1', Store(), lineno=927, col_offset=8)], Str('[DEBUG ON]\n>>> ', lineno=927, col_offset=18), lineno=927, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=928, col_offset=8), 'showprompt', Load(), lineno=928, col_offset=8), [], [], None, None, lineno=928, col_offset=8), lineno=928, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=929, col_offset=8), 'set_debugger_indicator', Load(), lineno=929, col_offset=8), [], [], None, None, lineno=929, col_offset=8), lineno=929, col_offset=8)], [], lineno=919, col_offset=4), FunctionDef('beginexecuting', arguments([Name('self', Param(), lineno=931, col_offset=23)], None, None, []), [Expr(Str('Helper for ModifiedInterpreter', lineno=932, col_offset=8), lineno=932, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=933, col_offset=8), 'resetoutput', Load(), lineno=933, col_offset=8), [], [], None, None, lineno=933, col_offset=8), lineno=933, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=934, col_offset=8), 'executing', Store(), lineno=934, col_offset=8)], Num(1, lineno=934, col_offset=25), lineno=934, col_offset=8)], [], lineno=931, col_offset=4), FunctionDef('endexecuting', arguments([Name('self', Param(), lineno=936, col_offset=21)], None, None, []), [Expr(Str('Helper for ModifiedInterpreter', lineno=937, col_offset=8), lineno=937, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=938, col_offset=8), 'executing', Store(), lineno=938, col_offset=8)], Num(0, lineno=938, col_offset=25), lineno=938, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=939, col_offset=8), 'canceled', Store(), lineno=939, col_offset=8)], Num(0, lineno=939, col_offset=24), lineno=939, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=940, col_offset=8), 'showprompt', Load(), lineno=940, col_offset=8), [], [], None, None, lineno=940, col_offset=8), lineno=940, col_offset=8)], [], lineno=936, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=942, col_offset=14)], None, None, []), [Expr(Str('Extend EditorWindow.close()', lineno=943, col_offset=8), lineno=943, col_offset=8), If(Attribute(Name('self', Load(), lineno=944, col_offset=11), 'executing', Load(), lineno=944, col_offset=11), [Assign([Name('response', Store(), lineno=945, col_offset=12)], Call(Attribute(Name('tkMessageBox', Load(), lineno=945, col_offset=23), 'askokcancel', Load(), lineno=945, col_offset=23), [Str('Kill?', lineno=946, col_offset=16), Str('The program is still running!\n Do you want to kill it?', lineno=947, col_offset=16)], [keyword('default', Str('ok', lineno=948, col_offset=24)), keyword('parent', Attribute(Name('self', Load(), lineno=949, col_offset=23), 'text', Load(), lineno=949, col_offset=23))], None, None, lineno=945, col_offset=23), lineno=945, col_offset=12), If(Compare(Name('response', Load(), lineno=950, col_offset=15), [Is()], [Name('False', Load(), lineno=950, col_offset=27)], lineno=950, col_offset=15), [Return(Str('cancel', lineno=951, col_offset=23), lineno=951, col_offset=16)], [], lineno=950, col_offset=12)], [], lineno=944, col_offset=8), If(Attribute(Name('self', Load(), lineno=952, col_offset=11), 'reading', Load(), lineno=952, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=953, col_offset=12), 'top', Load(), lineno=953, col_offset=12), 'quit', Load(), lineno=953, col_offset=12), [], [], None, None, lineno=953, col_offset=12), lineno=953, col_offset=12)], [], lineno=952, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=954, col_offset=8), 'canceled', Store(), lineno=954, col_offset=8)], Name('True', Load(), lineno=954, col_offset=24), lineno=954, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=955, col_offset=8), 'closing', Store(), lineno=955, col_offset=8)], Name('True', Load(), lineno=955, col_offset=23), lineno=955, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=957, col_offset=8), 'text', Load(), lineno=957, col_offset=8), 'after', Load(), lineno=957, col_offset=8), [BinOp(Num(2, lineno=957, col_offset=24), Mult(), Attribute(Name('self', Load(), lineno=957, col_offset=28), 'pollinterval', Load(), lineno=957, col_offset=28), lineno=957, col_offset=24), Attribute(Name('self', Load(), lineno=957, col_offset=47), 'close2', Load(), lineno=957, col_offset=47)], [], None, None, lineno=957, col_offset=8), lineno=957, col_offset=8)], [], lineno=942, col_offset=4), FunctionDef('close2', arguments([Name('self', Param(), lineno=959, col_offset=15)], None, None, []), [Return(Call(Attribute(Name('EditorWindow', Load(), lineno=960, col_offset=15), 'close', Load(), lineno=960, col_offset=15), [Name('self', Load(), lineno=960, col_offset=34)], [], None, None, lineno=960, col_offset=15), lineno=960, col_offset=8)], [], lineno=959, col_offset=4), FunctionDef('_close', arguments([Name('self', Param(), lineno=962, col_offset=15)], None, None, []), [Expr(Str('Extend EditorWindow._close(), shut down debugger and execution server', lineno=963, col_offset=8), lineno=963, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=964, col_offset=8), 'close_debugger', Load(), lineno=964, col_offset=8), [], [], None, None, lineno=964, col_offset=8), lineno=964, col_offset=8), If(Name('use_subprocess', Load(), lineno=965, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=966, col_offset=12), 'interp', Load(), lineno=966, col_offset=12), 'kill_subprocess', Load(), lineno=966, col_offset=12), [], [], None, None, lineno=966, col_offset=12), lineno=966, col_offset=12)], [], lineno=965, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=968, col_offset=8), 'stdout', Store(), lineno=968, col_offset=8)], Attribute(Name('self', Load(), lineno=968, col_offset=21), 'save_stdout', Load(), lineno=968, col_offset=21), lineno=968, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=969, col_offset=8), 'stderr', Store(), lineno=969, col_offset=8)], Attribute(Name('self', Load(), lineno=969, col_offset=21), 'save_stderr', Load(), lineno=969, col_offset=21), lineno=969, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=970, col_offset=8), 'stdin', Store(), lineno=970, col_offset=8)], Attribute(Name('self', Load(), lineno=970, col_offset=20), 'save_stdin', Load(), lineno=970, col_offset=20), lineno=970, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=972, col_offset=8), 'interp', Store(), lineno=972, col_offset=8)], Name('None', Load(), lineno=972, col_offset=22), lineno=972, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=973, col_offset=8), 'console', Store(), lineno=973, col_offset=8)], Name('None', Load(), lineno=973, col_offset=23), lineno=973, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=974, col_offset=8), 'flist', Load(), lineno=974, col_offset=8), 'pyshell', Store(), lineno=974, col_offset=8)], Name('None', Load(), lineno=974, col_offset=29), lineno=974, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=975, col_offset=8), 'history', Store(), lineno=975, col_offset=8)], Name('None', Load(), lineno=975, col_offset=23), lineno=975, col_offset=8), Expr(Call(Attribute(Name('EditorWindow', Load(), lineno=976, col_offset=8), '_close', Load(), lineno=976, col_offset=8), [Name('self', Load(), lineno=976, col_offset=28)], [], None, None, lineno=976, col_offset=8), lineno=976, col_offset=8)], [], lineno=962, col_offset=4), FunctionDef('ispythonsource', arguments([Name('self', Param(), lineno=978, col_offset=23), Name('filename', Param(), lineno=978, col_offset=29)], None, None, []), [Expr(Str('Override EditorWindow method: never remove the colorizer', lineno=979, col_offset=8), lineno=979, col_offset=8), Return(Name('True', Load(), lineno=980, col_offset=15), lineno=980, col_offset=8)], [], lineno=978, col_offset=4), FunctionDef('short_title', arguments([Name('self', Param(), lineno=982, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=983, col_offset=15), 'shell_title', Load(), lineno=983, col_offset=15), lineno=983, col_offset=8)], [], lineno=982, col_offset=4), Assign([Name('COPYRIGHT', Store(), lineno=985, col_offset=4)], Str('Type "copyright", "credits" or "license()" for more information.', lineno=986, col_offset=10), lineno=985, col_offset=4), FunctionDef('begin', arguments([Name('self', Param(), lineno=988, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=989, col_offset=8), 'resetoutput', Load(), lineno=989, col_offset=8), [], [], None, None, lineno=989, col_offset=8), lineno=989, col_offset=8), If(Name('use_subprocess', Load(), lineno=990, col_offset=11), [Assign([Name('nosub', Store(), lineno=991, col_offset=12)], Str('', lineno=991, col_offset=20), lineno=991, col_offset=12), Assign([Name('client', Store(), lineno=992, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=992, col_offset=21), 'interp', Load(), lineno=992, col_offset=21), 'start_subprocess', Load(), lineno=992, col_offset=21), [], [], None, None, lineno=992, col_offset=21), lineno=992, col_offset=12), If(UnaryOp(Not(), Name('client', Load(), lineno=993, col_offset=19), lineno=993, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=994, col_offset=16), 'close', Load(), lineno=994, col_offset=16), [], [], None, None, lineno=994, col_offset=16), lineno=994, col_offset=16), Return(Name('False', Load(), lineno=995, col_offset=23), lineno=995, col_offset=16)], [], lineno=993, col_offset=12)], [Assign([Name('nosub', Store(), lineno=997, col_offset=12)], Str('==== No Subprocess ====', lineno=997, col_offset=20), lineno=997, col_offset=12)], lineno=990, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=998, col_offset=8), 'write', Load(), lineno=998, col_offset=8), [BinOp(Str('Python %s on %s\n%s\n%s', lineno=998, col_offset=19), Mod(), Tuple([Attribute(Name('sys', Load(), lineno=999, col_offset=20), 'version', Load(), lineno=999, col_offset=20), Attribute(Name('sys', Load(), lineno=999, col_offset=33), 'platform', Load(), lineno=999, col_offset=33), Attribute(Name('self', Load(), lineno=999, col_offset=47), 'COPYRIGHT', Load(), lineno=999, col_offset=47), Name('nosub', Load(), lineno=999, col_offset=63)], Load(), lineno=999, col_offset=20), lineno=998, col_offset=19)], [], None, None, lineno=998, col_offset=8), lineno=998, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1000, col_offset=8), 'showprompt', Load(), lineno=1000, col_offset=8), [], [], None, None, lineno=1000, col_offset=8), lineno=1000, col_offset=8), Import([alias('Tkinter', None)], lineno=1001, col_offset=8), Assign([Attribute(Name('Tkinter', Load(), lineno=1002, col_offset=8), '_default_root', Store(), lineno=1002, col_offset=8)], Name('None', Load(), lineno=1002, col_offset=32), lineno=1002, col_offset=8), Return(Name('True', Load(), lineno=1003, col_offset=15), lineno=1003, col_offset=8)], [], lineno=988, col_offset=4), FunctionDef('readline', arguments([Name('self', Param(), lineno=1005, col_offset=17)], None, None, []), [Assign([Name('save', Store(), lineno=1006, col_offset=8)], Attribute(Name('self', Load(), lineno=1006, col_offset=15), 'reading', Load(), lineno=1006, col_offset=15), lineno=1006, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=1008, col_offset=12), 'reading', Store(), lineno=1008, col_offset=12)], Num(1, lineno=1008, col_offset=27), lineno=1008, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1009, col_offset=12), 'top', Load(), lineno=1009, col_offset=12), 'mainloop', Load(), lineno=1009, col_offset=12), [], [], None, None, lineno=1009, col_offset=12), lineno=1009, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=1011, col_offset=12), 'reading', Store(), lineno=1011, col_offset=12)], Name('save', Load(), lineno=1011, col_offset=27), lineno=1011, col_offset=12)], lineno=1007, col_offset=8), Assign([Name('line', Store(), lineno=1012, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1012, col_offset=15), 'text', Load(), lineno=1012, col_offset=15), 'get', Load(), lineno=1012, col_offset=15), [Str('iomark', lineno=1012, col_offset=29), Str('end-1c', lineno=1012, col_offset=39)], [], None, None, lineno=1012, col_offset=15), lineno=1012, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=1013, col_offset=11), [Name('line', Load(), lineno=1013, col_offset=15)], [], None, None, lineno=1013, col_offset=11), [Eq()], [Num(0, lineno=1013, col_offset=24)], lineno=1013, col_offset=11), [Assign([Name('line', Store(), lineno=1014, col_offset=12)], Str('\n', lineno=1014, col_offset=19), lineno=1014, col_offset=12)], [], lineno=1013, col_offset=8), If(Call(Name('isinstance', Load(), lineno=1015, col_offset=11), [Name('line', Load(), lineno=1015, col_offset=22), Name('unicode', Load(), lineno=1015, col_offset=28)], [], None, None, lineno=1015, col_offset=11), [ImportFrom('idlelib', [alias('IOBinding', None)], 0, lineno=1016, col_offset=12), TryExcept([Assign([Name('line', Store(), lineno=1018, col_offset=16)], Call(Attribute(Name('line', Load(), lineno=1018, col_offset=23), 'encode', Load(), lineno=1018, col_offset=23), [Attribute(Name('IOBinding', Load(), lineno=1018, col_offset=35), 'encoding', Load(), lineno=1018, col_offset=35)], [], None, None, lineno=1018, col_offset=23), lineno=1018, col_offset=16)], [ExceptHandler(Name('UnicodeError', Load(), lineno=1019, col_offset=19), None, [Pass( lineno=1020, col_offset=16)], lineno=1019, col_offset=12)], [], lineno=1017, col_offset=12)], [], lineno=1015, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1021, col_offset=8), 'resetoutput', Load(), lineno=1021, col_offset=8), [], [], None, None, lineno=1021, col_offset=8), lineno=1021, col_offset=8), If(Attribute(Name('self', Load(), lineno=1022, col_offset=11), 'canceled', Load(), lineno=1022, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=1023, col_offset=12), 'canceled', Store(), lineno=1023, col_offset=12)], Num(0, lineno=1023, col_offset=28), lineno=1023, col_offset=12), If(UnaryOp(Not(), Name('use_subprocess', Load(), lineno=1024, col_offset=19), lineno=1024, col_offset=15), [Raise(Name('KeyboardInterrupt', Load(), lineno=1025, col_offset=22), None, None, lineno=1025, col_offset=16)], [], lineno=1024, col_offset=12)], [], lineno=1022, col_offset=8), If(Attribute(Name('self', Load(), lineno=1026, col_offset=11), 'endoffile', Load(), lineno=1026, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=1027, col_offset=12), 'endoffile', Store(), lineno=1027, col_offset=12)], Num(0, lineno=1027, col_offset=29), lineno=1027, col_offset=12), Assign([Name('line', Store(), lineno=1028, col_offset=12)], Str('', lineno=1028, col_offset=19), lineno=1028, col_offset=12)], [], lineno=1026, col_offset=8), Return(Name('line', Load(), lineno=1029, col_offset=15), lineno=1029, col_offset=8)], [], lineno=1005, col_offset=4), FunctionDef('isatty', arguments([Name('self', Param(), lineno=1031, col_offset=15)], None, None, []), [Return(Name('True', Load(), lineno=1032, col_offset=15), lineno=1032, col_offset=8)], [], lineno=1031, col_offset=4), FunctionDef('cancel_callback', arguments([Name('self', Param(), lineno=1034, col_offset=24), Name('event', Param(), lineno=1034, col_offset=30)], None, None, [Name('None', Load(), lineno=1034, col_offset=36)]), [TryExcept([If(Call(Attribute(Attribute(Name('self', Load(), lineno=1036, col_offset=15), 'text', Load(), lineno=1036, col_offset=15), 'compare', Load(), lineno=1036, col_offset=15), [Str('sel.first', lineno=1036, col_offset=33), Str('!=', lineno=1036, col_offset=46), Str('sel.last', lineno=1036, col_offset=52)], [], None, None, lineno=1036, col_offset=15), [Return(None, lineno=1037, col_offset=16)], [], lineno=1036, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=1039, col_offset=12)], lineno=1038, col_offset=8)], [], lineno=1035, col_offset=8), If(UnaryOp(Not(), BoolOp(Or(), [Attribute(Name('self', Load(), lineno=1040, col_offset=16), 'executing', Load(), lineno=1040, col_offset=16), Attribute(Name('self', Load(), lineno=1040, col_offset=34), 'reading', Load(), lineno=1040, col_offset=34)], lineno=1040, col_offset=16), lineno=1040, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1041, col_offset=12), 'resetoutput', Load(), lineno=1041, col_offset=12), [], [], None, None, lineno=1041, col_offset=12), lineno=1041, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1042, col_offset=12), 'interp', Load(), lineno=1042, col_offset=12), 'write', Load(), lineno=1042, col_offset=12), [Str('KeyboardInterrupt\n', lineno=1042, col_offset=30)], [], None, None, lineno=1042, col_offset=12), lineno=1042, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1043, col_offset=12), 'showprompt', Load(), lineno=1043, col_offset=12), [], [], None, None, lineno=1043, col_offset=12), lineno=1043, col_offset=12), Return(Str('break', lineno=1044, col_offset=19), lineno=1044, col_offset=12)], [], lineno=1040, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1045, col_offset=8), 'endoffile', Store(), lineno=1045, col_offset=8)], Num(0, lineno=1045, col_offset=25), lineno=1045, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1046, col_offset=8), 'canceled', Store(), lineno=1046, col_offset=8)], Num(1, lineno=1046, col_offset=24), lineno=1046, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1047, col_offset=12), 'executing', Load(), lineno=1047, col_offset=12), Attribute(Attribute(Name('self', Load(), lineno=1047, col_offset=31), 'interp', Load(), lineno=1047, col_offset=31), 'rpcclt', Load(), lineno=1047, col_offset=31)], lineno=1047, col_offset=12), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=1048, col_offset=15), 'interp', Load(), lineno=1048, col_offset=15), 'getdebugger', Load(), lineno=1048, col_offset=15), [], [], None, None, lineno=1048, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1049, col_offset=16), 'interp', Load(), lineno=1049, col_offset=16), 'restart_subprocess', Load(), lineno=1049, col_offset=16), [], [], None, None, lineno=1049, col_offset=16), lineno=1049, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1051, col_offset=16), 'interp', Load(), lineno=1051, col_offset=16), 'interrupt_subprocess', Load(), lineno=1051, col_offset=16), [], [], None, None, lineno=1051, col_offset=16), lineno=1051, col_offset=16)], lineno=1048, col_offset=12)], [], lineno=1047, col_offset=8), If(Attribute(Name('self', Load(), lineno=1052, col_offset=11), 'reading', Load(), lineno=1052, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1053, col_offset=12), 'top', Load(), lineno=1053, col_offset=12), 'quit', Load(), lineno=1053, col_offset=12), [], [], None, None, lineno=1053, col_offset=12), lineno=1053, col_offset=12)], [], lineno=1052, col_offset=8), Return(Str('break', lineno=1054, col_offset=15), lineno=1054, col_offset=8)], [], lineno=1034, col_offset=4), FunctionDef('eof_callback', arguments([Name('self', Param(), lineno=1056, col_offset=21), Name('event', Param(), lineno=1056, col_offset=27)], None, None, []), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1057, col_offset=11), 'executing', Load(), lineno=1057, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1057, col_offset=34), 'reading', Load(), lineno=1057, col_offset=34), lineno=1057, col_offset=30)], lineno=1057, col_offset=11), [Return(None, lineno=1058, col_offset=12)], [], lineno=1057, col_offset=8), If(UnaryOp(Not(), BoolOp(And(), [Call(Attribute(Attribute(Name('self', Load(), lineno=1059, col_offset=16), 'text', Load(), lineno=1059, col_offset=16), 'compare', Load(), lineno=1059, col_offset=16), [Str('iomark', lineno=1059, col_offset=34), Str('==', lineno=1059, col_offset=44), Str('insert', lineno=1059, col_offset=50)], [], None, None, lineno=1059, col_offset=16), Call(Attribute(Attribute(Name('self', Load(), lineno=1060, col_offset=16), 'text', Load(), lineno=1060, col_offset=16), 'compare', Load(), lineno=1060, col_offset=16), [Str('insert', lineno=1060, col_offset=34), Str('==', lineno=1060, col_offset=44), Str('end-1c', lineno=1060, col_offset=50)], [], None, None, lineno=1060, col_offset=16)], lineno=1059, col_offset=16), lineno=1059, col_offset=11), [Return(None, lineno=1061, col_offset=12)], [], lineno=1059, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1062, col_offset=15), 'executing', Load(), lineno=1062, col_offset=15), lineno=1062, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1063, col_offset=12), 'resetoutput', Load(), lineno=1063, col_offset=12), [], [], None, None, lineno=1063, col_offset=12), lineno=1063, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1064, col_offset=12), 'close', Load(), lineno=1064, col_offset=12), [], [], None, None, lineno=1064, col_offset=12), lineno=1064, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=1066, col_offset=12), 'canceled', Store(), lineno=1066, col_offset=12)], Num(0, lineno=1066, col_offset=28), lineno=1066, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1067, col_offset=12), 'endoffile', Store(), lineno=1067, col_offset=12)], Num(1, lineno=1067, col_offset=29), lineno=1067, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1068, col_offset=12), 'top', Load(), lineno=1068, col_offset=12), 'quit', Load(), lineno=1068, col_offset=12), [], [], None, None, lineno=1068, col_offset=12), lineno=1068, col_offset=12)], lineno=1062, col_offset=8), Return(Str('break', lineno=1069, col_offset=15), lineno=1069, col_offset=8)], [], lineno=1056, col_offset=4), FunctionDef('linefeed_callback', arguments([Name('self', Param(), lineno=1071, col_offset=26), Name('event', Param(), lineno=1071, col_offset=32)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1073, col_offset=11), 'reading', Load(), lineno=1073, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1074, col_offset=12), 'text', Load(), lineno=1074, col_offset=12), 'insert', Load(), lineno=1074, col_offset=12), [Str('insert', lineno=1074, col_offset=29), Str('\n', lineno=1074, col_offset=39)], [], None, None, lineno=1074, col_offset=12), lineno=1074, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1075, col_offset=12), 'text', Load(), lineno=1075, col_offset=12), 'see', Load(), lineno=1075, col_offset=12), [Str('insert', lineno=1075, col_offset=26)], [], None, None, lineno=1075, col_offset=12), lineno=1075, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1077, col_offset=12), 'newline_and_indent_event', Load(), lineno=1077, col_offset=12), [Name('event', Load(), lineno=1077, col_offset=42)], [], None, None, lineno=1077, col_offset=12), lineno=1077, col_offset=12)], lineno=1073, col_offset=8), Return(Str('break', lineno=1078, col_offset=15), lineno=1078, col_offset=8)], [], lineno=1071, col_offset=4), FunctionDef('enter_callback', arguments([Name('self', Param(), lineno=1080, col_offset=23), Name('event', Param(), lineno=1080, col_offset=29)], None, None, []), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1081, col_offset=11), 'executing', Load(), lineno=1081, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1081, col_offset=34), 'reading', Load(), lineno=1081, col_offset=34), lineno=1081, col_offset=30)], lineno=1081, col_offset=11), [Return(None, lineno=1082, col_offset=12)], [], lineno=1081, col_offset=8), TryExcept([Assign([Name('sel', Store(), lineno=1086, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1086, col_offset=18), 'text', Load(), lineno=1086, col_offset=18), 'get', Load(), lineno=1086, col_offset=18), [Str('sel.first', lineno=1086, col_offset=32), Str('sel.last', lineno=1086, col_offset=45)], [], None, None, lineno=1086, col_offset=18), lineno=1086, col_offset=12), If(Name('sel', Load(), lineno=1087, col_offset=15), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=1088, col_offset=19), 'text', Load(), lineno=1088, col_offset=19), 'compare', Load(), lineno=1088, col_offset=19), [Str('sel.last', lineno=1088, col_offset=37), Str('<=', lineno=1088, col_offset=49), Str('iomark', lineno=1088, col_offset=55)], [], None, None, lineno=1088, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=1089, col_offset=20), 'recall', Load(), lineno=1089, col_offset=20), [Name('sel', Load(), lineno=1089, col_offset=32), Name('event', Load(), lineno=1089, col_offset=37)], [], None, None, lineno=1089, col_offset=20), lineno=1089, col_offset=20), Return(Str('break', lineno=1090, col_offset=27), lineno=1090, col_offset=20)], [], lineno=1088, col_offset=16)], [], lineno=1087, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=1092, col_offset=12)], lineno=1091, col_offset=8)], [], lineno=1085, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=1096, col_offset=11), 'text', Load(), lineno=1096, col_offset=11), 'compare', Load(), lineno=1096, col_offset=11), [Str('insert', lineno=1096, col_offset=29), Str('<', lineno=1096, col_offset=39), Str('iomark linestart', lineno=1096, col_offset=44)], [], None, None, lineno=1096, col_offset=11), [Assign([Name('prev', Store(), lineno=1098, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1098, col_offset=19), 'text', Load(), lineno=1098, col_offset=19), 'tag_prevrange', Load(), lineno=1098, col_offset=19), [Str('stdin', lineno=1098, col_offset=43), Str('insert', lineno=1098, col_offset=52)], [], None, None, lineno=1098, col_offset=19), lineno=1098, col_offset=12), If(BoolOp(And(), [Name('prev', Load(), lineno=1099, col_offset=15), Call(Attribute(Attribute(Name('self', Load(), lineno=1099, col_offset=24), 'text', Load(), lineno=1099, col_offset=24), 'compare', Load(), lineno=1099, col_offset=24), [Str('insert', lineno=1099, col_offset=42), Str('<', lineno=1099, col_offset=52), Subscript(Name('prev', Load(), lineno=1099, col_offset=57), Index(Num(1, lineno=1099, col_offset=62)), Load(), lineno=1099, col_offset=57)], [], None, None, lineno=1099, col_offset=24)], lineno=1099, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1100, col_offset=16), 'recall', Load(), lineno=1100, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=1100, col_offset=28), 'text', Load(), lineno=1100, col_offset=28), 'get', Load(), lineno=1100, col_offset=28), [Subscript(Name('prev', Load(), lineno=1100, col_offset=42), Index(Num(0, lineno=1100, col_offset=47)), Load(), lineno=1100, col_offset=42), Subscript(Name('prev', Load(), lineno=1100, col_offset=51), Index(Num(1, lineno=1100, col_offset=56)), Load(), lineno=1100, col_offset=51)], [], None, None, lineno=1100, col_offset=28), Name('event', Load(), lineno=1100, col_offset=61)], [], None, None, lineno=1100, col_offset=16), lineno=1100, col_offset=16), Return(Str('break', lineno=1101, col_offset=23), lineno=1101, col_offset=16)], [], lineno=1099, col_offset=12), Assign([Name('next', Store(), lineno=1102, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1102, col_offset=19), 'text', Load(), lineno=1102, col_offset=19), 'tag_nextrange', Load(), lineno=1102, col_offset=19), [Str('stdin', lineno=1102, col_offset=43), Str('insert', lineno=1102, col_offset=52)], [], None, None, lineno=1102, col_offset=19), lineno=1102, col_offset=12), If(BoolOp(And(), [Name('next', Load(), lineno=1103, col_offset=15), Call(Attribute(Attribute(Name('self', Load(), lineno=1103, col_offset=24), 'text', Load(), lineno=1103, col_offset=24), 'compare', Load(), lineno=1103, col_offset=24), [Str('insert lineend', lineno=1103, col_offset=42), Str('>=', lineno=1103, col_offset=60), Subscript(Name('next', Load(), lineno=1103, col_offset=66), Index(Num(0, lineno=1103, col_offset=71)), Load(), lineno=1103, col_offset=66)], [], None, None, lineno=1103, col_offset=24)], lineno=1103, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1104, col_offset=16), 'recall', Load(), lineno=1104, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=1104, col_offset=28), 'text', Load(), lineno=1104, col_offset=28), 'get', Load(), lineno=1104, col_offset=28), [Subscript(Name('next', Load(), lineno=1104, col_offset=42), Index(Num(0, lineno=1104, col_offset=47)), Load(), lineno=1104, col_offset=42), Subscript(Name('next', Load(), lineno=1104, col_offset=51), Index(Num(1, lineno=1104, col_offset=56)), Load(), lineno=1104, col_offset=51)], [], None, None, lineno=1104, col_offset=28), Name('event', Load(), lineno=1104, col_offset=61)], [], None, None, lineno=1104, col_offset=16), lineno=1104, col_offset=16), Return(Str('break', lineno=1105, col_offset=23), lineno=1105, col_offset=16)], [], lineno=1103, col_offset=12), Assign([Name('indices', Store(), lineno=1107, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1107, col_offset=22), 'text', Load(), lineno=1107, col_offset=22), 'tag_nextrange', Load(), lineno=1107, col_offset=22), [Str('console', lineno=1107, col_offset=46), Str('insert linestart', lineno=1107, col_offset=57)], [], None, None, lineno=1107, col_offset=22), lineno=1107, col_offset=12), If(BoolOp(And(), [Name('indices', Load(), lineno=1108, col_offset=15), Call(Attribute(Attribute(Name('self', Load(), lineno=1109, col_offset=15), 'text', Load(), lineno=1109, col_offset=15), 'compare', Load(), lineno=1109, col_offset=15), [Subscript(Name('indices', Load(), lineno=1109, col_offset=33), Index(Num(0, lineno=1109, col_offset=41)), Load(), lineno=1109, col_offset=33), Str('<=', lineno=1109, col_offset=45), Str('insert linestart', lineno=1109, col_offset=51)], [], None, None, lineno=1109, col_offset=15)], lineno=1108, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1110, col_offset=16), 'recall', Load(), lineno=1110, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=1110, col_offset=28), 'text', Load(), lineno=1110, col_offset=28), 'get', Load(), lineno=1110, col_offset=28), [Subscript(Name('indices', Load(), lineno=1110, col_offset=42), Index(Num(1, lineno=1110, col_offset=50)), Load(), lineno=1110, col_offset=42), Str('insert lineend', lineno=1110, col_offset=54)], [], None, None, lineno=1110, col_offset=28), Name('event', Load(), lineno=1110, col_offset=73)], [], None, None, lineno=1110, col_offset=16), lineno=1110, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=1112, col_offset=16), 'recall', Load(), lineno=1112, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=1112, col_offset=28), 'text', Load(), lineno=1112, col_offset=28), 'get', Load(), lineno=1112, col_offset=28), [Str('insert linestart', lineno=1112, col_offset=42), Str('insert lineend', lineno=1112, col_offset=62)], [], None, None, lineno=1112, col_offset=28), Name('event', Load(), lineno=1112, col_offset=81)], [], None, None, lineno=1112, col_offset=16), lineno=1112, col_offset=16)], lineno=1108, col_offset=12), Return(Str('break', lineno=1113, col_offset=19), lineno=1113, col_offset=12)], [], lineno=1096, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=1116, col_offset=11), 'text', Load(), lineno=1116, col_offset=11), 'compare', Load(), lineno=1116, col_offset=11), [Str('insert', lineno=1116, col_offset=29), Str('<', lineno=1116, col_offset=39), Str('iomark', lineno=1116, col_offset=44)], [], None, None, lineno=1116, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1117, col_offset=12), 'text', Load(), lineno=1117, col_offset=12), 'mark_set', Load(), lineno=1117, col_offset=12), [Str('insert', lineno=1117, col_offset=31), Str('iomark', lineno=1117, col_offset=41)], [], None, None, lineno=1117, col_offset=12), lineno=1117, col_offset=12)], [], lineno=1116, col_offset=8), Assign([Name('s', Store(), lineno=1120, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1120, col_offset=12), 'text', Load(), lineno=1120, col_offset=12), 'get', Load(), lineno=1120, col_offset=12), [Str('insert', lineno=1120, col_offset=26), Str('end-1c', lineno=1120, col_offset=36)], [], None, None, lineno=1120, col_offset=12), lineno=1120, col_offset=8), If(BoolOp(And(), [Name('s', Load(), lineno=1121, col_offset=11), UnaryOp(Not(), Call(Attribute(Name('s', Load(), lineno=1121, col_offset=21), 'strip', Load(), lineno=1121, col_offset=21), [], [], None, None, lineno=1121, col_offset=21), lineno=1121, col_offset=17)], lineno=1121, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1122, col_offset=12), 'text', Load(), lineno=1122, col_offset=12), 'delete', Load(), lineno=1122, col_offset=12), [Str('insert', lineno=1122, col_offset=29), Str('end-1c', lineno=1122, col_offset=39)], [], None, None, lineno=1122, col_offset=12), lineno=1122, col_offset=12)], [], lineno=1121, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=1125, col_offset=11), 'text', Load(), lineno=1125, col_offset=11), 'compare', Load(), lineno=1125, col_offset=11), [Str('insert', lineno=1125, col_offset=29), Str('<', lineno=1125, col_offset=39), Str('end-1c linestart', lineno=1125, col_offset=44)], [], None, None, lineno=1125, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1126, col_offset=12), 'newline_and_indent_event', Load(), lineno=1126, col_offset=12), [Name('event', Load(), lineno=1126, col_offset=42)], [], None, None, lineno=1126, col_offset=12), lineno=1126, col_offset=12), Return(Str('break', lineno=1127, col_offset=19), lineno=1127, col_offset=12)], [], lineno=1125, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1129, col_offset=8), 'text', Load(), lineno=1129, col_offset=8), 'mark_set', Load(), lineno=1129, col_offset=8), [Str('insert', lineno=1129, col_offset=27), Str('end-1c', lineno=1129, col_offset=37)], [], None, None, lineno=1129, col_offset=8), lineno=1129, col_offset=8), If(Attribute(Name('self', Load(), lineno=1130, col_offset=11), 'reading', Load(), lineno=1130, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1131, col_offset=12), 'text', Load(), lineno=1131, col_offset=12), 'insert', Load(), lineno=1131, col_offset=12), [Str('insert', lineno=1131, col_offset=29), Str('\n', lineno=1131, col_offset=39)], [], None, None, lineno=1131, col_offset=12), lineno=1131, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1132, col_offset=12), 'text', Load(), lineno=1132, col_offset=12), 'see', Load(), lineno=1132, col_offset=12), [Str('insert', lineno=1132, col_offset=26)], [], None, None, lineno=1132, col_offset=12), lineno=1132, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1134, col_offset=12), 'newline_and_indent_event', Load(), lineno=1134, col_offset=12), [Name('event', Load(), lineno=1134, col_offset=42)], [], None, None, lineno=1134, col_offset=12), lineno=1134, col_offset=12)], lineno=1130, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1135, col_offset=8), 'text', Load(), lineno=1135, col_offset=8), 'tag_add', Load(), lineno=1135, col_offset=8), [Str('stdin', lineno=1135, col_offset=26), Str('iomark', lineno=1135, col_offset=35), Str('end-1c', lineno=1135, col_offset=45)], [], None, None, lineno=1135, col_offset=8), lineno=1135, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1136, col_offset=8), 'text', Load(), lineno=1136, col_offset=8), 'update_idletasks', Load(), lineno=1136, col_offset=8), [], [], None, None, lineno=1136, col_offset=8), lineno=1136, col_offset=8), If(Attribute(Name('self', Load(), lineno=1137, col_offset=11), 'reading', Load(), lineno=1137, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1138, col_offset=12), 'top', Load(), lineno=1138, col_offset=12), 'quit', Load(), lineno=1138, col_offset=12), [], [], None, None, lineno=1138, col_offset=12), lineno=1138, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1140, col_offset=12), 'runit', Load(), lineno=1140, col_offset=12), [], [], None, None, lineno=1140, col_offset=12), lineno=1140, col_offset=12)], lineno=1137, col_offset=8), Return(Str('break', lineno=1141, col_offset=15), lineno=1141, col_offset=8)], [], lineno=1080, col_offset=4), FunctionDef('recall', arguments([Name('self', Param(), lineno=1143, col_offset=15), Name('s', Param(), lineno=1143, col_offset=21), Name('event', Param(), lineno=1143, col_offset=24)], None, None, []), [Assign([Name('s', Store(), lineno=1145, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=1145, col_offset=12), 'sub', Load(), lineno=1145, col_offset=12), [Str('^\\s*\\n', lineno=1145, col_offset=19), Str('', lineno=1145, col_offset=30), Name('s', Load(), lineno=1145, col_offset=35)], [], None, None, lineno=1145, col_offset=12), lineno=1145, col_offset=8), Assign([Name('s', Store(), lineno=1146, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=1146, col_offset=12), 'sub', Load(), lineno=1146, col_offset=12), [Str('\\n\\s*$', lineno=1146, col_offset=19), Str('', lineno=1146, col_offset=30), Name('s', Load(), lineno=1146, col_offset=34)], [], None, None, lineno=1146, col_offset=12), lineno=1146, col_offset=8), Assign([Name('lines', Store(), lineno=1147, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=1147, col_offset=16), 'split', Load(), lineno=1147, col_offset=16), [Str('\n', lineno=1147, col_offset=24)], [], None, None, lineno=1147, col_offset=16), lineno=1147, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1148, col_offset=8), 'text', Load(), lineno=1148, col_offset=8), 'undo_block_start', Load(), lineno=1148, col_offset=8), [], [], None, None, lineno=1148, col_offset=8), lineno=1148, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1150, col_offset=12), 'text', Load(), lineno=1150, col_offset=12), 'tag_remove', Load(), lineno=1150, col_offset=12), [Str('sel', lineno=1150, col_offset=33), Str('1.0', lineno=1150, col_offset=40), Str('end', lineno=1150, col_offset=47)], [], None, None, lineno=1150, col_offset=12), lineno=1150, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1151, col_offset=12), 'text', Load(), lineno=1151, col_offset=12), 'mark_set', Load(), lineno=1151, col_offset=12), [Str('insert', lineno=1151, col_offset=31), Str('end-1c', lineno=1151, col_offset=41)], [], None, None, lineno=1151, col_offset=12), lineno=1151, col_offset=12), Assign([Name('prefix', Store(), lineno=1152, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1152, col_offset=21), 'text', Load(), lineno=1152, col_offset=21), 'get', Load(), lineno=1152, col_offset=21), [Str('insert linestart', lineno=1152, col_offset=35), Str('insert', lineno=1152, col_offset=55)], [], None, None, lineno=1152, col_offset=21), lineno=1152, col_offset=12), If(Call(Attribute(Call(Attribute(Name('prefix', Load(), lineno=1153, col_offset=15), 'rstrip', Load(), lineno=1153, col_offset=15), [], [], None, None, lineno=1153, col_offset=15), 'endswith', Load(), lineno=1153, col_offset=15), [Str(':', lineno=1153, col_offset=40)], [], None, None, lineno=1153, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1154, col_offset=16), 'newline_and_indent_event', Load(), lineno=1154, col_offset=16), [Name('event', Load(), lineno=1154, col_offset=46)], [], None, None, lineno=1154, col_offset=16), lineno=1154, col_offset=16), Assign([Name('prefix', Store(), lineno=1155, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=1155, col_offset=25), 'text', Load(), lineno=1155, col_offset=25), 'get', Load(), lineno=1155, col_offset=25), [Str('insert linestart', lineno=1155, col_offset=39), Str('insert', lineno=1155, col_offset=59)], [], None, None, lineno=1155, col_offset=25), lineno=1155, col_offset=16)], [], lineno=1153, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1156, col_offset=12), 'text', Load(), lineno=1156, col_offset=12), 'insert', Load(), lineno=1156, col_offset=12), [Str('insert', lineno=1156, col_offset=29), Call(Attribute(Subscript(Name('lines', Load(), lineno=1156, col_offset=39), Index(Num(0, lineno=1156, col_offset=45)), Load(), lineno=1156, col_offset=39), 'strip', Load(), lineno=1156, col_offset=39), [], [], None, None, lineno=1156, col_offset=39)], [], None, None, lineno=1156, col_offset=12), lineno=1156, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=1157, col_offset=15), [Name('lines', Load(), lineno=1157, col_offset=19)], [], None, None, lineno=1157, col_offset=15), [Gt()], [Num(1, lineno=1157, col_offset=28)], lineno=1157, col_offset=15), [Assign([Name('orig_base_indent', Store(), lineno=1158, col_offset=16)], Call(Attribute(Call(Attribute(Name('re', Load(), lineno=1158, col_offset=35), 'search', Load(), lineno=1158, col_offset=35), [Str('^([ \\t]*)', lineno=1158, col_offset=45), Subscript(Name('lines', Load(), lineno=1158, col_offset=59), Index(Num(0, lineno=1158, col_offset=65)), Load(), lineno=1158, col_offset=59)], [], None, None, lineno=1158, col_offset=35), 'group', Load(), lineno=1158, col_offset=35), [Num(0, lineno=1158, col_offset=75)], [], None, None, lineno=1158, col_offset=35), lineno=1158, col_offset=16), Assign([Name('new_base_indent', Store(), lineno=1159, col_offset=16)], Call(Attribute(Call(Attribute(Name('re', Load(), lineno=1159, col_offset=35), 'search', Load(), lineno=1159, col_offset=35), [Str('^([ \\t]*)', lineno=1159, col_offset=45), Name('prefix', Load(), lineno=1159, col_offset=59)], [], None, None, lineno=1159, col_offset=35), 'group', Load(), lineno=1159, col_offset=35), [Num(0, lineno=1159, col_offset=73)], [], None, None, lineno=1159, col_offset=35), lineno=1159, col_offset=16), For(Name('line', Store(), lineno=1160, col_offset=20), Subscript(Name('lines', Load(), lineno=1160, col_offset=28), Slice(Num(1, lineno=1160, col_offset=34), None, None), Load(), lineno=1160, col_offset=28), [If(Call(Attribute(Name('line', Load(), lineno=1161, col_offset=23), 'startswith', Load(), lineno=1161, col_offset=23), [Name('orig_base_indent', Load(), lineno=1161, col_offset=39)], [], None, None, lineno=1161, col_offset=23), [Assign([Name('line', Store(), lineno=1163, col_offset=24)], BinOp(Name('new_base_indent', Load(), lineno=1163, col_offset=31), Add(), Subscript(Name('line', Load(), lineno=1163, col_offset=49), Slice(Call(Name('len', Load(), lineno=1163, col_offset=54), [Name('orig_base_indent', Load(), lineno=1163, col_offset=58)], [], None, None, lineno=1163, col_offset=54), None, None), Load(), lineno=1163, col_offset=49), lineno=1163, col_offset=31), lineno=1163, col_offset=24)], [], lineno=1161, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1164, col_offset=20), 'text', Load(), lineno=1164, col_offset=20), 'insert', Load(), lineno=1164, col_offset=20), [Str('insert', lineno=1164, col_offset=37), BinOp(Str('\n', lineno=1164, col_offset=47), Add(), Call(Attribute(Name('line', Load(), lineno=1164, col_offset=52), 'rstrip', Load(), lineno=1164, col_offset=52), [], [], None, None, lineno=1164, col_offset=52), lineno=1164, col_offset=47)], [], None, None, lineno=1164, col_offset=20), lineno=1164, col_offset=20)], [], lineno=1160, col_offset=16)], [], lineno=1157, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1166, col_offset=12), 'text', Load(), lineno=1166, col_offset=12), 'see', Load(), lineno=1166, col_offset=12), [Str('insert', lineno=1166, col_offset=26)], [], None, None, lineno=1166, col_offset=12), lineno=1166, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1167, col_offset=12), 'text', Load(), lineno=1167, col_offset=12), 'undo_block_stop', Load(), lineno=1167, col_offset=12), [], [], None, None, lineno=1167, col_offset=12), lineno=1167, col_offset=12)], lineno=1149, col_offset=8)], [], lineno=1143, col_offset=4), FunctionDef('runit', arguments([Name('self', Param(), lineno=1169, col_offset=14)], None, None, []), [Assign([Name('line', Store(), lineno=1170, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1170, col_offset=15), 'text', Load(), lineno=1170, col_offset=15), 'get', Load(), lineno=1170, col_offset=15), [Str('iomark', lineno=1170, col_offset=29), Str('end-1c', lineno=1170, col_offset=39)], [], None, None, lineno=1170, col_offset=15), lineno=1170, col_offset=8), Assign([Name('i', Store(), lineno=1173, col_offset=8)], Call(Name('len', Load(), lineno=1173, col_offset=12), [Name('line', Load(), lineno=1173, col_offset=16)], [], None, None, lineno=1173, col_offset=12), lineno=1173, col_offset=8), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=1174, col_offset=14), [Gt()], [Num(0, lineno=1174, col_offset=18)], lineno=1174, col_offset=14), Compare(Subscript(Name('line', Load(), lineno=1174, col_offset=24), Index(BinOp(Name('i', Load(), lineno=1174, col_offset=29), Sub(), Num(1, lineno=1174, col_offset=31), lineno=1174, col_offset=29)), Load(), lineno=1174, col_offset=24), [In()], [Str(' \t', lineno=1174, col_offset=37)], lineno=1174, col_offset=24)], lineno=1174, col_offset=14), [Assign([Name('i', Store(), lineno=1175, col_offset=12)], BinOp(Name('i', Load(), lineno=1175, col_offset=16), Sub(), Num(1, lineno=1175, col_offset=18), lineno=1175, col_offset=16), lineno=1175, col_offset=12)], [], lineno=1174, col_offset=8), If(BoolOp(And(), [Compare(Name('i', Load(), lineno=1176, col_offset=11), [Gt()], [Num(0, lineno=1176, col_offset=15)], lineno=1176, col_offset=11), Compare(Subscript(Name('line', Load(), lineno=1176, col_offset=21), Index(BinOp(Name('i', Load(), lineno=1176, col_offset=26), Sub(), Num(1, lineno=1176, col_offset=28), lineno=1176, col_offset=26)), Load(), lineno=1176, col_offset=21), [Eq()], [Str('\n', lineno=1176, col_offset=34)], lineno=1176, col_offset=21)], lineno=1176, col_offset=11), [Assign([Name('i', Store(), lineno=1177, col_offset=12)], BinOp(Name('i', Load(), lineno=1177, col_offset=16), Sub(), Num(1, lineno=1177, col_offset=18), lineno=1177, col_offset=16), lineno=1177, col_offset=12)], [], lineno=1176, col_offset=8), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=1178, col_offset=14), [Gt()], [Num(0, lineno=1178, col_offset=18)], lineno=1178, col_offset=14), Compare(Subscript(Name('line', Load(), lineno=1178, col_offset=24), Index(BinOp(Name('i', Load(), lineno=1178, col_offset=29), Sub(), Num(1, lineno=1178, col_offset=31), lineno=1178, col_offset=29)), Load(), lineno=1178, col_offset=24), [In()], [Str(' \t', lineno=1178, col_offset=37)], lineno=1178, col_offset=24)], lineno=1178, col_offset=14), [Assign([Name('i', Store(), lineno=1179, col_offset=12)], BinOp(Name('i', Load(), lineno=1179, col_offset=16), Sub(), Num(1, lineno=1179, col_offset=18), lineno=1179, col_offset=16), lineno=1179, col_offset=12)], [], lineno=1178, col_offset=8), Assign([Name('line', Store(), lineno=1180, col_offset=8)], Subscript(Name('line', Load(), lineno=1180, col_offset=15), Slice(None, Name('i', Load(), lineno=1180, col_offset=21), None), Load(), lineno=1180, col_offset=15), lineno=1180, col_offset=8), Assign([Name('more', Store(), lineno=1181, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1181, col_offset=15), 'interp', Load(), lineno=1181, col_offset=15), 'runsource', Load(), lineno=1181, col_offset=15), [Name('line', Load(), lineno=1181, col_offset=37)], [], None, None, lineno=1181, col_offset=15), lineno=1181, col_offset=8)], [], lineno=1169, col_offset=4), FunctionDef('open_stack_viewer', arguments([Name('self', Param(), lineno=1183, col_offset=26), Name('event', Param(), lineno=1183, col_offset=32)], None, None, [Name('None', Load(), lineno=1183, col_offset=38)]), [If(Attribute(Attribute(Name('self', Load(), lineno=1184, col_offset=11), 'interp', Load(), lineno=1184, col_offset=11), 'rpcclt', Load(), lineno=1184, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=1185, col_offset=19), 'interp', Load(), lineno=1185, col_offset=19), 'remote_stack_viewer', Load(), lineno=1185, col_offset=19), [], [], None, None, lineno=1185, col_offset=19), lineno=1185, col_offset=12)], [], lineno=1184, col_offset=8), TryExcept([Expr(Attribute(Name('sys', Load(), lineno=1187, col_offset=12), 'last_traceback', Load(), lineno=1187, col_offset=12), lineno=1187, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=1189, col_offset=12), 'showerror', Load(), lineno=1189, col_offset=12), [Str('No stack trace', lineno=1189, col_offset=35), Str('There is no stack trace yet.\n(sys.last_traceback is not defined)', lineno=1190, col_offset=16)], [keyword('master', Attribute(Name('self', Load(), lineno=1192, col_offset=23), 'text', Load(), lineno=1192, col_offset=23))], None, None, lineno=1189, col_offset=12), lineno=1189, col_offset=12), Return(None, lineno=1193, col_offset=12)], lineno=1188, col_offset=8)], [], lineno=1186, col_offset=8), ImportFrom('idlelib.StackViewer', [alias('StackBrowser', None)], 0, lineno=1194, col_offset=8), Assign([Name('sv', Store(), lineno=1195, col_offset=8)], Call(Name('StackBrowser', Load(), lineno=1195, col_offset=13), [Attribute(Name('self', Load(), lineno=1195, col_offset=26), 'root', Load(), lineno=1195, col_offset=26), Attribute(Name('self', Load(), lineno=1195, col_offset=37), 'flist', Load(), lineno=1195, col_offset=37)], [], None, None, lineno=1195, col_offset=13), lineno=1195, col_offset=8)], [], lineno=1183, col_offset=4), FunctionDef('view_restart_mark', arguments([Name('self', Param(), lineno=1197, col_offset=26), Name('event', Param(), lineno=1197, col_offset=32)], None, None, [Name('None', Load(), lineno=1197, col_offset=38)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1198, col_offset=8), 'text', Load(), lineno=1198, col_offset=8), 'see', Load(), lineno=1198, col_offset=8), [Str('iomark', lineno=1198, col_offset=22)], [], None, None, lineno=1198, col_offset=8), lineno=1198, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1199, col_offset=8), 'text', Load(), lineno=1199, col_offset=8), 'see', Load(), lineno=1199, col_offset=8), [Str('restart', lineno=1199, col_offset=22)], [], None, None, lineno=1199, col_offset=8), lineno=1199, col_offset=8)], [], lineno=1197, col_offset=4), FunctionDef('restart_shell', arguments([Name('self', Param(), lineno=1201, col_offset=22), Name('event', Param(), lineno=1201, col_offset=28)], None, None, [Name('None', Load(), lineno=1201, col_offset=34)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1202, col_offset=8), 'interp', Load(), lineno=1202, col_offset=8), 'restart_subprocess', Load(), lineno=1202, col_offset=8), [], [], None, None, lineno=1202, col_offset=8), lineno=1202, col_offset=8)], [], lineno=1201, col_offset=4), FunctionDef('showprompt', arguments([Name('self', Param(), lineno=1204, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1205, col_offset=8), 'resetoutput', Load(), lineno=1205, col_offset=8), [], [], None, None, lineno=1205, col_offset=8), lineno=1205, col_offset=8), TryExcept([Assign([Name('s', Store(), lineno=1207, col_offset=12)], Call(Name('str', Load(), lineno=1207, col_offset=16), [Attribute(Name('sys', Load(), lineno=1207, col_offset=20), 'ps1', Load(), lineno=1207, col_offset=20)], [], None, None, lineno=1207, col_offset=16), lineno=1207, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('s', Store(), lineno=1209, col_offset=12)], Str('', lineno=1209, col_offset=16), lineno=1209, col_offset=12)], lineno=1208, col_offset=8)], [], lineno=1206, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1210, col_offset=8), 'console', Load(), lineno=1210, col_offset=8), 'write', Load(), lineno=1210, col_offset=8), [Name('s', Load(), lineno=1210, col_offset=27)], [], None, None, lineno=1210, col_offset=8), lineno=1210, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1211, col_offset=8), 'text', Load(), lineno=1211, col_offset=8), 'mark_set', Load(), lineno=1211, col_offset=8), [Str('insert', lineno=1211, col_offset=27), Str('end-1c', lineno=1211, col_offset=37)], [], None, None, lineno=1211, col_offset=8), lineno=1211, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1212, col_offset=8), 'set_line_and_column', Load(), lineno=1212, col_offset=8), [], [], None, None, lineno=1212, col_offset=8), lineno=1212, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1213, col_offset=8), 'io', Load(), lineno=1213, col_offset=8), 'reset_undo', Load(), lineno=1213, col_offset=8), [], [], None, None, lineno=1213, col_offset=8), lineno=1213, col_offset=8)], [], lineno=1204, col_offset=4), FunctionDef('resetoutput', arguments([Name('self', Param(), lineno=1215, col_offset=20)], None, None, []), [Assign([Name('source', Store(), lineno=1216, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1216, col_offset=17), 'text', Load(), lineno=1216, col_offset=17), 'get', Load(), lineno=1216, col_offset=17), [Str('iomark', lineno=1216, col_offset=31), Str('end-1c', lineno=1216, col_offset=41)], [], None, None, lineno=1216, col_offset=17), lineno=1216, col_offset=8), If(Attribute(Name('self', Load(), lineno=1217, col_offset=11), 'history', Load(), lineno=1217, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1218, col_offset=12), 'history', Load(), lineno=1218, col_offset=12), 'history_store', Load(), lineno=1218, col_offset=12), [Name('source', Load(), lineno=1218, col_offset=39)], [], None, None, lineno=1218, col_offset=12), lineno=1218, col_offset=12)], [], lineno=1217, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=1219, col_offset=11), 'text', Load(), lineno=1219, col_offset=11), 'get', Load(), lineno=1219, col_offset=11), [Str('end-2c', lineno=1219, col_offset=25)], [], None, None, lineno=1219, col_offset=11), [NotEq()], [Str('\n', lineno=1219, col_offset=38)], lineno=1219, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1220, col_offset=12), 'text', Load(), lineno=1220, col_offset=12), 'insert', Load(), lineno=1220, col_offset=12), [Str('end-1c', lineno=1220, col_offset=29), Str('\n', lineno=1220, col_offset=39)], [], None, None, lineno=1220, col_offset=12), lineno=1220, col_offset=12)], [], lineno=1219, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1221, col_offset=8), 'text', Load(), lineno=1221, col_offset=8), 'mark_set', Load(), lineno=1221, col_offset=8), [Str('iomark', lineno=1221, col_offset=27), Str('end-1c', lineno=1221, col_offset=37)], [], None, None, lineno=1221, col_offset=8), lineno=1221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1222, col_offset=8), 'set_line_and_column', Load(), lineno=1222, col_offset=8), [], [], None, None, lineno=1222, col_offset=8), lineno=1222, col_offset=8), Assign([Attribute(Attribute(Name('sys', Load(), lineno=1223, col_offset=8), 'stdout', Load(), lineno=1223, col_offset=8), 'softspace', Store(), lineno=1223, col_offset=8)], Num(0, lineno=1223, col_offset=31), lineno=1223, col_offset=8)], [], lineno=1215, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=1225, col_offset=14), Name('s', Param(), lineno=1225, col_offset=20), Name('tags', Param(), lineno=1225, col_offset=23)], None, None, [Tuple([], Load(), lineno=1225, col_offset=28)]), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1227, col_offset=12), 'text', Load(), lineno=1227, col_offset=12), 'mark_gravity', Load(), lineno=1227, col_offset=12), [Str('iomark', lineno=1227, col_offset=35), Str('right', lineno=1227, col_offset=45)], [], None, None, lineno=1227, col_offset=12), lineno=1227, col_offset=12), Expr(Call(Attribute(Name('OutputWindow', Load(), lineno=1228, col_offset=12), 'write', Load(), lineno=1228, col_offset=12), [Name('self', Load(), lineno=1228, col_offset=31), Name('s', Load(), lineno=1228, col_offset=37), Name('tags', Load(), lineno=1228, col_offset=40), Str('iomark', lineno=1228, col_offset=46)], [], None, None, lineno=1228, col_offset=12), lineno=1228, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1229, col_offset=12), 'text', Load(), lineno=1229, col_offset=12), 'mark_gravity', Load(), lineno=1229, col_offset=12), [Str('iomark', lineno=1229, col_offset=35), Str('left', lineno=1229, col_offset=45)], [], None, None, lineno=1229, col_offset=12), lineno=1229, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=1231, col_offset=12)], lineno=1230, col_offset=8)], [], lineno=1226, col_offset=8), If(Attribute(Name('self', Load(), lineno=1232, col_offset=11), 'canceled', Load(), lineno=1232, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=1233, col_offset=12), 'canceled', Store(), lineno=1233, col_offset=12)], Num(0, lineno=1233, col_offset=28), lineno=1233, col_offset=12), If(UnaryOp(Not(), Name('use_subprocess', Load(), lineno=1234, col_offset=19), lineno=1234, col_offset=15), [Raise(Name('KeyboardInterrupt', Load(), lineno=1235, col_offset=22), None, None, lineno=1235, col_offset=16)], [], lineno=1234, col_offset=12)], [], lineno=1232, col_offset=8)], [], lineno=1225, col_offset=4)], [], lineno=794, col_offset=0), ClassDef('PseudoFile', [Name('object', Load(), lineno=1237, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1239, col_offset=17), Name('shell', Param(), lineno=1239, col_offset=23), Name('tags', Param(), lineno=1239, col_offset=30), Name('encoding', Param(), lineno=1239, col_offset=36)], None, None, [Name('None', Load(), lineno=1239, col_offset=45)]), [Assign([Attribute(Name('self', Load(), lineno=1240, col_offset=8), 'shell', Store(), lineno=1240, col_offset=8)], Name('shell', Load(), lineno=1240, col_offset=21), lineno=1240, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1241, col_offset=8), 'tags', Store(), lineno=1241, col_offset=8)], Name('tags', Load(), lineno=1241, col_offset=20), lineno=1241, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1242, col_offset=8), 'softspace', Store(), lineno=1242, col_offset=8)], Num(0, lineno=1242, col_offset=25), lineno=1242, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1243, col_offset=8), 'encoding', Store(), lineno=1243, col_offset=8)], Name('encoding', Load(), lineno=1243, col_offset=24), lineno=1243, col_offset=8)], [], lineno=1239, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=1245, col_offset=14), Name('s', Param(), lineno=1245, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1246, col_offset=8), 'shell', Load(), lineno=1246, col_offset=8), 'write', Load(), lineno=1246, col_offset=8), [Name('s', Load(), lineno=1246, col_offset=25), Attribute(Name('self', Load(), lineno=1246, col_offset=28), 'tags', Load(), lineno=1246, col_offset=28)], [], None, None, lineno=1246, col_offset=8), lineno=1246, col_offset=8)], [], lineno=1245, col_offset=4), FunctionDef('writelines', arguments([Name('self', Param(), lineno=1248, col_offset=19), Name('lines', Param(), lineno=1248, col_offset=25)], None, None, []), [For(Name('line', Store(), lineno=1249, col_offset=12), Name('lines', Load(), lineno=1249, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=1250, col_offset=12), 'write', Load(), lineno=1250, col_offset=12), [Name('line', Load(), lineno=1250, col_offset=23)], [], None, None, lineno=1250, col_offset=12), lineno=1250, col_offset=12)], [], lineno=1249, col_offset=8)], [], lineno=1248, col_offset=4), FunctionDef('flush', arguments([Name('self', Param(), lineno=1252, col_offset=14)], None, None, []), [Pass( lineno=1253, col_offset=8)], [], lineno=1252, col_offset=4), FunctionDef('isatty', arguments([Name('self', Param(), lineno=1255, col_offset=15)], None, None, []), [Return(Name('True', Load(), lineno=1256, col_offset=15), lineno=1256, col_offset=8)], [], lineno=1255, col_offset=4)], [], lineno=1237, col_offset=0), Assign([Name('usage_msg', Store(), lineno=1259, col_offset=0)], Str('\nUSAGE: idle  [-deins] [-t title] [file]*\n       idle  [-dns] [-t title] (-c cmd | -r file) [arg]*\n       idle  [-dns] [-t title] - [arg]*\n\n  -h         print this help message and exit\n  -n         run IDLE without a subprocess (see Help/IDLE Help for details)\n\nThe following options will override the IDLE \'settings\' configuration:\n\n  -e         open an edit window\n  -i         open a shell window\n\nThe following options imply -i and will open a shell:\n\n  -c cmd     run the command in a shell, or\n  -r file    run script from file\n\n  -d         enable the debugger\n  -s         run $IDLESTARTUP or $PYTHONSTARTUP before anything else\n  -t title   set title of shell window\n\nA default edit window will be bypassed when -c, -r, or - are used.\n\n[arg]* are passed to the command (-c) or script (-r) in sys.argv[1:].\n\nExamples:\n\nidle\n        Open an edit window or shell depending on IDLE\'s configuration.\n\nidle foo.py foobar.py\n        Edit the files, also open a shell if configured to start with shell.\n\nidle -est "Baz" foo.py\n        Run $IDLESTARTUP or $PYTHONSTARTUP, edit foo.py, and open a shell\n        window with the title "Baz".\n\nidle -c "import sys; print sys.argv" "foo"\n        Open a shell window and run the command, passing "-c" in sys.argv[0]\n        and "foo" in sys.argv[1].\n\nidle -d -s -r foo.py "Hello World"\n        Open a shell window, run a startup script, enable the debugger, and\n        run foo.py, passing "foo.py" in sys.argv[0] and "Hello World" in\n        sys.argv[1].\n\necho "import sys; print sys.argv" | idle - "foobar"\n        Open a shell window, run the script piped in, passing \'\' in sys.argv[0]\n        and "foobar" in sys.argv[1].\n', lineno=1310, col_offset=-1), lineno=1259, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Global(['flist', 'root', 'use_subprocess'], lineno=1313, col_offset=4), Assign([Name('use_subprocess', Store(), lineno=1315, col_offset=4)], Name('True', Load(), lineno=1315, col_offset=21), lineno=1315, col_offset=4), Assign([Name('enable_shell', Store(), lineno=1316, col_offset=4)], Name('True', Load(), lineno=1316, col_offset=19), lineno=1316, col_offset=4), Assign([Name('enable_edit', Store(), lineno=1317, col_offset=4)], Name('False', Load(), lineno=1317, col_offset=18), lineno=1317, col_offset=4), Assign([Name('debug', Store(), lineno=1318, col_offset=4)], Name('False', Load(), lineno=1318, col_offset=12), lineno=1318, col_offset=4), Assign([Name('cmd', Store(), lineno=1319, col_offset=4)], Name('None', Load(), lineno=1319, col_offset=10), lineno=1319, col_offset=4), Assign([Name('script', Store(), lineno=1320, col_offset=4)], Name('None', Load(), lineno=1320, col_offset=13), lineno=1320, col_offset=4), Assign([Name('startup', Store(), lineno=1321, col_offset=4)], Name('False', Load(), lineno=1321, col_offset=14), lineno=1321, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=1323, col_offset=8), Name('args', Store(), lineno=1323, col_offset=14)], Store(), lineno=1323, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=1323, col_offset=21), 'getopt', Load(), lineno=1323, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=1323, col_offset=35), 'argv', Load(), lineno=1323, col_offset=35), Slice(Num(1, lineno=1323, col_offset=44), None, None), Load(), lineno=1323, col_offset=35), Str('c:deihnr:st:', lineno=1323, col_offset=49)], [], None, None, lineno=1323, col_offset=21), lineno=1323, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=1324, col_offset=11), 'error', Load(), lineno=1324, col_offset=11), Name('msg', Store(), lineno=1324, col_offset=25), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1325, col_offset=8), 'stderr', Load(), lineno=1325, col_offset=8), 'write', Load(), lineno=1325, col_offset=8), [BinOp(Str('Error: %s\n', lineno=1325, col_offset=25), Mod(), Call(Name('str', Load(), lineno=1325, col_offset=41), [Name('msg', Load(), lineno=1325, col_offset=45)], [], None, None, lineno=1325, col_offset=41), lineno=1325, col_offset=25)], [], None, None, lineno=1325, col_offset=8), lineno=1325, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1326, col_offset=8), 'stderr', Load(), lineno=1326, col_offset=8), 'write', Load(), lineno=1326, col_offset=8), [Name('usage_msg', Load(), lineno=1326, col_offset=25)], [], None, None, lineno=1326, col_offset=8), lineno=1326, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1327, col_offset=8), 'exit', Load(), lineno=1327, col_offset=8), [Num(2, lineno=1327, col_offset=17)], [], None, None, lineno=1327, col_offset=8), lineno=1327, col_offset=8)], lineno=1324, col_offset=4)], [], lineno=1322, col_offset=4), For(Tuple([Name('o', Store(), lineno=1328, col_offset=8), Name('a', Store(), lineno=1328, col_offset=11)], Store(), lineno=1328, col_offset=8), Name('opts', Load(), lineno=1328, col_offset=16), [If(Compare(Name('o', Load(), lineno=1329, col_offset=11), [Eq()], [Str('-c', lineno=1329, col_offset=16)], lineno=1329, col_offset=11), [Assign([Name('cmd', Store(), lineno=1330, col_offset=12)], Name('a', Load(), lineno=1330, col_offset=18), lineno=1330, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1331, col_offset=12)], Name('True', Load(), lineno=1331, col_offset=27), lineno=1331, col_offset=12)], [], lineno=1329, col_offset=8), If(Compare(Name('o', Load(), lineno=1332, col_offset=11), [Eq()], [Str('-d', lineno=1332, col_offset=16)], lineno=1332, col_offset=11), [Assign([Name('debug', Store(), lineno=1333, col_offset=12)], Name('True', Load(), lineno=1333, col_offset=20), lineno=1333, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1334, col_offset=12)], Name('True', Load(), lineno=1334, col_offset=27), lineno=1334, col_offset=12)], [], lineno=1332, col_offset=8), If(Compare(Name('o', Load(), lineno=1335, col_offset=11), [Eq()], [Str('-e', lineno=1335, col_offset=16)], lineno=1335, col_offset=11), [Assign([Name('enable_edit', Store(), lineno=1336, col_offset=12)], Name('True', Load(), lineno=1336, col_offset=26), lineno=1336, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1337, col_offset=12)], Name('False', Load(), lineno=1337, col_offset=27), lineno=1337, col_offset=12)], [], lineno=1335, col_offset=8), If(Compare(Name('o', Load(), lineno=1338, col_offset=11), [Eq()], [Str('-h', lineno=1338, col_offset=16)], lineno=1338, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1339, col_offset=12), 'stdout', Load(), lineno=1339, col_offset=12), 'write', Load(), lineno=1339, col_offset=12), [Name('usage_msg', Load(), lineno=1339, col_offset=29)], [], None, None, lineno=1339, col_offset=12), lineno=1339, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=1340, col_offset=12), 'exit', Load(), lineno=1340, col_offset=12), [], [], None, None, lineno=1340, col_offset=12), lineno=1340, col_offset=12)], [], lineno=1338, col_offset=8), If(Compare(Name('o', Load(), lineno=1341, col_offset=11), [Eq()], [Str('-i', lineno=1341, col_offset=16)], lineno=1341, col_offset=11), [Assign([Name('enable_shell', Store(), lineno=1342, col_offset=12)], Name('True', Load(), lineno=1342, col_offset=27), lineno=1342, col_offset=12)], [], lineno=1341, col_offset=8), If(Compare(Name('o', Load(), lineno=1343, col_offset=11), [Eq()], [Str('-n', lineno=1343, col_offset=16)], lineno=1343, col_offset=11), [Assign([Name('use_subprocess', Store(), lineno=1344, col_offset=12)], Name('False', Load(), lineno=1344, col_offset=29), lineno=1344, col_offset=12)], [], lineno=1343, col_offset=8), If(Compare(Name('o', Load(), lineno=1345, col_offset=11), [Eq()], [Str('-r', lineno=1345, col_offset=16)], lineno=1345, col_offset=11), [Assign([Name('script', Store(), lineno=1346, col_offset=12)], Name('a', Load(), lineno=1346, col_offset=21), lineno=1346, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1347, col_offset=15), 'path', Load(), lineno=1347, col_offset=15), 'isfile', Load(), lineno=1347, col_offset=15), [Name('script', Load(), lineno=1347, col_offset=30)], [], None, None, lineno=1347, col_offset=15), [Pass( lineno=1348, col_offset=16)], [Print(None, [Str('No script file: ', lineno=1350, col_offset=22), Name('script', Load(), lineno=1350, col_offset=42)], True, lineno=1350, col_offset=16), Expr(Call(Attribute(Name('sys', Load(), lineno=1351, col_offset=16), 'exit', Load(), lineno=1351, col_offset=16), [], [], None, None, lineno=1351, col_offset=16), lineno=1351, col_offset=16)], lineno=1347, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1352, col_offset=12)], Name('True', Load(), lineno=1352, col_offset=27), lineno=1352, col_offset=12)], [], lineno=1345, col_offset=8), If(Compare(Name('o', Load(), lineno=1353, col_offset=11), [Eq()], [Str('-s', lineno=1353, col_offset=16)], lineno=1353, col_offset=11), [Assign([Name('startup', Store(), lineno=1354, col_offset=12)], Name('True', Load(), lineno=1354, col_offset=22), lineno=1354, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1355, col_offset=12)], Name('True', Load(), lineno=1355, col_offset=27), lineno=1355, col_offset=12)], [], lineno=1353, col_offset=8), If(Compare(Name('o', Load(), lineno=1356, col_offset=11), [Eq()], [Str('-t', lineno=1356, col_offset=16)], lineno=1356, col_offset=11), [Assign([Attribute(Name('PyShell', Load(), lineno=1357, col_offset=12), 'shell_title', Store(), lineno=1357, col_offset=12)], Name('a', Load(), lineno=1357, col_offset=34), lineno=1357, col_offset=12), Assign([Name('enable_shell', Store(), lineno=1358, col_offset=12)], Name('True', Load(), lineno=1358, col_offset=27), lineno=1358, col_offset=12)], [], lineno=1356, col_offset=8)], [], lineno=1328, col_offset=4), If(BoolOp(And(), [Name('args', Load(), lineno=1359, col_offset=7), Compare(Subscript(Name('args', Load(), lineno=1359, col_offset=16), Index(Num(0, lineno=1359, col_offset=21)), Load(), lineno=1359, col_offset=16), [Eq()], [Str('-', lineno=1359, col_offset=27)], lineno=1359, col_offset=16)], lineno=1359, col_offset=7), [Assign([Name('cmd', Store(), lineno=1360, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=1360, col_offset=14), 'stdin', Load(), lineno=1360, col_offset=14), 'read', Load(), lineno=1360, col_offset=14), [], [], None, None, lineno=1360, col_offset=14), lineno=1360, col_offset=8), Assign([Name('enable_shell', Store(), lineno=1361, col_offset=8)], Name('True', Load(), lineno=1361, col_offset=23), lineno=1361, col_offset=8)], [], lineno=1359, col_offset=4), For(Name('i', Store(), lineno=1363, col_offset=8), Call(Name('range', Load(), lineno=1363, col_offset=13), [Call(Name('len', Load(), lineno=1363, col_offset=19), [Attribute(Name('sys', Load(), lineno=1363, col_offset=23), 'path', Load(), lineno=1363, col_offset=23)], [], None, None, lineno=1363, col_offset=19)], [], None, None, lineno=1363, col_offset=13), [Assign([Subscript(Attribute(Name('sys', Load(), lineno=1364, col_offset=8), 'path', Load(), lineno=1364, col_offset=8), Index(Name('i', Load(), lineno=1364, col_offset=17)), Store(), lineno=1364, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1364, col_offset=22), 'path', Load(), lineno=1364, col_offset=22), 'abspath', Load(), lineno=1364, col_offset=22), [Subscript(Attribute(Name('sys', Load(), lineno=1364, col_offset=38), 'path', Load(), lineno=1364, col_offset=38), Index(Name('i', Load(), lineno=1364, col_offset=47)), Load(), lineno=1364, col_offset=38)], [], None, None, lineno=1364, col_offset=22), lineno=1364, col_offset=8)], [], lineno=1363, col_offset=4), If(BoolOp(And(), [Name('args', Load(), lineno=1365, col_offset=7), Compare(Subscript(Name('args', Load(), lineno=1365, col_offset=16), Index(Num(0, lineno=1365, col_offset=21)), Load(), lineno=1365, col_offset=16), [Eq()], [Str('-', lineno=1365, col_offset=27)], lineno=1365, col_offset=16)], lineno=1365, col_offset=7), [Assign([Attribute(Name('sys', Load(), lineno=1366, col_offset=8), 'argv', Store(), lineno=1366, col_offset=8)], BinOp(List([Str('', lineno=1366, col_offset=20)], Load(), lineno=1366, col_offset=19), Add(), Subscript(Name('args', Load(), lineno=1366, col_offset=26), Slice(Num(1, lineno=1366, col_offset=31), None, None), Load(), lineno=1366, col_offset=26), lineno=1366, col_offset=19), lineno=1366, col_offset=8)], [If(Name('cmd', Load(), lineno=1367, col_offset=9), [Assign([Attribute(Name('sys', Load(), lineno=1368, col_offset=8), 'argv', Store(), lineno=1368, col_offset=8)], BinOp(List([Str('-c', lineno=1368, col_offset=20)], Load(), lineno=1368, col_offset=19), Add(), Name('args', Load(), lineno=1368, col_offset=28), lineno=1368, col_offset=19), lineno=1368, col_offset=8)], [If(Name('script', Load(), lineno=1369, col_offset=9), [Assign([Attribute(Name('sys', Load(), lineno=1370, col_offset=8), 'argv', Store(), lineno=1370, col_offset=8)], BinOp(List([Name('script', Load(), lineno=1370, col_offset=20)], Load(), lineno=1370, col_offset=19), Add(), Name('args', Load(), lineno=1370, col_offset=30), lineno=1370, col_offset=19), lineno=1370, col_offset=8)], [If(Name('args', Load(), lineno=1371, col_offset=9), [Assign([Name('enable_edit', Store(), lineno=1372, col_offset=8)], Name('True', Load(), lineno=1372, col_offset=22), lineno=1372, col_offset=8), Assign([Name('pathx', Store(), lineno=1373, col_offset=8)], List([], Load(), lineno=1373, col_offset=16), lineno=1373, col_offset=8), For(Name('filename', Store(), lineno=1374, col_offset=12), Name('args', Load(), lineno=1374, col_offset=24), [Expr(Call(Attribute(Name('pathx', Load(), lineno=1375, col_offset=12), 'append', Load(), lineno=1375, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=1375, col_offset=25), 'path', Load(), lineno=1375, col_offset=25), 'dirname', Load(), lineno=1375, col_offset=25), [Name('filename', Load(), lineno=1375, col_offset=41)], [], None, None, lineno=1375, col_offset=25)], [], None, None, lineno=1375, col_offset=12), lineno=1375, col_offset=12)], [], lineno=1374, col_offset=8), For(Name('dir', Store(), lineno=1376, col_offset=12), Name('pathx', Load(), lineno=1376, col_offset=19), [Assign([Name('dir', Store(), lineno=1377, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=1377, col_offset=18), 'path', Load(), lineno=1377, col_offset=18), 'abspath', Load(), lineno=1377, col_offset=18), [Name('dir', Load(), lineno=1377, col_offset=34)], [], None, None, lineno=1377, col_offset=18), lineno=1377, col_offset=12), If(Compare(Name('dir', Load(), lineno=1378, col_offset=15), [NotIn()], [Attribute(Name('sys', Load(), lineno=1378, col_offset=26), 'path', Load(), lineno=1378, col_offset=26)], lineno=1378, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1379, col_offset=16), 'path', Load(), lineno=1379, col_offset=16), 'insert', Load(), lineno=1379, col_offset=16), [Num(0, lineno=1379, col_offset=32), Name('dir', Load(), lineno=1379, col_offset=35)], [], None, None, lineno=1379, col_offset=16), lineno=1379, col_offset=16)], [], lineno=1378, col_offset=12)], [], lineno=1376, col_offset=8)], [Assign([Name('dir', Store(), lineno=1381, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=1381, col_offset=14), 'getcwd', Load(), lineno=1381, col_offset=14), [], [], None, None, lineno=1381, col_offset=14), lineno=1381, col_offset=8), If(UnaryOp(Not(), Compare(Name('dir', Load(), lineno=1382, col_offset=15), [In()], [Attribute(Name('sys', Load(), lineno=1382, col_offset=22), 'path', Load(), lineno=1382, col_offset=22)], lineno=1382, col_offset=15), lineno=1382, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1383, col_offset=12), 'path', Load(), lineno=1383, col_offset=12), 'insert', Load(), lineno=1383, col_offset=12), [Num(0, lineno=1383, col_offset=28), Name('dir', Load(), lineno=1383, col_offset=31)], [], None, None, lineno=1383, col_offset=12), lineno=1383, col_offset=12)], [], lineno=1382, col_offset=8)], lineno=1371, col_offset=9)], lineno=1369, col_offset=9)], lineno=1367, col_offset=9)], lineno=1365, col_offset=4), Assign([Name('edit_start', Store(), lineno=1385, col_offset=4)], Call(Attribute(Name('idleConf', Load(), lineno=1385, col_offset=17), 'GetOption', Load(), lineno=1385, col_offset=17), [Str('main', lineno=1385, col_offset=36), Str('General', lineno=1385, col_offset=44), Str('editor-on-startup', lineno=1386, col_offset=36)], [keyword('type', Str('bool', lineno=1386, col_offset=62))], None, None, lineno=1385, col_offset=17), lineno=1385, col_offset=4), Assign([Name('enable_edit', Store(), lineno=1387, col_offset=4)], BoolOp(Or(), [Name('enable_edit', Load(), lineno=1387, col_offset=18), Name('edit_start', Load(), lineno=1387, col_offset=33)], lineno=1387, col_offset=18), lineno=1387, col_offset=4), Assign([Name('root', Store(), lineno=1389, col_offset=4)], Call(Name('Tk', Load(), lineno=1389, col_offset=11), [], [keyword('className', Str('Idle', lineno=1389, col_offset=24))], None, None, lineno=1389, col_offset=11), lineno=1389, col_offset=4), Expr(Call(Name('fixwordbreaks', Load(), lineno=1391, col_offset=4), [Name('root', Load(), lineno=1391, col_offset=18)], [], None, None, lineno=1391, col_offset=4), lineno=1391, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=1392, col_offset=4), 'withdraw', Load(), lineno=1392, col_offset=4), [], [], None, None, lineno=1392, col_offset=4), lineno=1392, col_offset=4), Assign([Name('flist', Store(), lineno=1393, col_offset=4)], Call(Name('PyShellFileList', Load(), lineno=1393, col_offset=12), [Name('root', Load(), lineno=1393, col_offset=28)], [], None, None, lineno=1393, col_offset=12), lineno=1393, col_offset=4), Expr(Call(Attribute(Name('macosxSupport', Load(), lineno=1394, col_offset=4), 'setupApp', Load(), lineno=1394, col_offset=4), [Name('root', Load(), lineno=1394, col_offset=27), Name('flist', Load(), lineno=1394, col_offset=33)], [], None, None, lineno=1394, col_offset=4), lineno=1394, col_offset=4), If(Name('enable_edit', Load(), lineno=1396, col_offset=7), [If(UnaryOp(Not(), BoolOp(Or(), [Name('cmd', Load(), lineno=1397, col_offset=16), Name('script', Load(), lineno=1397, col_offset=23)], lineno=1397, col_offset=16), lineno=1397, col_offset=11), [For(Name('filename', Store(), lineno=1398, col_offset=16), Name('args', Load(), lineno=1398, col_offset=28), [Expr(Call(Attribute(Name('flist', Load(), lineno=1399, col_offset=16), 'open', Load(), lineno=1399, col_offset=16), [Name('filename', Load(), lineno=1399, col_offset=27)], [], None, None, lineno=1399, col_offset=16), lineno=1399, col_offset=16)], [], lineno=1398, col_offset=12), If(UnaryOp(Not(), Name('args', Load(), lineno=1400, col_offset=19), lineno=1400, col_offset=15), [Expr(Call(Attribute(Name('flist', Load(), lineno=1401, col_offset=16), 'new', Load(), lineno=1401, col_offset=16), [], [], None, None, lineno=1401, col_offset=16), lineno=1401, col_offset=16)], [], lineno=1400, col_offset=12)], [], lineno=1397, col_offset=8)], [], lineno=1396, col_offset=4), If(Name('enable_shell', Load(), lineno=1402, col_offset=7), [Assign([Name('shell', Store(), lineno=1403, col_offset=8)], Call(Attribute(Name('flist', Load(), lineno=1403, col_offset=16), 'open_shell', Load(), lineno=1403, col_offset=16), [], [], None, None, lineno=1403, col_offset=16), lineno=1403, col_offset=8), If(UnaryOp(Not(), Name('shell', Load(), lineno=1404, col_offset=15), lineno=1404, col_offset=11), [Return(None, lineno=1405, col_offset=12)], [], lineno=1404, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('macosxSupport', Load(), lineno=1407, col_offset=11), 'runningAsOSXApp', Load(), lineno=1407, col_offset=11), [], [], None, None, lineno=1407, col_offset=11), Attribute(Name('flist', Load(), lineno=1407, col_offset=47), 'dict', Load(), lineno=1407, col_offset=47)], lineno=1407, col_offset=11), [Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1412, col_offset=12), 'top', Load(), lineno=1412, col_offset=12), 'lower', Load(), lineno=1412, col_offset=12), [], [], None, None, lineno=1412, col_offset=12), lineno=1412, col_offset=12)], [], lineno=1407, col_offset=8)], [], lineno=1402, col_offset=4), Assign([Name('shell', Store(), lineno=1414, col_offset=4)], Attribute(Name('flist', Load(), lineno=1414, col_offset=12), 'pyshell', Load(), lineno=1414, col_offset=12), lineno=1414, col_offset=4), If(Name('debug', Load(), lineno=1416, col_offset=7), [Expr(Call(Attribute(Name('shell', Load(), lineno=1417, col_offset=8), 'open_debugger', Load(), lineno=1417, col_offset=8), [], [], None, None, lineno=1417, col_offset=8), lineno=1417, col_offset=8)], [], lineno=1416, col_offset=4), If(Name('startup', Load(), lineno=1418, col_offset=7), [Assign([Name('filename', Store(), lineno=1419, col_offset=8)], BoolOp(Or(), [Call(Attribute(Attribute(Name('os', Load(), lineno=1419, col_offset=19), 'environ', Load(), lineno=1419, col_offset=19), 'get', Load(), lineno=1419, col_offset=19), [Str('IDLESTARTUP', lineno=1419, col_offset=34)], [], None, None, lineno=1419, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=1420, col_offset=19), 'environ', Load(), lineno=1420, col_offset=19), 'get', Load(), lineno=1420, col_offset=19), [Str('PYTHONSTARTUP', lineno=1420, col_offset=34)], [], None, None, lineno=1420, col_offset=19)], lineno=1419, col_offset=19), lineno=1419, col_offset=8), If(BoolOp(And(), [Name('filename', Load(), lineno=1421, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=1421, col_offset=24), 'path', Load(), lineno=1421, col_offset=24), 'isfile', Load(), lineno=1421, col_offset=24), [Name('filename', Load(), lineno=1421, col_offset=39)], [], None, None, lineno=1421, col_offset=24)], lineno=1421, col_offset=11), [Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1422, col_offset=12), 'interp', Load(), lineno=1422, col_offset=12), 'execfile', Load(), lineno=1422, col_offset=12), [Name('filename', Load(), lineno=1422, col_offset=34)], [], None, None, lineno=1422, col_offset=12), lineno=1422, col_offset=12)], [], lineno=1421, col_offset=8)], [], lineno=1418, col_offset=4), If(BoolOp(Or(), [BoolOp(And(), [Name('shell', Load(), lineno=1423, col_offset=7), Name('cmd', Load(), lineno=1423, col_offset=17)], lineno=1423, col_offset=7), Name('script', Load(), lineno=1423, col_offset=24)], lineno=1423, col_offset=7), [Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1424, col_offset=8), 'interp', Load(), lineno=1424, col_offset=8), 'runcommand', Load(), lineno=1424, col_offset=8), [BinOp(Str('if 1:\n            import sys as _sys\n            _sys.argv = %r\n            del _sys\n            \n', lineno=1428, col_offset=-1), Mod(), Tuple([Attribute(Name('sys', Load(), lineno=1428, col_offset=21), 'argv', Load(), lineno=1428, col_offset=21)], Load(), lineno=1428, col_offset=21), lineno=1428, col_offset=-1)], [], None, None, lineno=1424, col_offset=8), lineno=1424, col_offset=8), If(Name('cmd', Load(), lineno=1429, col_offset=11), [Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1430, col_offset=12), 'interp', Load(), lineno=1430, col_offset=12), 'execsource', Load(), lineno=1430, col_offset=12), [Name('cmd', Load(), lineno=1430, col_offset=36)], [], None, None, lineno=1430, col_offset=12), lineno=1430, col_offset=12)], [If(Name('script', Load(), lineno=1431, col_offset=13), [Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1432, col_offset=12), 'interp', Load(), lineno=1432, col_offset=12), 'prepend_syspath', Load(), lineno=1432, col_offset=12), [Name('script', Load(), lineno=1432, col_offset=41)], [], None, None, lineno=1432, col_offset=12), lineno=1432, col_offset=12), Expr(Call(Attribute(Attribute(Name('shell', Load(), lineno=1433, col_offset=12), 'interp', Load(), lineno=1433, col_offset=12), 'execfile', Load(), lineno=1433, col_offset=12), [Name('script', Load(), lineno=1433, col_offset=34)], [], None, None, lineno=1433, col_offset=12), lineno=1433, col_offset=12)], [], lineno=1431, col_offset=13)], lineno=1429, col_offset=8)], [], lineno=1423, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=1435, col_offset=4), 'mainloop', Load(), lineno=1435, col_offset=4), [], [], None, None, lineno=1435, col_offset=4), lineno=1435, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=1436, col_offset=4), 'destroy', Load(), lineno=1436, col_offset=4), [], [], None, None, lineno=1436, col_offset=4), lineno=1436, col_offset=4)], [], lineno=1312, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1438, col_offset=3), [Eq()], [Str('__main__', lineno=1438, col_offset=15)], lineno=1438, col_offset=3), [Assign([Subscript(Attribute(Name('sys', Load(), lineno=1439, col_offset=4), 'modules', Load(), lineno=1439, col_offset=4), Index(Str('PyShell', lineno=1439, col_offset=16)), Store(), lineno=1439, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=1439, col_offset=29), 'modules', Load(), lineno=1439, col_offset=29), Index(Str('__main__', lineno=1439, col_offset=41)), Load(), lineno=1439, col_offset=29), lineno=1439, col_offset=4), Expr(Call(Name('main', Load(), lineno=1440, col_offset=4), [], [], None, None, lineno=1440, col_offset=4), lineno=1440, col_offset=4)], [], lineno=1438, col_offset=0)])
