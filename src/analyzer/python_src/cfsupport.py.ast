Module([Import([alias('string', None)], lineno=8, col_offset=0), Assign([Name('MODNAME', Store(), lineno=11, col_offset=0)], Str('_CF', lineno=11, col_offset=10), lineno=11, col_offset=0), Assign([Name('MODPREFIX', Store(), lineno=14, col_offset=0)], Str('CF', lineno=14, col_offset=12), lineno=14, col_offset=0), Assign([Name('INPUTFILE', Store(), lineno=15, col_offset=0)], BinOp(Call(Attribute(Name('string', Load(), lineno=15, col_offset=12), 'lower', Load(), lineno=15, col_offset=12), [Name('MODPREFIX', Load(), lineno=15, col_offset=25)], [], None, None, lineno=15, col_offset=12), Add(), Str('gen.py', lineno=15, col_offset=38), lineno=15, col_offset=12), lineno=15, col_offset=0), Assign([Name('OUTPUTFILE', Store(), lineno=16, col_offset=0)], BinOp(Name('MODNAME', Load(), lineno=16, col_offset=13), Add(), Str('module.c', lineno=16, col_offset=23), lineno=16, col_offset=13), lineno=16, col_offset=0), ImportFrom('macsupport', [alias('*', None)], 0, lineno=18, col_offset=0), ClassDef('MethodSkipArg1', [Name('MethodGenerator', Load(), lineno=22, col_offset=21)], [Expr(Str('Similar to MethodGenerator, but has self as last argument', lineno=23, col_offset=4), lineno=23, col_offset=4), FunctionDef('parseArgumentList', arguments([Name('self', Param(), lineno=25, col_offset=26), Name('args', Param(), lineno=25, col_offset=32)], None, None, []), [If(Compare(Call(Name('len', Load(), lineno=26, col_offset=11), [Name('args', Load(), lineno=26, col_offset=15)], [], None, None, lineno=26, col_offset=11), [Lt()], [Num(2, lineno=26, col_offset=23)], lineno=26, col_offset=11), [Raise(Name('ValueError', Load(), lineno=27, col_offset=18), Str('MethodSkipArg1 expects at least 2 args', lineno=27, col_offset=30), None, lineno=27, col_offset=12)], [], lineno=26, col_offset=8), Assign([Tuple([Name('a0', Store(), lineno=28, col_offset=8), Name('a1', Store(), lineno=28, col_offset=12), Name('args', Store(), lineno=28, col_offset=16)], Store(), lineno=28, col_offset=8)], Tuple([Subscript(Name('args', Load(), lineno=28, col_offset=23), Index(Num(0, lineno=28, col_offset=28)), Load(), lineno=28, col_offset=23), Subscript(Name('args', Load(), lineno=28, col_offset=32), Index(Num(1, lineno=28, col_offset=37)), Load(), lineno=28, col_offset=32), Subscript(Name('args', Load(), lineno=28, col_offset=41), Slice(Num(2, lineno=28, col_offset=46), None, None), Load(), lineno=28, col_offset=41)], Load(), lineno=28, col_offset=23), lineno=28, col_offset=8), Assign([Tuple([Name('t0', Store(), lineno=29, col_offset=8), Name('n0', Store(), lineno=29, col_offset=12), Name('m0', Store(), lineno=29, col_offset=16)], Store(), lineno=29, col_offset=8)], Name('a0', Load(), lineno=29, col_offset=21), lineno=29, col_offset=8), If(BoolOp(And(), [Compare(Name('t0', Load(), lineno=30, col_offset=11), [NotEq()], [Str('CFAllocatorRef', lineno=30, col_offset=17)], lineno=30, col_offset=11), Compare(Name('m0', Load(), lineno=30, col_offset=38), [NotEq()], [Name('InMode', Load(), lineno=30, col_offset=44)], lineno=30, col_offset=38)], lineno=30, col_offset=11), [Raise(Name('ValueError', Load(), lineno=31, col_offset=18), Str('MethodSkipArg1 should have dummy AllocatorRef first arg', lineno=31, col_offset=30), None, lineno=31, col_offset=12)], [], lineno=30, col_offset=8), Assign([Tuple([Name('t1', Store(), lineno=32, col_offset=8), Name('n1', Store(), lineno=32, col_offset=12), Name('m1', Store(), lineno=32, col_offset=16)], Store(), lineno=32, col_offset=8)], Name('a1', Load(), lineno=32, col_offset=21), lineno=32, col_offset=8), If(Compare(Name('m1', Load(), lineno=33, col_offset=11), [NotEq()], [Name('InMode', Load(), lineno=33, col_offset=17)], lineno=33, col_offset=11), [Raise(Name('ValueError', Load(), lineno=34, col_offset=18), Str("method's 'self' must be 'InMode'", lineno=34, col_offset=30), None, lineno=34, col_offset=12)], [], lineno=33, col_offset=8), Assign([Name('dummy', Store(), lineno=35, col_offset=8)], Call(Name('Variable', Load(), lineno=35, col_offset=16), [Name('t0', Load(), lineno=35, col_offset=25), Name('n0', Load(), lineno=35, col_offset=29), Name('m0', Load(), lineno=35, col_offset=33)], [], None, None, lineno=35, col_offset=16), lineno=35, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'argumentList', Load(), lineno=36, col_offset=8), 'append', Load(), lineno=36, col_offset=8), [Name('dummy', Load(), lineno=36, col_offset=33)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'itself', Store(), lineno=37, col_offset=8)], Call(Name('Variable', Load(), lineno=37, col_offset=22), [Name('t1', Load(), lineno=37, col_offset=31), Str('_self->ob_itself', lineno=37, col_offset=35), Name('SelfMode', Load(), lineno=37, col_offset=55)], [], None, None, lineno=37, col_offset=22), lineno=37, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'argumentList', Load(), lineno=38, col_offset=8), 'append', Load(), lineno=38, col_offset=8), [Attribute(Name('self', Load(), lineno=38, col_offset=33), 'itself', Load(), lineno=38, col_offset=33)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('FunctionGenerator', Load(), lineno=39, col_offset=8), 'parseArgumentList', Load(), lineno=39, col_offset=8), [Name('self', Load(), lineno=39, col_offset=44), Name('args', Load(), lineno=39, col_offset=50)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8)], [], lineno=25, col_offset=4)], [], lineno=22, col_offset=0), Assign([Name('includestuff', Store(), lineno=44, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=44, col_offset=15), Add(), Str('\n#include <CoreServices/CoreServices.h>\n\n#include "pycfbridge.h"\n\n#ifdef USE_TOOLBOX_OBJECT_GLUE\nextern PyObject *_CFObj_New(CFTypeRef);\nextern int _CFObj_Convert(PyObject *, CFTypeRef *);\n#define CFObj_New _CFObj_New\n#define CFObj_Convert _CFObj_Convert\n\nextern PyObject *_CFTypeRefObj_New(CFTypeRef);\nextern int _CFTypeRefObj_Convert(PyObject *, CFTypeRef *);\n#define CFTypeRefObj_New _CFTypeRefObj_New\n#define CFTypeRefObj_Convert _CFTypeRefObj_Convert\n\nextern PyObject *_CFStringRefObj_New(CFStringRef);\nextern int _CFStringRefObj_Convert(PyObject *, CFStringRef *);\n#define CFStringRefObj_New _CFStringRefObj_New\n#define CFStringRefObj_Convert _CFStringRefObj_Convert\n\nextern PyObject *_CFMutableStringRefObj_New(CFMutableStringRef);\nextern int _CFMutableStringRefObj_Convert(PyObject *, CFMutableStringRef *);\n#define CFMutableStringRefObj_New _CFMutableStringRefObj_New\n#define CFMutableStringRefObj_Convert _CFMutableStringRefObj_Convert\n\nextern PyObject *_CFArrayRefObj_New(CFArrayRef);\nextern int _CFArrayRefObj_Convert(PyObject *, CFArrayRef *);\n#define CFArrayRefObj_New _CFArrayRefObj_New\n#define CFArrayRefObj_Convert _CFArrayRefObj_Convert\n\nextern PyObject *_CFMutableArrayRefObj_New(CFMutableArrayRef);\nextern int _CFMutableArrayRefObj_Convert(PyObject *, CFMutableArrayRef *);\n#define CFMutableArrayRefObj_New _CFMutableArrayRefObj_New\n#define CFMutableArrayRefObj_Convert _CFMutableArrayRefObj_Convert\n\nextern PyObject *_CFDataRefObj_New(CFDataRef);\nextern int _CFDataRefObj_Convert(PyObject *, CFDataRef *);\n#define CFDataRefObj_New _CFDataRefObj_New\n#define CFDataRefObj_Convert _CFDataRefObj_Convert\n\nextern PyObject *_CFMutableDataRefObj_New(CFMutableDataRef);\nextern int _CFMutableDataRefObj_Convert(PyObject *, CFMutableDataRef *);\n#define CFMutableDataRefObj_New _CFMutableDataRefObj_New\n#define CFMutableDataRefObj_Convert _CFMutableDataRefObj_Convert\n\nextern PyObject *_CFDictionaryRefObj_New(CFDictionaryRef);\nextern int _CFDictionaryRefObj_Convert(PyObject *, CFDictionaryRef *);\n#define CFDictionaryRefObj_New _CFDictionaryRefObj_New\n#define CFDictionaryRefObj_Convert _CFDictionaryRefObj_Convert\n\nextern PyObject *_CFMutableDictionaryRefObj_New(CFMutableDictionaryRef);\nextern int _CFMutableDictionaryRefObj_Convert(PyObject *, CFMutableDictionaryRef *);\n#define CFMutableDictionaryRefObj_New _CFMutableDictionaryRefObj_New\n#define CFMutableDictionaryRefObj_Convert _CFMutableDictionaryRefObj_Convert\n\nextern PyObject *_CFURLRefObj_New(CFURLRef);\nextern int _CFURLRefObj_Convert(PyObject *, CFURLRef *);\nextern int _OptionalCFURLRefObj_Convert(PyObject *, CFURLRef *);\n#define CFURLRefObj_New _CFURLRefObj_New\n#define CFURLRefObj_Convert _CFURLRefObj_Convert\n#define OptionalCFURLRefObj_Convert _OptionalCFURLRefObj_Convert\n#endif\n\n/*\n** Parse/generate CFRange records\n*/\nPyObject *CFRange_New(CFRange *itself)\n{\n\n        return Py_BuildValue("ll", (long)itself->location, (long)itself->length);\n}\n\nint\nCFRange_Convert(PyObject *v, CFRange *p_itself)\n{\n        long location, length;\n\n        if( !PyArg_ParseTuple(v, "ll", &location, &length) )\n                return 0;\n        p_itself->location = (CFIndex)location;\n        p_itself->length = (CFIndex)length;\n        return 1;\n}\n\n/* Optional CFURL argument or None (passed as NULL) */\nint\nOptionalCFURLRefObj_Convert(PyObject *v, CFURLRef *p_itself)\n{\n    if ( v == Py_None ) {\n        p_itself = NULL;\n        return 1;\n    }\n    return CFURLRefObj_Convert(v, p_itself);\n}\n', lineno=139, col_offset=-1), lineno=44, col_offset=15), lineno=44, col_offset=0), Assign([Name('finalstuff', Store(), lineno=141, col_offset=0)], BinOp(Name('finalstuff', Load(), lineno=141, col_offset=13), Add(), Str('\n\n/* Routines to convert any CF type to/from the corresponding CFxxxObj */\nPyObject *CFObj_New(CFTypeRef itself)\n{\n        if (itself == NULL)\n        {\n                PyErr_SetString(PyExc_RuntimeError, "cannot wrap NULL");\n                return NULL;\n        }\n        if (CFGetTypeID(itself) == CFArrayGetTypeID()) return CFArrayRefObj_New((CFArrayRef)itself);\n        if (CFGetTypeID(itself) == CFDictionaryGetTypeID()) return CFDictionaryRefObj_New((CFDictionaryRef)itself);\n        if (CFGetTypeID(itself) == CFDataGetTypeID()) return CFDataRefObj_New((CFDataRef)itself);\n        if (CFGetTypeID(itself) == CFStringGetTypeID()) return CFStringRefObj_New((CFStringRef)itself);\n        if (CFGetTypeID(itself) == CFURLGetTypeID()) return CFURLRefObj_New((CFURLRef)itself);\n        /* XXXX Or should we use PyCF_CF2Python here?? */\n        return CFTypeRefObj_New(itself);\n}\nint CFObj_Convert(PyObject *v, CFTypeRef *p_itself)\n{\n\n        if (v == Py_None) { *p_itself = NULL; return 1; }\n        /* Check for other CF objects here */\n\n        if (!CFTypeRefObj_Check(v) &&\n                !CFArrayRefObj_Check(v) &&\n                !CFMutableArrayRefObj_Check(v) &&\n                !CFDictionaryRefObj_Check(v) &&\n                !CFMutableDictionaryRefObj_Check(v) &&\n                !CFDataRefObj_Check(v) &&\n                !CFMutableDataRefObj_Check(v) &&\n                !CFStringRefObj_Check(v) &&\n                !CFMutableStringRefObj_Check(v) &&\n                !CFURLRefObj_Check(v) )\n        {\n                /* XXXX Or should we use PyCF_Python2CF here?? */\n                PyErr_SetString(PyExc_TypeError, "CF object required");\n                return 0;\n        }\n        *p_itself = ((CFTypeRefObject *)v)->ob_itself;\n        return 1;\n}\n', lineno=183, col_offset=-1), lineno=141, col_offset=13), lineno=141, col_offset=0), Assign([Name('initstuff', Store(), lineno=185, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=185, col_offset=12), Add(), Str('\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFTypeRef, CFObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFTypeRef, CFObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFTypeRef, CFTypeRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFTypeRef, CFTypeRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFStringRef, CFStringRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFStringRef, CFStringRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFMutableStringRef, CFMutableStringRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFMutableStringRef, CFMutableStringRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFArrayRef, CFArrayRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFArrayRef, CFArrayRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFMutableArrayRef, CFMutableArrayRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFMutableArrayRef, CFMutableArrayRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFDictionaryRef, CFDictionaryRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFDictionaryRef, CFDictionaryRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFMutableDictionaryRef, CFMutableDictionaryRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFMutableDictionaryRef, CFMutableDictionaryRefObj_Convert);\nPyMac_INIT_TOOLBOX_OBJECT_NEW(CFURLRef, CFURLRefObj_New);\nPyMac_INIT_TOOLBOX_OBJECT_CONVERT(CFURLRef, CFURLRefObj_Convert);\n', lineno=204, col_offset=-1), lineno=185, col_offset=12), lineno=185, col_offset=0), Assign([Name('variablestuff', Store(), lineno=206, col_offset=0)], Str('\n#define _STRINGCONST(name) PyModule_AddObject(m, #name, CFStringRefObj_New(name))\n_STRINGCONST(kCFPreferencesAnyApplication);\n_STRINGCONST(kCFPreferencesCurrentApplication);\n_STRINGCONST(kCFPreferencesAnyHost);\n_STRINGCONST(kCFPreferencesCurrentHost);\n_STRINGCONST(kCFPreferencesAnyUser);\n_STRINGCONST(kCFPreferencesCurrentUser);\n\n', lineno=215, col_offset=-1), lineno=206, col_offset=0), Assign([Name('Boolean', Store(), lineno=217, col_offset=0)], Call(Name('Type', Load(), lineno=217, col_offset=10), [Str('Boolean', lineno=217, col_offset=15), Str('l', lineno=217, col_offset=26)], [], None, None, lineno=217, col_offset=10), lineno=217, col_offset=0), Assign([Name('CFTypeID', Store(), lineno=218, col_offset=0)], Call(Name('Type', Load(), lineno=218, col_offset=11), [Str('CFTypeID', lineno=218, col_offset=16), Str('l', lineno=218, col_offset=28)], [], None, None, lineno=218, col_offset=11), lineno=218, col_offset=0), Assign([Name('CFHashCode', Store(), lineno=219, col_offset=0)], Call(Name('Type', Load(), lineno=219, col_offset=13), [Str('CFHashCode', lineno=219, col_offset=18), Str('l', lineno=219, col_offset=32)], [], None, None, lineno=219, col_offset=13), lineno=219, col_offset=0), Assign([Name('CFIndex', Store(), lineno=220, col_offset=0)], Call(Name('Type', Load(), lineno=220, col_offset=10), [Str('CFIndex', lineno=220, col_offset=15), Str('l', lineno=220, col_offset=26)], [], None, None, lineno=220, col_offset=10), lineno=220, col_offset=0), Assign([Name('CFRange', Store(), lineno=221, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=221, col_offset=10), [Str('CFRange', lineno=221, col_offset=28), Str('CFRange', lineno=221, col_offset=39)], [], None, None, lineno=221, col_offset=10), lineno=221, col_offset=0), Assign([Name('CFOptionFlags', Store(), lineno=222, col_offset=0)], Call(Name('Type', Load(), lineno=222, col_offset=16), [Str('CFOptionFlags', lineno=222, col_offset=21), Str('l', lineno=222, col_offset=38)], [], None, None, lineno=222, col_offset=16), lineno=222, col_offset=0), Assign([Name('CFStringEncoding', Store(), lineno=223, col_offset=0)], Call(Name('Type', Load(), lineno=223, col_offset=19), [Str('CFStringEncoding', lineno=223, col_offset=24), Str('l', lineno=223, col_offset=44)], [], None, None, lineno=223, col_offset=19), lineno=223, col_offset=0), Assign([Name('CFComparisonResult', Store(), lineno=224, col_offset=0)], Call(Name('Type', Load(), lineno=224, col_offset=21), [Str('CFComparisonResult', lineno=224, col_offset=26), Str('l', lineno=224, col_offset=48)], [], None, None, lineno=224, col_offset=21), lineno=224, col_offset=0), Assign([Name('CFURLPathStyle', Store(), lineno=225, col_offset=0)], Call(Name('Type', Load(), lineno=225, col_offset=17), [Str('CFURLPathStyle', lineno=225, col_offset=22), Str('l', lineno=225, col_offset=40)], [], None, None, lineno=225, col_offset=17), lineno=225, col_offset=0), Assign([Name('char_ptr', Store(), lineno=227, col_offset=0)], Name('stringptr', Load(), lineno=227, col_offset=11), lineno=227, col_offset=0), Assign([Name('return_stringptr', Store(), lineno=228, col_offset=0)], Call(Name('Type', Load(), lineno=228, col_offset=19), [Str('char *', lineno=228, col_offset=24), Str('s', lineno=228, col_offset=34)], [], None, None, lineno=228, col_offset=19), lineno=228, col_offset=0), Assign([Name('CFAllocatorRef', Store(), lineno=230, col_offset=0)], Call(Name('FakeType', Load(), lineno=230, col_offset=17), [Str('(CFAllocatorRef)NULL', lineno=230, col_offset=26)], [], None, None, lineno=230, col_offset=17), lineno=230, col_offset=0), Assign([Name('CFArrayCallBacks_ptr', Store(), lineno=231, col_offset=0)], Call(Name('FakeType', Load(), lineno=231, col_offset=23), [Str('&kCFTypeArrayCallBacks', lineno=231, col_offset=32)], [], None, None, lineno=231, col_offset=23), lineno=231, col_offset=0), Assign([Name('CFDictionaryKeyCallBacks_ptr', Store(), lineno=232, col_offset=0)], Call(Name('FakeType', Load(), lineno=232, col_offset=31), [Str('&kCFTypeDictionaryKeyCallBacks', lineno=232, col_offset=40)], [], None, None, lineno=232, col_offset=31), lineno=232, col_offset=0), Assign([Name('CFDictionaryValueCallBacks_ptr', Store(), lineno=233, col_offset=0)], Call(Name('FakeType', Load(), lineno=233, col_offset=33), [Str('&kCFTypeDictionaryValueCallBacks', lineno=233, col_offset=42)], [], None, None, lineno=233, col_offset=33), lineno=233, col_offset=0), Assign([Name('CFTypeRef', Store(), lineno=235, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=235, col_offset=12), [Str('CFTypeRef', lineno=235, col_offset=30), Str('CFTypeRefObj', lineno=235, col_offset=43)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=0), Assign([Name('CFArrayRef', Store(), lineno=236, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=236, col_offset=13), [Str('CFArrayRef', lineno=236, col_offset=31), Str('CFArrayRefObj', lineno=236, col_offset=45)], [], None, None, lineno=236, col_offset=13), lineno=236, col_offset=0), Assign([Name('CFMutableArrayRef', Store(), lineno=237, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=237, col_offset=20), [Str('CFMutableArrayRef', lineno=237, col_offset=38), Str('CFMutableArrayRefObj', lineno=237, col_offset=59)], [], None, None, lineno=237, col_offset=20), lineno=237, col_offset=0), Assign([Name('CFArrayRef', Store(), lineno=238, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=238, col_offset=13), [Str('CFArrayRef', lineno=238, col_offset=31), Str('CFArrayRefObj', lineno=238, col_offset=45)], [], None, None, lineno=238, col_offset=13), lineno=238, col_offset=0), Assign([Name('CFMutableArrayRef', Store(), lineno=239, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=239, col_offset=20), [Str('CFMutableArrayRef', lineno=239, col_offset=38), Str('CFMutableArrayRefObj', lineno=239, col_offset=59)], [], None, None, lineno=239, col_offset=20), lineno=239, col_offset=0), Assign([Name('CFDataRef', Store(), lineno=240, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=240, col_offset=12), [Str('CFDataRef', lineno=240, col_offset=30), Str('CFDataRefObj', lineno=240, col_offset=43)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=0), Assign([Name('CFMutableDataRef', Store(), lineno=241, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=241, col_offset=19), [Str('CFMutableDataRef', lineno=241, col_offset=37), Str('CFMutableDataRefObj', lineno=241, col_offset=57)], [], None, None, lineno=241, col_offset=19), lineno=241, col_offset=0), Assign([Name('CFDictionaryRef', Store(), lineno=242, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=242, col_offset=18), [Str('CFDictionaryRef', lineno=242, col_offset=36), Str('CFDictionaryRefObj', lineno=242, col_offset=55)], [], None, None, lineno=242, col_offset=18), lineno=242, col_offset=0), Assign([Name('CFMutableDictionaryRef', Store(), lineno=243, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=243, col_offset=25), [Str('CFMutableDictionaryRef', lineno=243, col_offset=43), Str('CFMutableDictionaryRefObj', lineno=243, col_offset=69)], [], None, None, lineno=243, col_offset=25), lineno=243, col_offset=0), Assign([Name('CFStringRef', Store(), lineno=244, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=244, col_offset=14), [Str('CFStringRef', lineno=244, col_offset=32), Str('CFStringRefObj', lineno=244, col_offset=47)], [], None, None, lineno=244, col_offset=14), lineno=244, col_offset=0), Assign([Name('CFMutableStringRef', Store(), lineno=245, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=245, col_offset=21), [Str('CFMutableStringRef', lineno=245, col_offset=39), Str('CFMutableStringRefObj', lineno=245, col_offset=61)], [], None, None, lineno=245, col_offset=21), lineno=245, col_offset=0), Assign([Name('CFURLRef', Store(), lineno=246, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=246, col_offset=11), [Str('CFURLRef', lineno=246, col_offset=29), Str('CFURLRefObj', lineno=246, col_offset=41)], [], None, None, lineno=246, col_offset=11), lineno=246, col_offset=0), Assign([Name('OptionalCFURLRef', Store(), lineno=247, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=247, col_offset=20), [Str('CFURLRef', lineno=247, col_offset=38), Str('OptionalCFURLRefObj', lineno=247, col_offset=50)], [], None, None, lineno=247, col_offset=20), lineno=247, col_offset=0), ClassDef('MyGlobalObjectDefinition', [Name('PEP253Mixin', Load(), lineno=253, col_offset=31), Name('GlobalObjectDefinition', Load(), lineno=253, col_offset=44)], [FunctionDef('outputCheckNewArg', arguments([Name('self', Param(), lineno=254, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=255, col_offset=8), [Str('if (itself == NULL)', lineno=255, col_offset=15)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=256, col_offset=8), [], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8), Expr(Call(Name('Output', Load(), lineno=257, col_offset=8), [Str('PyErr_SetString(PyExc_RuntimeError, "cannot wrap NULL");', lineno=257, col_offset=15)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Name('Output', Load(), lineno=258, col_offset=8), [Str('return NULL;', lineno=258, col_offset=15)], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=259, col_offset=8), [], [], None, None, lineno=259, col_offset=8), lineno=259, col_offset=8)], [], lineno=254, col_offset=4), FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=260, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=261, col_offset=8), 'outputStructMembers', Load(), lineno=261, col_offset=8), [Name('self', Load(), lineno=261, col_offset=51)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8), Expr(Call(Name('Output', Load(), lineno=262, col_offset=8), [Str('void (*ob_freeit)(CFTypeRef ptr);', lineno=262, col_offset=15)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=263, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=264, col_offset=8), 'outputInitStructMembers', Load(), lineno=264, col_offset=8), [Name('self', Load(), lineno=264, col_offset=55)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8), Expr(Call(Name('Output', Load(), lineno=266, col_offset=8), [Str('it->ob_freeit = CFRelease;', lineno=266, col_offset=15)], [], None, None, lineno=266, col_offset=8), lineno=266, col_offset=8)], [], lineno=263, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=267, col_offset=30)], None, None, []), [Expr(Call(Name('Out', Load(), lineno=268, col_offset=8), [Str('\n        if (v == Py_None) { *p_itself = NULL; return 1; }\n        /* Check for other CF objects here */\n        ', lineno=271, col_offset=-1)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('outputCleanupStructMembers', arguments([Name('self', Param(), lineno=272, col_offset=35)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=273, col_offset=8), [Str('if (self->ob_freeit && self->ob_itself)', lineno=273, col_offset=15)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=274, col_offset=8), [], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8), Expr(Call(Name('Output', Load(), lineno=275, col_offset=8), [Str('self->ob_freeit((CFTypeRef)self->ob_itself);', lineno=275, col_offset=15)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Expr(Call(Name('Output', Load(), lineno=276, col_offset=8), [Str('self->ob_itself = NULL;', lineno=276, col_offset=15)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=277, col_offset=8), [], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('outputCompare', arguments([Name('self', Param(), lineno=279, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=280, col_offset=8), [], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), Expr(Call(Name('Output', Load(), lineno=281, col_offset=8), [Str('static int %s_compare(%s *self, %s *other)', lineno=281, col_offset=15), Attribute(Name('self', Load(), lineno=281, col_offset=61), 'prefix', Load(), lineno=281, col_offset=61), Attribute(Name('self', Load(), lineno=281, col_offset=74), 'objecttype', Load(), lineno=281, col_offset=74), Attribute(Name('self', Load(), lineno=281, col_offset=91), 'objecttype', Load(), lineno=281, col_offset=91)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=282, col_offset=8), [], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Call(Name('Output', Load(), lineno=283, col_offset=8), [Str('/* XXXX Or should we use CFEqual?? */', lineno=283, col_offset=15)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Name('Output', Load(), lineno=284, col_offset=8), [Str('if ( self->ob_itself > other->ob_itself ) return 1;', lineno=284, col_offset=15)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Name('Output', Load(), lineno=285, col_offset=8), [Str('if ( self->ob_itself < other->ob_itself ) return -1;', lineno=285, col_offset=15)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Call(Name('Output', Load(), lineno=286, col_offset=8), [Str('return 0;', lineno=286, col_offset=15)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=287, col_offset=8), [], [], None, None, lineno=287, col_offset=8), lineno=287, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('outputHash', arguments([Name('self', Param(), lineno=289, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=290, col_offset=8), [], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Name('Output', Load(), lineno=291, col_offset=8), [Str('static int %s_hash(%s *self)', lineno=291, col_offset=15), Attribute(Name('self', Load(), lineno=291, col_offset=47), 'prefix', Load(), lineno=291, col_offset=47), Attribute(Name('self', Load(), lineno=291, col_offset=60), 'objecttype', Load(), lineno=291, col_offset=60)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=292, col_offset=8), [], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Name('Output', Load(), lineno=293, col_offset=8), [Str('/* XXXX Or should we use CFHash?? */', lineno=293, col_offset=15)], [], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8), Expr(Call(Name('Output', Load(), lineno=294, col_offset=8), [Str('return (int)self->ob_itself;', lineno=294, col_offset=15)], [], None, None, lineno=294, col_offset=8), lineno=294, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=295, col_offset=8), [], [], None, None, lineno=295, col_offset=8), lineno=295, col_offset=8)], [], lineno=289, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=297, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=298, col_offset=8), [], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8), Expr(Call(Name('Output', Load(), lineno=299, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=299, col_offset=15), Attribute(Name('self', Load(), lineno=299, col_offset=54), 'prefix', Load(), lineno=299, col_offset=54), Attribute(Name('self', Load(), lineno=299, col_offset=67), 'objecttype', Load(), lineno=299, col_offset=67)], [], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=300, col_offset=8), [], [], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8), Expr(Call(Name('Output', Load(), lineno=301, col_offset=8), [Str('char buf[100];', lineno=301, col_offset=15)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Expr(Call(Name('Output', Load(), lineno=302, col_offset=8), [Str('sprintf(buf, "<CFTypeRef type-%%d object at 0x%%8.8x for 0x%%8.8x>", (int)CFGetTypeID(self->ob_itself), (unsigned)self, (unsigned)self->ob_itself);', lineno=302, col_offset=15)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8), Expr(Call(Name('Output', Load(), lineno=303, col_offset=8), [Str('return PyString_FromString(buf);', lineno=303, col_offset=15)], [], None, None, lineno=303, col_offset=8), lineno=303, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=304, col_offset=8), [], [], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('output_tp_newBody', arguments([Name('self', Param(), lineno=306, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=307, col_offset=8), [Str('PyObject *self;', lineno=307, col_offset=15)], [], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), Expr(Name('Output', Load(), lineno=308, col_offset=8), lineno=308, col_offset=8), Expr(Call(Name('Output', Load(), lineno=309, col_offset=8), [Str('if ((self = type->tp_alloc(type, 0)) == NULL) return NULL;', lineno=309, col_offset=15)], [], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Expr(Call(Name('Output', Load(), lineno=310, col_offset=8), [Str('((%s *)self)->ob_itself = NULL;', lineno=310, col_offset=15), Attribute(Name('self', Load(), lineno=310, col_offset=50), 'objecttype', Load(), lineno=310, col_offset=50)], [], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8), Expr(Call(Name('Output', Load(), lineno=311, col_offset=8), [Str('((%s *)self)->ob_freeit = CFRelease;', lineno=311, col_offset=15), Attribute(Name('self', Load(), lineno=311, col_offset=55), 'objecttype', Load(), lineno=311, col_offset=55)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Expr(Call(Name('Output', Load(), lineno=312, col_offset=8), [Str('return self;', lineno=312, col_offset=15)], [], None, None, lineno=312, col_offset=8), lineno=312, col_offset=8)], [], lineno=306, col_offset=4), FunctionDef('output_tp_initBody', arguments([Name('self', Param(), lineno=314, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=315, col_offset=8), [Str('%s itself;', lineno=315, col_offset=15), Attribute(Name('self', Load(), lineno=315, col_offset=29), 'itselftype', Load(), lineno=315, col_offset=29)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Expr(Call(Name('Output', Load(), lineno=316, col_offset=8), [Str('char *kw[] = {"itself", 0};', lineno=316, col_offset=15)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8), Expr(Call(Name('Output', Load(), lineno=317, col_offset=8), [], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Expr(Call(Name('Output', Load(), lineno=318, col_offset=8), [Str('if (PyArg_ParseTupleAndKeywords(_args, _kwds, "O&", kw, %s_Convert, &itself))', lineno=318, col_offset=15), Attribute(Name('self', Load(), lineno=319, col_offset=16), 'prefix', Load(), lineno=319, col_offset=16)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=320, col_offset=8), [], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8), Expr(Call(Name('Output', Load(), lineno=321, col_offset=8), [Str('((%s *)_self)->ob_itself = itself;', lineno=321, col_offset=15), Attribute(Name('self', Load(), lineno=321, col_offset=53), 'objecttype', Load(), lineno=321, col_offset=53)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8), Expr(Call(Name('Output', Load(), lineno=322, col_offset=8), [Str('return 0;', lineno=322, col_offset=15)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=323, col_offset=8), [], [], None, None, lineno=323, col_offset=8), lineno=323, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=324, col_offset=11), 'prefix', Load(), lineno=324, col_offset=11), [NotEq()], [Str('CFTypeRefObj', lineno=324, col_offset=26)], lineno=324, col_offset=11), [Expr(Call(Name('Output', Load(), lineno=325, col_offset=12), [], [], None, None, lineno=325, col_offset=12), lineno=325, col_offset=12), Expr(Call(Name('Output', Load(), lineno=326, col_offset=12), [Str('/* Any CFTypeRef descendent is allowed as initializer too */', lineno=326, col_offset=19)], [], None, None, lineno=326, col_offset=12), lineno=326, col_offset=12), Expr(Call(Name('Output', Load(), lineno=327, col_offset=12), [Str('if (PyArg_ParseTupleAndKeywords(_args, _kwds, "O&", kw, CFTypeRefObj_Convert, &itself))', lineno=327, col_offset=19)], [], None, None, lineno=327, col_offset=12), lineno=327, col_offset=12), Expr(Call(Name('OutLbrace', Load(), lineno=328, col_offset=12), [], [], None, None, lineno=328, col_offset=12), lineno=328, col_offset=12), Expr(Call(Name('Output', Load(), lineno=329, col_offset=12), [Str('((%s *)_self)->ob_itself = itself;', lineno=329, col_offset=19), Attribute(Name('self', Load(), lineno=329, col_offset=57), 'objecttype', Load(), lineno=329, col_offset=57)], [], None, None, lineno=329, col_offset=12), lineno=329, col_offset=12), Expr(Call(Name('Output', Load(), lineno=330, col_offset=12), [Str('return 0;', lineno=330, col_offset=19)], [], None, None, lineno=330, col_offset=12), lineno=330, col_offset=12), Expr(Call(Name('OutRbrace', Load(), lineno=331, col_offset=12), [], [], None, None, lineno=331, col_offset=12), lineno=331, col_offset=12)], [], lineno=324, col_offset=8), Expr(Call(Name('Output', Load(), lineno=332, col_offset=8), [Str('return -1;', lineno=332, col_offset=15)], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8)], [], lineno=314, col_offset=4)], [], lineno=253, col_offset=0), ClassDef('CFTypeRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=334, col_offset=32)], [Pass( lineno=335, col_offset=4)], [], lineno=334, col_offset=0), ClassDef('CFArrayRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=337, col_offset=33)], [Assign([Name('basetype', Store(), lineno=338, col_offset=4)], Str('CFTypeRef_Type', lineno=338, col_offset=15), lineno=338, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=340, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=341, col_offset=8), [], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8), Expr(Call(Name('Output', Load(), lineno=342, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=342, col_offset=15), Attribute(Name('self', Load(), lineno=342, col_offset=54), 'prefix', Load(), lineno=342, col_offset=54), Attribute(Name('self', Load(), lineno=342, col_offset=67), 'objecttype', Load(), lineno=342, col_offset=67)], [], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=343, col_offset=8), [], [], None, None, lineno=343, col_offset=8), lineno=343, col_offset=8), Expr(Call(Name('Output', Load(), lineno=344, col_offset=8), [Str('char buf[100];', lineno=344, col_offset=15)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8), Expr(Call(Name('Output', Load(), lineno=345, col_offset=8), [Str('sprintf(buf, "<CFArrayRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=345, col_offset=15)], [], None, None, lineno=345, col_offset=8), lineno=345, col_offset=8), Expr(Call(Name('Output', Load(), lineno=346, col_offset=8), [Str('return PyString_FromString(buf);', lineno=346, col_offset=15)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=347, col_offset=8), [], [], None, None, lineno=347, col_offset=8), lineno=347, col_offset=8)], [], lineno=340, col_offset=4)], [], lineno=337, col_offset=0), ClassDef('CFMutableArrayRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=349, col_offset=40)], [Assign([Name('basetype', Store(), lineno=350, col_offset=4)], Str('CFArrayRef_Type', lineno=350, col_offset=15), lineno=350, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=352, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=353, col_offset=8), [], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8), Expr(Call(Name('Output', Load(), lineno=354, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=354, col_offset=15), Attribute(Name('self', Load(), lineno=354, col_offset=54), 'prefix', Load(), lineno=354, col_offset=54), Attribute(Name('self', Load(), lineno=354, col_offset=67), 'objecttype', Load(), lineno=354, col_offset=67)], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=355, col_offset=8), [], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Expr(Call(Name('Output', Load(), lineno=356, col_offset=8), [Str('char buf[100];', lineno=356, col_offset=15)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8), Expr(Call(Name('Output', Load(), lineno=357, col_offset=8), [Str('sprintf(buf, "<CFMutableArrayRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=357, col_offset=15)], [], None, None, lineno=357, col_offset=8), lineno=357, col_offset=8), Expr(Call(Name('Output', Load(), lineno=358, col_offset=8), [Str('return PyString_FromString(buf);', lineno=358, col_offset=15)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=359, col_offset=8), [], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8)], [], lineno=352, col_offset=4)], [], lineno=349, col_offset=0), ClassDef('CFDictionaryRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=361, col_offset=38)], [Assign([Name('basetype', Store(), lineno=362, col_offset=4)], Str('CFTypeRef_Type', lineno=362, col_offset=15), lineno=362, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=364, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=365, col_offset=8), [], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8), Expr(Call(Name('Output', Load(), lineno=366, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=366, col_offset=15), Attribute(Name('self', Load(), lineno=366, col_offset=54), 'prefix', Load(), lineno=366, col_offset=54), Attribute(Name('self', Load(), lineno=366, col_offset=67), 'objecttype', Load(), lineno=366, col_offset=67)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=367, col_offset=8), [], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Expr(Call(Name('Output', Load(), lineno=368, col_offset=8), [Str('char buf[100];', lineno=368, col_offset=15)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8), Expr(Call(Name('Output', Load(), lineno=369, col_offset=8), [Str('sprintf(buf, "<CFDictionaryRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=369, col_offset=15)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Name('Output', Load(), lineno=370, col_offset=8), [Str('return PyString_FromString(buf);', lineno=370, col_offset=15)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=371, col_offset=8), [], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8)], [], lineno=364, col_offset=4)], [], lineno=361, col_offset=0), ClassDef('CFMutableDictionaryRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=373, col_offset=45)], [Assign([Name('basetype', Store(), lineno=374, col_offset=4)], Str('CFDictionaryRef_Type', lineno=374, col_offset=15), lineno=374, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=376, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=377, col_offset=8), [], [], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8), Expr(Call(Name('Output', Load(), lineno=378, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=378, col_offset=15), Attribute(Name('self', Load(), lineno=378, col_offset=54), 'prefix', Load(), lineno=378, col_offset=54), Attribute(Name('self', Load(), lineno=378, col_offset=67), 'objecttype', Load(), lineno=378, col_offset=67)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=379, col_offset=8), [], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Name('Output', Load(), lineno=380, col_offset=8), [Str('char buf[100];', lineno=380, col_offset=15)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Name('Output', Load(), lineno=381, col_offset=8), [Str('sprintf(buf, "<CFMutableDictionaryRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=381, col_offset=15)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8), Expr(Call(Name('Output', Load(), lineno=382, col_offset=8), [Str('return PyString_FromString(buf);', lineno=382, col_offset=15)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=383, col_offset=8), [], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8)], [], lineno=376, col_offset=4)], [], lineno=373, col_offset=0), ClassDef('CFDataRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=385, col_offset=32)], [Assign([Name('basetype', Store(), lineno=386, col_offset=4)], Str('CFTypeRef_Type', lineno=386, col_offset=15), lineno=386, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=388, col_offset=30)], None, None, []), [Expr(Call(Name('Out', Load(), lineno=389, col_offset=8), [Str('\n        if (v == Py_None) { *p_itself = NULL; return 1; }\n        if (PyString_Check(v)) {\n            char *cStr;\n            int cLen;\n            if( PyString_AsStringAndSize(v, &cStr, &cLen) < 0 ) return 0;\n            *p_itself = CFDataCreate((CFAllocatorRef)NULL, (unsigned char *)cStr, cLen);\n            return 1;\n        }\n        ', lineno=398, col_offset=-1)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8)], [], lineno=388, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=400, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=401, col_offset=8), [], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Name('Output', Load(), lineno=402, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=402, col_offset=15), Attribute(Name('self', Load(), lineno=402, col_offset=54), 'prefix', Load(), lineno=402, col_offset=54), Attribute(Name('self', Load(), lineno=402, col_offset=67), 'objecttype', Load(), lineno=402, col_offset=67)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=403, col_offset=8), [], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Expr(Call(Name('Output', Load(), lineno=404, col_offset=8), [Str('char buf[100];', lineno=404, col_offset=15)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Expr(Call(Name('Output', Load(), lineno=405, col_offset=8), [Str('sprintf(buf, "<CFDataRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=405, col_offset=15)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Expr(Call(Name('Output', Load(), lineno=406, col_offset=8), [Str('return PyString_FromString(buf);', lineno=406, col_offset=15)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=407, col_offset=8), [], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8)], [], lineno=400, col_offset=4)], [], lineno=385, col_offset=0), ClassDef('CFMutableDataRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=409, col_offset=39)], [Assign([Name('basetype', Store(), lineno=410, col_offset=4)], Str('CFDataRef_Type', lineno=410, col_offset=15), lineno=410, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=412, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=413, col_offset=8), [], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Name('Output', Load(), lineno=414, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=414, col_offset=15), Attribute(Name('self', Load(), lineno=414, col_offset=54), 'prefix', Load(), lineno=414, col_offset=54), Attribute(Name('self', Load(), lineno=414, col_offset=67), 'objecttype', Load(), lineno=414, col_offset=67)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=415, col_offset=8), [], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Name('Output', Load(), lineno=416, col_offset=8), [Str('char buf[100];', lineno=416, col_offset=15)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Name('Output', Load(), lineno=417, col_offset=8), [Str('sprintf(buf, "<CFMutableDataRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=417, col_offset=15)], [], None, None, lineno=417, col_offset=8), lineno=417, col_offset=8), Expr(Call(Name('Output', Load(), lineno=418, col_offset=8), [Str('return PyString_FromString(buf);', lineno=418, col_offset=15)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=419, col_offset=8), [], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8)], [], lineno=412, col_offset=4)], [], lineno=409, col_offset=0), ClassDef('CFStringRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=421, col_offset=34)], [Assign([Name('basetype', Store(), lineno=422, col_offset=4)], Str('CFTypeRef_Type', lineno=422, col_offset=15), lineno=422, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=424, col_offset=30)], None, None, []), [Expr(Call(Name('Out', Load(), lineno=425, col_offset=8), [Str('\n        if (v == Py_None) { *p_itself = NULL; return 1; }\n        if (PyString_Check(v)) {\n            char *cStr;\n            if (!PyArg_Parse(v, "es", "ascii", &cStr))\n                return NULL;\n                *p_itself = CFStringCreateWithCString((CFAllocatorRef)NULL, cStr, kCFStringEncodingASCII);\n                PyMem_Free(cStr);\n                return 1;\n        }\n        if (PyUnicode_Check(v)) {\n                /* We use the CF types here, if Python was configured differently that will give an error */\n                CFIndex size = PyUnicode_GetSize(v);\n                UniChar *unichars = PyUnicode_AsUnicode(v);\n                if (!unichars) return 0;\n                *p_itself = CFStringCreateWithCharacters((CFAllocatorRef)NULL, unichars, size);\n                return 1;\n        }\n\n        ', lineno=444, col_offset=-1)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8)], [], lineno=424, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=446, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=447, col_offset=8), [], [], None, None, lineno=447, col_offset=8), lineno=447, col_offset=8), Expr(Call(Name('Output', Load(), lineno=448, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=448, col_offset=15), Attribute(Name('self', Load(), lineno=448, col_offset=54), 'prefix', Load(), lineno=448, col_offset=54), Attribute(Name('self', Load(), lineno=448, col_offset=67), 'objecttype', Load(), lineno=448, col_offset=67)], [], None, None, lineno=448, col_offset=8), lineno=448, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=449, col_offset=8), [], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Expr(Call(Name('Output', Load(), lineno=450, col_offset=8), [Str('char buf[100];', lineno=450, col_offset=15)], [], None, None, lineno=450, col_offset=8), lineno=450, col_offset=8), Expr(Call(Name('Output', Load(), lineno=451, col_offset=8), [Str('sprintf(buf, "<CFStringRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=451, col_offset=15)], [], None, None, lineno=451, col_offset=8), lineno=451, col_offset=8), Expr(Call(Name('Output', Load(), lineno=452, col_offset=8), [Str('return PyString_FromString(buf);', lineno=452, col_offset=15)], [], None, None, lineno=452, col_offset=8), lineno=452, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=453, col_offset=8), [], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8)], [], lineno=446, col_offset=4)], [], lineno=421, col_offset=0), ClassDef('CFMutableStringRefObjectDefinition', [Name('CFStringRefObjectDefinition', Load(), lineno=455, col_offset=41)], [Assign([Name('basetype', Store(), lineno=456, col_offset=4)], Str('CFStringRef_Type', lineno=456, col_offset=15), lineno=456, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=458, col_offset=30)], None, None, []), [Return(Call(Attribute(Name('MyGlobalObjectDefinition', Load(), lineno=460, col_offset=15), 'outputCheckConvertArg', Load(), lineno=460, col_offset=15), [Name('self', Load(), lineno=460, col_offset=62)], [], None, None, lineno=460, col_offset=15), lineno=460, col_offset=8)], [], lineno=458, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=462, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=463, col_offset=8), [], [], None, None, lineno=463, col_offset=8), lineno=463, col_offset=8), Expr(Call(Name('Output', Load(), lineno=464, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=464, col_offset=15), Attribute(Name('self', Load(), lineno=464, col_offset=54), 'prefix', Load(), lineno=464, col_offset=54), Attribute(Name('self', Load(), lineno=464, col_offset=67), 'objecttype', Load(), lineno=464, col_offset=67)], [], None, None, lineno=464, col_offset=8), lineno=464, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=465, col_offset=8), [], [], None, None, lineno=465, col_offset=8), lineno=465, col_offset=8), Expr(Call(Name('Output', Load(), lineno=466, col_offset=8), [Str('char buf[100];', lineno=466, col_offset=15)], [], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8), Expr(Call(Name('Output', Load(), lineno=467, col_offset=8), [Str('sprintf(buf, "<CFMutableStringRef object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=467, col_offset=15)], [], None, None, lineno=467, col_offset=8), lineno=467, col_offset=8), Expr(Call(Name('Output', Load(), lineno=468, col_offset=8), [Str('return PyString_FromString(buf);', lineno=468, col_offset=15)], [], None, None, lineno=468, col_offset=8), lineno=468, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=469, col_offset=8), [], [], None, None, lineno=469, col_offset=8), lineno=469, col_offset=8)], [], lineno=462, col_offset=4)], [], lineno=455, col_offset=0), ClassDef('CFURLRefObjectDefinition', [Name('MyGlobalObjectDefinition', Load(), lineno=471, col_offset=31)], [Assign([Name('basetype', Store(), lineno=472, col_offset=4)], Str('CFTypeRef_Type', lineno=472, col_offset=15), lineno=472, col_offset=4), FunctionDef('outputRepr', arguments([Name('self', Param(), lineno=474, col_offset=19)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=475, col_offset=8), [], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8), Expr(Call(Name('Output', Load(), lineno=476, col_offset=8), [Str('static PyObject * %s_repr(%s *self)', lineno=476, col_offset=15), Attribute(Name('self', Load(), lineno=476, col_offset=54), 'prefix', Load(), lineno=476, col_offset=54), Attribute(Name('self', Load(), lineno=476, col_offset=67), 'objecttype', Load(), lineno=476, col_offset=67)], [], None, None, lineno=476, col_offset=8), lineno=476, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=477, col_offset=8), [], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8), Expr(Call(Name('Output', Load(), lineno=478, col_offset=8), [Str('char buf[100];', lineno=478, col_offset=15)], [], None, None, lineno=478, col_offset=8), lineno=478, col_offset=8), Expr(Call(Name('Output', Load(), lineno=479, col_offset=8), [Str('sprintf(buf, "<CFURL object at 0x%%8.8x for 0x%%8.8x>", (unsigned)self, (unsigned)self->ob_itself);', lineno=479, col_offset=15)], [], None, None, lineno=479, col_offset=8), lineno=479, col_offset=8), Expr(Call(Name('Output', Load(), lineno=480, col_offset=8), [Str('return PyString_FromString(buf);', lineno=480, col_offset=15)], [], None, None, lineno=480, col_offset=8), lineno=480, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=481, col_offset=8), [], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8)], [], lineno=474, col_offset=4)], [], lineno=471, col_offset=0), Assign([Name('module', Store(), lineno=489, col_offset=0)], Call(Name('MacModule', Load(), lineno=489, col_offset=9), [Name('MODNAME', Load(), lineno=489, col_offset=19), Name('MODPREFIX', Load(), lineno=489, col_offset=28), Name('includestuff', Load(), lineno=489, col_offset=39), Name('finalstuff', Load(), lineno=489, col_offset=53), Name('initstuff', Load(), lineno=489, col_offset=65), Name('variablestuff', Load(), lineno=489, col_offset=76)], [], None, None, lineno=489, col_offset=9), lineno=489, col_offset=0), Assign([Name('CFTypeRef_object', Store(), lineno=490, col_offset=0)], Call(Name('CFTypeRefObjectDefinition', Load(), lineno=490, col_offset=19), [Str('CFTypeRef', lineno=490, col_offset=45), Str('CFTypeRefObj', lineno=490, col_offset=58), Str('CFTypeRef', lineno=490, col_offset=74)], [], None, None, lineno=490, col_offset=19), lineno=490, col_offset=0), Assign([Name('CFArrayRef_object', Store(), lineno=491, col_offset=0)], Call(Name('CFArrayRefObjectDefinition', Load(), lineno=491, col_offset=20), [Str('CFArrayRef', lineno=491, col_offset=47), Str('CFArrayRefObj', lineno=491, col_offset=61), Str('CFArrayRef', lineno=491, col_offset=78)], [], None, None, lineno=491, col_offset=20), lineno=491, col_offset=0), Assign([Name('CFMutableArrayRef_object', Store(), lineno=492, col_offset=0)], Call(Name('CFMutableArrayRefObjectDefinition', Load(), lineno=492, col_offset=27), [Str('CFMutableArrayRef', lineno=492, col_offset=61), Str('CFMutableArrayRefObj', lineno=492, col_offset=82), Str('CFMutableArrayRef', lineno=492, col_offset=106)], [], None, None, lineno=492, col_offset=27), lineno=492, col_offset=0), Assign([Name('CFDictionaryRef_object', Store(), lineno=493, col_offset=0)], Call(Name('CFDictionaryRefObjectDefinition', Load(), lineno=493, col_offset=25), [Str('CFDictionaryRef', lineno=493, col_offset=57), Str('CFDictionaryRefObj', lineno=493, col_offset=76), Str('CFDictionaryRef', lineno=493, col_offset=98)], [], None, None, lineno=493, col_offset=25), lineno=493, col_offset=0), Assign([Name('CFMutableDictionaryRef_object', Store(), lineno=494, col_offset=0)], Call(Name('CFMutableDictionaryRefObjectDefinition', Load(), lineno=494, col_offset=32), [Str('CFMutableDictionaryRef', lineno=494, col_offset=71), Str('CFMutableDictionaryRefObj', lineno=494, col_offset=97), Str('CFMutableDictionaryRef', lineno=494, col_offset=126)], [], None, None, lineno=494, col_offset=32), lineno=494, col_offset=0), Assign([Name('CFDataRef_object', Store(), lineno=495, col_offset=0)], Call(Name('CFDataRefObjectDefinition', Load(), lineno=495, col_offset=19), [Str('CFDataRef', lineno=495, col_offset=45), Str('CFDataRefObj', lineno=495, col_offset=58), Str('CFDataRef', lineno=495, col_offset=74)], [], None, None, lineno=495, col_offset=19), lineno=495, col_offset=0), Assign([Name('CFMutableDataRef_object', Store(), lineno=496, col_offset=0)], Call(Name('CFMutableDataRefObjectDefinition', Load(), lineno=496, col_offset=26), [Str('CFMutableDataRef', lineno=496, col_offset=59), Str('CFMutableDataRefObj', lineno=496, col_offset=79), Str('CFMutableDataRef', lineno=496, col_offset=102)], [], None, None, lineno=496, col_offset=26), lineno=496, col_offset=0), Assign([Name('CFStringRef_object', Store(), lineno=497, col_offset=0)], Call(Name('CFStringRefObjectDefinition', Load(), lineno=497, col_offset=21), [Str('CFStringRef', lineno=497, col_offset=49), Str('CFStringRefObj', lineno=497, col_offset=64), Str('CFStringRef', lineno=497, col_offset=82)], [], None, None, lineno=497, col_offset=21), lineno=497, col_offset=0), Assign([Name('CFMutableStringRef_object', Store(), lineno=498, col_offset=0)], Call(Name('CFMutableStringRefObjectDefinition', Load(), lineno=498, col_offset=28), [Str('CFMutableStringRef', lineno=498, col_offset=63), Str('CFMutableStringRefObj', lineno=498, col_offset=85), Str('CFMutableStringRef', lineno=498, col_offset=110)], [], None, None, lineno=498, col_offset=28), lineno=498, col_offset=0), Assign([Name('CFURLRef_object', Store(), lineno=499, col_offset=0)], Call(Name('CFURLRefObjectDefinition', Load(), lineno=499, col_offset=18), [Str('CFURLRef', lineno=499, col_offset=43), Str('CFURLRefObj', lineno=499, col_offset=55), Str('CFURLRef', lineno=499, col_offset=70)], [], None, None, lineno=499, col_offset=18), lineno=499, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=503, col_offset=0), 'addobject', Load(), lineno=503, col_offset=0), [Name('CFTypeRef_object', Load(), lineno=503, col_offset=17)], [], None, None, lineno=503, col_offset=0), lineno=503, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=504, col_offset=0), 'addobject', Load(), lineno=504, col_offset=0), [Name('CFArrayRef_object', Load(), lineno=504, col_offset=17)], [], None, None, lineno=504, col_offset=0), lineno=504, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=505, col_offset=0), 'addobject', Load(), lineno=505, col_offset=0), [Name('CFMutableArrayRef_object', Load(), lineno=505, col_offset=17)], [], None, None, lineno=505, col_offset=0), lineno=505, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=506, col_offset=0), 'addobject', Load(), lineno=506, col_offset=0), [Name('CFDictionaryRef_object', Load(), lineno=506, col_offset=17)], [], None, None, lineno=506, col_offset=0), lineno=506, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=507, col_offset=0), 'addobject', Load(), lineno=507, col_offset=0), [Name('CFMutableDictionaryRef_object', Load(), lineno=507, col_offset=17)], [], None, None, lineno=507, col_offset=0), lineno=507, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=508, col_offset=0), 'addobject', Load(), lineno=508, col_offset=0), [Name('CFDataRef_object', Load(), lineno=508, col_offset=17)], [], None, None, lineno=508, col_offset=0), lineno=508, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=509, col_offset=0), 'addobject', Load(), lineno=509, col_offset=0), [Name('CFMutableDataRef_object', Load(), lineno=509, col_offset=17)], [], None, None, lineno=509, col_offset=0), lineno=509, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=510, col_offset=0), 'addobject', Load(), lineno=510, col_offset=0), [Name('CFStringRef_object', Load(), lineno=510, col_offset=17)], [], None, None, lineno=510, col_offset=0), lineno=510, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=511, col_offset=0), 'addobject', Load(), lineno=511, col_offset=0), [Name('CFMutableStringRef_object', Load(), lineno=511, col_offset=17)], [], None, None, lineno=511, col_offset=0), lineno=511, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=512, col_offset=0), 'addobject', Load(), lineno=512, col_offset=0), [Name('CFURLRef_object', Load(), lineno=512, col_offset=17)], [], None, None, lineno=512, col_offset=0), lineno=512, col_offset=0), Assign([Name('Function', Store(), lineno=516, col_offset=0)], Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=516, col_offset=11), lineno=516, col_offset=0), Assign([Name('Method', Store(), lineno=517, col_offset=0)], Name('OSErrWeakLinkMethodGenerator', Load(), lineno=517, col_offset=9), lineno=517, col_offset=0), Assign([Name('functions', Store(), lineno=520, col_offset=0)], List([], Load(), lineno=520, col_offset=12), lineno=520, col_offset=0), Assign([Name('CFTypeRef_methods', Store(), lineno=521, col_offset=0)], List([], Load(), lineno=521, col_offset=20), lineno=521, col_offset=0), Assign([Name('CFArrayRef_methods', Store(), lineno=522, col_offset=0)], List([], Load(), lineno=522, col_offset=21), lineno=522, col_offset=0), Assign([Name('CFMutableArrayRef_methods', Store(), lineno=523, col_offset=0)], List([], Load(), lineno=523, col_offset=28), lineno=523, col_offset=0), Assign([Name('CFDictionaryRef_methods', Store(), lineno=524, col_offset=0)], List([], Load(), lineno=524, col_offset=26), lineno=524, col_offset=0), Assign([Name('CFMutableDictionaryRef_methods', Store(), lineno=525, col_offset=0)], List([], Load(), lineno=525, col_offset=33), lineno=525, col_offset=0), Assign([Name('CFDataRef_methods', Store(), lineno=526, col_offset=0)], List([], Load(), lineno=526, col_offset=20), lineno=526, col_offset=0), Assign([Name('CFMutableDataRef_methods', Store(), lineno=527, col_offset=0)], List([], Load(), lineno=527, col_offset=27), lineno=527, col_offset=0), Assign([Name('CFStringRef_methods', Store(), lineno=528, col_offset=0)], List([], Load(), lineno=528, col_offset=22), lineno=528, col_offset=0), Assign([Name('CFMutableStringRef_methods', Store(), lineno=529, col_offset=0)], List([], Load(), lineno=529, col_offset=29), lineno=529, col_offset=0), Assign([Name('CFURLRef_methods', Store(), lineno=530, col_offset=0)], List([], Load(), lineno=530, col_offset=19), lineno=530, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=533, col_offset=0), [Name('INPUTFILE', Load(), lineno=533, col_offset=9)], [], None, None, lineno=533, col_offset=0), lineno=533, col_offset=0), For(Name('f', Store(), lineno=538, col_offset=4), Name('functions', Load(), lineno=538, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=538, col_offset=20), 'add', Load(), lineno=538, col_offset=20), [Name('f', Load(), lineno=538, col_offset=31)], [], None, None, lineno=538, col_offset=20), lineno=538, col_offset=20)], [], lineno=538, col_offset=0), For(Name('f', Store(), lineno=539, col_offset=4), Name('CFTypeRef_methods', Load(), lineno=539, col_offset=9), [Expr(Call(Attribute(Name('CFTypeRef_object', Load(), lineno=539, col_offset=28), 'add', Load(), lineno=539, col_offset=28), [Name('f', Load(), lineno=539, col_offset=49)], [], None, None, lineno=539, col_offset=28), lineno=539, col_offset=28)], [], lineno=539, col_offset=0), For(Name('f', Store(), lineno=540, col_offset=4), Name('CFArrayRef_methods', Load(), lineno=540, col_offset=9), [Expr(Call(Attribute(Name('CFArrayRef_object', Load(), lineno=540, col_offset=29), 'add', Load(), lineno=540, col_offset=29), [Name('f', Load(), lineno=540, col_offset=51)], [], None, None, lineno=540, col_offset=29), lineno=540, col_offset=29)], [], lineno=540, col_offset=0), For(Name('f', Store(), lineno=541, col_offset=4), Name('CFMutableArrayRef_methods', Load(), lineno=541, col_offset=9), [Expr(Call(Attribute(Name('CFMutableArrayRef_object', Load(), lineno=541, col_offset=36), 'add', Load(), lineno=541, col_offset=36), [Name('f', Load(), lineno=541, col_offset=65)], [], None, None, lineno=541, col_offset=36), lineno=541, col_offset=36)], [], lineno=541, col_offset=0), For(Name('f', Store(), lineno=542, col_offset=4), Name('CFDictionaryRef_methods', Load(), lineno=542, col_offset=9), [Expr(Call(Attribute(Name('CFDictionaryRef_object', Load(), lineno=542, col_offset=34), 'add', Load(), lineno=542, col_offset=34), [Name('f', Load(), lineno=542, col_offset=61)], [], None, None, lineno=542, col_offset=34), lineno=542, col_offset=34)], [], lineno=542, col_offset=0), For(Name('f', Store(), lineno=543, col_offset=4), Name('CFMutableDictionaryRef_methods', Load(), lineno=543, col_offset=9), [Expr(Call(Attribute(Name('CFMutableDictionaryRef_object', Load(), lineno=543, col_offset=41), 'add', Load(), lineno=543, col_offset=41), [Name('f', Load(), lineno=543, col_offset=75)], [], None, None, lineno=543, col_offset=41), lineno=543, col_offset=41)], [], lineno=543, col_offset=0), For(Name('f', Store(), lineno=544, col_offset=4), Name('CFDataRef_methods', Load(), lineno=544, col_offset=9), [Expr(Call(Attribute(Name('CFDataRef_object', Load(), lineno=544, col_offset=28), 'add', Load(), lineno=544, col_offset=28), [Name('f', Load(), lineno=544, col_offset=49)], [], None, None, lineno=544, col_offset=28), lineno=544, col_offset=28)], [], lineno=544, col_offset=0), For(Name('f', Store(), lineno=545, col_offset=4), Name('CFMutableDataRef_methods', Load(), lineno=545, col_offset=9), [Expr(Call(Attribute(Name('CFMutableDataRef_object', Load(), lineno=545, col_offset=35), 'add', Load(), lineno=545, col_offset=35), [Name('f', Load(), lineno=545, col_offset=63)], [], None, None, lineno=545, col_offset=35), lineno=545, col_offset=35)], [], lineno=545, col_offset=0), For(Name('f', Store(), lineno=546, col_offset=4), Name('CFStringRef_methods', Load(), lineno=546, col_offset=9), [Expr(Call(Attribute(Name('CFStringRef_object', Load(), lineno=546, col_offset=30), 'add', Load(), lineno=546, col_offset=30), [Name('f', Load(), lineno=546, col_offset=53)], [], None, None, lineno=546, col_offset=30), lineno=546, col_offset=30)], [], lineno=546, col_offset=0), For(Name('f', Store(), lineno=547, col_offset=4), Name('CFMutableStringRef_methods', Load(), lineno=547, col_offset=9), [Expr(Call(Attribute(Name('CFMutableStringRef_object', Load(), lineno=547, col_offset=37), 'add', Load(), lineno=547, col_offset=37), [Name('f', Load(), lineno=547, col_offset=67)], [], None, None, lineno=547, col_offset=37), lineno=547, col_offset=37)], [], lineno=547, col_offset=0), For(Name('f', Store(), lineno=548, col_offset=4), Name('CFURLRef_methods', Load(), lineno=548, col_offset=9), [Expr(Call(Attribute(Name('CFURLRef_object', Load(), lineno=548, col_offset=27), 'add', Load(), lineno=548, col_offset=27), [Name('f', Load(), lineno=548, col_offset=47)], [], None, None, lineno=548, col_offset=27), lineno=548, col_offset=27)], [], lineno=548, col_offset=0), Assign([Name('getasstring_body', Store(), lineno=552, col_offset=0)], Str('\nint size = CFStringGetLength(_self->ob_itself)+1;\nchar *data = malloc(size);\n\nif( data == NULL ) return PyErr_NoMemory();\nif ( CFStringGetCString(_self->ob_itself, data, size, 0) ) {\n        _res = (PyObject *)PyString_FromString(data);\n} else {\n        PyErr_SetString(PyExc_RuntimeError, "CFStringGetCString could not fit the string");\n        _res = NULL;\n}\nfree(data);\nreturn _res;\n', lineno=565, col_offset=-1), lineno=552, col_offset=0), Assign([Name('f', Store(), lineno=567, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=567, col_offset=4), [Str('CFStringGetString', lineno=567, col_offset=20), Name('getasstring_body', Load(), lineno=567, col_offset=41)], [], None, None, lineno=567, col_offset=4), lineno=567, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=568, col_offset=0), 'docstring', Store(), lineno=568, col_offset=0)], Lambda(arguments([], None, None, []), Str('() -> (string _rv)', lineno=568, col_offset=22), lineno=568, col_offset=14), lineno=568, col_offset=0), Expr(Call(Attribute(Name('CFStringRef_object', Load(), lineno=569, col_offset=0), 'add', Load(), lineno=569, col_offset=0), [Name('f', Load(), lineno=569, col_offset=23)], [], None, None, lineno=569, col_offset=0), lineno=569, col_offset=0), Assign([Name('getasunicode_body', Store(), lineno=571, col_offset=0)], Str('\nint size = CFStringGetLength(_self->ob_itself)+1;\nPy_UNICODE *data = malloc(size*sizeof(Py_UNICODE));\nCFRange range;\n\nrange.location = 0;\nrange.length = size;\nif( data == NULL ) return PyErr_NoMemory();\nCFStringGetCharacters(_self->ob_itself, range, data);\n_res = (PyObject *)PyUnicode_FromUnicode(data, size-1);\nfree(data);\nreturn _res;\n', lineno=583, col_offset=-1), lineno=571, col_offset=0), Assign([Name('f', Store(), lineno=585, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=585, col_offset=4), [Str('CFStringGetUnicode', lineno=585, col_offset=20), Name('getasunicode_body', Load(), lineno=585, col_offset=42)], [], None, None, lineno=585, col_offset=4), lineno=585, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=586, col_offset=0), 'docstring', Store(), lineno=586, col_offset=0)], Lambda(arguments([], None, None, []), Str('() -> (unicode _rv)', lineno=586, col_offset=22), lineno=586, col_offset=14), lineno=586, col_offset=0), Expr(Call(Attribute(Name('CFStringRef_object', Load(), lineno=587, col_offset=0), 'add', Load(), lineno=587, col_offset=0), [Name('f', Load(), lineno=587, col_offset=23)], [], None, None, lineno=587, col_offset=0), lineno=587, col_offset=0), Assign([Name('getasdata_body', Store(), lineno=590, col_offset=0)], Str('\nint size = CFDataGetLength(_self->ob_itself);\nchar *data = (char *)CFDataGetBytePtr(_self->ob_itself);\n\n_res = (PyObject *)PyString_FromStringAndSize(data, size);\nreturn _res;\n', lineno=596, col_offset=-1), lineno=590, col_offset=0), Assign([Name('f', Store(), lineno=598, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=598, col_offset=4), [Str('CFDataGetData', lineno=598, col_offset=20), Name('getasdata_body', Load(), lineno=598, col_offset=37)], [], None, None, lineno=598, col_offset=4), lineno=598, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=599, col_offset=0), 'docstring', Store(), lineno=599, col_offset=0)], Lambda(arguments([], None, None, []), Str('() -> (string _rv)', lineno=599, col_offset=22), lineno=599, col_offset=14), lineno=599, col_offset=0), Expr(Call(Attribute(Name('CFDataRef_object', Load(), lineno=600, col_offset=0), 'add', Load(), lineno=600, col_offset=0), [Name('f', Load(), lineno=600, col_offset=21)], [], None, None, lineno=600, col_offset=0), lineno=600, col_offset=0), Assign([Name('fromxml_body', Store(), lineno=603, col_offset=0)], Str('\nCFTypeRef _rv;\nCFOptionFlags mutabilityOption;\nCFStringRef errorString;\nif (!PyArg_ParseTuple(_args, "l",\n                      &mutabilityOption))\n        return NULL;\n_rv = CFPropertyListCreateFromXMLData((CFAllocatorRef)NULL,\n                                      _self->ob_itself,\n                                      mutabilityOption,\n                                      &errorString);\nif (errorString)\n        CFRelease(errorString);\nif (_rv == NULL) {\n        PyErr_SetString(PyExc_RuntimeError, "Parse error in XML data");\n        return NULL;\n}\n_res = Py_BuildValue("O&",\n                     CFTypeRefObj_New, _rv);\nreturn _res;\n', lineno=623, col_offset=-1), lineno=603, col_offset=0), Assign([Name('f', Store(), lineno=624, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=624, col_offset=4), [Str('CFPropertyListCreateFromXMLData', lineno=624, col_offset=20), Name('fromxml_body', Load(), lineno=624, col_offset=55)], [], None, None, lineno=624, col_offset=4), lineno=624, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=625, col_offset=0), 'docstring', Store(), lineno=625, col_offset=0)], Lambda(arguments([], None, None, []), Str('(CFOptionFlags mutabilityOption) -> (CFTypeRefObj)', lineno=625, col_offset=22), lineno=625, col_offset=14), lineno=625, col_offset=0), Expr(Call(Attribute(Name('CFTypeRef_object', Load(), lineno=626, col_offset=0), 'add', Load(), lineno=626, col_offset=0), [Name('f', Load(), lineno=626, col_offset=21)], [], None, None, lineno=626, col_offset=0), lineno=626, col_offset=0), Assign([Name('toPython_body', Store(), lineno=629, col_offset=0)], Str('\n_res = PyCF_CF2Python(_self->ob_itself);\nreturn _res;\n', lineno=632, col_offset=-1), lineno=629, col_offset=0), Assign([Name('f', Store(), lineno=634, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=634, col_offset=4), [Str('toPython', lineno=634, col_offset=20), Name('toPython_body', Load(), lineno=634, col_offset=32)], [], None, None, lineno=634, col_offset=4), lineno=634, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=635, col_offset=0), 'docstring', Store(), lineno=635, col_offset=0)], Lambda(arguments([], None, None, []), Str('() -> (python_object)', lineno=635, col_offset=22), lineno=635, col_offset=14), lineno=635, col_offset=0), Expr(Call(Attribute(Name('CFTypeRef_object', Load(), lineno=636, col_offset=0), 'add', Load(), lineno=636, col_offset=0), [Name('f', Load(), lineno=636, col_offset=21)], [], None, None, lineno=636, col_offset=0), lineno=636, col_offset=0), Assign([Name('toCF_body', Store(), lineno=638, col_offset=0)], Str('\nCFTypeRef rv;\nCFTypeID typeid;\n\nif (!PyArg_ParseTuple(_args, "O&", PyCF_Python2CF, &rv))\n        return NULL;\ntypeid = CFGetTypeID(rv);\n\nif (typeid == CFStringGetTypeID())\n        return Py_BuildValue("O&", CFStringRefObj_New, rv);\nif (typeid == CFArrayGetTypeID())\n        return Py_BuildValue("O&", CFArrayRefObj_New, rv);\nif (typeid == CFDictionaryGetTypeID())\n        return Py_BuildValue("O&", CFDictionaryRefObj_New, rv);\nif (typeid == CFURLGetTypeID())\n        return Py_BuildValue("O&", CFURLRefObj_New, rv);\n\n_res = Py_BuildValue("O&", CFTypeRefObj_New, rv);\nreturn _res;\n', lineno=657, col_offset=-1), lineno=638, col_offset=0), Assign([Name('f', Store(), lineno=658, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=658, col_offset=4), [Str('toCF', lineno=658, col_offset=20), Name('toCF_body', Load(), lineno=658, col_offset=28)], [], None, None, lineno=658, col_offset=4), lineno=658, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=659, col_offset=0), 'docstring', Store(), lineno=659, col_offset=0)], Lambda(arguments([], None, None, []), Str('(python_object) -> (CF_object)', lineno=659, col_offset=22), lineno=659, col_offset=14), lineno=659, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=660, col_offset=0), 'add', Load(), lineno=660, col_offset=0), [Name('f', Load(), lineno=660, col_offset=11)], [], None, None, lineno=660, col_offset=0), lineno=660, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=665, col_offset=0), [Name('OUTPUTFILE', Load(), lineno=665, col_offset=18)], [], None, None, lineno=665, col_offset=0), lineno=665, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=666, col_offset=0), 'generate', Load(), lineno=666, col_offset=0), [], [], None, None, lineno=666, col_offset=0), lineno=666, col_offset=0)])
