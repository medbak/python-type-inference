Module([Expr(Str('Temporary files.\n\nThis module provides generic, low- and high-level interfaces for\ncreating temporary files and directories.  The interfaces listed\nas "safe" just below can be used without fear of race conditions.\nThose listed as "unsafe" cannot, and are provided for backward\ncompatibility only.\n\nThis module also provides some data items to the user:\n\n  TMP_MAX  - maximum number of names that will be tried before\n             giving up.\n  template - the default prefix for all temporary names.\n             You may change this to control the default prefix.\n  tempdir  - If this is set to a string before the first use of\n             any routine from this module, it will be considered as\n             another candidate location to store temporary files.\n', lineno=18, col_offset=-1), lineno=18, col_offset=-1), Assign([Name('__all__', Store(), lineno=20, col_offset=0)], List([Str('NamedTemporaryFile', lineno=21, col_offset=4), Str('TemporaryFile', lineno=21, col_offset=26), Str('SpooledTemporaryFile', lineno=22, col_offset=4), Str('mkstemp', lineno=23, col_offset=4), Str('mkdtemp', lineno=23, col_offset=15), Str('mktemp', lineno=24, col_offset=4), Str('TMP_MAX', lineno=25, col_offset=4), Str('gettempprefix', lineno=25, col_offset=15), Str('tempdir', lineno=26, col_offset=4), Str('gettempdir', lineno=26, col_offset=15)], Load(), lineno=20, col_offset=10), lineno=20, col_offset=0), Import([alias('os', '_os')], lineno=32, col_offset=0), Import([alias('errno', '_errno')], lineno=33, col_offset=0), ImportFrom('random', [alias('Random', '_Random')], 0, lineno=34, col_offset=0), TryExcept([ImportFrom('cStringIO', [alias('StringIO', '_StringIO')], 0, lineno=37, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=38, col_offset=7), None, [ImportFrom('StringIO', [alias('StringIO', '_StringIO')], 0, lineno=39, col_offset=4)], lineno=38, col_offset=0)], [], lineno=36, col_offset=0), TryExcept([Import([alias('fcntl', '_fcntl')], lineno=42, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=43, col_offset=7), None, [FunctionDef('_set_cloexec', arguments([Name('fd', Param(), lineno=44, col_offset=21)], None, None, []), [Pass( lineno=45, col_offset=8)], [], lineno=44, col_offset=4)], lineno=43, col_offset=0)], [FunctionDef('_set_cloexec', arguments([Name('fd', Param(), lineno=47, col_offset=21)], None, None, []), [TryExcept([Assign([Name('flags', Store(), lineno=49, col_offset=12)], Call(Attribute(Name('_fcntl', Load(), lineno=49, col_offset=20), 'fcntl', Load(), lineno=49, col_offset=20), [Name('fd', Load(), lineno=49, col_offset=33), Attribute(Name('_fcntl', Load(), lineno=49, col_offset=37), 'F_GETFD', Load(), lineno=49, col_offset=37), Num(0, lineno=49, col_offset=53)], [], None, None, lineno=49, col_offset=20), lineno=49, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=50, col_offset=15), None, [Pass( lineno=51, col_offset=12)], lineno=50, col_offset=8)], [AugAssign(Name('flags', Store(), lineno=54, col_offset=12), BitOr(), Attribute(Name('_fcntl', Load(), lineno=54, col_offset=21), 'FD_CLOEXEC', Load(), lineno=54, col_offset=21), lineno=54, col_offset=12), Expr(Call(Attribute(Name('_fcntl', Load(), lineno=55, col_offset=12), 'fcntl', Load(), lineno=55, col_offset=12), [Name('fd', Load(), lineno=55, col_offset=25), Attribute(Name('_fcntl', Load(), lineno=55, col_offset=29), 'F_SETFD', Load(), lineno=55, col_offset=29), Name('flags', Load(), lineno=55, col_offset=45)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], lineno=48, col_offset=8)], [], lineno=47, col_offset=4)], lineno=41, col_offset=0), TryExcept([Import([alias('thread', '_thread')], lineno=59, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=60, col_offset=7), None, [Import([alias('dummy_thread', '_thread')], lineno=61, col_offset=4)], lineno=60, col_offset=0)], [], lineno=58, col_offset=0), Assign([Name('_allocate_lock', Store(), lineno=62, col_offset=0)], Attribute(Name('_thread', Load(), lineno=62, col_offset=17), 'allocate_lock', Load(), lineno=62, col_offset=17), lineno=62, col_offset=0), Assign([Name('_text_openflags', Store(), lineno=64, col_offset=0)], BinOp(BinOp(Attribute(Name('_os', Load(), lineno=64, col_offset=18), 'O_RDWR', Load(), lineno=64, col_offset=18), BitOr(), Attribute(Name('_os', Load(), lineno=64, col_offset=31), 'O_CREAT', Load(), lineno=64, col_offset=31), lineno=64, col_offset=18), BitOr(), Attribute(Name('_os', Load(), lineno=64, col_offset=45), 'O_EXCL', Load(), lineno=64, col_offset=45), lineno=64, col_offset=43), lineno=64, col_offset=0), If(Call(Name('hasattr', Load(), lineno=65, col_offset=3), [Name('_os', Load(), lineno=65, col_offset=11), Str('O_NOINHERIT', lineno=65, col_offset=16)], [], None, None, lineno=65, col_offset=3), [AugAssign(Name('_text_openflags', Store(), lineno=66, col_offset=4), BitOr(), Attribute(Name('_os', Load(), lineno=66, col_offset=23), 'O_NOINHERIT', Load(), lineno=66, col_offset=23), lineno=66, col_offset=4)], [], lineno=65, col_offset=0), If(Call(Name('hasattr', Load(), lineno=67, col_offset=3), [Name('_os', Load(), lineno=67, col_offset=11), Str('O_NOFOLLOW', lineno=67, col_offset=16)], [], None, None, lineno=67, col_offset=3), [AugAssign(Name('_text_openflags', Store(), lineno=68, col_offset=4), BitOr(), Attribute(Name('_os', Load(), lineno=68, col_offset=23), 'O_NOFOLLOW', Load(), lineno=68, col_offset=23), lineno=68, col_offset=4)], [], lineno=67, col_offset=0), Assign([Name('_bin_openflags', Store(), lineno=70, col_offset=0)], Name('_text_openflags', Load(), lineno=70, col_offset=17), lineno=70, col_offset=0), If(Call(Name('hasattr', Load(), lineno=71, col_offset=3), [Name('_os', Load(), lineno=71, col_offset=11), Str('O_BINARY', lineno=71, col_offset=16)], [], None, None, lineno=71, col_offset=3), [AugAssign(Name('_bin_openflags', Store(), lineno=72, col_offset=4), BitOr(), Attribute(Name('_os', Load(), lineno=72, col_offset=22), 'O_BINARY', Load(), lineno=72, col_offset=22), lineno=72, col_offset=4)], [], lineno=71, col_offset=0), If(Call(Name('hasattr', Load(), lineno=74, col_offset=3), [Name('_os', Load(), lineno=74, col_offset=11), Str('TMP_MAX', lineno=74, col_offset=16)], [], None, None, lineno=74, col_offset=3), [Assign([Name('TMP_MAX', Store(), lineno=75, col_offset=4)], Attribute(Name('_os', Load(), lineno=75, col_offset=14), 'TMP_MAX', Load(), lineno=75, col_offset=14), lineno=75, col_offset=4)], [Assign([Name('TMP_MAX', Store(), lineno=77, col_offset=4)], Num(10000, lineno=77, col_offset=14), lineno=77, col_offset=4)], lineno=74, col_offset=0), Assign([Name('template', Store(), lineno=79, col_offset=0)], Str('tmp', lineno=79, col_offset=11), lineno=79, col_offset=0), Assign([Name('_once_lock', Store(), lineno=83, col_offset=0)], Call(Name('_allocate_lock', Load(), lineno=83, col_offset=13), [], [], None, None, lineno=83, col_offset=13), lineno=83, col_offset=0), If(Call(Name('hasattr', Load(), lineno=85, col_offset=3), [Name('_os', Load(), lineno=85, col_offset=11), Str('lstat', lineno=85, col_offset=16)], [], None, None, lineno=85, col_offset=3), [Assign([Name('_stat', Store(), lineno=86, col_offset=4)], Attribute(Name('_os', Load(), lineno=86, col_offset=12), 'lstat', Load(), lineno=86, col_offset=12), lineno=86, col_offset=4)], [If(Call(Name('hasattr', Load(), lineno=87, col_offset=5), [Name('_os', Load(), lineno=87, col_offset=13), Str('stat', lineno=87, col_offset=18)], [], None, None, lineno=87, col_offset=5), [Assign([Name('_stat', Store(), lineno=88, col_offset=4)], Attribute(Name('_os', Load(), lineno=88, col_offset=12), 'stat', Load(), lineno=88, col_offset=12), lineno=88, col_offset=4)], [FunctionDef('_stat', arguments([Name('fn', Param(), lineno=92, col_offset=14)], None, None, []), [TryExcept([Assign([Name('f', Store(), lineno=94, col_offset=12)], Call(Name('open', Load(), lineno=94, col_offset=16), [Name('fn', Load(), lineno=94, col_offset=21)], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=95, col_offset=15), None, [Raise(Attribute(Name('_os', Load(), lineno=96, col_offset=18), 'error', Load(), lineno=96, col_offset=18), None, None, lineno=96, col_offset=12)], lineno=95, col_offset=8)], [], lineno=93, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=97, col_offset=8), 'close', Load(), lineno=97, col_offset=8), [], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8)], [], lineno=92, col_offset=4)], lineno=87, col_offset=5)], lineno=85, col_offset=0), FunctionDef('_exists', arguments([Name('fn', Param(), lineno=99, col_offset=12)], None, None, []), [TryExcept([Expr(Call(Name('_stat', Load(), lineno=101, col_offset=8), [Name('fn', Load(), lineno=101, col_offset=14)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [ExceptHandler(Attribute(Name('_os', Load(), lineno=102, col_offset=11), 'error', Load(), lineno=102, col_offset=11), None, [Return(Name('False', Load(), lineno=103, col_offset=15), lineno=103, col_offset=8)], lineno=102, col_offset=4)], [Return(Name('True', Load(), lineno=105, col_offset=15), lineno=105, col_offset=8)], lineno=100, col_offset=4)], [], lineno=99, col_offset=0), ClassDef('_RandomNameSequence', [], [Expr(Str('An instance of _RandomNameSequence generates an endless\n    sequence of unpredictable strings which can safely be incorporated\n    into file names.  Each string is six characters long.  Multiple\n    threads can safely use the same instance at the same time.\n\n    _RandomNameSequence is an iterator.', lineno=113, col_offset=-1), lineno=113, col_offset=-1), Assign([Name('characters', Store(), lineno=115, col_offset=4)], BinOp(BinOp(Str('abcdefghijklmnopqrstuvwxyz', lineno=115, col_offset=18), Add(), Str('ABCDEFGHIJKLMNOPQRSTUVWXYZ', lineno=116, col_offset=18), lineno=115, col_offset=18), Add(), Str('0123456789_', lineno=117, col_offset=18), lineno=116, col_offset=47), lineno=115, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=119, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'mutex', Store(), lineno=120, col_offset=8)], Call(Name('_allocate_lock', Load(), lineno=120, col_offset=21), [], [], None, None, lineno=120, col_offset=21), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=8), 'rng', Store(), lineno=121, col_offset=8)], Call(Name('_Random', Load(), lineno=121, col_offset=19), [], [], None, None, lineno=121, col_offset=19), lineno=121, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'normcase', Store(), lineno=122, col_offset=8)], Attribute(Attribute(Name('_os', Load(), lineno=122, col_offset=24), 'path', Load(), lineno=122, col_offset=24), 'normcase', Load(), lineno=122, col_offset=24), lineno=122, col_offset=8)], [], lineno=119, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=124, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=125, col_offset=15), lineno=125, col_offset=8)], [], lineno=124, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=127, col_offset=13)], None, None, []), [Assign([Name('m', Store(), lineno=128, col_offset=8)], Attribute(Name('self', Load(), lineno=128, col_offset=12), 'mutex', Load(), lineno=128, col_offset=12), lineno=128, col_offset=8), Assign([Name('c', Store(), lineno=129, col_offset=8)], Attribute(Name('self', Load(), lineno=129, col_offset=12), 'characters', Load(), lineno=129, col_offset=12), lineno=129, col_offset=8), Assign([Name('choose', Store(), lineno=130, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=130, col_offset=17), 'rng', Load(), lineno=130, col_offset=17), 'choice', Load(), lineno=130, col_offset=17), lineno=130, col_offset=8), Expr(Call(Attribute(Name('m', Load(), lineno=132, col_offset=8), 'acquire', Load(), lineno=132, col_offset=8), [], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), TryFinally([Assign([Name('letters', Store(), lineno=134, col_offset=12)], ListComp(Call(Name('choose', Load(), lineno=134, col_offset=23), [Name('c', Load(), lineno=134, col_offset=30)], [], None, None, lineno=134, col_offset=23), [comprehension(Name('dummy', Store(), lineno=134, col_offset=37), Str('123456', lineno=134, col_offset=46), [])], lineno=134, col_offset=23), lineno=134, col_offset=12)], [Expr(Call(Attribute(Name('m', Load(), lineno=136, col_offset=12), 'release', Load(), lineno=136, col_offset=12), [], [], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12)], lineno=133, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=138, col_offset=15), 'normcase', Load(), lineno=138, col_offset=15), [Call(Attribute(Str('', lineno=138, col_offset=29), 'join', Load(), lineno=138, col_offset=29), [Name('letters', Load(), lineno=138, col_offset=37)], [], None, None, lineno=138, col_offset=29)], [], None, None, lineno=138, col_offset=15), lineno=138, col_offset=8)], [], lineno=127, col_offset=4)], [], lineno=107, col_offset=0), FunctionDef('_candidate_tempdir_list', arguments([], None, None, []), [Expr(Str('Generate a list of candidate temporary directories which\n    _get_default_tempdir will try.', lineno=142, col_offset=-1), lineno=142, col_offset=-1), Assign([Name('dirlist', Store(), lineno=144, col_offset=4)], List([], Load(), lineno=144, col_offset=14), lineno=144, col_offset=4), For(Name('envname', Store(), lineno=147, col_offset=8), Tuple([Str('TMPDIR', lineno=147, col_offset=19), Str('TEMP', lineno=147, col_offset=29), Str('TMP', lineno=147, col_offset=37)], Load(), lineno=147, col_offset=19), [Assign([Name('dirname', Store(), lineno=148, col_offset=8)], Call(Attribute(Name('_os', Load(), lineno=148, col_offset=18), 'getenv', Load(), lineno=148, col_offset=18), [Name('envname', Load(), lineno=148, col_offset=29)], [], None, None, lineno=148, col_offset=18), lineno=148, col_offset=8), If(Name('dirname', Load(), lineno=149, col_offset=11), [Expr(Call(Attribute(Name('dirlist', Load(), lineno=149, col_offset=20), 'append', Load(), lineno=149, col_offset=20), [Name('dirname', Load(), lineno=149, col_offset=35)], [], None, None, lineno=149, col_offset=20), lineno=149, col_offset=20)], [], lineno=149, col_offset=8)], [], lineno=147, col_offset=4), If(Compare(Attribute(Name('_os', Load(), lineno=152, col_offset=7), 'name', Load(), lineno=152, col_offset=7), [Eq()], [Str('riscos', lineno=152, col_offset=19)], lineno=152, col_offset=7), [Assign([Name('dirname', Store(), lineno=153, col_offset=8)], Call(Attribute(Name('_os', Load(), lineno=153, col_offset=18), 'getenv', Load(), lineno=153, col_offset=18), [Str('Wimp$ScrapDir', lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=18), lineno=153, col_offset=8), If(Name('dirname', Load(), lineno=154, col_offset=11), [Expr(Call(Attribute(Name('dirlist', Load(), lineno=154, col_offset=20), 'append', Load(), lineno=154, col_offset=20), [Name('dirname', Load(), lineno=154, col_offset=35)], [], None, None, lineno=154, col_offset=20), lineno=154, col_offset=20)], [], lineno=154, col_offset=8)], [If(Compare(Attribute(Name('_os', Load(), lineno=155, col_offset=9), 'name', Load(), lineno=155, col_offset=9), [Eq()], [Str('nt', lineno=155, col_offset=21)], lineno=155, col_offset=9), [Expr(Call(Attribute(Name('dirlist', Load(), lineno=156, col_offset=8), 'extend', Load(), lineno=156, col_offset=8), [List([Str('c:\\temp', lineno=156, col_offset=25), Str('c:\\tmp', lineno=156, col_offset=37), Str('\\temp', lineno=156, col_offset=48), Str('\\tmp', lineno=156, col_offset=58)], Load(), lineno=156, col_offset=23)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8)], [Expr(Call(Attribute(Name('dirlist', Load(), lineno=158, col_offset=8), 'extend', Load(), lineno=158, col_offset=8), [List([Str('/tmp', lineno=158, col_offset=25), Str('/var/tmp', lineno=158, col_offset=33), Str('/usr/tmp', lineno=158, col_offset=45)], Load(), lineno=158, col_offset=23)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], lineno=155, col_offset=9)], lineno=152, col_offset=4), TryExcept([Expr(Call(Attribute(Name('dirlist', Load(), lineno=162, col_offset=8), 'append', Load(), lineno=162, col_offset=8), [Call(Attribute(Name('_os', Load(), lineno=162, col_offset=23), 'getcwd', Load(), lineno=162, col_offset=23), [], [], None, None, lineno=162, col_offset=23)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=163, col_offset=12), Attribute(Name('_os', Load(), lineno=163, col_offset=28), 'error', Load(), lineno=163, col_offset=28)], Load(), lineno=163, col_offset=12), None, [Expr(Call(Attribute(Name('dirlist', Load(), lineno=164, col_offset=8), 'append', Load(), lineno=164, col_offset=8), [Attribute(Name('_os', Load(), lineno=164, col_offset=23), 'curdir', Load(), lineno=164, col_offset=23)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8)], lineno=163, col_offset=4)], [], lineno=161, col_offset=4), Return(Name('dirlist', Load(), lineno=166, col_offset=11), lineno=166, col_offset=4)], [], lineno=140, col_offset=0), FunctionDef('_get_default_tempdir', arguments([], None, None, []), [Expr(Str('Calculate the default directory to use for temporary files.\n    This routine should be called exactly once.\n\n    We determine whether or not a candidate temp dir is usable by\n    trying to create and write to a file in that directory.  If this\n    is successful, the test file is deleted.  To prevent denial of\n    service, the name of the test file must be randomized.', lineno=175, col_offset=-1), lineno=175, col_offset=-1), Assign([Name('namer', Store(), lineno=177, col_offset=4)], Call(Name('_RandomNameSequence', Load(), lineno=177, col_offset=12), [], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=4), Assign([Name('dirlist', Store(), lineno=178, col_offset=4)], Call(Name('_candidate_tempdir_list', Load(), lineno=178, col_offset=14), [], [], None, None, lineno=178, col_offset=14), lineno=178, col_offset=4), Assign([Name('flags', Store(), lineno=179, col_offset=4)], Name('_text_openflags', Load(), lineno=179, col_offset=12), lineno=179, col_offset=4), For(Name('dir', Store(), lineno=181, col_offset=8), Name('dirlist', Load(), lineno=181, col_offset=15), [If(Compare(Name('dir', Load(), lineno=182, col_offset=11), [NotEq()], [Attribute(Name('_os', Load(), lineno=182, col_offset=18), 'curdir', Load(), lineno=182, col_offset=18)], lineno=182, col_offset=11), [Assign([Name('dir', Store(), lineno=183, col_offset=12)], Call(Attribute(Attribute(Name('_os', Load(), lineno=183, col_offset=18), 'path', Load(), lineno=183, col_offset=18), 'normcase', Load(), lineno=183, col_offset=18), [Call(Attribute(Attribute(Name('_os', Load(), lineno=183, col_offset=36), 'path', Load(), lineno=183, col_offset=36), 'abspath', Load(), lineno=183, col_offset=36), [Name('dir', Load(), lineno=183, col_offset=53)], [], None, None, lineno=183, col_offset=36)], [], None, None, lineno=183, col_offset=18), lineno=183, col_offset=12)], [], lineno=182, col_offset=8), For(Name('seq', Store(), lineno=185, col_offset=12), Call(Name('xrange', Load(), lineno=185, col_offset=19), [Num(100, lineno=185, col_offset=26)], [], None, None, lineno=185, col_offset=19), [Assign([Name('name', Store(), lineno=186, col_offset=12)], Call(Attribute(Name('namer', Load(), lineno=186, col_offset=19), 'next', Load(), lineno=186, col_offset=19), [], [], None, None, lineno=186, col_offset=19), lineno=186, col_offset=12), Assign([Name('filename', Store(), lineno=187, col_offset=12)], Call(Attribute(Attribute(Name('_os', Load(), lineno=187, col_offset=23), 'path', Load(), lineno=187, col_offset=23), 'join', Load(), lineno=187, col_offset=23), [Name('dir', Load(), lineno=187, col_offset=37), Name('name', Load(), lineno=187, col_offset=42)], [], None, None, lineno=187, col_offset=23), lineno=187, col_offset=12), TryExcept([Assign([Name('fd', Store(), lineno=189, col_offset=16)], Call(Attribute(Name('_os', Load(), lineno=189, col_offset=21), 'open', Load(), lineno=189, col_offset=21), [Name('filename', Load(), lineno=189, col_offset=30), Name('flags', Load(), lineno=189, col_offset=40), Num(384, lineno=189, col_offset=47)], [], None, None, lineno=189, col_offset=21), lineno=189, col_offset=16), Assign([Name('fp', Store(), lineno=190, col_offset=16)], Call(Attribute(Name('_os', Load(), lineno=190, col_offset=21), 'fdopen', Load(), lineno=190, col_offset=21), [Name('fd', Load(), lineno=190, col_offset=32), Str('w', lineno=190, col_offset=36)], [], None, None, lineno=190, col_offset=21), lineno=190, col_offset=16), Expr(Call(Attribute(Name('fp', Load(), lineno=191, col_offset=16), 'write', Load(), lineno=191, col_offset=16), [Str('blat', lineno=191, col_offset=25)], [], None, None, lineno=191, col_offset=16), lineno=191, col_offset=16), Expr(Call(Attribute(Name('fp', Load(), lineno=192, col_offset=16), 'close', Load(), lineno=192, col_offset=16), [], [], None, None, lineno=192, col_offset=16), lineno=192, col_offset=16), Expr(Call(Attribute(Name('_os', Load(), lineno=193, col_offset=16), 'unlink', Load(), lineno=193, col_offset=16), [Name('filename', Load(), lineno=193, col_offset=27)], [], None, None, lineno=193, col_offset=16), lineno=193, col_offset=16), Delete([Name('fp', Del(), lineno=194, col_offset=20), Name('fd', Del(), lineno=194, col_offset=24)], lineno=194, col_offset=16), Return(Name('dir', Load(), lineno=195, col_offset=23), lineno=195, col_offset=16)], [ExceptHandler(Tuple([Name('OSError', Load(), lineno=196, col_offset=20), Name('IOError', Load(), lineno=196, col_offset=29)], Load(), lineno=196, col_offset=20), Name('e', Store(), lineno=196, col_offset=39), [If(Compare(Subscript(Name('e', Load(), lineno=197, col_offset=19), Index(Num(0, lineno=197, col_offset=21)), Load(), lineno=197, col_offset=19), [NotEq()], [Attribute(Name('_errno', Load(), lineno=197, col_offset=27), 'EEXIST', Load(), lineno=197, col_offset=27)], lineno=197, col_offset=19), [Break( lineno=198, col_offset=20)], [], lineno=197, col_offset=16), Pass( lineno=199, col_offset=16)], lineno=196, col_offset=12)], [], lineno=188, col_offset=12)], [], lineno=185, col_offset=8)], [], lineno=181, col_offset=4), Raise(Name('IOError', Load(), lineno=200, col_offset=10), Tuple([Attribute(Name('_errno', Load(), lineno=200, col_offset=20), 'ENOENT', Load(), lineno=200, col_offset=20), BinOp(Str('No usable temporary directory found in %s', lineno=201, col_offset=21), Mod(), Name('dirlist', Load(), lineno=201, col_offset=67), lineno=201, col_offset=21)], Load(), lineno=200, col_offset=20), None, lineno=200, col_offset=4)], [], lineno=168, col_offset=0), Assign([Name('_name_sequence', Store(), lineno=203, col_offset=0)], Name('None', Load(), lineno=203, col_offset=17), lineno=203, col_offset=0), FunctionDef('_get_candidate_names', arguments([], None, None, []), [Expr(Str('Common setup sequence for all user-callable interfaces.', lineno=206, col_offset=4), lineno=206, col_offset=4), Global(['_name_sequence'], lineno=208, col_offset=4), If(Compare(Name('_name_sequence', Load(), lineno=209, col_offset=7), [Is()], [Name('None', Load(), lineno=209, col_offset=25)], lineno=209, col_offset=7), [Expr(Call(Attribute(Name('_once_lock', Load(), lineno=210, col_offset=8), 'acquire', Load(), lineno=210, col_offset=8), [], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), TryFinally([If(Compare(Name('_name_sequence', Load(), lineno=212, col_offset=15), [Is()], [Name('None', Load(), lineno=212, col_offset=33)], lineno=212, col_offset=15), [Assign([Name('_name_sequence', Store(), lineno=213, col_offset=16)], Call(Name('_RandomNameSequence', Load(), lineno=213, col_offset=33), [], [], None, None, lineno=213, col_offset=33), lineno=213, col_offset=16)], [], lineno=212, col_offset=12)], [Expr(Call(Attribute(Name('_once_lock', Load(), lineno=215, col_offset=12), 'release', Load(), lineno=215, col_offset=12), [], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12)], lineno=211, col_offset=8)], [], lineno=209, col_offset=4), Return(Name('_name_sequence', Load(), lineno=216, col_offset=11), lineno=216, col_offset=4)], [], lineno=205, col_offset=0), FunctionDef('_mkstemp_inner', arguments([Name('dir', Param(), lineno=219, col_offset=19), Name('pre', Param(), lineno=219, col_offset=24), Name('suf', Param(), lineno=219, col_offset=29), Name('flags', Param(), lineno=219, col_offset=34)], None, None, []), [Expr(Str('Code common to mkstemp, TemporaryFile, and NamedTemporaryFile.', lineno=220, col_offset=4), lineno=220, col_offset=4), Assign([Name('names', Store(), lineno=222, col_offset=4)], Call(Name('_get_candidate_names', Load(), lineno=222, col_offset=12), [], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=4), For(Name('seq', Store(), lineno=224, col_offset=8), Call(Name('xrange', Load(), lineno=224, col_offset=15), [Name('TMP_MAX', Load(), lineno=224, col_offset=22)], [], None, None, lineno=224, col_offset=15), [Assign([Name('name', Store(), lineno=225, col_offset=8)], Call(Attribute(Name('names', Load(), lineno=225, col_offset=15), 'next', Load(), lineno=225, col_offset=15), [], [], None, None, lineno=225, col_offset=15), lineno=225, col_offset=8), Assign([Name('file', Store(), lineno=226, col_offset=8)], Call(Attribute(Attribute(Name('_os', Load(), lineno=226, col_offset=15), 'path', Load(), lineno=226, col_offset=15), 'join', Load(), lineno=226, col_offset=15), [Name('dir', Load(), lineno=226, col_offset=29), BinOp(BinOp(Name('pre', Load(), lineno=226, col_offset=34), Add(), Name('name', Load(), lineno=226, col_offset=40), lineno=226, col_offset=34), Add(), Name('suf', Load(), lineno=226, col_offset=47), lineno=226, col_offset=45)], [], None, None, lineno=226, col_offset=15), lineno=226, col_offset=8), TryExcept([Assign([Name('fd', Store(), lineno=228, col_offset=12)], Call(Attribute(Name('_os', Load(), lineno=228, col_offset=17), 'open', Load(), lineno=228, col_offset=17), [Name('file', Load(), lineno=228, col_offset=26), Name('flags', Load(), lineno=228, col_offset=32), Num(384, lineno=228, col_offset=39)], [], None, None, lineno=228, col_offset=17), lineno=228, col_offset=12), Expr(Call(Name('_set_cloexec', Load(), lineno=229, col_offset=12), [Name('fd', Load(), lineno=229, col_offset=25)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12), Return(Tuple([Name('fd', Load(), lineno=230, col_offset=20), Call(Attribute(Attribute(Name('_os', Load(), lineno=230, col_offset=24), 'path', Load(), lineno=230, col_offset=24), 'abspath', Load(), lineno=230, col_offset=24), [Name('file', Load(), lineno=230, col_offset=41)], [], None, None, lineno=230, col_offset=24)], Load(), lineno=230, col_offset=20), lineno=230, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=231, col_offset=15), Name('e', Store(), lineno=231, col_offset=24), [If(Compare(Attribute(Name('e', Load(), lineno=232, col_offset=15), 'errno', Load(), lineno=232, col_offset=15), [Eq()], [Attribute(Name('_errno', Load(), lineno=232, col_offset=26), 'EEXIST', Load(), lineno=232, col_offset=26)], lineno=232, col_offset=15), [Continue( lineno=233, col_offset=16)], [], lineno=232, col_offset=12), Raise(None, None, None, lineno=234, col_offset=12)], lineno=231, col_offset=8)], [], lineno=227, col_offset=8)], [], lineno=224, col_offset=4), Raise(Name('IOError', Load(), lineno=236, col_offset=10), Tuple([Attribute(Name('_errno', Load(), lineno=236, col_offset=20), 'EEXIST', Load(), lineno=236, col_offset=20), Str('No usable temporary file name found', lineno=236, col_offset=35)], Load(), lineno=236, col_offset=20), None, lineno=236, col_offset=4)], [], lineno=219, col_offset=0), FunctionDef('gettempprefix', arguments([], None, None, []), [Expr(Str('Accessor for tempdir.template.', lineno=242, col_offset=4), lineno=242, col_offset=4), Return(Name('template', Load(), lineno=243, col_offset=11), lineno=243, col_offset=4)], [], lineno=241, col_offset=0), Assign([Name('tempdir', Store(), lineno=245, col_offset=0)], Name('None', Load(), lineno=245, col_offset=10), lineno=245, col_offset=0), FunctionDef('gettempdir', arguments([], None, None, []), [Expr(Str('Accessor for tempfile.tempdir.', lineno=248, col_offset=4), lineno=248, col_offset=4), Global(['tempdir'], lineno=249, col_offset=4), If(Compare(Name('tempdir', Load(), lineno=250, col_offset=7), [Is()], [Name('None', Load(), lineno=250, col_offset=18)], lineno=250, col_offset=7), [Expr(Call(Attribute(Name('_once_lock', Load(), lineno=251, col_offset=8), 'acquire', Load(), lineno=251, col_offset=8), [], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), TryFinally([If(Compare(Name('tempdir', Load(), lineno=253, col_offset=15), [Is()], [Name('None', Load(), lineno=253, col_offset=26)], lineno=253, col_offset=15), [Assign([Name('tempdir', Store(), lineno=254, col_offset=16)], Call(Name('_get_default_tempdir', Load(), lineno=254, col_offset=26), [], [], None, None, lineno=254, col_offset=26), lineno=254, col_offset=16)], [], lineno=253, col_offset=12)], [Expr(Call(Attribute(Name('_once_lock', Load(), lineno=256, col_offset=12), 'release', Load(), lineno=256, col_offset=12), [], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=12)], lineno=252, col_offset=8)], [], lineno=250, col_offset=4), Return(Name('tempdir', Load(), lineno=257, col_offset=11), lineno=257, col_offset=4)], [], lineno=247, col_offset=0), FunctionDef('mkstemp', arguments([Name('suffix', Param(), lineno=259, col_offset=12), Name('prefix', Param(), lineno=259, col_offset=23), Name('dir', Param(), lineno=259, col_offset=40), Name('text', Param(), lineno=259, col_offset=50)], None, None, [Str('', lineno=259, col_offset=19), Name('template', Load(), lineno=259, col_offset=30), Name('None', Load(), lineno=259, col_offset=44), Name('False', Load(), lineno=259, col_offset=55)]), [Expr(Str("User-callable function to create and return a unique temporary\n    file.  The return value is a pair (fd, name) where fd is the\n    file descriptor returned by os.open, and name is the filename.\n\n    If 'suffix' is specified, the file name will end with that suffix,\n    otherwise there will be no suffix.\n\n    If 'prefix' is specified, the file name will begin with that prefix,\n    otherwise a default prefix is used.\n\n    If 'dir' is specified, the file will be created in that directory,\n    otherwise a default directory is used.\n\n    If 'text' is specified and true, the file is opened in text\n    mode.  Else (the default) the file is opened in binary mode.  On\n    some operating systems, this makes no difference.\n\n    The file is readable and writable only by the creating user ID.\n    If the operating system uses permission bits to indicate whether a\n    file is executable, the file is executable by no one. The file\n    descriptor is not inherited by children of this process.\n\n    Caller is responsible for deleting the file when done with it.\n    ", lineno=283, col_offset=-1), lineno=283, col_offset=-1), If(Compare(Name('dir', Load(), lineno=285, col_offset=7), [Is()], [Name('None', Load(), lineno=285, col_offset=14)], lineno=285, col_offset=7), [Assign([Name('dir', Store(), lineno=286, col_offset=8)], Call(Name('gettempdir', Load(), lineno=286, col_offset=14), [], [], None, None, lineno=286, col_offset=14), lineno=286, col_offset=8)], [], lineno=285, col_offset=4), If(Name('text', Load(), lineno=288, col_offset=7), [Assign([Name('flags', Store(), lineno=289, col_offset=8)], Name('_text_openflags', Load(), lineno=289, col_offset=16), lineno=289, col_offset=8)], [Assign([Name('flags', Store(), lineno=291, col_offset=8)], Name('_bin_openflags', Load(), lineno=291, col_offset=16), lineno=291, col_offset=8)], lineno=288, col_offset=4), Return(Call(Name('_mkstemp_inner', Load(), lineno=293, col_offset=11), [Name('dir', Load(), lineno=293, col_offset=26), Name('prefix', Load(), lineno=293, col_offset=31), Name('suffix', Load(), lineno=293, col_offset=39), Name('flags', Load(), lineno=293, col_offset=47)], [], None, None, lineno=293, col_offset=11), lineno=293, col_offset=4)], [], lineno=259, col_offset=0), FunctionDef('mkdtemp', arguments([Name('suffix', Param(), lineno=296, col_offset=12), Name('prefix', Param(), lineno=296, col_offset=23), Name('dir', Param(), lineno=296, col_offset=40)], None, None, [Str('', lineno=296, col_offset=19), Name('template', Load(), lineno=296, col_offset=30), Name('None', Load(), lineno=296, col_offset=44)]), [Expr(Str("User-callable function to create and return a unique temporary\n    directory.  The return value is the pathname of the directory.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    The directory is readable, writable, and searchable only by the\n    creating user.\n\n    Caller is responsible for deleting the directory when done with it.\n    ", lineno=307, col_offset=-1), lineno=307, col_offset=-1), If(Compare(Name('dir', Load(), lineno=309, col_offset=7), [Is()], [Name('None', Load(), lineno=309, col_offset=14)], lineno=309, col_offset=7), [Assign([Name('dir', Store(), lineno=310, col_offset=8)], Call(Name('gettempdir', Load(), lineno=310, col_offset=14), [], [], None, None, lineno=310, col_offset=14), lineno=310, col_offset=8)], [], lineno=309, col_offset=4), Assign([Name('names', Store(), lineno=312, col_offset=4)], Call(Name('_get_candidate_names', Load(), lineno=312, col_offset=12), [], [], None, None, lineno=312, col_offset=12), lineno=312, col_offset=4), For(Name('seq', Store(), lineno=314, col_offset=8), Call(Name('xrange', Load(), lineno=314, col_offset=15), [Name('TMP_MAX', Load(), lineno=314, col_offset=22)], [], None, None, lineno=314, col_offset=15), [Assign([Name('name', Store(), lineno=315, col_offset=8)], Call(Attribute(Name('names', Load(), lineno=315, col_offset=15), 'next', Load(), lineno=315, col_offset=15), [], [], None, None, lineno=315, col_offset=15), lineno=315, col_offset=8), Assign([Name('file', Store(), lineno=316, col_offset=8)], Call(Attribute(Attribute(Name('_os', Load(), lineno=316, col_offset=15), 'path', Load(), lineno=316, col_offset=15), 'join', Load(), lineno=316, col_offset=15), [Name('dir', Load(), lineno=316, col_offset=29), BinOp(BinOp(Name('prefix', Load(), lineno=316, col_offset=34), Add(), Name('name', Load(), lineno=316, col_offset=43), lineno=316, col_offset=34), Add(), Name('suffix', Load(), lineno=316, col_offset=50), lineno=316, col_offset=48)], [], None, None, lineno=316, col_offset=15), lineno=316, col_offset=8), TryExcept([Expr(Call(Attribute(Name('_os', Load(), lineno=318, col_offset=12), 'mkdir', Load(), lineno=318, col_offset=12), [Name('file', Load(), lineno=318, col_offset=22), Num(448, lineno=318, col_offset=28)], [], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12), Return(Name('file', Load(), lineno=319, col_offset=19), lineno=319, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=320, col_offset=15), Name('e', Store(), lineno=320, col_offset=24), [If(Compare(Attribute(Name('e', Load(), lineno=321, col_offset=15), 'errno', Load(), lineno=321, col_offset=15), [Eq()], [Attribute(Name('_errno', Load(), lineno=321, col_offset=26), 'EEXIST', Load(), lineno=321, col_offset=26)], lineno=321, col_offset=15), [Continue( lineno=322, col_offset=16)], [], lineno=321, col_offset=12), Raise(None, None, None, lineno=323, col_offset=12)], lineno=320, col_offset=8)], [], lineno=317, col_offset=8)], [], lineno=314, col_offset=4), Raise(Name('IOError', Load(), lineno=325, col_offset=10), Tuple([Attribute(Name('_errno', Load(), lineno=325, col_offset=20), 'EEXIST', Load(), lineno=325, col_offset=20), Str('No usable temporary directory name found', lineno=325, col_offset=35)], Load(), lineno=325, col_offset=20), None, lineno=325, col_offset=4)], [], lineno=296, col_offset=0), FunctionDef('mktemp', arguments([Name('suffix', Param(), lineno=327, col_offset=11), Name('prefix', Param(), lineno=327, col_offset=22), Name('dir', Param(), lineno=327, col_offset=39)], None, None, [Str('', lineno=327, col_offset=18), Name('template', Load(), lineno=327, col_offset=29), Name('None', Load(), lineno=327, col_offset=43)]), [Expr(Str("User-callable function to return a unique temporary file name.  The\n    file is not created.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    This function is unsafe and should not be used.  The file name\n    refers to a file that did not exist at some point, but by the time\n    you get around to creating it, someone else may have beaten you to\n    the punch.\n    ", lineno=338, col_offset=-1), lineno=338, col_offset=-1), If(Compare(Name('dir', Load(), lineno=344, col_offset=7), [Is()], [Name('None', Load(), lineno=344, col_offset=14)], lineno=344, col_offset=7), [Assign([Name('dir', Store(), lineno=345, col_offset=8)], Call(Name('gettempdir', Load(), lineno=345, col_offset=14), [], [], None, None, lineno=345, col_offset=14), lineno=345, col_offset=8)], [], lineno=344, col_offset=4), Assign([Name('names', Store(), lineno=347, col_offset=4)], Call(Name('_get_candidate_names', Load(), lineno=347, col_offset=12), [], [], None, None, lineno=347, col_offset=12), lineno=347, col_offset=4), For(Name('seq', Store(), lineno=348, col_offset=8), Call(Name('xrange', Load(), lineno=348, col_offset=15), [Name('TMP_MAX', Load(), lineno=348, col_offset=22)], [], None, None, lineno=348, col_offset=15), [Assign([Name('name', Store(), lineno=349, col_offset=8)], Call(Attribute(Name('names', Load(), lineno=349, col_offset=15), 'next', Load(), lineno=349, col_offset=15), [], [], None, None, lineno=349, col_offset=15), lineno=349, col_offset=8), Assign([Name('file', Store(), lineno=350, col_offset=8)], Call(Attribute(Attribute(Name('_os', Load(), lineno=350, col_offset=15), 'path', Load(), lineno=350, col_offset=15), 'join', Load(), lineno=350, col_offset=15), [Name('dir', Load(), lineno=350, col_offset=29), BinOp(BinOp(Name('prefix', Load(), lineno=350, col_offset=34), Add(), Name('name', Load(), lineno=350, col_offset=43), lineno=350, col_offset=34), Add(), Name('suffix', Load(), lineno=350, col_offset=50), lineno=350, col_offset=48)], [], None, None, lineno=350, col_offset=15), lineno=350, col_offset=8), If(UnaryOp(Not(), Call(Name('_exists', Load(), lineno=351, col_offset=15), [Name('file', Load(), lineno=351, col_offset=23)], [], None, None, lineno=351, col_offset=15), lineno=351, col_offset=11), [Return(Name('file', Load(), lineno=352, col_offset=19), lineno=352, col_offset=12)], [], lineno=351, col_offset=8)], [], lineno=348, col_offset=4), Raise(Name('IOError', Load(), lineno=354, col_offset=10), Tuple([Attribute(Name('_errno', Load(), lineno=354, col_offset=20), 'EEXIST', Load(), lineno=354, col_offset=20), Str('No usable temporary filename found', lineno=354, col_offset=35)], Load(), lineno=354, col_offset=20), None, lineno=354, col_offset=4)], [], lineno=327, col_offset=0), ClassDef('_TemporaryFileWrapper', [], [Expr(Str('Temporary file wrapper\n\n    This class provides a wrapper around files opened for\n    temporary use.  In particular, it seeks to automatically\n    remove the file when it is no longer needed.\n    ', lineno=363, col_offset=-1), lineno=363, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=365, col_offset=17), Name('file', Param(), lineno=365, col_offset=23), Name('name', Param(), lineno=365, col_offset=29), Name('delete', Param(), lineno=365, col_offset=35)], None, None, [Name('True', Load(), lineno=365, col_offset=42)]), [Assign([Attribute(Name('self', Load(), lineno=366, col_offset=8), 'file', Store(), lineno=366, col_offset=8)], Name('file', Load(), lineno=366, col_offset=20), lineno=366, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=367, col_offset=8), 'name', Store(), lineno=367, col_offset=8)], Name('name', Load(), lineno=367, col_offset=20), lineno=367, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=368, col_offset=8), 'close_called', Store(), lineno=368, col_offset=8)], Name('False', Load(), lineno=368, col_offset=28), lineno=368, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=369, col_offset=8), 'delete', Store(), lineno=369, col_offset=8)], Name('delete', Load(), lineno=369, col_offset=22), lineno=369, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=371, col_offset=20), Name('name', Param(), lineno=371, col_offset=26)], None, None, []), [Assign([Name('file', Store(), lineno=375, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=375, col_offset=15), '__dict__', Load(), lineno=375, col_offset=15), Index(Str('file', lineno=375, col_offset=29)), Load(), lineno=375, col_offset=15), lineno=375, col_offset=8), Assign([Name('a', Store(), lineno=376, col_offset=8)], Call(Name('getattr', Load(), lineno=376, col_offset=12), [Name('file', Load(), lineno=376, col_offset=20), Name('name', Load(), lineno=376, col_offset=26)], [], None, None, lineno=376, col_offset=12), lineno=376, col_offset=8), If(UnaryOp(Not(), Call(Name('issubclass', Load(), lineno=377, col_offset=15), [Call(Name('type', Load(), lineno=377, col_offset=26), [Name('a', Load(), lineno=377, col_offset=31)], [], None, None, lineno=377, col_offset=26), Call(Name('type', Load(), lineno=377, col_offset=35), [Num(0, lineno=377, col_offset=40)], [], None, None, lineno=377, col_offset=35)], [], None, None, lineno=377, col_offset=15), lineno=377, col_offset=11), [Expr(Call(Name('setattr', Load(), lineno=378, col_offset=12), [Name('self', Load(), lineno=378, col_offset=20), Name('name', Load(), lineno=378, col_offset=26), Name('a', Load(), lineno=378, col_offset=32)], [], None, None, lineno=378, col_offset=12), lineno=378, col_offset=12)], [], lineno=377, col_offset=8), Return(Name('a', Load(), lineno=379, col_offset=15), lineno=379, col_offset=8)], [], lineno=371, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=383, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'file', Load(), lineno=384, col_offset=8), '__enter__', Load(), lineno=384, col_offset=8), [], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Return(Name('self', Load(), lineno=385, col_offset=15), lineno=385, col_offset=8)], [], lineno=383, col_offset=4), If(Compare(Attribute(Name('_os', Load(), lineno=390, col_offset=7), 'name', Load(), lineno=390, col_offset=7), [NotEq()], [Str('nt', lineno=390, col_offset=19)], lineno=390, col_offset=7), [Assign([Name('unlink', Store(), lineno=396, col_offset=8)], Attribute(Name('_os', Load(), lineno=396, col_offset=17), 'unlink', Load(), lineno=396, col_offset=17), lineno=396, col_offset=8), FunctionDef('close', arguments([Name('self', Param(), lineno=398, col_offset=18)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=399, col_offset=19), 'close_called', Load(), lineno=399, col_offset=19), lineno=399, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=400, col_offset=16), 'close_called', Store(), lineno=400, col_offset=16)], Name('True', Load(), lineno=400, col_offset=36), lineno=400, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=401, col_offset=16), 'file', Load(), lineno=401, col_offset=16), 'close', Load(), lineno=401, col_offset=16), [], [], None, None, lineno=401, col_offset=16), lineno=401, col_offset=16), If(Attribute(Name('self', Load(), lineno=402, col_offset=19), 'delete', Load(), lineno=402, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=20), 'unlink', Load(), lineno=403, col_offset=20), [Attribute(Name('self', Load(), lineno=403, col_offset=32), 'name', Load(), lineno=403, col_offset=32)], [], None, None, lineno=403, col_offset=20), lineno=403, col_offset=20)], [], lineno=402, col_offset=16)], [], lineno=399, col_offset=12)], [], lineno=398, col_offset=8), FunctionDef('__del__', arguments([Name('self', Param(), lineno=405, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=12), 'close', Load(), lineno=406, col_offset=12), [], [], None, None, lineno=406, col_offset=12), lineno=406, col_offset=12)], [], lineno=405, col_offset=8), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=410, col_offset=21), Name('exc', Param(), lineno=410, col_offset=27), Name('value', Param(), lineno=410, col_offset=32), Name('tb', Param(), lineno=410, col_offset=39)], None, None, []), [Assign([Name('result', Store(), lineno=411, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=411, col_offset=21), 'file', Load(), lineno=411, col_offset=21), '__exit__', Load(), lineno=411, col_offset=21), [Name('exc', Load(), lineno=411, col_offset=40), Name('value', Load(), lineno=411, col_offset=45), Name('tb', Load(), lineno=411, col_offset=52)], [], None, None, lineno=411, col_offset=21), lineno=411, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=12), 'close', Load(), lineno=412, col_offset=12), [], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12), Return(Name('result', Load(), lineno=413, col_offset=19), lineno=413, col_offset=12)], [], lineno=410, col_offset=8)], [FunctionDef('__exit__', arguments([Name('self', Param(), lineno=415, col_offset=21), Name('exc', Param(), lineno=415, col_offset=27), Name('value', Param(), lineno=415, col_offset=32), Name('tb', Param(), lineno=415, col_offset=39)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=416, col_offset=12), 'file', Load(), lineno=416, col_offset=12), '__exit__', Load(), lineno=416, col_offset=12), [Name('exc', Load(), lineno=416, col_offset=31), Name('value', Load(), lineno=416, col_offset=36), Name('tb', Load(), lineno=416, col_offset=43)], [], None, None, lineno=416, col_offset=12), lineno=416, col_offset=12)], [], lineno=415, col_offset=8)], lineno=390, col_offset=4)], [], lineno=357, col_offset=0), FunctionDef('NamedTemporaryFile', arguments([Name('mode', Param(), lineno=419, col_offset=23), Name('bufsize', Param(), lineno=419, col_offset=35), Name('suffix', Param(), lineno=419, col_offset=47), Name('prefix', Param(), lineno=420, col_offset=23), Name('dir', Param(), lineno=420, col_offset=40), Name('delete', Param(), lineno=420, col_offset=50)], None, None, [Str('w+b', lineno=419, col_offset=28), Num(-1, lineno=419, col_offset=44), Str('', lineno=419, col_offset=54), Name('template', Load(), lineno=420, col_offset=30), Name('None', Load(), lineno=420, col_offset=44), Name('True', Load(), lineno=420, col_offset=57)]), [Expr(Str('Create and return a temporary file.\n    Arguments:\n    \'prefix\', \'suffix\', \'dir\' -- as for mkstemp.\n    \'mode\' -- the mode argument to os.fdopen (default "w+b").\n    \'bufsize\' -- the buffer size argument to os.fdopen (default -1).\n    \'delete\' -- whether the file is deleted on close (default True).\n    The file is created as mkstemp() would do it.\n\n    Returns an object with a file-like interface; the name of the file\n    is accessible as file.name.  The file will be automatically deleted\n    when it is closed unless the \'delete\' argument is set to False.\n    ', lineno=432, col_offset=-1), lineno=432, col_offset=-1), If(Compare(Name('dir', Load(), lineno=434, col_offset=7), [Is()], [Name('None', Load(), lineno=434, col_offset=14)], lineno=434, col_offset=7), [Assign([Name('dir', Store(), lineno=435, col_offset=8)], Call(Name('gettempdir', Load(), lineno=435, col_offset=14), [], [], None, None, lineno=435, col_offset=14), lineno=435, col_offset=8)], [], lineno=434, col_offset=4), If(Compare(Str('b', lineno=437, col_offset=7), [In()], [Name('mode', Load(), lineno=437, col_offset=14)], lineno=437, col_offset=7), [Assign([Name('flags', Store(), lineno=438, col_offset=8)], Name('_bin_openflags', Load(), lineno=438, col_offset=16), lineno=438, col_offset=8)], [Assign([Name('flags', Store(), lineno=440, col_offset=8)], Name('_text_openflags', Load(), lineno=440, col_offset=16), lineno=440, col_offset=8)], lineno=437, col_offset=4), If(BoolOp(And(), [Compare(Attribute(Name('_os', Load(), lineno=444, col_offset=7), 'name', Load(), lineno=444, col_offset=7), [Eq()], [Str('nt', lineno=444, col_offset=19)], lineno=444, col_offset=7), Name('delete', Load(), lineno=444, col_offset=28)], lineno=444, col_offset=7), [AugAssign(Name('flags', Store(), lineno=445, col_offset=8), BitOr(), Attribute(Name('_os', Load(), lineno=445, col_offset=17), 'O_TEMPORARY', Load(), lineno=445, col_offset=17), lineno=445, col_offset=8)], [], lineno=444, col_offset=4), Assign([Tuple([Name('fd', Store(), lineno=447, col_offset=5), Name('name', Store(), lineno=447, col_offset=9)], Store(), lineno=447, col_offset=5)], Call(Name('_mkstemp_inner', Load(), lineno=447, col_offset=17), [Name('dir', Load(), lineno=447, col_offset=32), Name('prefix', Load(), lineno=447, col_offset=37), Name('suffix', Load(), lineno=447, col_offset=45), Name('flags', Load(), lineno=447, col_offset=53)], [], None, None, lineno=447, col_offset=17), lineno=447, col_offset=4), Assign([Name('file', Store(), lineno=448, col_offset=4)], Call(Attribute(Name('_os', Load(), lineno=448, col_offset=11), 'fdopen', Load(), lineno=448, col_offset=11), [Name('fd', Load(), lineno=448, col_offset=22), Name('mode', Load(), lineno=448, col_offset=26), Name('bufsize', Load(), lineno=448, col_offset=32)], [], None, None, lineno=448, col_offset=11), lineno=448, col_offset=4), Return(Call(Name('_TemporaryFileWrapper', Load(), lineno=449, col_offset=11), [Name('file', Load(), lineno=449, col_offset=33), Name('name', Load(), lineno=449, col_offset=39), Name('delete', Load(), lineno=449, col_offset=45)], [], None, None, lineno=449, col_offset=11), lineno=449, col_offset=4)], [], lineno=419, col_offset=0), If(BoolOp(Or(), [Compare(Attribute(Name('_os', Load(), lineno=451, col_offset=3), 'name', Load(), lineno=451, col_offset=3), [NotEq()], [Str('posix', lineno=451, col_offset=15)], lineno=451, col_offset=3), Compare(Attribute(Attribute(Name('_os', Load(), lineno=451, col_offset=26), 'sys', Load(), lineno=451, col_offset=26), 'platform', Load(), lineno=451, col_offset=26), [Eq()], [Str('cygwin', lineno=451, col_offset=46)], lineno=451, col_offset=26)], lineno=451, col_offset=3), [Assign([Name('TemporaryFile', Store(), lineno=454, col_offset=4)], Name('NamedTemporaryFile', Load(), lineno=454, col_offset=20), lineno=454, col_offset=4)], [FunctionDef('TemporaryFile', arguments([Name('mode', Param(), lineno=457, col_offset=22), Name('bufsize', Param(), lineno=457, col_offset=34), Name('suffix', Param(), lineno=457, col_offset=46), Name('prefix', Param(), lineno=458, col_offset=22), Name('dir', Param(), lineno=458, col_offset=39)], None, None, [Str('w+b', lineno=457, col_offset=27), Num(-1, lineno=457, col_offset=43), Str('', lineno=457, col_offset=53), Name('template', Load(), lineno=458, col_offset=29), Name('None', Load(), lineno=458, col_offset=43)]), [Expr(Str('Create and return a temporary file.\n        Arguments:\n        \'prefix\', \'suffix\', \'dir\' -- as for mkstemp.\n        \'mode\' -- the mode argument to os.fdopen (default "w+b").\n        \'bufsize\' -- the buffer size argument to os.fdopen (default -1).\n        The file is created as mkstemp() would do it.\n\n        Returns an object with a file-like interface.  The file has no\n        name, and will cease to exist when it is closed.\n        ', lineno=468, col_offset=-1), lineno=468, col_offset=-1), If(Compare(Name('dir', Load(), lineno=470, col_offset=11), [Is()], [Name('None', Load(), lineno=470, col_offset=18)], lineno=470, col_offset=11), [Assign([Name('dir', Store(), lineno=471, col_offset=12)], Call(Name('gettempdir', Load(), lineno=471, col_offset=18), [], [], None, None, lineno=471, col_offset=18), lineno=471, col_offset=12)], [], lineno=470, col_offset=8), If(Compare(Str('b', lineno=473, col_offset=11), [In()], [Name('mode', Load(), lineno=473, col_offset=18)], lineno=473, col_offset=11), [Assign([Name('flags', Store(), lineno=474, col_offset=12)], Name('_bin_openflags', Load(), lineno=474, col_offset=20), lineno=474, col_offset=12)], [Assign([Name('flags', Store(), lineno=476, col_offset=12)], Name('_text_openflags', Load(), lineno=476, col_offset=20), lineno=476, col_offset=12)], lineno=473, col_offset=8), Assign([Tuple([Name('fd', Store(), lineno=478, col_offset=9), Name('name', Store(), lineno=478, col_offset=13)], Store(), lineno=478, col_offset=9)], Call(Name('_mkstemp_inner', Load(), lineno=478, col_offset=21), [Name('dir', Load(), lineno=478, col_offset=36), Name('prefix', Load(), lineno=478, col_offset=41), Name('suffix', Load(), lineno=478, col_offset=49), Name('flags', Load(), lineno=478, col_offset=57)], [], None, None, lineno=478, col_offset=21), lineno=478, col_offset=8), TryExcept([Expr(Call(Attribute(Name('_os', Load(), lineno=480, col_offset=12), 'unlink', Load(), lineno=480, col_offset=12), [Name('name', Load(), lineno=480, col_offset=23)], [], None, None, lineno=480, col_offset=12), lineno=480, col_offset=12), Return(Call(Attribute(Name('_os', Load(), lineno=481, col_offset=19), 'fdopen', Load(), lineno=481, col_offset=19), [Name('fd', Load(), lineno=481, col_offset=30), Name('mode', Load(), lineno=481, col_offset=34), Name('bufsize', Load(), lineno=481, col_offset=40)], [], None, None, lineno=481, col_offset=19), lineno=481, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('_os', Load(), lineno=483, col_offset=12), 'close', Load(), lineno=483, col_offset=12), [Name('fd', Load(), lineno=483, col_offset=22)], [], None, None, lineno=483, col_offset=12), lineno=483, col_offset=12), Raise(None, None, None, lineno=484, col_offset=12)], lineno=482, col_offset=8)], [], lineno=479, col_offset=8)], [], lineno=457, col_offset=4)], lineno=451, col_offset=0), ClassDef('SpooledTemporaryFile', [], [Expr(Str('Temporary file wrapper, specialized to switch from\n    StringIO to a real file when it exceeds a certain size or\n    when a fileno is needed.\n    ', lineno=490, col_offset=-1), lineno=490, col_offset=-1), Assign([Name('_rolled', Store(), lineno=491, col_offset=4)], Name('False', Load(), lineno=491, col_offset=14), lineno=491, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=493, col_offset=17), Name('max_size', Param(), lineno=493, col_offset=23), Name('mode', Param(), lineno=493, col_offset=35), Name('bufsize', Param(), lineno=493, col_offset=47), Name('suffix', Param(), lineno=494, col_offset=17), Name('prefix', Param(), lineno=494, col_offset=28), Name('dir', Param(), lineno=494, col_offset=45)], None, None, [Num(0, lineno=493, col_offset=32), Str('w+b', lineno=493, col_offset=40), Num(-1, lineno=493, col_offset=56), Str('', lineno=494, col_offset=24), Name('template', Load(), lineno=494, col_offset=35), Name('None', Load(), lineno=494, col_offset=49)]), [Assign([Attribute(Name('self', Load(), lineno=495, col_offset=8), '_file', Store(), lineno=495, col_offset=8)], Call(Name('_StringIO', Load(), lineno=495, col_offset=21), [], [], None, None, lineno=495, col_offset=21), lineno=495, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=496, col_offset=8), '_max_size', Store(), lineno=496, col_offset=8)], Name('max_size', Load(), lineno=496, col_offset=25), lineno=496, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=497, col_offset=8), '_rolled', Store(), lineno=497, col_offset=8)], Name('False', Load(), lineno=497, col_offset=23), lineno=497, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=498, col_offset=8), '_TemporaryFileArgs', Store(), lineno=498, col_offset=8)], Tuple([Name('mode', Load(), lineno=498, col_offset=35), Name('bufsize', Load(), lineno=498, col_offset=41), Name('suffix', Load(), lineno=498, col_offset=50), Name('prefix', Load(), lineno=498, col_offset=58), Name('dir', Load(), lineno=498, col_offset=66)], Load(), lineno=498, col_offset=35), lineno=498, col_offset=8)], [], lineno=493, col_offset=4), FunctionDef('_check', arguments([Name('self', Param(), lineno=500, col_offset=15), Name('file', Param(), lineno=500, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=501, col_offset=11), '_rolled', Load(), lineno=501, col_offset=11), [Return(None, lineno=501, col_offset=25)], [], lineno=501, col_offset=8), Assign([Name('max_size', Store(), lineno=502, col_offset=8)], Attribute(Name('self', Load(), lineno=502, col_offset=19), '_max_size', Load(), lineno=502, col_offset=19), lineno=502, col_offset=8), If(BoolOp(And(), [Name('max_size', Load(), lineno=503, col_offset=11), Compare(Call(Attribute(Name('file', Load(), lineno=503, col_offset=24), 'tell', Load(), lineno=503, col_offset=24), [], [], None, None, lineno=503, col_offset=24), [Gt()], [Name('max_size', Load(), lineno=503, col_offset=38)], lineno=503, col_offset=24)], lineno=503, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=504, col_offset=12), 'rollover', Load(), lineno=504, col_offset=12), [], [], None, None, lineno=504, col_offset=12), lineno=504, col_offset=12)], [], lineno=503, col_offset=8)], [], lineno=500, col_offset=4), FunctionDef('rollover', arguments([Name('self', Param(), lineno=506, col_offset=17)], None, None, []), [If(Attribute(Name('self', Load(), lineno=507, col_offset=11), '_rolled', Load(), lineno=507, col_offset=11), [Return(None, lineno=507, col_offset=25)], [], lineno=507, col_offset=8), Assign([Name('file', Store(), lineno=508, col_offset=8)], Attribute(Name('self', Load(), lineno=508, col_offset=15), '_file', Load(), lineno=508, col_offset=15), lineno=508, col_offset=8), Assign([Name('newfile', Store(), lineno=509, col_offset=8), Attribute(Name('self', Load(), lineno=509, col_offset=18), '_file', Store(), lineno=509, col_offset=18)], Call(Name('TemporaryFile', Load(), lineno=509, col_offset=31), [], [], Attribute(Name('self', Load(), lineno=509, col_offset=46), '_TemporaryFileArgs', Load(), lineno=509, col_offset=46), None, lineno=509, col_offset=31), lineno=509, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=510, col_offset=12), '_TemporaryFileArgs', Del(), lineno=510, col_offset=12)], lineno=510, col_offset=8), Expr(Call(Attribute(Name('newfile', Load(), lineno=512, col_offset=8), 'write', Load(), lineno=512, col_offset=8), [Call(Attribute(Name('file', Load(), lineno=512, col_offset=22), 'getvalue', Load(), lineno=512, col_offset=22), [], [], None, None, lineno=512, col_offset=22)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Expr(Call(Attribute(Name('newfile', Load(), lineno=513, col_offset=8), 'seek', Load(), lineno=513, col_offset=8), [Call(Attribute(Name('file', Load(), lineno=513, col_offset=21), 'tell', Load(), lineno=513, col_offset=21), [], [], None, None, lineno=513, col_offset=21), Num(0, lineno=513, col_offset=34)], [], None, None, lineno=513, col_offset=8), lineno=513, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=515, col_offset=8), '_rolled', Store(), lineno=515, col_offset=8)], Name('True', Load(), lineno=515, col_offset=23), lineno=515, col_offset=8)], [], lineno=506, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=523, col_offset=18)], None, None, []), [If(Attribute(Attribute(Name('self', Load(), lineno=524, col_offset=11), '_file', Load(), lineno=524, col_offset=11), 'closed', Load(), lineno=524, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=525, col_offset=18), [Str('Cannot enter context with closed file', lineno=525, col_offset=29)], [], None, None, lineno=525, col_offset=18), None, None, lineno=525, col_offset=12)], [], lineno=524, col_offset=8), Return(Name('self', Load(), lineno=526, col_offset=15), lineno=526, col_offset=8)], [], lineno=523, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=528, col_offset=17), Name('exc', Param(), lineno=528, col_offset=23), Name('value', Param(), lineno=528, col_offset=28), Name('tb', Param(), lineno=528, col_offset=35)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=529, col_offset=8), '_file', Load(), lineno=529, col_offset=8), 'close', Load(), lineno=529, col_offset=8), [], [], None, None, lineno=529, col_offset=8), lineno=529, col_offset=8)], [], lineno=528, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=532, col_offset=17)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=533, col_offset=15), '_file', Load(), lineno=533, col_offset=15), '__iter__', Load(), lineno=533, col_offset=15), [], [], None, None, lineno=533, col_offset=15), lineno=533, col_offset=8)], [], lineno=532, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=535, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=536, col_offset=8), '_file', Load(), lineno=536, col_offset=8), 'close', Load(), lineno=536, col_offset=8), [], [], None, None, lineno=536, col_offset=8), lineno=536, col_offset=8)], [], lineno=535, col_offset=4), FunctionDef('closed', arguments([Name('self', Param(), lineno=539, col_offset=15)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=540, col_offset=15), '_file', Load(), lineno=540, col_offset=15), 'closed', Load(), lineno=540, col_offset=15), lineno=540, col_offset=8)], [Name('property', Load(), lineno=538, col_offset=5)], lineno=538, col_offset=4), FunctionDef('encoding', arguments([Name('self', Param(), lineno=543, col_offset=17)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=544, col_offset=15), '_file', Load(), lineno=544, col_offset=15), 'encoding', Load(), lineno=544, col_offset=15), lineno=544, col_offset=8)], [Name('property', Load(), lineno=542, col_offset=5)], lineno=542, col_offset=4), FunctionDef('fileno', arguments([Name('self', Param(), lineno=546, col_offset=15)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=8), 'rollover', Load(), lineno=547, col_offset=8), [], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=548, col_offset=15), '_file', Load(), lineno=548, col_offset=15), 'fileno', Load(), lineno=548, col_offset=15), [], [], None, None, lineno=548, col_offset=15), lineno=548, col_offset=8)], [], lineno=546, col_offset=4), FunctionDef('flush', arguments([Name('self', Param(), lineno=550, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=551, col_offset=8), '_file', Load(), lineno=551, col_offset=8), 'flush', Load(), lineno=551, col_offset=8), [], [], None, None, lineno=551, col_offset=8), lineno=551, col_offset=8)], [], lineno=550, col_offset=4), FunctionDef('isatty', arguments([Name('self', Param(), lineno=553, col_offset=15)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=554, col_offset=15), '_file', Load(), lineno=554, col_offset=15), 'isatty', Load(), lineno=554, col_offset=15), [], [], None, None, lineno=554, col_offset=15), lineno=554, col_offset=8)], [], lineno=553, col_offset=4), FunctionDef('mode', arguments([Name('self', Param(), lineno=557, col_offset=13)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=558, col_offset=15), '_file', Load(), lineno=558, col_offset=15), 'mode', Load(), lineno=558, col_offset=15), lineno=558, col_offset=8)], [Name('property', Load(), lineno=556, col_offset=5)], lineno=556, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=561, col_offset=13)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=562, col_offset=15), '_file', Load(), lineno=562, col_offset=15), 'name', Load(), lineno=562, col_offset=15), lineno=562, col_offset=8)], [Name('property', Load(), lineno=560, col_offset=5)], lineno=560, col_offset=4), FunctionDef('newlines', arguments([Name('self', Param(), lineno=565, col_offset=17)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=566, col_offset=15), '_file', Load(), lineno=566, col_offset=15), 'newlines', Load(), lineno=566, col_offset=15), lineno=566, col_offset=8)], [Name('property', Load(), lineno=564, col_offset=5)], lineno=564, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=568, col_offset=13)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=569, col_offset=15), '_file', Load(), lineno=569, col_offset=15), 'next', Load(), lineno=569, col_offset=15), lineno=569, col_offset=8)], [], lineno=568, col_offset=4), FunctionDef('read', arguments([Name('self', Param(), lineno=571, col_offset=13)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=572, col_offset=15), '_file', Load(), lineno=572, col_offset=15), 'read', Load(), lineno=572, col_offset=15), [], [], Name('args', Load(), lineno=572, col_offset=32), None, lineno=572, col_offset=15), lineno=572, col_offset=8)], [], lineno=571, col_offset=4), FunctionDef('readline', arguments([Name('self', Param(), lineno=574, col_offset=17)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=575, col_offset=15), '_file', Load(), lineno=575, col_offset=15), 'readline', Load(), lineno=575, col_offset=15), [], [], Name('args', Load(), lineno=575, col_offset=36), None, lineno=575, col_offset=15), lineno=575, col_offset=8)], [], lineno=574, col_offset=4), FunctionDef('readlines', arguments([Name('self', Param(), lineno=577, col_offset=18)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=578, col_offset=15), '_file', Load(), lineno=578, col_offset=15), 'readlines', Load(), lineno=578, col_offset=15), [], [], Name('args', Load(), lineno=578, col_offset=37), None, lineno=578, col_offset=15), lineno=578, col_offset=8)], [], lineno=577, col_offset=4), FunctionDef('seek', arguments([Name('self', Param(), lineno=580, col_offset=13)], 'args', None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=581, col_offset=8), '_file', Load(), lineno=581, col_offset=8), 'seek', Load(), lineno=581, col_offset=8), [], [], Name('args', Load(), lineno=581, col_offset=25), None, lineno=581, col_offset=8), lineno=581, col_offset=8)], [], lineno=580, col_offset=4), FunctionDef('softspace', arguments([Name('self', Param(), lineno=584, col_offset=18)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=585, col_offset=15), '_file', Load(), lineno=585, col_offset=15), 'softspace', Load(), lineno=585, col_offset=15), lineno=585, col_offset=8)], [Name('property', Load(), lineno=583, col_offset=5)], lineno=583, col_offset=4), FunctionDef('tell', arguments([Name('self', Param(), lineno=587, col_offset=13)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=588, col_offset=15), '_file', Load(), lineno=588, col_offset=15), 'tell', Load(), lineno=588, col_offset=15), [], [], None, None, lineno=588, col_offset=15), lineno=588, col_offset=8)], [], lineno=587, col_offset=4), FunctionDef('truncate', arguments([Name('self', Param(), lineno=590, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=591, col_offset=8), '_file', Load(), lineno=591, col_offset=8), 'truncate', Load(), lineno=591, col_offset=8), [], [], None, None, lineno=591, col_offset=8), lineno=591, col_offset=8)], [], lineno=590, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=593, col_offset=14), Name('s', Param(), lineno=593, col_offset=20)], None, None, []), [Assign([Name('file', Store(), lineno=594, col_offset=8)], Attribute(Name('self', Load(), lineno=594, col_offset=15), '_file', Load(), lineno=594, col_offset=15), lineno=594, col_offset=8), Assign([Name('rv', Store(), lineno=595, col_offset=8)], Call(Attribute(Name('file', Load(), lineno=595, col_offset=13), 'write', Load(), lineno=595, col_offset=13), [Name('s', Load(), lineno=595, col_offset=24)], [], None, None, lineno=595, col_offset=13), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=596, col_offset=8), '_check', Load(), lineno=596, col_offset=8), [Name('file', Load(), lineno=596, col_offset=20)], [], None, None, lineno=596, col_offset=8), lineno=596, col_offset=8), Return(Name('rv', Load(), lineno=597, col_offset=15), lineno=597, col_offset=8)], [], lineno=593, col_offset=4), FunctionDef('writelines', arguments([Name('self', Param(), lineno=599, col_offset=19), Name('iterable', Param(), lineno=599, col_offset=25)], None, None, []), [Assign([Name('file', Store(), lineno=600, col_offset=8)], Attribute(Name('self', Load(), lineno=600, col_offset=15), '_file', Load(), lineno=600, col_offset=15), lineno=600, col_offset=8), Assign([Name('rv', Store(), lineno=601, col_offset=8)], Call(Attribute(Name('file', Load(), lineno=601, col_offset=13), 'writelines', Load(), lineno=601, col_offset=13), [Name('iterable', Load(), lineno=601, col_offset=29)], [], None, None, lineno=601, col_offset=13), lineno=601, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=8), '_check', Load(), lineno=602, col_offset=8), [Name('file', Load(), lineno=602, col_offset=20)], [], None, None, lineno=602, col_offset=8), lineno=602, col_offset=8), Return(Name('rv', Load(), lineno=603, col_offset=15), lineno=603, col_offset=8)], [], lineno=599, col_offset=4), FunctionDef('xreadlines', arguments([Name('self', Param(), lineno=605, col_offset=19)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=606, col_offset=15), '_file', Load(), lineno=606, col_offset=15), 'xreadlines', Load(), lineno=606, col_offset=15), [], [], Name('args', Load(), lineno=606, col_offset=38), None, lineno=606, col_offset=15), lineno=606, col_offset=8)], [], lineno=605, col_offset=4)], [], lineno=486, col_offset=0)])
