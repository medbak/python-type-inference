Module([FunctionDef('FOUR_CHAR_CODE', arguments([Name('x', Param(), lineno=3, col_offset=19)], None, None, []), [Return(Name('x', Load(), lineno=3, col_offset=30), lineno=3, col_offset=23)], [], lineno=3, col_offset=0), Assign([Name('kAppleManufacturer', Store(), lineno=4, col_offset=0)], Call(Name('FOUR_CHAR_CODE', Load(), lineno=4, col_offset=21), [Str('appl', lineno=4, col_offset=36)], [], None, None, lineno=4, col_offset=21), lineno=4, col_offset=0), Assign([Name('kComponentResourceType', Store(), lineno=5, col_offset=0)], Call(Name('FOUR_CHAR_CODE', Load(), lineno=5, col_offset=25), [Str('thng', lineno=5, col_offset=40)], [], None, None, lineno=5, col_offset=25), lineno=5, col_offset=0), Assign([Name('kComponentAliasResourceType', Store(), lineno=6, col_offset=0)], Call(Name('FOUR_CHAR_CODE', Load(), lineno=6, col_offset=30), [Str('thga', lineno=6, col_offset=45)], [], None, None, lineno=6, col_offset=30), lineno=6, col_offset=0), Assign([Name('kAnyComponentType', Store(), lineno=7, col_offset=0)], Num(0, lineno=7, col_offset=20), lineno=7, col_offset=0), Assign([Name('kAnyComponentSubType', Store(), lineno=8, col_offset=0)], Num(0, lineno=8, col_offset=23), lineno=8, col_offset=0), Assign([Name('kAnyComponentManufacturer', Store(), lineno=9, col_offset=0)], Num(0, lineno=9, col_offset=28), lineno=9, col_offset=0), Assign([Name('kAnyComponentFlagsMask', Store(), lineno=10, col_offset=0)], Num(0, lineno=10, col_offset=25), lineno=10, col_offset=0), Assign([Name('cmpIsMissing', Store(), lineno=11, col_offset=0)], BinOp(Num(1L, lineno=11, col_offset=15), LShift(), Num(29, lineno=11, col_offset=21), lineno=11, col_offset=15), lineno=11, col_offset=0), Assign([Name('cmpWantsRegisterMessage', Store(), lineno=12, col_offset=0)], BinOp(Num(1L, lineno=12, col_offset=26), LShift(), Num(31, lineno=12, col_offset=32), lineno=12, col_offset=26), lineno=12, col_offset=0), Assign([Name('kComponentOpenSelect', Store(), lineno=13, col_offset=0)], Num(-1, lineno=13, col_offset=24), lineno=13, col_offset=0), Assign([Name('kComponentCloseSelect', Store(), lineno=14, col_offset=0)], Num(-2, lineno=14, col_offset=25), lineno=14, col_offset=0), Assign([Name('kComponentCanDoSelect', Store(), lineno=15, col_offset=0)], Num(-3, lineno=15, col_offset=25), lineno=15, col_offset=0), Assign([Name('kComponentVersionSelect', Store(), lineno=16, col_offset=0)], Num(-4, lineno=16, col_offset=27), lineno=16, col_offset=0), Assign([Name('kComponentRegisterSelect', Store(), lineno=17, col_offset=0)], Num(-5, lineno=17, col_offset=28), lineno=17, col_offset=0), Assign([Name('kComponentTargetSelect', Store(), lineno=18, col_offset=0)], Num(-6, lineno=18, col_offset=26), lineno=18, col_offset=0), Assign([Name('kComponentUnregisterSelect', Store(), lineno=19, col_offset=0)], Num(-7, lineno=19, col_offset=30), lineno=19, col_offset=0), Assign([Name('kComponentGetMPWorkFunctionSelect', Store(), lineno=20, col_offset=0)], Num(-8, lineno=20, col_offset=37), lineno=20, col_offset=0), Assign([Name('kComponentExecuteWiredActionSelect', Store(), lineno=21, col_offset=0)], Num(-9, lineno=21, col_offset=38), lineno=21, col_offset=0), Assign([Name('kComponentGetPublicResourceSelect', Store(), lineno=22, col_offset=0)], Num(-10, lineno=22, col_offset=37), lineno=22, col_offset=0), Assign([Name('componentDoAutoVersion', Store(), lineno=23, col_offset=0)], BinOp(Num(1, lineno=23, col_offset=26), LShift(), Num(0, lineno=23, col_offset=31), lineno=23, col_offset=26), lineno=23, col_offset=0), Assign([Name('componentWantsUnregister', Store(), lineno=24, col_offset=0)], BinOp(Num(1, lineno=24, col_offset=28), LShift(), Num(1, lineno=24, col_offset=33), lineno=24, col_offset=28), lineno=24, col_offset=0), Assign([Name('componentAutoVersionIncludeFlags', Store(), lineno=25, col_offset=0)], BinOp(Num(1, lineno=25, col_offset=36), LShift(), Num(2, lineno=25, col_offset=41), lineno=25, col_offset=36), lineno=25, col_offset=0), Assign([Name('componentHasMultiplePlatforms', Store(), lineno=26, col_offset=0)], BinOp(Num(1, lineno=26, col_offset=33), LShift(), Num(3, lineno=26, col_offset=38), lineno=26, col_offset=33), lineno=26, col_offset=0), Assign([Name('componentLoadResident', Store(), lineno=27, col_offset=0)], BinOp(Num(1, lineno=27, col_offset=25), LShift(), Num(4, lineno=27, col_offset=30), lineno=27, col_offset=25), lineno=27, col_offset=0), Assign([Name('defaultComponentIdentical', Store(), lineno=28, col_offset=0)], Num(0, lineno=28, col_offset=28), lineno=28, col_offset=0), Assign([Name('defaultComponentAnyFlags', Store(), lineno=29, col_offset=0)], Num(1, lineno=29, col_offset=27), lineno=29, col_offset=0), Assign([Name('defaultComponentAnyManufacturer', Store(), lineno=30, col_offset=0)], Num(2, lineno=30, col_offset=34), lineno=30, col_offset=0), Assign([Name('defaultComponentAnySubType', Store(), lineno=31, col_offset=0)], Num(4, lineno=31, col_offset=29), lineno=31, col_offset=0), Assign([Name('defaultComponentAnyFlagsAnyManufacturer', Store(), lineno=32, col_offset=0)], BinOp(Name('defaultComponentAnyFlags', Load(), lineno=32, col_offset=43), Add(), Name('defaultComponentAnyManufacturer', Load(), lineno=32, col_offset=70), lineno=32, col_offset=43), lineno=32, col_offset=0), Assign([Name('defaultComponentAnyFlagsAnyManufacturerAnySubType', Store(), lineno=33, col_offset=0)], BinOp(BinOp(Name('defaultComponentAnyFlags', Load(), lineno=33, col_offset=53), Add(), Name('defaultComponentAnyManufacturer', Load(), lineno=33, col_offset=80), lineno=33, col_offset=53), Add(), Name('defaultComponentAnySubType', Load(), lineno=33, col_offset=114), lineno=33, col_offset=112), lineno=33, col_offset=0), Assign([Name('registerComponentGlobal', Store(), lineno=34, col_offset=0)], Num(1, lineno=34, col_offset=26), lineno=34, col_offset=0), Assign([Name('registerComponentNoDuplicates', Store(), lineno=35, col_offset=0)], Num(2, lineno=35, col_offset=32), lineno=35, col_offset=0), Assign([Name('registerComponentAfterExisting', Store(), lineno=36, col_offset=0)], Num(4, lineno=36, col_offset=33), lineno=36, col_offset=0), Assign([Name('registerComponentAliasesOnly', Store(), lineno=37, col_offset=0)], Num(8, lineno=37, col_offset=31), lineno=37, col_offset=0), Assign([Name('platform68k', Store(), lineno=38, col_offset=0)], Num(1, lineno=38, col_offset=14), lineno=38, col_offset=0), Assign([Name('platformPowerPC', Store(), lineno=39, col_offset=0)], Num(2, lineno=39, col_offset=18), lineno=39, col_offset=0), Assign([Name('platformInterpreted', Store(), lineno=40, col_offset=0)], Num(3, lineno=40, col_offset=22), lineno=40, col_offset=0), Assign([Name('platformWin32', Store(), lineno=41, col_offset=0)], Num(4, lineno=41, col_offset=16), lineno=41, col_offset=0), Assign([Name('platformPowerPCNativeEntryPoint', Store(), lineno=42, col_offset=0)], Num(5, lineno=42, col_offset=34), lineno=42, col_offset=0), Assign([Name('mpWorkFlagDoWork', Store(), lineno=43, col_offset=0)], BinOp(Num(1, lineno=43, col_offset=20), LShift(), Num(0, lineno=43, col_offset=25), lineno=43, col_offset=20), lineno=43, col_offset=0), Assign([Name('mpWorkFlagDoCompletion', Store(), lineno=44, col_offset=0)], BinOp(Num(1, lineno=44, col_offset=26), LShift(), Num(1, lineno=44, col_offset=31), lineno=44, col_offset=26), lineno=44, col_offset=0), Assign([Name('mpWorkFlagCopyWorkBlock', Store(), lineno=45, col_offset=0)], BinOp(Num(1, lineno=45, col_offset=27), LShift(), Num(2, lineno=45, col_offset=32), lineno=45, col_offset=27), lineno=45, col_offset=0), Assign([Name('mpWorkFlagDontBlock', Store(), lineno=46, col_offset=0)], BinOp(Num(1, lineno=46, col_offset=23), LShift(), Num(3, lineno=46, col_offset=28), lineno=46, col_offset=23), lineno=46, col_offset=0), Assign([Name('mpWorkFlagGetProcessorCount', Store(), lineno=47, col_offset=0)], BinOp(Num(1, lineno=47, col_offset=31), LShift(), Num(4, lineno=47, col_offset=36), lineno=47, col_offset=31), lineno=47, col_offset=0), Assign([Name('mpWorkFlagGetIsRunning', Store(), lineno=48, col_offset=0)], BinOp(Num(1, lineno=48, col_offset=26), LShift(), Num(6, lineno=48, col_offset=31), lineno=48, col_offset=26), lineno=48, col_offset=0), Assign([Name('cmpAliasNoFlags', Store(), lineno=49, col_offset=0)], Num(0, lineno=49, col_offset=18), lineno=49, col_offset=0), Assign([Name('cmpAliasOnlyThisFile', Store(), lineno=50, col_offset=0)], Num(1, lineno=50, col_offset=23), lineno=50, col_offset=0), Assign([Name('uppComponentFunctionImplementedProcInfo', Store(), lineno=51, col_offset=0)], Num(752, lineno=51, col_offset=42), lineno=51, col_offset=0), Assign([Name('uppGetComponentVersionProcInfo', Store(), lineno=52, col_offset=0)], Num(240, lineno=52, col_offset=33), lineno=52, col_offset=0), Assign([Name('uppComponentSetTargetProcInfo', Store(), lineno=53, col_offset=0)], Num(1008, lineno=53, col_offset=32), lineno=53, col_offset=0), Assign([Name('uppCallComponentOpenProcInfo', Store(), lineno=54, col_offset=0)], Num(1008, lineno=54, col_offset=31), lineno=54, col_offset=0), Assign([Name('uppCallComponentCloseProcInfo', Store(), lineno=55, col_offset=0)], Num(1008, lineno=55, col_offset=32), lineno=55, col_offset=0), Assign([Name('uppCallComponentCanDoProcInfo', Store(), lineno=56, col_offset=0)], Num(752, lineno=56, col_offset=32), lineno=56, col_offset=0), Assign([Name('uppCallComponentVersionProcInfo', Store(), lineno=57, col_offset=0)], Num(240, lineno=57, col_offset=34), lineno=57, col_offset=0), Assign([Name('uppCallComponentRegisterProcInfo', Store(), lineno=58, col_offset=0)], Num(240, lineno=58, col_offset=35), lineno=58, col_offset=0), Assign([Name('uppCallComponentTargetProcInfo', Store(), lineno=59, col_offset=0)], Num(1008, lineno=59, col_offset=33), lineno=59, col_offset=0), Assign([Name('uppCallComponentUnregisterProcInfo', Store(), lineno=60, col_offset=0)], Num(240, lineno=60, col_offset=37), lineno=60, col_offset=0), Assign([Name('uppCallComponentGetMPWorkFunctionProcInfo', Store(), lineno=61, col_offset=0)], Num(4080, lineno=61, col_offset=44), lineno=61, col_offset=0), Assign([Name('uppCallComponentGetPublicResourceProcInfo', Store(), lineno=62, col_offset=0)], Num(15344, lineno=62, col_offset=44), lineno=62, col_offset=0)])
