Module([Import([alias('os', None)], lineno=1, col_offset=0), Import([alias('base64', None)], lineno=2, col_offset=0), Import([alias('shutil', None)], lineno=3, col_offset=0), Import([alias('gettext', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), Assign([Name('GNU_MO_DATA', Store(), lineno=16, col_offset=0)], Str('3hIElQAAAAAGAAAAHAAAAEwAAAALAAAAfAAAAAAAAACoAAAAFQAAAKkAAAAjAAAAvwAAAKEAAADj\nAAAABwAAAIUBAAALAAAAjQEAAEUBAACZAQAAFgAAAN8CAAAeAAAA9gIAAKEAAAAVAwAABQAAALcD\nAAAJAAAAvQMAAAEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABQAAAAYAAAACAAAAAFJh\neW1vbmQgTHV4dXJ5IFlhY2gtdABUaGVyZSBpcyAlcyBmaWxlAFRoZXJlIGFyZSAlcyBmaWxlcwBU\naGlzIG1vZHVsZSBwcm92aWRlcyBpbnRlcm5hdGlvbmFsaXphdGlvbiBhbmQgbG9jYWxpemF0aW9u\nCnN1cHBvcnQgZm9yIHlvdXIgUHl0aG9uIHByb2dyYW1zIGJ5IHByb3ZpZGluZyBhbiBpbnRlcmZh\nY2UgdG8gdGhlIEdOVQpnZXR0ZXh0IG1lc3NhZ2UgY2F0YWxvZyBsaWJyYXJ5LgBtdWxsdXNrAG51\nZGdlIG51ZGdlAFByb2plY3QtSWQtVmVyc2lvbjogMi4wClBPLVJldmlzaW9uLURhdGU6IDIwMDAt\nMDgtMjkgMTI6MTktMDQ6MDAKTGFzdC1UcmFuc2xhdG9yOiBKLiBEYXZpZCBJYsOhw7FleiA8ai1k\nYXZpZEBub29zLmZyPgpMYW5ndWFnZS1UZWFtOiBYWCA8cHl0aG9uLWRldkBweXRob24ub3JnPgpN\nSU1FLVZlcnNpb246IDEuMApDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9aXNvLTg4\nNTktMQpDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBub25lCkdlbmVyYXRlZC1CeTogcHlnZXR0\nZXh0LnB5IDEuMQpQbHVyYWwtRm9ybXM6IG5wbHVyYWxzPTI7IHBsdXJhbD1uIT0xOwoAVGhyb2F0\nd29iYmxlciBNYW5ncm92ZQBIYXkgJXMgZmljaGVybwBIYXkgJXMgZmljaGVyb3MAR3V2ZiB6YnFo\neXIgY2ViaXZxcmYgdmFncmVhbmd2YmFueXZtbmd2YmEgbmFxIHlicG55dm1uZ3ZiYQpmaGNjYmVn\nIHNiZSBsYmhlIENsZ3ViYSBjZWJ0ZW56ZiBvbCBjZWJpdnF2YXQgbmEgdmFncmVzbnByIGdiIGd1\nciBUQUgKdHJnZ3JrZyB6cmZmbnRyIHBuZ255YnQgeXZvZW5lbC4AYmFjb24Ad2luayB3aW5rAA==\n', lineno=34, col_offset=-1), lineno=16, col_offset=0), Assign([Name('UMO_DATA', Store(), lineno=36, col_offset=0)], Str('3hIElQAAAAACAAAAHAAAACwAAAAFAAAAPAAAAAAAAABQAAAABAAAAFEAAAAPAQAAVgAAAAQAAABm\nAQAAAQAAAAIAAAAAAAAAAAAAAAAAAAAAYWLDngBQcm9qZWN0LUlkLVZlcnNpb246IDIuMApQTy1S\nZXZpc2lvbi1EYXRlOiAyMDAzLTA0LTExIDEyOjQyLTA0MDAKTGFzdC1UcmFuc2xhdG9yOiBCYXJy\neSBBLiBXQXJzYXcgPGJhcnJ5QHB5dGhvbi5vcmc+Ckxhbmd1YWdlLVRlYW06IFhYIDxweXRob24t\nZGV2QHB5dGhvbi5vcmc+Ck1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFp\nbjsgY2hhcnNldD11dGYtOApDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA3Yml0CkdlbmVyYXRl\nZC1CeTogbWFudWFsbHkKAMKkeXoA\n', lineno=44, col_offset=-1), lineno=36, col_offset=0), Assign([Name('MMO_DATA', Store(), lineno=46, col_offset=0)], Str('3hIElQAAAAABAAAAHAAAACQAAAADAAAALAAAAAAAAAA4AAAAeAEAADkAAAABAAAAAAAAAAAAAAAA\nUHJvamVjdC1JZC1WZXJzaW9uOiBObyBQcm9qZWN0IDAuMApQT1QtQ3JlYXRpb24tRGF0ZTogV2Vk\nIERlYyAxMSAwNzo0NDoxNSAyMDAyClBPLVJldmlzaW9uLURhdGU6IDIwMDItMDgtMTQgMDE6MTg6\nNTgrMDA6MDAKTGFzdC1UcmFuc2xhdG9yOiBKb2huIERvZSA8amRvZUBleGFtcGxlLmNvbT4KSmFu\nZSBGb29iYXIgPGpmb29iYXJAZXhhbXBsZS5jb20+Ckxhbmd1YWdlLVRlYW06IHh4IDx4eEBleGFt\ncGxlLmNvbT4KTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluOyBjaGFy\nc2V0PWlzby04ODU5LTE1CkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IHF1b3RlZC1wcmludGFi\nbGUKR2VuZXJhdGVkLUJ5OiBweWdldHRleHQucHkgMS4zCgA=\n', lineno=55, col_offset=-1), lineno=46, col_offset=0), Assign([Name('LOCALEDIR', Store(), lineno=57, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=57, col_offset=12), 'path', Load(), lineno=57, col_offset=12), 'join', Load(), lineno=57, col_offset=12), [Str('xx', lineno=57, col_offset=25), Str('LC_MESSAGES', lineno=57, col_offset=31)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=0), Assign([Name('MOFILE', Store(), lineno=58, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=58, col_offset=9), 'path', Load(), lineno=58, col_offset=9), 'join', Load(), lineno=58, col_offset=9), [Name('LOCALEDIR', Load(), lineno=58, col_offset=22), Str('gettext.mo', lineno=58, col_offset=33)], [], None, None, lineno=58, col_offset=9), lineno=58, col_offset=0), Assign([Name('UMOFILE', Store(), lineno=59, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=59, col_offset=10), 'path', Load(), lineno=59, col_offset=10), 'join', Load(), lineno=59, col_offset=10), [Name('LOCALEDIR', Load(), lineno=59, col_offset=23), Str('ugettext.mo', lineno=59, col_offset=34)], [], None, None, lineno=59, col_offset=10), lineno=59, col_offset=0), Assign([Name('MMOFILE', Store(), lineno=60, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=60, col_offset=10), 'path', Load(), lineno=60, col_offset=10), 'join', Load(), lineno=60, col_offset=10), [Name('LOCALEDIR', Load(), lineno=60, col_offset=23), Str('metadata.mo', lineno=60, col_offset=34)], [], None, None, lineno=60, col_offset=10), lineno=60, col_offset=0), ClassDef('GettextBaseTest', [Attribute(Name('unittest', Load(), lineno=63, col_offset=22), 'TestCase', Load(), lineno=63, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=64, col_offset=14)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=65, col_offset=15), 'path', Load(), lineno=65, col_offset=15), 'isdir', Load(), lineno=65, col_offset=15), [Name('LOCALEDIR', Load(), lineno=65, col_offset=29)], [], None, None, lineno=65, col_offset=15), lineno=65, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=66, col_offset=12), 'makedirs', Load(), lineno=66, col_offset=12), [Name('LOCALEDIR', Load(), lineno=66, col_offset=24)], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=12)], [], lineno=65, col_offset=8), Assign([Name('fp', Store(), lineno=67, col_offset=8)], Call(Name('open', Load(), lineno=67, col_offset=13), [Name('MOFILE', Load(), lineno=67, col_offset=18), Str('wb', lineno=67, col_offset=26)], [], None, None, lineno=67, col_offset=13), lineno=67, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=68, col_offset=8), 'write', Load(), lineno=68, col_offset=8), [Call(Attribute(Name('base64', Load(), lineno=68, col_offset=17), 'decodestring', Load(), lineno=68, col_offset=17), [Name('GNU_MO_DATA', Load(), lineno=68, col_offset=37)], [], None, None, lineno=68, col_offset=17)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=69, col_offset=8), 'close', Load(), lineno=69, col_offset=8), [], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Name('fp', Store(), lineno=70, col_offset=8)], Call(Name('open', Load(), lineno=70, col_offset=13), [Name('UMOFILE', Load(), lineno=70, col_offset=18), Str('wb', lineno=70, col_offset=27)], [], None, None, lineno=70, col_offset=13), lineno=70, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=71, col_offset=8), 'write', Load(), lineno=71, col_offset=8), [Call(Attribute(Name('base64', Load(), lineno=71, col_offset=17), 'decodestring', Load(), lineno=71, col_offset=17), [Name('UMO_DATA', Load(), lineno=71, col_offset=37)], [], None, None, lineno=71, col_offset=17)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=72, col_offset=8), 'close', Load(), lineno=72, col_offset=8), [], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Assign([Name('fp', Store(), lineno=73, col_offset=8)], Call(Name('open', Load(), lineno=73, col_offset=13), [Name('MMOFILE', Load(), lineno=73, col_offset=18), Str('wb', lineno=73, col_offset=27)], [], None, None, lineno=73, col_offset=13), lineno=73, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=74, col_offset=8), 'write', Load(), lineno=74, col_offset=8), [Call(Attribute(Name('base64', Load(), lineno=74, col_offset=17), 'decodestring', Load(), lineno=74, col_offset=17), [Name('MMO_DATA', Load(), lineno=74, col_offset=37)], [], None, None, lineno=74, col_offset=17)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=75, col_offset=8), 'close', Load(), lineno=75, col_offset=8), [], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), 'env', Store(), lineno=76, col_offset=8)], Call(Attribute(Name('test_support', Load(), lineno=76, col_offset=19), 'EnvironmentVarGuard', Load(), lineno=76, col_offset=19), [], [], None, None, lineno=76, col_offset=19), lineno=76, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'env', Load(), lineno=77, col_offset=8), Index(Str('LANGUAGE', lineno=77, col_offset=17)), Store(), lineno=77, col_offset=8)], Str('xx', lineno=77, col_offset=31), lineno=77, col_offset=8), Expr(Call(Attribute(Attribute(Name('gettext', Load(), lineno=78, col_offset=8), '_translations', Load(), lineno=78, col_offset=8), 'clear', Load(), lineno=78, col_offset=8), [], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=80, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'env', Load(), lineno=81, col_offset=8), '__exit__', Load(), lineno=81, col_offset=8), [], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Delete([Attribute(Name('self', Load(), lineno=82, col_offset=12), 'env', Del(), lineno=82, col_offset=12)], lineno=82, col_offset=8), Expr(Call(Attribute(Name('shutil', Load(), lineno=83, col_offset=8), 'rmtree', Load(), lineno=83, col_offset=8), [Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=83, col_offset=22), 'path', Load(), lineno=83, col_offset=22), 'split', Load(), lineno=83, col_offset=22), [Name('LOCALEDIR', Load(), lineno=83, col_offset=36)], [], None, None, lineno=83, col_offset=22), Index(Num(0, lineno=83, col_offset=47)), Load(), lineno=83, col_offset=22)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=80, col_offset=4)], [], lineno=63, col_offset=0), ClassDef('GettextTestCase1', [Name('GettextBaseTest', Load(), lineno=86, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=87, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('GettextBaseTest', Load(), lineno=88, col_offset=8), 'setUp', Load(), lineno=88, col_offset=8), [Name('self', Load(), lineno=88, col_offset=30)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=8), 'localedir', Store(), lineno=89, col_offset=8)], Attribute(Name('os', Load(), lineno=89, col_offset=25), 'curdir', Load(), lineno=89, col_offset=25), lineno=89, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), 'mofile', Store(), lineno=90, col_offset=8)], Name('MOFILE', Load(), lineno=90, col_offset=22), lineno=90, col_offset=8), Expr(Call(Attribute(Name('gettext', Load(), lineno=91, col_offset=8), 'install', Load(), lineno=91, col_offset=8), [Str('gettext', lineno=91, col_offset=24), Attribute(Name('self', Load(), lineno=91, col_offset=35), 'localedir', Load(), lineno=91, col_offset=35)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('test_some_translations', arguments([Name('self', Param(), lineno=93, col_offset=31)], None, None, []), [Assign([Name('eq', Store(), lineno=94, col_offset=8)], Attribute(Name('self', Load(), lineno=94, col_offset=13), 'assertEqual', Load(), lineno=94, col_offset=13), lineno=94, col_offset=8), Expr(Call(Name('eq', Load(), lineno=96, col_offset=8), [Call(Name('_', Load(), lineno=96, col_offset=11), [Str('albatross', lineno=96, col_offset=13)], [], None, None, lineno=96, col_offset=11), Str('albatross', lineno=96, col_offset=27)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Expr(Call(Name('eq', Load(), lineno=97, col_offset=8), [Call(Name('_', Load(), lineno=97, col_offset=11), [Str(u'mullusk', lineno=97, col_offset=13)], [], None, None, lineno=97, col_offset=11), Str('bacon', lineno=97, col_offset=26)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Expr(Call(Name('eq', Load(), lineno=98, col_offset=8), [Call(Name('_', Load(), lineno=98, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=98, col_offset=13)], [], None, None, lineno=98, col_offset=11), Str('Throatwobbler Mangrove', lineno=98, col_offset=40)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Name('eq', Load(), lineno=99, col_offset=8), [Call(Name('_', Load(), lineno=99, col_offset=11), [Str(u'nudge nudge', lineno=99, col_offset=13)], [], None, None, lineno=99, col_offset=11), Str('wink wink', lineno=99, col_offset=31)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('test_double_quotes', arguments([Name('self', Param(), lineno=101, col_offset=27)], None, None, []), [Assign([Name('eq', Store(), lineno=102, col_offset=8)], Attribute(Name('self', Load(), lineno=102, col_offset=13), 'assertEqual', Load(), lineno=102, col_offset=13), lineno=102, col_offset=8), Expr(Call(Name('eq', Load(), lineno=104, col_offset=8), [Call(Name('_', Load(), lineno=104, col_offset=11), [Str('albatross', lineno=104, col_offset=13)], [], None, None, lineno=104, col_offset=11), Str('albatross', lineno=104, col_offset=27)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Name('eq', Load(), lineno=105, col_offset=8), [Call(Name('_', Load(), lineno=105, col_offset=11), [Str(u'mullusk', lineno=105, col_offset=13)], [], None, None, lineno=105, col_offset=11), Str('bacon', lineno=105, col_offset=26)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), Expr(Call(Name('eq', Load(), lineno=106, col_offset=8), [Call(Name('_', Load(), lineno=106, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=106, col_offset=13)], [], None, None, lineno=106, col_offset=11), Str('Throatwobbler Mangrove', lineno=106, col_offset=40)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), Expr(Call(Name('eq', Load(), lineno=107, col_offset=8), [Call(Name('_', Load(), lineno=107, col_offset=11), [Str(u'nudge nudge', lineno=107, col_offset=13)], [], None, None, lineno=107, col_offset=11), Str('wink wink', lineno=107, col_offset=31)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('test_triple_single_quotes', arguments([Name('self', Param(), lineno=109, col_offset=34)], None, None, []), [Assign([Name('eq', Store(), lineno=110, col_offset=8)], Attribute(Name('self', Load(), lineno=110, col_offset=13), 'assertEqual', Load(), lineno=110, col_offset=13), lineno=110, col_offset=8), Expr(Call(Name('eq', Load(), lineno=112, col_offset=8), [Call(Name('_', Load(), lineno=112, col_offset=11), [Str('albatross', lineno=112, col_offset=13)], [], None, None, lineno=112, col_offset=11), Str('albatross', lineno=112, col_offset=31)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Name('eq', Load(), lineno=113, col_offset=8), [Call(Name('_', Load(), lineno=113, col_offset=11), [Str(u'mullusk', lineno=113, col_offset=13)], [], None, None, lineno=113, col_offset=11), Str('bacon', lineno=113, col_offset=30)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Name('eq', Load(), lineno=114, col_offset=8), [Call(Name('_', Load(), lineno=114, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=114, col_offset=13)], [], None, None, lineno=114, col_offset=11), Str('Throatwobbler Mangrove', lineno=114, col_offset=44)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Name('eq', Load(), lineno=115, col_offset=8), [Call(Name('_', Load(), lineno=115, col_offset=11), [Str(u'nudge nudge', lineno=115, col_offset=13)], [], None, None, lineno=115, col_offset=11), Str('wink wink', lineno=115, col_offset=35)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8)], [], lineno=109, col_offset=4), FunctionDef('test_triple_double_quotes', arguments([Name('self', Param(), lineno=117, col_offset=34)], None, None, []), [Assign([Name('eq', Store(), lineno=118, col_offset=8)], Attribute(Name('self', Load(), lineno=118, col_offset=13), 'assertEqual', Load(), lineno=118, col_offset=13), lineno=118, col_offset=8), Expr(Call(Name('eq', Load(), lineno=120, col_offset=8), [Call(Name('_', Load(), lineno=120, col_offset=11), [Str('albatross', lineno=120, col_offset=13)], [], None, None, lineno=120, col_offset=11), Str('albatross', lineno=120, col_offset=31)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8), Expr(Call(Name('eq', Load(), lineno=121, col_offset=8), [Call(Name('_', Load(), lineno=121, col_offset=11), [Str(u'mullusk', lineno=121, col_offset=13)], [], None, None, lineno=121, col_offset=11), Str('bacon', lineno=121, col_offset=30)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), Expr(Call(Name('eq', Load(), lineno=122, col_offset=8), [Call(Name('_', Load(), lineno=122, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=122, col_offset=13)], [], None, None, lineno=122, col_offset=11), Str('Throatwobbler Mangrove', lineno=122, col_offset=44)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Expr(Call(Name('eq', Load(), lineno=123, col_offset=8), [Call(Name('_', Load(), lineno=123, col_offset=11), [Str(u'nudge nudge', lineno=123, col_offset=13)], [], None, None, lineno=123, col_offset=11), Str('wink wink', lineno=123, col_offset=35)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=117, col_offset=4), FunctionDef('test_multiline_strings', arguments([Name('self', Param(), lineno=125, col_offset=31)], None, None, []), [Assign([Name('eq', Store(), lineno=126, col_offset=8)], Attribute(Name('self', Load(), lineno=126, col_offset=13), 'assertEqual', Load(), lineno=126, col_offset=13), lineno=126, col_offset=8), Expr(Call(Name('eq', Load(), lineno=128, col_offset=8), [Call(Name('_', Load(), lineno=128, col_offset=11), [Str('This module provides internationalization and localization\nsupport for your Python programs by providing an interface to the GNU\ngettext message catalog library.', lineno=130, col_offset=-1)], [], None, None, lineno=128, col_offset=11), Str('Guvf zbqhyr cebivqrf vagreangvbanyvmngvba naq ybpnyvmngvba\nfhccbeg sbe lbhe Clguba cebtenzf ol cebivqvat na vagresnpr gb gur TAH\ntrggrkg zrffntr pngnybt yvoenel.', lineno=133, col_offset=-1)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('test_the_alternative_interface', arguments([Name('self', Param(), lineno=135, col_offset=39)], None, None, []), [Assign([Name('eq', Store(), lineno=136, col_offset=8)], Attribute(Name('self', Load(), lineno=136, col_offset=13), 'assertEqual', Load(), lineno=136, col_offset=13), lineno=136, col_offset=8), Assign([Name('fp', Store(), lineno=138, col_offset=8)], Call(Name('open', Load(), lineno=138, col_offset=13), [Attribute(Name('self', Load(), lineno=138, col_offset=18), 'mofile', Load(), lineno=138, col_offset=18), Str('rb', lineno=138, col_offset=31)], [], None, None, lineno=138, col_offset=13), lineno=138, col_offset=8), Assign([Name('t', Store(), lineno=139, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=139, col_offset=12), 'GNUTranslations', Load(), lineno=139, col_offset=12), [Name('fp', Load(), lineno=139, col_offset=36)], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=140, col_offset=8), 'close', Load(), lineno=140, col_offset=8), [], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Expr(Call(Attribute(Name('t', Load(), lineno=142, col_offset=8), 'install', Load(), lineno=142, col_offset=8), [], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8), Expr(Call(Name('eq', Load(), lineno=143, col_offset=8), [Call(Name('_', Load(), lineno=143, col_offset=11), [Str('nudge nudge', lineno=143, col_offset=13)], [], None, None, lineno=143, col_offset=11), Str('wink wink', lineno=143, col_offset=29)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('t', Load(), lineno=145, col_offset=8), 'install', Load(), lineno=145, col_offset=8), [], [keyword('unicode', Name('True', Load(), lineno=145, col_offset=26))], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Expr(Call(Name('eq', Load(), lineno=146, col_offset=8), [Call(Name('_', Load(), lineno=146, col_offset=11), [Str('mullusk', lineno=146, col_offset=13)], [], None, None, lineno=146, col_offset=11), Str('bacon', lineno=146, col_offset=25)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8), Import([alias('__builtin__', None)], lineno=148, col_offset=8), Expr(Call(Attribute(Name('t', Load(), lineno=149, col_offset=8), 'install', Load(), lineno=149, col_offset=8), [], [keyword('unicode', Name('True', Load(), lineno=149, col_offset=26)), keyword('names', List([Str('gettext', lineno=149, col_offset=39), Str('lgettext', lineno=149, col_offset=50)], Load(), lineno=149, col_offset=38))], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Name('eq', Load(), lineno=150, col_offset=8), [Name('_', Load(), lineno=150, col_offset=11), Attribute(Name('t', Load(), lineno=150, col_offset=14), 'ugettext', Load(), lineno=150, col_offset=14)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Name('eq', Load(), lineno=151, col_offset=8), [Attribute(Name('__builtin__', Load(), lineno=151, col_offset=11), 'gettext', Load(), lineno=151, col_offset=11), Attribute(Name('t', Load(), lineno=151, col_offset=32), 'ugettext', Load(), lineno=151, col_offset=32)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Name('eq', Load(), lineno=152, col_offset=8), [Name('lgettext', Load(), lineno=152, col_offset=11), Attribute(Name('t', Load(), lineno=152, col_offset=21), 'lgettext', Load(), lineno=152, col_offset=21)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Delete([Attribute(Name('__builtin__', Load(), lineno=153, col_offset=12), 'gettext', Del(), lineno=153, col_offset=12)], lineno=153, col_offset=8), Delete([Attribute(Name('__builtin__', Load(), lineno=154, col_offset=12), 'lgettext', Del(), lineno=154, col_offset=12)], lineno=154, col_offset=8)], [], lineno=135, col_offset=4)], [], lineno=86, col_offset=0), ClassDef('GettextTestCase2', [Name('GettextBaseTest', Load(), lineno=157, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=158, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('GettextBaseTest', Load(), lineno=159, col_offset=8), 'setUp', Load(), lineno=159, col_offset=8), [Name('self', Load(), lineno=159, col_offset=30)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=160, col_offset=8), 'localedir', Store(), lineno=160, col_offset=8)], Attribute(Name('os', Load(), lineno=160, col_offset=25), 'curdir', Load(), lineno=160, col_offset=25), lineno=160, col_offset=8), Expr(Call(Attribute(Name('gettext', Load(), lineno=162, col_offset=8), 'bindtextdomain', Load(), lineno=162, col_offset=8), [Str('gettext', lineno=162, col_offset=31), Attribute(Name('self', Load(), lineno=162, col_offset=42), 'localedir', Load(), lineno=162, col_offset=42)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Attribute(Name('gettext', Load(), lineno=163, col_offset=8), 'textdomain', Load(), lineno=163, col_offset=8), [Str('gettext', lineno=163, col_offset=27)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=165, col_offset=8), '_', Store(), lineno=165, col_offset=8)], Attribute(Name('gettext', Load(), lineno=165, col_offset=17), 'gettext', Load(), lineno=165, col_offset=17), lineno=165, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('test_bindtextdomain', arguments([Name('self', Param(), lineno=167, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'assertEqual', Load(), lineno=168, col_offset=8), [Call(Attribute(Name('gettext', Load(), lineno=168, col_offset=25), 'bindtextdomain', Load(), lineno=168, col_offset=25), [Str('gettext', lineno=168, col_offset=48)], [], None, None, lineno=168, col_offset=25), Attribute(Name('self', Load(), lineno=168, col_offset=60), 'localedir', Load(), lineno=168, col_offset=60)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8)], [], lineno=167, col_offset=4), FunctionDef('test_textdomain', arguments([Name('self', Param(), lineno=170, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertEqual', Load(), lineno=171, col_offset=8), [Call(Attribute(Name('gettext', Load(), lineno=171, col_offset=25), 'textdomain', Load(), lineno=171, col_offset=25), [], [], None, None, lineno=171, col_offset=25), Str('gettext', lineno=171, col_offset=47)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('test_some_translations', arguments([Name('self', Param(), lineno=173, col_offset=31)], None, None, []), [Assign([Name('eq', Store(), lineno=174, col_offset=8)], Attribute(Name('self', Load(), lineno=174, col_offset=13), 'assertEqual', Load(), lineno=174, col_offset=13), lineno=174, col_offset=8), Expr(Call(Name('eq', Load(), lineno=176, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=176, col_offset=11), '_', Load(), lineno=176, col_offset=11), [Str('albatross', lineno=176, col_offset=18)], [], None, None, lineno=176, col_offset=11), Str('albatross', lineno=176, col_offset=32)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Name('eq', Load(), lineno=177, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=177, col_offset=11), '_', Load(), lineno=177, col_offset=11), [Str(u'mullusk', lineno=177, col_offset=18)], [], None, None, lineno=177, col_offset=11), Str('bacon', lineno=177, col_offset=31)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Name('eq', Load(), lineno=178, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=178, col_offset=11), '_', Load(), lineno=178, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=178, col_offset=18)], [], None, None, lineno=178, col_offset=11), Str('Throatwobbler Mangrove', lineno=178, col_offset=45)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Name('eq', Load(), lineno=179, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=179, col_offset=11), '_', Load(), lineno=179, col_offset=11), [Str(u'nudge nudge', lineno=179, col_offset=18)], [], None, None, lineno=179, col_offset=11), Str('wink wink', lineno=179, col_offset=36)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('test_double_quotes', arguments([Name('self', Param(), lineno=181, col_offset=27)], None, None, []), [Assign([Name('eq', Store(), lineno=182, col_offset=8)], Attribute(Name('self', Load(), lineno=182, col_offset=13), 'assertEqual', Load(), lineno=182, col_offset=13), lineno=182, col_offset=8), Expr(Call(Name('eq', Load(), lineno=184, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=184, col_offset=11), '_', Load(), lineno=184, col_offset=11), [Str('albatross', lineno=184, col_offset=18)], [], None, None, lineno=184, col_offset=11), Str('albatross', lineno=184, col_offset=32)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Name('eq', Load(), lineno=185, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=185, col_offset=11), '_', Load(), lineno=185, col_offset=11), [Str(u'mullusk', lineno=185, col_offset=18)], [], None, None, lineno=185, col_offset=11), Str('bacon', lineno=185, col_offset=31)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8), Expr(Call(Name('eq', Load(), lineno=186, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=186, col_offset=11), '_', Load(), lineno=186, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=186, col_offset=18)], [], None, None, lineno=186, col_offset=11), Str('Throatwobbler Mangrove', lineno=186, col_offset=45)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Name('eq', Load(), lineno=187, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=187, col_offset=11), '_', Load(), lineno=187, col_offset=11), [Str(u'nudge nudge', lineno=187, col_offset=18)], [], None, None, lineno=187, col_offset=11), Str('wink wink', lineno=187, col_offset=36)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_triple_single_quotes', arguments([Name('self', Param(), lineno=189, col_offset=34)], None, None, []), [Assign([Name('eq', Store(), lineno=190, col_offset=8)], Attribute(Name('self', Load(), lineno=190, col_offset=13), 'assertEqual', Load(), lineno=190, col_offset=13), lineno=190, col_offset=8), Expr(Call(Name('eq', Load(), lineno=192, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=192, col_offset=11), '_', Load(), lineno=192, col_offset=11), [Str('albatross', lineno=192, col_offset=18)], [], None, None, lineno=192, col_offset=11), Str('albatross', lineno=192, col_offset=36)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Name('eq', Load(), lineno=193, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=193, col_offset=11), '_', Load(), lineno=193, col_offset=11), [Str(u'mullusk', lineno=193, col_offset=18)], [], None, None, lineno=193, col_offset=11), Str('bacon', lineno=193, col_offset=35)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Name('eq', Load(), lineno=194, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=194, col_offset=11), '_', Load(), lineno=194, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=194, col_offset=18)], [], None, None, lineno=194, col_offset=11), Str('Throatwobbler Mangrove', lineno=194, col_offset=49)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Name('eq', Load(), lineno=195, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=195, col_offset=11), '_', Load(), lineno=195, col_offset=11), [Str(u'nudge nudge', lineno=195, col_offset=18)], [], None, None, lineno=195, col_offset=11), Str('wink wink', lineno=195, col_offset=40)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('test_triple_double_quotes', arguments([Name('self', Param(), lineno=197, col_offset=34)], None, None, []), [Assign([Name('eq', Store(), lineno=198, col_offset=8)], Attribute(Name('self', Load(), lineno=198, col_offset=13), 'assertEqual', Load(), lineno=198, col_offset=13), lineno=198, col_offset=8), Expr(Call(Name('eq', Load(), lineno=200, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=200, col_offset=11), '_', Load(), lineno=200, col_offset=11), [Str('albatross', lineno=200, col_offset=18)], [], None, None, lineno=200, col_offset=11), Str('albatross', lineno=200, col_offset=36)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Name('eq', Load(), lineno=201, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=201, col_offset=11), '_', Load(), lineno=201, col_offset=11), [Str(u'mullusk', lineno=201, col_offset=18)], [], None, None, lineno=201, col_offset=11), Str('bacon', lineno=201, col_offset=35)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Name('eq', Load(), lineno=202, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=202, col_offset=11), '_', Load(), lineno=202, col_offset=11), [Str('Raymond Luxury Yach-t', lineno=202, col_offset=18)], [], None, None, lineno=202, col_offset=11), Str('Throatwobbler Mangrove', lineno=202, col_offset=49)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Name('eq', Load(), lineno=203, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=203, col_offset=11), '_', Load(), lineno=203, col_offset=11), [Str(u'nudge nudge', lineno=203, col_offset=18)], [], None, None, lineno=203, col_offset=11), Str('wink wink', lineno=203, col_offset=40)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('test_multiline_strings', arguments([Name('self', Param(), lineno=205, col_offset=31)], None, None, []), [Assign([Name('eq', Store(), lineno=206, col_offset=8)], Attribute(Name('self', Load(), lineno=206, col_offset=13), 'assertEqual', Load(), lineno=206, col_offset=13), lineno=206, col_offset=8), Expr(Call(Name('eq', Load(), lineno=208, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=208, col_offset=11), '_', Load(), lineno=208, col_offset=11), [Str('This module provides internationalization and localization\nsupport for your Python programs by providing an interface to the GNU\ngettext message catalog library.', lineno=210, col_offset=-1)], [], None, None, lineno=208, col_offset=11), Str('Guvf zbqhyr cebivqrf vagreangvbanyvmngvba naq ybpnyvmngvba\nfhccbeg sbe lbhe Clguba cebtenzf ol cebivqvat na vagresnpr gb gur TAH\ntrggrkg zrffntr pngnybt yvoenel.', lineno=213, col_offset=-1)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=205, col_offset=4)], [], lineno=157, col_offset=0), ClassDef('PluralFormsTestCase', [Name('GettextBaseTest', Load(), lineno=216, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=217, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('GettextBaseTest', Load(), lineno=218, col_offset=8), 'setUp', Load(), lineno=218, col_offset=8), [Name('self', Load(), lineno=218, col_offset=30)], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), 'mofile', Store(), lineno=219, col_offset=8)], Name('MOFILE', Load(), lineno=219, col_offset=22), lineno=219, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('test_plural_forms1', arguments([Name('self', Param(), lineno=221, col_offset=27)], None, None, []), [Assign([Name('eq', Store(), lineno=222, col_offset=8)], Attribute(Name('self', Load(), lineno=222, col_offset=13), 'assertEqual', Load(), lineno=222, col_offset=13), lineno=222, col_offset=8), Assign([Name('x', Store(), lineno=223, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=223, col_offset=12), 'ngettext', Load(), lineno=223, col_offset=12), [Str('There is %s file', lineno=223, col_offset=29), Str('There are %s files', lineno=223, col_offset=49), Num(1, lineno=223, col_offset=71)], [], None, None, lineno=223, col_offset=12), lineno=223, col_offset=8), Expr(Call(Name('eq', Load(), lineno=224, col_offset=8), [Name('x', Load(), lineno=224, col_offset=11), Str('Hay %s fichero', lineno=224, col_offset=14)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Assign([Name('x', Store(), lineno=225, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=225, col_offset=12), 'ngettext', Load(), lineno=225, col_offset=12), [Str('There is %s file', lineno=225, col_offset=29), Str('There are %s files', lineno=225, col_offset=49), Num(2, lineno=225, col_offset=71)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=8), Expr(Call(Name('eq', Load(), lineno=226, col_offset=8), [Name('x', Load(), lineno=226, col_offset=11), Str('Hay %s ficheros', lineno=226, col_offset=14)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('test_plural_forms2', arguments([Name('self', Param(), lineno=228, col_offset=27)], None, None, []), [Assign([Name('eq', Store(), lineno=229, col_offset=8)], Attribute(Name('self', Load(), lineno=229, col_offset=13), 'assertEqual', Load(), lineno=229, col_offset=13), lineno=229, col_offset=8), Assign([Name('fp', Store(), lineno=230, col_offset=8)], Call(Name('open', Load(), lineno=230, col_offset=13), [Attribute(Name('self', Load(), lineno=230, col_offset=18), 'mofile', Load(), lineno=230, col_offset=18), Str('rb', lineno=230, col_offset=31)], [], None, None, lineno=230, col_offset=13), lineno=230, col_offset=8), Assign([Name('t', Store(), lineno=231, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=231, col_offset=12), 'GNUTranslations', Load(), lineno=231, col_offset=12), [Name('fp', Load(), lineno=231, col_offset=36)], [], None, None, lineno=231, col_offset=12), lineno=231, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=232, col_offset=8), 'close', Load(), lineno=232, col_offset=8), [], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Assign([Name('x', Store(), lineno=233, col_offset=8)], Call(Attribute(Name('t', Load(), lineno=233, col_offset=12), 'ngettext', Load(), lineno=233, col_offset=12), [Str('There is %s file', lineno=233, col_offset=23), Str('There are %s files', lineno=233, col_offset=43), Num(1, lineno=233, col_offset=65)], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=8), Expr(Call(Name('eq', Load(), lineno=234, col_offset=8), [Name('x', Load(), lineno=234, col_offset=11), Str('Hay %s fichero', lineno=234, col_offset=14)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Assign([Name('x', Store(), lineno=235, col_offset=8)], Call(Attribute(Name('t', Load(), lineno=235, col_offset=12), 'ngettext', Load(), lineno=235, col_offset=12), [Str('There is %s file', lineno=235, col_offset=23), Str('There are %s files', lineno=235, col_offset=43), Num(2, lineno=235, col_offset=65)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=8), Expr(Call(Name('eq', Load(), lineno=236, col_offset=8), [Name('x', Load(), lineno=236, col_offset=11), Str('Hay %s ficheros', lineno=236, col_offset=14)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('test_hu', arguments([Name('self', Param(), lineno=238, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=239, col_offset=8)], Attribute(Name('self', Load(), lineno=239, col_offset=13), 'assertEqual', Load(), lineno=239, col_offset=13), lineno=239, col_offset=8), Assign([Name('f', Store(), lineno=240, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=240, col_offset=12), 'c2py', Load(), lineno=240, col_offset=12), [Str('0', lineno=240, col_offset=25)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=8), Assign([Name('s', Store(), lineno=241, col_offset=8)], Call(Attribute(Str('', lineno=241, col_offset=12), 'join', Load(), lineno=241, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=241, col_offset=22), [Call(Name('f', Load(), lineno=241, col_offset=26), [Name('x', Load(), lineno=241, col_offset=28)], [], None, None, lineno=241, col_offset=26)], [], None, None, lineno=241, col_offset=22), [comprehension(Name('x', Store(), lineno=241, col_offset=36), Call(Name('range', Load(), lineno=241, col_offset=41), [Num(200, lineno=241, col_offset=47)], [], None, None, lineno=241, col_offset=41), [])], lineno=241, col_offset=22)], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=8), Expr(Call(Name('eq', Load(), lineno=242, col_offset=8), [Name('s', Load(), lineno=242, col_offset=11), Str('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', lineno=242, col_offset=14)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8)], [], lineno=238, col_offset=4), FunctionDef('test_de', arguments([Name('self', Param(), lineno=244, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=245, col_offset=8)], Attribute(Name('self', Load(), lineno=245, col_offset=13), 'assertEqual', Load(), lineno=245, col_offset=13), lineno=245, col_offset=8), Assign([Name('f', Store(), lineno=246, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=246, col_offset=12), 'c2py', Load(), lineno=246, col_offset=12), [Str('n != 1', lineno=246, col_offset=25)], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=8), Assign([Name('s', Store(), lineno=247, col_offset=8)], Call(Attribute(Str('', lineno=247, col_offset=12), 'join', Load(), lineno=247, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=247, col_offset=22), [Call(Name('f', Load(), lineno=247, col_offset=26), [Name('x', Load(), lineno=247, col_offset=28)], [], None, None, lineno=247, col_offset=26)], [], None, None, lineno=247, col_offset=22), [comprehension(Name('x', Store(), lineno=247, col_offset=36), Call(Name('range', Load(), lineno=247, col_offset=41), [Num(200, lineno=247, col_offset=47)], [], None, None, lineno=247, col_offset=41), [])], lineno=247, col_offset=22)], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=8), Expr(Call(Name('eq', Load(), lineno=248, col_offset=8), [Name('s', Load(), lineno=248, col_offset=11), Str('10111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', lineno=248, col_offset=14)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8)], [], lineno=244, col_offset=4), FunctionDef('test_fr', arguments([Name('self', Param(), lineno=250, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=251, col_offset=8)], Attribute(Name('self', Load(), lineno=251, col_offset=13), 'assertEqual', Load(), lineno=251, col_offset=13), lineno=251, col_offset=8), Assign([Name('f', Store(), lineno=252, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=252, col_offset=12), 'c2py', Load(), lineno=252, col_offset=12), [Str('n>1', lineno=252, col_offset=25)], [], None, None, lineno=252, col_offset=12), lineno=252, col_offset=8), Assign([Name('s', Store(), lineno=253, col_offset=8)], Call(Attribute(Str('', lineno=253, col_offset=12), 'join', Load(), lineno=253, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=253, col_offset=22), [Call(Name('f', Load(), lineno=253, col_offset=26), [Name('x', Load(), lineno=253, col_offset=28)], [], None, None, lineno=253, col_offset=26)], [], None, None, lineno=253, col_offset=22), [comprehension(Name('x', Store(), lineno=253, col_offset=36), Call(Name('range', Load(), lineno=253, col_offset=41), [Num(200, lineno=253, col_offset=47)], [], None, None, lineno=253, col_offset=41), [])], lineno=253, col_offset=22)], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=8), Expr(Call(Name('eq', Load(), lineno=254, col_offset=8), [Name('s', Load(), lineno=254, col_offset=11), Str('00111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111', lineno=254, col_offset=14)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('test_gd', arguments([Name('self', Param(), lineno=256, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=257, col_offset=8)], Attribute(Name('self', Load(), lineno=257, col_offset=13), 'assertEqual', Load(), lineno=257, col_offset=13), lineno=257, col_offset=8), Assign([Name('f', Store(), lineno=258, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=258, col_offset=12), 'c2py', Load(), lineno=258, col_offset=12), [Str('n==1 ? 0 : n==2 ? 1 : 2', lineno=258, col_offset=25)], [], None, None, lineno=258, col_offset=12), lineno=258, col_offset=8), Assign([Name('s', Store(), lineno=259, col_offset=8)], Call(Attribute(Str('', lineno=259, col_offset=12), 'join', Load(), lineno=259, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=259, col_offset=22), [Call(Name('f', Load(), lineno=259, col_offset=26), [Name('x', Load(), lineno=259, col_offset=28)], [], None, None, lineno=259, col_offset=26)], [], None, None, lineno=259, col_offset=22), [comprehension(Name('x', Store(), lineno=259, col_offset=36), Call(Name('range', Load(), lineno=259, col_offset=41), [Num(200, lineno=259, col_offset=47)], [], None, None, lineno=259, col_offset=41), [])], lineno=259, col_offset=22)], [], None, None, lineno=259, col_offset=12), lineno=259, col_offset=8), Expr(Call(Name('eq', Load(), lineno=260, col_offset=8), [Name('s', Load(), lineno=260, col_offset=11), Str('20122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222', lineno=260, col_offset=14)], [], None, None, lineno=260, col_offset=8), lineno=260, col_offset=8)], [], lineno=256, col_offset=4), FunctionDef('test_gd2', arguments([Name('self', Param(), lineno=262, col_offset=17)], None, None, []), [Assign([Name('eq', Store(), lineno=263, col_offset=8)], Attribute(Name('self', Load(), lineno=263, col_offset=13), 'assertEqual', Load(), lineno=263, col_offset=13), lineno=263, col_offset=8), Assign([Name('f', Store(), lineno=265, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=265, col_offset=12), 'c2py', Load(), lineno=265, col_offset=12), [Str('n==1 ? 0 : (n==2 ? 1 : 2)', lineno=265, col_offset=25)], [], None, None, lineno=265, col_offset=12), lineno=265, col_offset=8), Assign([Name('s', Store(), lineno=266, col_offset=8)], Call(Attribute(Str('', lineno=266, col_offset=12), 'join', Load(), lineno=266, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=266, col_offset=22), [Call(Name('f', Load(), lineno=266, col_offset=26), [Name('x', Load(), lineno=266, col_offset=28)], [], None, None, lineno=266, col_offset=26)], [], None, None, lineno=266, col_offset=22), [comprehension(Name('x', Store(), lineno=266, col_offset=36), Call(Name('range', Load(), lineno=266, col_offset=41), [Num(200, lineno=266, col_offset=47)], [], None, None, lineno=266, col_offset=41), [])], lineno=266, col_offset=22)], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=8), Expr(Call(Name('eq', Load(), lineno=267, col_offset=8), [Name('s', Load(), lineno=267, col_offset=11), Str('20122222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222', lineno=267, col_offset=14)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8)], [], lineno=262, col_offset=4), FunctionDef('test_lt', arguments([Name('self', Param(), lineno=269, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=270, col_offset=8)], Attribute(Name('self', Load(), lineno=270, col_offset=13), 'assertEqual', Load(), lineno=270, col_offset=13), lineno=270, col_offset=8), Assign([Name('f', Store(), lineno=271, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=271, col_offset=12), 'c2py', Load(), lineno=271, col_offset=12), [Str('n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2', lineno=271, col_offset=25)], [], None, None, lineno=271, col_offset=12), lineno=271, col_offset=8), Assign([Name('s', Store(), lineno=272, col_offset=8)], Call(Attribute(Str('', lineno=272, col_offset=12), 'join', Load(), lineno=272, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=272, col_offset=22), [Call(Name('f', Load(), lineno=272, col_offset=26), [Name('x', Load(), lineno=272, col_offset=28)], [], None, None, lineno=272, col_offset=26)], [], None, None, lineno=272, col_offset=22), [comprehension(Name('x', Store(), lineno=272, col_offset=36), Call(Name('range', Load(), lineno=272, col_offset=41), [Num(200, lineno=272, col_offset=47)], [], None, None, lineno=272, col_offset=41), [])], lineno=272, col_offset=22)], [], None, None, lineno=272, col_offset=12), lineno=272, col_offset=8), Expr(Call(Name('eq', Load(), lineno=273, col_offset=8), [Name('s', Load(), lineno=273, col_offset=11), Str('20111111112222222222201111111120111111112011111111201111111120111111112011111111201111111120111111112011111111222222222220111111112011111111201111111120111111112011111111201111111120111111112011111111', lineno=273, col_offset=14)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=269, col_offset=4), FunctionDef('test_ru', arguments([Name('self', Param(), lineno=275, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=276, col_offset=8)], Attribute(Name('self', Load(), lineno=276, col_offset=13), 'assertEqual', Load(), lineno=276, col_offset=13), lineno=276, col_offset=8), Assign([Name('f', Store(), lineno=277, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=277, col_offset=12), 'c2py', Load(), lineno=277, col_offset=12), [Str('n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2', lineno=277, col_offset=25)], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=8), Assign([Name('s', Store(), lineno=278, col_offset=8)], Call(Attribute(Str('', lineno=278, col_offset=12), 'join', Load(), lineno=278, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=278, col_offset=22), [Call(Name('f', Load(), lineno=278, col_offset=26), [Name('x', Load(), lineno=278, col_offset=28)], [], None, None, lineno=278, col_offset=26)], [], None, None, lineno=278, col_offset=22), [comprehension(Name('x', Store(), lineno=278, col_offset=36), Call(Name('range', Load(), lineno=278, col_offset=41), [Num(200, lineno=278, col_offset=47)], [], None, None, lineno=278, col_offset=41), [])], lineno=278, col_offset=22)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=8), Expr(Call(Name('eq', Load(), lineno=279, col_offset=8), [Name('s', Load(), lineno=279, col_offset=11), Str('20111222222222222222201112222220111222222011122222201112222220111222222011122222201112222220111222222011122222222222222220111222222011122222201112222220111222222011122222201112222220111222222011122222', lineno=279, col_offset=14)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_pl', arguments([Name('self', Param(), lineno=281, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=282, col_offset=8)], Attribute(Name('self', Load(), lineno=282, col_offset=13), 'assertEqual', Load(), lineno=282, col_offset=13), lineno=282, col_offset=8), Assign([Name('f', Store(), lineno=283, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=283, col_offset=12), 'c2py', Load(), lineno=283, col_offset=12), [Str('n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2', lineno=283, col_offset=25)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=8), Assign([Name('s', Store(), lineno=284, col_offset=8)], Call(Attribute(Str('', lineno=284, col_offset=12), 'join', Load(), lineno=284, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=284, col_offset=22), [Call(Name('f', Load(), lineno=284, col_offset=26), [Name('x', Load(), lineno=284, col_offset=28)], [], None, None, lineno=284, col_offset=26)], [], None, None, lineno=284, col_offset=22), [comprehension(Name('x', Store(), lineno=284, col_offset=36), Call(Name('range', Load(), lineno=284, col_offset=41), [Num(200, lineno=284, col_offset=47)], [], None, None, lineno=284, col_offset=41), [])], lineno=284, col_offset=22)], [], None, None, lineno=284, col_offset=12), lineno=284, col_offset=8), Expr(Call(Name('eq', Load(), lineno=285, col_offset=8), [Name('s', Load(), lineno=285, col_offset=11), Str('20111222222222222222221112222222111222222211122222221112222222111222222211122222221112222222111222222211122222222222222222111222222211122222221112222222111222222211122222221112222222111222222211122222', lineno=285, col_offset=14)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('test_sl', arguments([Name('self', Param(), lineno=287, col_offset=16)], None, None, []), [Assign([Name('eq', Store(), lineno=288, col_offset=8)], Attribute(Name('self', Load(), lineno=288, col_offset=13), 'assertEqual', Load(), lineno=288, col_offset=13), lineno=288, col_offset=8), Assign([Name('f', Store(), lineno=289, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=289, col_offset=12), 'c2py', Load(), lineno=289, col_offset=12), [Str('n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3', lineno=289, col_offset=25)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=8), Assign([Name('s', Store(), lineno=290, col_offset=8)], Call(Attribute(Str('', lineno=290, col_offset=12), 'join', Load(), lineno=290, col_offset=12), [ListComp(Call(Name('str', Load(), lineno=290, col_offset=22), [Call(Name('f', Load(), lineno=290, col_offset=26), [Name('x', Load(), lineno=290, col_offset=28)], [], None, None, lineno=290, col_offset=26)], [], None, None, lineno=290, col_offset=22), [comprehension(Name('x', Store(), lineno=290, col_offset=36), Call(Name('range', Load(), lineno=290, col_offset=41), [Num(200, lineno=290, col_offset=47)], [], None, None, lineno=290, col_offset=41), [])], lineno=290, col_offset=22)], [], None, None, lineno=290, col_offset=12), lineno=290, col_offset=8), Expr(Call(Name('eq', Load(), lineno=291, col_offset=8), [Name('s', Load(), lineno=291, col_offset=11), Str('30122333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333012233333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333', lineno=291, col_offset=14)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8)], [], lineno=287, col_offset=4), FunctionDef('test_security', arguments([Name('self', Param(), lineno=293, col_offset=22)], None, None, []), [Assign([Name('raises', Store(), lineno=294, col_offset=8)], Attribute(Name('self', Load(), lineno=294, col_offset=17), 'assertRaises', Load(), lineno=294, col_offset=17), lineno=294, col_offset=8), Expr(Call(Name('raises', Load(), lineno=296, col_offset=8), [Name('ValueError', Load(), lineno=296, col_offset=15), Attribute(Name('gettext', Load(), lineno=296, col_offset=27), 'c2py', Load(), lineno=296, col_offset=27), Str("os.chmod('/etc/passwd',0777)", lineno=296, col_offset=41)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=293, col_offset=4)], [], lineno=216, col_offset=0), ClassDef('UnicodeTranslationsTest', [Name('GettextBaseTest', Load(), lineno=299, col_offset=30)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=300, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('GettextBaseTest', Load(), lineno=301, col_offset=8), 'setUp', Load(), lineno=301, col_offset=8), [Name('self', Load(), lineno=301, col_offset=30)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Assign([Name('fp', Store(), lineno=302, col_offset=8)], Call(Name('open', Load(), lineno=302, col_offset=13), [Name('UMOFILE', Load(), lineno=302, col_offset=18), Str('rb', lineno=302, col_offset=27)], [], None, None, lineno=302, col_offset=13), lineno=302, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=304, col_offset=12), 't', Store(), lineno=304, col_offset=12)], Call(Attribute(Name('gettext', Load(), lineno=304, col_offset=21), 'GNUTranslations', Load(), lineno=304, col_offset=21), [Name('fp', Load(), lineno=304, col_offset=45)], [], None, None, lineno=304, col_offset=21), lineno=304, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=306, col_offset=12), 'close', Load(), lineno=306, col_offset=12), [], [], None, None, lineno=306, col_offset=12), lineno=306, col_offset=12)], lineno=303, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=307, col_offset=8), '_', Store(), lineno=307, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=307, col_offset=17), 't', Load(), lineno=307, col_offset=17), 'ugettext', Load(), lineno=307, col_offset=17), lineno=307, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('test_unicode_msgid', arguments([Name('self', Param(), lineno=309, col_offset=27)], None, None, []), [Assign([Name('unless', Store(), lineno=310, col_offset=8)], Attribute(Name('self', Load(), lineno=310, col_offset=17), 'assertTrue', Load(), lineno=310, col_offset=17), lineno=310, col_offset=8), Expr(Call(Name('unless', Load(), lineno=311, col_offset=8), [Call(Name('isinstance', Load(), lineno=311, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=311, col_offset=26), '_', Load(), lineno=311, col_offset=26), [Str('', lineno=311, col_offset=33)], [], None, None, lineno=311, col_offset=26), Name('unicode', Load(), lineno=311, col_offset=38)], [], None, None, lineno=311, col_offset=15)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Expr(Call(Name('unless', Load(), lineno=312, col_offset=8), [Call(Name('isinstance', Load(), lineno=312, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=312, col_offset=26), '_', Load(), lineno=312, col_offset=26), [Str(u'', lineno=312, col_offset=33)], [], None, None, lineno=312, col_offset=26), Name('unicode', Load(), lineno=312, col_offset=39)], [], None, None, lineno=312, col_offset=15)], [], None, None, lineno=312, col_offset=8), lineno=312, col_offset=8)], [], lineno=309, col_offset=4), FunctionDef('test_unicode_msgstr', arguments([Name('self', Param(), lineno=314, col_offset=28)], None, None, []), [Assign([Name('eq', Store(), lineno=315, col_offset=8)], Attribute(Name('self', Load(), lineno=315, col_offset=13), 'assertEqual', Load(), lineno=315, col_offset=13), lineno=315, col_offset=8), Expr(Call(Name('eq', Load(), lineno=316, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=316, col_offset=11), '_', Load(), lineno=316, col_offset=11), [Str(u'ab\xde', lineno=316, col_offset=18)], [], None, None, lineno=316, col_offset=11), Str(u'\xa4yz', lineno=316, col_offset=30)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=314, col_offset=4)], [], lineno=299, col_offset=0), ClassDef('WeirdMetadataTest', [Name('GettextBaseTest', Load(), lineno=319, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=320, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('GettextBaseTest', Load(), lineno=321, col_offset=8), 'setUp', Load(), lineno=321, col_offset=8), [Name('self', Load(), lineno=321, col_offset=30)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8), Assign([Name('fp', Store(), lineno=322, col_offset=8)], Call(Name('open', Load(), lineno=322, col_offset=13), [Name('MMOFILE', Load(), lineno=322, col_offset=18), Str('rb', lineno=322, col_offset=27)], [], None, None, lineno=322, col_offset=13), lineno=322, col_offset=8), TryFinally([TryExcept([Assign([Attribute(Name('self', Load(), lineno=325, col_offset=16), 't', Store(), lineno=325, col_offset=16)], Call(Attribute(Name('gettext', Load(), lineno=325, col_offset=25), 'GNUTranslations', Load(), lineno=325, col_offset=25), [Name('fp', Load(), lineno=325, col_offset=49)], [], None, None, lineno=325, col_offset=25), lineno=325, col_offset=16)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=327, col_offset=16), 'tearDown', Load(), lineno=327, col_offset=16), [], [], None, None, lineno=327, col_offset=16), lineno=327, col_offset=16), Raise(None, None, None, lineno=328, col_offset=16)], lineno=326, col_offset=12)], [], lineno=324, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=330, col_offset=12), 'close', Load(), lineno=330, col_offset=12), [], [], None, None, lineno=330, col_offset=12), lineno=330, col_offset=12)], lineno=323, col_offset=8)], [], lineno=320, col_offset=4), FunctionDef('test_weird_metadata', arguments([Name('self', Param(), lineno=332, col_offset=28)], None, None, []), [Assign([Name('info', Store(), lineno=333, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=333, col_offset=15), 't', Load(), lineno=333, col_offset=15), 'info', Load(), lineno=333, col_offset=15), [], [], None, None, lineno=333, col_offset=15), lineno=333, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=334, col_offset=8), 'assertEqual', Load(), lineno=334, col_offset=8), [Subscript(Name('info', Load(), lineno=334, col_offset=25), Index(Str('last-translator', lineno=334, col_offset=30)), Load(), lineno=334, col_offset=25), Str('John Doe <jdoe@example.com>\nJane Foobar <jfoobar@example.com>', lineno=335, col_offset=11)], [], None, None, lineno=334, col_offset=8), lineno=334, col_offset=8)], [], lineno=332, col_offset=4)], [], lineno=319, col_offset=0), ClassDef('DummyGNUTranslations', [Attribute(Name('gettext', Load(), lineno=338, col_offset=27), 'GNUTranslations', Load(), lineno=338, col_offset=27)], [FunctionDef('foo', arguments([Name('self', Param(), lineno=339, col_offset=12)], None, None, []), [Return(Str('foo', lineno=340, col_offset=15), lineno=340, col_offset=8)], [], lineno=339, col_offset=4)], [], lineno=338, col_offset=0), ClassDef('GettextCacheTestCase', [Name('GettextBaseTest', Load(), lineno=343, col_offset=27)], [FunctionDef('test_cache', arguments([Name('self', Param(), lineno=344, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=345, col_offset=8), 'localedir', Store(), lineno=345, col_offset=8)], Attribute(Name('os', Load(), lineno=345, col_offset=25), 'curdir', Load(), lineno=345, col_offset=25), lineno=345, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=346, col_offset=8), 'mofile', Store(), lineno=346, col_offset=8)], Name('MOFILE', Load(), lineno=346, col_offset=22), lineno=346, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=348, col_offset=8), 'assertEqual', Load(), lineno=348, col_offset=8), [Call(Name('len', Load(), lineno=348, col_offset=25), [Attribute(Name('gettext', Load(), lineno=348, col_offset=29), '_translations', Load(), lineno=348, col_offset=29)], [], None, None, lineno=348, col_offset=25), Num(0, lineno=348, col_offset=53)], [], None, None, lineno=348, col_offset=8), lineno=348, col_offset=8), Assign([Name('t', Store(), lineno=350, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=350, col_offset=12), 'translation', Load(), lineno=350, col_offset=12), [Str('gettext', lineno=350, col_offset=32), Attribute(Name('self', Load(), lineno=350, col_offset=43), 'localedir', Load(), lineno=350, col_offset=43)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=8), 'assertEqual', Load(), lineno=352, col_offset=8), [Call(Name('len', Load(), lineno=352, col_offset=25), [Attribute(Name('gettext', Load(), lineno=352, col_offset=29), '_translations', Load(), lineno=352, col_offset=29)], [], None, None, lineno=352, col_offset=25), Num(1, lineno=352, col_offset=53)], [], None, None, lineno=352, col_offset=8), lineno=352, col_offset=8), Assign([Name('t', Store(), lineno=354, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=354, col_offset=12), 'translation', Load(), lineno=354, col_offset=12), [Str('gettext', lineno=354, col_offset=32), Attribute(Name('self', Load(), lineno=354, col_offset=43), 'localedir', Load(), lineno=354, col_offset=43)], [keyword('class_', Name('DummyGNUTranslations', Load(), lineno=355, col_offset=39))], None, None, lineno=354, col_offset=12), lineno=354, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=357, col_offset=8), 'assertEqual', Load(), lineno=357, col_offset=8), [Call(Name('len', Load(), lineno=357, col_offset=25), [Attribute(Name('gettext', Load(), lineno=357, col_offset=29), '_translations', Load(), lineno=357, col_offset=29)], [], None, None, lineno=357, col_offset=25), Num(2, lineno=357, col_offset=53)], [], None, None, lineno=357, col_offset=8), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertEqual', Load(), lineno=358, col_offset=8), [Attribute(Name('t', Load(), lineno=358, col_offset=25), '__class__', Load(), lineno=358, col_offset=25), Name('DummyGNUTranslations', Load(), lineno=358, col_offset=38)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Assign([Name('t', Store(), lineno=362, col_offset=8)], Call(Attribute(Name('gettext', Load(), lineno=362, col_offset=12), 'translation', Load(), lineno=362, col_offset=12), [Str('gettext', lineno=362, col_offset=32), Attribute(Name('self', Load(), lineno=362, col_offset=43), 'localedir', Load(), lineno=362, col_offset=43)], [keyword('class_', Name('DummyGNUTranslations', Load(), lineno=363, col_offset=39))], None, None, lineno=362, col_offset=12), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertEqual', Load(), lineno=365, col_offset=8), [Call(Name('len', Load(), lineno=365, col_offset=25), [Attribute(Name('gettext', Load(), lineno=365, col_offset=29), '_translations', Load(), lineno=365, col_offset=29)], [], None, None, lineno=365, col_offset=25), Num(2, lineno=365, col_offset=53)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'assertEqual', Load(), lineno=366, col_offset=8), [Attribute(Name('t', Load(), lineno=366, col_offset=25), '__class__', Load(), lineno=366, col_offset=25), Name('DummyGNUTranslations', Load(), lineno=366, col_offset=38)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8)], [], lineno=344, col_offset=4)], [], lineno=343, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=370, col_offset=4), 'run_unittest', Load(), lineno=370, col_offset=4), [Name('__name__', Load(), lineno=370, col_offset=30)], [], None, None, lineno=370, col_offset=4), lineno=370, col_offset=4)], [], lineno=369, col_offset=0), If(Compare(Name('__name__', Load(), lineno=372, col_offset=3), [Eq()], [Str('__main__', lineno=372, col_offset=15)], lineno=372, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=373, col_offset=4), [], [], None, None, lineno=373, col_offset=4), lineno=373, col_offset=4)], [], lineno=372, col_offset=0), Expr(Str('\n# Dummy translation for the Python test_gettext.py module.\n# Copyright (C) 2001 Python Software Foundation\n# Barry Warsaw <barry@python.org>, 2000.\n#\nmsgid ""\nmsgstr ""\n"Project-Id-Version: 2.0\n"\n"PO-Revision-Date: 2003-04-11 14:32-0400\n"\n"Last-Translator: J. David Ibanez <j-david@noos.fr>\n"\n"Language-Team: XX <python-dev@python.org>\n"\n"MIME-Version: 1.0\n"\n"Content-Type: text/plain; charset=iso-8859-1\n"\n"Content-Transfer-Encoding: 8bit\n"\n"Generated-By: pygettext.py 1.1\n"\n"Plural-Forms: nplurals=2; plural=n!=1;\n"\n\n#: test_gettext.py:19 test_gettext.py:25 test_gettext.py:31 test_gettext.py:37\n#: test_gettext.py:51 test_gettext.py:80 test_gettext.py:86 test_gettext.py:92\n#: test_gettext.py:98\nmsgid "nudge nudge"\nmsgstr "wink wink"\n\n#: test_gettext.py:16 test_gettext.py:22 test_gettext.py:28 test_gettext.py:34\n#: test_gettext.py:77 test_gettext.py:83 test_gettext.py:89 test_gettext.py:95\nmsgid "albatross"\nmsgstr ""\n\n#: test_gettext.py:18 test_gettext.py:24 test_gettext.py:30 test_gettext.py:36\n#: test_gettext.py:79 test_gettext.py:85 test_gettext.py:91 test_gettext.py:97\nmsgid "Raymond Luxury Yach-t"\nmsgstr "Throatwobbler Mangrove"\n\n#: test_gettext.py:17 test_gettext.py:23 test_gettext.py:29 test_gettext.py:35\n#: test_gettext.py:56 test_gettext.py:78 test_gettext.py:84 test_gettext.py:90\n#: test_gettext.py:96\nmsgid "mullusk"\nmsgstr "bacon"\n\n#: test_gettext.py:40 test_gettext.py:101\nmsgid ""\n"This module provides internationalization and localization\n"\n"support for your Python programs by providing an interface to the GNU\n"\n"gettext message catalog library."\nmsgstr ""\n"Guvf zbqhyr cebivqrf vagreangvbanyvmngvba naq ybpnyvmngvba\n"\n"fhccbeg sbe lbhe Clguba cebtenzf ol cebivqvat na vagresnpr gb gur TAH\n"\n"trggrkg zrffntr pngnybt yvoenel."\n\n# Manually added, as neither pygettext nor xgettext support plural forms\n# in Python.\nmsgid "There is %s file"\nmsgid_plural "There are %s files"\nmsgstr[0] "Hay %s fichero"\nmsgstr[1] "Hay %s ficheros"\n', lineno=436, col_offset=-1), lineno=436, col_offset=-1), Expr(Str('\n# Dummy translation for the Python test_gettext.py module.\n# Copyright (C) 2001 Python Software Foundation\n# Barry Warsaw <barry@python.org>, 2000.\n#\nmsgid ""\nmsgstr ""\n"Project-Id-Version: 2.0\n"\n"PO-Revision-Date: 2003-04-11 12:42-0400\n"\n"Last-Translator: Barry A. WArsaw <barry@python.org>\n"\n"Language-Team: XX <python-dev@python.org>\n"\n"MIME-Version: 1.0\n"\n"Content-Type: text/plain; charset=utf-8\n"\n"Content-Transfer-Encoding: 7bit\n"\n"Generated-By: manually\n"\n\n#: nofile:0\nmsgid "ab\xc3\x9e"\nmsgstr "\xc2\xa4yz"\n', lineno=460, col_offset=-1), lineno=460, col_offset=-1), Expr(Str('\nmsgid ""\nmsgstr ""\n"Project-Id-Version: No Project 0.0\n"\n"POT-Creation-Date: Wed Dec 11 07:44:15 2002\n"\n"PO-Revision-Date: 2002-08-14 01:18:58+00:00\n"\n"Last-Translator: John Doe <jdoe@example.com>\n"\n"Jane Foobar <jfoobar@example.com>\n"\n"Language-Team: xx <xx@example.com>\n"\n"MIME-Version: 1.0\n"\n"Content-Type: text/plain; charset=iso-8859-15\n"\n"Content-Transfer-Encoding: quoted-printable\n"\n"Generated-By: pygettext.py 1.3\n"\n', lineno=477, col_offset=-1), lineno=477, col_offset=-1)])
