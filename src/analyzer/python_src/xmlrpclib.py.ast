Module([Expr(Str('\nAn XML-RPC client interface for Python.\n\nThe marshalling and response parser code can also be used to\nimplement XML-RPC servers.\n\nExported exceptions:\n\n  Error          Base class for client errors\n  ProtocolError  Indicates an HTTP protocol error\n  ResponseError  Indicates a broken response package\n  Fault          Indicates an XML-RPC fault package\n\nExported classes:\n\n  ServerProxy    Represents a logical connection to an XML-RPC server\n\n  MultiCall      Executor of boxcared xmlrpc requests\n  Boolean        boolean wrapper to generate a "boolean" XML-RPC value\n  DateTime       dateTime wrapper for an ISO 8601 string or time tuple or\n                 localtime integer value to generate a "dateTime.iso8601"\n                 XML-RPC value\n  Binary         binary data wrapper\n\n  SlowParser     Slow but safe standard parser (based on xmllib)\n  Marshaller     Generate an XML-RPC params chunk from a Python data structure\n  Unmarshaller   Unmarshal an XML-RPC response from incoming XML event message\n  Transport      Handles an HTTP transaction to an XML-RPC server\n  SafeTransport  Handles an HTTPS transaction to an XML-RPC server\n\nExported constants:\n\n  True\n  False\n\nExported functions:\n\n  boolean        Convert any Python value to an XML-RPC boolean\n  getparser      Create instance of the fastest available parser & attach\n                 to an unmarshalling object\n  dumps          Convert an argument tuple or a Fault instance to an XML-RPC\n                 request (or response, if the methodresponse option is used).\n  loads          Convert an XML-RPC packet to unmarshalled data plus a method\n                 name (None if not present).\n', lineno=137, col_offset=-1), lineno=137, col_offset=-1), Import([alias('re', None), alias('string', None), alias('time', None), alias('operator', None)], lineno=139, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=141, col_offset=0), Import([alias('socket', None)], lineno=142, col_offset=0), Import([alias('errno', None)], lineno=143, col_offset=0), Import([alias('httplib', None)], lineno=144, col_offset=0), TryExcept([Import([alias('gzip', None)], lineno=146, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=147, col_offset=7), None, [Assign([Name('gzip', Store(), lineno=148, col_offset=4)], Name('None', Load(), lineno=148, col_offset=11), lineno=148, col_offset=4)], lineno=147, col_offset=0)], [], lineno=145, col_offset=0), TryExcept([Expr(Name('unicode', Load(), lineno=154, col_offset=4), lineno=154, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=155, col_offset=7), None, [Assign([Name('unicode', Store(), lineno=156, col_offset=4)], Name('None', Load(), lineno=156, col_offset=14), lineno=156, col_offset=4)], lineno=155, col_offset=0)], [], lineno=153, col_offset=0), TryExcept([Import([alias('datetime', None)], lineno=159, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=160, col_offset=7), None, [Assign([Name('datetime', Store(), lineno=161, col_offset=4)], Name('None', Load(), lineno=161, col_offset=15), lineno=161, col_offset=4)], lineno=160, col_offset=0)], [], lineno=158, col_offset=0), TryExcept([Assign([Name('_bool_is_builtin', Store(), lineno=164, col_offset=4)], Compare(Attribute(Attribute(Name('False', Load(), lineno=164, col_offset=23), '__class__', Load(), lineno=164, col_offset=23), '__name__', Load(), lineno=164, col_offset=23), [Eq()], [Str('bool', lineno=164, col_offset=51)], lineno=164, col_offset=23), lineno=164, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=165, col_offset=7), None, [Assign([Name('_bool_is_builtin', Store(), lineno=166, col_offset=4)], Num(0, lineno=166, col_offset=23), lineno=166, col_offset=4)], lineno=165, col_offset=0)], [], lineno=163, col_offset=0), FunctionDef('_decode', arguments([Name('data', Param(), lineno=168, col_offset=12), Name('encoding', Param(), lineno=168, col_offset=18), Name('is8bit', Param(), lineno=168, col_offset=28)], None, None, [Attribute(Call(Attribute(Name('re', Load(), lineno=168, col_offset=35), 'compile', Load(), lineno=168, col_offset=35), [Str('[\x80-\xff]', lineno=168, col_offset=46)], [], None, None, lineno=168, col_offset=35), 'search', Load(), lineno=168, col_offset=35)]), [If(BoolOp(And(), [Name('unicode', Load(), lineno=170, col_offset=7), Name('encoding', Load(), lineno=170, col_offset=19), Call(Name('is8bit', Load(), lineno=170, col_offset=32), [Name('data', Load(), lineno=170, col_offset=39)], [], None, None, lineno=170, col_offset=32)], lineno=170, col_offset=7), [Assign([Name('data', Store(), lineno=171, col_offset=8)], Call(Name('unicode', Load(), lineno=171, col_offset=15), [Name('data', Load(), lineno=171, col_offset=23), Name('encoding', Load(), lineno=171, col_offset=29)], [], None, None, lineno=171, col_offset=15), lineno=171, col_offset=8)], [], lineno=170, col_offset=4), Return(Name('data', Load(), lineno=172, col_offset=11), lineno=172, col_offset=4)], [], lineno=168, col_offset=0), FunctionDef('escape', arguments([Name('s', Param(), lineno=174, col_offset=11), Name('replace', Param(), lineno=174, col_offset=14)], None, None, [Attribute(Name('string', Load(), lineno=174, col_offset=22), 'replace', Load(), lineno=174, col_offset=22)]), [Assign([Name('s', Store(), lineno=175, col_offset=4)], Call(Name('replace', Load(), lineno=175, col_offset=8), [Name('s', Load(), lineno=175, col_offset=16), Str('&', lineno=175, col_offset=19), Str('&amp;', lineno=175, col_offset=24)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=4), Assign([Name('s', Store(), lineno=176, col_offset=4)], Call(Name('replace', Load(), lineno=176, col_offset=8), [Name('s', Load(), lineno=176, col_offset=16), Str('<', lineno=176, col_offset=19), Str('&lt;', lineno=176, col_offset=24)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=4), Return(Call(Name('replace', Load(), lineno=177, col_offset=11), [Name('s', Load(), lineno=177, col_offset=19), Str('>', lineno=177, col_offset=22), Str('&gt;', lineno=177, col_offset=27)], [], None, None, lineno=177, col_offset=11), lineno=177, col_offset=4)], [], lineno=174, col_offset=0), If(Name('unicode', Load(), lineno=179, col_offset=3), [FunctionDef('_stringify', arguments([Name('string', Param(), lineno=180, col_offset=19)], None, None, []), [TryExcept([Return(Call(Attribute(Name('string', Load(), lineno=183, col_offset=19), 'encode', Load(), lineno=183, col_offset=19), [Str('ascii', lineno=183, col_offset=33)], [], None, None, lineno=183, col_offset=19), lineno=183, col_offset=12)], [ExceptHandler(Name('UnicodeError', Load(), lineno=184, col_offset=15), None, [Return(Name('string', Load(), lineno=185, col_offset=19), lineno=185, col_offset=12)], lineno=184, col_offset=8)], [], lineno=182, col_offset=8)], [], lineno=180, col_offset=4)], [FunctionDef('_stringify', arguments([Name('string', Param(), lineno=187, col_offset=19)], None, None, []), [Return(Name('string', Load(), lineno=188, col_offset=15), lineno=188, col_offset=8)], [], lineno=187, col_offset=4)], lineno=179, col_offset=0), Assign([Name('__version__', Store(), lineno=190, col_offset=0)], Str('1.0.1', lineno=190, col_offset=14), lineno=190, col_offset=0), Assign([Name('MAXINT', Store(), lineno=193, col_offset=0)], BinOp(BinOp(Num(2L, lineno=193, col_offset=10), Pow(), Num(31, lineno=193, col_offset=14), lineno=193, col_offset=10), Sub(), Num(1, lineno=193, col_offset=17), lineno=193, col_offset=10), lineno=193, col_offset=0), Assign([Name('MININT', Store(), lineno=194, col_offset=0)], UnaryOp(USub(), BinOp(Num(2L, lineno=194, col_offset=10), Pow(), Num(31, lineno=194, col_offset=14), lineno=194, col_offset=10), lineno=194, col_offset=9), lineno=194, col_offset=0), Assign([Name('PARSE_ERROR', Store(), lineno=201, col_offset=0)], Num(-32700, lineno=201, col_offset=21), lineno=201, col_offset=0), Assign([Name('SERVER_ERROR', Store(), lineno=202, col_offset=0)], Num(-32600, lineno=202, col_offset=21), lineno=202, col_offset=0), Assign([Name('APPLICATION_ERROR', Store(), lineno=203, col_offset=0)], Num(-32500, lineno=203, col_offset=21), lineno=203, col_offset=0), Assign([Name('SYSTEM_ERROR', Store(), lineno=204, col_offset=0)], Num(-32400, lineno=204, col_offset=21), lineno=204, col_offset=0), Assign([Name('TRANSPORT_ERROR', Store(), lineno=205, col_offset=0)], Num(-32300, lineno=205, col_offset=21), lineno=205, col_offset=0), Assign([Name('NOT_WELLFORMED_ERROR', Store(), lineno=208, col_offset=0)], Num(-32700, lineno=208, col_offset=25), lineno=208, col_offset=0), Assign([Name('UNSUPPORTED_ENCODING', Store(), lineno=209, col_offset=0)], Num(-32701, lineno=209, col_offset=25), lineno=209, col_offset=0), Assign([Name('INVALID_ENCODING_CHAR', Store(), lineno=210, col_offset=0)], Num(-32702, lineno=210, col_offset=25), lineno=210, col_offset=0), Assign([Name('INVALID_XMLRPC', Store(), lineno=211, col_offset=0)], Num(-32600, lineno=211, col_offset=25), lineno=211, col_offset=0), Assign([Name('METHOD_NOT_FOUND', Store(), lineno=212, col_offset=0)], Num(-32601, lineno=212, col_offset=25), lineno=212, col_offset=0), Assign([Name('INVALID_METHOD_PARAMS', Store(), lineno=213, col_offset=0)], Num(-32602, lineno=213, col_offset=25), lineno=213, col_offset=0), Assign([Name('INTERNAL_ERROR', Store(), lineno=214, col_offset=0)], Num(-32603, lineno=214, col_offset=25), lineno=214, col_offset=0), ClassDef('Error', [Name('Exception', Load(), lineno=222, col_offset=12)], [Expr(Str('Base class for client errors.', lineno=223, col_offset=4), lineno=223, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=224, col_offset=16)], None, None, []), [Return(Call(Name('repr', Load(), lineno=225, col_offset=15), [Name('self', Load(), lineno=225, col_offset=20)], [], None, None, lineno=225, col_offset=15), lineno=225, col_offset=8)], [], lineno=224, col_offset=4)], [], lineno=222, col_offset=0), ClassDef('ProtocolError', [Name('Error', Load(), lineno=237, col_offset=20)], [Expr(Str('Indicates an HTTP protocol error.', lineno=238, col_offset=4), lineno=238, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=239, col_offset=17), Name('url', Param(), lineno=239, col_offset=23), Name('errcode', Param(), lineno=239, col_offset=28), Name('errmsg', Param(), lineno=239, col_offset=37), Name('headers', Param(), lineno=239, col_offset=45)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=240, col_offset=8), '__init__', Load(), lineno=240, col_offset=8), [Name('self', Load(), lineno=240, col_offset=23)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=241, col_offset=8), 'url', Store(), lineno=241, col_offset=8)], Name('url', Load(), lineno=241, col_offset=19), lineno=241, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=242, col_offset=8), 'errcode', Store(), lineno=242, col_offset=8)], Name('errcode', Load(), lineno=242, col_offset=23), lineno=242, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=243, col_offset=8), 'errmsg', Store(), lineno=243, col_offset=8)], Name('errmsg', Load(), lineno=243, col_offset=22), lineno=243, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=244, col_offset=8), 'headers', Store(), lineno=244, col_offset=8)], Name('headers', Load(), lineno=244, col_offset=23), lineno=244, col_offset=8)], [], lineno=239, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=245, col_offset=17)], None, None, []), [Return(BinOp(Str('<ProtocolError for %s: %s %s>', lineno=247, col_offset=12), Mod(), Tuple([Attribute(Name('self', Load(), lineno=248, col_offset=13), 'url', Load(), lineno=248, col_offset=13), Attribute(Name('self', Load(), lineno=248, col_offset=23), 'errcode', Load(), lineno=248, col_offset=23), Attribute(Name('self', Load(), lineno=248, col_offset=37), 'errmsg', Load(), lineno=248, col_offset=37)], Load(), lineno=248, col_offset=13), lineno=247, col_offset=12), lineno=246, col_offset=8)], [], lineno=245, col_offset=4)], [], lineno=237, col_offset=0), ClassDef('ResponseError', [Name('Error', Load(), lineno=256, col_offset=20)], [Expr(Str('Indicates a broken response package.', lineno=257, col_offset=4), lineno=257, col_offset=4), Pass( lineno=258, col_offset=4)], [], lineno=256, col_offset=0), ClassDef('Fault', [Name('Error', Load(), lineno=269, col_offset=12)], [Expr(Str('Indicates an XML-RPC fault package.', lineno=270, col_offset=4), lineno=270, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=271, col_offset=17), Name('faultCode', Param(), lineno=271, col_offset=23), Name('faultString', Param(), lineno=271, col_offset=34)], None, 'extra', []), [Expr(Call(Attribute(Name('Error', Load(), lineno=272, col_offset=8), '__init__', Load(), lineno=272, col_offset=8), [Name('self', Load(), lineno=272, col_offset=23)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=273, col_offset=8), 'faultCode', Store(), lineno=273, col_offset=8)], Name('faultCode', Load(), lineno=273, col_offset=25), lineno=273, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=274, col_offset=8), 'faultString', Store(), lineno=274, col_offset=8)], Name('faultString', Load(), lineno=274, col_offset=27), lineno=274, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=275, col_offset=17)], None, None, []), [Return(BinOp(Str('<Fault %s: %s>', lineno=277, col_offset=12), Mod(), Tuple([Attribute(Name('self', Load(), lineno=278, col_offset=13), 'faultCode', Load(), lineno=278, col_offset=13), Call(Name('repr', Load(), lineno=278, col_offset=29), [Attribute(Name('self', Load(), lineno=278, col_offset=34), 'faultString', Load(), lineno=278, col_offset=34)], [], None, None, lineno=278, col_offset=29)], Load(), lineno=278, col_offset=13), lineno=277, col_offset=12), lineno=276, col_offset=8)], [], lineno=275, col_offset=4)], [], lineno=269, col_offset=0), ImportFrom('sys', [alias('modules', None)], 0, lineno=292, col_offset=0), Assign([Name('mod_dict', Store(), lineno=293, col_offset=0)], Attribute(Subscript(Name('modules', Load(), lineno=293, col_offset=11), Index(Name('__name__', Load(), lineno=293, col_offset=19)), Load(), lineno=293, col_offset=11), '__dict__', Load(), lineno=293, col_offset=11), lineno=293, col_offset=0), If(Name('_bool_is_builtin', Load(), lineno=294, col_offset=3), [Assign([Name('boolean', Store(), lineno=295, col_offset=4), Name('Boolean', Store(), lineno=295, col_offset=14)], Name('bool', Load(), lineno=295, col_offset=24), lineno=295, col_offset=4), Assign([Subscript(Name('mod_dict', Load(), lineno=297, col_offset=4), Index(Str('True', lineno=297, col_offset=13)), Store(), lineno=297, col_offset=4)], Name('True', Load(), lineno=297, col_offset=23), lineno=297, col_offset=4), Assign([Subscript(Name('mod_dict', Load(), lineno=298, col_offset=4), Index(Str('False', lineno=298, col_offset=13)), Store(), lineno=298, col_offset=4)], Name('False', Load(), lineno=298, col_offset=24), lineno=298, col_offset=4)], [ClassDef('Boolean', [], [Expr(Str('Boolean-value wrapper.\n\n        Use True or False to generate a "boolean" XML-RPC value.\n        ', lineno=304, col_offset=-1), lineno=304, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=306, col_offset=21), Name('value', Param(), lineno=306, col_offset=27)], None, None, [Num(0, lineno=306, col_offset=35)]), [Assign([Attribute(Name('self', Load(), lineno=307, col_offset=12), 'value', Store(), lineno=307, col_offset=12)], Call(Attribute(Name('operator', Load(), lineno=307, col_offset=25), 'truth', Load(), lineno=307, col_offset=25), [Name('value', Load(), lineno=307, col_offset=40)], [], None, None, lineno=307, col_offset=25), lineno=307, col_offset=12)], [], lineno=306, col_offset=8), FunctionDef('encode', arguments([Name('self', Param(), lineno=309, col_offset=19), Name('out', Param(), lineno=309, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('out', Load(), lineno=310, col_offset=12), 'write', Load(), lineno=310, col_offset=12), [BinOp(Str('<value><boolean>%d</boolean></value>\n', lineno=310, col_offset=22), Mod(), Attribute(Name('self', Load(), lineno=310, col_offset=65), 'value', Load(), lineno=310, col_offset=65), lineno=310, col_offset=22)], [], None, None, lineno=310, col_offset=12), lineno=310, col_offset=12)], [], lineno=309, col_offset=8), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=312, col_offset=20), Name('other', Param(), lineno=312, col_offset=26)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=313, col_offset=15), [Name('other', Load(), lineno=313, col_offset=26), Name('Boolean', Load(), lineno=313, col_offset=33)], [], None, None, lineno=313, col_offset=15), [Assign([Name('other', Store(), lineno=314, col_offset=16)], Attribute(Name('other', Load(), lineno=314, col_offset=24), 'value', Load(), lineno=314, col_offset=24), lineno=314, col_offset=16)], [], lineno=313, col_offset=12), Return(Call(Name('cmp', Load(), lineno=315, col_offset=19), [Attribute(Name('self', Load(), lineno=315, col_offset=23), 'value', Load(), lineno=315, col_offset=23), Name('other', Load(), lineno=315, col_offset=35)], [], None, None, lineno=315, col_offset=19), lineno=315, col_offset=12)], [], lineno=312, col_offset=8), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=317, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=318, col_offset=15), 'value', Load(), lineno=318, col_offset=15), [Return(BinOp(Str('<Boolean True at %x>', lineno=319, col_offset=23), Mod(), Call(Name('id', Load(), lineno=319, col_offset=48), [Name('self', Load(), lineno=319, col_offset=51)], [], None, None, lineno=319, col_offset=48), lineno=319, col_offset=23), lineno=319, col_offset=16)], [Return(BinOp(Str('<Boolean False at %x>', lineno=321, col_offset=23), Mod(), Call(Name('id', Load(), lineno=321, col_offset=49), [Name('self', Load(), lineno=321, col_offset=52)], [], None, None, lineno=321, col_offset=49), lineno=321, col_offset=23), lineno=321, col_offset=16)], lineno=318, col_offset=12)], [], lineno=317, col_offset=8), FunctionDef('__int__', arguments([Name('self', Param(), lineno=323, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=324, col_offset=19), 'value', Load(), lineno=324, col_offset=19), lineno=324, col_offset=12)], [], lineno=323, col_offset=8), FunctionDef('__nonzero__', arguments([Name('self', Param(), lineno=326, col_offset=24)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=327, col_offset=19), 'value', Load(), lineno=327, col_offset=19), lineno=327, col_offset=12)], [], lineno=326, col_offset=8)], [], lineno=300, col_offset=4), Assign([Subscript(Name('mod_dict', Load(), lineno=329, col_offset=4), Index(Str('True', lineno=329, col_offset=13)), Store(), lineno=329, col_offset=4)], Call(Name('Boolean', Load(), lineno=329, col_offset=23), [Num(1, lineno=329, col_offset=31)], [], None, None, lineno=329, col_offset=23), lineno=329, col_offset=4), Assign([Subscript(Name('mod_dict', Load(), lineno=330, col_offset=4), Index(Str('False', lineno=330, col_offset=13)), Store(), lineno=330, col_offset=4)], Call(Name('Boolean', Load(), lineno=330, col_offset=24), [Num(0, lineno=330, col_offset=32)], [], None, None, lineno=330, col_offset=24), lineno=330, col_offset=4), FunctionDef('boolean', arguments([Name('value', Param(), lineno=343, col_offset=16), Name('_truefalse', Param(), lineno=343, col_offset=23)], None, None, [Tuple([Name('False', Load(), lineno=343, col_offset=35), Name('True', Load(), lineno=343, col_offset=42)], Load(), lineno=343, col_offset=35)]), [Expr(Str("Convert any Python value to XML-RPC 'boolean'.", lineno=344, col_offset=8), lineno=344, col_offset=8), Return(Subscript(Name('_truefalse', Load(), lineno=345, col_offset=15), Index(Call(Attribute(Name('operator', Load(), lineno=345, col_offset=26), 'truth', Load(), lineno=345, col_offset=26), [Name('value', Load(), lineno=345, col_offset=41)], [], None, None, lineno=345, col_offset=26)), Load(), lineno=345, col_offset=15), lineno=345, col_offset=8)], [], lineno=343, col_offset=4)], lineno=294, col_offset=0), Delete([Name('modules', Del(), lineno=347, col_offset=4), Name('mod_dict', Del(), lineno=347, col_offset=13)], lineno=347, col_offset=0), FunctionDef('_strftime', arguments([Name('value', Param(), lineno=362, col_offset=14)], None, None, []), [If(Name('datetime', Load(), lineno=363, col_offset=7), [If(Call(Name('isinstance', Load(), lineno=364, col_offset=11), [Name('value', Load(), lineno=364, col_offset=22), Attribute(Name('datetime', Load(), lineno=364, col_offset=29), 'datetime', Load(), lineno=364, col_offset=29)], [], None, None, lineno=364, col_offset=11), [Return(BinOp(Str('%04d%02d%02dT%02d:%02d:%02d', lineno=365, col_offset=19), Mod(), Tuple([Attribute(Name('value', Load(), lineno=366, col_offset=16), 'year', Load(), lineno=366, col_offset=16), Attribute(Name('value', Load(), lineno=366, col_offset=28), 'month', Load(), lineno=366, col_offset=28), Attribute(Name('value', Load(), lineno=366, col_offset=41), 'day', Load(), lineno=366, col_offset=41), Attribute(Name('value', Load(), lineno=367, col_offset=16), 'hour', Load(), lineno=367, col_offset=16), Attribute(Name('value', Load(), lineno=367, col_offset=28), 'minute', Load(), lineno=367, col_offset=28), Attribute(Name('value', Load(), lineno=367, col_offset=42), 'second', Load(), lineno=367, col_offset=42)], Load(), lineno=366, col_offset=16), lineno=365, col_offset=19), lineno=365, col_offset=12)], [], lineno=364, col_offset=8)], [], lineno=363, col_offset=4), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=369, col_offset=11), [Name('value', Load(), lineno=369, col_offset=22), Tuple([Name('TupleType', Load(), lineno=369, col_offset=30), Attribute(Name('time', Load(), lineno=369, col_offset=41), 'struct_time', Load(), lineno=369, col_offset=41)], Load(), lineno=369, col_offset=30)], [], None, None, lineno=369, col_offset=11), lineno=369, col_offset=7), [If(Compare(Name('value', Load(), lineno=370, col_offset=11), [Eq()], [Num(0, lineno=370, col_offset=20)], lineno=370, col_offset=11), [Assign([Name('value', Store(), lineno=371, col_offset=12)], Call(Attribute(Name('time', Load(), lineno=371, col_offset=20), 'time', Load(), lineno=371, col_offset=20), [], [], None, None, lineno=371, col_offset=20), lineno=371, col_offset=12)], [], lineno=370, col_offset=8), Assign([Name('value', Store(), lineno=372, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=372, col_offset=16), 'localtime', Load(), lineno=372, col_offset=16), [Name('value', Load(), lineno=372, col_offset=31)], [], None, None, lineno=372, col_offset=16), lineno=372, col_offset=8)], [], lineno=369, col_offset=4), Return(BinOp(Str('%04d%02d%02dT%02d:%02d:%02d', lineno=374, col_offset=11), Mod(), Subscript(Name('value', Load(), lineno=374, col_offset=43), Slice(None, Num(6, lineno=374, col_offset=50), None), Load(), lineno=374, col_offset=43), lineno=374, col_offset=11), lineno=374, col_offset=4)], [], lineno=362, col_offset=0), ClassDef('DateTime', [], [Expr(Str("DateTime wrapper for an ISO 8601 string or time tuple or\n    localtime integer value to generate 'dateTime.iso8601' XML-RPC\n    value.\n    ", lineno=380, col_offset=-1), lineno=380, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=382, col_offset=17), Name('value', Param(), lineno=382, col_offset=23)], None, None, [Num(0, lineno=382, col_offset=29)]), [If(Call(Name('isinstance', Load(), lineno=383, col_offset=11), [Name('value', Load(), lineno=383, col_offset=22), Name('StringType', Load(), lineno=383, col_offset=29)], [], None, None, lineno=383, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=384, col_offset=12), 'value', Store(), lineno=384, col_offset=12)], Name('value', Load(), lineno=384, col_offset=25), lineno=384, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=386, col_offset=12), 'value', Store(), lineno=386, col_offset=12)], Call(Name('_strftime', Load(), lineno=386, col_offset=25), [Name('value', Load(), lineno=386, col_offset=35)], [], None, None, lineno=386, col_offset=25), lineno=386, col_offset=12)], lineno=383, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('make_comparable', arguments([Name('self', Param(), lineno=388, col_offset=24), Name('other', Param(), lineno=388, col_offset=30)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=389, col_offset=11), [Name('other', Load(), lineno=389, col_offset=22), Name('DateTime', Load(), lineno=389, col_offset=29)], [], None, None, lineno=389, col_offset=11), [Assign([Name('s', Store(), lineno=390, col_offset=12)], Attribute(Name('self', Load(), lineno=390, col_offset=16), 'value', Load(), lineno=390, col_offset=16), lineno=390, col_offset=12), Assign([Name('o', Store(), lineno=391, col_offset=12)], Attribute(Name('other', Load(), lineno=391, col_offset=16), 'value', Load(), lineno=391, col_offset=16), lineno=391, col_offset=12)], [If(BoolOp(And(), [Name('datetime', Load(), lineno=392, col_offset=13), Call(Name('isinstance', Load(), lineno=392, col_offset=26), [Name('other', Load(), lineno=392, col_offset=37), Attribute(Name('datetime', Load(), lineno=392, col_offset=44), 'datetime', Load(), lineno=392, col_offset=44)], [], None, None, lineno=392, col_offset=26)], lineno=392, col_offset=13), [Assign([Name('s', Store(), lineno=393, col_offset=12)], Attribute(Name('self', Load(), lineno=393, col_offset=16), 'value', Load(), lineno=393, col_offset=16), lineno=393, col_offset=12), Assign([Name('o', Store(), lineno=394, col_offset=12)], Call(Attribute(Name('other', Load(), lineno=394, col_offset=16), 'strftime', Load(), lineno=394, col_offset=16), [Str('%Y%m%dT%H:%M:%S', lineno=394, col_offset=31)], [], None, None, lineno=394, col_offset=16), lineno=394, col_offset=12)], [If(Call(Name('isinstance', Load(), lineno=395, col_offset=13), [Name('other', Load(), lineno=395, col_offset=24), Tuple([Name('str', Load(), lineno=395, col_offset=32), Name('unicode', Load(), lineno=395, col_offset=37)], Load(), lineno=395, col_offset=32)], [], None, None, lineno=395, col_offset=13), [Assign([Name('s', Store(), lineno=396, col_offset=12)], Attribute(Name('self', Load(), lineno=396, col_offset=16), 'value', Load(), lineno=396, col_offset=16), lineno=396, col_offset=12), Assign([Name('o', Store(), lineno=397, col_offset=12)], Name('other', Load(), lineno=397, col_offset=16), lineno=397, col_offset=12)], [If(Call(Name('hasattr', Load(), lineno=398, col_offset=13), [Name('other', Load(), lineno=398, col_offset=21), Str('timetuple', lineno=398, col_offset=28)], [], None, None, lineno=398, col_offset=13), [Assign([Name('s', Store(), lineno=399, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=399, col_offset=16), 'timetuple', Load(), lineno=399, col_offset=16), [], [], None, None, lineno=399, col_offset=16), lineno=399, col_offset=12), Assign([Name('o', Store(), lineno=400, col_offset=12)], Call(Attribute(Name('other', Load(), lineno=400, col_offset=16), 'timetuple', Load(), lineno=400, col_offset=16), [], [], None, None, lineno=400, col_offset=16), lineno=400, col_offset=12)], [Assign([Name('otype', Store(), lineno=402, col_offset=12)], BoolOp(Or(), [BoolOp(And(), [Call(Name('hasattr', Load(), lineno=402, col_offset=21), [Name('other', Load(), lineno=402, col_offset=29), Str('__class__', lineno=402, col_offset=36)], [], None, None, lineno=402, col_offset=21), Attribute(Attribute(Name('other', Load(), lineno=403, col_offset=25), '__class__', Load(), lineno=403, col_offset=25), '__name__', Load(), lineno=403, col_offset=25)], lineno=402, col_offset=21), Call(Name('type', Load(), lineno=404, col_offset=24), [Name('other', Load(), lineno=404, col_offset=29)], [], None, None, lineno=404, col_offset=24)], lineno=402, col_offset=21), lineno=402, col_offset=12), Raise(Call(Name('TypeError', Load(), lineno=405, col_offset=18), [BinOp(Str("Can't compare %s and %s", lineno=405, col_offset=28), Mod(), Tuple([Attribute(Attribute(Name('self', Load(), lineno=406, col_offset=29), '__class__', Load(), lineno=406, col_offset=29), '__name__', Load(), lineno=406, col_offset=29), Name('otype', Load(), lineno=406, col_offset=54)], Load(), lineno=406, col_offset=29), lineno=405, col_offset=28)], [], None, None, lineno=405, col_offset=18), None, None, lineno=405, col_offset=12)], lineno=398, col_offset=13)], lineno=395, col_offset=13)], lineno=392, col_offset=13)], lineno=389, col_offset=8), Return(Tuple([Name('s', Load(), lineno=407, col_offset=15), Name('o', Load(), lineno=407, col_offset=18)], Load(), lineno=407, col_offset=15), lineno=407, col_offset=8)], [], lineno=388, col_offset=4), FunctionDef('__lt__', arguments([Name('self', Param(), lineno=409, col_offset=15), Name('other', Param(), lineno=409, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=410, col_offset=8), Name('o', Store(), lineno=410, col_offset=11)], Store(), lineno=410, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=410, col_offset=15), 'make_comparable', Load(), lineno=410, col_offset=15), [Name('other', Load(), lineno=410, col_offset=36)], [], None, None, lineno=410, col_offset=15), lineno=410, col_offset=8), Return(Compare(Name('s', Load(), lineno=411, col_offset=15), [Lt()], [Name('o', Load(), lineno=411, col_offset=19)], lineno=411, col_offset=15), lineno=411, col_offset=8)], [], lineno=409, col_offset=4), FunctionDef('__le__', arguments([Name('self', Param(), lineno=413, col_offset=15), Name('other', Param(), lineno=413, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=414, col_offset=8), Name('o', Store(), lineno=414, col_offset=11)], Store(), lineno=414, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=414, col_offset=15), 'make_comparable', Load(), lineno=414, col_offset=15), [Name('other', Load(), lineno=414, col_offset=36)], [], None, None, lineno=414, col_offset=15), lineno=414, col_offset=8), Return(Compare(Name('s', Load(), lineno=415, col_offset=15), [LtE()], [Name('o', Load(), lineno=415, col_offset=20)], lineno=415, col_offset=15), lineno=415, col_offset=8)], [], lineno=413, col_offset=4), FunctionDef('__gt__', arguments([Name('self', Param(), lineno=417, col_offset=15), Name('other', Param(), lineno=417, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=418, col_offset=8), Name('o', Store(), lineno=418, col_offset=11)], Store(), lineno=418, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=418, col_offset=15), 'make_comparable', Load(), lineno=418, col_offset=15), [Name('other', Load(), lineno=418, col_offset=36)], [], None, None, lineno=418, col_offset=15), lineno=418, col_offset=8), Return(Compare(Name('s', Load(), lineno=419, col_offset=15), [Gt()], [Name('o', Load(), lineno=419, col_offset=19)], lineno=419, col_offset=15), lineno=419, col_offset=8)], [], lineno=417, col_offset=4), FunctionDef('__ge__', arguments([Name('self', Param(), lineno=421, col_offset=15), Name('other', Param(), lineno=421, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=422, col_offset=8), Name('o', Store(), lineno=422, col_offset=11)], Store(), lineno=422, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=422, col_offset=15), 'make_comparable', Load(), lineno=422, col_offset=15), [Name('other', Load(), lineno=422, col_offset=36)], [], None, None, lineno=422, col_offset=15), lineno=422, col_offset=8), Return(Compare(Name('s', Load(), lineno=423, col_offset=15), [GtE()], [Name('o', Load(), lineno=423, col_offset=20)], lineno=423, col_offset=15), lineno=423, col_offset=8)], [], lineno=421, col_offset=4), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=425, col_offset=15), Name('other', Param(), lineno=425, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=426, col_offset=8), Name('o', Store(), lineno=426, col_offset=11)], Store(), lineno=426, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=426, col_offset=15), 'make_comparable', Load(), lineno=426, col_offset=15), [Name('other', Load(), lineno=426, col_offset=36)], [], None, None, lineno=426, col_offset=15), lineno=426, col_offset=8), Return(Compare(Name('s', Load(), lineno=427, col_offset=15), [Eq()], [Name('o', Load(), lineno=427, col_offset=20)], lineno=427, col_offset=15), lineno=427, col_offset=8)], [], lineno=425, col_offset=4), FunctionDef('__ne__', arguments([Name('self', Param(), lineno=429, col_offset=15), Name('other', Param(), lineno=429, col_offset=21)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=430, col_offset=8), Name('o', Store(), lineno=430, col_offset=11)], Store(), lineno=430, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=430, col_offset=15), 'make_comparable', Load(), lineno=430, col_offset=15), [Name('other', Load(), lineno=430, col_offset=36)], [], None, None, lineno=430, col_offset=15), lineno=430, col_offset=8), Return(Compare(Name('s', Load(), lineno=431, col_offset=15), [NotEq()], [Name('o', Load(), lineno=431, col_offset=20)], lineno=431, col_offset=15), lineno=431, col_offset=8)], [], lineno=429, col_offset=4), FunctionDef('timetuple', arguments([Name('self', Param(), lineno=433, col_offset=18)], None, None, []), [Return(Call(Attribute(Name('time', Load(), lineno=434, col_offset=15), 'strptime', Load(), lineno=434, col_offset=15), [Attribute(Name('self', Load(), lineno=434, col_offset=29), 'value', Load(), lineno=434, col_offset=29), Str('%Y%m%dT%H:%M:%S', lineno=434, col_offset=41)], [], None, None, lineno=434, col_offset=15), lineno=434, col_offset=8)], [], lineno=433, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=436, col_offset=16), Name('other', Param(), lineno=436, col_offset=22)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=437, col_offset=8), Name('o', Store(), lineno=437, col_offset=11)], Store(), lineno=437, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=437, col_offset=15), 'make_comparable', Load(), lineno=437, col_offset=15), [Name('other', Load(), lineno=437, col_offset=36)], [], None, None, lineno=437, col_offset=15), lineno=437, col_offset=8), Return(Call(Name('cmp', Load(), lineno=438, col_offset=15), [Name('s', Load(), lineno=438, col_offset=19), Name('o', Load(), lineno=438, col_offset=22)], [], None, None, lineno=438, col_offset=15), lineno=438, col_offset=8)], [], lineno=436, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=445, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=446, col_offset=15), 'value', Load(), lineno=446, col_offset=15), lineno=446, col_offset=8)], [], lineno=445, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=448, col_offset=17)], None, None, []), [Return(BinOp(Str('<DateTime %s at %x>', lineno=449, col_offset=15), Mod(), Tuple([Call(Name('repr', Load(), lineno=449, col_offset=40), [Attribute(Name('self', Load(), lineno=449, col_offset=45), 'value', Load(), lineno=449, col_offset=45)], [], None, None, lineno=449, col_offset=40), Call(Name('id', Load(), lineno=449, col_offset=58), [Name('self', Load(), lineno=449, col_offset=61)], [], None, None, lineno=449, col_offset=58)], Load(), lineno=449, col_offset=40), lineno=449, col_offset=15), lineno=449, col_offset=8)], [], lineno=448, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=451, col_offset=15), Name('data', Param(), lineno=451, col_offset=21)], None, None, []), [Assign([Name('data', Store(), lineno=452, col_offset=8)], Call(Name('str', Load(), lineno=452, col_offset=15), [Name('data', Load(), lineno=452, col_offset=19)], [], None, None, lineno=452, col_offset=15), lineno=452, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=453, col_offset=8), 'value', Store(), lineno=453, col_offset=8)], Call(Attribute(Name('string', Load(), lineno=453, col_offset=21), 'strip', Load(), lineno=453, col_offset=21), [Name('data', Load(), lineno=453, col_offset=34)], [], None, None, lineno=453, col_offset=21), lineno=453, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=455, col_offset=15), Name('out', Param(), lineno=455, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('out', Load(), lineno=456, col_offset=8), 'write', Load(), lineno=456, col_offset=8), [Str('<value><dateTime.iso8601>', lineno=456, col_offset=18)], [], None, None, lineno=456, col_offset=8), lineno=456, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=457, col_offset=8), 'write', Load(), lineno=457, col_offset=8), [Attribute(Name('self', Load(), lineno=457, col_offset=18), 'value', Load(), lineno=457, col_offset=18)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=458, col_offset=8), 'write', Load(), lineno=458, col_offset=8), [Str('</dateTime.iso8601></value>\n', lineno=458, col_offset=18)], [], None, None, lineno=458, col_offset=8), lineno=458, col_offset=8)], [], lineno=455, col_offset=4)], [], lineno=376, col_offset=0), FunctionDef('_datetime', arguments([Name('data', Param(), lineno=460, col_offset=14)], None, None, []), [Assign([Name('value', Store(), lineno=462, col_offset=4)], Call(Name('DateTime', Load(), lineno=462, col_offset=12), [], [], None, None, lineno=462, col_offset=12), lineno=462, col_offset=4), Expr(Call(Attribute(Name('value', Load(), lineno=463, col_offset=4), 'decode', Load(), lineno=463, col_offset=4), [Name('data', Load(), lineno=463, col_offset=17)], [], None, None, lineno=463, col_offset=4), lineno=463, col_offset=4), Return(Name('value', Load(), lineno=464, col_offset=11), lineno=464, col_offset=4)], [], lineno=460, col_offset=0), FunctionDef('_datetime_type', arguments([Name('data', Param(), lineno=466, col_offset=19)], None, None, []), [Assign([Name('t', Store(), lineno=467, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=467, col_offset=8), 'strptime', Load(), lineno=467, col_offset=8), [Name('data', Load(), lineno=467, col_offset=22), Str('%Y%m%dT%H:%M:%S', lineno=467, col_offset=28)], [], None, None, lineno=467, col_offset=8), lineno=467, col_offset=4), Return(Call(Attribute(Name('datetime', Load(), lineno=468, col_offset=11), 'datetime', Load(), lineno=468, col_offset=11), [], [], Subscript(Call(Name('tuple', Load(), lineno=468, col_offset=30), [Name('t', Load(), lineno=468, col_offset=36)], [], None, None, lineno=468, col_offset=30), Slice(None, Num(6, lineno=468, col_offset=40), None), Load(), lineno=468, col_offset=30), None, lineno=468, col_offset=11), lineno=468, col_offset=4)], [], lineno=466, col_offset=0), Import([alias('base64', None)], lineno=476, col_offset=0), TryExcept([Import([alias('cStringIO', 'StringIO')], lineno=478, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=479, col_offset=7), None, [Import([alias('StringIO', None)], lineno=480, col_offset=4)], lineno=479, col_offset=0)], [], lineno=477, col_offset=0), ClassDef('Binary', [], [Expr(Str('Wrapper for binary data.', lineno=483, col_offset=4), lineno=483, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=485, col_offset=17), Name('data', Param(), lineno=485, col_offset=23)], None, None, [Name('None', Load(), lineno=485, col_offset=28)]), [Assign([Attribute(Name('self', Load(), lineno=486, col_offset=8), 'data', Store(), lineno=486, col_offset=8)], Name('data', Load(), lineno=486, col_offset=20), lineno=486, col_offset=8)], [], lineno=485, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=493, col_offset=16)], None, None, []), [Return(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=494, col_offset=15), 'data', Load(), lineno=494, col_offset=15), Str('', lineno=494, col_offset=28)], lineno=494, col_offset=15), lineno=494, col_offset=8)], [], lineno=493, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=496, col_offset=16), Name('other', Param(), lineno=496, col_offset=22)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=497, col_offset=11), [Name('other', Load(), lineno=497, col_offset=22), Name('Binary', Load(), lineno=497, col_offset=29)], [], None, None, lineno=497, col_offset=11), [Assign([Name('other', Store(), lineno=498, col_offset=12)], Attribute(Name('other', Load(), lineno=498, col_offset=20), 'data', Load(), lineno=498, col_offset=20), lineno=498, col_offset=12)], [], lineno=497, col_offset=8), Return(Call(Name('cmp', Load(), lineno=499, col_offset=15), [Attribute(Name('self', Load(), lineno=499, col_offset=19), 'data', Load(), lineno=499, col_offset=19), Name('other', Load(), lineno=499, col_offset=30)], [], None, None, lineno=499, col_offset=15), lineno=499, col_offset=8)], [], lineno=496, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=501, col_offset=15), Name('data', Param(), lineno=501, col_offset=21)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=502, col_offset=8), 'data', Store(), lineno=502, col_offset=8)], Call(Attribute(Name('base64', Load(), lineno=502, col_offset=20), 'decodestring', Load(), lineno=502, col_offset=20), [Name('data', Load(), lineno=502, col_offset=40)], [], None, None, lineno=502, col_offset=20), lineno=502, col_offset=8)], [], lineno=501, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=504, col_offset=15), Name('out', Param(), lineno=504, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('out', Load(), lineno=505, col_offset=8), 'write', Load(), lineno=505, col_offset=8), [Str('<value><base64>\n', lineno=505, col_offset=18)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8), Expr(Call(Attribute(Name('base64', Load(), lineno=506, col_offset=8), 'encode', Load(), lineno=506, col_offset=8), [Call(Attribute(Name('StringIO', Load(), lineno=506, col_offset=22), 'StringIO', Load(), lineno=506, col_offset=22), [Attribute(Name('self', Load(), lineno=506, col_offset=40), 'data', Load(), lineno=506, col_offset=40)], [], None, None, lineno=506, col_offset=22), Name('out', Load(), lineno=506, col_offset=52)], [], None, None, lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=507, col_offset=8), 'write', Load(), lineno=507, col_offset=8), [Str('</base64></value>\n', lineno=507, col_offset=18)], [], None, None, lineno=507, col_offset=8), lineno=507, col_offset=8)], [], lineno=504, col_offset=4)], [], lineno=482, col_offset=0), FunctionDef('_binary', arguments([Name('data', Param(), lineno=509, col_offset=12)], None, None, []), [Assign([Name('value', Store(), lineno=511, col_offset=4)], Call(Name('Binary', Load(), lineno=511, col_offset=12), [], [], None, None, lineno=511, col_offset=12), lineno=511, col_offset=4), Expr(Call(Attribute(Name('value', Load(), lineno=512, col_offset=4), 'decode', Load(), lineno=512, col_offset=4), [Name('data', Load(), lineno=512, col_offset=17)], [], None, None, lineno=512, col_offset=4), lineno=512, col_offset=4), Return(Name('value', Load(), lineno=513, col_offset=11), lineno=513, col_offset=4)], [], lineno=509, col_offset=0), Assign([Name('WRAPPERS', Store(), lineno=515, col_offset=0)], Tuple([Name('DateTime', Load(), lineno=515, col_offset=12), Name('Binary', Load(), lineno=515, col_offset=22)], Load(), lineno=515, col_offset=12), lineno=515, col_offset=0), If(UnaryOp(Not(), Name('_bool_is_builtin', Load(), lineno=516, col_offset=7), lineno=516, col_offset=3), [Assign([Name('WRAPPERS', Store(), lineno=517, col_offset=4)], BinOp(Name('WRAPPERS', Load(), lineno=517, col_offset=15), Add(), Tuple([Name('Boolean', Load(), lineno=517, col_offset=27)], Load(), lineno=517, col_offset=27), lineno=517, col_offset=15), lineno=517, col_offset=4)], [], lineno=516, col_offset=0), TryExcept([Import([alias('_xmlrpclib', None)], lineno=524, col_offset=4), Assign([Name('FastParser', Store(), lineno=525, col_offset=4)], Attribute(Name('_xmlrpclib', Load(), lineno=525, col_offset=17), 'Parser', Load(), lineno=525, col_offset=17), lineno=525, col_offset=4), Assign([Name('FastUnmarshaller', Store(), lineno=526, col_offset=4)], Attribute(Name('_xmlrpclib', Load(), lineno=526, col_offset=23), 'Unmarshaller', Load(), lineno=526, col_offset=23), lineno=526, col_offset=4)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=527, col_offset=8), Name('ImportError', Load(), lineno=527, col_offset=24)], Load(), lineno=527, col_offset=8), None, [Assign([Name('FastParser', Store(), lineno=528, col_offset=4), Name('FastUnmarshaller', Store(), lineno=528, col_offset=17)], Name('None', Load(), lineno=528, col_offset=36), lineno=528, col_offset=4)], lineno=527, col_offset=0)], [], lineno=522, col_offset=0), TryExcept([Import([alias('_xmlrpclib', None)], lineno=531, col_offset=4), Assign([Name('FastMarshaller', Store(), lineno=532, col_offset=4)], Attribute(Name('_xmlrpclib', Load(), lineno=532, col_offset=21), 'Marshaller', Load(), lineno=532, col_offset=21), lineno=532, col_offset=4)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=533, col_offset=8), Name('ImportError', Load(), lineno=533, col_offset=24)], Load(), lineno=533, col_offset=8), None, [Assign([Name('FastMarshaller', Store(), lineno=534, col_offset=4)], Name('None', Load(), lineno=534, col_offset=21), lineno=534, col_offset=4)], lineno=533, col_offset=0)], [], lineno=530, col_offset=0), TryExcept([ImportFrom('xml.parsers', [alias('expat', None)], 0, lineno=537, col_offset=4), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=538, col_offset=11), [Name('expat', Load(), lineno=538, col_offset=19), Str('ParserCreate', lineno=538, col_offset=26)], [], None, None, lineno=538, col_offset=11), lineno=538, col_offset=7), [Raise(Name('ImportError', Load(), lineno=539, col_offset=14), None, None, lineno=539, col_offset=8)], [], lineno=538, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=540, col_offset=7), None, [Assign([Name('ExpatParser', Store(), lineno=541, col_offset=4)], Name('None', Load(), lineno=541, col_offset=18), lineno=541, col_offset=4)], lineno=540, col_offset=0)], [ClassDef('ExpatParser', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=545, col_offset=21), Name('target', Param(), lineno=545, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=546, col_offset=12), '_parser', Store(), lineno=546, col_offset=12), Name('parser', Store(), lineno=546, col_offset=27)], Call(Attribute(Name('expat', Load(), lineno=546, col_offset=36), 'ParserCreate', Load(), lineno=546, col_offset=36), [Name('None', Load(), lineno=546, col_offset=55), Name('None', Load(), lineno=546, col_offset=61)], [], None, None, lineno=546, col_offset=36), lineno=546, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=547, col_offset=12), '_target', Store(), lineno=547, col_offset=12)], Name('target', Load(), lineno=547, col_offset=27), lineno=547, col_offset=12), Assign([Attribute(Name('parser', Load(), lineno=548, col_offset=12), 'StartElementHandler', Store(), lineno=548, col_offset=12)], Attribute(Name('target', Load(), lineno=548, col_offset=41), 'start', Load(), lineno=548, col_offset=41), lineno=548, col_offset=12), Assign([Attribute(Name('parser', Load(), lineno=549, col_offset=12), 'EndElementHandler', Store(), lineno=549, col_offset=12)], Attribute(Name('target', Load(), lineno=549, col_offset=39), 'end', Load(), lineno=549, col_offset=39), lineno=549, col_offset=12), Assign([Attribute(Name('parser', Load(), lineno=550, col_offset=12), 'CharacterDataHandler', Store(), lineno=550, col_offset=12)], Attribute(Name('target', Load(), lineno=550, col_offset=42), 'data', Load(), lineno=550, col_offset=42), lineno=550, col_offset=12), Assign([Name('encoding', Store(), lineno=551, col_offset=12)], Name('None', Load(), lineno=551, col_offset=23), lineno=551, col_offset=12), If(UnaryOp(Not(), Attribute(Name('parser', Load(), lineno=552, col_offset=19), 'returns_unicode', Load(), lineno=552, col_offset=19), lineno=552, col_offset=15), [Assign([Name('encoding', Store(), lineno=553, col_offset=16)], Str('utf-8', lineno=553, col_offset=27), lineno=553, col_offset=16)], [], lineno=552, col_offset=12), Expr(Call(Attribute(Name('target', Load(), lineno=554, col_offset=12), 'xml', Load(), lineno=554, col_offset=12), [Name('encoding', Load(), lineno=554, col_offset=23), Name('None', Load(), lineno=554, col_offset=33)], [], None, None, lineno=554, col_offset=12), lineno=554, col_offset=12)], [], lineno=545, col_offset=8), FunctionDef('feed', arguments([Name('self', Param(), lineno=556, col_offset=17), Name('data', Param(), lineno=556, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=557, col_offset=12), '_parser', Load(), lineno=557, col_offset=12), 'Parse', Load(), lineno=557, col_offset=12), [Name('data', Load(), lineno=557, col_offset=31), Num(0, lineno=557, col_offset=37)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12)], [], lineno=556, col_offset=8), FunctionDef('close', arguments([Name('self', Param(), lineno=559, col_offset=18)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=560, col_offset=12), '_parser', Load(), lineno=560, col_offset=12), 'Parse', Load(), lineno=560, col_offset=12), [Str('', lineno=560, col_offset=31), Num(1, lineno=560, col_offset=35)], [], None, None, lineno=560, col_offset=12), lineno=560, col_offset=12), Delete([Attribute(Name('self', Load(), lineno=561, col_offset=16), '_target', Del(), lineno=561, col_offset=16), Attribute(Name('self', Load(), lineno=561, col_offset=30), '_parser', Del(), lineno=561, col_offset=30)], lineno=561, col_offset=12)], [], lineno=559, col_offset=8)], [], lineno=543, col_offset=4)], lineno=536, col_offset=0), ClassDef('SlowParser', [], [Expr(Str('Default XML parser (based on xmllib.XMLParser).', lineno=564, col_offset=4), lineno=564, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=566, col_offset=17), Name('target', Param(), lineno=566, col_offset=23)], None, None, []), [Import([alias('xmllib', None)], lineno=567, col_offset=8), If(Compare(Attribute(Name('xmllib', Load(), lineno=568, col_offset=11), 'XMLParser', Load(), lineno=568, col_offset=11), [NotIn()], [Attribute(Name('SlowParser', Load(), lineno=568, col_offset=35), '__bases__', Load(), lineno=568, col_offset=35)], lineno=568, col_offset=11), [Assign([Attribute(Name('SlowParser', Load(), lineno=569, col_offset=12), '__bases__', Store(), lineno=569, col_offset=12)], Tuple([Attribute(Name('xmllib', Load(), lineno=569, col_offset=36), 'XMLParser', Load(), lineno=569, col_offset=36)], Load(), lineno=569, col_offset=36), lineno=569, col_offset=12)], [], lineno=568, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=570, col_offset=8), 'handle_xml', Store(), lineno=570, col_offset=8)], Attribute(Name('target', Load(), lineno=570, col_offset=26), 'xml', Load(), lineno=570, col_offset=26), lineno=570, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=571, col_offset=8), 'unknown_starttag', Store(), lineno=571, col_offset=8)], Attribute(Name('target', Load(), lineno=571, col_offset=32), 'start', Load(), lineno=571, col_offset=32), lineno=571, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=572, col_offset=8), 'handle_data', Store(), lineno=572, col_offset=8)], Attribute(Name('target', Load(), lineno=572, col_offset=27), 'data', Load(), lineno=572, col_offset=27), lineno=572, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=573, col_offset=8), 'handle_cdata', Store(), lineno=573, col_offset=8)], Attribute(Name('target', Load(), lineno=573, col_offset=28), 'data', Load(), lineno=573, col_offset=28), lineno=573, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=574, col_offset=8), 'unknown_endtag', Store(), lineno=574, col_offset=8)], Attribute(Name('target', Load(), lineno=574, col_offset=30), 'end', Load(), lineno=574, col_offset=30), lineno=574, col_offset=8), TryExcept([Expr(Call(Attribute(Attribute(Name('xmllib', Load(), lineno=576, col_offset=12), 'XMLParser', Load(), lineno=576, col_offset=12), '__init__', Load(), lineno=576, col_offset=12), [Name('self', Load(), lineno=576, col_offset=38)], [keyword('accept_utf8', Num(1, lineno=576, col_offset=56))], None, None, lineno=576, col_offset=12), lineno=576, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=577, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('xmllib', Load(), lineno=578, col_offset=12), 'XMLParser', Load(), lineno=578, col_offset=12), '__init__', Load(), lineno=578, col_offset=12), [Name('self', Load(), lineno=578, col_offset=38)], [], None, None, lineno=578, col_offset=12), lineno=578, col_offset=12)], lineno=577, col_offset=8)], [], lineno=575, col_offset=8)], [], lineno=566, col_offset=4)], [], lineno=563, col_offset=0), ClassDef('Marshaller', [], [Expr(Str('Generate an XML-RPC params chunk from a Python data structure.\n\n    Create a Marshaller instance for each set of parameters, and use\n    the "dumps" method to convert your data (represented as a tuple)\n    to an XML-RPC params chunk.  To write a fault response, pass a\n    Fault instance instead.  You may prefer to use the "dumps" module\n    function for this purpose.\n    ', lineno=598, col_offset=-1), lineno=598, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=603, col_offset=17), Name('encoding', Param(), lineno=603, col_offset=23), Name('allow_none', Param(), lineno=603, col_offset=38)], None, None, [Name('None', Load(), lineno=603, col_offset=32), Num(0, lineno=603, col_offset=49)]), [Assign([Attribute(Name('self', Load(), lineno=604, col_offset=8), 'memo', Store(), lineno=604, col_offset=8)], Dict([], [], lineno=604, col_offset=20), lineno=604, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=605, col_offset=8), 'data', Store(), lineno=605, col_offset=8)], Name('None', Load(), lineno=605, col_offset=20), lineno=605, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=606, col_offset=8), 'encoding', Store(), lineno=606, col_offset=8)], Name('encoding', Load(), lineno=606, col_offset=24), lineno=606, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=607, col_offset=8), 'allow_none', Store(), lineno=607, col_offset=8)], Name('allow_none', Load(), lineno=607, col_offset=26), lineno=607, col_offset=8)], [], lineno=603, col_offset=4), Assign([Name('dispatch', Store(), lineno=609, col_offset=4)], Dict([], [], lineno=609, col_offset=15), lineno=609, col_offset=4), FunctionDef('dumps', arguments([Name('self', Param(), lineno=611, col_offset=14), Name('values', Param(), lineno=611, col_offset=20)], None, None, []), [Assign([Name('out', Store(), lineno=612, col_offset=8)], List([], Load(), lineno=612, col_offset=14), lineno=612, col_offset=8), Assign([Name('write', Store(), lineno=613, col_offset=8)], Attribute(Name('out', Load(), lineno=613, col_offset=16), 'append', Load(), lineno=613, col_offset=16), lineno=613, col_offset=8), Assign([Name('dump', Store(), lineno=614, col_offset=8)], Attribute(Name('self', Load(), lineno=614, col_offset=15), '__dump', Load(), lineno=614, col_offset=15), lineno=614, col_offset=8), If(Call(Name('isinstance', Load(), lineno=615, col_offset=11), [Name('values', Load(), lineno=615, col_offset=22), Name('Fault', Load(), lineno=615, col_offset=30)], [], None, None, lineno=615, col_offset=11), [Expr(Call(Name('write', Load(), lineno=617, col_offset=12), [Str('<fault>\n', lineno=617, col_offset=18)], [], None, None, lineno=617, col_offset=12), lineno=617, col_offset=12), Expr(Call(Name('dump', Load(), lineno=618, col_offset=12), [Dict([Str('faultCode', lineno=618, col_offset=18), Str('faultString', lineno=619, col_offset=18)], [Attribute(Name('values', Load(), lineno=618, col_offset=31), 'faultCode', Load(), lineno=618, col_offset=31), Attribute(Name('values', Load(), lineno=619, col_offset=33), 'faultString', Load(), lineno=619, col_offset=33)], lineno=618, col_offset=17), Name('write', Load(), lineno=620, col_offset=17)], [], None, None, lineno=618, col_offset=12), lineno=618, col_offset=12), Expr(Call(Name('write', Load(), lineno=621, col_offset=12), [Str('</fault>\n', lineno=621, col_offset=18)], [], None, None, lineno=621, col_offset=12), lineno=621, col_offset=12)], [Expr(Call(Name('write', Load(), lineno=629, col_offset=12), [Str('<params>\n', lineno=629, col_offset=18)], [], None, None, lineno=629, col_offset=12), lineno=629, col_offset=12), For(Name('v', Store(), lineno=630, col_offset=16), Name('values', Load(), lineno=630, col_offset=21), [Expr(Call(Name('write', Load(), lineno=631, col_offset=16), [Str('<param>\n', lineno=631, col_offset=22)], [], None, None, lineno=631, col_offset=16), lineno=631, col_offset=16), Expr(Call(Name('dump', Load(), lineno=632, col_offset=16), [Name('v', Load(), lineno=632, col_offset=21), Name('write', Load(), lineno=632, col_offset=24)], [], None, None, lineno=632, col_offset=16), lineno=632, col_offset=16), Expr(Call(Name('write', Load(), lineno=633, col_offset=16), [Str('</param>\n', lineno=633, col_offset=22)], [], None, None, lineno=633, col_offset=16), lineno=633, col_offset=16)], [], lineno=630, col_offset=12), Expr(Call(Name('write', Load(), lineno=634, col_offset=12), [Str('</params>\n', lineno=634, col_offset=18)], [], None, None, lineno=634, col_offset=12), lineno=634, col_offset=12)], lineno=615, col_offset=8), Assign([Name('result', Store(), lineno=635, col_offset=8)], Call(Attribute(Name('string', Load(), lineno=635, col_offset=17), 'join', Load(), lineno=635, col_offset=17), [Name('out', Load(), lineno=635, col_offset=29), Str('', lineno=635, col_offset=34)], [], None, None, lineno=635, col_offset=17), lineno=635, col_offset=8), Return(Name('result', Load(), lineno=636, col_offset=15), lineno=636, col_offset=8)], [], lineno=611, col_offset=4), FunctionDef('__dump', arguments([Name('self', Param(), lineno=638, col_offset=15), Name('value', Param(), lineno=638, col_offset=21), Name('write', Param(), lineno=638, col_offset=28)], None, None, []), [TryExcept([Assign([Name('f', Store(), lineno=640, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=640, col_offset=16), 'dispatch', Load(), lineno=640, col_offset=16), Index(Call(Name('type', Load(), lineno=640, col_offset=30), [Name('value', Load(), lineno=640, col_offset=35)], [], None, None, lineno=640, col_offset=30)), Load(), lineno=640, col_offset=16), lineno=640, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=641, col_offset=15), None, [TryExcept([Expr(Attribute(Name('value', Load(), lineno=644, col_offset=16), '__dict__', Load(), lineno=644, col_offset=16), lineno=644, col_offset=16)], [ExceptHandler(None, None, [Raise(Name('TypeError', Load(), lineno=646, col_offset=22), BinOp(Str('cannot marshal %s objects', lineno=646, col_offset=33), Mod(), Call(Name('type', Load(), lineno=646, col_offset=63), [Name('value', Load(), lineno=646, col_offset=68)], [], None, None, lineno=646, col_offset=63), lineno=646, col_offset=33), None, lineno=646, col_offset=16)], lineno=645, col_offset=12)], [], lineno=643, col_offset=12), For(Name('type_', Store(), lineno=650, col_offset=16), Attribute(Call(Name('type', Load(), lineno=650, col_offset=25), [Name('value', Load(), lineno=650, col_offset=30)], [], None, None, lineno=650, col_offset=25), '__mro__', Load(), lineno=650, col_offset=25), [If(Compare(Name('type_', Load(), lineno=651, col_offset=19), [In()], [Call(Attribute(Attribute(Name('self', Load(), lineno=651, col_offset=28), 'dispatch', Load(), lineno=651, col_offset=28), 'keys', Load(), lineno=651, col_offset=28), [], [], None, None, lineno=651, col_offset=28)], lineno=651, col_offset=19), [Raise(Name('TypeError', Load(), lineno=652, col_offset=26), BinOp(Str('cannot marshal %s objects', lineno=652, col_offset=37), Mod(), Call(Name('type', Load(), lineno=652, col_offset=67), [Name('value', Load(), lineno=652, col_offset=72)], [], None, None, lineno=652, col_offset=67), lineno=652, col_offset=37), None, lineno=652, col_offset=20)], [], lineno=651, col_offset=16)], [], lineno=650, col_offset=12), Assign([Name('f', Store(), lineno=653, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=653, col_offset=16), 'dispatch', Load(), lineno=653, col_offset=16), Index(Name('InstanceType', Load(), lineno=653, col_offset=30)), Load(), lineno=653, col_offset=16), lineno=653, col_offset=12)], lineno=641, col_offset=8)], [], lineno=639, col_offset=8), Expr(Call(Name('f', Load(), lineno=654, col_offset=8), [Name('self', Load(), lineno=654, col_offset=10), Name('value', Load(), lineno=654, col_offset=16), Name('write', Load(), lineno=654, col_offset=23)], [], None, None, lineno=654, col_offset=8), lineno=654, col_offset=8)], [], lineno=638, col_offset=4), FunctionDef('dump_nil', arguments([Name('self', Param(), lineno=656, col_offset=18), Name('value', Param(), lineno=656, col_offset=24), Name('write', Param(), lineno=656, col_offset=31)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=657, col_offset=15), 'allow_none', Load(), lineno=657, col_offset=15), lineno=657, col_offset=11), [Raise(Name('TypeError', Load(), lineno=658, col_offset=18), Str('cannot marshal None unless allow_none is enabled', lineno=658, col_offset=29), None, lineno=658, col_offset=12)], [], lineno=657, col_offset=8), Expr(Call(Name('write', Load(), lineno=659, col_offset=8), [Str('<value><nil/></value>', lineno=659, col_offset=14)], [], None, None, lineno=659, col_offset=8), lineno=659, col_offset=8)], [], lineno=656, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=660, col_offset=4), Index(Name('NoneType', Load(), lineno=660, col_offset=13)), Store(), lineno=660, col_offset=4)], Name('dump_nil', Load(), lineno=660, col_offset=25), lineno=660, col_offset=4), FunctionDef('dump_int', arguments([Name('self', Param(), lineno=662, col_offset=17), Name('value', Param(), lineno=662, col_offset=23), Name('write', Param(), lineno=662, col_offset=30)], None, None, []), [If(BoolOp(Or(), [Compare(Name('value', Load(), lineno=664, col_offset=11), [Gt()], [Name('MAXINT', Load(), lineno=664, col_offset=19)], lineno=664, col_offset=11), Compare(Name('value', Load(), lineno=664, col_offset=29), [Lt()], [Name('MININT', Load(), lineno=664, col_offset=37)], lineno=664, col_offset=29)], lineno=664, col_offset=11), [Raise(Name('OverflowError', Load(), lineno=665, col_offset=18), Str('int exceeds XML-RPC limits', lineno=665, col_offset=33), None, lineno=665, col_offset=12)], [], lineno=664, col_offset=8), Expr(Call(Name('write', Load(), lineno=666, col_offset=8), [Str('<value><int>', lineno=666, col_offset=14)], [], None, None, lineno=666, col_offset=8), lineno=666, col_offset=8), Expr(Call(Name('write', Load(), lineno=667, col_offset=8), [Call(Name('str', Load(), lineno=667, col_offset=14), [Name('value', Load(), lineno=667, col_offset=18)], [], None, None, lineno=667, col_offset=14)], [], None, None, lineno=667, col_offset=8), lineno=667, col_offset=8), Expr(Call(Name('write', Load(), lineno=668, col_offset=8), [Str('</int></value>\n', lineno=668, col_offset=14)], [], None, None, lineno=668, col_offset=8), lineno=668, col_offset=8)], [], lineno=662, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=669, col_offset=4), Index(Name('IntType', Load(), lineno=669, col_offset=13)), Store(), lineno=669, col_offset=4)], Name('dump_int', Load(), lineno=669, col_offset=24), lineno=669, col_offset=4), If(Name('_bool_is_builtin', Load(), lineno=671, col_offset=7), [FunctionDef('dump_bool', arguments([Name('self', Param(), lineno=672, col_offset=22), Name('value', Param(), lineno=672, col_offset=28), Name('write', Param(), lineno=672, col_offset=35)], None, None, []), [Expr(Call(Name('write', Load(), lineno=673, col_offset=12), [Str('<value><boolean>', lineno=673, col_offset=18)], [], None, None, lineno=673, col_offset=12), lineno=673, col_offset=12), Expr(Call(Name('write', Load(), lineno=674, col_offset=12), [BoolOp(Or(), [BoolOp(And(), [Name('value', Load(), lineno=674, col_offset=18), Str('1', lineno=674, col_offset=28)], lineno=674, col_offset=18), Str('0', lineno=674, col_offset=35)], lineno=674, col_offset=18)], [], None, None, lineno=674, col_offset=12), lineno=674, col_offset=12), Expr(Call(Name('write', Load(), lineno=675, col_offset=12), [Str('</boolean></value>\n', lineno=675, col_offset=18)], [], None, None, lineno=675, col_offset=12), lineno=675, col_offset=12)], [], lineno=672, col_offset=8), Assign([Subscript(Name('dispatch', Load(), lineno=676, col_offset=8), Index(Name('bool', Load(), lineno=676, col_offset=17)), Store(), lineno=676, col_offset=8)], Name('dump_bool', Load(), lineno=676, col_offset=25), lineno=676, col_offset=8)], [], lineno=671, col_offset=4), FunctionDef('dump_long', arguments([Name('self', Param(), lineno=678, col_offset=18), Name('value', Param(), lineno=678, col_offset=24), Name('write', Param(), lineno=678, col_offset=31)], None, None, []), [If(BoolOp(Or(), [Compare(Name('value', Load(), lineno=679, col_offset=11), [Gt()], [Name('MAXINT', Load(), lineno=679, col_offset=19)], lineno=679, col_offset=11), Compare(Name('value', Load(), lineno=679, col_offset=29), [Lt()], [Name('MININT', Load(), lineno=679, col_offset=37)], lineno=679, col_offset=29)], lineno=679, col_offset=11), [Raise(Name('OverflowError', Load(), lineno=680, col_offset=18), Str('long int exceeds XML-RPC limits', lineno=680, col_offset=33), None, lineno=680, col_offset=12)], [], lineno=679, col_offset=8), Expr(Call(Name('write', Load(), lineno=681, col_offset=8), [Str('<value><int>', lineno=681, col_offset=14)], [], None, None, lineno=681, col_offset=8), lineno=681, col_offset=8), Expr(Call(Name('write', Load(), lineno=682, col_offset=8), [Call(Name('str', Load(), lineno=682, col_offset=14), [Call(Name('int', Load(), lineno=682, col_offset=18), [Name('value', Load(), lineno=682, col_offset=22)], [], None, None, lineno=682, col_offset=18)], [], None, None, lineno=682, col_offset=14)], [], None, None, lineno=682, col_offset=8), lineno=682, col_offset=8), Expr(Call(Name('write', Load(), lineno=683, col_offset=8), [Str('</int></value>\n', lineno=683, col_offset=14)], [], None, None, lineno=683, col_offset=8), lineno=683, col_offset=8)], [], lineno=678, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=684, col_offset=4), Index(Name('LongType', Load(), lineno=684, col_offset=13)), Store(), lineno=684, col_offset=4)], Name('dump_long', Load(), lineno=684, col_offset=25), lineno=684, col_offset=4), FunctionDef('dump_double', arguments([Name('self', Param(), lineno=686, col_offset=20), Name('value', Param(), lineno=686, col_offset=26), Name('write', Param(), lineno=686, col_offset=33)], None, None, []), [Expr(Call(Name('write', Load(), lineno=687, col_offset=8), [Str('<value><double>', lineno=687, col_offset=14)], [], None, None, lineno=687, col_offset=8), lineno=687, col_offset=8), Expr(Call(Name('write', Load(), lineno=688, col_offset=8), [Call(Name('repr', Load(), lineno=688, col_offset=14), [Name('value', Load(), lineno=688, col_offset=19)], [], None, None, lineno=688, col_offset=14)], [], None, None, lineno=688, col_offset=8), lineno=688, col_offset=8), Expr(Call(Name('write', Load(), lineno=689, col_offset=8), [Str('</double></value>\n', lineno=689, col_offset=14)], [], None, None, lineno=689, col_offset=8), lineno=689, col_offset=8)], [], lineno=686, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=690, col_offset=4), Index(Name('FloatType', Load(), lineno=690, col_offset=13)), Store(), lineno=690, col_offset=4)], Name('dump_double', Load(), lineno=690, col_offset=26), lineno=690, col_offset=4), FunctionDef('dump_string', arguments([Name('self', Param(), lineno=692, col_offset=20), Name('value', Param(), lineno=692, col_offset=26), Name('write', Param(), lineno=692, col_offset=33), Name('escape', Param(), lineno=692, col_offset=40)], None, None, [Name('escape', Load(), lineno=692, col_offset=47)]), [Expr(Call(Name('write', Load(), lineno=693, col_offset=8), [Str('<value><string>', lineno=693, col_offset=14)], [], None, None, lineno=693, col_offset=8), lineno=693, col_offset=8), Expr(Call(Name('write', Load(), lineno=694, col_offset=8), [Call(Name('escape', Load(), lineno=694, col_offset=14), [Name('value', Load(), lineno=694, col_offset=21)], [], None, None, lineno=694, col_offset=14)], [], None, None, lineno=694, col_offset=8), lineno=694, col_offset=8), Expr(Call(Name('write', Load(), lineno=695, col_offset=8), [Str('</string></value>\n', lineno=695, col_offset=14)], [], None, None, lineno=695, col_offset=8), lineno=695, col_offset=8)], [], lineno=692, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=696, col_offset=4), Index(Name('StringType', Load(), lineno=696, col_offset=13)), Store(), lineno=696, col_offset=4)], Name('dump_string', Load(), lineno=696, col_offset=27), lineno=696, col_offset=4), If(Name('unicode', Load(), lineno=698, col_offset=7), [FunctionDef('dump_unicode', arguments([Name('self', Param(), lineno=699, col_offset=25), Name('value', Param(), lineno=699, col_offset=31), Name('write', Param(), lineno=699, col_offset=38), Name('escape', Param(), lineno=699, col_offset=45)], None, None, [Name('escape', Load(), lineno=699, col_offset=52)]), [Assign([Name('value', Store(), lineno=700, col_offset=12)], Call(Attribute(Name('value', Load(), lineno=700, col_offset=20), 'encode', Load(), lineno=700, col_offset=20), [Attribute(Name('self', Load(), lineno=700, col_offset=33), 'encoding', Load(), lineno=700, col_offset=33)], [], None, None, lineno=700, col_offset=20), lineno=700, col_offset=12), Expr(Call(Name('write', Load(), lineno=701, col_offset=12), [Str('<value><string>', lineno=701, col_offset=18)], [], None, None, lineno=701, col_offset=12), lineno=701, col_offset=12), Expr(Call(Name('write', Load(), lineno=702, col_offset=12), [Call(Name('escape', Load(), lineno=702, col_offset=18), [Name('value', Load(), lineno=702, col_offset=25)], [], None, None, lineno=702, col_offset=18)], [], None, None, lineno=702, col_offset=12), lineno=702, col_offset=12), Expr(Call(Name('write', Load(), lineno=703, col_offset=12), [Str('</string></value>\n', lineno=703, col_offset=18)], [], None, None, lineno=703, col_offset=12), lineno=703, col_offset=12)], [], lineno=699, col_offset=8), Assign([Subscript(Name('dispatch', Load(), lineno=704, col_offset=8), Index(Name('UnicodeType', Load(), lineno=704, col_offset=17)), Store(), lineno=704, col_offset=8)], Name('dump_unicode', Load(), lineno=704, col_offset=32), lineno=704, col_offset=8)], [], lineno=698, col_offset=4), FunctionDef('dump_array', arguments([Name('self', Param(), lineno=706, col_offset=19), Name('value', Param(), lineno=706, col_offset=25), Name('write', Param(), lineno=706, col_offset=32)], None, None, []), [Assign([Name('i', Store(), lineno=707, col_offset=8)], Call(Name('id', Load(), lineno=707, col_offset=12), [Name('value', Load(), lineno=707, col_offset=15)], [], None, None, lineno=707, col_offset=12), lineno=707, col_offset=8), If(Compare(Name('i', Load(), lineno=708, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=708, col_offset=16), 'memo', Load(), lineno=708, col_offset=16)], lineno=708, col_offset=11), [Raise(Name('TypeError', Load(), lineno=709, col_offset=18), Str('cannot marshal recursive sequences', lineno=709, col_offset=29), None, lineno=709, col_offset=12)], [], lineno=708, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=710, col_offset=8), 'memo', Load(), lineno=710, col_offset=8), Index(Name('i', Load(), lineno=710, col_offset=18)), Store(), lineno=710, col_offset=8)], Name('None', Load(), lineno=710, col_offset=23), lineno=710, col_offset=8), Assign([Name('dump', Store(), lineno=711, col_offset=8)], Attribute(Name('self', Load(), lineno=711, col_offset=15), '__dump', Load(), lineno=711, col_offset=15), lineno=711, col_offset=8), Expr(Call(Name('write', Load(), lineno=712, col_offset=8), [Str('<value><array><data>\n', lineno=712, col_offset=14)], [], None, None, lineno=712, col_offset=8), lineno=712, col_offset=8), For(Name('v', Store(), lineno=713, col_offset=12), Name('value', Load(), lineno=713, col_offset=17), [Expr(Call(Name('dump', Load(), lineno=714, col_offset=12), [Name('v', Load(), lineno=714, col_offset=17), Name('write', Load(), lineno=714, col_offset=20)], [], None, None, lineno=714, col_offset=12), lineno=714, col_offset=12)], [], lineno=713, col_offset=8), Expr(Call(Name('write', Load(), lineno=715, col_offset=8), [Str('</data></array></value>\n', lineno=715, col_offset=14)], [], None, None, lineno=715, col_offset=8), lineno=715, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=716, col_offset=12), 'memo', Load(), lineno=716, col_offset=12), Index(Name('i', Load(), lineno=716, col_offset=22)), Del(), lineno=716, col_offset=12)], lineno=716, col_offset=8)], [], lineno=706, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=717, col_offset=4), Index(Name('TupleType', Load(), lineno=717, col_offset=13)), Store(), lineno=717, col_offset=4)], Name('dump_array', Load(), lineno=717, col_offset=26), lineno=717, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=718, col_offset=4), Index(Name('ListType', Load(), lineno=718, col_offset=13)), Store(), lineno=718, col_offset=4)], Name('dump_array', Load(), lineno=718, col_offset=25), lineno=718, col_offset=4), FunctionDef('dump_struct', arguments([Name('self', Param(), lineno=720, col_offset=20), Name('value', Param(), lineno=720, col_offset=26), Name('write', Param(), lineno=720, col_offset=33), Name('escape', Param(), lineno=720, col_offset=40)], None, None, [Name('escape', Load(), lineno=720, col_offset=47)]), [Assign([Name('i', Store(), lineno=721, col_offset=8)], Call(Name('id', Load(), lineno=721, col_offset=12), [Name('value', Load(), lineno=721, col_offset=15)], [], None, None, lineno=721, col_offset=12), lineno=721, col_offset=8), If(Compare(Name('i', Load(), lineno=722, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=722, col_offset=16), 'memo', Load(), lineno=722, col_offset=16)], lineno=722, col_offset=11), [Raise(Name('TypeError', Load(), lineno=723, col_offset=18), Str('cannot marshal recursive dictionaries', lineno=723, col_offset=29), None, lineno=723, col_offset=12)], [], lineno=722, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=724, col_offset=8), 'memo', Load(), lineno=724, col_offset=8), Index(Name('i', Load(), lineno=724, col_offset=18)), Store(), lineno=724, col_offset=8)], Name('None', Load(), lineno=724, col_offset=23), lineno=724, col_offset=8), Assign([Name('dump', Store(), lineno=725, col_offset=8)], Attribute(Name('self', Load(), lineno=725, col_offset=15), '__dump', Load(), lineno=725, col_offset=15), lineno=725, col_offset=8), Expr(Call(Name('write', Load(), lineno=726, col_offset=8), [Str('<value><struct>\n', lineno=726, col_offset=14)], [], None, None, lineno=726, col_offset=8), lineno=726, col_offset=8), For(Tuple([Name('k', Store(), lineno=727, col_offset=12), Name('v', Store(), lineno=727, col_offset=15)], Store(), lineno=727, col_offset=12), Call(Attribute(Name('value', Load(), lineno=727, col_offset=20), 'items', Load(), lineno=727, col_offset=20), [], [], None, None, lineno=727, col_offset=20), [Expr(Call(Name('write', Load(), lineno=728, col_offset=12), [Str('<member>\n', lineno=728, col_offset=18)], [], None, None, lineno=728, col_offset=12), lineno=728, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=729, col_offset=15), [Name('k', Load(), lineno=729, col_offset=20)], [], None, None, lineno=729, col_offset=15), [IsNot()], [Name('StringType', Load(), lineno=729, col_offset=30)], lineno=729, col_offset=15), [If(BoolOp(And(), [Name('unicode', Load(), lineno=730, col_offset=19), Compare(Call(Name('type', Load(), lineno=730, col_offset=31), [Name('k', Load(), lineno=730, col_offset=36)], [], None, None, lineno=730, col_offset=31), [Is()], [Name('UnicodeType', Load(), lineno=730, col_offset=42)], lineno=730, col_offset=31)], lineno=730, col_offset=19), [Assign([Name('k', Store(), lineno=731, col_offset=20)], Call(Attribute(Name('k', Load(), lineno=731, col_offset=24), 'encode', Load(), lineno=731, col_offset=24), [Attribute(Name('self', Load(), lineno=731, col_offset=33), 'encoding', Load(), lineno=731, col_offset=33)], [], None, None, lineno=731, col_offset=24), lineno=731, col_offset=20)], [Raise(Name('TypeError', Load(), lineno=733, col_offset=26), Str('dictionary key must be string', lineno=733, col_offset=37), None, lineno=733, col_offset=20)], lineno=730, col_offset=16)], [], lineno=729, col_offset=12), Expr(Call(Name('write', Load(), lineno=734, col_offset=12), [BinOp(Str('<name>%s</name>\n', lineno=734, col_offset=18), Mod(), Call(Name('escape', Load(), lineno=734, col_offset=40), [Name('k', Load(), lineno=734, col_offset=47)], [], None, None, lineno=734, col_offset=40), lineno=734, col_offset=18)], [], None, None, lineno=734, col_offset=12), lineno=734, col_offset=12), Expr(Call(Name('dump', Load(), lineno=735, col_offset=12), [Name('v', Load(), lineno=735, col_offset=17), Name('write', Load(), lineno=735, col_offset=20)], [], None, None, lineno=735, col_offset=12), lineno=735, col_offset=12), Expr(Call(Name('write', Load(), lineno=736, col_offset=12), [Str('</member>\n', lineno=736, col_offset=18)], [], None, None, lineno=736, col_offset=12), lineno=736, col_offset=12)], [], lineno=727, col_offset=8), Expr(Call(Name('write', Load(), lineno=737, col_offset=8), [Str('</struct></value>\n', lineno=737, col_offset=14)], [], None, None, lineno=737, col_offset=8), lineno=737, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=738, col_offset=12), 'memo', Load(), lineno=738, col_offset=12), Index(Name('i', Load(), lineno=738, col_offset=22)), Del(), lineno=738, col_offset=12)], lineno=738, col_offset=8)], [], lineno=720, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=739, col_offset=4), Index(Name('DictType', Load(), lineno=739, col_offset=13)), Store(), lineno=739, col_offset=4)], Name('dump_struct', Load(), lineno=739, col_offset=25), lineno=739, col_offset=4), If(Name('datetime', Load(), lineno=741, col_offset=7), [FunctionDef('dump_datetime', arguments([Name('self', Param(), lineno=742, col_offset=26), Name('value', Param(), lineno=742, col_offset=32), Name('write', Param(), lineno=742, col_offset=39)], None, None, []), [Expr(Call(Name('write', Load(), lineno=743, col_offset=12), [Str('<value><dateTime.iso8601>', lineno=743, col_offset=18)], [], None, None, lineno=743, col_offset=12), lineno=743, col_offset=12), Expr(Call(Name('write', Load(), lineno=744, col_offset=12), [Call(Name('_strftime', Load(), lineno=744, col_offset=18), [Name('value', Load(), lineno=744, col_offset=28)], [], None, None, lineno=744, col_offset=18)], [], None, None, lineno=744, col_offset=12), lineno=744, col_offset=12), Expr(Call(Name('write', Load(), lineno=745, col_offset=12), [Str('</dateTime.iso8601></value>\n', lineno=745, col_offset=18)], [], None, None, lineno=745, col_offset=12), lineno=745, col_offset=12)], [], lineno=742, col_offset=8), Assign([Subscript(Name('dispatch', Load(), lineno=746, col_offset=8), Index(Attribute(Name('datetime', Load(), lineno=746, col_offset=17), 'datetime', Load(), lineno=746, col_offset=17)), Store(), lineno=746, col_offset=8)], Name('dump_datetime', Load(), lineno=746, col_offset=38), lineno=746, col_offset=8)], [], lineno=741, col_offset=4), FunctionDef('dump_instance', arguments([Name('self', Param(), lineno=748, col_offset=22), Name('value', Param(), lineno=748, col_offset=28), Name('write', Param(), lineno=748, col_offset=35)], None, None, []), [If(Compare(Attribute(Name('value', Load(), lineno=750, col_offset=11), '__class__', Load(), lineno=750, col_offset=11), [In()], [Name('WRAPPERS', Load(), lineno=750, col_offset=30)], lineno=750, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=751, col_offset=12), 'write', Store(), lineno=751, col_offset=12)], Name('write', Load(), lineno=751, col_offset=25), lineno=751, col_offset=12), Expr(Call(Attribute(Name('value', Load(), lineno=752, col_offset=12), 'encode', Load(), lineno=752, col_offset=12), [Name('self', Load(), lineno=752, col_offset=25)], [], None, None, lineno=752, col_offset=12), lineno=752, col_offset=12), Delete([Attribute(Name('self', Load(), lineno=753, col_offset=16), 'write', Del(), lineno=753, col_offset=16)], lineno=753, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=756, col_offset=12), 'dump_struct', Load(), lineno=756, col_offset=12), [Attribute(Name('value', Load(), lineno=756, col_offset=29), '__dict__', Load(), lineno=756, col_offset=29), Name('write', Load(), lineno=756, col_offset=45)], [], None, None, lineno=756, col_offset=12), lineno=756, col_offset=12)], lineno=750, col_offset=8)], [], lineno=748, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=757, col_offset=4), Index(Name('InstanceType', Load(), lineno=757, col_offset=13)), Store(), lineno=757, col_offset=4)], Name('dump_instance', Load(), lineno=757, col_offset=29), lineno=757, col_offset=4)], [], lineno=590, col_offset=0), ClassDef('Unmarshaller', [], [Expr(Str('Unmarshal an XML-RPC response, based on incoming XML event\n    messages (start, data, end).  Call close() to get the resulting\n    data structure.\n\n    Note that this reader is fairly tolerant, and gladly accepts bogus\n    XML-RPC data without complaining (but not bogus XML).\n    ', lineno=771, col_offset=-1), lineno=771, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=776, col_offset=17), Name('use_datetime', Param(), lineno=776, col_offset=23)], None, None, [Num(0, lineno=776, col_offset=36)]), [Assign([Attribute(Name('self', Load(), lineno=777, col_offset=8), '_type', Store(), lineno=777, col_offset=8)], Name('None', Load(), lineno=777, col_offset=21), lineno=777, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=778, col_offset=8), '_stack', Store(), lineno=778, col_offset=8)], List([], Load(), lineno=778, col_offset=22), lineno=778, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=779, col_offset=8), '_marks', Store(), lineno=779, col_offset=8)], List([], Load(), lineno=779, col_offset=22), lineno=779, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=780, col_offset=8), '_data', Store(), lineno=780, col_offset=8)], List([], Load(), lineno=780, col_offset=21), lineno=780, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=781, col_offset=8), '_methodname', Store(), lineno=781, col_offset=8)], Name('None', Load(), lineno=781, col_offset=27), lineno=781, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=782, col_offset=8), '_encoding', Store(), lineno=782, col_offset=8)], Str('utf-8', lineno=782, col_offset=25), lineno=782, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=783, col_offset=8), 'append', Store(), lineno=783, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=783, col_offset=22), '_stack', Load(), lineno=783, col_offset=22), 'append', Load(), lineno=783, col_offset=22), lineno=783, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=784, col_offset=8), '_use_datetime', Store(), lineno=784, col_offset=8)], Name('use_datetime', Load(), lineno=784, col_offset=29), lineno=784, col_offset=8), If(BoolOp(And(), [Name('use_datetime', Load(), lineno=785, col_offset=11), UnaryOp(Not(), Name('datetime', Load(), lineno=785, col_offset=32), lineno=785, col_offset=28)], lineno=785, col_offset=11), [Raise(Name('ValueError', Load(), lineno=786, col_offset=18), Str('the datetime module is not available', lineno=786, col_offset=30), None, lineno=786, col_offset=12)], [], lineno=785, col_offset=8)], [], lineno=776, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=788, col_offset=14)], None, None, []), [If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=790, col_offset=11), '_type', Load(), lineno=790, col_offset=11), [Is()], [Name('None', Load(), lineno=790, col_offset=25)], lineno=790, col_offset=11), Attribute(Name('self', Load(), lineno=790, col_offset=33), '_marks', Load(), lineno=790, col_offset=33)], lineno=790, col_offset=11), [Raise(Call(Name('ResponseError', Load(), lineno=791, col_offset=18), [], [], None, None, lineno=791, col_offset=18), None, None, lineno=791, col_offset=12)], [], lineno=790, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=792, col_offset=11), '_type', Load(), lineno=792, col_offset=11), [Eq()], [Str('fault', lineno=792, col_offset=25)], lineno=792, col_offset=11), [Raise(Call(Name('Fault', Load(), lineno=793, col_offset=18), [], [], None, Subscript(Attribute(Name('self', Load(), lineno=793, col_offset=26), '_stack', Load(), lineno=793, col_offset=26), Index(Num(0, lineno=793, col_offset=38)), Load(), lineno=793, col_offset=26), lineno=793, col_offset=18), None, None, lineno=793, col_offset=12)], [], lineno=792, col_offset=8), Return(Call(Name('tuple', Load(), lineno=794, col_offset=15), [Attribute(Name('self', Load(), lineno=794, col_offset=21), '_stack', Load(), lineno=794, col_offset=21)], [], None, None, lineno=794, col_offset=15), lineno=794, col_offset=8)], [], lineno=788, col_offset=4), FunctionDef('getmethodname', arguments([Name('self', Param(), lineno=796, col_offset=22)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=797, col_offset=15), '_methodname', Load(), lineno=797, col_offset=15), lineno=797, col_offset=8)], [], lineno=796, col_offset=4), FunctionDef('xml', arguments([Name('self', Param(), lineno=802, col_offset=12), Name('encoding', Param(), lineno=802, col_offset=18), Name('standalone', Param(), lineno=802, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=803, col_offset=8), '_encoding', Store(), lineno=803, col_offset=8)], Name('encoding', Load(), lineno=803, col_offset=25), lineno=803, col_offset=8)], [], lineno=802, col_offset=4), FunctionDef('start', arguments([Name('self', Param(), lineno=806, col_offset=14), Name('tag', Param(), lineno=806, col_offset=20), Name('attrs', Param(), lineno=806, col_offset=25)], None, None, []), [If(BoolOp(Or(), [Compare(Name('tag', Load(), lineno=808, col_offset=11), [Eq()], [Str('array', lineno=808, col_offset=18)], lineno=808, col_offset=11), Compare(Name('tag', Load(), lineno=808, col_offset=29), [Eq()], [Str('struct', lineno=808, col_offset=36)], lineno=808, col_offset=29)], lineno=808, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=809, col_offset=12), '_marks', Load(), lineno=809, col_offset=12), 'append', Load(), lineno=809, col_offset=12), [Call(Name('len', Load(), lineno=809, col_offset=31), [Attribute(Name('self', Load(), lineno=809, col_offset=35), '_stack', Load(), lineno=809, col_offset=35)], [], None, None, lineno=809, col_offset=31)], [], None, None, lineno=809, col_offset=12), lineno=809, col_offset=12)], [], lineno=808, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=810, col_offset=8), '_data', Store(), lineno=810, col_offset=8)], List([], Load(), lineno=810, col_offset=21), lineno=810, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=811, col_offset=8), '_value', Store(), lineno=811, col_offset=8)], Compare(Name('tag', Load(), lineno=811, col_offset=23), [Eq()], [Str('value', lineno=811, col_offset=30)], lineno=811, col_offset=23), lineno=811, col_offset=8)], [], lineno=806, col_offset=4), FunctionDef('data', arguments([Name('self', Param(), lineno=813, col_offset=13), Name('text', Param(), lineno=813, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=814, col_offset=8), '_data', Load(), lineno=814, col_offset=8), 'append', Load(), lineno=814, col_offset=8), [Name('text', Load(), lineno=814, col_offset=26)], [], None, None, lineno=814, col_offset=8), lineno=814, col_offset=8)], [], lineno=813, col_offset=4), FunctionDef('end', arguments([Name('self', Param(), lineno=816, col_offset=12), Name('tag', Param(), lineno=816, col_offset=18), Name('join', Param(), lineno=816, col_offset=23)], None, None, [Attribute(Name('string', Load(), lineno=816, col_offset=28), 'join', Load(), lineno=816, col_offset=28)]), [TryExcept([Assign([Name('f', Store(), lineno=819, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=819, col_offset=16), 'dispatch', Load(), lineno=819, col_offset=16), Index(Name('tag', Load(), lineno=819, col_offset=30)), Load(), lineno=819, col_offset=16), lineno=819, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=820, col_offset=15), None, [Pass( lineno=821, col_offset=12)], lineno=820, col_offset=8)], [Return(Call(Name('f', Load(), lineno=823, col_offset=19), [Name('self', Load(), lineno=823, col_offset=21), Call(Name('join', Load(), lineno=823, col_offset=27), [Attribute(Name('self', Load(), lineno=823, col_offset=32), '_data', Load(), lineno=823, col_offset=32), Str('', lineno=823, col_offset=44)], [], None, None, lineno=823, col_offset=27)], [], None, None, lineno=823, col_offset=19), lineno=823, col_offset=12)], lineno=818, col_offset=8)], [], lineno=816, col_offset=4), FunctionDef('end_dispatch', arguments([Name('self', Param(), lineno=828, col_offset=21), Name('tag', Param(), lineno=828, col_offset=27), Name('data', Param(), lineno=828, col_offset=32)], None, None, []), [TryExcept([Assign([Name('f', Store(), lineno=831, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=831, col_offset=16), 'dispatch', Load(), lineno=831, col_offset=16), Index(Name('tag', Load(), lineno=831, col_offset=30)), Load(), lineno=831, col_offset=16), lineno=831, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=832, col_offset=15), None, [Pass( lineno=833, col_offset=12)], lineno=832, col_offset=8)], [Return(Call(Name('f', Load(), lineno=835, col_offset=19), [Name('self', Load(), lineno=835, col_offset=21), Name('data', Load(), lineno=835, col_offset=27)], [], None, None, lineno=835, col_offset=19), lineno=835, col_offset=12)], lineno=830, col_offset=8)], [], lineno=828, col_offset=4), Assign([Name('dispatch', Store(), lineno=840, col_offset=4)], Dict([], [], lineno=840, col_offset=15), lineno=840, col_offset=4), FunctionDef('end_nil', arguments([Name('self', Param(), lineno=842, col_offset=17), Name('data', Param(), lineno=842, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=843, col_offset=8), 'append', Load(), lineno=843, col_offset=8), [Name('None', Load(), lineno=843, col_offset=20)], [], None, None, lineno=843, col_offset=8), lineno=843, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=844, col_offset=8), '_value', Store(), lineno=844, col_offset=8)], Num(0, lineno=844, col_offset=22), lineno=844, col_offset=8)], [], lineno=842, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=845, col_offset=4), Index(Str('nil', lineno=845, col_offset=13)), Store(), lineno=845, col_offset=4)], Name('end_nil', Load(), lineno=845, col_offset=22), lineno=845, col_offset=4), FunctionDef('end_boolean', arguments([Name('self', Param(), lineno=847, col_offset=20), Name('data', Param(), lineno=847, col_offset=26)], None, None, []), [If(Compare(Name('data', Load(), lineno=848, col_offset=11), [Eq()], [Str('0', lineno=848, col_offset=19)], lineno=848, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=849, col_offset=12), 'append', Load(), lineno=849, col_offset=12), [Name('False', Load(), lineno=849, col_offset=24)], [], None, None, lineno=849, col_offset=12), lineno=849, col_offset=12)], [If(Compare(Name('data', Load(), lineno=850, col_offset=13), [Eq()], [Str('1', lineno=850, col_offset=21)], lineno=850, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=851, col_offset=12), 'append', Load(), lineno=851, col_offset=12), [Name('True', Load(), lineno=851, col_offset=24)], [], None, None, lineno=851, col_offset=12), lineno=851, col_offset=12)], [Raise(Name('TypeError', Load(), lineno=853, col_offset=18), Str('bad boolean value', lineno=853, col_offset=29), None, lineno=853, col_offset=12)], lineno=850, col_offset=13)], lineno=848, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=854, col_offset=8), '_value', Store(), lineno=854, col_offset=8)], Num(0, lineno=854, col_offset=22), lineno=854, col_offset=8)], [], lineno=847, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=855, col_offset=4), Index(Str('boolean', lineno=855, col_offset=13)), Store(), lineno=855, col_offset=4)], Name('end_boolean', Load(), lineno=855, col_offset=26), lineno=855, col_offset=4), FunctionDef('end_int', arguments([Name('self', Param(), lineno=857, col_offset=16), Name('data', Param(), lineno=857, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=858, col_offset=8), 'append', Load(), lineno=858, col_offset=8), [Call(Name('int', Load(), lineno=858, col_offset=20), [Name('data', Load(), lineno=858, col_offset=24)], [], None, None, lineno=858, col_offset=20)], [], None, None, lineno=858, col_offset=8), lineno=858, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=859, col_offset=8), '_value', Store(), lineno=859, col_offset=8)], Num(0, lineno=859, col_offset=22), lineno=859, col_offset=8)], [], lineno=857, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=860, col_offset=4), Index(Str('i4', lineno=860, col_offset=13)), Store(), lineno=860, col_offset=4)], Name('end_int', Load(), lineno=860, col_offset=21), lineno=860, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=861, col_offset=4), Index(Str('i8', lineno=861, col_offset=13)), Store(), lineno=861, col_offset=4)], Name('end_int', Load(), lineno=861, col_offset=21), lineno=861, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=862, col_offset=4), Index(Str('int', lineno=862, col_offset=13)), Store(), lineno=862, col_offset=4)], Name('end_int', Load(), lineno=862, col_offset=22), lineno=862, col_offset=4), FunctionDef('end_double', arguments([Name('self', Param(), lineno=864, col_offset=19), Name('data', Param(), lineno=864, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=865, col_offset=8), 'append', Load(), lineno=865, col_offset=8), [Call(Name('float', Load(), lineno=865, col_offset=20), [Name('data', Load(), lineno=865, col_offset=26)], [], None, None, lineno=865, col_offset=20)], [], None, None, lineno=865, col_offset=8), lineno=865, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=866, col_offset=8), '_value', Store(), lineno=866, col_offset=8)], Num(0, lineno=866, col_offset=22), lineno=866, col_offset=8)], [], lineno=864, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=867, col_offset=4), Index(Str('double', lineno=867, col_offset=13)), Store(), lineno=867, col_offset=4)], Name('end_double', Load(), lineno=867, col_offset=25), lineno=867, col_offset=4), FunctionDef('end_string', arguments([Name('self', Param(), lineno=869, col_offset=19), Name('data', Param(), lineno=869, col_offset=25)], None, None, []), [If(Attribute(Name('self', Load(), lineno=870, col_offset=11), '_encoding', Load(), lineno=870, col_offset=11), [Assign([Name('data', Store(), lineno=871, col_offset=12)], Call(Name('_decode', Load(), lineno=871, col_offset=19), [Name('data', Load(), lineno=871, col_offset=27), Attribute(Name('self', Load(), lineno=871, col_offset=33), '_encoding', Load(), lineno=871, col_offset=33)], [], None, None, lineno=871, col_offset=19), lineno=871, col_offset=12)], [], lineno=870, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=872, col_offset=8), 'append', Load(), lineno=872, col_offset=8), [Call(Name('_stringify', Load(), lineno=872, col_offset=20), [Name('data', Load(), lineno=872, col_offset=31)], [], None, None, lineno=872, col_offset=20)], [], None, None, lineno=872, col_offset=8), lineno=872, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=873, col_offset=8), '_value', Store(), lineno=873, col_offset=8)], Num(0, lineno=873, col_offset=22), lineno=873, col_offset=8)], [], lineno=869, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=874, col_offset=4), Index(Str('string', lineno=874, col_offset=13)), Store(), lineno=874, col_offset=4)], Name('end_string', Load(), lineno=874, col_offset=25), lineno=874, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=875, col_offset=4), Index(Str('name', lineno=875, col_offset=13)), Store(), lineno=875, col_offset=4)], Name('end_string', Load(), lineno=875, col_offset=23), lineno=875, col_offset=4), FunctionDef('end_array', arguments([Name('self', Param(), lineno=877, col_offset=18), Name('data', Param(), lineno=877, col_offset=24)], None, None, []), [Assign([Name('mark', Store(), lineno=878, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=878, col_offset=15), '_marks', Load(), lineno=878, col_offset=15), 'pop', Load(), lineno=878, col_offset=15), [], [], None, None, lineno=878, col_offset=15), lineno=878, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=880, col_offset=8), '_stack', Load(), lineno=880, col_offset=8), Slice(Name('mark', Load(), lineno=880, col_offset=20), None, None), Store(), lineno=880, col_offset=8)], List([Subscript(Attribute(Name('self', Load(), lineno=880, col_offset=30), '_stack', Load(), lineno=880, col_offset=30), Slice(Name('mark', Load(), lineno=880, col_offset=42), None, None), Load(), lineno=880, col_offset=30)], Load(), lineno=880, col_offset=29), lineno=880, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=881, col_offset=8), '_value', Store(), lineno=881, col_offset=8)], Num(0, lineno=881, col_offset=22), lineno=881, col_offset=8)], [], lineno=877, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=882, col_offset=4), Index(Str('array', lineno=882, col_offset=13)), Store(), lineno=882, col_offset=4)], Name('end_array', Load(), lineno=882, col_offset=24), lineno=882, col_offset=4), FunctionDef('end_struct', arguments([Name('self', Param(), lineno=884, col_offset=19), Name('data', Param(), lineno=884, col_offset=25)], None, None, []), [Assign([Name('mark', Store(), lineno=885, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=885, col_offset=15), '_marks', Load(), lineno=885, col_offset=15), 'pop', Load(), lineno=885, col_offset=15), [], [], None, None, lineno=885, col_offset=15), lineno=885, col_offset=8), Assign([Name('dict', Store(), lineno=887, col_offset=8)], Dict([], [], lineno=887, col_offset=15), lineno=887, col_offset=8), Assign([Name('items', Store(), lineno=888, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=888, col_offset=16), '_stack', Load(), lineno=888, col_offset=16), Slice(Name('mark', Load(), lineno=888, col_offset=28), None, None), Load(), lineno=888, col_offset=16), lineno=888, col_offset=8), For(Name('i', Store(), lineno=889, col_offset=12), Call(Name('range', Load(), lineno=889, col_offset=17), [Num(0, lineno=889, col_offset=23), Call(Name('len', Load(), lineno=889, col_offset=26), [Name('items', Load(), lineno=889, col_offset=30)], [], None, None, lineno=889, col_offset=26), Num(2, lineno=889, col_offset=38)], [], None, None, lineno=889, col_offset=17), [Assign([Subscript(Name('dict', Load(), lineno=890, col_offset=12), Index(Call(Name('_stringify', Load(), lineno=890, col_offset=17), [Subscript(Name('items', Load(), lineno=890, col_offset=28), Index(Name('i', Load(), lineno=890, col_offset=34)), Load(), lineno=890, col_offset=28)], [], None, None, lineno=890, col_offset=17)), Store(), lineno=890, col_offset=12)], Subscript(Name('items', Load(), lineno=890, col_offset=41), Index(BinOp(Name('i', Load(), lineno=890, col_offset=47), Add(), Num(1, lineno=890, col_offset=49), lineno=890, col_offset=47)), Load(), lineno=890, col_offset=41), lineno=890, col_offset=12)], [], lineno=889, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=891, col_offset=8), '_stack', Load(), lineno=891, col_offset=8), Slice(Name('mark', Load(), lineno=891, col_offset=20), None, None), Store(), lineno=891, col_offset=8)], List([Name('dict', Load(), lineno=891, col_offset=30)], Load(), lineno=891, col_offset=29), lineno=891, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=892, col_offset=8), '_value', Store(), lineno=892, col_offset=8)], Num(0, lineno=892, col_offset=22), lineno=892, col_offset=8)], [], lineno=884, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=893, col_offset=4), Index(Str('struct', lineno=893, col_offset=13)), Store(), lineno=893, col_offset=4)], Name('end_struct', Load(), lineno=893, col_offset=25), lineno=893, col_offset=4), FunctionDef('end_base64', arguments([Name('self', Param(), lineno=895, col_offset=19), Name('data', Param(), lineno=895, col_offset=25)], None, None, []), [Assign([Name('value', Store(), lineno=896, col_offset=8)], Call(Name('Binary', Load(), lineno=896, col_offset=16), [], [], None, None, lineno=896, col_offset=16), lineno=896, col_offset=8), Expr(Call(Attribute(Name('value', Load(), lineno=897, col_offset=8), 'decode', Load(), lineno=897, col_offset=8), [Name('data', Load(), lineno=897, col_offset=21)], [], None, None, lineno=897, col_offset=8), lineno=897, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=898, col_offset=8), 'append', Load(), lineno=898, col_offset=8), [Name('value', Load(), lineno=898, col_offset=20)], [], None, None, lineno=898, col_offset=8), lineno=898, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=899, col_offset=8), '_value', Store(), lineno=899, col_offset=8)], Num(0, lineno=899, col_offset=22), lineno=899, col_offset=8)], [], lineno=895, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=900, col_offset=4), Index(Str('base64', lineno=900, col_offset=13)), Store(), lineno=900, col_offset=4)], Name('end_base64', Load(), lineno=900, col_offset=25), lineno=900, col_offset=4), FunctionDef('end_dateTime', arguments([Name('self', Param(), lineno=902, col_offset=21), Name('data', Param(), lineno=902, col_offset=27)], None, None, []), [Assign([Name('value', Store(), lineno=903, col_offset=8)], Call(Name('DateTime', Load(), lineno=903, col_offset=16), [], [], None, None, lineno=903, col_offset=16), lineno=903, col_offset=8), Expr(Call(Attribute(Name('value', Load(), lineno=904, col_offset=8), 'decode', Load(), lineno=904, col_offset=8), [Name('data', Load(), lineno=904, col_offset=21)], [], None, None, lineno=904, col_offset=8), lineno=904, col_offset=8), If(Attribute(Name('self', Load(), lineno=905, col_offset=11), '_use_datetime', Load(), lineno=905, col_offset=11), [Assign([Name('value', Store(), lineno=906, col_offset=12)], Call(Name('_datetime_type', Load(), lineno=906, col_offset=20), [Name('data', Load(), lineno=906, col_offset=35)], [], None, None, lineno=906, col_offset=20), lineno=906, col_offset=12)], [], lineno=905, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=907, col_offset=8), 'append', Load(), lineno=907, col_offset=8), [Name('value', Load(), lineno=907, col_offset=20)], [], None, None, lineno=907, col_offset=8), lineno=907, col_offset=8)], [], lineno=902, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=908, col_offset=4), Index(Str('dateTime.iso8601', lineno=908, col_offset=13)), Store(), lineno=908, col_offset=4)], Name('end_dateTime', Load(), lineno=908, col_offset=35), lineno=908, col_offset=4), FunctionDef('end_value', arguments([Name('self', Param(), lineno=910, col_offset=18), Name('data', Param(), lineno=910, col_offset=24)], None, None, []), [If(Attribute(Name('self', Load(), lineno=913, col_offset=11), '_value', Load(), lineno=913, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=914, col_offset=12), 'end_string', Load(), lineno=914, col_offset=12), [Name('data', Load(), lineno=914, col_offset=28)], [], None, None, lineno=914, col_offset=12), lineno=914, col_offset=12)], [], lineno=913, col_offset=8)], [], lineno=910, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=915, col_offset=4), Index(Str('value', lineno=915, col_offset=13)), Store(), lineno=915, col_offset=4)], Name('end_value', Load(), lineno=915, col_offset=24), lineno=915, col_offset=4), FunctionDef('end_params', arguments([Name('self', Param(), lineno=917, col_offset=19), Name('data', Param(), lineno=917, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=918, col_offset=8), '_type', Store(), lineno=918, col_offset=8)], Str('params', lineno=918, col_offset=21), lineno=918, col_offset=8)], [], lineno=917, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=919, col_offset=4), Index(Str('params', lineno=919, col_offset=13)), Store(), lineno=919, col_offset=4)], Name('end_params', Load(), lineno=919, col_offset=25), lineno=919, col_offset=4), FunctionDef('end_fault', arguments([Name('self', Param(), lineno=921, col_offset=18), Name('data', Param(), lineno=921, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=922, col_offset=8), '_type', Store(), lineno=922, col_offset=8)], Str('fault', lineno=922, col_offset=21), lineno=922, col_offset=8)], [], lineno=921, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=923, col_offset=4), Index(Str('fault', lineno=923, col_offset=13)), Store(), lineno=923, col_offset=4)], Name('end_fault', Load(), lineno=923, col_offset=24), lineno=923, col_offset=4), FunctionDef('end_methodName', arguments([Name('self', Param(), lineno=925, col_offset=23), Name('data', Param(), lineno=925, col_offset=29)], None, None, []), [If(Attribute(Name('self', Load(), lineno=926, col_offset=11), '_encoding', Load(), lineno=926, col_offset=11), [Assign([Name('data', Store(), lineno=927, col_offset=12)], Call(Name('_decode', Load(), lineno=927, col_offset=19), [Name('data', Load(), lineno=927, col_offset=27), Attribute(Name('self', Load(), lineno=927, col_offset=33), '_encoding', Load(), lineno=927, col_offset=33)], [], None, None, lineno=927, col_offset=19), lineno=927, col_offset=12)], [], lineno=926, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=928, col_offset=8), '_methodname', Store(), lineno=928, col_offset=8)], Name('data', Load(), lineno=928, col_offset=27), lineno=928, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=929, col_offset=8), '_type', Store(), lineno=929, col_offset=8)], Str('methodName', lineno=929, col_offset=21), lineno=929, col_offset=8)], [], lineno=925, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=930, col_offset=4), Index(Str('methodName', lineno=930, col_offset=13)), Store(), lineno=930, col_offset=4)], Name('end_methodName', Load(), lineno=930, col_offset=29), lineno=930, col_offset=4)], [], lineno=764, col_offset=0), ClassDef('_MultiCallMethod', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=938, col_offset=17), Name('call_list', Param(), lineno=938, col_offset=23), Name('name', Param(), lineno=938, col_offset=34)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=939, col_offset=8), '__call_list', Store(), lineno=939, col_offset=8)], Name('call_list', Load(), lineno=939, col_offset=27), lineno=939, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=940, col_offset=8), '__name', Store(), lineno=940, col_offset=8)], Name('name', Load(), lineno=940, col_offset=22), lineno=940, col_offset=8)], [], lineno=938, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=941, col_offset=20), Name('name', Param(), lineno=941, col_offset=26)], None, None, []), [Return(Call(Name('_MultiCallMethod', Load(), lineno=942, col_offset=15), [Attribute(Name('self', Load(), lineno=942, col_offset=32), '__call_list', Load(), lineno=942, col_offset=32), BinOp(Str('%s.%s', lineno=942, col_offset=50), Mod(), Tuple([Attribute(Name('self', Load(), lineno=942, col_offset=61), '__name', Load(), lineno=942, col_offset=61), Name('name', Load(), lineno=942, col_offset=74)], Load(), lineno=942, col_offset=61), lineno=942, col_offset=50)], [], None, None, lineno=942, col_offset=15), lineno=942, col_offset=8)], [], lineno=941, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=943, col_offset=17)], 'args', None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=944, col_offset=8), '__call_list', Load(), lineno=944, col_offset=8), 'append', Load(), lineno=944, col_offset=8), [Tuple([Attribute(Name('self', Load(), lineno=944, col_offset=33), '__name', Load(), lineno=944, col_offset=33), Name('args', Load(), lineno=944, col_offset=46)], Load(), lineno=944, col_offset=33)], [], None, None, lineno=944, col_offset=8), lineno=944, col_offset=8)], [], lineno=943, col_offset=4)], [], lineno=935, col_offset=0), ClassDef('MultiCallIterator', [], [Expr(Str('Iterates over the results of a multicall. Exceptions are\n    thrown in response to xmlrpc faults.', lineno=948, col_offset=-1), lineno=948, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=950, col_offset=17), Name('results', Param(), lineno=950, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=951, col_offset=8), 'results', Store(), lineno=951, col_offset=8)], Name('results', Load(), lineno=951, col_offset=23), lineno=951, col_offset=8)], [], lineno=950, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=953, col_offset=20), Name('i', Param(), lineno=953, col_offset=26)], None, None, []), [Assign([Name('item', Store(), lineno=954, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=954, col_offset=15), 'results', Load(), lineno=954, col_offset=15), Index(Name('i', Load(), lineno=954, col_offset=28)), Load(), lineno=954, col_offset=15), lineno=954, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=955, col_offset=11), [Name('item', Load(), lineno=955, col_offset=16)], [], None, None, lineno=955, col_offset=11), [Eq()], [Call(Name('type', Load(), lineno=955, col_offset=25), [Dict([], [], lineno=955, col_offset=30)], [], None, None, lineno=955, col_offset=25)], lineno=955, col_offset=11), [Raise(Call(Name('Fault', Load(), lineno=956, col_offset=18), [Subscript(Name('item', Load(), lineno=956, col_offset=24), Index(Str('faultCode', lineno=956, col_offset=29)), Load(), lineno=956, col_offset=24), Subscript(Name('item', Load(), lineno=956, col_offset=43), Index(Str('faultString', lineno=956, col_offset=48)), Load(), lineno=956, col_offset=43)], [], None, None, lineno=956, col_offset=18), None, None, lineno=956, col_offset=12)], [If(Compare(Call(Name('type', Load(), lineno=957, col_offset=13), [Name('item', Load(), lineno=957, col_offset=18)], [], None, None, lineno=957, col_offset=13), [Eq()], [Call(Name('type', Load(), lineno=957, col_offset=27), [List([], Load(), lineno=957, col_offset=32)], [], None, None, lineno=957, col_offset=27)], lineno=957, col_offset=13), [Return(Subscript(Name('item', Load(), lineno=958, col_offset=19), Index(Num(0, lineno=958, col_offset=24)), Load(), lineno=958, col_offset=19), lineno=958, col_offset=12)], [Raise(Name('ValueError', Load(), lineno=960, col_offset=18), Str('unexpected type in multicall result', lineno=961, col_offset=18), None, lineno=960, col_offset=12)], lineno=957, col_offset=13)], lineno=955, col_offset=8)], [], lineno=953, col_offset=4)], [], lineno=946, col_offset=0), ClassDef('MultiCall', [], [Expr(Str('server -> a object used to boxcar method calls\n\n    server should be a ServerProxy object.\n\n    Methods can be added to the MultiCall using normal\n    method call syntax e.g.:\n\n    multicall = MultiCall(server_proxy)\n    multicall.add(2,3)\n    multicall.get_address("Guido")\n\n    To execute the multicall, call the MultiCall object e.g.:\n\n    add_result, address = multicall()\n    ', lineno=978, col_offset=-1), lineno=978, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=980, col_offset=17), Name('server', Param(), lineno=980, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=981, col_offset=8), '__server', Store(), lineno=981, col_offset=8)], Name('server', Load(), lineno=981, col_offset=24), lineno=981, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=982, col_offset=8), '__call_list', Store(), lineno=982, col_offset=8)], List([], Load(), lineno=982, col_offset=27), lineno=982, col_offset=8)], [], lineno=980, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=984, col_offset=17)], None, None, []), [Return(BinOp(Str('<MultiCall at %x>', lineno=985, col_offset=15), Mod(), Call(Name('id', Load(), lineno=985, col_offset=37), [Name('self', Load(), lineno=985, col_offset=40)], [], None, None, lineno=985, col_offset=37), lineno=985, col_offset=15), lineno=985, col_offset=8)], [], lineno=984, col_offset=4), Assign([Name('__str__', Store(), lineno=987, col_offset=4)], Name('__repr__', Load(), lineno=987, col_offset=14), lineno=987, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=989, col_offset=20), Name('name', Param(), lineno=989, col_offset=26)], None, None, []), [Return(Call(Name('_MultiCallMethod', Load(), lineno=990, col_offset=15), [Attribute(Name('self', Load(), lineno=990, col_offset=32), '__call_list', Load(), lineno=990, col_offset=32), Name('name', Load(), lineno=990, col_offset=50)], [], None, None, lineno=990, col_offset=15), lineno=990, col_offset=8)], [], lineno=989, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=992, col_offset=17)], None, None, []), [Assign([Name('marshalled_list', Store(), lineno=993, col_offset=8)], List([], Load(), lineno=993, col_offset=26), lineno=993, col_offset=8), For(Tuple([Name('name', Store(), lineno=994, col_offset=12), Name('args', Store(), lineno=994, col_offset=18)], Store(), lineno=994, col_offset=12), Attribute(Name('self', Load(), lineno=994, col_offset=26), '__call_list', Load(), lineno=994, col_offset=26), [Expr(Call(Attribute(Name('marshalled_list', Load(), lineno=995, col_offset=12), 'append', Load(), lineno=995, col_offset=12), [Dict([Str('methodName', lineno=995, col_offset=36), Str('params', lineno=995, col_offset=57)], [Name('name', Load(), lineno=995, col_offset=51), Name('args', Load(), lineno=995, col_offset=68)], lineno=995, col_offset=35)], [], None, None, lineno=995, col_offset=12), lineno=995, col_offset=12)], [], lineno=994, col_offset=8), Return(Call(Name('MultiCallIterator', Load(), lineno=997, col_offset=15), [Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=997, col_offset=33), '__server', Load(), lineno=997, col_offset=33), 'system', Load(), lineno=997, col_offset=33), 'multicall', Load(), lineno=997, col_offset=33), [Name('marshalled_list', Load(), lineno=997, col_offset=64)], [], None, None, lineno=997, col_offset=33)], [], None, None, lineno=997, col_offset=15), lineno=997, col_offset=8)], [], lineno=992, col_offset=4)], [], lineno=963, col_offset=0), FunctionDef('getparser', arguments([Name('use_datetime', Param(), lineno=1008, col_offset=14)], None, None, [Num(0, lineno=1008, col_offset=27)]), [Expr(Str('getparser() -> parser, unmarshaller\n\n    Create an instance of the fastest available parser, and attach it\n    to an unmarshalling object.  Return both objects.\n    ', lineno=1013, col_offset=-1), lineno=1013, col_offset=-1), If(BoolOp(And(), [Name('use_datetime', Load(), lineno=1014, col_offset=7), UnaryOp(Not(), Name('datetime', Load(), lineno=1014, col_offset=28), lineno=1014, col_offset=24)], lineno=1014, col_offset=7), [Raise(Name('ValueError', Load(), lineno=1015, col_offset=14), Str('the datetime module is not available', lineno=1015, col_offset=26), None, lineno=1015, col_offset=8)], [], lineno=1014, col_offset=4), If(BoolOp(And(), [Name('FastParser', Load(), lineno=1016, col_offset=7), Name('FastUnmarshaller', Load(), lineno=1016, col_offset=22)], lineno=1016, col_offset=7), [If(Name('use_datetime', Load(), lineno=1017, col_offset=11), [Assign([Name('mkdatetime', Store(), lineno=1018, col_offset=12)], Name('_datetime_type', Load(), lineno=1018, col_offset=25), lineno=1018, col_offset=12)], [Assign([Name('mkdatetime', Store(), lineno=1020, col_offset=12)], Name('_datetime', Load(), lineno=1020, col_offset=25), lineno=1020, col_offset=12)], lineno=1017, col_offset=8), Assign([Name('target', Store(), lineno=1021, col_offset=8)], Call(Name('FastUnmarshaller', Load(), lineno=1021, col_offset=17), [Name('True', Load(), lineno=1021, col_offset=34), Name('False', Load(), lineno=1021, col_offset=40), Name('_binary', Load(), lineno=1021, col_offset=47), Name('mkdatetime', Load(), lineno=1021, col_offset=56), Name('Fault', Load(), lineno=1021, col_offset=68)], [], None, None, lineno=1021, col_offset=17), lineno=1021, col_offset=8), Assign([Name('parser', Store(), lineno=1022, col_offset=8)], Call(Name('FastParser', Load(), lineno=1022, col_offset=17), [Name('target', Load(), lineno=1022, col_offset=28)], [], None, None, lineno=1022, col_offset=17), lineno=1022, col_offset=8)], [Assign([Name('target', Store(), lineno=1024, col_offset=8)], Call(Name('Unmarshaller', Load(), lineno=1024, col_offset=17), [], [keyword('use_datetime', Name('use_datetime', Load(), lineno=1024, col_offset=43))], None, None, lineno=1024, col_offset=17), lineno=1024, col_offset=8), If(Name('FastParser', Load(), lineno=1025, col_offset=11), [Assign([Name('parser', Store(), lineno=1026, col_offset=12)], Call(Name('FastParser', Load(), lineno=1026, col_offset=21), [Name('target', Load(), lineno=1026, col_offset=32)], [], None, None, lineno=1026, col_offset=21), lineno=1026, col_offset=12)], [If(Name('ExpatParser', Load(), lineno=1027, col_offset=13), [Assign([Name('parser', Store(), lineno=1028, col_offset=12)], Call(Name('ExpatParser', Load(), lineno=1028, col_offset=21), [Name('target', Load(), lineno=1028, col_offset=33)], [], None, None, lineno=1028, col_offset=21), lineno=1028, col_offset=12)], [Assign([Name('parser', Store(), lineno=1030, col_offset=12)], Call(Name('SlowParser', Load(), lineno=1030, col_offset=21), [Name('target', Load(), lineno=1030, col_offset=32)], [], None, None, lineno=1030, col_offset=21), lineno=1030, col_offset=12)], lineno=1027, col_offset=13)], lineno=1025, col_offset=8)], lineno=1016, col_offset=4), Return(Tuple([Name('parser', Load(), lineno=1031, col_offset=11), Name('target', Load(), lineno=1031, col_offset=19)], Load(), lineno=1031, col_offset=11), lineno=1031, col_offset=4)], [], lineno=1008, col_offset=0), FunctionDef('dumps', arguments([Name('params', Param(), lineno=1046, col_offset=10), Name('methodname', Param(), lineno=1046, col_offset=18), Name('methodresponse', Param(), lineno=1046, col_offset=35), Name('encoding', Param(), lineno=1046, col_offset=56), Name('allow_none', Param(), lineno=1047, col_offset=10)], None, None, [Name('None', Load(), lineno=1046, col_offset=29), Name('None', Load(), lineno=1046, col_offset=50), Name('None', Load(), lineno=1046, col_offset=65), Num(0, lineno=1047, col_offset=21)]), [Expr(Str('data [,options] -> marshalled data\n\n    Convert an argument tuple or a Fault instance to an XML-RPC\n    request (or response, if the methodresponse option is used).\n\n    In addition to the data object, the following options can be given\n    as keyword arguments:\n\n        methodname: the method name for a methodCall packet\n\n        methodresponse: true to create a methodResponse packet.\n        If this option is used with a tuple, the tuple must be\n        a singleton (i.e. it can contain only one element).\n\n        encoding: the packet encoding (default is UTF-8)\n\n    All 8-bit strings in the data structure are assumed to use the\n    packet encoding.  Unicode strings are automatically converted,\n    where necessary.\n    ', lineno=1067, col_offset=-1), lineno=1067, col_offset=-1), Assert(BoolOp(Or(), [Call(Name('isinstance', Load(), lineno=1069, col_offset=11), [Name('params', Load(), lineno=1069, col_offset=22), Name('TupleType', Load(), lineno=1069, col_offset=30)], [], None, None, lineno=1069, col_offset=11), Call(Name('isinstance', Load(), lineno=1069, col_offset=44), [Name('params', Load(), lineno=1069, col_offset=55), Name('Fault', Load(), lineno=1069, col_offset=63)], [], None, None, lineno=1069, col_offset=44)], lineno=1069, col_offset=11), Str('argument must be tuple or Fault instance', lineno=1070, col_offset=11), lineno=1069, col_offset=4), If(Call(Name('isinstance', Load(), lineno=1072, col_offset=7), [Name('params', Load(), lineno=1072, col_offset=18), Name('Fault', Load(), lineno=1072, col_offset=26)], [], None, None, lineno=1072, col_offset=7), [Assign([Name('methodresponse', Store(), lineno=1073, col_offset=8)], Num(1, lineno=1073, col_offset=25), lineno=1073, col_offset=8)], [If(BoolOp(And(), [Name('methodresponse', Load(), lineno=1074, col_offset=9), Call(Name('isinstance', Load(), lineno=1074, col_offset=28), [Name('params', Load(), lineno=1074, col_offset=39), Name('TupleType', Load(), lineno=1074, col_offset=47)], [], None, None, lineno=1074, col_offset=28)], lineno=1074, col_offset=9), [Assert(Compare(Call(Name('len', Load(), lineno=1075, col_offset=15), [Name('params', Load(), lineno=1075, col_offset=19)], [], None, None, lineno=1075, col_offset=15), [Eq()], [Num(1, lineno=1075, col_offset=30)], lineno=1075, col_offset=15), Str('response tuple must be a singleton', lineno=1075, col_offset=33), lineno=1075, col_offset=8)], [], lineno=1074, col_offset=9)], lineno=1072, col_offset=4), If(UnaryOp(Not(), Name('encoding', Load(), lineno=1077, col_offset=11), lineno=1077, col_offset=7), [Assign([Name('encoding', Store(), lineno=1078, col_offset=8)], Str('utf-8', lineno=1078, col_offset=19), lineno=1078, col_offset=8)], [], lineno=1077, col_offset=4), If(Name('FastMarshaller', Load(), lineno=1080, col_offset=7), [Assign([Name('m', Store(), lineno=1081, col_offset=8)], Call(Name('FastMarshaller', Load(), lineno=1081, col_offset=12), [Name('encoding', Load(), lineno=1081, col_offset=27)], [], None, None, lineno=1081, col_offset=12), lineno=1081, col_offset=8)], [Assign([Name('m', Store(), lineno=1083, col_offset=8)], Call(Name('Marshaller', Load(), lineno=1083, col_offset=12), [Name('encoding', Load(), lineno=1083, col_offset=23), Name('allow_none', Load(), lineno=1083, col_offset=33)], [], None, None, lineno=1083, col_offset=12), lineno=1083, col_offset=8)], lineno=1080, col_offset=4), Assign([Name('data', Store(), lineno=1085, col_offset=4)], Call(Attribute(Name('m', Load(), lineno=1085, col_offset=11), 'dumps', Load(), lineno=1085, col_offset=11), [Name('params', Load(), lineno=1085, col_offset=19)], [], None, None, lineno=1085, col_offset=11), lineno=1085, col_offset=4), If(Compare(Name('encoding', Load(), lineno=1087, col_offset=7), [NotEq()], [Str('utf-8', lineno=1087, col_offset=19)], lineno=1087, col_offset=7), [Assign([Name('xmlheader', Store(), lineno=1088, col_offset=8)], BinOp(Str("<?xml version='1.0' encoding='%s'?>\n", lineno=1088, col_offset=20), Mod(), Call(Name('str', Load(), lineno=1088, col_offset=62), [Name('encoding', Load(), lineno=1088, col_offset=66)], [], None, None, lineno=1088, col_offset=62), lineno=1088, col_offset=20), lineno=1088, col_offset=8)], [Assign([Name('xmlheader', Store(), lineno=1090, col_offset=8)], Str("<?xml version='1.0'?>\n", lineno=1090, col_offset=20), lineno=1090, col_offset=8)], lineno=1087, col_offset=4), If(Name('methodname', Load(), lineno=1093, col_offset=7), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=1095, col_offset=15), [Name('methodname', Load(), lineno=1095, col_offset=26), Name('StringType', Load(), lineno=1095, col_offset=38)], [], None, None, lineno=1095, col_offset=15), lineno=1095, col_offset=11), [Assign([Name('methodname', Store(), lineno=1096, col_offset=12)], Call(Attribute(Name('methodname', Load(), lineno=1096, col_offset=25), 'encode', Load(), lineno=1096, col_offset=25), [Name('encoding', Load(), lineno=1096, col_offset=43)], [], None, None, lineno=1096, col_offset=25), lineno=1096, col_offset=12)], [], lineno=1095, col_offset=8), Assign([Name('data', Store(), lineno=1097, col_offset=8)], Tuple([Name('xmlheader', Load(), lineno=1098, col_offset=12), Str('<methodCall>\n<methodName>', lineno=1099, col_offset=12), Name('methodname', Load(), lineno=1100, col_offset=28), Str('</methodName>\n', lineno=1100, col_offset=40), Name('data', Load(), lineno=1101, col_offset=12), Str('</methodCall>\n', lineno=1102, col_offset=12)], Load(), lineno=1098, col_offset=12), lineno=1097, col_offset=8)], [If(Name('methodresponse', Load(), lineno=1104, col_offset=9), [Assign([Name('data', Store(), lineno=1106, col_offset=8)], Tuple([Name('xmlheader', Load(), lineno=1107, col_offset=12), Str('<methodResponse>\n', lineno=1108, col_offset=12), Name('data', Load(), lineno=1109, col_offset=12), Str('</methodResponse>\n', lineno=1110, col_offset=12)], Load(), lineno=1107, col_offset=12), lineno=1106, col_offset=8)], [Return(Name('data', Load(), lineno=1113, col_offset=15), lineno=1113, col_offset=8)], lineno=1104, col_offset=9)], lineno=1093, col_offset=4), Return(Call(Attribute(Name('string', Load(), lineno=1114, col_offset=11), 'join', Load(), lineno=1114, col_offset=11), [Name('data', Load(), lineno=1114, col_offset=23), Str('', lineno=1114, col_offset=29)], [], None, None, lineno=1114, col_offset=11), lineno=1114, col_offset=4)], [], lineno=1046, col_offset=0), FunctionDef('loads', arguments([Name('data', Param(), lineno=1125, col_offset=10), Name('use_datetime', Param(), lineno=1125, col_offset=16)], None, None, [Num(0, lineno=1125, col_offset=29)]), [Expr(Str('data -> unmarshalled data, method name\n\n    Convert an XML-RPC packet to unmarshalled data plus a method\n    name (None if not present).\n\n    If the XML-RPC packet represents a fault condition, this function\n    raises a Fault exception.\n    ', lineno=1133, col_offset=-1), lineno=1133, col_offset=-1), Assign([Tuple([Name('p', Store(), lineno=1134, col_offset=4), Name('u', Store(), lineno=1134, col_offset=7)], Store(), lineno=1134, col_offset=4)], Call(Name('getparser', Load(), lineno=1134, col_offset=11), [], [keyword('use_datetime', Name('use_datetime', Load(), lineno=1134, col_offset=34))], None, None, lineno=1134, col_offset=11), lineno=1134, col_offset=4), Expr(Call(Attribute(Name('p', Load(), lineno=1135, col_offset=4), 'feed', Load(), lineno=1135, col_offset=4), [Name('data', Load(), lineno=1135, col_offset=11)], [], None, None, lineno=1135, col_offset=4), lineno=1135, col_offset=4), Expr(Call(Attribute(Name('p', Load(), lineno=1136, col_offset=4), 'close', Load(), lineno=1136, col_offset=4), [], [], None, None, lineno=1136, col_offset=4), lineno=1136, col_offset=4), Return(Tuple([Call(Attribute(Name('u', Load(), lineno=1137, col_offset=11), 'close', Load(), lineno=1137, col_offset=11), [], [], None, None, lineno=1137, col_offset=11), Call(Attribute(Name('u', Load(), lineno=1137, col_offset=22), 'getmethodname', Load(), lineno=1137, col_offset=22), [], [], None, None, lineno=1137, col_offset=22)], Load(), lineno=1137, col_offset=11), lineno=1137, col_offset=4)], [], lineno=1125, col_offset=0), FunctionDef('gzip_encode', arguments([Name('data', Param(), lineno=1147, col_offset=16)], None, None, []), [Expr(Str('data -> gzip encoded data\n\n    Encode data using the gzip content encoding as described in RFC 1952\n    ', lineno=1151, col_offset=-1), lineno=1151, col_offset=-1), If(UnaryOp(Not(), Name('gzip', Load(), lineno=1152, col_offset=11), lineno=1152, col_offset=7), [Raise(Name('NotImplementedError', Load(), lineno=1153, col_offset=14), None, None, lineno=1153, col_offset=8)], [], lineno=1152, col_offset=4), Assign([Name('f', Store(), lineno=1154, col_offset=4)], Call(Attribute(Name('StringIO', Load(), lineno=1154, col_offset=8), 'StringIO', Load(), lineno=1154, col_offset=8), [], [], None, None, lineno=1154, col_offset=8), lineno=1154, col_offset=4), Assign([Name('gzf', Store(), lineno=1155, col_offset=4)], Call(Attribute(Name('gzip', Load(), lineno=1155, col_offset=10), 'GzipFile', Load(), lineno=1155, col_offset=10), [], [keyword('mode', Str('wb', lineno=1155, col_offset=29)), keyword('fileobj', Name('f', Load(), lineno=1155, col_offset=43)), keyword('compresslevel', Num(1, lineno=1155, col_offset=60))], None, None, lineno=1155, col_offset=10), lineno=1155, col_offset=4), Expr(Call(Attribute(Name('gzf', Load(), lineno=1156, col_offset=4), 'write', Load(), lineno=1156, col_offset=4), [Name('data', Load(), lineno=1156, col_offset=14)], [], None, None, lineno=1156, col_offset=4), lineno=1156, col_offset=4), Expr(Call(Attribute(Name('gzf', Load(), lineno=1157, col_offset=4), 'close', Load(), lineno=1157, col_offset=4), [], [], None, None, lineno=1157, col_offset=4), lineno=1157, col_offset=4), Assign([Name('encoded', Store(), lineno=1158, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=1158, col_offset=14), 'getvalue', Load(), lineno=1158, col_offset=14), [], [], None, None, lineno=1158, col_offset=14), lineno=1158, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=1159, col_offset=4), 'close', Load(), lineno=1159, col_offset=4), [], [], None, None, lineno=1159, col_offset=4), lineno=1159, col_offset=4), Return(Name('encoded', Load(), lineno=1160, col_offset=11), lineno=1160, col_offset=4)], [], lineno=1147, col_offset=0), FunctionDef('gzip_decode', arguments([Name('data', Param(), lineno=1171, col_offset=16)], None, None, []), [Expr(Str('gzip encoded data -> unencoded data\n\n    Decode data using the gzip content encoding as described in RFC 1952\n    ', lineno=1175, col_offset=-1), lineno=1175, col_offset=-1), If(UnaryOp(Not(), Name('gzip', Load(), lineno=1176, col_offset=11), lineno=1176, col_offset=7), [Raise(Name('NotImplementedError', Load(), lineno=1177, col_offset=14), None, None, lineno=1177, col_offset=8)], [], lineno=1176, col_offset=4), Assign([Name('f', Store(), lineno=1178, col_offset=4)], Call(Attribute(Name('StringIO', Load(), lineno=1178, col_offset=8), 'StringIO', Load(), lineno=1178, col_offset=8), [Name('data', Load(), lineno=1178, col_offset=26)], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=4), Assign([Name('gzf', Store(), lineno=1179, col_offset=4)], Call(Attribute(Name('gzip', Load(), lineno=1179, col_offset=10), 'GzipFile', Load(), lineno=1179, col_offset=10), [], [keyword('mode', Str('rb', lineno=1179, col_offset=29)), keyword('fileobj', Name('f', Load(), lineno=1179, col_offset=43))], None, None, lineno=1179, col_offset=10), lineno=1179, col_offset=4), TryExcept([Assign([Name('decoded', Store(), lineno=1181, col_offset=8)], Call(Attribute(Name('gzf', Load(), lineno=1181, col_offset=18), 'read', Load(), lineno=1181, col_offset=18), [], [], None, None, lineno=1181, col_offset=18), lineno=1181, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=1182, col_offset=11), None, [Raise(Call(Name('ValueError', Load(), lineno=1183, col_offset=14), [Str('invalid data', lineno=1183, col_offset=25)], [], None, None, lineno=1183, col_offset=14), None, None, lineno=1183, col_offset=8)], lineno=1182, col_offset=4)], [], lineno=1180, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=1184, col_offset=4), 'close', Load(), lineno=1184, col_offset=4), [], [], None, None, lineno=1184, col_offset=4), lineno=1184, col_offset=4), Expr(Call(Attribute(Name('gzf', Load(), lineno=1185, col_offset=4), 'close', Load(), lineno=1185, col_offset=4), [], [], None, None, lineno=1185, col_offset=4), lineno=1185, col_offset=4), Return(Name('decoded', Load(), lineno=1186, col_offset=11), lineno=1186, col_offset=4)], [], lineno=1171, col_offset=0), ClassDef('GzipDecodedResponse', [IfExp(Name('gzip', Load(), lineno=1195, col_offset=43), Attribute(Name('gzip', Load(), lineno=1195, col_offset=26), 'GzipFile', Load(), lineno=1195, col_offset=26), Name('object', Load(), lineno=1195, col_offset=53), lineno=1195, col_offset=26)], [Expr(Str('a file-like object to decode a response encoded with the gzip\n    method, as described in RFC 1952.\n    ', lineno=1198, col_offset=-1), lineno=1198, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1199, col_offset=17), Name('response', Param(), lineno=1199, col_offset=23)], None, None, []), [If(UnaryOp(Not(), Name('gzip', Load(), lineno=1202, col_offset=15), lineno=1202, col_offset=11), [Raise(Name('NotImplementedError', Load(), lineno=1203, col_offset=18), None, None, lineno=1203, col_offset=12)], [], lineno=1202, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1204, col_offset=8), 'stringio', Store(), lineno=1204, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1204, col_offset=24), 'StringIO', Load(), lineno=1204, col_offset=24), [Call(Attribute(Name('response', Load(), lineno=1204, col_offset=42), 'read', Load(), lineno=1204, col_offset=42), [], [], None, None, lineno=1204, col_offset=42)], [], None, None, lineno=1204, col_offset=24), lineno=1204, col_offset=8), Expr(Call(Attribute(Attribute(Name('gzip', Load(), lineno=1205, col_offset=8), 'GzipFile', Load(), lineno=1205, col_offset=8), '__init__', Load(), lineno=1205, col_offset=8), [Name('self', Load(), lineno=1205, col_offset=31)], [keyword('mode', Str('rb', lineno=1205, col_offset=42)), keyword('fileobj', Attribute(Name('self', Load(), lineno=1205, col_offset=56), 'stringio', Load(), lineno=1205, col_offset=56))], None, None, lineno=1205, col_offset=8), lineno=1205, col_offset=8)], [], lineno=1199, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=1207, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('gzip', Load(), lineno=1208, col_offset=8), 'GzipFile', Load(), lineno=1208, col_offset=8), 'close', Load(), lineno=1208, col_offset=8), [Name('self', Load(), lineno=1208, col_offset=28)], [], None, None, lineno=1208, col_offset=8), lineno=1208, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1209, col_offset=8), 'stringio', Load(), lineno=1209, col_offset=8), 'close', Load(), lineno=1209, col_offset=8), [], [], None, None, lineno=1209, col_offset=8), lineno=1209, col_offset=8)], [], lineno=1207, col_offset=4)], [], lineno=1195, col_offset=0), ClassDef('_Method', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1218, col_offset=17), Name('send', Param(), lineno=1218, col_offset=23), Name('name', Param(), lineno=1218, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1219, col_offset=8), '__send', Store(), lineno=1219, col_offset=8)], Name('send', Load(), lineno=1219, col_offset=22), lineno=1219, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1220, col_offset=8), '__name', Store(), lineno=1220, col_offset=8)], Name('name', Load(), lineno=1220, col_offset=22), lineno=1220, col_offset=8)], [], lineno=1218, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=1221, col_offset=20), Name('name', Param(), lineno=1221, col_offset=26)], None, None, []), [Return(Call(Name('_Method', Load(), lineno=1222, col_offset=15), [Attribute(Name('self', Load(), lineno=1222, col_offset=23), '__send', Load(), lineno=1222, col_offset=23), BinOp(Str('%s.%s', lineno=1222, col_offset=36), Mod(), Tuple([Attribute(Name('self', Load(), lineno=1222, col_offset=47), '__name', Load(), lineno=1222, col_offset=47), Name('name', Load(), lineno=1222, col_offset=60)], Load(), lineno=1222, col_offset=47), lineno=1222, col_offset=36)], [], None, None, lineno=1222, col_offset=15), lineno=1222, col_offset=8)], [], lineno=1221, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=1223, col_offset=17)], 'args', None, []), [Return(Call(Attribute(Name('self', Load(), lineno=1224, col_offset=15), '__send', Load(), lineno=1224, col_offset=15), [Attribute(Name('self', Load(), lineno=1224, col_offset=27), '__name', Load(), lineno=1224, col_offset=27), Name('args', Load(), lineno=1224, col_offset=40)], [], None, None, lineno=1224, col_offset=15), lineno=1224, col_offset=8)], [], lineno=1223, col_offset=4)], [], lineno=1215, col_offset=0), ClassDef('Transport', [], [Expr(Str('Handles an HTTP transaction to an XML-RPC server.', lineno=1233, col_offset=4), lineno=1233, col_offset=4), Assign([Name('user_agent', Store(), lineno=1236, col_offset=4)], BinOp(Str('xmlrpclib.py/%s (by www.pythonware.com)', lineno=1236, col_offset=17), Mod(), Name('__version__', Load(), lineno=1236, col_offset=61), lineno=1236, col_offset=17), lineno=1236, col_offset=4), Assign([Name('accept_gzip_encoding', Store(), lineno=1239, col_offset=4)], Name('True', Load(), lineno=1239, col_offset=27), lineno=1239, col_offset=4), Assign([Name('encode_threshold', Store(), lineno=1244, col_offset=4)], Name('None', Load(), lineno=1244, col_offset=23), lineno=1244, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1246, col_offset=17), Name('use_datetime', Param(), lineno=1246, col_offset=23)], None, None, [Num(0, lineno=1246, col_offset=36)]), [Assign([Attribute(Name('self', Load(), lineno=1247, col_offset=8), '_use_datetime', Store(), lineno=1247, col_offset=8)], Name('use_datetime', Load(), lineno=1247, col_offset=29), lineno=1247, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1248, col_offset=8), '_connection', Store(), lineno=1248, col_offset=8)], Tuple([Name('None', Load(), lineno=1248, col_offset=28), Name('None', Load(), lineno=1248, col_offset=34)], Load(), lineno=1248, col_offset=28), lineno=1248, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1249, col_offset=8), '_extra_headers', Store(), lineno=1249, col_offset=8)], List([], Load(), lineno=1249, col_offset=30), lineno=1249, col_offset=8)], [], lineno=1246, col_offset=4), FunctionDef('request', arguments([Name('self', Param(), lineno=1260, col_offset=16), Name('host', Param(), lineno=1260, col_offset=22), Name('handler', Param(), lineno=1260, col_offset=28), Name('request_body', Param(), lineno=1260, col_offset=37), Name('verbose', Param(), lineno=1260, col_offset=51)], None, None, [Num(0, lineno=1260, col_offset=59)]), [For(Name('i', Store(), lineno=1262, col_offset=12), Tuple([Num(0, lineno=1262, col_offset=18), Num(1, lineno=1262, col_offset=21)], Load(), lineno=1262, col_offset=18), [TryExcept([Return(Call(Attribute(Name('self', Load(), lineno=1264, col_offset=23), 'single_request', Load(), lineno=1264, col_offset=23), [Name('host', Load(), lineno=1264, col_offset=43), Name('handler', Load(), lineno=1264, col_offset=49), Name('request_body', Load(), lineno=1264, col_offset=58), Name('verbose', Load(), lineno=1264, col_offset=72)], [], None, None, lineno=1264, col_offset=23), lineno=1264, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=1265, col_offset=19), 'error', Load(), lineno=1265, col_offset=19), Name('e', Store(), lineno=1265, col_offset=33), [If(BoolOp(Or(), [Name('i', Load(), lineno=1266, col_offset=19), Compare(Attribute(Name('e', Load(), lineno=1266, col_offset=24), 'errno', Load(), lineno=1266, col_offset=24), [NotIn()], [Tuple([Attribute(Name('errno', Load(), lineno=1266, col_offset=40), 'ECONNRESET', Load(), lineno=1266, col_offset=40), Attribute(Name('errno', Load(), lineno=1266, col_offset=58), 'ECONNABORTED', Load(), lineno=1266, col_offset=58), Attribute(Name('errno', Load(), lineno=1266, col_offset=78), 'EPIPE', Load(), lineno=1266, col_offset=78)], Load(), lineno=1266, col_offset=40)], lineno=1266, col_offset=24)], lineno=1266, col_offset=19), [Raise(None, None, None, lineno=1267, col_offset=20)], [], lineno=1266, col_offset=16)], lineno=1265, col_offset=12), ExceptHandler(Attribute(Name('httplib', Load(), lineno=1268, col_offset=19), 'BadStatusLine', Load(), lineno=1268, col_offset=19), None, [If(Name('i', Load(), lineno=1269, col_offset=19), [Raise(None, None, None, lineno=1270, col_offset=20)], [], lineno=1269, col_offset=16)], lineno=1268, col_offset=12)], [], lineno=1263, col_offset=12)], [], lineno=1262, col_offset=8)], [], lineno=1260, col_offset=4), FunctionDef('single_request', arguments([Name('self', Param(), lineno=1281, col_offset=23), Name('host', Param(), lineno=1281, col_offset=29), Name('handler', Param(), lineno=1281, col_offset=35), Name('request_body', Param(), lineno=1281, col_offset=44), Name('verbose', Param(), lineno=1281, col_offset=58)], None, None, [Num(0, lineno=1281, col_offset=66)]), [Assign([Name('h', Store(), lineno=1284, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1284, col_offset=12), 'make_connection', Load(), lineno=1284, col_offset=12), [Name('host', Load(), lineno=1284, col_offset=33)], [], None, None, lineno=1284, col_offset=12), lineno=1284, col_offset=8), If(Name('verbose', Load(), lineno=1285, col_offset=11), [Expr(Call(Attribute(Name('h', Load(), lineno=1286, col_offset=12), 'set_debuglevel', Load(), lineno=1286, col_offset=12), [Num(1, lineno=1286, col_offset=29)], [], None, None, lineno=1286, col_offset=12), lineno=1286, col_offset=12)], [], lineno=1285, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=1289, col_offset=12), 'send_request', Load(), lineno=1289, col_offset=12), [Name('h', Load(), lineno=1289, col_offset=30), Name('handler', Load(), lineno=1289, col_offset=33), Name('request_body', Load(), lineno=1289, col_offset=42)], [], None, None, lineno=1289, col_offset=12), lineno=1289, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1290, col_offset=12), 'send_host', Load(), lineno=1290, col_offset=12), [Name('h', Load(), lineno=1290, col_offset=27), Name('host', Load(), lineno=1290, col_offset=30)], [], None, None, lineno=1290, col_offset=12), lineno=1290, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1291, col_offset=12), 'send_user_agent', Load(), lineno=1291, col_offset=12), [Name('h', Load(), lineno=1291, col_offset=33)], [], None, None, lineno=1291, col_offset=12), lineno=1291, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1292, col_offset=12), 'send_content', Load(), lineno=1292, col_offset=12), [Name('h', Load(), lineno=1292, col_offset=30), Name('request_body', Load(), lineno=1292, col_offset=33)], [], None, None, lineno=1292, col_offset=12), lineno=1292, col_offset=12), Assign([Name('response', Store(), lineno=1294, col_offset=12)], Call(Attribute(Name('h', Load(), lineno=1294, col_offset=23), 'getresponse', Load(), lineno=1294, col_offset=23), [], [keyword('buffering', Name('True', Load(), lineno=1294, col_offset=47))], None, None, lineno=1294, col_offset=23), lineno=1294, col_offset=12), If(Compare(Attribute(Name('response', Load(), lineno=1295, col_offset=15), 'status', Load(), lineno=1295, col_offset=15), [Eq()], [Num(200, lineno=1295, col_offset=34)], lineno=1295, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=1296, col_offset=16), 'verbose', Store(), lineno=1296, col_offset=16)], Name('verbose', Load(), lineno=1296, col_offset=31), lineno=1296, col_offset=16), Return(Call(Attribute(Name('self', Load(), lineno=1297, col_offset=23), 'parse_response', Load(), lineno=1297, col_offset=23), [Name('response', Load(), lineno=1297, col_offset=43)], [], None, None, lineno=1297, col_offset=23), lineno=1297, col_offset=16)], [], lineno=1295, col_offset=12)], [ExceptHandler(Name('Fault', Load(), lineno=1298, col_offset=15), None, [Raise(None, None, None, lineno=1299, col_offset=12)], lineno=1298, col_offset=8), ExceptHandler(Name('Exception', Load(), lineno=1300, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=1303, col_offset=12), 'close', Load(), lineno=1303, col_offset=12), [], [], None, None, lineno=1303, col_offset=12), lineno=1303, col_offset=12), Raise(None, None, None, lineno=1304, col_offset=12)], lineno=1300, col_offset=8)], [], lineno=1288, col_offset=8), If(Call(Attribute(Name('response', Load(), lineno=1307, col_offset=12), 'getheader', Load(), lineno=1307, col_offset=12), [Str('content-length', lineno=1307, col_offset=31), Num(0, lineno=1307, col_offset=49)], [], None, None, lineno=1307, col_offset=12), [Expr(Call(Attribute(Name('response', Load(), lineno=1308, col_offset=12), 'read', Load(), lineno=1308, col_offset=12), [], [], None, None, lineno=1308, col_offset=12), lineno=1308, col_offset=12)], [], lineno=1307, col_offset=8), Raise(Call(Name('ProtocolError', Load(), lineno=1309, col_offset=14), [BinOp(Name('host', Load(), lineno=1310, col_offset=12), Add(), Name('handler', Load(), lineno=1310, col_offset=19), lineno=1310, col_offset=12), Attribute(Name('response', Load(), lineno=1311, col_offset=12), 'status', Load(), lineno=1311, col_offset=12), Attribute(Name('response', Load(), lineno=1311, col_offset=29), 'reason', Load(), lineno=1311, col_offset=29), Attribute(Name('response', Load(), lineno=1312, col_offset=12), 'msg', Load(), lineno=1312, col_offset=12)], [], None, None, lineno=1309, col_offset=14), None, None, lineno=1309, col_offset=8)], [], lineno=1281, col_offset=4), FunctionDef('getparser', arguments([Name('self', Param(), lineno=1320, col_offset=18)], None, None, []), [Return(Call(Name('getparser', Load(), lineno=1322, col_offset=15), [], [keyword('use_datetime', Attribute(Name('self', Load(), lineno=1322, col_offset=38), '_use_datetime', Load(), lineno=1322, col_offset=38))], None, None, lineno=1322, col_offset=15), lineno=1322, col_offset=8)], [], lineno=1320, col_offset=4), FunctionDef('get_host_info', arguments([Name('self', Param(), lineno=1334, col_offset=22), Name('host', Param(), lineno=1334, col_offset=28)], None, None, []), [Assign([Name('x509', Store(), lineno=1336, col_offset=8)], Dict([], [], lineno=1336, col_offset=15), lineno=1336, col_offset=8), If(Call(Name('isinstance', Load(), lineno=1337, col_offset=11), [Name('host', Load(), lineno=1337, col_offset=22), Name('TupleType', Load(), lineno=1337, col_offset=28)], [], None, None, lineno=1337, col_offset=11), [Assign([Tuple([Name('host', Store(), lineno=1338, col_offset=12), Name('x509', Store(), lineno=1338, col_offset=18)], Store(), lineno=1338, col_offset=12)], Name('host', Load(), lineno=1338, col_offset=25), lineno=1338, col_offset=12)], [], lineno=1337, col_offset=8), Import([alias('urllib', None)], lineno=1340, col_offset=8), Assign([Tuple([Name('auth', Store(), lineno=1341, col_offset=8), Name('host', Store(), lineno=1341, col_offset=14)], Store(), lineno=1341, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=1341, col_offset=21), 'splituser', Load(), lineno=1341, col_offset=21), [Name('host', Load(), lineno=1341, col_offset=38)], [], None, None, lineno=1341, col_offset=21), lineno=1341, col_offset=8), If(Name('auth', Load(), lineno=1343, col_offset=11), [Import([alias('base64', None)], lineno=1344, col_offset=12), Assign([Name('auth', Store(), lineno=1345, col_offset=12)], Call(Attribute(Name('base64', Load(), lineno=1345, col_offset=19), 'encodestring', Load(), lineno=1345, col_offset=19), [Call(Attribute(Name('urllib', Load(), lineno=1345, col_offset=39), 'unquote', Load(), lineno=1345, col_offset=39), [Name('auth', Load(), lineno=1345, col_offset=54)], [], None, None, lineno=1345, col_offset=39)], [], None, None, lineno=1345, col_offset=19), lineno=1345, col_offset=12), Assign([Name('auth', Store(), lineno=1346, col_offset=12)], Call(Attribute(Name('string', Load(), lineno=1346, col_offset=19), 'join', Load(), lineno=1346, col_offset=19), [Call(Attribute(Name('string', Load(), lineno=1346, col_offset=31), 'split', Load(), lineno=1346, col_offset=31), [Name('auth', Load(), lineno=1346, col_offset=44)], [], None, None, lineno=1346, col_offset=31), Str('', lineno=1346, col_offset=51)], [], None, None, lineno=1346, col_offset=19), lineno=1346, col_offset=12), Assign([Name('extra_headers', Store(), lineno=1347, col_offset=12)], List([Tuple([Str('Authorization', lineno=1348, col_offset=17), BinOp(Str('Basic ', lineno=1348, col_offset=34), Add(), Name('auth', Load(), lineno=1348, col_offset=45), lineno=1348, col_offset=34)], Load(), lineno=1348, col_offset=17)], Load(), lineno=1347, col_offset=28), lineno=1347, col_offset=12)], [Assign([Name('extra_headers', Store(), lineno=1351, col_offset=12)], Name('None', Load(), lineno=1351, col_offset=28), lineno=1351, col_offset=12)], lineno=1343, col_offset=8), Return(Tuple([Name('host', Load(), lineno=1353, col_offset=15), Name('extra_headers', Load(), lineno=1353, col_offset=21), Name('x509', Load(), lineno=1353, col_offset=36)], Load(), lineno=1353, col_offset=15), lineno=1353, col_offset=8)], [], lineno=1334, col_offset=4), FunctionDef('make_connection', arguments([Name('self', Param(), lineno=1361, col_offset=24), Name('host', Param(), lineno=1361, col_offset=30)], None, None, []), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1364, col_offset=11), '_connection', Load(), lineno=1364, col_offset=11), Compare(Name('host', Load(), lineno=1364, col_offset=32), [Eq()], [Subscript(Attribute(Name('self', Load(), lineno=1364, col_offset=40), '_connection', Load(), lineno=1364, col_offset=40), Index(Num(0, lineno=1364, col_offset=57)), Load(), lineno=1364, col_offset=40)], lineno=1364, col_offset=32)], lineno=1364, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=1365, col_offset=19), '_connection', Load(), lineno=1365, col_offset=19), Index(Num(1, lineno=1365, col_offset=36)), Load(), lineno=1365, col_offset=19), lineno=1365, col_offset=12)], [], lineno=1364, col_offset=8), Assign([Tuple([Name('chost', Store(), lineno=1368, col_offset=8), Attribute(Name('self', Load(), lineno=1368, col_offset=15), '_extra_headers', Store(), lineno=1368, col_offset=15), Name('x509', Store(), lineno=1368, col_offset=36)], Store(), lineno=1368, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1368, col_offset=43), 'get_host_info', Load(), lineno=1368, col_offset=43), [Name('host', Load(), lineno=1368, col_offset=62)], [], None, None, lineno=1368, col_offset=43), lineno=1368, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1370, col_offset=8), '_connection', Store(), lineno=1370, col_offset=8)], Tuple([Name('host', Load(), lineno=1370, col_offset=27), Call(Attribute(Name('httplib', Load(), lineno=1370, col_offset=33), 'HTTPConnection', Load(), lineno=1370, col_offset=33), [Name('chost', Load(), lineno=1370, col_offset=56)], [], None, None, lineno=1370, col_offset=33)], Load(), lineno=1370, col_offset=27), lineno=1370, col_offset=8), Return(Subscript(Attribute(Name('self', Load(), lineno=1371, col_offset=15), '_connection', Load(), lineno=1371, col_offset=15), Index(Num(1, lineno=1371, col_offset=32)), Load(), lineno=1371, col_offset=15), lineno=1371, col_offset=8)], [], lineno=1361, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=1377, col_offset=14)], None, None, []), [If(Subscript(Attribute(Name('self', Load(), lineno=1378, col_offset=11), '_connection', Load(), lineno=1378, col_offset=11), Index(Num(1, lineno=1378, col_offset=28)), Load(), lineno=1378, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1379, col_offset=12), '_connection', Load(), lineno=1379, col_offset=12), Index(Num(1, lineno=1379, col_offset=29)), Load(), lineno=1379, col_offset=12), 'close', Load(), lineno=1379, col_offset=12), [], [], None, None, lineno=1379, col_offset=12), lineno=1379, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1380, col_offset=12), '_connection', Store(), lineno=1380, col_offset=12)], Tuple([Name('None', Load(), lineno=1380, col_offset=32), Name('None', Load(), lineno=1380, col_offset=38)], Load(), lineno=1380, col_offset=32), lineno=1380, col_offset=12)], [], lineno=1378, col_offset=8)], [], lineno=1377, col_offset=4), FunctionDef('send_request', arguments([Name('self', Param(), lineno=1389, col_offset=21), Name('connection', Param(), lineno=1389, col_offset=27), Name('handler', Param(), lineno=1389, col_offset=39), Name('request_body', Param(), lineno=1389, col_offset=48)], None, None, []), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1390, col_offset=12), 'accept_gzip_encoding', Load(), lineno=1390, col_offset=12), Name('gzip', Load(), lineno=1390, col_offset=42)], lineno=1390, col_offset=12), [Expr(Call(Attribute(Name('connection', Load(), lineno=1391, col_offset=12), 'putrequest', Load(), lineno=1391, col_offset=12), [Str('POST', lineno=1391, col_offset=34), Name('handler', Load(), lineno=1391, col_offset=42)], [keyword('skip_accept_encoding', Name('True', Load(), lineno=1391, col_offset=72))], None, None, lineno=1391, col_offset=12), lineno=1391, col_offset=12), Expr(Call(Attribute(Name('connection', Load(), lineno=1392, col_offset=12), 'putheader', Load(), lineno=1392, col_offset=12), [Str('Accept-Encoding', lineno=1392, col_offset=33), Str('gzip', lineno=1392, col_offset=52)], [], None, None, lineno=1392, col_offset=12), lineno=1392, col_offset=12)], [Expr(Call(Attribute(Name('connection', Load(), lineno=1394, col_offset=12), 'putrequest', Load(), lineno=1394, col_offset=12), [Str('POST', lineno=1394, col_offset=34), Name('handler', Load(), lineno=1394, col_offset=42)], [], None, None, lineno=1394, col_offset=12), lineno=1394, col_offset=12)], lineno=1390, col_offset=8)], [], lineno=1389, col_offset=4), FunctionDef('send_host', arguments([Name('self', Param(), lineno=1406, col_offset=18), Name('connection', Param(), lineno=1406, col_offset=24), Name('host', Param(), lineno=1406, col_offset=36)], None, None, []), [Assign([Name('extra_headers', Store(), lineno=1407, col_offset=8)], Attribute(Name('self', Load(), lineno=1407, col_offset=24), '_extra_headers', Load(), lineno=1407, col_offset=24), lineno=1407, col_offset=8), If(Name('extra_headers', Load(), lineno=1408, col_offset=11), [If(Call(Name('isinstance', Load(), lineno=1409, col_offset=15), [Name('extra_headers', Load(), lineno=1409, col_offset=26), Name('DictType', Load(), lineno=1409, col_offset=41)], [], None, None, lineno=1409, col_offset=15), [Assign([Name('extra_headers', Store(), lineno=1410, col_offset=16)], Call(Attribute(Name('extra_headers', Load(), lineno=1410, col_offset=32), 'items', Load(), lineno=1410, col_offset=32), [], [], None, None, lineno=1410, col_offset=32), lineno=1410, col_offset=16)], [], lineno=1409, col_offset=12), For(Tuple([Name('key', Store(), lineno=1411, col_offset=16), Name('value', Store(), lineno=1411, col_offset=21)], Store(), lineno=1411, col_offset=16), Name('extra_headers', Load(), lineno=1411, col_offset=30), [Expr(Call(Attribute(Name('connection', Load(), lineno=1412, col_offset=16), 'putheader', Load(), lineno=1412, col_offset=16), [Name('key', Load(), lineno=1412, col_offset=37), Name('value', Load(), lineno=1412, col_offset=42)], [], None, None, lineno=1412, col_offset=16), lineno=1412, col_offset=16)], [], lineno=1411, col_offset=12)], [], lineno=1408, col_offset=8)], [], lineno=1406, col_offset=4), FunctionDef('send_user_agent', arguments([Name('self', Param(), lineno=1419, col_offset=24), Name('connection', Param(), lineno=1419, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('connection', Load(), lineno=1420, col_offset=8), 'putheader', Load(), lineno=1420, col_offset=8), [Str('User-Agent', lineno=1420, col_offset=29), Attribute(Name('self', Load(), lineno=1420, col_offset=43), 'user_agent', Load(), lineno=1420, col_offset=43)], [], None, None, lineno=1420, col_offset=8), lineno=1420, col_offset=8)], [], lineno=1419, col_offset=4), FunctionDef('send_content', arguments([Name('self', Param(), lineno=1428, col_offset=21), Name('connection', Param(), lineno=1428, col_offset=27), Name('request_body', Param(), lineno=1428, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('connection', Load(), lineno=1429, col_offset=8), 'putheader', Load(), lineno=1429, col_offset=8), [Str('Content-Type', lineno=1429, col_offset=29), Str('text/xml', lineno=1429, col_offset=45)], [], None, None, lineno=1429, col_offset=8), lineno=1429, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=1432, col_offset=12), 'encode_threshold', Load(), lineno=1432, col_offset=12), [IsNot()], [Name('None', Load(), lineno=1432, col_offset=41)], lineno=1432, col_offset=12), Compare(Attribute(Name('self', Load(), lineno=1433, col_offset=12), 'encode_threshold', Load(), lineno=1433, col_offset=12), [Lt()], [Call(Name('len', Load(), lineno=1433, col_offset=36), [Name('request_body', Load(), lineno=1433, col_offset=40)], [], None, None, lineno=1433, col_offset=36)], lineno=1433, col_offset=12), Name('gzip', Load(), lineno=1434, col_offset=12)], lineno=1432, col_offset=12), [Expr(Call(Attribute(Name('connection', Load(), lineno=1435, col_offset=12), 'putheader', Load(), lineno=1435, col_offset=12), [Str('Content-Encoding', lineno=1435, col_offset=33), Str('gzip', lineno=1435, col_offset=53)], [], None, None, lineno=1435, col_offset=12), lineno=1435, col_offset=12), Assign([Name('request_body', Store(), lineno=1436, col_offset=12)], Call(Name('gzip_encode', Load(), lineno=1436, col_offset=27), [Name('request_body', Load(), lineno=1436, col_offset=39)], [], None, None, lineno=1436, col_offset=27), lineno=1436, col_offset=12)], [], lineno=1432, col_offset=8), Expr(Call(Attribute(Name('connection', Load(), lineno=1438, col_offset=8), 'putheader', Load(), lineno=1438, col_offset=8), [Str('Content-Length', lineno=1438, col_offset=29), Call(Name('str', Load(), lineno=1438, col_offset=47), [Call(Name('len', Load(), lineno=1438, col_offset=51), [Name('request_body', Load(), lineno=1438, col_offset=55)], [], None, None, lineno=1438, col_offset=51)], [], None, None, lineno=1438, col_offset=47)], [], None, None, lineno=1438, col_offset=8), lineno=1438, col_offset=8), Expr(Call(Attribute(Name('connection', Load(), lineno=1439, col_offset=8), 'endheaders', Load(), lineno=1439, col_offset=8), [Name('request_body', Load(), lineno=1439, col_offset=30)], [], None, None, lineno=1439, col_offset=8), lineno=1439, col_offset=8)], [], lineno=1428, col_offset=4), FunctionDef('parse_response', arguments([Name('self', Param(), lineno=1447, col_offset=23), Name('response', Param(), lineno=1447, col_offset=29)], None, None, []), [If(Compare(Call(Attribute(Name('response', Load(), lineno=1449, col_offset=11), 'getheader', Load(), lineno=1449, col_offset=11), [Str('Content-Encoding', lineno=1449, col_offset=30), Str('', lineno=1449, col_offset=50)], [], None, None, lineno=1449, col_offset=11), [Eq()], [Str('gzip', lineno=1449, col_offset=57)], lineno=1449, col_offset=11), [Assign([Name('stream', Store(), lineno=1450, col_offset=12)], Call(Name('GzipDecodedResponse', Load(), lineno=1450, col_offset=21), [Name('response', Load(), lineno=1450, col_offset=41)], [], None, None, lineno=1450, col_offset=21), lineno=1450, col_offset=12)], [Assign([Name('stream', Store(), lineno=1452, col_offset=12)], Name('response', Load(), lineno=1452, col_offset=21), lineno=1452, col_offset=12)], lineno=1449, col_offset=8), Assign([Tuple([Name('p', Store(), lineno=1454, col_offset=8), Name('u', Store(), lineno=1454, col_offset=11)], Store(), lineno=1454, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1454, col_offset=15), 'getparser', Load(), lineno=1454, col_offset=15), [], [], None, None, lineno=1454, col_offset=15), lineno=1454, col_offset=8), While(Num(1, lineno=1456, col_offset=14), [Assign([Name('data', Store(), lineno=1457, col_offset=12)], Call(Attribute(Name('stream', Load(), lineno=1457, col_offset=19), 'read', Load(), lineno=1457, col_offset=19), [Num(1024, lineno=1457, col_offset=31)], [], None, None, lineno=1457, col_offset=19), lineno=1457, col_offset=12), If(UnaryOp(Not(), Name('data', Load(), lineno=1458, col_offset=19), lineno=1458, col_offset=15), [Break( lineno=1459, col_offset=16)], [], lineno=1458, col_offset=12), If(Attribute(Name('self', Load(), lineno=1460, col_offset=15), 'verbose', Load(), lineno=1460, col_offset=15), [Print(None, [Str('body:', lineno=1461, col_offset=22), Call(Name('repr', Load(), lineno=1461, col_offset=31), [Name('data', Load(), lineno=1461, col_offset=36)], [], None, None, lineno=1461, col_offset=31)], True, lineno=1461, col_offset=16)], [], lineno=1460, col_offset=12), Expr(Call(Attribute(Name('p', Load(), lineno=1462, col_offset=12), 'feed', Load(), lineno=1462, col_offset=12), [Name('data', Load(), lineno=1462, col_offset=19)], [], None, None, lineno=1462, col_offset=12), lineno=1462, col_offset=12)], [], lineno=1456, col_offset=8), If(Compare(Name('stream', Load(), lineno=1464, col_offset=11), [IsNot()], [Name('response', Load(), lineno=1464, col_offset=25)], lineno=1464, col_offset=11), [Expr(Call(Attribute(Name('stream', Load(), lineno=1465, col_offset=12), 'close', Load(), lineno=1465, col_offset=12), [], [], None, None, lineno=1465, col_offset=12), lineno=1465, col_offset=12)], [], lineno=1464, col_offset=8), Expr(Call(Attribute(Name('p', Load(), lineno=1466, col_offset=8), 'close', Load(), lineno=1466, col_offset=8), [], [], None, None, lineno=1466, col_offset=8), lineno=1466, col_offset=8), Return(Call(Attribute(Name('u', Load(), lineno=1468, col_offset=15), 'close', Load(), lineno=1468, col_offset=15), [], [], None, None, lineno=1468, col_offset=15), lineno=1468, col_offset=8)], [], lineno=1447, col_offset=4)], [], lineno=1232, col_offset=0), ClassDef('SafeTransport', [Name('Transport', Load(), lineno=1473, col_offset=20)], [Expr(Str('Handles an HTTPS transaction to an XML-RPC server.', lineno=1474, col_offset=4), lineno=1474, col_offset=4), FunctionDef('make_connection', arguments([Name('self', Param(), lineno=1478, col_offset=24), Name('host', Param(), lineno=1478, col_offset=30)], None, None, []), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1479, col_offset=11), '_connection', Load(), lineno=1479, col_offset=11), Compare(Name('host', Load(), lineno=1479, col_offset=32), [Eq()], [Subscript(Attribute(Name('self', Load(), lineno=1479, col_offset=40), '_connection', Load(), lineno=1479, col_offset=40), Index(Num(0, lineno=1479, col_offset=57)), Load(), lineno=1479, col_offset=40)], lineno=1479, col_offset=32)], lineno=1479, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=1480, col_offset=19), '_connection', Load(), lineno=1480, col_offset=19), Index(Num(1, lineno=1480, col_offset=36)), Load(), lineno=1480, col_offset=19), lineno=1480, col_offset=12)], [], lineno=1479, col_offset=8), TryExcept([Assign([Name('HTTPS', Store(), lineno=1484, col_offset=12)], Attribute(Name('httplib', Load(), lineno=1484, col_offset=20), 'HTTPSConnection', Load(), lineno=1484, col_offset=20), lineno=1484, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=1485, col_offset=15), None, [Raise(Call(Name('NotImplementedError', Load(), lineno=1486, col_offset=18), [Str("your version of httplib doesn't support HTTPS", lineno=1487, col_offset=16)], [], None, None, lineno=1486, col_offset=18), None, None, lineno=1486, col_offset=12)], lineno=1485, col_offset=8)], [Assign([Tuple([Name('chost', Store(), lineno=1490, col_offset=12), Attribute(Name('self', Load(), lineno=1490, col_offset=19), '_extra_headers', Store(), lineno=1490, col_offset=19), Name('x509', Store(), lineno=1490, col_offset=40)], Store(), lineno=1490, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1490, col_offset=47), 'get_host_info', Load(), lineno=1490, col_offset=47), [Name('host', Load(), lineno=1490, col_offset=66)], [], None, None, lineno=1490, col_offset=47), lineno=1490, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1491, col_offset=12), '_connection', Store(), lineno=1491, col_offset=12)], Tuple([Name('host', Load(), lineno=1491, col_offset=31), Call(Name('HTTPS', Load(), lineno=1491, col_offset=37), [Name('chost', Load(), lineno=1491, col_offset=43), Name('None', Load(), lineno=1491, col_offset=50)], [], None, BoolOp(Or(), [Name('x509', Load(), lineno=1491, col_offset=59), Dict([], [], lineno=1491, col_offset=67)], lineno=1491, col_offset=59), lineno=1491, col_offset=37)], Load(), lineno=1491, col_offset=31), lineno=1491, col_offset=12), Return(Subscript(Attribute(Name('self', Load(), lineno=1492, col_offset=19), '_connection', Load(), lineno=1492, col_offset=19), Index(Num(1, lineno=1492, col_offset=36)), Load(), lineno=1492, col_offset=19), lineno=1492, col_offset=12)], lineno=1483, col_offset=8)], [], lineno=1478, col_offset=4)], [], lineno=1473, col_offset=0), ClassDef('ServerProxy', [], [Expr(Str('uri [,options] -> a logical connection to an XML-RPC server\n\n    uri is the connection point on the server, given as\n    scheme://host/target.\n\n    The standard implementation always supports the "http" scheme.  If\n    SSL socket support is available (Python 2.0), it also supports\n    "https".\n\n    If the target part and the slash preceding it are both omitted,\n    "/RPC2" is assumed.\n\n    The following options can be given as keyword arguments:\n\n        transport: a transport factory\n        encoding: the request encoding (default is UTF-8)\n\n    All 8-bit strings passed to the server proxy are assumed to use\n    the given encoding.\n    ', lineno=1531, col_offset=-1), lineno=1531, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1533, col_offset=17), Name('uri', Param(), lineno=1533, col_offset=23), Name('transport', Param(), lineno=1533, col_offset=28), Name('encoding', Param(), lineno=1533, col_offset=44), Name('verbose', Param(), lineno=1533, col_offset=59), Name('allow_none', Param(), lineno=1534, col_offset=17), Name('use_datetime', Param(), lineno=1534, col_offset=31)], None, None, [Name('None', Load(), lineno=1533, col_offset=38), Name('None', Load(), lineno=1533, col_offset=53), Num(0, lineno=1533, col_offset=67), Num(0, lineno=1534, col_offset=28), Num(0, lineno=1534, col_offset=44)]), [Import([alias('urllib', None)], lineno=1538, col_offset=8), Assign([Tuple([Name('type', Store(), lineno=1539, col_offset=8), Name('uri', Store(), lineno=1539, col_offset=14)], Store(), lineno=1539, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=1539, col_offset=20), 'splittype', Load(), lineno=1539, col_offset=20), [Name('uri', Load(), lineno=1539, col_offset=37)], [], None, None, lineno=1539, col_offset=20), lineno=1539, col_offset=8), If(Compare(Name('type', Load(), lineno=1540, col_offset=11), [NotIn()], [Tuple([Str('http', lineno=1540, col_offset=24), Str('https', lineno=1540, col_offset=32)], Load(), lineno=1540, col_offset=24)], lineno=1540, col_offset=11), [Raise(Name('IOError', Load(), lineno=1541, col_offset=18), Str('unsupported XML-RPC protocol', lineno=1541, col_offset=27), None, lineno=1541, col_offset=12)], [], lineno=1540, col_offset=8), Assign([Tuple([Attribute(Name('self', Load(), lineno=1542, col_offset=8), '__host', Store(), lineno=1542, col_offset=8), Attribute(Name('self', Load(), lineno=1542, col_offset=21), '__handler', Store(), lineno=1542, col_offset=21)], Store(), lineno=1542, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=1542, col_offset=38), 'splithost', Load(), lineno=1542, col_offset=38), [Name('uri', Load(), lineno=1542, col_offset=55)], [], None, None, lineno=1542, col_offset=38), lineno=1542, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1543, col_offset=15), '__handler', Load(), lineno=1543, col_offset=15), lineno=1543, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=1544, col_offset=12), '__handler', Store(), lineno=1544, col_offset=12)], Str('/RPC2', lineno=1544, col_offset=29), lineno=1544, col_offset=12)], [], lineno=1543, col_offset=8), If(Compare(Name('transport', Load(), lineno=1546, col_offset=11), [Is()], [Name('None', Load(), lineno=1546, col_offset=24)], lineno=1546, col_offset=11), [If(Compare(Name('type', Load(), lineno=1547, col_offset=15), [Eq()], [Str('https', lineno=1547, col_offset=23)], lineno=1547, col_offset=15), [Assign([Name('transport', Store(), lineno=1548, col_offset=16)], Call(Name('SafeTransport', Load(), lineno=1548, col_offset=28), [], [keyword('use_datetime', Name('use_datetime', Load(), lineno=1548, col_offset=55))], None, None, lineno=1548, col_offset=28), lineno=1548, col_offset=16)], [Assign([Name('transport', Store(), lineno=1550, col_offset=16)], Call(Name('Transport', Load(), lineno=1550, col_offset=28), [], [keyword('use_datetime', Name('use_datetime', Load(), lineno=1550, col_offset=51))], None, None, lineno=1550, col_offset=28), lineno=1550, col_offset=16)], lineno=1547, col_offset=12)], [], lineno=1546, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1551, col_offset=8), '__transport', Store(), lineno=1551, col_offset=8)], Name('transport', Load(), lineno=1551, col_offset=27), lineno=1551, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1553, col_offset=8), '__encoding', Store(), lineno=1553, col_offset=8)], Name('encoding', Load(), lineno=1553, col_offset=26), lineno=1553, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1554, col_offset=8), '__verbose', Store(), lineno=1554, col_offset=8)], Name('verbose', Load(), lineno=1554, col_offset=25), lineno=1554, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1555, col_offset=8), '__allow_none', Store(), lineno=1555, col_offset=8)], Name('allow_none', Load(), lineno=1555, col_offset=28), lineno=1555, col_offset=8)], [], lineno=1533, col_offset=4), FunctionDef('__close', arguments([Name('self', Param(), lineno=1557, col_offset=16)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1558, col_offset=8), '__transport', Load(), lineno=1558, col_offset=8), 'close', Load(), lineno=1558, col_offset=8), [], [], None, None, lineno=1558, col_offset=8), lineno=1558, col_offset=8)], [], lineno=1557, col_offset=4), FunctionDef('__request', arguments([Name('self', Param(), lineno=1560, col_offset=18), Name('methodname', Param(), lineno=1560, col_offset=24), Name('params', Param(), lineno=1560, col_offset=36)], None, None, []), [Assign([Name('request', Store(), lineno=1563, col_offset=8)], Call(Name('dumps', Load(), lineno=1563, col_offset=18), [Name('params', Load(), lineno=1563, col_offset=24), Name('methodname', Load(), lineno=1563, col_offset=32)], [keyword('encoding', Attribute(Name('self', Load(), lineno=1563, col_offset=53), '__encoding', Load(), lineno=1563, col_offset=53)), keyword('allow_none', Attribute(Name('self', Load(), lineno=1564, col_offset=35), '__allow_none', Load(), lineno=1564, col_offset=35))], None, None, lineno=1563, col_offset=18), lineno=1563, col_offset=8), Assign([Name('response', Store(), lineno=1566, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1566, col_offset=19), '__transport', Load(), lineno=1566, col_offset=19), 'request', Load(), lineno=1566, col_offset=19), [Attribute(Name('self', Load(), lineno=1567, col_offset=12), '__host', Load(), lineno=1567, col_offset=12), Attribute(Name('self', Load(), lineno=1568, col_offset=12), '__handler', Load(), lineno=1568, col_offset=12), Name('request', Load(), lineno=1569, col_offset=12)], [keyword('verbose', Attribute(Name('self', Load(), lineno=1570, col_offset=20), '__verbose', Load(), lineno=1570, col_offset=20))], None, None, lineno=1566, col_offset=19), lineno=1566, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=1573, col_offset=11), [Name('response', Load(), lineno=1573, col_offset=15)], [], None, None, lineno=1573, col_offset=11), [Eq()], [Num(1, lineno=1573, col_offset=28)], lineno=1573, col_offset=11), [Assign([Name('response', Store(), lineno=1574, col_offset=12)], Subscript(Name('response', Load(), lineno=1574, col_offset=23), Index(Num(0, lineno=1574, col_offset=32)), Load(), lineno=1574, col_offset=23), lineno=1574, col_offset=12)], [], lineno=1573, col_offset=8), Return(Name('response', Load(), lineno=1576, col_offset=15), lineno=1576, col_offset=8)], [], lineno=1560, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=1578, col_offset=17)], None, None, []), [Return(BinOp(Str('<ServerProxy for %s%s>', lineno=1580, col_offset=12), Mod(), Tuple([Attribute(Name('self', Load(), lineno=1581, col_offset=13), '__host', Load(), lineno=1581, col_offset=13), Attribute(Name('self', Load(), lineno=1581, col_offset=26), '__handler', Load(), lineno=1581, col_offset=26)], Load(), lineno=1581, col_offset=13), lineno=1580, col_offset=12), lineno=1579, col_offset=8)], [], lineno=1578, col_offset=4), Assign([Name('__str__', Store(), lineno=1584, col_offset=4)], Name('__repr__', Load(), lineno=1584, col_offset=14), lineno=1584, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=1586, col_offset=20), Name('name', Param(), lineno=1586, col_offset=26)], None, None, []), [Return(Call(Name('_Method', Load(), lineno=1588, col_offset=15), [Attribute(Name('self', Load(), lineno=1588, col_offset=23), '__request', Load(), lineno=1588, col_offset=23), Name('name', Load(), lineno=1588, col_offset=39)], [], None, None, lineno=1588, col_offset=15), lineno=1588, col_offset=8)], [], lineno=1586, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=1593, col_offset=17), Name('attr', Param(), lineno=1593, col_offset=23)], None, None, []), [Expr(Str('A workaround to get special attributes on the ServerProxy\n           without interfering with the magic __getattr__\n        ', lineno=1596, col_offset=-1), lineno=1596, col_offset=-1), If(Compare(Name('attr', Load(), lineno=1597, col_offset=11), [Eq()], [Str('close', lineno=1597, col_offset=19)], lineno=1597, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=1598, col_offset=19), '__close', Load(), lineno=1598, col_offset=19), lineno=1598, col_offset=12)], [If(Compare(Name('attr', Load(), lineno=1599, col_offset=13), [Eq()], [Str('transport', lineno=1599, col_offset=21)], lineno=1599, col_offset=13), [Return(Attribute(Name('self', Load(), lineno=1600, col_offset=19), '__transport', Load(), lineno=1600, col_offset=19), lineno=1600, col_offset=12)], [], lineno=1599, col_offset=13)], lineno=1597, col_offset=8), Raise(Call(Name('AttributeError', Load(), lineno=1601, col_offset=14), [BinOp(Str('Attribute %r not found', lineno=1601, col_offset=29), Mod(), Tuple([Name('attr', Load(), lineno=1601, col_offset=57)], Load(), lineno=1601, col_offset=57), lineno=1601, col_offset=29)], [], None, None, lineno=1601, col_offset=14), None, None, lineno=1601, col_offset=8)], [], lineno=1593, col_offset=4)], [], lineno=1511, col_offset=0), Assign([Name('Server', Store(), lineno=1605, col_offset=0)], Name('ServerProxy', Load(), lineno=1605, col_offset=9), lineno=1605, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1610, col_offset=3), [Eq()], [Str('__main__', lineno=1610, col_offset=15)], lineno=1610, col_offset=3), [Assign([Name('server', Store(), lineno=1615, col_offset=4)], Call(Name('ServerProxy', Load(), lineno=1615, col_offset=13), [Str('http://time.xmlrpc.com/RPC2', lineno=1615, col_offset=25)], [], None, None, lineno=1615, col_offset=13), lineno=1615, col_offset=4), Print(None, [Name('server', Load(), lineno=1617, col_offset=10)], True, lineno=1617, col_offset=4), TryExcept([Print(None, [Call(Attribute(Attribute(Name('server', Load(), lineno=1620, col_offset=14), 'currentTime', Load(), lineno=1620, col_offset=14), 'getCurrentTime', Load(), lineno=1620, col_offset=14), [], [], None, None, lineno=1620, col_offset=14)], True, lineno=1620, col_offset=8)], [ExceptHandler(Name('Error', Load(), lineno=1621, col_offset=11), Name('v', Store(), lineno=1621, col_offset=18), [Print(None, [Str('ERROR', lineno=1622, col_offset=14), Name('v', Load(), lineno=1622, col_offset=23)], True, lineno=1622, col_offset=8)], lineno=1621, col_offset=4)], [], lineno=1619, col_offset=4), Assign([Name('multi', Store(), lineno=1624, col_offset=4)], Call(Name('MultiCall', Load(), lineno=1624, col_offset=12), [Name('server', Load(), lineno=1624, col_offset=22)], [], None, None, lineno=1624, col_offset=12), lineno=1624, col_offset=4), Expr(Call(Attribute(Attribute(Name('multi', Load(), lineno=1625, col_offset=4), 'currentTime', Load(), lineno=1625, col_offset=4), 'getCurrentTime', Load(), lineno=1625, col_offset=4), [], [], None, None, lineno=1625, col_offset=4), lineno=1625, col_offset=4), Expr(Call(Attribute(Attribute(Name('multi', Load(), lineno=1626, col_offset=4), 'currentTime', Load(), lineno=1626, col_offset=4), 'getCurrentTime', Load(), lineno=1626, col_offset=4), [], [], None, None, lineno=1626, col_offset=4), lineno=1626, col_offset=4), TryExcept([For(Name('response', Store(), lineno=1628, col_offset=12), Call(Name('multi', Load(), lineno=1628, col_offset=24), [], [], None, None, lineno=1628, col_offset=24), [Print(None, [Name('response', Load(), lineno=1629, col_offset=18)], True, lineno=1629, col_offset=12)], [], lineno=1628, col_offset=8)], [ExceptHandler(Name('Error', Load(), lineno=1630, col_offset=11), Name('v', Store(), lineno=1630, col_offset=18), [Print(None, [Str('ERROR', lineno=1631, col_offset=14), Name('v', Load(), lineno=1631, col_offset=23)], True, lineno=1631, col_offset=8)], lineno=1630, col_offset=4)], [], lineno=1627, col_offset=4)], [], lineno=1610, col_offset=0)])
