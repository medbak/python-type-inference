Module([Expr(Str('Cache lines from files.\n\nThis is intended to read lines from modules imported -- hence if a filename\nis not found, it will look down the module search path for a file by\nthat name.\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('os', None)], lineno=9, col_offset=0), Assign([Name('__all__', Store(), lineno=11, col_offset=0)], List([Str('getline', lineno=11, col_offset=11), Str('clearcache', lineno=11, col_offset=22), Str('checkcache', lineno=11, col_offset=36)], Load(), lineno=11, col_offset=10), lineno=11, col_offset=0), FunctionDef('getline', arguments([Name('filename', Param(), lineno=13, col_offset=12), Name('lineno', Param(), lineno=13, col_offset=22), Name('module_globals', Param(), lineno=13, col_offset=30)], None, None, [Name('None', Load(), lineno=13, col_offset=45)]), [Assign([Name('lines', Store(), lineno=14, col_offset=4)], Call(Name('getlines', Load(), lineno=14, col_offset=12), [Name('filename', Load(), lineno=14, col_offset=21), Name('module_globals', Load(), lineno=14, col_offset=31)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=4), If(Compare(Num(1, lineno=15, col_offset=7), [LtE(), LtE()], [Name('lineno', Load(), lineno=15, col_offset=12), Call(Name('len', Load(), lineno=15, col_offset=22), [Name('lines', Load(), lineno=15, col_offset=26)], [], None, None, lineno=15, col_offset=22)], lineno=15, col_offset=7), [Return(Subscript(Name('lines', Load(), lineno=16, col_offset=15), Index(BinOp(Name('lineno', Load(), lineno=16, col_offset=21), Sub(), Num(1, lineno=16, col_offset=28), lineno=16, col_offset=21)), Load(), lineno=16, col_offset=15), lineno=16, col_offset=8)], [Return(Str('', lineno=18, col_offset=15), lineno=18, col_offset=8)], lineno=15, col_offset=4)], [], lineno=13, col_offset=0), Assign([Name('cache', Store(), lineno=23, col_offset=0)], Dict([], [], lineno=23, col_offset=8), lineno=23, col_offset=0), FunctionDef('clearcache', arguments([], None, None, []), [Expr(Str('Clear the cache entirely.', lineno=27, col_offset=4), lineno=27, col_offset=4), Global(['cache'], lineno=29, col_offset=4), Assign([Name('cache', Store(), lineno=30, col_offset=4)], Dict([], [], lineno=30, col_offset=12), lineno=30, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('getlines', arguments([Name('filename', Param(), lineno=33, col_offset=13), Name('module_globals', Param(), lineno=33, col_offset=23)], None, None, [Name('None', Load(), lineno=33, col_offset=38)]), [Expr(Str("Get the lines for a file from the cache.\n    Update the cache if it doesn't contain an entry for this file already.", lineno=35, col_offset=-1), lineno=35, col_offset=-1), If(Compare(Name('filename', Load(), lineno=37, col_offset=7), [In()], [Name('cache', Load(), lineno=37, col_offset=19)], lineno=37, col_offset=7), [Return(Subscript(Subscript(Name('cache', Load(), lineno=38, col_offset=15), Index(Name('filename', Load(), lineno=38, col_offset=21)), Load(), lineno=38, col_offset=15), Index(Num(2, lineno=38, col_offset=31)), Load(), lineno=38, col_offset=15), lineno=38, col_offset=8)], [Return(Call(Name('updatecache', Load(), lineno=40, col_offset=15), [Name('filename', Load(), lineno=40, col_offset=27), Name('module_globals', Load(), lineno=40, col_offset=37)], [], None, None, lineno=40, col_offset=15), lineno=40, col_offset=8)], lineno=37, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('checkcache', arguments([Name('filename', Param(), lineno=43, col_offset=15)], None, None, [Name('None', Load(), lineno=43, col_offset=24)]), [Expr(Str('Discard cache entries that are out of date.\n    (This is not checked upon each call!)', lineno=45, col_offset=-1), lineno=45, col_offset=-1), If(Compare(Name('filename', Load(), lineno=47, col_offset=7), [Is()], [Name('None', Load(), lineno=47, col_offset=19)], lineno=47, col_offset=7), [Assign([Name('filenames', Store(), lineno=48, col_offset=8)], Call(Attribute(Name('cache', Load(), lineno=48, col_offset=20), 'keys', Load(), lineno=48, col_offset=20), [], [], None, None, lineno=48, col_offset=20), lineno=48, col_offset=8)], [If(Compare(Name('filename', Load(), lineno=50, col_offset=11), [In()], [Name('cache', Load(), lineno=50, col_offset=23)], lineno=50, col_offset=11), [Assign([Name('filenames', Store(), lineno=51, col_offset=12)], List([Name('filename', Load(), lineno=51, col_offset=25)], Load(), lineno=51, col_offset=24), lineno=51, col_offset=12)], [Return(None, lineno=53, col_offset=12)], lineno=50, col_offset=8)], lineno=47, col_offset=4), For(Name('filename', Store(), lineno=55, col_offset=8), Name('filenames', Load(), lineno=55, col_offset=20), [Assign([Tuple([Name('size', Store(), lineno=56, col_offset=8), Name('mtime', Store(), lineno=56, col_offset=14), Name('lines', Store(), lineno=56, col_offset=21), Name('fullname', Store(), lineno=56, col_offset=28)], Store(), lineno=56, col_offset=8)], Subscript(Name('cache', Load(), lineno=56, col_offset=39), Index(Name('filename', Load(), lineno=56, col_offset=45)), Load(), lineno=56, col_offset=39), lineno=56, col_offset=8), If(Compare(Name('mtime', Load(), lineno=57, col_offset=11), [Is()], [Name('None', Load(), lineno=57, col_offset=20)], lineno=57, col_offset=11), [Continue( lineno=58, col_offset=12)], [], lineno=57, col_offset=8), TryExcept([Assign([Name('stat', Store(), lineno=60, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=60, col_offset=19), 'stat', Load(), lineno=60, col_offset=19), [Name('fullname', Load(), lineno=60, col_offset=27)], [], None, None, lineno=60, col_offset=19), lineno=60, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=61, col_offset=15), 'error', Load(), lineno=61, col_offset=15), None, [Delete([Subscript(Name('cache', Load(), lineno=62, col_offset=16), Index(Name('filename', Load(), lineno=62, col_offset=22)), Del(), lineno=62, col_offset=16)], lineno=62, col_offset=12), Continue( lineno=63, col_offset=12)], lineno=61, col_offset=8)], [], lineno=59, col_offset=8), If(BoolOp(Or(), [Compare(Name('size', Load(), lineno=64, col_offset=11), [NotEq()], [Attribute(Name('stat', Load(), lineno=64, col_offset=19), 'st_size', Load(), lineno=64, col_offset=19)], lineno=64, col_offset=11), Compare(Name('mtime', Load(), lineno=64, col_offset=35), [NotEq()], [Attribute(Name('stat', Load(), lineno=64, col_offset=44), 'st_mtime', Load(), lineno=64, col_offset=44)], lineno=64, col_offset=35)], lineno=64, col_offset=11), [Delete([Subscript(Name('cache', Load(), lineno=65, col_offset=16), Index(Name('filename', Load(), lineno=65, col_offset=22)), Del(), lineno=65, col_offset=16)], lineno=65, col_offset=12)], [], lineno=64, col_offset=8)], [], lineno=55, col_offset=4)], [], lineno=43, col_offset=0), FunctionDef('updatecache', arguments([Name('filename', Param(), lineno=68, col_offset=16), Name('module_globals', Param(), lineno=68, col_offset=26)], None, None, [Name('None', Load(), lineno=68, col_offset=41)]), [Expr(Str("Update a cache entry and return its list of lines.\n    If something's wrong, print a message, discard the cache entry,\n    and return an empty list.", lineno=71, col_offset=-1), lineno=71, col_offset=-1), If(Compare(Name('filename', Load(), lineno=73, col_offset=7), [In()], [Name('cache', Load(), lineno=73, col_offset=19)], lineno=73, col_offset=7), [Delete([Subscript(Name('cache', Load(), lineno=74, col_offset=12), Index(Name('filename', Load(), lineno=74, col_offset=18)), Del(), lineno=74, col_offset=12)], lineno=74, col_offset=8)], [], lineno=73, col_offset=4), If(BoolOp(Or(), [UnaryOp(Not(), Name('filename', Load(), lineno=75, col_offset=11), lineno=75, col_offset=7), BoolOp(And(), [Call(Attribute(Name('filename', Load(), lineno=75, col_offset=24), 'startswith', Load(), lineno=75, col_offset=24), [Str('<', lineno=75, col_offset=44)], [], None, None, lineno=75, col_offset=24), Call(Attribute(Name('filename', Load(), lineno=75, col_offset=53), 'endswith', Load(), lineno=75, col_offset=53), [Str('>', lineno=75, col_offset=71)], [], None, None, lineno=75, col_offset=53)], lineno=75, col_offset=24)], lineno=75, col_offset=7), [Return(List([], Load(), lineno=76, col_offset=15), lineno=76, col_offset=8)], [], lineno=75, col_offset=4), Assign([Name('fullname', Store(), lineno=78, col_offset=4)], Name('filename', Load(), lineno=78, col_offset=15), lineno=78, col_offset=4), TryExcept([Assign([Name('stat', Store(), lineno=80, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=80, col_offset=15), 'stat', Load(), lineno=80, col_offset=15), [Name('fullname', Load(), lineno=80, col_offset=23)], [], None, None, lineno=80, col_offset=15), lineno=80, col_offset=8)], [ExceptHandler(Name('OSError', Load(), lineno=81, col_offset=11), None, [Assign([Name('basename', Store(), lineno=82, col_offset=8)], Name('filename', Load(), lineno=82, col_offset=19), lineno=82, col_offset=8), If(BoolOp(And(), [Name('module_globals', Load(), lineno=85, col_offset=11), Compare(Str('__loader__', lineno=85, col_offset=30), [In()], [Name('module_globals', Load(), lineno=85, col_offset=46)], lineno=85, col_offset=30)], lineno=85, col_offset=11), [Assign([Name('name', Store(), lineno=86, col_offset=12)], Call(Attribute(Name('module_globals', Load(), lineno=86, col_offset=19), 'get', Load(), lineno=86, col_offset=19), [Str('__name__', lineno=86, col_offset=38)], [], None, None, lineno=86, col_offset=19), lineno=86, col_offset=12), Assign([Name('loader', Store(), lineno=87, col_offset=12)], Subscript(Name('module_globals', Load(), lineno=87, col_offset=21), Index(Str('__loader__', lineno=87, col_offset=36)), Load(), lineno=87, col_offset=21), lineno=87, col_offset=12), Assign([Name('get_source', Store(), lineno=88, col_offset=12)], Call(Name('getattr', Load(), lineno=88, col_offset=25), [Name('loader', Load(), lineno=88, col_offset=33), Str('get_source', lineno=88, col_offset=41), Name('None', Load(), lineno=88, col_offset=55)], [], None, None, lineno=88, col_offset=25), lineno=88, col_offset=12), If(BoolOp(And(), [Name('name', Load(), lineno=90, col_offset=15), Name('get_source', Load(), lineno=90, col_offset=24)], lineno=90, col_offset=15), [TryExcept([Assign([Name('data', Store(), lineno=92, col_offset=20)], Call(Name('get_source', Load(), lineno=92, col_offset=27), [Name('name', Load(), lineno=92, col_offset=38)], [], None, None, lineno=92, col_offset=27), lineno=92, col_offset=20)], [ExceptHandler(Tuple([Name('ImportError', Load(), lineno=93, col_offset=24), Name('IOError', Load(), lineno=93, col_offset=37)], Load(), lineno=93, col_offset=24), None, [Pass( lineno=94, col_offset=20)], lineno=93, col_offset=16)], [If(Compare(Name('data', Load(), lineno=96, col_offset=23), [Is()], [Name('None', Load(), lineno=96, col_offset=31)], lineno=96, col_offset=23), [Return(List([], Load(), lineno=99, col_offset=31), lineno=99, col_offset=24)], [], lineno=96, col_offset=20), Assign([Subscript(Name('cache', Load(), lineno=100, col_offset=20), Index(Name('filename', Load(), lineno=100, col_offset=26)), Store(), lineno=100, col_offset=20)], Tuple([Call(Name('len', Load(), lineno=101, col_offset=24), [Name('data', Load(), lineno=101, col_offset=28)], [], None, None, lineno=101, col_offset=24), Name('None', Load(), lineno=101, col_offset=35), ListComp(BinOp(Name('line', Load(), lineno=102, col_offset=25), Add(), Str('\n', lineno=102, col_offset=30), lineno=102, col_offset=25), [comprehension(Name('line', Store(), lineno=102, col_offset=39), Call(Attribute(Name('data', Load(), lineno=102, col_offset=47), 'splitlines', Load(), lineno=102, col_offset=47), [], [], None, None, lineno=102, col_offset=47), [])], lineno=102, col_offset=25), Name('fullname', Load(), lineno=102, col_offset=67)], Load(), lineno=101, col_offset=24), lineno=100, col_offset=20), Return(Subscript(Subscript(Name('cache', Load(), lineno=104, col_offset=27), Index(Name('filename', Load(), lineno=104, col_offset=33)), Load(), lineno=104, col_offset=27), Index(Num(2, lineno=104, col_offset=43)), Load(), lineno=104, col_offset=27), lineno=104, col_offset=20)], lineno=91, col_offset=16)], [], lineno=90, col_offset=12)], [], lineno=85, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=108, col_offset=11), 'path', Load(), lineno=108, col_offset=11), 'isabs', Load(), lineno=108, col_offset=11), [Name('filename', Load(), lineno=108, col_offset=25)], [], None, None, lineno=108, col_offset=11), [Return(List([], Load(), lineno=109, col_offset=19), lineno=109, col_offset=12)], [], lineno=108, col_offset=8), For(Name('dirname', Store(), lineno=111, col_offset=12), Attribute(Name('sys', Load(), lineno=111, col_offset=23), 'path', Load(), lineno=111, col_offset=23), [TryExcept([Assign([Name('fullname', Store(), lineno=115, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=115, col_offset=27), 'path', Load(), lineno=115, col_offset=27), 'join', Load(), lineno=115, col_offset=27), [Name('dirname', Load(), lineno=115, col_offset=40), Name('basename', Load(), lineno=115, col_offset=49)], [], None, None, lineno=115, col_offset=27), lineno=115, col_offset=16)], [ExceptHandler(Tuple([Name('TypeError', Load(), lineno=116, col_offset=20), Name('AttributeError', Load(), lineno=116, col_offset=31)], Load(), lineno=116, col_offset=20), None, [Continue( lineno=118, col_offset=16)], lineno=116, col_offset=12)], [], lineno=114, col_offset=12), TryExcept([Assign([Name('stat', Store(), lineno=120, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=120, col_offset=23), 'stat', Load(), lineno=120, col_offset=23), [Name('fullname', Load(), lineno=120, col_offset=31)], [], None, None, lineno=120, col_offset=23), lineno=120, col_offset=16), Break( lineno=121, col_offset=16)], [ExceptHandler(Attribute(Name('os', Load(), lineno=122, col_offset=19), 'error', Load(), lineno=122, col_offset=19), None, [Pass( lineno=123, col_offset=16)], lineno=122, col_offset=12)], [], lineno=119, col_offset=12)], [Return(List([], Load(), lineno=125, col_offset=19), lineno=125, col_offset=12)], lineno=111, col_offset=8)], lineno=81, col_offset=4)], [], lineno=79, col_offset=4), TryExcept([With(Call(Name('open', Load(), lineno=127, col_offset=13), [Name('fullname', Load(), lineno=127, col_offset=18), Str('rU', lineno=127, col_offset=28)], [], None, None, lineno=127, col_offset=13), Name('fp', Store(), lineno=127, col_offset=37), [Assign([Name('lines', Store(), lineno=128, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=128, col_offset=20), 'readlines', Load(), lineno=128, col_offset=20), [], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=12)], lineno=127, col_offset=13)], [ExceptHandler(Name('IOError', Load(), lineno=129, col_offset=11), None, [Return(List([], Load(), lineno=130, col_offset=15), lineno=130, col_offset=8)], lineno=129, col_offset=4)], [], lineno=126, col_offset=4), If(BoolOp(And(), [Name('lines', Load(), lineno=131, col_offset=7), UnaryOp(Not(), Call(Attribute(Subscript(Name('lines', Load(), lineno=131, col_offset=21), Index(Num(-1, lineno=131, col_offset=28)), Load(), lineno=131, col_offset=21), 'endswith', Load(), lineno=131, col_offset=21), [Str('\n', lineno=131, col_offset=40)], [], None, None, lineno=131, col_offset=21), lineno=131, col_offset=17)], lineno=131, col_offset=7), [AugAssign(Subscript(Name('lines', Load(), lineno=132, col_offset=8), Index(Num(-1, lineno=132, col_offset=15)), Store(), lineno=132, col_offset=8), Add(), Str('\n', lineno=132, col_offset=21), lineno=132, col_offset=8)], [], lineno=131, col_offset=4), Assign([Tuple([Name('size', Store(), lineno=133, col_offset=4), Name('mtime', Store(), lineno=133, col_offset=10)], Store(), lineno=133, col_offset=4)], Tuple([Attribute(Name('stat', Load(), lineno=133, col_offset=18), 'st_size', Load(), lineno=133, col_offset=18), Attribute(Name('stat', Load(), lineno=133, col_offset=32), 'st_mtime', Load(), lineno=133, col_offset=32)], Load(), lineno=133, col_offset=18), lineno=133, col_offset=4), Assign([Subscript(Name('cache', Load(), lineno=134, col_offset=4), Index(Name('filename', Load(), lineno=134, col_offset=10)), Store(), lineno=134, col_offset=4)], Tuple([Name('size', Load(), lineno=134, col_offset=22), Name('mtime', Load(), lineno=134, col_offset=28), Name('lines', Load(), lineno=134, col_offset=35), Name('fullname', Load(), lineno=134, col_offset=42)], Load(), lineno=134, col_offset=22), lineno=134, col_offset=4), Return(Name('lines', Load(), lineno=135, col_offset=11), lineno=135, col_offset=4)], [], lineno=68, col_offset=0)])
