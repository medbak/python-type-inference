Module([ImportFrom('test.test_support', [alias('have_unicode', None), alias('run_unittest', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ClassDef('base_set', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=6, col_offset=17), Name('el', Param(), lineno=6, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=7, col_offset=8), 'el', Store(), lineno=7, col_offset=8)], Name('el', Load(), lineno=7, col_offset=18), lineno=7, col_offset=8)], [], lineno=6, col_offset=4)], [], lineno=5, col_offset=0), ClassDef('set', [Name('base_set', Load(), lineno=9, col_offset=10)], [FunctionDef('__contains__', arguments([Name('self', Param(), lineno=10, col_offset=21), Name('el', Param(), lineno=10, col_offset=27)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=11, col_offset=15), 'el', Load(), lineno=11, col_offset=15), [Eq()], [Name('el', Load(), lineno=11, col_offset=26)], lineno=11, col_offset=15), lineno=11, col_offset=8)], [], lineno=10, col_offset=4)], [], lineno=9, col_offset=0), ClassDef('seq', [Name('base_set', Load(), lineno=13, col_offset=10)], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=14, col_offset=20), Name('n', Param(), lineno=14, col_offset=26)], None, None, []), [Return(Subscript(List([Attribute(Name('self', Load(), lineno=15, col_offset=16), 'el', Load(), lineno=15, col_offset=16)], Load(), lineno=15, col_offset=15), Index(Name('n', Load(), lineno=15, col_offset=25)), Load(), lineno=15, col_offset=15), lineno=15, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('TestContains', [Attribute(Name('unittest', Load(), lineno=18, col_offset=19), 'TestCase', Load(), lineno=18, col_offset=19)], [FunctionDef('test_common_tests', arguments([Name('self', Param(), lineno=19, col_offset=26)], None, None, []), [Assign([Name('a', Store(), lineno=20, col_offset=8)], Call(Name('base_set', Load(), lineno=20, col_offset=12), [Num(1, lineno=20, col_offset=21)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=8), Assign([Name('b', Store(), lineno=21, col_offset=8)], Call(Name('set', Load(), lineno=21, col_offset=12), [Num(1, lineno=21, col_offset=16)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=8), Assign([Name('c', Store(), lineno=22, col_offset=8)], Call(Name('seq', Load(), lineno=22, col_offset=12), [Num(1, lineno=22, col_offset=16)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertIn', Load(), lineno=23, col_offset=8), [Num(1, lineno=23, col_offset=22), Name('b', Load(), lineno=23, col_offset=25)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertNotIn', Load(), lineno=24, col_offset=8), [Num(0, lineno=24, col_offset=25), Name('b', Load(), lineno=24, col_offset=28)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertIn', Load(), lineno=25, col_offset=8), [Num(1, lineno=25, col_offset=22), Name('c', Load(), lineno=25, col_offset=25)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertNotIn', Load(), lineno=26, col_offset=8), [Num(0, lineno=26, col_offset=25), Name('c', Load(), lineno=26, col_offset=28)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertRaises', Load(), lineno=27, col_offset=8), [Name('TypeError', Load(), lineno=27, col_offset=26), Lambda(arguments([], None, None, []), Compare(Num(1, lineno=27, col_offset=45), [In()], [Name('a', Load(), lineno=27, col_offset=50)], lineno=27, col_offset=45), lineno=27, col_offset=37)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertRaises', Load(), lineno=28, col_offset=8), [Name('TypeError', Load(), lineno=28, col_offset=26), Lambda(arguments([], None, None, []), Compare(Num(1, lineno=28, col_offset=45), [NotIn()], [Name('a', Load(), lineno=28, col_offset=54)], lineno=28, col_offset=45), lineno=28, col_offset=37)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertIn', Load(), lineno=31, col_offset=8), [Str('c', lineno=31, col_offset=22), Str('abc', lineno=31, col_offset=27)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertNotIn', Load(), lineno=32, col_offset=8), [Str('d', lineno=32, col_offset=25), Str('abc', lineno=32, col_offset=30)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertIn', Load(), lineno=34, col_offset=8), [Str('', lineno=34, col_offset=22), Str('', lineno=34, col_offset=26)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertIn', Load(), lineno=35, col_offset=8), [Str('', lineno=35, col_offset=22), Str('abc', lineno=35, col_offset=26)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertRaises', Load(), lineno=37, col_offset=8), [Name('TypeError', Load(), lineno=37, col_offset=26), Lambda(arguments([], None, None, []), Compare(Name('None', Load(), lineno=37, col_offset=45), [In()], [Str('abc', lineno=37, col_offset=53)], lineno=37, col_offset=45), lineno=37, col_offset=37)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8)], [], lineno=19, col_offset=4), If(Name('have_unicode', Load(), lineno=39, col_offset=7), [FunctionDef('test_char_in_unicode', arguments([Name('self', Param(), lineno=40, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=12), 'assertIn', Load(), lineno=41, col_offset=12), [Str('c', lineno=41, col_offset=26), Call(Name('unicode', Load(), lineno=41, col_offset=31), [Str('abc', lineno=41, col_offset=39)], [], None, None, lineno=41, col_offset=31)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'assertNotIn', Load(), lineno=42, col_offset=12), [Str('d', lineno=42, col_offset=29), Call(Name('unicode', Load(), lineno=42, col_offset=34), [Str('abc', lineno=42, col_offset=42)], [], None, None, lineno=42, col_offset=34)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'assertIn', Load(), lineno=44, col_offset=12), [Str('', lineno=44, col_offset=26), Call(Name('unicode', Load(), lineno=44, col_offset=30), [Str('', lineno=44, col_offset=38)], [], None, None, lineno=44, col_offset=30)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=12), 'assertIn', Load(), lineno=45, col_offset=12), [Call(Name('unicode', Load(), lineno=45, col_offset=26), [Str('', lineno=45, col_offset=34)], [], None, None, lineno=45, col_offset=26), Str('', lineno=45, col_offset=39)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=12), 'assertIn', Load(), lineno=46, col_offset=12), [Call(Name('unicode', Load(), lineno=46, col_offset=26), [Str('', lineno=46, col_offset=34)], [], None, None, lineno=46, col_offset=26), Call(Name('unicode', Load(), lineno=46, col_offset=39), [Str('', lineno=46, col_offset=47)], [], None, None, lineno=46, col_offset=39)], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=12), 'assertIn', Load(), lineno=47, col_offset=12), [Str('', lineno=47, col_offset=26), Call(Name('unicode', Load(), lineno=47, col_offset=30), [Str('abc', lineno=47, col_offset=38)], [], None, None, lineno=47, col_offset=30)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=12), 'assertIn', Load(), lineno=48, col_offset=12), [Call(Name('unicode', Load(), lineno=48, col_offset=26), [Str('', lineno=48, col_offset=34)], [], None, None, lineno=48, col_offset=26), Str('abc', lineno=48, col_offset=39)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=12), 'assertIn', Load(), lineno=49, col_offset=12), [Call(Name('unicode', Load(), lineno=49, col_offset=26), [Str('', lineno=49, col_offset=34)], [], None, None, lineno=49, col_offset=26), Call(Name('unicode', Load(), lineno=49, col_offset=39), [Str('abc', lineno=49, col_offset=47)], [], None, None, lineno=49, col_offset=39)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=12), 'assertRaises', Load(), lineno=51, col_offset=12), [Name('TypeError', Load(), lineno=51, col_offset=30), Lambda(arguments([], None, None, []), Compare(Name('None', Load(), lineno=51, col_offset=49), [In()], [Call(Name('unicode', Load(), lineno=51, col_offset=57), [Str('abc', lineno=51, col_offset=65)], [], None, None, lineno=51, col_offset=57)], lineno=51, col_offset=49), lineno=51, col_offset=41)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertIn', Load(), lineno=54, col_offset=12), [Call(Name('unicode', Load(), lineno=54, col_offset=26), [Str('c', lineno=54, col_offset=34)], [], None, None, lineno=54, col_offset=26), Call(Name('unicode', Load(), lineno=54, col_offset=40), [Str('abc', lineno=54, col_offset=48)], [], None, None, lineno=54, col_offset=40)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=12), 'assertNotIn', Load(), lineno=55, col_offset=12), [Call(Name('unicode', Load(), lineno=55, col_offset=29), [Str('d', lineno=55, col_offset=37)], [], None, None, lineno=55, col_offset=29), Call(Name('unicode', Load(), lineno=55, col_offset=43), [Str('abc', lineno=55, col_offset=51)], [], None, None, lineno=55, col_offset=43)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=12), 'assertIn', Load(), lineno=58, col_offset=12), [Call(Name('unicode', Load(), lineno=58, col_offset=26), [Str('c', lineno=58, col_offset=34)], [], None, None, lineno=58, col_offset=26), Str('abc', lineno=58, col_offset=40)], [], None, None, lineno=58, col_offset=12), lineno=58, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'assertNotIn', Load(), lineno=59, col_offset=12), [Call(Name('unicode', Load(), lineno=59, col_offset=29), [Str('d', lineno=59, col_offset=37)], [], None, None, lineno=59, col_offset=29), Str('abc', lineno=59, col_offset=43)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12)], [], lineno=40, col_offset=8)], [], lineno=39, col_offset=4), FunctionDef('test_builtin_sequence_types', arguments([Name('self', Param(), lineno=61, col_offset=36)], None, None, []), [Assign([Name('a', Store(), lineno=63, col_offset=8)], Call(Name('range', Load(), lineno=63, col_offset=12), [Num(10, lineno=63, col_offset=18)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=8), For(Name('i', Store(), lineno=64, col_offset=12), Name('a', Load(), lineno=64, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=12), 'assertIn', Load(), lineno=65, col_offset=12), [Name('i', Load(), lineno=65, col_offset=26), Name('a', Load(), lineno=65, col_offset=29)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12)], [], lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertNotIn', Load(), lineno=66, col_offset=8), [Num(16, lineno=66, col_offset=25), Name('a', Load(), lineno=66, col_offset=29)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'assertNotIn', Load(), lineno=67, col_offset=8), [Name('a', Load(), lineno=67, col_offset=25), Name('a', Load(), lineno=67, col_offset=28)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Assign([Name('a', Store(), lineno=69, col_offset=8)], Call(Name('tuple', Load(), lineno=69, col_offset=12), [Name('a', Load(), lineno=69, col_offset=18)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=8), For(Name('i', Store(), lineno=70, col_offset=12), Name('a', Load(), lineno=70, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'assertIn', Load(), lineno=71, col_offset=12), [Name('i', Load(), lineno=71, col_offset=26), Name('a', Load(), lineno=71, col_offset=29)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12)], [], lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertNotIn', Load(), lineno=72, col_offset=8), [Num(16, lineno=72, col_offset=25), Name('a', Load(), lineno=72, col_offset=29)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertNotIn', Load(), lineno=73, col_offset=8), [Name('a', Load(), lineno=73, col_offset=25), Name('a', Load(), lineno=73, col_offset=28)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), ClassDef('Deviant1', [], [Expr(Str('Behaves strangely when compared\n\n            This class is designed to make sure that the contains code\n            works when the list is modified during the check.\n            ', lineno=80, col_offset=-1), lineno=80, col_offset=-1), Assign([Name('aList', Store(), lineno=81, col_offset=12)], Call(Name('range', Load(), lineno=81, col_offset=20), [Num(15, lineno=81, col_offset=26)], [], None, None, lineno=81, col_offset=20), lineno=81, col_offset=12), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=82, col_offset=24), Name('other', Param(), lineno=82, col_offset=30)], None, None, []), [If(Compare(Name('other', Load(), lineno=83, col_offset=19), [Eq()], [Num(12, lineno=83, col_offset=28)], lineno=83, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=84, col_offset=20), 'aList', Load(), lineno=84, col_offset=20), 'remove', Load(), lineno=84, col_offset=20), [Num(12, lineno=84, col_offset=38)], [], None, None, lineno=84, col_offset=20), lineno=84, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=85, col_offset=20), 'aList', Load(), lineno=85, col_offset=20), 'remove', Load(), lineno=85, col_offset=20), [Num(13, lineno=85, col_offset=38)], [], None, None, lineno=85, col_offset=20), lineno=85, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=86, col_offset=20), 'aList', Load(), lineno=86, col_offset=20), 'remove', Load(), lineno=86, col_offset=20), [Num(14, lineno=86, col_offset=38)], [], None, None, lineno=86, col_offset=20), lineno=86, col_offset=20)], [], lineno=83, col_offset=16), Return(Num(1, lineno=87, col_offset=23), lineno=87, col_offset=16)], [], lineno=82, col_offset=12)], [], lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertNotIn', Load(), lineno=89, col_offset=8), [Call(Name('Deviant1', Load(), lineno=89, col_offset=25), [], [], None, None, lineno=89, col_offset=25), Attribute(Name('Deviant1', Load(), lineno=89, col_offset=37), 'aList', Load(), lineno=89, col_offset=37)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), ClassDef('Deviant2', [], [Expr(Str('Behaves strangely when compared\n\n            This class raises an exception during comparison.  That in\n            turn causes the comparison to fail with a TypeError.\n            ', lineno=96, col_offset=-1), lineno=96, col_offset=-1), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=97, col_offset=24), Name('other', Param(), lineno=97, col_offset=30)], None, None, []), [If(Compare(Name('other', Load(), lineno=98, col_offset=19), [Eq()], [Num(4, lineno=98, col_offset=28)], lineno=98, col_offset=19), [Raise(Name('RuntimeError', Load(), lineno=99, col_offset=26), Str('gotcha', lineno=99, col_offset=40), None, lineno=99, col_offset=20)], [], lineno=98, col_offset=16)], [], lineno=97, col_offset=12)], [], lineno=91, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=12), 'assertNotIn', Load(), lineno=102, col_offset=12), [Call(Name('Deviant2', Load(), lineno=102, col_offset=29), [], [], None, None, lineno=102, col_offset=29), Name('a', Load(), lineno=102, col_offset=41)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=103, col_offset=15), None, [Pass( lineno=104, col_offset=12)], lineno=103, col_offset=8)], [], lineno=101, col_offset=8)], [], lineno=61, col_offset=4)], [], lineno=18, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=108, col_offset=4), [Name('TestContains', Load(), lineno=108, col_offset=17)], [], None, None, lineno=108, col_offset=4), lineno=108, col_offset=4)], [], lineno=107, col_offset=0), If(Compare(Name('__name__', Load(), lineno=110, col_offset=3), [Eq()], [Str('__main__', lineno=110, col_offset=15)], lineno=110, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=111, col_offset=4), [], [], None, None, lineno=111, col_offset=4), lineno=111, col_offset=4)], [], lineno=110, col_offset=0)])
