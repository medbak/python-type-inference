Module([Expr(Str('This test checks for correct wait4() behavior.\n', lineno=2, col_offset=-1), lineno=2, col_offset=-1), Import([alias('os', None)], lineno=4, col_offset=0), Import([alias('time', None)], lineno=5, col_offset=0), ImportFrom('test.fork_wait', [alias('ForkWait', None)], 0, lineno=6, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('reap_children', None), alias('get_attribute', None)], 0, lineno=7, col_offset=0), Expr(Call(Name('get_attribute', Load(), lineno=10, col_offset=0), [Name('os', Load(), lineno=10, col_offset=14), Str('fork', lineno=10, col_offset=18)], [], None, None, lineno=10, col_offset=0), lineno=10, col_offset=0), Expr(Call(Name('get_attribute', Load(), lineno=11, col_offset=0), [Name('os', Load(), lineno=11, col_offset=14), Str('wait4', lineno=11, col_offset=18)], [], None, None, lineno=11, col_offset=0), lineno=11, col_offset=0), ClassDef('Wait4Test', [Name('ForkWait', Load(), lineno=14, col_offset=16)], [FunctionDef('wait_impl', arguments([Name('self', Param(), lineno=15, col_offset=18), Name('cpid', Param(), lineno=15, col_offset=24)], None, None, []), [For(Name('i', Store(), lineno=16, col_offset=12), Call(Name('range', Load(), lineno=16, col_offset=17), [Num(10, lineno=16, col_offset=23)], [], None, None, lineno=16, col_offset=17), [Assign([Tuple([Name('spid', Store(), lineno=19, col_offset=12), Name('status', Store(), lineno=19, col_offset=18), Name('rusage', Store(), lineno=19, col_offset=26)], Store(), lineno=19, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=19, col_offset=35), 'wait4', Load(), lineno=19, col_offset=35), [Name('cpid', Load(), lineno=19, col_offset=44), Attribute(Name('os', Load(), lineno=19, col_offset=50), 'WNOHANG', Load(), lineno=19, col_offset=50)], [], None, None, lineno=19, col_offset=35), lineno=19, col_offset=12), If(Compare(Name('spid', Load(), lineno=20, col_offset=15), [Eq()], [Name('cpid', Load(), lineno=20, col_offset=23)], lineno=20, col_offset=15), [Break( lineno=21, col_offset=16)], [], lineno=20, col_offset=12), Expr(Call(Attribute(Name('time', Load(), lineno=22, col_offset=12), 'sleep', Load(), lineno=22, col_offset=12), [Num(1.0, lineno=22, col_offset=23)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=12)], [], lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Name('spid', Load(), lineno=23, col_offset=25), Name('cpid', Load(), lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Name('status', Load(), lineno=24, col_offset=25), Num(0, lineno=24, col_offset=33), BinOp(Str('cause = %d, exit = %d', lineno=24, col_offset=36), Mod(), Tuple([BinOp(Name('status', Load(), lineno=24, col_offset=63), BitAnd(), Num(255, lineno=24, col_offset=70), lineno=24, col_offset=63), BinOp(Name('status', Load(), lineno=24, col_offset=76), RShift(), Num(8, lineno=24, col_offset=84), lineno=24, col_offset=76)], Load(), lineno=24, col_offset=63), lineno=24, col_offset=36)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertTrue', Load(), lineno=25, col_offset=8), [Name('rusage', Load(), lineno=25, col_offset=24)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8)], [], lineno=15, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=28, col_offset=4), [Name('Wait4Test', Load(), lineno=28, col_offset=17)], [], None, None, lineno=28, col_offset=4), lineno=28, col_offset=4), Expr(Call(Name('reap_children', Load(), lineno=29, col_offset=4), [], [], None, None, lineno=29, col_offset=4), lineno=29, col_offset=4)], [], lineno=27, col_offset=0), If(Compare(Name('__name__', Load(), lineno=31, col_offset=3), [Eq()], [Str('__main__', lineno=31, col_offset=15)], lineno=31, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=32, col_offset=4), [], [], None, None, lineno=32, col_offset=4), lineno=32, col_offset=4)], [], lineno=31, col_offset=0)])
