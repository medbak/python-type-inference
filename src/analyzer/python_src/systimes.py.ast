Module([Expr(Str(' systimes() user and system timer implementations for use by\n    pybench.\n\n    This module implements various different strategies for measuring\n    performance timings. It tries to choose the best available method\n    based on the platforma and available tools.\n\n    On Windows, it is recommended to have the Mark Hammond win32\n    package installed. Alternatively, the Thomas Heller ctypes\n    packages can also be used.\n\n    On Unix systems, the standard resource module provides the highest\n    resolution timings. Unfortunately, it is not available on all Unix\n    platforms.\n\n    If no supported timing methods based on process time can be found,\n    the module reverts to the highest resolution wall-clock timer\n    instead. The system time part will then always be 0.0.\n\n    The module exports one public API:\n\n    def systimes():\n\n        Return the current timer values for measuring user and system\n        time as tuple of seconds (user_time, system_time).\n\n    Copyright (c) 2006, Marc-Andre Lemburg (mal@egenix.com). See the\n    documentation for further information on copyrights, or contact\n    the author. All Rights Reserved.\n\n', lineno=33, col_offset=-1), lineno=33, col_offset=-1), Import([alias('time', None), alias('sys', None)], lineno=34, col_offset=0), Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=50, col_offset=0)], Name('None', Load(), lineno=50, col_offset=26), lineno=50, col_offset=0), Assign([Name('USE_CTYPES_GETPROCESSTIMES', Store(), lineno=51, col_offset=0)], Str('ctypes GetProcessTimes() wrapper', lineno=51, col_offset=29), lineno=51, col_offset=0), Assign([Name('USE_WIN32PROCESS_GETPROCESSTIMES', Store(), lineno=52, col_offset=0)], Str('win32process.GetProcessTimes()', lineno=52, col_offset=35), lineno=52, col_offset=0), Assign([Name('USE_RESOURCE_GETRUSAGE', Store(), lineno=53, col_offset=0)], Str('resource.getrusage()', lineno=53, col_offset=25), lineno=53, col_offset=0), Assign([Name('USE_PROCESS_TIME_CLOCK', Store(), lineno=54, col_offset=0)], Str('time.clock() (process time)', lineno=54, col_offset=25), lineno=54, col_offset=0), Assign([Name('USE_WALL_TIME_CLOCK', Store(), lineno=55, col_offset=0)], Str('time.clock() (wall-clock)', lineno=55, col_offset=22), lineno=55, col_offset=0), Assign([Name('USE_WALL_TIME_TIME', Store(), lineno=56, col_offset=0)], Str('time.time() (wall-clock)', lineno=56, col_offset=21), lineno=56, col_offset=0), If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=58, col_offset=3), 'platform', Load(), lineno=58, col_offset=3), Slice(None, Num(3, lineno=58, col_offset=17), None), Load(), lineno=58, col_offset=3), [Eq()], [Str('win', lineno=58, col_offset=23)], lineno=58, col_offset=3), [TryExcept([Import([alias('win32process', None)], lineno=61, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=62, col_offset=11), None, [TryExcept([Import([alias('ctypes', None)], lineno=64, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=65, col_offset=15), None, [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=68, col_offset=12)], Name('USE_WALL_TIME_CLOCK', Load(), lineno=68, col_offset=38), lineno=68, col_offset=12)], lineno=65, col_offset=8)], [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=70, col_offset=12)], Name('USE_CTYPES_GETPROCESSTIMES', Load(), lineno=70, col_offset=38), lineno=70, col_offset=12)], lineno=63, col_offset=8)], lineno=62, col_offset=4)], [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=72, col_offset=8)], Name('USE_WIN32PROCESS_GETPROCESSTIMES', Load(), lineno=72, col_offset=34), lineno=72, col_offset=8)], lineno=60, col_offset=4)], [TryExcept([Import([alias('resource', None)], lineno=76, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=77, col_offset=11), None, [Pass( lineno=78, col_offset=8)], lineno=77, col_offset=4)], [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=80, col_offset=8)], Name('USE_RESOURCE_GETRUSAGE', Load(), lineno=80, col_offset=34), lineno=80, col_offset=8)], lineno=75, col_offset=4)], lineno=58, col_offset=0), If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=83, col_offset=3), [Is()], [Name('None', Load(), lineno=83, col_offset=30)], lineno=83, col_offset=3), [Assign([Name('start', Store(), lineno=86, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=86, col_offset=12), 'clock', Load(), lineno=86, col_offset=12), [], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=4), Expr(Call(Attribute(Name('time', Load(), lineno=87, col_offset=4), 'sleep', Load(), lineno=87, col_offset=4), [Num(0.1, lineno=87, col_offset=15)], [], None, None, lineno=87, col_offset=4), lineno=87, col_offset=4), Assign([Name('stop', Store(), lineno=88, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=88, col_offset=11), 'clock', Load(), lineno=88, col_offset=11), [], [], None, None, lineno=88, col_offset=11), lineno=88, col_offset=4), If(Compare(BinOp(Name('stop', Load(), lineno=89, col_offset=7), Sub(), Name('start', Load(), lineno=89, col_offset=14), lineno=89, col_offset=7), [Lt()], [Num(0.001, lineno=89, col_offset=22)], lineno=89, col_offset=7), [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=92, col_offset=8)], Name('USE_PROCESS_TIME_CLOCK', Load(), lineno=92, col_offset=34), lineno=92, col_offset=8)], [Assign([Name('SYSTIMES_IMPLEMENTATION', Store(), lineno=96, col_offset=8)], Name('USE_WALL_TIME_TIME', Load(), lineno=96, col_offset=34), lineno=96, col_offset=8)], lineno=89, col_offset=4)], [], lineno=83, col_offset=0), FunctionDef('getrusage_systimes', arguments([], None, None, []), [Return(Subscript(Call(Attribute(Name('resource', Load(), lineno=101, col_offset=11), 'getrusage', Load(), lineno=101, col_offset=11), [Attribute(Name('resource', Load(), lineno=101, col_offset=30), 'RUSAGE_SELF', Load(), lineno=101, col_offset=30)], [], None, None, lineno=101, col_offset=11), Slice(None, Num(2, lineno=101, col_offset=53), None), Load(), lineno=101, col_offset=11), lineno=101, col_offset=4)], [], lineno=100, col_offset=0), FunctionDef('process_time_clock_systimes', arguments([], None, None, []), [Return(Tuple([Call(Attribute(Name('time', Load(), lineno=104, col_offset=12), 'clock', Load(), lineno=104, col_offset=12), [], [], None, None, lineno=104, col_offset=12), Num(0.0, lineno=104, col_offset=26)], Load(), lineno=104, col_offset=12), lineno=104, col_offset=4)], [], lineno=103, col_offset=0), FunctionDef('wall_clock_clock_systimes', arguments([], None, None, []), [Return(Tuple([Call(Attribute(Name('time', Load(), lineno=107, col_offset=12), 'clock', Load(), lineno=107, col_offset=12), [], [], None, None, lineno=107, col_offset=12), Num(0.0, lineno=107, col_offset=26)], Load(), lineno=107, col_offset=12), lineno=107, col_offset=4)], [], lineno=106, col_offset=0), FunctionDef('wall_clock_time_systimes', arguments([], None, None, []), [Return(Tuple([Call(Attribute(Name('time', Load(), lineno=110, col_offset=12), 'time', Load(), lineno=110, col_offset=12), [], [], None, None, lineno=110, col_offset=12), Num(0.0, lineno=110, col_offset=25)], Load(), lineno=110, col_offset=12), lineno=110, col_offset=4)], [], lineno=109, col_offset=0), Assign([Name('WIN32_PROCESS_TIMES_TICKS_PER_SECOND', Store(), lineno=123, col_offset=0)], Num(10000000.0, lineno=123, col_offset=39), lineno=123, col_offset=0), FunctionDef('win32process_getprocesstimes_systimes', arguments([], None, None, []), [Assign([Name('d', Store(), lineno=126, col_offset=4)], Call(Attribute(Name('win32process', Load(), lineno=126, col_offset=8), 'GetProcessTimes', Load(), lineno=126, col_offset=8), [Call(Attribute(Name('win32process', Load(), lineno=126, col_offset=37), 'GetCurrentProcess', Load(), lineno=126, col_offset=37), [], [], None, None, lineno=126, col_offset=37)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=4), Return(Tuple([BinOp(Subscript(Name('d', Load(), lineno=127, col_offset=12), Index(Str('UserTime', lineno=127, col_offset=14)), Load(), lineno=127, col_offset=12), Div(), Name('WIN32_PROCESS_TIMES_TICKS_PER_SECOND', Load(), lineno=127, col_offset=28), lineno=127, col_offset=12), BinOp(Subscript(Name('d', Load(), lineno=128, col_offset=12), Index(Str('KernelTime', lineno=128, col_offset=14)), Load(), lineno=128, col_offset=12), Div(), Name('WIN32_PROCESS_TIMES_TICKS_PER_SECOND', Load(), lineno=128, col_offset=30), lineno=128, col_offset=12)], Load(), lineno=127, col_offset=12), lineno=127, col_offset=4)], [], lineno=125, col_offset=0), FunctionDef('ctypes_getprocesstimes_systimes', arguments([], None, None, []), [Assign([Name('creationtime', Store(), lineno=131, col_offset=4)], Call(Attribute(Name('ctypes', Load(), lineno=131, col_offset=19), 'c_ulonglong', Load(), lineno=131, col_offset=19), [], [], None, None, lineno=131, col_offset=19), lineno=131, col_offset=4), Assign([Name('exittime', Store(), lineno=132, col_offset=4)], Call(Attribute(Name('ctypes', Load(), lineno=132, col_offset=15), 'c_ulonglong', Load(), lineno=132, col_offset=15), [], [], None, None, lineno=132, col_offset=15), lineno=132, col_offset=4), Assign([Name('kerneltime', Store(), lineno=133, col_offset=4)], Call(Attribute(Name('ctypes', Load(), lineno=133, col_offset=17), 'c_ulonglong', Load(), lineno=133, col_offset=17), [], [], None, None, lineno=133, col_offset=17), lineno=133, col_offset=4), Assign([Name('usertime', Store(), lineno=134, col_offset=4)], Call(Attribute(Name('ctypes', Load(), lineno=134, col_offset=15), 'c_ulonglong', Load(), lineno=134, col_offset=15), [], [], None, None, lineno=134, col_offset=15), lineno=134, col_offset=4), Assign([Name('rc', Store(), lineno=135, col_offset=4)], Call(Attribute(Attribute(Attribute(Name('ctypes', Load(), lineno=135, col_offset=9), 'windll', Load(), lineno=135, col_offset=9), 'kernel32', Load(), lineno=135, col_offset=9), 'GetProcessTimes', Load(), lineno=135, col_offset=9), [Call(Attribute(Attribute(Attribute(Name('ctypes', Load(), lineno=136, col_offset=8), 'windll', Load(), lineno=136, col_offset=8), 'kernel32', Load(), lineno=136, col_offset=8), 'GetCurrentProcess', Load(), lineno=136, col_offset=8), [], [], None, None, lineno=136, col_offset=8), Call(Attribute(Name('ctypes', Load(), lineno=137, col_offset=8), 'byref', Load(), lineno=137, col_offset=8), [Name('creationtime', Load(), lineno=137, col_offset=21)], [], None, None, lineno=137, col_offset=8), Call(Attribute(Name('ctypes', Load(), lineno=138, col_offset=8), 'byref', Load(), lineno=138, col_offset=8), [Name('exittime', Load(), lineno=138, col_offset=21)], [], None, None, lineno=138, col_offset=8), Call(Attribute(Name('ctypes', Load(), lineno=139, col_offset=8), 'byref', Load(), lineno=139, col_offset=8), [Name('kerneltime', Load(), lineno=139, col_offset=21)], [], None, None, lineno=139, col_offset=8), Call(Attribute(Name('ctypes', Load(), lineno=140, col_offset=8), 'byref', Load(), lineno=140, col_offset=8), [Name('usertime', Load(), lineno=140, col_offset=21)], [], None, None, lineno=140, col_offset=8)], [], None, None, lineno=135, col_offset=9), lineno=135, col_offset=4), If(UnaryOp(Not(), Name('rc', Load(), lineno=141, col_offset=11), lineno=141, col_offset=7), [Raise(Call(Name('TypeError', Load(), lineno=142, col_offset=14), [Str('GetProcessTimes() returned an error', lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=14), None, None, lineno=142, col_offset=8)], [], lineno=141, col_offset=4), Return(Tuple([BinOp(Attribute(Name('usertime', Load(), lineno=143, col_offset=12), 'value', Load(), lineno=143, col_offset=12), Div(), Name('WIN32_PROCESS_TIMES_TICKS_PER_SECOND', Load(), lineno=143, col_offset=29), lineno=143, col_offset=12), BinOp(Attribute(Name('kerneltime', Load(), lineno=144, col_offset=12), 'value', Load(), lineno=144, col_offset=12), Div(), Name('WIN32_PROCESS_TIMES_TICKS_PER_SECOND', Load(), lineno=144, col_offset=31), lineno=144, col_offset=12)], Load(), lineno=143, col_offset=12), lineno=143, col_offset=4)], [], lineno=130, col_offset=0), If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=148, col_offset=3), [Is()], [Name('USE_RESOURCE_GETRUSAGE', Load(), lineno=148, col_offset=30)], lineno=148, col_offset=3), [Assign([Name('systimes', Store(), lineno=149, col_offset=4)], Name('getrusage_systimes', Load(), lineno=149, col_offset=15), lineno=149, col_offset=4)], [If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=151, col_offset=5), [Is()], [Name('USE_PROCESS_TIME_CLOCK', Load(), lineno=151, col_offset=32)], lineno=151, col_offset=5), [Assign([Name('systimes', Store(), lineno=152, col_offset=4)], Name('process_time_clock_systimes', Load(), lineno=152, col_offset=15), lineno=152, col_offset=4)], [If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=154, col_offset=5), [Is()], [Name('USE_WALL_TIME_CLOCK', Load(), lineno=154, col_offset=32)], lineno=154, col_offset=5), [Assign([Name('systimes', Store(), lineno=155, col_offset=4)], Name('wall_clock_clock_systimes', Load(), lineno=155, col_offset=15), lineno=155, col_offset=4)], [If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=157, col_offset=5), [Is()], [Name('USE_WALL_TIME_TIME', Load(), lineno=157, col_offset=32)], lineno=157, col_offset=5), [Assign([Name('systimes', Store(), lineno=158, col_offset=4)], Name('wall_clock_time_systimes', Load(), lineno=158, col_offset=15), lineno=158, col_offset=4)], [If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=160, col_offset=5), [Is()], [Name('USE_WIN32PROCESS_GETPROCESSTIMES', Load(), lineno=160, col_offset=32)], lineno=160, col_offset=5), [Assign([Name('systimes', Store(), lineno=161, col_offset=4)], Name('win32process_getprocesstimes_systimes', Load(), lineno=161, col_offset=15), lineno=161, col_offset=4)], [If(Compare(Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=163, col_offset=5), [Is()], [Name('USE_CTYPES_GETPROCESSTIMES', Load(), lineno=163, col_offset=32)], lineno=163, col_offset=5), [Assign([Name('systimes', Store(), lineno=164, col_offset=4)], Name('ctypes_getprocesstimes_systimes', Load(), lineno=164, col_offset=15), lineno=164, col_offset=4)], [Raise(Call(Name('TypeError', Load(), lineno=167, col_offset=10), [Str('no suitable systimes() implementation found', lineno=167, col_offset=20)], [], None, None, lineno=167, col_offset=10), None, None, lineno=167, col_offset=4)], lineno=163, col_offset=5)], lineno=160, col_offset=5)], lineno=157, col_offset=5)], lineno=154, col_offset=5)], lineno=151, col_offset=5)], lineno=148, col_offset=0), FunctionDef('processtime', arguments([], None, None, []), [Expr(Str(' Return the total time spent on the process.\n\n        This is the sum of user and system time as returned by\n        systimes().\n\n    ', lineno=176, col_offset=-1), lineno=176, col_offset=-1), Assign([Tuple([Name('user', Store(), lineno=177, col_offset=4), Name('system', Store(), lineno=177, col_offset=10)], Store(), lineno=177, col_offset=4)], Call(Name('systimes', Load(), lineno=177, col_offset=19), [], [], None, None, lineno=177, col_offset=19), lineno=177, col_offset=4), Return(BinOp(Name('user', Load(), lineno=178, col_offset=11), Add(), Name('system', Load(), lineno=178, col_offset=18), lineno=178, col_offset=11), lineno=178, col_offset=4)], [], lineno=169, col_offset=0), FunctionDef('some_workload', arguments([], None, None, []), [Assign([Name('x', Store(), lineno=183, col_offset=4)], Num(0L, lineno=183, col_offset=8), lineno=183, col_offset=4), For(Name('i', Store(), lineno=184, col_offset=8), Call(Name('xrange', Load(), lineno=184, col_offset=13), [Num(10000000L, lineno=184, col_offset=20)], [], None, None, lineno=184, col_offset=13), [Assign([Name('x', Store(), lineno=185, col_offset=8)], BinOp(Name('x', Load(), lineno=185, col_offset=12), Add(), Num(1L, lineno=185, col_offset=16), lineno=185, col_offset=12), lineno=185, col_offset=8)], [], lineno=184, col_offset=4)], [], lineno=182, col_offset=0), FunctionDef('test_workload', arguments([], None, None, []), [Print(None, [Str('Testing systimes() under load conditions', lineno=188, col_offset=10)], True, lineno=188, col_offset=4), Assign([Name('t0', Store(), lineno=189, col_offset=4)], Call(Name('systimes', Load(), lineno=189, col_offset=9), [], [], None, None, lineno=189, col_offset=9), lineno=189, col_offset=4), Expr(Call(Name('some_workload', Load(), lineno=190, col_offset=4), [], [], None, None, lineno=190, col_offset=4), lineno=190, col_offset=4), Assign([Name('t1', Store(), lineno=191, col_offset=4)], Call(Name('systimes', Load(), lineno=191, col_offset=9), [], [], None, None, lineno=191, col_offset=9), lineno=191, col_offset=4), Print(None, [Str('before:', lineno=192, col_offset=10), Name('t0', Load(), lineno=192, col_offset=21)], True, lineno=192, col_offset=4), Print(None, [Str('after:', lineno=193, col_offset=10), Name('t1', Load(), lineno=193, col_offset=20)], True, lineno=193, col_offset=4), Print(None, [Str('differences:', lineno=194, col_offset=10), Tuple([BinOp(Subscript(Name('t1', Load(), lineno=194, col_offset=27), Index(Num(0, lineno=194, col_offset=30)), Load(), lineno=194, col_offset=27), Sub(), Subscript(Name('t0', Load(), lineno=194, col_offset=35), Index(Num(0, lineno=194, col_offset=38)), Load(), lineno=194, col_offset=35), lineno=194, col_offset=27), BinOp(Subscript(Name('t1', Load(), lineno=194, col_offset=42), Index(Num(1, lineno=194, col_offset=45)), Load(), lineno=194, col_offset=42), Sub(), Subscript(Name('t0', Load(), lineno=194, col_offset=50), Index(Num(1, lineno=194, col_offset=53)), Load(), lineno=194, col_offset=50), lineno=194, col_offset=42)], Load(), lineno=194, col_offset=27)], True, lineno=194, col_offset=4), Print(None, [], True, lineno=195, col_offset=4)], [], lineno=187, col_offset=0), FunctionDef('test_idle', arguments([], None, None, []), [Print(None, [Str('Testing systimes() under idle conditions', lineno=198, col_offset=10)], True, lineno=198, col_offset=4), Assign([Name('t0', Store(), lineno=199, col_offset=4)], Call(Name('systimes', Load(), lineno=199, col_offset=9), [], [], None, None, lineno=199, col_offset=9), lineno=199, col_offset=4), Expr(Call(Attribute(Name('time', Load(), lineno=200, col_offset=4), 'sleep', Load(), lineno=200, col_offset=4), [Num(1, lineno=200, col_offset=15)], [], None, None, lineno=200, col_offset=4), lineno=200, col_offset=4), Assign([Name('t1', Store(), lineno=201, col_offset=4)], Call(Name('systimes', Load(), lineno=201, col_offset=9), [], [], None, None, lineno=201, col_offset=9), lineno=201, col_offset=4), Print(None, [Str('before:', lineno=202, col_offset=10), Name('t0', Load(), lineno=202, col_offset=21)], True, lineno=202, col_offset=4), Print(None, [Str('after:', lineno=203, col_offset=10), Name('t1', Load(), lineno=203, col_offset=20)], True, lineno=203, col_offset=4), Print(None, [Str('differences:', lineno=204, col_offset=10), Tuple([BinOp(Subscript(Name('t1', Load(), lineno=204, col_offset=27), Index(Num(0, lineno=204, col_offset=30)), Load(), lineno=204, col_offset=27), Sub(), Subscript(Name('t0', Load(), lineno=204, col_offset=35), Index(Num(0, lineno=204, col_offset=38)), Load(), lineno=204, col_offset=35), lineno=204, col_offset=27), BinOp(Subscript(Name('t1', Load(), lineno=204, col_offset=42), Index(Num(1, lineno=204, col_offset=45)), Load(), lineno=204, col_offset=42), Sub(), Subscript(Name('t0', Load(), lineno=204, col_offset=50), Index(Num(1, lineno=204, col_offset=53)), Load(), lineno=204, col_offset=50), lineno=204, col_offset=42)], Load(), lineno=204, col_offset=27)], True, lineno=204, col_offset=4), Print(None, [], True, lineno=205, col_offset=4)], [], lineno=197, col_offset=0), If(Compare(Name('__name__', Load(), lineno=207, col_offset=3), [Eq()], [Str('__main__', lineno=207, col_offset=15)], lineno=207, col_offset=3), [Print(None, [BinOp(Str('Using %s as timer', lineno=208, col_offset=10), Mod(), Name('SYSTIMES_IMPLEMENTATION', Load(), lineno=208, col_offset=32), lineno=208, col_offset=10)], True, lineno=208, col_offset=4), Print(None, [], True, lineno=209, col_offset=4), Expr(Call(Name('test_workload', Load(), lineno=210, col_offset=4), [], [], None, None, lineno=210, col_offset=4), lineno=210, col_offset=4), Expr(Call(Name('test_idle', Load(), lineno=211, col_offset=4), [], [], None, None, lineno=211, col_offset=4), lineno=211, col_offset=4)], [], lineno=207, col_offset=0)])
