Module([Expr(Str("\nTools for scanning header files in search of function prototypes.\n\nOften, the function prototypes in header files contain enough information\nto automatically generate (or reverse-engineer) interface specifications\nfrom them.  The conventions used are very vendor specific, but once you've\nfigured out what they are they are often a great help, and it sure beats\nmanually entering the interface specifications.  (These are needed to generate\nthe glue used to access the functions from Python.)\n\nIn order to make this class useful, almost every component can be overridden.\nThe defaults are (currently) tuned to scanning Apple Macintosh header files,\nalthough most Mac specific details are contained in header-specific subclasses.\n", lineno=15, col_offset=-1), lineno=15, col_offset=-1), Import([alias('re', None)], lineno=17, col_offset=0), Import([alias('sys', None)], lineno=18, col_offset=0), Import([alias('os', None)], lineno=19, col_offset=0), Import([alias('fnmatch', None)], lineno=20, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=21, col_offset=0), TryExcept([Import([alias('MacOS', None)], lineno=23, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=24, col_offset=7), None, [Assign([Name('MacOS', Store(), lineno=25, col_offset=4)], Name('None', Load(), lineno=25, col_offset=12), lineno=25, col_offset=4)], lineno=24, col_offset=0)], [], lineno=22, col_offset=0), TryExcept([ImportFrom('bgenlocations', [alias('CREATOR', None), alias('INCLUDEDIR', None)], 0, lineno=28, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=29, col_offset=7), None, [Assign([Name('CREATOR', Store(), lineno=30, col_offset=4)], Name('None', Load(), lineno=30, col_offset=14), lineno=30, col_offset=4), Assign([Name('INCLUDEDIR', Store(), lineno=31, col_offset=4)], Attribute(Name('os', Load(), lineno=31, col_offset=17), 'curdir', Load(), lineno=31, col_offset=17), lineno=31, col_offset=4)], lineno=29, col_offset=0)], [], lineno=27, col_offset=0), Assign([Name('Error', Store(), lineno=33, col_offset=0)], Str('scantools.Error', lineno=33, col_offset=8), lineno=33, col_offset=0), Assign([Name('BEGINHTMLREPORT', Store(), lineno=35, col_offset=0)], Str('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">\n<html>\n<head>\n<style type="text/css">\n.unmatched {  }\n.commentstripping { color: grey; text-decoration: line-through }\n.comment { text-decoration: line-through }\n.notcomment { color: black }\n.incomplete { color: maroon }\n.constant { color: green }\n.pyconstant { background-color: yellow }\n.blconstant { background-color: yellow; color: red }\n.declaration { color: blue }\n.pydeclaration { background-color: yellow }\n.type { font-style: italic }\n.name { font-weight: bold }\n.value { font-style: italic }\n.arglist { text-decoration: underline }\n.blacklisted { background-color: yellow; color: red }\n</style>\n<title>Bgen scan report</title>\n</head>\n<body>\n<h1>Bgen scan report</h1>\n<h2>Legend</h2>\n<p>This scan report is intended to help you debug the regular expressions\nused by the bgen scanner. It consists of the original ".h" header file(s)\nmarked up to show you what the regular expressions in the bgen parser matched\nfor each line. NOTE: comments in the original source files may or may not be\nshown.</p>\n<p>The typographic conventions of this file are as follows:</p>\n<dl>\n<dt>comment stripping</dt>\n<dd><pre><span class="commentstripping"><span class="notcomment">comment stripping is </span><span class="comment">/* marked up */</span><span class="notcomment"> and the line is repeated if needed</span></span></pre>\n<p>If anything here does not appear to happen correctly look at\n<tt>comment1_pat</tt> and <tt>comment2_pat</tt>.</p>\n</dd>\n<dt>constant definitions</dt>\n<dd><pre><span class="constant">#define <span class="name">name</span> <span class="value">value</span></pre>\n<p>Highlights name and value of the constant. Governed by <tt>sym_pat</tt>.</p>\n</dd>\n<dt>function declaration</dt>\n<dd><pre><span class="declaration"><span class="type">char *</span><span class="name">rindex</span><span class="arglist">(<span class="type">const char *</span><span class="name">s</span>, <span class="type">int </span><span class="name">c</span>)</span>;</span></pre>\n<p>Highlights type, name and argument list. <tt>type_pat</tt>,\n<tt>name_pat</tt> and <tt>args_pat</tt> are combined into <tt>whole_pat</tt>, which\nis what is used here.</p></dd>\n</dd>\n<dt>incomplete match for function declaration</dt>\n<dd><pre><span class="incomplete"><span class="type">char *</span>foo;</span></pre>\n<p>The beginning of this looked promising, but it did not match a function declaration.\nIn other words, it matched <tt>head_pat</tt> but not <tt>whole_pat</tt>. If the next\ndeclaration has also been gobbled up you need to look at <tt>end_pat</tt>.</p>\n</dd>\n<dt>unrecognized input</dt>\n<dd><pre><span class="unmatched">#include "type.h"</span></pre>\n<p>If there are function declarations the scanner has missed (i.e. things\nare in this class but you want them to be declarations) you need to adapt\n<tt>head_pat</tt>.\n</dd>\n</dl>\n<h2>Output</h2>\n<pre>\n<span class="unmatched">\n', lineno=98, col_offset=-1), lineno=35, col_offset=0), Assign([Name('ENDHTMLREPORT', Store(), lineno=99, col_offset=0)], Str('</span>\n</pre>\n</body>\n</html>\n', lineno=103, col_offset=-1), lineno=99, col_offset=0), ClassDef('Scanner', [], [Assign([Name('debug', Store(), lineno=108, col_offset=4)], Num(0, lineno=108, col_offset=12), lineno=108, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=110, col_offset=17), Name('input', Param(), lineno=110, col_offset=23), Name('output', Param(), lineno=110, col_offset=37), Name('defsoutput', Param(), lineno=110, col_offset=52)], None, None, [Name('None', Load(), lineno=110, col_offset=31), Name('None', Load(), lineno=110, col_offset=46), Name('None', Load(), lineno=110, col_offset=65)]), [Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'initsilent', Load(), lineno=111, col_offset=8), [], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'initblacklists', Load(), lineno=112, col_offset=8), [], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'initrepairinstructions', Load(), lineno=113, col_offset=8), [], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=8), 'initpaths', Load(), lineno=114, col_offset=8), [], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=8), 'initfiles', Load(), lineno=115, col_offset=8), [], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=8), 'initpatterns', Load(), lineno=116, col_offset=8), [], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'compilepatterns', Load(), lineno=117, col_offset=8), [], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'initosspecifics', Load(), lineno=118, col_offset=8), [], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'initusedtypes', Load(), lineno=119, col_offset=8), [], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), If(Name('output', Load(), lineno=120, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=12), 'setoutput', Load(), lineno=121, col_offset=12), [Name('output', Load(), lineno=121, col_offset=27), Name('defsoutput', Load(), lineno=121, col_offset=35)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=120, col_offset=8), If(Name('input', Load(), lineno=122, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=12), 'setinput', Load(), lineno=123, col_offset=12), [Name('input', Load(), lineno=123, col_offset=26)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=12)], [], lineno=122, col_offset=8)], [], lineno=110, col_offset=4), FunctionDef('initusedtypes', arguments([Name('self', Param(), lineno=125, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=126, col_offset=8), 'usedtypes', Store(), lineno=126, col_offset=8)], Dict([], [], lineno=126, col_offset=25), lineno=126, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('typeused', arguments([Name('self', Param(), lineno=128, col_offset=17), Name('type', Param(), lineno=128, col_offset=23), Name('mode', Param(), lineno=128, col_offset=29)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=129, col_offset=15), 'usedtypes', Load(), lineno=129, col_offset=15), 'has_key', Load(), lineno=129, col_offset=15), [Name('type', Load(), lineno=129, col_offset=38)], [], None, None, lineno=129, col_offset=15), lineno=129, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=130, col_offset=12), 'usedtypes', Load(), lineno=130, col_offset=12), Index(Name('type', Load(), lineno=130, col_offset=27)), Store(), lineno=130, col_offset=12)], Dict([], [], lineno=130, col_offset=35), lineno=130, col_offset=12)], [], lineno=129, col_offset=8), Assign([Subscript(Subscript(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'usedtypes', Load(), lineno=131, col_offset=8), Index(Name('type', Load(), lineno=131, col_offset=23)), Load(), lineno=131, col_offset=8), Index(Name('mode', Load(), lineno=131, col_offset=29)), Store(), lineno=131, col_offset=8)], Name('None', Load(), lineno=131, col_offset=37), lineno=131, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('reportusedtypes', arguments([Name('self', Param(), lineno=133, col_offset=24)], None, None, []), [Assign([Name('types', Store(), lineno=134, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=16), 'usedtypes', Load(), lineno=134, col_offset=16), 'keys', Load(), lineno=134, col_offset=16), [], [], None, None, lineno=134, col_offset=16), lineno=134, col_offset=8), Expr(Call(Attribute(Name('types', Load(), lineno=135, col_offset=8), 'sort', Load(), lineno=135, col_offset=8), [], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), For(Name('type', Store(), lineno=136, col_offset=12), Name('types', Load(), lineno=136, col_offset=20), [Assign([Name('modes', Store(), lineno=137, col_offset=12)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=137, col_offset=20), 'usedtypes', Load(), lineno=137, col_offset=20), Index(Name('type', Load(), lineno=137, col_offset=35)), Load(), lineno=137, col_offset=20), 'keys', Load(), lineno=137, col_offset=20), [], [], None, None, lineno=137, col_offset=20), lineno=137, col_offset=12), Expr(Call(Attribute(Name('modes', Load(), lineno=138, col_offset=12), 'sort', Load(), lineno=138, col_offset=12), [], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=12), 'report', Load(), lineno=139, col_offset=12), [Str('%s %s', lineno=139, col_offset=24), Name('type', Load(), lineno=139, col_offset=33), Call(Attribute(Str(' ', lineno=139, col_offset=39), 'join', Load(), lineno=139, col_offset=39), [Name('modes', Load(), lineno=139, col_offset=48)], [], None, None, lineno=139, col_offset=39)], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=12)], [], lineno=136, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('gentypetest', arguments([Name('self', Param(), lineno=141, col_offset=20), Name('file', Param(), lineno=141, col_offset=26)], None, None, []), [Assign([Name('fp', Store(), lineno=142, col_offset=8)], Call(Name('open', Load(), lineno=142, col_offset=13), [Name('file', Load(), lineno=142, col_offset=18), Str('w', lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=13), lineno=142, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=143, col_offset=8), 'write', Load(), lineno=143, col_offset=8), [Str('types=[\n', lineno=143, col_offset=17)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Assign([Name('types', Store(), lineno=144, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=144, col_offset=16), 'usedtypes', Load(), lineno=144, col_offset=16), 'keys', Load(), lineno=144, col_offset=16), [], [], None, None, lineno=144, col_offset=16), lineno=144, col_offset=8), Expr(Call(Attribute(Name('types', Load(), lineno=145, col_offset=8), 'sort', Load(), lineno=145, col_offset=8), [], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), For(Name('type', Store(), lineno=146, col_offset=12), Name('types', Load(), lineno=146, col_offset=20), [Expr(Call(Attribute(Name('fp', Load(), lineno=147, col_offset=12), 'write', Load(), lineno=147, col_offset=12), [BinOp(Str("\t'%s',\n", lineno=147, col_offset=21), Mod(), Name('type', Load(), lineno=147, col_offset=33), lineno=147, col_offset=21)], [], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12)], [], lineno=146, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=148, col_offset=8), 'write', Load(), lineno=148, col_offset=8), [Str(']\n', lineno=148, col_offset=17)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=149, col_offset=8), 'write', Load(), lineno=149, col_offset=8), [Str('missing=0\nfor t in types:\n    try:\n        tt = eval(t)\n    except NameError:\n        print "** Missing type:", t\n        missing = 1\nif missing: raise "Missing Types"\n', lineno=157, col_offset=-1)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=158, col_offset=8), 'close', Load(), lineno=158, col_offset=8), [], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('initsilent', arguments([Name('self', Param(), lineno=160, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=161, col_offset=8), 'silent', Store(), lineno=161, col_offset=8)], Num(1, lineno=161, col_offset=22), lineno=161, col_offset=8)], [], lineno=160, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=163, col_offset=14), Name('format', Param(), lineno=163, col_offset=20)], 'args', None, []), [If(Compare(Attribute(Name('self', Load(), lineno=164, col_offset=11), 'silent', Load(), lineno=164, col_offset=11), [GtE()], [Num(0, lineno=164, col_offset=26)], lineno=164, col_offset=11), [Print(None, [BinOp(Name('format', Load(), lineno=165, col_offset=18), Mod(), Name('args', Load(), lineno=165, col_offset=25), lineno=165, col_offset=18)], True, lineno=165, col_offset=12)], [], lineno=164, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('report', arguments([Name('self', Param(), lineno=167, col_offset=15), Name('format', Param(), lineno=167, col_offset=21)], 'args', None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=168, col_offset=15), 'silent', Load(), lineno=168, col_offset=15), lineno=168, col_offset=11), [Print(None, [BinOp(Name('format', Load(), lineno=169, col_offset=18), Mod(), Name('args', Load(), lineno=169, col_offset=25), lineno=169, col_offset=18)], True, lineno=169, col_offset=12)], [], lineno=168, col_offset=8)], [], lineno=167, col_offset=4), FunctionDef('writeinitialdefs', arguments([Name('self', Param(), lineno=171, col_offset=25)], None, None, []), [Pass( lineno=172, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('initblacklists', arguments([Name('self', Param(), lineno=174, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=175, col_offset=8), 'blacklistnames', Store(), lineno=175, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=175, col_offset=30), 'makeblacklistnames', Load(), lineno=175, col_offset=30), [], [], None, None, lineno=175, col_offset=30), lineno=175, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=176, col_offset=8), 'blacklisttypes', Store(), lineno=176, col_offset=8)], BinOp(List([Str('unknown', lineno=176, col_offset=31), Str('-', lineno=176, col_offset=42)], Load(), lineno=176, col_offset=30), Add(), Call(Attribute(Name('self', Load(), lineno=176, col_offset=49), 'makeblacklisttypes', Load(), lineno=176, col_offset=49), [], [], None, None, lineno=176, col_offset=49), lineno=176, col_offset=30), lineno=176, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=177, col_offset=8), 'greydictnames', Store(), lineno=177, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=177, col_offset=29), 'greylist2dict', Load(), lineno=177, col_offset=29), [Call(Attribute(Name('self', Load(), lineno=177, col_offset=48), 'makegreylist', Load(), lineno=177, col_offset=48), [], [], None, None, lineno=177, col_offset=48)], [], None, None, lineno=177, col_offset=29), lineno=177, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('greylist2dict', arguments([Name('self', Param(), lineno=179, col_offset=22), Name('list', Param(), lineno=179, col_offset=28)], None, None, []), [Assign([Name('rv', Store(), lineno=180, col_offset=8)], Dict([], [], lineno=180, col_offset=13), lineno=180, col_offset=8), For(Tuple([Name('define', Store(), lineno=181, col_offset=12), Name('namelist', Store(), lineno=181, col_offset=20)], Store(), lineno=181, col_offset=12), Name('list', Load(), lineno=181, col_offset=32), [For(Name('name', Store(), lineno=182, col_offset=16), Name('namelist', Load(), lineno=182, col_offset=24), [Assign([Subscript(Name('rv', Load(), lineno=183, col_offset=16), Index(Name('name', Load(), lineno=183, col_offset=19)), Store(), lineno=183, col_offset=16)], Name('define', Load(), lineno=183, col_offset=27), lineno=183, col_offset=16)], [], lineno=182, col_offset=12)], [], lineno=181, col_offset=8), Return(Name('rv', Load(), lineno=184, col_offset=15), lineno=184, col_offset=8)], [], lineno=179, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=186, col_offset=27)], None, None, []), [Return(List([], Load(), lineno=187, col_offset=15), lineno=187, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=189, col_offset=27)], None, None, []), [Return(List([], Load(), lineno=190, col_offset=15), lineno=190, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('makegreylist', arguments([Name('self', Param(), lineno=192, col_offset=21)], None, None, []), [Return(List([], Load(), lineno=193, col_offset=15), lineno=193, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('initrepairinstructions', arguments([Name('self', Param(), lineno=195, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=196, col_offset=8), 'repairinstructions', Store(), lineno=196, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=196, col_offset=34), 'makerepairinstructions', Load(), lineno=196, col_offset=34), [], [], None, None, lineno=196, col_offset=34), lineno=196, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=197, col_offset=8), 'inherentpointertypes', Store(), lineno=197, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=197, col_offset=36), 'makeinherentpointertypes', Load(), lineno=197, col_offset=36), [], [], None, None, lineno=197, col_offset=36), lineno=197, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=199, col_offset=31)], None, None, []), [Expr(Str('Parse the repair file into repair instructions.\n\n        The file format is simple:\n        1) use \\ to split a long logical line in multiple physical lines\n        2) everything after the first # on a line is ignored (as comment)\n        3) empty lines are ignored\n        4) remaining lines must have exactly 3 colon-separated fields:\n           functionpattern : argumentspattern : argumentsreplacement\n        5) all patterns use shell style pattern matching\n        6) an empty functionpattern means the same as *\n        7) the other two fields are each comma-separated lists of triples\n        8) a triple is a space-separated list of 1-3 words\n        9) a triple with less than 3 words is padded at the end with "*" words\n        10) when used as a pattern, a triple matches the type, name, and mode\n            of an argument, respectively\n        11) when used as a replacement, the words of a triple specify\n            replacements for the corresponding words of the argument,\n            with "*" as a word by itself meaning leave the original word\n            (no other uses of "*" is allowed)\n        12) the replacement need not have the same number of triples\n            as the pattern\n        ', lineno=221, col_offset=-1), lineno=221, col_offset=-1), Assign([Name('f', Store(), lineno=222, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=222, col_offset=12), 'openrepairfile', Load(), lineno=222, col_offset=12), [], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=8), If(UnaryOp(Not(), Name('f', Load(), lineno=223, col_offset=15), lineno=223, col_offset=11), [Return(List([], Load(), lineno=223, col_offset=25), lineno=223, col_offset=18)], [], lineno=223, col_offset=8), Print(None, [Str('Reading repair file', lineno=224, col_offset=14), Call(Name('repr', Load(), lineno=224, col_offset=37), [Attribute(Name('f', Load(), lineno=224, col_offset=42), 'name', Load(), lineno=224, col_offset=42)], [], None, None, lineno=224, col_offset=37), Str('...', lineno=224, col_offset=51)], True, lineno=224, col_offset=8), Assign([Name('list', Store(), lineno=225, col_offset=8)], List([], Load(), lineno=225, col_offset=15), lineno=225, col_offset=8), Assign([Name('lineno', Store(), lineno=226, col_offset=8)], Num(0, lineno=226, col_offset=17), lineno=226, col_offset=8), While(Num(1, lineno=227, col_offset=14), [Assign([Name('line', Store(), lineno=228, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=228, col_offset=19), 'readline', Load(), lineno=228, col_offset=19), [], [], None, None, lineno=228, col_offset=19), lineno=228, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=229, col_offset=19), lineno=229, col_offset=15), [Break( lineno=229, col_offset=25)], [], lineno=229, col_offset=12), Assign([Name('lineno', Store(), lineno=230, col_offset=12)], BinOp(Name('lineno', Load(), lineno=230, col_offset=21), Add(), Num(1, lineno=230, col_offset=30), lineno=230, col_offset=21), lineno=230, col_offset=12), Assign([Name('startlineno', Store(), lineno=231, col_offset=12)], Name('lineno', Load(), lineno=231, col_offset=26), lineno=231, col_offset=12), While(Compare(Subscript(Name('line', Load(), lineno=232, col_offset=18), Slice(Num(-2, lineno=232, col_offset=24), None, None), Load(), lineno=232, col_offset=18), [Eq()], [Str('\\\n', lineno=232, col_offset=31)], lineno=232, col_offset=18), [Assign([Name('line', Store(), lineno=233, col_offset=16)], BinOp(BinOp(Subscript(Name('line', Load(), lineno=233, col_offset=23), Slice(None, Num(-2, lineno=233, col_offset=30), None), Load(), lineno=233, col_offset=23), Add(), Str(' ', lineno=233, col_offset=35), lineno=233, col_offset=23), Add(), Call(Attribute(Name('f', Load(), lineno=233, col_offset=41), 'readline', Load(), lineno=233, col_offset=41), [], [], None, None, lineno=233, col_offset=41), lineno=233, col_offset=39), lineno=233, col_offset=16), Assign([Name('lineno', Store(), lineno=234, col_offset=16)], BinOp(Name('lineno', Load(), lineno=234, col_offset=25), Add(), Num(1, lineno=234, col_offset=34), lineno=234, col_offset=25), lineno=234, col_offset=16)], [], lineno=232, col_offset=12), Assign([Name('i', Store(), lineno=235, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=235, col_offset=16), 'find', Load(), lineno=235, col_offset=16), [Str('#', lineno=235, col_offset=26)], [], None, None, lineno=235, col_offset=16), lineno=235, col_offset=12), If(Compare(Name('i', Load(), lineno=236, col_offset=15), [GtE()], [Num(0, lineno=236, col_offset=20)], lineno=236, col_offset=15), [Assign([Name('line', Store(), lineno=236, col_offset=23)], Subscript(Name('line', Load(), lineno=236, col_offset=30), Slice(None, Name('i', Load(), lineno=236, col_offset=36), None), Load(), lineno=236, col_offset=30), lineno=236, col_offset=23)], [], lineno=236, col_offset=12), Assign([Name('words', Store(), lineno=237, col_offset=12)], ListComp(Call(Attribute(Name('s', Load(), lineno=237, col_offset=21), 'strip', Load(), lineno=237, col_offset=21), [], [], None, None, lineno=237, col_offset=21), [comprehension(Name('s', Store(), lineno=237, col_offset=35), Call(Attribute(Name('line', Load(), lineno=237, col_offset=40), 'split', Load(), lineno=237, col_offset=40), [Str(':', lineno=237, col_offset=51)], [], None, None, lineno=237, col_offset=40), [])], lineno=237, col_offset=21), lineno=237, col_offset=12), If(Compare(Name('words', Load(), lineno=238, col_offset=15), [Eq()], [List([Str('', lineno=238, col_offset=25)], Load(), lineno=238, col_offset=24)], lineno=238, col_offset=15), [Continue( lineno=238, col_offset=30)], [], lineno=238, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=239, col_offset=15), [Name('words', Load(), lineno=239, col_offset=19)], [], None, None, lineno=239, col_offset=15), [NotEq()], [Num(3, lineno=239, col_offset=29)], lineno=239, col_offset=15), [Print(None, [Str('Line', lineno=240, col_offset=22), Name('startlineno', Load(), lineno=240, col_offset=30)], False, lineno=240, col_offset=16), Print(None, [Str(': bad line (not 3 colon-separated fields)', lineno=241, col_offset=22)], True, lineno=241, col_offset=16), Print(None, [Call(Name('repr', Load(), lineno=242, col_offset=22), [Name('line', Load(), lineno=242, col_offset=27)], [], None, None, lineno=242, col_offset=22)], True, lineno=242, col_offset=16), Continue( lineno=243, col_offset=16)], [], lineno=239, col_offset=12), Assign([List([Name('fpat', Store(), lineno=244, col_offset=13), Name('pat', Store(), lineno=244, col_offset=19), Name('rep', Store(), lineno=244, col_offset=24)], Store(), lineno=244, col_offset=12)], Name('words', Load(), lineno=244, col_offset=31), lineno=244, col_offset=12), If(UnaryOp(Not(), Name('fpat', Load(), lineno=245, col_offset=19), lineno=245, col_offset=15), [Assign([Name('fpat', Store(), lineno=245, col_offset=25)], Str('*', lineno=245, col_offset=32), lineno=245, col_offset=25)], [], lineno=245, col_offset=12), If(UnaryOp(Not(), Name('pat', Load(), lineno=246, col_offset=19), lineno=246, col_offset=15), [Print(None, [Str('Line', lineno=247, col_offset=22), Name('startlineno', Load(), lineno=247, col_offset=30)], False, lineno=247, col_offset=16), Print(None, [Str('Empty pattern', lineno=248, col_offset=22)], True, lineno=248, col_offset=16), Print(None, [Call(Name('repr', Load(), lineno=249, col_offset=22), [Name('line', Load(), lineno=249, col_offset=27)], [], None, None, lineno=249, col_offset=22)], True, lineno=249, col_offset=16), Continue( lineno=250, col_offset=16)], [], lineno=246, col_offset=12), Assign([Name('patparts', Store(), lineno=251, col_offset=12)], ListComp(Call(Attribute(Name('s', Load(), lineno=251, col_offset=24), 'strip', Load(), lineno=251, col_offset=24), [], [], None, None, lineno=251, col_offset=24), [comprehension(Name('s', Store(), lineno=251, col_offset=38), Call(Attribute(Name('pat', Load(), lineno=251, col_offset=43), 'split', Load(), lineno=251, col_offset=43), [Str(',', lineno=251, col_offset=53)], [], None, None, lineno=251, col_offset=43), [])], lineno=251, col_offset=24), lineno=251, col_offset=12), Assign([Name('repparts', Store(), lineno=252, col_offset=12)], ListComp(Call(Attribute(Name('s', Load(), lineno=252, col_offset=24), 'strip', Load(), lineno=252, col_offset=24), [], [], None, None, lineno=252, col_offset=24), [comprehension(Name('s', Store(), lineno=252, col_offset=38), Call(Attribute(Name('rep', Load(), lineno=252, col_offset=43), 'split', Load(), lineno=252, col_offset=43), [Str(',', lineno=252, col_offset=53)], [], None, None, lineno=252, col_offset=43), [])], lineno=252, col_offset=24), lineno=252, col_offset=12), Assign([Name('patterns', Store(), lineno=253, col_offset=12)], List([], Load(), lineno=253, col_offset=23), lineno=253, col_offset=12), For(Name('p', Store(), lineno=254, col_offset=16), Name('patparts', Load(), lineno=254, col_offset=21), [If(UnaryOp(Not(), Name('p', Load(), lineno=255, col_offset=23), lineno=255, col_offset=19), [Print(None, [Str('Line', lineno=256, col_offset=26), Name('startlineno', Load(), lineno=256, col_offset=34)], False, lineno=256, col_offset=20), Print(None, [Str('Empty pattern part', lineno=257, col_offset=26)], True, lineno=257, col_offset=20), Print(None, [Call(Name('repr', Load(), lineno=258, col_offset=26), [Name('line', Load(), lineno=258, col_offset=31)], [], None, None, lineno=258, col_offset=26)], True, lineno=258, col_offset=20), Continue( lineno=259, col_offset=20)], [], lineno=255, col_offset=16), Assign([Name('pattern', Store(), lineno=260, col_offset=16)], Call(Attribute(Name('p', Load(), lineno=260, col_offset=26), 'split', Load(), lineno=260, col_offset=26), [], [], None, None, lineno=260, col_offset=26), lineno=260, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=261, col_offset=19), [Name('pattern', Load(), lineno=261, col_offset=23)], [], None, None, lineno=261, col_offset=19), [Gt()], [Num(3, lineno=261, col_offset=34)], lineno=261, col_offset=19), [Print(None, [Str('Line', lineno=262, col_offset=26), Name('startlineno', Load(), lineno=262, col_offset=34)], False, lineno=262, col_offset=20), Print(None, [Str('Pattern part has > 3 words', lineno=263, col_offset=26)], True, lineno=263, col_offset=20), Print(None, [Call(Name('repr', Load(), lineno=264, col_offset=26), [Name('line', Load(), lineno=264, col_offset=31)], [], None, None, lineno=264, col_offset=26)], True, lineno=264, col_offset=20), Assign([Name('pattern', Store(), lineno=265, col_offset=20)], Subscript(Name('pattern', Load(), lineno=265, col_offset=30), Slice(None, Num(3, lineno=265, col_offset=39), None), Load(), lineno=265, col_offset=30), lineno=265, col_offset=20)], [While(Compare(Call(Name('len', Load(), lineno=267, col_offset=26), [Name('pattern', Load(), lineno=267, col_offset=30)], [], None, None, lineno=267, col_offset=26), [Lt()], [Num(3, lineno=267, col_offset=41)], lineno=267, col_offset=26), [Expr(Call(Attribute(Name('pattern', Load(), lineno=268, col_offset=24), 'append', Load(), lineno=268, col_offset=24), [Str('*', lineno=268, col_offset=39)], [], None, None, lineno=268, col_offset=24), lineno=268, col_offset=24)], [], lineno=267, col_offset=20)], lineno=261, col_offset=16), Expr(Call(Attribute(Name('patterns', Load(), lineno=269, col_offset=16), 'append', Load(), lineno=269, col_offset=16), [Name('pattern', Load(), lineno=269, col_offset=32)], [], None, None, lineno=269, col_offset=16), lineno=269, col_offset=16)], [], lineno=254, col_offset=12), Assign([Name('replacements', Store(), lineno=270, col_offset=12)], List([], Load(), lineno=270, col_offset=27), lineno=270, col_offset=12), For(Name('p', Store(), lineno=271, col_offset=16), Name('repparts', Load(), lineno=271, col_offset=21), [If(UnaryOp(Not(), Name('p', Load(), lineno=272, col_offset=23), lineno=272, col_offset=19), [Print(None, [Str('Line', lineno=273, col_offset=26), Name('startlineno', Load(), lineno=273, col_offset=34)], False, lineno=273, col_offset=20), Print(None, [Str('Empty replacement part', lineno=274, col_offset=26)], True, lineno=274, col_offset=20), Print(None, [Call(Name('repr', Load(), lineno=275, col_offset=26), [Name('line', Load(), lineno=275, col_offset=31)], [], None, None, lineno=275, col_offset=26)], True, lineno=275, col_offset=20), Continue( lineno=276, col_offset=20)], [], lineno=272, col_offset=16), Assign([Name('replacement', Store(), lineno=277, col_offset=16)], Call(Attribute(Name('p', Load(), lineno=277, col_offset=30), 'split', Load(), lineno=277, col_offset=30), [], [], None, None, lineno=277, col_offset=30), lineno=277, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=278, col_offset=19), [Name('replacement', Load(), lineno=278, col_offset=23)], [], None, None, lineno=278, col_offset=19), [Gt()], [Num(3, lineno=278, col_offset=38)], lineno=278, col_offset=19), [Print(None, [Str('Line', lineno=279, col_offset=26), Name('startlineno', Load(), lineno=279, col_offset=34)], False, lineno=279, col_offset=20), Print(None, [Str('Pattern part has > 3 words', lineno=280, col_offset=26)], True, lineno=280, col_offset=20), Print(None, [Call(Name('repr', Load(), lineno=281, col_offset=26), [Name('line', Load(), lineno=281, col_offset=31)], [], None, None, lineno=281, col_offset=26)], True, lineno=281, col_offset=20), Assign([Name('replacement', Store(), lineno=282, col_offset=20)], Subscript(Name('replacement', Load(), lineno=282, col_offset=34), Slice(None, Num(3, lineno=282, col_offset=47), None), Load(), lineno=282, col_offset=34), lineno=282, col_offset=20)], [While(Compare(Call(Name('len', Load(), lineno=284, col_offset=26), [Name('replacement', Load(), lineno=284, col_offset=30)], [], None, None, lineno=284, col_offset=26), [Lt()], [Num(3, lineno=284, col_offset=45)], lineno=284, col_offset=26), [Expr(Call(Attribute(Name('replacement', Load(), lineno=285, col_offset=24), 'append', Load(), lineno=285, col_offset=24), [Str('*', lineno=285, col_offset=43)], [], None, None, lineno=285, col_offset=24), lineno=285, col_offset=24)], [], lineno=284, col_offset=20)], lineno=278, col_offset=16), Expr(Call(Attribute(Name('replacements', Load(), lineno=286, col_offset=16), 'append', Load(), lineno=286, col_offset=16), [Name('replacement', Load(), lineno=286, col_offset=36)], [], None, None, lineno=286, col_offset=16), lineno=286, col_offset=16)], [], lineno=271, col_offset=12), Expr(Call(Attribute(Name('list', Load(), lineno=287, col_offset=12), 'append', Load(), lineno=287, col_offset=12), [Tuple([Name('fpat', Load(), lineno=287, col_offset=25), Name('patterns', Load(), lineno=287, col_offset=31), Name('replacements', Load(), lineno=287, col_offset=41)], Load(), lineno=287, col_offset=25)], [], None, None, lineno=287, col_offset=12), lineno=287, col_offset=12)], [], lineno=227, col_offset=8), Return(Name('list', Load(), lineno=288, col_offset=15), lineno=288, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('makeinherentpointertypes', arguments([Name('self', Param(), lineno=290, col_offset=33)], None, None, []), [Return(List([], Load(), lineno=291, col_offset=15), lineno=291, col_offset=8)], [], lineno=290, col_offset=4), FunctionDef('openrepairfile', arguments([Name('self', Param(), lineno=293, col_offset=23), Name('filename', Param(), lineno=293, col_offset=29)], None, None, [Str('REPAIR', lineno=293, col_offset=40)]), [TryExcept([Return(Call(Name('open', Load(), lineno=295, col_offset=19), [Name('filename', Load(), lineno=295, col_offset=24), Str('rU', lineno=295, col_offset=34)], [], None, None, lineno=295, col_offset=19), lineno=295, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=296, col_offset=15), Name('msg', Store(), lineno=296, col_offset=24), [Print(None, [Call(Name('repr', Load(), lineno=297, col_offset=18), [Name('filename', Load(), lineno=297, col_offset=23)], [], None, None, lineno=297, col_offset=18), Str(':', lineno=297, col_offset=34), Name('msg', Load(), lineno=297, col_offset=39)], True, lineno=297, col_offset=12), Print(None, [Str('Cannot open repair file -- assume no repair needed', lineno=298, col_offset=18)], True, lineno=298, col_offset=12), Return(Name('None', Load(), lineno=299, col_offset=19), lineno=299, col_offset=12)], lineno=296, col_offset=8)], [], lineno=294, col_offset=8)], [], lineno=293, col_offset=4), FunctionDef('initfiles', arguments([Name('self', Param(), lineno=301, col_offset=18)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=302, col_offset=8), 'specmine', Store(), lineno=302, col_offset=8)], Num(0, lineno=302, col_offset=24), lineno=302, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=303, col_offset=8), 'defsmine', Store(), lineno=303, col_offset=8)], Num(0, lineno=303, col_offset=24), lineno=303, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=304, col_offset=8), 'scanmine', Store(), lineno=304, col_offset=8)], Num(0, lineno=304, col_offset=24), lineno=304, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=305, col_offset=8), 'htmlmine', Store(), lineno=305, col_offset=8)], Num(0, lineno=305, col_offset=24), lineno=305, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=306, col_offset=8), 'specfile', Store(), lineno=306, col_offset=8)], Attribute(Name('sys', Load(), lineno=306, col_offset=24), 'stdout', Load(), lineno=306, col_offset=24), lineno=306, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=307, col_offset=8), 'defsfile', Store(), lineno=307, col_offset=8)], Name('None', Load(), lineno=307, col_offset=24), lineno=307, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=308, col_offset=8), 'scanfile', Store(), lineno=308, col_offset=8)], Attribute(Name('sys', Load(), lineno=308, col_offset=24), 'stdin', Load(), lineno=308, col_offset=24), lineno=308, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=309, col_offset=8), 'htmlfile', Store(), lineno=309, col_offset=8)], Name('None', Load(), lineno=309, col_offset=24), lineno=309, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=310, col_offset=8), 'lineno', Store(), lineno=310, col_offset=8)], Num(0, lineno=310, col_offset=22), lineno=310, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=311, col_offset=8), 'line', Store(), lineno=311, col_offset=8)], Str('', lineno=311, col_offset=20), lineno=311, col_offset=8)], [], lineno=301, col_offset=4), FunctionDef('initpaths', arguments([Name('self', Param(), lineno=313, col_offset=18)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=314, col_offset=8), 'includepath', Store(), lineno=314, col_offset=8)], List([Attribute(Name('os', Load(), lineno=314, col_offset=28), 'curdir', Load(), lineno=314, col_offset=28), Name('INCLUDEDIR', Load(), lineno=314, col_offset=39)], Load(), lineno=314, col_offset=27), lineno=314, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('initpatterns', arguments([Name('self', Param(), lineno=316, col_offset=21)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=317, col_offset=8), 'head_pat', Store(), lineno=317, col_offset=8)], Str('^EXTERN_API[^_]', lineno=317, col_offset=24), lineno=317, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=318, col_offset=8), 'tail_pat', Store(), lineno=318, col_offset=8)], Str('[;={}]', lineno=318, col_offset=24), lineno=318, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=319, col_offset=8), 'type_pat', Store(), lineno=319, col_offset=8)], BinOp(BinOp(BinOp(Str('EXTERN_API', lineno=319, col_offset=24), Add(), Str('[ \\t\\n]*\\([ \\t\\n]*', lineno=320, col_offset=24), lineno=319, col_offset=24), Add(), Str('(?P<type>[a-zA-Z0-9_* \\t]*[a-zA-Z0-9_*])', lineno=321, col_offset=24), lineno=320, col_offset=46), Add(), Str('[ \\t\\n]*\\)[ \\t\\n]*', lineno=322, col_offset=24), lineno=321, col_offset=68), lineno=319, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=323, col_offset=8), 'name_pat', Store(), lineno=323, col_offset=8)], Str('(?P<name>[a-zA-Z0-9_]+)[ \\t\\n]*', lineno=323, col_offset=24), lineno=323, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=324, col_offset=8), 'args_pat', Store(), lineno=324, col_offset=8)], Str('\\((?P<args>([^\\(;=\\)]+|\\([^\\(;=\\)]*\\))*)\\)', lineno=324, col_offset=24), lineno=324, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=325, col_offset=8), 'whole_pat', Store(), lineno=325, col_offset=8)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=325, col_offset=25), 'type_pat', Load(), lineno=325, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=325, col_offset=41), 'name_pat', Load(), lineno=325, col_offset=41), lineno=325, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=325, col_offset=57), 'args_pat', Load(), lineno=325, col_offset=57), lineno=325, col_offset=55), lineno=325, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=326, col_offset=8), 'sym_pat', Store(), lineno=326, col_offset=8)], BinOp(Str('^[ \\t]*(?P<name>[a-zA-Z0-9_]+)[ \\t]*=', lineno=326, col_offset=23), Add(), Str('[ \\t]*(?P<defn>[-0-9_a-zA-Z\'\\"\\(][^\\t\\n,;}]*),?', lineno=327, col_offset=23), lineno=326, col_offset=23), lineno=326, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=328, col_offset=8), 'asplit_pat', Store(), lineno=328, col_offset=8)], Str('^(?P<type>.*[^a-zA-Z0-9_])(?P<name>[a-zA-Z0-9_]+)(?P<array>\\[\\])?$', lineno=328, col_offset=26), lineno=328, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=329, col_offset=8), 'comment1_pat', Store(), lineno=329, col_offset=8)], Str('(?P<rest>.*)//.*', lineno=329, col_offset=28), lineno=329, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=331, col_offset=8), 'comment2_pat', Store(), lineno=331, col_offset=8)], Str('(?P<rest1>.*)/\\*.*\\*/(?P<rest2>.*)', lineno=331, col_offset=28), lineno=331, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('compilepatterns', arguments([Name('self', Param(), lineno=333, col_offset=24)], None, None, []), [For(Name('name', Store(), lineno=334, col_offset=12), Call(Name('dir', Load(), lineno=334, col_offset=20), [Name('self', Load(), lineno=334, col_offset=24)], [], None, None, lineno=334, col_offset=20), [If(Compare(Subscript(Name('name', Load(), lineno=335, col_offset=15), Slice(Num(-4, lineno=335, col_offset=21), None, None), Load(), lineno=335, col_offset=15), [Eq()], [Str('_pat', lineno=335, col_offset=28)], lineno=335, col_offset=15), [Assign([Name('pat', Store(), lineno=336, col_offset=16)], Call(Name('getattr', Load(), lineno=336, col_offset=22), [Name('self', Load(), lineno=336, col_offset=30), Name('name', Load(), lineno=336, col_offset=36)], [], None, None, lineno=336, col_offset=22), lineno=336, col_offset=16), Assign([Name('prog', Store(), lineno=337, col_offset=16)], Call(Attribute(Name('re', Load(), lineno=337, col_offset=23), 'compile', Load(), lineno=337, col_offset=23), [Name('pat', Load(), lineno=337, col_offset=34)], [], None, None, lineno=337, col_offset=23), lineno=337, col_offset=16), Expr(Call(Name('setattr', Load(), lineno=338, col_offset=16), [Name('self', Load(), lineno=338, col_offset=24), Subscript(Name('name', Load(), lineno=338, col_offset=30), Slice(None, Num(-4, lineno=338, col_offset=37), None), Load(), lineno=338, col_offset=30), Name('prog', Load(), lineno=338, col_offset=41)], [], None, None, lineno=338, col_offset=16), lineno=338, col_offset=16)], [], lineno=335, col_offset=12)], [], lineno=334, col_offset=8)], [], lineno=333, col_offset=4), FunctionDef('initosspecifics', arguments([Name('self', Param(), lineno=340, col_offset=24)], None, None, []), [If(BoolOp(And(), [Name('MacOS', Load(), lineno=341, col_offset=11), Name('CREATOR', Load(), lineno=341, col_offset=21)], lineno=341, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=342, col_offset=12), 'filetype', Store(), lineno=342, col_offset=12)], Str('TEXT', lineno=342, col_offset=28), lineno=342, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=343, col_offset=12), 'filecreator', Store(), lineno=343, col_offset=12)], Name('CREATOR', Load(), lineno=343, col_offset=31), lineno=343, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=345, col_offset=12), 'filetype', Store(), lineno=345, col_offset=12), Attribute(Name('self', Load(), lineno=345, col_offset=28), 'filecreator', Store(), lineno=345, col_offset=28)], Name('None', Load(), lineno=345, col_offset=47), lineno=345, col_offset=12)], lineno=341, col_offset=8)], [], lineno=340, col_offset=4), FunctionDef('setfiletype', arguments([Name('self', Param(), lineno=347, col_offset=20), Name('filename', Param(), lineno=347, col_offset=26)], None, None, []), [If(BoolOp(And(), [Name('MacOS', Load(), lineno=348, col_offset=11), BoolOp(Or(), [Attribute(Name('self', Load(), lineno=348, col_offset=22), 'filecreator', Load(), lineno=348, col_offset=22), Attribute(Name('self', Load(), lineno=348, col_offset=42), 'filetype', Load(), lineno=348, col_offset=42)], lineno=348, col_offset=22)], lineno=348, col_offset=11), [Assign([Tuple([Name('creator', Store(), lineno=349, col_offset=12), Name('type', Store(), lineno=349, col_offset=21)], Store(), lineno=349, col_offset=12)], Call(Attribute(Name('MacOS', Load(), lineno=349, col_offset=28), 'GetCreatorAndType', Load(), lineno=349, col_offset=28), [Name('filename', Load(), lineno=349, col_offset=52)], [], None, None, lineno=349, col_offset=28), lineno=349, col_offset=12), If(Attribute(Name('self', Load(), lineno=350, col_offset=15), 'filecreator', Load(), lineno=350, col_offset=15), [Assign([Name('creator', Store(), lineno=350, col_offset=33)], Attribute(Name('self', Load(), lineno=350, col_offset=43), 'filecreator', Load(), lineno=350, col_offset=43), lineno=350, col_offset=33)], [], lineno=350, col_offset=12), If(Attribute(Name('self', Load(), lineno=351, col_offset=15), 'filetype', Load(), lineno=351, col_offset=15), [Assign([Name('type', Store(), lineno=351, col_offset=30)], Attribute(Name('self', Load(), lineno=351, col_offset=37), 'filetype', Load(), lineno=351, col_offset=37), lineno=351, col_offset=30)], [], lineno=351, col_offset=12), Expr(Call(Attribute(Name('MacOS', Load(), lineno=352, col_offset=12), 'SetCreatorAndType', Load(), lineno=352, col_offset=12), [Name('filename', Load(), lineno=352, col_offset=36), Name('creator', Load(), lineno=352, col_offset=46), Name('type', Load(), lineno=352, col_offset=55)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=12)], [], lineno=348, col_offset=8)], [], lineno=347, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=354, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'closefiles', Load(), lineno=355, col_offset=8), [], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('closefiles', arguments([Name('self', Param(), lineno=357, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'closespec', Load(), lineno=358, col_offset=8), [], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'closedefs', Load(), lineno=359, col_offset=8), [], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=8), 'closescan', Load(), lineno=360, col_offset=8), [], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'closehtml', Load(), lineno=361, col_offset=8), [], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8)], [], lineno=357, col_offset=4), FunctionDef('closespec', arguments([Name('self', Param(), lineno=363, col_offset=18)], None, None, []), [Assign([Name('tmp', Store(), lineno=364, col_offset=8)], BoolOp(And(), [Attribute(Name('self', Load(), lineno=364, col_offset=14), 'specmine', Load(), lineno=364, col_offset=14), Attribute(Name('self', Load(), lineno=364, col_offset=32), 'specfile', Load(), lineno=364, col_offset=32)], lineno=364, col_offset=14), lineno=364, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=365, col_offset=8), 'specfile', Store(), lineno=365, col_offset=8)], Name('None', Load(), lineno=365, col_offset=24), lineno=365, col_offset=8), If(Name('tmp', Load(), lineno=366, col_offset=11), [Expr(Call(Attribute(Name('tmp', Load(), lineno=366, col_offset=16), 'close', Load(), lineno=366, col_offset=16), [], [], None, None, lineno=366, col_offset=16), lineno=366, col_offset=16)], [], lineno=366, col_offset=8)], [], lineno=363, col_offset=4), FunctionDef('closedefs', arguments([Name('self', Param(), lineno=368, col_offset=18)], None, None, []), [Assign([Name('tmp', Store(), lineno=369, col_offset=8)], BoolOp(And(), [Attribute(Name('self', Load(), lineno=369, col_offset=14), 'defsmine', Load(), lineno=369, col_offset=14), Attribute(Name('self', Load(), lineno=369, col_offset=32), 'defsfile', Load(), lineno=369, col_offset=32)], lineno=369, col_offset=14), lineno=369, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=370, col_offset=8), 'defsfile', Store(), lineno=370, col_offset=8)], Name('None', Load(), lineno=370, col_offset=24), lineno=370, col_offset=8), If(Name('tmp', Load(), lineno=371, col_offset=11), [Expr(Call(Attribute(Name('tmp', Load(), lineno=371, col_offset=16), 'close', Load(), lineno=371, col_offset=16), [], [], None, None, lineno=371, col_offset=16), lineno=371, col_offset=16)], [], lineno=371, col_offset=8)], [], lineno=368, col_offset=4), FunctionDef('closescan', arguments([Name('self', Param(), lineno=373, col_offset=18)], None, None, []), [Assign([Name('tmp', Store(), lineno=374, col_offset=8)], BoolOp(And(), [Attribute(Name('self', Load(), lineno=374, col_offset=14), 'scanmine', Load(), lineno=374, col_offset=14), Attribute(Name('self', Load(), lineno=374, col_offset=32), 'scanfile', Load(), lineno=374, col_offset=32)], lineno=374, col_offset=14), lineno=374, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=375, col_offset=8), 'scanfile', Store(), lineno=375, col_offset=8)], Name('None', Load(), lineno=375, col_offset=24), lineno=375, col_offset=8), If(Name('tmp', Load(), lineno=376, col_offset=11), [Expr(Call(Attribute(Name('tmp', Load(), lineno=376, col_offset=16), 'close', Load(), lineno=376, col_offset=16), [], [], None, None, lineno=376, col_offset=16), lineno=376, col_offset=16)], [], lineno=376, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('closehtml', arguments([Name('self', Param(), lineno=378, col_offset=18)], None, None, []), [If(Attribute(Name('self', Load(), lineno=379, col_offset=11), 'htmlfile', Load(), lineno=379, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=379, col_offset=26), 'htmlfile', Load(), lineno=379, col_offset=26), 'write', Load(), lineno=379, col_offset=26), [Name('ENDHTMLREPORT', Load(), lineno=379, col_offset=46)], [], None, None, lineno=379, col_offset=26), lineno=379, col_offset=26)], [], lineno=379, col_offset=8), Assign([Name('tmp', Store(), lineno=380, col_offset=8)], BoolOp(And(), [Attribute(Name('self', Load(), lineno=380, col_offset=14), 'htmlmine', Load(), lineno=380, col_offset=14), Attribute(Name('self', Load(), lineno=380, col_offset=32), 'htmlfile', Load(), lineno=380, col_offset=32)], lineno=380, col_offset=14), lineno=380, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=381, col_offset=8), 'htmlfile', Store(), lineno=381, col_offset=8)], Name('None', Load(), lineno=381, col_offset=24), lineno=381, col_offset=8), If(Name('tmp', Load(), lineno=382, col_offset=11), [Expr(Call(Attribute(Name('tmp', Load(), lineno=382, col_offset=16), 'close', Load(), lineno=382, col_offset=16), [], [], None, None, lineno=382, col_offset=16), lineno=382, col_offset=16)], [], lineno=382, col_offset=8)], [], lineno=378, col_offset=4), FunctionDef('setoutput', arguments([Name('self', Param(), lineno=384, col_offset=18), Name('spec', Param(), lineno=384, col_offset=24), Name('defs', Param(), lineno=384, col_offset=30)], None, None, [Name('None', Load(), lineno=384, col_offset=37)]), [Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'closespec', Load(), lineno=385, col_offset=8), [], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=8), 'closedefs', Load(), lineno=386, col_offset=8), [], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), If(Name('spec', Load(), lineno=387, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=388, col_offset=15), [Name('spec', Load(), lineno=388, col_offset=20)], [], None, None, lineno=388, col_offset=15), [Eq()], [Name('StringType', Load(), lineno=388, col_offset=29)], lineno=388, col_offset=15), [Assign([Name('file', Store(), lineno=389, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=389, col_offset=23), 'openoutput', Load(), lineno=389, col_offset=23), [Name('spec', Load(), lineno=389, col_offset=39)], [], None, None, lineno=389, col_offset=23), lineno=389, col_offset=16), Assign([Name('mine', Store(), lineno=390, col_offset=16)], Num(1, lineno=390, col_offset=23), lineno=390, col_offset=16)], [Assign([Name('file', Store(), lineno=392, col_offset=16)], Name('spec', Load(), lineno=392, col_offset=23), lineno=392, col_offset=16), Assign([Name('mine', Store(), lineno=393, col_offset=16)], Num(0, lineno=393, col_offset=23), lineno=393, col_offset=16)], lineno=388, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=394, col_offset=12), 'specfile', Store(), lineno=394, col_offset=12)], Name('file', Load(), lineno=394, col_offset=28), lineno=394, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=395, col_offset=12), 'specmine', Store(), lineno=395, col_offset=12)], Name('mine', Load(), lineno=395, col_offset=28), lineno=395, col_offset=12)], [], lineno=387, col_offset=8), If(Name('defs', Load(), lineno=396, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=397, col_offset=15), [Name('defs', Load(), lineno=397, col_offset=20)], [], None, None, lineno=397, col_offset=15), [Eq()], [Name('StringType', Load(), lineno=397, col_offset=29)], lineno=397, col_offset=15), [Assign([Name('file', Store(), lineno=398, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=398, col_offset=23), 'openoutput', Load(), lineno=398, col_offset=23), [Name('defs', Load(), lineno=398, col_offset=39)], [], None, None, lineno=398, col_offset=23), lineno=398, col_offset=16), Assign([Name('mine', Store(), lineno=399, col_offset=16)], Num(1, lineno=399, col_offset=23), lineno=399, col_offset=16)], [Assign([Name('file', Store(), lineno=401, col_offset=16)], Name('defs', Load(), lineno=401, col_offset=23), lineno=401, col_offset=16), Assign([Name('mine', Store(), lineno=402, col_offset=16)], Num(0, lineno=402, col_offset=23), lineno=402, col_offset=16)], lineno=397, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=403, col_offset=12), 'defsfile', Store(), lineno=403, col_offset=12)], Name('file', Load(), lineno=403, col_offset=28), lineno=403, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=404, col_offset=12), 'defsmine', Store(), lineno=404, col_offset=12)], Name('mine', Load(), lineno=404, col_offset=28), lineno=404, col_offset=12)], [], lineno=396, col_offset=8)], [], lineno=384, col_offset=4), FunctionDef('sethtmloutput', arguments([Name('self', Param(), lineno=406, col_offset=22), Name('htmlfile', Param(), lineno=406, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'closehtml', Load(), lineno=407, col_offset=8), [], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), If(Name('htmlfile', Load(), lineno=408, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=409, col_offset=15), [Name('htmlfile', Load(), lineno=409, col_offset=20)], [], None, None, lineno=409, col_offset=15), [Eq()], [Name('StringType', Load(), lineno=409, col_offset=33)], lineno=409, col_offset=15), [Assign([Name('file', Store(), lineno=410, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=410, col_offset=23), 'openoutput', Load(), lineno=410, col_offset=23), [Name('htmlfile', Load(), lineno=410, col_offset=39)], [], None, None, lineno=410, col_offset=23), lineno=410, col_offset=16), Assign([Name('mine', Store(), lineno=411, col_offset=16)], Num(1, lineno=411, col_offset=23), lineno=411, col_offset=16)], [Assign([Name('file', Store(), lineno=413, col_offset=16)], Name('htmlfile', Load(), lineno=413, col_offset=23), lineno=413, col_offset=16), Assign([Name('mine', Store(), lineno=414, col_offset=16)], Num(0, lineno=414, col_offset=23), lineno=414, col_offset=16)], lineno=409, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=415, col_offset=12), 'htmlfile', Store(), lineno=415, col_offset=12)], Name('file', Load(), lineno=415, col_offset=28), lineno=415, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=416, col_offset=12), 'htmlmine', Store(), lineno=416, col_offset=12)], Name('mine', Load(), lineno=416, col_offset=28), lineno=416, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=417, col_offset=12), 'htmlfile', Load(), lineno=417, col_offset=12), 'write', Load(), lineno=417, col_offset=12), [Name('BEGINHTMLREPORT', Load(), lineno=417, col_offset=32)], [], None, None, lineno=417, col_offset=12), lineno=417, col_offset=12)], [], lineno=408, col_offset=8)], [], lineno=406, col_offset=4), FunctionDef('openoutput', arguments([Name('self', Param(), lineno=419, col_offset=19), Name('filename', Param(), lineno=419, col_offset=25)], None, None, []), [TryExcept([Assign([Name('file', Store(), lineno=421, col_offset=12)], Call(Name('open', Load(), lineno=421, col_offset=19), [Name('filename', Load(), lineno=421, col_offset=24), Str('w', lineno=421, col_offset=34)], [], None, None, lineno=421, col_offset=19), lineno=421, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=422, col_offset=15), Name('arg', Store(), lineno=422, col_offset=24), [Raise(Name('IOError', Load(), lineno=423, col_offset=18), Tuple([Name('filename', Load(), lineno=423, col_offset=28), Name('arg', Load(), lineno=423, col_offset=38)], Load(), lineno=423, col_offset=28), None, lineno=423, col_offset=12)], lineno=422, col_offset=8)], [], lineno=420, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=424, col_offset=8), 'setfiletype', Load(), lineno=424, col_offset=8), [Name('filename', Load(), lineno=424, col_offset=25)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8), Return(Name('file', Load(), lineno=425, col_offset=15), lineno=425, col_offset=8)], [], lineno=419, col_offset=4), FunctionDef('setinput', arguments([Name('self', Param(), lineno=427, col_offset=17), Name('scan', Param(), lineno=427, col_offset=23)], None, None, [Attribute(Name('sys', Load(), lineno=427, col_offset=30), 'stdin', Load(), lineno=427, col_offset=30)]), [If(UnaryOp(Not(), Compare(Call(Name('type', Load(), lineno=428, col_offset=15), [Name('scan', Load(), lineno=428, col_offset=20)], [], None, None, lineno=428, col_offset=15), [In()], [Tuple([Name('TupleType', Load(), lineno=428, col_offset=30), Name('ListType', Load(), lineno=428, col_offset=41)], Load(), lineno=428, col_offset=30)], lineno=428, col_offset=15), lineno=428, col_offset=11), [Assign([Name('scan', Store(), lineno=429, col_offset=12)], List([Name('scan', Load(), lineno=429, col_offset=20)], Load(), lineno=429, col_offset=19), lineno=429, col_offset=12)], [], lineno=428, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=430, col_offset=8), 'allscaninputs', Store(), lineno=430, col_offset=8)], Name('scan', Load(), lineno=430, col_offset=29), lineno=430, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=431, col_offset=8), '_nextinput', Load(), lineno=431, col_offset=8), [], [], None, None, lineno=431, col_offset=8), lineno=431, col_offset=8)], [], lineno=427, col_offset=4), FunctionDef('_nextinput', arguments([Name('self', Param(), lineno=433, col_offset=19)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=434, col_offset=15), 'allscaninputs', Load(), lineno=434, col_offset=15), lineno=434, col_offset=11), [Return(Num(0, lineno=435, col_offset=19), lineno=435, col_offset=12)], [], lineno=434, col_offset=8), Assign([Name('scan', Store(), lineno=436, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=436, col_offset=15), 'allscaninputs', Load(), lineno=436, col_offset=15), Index(Num(0, lineno=436, col_offset=34)), Load(), lineno=436, col_offset=15), lineno=436, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=437, col_offset=8), 'allscaninputs', Store(), lineno=437, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=437, col_offset=29), 'allscaninputs', Load(), lineno=437, col_offset=29), Slice(Num(1, lineno=437, col_offset=48), None, None), Load(), lineno=437, col_offset=29), lineno=437, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'closescan', Load(), lineno=438, col_offset=8), [], [], None, None, lineno=438, col_offset=8), lineno=438, col_offset=8), If(Name('scan', Load(), lineno=439, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=440, col_offset=15), [Name('scan', Load(), lineno=440, col_offset=20)], [], None, None, lineno=440, col_offset=15), [Eq()], [Name('StringType', Load(), lineno=440, col_offset=29)], lineno=440, col_offset=15), [Assign([Name('file', Store(), lineno=441, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=441, col_offset=23), 'openinput', Load(), lineno=441, col_offset=23), [Name('scan', Load(), lineno=441, col_offset=38)], [], None, None, lineno=441, col_offset=23), lineno=441, col_offset=16), Assign([Name('mine', Store(), lineno=442, col_offset=16)], Num(1, lineno=442, col_offset=23), lineno=442, col_offset=16)], [Assign([Name('file', Store(), lineno=444, col_offset=16)], Name('scan', Load(), lineno=444, col_offset=23), lineno=444, col_offset=16), Assign([Name('mine', Store(), lineno=445, col_offset=16)], Num(0, lineno=445, col_offset=23), lineno=445, col_offset=16)], lineno=440, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=446, col_offset=12), 'scanfile', Store(), lineno=446, col_offset=12)], Name('file', Load(), lineno=446, col_offset=28), lineno=446, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=447, col_offset=12), 'scanmine', Store(), lineno=447, col_offset=12)], Name('mine', Load(), lineno=447, col_offset=28), lineno=447, col_offset=12)], [], lineno=439, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=448, col_offset=8), 'lineno', Store(), lineno=448, col_offset=8)], Num(0, lineno=448, col_offset=22), lineno=448, col_offset=8), Return(Num(1, lineno=449, col_offset=15), lineno=449, col_offset=8)], [], lineno=433, col_offset=4), FunctionDef('openinput', arguments([Name('self', Param(), lineno=451, col_offset=18), Name('filename', Param(), lineno=451, col_offset=24)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=452, col_offset=15), 'path', Load(), lineno=452, col_offset=15), 'isabs', Load(), lineno=452, col_offset=15), [Name('filename', Load(), lineno=452, col_offset=29)], [], None, None, lineno=452, col_offset=15), lineno=452, col_offset=11), [For(Name('dir', Store(), lineno=453, col_offset=16), Attribute(Name('self', Load(), lineno=453, col_offset=23), 'includepath', Load(), lineno=453, col_offset=23), [Assign([Name('fullname', Store(), lineno=454, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=454, col_offset=27), 'path', Load(), lineno=454, col_offset=27), 'join', Load(), lineno=454, col_offset=27), [Name('dir', Load(), lineno=454, col_offset=40), Name('filename', Load(), lineno=454, col_offset=45)], [], None, None, lineno=454, col_offset=27), lineno=454, col_offset=16), TryExcept([Return(Call(Name('open', Load(), lineno=457, col_offset=27), [Name('fullname', Load(), lineno=457, col_offset=32), Str('rU', lineno=457, col_offset=42)], [], None, None, lineno=457, col_offset=27), lineno=457, col_offset=20)], [ExceptHandler(Name('IOError', Load(), lineno=458, col_offset=23), None, [Pass( lineno=459, col_offset=20)], lineno=458, col_offset=16)], [], lineno=456, col_offset=16)], [], lineno=453, col_offset=12)], [], lineno=452, col_offset=8), TryExcept([Return(Call(Name('open', Load(), lineno=462, col_offset=19), [Name('filename', Load(), lineno=462, col_offset=24), Str('rU', lineno=462, col_offset=34)], [], None, None, lineno=462, col_offset=19), lineno=462, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=463, col_offset=15), Name('arg', Store(), lineno=463, col_offset=24), [Raise(Name('IOError', Load(), lineno=464, col_offset=18), Tuple([Name('arg', Load(), lineno=464, col_offset=28), Name('filename', Load(), lineno=464, col_offset=33)], Load(), lineno=464, col_offset=28), None, lineno=464, col_offset=12)], lineno=463, col_offset=8)], [], lineno=461, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('getline', arguments([Name('self', Param(), lineno=466, col_offset=16)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=467, col_offset=15), 'scanfile', Load(), lineno=467, col_offset=15), lineno=467, col_offset=11), [Raise(Name('Error', Load(), lineno=468, col_offset=18), Str('input file not set', lineno=468, col_offset=25), None, lineno=468, col_offset=12)], [], lineno=467, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=469, col_offset=8), 'line', Store(), lineno=469, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=469, col_offset=20), 'scanfile', Load(), lineno=469, col_offset=20), 'readline', Load(), lineno=469, col_offset=20), [], [], None, None, lineno=469, col_offset=20), lineno=469, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=470, col_offset=15), 'line', Load(), lineno=470, col_offset=15), lineno=470, col_offset=11), [If(Call(Attribute(Name('self', Load(), lineno=471, col_offset=15), '_nextinput', Load(), lineno=471, col_offset=15), [], [], None, None, lineno=471, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=472, col_offset=23), 'getline', Load(), lineno=472, col_offset=23), [], [], None, None, lineno=472, col_offset=23), lineno=472, col_offset=16)], [], lineno=471, col_offset=12), Raise(Name('EOFError', Load(), lineno=473, col_offset=18), None, None, lineno=473, col_offset=12)], [], lineno=470, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=474, col_offset=8), 'lineno', Store(), lineno=474, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=474, col_offset=22), 'lineno', Load(), lineno=474, col_offset=22), Add(), Num(1, lineno=474, col_offset=36), lineno=474, col_offset=22), lineno=474, col_offset=8), Return(Attribute(Name('self', Load(), lineno=475, col_offset=15), 'line', Load(), lineno=475, col_offset=15), lineno=475, col_offset=8)], [], lineno=466, col_offset=4), FunctionDef('scan', arguments([Name('self', Param(), lineno=477, col_offset=13)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=478, col_offset=15), 'scanfile', Load(), lineno=478, col_offset=15), lineno=478, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=479, col_offset=12), 'error', Load(), lineno=479, col_offset=12), [Str('No input file has been specified', lineno=479, col_offset=23)], [], None, None, lineno=479, col_offset=12), lineno=479, col_offset=12), Return(None, lineno=480, col_offset=12)], [], lineno=478, col_offset=8), Assign([Name('inputname', Store(), lineno=481, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=481, col_offset=20), 'scanfile', Load(), lineno=481, col_offset=20), 'name', Load(), lineno=481, col_offset=20), lineno=481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=482, col_offset=8), 'report', Load(), lineno=482, col_offset=8), [Str('scanfile = %r', lineno=482, col_offset=20), Name('inputname', Load(), lineno=482, col_offset=37)], [], None, None, lineno=482, col_offset=8), lineno=482, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=483, col_offset=15), 'specfile', Load(), lineno=483, col_offset=15), lineno=483, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=12), 'report', Load(), lineno=484, col_offset=12), [Str('(No interface specifications will be written)', lineno=484, col_offset=24)], [], None, None, lineno=484, col_offset=12), lineno=484, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=12), 'report', Load(), lineno=486, col_offset=12), [Str('specfile = %r', lineno=486, col_offset=24), Attribute(Attribute(Name('self', Load(), lineno=486, col_offset=41), 'specfile', Load(), lineno=486, col_offset=41), 'name', Load(), lineno=486, col_offset=41)], [], None, None, lineno=486, col_offset=12), lineno=486, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=487, col_offset=12), 'specfile', Load(), lineno=487, col_offset=12), 'write', Load(), lineno=487, col_offset=12), [BinOp(Str('# Generated from %r\n\n', lineno=487, col_offset=32), Mod(), Tuple([Name('inputname', Load(), lineno=487, col_offset=61)], Load(), lineno=487, col_offset=61), lineno=487, col_offset=32)], [], None, None, lineno=487, col_offset=12), lineno=487, col_offset=12)], lineno=483, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=488, col_offset=15), 'defsfile', Load(), lineno=488, col_offset=15), lineno=488, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=489, col_offset=12), 'report', Load(), lineno=489, col_offset=12), [Str('(No symbol definitions will be written)', lineno=489, col_offset=24)], [], None, None, lineno=489, col_offset=12), lineno=489, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=491, col_offset=12), 'report', Load(), lineno=491, col_offset=12), [Str('defsfile = %r', lineno=491, col_offset=24), Tuple([Attribute(Attribute(Name('self', Load(), lineno=491, col_offset=42), 'defsfile', Load(), lineno=491, col_offset=42), 'name', Load(), lineno=491, col_offset=42)], Load(), lineno=491, col_offset=42)], [], None, None, lineno=491, col_offset=12), lineno=491, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=492, col_offset=12), 'defsfile', Load(), lineno=492, col_offset=12), 'write', Load(), lineno=492, col_offset=12), [BinOp(Str('# Generated from %r\n\n', lineno=492, col_offset=32), Mod(), Tuple([Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=492, col_offset=61), 'path', Load(), lineno=492, col_offset=61), 'split', Load(), lineno=492, col_offset=61), [Name('inputname', Load(), lineno=492, col_offset=75)], [], None, None, lineno=492, col_offset=61), Index(Num(1, lineno=492, col_offset=86)), Load(), lineno=492, col_offset=61)], Load(), lineno=492, col_offset=61), lineno=492, col_offset=32)], [], None, None, lineno=492, col_offset=12), lineno=492, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=12), 'writeinitialdefs', Load(), lineno=493, col_offset=12), [], [], None, None, lineno=493, col_offset=12), lineno=493, col_offset=12)], lineno=488, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=494, col_offset=8), 'alreadydone', Store(), lineno=494, col_offset=8)], List([], Load(), lineno=494, col_offset=27), lineno=494, col_offset=8), TryExcept([While(Num(1, lineno=496, col_offset=18), [TryExcept([Assign([Name('line', Store(), lineno=497, col_offset=21)], Call(Attribute(Name('self', Load(), lineno=497, col_offset=28), 'getline', Load(), lineno=497, col_offset=28), [], [], None, None, lineno=497, col_offset=28), lineno=497, col_offset=21)], [ExceptHandler(Name('EOFError', Load(), lineno=498, col_offset=23), None, [Break( lineno=498, col_offset=33)], lineno=498, col_offset=16)], [], lineno=497, col_offset=16), If(Attribute(Name('self', Load(), lineno=499, col_offset=19), 'debug', Load(), lineno=499, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=500, col_offset=20), 'report', Load(), lineno=500, col_offset=20), [BinOp(Str('LINE: %r', lineno=500, col_offset=32), Mod(), Tuple([Name('line', Load(), lineno=500, col_offset=46)], Load(), lineno=500, col_offset=46), lineno=500, col_offset=32)], [], None, None, lineno=500, col_offset=20), lineno=500, col_offset=20)], [], lineno=499, col_offset=16), Assign([Name('match', Store(), lineno=501, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=501, col_offset=24), 'comment1', Load(), lineno=501, col_offset=24), 'match', Load(), lineno=501, col_offset=24), [Name('line', Load(), lineno=501, col_offset=44)], [], None, None, lineno=501, col_offset=24), lineno=501, col_offset=16), If(Name('match', Load(), lineno=502, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=503, col_offset=20), 'htmlreport', Load(), lineno=503, col_offset=20), [Name('line', Load(), lineno=503, col_offset=36)], [keyword('klass', Str('commentstripping', lineno=503, col_offset=48)), keyword('ranges', List([Tuple([Call(Attribute(Name('match', Load(), lineno=504, col_offset=24), 'start', Load(), lineno=504, col_offset=24), [Str('rest', lineno=504, col_offset=36)], [], None, None, lineno=504, col_offset=24), Call(Attribute(Name('match', Load(), lineno=504, col_offset=45), 'end', Load(), lineno=504, col_offset=45), [Str('rest', lineno=504, col_offset=55)], [], None, None, lineno=504, col_offset=45), Str('notcomment', lineno=504, col_offset=64)], Load(), lineno=504, col_offset=24)], Load(), lineno=503, col_offset=75))], None, None, lineno=503, col_offset=20), lineno=503, col_offset=20), Assign([Name('line', Store(), lineno=505, col_offset=20)], Call(Attribute(Name('match', Load(), lineno=505, col_offset=27), 'group', Load(), lineno=505, col_offset=27), [Str('rest', lineno=505, col_offset=39)], [], None, None, lineno=505, col_offset=27), lineno=505, col_offset=20), If(Attribute(Name('self', Load(), lineno=506, col_offset=23), 'debug', Load(), lineno=506, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=24), 'report', Load(), lineno=507, col_offset=24), [BinOp(Str('\tafter comment1: %r', lineno=507, col_offset=36), Mod(), Tuple([Name('line', Load(), lineno=507, col_offset=62)], Load(), lineno=507, col_offset=62), lineno=507, col_offset=36)], [], None, None, lineno=507, col_offset=24), lineno=507, col_offset=24)], [], lineno=506, col_offset=20)], [], lineno=502, col_offset=16), Assign([Name('match', Store(), lineno=508, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=508, col_offset=24), 'comment2', Load(), lineno=508, col_offset=24), 'match', Load(), lineno=508, col_offset=24), [Name('line', Load(), lineno=508, col_offset=44)], [], None, None, lineno=508, col_offset=24), lineno=508, col_offset=16), While(Name('match', Load(), lineno=509, col_offset=22), [If(Name('match', Load(), lineno=510, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=24), 'htmlreport', Load(), lineno=511, col_offset=24), [Name('line', Load(), lineno=511, col_offset=40)], [keyword('klass', Str('commentstripping', lineno=511, col_offset=52)), keyword('ranges', List([Tuple([Call(Attribute(Name('match', Load(), lineno=512, col_offset=29), 'start', Load(), lineno=512, col_offset=29), [Str('rest1', lineno=512, col_offset=41)], [], None, None, lineno=512, col_offset=29), Call(Attribute(Name('match', Load(), lineno=512, col_offset=51), 'end', Load(), lineno=512, col_offset=51), [Str('rest1', lineno=512, col_offset=61)], [], None, None, lineno=512, col_offset=51), Str('notcomment', lineno=512, col_offset=71)], Load(), lineno=512, col_offset=29), Tuple([Call(Attribute(Name('match', Load(), lineno=513, col_offset=29), 'start', Load(), lineno=513, col_offset=29), [Str('rest2', lineno=513, col_offset=41)], [], None, None, lineno=513, col_offset=29), Call(Attribute(Name('match', Load(), lineno=513, col_offset=51), 'end', Load(), lineno=513, col_offset=51), [Str('rest2', lineno=513, col_offset=61)], [], None, None, lineno=513, col_offset=51), Str('notcomment', lineno=513, col_offset=71)], Load(), lineno=513, col_offset=29)], Load(), lineno=511, col_offset=79))], None, None, lineno=511, col_offset=24), lineno=511, col_offset=24)], [], lineno=510, col_offset=20), Assign([Name('line', Store(), lineno=514, col_offset=20)], BinOp(Call(Attribute(Name('match', Load(), lineno=514, col_offset=27), 'group', Load(), lineno=514, col_offset=27), [Str('rest1', lineno=514, col_offset=39)], [], None, None, lineno=514, col_offset=27), Add(), Call(Attribute(Name('match', Load(), lineno=514, col_offset=48), 'group', Load(), lineno=514, col_offset=48), [Str('rest2', lineno=514, col_offset=60)], [], None, None, lineno=514, col_offset=48), lineno=514, col_offset=27), lineno=514, col_offset=20), If(Attribute(Name('self', Load(), lineno=515, col_offset=23), 'debug', Load(), lineno=515, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=24), 'report', Load(), lineno=516, col_offset=24), [BinOp(Str('\tafter comment2: %r', lineno=516, col_offset=36), Mod(), Tuple([Name('line', Load(), lineno=516, col_offset=62)], Load(), lineno=516, col_offset=62), lineno=516, col_offset=36)], [], None, None, lineno=516, col_offset=24), lineno=516, col_offset=24)], [], lineno=515, col_offset=20), Assign([Name('match', Store(), lineno=517, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=517, col_offset=28), 'comment2', Load(), lineno=517, col_offset=28), 'match', Load(), lineno=517, col_offset=28), [Name('line', Load(), lineno=517, col_offset=48)], [], None, None, lineno=517, col_offset=28), lineno=517, col_offset=20)], [], lineno=509, col_offset=16), If(Attribute(Name('self', Load(), lineno=518, col_offset=19), 'defsfile', Load(), lineno=518, col_offset=19), [Assign([Name('match', Store(), lineno=519, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=519, col_offset=28), 'sym', Load(), lineno=519, col_offset=28), 'match', Load(), lineno=519, col_offset=28), [Name('line', Load(), lineno=519, col_offset=43)], [], None, None, lineno=519, col_offset=28), lineno=519, col_offset=20), If(Name('match', Load(), lineno=520, col_offset=23), [If(Attribute(Name('self', Load(), lineno=521, col_offset=27), 'debug', Load(), lineno=521, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=522, col_offset=28), 'report', Load(), lineno=522, col_offset=28), [Str('\tmatches sym.', lineno=522, col_offset=40)], [], None, None, lineno=522, col_offset=28), lineno=522, col_offset=28)], [], lineno=521, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=523, col_offset=24), 'dosymdef', Load(), lineno=523, col_offset=24), [Name('match', Load(), lineno=523, col_offset=38), Name('line', Load(), lineno=523, col_offset=45)], [], None, None, lineno=523, col_offset=24), lineno=523, col_offset=24), Continue( lineno=524, col_offset=24)], [], lineno=520, col_offset=20)], [], lineno=518, col_offset=16), Assign([Name('match', Store(), lineno=525, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=525, col_offset=24), 'head', Load(), lineno=525, col_offset=24), 'match', Load(), lineno=525, col_offset=24), [Name('line', Load(), lineno=525, col_offset=40)], [], None, None, lineno=525, col_offset=24), lineno=525, col_offset=16), If(Name('match', Load(), lineno=526, col_offset=19), [If(Attribute(Name('self', Load(), lineno=527, col_offset=23), 'debug', Load(), lineno=527, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=528, col_offset=24), 'report', Load(), lineno=528, col_offset=24), [Str('\tmatches head.', lineno=528, col_offset=36)], [], None, None, lineno=528, col_offset=24), lineno=528, col_offset=24)], [], lineno=527, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=20), 'dofuncspec', Load(), lineno=529, col_offset=20), [], [], None, None, lineno=529, col_offset=20), lineno=529, col_offset=20), Continue( lineno=530, col_offset=20)], [], lineno=526, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=531, col_offset=16), 'htmlreport', Load(), lineno=531, col_offset=16), [Name('line', Load(), lineno=531, col_offset=32)], [keyword('klass', Str('unmatched', lineno=531, col_offset=44))], None, None, lineno=531, col_offset=16), lineno=531, col_offset=16)], [], lineno=496, col_offset=12)], [ExceptHandler(Name('EOFError', Load(), lineno=532, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=12), 'error', Load(), lineno=533, col_offset=12), [Str('Uncaught EOF error', lineno=533, col_offset=23)], [], None, None, lineno=533, col_offset=12), lineno=533, col_offset=12)], lineno=532, col_offset=8)], [], lineno=495, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=8), 'reportusedtypes', Load(), lineno=534, col_offset=8), [], [], None, None, lineno=534, col_offset=8), lineno=534, col_offset=8)], [], lineno=477, col_offset=4), FunctionDef('dosymdef', arguments([Name('self', Param(), lineno=536, col_offset=17), Name('match', Param(), lineno=536, col_offset=23), Name('line', Param(), lineno=536, col_offset=30)], None, None, []), [Assign([Tuple([Name('name', Store(), lineno=537, col_offset=8), Name('defn', Store(), lineno=537, col_offset=14)], Store(), lineno=537, col_offset=8)], Call(Attribute(Name('match', Load(), lineno=537, col_offset=21), 'group', Load(), lineno=537, col_offset=21), [Str('name', lineno=537, col_offset=33), Str('defn', lineno=537, col_offset=41)], [], None, None, lineno=537, col_offset=21), lineno=537, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=538, col_offset=8), 'htmlreport', Load(), lineno=538, col_offset=8), [Name('line', Load(), lineno=538, col_offset=24)], [keyword('klass', Str('constant', lineno=538, col_offset=36)), keyword('ranges', List([Tuple([Call(Attribute(Name('match', Load(), lineno=539, col_offset=13), 'start', Load(), lineno=539, col_offset=13), [Str('name', lineno=539, col_offset=25)], [], None, None, lineno=539, col_offset=13), Call(Attribute(Name('match', Load(), lineno=539, col_offset=34), 'end', Load(), lineno=539, col_offset=34), [Str('name', lineno=539, col_offset=44)], [], None, None, lineno=539, col_offset=34), Str('name', lineno=539, col_offset=53)], Load(), lineno=539, col_offset=13), Tuple([Call(Attribute(Name('match', Load(), lineno=540, col_offset=13), 'start', Load(), lineno=540, col_offset=13), [Str('defn', lineno=540, col_offset=25)], [], None, None, lineno=540, col_offset=13), Call(Attribute(Name('match', Load(), lineno=540, col_offset=34), 'end', Load(), lineno=540, col_offset=34), [Str('defn', lineno=540, col_offset=44)], [], None, None, lineno=540, col_offset=34), Str('value', lineno=540, col_offset=53)], Load(), lineno=540, col_offset=13)], Load(), lineno=538, col_offset=55))], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8), Assign([Name('defn', Store(), lineno=541, col_offset=8)], Call(Name('escape8bit', Load(), lineno=541, col_offset=15), [Name('defn', Load(), lineno=541, col_offset=26)], [], None, None, lineno=541, col_offset=15), lineno=541, col_offset=8), If(Attribute(Name('self', Load(), lineno=542, col_offset=11), 'debug', Load(), lineno=542, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=543, col_offset=12), 'report', Load(), lineno=543, col_offset=12), [BinOp(Str('\tsym: name=%r, defn=%r', lineno=543, col_offset=24), Mod(), Tuple([Name('name', Load(), lineno=543, col_offset=53), Name('defn', Load(), lineno=543, col_offset=59)], Load(), lineno=543, col_offset=53), lineno=543, col_offset=24)], [], None, None, lineno=543, col_offset=12), lineno=543, col_offset=12)], [], lineno=542, col_offset=8), If(UnaryOp(Not(), Compare(Name('name', Load(), lineno=544, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=544, col_offset=23), 'blacklistnames', Load(), lineno=544, col_offset=23)], lineno=544, col_offset=15), lineno=544, col_offset=11), [Assign([Name('oline', Store(), lineno=545, col_offset=12)], BinOp(Str('%s = %s\n', lineno=545, col_offset=20), Mod(), Tuple([Name('name', Load(), lineno=545, col_offset=35), Name('defn', Load(), lineno=545, col_offset=41)], Load(), lineno=545, col_offset=35), lineno=545, col_offset=20), lineno=545, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=546, col_offset=12), 'defsfile', Load(), lineno=546, col_offset=12), 'write', Load(), lineno=546, col_offset=12), [Name('oline', Load(), lineno=546, col_offset=32)], [], None, None, lineno=546, col_offset=12), lineno=546, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=12), 'htmlreport', Load(), lineno=547, col_offset=12), [Name('oline', Load(), lineno=547, col_offset=28)], [keyword('klass', Str('pyconstant', lineno=547, col_offset=41))], None, None, lineno=547, col_offset=12), lineno=547, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=549, col_offset=12), 'defsfile', Load(), lineno=549, col_offset=12), 'write', Load(), lineno=549, col_offset=12), [BinOp(Str('# %s = %s\n', lineno=549, col_offset=32), Mod(), Tuple([Name('name', Load(), lineno=549, col_offset=49), Name('defn', Load(), lineno=549, col_offset=55)], Load(), lineno=549, col_offset=49), lineno=549, col_offset=32)], [], None, None, lineno=549, col_offset=12), lineno=549, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=550, col_offset=12), 'htmlreport', Load(), lineno=550, col_offset=12), [Str('** no output: name is blacklisted', lineno=550, col_offset=28)], [keyword('klass', Str('blconstant', lineno=550, col_offset=71))], None, None, lineno=550, col_offset=12), lineno=550, col_offset=12)], lineno=544, col_offset=8)], [], lineno=536, col_offset=4), FunctionDef('dofuncspec', arguments([Name('self', Param(), lineno=553, col_offset=19)], None, None, []), [Assign([Name('raw', Store(), lineno=554, col_offset=8)], Attribute(Name('self', Load(), lineno=554, col_offset=14), 'line', Load(), lineno=554, col_offset=14), lineno=554, col_offset=8), While(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=555, col_offset=18), 'tail', Load(), lineno=555, col_offset=18), 'search', Load(), lineno=555, col_offset=18), [Name('raw', Load(), lineno=555, col_offset=35)], [], None, None, lineno=555, col_offset=18), lineno=555, col_offset=14), [Assign([Name('line', Store(), lineno=556, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=556, col_offset=19), 'getline', Load(), lineno=556, col_offset=19), [], [], None, None, lineno=556, col_offset=19), lineno=556, col_offset=12), If(Attribute(Name('self', Load(), lineno=557, col_offset=15), 'debug', Load(), lineno=557, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=558, col_offset=16), 'report', Load(), lineno=558, col_offset=16), [BinOp(Str('* CONTINUATION LINE: %r', lineno=558, col_offset=28), Mod(), Tuple([Name('line', Load(), lineno=558, col_offset=57)], Load(), lineno=558, col_offset=57), lineno=558, col_offset=28)], [], None, None, lineno=558, col_offset=16), lineno=558, col_offset=16)], [], lineno=557, col_offset=12), Assign([Name('match', Store(), lineno=559, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=559, col_offset=20), 'comment1', Load(), lineno=559, col_offset=20), 'match', Load(), lineno=559, col_offset=20), [Name('line', Load(), lineno=559, col_offset=40)], [], None, None, lineno=559, col_offset=20), lineno=559, col_offset=12), If(Name('match', Load(), lineno=560, col_offset=15), [Assign([Name('line', Store(), lineno=561, col_offset=16)], Call(Attribute(Name('match', Load(), lineno=561, col_offset=23), 'group', Load(), lineno=561, col_offset=23), [Str('rest', lineno=561, col_offset=35)], [], None, None, lineno=561, col_offset=23), lineno=561, col_offset=16), If(Attribute(Name('self', Load(), lineno=562, col_offset=19), 'debug', Load(), lineno=562, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=563, col_offset=20), 'report', Load(), lineno=563, col_offset=20), [BinOp(Str('\tafter comment1: %r', lineno=563, col_offset=32), Mod(), Tuple([Name('line', Load(), lineno=563, col_offset=58)], Load(), lineno=563, col_offset=58), lineno=563, col_offset=32)], [], None, None, lineno=563, col_offset=20), lineno=563, col_offset=20)], [], lineno=562, col_offset=16)], [], lineno=560, col_offset=12), Assign([Name('match', Store(), lineno=564, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=564, col_offset=20), 'comment2', Load(), lineno=564, col_offset=20), 'match', Load(), lineno=564, col_offset=20), [Name('line', Load(), lineno=564, col_offset=40)], [], None, None, lineno=564, col_offset=20), lineno=564, col_offset=12), While(Name('match', Load(), lineno=565, col_offset=18), [Assign([Name('line', Store(), lineno=566, col_offset=16)], BinOp(Call(Attribute(Name('match', Load(), lineno=566, col_offset=23), 'group', Load(), lineno=566, col_offset=23), [Str('rest1', lineno=566, col_offset=35)], [], None, None, lineno=566, col_offset=23), Add(), Call(Attribute(Name('match', Load(), lineno=566, col_offset=44), 'group', Load(), lineno=566, col_offset=44), [Str('rest2', lineno=566, col_offset=56)], [], None, None, lineno=566, col_offset=44), lineno=566, col_offset=23), lineno=566, col_offset=16), If(Attribute(Name('self', Load(), lineno=567, col_offset=19), 'debug', Load(), lineno=567, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=568, col_offset=20), 'report', Load(), lineno=568, col_offset=20), [BinOp(Str('\tafter comment1: %r', lineno=568, col_offset=32), Mod(), Tuple([Name('line', Load(), lineno=568, col_offset=58)], Load(), lineno=568, col_offset=58), lineno=568, col_offset=32)], [], None, None, lineno=568, col_offset=20), lineno=568, col_offset=20)], [], lineno=567, col_offset=16), Assign([Name('match', Store(), lineno=569, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=569, col_offset=24), 'comment2', Load(), lineno=569, col_offset=24), 'match', Load(), lineno=569, col_offset=24), [Name('line', Load(), lineno=569, col_offset=44)], [], None, None, lineno=569, col_offset=24), lineno=569, col_offset=16)], [], lineno=565, col_offset=12), Assign([Name('raw', Store(), lineno=570, col_offset=12)], BinOp(Name('raw', Load(), lineno=570, col_offset=18), Add(), Name('line', Load(), lineno=570, col_offset=24), lineno=570, col_offset=18), lineno=570, col_offset=12)], [], lineno=555, col_offset=8), If(Attribute(Name('self', Load(), lineno=571, col_offset=11), 'debug', Load(), lineno=571, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=572, col_offset=12), 'report', Load(), lineno=572, col_offset=12), [BinOp(Str('* WHOLE LINE: %r', lineno=572, col_offset=24), Mod(), Tuple([Name('raw', Load(), lineno=572, col_offset=46)], Load(), lineno=572, col_offset=46), lineno=572, col_offset=24)], [], None, None, lineno=572, col_offset=12), lineno=572, col_offset=12)], [], lineno=571, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=8), 'processrawspec', Load(), lineno=573, col_offset=8), [Name('raw', Load(), lineno=573, col_offset=28)], [], None, None, lineno=573, col_offset=8), lineno=573, col_offset=8), Return(Name('raw', Load(), lineno=574, col_offset=15), lineno=574, col_offset=8)], [], lineno=553, col_offset=4), FunctionDef('processrawspec', arguments([Name('self', Param(), lineno=576, col_offset=23), Name('raw', Param(), lineno=576, col_offset=29)], None, None, []), [Assign([Name('match', Store(), lineno=577, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=577, col_offset=16), 'whole', Load(), lineno=577, col_offset=16), 'search', Load(), lineno=577, col_offset=16), [Name('raw', Load(), lineno=577, col_offset=34)], [], None, None, lineno=577, col_offset=16), lineno=577, col_offset=8), If(UnaryOp(Not(), Name('match', Load(), lineno=578, col_offset=15), lineno=578, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=579, col_offset=12), 'report', Load(), lineno=579, col_offset=12), [Str('Bad raw spec: %r', lineno=579, col_offset=24), Name('raw', Load(), lineno=579, col_offset=44)], [], None, None, lineno=579, col_offset=12), lineno=579, col_offset=12), If(Attribute(Name('self', Load(), lineno=580, col_offset=15), 'debug', Load(), lineno=580, col_offset=15), [Assign([Name('match', Store(), lineno=581, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=581, col_offset=24), 'type', Load(), lineno=581, col_offset=24), 'search', Load(), lineno=581, col_offset=24), [Name('raw', Load(), lineno=581, col_offset=41)], [], None, None, lineno=581, col_offset=24), lineno=581, col_offset=16), If(UnaryOp(Not(), Name('match', Load(), lineno=582, col_offset=23), lineno=582, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=583, col_offset=20), 'report', Load(), lineno=583, col_offset=20), [Str("(Type already doesn't match)", lineno=583, col_offset=32)], [], None, None, lineno=583, col_offset=20), lineno=583, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=20), 'htmlreport', Load(), lineno=584, col_offset=20), [Name('raw', Load(), lineno=584, col_offset=36)], [keyword('klass', Str('incomplete', lineno=584, col_offset=47)), keyword('ranges', List([Tuple([Call(Attribute(Name('match', Load(), lineno=585, col_offset=24), 'start', Load(), lineno=585, col_offset=24), [Str('type', lineno=585, col_offset=36)], [], None, None, lineno=585, col_offset=24), Call(Attribute(Name('match', Load(), lineno=585, col_offset=45), 'end', Load(), lineno=585, col_offset=45), [Str('type', lineno=585, col_offset=55)], [], None, None, lineno=585, col_offset=45), Str('type', lineno=585, col_offset=64)], Load(), lineno=585, col_offset=24)], Load(), lineno=584, col_offset=68))], None, None, lineno=584, col_offset=20), lineno=584, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=20), 'report', Load(), lineno=587, col_offset=20), [Str('(but type matched)', lineno=587, col_offset=32)], [], None, None, lineno=587, col_offset=20), lineno=587, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=588, col_offset=20), 'htmlreport', Load(), lineno=588, col_offset=20), [Name('raw', Load(), lineno=588, col_offset=36)], [keyword('klass', Str('incomplete', lineno=588, col_offset=47))], None, None, lineno=588, col_offset=20), lineno=588, col_offset=20)], lineno=582, col_offset=16)], [], lineno=580, col_offset=12), Return(None, lineno=589, col_offset=12)], [], lineno=578, col_offset=8), Assign([Tuple([Name('type', Store(), lineno=590, col_offset=8), Name('name', Store(), lineno=590, col_offset=14), Name('args', Store(), lineno=590, col_offset=20)], Store(), lineno=590, col_offset=8)], Call(Attribute(Name('match', Load(), lineno=590, col_offset=27), 'group', Load(), lineno=590, col_offset=27), [Str('type', lineno=590, col_offset=39), Str('name', lineno=590, col_offset=47), Str('args', lineno=590, col_offset=55)], [], None, None, lineno=590, col_offset=27), lineno=590, col_offset=8), Assign([Name('ranges', Store(), lineno=591, col_offset=8)], List([Tuple([Call(Attribute(Name('match', Load(), lineno=592, col_offset=17), 'start', Load(), lineno=592, col_offset=17), [Str('type', lineno=592, col_offset=29)], [], None, None, lineno=592, col_offset=17), Call(Attribute(Name('match', Load(), lineno=592, col_offset=38), 'end', Load(), lineno=592, col_offset=38), [Str('type', lineno=592, col_offset=48)], [], None, None, lineno=592, col_offset=38), Str('type', lineno=592, col_offset=57)], Load(), lineno=592, col_offset=17), Tuple([Call(Attribute(Name('match', Load(), lineno=593, col_offset=17), 'start', Load(), lineno=593, col_offset=17), [Str('name', lineno=593, col_offset=29)], [], None, None, lineno=593, col_offset=17), Call(Attribute(Name('match', Load(), lineno=593, col_offset=38), 'end', Load(), lineno=593, col_offset=38), [Str('name', lineno=593, col_offset=48)], [], None, None, lineno=593, col_offset=38), Str('name', lineno=593, col_offset=57)], Load(), lineno=593, col_offset=17), Tuple([Call(Attribute(Name('match', Load(), lineno=594, col_offset=17), 'start', Load(), lineno=594, col_offset=17), [Str('args', lineno=594, col_offset=29)], [], None, None, lineno=594, col_offset=17), Call(Attribute(Name('match', Load(), lineno=594, col_offset=38), 'end', Load(), lineno=594, col_offset=38), [Str('args', lineno=594, col_offset=48)], [], None, None, lineno=594, col_offset=38), Str('arglist', lineno=594, col_offset=57)], Load(), lineno=594, col_offset=17)], Load(), lineno=591, col_offset=15), lineno=591, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=595, col_offset=8), 'htmlreport', Load(), lineno=595, col_offset=8), [Name('raw', Load(), lineno=595, col_offset=24)], [keyword('klass', Str('declaration', lineno=595, col_offset=35)), keyword('ranges', Name('ranges', Load(), lineno=595, col_offset=57))], None, None, lineno=595, col_offset=8), lineno=595, col_offset=8), Assign([Name('modifiers', Store(), lineno=596, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=596, col_offset=20), 'getmodifiers', Load(), lineno=596, col_offset=20), [Name('match', Load(), lineno=596, col_offset=38)], [], None, None, lineno=596, col_offset=20), lineno=596, col_offset=8), Assign([Name('type', Store(), lineno=597, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=597, col_offset=15), 'pythonizename', Load(), lineno=597, col_offset=15), [Name('type', Load(), lineno=597, col_offset=34)], [], None, None, lineno=597, col_offset=15), lineno=597, col_offset=8), Assign([Name('name', Store(), lineno=598, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=598, col_offset=15), 'pythonizename', Load(), lineno=598, col_offset=15), [Name('name', Load(), lineno=598, col_offset=34)], [], None, None, lineno=598, col_offset=15), lineno=598, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=599, col_offset=11), 'checkduplicate', Load(), lineno=599, col_offset=11), [Name('name', Load(), lineno=599, col_offset=31)], [], None, None, lineno=599, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=12), 'htmlreport', Load(), lineno=600, col_offset=12), [Str('*** no output generated: duplicate name', lineno=600, col_offset=28)], [keyword('klass', Str('blacklisted', lineno=600, col_offset=77))], None, None, lineno=600, col_offset=12), lineno=600, col_offset=12), Return(None, lineno=601, col_offset=12)], [], lineno=599, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=8), 'report', Load(), lineno=602, col_offset=8), [Str('==> %s %s <==', lineno=602, col_offset=20), Name('type', Load(), lineno=602, col_offset=37), Name('name', Load(), lineno=602, col_offset=43)], [], None, None, lineno=602, col_offset=8), lineno=602, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=603, col_offset=11), 'blacklisted', Load(), lineno=603, col_offset=11), [Name('type', Load(), lineno=603, col_offset=28), Name('name', Load(), lineno=603, col_offset=34)], [], None, None, lineno=603, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=604, col_offset=12), 'htmlreport', Load(), lineno=604, col_offset=12), [Str('*** no output generated: function name or return type blacklisted', lineno=604, col_offset=28)], [keyword('klass', Str('blacklisted', lineno=604, col_offset=103))], None, None, lineno=604, col_offset=12), lineno=604, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=12), 'report', Load(), lineno=605, col_offset=12), [Str('*** %s %s blacklisted', lineno=605, col_offset=24), Name('type', Load(), lineno=605, col_offset=49), Name('name', Load(), lineno=605, col_offset=55)], [], None, None, lineno=605, col_offset=12), lineno=605, col_offset=12), Return(None, lineno=606, col_offset=12)], [], lineno=603, col_offset=8), Assign([Name('returnlist', Store(), lineno=607, col_offset=8)], List([Tuple([Name('type', Load(), lineno=607, col_offset=23), Name('name', Load(), lineno=607, col_offset=29), Str('ReturnMode', lineno=607, col_offset=35)], Load(), lineno=607, col_offset=23)], Load(), lineno=607, col_offset=21), lineno=607, col_offset=8), Assign([Name('returnlist', Store(), lineno=608, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=608, col_offset=21), 'repairarglist', Load(), lineno=608, col_offset=21), [Name('name', Load(), lineno=608, col_offset=40), Name('returnlist', Load(), lineno=608, col_offset=46)], [], None, None, lineno=608, col_offset=21), lineno=608, col_offset=8), Assign([List([Tuple([Name('type', Store(), lineno=609, col_offset=10), Name('name', Store(), lineno=609, col_offset=16), Name('returnmode', Store(), lineno=609, col_offset=22)], Store(), lineno=609, col_offset=10)], Store(), lineno=609, col_offset=8)], Name('returnlist', Load(), lineno=609, col_offset=37), lineno=609, col_offset=8), Assign([Name('arglist', Store(), lineno=610, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=610, col_offset=18), 'extractarglist', Load(), lineno=610, col_offset=18), [Name('args', Load(), lineno=610, col_offset=38)], [], None, None, lineno=610, col_offset=18), lineno=610, col_offset=8), Assign([Name('arglist', Store(), lineno=611, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=611, col_offset=18), 'repairarglist', Load(), lineno=611, col_offset=18), [Name('name', Load(), lineno=611, col_offset=37), Name('arglist', Load(), lineno=611, col_offset=43)], [], None, None, lineno=611, col_offset=18), lineno=611, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=612, col_offset=11), 'unmanageable', Load(), lineno=612, col_offset=11), [Name('type', Load(), lineno=612, col_offset=29), Name('name', Load(), lineno=612, col_offset=35), Name('arglist', Load(), lineno=612, col_offset=41)], [], None, None, lineno=612, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=613, col_offset=12), 'htmlreport', Load(), lineno=613, col_offset=12), [Str('*** no output generated: some argument blacklisted', lineno=613, col_offset=28)], [keyword('klass', Str('blacklisted', lineno=613, col_offset=88))], None, None, lineno=613, col_offset=12), lineno=613, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=616, col_offset=12), 'report', Load(), lineno=616, col_offset=12), [Str('*** %s %s unmanageable', lineno=616, col_offset=24), Name('type', Load(), lineno=616, col_offset=50), Name('name', Load(), lineno=616, col_offset=56)], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=12), Return(None, lineno=617, col_offset=12)], [], lineno=612, col_offset=8), If(Name('modifiers', Load(), lineno=618, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=619, col_offset=12), 'generate', Load(), lineno=619, col_offset=12), [Name('type', Load(), lineno=619, col_offset=26), Name('name', Load(), lineno=619, col_offset=32), Name('arglist', Load(), lineno=619, col_offset=38), Name('modifiers', Load(), lineno=619, col_offset=47)], [], None, None, lineno=619, col_offset=12), lineno=619, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=621, col_offset=12), 'generate', Load(), lineno=621, col_offset=12), [Name('type', Load(), lineno=621, col_offset=26), Name('name', Load(), lineno=621, col_offset=32), Name('arglist', Load(), lineno=621, col_offset=38)], [], None, None, lineno=621, col_offset=12), lineno=621, col_offset=12)], lineno=618, col_offset=8)], [], lineno=576, col_offset=4), FunctionDef('getmodifiers', arguments([Name('self', Param(), lineno=623, col_offset=21), Name('match', Param(), lineno=623, col_offset=27)], None, None, []), [Return(List([], Load(), lineno=624, col_offset=15), lineno=624, col_offset=8)], [], lineno=623, col_offset=4), FunctionDef('checkduplicate', arguments([Name('self', Param(), lineno=626, col_offset=23), Name('name', Param(), lineno=626, col_offset=29)], None, None, []), [If(Compare(Name('name', Load(), lineno=627, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=627, col_offset=19), 'alreadydone', Load(), lineno=627, col_offset=19)], lineno=627, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=628, col_offset=12), 'report', Load(), lineno=628, col_offset=12), [Str('Name has already been defined: %r', lineno=628, col_offset=24), Name('name', Load(), lineno=628, col_offset=61)], [], None, None, lineno=628, col_offset=12), lineno=628, col_offset=12), Return(Name('True', Load(), lineno=629, col_offset=19), lineno=629, col_offset=12)], [], lineno=627, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=630, col_offset=8), 'alreadydone', Load(), lineno=630, col_offset=8), 'append', Load(), lineno=630, col_offset=8), [Name('name', Load(), lineno=630, col_offset=32)], [], None, None, lineno=630, col_offset=8), lineno=630, col_offset=8), Return(Name('False', Load(), lineno=631, col_offset=15), lineno=631, col_offset=8)], [], lineno=626, col_offset=4), FunctionDef('pythonizename', arguments([Name('self', Param(), lineno=633, col_offset=22), Name('name', Param(), lineno=633, col_offset=28)], None, None, []), [Assign([Name('name', Store(), lineno=634, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=634, col_offset=15), 'sub', Load(), lineno=634, col_offset=15), [Str('\\*', lineno=634, col_offset=22), Str(' ptr', lineno=634, col_offset=28), Name('name', Load(), lineno=634, col_offset=36)], [], None, None, lineno=634, col_offset=15), lineno=634, col_offset=8), Assign([Name('name', Store(), lineno=635, col_offset=8)], Call(Attribute(Name('name', Load(), lineno=635, col_offset=15), 'strip', Load(), lineno=635, col_offset=15), [], [], None, None, lineno=635, col_offset=15), lineno=635, col_offset=8), Assign([Name('name', Store(), lineno=636, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=636, col_offset=15), 'sub', Load(), lineno=636, col_offset=15), [Str('[ \t]+', lineno=636, col_offset=22), Str('_', lineno=636, col_offset=32), Name('name', Load(), lineno=636, col_offset=37)], [], None, None, lineno=636, col_offset=15), lineno=636, col_offset=8), Return(Name('name', Load(), lineno=637, col_offset=15), lineno=637, col_offset=8)], [], lineno=633, col_offset=4), FunctionDef('extractarglist', arguments([Name('self', Param(), lineno=639, col_offset=23), Name('args', Param(), lineno=639, col_offset=29)], None, None, []), [Assign([Name('args', Store(), lineno=640, col_offset=8)], Call(Attribute(Name('args', Load(), lineno=640, col_offset=15), 'strip', Load(), lineno=640, col_offset=15), [], [], None, None, lineno=640, col_offset=15), lineno=640, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('args', Load(), lineno=641, col_offset=15), lineno=641, col_offset=11), Compare(Name('args', Load(), lineno=641, col_offset=23), [Eq()], [Str('void', lineno=641, col_offset=31)], lineno=641, col_offset=23)], lineno=641, col_offset=11), [Return(List([], Load(), lineno=642, col_offset=19), lineno=642, col_offset=12)], [], lineno=641, col_offset=8), Assign([Name('parts', Store(), lineno=643, col_offset=8)], ListComp(Call(Attribute(Name('s', Load(), lineno=643, col_offset=17), 'strip', Load(), lineno=643, col_offset=17), [], [], None, None, lineno=643, col_offset=17), [comprehension(Name('s', Store(), lineno=643, col_offset=31), Call(Attribute(Name('args', Load(), lineno=643, col_offset=36), 'split', Load(), lineno=643, col_offset=36), [Str(',', lineno=643, col_offset=47)], [], None, None, lineno=643, col_offset=36), [])], lineno=643, col_offset=17), lineno=643, col_offset=8), Assign([Name('arglist', Store(), lineno=644, col_offset=8)], List([], Load(), lineno=644, col_offset=18), lineno=644, col_offset=8), For(Name('part', Store(), lineno=645, col_offset=12), Name('parts', Load(), lineno=645, col_offset=20), [Assign([Name('arg', Store(), lineno=646, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=646, col_offset=18), 'extractarg', Load(), lineno=646, col_offset=18), [Name('part', Load(), lineno=646, col_offset=34)], [], None, None, lineno=646, col_offset=18), lineno=646, col_offset=12), Expr(Call(Attribute(Name('arglist', Load(), lineno=647, col_offset=12), 'append', Load(), lineno=647, col_offset=12), [Name('arg', Load(), lineno=647, col_offset=27)], [], None, None, lineno=647, col_offset=12), lineno=647, col_offset=12)], [], lineno=645, col_offset=8), Return(Name('arglist', Load(), lineno=648, col_offset=15), lineno=648, col_offset=8)], [], lineno=639, col_offset=4), FunctionDef('extractarg', arguments([Name('self', Param(), lineno=650, col_offset=19), Name('part', Param(), lineno=650, col_offset=25)], None, None, []), [Assign([Name('mode', Store(), lineno=651, col_offset=8)], Str('InMode', lineno=651, col_offset=15), lineno=651, col_offset=8), Assign([Name('part', Store(), lineno=652, col_offset=8)], Call(Attribute(Name('part', Load(), lineno=652, col_offset=15), 'strip', Load(), lineno=652, col_offset=15), [], [], None, None, lineno=652, col_offset=15), lineno=652, col_offset=8), Assign([Name('match', Store(), lineno=653, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=653, col_offset=16), 'asplit', Load(), lineno=653, col_offset=16), 'match', Load(), lineno=653, col_offset=16), [Name('part', Load(), lineno=653, col_offset=34)], [], None, None, lineno=653, col_offset=16), lineno=653, col_offset=8), If(UnaryOp(Not(), Name('match', Load(), lineno=654, col_offset=15), lineno=654, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=655, col_offset=12), 'error', Load(), lineno=655, col_offset=12), [Str('Indecipherable argument: %r', lineno=655, col_offset=23), Name('part', Load(), lineno=655, col_offset=54)], [], None, None, lineno=655, col_offset=12), lineno=655, col_offset=12), Return(Tuple([Str('unknown', lineno=656, col_offset=20), Name('part', Load(), lineno=656, col_offset=31), Name('mode', Load(), lineno=656, col_offset=37)], Load(), lineno=656, col_offset=20), lineno=656, col_offset=12)], [], lineno=654, col_offset=8), Assign([Tuple([Name('type', Store(), lineno=657, col_offset=8), Name('name', Store(), lineno=657, col_offset=14), Name('array', Store(), lineno=657, col_offset=20)], Store(), lineno=657, col_offset=8)], Call(Attribute(Name('match', Load(), lineno=657, col_offset=28), 'group', Load(), lineno=657, col_offset=28), [Str('type', lineno=657, col_offset=40), Str('name', lineno=657, col_offset=48), Str('array', lineno=657, col_offset=56)], [], None, None, lineno=657, col_offset=28), lineno=657, col_offset=8), If(Name('array', Load(), lineno=658, col_offset=11), [Assign([Name('type', Store(), lineno=660, col_offset=12)], BinOp(Name('type', Load(), lineno=660, col_offset=19), Add(), Str(' ptr ', lineno=660, col_offset=26), lineno=660, col_offset=19), lineno=660, col_offset=12)], [], lineno=658, col_offset=8), Assign([Name('type', Store(), lineno=661, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=661, col_offset=15), 'pythonizename', Load(), lineno=661, col_offset=15), [Name('type', Load(), lineno=661, col_offset=34)], [], None, None, lineno=661, col_offset=15), lineno=661, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=662, col_offset=15), 'modifyarg', Load(), lineno=662, col_offset=15), [Name('type', Load(), lineno=662, col_offset=30), Name('name', Load(), lineno=662, col_offset=36), Name('mode', Load(), lineno=662, col_offset=42)], [], None, None, lineno=662, col_offset=15), lineno=662, col_offset=8)], [], lineno=650, col_offset=4), FunctionDef('modifyarg', arguments([Name('self', Param(), lineno=664, col_offset=18), Name('type', Param(), lineno=664, col_offset=24), Name('name', Param(), lineno=664, col_offset=30), Name('mode', Param(), lineno=664, col_offset=36)], None, None, []), [If(Compare(Subscript(Name('type', Load(), lineno=665, col_offset=11), Slice(None, Num(6, lineno=665, col_offset=17), None), Load(), lineno=665, col_offset=11), [Eq()], [Str('const_', lineno=665, col_offset=23)], lineno=665, col_offset=11), [Assign([Name('type', Store(), lineno=666, col_offset=12)], Subscript(Name('type', Load(), lineno=666, col_offset=19), Slice(Num(6, lineno=666, col_offset=24), None, None), Load(), lineno=666, col_offset=19), lineno=666, col_offset=12)], [If(Compare(Subscript(Name('type', Load(), lineno=667, col_offset=13), Slice(Num(-4, lineno=667, col_offset=19), None, None), Load(), lineno=667, col_offset=13), [Eq()], [Str('_ptr', lineno=667, col_offset=26)], lineno=667, col_offset=13), [Assign([Name('type', Store(), lineno=668, col_offset=12)], Subscript(Name('type', Load(), lineno=668, col_offset=19), Slice(None, Num(-4, lineno=668, col_offset=26), None), Load(), lineno=668, col_offset=19), lineno=668, col_offset=12), Assign([Name('mode', Store(), lineno=669, col_offset=12)], Str('OutMode', lineno=669, col_offset=19), lineno=669, col_offset=12)], [If(Compare(Name('type', Load(), lineno=670, col_offset=13), [In()], [Attribute(Name('self', Load(), lineno=670, col_offset=21), 'inherentpointertypes', Load(), lineno=670, col_offset=21)], lineno=670, col_offset=13), [Assign([Name('mode', Store(), lineno=671, col_offset=12)], Str('OutMode', lineno=671, col_offset=19), lineno=671, col_offset=12)], [], lineno=670, col_offset=13)], lineno=667, col_offset=13)], lineno=665, col_offset=8), If(Compare(Subscript(Name('type', Load(), lineno=672, col_offset=11), Slice(Num(-4, lineno=672, col_offset=17), None, None), Load(), lineno=672, col_offset=11), [Eq()], [Str('_far', lineno=672, col_offset=24)], lineno=672, col_offset=11), [Assign([Name('type', Store(), lineno=673, col_offset=12)], Subscript(Name('type', Load(), lineno=673, col_offset=19), Slice(None, Num(-4, lineno=673, col_offset=26), None), Load(), lineno=673, col_offset=19), lineno=673, col_offset=12)], [], lineno=672, col_offset=8), Return(Tuple([Name('type', Load(), lineno=674, col_offset=15), Name('name', Load(), lineno=674, col_offset=21), Name('mode', Load(), lineno=674, col_offset=27)], Load(), lineno=674, col_offset=15), lineno=674, col_offset=8)], [], lineno=664, col_offset=4), FunctionDef('repairarglist', arguments([Name('self', Param(), lineno=676, col_offset=22), Name('functionname', Param(), lineno=676, col_offset=28), Name('arglist', Param(), lineno=676, col_offset=42)], None, None, []), [Assign([Name('arglist', Store(), lineno=677, col_offset=8)], Subscript(Name('arglist', Load(), lineno=677, col_offset=18), Slice(None, None, None), Load(), lineno=677, col_offset=18), lineno=677, col_offset=8), Assign([Name('i', Store(), lineno=678, col_offset=8)], Num(0, lineno=678, col_offset=12), lineno=678, col_offset=8), While(Compare(Name('i', Load(), lineno=679, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=679, col_offset=18), [Name('arglist', Load(), lineno=679, col_offset=22)], [], None, None, lineno=679, col_offset=18)], lineno=679, col_offset=14), [For(Name('item', Store(), lineno=680, col_offset=16), Attribute(Name('self', Load(), lineno=680, col_offset=24), 'repairinstructions', Load(), lineno=680, col_offset=24), [If(Compare(Call(Name('len', Load(), lineno=681, col_offset=19), [Name('item', Load(), lineno=681, col_offset=23)], [], None, None, lineno=681, col_offset=19), [Eq()], [Num(2, lineno=681, col_offset=32)], lineno=681, col_offset=19), [Assign([Tuple([Name('pattern', Store(), lineno=682, col_offset=20), Name('replacement', Store(), lineno=682, col_offset=29)], Store(), lineno=682, col_offset=20)], Name('item', Load(), lineno=682, col_offset=43), lineno=682, col_offset=20), Assign([Name('functionpat', Store(), lineno=683, col_offset=20)], Str('*', lineno=683, col_offset=34), lineno=683, col_offset=20)], [Assign([Tuple([Name('functionpat', Store(), lineno=685, col_offset=20), Name('pattern', Store(), lineno=685, col_offset=33), Name('replacement', Store(), lineno=685, col_offset=42)], Store(), lineno=685, col_offset=20)], Name('item', Load(), lineno=685, col_offset=56), lineno=685, col_offset=20)], lineno=681, col_offset=16), If(UnaryOp(Not(), Call(Attribute(Name('fnmatch', Load(), lineno=686, col_offset=23), 'fnmatchcase', Load(), lineno=686, col_offset=23), [Name('functionname', Load(), lineno=686, col_offset=43), Name('functionpat', Load(), lineno=686, col_offset=57)], [], None, None, lineno=686, col_offset=23), lineno=686, col_offset=19), [Continue( lineno=687, col_offset=20)], [], lineno=686, col_offset=16), Assign([Name('n', Store(), lineno=688, col_offset=16)], Call(Name('len', Load(), lineno=688, col_offset=20), [Name('pattern', Load(), lineno=688, col_offset=24)], [], None, None, lineno=688, col_offset=20), lineno=688, col_offset=16), If(Compare(BinOp(Name('i', Load(), lineno=689, col_offset=19), Add(), Name('n', Load(), lineno=689, col_offset=21), lineno=689, col_offset=19), [Gt()], [Call(Name('len', Load(), lineno=689, col_offset=25), [Name('arglist', Load(), lineno=689, col_offset=29)], [], None, None, lineno=689, col_offset=25)], lineno=689, col_offset=19), [Continue( lineno=689, col_offset=39)], [], lineno=689, col_offset=16), Assign([Name('current', Store(), lineno=690, col_offset=16)], Subscript(Name('arglist', Load(), lineno=690, col_offset=26), Slice(Name('i', Load(), lineno=690, col_offset=34), BinOp(Name('i', Load(), lineno=690, col_offset=36), Add(), Name('n', Load(), lineno=690, col_offset=38), lineno=690, col_offset=36), None), Load(), lineno=690, col_offset=26), lineno=690, col_offset=16), For(Name('j', Store(), lineno=691, col_offset=20), Call(Name('range', Load(), lineno=691, col_offset=25), [Name('n', Load(), lineno=691, col_offset=31)], [], None, None, lineno=691, col_offset=25), [If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=692, col_offset=27), 'matcharg', Load(), lineno=692, col_offset=27), [Subscript(Name('pattern', Load(), lineno=692, col_offset=41), Index(Name('j', Load(), lineno=692, col_offset=49)), Load(), lineno=692, col_offset=41), Subscript(Name('current', Load(), lineno=692, col_offset=53), Index(Name('j', Load(), lineno=692, col_offset=61)), Load(), lineno=692, col_offset=53)], [], None, None, lineno=692, col_offset=27), lineno=692, col_offset=23), [Break( lineno=693, col_offset=24)], [], lineno=692, col_offset=20)], [Assign([Name('new', Store(), lineno=695, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=695, col_offset=26), 'substituteargs', Load(), lineno=695, col_offset=26), [Name('pattern', Load(), lineno=696, col_offset=28), Name('replacement', Load(), lineno=696, col_offset=37), Name('current', Load(), lineno=696, col_offset=50)], [], None, None, lineno=695, col_offset=26), lineno=695, col_offset=20), If(Compare(Name('new', Load(), lineno=697, col_offset=23), [IsNot()], [Name('None', Load(), lineno=697, col_offset=34)], lineno=697, col_offset=23), [Assign([Subscript(Name('arglist', Load(), lineno=698, col_offset=24), Slice(Name('i', Load(), lineno=698, col_offset=32), BinOp(Name('i', Load(), lineno=698, col_offset=34), Add(), Name('n', Load(), lineno=698, col_offset=36), lineno=698, col_offset=34), None), Store(), lineno=698, col_offset=24)], Name('new', Load(), lineno=698, col_offset=41), lineno=698, col_offset=24), Assign([Name('i', Store(), lineno=699, col_offset=24)], BinOp(Name('i', Load(), lineno=699, col_offset=28), Add(), Call(Name('len', Load(), lineno=699, col_offset=30), [Name('new', Load(), lineno=699, col_offset=34)], [], None, None, lineno=699, col_offset=30), lineno=699, col_offset=28), lineno=699, col_offset=24), Break( lineno=700, col_offset=24)], [], lineno=697, col_offset=20)], lineno=691, col_offset=16)], [Assign([Name('i', Store(), lineno=702, col_offset=16)], BinOp(Name('i', Load(), lineno=702, col_offset=20), Add(), Num(1, lineno=702, col_offset=22), lineno=702, col_offset=20), lineno=702, col_offset=16)], lineno=680, col_offset=12)], [], lineno=679, col_offset=8), Return(Name('arglist', Load(), lineno=703, col_offset=15), lineno=703, col_offset=8)], [], lineno=676, col_offset=4), FunctionDef('matcharg', arguments([Name('self', Param(), lineno=705, col_offset=17), Name('patarg', Param(), lineno=705, col_offset=23), Name('arg', Param(), lineno=705, col_offset=31)], None, None, []), [Return(Compare(Call(Name('len', Load(), lineno=706, col_offset=15), [Call(Name('filter', Load(), lineno=706, col_offset=19), [Name('None', Load(), lineno=706, col_offset=26), Call(Name('map', Load(), lineno=706, col_offset=32), [Attribute(Name('fnmatch', Load(), lineno=706, col_offset=36), 'fnmatchcase', Load(), lineno=706, col_offset=36), Name('arg', Load(), lineno=706, col_offset=57), Name('patarg', Load(), lineno=706, col_offset=62)], [], None, None, lineno=706, col_offset=32)], [], None, None, lineno=706, col_offset=19)], [], None, None, lineno=706, col_offset=15), [Eq()], [Num(3, lineno=706, col_offset=75)], lineno=706, col_offset=15), lineno=706, col_offset=8)], [], lineno=705, col_offset=4), FunctionDef('substituteargs', arguments([Name('self', Param(), lineno=708, col_offset=23), Name('pattern', Param(), lineno=708, col_offset=29), Name('replacement', Param(), lineno=708, col_offset=38), Name('old', Param(), lineno=708, col_offset=51)], None, None, []), [Assign([Name('new', Store(), lineno=709, col_offset=8)], List([], Load(), lineno=709, col_offset=14), lineno=709, col_offset=8), For(Name('k', Store(), lineno=710, col_offset=12), Call(Name('range', Load(), lineno=710, col_offset=17), [Call(Name('len', Load(), lineno=710, col_offset=23), [Name('replacement', Load(), lineno=710, col_offset=27)], [], None, None, lineno=710, col_offset=23)], [], None, None, lineno=710, col_offset=17), [Assign([Name('item', Store(), lineno=711, col_offset=12)], Subscript(Name('replacement', Load(), lineno=711, col_offset=19), Index(Name('k', Load(), lineno=711, col_offset=31)), Load(), lineno=711, col_offset=19), lineno=711, col_offset=12), Assign([Name('newitem', Store(), lineno=712, col_offset=12)], List([Subscript(Name('item', Load(), lineno=712, col_offset=23), Index(Num(0, lineno=712, col_offset=28)), Load(), lineno=712, col_offset=23), Subscript(Name('item', Load(), lineno=712, col_offset=32), Index(Num(1, lineno=712, col_offset=37)), Load(), lineno=712, col_offset=32), Subscript(Name('item', Load(), lineno=712, col_offset=41), Index(Num(2, lineno=712, col_offset=46)), Load(), lineno=712, col_offset=41)], Load(), lineno=712, col_offset=22), lineno=712, col_offset=12), For(Name('i', Store(), lineno=713, col_offset=16), Call(Name('range', Load(), lineno=713, col_offset=21), [Num(3, lineno=713, col_offset=27)], [], None, None, lineno=713, col_offset=21), [If(Compare(Subscript(Name('item', Load(), lineno=714, col_offset=19), Index(Name('i', Load(), lineno=714, col_offset=24)), Load(), lineno=714, col_offset=19), [Eq()], [Str('*', lineno=714, col_offset=30)], lineno=714, col_offset=19), [Assign([Subscript(Name('newitem', Load(), lineno=715, col_offset=20), Index(Name('i', Load(), lineno=715, col_offset=28)), Store(), lineno=715, col_offset=20)], Subscript(Subscript(Name('old', Load(), lineno=715, col_offset=33), Index(Name('k', Load(), lineno=715, col_offset=37)), Load(), lineno=715, col_offset=33), Index(Name('i', Load(), lineno=715, col_offset=40)), Load(), lineno=715, col_offset=33), lineno=715, col_offset=20)], [If(Compare(Subscript(Subscript(Name('item', Load(), lineno=716, col_offset=21), Index(Name('i', Load(), lineno=716, col_offset=26)), Load(), lineno=716, col_offset=21), Slice(None, Num(1, lineno=716, col_offset=30), None), Load(), lineno=716, col_offset=21), [Eq()], [Str('$', lineno=716, col_offset=36)], lineno=716, col_offset=21), [Assign([Name('index', Store(), lineno=717, col_offset=20)], BinOp(Call(Name('int', Load(), lineno=717, col_offset=28), [Subscript(Subscript(Name('item', Load(), lineno=717, col_offset=32), Index(Name('i', Load(), lineno=717, col_offset=37)), Load(), lineno=717, col_offset=32), Slice(Num(1, lineno=717, col_offset=40), None, None), Load(), lineno=717, col_offset=32)], [], None, None, lineno=717, col_offset=28), Sub(), Num(1, lineno=717, col_offset=47), lineno=717, col_offset=28), lineno=717, col_offset=20), Assign([Subscript(Name('newitem', Load(), lineno=718, col_offset=20), Index(Name('i', Load(), lineno=718, col_offset=28)), Store(), lineno=718, col_offset=20)], Subscript(Subscript(Name('old', Load(), lineno=718, col_offset=33), Index(Name('index', Load(), lineno=718, col_offset=37)), Load(), lineno=718, col_offset=33), Index(Name('i', Load(), lineno=718, col_offset=44)), Load(), lineno=718, col_offset=33), lineno=718, col_offset=20)], [], lineno=716, col_offset=21)], lineno=714, col_offset=16)], [], lineno=713, col_offset=12), Expr(Call(Attribute(Name('new', Load(), lineno=719, col_offset=12), 'append', Load(), lineno=719, col_offset=12), [Call(Name('tuple', Load(), lineno=719, col_offset=23), [Name('newitem', Load(), lineno=719, col_offset=29)], [], None, None, lineno=719, col_offset=23)], [], None, None, lineno=719, col_offset=12), lineno=719, col_offset=12)], [], lineno=710, col_offset=8), Return(Name('new', Load(), lineno=722, col_offset=15), lineno=722, col_offset=8)], [], lineno=708, col_offset=4), FunctionDef('generate', arguments([Name('self', Param(), lineno=724, col_offset=17), Name('tp', Param(), lineno=724, col_offset=23), Name('name', Param(), lineno=724, col_offset=27), Name('arglist', Param(), lineno=724, col_offset=33), Name('modifiers', Param(), lineno=724, col_offset=42)], None, None, [List([], Load(), lineno=724, col_offset=52)]), [Expr(Call(Attribute(Name('self', Load(), lineno=726, col_offset=8), 'typeused', Load(), lineno=726, col_offset=8), [Name('tp', Load(), lineno=726, col_offset=22), Str('return', lineno=726, col_offset=26)], [], None, None, lineno=726, col_offset=8), lineno=726, col_offset=8), If(Name('modifiers', Load(), lineno=727, col_offset=11), [Assign([Tuple([Name('classname', Store(), lineno=728, col_offset=12), Name('listname', Store(), lineno=728, col_offset=23)], Store(), lineno=728, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=728, col_offset=34), 'destination', Load(), lineno=728, col_offset=34), [Name('tp', Load(), lineno=728, col_offset=51), Name('name', Load(), lineno=728, col_offset=55), Name('arglist', Load(), lineno=728, col_offset=61), Name('modifiers', Load(), lineno=728, col_offset=70)], [], None, None, lineno=728, col_offset=34), lineno=728, col_offset=12)], [Assign([Tuple([Name('classname', Store(), lineno=730, col_offset=12), Name('listname', Store(), lineno=730, col_offset=23)], Store(), lineno=730, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=730, col_offset=34), 'destination', Load(), lineno=730, col_offset=34), [Name('tp', Load(), lineno=730, col_offset=51), Name('name', Load(), lineno=730, col_offset=55), Name('arglist', Load(), lineno=730, col_offset=61)], [], None, None, lineno=730, col_offset=34), lineno=730, col_offset=12)], lineno=727, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('classname', Load(), lineno=731, col_offset=15), lineno=731, col_offset=11), UnaryOp(Not(), Name('listname', Load(), lineno=731, col_offset=32), lineno=731, col_offset=28)], lineno=731, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=732, col_offset=12), 'htmlreport', Load(), lineno=732, col_offset=12), [Str('*** no output generated: self.destination() returned None', lineno=732, col_offset=28)], [keyword('klass', Str('blacklisted', lineno=732, col_offset=95))], None, None, lineno=732, col_offset=12), lineno=732, col_offset=12), Return(None, lineno=733, col_offset=12)], [], lineno=731, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=734, col_offset=15), 'specfile', Load(), lineno=734, col_offset=15), lineno=734, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=735, col_offset=12), 'htmlreport', Load(), lineno=735, col_offset=12), [Str('*** no output generated: no output file specified', lineno=735, col_offset=28)], [keyword('klass', Str('blacklisted', lineno=735, col_offset=87))], None, None, lineno=735, col_offset=12), lineno=735, col_offset=12), Return(None, lineno=736, col_offset=12)], [], lineno=734, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=737, col_offset=8), 'specfile', Load(), lineno=737, col_offset=8), 'write', Load(), lineno=737, col_offset=8), [BinOp(Str('f = %s(%s, %r,\n', lineno=737, col_offset=28), Mod(), Tuple([Name('classname', Load(), lineno=737, col_offset=50), Name('tp', Load(), lineno=737, col_offset=61), Name('name', Load(), lineno=737, col_offset=65)], Load(), lineno=737, col_offset=50), lineno=737, col_offset=28)], [], None, None, lineno=737, col_offset=8), lineno=737, col_offset=8), For(Tuple([Name('atype', Store(), lineno=738, col_offset=12), Name('aname', Store(), lineno=738, col_offset=19), Name('amode', Store(), lineno=738, col_offset=26)], Store(), lineno=738, col_offset=12), Name('arglist', Load(), lineno=738, col_offset=35), [Expr(Call(Attribute(Name('self', Load(), lineno=739, col_offset=12), 'typeused', Load(), lineno=739, col_offset=12), [Name('atype', Load(), lineno=739, col_offset=26), Name('amode', Load(), lineno=739, col_offset=33)], [], None, None, lineno=739, col_offset=12), lineno=739, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=740, col_offset=12), 'specfile', Load(), lineno=740, col_offset=12), 'write', Load(), lineno=740, col_offset=12), [BinOp(Str('    (%s, %r, %s),\n', lineno=740, col_offset=32), Mod(), Tuple([Name('atype', Load(), lineno=741, col_offset=33), Name('aname', Load(), lineno=741, col_offset=40), Name('amode', Load(), lineno=741, col_offset=47)], Load(), lineno=741, col_offset=33), lineno=740, col_offset=32)], [], None, None, lineno=740, col_offset=12), lineno=740, col_offset=12)], [], lineno=738, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=742, col_offset=11), 'greydictnames', Load(), lineno=742, col_offset=11), 'has_key', Load(), lineno=742, col_offset=11), [Name('name', Load(), lineno=742, col_offset=38)], [], None, None, lineno=742, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=743, col_offset=12), 'specfile', Load(), lineno=743, col_offset=12), 'write', Load(), lineno=743, col_offset=12), [BinOp(Str('    condition=%r,\n', lineno=743, col_offset=32), Mod(), Tuple([Subscript(Attribute(Name('self', Load(), lineno=743, col_offset=55), 'greydictnames', Load(), lineno=743, col_offset=55), Index(Name('name', Load(), lineno=743, col_offset=74)), Load(), lineno=743, col_offset=55)], Load(), lineno=743, col_offset=55), lineno=743, col_offset=32)], [], None, None, lineno=743, col_offset=12), lineno=743, col_offset=12)], [], lineno=742, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=744, col_offset=8), 'generatemodifiers', Load(), lineno=744, col_offset=8), [Name('classname', Load(), lineno=744, col_offset=31), Name('name', Load(), lineno=744, col_offset=42), Name('modifiers', Load(), lineno=744, col_offset=48)], [], None, None, lineno=744, col_offset=8), lineno=744, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=745, col_offset=8), 'specfile', Load(), lineno=745, col_offset=8), 'write', Load(), lineno=745, col_offset=8), [Str(')\n', lineno=745, col_offset=28)], [], None, None, lineno=745, col_offset=8), lineno=745, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=746, col_offset=8), 'specfile', Load(), lineno=746, col_offset=8), 'write', Load(), lineno=746, col_offset=8), [BinOp(Str('%s.append(f)\n\n', lineno=746, col_offset=28), Mod(), Name('listname', Load(), lineno=746, col_offset=49), lineno=746, col_offset=28)], [], None, None, lineno=746, col_offset=8), lineno=746, col_offset=8), If(Attribute(Name('self', Load(), lineno=747, col_offset=11), 'htmlfile', Load(), lineno=747, col_offset=11), [Assign([Name('oline', Store(), lineno=748, col_offset=12)], BinOp(Str('Adding to %s:\n%s(returntype=%s, name=%r', lineno=748, col_offset=20), Mod(), Tuple([Name('listname', Load(), lineno=748, col_offset=66), Name('classname', Load(), lineno=748, col_offset=76), Name('tp', Load(), lineno=748, col_offset=87), Name('name', Load(), lineno=748, col_offset=91)], Load(), lineno=748, col_offset=66), lineno=748, col_offset=20), lineno=748, col_offset=12), For(Tuple([Name('atype', Store(), lineno=749, col_offset=16), Name('aname', Store(), lineno=749, col_offset=23), Name('amode', Store(), lineno=749, col_offset=30)], Store(), lineno=749, col_offset=16), Name('arglist', Load(), lineno=749, col_offset=39), [AugAssign(Name('oline', Store(), lineno=750, col_offset=16), Add(), BinOp(Str(',\n    (%s, %r, %s)', lineno=750, col_offset=25), Mod(), Tuple([Name('atype', Load(), lineno=750, col_offset=50), Name('aname', Load(), lineno=750, col_offset=57), Name('amode', Load(), lineno=750, col_offset=64)], Load(), lineno=750, col_offset=50), lineno=750, col_offset=25), lineno=750, col_offset=16)], [], lineno=749, col_offset=12), AugAssign(Name('oline', Store(), lineno=751, col_offset=12), Add(), Str(')\n', lineno=751, col_offset=21), lineno=751, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=752, col_offset=12), 'htmlreport', Load(), lineno=752, col_offset=12), [Name('oline', Load(), lineno=752, col_offset=28)], [keyword('klass', Str('pydeclaration', lineno=752, col_offset=41))], None, None, lineno=752, col_offset=12), lineno=752, col_offset=12)], [], lineno=747, col_offset=8)], [], lineno=724, col_offset=4), FunctionDef('destination', arguments([Name('self', Param(), lineno=754, col_offset=20), Name('type', Param(), lineno=754, col_offset=26), Name('name', Param(), lineno=754, col_offset=32), Name('arglist', Param(), lineno=754, col_offset=38)], None, None, []), [Return(Tuple([Str('FunctionGenerator', lineno=755, col_offset=15), Str('functions', lineno=755, col_offset=36)], Load(), lineno=755, col_offset=15), lineno=755, col_offset=8)], [], lineno=754, col_offset=4), FunctionDef('generatemodifiers', arguments([Name('self', Param(), lineno=757, col_offset=26), Name('classname', Param(), lineno=757, col_offset=32), Name('name', Param(), lineno=757, col_offset=43), Name('modifiers', Param(), lineno=757, col_offset=49)], None, None, []), [Pass( lineno=758, col_offset=8)], [], lineno=757, col_offset=4), FunctionDef('blacklisted', arguments([Name('self', Param(), lineno=760, col_offset=20), Name('type', Param(), lineno=760, col_offset=26), Name('name', Param(), lineno=760, col_offset=32)], None, None, []), [If(Compare(Name('type', Load(), lineno=761, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=761, col_offset=19), 'blacklisttypes', Load(), lineno=761, col_offset=19)], lineno=761, col_offset=11), [Return(Num(1, lineno=763, col_offset=19), lineno=763, col_offset=12)], [], lineno=761, col_offset=8), If(Compare(Name('name', Load(), lineno=764, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=764, col_offset=19), 'blacklistnames', Load(), lineno=764, col_offset=19)], lineno=764, col_offset=11), [Return(Num(1, lineno=766, col_offset=19), lineno=766, col_offset=12)], [], lineno=764, col_offset=8), Return(Num(0, lineno=767, col_offset=15), lineno=767, col_offset=8)], [], lineno=760, col_offset=4), FunctionDef('unmanageable', arguments([Name('self', Param(), lineno=769, col_offset=21), Name('type', Param(), lineno=769, col_offset=27), Name('name', Param(), lineno=769, col_offset=33), Name('arglist', Param(), lineno=769, col_offset=39)], None, None, []), [For(Tuple([Name('atype', Store(), lineno=770, col_offset=12), Name('aname', Store(), lineno=770, col_offset=19), Name('amode', Store(), lineno=770, col_offset=26)], Store(), lineno=770, col_offset=12), Name('arglist', Load(), lineno=770, col_offset=35), [If(Compare(Name('atype', Load(), lineno=771, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=771, col_offset=24), 'blacklisttypes', Load(), lineno=771, col_offset=24)], lineno=771, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=772, col_offset=16), 'report', Load(), lineno=772, col_offset=16), [Str('argument type %s is blacklisted', lineno=772, col_offset=28), Name('atype', Load(), lineno=772, col_offset=63)], [], None, None, lineno=772, col_offset=16), lineno=772, col_offset=16), Return(Num(1, lineno=773, col_offset=23), lineno=773, col_offset=16)], [], lineno=771, col_offset=12)], [], lineno=770, col_offset=8), Return(Num(0, lineno=774, col_offset=15), lineno=774, col_offset=8)], [], lineno=769, col_offset=4), FunctionDef('htmlreport', arguments([Name('self', Param(), lineno=776, col_offset=19), Name('line', Param(), lineno=776, col_offset=25), Name('klass', Param(), lineno=776, col_offset=31), Name('ranges', Param(), lineno=776, col_offset=43)], None, None, [Name('None', Load(), lineno=776, col_offset=37), Name('None', Load(), lineno=776, col_offset=50)]), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=777, col_offset=15), 'htmlfile', Load(), lineno=777, col_offset=15), lineno=777, col_offset=11), [Return(None, lineno=777, col_offset=30)], [], lineno=777, col_offset=8), If(Compare(Name('ranges', Load(), lineno=778, col_offset=11), [Is()], [Name('None', Load(), lineno=778, col_offset=21)], lineno=778, col_offset=11), [Assign([Name('ranges', Store(), lineno=779, col_offset=12)], List([], Load(), lineno=779, col_offset=21), lineno=779, col_offset=12)], [], lineno=778, col_offset=8), If(Name('klass', Load(), lineno=780, col_offset=11), [Expr(Call(Attribute(Name('ranges', Load(), lineno=781, col_offset=12), 'insert', Load(), lineno=781, col_offset=12), [Num(0, lineno=781, col_offset=26), Tuple([Num(0, lineno=781, col_offset=30), Call(Name('len', Load(), lineno=781, col_offset=33), [Name('line', Load(), lineno=781, col_offset=37)], [], None, None, lineno=781, col_offset=33), Name('klass', Load(), lineno=781, col_offset=44)], Load(), lineno=781, col_offset=30)], [], None, None, lineno=781, col_offset=12), lineno=781, col_offset=12)], [], lineno=780, col_offset=8), Assign([Name('oline', Store(), lineno=782, col_offset=8)], Str('', lineno=782, col_offset=16), lineno=782, col_offset=8), Assign([Name('i', Store(), lineno=783, col_offset=8)], Num(0, lineno=783, col_offset=12), lineno=783, col_offset=8), For(Name('c', Store(), lineno=784, col_offset=12), Name('line', Load(), lineno=784, col_offset=17), [For(Tuple([Name('b', Store(), lineno=785, col_offset=16), Name('e', Store(), lineno=785, col_offset=19), Name('name', Store(), lineno=785, col_offset=22)], Store(), lineno=785, col_offset=16), Name('ranges', Load(), lineno=785, col_offset=30), [If(Compare(Name('b', Load(), lineno=786, col_offset=19), [Eq()], [Name('i', Load(), lineno=786, col_offset=24)], lineno=786, col_offset=19), [AugAssign(Name('oline', Store(), lineno=787, col_offset=20), Add(), BinOp(Str('<span class="%s">', lineno=787, col_offset=29), Mod(), Name('name', Load(), lineno=787, col_offset=51), lineno=787, col_offset=29), lineno=787, col_offset=20)], [], lineno=786, col_offset=16), If(Compare(Name('e', Load(), lineno=788, col_offset=19), [Eq()], [Name('i', Load(), lineno=788, col_offset=24)], lineno=788, col_offset=19), [AugAssign(Name('oline', Store(), lineno=789, col_offset=20), Add(), Str('</span>', lineno=789, col_offset=29), lineno=789, col_offset=20)], [], lineno=788, col_offset=16)], [], lineno=785, col_offset=12), AugAssign(Name('i', Store(), lineno=790, col_offset=12), Add(), Num(1, lineno=790, col_offset=17), lineno=790, col_offset=12), If(Compare(Name('c', Load(), lineno=792, col_offset=15), [Eq()], [Str('<', lineno=792, col_offset=20)], lineno=792, col_offset=15), [AugAssign(Name('oline', Store(), lineno=792, col_offset=25), Add(), Str('&lt;', lineno=792, col_offset=34), lineno=792, col_offset=25)], [If(Compare(Name('c', Load(), lineno=793, col_offset=17), [Eq()], [Str('>', lineno=793, col_offset=22)], lineno=793, col_offset=17), [AugAssign(Name('oline', Store(), lineno=793, col_offset=27), Add(), Str('&gt;', lineno=793, col_offset=36), lineno=793, col_offset=27)], [AugAssign(Name('oline', Store(), lineno=794, col_offset=18), Add(), Name('c', Load(), lineno=794, col_offset=27), lineno=794, col_offset=18)], lineno=793, col_offset=17)], lineno=792, col_offset=12)], [], lineno=784, col_offset=8), For(Tuple([Name('b', Store(), lineno=795, col_offset=12), Name('e', Store(), lineno=795, col_offset=15), Name('name', Store(), lineno=795, col_offset=18)], Store(), lineno=795, col_offset=12), Name('ranges', Load(), lineno=795, col_offset=26), [If(Compare(Name('b', Load(), lineno=796, col_offset=15), [GtE()], [Name('i', Load(), lineno=796, col_offset=20)], lineno=796, col_offset=15), [AugAssign(Name('oline', Store(), lineno=797, col_offset=16), Add(), BinOp(Str('<span class="%s">', lineno=797, col_offset=25), Mod(), Name('name', Load(), lineno=797, col_offset=47), lineno=797, col_offset=25), lineno=797, col_offset=16)], [], lineno=796, col_offset=12), If(Compare(Name('e', Load(), lineno=798, col_offset=15), [GtE()], [Name('i', Load(), lineno=798, col_offset=20)], lineno=798, col_offset=15), [AugAssign(Name('oline', Store(), lineno=799, col_offset=16), Add(), Str('</span>', lineno=799, col_offset=25), lineno=799, col_offset=16)], [], lineno=798, col_offset=12)], [], lineno=795, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('line', Load(), lineno=800, col_offset=15), lineno=800, col_offset=11), Compare(Subscript(Name('line', Load(), lineno=800, col_offset=23), Index(Num(-1, lineno=800, col_offset=29)), Load(), lineno=800, col_offset=23), [NotEq()], [Str('\n', lineno=800, col_offset=35)], lineno=800, col_offset=23)], lineno=800, col_offset=11), [AugAssign(Name('oline', Store(), lineno=801, col_offset=12), Add(), Str('\n', lineno=801, col_offset=21), lineno=801, col_offset=12)], [], lineno=800, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=802, col_offset=8), 'htmlfile', Load(), lineno=802, col_offset=8), 'write', Load(), lineno=802, col_offset=8), [Name('oline', Load(), lineno=802, col_offset=28)], [], None, None, lineno=802, col_offset=8), lineno=802, col_offset=8)], [], lineno=776, col_offset=4)], [], lineno=105, col_offset=0), ClassDef('Scanner_PreUH3', [Name('Scanner', Load(), lineno=804, col_offset=21)], [Expr(Str('Scanner for Universal Headers before release 3', lineno=805, col_offset=4), lineno=805, col_offset=4), FunctionDef('initpatterns', arguments([Name('self', Param(), lineno=806, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('Scanner', Load(), lineno=807, col_offset=8), 'initpatterns', Load(), lineno=807, col_offset=8), [Name('self', Load(), lineno=807, col_offset=29)], [], None, None, lineno=807, col_offset=8), lineno=807, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=808, col_offset=8), 'head_pat', Store(), lineno=808, col_offset=8)], Str('^extern pascal[ \t]+', lineno=808, col_offset=24), lineno=808, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=809, col_offset=8), 'type_pat', Store(), lineno=809, col_offset=8)], Str('pascal[ \t\n]+(?P<type>[a-zA-Z0-9_ \t]*[a-zA-Z0-9_])[ \t\n]+', lineno=809, col_offset=24), lineno=809, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=810, col_offset=8), 'whole_pat', Store(), lineno=810, col_offset=8)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=810, col_offset=25), 'type_pat', Load(), lineno=810, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=810, col_offset=41), 'name_pat', Load(), lineno=810, col_offset=41), lineno=810, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=810, col_offset=57), 'args_pat', Load(), lineno=810, col_offset=57), lineno=810, col_offset=55), lineno=810, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=811, col_offset=8), 'sym_pat', Store(), lineno=811, col_offset=8)], BinOp(Str('^[ \t]*(?P<name>[a-zA-Z0-9_]+)[ \t]*=', lineno=811, col_offset=23), Add(), Str('[ \t]*(?P<defn>[-0-9\'"][^\t\n,;}]*),?', lineno=812, col_offset=23), lineno=811, col_offset=23), lineno=811, col_offset=8)], [], lineno=806, col_offset=4)], [], lineno=804, col_offset=0), ClassDef('Scanner_OSX', [Name('Scanner', Load(), lineno=814, col_offset=18)], [Expr(Str('Scanner for modern (post UH3.3) Universal Headers ', lineno=815, col_offset=4), lineno=815, col_offset=4), FunctionDef('initpatterns', arguments([Name('self', Param(), lineno=816, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('Scanner', Load(), lineno=817, col_offset=8), 'initpatterns', Load(), lineno=817, col_offset=8), [Name('self', Load(), lineno=817, col_offset=29)], [], None, None, lineno=817, col_offset=8), lineno=817, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=818, col_offset=8), 'head_pat', Store(), lineno=818, col_offset=8)], Str('^EXTERN_API(_C)?', lineno=818, col_offset=24), lineno=818, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=819, col_offset=8), 'type_pat', Store(), lineno=819, col_offset=8)], BinOp(BinOp(BinOp(Str('EXTERN_API(_C)?', lineno=819, col_offset=24), Add(), Str('[ \t\n]*\\([ \t\n]*', lineno=820, col_offset=24), lineno=819, col_offset=24), Add(), Str('(?P<type>[a-zA-Z0-9_* \t]*[a-zA-Z0-9_*])', lineno=821, col_offset=24), lineno=820, col_offset=45), Add(), Str('[ \t\n]*\\)[ \t\n]*', lineno=822, col_offset=24), lineno=821, col_offset=67), lineno=819, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=823, col_offset=8), 'whole_pat', Store(), lineno=823, col_offset=8)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=823, col_offset=25), 'type_pat', Load(), lineno=823, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=823, col_offset=41), 'name_pat', Load(), lineno=823, col_offset=41), lineno=823, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=823, col_offset=57), 'args_pat', Load(), lineno=823, col_offset=57), lineno=823, col_offset=55), lineno=823, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=824, col_offset=8), 'sym_pat', Store(), lineno=824, col_offset=8)], BinOp(Str('^[ \t]*(?P<name>[a-zA-Z0-9_]+)[ \t]*=', lineno=824, col_offset=23), Add(), Str('[ \t]*(?P<defn>[-0-9_a-zA-Z\'"\\(][^\t\n,;}]*),?', lineno=825, col_offset=23), lineno=824, col_offset=23), lineno=824, col_offset=8)], [], lineno=816, col_offset=4)], [], lineno=814, col_offset=0), Assign([Name('_8bit', Store(), lineno=827, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=827, col_offset=8), 'compile', Load(), lineno=827, col_offset=8), [Str('[\\200-\\377]', lineno=827, col_offset=19)], [], None, None, lineno=827, col_offset=8), lineno=827, col_offset=0), FunctionDef('escape8bit', arguments([Name('s', Param(), lineno=829, col_offset=15)], None, None, []), [If(Compare(Call(Attribute(Name('_8bit', Load(), lineno=830, col_offset=7), 'search', Load(), lineno=830, col_offset=7), [Name('s', Load(), lineno=830, col_offset=20)], [], None, None, lineno=830, col_offset=7), [IsNot()], [Name('None', Load(), lineno=830, col_offset=30)], lineno=830, col_offset=7), [Assign([Name('out', Store(), lineno=831, col_offset=8)], List([], Load(), lineno=831, col_offset=14), lineno=831, col_offset=8), For(Name('c', Store(), lineno=832, col_offset=12), Name('s', Load(), lineno=832, col_offset=17), [Assign([Name('o', Store(), lineno=833, col_offset=12)], Call(Name('ord', Load(), lineno=833, col_offset=16), [Name('c', Load(), lineno=833, col_offset=20)], [], None, None, lineno=833, col_offset=16), lineno=833, col_offset=12), If(Compare(Name('o', Load(), lineno=834, col_offset=15), [GtE()], [Num(128, lineno=834, col_offset=20)], lineno=834, col_offset=15), [Expr(Call(Attribute(Name('out', Load(), lineno=835, col_offset=16), 'append', Load(), lineno=835, col_offset=16), [BinOp(Str('\\', lineno=835, col_offset=27), Add(), Subscript(Call(Name('hex', Load(), lineno=835, col_offset=34), [Name('o', Load(), lineno=835, col_offset=38)], [], None, None, lineno=835, col_offset=34), Slice(Num(1, lineno=835, col_offset=41), None, None), Load(), lineno=835, col_offset=34), lineno=835, col_offset=27)], [], None, None, lineno=835, col_offset=16), lineno=835, col_offset=16)], [Expr(Call(Attribute(Name('out', Load(), lineno=837, col_offset=16), 'append', Load(), lineno=837, col_offset=16), [Name('c', Load(), lineno=837, col_offset=27)], [], None, None, lineno=837, col_offset=16), lineno=837, col_offset=16)], lineno=834, col_offset=12)], [], lineno=832, col_offset=8), Assign([Name('s', Store(), lineno=838, col_offset=8)], Call(Attribute(Str('', lineno=838, col_offset=12), 'join', Load(), lineno=838, col_offset=12), [Name('out', Load(), lineno=838, col_offset=20)], [], None, None, lineno=838, col_offset=12), lineno=838, col_offset=8)], [], lineno=830, col_offset=4), Return(Name('s', Load(), lineno=839, col_offset=11), lineno=839, col_offset=4)], [], lineno=829, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=842, col_offset=4)], Str('D:Development:THINK C:Mac #includes:Apple #includes:AppleEvents.h', lineno=842, col_offset=12), lineno=842, col_offset=4), Assign([Name('output', Store(), lineno=843, col_offset=4)], Str('@aespecs.py', lineno=843, col_offset=13), lineno=843, col_offset=4), Assign([Name('defsoutput', Store(), lineno=844, col_offset=4)], Str('@aedefs.py', lineno=844, col_offset=17), lineno=844, col_offset=4), Assign([Name('s', Store(), lineno=845, col_offset=4)], Call(Name('Scanner', Load(), lineno=845, col_offset=8), [Name('input', Load(), lineno=845, col_offset=16), Name('output', Load(), lineno=845, col_offset=23), Name('defsoutput', Load(), lineno=845, col_offset=31)], [], None, None, lineno=845, col_offset=8), lineno=845, col_offset=4), Expr(Call(Attribute(Name('s', Load(), lineno=846, col_offset=4), 'scan', Load(), lineno=846, col_offset=4), [], [], None, None, lineno=846, col_offset=4), lineno=846, col_offset=4)], [], lineno=841, col_offset=0), If(Compare(Name('__name__', Load(), lineno=848, col_offset=3), [Eq()], [Str('__main__', lineno=848, col_offset=15)], lineno=848, col_offset=3), [Expr(Call(Name('test', Load(), lineno=849, col_offset=4), [], [], None, None, lineno=849, col_offset=4), lineno=849, col_offset=4)], [], lineno=848, col_offset=0)])
