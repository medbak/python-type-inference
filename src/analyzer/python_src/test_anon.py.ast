Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=2, col_offset=0), ClassDef('AnonTest', [Attribute(Name('unittest', Load(), lineno=4, col_offset=15), 'TestCase', Load(), lineno=4, col_offset=15)], [FunctionDef('test_anon', arguments([Name('self', Param(), lineno=6, col_offset=18)], None, None, []), [ClassDef('ANON', [Name('Union', Load(), lineno=7, col_offset=19)], [Assign([Name('_fields_', Store(), lineno=8, col_offset=12)], List([Tuple([Str('a', lineno=8, col_offset=25), Name('c_int', Load(), lineno=8, col_offset=30)], Load(), lineno=8, col_offset=25), Tuple([Str('b', lineno=9, col_offset=25), Name('c_int', Load(), lineno=9, col_offset=30)], Load(), lineno=9, col_offset=25)], Load(), lineno=8, col_offset=23), lineno=8, col_offset=12)], [], lineno=7, col_offset=8), ClassDef('Y', [Name('Structure', Load(), lineno=11, col_offset=16)], [Assign([Name('_fields_', Store(), lineno=12, col_offset=12)], List([Tuple([Str('x', lineno=12, col_offset=25), Name('c_int', Load(), lineno=12, col_offset=30)], Load(), lineno=12, col_offset=25), Tuple([Str('_', lineno=13, col_offset=25), Name('ANON', Load(), lineno=13, col_offset=30)], Load(), lineno=13, col_offset=25), Tuple([Str('y', lineno=14, col_offset=25), Name('c_int', Load(), lineno=14, col_offset=30)], Load(), lineno=14, col_offset=25)], Load(), lineno=12, col_offset=23), lineno=12, col_offset=12), Assign([Name('_anonymous_', Store(), lineno=15, col_offset=12)], List([Str('_', lineno=15, col_offset=27)], Load(), lineno=15, col_offset=26), lineno=15, col_offset=12)], [], lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=17, col_offset=25), 'a', Load(), lineno=17, col_offset=25), 'offset', Load(), lineno=17, col_offset=25), Call(Name('sizeof', Load(), lineno=17, col_offset=37), [Name('c_int', Load(), lineno=17, col_offset=44)], [], None, None, lineno=17, col_offset=37)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertEqual', Load(), lineno=18, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=18, col_offset=25), 'b', Load(), lineno=18, col_offset=25), 'offset', Load(), lineno=18, col_offset=25), Call(Name('sizeof', Load(), lineno=18, col_offset=37), [Name('c_int', Load(), lineno=18, col_offset=44)], [], None, None, lineno=18, col_offset=37)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Attribute(Attribute(Name('ANON', Load(), lineno=20, col_offset=25), 'a', Load(), lineno=20, col_offset=25), 'offset', Load(), lineno=20, col_offset=25), Num(0, lineno=20, col_offset=40)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertEqual', Load(), lineno=21, col_offset=8), [Attribute(Attribute(Name('ANON', Load(), lineno=21, col_offset=25), 'b', Load(), lineno=21, col_offset=25), 'offset', Load(), lineno=21, col_offset=25), Num(0, lineno=21, col_offset=40)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=6, col_offset=4), FunctionDef('test_anon_nonseq', arguments([Name('self', Param(), lineno=23, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertRaises', Load(), lineno=25, col_offset=8), [Name('TypeError', Load(), lineno=25, col_offset=26), Lambda(arguments([], None, None, []), Call(Call(Name('type', Load(), lineno=26, col_offset=38), [Name('Structure', Load(), lineno=26, col_offset=43)], [], None, None, lineno=26, col_offset=38), [Str('Name', lineno=26, col_offset=54), Tuple([Name('Structure', Load(), lineno=27, col_offset=55)], Load(), lineno=27, col_offset=55), Dict([Str('_fields_', lineno=28, col_offset=55), Str('_anonymous_', lineno=28, col_offset=71)], [List([], Load(), lineno=28, col_offset=67), Num(42, lineno=28, col_offset=86)], lineno=28, col_offset=54)], [], None, None, lineno=26, col_offset=38), lineno=26, col_offset=30)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8)], [], lineno=23, col_offset=4), FunctionDef('test_anon_nonmember', arguments([Name('self', Param(), lineno=30, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertRaises', Load(), lineno=32, col_offset=8), [Name('AttributeError', Load(), lineno=32, col_offset=26), Lambda(arguments([], None, None, []), Call(Call(Name('type', Load(), lineno=33, col_offset=38), [Name('Structure', Load(), lineno=33, col_offset=43)], [], None, None, lineno=33, col_offset=38), [Str('Name', lineno=33, col_offset=54), Tuple([Name('Structure', Load(), lineno=34, col_offset=55)], Load(), lineno=34, col_offset=55), Dict([Str('_fields_', lineno=35, col_offset=55), Str('_anonymous_', lineno=36, col_offset=55)], [List([], Load(), lineno=35, col_offset=67), List([Str('x', lineno=36, col_offset=71)], Load(), lineno=36, col_offset=70)], lineno=35, col_offset=54)], [], None, None, lineno=33, col_offset=38), lineno=33, col_offset=30)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('test_nested', arguments([Name('self', Param(), lineno=38, col_offset=20)], None, None, []), [ClassDef('ANON_S', [Name('Structure', Load(), lineno=39, col_offset=21)], [Assign([Name('_fields_', Store(), lineno=40, col_offset=12)], List([Tuple([Str('a', lineno=40, col_offset=25), Name('c_int', Load(), lineno=40, col_offset=30)], Load(), lineno=40, col_offset=25)], Load(), lineno=40, col_offset=23), lineno=40, col_offset=12)], [], lineno=39, col_offset=8), ClassDef('ANON_U', [Name('Union', Load(), lineno=42, col_offset=21)], [Assign([Name('_fields_', Store(), lineno=43, col_offset=12)], List([Tuple([Str('_', lineno=43, col_offset=25), Name('ANON_S', Load(), lineno=43, col_offset=30)], Load(), lineno=43, col_offset=25), Tuple([Str('b', lineno=44, col_offset=25), Name('c_int', Load(), lineno=44, col_offset=30)], Load(), lineno=44, col_offset=25)], Load(), lineno=43, col_offset=23), lineno=43, col_offset=12), Assign([Name('_anonymous_', Store(), lineno=45, col_offset=12)], List([Str('_', lineno=45, col_offset=27)], Load(), lineno=45, col_offset=26), lineno=45, col_offset=12)], [], lineno=42, col_offset=8), ClassDef('Y', [Name('Structure', Load(), lineno=47, col_offset=16)], [Assign([Name('_fields_', Store(), lineno=48, col_offset=12)], List([Tuple([Str('x', lineno=48, col_offset=25), Name('c_int', Load(), lineno=48, col_offset=30)], Load(), lineno=48, col_offset=25), Tuple([Str('_', lineno=49, col_offset=25), Name('ANON_U', Load(), lineno=49, col_offset=30)], Load(), lineno=49, col_offset=25), Tuple([Str('y', lineno=50, col_offset=25), Name('c_int', Load(), lineno=50, col_offset=30)], Load(), lineno=50, col_offset=25)], Load(), lineno=48, col_offset=23), lineno=48, col_offset=12), Assign([Name('_anonymous_', Store(), lineno=51, col_offset=12)], List([Str('_', lineno=51, col_offset=27)], Load(), lineno=51, col_offset=26), lineno=51, col_offset=12)], [], lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=53, col_offset=25), 'x', Load(), lineno=53, col_offset=25), 'offset', Load(), lineno=53, col_offset=25), Num(0, lineno=53, col_offset=37)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=8), 'assertEqual', Load(), lineno=54, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=54, col_offset=25), 'a', Load(), lineno=54, col_offset=25), 'offset', Load(), lineno=54, col_offset=25), Call(Name('sizeof', Load(), lineno=54, col_offset=37), [Name('c_int', Load(), lineno=54, col_offset=44)], [], None, None, lineno=54, col_offset=37)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertEqual', Load(), lineno=55, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=55, col_offset=25), 'b', Load(), lineno=55, col_offset=25), 'offset', Load(), lineno=55, col_offset=25), Call(Name('sizeof', Load(), lineno=55, col_offset=37), [Name('c_int', Load(), lineno=55, col_offset=44)], [], None, None, lineno=55, col_offset=37)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertEqual', Load(), lineno=56, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=56, col_offset=25), '_', Load(), lineno=56, col_offset=25), 'offset', Load(), lineno=56, col_offset=25), Call(Name('sizeof', Load(), lineno=56, col_offset=37), [Name('c_int', Load(), lineno=56, col_offset=44)], [], None, None, lineno=56, col_offset=37)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertEqual', Load(), lineno=57, col_offset=8), [Attribute(Attribute(Name('Y', Load(), lineno=57, col_offset=25), 'y', Load(), lineno=57, col_offset=25), 'offset', Load(), lineno=57, col_offset=25), BinOp(Call(Name('sizeof', Load(), lineno=57, col_offset=37), [Name('c_int', Load(), lineno=57, col_offset=44)], [], None, None, lineno=57, col_offset=37), Mult(), Num(2, lineno=57, col_offset=53), lineno=57, col_offset=37)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=38, col_offset=4)], [], lineno=4, col_offset=0), If(Compare(Name('__name__', Load(), lineno=59, col_offset=3), [Eq()], [Str('__main__', lineno=59, col_offset=15)], lineno=59, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=60, col_offset=4), 'main', Load(), lineno=60, col_offset=4), [], [], None, None, lineno=60, col_offset=4), lineno=60, col_offset=4)], [], lineno=59, col_offset=0)])
