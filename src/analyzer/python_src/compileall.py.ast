Module([Expr(Str('Module/script to "compile" all .py files to .pyc (or .pyo) file.\n\nWhen called as a script with arguments, this compiles the directories\ngiven as arguments recursively; the -l option prevents it from\nrecursing into directories.\n\nWithout arguments, if compiles all modules on sys.path, without\nrecursing into subdirectories.  (Even though it should do so for\npackages -- for now, you\'ll have to deal with packages separately.)\n\nSee module py_compile for details of the actual byte-compilation.\n\n', lineno=13, col_offset=-1), lineno=13, col_offset=-1), Import([alias('os', None)], lineno=14, col_offset=0), Import([alias('sys', None)], lineno=15, col_offset=0), Import([alias('py_compile', None)], lineno=16, col_offset=0), Import([alias('struct', None)], lineno=17, col_offset=0), Import([alias('imp', None)], lineno=18, col_offset=0), Assign([Name('__all__', Store(), lineno=20, col_offset=0)], List([Str('compile_dir', lineno=20, col_offset=11), Str('compile_file', lineno=20, col_offset=25), Str('compile_path', lineno=20, col_offset=40)], Load(), lineno=20, col_offset=10), lineno=20, col_offset=0), FunctionDef('compile_dir', arguments([Name('dir', Param(), lineno=22, col_offset=16), Name('maxlevels', Param(), lineno=22, col_offset=21), Name('ddir', Param(), lineno=22, col_offset=35), Name('force', Param(), lineno=23, col_offset=16), Name('rx', Param(), lineno=23, col_offset=25), Name('quiet', Param(), lineno=23, col_offset=34)], None, None, [Num(10, lineno=22, col_offset=31), Name('None', Load(), lineno=22, col_offset=40), Num(0, lineno=23, col_offset=22), Name('None', Load(), lineno=23, col_offset=28), Num(0, lineno=23, col_offset=40)]), [Expr(Str('Byte-compile all modules in the given directory tree.\n\n    Arguments (only dir is required):\n\n    dir:       the directory to byte-compile\n    maxlevels: maximum recursion level (default 10)\n    ddir:      if given, purported directory name (this is the\n               directory name that will show up in error messages)\n    force:     if 1, force compilation, even if timestamps are up-to-date\n    quiet:     if 1, be quiet during compilation\n\n    ', lineno=35, col_offset=-1), lineno=35, col_offset=-1), If(UnaryOp(Not(), Name('quiet', Load(), lineno=36, col_offset=11), lineno=36, col_offset=7), [Print(None, [Str('Listing', lineno=37, col_offset=14), Name('dir', Load(), lineno=37, col_offset=25), Str('...', lineno=37, col_offset=30)], True, lineno=37, col_offset=8)], [], lineno=36, col_offset=4), TryExcept([Assign([Name('names', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=39, col_offset=16), 'listdir', Load(), lineno=39, col_offset=16), [Name('dir', Load(), lineno=39, col_offset=27)], [], None, None, lineno=39, col_offset=16), lineno=39, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=40, col_offset=11), 'error', Load(), lineno=40, col_offset=11), None, [Print(None, [Str("Can't list", lineno=41, col_offset=14), Name('dir', Load(), lineno=41, col_offset=28)], True, lineno=41, col_offset=8), Assign([Name('names', Store(), lineno=42, col_offset=8)], List([], Load(), lineno=42, col_offset=16), lineno=42, col_offset=8)], lineno=40, col_offset=4)], [], lineno=38, col_offset=4), Expr(Call(Attribute(Name('names', Load(), lineno=43, col_offset=4), 'sort', Load(), lineno=43, col_offset=4), [], [], None, None, lineno=43, col_offset=4), lineno=43, col_offset=4), Assign([Name('success', Store(), lineno=44, col_offset=4)], Num(1, lineno=44, col_offset=14), lineno=44, col_offset=4), For(Name('name', Store(), lineno=45, col_offset=8), Name('names', Load(), lineno=45, col_offset=16), [Assign([Name('fullname', Store(), lineno=46, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=46, col_offset=19), 'path', Load(), lineno=46, col_offset=19), 'join', Load(), lineno=46, col_offset=19), [Name('dir', Load(), lineno=46, col_offset=32), Name('name', Load(), lineno=46, col_offset=37)], [], None, None, lineno=46, col_offset=19), lineno=46, col_offset=8), If(Compare(Name('ddir', Load(), lineno=47, col_offset=11), [IsNot()], [Name('None', Load(), lineno=47, col_offset=23)], lineno=47, col_offset=11), [Assign([Name('dfile', Store(), lineno=48, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=48, col_offset=20), 'path', Load(), lineno=48, col_offset=20), 'join', Load(), lineno=48, col_offset=20), [Name('ddir', Load(), lineno=48, col_offset=33), Name('name', Load(), lineno=48, col_offset=39)], [], None, None, lineno=48, col_offset=20), lineno=48, col_offset=12)], [Assign([Name('dfile', Store(), lineno=50, col_offset=12)], Name('None', Load(), lineno=50, col_offset=20), lineno=50, col_offset=12)], lineno=47, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=51, col_offset=15), 'path', Load(), lineno=51, col_offset=15), 'isdir', Load(), lineno=51, col_offset=15), [Name('fullname', Load(), lineno=51, col_offset=29)], [], None, None, lineno=51, col_offset=15), lineno=51, col_offset=11), [If(UnaryOp(Not(), Call(Name('compile_file', Load(), lineno=52, col_offset=19), [Name('fullname', Load(), lineno=52, col_offset=32), Name('ddir', Load(), lineno=52, col_offset=42), Name('force', Load(), lineno=52, col_offset=48), Name('rx', Load(), lineno=52, col_offset=55), Name('quiet', Load(), lineno=52, col_offset=59)], [], None, None, lineno=52, col_offset=19), lineno=52, col_offset=15), [Assign([Name('success', Store(), lineno=53, col_offset=16)], Num(0, lineno=53, col_offset=26), lineno=53, col_offset=16)], [], lineno=52, col_offset=12)], [If(BoolOp(And(), [Compare(Name('maxlevels', Load(), lineno=54, col_offset=13), [Gt()], [Num(0, lineno=54, col_offset=25)], lineno=54, col_offset=13), Compare(Name('name', Load(), lineno=55, col_offset=13), [NotEq()], [Attribute(Name('os', Load(), lineno=55, col_offset=21), 'curdir', Load(), lineno=55, col_offset=21)], lineno=55, col_offset=13), Compare(Name('name', Load(), lineno=55, col_offset=35), [NotEq()], [Attribute(Name('os', Load(), lineno=55, col_offset=43), 'pardir', Load(), lineno=55, col_offset=43)], lineno=55, col_offset=35), Call(Attribute(Attribute(Name('os', Load(), lineno=56, col_offset=13), 'path', Load(), lineno=56, col_offset=13), 'isdir', Load(), lineno=56, col_offset=13), [Name('fullname', Load(), lineno=56, col_offset=27)], [], None, None, lineno=56, col_offset=13), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=57, col_offset=17), 'path', Load(), lineno=57, col_offset=17), 'islink', Load(), lineno=57, col_offset=17), [Name('fullname', Load(), lineno=57, col_offset=32)], [], None, None, lineno=57, col_offset=17), lineno=57, col_offset=13)], lineno=54, col_offset=13), [If(UnaryOp(Not(), Call(Name('compile_dir', Load(), lineno=58, col_offset=19), [Name('fullname', Load(), lineno=58, col_offset=31), BinOp(Name('maxlevels', Load(), lineno=58, col_offset=41), Sub(), Num(1, lineno=58, col_offset=53), lineno=58, col_offset=41), Name('dfile', Load(), lineno=58, col_offset=56), Name('force', Load(), lineno=58, col_offset=63), Name('rx', Load(), lineno=58, col_offset=70), Name('quiet', Load(), lineno=59, col_offset=31)], [], None, None, lineno=58, col_offset=19), lineno=58, col_offset=15), [Assign([Name('success', Store(), lineno=60, col_offset=16)], Num(0, lineno=60, col_offset=26), lineno=60, col_offset=16)], [], lineno=58, col_offset=12)], [], lineno=54, col_offset=13)], lineno=51, col_offset=8)], [], lineno=45, col_offset=4), Return(Name('success', Load(), lineno=61, col_offset=11), lineno=61, col_offset=4)], [], lineno=22, col_offset=0), FunctionDef('compile_file', arguments([Name('fullname', Param(), lineno=63, col_offset=17), Name('ddir', Param(), lineno=63, col_offset=27), Name('force', Param(), lineno=63, col_offset=38), Name('rx', Param(), lineno=63, col_offset=47), Name('quiet', Param(), lineno=63, col_offset=56)], None, None, [Name('None', Load(), lineno=63, col_offset=32), Num(0, lineno=63, col_offset=44), Name('None', Load(), lineno=63, col_offset=50), Num(0, lineno=63, col_offset=62)]), [Expr(Str('Byte-compile file.\n    file:      the file to byte-compile\n    ddir:      if given, purported directory name (this is the\n               directory name that will show up in error messages)\n    force:     if 1, force compilation, even if timestamps are up-to-date\n    quiet:     if 1, be quiet during compilation\n\n    ', lineno=71, col_offset=-1), lineno=71, col_offset=-1), Assign([Name('success', Store(), lineno=73, col_offset=4)], Num(1, lineno=73, col_offset=14), lineno=73, col_offset=4), Assign([Name('name', Store(), lineno=74, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=74, col_offset=11), 'path', Load(), lineno=74, col_offset=11), 'basename', Load(), lineno=74, col_offset=11), [Name('fullname', Load(), lineno=74, col_offset=28)], [], None, None, lineno=74, col_offset=11), lineno=74, col_offset=4), If(Compare(Name('ddir', Load(), lineno=75, col_offset=7), [IsNot()], [Name('None', Load(), lineno=75, col_offset=19)], lineno=75, col_offset=7), [Assign([Name('dfile', Store(), lineno=76, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=76, col_offset=16), 'path', Load(), lineno=76, col_offset=16), 'join', Load(), lineno=76, col_offset=16), [Name('ddir', Load(), lineno=76, col_offset=29), Name('name', Load(), lineno=76, col_offset=35)], [], None, None, lineno=76, col_offset=16), lineno=76, col_offset=8)], [Assign([Name('dfile', Store(), lineno=78, col_offset=8)], Name('None', Load(), lineno=78, col_offset=16), lineno=78, col_offset=8)], lineno=75, col_offset=4), If(Compare(Name('rx', Load(), lineno=79, col_offset=7), [IsNot()], [Name('None', Load(), lineno=79, col_offset=17)], lineno=79, col_offset=7), [Assign([Name('mo', Store(), lineno=80, col_offset=8)], Call(Attribute(Name('rx', Load(), lineno=80, col_offset=13), 'search', Load(), lineno=80, col_offset=13), [Name('fullname', Load(), lineno=80, col_offset=23)], [], None, None, lineno=80, col_offset=13), lineno=80, col_offset=8), If(Name('mo', Load(), lineno=81, col_offset=11), [Return(Name('success', Load(), lineno=82, col_offset=19), lineno=82, col_offset=12)], [], lineno=81, col_offset=8)], [], lineno=79, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=83, col_offset=7), 'path', Load(), lineno=83, col_offset=7), 'isfile', Load(), lineno=83, col_offset=7), [Name('fullname', Load(), lineno=83, col_offset=22)], [], None, None, lineno=83, col_offset=7), [Assign([Tuple([Name('head', Store(), lineno=84, col_offset=8), Name('tail', Store(), lineno=84, col_offset=14)], Store(), lineno=84, col_offset=8)], Tuple([Subscript(Name('name', Load(), lineno=84, col_offset=21), Slice(None, Num(-3, lineno=84, col_offset=28), None), Load(), lineno=84, col_offset=21), Subscript(Name('name', Load(), lineno=84, col_offset=32), Slice(Num(-3, lineno=84, col_offset=38), None, None), Load(), lineno=84, col_offset=32)], Load(), lineno=84, col_offset=21), lineno=84, col_offset=8), If(Compare(Name('tail', Load(), lineno=85, col_offset=11), [Eq()], [Str('.py', lineno=85, col_offset=19)], lineno=85, col_offset=11), [If(UnaryOp(Not(), Name('force', Load(), lineno=86, col_offset=19), lineno=86, col_offset=15), [TryExcept([Assign([Name('mtime', Store(), lineno=88, col_offset=20)], Call(Name('int', Load(), lineno=88, col_offset=28), [Attribute(Call(Attribute(Name('os', Load(), lineno=88, col_offset=32), 'stat', Load(), lineno=88, col_offset=32), [Name('fullname', Load(), lineno=88, col_offset=40)], [], None, None, lineno=88, col_offset=32), 'st_mtime', Load(), lineno=88, col_offset=32)], [], None, None, lineno=88, col_offset=28), lineno=88, col_offset=20), Assign([Name('expect', Store(), lineno=89, col_offset=20)], Call(Attribute(Name('struct', Load(), lineno=89, col_offset=29), 'pack', Load(), lineno=89, col_offset=29), [Str('<4sl', lineno=89, col_offset=41), Call(Attribute(Name('imp', Load(), lineno=89, col_offset=49), 'get_magic', Load(), lineno=89, col_offset=49), [], [], None, None, lineno=89, col_offset=49), Name('mtime', Load(), lineno=89, col_offset=66)], [], None, None, lineno=89, col_offset=29), lineno=89, col_offset=20), Assign([Name('cfile', Store(), lineno=90, col_offset=20)], BinOp(Name('fullname', Load(), lineno=90, col_offset=28), Add(), BoolOp(Or(), [BoolOp(And(), [Name('__debug__', Load(), lineno=90, col_offset=40), Str('c', lineno=90, col_offset=54)], lineno=90, col_offset=40), Str('o', lineno=90, col_offset=61)], lineno=90, col_offset=40), lineno=90, col_offset=28), lineno=90, col_offset=20), With(Call(Name('open', Load(), lineno=91, col_offset=25), [Name('cfile', Load(), lineno=91, col_offset=30), Str('rb', lineno=91, col_offset=37)], [], None, None, lineno=91, col_offset=25), Name('chandle', Store(), lineno=91, col_offset=46), [Assign([Name('actual', Store(), lineno=92, col_offset=24)], Call(Attribute(Name('chandle', Load(), lineno=92, col_offset=33), 'read', Load(), lineno=92, col_offset=33), [Num(8, lineno=92, col_offset=46)], [], None, None, lineno=92, col_offset=33), lineno=92, col_offset=24)], lineno=91, col_offset=25), If(Compare(Name('expect', Load(), lineno=93, col_offset=23), [Eq()], [Name('actual', Load(), lineno=93, col_offset=33)], lineno=93, col_offset=23), [Return(Name('success', Load(), lineno=94, col_offset=31), lineno=94, col_offset=24)], [], lineno=93, col_offset=20)], [ExceptHandler(Name('IOError', Load(), lineno=95, col_offset=23), None, [Pass( lineno=96, col_offset=20)], lineno=95, col_offset=16)], [], lineno=87, col_offset=16)], [], lineno=86, col_offset=12), If(UnaryOp(Not(), Name('quiet', Load(), lineno=97, col_offset=19), lineno=97, col_offset=15), [Print(None, [Str('Compiling', lineno=98, col_offset=22), Name('fullname', Load(), lineno=98, col_offset=35), Str('...', lineno=98, col_offset=45)], True, lineno=98, col_offset=16)], [], lineno=97, col_offset=12), TryExcept([Assign([Name('ok', Store(), lineno=100, col_offset=16)], Call(Attribute(Name('py_compile', Load(), lineno=100, col_offset=21), 'compile', Load(), lineno=100, col_offset=21), [Name('fullname', Load(), lineno=100, col_offset=40), Name('None', Load(), lineno=100, col_offset=50), Name('dfile', Load(), lineno=100, col_offset=56), Name('True', Load(), lineno=100, col_offset=63)], [], None, None, lineno=100, col_offset=21), lineno=100, col_offset=16)], [ExceptHandler(Attribute(Name('py_compile', Load(), lineno=101, col_offset=19), 'PyCompileError', Load(), lineno=101, col_offset=19), Name('err', Store(), lineno=101, col_offset=45), [If(Name('quiet', Load(), lineno=102, col_offset=19), [Print(None, [Str('Compiling', lineno=103, col_offset=26), Name('fullname', Load(), lineno=103, col_offset=39), Str('...', lineno=103, col_offset=49)], True, lineno=103, col_offset=20)], [], lineno=102, col_offset=16), Print(None, [Attribute(Name('err', Load(), lineno=104, col_offset=22), 'msg', Load(), lineno=104, col_offset=22)], True, lineno=104, col_offset=16), Assign([Name('success', Store(), lineno=105, col_offset=16)], Num(0, lineno=105, col_offset=26), lineno=105, col_offset=16)], lineno=101, col_offset=12), ExceptHandler(Name('IOError', Load(), lineno=106, col_offset=19), Name('e', Store(), lineno=106, col_offset=28), [Print(None, [Str('Sorry', lineno=107, col_offset=22), Name('e', Load(), lineno=107, col_offset=31)], True, lineno=107, col_offset=16), Assign([Name('success', Store(), lineno=108, col_offset=16)], Num(0, lineno=108, col_offset=26), lineno=108, col_offset=16)], lineno=106, col_offset=12)], [If(Compare(Name('ok', Load(), lineno=110, col_offset=19), [Eq()], [Num(0, lineno=110, col_offset=25)], lineno=110, col_offset=19), [Assign([Name('success', Store(), lineno=111, col_offset=20)], Num(0, lineno=111, col_offset=30), lineno=111, col_offset=20)], [], lineno=110, col_offset=16)], lineno=99, col_offset=12)], [], lineno=85, col_offset=8)], [], lineno=83, col_offset=4), Return(Name('success', Load(), lineno=112, col_offset=11), lineno=112, col_offset=4)], [], lineno=63, col_offset=0), FunctionDef('compile_path', arguments([Name('skip_curdir', Param(), lineno=114, col_offset=17), Name('maxlevels', Param(), lineno=114, col_offset=32), Name('force', Param(), lineno=114, col_offset=45), Name('quiet', Param(), lineno=114, col_offset=54)], None, None, [Num(1, lineno=114, col_offset=29), Num(0, lineno=114, col_offset=42), Num(0, lineno=114, col_offset=51), Num(0, lineno=114, col_offset=60)]), [Expr(Str('Byte-compile all module on sys.path.\n\n    Arguments (all optional):\n\n    skip_curdir: if true, skip current directory (default true)\n    maxlevels:   max recursion level (default 0)\n    force: as for compile_dir() (default 0)\n    quiet: as for compile_dir() (default 0)\n\n    ', lineno=124, col_offset=-1), lineno=124, col_offset=-1), Assign([Name('success', Store(), lineno=125, col_offset=4)], Num(1, lineno=125, col_offset=14), lineno=125, col_offset=4), For(Name('dir', Store(), lineno=126, col_offset=8), Attribute(Name('sys', Load(), lineno=126, col_offset=15), 'path', Load(), lineno=126, col_offset=15), [If(BoolOp(And(), [BoolOp(Or(), [UnaryOp(Not(), Name('dir', Load(), lineno=127, col_offset=16), lineno=127, col_offset=12), Compare(Name('dir', Load(), lineno=127, col_offset=23), [Eq()], [Attribute(Name('os', Load(), lineno=127, col_offset=30), 'curdir', Load(), lineno=127, col_offset=30)], lineno=127, col_offset=23)], lineno=127, col_offset=12), Name('skip_curdir', Load(), lineno=127, col_offset=45)], lineno=127, col_offset=11), [Print(None, [Str('Skipping current directory', lineno=128, col_offset=18)], True, lineno=128, col_offset=12)], [Assign([Name('success', Store(), lineno=130, col_offset=12)], BoolOp(And(), [Name('success', Load(), lineno=130, col_offset=22), Call(Name('compile_dir', Load(), lineno=130, col_offset=34), [Name('dir', Load(), lineno=130, col_offset=46), Name('maxlevels', Load(), lineno=130, col_offset=51), Name('None', Load(), lineno=130, col_offset=62), Name('force', Load(), lineno=131, col_offset=46)], [keyword('quiet', Name('quiet', Load(), lineno=131, col_offset=59))], None, None, lineno=130, col_offset=34)], lineno=130, col_offset=22), lineno=130, col_offset=12)], lineno=127, col_offset=8)], [], lineno=126, col_offset=4), Return(Name('success', Load(), lineno=132, col_offset=11), lineno=132, col_offset=4)], [], lineno=114, col_offset=0), FunctionDef('expand_args', arguments([Name('args', Param(), lineno=134, col_offset=16), Name('flist', Param(), lineno=134, col_offset=22)], None, None, []), [Expr(Str('read names in flist and append to args', lineno=135, col_offset=4), lineno=135, col_offset=4), Assign([Name('expanded', Store(), lineno=136, col_offset=4)], Subscript(Name('args', Load(), lineno=136, col_offset=15), Slice(None, None, None), Load(), lineno=136, col_offset=15), lineno=136, col_offset=4), If(Name('flist', Load(), lineno=137, col_offset=7), [TryExcept([If(Compare(Name('flist', Load(), lineno=139, col_offset=15), [Eq()], [Str('-', lineno=139, col_offset=24)], lineno=139, col_offset=15), [Assign([Name('fd', Store(), lineno=140, col_offset=16)], Attribute(Name('sys', Load(), lineno=140, col_offset=21), 'stdin', Load(), lineno=140, col_offset=21), lineno=140, col_offset=16)], [Assign([Name('fd', Store(), lineno=142, col_offset=16)], Call(Name('open', Load(), lineno=142, col_offset=21), [Name('flist', Load(), lineno=142, col_offset=26)], [], None, None, lineno=142, col_offset=21), lineno=142, col_offset=16)], lineno=139, col_offset=12), While(Num(1, lineno=143, col_offset=18), [Assign([Name('line', Store(), lineno=144, col_offset=16)], Call(Attribute(Name('fd', Load(), lineno=144, col_offset=23), 'readline', Load(), lineno=144, col_offset=23), [], [], None, None, lineno=144, col_offset=23), lineno=144, col_offset=16), If(UnaryOp(Not(), Name('line', Load(), lineno=145, col_offset=23), lineno=145, col_offset=19), [Break( lineno=146, col_offset=20)], [], lineno=145, col_offset=16), Expr(Call(Attribute(Name('expanded', Load(), lineno=147, col_offset=16), 'append', Load(), lineno=147, col_offset=16), [Subscript(Name('line', Load(), lineno=147, col_offset=32), Slice(None, Num(-1, lineno=147, col_offset=39), None), Load(), lineno=147, col_offset=32)], [], None, None, lineno=147, col_offset=16), lineno=147, col_offset=16)], [], lineno=143, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=148, col_offset=15), None, [Print(None, [BinOp(Str('Error reading file list %s', lineno=149, col_offset=18), Mod(), Name('flist', Load(), lineno=149, col_offset=49), lineno=149, col_offset=18)], True, lineno=149, col_offset=12), Raise(None, None, None, lineno=150, col_offset=12)], lineno=148, col_offset=8)], [], lineno=138, col_offset=8)], [], lineno=137, col_offset=4), Return(Name('expanded', Load(), lineno=151, col_offset=11), lineno=151, col_offset=4)], [], lineno=134, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Expr(Str('Script main program.', lineno=154, col_offset=4), lineno=154, col_offset=4), Import([alias('getopt', None)], lineno=155, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=157, col_offset=8), Name('args', Store(), lineno=157, col_offset=14)], Store(), lineno=157, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=157, col_offset=21), 'getopt', Load(), lineno=157, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=157, col_offset=35), 'argv', Load(), lineno=157, col_offset=35), Slice(Num(1, lineno=157, col_offset=44), None, None), Load(), lineno=157, col_offset=35), Str('lfqd:x:i:', lineno=157, col_offset=49)], [], None, None, lineno=157, col_offset=21), lineno=157, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=158, col_offset=11), 'error', Load(), lineno=158, col_offset=11), Name('msg', Store(), lineno=158, col_offset=25), [Print(None, [Name('msg', Load(), lineno=159, col_offset=14)], True, lineno=159, col_offset=8), Print(None, [Str('usage: python compileall.py [-l] [-f] [-q] [-d destdir] [-x regexp] [-i list] [directory|file ...]', lineno=160, col_offset=14)], True, lineno=160, col_offset=8), Print(None, [Str("-l: don't recurse down", lineno=162, col_offset=14)], True, lineno=162, col_offset=8), Print(None, [Str('-f: force rebuild even if timestamps are up-to-date', lineno=163, col_offset=14)], True, lineno=163, col_offset=8), Print(None, [Str('-q: quiet operation', lineno=164, col_offset=14)], True, lineno=164, col_offset=8), Print(None, [Str('-d destdir: purported directory name for error messages', lineno=165, col_offset=14)], True, lineno=165, col_offset=8), Print(None, [Str('   if no directory arguments, -l sys.path is assumed', lineno=166, col_offset=14)], True, lineno=166, col_offset=8), Print(None, [Str('-x regexp: skip files matching the regular expression regexp', lineno=167, col_offset=14)], True, lineno=167, col_offset=8), Print(None, [Str('   the regexp is searched for in the full path of the file', lineno=168, col_offset=14)], True, lineno=168, col_offset=8), Print(None, [Str('-i list: expand list with its content (file and directory names)', lineno=169, col_offset=14)], True, lineno=169, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=170, col_offset=8), 'exit', Load(), lineno=170, col_offset=8), [Num(2, lineno=170, col_offset=17)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8)], lineno=158, col_offset=4)], [], lineno=156, col_offset=4), Assign([Name('maxlevels', Store(), lineno=171, col_offset=4)], Num(10, lineno=171, col_offset=16), lineno=171, col_offset=4), Assign([Name('ddir', Store(), lineno=172, col_offset=4)], Name('None', Load(), lineno=172, col_offset=11), lineno=172, col_offset=4), Assign([Name('force', Store(), lineno=173, col_offset=4)], Num(0, lineno=173, col_offset=12), lineno=173, col_offset=4), Assign([Name('quiet', Store(), lineno=174, col_offset=4)], Num(0, lineno=174, col_offset=12), lineno=174, col_offset=4), Assign([Name('rx', Store(), lineno=175, col_offset=4)], Name('None', Load(), lineno=175, col_offset=9), lineno=175, col_offset=4), Assign([Name('flist', Store(), lineno=176, col_offset=4)], Name('None', Load(), lineno=176, col_offset=12), lineno=176, col_offset=4), For(Tuple([Name('o', Store(), lineno=177, col_offset=8), Name('a', Store(), lineno=177, col_offset=11)], Store(), lineno=177, col_offset=8), Name('opts', Load(), lineno=177, col_offset=16), [If(Compare(Name('o', Load(), lineno=178, col_offset=11), [Eq()], [Str('-l', lineno=178, col_offset=16)], lineno=178, col_offset=11), [Assign([Name('maxlevels', Store(), lineno=178, col_offset=22)], Num(0, lineno=178, col_offset=34), lineno=178, col_offset=22)], [], lineno=178, col_offset=8), If(Compare(Name('o', Load(), lineno=179, col_offset=11), [Eq()], [Str('-d', lineno=179, col_offset=16)], lineno=179, col_offset=11), [Assign([Name('ddir', Store(), lineno=179, col_offset=22)], Name('a', Load(), lineno=179, col_offset=29), lineno=179, col_offset=22)], [], lineno=179, col_offset=8), If(Compare(Name('o', Load(), lineno=180, col_offset=11), [Eq()], [Str('-f', lineno=180, col_offset=16)], lineno=180, col_offset=11), [Assign([Name('force', Store(), lineno=180, col_offset=22)], Num(1, lineno=180, col_offset=30), lineno=180, col_offset=22)], [], lineno=180, col_offset=8), If(Compare(Name('o', Load(), lineno=181, col_offset=11), [Eq()], [Str('-q', lineno=181, col_offset=16)], lineno=181, col_offset=11), [Assign([Name('quiet', Store(), lineno=181, col_offset=22)], Num(1, lineno=181, col_offset=30), lineno=181, col_offset=22)], [], lineno=181, col_offset=8), If(Compare(Name('o', Load(), lineno=182, col_offset=11), [Eq()], [Str('-x', lineno=182, col_offset=16)], lineno=182, col_offset=11), [Import([alias('re', None)], lineno=183, col_offset=12), Assign([Name('rx', Store(), lineno=184, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=184, col_offset=17), 'compile', Load(), lineno=184, col_offset=17), [Name('a', Load(), lineno=184, col_offset=28)], [], None, None, lineno=184, col_offset=17), lineno=184, col_offset=12)], [], lineno=182, col_offset=8), If(Compare(Name('o', Load(), lineno=185, col_offset=11), [Eq()], [Str('-i', lineno=185, col_offset=16)], lineno=185, col_offset=11), [Assign([Name('flist', Store(), lineno=185, col_offset=22)], Name('a', Load(), lineno=185, col_offset=30), lineno=185, col_offset=22)], [], lineno=185, col_offset=8)], [], lineno=177, col_offset=4), If(Name('ddir', Load(), lineno=186, col_offset=7), [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=187, col_offset=11), [Name('args', Load(), lineno=187, col_offset=15)], [], None, None, lineno=187, col_offset=11), [NotEq()], [Num(1, lineno=187, col_offset=24)], lineno=187, col_offset=11), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=187, col_offset=34), 'path', Load(), lineno=187, col_offset=34), 'isdir', Load(), lineno=187, col_offset=34), [Subscript(Name('args', Load(), lineno=187, col_offset=48), Index(Num(0, lineno=187, col_offset=53)), Load(), lineno=187, col_offset=48)], [], None, None, lineno=187, col_offset=34), lineno=187, col_offset=30)], lineno=187, col_offset=11), [Print(None, [Str('-d destdir require exactly one directory argument', lineno=188, col_offset=18)], True, lineno=188, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=189, col_offset=12), 'exit', Load(), lineno=189, col_offset=12), [Num(2, lineno=189, col_offset=21)], [], None, None, lineno=189, col_offset=12), lineno=189, col_offset=12)], [], lineno=187, col_offset=8)], [], lineno=186, col_offset=4), Assign([Name('success', Store(), lineno=190, col_offset=4)], Num(1, lineno=190, col_offset=14), lineno=190, col_offset=4), TryExcept([If(BoolOp(Or(), [Name('args', Load(), lineno=192, col_offset=11), Name('flist', Load(), lineno=192, col_offset=19)], lineno=192, col_offset=11), [TryExcept([If(Name('flist', Load(), lineno=194, col_offset=19), [Assign([Name('args', Store(), lineno=195, col_offset=20)], Call(Name('expand_args', Load(), lineno=195, col_offset=27), [Name('args', Load(), lineno=195, col_offset=39), Name('flist', Load(), lineno=195, col_offset=45)], [], None, None, lineno=195, col_offset=27), lineno=195, col_offset=20)], [], lineno=194, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=196, col_offset=19), None, [Assign([Name('success', Store(), lineno=197, col_offset=16)], Num(0, lineno=197, col_offset=26), lineno=197, col_offset=16)], lineno=196, col_offset=12)], [], lineno=193, col_offset=12), If(Name('success', Load(), lineno=198, col_offset=15), [For(Name('arg', Store(), lineno=199, col_offset=20), Name('args', Load(), lineno=199, col_offset=27), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=200, col_offset=23), 'path', Load(), lineno=200, col_offset=23), 'isdir', Load(), lineno=200, col_offset=23), [Name('arg', Load(), lineno=200, col_offset=37)], [], None, None, lineno=200, col_offset=23), [If(UnaryOp(Not(), Call(Name('compile_dir', Load(), lineno=201, col_offset=31), [Name('arg', Load(), lineno=201, col_offset=43), Name('maxlevels', Load(), lineno=201, col_offset=48), Name('ddir', Load(), lineno=201, col_offset=59), Name('force', Load(), lineno=202, col_offset=43), Name('rx', Load(), lineno=202, col_offset=50), Name('quiet', Load(), lineno=202, col_offset=54)], [], None, None, lineno=201, col_offset=31), lineno=201, col_offset=27), [Assign([Name('success', Store(), lineno=203, col_offset=28)], Num(0, lineno=203, col_offset=38), lineno=203, col_offset=28)], [], lineno=201, col_offset=24)], [If(UnaryOp(Not(), Call(Name('compile_file', Load(), lineno=205, col_offset=31), [Name('arg', Load(), lineno=205, col_offset=44), Name('ddir', Load(), lineno=205, col_offset=49), Name('force', Load(), lineno=205, col_offset=55), Name('rx', Load(), lineno=205, col_offset=62), Name('quiet', Load(), lineno=205, col_offset=66)], [], None, None, lineno=205, col_offset=31), lineno=205, col_offset=27), [Assign([Name('success', Store(), lineno=206, col_offset=28)], Num(0, lineno=206, col_offset=38), lineno=206, col_offset=28)], [], lineno=205, col_offset=24)], lineno=200, col_offset=20)], [], lineno=199, col_offset=16)], [], lineno=198, col_offset=12)], [Assign([Name('success', Store(), lineno=208, col_offset=12)], Call(Name('compile_path', Load(), lineno=208, col_offset=22), [], [], None, None, lineno=208, col_offset=22), lineno=208, col_offset=12)], lineno=192, col_offset=8)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=209, col_offset=11), None, [Print(None, [Str('\n[interrupt]', lineno=210, col_offset=14)], True, lineno=210, col_offset=8), Assign([Name('success', Store(), lineno=211, col_offset=8)], Num(0, lineno=211, col_offset=18), lineno=211, col_offset=8)], lineno=209, col_offset=4)], [], lineno=191, col_offset=4), Return(Name('success', Load(), lineno=212, col_offset=11), lineno=212, col_offset=4)], [], lineno=153, col_offset=0), If(Compare(Name('__name__', Load(), lineno=214, col_offset=3), [Eq()], [Str('__main__', lineno=214, col_offset=15)], lineno=214, col_offset=3), [Assign([Name('exit_status', Store(), lineno=215, col_offset=4)], Call(Name('int', Load(), lineno=215, col_offset=18), [UnaryOp(Not(), Call(Name('main', Load(), lineno=215, col_offset=26), [], [], None, None, lineno=215, col_offset=26), lineno=215, col_offset=22)], [], None, None, lineno=215, col_offset=18), lineno=215, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=216, col_offset=4), 'exit', Load(), lineno=216, col_offset=4), [Name('exit_status', Load(), lineno=216, col_offset=13)], [], None, None, lineno=216, col_offset=4), lineno=216, col_offset=4)], [], lineno=214, col_offset=0)])
