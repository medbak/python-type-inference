Module([Expr(Str("\nConfiguration functions for the logging package for Python. The core package\nis based on PEP 282 and comments thereto in comp.lang.python, and influenced\nby Apache's log4j system.\n\nCopyright (C) 2001-2010 Vinay Sajip. All Rights Reserved.\n\nTo use, simply 'import logging' and log away!\n", lineno=25, col_offset=-1), lineno=25, col_offset=-1), Import([alias('sys', None), alias('logging', None), alias('logging.handlers', None), alias('socket', None), alias('struct', None), alias('os', None), alias('traceback', None), alias('re', None)], lineno=27, col_offset=0), Import([alias('types', None), alias('cStringIO', None)], lineno=28, col_offset=0), TryExcept([Import([alias('thread', None)], lineno=31, col_offset=4), Import([alias('threading', None)], lineno=32, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=33, col_offset=7), None, [Assign([Name('thread', Store(), lineno=34, col_offset=4)], Name('None', Load(), lineno=34, col_offset=13), lineno=34, col_offset=4)], lineno=33, col_offset=0)], [], lineno=30, col_offset=0), ImportFrom('SocketServer', [alias('ThreadingTCPServer', None), alias('StreamRequestHandler', None)], 0, lineno=36, col_offset=0), Assign([Name('DEFAULT_LOGGING_CONFIG_PORT', Store(), lineno=39, col_offset=0)], Num(9030, lineno=39, col_offset=30), lineno=39, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=41, col_offset=3), 'platform', Load(), lineno=41, col_offset=3), [Eq()], [Str('win32', lineno=41, col_offset=19)], lineno=41, col_offset=3), [Assign([Name('RESET_ERROR', Store(), lineno=42, col_offset=4)], Num(10054, lineno=42, col_offset=18), lineno=42, col_offset=4)], [Assign([Name('RESET_ERROR', Store(), lineno=44, col_offset=4)], Num(104, lineno=44, col_offset=18), lineno=44, col_offset=4)], lineno=41, col_offset=0), Assign([Name('_listener', Store(), lineno=51, col_offset=0)], Name('None', Load(), lineno=51, col_offset=12), lineno=51, col_offset=0), FunctionDef('fileConfig', arguments([Name('fname', Param(), lineno=53, col_offset=15), Name('defaults', Param(), lineno=53, col_offset=22), Name('disable_existing_loggers', Param(), lineno=53, col_offset=37)], None, None, [Name('None', Load(), lineno=53, col_offset=31), Name('True', Load(), lineno=53, col_offset=62)]), [Expr(Str('\n    Read the logging configuration from a ConfigParser-format file.\n\n    This can be called several times from an application, allowing an end user\n    the ability to select from various pre-canned configurations (if the\n    developer provides a mechanism to present the choices and load the chosen\n    configuration).\n    ', lineno=61, col_offset=-1), lineno=61, col_offset=-1), Import([alias('ConfigParser', None)], lineno=62, col_offset=4), Assign([Name('cp', Store(), lineno=64, col_offset=4)], Call(Attribute(Name('ConfigParser', Load(), lineno=64, col_offset=9), 'ConfigParser', Load(), lineno=64, col_offset=9), [Name('defaults', Load(), lineno=64, col_offset=35)], [], None, None, lineno=64, col_offset=9), lineno=64, col_offset=4), If(Call(Name('hasattr', Load(), lineno=65, col_offset=7), [Name('fname', Load(), lineno=65, col_offset=15), Str('readline', lineno=65, col_offset=22)], [], None, None, lineno=65, col_offset=7), [Expr(Call(Attribute(Name('cp', Load(), lineno=66, col_offset=8), 'readfp', Load(), lineno=66, col_offset=8), [Name('fname', Load(), lineno=66, col_offset=18)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [Expr(Call(Attribute(Name('cp', Load(), lineno=68, col_offset=8), 'read', Load(), lineno=68, col_offset=8), [Name('fname', Load(), lineno=68, col_offset=16)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8)], lineno=65, col_offset=4), Assign([Name('formatters', Store(), lineno=70, col_offset=4)], Call(Name('_create_formatters', Load(), lineno=70, col_offset=17), [Name('cp', Load(), lineno=70, col_offset=36)], [], None, None, lineno=70, col_offset=17), lineno=70, col_offset=4), Expr(Call(Attribute(Name('logging', Load(), lineno=73, col_offset=4), '_acquireLock', Load(), lineno=73, col_offset=4), [], [], None, None, lineno=73, col_offset=4), lineno=73, col_offset=4), TryFinally([Expr(Call(Attribute(Attribute(Name('logging', Load(), lineno=75, col_offset=8), '_handlers', Load(), lineno=75, col_offset=8), 'clear', Load(), lineno=75, col_offset=8), [], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Delete([Subscript(Attribute(Name('logging', Load(), lineno=76, col_offset=12), '_handlerList', Load(), lineno=76, col_offset=12), Slice(None, None, None), Del(), lineno=76, col_offset=12)], lineno=76, col_offset=8), Assign([Name('handlers', Store(), lineno=78, col_offset=8)], Call(Name('_install_handlers', Load(), lineno=78, col_offset=19), [Name('cp', Load(), lineno=78, col_offset=37), Name('formatters', Load(), lineno=78, col_offset=41)], [], None, None, lineno=78, col_offset=19), lineno=78, col_offset=8), Expr(Call(Name('_install_loggers', Load(), lineno=79, col_offset=8), [Name('cp', Load(), lineno=79, col_offset=25), Name('handlers', Load(), lineno=79, col_offset=29), Name('disable_existing_loggers', Load(), lineno=79, col_offset=39)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8)], [Expr(Call(Attribute(Name('logging', Load(), lineno=81, col_offset=8), '_releaseLock', Load(), lineno=81, col_offset=8), [], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], lineno=74, col_offset=4)], [], lineno=53, col_offset=0), FunctionDef('_resolve', arguments([Name('name', Param(), lineno=84, col_offset=13)], None, None, []), [Expr(Str('Resolve a dotted name to a global object.', lineno=85, col_offset=4), lineno=85, col_offset=4), Assign([Name('name', Store(), lineno=86, col_offset=4)], Call(Attribute(Name('name', Load(), lineno=86, col_offset=11), 'split', Load(), lineno=86, col_offset=11), [Str('.', lineno=86, col_offset=22)], [], None, None, lineno=86, col_offset=11), lineno=86, col_offset=4), Assign([Name('used', Store(), lineno=87, col_offset=4)], Call(Attribute(Name('name', Load(), lineno=87, col_offset=11), 'pop', Load(), lineno=87, col_offset=11), [Num(0, lineno=87, col_offset=20)], [], None, None, lineno=87, col_offset=11), lineno=87, col_offset=4), Assign([Name('found', Store(), lineno=88, col_offset=4)], Call(Name('__import__', Load(), lineno=88, col_offset=12), [Name('used', Load(), lineno=88, col_offset=23)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=4), For(Name('n', Store(), lineno=89, col_offset=8), Name('name', Load(), lineno=89, col_offset=13), [Assign([Name('used', Store(), lineno=90, col_offset=8)], BinOp(BinOp(Name('used', Load(), lineno=90, col_offset=15), Add(), Str('.', lineno=90, col_offset=22), lineno=90, col_offset=15), Add(), Name('n', Load(), lineno=90, col_offset=28), lineno=90, col_offset=26), lineno=90, col_offset=8), TryExcept([Assign([Name('found', Store(), lineno=92, col_offset=12)], Call(Name('getattr', Load(), lineno=92, col_offset=20), [Name('found', Load(), lineno=92, col_offset=28), Name('n', Load(), lineno=92, col_offset=35)], [], None, None, lineno=92, col_offset=20), lineno=92, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=93, col_offset=15), None, [Expr(Call(Name('__import__', Load(), lineno=94, col_offset=12), [Name('used', Load(), lineno=94, col_offset=23)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12), Assign([Name('found', Store(), lineno=95, col_offset=12)], Call(Name('getattr', Load(), lineno=95, col_offset=20), [Name('found', Load(), lineno=95, col_offset=28), Name('n', Load(), lineno=95, col_offset=35)], [], None, None, lineno=95, col_offset=20), lineno=95, col_offset=12)], lineno=93, col_offset=8)], [], lineno=91, col_offset=8)], [], lineno=89, col_offset=4), Return(Name('found', Load(), lineno=96, col_offset=11), lineno=96, col_offset=4)], [], lineno=84, col_offset=0), FunctionDef('_strip_spaces', arguments([Name('alist', Param(), lineno=98, col_offset=18)], None, None, []), [Return(Call(Name('map', Load(), lineno=99, col_offset=11), [Lambda(arguments([Name('x', Param(), lineno=99, col_offset=22)], None, None, []), Call(Attribute(Name('x', Load(), lineno=99, col_offset=25), 'strip', Load(), lineno=99, col_offset=25), [], [], None, None, lineno=99, col_offset=25), lineno=99, col_offset=15), Name('alist', Load(), lineno=99, col_offset=36)], [], None, None, lineno=99, col_offset=11), lineno=99, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('_encoded', arguments([Name('s', Param(), lineno=101, col_offset=13)], None, None, []), [Return(IfExp(Call(Name('isinstance', Load(), lineno=102, col_offset=16), [Name('s', Load(), lineno=102, col_offset=27), Name('str', Load(), lineno=102, col_offset=30)], [], None, None, lineno=102, col_offset=16), Name('s', Load(), lineno=102, col_offset=11), Call(Attribute(Name('s', Load(), lineno=102, col_offset=40), 'encode', Load(), lineno=102, col_offset=40), [Str('utf-8', lineno=102, col_offset=49)], [], None, None, lineno=102, col_offset=40), lineno=102, col_offset=11), lineno=102, col_offset=4)], [], lineno=101, col_offset=0), FunctionDef('_create_formatters', arguments([Name('cp', Param(), lineno=104, col_offset=23)], None, None, []), [Expr(Str('Create and return formatters', lineno=105, col_offset=4), lineno=105, col_offset=4), Assign([Name('flist', Store(), lineno=106, col_offset=4)], Call(Attribute(Name('cp', Load(), lineno=106, col_offset=12), 'get', Load(), lineno=106, col_offset=12), [Str('formatters', lineno=106, col_offset=19), Str('keys', lineno=106, col_offset=33)], [], None, None, lineno=106, col_offset=12), lineno=106, col_offset=4), If(UnaryOp(Not(), Call(Name('len', Load(), lineno=107, col_offset=11), [Name('flist', Load(), lineno=107, col_offset=15)], [], None, None, lineno=107, col_offset=11), lineno=107, col_offset=7), [Return(Dict([], [], lineno=108, col_offset=15), lineno=108, col_offset=8)], [], lineno=107, col_offset=4), Assign([Name('flist', Store(), lineno=109, col_offset=4)], Call(Attribute(Name('flist', Load(), lineno=109, col_offset=12), 'split', Load(), lineno=109, col_offset=12), [Str(',', lineno=109, col_offset=24)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=4), Assign([Name('flist', Store(), lineno=110, col_offset=4)], Call(Name('_strip_spaces', Load(), lineno=110, col_offset=12), [Name('flist', Load(), lineno=110, col_offset=26)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=4), Assign([Name('formatters', Store(), lineno=111, col_offset=4)], Dict([], [], lineno=111, col_offset=17), lineno=111, col_offset=4), For(Name('form', Store(), lineno=112, col_offset=8), Name('flist', Load(), lineno=112, col_offset=16), [Assign([Name('sectname', Store(), lineno=113, col_offset=8)], BinOp(Str('formatter_%s', lineno=113, col_offset=19), Mod(), Name('form', Load(), lineno=113, col_offset=36), lineno=113, col_offset=19), lineno=113, col_offset=8), Assign([Name('opts', Store(), lineno=114, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=114, col_offset=15), 'options', Load(), lineno=114, col_offset=15), [Name('sectname', Load(), lineno=114, col_offset=26)], [], None, None, lineno=114, col_offset=15), lineno=114, col_offset=8), If(Compare(Str('format', lineno=115, col_offset=11), [In()], [Name('opts', Load(), lineno=115, col_offset=23)], lineno=115, col_offset=11), [Assign([Name('fs', Store(), lineno=116, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=116, col_offset=17), 'get', Load(), lineno=116, col_offset=17), [Name('sectname', Load(), lineno=116, col_offset=24), Str('format', lineno=116, col_offset=34), Num(1, lineno=116, col_offset=44)], [], None, None, lineno=116, col_offset=17), lineno=116, col_offset=12)], [Assign([Name('fs', Store(), lineno=118, col_offset=12)], Name('None', Load(), lineno=118, col_offset=17), lineno=118, col_offset=12)], lineno=115, col_offset=8), If(Compare(Str('datefmt', lineno=119, col_offset=11), [In()], [Name('opts', Load(), lineno=119, col_offset=24)], lineno=119, col_offset=11), [Assign([Name('dfs', Store(), lineno=120, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=120, col_offset=18), 'get', Load(), lineno=120, col_offset=18), [Name('sectname', Load(), lineno=120, col_offset=25), Str('datefmt', lineno=120, col_offset=35), Num(1, lineno=120, col_offset=46)], [], None, None, lineno=120, col_offset=18), lineno=120, col_offset=12)], [Assign([Name('dfs', Store(), lineno=122, col_offset=12)], Name('None', Load(), lineno=122, col_offset=18), lineno=122, col_offset=12)], lineno=119, col_offset=8), Assign([Name('c', Store(), lineno=123, col_offset=8)], Attribute(Name('logging', Load(), lineno=123, col_offset=12), 'Formatter', Load(), lineno=123, col_offset=12), lineno=123, col_offset=8), If(Compare(Str('class', lineno=124, col_offset=11), [In()], [Name('opts', Load(), lineno=124, col_offset=22)], lineno=124, col_offset=11), [Assign([Name('class_name', Store(), lineno=125, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=125, col_offset=25), 'get', Load(), lineno=125, col_offset=25), [Name('sectname', Load(), lineno=125, col_offset=32), Str('class', lineno=125, col_offset=42)], [], None, None, lineno=125, col_offset=25), lineno=125, col_offset=12), If(Name('class_name', Load(), lineno=126, col_offset=15), [Assign([Name('c', Store(), lineno=127, col_offset=16)], Call(Name('_resolve', Load(), lineno=127, col_offset=20), [Name('class_name', Load(), lineno=127, col_offset=29)], [], None, None, lineno=127, col_offset=20), lineno=127, col_offset=16)], [], lineno=126, col_offset=12)], [], lineno=124, col_offset=8), Assign([Name('f', Store(), lineno=128, col_offset=8)], Call(Name('c', Load(), lineno=128, col_offset=12), [Name('fs', Load(), lineno=128, col_offset=14), Name('dfs', Load(), lineno=128, col_offset=18)], [], None, None, lineno=128, col_offset=12), lineno=128, col_offset=8), Assign([Subscript(Name('formatters', Load(), lineno=129, col_offset=8), Index(Name('form', Load(), lineno=129, col_offset=19)), Store(), lineno=129, col_offset=8)], Name('f', Load(), lineno=129, col_offset=27), lineno=129, col_offset=8)], [], lineno=112, col_offset=4), Return(Name('formatters', Load(), lineno=130, col_offset=11), lineno=130, col_offset=4)], [], lineno=104, col_offset=0), FunctionDef('_install_handlers', arguments([Name('cp', Param(), lineno=133, col_offset=22), Name('formatters', Param(), lineno=133, col_offset=26)], None, None, []), [Expr(Str('Install and return handlers', lineno=134, col_offset=4), lineno=134, col_offset=4), Assign([Name('hlist', Store(), lineno=135, col_offset=4)], Call(Attribute(Name('cp', Load(), lineno=135, col_offset=12), 'get', Load(), lineno=135, col_offset=12), [Str('handlers', lineno=135, col_offset=19), Str('keys', lineno=135, col_offset=31)], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=4), If(UnaryOp(Not(), Call(Name('len', Load(), lineno=136, col_offset=11), [Name('hlist', Load(), lineno=136, col_offset=15)], [], None, None, lineno=136, col_offset=11), lineno=136, col_offset=7), [Return(Dict([], [], lineno=137, col_offset=15), lineno=137, col_offset=8)], [], lineno=136, col_offset=4), Assign([Name('hlist', Store(), lineno=138, col_offset=4)], Call(Attribute(Name('hlist', Load(), lineno=138, col_offset=12), 'split', Load(), lineno=138, col_offset=12), [Str(',', lineno=138, col_offset=24)], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=4), Assign([Name('hlist', Store(), lineno=139, col_offset=4)], Call(Name('_strip_spaces', Load(), lineno=139, col_offset=12), [Name('hlist', Load(), lineno=139, col_offset=26)], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=4), Assign([Name('handlers', Store(), lineno=140, col_offset=4)], Dict([], [], lineno=140, col_offset=15), lineno=140, col_offset=4), Assign([Name('fixups', Store(), lineno=141, col_offset=4)], List([], Load(), lineno=141, col_offset=13), lineno=141, col_offset=4), For(Name('hand', Store(), lineno=142, col_offset=8), Name('hlist', Load(), lineno=142, col_offset=16), [Assign([Name('sectname', Store(), lineno=143, col_offset=8)], BinOp(Str('handler_%s', lineno=143, col_offset=19), Mod(), Name('hand', Load(), lineno=143, col_offset=34), lineno=143, col_offset=19), lineno=143, col_offset=8), Assign([Name('klass', Store(), lineno=144, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=144, col_offset=16), 'get', Load(), lineno=144, col_offset=16), [Name('sectname', Load(), lineno=144, col_offset=23), Str('class', lineno=144, col_offset=33)], [], None, None, lineno=144, col_offset=16), lineno=144, col_offset=8), Assign([Name('opts', Store(), lineno=145, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=145, col_offset=15), 'options', Load(), lineno=145, col_offset=15), [Name('sectname', Load(), lineno=145, col_offset=26)], [], None, None, lineno=145, col_offset=15), lineno=145, col_offset=8), If(Compare(Str('formatter', lineno=146, col_offset=11), [In()], [Name('opts', Load(), lineno=146, col_offset=26)], lineno=146, col_offset=11), [Assign([Name('fmt', Store(), lineno=147, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=147, col_offset=18), 'get', Load(), lineno=147, col_offset=18), [Name('sectname', Load(), lineno=147, col_offset=25), Str('formatter', lineno=147, col_offset=35)], [], None, None, lineno=147, col_offset=18), lineno=147, col_offset=12)], [Assign([Name('fmt', Store(), lineno=149, col_offset=12)], Str('', lineno=149, col_offset=18), lineno=149, col_offset=12)], lineno=146, col_offset=8), TryExcept([Assign([Name('klass', Store(), lineno=151, col_offset=12)], Call(Name('eval', Load(), lineno=151, col_offset=20), [Name('klass', Load(), lineno=151, col_offset=25), Call(Name('vars', Load(), lineno=151, col_offset=32), [Name('logging', Load(), lineno=151, col_offset=37)], [], None, None, lineno=151, col_offset=32)], [], None, None, lineno=151, col_offset=20), lineno=151, col_offset=12)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=152, col_offset=16), Name('NameError', Load(), lineno=152, col_offset=32)], Load(), lineno=152, col_offset=16), None, [Assign([Name('klass', Store(), lineno=153, col_offset=12)], Call(Name('_resolve', Load(), lineno=153, col_offset=20), [Name('klass', Load(), lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=20), lineno=153, col_offset=12)], lineno=152, col_offset=8)], [], lineno=150, col_offset=8), Assign([Name('args', Store(), lineno=154, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=154, col_offset=15), 'get', Load(), lineno=154, col_offset=15), [Name('sectname', Load(), lineno=154, col_offset=22), Str('args', lineno=154, col_offset=32)], [], None, None, lineno=154, col_offset=15), lineno=154, col_offset=8), Assign([Name('args', Store(), lineno=155, col_offset=8)], Call(Name('eval', Load(), lineno=155, col_offset=15), [Name('args', Load(), lineno=155, col_offset=20), Call(Name('vars', Load(), lineno=155, col_offset=26), [Name('logging', Load(), lineno=155, col_offset=31)], [], None, None, lineno=155, col_offset=26)], [], None, None, lineno=155, col_offset=15), lineno=155, col_offset=8), Assign([Name('h', Store(), lineno=156, col_offset=8)], Call(Name('klass', Load(), lineno=156, col_offset=12), [], [], Name('args', Load(), lineno=156, col_offset=19), None, lineno=156, col_offset=12), lineno=156, col_offset=8), If(Compare(Str('level', lineno=157, col_offset=11), [In()], [Name('opts', Load(), lineno=157, col_offset=22)], lineno=157, col_offset=11), [Assign([Name('level', Store(), lineno=158, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=158, col_offset=20), 'get', Load(), lineno=158, col_offset=20), [Name('sectname', Load(), lineno=158, col_offset=27), Str('level', lineno=158, col_offset=37)], [], None, None, lineno=158, col_offset=20), lineno=158, col_offset=12), Expr(Call(Attribute(Name('h', Load(), lineno=159, col_offset=12), 'setLevel', Load(), lineno=159, col_offset=12), [Subscript(Attribute(Name('logging', Load(), lineno=159, col_offset=23), '_levelNames', Load(), lineno=159, col_offset=23), Index(Name('level', Load(), lineno=159, col_offset=43)), Load(), lineno=159, col_offset=23)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=12)], [], lineno=157, col_offset=8), If(Call(Name('len', Load(), lineno=160, col_offset=11), [Name('fmt', Load(), lineno=160, col_offset=15)], [], None, None, lineno=160, col_offset=11), [Expr(Call(Attribute(Name('h', Load(), lineno=161, col_offset=12), 'setFormatter', Load(), lineno=161, col_offset=12), [Subscript(Name('formatters', Load(), lineno=161, col_offset=27), Index(Name('fmt', Load(), lineno=161, col_offset=38)), Load(), lineno=161, col_offset=27)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12)], [], lineno=160, col_offset=8), If(Call(Name('issubclass', Load(), lineno=162, col_offset=11), [Name('klass', Load(), lineno=162, col_offset=22), Attribute(Attribute(Name('logging', Load(), lineno=162, col_offset=29), 'handlers', Load(), lineno=162, col_offset=29), 'MemoryHandler', Load(), lineno=162, col_offset=29)], [], None, None, lineno=162, col_offset=11), [If(Compare(Str('target', lineno=163, col_offset=15), [In()], [Name('opts', Load(), lineno=163, col_offset=27)], lineno=163, col_offset=15), [Assign([Name('target', Store(), lineno=164, col_offset=16)], Call(Attribute(Name('cp', Load(), lineno=164, col_offset=25), 'get', Load(), lineno=164, col_offset=25), [Name('sectname', Load(), lineno=164, col_offset=32), Str('target', lineno=164, col_offset=41)], [], None, None, lineno=164, col_offset=25), lineno=164, col_offset=16)], [Assign([Name('target', Store(), lineno=166, col_offset=16)], Str('', lineno=166, col_offset=25), lineno=166, col_offset=16)], lineno=163, col_offset=12), If(Call(Name('len', Load(), lineno=167, col_offset=15), [Name('target', Load(), lineno=167, col_offset=19)], [], None, None, lineno=167, col_offset=15), [Expr(Call(Attribute(Name('fixups', Load(), lineno=168, col_offset=16), 'append', Load(), lineno=168, col_offset=16), [Tuple([Name('h', Load(), lineno=168, col_offset=31), Name('target', Load(), lineno=168, col_offset=34)], Load(), lineno=168, col_offset=31)], [], None, None, lineno=168, col_offset=16), lineno=168, col_offset=16)], [], lineno=167, col_offset=12)], [], lineno=162, col_offset=8), Assign([Subscript(Name('handlers', Load(), lineno=169, col_offset=8), Index(Name('hand', Load(), lineno=169, col_offset=17)), Store(), lineno=169, col_offset=8)], Name('h', Load(), lineno=169, col_offset=25), lineno=169, col_offset=8)], [], lineno=142, col_offset=4), For(Tuple([Name('h', Store(), lineno=171, col_offset=8), Name('t', Store(), lineno=171, col_offset=11)], Store(), lineno=171, col_offset=8), Name('fixups', Load(), lineno=171, col_offset=16), [Expr(Call(Attribute(Name('h', Load(), lineno=172, col_offset=8), 'setTarget', Load(), lineno=172, col_offset=8), [Subscript(Name('handlers', Load(), lineno=172, col_offset=20), Index(Name('t', Load(), lineno=172, col_offset=29)), Load(), lineno=172, col_offset=20)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8)], [], lineno=171, col_offset=4), Return(Name('handlers', Load(), lineno=173, col_offset=11), lineno=173, col_offset=4)], [], lineno=133, col_offset=0), FunctionDef('_install_loggers', arguments([Name('cp', Param(), lineno=176, col_offset=21), Name('handlers', Param(), lineno=176, col_offset=25), Name('disable_existing_loggers', Param(), lineno=176, col_offset=35)], None, None, []), [Expr(Str('Create and install loggers', lineno=177, col_offset=4), lineno=177, col_offset=4), Assign([Name('llist', Store(), lineno=180, col_offset=4)], Call(Attribute(Name('cp', Load(), lineno=180, col_offset=12), 'get', Load(), lineno=180, col_offset=12), [Str('loggers', lineno=180, col_offset=19), Str('keys', lineno=180, col_offset=30)], [], None, None, lineno=180, col_offset=12), lineno=180, col_offset=4), Assign([Name('llist', Store(), lineno=181, col_offset=4)], Call(Attribute(Name('llist', Load(), lineno=181, col_offset=12), 'split', Load(), lineno=181, col_offset=12), [Str(',', lineno=181, col_offset=24)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=4), Assign([Name('llist', Store(), lineno=182, col_offset=4)], Call(Name('list', Load(), lineno=182, col_offset=12), [Call(Name('map', Load(), lineno=182, col_offset=17), [Lambda(arguments([Name('x', Param(), lineno=182, col_offset=28)], None, None, []), Call(Attribute(Name('x', Load(), lineno=182, col_offset=31), 'strip', Load(), lineno=182, col_offset=31), [], [], None, None, lineno=182, col_offset=31), lineno=182, col_offset=21), Name('llist', Load(), lineno=182, col_offset=42)], [], None, None, lineno=182, col_offset=17)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=4), Expr(Call(Attribute(Name('llist', Load(), lineno=183, col_offset=4), 'remove', Load(), lineno=183, col_offset=4), [Str('root', lineno=183, col_offset=17)], [], None, None, lineno=183, col_offset=4), lineno=183, col_offset=4), Assign([Name('sectname', Store(), lineno=184, col_offset=4)], Str('logger_root', lineno=184, col_offset=15), lineno=184, col_offset=4), Assign([Name('root', Store(), lineno=185, col_offset=4)], Attribute(Name('logging', Load(), lineno=185, col_offset=11), 'root', Load(), lineno=185, col_offset=11), lineno=185, col_offset=4), Assign([Name('log', Store(), lineno=186, col_offset=4)], Name('root', Load(), lineno=186, col_offset=10), lineno=186, col_offset=4), Assign([Name('opts', Store(), lineno=187, col_offset=4)], Call(Attribute(Name('cp', Load(), lineno=187, col_offset=11), 'options', Load(), lineno=187, col_offset=11), [Name('sectname', Load(), lineno=187, col_offset=22)], [], None, None, lineno=187, col_offset=11), lineno=187, col_offset=4), If(Compare(Str('level', lineno=188, col_offset=7), [In()], [Name('opts', Load(), lineno=188, col_offset=18)], lineno=188, col_offset=7), [Assign([Name('level', Store(), lineno=189, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=189, col_offset=16), 'get', Load(), lineno=189, col_offset=16), [Name('sectname', Load(), lineno=189, col_offset=23), Str('level', lineno=189, col_offset=33)], [], None, None, lineno=189, col_offset=16), lineno=189, col_offset=8), Expr(Call(Attribute(Name('log', Load(), lineno=190, col_offset=8), 'setLevel', Load(), lineno=190, col_offset=8), [Subscript(Attribute(Name('logging', Load(), lineno=190, col_offset=21), '_levelNames', Load(), lineno=190, col_offset=21), Index(Name('level', Load(), lineno=190, col_offset=41)), Load(), lineno=190, col_offset=21)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=188, col_offset=4), For(Name('h', Store(), lineno=191, col_offset=8), Subscript(Attribute(Name('root', Load(), lineno=191, col_offset=13), 'handlers', Load(), lineno=191, col_offset=13), Slice(None, None, None), Load(), lineno=191, col_offset=13), [Expr(Call(Attribute(Name('root', Load(), lineno=192, col_offset=8), 'removeHandler', Load(), lineno=192, col_offset=8), [Name('h', Load(), lineno=192, col_offset=27)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), Assign([Name('hlist', Store(), lineno=193, col_offset=4)], Call(Attribute(Name('cp', Load(), lineno=193, col_offset=12), 'get', Load(), lineno=193, col_offset=12), [Name('sectname', Load(), lineno=193, col_offset=19), Str('handlers', lineno=193, col_offset=29)], [], None, None, lineno=193, col_offset=12), lineno=193, col_offset=4), If(Call(Name('len', Load(), lineno=194, col_offset=7), [Name('hlist', Load(), lineno=194, col_offset=11)], [], None, None, lineno=194, col_offset=7), [Assign([Name('hlist', Store(), lineno=195, col_offset=8)], Call(Attribute(Name('hlist', Load(), lineno=195, col_offset=16), 'split', Load(), lineno=195, col_offset=16), [Str(',', lineno=195, col_offset=28)], [], None, None, lineno=195, col_offset=16), lineno=195, col_offset=8), Assign([Name('hlist', Store(), lineno=196, col_offset=8)], Call(Name('_strip_spaces', Load(), lineno=196, col_offset=16), [Name('hlist', Load(), lineno=196, col_offset=30)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=8), For(Name('hand', Store(), lineno=197, col_offset=12), Name('hlist', Load(), lineno=197, col_offset=20), [Expr(Call(Attribute(Name('log', Load(), lineno=198, col_offset=12), 'addHandler', Load(), lineno=198, col_offset=12), [Subscript(Name('handlers', Load(), lineno=198, col_offset=27), Index(Name('hand', Load(), lineno=198, col_offset=36)), Load(), lineno=198, col_offset=27)], [], None, None, lineno=198, col_offset=12), lineno=198, col_offset=12)], [], lineno=197, col_offset=8)], [], lineno=194, col_offset=4), Assign([Name('existing', Store(), lineno=209, col_offset=4)], Call(Name('list', Load(), lineno=209, col_offset=15), [Call(Attribute(Attribute(Attribute(Name('root', Load(), lineno=209, col_offset=20), 'manager', Load(), lineno=209, col_offset=20), 'loggerDict', Load(), lineno=209, col_offset=20), 'keys', Load(), lineno=209, col_offset=20), [], [], None, None, lineno=209, col_offset=20)], [], None, None, lineno=209, col_offset=15), lineno=209, col_offset=4), Expr(Call(Attribute(Name('existing', Load(), lineno=214, col_offset=4), 'sort', Load(), lineno=214, col_offset=4), [], [keyword('key', Name('_encoded', Load(), lineno=214, col_offset=22))], None, None, lineno=214, col_offset=4), lineno=214, col_offset=4), Assign([Name('child_loggers', Store(), lineno=217, col_offset=4)], List([], Load(), lineno=217, col_offset=20), lineno=217, col_offset=4), For(Name('log', Store(), lineno=219, col_offset=8), Name('llist', Load(), lineno=219, col_offset=15), [Assign([Name('sectname', Store(), lineno=220, col_offset=8)], BinOp(Str('logger_%s', lineno=220, col_offset=19), Mod(), Name('log', Load(), lineno=220, col_offset=33), lineno=220, col_offset=19), lineno=220, col_offset=8), Assign([Name('qn', Store(), lineno=221, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=221, col_offset=13), 'get', Load(), lineno=221, col_offset=13), [Name('sectname', Load(), lineno=221, col_offset=20), Str('qualname', lineno=221, col_offset=30)], [], None, None, lineno=221, col_offset=13), lineno=221, col_offset=8), Assign([Name('opts', Store(), lineno=222, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=222, col_offset=15), 'options', Load(), lineno=222, col_offset=15), [Name('sectname', Load(), lineno=222, col_offset=26)], [], None, None, lineno=222, col_offset=15), lineno=222, col_offset=8), If(Compare(Str('propagate', lineno=223, col_offset=11), [In()], [Name('opts', Load(), lineno=223, col_offset=26)], lineno=223, col_offset=11), [Assign([Name('propagate', Store(), lineno=224, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=224, col_offset=24), 'getint', Load(), lineno=224, col_offset=24), [Name('sectname', Load(), lineno=224, col_offset=34), Str('propagate', lineno=224, col_offset=44)], [], None, None, lineno=224, col_offset=24), lineno=224, col_offset=12)], [Assign([Name('propagate', Store(), lineno=226, col_offset=12)], Num(1, lineno=226, col_offset=24), lineno=226, col_offset=12)], lineno=223, col_offset=8), Assign([Name('logger', Store(), lineno=227, col_offset=8)], Call(Attribute(Name('logging', Load(), lineno=227, col_offset=17), 'getLogger', Load(), lineno=227, col_offset=17), [Name('qn', Load(), lineno=227, col_offset=35)], [], None, None, lineno=227, col_offset=17), lineno=227, col_offset=8), If(Compare(Name('qn', Load(), lineno=228, col_offset=11), [In()], [Name('existing', Load(), lineno=228, col_offset=17)], lineno=228, col_offset=11), [Assign([Name('i', Store(), lineno=229, col_offset=12)], Call(Attribute(Name('existing', Load(), lineno=229, col_offset=16), 'index', Load(), lineno=229, col_offset=16), [Name('qn', Load(), lineno=229, col_offset=31)], [], None, None, lineno=229, col_offset=16), lineno=229, col_offset=12), Assign([Name('prefixed', Store(), lineno=230, col_offset=12)], BinOp(Name('qn', Load(), lineno=230, col_offset=23), Add(), Str('.', lineno=230, col_offset=28), lineno=230, col_offset=23), lineno=230, col_offset=12), Assign([Name('pflen', Store(), lineno=231, col_offset=12)], Call(Name('len', Load(), lineno=231, col_offset=20), [Name('prefixed', Load(), lineno=231, col_offset=24)], [], None, None, lineno=231, col_offset=20), lineno=231, col_offset=12), Assign([Name('num_existing', Store(), lineno=232, col_offset=12)], Call(Name('len', Load(), lineno=232, col_offset=27), [Name('existing', Load(), lineno=232, col_offset=31)], [], None, None, lineno=232, col_offset=27), lineno=232, col_offset=12), Assign([Name('i', Store(), lineno=233, col_offset=12)], BinOp(Name('i', Load(), lineno=233, col_offset=16), Add(), Num(1, lineno=233, col_offset=20), lineno=233, col_offset=16), lineno=233, col_offset=12), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=234, col_offset=19), [Lt()], [Name('num_existing', Load(), lineno=234, col_offset=23)], lineno=234, col_offset=19), Compare(Subscript(Subscript(Name('existing', Load(), lineno=234, col_offset=42), Index(Name('i', Load(), lineno=234, col_offset=51)), Load(), lineno=234, col_offset=42), Slice(None, Name('pflen', Load(), lineno=234, col_offset=55), None), Load(), lineno=234, col_offset=42), [Eq()], [Name('prefixed', Load(), lineno=234, col_offset=65)], lineno=234, col_offset=42)], lineno=234, col_offset=18), [Expr(Call(Attribute(Name('child_loggers', Load(), lineno=235, col_offset=16), 'append', Load(), lineno=235, col_offset=16), [Subscript(Name('existing', Load(), lineno=235, col_offset=37), Index(Name('i', Load(), lineno=235, col_offset=46)), Load(), lineno=235, col_offset=37)], [], None, None, lineno=235, col_offset=16), lineno=235, col_offset=16), Assign([Name('i', Store(), lineno=236, col_offset=16)], BinOp(Name('i', Load(), lineno=236, col_offset=20), Add(), Num(1, lineno=236, col_offset=24), lineno=236, col_offset=20), lineno=236, col_offset=16)], [], lineno=234, col_offset=12), Expr(Call(Attribute(Name('existing', Load(), lineno=237, col_offset=12), 'remove', Load(), lineno=237, col_offset=12), [Name('qn', Load(), lineno=237, col_offset=28)], [], None, None, lineno=237, col_offset=12), lineno=237, col_offset=12)], [], lineno=228, col_offset=8), If(Compare(Str('level', lineno=238, col_offset=11), [In()], [Name('opts', Load(), lineno=238, col_offset=22)], lineno=238, col_offset=11), [Assign([Name('level', Store(), lineno=239, col_offset=12)], Call(Attribute(Name('cp', Load(), lineno=239, col_offset=20), 'get', Load(), lineno=239, col_offset=20), [Name('sectname', Load(), lineno=239, col_offset=27), Str('level', lineno=239, col_offset=37)], [], None, None, lineno=239, col_offset=20), lineno=239, col_offset=12), Expr(Call(Attribute(Name('logger', Load(), lineno=240, col_offset=12), 'setLevel', Load(), lineno=240, col_offset=12), [Subscript(Attribute(Name('logging', Load(), lineno=240, col_offset=28), '_levelNames', Load(), lineno=240, col_offset=28), Index(Name('level', Load(), lineno=240, col_offset=48)), Load(), lineno=240, col_offset=28)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=12)], [], lineno=238, col_offset=8), For(Name('h', Store(), lineno=241, col_offset=12), Subscript(Attribute(Name('logger', Load(), lineno=241, col_offset=17), 'handlers', Load(), lineno=241, col_offset=17), Slice(None, None, None), Load(), lineno=241, col_offset=17), [Expr(Call(Attribute(Name('logger', Load(), lineno=242, col_offset=12), 'removeHandler', Load(), lineno=242, col_offset=12), [Name('h', Load(), lineno=242, col_offset=33)], [], None, None, lineno=242, col_offset=12), lineno=242, col_offset=12)], [], lineno=241, col_offset=8), Assign([Attribute(Name('logger', Load(), lineno=243, col_offset=8), 'propagate', Store(), lineno=243, col_offset=8)], Name('propagate', Load(), lineno=243, col_offset=27), lineno=243, col_offset=8), Assign([Attribute(Name('logger', Load(), lineno=244, col_offset=8), 'disabled', Store(), lineno=244, col_offset=8)], Num(0, lineno=244, col_offset=26), lineno=244, col_offset=8), Assign([Name('hlist', Store(), lineno=245, col_offset=8)], Call(Attribute(Name('cp', Load(), lineno=245, col_offset=16), 'get', Load(), lineno=245, col_offset=16), [Name('sectname', Load(), lineno=245, col_offset=23), Str('handlers', lineno=245, col_offset=33)], [], None, None, lineno=245, col_offset=16), lineno=245, col_offset=8), If(Call(Name('len', Load(), lineno=246, col_offset=11), [Name('hlist', Load(), lineno=246, col_offset=15)], [], None, None, lineno=246, col_offset=11), [Assign([Name('hlist', Store(), lineno=247, col_offset=12)], Call(Attribute(Name('hlist', Load(), lineno=247, col_offset=20), 'split', Load(), lineno=247, col_offset=20), [Str(',', lineno=247, col_offset=32)], [], None, None, lineno=247, col_offset=20), lineno=247, col_offset=12), Assign([Name('hlist', Store(), lineno=248, col_offset=12)], Call(Name('_strip_spaces', Load(), lineno=248, col_offset=20), [Name('hlist', Load(), lineno=248, col_offset=34)], [], None, None, lineno=248, col_offset=20), lineno=248, col_offset=12), For(Name('hand', Store(), lineno=249, col_offset=16), Name('hlist', Load(), lineno=249, col_offset=24), [Expr(Call(Attribute(Name('logger', Load(), lineno=250, col_offset=16), 'addHandler', Load(), lineno=250, col_offset=16), [Subscript(Name('handlers', Load(), lineno=250, col_offset=34), Index(Name('hand', Load(), lineno=250, col_offset=43)), Load(), lineno=250, col_offset=34)], [], None, None, lineno=250, col_offset=16), lineno=250, col_offset=16)], [], lineno=249, col_offset=12)], [], lineno=246, col_offset=8)], [], lineno=219, col_offset=4), For(Name('log', Store(), lineno=257, col_offset=8), Name('existing', Load(), lineno=257, col_offset=15), [Assign([Name('logger', Store(), lineno=258, col_offset=8)], Subscript(Attribute(Attribute(Name('root', Load(), lineno=258, col_offset=17), 'manager', Load(), lineno=258, col_offset=17), 'loggerDict', Load(), lineno=258, col_offset=17), Index(Name('log', Load(), lineno=258, col_offset=41)), Load(), lineno=258, col_offset=17), lineno=258, col_offset=8), If(Compare(Name('log', Load(), lineno=259, col_offset=11), [In()], [Name('child_loggers', Load(), lineno=259, col_offset=18)], lineno=259, col_offset=11), [Assign([Attribute(Name('logger', Load(), lineno=260, col_offset=12), 'level', Store(), lineno=260, col_offset=12)], Attribute(Name('logging', Load(), lineno=260, col_offset=27), 'NOTSET', Load(), lineno=260, col_offset=27), lineno=260, col_offset=12), Assign([Attribute(Name('logger', Load(), lineno=261, col_offset=12), 'handlers', Store(), lineno=261, col_offset=12)], List([], Load(), lineno=261, col_offset=30), lineno=261, col_offset=12), Assign([Attribute(Name('logger', Load(), lineno=262, col_offset=12), 'propagate', Store(), lineno=262, col_offset=12)], Num(1, lineno=262, col_offset=31), lineno=262, col_offset=12)], [If(Name('disable_existing_loggers', Load(), lineno=263, col_offset=13), [Assign([Attribute(Name('logger', Load(), lineno=264, col_offset=12), 'disabled', Store(), lineno=264, col_offset=12)], Num(1, lineno=264, col_offset=30), lineno=264, col_offset=12)], [], lineno=263, col_offset=13)], lineno=259, col_offset=8)], [], lineno=257, col_offset=4)], [], lineno=176, col_offset=0), Assign([Name('IDENTIFIER', Store(), lineno=268, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=268, col_offset=13), 'compile', Load(), lineno=268, col_offset=13), [Str('^[a-z_][a-z0-9_]*$', lineno=268, col_offset=24), Attribute(Name('re', Load(), lineno=268, col_offset=46), 'I', Load(), lineno=268, col_offset=46)], [], None, None, lineno=268, col_offset=13), lineno=268, col_offset=0), FunctionDef('valid_ident', arguments([Name('s', Param(), lineno=271, col_offset=16)], None, None, []), [Assign([Name('m', Store(), lineno=272, col_offset=4)], Call(Attribute(Name('IDENTIFIER', Load(), lineno=272, col_offset=8), 'match', Load(), lineno=272, col_offset=8), [Name('s', Load(), lineno=272, col_offset=25)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=4), If(UnaryOp(Not(), Name('m', Load(), lineno=273, col_offset=11), lineno=273, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=274, col_offset=14), [BinOp(Str('Not a valid Python identifier: %r', lineno=274, col_offset=25), Mod(), Name('s', Load(), lineno=274, col_offset=63), lineno=274, col_offset=25)], [], None, None, lineno=274, col_offset=14), None, None, lineno=274, col_offset=8)], [], lineno=273, col_offset=4), Return(Name('True', Load(), lineno=275, col_offset=11), lineno=275, col_offset=4)], [], lineno=271, col_offset=0), ClassDef('ConvertingDict', [Name('dict', Load(), lineno=287, col_offset=21)], [Expr(Str('A converting dictionary wrapper.', lineno=288, col_offset=4), lineno=288, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=290, col_offset=20), Name('key', Param(), lineno=290, col_offset=26)], None, None, []), [Assign([Name('value', Store(), lineno=291, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=291, col_offset=16), '__getitem__', Load(), lineno=291, col_offset=16), [Name('self', Load(), lineno=291, col_offset=33), Name('key', Load(), lineno=291, col_offset=39)], [], None, None, lineno=291, col_offset=16), lineno=291, col_offset=8), Assign([Name('result', Store(), lineno=292, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=292, col_offset=17), 'configurator', Load(), lineno=292, col_offset=17), 'convert', Load(), lineno=292, col_offset=17), [Name('value', Load(), lineno=292, col_offset=43)], [], None, None, lineno=292, col_offset=17), lineno=292, col_offset=8), If(Compare(Name('value', Load(), lineno=294, col_offset=11), [IsNot()], [Name('result', Load(), lineno=294, col_offset=24)], lineno=294, col_offset=11), [Assign([Subscript(Name('self', Load(), lineno=295, col_offset=12), Index(Name('key', Load(), lineno=295, col_offset=17)), Store(), lineno=295, col_offset=12)], Name('result', Load(), lineno=295, col_offset=24), lineno=295, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=296, col_offset=15), [Name('result', Load(), lineno=296, col_offset=20)], [], None, None, lineno=296, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=296, col_offset=32), Name('ConvertingList', Load(), lineno=296, col_offset=48), Name('ConvertingTuple', Load(), lineno=297, col_offset=32)], Load(), lineno=296, col_offset=32)], lineno=296, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=298, col_offset=16), 'parent', Store(), lineno=298, col_offset=16)], Name('self', Load(), lineno=298, col_offset=32), lineno=298, col_offset=16), Assign([Attribute(Name('result', Load(), lineno=299, col_offset=16), 'key', Store(), lineno=299, col_offset=16)], Name('key', Load(), lineno=299, col_offset=29), lineno=299, col_offset=16)], [], lineno=296, col_offset=12)], [], lineno=294, col_offset=8), Return(Name('result', Load(), lineno=300, col_offset=15), lineno=300, col_offset=8)], [], lineno=290, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=302, col_offset=12), Name('key', Param(), lineno=302, col_offset=18), Name('default', Param(), lineno=302, col_offset=23)], None, None, [Name('None', Load(), lineno=302, col_offset=31)]), [Assign([Name('value', Store(), lineno=303, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=303, col_offset=16), 'get', Load(), lineno=303, col_offset=16), [Name('self', Load(), lineno=303, col_offset=25), Name('key', Load(), lineno=303, col_offset=31), Name('default', Load(), lineno=303, col_offset=36)], [], None, None, lineno=303, col_offset=16), lineno=303, col_offset=8), Assign([Name('result', Store(), lineno=304, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=304, col_offset=17), 'configurator', Load(), lineno=304, col_offset=17), 'convert', Load(), lineno=304, col_offset=17), [Name('value', Load(), lineno=304, col_offset=43)], [], None, None, lineno=304, col_offset=17), lineno=304, col_offset=8), If(Compare(Name('value', Load(), lineno=306, col_offset=11), [IsNot()], [Name('result', Load(), lineno=306, col_offset=24)], lineno=306, col_offset=11), [Assign([Subscript(Name('self', Load(), lineno=307, col_offset=12), Index(Name('key', Load(), lineno=307, col_offset=17)), Store(), lineno=307, col_offset=12)], Name('result', Load(), lineno=307, col_offset=24), lineno=307, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=308, col_offset=15), [Name('result', Load(), lineno=308, col_offset=20)], [], None, None, lineno=308, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=308, col_offset=32), Name('ConvertingList', Load(), lineno=308, col_offset=48), Name('ConvertingTuple', Load(), lineno=309, col_offset=32)], Load(), lineno=308, col_offset=32)], lineno=308, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=310, col_offset=16), 'parent', Store(), lineno=310, col_offset=16)], Name('self', Load(), lineno=310, col_offset=32), lineno=310, col_offset=16), Assign([Attribute(Name('result', Load(), lineno=311, col_offset=16), 'key', Store(), lineno=311, col_offset=16)], Name('key', Load(), lineno=311, col_offset=29), lineno=311, col_offset=16)], [], lineno=308, col_offset=12)], [], lineno=306, col_offset=8), Return(Name('result', Load(), lineno=312, col_offset=15), lineno=312, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('pop', arguments([Name('self', Param(), lineno=314, col_offset=12), Name('key', Param(), lineno=314, col_offset=18), Name('default', Param(), lineno=314, col_offset=23)], None, None, [Name('None', Load(), lineno=314, col_offset=31)]), [Assign([Name('value', Store(), lineno=315, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=315, col_offset=16), 'pop', Load(), lineno=315, col_offset=16), [Name('self', Load(), lineno=315, col_offset=25), Name('key', Load(), lineno=315, col_offset=31), Name('default', Load(), lineno=315, col_offset=36)], [], None, None, lineno=315, col_offset=16), lineno=315, col_offset=8), Assign([Name('result', Store(), lineno=316, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=316, col_offset=17), 'configurator', Load(), lineno=316, col_offset=17), 'convert', Load(), lineno=316, col_offset=17), [Name('value', Load(), lineno=316, col_offset=43)], [], None, None, lineno=316, col_offset=17), lineno=316, col_offset=8), If(Compare(Name('value', Load(), lineno=317, col_offset=11), [IsNot()], [Name('result', Load(), lineno=317, col_offset=24)], lineno=317, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=318, col_offset=15), [Name('result', Load(), lineno=318, col_offset=20)], [], None, None, lineno=318, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=318, col_offset=32), Name('ConvertingList', Load(), lineno=318, col_offset=48), Name('ConvertingTuple', Load(), lineno=319, col_offset=32)], Load(), lineno=318, col_offset=32)], lineno=318, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=320, col_offset=16), 'parent', Store(), lineno=320, col_offset=16)], Name('self', Load(), lineno=320, col_offset=32), lineno=320, col_offset=16), Assign([Attribute(Name('result', Load(), lineno=321, col_offset=16), 'key', Store(), lineno=321, col_offset=16)], Name('key', Load(), lineno=321, col_offset=29), lineno=321, col_offset=16)], [], lineno=318, col_offset=12)], [], lineno=317, col_offset=8), Return(Name('result', Load(), lineno=322, col_offset=15), lineno=322, col_offset=8)], [], lineno=314, col_offset=4)], [], lineno=287, col_offset=0), ClassDef('ConvertingList', [Name('list', Load(), lineno=324, col_offset=21)], [Expr(Str('A converting list wrapper.', lineno=325, col_offset=4), lineno=325, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=326, col_offset=20), Name('key', Param(), lineno=326, col_offset=26)], None, None, []), [Assign([Name('value', Store(), lineno=327, col_offset=8)], Call(Attribute(Name('list', Load(), lineno=327, col_offset=16), '__getitem__', Load(), lineno=327, col_offset=16), [Name('self', Load(), lineno=327, col_offset=33), Name('key', Load(), lineno=327, col_offset=39)], [], None, None, lineno=327, col_offset=16), lineno=327, col_offset=8), Assign([Name('result', Store(), lineno=328, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=328, col_offset=17), 'configurator', Load(), lineno=328, col_offset=17), 'convert', Load(), lineno=328, col_offset=17), [Name('value', Load(), lineno=328, col_offset=43)], [], None, None, lineno=328, col_offset=17), lineno=328, col_offset=8), If(Compare(Name('value', Load(), lineno=330, col_offset=11), [IsNot()], [Name('result', Load(), lineno=330, col_offset=24)], lineno=330, col_offset=11), [Assign([Subscript(Name('self', Load(), lineno=331, col_offset=12), Index(Name('key', Load(), lineno=331, col_offset=17)), Store(), lineno=331, col_offset=12)], Name('result', Load(), lineno=331, col_offset=24), lineno=331, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=332, col_offset=15), [Name('result', Load(), lineno=332, col_offset=20)], [], None, None, lineno=332, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=332, col_offset=32), Name('ConvertingList', Load(), lineno=332, col_offset=48), Name('ConvertingTuple', Load(), lineno=333, col_offset=32)], Load(), lineno=332, col_offset=32)], lineno=332, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=334, col_offset=16), 'parent', Store(), lineno=334, col_offset=16)], Name('self', Load(), lineno=334, col_offset=32), lineno=334, col_offset=16), Assign([Attribute(Name('result', Load(), lineno=335, col_offset=16), 'key', Store(), lineno=335, col_offset=16)], Name('key', Load(), lineno=335, col_offset=29), lineno=335, col_offset=16)], [], lineno=332, col_offset=12)], [], lineno=330, col_offset=8), Return(Name('result', Load(), lineno=336, col_offset=15), lineno=336, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('pop', arguments([Name('self', Param(), lineno=338, col_offset=12), Name('idx', Param(), lineno=338, col_offset=18)], None, None, [Num(-1, lineno=338, col_offset=23)]), [Assign([Name('value', Store(), lineno=339, col_offset=8)], Call(Attribute(Name('list', Load(), lineno=339, col_offset=16), 'pop', Load(), lineno=339, col_offset=16), [Name('self', Load(), lineno=339, col_offset=25), Name('idx', Load(), lineno=339, col_offset=31)], [], None, None, lineno=339, col_offset=16), lineno=339, col_offset=8), Assign([Name('result', Store(), lineno=340, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=340, col_offset=17), 'configurator', Load(), lineno=340, col_offset=17), 'convert', Load(), lineno=340, col_offset=17), [Name('value', Load(), lineno=340, col_offset=43)], [], None, None, lineno=340, col_offset=17), lineno=340, col_offset=8), If(Compare(Name('value', Load(), lineno=341, col_offset=11), [IsNot()], [Name('result', Load(), lineno=341, col_offset=24)], lineno=341, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=342, col_offset=15), [Name('result', Load(), lineno=342, col_offset=20)], [], None, None, lineno=342, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=342, col_offset=32), Name('ConvertingList', Load(), lineno=342, col_offset=48), Name('ConvertingTuple', Load(), lineno=343, col_offset=32)], Load(), lineno=342, col_offset=32)], lineno=342, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=344, col_offset=16), 'parent', Store(), lineno=344, col_offset=16)], Name('self', Load(), lineno=344, col_offset=32), lineno=344, col_offset=16)], [], lineno=342, col_offset=12)], [], lineno=341, col_offset=8), Return(Name('result', Load(), lineno=345, col_offset=15), lineno=345, col_offset=8)], [], lineno=338, col_offset=4)], [], lineno=324, col_offset=0), ClassDef('ConvertingTuple', [Name('tuple', Load(), lineno=347, col_offset=22)], [Expr(Str('A converting tuple wrapper.', lineno=348, col_offset=4), lineno=348, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=349, col_offset=20), Name('key', Param(), lineno=349, col_offset=26)], None, None, []), [Assign([Name('value', Store(), lineno=350, col_offset=8)], Call(Attribute(Name('tuple', Load(), lineno=350, col_offset=16), '__getitem__', Load(), lineno=350, col_offset=16), [Name('self', Load(), lineno=350, col_offset=34), Name('key', Load(), lineno=350, col_offset=40)], [], None, None, lineno=350, col_offset=16), lineno=350, col_offset=8), Assign([Name('result', Store(), lineno=351, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=351, col_offset=17), 'configurator', Load(), lineno=351, col_offset=17), 'convert', Load(), lineno=351, col_offset=17), [Name('value', Load(), lineno=351, col_offset=43)], [], None, None, lineno=351, col_offset=17), lineno=351, col_offset=8), If(Compare(Name('value', Load(), lineno=352, col_offset=11), [IsNot()], [Name('result', Load(), lineno=352, col_offset=24)], lineno=352, col_offset=11), [If(Compare(Call(Name('type', Load(), lineno=353, col_offset=15), [Name('result', Load(), lineno=353, col_offset=20)], [], None, None, lineno=353, col_offset=15), [In()], [Tuple([Name('ConvertingDict', Load(), lineno=353, col_offset=32), Name('ConvertingList', Load(), lineno=353, col_offset=48), Name('ConvertingTuple', Load(), lineno=354, col_offset=32)], Load(), lineno=353, col_offset=32)], lineno=353, col_offset=15), [Assign([Attribute(Name('result', Load(), lineno=355, col_offset=16), 'parent', Store(), lineno=355, col_offset=16)], Name('self', Load(), lineno=355, col_offset=32), lineno=355, col_offset=16), Assign([Attribute(Name('result', Load(), lineno=356, col_offset=16), 'key', Store(), lineno=356, col_offset=16)], Name('key', Load(), lineno=356, col_offset=29), lineno=356, col_offset=16)], [], lineno=353, col_offset=12)], [], lineno=352, col_offset=8), Return(Name('result', Load(), lineno=357, col_offset=15), lineno=357, col_offset=8)], [], lineno=349, col_offset=4)], [], lineno=347, col_offset=0), ClassDef('BaseConfigurator', [Name('object', Load(), lineno=359, col_offset=23)], [Expr(Str('\n    The configurator base class which defines some useful defaults.\n    ', lineno=362, col_offset=-1), lineno=362, col_offset=-1), Assign([Name('CONVERT_PATTERN', Store(), lineno=364, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=364, col_offset=22), 'compile', Load(), lineno=364, col_offset=22), [Str('^(?P<prefix>[a-z]+)://(?P<suffix>.*)$', lineno=364, col_offset=33)], [], None, None, lineno=364, col_offset=22), lineno=364, col_offset=4), Assign([Name('WORD_PATTERN', Store(), lineno=366, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=366, col_offset=19), 'compile', Load(), lineno=366, col_offset=19), [Str('^\\s*(\\w+)\\s*', lineno=366, col_offset=30)], [], None, None, lineno=366, col_offset=19), lineno=366, col_offset=4), Assign([Name('DOT_PATTERN', Store(), lineno=367, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=367, col_offset=18), 'compile', Load(), lineno=367, col_offset=18), [Str('^\\.\\s*(\\w+)\\s*', lineno=367, col_offset=29)], [], None, None, lineno=367, col_offset=18), lineno=367, col_offset=4), Assign([Name('INDEX_PATTERN', Store(), lineno=368, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=368, col_offset=20), 'compile', Load(), lineno=368, col_offset=20), [Str('^\\[\\s*(\\w+)\\s*\\]\\s*', lineno=368, col_offset=31)], [], None, None, lineno=368, col_offset=20), lineno=368, col_offset=4), Assign([Name('DIGIT_PATTERN', Store(), lineno=369, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=369, col_offset=20), 'compile', Load(), lineno=369, col_offset=20), [Str('^\\d+$', lineno=369, col_offset=31)], [], None, None, lineno=369, col_offset=20), lineno=369, col_offset=4), Assign([Name('value_converters', Store(), lineno=371, col_offset=4)], Dict([Str('ext', lineno=372, col_offset=8), Str('cfg', lineno=373, col_offset=8)], [Str('ext_convert', lineno=372, col_offset=16), Str('cfg_convert', lineno=373, col_offset=16)], lineno=371, col_offset=23), lineno=371, col_offset=4), Assign([Name('importer', Store(), lineno=377, col_offset=4)], Name('__import__', Load(), lineno=377, col_offset=15), lineno=377, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=379, col_offset=17), Name('config', Param(), lineno=379, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=380, col_offset=8), 'config', Store(), lineno=380, col_offset=8)], Call(Name('ConvertingDict', Load(), lineno=380, col_offset=22), [Name('config', Load(), lineno=380, col_offset=37)], [], None, None, lineno=380, col_offset=22), lineno=380, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'config', Load(), lineno=381, col_offset=8), 'configurator', Store(), lineno=381, col_offset=8)], Name('self', Load(), lineno=381, col_offset=35), lineno=381, col_offset=8)], [], lineno=379, col_offset=4), FunctionDef('resolve', arguments([Name('self', Param(), lineno=383, col_offset=16), Name('s', Param(), lineno=383, col_offset=22)], None, None, []), [Expr(Str('\n        Resolve strings to objects using standard import and attribute\n        syntax.\n        ', lineno=387, col_offset=-1), lineno=387, col_offset=-1), Assign([Name('name', Store(), lineno=388, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=388, col_offset=15), 'split', Load(), lineno=388, col_offset=15), [Str('.', lineno=388, col_offset=23)], [], None, None, lineno=388, col_offset=15), lineno=388, col_offset=8), Assign([Name('used', Store(), lineno=389, col_offset=8)], Call(Attribute(Name('name', Load(), lineno=389, col_offset=15), 'pop', Load(), lineno=389, col_offset=15), [Num(0, lineno=389, col_offset=24)], [], None, None, lineno=389, col_offset=15), lineno=389, col_offset=8), TryExcept([Assign([Name('found', Store(), lineno=391, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=391, col_offset=20), 'importer', Load(), lineno=391, col_offset=20), [Name('used', Load(), lineno=391, col_offset=34)], [], None, None, lineno=391, col_offset=20), lineno=391, col_offset=12), For(Name('frag', Store(), lineno=392, col_offset=16), Name('name', Load(), lineno=392, col_offset=24), [AugAssign(Name('used', Store(), lineno=393, col_offset=16), Add(), BinOp(Str('.', lineno=393, col_offset=24), Add(), Name('frag', Load(), lineno=393, col_offset=30), lineno=393, col_offset=24), lineno=393, col_offset=16), TryExcept([Assign([Name('found', Store(), lineno=395, col_offset=20)], Call(Name('getattr', Load(), lineno=395, col_offset=28), [Name('found', Load(), lineno=395, col_offset=36), Name('frag', Load(), lineno=395, col_offset=43)], [], None, None, lineno=395, col_offset=28), lineno=395, col_offset=20)], [ExceptHandler(Name('AttributeError', Load(), lineno=396, col_offset=23), None, [Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=20), 'importer', Load(), lineno=397, col_offset=20), [Name('used', Load(), lineno=397, col_offset=34)], [], None, None, lineno=397, col_offset=20), lineno=397, col_offset=20), Assign([Name('found', Store(), lineno=398, col_offset=20)], Call(Name('getattr', Load(), lineno=398, col_offset=28), [Name('found', Load(), lineno=398, col_offset=36), Name('frag', Load(), lineno=398, col_offset=43)], [], None, None, lineno=398, col_offset=28), lineno=398, col_offset=20)], lineno=396, col_offset=16)], [], lineno=394, col_offset=16)], [], lineno=392, col_offset=12), Return(Name('found', Load(), lineno=399, col_offset=19), lineno=399, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=400, col_offset=15), None, [Assign([Tuple([Name('e', Store(), lineno=401, col_offset=12), Name('tb', Store(), lineno=401, col_offset=15)], Store(), lineno=401, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=401, col_offset=20), 'exc_info', Load(), lineno=401, col_offset=20), [], [], None, None, lineno=401, col_offset=20), Slice(Num(1, lineno=401, col_offset=35), None, None), Load(), lineno=401, col_offset=20), lineno=401, col_offset=12), Assign([Name('v', Store(), lineno=402, col_offset=12)], Call(Name('ValueError', Load(), lineno=402, col_offset=16), [BinOp(Str('Cannot resolve %r: %s', lineno=402, col_offset=27), Mod(), Tuple([Name('s', Load(), lineno=402, col_offset=54), Name('e', Load(), lineno=402, col_offset=57)], Load(), lineno=402, col_offset=54), lineno=402, col_offset=27)], [], None, None, lineno=402, col_offset=16), lineno=402, col_offset=12), Assign([Tuple([Attribute(Name('v', Load(), lineno=403, col_offset=12), '__cause__', Store(), lineno=403, col_offset=12), Attribute(Name('v', Load(), lineno=403, col_offset=25), '__traceback__', Store(), lineno=403, col_offset=25)], Store(), lineno=403, col_offset=12)], Tuple([Name('e', Load(), lineno=403, col_offset=43), Name('tb', Load(), lineno=403, col_offset=46)], Load(), lineno=403, col_offset=43), lineno=403, col_offset=12), Raise(Name('v', Load(), lineno=404, col_offset=18), None, None, lineno=404, col_offset=12)], lineno=400, col_offset=8)], [], lineno=390, col_offset=8)], [], lineno=383, col_offset=4), FunctionDef('ext_convert', arguments([Name('self', Param(), lineno=406, col_offset=20), Name('value', Param(), lineno=406, col_offset=26)], None, None, []), [Expr(Str('Default converter for the ext:// protocol.', lineno=407, col_offset=8), lineno=407, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=408, col_offset=15), 'resolve', Load(), lineno=408, col_offset=15), [Name('value', Load(), lineno=408, col_offset=28)], [], None, None, lineno=408, col_offset=15), lineno=408, col_offset=8)], [], lineno=406, col_offset=4), FunctionDef('cfg_convert', arguments([Name('self', Param(), lineno=410, col_offset=20), Name('value', Param(), lineno=410, col_offset=26)], None, None, []), [Expr(Str('Default converter for the cfg:// protocol.', lineno=411, col_offset=8), lineno=411, col_offset=8), Assign([Name('rest', Store(), lineno=412, col_offset=8)], Name('value', Load(), lineno=412, col_offset=15), lineno=412, col_offset=8), Assign([Name('m', Store(), lineno=413, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=413, col_offset=12), 'WORD_PATTERN', Load(), lineno=413, col_offset=12), 'match', Load(), lineno=413, col_offset=12), [Name('rest', Load(), lineno=413, col_offset=36)], [], None, None, lineno=413, col_offset=12), lineno=413, col_offset=8), If(Compare(Name('m', Load(), lineno=414, col_offset=11), [Is()], [Name('None', Load(), lineno=414, col_offset=16)], lineno=414, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=415, col_offset=18), [BinOp(Str('Unable to convert %r', lineno=415, col_offset=29), Mod(), Name('value', Load(), lineno=415, col_offset=54), lineno=415, col_offset=29)], [], None, None, lineno=415, col_offset=18), None, None, lineno=415, col_offset=12)], [Assign([Name('rest', Store(), lineno=417, col_offset=12)], Subscript(Name('rest', Load(), lineno=417, col_offset=19), Slice(Call(Attribute(Name('m', Load(), lineno=417, col_offset=24), 'end', Load(), lineno=417, col_offset=24), [], [], None, None, lineno=417, col_offset=24), None, None), Load(), lineno=417, col_offset=19), lineno=417, col_offset=12), Assign([Name('d', Store(), lineno=418, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=418, col_offset=16), 'config', Load(), lineno=418, col_offset=16), Index(Subscript(Call(Attribute(Name('m', Load(), lineno=418, col_offset=28), 'groups', Load(), lineno=418, col_offset=28), [], [], None, None, lineno=418, col_offset=28), Index(Num(0, lineno=418, col_offset=39)), Load(), lineno=418, col_offset=28)), Load(), lineno=418, col_offset=16), lineno=418, col_offset=12), While(Name('rest', Load(), lineno=420, col_offset=18), [Assign([Name('m', Store(), lineno=421, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=421, col_offset=20), 'DOT_PATTERN', Load(), lineno=421, col_offset=20), 'match', Load(), lineno=421, col_offset=20), [Name('rest', Load(), lineno=421, col_offset=43)], [], None, None, lineno=421, col_offset=20), lineno=421, col_offset=16), If(Name('m', Load(), lineno=422, col_offset=19), [Assign([Name('d', Store(), lineno=423, col_offset=20)], Subscript(Name('d', Load(), lineno=423, col_offset=24), Index(Subscript(Call(Attribute(Name('m', Load(), lineno=423, col_offset=26), 'groups', Load(), lineno=423, col_offset=26), [], [], None, None, lineno=423, col_offset=26), Index(Num(0, lineno=423, col_offset=37)), Load(), lineno=423, col_offset=26)), Load(), lineno=423, col_offset=24), lineno=423, col_offset=20)], [Assign([Name('m', Store(), lineno=425, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=425, col_offset=24), 'INDEX_PATTERN', Load(), lineno=425, col_offset=24), 'match', Load(), lineno=425, col_offset=24), [Name('rest', Load(), lineno=425, col_offset=49)], [], None, None, lineno=425, col_offset=24), lineno=425, col_offset=20), If(Name('m', Load(), lineno=426, col_offset=23), [Assign([Name('idx', Store(), lineno=427, col_offset=24)], Subscript(Call(Attribute(Name('m', Load(), lineno=427, col_offset=30), 'groups', Load(), lineno=427, col_offset=30), [], [], None, None, lineno=427, col_offset=30), Index(Num(0, lineno=427, col_offset=41)), Load(), lineno=427, col_offset=30), lineno=427, col_offset=24), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=428, col_offset=31), 'DIGIT_PATTERN', Load(), lineno=428, col_offset=31), 'match', Load(), lineno=428, col_offset=31), [Name('idx', Load(), lineno=428, col_offset=56)], [], None, None, lineno=428, col_offset=31), lineno=428, col_offset=27), [Assign([Name('d', Store(), lineno=429, col_offset=28)], Subscript(Name('d', Load(), lineno=429, col_offset=32), Index(Name('idx', Load(), lineno=429, col_offset=34)), Load(), lineno=429, col_offset=32), lineno=429, col_offset=28)], [TryExcept([Assign([Name('n', Store(), lineno=432, col_offset=32)], Call(Name('int', Load(), lineno=432, col_offset=36), [Name('idx', Load(), lineno=432, col_offset=40)], [], None, None, lineno=432, col_offset=36), lineno=432, col_offset=32), Assign([Name('d', Store(), lineno=433, col_offset=32)], Subscript(Name('d', Load(), lineno=433, col_offset=36), Index(Name('n', Load(), lineno=433, col_offset=38)), Load(), lineno=433, col_offset=36), lineno=433, col_offset=32)], [ExceptHandler(Name('TypeError', Load(), lineno=434, col_offset=35), None, [Assign([Name('d', Store(), lineno=435, col_offset=32)], Subscript(Name('d', Load(), lineno=435, col_offset=36), Index(Name('idx', Load(), lineno=435, col_offset=38)), Load(), lineno=435, col_offset=36), lineno=435, col_offset=32)], lineno=434, col_offset=28)], [], lineno=431, col_offset=28)], lineno=428, col_offset=24)], [], lineno=426, col_offset=20)], lineno=422, col_offset=16), If(Name('m', Load(), lineno=436, col_offset=19), [Assign([Name('rest', Store(), lineno=437, col_offset=20)], Subscript(Name('rest', Load(), lineno=437, col_offset=27), Slice(Call(Attribute(Name('m', Load(), lineno=437, col_offset=32), 'end', Load(), lineno=437, col_offset=32), [], [], None, None, lineno=437, col_offset=32), None, None), Load(), lineno=437, col_offset=27), lineno=437, col_offset=20)], [Raise(Call(Name('ValueError', Load(), lineno=439, col_offset=26), [BinOp(Str('Unable to convert %r at %r', lineno=439, col_offset=37), Mod(), Tuple([Name('value', Load(), lineno=440, col_offset=51), Name('rest', Load(), lineno=440, col_offset=58)], Load(), lineno=440, col_offset=51), lineno=439, col_offset=37)], [], None, None, lineno=439, col_offset=26), None, None, lineno=439, col_offset=20)], lineno=436, col_offset=16)], [], lineno=420, col_offset=12)], lineno=414, col_offset=8), Return(Name('d', Load(), lineno=442, col_offset=15), lineno=442, col_offset=8)], [], lineno=410, col_offset=4), FunctionDef('convert', arguments([Name('self', Param(), lineno=444, col_offset=16), Name('value', Param(), lineno=444, col_offset=22)], None, None, []), [Expr(Str('\n        Convert values to an appropriate type. dicts, lists and tuples are\n        replaced by their converting alternatives. Strings are checked to\n        see if they have a conversion format and are converted if they do.\n        ', lineno=449, col_offset=-1), lineno=449, col_offset=-1), If(BoolOp(And(), [UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=450, col_offset=15), [Name('value', Load(), lineno=450, col_offset=26), Name('ConvertingDict', Load(), lineno=450, col_offset=33)], [], None, None, lineno=450, col_offset=15), lineno=450, col_offset=11), Call(Name('isinstance', Load(), lineno=450, col_offset=53), [Name('value', Load(), lineno=450, col_offset=64), Name('dict', Load(), lineno=450, col_offset=71)], [], None, None, lineno=450, col_offset=53)], lineno=450, col_offset=11), [Assign([Name('value', Store(), lineno=451, col_offset=12)], Call(Name('ConvertingDict', Load(), lineno=451, col_offset=20), [Name('value', Load(), lineno=451, col_offset=35)], [], None, None, lineno=451, col_offset=20), lineno=451, col_offset=12), Assign([Attribute(Name('value', Load(), lineno=452, col_offset=12), 'configurator', Store(), lineno=452, col_offset=12)], Name('self', Load(), lineno=452, col_offset=33), lineno=452, col_offset=12)], [If(BoolOp(And(), [UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=453, col_offset=17), [Name('value', Load(), lineno=453, col_offset=28), Name('ConvertingList', Load(), lineno=453, col_offset=35)], [], None, None, lineno=453, col_offset=17), lineno=453, col_offset=13), Call(Name('isinstance', Load(), lineno=453, col_offset=55), [Name('value', Load(), lineno=453, col_offset=66), Name('list', Load(), lineno=453, col_offset=73)], [], None, None, lineno=453, col_offset=55)], lineno=453, col_offset=13), [Assign([Name('value', Store(), lineno=454, col_offset=12)], Call(Name('ConvertingList', Load(), lineno=454, col_offset=20), [Name('value', Load(), lineno=454, col_offset=35)], [], None, None, lineno=454, col_offset=20), lineno=454, col_offset=12), Assign([Attribute(Name('value', Load(), lineno=455, col_offset=12), 'configurator', Store(), lineno=455, col_offset=12)], Name('self', Load(), lineno=455, col_offset=33), lineno=455, col_offset=12)], [If(BoolOp(And(), [UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=456, col_offset=17), [Name('value', Load(), lineno=456, col_offset=28), Name('ConvertingTuple', Load(), lineno=456, col_offset=35)], [], None, None, lineno=456, col_offset=17), lineno=456, col_offset=13), Call(Name('isinstance', Load(), lineno=457, col_offset=17), [Name('value', Load(), lineno=457, col_offset=28), Name('tuple', Load(), lineno=457, col_offset=35)], [], None, None, lineno=457, col_offset=17)], lineno=456, col_offset=13), [Assign([Name('value', Store(), lineno=458, col_offset=12)], Call(Name('ConvertingTuple', Load(), lineno=458, col_offset=20), [Name('value', Load(), lineno=458, col_offset=36)], [], None, None, lineno=458, col_offset=20), lineno=458, col_offset=12), Assign([Attribute(Name('value', Load(), lineno=459, col_offset=12), 'configurator', Store(), lineno=459, col_offset=12)], Name('self', Load(), lineno=459, col_offset=33), lineno=459, col_offset=12)], [If(Call(Name('isinstance', Load(), lineno=460, col_offset=13), [Name('value', Load(), lineno=460, col_offset=24), Name('basestring', Load(), lineno=460, col_offset=31)], [], None, None, lineno=460, col_offset=13), [Assign([Name('m', Store(), lineno=461, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=461, col_offset=16), 'CONVERT_PATTERN', Load(), lineno=461, col_offset=16), 'match', Load(), lineno=461, col_offset=16), [Name('value', Load(), lineno=461, col_offset=43)], [], None, None, lineno=461, col_offset=16), lineno=461, col_offset=12), If(Name('m', Load(), lineno=462, col_offset=15), [Assign([Name('d', Store(), lineno=463, col_offset=16)], Call(Attribute(Name('m', Load(), lineno=463, col_offset=20), 'groupdict', Load(), lineno=463, col_offset=20), [], [], None, None, lineno=463, col_offset=20), lineno=463, col_offset=16), Assign([Name('prefix', Store(), lineno=464, col_offset=16)], Subscript(Name('d', Load(), lineno=464, col_offset=25), Index(Str('prefix', lineno=464, col_offset=27)), Load(), lineno=464, col_offset=25), lineno=464, col_offset=16), Assign([Name('converter', Store(), lineno=465, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=465, col_offset=28), 'value_converters', Load(), lineno=465, col_offset=28), 'get', Load(), lineno=465, col_offset=28), [Name('prefix', Load(), lineno=465, col_offset=54), Name('None', Load(), lineno=465, col_offset=62)], [], None, None, lineno=465, col_offset=28), lineno=465, col_offset=16), If(Name('converter', Load(), lineno=466, col_offset=19), [Assign([Name('suffix', Store(), lineno=467, col_offset=20)], Subscript(Name('d', Load(), lineno=467, col_offset=29), Index(Str('suffix', lineno=467, col_offset=31)), Load(), lineno=467, col_offset=29), lineno=467, col_offset=20), Assign([Name('converter', Store(), lineno=468, col_offset=20)], Call(Name('getattr', Load(), lineno=468, col_offset=32), [Name('self', Load(), lineno=468, col_offset=40), Name('converter', Load(), lineno=468, col_offset=46)], [], None, None, lineno=468, col_offset=32), lineno=468, col_offset=20), Assign([Name('value', Store(), lineno=469, col_offset=20)], Call(Name('converter', Load(), lineno=469, col_offset=28), [Name('suffix', Load(), lineno=469, col_offset=38)], [], None, None, lineno=469, col_offset=28), lineno=469, col_offset=20)], [], lineno=466, col_offset=16)], [], lineno=462, col_offset=12)], [], lineno=460, col_offset=13)], lineno=456, col_offset=13)], lineno=453, col_offset=13)], lineno=450, col_offset=8), Return(Name('value', Load(), lineno=470, col_offset=15), lineno=470, col_offset=8)], [], lineno=444, col_offset=4), FunctionDef('configure_custom', arguments([Name('self', Param(), lineno=472, col_offset=25), Name('config', Param(), lineno=472, col_offset=31)], None, None, []), [Expr(Str('Configure an object with a user-supplied factory.', lineno=473, col_offset=8), lineno=473, col_offset=8), Assign([Name('c', Store(), lineno=474, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=474, col_offset=12), 'pop', Load(), lineno=474, col_offset=12), [Str('()', lineno=474, col_offset=23)], [], None, None, lineno=474, col_offset=12), lineno=474, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=475, col_offset=15), [Name('c', Load(), lineno=475, col_offset=23), Str('__call__', lineno=475, col_offset=26)], [], None, None, lineno=475, col_offset=15), lineno=475, col_offset=11), Call(Name('hasattr', Load(), lineno=475, col_offset=42), [Name('types', Load(), lineno=475, col_offset=50), Str('ClassType', lineno=475, col_offset=57)], [], None, None, lineno=475, col_offset=42), Compare(Call(Name('type', Load(), lineno=475, col_offset=74), [Name('c', Load(), lineno=475, col_offset=79)], [], None, None, lineno=475, col_offset=74), [NotEq()], [Attribute(Name('types', Load(), lineno=475, col_offset=85), 'ClassType', Load(), lineno=475, col_offset=85)], lineno=475, col_offset=74)], lineno=475, col_offset=11), [Assign([Name('c', Store(), lineno=476, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=476, col_offset=16), 'resolve', Load(), lineno=476, col_offset=16), [Name('c', Load(), lineno=476, col_offset=29)], [], None, None, lineno=476, col_offset=16), lineno=476, col_offset=12)], [], lineno=475, col_offset=8), Assign([Name('props', Store(), lineno=477, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=477, col_offset=16), 'pop', Load(), lineno=477, col_offset=16), [Str('.', lineno=477, col_offset=27), Name('None', Load(), lineno=477, col_offset=32)], [], None, None, lineno=477, col_offset=16), lineno=477, col_offset=8), Assign([Name('kwargs', Store(), lineno=479, col_offset=8)], Call(Name('dict', Load(), lineno=479, col_offset=17), [ListComp(Tuple([Name('k', Load(), lineno=479, col_offset=24), Subscript(Name('config', Load(), lineno=479, col_offset=27), Index(Name('k', Load(), lineno=479, col_offset=34)), Load(), lineno=479, col_offset=27)], Load(), lineno=479, col_offset=24), [comprehension(Name('k', Store(), lineno=479, col_offset=42), Name('config', Load(), lineno=479, col_offset=47), [Call(Name('valid_ident', Load(), lineno=479, col_offset=57), [Name('k', Load(), lineno=479, col_offset=69)], [], None, None, lineno=479, col_offset=57)])], lineno=479, col_offset=23)], [], None, None, lineno=479, col_offset=17), lineno=479, col_offset=8), Assign([Name('result', Store(), lineno=480, col_offset=8)], Call(Name('c', Load(), lineno=480, col_offset=17), [], [], None, Name('kwargs', Load(), lineno=480, col_offset=21), lineno=480, col_offset=17), lineno=480, col_offset=8), If(Name('props', Load(), lineno=481, col_offset=11), [For(Tuple([Name('name', Store(), lineno=482, col_offset=16), Name('value', Store(), lineno=482, col_offset=22)], Store(), lineno=482, col_offset=16), Call(Attribute(Name('props', Load(), lineno=482, col_offset=31), 'items', Load(), lineno=482, col_offset=31), [], [], None, None, lineno=482, col_offset=31), [Expr(Call(Name('setattr', Load(), lineno=483, col_offset=16), [Name('result', Load(), lineno=483, col_offset=24), Name('name', Load(), lineno=483, col_offset=32), Name('value', Load(), lineno=483, col_offset=38)], [], None, None, lineno=483, col_offset=16), lineno=483, col_offset=16)], [], lineno=482, col_offset=12)], [], lineno=481, col_offset=8), Return(Name('result', Load(), lineno=484, col_offset=15), lineno=484, col_offset=8)], [], lineno=472, col_offset=4), FunctionDef('as_tuple', arguments([Name('self', Param(), lineno=486, col_offset=17), Name('value', Param(), lineno=486, col_offset=23)], None, None, []), [Expr(Str('Utility function which converts lists to tuples.', lineno=487, col_offset=8), lineno=487, col_offset=8), If(Call(Name('isinstance', Load(), lineno=488, col_offset=11), [Name('value', Load(), lineno=488, col_offset=22), Name('list', Load(), lineno=488, col_offset=29)], [], None, None, lineno=488, col_offset=11), [Assign([Name('value', Store(), lineno=489, col_offset=12)], Call(Name('tuple', Load(), lineno=489, col_offset=20), [Name('value', Load(), lineno=489, col_offset=26)], [], None, None, lineno=489, col_offset=20), lineno=489, col_offset=12)], [], lineno=488, col_offset=8), Return(Name('value', Load(), lineno=490, col_offset=15), lineno=490, col_offset=8)], [], lineno=486, col_offset=4)], [], lineno=359, col_offset=0), ClassDef('DictConfigurator', [Name('BaseConfigurator', Load(), lineno=492, col_offset=23)], [Expr(Str('\n    Configure logging using a dictionary-like object to describe the\n    configuration.\n    ', lineno=496, col_offset=-1), lineno=496, col_offset=-1), FunctionDef('configure', arguments([Name('self', Param(), lineno=498, col_offset=18)], None, None, []), [Expr(Str('Do the configuration.', lineno=499, col_offset=8), lineno=499, col_offset=8), Assign([Name('config', Store(), lineno=501, col_offset=8)], Attribute(Name('self', Load(), lineno=501, col_offset=17), 'config', Load(), lineno=501, col_offset=17), lineno=501, col_offset=8), If(Compare(Str('version', lineno=502, col_offset=11), [NotIn()], [Name('config', Load(), lineno=502, col_offset=28)], lineno=502, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=503, col_offset=18), [Str("dictionary doesn't specify a version", lineno=503, col_offset=29)], [], None, None, lineno=503, col_offset=18), None, None, lineno=503, col_offset=12)], [], lineno=502, col_offset=8), If(Compare(Subscript(Name('config', Load(), lineno=504, col_offset=11), Index(Str('version', lineno=504, col_offset=18)), Load(), lineno=504, col_offset=11), [NotEq()], [Num(1, lineno=504, col_offset=32)], lineno=504, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=505, col_offset=18), [BinOp(Str('Unsupported version: %s', lineno=505, col_offset=29), Mod(), Subscript(Name('config', Load(), lineno=505, col_offset=57), Index(Str('version', lineno=505, col_offset=64)), Load(), lineno=505, col_offset=57), lineno=505, col_offset=29)], [], None, None, lineno=505, col_offset=18), None, None, lineno=505, col_offset=12)], [], lineno=504, col_offset=8), Assign([Name('incremental', Store(), lineno=506, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=506, col_offset=22), 'pop', Load(), lineno=506, col_offset=22), [Str('incremental', lineno=506, col_offset=33), Name('False', Load(), lineno=506, col_offset=48)], [], None, None, lineno=506, col_offset=22), lineno=506, col_offset=8), Assign([Name('EMPTY_DICT', Store(), lineno=507, col_offset=8)], Dict([], [], lineno=507, col_offset=21), lineno=507, col_offset=8), Expr(Call(Attribute(Name('logging', Load(), lineno=508, col_offset=8), '_acquireLock', Load(), lineno=508, col_offset=8), [], [], None, None, lineno=508, col_offset=8), lineno=508, col_offset=8), TryFinally([If(Name('incremental', Load(), lineno=510, col_offset=15), [Assign([Name('handlers', Store(), lineno=511, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=511, col_offset=27), 'get', Load(), lineno=511, col_offset=27), [Str('handlers', lineno=511, col_offset=38), Name('EMPTY_DICT', Load(), lineno=511, col_offset=50)], [], None, None, lineno=511, col_offset=27), lineno=511, col_offset=16), For(Name('name', Store(), lineno=512, col_offset=20), Name('handlers', Load(), lineno=512, col_offset=28), [If(Compare(Name('name', Load(), lineno=513, col_offset=23), [NotIn()], [Attribute(Name('logging', Load(), lineno=513, col_offset=35), '_handlers', Load(), lineno=513, col_offset=35)], lineno=513, col_offset=23), [Raise(Call(Name('ValueError', Load(), lineno=514, col_offset=30), [BinOp(Str('No handler found with name %r', lineno=514, col_offset=41), Mod(), Name('name', Load(), lineno=515, col_offset=54), lineno=514, col_offset=41)], [], None, None, lineno=514, col_offset=30), None, None, lineno=514, col_offset=24)], [TryExcept([Assign([Name('handler', Store(), lineno=518, col_offset=28)], Subscript(Attribute(Name('logging', Load(), lineno=518, col_offset=38), '_handlers', Load(), lineno=518, col_offset=38), Index(Name('name', Load(), lineno=518, col_offset=56)), Load(), lineno=518, col_offset=38), lineno=518, col_offset=28), Assign([Name('handler_config', Store(), lineno=519, col_offset=28)], Subscript(Name('handlers', Load(), lineno=519, col_offset=45), Index(Name('name', Load(), lineno=519, col_offset=54)), Load(), lineno=519, col_offset=45), lineno=519, col_offset=28), Assign([Name('level', Store(), lineno=520, col_offset=28)], Call(Attribute(Name('handler_config', Load(), lineno=520, col_offset=36), 'get', Load(), lineno=520, col_offset=36), [Str('level', lineno=520, col_offset=55), Name('None', Load(), lineno=520, col_offset=64)], [], None, None, lineno=520, col_offset=36), lineno=520, col_offset=28), If(Name('level', Load(), lineno=521, col_offset=31), [Expr(Call(Attribute(Name('handler', Load(), lineno=522, col_offset=32), 'setLevel', Load(), lineno=522, col_offset=32), [Call(Attribute(Name('logging', Load(), lineno=522, col_offset=49), '_checkLevel', Load(), lineno=522, col_offset=49), [Name('level', Load(), lineno=522, col_offset=69)], [], None, None, lineno=522, col_offset=49)], [], None, None, lineno=522, col_offset=32), lineno=522, col_offset=32)], [], lineno=521, col_offset=28)], [ExceptHandler(Name('StandardError', Load(), lineno=523, col_offset=31), Name('e', Store(), lineno=523, col_offset=46), [Raise(Call(Name('ValueError', Load(), lineno=524, col_offset=34), [BinOp(Str('Unable to configure handler %r: %s', lineno=524, col_offset=45), Mod(), Tuple([Name('name', Load(), lineno=525, col_offset=57), Name('e', Load(), lineno=525, col_offset=63)], Load(), lineno=525, col_offset=57), lineno=524, col_offset=45)], [], None, None, lineno=524, col_offset=34), None, None, lineno=524, col_offset=28)], lineno=523, col_offset=24)], [], lineno=517, col_offset=24)], lineno=513, col_offset=20)], [], lineno=512, col_offset=16), Assign([Name('loggers', Store(), lineno=526, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=526, col_offset=26), 'get', Load(), lineno=526, col_offset=26), [Str('loggers', lineno=526, col_offset=37), Name('EMPTY_DICT', Load(), lineno=526, col_offset=48)], [], None, None, lineno=526, col_offset=26), lineno=526, col_offset=16), For(Name('name', Store(), lineno=527, col_offset=20), Name('loggers', Load(), lineno=527, col_offset=28), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=24), 'configure_logger', Load(), lineno=529, col_offset=24), [Name('name', Load(), lineno=529, col_offset=46), Subscript(Name('loggers', Load(), lineno=529, col_offset=52), Index(Name('name', Load(), lineno=529, col_offset=60)), Load(), lineno=529, col_offset=52), Name('True', Load(), lineno=529, col_offset=67)], [], None, None, lineno=529, col_offset=24), lineno=529, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=530, col_offset=27), Name('e', Store(), lineno=530, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=531, col_offset=30), [BinOp(Str('Unable to configure logger %r: %s', lineno=531, col_offset=41), Mod(), Tuple([Name('name', Load(), lineno=532, col_offset=53), Name('e', Load(), lineno=532, col_offset=59)], Load(), lineno=532, col_offset=53), lineno=531, col_offset=41)], [], None, None, lineno=531, col_offset=30), None, None, lineno=531, col_offset=24)], lineno=530, col_offset=20)], [], lineno=528, col_offset=20)], [], lineno=527, col_offset=16), Assign([Name('root', Store(), lineno=533, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=533, col_offset=23), 'get', Load(), lineno=533, col_offset=23), [Str('root', lineno=533, col_offset=34), Name('None', Load(), lineno=533, col_offset=42)], [], None, None, lineno=533, col_offset=23), lineno=533, col_offset=16), If(Name('root', Load(), lineno=534, col_offset=19), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=536, col_offset=24), 'configure_root', Load(), lineno=536, col_offset=24), [Name('root', Load(), lineno=536, col_offset=44), Name('True', Load(), lineno=536, col_offset=50)], [], None, None, lineno=536, col_offset=24), lineno=536, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=537, col_offset=27), Name('e', Store(), lineno=537, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=538, col_offset=30), [BinOp(Str('Unable to configure root logger: %s', lineno=538, col_offset=41), Mod(), Name('e', Load(), lineno=539, col_offset=56), lineno=538, col_offset=41)], [], None, None, lineno=538, col_offset=30), None, None, lineno=538, col_offset=24)], lineno=537, col_offset=20)], [], lineno=535, col_offset=20)], [], lineno=534, col_offset=16)], [Assign([Name('disable_existing', Store(), lineno=541, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=541, col_offset=35), 'pop', Load(), lineno=541, col_offset=35), [Str('disable_existing_loggers', lineno=541, col_offset=46), Name('True', Load(), lineno=541, col_offset=74)], [], None, None, lineno=541, col_offset=35), lineno=541, col_offset=16), Expr(Call(Attribute(Attribute(Name('logging', Load(), lineno=543, col_offset=16), '_handlers', Load(), lineno=543, col_offset=16), 'clear', Load(), lineno=543, col_offset=16), [], [], None, None, lineno=543, col_offset=16), lineno=543, col_offset=16), Delete([Subscript(Attribute(Name('logging', Load(), lineno=544, col_offset=20), '_handlerList', Load(), lineno=544, col_offset=20), Slice(None, None, None), Del(), lineno=544, col_offset=20)], lineno=544, col_offset=16), Assign([Name('formatters', Store(), lineno=547, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=547, col_offset=29), 'get', Load(), lineno=547, col_offset=29), [Str('formatters', lineno=547, col_offset=40), Name('EMPTY_DICT', Load(), lineno=547, col_offset=54)], [], None, None, lineno=547, col_offset=29), lineno=547, col_offset=16), For(Name('name', Store(), lineno=548, col_offset=20), Name('formatters', Load(), lineno=548, col_offset=28), [TryExcept([Assign([Subscript(Name('formatters', Load(), lineno=550, col_offset=24), Index(Name('name', Load(), lineno=550, col_offset=35)), Store(), lineno=550, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=550, col_offset=43), 'configure_formatter', Load(), lineno=550, col_offset=43), [Subscript(Name('formatters', Load(), lineno=551, col_offset=60), Index(Name('name', Load(), lineno=551, col_offset=71)), Load(), lineno=551, col_offset=60)], [], None, None, lineno=550, col_offset=43), lineno=550, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=552, col_offset=27), Name('e', Store(), lineno=552, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=553, col_offset=30), [BinOp(Str('Unable to configure formatter %r: %s', lineno=553, col_offset=41), Mod(), Tuple([Name('name', Load(), lineno=554, col_offset=63), Name('e', Load(), lineno=554, col_offset=69)], Load(), lineno=554, col_offset=63), lineno=553, col_offset=41)], [], None, None, lineno=553, col_offset=30), None, None, lineno=553, col_offset=24)], lineno=552, col_offset=20)], [], lineno=549, col_offset=20)], [], lineno=548, col_offset=16), Assign([Name('filters', Store(), lineno=556, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=556, col_offset=26), 'get', Load(), lineno=556, col_offset=26), [Str('filters', lineno=556, col_offset=37), Name('EMPTY_DICT', Load(), lineno=556, col_offset=48)], [], None, None, lineno=556, col_offset=26), lineno=556, col_offset=16), For(Name('name', Store(), lineno=557, col_offset=20), Name('filters', Load(), lineno=557, col_offset=28), [TryExcept([Assign([Subscript(Name('filters', Load(), lineno=559, col_offset=24), Index(Name('name', Load(), lineno=559, col_offset=32)), Store(), lineno=559, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=559, col_offset=40), 'configure_filter', Load(), lineno=559, col_offset=40), [Subscript(Name('filters', Load(), lineno=559, col_offset=62), Index(Name('name', Load(), lineno=559, col_offset=70)), Load(), lineno=559, col_offset=62)], [], None, None, lineno=559, col_offset=40), lineno=559, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=560, col_offset=27), Name('e', Store(), lineno=560, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=561, col_offset=30), [BinOp(Str('Unable to configure filter %r: %s', lineno=561, col_offset=41), Mod(), Tuple([Name('name', Load(), lineno=562, col_offset=60), Name('e', Load(), lineno=562, col_offset=66)], Load(), lineno=562, col_offset=60), lineno=561, col_offset=41)], [], None, None, lineno=561, col_offset=30), None, None, lineno=561, col_offset=24)], lineno=560, col_offset=20)], [], lineno=558, col_offset=20)], [], lineno=557, col_offset=16), Assign([Name('handlers', Store(), lineno=567, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=567, col_offset=27), 'get', Load(), lineno=567, col_offset=27), [Str('handlers', lineno=567, col_offset=38), Name('EMPTY_DICT', Load(), lineno=567, col_offset=50)], [], None, None, lineno=567, col_offset=27), lineno=567, col_offset=16), For(Name('name', Store(), lineno=568, col_offset=20), Call(Name('sorted', Load(), lineno=568, col_offset=28), [Name('handlers', Load(), lineno=568, col_offset=35)], [], None, None, lineno=568, col_offset=28), [TryExcept([Assign([Name('handler', Store(), lineno=570, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=570, col_offset=34), 'configure_handler', Load(), lineno=570, col_offset=34), [Subscript(Name('handlers', Load(), lineno=570, col_offset=57), Index(Name('name', Load(), lineno=570, col_offset=66)), Load(), lineno=570, col_offset=57)], [], None, None, lineno=570, col_offset=34), lineno=570, col_offset=24), Assign([Attribute(Name('handler', Load(), lineno=571, col_offset=24), 'name', Store(), lineno=571, col_offset=24)], Name('name', Load(), lineno=571, col_offset=39), lineno=571, col_offset=24), Assign([Subscript(Name('handlers', Load(), lineno=572, col_offset=24), Index(Name('name', Load(), lineno=572, col_offset=33)), Store(), lineno=572, col_offset=24)], Name('handler', Load(), lineno=572, col_offset=41), lineno=572, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=573, col_offset=27), Name('e', Store(), lineno=573, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=574, col_offset=30), [BinOp(Str('Unable to configure handler %r: %s', lineno=574, col_offset=41), Mod(), Tuple([Name('name', Load(), lineno=575, col_offset=53), Name('e', Load(), lineno=575, col_offset=59)], Load(), lineno=575, col_offset=53), lineno=574, col_offset=41)], [], None, None, lineno=574, col_offset=30), None, None, lineno=574, col_offset=24)], lineno=573, col_offset=20)], [], lineno=569, col_offset=20)], [], lineno=568, col_offset=16), Assign([Name('root', Store(), lineno=586, col_offset=16)], Attribute(Name('logging', Load(), lineno=586, col_offset=23), 'root', Load(), lineno=586, col_offset=23), lineno=586, col_offset=16), Assign([Name('existing', Store(), lineno=587, col_offset=16)], Call(Attribute(Attribute(Attribute(Name('root', Load(), lineno=587, col_offset=27), 'manager', Load(), lineno=587, col_offset=27), 'loggerDict', Load(), lineno=587, col_offset=27), 'keys', Load(), lineno=587, col_offset=27), [], [], None, None, lineno=587, col_offset=27), lineno=587, col_offset=16), Expr(Call(Attribute(Name('existing', Load(), lineno=592, col_offset=16), 'sort', Load(), lineno=592, col_offset=16), [], [keyword('key', Name('_encoded', Load(), lineno=592, col_offset=34))], None, None, lineno=592, col_offset=16), lineno=592, col_offset=16), Assign([Name('child_loggers', Store(), lineno=595, col_offset=16)], List([], Load(), lineno=595, col_offset=32), lineno=595, col_offset=16), Assign([Name('loggers', Store(), lineno=597, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=597, col_offset=26), 'get', Load(), lineno=597, col_offset=26), [Str('loggers', lineno=597, col_offset=37), Name('EMPTY_DICT', Load(), lineno=597, col_offset=48)], [], None, None, lineno=597, col_offset=26), lineno=597, col_offset=16), For(Name('name', Store(), lineno=598, col_offset=20), Name('loggers', Load(), lineno=598, col_offset=28), [If(Compare(Name('name', Load(), lineno=599, col_offset=23), [In()], [Name('existing', Load(), lineno=599, col_offset=31)], lineno=599, col_offset=23), [Assign([Name('i', Store(), lineno=600, col_offset=24)], Call(Attribute(Name('existing', Load(), lineno=600, col_offset=28), 'index', Load(), lineno=600, col_offset=28), [Name('name', Load(), lineno=600, col_offset=43)], [], None, None, lineno=600, col_offset=28), lineno=600, col_offset=24), Assign([Name('prefixed', Store(), lineno=601, col_offset=24)], BinOp(Name('name', Load(), lineno=601, col_offset=35), Add(), Str('.', lineno=601, col_offset=42), lineno=601, col_offset=35), lineno=601, col_offset=24), Assign([Name('pflen', Store(), lineno=602, col_offset=24)], Call(Name('len', Load(), lineno=602, col_offset=32), [Name('prefixed', Load(), lineno=602, col_offset=36)], [], None, None, lineno=602, col_offset=32), lineno=602, col_offset=24), Assign([Name('num_existing', Store(), lineno=603, col_offset=24)], Call(Name('len', Load(), lineno=603, col_offset=39), [Name('existing', Load(), lineno=603, col_offset=43)], [], None, None, lineno=603, col_offset=39), lineno=603, col_offset=24), Assign([Name('i', Store(), lineno=604, col_offset=24)], BinOp(Name('i', Load(), lineno=604, col_offset=28), Add(), Num(1, lineno=604, col_offset=32), lineno=604, col_offset=28), lineno=604, col_offset=24), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=605, col_offset=31), [Lt()], [Name('num_existing', Load(), lineno=605, col_offset=35)], lineno=605, col_offset=31), Compare(Subscript(Subscript(Name('existing', Load(), lineno=606, col_offset=31), Index(Name('i', Load(), lineno=606, col_offset=40)), Load(), lineno=606, col_offset=31), Slice(None, Name('pflen', Load(), lineno=606, col_offset=44), None), Load(), lineno=606, col_offset=31), [Eq()], [Name('prefixed', Load(), lineno=606, col_offset=54)], lineno=606, col_offset=31)], lineno=605, col_offset=30), [Expr(Call(Attribute(Name('child_loggers', Load(), lineno=607, col_offset=28), 'append', Load(), lineno=607, col_offset=28), [Subscript(Name('existing', Load(), lineno=607, col_offset=49), Index(Name('i', Load(), lineno=607, col_offset=58)), Load(), lineno=607, col_offset=49)], [], None, None, lineno=607, col_offset=28), lineno=607, col_offset=28), Assign([Name('i', Store(), lineno=608, col_offset=28)], BinOp(Name('i', Load(), lineno=608, col_offset=32), Add(), Num(1, lineno=608, col_offset=36), lineno=608, col_offset=32), lineno=608, col_offset=28)], [], lineno=605, col_offset=24), Expr(Call(Attribute(Name('existing', Load(), lineno=609, col_offset=24), 'remove', Load(), lineno=609, col_offset=24), [Name('name', Load(), lineno=609, col_offset=40)], [], None, None, lineno=609, col_offset=24), lineno=609, col_offset=24)], [], lineno=599, col_offset=20), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=611, col_offset=24), 'configure_logger', Load(), lineno=611, col_offset=24), [Name('name', Load(), lineno=611, col_offset=46), Subscript(Name('loggers', Load(), lineno=611, col_offset=52), Index(Name('name', Load(), lineno=611, col_offset=60)), Load(), lineno=611, col_offset=52)], [], None, None, lineno=611, col_offset=24), lineno=611, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=612, col_offset=27), Name('e', Store(), lineno=612, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=613, col_offset=30), [BinOp(Str('Unable to configure logger %r: %s', lineno=613, col_offset=41), Mod(), Tuple([Name('name', Load(), lineno=614, col_offset=53), Name('e', Load(), lineno=614, col_offset=59)], Load(), lineno=614, col_offset=53), lineno=613, col_offset=41)], [], None, None, lineno=613, col_offset=30), None, None, lineno=613, col_offset=24)], lineno=612, col_offset=20)], [], lineno=610, col_offset=20)], [], lineno=598, col_offset=16), For(Name('log', Store(), lineno=621, col_offset=20), Name('existing', Load(), lineno=621, col_offset=27), [Assign([Name('logger', Store(), lineno=622, col_offset=20)], Subscript(Attribute(Attribute(Name('root', Load(), lineno=622, col_offset=29), 'manager', Load(), lineno=622, col_offset=29), 'loggerDict', Load(), lineno=622, col_offset=29), Index(Name('log', Load(), lineno=622, col_offset=53)), Load(), lineno=622, col_offset=29), lineno=622, col_offset=20), If(Compare(Name('log', Load(), lineno=623, col_offset=23), [In()], [Name('child_loggers', Load(), lineno=623, col_offset=30)], lineno=623, col_offset=23), [Assign([Attribute(Name('logger', Load(), lineno=624, col_offset=24), 'level', Store(), lineno=624, col_offset=24)], Attribute(Name('logging', Load(), lineno=624, col_offset=39), 'NOTSET', Load(), lineno=624, col_offset=39), lineno=624, col_offset=24), Assign([Attribute(Name('logger', Load(), lineno=625, col_offset=24), 'handlers', Store(), lineno=625, col_offset=24)], List([], Load(), lineno=625, col_offset=42), lineno=625, col_offset=24), Assign([Attribute(Name('logger', Load(), lineno=626, col_offset=24), 'propagate', Store(), lineno=626, col_offset=24)], Name('True', Load(), lineno=626, col_offset=43), lineno=626, col_offset=24)], [If(Name('disable_existing', Load(), lineno=627, col_offset=25), [Assign([Attribute(Name('logger', Load(), lineno=628, col_offset=24), 'disabled', Store(), lineno=628, col_offset=24)], Name('True', Load(), lineno=628, col_offset=42), lineno=628, col_offset=24)], [], lineno=627, col_offset=25)], lineno=623, col_offset=20)], [], lineno=621, col_offset=16), Assign([Name('root', Store(), lineno=631, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=631, col_offset=23), 'get', Load(), lineno=631, col_offset=23), [Str('root', lineno=631, col_offset=34), Name('None', Load(), lineno=631, col_offset=42)], [], None, None, lineno=631, col_offset=23), lineno=631, col_offset=16), If(Name('root', Load(), lineno=632, col_offset=19), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=634, col_offset=24), 'configure_root', Load(), lineno=634, col_offset=24), [Name('root', Load(), lineno=634, col_offset=44)], [], None, None, lineno=634, col_offset=24), lineno=634, col_offset=24)], [ExceptHandler(Name('StandardError', Load(), lineno=635, col_offset=27), Name('e', Store(), lineno=635, col_offset=42), [Raise(Call(Name('ValueError', Load(), lineno=636, col_offset=30), [BinOp(Str('Unable to configure root logger: %s', lineno=636, col_offset=41), Mod(), Name('e', Load(), lineno=637, col_offset=56), lineno=636, col_offset=41)], [], None, None, lineno=636, col_offset=30), None, None, lineno=636, col_offset=24)], lineno=635, col_offset=20)], [], lineno=633, col_offset=20)], [], lineno=632, col_offset=16)], lineno=510, col_offset=12)], [Expr(Call(Attribute(Name('logging', Load(), lineno=639, col_offset=12), '_releaseLock', Load(), lineno=639, col_offset=12), [], [], None, None, lineno=639, col_offset=12), lineno=639, col_offset=12)], lineno=509, col_offset=8)], [], lineno=498, col_offset=4), FunctionDef('configure_formatter', arguments([Name('self', Param(), lineno=641, col_offset=28), Name('config', Param(), lineno=641, col_offset=34)], None, None, []), [Expr(Str('Configure a formatter from a dictionary.', lineno=642, col_offset=8), lineno=642, col_offset=8), If(Compare(Str('()', lineno=643, col_offset=11), [In()], [Name('config', Load(), lineno=643, col_offset=19)], lineno=643, col_offset=11), [Assign([Name('factory', Store(), lineno=644, col_offset=12)], Subscript(Name('config', Load(), lineno=644, col_offset=22), Index(Str('()', lineno=644, col_offset=29)), Load(), lineno=644, col_offset=22), lineno=644, col_offset=12), TryExcept([Assign([Name('result', Store(), lineno=646, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=646, col_offset=25), 'configure_custom', Load(), lineno=646, col_offset=25), [Name('config', Load(), lineno=646, col_offset=47)], [], None, None, lineno=646, col_offset=25), lineno=646, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=647, col_offset=19), Name('te', Store(), lineno=647, col_offset=30), [If(Compare(Str("'format'", lineno=648, col_offset=19), [NotIn()], [Call(Name('str', Load(), lineno=648, col_offset=37), [Name('te', Load(), lineno=648, col_offset=41)], [], None, None, lineno=648, col_offset=37)], lineno=648, col_offset=19), [Raise(None, None, None, lineno=649, col_offset=20)], [], lineno=648, col_offset=16), Assign([Subscript(Name('config', Load(), lineno=654, col_offset=16), Index(Str('fmt', lineno=654, col_offset=23)), Store(), lineno=654, col_offset=16)], Call(Attribute(Name('config', Load(), lineno=654, col_offset=32), 'pop', Load(), lineno=654, col_offset=32), [Str('format', lineno=654, col_offset=43)], [], None, None, lineno=654, col_offset=32), lineno=654, col_offset=16), Assign([Subscript(Name('config', Load(), lineno=655, col_offset=16), Index(Str('()', lineno=655, col_offset=23)), Store(), lineno=655, col_offset=16)], Name('factory', Load(), lineno=655, col_offset=31), lineno=655, col_offset=16), Assign([Name('result', Store(), lineno=656, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=656, col_offset=25), 'configure_custom', Load(), lineno=656, col_offset=25), [Name('config', Load(), lineno=656, col_offset=47)], [], None, None, lineno=656, col_offset=25), lineno=656, col_offset=16)], lineno=647, col_offset=12)], [], lineno=645, col_offset=12)], [Assign([Name('fmt', Store(), lineno=658, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=658, col_offset=18), 'get', Load(), lineno=658, col_offset=18), [Str('format', lineno=658, col_offset=29), Name('None', Load(), lineno=658, col_offset=39)], [], None, None, lineno=658, col_offset=18), lineno=658, col_offset=12), Assign([Name('dfmt', Store(), lineno=659, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=659, col_offset=19), 'get', Load(), lineno=659, col_offset=19), [Str('datefmt', lineno=659, col_offset=30), Name('None', Load(), lineno=659, col_offset=41)], [], None, None, lineno=659, col_offset=19), lineno=659, col_offset=12), Assign([Name('result', Store(), lineno=660, col_offset=12)], Call(Attribute(Name('logging', Load(), lineno=660, col_offset=21), 'Formatter', Load(), lineno=660, col_offset=21), [Name('fmt', Load(), lineno=660, col_offset=39), Name('dfmt', Load(), lineno=660, col_offset=44)], [], None, None, lineno=660, col_offset=21), lineno=660, col_offset=12)], lineno=643, col_offset=8), Return(Name('result', Load(), lineno=661, col_offset=15), lineno=661, col_offset=8)], [], lineno=641, col_offset=4), FunctionDef('configure_filter', arguments([Name('self', Param(), lineno=663, col_offset=25), Name('config', Param(), lineno=663, col_offset=31)], None, None, []), [Expr(Str('Configure a filter from a dictionary.', lineno=664, col_offset=8), lineno=664, col_offset=8), If(Compare(Str('()', lineno=665, col_offset=11), [In()], [Name('config', Load(), lineno=665, col_offset=19)], lineno=665, col_offset=11), [Assign([Name('result', Store(), lineno=666, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=666, col_offset=21), 'configure_custom', Load(), lineno=666, col_offset=21), [Name('config', Load(), lineno=666, col_offset=43)], [], None, None, lineno=666, col_offset=21), lineno=666, col_offset=12)], [Assign([Name('name', Store(), lineno=668, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=668, col_offset=19), 'get', Load(), lineno=668, col_offset=19), [Str('name', lineno=668, col_offset=30), Str('', lineno=668, col_offset=38)], [], None, None, lineno=668, col_offset=19), lineno=668, col_offset=12), Assign([Name('result', Store(), lineno=669, col_offset=12)], Call(Attribute(Name('logging', Load(), lineno=669, col_offset=21), 'Filter', Load(), lineno=669, col_offset=21), [Name('name', Load(), lineno=669, col_offset=36)], [], None, None, lineno=669, col_offset=21), lineno=669, col_offset=12)], lineno=665, col_offset=8), Return(Name('result', Load(), lineno=670, col_offset=15), lineno=670, col_offset=8)], [], lineno=663, col_offset=4), FunctionDef('add_filters', arguments([Name('self', Param(), lineno=672, col_offset=20), Name('filterer', Param(), lineno=672, col_offset=26), Name('filters', Param(), lineno=672, col_offset=36)], None, None, []), [Expr(Str('Add filters to a filterer from a list of names.', lineno=673, col_offset=8), lineno=673, col_offset=8), For(Name('f', Store(), lineno=674, col_offset=12), Name('filters', Load(), lineno=674, col_offset=17), [TryExcept([Expr(Call(Attribute(Name('filterer', Load(), lineno=676, col_offset=16), 'addFilter', Load(), lineno=676, col_offset=16), [Subscript(Subscript(Attribute(Name('self', Load(), lineno=676, col_offset=35), 'config', Load(), lineno=676, col_offset=35), Index(Str('filters', lineno=676, col_offset=47)), Load(), lineno=676, col_offset=35), Index(Name('f', Load(), lineno=676, col_offset=58)), Load(), lineno=676, col_offset=35)], [], None, None, lineno=676, col_offset=16), lineno=676, col_offset=16)], [ExceptHandler(Name('StandardError', Load(), lineno=677, col_offset=19), Name('e', Store(), lineno=677, col_offset=34), [Raise(Call(Name('ValueError', Load(), lineno=678, col_offset=22), [BinOp(Str('Unable to add filter %r: %s', lineno=678, col_offset=33), Mod(), Tuple([Name('f', Load(), lineno=678, col_offset=66), Name('e', Load(), lineno=678, col_offset=69)], Load(), lineno=678, col_offset=66), lineno=678, col_offset=33)], [], None, None, lineno=678, col_offset=22), None, None, lineno=678, col_offset=16)], lineno=677, col_offset=12)], [], lineno=675, col_offset=12)], [], lineno=674, col_offset=8)], [], lineno=672, col_offset=4), FunctionDef('configure_handler', arguments([Name('self', Param(), lineno=680, col_offset=26), Name('config', Param(), lineno=680, col_offset=32)], None, None, []), [Expr(Str('Configure a handler from a dictionary.', lineno=681, col_offset=8), lineno=681, col_offset=8), Assign([Name('formatter', Store(), lineno=682, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=682, col_offset=20), 'pop', Load(), lineno=682, col_offset=20), [Str('formatter', lineno=682, col_offset=31), Name('None', Load(), lineno=682, col_offset=44)], [], None, None, lineno=682, col_offset=20), lineno=682, col_offset=8), If(Name('formatter', Load(), lineno=683, col_offset=11), [TryExcept([Assign([Name('formatter', Store(), lineno=685, col_offset=16)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=685, col_offset=28), 'config', Load(), lineno=685, col_offset=28), Index(Str('formatters', lineno=685, col_offset=40)), Load(), lineno=685, col_offset=28), Index(Name('formatter', Load(), lineno=685, col_offset=54)), Load(), lineno=685, col_offset=28), lineno=685, col_offset=16)], [ExceptHandler(Name('StandardError', Load(), lineno=686, col_offset=19), Name('e', Store(), lineno=686, col_offset=34), [Raise(Call(Name('ValueError', Load(), lineno=687, col_offset=22), [BinOp(Str('Unable to set formatter %r: %s', lineno=687, col_offset=33), Mod(), Tuple([Name('formatter', Load(), lineno=688, col_offset=45), Name('e', Load(), lineno=688, col_offset=56)], Load(), lineno=688, col_offset=45), lineno=687, col_offset=33)], [], None, None, lineno=687, col_offset=22), None, None, lineno=687, col_offset=16)], lineno=686, col_offset=12)], [], lineno=684, col_offset=12)], [], lineno=683, col_offset=8), Assign([Name('level', Store(), lineno=689, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=689, col_offset=16), 'pop', Load(), lineno=689, col_offset=16), [Str('level', lineno=689, col_offset=27), Name('None', Load(), lineno=689, col_offset=36)], [], None, None, lineno=689, col_offset=16), lineno=689, col_offset=8), Assign([Name('filters', Store(), lineno=690, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=690, col_offset=18), 'pop', Load(), lineno=690, col_offset=18), [Str('filters', lineno=690, col_offset=29), Name('None', Load(), lineno=690, col_offset=40)], [], None, None, lineno=690, col_offset=18), lineno=690, col_offset=8), If(Compare(Str('()', lineno=691, col_offset=11), [In()], [Name('config', Load(), lineno=691, col_offset=19)], lineno=691, col_offset=11), [Assign([Name('c', Store(), lineno=692, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=692, col_offset=16), 'pop', Load(), lineno=692, col_offset=16), [Str('()', lineno=692, col_offset=27)], [], None, None, lineno=692, col_offset=16), lineno=692, col_offset=12), If(BoolOp(And(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=693, col_offset=19), [Name('c', Load(), lineno=693, col_offset=27), Str('__call__', lineno=693, col_offset=30)], [], None, None, lineno=693, col_offset=19), lineno=693, col_offset=15), Call(Name('hasattr', Load(), lineno=693, col_offset=46), [Name('types', Load(), lineno=693, col_offset=54), Str('ClassType', lineno=693, col_offset=61)], [], None, None, lineno=693, col_offset=46), Compare(Call(Name('type', Load(), lineno=693, col_offset=78), [Name('c', Load(), lineno=693, col_offset=83)], [], None, None, lineno=693, col_offset=78), [NotEq()], [Attribute(Name('types', Load(), lineno=693, col_offset=89), 'ClassType', Load(), lineno=693, col_offset=89)], lineno=693, col_offset=78)], lineno=693, col_offset=15), [Assign([Name('c', Store(), lineno=694, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=694, col_offset=20), 'resolve', Load(), lineno=694, col_offset=20), [Name('c', Load(), lineno=694, col_offset=33)], [], None, None, lineno=694, col_offset=20), lineno=694, col_offset=16)], [], lineno=693, col_offset=12), Assign([Name('factory', Store(), lineno=695, col_offset=12)], Name('c', Load(), lineno=695, col_offset=22), lineno=695, col_offset=12)], [Assign([Name('klass', Store(), lineno=697, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=697, col_offset=20), 'resolve', Load(), lineno=697, col_offset=20), [Call(Attribute(Name('config', Load(), lineno=697, col_offset=33), 'pop', Load(), lineno=697, col_offset=33), [Str('class', lineno=697, col_offset=44)], [], None, None, lineno=697, col_offset=33)], [], None, None, lineno=697, col_offset=20), lineno=697, col_offset=12), If(BoolOp(And(), [Call(Name('issubclass', Load(), lineno=699, col_offset=15), [Name('klass', Load(), lineno=699, col_offset=26), Attribute(Attribute(Name('logging', Load(), lineno=699, col_offset=33), 'handlers', Load(), lineno=699, col_offset=33), 'MemoryHandler', Load(), lineno=699, col_offset=33)], [], None, None, lineno=699, col_offset=15), Compare(Str('target', lineno=700, col_offset=16), [In()], [Name('config', Load(), lineno=700, col_offset=28)], lineno=700, col_offset=16)], lineno=699, col_offset=15), [TryExcept([Assign([Subscript(Name('config', Load(), lineno=702, col_offset=20), Index(Str('target', lineno=702, col_offset=27)), Store(), lineno=702, col_offset=20)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=702, col_offset=39), 'config', Load(), lineno=702, col_offset=39), Index(Str('handlers', lineno=702, col_offset=51)), Load(), lineno=702, col_offset=39), Index(Subscript(Name('config', Load(), lineno=702, col_offset=63), Index(Str('target', lineno=702, col_offset=70)), Load(), lineno=702, col_offset=63)), Load(), lineno=702, col_offset=39), lineno=702, col_offset=20)], [ExceptHandler(Name('StandardError', Load(), lineno=703, col_offset=23), Name('e', Store(), lineno=703, col_offset=38), [Raise(Call(Name('ValueError', Load(), lineno=704, col_offset=26), [BinOp(Str('Unable to set target handler %r: %s', lineno=704, col_offset=37), Mod(), Tuple([Subscript(Name('config', Load(), lineno=705, col_offset=49), Index(Str('target', lineno=705, col_offset=56)), Load(), lineno=705, col_offset=49), Name('e', Load(), lineno=705, col_offset=67)], Load(), lineno=705, col_offset=49), lineno=704, col_offset=37)], [], None, None, lineno=704, col_offset=26), None, None, lineno=704, col_offset=20)], lineno=703, col_offset=16)], [], lineno=701, col_offset=16)], [If(BoolOp(And(), [Call(Name('issubclass', Load(), lineno=706, col_offset=17), [Name('klass', Load(), lineno=706, col_offset=28), Attribute(Attribute(Name('logging', Load(), lineno=706, col_offset=35), 'handlers', Load(), lineno=706, col_offset=35), 'SMTPHandler', Load(), lineno=706, col_offset=35)], [], None, None, lineno=706, col_offset=17), Compare(Str('mailhost', lineno=707, col_offset=16), [In()], [Name('config', Load(), lineno=707, col_offset=30)], lineno=707, col_offset=16)], lineno=706, col_offset=17), [Assign([Subscript(Name('config', Load(), lineno=708, col_offset=16), Index(Str('mailhost', lineno=708, col_offset=23)), Store(), lineno=708, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=708, col_offset=37), 'as_tuple', Load(), lineno=708, col_offset=37), [Subscript(Name('config', Load(), lineno=708, col_offset=51), Index(Str('mailhost', lineno=708, col_offset=58)), Load(), lineno=708, col_offset=51)], [], None, None, lineno=708, col_offset=37), lineno=708, col_offset=16)], [If(BoolOp(And(), [Call(Name('issubclass', Load(), lineno=709, col_offset=17), [Name('klass', Load(), lineno=709, col_offset=28), Attribute(Attribute(Name('logging', Load(), lineno=709, col_offset=35), 'handlers', Load(), lineno=709, col_offset=35), 'SysLogHandler', Load(), lineno=709, col_offset=35)], [], None, None, lineno=709, col_offset=17), Compare(Str('address', lineno=710, col_offset=16), [In()], [Name('config', Load(), lineno=710, col_offset=29)], lineno=710, col_offset=16)], lineno=709, col_offset=17), [Assign([Subscript(Name('config', Load(), lineno=711, col_offset=16), Index(Str('address', lineno=711, col_offset=23)), Store(), lineno=711, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=711, col_offset=36), 'as_tuple', Load(), lineno=711, col_offset=36), [Subscript(Name('config', Load(), lineno=711, col_offset=50), Index(Str('address', lineno=711, col_offset=57)), Load(), lineno=711, col_offset=50)], [], None, None, lineno=711, col_offset=36), lineno=711, col_offset=16)], [], lineno=709, col_offset=17)], lineno=706, col_offset=17)], lineno=699, col_offset=12), Assign([Name('factory', Store(), lineno=712, col_offset=12)], Name('klass', Load(), lineno=712, col_offset=22), lineno=712, col_offset=12)], lineno=691, col_offset=8), Assign([Name('kwargs', Store(), lineno=713, col_offset=8)], Call(Name('dict', Load(), lineno=713, col_offset=17), [ListComp(Tuple([Name('k', Load(), lineno=713, col_offset=24), Subscript(Name('config', Load(), lineno=713, col_offset=27), Index(Name('k', Load(), lineno=713, col_offset=34)), Load(), lineno=713, col_offset=27)], Load(), lineno=713, col_offset=24), [comprehension(Name('k', Store(), lineno=713, col_offset=42), Name('config', Load(), lineno=713, col_offset=47), [Call(Name('valid_ident', Load(), lineno=713, col_offset=57), [Name('k', Load(), lineno=713, col_offset=69)], [], None, None, lineno=713, col_offset=57)])], lineno=713, col_offset=23)], [], None, None, lineno=713, col_offset=17), lineno=713, col_offset=8), TryExcept([Assign([Name('result', Store(), lineno=715, col_offset=12)], Call(Name('factory', Load(), lineno=715, col_offset=21), [], [], None, Name('kwargs', Load(), lineno=715, col_offset=31), lineno=715, col_offset=21), lineno=715, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=716, col_offset=15), Name('te', Store(), lineno=716, col_offset=26), [If(Compare(Str("'stream'", lineno=717, col_offset=15), [NotIn()], [Call(Name('str', Load(), lineno=717, col_offset=33), [Name('te', Load(), lineno=717, col_offset=37)], [], None, None, lineno=717, col_offset=33)], lineno=717, col_offset=15), [Raise(None, None, None, lineno=718, col_offset=16)], [], lineno=717, col_offset=12), Assign([Subscript(Name('kwargs', Load(), lineno=723, col_offset=12), Index(Str('strm', lineno=723, col_offset=19)), Store(), lineno=723, col_offset=12)], Call(Attribute(Name('kwargs', Load(), lineno=723, col_offset=29), 'pop', Load(), lineno=723, col_offset=29), [Str('stream', lineno=723, col_offset=40)], [], None, None, lineno=723, col_offset=29), lineno=723, col_offset=12), Assign([Name('result', Store(), lineno=724, col_offset=12)], Call(Name('factory', Load(), lineno=724, col_offset=21), [], [], None, Name('kwargs', Load(), lineno=724, col_offset=31), lineno=724, col_offset=21), lineno=724, col_offset=12)], lineno=716, col_offset=8)], [], lineno=714, col_offset=8), If(Name('formatter', Load(), lineno=725, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=726, col_offset=12), 'setFormatter', Load(), lineno=726, col_offset=12), [Name('formatter', Load(), lineno=726, col_offset=32)], [], None, None, lineno=726, col_offset=12), lineno=726, col_offset=12)], [], lineno=725, col_offset=8), If(Compare(Name('level', Load(), lineno=727, col_offset=11), [IsNot()], [Name('None', Load(), lineno=727, col_offset=24)], lineno=727, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=728, col_offset=12), 'setLevel', Load(), lineno=728, col_offset=12), [Call(Attribute(Name('logging', Load(), lineno=728, col_offset=28), '_checkLevel', Load(), lineno=728, col_offset=28), [Name('level', Load(), lineno=728, col_offset=48)], [], None, None, lineno=728, col_offset=28)], [], None, None, lineno=728, col_offset=12), lineno=728, col_offset=12)], [], lineno=727, col_offset=8), If(Name('filters', Load(), lineno=729, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=730, col_offset=12), 'add_filters', Load(), lineno=730, col_offset=12), [Name('result', Load(), lineno=730, col_offset=29), Name('filters', Load(), lineno=730, col_offset=37)], [], None, None, lineno=730, col_offset=12), lineno=730, col_offset=12)], [], lineno=729, col_offset=8), Return(Name('result', Load(), lineno=731, col_offset=15), lineno=731, col_offset=8)], [], lineno=680, col_offset=4), FunctionDef('add_handlers', arguments([Name('self', Param(), lineno=733, col_offset=21), Name('logger', Param(), lineno=733, col_offset=27), Name('handlers', Param(), lineno=733, col_offset=35)], None, None, []), [Expr(Str('Add handlers to a logger from a list of names.', lineno=734, col_offset=8), lineno=734, col_offset=8), For(Name('h', Store(), lineno=735, col_offset=12), Name('handlers', Load(), lineno=735, col_offset=17), [TryExcept([Expr(Call(Attribute(Name('logger', Load(), lineno=737, col_offset=16), 'addHandler', Load(), lineno=737, col_offset=16), [Subscript(Subscript(Attribute(Name('self', Load(), lineno=737, col_offset=34), 'config', Load(), lineno=737, col_offset=34), Index(Str('handlers', lineno=737, col_offset=46)), Load(), lineno=737, col_offset=34), Index(Name('h', Load(), lineno=737, col_offset=58)), Load(), lineno=737, col_offset=34)], [], None, None, lineno=737, col_offset=16), lineno=737, col_offset=16)], [ExceptHandler(Name('StandardError', Load(), lineno=738, col_offset=19), Name('e', Store(), lineno=738, col_offset=34), [Raise(Call(Name('ValueError', Load(), lineno=739, col_offset=22), [BinOp(Str('Unable to add handler %r: %s', lineno=739, col_offset=33), Mod(), Tuple([Name('h', Load(), lineno=739, col_offset=67), Name('e', Load(), lineno=739, col_offset=70)], Load(), lineno=739, col_offset=67), lineno=739, col_offset=33)], [], None, None, lineno=739, col_offset=22), None, None, lineno=739, col_offset=16)], lineno=738, col_offset=12)], [], lineno=736, col_offset=12)], [], lineno=735, col_offset=8)], [], lineno=733, col_offset=4), FunctionDef('common_logger_config', arguments([Name('self', Param(), lineno=741, col_offset=29), Name('logger', Param(), lineno=741, col_offset=35), Name('config', Param(), lineno=741, col_offset=43), Name('incremental', Param(), lineno=741, col_offset=51)], None, None, [Name('False', Load(), lineno=741, col_offset=63)]), [Expr(Str('\n        Perform configuration which is common to root and non-root loggers.\n        ', lineno=744, col_offset=-1), lineno=744, col_offset=-1), Assign([Name('level', Store(), lineno=745, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=745, col_offset=16), 'get', Load(), lineno=745, col_offset=16), [Str('level', lineno=745, col_offset=27), Name('None', Load(), lineno=745, col_offset=36)], [], None, None, lineno=745, col_offset=16), lineno=745, col_offset=8), If(Compare(Name('level', Load(), lineno=746, col_offset=11), [IsNot()], [Name('None', Load(), lineno=746, col_offset=24)], lineno=746, col_offset=11), [Expr(Call(Attribute(Name('logger', Load(), lineno=747, col_offset=12), 'setLevel', Load(), lineno=747, col_offset=12), [Call(Attribute(Name('logging', Load(), lineno=747, col_offset=28), '_checkLevel', Load(), lineno=747, col_offset=28), [Name('level', Load(), lineno=747, col_offset=48)], [], None, None, lineno=747, col_offset=28)], [], None, None, lineno=747, col_offset=12), lineno=747, col_offset=12)], [], lineno=746, col_offset=8), If(UnaryOp(Not(), Name('incremental', Load(), lineno=748, col_offset=15), lineno=748, col_offset=11), [For(Name('h', Store(), lineno=750, col_offset=16), Subscript(Attribute(Name('logger', Load(), lineno=750, col_offset=21), 'handlers', Load(), lineno=750, col_offset=21), Slice(None, None, None), Load(), lineno=750, col_offset=21), [Expr(Call(Attribute(Name('logger', Load(), lineno=751, col_offset=16), 'removeHandler', Load(), lineno=751, col_offset=16), [Name('h', Load(), lineno=751, col_offset=37)], [], None, None, lineno=751, col_offset=16), lineno=751, col_offset=16)], [], lineno=750, col_offset=12), Assign([Name('handlers', Store(), lineno=752, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=752, col_offset=23), 'get', Load(), lineno=752, col_offset=23), [Str('handlers', lineno=752, col_offset=34), Name('None', Load(), lineno=752, col_offset=46)], [], None, None, lineno=752, col_offset=23), lineno=752, col_offset=12), If(Name('handlers', Load(), lineno=753, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=754, col_offset=16), 'add_handlers', Load(), lineno=754, col_offset=16), [Name('logger', Load(), lineno=754, col_offset=34), Name('handlers', Load(), lineno=754, col_offset=42)], [], None, None, lineno=754, col_offset=16), lineno=754, col_offset=16)], [], lineno=753, col_offset=12), Assign([Name('filters', Store(), lineno=755, col_offset=12)], Call(Attribute(Name('config', Load(), lineno=755, col_offset=22), 'get', Load(), lineno=755, col_offset=22), [Str('filters', lineno=755, col_offset=33), Name('None', Load(), lineno=755, col_offset=44)], [], None, None, lineno=755, col_offset=22), lineno=755, col_offset=12), If(Name('filters', Load(), lineno=756, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=757, col_offset=16), 'add_filters', Load(), lineno=757, col_offset=16), [Name('logger', Load(), lineno=757, col_offset=33), Name('filters', Load(), lineno=757, col_offset=41)], [], None, None, lineno=757, col_offset=16), lineno=757, col_offset=16)], [], lineno=756, col_offset=12)], [], lineno=748, col_offset=8)], [], lineno=741, col_offset=4), FunctionDef('configure_logger', arguments([Name('self', Param(), lineno=759, col_offset=25), Name('name', Param(), lineno=759, col_offset=31), Name('config', Param(), lineno=759, col_offset=37), Name('incremental', Param(), lineno=759, col_offset=45)], None, None, [Name('False', Load(), lineno=759, col_offset=57)]), [Expr(Str('Configure a non-root logger from a dictionary.', lineno=760, col_offset=8), lineno=760, col_offset=8), Assign([Name('logger', Store(), lineno=761, col_offset=8)], Call(Attribute(Name('logging', Load(), lineno=761, col_offset=17), 'getLogger', Load(), lineno=761, col_offset=17), [Name('name', Load(), lineno=761, col_offset=35)], [], None, None, lineno=761, col_offset=17), lineno=761, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=762, col_offset=8), 'common_logger_config', Load(), lineno=762, col_offset=8), [Name('logger', Load(), lineno=762, col_offset=34), Name('config', Load(), lineno=762, col_offset=42), Name('incremental', Load(), lineno=762, col_offset=50)], [], None, None, lineno=762, col_offset=8), lineno=762, col_offset=8), Assign([Name('propagate', Store(), lineno=763, col_offset=8)], Call(Attribute(Name('config', Load(), lineno=763, col_offset=20), 'get', Load(), lineno=763, col_offset=20), [Str('propagate', lineno=763, col_offset=31), Name('None', Load(), lineno=763, col_offset=44)], [], None, None, lineno=763, col_offset=20), lineno=763, col_offset=8), If(Compare(Name('propagate', Load(), lineno=764, col_offset=11), [IsNot()], [Name('None', Load(), lineno=764, col_offset=28)], lineno=764, col_offset=11), [Assign([Attribute(Name('logger', Load(), lineno=765, col_offset=12), 'propagate', Store(), lineno=765, col_offset=12)], Name('propagate', Load(), lineno=765, col_offset=31), lineno=765, col_offset=12)], [], lineno=764, col_offset=8)], [], lineno=759, col_offset=4), FunctionDef('configure_root', arguments([Name('self', Param(), lineno=767, col_offset=23), Name('config', Param(), lineno=767, col_offset=29), Name('incremental', Param(), lineno=767, col_offset=37)], None, None, [Name('False', Load(), lineno=767, col_offset=49)]), [Expr(Str('Configure a root logger from a dictionary.', lineno=768, col_offset=8), lineno=768, col_offset=8), Assign([Name('root', Store(), lineno=769, col_offset=8)], Call(Attribute(Name('logging', Load(), lineno=769, col_offset=15), 'getLogger', Load(), lineno=769, col_offset=15), [], [], None, None, lineno=769, col_offset=15), lineno=769, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=770, col_offset=8), 'common_logger_config', Load(), lineno=770, col_offset=8), [Name('root', Load(), lineno=770, col_offset=34), Name('config', Load(), lineno=770, col_offset=40), Name('incremental', Load(), lineno=770, col_offset=48)], [], None, None, lineno=770, col_offset=8), lineno=770, col_offset=8)], [], lineno=767, col_offset=4)], [], lineno=492, col_offset=0), Assign([Name('dictConfigClass', Store(), lineno=772, col_offset=0)], Name('DictConfigurator', Load(), lineno=772, col_offset=18), lineno=772, col_offset=0), FunctionDef('dictConfig', arguments([Name('config', Param(), lineno=774, col_offset=15)], None, None, []), [Expr(Str('Configure logging using a dictionary.', lineno=775, col_offset=4), lineno=775, col_offset=4), Expr(Call(Attribute(Call(Name('dictConfigClass', Load(), lineno=776, col_offset=4), [Name('config', Load(), lineno=776, col_offset=20)], [], None, None, lineno=776, col_offset=4), 'configure', Load(), lineno=776, col_offset=4), [], [], None, None, lineno=776, col_offset=4), lineno=776, col_offset=4)], [], lineno=774, col_offset=0), FunctionDef('listen', arguments([Name('port', Param(), lineno=779, col_offset=11)], None, None, [Name('DEFAULT_LOGGING_CONFIG_PORT', Load(), lineno=779, col_offset=16)]), [Expr(Str('\n    Start up a socket server on the specified port, and listen for new\n    configurations.\n\n    These will be sent as a file suitable for processing by fileConfig().\n    Returns a Thread object on which you can call start() to start the server,\n    and which you can join() when appropriate. To stop the server, call\n    stopListening().\n    ', lineno=788, col_offset=-1), lineno=788, col_offset=-1), If(UnaryOp(Not(), Name('thread', Load(), lineno=789, col_offset=11), lineno=789, col_offset=7), [Raise(Call(Name('NotImplementedError', Load(), lineno=790, col_offset=14), [Str('listen() needs threading to work', lineno=790, col_offset=34)], [], None, None, lineno=790, col_offset=14), None, None, lineno=790, col_offset=8)], [], lineno=789, col_offset=4), ClassDef('ConfigStreamHandler', [Name('StreamRequestHandler', Load(), lineno=792, col_offset=30)], [Expr(Str('\n        Handler for a logging configuration request.\n\n        It expects a completely new logging configuration and uses fileConfig\n        to install it.\n        ', lineno=798, col_offset=-1), lineno=798, col_offset=-1), FunctionDef('handle', arguments([Name('self', Param(), lineno=799, col_offset=19)], None, None, []), [Expr(Str('\n            Handle a request.\n\n            Each request is expected to be a 4-byte length, packed using\n            struct.pack(">L", n), followed by the config file.\n            Uses fileConfig() to do the grunt work.\n            ', lineno=806, col_offset=-1), lineno=806, col_offset=-1), Import([alias('tempfile', None)], lineno=807, col_offset=12), TryExcept([Assign([Name('conn', Store(), lineno=809, col_offset=16)], Attribute(Name('self', Load(), lineno=809, col_offset=23), 'connection', Load(), lineno=809, col_offset=23), lineno=809, col_offset=16), Assign([Name('chunk', Store(), lineno=810, col_offset=16)], Call(Attribute(Name('conn', Load(), lineno=810, col_offset=24), 'recv', Load(), lineno=810, col_offset=24), [Num(4, lineno=810, col_offset=34)], [], None, None, lineno=810, col_offset=24), lineno=810, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=811, col_offset=19), [Name('chunk', Load(), lineno=811, col_offset=23)], [], None, None, lineno=811, col_offset=19), [Eq()], [Num(4, lineno=811, col_offset=33)], lineno=811, col_offset=19), [Assign([Name('slen', Store(), lineno=812, col_offset=20)], Subscript(Call(Attribute(Name('struct', Load(), lineno=812, col_offset=27), 'unpack', Load(), lineno=812, col_offset=27), [Str('>L', lineno=812, col_offset=41), Name('chunk', Load(), lineno=812, col_offset=47)], [], None, None, lineno=812, col_offset=27), Index(Num(0, lineno=812, col_offset=54)), Load(), lineno=812, col_offset=27), lineno=812, col_offset=20), Assign([Name('chunk', Store(), lineno=813, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=813, col_offset=28), 'connection', Load(), lineno=813, col_offset=28), 'recv', Load(), lineno=813, col_offset=28), [Name('slen', Load(), lineno=813, col_offset=49)], [], None, None, lineno=813, col_offset=28), lineno=813, col_offset=20), While(Compare(Call(Name('len', Load(), lineno=814, col_offset=26), [Name('chunk', Load(), lineno=814, col_offset=30)], [], None, None, lineno=814, col_offset=26), [Lt()], [Name('slen', Load(), lineno=814, col_offset=39)], lineno=814, col_offset=26), [Assign([Name('chunk', Store(), lineno=815, col_offset=24)], BinOp(Name('chunk', Load(), lineno=815, col_offset=32), Add(), Call(Attribute(Name('conn', Load(), lineno=815, col_offset=40), 'recv', Load(), lineno=815, col_offset=40), [BinOp(Name('slen', Load(), lineno=815, col_offset=50), Sub(), Call(Name('len', Load(), lineno=815, col_offset=57), [Name('chunk', Load(), lineno=815, col_offset=61)], [], None, None, lineno=815, col_offset=57), lineno=815, col_offset=50)], [], None, None, lineno=815, col_offset=40), lineno=815, col_offset=32), lineno=815, col_offset=24)], [], lineno=814, col_offset=20), TryExcept([Import([alias('json', None)], lineno=817, col_offset=24), Assign([Name('d', Store(), lineno=818, col_offset=24)], Call(Attribute(Name('json', Load(), lineno=818, col_offset=27), 'loads', Load(), lineno=818, col_offset=27), [Name('chunk', Load(), lineno=818, col_offset=38)], [], None, None, lineno=818, col_offset=27), lineno=818, col_offset=24), Assert(Call(Name('isinstance', Load(), lineno=819, col_offset=31), [Name('d', Load(), lineno=819, col_offset=42), Name('dict', Load(), lineno=819, col_offset=45)], [], None, None, lineno=819, col_offset=31), None, lineno=819, col_offset=24), Expr(Call(Name('dictConfig', Load(), lineno=820, col_offset=24), [Name('d', Load(), lineno=820, col_offset=35)], [], None, None, lineno=820, col_offset=24), lineno=820, col_offset=24)], [ExceptHandler(None, None, [Assign([Name('file', Store(), lineno=824, col_offset=24)], Call(Attribute(Name('cStringIO', Load(), lineno=824, col_offset=31), 'StringIO', Load(), lineno=824, col_offset=31), [Name('chunk', Load(), lineno=824, col_offset=50)], [], None, None, lineno=824, col_offset=31), lineno=824, col_offset=24), TryExcept([Expr(Call(Name('fileConfig', Load(), lineno=826, col_offset=28), [Name('file', Load(), lineno=826, col_offset=39)], [], None, None, lineno=826, col_offset=28), lineno=826, col_offset=28)], [ExceptHandler(Tuple([Name('KeyboardInterrupt', Load(), lineno=827, col_offset=32), Name('SystemExit', Load(), lineno=827, col_offset=51)], Load(), lineno=827, col_offset=32), None, [Raise(None, None, None, lineno=828, col_offset=28)], lineno=827, col_offset=24), ExceptHandler(None, None, [Expr(Call(Attribute(Name('traceback', Load(), lineno=830, col_offset=28), 'print_exc', Load(), lineno=830, col_offset=28), [], [], None, None, lineno=830, col_offset=28), lineno=830, col_offset=28)], lineno=829, col_offset=24)], [], lineno=825, col_offset=24)], lineno=821, col_offset=20)], [], lineno=816, col_offset=20), If(Attribute(Attribute(Name('self', Load(), lineno=831, col_offset=23), 'server', Load(), lineno=831, col_offset=23), 'ready', Load(), lineno=831, col_offset=23), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=832, col_offset=24), 'server', Load(), lineno=832, col_offset=24), 'ready', Load(), lineno=832, col_offset=24), 'set', Load(), lineno=832, col_offset=24), [], [], None, None, lineno=832, col_offset=24), lineno=832, col_offset=24)], [], lineno=831, col_offset=20)], [], lineno=811, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=833, col_offset=19), 'error', Load(), lineno=833, col_offset=19), Name('e', Store(), lineno=833, col_offset=33), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=834, col_offset=23), [Attribute(Name('e', Load(), lineno=834, col_offset=34), 'args', Load(), lineno=834, col_offset=34), Name('tuple', Load(), lineno=834, col_offset=42)], [], None, None, lineno=834, col_offset=23), lineno=834, col_offset=19), [Raise(None, None, None, lineno=835, col_offset=20)], [Assign([Name('errcode', Store(), lineno=837, col_offset=20)], Subscript(Attribute(Name('e', Load(), lineno=837, col_offset=30), 'args', Load(), lineno=837, col_offset=30), Index(Num(0, lineno=837, col_offset=37)), Load(), lineno=837, col_offset=30), lineno=837, col_offset=20), If(Compare(Name('errcode', Load(), lineno=838, col_offset=23), [NotEq()], [Name('RESET_ERROR', Load(), lineno=838, col_offset=34)], lineno=838, col_offset=23), [Raise(None, None, None, lineno=839, col_offset=24)], [], lineno=838, col_offset=20)], lineno=834, col_offset=16)], lineno=833, col_offset=12)], [], lineno=808, col_offset=12)], [], lineno=799, col_offset=8)], [], lineno=792, col_offset=4), ClassDef('ConfigSocketReceiver', [Name('ThreadingTCPServer', Load(), lineno=841, col_offset=31)], [Expr(Str('\n        A simple TCP socket-based logging config receiver.\n        ', lineno=844, col_offset=-1), lineno=844, col_offset=-1), Assign([Name('allow_reuse_address', Store(), lineno=846, col_offset=8)], Num(1, lineno=846, col_offset=30), lineno=846, col_offset=8), FunctionDef('__init__', arguments([Name('self', Param(), lineno=848, col_offset=21), Name('host', Param(), lineno=848, col_offset=27), Name('port', Param(), lineno=848, col_offset=45), Name('handler', Param(), lineno=849, col_offset=21), Name('ready', Param(), lineno=849, col_offset=35)], None, None, [Str('localhost', lineno=848, col_offset=32), Name('DEFAULT_LOGGING_CONFIG_PORT', Load(), lineno=848, col_offset=50), Name('None', Load(), lineno=849, col_offset=29), Name('None', Load(), lineno=849, col_offset=41)]), [Expr(Call(Attribute(Name('ThreadingTCPServer', Load(), lineno=850, col_offset=12), '__init__', Load(), lineno=850, col_offset=12), [Name('self', Load(), lineno=850, col_offset=40), Tuple([Name('host', Load(), lineno=850, col_offset=47), Name('port', Load(), lineno=850, col_offset=53)], Load(), lineno=850, col_offset=47), Name('handler', Load(), lineno=850, col_offset=60)], [], None, None, lineno=850, col_offset=12), lineno=850, col_offset=12), Expr(Call(Attribute(Name('logging', Load(), lineno=851, col_offset=12), '_acquireLock', Load(), lineno=851, col_offset=12), [], [], None, None, lineno=851, col_offset=12), lineno=851, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=852, col_offset=12), 'abort', Store(), lineno=852, col_offset=12)], Num(0, lineno=852, col_offset=25), lineno=852, col_offset=12), Expr(Call(Attribute(Name('logging', Load(), lineno=853, col_offset=12), '_releaseLock', Load(), lineno=853, col_offset=12), [], [], None, None, lineno=853, col_offset=12), lineno=853, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=854, col_offset=12), 'timeout', Store(), lineno=854, col_offset=12)], Num(1, lineno=854, col_offset=27), lineno=854, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=855, col_offset=12), 'ready', Store(), lineno=855, col_offset=12)], Name('ready', Load(), lineno=855, col_offset=25), lineno=855, col_offset=12)], [], lineno=848, col_offset=8), FunctionDef('serve_until_stopped', arguments([Name('self', Param(), lineno=857, col_offset=32)], None, None, []), [Import([alias('select', None)], lineno=858, col_offset=12), Assign([Name('abort', Store(), lineno=859, col_offset=12)], Num(0, lineno=859, col_offset=20), lineno=859, col_offset=12), While(UnaryOp(Not(), Name('abort', Load(), lineno=860, col_offset=22), lineno=860, col_offset=18), [Assign([Tuple([Name('rd', Store(), lineno=861, col_offset=16), Name('wr', Store(), lineno=861, col_offset=20), Name('ex', Store(), lineno=861, col_offset=24)], Store(), lineno=861, col_offset=16)], Call(Attribute(Name('select', Load(), lineno=861, col_offset=29), 'select', Load(), lineno=861, col_offset=29), [List([Call(Attribute(Attribute(Name('self', Load(), lineno=861, col_offset=44), 'socket', Load(), lineno=861, col_offset=44), 'fileno', Load(), lineno=861, col_offset=44), [], [], None, None, lineno=861, col_offset=44)], Load(), lineno=861, col_offset=43), List([], Load(), lineno=862, col_offset=43), List([], Load(), lineno=862, col_offset=47), Attribute(Name('self', Load(), lineno=863, col_offset=43), 'timeout', Load(), lineno=863, col_offset=43)], [], None, None, lineno=861, col_offset=29), lineno=861, col_offset=16), If(Name('rd', Load(), lineno=864, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=865, col_offset=20), 'handle_request', Load(), lineno=865, col_offset=20), [], [], None, None, lineno=865, col_offset=20), lineno=865, col_offset=20)], [], lineno=864, col_offset=16), Expr(Call(Attribute(Name('logging', Load(), lineno=866, col_offset=16), '_acquireLock', Load(), lineno=866, col_offset=16), [], [], None, None, lineno=866, col_offset=16), lineno=866, col_offset=16), Assign([Name('abort', Store(), lineno=867, col_offset=16)], Attribute(Name('self', Load(), lineno=867, col_offset=24), 'abort', Load(), lineno=867, col_offset=24), lineno=867, col_offset=16), Expr(Call(Attribute(Name('logging', Load(), lineno=868, col_offset=16), '_releaseLock', Load(), lineno=868, col_offset=16), [], [], None, None, lineno=868, col_offset=16), lineno=868, col_offset=16)], [], lineno=860, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=869, col_offset=12), 'socket', Load(), lineno=869, col_offset=12), 'close', Load(), lineno=869, col_offset=12), [], [], None, None, lineno=869, col_offset=12), lineno=869, col_offset=12)], [], lineno=857, col_offset=8)], [], lineno=841, col_offset=4), ClassDef('Server', [Attribute(Name('threading', Load(), lineno=871, col_offset=17), 'Thread', Load(), lineno=871, col_offset=17)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=873, col_offset=21), Name('rcvr', Param(), lineno=873, col_offset=27), Name('hdlr', Param(), lineno=873, col_offset=33), Name('port', Param(), lineno=873, col_offset=39)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=874, col_offset=12), [Name('Server', Load(), lineno=874, col_offset=18), Name('self', Load(), lineno=874, col_offset=26)], [], None, None, lineno=874, col_offset=12), '__init__', Load(), lineno=874, col_offset=12), [], [], None, None, lineno=874, col_offset=12), lineno=874, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=875, col_offset=12), 'rcvr', Store(), lineno=875, col_offset=12)], Name('rcvr', Load(), lineno=875, col_offset=24), lineno=875, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=876, col_offset=12), 'hdlr', Store(), lineno=876, col_offset=12)], Name('hdlr', Load(), lineno=876, col_offset=24), lineno=876, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=877, col_offset=12), 'port', Store(), lineno=877, col_offset=12)], Name('port', Load(), lineno=877, col_offset=24), lineno=877, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=878, col_offset=12), 'ready', Store(), lineno=878, col_offset=12)], Call(Attribute(Name('threading', Load(), lineno=878, col_offset=25), 'Event', Load(), lineno=878, col_offset=25), [], [], None, None, lineno=878, col_offset=25), lineno=878, col_offset=12)], [], lineno=873, col_offset=8), FunctionDef('run', arguments([Name('self', Param(), lineno=880, col_offset=16)], None, None, []), [Assign([Name('server', Store(), lineno=881, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=881, col_offset=21), 'rcvr', Load(), lineno=881, col_offset=21), [], [keyword('port', Attribute(Name('self', Load(), lineno=881, col_offset=36), 'port', Load(), lineno=881, col_offset=36)), keyword('handler', Attribute(Name('self', Load(), lineno=881, col_offset=55), 'hdlr', Load(), lineno=881, col_offset=55)), keyword('ready', Attribute(Name('self', Load(), lineno=882, col_offset=37), 'ready', Load(), lineno=882, col_offset=37))], None, None, lineno=881, col_offset=21), lineno=881, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=883, col_offset=15), 'port', Load(), lineno=883, col_offset=15), [Eq()], [Num(0, lineno=883, col_offset=28)], lineno=883, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=884, col_offset=16), 'port', Store(), lineno=884, col_offset=16)], Subscript(Attribute(Name('server', Load(), lineno=884, col_offset=28), 'server_address', Load(), lineno=884, col_offset=28), Index(Num(1, lineno=884, col_offset=50)), Load(), lineno=884, col_offset=28), lineno=884, col_offset=16)], [], lineno=883, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=885, col_offset=12), 'ready', Load(), lineno=885, col_offset=12), 'set', Load(), lineno=885, col_offset=12), [], [], None, None, lineno=885, col_offset=12), lineno=885, col_offset=12), Global(['_listener'], lineno=886, col_offset=12), Expr(Call(Attribute(Name('logging', Load(), lineno=887, col_offset=12), '_acquireLock', Load(), lineno=887, col_offset=12), [], [], None, None, lineno=887, col_offset=12), lineno=887, col_offset=12), Assign([Name('_listener', Store(), lineno=888, col_offset=12)], Name('server', Load(), lineno=888, col_offset=24), lineno=888, col_offset=12), Expr(Call(Attribute(Name('logging', Load(), lineno=889, col_offset=12), '_releaseLock', Load(), lineno=889, col_offset=12), [], [], None, None, lineno=889, col_offset=12), lineno=889, col_offset=12), Expr(Call(Attribute(Name('server', Load(), lineno=890, col_offset=12), 'serve_until_stopped', Load(), lineno=890, col_offset=12), [], [], None, None, lineno=890, col_offset=12), lineno=890, col_offset=12)], [], lineno=880, col_offset=8)], [], lineno=871, col_offset=4), Return(Call(Name('Server', Load(), lineno=892, col_offset=11), [Name('ConfigSocketReceiver', Load(), lineno=892, col_offset=18), Name('ConfigStreamHandler', Load(), lineno=892, col_offset=40), Name('port', Load(), lineno=892, col_offset=61)], [], None, None, lineno=892, col_offset=11), lineno=892, col_offset=4)], [], lineno=779, col_offset=0), FunctionDef('stopListening', arguments([], None, None, []), [Expr(Str('\n    Stop the listening server which was created with a call to listen().\n    ', lineno=897, col_offset=-1), lineno=897, col_offset=-1), Global(['_listener'], lineno=898, col_offset=4), Expr(Call(Attribute(Name('logging', Load(), lineno=899, col_offset=4), '_acquireLock', Load(), lineno=899, col_offset=4), [], [], None, None, lineno=899, col_offset=4), lineno=899, col_offset=4), TryFinally([If(Name('_listener', Load(), lineno=901, col_offset=11), [Assign([Attribute(Name('_listener', Load(), lineno=902, col_offset=12), 'abort', Store(), lineno=902, col_offset=12)], Num(1, lineno=902, col_offset=30), lineno=902, col_offset=12), Assign([Name('_listener', Store(), lineno=903, col_offset=12)], Name('None', Load(), lineno=903, col_offset=24), lineno=903, col_offset=12)], [], lineno=901, col_offset=8)], [Expr(Call(Attribute(Name('logging', Load(), lineno=905, col_offset=8), '_releaseLock', Load(), lineno=905, col_offset=8), [], [], None, None, lineno=905, col_offset=8), lineno=905, col_offset=8)], lineno=900, col_offset=4)], [], lineno=894, col_offset=0)])
