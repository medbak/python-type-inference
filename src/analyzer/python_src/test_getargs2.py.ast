Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), ImportFrom('_testcapi', [alias('getargs_keywords', None)], 0, lineno=3, col_offset=0), Import([alias('warnings', None)], lineno=4, col_offset=0), Expr(Str('\n> How about the following counterproposal. This also changes some of\n> the other format codes to be a little more regular.\n>\n> Code C type Range check\n>\n> b unsigned char 0..UCHAR_MAX\n> h signed short SHRT_MIN..SHRT_MAX\n> B unsigned char none **\n> H unsigned short none **\n> k * unsigned long none\n> I * unsigned int 0..UINT_MAX\n\n\n> i int INT_MIN..INT_MAX\n> l long LONG_MIN..LONG_MAX\n\n> K * unsigned long long none\n> L long long LLONG_MIN..LLONG_MAX\n\n> Notes:\n>\n> * New format codes.\n>\n> ** Changed from previous "range-and-a-half" to "none"; the\n> range-and-a-half checking wasn\'t particularly useful.\n\nPlus a C API or two, e.g. PyInt_AsLongMask() ->\nunsigned long and PyInt_AsLongLongMask() -> unsigned\nlong long (if that exists).\n', lineno=36, col_offset=-1), lineno=36, col_offset=-1), Assign([Name('LARGE', Store(), lineno=38, col_offset=0)], Num(2147483647, lineno=38, col_offset=8), lineno=38, col_offset=0), Assign([Name('VERY_LARGE', Store(), lineno=39, col_offset=0)], Num(78918677837786508962676478530L, lineno=39, col_offset=13), lineno=39, col_offset=0), ImportFrom('_testcapi', [alias('UCHAR_MAX', None), alias('USHRT_MAX', None), alias('UINT_MAX', None), alias('ULONG_MAX', None), alias('INT_MAX', None), alias('INT_MIN', None), alias('LONG_MIN', None), alias('LONG_MAX', None), alias('PY_SSIZE_T_MIN', None), alias('PY_SSIZE_T_MAX', None), alias('SHRT_MIN', None), alias('SHRT_MAX', None)], 0, lineno=41, col_offset=0), Assign([Name('LLONG_MAX', Store(), lineno=46, col_offset=0)], BinOp(BinOp(Num(2, lineno=46, col_offset=12), Pow(), Num(63, lineno=46, col_offset=15), lineno=46, col_offset=12), Sub(), Num(1, lineno=46, col_offset=18), lineno=46, col_offset=12), lineno=46, col_offset=0), Assign([Name('LLONG_MIN', Store(), lineno=47, col_offset=0)], UnaryOp(USub(), BinOp(Num(2, lineno=47, col_offset=13), Pow(), Num(63, lineno=47, col_offset=16), lineno=47, col_offset=13), lineno=47, col_offset=12), lineno=47, col_offset=0), Assign([Name('ULLONG_MAX', Store(), lineno=48, col_offset=0)], BinOp(BinOp(Num(2, lineno=48, col_offset=13), Pow(), Num(64, lineno=48, col_offset=16), lineno=48, col_offset=13), Sub(), Num(1, lineno=48, col_offset=19), lineno=48, col_offset=13), lineno=48, col_offset=0), ClassDef('Long', [], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=51, col_offset=16)], None, None, []), [Return(Num(99L, lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=51, col_offset=4)], [], lineno=50, col_offset=0), ClassDef('Int', [], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=55, col_offset=16)], None, None, []), [Return(Num(99, lineno=56, col_offset=15), lineno=56, col_offset=8)], [], lineno=55, col_offset=4)], [], lineno=54, col_offset=0), ClassDef('Unsigned_TestCase', [Attribute(Name('unittest', Load(), lineno=58, col_offset=24), 'TestCase', Load(), lineno=58, col_offset=24)], [FunctionDef('test_b', arguments([Name('self', Param(), lineno=59, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_b', None)], 0, lineno=60, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertRaises', Load(), lineno=62, col_offset=8), [Name('TypeError', Load(), lineno=62, col_offset=26), Name('getargs_b', Load(), lineno=62, col_offset=37), Num(3.14, lineno=62, col_offset=48)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertEqual', Load(), lineno=63, col_offset=8), [Num(99, lineno=63, col_offset=25), Call(Name('getargs_b', Load(), lineno=63, col_offset=29), [Call(Name('Long', Load(), lineno=63, col_offset=39), [], [], None, None, lineno=63, col_offset=39)], [], None, None, lineno=63, col_offset=29)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'assertEqual', Load(), lineno=64, col_offset=8), [Num(99, lineno=64, col_offset=25), Call(Name('getargs_b', Load(), lineno=64, col_offset=29), [Call(Name('Int', Load(), lineno=64, col_offset=39), [], [], None, None, lineno=64, col_offset=39)], [], None, None, lineno=64, col_offset=29)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertRaises', Load(), lineno=66, col_offset=8), [Name('OverflowError', Load(), lineno=66, col_offset=26), Name('getargs_b', Load(), lineno=66, col_offset=41), Num(-1, lineno=66, col_offset=53)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'assertEqual', Load(), lineno=67, col_offset=8), [Num(0, lineno=67, col_offset=25), Call(Name('getargs_b', Load(), lineno=67, col_offset=28), [Num(0, lineno=67, col_offset=38)], [], None, None, lineno=67, col_offset=28)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertEqual', Load(), lineno=68, col_offset=8), [Name('UCHAR_MAX', Load(), lineno=68, col_offset=25), Call(Name('getargs_b', Load(), lineno=68, col_offset=36), [Name('UCHAR_MAX', Load(), lineno=68, col_offset=46)], [], None, None, lineno=68, col_offset=36)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertRaises', Load(), lineno=69, col_offset=8), [Name('OverflowError', Load(), lineno=69, col_offset=26), Name('getargs_b', Load(), lineno=69, col_offset=41), BinOp(Name('UCHAR_MAX', Load(), lineno=69, col_offset=52), Add(), Num(1, lineno=69, col_offset=64), lineno=69, col_offset=52)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'assertEqual', Load(), lineno=71, col_offset=8), [Num(42, lineno=71, col_offset=25), Call(Name('getargs_b', Load(), lineno=71, col_offset=29), [Num(42, lineno=71, col_offset=39)], [], None, None, lineno=71, col_offset=29)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Num(42, lineno=72, col_offset=25), Call(Name('getargs_b', Load(), lineno=72, col_offset=29), [Num(42L, lineno=72, col_offset=39)], [], None, None, lineno=72, col_offset=29)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertRaises', Load(), lineno=73, col_offset=8), [Name('OverflowError', Load(), lineno=73, col_offset=26), Name('getargs_b', Load(), lineno=73, col_offset=41), Name('VERY_LARGE', Load(), lineno=73, col_offset=52)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('test_B', arguments([Name('self', Param(), lineno=75, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_B', None)], 0, lineno=76, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertRaises', Load(), lineno=78, col_offset=8), [Name('TypeError', Load(), lineno=78, col_offset=26), Name('getargs_B', Load(), lineno=78, col_offset=37), Num(3.14, lineno=78, col_offset=48)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertEqual', Load(), lineno=79, col_offset=8), [Num(99, lineno=79, col_offset=25), Call(Name('getargs_B', Load(), lineno=79, col_offset=29), [Call(Name('Long', Load(), lineno=79, col_offset=39), [], [], None, None, lineno=79, col_offset=39)], [], None, None, lineno=79, col_offset=29)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Num(99, lineno=80, col_offset=25), Call(Name('getargs_B', Load(), lineno=80, col_offset=29), [Call(Name('Int', Load(), lineno=80, col_offset=39), [], [], None, None, lineno=80, col_offset=39)], [], None, None, lineno=80, col_offset=29)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertEqual', Load(), lineno=82, col_offset=8), [Name('UCHAR_MAX', Load(), lineno=82, col_offset=25), Call(Name('getargs_B', Load(), lineno=82, col_offset=36), [Num(-1, lineno=82, col_offset=47)], [], None, None, lineno=82, col_offset=36)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'assertEqual', Load(), lineno=83, col_offset=8), [Name('UCHAR_MAX', Load(), lineno=83, col_offset=25), Call(Name('getargs_B', Load(), lineno=83, col_offset=36), [Num(-1L, lineno=83, col_offset=47)], [], None, None, lineno=83, col_offset=36)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'assertEqual', Load(), lineno=84, col_offset=8), [Num(0, lineno=84, col_offset=25), Call(Name('getargs_B', Load(), lineno=84, col_offset=28), [Num(0, lineno=84, col_offset=38)], [], None, None, lineno=84, col_offset=28)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=8), 'assertEqual', Load(), lineno=85, col_offset=8), [Name('UCHAR_MAX', Load(), lineno=85, col_offset=25), Call(Name('getargs_B', Load(), lineno=85, col_offset=36), [Name('UCHAR_MAX', Load(), lineno=85, col_offset=46)], [], None, None, lineno=85, col_offset=36)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'assertEqual', Load(), lineno=86, col_offset=8), [Num(0, lineno=86, col_offset=25), Call(Name('getargs_B', Load(), lineno=86, col_offset=28), [BinOp(Name('UCHAR_MAX', Load(), lineno=86, col_offset=38), Add(), Num(1, lineno=86, col_offset=48), lineno=86, col_offset=38)], [], None, None, lineno=86, col_offset=28)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertEqual', Load(), lineno=88, col_offset=8), [Num(42, lineno=88, col_offset=25), Call(Name('getargs_B', Load(), lineno=88, col_offset=29), [Num(42, lineno=88, col_offset=39)], [], None, None, lineno=88, col_offset=29)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertEqual', Load(), lineno=89, col_offset=8), [Num(42, lineno=89, col_offset=25), Call(Name('getargs_B', Load(), lineno=89, col_offset=29), [Num(42L, lineno=89, col_offset=39)], [], None, None, lineno=89, col_offset=29)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [BinOp(Name('UCHAR_MAX', Load(), lineno=90, col_offset=25), BitAnd(), Name('VERY_LARGE', Load(), lineno=90, col_offset=37), lineno=90, col_offset=25), Call(Name('getargs_B', Load(), lineno=90, col_offset=49), [Name('VERY_LARGE', Load(), lineno=90, col_offset=59)], [], None, None, lineno=90, col_offset=49)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('test_H', arguments([Name('self', Param(), lineno=92, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_H', None)], 0, lineno=93, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertRaises', Load(), lineno=95, col_offset=8), [Name('TypeError', Load(), lineno=95, col_offset=26), Name('getargs_H', Load(), lineno=95, col_offset=37), Num(3.14, lineno=95, col_offset=48)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=96, col_offset=8), 'assertEqual', Load(), lineno=96, col_offset=8), [Num(99, lineno=96, col_offset=25), Call(Name('getargs_H', Load(), lineno=96, col_offset=29), [Call(Name('Long', Load(), lineno=96, col_offset=39), [], [], None, None, lineno=96, col_offset=39)], [], None, None, lineno=96, col_offset=29)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=8), 'assertEqual', Load(), lineno=97, col_offset=8), [Num(99, lineno=97, col_offset=25), Call(Name('getargs_H', Load(), lineno=97, col_offset=29), [Call(Name('Int', Load(), lineno=97, col_offset=39), [], [], None, None, lineno=97, col_offset=39)], [], None, None, lineno=97, col_offset=29)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=8), 'assertEqual', Load(), lineno=99, col_offset=8), [Name('USHRT_MAX', Load(), lineno=99, col_offset=25), Call(Name('getargs_H', Load(), lineno=99, col_offset=36), [Num(-1, lineno=99, col_offset=47)], [], None, None, lineno=99, col_offset=36)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertEqual', Load(), lineno=100, col_offset=8), [Num(0, lineno=100, col_offset=25), Call(Name('getargs_H', Load(), lineno=100, col_offset=28), [Num(0, lineno=100, col_offset=38)], [], None, None, lineno=100, col_offset=28)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertEqual', Load(), lineno=101, col_offset=8), [Name('USHRT_MAX', Load(), lineno=101, col_offset=25), Call(Name('getargs_H', Load(), lineno=101, col_offset=36), [Name('USHRT_MAX', Load(), lineno=101, col_offset=46)], [], None, None, lineno=101, col_offset=36)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertEqual', Load(), lineno=102, col_offset=8), [Num(0, lineno=102, col_offset=25), Call(Name('getargs_H', Load(), lineno=102, col_offset=28), [BinOp(Name('USHRT_MAX', Load(), lineno=102, col_offset=38), Add(), Num(1, lineno=102, col_offset=48), lineno=102, col_offset=38)], [], None, None, lineno=102, col_offset=28)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertEqual', Load(), lineno=104, col_offset=8), [Num(42, lineno=104, col_offset=25), Call(Name('getargs_H', Load(), lineno=104, col_offset=29), [Num(42, lineno=104, col_offset=39)], [], None, None, lineno=104, col_offset=29)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'assertEqual', Load(), lineno=105, col_offset=8), [Num(42, lineno=105, col_offset=25), Call(Name('getargs_H', Load(), lineno=105, col_offset=29), [Num(42L, lineno=105, col_offset=39)], [], None, None, lineno=105, col_offset=29)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [BinOp(Name('VERY_LARGE', Load(), lineno=107, col_offset=25), BitAnd(), Name('USHRT_MAX', Load(), lineno=107, col_offset=38), lineno=107, col_offset=25), Call(Name('getargs_H', Load(), lineno=107, col_offset=49), [Name('VERY_LARGE', Load(), lineno=107, col_offset=59)], [], None, None, lineno=107, col_offset=49)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('test_I', arguments([Name('self', Param(), lineno=109, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_I', None)], 0, lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'assertRaises', Load(), lineno=112, col_offset=8), [Name('TypeError', Load(), lineno=112, col_offset=26), Name('getargs_I', Load(), lineno=112, col_offset=37), Num(3.14, lineno=112, col_offset=48)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Num(99, lineno=113, col_offset=25), Call(Name('getargs_I', Load(), lineno=113, col_offset=29), [Call(Name('Long', Load(), lineno=113, col_offset=39), [], [], None, None, lineno=113, col_offset=39)], [], None, None, lineno=113, col_offset=29)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=8), 'assertEqual', Load(), lineno=114, col_offset=8), [Num(99, lineno=114, col_offset=25), Call(Name('getargs_I', Load(), lineno=114, col_offset=29), [Call(Name('Int', Load(), lineno=114, col_offset=39), [], [], None, None, lineno=114, col_offset=39)], [], None, None, lineno=114, col_offset=29)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=8), 'assertEqual', Load(), lineno=116, col_offset=8), [Name('UINT_MAX', Load(), lineno=116, col_offset=25), Call(Name('getargs_I', Load(), lineno=116, col_offset=35), [Num(-1, lineno=116, col_offset=46)], [], None, None, lineno=116, col_offset=35)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertEqual', Load(), lineno=117, col_offset=8), [Num(0, lineno=117, col_offset=25), Call(Name('getargs_I', Load(), lineno=117, col_offset=28), [Num(0, lineno=117, col_offset=38)], [], None, None, lineno=117, col_offset=28)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'assertEqual', Load(), lineno=118, col_offset=8), [Name('UINT_MAX', Load(), lineno=118, col_offset=25), Call(Name('getargs_I', Load(), lineno=118, col_offset=35), [Name('UINT_MAX', Load(), lineno=118, col_offset=45)], [], None, None, lineno=118, col_offset=35)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'assertEqual', Load(), lineno=119, col_offset=8), [Num(0, lineno=119, col_offset=25), Call(Name('getargs_I', Load(), lineno=119, col_offset=28), [BinOp(Name('UINT_MAX', Load(), lineno=119, col_offset=38), Add(), Num(1, lineno=119, col_offset=47), lineno=119, col_offset=38)], [], None, None, lineno=119, col_offset=28)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=8), 'assertEqual', Load(), lineno=121, col_offset=8), [Num(42, lineno=121, col_offset=25), Call(Name('getargs_I', Load(), lineno=121, col_offset=29), [Num(42, lineno=121, col_offset=39)], [], None, None, lineno=121, col_offset=29)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'assertEqual', Load(), lineno=122, col_offset=8), [Num(42, lineno=122, col_offset=25), Call(Name('getargs_I', Load(), lineno=122, col_offset=29), [Num(42L, lineno=122, col_offset=39)], [], None, None, lineno=122, col_offset=29)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=8), 'assertEqual', Load(), lineno=124, col_offset=8), [BinOp(Name('VERY_LARGE', Load(), lineno=124, col_offset=25), BitAnd(), Name('UINT_MAX', Load(), lineno=124, col_offset=38), lineno=124, col_offset=25), Call(Name('getargs_I', Load(), lineno=124, col_offset=48), [Name('VERY_LARGE', Load(), lineno=124, col_offset=58)], [], None, None, lineno=124, col_offset=48)], [], None, None, lineno=124, col_offset=8), lineno=124, col_offset=8)], [], lineno=109, col_offset=4), FunctionDef('test_k', arguments([Name('self', Param(), lineno=126, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_k', None)], 0, lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'assertRaises', Load(), lineno=130, col_offset=8), [Name('TypeError', Load(), lineno=130, col_offset=26), Name('getargs_k', Load(), lineno=130, col_offset=37), Num(3.14, lineno=130, col_offset=48)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'assertRaises', Load(), lineno=131, col_offset=8), [Name('TypeError', Load(), lineno=131, col_offset=26), Name('getargs_k', Load(), lineno=131, col_offset=37), Call(Name('Long', Load(), lineno=131, col_offset=48), [], [], None, None, lineno=131, col_offset=48)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'assertRaises', Load(), lineno=132, col_offset=8), [Name('TypeError', Load(), lineno=132, col_offset=26), Name('getargs_k', Load(), lineno=132, col_offset=37), Call(Name('Int', Load(), lineno=132, col_offset=48), [], [], None, None, lineno=132, col_offset=48)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'assertEqual', Load(), lineno=134, col_offset=8), [Name('ULONG_MAX', Load(), lineno=134, col_offset=25), Call(Name('getargs_k', Load(), lineno=134, col_offset=36), [Num(-1, lineno=134, col_offset=47)], [], None, None, lineno=134, col_offset=36)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'assertEqual', Load(), lineno=135, col_offset=8), [Num(0, lineno=135, col_offset=25), Call(Name('getargs_k', Load(), lineno=135, col_offset=28), [Num(0, lineno=135, col_offset=38)], [], None, None, lineno=135, col_offset=28)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertEqual', Load(), lineno=136, col_offset=8), [Name('ULONG_MAX', Load(), lineno=136, col_offset=25), Call(Name('getargs_k', Load(), lineno=136, col_offset=36), [Name('ULONG_MAX', Load(), lineno=136, col_offset=46)], [], None, None, lineno=136, col_offset=36)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertEqual', Load(), lineno=137, col_offset=8), [Num(0, lineno=137, col_offset=25), Call(Name('getargs_k', Load(), lineno=137, col_offset=28), [BinOp(Name('ULONG_MAX', Load(), lineno=137, col_offset=38), Add(), Num(1, lineno=137, col_offset=48), lineno=137, col_offset=38)], [], None, None, lineno=137, col_offset=28)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=8), 'assertEqual', Load(), lineno=139, col_offset=8), [Num(42, lineno=139, col_offset=25), Call(Name('getargs_k', Load(), lineno=139, col_offset=29), [Num(42, lineno=139, col_offset=39)], [], None, None, lineno=139, col_offset=29)], [], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'assertEqual', Load(), lineno=140, col_offset=8), [Num(42, lineno=140, col_offset=25), Call(Name('getargs_k', Load(), lineno=140, col_offset=29), [Num(42L, lineno=140, col_offset=39)], [], None, None, lineno=140, col_offset=29)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertEqual', Load(), lineno=142, col_offset=8), [BinOp(Name('VERY_LARGE', Load(), lineno=142, col_offset=25), BitAnd(), Name('ULONG_MAX', Load(), lineno=142, col_offset=38), lineno=142, col_offset=25), Call(Name('getargs_k', Load(), lineno=142, col_offset=49), [Name('VERY_LARGE', Load(), lineno=142, col_offset=59)], [], None, None, lineno=142, col_offset=49)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=126, col_offset=4)], [], lineno=58, col_offset=0), ClassDef('Signed_TestCase', [Attribute(Name('unittest', Load(), lineno=144, col_offset=22), 'TestCase', Load(), lineno=144, col_offset=22)], [FunctionDef('test_h', arguments([Name('self', Param(), lineno=145, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_h', None)], 0, lineno=146, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=8), 'assertRaises', Load(), lineno=148, col_offset=8), [Name('TypeError', Load(), lineno=148, col_offset=26), Name('getargs_h', Load(), lineno=148, col_offset=37), Num(3.14, lineno=148, col_offset=48)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Num(99, lineno=149, col_offset=25), Call(Name('getargs_h', Load(), lineno=149, col_offset=29), [Call(Name('Long', Load(), lineno=149, col_offset=39), [], [], None, None, lineno=149, col_offset=39)], [], None, None, lineno=149, col_offset=29)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertEqual', Load(), lineno=150, col_offset=8), [Num(99, lineno=150, col_offset=25), Call(Name('getargs_h', Load(), lineno=150, col_offset=29), [Call(Name('Int', Load(), lineno=150, col_offset=39), [], [], None, None, lineno=150, col_offset=39)], [], None, None, lineno=150, col_offset=29)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'assertRaises', Load(), lineno=152, col_offset=8), [Name('OverflowError', Load(), lineno=152, col_offset=26), Name('getargs_h', Load(), lineno=152, col_offset=41), BinOp(Name('SHRT_MIN', Load(), lineno=152, col_offset=52), Sub(), Num(1, lineno=152, col_offset=61), lineno=152, col_offset=52)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'assertEqual', Load(), lineno=153, col_offset=8), [Name('SHRT_MIN', Load(), lineno=153, col_offset=25), Call(Name('getargs_h', Load(), lineno=153, col_offset=35), [Name('SHRT_MIN', Load(), lineno=153, col_offset=45)], [], None, None, lineno=153, col_offset=35)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'assertEqual', Load(), lineno=154, col_offset=8), [Name('SHRT_MAX', Load(), lineno=154, col_offset=25), Call(Name('getargs_h', Load(), lineno=154, col_offset=35), [Name('SHRT_MAX', Load(), lineno=154, col_offset=45)], [], None, None, lineno=154, col_offset=35)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'assertRaises', Load(), lineno=155, col_offset=8), [Name('OverflowError', Load(), lineno=155, col_offset=26), Name('getargs_h', Load(), lineno=155, col_offset=41), BinOp(Name('SHRT_MAX', Load(), lineno=155, col_offset=52), Add(), Num(1, lineno=155, col_offset=61), lineno=155, col_offset=52)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertEqual', Load(), lineno=157, col_offset=8), [Num(42, lineno=157, col_offset=25), Call(Name('getargs_h', Load(), lineno=157, col_offset=29), [Num(42, lineno=157, col_offset=39)], [], None, None, lineno=157, col_offset=29)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=8), 'assertEqual', Load(), lineno=158, col_offset=8), [Num(42, lineno=158, col_offset=25), Call(Name('getargs_h', Load(), lineno=158, col_offset=29), [Num(42L, lineno=158, col_offset=39)], [], None, None, lineno=158, col_offset=29)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'assertRaises', Load(), lineno=159, col_offset=8), [Name('OverflowError', Load(), lineno=159, col_offset=26), Name('getargs_h', Load(), lineno=159, col_offset=41), Name('VERY_LARGE', Load(), lineno=159, col_offset=52)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('test_i', arguments([Name('self', Param(), lineno=161, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_i', None)], 0, lineno=162, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertRaises', Load(), lineno=164, col_offset=8), [Name('TypeError', Load(), lineno=164, col_offset=26), Name('getargs_i', Load(), lineno=164, col_offset=37), Num(3.14, lineno=164, col_offset=48)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'assertEqual', Load(), lineno=165, col_offset=8), [Num(99, lineno=165, col_offset=25), Call(Name('getargs_i', Load(), lineno=165, col_offset=29), [Call(Name('Long', Load(), lineno=165, col_offset=39), [], [], None, None, lineno=165, col_offset=39)], [], None, None, lineno=165, col_offset=29)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'assertEqual', Load(), lineno=166, col_offset=8), [Num(99, lineno=166, col_offset=25), Call(Name('getargs_i', Load(), lineno=166, col_offset=29), [Call(Name('Int', Load(), lineno=166, col_offset=39), [], [], None, None, lineno=166, col_offset=39)], [], None, None, lineno=166, col_offset=29)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'assertRaises', Load(), lineno=168, col_offset=8), [Name('OverflowError', Load(), lineno=168, col_offset=26), Name('getargs_i', Load(), lineno=168, col_offset=41), BinOp(Name('INT_MIN', Load(), lineno=168, col_offset=52), Sub(), Num(1, lineno=168, col_offset=60), lineno=168, col_offset=52)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'assertEqual', Load(), lineno=169, col_offset=8), [Name('INT_MIN', Load(), lineno=169, col_offset=25), Call(Name('getargs_i', Load(), lineno=169, col_offset=34), [Name('INT_MIN', Load(), lineno=169, col_offset=44)], [], None, None, lineno=169, col_offset=34)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'assertEqual', Load(), lineno=170, col_offset=8), [Name('INT_MAX', Load(), lineno=170, col_offset=25), Call(Name('getargs_i', Load(), lineno=170, col_offset=34), [Name('INT_MAX', Load(), lineno=170, col_offset=44)], [], None, None, lineno=170, col_offset=34)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertRaises', Load(), lineno=171, col_offset=8), [Name('OverflowError', Load(), lineno=171, col_offset=26), Name('getargs_i', Load(), lineno=171, col_offset=41), BinOp(Name('INT_MAX', Load(), lineno=171, col_offset=52), Add(), Num(1, lineno=171, col_offset=60), lineno=171, col_offset=52)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'assertEqual', Load(), lineno=173, col_offset=8), [Num(42, lineno=173, col_offset=25), Call(Name('getargs_i', Load(), lineno=173, col_offset=29), [Num(42, lineno=173, col_offset=39)], [], None, None, lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertEqual', Load(), lineno=174, col_offset=8), [Num(42, lineno=174, col_offset=25), Call(Name('getargs_i', Load(), lineno=174, col_offset=29), [Num(42L, lineno=174, col_offset=39)], [], None, None, lineno=174, col_offset=29)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertRaises', Load(), lineno=175, col_offset=8), [Name('OverflowError', Load(), lineno=175, col_offset=26), Name('getargs_i', Load(), lineno=175, col_offset=41), Name('VERY_LARGE', Load(), lineno=175, col_offset=52)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('test_l', arguments([Name('self', Param(), lineno=177, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_l', None)], 0, lineno=178, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertRaises', Load(), lineno=180, col_offset=8), [Name('TypeError', Load(), lineno=180, col_offset=26), Name('getargs_l', Load(), lineno=180, col_offset=37), Num(3.14, lineno=180, col_offset=48)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'assertEqual', Load(), lineno=181, col_offset=8), [Num(99, lineno=181, col_offset=25), Call(Name('getargs_l', Load(), lineno=181, col_offset=29), [Call(Name('Long', Load(), lineno=181, col_offset=39), [], [], None, None, lineno=181, col_offset=39)], [], None, None, lineno=181, col_offset=29)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=8), 'assertEqual', Load(), lineno=182, col_offset=8), [Num(99, lineno=182, col_offset=25), Call(Name('getargs_l', Load(), lineno=182, col_offset=29), [Call(Name('Int', Load(), lineno=182, col_offset=39), [], [], None, None, lineno=182, col_offset=39)], [], None, None, lineno=182, col_offset=29)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'assertRaises', Load(), lineno=184, col_offset=8), [Name('OverflowError', Load(), lineno=184, col_offset=26), Name('getargs_l', Load(), lineno=184, col_offset=41), BinOp(Name('LONG_MIN', Load(), lineno=184, col_offset=52), Sub(), Num(1, lineno=184, col_offset=61), lineno=184, col_offset=52)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertEqual', Load(), lineno=185, col_offset=8), [Name('LONG_MIN', Load(), lineno=185, col_offset=25), Call(Name('getargs_l', Load(), lineno=185, col_offset=35), [Name('LONG_MIN', Load(), lineno=185, col_offset=45)], [], None, None, lineno=185, col_offset=35)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), 'assertEqual', Load(), lineno=186, col_offset=8), [Name('LONG_MAX', Load(), lineno=186, col_offset=25), Call(Name('getargs_l', Load(), lineno=186, col_offset=35), [Name('LONG_MAX', Load(), lineno=186, col_offset=45)], [], None, None, lineno=186, col_offset=35)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertRaises', Load(), lineno=187, col_offset=8), [Name('OverflowError', Load(), lineno=187, col_offset=26), Name('getargs_l', Load(), lineno=187, col_offset=41), BinOp(Name('LONG_MAX', Load(), lineno=187, col_offset=52), Add(), Num(1, lineno=187, col_offset=61), lineno=187, col_offset=52)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [Num(42, lineno=189, col_offset=25), Call(Name('getargs_l', Load(), lineno=189, col_offset=29), [Num(42, lineno=189, col_offset=39)], [], None, None, lineno=189, col_offset=29)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertEqual', Load(), lineno=190, col_offset=8), [Num(42, lineno=190, col_offset=25), Call(Name('getargs_l', Load(), lineno=190, col_offset=29), [Num(42L, lineno=190, col_offset=39)], [], None, None, lineno=190, col_offset=29)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertRaises', Load(), lineno=191, col_offset=8), [Name('OverflowError', Load(), lineno=191, col_offset=26), Name('getargs_l', Load(), lineno=191, col_offset=41), Name('VERY_LARGE', Load(), lineno=191, col_offset=52)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('test_n', arguments([Name('self', Param(), lineno=193, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_n', None)], 0, lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), 'assertRaises', Load(), lineno=197, col_offset=8), [Name('TypeError', Load(), lineno=197, col_offset=26), Name('getargs_n', Load(), lineno=197, col_offset=37), Num(3.14, lineno=197, col_offset=48)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Num(99, lineno=198, col_offset=25), Call(Name('getargs_n', Load(), lineno=198, col_offset=29), [Call(Name('Long', Load(), lineno=198, col_offset=39), [], [], None, None, lineno=198, col_offset=39)], [], None, None, lineno=198, col_offset=29)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Num(99, lineno=199, col_offset=25), Call(Name('getargs_n', Load(), lineno=199, col_offset=29), [Call(Name('Int', Load(), lineno=199, col_offset=39), [], [], None, None, lineno=199, col_offset=39)], [], None, None, lineno=199, col_offset=29)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'assertRaises', Load(), lineno=201, col_offset=8), [Name('OverflowError', Load(), lineno=201, col_offset=26), Name('getargs_n', Load(), lineno=201, col_offset=41), BinOp(Name('PY_SSIZE_T_MIN', Load(), lineno=201, col_offset=52), Sub(), Num(1, lineno=201, col_offset=67), lineno=201, col_offset=52)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'assertEqual', Load(), lineno=202, col_offset=8), [Name('PY_SSIZE_T_MIN', Load(), lineno=202, col_offset=25), Call(Name('getargs_n', Load(), lineno=202, col_offset=41), [Name('PY_SSIZE_T_MIN', Load(), lineno=202, col_offset=51)], [], None, None, lineno=202, col_offset=41)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'assertEqual', Load(), lineno=203, col_offset=8), [Name('PY_SSIZE_T_MAX', Load(), lineno=203, col_offset=25), Call(Name('getargs_n', Load(), lineno=203, col_offset=41), [Name('PY_SSIZE_T_MAX', Load(), lineno=203, col_offset=51)], [], None, None, lineno=203, col_offset=41)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'assertRaises', Load(), lineno=204, col_offset=8), [Name('OverflowError', Load(), lineno=204, col_offset=26), Name('getargs_n', Load(), lineno=204, col_offset=41), BinOp(Name('PY_SSIZE_T_MAX', Load(), lineno=204, col_offset=52), Add(), Num(1, lineno=204, col_offset=67), lineno=204, col_offset=52)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), 'assertEqual', Load(), lineno=206, col_offset=8), [Num(42, lineno=206, col_offset=25), Call(Name('getargs_n', Load(), lineno=206, col_offset=29), [Num(42, lineno=206, col_offset=39)], [], None, None, lineno=206, col_offset=29)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Num(42, lineno=207, col_offset=25), Call(Name('getargs_n', Load(), lineno=207, col_offset=29), [Num(42L, lineno=207, col_offset=39)], [], None, None, lineno=207, col_offset=29)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertRaises', Load(), lineno=208, col_offset=8), [Name('OverflowError', Load(), lineno=208, col_offset=26), Name('getargs_n', Load(), lineno=208, col_offset=41), Name('VERY_LARGE', Load(), lineno=208, col_offset=52)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=193, col_offset=4)], [], lineno=144, col_offset=0), ClassDef('LongLong_TestCase', [Attribute(Name('unittest', Load(), lineno=211, col_offset=24), 'TestCase', Load(), lineno=211, col_offset=24)], [FunctionDef('test_L', arguments([Name('self', Param(), lineno=212, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_L', None)], 0, lineno=213, col_offset=8), With(Call(Attribute(Name('warnings', Load(), lineno=216, col_offset=13), 'catch_warnings', Load(), lineno=216, col_offset=13), [], [], None, None, lineno=216, col_offset=13), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=217, col_offset=12), 'filterwarnings', Load(), lineno=217, col_offset=12), [Str('ignore', lineno=218, col_offset=16)], [keyword('category', Name('DeprecationWarning', Load(), lineno=219, col_offset=25)), keyword('message', Str('.*integer argument expected, got float', lineno=220, col_offset=24)), keyword('module', Name('__name__', Load(), lineno=221, col_offset=23))], None, None, lineno=217, col_offset=12), lineno=217, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=12), 'assertEqual', Load(), lineno=222, col_offset=12), [Num(3, lineno=222, col_offset=29), Call(Name('getargs_L', Load(), lineno=222, col_offset=32), [Num(3.14, lineno=222, col_offset=42)], [], None, None, lineno=222, col_offset=32)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12)], lineno=216, col_offset=13), With(Call(Attribute(Name('warnings', Load(), lineno=223, col_offset=13), 'catch_warnings', Load(), lineno=223, col_offset=13), [], [], None, None, lineno=223, col_offset=13), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=224, col_offset=12), 'filterwarnings', Load(), lineno=224, col_offset=12), [Str('error', lineno=225, col_offset=16)], [keyword('category', Name('DeprecationWarning', Load(), lineno=226, col_offset=25)), keyword('message', Str('.*integer argument expected, got float', lineno=227, col_offset=24)), keyword('module', Str('unittest', lineno=228, col_offset=23))], None, None, lineno=224, col_offset=12), lineno=224, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=12), 'assertRaises', Load(), lineno=229, col_offset=12), [Name('DeprecationWarning', Load(), lineno=229, col_offset=30), Name('getargs_L', Load(), lineno=229, col_offset=50), Num(3.14, lineno=229, col_offset=61)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12)], lineno=223, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertRaises', Load(), lineno=231, col_offset=8), [Name('TypeError', Load(), lineno=231, col_offset=26), Name('getargs_L', Load(), lineno=231, col_offset=37), Str('Hello', lineno=231, col_offset=48)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertEqual', Load(), lineno=232, col_offset=8), [Num(99, lineno=232, col_offset=25), Call(Name('getargs_L', Load(), lineno=232, col_offset=29), [Call(Name('Long', Load(), lineno=232, col_offset=39), [], [], None, None, lineno=232, col_offset=39)], [], None, None, lineno=232, col_offset=29)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'assertEqual', Load(), lineno=233, col_offset=8), [Num(99, lineno=233, col_offset=25), Call(Name('getargs_L', Load(), lineno=233, col_offset=29), [Call(Name('Int', Load(), lineno=233, col_offset=39), [], [], None, None, lineno=233, col_offset=39)], [], None, None, lineno=233, col_offset=29)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertRaises', Load(), lineno=235, col_offset=8), [Name('OverflowError', Load(), lineno=235, col_offset=26), Name('getargs_L', Load(), lineno=235, col_offset=41), BinOp(Name('LLONG_MIN', Load(), lineno=235, col_offset=52), Sub(), Num(1, lineno=235, col_offset=62), lineno=235, col_offset=52)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertEqual', Load(), lineno=236, col_offset=8), [Name('LLONG_MIN', Load(), lineno=236, col_offset=25), Call(Name('getargs_L', Load(), lineno=236, col_offset=36), [Name('LLONG_MIN', Load(), lineno=236, col_offset=46)], [], None, None, lineno=236, col_offset=36)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertEqual', Load(), lineno=237, col_offset=8), [Name('LLONG_MAX', Load(), lineno=237, col_offset=25), Call(Name('getargs_L', Load(), lineno=237, col_offset=36), [Name('LLONG_MAX', Load(), lineno=237, col_offset=46)], [], None, None, lineno=237, col_offset=36)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'assertRaises', Load(), lineno=238, col_offset=8), [Name('OverflowError', Load(), lineno=238, col_offset=26), Name('getargs_L', Load(), lineno=238, col_offset=41), BinOp(Name('LLONG_MAX', Load(), lineno=238, col_offset=52), Add(), Num(1, lineno=238, col_offset=62), lineno=238, col_offset=52)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertEqual', Load(), lineno=240, col_offset=8), [Num(42, lineno=240, col_offset=25), Call(Name('getargs_L', Load(), lineno=240, col_offset=29), [Num(42, lineno=240, col_offset=39)], [], None, None, lineno=240, col_offset=29)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertEqual', Load(), lineno=241, col_offset=8), [Num(42, lineno=241, col_offset=25), Call(Name('getargs_L', Load(), lineno=241, col_offset=29), [Num(42L, lineno=241, col_offset=39)], [], None, None, lineno=241, col_offset=29)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'assertRaises', Load(), lineno=242, col_offset=8), [Name('OverflowError', Load(), lineno=242, col_offset=26), Name('getargs_L', Load(), lineno=242, col_offset=41), Name('VERY_LARGE', Load(), lineno=242, col_offset=52)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8)], [], lineno=212, col_offset=4), FunctionDef('test_K', arguments([Name('self', Param(), lineno=244, col_offset=15)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_K', None)], 0, lineno=245, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'assertRaises', Load(), lineno=247, col_offset=8), [Name('TypeError', Load(), lineno=247, col_offset=26), Name('getargs_K', Load(), lineno=247, col_offset=37), Num(3.14, lineno=247, col_offset=48)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'assertRaises', Load(), lineno=248, col_offset=8), [Name('TypeError', Load(), lineno=248, col_offset=26), Name('getargs_K', Load(), lineno=248, col_offset=37), Call(Name('Long', Load(), lineno=248, col_offset=48), [], [], None, None, lineno=248, col_offset=48)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertRaises', Load(), lineno=249, col_offset=8), [Name('TypeError', Load(), lineno=249, col_offset=26), Name('getargs_K', Load(), lineno=249, col_offset=37), Call(Name('Int', Load(), lineno=249, col_offset=48), [], [], None, None, lineno=249, col_offset=48)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'assertEqual', Load(), lineno=250, col_offset=8), [Name('ULLONG_MAX', Load(), lineno=250, col_offset=25), Call(Name('getargs_K', Load(), lineno=250, col_offset=37), [Name('ULLONG_MAX', Load(), lineno=250, col_offset=47)], [], None, None, lineno=250, col_offset=37)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=8), 'assertEqual', Load(), lineno=251, col_offset=8), [Num(0, lineno=251, col_offset=25), Call(Name('getargs_K', Load(), lineno=251, col_offset=28), [Num(0, lineno=251, col_offset=38)], [], None, None, lineno=251, col_offset=28)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertEqual', Load(), lineno=252, col_offset=8), [Num(0, lineno=252, col_offset=25), Call(Name('getargs_K', Load(), lineno=252, col_offset=28), [BinOp(Name('ULLONG_MAX', Load(), lineno=252, col_offset=38), Add(), Num(1, lineno=252, col_offset=49), lineno=252, col_offset=38)], [], None, None, lineno=252, col_offset=28)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'assertEqual', Load(), lineno=254, col_offset=8), [Num(42, lineno=254, col_offset=25), Call(Name('getargs_K', Load(), lineno=254, col_offset=29), [Num(42, lineno=254, col_offset=39)], [], None, None, lineno=254, col_offset=29)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [Num(42, lineno=255, col_offset=25), Call(Name('getargs_K', Load(), lineno=255, col_offset=29), [Num(42L, lineno=255, col_offset=39)], [], None, None, lineno=255, col_offset=29)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertEqual', Load(), lineno=257, col_offset=8), [BinOp(Name('VERY_LARGE', Load(), lineno=257, col_offset=25), BitAnd(), Name('ULLONG_MAX', Load(), lineno=257, col_offset=38), lineno=257, col_offset=25), Call(Name('getargs_K', Load(), lineno=257, col_offset=50), [Name('VERY_LARGE', Load(), lineno=257, col_offset=60)], [], None, None, lineno=257, col_offset=50)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8)], [], lineno=244, col_offset=4)], [], lineno=211, col_offset=0), ClassDef('Tuple_TestCase', [Attribute(Name('unittest', Load(), lineno=260, col_offset=21), 'TestCase', Load(), lineno=260, col_offset=21)], [FunctionDef('test_tuple', arguments([Name('self', Param(), lineno=261, col_offset=19)], None, None, []), [ImportFrom('_testcapi', [alias('getargs_tuple', None)], 0, lineno=262, col_offset=8), Assign([Name('ret', Store(), lineno=264, col_offset=8)], Call(Name('getargs_tuple', Load(), lineno=264, col_offset=14), [Num(1, lineno=264, col_offset=28), Tuple([Num(2, lineno=264, col_offset=32), Num(3, lineno=264, col_offset=35)], Load(), lineno=264, col_offset=32)], [], None, None, lineno=264, col_offset=14), lineno=264, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=265, col_offset=8), 'assertEqual', Load(), lineno=265, col_offset=8), [Name('ret', Load(), lineno=265, col_offset=25), Tuple([Num(1, lineno=265, col_offset=31), Num(2, lineno=265, col_offset=33), Num(3, lineno=265, col_offset=35)], Load(), lineno=265, col_offset=31)], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), ClassDef('seq', [], [FunctionDef('__len__', arguments([Name('self', Param(), lineno=269, col_offset=24)], None, None, []), [Return(Num(2, lineno=270, col_offset=23), lineno=270, col_offset=16)], [], lineno=269, col_offset=12), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=271, col_offset=28), Name('n', Param(), lineno=271, col_offset=34)], None, None, []), [Raise(Name('ValueError', Load(), lineno=272, col_offset=22), None, None, lineno=272, col_offset=16)], [], lineno=271, col_offset=12)], [], lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertRaises', Load(), lineno=273, col_offset=8), [Name('TypeError', Load(), lineno=273, col_offset=26), Name('getargs_tuple', Load(), lineno=273, col_offset=37), Num(1, lineno=273, col_offset=52), Call(Name('seq', Load(), lineno=273, col_offset=55), [], [], None, None, lineno=273, col_offset=55)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=261, col_offset=4)], [], lineno=260, col_offset=0), ClassDef('Keywords_TestCase', [Attribute(Name('unittest', Load(), lineno=275, col_offset=24), 'TestCase', Load(), lineno=275, col_offset=24)], [FunctionDef('test_positional_args', arguments([Name('self', Param(), lineno=276, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=8), 'assertEqual', Load(), lineno=278, col_offset=8), [Call(Name('getargs_keywords', Load(), lineno=279, col_offset=12), [Tuple([Num(1, lineno=279, col_offset=30), Num(2, lineno=279, col_offset=32)], Load(), lineno=279, col_offset=30), Num(3, lineno=279, col_offset=36), Tuple([Num(4, lineno=279, col_offset=40), Tuple([Num(5, lineno=279, col_offset=43), Num(6, lineno=279, col_offset=45)], Load(), lineno=279, col_offset=43)], Load(), lineno=279, col_offset=40), Tuple([Num(7, lineno=279, col_offset=51), Num(8, lineno=279, col_offset=53), Num(9, lineno=279, col_offset=55)], Load(), lineno=279, col_offset=51), Num(10, lineno=279, col_offset=59)], [], None, None, lineno=279, col_offset=12), Tuple([Num(1, lineno=280, col_offset=13), Num(2, lineno=280, col_offset=16), Num(3, lineno=280, col_offset=19), Num(4, lineno=280, col_offset=22), Num(5, lineno=280, col_offset=25), Num(6, lineno=280, col_offset=28), Num(7, lineno=280, col_offset=31), Num(8, lineno=280, col_offset=34), Num(9, lineno=280, col_offset=37), Num(10, lineno=280, col_offset=40)], Load(), lineno=280, col_offset=13)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('test_mixed_args', arguments([Name('self', Param(), lineno=282, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'assertEqual', Load(), lineno=284, col_offset=8), [Call(Name('getargs_keywords', Load(), lineno=285, col_offset=12), [Tuple([Num(1, lineno=285, col_offset=30), Num(2, lineno=285, col_offset=32)], Load(), lineno=285, col_offset=30), Num(3, lineno=285, col_offset=36), Tuple([Num(4, lineno=285, col_offset=40), Tuple([Num(5, lineno=285, col_offset=43), Num(6, lineno=285, col_offset=45)], Load(), lineno=285, col_offset=43)], Load(), lineno=285, col_offset=40)], [keyword('arg4', Tuple([Num(7, lineno=285, col_offset=56), Num(8, lineno=285, col_offset=58), Num(9, lineno=285, col_offset=60)], Load(), lineno=285, col_offset=56)), keyword('arg5', Num(10, lineno=285, col_offset=69))], None, None, lineno=285, col_offset=12), Tuple([Num(1, lineno=286, col_offset=13), Num(2, lineno=286, col_offset=16), Num(3, lineno=286, col_offset=19), Num(4, lineno=286, col_offset=22), Num(5, lineno=286, col_offset=25), Num(6, lineno=286, col_offset=28), Num(7, lineno=286, col_offset=31), Num(8, lineno=286, col_offset=34), Num(9, lineno=286, col_offset=37), Num(10, lineno=286, col_offset=40)], Load(), lineno=286, col_offset=13)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8)], [], lineno=282, col_offset=4), FunctionDef('test_keyword_args', arguments([Name('self', Param(), lineno=288, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'assertEqual', Load(), lineno=290, col_offset=8), [Call(Name('getargs_keywords', Load(), lineno=291, col_offset=12), [], [keyword('arg1', Tuple([Num(1, lineno=291, col_offset=35), Num(2, lineno=291, col_offset=37)], Load(), lineno=291, col_offset=35)), keyword('arg2', Num(3, lineno=291, col_offset=46)), keyword('arg3', Tuple([Num(4, lineno=291, col_offset=55), Tuple([Num(5, lineno=291, col_offset=58), Num(6, lineno=291, col_offset=60)], Load(), lineno=291, col_offset=58)], Load(), lineno=291, col_offset=55)), keyword('arg4', Tuple([Num(7, lineno=291, col_offset=71), Num(8, lineno=291, col_offset=73), Num(9, lineno=291, col_offset=75)], Load(), lineno=291, col_offset=71)), keyword('arg5', Num(10, lineno=291, col_offset=84))], None, None, lineno=291, col_offset=12), Tuple([Num(1, lineno=292, col_offset=13), Num(2, lineno=292, col_offset=16), Num(3, lineno=292, col_offset=19), Num(4, lineno=292, col_offset=22), Num(5, lineno=292, col_offset=25), Num(6, lineno=292, col_offset=28), Num(7, lineno=292, col_offset=31), Num(8, lineno=292, col_offset=34), Num(9, lineno=292, col_offset=37), Num(10, lineno=292, col_offset=40)], Load(), lineno=292, col_offset=13)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('test_optional_args', arguments([Name('self', Param(), lineno=294, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'assertEqual', Load(), lineno=296, col_offset=8), [Call(Name('getargs_keywords', Load(), lineno=297, col_offset=12), [], [keyword('arg1', Tuple([Num(1, lineno=297, col_offset=35), Num(2, lineno=297, col_offset=37)], Load(), lineno=297, col_offset=35)), keyword('arg2', Num(3, lineno=297, col_offset=46)), keyword('arg5', Num(10, lineno=297, col_offset=54))], None, None, lineno=297, col_offset=12), Tuple([Num(1, lineno=298, col_offset=13), Num(2, lineno=298, col_offset=16), Num(3, lineno=298, col_offset=19), Num(-1, lineno=298, col_offset=23), Num(-1, lineno=298, col_offset=27), Num(-1, lineno=298, col_offset=31), Num(-1, lineno=298, col_offset=35), Num(-1, lineno=298, col_offset=39), Num(-1, lineno=298, col_offset=43), Num(10, lineno=298, col_offset=46)], Load(), lineno=298, col_offset=13)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=294, col_offset=4), FunctionDef('test_required_args', arguments([Name('self', Param(), lineno=300, col_offset=27)], None, None, []), [TryExcept([Expr(Call(Name('getargs_keywords', Load(), lineno=303, col_offset=12), [], [keyword('arg1', Tuple([Num(1, lineno=303, col_offset=35), Num(2, lineno=303, col_offset=37)], Load(), lineno=303, col_offset=35))], None, None, lineno=303, col_offset=12), lineno=303, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=304, col_offset=15), Name('err', Store(), lineno=304, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=12), 'assertEqual', Load(), lineno=305, col_offset=12), [Call(Name('str', Load(), lineno=305, col_offset=29), [Name('err', Load(), lineno=305, col_offset=33)], [], None, None, lineno=305, col_offset=29), Str("Required argument 'arg2' (pos 2) not found", lineno=305, col_offset=39)], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12)], lineno=304, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=12), 'fail', Load(), lineno=307, col_offset=12), [Str('TypeError should have been raised', lineno=307, col_offset=22)], [], None, None, lineno=307, col_offset=12), lineno=307, col_offset=12)], lineno=302, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('test_too_many_args', arguments([Name('self', Param(), lineno=308, col_offset=27)], None, None, []), [TryExcept([Expr(Call(Name('getargs_keywords', Load(), lineno=310, col_offset=12), [Tuple([Num(1, lineno=310, col_offset=30), Num(2, lineno=310, col_offset=32)], Load(), lineno=310, col_offset=30), Num(3, lineno=310, col_offset=35), Tuple([Num(4, lineno=310, col_offset=38), Tuple([Num(5, lineno=310, col_offset=41), Num(6, lineno=310, col_offset=43)], Load(), lineno=310, col_offset=41)], Load(), lineno=310, col_offset=38), Tuple([Num(7, lineno=310, col_offset=48), Num(8, lineno=310, col_offset=50), Num(9, lineno=310, col_offset=52)], Load(), lineno=310, col_offset=48), Num(10, lineno=310, col_offset=55), Num(111, lineno=310, col_offset=58)], [], None, None, lineno=310, col_offset=12), lineno=310, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=311, col_offset=15), Name('err', Store(), lineno=311, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=312, col_offset=12), 'assertEqual', Load(), lineno=312, col_offset=12), [Call(Name('str', Load(), lineno=312, col_offset=29), [Name('err', Load(), lineno=312, col_offset=33)], [], None, None, lineno=312, col_offset=29), Str('function takes at most 5 arguments (6 given)', lineno=312, col_offset=39)], [], None, None, lineno=312, col_offset=12), lineno=312, col_offset=12)], lineno=311, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=12), 'fail', Load(), lineno=314, col_offset=12), [Str('TypeError should have been raised', lineno=314, col_offset=22)], [], None, None, lineno=314, col_offset=12), lineno=314, col_offset=12)], lineno=309, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('test_invalid_keyword', arguments([Name('self', Param(), lineno=315, col_offset=29)], None, None, []), [TryExcept([Expr(Call(Name('getargs_keywords', Load(), lineno=318, col_offset=12), [Tuple([Num(1, lineno=318, col_offset=30), Num(2, lineno=318, col_offset=32)], Load(), lineno=318, col_offset=30), Num(3, lineno=318, col_offset=35)], [keyword('arg5', Num(10, lineno=318, col_offset=42)), keyword('arg666', Num(666, lineno=318, col_offset=52))], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=319, col_offset=15), Name('err', Store(), lineno=319, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=12), 'assertEqual', Load(), lineno=320, col_offset=12), [Call(Name('str', Load(), lineno=320, col_offset=29), [Name('err', Load(), lineno=320, col_offset=33)], [], None, None, lineno=320, col_offset=29), Str("'arg666' is an invalid keyword argument for this function", lineno=320, col_offset=39)], [], None, None, lineno=320, col_offset=12), lineno=320, col_offset=12)], lineno=319, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=12), 'fail', Load(), lineno=322, col_offset=12), [Str('TypeError should have been raised', lineno=322, col_offset=22)], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], lineno=317, col_offset=8)], [], lineno=315, col_offset=4)], [], lineno=275, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('tests', Store(), lineno=325, col_offset=4)], List([Name('Signed_TestCase', Load(), lineno=325, col_offset=13), Name('Unsigned_TestCase', Load(), lineno=325, col_offset=30), Name('Tuple_TestCase', Load(), lineno=325, col_offset=49), Name('Keywords_TestCase', Load(), lineno=325, col_offset=65)], Load(), lineno=325, col_offset=12), lineno=325, col_offset=4), TryExcept([ImportFrom('_testcapi', [alias('getargs_L', None), alias('getargs_K', None)], 0, lineno=327, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=328, col_offset=11), None, [Pass( lineno=329, col_offset=8)], lineno=328, col_offset=4)], [Expr(Call(Attribute(Name('tests', Load(), lineno=331, col_offset=8), 'append', Load(), lineno=331, col_offset=8), [Name('LongLong_TestCase', Load(), lineno=331, col_offset=21)], [], None, None, lineno=331, col_offset=8), lineno=331, col_offset=8)], lineno=326, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=332, col_offset=4), 'run_unittest', Load(), lineno=332, col_offset=4), [], [], Name('tests', Load(), lineno=332, col_offset=31), None, lineno=332, col_offset=4), lineno=332, col_offset=4)], [], lineno=324, col_offset=0), If(Compare(Name('__name__', Load(), lineno=334, col_offset=3), [Eq()], [Str('__main__', lineno=334, col_offset=15)], lineno=334, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=335, col_offset=4), [], [], None, None, lineno=335, col_offset=4), lineno=335, col_offset=4)], [], lineno=334, col_offset=0)])
