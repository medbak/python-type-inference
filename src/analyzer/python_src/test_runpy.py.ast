Module([Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('os.path', None)], lineno=4, col_offset=0), Import([alias('sys', None)], lineno=5, col_offset=0), Import([alias('re', None)], lineno=6, col_offset=0), Import([alias('tempfile', None)], lineno=7, col_offset=0), ImportFrom('test.test_support', [alias('verbose', None), alias('run_unittest', None), alias('forget', None)], 0, lineno=8, col_offset=0), ImportFrom('test.script_helper', [alias('temp_dir', None), alias('make_script', None), alias('compile_script', None), alias('make_pkg', None), alias('make_zip_script', None), alias('make_zip_pkg', None)], 0, lineno=9, col_offset=0), ImportFrom('runpy', [alias('_run_code', None), alias('_run_module_code', None), alias('run_module', None), alias('run_path', None)], 0, lineno=13, col_offset=0), ClassDef('RunModuleCodeTest', [Attribute(Name('unittest', Load(), lineno=21, col_offset=24), 'TestCase', Load(), lineno=21, col_offset=24)], [Expr(Str('Unit tests for runpy._run_code and runpy._run_module_code', lineno=22, col_offset=4), lineno=22, col_offset=4), Assign([Name('expected_result', Store(), lineno=24, col_offset=4)], List([Str('Top level assignment', lineno=24, col_offset=23), Str('Lower level reference', lineno=24, col_offset=47)], Load(), lineno=24, col_offset=22), lineno=24, col_offset=4), Assign([Name('test_source', Store(), lineno=25, col_offset=4)], Str("# Check basic code execution\nresult = ['Top level assignment']\ndef f():\n    result.append('Lower level reference')\nf()\n# Check the sys module\nimport sys\nrun_argv0 = sys.argv[0]\nrun_name_in_sys_modules = __name__ in sys.modules\nif run_name_in_sys_modules:\n   module_in_sys_modules = globals() is sys.modules[__name__].__dict__\n# Check nested operation\nimport runpy\nnested = runpy._run_module_code('x=1\\n', mod_name='<run>')\n", lineno=26, col_offset=8), lineno=25, col_offset=4), FunctionDef('test_run_code', arguments([Name('self', Param(), lineno=42, col_offset=22)], None, None, []), [Assign([Name('saved_argv0', Store(), lineno=43, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=43, col_offset=22), 'argv', Load(), lineno=43, col_offset=22), Index(Num(0, lineno=43, col_offset=31)), Load(), lineno=43, col_offset=22), lineno=43, col_offset=8), Assign([Name('d', Store(), lineno=44, col_offset=8)], Call(Name('_run_code', Load(), lineno=44, col_offset=12), [Attribute(Name('self', Load(), lineno=44, col_offset=22), 'test_source', Load(), lineno=44, col_offset=22), Dict([], [], lineno=44, col_offset=40)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Subscript(Name('d', Load(), lineno=45, col_offset=25), Index(Str('result', lineno=45, col_offset=27)), Load(), lineno=45, col_offset=25), Attribute(Name('self', Load(), lineno=45, col_offset=38), 'expected_result', Load(), lineno=45, col_offset=38)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertIs', Load(), lineno=46, col_offset=8), [Subscript(Name('d', Load(), lineno=46, col_offset=22), Index(Str('__name__', lineno=46, col_offset=24)), Load(), lineno=46, col_offset=22), Name('None', Load(), lineno=46, col_offset=37)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'assertIs', Load(), lineno=47, col_offset=8), [Subscript(Name('d', Load(), lineno=47, col_offset=22), Index(Str('__file__', lineno=47, col_offset=24)), Load(), lineno=47, col_offset=22), Name('None', Load(), lineno=47, col_offset=37)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertIs', Load(), lineno=48, col_offset=8), [Subscript(Name('d', Load(), lineno=48, col_offset=22), Index(Str('__loader__', lineno=48, col_offset=24)), Load(), lineno=48, col_offset=22), Name('None', Load(), lineno=48, col_offset=39)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertIs', Load(), lineno=49, col_offset=8), [Subscript(Name('d', Load(), lineno=49, col_offset=22), Index(Str('__package__', lineno=49, col_offset=24)), Load(), lineno=49, col_offset=22), Name('None', Load(), lineno=49, col_offset=40)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertIs', Load(), lineno=50, col_offset=8), [Subscript(Name('d', Load(), lineno=50, col_offset=22), Index(Str('run_argv0', lineno=50, col_offset=24)), Load(), lineno=50, col_offset=22), Name('saved_argv0', Load(), lineno=50, col_offset=38)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertNotIn', Load(), lineno=51, col_offset=8), [Str('run_name', lineno=51, col_offset=25), Name('d', Load(), lineno=51, col_offset=37)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertIs', Load(), lineno=52, col_offset=8), [Subscript(Attribute(Name('sys', Load(), lineno=52, col_offset=22), 'argv', Load(), lineno=52, col_offset=22), Index(Num(0, lineno=52, col_offset=31)), Load(), lineno=52, col_offset=22), Name('saved_argv0', Load(), lineno=52, col_offset=35)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('test_run_module_code', arguments([Name('self', Param(), lineno=54, col_offset=29)], None, None, []), [Assign([Name('initial', Store(), lineno=55, col_offset=8)], Call(Name('object', Load(), lineno=55, col_offset=18), [], [], None, None, lineno=55, col_offset=18), lineno=55, col_offset=8), Assign([Name('name', Store(), lineno=56, col_offset=8)], Str('<Nonsense>', lineno=56, col_offset=15), lineno=56, col_offset=8), Assign([Name('file', Store(), lineno=57, col_offset=8)], Str('Some other nonsense', lineno=57, col_offset=15), lineno=57, col_offset=8), Assign([Name('loader', Store(), lineno=58, col_offset=8)], Str("Now you're just being silly", lineno=58, col_offset=17), lineno=58, col_offset=8), Assign([Name('package', Store(), lineno=59, col_offset=8)], Str('', lineno=59, col_offset=18), lineno=59, col_offset=8), Assign([Name('d1', Store(), lineno=60, col_offset=8)], Call(Name('dict', Load(), lineno=60, col_offset=13), [], [keyword('initial', Name('initial', Load(), lineno=60, col_offset=26))], None, None, lineno=60, col_offset=13), lineno=60, col_offset=8), Assign([Name('saved_argv0', Store(), lineno=61, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=61, col_offset=22), 'argv', Load(), lineno=61, col_offset=22), Index(Num(0, lineno=61, col_offset=31)), Load(), lineno=61, col_offset=22), lineno=61, col_offset=8), Assign([Name('d2', Store(), lineno=62, col_offset=8)], Call(Name('_run_module_code', Load(), lineno=62, col_offset=13), [Attribute(Name('self', Load(), lineno=62, col_offset=30), 'test_source', Load(), lineno=62, col_offset=30), Name('d1', Load(), lineno=63, col_offset=30), Name('name', Load(), lineno=64, col_offset=30), Name('file', Load(), lineno=65, col_offset=30), Name('loader', Load(), lineno=66, col_offset=30), Name('package', Load(), lineno=67, col_offset=30)], [], None, None, lineno=62, col_offset=13), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertNotIn', Load(), lineno=68, col_offset=8), [Str('result', lineno=68, col_offset=25), Name('d1', Load(), lineno=68, col_offset=35)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertIs', Load(), lineno=69, col_offset=8), [Subscript(Name('d2', Load(), lineno=69, col_offset=22), Index(Str('initial', lineno=69, col_offset=25)), Load(), lineno=69, col_offset=22), Name('initial', Load(), lineno=69, col_offset=37)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertEqual', Load(), lineno=70, col_offset=8), [Subscript(Name('d2', Load(), lineno=70, col_offset=25), Index(Str('result', lineno=70, col_offset=28)), Load(), lineno=70, col_offset=25), Attribute(Name('self', Load(), lineno=70, col_offset=39), 'expected_result', Load(), lineno=70, col_offset=39)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'assertEqual', Load(), lineno=71, col_offset=8), [Subscript(Subscript(Name('d2', Load(), lineno=71, col_offset=25), Index(Str('nested', lineno=71, col_offset=28)), Load(), lineno=71, col_offset=25), Index(Str('x', lineno=71, col_offset=38)), Load(), lineno=71, col_offset=25), Num(1, lineno=71, col_offset=44)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertIs', Load(), lineno=72, col_offset=8), [Subscript(Name('d2', Load(), lineno=72, col_offset=22), Index(Str('__name__', lineno=72, col_offset=25)), Load(), lineno=72, col_offset=22), Name('name', Load(), lineno=72, col_offset=38)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertTrue', Load(), lineno=73, col_offset=8), [Subscript(Name('d2', Load(), lineno=73, col_offset=24), Index(Str('run_name_in_sys_modules', lineno=73, col_offset=27)), Load(), lineno=73, col_offset=24)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'assertTrue', Load(), lineno=74, col_offset=8), [Subscript(Name('d2', Load(), lineno=74, col_offset=24), Index(Str('module_in_sys_modules', lineno=74, col_offset=27)), Load(), lineno=74, col_offset=24)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertIs', Load(), lineno=75, col_offset=8), [Subscript(Name('d2', Load(), lineno=75, col_offset=22), Index(Str('__file__', lineno=75, col_offset=25)), Load(), lineno=75, col_offset=22), Name('file', Load(), lineno=75, col_offset=38)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'assertIs', Load(), lineno=76, col_offset=8), [Subscript(Name('d2', Load(), lineno=76, col_offset=22), Index(Str('run_argv0', lineno=76, col_offset=25)), Load(), lineno=76, col_offset=22), Name('file', Load(), lineno=76, col_offset=39)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'assertIs', Load(), lineno=77, col_offset=8), [Subscript(Name('d2', Load(), lineno=77, col_offset=22), Index(Str('__loader__', lineno=77, col_offset=25)), Load(), lineno=77, col_offset=22), Name('loader', Load(), lineno=77, col_offset=40)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertIs', Load(), lineno=78, col_offset=8), [Subscript(Name('d2', Load(), lineno=78, col_offset=22), Index(Str('__package__', lineno=78, col_offset=25)), Load(), lineno=78, col_offset=22), Name('package', Load(), lineno=78, col_offset=41)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertIs', Load(), lineno=79, col_offset=8), [Subscript(Attribute(Name('sys', Load(), lineno=79, col_offset=22), 'argv', Load(), lineno=79, col_offset=22), Index(Num(0, lineno=79, col_offset=31)), Load(), lineno=79, col_offset=22), Name('saved_argv0', Load(), lineno=79, col_offset=35)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertNotIn', Load(), lineno=80, col_offset=8), [Name('name', Load(), lineno=80, col_offset=25), Attribute(Name('sys', Load(), lineno=80, col_offset=31), 'modules', Load(), lineno=80, col_offset=31)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8)], [], lineno=54, col_offset=4)], [], lineno=21, col_offset=0), ClassDef('RunModuleTest', [Attribute(Name('unittest', Load(), lineno=83, col_offset=20), 'TestCase', Load(), lineno=83, col_offset=20)], [Expr(Str('Unit tests for runpy.run_module', lineno=84, col_offset=4), lineno=84, col_offset=4), FunctionDef('expect_import_error', arguments([Name('self', Param(), lineno=86, col_offset=28), Name('mod_name', Param(), lineno=86, col_offset=34)], None, None, []), [TryExcept([Expr(Call(Name('run_module', Load(), lineno=88, col_offset=12), [Name('mod_name', Load(), lineno=88, col_offset=23)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=89, col_offset=15), None, [Pass( lineno=90, col_offset=12)], lineno=89, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=12), 'fail', Load(), lineno=92, col_offset=12), [BinOp(Str('Expected import error for ', lineno=92, col_offset=22), Add(), Name('mod_name', Load(), lineno=92, col_offset=53), lineno=92, col_offset=22)], [], None, None, lineno=92, col_offset=12), lineno=92, col_offset=12)], lineno=87, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('test_invalid_names', arguments([Name('self', Param(), lineno=94, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=96, col_offset=8), 'expect_import_error', Load(), lineno=96, col_offset=8), [Str('sys', lineno=96, col_offset=33)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'expect_import_error', Load(), lineno=98, col_offset=8), [Str('sys.imp.eric', lineno=98, col_offset=33)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=8), 'expect_import_error', Load(), lineno=99, col_offset=8), [Str('os.path.half', lineno=99, col_offset=33)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'expect_import_error', Load(), lineno=100, col_offset=8), [Str('a.bee', lineno=100, col_offset=33)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'expect_import_error', Load(), lineno=101, col_offset=8), [Str('.howard', lineno=101, col_offset=33)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'expect_import_error', Load(), lineno=102, col_offset=8), [Str('..eaten', lineno=102, col_offset=33)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'expect_import_error', Load(), lineno=104, col_offset=8), [Str('multiprocessing', lineno=104, col_offset=33)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('test_library_module', arguments([Name('self', Param(), lineno=106, col_offset=28)], None, None, []), [Expr(Call(Name('run_module', Load(), lineno=107, col_offset=8), [Str('runpy', lineno=107, col_offset=19)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('_add_pkg_dir', arguments([Name('self', Param(), lineno=109, col_offset=21), Name('pkg_dir', Param(), lineno=109, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=110, col_offset=8), 'mkdir', Load(), lineno=110, col_offset=8), [Name('pkg_dir', Load(), lineno=110, col_offset=17)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Assign([Name('pkg_fname', Store(), lineno=111, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=111, col_offset=20), 'path', Load(), lineno=111, col_offset=20), 'join', Load(), lineno=111, col_offset=20), [Name('pkg_dir', Load(), lineno=111, col_offset=33), BinOp(BinOp(Str('__init__', lineno=111, col_offset=42), Add(), Attribute(Name('os', Load(), lineno=111, col_offset=53), 'extsep', Load(), lineno=111, col_offset=53), lineno=111, col_offset=42), Add(), Str('py', lineno=111, col_offset=63), lineno=111, col_offset=62)], [], None, None, lineno=111, col_offset=20), lineno=111, col_offset=8), Assign([Name('pkg_file', Store(), lineno=112, col_offset=8)], Call(Name('open', Load(), lineno=112, col_offset=19), [Name('pkg_fname', Load(), lineno=112, col_offset=24), Str('w', lineno=112, col_offset=35)], [], None, None, lineno=112, col_offset=19), lineno=112, col_offset=8), Expr(Call(Attribute(Name('pkg_file', Load(), lineno=113, col_offset=8), 'close', Load(), lineno=113, col_offset=8), [], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Return(Name('pkg_fname', Load(), lineno=114, col_offset=15), lineno=114, col_offset=8)], [], lineno=109, col_offset=4), FunctionDef('_make_pkg', arguments([Name('self', Param(), lineno=116, col_offset=18), Name('source', Param(), lineno=116, col_offset=24), Name('depth', Param(), lineno=116, col_offset=32), Name('mod_base', Param(), lineno=116, col_offset=39)], None, None, [Str('runpy_test', lineno=116, col_offset=48)]), [Assign([Name('pkg_name', Store(), lineno=117, col_offset=8)], Str('__runpy_pkg__', lineno=117, col_offset=19), lineno=117, col_offset=8), Assign([Name('test_fname', Store(), lineno=118, col_offset=8)], BinOp(BinOp(Name('mod_base', Load(), lineno=118, col_offset=21), Add(), Attribute(Name('os', Load(), lineno=118, col_offset=30), 'extsep', Load(), lineno=118, col_offset=30), lineno=118, col_offset=21), Add(), Str('py', lineno=118, col_offset=40), lineno=118, col_offset=39), lineno=118, col_offset=8), Assign([Name('pkg_dir', Store(), lineno=119, col_offset=8), Name('sub_dir', Store(), lineno=119, col_offset=18)], Call(Attribute(Name('tempfile', Load(), lineno=119, col_offset=28), 'mkdtemp', Load(), lineno=119, col_offset=28), [], [], None, None, lineno=119, col_offset=28), lineno=119, col_offset=8), If(Name('verbose', Load(), lineno=120, col_offset=11), [Print(None, [Str('  Package tree in:', lineno=120, col_offset=26), Name('sub_dir', Load(), lineno=120, col_offset=48)], True, lineno=120, col_offset=20)], [], lineno=120, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=121, col_offset=8), 'path', Load(), lineno=121, col_offset=8), 'insert', Load(), lineno=121, col_offset=8), [Num(0, lineno=121, col_offset=24), Name('pkg_dir', Load(), lineno=121, col_offset=27)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), If(Name('verbose', Load(), lineno=122, col_offset=11), [Print(None, [Str('  Updated sys.path:', lineno=122, col_offset=26), Subscript(Attribute(Name('sys', Load(), lineno=122, col_offset=49), 'path', Load(), lineno=122, col_offset=49), Index(Num(0, lineno=122, col_offset=58)), Load(), lineno=122, col_offset=49)], True, lineno=122, col_offset=20)], [], lineno=122, col_offset=8), For(Name('i', Store(), lineno=123, col_offset=12), Call(Name('range', Load(), lineno=123, col_offset=17), [Name('depth', Load(), lineno=123, col_offset=23)], [], None, None, lineno=123, col_offset=17), [Assign([Name('sub_dir', Store(), lineno=124, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=124, col_offset=22), 'path', Load(), lineno=124, col_offset=22), 'join', Load(), lineno=124, col_offset=22), [Name('sub_dir', Load(), lineno=124, col_offset=35), Name('pkg_name', Load(), lineno=124, col_offset=44)], [], None, None, lineno=124, col_offset=22), lineno=124, col_offset=12), Assign([Name('pkg_fname', Store(), lineno=125, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=125, col_offset=24), '_add_pkg_dir', Load(), lineno=125, col_offset=24), [Name('sub_dir', Load(), lineno=125, col_offset=42)], [], None, None, lineno=125, col_offset=24), lineno=125, col_offset=12), If(Name('verbose', Load(), lineno=126, col_offset=15), [Print(None, [Str('  Next level in:', lineno=126, col_offset=30), Name('sub_dir', Load(), lineno=126, col_offset=50)], True, lineno=126, col_offset=24)], [], lineno=126, col_offset=12), If(Name('verbose', Load(), lineno=127, col_offset=15), [Print(None, [Str('  Created:', lineno=127, col_offset=30), Name('pkg_fname', Load(), lineno=127, col_offset=44)], True, lineno=127, col_offset=24)], [], lineno=127, col_offset=12)], [], lineno=123, col_offset=8), Assign([Name('mod_fname', Store(), lineno=128, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=128, col_offset=20), 'path', Load(), lineno=128, col_offset=20), 'join', Load(), lineno=128, col_offset=20), [Name('sub_dir', Load(), lineno=128, col_offset=33), Name('test_fname', Load(), lineno=128, col_offset=42)], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=8), Assign([Name('mod_file', Store(), lineno=129, col_offset=8)], Call(Name('open', Load(), lineno=129, col_offset=19), [Name('mod_fname', Load(), lineno=129, col_offset=24), Str('w', lineno=129, col_offset=35)], [], None, None, lineno=129, col_offset=19), lineno=129, col_offset=8), Expr(Call(Attribute(Name('mod_file', Load(), lineno=130, col_offset=8), 'write', Load(), lineno=130, col_offset=8), [Name('source', Load(), lineno=130, col_offset=23)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('mod_file', Load(), lineno=131, col_offset=8), 'close', Load(), lineno=131, col_offset=8), [], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), If(Name('verbose', Load(), lineno=132, col_offset=11), [Print(None, [Str('  Created:', lineno=132, col_offset=26), Name('mod_fname', Load(), lineno=132, col_offset=40)], True, lineno=132, col_offset=20)], [], lineno=132, col_offset=8), Assign([Name('mod_name', Store(), lineno=133, col_offset=8)], BinOp(BinOp(BinOp(Name('pkg_name', Load(), lineno=133, col_offset=20), Add(), Str('.', lineno=133, col_offset=29), lineno=133, col_offset=20), Mult(), Name('depth', Load(), lineno=133, col_offset=34), lineno=133, col_offset=19), Add(), Name('mod_base', Load(), lineno=133, col_offset=42), lineno=133, col_offset=19), lineno=133, col_offset=8), Return(Tuple([Name('pkg_dir', Load(), lineno=134, col_offset=15), Name('mod_fname', Load(), lineno=134, col_offset=24), Name('mod_name', Load(), lineno=134, col_offset=35)], Load(), lineno=134, col_offset=15), lineno=134, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('_del_pkg', arguments([Name('self', Param(), lineno=136, col_offset=17), Name('top', Param(), lineno=136, col_offset=23), Name('depth', Param(), lineno=136, col_offset=28), Name('mod_name', Param(), lineno=136, col_offset=35)], None, None, []), [For(Name('entry', Store(), lineno=137, col_offset=12), Call(Name('list', Load(), lineno=137, col_offset=21), [Attribute(Name('sys', Load(), lineno=137, col_offset=26), 'modules', Load(), lineno=137, col_offset=26)], [], None, None, lineno=137, col_offset=21), [If(Call(Attribute(Name('entry', Load(), lineno=138, col_offset=15), 'startswith', Load(), lineno=138, col_offset=15), [Str('__runpy_pkg__', lineno=138, col_offset=32)], [], None, None, lineno=138, col_offset=15), [Delete([Subscript(Attribute(Name('sys', Load(), lineno=139, col_offset=20), 'modules', Load(), lineno=139, col_offset=20), Index(Name('entry', Load(), lineno=139, col_offset=32)), Del(), lineno=139, col_offset=20)], lineno=139, col_offset=16)], [], lineno=138, col_offset=12)], [], lineno=137, col_offset=8), If(Name('verbose', Load(), lineno=140, col_offset=11), [Print(None, [Str('  Removed sys.modules entries', lineno=140, col_offset=26)], True, lineno=140, col_offset=20)], [], lineno=140, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=141, col_offset=12), 'path', Load(), lineno=141, col_offset=12), Index(Num(0, lineno=141, col_offset=21)), Del(), lineno=141, col_offset=12)], lineno=141, col_offset=8), If(Name('verbose', Load(), lineno=142, col_offset=11), [Print(None, [Str('  Removed sys.path entry', lineno=142, col_offset=26)], True, lineno=142, col_offset=20)], [], lineno=142, col_offset=8), For(Tuple([Name('root', Store(), lineno=143, col_offset=12), Name('dirs', Store(), lineno=143, col_offset=18), Name('files', Store(), lineno=143, col_offset=24)], Store(), lineno=143, col_offset=12), Call(Attribute(Name('os', Load(), lineno=143, col_offset=33), 'walk', Load(), lineno=143, col_offset=33), [Name('top', Load(), lineno=143, col_offset=41)], [keyword('topdown', Name('False', Load(), lineno=143, col_offset=54))], None, None, lineno=143, col_offset=33), [For(Name('name', Store(), lineno=144, col_offset=16), Name('files', Load(), lineno=144, col_offset=24), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=146, col_offset=20), 'remove', Load(), lineno=146, col_offset=20), [Call(Attribute(Attribute(Name('os', Load(), lineno=146, col_offset=30), 'path', Load(), lineno=146, col_offset=30), 'join', Load(), lineno=146, col_offset=30), [Name('root', Load(), lineno=146, col_offset=43), Name('name', Load(), lineno=146, col_offset=49)], [], None, None, lineno=146, col_offset=30)], [], None, None, lineno=146, col_offset=20), lineno=146, col_offset=20)], [ExceptHandler(Name('OSError', Load(), lineno=147, col_offset=23), Name('ex', Store(), lineno=147, col_offset=32), [If(Name('verbose', Load(), lineno=148, col_offset=23), [Print(None, [Name('ex', Load(), lineno=148, col_offset=38)], True, lineno=148, col_offset=32)], [], lineno=148, col_offset=20)], lineno=147, col_offset=16)], [], lineno=145, col_offset=16)], [], lineno=144, col_offset=12), For(Name('name', Store(), lineno=149, col_offset=16), Name('dirs', Load(), lineno=149, col_offset=24), [Assign([Name('fullname', Store(), lineno=150, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=150, col_offset=27), 'path', Load(), lineno=150, col_offset=27), 'join', Load(), lineno=150, col_offset=27), [Name('root', Load(), lineno=150, col_offset=40), Name('name', Load(), lineno=150, col_offset=46)], [], None, None, lineno=150, col_offset=27), lineno=150, col_offset=16), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=152, col_offset=20), 'rmdir', Load(), lineno=152, col_offset=20), [Name('fullname', Load(), lineno=152, col_offset=29)], [], None, None, lineno=152, col_offset=20), lineno=152, col_offset=20)], [ExceptHandler(Name('OSError', Load(), lineno=153, col_offset=23), Name('ex', Store(), lineno=153, col_offset=32), [If(Name('verbose', Load(), lineno=154, col_offset=23), [Print(None, [Name('ex', Load(), lineno=154, col_offset=38)], True, lineno=154, col_offset=32)], [], lineno=154, col_offset=20)], lineno=153, col_offset=16)], [], lineno=151, col_offset=16)], [], lineno=149, col_offset=12)], [], lineno=143, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=156, col_offset=12), 'rmdir', Load(), lineno=156, col_offset=12), [Name('top', Load(), lineno=156, col_offset=21)], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12), If(Name('verbose', Load(), lineno=157, col_offset=15), [Print(None, [Str('  Removed package tree', lineno=157, col_offset=30)], True, lineno=157, col_offset=24)], [], lineno=157, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=158, col_offset=15), Name('ex', Store(), lineno=158, col_offset=24), [If(Name('verbose', Load(), lineno=159, col_offset=15), [Print(None, [Name('ex', Load(), lineno=159, col_offset=30)], True, lineno=159, col_offset=24)], [], lineno=159, col_offset=12)], lineno=158, col_offset=8)], [], lineno=155, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('_check_module', arguments([Name('self', Param(), lineno=161, col_offset=22), Name('depth', Param(), lineno=161, col_offset=28)], None, None, []), [Assign([Tuple([Name('pkg_dir', Store(), lineno=162, col_offset=8), Name('mod_fname', Store(), lineno=162, col_offset=17), Name('mod_name', Store(), lineno=162, col_offset=28)], Store(), lineno=162, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=163, col_offset=15), '_make_pkg', Load(), lineno=163, col_offset=15), [Str('x=1\n', lineno=163, col_offset=30), Name('depth', Load(), lineno=163, col_offset=39)], [], None, None, lineno=163, col_offset=15), lineno=162, col_offset=8), Expr(Call(Name('forget', Load(), lineno=164, col_offset=8), [Name('mod_name', Load(), lineno=164, col_offset=15)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), TryFinally([If(Name('verbose', Load(), lineno=166, col_offset=15), [Print(None, [Str('Running from source:', lineno=166, col_offset=30), Name('mod_name', Load(), lineno=166, col_offset=54)], True, lineno=166, col_offset=24)], [], lineno=166, col_offset=12), Assign([Name('d1', Store(), lineno=167, col_offset=12)], Call(Name('run_module', Load(), lineno=167, col_offset=17), [Name('mod_name', Load(), lineno=167, col_offset=28)], [], None, None, lineno=167, col_offset=17), lineno=167, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=12), 'assertIn', Load(), lineno=168, col_offset=12), [Str('x', lineno=168, col_offset=26), Name('d1', Load(), lineno=168, col_offset=31)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=12), 'assertTrue', Load(), lineno=169, col_offset=12), [Compare(Subscript(Name('d1', Load(), lineno=169, col_offset=28), Index(Str('x', lineno=169, col_offset=31)), Load(), lineno=169, col_offset=28), [Eq()], [Num(1, lineno=169, col_offset=39)], lineno=169, col_offset=28)], [], None, None, lineno=169, col_offset=12), lineno=169, col_offset=12), Delete([Name('d1', Del(), lineno=170, col_offset=16)], lineno=170, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=171, col_offset=12), [Name('mod_name', Load(), lineno=171, col_offset=23)], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=172, col_offset=12), 'remove', Load(), lineno=172, col_offset=12), [Name('mod_fname', Load(), lineno=172, col_offset=22)], [], None, None, lineno=172, col_offset=12), lineno=172, col_offset=12), If(Name('verbose', Load(), lineno=173, col_offset=15), [Print(None, [Str('Running from compiled:', lineno=173, col_offset=30), Name('mod_name', Load(), lineno=173, col_offset=56)], True, lineno=173, col_offset=24)], [], lineno=173, col_offset=12), Assign([Name('d2', Store(), lineno=174, col_offset=12)], Call(Name('run_module', Load(), lineno=174, col_offset=17), [Name('mod_name', Load(), lineno=174, col_offset=28)], [], None, None, lineno=174, col_offset=17), lineno=174, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'assertIn', Load(), lineno=175, col_offset=12), [Str('x', lineno=175, col_offset=26), Name('d2', Load(), lineno=175, col_offset=31)], [], None, None, lineno=175, col_offset=12), lineno=175, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=12), 'assertTrue', Load(), lineno=176, col_offset=12), [Compare(Subscript(Name('d2', Load(), lineno=176, col_offset=28), Index(Str('x', lineno=176, col_offset=31)), Load(), lineno=176, col_offset=28), [Eq()], [Num(1, lineno=176, col_offset=39)], lineno=176, col_offset=28)], [], None, None, lineno=176, col_offset=12), lineno=176, col_offset=12), Delete([Name('d2', Del(), lineno=177, col_offset=16)], lineno=177, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=12), '_del_pkg', Load(), lineno=179, col_offset=12), [Name('pkg_dir', Load(), lineno=179, col_offset=26), Name('depth', Load(), lineno=179, col_offset=35), Name('mod_name', Load(), lineno=179, col_offset=42)], [], None, None, lineno=179, col_offset=12), lineno=179, col_offset=12)], lineno=165, col_offset=8), If(Name('verbose', Load(), lineno=180, col_offset=11), [Print(None, [Str('Module executed successfully', lineno=180, col_offset=26)], True, lineno=180, col_offset=20)], [], lineno=180, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('_check_package', arguments([Name('self', Param(), lineno=182, col_offset=23), Name('depth', Param(), lineno=182, col_offset=29)], None, None, []), [Assign([Tuple([Name('pkg_dir', Store(), lineno=183, col_offset=8), Name('mod_fname', Store(), lineno=183, col_offset=17), Name('mod_name', Store(), lineno=183, col_offset=28)], Store(), lineno=183, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=184, col_offset=15), '_make_pkg', Load(), lineno=184, col_offset=15), [Str('x=1\n', lineno=184, col_offset=30), Name('depth', Load(), lineno=184, col_offset=39), Str('__main__', lineno=184, col_offset=46)], [], None, None, lineno=184, col_offset=15), lineno=183, col_offset=8), Assign([Tuple([Name('pkg_name', Store(), lineno=185, col_offset=8), Name('_', Store(), lineno=185, col_offset=18), Name('_', Store(), lineno=185, col_offset=21)], Store(), lineno=185, col_offset=8)], Call(Attribute(Name('mod_name', Load(), lineno=185, col_offset=25), 'rpartition', Load(), lineno=185, col_offset=25), [Str('.', lineno=185, col_offset=45)], [], None, None, lineno=185, col_offset=25), lineno=185, col_offset=8), Expr(Call(Name('forget', Load(), lineno=186, col_offset=8), [Name('mod_name', Load(), lineno=186, col_offset=15)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), TryFinally([If(Name('verbose', Load(), lineno=188, col_offset=15), [Print(None, [Str('Running from source:', lineno=188, col_offset=30), Name('pkg_name', Load(), lineno=188, col_offset=54)], True, lineno=188, col_offset=24)], [], lineno=188, col_offset=12), Assign([Name('d1', Store(), lineno=189, col_offset=12)], Call(Name('run_module', Load(), lineno=189, col_offset=17), [Name('pkg_name', Load(), lineno=189, col_offset=28)], [], None, None, lineno=189, col_offset=17), lineno=189, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=12), 'assertIn', Load(), lineno=190, col_offset=12), [Str('x', lineno=190, col_offset=26), Name('d1', Load(), lineno=190, col_offset=31)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=12), 'assertTrue', Load(), lineno=191, col_offset=12), [Compare(Subscript(Name('d1', Load(), lineno=191, col_offset=28), Index(Str('x', lineno=191, col_offset=31)), Load(), lineno=191, col_offset=28), [Eq()], [Num(1, lineno=191, col_offset=39)], lineno=191, col_offset=28)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), Delete([Name('d1', Del(), lineno=192, col_offset=16)], lineno=192, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=193, col_offset=12), [Name('mod_name', Load(), lineno=193, col_offset=23)], [], None, None, lineno=193, col_offset=12), lineno=193, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=194, col_offset=12), 'remove', Load(), lineno=194, col_offset=12), [Name('mod_fname', Load(), lineno=194, col_offset=22)], [], None, None, lineno=194, col_offset=12), lineno=194, col_offset=12), If(Name('verbose', Load(), lineno=195, col_offset=15), [Print(None, [Str('Running from compiled:', lineno=195, col_offset=30), Name('pkg_name', Load(), lineno=195, col_offset=56)], True, lineno=195, col_offset=24)], [], lineno=195, col_offset=12), Assign([Name('d2', Store(), lineno=196, col_offset=12)], Call(Name('run_module', Load(), lineno=196, col_offset=17), [Name('pkg_name', Load(), lineno=196, col_offset=28)], [], None, None, lineno=196, col_offset=17), lineno=196, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=12), 'assertIn', Load(), lineno=197, col_offset=12), [Str('x', lineno=197, col_offset=26), Name('d2', Load(), lineno=197, col_offset=31)], [], None, None, lineno=197, col_offset=12), lineno=197, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=12), 'assertTrue', Load(), lineno=198, col_offset=12), [Compare(Subscript(Name('d2', Load(), lineno=198, col_offset=28), Index(Str('x', lineno=198, col_offset=31)), Load(), lineno=198, col_offset=28), [Eq()], [Num(1, lineno=198, col_offset=39)], lineno=198, col_offset=28)], [], None, None, lineno=198, col_offset=12), lineno=198, col_offset=12), Delete([Name('d2', Del(), lineno=199, col_offset=16)], lineno=199, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=12), '_del_pkg', Load(), lineno=201, col_offset=12), [Name('pkg_dir', Load(), lineno=201, col_offset=26), Name('depth', Load(), lineno=201, col_offset=35), Name('pkg_name', Load(), lineno=201, col_offset=42)], [], None, None, lineno=201, col_offset=12), lineno=201, col_offset=12)], lineno=187, col_offset=8), If(Name('verbose', Load(), lineno=202, col_offset=11), [Print(None, [Str('Package executed successfully', lineno=202, col_offset=26)], True, lineno=202, col_offset=20)], [], lineno=202, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('_add_relative_modules', arguments([Name('self', Param(), lineno=204, col_offset=30), Name('base_dir', Param(), lineno=204, col_offset=36), Name('source', Param(), lineno=204, col_offset=46), Name('depth', Param(), lineno=204, col_offset=54)], None, None, []), [If(Compare(Name('depth', Load(), lineno=205, col_offset=11), [LtE()], [Num(1, lineno=205, col_offset=20)], lineno=205, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=206, col_offset=18), [Str('Relative module test needs depth > 1', lineno=206, col_offset=29)], [], None, None, lineno=206, col_offset=18), None, None, lineno=206, col_offset=12)], [], lineno=205, col_offset=8), Assign([Name('pkg_name', Store(), lineno=207, col_offset=8)], Str('__runpy_pkg__', lineno=207, col_offset=19), lineno=207, col_offset=8), Assign([Name('module_dir', Store(), lineno=208, col_offset=8)], Name('base_dir', Load(), lineno=208, col_offset=21), lineno=208, col_offset=8), For(Name('i', Store(), lineno=209, col_offset=12), Call(Name('range', Load(), lineno=209, col_offset=17), [Name('depth', Load(), lineno=209, col_offset=23)], [], None, None, lineno=209, col_offset=17), [Assign([Name('parent_dir', Store(), lineno=210, col_offset=12)], Name('module_dir', Load(), lineno=210, col_offset=25), lineno=210, col_offset=12), Assign([Name('module_dir', Store(), lineno=211, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=211, col_offset=25), 'path', Load(), lineno=211, col_offset=25), 'join', Load(), lineno=211, col_offset=25), [Name('module_dir', Load(), lineno=211, col_offset=38), Name('pkg_name', Load(), lineno=211, col_offset=50)], [], None, None, lineno=211, col_offset=25), lineno=211, col_offset=12)], [], lineno=209, col_offset=8), Assign([Name('sibling_fname', Store(), lineno=213, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=213, col_offset=24), 'path', Load(), lineno=213, col_offset=24), 'join', Load(), lineno=213, col_offset=24), [Name('module_dir', Load(), lineno=213, col_offset=37), BinOp(BinOp(Str('sibling', lineno=213, col_offset=49), Add(), Attribute(Name('os', Load(), lineno=213, col_offset=59), 'extsep', Load(), lineno=213, col_offset=59), lineno=213, col_offset=49), Add(), Str('py', lineno=213, col_offset=69), lineno=213, col_offset=68)], [], None, None, lineno=213, col_offset=24), lineno=213, col_offset=8), Assign([Name('sibling_file', Store(), lineno=214, col_offset=8)], Call(Name('open', Load(), lineno=214, col_offset=23), [Name('sibling_fname', Load(), lineno=214, col_offset=28), Str('w', lineno=214, col_offset=43)], [], None, None, lineno=214, col_offset=23), lineno=214, col_offset=8), Expr(Call(Attribute(Name('sibling_file', Load(), lineno=215, col_offset=8), 'close', Load(), lineno=215, col_offset=8), [], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), If(Name('verbose', Load(), lineno=216, col_offset=11), [Print(None, [Str('  Added sibling module:', lineno=216, col_offset=26), Name('sibling_fname', Load(), lineno=216, col_offset=53)], True, lineno=216, col_offset=20)], [], lineno=216, col_offset=8), Assign([Name('uncle_dir', Store(), lineno=218, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=218, col_offset=20), 'path', Load(), lineno=218, col_offset=20), 'join', Load(), lineno=218, col_offset=20), [Name('parent_dir', Load(), lineno=218, col_offset=33), Str('uncle', lineno=218, col_offset=45)], [], None, None, lineno=218, col_offset=20), lineno=218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), '_add_pkg_dir', Load(), lineno=219, col_offset=8), [Name('uncle_dir', Load(), lineno=219, col_offset=26)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), If(Name('verbose', Load(), lineno=220, col_offset=11), [Print(None, [Str('  Added uncle package:', lineno=220, col_offset=26), Name('uncle_dir', Load(), lineno=220, col_offset=52)], True, lineno=220, col_offset=20)], [], lineno=220, col_offset=8), Assign([Name('cousin_dir', Store(), lineno=221, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=221, col_offset=21), 'path', Load(), lineno=221, col_offset=21), 'join', Load(), lineno=221, col_offset=21), [Name('uncle_dir', Load(), lineno=221, col_offset=34), Str('cousin', lineno=221, col_offset=45)], [], None, None, lineno=221, col_offset=21), lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), '_add_pkg_dir', Load(), lineno=222, col_offset=8), [Name('cousin_dir', Load(), lineno=222, col_offset=26)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), If(Name('verbose', Load(), lineno=223, col_offset=11), [Print(None, [Str('  Added cousin package:', lineno=223, col_offset=26), Name('cousin_dir', Load(), lineno=223, col_offset=53)], True, lineno=223, col_offset=20)], [], lineno=223, col_offset=8), Assign([Name('nephew_fname', Store(), lineno=224, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=224, col_offset=23), 'path', Load(), lineno=224, col_offset=23), 'join', Load(), lineno=224, col_offset=23), [Name('cousin_dir', Load(), lineno=224, col_offset=36), BinOp(BinOp(Str('nephew', lineno=224, col_offset=48), Add(), Attribute(Name('os', Load(), lineno=224, col_offset=57), 'extsep', Load(), lineno=224, col_offset=57), lineno=224, col_offset=48), Add(), Str('py', lineno=224, col_offset=67), lineno=224, col_offset=66)], [], None, None, lineno=224, col_offset=23), lineno=224, col_offset=8), Assign([Name('nephew_file', Store(), lineno=225, col_offset=8)], Call(Name('open', Load(), lineno=225, col_offset=22), [Name('nephew_fname', Load(), lineno=225, col_offset=27), Str('w', lineno=225, col_offset=41)], [], None, None, lineno=225, col_offset=22), lineno=225, col_offset=8), Expr(Call(Attribute(Name('nephew_file', Load(), lineno=226, col_offset=8), 'close', Load(), lineno=226, col_offset=8), [], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), If(Name('verbose', Load(), lineno=227, col_offset=11), [Print(None, [Str('  Added nephew module:', lineno=227, col_offset=26), Name('nephew_fname', Load(), lineno=227, col_offset=52)], True, lineno=227, col_offset=20)], [], lineno=227, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('_check_relative_imports', arguments([Name('self', Param(), lineno=229, col_offset=32), Name('depth', Param(), lineno=229, col_offset=38), Name('run_name', Param(), lineno=229, col_offset=45)], None, None, [Name('None', Load(), lineno=229, col_offset=54)]), [Assign([Name('contents', Store(), lineno=230, col_offset=8)], Str('\\\nfrom __future__ import absolute_import\nfrom . import sibling\nfrom ..uncle.cousin import nephew\n', lineno=234, col_offset=-1), lineno=230, col_offset=8), Assign([Tuple([Name('pkg_dir', Store(), lineno=235, col_offset=8), Name('mod_fname', Store(), lineno=235, col_offset=17), Name('mod_name', Store(), lineno=235, col_offset=28)], Store(), lineno=235, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=236, col_offset=15), '_make_pkg', Load(), lineno=236, col_offset=15), [Name('contents', Load(), lineno=236, col_offset=30), Name('depth', Load(), lineno=236, col_offset=40)], [], None, None, lineno=236, col_offset=15), lineno=235, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=12), '_add_relative_modules', Load(), lineno=238, col_offset=12), [Name('pkg_dir', Load(), lineno=238, col_offset=39), Name('contents', Load(), lineno=238, col_offset=48), Name('depth', Load(), lineno=238, col_offset=58)], [], None, None, lineno=238, col_offset=12), lineno=238, col_offset=12), Assign([Name('pkg_name', Store(), lineno=239, col_offset=12)], Subscript(Call(Attribute(Name('mod_name', Load(), lineno=239, col_offset=23), 'rpartition', Load(), lineno=239, col_offset=23), [Str('.', lineno=239, col_offset=43)], [], None, None, lineno=239, col_offset=23), Index(Num(0, lineno=239, col_offset=48)), Load(), lineno=239, col_offset=23), lineno=239, col_offset=12), If(Name('verbose', Load(), lineno=240, col_offset=15), [Print(None, [Str('Running from source:', lineno=240, col_offset=30), Name('mod_name', Load(), lineno=240, col_offset=54)], True, lineno=240, col_offset=24)], [], lineno=240, col_offset=12), Assign([Name('d1', Store(), lineno=241, col_offset=12)], Call(Name('run_module', Load(), lineno=241, col_offset=17), [Name('mod_name', Load(), lineno=241, col_offset=28)], [keyword('run_name', Name('run_name', Load(), lineno=241, col_offset=47))], None, None, lineno=241, col_offset=17), lineno=241, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=12), 'assertIn', Load(), lineno=242, col_offset=12), [Str('__package__', lineno=242, col_offset=26), Name('d1', Load(), lineno=242, col_offset=41)], [], None, None, lineno=242, col_offset=12), lineno=242, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=12), 'assertTrue', Load(), lineno=243, col_offset=12), [Compare(Subscript(Name('d1', Load(), lineno=243, col_offset=28), Index(Str('__package__', lineno=243, col_offset=31)), Load(), lineno=243, col_offset=28), [Eq()], [Name('pkg_name', Load(), lineno=243, col_offset=49)], lineno=243, col_offset=28)], [], None, None, lineno=243, col_offset=12), lineno=243, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=12), 'assertIn', Load(), lineno=244, col_offset=12), [Str('sibling', lineno=244, col_offset=26), Name('d1', Load(), lineno=244, col_offset=37)], [], None, None, lineno=244, col_offset=12), lineno=244, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=12), 'assertIn', Load(), lineno=245, col_offset=12), [Str('nephew', lineno=245, col_offset=26), Name('d1', Load(), lineno=245, col_offset=36)], [], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12), Delete([Name('d1', Del(), lineno=246, col_offset=16)], lineno=246, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=247, col_offset=12), [Name('mod_name', Load(), lineno=247, col_offset=23)], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=248, col_offset=12), 'remove', Load(), lineno=248, col_offset=12), [Name('mod_fname', Load(), lineno=248, col_offset=22)], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=12), If(Name('verbose', Load(), lineno=249, col_offset=15), [Print(None, [Str('Running from compiled:', lineno=249, col_offset=30), Name('mod_name', Load(), lineno=249, col_offset=56)], True, lineno=249, col_offset=24)], [], lineno=249, col_offset=12), Assign([Name('d2', Store(), lineno=250, col_offset=12)], Call(Name('run_module', Load(), lineno=250, col_offset=17), [Name('mod_name', Load(), lineno=250, col_offset=28)], [keyword('run_name', Name('run_name', Load(), lineno=250, col_offset=47))], None, None, lineno=250, col_offset=17), lineno=250, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=12), 'assertIn', Load(), lineno=251, col_offset=12), [Str('__package__', lineno=251, col_offset=26), Name('d2', Load(), lineno=251, col_offset=41)], [], None, None, lineno=251, col_offset=12), lineno=251, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=12), 'assertTrue', Load(), lineno=252, col_offset=12), [Compare(Subscript(Name('d2', Load(), lineno=252, col_offset=28), Index(Str('__package__', lineno=252, col_offset=31)), Load(), lineno=252, col_offset=28), [Eq()], [Name('pkg_name', Load(), lineno=252, col_offset=49)], lineno=252, col_offset=28)], [], None, None, lineno=252, col_offset=12), lineno=252, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=253, col_offset=12), 'assertIn', Load(), lineno=253, col_offset=12), [Str('sibling', lineno=253, col_offset=26), Name('d2', Load(), lineno=253, col_offset=37)], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=12), 'assertIn', Load(), lineno=254, col_offset=12), [Str('nephew', lineno=254, col_offset=26), Name('d2', Load(), lineno=254, col_offset=36)], [], None, None, lineno=254, col_offset=12), lineno=254, col_offset=12), Delete([Name('d2', Del(), lineno=255, col_offset=16)], lineno=255, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=12), '_del_pkg', Load(), lineno=257, col_offset=12), [Name('pkg_dir', Load(), lineno=257, col_offset=26), Name('depth', Load(), lineno=257, col_offset=35), Name('mod_name', Load(), lineno=257, col_offset=42)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12)], lineno=237, col_offset=8), If(Name('verbose', Load(), lineno=258, col_offset=11), [Print(None, [Str('Module executed successfully', lineno=258, col_offset=26)], True, lineno=258, col_offset=20)], [], lineno=258, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('test_run_module', arguments([Name('self', Param(), lineno=260, col_offset=24)], None, None, []), [For(Name('depth', Store(), lineno=261, col_offset=12), Call(Name('range', Load(), lineno=261, col_offset=21), [Num(4, lineno=261, col_offset=27)], [], None, None, lineno=261, col_offset=21), [If(Name('verbose', Load(), lineno=262, col_offset=15), [Print(None, [Str('Testing package depth:', lineno=262, col_offset=30), Name('depth', Load(), lineno=262, col_offset=56)], True, lineno=262, col_offset=24)], [], lineno=262, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=12), '_check_module', Load(), lineno=263, col_offset=12), [Name('depth', Load(), lineno=263, col_offset=31)], [], None, None, lineno=263, col_offset=12), lineno=263, col_offset=12)], [], lineno=261, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('test_run_package', arguments([Name('self', Param(), lineno=265, col_offset=25)], None, None, []), [For(Name('depth', Store(), lineno=266, col_offset=12), Call(Name('range', Load(), lineno=266, col_offset=21), [Num(1, lineno=266, col_offset=27), Num(4, lineno=266, col_offset=30)], [], None, None, lineno=266, col_offset=21), [If(Name('verbose', Load(), lineno=267, col_offset=15), [Print(None, [Str('Testing package depth:', lineno=267, col_offset=30), Name('depth', Load(), lineno=267, col_offset=56)], True, lineno=267, col_offset=24)], [], lineno=267, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=268, col_offset=12), '_check_package', Load(), lineno=268, col_offset=12), [Name('depth', Load(), lineno=268, col_offset=32)], [], None, None, lineno=268, col_offset=12), lineno=268, col_offset=12)], [], lineno=266, col_offset=8)], [], lineno=265, col_offset=4), FunctionDef('test_explicit_relative_import', arguments([Name('self', Param(), lineno=270, col_offset=38)], None, None, []), [For(Name('depth', Store(), lineno=271, col_offset=12), Call(Name('range', Load(), lineno=271, col_offset=21), [Num(2, lineno=271, col_offset=27), Num(5, lineno=271, col_offset=30)], [], None, None, lineno=271, col_offset=21), [If(Name('verbose', Load(), lineno=272, col_offset=15), [Print(None, [Str('Testing relative imports at depth:', lineno=272, col_offset=30), Name('depth', Load(), lineno=272, col_offset=68)], True, lineno=272, col_offset=24)], [], lineno=272, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=12), '_check_relative_imports', Load(), lineno=273, col_offset=12), [Name('depth', Load(), lineno=273, col_offset=41)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12)], [], lineno=271, col_offset=8)], [], lineno=270, col_offset=4), FunctionDef('test_main_relative_import', arguments([Name('self', Param(), lineno=275, col_offset=34)], None, None, []), [For(Name('depth', Store(), lineno=276, col_offset=12), Call(Name('range', Load(), lineno=276, col_offset=21), [Num(2, lineno=276, col_offset=27), Num(5, lineno=276, col_offset=30)], [], None, None, lineno=276, col_offset=21), [If(Name('verbose', Load(), lineno=277, col_offset=15), [Print(None, [Str('Testing main relative imports at depth:', lineno=277, col_offset=30), Name('depth', Load(), lineno=277, col_offset=73)], True, lineno=277, col_offset=24)], [], lineno=277, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=12), '_check_relative_imports', Load(), lineno=278, col_offset=12), [Name('depth', Load(), lineno=278, col_offset=41), Str('__main__', lineno=278, col_offset=48)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=12)], [], lineno=276, col_offset=8)], [], lineno=275, col_offset=4)], [], lineno=83, col_offset=0), ClassDef('RunPathTest', [Attribute(Name('unittest', Load(), lineno=281, col_offset=18), 'TestCase', Load(), lineno=281, col_offset=18)], [Expr(Str('Unit tests for runpy.run_path', lineno=282, col_offset=4), lineno=282, col_offset=4), Assign([Name('test_source', Store(), lineno=285, col_offset=4)], Str("# Script may be run with optimisation enabled, so don't rely on assert\n# statements being executed\ndef assertEqual(lhs, rhs):\n    if lhs != rhs:\n        raise AssertionError('%r != %r' % (lhs, rhs))\ndef assertIs(lhs, rhs):\n    if lhs is not rhs:\n        raise AssertionError('%r is not %r' % (lhs, rhs))\n# Check basic code execution\nresult = ['Top level assignment']\ndef f():\n    result.append('Lower level reference')\nf()\nassertEqual(result, ['Top level assignment', 'Lower level reference'])\n# Check the sys module\nimport sys\nassertIs(globals(), sys.modules[__name__].__dict__)\nargv0 = sys.argv[0]\n", lineno=304, col_offset=-1), lineno=285, col_offset=4), FunctionDef('_make_test_script', arguments([Name('self', Param(), lineno=306, col_offset=26), Name('script_dir', Param(), lineno=306, col_offset=32), Name('script_basename', Param(), lineno=306, col_offset=44), Name('source', Param(), lineno=306, col_offset=61)], None, None, [Name('None', Load(), lineno=306, col_offset=68)]), [If(Compare(Name('source', Load(), lineno=307, col_offset=11), [Is()], [Name('None', Load(), lineno=307, col_offset=21)], lineno=307, col_offset=11), [Assign([Name('source', Store(), lineno=308, col_offset=12)], Attribute(Name('self', Load(), lineno=308, col_offset=21), 'test_source', Load(), lineno=308, col_offset=21), lineno=308, col_offset=12)], [], lineno=307, col_offset=8), Return(Call(Name('make_script', Load(), lineno=309, col_offset=15), [Name('script_dir', Load(), lineno=309, col_offset=27), Name('script_basename', Load(), lineno=309, col_offset=39), Name('source', Load(), lineno=309, col_offset=56)], [], None, None, lineno=309, col_offset=15), lineno=309, col_offset=8)], [], lineno=306, col_offset=4), FunctionDef('_check_script', arguments([Name('self', Param(), lineno=311, col_offset=22), Name('script_name', Param(), lineno=311, col_offset=28), Name('expected_name', Param(), lineno=311, col_offset=41), Name('expected_file', Param(), lineno=311, col_offset=56), Name('expected_argv0', Param(), lineno=312, col_offset=28), Name('expected_package', Param(), lineno=312, col_offset=44)], None, None, []), [Assign([Name('result', Store(), lineno=313, col_offset=8)], Call(Name('run_path', Load(), lineno=313, col_offset=17), [Name('script_name', Load(), lineno=313, col_offset=26)], [], None, None, lineno=313, col_offset=17), lineno=313, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'assertEqual', Load(), lineno=314, col_offset=8), [Subscript(Name('result', Load(), lineno=314, col_offset=25), Index(Str('__name__', lineno=314, col_offset=32)), Load(), lineno=314, col_offset=25), Name('expected_name', Load(), lineno=314, col_offset=45)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertEqual', Load(), lineno=315, col_offset=8), [Subscript(Name('result', Load(), lineno=315, col_offset=25), Index(Str('__file__', lineno=315, col_offset=32)), Load(), lineno=315, col_offset=25), Name('expected_file', Load(), lineno=315, col_offset=45)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), 'assertIn', Load(), lineno=316, col_offset=8), [Str('argv0', lineno=316, col_offset=22), Name('result', Load(), lineno=316, col_offset=31)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'assertEqual', Load(), lineno=317, col_offset=8), [Subscript(Name('result', Load(), lineno=317, col_offset=25), Index(Str('argv0', lineno=317, col_offset=32)), Load(), lineno=317, col_offset=25), Name('expected_argv0', Load(), lineno=317, col_offset=42)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=318, col_offset=8), 'assertEqual', Load(), lineno=318, col_offset=8), [Subscript(Name('result', Load(), lineno=318, col_offset=25), Index(Str('__package__', lineno=318, col_offset=32)), Load(), lineno=318, col_offset=25), Name('expected_package', Load(), lineno=318, col_offset=48)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8)], [], lineno=311, col_offset=4), FunctionDef('_check_import_error', arguments([Name('self', Param(), lineno=320, col_offset=28), Name('script_name', Param(), lineno=320, col_offset=34), Name('msg', Param(), lineno=320, col_offset=47)], None, None, []), [Assign([Name('msg', Store(), lineno=321, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=321, col_offset=14), 'escape', Load(), lineno=321, col_offset=14), [Name('msg', Load(), lineno=321, col_offset=24)], [], None, None, lineno=321, col_offset=14), lineno=321, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'assertRaisesRegexp', Load(), lineno=322, col_offset=8), [Name('ImportError', Load(), lineno=322, col_offset=32), Name('msg', Load(), lineno=322, col_offset=45), Name('run_path', Load(), lineno=322, col_offset=50), Name('script_name', Load(), lineno=322, col_offset=60)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8)], [], lineno=320, col_offset=4), FunctionDef('test_basic_script', arguments([Name('self', Param(), lineno=324, col_offset=26)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=325, col_offset=13), [], [], None, None, lineno=325, col_offset=13), Name('script_dir', Store(), lineno=325, col_offset=27), [Assign([Name('mod_name', Store(), lineno=326, col_offset=12)], Str('script', lineno=326, col_offset=23), lineno=326, col_offset=12), Assign([Name('script_name', Store(), lineno=327, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=327, col_offset=26), '_make_test_script', Load(), lineno=327, col_offset=26), [Name('script_dir', Load(), lineno=327, col_offset=49), Name('mod_name', Load(), lineno=327, col_offset=61)], [], None, None, lineno=327, col_offset=26), lineno=327, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=12), '_check_script', Load(), lineno=328, col_offset=12), [Name('script_name', Load(), lineno=328, col_offset=31), Str('<run_path>', lineno=328, col_offset=44), Name('script_name', Load(), lineno=328, col_offset=58), Name('script_name', Load(), lineno=329, col_offset=31), Name('None', Load(), lineno=329, col_offset=44)], [], None, None, lineno=328, col_offset=12), lineno=328, col_offset=12)], lineno=325, col_offset=13)], [], lineno=324, col_offset=4), FunctionDef('test_script_compiled', arguments([Name('self', Param(), lineno=331, col_offset=29)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=332, col_offset=13), [], [], None, None, lineno=332, col_offset=13), Name('script_dir', Store(), lineno=332, col_offset=27), [Assign([Name('mod_name', Store(), lineno=333, col_offset=12)], Str('script', lineno=333, col_offset=23), lineno=333, col_offset=12), Assign([Name('script_name', Store(), lineno=334, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=334, col_offset=26), '_make_test_script', Load(), lineno=334, col_offset=26), [Name('script_dir', Load(), lineno=334, col_offset=49), Name('mod_name', Load(), lineno=334, col_offset=61)], [], None, None, lineno=334, col_offset=26), lineno=334, col_offset=12), Assign([Name('compiled_name', Store(), lineno=335, col_offset=12)], Call(Name('compile_script', Load(), lineno=335, col_offset=28), [Name('script_name', Load(), lineno=335, col_offset=43)], [], None, None, lineno=335, col_offset=28), lineno=335, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=336, col_offset=12), 'remove', Load(), lineno=336, col_offset=12), [Name('script_name', Load(), lineno=336, col_offset=22)], [], None, None, lineno=336, col_offset=12), lineno=336, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=12), '_check_script', Load(), lineno=337, col_offset=12), [Name('compiled_name', Load(), lineno=337, col_offset=31), Str('<run_path>', lineno=337, col_offset=46), Name('compiled_name', Load(), lineno=337, col_offset=60), Name('compiled_name', Load(), lineno=338, col_offset=31), Name('None', Load(), lineno=338, col_offset=46)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12)], lineno=332, col_offset=13)], [], lineno=331, col_offset=4), FunctionDef('test_directory', arguments([Name('self', Param(), lineno=340, col_offset=23)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=341, col_offset=13), [], [], None, None, lineno=341, col_offset=13), Name('script_dir', Store(), lineno=341, col_offset=27), [Assign([Name('mod_name', Store(), lineno=342, col_offset=12)], Str('__main__', lineno=342, col_offset=23), lineno=342, col_offset=12), Assign([Name('script_name', Store(), lineno=343, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=343, col_offset=26), '_make_test_script', Load(), lineno=343, col_offset=26), [Name('script_dir', Load(), lineno=343, col_offset=49), Name('mod_name', Load(), lineno=343, col_offset=61)], [], None, None, lineno=343, col_offset=26), lineno=343, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=344, col_offset=12), '_check_script', Load(), lineno=344, col_offset=12), [Name('script_dir', Load(), lineno=344, col_offset=31), Str('<run_path>', lineno=344, col_offset=43), Name('script_name', Load(), lineno=344, col_offset=57), Name('script_dir', Load(), lineno=345, col_offset=31), Str('', lineno=345, col_offset=43)], [], None, None, lineno=344, col_offset=12), lineno=344, col_offset=12)], lineno=341, col_offset=13)], [], lineno=340, col_offset=4), FunctionDef('test_directory_compiled', arguments([Name('self', Param(), lineno=347, col_offset=32)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=348, col_offset=13), [], [], None, None, lineno=348, col_offset=13), Name('script_dir', Store(), lineno=348, col_offset=27), [Assign([Name('mod_name', Store(), lineno=349, col_offset=12)], Str('__main__', lineno=349, col_offset=23), lineno=349, col_offset=12), Assign([Name('script_name', Store(), lineno=350, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=350, col_offset=26), '_make_test_script', Load(), lineno=350, col_offset=26), [Name('script_dir', Load(), lineno=350, col_offset=49), Name('mod_name', Load(), lineno=350, col_offset=61)], [], None, None, lineno=350, col_offset=26), lineno=350, col_offset=12), Assign([Name('compiled_name', Store(), lineno=351, col_offset=12)], Call(Name('compile_script', Load(), lineno=351, col_offset=28), [Name('script_name', Load(), lineno=351, col_offset=43)], [], None, None, lineno=351, col_offset=28), lineno=351, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=352, col_offset=12), 'remove', Load(), lineno=352, col_offset=12), [Name('script_name', Load(), lineno=352, col_offset=22)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=12), '_check_script', Load(), lineno=353, col_offset=12), [Name('script_dir', Load(), lineno=353, col_offset=31), Str('<run_path>', lineno=353, col_offset=43), Name('compiled_name', Load(), lineno=353, col_offset=57), Name('script_dir', Load(), lineno=354, col_offset=31), Str('', lineno=354, col_offset=43)], [], None, None, lineno=353, col_offset=12), lineno=353, col_offset=12)], lineno=348, col_offset=13)], [], lineno=347, col_offset=4), FunctionDef('test_directory_error', arguments([Name('self', Param(), lineno=356, col_offset=29)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=357, col_offset=13), [], [], None, None, lineno=357, col_offset=13), Name('script_dir', Store(), lineno=357, col_offset=27), [Assign([Name('mod_name', Store(), lineno=358, col_offset=12)], Str('not_main', lineno=358, col_offset=23), lineno=358, col_offset=12), Assign([Name('script_name', Store(), lineno=359, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=359, col_offset=26), '_make_test_script', Load(), lineno=359, col_offset=26), [Name('script_dir', Load(), lineno=359, col_offset=49), Name('mod_name', Load(), lineno=359, col_offset=61)], [], None, None, lineno=359, col_offset=26), lineno=359, col_offset=12), Assign([Name('msg', Store(), lineno=360, col_offset=12)], BinOp(Str("can't find '__main__' module in %r", lineno=360, col_offset=18), Mod(), Name('script_dir', Load(), lineno=360, col_offset=57), lineno=360, col_offset=18), lineno=360, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=12), '_check_import_error', Load(), lineno=361, col_offset=12), [Name('script_dir', Load(), lineno=361, col_offset=37), Name('msg', Load(), lineno=361, col_offset=49)], [], None, None, lineno=361, col_offset=12), lineno=361, col_offset=12)], lineno=357, col_offset=13)], [], lineno=356, col_offset=4), FunctionDef('test_zipfile', arguments([Name('self', Param(), lineno=363, col_offset=21)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=364, col_offset=13), [], [], None, None, lineno=364, col_offset=13), Name('script_dir', Store(), lineno=364, col_offset=27), [Assign([Name('mod_name', Store(), lineno=365, col_offset=12)], Str('__main__', lineno=365, col_offset=23), lineno=365, col_offset=12), Assign([Name('script_name', Store(), lineno=366, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=366, col_offset=26), '_make_test_script', Load(), lineno=366, col_offset=26), [Name('script_dir', Load(), lineno=366, col_offset=49), Name('mod_name', Load(), lineno=366, col_offset=61)], [], None, None, lineno=366, col_offset=26), lineno=366, col_offset=12), Assign([Tuple([Name('zip_name', Store(), lineno=367, col_offset=12), Name('fname', Store(), lineno=367, col_offset=22)], Store(), lineno=367, col_offset=12)], Call(Name('make_zip_script', Load(), lineno=367, col_offset=30), [Name('script_dir', Load(), lineno=367, col_offset=46), Str('test_zip', lineno=367, col_offset=58), Name('script_name', Load(), lineno=367, col_offset=70)], [], None, None, lineno=367, col_offset=30), lineno=367, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=12), '_check_script', Load(), lineno=368, col_offset=12), [Name('zip_name', Load(), lineno=368, col_offset=31), Str('<run_path>', lineno=368, col_offset=41), Name('fname', Load(), lineno=368, col_offset=55), Name('zip_name', Load(), lineno=368, col_offset=62), Str('', lineno=368, col_offset=72)], [], None, None, lineno=368, col_offset=12), lineno=368, col_offset=12)], lineno=364, col_offset=13)], [], lineno=363, col_offset=4), FunctionDef('test_zipfile_compiled', arguments([Name('self', Param(), lineno=370, col_offset=30)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=371, col_offset=13), [], [], None, None, lineno=371, col_offset=13), Name('script_dir', Store(), lineno=371, col_offset=27), [Assign([Name('mod_name', Store(), lineno=372, col_offset=12)], Str('__main__', lineno=372, col_offset=23), lineno=372, col_offset=12), Assign([Name('script_name', Store(), lineno=373, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=373, col_offset=26), '_make_test_script', Load(), lineno=373, col_offset=26), [Name('script_dir', Load(), lineno=373, col_offset=49), Name('mod_name', Load(), lineno=373, col_offset=61)], [], None, None, lineno=373, col_offset=26), lineno=373, col_offset=12), Assign([Name('compiled_name', Store(), lineno=374, col_offset=12)], Call(Name('compile_script', Load(), lineno=374, col_offset=28), [Name('script_name', Load(), lineno=374, col_offset=43)], [], None, None, lineno=374, col_offset=28), lineno=374, col_offset=12), Assign([Tuple([Name('zip_name', Store(), lineno=375, col_offset=12), Name('fname', Store(), lineno=375, col_offset=22)], Store(), lineno=375, col_offset=12)], Call(Name('make_zip_script', Load(), lineno=375, col_offset=30), [Name('script_dir', Load(), lineno=375, col_offset=46), Str('test_zip', lineno=375, col_offset=58), Name('compiled_name', Load(), lineno=375, col_offset=70)], [], None, None, lineno=375, col_offset=30), lineno=375, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=12), '_check_script', Load(), lineno=376, col_offset=12), [Name('zip_name', Load(), lineno=376, col_offset=31), Str('<run_path>', lineno=376, col_offset=41), Name('fname', Load(), lineno=376, col_offset=55), Name('zip_name', Load(), lineno=376, col_offset=62), Str('', lineno=376, col_offset=72)], [], None, None, lineno=376, col_offset=12), lineno=376, col_offset=12)], lineno=371, col_offset=13)], [], lineno=370, col_offset=4), FunctionDef('test_zipfile_error', arguments([Name('self', Param(), lineno=378, col_offset=27)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=379, col_offset=13), [], [], None, None, lineno=379, col_offset=13), Name('script_dir', Store(), lineno=379, col_offset=27), [Assign([Name('mod_name', Store(), lineno=380, col_offset=12)], Str('not_main', lineno=380, col_offset=23), lineno=380, col_offset=12), Assign([Name('script_name', Store(), lineno=381, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=381, col_offset=26), '_make_test_script', Load(), lineno=381, col_offset=26), [Name('script_dir', Load(), lineno=381, col_offset=49), Name('mod_name', Load(), lineno=381, col_offset=61)], [], None, None, lineno=381, col_offset=26), lineno=381, col_offset=12), Assign([Tuple([Name('zip_name', Store(), lineno=382, col_offset=12), Name('fname', Store(), lineno=382, col_offset=22)], Store(), lineno=382, col_offset=12)], Call(Name('make_zip_script', Load(), lineno=382, col_offset=30), [Name('script_dir', Load(), lineno=382, col_offset=46), Str('test_zip', lineno=382, col_offset=58), Name('script_name', Load(), lineno=382, col_offset=70)], [], None, None, lineno=382, col_offset=30), lineno=382, col_offset=12), Assign([Name('msg', Store(), lineno=383, col_offset=12)], BinOp(Str("can't find '__main__' module in %r", lineno=383, col_offset=18), Mod(), Name('zip_name', Load(), lineno=383, col_offset=57), lineno=383, col_offset=18), lineno=383, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=12), '_check_import_error', Load(), lineno=384, col_offset=12), [Name('zip_name', Load(), lineno=384, col_offset=37), Name('msg', Load(), lineno=384, col_offset=47)], [], None, None, lineno=384, col_offset=12), lineno=384, col_offset=12)], lineno=379, col_offset=13)], [], lineno=378, col_offset=4), FunctionDef('test_main_recursion_error', arguments([Name('self', Param(), lineno=386, col_offset=34)], None, None, []), [With(Call(Name('temp_dir', Load(), lineno=387, col_offset=13), [], [], None, None, lineno=387, col_offset=13), Name('script_dir', Store(), lineno=387, col_offset=27), [With(Call(Name('temp_dir', Load(), lineno=387, col_offset=39), [], [], None, None, lineno=387, col_offset=39), Name('dummy_dir', Store(), lineno=387, col_offset=53), [Assign([Name('mod_name', Store(), lineno=388, col_offset=12)], Str('__main__', lineno=388, col_offset=23), lineno=388, col_offset=12), Assign([Name('source', Store(), lineno=389, col_offset=12)], BinOp(Str('import runpy\nrunpy.run_path(%r)\n', lineno=389, col_offset=22), Mod(), Name('dummy_dir', Load(), lineno=390, col_offset=48), lineno=389, col_offset=21), lineno=389, col_offset=12), Assign([Name('script_name', Store(), lineno=391, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=391, col_offset=26), '_make_test_script', Load(), lineno=391, col_offset=26), [Name('script_dir', Load(), lineno=391, col_offset=49), Name('mod_name', Load(), lineno=391, col_offset=61), Name('source', Load(), lineno=391, col_offset=71)], [], None, None, lineno=391, col_offset=26), lineno=391, col_offset=12), Assign([Tuple([Name('zip_name', Store(), lineno=392, col_offset=12), Name('fname', Store(), lineno=392, col_offset=22)], Store(), lineno=392, col_offset=12)], Call(Name('make_zip_script', Load(), lineno=392, col_offset=30), [Name('script_dir', Load(), lineno=392, col_offset=46), Str('test_zip', lineno=392, col_offset=58), Name('script_name', Load(), lineno=392, col_offset=70)], [], None, None, lineno=392, col_offset=30), lineno=392, col_offset=12), Assign([Name('msg', Store(), lineno=393, col_offset=12)], Str('recursion depth exceeded', lineno=393, col_offset=18), lineno=393, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=12), 'assertRaisesRegexp', Load(), lineno=394, col_offset=12), [Name('RuntimeError', Load(), lineno=394, col_offset=36), Name('msg', Load(), lineno=394, col_offset=50), Name('run_path', Load(), lineno=394, col_offset=55), Name('zip_name', Load(), lineno=394, col_offset=65)], [], None, None, lineno=394, col_offset=12), lineno=394, col_offset=12)], lineno=387, col_offset=39)], lineno=387, col_offset=13)], [], lineno=386, col_offset=4)], [], lineno=281, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=399, col_offset=4), [Name('RunModuleCodeTest', Load(), lineno=399, col_offset=17), Name('RunModuleTest', Load(), lineno=399, col_offset=36), Name('RunPathTest', Load(), lineno=399, col_offset=51)], [], None, None, lineno=399, col_offset=4), lineno=399, col_offset=4)], [], lineno=398, col_offset=0), If(Compare(Name('__name__', Load(), lineno=401, col_offset=3), [Eq()], [Str('__main__', lineno=401, col_offset=15)], lineno=401, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=402, col_offset=4), [], [], None, None, lineno=402, col_offset=4), lineno=402, col_offset=4)], [], lineno=401, col_offset=0)])
