Module([ClassDef('Security', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=3, col_offset=17)], None, None, []), [Import([alias('os', None)], lineno=4, col_offset=8), Assign([Name('env', Store(), lineno=5, col_offset=8)], Attribute(Name('os', Load(), lineno=5, col_offset=14), 'environ', Load(), lineno=5, col_offset=14), lineno=5, col_offset=8), If(Call(Attribute(Name('env', Load(), lineno=6, col_offset=11), 'has_key', Load(), lineno=6, col_offset=11), [Str('PYTHON_KEYFILE', lineno=6, col_offset=23)], [], None, None, lineno=6, col_offset=11), [Assign([Name('keyfile', Store(), lineno=7, col_offset=12)], Subscript(Name('env', Load(), lineno=7, col_offset=22), Index(Str('PYTHON_KEYFILE', lineno=7, col_offset=26)), Load(), lineno=7, col_offset=22), lineno=7, col_offset=12)], [Assign([Name('keyfile', Store(), lineno=9, col_offset=12)], Str('.python_keyfile', lineno=9, col_offset=22), lineno=9, col_offset=12), If(Call(Attribute(Name('env', Load(), lineno=10, col_offset=15), 'has_key', Load(), lineno=10, col_offset=15), [Str('HOME', lineno=10, col_offset=27)], [], None, None, lineno=10, col_offset=15), [Assign([Name('keyfile', Store(), lineno=11, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=11, col_offset=26), 'path', Load(), lineno=11, col_offset=26), 'join', Load(), lineno=11, col_offset=26), [Subscript(Name('env', Load(), lineno=11, col_offset=39), Index(Str('HOME', lineno=11, col_offset=43)), Load(), lineno=11, col_offset=39), Name('keyfile', Load(), lineno=11, col_offset=52)], [], None, None, lineno=11, col_offset=26), lineno=11, col_offset=16)], [], lineno=10, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=12, col_offset=19), 'path', Load(), lineno=12, col_offset=19), 'exists', Load(), lineno=12, col_offset=19), [Name('keyfile', Load(), lineno=12, col_offset=34)], [], None, None, lineno=12, col_offset=19), lineno=12, col_offset=15), [Import([alias('sys', None)], lineno=13, col_offset=16), For(Name('dir', Store(), lineno=14, col_offset=20), Attribute(Name('sys', Load(), lineno=14, col_offset=27), 'path', Load(), lineno=14, col_offset=27), [Assign([Name('kf', Store(), lineno=15, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=15, col_offset=25), 'path', Load(), lineno=15, col_offset=25), 'join', Load(), lineno=15, col_offset=25), [Name('dir', Load(), lineno=15, col_offset=38), Name('keyfile', Load(), lineno=15, col_offset=43)], [], None, None, lineno=15, col_offset=25), lineno=15, col_offset=20), If(Call(Attribute(Attribute(Name('os', Load(), lineno=16, col_offset=23), 'path', Load(), lineno=16, col_offset=23), 'exists', Load(), lineno=16, col_offset=23), [Name('kf', Load(), lineno=16, col_offset=38)], [], None, None, lineno=16, col_offset=23), [Assign([Name('keyfile', Store(), lineno=17, col_offset=24)], Name('kf', Load(), lineno=17, col_offset=34), lineno=17, col_offset=24), Break( lineno=18, col_offset=24)], [], lineno=16, col_offset=20)], [], lineno=14, col_offset=16)], [], lineno=12, col_offset=12)], lineno=6, col_offset=8), TryExcept([Assign([Attribute(Name('self', Load(), lineno=20, col_offset=12), '_key', Store(), lineno=20, col_offset=12)], Call(Name('eval', Load(), lineno=20, col_offset=24), [Call(Attribute(Call(Name('open', Load(), lineno=20, col_offset=29), [Name('keyfile', Load(), lineno=20, col_offset=34)], [], None, None, lineno=20, col_offset=29), 'readline', Load(), lineno=20, col_offset=29), [], [], None, None, lineno=20, col_offset=29)], [], None, None, lineno=20, col_offset=24), lineno=20, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=21, col_offset=15), None, [Raise(Name('IOError', Load(), lineno=22, col_offset=18), BinOp(Str('python keyfile %s: cannot open', lineno=22, col_offset=27), Mod(), Name('keyfile', Load(), lineno=22, col_offset=62), lineno=22, col_offset=27), None, lineno=22, col_offset=12)], lineno=21, col_offset=8)], [], lineno=19, col_offset=8)], [], lineno=3, col_offset=4), FunctionDef('_generate_challenge', arguments([Name('self', Param(), lineno=24, col_offset=28)], None, None, []), [Import([alias('random', None)], lineno=25, col_offset=8), Return(Call(Attribute(Name('random', Load(), lineno=26, col_offset=15), 'randint', Load(), lineno=26, col_offset=15), [Num(100, lineno=26, col_offset=30), Num(100000, lineno=26, col_offset=35)], [], None, None, lineno=26, col_offset=15), lineno=26, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('_compare_challenge_response', arguments([Name('self', Param(), lineno=28, col_offset=36), Name('challenge', Param(), lineno=28, col_offset=42), Name('response', Param(), lineno=28, col_offset=53)], None, None, []), [Return(Compare(Call(Attribute(Name('self', Load(), lineno=29, col_offset=15), '_encode_challenge', Load(), lineno=29, col_offset=15), [Name('challenge', Load(), lineno=29, col_offset=38)], [], None, None, lineno=29, col_offset=15), [Eq()], [Name('response', Load(), lineno=29, col_offset=52)], lineno=29, col_offset=15), lineno=29, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('_encode_challenge', arguments([Name('self', Param(), lineno=31, col_offset=26), Name('challenge', Param(), lineno=31, col_offset=32)], None, None, []), [Assign([Tuple([Name('p', Store(), lineno=32, col_offset=8), Name('m', Store(), lineno=32, col_offset=11)], Store(), lineno=32, col_offset=8)], Attribute(Name('self', Load(), lineno=32, col_offset=15), '_key', Load(), lineno=32, col_offset=15), lineno=32, col_offset=8), Return(Call(Name('pow', Load(), lineno=33, col_offset=15), [Call(Name('long', Load(), lineno=33, col_offset=19), [Name('challenge', Load(), lineno=33, col_offset=24)], [], None, None, lineno=33, col_offset=19), Name('p', Load(), lineno=33, col_offset=36), Name('m', Load(), lineno=33, col_offset=39)], [], None, None, lineno=33, col_offset=15), lineno=33, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=1, col_offset=0)])
