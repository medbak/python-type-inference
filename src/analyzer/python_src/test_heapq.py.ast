Module([Expr(Str('Unittests for heapq.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('random', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), Import([alias('sys', None)], lineno=6, col_offset=0), Import([alias('heapq', 'c_heapq')], lineno=10, col_offset=0), Assign([Name('py_heapq', Store(), lineno=11, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=11, col_offset=11), 'import_fresh_module', Load(), lineno=11, col_offset=11), [Str('heapq', lineno=11, col_offset=44)], [keyword('blocked', List([Str('_heapq', lineno=11, col_offset=62)], Load(), lineno=11, col_offset=61))], None, None, lineno=11, col_offset=11), lineno=11, col_offset=0), ClassDef('TestHeap', [Attribute(Name('unittest', Load(), lineno=13, col_offset=15), 'TestCase', Load(), lineno=13, col_offset=15)], [Assign([Name('module', Store(), lineno=14, col_offset=4)], Name('None', Load(), lineno=14, col_offset=13), lineno=14, col_offset=4), FunctionDef('test_push_pop', arguments([Name('self', Param(), lineno=16, col_offset=22)], None, None, []), [Assign([Name('heap', Store(), lineno=18, col_offset=8)], List([], Load(), lineno=18, col_offset=15), lineno=18, col_offset=8), Assign([Name('data', Store(), lineno=19, col_offset=8)], List([], Load(), lineno=19, col_offset=15), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'check_invariant', Load(), lineno=20, col_offset=8), [Name('heap', Load(), lineno=20, col_offset=29)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), For(Name('i', Store(), lineno=21, col_offset=12), Call(Name('range', Load(), lineno=21, col_offset=17), [Num(256, lineno=21, col_offset=23)], [], None, None, lineno=21, col_offset=17), [Assign([Name('item', Store(), lineno=22, col_offset=12)], Call(Attribute(Name('random', Load(), lineno=22, col_offset=19), 'random', Load(), lineno=22, col_offset=19), [], [], None, None, lineno=22, col_offset=19), lineno=22, col_offset=12), Expr(Call(Attribute(Name('data', Load(), lineno=23, col_offset=12), 'append', Load(), lineno=23, col_offset=12), [Name('item', Load(), lineno=23, col_offset=24)], [], None, None, lineno=23, col_offset=12), lineno=23, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=24, col_offset=12), 'module', Load(), lineno=24, col_offset=12), 'heappush', Load(), lineno=24, col_offset=12), [Name('heap', Load(), lineno=24, col_offset=33), Name('item', Load(), lineno=24, col_offset=39)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=12), 'check_invariant', Load(), lineno=25, col_offset=12), [Name('heap', Load(), lineno=25, col_offset=33)], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=12)], [], lineno=21, col_offset=8), Assign([Name('results', Store(), lineno=26, col_offset=8)], List([], Load(), lineno=26, col_offset=18), lineno=26, col_offset=8), While(Name('heap', Load(), lineno=27, col_offset=14), [Assign([Name('item', Store(), lineno=28, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=28, col_offset=19), 'module', Load(), lineno=28, col_offset=19), 'heappop', Load(), lineno=28, col_offset=19), [Name('heap', Load(), lineno=28, col_offset=39)], [], None, None, lineno=28, col_offset=19), lineno=28, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=12), 'check_invariant', Load(), lineno=29, col_offset=12), [Name('heap', Load(), lineno=29, col_offset=33)], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=12), Expr(Call(Attribute(Name('results', Load(), lineno=30, col_offset=12), 'append', Load(), lineno=30, col_offset=12), [Name('item', Load(), lineno=30, col_offset=27)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=12)], [], lineno=27, col_offset=8), Assign([Name('data_sorted', Store(), lineno=31, col_offset=8)], Subscript(Name('data', Load(), lineno=31, col_offset=22), Slice(None, None, None), Load(), lineno=31, col_offset=22), lineno=31, col_offset=8), Expr(Call(Attribute(Name('data_sorted', Load(), lineno=32, col_offset=8), 'sort', Load(), lineno=32, col_offset=8), [], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [Name('data_sorted', Load(), lineno=33, col_offset=25), Name('results', Load(), lineno=33, col_offset=38)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'check_invariant', Load(), lineno=35, col_offset=8), [Name('results', Load(), lineno=35, col_offset=29)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertRaises', Load(), lineno=37, col_offset=8), [Name('TypeError', Load(), lineno=37, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=37, col_offset=37), 'module', Load(), lineno=37, col_offset=37), 'heappush', Load(), lineno=37, col_offset=37), List([], Load(), lineno=37, col_offset=59)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'assertRaises', Load(), lineno=39, col_offset=12), [Name('TypeError', Load(), lineno=39, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=39, col_offset=41), 'module', Load(), lineno=39, col_offset=41), 'heappush', Load(), lineno=39, col_offset=41), Name('None', Load(), lineno=39, col_offset=63), Name('None', Load(), lineno=39, col_offset=69)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=12), 'assertRaises', Load(), lineno=40, col_offset=12), [Name('TypeError', Load(), lineno=40, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=40, col_offset=41), 'module', Load(), lineno=40, col_offset=41), 'heappop', Load(), lineno=40, col_offset=41), Name('None', Load(), lineno=40, col_offset=62)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=41, col_offset=15), None, [Pass( lineno=42, col_offset=12)], lineno=41, col_offset=8)], [], lineno=38, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('check_invariant', arguments([Name('self', Param(), lineno=44, col_offset=24), Name('heap', Param(), lineno=44, col_offset=30)], None, None, []), [For(Tuple([Name('pos', Store(), lineno=46, col_offset=12), Name('item', Store(), lineno=46, col_offset=17)], Store(), lineno=46, col_offset=12), Call(Name('enumerate', Load(), lineno=46, col_offset=25), [Name('heap', Load(), lineno=46, col_offset=35)], [], None, None, lineno=46, col_offset=25), [If(Name('pos', Load(), lineno=47, col_offset=15), [Assign([Name('parentpos', Store(), lineno=48, col_offset=16)], BinOp(BinOp(Name('pos', Load(), lineno=48, col_offset=29), Sub(), Num(1, lineno=48, col_offset=33), lineno=48, col_offset=29), RShift(), Num(1, lineno=48, col_offset=39), lineno=48, col_offset=28), lineno=48, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=16), 'assertTrue', Load(), lineno=49, col_offset=16), [Compare(Subscript(Name('heap', Load(), lineno=49, col_offset=32), Index(Name('parentpos', Load(), lineno=49, col_offset=37)), Load(), lineno=49, col_offset=32), [LtE()], [Name('item', Load(), lineno=49, col_offset=51)], lineno=49, col_offset=32)], [], None, None, lineno=49, col_offset=16), lineno=49, col_offset=16)], [], lineno=47, col_offset=12)], [], lineno=46, col_offset=8)], [], lineno=44, col_offset=4), FunctionDef('test_heapify', arguments([Name('self', Param(), lineno=51, col_offset=21)], None, None, []), [For(Name('size', Store(), lineno=52, col_offset=12), Call(Name('range', Load(), lineno=52, col_offset=20), [Num(30, lineno=52, col_offset=26)], [], None, None, lineno=52, col_offset=20), [Assign([Name('heap', Store(), lineno=53, col_offset=12)], ListComp(Call(Attribute(Name('random', Load(), lineno=53, col_offset=20), 'random', Load(), lineno=53, col_offset=20), [], [], None, None, lineno=53, col_offset=20), [comprehension(Name('dummy', Store(), lineno=53, col_offset=40), Call(Name('range', Load(), lineno=53, col_offset=49), [Name('size', Load(), lineno=53, col_offset=55)], [], None, None, lineno=53, col_offset=49), [])], lineno=53, col_offset=20), lineno=53, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'module', Load(), lineno=54, col_offset=12), 'heapify', Load(), lineno=54, col_offset=12), [Name('heap', Load(), lineno=54, col_offset=32)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=12), 'check_invariant', Load(), lineno=55, col_offset=12), [Name('heap', Load(), lineno=55, col_offset=33)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [], lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertRaises', Load(), lineno=57, col_offset=8), [Name('TypeError', Load(), lineno=57, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=57, col_offset=37), 'module', Load(), lineno=57, col_offset=37), 'heapify', Load(), lineno=57, col_offset=37), Name('None', Load(), lineno=57, col_offset=58)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('test_naive_nbest', arguments([Name('self', Param(), lineno=59, col_offset=25)], None, None, []), [Assign([Name('data', Store(), lineno=60, col_offset=8)], ListComp(Call(Attribute(Name('random', Load(), lineno=60, col_offset=16), 'randrange', Load(), lineno=60, col_offset=16), [Num(2000, lineno=60, col_offset=33)], [], None, None, lineno=60, col_offset=16), [comprehension(Name('i', Store(), lineno=60, col_offset=43), Call(Name('range', Load(), lineno=60, col_offset=48), [Num(1000, lineno=60, col_offset=54)], [], None, None, lineno=60, col_offset=48), [])], lineno=60, col_offset=16), lineno=60, col_offset=8), Assign([Name('heap', Store(), lineno=61, col_offset=8)], List([], Load(), lineno=61, col_offset=15), lineno=61, col_offset=8), For(Name('item', Store(), lineno=62, col_offset=12), Name('data', Load(), lineno=62, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=12), 'module', Load(), lineno=63, col_offset=12), 'heappush', Load(), lineno=63, col_offset=12), [Name('heap', Load(), lineno=63, col_offset=33), Name('item', Load(), lineno=63, col_offset=39)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=64, col_offset=15), [Name('heap', Load(), lineno=64, col_offset=19)], [], None, None, lineno=64, col_offset=15), [Gt()], [Num(10, lineno=64, col_offset=27)], lineno=64, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=65, col_offset=16), 'module', Load(), lineno=65, col_offset=16), 'heappop', Load(), lineno=65, col_offset=16), [Name('heap', Load(), lineno=65, col_offset=36)], [], None, None, lineno=65, col_offset=16), lineno=65, col_offset=16)], [], lineno=64, col_offset=12)], [], lineno=62, col_offset=8), Expr(Call(Attribute(Name('heap', Load(), lineno=66, col_offset=8), 'sort', Load(), lineno=66, col_offset=8), [], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'assertEqual', Load(), lineno=67, col_offset=8), [Name('heap', Load(), lineno=67, col_offset=25), Subscript(Call(Name('sorted', Load(), lineno=67, col_offset=31), [Name('data', Load(), lineno=67, col_offset=38)], [], None, None, lineno=67, col_offset=31), Slice(Num(-10, lineno=67, col_offset=45), None, None), Load(), lineno=67, col_offset=31)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('heapiter', arguments([Name('self', Param(), lineno=69, col_offset=17), Name('heap', Param(), lineno=69, col_offset=23)], None, None, []), [TryExcept([While(Num(1, lineno=72, col_offset=18), [Expr(Yield(Call(Attribute(Attribute(Name('self', Load(), lineno=73, col_offset=22), 'module', Load(), lineno=73, col_offset=22), 'heappop', Load(), lineno=73, col_offset=22), [Name('heap', Load(), lineno=73, col_offset=42)], [], None, None, lineno=73, col_offset=22), lineno=73, col_offset=16), lineno=73, col_offset=16)], [], lineno=72, col_offset=12)], [ExceptHandler(Name('IndexError', Load(), lineno=74, col_offset=15), None, [Pass( lineno=75, col_offset=12)], lineno=74, col_offset=8)], [], lineno=71, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('test_nbest', arguments([Name('self', Param(), lineno=77, col_offset=19)], None, None, []), [Assign([Name('data', Store(), lineno=83, col_offset=8)], ListComp(Call(Attribute(Name('random', Load(), lineno=83, col_offset=16), 'randrange', Load(), lineno=83, col_offset=16), [Num(2000, lineno=83, col_offset=33)], [], None, None, lineno=83, col_offset=16), [comprehension(Name('i', Store(), lineno=83, col_offset=43), Call(Name('range', Load(), lineno=83, col_offset=48), [Num(1000, lineno=83, col_offset=54)], [], None, None, lineno=83, col_offset=48), [])], lineno=83, col_offset=16), lineno=83, col_offset=8), Assign([Name('heap', Store(), lineno=84, col_offset=8)], Subscript(Name('data', Load(), lineno=84, col_offset=15), Slice(None, Num(10, lineno=84, col_offset=21), None), Load(), lineno=84, col_offset=15), lineno=84, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=85, col_offset=8), 'module', Load(), lineno=85, col_offset=8), 'heapify', Load(), lineno=85, col_offset=8), [Name('heap', Load(), lineno=85, col_offset=28)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), For(Name('item', Store(), lineno=86, col_offset=12), Subscript(Name('data', Load(), lineno=86, col_offset=20), Slice(Num(10, lineno=86, col_offset=25), None, None), Load(), lineno=86, col_offset=20), [If(Compare(Name('item', Load(), lineno=87, col_offset=15), [Gt()], [Subscript(Name('heap', Load(), lineno=87, col_offset=22), Index(Num(0, lineno=87, col_offset=27)), Load(), lineno=87, col_offset=22)], lineno=87, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=88, col_offset=16), 'module', Load(), lineno=88, col_offset=16), 'heapreplace', Load(), lineno=88, col_offset=16), [Name('heap', Load(), lineno=88, col_offset=40), Name('item', Load(), lineno=88, col_offset=46)], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16)], [], lineno=87, col_offset=12)], [], lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertEqual', Load(), lineno=89, col_offset=8), [Call(Name('list', Load(), lineno=89, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=89, col_offset=30), 'heapiter', Load(), lineno=89, col_offset=30), [Name('heap', Load(), lineno=89, col_offset=44)], [], None, None, lineno=89, col_offset=30)], [], None, None, lineno=89, col_offset=25), Subscript(Call(Name('sorted', Load(), lineno=89, col_offset=52), [Name('data', Load(), lineno=89, col_offset=59)], [], None, None, lineno=89, col_offset=52), Slice(Num(-10, lineno=89, col_offset=66), None, None), Load(), lineno=89, col_offset=52)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertRaises', Load(), lineno=91, col_offset=8), [Name('TypeError', Load(), lineno=91, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=91, col_offset=37), 'module', Load(), lineno=91, col_offset=37), 'heapreplace', Load(), lineno=91, col_offset=37), Name('None', Load(), lineno=91, col_offset=62)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertRaises', Load(), lineno=92, col_offset=8), [Name('TypeError', Load(), lineno=92, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=92, col_offset=37), 'module', Load(), lineno=92, col_offset=37), 'heapreplace', Load(), lineno=92, col_offset=37), Name('None', Load(), lineno=92, col_offset=62), Name('None', Load(), lineno=92, col_offset=68)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=8), 'assertRaises', Load(), lineno=93, col_offset=8), [Name('IndexError', Load(), lineno=93, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=93, col_offset=38), 'module', Load(), lineno=93, col_offset=38), 'heapreplace', Load(), lineno=93, col_offset=38), List([], Load(), lineno=93, col_offset=63), Name('None', Load(), lineno=93, col_offset=67)], [], None, None, lineno=93, col_offset=8), lineno=93, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('test_nbest_with_pushpop', arguments([Name('self', Param(), lineno=95, col_offset=32)], None, None, []), [Assign([Name('data', Store(), lineno=96, col_offset=8)], ListComp(Call(Attribute(Name('random', Load(), lineno=96, col_offset=16), 'randrange', Load(), lineno=96, col_offset=16), [Num(2000, lineno=96, col_offset=33)], [], None, None, lineno=96, col_offset=16), [comprehension(Name('i', Store(), lineno=96, col_offset=43), Call(Name('range', Load(), lineno=96, col_offset=48), [Num(1000, lineno=96, col_offset=54)], [], None, None, lineno=96, col_offset=48), [])], lineno=96, col_offset=16), lineno=96, col_offset=8), Assign([Name('heap', Store(), lineno=97, col_offset=8)], Subscript(Name('data', Load(), lineno=97, col_offset=15), Slice(None, Num(10, lineno=97, col_offset=21), None), Load(), lineno=97, col_offset=15), lineno=97, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'module', Load(), lineno=98, col_offset=8), 'heapify', Load(), lineno=98, col_offset=8), [Name('heap', Load(), lineno=98, col_offset=28)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), For(Name('item', Store(), lineno=99, col_offset=12), Subscript(Name('data', Load(), lineno=99, col_offset=20), Slice(Num(10, lineno=99, col_offset=25), None, None), Load(), lineno=99, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'module', Load(), lineno=100, col_offset=12), 'heappushpop', Load(), lineno=100, col_offset=12), [Name('heap', Load(), lineno=100, col_offset=36), Name('item', Load(), lineno=100, col_offset=42)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], [], lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertEqual', Load(), lineno=101, col_offset=8), [Call(Name('list', Load(), lineno=101, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=101, col_offset=30), 'heapiter', Load(), lineno=101, col_offset=30), [Name('heap', Load(), lineno=101, col_offset=44)], [], None, None, lineno=101, col_offset=30)], [], None, None, lineno=101, col_offset=25), Subscript(Call(Name('sorted', Load(), lineno=101, col_offset=52), [Name('data', Load(), lineno=101, col_offset=59)], [], None, None, lineno=101, col_offset=52), Slice(Num(-10, lineno=101, col_offset=66), None, None), Load(), lineno=101, col_offset=52)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertEqual', Load(), lineno=102, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=102, col_offset=25), 'module', Load(), lineno=102, col_offset=25), 'heappushpop', Load(), lineno=102, col_offset=25), [List([], Load(), lineno=102, col_offset=49), Str('x', lineno=102, col_offset=53)], [], None, None, lineno=102, col_offset=25), Str('x', lineno=102, col_offset=59)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('test_heappushpop', arguments([Name('self', Param(), lineno=104, col_offset=25)], None, None, []), [Assign([Name('h', Store(), lineno=105, col_offset=8)], List([], Load(), lineno=105, col_offset=12), lineno=105, col_offset=8), Assign([Name('x', Store(), lineno=106, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=106, col_offset=12), 'module', Load(), lineno=106, col_offset=12), 'heappushpop', Load(), lineno=106, col_offset=12), [Name('h', Load(), lineno=106, col_offset=36), Num(10, lineno=106, col_offset=39)], [], None, None, lineno=106, col_offset=12), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Tuple([Name('h', Load(), lineno=107, col_offset=26), Name('x', Load(), lineno=107, col_offset=29)], Load(), lineno=107, col_offset=26), Tuple([List([], Load(), lineno=107, col_offset=34), Num(10, lineno=107, col_offset=38)], Load(), lineno=107, col_offset=34)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Assign([Name('h', Store(), lineno=109, col_offset=8)], List([Num(10, lineno=109, col_offset=13)], Load(), lineno=109, col_offset=12), lineno=109, col_offset=8), Assign([Name('x', Store(), lineno=110, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'module', Load(), lineno=110, col_offset=12), 'heappushpop', Load(), lineno=110, col_offset=12), [Name('h', Load(), lineno=110, col_offset=36), Num(10.0, lineno=110, col_offset=39)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertEqual', Load(), lineno=111, col_offset=8), [Tuple([Name('h', Load(), lineno=111, col_offset=26), Name('x', Load(), lineno=111, col_offset=29)], Load(), lineno=111, col_offset=26), Tuple([List([Num(10, lineno=111, col_offset=35)], Load(), lineno=111, col_offset=34), Num(10.0, lineno=111, col_offset=40)], Load(), lineno=111, col_offset=34)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'assertEqual', Load(), lineno=112, col_offset=8), [Call(Name('type', Load(), lineno=112, col_offset=25), [Subscript(Name('h', Load(), lineno=112, col_offset=30), Index(Num(0, lineno=112, col_offset=32)), Load(), lineno=112, col_offset=30)], [], None, None, lineno=112, col_offset=25), Name('int', Load(), lineno=112, col_offset=37)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Call(Name('type', Load(), lineno=113, col_offset=25), [Name('x', Load(), lineno=113, col_offset=30)], [], None, None, lineno=113, col_offset=25), Name('float', Load(), lineno=113, col_offset=34)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Assign([Name('h', Store(), lineno=115, col_offset=8)], List([Num(10, lineno=115, col_offset=13)], Load(), lineno=115, col_offset=12), lineno=115, col_offset=8), Assign([Name('x', Store(), lineno=116, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=12), 'module', Load(), lineno=116, col_offset=12), 'heappushpop', Load(), lineno=116, col_offset=12), [Name('h', Load(), lineno=116, col_offset=36), Num(9, lineno=116, col_offset=39)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertEqual', Load(), lineno=117, col_offset=8), [Tuple([Name('h', Load(), lineno=117, col_offset=26), Name('x', Load(), lineno=117, col_offset=29)], Load(), lineno=117, col_offset=26), Tuple([List([Num(10, lineno=117, col_offset=35)], Load(), lineno=117, col_offset=34), Num(9, lineno=117, col_offset=40)], Load(), lineno=117, col_offset=34)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Assign([Name('h', Store(), lineno=119, col_offset=8)], List([Num(10, lineno=119, col_offset=13)], Load(), lineno=119, col_offset=12), lineno=119, col_offset=8), Assign([Name('x', Store(), lineno=120, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=120, col_offset=12), 'module', Load(), lineno=120, col_offset=12), 'heappushpop', Load(), lineno=120, col_offset=12), [Name('h', Load(), lineno=120, col_offset=36), Num(11, lineno=120, col_offset=39)], [], None, None, lineno=120, col_offset=12), lineno=120, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=8), 'assertEqual', Load(), lineno=121, col_offset=8), [Tuple([Name('h', Load(), lineno=121, col_offset=26), Name('x', Load(), lineno=121, col_offset=29)], Load(), lineno=121, col_offset=26), Tuple([List([Num(11, lineno=121, col_offset=35)], Load(), lineno=121, col_offset=34), Num(10, lineno=121, col_offset=40)], Load(), lineno=121, col_offset=34)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8)], [], lineno=104, col_offset=4), FunctionDef('test_heapsort', arguments([Name('self', Param(), lineno=123, col_offset=22)], None, None, []), [For(Name('trial', Store(), lineno=125, col_offset=12), Call(Name('xrange', Load(), lineno=125, col_offset=21), [Num(100, lineno=125, col_offset=28)], [], None, None, lineno=125, col_offset=21), [Assign([Name('size', Store(), lineno=126, col_offset=12)], Call(Attribute(Name('random', Load(), lineno=126, col_offset=19), 'randrange', Load(), lineno=126, col_offset=19), [Num(50, lineno=126, col_offset=36)], [], None, None, lineno=126, col_offset=19), lineno=126, col_offset=12), Assign([Name('data', Store(), lineno=127, col_offset=12)], ListComp(Call(Attribute(Name('random', Load(), lineno=127, col_offset=20), 'randrange', Load(), lineno=127, col_offset=20), [Num(25, lineno=127, col_offset=37)], [], None, None, lineno=127, col_offset=20), [comprehension(Name('i', Store(), lineno=127, col_offset=45), Call(Name('range', Load(), lineno=127, col_offset=50), [Name('size', Load(), lineno=127, col_offset=56)], [], None, None, lineno=127, col_offset=50), [])], lineno=127, col_offset=20), lineno=127, col_offset=12), If(BinOp(Name('trial', Load(), lineno=128, col_offset=15), BitAnd(), Num(1, lineno=128, col_offset=23), lineno=128, col_offset=15), [Assign([Name('heap', Store(), lineno=129, col_offset=16)], Subscript(Name('data', Load(), lineno=129, col_offset=23), Slice(None, None, None), Load(), lineno=129, col_offset=23), lineno=129, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=130, col_offset=16), 'module', Load(), lineno=130, col_offset=16), 'heapify', Load(), lineno=130, col_offset=16), [Name('heap', Load(), lineno=130, col_offset=36)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=16)], [Assign([Name('heap', Store(), lineno=132, col_offset=16)], List([], Load(), lineno=132, col_offset=23), lineno=132, col_offset=16), For(Name('item', Store(), lineno=133, col_offset=20), Name('data', Load(), lineno=133, col_offset=28), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=20), 'module', Load(), lineno=134, col_offset=20), 'heappush', Load(), lineno=134, col_offset=20), [Name('heap', Load(), lineno=134, col_offset=41), Name('item', Load(), lineno=134, col_offset=47)], [], None, None, lineno=134, col_offset=20), lineno=134, col_offset=20)], [], lineno=133, col_offset=16)], lineno=128, col_offset=12), Assign([Name('heap_sorted', Store(), lineno=135, col_offset=12)], ListComp(Call(Attribute(Attribute(Name('self', Load(), lineno=135, col_offset=27), 'module', Load(), lineno=135, col_offset=27), 'heappop', Load(), lineno=135, col_offset=27), [Name('heap', Load(), lineno=135, col_offset=47)], [], None, None, lineno=135, col_offset=27), [comprehension(Name('i', Store(), lineno=135, col_offset=57), Call(Name('range', Load(), lineno=135, col_offset=62), [Name('size', Load(), lineno=135, col_offset=68)], [], None, None, lineno=135, col_offset=62), [])], lineno=135, col_offset=27), lineno=135, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=12), 'assertEqual', Load(), lineno=136, col_offset=12), [Name('heap_sorted', Load(), lineno=136, col_offset=29), Call(Name('sorted', Load(), lineno=136, col_offset=42), [Name('data', Load(), lineno=136, col_offset=49)], [], None, None, lineno=136, col_offset=42)], [], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12)], [], lineno=125, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('test_merge', arguments([Name('self', Param(), lineno=138, col_offset=19)], None, None, []), [Assign([Name('inputs', Store(), lineno=139, col_offset=8)], List([], Load(), lineno=139, col_offset=17), lineno=139, col_offset=8), For(Name('i', Store(), lineno=140, col_offset=12), Call(Name('xrange', Load(), lineno=140, col_offset=17), [Call(Attribute(Name('random', Load(), lineno=140, col_offset=24), 'randrange', Load(), lineno=140, col_offset=24), [Num(5, lineno=140, col_offset=41)], [], None, None, lineno=140, col_offset=24)], [], None, None, lineno=140, col_offset=17), [Assign([Name('row', Store(), lineno=141, col_offset=12)], Call(Name('sorted', Load(), lineno=141, col_offset=18), [GeneratorExp(Call(Attribute(Name('random', Load(), lineno=141, col_offset=25), 'randrange', Load(), lineno=141, col_offset=25), [Num(1000, lineno=141, col_offset=42)], [], None, None, lineno=141, col_offset=25), [comprehension(Name('j', Store(), lineno=141, col_offset=52), Call(Name('range', Load(), lineno=141, col_offset=57), [Call(Attribute(Name('random', Load(), lineno=141, col_offset=63), 'randrange', Load(), lineno=141, col_offset=63), [Num(10, lineno=141, col_offset=80)], [], None, None, lineno=141, col_offset=63)], [], None, None, lineno=141, col_offset=57), [])], lineno=141, col_offset=25)], [], None, None, lineno=141, col_offset=18), lineno=141, col_offset=12), Expr(Call(Attribute(Name('inputs', Load(), lineno=142, col_offset=12), 'append', Load(), lineno=142, col_offset=12), [Name('row', Load(), lineno=142, col_offset=26)], [], None, None, lineno=142, col_offset=12), lineno=142, col_offset=12)], [], lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertEqual', Load(), lineno=143, col_offset=8), [Call(Name('sorted', Load(), lineno=143, col_offset=25), [Call(Name('chain', Load(), lineno=143, col_offset=32), [], [], Name('inputs', Load(), lineno=143, col_offset=39), None, lineno=143, col_offset=32)], [], None, None, lineno=143, col_offset=25), Call(Name('list', Load(), lineno=143, col_offset=49), [Call(Attribute(Attribute(Name('self', Load(), lineno=143, col_offset=54), 'module', Load(), lineno=143, col_offset=54), 'merge', Load(), lineno=143, col_offset=54), [], [], Name('inputs', Load(), lineno=143, col_offset=73), None, lineno=143, col_offset=54)], [], None, None, lineno=143, col_offset=49)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertEqual', Load(), lineno=144, col_offset=8), [Call(Name('list', Load(), lineno=144, col_offset=25), [Call(Attribute(Attribute(Name('self', Load(), lineno=144, col_offset=30), 'module', Load(), lineno=144, col_offset=30), 'merge', Load(), lineno=144, col_offset=30), [], [], None, None, lineno=144, col_offset=30)], [], None, None, lineno=144, col_offset=25), List([], Load(), lineno=144, col_offset=52)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8)], [], lineno=138, col_offset=4), FunctionDef('test_merge_stability', arguments([Name('self', Param(), lineno=146, col_offset=29)], None, None, []), [ClassDef('Int', [Name('int', Load(), lineno=147, col_offset=18)], [Pass( lineno=148, col_offset=12)], [], lineno=147, col_offset=8), Assign([Name('inputs', Store(), lineno=149, col_offset=8)], List([List([], Load(), lineno=149, col_offset=18), List([], Load(), lineno=149, col_offset=22), List([], Load(), lineno=149, col_offset=26), List([], Load(), lineno=149, col_offset=30)], Load(), lineno=149, col_offset=17), lineno=149, col_offset=8), For(Name('i', Store(), lineno=150, col_offset=12), Call(Name('range', Load(), lineno=150, col_offset=17), [Num(20000, lineno=150, col_offset=23)], [], None, None, lineno=150, col_offset=17), [Assign([Name('stream', Store(), lineno=151, col_offset=12)], Call(Attribute(Name('random', Load(), lineno=151, col_offset=21), 'randrange', Load(), lineno=151, col_offset=21), [Num(4, lineno=151, col_offset=38)], [], None, None, lineno=151, col_offset=21), lineno=151, col_offset=12), Assign([Name('x', Store(), lineno=152, col_offset=12)], Call(Attribute(Name('random', Load(), lineno=152, col_offset=16), 'randrange', Load(), lineno=152, col_offset=16), [Num(500, lineno=152, col_offset=33)], [], None, None, lineno=152, col_offset=16), lineno=152, col_offset=12), Assign([Name('obj', Store(), lineno=153, col_offset=12)], Call(Name('Int', Load(), lineno=153, col_offset=18), [Name('x', Load(), lineno=153, col_offset=22)], [], None, None, lineno=153, col_offset=18), lineno=153, col_offset=12), Assign([Attribute(Name('obj', Load(), lineno=154, col_offset=12), 'pair', Store(), lineno=154, col_offset=12)], Tuple([Name('x', Load(), lineno=154, col_offset=24), Name('stream', Load(), lineno=154, col_offset=27)], Load(), lineno=154, col_offset=24), lineno=154, col_offset=12), Expr(Call(Attribute(Subscript(Name('inputs', Load(), lineno=155, col_offset=12), Index(Name('stream', Load(), lineno=155, col_offset=19)), Load(), lineno=155, col_offset=12), 'append', Load(), lineno=155, col_offset=12), [Name('obj', Load(), lineno=155, col_offset=34)], [], None, None, lineno=155, col_offset=12), lineno=155, col_offset=12)], [], lineno=150, col_offset=8), For(Name('stream', Store(), lineno=156, col_offset=12), Name('inputs', Load(), lineno=156, col_offset=22), [Expr(Call(Attribute(Name('stream', Load(), lineno=157, col_offset=12), 'sort', Load(), lineno=157, col_offset=12), [], [], None, None, lineno=157, col_offset=12), lineno=157, col_offset=12)], [], lineno=156, col_offset=8), Assign([Name('result', Store(), lineno=158, col_offset=8)], ListComp(Attribute(Name('i', Load(), lineno=158, col_offset=18), 'pair', Load(), lineno=158, col_offset=18), [comprehension(Name('i', Store(), lineno=158, col_offset=29), Call(Attribute(Attribute(Name('self', Load(), lineno=158, col_offset=34), 'module', Load(), lineno=158, col_offset=34), 'merge', Load(), lineno=158, col_offset=34), [], [], Name('inputs', Load(), lineno=158, col_offset=53), None, lineno=158, col_offset=34), [])], lineno=158, col_offset=18), lineno=158, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'assertEqual', Load(), lineno=159, col_offset=8), [Name('result', Load(), lineno=159, col_offset=25), Call(Name('sorted', Load(), lineno=159, col_offset=33), [Name('result', Load(), lineno=159, col_offset=40)], [], None, None, lineno=159, col_offset=33)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('test_nsmallest', arguments([Name('self', Param(), lineno=161, col_offset=23)], None, None, []), [Assign([Name('data', Store(), lineno=162, col_offset=8)], ListComp(Tuple([Call(Attribute(Name('random', Load(), lineno=162, col_offset=17), 'randrange', Load(), lineno=162, col_offset=17), [Num(2000, lineno=162, col_offset=34)], [], None, None, lineno=162, col_offset=17), Name('i', Load(), lineno=162, col_offset=41)], Load(), lineno=162, col_offset=17), [comprehension(Name('i', Store(), lineno=162, col_offset=48), Call(Name('range', Load(), lineno=162, col_offset=53), [Num(1000, lineno=162, col_offset=59)], [], None, None, lineno=162, col_offset=53), [])], lineno=162, col_offset=16), lineno=162, col_offset=8), For(Name('f', Store(), lineno=163, col_offset=12), Tuple([Name('None', Load(), lineno=163, col_offset=18), Lambda(arguments([Name('x', Param(), lineno=163, col_offset=31)], None, None, []), BinOp(BinOp(Subscript(Name('x', Load(), lineno=163, col_offset=35), Index(Num(0, lineno=163, col_offset=37)), Load(), lineno=163, col_offset=35), Mult(), Num(547, lineno=163, col_offset=42), lineno=163, col_offset=35), Mod(), Num(2000, lineno=163, col_offset=48), lineno=163, col_offset=46), lineno=163, col_offset=24)], Load(), lineno=163, col_offset=18), [For(Name('n', Store(), lineno=164, col_offset=16), Tuple([Num(0, lineno=164, col_offset=22), Num(1, lineno=164, col_offset=25), Num(2, lineno=164, col_offset=28), Num(10, lineno=164, col_offset=31), Num(100, lineno=164, col_offset=35), Num(400, lineno=164, col_offset=40), Num(999, lineno=164, col_offset=45), Num(1000, lineno=164, col_offset=50), Num(1100, lineno=164, col_offset=56)], Load(), lineno=164, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=16), 'assertEqual', Load(), lineno=165, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=165, col_offset=33), 'module', Load(), lineno=165, col_offset=33), 'nsmallest', Load(), lineno=165, col_offset=33), [Name('n', Load(), lineno=165, col_offset=55), Name('data', Load(), lineno=165, col_offset=58)], [], None, None, lineno=165, col_offset=33), Subscript(Call(Name('sorted', Load(), lineno=165, col_offset=65), [Name('data', Load(), lineno=165, col_offset=72)], [], None, None, lineno=165, col_offset=65), Slice(None, Name('n', Load(), lineno=165, col_offset=79), None), Load(), lineno=165, col_offset=65)], [], None, None, lineno=165, col_offset=16), lineno=165, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=16), 'assertEqual', Load(), lineno=166, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=166, col_offset=33), 'module', Load(), lineno=166, col_offset=33), 'nsmallest', Load(), lineno=166, col_offset=33), [Name('n', Load(), lineno=166, col_offset=55), Name('data', Load(), lineno=166, col_offset=58)], [keyword('key', Name('f', Load(), lineno=166, col_offset=68))], None, None, lineno=166, col_offset=33), Subscript(Call(Name('sorted', Load(), lineno=167, col_offset=33), [Name('data', Load(), lineno=167, col_offset=40)], [keyword('key', Name('f', Load(), lineno=167, col_offset=50))], None, None, lineno=167, col_offset=33), Slice(None, Name('n', Load(), lineno=167, col_offset=54), None), Load(), lineno=167, col_offset=33)], [], None, None, lineno=166, col_offset=16), lineno=166, col_offset=16)], [], lineno=164, col_offset=12)], [], lineno=163, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('test_nlargest', arguments([Name('self', Param(), lineno=169, col_offset=22)], None, None, []), [Assign([Name('data', Store(), lineno=170, col_offset=8)], ListComp(Tuple([Call(Attribute(Name('random', Load(), lineno=170, col_offset=17), 'randrange', Load(), lineno=170, col_offset=17), [Num(2000, lineno=170, col_offset=34)], [], None, None, lineno=170, col_offset=17), Name('i', Load(), lineno=170, col_offset=41)], Load(), lineno=170, col_offset=17), [comprehension(Name('i', Store(), lineno=170, col_offset=48), Call(Name('range', Load(), lineno=170, col_offset=53), [Num(1000, lineno=170, col_offset=59)], [], None, None, lineno=170, col_offset=53), [])], lineno=170, col_offset=16), lineno=170, col_offset=8), For(Name('f', Store(), lineno=171, col_offset=12), Tuple([Name('None', Load(), lineno=171, col_offset=18), Lambda(arguments([Name('x', Param(), lineno=171, col_offset=31)], None, None, []), BinOp(BinOp(Subscript(Name('x', Load(), lineno=171, col_offset=35), Index(Num(0, lineno=171, col_offset=37)), Load(), lineno=171, col_offset=35), Mult(), Num(547, lineno=171, col_offset=42), lineno=171, col_offset=35), Mod(), Num(2000, lineno=171, col_offset=48), lineno=171, col_offset=46), lineno=171, col_offset=24)], Load(), lineno=171, col_offset=18), [For(Name('n', Store(), lineno=172, col_offset=16), Tuple([Num(0, lineno=172, col_offset=22), Num(1, lineno=172, col_offset=25), Num(2, lineno=172, col_offset=28), Num(10, lineno=172, col_offset=31), Num(100, lineno=172, col_offset=35), Num(400, lineno=172, col_offset=40), Num(999, lineno=172, col_offset=45), Num(1000, lineno=172, col_offset=50), Num(1100, lineno=172, col_offset=56)], Load(), lineno=172, col_offset=22), [Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=16), 'assertEqual', Load(), lineno=173, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=173, col_offset=33), 'module', Load(), lineno=173, col_offset=33), 'nlargest', Load(), lineno=173, col_offset=33), [Name('n', Load(), lineno=173, col_offset=54), Name('data', Load(), lineno=173, col_offset=57)], [], None, None, lineno=173, col_offset=33), Subscript(Call(Name('sorted', Load(), lineno=174, col_offset=33), [Name('data', Load(), lineno=174, col_offset=40)], [keyword('reverse', Name('True', Load(), lineno=174, col_offset=54))], None, None, lineno=174, col_offset=33), Slice(None, Name('n', Load(), lineno=174, col_offset=61), None), Load(), lineno=174, col_offset=33)], [], None, None, lineno=173, col_offset=16), lineno=173, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=16), 'assertEqual', Load(), lineno=175, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=175, col_offset=33), 'module', Load(), lineno=175, col_offset=33), 'nlargest', Load(), lineno=175, col_offset=33), [Name('n', Load(), lineno=175, col_offset=54), Name('data', Load(), lineno=175, col_offset=57)], [keyword('key', Name('f', Load(), lineno=175, col_offset=67))], None, None, lineno=175, col_offset=33), Subscript(Call(Name('sorted', Load(), lineno=176, col_offset=33), [Name('data', Load(), lineno=176, col_offset=40)], [keyword('key', Name('f', Load(), lineno=176, col_offset=50)), keyword('reverse', Name('True', Load(), lineno=176, col_offset=61))], None, None, lineno=176, col_offset=33), Slice(None, Name('n', Load(), lineno=176, col_offset=68), None), Load(), lineno=176, col_offset=33)], [], None, None, lineno=175, col_offset=16), lineno=175, col_offset=16)], [], lineno=172, col_offset=12)], [], lineno=171, col_offset=8)], [], lineno=169, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('TestHeapPython', [Name('TestHeap', Load(), lineno=178, col_offset=21)], [Assign([Name('module', Store(), lineno=179, col_offset=4)], Name('py_heapq', Load(), lineno=179, col_offset=13), lineno=179, col_offset=4), FunctionDef('test_pure_python', arguments([Name('self', Param(), lineno=183, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'assertFalse', Load(), lineno=184, col_offset=8), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=184, col_offset=25), 'modules', Load(), lineno=184, col_offset=25), Index(Str('heapq', lineno=184, col_offset=37)), Load(), lineno=184, col_offset=25), [Is()], [Attribute(Name('self', Load(), lineno=184, col_offset=49), 'module', Load(), lineno=184, col_offset=49)], lineno=184, col_offset=25)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertTrue', Load(), lineno=185, col_offset=8), [Call(Name('hasattr', Load(), lineno=185, col_offset=24), [Attribute(Attribute(Name('self', Load(), lineno=185, col_offset=32), 'module', Load(), lineno=185, col_offset=32), 'heapify', Load(), lineno=185, col_offset=32), Str('func_code', lineno=185, col_offset=53)], [], None, None, lineno=185, col_offset=24)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8)], [], lineno=183, col_offset=4)], [], lineno=178, col_offset=0), ClassDef('TestHeapC', [Name('TestHeap', Load(), lineno=188, col_offset=16)], [Assign([Name('module', Store(), lineno=189, col_offset=4)], Name('c_heapq', Load(), lineno=189, col_offset=13), lineno=189, col_offset=4), FunctionDef('test_comparison_operator', arguments([Name('self', Param(), lineno=191, col_offset=33)], None, None, []), [FunctionDef('hsort', arguments([Name('data', Param(), lineno=193, col_offset=18), Name('comp', Param(), lineno=193, col_offset=24)], None, None, []), [Assign([Name('data', Store(), lineno=194, col_offset=12)], Call(Name('map', Load(), lineno=194, col_offset=19), [Name('comp', Load(), lineno=194, col_offset=23), Name('data', Load(), lineno=194, col_offset=29)], [], None, None, lineno=194, col_offset=19), lineno=194, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'module', Load(), lineno=195, col_offset=12), 'heapify', Load(), lineno=195, col_offset=12), [Name('data', Load(), lineno=195, col_offset=32)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12), Return(ListComp(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=196, col_offset=20), 'module', Load(), lineno=196, col_offset=20), 'heappop', Load(), lineno=196, col_offset=20), [Name('data', Load(), lineno=196, col_offset=40)], [], None, None, lineno=196, col_offset=20), 'x', Load(), lineno=196, col_offset=20), [comprehension(Name('i', Store(), lineno=196, col_offset=52), Call(Name('range', Load(), lineno=196, col_offset=57), [Call(Name('len', Load(), lineno=196, col_offset=63), [Name('data', Load(), lineno=196, col_offset=67)], [], None, None, lineno=196, col_offset=63)], [], None, None, lineno=196, col_offset=57), [])], lineno=196, col_offset=20), lineno=196, col_offset=12)], [], lineno=193, col_offset=8), ClassDef('LT', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=198, col_offset=25), Name('x', Param(), lineno=198, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=199, col_offset=16), 'x', Store(), lineno=199, col_offset=16)], Name('x', Load(), lineno=199, col_offset=25), lineno=199, col_offset=16)], [], lineno=198, col_offset=12), FunctionDef('__lt__', arguments([Name('self', Param(), lineno=200, col_offset=23), Name('other', Param(), lineno=200, col_offset=29)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=201, col_offset=23), 'x', Load(), lineno=201, col_offset=23), [Gt()], [Attribute(Name('other', Load(), lineno=201, col_offset=32), 'x', Load(), lineno=201, col_offset=32)], lineno=201, col_offset=23), lineno=201, col_offset=16)], [], lineno=200, col_offset=12)], [], lineno=197, col_offset=8), ClassDef('LE', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=203, col_offset=25), Name('x', Param(), lineno=203, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=204, col_offset=16), 'x', Store(), lineno=204, col_offset=16)], Name('x', Load(), lineno=204, col_offset=25), lineno=204, col_offset=16)], [], lineno=203, col_offset=12), FunctionDef('__le__', arguments([Name('self', Param(), lineno=205, col_offset=23), Name('other', Param(), lineno=205, col_offset=29)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=206, col_offset=23), 'x', Load(), lineno=206, col_offset=23), [GtE()], [Attribute(Name('other', Load(), lineno=206, col_offset=33), 'x', Load(), lineno=206, col_offset=33)], lineno=206, col_offset=23), lineno=206, col_offset=16)], [], lineno=205, col_offset=12)], [], lineno=202, col_offset=8), Assign([Name('data', Store(), lineno=207, col_offset=8)], ListComp(Call(Attribute(Name('random', Load(), lineno=207, col_offset=16), 'random', Load(), lineno=207, col_offset=16), [], [], None, None, lineno=207, col_offset=16), [comprehension(Name('i', Store(), lineno=207, col_offset=36), Call(Name('range', Load(), lineno=207, col_offset=41), [Num(100, lineno=207, col_offset=47)], [], None, None, lineno=207, col_offset=41), [])], lineno=207, col_offset=16), lineno=207, col_offset=8), Assign([Name('target', Store(), lineno=208, col_offset=8)], Call(Name('sorted', Load(), lineno=208, col_offset=17), [Name('data', Load(), lineno=208, col_offset=24)], [keyword('reverse', Name('True', Load(), lineno=208, col_offset=38))], None, None, lineno=208, col_offset=17), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Call(Name('hsort', Load(), lineno=209, col_offset=25), [Name('data', Load(), lineno=209, col_offset=31), Name('LT', Load(), lineno=209, col_offset=37)], [], None, None, lineno=209, col_offset=25), Name('target', Load(), lineno=209, col_offset=42)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertEqual', Load(), lineno=210, col_offset=8), [Call(Name('hsort', Load(), lineno=210, col_offset=25), [Name('data', Load(), lineno=210, col_offset=31), Name('LE', Load(), lineno=210, col_offset=37)], [], None, None, lineno=210, col_offset=25), Name('target', Load(), lineno=210, col_offset=42)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_accelerated', arguments([Name('self', Param(), lineno=214, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertTrue', Load(), lineno=215, col_offset=8), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=215, col_offset=24), 'modules', Load(), lineno=215, col_offset=24), Index(Str('heapq', lineno=215, col_offset=36)), Load(), lineno=215, col_offset=24), [Is()], [Attribute(Name('self', Load(), lineno=215, col_offset=48), 'module', Load(), lineno=215, col_offset=48)], lineno=215, col_offset=24)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertFalse', Load(), lineno=216, col_offset=8), [Call(Name('hasattr', Load(), lineno=216, col_offset=25), [Attribute(Attribute(Name('self', Load(), lineno=216, col_offset=33), 'module', Load(), lineno=216, col_offset=33), 'heapify', Load(), lineno=216, col_offset=33), Str('func_code', lineno=216, col_offset=54)], [], None, None, lineno=216, col_offset=25)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8)], [], lineno=214, col_offset=4)], [], lineno=188, col_offset=0), ClassDef('LenOnly', [], [Expr(Str('Dummy sequence class defining __len__ but not __getitem__.', lineno=222, col_offset=4), lineno=222, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=223, col_offset=16)], None, None, []), [Return(Num(10, lineno=224, col_offset=15), lineno=224, col_offset=8)], [], lineno=223, col_offset=4)], [], lineno=221, col_offset=0), ClassDef('GetOnly', [], [Expr(Str('Dummy sequence class defining __getitem__ but not __len__.', lineno=227, col_offset=4), lineno=227, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=228, col_offset=20), Name('ndx', Param(), lineno=228, col_offset=26)], None, None, []), [Return(Num(10, lineno=229, col_offset=15), lineno=229, col_offset=8)], [], lineno=228, col_offset=4)], [], lineno=226, col_offset=0), ClassDef('CmpErr', [], [Expr(Str('Dummy element that always raises an error during comparison', lineno=232, col_offset=4), lineno=232, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=233, col_offset=16), Name('other', Param(), lineno=233, col_offset=22)], None, None, []), [Raise(Name('ZeroDivisionError', Load(), lineno=234, col_offset=14), None, None, lineno=234, col_offset=8)], [], lineno=233, col_offset=4)], [], lineno=231, col_offset=0), FunctionDef('R', arguments([Name('seqn', Param(), lineno=236, col_offset=6)], None, None, []), [Expr(Str('Regular generator', lineno=237, col_offset=4), lineno=237, col_offset=4), For(Name('i', Store(), lineno=238, col_offset=8), Name('seqn', Load(), lineno=238, col_offset=13), [Expr(Yield(Name('i', Load(), lineno=239, col_offset=14), lineno=239, col_offset=8), lineno=239, col_offset=8)], [], lineno=238, col_offset=4)], [], lineno=236, col_offset=0), ClassDef('G', [], [Expr(Str('Sequence using __getitem__', lineno=242, col_offset=4), lineno=242, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=243, col_offset=17), Name('seqn', Param(), lineno=243, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=244, col_offset=8), 'seqn', Store(), lineno=244, col_offset=8)], Name('seqn', Load(), lineno=244, col_offset=20), lineno=244, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=245, col_offset=20), Name('i', Param(), lineno=245, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=246, col_offset=15), 'seqn', Load(), lineno=246, col_offset=15), Index(Name('i', Load(), lineno=246, col_offset=25)), Load(), lineno=246, col_offset=15), lineno=246, col_offset=8)], [], lineno=245, col_offset=4)], [], lineno=241, col_offset=0), ClassDef('I', [], [Expr(Str('Sequence using iterator protocol', lineno=249, col_offset=4), lineno=249, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=250, col_offset=17), Name('seqn', Param(), lineno=250, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=251, col_offset=8), 'seqn', Store(), lineno=251, col_offset=8)], Name('seqn', Load(), lineno=251, col_offset=20), lineno=251, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=252, col_offset=8), 'i', Store(), lineno=252, col_offset=8)], Num(0, lineno=252, col_offset=17), lineno=252, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=253, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=254, col_offset=15), lineno=254, col_offset=8)], [], lineno=253, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=255, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=256, col_offset=11), 'i', Load(), lineno=256, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=256, col_offset=21), [Attribute(Name('self', Load(), lineno=256, col_offset=25), 'seqn', Load(), lineno=256, col_offset=25)], [], None, None, lineno=256, col_offset=21)], lineno=256, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=256, col_offset=43), None, None, lineno=256, col_offset=37)], [], lineno=256, col_offset=8), Assign([Name('v', Store(), lineno=257, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=257, col_offset=12), 'seqn', Load(), lineno=257, col_offset=12), Index(Attribute(Name('self', Load(), lineno=257, col_offset=22), 'i', Load(), lineno=257, col_offset=22)), Load(), lineno=257, col_offset=12), lineno=257, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'i', Store(), lineno=258, col_offset=8), Add(), Num(1, lineno=258, col_offset=18), lineno=258, col_offset=8), Return(Name('v', Load(), lineno=259, col_offset=15), lineno=259, col_offset=8)], [], lineno=255, col_offset=4)], [], lineno=248, col_offset=0), ClassDef('Ig', [], [Expr(Str('Sequence using iterator protocol defined with a generator', lineno=262, col_offset=4), lineno=262, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=263, col_offset=17), Name('seqn', Param(), lineno=263, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=264, col_offset=8), 'seqn', Store(), lineno=264, col_offset=8)], Name('seqn', Load(), lineno=264, col_offset=20), lineno=264, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=265, col_offset=8), 'i', Store(), lineno=265, col_offset=8)], Num(0, lineno=265, col_offset=17), lineno=265, col_offset=8)], [], lineno=263, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=266, col_offset=17)], None, None, []), [For(Name('val', Store(), lineno=267, col_offset=12), Attribute(Name('self', Load(), lineno=267, col_offset=19), 'seqn', Load(), lineno=267, col_offset=19), [Expr(Yield(Name('val', Load(), lineno=268, col_offset=18), lineno=268, col_offset=12), lineno=268, col_offset=12)], [], lineno=267, col_offset=8)], [], lineno=266, col_offset=4)], [], lineno=261, col_offset=0), ClassDef('X', [], [Expr(Str('Missing __getitem__ and __iter__', lineno=271, col_offset=4), lineno=271, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=272, col_offset=17), Name('seqn', Param(), lineno=272, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=273, col_offset=8), 'seqn', Store(), lineno=273, col_offset=8)], Name('seqn', Load(), lineno=273, col_offset=20), lineno=273, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=274, col_offset=8), 'i', Store(), lineno=274, col_offset=8)], Num(0, lineno=274, col_offset=17), lineno=274, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=275, col_offset=13)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=276, col_offset=11), 'i', Load(), lineno=276, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=276, col_offset=21), [Attribute(Name('self', Load(), lineno=276, col_offset=25), 'seqn', Load(), lineno=276, col_offset=25)], [], None, None, lineno=276, col_offset=21)], lineno=276, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=276, col_offset=43), None, None, lineno=276, col_offset=37)], [], lineno=276, col_offset=8), Assign([Name('v', Store(), lineno=277, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=277, col_offset=12), 'seqn', Load(), lineno=277, col_offset=12), Index(Attribute(Name('self', Load(), lineno=277, col_offset=22), 'i', Load(), lineno=277, col_offset=22)), Load(), lineno=277, col_offset=12), lineno=277, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=278, col_offset=8), 'i', Store(), lineno=278, col_offset=8), Add(), Num(1, lineno=278, col_offset=18), lineno=278, col_offset=8), Return(Name('v', Load(), lineno=279, col_offset=15), lineno=279, col_offset=8)], [], lineno=275, col_offset=4)], [], lineno=270, col_offset=0), ClassDef('N', [], [Expr(Str('Iterator missing next()', lineno=282, col_offset=4), lineno=282, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=283, col_offset=17), Name('seqn', Param(), lineno=283, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=284, col_offset=8), 'seqn', Store(), lineno=284, col_offset=8)], Name('seqn', Load(), lineno=284, col_offset=20), lineno=284, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=285, col_offset=8), 'i', Store(), lineno=285, col_offset=8)], Num(0, lineno=285, col_offset=17), lineno=285, col_offset=8)], [], lineno=283, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=286, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=287, col_offset=15), lineno=287, col_offset=8)], [], lineno=286, col_offset=4)], [], lineno=281, col_offset=0), ClassDef('E', [], [Expr(Str('Test propagation of exceptions', lineno=290, col_offset=4), lineno=290, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=291, col_offset=17), Name('seqn', Param(), lineno=291, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=292, col_offset=8), 'seqn', Store(), lineno=292, col_offset=8)], Name('seqn', Load(), lineno=292, col_offset=20), lineno=292, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=293, col_offset=8), 'i', Store(), lineno=293, col_offset=8)], Num(0, lineno=293, col_offset=17), lineno=293, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=294, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=295, col_offset=15), lineno=295, col_offset=8)], [], lineno=294, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=296, col_offset=13)], None, None, []), [Expr(BinOp(Num(3, lineno=297, col_offset=8), FloorDiv(), Num(0, lineno=297, col_offset=13), lineno=297, col_offset=8), lineno=297, col_offset=8)], [], lineno=296, col_offset=4)], [], lineno=289, col_offset=0), ClassDef('S', [], [Expr(Str('Test immediate stop', lineno=300, col_offset=4), lineno=300, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=301, col_offset=17), Name('seqn', Param(), lineno=301, col_offset=23)], None, None, []), [Pass( lineno=302, col_offset=8)], [], lineno=301, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=303, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=304, col_offset=15), lineno=304, col_offset=8)], [], lineno=303, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=305, col_offset=13)], None, None, []), [Raise(Name('StopIteration', Load(), lineno=306, col_offset=14), None, None, lineno=306, col_offset=8)], [], lineno=305, col_offset=4)], [], lineno=299, col_offset=0), ImportFrom('itertools', [alias('chain', None), alias('imap', None)], 0, lineno=308, col_offset=0), FunctionDef('L', arguments([Name('seqn', Param(), lineno=309, col_offset=6)], None, None, []), [Expr(Str('Test multiple tiers of iterators', lineno=310, col_offset=4), lineno=310, col_offset=4), Return(Call(Name('chain', Load(), lineno=311, col_offset=11), [Call(Name('imap', Load(), lineno=311, col_offset=17), [Lambda(arguments([Name('x', Param(), lineno=311, col_offset=29)], None, None, []), Name('x', Load(), lineno=311, col_offset=31), lineno=311, col_offset=22), Call(Name('R', Load(), lineno=311, col_offset=34), [Call(Name('Ig', Load(), lineno=311, col_offset=36), [Call(Name('G', Load(), lineno=311, col_offset=39), [Name('seqn', Load(), lineno=311, col_offset=41)], [], None, None, lineno=311, col_offset=39)], [], None, None, lineno=311, col_offset=36)], [], None, None, lineno=311, col_offset=34)], [], None, None, lineno=311, col_offset=17)], [], None, None, lineno=311, col_offset=11), lineno=311, col_offset=4)], [], lineno=309, col_offset=0), ClassDef('TestErrorHandling', [Attribute(Name('unittest', Load(), lineno=313, col_offset=24), 'TestCase', Load(), lineno=313, col_offset=24)], [Assign([Name('module', Store(), lineno=315, col_offset=4)], Name('c_heapq', Load(), lineno=315, col_offset=13), lineno=315, col_offset=4), FunctionDef('test_non_sequence', arguments([Name('self', Param(), lineno=317, col_offset=26)], None, None, []), [For(Name('f', Store(), lineno=318, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=318, col_offset=18), 'module', Load(), lineno=318, col_offset=18), 'heapify', Load(), lineno=318, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=318, col_offset=39), 'module', Load(), lineno=318, col_offset=39), 'heappop', Load(), lineno=318, col_offset=39)], Load(), lineno=318, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=319, col_offset=12), 'assertRaises', Load(), lineno=319, col_offset=12), [Name('TypeError', Load(), lineno=319, col_offset=30), Name('f', Load(), lineno=319, col_offset=41), Num(10, lineno=319, col_offset=44)], [], None, None, lineno=319, col_offset=12), lineno=319, col_offset=12)], [], lineno=318, col_offset=8), For(Name('f', Store(), lineno=320, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=320, col_offset=18), 'module', Load(), lineno=320, col_offset=18), 'heappush', Load(), lineno=320, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=320, col_offset=40), 'module', Load(), lineno=320, col_offset=40), 'heapreplace', Load(), lineno=320, col_offset=40), Attribute(Attribute(Name('self', Load(), lineno=321, col_offset=18), 'module', Load(), lineno=321, col_offset=18), 'nlargest', Load(), lineno=321, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=321, col_offset=40), 'module', Load(), lineno=321, col_offset=40), 'nsmallest', Load(), lineno=321, col_offset=40)], Load(), lineno=320, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=12), 'assertRaises', Load(), lineno=322, col_offset=12), [Name('TypeError', Load(), lineno=322, col_offset=30), Name('f', Load(), lineno=322, col_offset=41), Num(10, lineno=322, col_offset=44), Num(10, lineno=322, col_offset=48)], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], [], lineno=320, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('test_len_only', arguments([Name('self', Param(), lineno=324, col_offset=22)], None, None, []), [For(Name('f', Store(), lineno=325, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=325, col_offset=18), 'module', Load(), lineno=325, col_offset=18), 'heapify', Load(), lineno=325, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=325, col_offset=39), 'module', Load(), lineno=325, col_offset=39), 'heappop', Load(), lineno=325, col_offset=39)], Load(), lineno=325, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=326, col_offset=12), 'assertRaises', Load(), lineno=326, col_offset=12), [Name('TypeError', Load(), lineno=326, col_offset=30), Name('f', Load(), lineno=326, col_offset=41), Call(Name('LenOnly', Load(), lineno=326, col_offset=44), [], [], None, None, lineno=326, col_offset=44)], [], None, None, lineno=326, col_offset=12), lineno=326, col_offset=12)], [], lineno=325, col_offset=8), For(Name('f', Store(), lineno=327, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=327, col_offset=18), 'module', Load(), lineno=327, col_offset=18), 'heappush', Load(), lineno=327, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=327, col_offset=40), 'module', Load(), lineno=327, col_offset=40), 'heapreplace', Load(), lineno=327, col_offset=40)], Load(), lineno=327, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=12), 'assertRaises', Load(), lineno=328, col_offset=12), [Name('TypeError', Load(), lineno=328, col_offset=30), Name('f', Load(), lineno=328, col_offset=41), Call(Name('LenOnly', Load(), lineno=328, col_offset=44), [], [], None, None, lineno=328, col_offset=44), Num(10, lineno=328, col_offset=55)], [], None, None, lineno=328, col_offset=12), lineno=328, col_offset=12)], [], lineno=327, col_offset=8), For(Name('f', Store(), lineno=329, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=329, col_offset=18), 'module', Load(), lineno=329, col_offset=18), 'nlargest', Load(), lineno=329, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=329, col_offset=40), 'module', Load(), lineno=329, col_offset=40), 'nsmallest', Load(), lineno=329, col_offset=40)], Load(), lineno=329, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=330, col_offset=12), 'assertRaises', Load(), lineno=330, col_offset=12), [Name('TypeError', Load(), lineno=330, col_offset=30), Name('f', Load(), lineno=330, col_offset=41), Num(2, lineno=330, col_offset=44), Call(Name('LenOnly', Load(), lineno=330, col_offset=47), [], [], None, None, lineno=330, col_offset=47)], [], None, None, lineno=330, col_offset=12), lineno=330, col_offset=12)], [], lineno=329, col_offset=8)], [], lineno=324, col_offset=4), FunctionDef('test_get_only', arguments([Name('self', Param(), lineno=332, col_offset=22)], None, None, []), [Assign([Name('seq', Store(), lineno=333, col_offset=8)], List([Call(Name('CmpErr', Load(), lineno=333, col_offset=15), [], [], None, None, lineno=333, col_offset=15), Call(Name('CmpErr', Load(), lineno=333, col_offset=25), [], [], None, None, lineno=333, col_offset=25), Call(Name('CmpErr', Load(), lineno=333, col_offset=35), [], [], None, None, lineno=333, col_offset=35)], Load(), lineno=333, col_offset=14), lineno=333, col_offset=8), For(Name('f', Store(), lineno=334, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=334, col_offset=18), 'module', Load(), lineno=334, col_offset=18), 'heapify', Load(), lineno=334, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=334, col_offset=39), 'module', Load(), lineno=334, col_offset=39), 'heappop', Load(), lineno=334, col_offset=39)], Load(), lineno=334, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=335, col_offset=12), 'assertRaises', Load(), lineno=335, col_offset=12), [Name('ZeroDivisionError', Load(), lineno=335, col_offset=30), Name('f', Load(), lineno=335, col_offset=49), Name('seq', Load(), lineno=335, col_offset=52)], [], None, None, lineno=335, col_offset=12), lineno=335, col_offset=12)], [], lineno=334, col_offset=8), For(Name('f', Store(), lineno=336, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=336, col_offset=18), 'module', Load(), lineno=336, col_offset=18), 'heappush', Load(), lineno=336, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=336, col_offset=40), 'module', Load(), lineno=336, col_offset=40), 'heapreplace', Load(), lineno=336, col_offset=40)], Load(), lineno=336, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=12), 'assertRaises', Load(), lineno=337, col_offset=12), [Name('ZeroDivisionError', Load(), lineno=337, col_offset=30), Name('f', Load(), lineno=337, col_offset=49), Name('seq', Load(), lineno=337, col_offset=52), Num(10, lineno=337, col_offset=57)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12)], [], lineno=336, col_offset=8), For(Name('f', Store(), lineno=338, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=338, col_offset=18), 'module', Load(), lineno=338, col_offset=18), 'nlargest', Load(), lineno=338, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=338, col_offset=40), 'module', Load(), lineno=338, col_offset=40), 'nsmallest', Load(), lineno=338, col_offset=40)], Load(), lineno=338, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=339, col_offset=12), 'assertRaises', Load(), lineno=339, col_offset=12), [Name('ZeroDivisionError', Load(), lineno=339, col_offset=30), Name('f', Load(), lineno=339, col_offset=49), Num(2, lineno=339, col_offset=52), Name('seq', Load(), lineno=339, col_offset=55)], [], None, None, lineno=339, col_offset=12), lineno=339, col_offset=12)], [], lineno=338, col_offset=8)], [], lineno=332, col_offset=4), FunctionDef('test_arg_parsing', arguments([Name('self', Param(), lineno=341, col_offset=25)], None, None, []), [For(Name('f', Store(), lineno=342, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=342, col_offset=18), 'module', Load(), lineno=342, col_offset=18), 'heapify', Load(), lineno=342, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=342, col_offset=39), 'module', Load(), lineno=342, col_offset=39), 'heappop', Load(), lineno=342, col_offset=39), Attribute(Attribute(Name('self', Load(), lineno=343, col_offset=18), 'module', Load(), lineno=343, col_offset=18), 'heappush', Load(), lineno=343, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=343, col_offset=40), 'module', Load(), lineno=343, col_offset=40), 'heapreplace', Load(), lineno=343, col_offset=40), Attribute(Attribute(Name('self', Load(), lineno=344, col_offset=18), 'module', Load(), lineno=344, col_offset=18), 'nlargest', Load(), lineno=344, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=344, col_offset=40), 'module', Load(), lineno=344, col_offset=40), 'nsmallest', Load(), lineno=344, col_offset=40)], Load(), lineno=342, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=345, col_offset=12), 'assertRaises', Load(), lineno=345, col_offset=12), [Name('TypeError', Load(), lineno=345, col_offset=30), Name('f', Load(), lineno=345, col_offset=41), Num(10, lineno=345, col_offset=44)], [], None, None, lineno=345, col_offset=12), lineno=345, col_offset=12)], [], lineno=342, col_offset=8)], [], lineno=341, col_offset=4), FunctionDef('test_iterable_args', arguments([Name('self', Param(), lineno=347, col_offset=27)], None, None, []), [For(Name('f', Store(), lineno=348, col_offset=12), Tuple([Attribute(Attribute(Name('self', Load(), lineno=348, col_offset=18), 'module', Load(), lineno=348, col_offset=18), 'nlargest', Load(), lineno=348, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=348, col_offset=40), 'module', Load(), lineno=348, col_offset=40), 'nsmallest', Load(), lineno=348, col_offset=40)], Load(), lineno=348, col_offset=18), [For(Name('s', Store(), lineno=349, col_offset=16), Tuple([Str('123', lineno=349, col_offset=22), Str('', lineno=349, col_offset=29), Call(Name('range', Load(), lineno=349, col_offset=33), [Num(1000, lineno=349, col_offset=39)], [], None, None, lineno=349, col_offset=33), Tuple([Str('do', lineno=349, col_offset=47), Num(1.2, lineno=349, col_offset=53)], Load(), lineno=349, col_offset=47), Call(Name('xrange', Load(), lineno=349, col_offset=59), [Num(2000, lineno=349, col_offset=66), Num(2200, lineno=349, col_offset=71), Num(5, lineno=349, col_offset=76)], [], None, None, lineno=349, col_offset=59)], Load(), lineno=349, col_offset=22), [For(Name('g', Store(), lineno=350, col_offset=20), Tuple([Name('G', Load(), lineno=350, col_offset=26), Name('I', Load(), lineno=350, col_offset=29), Name('Ig', Load(), lineno=350, col_offset=32), Name('L', Load(), lineno=350, col_offset=36), Name('R', Load(), lineno=350, col_offset=39)], Load(), lineno=350, col_offset=26), [With(Call(Attribute(Name('test_support', Load(), lineno=351, col_offset=25), 'check_py3k_warnings', Load(), lineno=351, col_offset=25), [Tuple([Str('comparing unequal types not supported', lineno=352, col_offset=29), Name('DeprecationWarning', Load(), lineno=353, col_offset=29)], Load(), lineno=352, col_offset=29)], [keyword('quiet', Name('True', Load(), lineno=353, col_offset=56))], None, None, lineno=351, col_offset=25), None, [Expr(Call(Attribute(Name('self', Load(), lineno=354, col_offset=24), 'assertEqual', Load(), lineno=354, col_offset=24), [Call(Name('f', Load(), lineno=354, col_offset=41), [Num(2, lineno=354, col_offset=43), Call(Name('g', Load(), lineno=354, col_offset=46), [Name('s', Load(), lineno=354, col_offset=48)], [], None, None, lineno=354, col_offset=46)], [], None, None, lineno=354, col_offset=41), Call(Name('f', Load(), lineno=354, col_offset=53), [Num(2, lineno=354, col_offset=55), Name('s', Load(), lineno=354, col_offset=57)], [], None, None, lineno=354, col_offset=53)], [], None, None, lineno=354, col_offset=24), lineno=354, col_offset=24)], lineno=351, col_offset=25)], [], lineno=350, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=16), 'assertEqual', Load(), lineno=355, col_offset=16), [Call(Name('f', Load(), lineno=355, col_offset=33), [Num(2, lineno=355, col_offset=35), Call(Name('S', Load(), lineno=355, col_offset=38), [Name('s', Load(), lineno=355, col_offset=40)], [], None, None, lineno=355, col_offset=38)], [], None, None, lineno=355, col_offset=33), List([], Load(), lineno=355, col_offset=45)], [], None, None, lineno=355, col_offset=16), lineno=355, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=16), 'assertRaises', Load(), lineno=356, col_offset=16), [Name('TypeError', Load(), lineno=356, col_offset=34), Name('f', Load(), lineno=356, col_offset=45), Num(2, lineno=356, col_offset=48), Call(Name('X', Load(), lineno=356, col_offset=51), [Name('s', Load(), lineno=356, col_offset=53)], [], None, None, lineno=356, col_offset=51)], [], None, None, lineno=356, col_offset=16), lineno=356, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=357, col_offset=16), 'assertRaises', Load(), lineno=357, col_offset=16), [Name('TypeError', Load(), lineno=357, col_offset=34), Name('f', Load(), lineno=357, col_offset=45), Num(2, lineno=357, col_offset=48), Call(Name('N', Load(), lineno=357, col_offset=51), [Name('s', Load(), lineno=357, col_offset=53)], [], None, None, lineno=357, col_offset=51)], [], None, None, lineno=357, col_offset=16), lineno=357, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=16), 'assertRaises', Load(), lineno=358, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=358, col_offset=34), Name('f', Load(), lineno=358, col_offset=53), Num(2, lineno=358, col_offset=56), Call(Name('E', Load(), lineno=358, col_offset=59), [Name('s', Load(), lineno=358, col_offset=61)], [], None, None, lineno=358, col_offset=59)], [], None, None, lineno=358, col_offset=16), lineno=358, col_offset=16)], [], lineno=349, col_offset=12)], [], lineno=348, col_offset=8)], [], lineno=347, col_offset=4)], [], lineno=313, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=364, col_offset=14)], None, None, [Name('None', Load(), lineno=364, col_offset=22)]), [Assign([Name('test_classes', Store(), lineno=365, col_offset=4)], List([Name('TestHeapPython', Load(), lineno=365, col_offset=20), Name('TestHeapC', Load(), lineno=365, col_offset=36), Name('TestErrorHandling', Load(), lineno=365, col_offset=47)], Load(), lineno=365, col_offset=19), lineno=365, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=366, col_offset=4), 'run_unittest', Load(), lineno=366, col_offset=4), [], [], Name('test_classes', Load(), lineno=366, col_offset=31), None, lineno=366, col_offset=4), lineno=366, col_offset=4), If(BoolOp(And(), [Name('verbose', Load(), lineno=369, col_offset=7), Call(Name('hasattr', Load(), lineno=369, col_offset=19), [Name('sys', Load(), lineno=369, col_offset=27), Str('gettotalrefcount', lineno=369, col_offset=32)], [], None, None, lineno=369, col_offset=19)], lineno=369, col_offset=7), [Import([alias('gc', None)], lineno=370, col_offset=8), Assign([Name('counts', Store(), lineno=371, col_offset=8)], BinOp(List([Name('None', Load(), lineno=371, col_offset=18)], Load(), lineno=371, col_offset=17), Mult(), Num(5, lineno=371, col_offset=26), lineno=371, col_offset=17), lineno=371, col_offset=8), For(Name('i', Store(), lineno=372, col_offset=12), Call(Name('xrange', Load(), lineno=372, col_offset=17), [Call(Name('len', Load(), lineno=372, col_offset=24), [Name('counts', Load(), lineno=372, col_offset=28)], [], None, None, lineno=372, col_offset=24)], [], None, None, lineno=372, col_offset=17), [Expr(Call(Attribute(Name('test_support', Load(), lineno=373, col_offset=12), 'run_unittest', Load(), lineno=373, col_offset=12), [], [], Name('test_classes', Load(), lineno=373, col_offset=39), None, lineno=373, col_offset=12), lineno=373, col_offset=12), Expr(Call(Attribute(Name('gc', Load(), lineno=374, col_offset=12), 'collect', Load(), lineno=374, col_offset=12), [], [], None, None, lineno=374, col_offset=12), lineno=374, col_offset=12), Assign([Subscript(Name('counts', Load(), lineno=375, col_offset=12), Index(Name('i', Load(), lineno=375, col_offset=19)), Store(), lineno=375, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=375, col_offset=24), 'gettotalrefcount', Load(), lineno=375, col_offset=24), [], [], None, None, lineno=375, col_offset=24), lineno=375, col_offset=12)], [], lineno=372, col_offset=8), Print(None, [Name('counts', Load(), lineno=376, col_offset=14)], True, lineno=376, col_offset=8)], [], lineno=369, col_offset=4)], [], lineno=364, col_offset=0), If(Compare(Name('__name__', Load(), lineno=378, col_offset=3), [Eq()], [Str('__main__', lineno=378, col_offset=15)], lineno=378, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=379, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=379, col_offset=22))], None, None, lineno=379, col_offset=4), lineno=379, col_offset=4)], [], lineno=378, col_offset=0)])
