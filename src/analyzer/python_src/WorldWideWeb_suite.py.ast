Module([Expr(Str('Suite WorldWideWeb suite, as defined in Spyglass spec.:\nLevel 1, version 1\n\nGenerated from /Volumes/Sap/Applications (Mac OS 9)/Netscape Communicator\xe2\x84\xa2 Folder/Netscape Communicator\xe2\x84\xa2\nAETE/AEUT resource version 1/0, language 0, script 0\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('WWW!', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('WorldWideWeb_suite_Events', [], [Assign([Name('_argmap_OpenURL', Store(), lineno=15, col_offset=4)], Dict([Str('to', lineno=16, col_offset=8), Str('toWindow', lineno=17, col_offset=8), Str('flags', lineno=18, col_offset=8), Str('post_data', lineno=19, col_offset=8), Str('post_type', lineno=20, col_offset=8), Str('progressApp', lineno=21, col_offset=8)], [Str('INTO', lineno=16, col_offset=15), Str('WIND', lineno=17, col_offset=21), Str('FLGS', lineno=18, col_offset=18), Str('POST', lineno=19, col_offset=22), Str('MIME', lineno=20, col_offset=22), Str('PROG', lineno=21, col_offset=24)], lineno=15, col_offset=22), lineno=15, col_offset=4), FunctionDef('OpenURL', arguments([Name('self', Param(), lineno=24, col_offset=16), Name('_object', Param(), lineno=24, col_offset=22), Name('_attributes', Param(), lineno=24, col_offset=31)], None, '_arguments', [Dict([], [], lineno=24, col_offset=43)]), [Expr(Str('OpenURL: Opens a URL. Allows for more options than GetURL event\n        Required argument: URL\n        Keyword argument to: file destination\n        Keyword argument toWindow: window iD\n        Keyword argument flags: Binary: any combination of 1, 2 and 4 is allowed: 1 and 2 mean force reload the document. 4 is ignored\n        Keyword argument post_data: Form posting data\n        Keyword argument post_type: MIME type of the posting data. Defaults to application/x-www-form-urlencoded\n        Keyword argument progressApp: Application that will display progress\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: ID of the loading window\n        ', lineno=35, col_offset=-1), lineno=35, col_offset=-1), Assign([Name('_code', Store(), lineno=36, col_offset=8)], Str('WWW!', lineno=36, col_offset=16), lineno=36, col_offset=8), Assign([Name('_subcode', Store(), lineno=37, col_offset=8)], Str('OURL', lineno=37, col_offset=19), lineno=37, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=39, col_offset=8), 'keysubst', Load(), lineno=39, col_offset=8), [Name('_arguments', Load(), lineno=39, col_offset=25), Attribute(Name('self', Load(), lineno=39, col_offset=37), '_argmap_OpenURL', Load(), lineno=39, col_offset=37)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=40, col_offset=8), Index(Str('----', lineno=40, col_offset=19)), Store(), lineno=40, col_offset=8)], Name('_object', Load(), lineno=40, col_offset=29), lineno=40, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=43, col_offset=8), Name('_arguments', Store(), lineno=43, col_offset=16), Name('_attributes', Store(), lineno=43, col_offset=28)], Store(), lineno=43, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=43, col_offset=42), 'send', Load(), lineno=43, col_offset=42), [Name('_code', Load(), lineno=43, col_offset=52), Name('_subcode', Load(), lineno=43, col_offset=59), Name('_arguments', Load(), lineno=44, col_offset=16), Name('_attributes', Load(), lineno=44, col_offset=28)], [], None, None, lineno=43, col_offset=42), lineno=43, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=45, col_offset=11), 'get', Load(), lineno=45, col_offset=11), [Str('errn', lineno=45, col_offset=26), Num(0, lineno=45, col_offset=34)], [], None, None, lineno=45, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=46, col_offset=18), 'Error', Load(), lineno=46, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=46, col_offset=33), 'decodeerror', Load(), lineno=46, col_offset=33), [Name('_arguments', Load(), lineno=46, col_offset=53)], [], None, None, lineno=46, col_offset=33), None, lineno=46, col_offset=12)], [], lineno=45, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=48, col_offset=11), 'has_key', Load(), lineno=48, col_offset=11), [Str('----', lineno=48, col_offset=30)], [], None, None, lineno=48, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=49, col_offset=19), Index(Str('----', lineno=49, col_offset=30)), Load(), lineno=49, col_offset=19), lineno=49, col_offset=12)], [], lineno=48, col_offset=8)], [], lineno=24, col_offset=4), Assign([Name('_argmap_ShowFile', Store(), lineno=51, col_offset=4)], Dict([Str('MIME_type', lineno=52, col_offset=8), Str('Window_ID', lineno=53, col_offset=8), Str('URL', lineno=54, col_offset=8)], [Str('MIME', lineno=52, col_offset=22), Str('WIND', lineno=53, col_offset=22), Str('URL ', lineno=54, col_offset=16)], lineno=51, col_offset=23), lineno=51, col_offset=4), FunctionDef('ShowFile', arguments([Name('self', Param(), lineno=57, col_offset=17), Name('_object', Param(), lineno=57, col_offset=23), Name('_attributes', Param(), lineno=57, col_offset=32)], None, '_arguments', [Dict([], [], lineno=57, col_offset=44)]), [Expr(Str('ShowFile: Similar to OpenDocuments, except that it specifies the parent URL, and MIME type of the file\n        Required argument: File to open\n        Keyword argument MIME_type: MIME type\n        Keyword argument Window_ID: Window to open the file in\n        Keyword argument URL: Use this as a base URL\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Window ID of the loaded window. 0 means ShowFile failed, FFFFFFF means that data was not appropriate type to display in the browser.\n        ', lineno=65, col_offset=-1), lineno=65, col_offset=-1), Assign([Name('_code', Store(), lineno=66, col_offset=8)], Str('WWW!', lineno=66, col_offset=16), lineno=66, col_offset=8), Assign([Name('_subcode', Store(), lineno=67, col_offset=8)], Str('SHWF', lineno=67, col_offset=19), lineno=67, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=69, col_offset=8), 'keysubst', Load(), lineno=69, col_offset=8), [Name('_arguments', Load(), lineno=69, col_offset=25), Attribute(Name('self', Load(), lineno=69, col_offset=37), '_argmap_ShowFile', Load(), lineno=69, col_offset=37)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=70, col_offset=8), Index(Str('----', lineno=70, col_offset=19)), Store(), lineno=70, col_offset=8)], Name('_object', Load(), lineno=70, col_offset=29), lineno=70, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=73, col_offset=8), Name('_arguments', Store(), lineno=73, col_offset=16), Name('_attributes', Store(), lineno=73, col_offset=28)], Store(), lineno=73, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=73, col_offset=42), 'send', Load(), lineno=73, col_offset=42), [Name('_code', Load(), lineno=73, col_offset=52), Name('_subcode', Load(), lineno=73, col_offset=59), Name('_arguments', Load(), lineno=74, col_offset=16), Name('_attributes', Load(), lineno=74, col_offset=28)], [], None, None, lineno=73, col_offset=42), lineno=73, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=75, col_offset=11), 'get', Load(), lineno=75, col_offset=11), [Str('errn', lineno=75, col_offset=26), Num(0, lineno=75, col_offset=34)], [], None, None, lineno=75, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=76, col_offset=18), 'Error', Load(), lineno=76, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=76, col_offset=33), 'decodeerror', Load(), lineno=76, col_offset=33), [Name('_arguments', Load(), lineno=76, col_offset=53)], [], None, None, lineno=76, col_offset=33), None, lineno=76, col_offset=12)], [], lineno=75, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=78, col_offset=11), 'has_key', Load(), lineno=78, col_offset=11), [Str('----', lineno=78, col_offset=30)], [], None, None, lineno=78, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=79, col_offset=19), Index(Str('----', lineno=79, col_offset=30)), Load(), lineno=79, col_offset=19), lineno=79, col_offset=12)], [], lineno=78, col_offset=8)], [], lineno=57, col_offset=4), Assign([Name('_argmap_cancel_progress', Store(), lineno=81, col_offset=4)], Dict([Str('in_window', lineno=82, col_offset=8)], [Str('WIND', lineno=82, col_offset=22)], lineno=81, col_offset=30), lineno=81, col_offset=4), FunctionDef('cancel_progress', arguments([Name('self', Param(), lineno=85, col_offset=24), Name('_object', Param(), lineno=85, col_offset=30), Name('_attributes', Param(), lineno=85, col_offset=44)], None, '_arguments', [Name('None', Load(), lineno=85, col_offset=38), Dict([], [], lineno=85, col_offset=56)]), [Expr(Str('cancel progress: Interrupts the download of the document in the given window\n        Required argument: progress ID, obtained from the progress app\n        Keyword argument in_window: window ID of the progress to cancel\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=90, col_offset=-1), lineno=90, col_offset=-1), Assign([Name('_code', Store(), lineno=91, col_offset=8)], Str('WWW!', lineno=91, col_offset=16), lineno=91, col_offset=8), Assign([Name('_subcode', Store(), lineno=92, col_offset=8)], Str('CNCL', lineno=92, col_offset=19), lineno=92, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=94, col_offset=8), 'keysubst', Load(), lineno=94, col_offset=8), [Name('_arguments', Load(), lineno=94, col_offset=25), Attribute(Name('self', Load(), lineno=94, col_offset=37), '_argmap_cancel_progress', Load(), lineno=94, col_offset=37)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=95, col_offset=8), Index(Str('----', lineno=95, col_offset=19)), Store(), lineno=95, col_offset=8)], Name('_object', Load(), lineno=95, col_offset=29), lineno=95, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=98, col_offset=8), Name('_arguments', Store(), lineno=98, col_offset=16), Name('_attributes', Store(), lineno=98, col_offset=28)], Store(), lineno=98, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=98, col_offset=42), 'send', Load(), lineno=98, col_offset=42), [Name('_code', Load(), lineno=98, col_offset=52), Name('_subcode', Load(), lineno=98, col_offset=59), Name('_arguments', Load(), lineno=99, col_offset=16), Name('_attributes', Load(), lineno=99, col_offset=28)], [], None, None, lineno=98, col_offset=42), lineno=98, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=100, col_offset=11), 'get', Load(), lineno=100, col_offset=11), [Str('errn', lineno=100, col_offset=26), Num(0, lineno=100, col_offset=34)], [], None, None, lineno=100, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=101, col_offset=18), 'Error', Load(), lineno=101, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=101, col_offset=33), 'decodeerror', Load(), lineno=101, col_offset=33), [Name('_arguments', Load(), lineno=101, col_offset=53)], [], None, None, lineno=101, col_offset=33), None, lineno=101, col_offset=12)], [], lineno=100, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=103, col_offset=11), 'has_key', Load(), lineno=103, col_offset=11), [Str('----', lineno=103, col_offset=30)], [], None, None, lineno=103, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=104, col_offset=19), Index(Str('----', lineno=104, col_offset=30)), Load(), lineno=104, col_offset=19), lineno=104, col_offset=12)], [], lineno=103, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('find_URL', arguments([Name('self', Param(), lineno=106, col_offset=17), Name('_object', Param(), lineno=106, col_offset=23), Name('_attributes', Param(), lineno=106, col_offset=32)], None, '_arguments', [Dict([], [], lineno=106, col_offset=44)]), [Expr(Str('find URL: If the file was downloaded by Netscape, you can call FindURL to find out the URL used to download the file.\n        Required argument: File spec\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: The URL\n        ', lineno=111, col_offset=-1), lineno=111, col_offset=-1), Assign([Name('_code', Store(), lineno=112, col_offset=8)], Str('WWW!', lineno=112, col_offset=16), lineno=112, col_offset=8), Assign([Name('_subcode', Store(), lineno=113, col_offset=8)], Str('FURL', lineno=113, col_offset=19), lineno=113, col_offset=8), If(Name('_arguments', Load(), lineno=115, col_offset=11), [Raise(Name('TypeError', Load(), lineno=115, col_offset=29), Str('No optional args expected', lineno=115, col_offset=40), None, lineno=115, col_offset=23)], [], lineno=115, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=116, col_offset=8), Index(Str('----', lineno=116, col_offset=19)), Store(), lineno=116, col_offset=8)], Name('_object', Load(), lineno=116, col_offset=29), lineno=116, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=119, col_offset=8), Name('_arguments', Store(), lineno=119, col_offset=16), Name('_attributes', Store(), lineno=119, col_offset=28)], Store(), lineno=119, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=119, col_offset=42), 'send', Load(), lineno=119, col_offset=42), [Name('_code', Load(), lineno=119, col_offset=52), Name('_subcode', Load(), lineno=119, col_offset=59), Name('_arguments', Load(), lineno=120, col_offset=16), Name('_attributes', Load(), lineno=120, col_offset=28)], [], None, None, lineno=119, col_offset=42), lineno=119, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=121, col_offset=11), 'get', Load(), lineno=121, col_offset=11), [Str('errn', lineno=121, col_offset=26), Num(0, lineno=121, col_offset=34)], [], None, None, lineno=121, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=122, col_offset=18), 'Error', Load(), lineno=122, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=122, col_offset=33), 'decodeerror', Load(), lineno=122, col_offset=33), [Name('_arguments', Load(), lineno=122, col_offset=53)], [], None, None, lineno=122, col_offset=33), None, lineno=122, col_offset=12)], [], lineno=121, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=124, col_offset=11), 'has_key', Load(), lineno=124, col_offset=11), [Str('----', lineno=124, col_offset=30)], [], None, None, lineno=124, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=125, col_offset=19), Index(Str('----', lineno=125, col_offset=30)), Load(), lineno=125, col_offset=19), lineno=125, col_offset=12)], [], lineno=124, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('get_window_info', arguments([Name('self', Param(), lineno=127, col_offset=24), Name('_object', Param(), lineno=127, col_offset=30), Name('_attributes', Param(), lineno=127, col_offset=44)], None, '_arguments', [Name('None', Load(), lineno=127, col_offset=38), Dict([], [], lineno=127, col_offset=56)]), [Expr(Str("get window info: Returns the information about the window as a list. Currently the list contains the window title and the URL. You can get the same information using standard Apple Event GetProperty.\n        Required argument: window ID\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'list'\n        ", lineno=132, col_offset=-1), lineno=132, col_offset=-1), Assign([Name('_code', Store(), lineno=133, col_offset=8)], Str('WWW!', lineno=133, col_offset=16), lineno=133, col_offset=8), Assign([Name('_subcode', Store(), lineno=134, col_offset=8)], Str('WNFO', lineno=134, col_offset=19), lineno=134, col_offset=8), If(Name('_arguments', Load(), lineno=136, col_offset=11), [Raise(Name('TypeError', Load(), lineno=136, col_offset=29), Str('No optional args expected', lineno=136, col_offset=40), None, lineno=136, col_offset=23)], [], lineno=136, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=137, col_offset=8), Index(Str('----', lineno=137, col_offset=19)), Store(), lineno=137, col_offset=8)], Name('_object', Load(), lineno=137, col_offset=29), lineno=137, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=140, col_offset=8), Name('_arguments', Store(), lineno=140, col_offset=16), Name('_attributes', Store(), lineno=140, col_offset=28)], Store(), lineno=140, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=140, col_offset=42), 'send', Load(), lineno=140, col_offset=42), [Name('_code', Load(), lineno=140, col_offset=52), Name('_subcode', Load(), lineno=140, col_offset=59), Name('_arguments', Load(), lineno=141, col_offset=16), Name('_attributes', Load(), lineno=141, col_offset=28)], [], None, None, lineno=140, col_offset=42), lineno=140, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=142, col_offset=11), 'get', Load(), lineno=142, col_offset=11), [Str('errn', lineno=142, col_offset=26), Num(0, lineno=142, col_offset=34)], [], None, None, lineno=142, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=143, col_offset=18), 'Error', Load(), lineno=143, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=143, col_offset=33), 'decodeerror', Load(), lineno=143, col_offset=33), [Name('_arguments', Load(), lineno=143, col_offset=53)], [], None, None, lineno=143, col_offset=33), None, lineno=143, col_offset=12)], [], lineno=142, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=145, col_offset=11), 'has_key', Load(), lineno=145, col_offset=11), [Str('----', lineno=145, col_offset=30)], [], None, None, lineno=145, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=146, col_offset=19), Index(Str('----', lineno=146, col_offset=30)), Load(), lineno=146, col_offset=19), lineno=146, col_offset=12)], [], lineno=145, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('list_windows', arguments([Name('self', Param(), lineno=148, col_offset=21), Name('_no_object', Param(), lineno=148, col_offset=27), Name('_attributes', Param(), lineno=148, col_offset=44)], None, '_arguments', [Name('None', Load(), lineno=148, col_offset=38), Dict([], [], lineno=148, col_offset=56)]), [Expr(Str('list windows: Lists the IDs of all the hypertext windows\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: List of unique IDs of all the hypertext windows\n        ', lineno=152, col_offset=-1), lineno=152, col_offset=-1), Assign([Name('_code', Store(), lineno=153, col_offset=8)], Str('WWW!', lineno=153, col_offset=16), lineno=153, col_offset=8), Assign([Name('_subcode', Store(), lineno=154, col_offset=8)], Str('LSTW', lineno=154, col_offset=19), lineno=154, col_offset=8), If(Name('_arguments', Load(), lineno=156, col_offset=11), [Raise(Name('TypeError', Load(), lineno=156, col_offset=29), Str('No optional args expected', lineno=156, col_offset=40), None, lineno=156, col_offset=23)], [], lineno=156, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=157, col_offset=11), [IsNot()], [Name('None', Load(), lineno=157, col_offset=29)], lineno=157, col_offset=11), [Raise(Name('TypeError', Load(), lineno=157, col_offset=41), Str('No direct arg expected', lineno=157, col_offset=52), None, lineno=157, col_offset=35)], [], lineno=157, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=160, col_offset=8), Name('_arguments', Store(), lineno=160, col_offset=16), Name('_attributes', Store(), lineno=160, col_offset=28)], Store(), lineno=160, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=160, col_offset=42), 'send', Load(), lineno=160, col_offset=42), [Name('_code', Load(), lineno=160, col_offset=52), Name('_subcode', Load(), lineno=160, col_offset=59), Name('_arguments', Load(), lineno=161, col_offset=16), Name('_attributes', Load(), lineno=161, col_offset=28)], [], None, None, lineno=160, col_offset=42), lineno=160, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=162, col_offset=11), 'get', Load(), lineno=162, col_offset=11), [Str('errn', lineno=162, col_offset=26), Num(0, lineno=162, col_offset=34)], [], None, None, lineno=162, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=163, col_offset=18), 'Error', Load(), lineno=163, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=163, col_offset=33), 'decodeerror', Load(), lineno=163, col_offset=33), [Name('_arguments', Load(), lineno=163, col_offset=53)], [], None, None, lineno=163, col_offset=33), None, lineno=163, col_offset=12)], [], lineno=162, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=165, col_offset=11), 'has_key', Load(), lineno=165, col_offset=11), [Str('----', lineno=165, col_offset=30)], [], None, None, lineno=165, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=166, col_offset=19), Index(Str('----', lineno=166, col_offset=30)), Load(), lineno=166, col_offset=19), lineno=166, col_offset=12)], [], lineno=165, col_offset=8)], [], lineno=148, col_offset=4), Assign([Name('_argmap_parse_anchor', Store(), lineno=168, col_offset=4)], Dict([Str('relative_to', lineno=169, col_offset=8)], [Str('RELA', lineno=169, col_offset=24)], lineno=168, col_offset=27), lineno=168, col_offset=4), FunctionDef('parse_anchor', arguments([Name('self', Param(), lineno=172, col_offset=21), Name('_object', Param(), lineno=172, col_offset=27), Name('_attributes', Param(), lineno=172, col_offset=36)], None, '_arguments', [Dict([], [], lineno=172, col_offset=48)]), [Expr(Str('parse anchor: Resolves the relative URL\n        Required argument: Main URL\n        Keyword argument relative_to: Relative URL\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Parsed  URL\n        ', lineno=178, col_offset=-1), lineno=178, col_offset=-1), Assign([Name('_code', Store(), lineno=179, col_offset=8)], Str('WWW!', lineno=179, col_offset=16), lineno=179, col_offset=8), Assign([Name('_subcode', Store(), lineno=180, col_offset=8)], Str('PRSA', lineno=180, col_offset=19), lineno=180, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=182, col_offset=8), 'keysubst', Load(), lineno=182, col_offset=8), [Name('_arguments', Load(), lineno=182, col_offset=25), Attribute(Name('self', Load(), lineno=182, col_offset=37), '_argmap_parse_anchor', Load(), lineno=182, col_offset=37)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=183, col_offset=8), Index(Str('----', lineno=183, col_offset=19)), Store(), lineno=183, col_offset=8)], Name('_object', Load(), lineno=183, col_offset=29), lineno=183, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=186, col_offset=8), Name('_arguments', Store(), lineno=186, col_offset=16), Name('_attributes', Store(), lineno=186, col_offset=28)], Store(), lineno=186, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=186, col_offset=42), 'send', Load(), lineno=186, col_offset=42), [Name('_code', Load(), lineno=186, col_offset=52), Name('_subcode', Load(), lineno=186, col_offset=59), Name('_arguments', Load(), lineno=187, col_offset=16), Name('_attributes', Load(), lineno=187, col_offset=28)], [], None, None, lineno=186, col_offset=42), lineno=186, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=188, col_offset=11), 'get', Load(), lineno=188, col_offset=11), [Str('errn', lineno=188, col_offset=26), Num(0, lineno=188, col_offset=34)], [], None, None, lineno=188, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=189, col_offset=18), 'Error', Load(), lineno=189, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=189, col_offset=33), 'decodeerror', Load(), lineno=189, col_offset=33), [Name('_arguments', Load(), lineno=189, col_offset=53)], [], None, None, lineno=189, col_offset=33), None, lineno=189, col_offset=12)], [], lineno=188, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=191, col_offset=11), 'has_key', Load(), lineno=191, col_offset=11), [Str('----', lineno=191, col_offset=30)], [], None, None, lineno=191, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=192, col_offset=19), Index(Str('----', lineno=192, col_offset=30)), Load(), lineno=192, col_offset=19), lineno=192, col_offset=12)], [], lineno=191, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('register_URL_echo', arguments([Name('self', Param(), lineno=194, col_offset=26), Name('_object', Param(), lineno=194, col_offset=32), Name('_attributes', Param(), lineno=194, col_offset=46)], None, '_arguments', [Name('None', Load(), lineno=194, col_offset=40), Dict([], [], lineno=194, col_offset=58)]), [Expr(Str('register URL echo: Registers the \xd2echo\xd3 application. Each download from now on will be echoed to this application.\n        Required argument: Application signature\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=198, col_offset=-1), lineno=198, col_offset=-1), Assign([Name('_code', Store(), lineno=199, col_offset=8)], Str('WWW!', lineno=199, col_offset=16), lineno=199, col_offset=8), Assign([Name('_subcode', Store(), lineno=200, col_offset=8)], Str('RGUE', lineno=200, col_offset=19), lineno=200, col_offset=8), If(Name('_arguments', Load(), lineno=202, col_offset=11), [Raise(Name('TypeError', Load(), lineno=202, col_offset=29), Str('No optional args expected', lineno=202, col_offset=40), None, lineno=202, col_offset=23)], [], lineno=202, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=203, col_offset=8), Index(Str('----', lineno=203, col_offset=19)), Store(), lineno=203, col_offset=8)], Name('_object', Load(), lineno=203, col_offset=29), lineno=203, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=206, col_offset=8), Name('_arguments', Store(), lineno=206, col_offset=16), Name('_attributes', Store(), lineno=206, col_offset=28)], Store(), lineno=206, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=206, col_offset=42), 'send', Load(), lineno=206, col_offset=42), [Name('_code', Load(), lineno=206, col_offset=52), Name('_subcode', Load(), lineno=206, col_offset=59), Name('_arguments', Load(), lineno=207, col_offset=16), Name('_attributes', Load(), lineno=207, col_offset=28)], [], None, None, lineno=206, col_offset=42), lineno=206, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=208, col_offset=11), 'get', Load(), lineno=208, col_offset=11), [Str('errn', lineno=208, col_offset=26), Num(0, lineno=208, col_offset=34)], [], None, None, lineno=208, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=209, col_offset=18), 'Error', Load(), lineno=209, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=209, col_offset=33), 'decodeerror', Load(), lineno=209, col_offset=33), [Name('_arguments', Load(), lineno=209, col_offset=53)], [], None, None, lineno=209, col_offset=33), None, lineno=209, col_offset=12)], [], lineno=208, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=211, col_offset=11), 'has_key', Load(), lineno=211, col_offset=11), [Str('----', lineno=211, col_offset=30)], [], None, None, lineno=211, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=212, col_offset=19), Index(Str('----', lineno=212, col_offset=30)), Load(), lineno=212, col_offset=19), lineno=212, col_offset=12)], [], lineno=211, col_offset=8)], [], lineno=194, col_offset=4), Assign([Name('_argmap_register_protocol', Store(), lineno=214, col_offset=4)], Dict([Str('for_protocol', lineno=215, col_offset=8)], [Str('PROT', lineno=215, col_offset=25)], lineno=214, col_offset=32), lineno=214, col_offset=4), FunctionDef('register_protocol', arguments([Name('self', Param(), lineno=218, col_offset=26), Name('_object', Param(), lineno=218, col_offset=32), Name('_attributes', Param(), lineno=218, col_offset=46)], None, '_arguments', [Name('None', Load(), lineno=218, col_offset=40), Dict([], [], lineno=218, col_offset=58)]), [Expr(Str('register protocol: Registers application as a \xd2handler\xd3 for this protocol with a given prefix. The handler will receive \xd2OpenURL\xd3, or if that fails, \xd2GetURL\xd3 event.\n        Required argument: Application sig\n        Keyword argument for_protocol: protocol prefix: \xd2finger:\xd3, \xd2file\xd3,\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: TRUE if registration has been successful\n        ', lineno=224, col_offset=-1), lineno=224, col_offset=-1), Assign([Name('_code', Store(), lineno=225, col_offset=8)], Str('WWW!', lineno=225, col_offset=16), lineno=225, col_offset=8), Assign([Name('_subcode', Store(), lineno=226, col_offset=8)], Str('RGPR', lineno=226, col_offset=19), lineno=226, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=228, col_offset=8), 'keysubst', Load(), lineno=228, col_offset=8), [Name('_arguments', Load(), lineno=228, col_offset=25), Attribute(Name('self', Load(), lineno=228, col_offset=37), '_argmap_register_protocol', Load(), lineno=228, col_offset=37)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=229, col_offset=8), Index(Str('----', lineno=229, col_offset=19)), Store(), lineno=229, col_offset=8)], Name('_object', Load(), lineno=229, col_offset=29), lineno=229, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=232, col_offset=8), Name('_arguments', Store(), lineno=232, col_offset=16), Name('_attributes', Store(), lineno=232, col_offset=28)], Store(), lineno=232, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=232, col_offset=42), 'send', Load(), lineno=232, col_offset=42), [Name('_code', Load(), lineno=232, col_offset=52), Name('_subcode', Load(), lineno=232, col_offset=59), Name('_arguments', Load(), lineno=233, col_offset=16), Name('_attributes', Load(), lineno=233, col_offset=28)], [], None, None, lineno=232, col_offset=42), lineno=232, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=234, col_offset=11), 'get', Load(), lineno=234, col_offset=11), [Str('errn', lineno=234, col_offset=26), Num(0, lineno=234, col_offset=34)], [], None, None, lineno=234, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=235, col_offset=18), 'Error', Load(), lineno=235, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=235, col_offset=33), 'decodeerror', Load(), lineno=235, col_offset=33), [Name('_arguments', Load(), lineno=235, col_offset=53)], [], None, None, lineno=235, col_offset=33), None, lineno=235, col_offset=12)], [], lineno=234, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=237, col_offset=11), 'has_key', Load(), lineno=237, col_offset=11), [Str('----', lineno=237, col_offset=30)], [], None, None, lineno=237, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=238, col_offset=19), Index(Str('----', lineno=238, col_offset=30)), Load(), lineno=238, col_offset=19), lineno=238, col_offset=12)], [], lineno=237, col_offset=8)], [], lineno=218, col_offset=4), Assign([Name('_argmap_register_viewer', Store(), lineno=240, col_offset=4)], Dict([Str('MIME_type', lineno=241, col_offset=8), Str('with_file_type', lineno=242, col_offset=8)], [Str('MIME', lineno=241, col_offset=22), Str('FTYP', lineno=242, col_offset=27)], lineno=240, col_offset=30), lineno=240, col_offset=4), FunctionDef('register_viewer', arguments([Name('self', Param(), lineno=245, col_offset=24), Name('_object', Param(), lineno=245, col_offset=30), Name('_attributes', Param(), lineno=245, col_offset=39)], None, '_arguments', [Dict([], [], lineno=245, col_offset=51)]), [Expr(Str('register viewer: Registers an application as a \xd4special\xd5 viewer for this MIME type. The application will be launched with ViewDoc events\n        Required argument: Application sig\n        Keyword argument MIME_type: MIME type viewer is registering for\n        Keyword argument with_file_type: Mac file type for the downloaded files\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: TRUE if registration has been successful\n        ', lineno=252, col_offset=-1), lineno=252, col_offset=-1), Assign([Name('_code', Store(), lineno=253, col_offset=8)], Str('WWW!', lineno=253, col_offset=16), lineno=253, col_offset=8), Assign([Name('_subcode', Store(), lineno=254, col_offset=8)], Str('RGVW', lineno=254, col_offset=19), lineno=254, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=256, col_offset=8), 'keysubst', Load(), lineno=256, col_offset=8), [Name('_arguments', Load(), lineno=256, col_offset=25), Attribute(Name('self', Load(), lineno=256, col_offset=37), '_argmap_register_viewer', Load(), lineno=256, col_offset=37)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=257, col_offset=8), Index(Str('----', lineno=257, col_offset=19)), Store(), lineno=257, col_offset=8)], Name('_object', Load(), lineno=257, col_offset=29), lineno=257, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=260, col_offset=8), Name('_arguments', Store(), lineno=260, col_offset=16), Name('_attributes', Store(), lineno=260, col_offset=28)], Store(), lineno=260, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=260, col_offset=42), 'send', Load(), lineno=260, col_offset=42), [Name('_code', Load(), lineno=260, col_offset=52), Name('_subcode', Load(), lineno=260, col_offset=59), Name('_arguments', Load(), lineno=261, col_offset=16), Name('_attributes', Load(), lineno=261, col_offset=28)], [], None, None, lineno=260, col_offset=42), lineno=260, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=262, col_offset=11), 'get', Load(), lineno=262, col_offset=11), [Str('errn', lineno=262, col_offset=26), Num(0, lineno=262, col_offset=34)], [], None, None, lineno=262, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=263, col_offset=18), 'Error', Load(), lineno=263, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=263, col_offset=33), 'decodeerror', Load(), lineno=263, col_offset=33), [Name('_arguments', Load(), lineno=263, col_offset=53)], [], None, None, lineno=263, col_offset=33), None, lineno=263, col_offset=12)], [], lineno=262, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=265, col_offset=11), 'has_key', Load(), lineno=265, col_offset=11), [Str('----', lineno=265, col_offset=30)], [], None, None, lineno=265, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=266, col_offset=19), Index(Str('----', lineno=266, col_offset=30)), Load(), lineno=266, col_offset=19), lineno=266, col_offset=12)], [], lineno=265, col_offset=8)], [], lineno=245, col_offset=4), Assign([Name('_argmap_register_window_close', Store(), lineno=268, col_offset=4)], Dict([Str('for_window', lineno=269, col_offset=8)], [Str('WIND', lineno=269, col_offset=23)], lineno=268, col_offset=36), lineno=268, col_offset=4), FunctionDef('register_window_close', arguments([Name('self', Param(), lineno=272, col_offset=30), Name('_object', Param(), lineno=272, col_offset=36), Name('_attributes', Param(), lineno=272, col_offset=50)], None, '_arguments', [Name('None', Load(), lineno=272, col_offset=44), Dict([], [], lineno=272, col_offset=62)]), [Expr(Str('register window close: Netscape will notify registered application when this window closes\n        Required argument: Application signature\n        Keyword argument for_window: window ID\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: true if successful\n        ', lineno=278, col_offset=-1), lineno=278, col_offset=-1), Assign([Name('_code', Store(), lineno=279, col_offset=8)], Str('WWW!', lineno=279, col_offset=16), lineno=279, col_offset=8), Assign([Name('_subcode', Store(), lineno=280, col_offset=8)], Str('RGWC', lineno=280, col_offset=19), lineno=280, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=282, col_offset=8), 'keysubst', Load(), lineno=282, col_offset=8), [Name('_arguments', Load(), lineno=282, col_offset=25), Attribute(Name('self', Load(), lineno=282, col_offset=37), '_argmap_register_window_close', Load(), lineno=282, col_offset=37)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=283, col_offset=8), Index(Str('----', lineno=283, col_offset=19)), Store(), lineno=283, col_offset=8)], Name('_object', Load(), lineno=283, col_offset=29), lineno=283, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=286, col_offset=8), Name('_arguments', Store(), lineno=286, col_offset=16), Name('_attributes', Store(), lineno=286, col_offset=28)], Store(), lineno=286, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=286, col_offset=42), 'send', Load(), lineno=286, col_offset=42), [Name('_code', Load(), lineno=286, col_offset=52), Name('_subcode', Load(), lineno=286, col_offset=59), Name('_arguments', Load(), lineno=287, col_offset=16), Name('_attributes', Load(), lineno=287, col_offset=28)], [], None, None, lineno=286, col_offset=42), lineno=286, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=288, col_offset=11), 'get', Load(), lineno=288, col_offset=11), [Str('errn', lineno=288, col_offset=26), Num(0, lineno=288, col_offset=34)], [], None, None, lineno=288, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=289, col_offset=18), 'Error', Load(), lineno=289, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=289, col_offset=33), 'decodeerror', Load(), lineno=289, col_offset=33), [Name('_arguments', Load(), lineno=289, col_offset=53)], [], None, None, lineno=289, col_offset=33), None, lineno=289, col_offset=12)], [], lineno=288, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=291, col_offset=11), 'has_key', Load(), lineno=291, col_offset=11), [Str('----', lineno=291, col_offset=30)], [], None, None, lineno=291, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=292, col_offset=19), Index(Str('----', lineno=292, col_offset=30)), Load(), lineno=292, col_offset=19), lineno=292, col_offset=12)], [], lineno=291, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('unregister_URL_echo', arguments([Name('self', Param(), lineno=294, col_offset=28), Name('_object', Param(), lineno=294, col_offset=34), Name('_attributes', Param(), lineno=294, col_offset=43)], None, '_arguments', [Dict([], [], lineno=294, col_offset=55)]), [Expr(Str('unregister URL echo: cancels URL echo\n        Required argument: application signature\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=298, col_offset=-1), lineno=298, col_offset=-1), Assign([Name('_code', Store(), lineno=299, col_offset=8)], Str('WWW!', lineno=299, col_offset=16), lineno=299, col_offset=8), Assign([Name('_subcode', Store(), lineno=300, col_offset=8)], Str('UNRU', lineno=300, col_offset=19), lineno=300, col_offset=8), If(Name('_arguments', Load(), lineno=302, col_offset=11), [Raise(Name('TypeError', Load(), lineno=302, col_offset=29), Str('No optional args expected', lineno=302, col_offset=40), None, lineno=302, col_offset=23)], [], lineno=302, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=303, col_offset=8), Index(Str('----', lineno=303, col_offset=19)), Store(), lineno=303, col_offset=8)], Name('_object', Load(), lineno=303, col_offset=29), lineno=303, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=306, col_offset=8), Name('_arguments', Store(), lineno=306, col_offset=16), Name('_attributes', Store(), lineno=306, col_offset=28)], Store(), lineno=306, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=306, col_offset=42), 'send', Load(), lineno=306, col_offset=42), [Name('_code', Load(), lineno=306, col_offset=52), Name('_subcode', Load(), lineno=306, col_offset=59), Name('_arguments', Load(), lineno=307, col_offset=16), Name('_attributes', Load(), lineno=307, col_offset=28)], [], None, None, lineno=306, col_offset=42), lineno=306, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=308, col_offset=11), 'get', Load(), lineno=308, col_offset=11), [Str('errn', lineno=308, col_offset=26), Num(0, lineno=308, col_offset=34)], [], None, None, lineno=308, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=309, col_offset=18), 'Error', Load(), lineno=309, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=309, col_offset=33), 'decodeerror', Load(), lineno=309, col_offset=33), [Name('_arguments', Load(), lineno=309, col_offset=53)], [], None, None, lineno=309, col_offset=33), None, lineno=309, col_offset=12)], [], lineno=308, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=311, col_offset=11), 'has_key', Load(), lineno=311, col_offset=11), [Str('----', lineno=311, col_offset=30)], [], None, None, lineno=311, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=312, col_offset=19), Index(Str('----', lineno=312, col_offset=30)), Load(), lineno=312, col_offset=19), lineno=312, col_offset=12)], [], lineno=311, col_offset=8)], [], lineno=294, col_offset=4), Assign([Name('_argmap_unregister_protocol', Store(), lineno=314, col_offset=4)], Dict([Str('for_protocol', lineno=315, col_offset=8)], [Str('PROT', lineno=315, col_offset=25)], lineno=314, col_offset=34), lineno=314, col_offset=4), FunctionDef('unregister_protocol', arguments([Name('self', Param(), lineno=318, col_offset=28), Name('_object', Param(), lineno=318, col_offset=34), Name('_attributes', Param(), lineno=318, col_offset=48)], None, '_arguments', [Name('None', Load(), lineno=318, col_offset=42), Dict([], [], lineno=318, col_offset=60)]), [Expr(Str('unregister protocol: reverses the effects of \xd2register protocol\xd3\n        Required argument: Application sig.\n        Keyword argument for_protocol: protocol prefix. If none, unregister for all protocols\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: TRUE if successful\n        ', lineno=324, col_offset=-1), lineno=324, col_offset=-1), Assign([Name('_code', Store(), lineno=325, col_offset=8)], Str('WWW!', lineno=325, col_offset=16), lineno=325, col_offset=8), Assign([Name('_subcode', Store(), lineno=326, col_offset=8)], Str('UNRP', lineno=326, col_offset=19), lineno=326, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=328, col_offset=8), 'keysubst', Load(), lineno=328, col_offset=8), [Name('_arguments', Load(), lineno=328, col_offset=25), Attribute(Name('self', Load(), lineno=328, col_offset=37), '_argmap_unregister_protocol', Load(), lineno=328, col_offset=37)], [], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=329, col_offset=8), Index(Str('----', lineno=329, col_offset=19)), Store(), lineno=329, col_offset=8)], Name('_object', Load(), lineno=329, col_offset=29), lineno=329, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=332, col_offset=8), Name('_arguments', Store(), lineno=332, col_offset=16), Name('_attributes', Store(), lineno=332, col_offset=28)], Store(), lineno=332, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=332, col_offset=42), 'send', Load(), lineno=332, col_offset=42), [Name('_code', Load(), lineno=332, col_offset=52), Name('_subcode', Load(), lineno=332, col_offset=59), Name('_arguments', Load(), lineno=333, col_offset=16), Name('_attributes', Load(), lineno=333, col_offset=28)], [], None, None, lineno=332, col_offset=42), lineno=332, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=334, col_offset=11), 'get', Load(), lineno=334, col_offset=11), [Str('errn', lineno=334, col_offset=26), Num(0, lineno=334, col_offset=34)], [], None, None, lineno=334, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=335, col_offset=18), 'Error', Load(), lineno=335, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=335, col_offset=33), 'decodeerror', Load(), lineno=335, col_offset=33), [Name('_arguments', Load(), lineno=335, col_offset=53)], [], None, None, lineno=335, col_offset=33), None, lineno=335, col_offset=12)], [], lineno=334, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=337, col_offset=11), 'has_key', Load(), lineno=337, col_offset=11), [Str('----', lineno=337, col_offset=30)], [], None, None, lineno=337, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=338, col_offset=19), Index(Str('----', lineno=338, col_offset=30)), Load(), lineno=338, col_offset=19), lineno=338, col_offset=12)], [], lineno=337, col_offset=8)], [], lineno=318, col_offset=4), Assign([Name('_argmap_unregister_viewer', Store(), lineno=340, col_offset=4)], Dict([Str('MIME_type', lineno=341, col_offset=8)], [Str('MIME', lineno=341, col_offset=22)], lineno=340, col_offset=32), lineno=340, col_offset=4), FunctionDef('unregister_viewer', arguments([Name('self', Param(), lineno=344, col_offset=26), Name('_object', Param(), lineno=344, col_offset=32), Name('_attributes', Param(), lineno=344, col_offset=41)], None, '_arguments', [Dict([], [], lineno=344, col_offset=53)]), [Expr(Str('unregister viewer: Revert to the old way of handling this MIME type\n        Required argument: Application sig\n        Keyword argument MIME_type: MIME type to be unregistered\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: TRUE if the event was successful\n        ', lineno=350, col_offset=-1), lineno=350, col_offset=-1), Assign([Name('_code', Store(), lineno=351, col_offset=8)], Str('WWW!', lineno=351, col_offset=16), lineno=351, col_offset=8), Assign([Name('_subcode', Store(), lineno=352, col_offset=8)], Str('UNRV', lineno=352, col_offset=19), lineno=352, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=354, col_offset=8), 'keysubst', Load(), lineno=354, col_offset=8), [Name('_arguments', Load(), lineno=354, col_offset=25), Attribute(Name('self', Load(), lineno=354, col_offset=37), '_argmap_unregister_viewer', Load(), lineno=354, col_offset=37)], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=355, col_offset=8), Index(Str('----', lineno=355, col_offset=19)), Store(), lineno=355, col_offset=8)], Name('_object', Load(), lineno=355, col_offset=29), lineno=355, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=358, col_offset=8), Name('_arguments', Store(), lineno=358, col_offset=16), Name('_attributes', Store(), lineno=358, col_offset=28)], Store(), lineno=358, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=358, col_offset=42), 'send', Load(), lineno=358, col_offset=42), [Name('_code', Load(), lineno=358, col_offset=52), Name('_subcode', Load(), lineno=358, col_offset=59), Name('_arguments', Load(), lineno=359, col_offset=16), Name('_attributes', Load(), lineno=359, col_offset=28)], [], None, None, lineno=358, col_offset=42), lineno=358, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=360, col_offset=11), 'get', Load(), lineno=360, col_offset=11), [Str('errn', lineno=360, col_offset=26), Num(0, lineno=360, col_offset=34)], [], None, None, lineno=360, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=361, col_offset=18), 'Error', Load(), lineno=361, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=361, col_offset=33), 'decodeerror', Load(), lineno=361, col_offset=33), [Name('_arguments', Load(), lineno=361, col_offset=53)], [], None, None, lineno=361, col_offset=33), None, lineno=361, col_offset=12)], [], lineno=360, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=363, col_offset=11), 'has_key', Load(), lineno=363, col_offset=11), [Str('----', lineno=363, col_offset=30)], [], None, None, lineno=363, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=364, col_offset=19), Index(Str('----', lineno=364, col_offset=30)), Load(), lineno=364, col_offset=19), lineno=364, col_offset=12)], [], lineno=363, col_offset=8)], [], lineno=344, col_offset=4), Assign([Name('_argmap_unregister_window_close', Store(), lineno=366, col_offset=4)], Dict([Str('for_window', lineno=367, col_offset=8)], [Str('WIND', lineno=367, col_offset=23)], lineno=366, col_offset=38), lineno=366, col_offset=4), FunctionDef('unregister_window_close', arguments([Name('self', Param(), lineno=370, col_offset=32), Name('_object', Param(), lineno=370, col_offset=38), Name('_attributes', Param(), lineno=370, col_offset=52)], None, '_arguments', [Name('None', Load(), lineno=370, col_offset=46), Dict([], [], lineno=370, col_offset=64)]), [Expr(Str('unregister window close: Undo for register window close\n        Required argument: Application signature\n        Keyword argument for_window: window ID\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: true if successful\n        ', lineno=376, col_offset=-1), lineno=376, col_offset=-1), Assign([Name('_code', Store(), lineno=377, col_offset=8)], Str('WWW!', lineno=377, col_offset=16), lineno=377, col_offset=8), Assign([Name('_subcode', Store(), lineno=378, col_offset=8)], Str('UNRC', lineno=378, col_offset=19), lineno=378, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=380, col_offset=8), 'keysubst', Load(), lineno=380, col_offset=8), [Name('_arguments', Load(), lineno=380, col_offset=25), Attribute(Name('self', Load(), lineno=380, col_offset=37), '_argmap_unregister_window_close', Load(), lineno=380, col_offset=37)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=381, col_offset=8), Index(Str('----', lineno=381, col_offset=19)), Store(), lineno=381, col_offset=8)], Name('_object', Load(), lineno=381, col_offset=29), lineno=381, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=384, col_offset=8), Name('_arguments', Store(), lineno=384, col_offset=16), Name('_attributes', Store(), lineno=384, col_offset=28)], Store(), lineno=384, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=384, col_offset=42), 'send', Load(), lineno=384, col_offset=42), [Name('_code', Load(), lineno=384, col_offset=52), Name('_subcode', Load(), lineno=384, col_offset=59), Name('_arguments', Load(), lineno=385, col_offset=16), Name('_attributes', Load(), lineno=385, col_offset=28)], [], None, None, lineno=384, col_offset=42), lineno=384, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=386, col_offset=11), 'get', Load(), lineno=386, col_offset=11), [Str('errn', lineno=386, col_offset=26), Num(0, lineno=386, col_offset=34)], [], None, None, lineno=386, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=387, col_offset=18), 'Error', Load(), lineno=387, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=387, col_offset=33), 'decodeerror', Load(), lineno=387, col_offset=33), [Name('_arguments', Load(), lineno=387, col_offset=53)], [], None, None, lineno=387, col_offset=33), None, lineno=387, col_offset=12)], [], lineno=386, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=389, col_offset=11), 'has_key', Load(), lineno=389, col_offset=11), [Str('----', lineno=389, col_offset=30)], [], None, None, lineno=389, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=390, col_offset=19), Index(Str('----', lineno=390, col_offset=30)), Load(), lineno=390, col_offset=19), lineno=390, col_offset=12)], [], lineno=389, col_offset=8)], [], lineno=370, col_offset=4), FunctionDef('webActivate', arguments([Name('self', Param(), lineno=392, col_offset=20), Name('_object', Param(), lineno=392, col_offset=26), Name('_attributes', Param(), lineno=392, col_offset=40)], None, '_arguments', [Name('None', Load(), lineno=392, col_offset=34), Dict([], [], lineno=392, col_offset=52)]), [Expr(Str('webActivate: Makes Netscape the frontmost application, and selects a given window. This event is here for suite completeness/ cross-platform compatibility only, you should use standard AppleEvents instead.\n        Required argument: window to bring to front\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=396, col_offset=-1), lineno=396, col_offset=-1), Assign([Name('_code', Store(), lineno=397, col_offset=8)], Str('WWW!', lineno=397, col_offset=16), lineno=397, col_offset=8), Assign([Name('_subcode', Store(), lineno=398, col_offset=8)], Str('ACTV', lineno=398, col_offset=19), lineno=398, col_offset=8), If(Name('_arguments', Load(), lineno=400, col_offset=11), [Raise(Name('TypeError', Load(), lineno=400, col_offset=29), Str('No optional args expected', lineno=400, col_offset=40), None, lineno=400, col_offset=23)], [], lineno=400, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=401, col_offset=8), Index(Str('----', lineno=401, col_offset=19)), Store(), lineno=401, col_offset=8)], Name('_object', Load(), lineno=401, col_offset=29), lineno=401, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=404, col_offset=8), Name('_arguments', Store(), lineno=404, col_offset=16), Name('_attributes', Store(), lineno=404, col_offset=28)], Store(), lineno=404, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=404, col_offset=42), 'send', Load(), lineno=404, col_offset=42), [Name('_code', Load(), lineno=404, col_offset=52), Name('_subcode', Load(), lineno=404, col_offset=59), Name('_arguments', Load(), lineno=405, col_offset=16), Name('_attributes', Load(), lineno=405, col_offset=28)], [], None, None, lineno=404, col_offset=42), lineno=404, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=406, col_offset=11), 'get', Load(), lineno=406, col_offset=11), [Str('errn', lineno=406, col_offset=26), Num(0, lineno=406, col_offset=34)], [], None, None, lineno=406, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=407, col_offset=18), 'Error', Load(), lineno=407, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=407, col_offset=33), 'decodeerror', Load(), lineno=407, col_offset=33), [Name('_arguments', Load(), lineno=407, col_offset=53)], [], None, None, lineno=407, col_offset=33), None, lineno=407, col_offset=12)], [], lineno=406, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=409, col_offset=11), 'has_key', Load(), lineno=409, col_offset=11), [Str('----', lineno=409, col_offset=30)], [], None, None, lineno=409, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=410, col_offset=19), Index(Str('----', lineno=410, col_offset=30)), Load(), lineno=410, col_offset=19), lineno=410, col_offset=12)], [], lineno=409, col_offset=8)], [], lineno=392, col_offset=4)], [], lineno=13, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=416, col_offset=0)], Dict([], [], lineno=416, col_offset=21), lineno=416, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=419, col_offset=0)], Dict([], [], lineno=419, col_offset=20), lineno=419, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=422, col_offset=0)], Dict([], [], lineno=422, col_offset=20), lineno=422, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=425, col_offset=0)], Dict([], [], lineno=425, col_offset=20), lineno=425, col_offset=0)])
