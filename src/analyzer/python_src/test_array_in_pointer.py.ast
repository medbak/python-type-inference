Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=2, col_offset=0), ImportFrom('binascii', [alias('hexlify', None)], 0, lineno=3, col_offset=0), Import([alias('re', None)], lineno=4, col_offset=0), FunctionDef('dump', arguments([Name('obj', Param(), lineno=6, col_offset=9)], None, None, []), [Assign([Name('h', Store(), lineno=9, col_offset=4)], Call(Name('hexlify', Load(), lineno=9, col_offset=8), [Call(Name('memoryview', Load(), lineno=9, col_offset=16), [Name('obj', Load(), lineno=9, col_offset=27)], [], None, None, lineno=9, col_offset=16)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=4), Return(Subscript(Call(Attribute(Name('re', Load(), lineno=10, col_offset=11), 'sub', Load(), lineno=10, col_offset=11), [Str('(..)', lineno=10, col_offset=18), Str('\\1-', lineno=10, col_offset=27), Name('h', Load(), lineno=10, col_offset=35)], [], None, None, lineno=10, col_offset=11), Slice(None, Num(-1, lineno=10, col_offset=40), None), Load(), lineno=10, col_offset=11), lineno=10, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('Value', [Name('Structure', Load(), lineno=13, col_offset=12)], [Assign([Name('_fields_', Store(), lineno=14, col_offset=4)], List([Tuple([Str('val', lineno=14, col_offset=17), Name('c_byte', Load(), lineno=14, col_offset=24)], Load(), lineno=14, col_offset=17)], Load(), lineno=14, col_offset=15), lineno=14, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('Container', [Name('Structure', Load(), lineno=16, col_offset=16)], [Assign([Name('_fields_', Store(), lineno=17, col_offset=4)], List([Tuple([Str('pvalues', lineno=17, col_offset=17), Call(Name('POINTER', Load(), lineno=17, col_offset=28), [Name('Value', Load(), lineno=17, col_offset=36)], [], None, None, lineno=17, col_offset=28)], Load(), lineno=17, col_offset=17)], Load(), lineno=17, col_offset=15), lineno=17, col_offset=4)], [], lineno=16, col_offset=0), ClassDef('Test', [Attribute(Name('unittest', Load(), lineno=19, col_offset=11), 'TestCase', Load(), lineno=19, col_offset=11)], [FunctionDef('test', arguments([Name('self', Param(), lineno=20, col_offset=13)], None, None, []), [Assign([Name('val_array', Store(), lineno=22, col_offset=8)], Call(BinOp(Name('Value', Load(), lineno=22, col_offset=21), Mult(), Num(4, lineno=22, col_offset=29), lineno=22, col_offset=21), [], [], None, None, lineno=22, col_offset=21), lineno=22, col_offset=8), Assign([Name('c', Store(), lineno=25, col_offset=8)], Call(Name('Container', Load(), lineno=25, col_offset=12), [], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=8), Assign([Attribute(Name('c', Load(), lineno=26, col_offset=8), 'pvalues', Store(), lineno=26, col_offset=8)], Name('val_array', Load(), lineno=26, col_offset=20), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Str('00-00-00-00', lineno=29, col_offset=25), Call(Name('dump', Load(), lineno=29, col_offset=40), [Name('val_array', Load(), lineno=29, col_offset=45)], [], None, None, lineno=29, col_offset=40)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), For(Name('i', Store(), lineno=32, col_offset=12), Call(Name('range', Load(), lineno=32, col_offset=17), [Num(4, lineno=32, col_offset=23)], [], None, None, lineno=32, col_offset=17), [Assign([Attribute(Subscript(Attribute(Name('c', Load(), lineno=33, col_offset=12), 'pvalues', Load(), lineno=33, col_offset=12), Index(Name('i', Load(), lineno=33, col_offset=22)), Load(), lineno=33, col_offset=12), 'val', Store(), lineno=33, col_offset=12)], BinOp(Name('i', Load(), lineno=33, col_offset=31), Add(), Num(1, lineno=33, col_offset=35), lineno=33, col_offset=31), lineno=33, col_offset=12)], [], lineno=32, col_offset=8), Assign([Name('values', Store(), lineno=35, col_offset=8)], ListComp(Attribute(Subscript(Attribute(Name('c', Load(), lineno=35, col_offset=18), 'pvalues', Load(), lineno=35, col_offset=18), Index(Name('i', Load(), lineno=35, col_offset=28)), Load(), lineno=35, col_offset=18), 'val', Load(), lineno=35, col_offset=18), [comprehension(Name('i', Store(), lineno=35, col_offset=39), Call(Name('range', Load(), lineno=35, col_offset=44), [Num(4, lineno=35, col_offset=50)], [], None, None, lineno=35, col_offset=44), [])], lineno=35, col_offset=18), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertEqual', Load(), lineno=38, col_offset=8), [Tuple([Name('values', Load(), lineno=39, col_offset=13), Call(Name('dump', Load(), lineno=39, col_offset=21), [Name('val_array', Load(), lineno=39, col_offset=26)], [], None, None, lineno=39, col_offset=21)], Load(), lineno=39, col_offset=13), Tuple([List([Num(1, lineno=40, col_offset=14), Num(2, lineno=40, col_offset=17), Num(3, lineno=40, col_offset=20), Num(4, lineno=40, col_offset=23)], Load(), lineno=40, col_offset=13), Str('01-02-03-04', lineno=40, col_offset=27)], Load(), lineno=40, col_offset=13)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('test_2', arguments([Name('self', Param(), lineno=43, col_offset=15)], None, None, []), [Assign([Name('val_array', Store(), lineno=45, col_offset=8)], Call(BinOp(Name('Value', Load(), lineno=45, col_offset=21), Mult(), Num(4, lineno=45, col_offset=29), lineno=45, col_offset=21), [], [], None, None, lineno=45, col_offset=21), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertEqual', Load(), lineno=48, col_offset=8), [Str('00-00-00-00', lineno=48, col_offset=25), Call(Name('dump', Load(), lineno=48, col_offset=40), [Name('val_array', Load(), lineno=48, col_offset=45)], [], None, None, lineno=48, col_offset=40)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Assign([Name('ptr', Store(), lineno=50, col_offset=8)], Call(Name('cast', Load(), lineno=50, col_offset=14), [Name('val_array', Load(), lineno=50, col_offset=19), Call(Name('POINTER', Load(), lineno=50, col_offset=30), [Name('Value', Load(), lineno=50, col_offset=38)], [], None, None, lineno=50, col_offset=30)], [], None, None, lineno=50, col_offset=14), lineno=50, col_offset=8), For(Name('i', Store(), lineno=52, col_offset=12), Call(Name('range', Load(), lineno=52, col_offset=17), [Num(4, lineno=52, col_offset=23)], [], None, None, lineno=52, col_offset=17), [Assign([Attribute(Subscript(Name('ptr', Load(), lineno=53, col_offset=12), Index(Name('i', Load(), lineno=53, col_offset=16)), Load(), lineno=53, col_offset=12), 'val', Store(), lineno=53, col_offset=12)], BinOp(Name('i', Load(), lineno=53, col_offset=25), Add(), Num(1, lineno=53, col_offset=29), lineno=53, col_offset=25), lineno=53, col_offset=12)], [], lineno=52, col_offset=8), Assign([Name('values', Store(), lineno=55, col_offset=8)], ListComp(Attribute(Subscript(Name('ptr', Load(), lineno=55, col_offset=18), Index(Name('i', Load(), lineno=55, col_offset=22)), Load(), lineno=55, col_offset=18), 'val', Load(), lineno=55, col_offset=18), [comprehension(Name('i', Store(), lineno=55, col_offset=33), Call(Name('range', Load(), lineno=55, col_offset=38), [Num(4, lineno=55, col_offset=44)], [], None, None, lineno=55, col_offset=38), [])], lineno=55, col_offset=18), lineno=55, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=8), 'assertEqual', Load(), lineno=58, col_offset=8), [Tuple([Name('values', Load(), lineno=59, col_offset=13), Call(Name('dump', Load(), lineno=59, col_offset=21), [Name('val_array', Load(), lineno=59, col_offset=26)], [], None, None, lineno=59, col_offset=21)], Load(), lineno=59, col_offset=13), Tuple([List([Num(1, lineno=60, col_offset=14), Num(2, lineno=60, col_offset=17), Num(3, lineno=60, col_offset=20), Num(4, lineno=60, col_offset=23)], Load(), lineno=60, col_offset=13), Str('01-02-03-04', lineno=60, col_offset=27)], Load(), lineno=60, col_offset=13)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8)], [], lineno=43, col_offset=4)], [], lineno=19, col_offset=0), If(Compare(Name('__name__', Load(), lineno=63, col_offset=3), [Eq()], [Str('__main__', lineno=63, col_offset=15)], lineno=63, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=64, col_offset=4), 'main', Load(), lineno=64, col_offset=4), [], [], None, None, lineno=64, col_offset=4), lineno=64, col_offset=4)], [], lineno=63, col_offset=0)])
