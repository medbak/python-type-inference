Module([ImportFrom('macsupport', [alias('*', None)], 0, lineno=6, col_offset=0), ClassDef('SndMixIn', [], [Pass( lineno=11, col_offset=16)], [], lineno=11, col_offset=0), ClassDef('SndFunction', [Name('SndMixIn', Load(), lineno=13, col_offset=18), Name('OSErrFunctionGenerator', Load(), lineno=13, col_offset=28)], [Pass( lineno=13, col_offset=53)], [], lineno=13, col_offset=0), ClassDef('SndMethod', [Name('SndMixIn', Load(), lineno=14, col_offset=16), Name('OSErrMethodGenerator', Load(), lineno=14, col_offset=26)], [Pass( lineno=14, col_offset=49)], [], lineno=14, col_offset=0), Assign([Name('includestuff', Store(), lineno=19, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=19, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n', lineno=21, col_offset=-1), lineno=19, col_offset=15), lineno=19, col_offset=0), Assign([Name('initstuff', Store(), lineno=23, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=23, col_offset=12), Add(), Str('\n', lineno=24, col_offset=-1), lineno=23, col_offset=12), lineno=23, col_offset=0), ClassDef('SndChannelPtrType', [Name('OpaqueByValueType', Load(), lineno=29, col_offset=24)], [FunctionDef('declare', arguments([Name('self', Param(), lineno=30, col_offset=16), Name('name', Param(), lineno=30, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=35, col_offset=8), [Str('SndChannelPtr %s = 0;', lineno=35, col_offset=15), Name('name', Load(), lineno=35, col_offset=40)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=29, col_offset=0), Assign([Name('SndChannelPtr', Store(), lineno=37, col_offset=0)], Call(Name('SndChannelPtrType', Load(), lineno=37, col_offset=16), [Str('SndChannelPtr', lineno=37, col_offset=34), Str('SndCh', lineno=37, col_offset=51)], [], None, None, lineno=37, col_offset=16), lineno=37, col_offset=0), Assign([Name('SndCommand', Store(), lineno=39, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=39, col_offset=13), [Str('SndCommand', lineno=39, col_offset=24), Str('SndCmd', lineno=39, col_offset=38)], [], None, None, lineno=39, col_offset=13), lineno=39, col_offset=0), Assign([Name('SndCommand_ptr', Store(), lineno=40, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=40, col_offset=17), [Str('SndCommand', lineno=40, col_offset=28), Str('SndCmd', lineno=40, col_offset=42)], [], None, None, lineno=40, col_offset=17), lineno=40, col_offset=0), Assign([Name('SndListHandle', Store(), lineno=41, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=41, col_offset=16), [Str('SndListHandle', lineno=41, col_offset=34), Str('ResObj', lineno=41, col_offset=51)], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=0), Assign([Name('SPBPtr', Store(), lineno=42, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=42, col_offset=9), [Str('SPBPtr', lineno=42, col_offset=27), Str('SPBObj', lineno=42, col_offset=37)], [], None, None, lineno=42, col_offset=9), lineno=42, col_offset=0), Assign([Name('ModalFilterUPP', Store(), lineno=43, col_offset=0)], Call(Name('FakeType', Load(), lineno=43, col_offset=17), [Str('(ModalFilterUPP)0', lineno=43, col_offset=26)], [], None, None, lineno=43, col_offset=17), lineno=43, col_offset=0), Assign([Name('void_ptr', Store(), lineno=49, col_offset=0)], Call(Name('Type', Load(), lineno=49, col_offset=11), [Str('void *', lineno=49, col_offset=16), Str('w', lineno=49, col_offset=26)], [], None, None, lineno=49, col_offset=11), lineno=49, col_offset=0), ClassDef('SndCallBackType', [Name('InputOnlyType', Load(), lineno=51, col_offset=22)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=52, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('Type', Load(), lineno=53, col_offset=8), '__init__', Load(), lineno=53, col_offset=8), [Name('self', Load(), lineno=53, col_offset=22), Str('PyObject*', lineno=53, col_offset=28), Str('O', lineno=53, col_offset=41)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('getargsCheck', arguments([Name('self', Param(), lineno=54, col_offset=21), Name('name', Param(), lineno=54, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=55, col_offset=8), [Str('if (%s != Py_None && !PyCallable_Check(%s))', lineno=55, col_offset=15), Name('name', Load(), lineno=55, col_offset=62), Name('name', Load(), lineno=55, col_offset=68)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=56, col_offset=8), [], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Expr(Call(Name('Output', Load(), lineno=57, col_offset=8), [Str('PyErr_SetString(PyExc_TypeError, "callback must be callable");', lineno=57, col_offset=15)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Expr(Call(Name('Output', Load(), lineno=58, col_offset=8), [Str('goto %s__error__;', lineno=58, col_offset=15), Name('name', Load(), lineno=58, col_offset=36)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=59, col_offset=8), [], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('passInput', arguments([Name('self', Param(), lineno=60, col_offset=18), Name('name', Param(), lineno=60, col_offset=24)], None, None, []), [Return(Str('NewSndCallBackUPP(SndCh_UserRoutine)', lineno=61, col_offset=15), lineno=61, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('cleanup', arguments([Name('self', Param(), lineno=62, col_offset=16), Name('name', Param(), lineno=62, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=64, col_offset=8), [Str('if (_res != NULL && %s != Py_None)', lineno=64, col_offset=15), Name('name', Load(), lineno=64, col_offset=53)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=65, col_offset=8), [], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Expr(Call(Name('Output', Load(), lineno=66, col_offset=8), [Str('SndChannelObject *p = (SndChannelObject *)_res;', lineno=66, col_offset=15)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Name('Output', Load(), lineno=67, col_offset=8), [Str('p->ob_itself->userInfo = (long)p;', lineno=67, col_offset=15)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Expr(Call(Name('Output', Load(), lineno=68, col_offset=8), [Str('Py_INCREF(%s);', lineno=68, col_offset=15), Name('name', Load(), lineno=68, col_offset=33)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Name('Output', Load(), lineno=69, col_offset=8), [Str('p->ob_callback = %s;', lineno=69, col_offset=15), Name('name', Load(), lineno=69, col_offset=39)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=70, col_offset=8), [], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Name('DedentLevel', Load(), lineno=71, col_offset=8), [], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Name('Output', Load(), lineno=72, col_offset=8), [Str(' %s__error__: ;', lineno=72, col_offset=15), Name('name', Load(), lineno=72, col_offset=34)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Name('IndentLevel', Load(), lineno=73, col_offset=8), [], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=62, col_offset=4)], [], lineno=51, col_offset=0), Assign([Name('SndCallBackProcPtr', Store(), lineno=75, col_offset=0)], Call(Name('SndCallBackType', Load(), lineno=75, col_offset=21), [], [], None, None, lineno=75, col_offset=21), lineno=75, col_offset=0), Assign([Name('SndCallBackUPP', Store(), lineno=76, col_offset=0)], Name('SndCallBackProcPtr', Load(), lineno=76, col_offset=17), lineno=76, col_offset=0), Assign([Name('SndCompletionProcPtr', Store(), lineno=78, col_offset=0)], Call(Name('FakeType', Load(), lineno=78, col_offset=23), [Str('(SndCompletionProcPtr)0', lineno=78, col_offset=32)], [], None, None, lineno=78, col_offset=23), lineno=78, col_offset=0), Assign([Name('SndCompletionUPP', Store(), lineno=79, col_offset=0)], Name('SndCompletionProcPtr', Load(), lineno=79, col_offset=19), lineno=79, col_offset=0), Assign([Name('StateBlock', Store(), lineno=82, col_offset=0)], Call(Name('StructInputOutputBufferType', Load(), lineno=82, col_offset=13), [Str('StateBlock', lineno=82, col_offset=41)], [], None, None, lineno=82, col_offset=13), lineno=82, col_offset=0), Assign([Name('AudioSelectionPtr', Store(), lineno=84, col_offset=0)], Call(Name('FakeType', Load(), lineno=84, col_offset=20), [Str('0', lineno=84, col_offset=29)], [], None, None, lineno=84, col_offset=20), lineno=84, col_offset=0), Assign([Name('ProcPtr', Store(), lineno=86, col_offset=0)], Call(Name('FakeType', Load(), lineno=86, col_offset=10), [Str('0', lineno=86, col_offset=19)], [], None, None, lineno=86, col_offset=10), lineno=86, col_offset=0), Assign([Name('FilePlayCompletionUPP', Store(), lineno=87, col_offset=0)], Call(Name('FakeType', Load(), lineno=87, col_offset=24), [Str('0', lineno=87, col_offset=33)], [], None, None, lineno=87, col_offset=24), lineno=87, col_offset=0), Assign([Name('SCStatus', Store(), lineno=89, col_offset=0)], Call(Name('StructOutputBufferType', Load(), lineno=89, col_offset=11), [Str('SCStatus', lineno=89, col_offset=34)], [], None, None, lineno=89, col_offset=11), lineno=89, col_offset=0), Assign([Name('SMStatus', Store(), lineno=90, col_offset=0)], Call(Name('StructOutputBufferType', Load(), lineno=90, col_offset=11), [Str('SMStatus', lineno=90, col_offset=34)], [], None, None, lineno=90, col_offset=11), lineno=90, col_offset=0), Assign([Name('CompressionInfo', Store(), lineno=91, col_offset=0)], Call(Name('StructOutputBufferType', Load(), lineno=91, col_offset=18), [Str('CompressionInfo', lineno=91, col_offset=41)], [], None, None, lineno=91, col_offset=18), lineno=91, col_offset=0), Assign([Name('includestuff', Store(), lineno=93, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=93, col_offset=15), Add(), Str('\n/* Convert a SndCommand argument */\nstatic int\nSndCmd_Convert(PyObject *v, SndCommand *pc)\n{\n        int len;\n        pc->param1 = 0;\n        pc->param2 = 0;\n        if (PyTuple_Check(v)) {\n                if (PyArg_ParseTuple(v, "h|hl", &pc->cmd, &pc->param1, &pc->param2))\n                        return 1;\n                PyErr_Clear();\n                return PyArg_ParseTuple(v, "Hhs#", &pc->cmd, &pc->param1, &pc->param2, &len);\n        }\n        return PyArg_Parse(v, "H", &pc->cmd);\n}\n\nstatic pascal void SndCh_UserRoutine(SndChannelPtr chan, SndCommand *cmd); /* Forward */\nstatic pascal void SPB_completion(SPBPtr my_spb); /* Forward */\n', lineno=112, col_offset=-1), lineno=93, col_offset=15), lineno=93, col_offset=0), Assign([Name('finalstuff', Store(), lineno=115, col_offset=0)], BinOp(Name('finalstuff', Load(), lineno=115, col_offset=13), Add(), Str('\n/* Routine passed to Py_AddPendingCall -- call the Python callback */\nstatic int\nSndCh_CallCallBack(void *arg)\n{\n        SndChannelObject *p = (SndChannelObject *)arg;\n        PyObject *args;\n        PyObject *res;\n        args = Py_BuildValue("(O(hhl))",\n                             p, p->ob_cmd.cmd, p->ob_cmd.param1, p->ob_cmd.param2);\n        res = PyEval_CallObject(p->ob_callback, args);\n        Py_DECREF(args);\n        if (res == NULL)\n                return -1;\n        Py_DECREF(res);\n        return 0;\n}\n\n/* Routine passed to NewSndChannel -- schedule a call to SndCh_CallCallBack */\nstatic pascal void\nSndCh_UserRoutine(SndChannelPtr chan, SndCommand *cmd)\n{\n        SndChannelObject *p = (SndChannelObject *)(chan->userInfo);\n        if (p->ob_callback != NULL) {\n                long A5 = SetA5(p->ob_A5);\n                p->ob_cmd = *cmd;\n                Py_AddPendingCall(SndCh_CallCallBack, (void *)p);\n                SetA5(A5);\n        }\n}\n\n/* SPB callbacks - Schedule callbacks to Python */\nstatic int\nSPB_CallCallBack(void *arg)\n{\n        SPBObject *p = (SPBObject *)arg;\n        PyObject *args;\n        PyObject *res;\n\n        if ( p->ob_thiscallback == 0 ) return 0;\n        args = Py_BuildValue("(O)", p);\n        res = PyEval_CallObject(p->ob_thiscallback, args);\n        p->ob_thiscallback = 0;\n        Py_DECREF(args);\n        if (res == NULL)\n                return -1;\n        Py_DECREF(res);\n        return 0;\n}\n\nstatic pascal void\nSPB_completion(SPBPtr my_spb)\n{\n        SPBObject *p = (SPBObject *)(my_spb->userLong);\n\n        if (p && p->ob_completion) {\n                long A5 = SetA5(p->ob_A5);\n                p->ob_thiscallback = p->ob_completion;  /* Hope we cannot get two at the same time */\n                Py_AddPendingCall(SPB_CallCallBack, (void *)p);\n                SetA5(A5);\n        }\n}\n\n', lineno=178, col_offset=-1), lineno=115, col_offset=13), lineno=115, col_offset=0), ClassDef('SndObjectDefinition', [Name('PEP252Mixin', Load(), lineno=183, col_offset=26), Name('ObjectDefinition', Load(), lineno=183, col_offset=39)], [FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=185, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('ObjectDefinition', Load(), lineno=186, col_offset=8), 'outputStructMembers', Load(), lineno=186, col_offset=8), [Name('self', Load(), lineno=186, col_offset=45)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Name('Output', Load(), lineno=187, col_offset=8), [Str('/* Members used to implement callbacks: */', lineno=187, col_offset=15)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Name('Output', Load(), lineno=188, col_offset=8), [Str('PyObject *ob_callback;', lineno=188, col_offset=15)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Name('Output', Load(), lineno=189, col_offset=8), [Str('long ob_A5;', lineno=189, col_offset=15)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Name('Output', Load(), lineno=190, col_offset=8), [Str('SndCommand ob_cmd;', lineno=190, col_offset=15)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=192, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('ObjectDefinition', Load(), lineno=193, col_offset=8), 'outputInitStructMembers', Load(), lineno=193, col_offset=8), [Name('self', Load(), lineno=193, col_offset=49)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Name('Output', Load(), lineno=194, col_offset=8), [Str('it->ob_callback = NULL;', lineno=194, col_offset=15)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Name('Output', Load(), lineno=195, col_offset=8), [Str('it->ob_A5 = SetCurrentA5();', lineno=195, col_offset=15)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('outputCleanupStructMembers', arguments([Name('self', Param(), lineno=197, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('ObjectDefinition', Load(), lineno=198, col_offset=8), 'outputCleanupStructMembers', Load(), lineno=198, col_offset=8), [Name('self', Load(), lineno=198, col_offset=52)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Name('Output', Load(), lineno=199, col_offset=8), [Str('Py_XDECREF(self->ob_callback);', lineno=199, col_offset=15)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('outputFreeIt', arguments([Name('self', Param(), lineno=201, col_offset=21), Name('itselfname', Param(), lineno=201, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=202, col_offset=8), [Str('SndDisposeChannel(%s, 1);', lineno=202, col_offset=15), Name('itselfname', Load(), lineno=202, col_offset=44)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('outputConvert', arguments([Name('self', Param(), lineno=204, col_offset=22)], None, None, []), [Pass( lineno=205, col_offset=8)], [], lineno=204, col_offset=4)], [], lineno=183, col_offset=0), ClassDef('SpbObjectDefinition', [Name('PEP252Mixin', Load(), lineno=209, col_offset=26), Name('ObjectDefinition', Load(), lineno=209, col_offset=39)], [Assign([Name('getsetlist', Store(), lineno=210, col_offset=4)], List([Tuple([Str('inRefNum', lineno=212, col_offset=12), Str('return Py_BuildValue("l", self->ob_spb.inRefNum);', lineno=213, col_offset=12), Str('return -1 + PyArg_Parse(v, "l", &self->ob_spb.inRefNum);', lineno=214, col_offset=12), Name('None', Load(), lineno=215, col_offset=12)], Load(), lineno=212, col_offset=12), Tuple([Str('count', lineno=217, col_offset=12), Str('return Py_BuildValue("l", self->ob_spb.count);', lineno=218, col_offset=12), Str('return -1 + PyArg_Parse(v, "l", &self->ob_spb.count);', lineno=219, col_offset=12), Name('None', Load(), lineno=220, col_offset=12)], Load(), lineno=217, col_offset=12), Tuple([Str('milliseconds', lineno=222, col_offset=12), Str('return Py_BuildValue("l", self->ob_spb.milliseconds);', lineno=223, col_offset=12), Str('return -1 + PyArg_Parse(v, "l", &self->ob_spb.milliseconds);', lineno=224, col_offset=12), Name('None', Load(), lineno=225, col_offset=12)], Load(), lineno=222, col_offset=12), Tuple([Str('error', lineno=227, col_offset=12), Str('return Py_BuildValue("h", self->ob_spb.error);', lineno=228, col_offset=12), Name('None', Load(), lineno=229, col_offset=12), Name('None', Load(), lineno=230, col_offset=12)], Load(), lineno=227, col_offset=12), Tuple([Str('completionRoutine', lineno=232, col_offset=12), Name('None', Load(), lineno=233, col_offset=12), Str('self->ob_spb.completionRoutine = NewSICompletionUPP(SPB_completion);\n            self->ob_completion = v;\n            Py_INCREF(v);\n            return 0;', lineno=237, col_offset=-1), Name('None', Load(), lineno=238, col_offset=12)], Load(), lineno=232, col_offset=12)], Load(), lineno=210, col_offset=17), lineno=210, col_offset=4), FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=241, col_offset=28)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=242, col_offset=8), [Str('/* Members used to implement callbacks: */', lineno=242, col_offset=15)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8), Expr(Call(Name('Output', Load(), lineno=243, col_offset=8), [Str('PyObject *ob_completion;', lineno=243, col_offset=15)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Name('Output', Load(), lineno=244, col_offset=8), [Str('PyObject *ob_interrupt;', lineno=244, col_offset=15)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Name('Output', Load(), lineno=245, col_offset=8), [Str('PyObject *ob_thiscallback;', lineno=245, col_offset=15)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Expr(Call(Name('Output', Load(), lineno=246, col_offset=8), [Str('long ob_A5;', lineno=246, col_offset=15)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8), Expr(Call(Name('Output', Load(), lineno=247, col_offset=8), [Str('SPB ob_spb;', lineno=247, col_offset=15)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8)], [], lineno=241, col_offset=4), FunctionDef('outputNew', arguments([Name('self', Param(), lineno=249, col_offset=18)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=250, col_offset=8), [], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Expr(Call(Name('Output', Load(), lineno=251, col_offset=8), [Str('%sPyObject *%s_New(void)', lineno=251, col_offset=15), Attribute(Name('self', Load(), lineno=251, col_offset=43), 'static', Load(), lineno=251, col_offset=43), Attribute(Name('self', Load(), lineno=251, col_offset=56), 'prefix', Load(), lineno=251, col_offset=56)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=252, col_offset=8), [], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), Expr(Call(Name('Output', Load(), lineno=253, col_offset=8), [Str('%s *it;', lineno=253, col_offset=15), Attribute(Name('self', Load(), lineno=253, col_offset=26), 'objecttype', Load(), lineno=253, col_offset=26)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'outputCheckNewArg', Load(), lineno=254, col_offset=8), [], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Name('Output', Load(), lineno=255, col_offset=8), [Str('it = PyObject_NEW(%s, &%s);', lineno=255, col_offset=15), Attribute(Name('self', Load(), lineno=255, col_offset=46), 'objecttype', Load(), lineno=255, col_offset=46), Attribute(Name('self', Load(), lineno=255, col_offset=63), 'typename', Load(), lineno=255, col_offset=63)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Expr(Call(Name('Output', Load(), lineno=256, col_offset=8), [Str('if (it == NULL) return NULL;', lineno=256, col_offset=15)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'outputInitStructMembers', Load(), lineno=257, col_offset=8), [], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Name('Output', Load(), lineno=258, col_offset=8), [Str('return (PyObject *)it;', lineno=258, col_offset=15)], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=259, col_offset=8), [], [], None, None, lineno=259, col_offset=8), lineno=259, col_offset=8)], [], lineno=249, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=261, col_offset=32)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=262, col_offset=8), [Str('it->ob_completion = NULL;', lineno=262, col_offset=15)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Expr(Call(Name('Output', Load(), lineno=263, col_offset=8), [Str('it->ob_interrupt = NULL;', lineno=263, col_offset=15)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Expr(Call(Name('Output', Load(), lineno=264, col_offset=8), [Str('it->ob_thiscallback = NULL;', lineno=264, col_offset=15)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8), Expr(Call(Name('Output', Load(), lineno=265, col_offset=8), [Str('it->ob_A5 = SetCurrentA5();', lineno=265, col_offset=15)], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Expr(Call(Name('Output', Load(), lineno=266, col_offset=8), [Str('memset((char *)&it->ob_spb, 0, sizeof(it->ob_spb));', lineno=266, col_offset=15)], [], None, None, lineno=266, col_offset=8), lineno=266, col_offset=8), Expr(Call(Name('Output', Load(), lineno=267, col_offset=8), [Str('it->ob_spb.userLong = (long)it;', lineno=267, col_offset=15)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8)], [], lineno=261, col_offset=4), FunctionDef('outputCleanupStructMembers', arguments([Name('self', Param(), lineno=269, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('ObjectDefinition', Load(), lineno=270, col_offset=8), 'outputCleanupStructMembers', Load(), lineno=270, col_offset=8), [Name('self', Load(), lineno=270, col_offset=52)], [], None, None, lineno=270, col_offset=8), lineno=270, col_offset=8), Expr(Call(Name('Output', Load(), lineno=271, col_offset=8), [Str('self->ob_spb.userLong = 0;', lineno=271, col_offset=15)], [], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8), Expr(Call(Name('Output', Load(), lineno=272, col_offset=8), [Str('self->ob_thiscallback = 0;', lineno=272, col_offset=15)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Expr(Call(Name('Output', Load(), lineno=273, col_offset=8), [Str('Py_XDECREF(self->ob_completion);', lineno=273, col_offset=15)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Expr(Call(Name('Output', Load(), lineno=274, col_offset=8), [Str('Py_XDECREF(self->ob_interrupt);', lineno=274, col_offset=15)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=269, col_offset=4), FunctionDef('outputConvert', arguments([Name('self', Param(), lineno=276, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=277, col_offset=8), [Str('%sint %s_Convert(PyObject *v, %s *p_itself)', lineno=277, col_offset=15), Attribute(Name('self', Load(), lineno=277, col_offset=62), 'static', Load(), lineno=277, col_offset=62), Attribute(Name('self', Load(), lineno=277, col_offset=75), 'prefix', Load(), lineno=277, col_offset=75), Attribute(Name('self', Load(), lineno=277, col_offset=88), 'itselftype', Load(), lineno=277, col_offset=88)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=278, col_offset=8), [], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'outputCheckConvertArg', Load(), lineno=279, col_offset=8), [], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8), Expr(Call(Name('Output', Load(), lineno=280, col_offset=8), [Str('if (!%s_Check(v))', lineno=280, col_offset=15), Attribute(Name('self', Load(), lineno=280, col_offset=36), 'prefix', Load(), lineno=280, col_offset=36)], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=281, col_offset=8), [], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8), Expr(Call(Name('Output', Load(), lineno=282, col_offset=8), [Str('PyErr_SetString(PyExc_TypeError, "%s required");', lineno=282, col_offset=15), Attribute(Name('self', Load(), lineno=282, col_offset=67), 'name', Load(), lineno=282, col_offset=67)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Call(Name('Output', Load(), lineno=283, col_offset=8), [Str('return 0;', lineno=283, col_offset=15)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=284, col_offset=8), [], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Name('Output', Load(), lineno=285, col_offset=8), [Str('*p_itself = &((%s *)v)->ob_spb;', lineno=285, col_offset=15), Attribute(Name('self', Load(), lineno=285, col_offset=50), 'objecttype', Load(), lineno=285, col_offset=50)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8), Expr(Call(Name('Output', Load(), lineno=286, col_offset=8), [Str('return 1;', lineno=286, col_offset=15)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=287, col_offset=8), [], [], None, None, lineno=287, col_offset=8), lineno=287, col_offset=8)], [], lineno=276, col_offset=4)], [], lineno=209, col_offset=0), Assign([Name('sndobject', Store(), lineno=290, col_offset=0)], Call(Name('SndObjectDefinition', Load(), lineno=290, col_offset=12), [Str('SndChannel', lineno=290, col_offset=32), Str('SndCh', lineno=290, col_offset=46), Str('SndChannelPtr', lineno=290, col_offset=55)], [], None, None, lineno=290, col_offset=12), lineno=290, col_offset=0), Assign([Name('spbobject', Store(), lineno=291, col_offset=0)], Call(Name('SpbObjectDefinition', Load(), lineno=291, col_offset=12), [Str('SPB', lineno=291, col_offset=32), Str('SPBObj', lineno=291, col_offset=39), Str('SPBPtr', lineno=291, col_offset=49)], [], None, None, lineno=291, col_offset=12), lineno=291, col_offset=0), Assign([Name('spbgenerator', Store(), lineno=292, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=292, col_offset=15), [Str('SPB', lineno=292, col_offset=31), Str('_res = SPBObj_New(); return _res;', lineno=292, col_offset=38)], [], None, None, lineno=292, col_offset=15), lineno=292, col_offset=0), Assign([Name('module', Store(), lineno=293, col_offset=0)], Call(Name('MacModule', Load(), lineno=293, col_offset=9), [Str('_Snd', lineno=293, col_offset=19), Str('Snd', lineno=293, col_offset=27), Name('includestuff', Load(), lineno=293, col_offset=34), Name('finalstuff', Load(), lineno=293, col_offset=48), Name('initstuff', Load(), lineno=293, col_offset=60)], [], None, None, lineno=293, col_offset=9), lineno=293, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=294, col_offset=0), 'addobject', Load(), lineno=294, col_offset=0), [Name('sndobject', Load(), lineno=294, col_offset=17)], [], None, None, lineno=294, col_offset=0), lineno=294, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=295, col_offset=0), 'addobject', Load(), lineno=295, col_offset=0), [Name('spbobject', Load(), lineno=295, col_offset=17)], [], None, None, lineno=295, col_offset=0), lineno=295, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=296, col_offset=0), 'add', Load(), lineno=296, col_offset=0), [Name('spbgenerator', Load(), lineno=296, col_offset=11)], [], None, None, lineno=296, col_offset=0), lineno=296, col_offset=0), Assign([Name('functions', Store(), lineno=301, col_offset=0)], List([], Load(), lineno=301, col_offset=12), lineno=301, col_offset=0), Assign([Name('sndmethods', Store(), lineno=302, col_offset=0)], List([], Load(), lineno=302, col_offset=13), lineno=302, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=307, col_offset=0), [Str('sndgen.py', lineno=307, col_offset=9)], [], None, None, lineno=307, col_offset=0), lineno=307, col_offset=0), For(Name('f', Store(), lineno=312, col_offset=4), Name('functions', Load(), lineno=312, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=312, col_offset=20), 'add', Load(), lineno=312, col_offset=20), [Name('f', Load(), lineno=312, col_offset=31)], [], None, None, lineno=312, col_offset=20), lineno=312, col_offset=20)], [], lineno=312, col_offset=0), For(Name('f', Store(), lineno=313, col_offset=4), Name('sndmethods', Load(), lineno=313, col_offset=9), [Expr(Call(Attribute(Name('sndobject', Load(), lineno=313, col_offset=21), 'add', Load(), lineno=313, col_offset=21), [Name('f', Load(), lineno=313, col_offset=35)], [], None, None, lineno=313, col_offset=21), lineno=313, col_offset=21)], [], lineno=313, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=318, col_offset=0), [Str('_Sndmodule.c', lineno=318, col_offset=18)], [], None, None, lineno=318, col_offset=0), lineno=318, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=319, col_offset=0), 'generate', Load(), lineno=319, col_offset=0), [], [], None, None, lineno=319, col_offset=0), lineno=319, col_offset=0)])
