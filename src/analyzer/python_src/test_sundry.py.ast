Module([Expr(Str("Do a minimal test of all the modules that aren't otherwise tested.", lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), ClassDef('TestUntestedModules', [Attribute(Name('unittest', Load(), lineno=8, col_offset=26), 'TestCase', Load(), lineno=8, col_offset=26)], [FunctionDef('test_at_least_import_untested_modules', arguments([Name('self', Param(), lineno=9, col_offset=46)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=10, col_offset=13), 'check_warnings', Load(), lineno=10, col_offset=13), [], [keyword('quiet', Name('True', Load(), lineno=10, col_offset=47))], None, None, lineno=10, col_offset=13), None, [Import([alias('CGIHTTPServer', None)], lineno=11, col_offset=12), Import([alias('audiodev', None)], lineno=12, col_offset=12), Import([alias('bdb', None)], lineno=13, col_offset=12), Import([alias('cgitb', None)], lineno=14, col_offset=12), Import([alias('code', None)], lineno=15, col_offset=12), Import([alias('compileall', None)], lineno=16, col_offset=12), Import([alias('distutils.bcppcompiler', None)], lineno=18, col_offset=12), Import([alias('distutils.ccompiler', None)], lineno=19, col_offset=12), Import([alias('distutils.cygwinccompiler', None)], lineno=20, col_offset=12), Import([alias('distutils.emxccompiler', None)], lineno=21, col_offset=12), Import([alias('distutils.filelist', None)], lineno=22, col_offset=12), If(Call(Attribute(Attribute(Name('sys', Load(), lineno=23, col_offset=15), 'platform', Load(), lineno=23, col_offset=15), 'startswith', Load(), lineno=23, col_offset=15), [Str('win', lineno=23, col_offset=39)], [], None, None, lineno=23, col_offset=15), [Import([alias('distutils.msvccompiler', None)], lineno=24, col_offset=16)], [], lineno=23, col_offset=12), Import([alias('distutils.text_file', None)], lineno=25, col_offset=12), Import([alias('distutils.unixccompiler', None)], lineno=26, col_offset=12), Import([alias('distutils.command.bdist_dumb', None)], lineno=28, col_offset=12), If(Call(Attribute(Attribute(Name('sys', Load(), lineno=29, col_offset=15), 'platform', Load(), lineno=29, col_offset=15), 'startswith', Load(), lineno=29, col_offset=15), [Str('win', lineno=29, col_offset=39)], [], None, None, lineno=29, col_offset=15), [Import([alias('distutils.command.bdist_msi', None)], lineno=30, col_offset=16)], [], lineno=29, col_offset=12), Import([alias('distutils.command.bdist', None)], lineno=31, col_offset=12), Import([alias('distutils.command.bdist_rpm', None)], lineno=32, col_offset=12), Import([alias('distutils.command.bdist_wininst', None)], lineno=33, col_offset=12), Import([alias('distutils.command.build_clib', None)], lineno=34, col_offset=12), Import([alias('distutils.command.build_ext', None)], lineno=35, col_offset=12), Import([alias('distutils.command.build', None)], lineno=36, col_offset=12), Import([alias('distutils.command.clean', None)], lineno=37, col_offset=12), Import([alias('distutils.command.config', None)], lineno=38, col_offset=12), Import([alias('distutils.command.install_data', None)], lineno=39, col_offset=12), Import([alias('distutils.command.install_egg_info', None)], lineno=40, col_offset=12), Import([alias('distutils.command.install_headers', None)], lineno=41, col_offset=12), Import([alias('distutils.command.install_lib', None)], lineno=42, col_offset=12), Import([alias('distutils.command.register', None)], lineno=43, col_offset=12), Import([alias('distutils.command.sdist', None)], lineno=44, col_offset=12), Import([alias('distutils.command.upload', None)], lineno=45, col_offset=12), Import([alias('encodings', None)], lineno=47, col_offset=12), Import([alias('formatter', None)], lineno=48, col_offset=12), Import([alias('getpass', None)], lineno=49, col_offset=12), Import([alias('htmlentitydefs', None)], lineno=50, col_offset=12), Import([alias('ihooks', None)], lineno=51, col_offset=12), Import([alias('imghdr', None)], lineno=52, col_offset=12), Import([alias('imputil', None)], lineno=53, col_offset=12), Import([alias('keyword', None)], lineno=54, col_offset=12), Import([alias('linecache', None)], lineno=55, col_offset=12), Import([alias('macurl2path', None)], lineno=56, col_offset=12), Import([alias('mailcap', None)], lineno=57, col_offset=12), Import([alias('mimify', None)], lineno=58, col_offset=12), Import([alias('nntplib', None)], lineno=59, col_offset=12), Import([alias('nturl2path', None)], lineno=60, col_offset=12), Import([alias('opcode', None)], lineno=61, col_offset=12), Import([alias('os2emxpath', None)], lineno=62, col_offset=12), Import([alias('pdb', None)], lineno=63, col_offset=12), Import([alias('posixfile', None)], lineno=64, col_offset=12), Import([alias('pstats', None)], lineno=65, col_offset=12), Import([alias('py_compile', None)], lineno=66, col_offset=12), Import([alias('rexec', None)], lineno=67, col_offset=12), Import([alias('sched', None)], lineno=68, col_offset=12), Import([alias('sndhdr', None)], lineno=69, col_offset=12), Import([alias('statvfs', None)], lineno=70, col_offset=12), Import([alias('stringold', None)], lineno=71, col_offset=12), Import([alias('sunau', None)], lineno=72, col_offset=12), Import([alias('sunaudio', None)], lineno=73, col_offset=12), Import([alias('symbol', None)], lineno=74, col_offset=12), Import([alias('tabnanny', None)], lineno=75, col_offset=12), Import([alias('timeit', None)], lineno=76, col_offset=12), Import([alias('toaiff', None)], lineno=77, col_offset=12), Import([alias('token', None)], lineno=78, col_offset=12), TryExcept([Import([alias('tty', None)], lineno=80, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=81, col_offset=19), None, [If(Attribute(Name('test_support', Load(), lineno=82, col_offset=19), 'verbose', Load(), lineno=82, col_offset=19), [Print(None, [Str('skipping tty', lineno=83, col_offset=26)], True, lineno=83, col_offset=20)], [], lineno=82, col_offset=16)], lineno=81, col_offset=12)], [], lineno=79, col_offset=12), Import([alias('webbrowser', None)], lineno=88, col_offset=12), Import([alias('xml', None)], lineno=89, col_offset=12)], lineno=10, col_offset=13)], [], lineno=9, col_offset=4)], [], lineno=8, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=93, col_offset=4), 'run_unittest', Load(), lineno=93, col_offset=4), [Name('TestUntestedModules', Load(), lineno=93, col_offset=30)], [], None, None, lineno=93, col_offset=4), lineno=93, col_offset=4)], [], lineno=92, col_offset=0), If(Compare(Name('__name__', Load(), lineno=95, col_offset=3), [Eq()], [Str('__main__', lineno=95, col_offset=15)], lineno=95, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=96, col_offset=4), [], [], None, None, lineno=96, col_offset=4), lineno=96, col_offset=4)], [], lineno=95, col_offset=0)])
