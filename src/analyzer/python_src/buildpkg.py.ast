Module([Expr(Str("buildpkg.py -- Build OS X packages for Apple's Installer.app.\n\nThis is an experimental command-line tool for building packages to be\ninstalled with the Mac OS X Installer.app application.\n\nIt is much inspired by Apple's GUI tool called PackageMaker.app, that\nseems to be part of the OS X developer tools installed in the folder\n/Developer/Applications. But apparently there are other free tools to\ndo the same thing which are also named PackageMaker like Brian Hill's\none:\n\n  http://personalpages.tds.net/~brian_hill/packagemaker.html\n\nBeware of the multi-package features of Installer.app (which are not\nyet supported here) that can potentially screw-up your installation\nand are discussed in these articles on Stepwise:\n\n  http://www.stepwise.com/Articles/Technical/Packages/InstallerWoes.html\n  http://www.stepwise.com/Articles/Technical/Packages/InstallerOnX.html\n\nBeside using the PackageMaker class directly, by importing it inside\nanother module, say, there are additional ways of using this module:\nthe top-level buildPackage() function provides a shortcut to the same\nfeature and is also called when using this module from the command-\nline.\n\n    ****************************************************************\n    NOTE: For now you should be able to run this even on a non-OS X\n          system and get something similar to a package, but without\n          the real archive (needs pax) and bom files (needs mkbom)\n          inside! This is only for providing a chance for testing to\n          folks without OS X.\n    ****************************************************************\n\nTODO:\n  - test pre-process and post-process scripts (Python ones?)\n  - handle multi-volume packages (?)\n  - integrate into distutils (?)\n\nDinu C. Gherman,\ngherman@europemail.com\nNovember 2001\n\n!! USE AT YOUR OWN RISK !!\n", lineno=47, col_offset=-1), lineno=47, col_offset=-1), Assign([Name('__version__', Store(), lineno=49, col_offset=0)], Num(0.2, lineno=49, col_offset=14), lineno=49, col_offset=0), Assign([Name('__license__', Store(), lineno=50, col_offset=0)], Str('FreeBSD', lineno=50, col_offset=14), lineno=50, col_offset=0), Import([alias('os', None), alias('sys', None), alias('glob', None), alias('fnmatch', None), alias('shutil', None), alias('string', None), alias('copy', None), alias('getopt', None)], lineno=53, col_offset=0), ImportFrom('os.path', [alias('basename', None), alias('dirname', None), alias('join', None), alias('islink', None), alias('isdir', None), alias('isfile', None)], 0, lineno=54, col_offset=0), Assign([Name('Error', Store(), lineno=56, col_offset=0)], Str('buildpkg.Error', lineno=56, col_offset=8), lineno=56, col_offset=0), Assign([Name('PKG_INFO_FIELDS', Store(), lineno=58, col_offset=0)], Str('Title\nVersion\nDescription\nDefaultLocation\nDeleteWarning\nNeedsAuthorization\nDisableStop\nUseUserMask\nApplication\nRelocatable\nRequired\nInstallOnly\nRequiresReboot\nRootVolumeOnly\nLongFilenames\nLibrarySubdirectory\nAllowBackRev\nOverwritePermissions\nInstallFat', lineno=78, col_offset=-1), lineno=58, col_offset=0), ClassDef('GlobDirectoryWalker', [], [Expr(Str('A forward iterator that traverses files in a directory tree.', lineno=87, col_offset=4), lineno=87, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=89, col_offset=17), Name('directory', Param(), lineno=89, col_offset=23), Name('pattern', Param(), lineno=89, col_offset=34)], None, None, [Str('*', lineno=89, col_offset=42)]), [Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), 'stack', Store(), lineno=90, col_offset=8)], List([Name('directory', Load(), lineno=90, col_offset=22)], Load(), lineno=90, col_offset=21), lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), 'pattern', Store(), lineno=91, col_offset=8)], Name('pattern', Load(), lineno=91, col_offset=23), lineno=91, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=92, col_offset=8), 'files', Store(), lineno=92, col_offset=8)], List([], Load(), lineno=92, col_offset=21), lineno=92, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=93, col_offset=8), 'index', Store(), lineno=93, col_offset=8)], Num(0, lineno=93, col_offset=21), lineno=93, col_offset=8)], [], lineno=89, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=96, col_offset=20), Name('index', Param(), lineno=96, col_offset=26)], None, None, []), [While(Num(1, lineno=97, col_offset=14), [TryExcept([Assign([Name('file', Store(), lineno=99, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=99, col_offset=23), 'files', Load(), lineno=99, col_offset=23), Index(Attribute(Name('self', Load(), lineno=99, col_offset=34), 'index', Load(), lineno=99, col_offset=34)), Load(), lineno=99, col_offset=23), lineno=99, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=100, col_offset=16), 'index', Store(), lineno=100, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=100, col_offset=29), 'index', Load(), lineno=100, col_offset=29), Add(), Num(1, lineno=100, col_offset=42), lineno=100, col_offset=29), lineno=100, col_offset=16)], [ExceptHandler(Name('IndexError', Load(), lineno=101, col_offset=19), None, [Assign([Attribute(Name('self', Load(), lineno=103, col_offset=16), 'directory', Store(), lineno=103, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=103, col_offset=33), 'stack', Load(), lineno=103, col_offset=33), 'pop', Load(), lineno=103, col_offset=33), [], [], None, None, lineno=103, col_offset=33), lineno=103, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=104, col_offset=16), 'files', Store(), lineno=104, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=104, col_offset=29), 'listdir', Load(), lineno=104, col_offset=29), [Attribute(Name('self', Load(), lineno=104, col_offset=40), 'directory', Load(), lineno=104, col_offset=40)], [], None, None, lineno=104, col_offset=29), lineno=104, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=105, col_offset=16), 'index', Store(), lineno=105, col_offset=16)], Num(0, lineno=105, col_offset=29), lineno=105, col_offset=16)], lineno=101, col_offset=12)], [Assign([Name('fullname', Store(), lineno=108, col_offset=16)], Call(Name('join', Load(), lineno=108, col_offset=27), [Attribute(Name('self', Load(), lineno=108, col_offset=32), 'directory', Load(), lineno=108, col_offset=32), Name('file', Load(), lineno=108, col_offset=48)], [], None, None, lineno=108, col_offset=27), lineno=108, col_offset=16), If(BoolOp(And(), [Call(Name('isdir', Load(), lineno=109, col_offset=19), [Name('fullname', Load(), lineno=109, col_offset=25)], [], None, None, lineno=109, col_offset=19), UnaryOp(Not(), Call(Name('islink', Load(), lineno=109, col_offset=43), [Name('fullname', Load(), lineno=109, col_offset=50)], [], None, None, lineno=109, col_offset=43), lineno=109, col_offset=39)], lineno=109, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=110, col_offset=20), 'stack', Load(), lineno=110, col_offset=20), 'append', Load(), lineno=110, col_offset=20), [Name('fullname', Load(), lineno=110, col_offset=38)], [], None, None, lineno=110, col_offset=20), lineno=110, col_offset=20)], [], lineno=109, col_offset=16), If(Call(Attribute(Name('fnmatch', Load(), lineno=111, col_offset=19), 'fnmatch', Load(), lineno=111, col_offset=19), [Name('file', Load(), lineno=111, col_offset=35), Attribute(Name('self', Load(), lineno=111, col_offset=41), 'pattern', Load(), lineno=111, col_offset=41)], [], None, None, lineno=111, col_offset=19), [Return(Name('fullname', Load(), lineno=112, col_offset=27), lineno=112, col_offset=20)], [], lineno=111, col_offset=16)], lineno=98, col_offset=12)], [], lineno=97, col_offset=8)], [], lineno=96, col_offset=4)], [], lineno=86, col_offset=0), ClassDef('PackageMaker', [], [Expr(Str('A class to generate packages for Mac OS X.\n\n    This is intended to create OS X packages (with extension .pkg)\n    containing archives of arbitrary files that the Installer.app\n    will be able to handle.\n\n    As of now, PackageMaker instances need to be created with the\n    title, version and description of the package to be built.\n    The package is built after calling the instance method\n    build(root, **options). It has the same name as the constructor\'s\n    title argument plus a \'.pkg\' extension and is located in the same\n    parent folder that contains the root folder.\n\n    E.g. this will create a package folder /my/space/distutils.pkg/:\n\n      pm = PackageMaker("distutils", "1.0.2", "Python distutils.")\n      pm.build("/my/space/distutils")\n    ', lineno=137, col_offset=-1), lineno=137, col_offset=-1), Assign([Name('packageInfoDefaults', Store(), lineno=139, col_offset=4)], Dict([Str('Title', lineno=140, col_offset=8), Str('Version', lineno=141, col_offset=8), Str('Description', lineno=142, col_offset=8), Str('DefaultLocation', lineno=143, col_offset=8), Str('DeleteWarning', lineno=144, col_offset=8), Str('NeedsAuthorization', lineno=145, col_offset=8), Str('DisableStop', lineno=146, col_offset=8), Str('UseUserMask', lineno=147, col_offset=8), Str('Application', lineno=148, col_offset=8), Str('Relocatable', lineno=149, col_offset=8), Str('Required', lineno=150, col_offset=8), Str('InstallOnly', lineno=151, col_offset=8), Str('RequiresReboot', lineno=152, col_offset=8), Str('RootVolumeOnly', lineno=153, col_offset=8), Str('InstallFat', lineno=154, col_offset=8), Str('LongFilenames', lineno=155, col_offset=8), Str('LibrarySubdirectory', lineno=156, col_offset=8), Str('AllowBackRev', lineno=157, col_offset=8), Str('OverwritePermissions', lineno=158, col_offset=8)], [Name('None', Load(), lineno=140, col_offset=17), Name('None', Load(), lineno=141, col_offset=19), Str('', lineno=142, col_offset=23), Str('/', lineno=143, col_offset=27), Str('', lineno=144, col_offset=25), Str('NO', lineno=145, col_offset=30), Str('NO', lineno=146, col_offset=23), Str('YES', lineno=147, col_offset=23), Str('NO', lineno=148, col_offset=23), Str('YES', lineno=149, col_offset=23), Str('NO', lineno=150, col_offset=20), Str('NO', lineno=151, col_offset=23), Str('NO', lineno=152, col_offset=26), Str('NO', lineno=153, col_offset=27), Str('NO', lineno=154, col_offset=22), Str('YES', lineno=155, col_offset=25), Str('Standard', lineno=156, col_offset=31), Str('YES', lineno=157, col_offset=24), Str('NO', lineno=158, col_offset=32)], lineno=139, col_offset=26), lineno=139, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=162, col_offset=17), Name('title', Param(), lineno=162, col_offset=23), Name('version', Param(), lineno=162, col_offset=30), Name('desc', Param(), lineno=162, col_offset=39)], None, None, []), [Expr(Str('Init. with mandatory title/version/description arguments.', lineno=163, col_offset=8), lineno=163, col_offset=8), Assign([Name('info', Store(), lineno=165, col_offset=8)], Dict([Str('Title', lineno=165, col_offset=16), Str('Version', lineno=165, col_offset=32), Str('Description', lineno=165, col_offset=52)], [Name('title', Load(), lineno=165, col_offset=25), Name('version', Load(), lineno=165, col_offset=43), Name('desc', Load(), lineno=165, col_offset=67)], lineno=165, col_offset=15), lineno=165, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=166, col_offset=8), 'packageInfo', Store(), lineno=166, col_offset=8)], Call(Attribute(Name('copy', Load(), lineno=166, col_offset=27), 'deepcopy', Load(), lineno=166, col_offset=27), [Attribute(Name('self', Load(), lineno=166, col_offset=41), 'packageInfoDefaults', Load(), lineno=166, col_offset=41)], [], None, None, lineno=166, col_offset=27), lineno=166, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'packageInfo', Load(), lineno=167, col_offset=8), 'update', Load(), lineno=167, col_offset=8), [Name('info', Load(), lineno=167, col_offset=32)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=170, col_offset=8), 'packageRootFolder', Store(), lineno=170, col_offset=8)], Name('None', Load(), lineno=170, col_offset=33), lineno=170, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=171, col_offset=8), 'packageResourceFolder', Store(), lineno=171, col_offset=8)], Name('None', Load(), lineno=171, col_offset=37), lineno=171, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=172, col_offset=8), 'sourceFolder', Store(), lineno=172, col_offset=8)], Name('None', Load(), lineno=172, col_offset=28), lineno=172, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=173, col_offset=8), 'resourceFolder', Store(), lineno=173, col_offset=8)], Name('None', Load(), lineno=173, col_offset=30), lineno=173, col_offset=8)], [], lineno=162, col_offset=4), FunctionDef('build', arguments([Name('self', Param(), lineno=176, col_offset=14), Name('root', Param(), lineno=176, col_offset=20), Name('resources', Param(), lineno=176, col_offset=26)], None, 'options', [Name('None', Load(), lineno=176, col_offset=36)]), [Expr(Str("Create a package for some given root folder.\n\n        With no 'resources' argument set it is assumed to be the same\n        as the root directory. Option items replace the default ones\n        in the package info.\n        ", lineno=182, col_offset=-1), lineno=182, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=185, col_offset=8), 'sourceFolder', Store(), lineno=185, col_offset=8)], Name('root', Load(), lineno=185, col_offset=28), lineno=185, col_offset=8), If(Compare(Name('resources', Load(), lineno=186, col_offset=11), [Is()], [Name('None', Load(), lineno=186, col_offset=24)], lineno=186, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=187, col_offset=12), 'resourceFolder', Store(), lineno=187, col_offset=12)], Name('root', Load(), lineno=187, col_offset=34), lineno=187, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=189, col_offset=12), 'resourceFolder', Store(), lineno=189, col_offset=12)], Name('resources', Load(), lineno=189, col_offset=34), lineno=189, col_offset=12)], lineno=186, col_offset=8), Assign([Name('fields', Store(), lineno=192, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=17), 'packageInfoDefaults', Load(), lineno=192, col_offset=17), 'keys', Load(), lineno=192, col_offset=17), [], [], None, None, lineno=192, col_offset=17), lineno=192, col_offset=8), For(Tuple([Name('k', Store(), lineno=193, col_offset=12), Name('v', Store(), lineno=193, col_offset=15)], Store(), lineno=193, col_offset=12), Call(Attribute(Name('options', Load(), lineno=193, col_offset=20), 'items', Load(), lineno=193, col_offset=20), [], [], None, None, lineno=193, col_offset=20), [If(Compare(Name('k', Load(), lineno=194, col_offset=15), [In()], [Name('fields', Load(), lineno=194, col_offset=20)], lineno=194, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=195, col_offset=16), 'packageInfo', Load(), lineno=195, col_offset=16), Index(Name('k', Load(), lineno=195, col_offset=33)), Store(), lineno=195, col_offset=16)], Name('v', Load(), lineno=195, col_offset=38), lineno=195, col_offset=16)], [If(UnaryOp(Not(), Compare(Name('k', Load(), lineno=196, col_offset=21), [In()], [List([Str('OutputDir', lineno=196, col_offset=27)], Load(), lineno=196, col_offset=26)], lineno=196, col_offset=21), lineno=196, col_offset=17), [Raise(Name('Error', Load(), lineno=197, col_offset=22), BinOp(Str('Unknown package option: %s', lineno=197, col_offset=29), Mod(), Name('k', Load(), lineno=197, col_offset=60), lineno=197, col_offset=29), None, lineno=197, col_offset=16)], [], lineno=196, col_offset=17)], lineno=194, col_offset=12)], [], lineno=193, col_offset=8), Assign([Name('outputdir', Store(), lineno=200, col_offset=8)], Call(Attribute(Name('options', Load(), lineno=200, col_offset=20), 'get', Load(), lineno=200, col_offset=20), [Str('OutputDir', lineno=200, col_offset=32), Call(Attribute(Name('os', Load(), lineno=200, col_offset=45), 'getcwd', Load(), lineno=200, col_offset=45), [], [], None, None, lineno=200, col_offset=45)], [], None, None, lineno=200, col_offset=20), lineno=200, col_offset=8), Assign([Name('packageName', Store(), lineno=201, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=201, col_offset=22), 'packageInfo', Load(), lineno=201, col_offset=22), Index(Str('Title', lineno=201, col_offset=39)), Load(), lineno=201, col_offset=22), lineno=201, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=202, col_offset=8), 'PackageRootFolder', Store(), lineno=202, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=202, col_offset=33), 'path', Load(), lineno=202, col_offset=33), 'join', Load(), lineno=202, col_offset=33), [Name('outputdir', Load(), lineno=202, col_offset=46), BinOp(Name('packageName', Load(), lineno=202, col_offset=57), Add(), Str('.pkg', lineno=202, col_offset=71), lineno=202, col_offset=57)], [], None, None, lineno=202, col_offset=33), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), '_makeFolders', Load(), lineno=205, col_offset=8), [], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), '_addInfo', Load(), lineno=206, col_offset=8), [], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), '_addBom', Load(), lineno=207, col_offset=8), [], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), '_addArchive', Load(), lineno=208, col_offset=8), [], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), '_addResources', Load(), lineno=209, col_offset=8), [], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), '_addSizes', Load(), lineno=210, col_offset=8), [], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), '_addLoc', Load(), lineno=211, col_offset=8), [], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('_makeFolders', arguments([Name('self', Param(), lineno=214, col_offset=21)], None, None, []), [Expr(Str('Create package folder structure.', lineno=215, col_offset=8), lineno=215, col_offset=8), Assign([Name('contFolder', Store(), lineno=221, col_offset=8)], Call(Name('join', Load(), lineno=221, col_offset=21), [Attribute(Name('self', Load(), lineno=221, col_offset=26), 'PackageRootFolder', Load(), lineno=221, col_offset=26), Str('Contents', lineno=221, col_offset=50)], [], None, None, lineno=221, col_offset=21), lineno=221, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=222, col_offset=8), 'packageResourceFolder', Store(), lineno=222, col_offset=8)], Call(Name('join', Load(), lineno=222, col_offset=37), [Name('contFolder', Load(), lineno=222, col_offset=42), Str('Resources', lineno=222, col_offset=54)], [], None, None, lineno=222, col_offset=37), lineno=222, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=223, col_offset=8), 'mkdir', Load(), lineno=223, col_offset=8), [Attribute(Name('self', Load(), lineno=223, col_offset=17), 'PackageRootFolder', Load(), lineno=223, col_offset=17)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=224, col_offset=8), 'mkdir', Load(), lineno=224, col_offset=8), [Name('contFolder', Load(), lineno=224, col_offset=17)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=225, col_offset=8), 'mkdir', Load(), lineno=225, col_offset=8), [Attribute(Name('self', Load(), lineno=225, col_offset=17), 'packageResourceFolder', Load(), lineno=225, col_offset=17)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=214, col_offset=4), FunctionDef('_addInfo', arguments([Name('self', Param(), lineno=227, col_offset=17)], None, None, []), [Expr(Str('Write .info file containing installing options.', lineno=228, col_offset=8), lineno=228, col_offset=8), Assign([Name('info', Store(), lineno=232, col_offset=8)], Str('', lineno=232, col_offset=15), lineno=232, col_offset=8), For(Name('f', Store(), lineno=233, col_offset=12), Call(Attribute(Name('string', Load(), lineno=233, col_offset=17), 'split', Load(), lineno=233, col_offset=17), [Name('PKG_INFO_FIELDS', Load(), lineno=233, col_offset=30), Str('\n', lineno=233, col_offset=47)], [], None, None, lineno=233, col_offset=17), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=234, col_offset=15), 'packageInfo', Load(), lineno=234, col_offset=15), 'has_key', Load(), lineno=234, col_offset=15), [Name('f', Load(), lineno=234, col_offset=40)], [], None, None, lineno=234, col_offset=15), [Assign([Name('info', Store(), lineno=235, col_offset=16)], BinOp(Name('info', Load(), lineno=235, col_offset=23), Add(), BinOp(Str('%s %%(%s)s\n', lineno=235, col_offset=30), Mod(), Tuple([Name('f', Load(), lineno=235, col_offset=48), Name('f', Load(), lineno=235, col_offset=51)], Load(), lineno=235, col_offset=48), lineno=235, col_offset=30), lineno=235, col_offset=23), lineno=235, col_offset=16)], [], lineno=234, col_offset=12)], [], lineno=233, col_offset=8), Assign([Name('info', Store(), lineno=236, col_offset=8)], BinOp(Name('info', Load(), lineno=236, col_offset=15), Mod(), Attribute(Name('self', Load(), lineno=236, col_offset=22), 'packageInfo', Load(), lineno=236, col_offset=22), lineno=236, col_offset=15), lineno=236, col_offset=8), Assign([Name('base', Store(), lineno=237, col_offset=8)], BinOp(Subscript(Attribute(Name('self', Load(), lineno=237, col_offset=15), 'packageInfo', Load(), lineno=237, col_offset=15), Index(Str('Title', lineno=237, col_offset=32)), Load(), lineno=237, col_offset=15), Add(), Str('.info', lineno=237, col_offset=43), lineno=237, col_offset=15), lineno=237, col_offset=8), Assign([Name('path', Store(), lineno=238, col_offset=8)], Call(Name('join', Load(), lineno=238, col_offset=15), [Attribute(Name('self', Load(), lineno=238, col_offset=20), 'packageResourceFolder', Load(), lineno=238, col_offset=20), Name('base', Load(), lineno=238, col_offset=48)], [], None, None, lineno=238, col_offset=15), lineno=238, col_offset=8), Assign([Name('f', Store(), lineno=239, col_offset=8)], Call(Name('open', Load(), lineno=239, col_offset=12), [Name('path', Load(), lineno=239, col_offset=17), Str('w', lineno=239, col_offset=23)], [], None, None, lineno=239, col_offset=12), lineno=239, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=240, col_offset=8), 'write', Load(), lineno=240, col_offset=8), [Name('info', Load(), lineno=240, col_offset=16)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('_addBom', arguments([Name('self', Param(), lineno=243, col_offset=16)], None, None, []), [Expr(Str("Write .bom file containing 'Bill of Materials'.", lineno=244, col_offset=8), lineno=244, col_offset=8), TryExcept([Assign([Name('base', Store(), lineno=249, col_offset=12)], BinOp(Subscript(Attribute(Name('self', Load(), lineno=249, col_offset=19), 'packageInfo', Load(), lineno=249, col_offset=19), Index(Str('Title', lineno=249, col_offset=36)), Load(), lineno=249, col_offset=19), Add(), Str('.bom', lineno=249, col_offset=47), lineno=249, col_offset=19), lineno=249, col_offset=12), Assign([Name('bomPath', Store(), lineno=250, col_offset=12)], Call(Name('join', Load(), lineno=250, col_offset=22), [Attribute(Name('self', Load(), lineno=250, col_offset=27), 'packageResourceFolder', Load(), lineno=250, col_offset=27), Name('base', Load(), lineno=250, col_offset=55)], [], None, None, lineno=250, col_offset=22), lineno=250, col_offset=12), Assign([Name('cmd', Store(), lineno=251, col_offset=12)], BinOp(Str('mkbom %s %s', lineno=251, col_offset=18), Mod(), Tuple([Attribute(Name('self', Load(), lineno=251, col_offset=35), 'sourceFolder', Load(), lineno=251, col_offset=35), Name('bomPath', Load(), lineno=251, col_offset=54)], Load(), lineno=251, col_offset=35), lineno=251, col_offset=18), lineno=251, col_offset=12), Assign([Name('res', Store(), lineno=252, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=252, col_offset=18), 'system', Load(), lineno=252, col_offset=18), [Name('cmd', Load(), lineno=252, col_offset=28)], [], None, None, lineno=252, col_offset=18), lineno=252, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=254, col_offset=12)], lineno=253, col_offset=8)], [], lineno=248, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('_addArchive', arguments([Name('self', Param(), lineno=257, col_offset=20)], None, None, []), [Expr(Str('Write .pax.gz file, a compressed archive using pax/gzip.', lineno=258, col_offset=8), lineno=258, col_offset=8), Assign([Name('cwd', Store(), lineno=262, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=262, col_offset=14), 'getcwd', Load(), lineno=262, col_offset=14), [], [], None, None, lineno=262, col_offset=14), lineno=262, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=265, col_offset=8), 'chdir', Load(), lineno=265, col_offset=8), [Attribute(Name('self', Load(), lineno=265, col_offset=17), 'sourceFolder', Load(), lineno=265, col_offset=17)], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Assign([Name('base', Store(), lineno=266, col_offset=8)], BinOp(Call(Name('basename', Load(), lineno=266, col_offset=15), [Subscript(Attribute(Name('self', Load(), lineno=266, col_offset=24), 'packageInfo', Load(), lineno=266, col_offset=24), Index(Str('Title', lineno=266, col_offset=41)), Load(), lineno=266, col_offset=24)], [], None, None, lineno=266, col_offset=15), Add(), Str('.pax', lineno=266, col_offset=53), lineno=266, col_offset=15), lineno=266, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=267, col_offset=8), 'archPath', Store(), lineno=267, col_offset=8)], Call(Name('join', Load(), lineno=267, col_offset=24), [Attribute(Name('self', Load(), lineno=267, col_offset=29), 'packageResourceFolder', Load(), lineno=267, col_offset=29), Name('base', Load(), lineno=267, col_offset=57)], [], None, None, lineno=267, col_offset=24), lineno=267, col_offset=8), Assign([Name('cmd', Store(), lineno=268, col_offset=8)], BinOp(Str('pax -w -f %s %s', lineno=268, col_offset=14), Mod(), Tuple([Attribute(Name('self', Load(), lineno=268, col_offset=35), 'archPath', Load(), lineno=268, col_offset=35), Str('.', lineno=268, col_offset=50)], Load(), lineno=268, col_offset=35), lineno=268, col_offset=14), lineno=268, col_offset=8), Assign([Name('res', Store(), lineno=269, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=269, col_offset=14), 'system', Load(), lineno=269, col_offset=14), [Name('cmd', Load(), lineno=269, col_offset=24)], [], None, None, lineno=269, col_offset=14), lineno=269, col_offset=8), Assign([Name('cmd', Store(), lineno=272, col_offset=8)], BinOp(Str('gzip %s', lineno=272, col_offset=14), Mod(), Attribute(Name('self', Load(), lineno=272, col_offset=26), 'archPath', Load(), lineno=272, col_offset=26), lineno=272, col_offset=14), lineno=272, col_offset=8), Assign([Name('res', Store(), lineno=273, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=273, col_offset=14), 'system', Load(), lineno=273, col_offset=14), [Name('cmd', Load(), lineno=273, col_offset=24)], [], None, None, lineno=273, col_offset=14), lineno=273, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=274, col_offset=8), 'chdir', Load(), lineno=274, col_offset=8), [Name('cwd', Load(), lineno=274, col_offset=17)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('_addResources', arguments([Name('self', Param(), lineno=277, col_offset=22)], None, None, []), [Expr(Str('Add Welcome/ReadMe/License files, .lproj folders and scripts.', lineno=278, col_offset=8), lineno=278, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=284, col_offset=15), 'resourceFolder', Load(), lineno=284, col_offset=15), lineno=284, col_offset=11), [Return(None, lineno=285, col_offset=12)], [], lineno=284, col_offset=8), Assign([Name('allFiles', Store(), lineno=288, col_offset=8)], List([], Load(), lineno=288, col_offset=19), lineno=288, col_offset=8), For(Name('pat', Store(), lineno=289, col_offset=12), Call(Attribute(Name('string', Load(), lineno=289, col_offset=19), 'split', Load(), lineno=289, col_offset=19), [Str('*.txt *.html *.rtf *.rtfd *.lproj', lineno=289, col_offset=32), Str(' ', lineno=289, col_offset=69)], [], None, None, lineno=289, col_offset=19), [Assign([Name('pattern', Store(), lineno=290, col_offset=12)], Call(Name('join', Load(), lineno=290, col_offset=22), [Attribute(Name('self', Load(), lineno=290, col_offset=27), 'resourceFolder', Load(), lineno=290, col_offset=27), Name('pat', Load(), lineno=290, col_offset=48)], [], None, None, lineno=290, col_offset=22), lineno=290, col_offset=12), Assign([Name('allFiles', Store(), lineno=291, col_offset=12)], BinOp(Name('allFiles', Load(), lineno=291, col_offset=23), Add(), Call(Attribute(Name('glob', Load(), lineno=291, col_offset=34), 'glob', Load(), lineno=291, col_offset=34), [Name('pattern', Load(), lineno=291, col_offset=44)], [], None, None, lineno=291, col_offset=34), lineno=291, col_offset=23), lineno=291, col_offset=12)], [], lineno=289, col_offset=8), Assign([Name('packageName', Store(), lineno=297, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=297, col_offset=22), 'packageInfo', Load(), lineno=297, col_offset=22), Index(Str('Title', lineno=297, col_offset=39)), Load(), lineno=297, col_offset=22), lineno=297, col_offset=8), For(Name('pat', Store(), lineno=298, col_offset=12), Tuple([Str('*upgrade', lineno=298, col_offset=20), Str('*install', lineno=298, col_offset=32), Str('*flight', lineno=298, col_offset=44)], Load(), lineno=298, col_offset=20), [Assign([Name('pattern', Store(), lineno=299, col_offset=12)], Call(Name('join', Load(), lineno=299, col_offset=22), [Attribute(Name('self', Load(), lineno=299, col_offset=27), 'resourceFolder', Load(), lineno=299, col_offset=27), BinOp(Name('packageName', Load(), lineno=299, col_offset=48), Add(), Name('pat', Load(), lineno=299, col_offset=62), lineno=299, col_offset=48)], [], None, None, lineno=299, col_offset=22), lineno=299, col_offset=12), Assign([Name('pattern2', Store(), lineno=300, col_offset=12)], Call(Name('join', Load(), lineno=300, col_offset=23), [Attribute(Name('self', Load(), lineno=300, col_offset=28), 'resourceFolder', Load(), lineno=300, col_offset=28), Name('pat', Load(), lineno=300, col_offset=49)], [], None, None, lineno=300, col_offset=23), lineno=300, col_offset=12), Assign([Name('allFiles', Store(), lineno=301, col_offset=12)], BinOp(Name('allFiles', Load(), lineno=301, col_offset=23), Add(), Call(Attribute(Name('glob', Load(), lineno=301, col_offset=34), 'glob', Load(), lineno=301, col_offset=34), [Name('pattern', Load(), lineno=301, col_offset=44)], [], None, None, lineno=301, col_offset=34), lineno=301, col_offset=23), lineno=301, col_offset=12), Assign([Name('allFiles', Store(), lineno=302, col_offset=12)], BinOp(Name('allFiles', Load(), lineno=302, col_offset=23), Add(), Call(Attribute(Name('glob', Load(), lineno=302, col_offset=34), 'glob', Load(), lineno=302, col_offset=34), [Name('pattern2', Load(), lineno=302, col_offset=44)], [], None, None, lineno=302, col_offset=34), lineno=302, col_offset=23), lineno=302, col_offset=12)], [], lineno=298, col_offset=8), Assign([Name('files', Store(), lineno=305, col_offset=8)], List([], Load(), lineno=305, col_offset=16), lineno=305, col_offset=8), For(Name('f', Store(), lineno=306, col_offset=12), Name('allFiles', Load(), lineno=306, col_offset=17), [For(Name('s', Store(), lineno=307, col_offset=16), Tuple([Str('Welcome', lineno=307, col_offset=22), Str('License', lineno=307, col_offset=33), Str('ReadMe', lineno=307, col_offset=44)], Load(), lineno=307, col_offset=22), [If(Compare(Call(Attribute(Name('string', Load(), lineno=308, col_offset=19), 'find', Load(), lineno=308, col_offset=19), [Call(Name('basename', Load(), lineno=308, col_offset=31), [Name('f', Load(), lineno=308, col_offset=40)], [], None, None, lineno=308, col_offset=31), Name('s', Load(), lineno=308, col_offset=44)], [], None, None, lineno=308, col_offset=19), [Eq()], [Num(0, lineno=308, col_offset=50)], lineno=308, col_offset=19), [Expr(Call(Attribute(Name('files', Load(), lineno=309, col_offset=20), 'append', Load(), lineno=309, col_offset=20), [Tuple([Name('f', Load(), lineno=309, col_offset=34), Name('f', Load(), lineno=309, col_offset=37)], Load(), lineno=309, col_offset=34)], [], None, None, lineno=309, col_offset=20), lineno=309, col_offset=20)], [], lineno=308, col_offset=16)], [], lineno=307, col_offset=12), If(Compare(Subscript(Name('f', Load(), lineno=310, col_offset=15), Slice(Num(-6, lineno=310, col_offset=18), None, None), Load(), lineno=310, col_offset=15), [Eq()], [Str('.lproj', lineno=310, col_offset=25)], lineno=310, col_offset=15), [Expr(Call(Attribute(Name('files', Load(), lineno=311, col_offset=16), 'append', Load(), lineno=311, col_offset=16), [Tuple([Name('f', Load(), lineno=311, col_offset=30), Name('f', Load(), lineno=311, col_offset=33)], Load(), lineno=311, col_offset=30)], [], None, None, lineno=311, col_offset=16), lineno=311, col_offset=16)], [If(Compare(Call(Name('basename', Load(), lineno=312, col_offset=17), [Name('f', Load(), lineno=312, col_offset=26)], [], None, None, lineno=312, col_offset=17), [In()], [List([Str('pre_upgrade', lineno=312, col_offset=33), Str('pre_install', lineno=312, col_offset=48), Str('post_upgrade', lineno=312, col_offset=63), Str('post_install', lineno=312, col_offset=79)], Load(), lineno=312, col_offset=32)], lineno=312, col_offset=17), [Expr(Call(Attribute(Name('files', Load(), lineno=313, col_offset=16), 'append', Load(), lineno=313, col_offset=16), [Tuple([Name('f', Load(), lineno=313, col_offset=30), BinOp(BinOp(Name('packageName', Load(), lineno=313, col_offset=33), Add(), Str('.', lineno=313, col_offset=45), lineno=313, col_offset=33), Add(), Call(Name('basename', Load(), lineno=313, col_offset=49), [Name('f', Load(), lineno=313, col_offset=58)], [], None, None, lineno=313, col_offset=49), lineno=313, col_offset=48)], Load(), lineno=313, col_offset=30)], [], None, None, lineno=313, col_offset=16), lineno=313, col_offset=16)], [If(Compare(Call(Name('basename', Load(), lineno=314, col_offset=17), [Name('f', Load(), lineno=314, col_offset=26)], [], None, None, lineno=314, col_offset=17), [In()], [List([Str('preflight', lineno=314, col_offset=33), Str('postflight', lineno=314, col_offset=46)], Load(), lineno=314, col_offset=32)], lineno=314, col_offset=17), [Expr(Call(Attribute(Name('files', Load(), lineno=315, col_offset=16), 'append', Load(), lineno=315, col_offset=16), [Tuple([Name('f', Load(), lineno=315, col_offset=30), Name('f', Load(), lineno=315, col_offset=33)], Load(), lineno=315, col_offset=30)], [], None, None, lineno=315, col_offset=16), lineno=315, col_offset=16)], [If(Compare(Subscript(Name('f', Load(), lineno=316, col_offset=17), Slice(Num(-8, lineno=316, col_offset=20), None, None), Load(), lineno=316, col_offset=17), [Eq()], [Str('_upgrade', lineno=316, col_offset=27)], lineno=316, col_offset=17), [Expr(Call(Attribute(Name('files', Load(), lineno=317, col_offset=16), 'append', Load(), lineno=317, col_offset=16), [Tuple([Name('f', Load(), lineno=317, col_offset=30), Name('f', Load(), lineno=317, col_offset=32)], Load(), lineno=317, col_offset=30)], [], None, None, lineno=317, col_offset=16), lineno=317, col_offset=16)], [If(Compare(Subscript(Name('f', Load(), lineno=318, col_offset=17), Slice(Num(-8, lineno=318, col_offset=20), None, None), Load(), lineno=318, col_offset=17), [Eq()], [Str('_install', lineno=318, col_offset=27)], lineno=318, col_offset=17), [Expr(Call(Attribute(Name('files', Load(), lineno=319, col_offset=16), 'append', Load(), lineno=319, col_offset=16), [Tuple([Name('f', Load(), lineno=319, col_offset=30), Name('f', Load(), lineno=319, col_offset=32)], Load(), lineno=319, col_offset=30)], [], None, None, lineno=319, col_offset=16), lineno=319, col_offset=16)], [], lineno=318, col_offset=17)], lineno=316, col_offset=17)], lineno=314, col_offset=17)], lineno=312, col_offset=17)], lineno=310, col_offset=12)], [], lineno=306, col_offset=8), For(Tuple([Name('src', Store(), lineno=322, col_offset=12), Name('dst', Store(), lineno=322, col_offset=17)], Store(), lineno=322, col_offset=12), Name('files', Load(), lineno=322, col_offset=24), [Assign([Name('src', Store(), lineno=323, col_offset=12)], Call(Name('basename', Load(), lineno=323, col_offset=18), [Name('src', Load(), lineno=323, col_offset=27)], [], None, None, lineno=323, col_offset=18), lineno=323, col_offset=12), Assign([Name('dst', Store(), lineno=324, col_offset=12)], Call(Name('basename', Load(), lineno=324, col_offset=18), [Name('dst', Load(), lineno=324, col_offset=27)], [], None, None, lineno=324, col_offset=18), lineno=324, col_offset=12), Assign([Name('f', Store(), lineno=325, col_offset=12)], Call(Name('join', Load(), lineno=325, col_offset=16), [Attribute(Name('self', Load(), lineno=325, col_offset=21), 'resourceFolder', Load(), lineno=325, col_offset=21), Name('src', Load(), lineno=325, col_offset=42)], [], None, None, lineno=325, col_offset=16), lineno=325, col_offset=12), If(Call(Name('isfile', Load(), lineno=326, col_offset=15), [Name('f', Load(), lineno=326, col_offset=22)], [], None, None, lineno=326, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=327, col_offset=16), 'copy', Load(), lineno=327, col_offset=16), [Name('f', Load(), lineno=327, col_offset=28), Call(Attribute(Attribute(Name('os', Load(), lineno=327, col_offset=31), 'path', Load(), lineno=327, col_offset=31), 'join', Load(), lineno=327, col_offset=31), [Attribute(Name('self', Load(), lineno=327, col_offset=44), 'packageResourceFolder', Load(), lineno=327, col_offset=44), Name('dst', Load(), lineno=327, col_offset=72)], [], None, None, lineno=327, col_offset=31)], [], None, None, lineno=327, col_offset=16), lineno=327, col_offset=16)], [If(Call(Name('isdir', Load(), lineno=328, col_offset=17), [Name('f', Load(), lineno=328, col_offset=23)], [], None, None, lineno=328, col_offset=17), [Assign([Name('d', Store(), lineno=330, col_offset=16)], Call(Name('join', Load(), lineno=330, col_offset=20), [Attribute(Name('self', Load(), lineno=330, col_offset=25), 'packageResourceFolder', Load(), lineno=330, col_offset=25), Name('dst', Load(), lineno=330, col_offset=53)], [], None, None, lineno=330, col_offset=20), lineno=330, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=331, col_offset=16), 'mkdir', Load(), lineno=331, col_offset=16), [Name('d', Load(), lineno=331, col_offset=25)], [], None, None, lineno=331, col_offset=16), lineno=331, col_offset=16), Assign([Name('files', Store(), lineno=332, col_offset=16)], Call(Name('GlobDirectoryWalker', Load(), lineno=332, col_offset=24), [Name('f', Load(), lineno=332, col_offset=44)], [], None, None, lineno=332, col_offset=24), lineno=332, col_offset=16), For(Name('file', Store(), lineno=333, col_offset=20), Name('files', Load(), lineno=333, col_offset=28), [Expr(Call(Attribute(Name('shutil', Load(), lineno=334, col_offset=20), 'copy', Load(), lineno=334, col_offset=20), [Name('file', Load(), lineno=334, col_offset=32), Name('d', Load(), lineno=334, col_offset=38)], [], None, None, lineno=334, col_offset=20), lineno=334, col_offset=20)], [], lineno=333, col_offset=16)], [], lineno=328, col_offset=17)], lineno=326, col_offset=12)], [], lineno=322, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('_addSizes', arguments([Name('self', Param(), lineno=337, col_offset=18)], None, None, []), [Expr(Str('Write .sizes file with info about number and size of files.', lineno=338, col_offset=8), lineno=338, col_offset=8), Assign([Name('numFiles', Store(), lineno=345, col_offset=8)], Num(0, lineno=345, col_offset=19), lineno=345, col_offset=8), Assign([Name('installedSize', Store(), lineno=346, col_offset=8)], Num(0, lineno=346, col_offset=24), lineno=346, col_offset=8), Assign([Name('zippedSize', Store(), lineno=347, col_offset=8)], Num(0, lineno=347, col_offset=21), lineno=347, col_offset=8), Assign([Name('files', Store(), lineno=349, col_offset=8)], Call(Name('GlobDirectoryWalker', Load(), lineno=349, col_offset=16), [Attribute(Name('self', Load(), lineno=349, col_offset=36), 'sourceFolder', Load(), lineno=349, col_offset=36)], [], None, None, lineno=349, col_offset=16), lineno=349, col_offset=8), For(Name('f', Store(), lineno=350, col_offset=12), Name('files', Load(), lineno=350, col_offset=17), [Assign([Name('numFiles', Store(), lineno=351, col_offset=12)], BinOp(Name('numFiles', Load(), lineno=351, col_offset=23), Add(), Num(1, lineno=351, col_offset=34), lineno=351, col_offset=23), lineno=351, col_offset=12), Assign([Name('installedSize', Store(), lineno=352, col_offset=12)], BinOp(Name('installedSize', Load(), lineno=352, col_offset=28), Add(), Subscript(Call(Attribute(Name('os', Load(), lineno=352, col_offset=44), 'lstat', Load(), lineno=352, col_offset=44), [Name('f', Load(), lineno=352, col_offset=53)], [], None, None, lineno=352, col_offset=44), Index(Num(6, lineno=352, col_offset=56)), Load(), lineno=352, col_offset=44), lineno=352, col_offset=28), lineno=352, col_offset=12)], [], lineno=350, col_offset=8), TryExcept([Assign([Name('zippedSize', Store(), lineno=355, col_offset=12)], Subscript(Call(Attribute(Name('os', Load(), lineno=355, col_offset=25), 'stat', Load(), lineno=355, col_offset=25), [BinOp(Attribute(Name('self', Load(), lineno=355, col_offset=33), 'archPath', Load(), lineno=355, col_offset=33), Add(), Str('.gz', lineno=355, col_offset=48), lineno=355, col_offset=33)], [], None, None, lineno=355, col_offset=25), Index(Num(6, lineno=355, col_offset=55)), Load(), lineno=355, col_offset=25), lineno=355, col_offset=12)], [ExceptHandler(Name('OSError', Load(), lineno=356, col_offset=15), None, [Pass( lineno=357, col_offset=12)], lineno=356, col_offset=8)], [], lineno=354, col_offset=8), Assign([Name('base', Store(), lineno=358, col_offset=8)], BinOp(Subscript(Attribute(Name('self', Load(), lineno=358, col_offset=15), 'packageInfo', Load(), lineno=358, col_offset=15), Index(Str('Title', lineno=358, col_offset=32)), Load(), lineno=358, col_offset=15), Add(), Str('.sizes', lineno=358, col_offset=43), lineno=358, col_offset=15), lineno=358, col_offset=8), Assign([Name('f', Store(), lineno=359, col_offset=8)], Call(Name('open', Load(), lineno=359, col_offset=12), [Call(Name('join', Load(), lineno=359, col_offset=17), [Attribute(Name('self', Load(), lineno=359, col_offset=22), 'packageResourceFolder', Load(), lineno=359, col_offset=22), Name('base', Load(), lineno=359, col_offset=50)], [], None, None, lineno=359, col_offset=17), Str('w', lineno=359, col_offset=57)], [], None, None, lineno=359, col_offset=12), lineno=359, col_offset=8), Assign([Name('format', Store(), lineno=360, col_offset=8)], Str('NumFiles %d\nInstalledSize %d\nCompressedSize %d\n', lineno=360, col_offset=17), lineno=360, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=361, col_offset=8), 'write', Load(), lineno=361, col_offset=8), [BinOp(Name('format', Load(), lineno=361, col_offset=16), Mod(), Tuple([Name('numFiles', Load(), lineno=361, col_offset=26), Name('installedSize', Load(), lineno=361, col_offset=36), Name('zippedSize', Load(), lineno=361, col_offset=51)], Load(), lineno=361, col_offset=26), lineno=361, col_offset=16)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8)], [], lineno=337, col_offset=4), FunctionDef('_addLoc', arguments([Name('self', Param(), lineno=363, col_offset=16)], None, None, []), [Expr(Str('Write .loc file.', lineno=364, col_offset=8), lineno=364, col_offset=8), Assign([Name('base', Store(), lineno=365, col_offset=8)], BinOp(Subscript(Attribute(Name('self', Load(), lineno=365, col_offset=15), 'packageInfo', Load(), lineno=365, col_offset=15), Index(Str('Title', lineno=365, col_offset=32)), Load(), lineno=365, col_offset=15), Add(), Str('.loc', lineno=365, col_offset=43), lineno=365, col_offset=15), lineno=365, col_offset=8), Assign([Name('f', Store(), lineno=366, col_offset=8)], Call(Name('open', Load(), lineno=366, col_offset=12), [Call(Name('join', Load(), lineno=366, col_offset=17), [Attribute(Name('self', Load(), lineno=366, col_offset=22), 'packageResourceFolder', Load(), lineno=366, col_offset=22), Name('base', Load(), lineno=366, col_offset=50)], [], None, None, lineno=366, col_offset=17), Str('w', lineno=366, col_offset=57)], [], None, None, lineno=366, col_offset=12), lineno=366, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=367, col_offset=8), 'write', Load(), lineno=367, col_offset=8), [Str('/', lineno=367, col_offset=16)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8)], [], lineno=363, col_offset=4)], [], lineno=119, col_offset=0), FunctionDef('buildPackage', arguments([], 'args', 'options', []), [Expr(Str('A Shortcut function for building a package.', lineno=372, col_offset=4), lineno=372, col_offset=4), Assign([Name('o', Store(), lineno=374, col_offset=4)], Name('options', Load(), lineno=374, col_offset=8), lineno=374, col_offset=4), Assign([Tuple([Name('title', Store(), lineno=375, col_offset=4), Name('version', Store(), lineno=375, col_offset=11), Name('desc', Store(), lineno=375, col_offset=20)], Store(), lineno=375, col_offset=4)], Tuple([Subscript(Name('o', Load(), lineno=375, col_offset=27), Index(Str('Title', lineno=375, col_offset=29)), Load(), lineno=375, col_offset=27), Subscript(Name('o', Load(), lineno=375, col_offset=39), Index(Str('Version', lineno=375, col_offset=41)), Load(), lineno=375, col_offset=39), Subscript(Name('o', Load(), lineno=375, col_offset=53), Index(Str('Description', lineno=375, col_offset=55)), Load(), lineno=375, col_offset=53)], Load(), lineno=375, col_offset=27), lineno=375, col_offset=4), Assign([Name('pm', Store(), lineno=376, col_offset=4)], Call(Name('PackageMaker', Load(), lineno=376, col_offset=9), [Name('title', Load(), lineno=376, col_offset=22), Name('version', Load(), lineno=376, col_offset=29), Name('desc', Load(), lineno=376, col_offset=38)], [], None, None, lineno=376, col_offset=9), lineno=376, col_offset=4), Expr(Call(Name('apply', Load(), lineno=377, col_offset=4), [Attribute(Name('pm', Load(), lineno=377, col_offset=10), 'build', Load(), lineno=377, col_offset=10), Call(Name('list', Load(), lineno=377, col_offset=20), [Name('args', Load(), lineno=377, col_offset=25)], [], None, None, lineno=377, col_offset=20), Name('options', Load(), lineno=377, col_offset=32)], [], None, None, lineno=377, col_offset=4), lineno=377, col_offset=4)], [], lineno=371, col_offset=0), FunctionDef('test0', arguments([], None, None, []), [Expr(Str('Vanilla test for the distutils distribution.', lineno=385, col_offset=4), lineno=385, col_offset=4), Assign([Name('pm', Store(), lineno=387, col_offset=4)], Call(Name('PackageMaker', Load(), lineno=387, col_offset=9), [Str('distutils2', lineno=387, col_offset=22), Str('1.0.2', lineno=387, col_offset=36), Str('Python distutils package.', lineno=387, col_offset=45)], [], None, None, lineno=387, col_offset=9), lineno=387, col_offset=4), Expr(Call(Attribute(Name('pm', Load(), lineno=388, col_offset=4), 'build', Load(), lineno=388, col_offset=4), [Str('/Users/dinu/Desktop/distutils2', lineno=388, col_offset=13)], [], None, None, lineno=388, col_offset=4), lineno=388, col_offset=4)], [], lineno=384, col_offset=0), FunctionDef('test1', arguments([], None, None, []), [Expr(Str('Test for the reportlab distribution with modified options.', lineno=392, col_offset=4), lineno=392, col_offset=4), Assign([Name('pm', Store(), lineno=394, col_offset=4)], Call(Name('PackageMaker', Load(), lineno=394, col_offset=9), [Str('reportlab', lineno=394, col_offset=22), Str('1.10', lineno=394, col_offset=35), Str("ReportLab's Open Source PDF toolkit.", lineno=395, col_offset=22)], [], None, None, lineno=394, col_offset=9), lineno=394, col_offset=4), Expr(Call(Attribute(Name('pm', Load(), lineno=396, col_offset=4), 'build', Load(), lineno=396, col_offset=4), [], [keyword('root', Str('/Users/dinu/Desktop/reportlab', lineno=396, col_offset=18)), keyword('DefaultLocation', Str('/Applications/ReportLab', lineno=397, col_offset=29)), keyword('Relocatable', Str('YES', lineno=398, col_offset=25))], None, None, lineno=396, col_offset=4), lineno=396, col_offset=4)], [], lineno=391, col_offset=0), FunctionDef('test2', arguments([], None, None, []), [Expr(Str('Shortcut test for the reportlab distribution with modified options.', lineno=401, col_offset=4), lineno=401, col_offset=4), Expr(Call(Name('buildPackage', Load(), lineno=403, col_offset=4), [Str('/Users/dinu/Desktop/reportlab', lineno=404, col_offset=8)], [keyword('Title', Str('reportlab', lineno=405, col_offset=14)), keyword('Version', Str('1.10', lineno=406, col_offset=16)), keyword('Description', Str("ReportLab's Open Source PDF toolkit.", lineno=407, col_offset=20)), keyword('DefaultLocation', Str('/Applications/ReportLab', lineno=408, col_offset=24)), keyword('Relocatable', Str('YES', lineno=409, col_offset=20))], None, None, lineno=403, col_offset=4), lineno=403, col_offset=4)], [], lineno=400, col_offset=0), FunctionDef('printUsage', arguments([], None, None, []), [Expr(Str('Print usage message.', lineno=417, col_offset=4), lineno=417, col_offset=4), Assign([Name('format', Store(), lineno=419, col_offset=4)], Str('Usage: %s <opts1> [<opts2>] <root> [<resources>]', lineno=419, col_offset=13), lineno=419, col_offset=4), Print(None, [BinOp(Name('format', Load(), lineno=420, col_offset=10), Mod(), Call(Name('basename', Load(), lineno=420, col_offset=19), [Subscript(Attribute(Name('sys', Load(), lineno=420, col_offset=28), 'argv', Load(), lineno=420, col_offset=28), Index(Num(0, lineno=420, col_offset=37)), Load(), lineno=420, col_offset=28)], [], None, None, lineno=420, col_offset=19), lineno=420, col_offset=10)], True, lineno=420, col_offset=4), Print(None, [], True, lineno=421, col_offset=4), Print(None, [Str('       with arguments:', lineno=422, col_offset=10)], True, lineno=422, col_offset=4), Print(None, [Str('           (mandatory) root:         the package root folder', lineno=423, col_offset=10)], True, lineno=423, col_offset=4), Print(None, [Str('           (optional)  resources:    the package resources folder', lineno=424, col_offset=10)], True, lineno=424, col_offset=4), Print(None, [], True, lineno=425, col_offset=4), Print(None, [Str('       and options:', lineno=426, col_offset=10)], True, lineno=426, col_offset=4), Print(None, [Str('           (mandatory) opts1:', lineno=427, col_offset=10)], True, lineno=427, col_offset=4), Assign([Name('mandatoryKeys', Store(), lineno=428, col_offset=4)], Call(Attribute(Name('string', Load(), lineno=428, col_offset=20), 'split', Load(), lineno=428, col_offset=20), [Str('Title Version Description', lineno=428, col_offset=33), Str(' ', lineno=428, col_offset=62)], [], None, None, lineno=428, col_offset=20), lineno=428, col_offset=4), For(Name('k', Store(), lineno=429, col_offset=8), Name('mandatoryKeys', Load(), lineno=429, col_offset=13), [Print(None, [BinOp(Str('               --%s', lineno=430, col_offset=14), Mod(), Name('k', Load(), lineno=430, col_offset=38), lineno=430, col_offset=14)], True, lineno=430, col_offset=8)], [], lineno=429, col_offset=4), Print(None, [Str('           (optional) opts2: (with default values)', lineno=431, col_offset=10)], True, lineno=431, col_offset=4), Assign([Name('pmDefaults', Store(), lineno=433, col_offset=4)], Attribute(Name('PackageMaker', Load(), lineno=433, col_offset=17), 'packageInfoDefaults', Load(), lineno=433, col_offset=17), lineno=433, col_offset=4), Assign([Name('optionalKeys', Store(), lineno=434, col_offset=4)], Call(Attribute(Name('pmDefaults', Load(), lineno=434, col_offset=19), 'keys', Load(), lineno=434, col_offset=19), [], [], None, None, lineno=434, col_offset=19), lineno=434, col_offset=4), For(Name('k', Store(), lineno=435, col_offset=8), Name('mandatoryKeys', Load(), lineno=435, col_offset=13), [Expr(Call(Attribute(Name('optionalKeys', Load(), lineno=436, col_offset=8), 'remove', Load(), lineno=436, col_offset=8), [Name('k', Load(), lineno=436, col_offset=28)], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8)], [], lineno=435, col_offset=4), Expr(Call(Attribute(Name('optionalKeys', Load(), lineno=437, col_offset=4), 'sort', Load(), lineno=437, col_offset=4), [], [], None, None, lineno=437, col_offset=4), lineno=437, col_offset=4), Assign([Name('maxKeyLen', Store(), lineno=438, col_offset=4)], Call(Name('max', Load(), lineno=438, col_offset=16), [Call(Name('map', Load(), lineno=438, col_offset=20), [Name('len', Load(), lineno=438, col_offset=24), Name('optionalKeys', Load(), lineno=438, col_offset=29)], [], None, None, lineno=438, col_offset=20)], [], None, None, lineno=438, col_offset=16), lineno=438, col_offset=4), For(Name('k', Store(), lineno=439, col_offset=8), Name('optionalKeys', Load(), lineno=439, col_offset=13), [Assign([Name('format', Store(), lineno=440, col_offset=8)], Str('               --%%s:%s %%s', lineno=440, col_offset=17), lineno=440, col_offset=8), Assign([Name('format', Store(), lineno=441, col_offset=8)], BinOp(Name('format', Load(), lineno=441, col_offset=17), Mod(), BinOp(Str(' ', lineno=441, col_offset=27), Mult(), BinOp(Name('maxKeyLen', Load(), lineno=441, col_offset=34), Sub(), Call(Name('len', Load(), lineno=441, col_offset=44), [Name('k', Load(), lineno=441, col_offset=48)], [], None, None, lineno=441, col_offset=44), lineno=441, col_offset=34), lineno=441, col_offset=27), lineno=441, col_offset=17), lineno=441, col_offset=8), Print(None, [BinOp(Name('format', Load(), lineno=442, col_offset=14), Mod(), Tuple([Name('k', Load(), lineno=442, col_offset=24), Call(Name('repr', Load(), lineno=442, col_offset=27), [Subscript(Name('pmDefaults', Load(), lineno=442, col_offset=32), Index(Name('k', Load(), lineno=442, col_offset=43)), Load(), lineno=442, col_offset=32)], [], None, None, lineno=442, col_offset=27)], Load(), lineno=442, col_offset=24), lineno=442, col_offset=14)], True, lineno=442, col_offset=8)], [], lineno=439, col_offset=4)], [], lineno=416, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Expr(Str('Command-line interface.', lineno=446, col_offset=4), lineno=446, col_offset=4), Assign([Name('shortOpts', Store(), lineno=448, col_offset=4)], Str('', lineno=448, col_offset=16), lineno=448, col_offset=4), Assign([Name('keys', Store(), lineno=449, col_offset=4)], Call(Attribute(Attribute(Name('PackageMaker', Load(), lineno=449, col_offset=11), 'packageInfoDefaults', Load(), lineno=449, col_offset=11), 'keys', Load(), lineno=449, col_offset=11), [], [], None, None, lineno=449, col_offset=11), lineno=449, col_offset=4), Assign([Name('longOpts', Store(), lineno=450, col_offset=4)], Call(Name('map', Load(), lineno=450, col_offset=15), [Lambda(arguments([Name('k', Param(), lineno=450, col_offset=26)], None, None, []), BinOp(Name('k', Load(), lineno=450, col_offset=29), Add(), Str('=', lineno=450, col_offset=31), lineno=450, col_offset=29), lineno=450, col_offset=19), Name('keys', Load(), lineno=450, col_offset=36)], [], None, None, lineno=450, col_offset=15), lineno=450, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=453, col_offset=8), Name('args', Store(), lineno=453, col_offset=14)], Store(), lineno=453, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=453, col_offset=21), 'getopt', Load(), lineno=453, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=453, col_offset=35), 'argv', Load(), lineno=453, col_offset=35), Slice(Num(1, lineno=453, col_offset=44), None, None), Load(), lineno=453, col_offset=35), Name('shortOpts', Load(), lineno=453, col_offset=49), Name('longOpts', Load(), lineno=453, col_offset=60)], [], None, None, lineno=453, col_offset=21), lineno=453, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=454, col_offset=11), 'GetoptError', Load(), lineno=454, col_offset=11), Name('details', Store(), lineno=454, col_offset=31), [Print(None, [Name('details', Load(), lineno=455, col_offset=14)], True, lineno=455, col_offset=8), Expr(Call(Name('printUsage', Load(), lineno=456, col_offset=8), [], [], None, None, lineno=456, col_offset=8), lineno=456, col_offset=8), Return(None, lineno=457, col_offset=8)], lineno=454, col_offset=4)], [], lineno=452, col_offset=4), Assign([Name('optsDict', Store(), lineno=459, col_offset=4)], Dict([], [], lineno=459, col_offset=15), lineno=459, col_offset=4), For(Tuple([Name('k', Store(), lineno=460, col_offset=8), Name('v', Store(), lineno=460, col_offset=11)], Store(), lineno=460, col_offset=8), Name('opts', Load(), lineno=460, col_offset=16), [Assign([Subscript(Name('optsDict', Load(), lineno=461, col_offset=8), Index(Subscript(Name('k', Load(), lineno=461, col_offset=17), Slice(Num(2, lineno=461, col_offset=19), None, None), Load(), lineno=461, col_offset=17)), Store(), lineno=461, col_offset=8)], Name('v', Load(), lineno=461, col_offset=26), lineno=461, col_offset=8)], [], lineno=460, col_offset=4), Assign([Name('ok', Store(), lineno=463, col_offset=4)], Call(Attribute(Name('optsDict', Load(), lineno=463, col_offset=9), 'keys', Load(), lineno=463, col_offset=9), [], [], None, None, lineno=463, col_offset=9), lineno=463, col_offset=4), If(UnaryOp(Not(), Compare(Num(1, lineno=464, col_offset=12), [LtE(), LtE()], [Call(Name('len', Load(), lineno=464, col_offset=17), [Name('args', Load(), lineno=464, col_offset=21)], [], None, None, lineno=464, col_offset=17), Num(2, lineno=464, col_offset=30)], lineno=464, col_offset=12), lineno=464, col_offset=7), [Print(None, [Str('No argument given!', lineno=465, col_offset=14)], True, lineno=465, col_offset=8)], [If(UnaryOp(Not(), BoolOp(And(), [Compare(Str('Title', lineno=466, col_offset=14), [In()], [Name('ok', Load(), lineno=466, col_offset=25)], lineno=466, col_offset=14), Compare(Str('Version', lineno=467, col_offset=14), [In()], [Name('ok', Load(), lineno=467, col_offset=27)], lineno=467, col_offset=14), Compare(Str('Description', lineno=468, col_offset=14), [In()], [Name('ok', Load(), lineno=468, col_offset=31)], lineno=468, col_offset=14)], lineno=466, col_offset=14), lineno=466, col_offset=9), [Print(None, [Str('Missing mandatory option!', lineno=469, col_offset=14)], True, lineno=469, col_offset=8)], [Expr(Call(Name('apply', Load(), lineno=471, col_offset=8), [Name('buildPackage', Load(), lineno=471, col_offset=14), Name('args', Load(), lineno=471, col_offset=28), Name('optsDict', Load(), lineno=471, col_offset=34)], [], None, None, lineno=471, col_offset=8), lineno=471, col_offset=8), Return(None, lineno=472, col_offset=8)], lineno=466, col_offset=9)], lineno=464, col_offset=4), Expr(Call(Name('printUsage', Load(), lineno=474, col_offset=4), [], [], None, None, lineno=474, col_offset=4), lineno=474, col_offset=4)], [], lineno=445, col_offset=0), If(Compare(Name('__name__', Load(), lineno=483, col_offset=3), [Eq()], [Str('__main__', lineno=483, col_offset=15)], lineno=483, col_offset=3), [Expr(Call(Name('main', Load(), lineno=484, col_offset=4), [], [], None, None, lineno=484, col_offset=4), lineno=484, col_offset=4)], [], lineno=483, col_offset=0)])
