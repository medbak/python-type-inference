Module([Expr(Str('Freeze a Python script into a binary.\n\nusage: freeze [options...] script [module]...\n\nOptions:\n-p prefix:    This is the prefix used when you ran ``make install\'\'\n              in the Python build directory.\n              (If you never ran this, freeze won\'t work.)\n              The default is whatever sys.prefix evaluates to.\n              It can also be the top directory of the Python source\n              tree; then -P must point to the build tree.\n\n-P exec_prefix: Like -p but this is the \'exec_prefix\', used to\n                install objects etc.  The default is whatever sys.exec_prefix\n                evaluates to, or the -p argument if given.\n                If -p points to the Python source tree, -P must point\n                to the build tree, if different.\n\n-e extension: A directory containing additional .o files that\n              may be used to resolve modules.  This directory\n              should also have a Setup file describing the .o files.\n              On Windows, the name of a .INI file describing one\n              or more extensions is passed.\n              More than one -e option may be given.\n\n-o dir:       Directory where the output files are created; default \'.\'.\n\n-m:           Additional arguments are module names instead of filenames.\n\n-a package=dir: Additional directories to be added to the package\'s\n                __path__.  Used to simulate directories added by the\n                package at runtime (eg, by OpenGL and win32com).\n                More than one -a option may be given for each package.\n\n-l file:      Pass the file to the linker (windows only)\n\n-d:           Debugging mode for the module finder.\n\n-q:           Make the module finder totally quiet.\n\n-h:           Print this help message.\n\n-x module     Exclude the specified module. It will still be imported\n              by the frozen binary if it exists on the host system.\n\n-X module     Like -x, except the module can never be imported by\n              the frozen binary.\n\n-E:           Freeze will fail if any modules can\'t be found (that\n              were not excluded using -x or -X).\n\n-i filename:  Include a file with additional command line options.  Used\n              to prevent command lines growing beyond the capabilities of\n              the shell/OS.  All arguments specified in filename\n              are read and the -i option replaced with the parsed\n              params (note - quoting args in this file is NOT supported)\n\n-s subsystem: Specify the subsystem (For Windows only.);\n              \'console\' (default), \'windows\', \'service\' or \'com_dll\'\n\n-w:           Toggle Windows (NT or 95) behavior.\n              (For debugging only -- on a win32 platform, win32 behavior\n              is automatic.)\n\n-r prefix=f:  Replace path prefix.\n              Replace prefix with f in the source path references\n              contained in the resulting binary.\n\nArguments:\n\nscript:       The Python script to be executed by the resulting binary.\n\nmodule ...:   Additional Python modules (referenced by pathname)\n              that will be included in the resulting binary.  These\n              may be .py or .pyc files.  If -m is specified, these are\n              module names that are search in the path instead.\n\nNOTES:\n\nIn order to use freeze successfully, you must have built Python and\ninstalled it ("make install").\n\nThe script should not use modules provided only as shared libraries;\nif it does, the resulting binary is not self-contained.\n', lineno=87, col_offset=-1), lineno=87, col_offset=-1), Import([alias('modulefinder', None)], lineno=92, col_offset=0), Import([alias('getopt', None)], lineno=93, col_offset=0), Import([alias('os', None)], lineno=94, col_offset=0), Import([alias('sys', None)], lineno=95, col_offset=0), Import([alias('checkextensions', None)], lineno=100, col_offset=0), Import([alias('makeconfig', None)], lineno=101, col_offset=0), Import([alias('makefreeze', None)], lineno=102, col_offset=0), Import([alias('makemakefile', None)], lineno=103, col_offset=0), Import([alias('parsesetup', None)], lineno=104, col_offset=0), Import([alias('bkfile', None)], lineno=105, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('prefix', Store(), lineno=112, col_offset=4)], Name('None', Load(), lineno=112, col_offset=13), lineno=112, col_offset=4), Assign([Name('exec_prefix', Store(), lineno=113, col_offset=4)], Name('None', Load(), lineno=113, col_offset=18), lineno=113, col_offset=4), Assign([Name('extensions', Store(), lineno=114, col_offset=4)], List([], Load(), lineno=114, col_offset=17), lineno=114, col_offset=4), Assign([Name('exclude', Store(), lineno=115, col_offset=4)], List([], Load(), lineno=115, col_offset=14), lineno=115, col_offset=4), Assign([Name('addn_link', Store(), lineno=116, col_offset=4)], List([], Load(), lineno=116, col_offset=16), lineno=116, col_offset=4), Assign([Name('path', Store(), lineno=117, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=117, col_offset=11), 'path', Load(), lineno=117, col_offset=11), Slice(None, None, None), Load(), lineno=117, col_offset=11), lineno=117, col_offset=4), Assign([Name('modargs', Store(), lineno=118, col_offset=4)], Num(0, lineno=118, col_offset=14), lineno=118, col_offset=4), Assign([Name('debug', Store(), lineno=119, col_offset=4)], Num(1, lineno=119, col_offset=12), lineno=119, col_offset=4), Assign([Name('odir', Store(), lineno=120, col_offset=4)], Str('', lineno=120, col_offset=11), lineno=120, col_offset=4), Assign([Name('win', Store(), lineno=121, col_offset=4)], Compare(Subscript(Attribute(Name('sys', Load(), lineno=121, col_offset=10), 'platform', Load(), lineno=121, col_offset=10), Slice(None, Num(3, lineno=121, col_offset=24), None), Load(), lineno=121, col_offset=10), [Eq()], [Str('win', lineno=121, col_offset=30)], lineno=121, col_offset=10), lineno=121, col_offset=4), Assign([Name('replace_paths', Store(), lineno=122, col_offset=4)], List([], Load(), lineno=122, col_offset=20), lineno=122, col_offset=4), Assign([Name('error_if_any_missing', Store(), lineno=123, col_offset=4)], Num(0, lineno=123, col_offset=27), lineno=123, col_offset=4), If(Name('win', Load(), lineno=126, col_offset=7), [Assign([Name('exclude', Store(), lineno=126, col_offset=12)], BinOp(Name('exclude', Load(), lineno=126, col_offset=22), Add(), List([Str('dos', lineno=127, col_offset=8), Str('dospath', lineno=127, col_offset=15), Str('mac', lineno=127, col_offset=26), Str('macpath', lineno=127, col_offset=33), Str('macfs', lineno=127, col_offset=44), Str('MACFS', lineno=127, col_offset=53), Str('posix', lineno=127, col_offset=62), Str('os2', lineno=128, col_offset=8), Str('ce', lineno=128, col_offset=15), Str('riscos', lineno=128, col_offset=21), Str('riscosenviron', lineno=128, col_offset=31), Str('riscospath', lineno=128, col_offset=48)], Load(), lineno=126, col_offset=32), lineno=126, col_offset=22), lineno=126, col_offset=12)], [], lineno=126, col_offset=4), Assign([Name('fail_import', Store(), lineno=131, col_offset=4)], Subscript(Name('exclude', Load(), lineno=131, col_offset=18), Slice(None, None, None), Load(), lineno=131, col_offset=18), lineno=131, col_offset=4), Assign([Name('frozen_c', Store(), lineno=134, col_offset=4)], Str('frozen.c', lineno=134, col_offset=15), lineno=134, col_offset=4), Assign([Name('config_c', Store(), lineno=135, col_offset=4)], Str('config.c', lineno=135, col_offset=15), lineno=135, col_offset=4), Assign([Name('target', Store(), lineno=136, col_offset=4)], Str('a.out', lineno=136, col_offset=13), lineno=136, col_offset=4), Assign([Name('makefile', Store(), lineno=137, col_offset=4)], Str('Makefile', lineno=137, col_offset=15), lineno=137, col_offset=4), Assign([Name('subsystem', Store(), lineno=138, col_offset=4)], Str('console', lineno=138, col_offset=16), lineno=138, col_offset=4), Assign([Name('pos', Store(), lineno=142, col_offset=4)], Num(1, lineno=142, col_offset=10), lineno=142, col_offset=4), While(Compare(Name('pos', Load(), lineno=143, col_offset=10), [Lt()], [BinOp(Call(Name('len', Load(), lineno=143, col_offset=16), [Attribute(Name('sys', Load(), lineno=143, col_offset=20), 'argv', Load(), lineno=143, col_offset=20)], [], None, None, lineno=143, col_offset=16), Sub(), Num(1, lineno=143, col_offset=30), lineno=143, col_offset=16)], lineno=143, col_offset=10), [If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=145, col_offset=11), 'argv', Load(), lineno=145, col_offset=11), Index(Name('pos', Load(), lineno=145, col_offset=20)), Load(), lineno=145, col_offset=11), [Eq()], [Str('-i', lineno=145, col_offset=28)], lineno=145, col_offset=11), [TryExcept([Assign([Name('options', Store(), lineno=147, col_offset=16)], Call(Attribute(Call(Attribute(Call(Name('open', Load(), lineno=147, col_offset=26), [Subscript(Attribute(Name('sys', Load(), lineno=147, col_offset=31), 'argv', Load(), lineno=147, col_offset=31), Index(BinOp(Name('pos', Load(), lineno=147, col_offset=40), Add(), Num(1, lineno=147, col_offset=44), lineno=147, col_offset=40)), Load(), lineno=147, col_offset=31)], [], None, None, lineno=147, col_offset=26), 'read', Load(), lineno=147, col_offset=26), [], [], None, None, lineno=147, col_offset=26), 'split', Load(), lineno=147, col_offset=26), [], [], None, None, lineno=147, col_offset=26), lineno=147, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=148, col_offset=19), Name('why', Store(), lineno=148, col_offset=28), [Expr(Call(Name('usage', Load(), lineno=149, col_offset=16), [BinOp(Str("File name '%s' specified with the -i option can not be read - %s", lineno=149, col_offset=22), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=150, col_offset=48), 'argv', Load(), lineno=150, col_offset=48), Index(BinOp(Name('pos', Load(), lineno=150, col_offset=57), Add(), Num(1, lineno=150, col_offset=61), lineno=150, col_offset=57)), Load(), lineno=150, col_offset=48), Name('why', Load(), lineno=150, col_offset=65)], Load(), lineno=150, col_offset=48), lineno=149, col_offset=22)], [], None, None, lineno=149, col_offset=16), lineno=149, col_offset=16)], lineno=148, col_offset=12)], [], lineno=146, col_offset=12), Assign([Subscript(Attribute(Name('sys', Load(), lineno=152, col_offset=12), 'argv', Load(), lineno=152, col_offset=12), Slice(Name('pos', Load(), lineno=152, col_offset=21), BinOp(Name('pos', Load(), lineno=152, col_offset=25), Add(), Num(2, lineno=152, col_offset=29), lineno=152, col_offset=25), None), Store(), lineno=152, col_offset=12)], Name('options', Load(), lineno=152, col_offset=34), lineno=152, col_offset=12), Assign([Name('pos', Store(), lineno=153, col_offset=12)], BinOp(BinOp(Name('pos', Load(), lineno=153, col_offset=18), Add(), Call(Name('len', Load(), lineno=153, col_offset=24), [Name('options', Load(), lineno=153, col_offset=28)], [], None, None, lineno=153, col_offset=24), lineno=153, col_offset=18), Sub(), Num(1, lineno=153, col_offset=39), lineno=153, col_offset=37), lineno=153, col_offset=12)], [], lineno=145, col_offset=8), Assign([Name('pos', Store(), lineno=154, col_offset=8)], BinOp(Name('pos', Load(), lineno=154, col_offset=14), Add(), Num(1, lineno=154, col_offset=20), lineno=154, col_offset=14), lineno=154, col_offset=8)], [], lineno=143, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=158, col_offset=8), Name('args', Store(), lineno=158, col_offset=14)], Store(), lineno=158, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=158, col_offset=21), 'getopt', Load(), lineno=158, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=158, col_offset=35), 'argv', Load(), lineno=158, col_offset=35), Slice(Num(1, lineno=158, col_offset=44), None, None), Load(), lineno=158, col_offset=35), Str('r:a:dEe:hmo:p:P:qs:wX:x:l:', lineno=158, col_offset=49)], [], None, None, lineno=158, col_offset=21), lineno=158, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=159, col_offset=11), 'error', Load(), lineno=159, col_offset=11), Name('msg', Store(), lineno=159, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=160, col_offset=8), [BinOp(Str('getopt error: ', lineno=160, col_offset=14), Add(), Call(Name('str', Load(), lineno=160, col_offset=33), [Name('msg', Load(), lineno=160, col_offset=37)], [], None, None, lineno=160, col_offset=33), lineno=160, col_offset=14)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8)], lineno=159, col_offset=4)], [], lineno=157, col_offset=4), For(Tuple([Name('o', Store(), lineno=163, col_offset=8), Name('a', Store(), lineno=163, col_offset=11)], Store(), lineno=163, col_offset=8), Name('opts', Load(), lineno=163, col_offset=16), [If(Compare(Name('o', Load(), lineno=164, col_offset=11), [Eq()], [Str('-h', lineno=164, col_offset=16)], lineno=164, col_offset=11), [Print(None, [Name('__doc__', Load(), lineno=165, col_offset=18)], True, lineno=165, col_offset=12), Return(None, lineno=166, col_offset=12)], [], lineno=164, col_offset=8), If(Compare(Name('o', Load(), lineno=167, col_offset=11), [Eq()], [Str('-d', lineno=167, col_offset=16)], lineno=167, col_offset=11), [Assign([Name('debug', Store(), lineno=168, col_offset=12)], BinOp(Name('debug', Load(), lineno=168, col_offset=20), Add(), Num(1, lineno=168, col_offset=28), lineno=168, col_offset=20), lineno=168, col_offset=12)], [], lineno=167, col_offset=8), If(Compare(Name('o', Load(), lineno=169, col_offset=11), [Eq()], [Str('-e', lineno=169, col_offset=16)], lineno=169, col_offset=11), [Expr(Call(Attribute(Name('extensions', Load(), lineno=170, col_offset=12), 'append', Load(), lineno=170, col_offset=12), [Name('a', Load(), lineno=170, col_offset=30)], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=12)], [], lineno=169, col_offset=8), If(Compare(Name('o', Load(), lineno=171, col_offset=11), [Eq()], [Str('-m', lineno=171, col_offset=16)], lineno=171, col_offset=11), [Assign([Name('modargs', Store(), lineno=172, col_offset=12)], Num(1, lineno=172, col_offset=22), lineno=172, col_offset=12)], [], lineno=171, col_offset=8), If(Compare(Name('o', Load(), lineno=173, col_offset=11), [Eq()], [Str('-o', lineno=173, col_offset=16)], lineno=173, col_offset=11), [Assign([Name('odir', Store(), lineno=174, col_offset=12)], Name('a', Load(), lineno=174, col_offset=19), lineno=174, col_offset=12)], [], lineno=173, col_offset=8), If(Compare(Name('o', Load(), lineno=175, col_offset=11), [Eq()], [Str('-p', lineno=175, col_offset=16)], lineno=175, col_offset=11), [Assign([Name('prefix', Store(), lineno=176, col_offset=12)], Name('a', Load(), lineno=176, col_offset=21), lineno=176, col_offset=12)], [], lineno=175, col_offset=8), If(Compare(Name('o', Load(), lineno=177, col_offset=11), [Eq()], [Str('-P', lineno=177, col_offset=16)], lineno=177, col_offset=11), [Assign([Name('exec_prefix', Store(), lineno=178, col_offset=12)], Name('a', Load(), lineno=178, col_offset=26), lineno=178, col_offset=12)], [], lineno=177, col_offset=8), If(Compare(Name('o', Load(), lineno=179, col_offset=11), [Eq()], [Str('-q', lineno=179, col_offset=16)], lineno=179, col_offset=11), [Assign([Name('debug', Store(), lineno=180, col_offset=12)], Num(0, lineno=180, col_offset=20), lineno=180, col_offset=12)], [], lineno=179, col_offset=8), If(Compare(Name('o', Load(), lineno=181, col_offset=11), [Eq()], [Str('-w', lineno=181, col_offset=16)], lineno=181, col_offset=11), [Assign([Name('win', Store(), lineno=182, col_offset=12)], UnaryOp(Not(), Name('win', Load(), lineno=182, col_offset=22), lineno=182, col_offset=18), lineno=182, col_offset=12)], [], lineno=181, col_offset=8), If(Compare(Name('o', Load(), lineno=183, col_offset=11), [Eq()], [Str('-s', lineno=183, col_offset=16)], lineno=183, col_offset=11), [If(UnaryOp(Not(), Name('win', Load(), lineno=184, col_offset=19), lineno=184, col_offset=15), [Expr(Call(Name('usage', Load(), lineno=185, col_offset=16), [Str('-s subsystem option only on Windows', lineno=185, col_offset=22)], [], None, None, lineno=185, col_offset=16), lineno=185, col_offset=16)], [], lineno=184, col_offset=12), Assign([Name('subsystem', Store(), lineno=186, col_offset=12)], Name('a', Load(), lineno=186, col_offset=24), lineno=186, col_offset=12)], [], lineno=183, col_offset=8), If(Compare(Name('o', Load(), lineno=187, col_offset=11), [Eq()], [Str('-x', lineno=187, col_offset=16)], lineno=187, col_offset=11), [Expr(Call(Attribute(Name('exclude', Load(), lineno=188, col_offset=12), 'append', Load(), lineno=188, col_offset=12), [Name('a', Load(), lineno=188, col_offset=27)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [], lineno=187, col_offset=8), If(Compare(Name('o', Load(), lineno=189, col_offset=11), [Eq()], [Str('-X', lineno=189, col_offset=16)], lineno=189, col_offset=11), [Expr(Call(Attribute(Name('exclude', Load(), lineno=190, col_offset=12), 'append', Load(), lineno=190, col_offset=12), [Name('a', Load(), lineno=190, col_offset=27)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12), Expr(Call(Attribute(Name('fail_import', Load(), lineno=191, col_offset=12), 'append', Load(), lineno=191, col_offset=12), [Name('a', Load(), lineno=191, col_offset=31)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12)], [], lineno=189, col_offset=8), If(Compare(Name('o', Load(), lineno=192, col_offset=11), [Eq()], [Str('-E', lineno=192, col_offset=16)], lineno=192, col_offset=11), [Assign([Name('error_if_any_missing', Store(), lineno=193, col_offset=12)], Num(1, lineno=193, col_offset=35), lineno=193, col_offset=12)], [], lineno=192, col_offset=8), If(Compare(Name('o', Load(), lineno=194, col_offset=11), [Eq()], [Str('-l', lineno=194, col_offset=16)], lineno=194, col_offset=11), [Expr(Call(Attribute(Name('addn_link', Load(), lineno=195, col_offset=12), 'append', Load(), lineno=195, col_offset=12), [Name('a', Load(), lineno=195, col_offset=29)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12)], [], lineno=194, col_offset=8), If(Compare(Name('o', Load(), lineno=196, col_offset=11), [Eq()], [Str('-a', lineno=196, col_offset=16)], lineno=196, col_offset=11), [Expr(Call(Name('apply', Load(), lineno=197, col_offset=12), [Attribute(Name('modulefinder', Load(), lineno=197, col_offset=18), 'AddPackagePath', Load(), lineno=197, col_offset=18), Call(Name('tuple', Load(), lineno=197, col_offset=47), [Call(Attribute(Name('a', Load(), lineno=197, col_offset=53), 'split', Load(), lineno=197, col_offset=53), [Str('=', lineno=197, col_offset=61), Num(2, lineno=197, col_offset=66)], [], None, None, lineno=197, col_offset=53)], [], None, None, lineno=197, col_offset=47)], [], None, None, lineno=197, col_offset=12), lineno=197, col_offset=12)], [], lineno=196, col_offset=8), If(Compare(Name('o', Load(), lineno=198, col_offset=11), [Eq()], [Str('-r', lineno=198, col_offset=16)], lineno=198, col_offset=11), [Assign([Tuple([Name('f', Store(), lineno=199, col_offset=12), Name('r', Store(), lineno=199, col_offset=14)], Store(), lineno=199, col_offset=12)], Call(Attribute(Name('a', Load(), lineno=199, col_offset=18), 'split', Load(), lineno=199, col_offset=18), [Str('=', lineno=199, col_offset=26), Num(2, lineno=199, col_offset=31)], [], None, None, lineno=199, col_offset=18), lineno=199, col_offset=12), Expr(Call(Attribute(Name('replace_paths', Load(), lineno=200, col_offset=12), 'append', Load(), lineno=200, col_offset=12), [Tuple([Name('f', Load(), lineno=200, col_offset=35), Name('r', Load(), lineno=200, col_offset=37)], Load(), lineno=200, col_offset=35)], [], None, None, lineno=200, col_offset=12), lineno=200, col_offset=12)], [], lineno=198, col_offset=8)], [], lineno=163, col_offset=4), Assign([Name('implicits', Store(), lineno=203, col_offset=4)], List([], Load(), lineno=203, col_offset=16), lineno=203, col_offset=4), For(Name('module', Store(), lineno=204, col_offset=8), Tuple([Str('site', lineno=204, col_offset=19), Str('warnings', lineno=204, col_offset=27)], Load(), lineno=204, col_offset=19), [If(Compare(Name('module', Load(), lineno=205, col_offset=11), [NotIn()], [Name('exclude', Load(), lineno=205, col_offset=25)], lineno=205, col_offset=11), [Expr(Call(Attribute(Name('implicits', Load(), lineno=206, col_offset=12), 'append', Load(), lineno=206, col_offset=12), [Name('module', Load(), lineno=206, col_offset=29)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12)], [], lineno=205, col_offset=8)], [], lineno=204, col_offset=4), If(UnaryOp(Not(), Name('exec_prefix', Load(), lineno=209, col_offset=11), lineno=209, col_offset=7), [If(Name('prefix', Load(), lineno=210, col_offset=11), [Assign([Name('exec_prefix', Store(), lineno=211, col_offset=12)], Name('prefix', Load(), lineno=211, col_offset=26), lineno=211, col_offset=12)], [Assign([Name('exec_prefix', Store(), lineno=213, col_offset=12)], Attribute(Name('sys', Load(), lineno=213, col_offset=26), 'exec_prefix', Load(), lineno=213, col_offset=26), lineno=213, col_offset=12)], lineno=210, col_offset=8)], [], lineno=209, col_offset=4), If(UnaryOp(Not(), Name('prefix', Load(), lineno=214, col_offset=11), lineno=214, col_offset=7), [Assign([Name('prefix', Store(), lineno=215, col_offset=8)], Attribute(Name('sys', Load(), lineno=215, col_offset=17), 'prefix', Load(), lineno=215, col_offset=17), lineno=215, col_offset=8)], [], lineno=214, col_offset=4), Assign([Name('ishome', Store(), lineno=218, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=218, col_offset=13), 'path', Load(), lineno=218, col_offset=13), 'exists', Load(), lineno=218, col_offset=13), [Call(Attribute(Attribute(Name('os', Load(), lineno=218, col_offset=28), 'path', Load(), lineno=218, col_offset=28), 'join', Load(), lineno=218, col_offset=28), [Name('prefix', Load(), lineno=218, col_offset=41), Str('Python', lineno=218, col_offset=49), Str('ceval.c', lineno=218, col_offset=59)], [], None, None, lineno=218, col_offset=28)], [], None, None, lineno=218, col_offset=13), lineno=218, col_offset=4), Assign([Name('version', Store(), lineno=221, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=221, col_offset=14), 'version', Load(), lineno=221, col_offset=14), Slice(None, Num(3, lineno=221, col_offset=27), None), Load(), lineno=221, col_offset=14), lineno=221, col_offset=4), If(Name('win', Load(), lineno=222, col_offset=7), [Assign([Name('extensions_c', Store(), lineno=223, col_offset=8)], Str('frozen_extensions.c', lineno=223, col_offset=23), lineno=223, col_offset=8)], [], lineno=222, col_offset=4), If(Name('ishome', Load(), lineno=224, col_offset=7), [Print(None, [Str('(Using Python source directory)', lineno=225, col_offset=14)], True, lineno=225, col_offset=8), Assign([Name('binlib', Store(), lineno=226, col_offset=8)], Name('exec_prefix', Load(), lineno=226, col_offset=17), lineno=226, col_offset=8), Assign([Name('incldir', Store(), lineno=227, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=227, col_offset=18), 'path', Load(), lineno=227, col_offset=18), 'join', Load(), lineno=227, col_offset=18), [Name('prefix', Load(), lineno=227, col_offset=31), Str('Include', lineno=227, col_offset=39)], [], None, None, lineno=227, col_offset=18), lineno=227, col_offset=8), Assign([Name('config_h_dir', Store(), lineno=228, col_offset=8)], Name('exec_prefix', Load(), lineno=228, col_offset=23), lineno=228, col_offset=8), Assign([Name('config_c_in', Store(), lineno=229, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=229, col_offset=22), 'path', Load(), lineno=229, col_offset=22), 'join', Load(), lineno=229, col_offset=22), [Name('prefix', Load(), lineno=229, col_offset=35), Str('Modules', lineno=229, col_offset=43), Str('config.c.in', lineno=229, col_offset=54)], [], None, None, lineno=229, col_offset=22), lineno=229, col_offset=8), Assign([Name('frozenmain_c', Store(), lineno=230, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=230, col_offset=23), 'path', Load(), lineno=230, col_offset=23), 'join', Load(), lineno=230, col_offset=23), [Name('prefix', Load(), lineno=230, col_offset=36), Str('Python', lineno=230, col_offset=44), Str('frozenmain.c', lineno=230, col_offset=54)], [], None, None, lineno=230, col_offset=23), lineno=230, col_offset=8), Assign([Name('makefile_in', Store(), lineno=231, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=231, col_offset=22), 'path', Load(), lineno=231, col_offset=22), 'join', Load(), lineno=231, col_offset=22), [Name('exec_prefix', Load(), lineno=231, col_offset=35), Str('Makefile', lineno=231, col_offset=48)], [], None, None, lineno=231, col_offset=22), lineno=231, col_offset=8), If(Name('win', Load(), lineno=232, col_offset=11), [Assign([Name('frozendllmain_c', Store(), lineno=233, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=233, col_offset=30), 'path', Load(), lineno=233, col_offset=30), 'join', Load(), lineno=233, col_offset=30), [Name('exec_prefix', Load(), lineno=233, col_offset=43), Str('Pc\\frozen_dllmain.c', lineno=233, col_offset=56)], [], None, None, lineno=233, col_offset=30), lineno=233, col_offset=12)], [], lineno=232, col_offset=8)], [Assign([Name('binlib', Store(), lineno=235, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=235, col_offset=17), 'path', Load(), lineno=235, col_offset=17), 'join', Load(), lineno=235, col_offset=17), [Name('exec_prefix', Load(), lineno=235, col_offset=30), Str('lib', lineno=236, col_offset=30), BinOp(Str('python%s', lineno=236, col_offset=37), Mod(), Name('version', Load(), lineno=236, col_offset=50), lineno=236, col_offset=37), Str('config', lineno=236, col_offset=59)], [], None, None, lineno=235, col_offset=17), lineno=235, col_offset=8), Assign([Name('incldir', Store(), lineno=237, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=237, col_offset=18), 'path', Load(), lineno=237, col_offset=18), 'join', Load(), lineno=237, col_offset=18), [Name('prefix', Load(), lineno=237, col_offset=31), Str('include', lineno=237, col_offset=39), BinOp(Str('python%s', lineno=237, col_offset=50), Mod(), Name('version', Load(), lineno=237, col_offset=63), lineno=237, col_offset=50)], [], None, None, lineno=237, col_offset=18), lineno=237, col_offset=8), Assign([Name('config_h_dir', Store(), lineno=238, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=238, col_offset=23), 'path', Load(), lineno=238, col_offset=23), 'join', Load(), lineno=238, col_offset=23), [Name('exec_prefix', Load(), lineno=238, col_offset=36), Str('include', lineno=238, col_offset=49), BinOp(Str('python%s', lineno=239, col_offset=36), Mod(), Name('version', Load(), lineno=239, col_offset=49), lineno=239, col_offset=36)], [], None, None, lineno=238, col_offset=23), lineno=238, col_offset=8), Assign([Name('config_c_in', Store(), lineno=240, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=240, col_offset=22), 'path', Load(), lineno=240, col_offset=22), 'join', Load(), lineno=240, col_offset=22), [Name('binlib', Load(), lineno=240, col_offset=35), Str('config.c.in', lineno=240, col_offset=43)], [], None, None, lineno=240, col_offset=22), lineno=240, col_offset=8), Assign([Name('frozenmain_c', Store(), lineno=241, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=241, col_offset=23), 'path', Load(), lineno=241, col_offset=23), 'join', Load(), lineno=241, col_offset=23), [Name('binlib', Load(), lineno=241, col_offset=36), Str('frozenmain.c', lineno=241, col_offset=44)], [], None, None, lineno=241, col_offset=23), lineno=241, col_offset=8), Assign([Name('makefile_in', Store(), lineno=242, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=242, col_offset=22), 'path', Load(), lineno=242, col_offset=22), 'join', Load(), lineno=242, col_offset=22), [Name('binlib', Load(), lineno=242, col_offset=35), Str('Makefile', lineno=242, col_offset=43)], [], None, None, lineno=242, col_offset=22), lineno=242, col_offset=8), Assign([Name('frozendllmain_c', Store(), lineno=243, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=243, col_offset=26), 'path', Load(), lineno=243, col_offset=26), 'join', Load(), lineno=243, col_offset=26), [Name('binlib', Load(), lineno=243, col_offset=39), Str('frozen_dllmain.c', lineno=243, col_offset=47)], [], None, None, lineno=243, col_offset=26), lineno=243, col_offset=8)], lineno=224, col_offset=4), Assign([Name('supp_sources', Store(), lineno=244, col_offset=4)], List([], Load(), lineno=244, col_offset=19), lineno=244, col_offset=4), Assign([Name('defines', Store(), lineno=245, col_offset=4)], List([], Load(), lineno=245, col_offset=14), lineno=245, col_offset=4), Assign([Name('includes', Store(), lineno=246, col_offset=4)], List([BinOp(Str('-I', lineno=246, col_offset=16), Add(), Name('incldir', Load(), lineno=246, col_offset=23), lineno=246, col_offset=16), BinOp(Str('-I', lineno=246, col_offset=32), Add(), Name('config_h_dir', Load(), lineno=246, col_offset=39), lineno=246, col_offset=32)], Load(), lineno=246, col_offset=15), lineno=246, col_offset=4), Assign([Name('check_dirs', Store(), lineno=249, col_offset=4)], List([Name('prefix', Load(), lineno=249, col_offset=18), Name('exec_prefix', Load(), lineno=249, col_offset=26), Name('binlib', Load(), lineno=249, col_offset=39), Name('incldir', Load(), lineno=249, col_offset=47)], Load(), lineno=249, col_offset=17), lineno=249, col_offset=4), If(UnaryOp(Not(), Name('win', Load(), lineno=250, col_offset=11), lineno=250, col_offset=7), [Assign([Name('check_dirs', Store(), lineno=252, col_offset=8)], BinOp(Name('check_dirs', Load(), lineno=252, col_offset=21), Add(), Name('extensions', Load(), lineno=252, col_offset=34), lineno=252, col_offset=21), lineno=252, col_offset=8)], [], lineno=250, col_offset=4), For(Name('dir', Store(), lineno=253, col_offset=8), Name('check_dirs', Load(), lineno=253, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=254, col_offset=15), 'path', Load(), lineno=254, col_offset=15), 'exists', Load(), lineno=254, col_offset=15), [Name('dir', Load(), lineno=254, col_offset=30)], [], None, None, lineno=254, col_offset=15), lineno=254, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=255, col_offset=12), [BinOp(Str('needed directory %s not found', lineno=255, col_offset=18), Mod(), Name('dir', Load(), lineno=255, col_offset=52), lineno=255, col_offset=18)], [], None, None, lineno=255, col_offset=12), lineno=255, col_offset=12)], [], lineno=254, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=256, col_offset=15), 'path', Load(), lineno=256, col_offset=15), 'isdir', Load(), lineno=256, col_offset=15), [Name('dir', Load(), lineno=256, col_offset=29)], [], None, None, lineno=256, col_offset=15), lineno=256, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=257, col_offset=12), [BinOp(Str('%s: not a directory', lineno=257, col_offset=18), Mod(), Name('dir', Load(), lineno=257, col_offset=42), lineno=257, col_offset=18)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12)], [], lineno=256, col_offset=8)], [], lineno=253, col_offset=4), If(Name('win', Load(), lineno=258, col_offset=7), [Assign([Name('files', Store(), lineno=259, col_offset=8)], BinOp(Name('supp_sources', Load(), lineno=259, col_offset=16), Add(), Name('extensions', Load(), lineno=259, col_offset=31), lineno=259, col_offset=16), lineno=259, col_offset=8)], [Assign([Name('files', Store(), lineno=261, col_offset=8)], BinOp(List([Name('config_c_in', Load(), lineno=261, col_offset=17), Name('makefile_in', Load(), lineno=261, col_offset=30)], Load(), lineno=261, col_offset=16), Add(), Name('supp_sources', Load(), lineno=261, col_offset=45), lineno=261, col_offset=16), lineno=261, col_offset=8)], lineno=258, col_offset=4), For(Name('file', Store(), lineno=262, col_offset=8), Name('supp_sources', Load(), lineno=262, col_offset=16), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=263, col_offset=15), 'path', Load(), lineno=263, col_offset=15), 'exists', Load(), lineno=263, col_offset=15), [Name('file', Load(), lineno=263, col_offset=30)], [], None, None, lineno=263, col_offset=15), lineno=263, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=264, col_offset=12), [BinOp(Str('needed file %s not found', lineno=264, col_offset=18), Mod(), Name('file', Load(), lineno=264, col_offset=47), lineno=264, col_offset=18)], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=12)], [], lineno=263, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=265, col_offset=15), 'path', Load(), lineno=265, col_offset=15), 'isfile', Load(), lineno=265, col_offset=15), [Name('file', Load(), lineno=265, col_offset=30)], [], None, None, lineno=265, col_offset=15), lineno=265, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=266, col_offset=12), [BinOp(Str('%s: not a plain file', lineno=266, col_offset=18), Mod(), Name('file', Load(), lineno=266, col_offset=43), lineno=266, col_offset=18)], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=12)], [], lineno=265, col_offset=8)], [], lineno=262, col_offset=4), If(UnaryOp(Not(), Name('win', Load(), lineno=267, col_offset=11), lineno=267, col_offset=7), [For(Name('dir', Store(), lineno=268, col_offset=12), Name('extensions', Load(), lineno=268, col_offset=19), [Assign([Name('setup', Store(), lineno=269, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=269, col_offset=20), 'path', Load(), lineno=269, col_offset=20), 'join', Load(), lineno=269, col_offset=20), [Name('dir', Load(), lineno=269, col_offset=33), Str('Setup', lineno=269, col_offset=38)], [], None, None, lineno=269, col_offset=20), lineno=269, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=270, col_offset=19), 'path', Load(), lineno=270, col_offset=19), 'exists', Load(), lineno=270, col_offset=19), [Name('setup', Load(), lineno=270, col_offset=34)], [], None, None, lineno=270, col_offset=19), lineno=270, col_offset=15), [Expr(Call(Name('usage', Load(), lineno=271, col_offset=16), [BinOp(Str('needed file %s not found', lineno=271, col_offset=22), Mod(), Name('setup', Load(), lineno=271, col_offset=51), lineno=271, col_offset=22)], [], None, None, lineno=271, col_offset=16), lineno=271, col_offset=16)], [], lineno=270, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=272, col_offset=19), 'path', Load(), lineno=272, col_offset=19), 'isfile', Load(), lineno=272, col_offset=19), [Name('setup', Load(), lineno=272, col_offset=34)], [], None, None, lineno=272, col_offset=19), lineno=272, col_offset=15), [Expr(Call(Name('usage', Load(), lineno=273, col_offset=16), [BinOp(Str('%s: not a plain file', lineno=273, col_offset=22), Mod(), Name('setup', Load(), lineno=273, col_offset=47), lineno=273, col_offset=22)], [], None, None, lineno=273, col_offset=16), lineno=273, col_offset=16)], [], lineno=272, col_offset=12)], [], lineno=268, col_offset=8)], [], lineno=267, col_offset=4), If(UnaryOp(Not(), Name('args', Load(), lineno=276, col_offset=11), lineno=276, col_offset=7), [Expr(Call(Name('usage', Load(), lineno=277, col_offset=8), [Str('at least one filename argument required', lineno=277, col_offset=14)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=276, col_offset=4), For(Name('arg', Store(), lineno=280, col_offset=8), Name('args', Load(), lineno=280, col_offset=15), [If(Compare(Name('arg', Load(), lineno=281, col_offset=11), [Eq()], [Str('-m', lineno=281, col_offset=18)], lineno=281, col_offset=11), [Break( lineno=282, col_offset=12)], [], lineno=281, col_offset=8), If(Name('modargs', Load(), lineno=286, col_offset=11), [Break( lineno=287, col_offset=12)], [], lineno=286, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=288, col_offset=15), 'path', Load(), lineno=288, col_offset=15), 'exists', Load(), lineno=288, col_offset=15), [Name('arg', Load(), lineno=288, col_offset=30)], [], None, None, lineno=288, col_offset=15), lineno=288, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=289, col_offset=12), [BinOp(Str('argument %s not found', lineno=289, col_offset=18), Mod(), Name('arg', Load(), lineno=289, col_offset=44), lineno=289, col_offset=18)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=12)], [], lineno=288, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=290, col_offset=15), 'path', Load(), lineno=290, col_offset=15), 'isfile', Load(), lineno=290, col_offset=15), [Name('arg', Load(), lineno=290, col_offset=30)], [], None, None, lineno=290, col_offset=15), lineno=290, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=291, col_offset=12), [BinOp(Str('%s: not a plain file', lineno=291, col_offset=18), Mod(), Name('arg', Load(), lineno=291, col_offset=43), lineno=291, col_offset=18)], [], None, None, lineno=291, col_offset=12), lineno=291, col_offset=12)], [], lineno=290, col_offset=8)], [], lineno=280, col_offset=4), Assign([Name('scriptfile', Store(), lineno=294, col_offset=4)], Subscript(Name('args', Load(), lineno=294, col_offset=17), Index(Num(0, lineno=294, col_offset=22)), Load(), lineno=294, col_offset=17), lineno=294, col_offset=4), Assign([Name('modules', Store(), lineno=295, col_offset=4)], Subscript(Name('args', Load(), lineno=295, col_offset=14), Slice(Num(1, lineno=295, col_offset=19), None, None), Load(), lineno=295, col_offset=14), lineno=295, col_offset=4), Assign([Name('base', Store(), lineno=298, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=298, col_offset=11), 'path', Load(), lineno=298, col_offset=11), 'basename', Load(), lineno=298, col_offset=11), [Name('scriptfile', Load(), lineno=298, col_offset=28)], [], None, None, lineno=298, col_offset=11), lineno=298, col_offset=4), Assign([Tuple([Name('base', Store(), lineno=299, col_offset=4), Name('ext', Store(), lineno=299, col_offset=10)], Store(), lineno=299, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=299, col_offset=16), 'path', Load(), lineno=299, col_offset=16), 'splitext', Load(), lineno=299, col_offset=16), [Name('base', Load(), lineno=299, col_offset=33)], [], None, None, lineno=299, col_offset=16), lineno=299, col_offset=4), If(Name('base', Load(), lineno=300, col_offset=7), [If(Compare(Name('base', Load(), lineno=301, col_offset=11), [NotEq()], [Name('scriptfile', Load(), lineno=301, col_offset=19)], lineno=301, col_offset=11), [Assign([Name('target', Store(), lineno=302, col_offset=12)], Name('base', Load(), lineno=302, col_offset=21), lineno=302, col_offset=12)], [Assign([Name('target', Store(), lineno=304, col_offset=12)], BinOp(Name('base', Load(), lineno=304, col_offset=21), Add(), Str('.bin', lineno=304, col_offset=28), lineno=304, col_offset=21), lineno=304, col_offset=12)], lineno=301, col_offset=8)], [], lineno=300, col_offset=4), Assign([Name('base_frozen_c', Store(), lineno=307, col_offset=4)], Name('frozen_c', Load(), lineno=307, col_offset=20), lineno=307, col_offset=4), Assign([Name('base_config_c', Store(), lineno=308, col_offset=4)], Name('config_c', Load(), lineno=308, col_offset=20), lineno=308, col_offset=4), Assign([Name('base_target', Store(), lineno=309, col_offset=4)], Name('target', Load(), lineno=309, col_offset=18), lineno=309, col_offset=4), If(BoolOp(And(), [Name('odir', Load(), lineno=310, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=310, col_offset=20), 'path', Load(), lineno=310, col_offset=20), 'isdir', Load(), lineno=310, col_offset=20), [Name('odir', Load(), lineno=310, col_offset=34)], [], None, None, lineno=310, col_offset=20), lineno=310, col_offset=16)], lineno=310, col_offset=7), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=312, col_offset=12), 'mkdir', Load(), lineno=312, col_offset=12), [Name('odir', Load(), lineno=312, col_offset=21)], [], None, None, lineno=312, col_offset=12), lineno=312, col_offset=12), Print(None, [Str('Created output directory', lineno=313, col_offset=18), Name('odir', Load(), lineno=313, col_offset=46)], True, lineno=313, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=314, col_offset=15), 'error', Load(), lineno=314, col_offset=15), Name('msg', Store(), lineno=314, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=315, col_offset=12), [BinOp(Str('%s: mkdir failed (%s)', lineno=315, col_offset=18), Mod(), Tuple([Name('odir', Load(), lineno=315, col_offset=45), Call(Name('str', Load(), lineno=315, col_offset=51), [Name('msg', Load(), lineno=315, col_offset=55)], [], None, None, lineno=315, col_offset=51)], Load(), lineno=315, col_offset=45), lineno=315, col_offset=18)], [], None, None, lineno=315, col_offset=12), lineno=315, col_offset=12)], lineno=314, col_offset=8)], [], lineno=311, col_offset=8)], [], lineno=310, col_offset=4), Assign([Name('base', Store(), lineno=316, col_offset=4)], Str('', lineno=316, col_offset=11), lineno=316, col_offset=4), If(Name('odir', Load(), lineno=317, col_offset=7), [Assign([Name('base', Store(), lineno=318, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=318, col_offset=15), 'path', Load(), lineno=318, col_offset=15), 'join', Load(), lineno=318, col_offset=15), [Name('odir', Load(), lineno=318, col_offset=28), Str('', lineno=318, col_offset=34)], [], None, None, lineno=318, col_offset=15), lineno=318, col_offset=8), Assign([Name('frozen_c', Store(), lineno=319, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=319, col_offset=19), 'path', Load(), lineno=319, col_offset=19), 'join', Load(), lineno=319, col_offset=19), [Name('odir', Load(), lineno=319, col_offset=32), Name('frozen_c', Load(), lineno=319, col_offset=38)], [], None, None, lineno=319, col_offset=19), lineno=319, col_offset=8), Assign([Name('config_c', Store(), lineno=320, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=320, col_offset=19), 'path', Load(), lineno=320, col_offset=19), 'join', Load(), lineno=320, col_offset=19), [Name('odir', Load(), lineno=320, col_offset=32), Name('config_c', Load(), lineno=320, col_offset=38)], [], None, None, lineno=320, col_offset=19), lineno=320, col_offset=8), Assign([Name('target', Store(), lineno=321, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=321, col_offset=17), 'path', Load(), lineno=321, col_offset=17), 'join', Load(), lineno=321, col_offset=17), [Name('odir', Load(), lineno=321, col_offset=30), Name('target', Load(), lineno=321, col_offset=36)], [], None, None, lineno=321, col_offset=17), lineno=321, col_offset=8), Assign([Name('makefile', Store(), lineno=322, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=322, col_offset=19), 'path', Load(), lineno=322, col_offset=19), 'join', Load(), lineno=322, col_offset=19), [Name('odir', Load(), lineno=322, col_offset=32), Name('makefile', Load(), lineno=322, col_offset=38)], [], None, None, lineno=322, col_offset=19), lineno=322, col_offset=8), If(Name('win', Load(), lineno=323, col_offset=11), [Assign([Name('extensions_c', Store(), lineno=323, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=323, col_offset=31), 'path', Load(), lineno=323, col_offset=31), 'join', Load(), lineno=323, col_offset=31), [Name('odir', Load(), lineno=323, col_offset=44), Name('extensions_c', Load(), lineno=323, col_offset=50)], [], None, None, lineno=323, col_offset=31), lineno=323, col_offset=16)], [], lineno=323, col_offset=8)], [], lineno=317, col_offset=4), Assign([Name('custom_entry_point', Store(), lineno=328, col_offset=4)], Name('None', Load(), lineno=328, col_offset=25), lineno=328, col_offset=4), Assign([Name('python_entry_is_main', Store(), lineno=329, col_offset=4)], Num(1, lineno=329, col_offset=27), lineno=329, col_offset=4), If(Name('win', Load(), lineno=331, col_offset=7), [Import([alias('winmakemakefile', None)], lineno=332, col_offset=8), TryExcept([Assign([Tuple([Name('custom_entry_point', Store(), lineno=334, col_offset=12), Name('python_entry_is_main', Store(), lineno=334, col_offset=32)], Store(), lineno=334, col_offset=12)], Call(Attribute(Name('winmakemakefile', Load(), lineno=335, col_offset=16), 'get_custom_entry_point', Load(), lineno=335, col_offset=16), [Name('subsystem', Load(), lineno=335, col_offset=55)], [], None, None, lineno=335, col_offset=16), lineno=334, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=336, col_offset=15), Name('why', Store(), lineno=336, col_offset=27), [Expr(Call(Name('usage', Load(), lineno=337, col_offset=12), [Name('why', Load(), lineno=337, col_offset=18)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=12)], lineno=336, col_offset=8)], [], lineno=333, col_offset=8)], [], lineno=331, col_offset=4), Assign([Name('dir', Store(), lineno=343, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=343, col_offset=10), 'path', Load(), lineno=343, col_offset=10), 'dirname', Load(), lineno=343, col_offset=10), [Name('scriptfile', Load(), lineno=343, col_offset=26)], [], None, None, lineno=343, col_offset=10), lineno=343, col_offset=4), Assign([Subscript(Name('path', Load(), lineno=344, col_offset=4), Index(Num(0, lineno=344, col_offset=9)), Store(), lineno=344, col_offset=4)], Name('dir', Load(), lineno=344, col_offset=14), lineno=344, col_offset=4), Assign([Name('mf', Store(), lineno=345, col_offset=4)], Call(Attribute(Name('modulefinder', Load(), lineno=345, col_offset=9), 'ModuleFinder', Load(), lineno=345, col_offset=9), [Name('path', Load(), lineno=345, col_offset=35), Name('debug', Load(), lineno=345, col_offset=41), Name('exclude', Load(), lineno=345, col_offset=48), Name('replace_paths', Load(), lineno=345, col_offset=57)], [], None, None, lineno=345, col_offset=9), lineno=345, col_offset=4), If(BoolOp(And(), [Name('win', Load(), lineno=347, col_offset=7), Compare(Name('subsystem', Load(), lineno=347, col_offset=15), [Eq()], [Str('service', lineno=347, col_offset=26)], lineno=347, col_offset=15)], lineno=347, col_offset=7), [Assign([Name('mod', Store(), lineno=349, col_offset=8)], Call(Attribute(Name('mf', Load(), lineno=349, col_offset=14), 'add_module', Load(), lineno=349, col_offset=14), [Str('servicemanager', lineno=349, col_offset=28)], [], None, None, lineno=349, col_offset=14), lineno=349, col_offset=8), Assign([Attribute(Name('mod', Load(), lineno=350, col_offset=8), '__file__', Store(), lineno=350, col_offset=8)], Str('dummy.pyd', lineno=350, col_offset=21), lineno=350, col_offset=8)], [], lineno=347, col_offset=4), For(Name('mod', Store(), lineno=352, col_offset=8), Name('implicits', Load(), lineno=352, col_offset=15), [Expr(Call(Attribute(Name('mf', Load(), lineno=353, col_offset=8), 'import_hook', Load(), lineno=353, col_offset=8), [Name('mod', Load(), lineno=353, col_offset=23)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8)], [], lineno=352, col_offset=4), For(Name('mod', Store(), lineno=354, col_offset=8), Name('modules', Load(), lineno=354, col_offset=15), [If(Compare(Name('mod', Load(), lineno=355, col_offset=11), [Eq()], [Str('-m', lineno=355, col_offset=18)], lineno=355, col_offset=11), [Assign([Name('modargs', Store(), lineno=356, col_offset=12)], Num(1, lineno=356, col_offset=22), lineno=356, col_offset=12), Continue( lineno=357, col_offset=12)], [], lineno=355, col_offset=8), If(Name('modargs', Load(), lineno=358, col_offset=11), [If(Compare(Subscript(Name('mod', Load(), lineno=359, col_offset=15), Slice(Num(-2, lineno=359, col_offset=20), None, None), Load(), lineno=359, col_offset=15), [Eq()], [Str('.*', lineno=359, col_offset=27)], lineno=359, col_offset=15), [Expr(Call(Attribute(Name('mf', Load(), lineno=360, col_offset=16), 'import_hook', Load(), lineno=360, col_offset=16), [Subscript(Name('mod', Load(), lineno=360, col_offset=31), Slice(None, Num(-2, lineno=360, col_offset=37), None), Load(), lineno=360, col_offset=31), Name('None', Load(), lineno=360, col_offset=41), List([Str('*', lineno=360, col_offset=48)], Load(), lineno=360, col_offset=47)], [], None, None, lineno=360, col_offset=16), lineno=360, col_offset=16)], [Expr(Call(Attribute(Name('mf', Load(), lineno=362, col_offset=16), 'import_hook', Load(), lineno=362, col_offset=16), [Name('mod', Load(), lineno=362, col_offset=31)], [], None, None, lineno=362, col_offset=16), lineno=362, col_offset=16)], lineno=359, col_offset=12)], [Expr(Call(Attribute(Name('mf', Load(), lineno=364, col_offset=12), 'load_file', Load(), lineno=364, col_offset=12), [Name('mod', Load(), lineno=364, col_offset=25)], [], None, None, lineno=364, col_offset=12), lineno=364, col_offset=12)], lineno=358, col_offset=8)], [], lineno=354, col_offset=4), If(Name('python_entry_is_main', Load(), lineno=367, col_offset=7), [Expr(Call(Attribute(Name('mf', Load(), lineno=368, col_offset=8), 'run_script', Load(), lineno=368, col_offset=8), [Name('scriptfile', Load(), lineno=368, col_offset=22)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8)], [Expr(Call(Attribute(Name('mf', Load(), lineno=370, col_offset=8), 'load_file', Load(), lineno=370, col_offset=8), [Name('scriptfile', Load(), lineno=370, col_offset=21)], [], None, None, lineno=370, col_offset=8), lineno=370, col_offset=8)], lineno=367, col_offset=4), If(Compare(Name('debug', Load(), lineno=372, col_offset=7), [Gt()], [Num(0, lineno=372, col_offset=15)], lineno=372, col_offset=7), [Expr(Call(Attribute(Name('mf', Load(), lineno=373, col_offset=8), 'report', Load(), lineno=373, col_offset=8), [], [], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8), Print(None, [], True, lineno=374, col_offset=8)], [], lineno=372, col_offset=4), Assign([Name('dict', Store(), lineno=375, col_offset=4)], Attribute(Name('mf', Load(), lineno=375, col_offset=11), 'modules', Load(), lineno=375, col_offset=11), lineno=375, col_offset=4), If(Name('error_if_any_missing', Load(), lineno=377, col_offset=7), [Assign([Name('missing', Store(), lineno=378, col_offset=8)], Call(Attribute(Name('mf', Load(), lineno=378, col_offset=18), 'any_missing', Load(), lineno=378, col_offset=18), [], [], None, None, lineno=378, col_offset=18), lineno=378, col_offset=8), If(Name('missing', Load(), lineno=379, col_offset=11), [Expr(Call(Attribute(Name('sys', Load(), lineno=380, col_offset=12), 'exit', Load(), lineno=380, col_offset=12), [BinOp(Str('There are some missing modules: %r', lineno=380, col_offset=21), Mod(), Name('missing', Load(), lineno=380, col_offset=60), lineno=380, col_offset=21)], [], None, None, lineno=380, col_offset=12), lineno=380, col_offset=12)], [], lineno=379, col_offset=8)], [], lineno=377, col_offset=4), Assign([Name('files', Store(), lineno=383, col_offset=4)], Call(Attribute(Name('makefreeze', Load(), lineno=383, col_offset=12), 'makefreeze', Load(), lineno=383, col_offset=12), [Name('base', Load(), lineno=383, col_offset=34), Name('dict', Load(), lineno=383, col_offset=40), Name('debug', Load(), lineno=383, col_offset=46), Name('custom_entry_point', Load(), lineno=383, col_offset=53), Name('fail_import', Load(), lineno=384, col_offset=34)], [], None, None, lineno=383, col_offset=12), lineno=383, col_offset=4), Assign([Name('builtins', Store(), lineno=387, col_offset=4)], List([], Load(), lineno=387, col_offset=15), lineno=387, col_offset=4), Assign([Name('unknown', Store(), lineno=388, col_offset=4)], List([], Load(), lineno=388, col_offset=14), lineno=388, col_offset=4), Assign([Name('mods', Store(), lineno=389, col_offset=4)], Call(Attribute(Name('dict', Load(), lineno=389, col_offset=11), 'keys', Load(), lineno=389, col_offset=11), [], [], None, None, lineno=389, col_offset=11), lineno=389, col_offset=4), Expr(Call(Attribute(Name('mods', Load(), lineno=390, col_offset=4), 'sort', Load(), lineno=390, col_offset=4), [], [], None, None, lineno=390, col_offset=4), lineno=390, col_offset=4), For(Name('mod', Store(), lineno=391, col_offset=8), Name('mods', Load(), lineno=391, col_offset=15), [If(Attribute(Subscript(Name('dict', Load(), lineno=392, col_offset=11), Index(Name('mod', Load(), lineno=392, col_offset=16)), Load(), lineno=392, col_offset=11), '__code__', Load(), lineno=392, col_offset=11), [Continue( lineno=393, col_offset=12)], [], lineno=392, col_offset=8), If(UnaryOp(Not(), Attribute(Subscript(Name('dict', Load(), lineno=394, col_offset=15), Index(Name('mod', Load(), lineno=394, col_offset=20)), Load(), lineno=394, col_offset=15), '__file__', Load(), lineno=394, col_offset=15), lineno=394, col_offset=11), [Expr(Call(Attribute(Name('builtins', Load(), lineno=395, col_offset=12), 'append', Load(), lineno=395, col_offset=12), [Name('mod', Load(), lineno=395, col_offset=28)], [], None, None, lineno=395, col_offset=12), lineno=395, col_offset=12)], [Expr(Call(Attribute(Name('unknown', Load(), lineno=397, col_offset=12), 'append', Load(), lineno=397, col_offset=12), [Name('mod', Load(), lineno=397, col_offset=27)], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12)], lineno=394, col_offset=8)], [], lineno=391, col_offset=4), Assign([Name('addfiles', Store(), lineno=400, col_offset=4)], List([], Load(), lineno=400, col_offset=15), lineno=400, col_offset=4), Assign([Name('frozen_extensions', Store(), lineno=401, col_offset=4)], List([], Load(), lineno=401, col_offset=24), lineno=401, col_offset=4), If(BoolOp(Or(), [Name('unknown', Load(), lineno=402, col_offset=7), BoolOp(And(), [UnaryOp(Not(), Name('win', Load(), lineno=402, col_offset=23), lineno=402, col_offset=19), Name('builtins', Load(), lineno=402, col_offset=31)], lineno=402, col_offset=19)], lineno=402, col_offset=7), [If(UnaryOp(Not(), Name('win', Load(), lineno=403, col_offset=15), lineno=403, col_offset=11), [Assign([Tuple([Name('addfiles', Store(), lineno=404, col_offset=12), Name('addmods', Store(), lineno=404, col_offset=22)], Store(), lineno=404, col_offset=12)], Call(Attribute(Name('checkextensions', Load(), lineno=405, col_offset=22), 'checkextensions', Load(), lineno=405, col_offset=22), [BinOp(Name('unknown', Load(), lineno=405, col_offset=54), Add(), Name('builtins', Load(), lineno=405, col_offset=62), lineno=405, col_offset=54), Name('extensions', Load(), lineno=406, col_offset=54)], [], None, None, lineno=405, col_offset=22), lineno=404, col_offset=12), For(Name('mod', Store(), lineno=407, col_offset=16), Name('addmods', Load(), lineno=407, col_offset=23), [If(Compare(Name('mod', Load(), lineno=408, col_offset=19), [In()], [Name('unknown', Load(), lineno=408, col_offset=26)], lineno=408, col_offset=19), [Expr(Call(Attribute(Name('unknown', Load(), lineno=409, col_offset=20), 'remove', Load(), lineno=409, col_offset=20), [Name('mod', Load(), lineno=409, col_offset=35)], [], None, None, lineno=409, col_offset=20), lineno=409, col_offset=20), Expr(Call(Attribute(Name('builtins', Load(), lineno=410, col_offset=20), 'append', Load(), lineno=410, col_offset=20), [Name('mod', Load(), lineno=410, col_offset=36)], [], None, None, lineno=410, col_offset=20), lineno=410, col_offset=20)], [], lineno=408, col_offset=16)], [], lineno=407, col_offset=12)], [Import([alias('checkextensions_win32', None)], lineno=413, col_offset=12), Assign([Name('frozen_extensions', Store(), lineno=416, col_offset=12)], Call(Attribute(Name('checkextensions_win32', Load(), lineno=416, col_offset=32), 'checkextensions', Load(), lineno=416, col_offset=32), [Name('unknown', Load(), lineno=417, col_offset=16), Name('extensions', Load(), lineno=417, col_offset=25), Name('prefix', Load(), lineno=417, col_offset=37)], [], None, None, lineno=416, col_offset=32), lineno=416, col_offset=12), For(Name('mod', Store(), lineno=418, col_offset=16), Name('frozen_extensions', Load(), lineno=418, col_offset=23), [Expr(Call(Attribute(Name('unknown', Load(), lineno=419, col_offset=16), 'remove', Load(), lineno=419, col_offset=16), [Attribute(Name('mod', Load(), lineno=419, col_offset=31), 'name', Load(), lineno=419, col_offset=31)], [], None, None, lineno=419, col_offset=16), lineno=419, col_offset=16)], [], lineno=418, col_offset=12)], lineno=403, col_offset=8)], [], lineno=402, col_offset=4), If(Name('unknown', Load(), lineno=422, col_offset=7), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=423, col_offset=8), 'stderr', Load(), lineno=423, col_offset=8), 'write', Load(), lineno=423, col_offset=8), [BinOp(Str('Warning: unknown modules remain: %s\n', lineno=423, col_offset=25), Mod(), Call(Attribute(Str(' ', lineno=424, col_offset=25), 'join', Load(), lineno=424, col_offset=25), [Name('unknown', Load(), lineno=424, col_offset=34)], [], None, None, lineno=424, col_offset=25), lineno=423, col_offset=25)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8)], [], lineno=422, col_offset=4), If(Name('win', Load(), lineno=427, col_offset=7), [Import([alias('winmakemakefile', None), alias('checkextensions_win32', None)], lineno=429, col_offset=8), Expr(Call(Attribute(Name('checkextensions_win32', Load(), lineno=430, col_offset=8), 'write_extension_table', Load(), lineno=430, col_offset=8), [Name('extensions_c', Load(), lineno=430, col_offset=52), Name('frozen_extensions', Load(), lineno=431, col_offset=52)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Assign([Name('xtras', Store(), lineno=433, col_offset=8)], BinOp(List([Name('frozenmain_c', Load(), lineno=433, col_offset=17), Call(Attribute(Attribute(Name('os', Load(), lineno=433, col_offset=31), 'path', Load(), lineno=433, col_offset=31), 'basename', Load(), lineno=433, col_offset=31), [Name('frozen_c', Load(), lineno=433, col_offset=48)], [], None, None, lineno=433, col_offset=31), Name('frozendllmain_c', Load(), lineno=434, col_offset=17), Call(Attribute(Attribute(Name('os', Load(), lineno=434, col_offset=34), 'path', Load(), lineno=434, col_offset=34), 'basename', Load(), lineno=434, col_offset=34), [Name('extensions_c', Load(), lineno=434, col_offset=51)], [], None, None, lineno=434, col_offset=34)], Load(), lineno=433, col_offset=16), Add(), Name('files', Load(), lineno=434, col_offset=68), lineno=433, col_offset=16), lineno=433, col_offset=8), Assign([Name('maindefn', Store(), lineno=435, col_offset=8)], Call(Attribute(Name('checkextensions_win32', Load(), lineno=435, col_offset=19), 'CExtension', Load(), lineno=435, col_offset=19), [Str('__main__', lineno=435, col_offset=53), Name('xtras', Load(), lineno=435, col_offset=65)], [], None, None, lineno=435, col_offset=19), lineno=435, col_offset=8), Expr(Call(Attribute(Name('frozen_extensions', Load(), lineno=436, col_offset=8), 'append', Load(), lineno=436, col_offset=8), [Name('maindefn', Load(), lineno=436, col_offset=34)], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8), Assign([Name('outfp', Store(), lineno=437, col_offset=8)], Call(Name('open', Load(), lineno=437, col_offset=16), [Name('makefile', Load(), lineno=437, col_offset=21), Str('w', lineno=437, col_offset=31)], [], None, None, lineno=437, col_offset=16), lineno=437, col_offset=8), TryFinally([Expr(Call(Attribute(Name('winmakemakefile', Load(), lineno=439, col_offset=12), 'makemakefile', Load(), lineno=439, col_offset=12), [Name('outfp', Load(), lineno=439, col_offset=41), Call(Name('locals', Load(), lineno=440, col_offset=41), [], [], None, None, lineno=440, col_offset=41), Name('frozen_extensions', Load(), lineno=441, col_offset=41), Call(Attribute(Attribute(Name('os', Load(), lineno=442, col_offset=41), 'path', Load(), lineno=442, col_offset=41), 'basename', Load(), lineno=442, col_offset=41), [Name('target', Load(), lineno=442, col_offset=58)], [], None, None, lineno=442, col_offset=41)], [], None, None, lineno=439, col_offset=12), lineno=439, col_offset=12)], [Expr(Call(Attribute(Name('outfp', Load(), lineno=444, col_offset=12), 'close', Load(), lineno=444, col_offset=12), [], [], None, None, lineno=444, col_offset=12), lineno=444, col_offset=12)], lineno=438, col_offset=8), Return(None, lineno=445, col_offset=8)], [], lineno=427, col_offset=4), Expr(Call(Attribute(Name('builtins', Load(), lineno=448, col_offset=4), 'sort', Load(), lineno=448, col_offset=4), [], [], None, None, lineno=448, col_offset=4), lineno=448, col_offset=4), Assign([Name('infp', Store(), lineno=449, col_offset=4)], Call(Name('open', Load(), lineno=449, col_offset=11), [Name('config_c_in', Load(), lineno=449, col_offset=16)], [], None, None, lineno=449, col_offset=11), lineno=449, col_offset=4), Assign([Name('outfp', Store(), lineno=450, col_offset=4)], Call(Attribute(Name('bkfile', Load(), lineno=450, col_offset=12), 'open', Load(), lineno=450, col_offset=12), [Name('config_c', Load(), lineno=450, col_offset=24), Str('w', lineno=450, col_offset=34)], [], None, None, lineno=450, col_offset=12), lineno=450, col_offset=4), TryFinally([Expr(Call(Attribute(Name('makeconfig', Load(), lineno=452, col_offset=8), 'makeconfig', Load(), lineno=452, col_offset=8), [Name('infp', Load(), lineno=452, col_offset=30), Name('outfp', Load(), lineno=452, col_offset=36), Name('builtins', Load(), lineno=452, col_offset=43)], [], None, None, lineno=452, col_offset=8), lineno=452, col_offset=8)], [Expr(Call(Attribute(Name('outfp', Load(), lineno=454, col_offset=8), 'close', Load(), lineno=454, col_offset=8), [], [], None, None, lineno=454, col_offset=8), lineno=454, col_offset=8)], lineno=451, col_offset=4), Expr(Call(Attribute(Name('infp', Load(), lineno=455, col_offset=4), 'close', Load(), lineno=455, col_offset=4), [], [], None, None, lineno=455, col_offset=4), lineno=455, col_offset=4), Assign([Name('cflags', Store(), lineno=457, col_offset=4)], List([Str('$(OPT)', lineno=457, col_offset=14)], Load(), lineno=457, col_offset=13), lineno=457, col_offset=4), Assign([Name('cppflags', Store(), lineno=458, col_offset=4)], BinOp(Name('defines', Load(), lineno=458, col_offset=15), Add(), Name('includes', Load(), lineno=458, col_offset=25), lineno=458, col_offset=15), lineno=458, col_offset=4), Assign([Name('libs', Store(), lineno=459, col_offset=4)], List([Call(Attribute(Attribute(Name('os', Load(), lineno=459, col_offset=12), 'path', Load(), lineno=459, col_offset=12), 'join', Load(), lineno=459, col_offset=12), [Name('binlib', Load(), lineno=459, col_offset=25), Str('libpython$(VERSION).a', lineno=459, col_offset=33)], [], None, None, lineno=459, col_offset=12)], Load(), lineno=459, col_offset=11), lineno=459, col_offset=4), Assign([Name('somevars', Store(), lineno=461, col_offset=4)], Dict([], [], lineno=461, col_offset=15), lineno=461, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=462, col_offset=7), 'path', Load(), lineno=462, col_offset=7), 'exists', Load(), lineno=462, col_offset=7), [Name('makefile_in', Load(), lineno=462, col_offset=22)], [], None, None, lineno=462, col_offset=7), [Assign([Name('makevars', Store(), lineno=463, col_offset=8)], Call(Attribute(Name('parsesetup', Load(), lineno=463, col_offset=19), 'getmakevars', Load(), lineno=463, col_offset=19), [Name('makefile_in', Load(), lineno=463, col_offset=42)], [], None, None, lineno=463, col_offset=19), lineno=463, col_offset=8), For(Name('key', Store(), lineno=464, col_offset=12), Call(Attribute(Name('makevars', Load(), lineno=464, col_offset=19), 'keys', Load(), lineno=464, col_offset=19), [], [], None, None, lineno=464, col_offset=19), [Assign([Subscript(Name('somevars', Load(), lineno=465, col_offset=12), Index(Name('key', Load(), lineno=465, col_offset=21)), Store(), lineno=465, col_offset=12)], Subscript(Name('makevars', Load(), lineno=465, col_offset=28), Index(Name('key', Load(), lineno=465, col_offset=37)), Load(), lineno=465, col_offset=28), lineno=465, col_offset=12)], [], lineno=464, col_offset=8)], [], lineno=462, col_offset=4), Assign([Subscript(Name('somevars', Load(), lineno=467, col_offset=4), Index(Str('CFLAGS', lineno=467, col_offset=13)), Store(), lineno=467, col_offset=4)], Call(Attribute(Str(' ', lineno=467, col_offset=25), 'join', Load(), lineno=467, col_offset=25), [Name('cflags', Load(), lineno=467, col_offset=34)], [], None, None, lineno=467, col_offset=25), lineno=467, col_offset=4), Assign([Subscript(Name('somevars', Load(), lineno=468, col_offset=4), Index(Str('CPPFLAGS', lineno=468, col_offset=13)), Store(), lineno=468, col_offset=4)], Call(Attribute(Str(' ', lineno=468, col_offset=27), 'join', Load(), lineno=468, col_offset=27), [Name('cppflags', Load(), lineno=468, col_offset=36)], [], None, None, lineno=468, col_offset=27), lineno=468, col_offset=4), Assign([Name('files', Store(), lineno=469, col_offset=4)], BinOp(BinOp(BinOp(BinOp(BinOp(List([Name('base_config_c', Load(), lineno=469, col_offset=13), Name('base_frozen_c', Load(), lineno=469, col_offset=28)], Load(), lineno=469, col_offset=12), Add(), Name('files', Load(), lineno=470, col_offset=12), lineno=469, col_offset=12), Add(), Name('supp_sources', Load(), lineno=470, col_offset=20), lineno=470, col_offset=18), Add(), Name('addfiles', Load(), lineno=470, col_offset=36), lineno=470, col_offset=33), Add(), Name('libs', Load(), lineno=470, col_offset=47), lineno=470, col_offset=45), Add(), List([Str('$(MODLIBS)', lineno=471, col_offset=13), Str('$(LIBS)', lineno=471, col_offset=27), Str('$(SYSLIBS)', lineno=471, col_offset=38)], Load(), lineno=471, col_offset=12), lineno=470, col_offset=52), lineno=469, col_offset=4), Assign([Name('outfp', Store(), lineno=473, col_offset=4)], Call(Attribute(Name('bkfile', Load(), lineno=473, col_offset=12), 'open', Load(), lineno=473, col_offset=12), [Name('makefile', Load(), lineno=473, col_offset=24), Str('w', lineno=473, col_offset=34)], [], None, None, lineno=473, col_offset=12), lineno=473, col_offset=4), TryFinally([Expr(Call(Attribute(Name('makemakefile', Load(), lineno=475, col_offset=8), 'makemakefile', Load(), lineno=475, col_offset=8), [Name('outfp', Load(), lineno=475, col_offset=34), Name('somevars', Load(), lineno=475, col_offset=41), Name('files', Load(), lineno=475, col_offset=51), Name('base_target', Load(), lineno=475, col_offset=58)], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8)], [Expr(Call(Attribute(Name('outfp', Load(), lineno=477, col_offset=8), 'close', Load(), lineno=477, col_offset=8), [], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8)], lineno=474, col_offset=4), If(Name('odir', Load(), lineno=481, col_offset=7), [Print(None, [Str('Now run "make" in', lineno=482, col_offset=14), Name('odir', Load(), lineno=482, col_offset=35)], False, lineno=482, col_offset=8), Print(None, [Str('to build the target:', lineno=483, col_offset=14), Name('base_target', Load(), lineno=483, col_offset=38)], True, lineno=483, col_offset=8)], [Print(None, [Str('Now run "make" to build the target:', lineno=485, col_offset=14), Name('base_target', Load(), lineno=485, col_offset=53)], True, lineno=485, col_offset=8)], lineno=481, col_offset=4)], [], lineno=110, col_offset=0), FunctionDef('usage', arguments([Name('msg', Param(), lineno=490, col_offset=10)], None, None, []), [Assign([Attribute(Name('sys', Load(), lineno=491, col_offset=4), 'stdout', Store(), lineno=491, col_offset=4)], Attribute(Name('sys', Load(), lineno=491, col_offset=17), 'stderr', Load(), lineno=491, col_offset=17), lineno=491, col_offset=4), Print(None, [Str('Error:', lineno=492, col_offset=10), Name('msg', Load(), lineno=492, col_offset=20)], True, lineno=492, col_offset=4), Print(None, [BinOp(Str("Use ``%s -h'' for help", lineno=493, col_offset=10), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=493, col_offset=37), 'argv', Load(), lineno=493, col_offset=37), Index(Num(0, lineno=493, col_offset=46)), Load(), lineno=493, col_offset=37), lineno=493, col_offset=10)], True, lineno=493, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=494, col_offset=4), 'exit', Load(), lineno=494, col_offset=4), [Num(2, lineno=494, col_offset=13)], [], None, None, lineno=494, col_offset=4), lineno=494, col_offset=4)], [], lineno=490, col_offset=0), Expr(Call(Name('main', Load(), lineno=497, col_offset=0), [], [], None, None, lineno=497, col_offset=0), lineno=497, col_offset=0)])
