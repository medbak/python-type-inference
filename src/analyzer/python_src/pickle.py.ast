Module([Expr(Str('Create portable serialized representations of Python objects.\n\nSee module cPickle for a (much) faster implementation.\nSee module copy_reg for a mechanism for registering custom picklers.\nSee module pickletools source for extensive comments.\n\nClasses:\n\n    Pickler\n    Unpickler\n\nFunctions:\n\n    dump(object, file)\n    dumps(object) -> string\n    load(file) -> object\n    loads(string) -> object\n\nMisc variables:\n\n    __version__\n    format_version\n    compatible_formats\n\n', lineno=25, col_offset=-1), lineno=25, col_offset=-1), Assign([Name('__version__', Store(), lineno=27, col_offset=0)], Str('$Revision: 72223 $', lineno=27, col_offset=14), lineno=27, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=29, col_offset=0), ImportFrom('copy_reg', [alias('dispatch_table', None)], 0, lineno=30, col_offset=0), ImportFrom('copy_reg', [alias('_extension_registry', None), alias('_inverted_registry', None), alias('_extension_cache', None)], 0, lineno=31, col_offset=0), Import([alias('marshal', None)], lineno=32, col_offset=0), Import([alias('sys', None)], lineno=33, col_offset=0), Import([alias('struct', None)], lineno=34, col_offset=0), Import([alias('re', None)], lineno=35, col_offset=0), Assign([Name('__all__', Store(), lineno=37, col_offset=0)], List([Str('PickleError', lineno=37, col_offset=11), Str('PicklingError', lineno=37, col_offset=26), Str('UnpicklingError', lineno=37, col_offset=43), Str('Pickler', lineno=37, col_offset=62), Str('Unpickler', lineno=38, col_offset=11), Str('dump', lineno=38, col_offset=24), Str('dumps', lineno=38, col_offset=32), Str('load', lineno=38, col_offset=41), Str('loads', lineno=38, col_offset=49)], Load(), lineno=37, col_offset=10), lineno=37, col_offset=0), Assign([Name('format_version', Store(), lineno=41, col_offset=0)], Str('2.0', lineno=41, col_offset=17), lineno=41, col_offset=0), Assign([Name('compatible_formats', Store(), lineno=42, col_offset=0)], List([Str('1.0', lineno=42, col_offset=22), Str('1.1', lineno=43, col_offset=22), Str('1.2', lineno=44, col_offset=22), Str('1.3', lineno=45, col_offset=22), Str('2.0', lineno=46, col_offset=22)], Load(), lineno=42, col_offset=21), lineno=42, col_offset=0), Assign([Name('HIGHEST_PROTOCOL', Store(), lineno=51, col_offset=0)], Num(2, lineno=51, col_offset=19), lineno=51, col_offset=0), Assign([Name('mloads', Store(), lineno=56, col_offset=0)], Attribute(Name('marshal', Load(), lineno=56, col_offset=9), 'loads', Load(), lineno=56, col_offset=9), lineno=56, col_offset=0), ClassDef('PickleError', [Name('Exception', Load(), lineno=58, col_offset=18)], [Expr(Str('A common base class for the other pickling exceptions.', lineno=59, col_offset=4), lineno=59, col_offset=4), Pass( lineno=60, col_offset=4)], [], lineno=58, col_offset=0), ClassDef('PicklingError', [Name('PickleError', Load(), lineno=62, col_offset=20)], [Expr(Str('This exception is raised when an unpicklable object is passed to the\n    dump() method.\n\n    ', lineno=66, col_offset=-1), lineno=66, col_offset=-1), Pass( lineno=67, col_offset=4)], [], lineno=62, col_offset=0), ClassDef('UnpicklingError', [Name('PickleError', Load(), lineno=69, col_offset=22)], [Expr(Str('This exception is raised when there is a problem unpickling an object,\n    such as a security violation.\n\n    Note that other exceptions may also be raised during unpickling, including\n    (but not necessarily limited to) AttributeError, EOFError, ImportError,\n    and IndexError.\n\n    ', lineno=77, col_offset=-1), lineno=77, col_offset=-1), Pass( lineno=78, col_offset=4)], [], lineno=69, col_offset=0), ClassDef('_Stop', [Name('Exception', Load(), lineno=82, col_offset=12)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=83, col_offset=17), Name('value', Param(), lineno=83, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=84, col_offset=8), 'value', Store(), lineno=84, col_offset=8)], Name('value', Load(), lineno=84, col_offset=21), lineno=84, col_offset=8)], [], lineno=83, col_offset=4)], [], lineno=82, col_offset=0), TryExcept([ImportFrom('org.python.core', [alias('PyStringMap', None)], 0, lineno=88, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=89, col_offset=7), None, [Assign([Name('PyStringMap', Store(), lineno=90, col_offset=4)], Name('None', Load(), lineno=90, col_offset=18), lineno=90, col_offset=4)], lineno=89, col_offset=0)], [], lineno=87, col_offset=0), TryExcept([Expr(Name('UnicodeType', Load(), lineno=94, col_offset=4), lineno=94, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=95, col_offset=7), None, [Assign([Name('UnicodeType', Store(), lineno=96, col_offset=4)], Name('None', Load(), lineno=96, col_offset=18), lineno=96, col_offset=4)], lineno=95, col_offset=0)], [], lineno=93, col_offset=0), Assign([Name('MARK', Store(), lineno=102, col_offset=0)], Str('(', lineno=102, col_offset=18), lineno=102, col_offset=0), Assign([Name('STOP', Store(), lineno=103, col_offset=0)], Str('.', lineno=103, col_offset=18), lineno=103, col_offset=0), Assign([Name('POP', Store(), lineno=104, col_offset=0)], Str('0', lineno=104, col_offset=18), lineno=104, col_offset=0), Assign([Name('POP_MARK', Store(), lineno=105, col_offset=0)], Str('1', lineno=105, col_offset=18), lineno=105, col_offset=0), Assign([Name('DUP', Store(), lineno=106, col_offset=0)], Str('2', lineno=106, col_offset=18), lineno=106, col_offset=0), Assign([Name('FLOAT', Store(), lineno=107, col_offset=0)], Str('F', lineno=107, col_offset=18), lineno=107, col_offset=0), Assign([Name('INT', Store(), lineno=108, col_offset=0)], Str('I', lineno=108, col_offset=18), lineno=108, col_offset=0), Assign([Name('BININT', Store(), lineno=109, col_offset=0)], Str('J', lineno=109, col_offset=18), lineno=109, col_offset=0), Assign([Name('BININT1', Store(), lineno=110, col_offset=0)], Str('K', lineno=110, col_offset=18), lineno=110, col_offset=0), Assign([Name('LONG', Store(), lineno=111, col_offset=0)], Str('L', lineno=111, col_offset=18), lineno=111, col_offset=0), Assign([Name('BININT2', Store(), lineno=112, col_offset=0)], Str('M', lineno=112, col_offset=18), lineno=112, col_offset=0), Assign([Name('NONE', Store(), lineno=113, col_offset=0)], Str('N', lineno=113, col_offset=18), lineno=113, col_offset=0), Assign([Name('PERSID', Store(), lineno=114, col_offset=0)], Str('P', lineno=114, col_offset=18), lineno=114, col_offset=0), Assign([Name('BINPERSID', Store(), lineno=115, col_offset=0)], Str('Q', lineno=115, col_offset=18), lineno=115, col_offset=0), Assign([Name('REDUCE', Store(), lineno=116, col_offset=0)], Str('R', lineno=116, col_offset=18), lineno=116, col_offset=0), Assign([Name('STRING', Store(), lineno=117, col_offset=0)], Str('S', lineno=117, col_offset=18), lineno=117, col_offset=0), Assign([Name('BINSTRING', Store(), lineno=118, col_offset=0)], Str('T', lineno=118, col_offset=18), lineno=118, col_offset=0), Assign([Name('SHORT_BINSTRING', Store(), lineno=119, col_offset=0)], Str('U', lineno=119, col_offset=18), lineno=119, col_offset=0), Assign([Name('UNICODE', Store(), lineno=120, col_offset=0)], Str('V', lineno=120, col_offset=18), lineno=120, col_offset=0), Assign([Name('BINUNICODE', Store(), lineno=121, col_offset=0)], Str('X', lineno=121, col_offset=18), lineno=121, col_offset=0), Assign([Name('APPEND', Store(), lineno=122, col_offset=0)], Str('a', lineno=122, col_offset=18), lineno=122, col_offset=0), Assign([Name('BUILD', Store(), lineno=123, col_offset=0)], Str('b', lineno=123, col_offset=18), lineno=123, col_offset=0), Assign([Name('GLOBAL', Store(), lineno=124, col_offset=0)], Str('c', lineno=124, col_offset=18), lineno=124, col_offset=0), Assign([Name('DICT', Store(), lineno=125, col_offset=0)], Str('d', lineno=125, col_offset=18), lineno=125, col_offset=0), Assign([Name('EMPTY_DICT', Store(), lineno=126, col_offset=0)], Str('}', lineno=126, col_offset=18), lineno=126, col_offset=0), Assign([Name('APPENDS', Store(), lineno=127, col_offset=0)], Str('e', lineno=127, col_offset=18), lineno=127, col_offset=0), Assign([Name('GET', Store(), lineno=128, col_offset=0)], Str('g', lineno=128, col_offset=18), lineno=128, col_offset=0), Assign([Name('BINGET', Store(), lineno=129, col_offset=0)], Str('h', lineno=129, col_offset=18), lineno=129, col_offset=0), Assign([Name('INST', Store(), lineno=130, col_offset=0)], Str('i', lineno=130, col_offset=18), lineno=130, col_offset=0), Assign([Name('LONG_BINGET', Store(), lineno=131, col_offset=0)], Str('j', lineno=131, col_offset=18), lineno=131, col_offset=0), Assign([Name('LIST', Store(), lineno=132, col_offset=0)], Str('l', lineno=132, col_offset=18), lineno=132, col_offset=0), Assign([Name('EMPTY_LIST', Store(), lineno=133, col_offset=0)], Str(']', lineno=133, col_offset=18), lineno=133, col_offset=0), Assign([Name('OBJ', Store(), lineno=134, col_offset=0)], Str('o', lineno=134, col_offset=18), lineno=134, col_offset=0), Assign([Name('PUT', Store(), lineno=135, col_offset=0)], Str('p', lineno=135, col_offset=18), lineno=135, col_offset=0), Assign([Name('BINPUT', Store(), lineno=136, col_offset=0)], Str('q', lineno=136, col_offset=18), lineno=136, col_offset=0), Assign([Name('LONG_BINPUT', Store(), lineno=137, col_offset=0)], Str('r', lineno=137, col_offset=18), lineno=137, col_offset=0), Assign([Name('SETITEM', Store(), lineno=138, col_offset=0)], Str('s', lineno=138, col_offset=18), lineno=138, col_offset=0), Assign([Name('TUPLE', Store(), lineno=139, col_offset=0)], Str('t', lineno=139, col_offset=18), lineno=139, col_offset=0), Assign([Name('EMPTY_TUPLE', Store(), lineno=140, col_offset=0)], Str(')', lineno=140, col_offset=18), lineno=140, col_offset=0), Assign([Name('SETITEMS', Store(), lineno=141, col_offset=0)], Str('u', lineno=141, col_offset=18), lineno=141, col_offset=0), Assign([Name('BINFLOAT', Store(), lineno=142, col_offset=0)], Str('G', lineno=142, col_offset=18), lineno=142, col_offset=0), Assign([Name('TRUE', Store(), lineno=144, col_offset=0)], Str('I01\n', lineno=144, col_offset=18), lineno=144, col_offset=0), Assign([Name('FALSE', Store(), lineno=145, col_offset=0)], Str('I00\n', lineno=145, col_offset=18), lineno=145, col_offset=0), Assign([Name('PROTO', Store(), lineno=149, col_offset=0)], Str('\x80', lineno=149, col_offset=18), lineno=149, col_offset=0), Assign([Name('NEWOBJ', Store(), lineno=150, col_offset=0)], Str('\x81', lineno=150, col_offset=18), lineno=150, col_offset=0), Assign([Name('EXT1', Store(), lineno=151, col_offset=0)], Str('\x82', lineno=151, col_offset=18), lineno=151, col_offset=0), Assign([Name('EXT2', Store(), lineno=152, col_offset=0)], Str('\x83', lineno=152, col_offset=18), lineno=152, col_offset=0), Assign([Name('EXT4', Store(), lineno=153, col_offset=0)], Str('\x84', lineno=153, col_offset=18), lineno=153, col_offset=0), Assign([Name('TUPLE1', Store(), lineno=154, col_offset=0)], Str('\x85', lineno=154, col_offset=18), lineno=154, col_offset=0), Assign([Name('TUPLE2', Store(), lineno=155, col_offset=0)], Str('\x86', lineno=155, col_offset=18), lineno=155, col_offset=0), Assign([Name('TUPLE3', Store(), lineno=156, col_offset=0)], Str('\x87', lineno=156, col_offset=18), lineno=156, col_offset=0), Assign([Name('NEWTRUE', Store(), lineno=157, col_offset=0)], Str('\x88', lineno=157, col_offset=18), lineno=157, col_offset=0), Assign([Name('NEWFALSE', Store(), lineno=158, col_offset=0)], Str('\x89', lineno=158, col_offset=18), lineno=158, col_offset=0), Assign([Name('LONG1', Store(), lineno=159, col_offset=0)], Str('\x8a', lineno=159, col_offset=18), lineno=159, col_offset=0), Assign([Name('LONG4', Store(), lineno=160, col_offset=0)], Str('\x8b', lineno=160, col_offset=18), lineno=160, col_offset=0), Assign([Name('_tuplesize2code', Store(), lineno=162, col_offset=0)], List([Name('EMPTY_TUPLE', Load(), lineno=162, col_offset=19), Name('TUPLE1', Load(), lineno=162, col_offset=32), Name('TUPLE2', Load(), lineno=162, col_offset=40), Name('TUPLE3', Load(), lineno=162, col_offset=48)], Load(), lineno=162, col_offset=18), lineno=162, col_offset=0), Expr(Call(Attribute(Name('__all__', Load(), lineno=165, col_offset=0), 'extend', Load(), lineno=165, col_offset=0), [ListComp(Name('x', Load(), lineno=165, col_offset=16), [comprehension(Name('x', Store(), lineno=165, col_offset=22), Call(Name('dir', Load(), lineno=165, col_offset=27), [], [], None, None, lineno=165, col_offset=27), [Call(Attribute(Name('re', Load(), lineno=165, col_offset=36), 'match', Load(), lineno=165, col_offset=36), [Str('[A-Z][A-Z0-9_]+$', lineno=165, col_offset=45), Name('x', Load(), lineno=165, col_offset=64)], [], None, None, lineno=165, col_offset=36)])], lineno=165, col_offset=16)], [], None, None, lineno=165, col_offset=0), lineno=165, col_offset=0), Delete([Name('x', Del(), lineno=166, col_offset=4)], lineno=166, col_offset=0), ClassDef('Pickler', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=173, col_offset=17), Name('file', Param(), lineno=173, col_offset=23), Name('protocol', Param(), lineno=173, col_offset=29)], None, None, [Name('None', Load(), lineno=173, col_offset=38)]), [Expr(Str('This takes a file-like object for writing a pickle data stream.\n\n        The optional protocol argument tells the pickler to use the\n        given protocol; supported protocols are 0, 1, 2.  The default\n        protocol is 0, to be backwards compatible.  (Protocol 0 is the\n        only protocol that can be written to a file opened in text\n        mode and read back successfully.  When using a protocol higher\n        than 0, make sure the file is opened in binary mode, both when\n        pickling and unpickling.)\n\n        Protocol 1 is more efficient than protocol 0; protocol 2 is\n        more efficient than protocol 1.\n\n        Specifying a negative protocol version selects the highest\n        protocol version supported.  The higher the protocol used, the\n        more recent the version of Python needed to read the pickle\n        produced.\n\n        The file parameter must have a write() method that accepts a single\n        string argument.  It can thus be an open file object, a StringIO\n        object, or any other custom object that meets this interface.\n\n        ', lineno=196, col_offset=-1), lineno=196, col_offset=-1), If(Compare(Name('protocol', Load(), lineno=197, col_offset=11), [Is()], [Name('None', Load(), lineno=197, col_offset=23)], lineno=197, col_offset=11), [Assign([Name('protocol', Store(), lineno=198, col_offset=12)], Num(0, lineno=198, col_offset=23), lineno=198, col_offset=12)], [], lineno=197, col_offset=8), If(Compare(Name('protocol', Load(), lineno=199, col_offset=11), [Lt()], [Num(0, lineno=199, col_offset=22)], lineno=199, col_offset=11), [Assign([Name('protocol', Store(), lineno=200, col_offset=12)], Name('HIGHEST_PROTOCOL', Load(), lineno=200, col_offset=23), lineno=200, col_offset=12)], [If(UnaryOp(Not(), Compare(Num(0, lineno=201, col_offset=17), [LtE(), LtE()], [Name('protocol', Load(), lineno=201, col_offset=22), Name('HIGHEST_PROTOCOL', Load(), lineno=201, col_offset=34)], lineno=201, col_offset=17), lineno=201, col_offset=13), [Raise(Call(Name('ValueError', Load(), lineno=202, col_offset=18), [BinOp(Str('pickle protocol must be <= %d', lineno=202, col_offset=29), Mod(), Name('HIGHEST_PROTOCOL', Load(), lineno=202, col_offset=63), lineno=202, col_offset=29)], [], None, None, lineno=202, col_offset=18), None, None, lineno=202, col_offset=12)], [], lineno=201, col_offset=13)], lineno=199, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=8), 'write', Store(), lineno=203, col_offset=8)], Attribute(Name('file', Load(), lineno=203, col_offset=21), 'write', Load(), lineno=203, col_offset=21), lineno=203, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=204, col_offset=8), 'memo', Store(), lineno=204, col_offset=8)], Dict([], [], lineno=204, col_offset=20), lineno=204, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=205, col_offset=8), 'proto', Store(), lineno=205, col_offset=8)], Call(Name('int', Load(), lineno=205, col_offset=21), [Name('protocol', Load(), lineno=205, col_offset=25)], [], None, None, lineno=205, col_offset=21), lineno=205, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=206, col_offset=8), 'bin', Store(), lineno=206, col_offset=8)], Compare(Name('protocol', Load(), lineno=206, col_offset=19), [GtE()], [Num(1, lineno=206, col_offset=31)], lineno=206, col_offset=19), lineno=206, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=207, col_offset=8), 'fast', Store(), lineno=207, col_offset=8)], Num(0, lineno=207, col_offset=20), lineno=207, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('clear_memo', arguments([Name('self', Param(), lineno=209, col_offset=19)], None, None, []), [Expr(Str('Clears the pickler\'s "memo".\n\n        The memo is the data structure that remembers which objects the\n        pickler has already seen, so that shared or recursive objects are\n        pickled by reference and not by value.  This method is useful when\n        re-using picklers.\n\n        ', lineno=217, col_offset=-1), lineno=217, col_offset=-1), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'memo', Load(), lineno=218, col_offset=8), 'clear', Load(), lineno=218, col_offset=8), [], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=220, col_offset=13), Name('obj', Param(), lineno=220, col_offset=19)], None, None, []), [Expr(Str('Write a pickled representation of obj to the open file.', lineno=221, col_offset=8), lineno=221, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=222, col_offset=11), 'proto', Load(), lineno=222, col_offset=11), [GtE()], [Num(2, lineno=222, col_offset=25)], lineno=222, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=12), 'write', Load(), lineno=223, col_offset=12), [BinOp(Name('PROTO', Load(), lineno=223, col_offset=23), Add(), Call(Name('chr', Load(), lineno=223, col_offset=31), [Attribute(Name('self', Load(), lineno=223, col_offset=35), 'proto', Load(), lineno=223, col_offset=35)], [], None, None, lineno=223, col_offset=31), lineno=223, col_offset=23)], [], None, None, lineno=223, col_offset=12), lineno=223, col_offset=12)], [], lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'save', Load(), lineno=224, col_offset=8), [Name('obj', Load(), lineno=224, col_offset=18)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'write', Load(), lineno=225, col_offset=8), [Name('STOP', Load(), lineno=225, col_offset=19)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=220, col_offset=4), FunctionDef('memoize', arguments([Name('self', Param(), lineno=227, col_offset=16), Name('obj', Param(), lineno=227, col_offset=22)], None, None, []), [Expr(Str('Store an object in the memo.', lineno=228, col_offset=8), lineno=228, col_offset=8), If(Attribute(Name('self', Load(), lineno=242, col_offset=11), 'fast', Load(), lineno=242, col_offset=11), [Return(None, lineno=243, col_offset=12)], [], lineno=242, col_offset=8), Assert(Compare(Call(Name('id', Load(), lineno=244, col_offset=15), [Name('obj', Load(), lineno=244, col_offset=18)], [], None, None, lineno=244, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=244, col_offset=30), 'memo', Load(), lineno=244, col_offset=30)], lineno=244, col_offset=15), None, lineno=244, col_offset=8), Assign([Name('memo_len', Store(), lineno=245, col_offset=8)], Call(Name('len', Load(), lineno=245, col_offset=19), [Attribute(Name('self', Load(), lineno=245, col_offset=23), 'memo', Load(), lineno=245, col_offset=23)], [], None, None, lineno=245, col_offset=19), lineno=245, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'write', Load(), lineno=246, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=246, col_offset=19), 'put', Load(), lineno=246, col_offset=19), [Name('memo_len', Load(), lineno=246, col_offset=28)], [], None, None, lineno=246, col_offset=19)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'memo', Load(), lineno=247, col_offset=8), Index(Call(Name('id', Load(), lineno=247, col_offset=18), [Name('obj', Load(), lineno=247, col_offset=21)], [], None, None, lineno=247, col_offset=18)), Store(), lineno=247, col_offset=8)], Tuple([Name('memo_len', Load(), lineno=247, col_offset=29), Name('obj', Load(), lineno=247, col_offset=39)], Load(), lineno=247, col_offset=29), lineno=247, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('put', arguments([Name('self', Param(), lineno=250, col_offset=12), Name('i', Param(), lineno=250, col_offset=18), Name('pack', Param(), lineno=250, col_offset=21)], None, None, [Attribute(Name('struct', Load(), lineno=250, col_offset=26), 'pack', Load(), lineno=250, col_offset=26)]), [If(Attribute(Name('self', Load(), lineno=251, col_offset=11), 'bin', Load(), lineno=251, col_offset=11), [If(Compare(Name('i', Load(), lineno=252, col_offset=15), [Lt()], [Num(256, lineno=252, col_offset=19)], lineno=252, col_offset=15), [Return(BinOp(Name('BINPUT', Load(), lineno=253, col_offset=23), Add(), Call(Name('chr', Load(), lineno=253, col_offset=32), [Name('i', Load(), lineno=253, col_offset=36)], [], None, None, lineno=253, col_offset=32), lineno=253, col_offset=23), lineno=253, col_offset=16)], [Return(BinOp(Name('LONG_BINPUT', Load(), lineno=255, col_offset=23), Add(), Call(Name('pack', Load(), lineno=255, col_offset=37), [Str('<i', lineno=255, col_offset=42), Name('i', Load(), lineno=255, col_offset=48)], [], None, None, lineno=255, col_offset=37), lineno=255, col_offset=23), lineno=255, col_offset=16)], lineno=252, col_offset=12)], [], lineno=251, col_offset=8), Return(BinOp(BinOp(Name('PUT', Load(), lineno=257, col_offset=15), Add(), Call(Name('repr', Load(), lineno=257, col_offset=21), [Name('i', Load(), lineno=257, col_offset=26)], [], None, None, lineno=257, col_offset=21), lineno=257, col_offset=15), Add(), Str('\n', lineno=257, col_offset=31), lineno=257, col_offset=29), lineno=257, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=260, col_offset=12), Name('i', Param(), lineno=260, col_offset=18), Name('pack', Param(), lineno=260, col_offset=21)], None, None, [Attribute(Name('struct', Load(), lineno=260, col_offset=26), 'pack', Load(), lineno=260, col_offset=26)]), [If(Attribute(Name('self', Load(), lineno=261, col_offset=11), 'bin', Load(), lineno=261, col_offset=11), [If(Compare(Name('i', Load(), lineno=262, col_offset=15), [Lt()], [Num(256, lineno=262, col_offset=19)], lineno=262, col_offset=15), [Return(BinOp(Name('BINGET', Load(), lineno=263, col_offset=23), Add(), Call(Name('chr', Load(), lineno=263, col_offset=32), [Name('i', Load(), lineno=263, col_offset=36)], [], None, None, lineno=263, col_offset=32), lineno=263, col_offset=23), lineno=263, col_offset=16)], [Return(BinOp(Name('LONG_BINGET', Load(), lineno=265, col_offset=23), Add(), Call(Name('pack', Load(), lineno=265, col_offset=37), [Str('<i', lineno=265, col_offset=42), Name('i', Load(), lineno=265, col_offset=48)], [], None, None, lineno=265, col_offset=37), lineno=265, col_offset=23), lineno=265, col_offset=16)], lineno=262, col_offset=12)], [], lineno=261, col_offset=8), Return(BinOp(BinOp(Name('GET', Load(), lineno=267, col_offset=15), Add(), Call(Name('repr', Load(), lineno=267, col_offset=21), [Name('i', Load(), lineno=267, col_offset=26)], [], None, None, lineno=267, col_offset=21), lineno=267, col_offset=15), Add(), Str('\n', lineno=267, col_offset=31), lineno=267, col_offset=29), lineno=267, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('save', arguments([Name('self', Param(), lineno=269, col_offset=13), Name('obj', Param(), lineno=269, col_offset=19)], None, None, []), [Assign([Name('pid', Store(), lineno=271, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=271, col_offset=14), 'persistent_id', Load(), lineno=271, col_offset=14), [Name('obj', Load(), lineno=271, col_offset=33)], [], None, None, lineno=271, col_offset=14), lineno=271, col_offset=8), If(Name('pid', Load(), lineno=272, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=12), 'save_pers', Load(), lineno=273, col_offset=12), [Name('pid', Load(), lineno=273, col_offset=27)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12), Return(None, lineno=274, col_offset=12)], [], lineno=272, col_offset=8), Assign([Name('x', Store(), lineno=277, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=277, col_offset=12), 'memo', Load(), lineno=277, col_offset=12), 'get', Load(), lineno=277, col_offset=12), [Call(Name('id', Load(), lineno=277, col_offset=26), [Name('obj', Load(), lineno=277, col_offset=29)], [], None, None, lineno=277, col_offset=26)], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=8), If(Name('x', Load(), lineno=278, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=12), 'write', Load(), lineno=279, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=279, col_offset=23), 'get', Load(), lineno=279, col_offset=23), [Subscript(Name('x', Load(), lineno=279, col_offset=32), Index(Num(0, lineno=279, col_offset=34)), Load(), lineno=279, col_offset=32)], [], None, None, lineno=279, col_offset=23)], [], None, None, lineno=279, col_offset=12), lineno=279, col_offset=12), Return(None, lineno=280, col_offset=12)], [], lineno=278, col_offset=8), Assign([Name('t', Store(), lineno=283, col_offset=8)], Call(Name('type', Load(), lineno=283, col_offset=12), [Name('obj', Load(), lineno=283, col_offset=17)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=8), Assign([Name('f', Store(), lineno=284, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=284, col_offset=12), 'dispatch', Load(), lineno=284, col_offset=12), 'get', Load(), lineno=284, col_offset=12), [Name('t', Load(), lineno=284, col_offset=30)], [], None, None, lineno=284, col_offset=12), lineno=284, col_offset=8), If(Name('f', Load(), lineno=285, col_offset=11), [Expr(Call(Name('f', Load(), lineno=286, col_offset=12), [Name('self', Load(), lineno=286, col_offset=14), Name('obj', Load(), lineno=286, col_offset=20)], [], None, None, lineno=286, col_offset=12), lineno=286, col_offset=12), Return(None, lineno=287, col_offset=12)], [], lineno=285, col_offset=8), TryExcept([Assign([Name('issc', Store(), lineno=291, col_offset=12)], Call(Name('issubclass', Load(), lineno=291, col_offset=19), [Name('t', Load(), lineno=291, col_offset=30), Name('TypeType', Load(), lineno=291, col_offset=33)], [], None, None, lineno=291, col_offset=19), lineno=291, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=292, col_offset=15), None, [Assign([Name('issc', Store(), lineno=293, col_offset=12)], Num(0, lineno=293, col_offset=19), lineno=293, col_offset=12)], lineno=292, col_offset=8)], [], lineno=290, col_offset=8), If(Name('issc', Load(), lineno=294, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=295, col_offset=12), 'save_global', Load(), lineno=295, col_offset=12), [Name('obj', Load(), lineno=295, col_offset=29)], [], None, None, lineno=295, col_offset=12), lineno=295, col_offset=12), Return(None, lineno=296, col_offset=12)], [], lineno=294, col_offset=8), Assign([Name('reduce', Store(), lineno=299, col_offset=8)], Call(Attribute(Name('dispatch_table', Load(), lineno=299, col_offset=17), 'get', Load(), lineno=299, col_offset=17), [Name('t', Load(), lineno=299, col_offset=36)], [], None, None, lineno=299, col_offset=17), lineno=299, col_offset=8), If(Name('reduce', Load(), lineno=300, col_offset=11), [Assign([Name('rv', Store(), lineno=301, col_offset=12)], Call(Name('reduce', Load(), lineno=301, col_offset=17), [Name('obj', Load(), lineno=301, col_offset=24)], [], None, None, lineno=301, col_offset=17), lineno=301, col_offset=12)], [Assign([Name('reduce', Store(), lineno=304, col_offset=12)], Call(Name('getattr', Load(), lineno=304, col_offset=21), [Name('obj', Load(), lineno=304, col_offset=29), Str('__reduce_ex__', lineno=304, col_offset=34), Name('None', Load(), lineno=304, col_offset=51)], [], None, None, lineno=304, col_offset=21), lineno=304, col_offset=12), If(Name('reduce', Load(), lineno=305, col_offset=15), [Assign([Name('rv', Store(), lineno=306, col_offset=16)], Call(Name('reduce', Load(), lineno=306, col_offset=21), [Attribute(Name('self', Load(), lineno=306, col_offset=28), 'proto', Load(), lineno=306, col_offset=28)], [], None, None, lineno=306, col_offset=21), lineno=306, col_offset=16)], [Assign([Name('reduce', Store(), lineno=308, col_offset=16)], Call(Name('getattr', Load(), lineno=308, col_offset=25), [Name('obj', Load(), lineno=308, col_offset=33), Str('__reduce__', lineno=308, col_offset=38), Name('None', Load(), lineno=308, col_offset=52)], [], None, None, lineno=308, col_offset=25), lineno=308, col_offset=16), If(Name('reduce', Load(), lineno=309, col_offset=19), [Assign([Name('rv', Store(), lineno=310, col_offset=20)], Call(Name('reduce', Load(), lineno=310, col_offset=25), [], [], None, None, lineno=310, col_offset=25), lineno=310, col_offset=20)], [Raise(Call(Name('PicklingError', Load(), lineno=312, col_offset=26), [BinOp(Str("Can't pickle %r object: %r", lineno=312, col_offset=40), Mod(), Tuple([Attribute(Name('t', Load(), lineno=313, col_offset=41), '__name__', Load(), lineno=313, col_offset=41), Name('obj', Load(), lineno=313, col_offset=53)], Load(), lineno=313, col_offset=41), lineno=312, col_offset=40)], [], None, None, lineno=312, col_offset=26), None, None, lineno=312, col_offset=20)], lineno=309, col_offset=16)], lineno=305, col_offset=12)], lineno=300, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=316, col_offset=11), [Name('rv', Load(), lineno=316, col_offset=16)], [], None, None, lineno=316, col_offset=11), [Is()], [Name('StringType', Load(), lineno=316, col_offset=23)], lineno=316, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=12), 'save_global', Load(), lineno=317, col_offset=12), [Name('obj', Load(), lineno=317, col_offset=29), Name('rv', Load(), lineno=317, col_offset=34)], [], None, None, lineno=317, col_offset=12), lineno=317, col_offset=12), Return(None, lineno=318, col_offset=12)], [], lineno=316, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=321, col_offset=11), [Name('rv', Load(), lineno=321, col_offset=16)], [], None, None, lineno=321, col_offset=11), [IsNot()], [Name('TupleType', Load(), lineno=321, col_offset=27)], lineno=321, col_offset=11), [Raise(Call(Name('PicklingError', Load(), lineno=322, col_offset=18), [BinOp(Str('%s must return string or tuple', lineno=322, col_offset=32), Mod(), Name('reduce', Load(), lineno=322, col_offset=67), lineno=322, col_offset=32)], [], None, None, lineno=322, col_offset=18), None, None, lineno=322, col_offset=12)], [], lineno=321, col_offset=8), Assign([Name('l', Store(), lineno=325, col_offset=8)], Call(Name('len', Load(), lineno=325, col_offset=12), [Name('rv', Load(), lineno=325, col_offset=16)], [], None, None, lineno=325, col_offset=12), lineno=325, col_offset=8), If(UnaryOp(Not(), Compare(Num(2, lineno=326, col_offset=16), [LtE(), LtE()], [Name('l', Load(), lineno=326, col_offset=21), Num(5, lineno=326, col_offset=26)], lineno=326, col_offset=16), lineno=326, col_offset=11), [Raise(Call(Name('PicklingError', Load(), lineno=327, col_offset=18), [BinOp(Str('Tuple returned by %s must have two to five elements', lineno=327, col_offset=32), Mod(), Name('reduce', Load(), lineno=328, col_offset=57), lineno=327, col_offset=32)], [], None, None, lineno=327, col_offset=18), None, None, lineno=327, col_offset=12)], [], lineno=326, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=8), 'save_reduce', Load(), lineno=331, col_offset=8), [], [keyword('obj', Name('obj', Load(), lineno=331, col_offset=29))], Name('rv', Load(), lineno=331, col_offset=35), None, lineno=331, col_offset=8), lineno=331, col_offset=8)], [], lineno=269, col_offset=4), FunctionDef('persistent_id', arguments([Name('self', Param(), lineno=333, col_offset=22), Name('obj', Param(), lineno=333, col_offset=28)], None, None, []), [Return(Name('None', Load(), lineno=335, col_offset=15), lineno=335, col_offset=8)], [], lineno=333, col_offset=4), FunctionDef('save_pers', arguments([Name('self', Param(), lineno=337, col_offset=18), Name('pid', Param(), lineno=337, col_offset=24)], None, None, []), [If(Attribute(Name('self', Load(), lineno=339, col_offset=11), 'bin', Load(), lineno=339, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=12), 'save', Load(), lineno=340, col_offset=12), [Name('pid', Load(), lineno=340, col_offset=22)], [], None, None, lineno=340, col_offset=12), lineno=340, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=12), 'write', Load(), lineno=341, col_offset=12), [Name('BINPERSID', Load(), lineno=341, col_offset=23)], [], None, None, lineno=341, col_offset=12), lineno=341, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=343, col_offset=12), 'write', Load(), lineno=343, col_offset=12), [BinOp(BinOp(Name('PERSID', Load(), lineno=343, col_offset=23), Add(), Call(Name('str', Load(), lineno=343, col_offset=32), [Name('pid', Load(), lineno=343, col_offset=36)], [], None, None, lineno=343, col_offset=32), lineno=343, col_offset=23), Add(), Str('\n', lineno=343, col_offset=43), lineno=343, col_offset=41)], [], None, None, lineno=343, col_offset=12), lineno=343, col_offset=12)], lineno=339, col_offset=8)], [], lineno=337, col_offset=4), FunctionDef('save_reduce', arguments([Name('self', Param(), lineno=345, col_offset=20), Name('func', Param(), lineno=345, col_offset=26), Name('args', Param(), lineno=345, col_offset=32), Name('state', Param(), lineno=345, col_offset=38), Name('listitems', Param(), lineno=346, col_offset=20), Name('dictitems', Param(), lineno=346, col_offset=36), Name('obj', Param(), lineno=346, col_offset=52)], None, None, [Name('None', Load(), lineno=345, col_offset=44), Name('None', Load(), lineno=346, col_offset=30), Name('None', Load(), lineno=346, col_offset=46), Name('None', Load(), lineno=346, col_offset=56)]), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=350, col_offset=15), [Name('args', Load(), lineno=350, col_offset=26), Name('TupleType', Load(), lineno=350, col_offset=32)], [], None, None, lineno=350, col_offset=15), lineno=350, col_offset=11), [Raise(Call(Name('PicklingError', Load(), lineno=351, col_offset=18), [Str('args from reduce() should be a tuple', lineno=351, col_offset=32)], [], None, None, lineno=351, col_offset=18), None, None, lineno=351, col_offset=12)], [], lineno=350, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=354, col_offset=15), [Name('func', Load(), lineno=354, col_offset=23), Str('__call__', lineno=354, col_offset=29)], [], None, None, lineno=354, col_offset=15), lineno=354, col_offset=11), [Raise(Call(Name('PicklingError', Load(), lineno=355, col_offset=18), [Str('func from reduce should be callable', lineno=355, col_offset=32)], [], None, None, lineno=355, col_offset=18), None, None, lineno=355, col_offset=12)], [], lineno=354, col_offset=8), Assign([Name('save', Store(), lineno=357, col_offset=8)], Attribute(Name('self', Load(), lineno=357, col_offset=15), 'save', Load(), lineno=357, col_offset=15), lineno=357, col_offset=8), Assign([Name('write', Store(), lineno=358, col_offset=8)], Attribute(Name('self', Load(), lineno=358, col_offset=16), 'write', Load(), lineno=358, col_offset=16), lineno=358, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=361, col_offset=11), 'proto', Load(), lineno=361, col_offset=11), [GtE()], [Num(2, lineno=361, col_offset=25)], lineno=361, col_offset=11), Compare(Call(Name('getattr', Load(), lineno=361, col_offset=31), [Name('func', Load(), lineno=361, col_offset=39), Str('__name__', lineno=361, col_offset=45), Str('', lineno=361, col_offset=57)], [], None, None, lineno=361, col_offset=31), [Eq()], [Str('__newobj__', lineno=361, col_offset=64)], lineno=361, col_offset=31)], lineno=361, col_offset=11), [Assign([Name('cls', Store(), lineno=388, col_offset=12)], Subscript(Name('args', Load(), lineno=388, col_offset=18), Index(Num(0, lineno=388, col_offset=23)), Load(), lineno=388, col_offset=18), lineno=388, col_offset=12), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=389, col_offset=19), [Name('cls', Load(), lineno=389, col_offset=27), Str('__new__', lineno=389, col_offset=32)], [], None, None, lineno=389, col_offset=19), lineno=389, col_offset=15), [Raise(Call(Name('PicklingError', Load(), lineno=390, col_offset=22), [Str('args[0] from __newobj__ args has no __new__', lineno=391, col_offset=20)], [], None, None, lineno=390, col_offset=22), None, None, lineno=390, col_offset=16)], [], lineno=389, col_offset=12), If(BoolOp(And(), [Compare(Name('obj', Load(), lineno=392, col_offset=15), [IsNot()], [Name('None', Load(), lineno=392, col_offset=26)], lineno=392, col_offset=15), Compare(Name('cls', Load(), lineno=392, col_offset=35), [IsNot()], [Attribute(Name('obj', Load(), lineno=392, col_offset=46), '__class__', Load(), lineno=392, col_offset=46)], lineno=392, col_offset=35)], lineno=392, col_offset=15), [Raise(Call(Name('PicklingError', Load(), lineno=393, col_offset=22), [Str('args[0] from __newobj__ args has the wrong class', lineno=394, col_offset=20)], [], None, None, lineno=393, col_offset=22), None, None, lineno=393, col_offset=16)], [], lineno=392, col_offset=12), Assign([Name('args', Store(), lineno=395, col_offset=12)], Subscript(Name('args', Load(), lineno=395, col_offset=19), Slice(Num(1, lineno=395, col_offset=24), None, None), Load(), lineno=395, col_offset=19), lineno=395, col_offset=12), Expr(Call(Name('save', Load(), lineno=396, col_offset=12), [Name('cls', Load(), lineno=396, col_offset=17)], [], None, None, lineno=396, col_offset=12), lineno=396, col_offset=12), Expr(Call(Name('save', Load(), lineno=397, col_offset=12), [Name('args', Load(), lineno=397, col_offset=17)], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12), Expr(Call(Name('write', Load(), lineno=398, col_offset=12), [Name('NEWOBJ', Load(), lineno=398, col_offset=18)], [], None, None, lineno=398, col_offset=12), lineno=398, col_offset=12)], [Expr(Call(Name('save', Load(), lineno=400, col_offset=12), [Name('func', Load(), lineno=400, col_offset=17)], [], None, None, lineno=400, col_offset=12), lineno=400, col_offset=12), Expr(Call(Name('save', Load(), lineno=401, col_offset=12), [Name('args', Load(), lineno=401, col_offset=17)], [], None, None, lineno=401, col_offset=12), lineno=401, col_offset=12), Expr(Call(Name('write', Load(), lineno=402, col_offset=12), [Name('REDUCE', Load(), lineno=402, col_offset=18)], [], None, None, lineno=402, col_offset=12), lineno=402, col_offset=12)], lineno=361, col_offset=8), If(Compare(Name('obj', Load(), lineno=404, col_offset=11), [IsNot()], [Name('None', Load(), lineno=404, col_offset=22)], lineno=404, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=12), 'memoize', Load(), lineno=405, col_offset=12), [Name('obj', Load(), lineno=405, col_offset=25)], [], None, None, lineno=405, col_offset=12), lineno=405, col_offset=12)], [], lineno=404, col_offset=8), If(Compare(Name('listitems', Load(), lineno=412, col_offset=11), [IsNot()], [Name('None', Load(), lineno=412, col_offset=28)], lineno=412, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=12), '_batch_appends', Load(), lineno=413, col_offset=12), [Name('listitems', Load(), lineno=413, col_offset=32)], [], None, None, lineno=413, col_offset=12), lineno=413, col_offset=12)], [], lineno=412, col_offset=8), If(Compare(Name('dictitems', Load(), lineno=415, col_offset=11), [IsNot()], [Name('None', Load(), lineno=415, col_offset=28)], lineno=415, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=12), '_batch_setitems', Load(), lineno=416, col_offset=12), [Name('dictitems', Load(), lineno=416, col_offset=33)], [], None, None, lineno=416, col_offset=12), lineno=416, col_offset=12)], [], lineno=415, col_offset=8), If(Compare(Name('state', Load(), lineno=418, col_offset=11), [IsNot()], [Name('None', Load(), lineno=418, col_offset=24)], lineno=418, col_offset=11), [Expr(Call(Name('save', Load(), lineno=419, col_offset=12), [Name('state', Load(), lineno=419, col_offset=17)], [], None, None, lineno=419, col_offset=12), lineno=419, col_offset=12), Expr(Call(Name('write', Load(), lineno=420, col_offset=12), [Name('BUILD', Load(), lineno=420, col_offset=18)], [], None, None, lineno=420, col_offset=12), lineno=420, col_offset=12)], [], lineno=418, col_offset=8)], [], lineno=345, col_offset=4), Assign([Name('dispatch', Store(), lineno=424, col_offset=4)], Dict([], [], lineno=424, col_offset=15), lineno=424, col_offset=4), FunctionDef('save_none', arguments([Name('self', Param(), lineno=426, col_offset=18), Name('obj', Param(), lineno=426, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=427, col_offset=8), 'write', Load(), lineno=427, col_offset=8), [Name('NONE', Load(), lineno=427, col_offset=19)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8)], [], lineno=426, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=428, col_offset=4), Index(Name('NoneType', Load(), lineno=428, col_offset=13)), Store(), lineno=428, col_offset=4)], Name('save_none', Load(), lineno=428, col_offset=25), lineno=428, col_offset=4), FunctionDef('save_bool', arguments([Name('self', Param(), lineno=430, col_offset=18), Name('obj', Param(), lineno=430, col_offset=24)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=431, col_offset=11), 'proto', Load(), lineno=431, col_offset=11), [GtE()], [Num(2, lineno=431, col_offset=25)], lineno=431, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=12), 'write', Load(), lineno=432, col_offset=12), [BoolOp(Or(), [BoolOp(And(), [Name('obj', Load(), lineno=432, col_offset=23), Name('NEWTRUE', Load(), lineno=432, col_offset=31)], lineno=432, col_offset=23), Name('NEWFALSE', Load(), lineno=432, col_offset=42)], lineno=432, col_offset=23)], [], None, None, lineno=432, col_offset=12), lineno=432, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=12), 'write', Load(), lineno=434, col_offset=12), [BoolOp(Or(), [BoolOp(And(), [Name('obj', Load(), lineno=434, col_offset=23), Name('TRUE', Load(), lineno=434, col_offset=31)], lineno=434, col_offset=23), Name('FALSE', Load(), lineno=434, col_offset=39)], lineno=434, col_offset=23)], [], None, None, lineno=434, col_offset=12), lineno=434, col_offset=12)], lineno=431, col_offset=8)], [], lineno=430, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=435, col_offset=4), Index(Name('bool', Load(), lineno=435, col_offset=13)), Store(), lineno=435, col_offset=4)], Name('save_bool', Load(), lineno=435, col_offset=21), lineno=435, col_offset=4), FunctionDef('save_int', arguments([Name('self', Param(), lineno=437, col_offset=17), Name('obj', Param(), lineno=437, col_offset=23), Name('pack', Param(), lineno=437, col_offset=28)], None, None, [Attribute(Name('struct', Load(), lineno=437, col_offset=33), 'pack', Load(), lineno=437, col_offset=33)]), [If(Attribute(Name('self', Load(), lineno=438, col_offset=11), 'bin', Load(), lineno=438, col_offset=11), [If(Compare(Name('obj', Load(), lineno=443, col_offset=15), [GtE()], [Num(0, lineno=443, col_offset=22)], lineno=443, col_offset=15), [If(Compare(Name('obj', Load(), lineno=444, col_offset=19), [LtE()], [Num(255, lineno=444, col_offset=26)], lineno=444, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=20), 'write', Load(), lineno=445, col_offset=20), [BinOp(Name('BININT1', Load(), lineno=445, col_offset=31), Add(), Call(Name('chr', Load(), lineno=445, col_offset=41), [Name('obj', Load(), lineno=445, col_offset=45)], [], None, None, lineno=445, col_offset=41), lineno=445, col_offset=31)], [], None, None, lineno=445, col_offset=20), lineno=445, col_offset=20), Return(None, lineno=446, col_offset=20)], [], lineno=444, col_offset=16), If(Compare(Name('obj', Load(), lineno=447, col_offset=19), [LtE()], [Num(65535, lineno=447, col_offset=26)], lineno=447, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=20), 'write', Load(), lineno=448, col_offset=20), [BinOp(Str('%c%c%c', lineno=448, col_offset=31), Mod(), Tuple([Name('BININT2', Load(), lineno=448, col_offset=43), BinOp(Name('obj', Load(), lineno=448, col_offset=52), BitAnd(), Num(255, lineno=448, col_offset=56), lineno=448, col_offset=52), BinOp(Name('obj', Load(), lineno=448, col_offset=62), RShift(), Num(8, lineno=448, col_offset=67), lineno=448, col_offset=62)], Load(), lineno=448, col_offset=43), lineno=448, col_offset=31)], [], None, None, lineno=448, col_offset=20), lineno=448, col_offset=20), Return(None, lineno=449, col_offset=20)], [], lineno=447, col_offset=16)], [], lineno=443, col_offset=12), Assign([Name('high_bits', Store(), lineno=451, col_offset=12)], BinOp(Name('obj', Load(), lineno=451, col_offset=24), RShift(), Num(31, lineno=451, col_offset=31), lineno=451, col_offset=24), lineno=451, col_offset=12), If(BoolOp(Or(), [Compare(Name('high_bits', Load(), lineno=452, col_offset=15), [Eq()], [Num(0, lineno=452, col_offset=28)], lineno=452, col_offset=15), Compare(Name('high_bits', Load(), lineno=452, col_offset=33), [Eq()], [Num(-1, lineno=452, col_offset=47)], lineno=452, col_offset=33)], lineno=452, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=16), 'write', Load(), lineno=455, col_offset=16), [BinOp(Name('BININT', Load(), lineno=455, col_offset=27), Add(), Call(Name('pack', Load(), lineno=455, col_offset=36), [Str('<i', lineno=455, col_offset=41), Name('obj', Load(), lineno=455, col_offset=47)], [], None, None, lineno=455, col_offset=36), lineno=455, col_offset=27)], [], None, None, lineno=455, col_offset=16), lineno=455, col_offset=16), Return(None, lineno=456, col_offset=16)], [], lineno=452, col_offset=12)], [], lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=8), 'write', Load(), lineno=458, col_offset=8), [BinOp(BinOp(Name('INT', Load(), lineno=458, col_offset=19), Add(), Call(Name('repr', Load(), lineno=458, col_offset=25), [Name('obj', Load(), lineno=458, col_offset=30)], [], None, None, lineno=458, col_offset=25), lineno=458, col_offset=19), Add(), Str('\n', lineno=458, col_offset=37), lineno=458, col_offset=35)], [], None, None, lineno=458, col_offset=8), lineno=458, col_offset=8)], [], lineno=437, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=459, col_offset=4), Index(Name('IntType', Load(), lineno=459, col_offset=13)), Store(), lineno=459, col_offset=4)], Name('save_int', Load(), lineno=459, col_offset=24), lineno=459, col_offset=4), FunctionDef('save_long', arguments([Name('self', Param(), lineno=461, col_offset=18), Name('obj', Param(), lineno=461, col_offset=24), Name('pack', Param(), lineno=461, col_offset=29)], None, None, [Attribute(Name('struct', Load(), lineno=461, col_offset=34), 'pack', Load(), lineno=461, col_offset=34)]), [If(Compare(Attribute(Name('self', Load(), lineno=462, col_offset=11), 'proto', Load(), lineno=462, col_offset=11), [GtE()], [Num(2, lineno=462, col_offset=25)], lineno=462, col_offset=11), [Assign([Name('bytes', Store(), lineno=463, col_offset=12)], Call(Name('encode_long', Load(), lineno=463, col_offset=20), [Name('obj', Load(), lineno=463, col_offset=32)], [], None, None, lineno=463, col_offset=20), lineno=463, col_offset=12), Assign([Name('n', Store(), lineno=464, col_offset=12)], Call(Name('len', Load(), lineno=464, col_offset=16), [Name('bytes', Load(), lineno=464, col_offset=20)], [], None, None, lineno=464, col_offset=16), lineno=464, col_offset=12), If(Compare(Name('n', Load(), lineno=465, col_offset=15), [Lt()], [Num(256, lineno=465, col_offset=19)], lineno=465, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=466, col_offset=16), 'write', Load(), lineno=466, col_offset=16), [BinOp(BinOp(Name('LONG1', Load(), lineno=466, col_offset=27), Add(), Call(Name('chr', Load(), lineno=466, col_offset=35), [Name('n', Load(), lineno=466, col_offset=39)], [], None, None, lineno=466, col_offset=35), lineno=466, col_offset=27), Add(), Name('bytes', Load(), lineno=466, col_offset=44), lineno=466, col_offset=42)], [], None, None, lineno=466, col_offset=16), lineno=466, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=468, col_offset=16), 'write', Load(), lineno=468, col_offset=16), [BinOp(BinOp(Name('LONG4', Load(), lineno=468, col_offset=27), Add(), Call(Name('pack', Load(), lineno=468, col_offset=35), [Str('<i', lineno=468, col_offset=40), Name('n', Load(), lineno=468, col_offset=46)], [], None, None, lineno=468, col_offset=35), lineno=468, col_offset=27), Add(), Name('bytes', Load(), lineno=468, col_offset=51), lineno=468, col_offset=49)], [], None, None, lineno=468, col_offset=16), lineno=468, col_offset=16)], lineno=465, col_offset=12), Return(None, lineno=469, col_offset=12)], [], lineno=462, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=470, col_offset=8), 'write', Load(), lineno=470, col_offset=8), [BinOp(BinOp(Name('LONG', Load(), lineno=470, col_offset=19), Add(), Call(Name('repr', Load(), lineno=470, col_offset=26), [Name('obj', Load(), lineno=470, col_offset=31)], [], None, None, lineno=470, col_offset=26), lineno=470, col_offset=19), Add(), Str('\n', lineno=470, col_offset=38), lineno=470, col_offset=36)], [], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8)], [], lineno=461, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=471, col_offset=4), Index(Name('LongType', Load(), lineno=471, col_offset=13)), Store(), lineno=471, col_offset=4)], Name('save_long', Load(), lineno=471, col_offset=25), lineno=471, col_offset=4), FunctionDef('save_float', arguments([Name('self', Param(), lineno=473, col_offset=19), Name('obj', Param(), lineno=473, col_offset=25), Name('pack', Param(), lineno=473, col_offset=30)], None, None, [Attribute(Name('struct', Load(), lineno=473, col_offset=35), 'pack', Load(), lineno=473, col_offset=35)]), [If(Attribute(Name('self', Load(), lineno=474, col_offset=11), 'bin', Load(), lineno=474, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=12), 'write', Load(), lineno=475, col_offset=12), [BinOp(Name('BINFLOAT', Load(), lineno=475, col_offset=23), Add(), Call(Name('pack', Load(), lineno=475, col_offset=34), [Str('>d', lineno=475, col_offset=39), Name('obj', Load(), lineno=475, col_offset=45)], [], None, None, lineno=475, col_offset=34), lineno=475, col_offset=23)], [], None, None, lineno=475, col_offset=12), lineno=475, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=477, col_offset=12), 'write', Load(), lineno=477, col_offset=12), [BinOp(BinOp(Name('FLOAT', Load(), lineno=477, col_offset=23), Add(), Call(Name('repr', Load(), lineno=477, col_offset=31), [Name('obj', Load(), lineno=477, col_offset=36)], [], None, None, lineno=477, col_offset=31), lineno=477, col_offset=23), Add(), Str('\n', lineno=477, col_offset=43), lineno=477, col_offset=41)], [], None, None, lineno=477, col_offset=12), lineno=477, col_offset=12)], lineno=474, col_offset=8)], [], lineno=473, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=478, col_offset=4), Index(Name('FloatType', Load(), lineno=478, col_offset=13)), Store(), lineno=478, col_offset=4)], Name('save_float', Load(), lineno=478, col_offset=26), lineno=478, col_offset=4), FunctionDef('save_string', arguments([Name('self', Param(), lineno=480, col_offset=20), Name('obj', Param(), lineno=480, col_offset=26), Name('pack', Param(), lineno=480, col_offset=31)], None, None, [Attribute(Name('struct', Load(), lineno=480, col_offset=36), 'pack', Load(), lineno=480, col_offset=36)]), [If(Attribute(Name('self', Load(), lineno=481, col_offset=11), 'bin', Load(), lineno=481, col_offset=11), [Assign([Name('n', Store(), lineno=482, col_offset=12)], Call(Name('len', Load(), lineno=482, col_offset=16), [Name('obj', Load(), lineno=482, col_offset=20)], [], None, None, lineno=482, col_offset=16), lineno=482, col_offset=12), If(Compare(Name('n', Load(), lineno=483, col_offset=15), [Lt()], [Num(256, lineno=483, col_offset=19)], lineno=483, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=16), 'write', Load(), lineno=484, col_offset=16), [BinOp(BinOp(Name('SHORT_BINSTRING', Load(), lineno=484, col_offset=27), Add(), Call(Name('chr', Load(), lineno=484, col_offset=45), [Name('n', Load(), lineno=484, col_offset=49)], [], None, None, lineno=484, col_offset=45), lineno=484, col_offset=27), Add(), Name('obj', Load(), lineno=484, col_offset=54), lineno=484, col_offset=52)], [], None, None, lineno=484, col_offset=16), lineno=484, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=16), 'write', Load(), lineno=486, col_offset=16), [BinOp(BinOp(Name('BINSTRING', Load(), lineno=486, col_offset=27), Add(), Call(Name('pack', Load(), lineno=486, col_offset=39), [Str('<i', lineno=486, col_offset=44), Name('n', Load(), lineno=486, col_offset=50)], [], None, None, lineno=486, col_offset=39), lineno=486, col_offset=27), Add(), Name('obj', Load(), lineno=486, col_offset=55), lineno=486, col_offset=53)], [], None, None, lineno=486, col_offset=16), lineno=486, col_offset=16)], lineno=483, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=488, col_offset=12), 'write', Load(), lineno=488, col_offset=12), [BinOp(BinOp(Name('STRING', Load(), lineno=488, col_offset=23), Add(), Call(Name('repr', Load(), lineno=488, col_offset=32), [Name('obj', Load(), lineno=488, col_offset=37)], [], None, None, lineno=488, col_offset=32), lineno=488, col_offset=23), Add(), Str('\n', lineno=488, col_offset=44), lineno=488, col_offset=42)], [], None, None, lineno=488, col_offset=12), lineno=488, col_offset=12)], lineno=481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=489, col_offset=8), 'memoize', Load(), lineno=489, col_offset=8), [Name('obj', Load(), lineno=489, col_offset=21)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8)], [], lineno=480, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=490, col_offset=4), Index(Name('StringType', Load(), lineno=490, col_offset=13)), Store(), lineno=490, col_offset=4)], Name('save_string', Load(), lineno=490, col_offset=27), lineno=490, col_offset=4), FunctionDef('save_unicode', arguments([Name('self', Param(), lineno=492, col_offset=21), Name('obj', Param(), lineno=492, col_offset=27), Name('pack', Param(), lineno=492, col_offset=32)], None, None, [Attribute(Name('struct', Load(), lineno=492, col_offset=37), 'pack', Load(), lineno=492, col_offset=37)]), [If(Attribute(Name('self', Load(), lineno=493, col_offset=11), 'bin', Load(), lineno=493, col_offset=11), [Assign([Name('encoding', Store(), lineno=494, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=494, col_offset=23), 'encode', Load(), lineno=494, col_offset=23), [Str('utf-8', lineno=494, col_offset=34)], [], None, None, lineno=494, col_offset=23), lineno=494, col_offset=12), Assign([Name('n', Store(), lineno=495, col_offset=12)], Call(Name('len', Load(), lineno=495, col_offset=16), [Name('encoding', Load(), lineno=495, col_offset=20)], [], None, None, lineno=495, col_offset=16), lineno=495, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=12), 'write', Load(), lineno=496, col_offset=12), [BinOp(BinOp(Name('BINUNICODE', Load(), lineno=496, col_offset=23), Add(), Call(Name('pack', Load(), lineno=496, col_offset=36), [Str('<i', lineno=496, col_offset=41), Name('n', Load(), lineno=496, col_offset=47)], [], None, None, lineno=496, col_offset=36), lineno=496, col_offset=23), Add(), Name('encoding', Load(), lineno=496, col_offset=52), lineno=496, col_offset=50)], [], None, None, lineno=496, col_offset=12), lineno=496, col_offset=12)], [Assign([Name('obj', Store(), lineno=498, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=498, col_offset=18), 'replace', Load(), lineno=498, col_offset=18), [Str('\\', lineno=498, col_offset=30), Str('\\u005c', lineno=498, col_offset=36)], [], None, None, lineno=498, col_offset=18), lineno=498, col_offset=12), Assign([Name('obj', Store(), lineno=499, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=499, col_offset=18), 'replace', Load(), lineno=499, col_offset=18), [Str('\n', lineno=499, col_offset=30), Str('\\u000a', lineno=499, col_offset=36)], [], None, None, lineno=499, col_offset=18), lineno=499, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=500, col_offset=12), 'write', Load(), lineno=500, col_offset=12), [BinOp(BinOp(Name('UNICODE', Load(), lineno=500, col_offset=23), Add(), Call(Attribute(Name('obj', Load(), lineno=500, col_offset=33), 'encode', Load(), lineno=500, col_offset=33), [Str('raw-unicode-escape', lineno=500, col_offset=44)], [], None, None, lineno=500, col_offset=33), lineno=500, col_offset=23), Add(), Str('\n', lineno=500, col_offset=68), lineno=500, col_offset=66)], [], None, None, lineno=500, col_offset=12), lineno=500, col_offset=12)], lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=501, col_offset=8), 'memoize', Load(), lineno=501, col_offset=8), [Name('obj', Load(), lineno=501, col_offset=21)], [], None, None, lineno=501, col_offset=8), lineno=501, col_offset=8)], [], lineno=492, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=502, col_offset=4), Index(Name('UnicodeType', Load(), lineno=502, col_offset=13)), Store(), lineno=502, col_offset=4)], Name('save_unicode', Load(), lineno=502, col_offset=28), lineno=502, col_offset=4), If(Compare(Name('StringType', Load(), lineno=504, col_offset=7), [Is()], [Name('UnicodeType', Load(), lineno=504, col_offset=21)], lineno=504, col_offset=7), [FunctionDef('save_string', arguments([Name('self', Param(), lineno=506, col_offset=24), Name('obj', Param(), lineno=506, col_offset=30), Name('pack', Param(), lineno=506, col_offset=35)], None, None, [Attribute(Name('struct', Load(), lineno=506, col_offset=40), 'pack', Load(), lineno=506, col_offset=40)]), [Assign([Name('unicode', Store(), lineno=507, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=507, col_offset=22), 'isunicode', Load(), lineno=507, col_offset=22), [], [], None, None, lineno=507, col_offset=22), lineno=507, col_offset=12), If(Attribute(Name('self', Load(), lineno=509, col_offset=15), 'bin', Load(), lineno=509, col_offset=15), [If(Name('unicode', Load(), lineno=510, col_offset=19), [Assign([Name('obj', Store(), lineno=511, col_offset=20)], Call(Attribute(Name('obj', Load(), lineno=511, col_offset=26), 'encode', Load(), lineno=511, col_offset=26), [Str('utf-8', lineno=511, col_offset=37)], [], None, None, lineno=511, col_offset=26), lineno=511, col_offset=20)], [], lineno=510, col_offset=16), Assign([Name('l', Store(), lineno=512, col_offset=16)], Call(Name('len', Load(), lineno=512, col_offset=20), [Name('obj', Load(), lineno=512, col_offset=24)], [], None, None, lineno=512, col_offset=20), lineno=512, col_offset=16), If(BoolOp(And(), [Compare(Name('l', Load(), lineno=513, col_offset=19), [Lt()], [Num(256, lineno=513, col_offset=23)], lineno=513, col_offset=19), UnaryOp(Not(), Name('unicode', Load(), lineno=513, col_offset=35), lineno=513, col_offset=31)], lineno=513, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=514, col_offset=20), 'write', Load(), lineno=514, col_offset=20), [BinOp(BinOp(Name('SHORT_BINSTRING', Load(), lineno=514, col_offset=31), Add(), Call(Name('chr', Load(), lineno=514, col_offset=49), [Name('l', Load(), lineno=514, col_offset=53)], [], None, None, lineno=514, col_offset=49), lineno=514, col_offset=31), Add(), Name('obj', Load(), lineno=514, col_offset=58), lineno=514, col_offset=56)], [], None, None, lineno=514, col_offset=20), lineno=514, col_offset=20)], [Assign([Name('s', Store(), lineno=516, col_offset=20)], Call(Name('pack', Load(), lineno=516, col_offset=24), [Str('<i', lineno=516, col_offset=29), Name('l', Load(), lineno=516, col_offset=35)], [], None, None, lineno=516, col_offset=24), lineno=516, col_offset=20), If(Name('unicode', Load(), lineno=517, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=24), 'write', Load(), lineno=518, col_offset=24), [BinOp(BinOp(Name('BINUNICODE', Load(), lineno=518, col_offset=35), Add(), Name('s', Load(), lineno=518, col_offset=48), lineno=518, col_offset=35), Add(), Name('obj', Load(), lineno=518, col_offset=52), lineno=518, col_offset=50)], [], None, None, lineno=518, col_offset=24), lineno=518, col_offset=24)], [Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=24), 'write', Load(), lineno=520, col_offset=24), [BinOp(BinOp(Name('BINSTRING', Load(), lineno=520, col_offset=35), Add(), Name('s', Load(), lineno=520, col_offset=47), lineno=520, col_offset=35), Add(), Name('obj', Load(), lineno=520, col_offset=51), lineno=520, col_offset=49)], [], None, None, lineno=520, col_offset=24), lineno=520, col_offset=24)], lineno=517, col_offset=20)], lineno=513, col_offset=16)], [If(Name('unicode', Load(), lineno=522, col_offset=19), [Assign([Name('obj', Store(), lineno=523, col_offset=20)], Call(Attribute(Name('obj', Load(), lineno=523, col_offset=26), 'replace', Load(), lineno=523, col_offset=26), [Str('\\', lineno=523, col_offset=38), Str('\\u005c', lineno=523, col_offset=44)], [], None, None, lineno=523, col_offset=26), lineno=523, col_offset=20), Assign([Name('obj', Store(), lineno=524, col_offset=20)], Call(Attribute(Name('obj', Load(), lineno=524, col_offset=26), 'replace', Load(), lineno=524, col_offset=26), [Str('\n', lineno=524, col_offset=38), Str('\\u000a', lineno=524, col_offset=44)], [], None, None, lineno=524, col_offset=26), lineno=524, col_offset=20), Assign([Name('obj', Store(), lineno=525, col_offset=20)], Call(Attribute(Name('obj', Load(), lineno=525, col_offset=26), 'encode', Load(), lineno=525, col_offset=26), [Str('raw-unicode-escape', lineno=525, col_offset=37)], [], None, None, lineno=525, col_offset=26), lineno=525, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=20), 'write', Load(), lineno=526, col_offset=20), [BinOp(BinOp(Name('UNICODE', Load(), lineno=526, col_offset=31), Add(), Name('obj', Load(), lineno=526, col_offset=41), lineno=526, col_offset=31), Add(), Str('\n', lineno=526, col_offset=47), lineno=526, col_offset=45)], [], None, None, lineno=526, col_offset=20), lineno=526, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=528, col_offset=20), 'write', Load(), lineno=528, col_offset=20), [BinOp(BinOp(Name('STRING', Load(), lineno=528, col_offset=31), Add(), Call(Name('repr', Load(), lineno=528, col_offset=40), [Name('obj', Load(), lineno=528, col_offset=45)], [], None, None, lineno=528, col_offset=40), lineno=528, col_offset=31), Add(), Str('\n', lineno=528, col_offset=52), lineno=528, col_offset=50)], [], None, None, lineno=528, col_offset=20), lineno=528, col_offset=20)], lineno=522, col_offset=16)], lineno=509, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=12), 'memoize', Load(), lineno=529, col_offset=12), [Name('obj', Load(), lineno=529, col_offset=25)], [], None, None, lineno=529, col_offset=12), lineno=529, col_offset=12)], [], lineno=506, col_offset=8), Assign([Subscript(Name('dispatch', Load(), lineno=530, col_offset=8), Index(Name('StringType', Load(), lineno=530, col_offset=17)), Store(), lineno=530, col_offset=8)], Name('save_string', Load(), lineno=530, col_offset=31), lineno=530, col_offset=8)], [], lineno=504, col_offset=4), FunctionDef('save_tuple', arguments([Name('self', Param(), lineno=532, col_offset=19), Name('obj', Param(), lineno=532, col_offset=25)], None, None, []), [Assign([Name('write', Store(), lineno=533, col_offset=8)], Attribute(Name('self', Load(), lineno=533, col_offset=16), 'write', Load(), lineno=533, col_offset=16), lineno=533, col_offset=8), Assign([Name('proto', Store(), lineno=534, col_offset=8)], Attribute(Name('self', Load(), lineno=534, col_offset=16), 'proto', Load(), lineno=534, col_offset=16), lineno=534, col_offset=8), Assign([Name('n', Store(), lineno=536, col_offset=8)], Call(Name('len', Load(), lineno=536, col_offset=12), [Name('obj', Load(), lineno=536, col_offset=16)], [], None, None, lineno=536, col_offset=12), lineno=536, col_offset=8), If(Compare(Name('n', Load(), lineno=537, col_offset=11), [Eq()], [Num(0, lineno=537, col_offset=16)], lineno=537, col_offset=11), [If(Name('proto', Load(), lineno=538, col_offset=15), [Expr(Call(Name('write', Load(), lineno=539, col_offset=16), [Name('EMPTY_TUPLE', Load(), lineno=539, col_offset=22)], [], None, None, lineno=539, col_offset=16), lineno=539, col_offset=16)], [Expr(Call(Name('write', Load(), lineno=541, col_offset=16), [BinOp(Name('MARK', Load(), lineno=541, col_offset=22), Add(), Name('TUPLE', Load(), lineno=541, col_offset=29), lineno=541, col_offset=22)], [], None, None, lineno=541, col_offset=16), lineno=541, col_offset=16)], lineno=538, col_offset=12), Return(None, lineno=542, col_offset=12)], [], lineno=537, col_offset=8), Assign([Name('save', Store(), lineno=544, col_offset=8)], Attribute(Name('self', Load(), lineno=544, col_offset=15), 'save', Load(), lineno=544, col_offset=15), lineno=544, col_offset=8), Assign([Name('memo', Store(), lineno=545, col_offset=8)], Attribute(Name('self', Load(), lineno=545, col_offset=15), 'memo', Load(), lineno=545, col_offset=15), lineno=545, col_offset=8), If(BoolOp(And(), [Compare(Name('n', Load(), lineno=546, col_offset=11), [LtE()], [Num(3, lineno=546, col_offset=16)], lineno=546, col_offset=11), Compare(Name('proto', Load(), lineno=546, col_offset=22), [GtE()], [Num(2, lineno=546, col_offset=31)], lineno=546, col_offset=22)], lineno=546, col_offset=11), [For(Name('element', Store(), lineno=547, col_offset=16), Name('obj', Load(), lineno=547, col_offset=27), [Expr(Call(Name('save', Load(), lineno=548, col_offset=16), [Name('element', Load(), lineno=548, col_offset=21)], [], None, None, lineno=548, col_offset=16), lineno=548, col_offset=16)], [], lineno=547, col_offset=12), If(Compare(Call(Name('id', Load(), lineno=550, col_offset=15), [Name('obj', Load(), lineno=550, col_offset=18)], [], None, None, lineno=550, col_offset=15), [In()], [Name('memo', Load(), lineno=550, col_offset=26)], lineno=550, col_offset=15), [Assign([Name('get', Store(), lineno=551, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=551, col_offset=22), 'get', Load(), lineno=551, col_offset=22), [Subscript(Subscript(Name('memo', Load(), lineno=551, col_offset=31), Index(Call(Name('id', Load(), lineno=551, col_offset=36), [Name('obj', Load(), lineno=551, col_offset=39)], [], None, None, lineno=551, col_offset=36)), Load(), lineno=551, col_offset=31), Index(Num(0, lineno=551, col_offset=45)), Load(), lineno=551, col_offset=31)], [], None, None, lineno=551, col_offset=22), lineno=551, col_offset=16), Expr(Call(Name('write', Load(), lineno=552, col_offset=16), [BinOp(BinOp(Name('POP', Load(), lineno=552, col_offset=22), Mult(), Name('n', Load(), lineno=552, col_offset=28), lineno=552, col_offset=22), Add(), Name('get', Load(), lineno=552, col_offset=32), lineno=552, col_offset=22)], [], None, None, lineno=552, col_offset=16), lineno=552, col_offset=16)], [Expr(Call(Name('write', Load(), lineno=554, col_offset=16), [Subscript(Name('_tuplesize2code', Load(), lineno=554, col_offset=22), Index(Name('n', Load(), lineno=554, col_offset=38)), Load(), lineno=554, col_offset=22)], [], None, None, lineno=554, col_offset=16), lineno=554, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=555, col_offset=16), 'memoize', Load(), lineno=555, col_offset=16), [Name('obj', Load(), lineno=555, col_offset=29)], [], None, None, lineno=555, col_offset=16), lineno=555, col_offset=16)], lineno=550, col_offset=12), Return(None, lineno=556, col_offset=12)], [], lineno=546, col_offset=8), Expr(Call(Name('write', Load(), lineno=560, col_offset=8), [Name('MARK', Load(), lineno=560, col_offset=14)], [], None, None, lineno=560, col_offset=8), lineno=560, col_offset=8), For(Name('element', Store(), lineno=561, col_offset=12), Name('obj', Load(), lineno=561, col_offset=23), [Expr(Call(Name('save', Load(), lineno=562, col_offset=12), [Name('element', Load(), lineno=562, col_offset=17)], [], None, None, lineno=562, col_offset=12), lineno=562, col_offset=12)], [], lineno=561, col_offset=8), If(Compare(Call(Name('id', Load(), lineno=564, col_offset=11), [Name('obj', Load(), lineno=564, col_offset=14)], [], None, None, lineno=564, col_offset=11), [In()], [Name('memo', Load(), lineno=564, col_offset=22)], lineno=564, col_offset=11), [Assign([Name('get', Store(), lineno=572, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=572, col_offset=18), 'get', Load(), lineno=572, col_offset=18), [Subscript(Subscript(Name('memo', Load(), lineno=572, col_offset=27), Index(Call(Name('id', Load(), lineno=572, col_offset=32), [Name('obj', Load(), lineno=572, col_offset=35)], [], None, None, lineno=572, col_offset=32)), Load(), lineno=572, col_offset=27), Index(Num(0, lineno=572, col_offset=41)), Load(), lineno=572, col_offset=27)], [], None, None, lineno=572, col_offset=18), lineno=572, col_offset=12), If(Name('proto', Load(), lineno=573, col_offset=15), [Expr(Call(Name('write', Load(), lineno=574, col_offset=16), [BinOp(Name('POP_MARK', Load(), lineno=574, col_offset=22), Add(), Name('get', Load(), lineno=574, col_offset=33), lineno=574, col_offset=22)], [], None, None, lineno=574, col_offset=16), lineno=574, col_offset=16)], [Expr(Call(Name('write', Load(), lineno=576, col_offset=16), [BinOp(BinOp(Name('POP', Load(), lineno=576, col_offset=22), Mult(), BinOp(Name('n', Load(), lineno=576, col_offset=29), Add(), Num(1, lineno=576, col_offset=31), lineno=576, col_offset=29), lineno=576, col_offset=22), Add(), Name('get', Load(), lineno=576, col_offset=36), lineno=576, col_offset=22)], [], None, None, lineno=576, col_offset=16), lineno=576, col_offset=16)], lineno=573, col_offset=12), Return(None, lineno=577, col_offset=12)], [], lineno=564, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=580, col_offset=8), 'write', Load(), lineno=580, col_offset=8), [Name('TUPLE', Load(), lineno=580, col_offset=19)], [], None, None, lineno=580, col_offset=8), lineno=580, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'memoize', Load(), lineno=581, col_offset=8), [Name('obj', Load(), lineno=581, col_offset=21)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8)], [], lineno=532, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=583, col_offset=4), Index(Name('TupleType', Load(), lineno=583, col_offset=13)), Store(), lineno=583, col_offset=4)], Name('save_tuple', Load(), lineno=583, col_offset=26), lineno=583, col_offset=4), FunctionDef('save_empty_tuple', arguments([Name('self', Param(), lineno=588, col_offset=25), Name('obj', Param(), lineno=588, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=589, col_offset=8), 'write', Load(), lineno=589, col_offset=8), [Name('EMPTY_TUPLE', Load(), lineno=589, col_offset=19)], [], None, None, lineno=589, col_offset=8), lineno=589, col_offset=8)], [], lineno=588, col_offset=4), FunctionDef('save_list', arguments([Name('self', Param(), lineno=591, col_offset=18), Name('obj', Param(), lineno=591, col_offset=24)], None, None, []), [Assign([Name('write', Store(), lineno=592, col_offset=8)], Attribute(Name('self', Load(), lineno=592, col_offset=16), 'write', Load(), lineno=592, col_offset=16), lineno=592, col_offset=8), If(Attribute(Name('self', Load(), lineno=594, col_offset=11), 'bin', Load(), lineno=594, col_offset=11), [Expr(Call(Name('write', Load(), lineno=595, col_offset=12), [Name('EMPTY_LIST', Load(), lineno=595, col_offset=18)], [], None, None, lineno=595, col_offset=12), lineno=595, col_offset=12)], [Expr(Call(Name('write', Load(), lineno=597, col_offset=12), [BinOp(Name('MARK', Load(), lineno=597, col_offset=18), Add(), Name('LIST', Load(), lineno=597, col_offset=25), lineno=597, col_offset=18)], [], None, None, lineno=597, col_offset=12), lineno=597, col_offset=12)], lineno=594, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=599, col_offset=8), 'memoize', Load(), lineno=599, col_offset=8), [Name('obj', Load(), lineno=599, col_offset=21)], [], None, None, lineno=599, col_offset=8), lineno=599, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=8), '_batch_appends', Load(), lineno=600, col_offset=8), [Call(Name('iter', Load(), lineno=600, col_offset=28), [Name('obj', Load(), lineno=600, col_offset=33)], [], None, None, lineno=600, col_offset=28)], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8)], [], lineno=591, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=602, col_offset=4), Index(Name('ListType', Load(), lineno=602, col_offset=13)), Store(), lineno=602, col_offset=4)], Name('save_list', Load(), lineno=602, col_offset=25), lineno=602, col_offset=4), Assign([Name('_BATCHSIZE', Store(), lineno=606, col_offset=4)], Num(1000, lineno=606, col_offset=17), lineno=606, col_offset=4), FunctionDef('_batch_appends', arguments([Name('self', Param(), lineno=608, col_offset=23), Name('items', Param(), lineno=608, col_offset=29)], None, None, []), [Assign([Name('save', Store(), lineno=610, col_offset=8)], Attribute(Name('self', Load(), lineno=610, col_offset=15), 'save', Load(), lineno=610, col_offset=15), lineno=610, col_offset=8), Assign([Name('write', Store(), lineno=611, col_offset=8)], Attribute(Name('self', Load(), lineno=611, col_offset=16), 'write', Load(), lineno=611, col_offset=16), lineno=611, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=613, col_offset=15), 'bin', Load(), lineno=613, col_offset=15), lineno=613, col_offset=11), [For(Name('x', Store(), lineno=614, col_offset=16), Name('items', Load(), lineno=614, col_offset=21), [Expr(Call(Name('save', Load(), lineno=615, col_offset=16), [Name('x', Load(), lineno=615, col_offset=21)], [], None, None, lineno=615, col_offset=16), lineno=615, col_offset=16), Expr(Call(Name('write', Load(), lineno=616, col_offset=16), [Name('APPEND', Load(), lineno=616, col_offset=22)], [], None, None, lineno=616, col_offset=16), lineno=616, col_offset=16)], [], lineno=614, col_offset=12), Return(None, lineno=617, col_offset=12)], [], lineno=613, col_offset=8), Assign([Name('r', Store(), lineno=619, col_offset=8)], Call(Name('xrange', Load(), lineno=619, col_offset=12), [Attribute(Name('self', Load(), lineno=619, col_offset=19), '_BATCHSIZE', Load(), lineno=619, col_offset=19)], [], None, None, lineno=619, col_offset=12), lineno=619, col_offset=8), While(Compare(Name('items', Load(), lineno=620, col_offset=14), [IsNot()], [Name('None', Load(), lineno=620, col_offset=27)], lineno=620, col_offset=14), [Assign([Name('tmp', Store(), lineno=621, col_offset=12)], List([], Load(), lineno=621, col_offset=18), lineno=621, col_offset=12), For(Name('i', Store(), lineno=622, col_offset=16), Name('r', Load(), lineno=622, col_offset=21), [TryExcept([Assign([Name('x', Store(), lineno=624, col_offset=20)], Call(Attribute(Name('items', Load(), lineno=624, col_offset=24), 'next', Load(), lineno=624, col_offset=24), [], [], None, None, lineno=624, col_offset=24), lineno=624, col_offset=20), Expr(Call(Attribute(Name('tmp', Load(), lineno=625, col_offset=20), 'append', Load(), lineno=625, col_offset=20), [Name('x', Load(), lineno=625, col_offset=31)], [], None, None, lineno=625, col_offset=20), lineno=625, col_offset=20)], [ExceptHandler(Name('StopIteration', Load(), lineno=626, col_offset=23), None, [Assign([Name('items', Store(), lineno=627, col_offset=20)], Name('None', Load(), lineno=627, col_offset=28), lineno=627, col_offset=20), Break( lineno=628, col_offset=20)], lineno=626, col_offset=16)], [], lineno=623, col_offset=16)], [], lineno=622, col_offset=12), Assign([Name('n', Store(), lineno=629, col_offset=12)], Call(Name('len', Load(), lineno=629, col_offset=16), [Name('tmp', Load(), lineno=629, col_offset=20)], [], None, None, lineno=629, col_offset=16), lineno=629, col_offset=12), If(Compare(Name('n', Load(), lineno=630, col_offset=15), [Gt()], [Num(1, lineno=630, col_offset=19)], lineno=630, col_offset=15), [Expr(Call(Name('write', Load(), lineno=631, col_offset=16), [Name('MARK', Load(), lineno=631, col_offset=22)], [], None, None, lineno=631, col_offset=16), lineno=631, col_offset=16), For(Name('x', Store(), lineno=632, col_offset=20), Name('tmp', Load(), lineno=632, col_offset=25), [Expr(Call(Name('save', Load(), lineno=633, col_offset=20), [Name('x', Load(), lineno=633, col_offset=25)], [], None, None, lineno=633, col_offset=20), lineno=633, col_offset=20)], [], lineno=632, col_offset=16), Expr(Call(Name('write', Load(), lineno=634, col_offset=16), [Name('APPENDS', Load(), lineno=634, col_offset=22)], [], None, None, lineno=634, col_offset=16), lineno=634, col_offset=16)], [If(Name('n', Load(), lineno=635, col_offset=17), [Expr(Call(Name('save', Load(), lineno=636, col_offset=16), [Subscript(Name('tmp', Load(), lineno=636, col_offset=21), Index(Num(0, lineno=636, col_offset=25)), Load(), lineno=636, col_offset=21)], [], None, None, lineno=636, col_offset=16), lineno=636, col_offset=16), Expr(Call(Name('write', Load(), lineno=637, col_offset=16), [Name('APPEND', Load(), lineno=637, col_offset=22)], [], None, None, lineno=637, col_offset=16), lineno=637, col_offset=16)], [], lineno=635, col_offset=17)], lineno=630, col_offset=12)], [], lineno=620, col_offset=8)], [], lineno=608, col_offset=4), FunctionDef('save_dict', arguments([Name('self', Param(), lineno=640, col_offset=18), Name('obj', Param(), lineno=640, col_offset=24)], None, None, []), [Assign([Name('write', Store(), lineno=641, col_offset=8)], Attribute(Name('self', Load(), lineno=641, col_offset=16), 'write', Load(), lineno=641, col_offset=16), lineno=641, col_offset=8), If(Attribute(Name('self', Load(), lineno=643, col_offset=11), 'bin', Load(), lineno=643, col_offset=11), [Expr(Call(Name('write', Load(), lineno=644, col_offset=12), [Name('EMPTY_DICT', Load(), lineno=644, col_offset=18)], [], None, None, lineno=644, col_offset=12), lineno=644, col_offset=12)], [Expr(Call(Name('write', Load(), lineno=646, col_offset=12), [BinOp(Name('MARK', Load(), lineno=646, col_offset=18), Add(), Name('DICT', Load(), lineno=646, col_offset=25), lineno=646, col_offset=18)], [], None, None, lineno=646, col_offset=12), lineno=646, col_offset=12)], lineno=643, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=648, col_offset=8), 'memoize', Load(), lineno=648, col_offset=8), [Name('obj', Load(), lineno=648, col_offset=21)], [], None, None, lineno=648, col_offset=8), lineno=648, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=649, col_offset=8), '_batch_setitems', Load(), lineno=649, col_offset=8), [Call(Attribute(Name('obj', Load(), lineno=649, col_offset=29), 'iteritems', Load(), lineno=649, col_offset=29), [], [], None, None, lineno=649, col_offset=29)], [], None, None, lineno=649, col_offset=8), lineno=649, col_offset=8)], [], lineno=640, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=651, col_offset=4), Index(Name('DictionaryType', Load(), lineno=651, col_offset=13)), Store(), lineno=651, col_offset=4)], Name('save_dict', Load(), lineno=651, col_offset=31), lineno=651, col_offset=4), If(UnaryOp(Not(), Compare(Name('PyStringMap', Load(), lineno=652, col_offset=11), [Is()], [Name('None', Load(), lineno=652, col_offset=26)], lineno=652, col_offset=11), lineno=652, col_offset=7), [Assign([Subscript(Name('dispatch', Load(), lineno=653, col_offset=8), Index(Name('PyStringMap', Load(), lineno=653, col_offset=17)), Store(), lineno=653, col_offset=8)], Name('save_dict', Load(), lineno=653, col_offset=32), lineno=653, col_offset=8)], [], lineno=652, col_offset=4), FunctionDef('_batch_setitems', arguments([Name('self', Param(), lineno=655, col_offset=24), Name('items', Param(), lineno=655, col_offset=30)], None, None, []), [Assign([Name('save', Store(), lineno=657, col_offset=8)], Attribute(Name('self', Load(), lineno=657, col_offset=15), 'save', Load(), lineno=657, col_offset=15), lineno=657, col_offset=8), Assign([Name('write', Store(), lineno=658, col_offset=8)], Attribute(Name('self', Load(), lineno=658, col_offset=16), 'write', Load(), lineno=658, col_offset=16), lineno=658, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=660, col_offset=15), 'bin', Load(), lineno=660, col_offset=15), lineno=660, col_offset=11), [For(Tuple([Name('k', Store(), lineno=661, col_offset=16), Name('v', Store(), lineno=661, col_offset=19)], Store(), lineno=661, col_offset=16), Name('items', Load(), lineno=661, col_offset=24), [Expr(Call(Name('save', Load(), lineno=662, col_offset=16), [Name('k', Load(), lineno=662, col_offset=21)], [], None, None, lineno=662, col_offset=16), lineno=662, col_offset=16), Expr(Call(Name('save', Load(), lineno=663, col_offset=16), [Name('v', Load(), lineno=663, col_offset=21)], [], None, None, lineno=663, col_offset=16), lineno=663, col_offset=16), Expr(Call(Name('write', Load(), lineno=664, col_offset=16), [Name('SETITEM', Load(), lineno=664, col_offset=22)], [], None, None, lineno=664, col_offset=16), lineno=664, col_offset=16)], [], lineno=661, col_offset=12), Return(None, lineno=665, col_offset=12)], [], lineno=660, col_offset=8), Assign([Name('r', Store(), lineno=667, col_offset=8)], Call(Name('xrange', Load(), lineno=667, col_offset=12), [Attribute(Name('self', Load(), lineno=667, col_offset=19), '_BATCHSIZE', Load(), lineno=667, col_offset=19)], [], None, None, lineno=667, col_offset=12), lineno=667, col_offset=8), While(Compare(Name('items', Load(), lineno=668, col_offset=14), [IsNot()], [Name('None', Load(), lineno=668, col_offset=27)], lineno=668, col_offset=14), [Assign([Name('tmp', Store(), lineno=669, col_offset=12)], List([], Load(), lineno=669, col_offset=18), lineno=669, col_offset=12), For(Name('i', Store(), lineno=670, col_offset=16), Name('r', Load(), lineno=670, col_offset=21), [TryExcept([Expr(Call(Attribute(Name('tmp', Load(), lineno=672, col_offset=20), 'append', Load(), lineno=672, col_offset=20), [Call(Attribute(Name('items', Load(), lineno=672, col_offset=31), 'next', Load(), lineno=672, col_offset=31), [], [], None, None, lineno=672, col_offset=31)], [], None, None, lineno=672, col_offset=20), lineno=672, col_offset=20)], [ExceptHandler(Name('StopIteration', Load(), lineno=673, col_offset=23), None, [Assign([Name('items', Store(), lineno=674, col_offset=20)], Name('None', Load(), lineno=674, col_offset=28), lineno=674, col_offset=20), Break( lineno=675, col_offset=20)], lineno=673, col_offset=16)], [], lineno=671, col_offset=16)], [], lineno=670, col_offset=12), Assign([Name('n', Store(), lineno=676, col_offset=12)], Call(Name('len', Load(), lineno=676, col_offset=16), [Name('tmp', Load(), lineno=676, col_offset=20)], [], None, None, lineno=676, col_offset=16), lineno=676, col_offset=12), If(Compare(Name('n', Load(), lineno=677, col_offset=15), [Gt()], [Num(1, lineno=677, col_offset=19)], lineno=677, col_offset=15), [Expr(Call(Name('write', Load(), lineno=678, col_offset=16), [Name('MARK', Load(), lineno=678, col_offset=22)], [], None, None, lineno=678, col_offset=16), lineno=678, col_offset=16), For(Tuple([Name('k', Store(), lineno=679, col_offset=20), Name('v', Store(), lineno=679, col_offset=23)], Store(), lineno=679, col_offset=20), Name('tmp', Load(), lineno=679, col_offset=28), [Expr(Call(Name('save', Load(), lineno=680, col_offset=20), [Name('k', Load(), lineno=680, col_offset=25)], [], None, None, lineno=680, col_offset=20), lineno=680, col_offset=20), Expr(Call(Name('save', Load(), lineno=681, col_offset=20), [Name('v', Load(), lineno=681, col_offset=25)], [], None, None, lineno=681, col_offset=20), lineno=681, col_offset=20)], [], lineno=679, col_offset=16), Expr(Call(Name('write', Load(), lineno=682, col_offset=16), [Name('SETITEMS', Load(), lineno=682, col_offset=22)], [], None, None, lineno=682, col_offset=16), lineno=682, col_offset=16)], [If(Name('n', Load(), lineno=683, col_offset=17), [Assign([Tuple([Name('k', Store(), lineno=684, col_offset=16), Name('v', Store(), lineno=684, col_offset=19)], Store(), lineno=684, col_offset=16)], Subscript(Name('tmp', Load(), lineno=684, col_offset=23), Index(Num(0, lineno=684, col_offset=27)), Load(), lineno=684, col_offset=23), lineno=684, col_offset=16), Expr(Call(Name('save', Load(), lineno=685, col_offset=16), [Name('k', Load(), lineno=685, col_offset=21)], [], None, None, lineno=685, col_offset=16), lineno=685, col_offset=16), Expr(Call(Name('save', Load(), lineno=686, col_offset=16), [Name('v', Load(), lineno=686, col_offset=21)], [], None, None, lineno=686, col_offset=16), lineno=686, col_offset=16), Expr(Call(Name('write', Load(), lineno=687, col_offset=16), [Name('SETITEM', Load(), lineno=687, col_offset=22)], [], None, None, lineno=687, col_offset=16), lineno=687, col_offset=16)], [], lineno=683, col_offset=17)], lineno=677, col_offset=12)], [], lineno=668, col_offset=8)], [], lineno=655, col_offset=4), FunctionDef('save_inst', arguments([Name('self', Param(), lineno=690, col_offset=18), Name('obj', Param(), lineno=690, col_offset=24)], None, None, []), [Assign([Name('cls', Store(), lineno=691, col_offset=8)], Attribute(Name('obj', Load(), lineno=691, col_offset=14), '__class__', Load(), lineno=691, col_offset=14), lineno=691, col_offset=8), Assign([Name('memo', Store(), lineno=693, col_offset=8)], Attribute(Name('self', Load(), lineno=693, col_offset=16), 'memo', Load(), lineno=693, col_offset=16), lineno=693, col_offset=8), Assign([Name('write', Store(), lineno=694, col_offset=8)], Attribute(Name('self', Load(), lineno=694, col_offset=16), 'write', Load(), lineno=694, col_offset=16), lineno=694, col_offset=8), Assign([Name('save', Store(), lineno=695, col_offset=8)], Attribute(Name('self', Load(), lineno=695, col_offset=16), 'save', Load(), lineno=695, col_offset=16), lineno=695, col_offset=8), If(Call(Name('hasattr', Load(), lineno=697, col_offset=11), [Name('obj', Load(), lineno=697, col_offset=19), Str('__getinitargs__', lineno=697, col_offset=24)], [], None, None, lineno=697, col_offset=11), [Assign([Name('args', Store(), lineno=698, col_offset=12)], Call(Attribute(Name('obj', Load(), lineno=698, col_offset=19), '__getinitargs__', Load(), lineno=698, col_offset=19), [], [], None, None, lineno=698, col_offset=19), lineno=698, col_offset=12), Expr(Call(Name('len', Load(), lineno=699, col_offset=12), [Name('args', Load(), lineno=699, col_offset=16)], [], None, None, lineno=699, col_offset=12), lineno=699, col_offset=12), Expr(Call(Name('_keep_alive', Load(), lineno=700, col_offset=12), [Name('args', Load(), lineno=700, col_offset=24), Name('memo', Load(), lineno=700, col_offset=30)], [], None, None, lineno=700, col_offset=12), lineno=700, col_offset=12)], [Assign([Name('args', Store(), lineno=702, col_offset=12)], Tuple([], Load(), lineno=702, col_offset=19), lineno=702, col_offset=12)], lineno=697, col_offset=8), Expr(Call(Name('write', Load(), lineno=704, col_offset=8), [Name('MARK', Load(), lineno=704, col_offset=14)], [], None, None, lineno=704, col_offset=8), lineno=704, col_offset=8), If(Attribute(Name('self', Load(), lineno=706, col_offset=11), 'bin', Load(), lineno=706, col_offset=11), [Expr(Call(Name('save', Load(), lineno=707, col_offset=12), [Name('cls', Load(), lineno=707, col_offset=17)], [], None, None, lineno=707, col_offset=12), lineno=707, col_offset=12), For(Name('arg', Store(), lineno=708, col_offset=16), Name('args', Load(), lineno=708, col_offset=23), [Expr(Call(Name('save', Load(), lineno=709, col_offset=16), [Name('arg', Load(), lineno=709, col_offset=21)], [], None, None, lineno=709, col_offset=16), lineno=709, col_offset=16)], [], lineno=708, col_offset=12), Expr(Call(Name('write', Load(), lineno=710, col_offset=12), [Name('OBJ', Load(), lineno=710, col_offset=18)], [], None, None, lineno=710, col_offset=12), lineno=710, col_offset=12)], [For(Name('arg', Store(), lineno=712, col_offset=16), Name('args', Load(), lineno=712, col_offset=23), [Expr(Call(Name('save', Load(), lineno=713, col_offset=16), [Name('arg', Load(), lineno=713, col_offset=21)], [], None, None, lineno=713, col_offset=16), lineno=713, col_offset=16)], [], lineno=712, col_offset=12), Expr(Call(Name('write', Load(), lineno=714, col_offset=12), [BinOp(BinOp(BinOp(BinOp(Name('INST', Load(), lineno=714, col_offset=18), Add(), Attribute(Name('cls', Load(), lineno=714, col_offset=25), '__module__', Load(), lineno=714, col_offset=25), lineno=714, col_offset=18), Add(), Str('\n', lineno=714, col_offset=42), lineno=714, col_offset=40), Add(), Attribute(Name('cls', Load(), lineno=714, col_offset=49), '__name__', Load(), lineno=714, col_offset=49), lineno=714, col_offset=47), Add(), Str('\n', lineno=714, col_offset=64), lineno=714, col_offset=62)], [], None, None, lineno=714, col_offset=12), lineno=714, col_offset=12)], lineno=706, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=716, col_offset=8), 'memoize', Load(), lineno=716, col_offset=8), [Name('obj', Load(), lineno=716, col_offset=21)], [], None, None, lineno=716, col_offset=8), lineno=716, col_offset=8), TryExcept([Assign([Name('getstate', Store(), lineno=719, col_offset=12)], Attribute(Name('obj', Load(), lineno=719, col_offset=23), '__getstate__', Load(), lineno=719, col_offset=23), lineno=719, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=720, col_offset=15), None, [Assign([Name('stuff', Store(), lineno=721, col_offset=12)], Attribute(Name('obj', Load(), lineno=721, col_offset=20), '__dict__', Load(), lineno=721, col_offset=20), lineno=721, col_offset=12)], lineno=720, col_offset=8)], [Assign([Name('stuff', Store(), lineno=723, col_offset=12)], Call(Name('getstate', Load(), lineno=723, col_offset=20), [], [], None, None, lineno=723, col_offset=20), lineno=723, col_offset=12), Expr(Call(Name('_keep_alive', Load(), lineno=724, col_offset=12), [Name('stuff', Load(), lineno=724, col_offset=24), Name('memo', Load(), lineno=724, col_offset=31)], [], None, None, lineno=724, col_offset=12), lineno=724, col_offset=12)], lineno=718, col_offset=8), Expr(Call(Name('save', Load(), lineno=725, col_offset=8), [Name('stuff', Load(), lineno=725, col_offset=13)], [], None, None, lineno=725, col_offset=8), lineno=725, col_offset=8), Expr(Call(Name('write', Load(), lineno=726, col_offset=8), [Name('BUILD', Load(), lineno=726, col_offset=14)], [], None, None, lineno=726, col_offset=8), lineno=726, col_offset=8)], [], lineno=690, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=728, col_offset=4), Index(Name('InstanceType', Load(), lineno=728, col_offset=13)), Store(), lineno=728, col_offset=4)], Name('save_inst', Load(), lineno=728, col_offset=29), lineno=728, col_offset=4), FunctionDef('save_global', arguments([Name('self', Param(), lineno=730, col_offset=20), Name('obj', Param(), lineno=730, col_offset=26), Name('name', Param(), lineno=730, col_offset=31), Name('pack', Param(), lineno=730, col_offset=42)], None, None, [Name('None', Load(), lineno=730, col_offset=36), Attribute(Name('struct', Load(), lineno=730, col_offset=47), 'pack', Load(), lineno=730, col_offset=47)]), [Assign([Name('write', Store(), lineno=731, col_offset=8)], Attribute(Name('self', Load(), lineno=731, col_offset=16), 'write', Load(), lineno=731, col_offset=16), lineno=731, col_offset=8), Assign([Name('memo', Store(), lineno=732, col_offset=8)], Attribute(Name('self', Load(), lineno=732, col_offset=15), 'memo', Load(), lineno=732, col_offset=15), lineno=732, col_offset=8), If(Compare(Name('name', Load(), lineno=734, col_offset=11), [Is()], [Name('None', Load(), lineno=734, col_offset=19)], lineno=734, col_offset=11), [Assign([Name('name', Store(), lineno=735, col_offset=12)], Attribute(Name('obj', Load(), lineno=735, col_offset=19), '__name__', Load(), lineno=735, col_offset=19), lineno=735, col_offset=12)], [], lineno=734, col_offset=8), Assign([Name('module', Store(), lineno=737, col_offset=8)], Call(Name('getattr', Load(), lineno=737, col_offset=17), [Name('obj', Load(), lineno=737, col_offset=25), Str('__module__', lineno=737, col_offset=30), Name('None', Load(), lineno=737, col_offset=44)], [], None, None, lineno=737, col_offset=17), lineno=737, col_offset=8), If(Compare(Name('module', Load(), lineno=738, col_offset=11), [Is()], [Name('None', Load(), lineno=738, col_offset=21)], lineno=738, col_offset=11), [Assign([Name('module', Store(), lineno=739, col_offset=12)], Call(Name('whichmodule', Load(), lineno=739, col_offset=21), [Name('obj', Load(), lineno=739, col_offset=33), Name('name', Load(), lineno=739, col_offset=38)], [], None, None, lineno=739, col_offset=21), lineno=739, col_offset=12)], [], lineno=738, col_offset=8), TryExcept([Expr(Call(Name('__import__', Load(), lineno=742, col_offset=12), [Name('module', Load(), lineno=742, col_offset=23)], [], None, None, lineno=742, col_offset=12), lineno=742, col_offset=12), Assign([Name('mod', Store(), lineno=743, col_offset=12)], Subscript(Attribute(Name('sys', Load(), lineno=743, col_offset=18), 'modules', Load(), lineno=743, col_offset=18), Index(Name('module', Load(), lineno=743, col_offset=30)), Load(), lineno=743, col_offset=18), lineno=743, col_offset=12), Assign([Name('klass', Store(), lineno=744, col_offset=12)], Call(Name('getattr', Load(), lineno=744, col_offset=20), [Name('mod', Load(), lineno=744, col_offset=28), Name('name', Load(), lineno=744, col_offset=33)], [], None, None, lineno=744, col_offset=20), lineno=744, col_offset=12)], [ExceptHandler(Tuple([Name('ImportError', Load(), lineno=745, col_offset=16), Name('KeyError', Load(), lineno=745, col_offset=29), Name('AttributeError', Load(), lineno=745, col_offset=39)], Load(), lineno=745, col_offset=16), None, [Raise(Call(Name('PicklingError', Load(), lineno=746, col_offset=18), [BinOp(Str("Can't pickle %r: it's not found as %s.%s", lineno=747, col_offset=16), Mod(), Tuple([Name('obj', Load(), lineno=748, col_offset=17), Name('module', Load(), lineno=748, col_offset=22), Name('name', Load(), lineno=748, col_offset=30)], Load(), lineno=748, col_offset=17), lineno=747, col_offset=16)], [], None, None, lineno=746, col_offset=18), None, None, lineno=746, col_offset=12)], lineno=745, col_offset=8)], [If(Compare(Name('klass', Load(), lineno=750, col_offset=15), [IsNot()], [Name('obj', Load(), lineno=750, col_offset=28)], lineno=750, col_offset=15), [Raise(Call(Name('PicklingError', Load(), lineno=751, col_offset=22), [BinOp(Str("Can't pickle %r: it's not the same object as %s.%s", lineno=752, col_offset=20), Mod(), Tuple([Name('obj', Load(), lineno=753, col_offset=21), Name('module', Load(), lineno=753, col_offset=26), Name('name', Load(), lineno=753, col_offset=34)], Load(), lineno=753, col_offset=21), lineno=752, col_offset=20)], [], None, None, lineno=751, col_offset=22), None, None, lineno=751, col_offset=16)], [], lineno=750, col_offset=12)], lineno=741, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=755, col_offset=11), 'proto', Load(), lineno=755, col_offset=11), [GtE()], [Num(2, lineno=755, col_offset=25)], lineno=755, col_offset=11), [Assign([Name('code', Store(), lineno=756, col_offset=12)], Call(Attribute(Name('_extension_registry', Load(), lineno=756, col_offset=19), 'get', Load(), lineno=756, col_offset=19), [Tuple([Name('module', Load(), lineno=756, col_offset=44), Name('name', Load(), lineno=756, col_offset=52)], Load(), lineno=756, col_offset=44)], [], None, None, lineno=756, col_offset=19), lineno=756, col_offset=12), If(Name('code', Load(), lineno=757, col_offset=15), [Assert(Compare(Name('code', Load(), lineno=758, col_offset=23), [Gt()], [Num(0, lineno=758, col_offset=30)], lineno=758, col_offset=23), None, lineno=758, col_offset=16), If(Compare(Name('code', Load(), lineno=759, col_offset=19), [LtE()], [Num(255, lineno=759, col_offset=27)], lineno=759, col_offset=19), [Expr(Call(Name('write', Load(), lineno=760, col_offset=20), [BinOp(Name('EXT1', Load(), lineno=760, col_offset=26), Add(), Call(Name('chr', Load(), lineno=760, col_offset=33), [Name('code', Load(), lineno=760, col_offset=37)], [], None, None, lineno=760, col_offset=33), lineno=760, col_offset=26)], [], None, None, lineno=760, col_offset=20), lineno=760, col_offset=20)], [If(Compare(Name('code', Load(), lineno=761, col_offset=21), [LtE()], [Num(65535, lineno=761, col_offset=29)], lineno=761, col_offset=21), [Expr(Call(Name('write', Load(), lineno=762, col_offset=20), [BinOp(Str('%c%c%c', lineno=762, col_offset=26), Mod(), Tuple([Name('EXT2', Load(), lineno=762, col_offset=38), BinOp(Name('code', Load(), lineno=762, col_offset=44), BitAnd(), Num(255, lineno=762, col_offset=49), lineno=762, col_offset=44), BinOp(Name('code', Load(), lineno=762, col_offset=55), RShift(), Num(8, lineno=762, col_offset=61), lineno=762, col_offset=55)], Load(), lineno=762, col_offset=38), lineno=762, col_offset=26)], [], None, None, lineno=762, col_offset=20), lineno=762, col_offset=20)], [Expr(Call(Name('write', Load(), lineno=764, col_offset=20), [BinOp(Name('EXT4', Load(), lineno=764, col_offset=26), Add(), Call(Name('pack', Load(), lineno=764, col_offset=33), [Str('<i', lineno=764, col_offset=38), Name('code', Load(), lineno=764, col_offset=44)], [], None, None, lineno=764, col_offset=33), lineno=764, col_offset=26)], [], None, None, lineno=764, col_offset=20), lineno=764, col_offset=20)], lineno=761, col_offset=21)], lineno=759, col_offset=16), Return(None, lineno=765, col_offset=16)], [], lineno=757, col_offset=12)], [], lineno=755, col_offset=8), Expr(Call(Name('write', Load(), lineno=767, col_offset=8), [BinOp(BinOp(BinOp(BinOp(Name('GLOBAL', Load(), lineno=767, col_offset=14), Add(), Name('module', Load(), lineno=767, col_offset=23), lineno=767, col_offset=14), Add(), Str('\n', lineno=767, col_offset=32), lineno=767, col_offset=30), Add(), Name('name', Load(), lineno=767, col_offset=39), lineno=767, col_offset=37), Add(), Str('\n', lineno=767, col_offset=46), lineno=767, col_offset=44)], [], None, None, lineno=767, col_offset=8), lineno=767, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=768, col_offset=8), 'memoize', Load(), lineno=768, col_offset=8), [Name('obj', Load(), lineno=768, col_offset=21)], [], None, None, lineno=768, col_offset=8), lineno=768, col_offset=8)], [], lineno=730, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=770, col_offset=4), Index(Name('ClassType', Load(), lineno=770, col_offset=13)), Store(), lineno=770, col_offset=4)], Name('save_global', Load(), lineno=770, col_offset=26), lineno=770, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=771, col_offset=4), Index(Name('FunctionType', Load(), lineno=771, col_offset=13)), Store(), lineno=771, col_offset=4)], Name('save_global', Load(), lineno=771, col_offset=29), lineno=771, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=772, col_offset=4), Index(Name('BuiltinFunctionType', Load(), lineno=772, col_offset=13)), Store(), lineno=772, col_offset=4)], Name('save_global', Load(), lineno=772, col_offset=36), lineno=772, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=773, col_offset=4), Index(Name('TypeType', Load(), lineno=773, col_offset=13)), Store(), lineno=773, col_offset=4)], Name('save_global', Load(), lineno=773, col_offset=25), lineno=773, col_offset=4)], [], lineno=171, col_offset=0), FunctionDef('_keep_alive', arguments([Name('x', Param(), lineno=777, col_offset=16), Name('memo', Param(), lineno=777, col_offset=19)], None, None, []), [Expr(Str('Keeps a reference to the object x in the memo.\n\n    Because we remember objects by their id, we have\n    to assure that possibly temporary objects are kept\n    alive by referencing them.\n    We store a reference at the id of the memo, which should\n    normally not be used unless someone tries to deepcopy\n    the memo itself...\n    ', lineno=786, col_offset=-1), lineno=786, col_offset=-1), TryExcept([Expr(Call(Attribute(Subscript(Name('memo', Load(), lineno=788, col_offset=8), Index(Call(Name('id', Load(), lineno=788, col_offset=13), [Name('memo', Load(), lineno=788, col_offset=16)], [], None, None, lineno=788, col_offset=13)), Load(), lineno=788, col_offset=8), 'append', Load(), lineno=788, col_offset=8), [Name('x', Load(), lineno=788, col_offset=30)], [], None, None, lineno=788, col_offset=8), lineno=788, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=789, col_offset=11), None, [Assign([Subscript(Name('memo', Load(), lineno=791, col_offset=8), Index(Call(Name('id', Load(), lineno=791, col_offset=13), [Name('memo', Load(), lineno=791, col_offset=16)], [], None, None, lineno=791, col_offset=13)), Store(), lineno=791, col_offset=8)], List([Name('x', Load(), lineno=791, col_offset=24)], Load(), lineno=791, col_offset=23), lineno=791, col_offset=8)], lineno=789, col_offset=4)], [], lineno=787, col_offset=4)], [], lineno=777, col_offset=0), Assign([Name('classmap', Store(), lineno=797, col_offset=0)], Dict([], [], lineno=797, col_offset=11), lineno=797, col_offset=0), FunctionDef('whichmodule', arguments([Name('func', Param(), lineno=799, col_offset=16), Name('funcname', Param(), lineno=799, col_offset=22)], None, None, []), [Expr(Str('Figure out the module in which a function occurs.\n\n    Search sys.modules for the module.\n    Cache in classmap.\n    Return a module name.\n    If the function cannot be found, return "__main__".\n    ', lineno=806, col_offset=-1), lineno=806, col_offset=-1), Assign([Name('mod', Store(), lineno=808, col_offset=4)], Call(Name('getattr', Load(), lineno=808, col_offset=10), [Name('func', Load(), lineno=808, col_offset=18), Str('__module__', lineno=808, col_offset=24), Name('None', Load(), lineno=808, col_offset=38)], [], None, None, lineno=808, col_offset=10), lineno=808, col_offset=4), If(Compare(Name('mod', Load(), lineno=809, col_offset=7), [IsNot()], [Name('None', Load(), lineno=809, col_offset=18)], lineno=809, col_offset=7), [Return(Name('mod', Load(), lineno=810, col_offset=15), lineno=810, col_offset=8)], [], lineno=809, col_offset=4), If(Compare(Name('func', Load(), lineno=811, col_offset=7), [In()], [Name('classmap', Load(), lineno=811, col_offset=15)], lineno=811, col_offset=7), [Return(Subscript(Name('classmap', Load(), lineno=812, col_offset=15), Index(Name('func', Load(), lineno=812, col_offset=24)), Load(), lineno=812, col_offset=15), lineno=812, col_offset=8)], [], lineno=811, col_offset=4), For(Tuple([Name('name', Store(), lineno=814, col_offset=8), Name('module', Store(), lineno=814, col_offset=14)], Store(), lineno=814, col_offset=8), Call(Attribute(Attribute(Name('sys', Load(), lineno=814, col_offset=24), 'modules', Load(), lineno=814, col_offset=24), 'items', Load(), lineno=814, col_offset=24), [], [], None, None, lineno=814, col_offset=24), [If(Compare(Name('module', Load(), lineno=815, col_offset=11), [Is()], [Name('None', Load(), lineno=815, col_offset=21)], lineno=815, col_offset=11), [Continue( lineno=816, col_offset=12)], [], lineno=815, col_offset=8), If(BoolOp(And(), [Compare(Name('name', Load(), lineno=817, col_offset=11), [NotEq()], [Str('__main__', lineno=817, col_offset=19)], lineno=817, col_offset=11), Compare(Call(Name('getattr', Load(), lineno=817, col_offset=34), [Name('module', Load(), lineno=817, col_offset=42), Name('funcname', Load(), lineno=817, col_offset=50), Name('None', Load(), lineno=817, col_offset=60)], [], None, None, lineno=817, col_offset=34), [Is()], [Name('func', Load(), lineno=817, col_offset=69)], lineno=817, col_offset=34)], lineno=817, col_offset=11), [Break( lineno=818, col_offset=12)], [], lineno=817, col_offset=8)], [Assign([Name('name', Store(), lineno=820, col_offset=8)], Str('__main__', lineno=820, col_offset=15), lineno=820, col_offset=8)], lineno=814, col_offset=4), Assign([Subscript(Name('classmap', Load(), lineno=821, col_offset=4), Index(Name('func', Load(), lineno=821, col_offset=13)), Store(), lineno=821, col_offset=4)], Name('name', Load(), lineno=821, col_offset=21), lineno=821, col_offset=4), Return(Name('name', Load(), lineno=822, col_offset=11), lineno=822, col_offset=4)], [], lineno=799, col_offset=0), ClassDef('Unpickler', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=829, col_offset=17), Name('file', Param(), lineno=829, col_offset=23)], None, None, []), [Expr(Str('This takes a file-like object for reading a pickle data stream.\n\n        The protocol version of the pickle is detected automatically, so no\n        proto argument is needed.\n\n        The file-like object must have two methods, a read() method that\n        takes an integer argument, and a readline() method that requires no\n        arguments.  Both methods should return a string.  Thus file-like\n        object can be a file object opened for reading, a StringIO object,\n        or any other custom object that meets this interface.\n        ', lineno=840, col_offset=-1), lineno=840, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=841, col_offset=8), 'readline', Store(), lineno=841, col_offset=8)], Attribute(Name('file', Load(), lineno=841, col_offset=24), 'readline', Load(), lineno=841, col_offset=24), lineno=841, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=842, col_offset=8), 'read', Store(), lineno=842, col_offset=8)], Attribute(Name('file', Load(), lineno=842, col_offset=20), 'read', Load(), lineno=842, col_offset=20), lineno=842, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=843, col_offset=8), 'memo', Store(), lineno=843, col_offset=8)], Dict([], [], lineno=843, col_offset=20), lineno=843, col_offset=8)], [], lineno=829, col_offset=4), FunctionDef('load', arguments([Name('self', Param(), lineno=845, col_offset=13)], None, None, []), [Expr(Str('Read a pickled object representation from the open file.\n\n        Return the reconstituted object hierarchy specified in the file.\n        ', lineno=849, col_offset=-1), lineno=849, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=850, col_offset=8), 'mark', Store(), lineno=850, col_offset=8)], Call(Name('object', Load(), lineno=850, col_offset=20), [], [], None, None, lineno=850, col_offset=20), lineno=850, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=851, col_offset=8), 'stack', Store(), lineno=851, col_offset=8)], List([], Load(), lineno=851, col_offset=21), lineno=851, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=852, col_offset=8), 'append', Store(), lineno=852, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=852, col_offset=22), 'stack', Load(), lineno=852, col_offset=22), 'append', Load(), lineno=852, col_offset=22), lineno=852, col_offset=8), Assign([Name('read', Store(), lineno=853, col_offset=8)], Attribute(Name('self', Load(), lineno=853, col_offset=15), 'read', Load(), lineno=853, col_offset=15), lineno=853, col_offset=8), Assign([Name('dispatch', Store(), lineno=854, col_offset=8)], Attribute(Name('self', Load(), lineno=854, col_offset=19), 'dispatch', Load(), lineno=854, col_offset=19), lineno=854, col_offset=8), TryExcept([While(Num(1, lineno=856, col_offset=18), [Assign([Name('key', Store(), lineno=857, col_offset=16)], Call(Name('read', Load(), lineno=857, col_offset=22), [Num(1, lineno=857, col_offset=27)], [], None, None, lineno=857, col_offset=22), lineno=857, col_offset=16), Expr(Call(Subscript(Name('dispatch', Load(), lineno=858, col_offset=16), Index(Name('key', Load(), lineno=858, col_offset=25)), Load(), lineno=858, col_offset=16), [Name('self', Load(), lineno=858, col_offset=30)], [], None, None, lineno=858, col_offset=16), lineno=858, col_offset=16)], [], lineno=856, col_offset=12)], [ExceptHandler(Name('_Stop', Load(), lineno=859, col_offset=15), Name('stopinst', Store(), lineno=859, col_offset=22), [Return(Attribute(Name('stopinst', Load(), lineno=860, col_offset=19), 'value', Load(), lineno=860, col_offset=19), lineno=860, col_offset=12)], lineno=859, col_offset=8)], [], lineno=855, col_offset=8)], [], lineno=845, col_offset=4), FunctionDef('marker', arguments([Name('self', Param(), lineno=870, col_offset=15)], None, None, []), [Assign([Name('stack', Store(), lineno=871, col_offset=8)], Attribute(Name('self', Load(), lineno=871, col_offset=16), 'stack', Load(), lineno=871, col_offset=16), lineno=871, col_offset=8), Assign([Name('mark', Store(), lineno=872, col_offset=8)], Attribute(Name('self', Load(), lineno=872, col_offset=15), 'mark', Load(), lineno=872, col_offset=15), lineno=872, col_offset=8), Assign([Name('k', Store(), lineno=873, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=873, col_offset=12), [Name('stack', Load(), lineno=873, col_offset=16)], [], None, None, lineno=873, col_offset=12), Sub(), Num(1, lineno=873, col_offset=23), lineno=873, col_offset=12), lineno=873, col_offset=8), While(Compare(Subscript(Name('stack', Load(), lineno=874, col_offset=14), Index(Name('k', Load(), lineno=874, col_offset=20)), Load(), lineno=874, col_offset=14), [IsNot()], [Name('mark', Load(), lineno=874, col_offset=30)], lineno=874, col_offset=14), [Assign([Name('k', Store(), lineno=874, col_offset=36)], BinOp(Name('k', Load(), lineno=874, col_offset=40), Sub(), Num(1, lineno=874, col_offset=42), lineno=874, col_offset=40), lineno=874, col_offset=36)], [], lineno=874, col_offset=8), Return(Name('k', Load(), lineno=875, col_offset=15), lineno=875, col_offset=8)], [], lineno=870, col_offset=4), Assign([Name('dispatch', Store(), lineno=877, col_offset=4)], Dict([], [], lineno=877, col_offset=15), lineno=877, col_offset=4), FunctionDef('load_eof', arguments([Name('self', Param(), lineno=879, col_offset=17)], None, None, []), [Raise(Name('EOFError', Load(), lineno=880, col_offset=14), None, None, lineno=880, col_offset=8)], [], lineno=879, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=881, col_offset=4), Index(Str('', lineno=881, col_offset=13)), Store(), lineno=881, col_offset=4)], Name('load_eof', Load(), lineno=881, col_offset=19), lineno=881, col_offset=4), FunctionDef('load_proto', arguments([Name('self', Param(), lineno=883, col_offset=19)], None, None, []), [Assign([Name('proto', Store(), lineno=884, col_offset=8)], Call(Name('ord', Load(), lineno=884, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=884, col_offset=20), 'read', Load(), lineno=884, col_offset=20), [Num(1, lineno=884, col_offset=30)], [], None, None, lineno=884, col_offset=20)], [], None, None, lineno=884, col_offset=16), lineno=884, col_offset=8), If(UnaryOp(Not(), Compare(Num(0, lineno=885, col_offset=15), [LtE(), LtE()], [Name('proto', Load(), lineno=885, col_offset=20), Num(2, lineno=885, col_offset=29)], lineno=885, col_offset=15), lineno=885, col_offset=11), [Raise(Name('ValueError', Load(), lineno=886, col_offset=18), BinOp(Str('unsupported pickle protocol: %d', lineno=886, col_offset=30), Mod(), Name('proto', Load(), lineno=886, col_offset=66), lineno=886, col_offset=30), None, lineno=886, col_offset=12)], [], lineno=885, col_offset=8)], [], lineno=883, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=887, col_offset=4), Index(Name('PROTO', Load(), lineno=887, col_offset=13)), Store(), lineno=887, col_offset=4)], Name('load_proto', Load(), lineno=887, col_offset=22), lineno=887, col_offset=4), FunctionDef('load_persid', arguments([Name('self', Param(), lineno=889, col_offset=20)], None, None, []), [Assign([Name('pid', Store(), lineno=890, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=890, col_offset=14), 'readline', Load(), lineno=890, col_offset=14), [], [], None, None, lineno=890, col_offset=14), Slice(None, Num(-1, lineno=890, col_offset=32), None), Load(), lineno=890, col_offset=14), lineno=890, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=891, col_offset=8), 'append', Load(), lineno=891, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=891, col_offset=20), 'persistent_load', Load(), lineno=891, col_offset=20), [Name('pid', Load(), lineno=891, col_offset=41)], [], None, None, lineno=891, col_offset=20)], [], None, None, lineno=891, col_offset=8), lineno=891, col_offset=8)], [], lineno=889, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=892, col_offset=4), Index(Name('PERSID', Load(), lineno=892, col_offset=13)), Store(), lineno=892, col_offset=4)], Name('load_persid', Load(), lineno=892, col_offset=23), lineno=892, col_offset=4), FunctionDef('load_binpersid', arguments([Name('self', Param(), lineno=894, col_offset=23)], None, None, []), [Assign([Name('pid', Store(), lineno=895, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=895, col_offset=14), 'stack', Load(), lineno=895, col_offset=14), 'pop', Load(), lineno=895, col_offset=14), [], [], None, None, lineno=895, col_offset=14), lineno=895, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=896, col_offset=8), 'append', Load(), lineno=896, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=896, col_offset=20), 'persistent_load', Load(), lineno=896, col_offset=20), [Name('pid', Load(), lineno=896, col_offset=41)], [], None, None, lineno=896, col_offset=20)], [], None, None, lineno=896, col_offset=8), lineno=896, col_offset=8)], [], lineno=894, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=897, col_offset=4), Index(Name('BINPERSID', Load(), lineno=897, col_offset=13)), Store(), lineno=897, col_offset=4)], Name('load_binpersid', Load(), lineno=897, col_offset=26), lineno=897, col_offset=4), FunctionDef('load_none', arguments([Name('self', Param(), lineno=899, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=900, col_offset=8), 'append', Load(), lineno=900, col_offset=8), [Name('None', Load(), lineno=900, col_offset=20)], [], None, None, lineno=900, col_offset=8), lineno=900, col_offset=8)], [], lineno=899, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=901, col_offset=4), Index(Name('NONE', Load(), lineno=901, col_offset=13)), Store(), lineno=901, col_offset=4)], Name('load_none', Load(), lineno=901, col_offset=21), lineno=901, col_offset=4), FunctionDef('load_false', arguments([Name('self', Param(), lineno=903, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=904, col_offset=8), 'append', Load(), lineno=904, col_offset=8), [Name('False', Load(), lineno=904, col_offset=20)], [], None, None, lineno=904, col_offset=8), lineno=904, col_offset=8)], [], lineno=903, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=905, col_offset=4), Index(Name('NEWFALSE', Load(), lineno=905, col_offset=13)), Store(), lineno=905, col_offset=4)], Name('load_false', Load(), lineno=905, col_offset=25), lineno=905, col_offset=4), FunctionDef('load_true', arguments([Name('self', Param(), lineno=907, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=908, col_offset=8), 'append', Load(), lineno=908, col_offset=8), [Name('True', Load(), lineno=908, col_offset=20)], [], None, None, lineno=908, col_offset=8), lineno=908, col_offset=8)], [], lineno=907, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=909, col_offset=4), Index(Name('NEWTRUE', Load(), lineno=909, col_offset=13)), Store(), lineno=909, col_offset=4)], Name('load_true', Load(), lineno=909, col_offset=24), lineno=909, col_offset=4), FunctionDef('load_int', arguments([Name('self', Param(), lineno=911, col_offset=17)], None, None, []), [Assign([Name('data', Store(), lineno=912, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=912, col_offset=15), 'readline', Load(), lineno=912, col_offset=15), [], [], None, None, lineno=912, col_offset=15), lineno=912, col_offset=8), If(Compare(Name('data', Load(), lineno=913, col_offset=11), [Eq()], [Subscript(Name('FALSE', Load(), lineno=913, col_offset=19), Slice(Num(1, lineno=913, col_offset=25), None, None), Load(), lineno=913, col_offset=19)], lineno=913, col_offset=11), [Assign([Name('val', Store(), lineno=914, col_offset=12)], Name('False', Load(), lineno=914, col_offset=18), lineno=914, col_offset=12)], [If(Compare(Name('data', Load(), lineno=915, col_offset=13), [Eq()], [Subscript(Name('TRUE', Load(), lineno=915, col_offset=21), Slice(Num(1, lineno=915, col_offset=26), None, None), Load(), lineno=915, col_offset=21)], lineno=915, col_offset=13), [Assign([Name('val', Store(), lineno=916, col_offset=12)], Name('True', Load(), lineno=916, col_offset=18), lineno=916, col_offset=12)], [TryExcept([Assign([Name('val', Store(), lineno=919, col_offset=16)], Call(Name('int', Load(), lineno=919, col_offset=22), [Name('data', Load(), lineno=919, col_offset=26)], [], None, None, lineno=919, col_offset=22), lineno=919, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=920, col_offset=19), None, [Assign([Name('val', Store(), lineno=921, col_offset=16)], Call(Name('long', Load(), lineno=921, col_offset=22), [Name('data', Load(), lineno=921, col_offset=27)], [], None, None, lineno=921, col_offset=22), lineno=921, col_offset=16)], lineno=920, col_offset=12)], [], lineno=918, col_offset=12)], lineno=915, col_offset=13)], lineno=913, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=922, col_offset=8), 'append', Load(), lineno=922, col_offset=8), [Name('val', Load(), lineno=922, col_offset=20)], [], None, None, lineno=922, col_offset=8), lineno=922, col_offset=8)], [], lineno=911, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=923, col_offset=4), Index(Name('INT', Load(), lineno=923, col_offset=13)), Store(), lineno=923, col_offset=4)], Name('load_int', Load(), lineno=923, col_offset=20), lineno=923, col_offset=4), FunctionDef('load_binint', arguments([Name('self', Param(), lineno=925, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=926, col_offset=8), 'append', Load(), lineno=926, col_offset=8), [Call(Name('mloads', Load(), lineno=926, col_offset=20), [BinOp(Str('i', lineno=926, col_offset=27), Add(), Call(Attribute(Name('self', Load(), lineno=926, col_offset=33), 'read', Load(), lineno=926, col_offset=33), [Num(4, lineno=926, col_offset=43)], [], None, None, lineno=926, col_offset=33), lineno=926, col_offset=27)], [], None, None, lineno=926, col_offset=20)], [], None, None, lineno=926, col_offset=8), lineno=926, col_offset=8)], [], lineno=925, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=927, col_offset=4), Index(Name('BININT', Load(), lineno=927, col_offset=13)), Store(), lineno=927, col_offset=4)], Name('load_binint', Load(), lineno=927, col_offset=23), lineno=927, col_offset=4), FunctionDef('load_binint1', arguments([Name('self', Param(), lineno=929, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=930, col_offset=8), 'append', Load(), lineno=930, col_offset=8), [Call(Name('ord', Load(), lineno=930, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=930, col_offset=24), 'read', Load(), lineno=930, col_offset=24), [Num(1, lineno=930, col_offset=34)], [], None, None, lineno=930, col_offset=24)], [], None, None, lineno=930, col_offset=20)], [], None, None, lineno=930, col_offset=8), lineno=930, col_offset=8)], [], lineno=929, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=931, col_offset=4), Index(Name('BININT1', Load(), lineno=931, col_offset=13)), Store(), lineno=931, col_offset=4)], Name('load_binint1', Load(), lineno=931, col_offset=24), lineno=931, col_offset=4), FunctionDef('load_binint2', arguments([Name('self', Param(), lineno=933, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=934, col_offset=8), 'append', Load(), lineno=934, col_offset=8), [Call(Name('mloads', Load(), lineno=934, col_offset=20), [BinOp(BinOp(Str('i', lineno=934, col_offset=27), Add(), Call(Attribute(Name('self', Load(), lineno=934, col_offset=33), 'read', Load(), lineno=934, col_offset=33), [Num(2, lineno=934, col_offset=43)], [], None, None, lineno=934, col_offset=33), lineno=934, col_offset=27), Add(), Str('\x00\x00', lineno=934, col_offset=48), lineno=934, col_offset=46)], [], None, None, lineno=934, col_offset=20)], [], None, None, lineno=934, col_offset=8), lineno=934, col_offset=8)], [], lineno=933, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=935, col_offset=4), Index(Name('BININT2', Load(), lineno=935, col_offset=13)), Store(), lineno=935, col_offset=4)], Name('load_binint2', Load(), lineno=935, col_offset=24), lineno=935, col_offset=4), FunctionDef('load_long', arguments([Name('self', Param(), lineno=937, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=938, col_offset=8), 'append', Load(), lineno=938, col_offset=8), [Call(Name('long', Load(), lineno=938, col_offset=20), [Subscript(Call(Attribute(Name('self', Load(), lineno=938, col_offset=25), 'readline', Load(), lineno=938, col_offset=25), [], [], None, None, lineno=938, col_offset=25), Slice(None, Num(-1, lineno=938, col_offset=43), None), Load(), lineno=938, col_offset=25), Num(0, lineno=938, col_offset=47)], [], None, None, lineno=938, col_offset=20)], [], None, None, lineno=938, col_offset=8), lineno=938, col_offset=8)], [], lineno=937, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=939, col_offset=4), Index(Name('LONG', Load(), lineno=939, col_offset=13)), Store(), lineno=939, col_offset=4)], Name('load_long', Load(), lineno=939, col_offset=21), lineno=939, col_offset=4), FunctionDef('load_long1', arguments([Name('self', Param(), lineno=941, col_offset=19)], None, None, []), [Assign([Name('n', Store(), lineno=942, col_offset=8)], Call(Name('ord', Load(), lineno=942, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=942, col_offset=16), 'read', Load(), lineno=942, col_offset=16), [Num(1, lineno=942, col_offset=26)], [], None, None, lineno=942, col_offset=16)], [], None, None, lineno=942, col_offset=12), lineno=942, col_offset=8), Assign([Name('bytes', Store(), lineno=943, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=943, col_offset=16), 'read', Load(), lineno=943, col_offset=16), [Name('n', Load(), lineno=943, col_offset=26)], [], None, None, lineno=943, col_offset=16), lineno=943, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=944, col_offset=8), 'append', Load(), lineno=944, col_offset=8), [Call(Name('decode_long', Load(), lineno=944, col_offset=20), [Name('bytes', Load(), lineno=944, col_offset=32)], [], None, None, lineno=944, col_offset=20)], [], None, None, lineno=944, col_offset=8), lineno=944, col_offset=8)], [], lineno=941, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=945, col_offset=4), Index(Name('LONG1', Load(), lineno=945, col_offset=13)), Store(), lineno=945, col_offset=4)], Name('load_long1', Load(), lineno=945, col_offset=22), lineno=945, col_offset=4), FunctionDef('load_long4', arguments([Name('self', Param(), lineno=947, col_offset=19)], None, None, []), [Assign([Name('n', Store(), lineno=948, col_offset=8)], Call(Name('mloads', Load(), lineno=948, col_offset=12), [BinOp(Str('i', lineno=948, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=948, col_offset=25), 'read', Load(), lineno=948, col_offset=25), [Num(4, lineno=948, col_offset=35)], [], None, None, lineno=948, col_offset=25), lineno=948, col_offset=19)], [], None, None, lineno=948, col_offset=12), lineno=948, col_offset=8), Assign([Name('bytes', Store(), lineno=949, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=949, col_offset=16), 'read', Load(), lineno=949, col_offset=16), [Name('n', Load(), lineno=949, col_offset=26)], [], None, None, lineno=949, col_offset=16), lineno=949, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=950, col_offset=8), 'append', Load(), lineno=950, col_offset=8), [Call(Name('decode_long', Load(), lineno=950, col_offset=20), [Name('bytes', Load(), lineno=950, col_offset=32)], [], None, None, lineno=950, col_offset=20)], [], None, None, lineno=950, col_offset=8), lineno=950, col_offset=8)], [], lineno=947, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=951, col_offset=4), Index(Name('LONG4', Load(), lineno=951, col_offset=13)), Store(), lineno=951, col_offset=4)], Name('load_long4', Load(), lineno=951, col_offset=22), lineno=951, col_offset=4), FunctionDef('load_float', arguments([Name('self', Param(), lineno=953, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=954, col_offset=8), 'append', Load(), lineno=954, col_offset=8), [Call(Name('float', Load(), lineno=954, col_offset=20), [Subscript(Call(Attribute(Name('self', Load(), lineno=954, col_offset=26), 'readline', Load(), lineno=954, col_offset=26), [], [], None, None, lineno=954, col_offset=26), Slice(None, Num(-1, lineno=954, col_offset=44), None), Load(), lineno=954, col_offset=26)], [], None, None, lineno=954, col_offset=20)], [], None, None, lineno=954, col_offset=8), lineno=954, col_offset=8)], [], lineno=953, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=955, col_offset=4), Index(Name('FLOAT', Load(), lineno=955, col_offset=13)), Store(), lineno=955, col_offset=4)], Name('load_float', Load(), lineno=955, col_offset=22), lineno=955, col_offset=4), FunctionDef('load_binfloat', arguments([Name('self', Param(), lineno=957, col_offset=22), Name('unpack', Param(), lineno=957, col_offset=28)], None, None, [Attribute(Name('struct', Load(), lineno=957, col_offset=35), 'unpack', Load(), lineno=957, col_offset=35)]), [Expr(Call(Attribute(Name('self', Load(), lineno=958, col_offset=8), 'append', Load(), lineno=958, col_offset=8), [Subscript(Call(Name('unpack', Load(), lineno=958, col_offset=20), [Str('>d', lineno=958, col_offset=27), Call(Attribute(Name('self', Load(), lineno=958, col_offset=33), 'read', Load(), lineno=958, col_offset=33), [Num(8, lineno=958, col_offset=43)], [], None, None, lineno=958, col_offset=33)], [], None, None, lineno=958, col_offset=20), Index(Num(0, lineno=958, col_offset=47)), Load(), lineno=958, col_offset=20)], [], None, None, lineno=958, col_offset=8), lineno=958, col_offset=8)], [], lineno=957, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=959, col_offset=4), Index(Name('BINFLOAT', Load(), lineno=959, col_offset=13)), Store(), lineno=959, col_offset=4)], Name('load_binfloat', Load(), lineno=959, col_offset=25), lineno=959, col_offset=4), FunctionDef('load_string', arguments([Name('self', Param(), lineno=961, col_offset=20)], None, None, []), [Assign([Name('rep', Store(), lineno=962, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=962, col_offset=14), 'readline', Load(), lineno=962, col_offset=14), [], [], None, None, lineno=962, col_offset=14), Slice(None, Num(-1, lineno=962, col_offset=32), None), Load(), lineno=962, col_offset=14), lineno=962, col_offset=8), For(Name('q', Store(), lineno=963, col_offset=12), Str('"\'', lineno=963, col_offset=17), [If(Call(Attribute(Name('rep', Load(), lineno=964, col_offset=15), 'startswith', Load(), lineno=964, col_offset=15), [Name('q', Load(), lineno=964, col_offset=30)], [], None, None, lineno=964, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Name('rep', Load(), lineno=965, col_offset=23), 'endswith', Load(), lineno=965, col_offset=23), [Name('q', Load(), lineno=965, col_offset=36)], [], None, None, lineno=965, col_offset=23), lineno=965, col_offset=19), [Raise(Name('ValueError', Load(), lineno=966, col_offset=26), Str('insecure string pickle', lineno=966, col_offset=38), None, lineno=966, col_offset=20)], [], lineno=965, col_offset=16), Assign([Name('rep', Store(), lineno=967, col_offset=16)], Subscript(Name('rep', Load(), lineno=967, col_offset=22), Slice(Call(Name('len', Load(), lineno=967, col_offset=26), [Name('q', Load(), lineno=967, col_offset=30)], [], None, None, lineno=967, col_offset=26), UnaryOp(USub(), Call(Name('len', Load(), lineno=967, col_offset=34), [Name('q', Load(), lineno=967, col_offset=38)], [], None, None, lineno=967, col_offset=34), lineno=967, col_offset=33), None), Load(), lineno=967, col_offset=22), lineno=967, col_offset=16), Break( lineno=968, col_offset=16)], [], lineno=964, col_offset=12)], [Raise(Name('ValueError', Load(), lineno=970, col_offset=18), Str('insecure string pickle', lineno=970, col_offset=30), None, lineno=970, col_offset=12)], lineno=963, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=971, col_offset=8), 'append', Load(), lineno=971, col_offset=8), [Call(Attribute(Name('rep', Load(), lineno=971, col_offset=20), 'decode', Load(), lineno=971, col_offset=20), [Str('string-escape', lineno=971, col_offset=31)], [], None, None, lineno=971, col_offset=20)], [], None, None, lineno=971, col_offset=8), lineno=971, col_offset=8)], [], lineno=961, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=972, col_offset=4), Index(Name('STRING', Load(), lineno=972, col_offset=13)), Store(), lineno=972, col_offset=4)], Name('load_string', Load(), lineno=972, col_offset=23), lineno=972, col_offset=4), FunctionDef('load_binstring', arguments([Name('self', Param(), lineno=974, col_offset=23)], None, None, []), [Assign([Name('len', Store(), lineno=975, col_offset=8)], Call(Name('mloads', Load(), lineno=975, col_offset=14), [BinOp(Str('i', lineno=975, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=975, col_offset=27), 'read', Load(), lineno=975, col_offset=27), [Num(4, lineno=975, col_offset=37)], [], None, None, lineno=975, col_offset=27), lineno=975, col_offset=21)], [], None, None, lineno=975, col_offset=14), lineno=975, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=976, col_offset=8), 'append', Load(), lineno=976, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=976, col_offset=20), 'read', Load(), lineno=976, col_offset=20), [Name('len', Load(), lineno=976, col_offset=30)], [], None, None, lineno=976, col_offset=20)], [], None, None, lineno=976, col_offset=8), lineno=976, col_offset=8)], [], lineno=974, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=977, col_offset=4), Index(Name('BINSTRING', Load(), lineno=977, col_offset=13)), Store(), lineno=977, col_offset=4)], Name('load_binstring', Load(), lineno=977, col_offset=26), lineno=977, col_offset=4), FunctionDef('load_unicode', arguments([Name('self', Param(), lineno=979, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=980, col_offset=8), 'append', Load(), lineno=980, col_offset=8), [Call(Name('unicode', Load(), lineno=980, col_offset=20), [Subscript(Call(Attribute(Name('self', Load(), lineno=980, col_offset=28), 'readline', Load(), lineno=980, col_offset=28), [], [], None, None, lineno=980, col_offset=28), Slice(None, Num(-1, lineno=980, col_offset=46), None), Load(), lineno=980, col_offset=28), Str('raw-unicode-escape', lineno=980, col_offset=49)], [], None, None, lineno=980, col_offset=20)], [], None, None, lineno=980, col_offset=8), lineno=980, col_offset=8)], [], lineno=979, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=981, col_offset=4), Index(Name('UNICODE', Load(), lineno=981, col_offset=13)), Store(), lineno=981, col_offset=4)], Name('load_unicode', Load(), lineno=981, col_offset=24), lineno=981, col_offset=4), FunctionDef('load_binunicode', arguments([Name('self', Param(), lineno=983, col_offset=24)], None, None, []), [Assign([Name('len', Store(), lineno=984, col_offset=8)], Call(Name('mloads', Load(), lineno=984, col_offset=14), [BinOp(Str('i', lineno=984, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=984, col_offset=27), 'read', Load(), lineno=984, col_offset=27), [Num(4, lineno=984, col_offset=37)], [], None, None, lineno=984, col_offset=27), lineno=984, col_offset=21)], [], None, None, lineno=984, col_offset=14), lineno=984, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=985, col_offset=8), 'append', Load(), lineno=985, col_offset=8), [Call(Name('unicode', Load(), lineno=985, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=985, col_offset=28), 'read', Load(), lineno=985, col_offset=28), [Name('len', Load(), lineno=985, col_offset=38)], [], None, None, lineno=985, col_offset=28), Str('utf-8', lineno=985, col_offset=43)], [], None, None, lineno=985, col_offset=20)], [], None, None, lineno=985, col_offset=8), lineno=985, col_offset=8)], [], lineno=983, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=986, col_offset=4), Index(Name('BINUNICODE', Load(), lineno=986, col_offset=13)), Store(), lineno=986, col_offset=4)], Name('load_binunicode', Load(), lineno=986, col_offset=27), lineno=986, col_offset=4), FunctionDef('load_short_binstring', arguments([Name('self', Param(), lineno=988, col_offset=29)], None, None, []), [Assign([Name('len', Store(), lineno=989, col_offset=8)], Call(Name('ord', Load(), lineno=989, col_offset=14), [Call(Attribute(Name('self', Load(), lineno=989, col_offset=18), 'read', Load(), lineno=989, col_offset=18), [Num(1, lineno=989, col_offset=28)], [], None, None, lineno=989, col_offset=18)], [], None, None, lineno=989, col_offset=14), lineno=989, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=990, col_offset=8), 'append', Load(), lineno=990, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=990, col_offset=20), 'read', Load(), lineno=990, col_offset=20), [Name('len', Load(), lineno=990, col_offset=30)], [], None, None, lineno=990, col_offset=20)], [], None, None, lineno=990, col_offset=8), lineno=990, col_offset=8)], [], lineno=988, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=991, col_offset=4), Index(Name('SHORT_BINSTRING', Load(), lineno=991, col_offset=13)), Store(), lineno=991, col_offset=4)], Name('load_short_binstring', Load(), lineno=991, col_offset=32), lineno=991, col_offset=4), FunctionDef('load_tuple', arguments([Name('self', Param(), lineno=993, col_offset=19)], None, None, []), [Assign([Name('k', Store(), lineno=994, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=994, col_offset=12), 'marker', Load(), lineno=994, col_offset=12), [], [], None, None, lineno=994, col_offset=12), lineno=994, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=995, col_offset=8), 'stack', Load(), lineno=995, col_offset=8), Slice(Name('k', Load(), lineno=995, col_offset=19), None, None), Store(), lineno=995, col_offset=8)], List([Call(Name('tuple', Load(), lineno=995, col_offset=26), [Subscript(Attribute(Name('self', Load(), lineno=995, col_offset=32), 'stack', Load(), lineno=995, col_offset=32), Slice(BinOp(Name('k', Load(), lineno=995, col_offset=43), Add(), Num(1, lineno=995, col_offset=45), lineno=995, col_offset=43), None, None), Load(), lineno=995, col_offset=32)], [], None, None, lineno=995, col_offset=26)], Load(), lineno=995, col_offset=25), lineno=995, col_offset=8)], [], lineno=993, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=996, col_offset=4), Index(Name('TUPLE', Load(), lineno=996, col_offset=13)), Store(), lineno=996, col_offset=4)], Name('load_tuple', Load(), lineno=996, col_offset=22), lineno=996, col_offset=4), FunctionDef('load_empty_tuple', arguments([Name('self', Param(), lineno=998, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=999, col_offset=8), 'stack', Load(), lineno=999, col_offset=8), 'append', Load(), lineno=999, col_offset=8), [Tuple([], Load(), lineno=999, col_offset=26)], [], None, None, lineno=999, col_offset=8), lineno=999, col_offset=8)], [], lineno=998, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1000, col_offset=4), Index(Name('EMPTY_TUPLE', Load(), lineno=1000, col_offset=13)), Store(), lineno=1000, col_offset=4)], Name('load_empty_tuple', Load(), lineno=1000, col_offset=28), lineno=1000, col_offset=4), FunctionDef('load_tuple1', arguments([Name('self', Param(), lineno=1002, col_offset=20)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1003, col_offset=8), 'stack', Load(), lineno=1003, col_offset=8), Index(Num(-1, lineno=1003, col_offset=20)), Store(), lineno=1003, col_offset=8)], Tuple([Subscript(Attribute(Name('self', Load(), lineno=1003, col_offset=26), 'stack', Load(), lineno=1003, col_offset=26), Index(Num(-1, lineno=1003, col_offset=38)), Load(), lineno=1003, col_offset=26)], Load(), lineno=1003, col_offset=26), lineno=1003, col_offset=8)], [], lineno=1002, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1004, col_offset=4), Index(Name('TUPLE1', Load(), lineno=1004, col_offset=13)), Store(), lineno=1004, col_offset=4)], Name('load_tuple1', Load(), lineno=1004, col_offset=23), lineno=1004, col_offset=4), FunctionDef('load_tuple2', arguments([Name('self', Param(), lineno=1006, col_offset=20)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1007, col_offset=8), 'stack', Load(), lineno=1007, col_offset=8), Slice(Num(-2, lineno=1007, col_offset=20), None, None), Store(), lineno=1007, col_offset=8)], List([Tuple([Subscript(Attribute(Name('self', Load(), lineno=1007, col_offset=28), 'stack', Load(), lineno=1007, col_offset=28), Index(Num(-2, lineno=1007, col_offset=40)), Load(), lineno=1007, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=1007, col_offset=44), 'stack', Load(), lineno=1007, col_offset=44), Index(Num(-1, lineno=1007, col_offset=56)), Load(), lineno=1007, col_offset=44)], Load(), lineno=1007, col_offset=28)], Load(), lineno=1007, col_offset=26), lineno=1007, col_offset=8)], [], lineno=1006, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1008, col_offset=4), Index(Name('TUPLE2', Load(), lineno=1008, col_offset=13)), Store(), lineno=1008, col_offset=4)], Name('load_tuple2', Load(), lineno=1008, col_offset=23), lineno=1008, col_offset=4), FunctionDef('load_tuple3', arguments([Name('self', Param(), lineno=1010, col_offset=20)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1011, col_offset=8), 'stack', Load(), lineno=1011, col_offset=8), Slice(Num(-3, lineno=1011, col_offset=20), None, None), Store(), lineno=1011, col_offset=8)], List([Tuple([Subscript(Attribute(Name('self', Load(), lineno=1011, col_offset=28), 'stack', Load(), lineno=1011, col_offset=28), Index(Num(-3, lineno=1011, col_offset=40)), Load(), lineno=1011, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=1011, col_offset=44), 'stack', Load(), lineno=1011, col_offset=44), Index(Num(-2, lineno=1011, col_offset=56)), Load(), lineno=1011, col_offset=44), Subscript(Attribute(Name('self', Load(), lineno=1011, col_offset=60), 'stack', Load(), lineno=1011, col_offset=60), Index(Num(-1, lineno=1011, col_offset=72)), Load(), lineno=1011, col_offset=60)], Load(), lineno=1011, col_offset=28)], Load(), lineno=1011, col_offset=26), lineno=1011, col_offset=8)], [], lineno=1010, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1012, col_offset=4), Index(Name('TUPLE3', Load(), lineno=1012, col_offset=13)), Store(), lineno=1012, col_offset=4)], Name('load_tuple3', Load(), lineno=1012, col_offset=23), lineno=1012, col_offset=4), FunctionDef('load_empty_list', arguments([Name('self', Param(), lineno=1014, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1015, col_offset=8), 'stack', Load(), lineno=1015, col_offset=8), 'append', Load(), lineno=1015, col_offset=8), [List([], Load(), lineno=1015, col_offset=26)], [], None, None, lineno=1015, col_offset=8), lineno=1015, col_offset=8)], [], lineno=1014, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1016, col_offset=4), Index(Name('EMPTY_LIST', Load(), lineno=1016, col_offset=13)), Store(), lineno=1016, col_offset=4)], Name('load_empty_list', Load(), lineno=1016, col_offset=27), lineno=1016, col_offset=4), FunctionDef('load_empty_dictionary', arguments([Name('self', Param(), lineno=1018, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1019, col_offset=8), 'stack', Load(), lineno=1019, col_offset=8), 'append', Load(), lineno=1019, col_offset=8), [Dict([], [], lineno=1019, col_offset=26)], [], None, None, lineno=1019, col_offset=8), lineno=1019, col_offset=8)], [], lineno=1018, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1020, col_offset=4), Index(Name('EMPTY_DICT', Load(), lineno=1020, col_offset=13)), Store(), lineno=1020, col_offset=4)], Name('load_empty_dictionary', Load(), lineno=1020, col_offset=27), lineno=1020, col_offset=4), FunctionDef('load_list', arguments([Name('self', Param(), lineno=1022, col_offset=18)], None, None, []), [Assign([Name('k', Store(), lineno=1023, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1023, col_offset=12), 'marker', Load(), lineno=1023, col_offset=12), [], [], None, None, lineno=1023, col_offset=12), lineno=1023, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=1024, col_offset=8), 'stack', Load(), lineno=1024, col_offset=8), Slice(Name('k', Load(), lineno=1024, col_offset=19), None, None), Store(), lineno=1024, col_offset=8)], List([Subscript(Attribute(Name('self', Load(), lineno=1024, col_offset=26), 'stack', Load(), lineno=1024, col_offset=26), Slice(BinOp(Name('k', Load(), lineno=1024, col_offset=37), Add(), Num(1, lineno=1024, col_offset=39), lineno=1024, col_offset=37), None, None), Load(), lineno=1024, col_offset=26)], Load(), lineno=1024, col_offset=25), lineno=1024, col_offset=8)], [], lineno=1022, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1025, col_offset=4), Index(Name('LIST', Load(), lineno=1025, col_offset=13)), Store(), lineno=1025, col_offset=4)], Name('load_list', Load(), lineno=1025, col_offset=21), lineno=1025, col_offset=4), FunctionDef('load_dict', arguments([Name('self', Param(), lineno=1027, col_offset=18)], None, None, []), [Assign([Name('k', Store(), lineno=1028, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1028, col_offset=12), 'marker', Load(), lineno=1028, col_offset=12), [], [], None, None, lineno=1028, col_offset=12), lineno=1028, col_offset=8), Assign([Name('d', Store(), lineno=1029, col_offset=8)], Dict([], [], lineno=1029, col_offset=12), lineno=1029, col_offset=8), Assign([Name('items', Store(), lineno=1030, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1030, col_offset=16), 'stack', Load(), lineno=1030, col_offset=16), Slice(BinOp(Name('k', Load(), lineno=1030, col_offset=27), Add(), Num(1, lineno=1030, col_offset=29), lineno=1030, col_offset=27), None, None), Load(), lineno=1030, col_offset=16), lineno=1030, col_offset=8), For(Name('i', Store(), lineno=1031, col_offset=12), Call(Name('range', Load(), lineno=1031, col_offset=17), [Num(0, lineno=1031, col_offset=23), Call(Name('len', Load(), lineno=1031, col_offset=26), [Name('items', Load(), lineno=1031, col_offset=30)], [], None, None, lineno=1031, col_offset=26), Num(2, lineno=1031, col_offset=38)], [], None, None, lineno=1031, col_offset=17), [Assign([Name('key', Store(), lineno=1032, col_offset=12)], Subscript(Name('items', Load(), lineno=1032, col_offset=18), Index(Name('i', Load(), lineno=1032, col_offset=24)), Load(), lineno=1032, col_offset=18), lineno=1032, col_offset=12), Assign([Name('value', Store(), lineno=1033, col_offset=12)], Subscript(Name('items', Load(), lineno=1033, col_offset=20), Index(BinOp(Name('i', Load(), lineno=1033, col_offset=26), Add(), Num(1, lineno=1033, col_offset=28), lineno=1033, col_offset=26)), Load(), lineno=1033, col_offset=20), lineno=1033, col_offset=12), Assign([Subscript(Name('d', Load(), lineno=1034, col_offset=12), Index(Name('key', Load(), lineno=1034, col_offset=14)), Store(), lineno=1034, col_offset=12)], Name('value', Load(), lineno=1034, col_offset=21), lineno=1034, col_offset=12)], [], lineno=1031, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=1035, col_offset=8), 'stack', Load(), lineno=1035, col_offset=8), Slice(Name('k', Load(), lineno=1035, col_offset=19), None, None), Store(), lineno=1035, col_offset=8)], List([Name('d', Load(), lineno=1035, col_offset=26)], Load(), lineno=1035, col_offset=25), lineno=1035, col_offset=8)], [], lineno=1027, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1036, col_offset=4), Index(Name('DICT', Load(), lineno=1036, col_offset=13)), Store(), lineno=1036, col_offset=4)], Name('load_dict', Load(), lineno=1036, col_offset=21), lineno=1036, col_offset=4), FunctionDef('_instantiate', arguments([Name('self', Param(), lineno=1043, col_offset=21), Name('klass', Param(), lineno=1043, col_offset=27), Name('k', Param(), lineno=1043, col_offset=34)], None, None, []), [Assign([Name('args', Store(), lineno=1044, col_offset=8)], Call(Name('tuple', Load(), lineno=1044, col_offset=15), [Subscript(Attribute(Name('self', Load(), lineno=1044, col_offset=21), 'stack', Load(), lineno=1044, col_offset=21), Slice(BinOp(Name('k', Load(), lineno=1044, col_offset=32), Add(), Num(1, lineno=1044, col_offset=34), lineno=1044, col_offset=32), None, None), Load(), lineno=1044, col_offset=21)], [], None, None, lineno=1044, col_offset=15), lineno=1044, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=1045, col_offset=12), 'stack', Load(), lineno=1045, col_offset=12), Slice(Name('k', Load(), lineno=1045, col_offset=23), None, None), Del(), lineno=1045, col_offset=12)], lineno=1045, col_offset=8), Assign([Name('instantiated', Store(), lineno=1046, col_offset=8)], Num(0, lineno=1046, col_offset=23), lineno=1046, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Name('args', Load(), lineno=1047, col_offset=16), lineno=1047, col_offset=12), Compare(Call(Name('type', Load(), lineno=1048, col_offset=16), [Name('klass', Load(), lineno=1048, col_offset=21)], [], None, None, lineno=1048, col_offset=16), [Is()], [Name('ClassType', Load(), lineno=1048, col_offset=31)], lineno=1048, col_offset=16), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=1049, col_offset=20), [Name('klass', Load(), lineno=1049, col_offset=28), Str('__getinitargs__', lineno=1049, col_offset=35)], [], None, None, lineno=1049, col_offset=20), lineno=1049, col_offset=16)], lineno=1047, col_offset=12), [TryExcept([Assign([Name('value', Store(), lineno=1051, col_offset=16)], Call(Name('_EmptyClass', Load(), lineno=1051, col_offset=24), [], [], None, None, lineno=1051, col_offset=24), lineno=1051, col_offset=16), Assign([Attribute(Name('value', Load(), lineno=1052, col_offset=16), '__class__', Store(), lineno=1052, col_offset=16)], Name('klass', Load(), lineno=1052, col_offset=34), lineno=1052, col_offset=16), Assign([Name('instantiated', Store(), lineno=1053, col_offset=16)], Num(1, lineno=1053, col_offset=31), lineno=1053, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=1054, col_offset=19), None, [Pass( lineno=1057, col_offset=16)], lineno=1054, col_offset=12)], [], lineno=1050, col_offset=12)], [], lineno=1047, col_offset=8), If(UnaryOp(Not(), Name('instantiated', Load(), lineno=1058, col_offset=15), lineno=1058, col_offset=11), [TryExcept([Assign([Name('value', Store(), lineno=1060, col_offset=16)], Call(Name('klass', Load(), lineno=1060, col_offset=24), [], [], Name('args', Load(), lineno=1060, col_offset=31), None, lineno=1060, col_offset=24), lineno=1060, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=1061, col_offset=19), Name('err', Store(), lineno=1061, col_offset=30), [Raise(Name('TypeError', Load(), lineno=1062, col_offset=22), BinOp(Str('in constructor for %s: %s', lineno=1062, col_offset=33), Mod(), Tuple([Attribute(Name('klass', Load(), lineno=1063, col_offset=20), '__name__', Load(), lineno=1063, col_offset=20), Call(Name('str', Load(), lineno=1063, col_offset=36), [Name('err', Load(), lineno=1063, col_offset=40)], [], None, None, lineno=1063, col_offset=36)], Load(), lineno=1063, col_offset=20), lineno=1062, col_offset=33), Subscript(Call(Attribute(Name('sys', Load(), lineno=1063, col_offset=47), 'exc_info', Load(), lineno=1063, col_offset=47), [], [], None, None, lineno=1063, col_offset=47), Index(Num(2, lineno=1063, col_offset=62)), Load(), lineno=1063, col_offset=47), lineno=1062, col_offset=16)], lineno=1061, col_offset=12)], [], lineno=1059, col_offset=12)], [], lineno=1058, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1064, col_offset=8), 'append', Load(), lineno=1064, col_offset=8), [Name('value', Load(), lineno=1064, col_offset=20)], [], None, None, lineno=1064, col_offset=8), lineno=1064, col_offset=8)], [], lineno=1043, col_offset=4), FunctionDef('load_inst', arguments([Name('self', Param(), lineno=1066, col_offset=18)], None, None, []), [Assign([Name('module', Store(), lineno=1067, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=1067, col_offset=17), 'readline', Load(), lineno=1067, col_offset=17), [], [], None, None, lineno=1067, col_offset=17), Slice(None, Num(-1, lineno=1067, col_offset=35), None), Load(), lineno=1067, col_offset=17), lineno=1067, col_offset=8), Assign([Name('name', Store(), lineno=1068, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=1068, col_offset=15), 'readline', Load(), lineno=1068, col_offset=15), [], [], None, None, lineno=1068, col_offset=15), Slice(None, Num(-1, lineno=1068, col_offset=33), None), Load(), lineno=1068, col_offset=15), lineno=1068, col_offset=8), Assign([Name('klass', Store(), lineno=1069, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1069, col_offset=16), 'find_class', Load(), lineno=1069, col_offset=16), [Name('module', Load(), lineno=1069, col_offset=32), Name('name', Load(), lineno=1069, col_offset=40)], [], None, None, lineno=1069, col_offset=16), lineno=1069, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1070, col_offset=8), '_instantiate', Load(), lineno=1070, col_offset=8), [Name('klass', Load(), lineno=1070, col_offset=26), Call(Attribute(Name('self', Load(), lineno=1070, col_offset=33), 'marker', Load(), lineno=1070, col_offset=33), [], [], None, None, lineno=1070, col_offset=33)], [], None, None, lineno=1070, col_offset=8), lineno=1070, col_offset=8)], [], lineno=1066, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1071, col_offset=4), Index(Name('INST', Load(), lineno=1071, col_offset=13)), Store(), lineno=1071, col_offset=4)], Name('load_inst', Load(), lineno=1071, col_offset=21), lineno=1071, col_offset=4), FunctionDef('load_obj', arguments([Name('self', Param(), lineno=1073, col_offset=17)], None, None, []), [Assign([Name('k', Store(), lineno=1075, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1075, col_offset=12), 'marker', Load(), lineno=1075, col_offset=12), [], [], None, None, lineno=1075, col_offset=12), lineno=1075, col_offset=8), Assign([Name('klass', Store(), lineno=1076, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1076, col_offset=16), 'stack', Load(), lineno=1076, col_offset=16), 'pop', Load(), lineno=1076, col_offset=16), [BinOp(Name('k', Load(), lineno=1076, col_offset=31), Add(), Num(1, lineno=1076, col_offset=33), lineno=1076, col_offset=31)], [], None, None, lineno=1076, col_offset=16), lineno=1076, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1077, col_offset=8), '_instantiate', Load(), lineno=1077, col_offset=8), [Name('klass', Load(), lineno=1077, col_offset=26), Name('k', Load(), lineno=1077, col_offset=33)], [], None, None, lineno=1077, col_offset=8), lineno=1077, col_offset=8)], [], lineno=1073, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1078, col_offset=4), Index(Name('OBJ', Load(), lineno=1078, col_offset=13)), Store(), lineno=1078, col_offset=4)], Name('load_obj', Load(), lineno=1078, col_offset=20), lineno=1078, col_offset=4), FunctionDef('load_newobj', arguments([Name('self', Param(), lineno=1080, col_offset=20)], None, None, []), [Assign([Name('args', Store(), lineno=1081, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1081, col_offset=15), 'stack', Load(), lineno=1081, col_offset=15), 'pop', Load(), lineno=1081, col_offset=15), [], [], None, None, lineno=1081, col_offset=15), lineno=1081, col_offset=8), Assign([Name('cls', Store(), lineno=1082, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1082, col_offset=14), 'stack', Load(), lineno=1082, col_offset=14), Index(Num(-1, lineno=1082, col_offset=26)), Load(), lineno=1082, col_offset=14), lineno=1082, col_offset=8), Assign([Name('obj', Store(), lineno=1083, col_offset=8)], Call(Attribute(Name('cls', Load(), lineno=1083, col_offset=14), '__new__', Load(), lineno=1083, col_offset=14), [Name('cls', Load(), lineno=1083, col_offset=26)], [], Name('args', Load(), lineno=1083, col_offset=32), None, lineno=1083, col_offset=14), lineno=1083, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=1084, col_offset=8), 'stack', Load(), lineno=1084, col_offset=8), Index(Num(-1, lineno=1084, col_offset=20)), Store(), lineno=1084, col_offset=8)], Name('obj', Load(), lineno=1084, col_offset=25), lineno=1084, col_offset=8)], [], lineno=1080, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1085, col_offset=4), Index(Name('NEWOBJ', Load(), lineno=1085, col_offset=13)), Store(), lineno=1085, col_offset=4)], Name('load_newobj', Load(), lineno=1085, col_offset=23), lineno=1085, col_offset=4), FunctionDef('load_global', arguments([Name('self', Param(), lineno=1087, col_offset=20)], None, None, []), [Assign([Name('module', Store(), lineno=1088, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=1088, col_offset=17), 'readline', Load(), lineno=1088, col_offset=17), [], [], None, None, lineno=1088, col_offset=17), Slice(None, Num(-1, lineno=1088, col_offset=35), None), Load(), lineno=1088, col_offset=17), lineno=1088, col_offset=8), Assign([Name('name', Store(), lineno=1089, col_offset=8)], Subscript(Call(Attribute(Name('self', Load(), lineno=1089, col_offset=15), 'readline', Load(), lineno=1089, col_offset=15), [], [], None, None, lineno=1089, col_offset=15), Slice(None, Num(-1, lineno=1089, col_offset=33), None), Load(), lineno=1089, col_offset=15), lineno=1089, col_offset=8), Assign([Name('klass', Store(), lineno=1090, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1090, col_offset=16), 'find_class', Load(), lineno=1090, col_offset=16), [Name('module', Load(), lineno=1090, col_offset=32), Name('name', Load(), lineno=1090, col_offset=40)], [], None, None, lineno=1090, col_offset=16), lineno=1090, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1091, col_offset=8), 'append', Load(), lineno=1091, col_offset=8), [Name('klass', Load(), lineno=1091, col_offset=20)], [], None, None, lineno=1091, col_offset=8), lineno=1091, col_offset=8)], [], lineno=1087, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1092, col_offset=4), Index(Name('GLOBAL', Load(), lineno=1092, col_offset=13)), Store(), lineno=1092, col_offset=4)], Name('load_global', Load(), lineno=1092, col_offset=23), lineno=1092, col_offset=4), FunctionDef('load_ext1', arguments([Name('self', Param(), lineno=1094, col_offset=18)], None, None, []), [Assign([Name('code', Store(), lineno=1095, col_offset=8)], Call(Name('ord', Load(), lineno=1095, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=1095, col_offset=19), 'read', Load(), lineno=1095, col_offset=19), [Num(1, lineno=1095, col_offset=29)], [], None, None, lineno=1095, col_offset=19)], [], None, None, lineno=1095, col_offset=15), lineno=1095, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1096, col_offset=8), 'get_extension', Load(), lineno=1096, col_offset=8), [Name('code', Load(), lineno=1096, col_offset=27)], [], None, None, lineno=1096, col_offset=8), lineno=1096, col_offset=8)], [], lineno=1094, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1097, col_offset=4), Index(Name('EXT1', Load(), lineno=1097, col_offset=13)), Store(), lineno=1097, col_offset=4)], Name('load_ext1', Load(), lineno=1097, col_offset=21), lineno=1097, col_offset=4), FunctionDef('load_ext2', arguments([Name('self', Param(), lineno=1099, col_offset=18)], None, None, []), [Assign([Name('code', Store(), lineno=1100, col_offset=8)], Call(Name('mloads', Load(), lineno=1100, col_offset=15), [BinOp(BinOp(Str('i', lineno=1100, col_offset=22), Add(), Call(Attribute(Name('self', Load(), lineno=1100, col_offset=28), 'read', Load(), lineno=1100, col_offset=28), [Num(2, lineno=1100, col_offset=38)], [], None, None, lineno=1100, col_offset=28), lineno=1100, col_offset=22), Add(), Str('\x00\x00', lineno=1100, col_offset=43), lineno=1100, col_offset=41)], [], None, None, lineno=1100, col_offset=15), lineno=1100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1101, col_offset=8), 'get_extension', Load(), lineno=1101, col_offset=8), [Name('code', Load(), lineno=1101, col_offset=27)], [], None, None, lineno=1101, col_offset=8), lineno=1101, col_offset=8)], [], lineno=1099, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1102, col_offset=4), Index(Name('EXT2', Load(), lineno=1102, col_offset=13)), Store(), lineno=1102, col_offset=4)], Name('load_ext2', Load(), lineno=1102, col_offset=21), lineno=1102, col_offset=4), FunctionDef('load_ext4', arguments([Name('self', Param(), lineno=1104, col_offset=18)], None, None, []), [Assign([Name('code', Store(), lineno=1105, col_offset=8)], Call(Name('mloads', Load(), lineno=1105, col_offset=15), [BinOp(Str('i', lineno=1105, col_offset=22), Add(), Call(Attribute(Name('self', Load(), lineno=1105, col_offset=28), 'read', Load(), lineno=1105, col_offset=28), [Num(4, lineno=1105, col_offset=38)], [], None, None, lineno=1105, col_offset=28), lineno=1105, col_offset=22)], [], None, None, lineno=1105, col_offset=15), lineno=1105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1106, col_offset=8), 'get_extension', Load(), lineno=1106, col_offset=8), [Name('code', Load(), lineno=1106, col_offset=27)], [], None, None, lineno=1106, col_offset=8), lineno=1106, col_offset=8)], [], lineno=1104, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1107, col_offset=4), Index(Name('EXT4', Load(), lineno=1107, col_offset=13)), Store(), lineno=1107, col_offset=4)], Name('load_ext4', Load(), lineno=1107, col_offset=21), lineno=1107, col_offset=4), FunctionDef('get_extension', arguments([Name('self', Param(), lineno=1109, col_offset=22), Name('code', Param(), lineno=1109, col_offset=28)], None, None, []), [Assign([Name('nil', Store(), lineno=1110, col_offset=8)], List([], Load(), lineno=1110, col_offset=14), lineno=1110, col_offset=8), Assign([Name('obj', Store(), lineno=1111, col_offset=8)], Call(Attribute(Name('_extension_cache', Load(), lineno=1111, col_offset=14), 'get', Load(), lineno=1111, col_offset=14), [Name('code', Load(), lineno=1111, col_offset=35), Name('nil', Load(), lineno=1111, col_offset=41)], [], None, None, lineno=1111, col_offset=14), lineno=1111, col_offset=8), If(Compare(Name('obj', Load(), lineno=1112, col_offset=11), [IsNot()], [Name('nil', Load(), lineno=1112, col_offset=22)], lineno=1112, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1113, col_offset=12), 'append', Load(), lineno=1113, col_offset=12), [Name('obj', Load(), lineno=1113, col_offset=24)], [], None, None, lineno=1113, col_offset=12), lineno=1113, col_offset=12), Return(None, lineno=1114, col_offset=12)], [], lineno=1112, col_offset=8), Assign([Name('key', Store(), lineno=1115, col_offset=8)], Call(Attribute(Name('_inverted_registry', Load(), lineno=1115, col_offset=14), 'get', Load(), lineno=1115, col_offset=14), [Name('code', Load(), lineno=1115, col_offset=37)], [], None, None, lineno=1115, col_offset=14), lineno=1115, col_offset=8), If(UnaryOp(Not(), Name('key', Load(), lineno=1116, col_offset=15), lineno=1116, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=1117, col_offset=18), [BinOp(Str('unregistered extension code %d', lineno=1117, col_offset=29), Mod(), Name('code', Load(), lineno=1117, col_offset=64), lineno=1117, col_offset=29)], [], None, None, lineno=1117, col_offset=18), None, None, lineno=1117, col_offset=12)], [], lineno=1116, col_offset=8), Assign([Name('obj', Store(), lineno=1118, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1118, col_offset=14), 'find_class', Load(), lineno=1118, col_offset=14), [], [], Name('key', Load(), lineno=1118, col_offset=31), None, lineno=1118, col_offset=14), lineno=1118, col_offset=8), Assign([Subscript(Name('_extension_cache', Load(), lineno=1119, col_offset=8), Index(Name('code', Load(), lineno=1119, col_offset=25)), Store(), lineno=1119, col_offset=8)], Name('obj', Load(), lineno=1119, col_offset=33), lineno=1119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1120, col_offset=8), 'append', Load(), lineno=1120, col_offset=8), [Name('obj', Load(), lineno=1120, col_offset=20)], [], None, None, lineno=1120, col_offset=8), lineno=1120, col_offset=8)], [], lineno=1109, col_offset=4), FunctionDef('find_class', arguments([Name('self', Param(), lineno=1122, col_offset=19), Name('module', Param(), lineno=1122, col_offset=25), Name('name', Param(), lineno=1122, col_offset=33)], None, None, []), [Expr(Call(Name('__import__', Load(), lineno=1124, col_offset=8), [Name('module', Load(), lineno=1124, col_offset=19)], [], None, None, lineno=1124, col_offset=8), lineno=1124, col_offset=8), Assign([Name('mod', Store(), lineno=1125, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=1125, col_offset=14), 'modules', Load(), lineno=1125, col_offset=14), Index(Name('module', Load(), lineno=1125, col_offset=26)), Load(), lineno=1125, col_offset=14), lineno=1125, col_offset=8), Assign([Name('klass', Store(), lineno=1126, col_offset=8)], Call(Name('getattr', Load(), lineno=1126, col_offset=16), [Name('mod', Load(), lineno=1126, col_offset=24), Name('name', Load(), lineno=1126, col_offset=29)], [], None, None, lineno=1126, col_offset=16), lineno=1126, col_offset=8), Return(Name('klass', Load(), lineno=1127, col_offset=15), lineno=1127, col_offset=8)], [], lineno=1122, col_offset=4), FunctionDef('load_reduce', arguments([Name('self', Param(), lineno=1129, col_offset=20)], None, None, []), [Assign([Name('stack', Store(), lineno=1130, col_offset=8)], Attribute(Name('self', Load(), lineno=1130, col_offset=16), 'stack', Load(), lineno=1130, col_offset=16), lineno=1130, col_offset=8), Assign([Name('args', Store(), lineno=1131, col_offset=8)], Call(Attribute(Name('stack', Load(), lineno=1131, col_offset=15), 'pop', Load(), lineno=1131, col_offset=15), [], [], None, None, lineno=1131, col_offset=15), lineno=1131, col_offset=8), Assign([Name('func', Store(), lineno=1132, col_offset=8)], Subscript(Name('stack', Load(), lineno=1132, col_offset=15), Index(Num(-1, lineno=1132, col_offset=22)), Load(), lineno=1132, col_offset=15), lineno=1132, col_offset=8), Assign([Name('value', Store(), lineno=1133, col_offset=8)], Call(Name('func', Load(), lineno=1133, col_offset=16), [], [], Name('args', Load(), lineno=1133, col_offset=22), None, lineno=1133, col_offset=16), lineno=1133, col_offset=8), Assign([Subscript(Name('stack', Load(), lineno=1134, col_offset=8), Index(Num(-1, lineno=1134, col_offset=15)), Store(), lineno=1134, col_offset=8)], Name('value', Load(), lineno=1134, col_offset=20), lineno=1134, col_offset=8)], [], lineno=1129, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1135, col_offset=4), Index(Name('REDUCE', Load(), lineno=1135, col_offset=13)), Store(), lineno=1135, col_offset=4)], Name('load_reduce', Load(), lineno=1135, col_offset=23), lineno=1135, col_offset=4), FunctionDef('load_pop', arguments([Name('self', Param(), lineno=1137, col_offset=17)], None, None, []), [Delete([Subscript(Attribute(Name('self', Load(), lineno=1138, col_offset=12), 'stack', Load(), lineno=1138, col_offset=12), Index(Num(-1, lineno=1138, col_offset=24)), Del(), lineno=1138, col_offset=12)], lineno=1138, col_offset=8)], [], lineno=1137, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1139, col_offset=4), Index(Name('POP', Load(), lineno=1139, col_offset=13)), Store(), lineno=1139, col_offset=4)], Name('load_pop', Load(), lineno=1139, col_offset=20), lineno=1139, col_offset=4), FunctionDef('load_pop_mark', arguments([Name('self', Param(), lineno=1141, col_offset=22)], None, None, []), [Assign([Name('k', Store(), lineno=1142, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1142, col_offset=12), 'marker', Load(), lineno=1142, col_offset=12), [], [], None, None, lineno=1142, col_offset=12), lineno=1142, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=1143, col_offset=12), 'stack', Load(), lineno=1143, col_offset=12), Slice(Name('k', Load(), lineno=1143, col_offset=23), None, None), Del(), lineno=1143, col_offset=12)], lineno=1143, col_offset=8)], [], lineno=1141, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1144, col_offset=4), Index(Name('POP_MARK', Load(), lineno=1144, col_offset=13)), Store(), lineno=1144, col_offset=4)], Name('load_pop_mark', Load(), lineno=1144, col_offset=25), lineno=1144, col_offset=4), FunctionDef('load_dup', arguments([Name('self', Param(), lineno=1146, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1147, col_offset=8), 'append', Load(), lineno=1147, col_offset=8), [Subscript(Attribute(Name('self', Load(), lineno=1147, col_offset=20), 'stack', Load(), lineno=1147, col_offset=20), Index(Num(-1, lineno=1147, col_offset=32)), Load(), lineno=1147, col_offset=20)], [], None, None, lineno=1147, col_offset=8), lineno=1147, col_offset=8)], [], lineno=1146, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1148, col_offset=4), Index(Name('DUP', Load(), lineno=1148, col_offset=13)), Store(), lineno=1148, col_offset=4)], Name('load_dup', Load(), lineno=1148, col_offset=20), lineno=1148, col_offset=4), FunctionDef('load_get', arguments([Name('self', Param(), lineno=1150, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1151, col_offset=8), 'append', Load(), lineno=1151, col_offset=8), [Subscript(Attribute(Name('self', Load(), lineno=1151, col_offset=20), 'memo', Load(), lineno=1151, col_offset=20), Index(Subscript(Call(Attribute(Name('self', Load(), lineno=1151, col_offset=30), 'readline', Load(), lineno=1151, col_offset=30), [], [], None, None, lineno=1151, col_offset=30), Slice(None, Num(-1, lineno=1151, col_offset=48), None), Load(), lineno=1151, col_offset=30)), Load(), lineno=1151, col_offset=20)], [], None, None, lineno=1151, col_offset=8), lineno=1151, col_offset=8)], [], lineno=1150, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1152, col_offset=4), Index(Name('GET', Load(), lineno=1152, col_offset=13)), Store(), lineno=1152, col_offset=4)], Name('load_get', Load(), lineno=1152, col_offset=20), lineno=1152, col_offset=4), FunctionDef('load_binget', arguments([Name('self', Param(), lineno=1154, col_offset=20)], None, None, []), [Assign([Name('i', Store(), lineno=1155, col_offset=8)], Call(Name('ord', Load(), lineno=1155, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1155, col_offset=16), 'read', Load(), lineno=1155, col_offset=16), [Num(1, lineno=1155, col_offset=26)], [], None, None, lineno=1155, col_offset=16)], [], None, None, lineno=1155, col_offset=12), lineno=1155, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1156, col_offset=8), 'append', Load(), lineno=1156, col_offset=8), [Subscript(Attribute(Name('self', Load(), lineno=1156, col_offset=20), 'memo', Load(), lineno=1156, col_offset=20), Index(Call(Name('repr', Load(), lineno=1156, col_offset=30), [Name('i', Load(), lineno=1156, col_offset=35)], [], None, None, lineno=1156, col_offset=30)), Load(), lineno=1156, col_offset=20)], [], None, None, lineno=1156, col_offset=8), lineno=1156, col_offset=8)], [], lineno=1154, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1157, col_offset=4), Index(Name('BINGET', Load(), lineno=1157, col_offset=13)), Store(), lineno=1157, col_offset=4)], Name('load_binget', Load(), lineno=1157, col_offset=23), lineno=1157, col_offset=4), FunctionDef('load_long_binget', arguments([Name('self', Param(), lineno=1159, col_offset=25)], None, None, []), [Assign([Name('i', Store(), lineno=1160, col_offset=8)], Call(Name('mloads', Load(), lineno=1160, col_offset=12), [BinOp(Str('i', lineno=1160, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=1160, col_offset=25), 'read', Load(), lineno=1160, col_offset=25), [Num(4, lineno=1160, col_offset=35)], [], None, None, lineno=1160, col_offset=25), lineno=1160, col_offset=19)], [], None, None, lineno=1160, col_offset=12), lineno=1160, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1161, col_offset=8), 'append', Load(), lineno=1161, col_offset=8), [Subscript(Attribute(Name('self', Load(), lineno=1161, col_offset=20), 'memo', Load(), lineno=1161, col_offset=20), Index(Call(Name('repr', Load(), lineno=1161, col_offset=30), [Name('i', Load(), lineno=1161, col_offset=35)], [], None, None, lineno=1161, col_offset=30)), Load(), lineno=1161, col_offset=20)], [], None, None, lineno=1161, col_offset=8), lineno=1161, col_offset=8)], [], lineno=1159, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1162, col_offset=4), Index(Name('LONG_BINGET', Load(), lineno=1162, col_offset=13)), Store(), lineno=1162, col_offset=4)], Name('load_long_binget', Load(), lineno=1162, col_offset=28), lineno=1162, col_offset=4), FunctionDef('load_put', arguments([Name('self', Param(), lineno=1164, col_offset=17)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=1165, col_offset=8), 'memo', Load(), lineno=1165, col_offset=8), Index(Subscript(Call(Attribute(Name('self', Load(), lineno=1165, col_offset=18), 'readline', Load(), lineno=1165, col_offset=18), [], [], None, None, lineno=1165, col_offset=18), Slice(None, Num(-1, lineno=1165, col_offset=36), None), Load(), lineno=1165, col_offset=18)), Store(), lineno=1165, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1165, col_offset=42), 'stack', Load(), lineno=1165, col_offset=42), Index(Num(-1, lineno=1165, col_offset=54)), Load(), lineno=1165, col_offset=42), lineno=1165, col_offset=8)], [], lineno=1164, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1166, col_offset=4), Index(Name('PUT', Load(), lineno=1166, col_offset=13)), Store(), lineno=1166, col_offset=4)], Name('load_put', Load(), lineno=1166, col_offset=20), lineno=1166, col_offset=4), FunctionDef('load_binput', arguments([Name('self', Param(), lineno=1168, col_offset=20)], None, None, []), [Assign([Name('i', Store(), lineno=1169, col_offset=8)], Call(Name('ord', Load(), lineno=1169, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1169, col_offset=16), 'read', Load(), lineno=1169, col_offset=16), [Num(1, lineno=1169, col_offset=26)], [], None, None, lineno=1169, col_offset=16)], [], None, None, lineno=1169, col_offset=12), lineno=1169, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=1170, col_offset=8), 'memo', Load(), lineno=1170, col_offset=8), Index(Call(Name('repr', Load(), lineno=1170, col_offset=18), [Name('i', Load(), lineno=1170, col_offset=23)], [], None, None, lineno=1170, col_offset=18)), Store(), lineno=1170, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1170, col_offset=29), 'stack', Load(), lineno=1170, col_offset=29), Index(Num(-1, lineno=1170, col_offset=41)), Load(), lineno=1170, col_offset=29), lineno=1170, col_offset=8)], [], lineno=1168, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1171, col_offset=4), Index(Name('BINPUT', Load(), lineno=1171, col_offset=13)), Store(), lineno=1171, col_offset=4)], Name('load_binput', Load(), lineno=1171, col_offset=23), lineno=1171, col_offset=4), FunctionDef('load_long_binput', arguments([Name('self', Param(), lineno=1173, col_offset=25)], None, None, []), [Assign([Name('i', Store(), lineno=1174, col_offset=8)], Call(Name('mloads', Load(), lineno=1174, col_offset=12), [BinOp(Str('i', lineno=1174, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=1174, col_offset=25), 'read', Load(), lineno=1174, col_offset=25), [Num(4, lineno=1174, col_offset=35)], [], None, None, lineno=1174, col_offset=25), lineno=1174, col_offset=19)], [], None, None, lineno=1174, col_offset=12), lineno=1174, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=1175, col_offset=8), 'memo', Load(), lineno=1175, col_offset=8), Index(Call(Name('repr', Load(), lineno=1175, col_offset=18), [Name('i', Load(), lineno=1175, col_offset=23)], [], None, None, lineno=1175, col_offset=18)), Store(), lineno=1175, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1175, col_offset=29), 'stack', Load(), lineno=1175, col_offset=29), Index(Num(-1, lineno=1175, col_offset=41)), Load(), lineno=1175, col_offset=29), lineno=1175, col_offset=8)], [], lineno=1173, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1176, col_offset=4), Index(Name('LONG_BINPUT', Load(), lineno=1176, col_offset=13)), Store(), lineno=1176, col_offset=4)], Name('load_long_binput', Load(), lineno=1176, col_offset=28), lineno=1176, col_offset=4), FunctionDef('load_append', arguments([Name('self', Param(), lineno=1178, col_offset=20)], None, None, []), [Assign([Name('stack', Store(), lineno=1179, col_offset=8)], Attribute(Name('self', Load(), lineno=1179, col_offset=16), 'stack', Load(), lineno=1179, col_offset=16), lineno=1179, col_offset=8), Assign([Name('value', Store(), lineno=1180, col_offset=8)], Call(Attribute(Name('stack', Load(), lineno=1180, col_offset=16), 'pop', Load(), lineno=1180, col_offset=16), [], [], None, None, lineno=1180, col_offset=16), lineno=1180, col_offset=8), Assign([Name('list', Store(), lineno=1181, col_offset=8)], Subscript(Name('stack', Load(), lineno=1181, col_offset=15), Index(Num(-1, lineno=1181, col_offset=22)), Load(), lineno=1181, col_offset=15), lineno=1181, col_offset=8), Expr(Call(Attribute(Name('list', Load(), lineno=1182, col_offset=8), 'append', Load(), lineno=1182, col_offset=8), [Name('value', Load(), lineno=1182, col_offset=20)], [], None, None, lineno=1182, col_offset=8), lineno=1182, col_offset=8)], [], lineno=1178, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1183, col_offset=4), Index(Name('APPEND', Load(), lineno=1183, col_offset=13)), Store(), lineno=1183, col_offset=4)], Name('load_append', Load(), lineno=1183, col_offset=23), lineno=1183, col_offset=4), FunctionDef('load_appends', arguments([Name('self', Param(), lineno=1185, col_offset=21)], None, None, []), [Assign([Name('stack', Store(), lineno=1186, col_offset=8)], Attribute(Name('self', Load(), lineno=1186, col_offset=16), 'stack', Load(), lineno=1186, col_offset=16), lineno=1186, col_offset=8), Assign([Name('mark', Store(), lineno=1187, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1187, col_offset=15), 'marker', Load(), lineno=1187, col_offset=15), [], [], None, None, lineno=1187, col_offset=15), lineno=1187, col_offset=8), Assign([Name('list', Store(), lineno=1188, col_offset=8)], Subscript(Name('stack', Load(), lineno=1188, col_offset=15), Index(BinOp(Name('mark', Load(), lineno=1188, col_offset=21), Sub(), Num(1, lineno=1188, col_offset=28), lineno=1188, col_offset=21)), Load(), lineno=1188, col_offset=15), lineno=1188, col_offset=8), Expr(Call(Attribute(Name('list', Load(), lineno=1189, col_offset=8), 'extend', Load(), lineno=1189, col_offset=8), [Subscript(Name('stack', Load(), lineno=1189, col_offset=20), Slice(BinOp(Name('mark', Load(), lineno=1189, col_offset=26), Add(), Num(1, lineno=1189, col_offset=33), lineno=1189, col_offset=26), None, None), Load(), lineno=1189, col_offset=20)], [], None, None, lineno=1189, col_offset=8), lineno=1189, col_offset=8), Delete([Subscript(Name('stack', Load(), lineno=1190, col_offset=12), Slice(Name('mark', Load(), lineno=1190, col_offset=18), None, None), Del(), lineno=1190, col_offset=12)], lineno=1190, col_offset=8)], [], lineno=1185, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1191, col_offset=4), Index(Name('APPENDS', Load(), lineno=1191, col_offset=13)), Store(), lineno=1191, col_offset=4)], Name('load_appends', Load(), lineno=1191, col_offset=24), lineno=1191, col_offset=4), FunctionDef('load_setitem', arguments([Name('self', Param(), lineno=1193, col_offset=21)], None, None, []), [Assign([Name('stack', Store(), lineno=1194, col_offset=8)], Attribute(Name('self', Load(), lineno=1194, col_offset=16), 'stack', Load(), lineno=1194, col_offset=16), lineno=1194, col_offset=8), Assign([Name('value', Store(), lineno=1195, col_offset=8)], Call(Attribute(Name('stack', Load(), lineno=1195, col_offset=16), 'pop', Load(), lineno=1195, col_offset=16), [], [], None, None, lineno=1195, col_offset=16), lineno=1195, col_offset=8), Assign([Name('key', Store(), lineno=1196, col_offset=8)], Call(Attribute(Name('stack', Load(), lineno=1196, col_offset=14), 'pop', Load(), lineno=1196, col_offset=14), [], [], None, None, lineno=1196, col_offset=14), lineno=1196, col_offset=8), Assign([Name('dict', Store(), lineno=1197, col_offset=8)], Subscript(Name('stack', Load(), lineno=1197, col_offset=15), Index(Num(-1, lineno=1197, col_offset=22)), Load(), lineno=1197, col_offset=15), lineno=1197, col_offset=8), Assign([Subscript(Name('dict', Load(), lineno=1198, col_offset=8), Index(Name('key', Load(), lineno=1198, col_offset=13)), Store(), lineno=1198, col_offset=8)], Name('value', Load(), lineno=1198, col_offset=20), lineno=1198, col_offset=8)], [], lineno=1193, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1199, col_offset=4), Index(Name('SETITEM', Load(), lineno=1199, col_offset=13)), Store(), lineno=1199, col_offset=4)], Name('load_setitem', Load(), lineno=1199, col_offset=24), lineno=1199, col_offset=4), FunctionDef('load_setitems', arguments([Name('self', Param(), lineno=1201, col_offset=22)], None, None, []), [Assign([Name('stack', Store(), lineno=1202, col_offset=8)], Attribute(Name('self', Load(), lineno=1202, col_offset=16), 'stack', Load(), lineno=1202, col_offset=16), lineno=1202, col_offset=8), Assign([Name('mark', Store(), lineno=1203, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1203, col_offset=15), 'marker', Load(), lineno=1203, col_offset=15), [], [], None, None, lineno=1203, col_offset=15), lineno=1203, col_offset=8), Assign([Name('dict', Store(), lineno=1204, col_offset=8)], Subscript(Name('stack', Load(), lineno=1204, col_offset=15), Index(BinOp(Name('mark', Load(), lineno=1204, col_offset=21), Sub(), Num(1, lineno=1204, col_offset=28), lineno=1204, col_offset=21)), Load(), lineno=1204, col_offset=15), lineno=1204, col_offset=8), For(Name('i', Store(), lineno=1205, col_offset=12), Call(Name('range', Load(), lineno=1205, col_offset=17), [BinOp(Name('mark', Load(), lineno=1205, col_offset=23), Add(), Num(1, lineno=1205, col_offset=30), lineno=1205, col_offset=23), Call(Name('len', Load(), lineno=1205, col_offset=33), [Name('stack', Load(), lineno=1205, col_offset=37)], [], None, None, lineno=1205, col_offset=33), Num(2, lineno=1205, col_offset=45)], [], None, None, lineno=1205, col_offset=17), [Assign([Subscript(Name('dict', Load(), lineno=1206, col_offset=12), Index(Subscript(Name('stack', Load(), lineno=1206, col_offset=17), Index(Name('i', Load(), lineno=1206, col_offset=23)), Load(), lineno=1206, col_offset=17)), Store(), lineno=1206, col_offset=12)], Subscript(Name('stack', Load(), lineno=1206, col_offset=29), Index(BinOp(Name('i', Load(), lineno=1206, col_offset=35), Add(), Num(1, lineno=1206, col_offset=39), lineno=1206, col_offset=35)), Load(), lineno=1206, col_offset=29), lineno=1206, col_offset=12)], [], lineno=1205, col_offset=8), Delete([Subscript(Name('stack', Load(), lineno=1208, col_offset=12), Slice(Name('mark', Load(), lineno=1208, col_offset=18), None, None), Del(), lineno=1208, col_offset=12)], lineno=1208, col_offset=8)], [], lineno=1201, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1209, col_offset=4), Index(Name('SETITEMS', Load(), lineno=1209, col_offset=13)), Store(), lineno=1209, col_offset=4)], Name('load_setitems', Load(), lineno=1209, col_offset=25), lineno=1209, col_offset=4), FunctionDef('load_build', arguments([Name('self', Param(), lineno=1211, col_offset=19)], None, None, []), [Assign([Name('stack', Store(), lineno=1212, col_offset=8)], Attribute(Name('self', Load(), lineno=1212, col_offset=16), 'stack', Load(), lineno=1212, col_offset=16), lineno=1212, col_offset=8), Assign([Name('state', Store(), lineno=1213, col_offset=8)], Call(Attribute(Name('stack', Load(), lineno=1213, col_offset=16), 'pop', Load(), lineno=1213, col_offset=16), [], [], None, None, lineno=1213, col_offset=16), lineno=1213, col_offset=8), Assign([Name('inst', Store(), lineno=1214, col_offset=8)], Subscript(Name('stack', Load(), lineno=1214, col_offset=15), Index(Num(-1, lineno=1214, col_offset=22)), Load(), lineno=1214, col_offset=15), lineno=1214, col_offset=8), Assign([Name('setstate', Store(), lineno=1215, col_offset=8)], Call(Name('getattr', Load(), lineno=1215, col_offset=19), [Name('inst', Load(), lineno=1215, col_offset=27), Str('__setstate__', lineno=1215, col_offset=33), Name('None', Load(), lineno=1215, col_offset=49)], [], None, None, lineno=1215, col_offset=19), lineno=1215, col_offset=8), If(Name('setstate', Load(), lineno=1216, col_offset=11), [Expr(Call(Name('setstate', Load(), lineno=1217, col_offset=12), [Name('state', Load(), lineno=1217, col_offset=21)], [], None, None, lineno=1217, col_offset=12), lineno=1217, col_offset=12), Return(None, lineno=1218, col_offset=12)], [], lineno=1216, col_offset=8), Assign([Name('slotstate', Store(), lineno=1219, col_offset=8)], Name('None', Load(), lineno=1219, col_offset=20), lineno=1219, col_offset=8), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=1220, col_offset=11), [Name('state', Load(), lineno=1220, col_offset=22), Name('tuple', Load(), lineno=1220, col_offset=29)], [], None, None, lineno=1220, col_offset=11), Compare(Call(Name('len', Load(), lineno=1220, col_offset=40), [Name('state', Load(), lineno=1220, col_offset=44)], [], None, None, lineno=1220, col_offset=40), [Eq()], [Num(2, lineno=1220, col_offset=54)], lineno=1220, col_offset=40)], lineno=1220, col_offset=11), [Assign([Tuple([Name('state', Store(), lineno=1221, col_offset=12), Name('slotstate', Store(), lineno=1221, col_offset=19)], Store(), lineno=1221, col_offset=12)], Name('state', Load(), lineno=1221, col_offset=31), lineno=1221, col_offset=12)], [], lineno=1220, col_offset=8), If(Name('state', Load(), lineno=1222, col_offset=11), [TryExcept([Assign([Name('d', Store(), lineno=1224, col_offset=16)], Attribute(Name('inst', Load(), lineno=1224, col_offset=20), '__dict__', Load(), lineno=1224, col_offset=20), lineno=1224, col_offset=16), TryExcept([For(Tuple([Name('k', Store(), lineno=1226, col_offset=24), Name('v', Store(), lineno=1226, col_offset=27)], Store(), lineno=1226, col_offset=24), Call(Attribute(Name('state', Load(), lineno=1226, col_offset=32), 'iteritems', Load(), lineno=1226, col_offset=32), [], [], None, None, lineno=1226, col_offset=32), [Assign([Subscript(Name('d', Load(), lineno=1227, col_offset=24), Index(Call(Name('intern', Load(), lineno=1227, col_offset=26), [Name('k', Load(), lineno=1227, col_offset=33)], [], None, None, lineno=1227, col_offset=26)), Store(), lineno=1227, col_offset=24)], Name('v', Load(), lineno=1227, col_offset=39), lineno=1227, col_offset=24)], [], lineno=1226, col_offset=20)], [ExceptHandler(Name('TypeError', Load(), lineno=1230, col_offset=23), None, [Expr(Call(Attribute(Name('d', Load(), lineno=1231, col_offset=20), 'update', Load(), lineno=1231, col_offset=20), [Name('state', Load(), lineno=1231, col_offset=29)], [], None, None, lineno=1231, col_offset=20), lineno=1231, col_offset=20)], lineno=1230, col_offset=16)], [], lineno=1225, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=1233, col_offset=19), None, [For(Tuple([Name('k', Store(), lineno=1243, col_offset=20), Name('v', Store(), lineno=1243, col_offset=23)], Store(), lineno=1243, col_offset=20), Call(Attribute(Name('state', Load(), lineno=1243, col_offset=28), 'items', Load(), lineno=1243, col_offset=28), [], [], None, None, lineno=1243, col_offset=28), [Expr(Call(Name('setattr', Load(), lineno=1244, col_offset=20), [Name('inst', Load(), lineno=1244, col_offset=28), Name('k', Load(), lineno=1244, col_offset=34), Name('v', Load(), lineno=1244, col_offset=37)], [], None, None, lineno=1244, col_offset=20), lineno=1244, col_offset=20)], [], lineno=1243, col_offset=16)], lineno=1233, col_offset=12)], [], lineno=1223, col_offset=12)], [], lineno=1222, col_offset=8), If(Name('slotstate', Load(), lineno=1245, col_offset=11), [For(Tuple([Name('k', Store(), lineno=1246, col_offset=16), Name('v', Store(), lineno=1246, col_offset=19)], Store(), lineno=1246, col_offset=16), Call(Attribute(Name('slotstate', Load(), lineno=1246, col_offset=24), 'items', Load(), lineno=1246, col_offset=24), [], [], None, None, lineno=1246, col_offset=24), [Expr(Call(Name('setattr', Load(), lineno=1247, col_offset=16), [Name('inst', Load(), lineno=1247, col_offset=24), Name('k', Load(), lineno=1247, col_offset=30), Name('v', Load(), lineno=1247, col_offset=33)], [], None, None, lineno=1247, col_offset=16), lineno=1247, col_offset=16)], [], lineno=1246, col_offset=12)], [], lineno=1245, col_offset=8)], [], lineno=1211, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1248, col_offset=4), Index(Name('BUILD', Load(), lineno=1248, col_offset=13)), Store(), lineno=1248, col_offset=4)], Name('load_build', Load(), lineno=1248, col_offset=22), lineno=1248, col_offset=4), FunctionDef('load_mark', arguments([Name('self', Param(), lineno=1250, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1251, col_offset=8), 'append', Load(), lineno=1251, col_offset=8), [Attribute(Name('self', Load(), lineno=1251, col_offset=20), 'mark', Load(), lineno=1251, col_offset=20)], [], None, None, lineno=1251, col_offset=8), lineno=1251, col_offset=8)], [], lineno=1250, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1252, col_offset=4), Index(Name('MARK', Load(), lineno=1252, col_offset=13)), Store(), lineno=1252, col_offset=4)], Name('load_mark', Load(), lineno=1252, col_offset=21), lineno=1252, col_offset=4), FunctionDef('load_stop', arguments([Name('self', Param(), lineno=1254, col_offset=18)], None, None, []), [Assign([Name('value', Store(), lineno=1255, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1255, col_offset=16), 'stack', Load(), lineno=1255, col_offset=16), 'pop', Load(), lineno=1255, col_offset=16), [], [], None, None, lineno=1255, col_offset=16), lineno=1255, col_offset=8), Raise(Call(Name('_Stop', Load(), lineno=1256, col_offset=14), [Name('value', Load(), lineno=1256, col_offset=20)], [], None, None, lineno=1256, col_offset=14), None, None, lineno=1256, col_offset=8)], [], lineno=1254, col_offset=4), Assign([Subscript(Name('dispatch', Load(), lineno=1257, col_offset=4), Index(Name('STOP', Load(), lineno=1257, col_offset=13)), Store(), lineno=1257, col_offset=4)], Name('load_stop', Load(), lineno=1257, col_offset=21), lineno=1257, col_offset=4)], [], lineno=827, col_offset=0), ClassDef('_EmptyClass', [], [Pass( lineno=1262, col_offset=4)], [], lineno=1261, col_offset=0), Import([alias('binascii', '_binascii')], lineno=1266, col_offset=0), FunctionDef('encode_long', arguments([Name('x', Param(), lineno=1268, col_offset=16)], None, None, []), [Expr(Str("Encode a long to a two's complement little-endian binary string.\n    Note that 0L is a special case, returning an empty string, to save a\n    byte in the LONG1 pickling context.\n\n    >>> encode_long(0L)\n    ''\n    >>> encode_long(255L)\n    '\\xff\\x00'\n    >>> encode_long(32767L)\n    '\\xff\\x7f'\n    >>> encode_long(-256L)\n    '\\x00\\xff'\n    >>> encode_long(-32768L)\n    '\\x00\\x80'\n    >>> encode_long(-128L)\n    '\\x80'\n    >>> encode_long(127L)\n    '\\x7f'\n    >>>\n    ", lineno=1288, col_offset=-1), lineno=1288, col_offset=-1), If(Compare(Name('x', Load(), lineno=1290, col_offset=7), [Eq()], [Num(0, lineno=1290, col_offset=12)], lineno=1290, col_offset=7), [Return(Str('', lineno=1291, col_offset=15), lineno=1291, col_offset=8)], [], lineno=1290, col_offset=4), If(Compare(Name('x', Load(), lineno=1292, col_offset=7), [Gt()], [Num(0, lineno=1292, col_offset=11)], lineno=1292, col_offset=7), [Assign([Name('ashex', Store(), lineno=1293, col_offset=8)], Call(Name('hex', Load(), lineno=1293, col_offset=16), [Name('x', Load(), lineno=1293, col_offset=20)], [], None, None, lineno=1293, col_offset=16), lineno=1293, col_offset=8), Assert(Call(Attribute(Name('ashex', Load(), lineno=1294, col_offset=15), 'startswith', Load(), lineno=1294, col_offset=15), [Str('0x', lineno=1294, col_offset=32)], [], None, None, lineno=1294, col_offset=15), None, lineno=1294, col_offset=8), Assign([Name('njunkchars', Store(), lineno=1295, col_offset=8)], BinOp(Num(2, lineno=1295, col_offset=21), Add(), Call(Attribute(Name('ashex', Load(), lineno=1295, col_offset=25), 'endswith', Load(), lineno=1295, col_offset=25), [Str('L', lineno=1295, col_offset=40)], [], None, None, lineno=1295, col_offset=25), lineno=1295, col_offset=21), lineno=1295, col_offset=8), Assign([Name('nibbles', Store(), lineno=1296, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=1296, col_offset=18), [Name('ashex', Load(), lineno=1296, col_offset=22)], [], None, None, lineno=1296, col_offset=18), Sub(), Name('njunkchars', Load(), lineno=1296, col_offset=31), lineno=1296, col_offset=18), lineno=1296, col_offset=8), If(BinOp(Name('nibbles', Load(), lineno=1297, col_offset=11), BitAnd(), Num(1, lineno=1297, col_offset=21), lineno=1297, col_offset=11), [Assign([Name('ashex', Store(), lineno=1299, col_offset=12)], BinOp(Str('0x0', lineno=1299, col_offset=20), Add(), Subscript(Name('ashex', Load(), lineno=1299, col_offset=28), Slice(Num(2, lineno=1299, col_offset=34), None, None), Load(), lineno=1299, col_offset=28), lineno=1299, col_offset=20), lineno=1299, col_offset=12)], [If(Compare(Call(Name('int', Load(), lineno=1300, col_offset=13), [Subscript(Name('ashex', Load(), lineno=1300, col_offset=17), Index(Num(2, lineno=1300, col_offset=23)), Load(), lineno=1300, col_offset=17), Num(16, lineno=1300, col_offset=27)], [], None, None, lineno=1300, col_offset=13), [GtE()], [Num(8, lineno=1300, col_offset=34)], lineno=1300, col_offset=13), [Assign([Name('ashex', Store(), lineno=1302, col_offset=12)], BinOp(Str('0x00', lineno=1302, col_offset=20), Add(), Subscript(Name('ashex', Load(), lineno=1302, col_offset=29), Slice(Num(2, lineno=1302, col_offset=35), None, None), Load(), lineno=1302, col_offset=29), lineno=1302, col_offset=20), lineno=1302, col_offset=12)], [], lineno=1300, col_offset=13)], lineno=1297, col_offset=8)], [Assign([Name('ashex', Store(), lineno=1307, col_offset=8)], Call(Name('hex', Load(), lineno=1307, col_offset=16), [UnaryOp(USub(), Name('x', Load(), lineno=1307, col_offset=21), lineno=1307, col_offset=20)], [], None, None, lineno=1307, col_offset=16), lineno=1307, col_offset=8), Assert(Call(Attribute(Name('ashex', Load(), lineno=1308, col_offset=15), 'startswith', Load(), lineno=1308, col_offset=15), [Str('0x', lineno=1308, col_offset=32)], [], None, None, lineno=1308, col_offset=15), None, lineno=1308, col_offset=8), Assign([Name('njunkchars', Store(), lineno=1309, col_offset=8)], BinOp(Num(2, lineno=1309, col_offset=21), Add(), Call(Attribute(Name('ashex', Load(), lineno=1309, col_offset=25), 'endswith', Load(), lineno=1309, col_offset=25), [Str('L', lineno=1309, col_offset=40)], [], None, None, lineno=1309, col_offset=25), lineno=1309, col_offset=21), lineno=1309, col_offset=8), Assign([Name('nibbles', Store(), lineno=1310, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=1310, col_offset=18), [Name('ashex', Load(), lineno=1310, col_offset=22)], [], None, None, lineno=1310, col_offset=18), Sub(), Name('njunkchars', Load(), lineno=1310, col_offset=31), lineno=1310, col_offset=18), lineno=1310, col_offset=8), If(BinOp(Name('nibbles', Load(), lineno=1311, col_offset=11), BitAnd(), Num(1, lineno=1311, col_offset=21), lineno=1311, col_offset=11), [AugAssign(Name('nibbles', Store(), lineno=1313, col_offset=12), Add(), Num(1, lineno=1313, col_offset=23), lineno=1313, col_offset=12)], [], lineno=1311, col_offset=8), Assign([Name('nbits', Store(), lineno=1314, col_offset=8)], BinOp(Name('nibbles', Load(), lineno=1314, col_offset=16), Mult(), Num(4, lineno=1314, col_offset=26), lineno=1314, col_offset=16), lineno=1314, col_offset=8), AugAssign(Name('x', Store(), lineno=1315, col_offset=8), Add(), BinOp(Num(1L, lineno=1315, col_offset=13), LShift(), Name('nbits', Load(), lineno=1315, col_offset=19), lineno=1315, col_offset=13), lineno=1315, col_offset=8), Assert(Compare(Name('x', Load(), lineno=1316, col_offset=15), [Gt()], [Num(0, lineno=1316, col_offset=19)], lineno=1316, col_offset=15), None, lineno=1316, col_offset=8), Assign([Name('ashex', Store(), lineno=1317, col_offset=8)], Call(Name('hex', Load(), lineno=1317, col_offset=16), [Name('x', Load(), lineno=1317, col_offset=20)], [], None, None, lineno=1317, col_offset=16), lineno=1317, col_offset=8), Assign([Name('njunkchars', Store(), lineno=1318, col_offset=8)], BinOp(Num(2, lineno=1318, col_offset=21), Add(), Call(Attribute(Name('ashex', Load(), lineno=1318, col_offset=25), 'endswith', Load(), lineno=1318, col_offset=25), [Str('L', lineno=1318, col_offset=40)], [], None, None, lineno=1318, col_offset=25), lineno=1318, col_offset=21), lineno=1318, col_offset=8), Assign([Name('newnibbles', Store(), lineno=1319, col_offset=8)], BinOp(Call(Name('len', Load(), lineno=1319, col_offset=21), [Name('ashex', Load(), lineno=1319, col_offset=25)], [], None, None, lineno=1319, col_offset=21), Sub(), Name('njunkchars', Load(), lineno=1319, col_offset=34), lineno=1319, col_offset=21), lineno=1319, col_offset=8), If(Compare(Name('newnibbles', Load(), lineno=1320, col_offset=11), [Lt()], [Name('nibbles', Load(), lineno=1320, col_offset=24)], lineno=1320, col_offset=11), [Assign([Name('ashex', Store(), lineno=1321, col_offset=12)], BinOp(BinOp(Str('0x', lineno=1321, col_offset=20), Add(), BinOp(Str('0', lineno=1321, col_offset=27), Mult(), BinOp(Name('nibbles', Load(), lineno=1321, col_offset=34), Sub(), Name('newnibbles', Load(), lineno=1321, col_offset=44), lineno=1321, col_offset=34), lineno=1321, col_offset=27), lineno=1321, col_offset=20), Add(), Subscript(Name('ashex', Load(), lineno=1321, col_offset=58), Slice(Num(2, lineno=1321, col_offset=64), None, None), Load(), lineno=1321, col_offset=58), lineno=1321, col_offset=56), lineno=1321, col_offset=12)], [], lineno=1320, col_offset=8), If(Compare(Call(Name('int', Load(), lineno=1322, col_offset=11), [Subscript(Name('ashex', Load(), lineno=1322, col_offset=15), Index(Num(2, lineno=1322, col_offset=21)), Load(), lineno=1322, col_offset=15), Num(16, lineno=1322, col_offset=25)], [], None, None, lineno=1322, col_offset=11), [Lt()], [Num(8, lineno=1322, col_offset=31)], lineno=1322, col_offset=11), [Assign([Name('ashex', Store(), lineno=1324, col_offset=12)], BinOp(Str('0xff', lineno=1324, col_offset=20), Add(), Subscript(Name('ashex', Load(), lineno=1324, col_offset=29), Slice(Num(2, lineno=1324, col_offset=35), None, None), Load(), lineno=1324, col_offset=29), lineno=1324, col_offset=20), lineno=1324, col_offset=12)], [], lineno=1322, col_offset=8)], lineno=1292, col_offset=4), If(Call(Attribute(Name('ashex', Load(), lineno=1326, col_offset=7), 'endswith', Load(), lineno=1326, col_offset=7), [Str('L', lineno=1326, col_offset=22)], [], None, None, lineno=1326, col_offset=7), [Assign([Name('ashex', Store(), lineno=1327, col_offset=8)], Subscript(Name('ashex', Load(), lineno=1327, col_offset=16), Slice(Num(2, lineno=1327, col_offset=22), Num(-1, lineno=1327, col_offset=25), None), Load(), lineno=1327, col_offset=16), lineno=1327, col_offset=8)], [Assign([Name('ashex', Store(), lineno=1329, col_offset=8)], Subscript(Name('ashex', Load(), lineno=1329, col_offset=16), Slice(Num(2, lineno=1329, col_offset=22), None, None), Load(), lineno=1329, col_offset=16), lineno=1329, col_offset=8)], lineno=1326, col_offset=4), Assert(Compare(BinOp(Call(Name('len', Load(), lineno=1330, col_offset=11), [Name('ashex', Load(), lineno=1330, col_offset=15)], [], None, None, lineno=1330, col_offset=11), BitAnd(), Num(1, lineno=1330, col_offset=24), lineno=1330, col_offset=11), [Eq()], [Num(0, lineno=1330, col_offset=29)], lineno=1330, col_offset=11), Tuple([Name('x', Load(), lineno=1330, col_offset=33), Name('ashex', Load(), lineno=1330, col_offset=36)], Load(), lineno=1330, col_offset=33), lineno=1330, col_offset=4), Assign([Name('binary', Store(), lineno=1331, col_offset=4)], Call(Attribute(Name('_binascii', Load(), lineno=1331, col_offset=13), 'unhexlify', Load(), lineno=1331, col_offset=13), [Name('ashex', Load(), lineno=1331, col_offset=33)], [], None, None, lineno=1331, col_offset=13), lineno=1331, col_offset=4), Return(Subscript(Name('binary', Load(), lineno=1332, col_offset=11), Slice(None, None, Num(-1, lineno=1332, col_offset=21)), Load(), lineno=1332, col_offset=11), lineno=1332, col_offset=4)], [], lineno=1268, col_offset=0), FunctionDef('decode_long', arguments([Name('data', Param(), lineno=1334, col_offset=16)], None, None, []), [Expr(Str('Decode a long from a two\'s complement little-endian binary string.\n\n    >>> decode_long(\'\')\n    0L\n    >>> decode_long("\\xff\\x00")\n    255L\n    >>> decode_long("\\xff\\x7f")\n    32767L\n    >>> decode_long("\\x00\\xff")\n    -256L\n    >>> decode_long("\\x00\\x80")\n    -32768L\n    >>> decode_long("\\x80")\n    -128L\n    >>> decode_long("\\x7f")\n    127L\n    ', lineno=1351, col_offset=-1), lineno=1351, col_offset=-1), Assign([Name('nbytes', Store(), lineno=1353, col_offset=4)], Call(Name('len', Load(), lineno=1353, col_offset=13), [Name('data', Load(), lineno=1353, col_offset=17)], [], None, None, lineno=1353, col_offset=13), lineno=1353, col_offset=4), If(Compare(Name('nbytes', Load(), lineno=1354, col_offset=7), [Eq()], [Num(0, lineno=1354, col_offset=17)], lineno=1354, col_offset=7), [Return(Num(0L, lineno=1355, col_offset=15), lineno=1355, col_offset=8)], [], lineno=1354, col_offset=4), Assign([Name('ashex', Store(), lineno=1356, col_offset=4)], Call(Attribute(Name('_binascii', Load(), lineno=1356, col_offset=12), 'hexlify', Load(), lineno=1356, col_offset=12), [Subscript(Name('data', Load(), lineno=1356, col_offset=30), Slice(None, None, Num(-1, lineno=1356, col_offset=38)), Load(), lineno=1356, col_offset=30)], [], None, None, lineno=1356, col_offset=12), lineno=1356, col_offset=4), Assign([Name('n', Store(), lineno=1357, col_offset=4)], Call(Name('long', Load(), lineno=1357, col_offset=8), [Name('ashex', Load(), lineno=1357, col_offset=13), Num(16, lineno=1357, col_offset=20)], [], None, None, lineno=1357, col_offset=8), lineno=1357, col_offset=4), If(Compare(Subscript(Name('data', Load(), lineno=1358, col_offset=7), Index(Num(-1, lineno=1358, col_offset=13)), Load(), lineno=1358, col_offset=7), [GtE()], [Str('\x80', lineno=1358, col_offset=19)], lineno=1358, col_offset=7), [AugAssign(Name('n', Store(), lineno=1359, col_offset=8), Sub(), BinOp(Num(1L, lineno=1359, col_offset=13), LShift(), BinOp(Name('nbytes', Load(), lineno=1359, col_offset=20), Mult(), Num(8, lineno=1359, col_offset=29), lineno=1359, col_offset=20), lineno=1359, col_offset=13), lineno=1359, col_offset=8)], [], lineno=1358, col_offset=4), Return(Name('n', Load(), lineno=1360, col_offset=11), lineno=1360, col_offset=4)], [], lineno=1334, col_offset=0), TryExcept([ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=1365, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=1366, col_offset=7), None, [ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=1367, col_offset=4)], lineno=1366, col_offset=0)], [], lineno=1364, col_offset=0), FunctionDef('dump', arguments([Name('obj', Param(), lineno=1369, col_offset=9), Name('file', Param(), lineno=1369, col_offset=14), Name('protocol', Param(), lineno=1369, col_offset=20)], None, None, [Name('None', Load(), lineno=1369, col_offset=29)]), [Expr(Call(Attribute(Call(Name('Pickler', Load(), lineno=1370, col_offset=4), [Name('file', Load(), lineno=1370, col_offset=12), Name('protocol', Load(), lineno=1370, col_offset=18)], [], None, None, lineno=1370, col_offset=4), 'dump', Load(), lineno=1370, col_offset=4), [Name('obj', Load(), lineno=1370, col_offset=33)], [], None, None, lineno=1370, col_offset=4), lineno=1370, col_offset=4)], [], lineno=1369, col_offset=0), FunctionDef('dumps', arguments([Name('obj', Param(), lineno=1372, col_offset=10), Name('protocol', Param(), lineno=1372, col_offset=15)], None, None, [Name('None', Load(), lineno=1372, col_offset=24)]), [Assign([Name('file', Store(), lineno=1373, col_offset=4)], Call(Name('StringIO', Load(), lineno=1373, col_offset=11), [], [], None, None, lineno=1373, col_offset=11), lineno=1373, col_offset=4), Expr(Call(Attribute(Call(Name('Pickler', Load(), lineno=1374, col_offset=4), [Name('file', Load(), lineno=1374, col_offset=12), Name('protocol', Load(), lineno=1374, col_offset=18)], [], None, None, lineno=1374, col_offset=4), 'dump', Load(), lineno=1374, col_offset=4), [Name('obj', Load(), lineno=1374, col_offset=33)], [], None, None, lineno=1374, col_offset=4), lineno=1374, col_offset=4), Return(Call(Attribute(Name('file', Load(), lineno=1375, col_offset=11), 'getvalue', Load(), lineno=1375, col_offset=11), [], [], None, None, lineno=1375, col_offset=11), lineno=1375, col_offset=4)], [], lineno=1372, col_offset=0), FunctionDef('load', arguments([Name('file', Param(), lineno=1377, col_offset=9)], None, None, []), [Return(Call(Attribute(Call(Name('Unpickler', Load(), lineno=1378, col_offset=11), [Name('file', Load(), lineno=1378, col_offset=21)], [], None, None, lineno=1378, col_offset=11), 'load', Load(), lineno=1378, col_offset=11), [], [], None, None, lineno=1378, col_offset=11), lineno=1378, col_offset=4)], [], lineno=1377, col_offset=0), FunctionDef('loads', arguments([Name('str', Param(), lineno=1380, col_offset=10)], None, None, []), [Assign([Name('file', Store(), lineno=1381, col_offset=4)], Call(Name('StringIO', Load(), lineno=1381, col_offset=11), [Name('str', Load(), lineno=1381, col_offset=20)], [], None, None, lineno=1381, col_offset=11), lineno=1381, col_offset=4), Return(Call(Attribute(Call(Name('Unpickler', Load(), lineno=1382, col_offset=11), [Name('file', Load(), lineno=1382, col_offset=21)], [], None, None, lineno=1382, col_offset=11), 'load', Load(), lineno=1382, col_offset=11), [], [], None, None, lineno=1382, col_offset=11), lineno=1382, col_offset=4)], [], lineno=1380, col_offset=0), FunctionDef('_test', arguments([], None, None, []), [Import([alias('doctest', None)], lineno=1387, col_offset=4), Return(Call(Attribute(Name('doctest', Load(), lineno=1388, col_offset=11), 'testmod', Load(), lineno=1388, col_offset=11), [], [], None, None, lineno=1388, col_offset=11), lineno=1388, col_offset=4)], [], lineno=1386, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1390, col_offset=3), [Eq()], [Str('__main__', lineno=1390, col_offset=15)], lineno=1390, col_offset=3), [Expr(Call(Name('_test', Load(), lineno=1391, col_offset=4), [], [], None, None, lineno=1391, col_offset=4), lineno=1391, col_offset=4)], [], lineno=1390, col_offset=0)])
