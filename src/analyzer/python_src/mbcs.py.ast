Module([Expr(Str(" Python 'mbcs' Codec for Windows\n\n\nCloned by Mark Hammond (mhammond@skippinet.com.au) from ascii.py,\nwhich was written by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n", lineno=9, col_offset=-1), lineno=9, col_offset=-1), ImportFrom('codecs', [alias('mbcs_encode', None), alias('mbcs_decode', None)], 0, lineno=12, col_offset=0), Import([alias('codecs', None)], lineno=14, col_offset=0), Assign([Name('encode', Store(), lineno=18, col_offset=0)], Name('mbcs_encode', Load(), lineno=18, col_offset=9), lineno=18, col_offset=0), FunctionDef('decode', arguments([Name('input', Param(), lineno=20, col_offset=11), Name('errors', Param(), lineno=20, col_offset=18)], None, None, [Str('strict', lineno=20, col_offset=25)]), [Return(Call(Name('mbcs_decode', Load(), lineno=21, col_offset=11), [Name('input', Load(), lineno=21, col_offset=23), Name('errors', Load(), lineno=21, col_offset=30), Name('True', Load(), lineno=21, col_offset=38)], [], None, None, lineno=21, col_offset=11), lineno=21, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=23, col_offset=25), 'IncrementalEncoder', Load(), lineno=23, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=24, col_offset=15), Name('input', Param(), lineno=24, col_offset=21), Name('final', Param(), lineno=24, col_offset=28)], None, None, [Name('False', Load(), lineno=24, col_offset=34)]), [Return(Subscript(Call(Name('mbcs_encode', Load(), lineno=25, col_offset=15), [Name('input', Load(), lineno=25, col_offset=27), Attribute(Name('self', Load(), lineno=25, col_offset=34), 'errors', Load(), lineno=25, col_offset=34)], [], None, None, lineno=25, col_offset=15), Index(Num(0, lineno=25, col_offset=47)), Load(), lineno=25, col_offset=15), lineno=25, col_offset=8)], [], lineno=24, col_offset=4)], [], lineno=23, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=27, col_offset=25), 'BufferedIncrementalDecoder', Load(), lineno=27, col_offset=25)], [Assign([Name('_buffer_decode', Store(), lineno=28, col_offset=4)], Name('mbcs_decode', Load(), lineno=28, col_offset=21), lineno=28, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('StreamWriter', [Attribute(Name('codecs', Load(), lineno=30, col_offset=19), 'StreamWriter', Load(), lineno=30, col_offset=19)], [Assign([Name('encode', Store(), lineno=31, col_offset=4)], Name('mbcs_encode', Load(), lineno=31, col_offset=13), lineno=31, col_offset=4)], [], lineno=30, col_offset=0), ClassDef('StreamReader', [Attribute(Name('codecs', Load(), lineno=33, col_offset=19), 'StreamReader', Load(), lineno=33, col_offset=19)], [Assign([Name('decode', Store(), lineno=34, col_offset=4)], Name('mbcs_decode', Load(), lineno=34, col_offset=13), lineno=34, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=39, col_offset=11), 'CodecInfo', Load(), lineno=39, col_offset=11), [], [keyword('name', Str('mbcs', lineno=40, col_offset=13)), keyword('encode', Name('encode', Load(), lineno=41, col_offset=15)), keyword('decode', Name('decode', Load(), lineno=42, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=43, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=44, col_offset=27)), keyword('streamreader', Name('StreamReader', Load(), lineno=45, col_offset=21)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=46, col_offset=21))], None, None, lineno=39, col_offset=11), lineno=39, col_offset=4)], [], lineno=38, col_offset=0)])
