Module([Expr(Str("Suite Special Events: Commands for mounting Disk Copy images\nLevel 1, version 1\n\nGenerated from Macintosh HD:Hulpprogramma's:Disk Copy\nAETE/AEUT resource version 1/0, language 0, script 0\n", lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('ddsk', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('Special_Events_Events', [], [Assign([Name('_argmap_mount', Store(), lineno=15, col_offset=4)], Dict([Str('access_mode', lineno=16, col_offset=12), Str('checksum_verification', lineno=17, col_offset=12), Str('signature_verification', lineno=18, col_offset=12), Str('RAM_caching', lineno=19, col_offset=12)], [Str('Acss', lineno=16, col_offset=28), Str('VChk', lineno=17, col_offset=38), Str('VSig', lineno=18, col_offset=39), Str('Cach', lineno=19, col_offset=28)], lineno=15, col_offset=20), lineno=15, col_offset=4), FunctionDef('mount', arguments([Name('self', Param(), lineno=22, col_offset=14), Name('_object', Param(), lineno=22, col_offset=20), Name('_attributes', Param(), lineno=22, col_offset=29)], None, '_arguments', [Dict([], [], lineno=22, col_offset=41)]), [Expr(Str('mount: Mounts an Disk Copy image as a disk volume\n        Required argument: a reference to the disk image to be mounted\n        Keyword argument access_mode: the access mode for mounted volume (default is "any", i.e. best possible)\n        Keyword argument checksum_verification: Verify the checksum before mounting?\n        Keyword argument signature_verification: Verify the DigiSign\x8e signature before mounting?\n        Keyword argument RAM_caching: Cache the disk image in RAM? (if omitted, don\'t cache)\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: a reference to mounted disk\n        ', lineno=31, col_offset=-1), lineno=31, col_offset=-1), Assign([Name('_code', Store(), lineno=32, col_offset=8)], Str('ddsk', lineno=32, col_offset=16), lineno=32, col_offset=8), Assign([Name('_subcode', Store(), lineno=33, col_offset=8)], Str('Moun', lineno=33, col_offset=19), lineno=33, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=35, col_offset=8), 'keysubst', Load(), lineno=35, col_offset=8), [Name('_arguments', Load(), lineno=35, col_offset=25), Attribute(Name('self', Load(), lineno=35, col_offset=37), '_argmap_mount', Load(), lineno=35, col_offset=37)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=36, col_offset=8), Index(Str('----', lineno=36, col_offset=19)), Store(), lineno=36, col_offset=8)], Name('_object', Load(), lineno=36, col_offset=29), lineno=36, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=38, col_offset=8), 'enumsubst', Load(), lineno=38, col_offset=8), [Name('_arguments', Load(), lineno=38, col_offset=26), Str('Acss', lineno=38, col_offset=38), Name('_Enum_Acss', Load(), lineno=38, col_offset=46)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=39, col_offset=8), 'enumsubst', Load(), lineno=39, col_offset=8), [Name('_arguments', Load(), lineno=39, col_offset=26), Str('VChk', lineno=39, col_offset=38), Name('_Enum_bool', Load(), lineno=39, col_offset=46)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=40, col_offset=8), 'enumsubst', Load(), lineno=40, col_offset=8), [Name('_arguments', Load(), lineno=40, col_offset=26), Str('VSig', lineno=40, col_offset=38), Name('_Enum_bool', Load(), lineno=40, col_offset=46)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=41, col_offset=8), 'enumsubst', Load(), lineno=41, col_offset=8), [Name('_arguments', Load(), lineno=41, col_offset=26), Str('Cach', lineno=41, col_offset=38), Name('_Enum_bool', Load(), lineno=41, col_offset=46)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=43, col_offset=8), Name('_arguments', Store(), lineno=43, col_offset=16), Name('_attributes', Store(), lineno=43, col_offset=28)], Store(), lineno=43, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=43, col_offset=42), 'send', Load(), lineno=43, col_offset=42), [Name('_code', Load(), lineno=43, col_offset=52), Name('_subcode', Load(), lineno=43, col_offset=59), Name('_arguments', Load(), lineno=44, col_offset=24), Name('_attributes', Load(), lineno=44, col_offset=36)], [], None, None, lineno=43, col_offset=42), lineno=43, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=45, col_offset=11), 'has_key', Load(), lineno=45, col_offset=11), [Str('errn', lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=46, col_offset=18), 'Error', Load(), lineno=46, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=46, col_offset=33), 'decodeerror', Load(), lineno=46, col_offset=33), [Name('_arguments', Load(), lineno=46, col_offset=53)], [], None, None, lineno=46, col_offset=33), None, lineno=46, col_offset=12)], [], lineno=45, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=48, col_offset=11), 'has_key', Load(), lineno=48, col_offset=11), [Str('----', lineno=48, col_offset=30)], [], None, None, lineno=48, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=49, col_offset=19), Index(Str('----', lineno=49, col_offset=30)), Load(), lineno=49, col_offset=19), lineno=49, col_offset=12)], [], lineno=48, col_offset=8)], [], lineno=22, col_offset=4), Assign([Name('_argmap_execute_DiskScript', Store(), lineno=51, col_offset=4)], Dict([Str('checksum_verification', lineno=52, col_offset=12), Str('signature_verification', lineno=53, col_offset=12)], [Str('VChk', lineno=52, col_offset=38), Str('VSig', lineno=53, col_offset=39)], lineno=51, col_offset=33), lineno=51, col_offset=4), FunctionDef('execute_DiskScript', arguments([Name('self', Param(), lineno=56, col_offset=27), Name('_object', Param(), lineno=56, col_offset=33), Name('_attributes', Param(), lineno=56, col_offset=42)], None, '_arguments', [Dict([], [], lineno=56, col_offset=54)]), [Expr(Str('execute DiskScript: Executes a Disk Copy-specific DiskScript\n        Required argument: a reference to the DiskScript to execute\n        Keyword argument checksum_verification: Should checksums be verified when mounting images referenced in the DiskScript?\n        Keyword argument signature_verification: Should the DigiSign\x8e signature of the DiskScript and the images it references be verified?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=62, col_offset=-1), lineno=62, col_offset=-1), Assign([Name('_code', Store(), lineno=63, col_offset=8)], Str('ddsk', lineno=63, col_offset=16), lineno=63, col_offset=8), Assign([Name('_subcode', Store(), lineno=64, col_offset=8)], Str('XEQd', lineno=64, col_offset=19), lineno=64, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=66, col_offset=8), 'keysubst', Load(), lineno=66, col_offset=8), [Name('_arguments', Load(), lineno=66, col_offset=25), Attribute(Name('self', Load(), lineno=66, col_offset=37), '_argmap_execute_DiskScript', Load(), lineno=66, col_offset=37)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=67, col_offset=8), Index(Str('----', lineno=67, col_offset=19)), Store(), lineno=67, col_offset=8)], Name('_object', Load(), lineno=67, col_offset=29), lineno=67, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=69, col_offset=8), 'enumsubst', Load(), lineno=69, col_offset=8), [Name('_arguments', Load(), lineno=69, col_offset=26), Str('VChk', lineno=69, col_offset=38), Name('_Enum_bool', Load(), lineno=69, col_offset=46)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=70, col_offset=8), 'enumsubst', Load(), lineno=70, col_offset=8), [Name('_arguments', Load(), lineno=70, col_offset=26), Str('VSig', lineno=70, col_offset=38), Name('_Enum_bool', Load(), lineno=70, col_offset=46)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=72, col_offset=8), Name('_arguments', Store(), lineno=72, col_offset=16), Name('_attributes', Store(), lineno=72, col_offset=28)], Store(), lineno=72, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=72, col_offset=42), 'send', Load(), lineno=72, col_offset=42), [Name('_code', Load(), lineno=72, col_offset=52), Name('_subcode', Load(), lineno=72, col_offset=59), Name('_arguments', Load(), lineno=73, col_offset=24), Name('_attributes', Load(), lineno=73, col_offset=36)], [], None, None, lineno=72, col_offset=42), lineno=72, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=74, col_offset=11), 'has_key', Load(), lineno=74, col_offset=11), [Str('errn', lineno=74, col_offset=30)], [], None, None, lineno=74, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=75, col_offset=18), 'Error', Load(), lineno=75, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=75, col_offset=33), 'decodeerror', Load(), lineno=75, col_offset=33), [Name('_arguments', Load(), lineno=75, col_offset=53)], [], None, None, lineno=75, col_offset=33), None, lineno=75, col_offset=12)], [], lineno=74, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=77, col_offset=11), 'has_key', Load(), lineno=77, col_offset=11), [Str('----', lineno=77, col_offset=30)], [], None, None, lineno=77, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=78, col_offset=19), Index(Str('----', lineno=78, col_offset=30)), Load(), lineno=78, col_offset=19), lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('unmount', arguments([Name('self', Param(), lineno=80, col_offset=16), Name('_object', Param(), lineno=80, col_offset=22), Name('_attributes', Param(), lineno=80, col_offset=31)], None, '_arguments', [Dict([], [], lineno=80, col_offset=43)]), [Expr(Str('unmount: Unmount and eject (if necessary) a volume\n        Required argument: a reference to disk to be unmounted (and ejected)\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=84, col_offset=-1), lineno=84, col_offset=-1), Assign([Name('_code', Store(), lineno=85, col_offset=8)], Str('ddsk', lineno=85, col_offset=16), lineno=85, col_offset=8), Assign([Name('_subcode', Store(), lineno=86, col_offset=8)], Str('Umnt', lineno=86, col_offset=19), lineno=86, col_offset=8), If(Name('_arguments', Load(), lineno=88, col_offset=11), [Raise(Name('TypeError', Load(), lineno=88, col_offset=29), Str('No optional args expected', lineno=88, col_offset=40), None, lineno=88, col_offset=23)], [], lineno=88, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=89, col_offset=8), Index(Str('----', lineno=89, col_offset=19)), Store(), lineno=89, col_offset=8)], Name('_object', Load(), lineno=89, col_offset=29), lineno=89, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=92, col_offset=8), Name('_arguments', Store(), lineno=92, col_offset=16), Name('_attributes', Store(), lineno=92, col_offset=28)], Store(), lineno=92, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=92, col_offset=42), 'send', Load(), lineno=92, col_offset=42), [Name('_code', Load(), lineno=92, col_offset=52), Name('_subcode', Load(), lineno=92, col_offset=59), Name('_arguments', Load(), lineno=93, col_offset=24), Name('_attributes', Load(), lineno=93, col_offset=36)], [], None, None, lineno=92, col_offset=42), lineno=92, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=94, col_offset=11), 'has_key', Load(), lineno=94, col_offset=11), [Str('errn', lineno=94, col_offset=30)], [], None, None, lineno=94, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=95, col_offset=18), 'Error', Load(), lineno=95, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=95, col_offset=33), 'decodeerror', Load(), lineno=95, col_offset=33), [Name('_arguments', Load(), lineno=95, col_offset=53)], [], None, None, lineno=95, col_offset=33), None, lineno=95, col_offset=12)], [], lineno=94, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=97, col_offset=11), 'has_key', Load(), lineno=97, col_offset=11), [Str('----', lineno=97, col_offset=30)], [], None, None, lineno=97, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=98, col_offset=19), Index(Str('----', lineno=98, col_offset=30)), Load(), lineno=98, col_offset=19), lineno=98, col_offset=12)], [], lineno=97, col_offset=8)], [], lineno=80, col_offset=4), Assign([Name('_argmap_create', Store(), lineno=100, col_offset=4)], Dict([Str('saving_as', lineno=101, col_offset=12), Str('logical_blocks', lineno=102, col_offset=12), Str('zeroing', lineno=103, col_offset=12), Str('leave_image_mounted', lineno=104, col_offset=12), Str('filesystem', lineno=105, col_offset=12)], [Str('SvAs', lineno=101, col_offset=26), Str('Blks', lineno=102, col_offset=31), Str('Zero', lineno=103, col_offset=24), Str('Moun', lineno=104, col_offset=36), Str('Fsys', lineno=105, col_offset=27)], lineno=100, col_offset=21), lineno=100, col_offset=4), FunctionDef('create', arguments([Name('self', Param(), lineno=108, col_offset=15), Name('_object', Param(), lineno=108, col_offset=21), Name('_attributes', Param(), lineno=108, col_offset=30)], None, '_arguments', [Dict([], [], lineno=108, col_offset=42)]), [Expr(Str('create: Create a new Disk Copy document\n        Required argument: the name of the volume to create\n        Keyword argument saving_as: the disk image to be created\n        Keyword argument logical_blocks: the number of logical blocks\n        Keyword argument zeroing: Should all blocks on the disk be set to zero?\n        Keyword argument leave_image_mounted: Should the image be mounted after it is created?\n        Keyword argument filesystem: file system to use (Mac OS Standard/compatible, Mac OS Enhanced)\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: a reference to newly created disk image (or newly mounted disk)\n        ', lineno=118, col_offset=-1), lineno=118, col_offset=-1), Assign([Name('_code', Store(), lineno=119, col_offset=8)], Str('ddsk', lineno=119, col_offset=16), lineno=119, col_offset=8), Assign([Name('_subcode', Store(), lineno=120, col_offset=8)], Str('Crea', lineno=120, col_offset=19), lineno=120, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=122, col_offset=8), 'keysubst', Load(), lineno=122, col_offset=8), [Name('_arguments', Load(), lineno=122, col_offset=25), Attribute(Name('self', Load(), lineno=122, col_offset=37), '_argmap_create', Load(), lineno=122, col_offset=37)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=123, col_offset=8), Index(Str('----', lineno=123, col_offset=19)), Store(), lineno=123, col_offset=8)], Name('_object', Load(), lineno=123, col_offset=29), lineno=123, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=125, col_offset=8), 'enumsubst', Load(), lineno=125, col_offset=8), [Name('_arguments', Load(), lineno=125, col_offset=26), Str('SvAs', lineno=125, col_offset=38), Name('_Enum_fss_', Load(), lineno=125, col_offset=46)], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=126, col_offset=8), 'enumsubst', Load(), lineno=126, col_offset=8), [Name('_arguments', Load(), lineno=126, col_offset=26), Str('Blks', lineno=126, col_offset=38), Name('_Enum_long', Load(), lineno=126, col_offset=46)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=127, col_offset=8), 'enumsubst', Load(), lineno=127, col_offset=8), [Name('_arguments', Load(), lineno=127, col_offset=26), Str('Zero', lineno=127, col_offset=38), Name('_Enum_bool', Load(), lineno=127, col_offset=46)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=128, col_offset=8), 'enumsubst', Load(), lineno=128, col_offset=8), [Name('_arguments', Load(), lineno=128, col_offset=26), Str('Moun', lineno=128, col_offset=38), Name('_Enum_bool', Load(), lineno=128, col_offset=46)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=129, col_offset=8), 'enumsubst', Load(), lineno=129, col_offset=8), [Name('_arguments', Load(), lineno=129, col_offset=26), Str('Fsys', lineno=129, col_offset=38), Name('_Enum_Fsys', Load(), lineno=129, col_offset=46)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=131, col_offset=8), Name('_arguments', Store(), lineno=131, col_offset=16), Name('_attributes', Store(), lineno=131, col_offset=28)], Store(), lineno=131, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=131, col_offset=42), 'send', Load(), lineno=131, col_offset=42), [Name('_code', Load(), lineno=131, col_offset=52), Name('_subcode', Load(), lineno=131, col_offset=59), Name('_arguments', Load(), lineno=132, col_offset=24), Name('_attributes', Load(), lineno=132, col_offset=36)], [], None, None, lineno=131, col_offset=42), lineno=131, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=133, col_offset=11), 'has_key', Load(), lineno=133, col_offset=11), [Str('errn', lineno=133, col_offset=30)], [], None, None, lineno=133, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=134, col_offset=18), 'Error', Load(), lineno=134, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=134, col_offset=33), 'decodeerror', Load(), lineno=134, col_offset=33), [Name('_arguments', Load(), lineno=134, col_offset=53)], [], None, None, lineno=134, col_offset=33), None, lineno=134, col_offset=12)], [], lineno=133, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=136, col_offset=11), 'has_key', Load(), lineno=136, col_offset=11), [Str('----', lineno=136, col_offset=30)], [], None, None, lineno=136, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=137, col_offset=19), Index(Str('----', lineno=137, col_offset=30)), Load(), lineno=137, col_offset=19), lineno=137, col_offset=12)], [], lineno=136, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('verify_checksum', arguments([Name('self', Param(), lineno=139, col_offset=24), Name('_object', Param(), lineno=139, col_offset=30), Name('_attributes', Param(), lineno=139, col_offset=39)], None, '_arguments', [Dict([], [], lineno=139, col_offset=51)]), [Expr(Str('verify checksum: Verify the checksum of a Disk Copy 4.2 or a Disk Copy 6.0 read-only document\n        Required argument: the disk image to be verified\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: the result of the checksum verification\n        ', lineno=144, col_offset=-1), lineno=144, col_offset=-1), Assign([Name('_code', Store(), lineno=145, col_offset=8)], Str('ddsk', lineno=145, col_offset=16), lineno=145, col_offset=8), Assign([Name('_subcode', Store(), lineno=146, col_offset=8)], Str('Vcrc', lineno=146, col_offset=19), lineno=146, col_offset=8), If(Name('_arguments', Load(), lineno=148, col_offset=11), [Raise(Name('TypeError', Load(), lineno=148, col_offset=29), Str('No optional args expected', lineno=148, col_offset=40), None, lineno=148, col_offset=23)], [], lineno=148, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=149, col_offset=8), Index(Str('----', lineno=149, col_offset=19)), Store(), lineno=149, col_offset=8)], Name('_object', Load(), lineno=149, col_offset=29), lineno=149, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=152, col_offset=8), Name('_arguments', Store(), lineno=152, col_offset=16), Name('_attributes', Store(), lineno=152, col_offset=28)], Store(), lineno=152, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=152, col_offset=42), 'send', Load(), lineno=152, col_offset=42), [Name('_code', Load(), lineno=152, col_offset=52), Name('_subcode', Load(), lineno=152, col_offset=59), Name('_arguments', Load(), lineno=153, col_offset=24), Name('_attributes', Load(), lineno=153, col_offset=36)], [], None, None, lineno=152, col_offset=42), lineno=152, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=154, col_offset=11), 'has_key', Load(), lineno=154, col_offset=11), [Str('errn', lineno=154, col_offset=30)], [], None, None, lineno=154, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=155, col_offset=18), 'Error', Load(), lineno=155, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=155, col_offset=33), 'decodeerror', Load(), lineno=155, col_offset=33), [Name('_arguments', Load(), lineno=155, col_offset=53)], [], None, None, lineno=155, col_offset=33), None, lineno=155, col_offset=12)], [], lineno=154, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=157, col_offset=11), 'has_key', Load(), lineno=157, col_offset=11), [Str('----', lineno=157, col_offset=30)], [], None, None, lineno=157, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=158, col_offset=19), Index(Str('----', lineno=158, col_offset=30)), Load(), lineno=158, col_offset=19), lineno=158, col_offset=12)], [], lineno=157, col_offset=8)], [], lineno=139, col_offset=4), FunctionDef('verify_signature', arguments([Name('self', Param(), lineno=160, col_offset=25), Name('_object', Param(), lineno=160, col_offset=31), Name('_attributes', Param(), lineno=160, col_offset=40)], None, '_arguments', [Dict([], [], lineno=160, col_offset=52)]), [Expr(Str('verify signature: Verify the DigiSign\x8e signature for a Disk Copy document\n        Required argument: the disk image to be verified\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Is the DigiSign\x8e signature valid?\n        ', lineno=165, col_offset=-1), lineno=165, col_offset=-1), Assign([Name('_code', Store(), lineno=166, col_offset=8)], Str('ddsk', lineno=166, col_offset=16), lineno=166, col_offset=8), Assign([Name('_subcode', Store(), lineno=167, col_offset=8)], Str('Vsig', lineno=167, col_offset=19), lineno=167, col_offset=8), If(Name('_arguments', Load(), lineno=169, col_offset=11), [Raise(Name('TypeError', Load(), lineno=169, col_offset=29), Str('No optional args expected', lineno=169, col_offset=40), None, lineno=169, col_offset=23)], [], lineno=169, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=170, col_offset=8), Index(Str('----', lineno=170, col_offset=19)), Store(), lineno=170, col_offset=8)], Name('_object', Load(), lineno=170, col_offset=29), lineno=170, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=173, col_offset=8), Name('_arguments', Store(), lineno=173, col_offset=16), Name('_attributes', Store(), lineno=173, col_offset=28)], Store(), lineno=173, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=173, col_offset=42), 'send', Load(), lineno=173, col_offset=42), [Name('_code', Load(), lineno=173, col_offset=52), Name('_subcode', Load(), lineno=173, col_offset=59), Name('_arguments', Load(), lineno=174, col_offset=24), Name('_attributes', Load(), lineno=174, col_offset=36)], [], None, None, lineno=173, col_offset=42), lineno=173, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=175, col_offset=11), 'has_key', Load(), lineno=175, col_offset=11), [Str('errn', lineno=175, col_offset=30)], [], None, None, lineno=175, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=176, col_offset=18), 'Error', Load(), lineno=176, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=176, col_offset=33), 'decodeerror', Load(), lineno=176, col_offset=33), [Name('_arguments', Load(), lineno=176, col_offset=53)], [], None, None, lineno=176, col_offset=33), None, lineno=176, col_offset=12)], [], lineno=175, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=178, col_offset=11), 'has_key', Load(), lineno=178, col_offset=11), [Str('----', lineno=178, col_offset=30)], [], None, None, lineno=178, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=179, col_offset=19), Index(Str('----', lineno=179, col_offset=30)), Load(), lineno=179, col_offset=19), lineno=179, col_offset=12)], [], lineno=178, col_offset=8)], [], lineno=160, col_offset=4), Assign([Name('_argmap_sign_image', Store(), lineno=181, col_offset=4)], Dict([Str('using_signer', lineno=182, col_offset=12)], [Str('Sinr', lineno=182, col_offset=29)], lineno=181, col_offset=25), lineno=181, col_offset=4), FunctionDef('sign_image', arguments([Name('self', Param(), lineno=185, col_offset=19), Name('_object', Param(), lineno=185, col_offset=25), Name('_attributes', Param(), lineno=185, col_offset=34)], None, '_arguments', [Dict([], [], lineno=185, col_offset=46)]), [Expr(Str('sign image: Add a DigiSign\x8e signature to a Disk Copy document\n        Required argument: the disk image to be signed\n        Keyword argument using_signer: a reference to signer file to use\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=190, col_offset=-1), lineno=190, col_offset=-1), Assign([Name('_code', Store(), lineno=191, col_offset=8)], Str('ddsk', lineno=191, col_offset=16), lineno=191, col_offset=8), Assign([Name('_subcode', Store(), lineno=192, col_offset=8)], Str('Asig', lineno=192, col_offset=19), lineno=192, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=194, col_offset=8), 'keysubst', Load(), lineno=194, col_offset=8), [Name('_arguments', Load(), lineno=194, col_offset=25), Attribute(Name('self', Load(), lineno=194, col_offset=37), '_argmap_sign_image', Load(), lineno=194, col_offset=37)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=195, col_offset=8), Index(Str('----', lineno=195, col_offset=19)), Store(), lineno=195, col_offset=8)], Name('_object', Load(), lineno=195, col_offset=29), lineno=195, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=197, col_offset=8), 'enumsubst', Load(), lineno=197, col_offset=8), [Name('_arguments', Load(), lineno=197, col_offset=26), Str('Sinr', lineno=197, col_offset=38), Name('_Enum_alis', Load(), lineno=197, col_offset=46)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=199, col_offset=8), Name('_arguments', Store(), lineno=199, col_offset=16), Name('_attributes', Store(), lineno=199, col_offset=28)], Store(), lineno=199, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=199, col_offset=42), 'send', Load(), lineno=199, col_offset=42), [Name('_code', Load(), lineno=199, col_offset=52), Name('_subcode', Load(), lineno=199, col_offset=59), Name('_arguments', Load(), lineno=200, col_offset=24), Name('_attributes', Load(), lineno=200, col_offset=36)], [], None, None, lineno=199, col_offset=42), lineno=199, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=201, col_offset=11), 'has_key', Load(), lineno=201, col_offset=11), [Str('errn', lineno=201, col_offset=30)], [], None, None, lineno=201, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=202, col_offset=18), 'Error', Load(), lineno=202, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=202, col_offset=33), 'decodeerror', Load(), lineno=202, col_offset=33), [Name('_arguments', Load(), lineno=202, col_offset=53)], [], None, None, lineno=202, col_offset=33), None, lineno=202, col_offset=12)], [], lineno=201, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=204, col_offset=11), 'has_key', Load(), lineno=204, col_offset=11), [Str('----', lineno=204, col_offset=30)], [], None, None, lineno=204, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=205, col_offset=19), Index(Str('----', lineno=205, col_offset=30)), Load(), lineno=205, col_offset=19), lineno=205, col_offset=12)], [], lineno=204, col_offset=8)], [], lineno=185, col_offset=4), Assign([Name('_argmap_create_a_floppy_from', Store(), lineno=207, col_offset=4)], Dict([Str('signature_verification', lineno=208, col_offset=12), Str('erase_confirmation', lineno=209, col_offset=12), Str('make_multiple_floppies', lineno=210, col_offset=12)], [Str('VSig', lineno=208, col_offset=39), Str('Cfrm', lineno=209, col_offset=35), Str('Mult', lineno=210, col_offset=39)], lineno=207, col_offset=35), lineno=207, col_offset=4), FunctionDef('create_a_floppy_from', arguments([Name('self', Param(), lineno=213, col_offset=29), Name('_object', Param(), lineno=213, col_offset=35), Name('_attributes', Param(), lineno=213, col_offset=44)], None, '_arguments', [Dict([], [], lineno=213, col_offset=56)]), [Expr(Str('create a floppy from: create a floppy disk from a Disk Copy document\n        Required argument: the disk image to make a floppy from\n        Keyword argument signature_verification: Should the DigiSign\x8e signature be verified before creating a floppy disk?\n        Keyword argument erase_confirmation: Should the user be asked to confirm the erasure of the previous contents of floppy disks?\n        Keyword argument make_multiple_floppies: Should the user be prompted to create multiple floppy disks?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=220, col_offset=-1), lineno=220, col_offset=-1), Assign([Name('_code', Store(), lineno=221, col_offset=8)], Str('ddsk', lineno=221, col_offset=16), lineno=221, col_offset=8), Assign([Name('_subcode', Store(), lineno=222, col_offset=8)], Str('Bfpy', lineno=222, col_offset=19), lineno=222, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=224, col_offset=8), 'keysubst', Load(), lineno=224, col_offset=8), [Name('_arguments', Load(), lineno=224, col_offset=25), Attribute(Name('self', Load(), lineno=224, col_offset=37), '_argmap_create_a_floppy_from', Load(), lineno=224, col_offset=37)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=225, col_offset=8), Index(Str('----', lineno=225, col_offset=19)), Store(), lineno=225, col_offset=8)], Name('_object', Load(), lineno=225, col_offset=29), lineno=225, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=227, col_offset=8), 'enumsubst', Load(), lineno=227, col_offset=8), [Name('_arguments', Load(), lineno=227, col_offset=26), Str('VSig', lineno=227, col_offset=38), Name('_Enum_bool', Load(), lineno=227, col_offset=46)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=228, col_offset=8), 'enumsubst', Load(), lineno=228, col_offset=8), [Name('_arguments', Load(), lineno=228, col_offset=26), Str('Cfrm', lineno=228, col_offset=38), Name('_Enum_bool', Load(), lineno=228, col_offset=46)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=229, col_offset=8), 'enumsubst', Load(), lineno=229, col_offset=8), [Name('_arguments', Load(), lineno=229, col_offset=26), Str('Mult', lineno=229, col_offset=38), Name('_Enum_bool', Load(), lineno=229, col_offset=46)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=231, col_offset=8), Name('_arguments', Store(), lineno=231, col_offset=16), Name('_attributes', Store(), lineno=231, col_offset=28)], Store(), lineno=231, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=231, col_offset=42), 'send', Load(), lineno=231, col_offset=42), [Name('_code', Load(), lineno=231, col_offset=52), Name('_subcode', Load(), lineno=231, col_offset=59), Name('_arguments', Load(), lineno=232, col_offset=24), Name('_attributes', Load(), lineno=232, col_offset=36)], [], None, None, lineno=231, col_offset=42), lineno=231, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=233, col_offset=11), 'has_key', Load(), lineno=233, col_offset=11), [Str('errn', lineno=233, col_offset=30)], [], None, None, lineno=233, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=234, col_offset=18), 'Error', Load(), lineno=234, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=234, col_offset=33), 'decodeerror', Load(), lineno=234, col_offset=33), [Name('_arguments', Load(), lineno=234, col_offset=53)], [], None, None, lineno=234, col_offset=33), None, lineno=234, col_offset=12)], [], lineno=233, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=236, col_offset=11), 'has_key', Load(), lineno=236, col_offset=11), [Str('----', lineno=236, col_offset=30)], [], None, None, lineno=236, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=237, col_offset=19), Index(Str('----', lineno=237, col_offset=30)), Load(), lineno=237, col_offset=19), lineno=237, col_offset=12)], [], lineno=236, col_offset=8)], [], lineno=213, col_offset=4), Assign([Name('_argmap_check_image', Store(), lineno=239, col_offset=4)], Dict([Str('details', lineno=240, col_offset=12)], [Str('ChDe', lineno=240, col_offset=24)], lineno=239, col_offset=26), lineno=239, col_offset=4), FunctionDef('check_image', arguments([Name('self', Param(), lineno=243, col_offset=20), Name('_object', Param(), lineno=243, col_offset=26), Name('_attributes', Param(), lineno=243, col_offset=35)], None, '_arguments', [Dict([], [], lineno=243, col_offset=47)]), [Expr(Str('check image: Check the disk image\xd5s internal data structures for any inconsistencies.  Works on NDIF, Disk Copy 4.2, DART\x8e, or DiskSet images.\n        Required argument: the disk image to be verified\n        Keyword argument details: Should the disk image details be displayed?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: a record containing a boolean (true/false) value if the image passes consistency tests, and the numbers of warnings and errors\n        ', lineno=249, col_offset=-1), lineno=249, col_offset=-1), Assign([Name('_code', Store(), lineno=250, col_offset=8)], Str('ddsk', lineno=250, col_offset=16), lineno=250, col_offset=8), Assign([Name('_subcode', Store(), lineno=251, col_offset=8)], Str('Chek', lineno=251, col_offset=19), lineno=251, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=253, col_offset=8), 'keysubst', Load(), lineno=253, col_offset=8), [Name('_arguments', Load(), lineno=253, col_offset=25), Attribute(Name('self', Load(), lineno=253, col_offset=37), '_argmap_check_image', Load(), lineno=253, col_offset=37)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=254, col_offset=8), Index(Str('----', lineno=254, col_offset=19)), Store(), lineno=254, col_offset=8)], Name('_object', Load(), lineno=254, col_offset=29), lineno=254, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=256, col_offset=8), 'enumsubst', Load(), lineno=256, col_offset=8), [Name('_arguments', Load(), lineno=256, col_offset=26), Str('ChDe', lineno=256, col_offset=38), Name('_Enum_bool', Load(), lineno=256, col_offset=46)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=258, col_offset=8), Name('_arguments', Store(), lineno=258, col_offset=16), Name('_attributes', Store(), lineno=258, col_offset=28)], Store(), lineno=258, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=258, col_offset=42), 'send', Load(), lineno=258, col_offset=42), [Name('_code', Load(), lineno=258, col_offset=52), Name('_subcode', Load(), lineno=258, col_offset=59), Name('_arguments', Load(), lineno=259, col_offset=24), Name('_attributes', Load(), lineno=259, col_offset=36)], [], None, None, lineno=258, col_offset=42), lineno=258, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=260, col_offset=11), 'has_key', Load(), lineno=260, col_offset=11), [Str('errn', lineno=260, col_offset=30)], [], None, None, lineno=260, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=261, col_offset=18), 'Error', Load(), lineno=261, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=261, col_offset=33), 'decodeerror', Load(), lineno=261, col_offset=33), [Name('_arguments', Load(), lineno=261, col_offset=53)], [], None, None, lineno=261, col_offset=33), None, lineno=261, col_offset=12)], [], lineno=260, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=263, col_offset=11), 'has_key', Load(), lineno=263, col_offset=11), [Str('----', lineno=263, col_offset=30)], [], None, None, lineno=263, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=264, col_offset=19), Index(Str('----', lineno=264, col_offset=30)), Load(), lineno=264, col_offset=19), lineno=264, col_offset=12)], [], lineno=263, col_offset=8)], [], lineno=243, col_offset=4), Assign([Name('_argmap_segment_image', Store(), lineno=266, col_offset=4)], Dict([Str('segment_count', lineno=267, col_offset=12), Str('segment_size', lineno=268, col_offset=12), Str('segment_name', lineno=269, col_offset=12), Str('image_ID', lineno=270, col_offset=12)], [Str('SGCT', lineno=267, col_offset=30), Str('SGSZ', lineno=268, col_offset=29), Str('SGNM', lineno=269, col_offset=29), Str('SGID', lineno=270, col_offset=25)], lineno=266, col_offset=28), lineno=266, col_offset=4), FunctionDef('segment_image', arguments([Name('self', Param(), lineno=273, col_offset=22), Name('_object', Param(), lineno=273, col_offset=28), Name('_attributes', Param(), lineno=273, col_offset=37)], None, '_arguments', [Dict([], [], lineno=273, col_offset=49)]), [Expr(Str('segment image: Segment a NDIF R/W or R/O image into smaller pieces\n        Required argument: the disk image to be segmented\n        Keyword argument segment_count: the number of image segments to create\n        Keyword argument segment_size: the size of image segments (in blocks) to create\n        Keyword argument segment_name: the root name for each image segment file\n        Keyword argument image_ID: string used to generate a unique image ID to group the segments\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: a list of references to the image segments created\n        ', lineno=282, col_offset=-1), lineno=282, col_offset=-1), Assign([Name('_code', Store(), lineno=283, col_offset=8)], Str('ddsk', lineno=283, col_offset=16), lineno=283, col_offset=8), Assign([Name('_subcode', Store(), lineno=284, col_offset=8)], Str('SGMT', lineno=284, col_offset=19), lineno=284, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=286, col_offset=8), 'keysubst', Load(), lineno=286, col_offset=8), [Name('_arguments', Load(), lineno=286, col_offset=25), Attribute(Name('self', Load(), lineno=286, col_offset=37), '_argmap_segment_image', Load(), lineno=286, col_offset=37)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=287, col_offset=8), Index(Str('----', lineno=287, col_offset=19)), Store(), lineno=287, col_offset=8)], Name('_object', Load(), lineno=287, col_offset=29), lineno=287, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=290, col_offset=8), Name('_arguments', Store(), lineno=290, col_offset=16), Name('_attributes', Store(), lineno=290, col_offset=28)], Store(), lineno=290, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=290, col_offset=42), 'send', Load(), lineno=290, col_offset=42), [Name('_code', Load(), lineno=290, col_offset=52), Name('_subcode', Load(), lineno=290, col_offset=59), Name('_arguments', Load(), lineno=291, col_offset=24), Name('_attributes', Load(), lineno=291, col_offset=36)], [], None, None, lineno=290, col_offset=42), lineno=290, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=292, col_offset=11), 'has_key', Load(), lineno=292, col_offset=11), [Str('errn', lineno=292, col_offset=30)], [], None, None, lineno=292, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=293, col_offset=18), 'Error', Load(), lineno=293, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=293, col_offset=33), 'decodeerror', Load(), lineno=293, col_offset=33), [Name('_arguments', Load(), lineno=293, col_offset=53)], [], None, None, lineno=293, col_offset=33), None, lineno=293, col_offset=12)], [], lineno=292, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=295, col_offset=11), 'has_key', Load(), lineno=295, col_offset=11), [Str('----', lineno=295, col_offset=30)], [], None, None, lineno=295, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=296, col_offset=19), Index(Str('----', lineno=296, col_offset=30)), Load(), lineno=296, col_offset=19), lineno=296, col_offset=12)], [], lineno=295, col_offset=8)], [], lineno=273, col_offset=4), Assign([Name('_argmap_create_SMI', Store(), lineno=298, col_offset=4)], Dict([Str('source_images', lineno=299, col_offset=12), Str('launching_application', lineno=300, col_offset=12), Str('launching_document', lineno=301, col_offset=12), Str('version_string', lineno=302, col_offset=12), Str('checksum_verification', lineno=303, col_offset=12), Str('signature_verification', lineno=304, col_offset=12), Str('image_signing', lineno=305, col_offset=12)], [Str('SMI1', lineno=299, col_offset=30), Str('SMI2', lineno=300, col_offset=38), Str('SMI3', lineno=301, col_offset=35), Str('SMI4', lineno=302, col_offset=31), Str('VChk', lineno=303, col_offset=38), Str('VSig', lineno=304, col_offset=39), Str('SImg', lineno=305, col_offset=30)], lineno=298, col_offset=25), lineno=298, col_offset=4), FunctionDef('create_SMI', arguments([Name('self', Param(), lineno=308, col_offset=19), Name('_object', Param(), lineno=308, col_offset=25), Name('_attributes', Param(), lineno=308, col_offset=34)], None, '_arguments', [Dict([], [], lineno=308, col_offset=46)]), [Expr(Str("create SMI: Creates a self-mounting image (SMI) from a list of NDIF disk images\n        Required argument: the self-mounting image to create\n        Keyword argument source_images: a list of references to sources images\n        Keyword argument launching_application: the path to an application to launch\n        Keyword argument launching_document: the path to a document to open\n        Keyword argument version_string: sets the 'vers' 1 resource of the self-mounting image\n        Keyword argument checksum_verification: Should the checksum of the source images be verified before creating the SMI?\n        Keyword argument signature_verification: Should the DigiSign\x8e signature of the source images be verified before creating the SMI?\n        Keyword argument image_signing: Should the SMI be given a digital signature when it is created?\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: a reference to the self-mounting image created\n        ", lineno=320, col_offset=-1), lineno=320, col_offset=-1), Assign([Name('_code', Store(), lineno=321, col_offset=8)], Str('ddsk', lineno=321, col_offset=16), lineno=321, col_offset=8), Assign([Name('_subcode', Store(), lineno=322, col_offset=8)], Str('MSMI', lineno=322, col_offset=19), lineno=322, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=324, col_offset=8), 'keysubst', Load(), lineno=324, col_offset=8), [Name('_arguments', Load(), lineno=324, col_offset=25), Attribute(Name('self', Load(), lineno=324, col_offset=37), '_argmap_create_SMI', Load(), lineno=324, col_offset=37)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=325, col_offset=8), Index(Str('----', lineno=325, col_offset=19)), Store(), lineno=325, col_offset=8)], Name('_object', Load(), lineno=325, col_offset=29), lineno=325, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=327, col_offset=8), 'enumsubst', Load(), lineno=327, col_offset=8), [Name('_arguments', Load(), lineno=327, col_offset=26), Str('VChk', lineno=327, col_offset=38), Name('_Enum_bool', Load(), lineno=327, col_offset=46)], [], None, None, lineno=327, col_offset=8), lineno=327, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=328, col_offset=8), 'enumsubst', Load(), lineno=328, col_offset=8), [Name('_arguments', Load(), lineno=328, col_offset=26), Str('VSig', lineno=328, col_offset=38), Name('_Enum_bool', Load(), lineno=328, col_offset=46)], [], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=329, col_offset=8), 'enumsubst', Load(), lineno=329, col_offset=8), [Name('_arguments', Load(), lineno=329, col_offset=26), Str('SImg', lineno=329, col_offset=38), Name('_Enum_bool', Load(), lineno=329, col_offset=46)], [], None, None, lineno=329, col_offset=8), lineno=329, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=331, col_offset=8), Name('_arguments', Store(), lineno=331, col_offset=16), Name('_attributes', Store(), lineno=331, col_offset=28)], Store(), lineno=331, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=331, col_offset=42), 'send', Load(), lineno=331, col_offset=42), [Name('_code', Load(), lineno=331, col_offset=52), Name('_subcode', Load(), lineno=331, col_offset=59), Name('_arguments', Load(), lineno=332, col_offset=24), Name('_attributes', Load(), lineno=332, col_offset=36)], [], None, None, lineno=331, col_offset=42), lineno=331, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=333, col_offset=11), 'has_key', Load(), lineno=333, col_offset=11), [Str('errn', lineno=333, col_offset=30)], [], None, None, lineno=333, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=334, col_offset=18), 'Error', Load(), lineno=334, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=334, col_offset=33), 'decodeerror', Load(), lineno=334, col_offset=33), [Name('_arguments', Load(), lineno=334, col_offset=53)], [], None, None, lineno=334, col_offset=33), None, lineno=334, col_offset=12)], [], lineno=333, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=336, col_offset=11), 'has_key', Load(), lineno=336, col_offset=11), [Str('----', lineno=336, col_offset=30)], [], None, None, lineno=336, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=337, col_offset=19), Index(Str('----', lineno=337, col_offset=30)), Load(), lineno=337, col_offset=19), lineno=337, col_offset=12)], [], lineno=336, col_offset=8)], [], lineno=308, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('Verify_Checksum_reply_record', [Attribute(Name('aetools', Load(), lineno=340, col_offset=35), 'ComponentItem', Load(), lineno=340, col_offset=35)], [Expr(Str('Verify Checksum reply record -  ', lineno=341, col_offset=4), lineno=341, col_offset=4), Assign([Name('want', Store(), lineno=342, col_offset=4)], Str('Rcrc', lineno=342, col_offset=11), lineno=342, col_offset=4)], [], lineno=340, col_offset=0), ClassDef('validity', [Attribute(Name('aetools', Load(), lineno=343, col_offset=15), 'NProperty', Load(), lineno=343, col_offset=15)], [Expr(Str('validity - true if checksum is valid ', lineno=344, col_offset=4), lineno=344, col_offset=4), Assign([Name('which', Store(), lineno=345, col_offset=4)], Str('Vlid', lineno=345, col_offset=12), lineno=345, col_offset=4), Assign([Name('want', Store(), lineno=346, col_offset=4)], Str('bool', lineno=346, col_offset=11), lineno=346, col_offset=4)], [], lineno=343, col_offset=0), ClassDef('expected_checksum', [Attribute(Name('aetools', Load(), lineno=347, col_offset=24), 'NProperty', Load(), lineno=347, col_offset=24)], [Expr(Str('expected checksum - checksum value stored in the image header (in hexadecimal) ', lineno=348, col_offset=4), lineno=348, col_offset=4), Assign([Name('which', Store(), lineno=349, col_offset=4)], Str('crcE', lineno=349, col_offset=12), lineno=349, col_offset=4), Assign([Name('want', Store(), lineno=350, col_offset=4)], Str('TEXT', lineno=350, col_offset=11), lineno=350, col_offset=4)], [], lineno=347, col_offset=0), ClassDef('calculated_checksum', [Attribute(Name('aetools', Load(), lineno=351, col_offset=26), 'NProperty', Load(), lineno=351, col_offset=26)], [Expr(Str('calculated checksum - checksum value actually calculated (in hexadecimal) ', lineno=352, col_offset=4), lineno=352, col_offset=4), Assign([Name('which', Store(), lineno=353, col_offset=4)], Str('crcA', lineno=353, col_offset=12), lineno=353, col_offset=4), Assign([Name('want', Store(), lineno=354, col_offset=4)], Str('TEXT', lineno=354, col_offset=11), lineno=354, col_offset=4)], [], lineno=351, col_offset=0), ClassDef('Check_Image_reply_record', [Attribute(Name('aetools', Load(), lineno=356, col_offset=31), 'ComponentItem', Load(), lineno=356, col_offset=31)], [Expr(Str('Check Image reply record -  ', lineno=357, col_offset=4), lineno=357, col_offset=4), Assign([Name('want', Store(), lineno=358, col_offset=4)], Str('Rchk', lineno=358, col_offset=11), lineno=358, col_offset=4)], [], lineno=356, col_offset=0), ClassDef('consistency', [Attribute(Name('aetools', Load(), lineno=359, col_offset=18), 'NProperty', Load(), lineno=359, col_offset=18)], [Expr(Str('consistency - Does the image pass consistency checks? ', lineno=360, col_offset=4), lineno=360, col_offset=4), Assign([Name('which', Store(), lineno=361, col_offset=4)], Str('Rch1', lineno=361, col_offset=12), lineno=361, col_offset=4), Assign([Name('want', Store(), lineno=362, col_offset=4)], Str('bool', lineno=362, col_offset=11), lineno=362, col_offset=4)], [], lineno=359, col_offset=0), ClassDef('error_count', [Attribute(Name('aetools', Load(), lineno=363, col_offset=18), 'NProperty', Load(), lineno=363, col_offset=18)], [Expr(Str('error count - the number of errors recorded ', lineno=364, col_offset=4), lineno=364, col_offset=4), Assign([Name('which', Store(), lineno=365, col_offset=4)], Str('Rch2', lineno=365, col_offset=12), lineno=365, col_offset=4), Assign([Name('want', Store(), lineno=366, col_offset=4)], Str('long', lineno=366, col_offset=11), lineno=366, col_offset=4)], [], lineno=363, col_offset=0), ClassDef('warning_count', [Attribute(Name('aetools', Load(), lineno=367, col_offset=20), 'NProperty', Load(), lineno=367, col_offset=20)], [Expr(Str('warning count - the number of warnings recorded ', lineno=368, col_offset=4), lineno=368, col_offset=4), Assign([Name('which', Store(), lineno=369, col_offset=4)], Str('Rch3', lineno=369, col_offset=12), lineno=369, col_offset=4), Assign([Name('want', Store(), lineno=370, col_offset=4)], Str('long', lineno=370, col_offset=11), lineno=370, col_offset=4)], [], lineno=367, col_offset=0), Assign([Attribute(Name('Verify_Checksum_reply_record', Load(), lineno=371, col_offset=0), '_propdict', Store(), lineno=371, col_offset=0)], Dict([Str('validity', lineno=372, col_offset=8), Str('expected_checksum', lineno=373, col_offset=8), Str('calculated_checksum', lineno=374, col_offset=8)], [Name('validity', Load(), lineno=372, col_offset=21), Name('expected_checksum', Load(), lineno=373, col_offset=30), Name('calculated_checksum', Load(), lineno=374, col_offset=32)], lineno=371, col_offset=41), lineno=371, col_offset=0), Assign([Attribute(Name('Verify_Checksum_reply_record', Load(), lineno=376, col_offset=0), '_elemdict', Store(), lineno=376, col_offset=0)], Dict([], [], lineno=376, col_offset=41), lineno=376, col_offset=0), Assign([Attribute(Name('Check_Image_reply_record', Load(), lineno=378, col_offset=0), '_propdict', Store(), lineno=378, col_offset=0)], Dict([Str('consistency', lineno=379, col_offset=8), Str('error_count', lineno=380, col_offset=8), Str('warning_count', lineno=381, col_offset=8)], [Name('consistency', Load(), lineno=379, col_offset=24), Name('error_count', Load(), lineno=380, col_offset=24), Name('warning_count', Load(), lineno=381, col_offset=26)], lineno=378, col_offset=37), lineno=378, col_offset=0), Assign([Attribute(Name('Check_Image_reply_record', Load(), lineno=383, col_offset=0), '_elemdict', Store(), lineno=383, col_offset=0)], Dict([], [], lineno=383, col_offset=37), lineno=383, col_offset=0), Assign([Name('_Enum_Acss', Store(), lineno=385, col_offset=0)], Dict([Str('read_and_write', lineno=386, col_offset=8), Str('read_only', lineno=387, col_offset=8), Str('any', lineno=388, col_offset=8)], [Str('RdWr', lineno=386, col_offset=27), Str('Rdxx', lineno=387, col_offset=22), Str('Anyx', lineno=388, col_offset=16)], lineno=385, col_offset=13), lineno=385, col_offset=0), Assign([Name('_Enum_Fsys', Store(), lineno=391, col_offset=0)], Dict([Str('Mac_OS_Standard', lineno=392, col_offset=8), Str('compatible_Mac_OS_Extended', lineno=393, col_offset=8)], [Str('Fhfs', lineno=392, col_offset=28), Str('Fhf+', lineno=393, col_offset=39)], lineno=391, col_offset=13), lineno=391, col_offset=0), Assign([Name('_Enum_alis', Store(), lineno=396, col_offset=0)], Name('None', Load(), lineno=396, col_offset=13), lineno=396, col_offset=0), Assign([Name('_Enum_fss_', Store(), lineno=397, col_offset=0)], Name('None', Load(), lineno=397, col_offset=13), lineno=397, col_offset=0), Assign([Name('_Enum_long', Store(), lineno=398, col_offset=0)], Name('None', Load(), lineno=398, col_offset=13), lineno=398, col_offset=0), Assign([Name('_Enum_bool', Store(), lineno=399, col_offset=0)], Name('None', Load(), lineno=399, col_offset=13), lineno=399, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=404, col_offset=0)], Dict([Str('Rchk', lineno=405, col_offset=8), Str('Rcrc', lineno=406, col_offset=8)], [Name('Check_Image_reply_record', Load(), lineno=405, col_offset=17), Name('Verify_Checksum_reply_record', Load(), lineno=406, col_offset=17)], lineno=404, col_offset=21), lineno=404, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=409, col_offset=0)], Dict([Str('crcE', lineno=410, col_offset=8), Str('Rch2', lineno=411, col_offset=8), Str('crcA', lineno=412, col_offset=8), Str('Rch3', lineno=413, col_offset=8), Str('Vlid', lineno=414, col_offset=8), Str('Rch1', lineno=415, col_offset=8)], [Name('expected_checksum', Load(), lineno=410, col_offset=17), Name('error_count', Load(), lineno=411, col_offset=17), Name('calculated_checksum', Load(), lineno=412, col_offset=17), Name('warning_count', Load(), lineno=413, col_offset=17), Name('validity', Load(), lineno=414, col_offset=17), Name('consistency', Load(), lineno=415, col_offset=17)], lineno=409, col_offset=20), lineno=409, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=418, col_offset=0)], Dict([], [], lineno=418, col_offset=20), lineno=418, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=421, col_offset=0)], Dict([Str('Acss', lineno=422, col_offset=8), Str('Fsys', lineno=423, col_offset=8)], [Name('_Enum_Acss', Load(), lineno=422, col_offset=17), Name('_Enum_Fsys', Load(), lineno=423, col_offset=17)], lineno=421, col_offset=20), lineno=421, col_offset=0)])
