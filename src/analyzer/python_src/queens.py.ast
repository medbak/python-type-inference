Module([Expr(Str('N queens problem.\n\nThe (well-known) problem is due to Niklaus Wirth.\n\nThis solution is inspired by Dijkstra (Structured Programming).  It is\na classic recursive backtracking approach.\n\n', lineno=10, col_offset=-1), lineno=10, col_offset=-1), Assign([Name('N', Store(), lineno=12, col_offset=0)], Num(8, lineno=12, col_offset=4), lineno=12, col_offset=0), ClassDef('Queens', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=16, col_offset=17), Name('n', Param(), lineno=16, col_offset=23)], None, None, [Name('N', Load(), lineno=16, col_offset=25)]), [Assign([Attribute(Name('self', Load(), lineno=17, col_offset=8), 'n', Store(), lineno=17, col_offset=8)], Name('n', Load(), lineno=17, col_offset=17), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'reset', Load(), lineno=18, col_offset=8), [], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=20, col_offset=14)], None, None, []), [Assign([Name('n', Store(), lineno=21, col_offset=8)], Attribute(Name('self', Load(), lineno=21, col_offset=12), 'n', Load(), lineno=21, col_offset=12), lineno=21, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=22, col_offset=8), 'y', Store(), lineno=22, col_offset=8)], BinOp(List([Name('None', Load(), lineno=22, col_offset=18)], Load(), lineno=22, col_offset=17), Mult(), Name('n', Load(), lineno=22, col_offset=26), lineno=22, col_offset=17), lineno=22, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=23, col_offset=8), 'row', Store(), lineno=23, col_offset=8)], BinOp(List([Num(0, lineno=23, col_offset=20)], Load(), lineno=23, col_offset=19), Mult(), Name('n', Load(), lineno=23, col_offset=25), lineno=23, col_offset=19), lineno=23, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=24, col_offset=8), 'up', Store(), lineno=24, col_offset=8)], BinOp(List([Num(0, lineno=24, col_offset=19)], Load(), lineno=24, col_offset=18), Mult(), BinOp(BinOp(Num(2, lineno=24, col_offset=25), Mult(), Name('n', Load(), lineno=24, col_offset=27), lineno=24, col_offset=25), Sub(), Num(1, lineno=24, col_offset=29), lineno=24, col_offset=25), lineno=24, col_offset=18), lineno=24, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=25, col_offset=8), 'down', Store(), lineno=25, col_offset=8)], BinOp(List([Num(0, lineno=25, col_offset=21)], Load(), lineno=25, col_offset=20), Mult(), BinOp(BinOp(Num(2, lineno=25, col_offset=27), Mult(), Name('n', Load(), lineno=25, col_offset=29), lineno=25, col_offset=27), Sub(), Num(1, lineno=25, col_offset=31), lineno=25, col_offset=27), lineno=25, col_offset=20), lineno=25, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'nfound', Store(), lineno=26, col_offset=8)], Num(0, lineno=26, col_offset=22), lineno=26, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('solve', arguments([Name('self', Param(), lineno=28, col_offset=14), Name('x', Param(), lineno=28, col_offset=20)], None, None, [Num(0, lineno=28, col_offset=22)]), [For(Name('y', Store(), lineno=29, col_offset=12), Call(Name('range', Load(), lineno=29, col_offset=17), [Attribute(Name('self', Load(), lineno=29, col_offset=23), 'n', Load(), lineno=29, col_offset=23)], [], None, None, lineno=29, col_offset=17), [If(Call(Attribute(Name('self', Load(), lineno=30, col_offset=15), 'safe', Load(), lineno=30, col_offset=15), [Name('x', Load(), lineno=30, col_offset=25), Name('y', Load(), lineno=30, col_offset=28)], [], None, None, lineno=30, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=16), 'place', Load(), lineno=31, col_offset=16), [Name('x', Load(), lineno=31, col_offset=27), Name('y', Load(), lineno=31, col_offset=30)], [], None, None, lineno=31, col_offset=16), lineno=31, col_offset=16), If(Compare(BinOp(Name('x', Load(), lineno=32, col_offset=19), Add(), Num(1, lineno=32, col_offset=21), lineno=32, col_offset=19), [Eq()], [Attribute(Name('self', Load(), lineno=32, col_offset=26), 'n', Load(), lineno=32, col_offset=26)], lineno=32, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=20), 'display', Load(), lineno=33, col_offset=20), [], [], None, None, lineno=33, col_offset=20), lineno=33, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=20), 'solve', Load(), lineno=35, col_offset=20), [BinOp(Name('x', Load(), lineno=35, col_offset=31), Add(), Num(1, lineno=35, col_offset=33), lineno=35, col_offset=31)], [], None, None, lineno=35, col_offset=20), lineno=35, col_offset=20)], lineno=32, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=16), 'remove', Load(), lineno=36, col_offset=16), [Name('x', Load(), lineno=36, col_offset=28), Name('y', Load(), lineno=36, col_offset=31)], [], None, None, lineno=36, col_offset=16), lineno=36, col_offset=16)], [], lineno=30, col_offset=12)], [], lineno=29, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('safe', arguments([Name('self', Param(), lineno=38, col_offset=13), Name('x', Param(), lineno=38, col_offset=19), Name('y', Param(), lineno=38, col_offset=22)], None, None, []), [Return(BoolOp(And(), [UnaryOp(Not(), Subscript(Attribute(Name('self', Load(), lineno=39, col_offset=19), 'row', Load(), lineno=39, col_offset=19), Index(Name('y', Load(), lineno=39, col_offset=28)), Load(), lineno=39, col_offset=19), lineno=39, col_offset=15), UnaryOp(Not(), Subscript(Attribute(Name('self', Load(), lineno=39, col_offset=39), 'up', Load(), lineno=39, col_offset=39), Index(BinOp(Name('x', Load(), lineno=39, col_offset=47), Sub(), Name('y', Load(), lineno=39, col_offset=49), lineno=39, col_offset=47)), Load(), lineno=39, col_offset=39), lineno=39, col_offset=35), UnaryOp(Not(), Subscript(Attribute(Name('self', Load(), lineno=39, col_offset=60), 'down', Load(), lineno=39, col_offset=60), Index(BinOp(Name('x', Load(), lineno=39, col_offset=70), Add(), Name('y', Load(), lineno=39, col_offset=72), lineno=39, col_offset=70)), Load(), lineno=39, col_offset=60), lineno=39, col_offset=56)], lineno=39, col_offset=15), lineno=39, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('place', arguments([Name('self', Param(), lineno=41, col_offset=14), Name('x', Param(), lineno=41, col_offset=20), Name('y', Param(), lineno=41, col_offset=23)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'y', Load(), lineno=42, col_offset=8), Index(Name('x', Load(), lineno=42, col_offset=15)), Store(), lineno=42, col_offset=8)], Name('y', Load(), lineno=42, col_offset=20), lineno=42, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'row', Load(), lineno=43, col_offset=8), Index(Name('y', Load(), lineno=43, col_offset=17)), Store(), lineno=43, col_offset=8)], Num(1, lineno=43, col_offset=22), lineno=43, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'up', Load(), lineno=44, col_offset=8), Index(BinOp(Name('x', Load(), lineno=44, col_offset=16), Sub(), Name('y', Load(), lineno=44, col_offset=18), lineno=44, col_offset=16)), Store(), lineno=44, col_offset=8)], Num(1, lineno=44, col_offset=23), lineno=44, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'down', Load(), lineno=45, col_offset=8), Index(BinOp(Name('x', Load(), lineno=45, col_offset=18), Add(), Name('y', Load(), lineno=45, col_offset=20), lineno=45, col_offset=18)), Store(), lineno=45, col_offset=8)], Num(1, lineno=45, col_offset=25), lineno=45, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('remove', arguments([Name('self', Param(), lineno=47, col_offset=15), Name('x', Param(), lineno=47, col_offset=21), Name('y', Param(), lineno=47, col_offset=24)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'y', Load(), lineno=48, col_offset=8), Index(Name('x', Load(), lineno=48, col_offset=15)), Store(), lineno=48, col_offset=8)], Name('None', Load(), lineno=48, col_offset=20), lineno=48, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'row', Load(), lineno=49, col_offset=8), Index(Name('y', Load(), lineno=49, col_offset=17)), Store(), lineno=49, col_offset=8)], Num(0, lineno=49, col_offset=22), lineno=49, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'up', Load(), lineno=50, col_offset=8), Index(BinOp(Name('x', Load(), lineno=50, col_offset=16), Sub(), Name('y', Load(), lineno=50, col_offset=18), lineno=50, col_offset=16)), Store(), lineno=50, col_offset=8)], Num(0, lineno=50, col_offset=23), lineno=50, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'down', Load(), lineno=51, col_offset=8), Index(BinOp(Name('x', Load(), lineno=51, col_offset=18), Add(), Name('y', Load(), lineno=51, col_offset=20), lineno=51, col_offset=18)), Store(), lineno=51, col_offset=8)], Num(0, lineno=51, col_offset=25), lineno=51, col_offset=8)], [], lineno=47, col_offset=4), Assign([Name('silent', Store(), lineno=53, col_offset=4)], Num(0, lineno=53, col_offset=13), lineno=53, col_offset=4), FunctionDef('display', arguments([Name('self', Param(), lineno=55, col_offset=16)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'nfound', Store(), lineno=56, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=56, col_offset=22), 'nfound', Load(), lineno=56, col_offset=22), Add(), Num(1, lineno=56, col_offset=36), lineno=56, col_offset=22), lineno=56, col_offset=8), If(Attribute(Name('self', Load(), lineno=57, col_offset=11), 'silent', Load(), lineno=57, col_offset=11), [Return(None, lineno=58, col_offset=12)], [], lineno=57, col_offset=8), Print(None, [BinOp(BinOp(Str('+-', lineno=59, col_offset=14), Add(), BinOp(Str('--', lineno=59, col_offset=21), Mult(), Attribute(Name('self', Load(), lineno=59, col_offset=26), 'n', Load(), lineno=59, col_offset=26), lineno=59, col_offset=21), lineno=59, col_offset=14), Add(), Str('+', lineno=59, col_offset=35), lineno=59, col_offset=33)], True, lineno=59, col_offset=8), For(Name('y', Store(), lineno=60, col_offset=12), Call(Name('range', Load(), lineno=60, col_offset=17), [BinOp(Attribute(Name('self', Load(), lineno=60, col_offset=23), 'n', Load(), lineno=60, col_offset=23), Sub(), Num(1, lineno=60, col_offset=30), lineno=60, col_offset=23), Num(-1, lineno=60, col_offset=34), Num(-1, lineno=60, col_offset=38)], [], None, None, lineno=60, col_offset=17), [Print(None, [Str('|', lineno=61, col_offset=18)], False, lineno=61, col_offset=12), For(Name('x', Store(), lineno=62, col_offset=16), Call(Name('range', Load(), lineno=62, col_offset=21), [Attribute(Name('self', Load(), lineno=62, col_offset=27), 'n', Load(), lineno=62, col_offset=27)], [], None, None, lineno=62, col_offset=21), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=63, col_offset=19), 'y', Load(), lineno=63, col_offset=19), Index(Name('x', Load(), lineno=63, col_offset=26)), Load(), lineno=63, col_offset=19), [Eq()], [Name('y', Load(), lineno=63, col_offset=32)], lineno=63, col_offset=19), [Print(None, [Str('Q', lineno=64, col_offset=26)], False, lineno=64, col_offset=20)], [Print(None, [Str('.', lineno=66, col_offset=26)], False, lineno=66, col_offset=20)], lineno=63, col_offset=16)], [], lineno=62, col_offset=12), Print(None, [Str('|', lineno=67, col_offset=18)], True, lineno=67, col_offset=12)], [], lineno=60, col_offset=8), Print(None, [BinOp(BinOp(Str('+-', lineno=68, col_offset=14), Add(), BinOp(Str('--', lineno=68, col_offset=21), Mult(), Attribute(Name('self', Load(), lineno=68, col_offset=26), 'n', Load(), lineno=68, col_offset=26), lineno=68, col_offset=21), lineno=68, col_offset=14), Add(), Str('+', lineno=68, col_offset=35), lineno=68, col_offset=33)], True, lineno=68, col_offset=8)], [], lineno=55, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Import([alias('sys', None)], lineno=71, col_offset=4), Assign([Name('silent', Store(), lineno=72, col_offset=4)], Num(0, lineno=72, col_offset=13), lineno=72, col_offset=4), Assign([Name('n', Store(), lineno=73, col_offset=4)], Name('N', Load(), lineno=73, col_offset=8), lineno=73, col_offset=4), If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=74, col_offset=7), 'argv', Load(), lineno=74, col_offset=7), Slice(Num(1, lineno=74, col_offset=16), Num(2, lineno=74, col_offset=18), None), Load(), lineno=74, col_offset=7), [Eq()], [List([Str('-n', lineno=74, col_offset=25)], Load(), lineno=74, col_offset=24)], lineno=74, col_offset=7), [Assign([Name('silent', Store(), lineno=75, col_offset=8)], Num(1, lineno=75, col_offset=17), lineno=75, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=76, col_offset=12), 'argv', Load(), lineno=76, col_offset=12), Index(Num(1, lineno=76, col_offset=21)), Del(), lineno=76, col_offset=12)], lineno=76, col_offset=8)], [], lineno=74, col_offset=4), If(Subscript(Attribute(Name('sys', Load(), lineno=77, col_offset=7), 'argv', Load(), lineno=77, col_offset=7), Slice(Num(1, lineno=77, col_offset=16), None, None), Load(), lineno=77, col_offset=7), [Assign([Name('n', Store(), lineno=78, col_offset=8)], Call(Name('int', Load(), lineno=78, col_offset=12), [Subscript(Attribute(Name('sys', Load(), lineno=78, col_offset=16), 'argv', Load(), lineno=78, col_offset=16), Index(Num(1, lineno=78, col_offset=25)), Load(), lineno=78, col_offset=16)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=8)], [], lineno=77, col_offset=4), Assign([Name('q', Store(), lineno=79, col_offset=4)], Call(Name('Queens', Load(), lineno=79, col_offset=8), [Name('n', Load(), lineno=79, col_offset=15)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=4), Assign([Attribute(Name('q', Load(), lineno=80, col_offset=4), 'silent', Store(), lineno=80, col_offset=4)], Name('silent', Load(), lineno=80, col_offset=15), lineno=80, col_offset=4), Expr(Call(Attribute(Name('q', Load(), lineno=81, col_offset=4), 'solve', Load(), lineno=81, col_offset=4), [], [], None, None, lineno=81, col_offset=4), lineno=81, col_offset=4), Print(None, [Str('Found', lineno=82, col_offset=10), Attribute(Name('q', Load(), lineno=82, col_offset=19), 'nfound', Load(), lineno=82, col_offset=19), Str('solutions.', lineno=82, col_offset=29)], True, lineno=82, col_offset=4)], [], lineno=70, col_offset=0), If(Compare(Name('__name__', Load(), lineno=84, col_offset=3), [Eq()], [Str('__main__', lineno=84, col_offset=15)], lineno=84, col_offset=3), [Expr(Call(Name('main', Load(), lineno=85, col_offset=4), [], [], None, None, lineno=85, col_offset=4), lineno=85, col_offset=4)], [], lineno=84, col_offset=0)])
