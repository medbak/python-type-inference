Module([Import([alias('os', None)], lineno=9, col_offset=0), Import([alias('sys', None)], lineno=10, col_offset=0), Import([alias('signal', None)], lineno=11, col_offset=0), ImportFrom('multiprocessing', [alias('util', None), alias('process', None)], 0, lineno=13, col_offset=0), Assign([Name('__all__', Store(), lineno=15, col_offset=0)], List([Str('Popen', lineno=15, col_offset=11), Str('assert_spawning', lineno=15, col_offset=20), Str('exit', lineno=15, col_offset=39), Str('duplicate', lineno=15, col_offset=47), Str('close', lineno=15, col_offset=60), Str('ForkingPickler', lineno=15, col_offset=69)], Load(), lineno=15, col_offset=10), lineno=15, col_offset=0), FunctionDef('assert_spawning', arguments([Name('self', Param(), lineno=21, col_offset=20)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Name('Popen', Load(), lineno=22, col_offset=11), 'thread_is_spawning', Load(), lineno=22, col_offset=11), [], [], None, None, lineno=22, col_offset=11), lineno=22, col_offset=7), [Raise(Call(Name('RuntimeError', Load(), lineno=23, col_offset=14), [BinOp(Str('%s objects should only be shared between processes through inheritance', lineno=24, col_offset=12), Mod(), Attribute(Call(Name('type', Load(), lineno=25, col_offset=37), [Name('self', Load(), lineno=25, col_offset=42)], [], None, None, lineno=25, col_offset=37), '__name__', Load(), lineno=25, col_offset=37), lineno=24, col_offset=12)], [], None, None, lineno=23, col_offset=14), None, None, lineno=23, col_offset=8)], [], lineno=22, col_offset=4)], [], lineno=21, col_offset=0), ImportFrom('pickle', [alias('Pickler', None)], 0, lineno=32, col_offset=0), ClassDef('ForkingPickler', [Name('Pickler', Load(), lineno=33, col_offset=21)], [Assign([Name('dispatch', Store(), lineno=34, col_offset=4)], Call(Attribute(Attribute(Name('Pickler', Load(), lineno=34, col_offset=15), 'dispatch', Load(), lineno=34, col_offset=15), 'copy', Load(), lineno=34, col_offset=15), [], [], None, None, lineno=34, col_offset=15), lineno=34, col_offset=4), FunctionDef('register', arguments([Name('cls', Param(), lineno=37, col_offset=17), Name('type', Param(), lineno=37, col_offset=22), Name('reduce', Param(), lineno=37, col_offset=28)], None, None, []), [FunctionDef('dispatcher', arguments([Name('self', Param(), lineno=38, col_offset=23), Name('obj', Param(), lineno=38, col_offset=29)], None, None, []), [Assign([Name('rv', Store(), lineno=39, col_offset=12)], Call(Name('reduce', Load(), lineno=39, col_offset=17), [Name('obj', Load(), lineno=39, col_offset=24)], [], None, None, lineno=39, col_offset=17), lineno=39, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=12), 'save_reduce', Load(), lineno=40, col_offset=12), [], [keyword('obj', Name('obj', Load(), lineno=40, col_offset=33))], Name('rv', Load(), lineno=40, col_offset=39), None, lineno=40, col_offset=12), lineno=40, col_offset=12)], [], lineno=38, col_offset=8), Assign([Subscript(Attribute(Name('cls', Load(), lineno=41, col_offset=8), 'dispatch', Load(), lineno=41, col_offset=8), Index(Name('type', Load(), lineno=41, col_offset=21)), Store(), lineno=41, col_offset=8)], Name('dispatcher', Load(), lineno=41, col_offset=29), lineno=41, col_offset=8)], [Name('classmethod', Load(), lineno=36, col_offset=5)], lineno=36, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('_reduce_method', arguments([Name('m', Param(), lineno=43, col_offset=19)], None, None, []), [If(Compare(Attribute(Name('m', Load(), lineno=44, col_offset=7), 'im_self', Load(), lineno=44, col_offset=7), [Is()], [Name('None', Load(), lineno=44, col_offset=20)], lineno=44, col_offset=7), [Return(Tuple([Name('getattr', Load(), lineno=45, col_offset=15), Tuple([Attribute(Name('m', Load(), lineno=45, col_offset=25), 'im_class', Load(), lineno=45, col_offset=25), Attribute(Attribute(Name('m', Load(), lineno=45, col_offset=37), 'im_func', Load(), lineno=45, col_offset=37), 'func_name', Load(), lineno=45, col_offset=37)], Load(), lineno=45, col_offset=25)], Load(), lineno=45, col_offset=15), lineno=45, col_offset=8)], [Return(Tuple([Name('getattr', Load(), lineno=47, col_offset=15), Tuple([Attribute(Name('m', Load(), lineno=47, col_offset=25), 'im_self', Load(), lineno=47, col_offset=25), Attribute(Attribute(Name('m', Load(), lineno=47, col_offset=36), 'im_func', Load(), lineno=47, col_offset=36), 'func_name', Load(), lineno=47, col_offset=36)], Load(), lineno=47, col_offset=25)], Load(), lineno=47, col_offset=15), lineno=47, col_offset=8)], lineno=44, col_offset=4)], [], lineno=43, col_offset=0), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=48, col_offset=0), 'register', Load(), lineno=48, col_offset=0), [Call(Name('type', Load(), lineno=48, col_offset=24), [Attribute(Name('ForkingPickler', Load(), lineno=48, col_offset=29), 'save', Load(), lineno=48, col_offset=29)], [], None, None, lineno=48, col_offset=24), Name('_reduce_method', Load(), lineno=48, col_offset=51)], [], None, None, lineno=48, col_offset=0), lineno=48, col_offset=0), FunctionDef('_reduce_method_descriptor', arguments([Name('m', Param(), lineno=50, col_offset=30)], None, None, []), [Return(Tuple([Name('getattr', Load(), lineno=51, col_offset=11), Tuple([Attribute(Name('m', Load(), lineno=51, col_offset=21), '__objclass__', Load(), lineno=51, col_offset=21), Attribute(Name('m', Load(), lineno=51, col_offset=37), '__name__', Load(), lineno=51, col_offset=37)], Load(), lineno=51, col_offset=21)], Load(), lineno=51, col_offset=11), lineno=51, col_offset=4)], [], lineno=50, col_offset=0), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=52, col_offset=0), 'register', Load(), lineno=52, col_offset=0), [Call(Name('type', Load(), lineno=52, col_offset=24), [Attribute(Name('list', Load(), lineno=52, col_offset=29), 'append', Load(), lineno=52, col_offset=29)], [], None, None, lineno=52, col_offset=24), Name('_reduce_method_descriptor', Load(), lineno=52, col_offset=43)], [], None, None, lineno=52, col_offset=0), lineno=52, col_offset=0), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=53, col_offset=0), 'register', Load(), lineno=53, col_offset=0), [Call(Name('type', Load(), lineno=53, col_offset=24), [Attribute(Name('int', Load(), lineno=53, col_offset=29), '__add__', Load(), lineno=53, col_offset=29)], [], None, None, lineno=53, col_offset=24), Name('_reduce_method_descriptor', Load(), lineno=53, col_offset=43)], [], None, None, lineno=53, col_offset=0), lineno=53, col_offset=0), TryExcept([ImportFrom('functools', [alias('partial', None)], 0, lineno=61, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=62, col_offset=7), None, [Pass( lineno=63, col_offset=4)], lineno=62, col_offset=0)], [FunctionDef('_reduce_partial', arguments([Name('p', Param(), lineno=65, col_offset=24)], None, None, []), [Return(Tuple([Name('_rebuild_partial', Load(), lineno=66, col_offset=15), Tuple([Attribute(Name('p', Load(), lineno=66, col_offset=34), 'func', Load(), lineno=66, col_offset=34), Attribute(Name('p', Load(), lineno=66, col_offset=42), 'args', Load(), lineno=66, col_offset=42), BoolOp(Or(), [Attribute(Name('p', Load(), lineno=66, col_offset=50), 'keywords', Load(), lineno=66, col_offset=50), Dict([], [], lineno=66, col_offset=64)], lineno=66, col_offset=50)], Load(), lineno=66, col_offset=34)], Load(), lineno=66, col_offset=15), lineno=66, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('_rebuild_partial', arguments([Name('func', Param(), lineno=67, col_offset=25), Name('args', Param(), lineno=67, col_offset=31), Name('keywords', Param(), lineno=67, col_offset=37)], None, None, []), [Return(Call(Name('partial', Load(), lineno=68, col_offset=15), [Name('func', Load(), lineno=68, col_offset=23)], [], Name('args', Load(), lineno=68, col_offset=30), Name('keywords', Load(), lineno=68, col_offset=38), lineno=68, col_offset=15), lineno=68, col_offset=8)], [], lineno=67, col_offset=4), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=69, col_offset=4), 'register', Load(), lineno=69, col_offset=4), [Name('partial', Load(), lineno=69, col_offset=28), Name('_reduce_partial', Load(), lineno=69, col_offset=37)], [], None, None, lineno=69, col_offset=4), lineno=69, col_offset=4)], lineno=60, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=75, col_offset=3), 'platform', Load(), lineno=75, col_offset=3), [NotEq()], [Str('win32', lineno=75, col_offset=19)], lineno=75, col_offset=3), [Import([alias('time', None)], lineno=76, col_offset=4), Assign([Name('exit', Store(), lineno=78, col_offset=4)], Attribute(Name('os', Load(), lineno=78, col_offset=11), '_exit', Load(), lineno=78, col_offset=11), lineno=78, col_offset=4), Assign([Name('duplicate', Store(), lineno=79, col_offset=4)], Attribute(Name('os', Load(), lineno=79, col_offset=16), 'dup', Load(), lineno=79, col_offset=16), lineno=79, col_offset=4), Assign([Name('close', Store(), lineno=80, col_offset=4)], Attribute(Name('os', Load(), lineno=80, col_offset=12), 'close', Load(), lineno=80, col_offset=12), lineno=80, col_offset=4), ClassDef('Popen', [Name('object', Load(), lineno=87, col_offset=16)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=89, col_offset=21), Name('process_obj', Param(), lineno=89, col_offset=27)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=90, col_offset=12), 'stdout', Load(), lineno=90, col_offset=12), 'flush', Load(), lineno=90, col_offset=12), [], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=91, col_offset=12), 'stderr', Load(), lineno=91, col_offset=12), 'flush', Load(), lineno=91, col_offset=12), [], [], None, None, lineno=91, col_offset=12), lineno=91, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=92, col_offset=12), 'returncode', Store(), lineno=92, col_offset=12)], Name('None', Load(), lineno=92, col_offset=30), lineno=92, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=94, col_offset=12), 'pid', Store(), lineno=94, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=94, col_offset=23), 'fork', Load(), lineno=94, col_offset=23), [], [], None, None, lineno=94, col_offset=23), lineno=94, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=95, col_offset=15), 'pid', Load(), lineno=95, col_offset=15), [Eq()], [Num(0, lineno=95, col_offset=27)], lineno=95, col_offset=15), [If(Compare(Str('random', lineno=96, col_offset=19), [In()], [Attribute(Name('sys', Load(), lineno=96, col_offset=31), 'modules', Load(), lineno=96, col_offset=31)], lineno=96, col_offset=19), [Import([alias('random', None)], lineno=97, col_offset=20), Expr(Call(Attribute(Name('random', Load(), lineno=98, col_offset=20), 'seed', Load(), lineno=98, col_offset=20), [], [], None, None, lineno=98, col_offset=20), lineno=98, col_offset=20)], [], lineno=96, col_offset=16), Assign([Name('code', Store(), lineno=99, col_offset=16)], Call(Attribute(Name('process_obj', Load(), lineno=99, col_offset=23), '_bootstrap', Load(), lineno=99, col_offset=23), [], [], None, None, lineno=99, col_offset=23), lineno=99, col_offset=16), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=100, col_offset=16), 'stdout', Load(), lineno=100, col_offset=16), 'flush', Load(), lineno=100, col_offset=16), [], [], None, None, lineno=100, col_offset=16), lineno=100, col_offset=16), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=101, col_offset=16), 'stderr', Load(), lineno=101, col_offset=16), 'flush', Load(), lineno=101, col_offset=16), [], [], None, None, lineno=101, col_offset=16), lineno=101, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=102, col_offset=16), '_exit', Load(), lineno=102, col_offset=16), [Name('code', Load(), lineno=102, col_offset=25)], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=16)], [], lineno=95, col_offset=12)], [], lineno=89, col_offset=8), FunctionDef('poll', arguments([Name('self', Param(), lineno=104, col_offset=17), Name('flag', Param(), lineno=104, col_offset=23)], None, None, [Attribute(Name('os', Load(), lineno=104, col_offset=28), 'WNOHANG', Load(), lineno=104, col_offset=28)]), [If(Compare(Attribute(Name('self', Load(), lineno=105, col_offset=15), 'returncode', Load(), lineno=105, col_offset=15), [Is()], [Name('None', Load(), lineno=105, col_offset=34)], lineno=105, col_offset=15), [TryExcept([Assign([Tuple([Name('pid', Store(), lineno=107, col_offset=20), Name('sts', Store(), lineno=107, col_offset=25)], Store(), lineno=107, col_offset=20)], Call(Attribute(Name('os', Load(), lineno=107, col_offset=31), 'waitpid', Load(), lineno=107, col_offset=31), [Attribute(Name('self', Load(), lineno=107, col_offset=42), 'pid', Load(), lineno=107, col_offset=42), Name('flag', Load(), lineno=107, col_offset=52)], [], None, None, lineno=107, col_offset=31), lineno=107, col_offset=20)], [ExceptHandler(Attribute(Name('os', Load(), lineno=108, col_offset=23), 'error', Load(), lineno=108, col_offset=23), None, [Return(Name('None', Load(), lineno=111, col_offset=27), lineno=111, col_offset=20)], lineno=108, col_offset=16)], [], lineno=106, col_offset=16), If(Compare(Name('pid', Load(), lineno=112, col_offset=19), [Eq()], [Attribute(Name('self', Load(), lineno=112, col_offset=26), 'pid', Load(), lineno=112, col_offset=26)], lineno=112, col_offset=19), [If(Call(Attribute(Name('os', Load(), lineno=113, col_offset=23), 'WIFSIGNALED', Load(), lineno=113, col_offset=23), [Name('sts', Load(), lineno=113, col_offset=38)], [], None, None, lineno=113, col_offset=23), [Assign([Attribute(Name('self', Load(), lineno=114, col_offset=24), 'returncode', Store(), lineno=114, col_offset=24)], UnaryOp(USub(), Call(Attribute(Name('os', Load(), lineno=114, col_offset=43), 'WTERMSIG', Load(), lineno=114, col_offset=43), [Name('sts', Load(), lineno=114, col_offset=55)], [], None, None, lineno=114, col_offset=43), lineno=114, col_offset=42), lineno=114, col_offset=24)], [Assert(Call(Attribute(Name('os', Load(), lineno=116, col_offset=31), 'WIFEXITED', Load(), lineno=116, col_offset=31), [Name('sts', Load(), lineno=116, col_offset=44)], [], None, None, lineno=116, col_offset=31), None, lineno=116, col_offset=24), Assign([Attribute(Name('self', Load(), lineno=117, col_offset=24), 'returncode', Store(), lineno=117, col_offset=24)], Call(Attribute(Name('os', Load(), lineno=117, col_offset=42), 'WEXITSTATUS', Load(), lineno=117, col_offset=42), [Name('sts', Load(), lineno=117, col_offset=57)], [], None, None, lineno=117, col_offset=42), lineno=117, col_offset=24)], lineno=113, col_offset=20)], [], lineno=112, col_offset=16)], [], lineno=105, col_offset=12), Return(Attribute(Name('self', Load(), lineno=118, col_offset=19), 'returncode', Load(), lineno=118, col_offset=19), lineno=118, col_offset=12)], [], lineno=104, col_offset=8), FunctionDef('wait', arguments([Name('self', Param(), lineno=120, col_offset=17), Name('timeout', Param(), lineno=120, col_offset=23)], None, None, [Name('None', Load(), lineno=120, col_offset=31)]), [If(Compare(Name('timeout', Load(), lineno=121, col_offset=15), [Is()], [Name('None', Load(), lineno=121, col_offset=26)], lineno=121, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=122, col_offset=23), 'poll', Load(), lineno=122, col_offset=23), [Num(0, lineno=122, col_offset=33)], [], None, None, lineno=122, col_offset=23), lineno=122, col_offset=16)], [], lineno=121, col_offset=12), Assign([Name('deadline', Store(), lineno=123, col_offset=12)], BinOp(Call(Attribute(Name('time', Load(), lineno=123, col_offset=23), 'time', Load(), lineno=123, col_offset=23), [], [], None, None, lineno=123, col_offset=23), Add(), Name('timeout', Load(), lineno=123, col_offset=37), lineno=123, col_offset=23), lineno=123, col_offset=12), Assign([Name('delay', Store(), lineno=124, col_offset=12)], Num(0.0005, lineno=124, col_offset=20), lineno=124, col_offset=12), While(Num(1, lineno=125, col_offset=18), [Assign([Name('res', Store(), lineno=126, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=126, col_offset=22), 'poll', Load(), lineno=126, col_offset=22), [], [], None, None, lineno=126, col_offset=22), lineno=126, col_offset=16), If(Compare(Name('res', Load(), lineno=127, col_offset=19), [IsNot()], [Name('None', Load(), lineno=127, col_offset=30)], lineno=127, col_offset=19), [Break( lineno=128, col_offset=20)], [], lineno=127, col_offset=16), Assign([Name('remaining', Store(), lineno=129, col_offset=16)], BinOp(Name('deadline', Load(), lineno=129, col_offset=28), Sub(), Call(Attribute(Name('time', Load(), lineno=129, col_offset=39), 'time', Load(), lineno=129, col_offset=39), [], [], None, None, lineno=129, col_offset=39), lineno=129, col_offset=28), lineno=129, col_offset=16), If(Compare(Name('remaining', Load(), lineno=130, col_offset=19), [LtE()], [Num(0, lineno=130, col_offset=32)], lineno=130, col_offset=19), [Break( lineno=131, col_offset=20)], [], lineno=130, col_offset=16), Assign([Name('delay', Store(), lineno=132, col_offset=16)], Call(Name('min', Load(), lineno=132, col_offset=24), [BinOp(Name('delay', Load(), lineno=132, col_offset=28), Mult(), Num(2, lineno=132, col_offset=36), lineno=132, col_offset=28), Name('remaining', Load(), lineno=132, col_offset=39), Num(0.05, lineno=132, col_offset=50)], [], None, None, lineno=132, col_offset=24), lineno=132, col_offset=16), Expr(Call(Attribute(Name('time', Load(), lineno=133, col_offset=16), 'sleep', Load(), lineno=133, col_offset=16), [Name('delay', Load(), lineno=133, col_offset=27)], [], None, None, lineno=133, col_offset=16), lineno=133, col_offset=16)], [], lineno=125, col_offset=12), Return(Name('res', Load(), lineno=134, col_offset=19), lineno=134, col_offset=12)], [], lineno=120, col_offset=8), FunctionDef('terminate', arguments([Name('self', Param(), lineno=136, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=137, col_offset=15), 'returncode', Load(), lineno=137, col_offset=15), [Is()], [Name('None', Load(), lineno=137, col_offset=34)], lineno=137, col_offset=15), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=139, col_offset=20), 'kill', Load(), lineno=139, col_offset=20), [Attribute(Name('self', Load(), lineno=139, col_offset=28), 'pid', Load(), lineno=139, col_offset=28), Attribute(Name('signal', Load(), lineno=139, col_offset=38), 'SIGTERM', Load(), lineno=139, col_offset=38)], [], None, None, lineno=139, col_offset=20), lineno=139, col_offset=20)], [ExceptHandler(Name('OSError', Load(), lineno=140, col_offset=23), Name('e', Store(), lineno=140, col_offset=32), [If(Compare(Call(Attribute(Name('self', Load(), lineno=141, col_offset=23), 'wait', Load(), lineno=141, col_offset=23), [], [keyword('timeout', Num(0.1, lineno=141, col_offset=41))], None, None, lineno=141, col_offset=23), [Is()], [Name('None', Load(), lineno=141, col_offset=49)], lineno=141, col_offset=23), [Raise(None, None, None, lineno=142, col_offset=24)], [], lineno=141, col_offset=20)], lineno=140, col_offset=16)], [], lineno=138, col_offset=16)], [], lineno=137, col_offset=12)], [], lineno=136, col_offset=8), FunctionDef('thread_is_spawning', arguments([], None, None, []), [Return(Name('False', Load(), lineno=146, col_offset=19), lineno=146, col_offset=12)], [Name('staticmethod', Load(), lineno=144, col_offset=9)], lineno=144, col_offset=8)], [], lineno=87, col_offset=4)], [Import([alias('thread', None)], lineno=153, col_offset=4), Import([alias('msvcrt', None)], lineno=154, col_offset=4), Import([alias('_subprocess', None)], lineno=155, col_offset=4), Import([alias('time', None)], lineno=156, col_offset=4), ImportFrom('_multiprocessing', [alias('win32', None), alias('Connection', None), alias('PipeConnection', None)], 0, lineno=158, col_offset=4), ImportFrom('util', [alias('Finalize', None)], 1, lineno=159, col_offset=4), ImportFrom('pickle', [alias('load', None), alias('HIGHEST_PROTOCOL', None)], 0, lineno=164, col_offset=4), FunctionDef('dump', arguments([Name('obj', Param(), lineno=166, col_offset=13), Name('file', Param(), lineno=166, col_offset=18), Name('protocol', Param(), lineno=166, col_offset=24)], None, None, [Name('None', Load(), lineno=166, col_offset=33)]), [Expr(Call(Attribute(Call(Name('ForkingPickler', Load(), lineno=167, col_offset=8), [Name('file', Load(), lineno=167, col_offset=23), Name('protocol', Load(), lineno=167, col_offset=29)], [], None, None, lineno=167, col_offset=8), 'dump', Load(), lineno=167, col_offset=8), [Name('obj', Load(), lineno=167, col_offset=44)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), Assign([Name('TERMINATE', Store(), lineno=173, col_offset=4)], Num(65536, lineno=173, col_offset=16), lineno=173, col_offset=4), Assign([Name('WINEXE', Store(), lineno=174, col_offset=4)], BoolOp(And(), [Compare(Attribute(Name('sys', Load(), lineno=174, col_offset=14), 'platform', Load(), lineno=174, col_offset=14), [Eq()], [Str('win32', lineno=174, col_offset=30)], lineno=174, col_offset=14), Call(Name('getattr', Load(), lineno=174, col_offset=42), [Name('sys', Load(), lineno=174, col_offset=50), Str('frozen', lineno=174, col_offset=55), Name('False', Load(), lineno=174, col_offset=65)], [], None, None, lineno=174, col_offset=42)], lineno=174, col_offset=14), lineno=174, col_offset=4), Assign([Name('exit', Store(), lineno=176, col_offset=4)], Attribute(Name('win32', Load(), lineno=176, col_offset=11), 'ExitProcess', Load(), lineno=176, col_offset=11), lineno=176, col_offset=4), Assign([Name('close', Store(), lineno=177, col_offset=4)], Attribute(Name('win32', Load(), lineno=177, col_offset=12), 'CloseHandle', Load(), lineno=177, col_offset=12), lineno=177, col_offset=4), If(Call(Attribute(Call(Attribute(Attribute(Name('sys', Load(), lineno=184, col_offset=7), 'executable', Load(), lineno=184, col_offset=7), 'lower', Load(), lineno=184, col_offset=7), [], [], None, None, lineno=184, col_offset=7), 'endswith', Load(), lineno=184, col_offset=7), [Str('pythonservice.exe', lineno=184, col_offset=39)], [], None, None, lineno=184, col_offset=7), [Assign([Name('_python_exe', Store(), lineno=185, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=185, col_offset=22), 'path', Load(), lineno=185, col_offset=22), 'join', Load(), lineno=185, col_offset=22), [Attribute(Name('sys', Load(), lineno=185, col_offset=35), 'exec_prefix', Load(), lineno=185, col_offset=35), Str('python.exe', lineno=185, col_offset=52)], [], None, None, lineno=185, col_offset=22), lineno=185, col_offset=8)], [Assign([Name('_python_exe', Store(), lineno=187, col_offset=8)], Attribute(Name('sys', Load(), lineno=187, col_offset=22), 'executable', Load(), lineno=187, col_offset=22), lineno=187, col_offset=8)], lineno=184, col_offset=4), FunctionDef('set_executable', arguments([Name('exe', Param(), lineno=189, col_offset=23)], None, None, []), [Global(['_python_exe'], lineno=190, col_offset=8), Assign([Name('_python_exe', Store(), lineno=191, col_offset=8)], Name('exe', Load(), lineno=191, col_offset=22), lineno=191, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('duplicate', arguments([Name('handle', Param(), lineno=197, col_offset=18), Name('target_process', Param(), lineno=197, col_offset=26), Name('inheritable', Param(), lineno=197, col_offset=47)], None, None, [Name('None', Load(), lineno=197, col_offset=41), Name('False', Load(), lineno=197, col_offset=59)]), [If(Compare(Name('target_process', Load(), lineno=198, col_offset=11), [Is()], [Name('None', Load(), lineno=198, col_offset=29)], lineno=198, col_offset=11), [Assign([Name('target_process', Store(), lineno=199, col_offset=12)], Call(Attribute(Name('_subprocess', Load(), lineno=199, col_offset=29), 'GetCurrentProcess', Load(), lineno=199, col_offset=29), [], [], None, None, lineno=199, col_offset=29), lineno=199, col_offset=12)], [], lineno=198, col_offset=8), Return(Call(Attribute(Call(Attribute(Name('_subprocess', Load(), lineno=200, col_offset=15), 'DuplicateHandle', Load(), lineno=200, col_offset=15), [Call(Attribute(Name('_subprocess', Load(), lineno=201, col_offset=12), 'GetCurrentProcess', Load(), lineno=201, col_offset=12), [], [], None, None, lineno=201, col_offset=12), Name('handle', Load(), lineno=201, col_offset=45), Name('target_process', Load(), lineno=201, col_offset=53), Num(0, lineno=202, col_offset=12), Name('inheritable', Load(), lineno=202, col_offset=15), Attribute(Name('_subprocess', Load(), lineno=202, col_offset=28), 'DUPLICATE_SAME_ACCESS', Load(), lineno=202, col_offset=28)], [], None, None, lineno=200, col_offset=15), 'Detach', Load(), lineno=200, col_offset=15), [], [], None, None, lineno=200, col_offset=15), lineno=200, col_offset=8)], [], lineno=197, col_offset=4), ClassDef('Popen', [Name('object', Load(), lineno=210, col_offset=16)], [Expr(Str('\n        Start a subprocess to run the code of a process object\n        ', lineno=213, col_offset=-1), lineno=213, col_offset=-1), Assign([Name('_tls', Store(), lineno=214, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=214, col_offset=15), '_local', Load(), lineno=214, col_offset=15), [], [], None, None, lineno=214, col_offset=15), lineno=214, col_offset=8), FunctionDef('__init__', arguments([Name('self', Param(), lineno=216, col_offset=21), Name('process_obj', Param(), lineno=216, col_offset=27)], None, None, []), [Assign([Tuple([Name('rfd', Store(), lineno=218, col_offset=12), Name('wfd', Store(), lineno=218, col_offset=17)], Store(), lineno=218, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=218, col_offset=23), 'pipe', Load(), lineno=218, col_offset=23), [], [], None, None, lineno=218, col_offset=23), lineno=218, col_offset=12), Assign([Name('rhandle', Store(), lineno=221, col_offset=12)], Call(Name('duplicate', Load(), lineno=221, col_offset=22), [Call(Attribute(Name('msvcrt', Load(), lineno=221, col_offset=32), 'get_osfhandle', Load(), lineno=221, col_offset=32), [Name('rfd', Load(), lineno=221, col_offset=53)], [], None, None, lineno=221, col_offset=32)], [keyword('inheritable', Name('True', Load(), lineno=221, col_offset=71))], None, None, lineno=221, col_offset=22), lineno=221, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=222, col_offset=12), 'close', Load(), lineno=222, col_offset=12), [Name('rfd', Load(), lineno=222, col_offset=21)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12), Assign([Name('cmd', Store(), lineno=225, col_offset=12)], BinOp(Call(Name('get_command_line', Load(), lineno=225, col_offset=18), [], [], None, None, lineno=225, col_offset=18), Add(), List([Name('rhandle', Load(), lineno=225, col_offset=40)], Load(), lineno=225, col_offset=39), lineno=225, col_offset=18), lineno=225, col_offset=12), Assign([Name('cmd', Store(), lineno=226, col_offset=12)], Call(Attribute(Str(' ', lineno=226, col_offset=18), 'join', Load(), lineno=226, col_offset=18), [GeneratorExp(BinOp(Str('"%s"', lineno=226, col_offset=27), Mod(), Name('x', Load(), lineno=226, col_offset=36), lineno=226, col_offset=27), [comprehension(Name('x', Store(), lineno=226, col_offset=42), Name('cmd', Load(), lineno=226, col_offset=47), [])], lineno=226, col_offset=27)], [], None, None, lineno=226, col_offset=18), lineno=226, col_offset=12), Assign([Tuple([Name('hp', Store(), lineno=227, col_offset=12), Name('ht', Store(), lineno=227, col_offset=16), Name('pid', Store(), lineno=227, col_offset=20), Name('tid', Store(), lineno=227, col_offset=25)], Store(), lineno=227, col_offset=12)], Call(Attribute(Name('_subprocess', Load(), lineno=227, col_offset=31), 'CreateProcess', Load(), lineno=227, col_offset=31), [Name('_python_exe', Load(), lineno=228, col_offset=16), Name('cmd', Load(), lineno=228, col_offset=29), Name('None', Load(), lineno=228, col_offset=34), Name('None', Load(), lineno=228, col_offset=40), Num(1, lineno=228, col_offset=46), Num(0, lineno=228, col_offset=49), Name('None', Load(), lineno=228, col_offset=52), Name('None', Load(), lineno=228, col_offset=58), Name('None', Load(), lineno=228, col_offset=64)], [], None, None, lineno=227, col_offset=31), lineno=227, col_offset=12), Expr(Call(Attribute(Name('ht', Load(), lineno=230, col_offset=12), 'Close', Load(), lineno=230, col_offset=12), [], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=12), Expr(Call(Name('close', Load(), lineno=231, col_offset=12), [Name('rhandle', Load(), lineno=231, col_offset=18)], [], None, None, lineno=231, col_offset=12), lineno=231, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=234, col_offset=12), 'pid', Store(), lineno=234, col_offset=12)], Name('pid', Load(), lineno=234, col_offset=23), lineno=234, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=235, col_offset=12), 'returncode', Store(), lineno=235, col_offset=12)], Name('None', Load(), lineno=235, col_offset=30), lineno=235, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=236, col_offset=12), '_handle', Store(), lineno=236, col_offset=12)], Name('hp', Load(), lineno=236, col_offset=27), lineno=236, col_offset=12), Assign([Name('prep_data', Store(), lineno=239, col_offset=12)], Call(Name('get_preparation_data', Load(), lineno=239, col_offset=24), [Attribute(Name('process_obj', Load(), lineno=239, col_offset=45), '_name', Load(), lineno=239, col_offset=45)], [], None, None, lineno=239, col_offset=24), lineno=239, col_offset=12), Assign([Name('to_child', Store(), lineno=240, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=240, col_offset=23), 'fdopen', Load(), lineno=240, col_offset=23), [Name('wfd', Load(), lineno=240, col_offset=33), Str('wb', lineno=240, col_offset=38)], [], None, None, lineno=240, col_offset=23), lineno=240, col_offset=12), Assign([Attribute(Attribute(Name('Popen', Load(), lineno=241, col_offset=12), '_tls', Load(), lineno=241, col_offset=12), 'process_handle', Store(), lineno=241, col_offset=12)], Call(Name('int', Load(), lineno=241, col_offset=40), [Name('hp', Load(), lineno=241, col_offset=44)], [], None, None, lineno=241, col_offset=40), lineno=241, col_offset=12), TryFinally([Expr(Call(Name('dump', Load(), lineno=243, col_offset=16), [Name('prep_data', Load(), lineno=243, col_offset=21), Name('to_child', Load(), lineno=243, col_offset=32), Name('HIGHEST_PROTOCOL', Load(), lineno=243, col_offset=42)], [], None, None, lineno=243, col_offset=16), lineno=243, col_offset=16), Expr(Call(Name('dump', Load(), lineno=244, col_offset=16), [Name('process_obj', Load(), lineno=244, col_offset=21), Name('to_child', Load(), lineno=244, col_offset=34), Name('HIGHEST_PROTOCOL', Load(), lineno=244, col_offset=44)], [], None, None, lineno=244, col_offset=16), lineno=244, col_offset=16)], [Delete([Attribute(Attribute(Name('Popen', Load(), lineno=246, col_offset=20), '_tls', Load(), lineno=246, col_offset=20), 'process_handle', Del(), lineno=246, col_offset=20)], lineno=246, col_offset=16), Expr(Call(Attribute(Name('to_child', Load(), lineno=247, col_offset=16), 'close', Load(), lineno=247, col_offset=16), [], [], None, None, lineno=247, col_offset=16), lineno=247, col_offset=16)], lineno=242, col_offset=12)], [], lineno=216, col_offset=8), FunctionDef('thread_is_spawning', arguments([], None, None, []), [Return(Compare(Call(Name('getattr', Load(), lineno=251, col_offset=19), [Attribute(Name('Popen', Load(), lineno=251, col_offset=27), '_tls', Load(), lineno=251, col_offset=27), Str('process_handle', lineno=251, col_offset=39), Name('None', Load(), lineno=251, col_offset=57)], [], None, None, lineno=251, col_offset=19), [IsNot()], [Name('None', Load(), lineno=251, col_offset=70)], lineno=251, col_offset=19), lineno=251, col_offset=12)], [Name('staticmethod', Load(), lineno=249, col_offset=9)], lineno=249, col_offset=8), FunctionDef('duplicate_for_child', arguments([Name('handle', Param(), lineno=254, col_offset=32)], None, None, []), [Return(Call(Name('duplicate', Load(), lineno=255, col_offset=19), [Name('handle', Load(), lineno=255, col_offset=29), Attribute(Attribute(Name('Popen', Load(), lineno=255, col_offset=37), '_tls', Load(), lineno=255, col_offset=37), 'process_handle', Load(), lineno=255, col_offset=37)], [], None, None, lineno=255, col_offset=19), lineno=255, col_offset=12)], [Name('staticmethod', Load(), lineno=253, col_offset=9)], lineno=253, col_offset=8), FunctionDef('wait', arguments([Name('self', Param(), lineno=257, col_offset=17), Name('timeout', Param(), lineno=257, col_offset=23)], None, None, [Name('None', Load(), lineno=257, col_offset=31)]), [If(Compare(Attribute(Name('self', Load(), lineno=258, col_offset=15), 'returncode', Load(), lineno=258, col_offset=15), [Is()], [Name('None', Load(), lineno=258, col_offset=34)], lineno=258, col_offset=15), [If(Compare(Name('timeout', Load(), lineno=259, col_offset=19), [Is()], [Name('None', Load(), lineno=259, col_offset=30)], lineno=259, col_offset=19), [Assign([Name('msecs', Store(), lineno=260, col_offset=20)], Attribute(Name('_subprocess', Load(), lineno=260, col_offset=28), 'INFINITE', Load(), lineno=260, col_offset=28), lineno=260, col_offset=20)], [Assign([Name('msecs', Store(), lineno=262, col_offset=20)], Call(Name('max', Load(), lineno=262, col_offset=28), [Num(0, lineno=262, col_offset=32), Call(Name('int', Load(), lineno=262, col_offset=35), [BinOp(BinOp(Name('timeout', Load(), lineno=262, col_offset=39), Mult(), Num(1000, lineno=262, col_offset=49), lineno=262, col_offset=39), Add(), Num(0.5, lineno=262, col_offset=56), lineno=262, col_offset=39)], [], None, None, lineno=262, col_offset=35)], [], None, None, lineno=262, col_offset=28), lineno=262, col_offset=20)], lineno=259, col_offset=16), Assign([Name('res', Store(), lineno=264, col_offset=16)], Call(Attribute(Name('_subprocess', Load(), lineno=264, col_offset=22), 'WaitForSingleObject', Load(), lineno=264, col_offset=22), [Call(Name('int', Load(), lineno=264, col_offset=54), [Attribute(Name('self', Load(), lineno=264, col_offset=58), '_handle', Load(), lineno=264, col_offset=58)], [], None, None, lineno=264, col_offset=54), Name('msecs', Load(), lineno=264, col_offset=73)], [], None, None, lineno=264, col_offset=22), lineno=264, col_offset=16), If(Compare(Name('res', Load(), lineno=265, col_offset=19), [Eq()], [Attribute(Name('_subprocess', Load(), lineno=265, col_offset=26), 'WAIT_OBJECT_0', Load(), lineno=265, col_offset=26)], lineno=265, col_offset=19), [Assign([Name('code', Store(), lineno=266, col_offset=20)], Call(Attribute(Name('_subprocess', Load(), lineno=266, col_offset=27), 'GetExitCodeProcess', Load(), lineno=266, col_offset=27), [Attribute(Name('self', Load(), lineno=266, col_offset=58), '_handle', Load(), lineno=266, col_offset=58)], [], None, None, lineno=266, col_offset=27), lineno=266, col_offset=20), If(Compare(Name('code', Load(), lineno=267, col_offset=23), [Eq()], [Name('TERMINATE', Load(), lineno=267, col_offset=31)], lineno=267, col_offset=23), [Assign([Name('code', Store(), lineno=268, col_offset=24)], UnaryOp(USub(), Attribute(Name('signal', Load(), lineno=268, col_offset=32), 'SIGTERM', Load(), lineno=268, col_offset=32), lineno=268, col_offset=31), lineno=268, col_offset=24)], [], lineno=267, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=269, col_offset=20), 'returncode', Store(), lineno=269, col_offset=20)], Name('code', Load(), lineno=269, col_offset=38), lineno=269, col_offset=20)], [], lineno=265, col_offset=16)], [], lineno=258, col_offset=12), Return(Attribute(Name('self', Load(), lineno=271, col_offset=19), 'returncode', Load(), lineno=271, col_offset=19), lineno=271, col_offset=12)], [], lineno=257, col_offset=8), FunctionDef('poll', arguments([Name('self', Param(), lineno=273, col_offset=17)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=274, col_offset=19), 'wait', Load(), lineno=274, col_offset=19), [], [keyword('timeout', Num(0, lineno=274, col_offset=37))], None, None, lineno=274, col_offset=19), lineno=274, col_offset=12)], [], lineno=273, col_offset=8), FunctionDef('terminate', arguments([Name('self', Param(), lineno=276, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=277, col_offset=15), 'returncode', Load(), lineno=277, col_offset=15), [Is()], [Name('None', Load(), lineno=277, col_offset=34)], lineno=277, col_offset=15), [TryExcept([Expr(Call(Attribute(Name('_subprocess', Load(), lineno=279, col_offset=20), 'TerminateProcess', Load(), lineno=279, col_offset=20), [Call(Name('int', Load(), lineno=279, col_offset=49), [Attribute(Name('self', Load(), lineno=279, col_offset=53), '_handle', Load(), lineno=279, col_offset=53)], [], None, None, lineno=279, col_offset=49), Name('TERMINATE', Load(), lineno=279, col_offset=68)], [], None, None, lineno=279, col_offset=20), lineno=279, col_offset=20)], [ExceptHandler(Name('WindowsError', Load(), lineno=280, col_offset=23), None, [If(Compare(Call(Attribute(Name('self', Load(), lineno=281, col_offset=23), 'wait', Load(), lineno=281, col_offset=23), [], [keyword('timeout', Num(0.1, lineno=281, col_offset=41))], None, None, lineno=281, col_offset=23), [Is()], [Name('None', Load(), lineno=281, col_offset=49)], lineno=281, col_offset=23), [Raise(None, None, None, lineno=282, col_offset=24)], [], lineno=281, col_offset=20)], lineno=280, col_offset=16)], [], lineno=278, col_offset=16)], [], lineno=277, col_offset=12)], [], lineno=276, col_offset=8)], [], lineno=210, col_offset=4), FunctionDef('is_forking', arguments([Name('argv', Param(), lineno=288, col_offset=19)], None, None, []), [Expr(Str('\n        Return whether commandline indicates we are forking\n        ', lineno=291, col_offset=-1), lineno=291, col_offset=-1), If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=292, col_offset=11), [Name('argv', Load(), lineno=292, col_offset=15)], [], None, None, lineno=292, col_offset=11), [GtE()], [Num(2, lineno=292, col_offset=24)], lineno=292, col_offset=11), Compare(Subscript(Name('argv', Load(), lineno=292, col_offset=30), Index(Num(1, lineno=292, col_offset=35)), Load(), lineno=292, col_offset=30), [Eq()], [Str('--multiprocessing-fork', lineno=292, col_offset=41)], lineno=292, col_offset=30)], lineno=292, col_offset=11), [Assert(Compare(Call(Name('len', Load(), lineno=293, col_offset=19), [Name('argv', Load(), lineno=293, col_offset=23)], [], None, None, lineno=293, col_offset=19), [Eq()], [Num(3, lineno=293, col_offset=32)], lineno=293, col_offset=19), None, lineno=293, col_offset=12), Return(Name('True', Load(), lineno=294, col_offset=19), lineno=294, col_offset=12)], [Return(Name('False', Load(), lineno=296, col_offset=19), lineno=296, col_offset=12)], lineno=292, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('freeze_support', arguments([], None, None, []), [Expr(Str('\n        Run code for process object if this in not the main process\n        ', lineno=302, col_offset=-1), lineno=302, col_offset=-1), If(Call(Name('is_forking', Load(), lineno=303, col_offset=11), [Attribute(Name('sys', Load(), lineno=303, col_offset=22), 'argv', Load(), lineno=303, col_offset=22)], [], None, None, lineno=303, col_offset=11), [Expr(Call(Name('main', Load(), lineno=304, col_offset=12), [], [], None, None, lineno=304, col_offset=12), lineno=304, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=305, col_offset=12), 'exit', Load(), lineno=305, col_offset=12), [], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12)], [], lineno=303, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('get_command_line', arguments([], None, None, []), [Expr(Str('\n        Returns prefix of command line used for spawning a child process\n        ', lineno=311, col_offset=-1), lineno=311, col_offset=-1), If(BoolOp(And(), [Compare(Attribute(Call(Attribute(Name('process', Load(), lineno=312, col_offset=11), 'current_process', Load(), lineno=312, col_offset=11), [], [], None, None, lineno=312, col_offset=11), '_identity', Load(), lineno=312, col_offset=11), [Eq()], [Tuple([], Load(), lineno=312, col_offset=48)], lineno=312, col_offset=11), Call(Name('is_forking', Load(), lineno=312, col_offset=55), [Attribute(Name('sys', Load(), lineno=312, col_offset=66), 'argv', Load(), lineno=312, col_offset=66)], [], None, None, lineno=312, col_offset=55)], lineno=312, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=313, col_offset=18), [Str('\n            Attempt to start a new process before the current process\n            has finished its bootstrapping phase.\n\n            This probably means that you are on Windows and you have\n            forgotten to use the proper idiom in the main module:\n\n                if __name__ == \'__main__\':\n                    freeze_support()\n                    ...\n\n            The "freeze_support()" line can be omitted if the program\n            is not going to be frozen to produce a Windows executable.', lineno=325, col_offset=-1)], [], None, None, lineno=313, col_offset=18), None, None, lineno=313, col_offset=12)], [], lineno=312, col_offset=8), If(Call(Name('getattr', Load(), lineno=327, col_offset=11), [Name('sys', Load(), lineno=327, col_offset=19), Str('frozen', lineno=327, col_offset=24), Name('False', Load(), lineno=327, col_offset=34)], [], None, None, lineno=327, col_offset=11), [Return(List([Attribute(Name('sys', Load(), lineno=328, col_offset=20), 'executable', Load(), lineno=328, col_offset=20), Str('--multiprocessing-fork', lineno=328, col_offset=36)], Load(), lineno=328, col_offset=19), lineno=328, col_offset=12)], [Assign([Name('prog', Store(), lineno=330, col_offset=12)], Str('from multiprocessing.forking import main; main()', lineno=330, col_offset=19), lineno=330, col_offset=12), Return(List([Name('_python_exe', Load(), lineno=331, col_offset=20), Str('-c', lineno=331, col_offset=33), Name('prog', Load(), lineno=331, col_offset=39), Str('--multiprocessing-fork', lineno=331, col_offset=45)], Load(), lineno=331, col_offset=19), lineno=331, col_offset=12)], lineno=327, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('main', arguments([], None, None, []), [Expr(Str('\n        Run code specifed by data received over pipe\n        ', lineno=337, col_offset=-1), lineno=337, col_offset=-1), Assert(Call(Name('is_forking', Load(), lineno=338, col_offset=15), [Attribute(Name('sys', Load(), lineno=338, col_offset=26), 'argv', Load(), lineno=338, col_offset=26)], [], None, None, lineno=338, col_offset=15), None, lineno=338, col_offset=8), Assign([Name('handle', Store(), lineno=340, col_offset=8)], Call(Name('int', Load(), lineno=340, col_offset=17), [Subscript(Attribute(Name('sys', Load(), lineno=340, col_offset=21), 'argv', Load(), lineno=340, col_offset=21), Index(Num(-1, lineno=340, col_offset=31)), Load(), lineno=340, col_offset=21)], [], None, None, lineno=340, col_offset=17), lineno=340, col_offset=8), Assign([Name('fd', Store(), lineno=341, col_offset=8)], Call(Attribute(Name('msvcrt', Load(), lineno=341, col_offset=13), 'open_osfhandle', Load(), lineno=341, col_offset=13), [Name('handle', Load(), lineno=341, col_offset=35), Attribute(Name('os', Load(), lineno=341, col_offset=43), 'O_RDONLY', Load(), lineno=341, col_offset=43)], [], None, None, lineno=341, col_offset=13), lineno=341, col_offset=8), Assign([Name('from_parent', Store(), lineno=342, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=342, col_offset=22), 'fdopen', Load(), lineno=342, col_offset=22), [Name('fd', Load(), lineno=342, col_offset=32), Str('rb', lineno=342, col_offset=36)], [], None, None, lineno=342, col_offset=22), lineno=342, col_offset=8), Assign([Attribute(Call(Attribute(Name('process', Load(), lineno=344, col_offset=8), 'current_process', Load(), lineno=344, col_offset=8), [], [], None, None, lineno=344, col_offset=8), '_inheriting', Store(), lineno=344, col_offset=8)], Name('True', Load(), lineno=344, col_offset=48), lineno=344, col_offset=8), Assign([Name('preparation_data', Store(), lineno=345, col_offset=8)], Call(Name('load', Load(), lineno=345, col_offset=27), [Name('from_parent', Load(), lineno=345, col_offset=32)], [], None, None, lineno=345, col_offset=27), lineno=345, col_offset=8), Expr(Call(Name('prepare', Load(), lineno=346, col_offset=8), [Name('preparation_data', Load(), lineno=346, col_offset=16)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8), Assign([Name('self', Store(), lineno=347, col_offset=8)], Call(Name('load', Load(), lineno=347, col_offset=15), [Name('from_parent', Load(), lineno=347, col_offset=20)], [], None, None, lineno=347, col_offset=15), lineno=347, col_offset=8), Assign([Attribute(Call(Attribute(Name('process', Load(), lineno=348, col_offset=8), 'current_process', Load(), lineno=348, col_offset=8), [], [], None, None, lineno=348, col_offset=8), '_inheriting', Store(), lineno=348, col_offset=8)], Name('False', Load(), lineno=348, col_offset=48), lineno=348, col_offset=8), Expr(Call(Attribute(Name('from_parent', Load(), lineno=350, col_offset=8), 'close', Load(), lineno=350, col_offset=8), [], [], None, None, lineno=350, col_offset=8), lineno=350, col_offset=8), Assign([Name('exitcode', Store(), lineno=352, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=352, col_offset=19), '_bootstrap', Load(), lineno=352, col_offset=19), [], [], None, None, lineno=352, col_offset=19), lineno=352, col_offset=8), Expr(Call(Name('exit', Load(), lineno=353, col_offset=8), [Name('exitcode', Load(), lineno=353, col_offset=13)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8)], [], lineno=334, col_offset=4), FunctionDef('get_preparation_data', arguments([Name('name', Param(), lineno=356, col_offset=29)], None, None, []), [Expr(Str('\n        Return info about parent needed by child to unpickle process object\n        ', lineno=359, col_offset=-1), lineno=359, col_offset=-1), ImportFrom('util', [alias('_logger', None), alias('_log_to_stderr', None)], 1, lineno=360, col_offset=8), Assign([Name('d', Store(), lineno=362, col_offset=8)], Call(Name('dict', Load(), lineno=362, col_offset=12), [], [keyword('name', Name('name', Load(), lineno=363, col_offset=17)), keyword('sys_path', Attribute(Name('sys', Load(), lineno=364, col_offset=21), 'path', Load(), lineno=364, col_offset=21)), keyword('sys_argv', Attribute(Name('sys', Load(), lineno=365, col_offset=21), 'argv', Load(), lineno=365, col_offset=21)), keyword('log_to_stderr', Name('_log_to_stderr', Load(), lineno=366, col_offset=26)), keyword('orig_dir', Attribute(Name('process', Load(), lineno=367, col_offset=21), 'ORIGINAL_DIR', Load(), lineno=367, col_offset=21)), keyword('authkey', Attribute(Call(Attribute(Name('process', Load(), lineno=368, col_offset=20), 'current_process', Load(), lineno=368, col_offset=20), [], [], None, None, lineno=368, col_offset=20), 'authkey', Load(), lineno=368, col_offset=20))], None, None, lineno=362, col_offset=12), lineno=362, col_offset=8), If(Compare(Name('_logger', Load(), lineno=371, col_offset=11), [IsNot()], [Name('None', Load(), lineno=371, col_offset=26)], lineno=371, col_offset=11), [Assign([Subscript(Name('d', Load(), lineno=372, col_offset=12), Index(Str('log_level', lineno=372, col_offset=14)), Store(), lineno=372, col_offset=12)], Call(Attribute(Name('_logger', Load(), lineno=372, col_offset=29), 'getEffectiveLevel', Load(), lineno=372, col_offset=29), [], [], None, None, lineno=372, col_offset=29), lineno=372, col_offset=12)], [], lineno=371, col_offset=8), If(UnaryOp(Not(), Name('WINEXE', Load(), lineno=374, col_offset=15), lineno=374, col_offset=11), [Assign([Name('main_path', Store(), lineno=375, col_offset=12)], Call(Name('getattr', Load(), lineno=375, col_offset=24), [Subscript(Attribute(Name('sys', Load(), lineno=375, col_offset=32), 'modules', Load(), lineno=375, col_offset=32), Index(Str('__main__', lineno=375, col_offset=44)), Load(), lineno=375, col_offset=32), Str('__file__', lineno=375, col_offset=57), Name('None', Load(), lineno=375, col_offset=69)], [], None, None, lineno=375, col_offset=24), lineno=375, col_offset=12), If(BoolOp(And(), [UnaryOp(Not(), Name('main_path', Load(), lineno=376, col_offset=19), lineno=376, col_offset=15), Compare(Subscript(Attribute(Name('sys', Load(), lineno=376, col_offset=33), 'argv', Load(), lineno=376, col_offset=33), Index(Num(0, lineno=376, col_offset=42)), Load(), lineno=376, col_offset=33), [NotIn()], [Tuple([Str('', lineno=376, col_offset=53), Str('-c', lineno=376, col_offset=57)], Load(), lineno=376, col_offset=53)], lineno=376, col_offset=33)], lineno=376, col_offset=15), [Assign([Name('main_path', Store(), lineno=377, col_offset=16)], Subscript(Attribute(Name('sys', Load(), lineno=377, col_offset=28), 'argv', Load(), lineno=377, col_offset=28), Index(Num(0, lineno=377, col_offset=37)), Load(), lineno=377, col_offset=28), lineno=377, col_offset=16)], [], lineno=376, col_offset=12), If(Compare(Name('main_path', Load(), lineno=378, col_offset=15), [IsNot()], [Name('None', Load(), lineno=378, col_offset=32)], lineno=378, col_offset=15), [If(BoolOp(And(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=379, col_offset=23), 'path', Load(), lineno=379, col_offset=23), 'isabs', Load(), lineno=379, col_offset=23), [Name('main_path', Load(), lineno=379, col_offset=37)], [], None, None, lineno=379, col_offset=23), lineno=379, col_offset=19), Compare(Attribute(Name('process', Load(), lineno=380, col_offset=42), 'ORIGINAL_DIR', Load(), lineno=380, col_offset=42), [IsNot()], [Name('None', Load(), lineno=380, col_offset=70)], lineno=380, col_offset=42)], lineno=379, col_offset=19), [Assign([Name('main_path', Store(), lineno=381, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=381, col_offset=32), 'path', Load(), lineno=381, col_offset=32), 'join', Load(), lineno=381, col_offset=32), [Attribute(Name('process', Load(), lineno=381, col_offset=45), 'ORIGINAL_DIR', Load(), lineno=381, col_offset=45), Name('main_path', Load(), lineno=381, col_offset=67)], [], None, None, lineno=381, col_offset=32), lineno=381, col_offset=20)], [], lineno=379, col_offset=16), Assign([Subscript(Name('d', Load(), lineno=382, col_offset=16), Index(Str('main_path', lineno=382, col_offset=18)), Store(), lineno=382, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=382, col_offset=33), 'path', Load(), lineno=382, col_offset=33), 'normpath', Load(), lineno=382, col_offset=33), [Name('main_path', Load(), lineno=382, col_offset=50)], [], None, None, lineno=382, col_offset=33), lineno=382, col_offset=16)], [], lineno=378, col_offset=12)], [], lineno=374, col_offset=8), Return(Name('d', Load(), lineno=384, col_offset=15), lineno=384, col_offset=8)], [], lineno=356, col_offset=4), FunctionDef('reduce_connection', arguments([Name('conn', Param(), lineno=390, col_offset=26)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Name('Popen', Load(), lineno=391, col_offset=15), 'thread_is_spawning', Load(), lineno=391, col_offset=15), [], [], None, None, lineno=391, col_offset=15), lineno=391, col_offset=11), [Raise(Call(Name('RuntimeError', Load(), lineno=392, col_offset=18), [BinOp(Str('By default %s objects can only be shared between processes\nusing inheritance', lineno=393, col_offset=16), Mod(), Attribute(Call(Name('type', Load(), lineno=394, col_offset=38), [Name('conn', Load(), lineno=394, col_offset=43)], [], None, None, lineno=394, col_offset=38), '__name__', Load(), lineno=394, col_offset=38), lineno=393, col_offset=16)], [], None, None, lineno=392, col_offset=18), None, None, lineno=392, col_offset=12)], [], lineno=391, col_offset=8), Return(Tuple([Call(Name('type', Load(), lineno=396, col_offset=15), [Name('conn', Load(), lineno=396, col_offset=20)], [], None, None, lineno=396, col_offset=15), Tuple([Call(Attribute(Name('Popen', Load(), lineno=396, col_offset=28), 'duplicate_for_child', Load(), lineno=396, col_offset=28), [Call(Attribute(Name('conn', Load(), lineno=396, col_offset=54), 'fileno', Load(), lineno=396, col_offset=54), [], [], None, None, lineno=396, col_offset=54)], [], None, None, lineno=396, col_offset=28), Attribute(Name('conn', Load(), lineno=397, col_offset=28), 'readable', Load(), lineno=397, col_offset=28), Attribute(Name('conn', Load(), lineno=397, col_offset=43), 'writable', Load(), lineno=397, col_offset=43)], Load(), lineno=396, col_offset=28)], Load(), lineno=396, col_offset=15), lineno=396, col_offset=8)], [], lineno=390, col_offset=4), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=399, col_offset=4), 'register', Load(), lineno=399, col_offset=4), [Name('Connection', Load(), lineno=399, col_offset=28), Name('reduce_connection', Load(), lineno=399, col_offset=40)], [], None, None, lineno=399, col_offset=4), lineno=399, col_offset=4), Expr(Call(Attribute(Name('ForkingPickler', Load(), lineno=400, col_offset=4), 'register', Load(), lineno=400, col_offset=4), [Name('PipeConnection', Load(), lineno=400, col_offset=28), Name('reduce_connection', Load(), lineno=400, col_offset=44)], [], None, None, lineno=400, col_offset=4), lineno=400, col_offset=4)], lineno=75, col_offset=0), Assign([Name('old_main_modules', Store(), lineno=406, col_offset=0)], List([], Load(), lineno=406, col_offset=19), lineno=406, col_offset=0), FunctionDef('prepare', arguments([Name('data', Param(), lineno=408, col_offset=12)], None, None, []), [Expr(Str('\n    Try to get current process ready to unpickle process object\n    ', lineno=411, col_offset=-1), lineno=411, col_offset=-1), Expr(Call(Attribute(Name('old_main_modules', Load(), lineno=412, col_offset=4), 'append', Load(), lineno=412, col_offset=4), [Subscript(Attribute(Name('sys', Load(), lineno=412, col_offset=28), 'modules', Load(), lineno=412, col_offset=28), Index(Str('__main__', lineno=412, col_offset=40)), Load(), lineno=412, col_offset=28)], [], None, None, lineno=412, col_offset=4), lineno=412, col_offset=4), If(Compare(Str('name', lineno=414, col_offset=7), [In()], [Name('data', Load(), lineno=414, col_offset=17)], lineno=414, col_offset=7), [Assign([Attribute(Call(Attribute(Name('process', Load(), lineno=415, col_offset=8), 'current_process', Load(), lineno=415, col_offset=8), [], [], None, None, lineno=415, col_offset=8), 'name', Store(), lineno=415, col_offset=8)], Subscript(Name('data', Load(), lineno=415, col_offset=41), Index(Str('name', lineno=415, col_offset=46)), Load(), lineno=415, col_offset=41), lineno=415, col_offset=8)], [], lineno=414, col_offset=4), If(Compare(Str('authkey', lineno=417, col_offset=7), [In()], [Name('data', Load(), lineno=417, col_offset=20)], lineno=417, col_offset=7), [Assign([Attribute(Call(Attribute(Name('process', Load(), lineno=418, col_offset=8), 'current_process', Load(), lineno=418, col_offset=8), [], [], None, None, lineno=418, col_offset=8), '_authkey', Store(), lineno=418, col_offset=8)], Subscript(Name('data', Load(), lineno=418, col_offset=45), Index(Str('authkey', lineno=418, col_offset=50)), Load(), lineno=418, col_offset=45), lineno=418, col_offset=8)], [], lineno=417, col_offset=4), If(BoolOp(And(), [Compare(Str('log_to_stderr', lineno=420, col_offset=7), [In()], [Name('data', Load(), lineno=420, col_offset=26)], lineno=420, col_offset=7), Subscript(Name('data', Load(), lineno=420, col_offset=35), Index(Str('log_to_stderr', lineno=420, col_offset=40)), Load(), lineno=420, col_offset=35)], lineno=420, col_offset=7), [Expr(Call(Attribute(Name('util', Load(), lineno=421, col_offset=8), 'log_to_stderr', Load(), lineno=421, col_offset=8), [], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8)], [], lineno=420, col_offset=4), If(Compare(Str('log_level', lineno=423, col_offset=7), [In()], [Name('data', Load(), lineno=423, col_offset=22)], lineno=423, col_offset=7), [Expr(Call(Attribute(Call(Attribute(Name('util', Load(), lineno=424, col_offset=8), 'get_logger', Load(), lineno=424, col_offset=8), [], [], None, None, lineno=424, col_offset=8), 'setLevel', Load(), lineno=424, col_offset=8), [Subscript(Name('data', Load(), lineno=424, col_offset=35), Index(Str('log_level', lineno=424, col_offset=40)), Load(), lineno=424, col_offset=35)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8)], [], lineno=423, col_offset=4), If(Compare(Str('sys_path', lineno=426, col_offset=7), [In()], [Name('data', Load(), lineno=426, col_offset=21)], lineno=426, col_offset=7), [Assign([Attribute(Name('sys', Load(), lineno=427, col_offset=8), 'path', Store(), lineno=427, col_offset=8)], Subscript(Name('data', Load(), lineno=427, col_offset=19), Index(Str('sys_path', lineno=427, col_offset=24)), Load(), lineno=427, col_offset=19), lineno=427, col_offset=8)], [], lineno=426, col_offset=4), If(Compare(Str('sys_argv', lineno=429, col_offset=7), [In()], [Name('data', Load(), lineno=429, col_offset=21)], lineno=429, col_offset=7), [Assign([Attribute(Name('sys', Load(), lineno=430, col_offset=8), 'argv', Store(), lineno=430, col_offset=8)], Subscript(Name('data', Load(), lineno=430, col_offset=19), Index(Str('sys_argv', lineno=430, col_offset=24)), Load(), lineno=430, col_offset=19), lineno=430, col_offset=8)], [], lineno=429, col_offset=4), If(Compare(Str('dir', lineno=432, col_offset=7), [In()], [Name('data', Load(), lineno=432, col_offset=16)], lineno=432, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=433, col_offset=8), 'chdir', Load(), lineno=433, col_offset=8), [Subscript(Name('data', Load(), lineno=433, col_offset=17), Index(Str('dir', lineno=433, col_offset=22)), Load(), lineno=433, col_offset=17)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8)], [], lineno=432, col_offset=4), If(Compare(Str('orig_dir', lineno=435, col_offset=7), [In()], [Name('data', Load(), lineno=435, col_offset=21)], lineno=435, col_offset=7), [Assign([Attribute(Name('process', Load(), lineno=436, col_offset=8), 'ORIGINAL_DIR', Store(), lineno=436, col_offset=8)], Subscript(Name('data', Load(), lineno=436, col_offset=31), Index(Str('orig_dir', lineno=436, col_offset=36)), Load(), lineno=436, col_offset=31), lineno=436, col_offset=8)], [], lineno=435, col_offset=4), If(Compare(Str('main_path', lineno=438, col_offset=7), [In()], [Name('data', Load(), lineno=438, col_offset=22)], lineno=438, col_offset=7), [Assign([Name('main_path', Store(), lineno=439, col_offset=8)], Subscript(Name('data', Load(), lineno=439, col_offset=20), Index(Str('main_path', lineno=439, col_offset=25)), Load(), lineno=439, col_offset=20), lineno=439, col_offset=8), Assign([Name('main_name', Store(), lineno=440, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=440, col_offset=20), 'path', Load(), lineno=440, col_offset=20), 'splitext', Load(), lineno=440, col_offset=20), [Call(Attribute(Attribute(Name('os', Load(), lineno=440, col_offset=37), 'path', Load(), lineno=440, col_offset=37), 'basename', Load(), lineno=440, col_offset=37), [Name('main_path', Load(), lineno=440, col_offset=54)], [], None, None, lineno=440, col_offset=37)], [], None, None, lineno=440, col_offset=20), Index(Num(0, lineno=440, col_offset=66)), Load(), lineno=440, col_offset=20), lineno=440, col_offset=8), If(Compare(Name('main_name', Load(), lineno=441, col_offset=11), [Eq()], [Str('__init__', lineno=441, col_offset=24)], lineno=441, col_offset=11), [Assign([Name('main_name', Store(), lineno=442, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=442, col_offset=24), 'path', Load(), lineno=442, col_offset=24), 'basename', Load(), lineno=442, col_offset=24), [Call(Attribute(Attribute(Name('os', Load(), lineno=442, col_offset=41), 'path', Load(), lineno=442, col_offset=41), 'dirname', Load(), lineno=442, col_offset=41), [Name('main_path', Load(), lineno=442, col_offset=57)], [], None, None, lineno=442, col_offset=41)], [], None, None, lineno=442, col_offset=24), lineno=442, col_offset=12)], [], lineno=441, col_offset=8), If(Compare(Name('main_name', Load(), lineno=444, col_offset=11), [NotEq()], [Str('ipython', lineno=444, col_offset=24)], lineno=444, col_offset=11), [Import([alias('imp', None)], lineno=445, col_offset=12), If(Compare(Name('main_path', Load(), lineno=447, col_offset=15), [Is()], [Name('None', Load(), lineno=447, col_offset=28)], lineno=447, col_offset=15), [Assign([Name('dirs', Store(), lineno=448, col_offset=16)], Name('None', Load(), lineno=448, col_offset=23), lineno=448, col_offset=16)], [If(Call(Attribute(Call(Attribute(Attribute(Name('os', Load(), lineno=449, col_offset=17), 'path', Load(), lineno=449, col_offset=17), 'basename', Load(), lineno=449, col_offset=17), [Name('main_path', Load(), lineno=449, col_offset=34)], [], None, None, lineno=449, col_offset=17), 'startswith', Load(), lineno=449, col_offset=17), [Str('__init__.py', lineno=449, col_offset=56)], [], None, None, lineno=449, col_offset=17), [Assign([Name('dirs', Store(), lineno=450, col_offset=16)], List([Call(Attribute(Attribute(Name('os', Load(), lineno=450, col_offset=24), 'path', Load(), lineno=450, col_offset=24), 'dirname', Load(), lineno=450, col_offset=24), [Call(Attribute(Attribute(Name('os', Load(), lineno=450, col_offset=40), 'path', Load(), lineno=450, col_offset=40), 'dirname', Load(), lineno=450, col_offset=40), [Name('main_path', Load(), lineno=450, col_offset=56)], [], None, None, lineno=450, col_offset=40)], [], None, None, lineno=450, col_offset=24)], Load(), lineno=450, col_offset=23), lineno=450, col_offset=16)], [Assign([Name('dirs', Store(), lineno=452, col_offset=16)], List([Call(Attribute(Attribute(Name('os', Load(), lineno=452, col_offset=24), 'path', Load(), lineno=452, col_offset=24), 'dirname', Load(), lineno=452, col_offset=24), [Name('main_path', Load(), lineno=452, col_offset=40)], [], None, None, lineno=452, col_offset=24)], Load(), lineno=452, col_offset=23), lineno=452, col_offset=16)], lineno=449, col_offset=17)], lineno=447, col_offset=12), Assert(Compare(Name('main_name', Load(), lineno=454, col_offset=19), [NotIn()], [Attribute(Name('sys', Load(), lineno=454, col_offset=36), 'modules', Load(), lineno=454, col_offset=36)], lineno=454, col_offset=19), Name('main_name', Load(), lineno=454, col_offset=49), lineno=454, col_offset=12), Assign([Tuple([Name('file', Store(), lineno=455, col_offset=12), Name('path_name', Store(), lineno=455, col_offset=18), Name('etc', Store(), lineno=455, col_offset=29)], Store(), lineno=455, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=455, col_offset=35), 'find_module', Load(), lineno=455, col_offset=35), [Name('main_name', Load(), lineno=455, col_offset=51), Name('dirs', Load(), lineno=455, col_offset=62)], [], None, None, lineno=455, col_offset=35), lineno=455, col_offset=12), TryFinally([Assign([Name('main_module', Store(), lineno=460, col_offset=16)], Call(Attribute(Name('imp', Load(), lineno=460, col_offset=30), 'load_module', Load(), lineno=460, col_offset=30), [Str('__parents_main__', lineno=461, col_offset=20), Name('file', Load(), lineno=461, col_offset=40), Name('path_name', Load(), lineno=461, col_offset=46), Name('etc', Load(), lineno=461, col_offset=57)], [], None, None, lineno=460, col_offset=30), lineno=460, col_offset=16)], [If(Name('file', Load(), lineno=464, col_offset=19), [Expr(Call(Attribute(Name('file', Load(), lineno=465, col_offset=20), 'close', Load(), lineno=465, col_offset=20), [], [], None, None, lineno=465, col_offset=20), lineno=465, col_offset=20)], [], lineno=464, col_offset=16)], lineno=456, col_offset=12), Assign([Subscript(Attribute(Name('sys', Load(), lineno=467, col_offset=12), 'modules', Load(), lineno=467, col_offset=12), Index(Str('__main__', lineno=467, col_offset=24)), Store(), lineno=467, col_offset=12)], Name('main_module', Load(), lineno=467, col_offset=38), lineno=467, col_offset=12), Assign([Attribute(Name('main_module', Load(), lineno=468, col_offset=12), '__name__', Store(), lineno=468, col_offset=12)], Str('__main__', lineno=468, col_offset=35), lineno=468, col_offset=12), For(Name('obj', Store(), lineno=473, col_offset=16), Call(Attribute(Attribute(Name('main_module', Load(), lineno=473, col_offset=23), '__dict__', Load(), lineno=473, col_offset=23), 'values', Load(), lineno=473, col_offset=23), [], [], None, None, lineno=473, col_offset=23), [TryExcept([If(Compare(Attribute(Name('obj', Load(), lineno=475, col_offset=23), '__module__', Load(), lineno=475, col_offset=23), [Eq()], [Str('__parents_main__', lineno=475, col_offset=41)], lineno=475, col_offset=23), [Assign([Attribute(Name('obj', Load(), lineno=476, col_offset=24), '__module__', Store(), lineno=476, col_offset=24)], Str('__main__', lineno=476, col_offset=41), lineno=476, col_offset=24)], [], lineno=475, col_offset=20)], [ExceptHandler(Name('Exception', Load(), lineno=477, col_offset=23), None, [Pass( lineno=478, col_offset=20)], lineno=477, col_offset=16)], [], lineno=474, col_offset=16)], [], lineno=473, col_offset=12)], [], lineno=444, col_offset=8)], [], lineno=438, col_offset=4)], [], lineno=408, col_offset=0)])
