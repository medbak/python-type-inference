Module([Import([alias('unittest', None), alias('string', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None), alias('string_tests', None)], 0, lineno=2, col_offset=0), ImportFrom('UserList', [alias('UserList', None)], 0, lineno=3, col_offset=0), ClassDef('StringTest', [Attribute(Name('string_tests', Load(), lineno=6, col_offset=4), 'CommonTest', Load(), lineno=6, col_offset=4), Attribute(Name('string_tests', Load(), lineno=7, col_offset=4), 'MixinStrStringUserStringTest', Load(), lineno=7, col_offset=4)], [Assign([Name('type2test', Store(), lineno=10, col_offset=4)], Name('str', Load(), lineno=10, col_offset=16), lineno=10, col_offset=4), FunctionDef('checkequal', arguments([Name('self', Param(), lineno=12, col_offset=19), Name('result', Param(), lineno=12, col_offset=25), Name('object', Param(), lineno=12, col_offset=33), Name('methodname', Param(), lineno=12, col_offset=41)], 'args', None, []), [Assign([Name('realresult', Store(), lineno=13, col_offset=8)], Call(Call(Name('getattr', Load(), lineno=13, col_offset=21), [Name('string', Load(), lineno=13, col_offset=29), Name('methodname', Load(), lineno=13, col_offset=37)], [], None, None, lineno=13, col_offset=21), [Name('object', Load(), lineno=13, col_offset=49)], [], Name('args', Load(), lineno=13, col_offset=58), None, lineno=13, col_offset=21), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertEqual', Load(), lineno=14, col_offset=8), [Name('result', Load(), lineno=15, col_offset=12), Name('realresult', Load(), lineno=16, col_offset=12)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('checkraises', arguments([Name('self', Param(), lineno=19, col_offset=20), Name('exc', Param(), lineno=19, col_offset=26), Name('object', Param(), lineno=19, col_offset=31), Name('methodname', Param(), lineno=19, col_offset=39)], 'args', None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertRaises', Load(), lineno=20, col_offset=8), [Name('exc', Load(), lineno=21, col_offset=12), Call(Name('getattr', Load(), lineno=22, col_offset=12), [Name('string', Load(), lineno=22, col_offset=20), Name('methodname', Load(), lineno=22, col_offset=28)], [], None, None, lineno=22, col_offset=12), Name('object', Load(), lineno=23, col_offset=12)], [], Name('args', Load(), lineno=24, col_offset=13), None, lineno=20, col_offset=8), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('checkcall', arguments([Name('self', Param(), lineno=27, col_offset=18), Name('object', Param(), lineno=27, col_offset=24), Name('methodname', Param(), lineno=27, col_offset=32)], 'args', None, []), [Expr(Call(Call(Name('getattr', Load(), lineno=28, col_offset=8), [Name('string', Load(), lineno=28, col_offset=16), Name('methodname', Load(), lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=8), [Name('object', Load(), lineno=28, col_offset=36)], [], Name('args', Load(), lineno=28, col_offset=45), None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=27, col_offset=4), FunctionDef('test_join', arguments([Name('self', Param(), lineno=30, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'checkequal', Load(), lineno=33, col_offset=8), [Str('a b c d', lineno=33, col_offset=24), List([Str('a', lineno=33, col_offset=36), Str('b', lineno=33, col_offset=41), Str('c', lineno=33, col_offset=46), Str('d', lineno=33, col_offset=51)], Load(), lineno=33, col_offset=35), Str('join', lineno=33, col_offset=57), Str(' ', lineno=33, col_offset=65)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'checkequal', Load(), lineno=34, col_offset=8), [Str('abcd', lineno=34, col_offset=24), Tuple([Str('a', lineno=34, col_offset=33), Str('b', lineno=34, col_offset=38), Str('c', lineno=34, col_offset=43), Str('d', lineno=34, col_offset=48)], Load(), lineno=34, col_offset=33), Str('join', lineno=34, col_offset=54), Str('', lineno=34, col_offset=62)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'checkequal', Load(), lineno=35, col_offset=8), [Str('w x y z', lineno=35, col_offset=24), Call(Attribute(Name('string_tests', Load(), lineno=35, col_offset=35), 'Sequence', Load(), lineno=35, col_offset=35), [], [], None, None, lineno=35, col_offset=35), Str('join', lineno=35, col_offset=60), Str(' ', lineno=35, col_offset=68)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'checkequal', Load(), lineno=36, col_offset=8), [Str('abc', lineno=36, col_offset=24), Tuple([Str('abc', lineno=36, col_offset=32)], Load(), lineno=36, col_offset=32), Str('join', lineno=36, col_offset=41), Str('a', lineno=36, col_offset=49)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'checkequal', Load(), lineno=37, col_offset=8), [Str('z', lineno=37, col_offset=24), Call(Name('UserList', Load(), lineno=37, col_offset=29), [List([Str('z', lineno=37, col_offset=39)], Load(), lineno=37, col_offset=38)], [], None, None, lineno=37, col_offset=29), Str('join', lineno=37, col_offset=46), Str('a', lineno=37, col_offset=54)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=38, col_offset=11), 'have_unicode', Load(), lineno=38, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'checkequal', Load(), lineno=39, col_offset=12), [Call(Name('unicode', Load(), lineno=39, col_offset=28), [Str('a.b.c', lineno=39, col_offset=36)], [], None, None, lineno=39, col_offset=28), List([Str('a', lineno=39, col_offset=47), Str('b', lineno=39, col_offset=52), Str('c', lineno=39, col_offset=57)], Load(), lineno=39, col_offset=46), Str('join', lineno=39, col_offset=63), Call(Name('unicode', Load(), lineno=39, col_offset=71), [Str('.', lineno=39, col_offset=79)], [], None, None, lineno=39, col_offset=71)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=12), 'checkequal', Load(), lineno=40, col_offset=12), [Call(Name('unicode', Load(), lineno=40, col_offset=28), [Str('a.b.c', lineno=40, col_offset=36)], [], None, None, lineno=40, col_offset=28), List([Call(Name('unicode', Load(), lineno=40, col_offset=47), [Str('a', lineno=40, col_offset=55)], [], None, None, lineno=40, col_offset=47), Str('b', lineno=40, col_offset=61), Str('c', lineno=40, col_offset=66)], Load(), lineno=40, col_offset=46), Str('join', lineno=40, col_offset=72), Str('.', lineno=40, col_offset=80)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=12), 'checkequal', Load(), lineno=41, col_offset=12), [Call(Name('unicode', Load(), lineno=41, col_offset=28), [Str('a.b.c', lineno=41, col_offset=36)], [], None, None, lineno=41, col_offset=28), List([Str('a', lineno=41, col_offset=47), Call(Name('unicode', Load(), lineno=41, col_offset=52), [Str('b', lineno=41, col_offset=60)], [], None, None, lineno=41, col_offset=52), Str('c', lineno=41, col_offset=66)], Load(), lineno=41, col_offset=46), Str('join', lineno=41, col_offset=72), Str('.', lineno=41, col_offset=80)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'checkequal', Load(), lineno=42, col_offset=12), [Call(Name('unicode', Load(), lineno=42, col_offset=28), [Str('a.b.c', lineno=42, col_offset=36)], [], None, None, lineno=42, col_offset=28), List([Str('a', lineno=42, col_offset=47), Str('b', lineno=42, col_offset=52), Call(Name('unicode', Load(), lineno=42, col_offset=57), [Str('c', lineno=42, col_offset=65)], [], None, None, lineno=42, col_offset=57)], Load(), lineno=42, col_offset=46), Str('join', lineno=42, col_offset=72), Str('.', lineno=42, col_offset=80)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=12), 'checkraises', Load(), lineno=43, col_offset=12), [Name('TypeError', Load(), lineno=43, col_offset=29), List([Str('a', lineno=43, col_offset=41), Call(Name('unicode', Load(), lineno=43, col_offset=46), [Str('b', lineno=43, col_offset=54)], [], None, None, lineno=43, col_offset=46), Num(3, lineno=43, col_offset=60)], Load(), lineno=43, col_offset=40), Str('join', lineno=43, col_offset=64), Str('.', lineno=43, col_offset=72)], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=12)], [], lineno=38, col_offset=8), For(Name('i', Store(), lineno=44, col_offset=12), List([Num(5, lineno=44, col_offset=18), Num(25, lineno=44, col_offset=21), Num(125, lineno=44, col_offset=25)], Load(), lineno=44, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=12), 'checkequal', Load(), lineno=45, col_offset=12), [Subscript(BinOp(BinOp(BinOp(Str('a', lineno=46, col_offset=19), Mult(), Name('i', Load(), lineno=46, col_offset=25), lineno=46, col_offset=19), Add(), Str('-', lineno=46, col_offset=30), lineno=46, col_offset=18), Mult(), Name('i', Load(), lineno=46, col_offset=37), lineno=46, col_offset=17), Slice(None, Num(-1, lineno=46, col_offset=42), None), Load(), lineno=46, col_offset=17), BinOp(List([BinOp(Str('a', lineno=47, col_offset=17), Mult(), Name('i', Load(), lineno=47, col_offset=23), lineno=47, col_offset=17)], Load(), lineno=47, col_offset=16), Mult(), Name('i', Load(), lineno=47, col_offset=28), lineno=47, col_offset=16), Str('join', lineno=47, col_offset=31), Str('-', lineno=47, col_offset=39)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=12), 'checkequal', Load(), lineno=48, col_offset=12), [Subscript(BinOp(BinOp(BinOp(Str('a', lineno=49, col_offset=19), Mult(), Name('i', Load(), lineno=49, col_offset=25), lineno=49, col_offset=19), Add(), Str('-', lineno=49, col_offset=30), lineno=49, col_offset=18), Mult(), Name('i', Load(), lineno=49, col_offset=37), lineno=49, col_offset=17), Slice(None, Num(-1, lineno=49, col_offset=42), None), Load(), lineno=49, col_offset=17), BinOp(Tuple([BinOp(Str('a', lineno=50, col_offset=17), Mult(), Name('i', Load(), lineno=50, col_offset=23), lineno=50, col_offset=17)], Load(), lineno=50, col_offset=17), Mult(), Name('i', Load(), lineno=50, col_offset=29), lineno=50, col_offset=16), Str('join', lineno=50, col_offset=32), Str('-', lineno=50, col_offset=40)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=12)], [], lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'checkraises', Load(), lineno=52, col_offset=8), [Name('TypeError', Load(), lineno=52, col_offset=25), Call(Attribute(Name('string_tests', Load(), lineno=52, col_offset=36), 'BadSeq1', Load(), lineno=52, col_offset=36), [], [], None, None, lineno=52, col_offset=36), Str('join', lineno=52, col_offset=60), Str(' ', lineno=52, col_offset=68)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'checkequal', Load(), lineno=53, col_offset=8), [Str('a b c', lineno=53, col_offset=24), Call(Attribute(Name('string_tests', Load(), lineno=53, col_offset=33), 'BadSeq2', Load(), lineno=53, col_offset=33), [], [], None, None, lineno=53, col_offset=33), Str('join', lineno=53, col_offset=57), Str(' ', lineno=53, col_offset=65)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), TryExcept([FunctionDef('f', arguments([], None, None, []), [Expr(Yield(BinOp(Num(4, lineno=56, col_offset=22), Add(), Str('', lineno=56, col_offset=26), lineno=56, col_offset=22), lineno=56, col_offset=16), lineno=56, col_offset=16)], [], lineno=55, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('self', Load(), lineno=57, col_offset=12), 'fixtype', Load(), lineno=57, col_offset=12), [Str(' ', lineno=57, col_offset=25)], [], None, None, lineno=57, col_offset=12), 'join', Load(), lineno=57, col_offset=12), [Call(Name('f', Load(), lineno=57, col_offset=35), [], [], None, None, lineno=57, col_offset=35)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=58, col_offset=15), Name('e', Store(), lineno=58, col_offset=26), [If(Compare(Str('+', lineno=59, col_offset=15), [NotIn()], [Call(Name('str', Load(), lineno=59, col_offset=26), [Name('e', Load(), lineno=59, col_offset=30)], [], None, None, lineno=59, col_offset=26)], lineno=59, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=16), 'fail', Load(), lineno=60, col_offset=16), [Str('join() ate exception message', lineno=60, col_offset=26)], [], None, None, lineno=60, col_offset=16), lineno=60, col_offset=16)], [], lineno=59, col_offset=12)], lineno=58, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=12), 'fail', Load(), lineno=62, col_offset=12), [Str('exception not raised', lineno=62, col_offset=22)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12)], lineno=54, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=5, col_offset=0), ClassDef('ModuleTest', [Attribute(Name('unittest', Load(), lineno=67, col_offset=17), 'TestCase', Load(), lineno=67, col_offset=17)], [FunctionDef('test_attrs', arguments([Name('self', Param(), lineno=69, col_offset=19)], None, None, []), [Expr(Attribute(Name('string', Load(), lineno=70, col_offset=8), 'whitespace', Load(), lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=71, col_offset=8), 'lowercase', Load(), lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=72, col_offset=8), 'uppercase', Load(), lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=73, col_offset=8), 'letters', Load(), lineno=73, col_offset=8), lineno=73, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=74, col_offset=8), 'digits', Load(), lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=75, col_offset=8), 'hexdigits', Load(), lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=76, col_offset=8), 'octdigits', Load(), lineno=76, col_offset=8), lineno=76, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=77, col_offset=8), 'punctuation', Load(), lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Attribute(Name('string', Load(), lineno=78, col_offset=8), 'printable', Load(), lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('test_atoi', arguments([Name('self', Param(), lineno=80, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertEqual', Load(), lineno=81, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=81, col_offset=25), 'atoi', Load(), lineno=81, col_offset=25), [Str(' 1 ', lineno=81, col_offset=37)], [], None, None, lineno=81, col_offset=25), Num(1, lineno=81, col_offset=45)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertRaises', Load(), lineno=82, col_offset=8), [Name('ValueError', Load(), lineno=82, col_offset=26), Attribute(Name('string', Load(), lineno=82, col_offset=38), 'atoi', Load(), lineno=82, col_offset=38), Str(' 1x', lineno=82, col_offset=51)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'assertRaises', Load(), lineno=83, col_offset=8), [Name('ValueError', Load(), lineno=83, col_offset=26), Attribute(Name('string', Load(), lineno=83, col_offset=38), 'atoi', Load(), lineno=83, col_offset=38), Str(' x1 ', lineno=83, col_offset=51)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('test_atol', arguments([Name('self', Param(), lineno=85, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'assertEqual', Load(), lineno=86, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=86, col_offset=25), 'atol', Load(), lineno=86, col_offset=25), [Str('  1  ', lineno=86, col_offset=37)], [], None, None, lineno=86, col_offset=25), Num(1L, lineno=86, col_offset=47)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'assertRaises', Load(), lineno=87, col_offset=8), [Name('ValueError', Load(), lineno=87, col_offset=26), Attribute(Name('string', Load(), lineno=87, col_offset=38), 'atol', Load(), lineno=87, col_offset=38), Str('  1x ', lineno=87, col_offset=51)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertRaises', Load(), lineno=88, col_offset=8), [Name('ValueError', Load(), lineno=88, col_offset=26), Attribute(Name('string', Load(), lineno=88, col_offset=38), 'atol', Load(), lineno=88, col_offset=38), Str('  x1 ', lineno=88, col_offset=51)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('test_atof', arguments([Name('self', Param(), lineno=90, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertAlmostEqual', Load(), lineno=91, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=91, col_offset=31), 'atof', Load(), lineno=91, col_offset=31), [Str('  1  ', lineno=91, col_offset=43)], [], None, None, lineno=91, col_offset=31), Num(1.0, lineno=91, col_offset=53)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertRaises', Load(), lineno=92, col_offset=8), [Name('ValueError', Load(), lineno=92, col_offset=26), Attribute(Name('string', Load(), lineno=92, col_offset=38), 'atof', Load(), lineno=92, col_offset=38), Str('  1x ', lineno=92, col_offset=51)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=8), 'assertRaises', Load(), lineno=93, col_offset=8), [Name('ValueError', Load(), lineno=93, col_offset=26), Attribute(Name('string', Load(), lineno=93, col_offset=38), 'atof', Load(), lineno=93, col_offset=38), Str('  x1 ', lineno=93, col_offset=51)], [], None, None, lineno=93, col_offset=8), lineno=93, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('test_maketrans', arguments([Name('self', Param(), lineno=95, col_offset=23)], None, None, []), [Assign([Name('transtable', Store(), lineno=96, col_offset=8)], Str('\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`xyzdefghijklmnopqrstuvwxyz{|}~\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff', lineno=96, col_offset=21), lineno=96, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'assertEqual', Load(), lineno=98, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=98, col_offset=25), 'maketrans', Load(), lineno=98, col_offset=25), [Str('abc', lineno=98, col_offset=42), Str('xyz', lineno=98, col_offset=49)], [], None, None, lineno=98, col_offset=25), Name('transtable', Load(), lineno=98, col_offset=57)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=8), 'assertRaises', Load(), lineno=99, col_offset=8), [Name('ValueError', Load(), lineno=99, col_offset=26), Attribute(Name('string', Load(), lineno=99, col_offset=38), 'maketrans', Load(), lineno=99, col_offset=38), Str('abc', lineno=99, col_offset=56), Str('xyzq', lineno=99, col_offset=63)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('test_capwords', arguments([Name('self', Param(), lineno=101, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertEqual', Load(), lineno=102, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=102, col_offset=25), 'capwords', Load(), lineno=102, col_offset=25), [Str('abc def ghi', lineno=102, col_offset=41)], [], None, None, lineno=102, col_offset=25), Str('Abc Def Ghi', lineno=102, col_offset=57)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=8), 'assertEqual', Load(), lineno=103, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=103, col_offset=25), 'capwords', Load(), lineno=103, col_offset=25), [Str('abc\tdef\nghi', lineno=103, col_offset=41)], [], None, None, lineno=103, col_offset=25), Str('Abc Def Ghi', lineno=103, col_offset=59)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertEqual', Load(), lineno=104, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=104, col_offset=25), 'capwords', Load(), lineno=104, col_offset=25), [Str('abc\t   def  \nghi', lineno=104, col_offset=41)], [], None, None, lineno=104, col_offset=25), Str('Abc Def Ghi', lineno=104, col_offset=64)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'assertEqual', Load(), lineno=105, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=105, col_offset=25), 'capwords', Load(), lineno=105, col_offset=25), [Str('ABC DEF GHI', lineno=105, col_offset=41)], [], None, None, lineno=105, col_offset=25), Str('Abc Def Ghi', lineno=105, col_offset=57)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=8), 'assertEqual', Load(), lineno=106, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=106, col_offset=25), 'capwords', Load(), lineno=106, col_offset=25), [Str('ABC-DEF-GHI', lineno=106, col_offset=41), Str('-', lineno=106, col_offset=56)], [], None, None, lineno=106, col_offset=25), Str('Abc-Def-Ghi', lineno=106, col_offset=62)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=107, col_offset=25), 'capwords', Load(), lineno=107, col_offset=25), [Str('ABC-def DEF-ghi GHI', lineno=107, col_offset=41)], [], None, None, lineno=107, col_offset=25), Str('Abc-def Def-ghi Ghi', lineno=107, col_offset=65)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertEqual', Load(), lineno=108, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=108, col_offset=25), 'capwords', Load(), lineno=108, col_offset=25), [Str('   aBc  DeF   ', lineno=108, col_offset=41)], [], None, None, lineno=108, col_offset=25), Str('Abc Def', lineno=108, col_offset=60)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'assertEqual', Load(), lineno=109, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=109, col_offset=25), 'capwords', Load(), lineno=109, col_offset=25), [Str('\taBc\tDeF\t', lineno=109, col_offset=41)], [], None, None, lineno=109, col_offset=25), Str('Abc Def', lineno=109, col_offset=58)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertEqual', Load(), lineno=110, col_offset=8), [Call(Attribute(Name('string', Load(), lineno=110, col_offset=25), 'capwords', Load(), lineno=110, col_offset=25), [Str('\taBc\tDeF\t', lineno=110, col_offset=41), Str('\t', lineno=110, col_offset=57)], [], None, None, lineno=110, col_offset=25), Str('\tAbc\tDef\t', lineno=110, col_offset=64)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('test_formatter', arguments([Name('self', Param(), lineno=112, col_offset=23)], None, None, []), [Assign([Name('fmt', Store(), lineno=113, col_offset=8)], Call(Attribute(Name('string', Load(), lineno=113, col_offset=14), 'Formatter', Load(), lineno=113, col_offset=14), [], [], None, None, lineno=113, col_offset=14), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=8), 'assertEqual', Load(), lineno=114, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=114, col_offset=25), 'format', Load(), lineno=114, col_offset=25), [Str('foo', lineno=114, col_offset=36)], [], None, None, lineno=114, col_offset=25), Str('foo', lineno=114, col_offset=44)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=8), 'assertEqual', Load(), lineno=116, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=116, col_offset=25), 'format', Load(), lineno=116, col_offset=25), [Str('foo{0}', lineno=116, col_offset=36), Str('bar', lineno=116, col_offset=46)], [], None, None, lineno=116, col_offset=25), Str('foobar', lineno=116, col_offset=54)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertEqual', Load(), lineno=117, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=117, col_offset=25), 'format', Load(), lineno=117, col_offset=25), [Str('foo{1}{0}-{1}', lineno=117, col_offset=36), Str('bar', lineno=117, col_offset=53), Num(6, lineno=117, col_offset=60)], [], None, None, lineno=117, col_offset=25), Str('foo6bar-6', lineno=117, col_offset=64)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'assertEqual', Load(), lineno=118, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=118, col_offset=25), 'format', Load(), lineno=118, col_offset=25), [Str('-{arg!r}-', lineno=118, col_offset=36)], [keyword('arg', Str('test', lineno=118, col_offset=53))], None, None, lineno=118, col_offset=25), Str("-'test'-", lineno=118, col_offset=62)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), ClassDef('NamespaceFormatter', [Attribute(Name('string', Load(), lineno=121, col_offset=33), 'Formatter', Load(), lineno=121, col_offset=33)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=122, col_offset=25), Name('namespace', Param(), lineno=122, col_offset=31)], None, None, [Dict([], [], lineno=122, col_offset=41)]), [Expr(Call(Attribute(Attribute(Name('string', Load(), lineno=123, col_offset=16), 'Formatter', Load(), lineno=123, col_offset=16), '__init__', Load(), lineno=123, col_offset=16), [Name('self', Load(), lineno=123, col_offset=42)], [], None, None, lineno=123, col_offset=16), lineno=123, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=124, col_offset=16), 'namespace', Store(), lineno=124, col_offset=16)], Name('namespace', Load(), lineno=124, col_offset=33), lineno=124, col_offset=16)], [], lineno=122, col_offset=12), FunctionDef('get_value', arguments([Name('self', Param(), lineno=126, col_offset=26), Name('key', Param(), lineno=126, col_offset=32), Name('args', Param(), lineno=126, col_offset=37), Name('kwds', Param(), lineno=126, col_offset=43)], None, None, []), [If(Call(Name('isinstance', Load(), lineno=127, col_offset=19), [Name('key', Load(), lineno=127, col_offset=30), Name('str', Load(), lineno=127, col_offset=35)], [], None, None, lineno=127, col_offset=19), [TryExcept([Return(Subscript(Name('kwds', Load(), lineno=130, col_offset=31), Index(Name('key', Load(), lineno=130, col_offset=36)), Load(), lineno=130, col_offset=31), lineno=130, col_offset=24)], [ExceptHandler(Name('KeyError', Load(), lineno=131, col_offset=27), None, [Return(Subscript(Attribute(Name('self', Load(), lineno=132, col_offset=31), 'namespace', Load(), lineno=132, col_offset=31), Index(Name('key', Load(), lineno=132, col_offset=46)), Load(), lineno=132, col_offset=31), lineno=132, col_offset=24)], lineno=131, col_offset=20)], [], lineno=128, col_offset=20)], [Expr(Call(Attribute(Attribute(Name('string', Load(), lineno=134, col_offset=20), 'Formatter', Load(), lineno=134, col_offset=20), 'get_value', Load(), lineno=134, col_offset=20), [Name('key', Load(), lineno=134, col_offset=47), Name('args', Load(), lineno=134, col_offset=52), Name('kwds', Load(), lineno=134, col_offset=58)], [], None, None, lineno=134, col_offset=20), lineno=134, col_offset=20)], lineno=127, col_offset=16)], [], lineno=126, col_offset=12)], [], lineno=121, col_offset=8), Assign([Name('fmt', Store(), lineno=136, col_offset=8)], Call(Name('NamespaceFormatter', Load(), lineno=136, col_offset=14), [Dict([Str('greeting', lineno=136, col_offset=34)], [Str('hello', lineno=136, col_offset=45)], lineno=136, col_offset=33)], [], None, None, lineno=136, col_offset=14), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertEqual', Load(), lineno=137, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=137, col_offset=25), 'format', Load(), lineno=137, col_offset=25), [Str('{greeting}, world!', lineno=137, col_offset=36)], [], None, None, lineno=137, col_offset=25), Str('hello, world!', lineno=137, col_offset=59)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), ClassDef('CallFormatter', [Attribute(Name('string', Load(), lineno=141, col_offset=28), 'Formatter', Load(), lineno=141, col_offset=28)], [FunctionDef('format_field', arguments([Name('self', Param(), lineno=142, col_offset=29), Name('value', Param(), lineno=142, col_offset=35), Name('format_spec', Param(), lineno=142, col_offset=42)], None, None, []), [Return(Call(Name('format', Load(), lineno=143, col_offset=23), [Call(Name('value', Load(), lineno=143, col_offset=30), [], [], None, None, lineno=143, col_offset=30), Name('format_spec', Load(), lineno=143, col_offset=39)], [], None, None, lineno=143, col_offset=23), lineno=143, col_offset=16)], [], lineno=142, col_offset=12)], [], lineno=141, col_offset=8), Assign([Name('fmt', Store(), lineno=145, col_offset=8)], Call(Name('CallFormatter', Load(), lineno=145, col_offset=14), [], [], None, None, lineno=145, col_offset=14), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertEqual', Load(), lineno=146, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=146, col_offset=25), 'format', Load(), lineno=146, col_offset=25), [Str('*{0}*', lineno=146, col_offset=36), Lambda(arguments([], None, None, []), Str('result', lineno=146, col_offset=54), lineno=146, col_offset=45)], [], None, None, lineno=146, col_offset=25), Str('*result*', lineno=146, col_offset=65)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8), ClassDef('XFormatter', [Attribute(Name('string', Load(), lineno=150, col_offset=25), 'Formatter', Load(), lineno=150, col_offset=25)], [FunctionDef('convert_field', arguments([Name('self', Param(), lineno=151, col_offset=30), Name('value', Param(), lineno=151, col_offset=36), Name('conversion', Param(), lineno=151, col_offset=43)], None, None, []), [If(Compare(Name('conversion', Load(), lineno=152, col_offset=19), [Eq()], [Str('x', lineno=152, col_offset=33)], lineno=152, col_offset=19), [Return(Name('None', Load(), lineno=153, col_offset=27), lineno=153, col_offset=20)], [], lineno=152, col_offset=16), Return(Call(Attribute(Call(Name('super', Load(), lineno=154, col_offset=23), [Name('XFormatter', Load(), lineno=154, col_offset=29), Name('self', Load(), lineno=154, col_offset=41)], [], None, None, lineno=154, col_offset=23), 'convert_field', Load(), lineno=154, col_offset=23), [Name('value', Load(), lineno=154, col_offset=61), Name('conversion', Load(), lineno=154, col_offset=68)], [], None, None, lineno=154, col_offset=23), lineno=154, col_offset=16)], [], lineno=151, col_offset=12)], [], lineno=150, col_offset=8), Assign([Name('fmt', Store(), lineno=156, col_offset=8)], Call(Name('XFormatter', Load(), lineno=156, col_offset=14), [], [], None, None, lineno=156, col_offset=14), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertEqual', Load(), lineno=157, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=157, col_offset=25), 'format', Load(), lineno=157, col_offset=25), [Str('{0!r}:{0!x}', lineno=157, col_offset=36), Str('foo', lineno=157, col_offset=51), Str('foo', lineno=157, col_offset=58)], [], None, None, lineno=157, col_offset=25), Str("'foo':None", lineno=157, col_offset=66)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), ClassDef('BarFormatter', [Attribute(Name('string', Load(), lineno=161, col_offset=27), 'Formatter', Load(), lineno=161, col_offset=27)], [FunctionDef('parse', arguments([Name('self', Param(), lineno=164, col_offset=22), Name('format_string', Param(), lineno=164, col_offset=28)], None, None, []), [For(Name('field', Store(), lineno=165, col_offset=20), Call(Attribute(Name('format_string', Load(), lineno=165, col_offset=29), 'split', Load(), lineno=165, col_offset=29), [Str('|', lineno=165, col_offset=49)], [], None, None, lineno=165, col_offset=29), [If(Compare(Subscript(Name('field', Load(), lineno=166, col_offset=23), Index(Num(0, lineno=166, col_offset=29)), Load(), lineno=166, col_offset=23), [Eq()], [Str('+', lineno=166, col_offset=35)], lineno=166, col_offset=23), [Assign([Tuple([Name('field_name', Store(), lineno=168, col_offset=24), Name('_', Store(), lineno=168, col_offset=36), Name('format_spec', Store(), lineno=168, col_offset=39)], Store(), lineno=168, col_offset=24)], Call(Attribute(Subscript(Name('field', Load(), lineno=168, col_offset=53), Slice(Num(1, lineno=168, col_offset=59), None, None), Load(), lineno=168, col_offset=53), 'partition', Load(), lineno=168, col_offset=53), [Str(':', lineno=168, col_offset=73)], [], None, None, lineno=168, col_offset=53), lineno=168, col_offset=24), Expr(Yield(Tuple([Str('', lineno=169, col_offset=30), Name('field_name', Load(), lineno=169, col_offset=34), Name('format_spec', Load(), lineno=169, col_offset=46), Name('None', Load(), lineno=169, col_offset=59)], Load(), lineno=169, col_offset=30), lineno=169, col_offset=24), lineno=169, col_offset=24)], [Expr(Yield(Tuple([Name('field', Load(), lineno=171, col_offset=30), Name('None', Load(), lineno=171, col_offset=37), Name('None', Load(), lineno=171, col_offset=43), Name('None', Load(), lineno=171, col_offset=49)], Load(), lineno=171, col_offset=30), lineno=171, col_offset=24), lineno=171, col_offset=24)], lineno=166, col_offset=20)], [], lineno=165, col_offset=16)], [], lineno=164, col_offset=12)], [], lineno=161, col_offset=8), Assign([Name('fmt', Store(), lineno=173, col_offset=8)], Call(Name('BarFormatter', Load(), lineno=173, col_offset=14), [], [], None, None, lineno=173, col_offset=14), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertEqual', Load(), lineno=174, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=174, col_offset=25), 'format', Load(), lineno=174, col_offset=25), [Str('*|+0:^10s|*', lineno=174, col_offset=36), Str('foo', lineno=174, col_offset=51)], [], None, None, lineno=174, col_offset=25), Str('*   foo    *', lineno=174, col_offset=59)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), ClassDef('CheckAllUsedFormatter', [Attribute(Name('string', Load(), lineno=177, col_offset=36), 'Formatter', Load(), lineno=177, col_offset=36)], [FunctionDef('check_unused_args', arguments([Name('self', Param(), lineno=178, col_offset=34), Name('used_args', Param(), lineno=178, col_offset=40), Name('args', Param(), lineno=178, col_offset=51), Name('kwargs', Param(), lineno=178, col_offset=57)], None, None, []), [Assign([Name('unused_args', Store(), lineno=180, col_offset=16)], Call(Name('set', Load(), lineno=180, col_offset=30), [Call(Attribute(Name('kwargs', Load(), lineno=180, col_offset=34), 'keys', Load(), lineno=180, col_offset=34), [], [], None, None, lineno=180, col_offset=34)], [], None, None, lineno=180, col_offset=30), lineno=180, col_offset=16), Expr(Call(Attribute(Name('unused_args', Load(), lineno=181, col_offset=16), 'update', Load(), lineno=181, col_offset=16), [Call(Name('range', Load(), lineno=181, col_offset=35), [Num(0, lineno=181, col_offset=41), Call(Name('len', Load(), lineno=181, col_offset=44), [Name('args', Load(), lineno=181, col_offset=48)], [], None, None, lineno=181, col_offset=44)], [], None, None, lineno=181, col_offset=35)], [], None, None, lineno=181, col_offset=16), lineno=181, col_offset=16), For(Name('arg', Store(), lineno=183, col_offset=20), Name('used_args', Load(), lineno=183, col_offset=27), [Expr(Call(Attribute(Name('unused_args', Load(), lineno=184, col_offset=20), 'remove', Load(), lineno=184, col_offset=20), [Name('arg', Load(), lineno=184, col_offset=39)], [], None, None, lineno=184, col_offset=20), lineno=184, col_offset=20)], [], lineno=183, col_offset=16), If(Name('unused_args', Load(), lineno=186, col_offset=19), [Raise(Call(Name('ValueError', Load(), lineno=187, col_offset=26), [Str('unused arguments', lineno=187, col_offset=37)], [], None, None, lineno=187, col_offset=26), None, None, lineno=187, col_offset=20)], [], lineno=186, col_offset=16)], [], lineno=178, col_offset=12)], [], lineno=177, col_offset=8), Assign([Name('fmt', Store(), lineno=189, col_offset=8)], Call(Name('CheckAllUsedFormatter', Load(), lineno=189, col_offset=14), [], [], None, None, lineno=189, col_offset=14), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertEqual', Load(), lineno=190, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=190, col_offset=25), 'format', Load(), lineno=190, col_offset=25), [Str('{0}', lineno=190, col_offset=36), Num(10, lineno=190, col_offset=43)], [], None, None, lineno=190, col_offset=25), Str('10', lineno=190, col_offset=48)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertEqual', Load(), lineno=191, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=191, col_offset=25), 'format', Load(), lineno=191, col_offset=25), [Str('{0}{i}', lineno=191, col_offset=36), Num(10, lineno=191, col_offset=46)], [keyword('i', Num(100, lineno=191, col_offset=52))], None, None, lineno=191, col_offset=25), Str('10100', lineno=191, col_offset=58)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Call(Attribute(Name('fmt', Load(), lineno=192, col_offset=25), 'format', Load(), lineno=192, col_offset=25), [Str('{0}{i}{1}', lineno=192, col_offset=36), Num(10, lineno=192, col_offset=49), Num(20, lineno=192, col_offset=53)], [keyword('i', Num(100, lineno=192, col_offset=59))], None, None, lineno=192, col_offset=25), Str('1010020', lineno=192, col_offset=65)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertRaises', Load(), lineno=193, col_offset=8), [Name('ValueError', Load(), lineno=193, col_offset=26), Attribute(Name('fmt', Load(), lineno=193, col_offset=38), 'format', Load(), lineno=193, col_offset=38), Str('{0}{i}{1}', lineno=193, col_offset=50), Num(10, lineno=193, col_offset=63), Num(20, lineno=193, col_offset=67)], [keyword('i', Num(100, lineno=193, col_offset=73)), keyword('j', Num(0, lineno=193, col_offset=80))], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertRaises', Load(), lineno=194, col_offset=8), [Name('ValueError', Load(), lineno=194, col_offset=26), Attribute(Name('fmt', Load(), lineno=194, col_offset=38), 'format', Load(), lineno=194, col_offset=38), Str('{0}', lineno=194, col_offset=50), Num(10, lineno=194, col_offset=57), Num(20, lineno=194, col_offset=61)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), 'assertRaises', Load(), lineno=195, col_offset=8), [Name('ValueError', Load(), lineno=195, col_offset=26), Attribute(Name('fmt', Load(), lineno=195, col_offset=38), 'format', Load(), lineno=195, col_offset=38), Str('{0}', lineno=195, col_offset=50), Num(10, lineno=195, col_offset=57), Num(20, lineno=195, col_offset=61)], [keyword('i', Num(100, lineno=195, col_offset=67))], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'assertRaises', Load(), lineno=196, col_offset=8), [Name('ValueError', Load(), lineno=196, col_offset=26), Attribute(Name('fmt', Load(), lineno=196, col_offset=38), 'format', Load(), lineno=196, col_offset=38), Str('{i}', lineno=196, col_offset=50), Num(10, lineno=196, col_offset=57), Num(20, lineno=196, col_offset=61)], [keyword('i', Num(100, lineno=196, col_offset=67))], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertRaises', Load(), lineno=199, col_offset=8), [Name('ValueError', Load(), lineno=199, col_offset=26), Name('format', Load(), lineno=199, col_offset=38), Str('', lineno=199, col_offset=46), Str('#', lineno=199, col_offset=50)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'assertRaises', Load(), lineno=200, col_offset=8), [Name('ValueError', Load(), lineno=200, col_offset=26), Name('format', Load(), lineno=200, col_offset=38), Str('', lineno=200, col_offset=46), Str('#20', lineno=200, col_offset=50)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8)], [], lineno=112, col_offset=4)], [], lineno=67, col_offset=0), ClassDef('BytesAliasTest', [Attribute(Name('unittest', Load(), lineno=202, col_offset=21), 'TestCase', Load(), lineno=202, col_offset=21)], [FunctionDef('test_builtin', arguments([Name('self', Param(), lineno=204, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertTrue', Load(), lineno=205, col_offset=8), [Compare(Name('str', Load(), lineno=205, col_offset=24), [Is()], [Name('bytes', Load(), lineno=205, col_offset=31)], lineno=205, col_offset=24)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('test_syntax', arguments([Name('self', Param(), lineno=207, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertEqual', Load(), lineno=208, col_offset=8), [Str('spam', lineno=208, col_offset=25), Str('spam', lineno=208, col_offset=34)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Str('egg\\foo', lineno=209, col_offset=25), Str('egg\\foo', lineno=209, col_offset=38)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertTrue', Load(), lineno=210, col_offset=8), [Call(Name('type', Load(), lineno=210, col_offset=24), [Str('', lineno=210, col_offset=29)], [], None, None, lineno=210, col_offset=24), Name('str', Load(), lineno=210, col_offset=35)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertTrue', Load(), lineno=211, col_offset=8), [Call(Name('type', Load(), lineno=211, col_offset=24), [Str('', lineno=211, col_offset=29)], [], None, None, lineno=211, col_offset=24), Name('str', Load(), lineno=211, col_offset=36)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=207, col_offset=4)], [], lineno=202, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=214, col_offset=4), 'run_unittest', Load(), lineno=214, col_offset=4), [Name('StringTest', Load(), lineno=214, col_offset=30), Name('ModuleTest', Load(), lineno=214, col_offset=42), Name('BytesAliasTest', Load(), lineno=214, col_offset=54)], [], None, None, lineno=214, col_offset=4), lineno=214, col_offset=4)], [], lineno=213, col_offset=0), If(Compare(Name('__name__', Load(), lineno=216, col_offset=3), [Eq()], [Str('__main__', lineno=216, col_offset=15)], lineno=216, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=217, col_offset=4), [], [], None, None, lineno=217, col_offset=4), lineno=217, col_offset=4)], [], lineno=216, col_offset=0)])
