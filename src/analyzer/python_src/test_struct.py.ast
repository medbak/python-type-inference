Module([Import([alias('os', None)], lineno=1, col_offset=0), Import([alias('array', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), Import([alias('struct', None)], lineno=4, col_offset=0), Import([alias('inspect', None)], lineno=5, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('check_warnings', None), alias('check_py3k_warnings', None)], 0, lineno=6, col_offset=0), Import([alias('sys', None)], lineno=8, col_offset=0), Assign([Name('ISBIGENDIAN', Store(), lineno=9, col_offset=0)], Compare(Attribute(Name('sys', Load(), lineno=9, col_offset=14), 'byteorder', Load(), lineno=9, col_offset=14), [Eq()], [Str('big', lineno=9, col_offset=31)], lineno=9, col_offset=14), lineno=9, col_offset=0), Assign([Name('IS32BIT', Store(), lineno=10, col_offset=0)], Compare(Attribute(Name('sys', Load(), lineno=10, col_offset=10), 'maxsize', Load(), lineno=10, col_offset=10), [Eq()], [Num(2147483647, lineno=10, col_offset=25)], lineno=10, col_offset=10), lineno=10, col_offset=0), Assign([Name('integer_codes', Store(), lineno=12, col_offset=0)], Tuple([Str('b', lineno=12, col_offset=16), Str('B', lineno=12, col_offset=21), Str('h', lineno=12, col_offset=26), Str('H', lineno=12, col_offset=31), Str('i', lineno=12, col_offset=36), Str('I', lineno=12, col_offset=41), Str('l', lineno=12, col_offset=46), Str('L', lineno=12, col_offset=51), Str('q', lineno=12, col_offset=56), Str('Q', lineno=12, col_offset=61)], Load(), lineno=12, col_offset=16), lineno=12, col_offset=0), Assign([Name('testmod_filename', Store(), lineno=14, col_offset=0)], BinOp(Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=14, col_offset=19), 'path', Load(), lineno=14, col_offset=19), 'splitext', Load(), lineno=14, col_offset=19), [Name('__file__', Load(), lineno=14, col_offset=36)], [], None, None, lineno=14, col_offset=19), Index(Num(0, lineno=14, col_offset=46)), Load(), lineno=14, col_offset=19), Add(), Str('.py', lineno=14, col_offset=51), lineno=14, col_offset=19), lineno=14, col_offset=0), TryExcept([Expr(Call(Attribute(Name('struct', Load(), lineno=18, col_offset=4), 'pack', Load(), lineno=18, col_offset=4), [Str('q', lineno=18, col_offset=16), Num(5, lineno=18, col_offset=21)], [], None, None, lineno=18, col_offset=4), lineno=18, col_offset=4)], [ExceptHandler(Attribute(Name('struct', Load(), lineno=19, col_offset=7), 'error', Load(), lineno=19, col_offset=7), None, [Assign([Name('HAVE_LONG_LONG', Store(), lineno=20, col_offset=4)], Name('False', Load(), lineno=20, col_offset=21), lineno=20, col_offset=4)], lineno=19, col_offset=0)], [Assign([Name('HAVE_LONG_LONG', Store(), lineno=22, col_offset=4)], Name('True', Load(), lineno=22, col_offset=21), lineno=22, col_offset=4)], lineno=17, col_offset=0), FunctionDef('string_reverse', arguments([Name('s', Param(), lineno=24, col_offset=19)], None, None, []), [Return(Call(Attribute(Str('', lineno=25, col_offset=11), 'join', Load(), lineno=25, col_offset=11), [Call(Name('reversed', Load(), lineno=25, col_offset=19), [Name('s', Load(), lineno=25, col_offset=28)], [], None, None, lineno=25, col_offset=19)], [], None, None, lineno=25, col_offset=11), lineno=25, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('bigendian_to_native', arguments([Name('value', Param(), lineno=27, col_offset=24)], None, None, []), [If(Name('ISBIGENDIAN', Load(), lineno=28, col_offset=7), [Return(Name('value', Load(), lineno=29, col_offset=15), lineno=29, col_offset=8)], [Return(Call(Name('string_reverse', Load(), lineno=31, col_offset=15), [Name('value', Load(), lineno=31, col_offset=30)], [], None, None, lineno=31, col_offset=15), lineno=31, col_offset=8)], lineno=28, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('StructTest', [Attribute(Name('unittest', Load(), lineno=33, col_offset=17), 'TestCase', Load(), lineno=33, col_offset=17)], [FunctionDef('check_float_coerce', arguments([Name('self', Param(), lineno=35, col_offset=27), Name('format', Param(), lineno=35, col_offset=33), Name('number', Param(), lineno=35, col_offset=41)], None, None, []), [With(Call(Name('check_warnings', Load(), lineno=38, col_offset=13), [Tuple([Str('.*integer argument expected, got float', lineno=38, col_offset=29), Name('DeprecationWarning', Load(), lineno=39, col_offset=29)], Load(), lineno=38, col_offset=29)], [], None, None, lineno=38, col_offset=13), Name('w', Store(), lineno=39, col_offset=53), [Assign([Name('got', Store(), lineno=40, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=40, col_offset=18), 'pack', Load(), lineno=40, col_offset=18), [Name('format', Load(), lineno=40, col_offset=30), Name('number', Load(), lineno=40, col_offset=38)], [], None, None, lineno=40, col_offset=18), lineno=40, col_offset=12)], lineno=38, col_offset=13), Assign([Name('lineno', Store(), lineno=41, col_offset=8)], BinOp(Attribute(Call(Attribute(Name('inspect', Load(), lineno=41, col_offset=17), 'currentframe', Load(), lineno=41, col_offset=17), [], [], None, None, lineno=41, col_offset=17), 'f_lineno', Load(), lineno=41, col_offset=17), Sub(), Num(1, lineno=41, col_offset=51), lineno=41, col_offset=17), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Attribute(Name('w', Load(), lineno=42, col_offset=25), 'filename', Load(), lineno=42, col_offset=25), Name('testmod_filename', Load(), lineno=42, col_offset=37)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'assertEqual', Load(), lineno=43, col_offset=8), [Attribute(Name('w', Load(), lineno=43, col_offset=25), 'lineno', Load(), lineno=43, col_offset=25), Name('lineno', Load(), lineno=43, col_offset=35)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertEqual', Load(), lineno=44, col_offset=8), [Call(Name('len', Load(), lineno=44, col_offset=25), [Attribute(Name('w', Load(), lineno=44, col_offset=29), 'warnings', Load(), lineno=44, col_offset=29)], [], None, None, lineno=44, col_offset=25), Num(1, lineno=44, col_offset=42)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Assign([Name('expected', Store(), lineno=45, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=45, col_offset=19), 'pack', Load(), lineno=45, col_offset=19), [Name('format', Load(), lineno=45, col_offset=31), Call(Name('int', Load(), lineno=45, col_offset=39), [Name('number', Load(), lineno=45, col_offset=43)], [], None, None, lineno=45, col_offset=39)], [], None, None, lineno=45, col_offset=19), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Name('got', Load(), lineno=46, col_offset=25), Name('expected', Load(), lineno=46, col_offset=30)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('test_isbigendian', arguments([Name('self', Param(), lineno=48, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertEqual', Load(), lineno=49, col_offset=8), [Compare(Subscript(Call(Attribute(Name('struct', Load(), lineno=49, col_offset=26), 'pack', Load(), lineno=49, col_offset=26), [Str('=i', lineno=49, col_offset=38), Num(1, lineno=49, col_offset=44)], [], None, None, lineno=49, col_offset=26), Index(Num(0, lineno=49, col_offset=47)), Load(), lineno=49, col_offset=26), [Eq()], [Call(Name('chr', Load(), lineno=49, col_offset=53), [Num(0, lineno=49, col_offset=57)], [], None, None, lineno=49, col_offset=53)], lineno=49, col_offset=26), Name('ISBIGENDIAN', Load(), lineno=49, col_offset=62)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('test_consistence', arguments([Name('self', Param(), lineno=51, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertRaises', Load(), lineno=52, col_offset=8), [Attribute(Name('struct', Load(), lineno=52, col_offset=26), 'error', Load(), lineno=52, col_offset=26), Attribute(Name('struct', Load(), lineno=52, col_offset=40), 'calcsize', Load(), lineno=52, col_offset=40), Str('Z', lineno=52, col_offset=57)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Assign([Name('sz', Store(), lineno=54, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=54, col_offset=13), 'calcsize', Load(), lineno=54, col_offset=13), [Str('i', lineno=54, col_offset=29)], [], None, None, lineno=54, col_offset=13), lineno=54, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertEqual', Load(), lineno=55, col_offset=8), [BinOp(Name('sz', Load(), lineno=55, col_offset=25), Mult(), Num(3, lineno=55, col_offset=30), lineno=55, col_offset=25), Call(Attribute(Name('struct', Load(), lineno=55, col_offset=33), 'calcsize', Load(), lineno=55, col_offset=33), [Str('iii', lineno=55, col_offset=49)], [], None, None, lineno=55, col_offset=33)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Assign([Name('fmt', Store(), lineno=57, col_offset=8)], Str('cbxxxxxxhhhhiillffd?', lineno=57, col_offset=14), lineno=57, col_offset=8), Assign([Name('fmt3', Store(), lineno=58, col_offset=8)], Str('3c3b18x12h6i6l6f3d3?', lineno=58, col_offset=15), lineno=58, col_offset=8), Assign([Name('sz', Store(), lineno=59, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=59, col_offset=13), 'calcsize', Load(), lineno=59, col_offset=13), [Name('fmt', Load(), lineno=59, col_offset=29)], [], None, None, lineno=59, col_offset=13), lineno=59, col_offset=8), Assign([Name('sz3', Store(), lineno=60, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=60, col_offset=14), 'calcsize', Load(), lineno=60, col_offset=14), [Name('fmt3', Load(), lineno=60, col_offset=30)], [], None, None, lineno=60, col_offset=14), lineno=60, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertEqual', Load(), lineno=61, col_offset=8), [BinOp(Name('sz', Load(), lineno=61, col_offset=25), Mult(), Num(3, lineno=61, col_offset=30), lineno=61, col_offset=25), Name('sz3', Load(), lineno=61, col_offset=33)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertRaises', Load(), lineno=63, col_offset=8), [Attribute(Name('struct', Load(), lineno=63, col_offset=26), 'error', Load(), lineno=63, col_offset=26), Attribute(Name('struct', Load(), lineno=63, col_offset=40), 'pack', Load(), lineno=63, col_offset=40), Str('iii', lineno=63, col_offset=53), Num(3, lineno=63, col_offset=60)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'assertRaises', Load(), lineno=64, col_offset=8), [Attribute(Name('struct', Load(), lineno=64, col_offset=26), 'error', Load(), lineno=64, col_offset=26), Attribute(Name('struct', Load(), lineno=64, col_offset=40), 'pack', Load(), lineno=64, col_offset=40), Str('i', lineno=64, col_offset=53), Num(3, lineno=64, col_offset=58), Num(3, lineno=64, col_offset=61), Num(3, lineno=64, col_offset=64)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=8), 'assertRaises', Load(), lineno=65, col_offset=8), [Tuple([Name('TypeError', Load(), lineno=65, col_offset=27), Attribute(Name('struct', Load(), lineno=65, col_offset=38), 'error', Load(), lineno=65, col_offset=38)], Load(), lineno=65, col_offset=27), Attribute(Name('struct', Load(), lineno=65, col_offset=53), 'pack', Load(), lineno=65, col_offset=53), Str('i', lineno=65, col_offset=66), Str('foo', lineno=65, col_offset=71)], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertRaises', Load(), lineno=66, col_offset=8), [Tuple([Name('TypeError', Load(), lineno=66, col_offset=27), Attribute(Name('struct', Load(), lineno=66, col_offset=38), 'error', Load(), lineno=66, col_offset=38)], Load(), lineno=66, col_offset=27), Attribute(Name('struct', Load(), lineno=66, col_offset=53), 'pack', Load(), lineno=66, col_offset=53), Str('P', lineno=66, col_offset=66), Str('foo', lineno=66, col_offset=71)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'assertRaises', Load(), lineno=67, col_offset=8), [Attribute(Name('struct', Load(), lineno=67, col_offset=26), 'error', Load(), lineno=67, col_offset=26), Attribute(Name('struct', Load(), lineno=67, col_offset=40), 'unpack', Load(), lineno=67, col_offset=40), Str('d', lineno=67, col_offset=55), Str('flap', lineno=67, col_offset=60)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Assign([Name('s', Store(), lineno=68, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=68, col_offset=12), 'pack', Load(), lineno=68, col_offset=12), [Str('ii', lineno=68, col_offset=24), Num(1, lineno=68, col_offset=30), Num(2, lineno=68, col_offset=33)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertRaises', Load(), lineno=69, col_offset=8), [Attribute(Name('struct', Load(), lineno=69, col_offset=26), 'error', Load(), lineno=69, col_offset=26), Attribute(Name('struct', Load(), lineno=69, col_offset=40), 'unpack', Load(), lineno=69, col_offset=40), Str('iii', lineno=69, col_offset=55), Name('s', Load(), lineno=69, col_offset=62)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertRaises', Load(), lineno=70, col_offset=8), [Attribute(Name('struct', Load(), lineno=70, col_offset=26), 'error', Load(), lineno=70, col_offset=26), Attribute(Name('struct', Load(), lineno=70, col_offset=40), 'unpack', Load(), lineno=70, col_offset=40), Str('i', lineno=70, col_offset=55), Name('s', Load(), lineno=70, col_offset=60)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('test_transitiveness', arguments([Name('self', Param(), lineno=72, col_offset=28)], None, None, []), [Assign([Name('c', Store(), lineno=73, col_offset=8)], Str('a', lineno=73, col_offset=12), lineno=73, col_offset=8), Assign([Name('b', Store(), lineno=74, col_offset=8)], Num(1, lineno=74, col_offset=12), lineno=74, col_offset=8), Assign([Name('h', Store(), lineno=75, col_offset=8)], Num(255, lineno=75, col_offset=12), lineno=75, col_offset=8), Assign([Name('i', Store(), lineno=76, col_offset=8)], Num(65535, lineno=76, col_offset=12), lineno=76, col_offset=8), Assign([Name('l', Store(), lineno=77, col_offset=8)], Num(65536, lineno=77, col_offset=12), lineno=77, col_offset=8), Assign([Name('f', Store(), lineno=78, col_offset=8)], Num(3.1415, lineno=78, col_offset=12), lineno=78, col_offset=8), Assign([Name('d', Store(), lineno=79, col_offset=8)], Num(3.1415, lineno=79, col_offset=12), lineno=79, col_offset=8), Assign([Name('t', Store(), lineno=80, col_offset=8)], Name('True', Load(), lineno=80, col_offset=12), lineno=80, col_offset=8), For(Name('prefix', Store(), lineno=82, col_offset=12), Tuple([Str('', lineno=82, col_offset=23), Str('@', lineno=82, col_offset=27), Str('<', lineno=82, col_offset=32), Str('>', lineno=82, col_offset=37), Str('=', lineno=82, col_offset=42), Str('!', lineno=82, col_offset=47)], Load(), lineno=82, col_offset=23), [For(Name('format', Store(), lineno=83, col_offset=16), Tuple([Str('xcbhilfd?', lineno=83, col_offset=27), Str('xcBHILfd?', lineno=83, col_offset=40)], Load(), lineno=83, col_offset=27), [Assign([Name('format', Store(), lineno=84, col_offset=16)], BinOp(Name('prefix', Load(), lineno=84, col_offset=25), Add(), Name('format', Load(), lineno=84, col_offset=34), lineno=84, col_offset=25), lineno=84, col_offset=16), Assign([Name('s', Store(), lineno=85, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=85, col_offset=20), 'pack', Load(), lineno=85, col_offset=20), [Name('format', Load(), lineno=85, col_offset=32), Name('c', Load(), lineno=85, col_offset=40), Name('b', Load(), lineno=85, col_offset=43), Name('h', Load(), lineno=85, col_offset=46), Name('i', Load(), lineno=85, col_offset=49), Name('l', Load(), lineno=85, col_offset=52), Name('f', Load(), lineno=85, col_offset=55), Name('d', Load(), lineno=85, col_offset=58), Name('t', Load(), lineno=85, col_offset=61)], [], None, None, lineno=85, col_offset=20), lineno=85, col_offset=16), Assign([Tuple([Name('cp', Store(), lineno=86, col_offset=16), Name('bp', Store(), lineno=86, col_offset=20), Name('hp', Store(), lineno=86, col_offset=24), Name('ip', Store(), lineno=86, col_offset=28), Name('lp', Store(), lineno=86, col_offset=32), Name('fp', Store(), lineno=86, col_offset=36), Name('dp', Store(), lineno=86, col_offset=40), Name('tp', Store(), lineno=86, col_offset=44)], Store(), lineno=86, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=86, col_offset=49), 'unpack', Load(), lineno=86, col_offset=49), [Name('format', Load(), lineno=86, col_offset=63), Name('s', Load(), lineno=86, col_offset=71)], [], None, None, lineno=86, col_offset=49), lineno=86, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=16), 'assertEqual', Load(), lineno=87, col_offset=16), [Name('cp', Load(), lineno=87, col_offset=33), Name('c', Load(), lineno=87, col_offset=37)], [], None, None, lineno=87, col_offset=16), lineno=87, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=16), 'assertEqual', Load(), lineno=88, col_offset=16), [Name('bp', Load(), lineno=88, col_offset=33), Name('b', Load(), lineno=88, col_offset=37)], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=16), 'assertEqual', Load(), lineno=89, col_offset=16), [Name('hp', Load(), lineno=89, col_offset=33), Name('h', Load(), lineno=89, col_offset=37)], [], None, None, lineno=89, col_offset=16), lineno=89, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=16), 'assertEqual', Load(), lineno=90, col_offset=16), [Name('ip', Load(), lineno=90, col_offset=33), Name('i', Load(), lineno=90, col_offset=37)], [], None, None, lineno=90, col_offset=16), lineno=90, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=16), 'assertEqual', Load(), lineno=91, col_offset=16), [Name('lp', Load(), lineno=91, col_offset=33), Name('l', Load(), lineno=91, col_offset=37)], [], None, None, lineno=91, col_offset=16), lineno=91, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=16), 'assertEqual', Load(), lineno=92, col_offset=16), [Call(Name('int', Load(), lineno=92, col_offset=33), [BinOp(Num(100, lineno=92, col_offset=37), Mult(), Name('fp', Load(), lineno=92, col_offset=43), lineno=92, col_offset=37)], [], None, None, lineno=92, col_offset=33), Call(Name('int', Load(), lineno=92, col_offset=48), [BinOp(Num(100, lineno=92, col_offset=52), Mult(), Name('f', Load(), lineno=92, col_offset=58), lineno=92, col_offset=52)], [], None, None, lineno=92, col_offset=48)], [], None, None, lineno=92, col_offset=16), lineno=92, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=16), 'assertEqual', Load(), lineno=93, col_offset=16), [Call(Name('int', Load(), lineno=93, col_offset=33), [BinOp(Num(100, lineno=93, col_offset=37), Mult(), Name('dp', Load(), lineno=93, col_offset=43), lineno=93, col_offset=37)], [], None, None, lineno=93, col_offset=33), Call(Name('int', Load(), lineno=93, col_offset=48), [BinOp(Num(100, lineno=93, col_offset=52), Mult(), Name('d', Load(), lineno=93, col_offset=58), lineno=93, col_offset=52)], [], None, None, lineno=93, col_offset=48)], [], None, None, lineno=93, col_offset=16), lineno=93, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=16), 'assertEqual', Load(), lineno=94, col_offset=16), [Name('tp', Load(), lineno=94, col_offset=33), Name('t', Load(), lineno=94, col_offset=37)], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=16)], [], lineno=83, col_offset=12)], [], lineno=82, col_offset=8)], [], lineno=72, col_offset=4), FunctionDef('test_new_features', arguments([Name('self', Param(), lineno=96, col_offset=26)], None, None, []), [Assign([Name('tests', Store(), lineno=99, col_offset=8)], List([Tuple([Str('c', lineno=100, col_offset=13), Str('a', lineno=100, col_offset=18), Str('a', lineno=100, col_offset=23), Str('a', lineno=100, col_offset=28), Num(0, lineno=100, col_offset=33)], Load(), lineno=100, col_offset=13), Tuple([Str('xc', lineno=101, col_offset=13), Str('a', lineno=101, col_offset=19), Str('\x00a', lineno=101, col_offset=24), Str('\x00a', lineno=101, col_offset=31), Num(0, lineno=101, col_offset=38)], Load(), lineno=101, col_offset=13), Tuple([Str('cx', lineno=102, col_offset=13), Str('a', lineno=102, col_offset=19), Str('a\x00', lineno=102, col_offset=24), Str('a\x00', lineno=102, col_offset=31), Num(0, lineno=102, col_offset=38)], Load(), lineno=102, col_offset=13), Tuple([Str('s', lineno=103, col_offset=13), Str('a', lineno=103, col_offset=18), Str('a', lineno=103, col_offset=23), Str('a', lineno=103, col_offset=28), Num(0, lineno=103, col_offset=33)], Load(), lineno=103, col_offset=13), Tuple([Str('0s', lineno=104, col_offset=13), Str('helloworld', lineno=104, col_offset=19), Str('', lineno=104, col_offset=33), Str('', lineno=104, col_offset=37), Num(1, lineno=104, col_offset=41)], Load(), lineno=104, col_offset=13), Tuple([Str('1s', lineno=105, col_offset=13), Str('helloworld', lineno=105, col_offset=19), Str('h', lineno=105, col_offset=33), Str('h', lineno=105, col_offset=38), Num(1, lineno=105, col_offset=43)], Load(), lineno=105, col_offset=13), Tuple([Str('9s', lineno=106, col_offset=13), Str('helloworld', lineno=106, col_offset=19), Str('helloworl', lineno=106, col_offset=33), Str('helloworl', lineno=106, col_offset=46), Num(1, lineno=106, col_offset=59)], Load(), lineno=106, col_offset=13), Tuple([Str('10s', lineno=107, col_offset=13), Str('helloworld', lineno=107, col_offset=20), Str('helloworld', lineno=107, col_offset=34), Str('helloworld', lineno=107, col_offset=48), Num(0, lineno=107, col_offset=62)], Load(), lineno=107, col_offset=13), Tuple([Str('11s', lineno=108, col_offset=13), Str('helloworld', lineno=108, col_offset=20), Str('helloworld\x00', lineno=108, col_offset=34), Str('helloworld\x00', lineno=108, col_offset=50), Num(1, lineno=108, col_offset=66)], Load(), lineno=108, col_offset=13), Tuple([Str('20s', lineno=109, col_offset=13), Str('helloworld', lineno=109, col_offset=20), BinOp(Str('helloworld', lineno=109, col_offset=34), Add(), BinOp(Num(10, lineno=109, col_offset=47), Mult(), Str('\x00', lineno=109, col_offset=50), lineno=109, col_offset=47), lineno=109, col_offset=34), BinOp(Str('helloworld', lineno=109, col_offset=56), Add(), BinOp(Num(10, lineno=109, col_offset=69), Mult(), Str('\x00', lineno=109, col_offset=72), lineno=109, col_offset=69), lineno=109, col_offset=56), Num(1, lineno=109, col_offset=78)], Load(), lineno=109, col_offset=13), Tuple([Str('b', lineno=110, col_offset=13), Num(7, lineno=110, col_offset=18), Str('\x07', lineno=110, col_offset=21), Str('\x07', lineno=110, col_offset=27), Num(0, lineno=110, col_offset=33)], Load(), lineno=110, col_offset=13), Tuple([Str('b', lineno=111, col_offset=13), Num(-7, lineno=111, col_offset=19), Str('\xf9', lineno=111, col_offset=22), Str('\xf9', lineno=111, col_offset=30), Num(0, lineno=111, col_offset=38)], Load(), lineno=111, col_offset=13), Tuple([Str('B', lineno=112, col_offset=13), Num(7, lineno=112, col_offset=18), Str('\x07', lineno=112, col_offset=21), Str('\x07', lineno=112, col_offset=27), Num(0, lineno=112, col_offset=33)], Load(), lineno=112, col_offset=13), Tuple([Str('B', lineno=113, col_offset=13), Num(249, lineno=113, col_offset=18), Str('\xf9', lineno=113, col_offset=23), Str('\xf9', lineno=113, col_offset=31), Num(0, lineno=113, col_offset=39)], Load(), lineno=113, col_offset=13), Tuple([Str('h', lineno=114, col_offset=13), Num(700, lineno=114, col_offset=18), Str('\x02\xbc', lineno=114, col_offset=23), Str('\xbc\x02', lineno=114, col_offset=35), Num(0, lineno=114, col_offset=47)], Load(), lineno=114, col_offset=13), Tuple([Str('h', lineno=115, col_offset=13), Num(-700, lineno=115, col_offset=19), Str('\xfdD', lineno=115, col_offset=24), Str('D\xfd', lineno=115, col_offset=33), Num(0, lineno=115, col_offset=42)], Load(), lineno=115, col_offset=13), Tuple([Str('H', lineno=116, col_offset=13), Num(700, lineno=116, col_offset=18), Str('\x02\xbc', lineno=116, col_offset=23), Str('\xbc\x02', lineno=116, col_offset=35), Num(0, lineno=116, col_offset=47)], Load(), lineno=116, col_offset=13), Tuple([Str('H', lineno=117, col_offset=13), BinOp(Num(65536, lineno=117, col_offset=18), Sub(), Num(700, lineno=117, col_offset=26), lineno=117, col_offset=18), Str('\xfdD', lineno=117, col_offset=31), Str('D\xfd', lineno=117, col_offset=40), Num(0, lineno=117, col_offset=49)], Load(), lineno=117, col_offset=13), Tuple([Str('i', lineno=118, col_offset=13), Num(70000000, lineno=118, col_offset=18), Str('\x04,\x1d\x80', lineno=118, col_offset=28), Str('\x80\x1d,\x04', lineno=118, col_offset=45), Num(0, lineno=118, col_offset=62)], Load(), lineno=118, col_offset=13), Tuple([Str('i', lineno=119, col_offset=13), Num(-70000000, lineno=119, col_offset=19), Str('\xfb\xd3\xe2\x80', lineno=119, col_offset=29), Str('\x80\xe2\xd3\xfb', lineno=119, col_offset=49), Num(0, lineno=119, col_offset=69)], Load(), lineno=119, col_offset=13), Tuple([Str('I', lineno=120, col_offset=13), Num(70000000L, lineno=120, col_offset=18), Str('\x04,\x1d\x80', lineno=120, col_offset=29), Str('\x80\x1d,\x04', lineno=120, col_offset=46), Num(0, lineno=120, col_offset=63)], Load(), lineno=120, col_offset=13), Tuple([Str('I', lineno=121, col_offset=13), BinOp(Num(4294967296L, lineno=121, col_offset=18), Sub(), Num(70000000, lineno=121, col_offset=31), lineno=121, col_offset=18), Str('\xfb\xd3\xe2\x80', lineno=121, col_offset=41), Str('\x80\xe2\xd3\xfb', lineno=121, col_offset=61), Num(0, lineno=121, col_offset=81)], Load(), lineno=121, col_offset=13), Tuple([Str('l', lineno=122, col_offset=13), Num(70000000, lineno=122, col_offset=18), Str('\x04,\x1d\x80', lineno=122, col_offset=28), Str('\x80\x1d,\x04', lineno=122, col_offset=45), Num(0, lineno=122, col_offset=62)], Load(), lineno=122, col_offset=13), Tuple([Str('l', lineno=123, col_offset=13), Num(-70000000, lineno=123, col_offset=19), Str('\xfb\xd3\xe2\x80', lineno=123, col_offset=29), Str('\x80\xe2\xd3\xfb', lineno=123, col_offset=49), Num(0, lineno=123, col_offset=69)], Load(), lineno=123, col_offset=13), Tuple([Str('L', lineno=124, col_offset=13), Num(70000000L, lineno=124, col_offset=18), Str('\x04,\x1d\x80', lineno=124, col_offset=29), Str('\x80\x1d,\x04', lineno=124, col_offset=46), Num(0, lineno=124, col_offset=63)], Load(), lineno=124, col_offset=13), Tuple([Str('L', lineno=125, col_offset=13), BinOp(Num(4294967296L, lineno=125, col_offset=18), Sub(), Num(70000000, lineno=125, col_offset=31), lineno=125, col_offset=18), Str('\xfb\xd3\xe2\x80', lineno=125, col_offset=41), Str('\x80\xe2\xd3\xfb', lineno=125, col_offset=61), Num(0, lineno=125, col_offset=81)], Load(), lineno=125, col_offset=13), Tuple([Str('f', lineno=126, col_offset=13), Num(2.0, lineno=126, col_offset=18), Str('@\x00\x00\x00', lineno=126, col_offset=23), Str('\x00\x00\x00@', lineno=126, col_offset=40), Num(0, lineno=126, col_offset=57)], Load(), lineno=126, col_offset=13), Tuple([Str('d', lineno=127, col_offset=13), Num(2.0, lineno=127, col_offset=18), Str('@\x00\x00\x00\x00\x00\x00\x00', lineno=127, col_offset=23), Str('\x00\x00\x00\x00\x00\x00\x00@', lineno=128, col_offset=23), Num(0, lineno=128, col_offset=56)], Load(), lineno=127, col_offset=13), Tuple([Str('f', lineno=129, col_offset=13), Num(-2.0, lineno=129, col_offset=19), Str('\xc0\x00\x00\x00', lineno=129, col_offset=24), Str('\x00\x00\x00\xc0', lineno=129, col_offset=44), Num(0, lineno=129, col_offset=64)], Load(), lineno=129, col_offset=13), Tuple([Str('d', lineno=130, col_offset=13), Num(-2.0, lineno=130, col_offset=19), Str('\xc0\x00\x00\x00\x00\x00\x00\x00', lineno=130, col_offset=24), Str('\x00\x00\x00\x00\x00\x00\x00\xc0', lineno=131, col_offset=23), Num(0, lineno=131, col_offset=59)], Load(), lineno=130, col_offset=13), Tuple([Str('?', lineno=132, col_offset=17), Num(0, lineno=132, col_offset=22), Str('\x00', lineno=132, col_offset=25), Str('\x00', lineno=132, col_offset=31), Num(0, lineno=132, col_offset=37)], Load(), lineno=132, col_offset=17), Tuple([Str('?', lineno=133, col_offset=17), Num(3, lineno=133, col_offset=22), Str('\x01', lineno=133, col_offset=25), Str('\x01', lineno=133, col_offset=31), Num(1, lineno=133, col_offset=37)], Load(), lineno=133, col_offset=17), Tuple([Str('?', lineno=134, col_offset=17), Name('True', Load(), lineno=134, col_offset=22), Str('\x01', lineno=134, col_offset=28), Str('\x01', lineno=134, col_offset=34), Num(0, lineno=134, col_offset=40)], Load(), lineno=134, col_offset=17), Tuple([Str('?', lineno=135, col_offset=17), List([], Load(), lineno=135, col_offset=22), Str('\x00', lineno=135, col_offset=26), Str('\x00', lineno=135, col_offset=32), Num(1, lineno=135, col_offset=38)], Load(), lineno=135, col_offset=17), Tuple([Str('?', lineno=136, col_offset=17), Tuple([Num(1, lineno=136, col_offset=23)], Load(), lineno=136, col_offset=23), Str('\x01', lineno=136, col_offset=28), Str('\x01', lineno=136, col_offset=34), Num(1, lineno=136, col_offset=40)], Load(), lineno=136, col_offset=17)], Load(), lineno=99, col_offset=16), lineno=99, col_offset=8), For(Tuple([Name('fmt', Store(), lineno=139, col_offset=12), Name('arg', Store(), lineno=139, col_offset=17), Name('big', Store(), lineno=139, col_offset=22), Name('lil', Store(), lineno=139, col_offset=27), Name('asy', Store(), lineno=139, col_offset=32)], Store(), lineno=139, col_offset=12), Name('tests', Load(), lineno=139, col_offset=39), [For(Tuple([Name('xfmt', Store(), lineno=140, col_offset=17), Name('exp', Store(), lineno=140, col_offset=23)], Store(), lineno=140, col_offset=17), List([Tuple([BinOp(Str('>', lineno=140, col_offset=33), Add(), Name('fmt', Load(), lineno=140, col_offset=37), lineno=140, col_offset=33), Name('big', Load(), lineno=140, col_offset=42)], Load(), lineno=140, col_offset=33), Tuple([BinOp(Str('!', lineno=140, col_offset=49), Add(), Name('fmt', Load(), lineno=140, col_offset=53), lineno=140, col_offset=49), Name('big', Load(), lineno=140, col_offset=58)], Load(), lineno=140, col_offset=49), Tuple([BinOp(Str('<', lineno=140, col_offset=65), Add(), Name('fmt', Load(), lineno=140, col_offset=69), lineno=140, col_offset=65), Name('lil', Load(), lineno=140, col_offset=74)], Load(), lineno=140, col_offset=65), Tuple([BinOp(Str('=', lineno=141, col_offset=33), Add(), Name('fmt', Load(), lineno=141, col_offset=37), lineno=141, col_offset=33), BoolOp(Or(), [BoolOp(And(), [Name('ISBIGENDIAN', Load(), lineno=141, col_offset=42), Name('big', Load(), lineno=141, col_offset=58)], lineno=141, col_offset=42), Name('lil', Load(), lineno=141, col_offset=65)], lineno=141, col_offset=42)], Load(), lineno=141, col_offset=33)], Load(), lineno=140, col_offset=31), [Assign([Name('res', Store(), lineno=142, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=142, col_offset=22), 'pack', Load(), lineno=142, col_offset=22), [Name('xfmt', Load(), lineno=142, col_offset=34), Name('arg', Load(), lineno=142, col_offset=40)], [], None, None, lineno=142, col_offset=22), lineno=142, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=16), 'assertEqual', Load(), lineno=143, col_offset=16), [Name('res', Load(), lineno=143, col_offset=33), Name('exp', Load(), lineno=143, col_offset=38)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=16), 'assertEqual', Load(), lineno=144, col_offset=16), [Call(Attribute(Name('struct', Load(), lineno=144, col_offset=33), 'calcsize', Load(), lineno=144, col_offset=33), [Name('xfmt', Load(), lineno=144, col_offset=49)], [], None, None, lineno=144, col_offset=33), Call(Name('len', Load(), lineno=144, col_offset=56), [Name('res', Load(), lineno=144, col_offset=60)], [], None, None, lineno=144, col_offset=56)], [], None, None, lineno=144, col_offset=16), lineno=144, col_offset=16), Assign([Name('rev', Store(), lineno=145, col_offset=16)], Subscript(Call(Attribute(Name('struct', Load(), lineno=145, col_offset=22), 'unpack', Load(), lineno=145, col_offset=22), [Name('xfmt', Load(), lineno=145, col_offset=36), Name('res', Load(), lineno=145, col_offset=42)], [], None, None, lineno=145, col_offset=22), Index(Num(0, lineno=145, col_offset=47)), Load(), lineno=145, col_offset=22), lineno=145, col_offset=16), If(Compare(Name('rev', Load(), lineno=146, col_offset=19), [NotEq()], [Name('arg', Load(), lineno=146, col_offset=26)], lineno=146, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=20), 'assertTrue', Load(), lineno=147, col_offset=20), [Name('asy', Load(), lineno=147, col_offset=36)], [], None, None, lineno=147, col_offset=20), lineno=147, col_offset=20)], [], lineno=146, col_offset=16)], [], lineno=140, col_offset=12)], [], lineno=139, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('test_calcsize', arguments([Name('self', Param(), lineno=149, col_offset=22)], None, None, []), [Assign([Name('expected_size', Store(), lineno=150, col_offset=8)], Dict([Str('b', lineno=151, col_offset=12), Str('B', lineno=151, col_offset=20), Str('h', lineno=152, col_offset=12), Str('H', lineno=152, col_offset=20), Str('i', lineno=153, col_offset=12), Str('I', lineno=153, col_offset=20), Str('l', lineno=154, col_offset=12), Str('L', lineno=154, col_offset=20), Str('q', lineno=155, col_offset=12), Str('Q', lineno=155, col_offset=20)], [Num(1, lineno=151, col_offset=17), Num(1, lineno=151, col_offset=25), Num(2, lineno=152, col_offset=17), Num(2, lineno=152, col_offset=25), Num(4, lineno=153, col_offset=17), Num(4, lineno=153, col_offset=25), Num(4, lineno=154, col_offset=17), Num(4, lineno=154, col_offset=25), Num(8, lineno=155, col_offset=17), Num(8, lineno=155, col_offset=25)], lineno=150, col_offset=24), lineno=150, col_offset=8), For(Name('code', Store(), lineno=159, col_offset=12), Name('integer_codes', Load(), lineno=159, col_offset=20), [For(Name('byteorder', Store(), lineno=160, col_offset=16), Tuple([Str('=', lineno=160, col_offset=30), Str('<', lineno=160, col_offset=35), Str('>', lineno=160, col_offset=40), Str('!', lineno=160, col_offset=45)], Load(), lineno=160, col_offset=30), [Assign([Name('format', Store(), lineno=161, col_offset=16)], BinOp(Name('byteorder', Load(), lineno=161, col_offset=25), Add(), Name('code', Load(), lineno=161, col_offset=35), lineno=161, col_offset=25), lineno=161, col_offset=16), Assign([Name('size', Store(), lineno=162, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=162, col_offset=23), 'calcsize', Load(), lineno=162, col_offset=23), [Name('format', Load(), lineno=162, col_offset=39)], [], None, None, lineno=162, col_offset=23), lineno=162, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=16), 'assertEqual', Load(), lineno=163, col_offset=16), [Name('size', Load(), lineno=163, col_offset=33), Subscript(Name('expected_size', Load(), lineno=163, col_offset=39), Index(Name('code', Load(), lineno=163, col_offset=53)), Load(), lineno=163, col_offset=39)], [], None, None, lineno=163, col_offset=16), lineno=163, col_offset=16)], [], lineno=160, col_offset=12)], [], lineno=159, col_offset=8), For(Name('format_pair', Store(), lineno=166, col_offset=12), Tuple([Str('bB', lineno=166, col_offset=28), Str('hH', lineno=166, col_offset=34), Str('iI', lineno=166, col_offset=40), Str('lL', lineno=166, col_offset=46)], Load(), lineno=166, col_offset=28), [For(Name('byteorder', Store(), lineno=167, col_offset=16), List([Str('', lineno=167, col_offset=30), Str('@', lineno=167, col_offset=34)], Load(), lineno=167, col_offset=29), [Assign([Name('signed_size', Store(), lineno=168, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=168, col_offset=30), 'calcsize', Load(), lineno=168, col_offset=30), [BinOp(Name('byteorder', Load(), lineno=168, col_offset=46), Add(), Subscript(Name('format_pair', Load(), lineno=168, col_offset=58), Index(Num(0, lineno=168, col_offset=70)), Load(), lineno=168, col_offset=58), lineno=168, col_offset=46)], [], None, None, lineno=168, col_offset=30), lineno=168, col_offset=16), Assign([Name('unsigned_size', Store(), lineno=169, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=169, col_offset=32), 'calcsize', Load(), lineno=169, col_offset=32), [BinOp(Name('byteorder', Load(), lineno=169, col_offset=48), Add(), Subscript(Name('format_pair', Load(), lineno=169, col_offset=60), Index(Num(1, lineno=169, col_offset=72)), Load(), lineno=169, col_offset=60), lineno=169, col_offset=48)], [], None, None, lineno=169, col_offset=32), lineno=169, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=16), 'assertEqual', Load(), lineno=170, col_offset=16), [Name('signed_size', Load(), lineno=170, col_offset=33), Name('unsigned_size', Load(), lineno=170, col_offset=46)], [], None, None, lineno=170, col_offset=16), lineno=170, col_offset=16)], [], lineno=167, col_offset=12)], [], lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'assertEqual', Load(), lineno=173, col_offset=8), [Call(Attribute(Name('struct', Load(), lineno=173, col_offset=25), 'calcsize', Load(), lineno=173, col_offset=25), [Str('b', lineno=173, col_offset=41)], [], None, None, lineno=173, col_offset=25), Num(1, lineno=173, col_offset=47)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertLessEqual', Load(), lineno=174, col_offset=8), [Num(2, lineno=174, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=174, col_offset=32), 'calcsize', Load(), lineno=174, col_offset=32), [Str('h', lineno=174, col_offset=48)], [], None, None, lineno=174, col_offset=32)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertLessEqual', Load(), lineno=175, col_offset=8), [Num(4, lineno=175, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=175, col_offset=32), 'calcsize', Load(), lineno=175, col_offset=32), [Str('l', lineno=175, col_offset=48)], [], None, None, lineno=175, col_offset=32)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'assertLessEqual', Load(), lineno=176, col_offset=8), [Call(Attribute(Name('struct', Load(), lineno=176, col_offset=29), 'calcsize', Load(), lineno=176, col_offset=29), [Str('h', lineno=176, col_offset=45)], [], None, None, lineno=176, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=176, col_offset=51), 'calcsize', Load(), lineno=176, col_offset=51), [Str('i', lineno=176, col_offset=67)], [], None, None, lineno=176, col_offset=51)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'assertLessEqual', Load(), lineno=177, col_offset=8), [Call(Attribute(Name('struct', Load(), lineno=177, col_offset=29), 'calcsize', Load(), lineno=177, col_offset=29), [Str('i', lineno=177, col_offset=45)], [], None, None, lineno=177, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=177, col_offset=51), 'calcsize', Load(), lineno=177, col_offset=51), [Str('l', lineno=177, col_offset=67)], [], None, None, lineno=177, col_offset=51)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), If(Name('HAVE_LONG_LONG', Load(), lineno=180, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'assertEqual', Load(), lineno=181, col_offset=12), [Call(Attribute(Name('struct', Load(), lineno=181, col_offset=29), 'calcsize', Load(), lineno=181, col_offset=29), [Str('q', lineno=181, col_offset=45)], [], None, None, lineno=181, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=181, col_offset=51), 'calcsize', Load(), lineno=181, col_offset=51), [Str('Q', lineno=181, col_offset=67)], [], None, None, lineno=181, col_offset=51)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=12), 'assertLessEqual', Load(), lineno=182, col_offset=12), [Num(8, lineno=182, col_offset=33), Call(Attribute(Name('struct', Load(), lineno=182, col_offset=36), 'calcsize', Load(), lineno=182, col_offset=36), [Str('q', lineno=182, col_offset=52)], [], None, None, lineno=182, col_offset=36)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'assertLessEqual', Load(), lineno=183, col_offset=12), [Call(Attribute(Name('struct', Load(), lineno=183, col_offset=33), 'calcsize', Load(), lineno=183, col_offset=33), [Str('l', lineno=183, col_offset=49)], [], None, None, lineno=183, col_offset=33), Call(Attribute(Name('struct', Load(), lineno=183, col_offset=55), 'calcsize', Load(), lineno=183, col_offset=55), [Str('q', lineno=183, col_offset=71)], [], None, None, lineno=183, col_offset=55)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12)], [], lineno=180, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('test_integers', arguments([Name('self', Param(), lineno=185, col_offset=22)], None, None, []), [Import([alias('binascii', None)], lineno=187, col_offset=8), ClassDef('IntTester', [Attribute(Name('unittest', Load(), lineno=189, col_offset=24), 'TestCase', Load(), lineno=189, col_offset=24)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=190, col_offset=25), Name('format', Param(), lineno=190, col_offset=31)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=191, col_offset=16), [Name('IntTester', Load(), lineno=191, col_offset=22), Name('self', Load(), lineno=191, col_offset=33)], [], None, None, lineno=191, col_offset=16), '__init__', Load(), lineno=191, col_offset=16), [], [keyword('methodName', Str('test_one', lineno=191, col_offset=59))], None, None, lineno=191, col_offset=16), lineno=191, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=192, col_offset=16), 'format', Store(), lineno=192, col_offset=16)], Name('format', Load(), lineno=192, col_offset=30), lineno=192, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=193, col_offset=16), 'code', Store(), lineno=193, col_offset=16)], Subscript(Name('format', Load(), lineno=193, col_offset=28), Index(Num(-1, lineno=193, col_offset=36)), Load(), lineno=193, col_offset=28), lineno=193, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=194, col_offset=16), 'direction', Store(), lineno=194, col_offset=16)], Subscript(Name('format', Load(), lineno=194, col_offset=33), Slice(None, Num(-1, lineno=194, col_offset=42), None), Load(), lineno=194, col_offset=33), lineno=194, col_offset=16), If(UnaryOp(Not(), Compare(Attribute(Name('self', Load(), lineno=195, col_offset=23), 'direction', Load(), lineno=195, col_offset=23), [In()], [Tuple([Str('', lineno=195, col_offset=42), Str('@', lineno=195, col_offset=46), Str('=', lineno=195, col_offset=51), Str('<', lineno=195, col_offset=56), Str('>', lineno=195, col_offset=61), Str('!', lineno=195, col_offset=66)], Load(), lineno=195, col_offset=42)], lineno=195, col_offset=23), lineno=195, col_offset=19), [Raise(Call(Name('ValueError', Load(), lineno=196, col_offset=26), [BinOp(Str('unrecognized packing direction: %s', lineno=196, col_offset=37), Mod(), Attribute(Name('self', Load(), lineno=197, col_offset=37), 'direction', Load(), lineno=197, col_offset=37), lineno=196, col_offset=37)], [], None, None, lineno=196, col_offset=26), None, None, lineno=196, col_offset=20)], [], lineno=195, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=198, col_offset=16), 'bytesize', Store(), lineno=198, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=198, col_offset=32), 'calcsize', Load(), lineno=198, col_offset=32), [Name('format', Load(), lineno=198, col_offset=48)], [], None, None, lineno=198, col_offset=32), lineno=198, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=199, col_offset=16), 'bitsize', Store(), lineno=199, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=199, col_offset=31), 'bytesize', Load(), lineno=199, col_offset=31), Mult(), Num(8, lineno=199, col_offset=47), lineno=199, col_offset=31), lineno=199, col_offset=16), If(Compare(Attribute(Name('self', Load(), lineno=200, col_offset=19), 'code', Load(), lineno=200, col_offset=19), [In()], [Call(Name('tuple', Load(), lineno=200, col_offset=32), [Str('bhilq', lineno=200, col_offset=38)], [], None, None, lineno=200, col_offset=32)], lineno=200, col_offset=19), [Assign([Attribute(Name('self', Load(), lineno=201, col_offset=20), 'signed', Store(), lineno=201, col_offset=20)], Name('True', Load(), lineno=201, col_offset=34), lineno=201, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=202, col_offset=20), 'min_value', Store(), lineno=202, col_offset=20)], UnaryOp(USub(), BinOp(Num(2L, lineno=202, col_offset=39), Pow(), BinOp(Attribute(Name('self', Load(), lineno=202, col_offset=44), 'bitsize', Load(), lineno=202, col_offset=44), Sub(), Num(1, lineno=202, col_offset=57), lineno=202, col_offset=44), lineno=202, col_offset=39), lineno=202, col_offset=37), lineno=202, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=20), 'max_value', Store(), lineno=203, col_offset=20)], BinOp(BinOp(Num(2L, lineno=203, col_offset=37), Pow(), BinOp(Attribute(Name('self', Load(), lineno=203, col_offset=42), 'bitsize', Load(), lineno=203, col_offset=42), Sub(), Num(1, lineno=203, col_offset=55), lineno=203, col_offset=42), lineno=203, col_offset=37), Sub(), Num(1, lineno=203, col_offset=60), lineno=203, col_offset=37), lineno=203, col_offset=20)], [If(Compare(Attribute(Name('self', Load(), lineno=204, col_offset=21), 'code', Load(), lineno=204, col_offset=21), [In()], [Call(Name('tuple', Load(), lineno=204, col_offset=34), [Str('BHILQ', lineno=204, col_offset=40)], [], None, None, lineno=204, col_offset=34)], lineno=204, col_offset=21), [Assign([Attribute(Name('self', Load(), lineno=205, col_offset=20), 'signed', Store(), lineno=205, col_offset=20)], Name('False', Load(), lineno=205, col_offset=34), lineno=205, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=206, col_offset=20), 'min_value', Store(), lineno=206, col_offset=20)], Num(0, lineno=206, col_offset=37), lineno=206, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=207, col_offset=20), 'max_value', Store(), lineno=207, col_offset=20)], BinOp(BinOp(Num(2L, lineno=207, col_offset=37), Pow(), Attribute(Name('self', Load(), lineno=207, col_offset=41), 'bitsize', Load(), lineno=207, col_offset=41), lineno=207, col_offset=37), Sub(), Num(1, lineno=207, col_offset=56), lineno=207, col_offset=37), lineno=207, col_offset=20)], [Raise(Call(Name('ValueError', Load(), lineno=209, col_offset=26), [BinOp(Str('unrecognized format code: %s', lineno=209, col_offset=37), Mod(), Attribute(Name('self', Load(), lineno=210, col_offset=37), 'code', Load(), lineno=210, col_offset=37), lineno=209, col_offset=37)], [], None, None, lineno=209, col_offset=26), None, None, lineno=209, col_offset=20)], lineno=204, col_offset=21)], lineno=200, col_offset=16)], [], lineno=190, col_offset=12), FunctionDef('test_one', arguments([Name('self', Param(), lineno=212, col_offset=25), Name('x', Param(), lineno=212, col_offset=31), Name('pack', Param(), lineno=212, col_offset=34), Name('unpack', Param(), lineno=213, col_offset=34), Name('unhexlify', Param(), lineno=214, col_offset=34)], None, None, [Attribute(Name('struct', Load(), lineno=212, col_offset=39), 'pack', Load(), lineno=212, col_offset=39), Attribute(Name('struct', Load(), lineno=213, col_offset=41), 'unpack', Load(), lineno=213, col_offset=41), Attribute(Name('binascii', Load(), lineno=214, col_offset=44), 'unhexlify', Load(), lineno=214, col_offset=44)]), [Assign([Name('format', Store(), lineno=216, col_offset=16)], Attribute(Name('self', Load(), lineno=216, col_offset=25), 'format', Load(), lineno=216, col_offset=25), lineno=216, col_offset=16), If(Compare(Attribute(Name('self', Load(), lineno=217, col_offset=19), 'min_value', Load(), lineno=217, col_offset=19), [LtE(), LtE()], [Name('x', Load(), lineno=217, col_offset=37), Attribute(Name('self', Load(), lineno=217, col_offset=42), 'max_value', Load(), lineno=217, col_offset=42)], lineno=217, col_offset=19), [Assign([Name('expected', Store(), lineno=218, col_offset=20)], Call(Name('long', Load(), lineno=218, col_offset=31), [Name('x', Load(), lineno=218, col_offset=36)], [], None, None, lineno=218, col_offset=31), lineno=218, col_offset=20), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=219, col_offset=23), 'signed', Load(), lineno=219, col_offset=23), Compare(Name('x', Load(), lineno=219, col_offset=39), [Lt()], [Num(0, lineno=219, col_offset=43)], lineno=219, col_offset=39)], lineno=219, col_offset=23), [AugAssign(Name('expected', Store(), lineno=220, col_offset=24), Add(), BinOp(Num(1L, lineno=220, col_offset=36), LShift(), Attribute(Name('self', Load(), lineno=220, col_offset=42), 'bitsize', Load(), lineno=220, col_offset=42), lineno=220, col_offset=36), lineno=220, col_offset=24)], [], lineno=219, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=20), 'assertGreaterEqual', Load(), lineno=221, col_offset=20), [Name('expected', Load(), lineno=221, col_offset=44), Num(0, lineno=221, col_offset=54)], [], None, None, lineno=221, col_offset=20), lineno=221, col_offset=20), Assign([Name('expected', Store(), lineno=222, col_offset=20)], BinOp(Str('%x', lineno=222, col_offset=31), Mod(), Name('expected', Load(), lineno=222, col_offset=38), lineno=222, col_offset=31), lineno=222, col_offset=20), If(BinOp(Call(Name('len', Load(), lineno=223, col_offset=23), [Name('expected', Load(), lineno=223, col_offset=27)], [], None, None, lineno=223, col_offset=23), BitAnd(), Num(1, lineno=223, col_offset=39), lineno=223, col_offset=23), [Assign([Name('expected', Store(), lineno=224, col_offset=24)], BinOp(Str('0', lineno=224, col_offset=35), Add(), Name('expected', Load(), lineno=224, col_offset=41), lineno=224, col_offset=35), lineno=224, col_offset=24)], [], lineno=223, col_offset=20), Assign([Name('expected', Store(), lineno=225, col_offset=20)], Call(Name('unhexlify', Load(), lineno=225, col_offset=31), [Name('expected', Load(), lineno=225, col_offset=41)], [], None, None, lineno=225, col_offset=31), lineno=225, col_offset=20), Assign([Name('expected', Store(), lineno=226, col_offset=20)], BinOp(BinOp(Str('\x00', lineno=226, col_offset=32), Mult(), BinOp(Attribute(Name('self', Load(), lineno=226, col_offset=42), 'bytesize', Load(), lineno=226, col_offset=42), Sub(), Call(Name('len', Load(), lineno=226, col_offset=58), [Name('expected', Load(), lineno=226, col_offset=62)], [], None, None, lineno=226, col_offset=58), lineno=226, col_offset=42), lineno=226, col_offset=32), Add(), Name('expected', Load(), lineno=227, col_offset=32), lineno=226, col_offset=32), lineno=226, col_offset=20), If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=228, col_offset=24), 'direction', Load(), lineno=228, col_offset=24), [Eq()], [Str('<', lineno=228, col_offset=42)], lineno=228, col_offset=24), BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=229, col_offset=24), 'direction', Load(), lineno=229, col_offset=24), [In()], [Tuple([Str('', lineno=229, col_offset=43), Str('@', lineno=229, col_offset=47), Str('=', lineno=229, col_offset=52)], Load(), lineno=229, col_offset=43)], lineno=229, col_offset=24), UnaryOp(Not(), Name('ISBIGENDIAN', Load(), lineno=229, col_offset=65), lineno=229, col_offset=61)], lineno=229, col_offset=24)], lineno=228, col_offset=24), [Assign([Name('expected', Store(), lineno=230, col_offset=24)], Call(Name('string_reverse', Load(), lineno=230, col_offset=35), [Name('expected', Load(), lineno=230, col_offset=50)], [], None, None, lineno=230, col_offset=35), lineno=230, col_offset=24)], [], lineno=228, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=20), 'assertEqual', Load(), lineno=231, col_offset=20), [Call(Name('len', Load(), lineno=231, col_offset=37), [Name('expected', Load(), lineno=231, col_offset=41)], [], None, None, lineno=231, col_offset=37), Attribute(Name('self', Load(), lineno=231, col_offset=52), 'bytesize', Load(), lineno=231, col_offset=52)], [], None, None, lineno=231, col_offset=20), lineno=231, col_offset=20), Assign([Name('got', Store(), lineno=234, col_offset=20)], Call(Name('pack', Load(), lineno=234, col_offset=26), [Name('format', Load(), lineno=234, col_offset=31), Name('x', Load(), lineno=234, col_offset=39)], [], None, None, lineno=234, col_offset=26), lineno=234, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=20), 'assertEqual', Load(), lineno=235, col_offset=20), [Name('got', Load(), lineno=235, col_offset=37), Name('expected', Load(), lineno=235, col_offset=42)], [], None, None, lineno=235, col_offset=20), lineno=235, col_offset=20), Assign([Name('retrieved', Store(), lineno=238, col_offset=20)], Subscript(Call(Name('unpack', Load(), lineno=238, col_offset=32), [Name('format', Load(), lineno=238, col_offset=39), Name('got', Load(), lineno=238, col_offset=47)], [], None, None, lineno=238, col_offset=32), Index(Num(0, lineno=238, col_offset=52)), Load(), lineno=238, col_offset=32), lineno=238, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=20), 'assertEqual', Load(), lineno=239, col_offset=20), [Name('x', Load(), lineno=239, col_offset=37), Name('retrieved', Load(), lineno=239, col_offset=40)], [], None, None, lineno=239, col_offset=20), lineno=239, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=20), 'assertRaises', Load(), lineno=242, col_offset=20), [Tuple([Attribute(Name('struct', Load(), lineno=242, col_offset=39), 'error', Load(), lineno=242, col_offset=39), Name('TypeError', Load(), lineno=242, col_offset=53)], Load(), lineno=242, col_offset=39), Name('unpack', Load(), lineno=242, col_offset=65), Name('format', Load(), lineno=242, col_offset=73), BinOp(Str('\x01', lineno=243, col_offset=65), Add(), Name('got', Load(), lineno=243, col_offset=74), lineno=243, col_offset=65)], [], None, None, lineno=242, col_offset=20), lineno=242, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=20), 'assertRaises', Load(), lineno=246, col_offset=20), [Tuple([Name('OverflowError', Load(), lineno=246, col_offset=39), Name('ValueError', Load(), lineno=246, col_offset=54), Attribute(Name('struct', Load(), lineno=246, col_offset=66), 'error', Load(), lineno=246, col_offset=66)], Load(), lineno=246, col_offset=39), Name('pack', Load(), lineno=247, col_offset=38), Name('format', Load(), lineno=247, col_offset=44), Name('x', Load(), lineno=247, col_offset=52)], [], None, None, lineno=246, col_offset=20), lineno=246, col_offset=20)], lineno=217, col_offset=16)], [], lineno=212, col_offset=12), FunctionDef('run', arguments([Name('self', Param(), lineno=249, col_offset=20)], None, None, []), [ImportFrom('random', [alias('randrange', None)], 0, lineno=250, col_offset=16), Assign([Name('values', Store(), lineno=253, col_offset=16)], List([], Load(), lineno=253, col_offset=25), lineno=253, col_offset=16), For(Name('exp', Store(), lineno=254, col_offset=20), Call(Name('range', Load(), lineno=254, col_offset=27), [BinOp(Attribute(Name('self', Load(), lineno=254, col_offset=33), 'bitsize', Load(), lineno=254, col_offset=33), Add(), Num(3, lineno=254, col_offset=48), lineno=254, col_offset=33)], [], None, None, lineno=254, col_offset=27), [Expr(Call(Attribute(Name('values', Load(), lineno=255, col_offset=20), 'append', Load(), lineno=255, col_offset=20), [BinOp(Num(1L, lineno=255, col_offset=34), LShift(), Name('exp', Load(), lineno=255, col_offset=40), lineno=255, col_offset=34)], [], None, None, lineno=255, col_offset=20), lineno=255, col_offset=20)], [], lineno=254, col_offset=16), For(Name('i', Store(), lineno=258, col_offset=20), Call(Name('range', Load(), lineno=258, col_offset=25), [Attribute(Name('self', Load(), lineno=258, col_offset=31), 'bitsize', Load(), lineno=258, col_offset=31)], [], None, None, lineno=258, col_offset=25), [Assign([Name('val', Store(), lineno=259, col_offset=20)], Num(0L, lineno=259, col_offset=26), lineno=259, col_offset=20), For(Name('j', Store(), lineno=260, col_offset=24), Call(Name('range', Load(), lineno=260, col_offset=29), [Attribute(Name('self', Load(), lineno=260, col_offset=35), 'bytesize', Load(), lineno=260, col_offset=35)], [], None, None, lineno=260, col_offset=29), [Assign([Name('val', Store(), lineno=261, col_offset=24)], BinOp(BinOp(Name('val', Load(), lineno=261, col_offset=31), LShift(), Num(8, lineno=261, col_offset=38), lineno=261, col_offset=31), BitOr(), Call(Name('randrange', Load(), lineno=261, col_offset=43), [Num(256, lineno=261, col_offset=53)], [], None, None, lineno=261, col_offset=43), lineno=261, col_offset=30), lineno=261, col_offset=24)], [], lineno=260, col_offset=20), Expr(Call(Attribute(Name('values', Load(), lineno=262, col_offset=20), 'append', Load(), lineno=262, col_offset=20), [Name('val', Load(), lineno=262, col_offset=34)], [], None, None, lineno=262, col_offset=20), lineno=262, col_offset=20)], [], lineno=258, col_offset=16), Expr(Call(Attribute(Name('values', Load(), lineno=265, col_offset=16), 'extend', Load(), lineno=265, col_offset=16), [List([Num(300, lineno=265, col_offset=31), Num(700000, lineno=265, col_offset=36), BinOp(Attribute(Name('sys', Load(), lineno=265, col_offset=44), 'maxint', Load(), lineno=265, col_offset=44), Mult(), Num(4, lineno=265, col_offset=55), lineno=265, col_offset=44)], Load(), lineno=265, col_offset=30)], [], None, None, lineno=265, col_offset=16), lineno=265, col_offset=16), For(Name('base', Store(), lineno=271, col_offset=20), Name('values', Load(), lineno=271, col_offset=28), [For(Name('val', Store(), lineno=272, col_offset=24), Tuple([UnaryOp(USub(), Name('base', Load(), lineno=272, col_offset=32), lineno=272, col_offset=31), Name('base', Load(), lineno=272, col_offset=38)], Load(), lineno=272, col_offset=31), [For(Name('incr', Store(), lineno=273, col_offset=28), Tuple([Num(-1, lineno=273, col_offset=37), Num(0, lineno=273, col_offset=40), Num(1, lineno=273, col_offset=43)], Load(), lineno=273, col_offset=36), [Assign([Name('x', Store(), lineno=274, col_offset=28)], BinOp(Name('val', Load(), lineno=274, col_offset=32), Add(), Name('incr', Load(), lineno=274, col_offset=38), lineno=274, col_offset=32), lineno=274, col_offset=28), Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=28), 'test_one', Load(), lineno=275, col_offset=28), [Call(Name('int', Load(), lineno=275, col_offset=42), [Name('x', Load(), lineno=275, col_offset=46)], [], None, None, lineno=275, col_offset=42)], [], None, None, lineno=275, col_offset=28), lineno=275, col_offset=28), Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=28), 'test_one', Load(), lineno=276, col_offset=28), [Call(Name('long', Load(), lineno=276, col_offset=42), [Name('x', Load(), lineno=276, col_offset=47)], [], None, None, lineno=276, col_offset=42)], [], None, None, lineno=276, col_offset=28), lineno=276, col_offset=28)], [], lineno=273, col_offset=24)], [], lineno=272, col_offset=20)], [], lineno=271, col_offset=16), ClassDef('NotAnIntNS', [Name('object', Load(), lineno=279, col_offset=33)], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=280, col_offset=32)], None, None, []), [Return(Num(42, lineno=281, col_offset=31), lineno=281, col_offset=24)], [], lineno=280, col_offset=20), FunctionDef('__long__', arguments([Name('self', Param(), lineno=283, col_offset=33)], None, None, []), [Return(Num(1729L, lineno=284, col_offset=31), lineno=284, col_offset=24)], [], lineno=283, col_offset=20)], [], lineno=279, col_offset=16), ClassDef('NotAnIntOS', [], [FunctionDef('__int__', arguments([Name('self', Param(), lineno=287, col_offset=32)], None, None, []), [Return(Num(85, lineno=288, col_offset=31), lineno=288, col_offset=24)], [], lineno=287, col_offset=20), FunctionDef('__long__', arguments([Name('self', Param(), lineno=290, col_offset=33)], None, None, []), [Return(Num(-163L, lineno=291, col_offset=32), lineno=291, col_offset=24)], [], lineno=290, col_offset=20)], [], lineno=286, col_offset=16), ClassDef('Indexable', [Name('object', Load(), lineno=296, col_offset=32)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=297, col_offset=33), Name('value', Param(), lineno=297, col_offset=39)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=298, col_offset=24), '_value', Store(), lineno=298, col_offset=24)], Name('value', Load(), lineno=298, col_offset=38), lineno=298, col_offset=24)], [], lineno=297, col_offset=20), FunctionDef('__index__', arguments([Name('self', Param(), lineno=300, col_offset=34)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=301, col_offset=31), '_value', Load(), lineno=301, col_offset=31), lineno=301, col_offset=24)], [], lineno=300, col_offset=20)], [], lineno=296, col_offset=16), ClassDef('BadIndex', [Name('object', Load(), lineno=305, col_offset=31)], [FunctionDef('__index__', arguments([Name('self', Param(), lineno=306, col_offset=34)], None, None, []), [Raise(Name('TypeError', Load(), lineno=307, col_offset=30), None, None, lineno=307, col_offset=24)], [], lineno=306, col_offset=20), FunctionDef('__int__', arguments([Name('self', Param(), lineno=309, col_offset=32)], None, None, []), [Return(Num(42, lineno=310, col_offset=31), lineno=310, col_offset=24)], [], lineno=309, col_offset=20)], [], lineno=305, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=312, col_offset=16), 'assertRaises', Load(), lineno=312, col_offset=16), [Tuple([Name('TypeError', Load(), lineno=312, col_offset=35), Attribute(Name('struct', Load(), lineno=312, col_offset=46), 'error', Load(), lineno=312, col_offset=46)], Load(), lineno=312, col_offset=35), Attribute(Name('struct', Load(), lineno=313, col_offset=34), 'pack', Load(), lineno=313, col_offset=34), Attribute(Name('self', Load(), lineno=313, col_offset=47), 'format', Load(), lineno=313, col_offset=47), Str('a string', lineno=314, col_offset=34)], [], None, None, lineno=312, col_offset=16), lineno=312, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=16), 'assertRaises', Load(), lineno=315, col_offset=16), [Tuple([Name('TypeError', Load(), lineno=315, col_offset=35), Attribute(Name('struct', Load(), lineno=315, col_offset=46), 'error', Load(), lineno=315, col_offset=46)], Load(), lineno=315, col_offset=35), Attribute(Name('struct', Load(), lineno=316, col_offset=34), 'pack', Load(), lineno=316, col_offset=34), Attribute(Name('self', Load(), lineno=316, col_offset=47), 'format', Load(), lineno=316, col_offset=47), Name('randrange', Load(), lineno=317, col_offset=34)], [], None, None, lineno=315, col_offset=16), lineno=315, col_offset=16), With(Call(Name('check_warnings', Load(), lineno=318, col_offset=21), [Tuple([Str('integer argument expected, got non-integer', lineno=318, col_offset=37), Name('DeprecationWarning', Load(), lineno=319, col_offset=56)], Load(), lineno=318, col_offset=37)], [], None, None, lineno=318, col_offset=21), None, [With(Call(Attribute(Name('self', Load(), lineno=320, col_offset=25), 'assertRaises', Load(), lineno=320, col_offset=25), [Tuple([Name('TypeError', Load(), lineno=320, col_offset=44), Attribute(Name('struct', Load(), lineno=320, col_offset=55), 'error', Load(), lineno=320, col_offset=55)], Load(), lineno=320, col_offset=44)], [], None, None, lineno=320, col_offset=25), None, [Expr(Call(Attribute(Name('struct', Load(), lineno=321, col_offset=24), 'pack', Load(), lineno=321, col_offset=24), [Attribute(Name('self', Load(), lineno=321, col_offset=36), 'format', Load(), lineno=321, col_offset=36), BinOp(Num(3, lineno=321, col_offset=49), Add(), Num(42j, lineno=321, col_offset=51), lineno=321, col_offset=49)], [], None, None, lineno=321, col_offset=24), lineno=321, col_offset=24)], lineno=320, col_offset=25)], lineno=318, col_offset=21), For(Name('nonint', Store(), lineno=326, col_offset=20), Tuple([Call(Name('NotAnIntNS', Load(), lineno=326, col_offset=30), [], [], None, None, lineno=326, col_offset=30), Call(Name('NotAnIntOS', Load(), lineno=326, col_offset=44), [], [], None, None, lineno=326, col_offset=44), Call(Name('BadIndex', Load(), lineno=326, col_offset=58), [], [], None, None, lineno=326, col_offset=58)], Load(), lineno=326, col_offset=30), [With(Call(Name('check_warnings', Load(), lineno=327, col_offset=25), [Tuple([Str('.*integer argument expected, got non-integer', lineno=327, col_offset=41), Name('DeprecationWarning', Load(), lineno=328, col_offset=53)], Load(), lineno=327, col_offset=41)], [], None, None, lineno=327, col_offset=25), Name('w', Store(), lineno=328, col_offset=77), [Assign([Name('got', Store(), lineno=329, col_offset=24)], Call(Attribute(Name('struct', Load(), lineno=329, col_offset=30), 'pack', Load(), lineno=329, col_offset=30), [Attribute(Name('self', Load(), lineno=329, col_offset=42), 'format', Load(), lineno=329, col_offset=42), Name('nonint', Load(), lineno=329, col_offset=55)], [], None, None, lineno=329, col_offset=30), lineno=329, col_offset=24)], lineno=327, col_offset=25), Assign([Name('lineno', Store(), lineno=330, col_offset=20)], BinOp(Attribute(Call(Attribute(Name('inspect', Load(), lineno=330, col_offset=29), 'currentframe', Load(), lineno=330, col_offset=29), [], [], None, None, lineno=330, col_offset=29), 'f_lineno', Load(), lineno=330, col_offset=29), Sub(), Num(1, lineno=330, col_offset=63), lineno=330, col_offset=29), lineno=330, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=20), 'assertEqual', Load(), lineno=331, col_offset=20), [Attribute(Name('w', Load(), lineno=331, col_offset=37), 'filename', Load(), lineno=331, col_offset=37), Name('testmod_filename', Load(), lineno=331, col_offset=49)], [], None, None, lineno=331, col_offset=20), lineno=331, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=332, col_offset=20), 'assertEqual', Load(), lineno=332, col_offset=20), [Attribute(Name('w', Load(), lineno=332, col_offset=37), 'lineno', Load(), lineno=332, col_offset=37), Name('lineno', Load(), lineno=332, col_offset=47)], [], None, None, lineno=332, col_offset=20), lineno=332, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=20), 'assertEqual', Load(), lineno=333, col_offset=20), [Call(Name('len', Load(), lineno=333, col_offset=37), [Attribute(Name('w', Load(), lineno=333, col_offset=41), 'warnings', Load(), lineno=333, col_offset=41)], [], None, None, lineno=333, col_offset=37), Num(1, lineno=333, col_offset=54)], [], None, None, lineno=333, col_offset=20), lineno=333, col_offset=20), Assign([Name('expected', Store(), lineno=334, col_offset=20)], Call(Attribute(Name('struct', Load(), lineno=334, col_offset=31), 'pack', Load(), lineno=334, col_offset=31), [Attribute(Name('self', Load(), lineno=334, col_offset=43), 'format', Load(), lineno=334, col_offset=43), Call(Name('int', Load(), lineno=334, col_offset=56), [Name('nonint', Load(), lineno=334, col_offset=60)], [], None, None, lineno=334, col_offset=56)], [], None, None, lineno=334, col_offset=31), lineno=334, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=335, col_offset=20), 'assertEqual', Load(), lineno=335, col_offset=20), [Name('got', Load(), lineno=335, col_offset=37), Name('expected', Load(), lineno=335, col_offset=42)], [], None, None, lineno=335, col_offset=20), lineno=335, col_offset=20)], [], lineno=326, col_offset=16), For(Name('obj', Store(), lineno=338, col_offset=20), Tuple([Call(Name('Indexable', Load(), lineno=338, col_offset=28), [Num(0, lineno=338, col_offset=38)], [], None, None, lineno=338, col_offset=28), Call(Name('Indexable', Load(), lineno=338, col_offset=42), [Num(10, lineno=338, col_offset=52)], [], None, None, lineno=338, col_offset=42), Call(Name('Indexable', Load(), lineno=338, col_offset=57), [Num(17, lineno=338, col_offset=67)], [], None, None, lineno=338, col_offset=57), Call(Name('Indexable', Load(), lineno=339, col_offset=28), [Num(42, lineno=339, col_offset=38)], [], None, None, lineno=339, col_offset=28), Call(Name('Indexable', Load(), lineno=339, col_offset=43), [Num(100, lineno=339, col_offset=53)], [], None, None, lineno=339, col_offset=43), Call(Name('Indexable', Load(), lineno=339, col_offset=59), [Num(127, lineno=339, col_offset=69)], [], None, None, lineno=339, col_offset=59)], Load(), lineno=338, col_offset=28), [TryExcept([Expr(Call(Attribute(Name('struct', Load(), lineno=341, col_offset=24), 'pack', Load(), lineno=341, col_offset=24), [Name('format', Load(), lineno=341, col_offset=36), Name('obj', Load(), lineno=341, col_offset=44)], [], None, None, lineno=341, col_offset=24), lineno=341, col_offset=24)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=343, col_offset=24), 'fail', Load(), lineno=343, col_offset=24), [Str("integer code pack failed on object with '__index__' method", lineno=343, col_offset=34)], [], None, None, lineno=343, col_offset=24), lineno=343, col_offset=24)], lineno=342, col_offset=20)], [], lineno=340, col_offset=20)], [], lineno=338, col_offset=16), For(Name('obj', Store(), lineno=347, col_offset=20), Tuple([Call(Name('Indexable', Load(), lineno=347, col_offset=28), [Str('a', lineno=347, col_offset=38)], [], None, None, lineno=347, col_offset=28), Call(Name('Indexable', Load(), lineno=347, col_offset=44), [Str(u'b', lineno=347, col_offset=54)], [], None, None, lineno=347, col_offset=44), Call(Name('Indexable', Load(), lineno=347, col_offset=61), [Name('None', Load(), lineno=347, col_offset=71)], [], None, None, lineno=347, col_offset=61), Call(Name('Indexable', Load(), lineno=348, col_offset=28), [Dict([Str('a', lineno=348, col_offset=39)], [Num(1, lineno=348, col_offset=44)], lineno=348, col_offset=38)], [], None, None, lineno=348, col_offset=28), Call(Name('Indexable', Load(), lineno=348, col_offset=49), [List([Num(1, lineno=348, col_offset=60), Num(2, lineno=348, col_offset=63), Num(3, lineno=348, col_offset=66)], Load(), lineno=348, col_offset=59)], [], None, None, lineno=348, col_offset=49)], Load(), lineno=347, col_offset=28), [Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=20), 'assertRaises', Load(), lineno=349, col_offset=20), [Tuple([Name('TypeError', Load(), lineno=349, col_offset=39), Attribute(Name('struct', Load(), lineno=349, col_offset=50), 'error', Load(), lineno=349, col_offset=50)], Load(), lineno=349, col_offset=39), Attribute(Name('struct', Load(), lineno=350, col_offset=38), 'pack', Load(), lineno=350, col_offset=38), Attribute(Name('self', Load(), lineno=350, col_offset=51), 'format', Load(), lineno=350, col_offset=51), Name('obj', Load(), lineno=351, col_offset=38)], [], None, None, lineno=349, col_offset=20), lineno=349, col_offset=20)], [], lineno=347, col_offset=16)], [], lineno=249, col_offset=12)], [], lineno=189, col_offset=8), Assign([Name('byteorders', Store(), lineno=353, col_offset=8)], Tuple([Str('', lineno=353, col_offset=21), Str('@', lineno=353, col_offset=25), Str('=', lineno=353, col_offset=30), Str('<', lineno=353, col_offset=35), Str('>', lineno=353, col_offset=40), Str('!', lineno=353, col_offset=45)], Load(), lineno=353, col_offset=21), lineno=353, col_offset=8), For(Name('code', Store(), lineno=354, col_offset=12), Name('integer_codes', Load(), lineno=354, col_offset=20), [For(Name('byteorder', Store(), lineno=355, col_offset=16), Name('byteorders', Load(), lineno=355, col_offset=29), [If(BoolOp(And(), [Compare(Name('byteorder', Load(), lineno=356, col_offset=20), [In()], [Tuple([Str('', lineno=356, col_offset=34), Str('@', lineno=356, col_offset=38)], Load(), lineno=356, col_offset=34)], lineno=356, col_offset=20), Compare(Name('code', Load(), lineno=356, col_offset=47), [In()], [Tuple([Str('q', lineno=356, col_offset=56), Str('Q', lineno=356, col_offset=61)], Load(), lineno=356, col_offset=56)], lineno=356, col_offset=47), UnaryOp(Not(), Name('HAVE_LONG_LONG', Load(), lineno=357, col_offset=24), lineno=357, col_offset=20)], lineno=356, col_offset=20), [Continue( lineno=358, col_offset=20)], [], lineno=356, col_offset=16), Assign([Name('format', Store(), lineno=359, col_offset=16)], BinOp(Name('byteorder', Load(), lineno=359, col_offset=25), Add(), Name('code', Load(), lineno=359, col_offset=35), lineno=359, col_offset=25), lineno=359, col_offset=16), Assign([Name('t', Store(), lineno=360, col_offset=16)], Call(Name('IntTester', Load(), lineno=360, col_offset=20), [Name('format', Load(), lineno=360, col_offset=30)], [], None, None, lineno=360, col_offset=20), lineno=360, col_offset=16), Expr(Call(Attribute(Name('t', Load(), lineno=361, col_offset=16), 'run', Load(), lineno=361, col_offset=16), [], [], None, None, lineno=361, col_offset=16), lineno=361, col_offset=16)], [], lineno=355, col_offset=12)], [], lineno=354, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('test_p_code', arguments([Name('self', Param(), lineno=363, col_offset=20)], None, None, []), [For(Tuple([Name('code', Store(), lineno=365, col_offset=12), Name('input', Store(), lineno=365, col_offset=18), Name('expected', Store(), lineno=365, col_offset=25), Name('expectedback', Store(), lineno=365, col_offset=35)], Store(), lineno=365, col_offset=12), List([Tuple([Str('p', lineno=366, col_offset=17), Str('abc', lineno=366, col_offset=21), Str('\x00', lineno=366, col_offset=28), Str('', lineno=366, col_offset=36)], Load(), lineno=366, col_offset=17), Tuple([Str('1p', lineno=367, col_offset=17), Str('abc', lineno=367, col_offset=23), Str('\x00', lineno=367, col_offset=30), Str('', lineno=367, col_offset=38)], Load(), lineno=367, col_offset=17), Tuple([Str('2p', lineno=368, col_offset=17), Str('abc', lineno=368, col_offset=23), Str('\x01a', lineno=368, col_offset=30), Str('a', lineno=368, col_offset=39)], Load(), lineno=368, col_offset=17), Tuple([Str('3p', lineno=369, col_offset=17), Str('abc', lineno=369, col_offset=23), Str('\x02ab', lineno=369, col_offset=30), Str('ab', lineno=369, col_offset=40)], Load(), lineno=369, col_offset=17), Tuple([Str('4p', lineno=370, col_offset=17), Str('abc', lineno=370, col_offset=23), Str('\x03abc', lineno=370, col_offset=30), Str('abc', lineno=370, col_offset=41)], Load(), lineno=370, col_offset=17), Tuple([Str('5p', lineno=371, col_offset=17), Str('abc', lineno=371, col_offset=23), Str('\x03abc\x00', lineno=371, col_offset=30), Str('abc', lineno=371, col_offset=45)], Load(), lineno=371, col_offset=17), Tuple([Str('6p', lineno=372, col_offset=17), Str('abc', lineno=372, col_offset=23), Str('\x03abc\x00\x00', lineno=372, col_offset=30), Str('abc', lineno=372, col_offset=49)], Load(), lineno=372, col_offset=17), Tuple([Str('1000p', lineno=373, col_offset=17), BinOp(Str('x', lineno=373, col_offset=26), Mult(), Num(1000, lineno=373, col_offset=30), lineno=373, col_offset=26), BinOp(Str('\xff', lineno=373, col_offset=36), Add(), BinOp(Str('x', lineno=373, col_offset=45), Mult(), Num(999, lineno=373, col_offset=49), lineno=373, col_offset=45), lineno=373, col_offset=36), BinOp(Str('x', lineno=373, col_offset=54), Mult(), Num(255, lineno=373, col_offset=58), lineno=373, col_offset=54)], Load(), lineno=373, col_offset=17)], Load(), lineno=365, col_offset=51), [Assign([Name('got', Store(), lineno=374, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=374, col_offset=18), 'pack', Load(), lineno=374, col_offset=18), [Name('code', Load(), lineno=374, col_offset=30), Name('input', Load(), lineno=374, col_offset=36)], [], None, None, lineno=374, col_offset=18), lineno=374, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=12), 'assertEqual', Load(), lineno=375, col_offset=12), [Name('got', Load(), lineno=375, col_offset=29), Name('expected', Load(), lineno=375, col_offset=34)], [], None, None, lineno=375, col_offset=12), lineno=375, col_offset=12), Assign([Tuple([Name('got', Store(), lineno=376, col_offset=13)], Store(), lineno=376, col_offset=13)], Call(Attribute(Name('struct', Load(), lineno=376, col_offset=21), 'unpack', Load(), lineno=376, col_offset=21), [Name('code', Load(), lineno=376, col_offset=35), Name('got', Load(), lineno=376, col_offset=41)], [], None, None, lineno=376, col_offset=21), lineno=376, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=12), 'assertEqual', Load(), lineno=377, col_offset=12), [Name('got', Load(), lineno=377, col_offset=29), Name('expectedback', Load(), lineno=377, col_offset=34)], [], None, None, lineno=377, col_offset=12), lineno=377, col_offset=12)], [], lineno=365, col_offset=8)], [], lineno=363, col_offset=4), FunctionDef('test_705836', arguments([Name('self', Param(), lineno=379, col_offset=20)], None, None, []), [Import([alias('math', None)], lineno=383, col_offset=8), For(Name('base', Store(), lineno=385, col_offset=12), Call(Name('range', Load(), lineno=385, col_offset=20), [Num(1, lineno=385, col_offset=26), Num(33, lineno=385, col_offset=29)], [], None, None, lineno=385, col_offset=20), [Assign([Name('delta', Store(), lineno=387, col_offset=12)], Num(0.5, lineno=387, col_offset=20), lineno=387, col_offset=12), While(Compare(BinOp(Name('base', Load(), lineno=388, col_offset=18), Sub(), BinOp(Name('delta', Load(), lineno=388, col_offset=25), Div(), Num(2.0, lineno=388, col_offset=33), lineno=388, col_offset=25), lineno=388, col_offset=18), [NotEq()], [Name('base', Load(), lineno=388, col_offset=40)], lineno=388, col_offset=18), [AugAssign(Name('delta', Store(), lineno=389, col_offset=16), Div(), Num(2.0, lineno=389, col_offset=25), lineno=389, col_offset=16)], [], lineno=388, col_offset=12), Assign([Name('smaller', Store(), lineno=390, col_offset=12)], BinOp(Name('base', Load(), lineno=390, col_offset=22), Sub(), Name('delta', Load(), lineno=390, col_offset=29), lineno=390, col_offset=22), lineno=390, col_offset=12), Assign([Name('packed', Store(), lineno=392, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=392, col_offset=21), 'pack', Load(), lineno=392, col_offset=21), [Str('<f', lineno=392, col_offset=33), Name('smaller', Load(), lineno=392, col_offset=39)], [], None, None, lineno=392, col_offset=21), lineno=392, col_offset=12), Assign([Name('unpacked', Store(), lineno=393, col_offset=12)], Subscript(Call(Attribute(Name('struct', Load(), lineno=393, col_offset=23), 'unpack', Load(), lineno=393, col_offset=23), [Str('<f', lineno=393, col_offset=37), Name('packed', Load(), lineno=393, col_offset=43)], [], None, None, lineno=393, col_offset=23), Index(Num(0, lineno=393, col_offset=51)), Load(), lineno=393, col_offset=23), lineno=393, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=12), 'assertEqual', Load(), lineno=396, col_offset=12), [Name('base', Load(), lineno=396, col_offset=29), Name('unpacked', Load(), lineno=396, col_offset=35)], [], None, None, lineno=396, col_offset=12), lineno=396, col_offset=12), Assign([Name('bigpacked', Store(), lineno=397, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=397, col_offset=24), 'pack', Load(), lineno=397, col_offset=24), [Str('>f', lineno=397, col_offset=36), Name('smaller', Load(), lineno=397, col_offset=42)], [], None, None, lineno=397, col_offset=24), lineno=397, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=12), 'assertEqual', Load(), lineno=398, col_offset=12), [Name('bigpacked', Load(), lineno=398, col_offset=29), Call(Name('string_reverse', Load(), lineno=398, col_offset=40), [Name('packed', Load(), lineno=398, col_offset=55)], [], None, None, lineno=398, col_offset=40)], [], None, None, lineno=398, col_offset=12), lineno=398, col_offset=12), Assign([Name('unpacked', Store(), lineno=399, col_offset=12)], Subscript(Call(Attribute(Name('struct', Load(), lineno=399, col_offset=23), 'unpack', Load(), lineno=399, col_offset=23), [Str('>f', lineno=399, col_offset=37), Name('bigpacked', Load(), lineno=399, col_offset=43)], [], None, None, lineno=399, col_offset=23), Index(Num(0, lineno=399, col_offset=54)), Load(), lineno=399, col_offset=23), lineno=399, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=12), 'assertEqual', Load(), lineno=400, col_offset=12), [Name('base', Load(), lineno=400, col_offset=29), Name('unpacked', Load(), lineno=400, col_offset=35)], [], None, None, lineno=400, col_offset=12), lineno=400, col_offset=12)], [], lineno=385, col_offset=8), Assign([Name('big', Store(), lineno=403, col_offset=8)], BinOp(BinOp(Num(1, lineno=403, col_offset=15), LShift(), Num(24, lineno=403, col_offset=20), lineno=403, col_offset=15), Sub(), Num(1, lineno=403, col_offset=26), lineno=403, col_offset=14), lineno=403, col_offset=8), Assign([Name('big', Store(), lineno=404, col_offset=8)], Call(Attribute(Name('math', Load(), lineno=404, col_offset=14), 'ldexp', Load(), lineno=404, col_offset=14), [Name('big', Load(), lineno=404, col_offset=25), BinOp(Num(127, lineno=404, col_offset=30), Sub(), Num(23, lineno=404, col_offset=36), lineno=404, col_offset=30)], [], None, None, lineno=404, col_offset=14), lineno=404, col_offset=8), Assign([Name('packed', Store(), lineno=405, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=405, col_offset=17), 'pack', Load(), lineno=405, col_offset=17), [Str('>f', lineno=405, col_offset=29), Name('big', Load(), lineno=405, col_offset=35)], [], None, None, lineno=405, col_offset=17), lineno=405, col_offset=8), Assign([Name('unpacked', Store(), lineno=406, col_offset=8)], Subscript(Call(Attribute(Name('struct', Load(), lineno=406, col_offset=19), 'unpack', Load(), lineno=406, col_offset=19), [Str('>f', lineno=406, col_offset=33), Name('packed', Load(), lineno=406, col_offset=39)], [], None, None, lineno=406, col_offset=19), Index(Num(0, lineno=406, col_offset=47)), Load(), lineno=406, col_offset=19), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertEqual', Load(), lineno=407, col_offset=8), [Name('big', Load(), lineno=407, col_offset=25), Name('unpacked', Load(), lineno=407, col_offset=30)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Assign([Name('big', Store(), lineno=410, col_offset=8)], BinOp(BinOp(Num(1, lineno=410, col_offset=15), LShift(), Num(25, lineno=410, col_offset=20), lineno=410, col_offset=15), Sub(), Num(1, lineno=410, col_offset=26), lineno=410, col_offset=14), lineno=410, col_offset=8), Assign([Name('big', Store(), lineno=411, col_offset=8)], Call(Attribute(Name('math', Load(), lineno=411, col_offset=14), 'ldexp', Load(), lineno=411, col_offset=14), [Name('big', Load(), lineno=411, col_offset=25), BinOp(Num(127, lineno=411, col_offset=30), Sub(), Num(24, lineno=411, col_offset=36), lineno=411, col_offset=30)], [], None, None, lineno=411, col_offset=14), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertRaises', Load(), lineno=412, col_offset=8), [Name('OverflowError', Load(), lineno=412, col_offset=26), Attribute(Name('struct', Load(), lineno=412, col_offset=41), 'pack', Load(), lineno=412, col_offset=41), Str('>f', lineno=412, col_offset=54), Name('big', Load(), lineno=412, col_offset=60)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8)], [], lineno=379, col_offset=4), FunctionDef('test_1530559', arguments([Name('self', Param(), lineno=414, col_offset=21)], None, None, []), [For(Name('endian', Store(), lineno=416, col_offset=12), Tuple([Str('', lineno=416, col_offset=23), Str('>', lineno=416, col_offset=27), Str('<', lineno=416, col_offset=32)], Load(), lineno=416, col_offset=23), [For(Name('fmt', Store(), lineno=417, col_offset=16), Name('integer_codes', Load(), lineno=417, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=16), 'check_float_coerce', Load(), lineno=418, col_offset=16), [BinOp(Name('endian', Load(), lineno=418, col_offset=40), Add(), Name('fmt', Load(), lineno=418, col_offset=49), lineno=418, col_offset=40), Num(1.0, lineno=418, col_offset=54)], [], None, None, lineno=418, col_offset=16), lineno=418, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=16), 'check_float_coerce', Load(), lineno=419, col_offset=16), [BinOp(Name('endian', Load(), lineno=419, col_offset=40), Add(), Name('fmt', Load(), lineno=419, col_offset=49), lineno=419, col_offset=40), Num(1.5, lineno=419, col_offset=54)], [], None, None, lineno=419, col_offset=16), lineno=419, col_offset=16)], [], lineno=417, col_offset=12)], [], lineno=416, col_offset=8)], [], lineno=414, col_offset=4), FunctionDef('test_unpack_from', arguments([Name('self', Param(), lineno=421, col_offset=25), Name('cls', Param(), lineno=421, col_offset=31)], None, None, [Name('str', Load(), lineno=421, col_offset=35)]), [Assign([Name('data', Store(), lineno=422, col_offset=8)], Call(Name('cls', Load(), lineno=422, col_offset=15), [Str('abcd01234', lineno=422, col_offset=19)], [], None, None, lineno=422, col_offset=15), lineno=422, col_offset=8), Assign([Name('fmt', Store(), lineno=423, col_offset=8)], Str('4s', lineno=423, col_offset=14), lineno=423, col_offset=8), Assign([Name('s', Store(), lineno=424, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=424, col_offset=12), 'Struct', Load(), lineno=424, col_offset=12), [Name('fmt', Load(), lineno=424, col_offset=26)], [], None, None, lineno=424, col_offset=12), lineno=424, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=426, col_offset=8), 'assertEqual', Load(), lineno=426, col_offset=8), [Call(Attribute(Name('s', Load(), lineno=426, col_offset=25), 'unpack_from', Load(), lineno=426, col_offset=25), [Name('data', Load(), lineno=426, col_offset=39)], [], None, None, lineno=426, col_offset=25), Tuple([Str('abcd', lineno=426, col_offset=47)], Load(), lineno=426, col_offset=47)], [], None, None, lineno=426, col_offset=8), lineno=426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=427, col_offset=8), 'assertEqual', Load(), lineno=427, col_offset=8), [Call(Attribute(Name('struct', Load(), lineno=427, col_offset=25), 'unpack_from', Load(), lineno=427, col_offset=25), [Name('fmt', Load(), lineno=427, col_offset=44), Name('data', Load(), lineno=427, col_offset=49)], [], None, None, lineno=427, col_offset=25), Tuple([Str('abcd', lineno=427, col_offset=57)], Load(), lineno=427, col_offset=57)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8), For(Name('i', Store(), lineno=428, col_offset=12), Call(Name('xrange', Load(), lineno=428, col_offset=17), [Num(6, lineno=428, col_offset=24)], [], None, None, lineno=428, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=429, col_offset=12), 'assertEqual', Load(), lineno=429, col_offset=12), [Call(Attribute(Name('s', Load(), lineno=429, col_offset=29), 'unpack_from', Load(), lineno=429, col_offset=29), [Name('data', Load(), lineno=429, col_offset=43), Name('i', Load(), lineno=429, col_offset=49)], [], None, None, lineno=429, col_offset=29), Tuple([Subscript(Name('data', Load(), lineno=429, col_offset=54), Slice(Name('i', Load(), lineno=429, col_offset=59), BinOp(Name('i', Load(), lineno=429, col_offset=61), Add(), Num(4, lineno=429, col_offset=63), lineno=429, col_offset=61), None), Load(), lineno=429, col_offset=54)], Load(), lineno=429, col_offset=54)], [], None, None, lineno=429, col_offset=12), lineno=429, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=12), 'assertEqual', Load(), lineno=430, col_offset=12), [Call(Attribute(Name('struct', Load(), lineno=430, col_offset=29), 'unpack_from', Load(), lineno=430, col_offset=29), [Name('fmt', Load(), lineno=430, col_offset=48), Name('data', Load(), lineno=430, col_offset=53), Name('i', Load(), lineno=430, col_offset=59)], [], None, None, lineno=430, col_offset=29), Tuple([Subscript(Name('data', Load(), lineno=430, col_offset=64), Slice(Name('i', Load(), lineno=430, col_offset=69), BinOp(Name('i', Load(), lineno=430, col_offset=71), Add(), Num(4, lineno=430, col_offset=73), lineno=430, col_offset=71), None), Load(), lineno=430, col_offset=64)], Load(), lineno=430, col_offset=64)], [], None, None, lineno=430, col_offset=12), lineno=430, col_offset=12)], [], lineno=428, col_offset=8), For(Name('i', Store(), lineno=431, col_offset=12), Call(Name('xrange', Load(), lineno=431, col_offset=17), [Num(6, lineno=431, col_offset=24), BinOp(Call(Name('len', Load(), lineno=431, col_offset=27), [Name('data', Load(), lineno=431, col_offset=31)], [], None, None, lineno=431, col_offset=27), Add(), Num(1, lineno=431, col_offset=39), lineno=431, col_offset=27)], [], None, None, lineno=431, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=12), 'assertRaises', Load(), lineno=432, col_offset=12), [Attribute(Name('struct', Load(), lineno=432, col_offset=30), 'error', Load(), lineno=432, col_offset=30), Attribute(Name('s', Load(), lineno=432, col_offset=44), 'unpack_from', Load(), lineno=432, col_offset=44), Name('data', Load(), lineno=432, col_offset=59), Name('i', Load(), lineno=432, col_offset=65)], [], None, None, lineno=432, col_offset=12), lineno=432, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=12), 'assertRaises', Load(), lineno=433, col_offset=12), [Attribute(Name('struct', Load(), lineno=433, col_offset=30), 'error', Load(), lineno=433, col_offset=30), Attribute(Name('struct', Load(), lineno=433, col_offset=44), 'unpack_from', Load(), lineno=433, col_offset=44), Name('fmt', Load(), lineno=433, col_offset=64), Name('data', Load(), lineno=433, col_offset=69), Name('i', Load(), lineno=433, col_offset=75)], [], None, None, lineno=433, col_offset=12), lineno=433, col_offset=12)], [], lineno=431, col_offset=8)], [], lineno=421, col_offset=4), FunctionDef('test_pack_into', arguments([Name('self', Param(), lineno=435, col_offset=23)], None, None, []), [Assign([Name('test_string', Store(), lineno=436, col_offset=8)], Str('Reykjavik rocks, eow!', lineno=436, col_offset=22), lineno=436, col_offset=8), Assign([Name('writable_buf', Store(), lineno=437, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=437, col_offset=23), 'array', Load(), lineno=437, col_offset=23), [Str('c', lineno=437, col_offset=35), BinOp(Str(' ', lineno=437, col_offset=40), Mult(), Num(100, lineno=437, col_offset=44), lineno=437, col_offset=40)], [], None, None, lineno=437, col_offset=23), lineno=437, col_offset=8), Assign([Name('fmt', Store(), lineno=438, col_offset=8)], Str('21s', lineno=438, col_offset=14), lineno=438, col_offset=8), Assign([Name('s', Store(), lineno=439, col_offset=8)], Call(Attribute(Name('struct', Load(), lineno=439, col_offset=12), 'Struct', Load(), lineno=439, col_offset=12), [Name('fmt', Load(), lineno=439, col_offset=26)], [], None, None, lineno=439, col_offset=12), lineno=439, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=442, col_offset=8), 'pack_into', Load(), lineno=442, col_offset=8), [Name('writable_buf', Load(), lineno=442, col_offset=20), Num(0, lineno=442, col_offset=34), Name('test_string', Load(), lineno=442, col_offset=37)], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8), Assign([Name('from_buf', Store(), lineno=443, col_offset=8)], Subscript(Call(Attribute(Name('writable_buf', Load(), lineno=443, col_offset=19), 'tostring', Load(), lineno=443, col_offset=19), [], [], None, None, lineno=443, col_offset=19), Slice(None, Call(Name('len', Load(), lineno=443, col_offset=44), [Name('test_string', Load(), lineno=443, col_offset=48)], [], None, None, lineno=443, col_offset=44), None), Load(), lineno=443, col_offset=19), lineno=443, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=8), 'assertEqual', Load(), lineno=444, col_offset=8), [Name('from_buf', Load(), lineno=444, col_offset=25), Name('test_string', Load(), lineno=444, col_offset=35)], [], None, None, lineno=444, col_offset=8), lineno=444, col_offset=8), Expr(Call(Attribute(Name('s', Load(), lineno=447, col_offset=8), 'pack_into', Load(), lineno=447, col_offset=8), [Name('writable_buf', Load(), lineno=447, col_offset=20), Num(10, lineno=447, col_offset=34), Name('test_string', Load(), lineno=447, col_offset=38)], [], None, None, lineno=447, col_offset=8), lineno=447, col_offset=8), Assign([Name('from_buf', Store(), lineno=448, col_offset=8)], Subscript(Call(Attribute(Name('writable_buf', Load(), lineno=448, col_offset=19), 'tostring', Load(), lineno=448, col_offset=19), [], [], None, None, lineno=448, col_offset=19), Slice(None, BinOp(Call(Name('len', Load(), lineno=448, col_offset=44), [Name('test_string', Load(), lineno=448, col_offset=48)], [], None, None, lineno=448, col_offset=44), Add(), Num(10, lineno=448, col_offset=61), lineno=448, col_offset=44), None), Load(), lineno=448, col_offset=19), lineno=448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'assertEqual', Load(), lineno=449, col_offset=8), [Name('from_buf', Load(), lineno=449, col_offset=25), BinOp(Subscript(Name('test_string', Load(), lineno=449, col_offset=35), Slice(None, Num(10, lineno=449, col_offset=48), None), Load(), lineno=449, col_offset=35), Add(), Name('test_string', Load(), lineno=449, col_offset=54), lineno=449, col_offset=35)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Assign([Name('small_buf', Store(), lineno=452, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=452, col_offset=20), 'array', Load(), lineno=452, col_offset=20), [Str('c', lineno=452, col_offset=32), BinOp(Str(' ', lineno=452, col_offset=37), Mult(), Num(10, lineno=452, col_offset=41), lineno=452, col_offset=37)], [], None, None, lineno=452, col_offset=20), lineno=452, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=8), 'assertRaises', Load(), lineno=453, col_offset=8), [Tuple([Name('ValueError', Load(), lineno=453, col_offset=27), Attribute(Name('struct', Load(), lineno=453, col_offset=39), 'error', Load(), lineno=453, col_offset=39)], Load(), lineno=453, col_offset=27), Attribute(Name('s', Load(), lineno=453, col_offset=54), 'pack_into', Load(), lineno=453, col_offset=54), Name('small_buf', Load(), lineno=453, col_offset=67), Num(0, lineno=453, col_offset=78), Name('test_string', Load(), lineno=454, col_offset=26)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=8), 'assertRaises', Load(), lineno=455, col_offset=8), [Tuple([Name('ValueError', Load(), lineno=455, col_offset=27), Attribute(Name('struct', Load(), lineno=455, col_offset=39), 'error', Load(), lineno=455, col_offset=39)], Load(), lineno=455, col_offset=27), Attribute(Name('s', Load(), lineno=455, col_offset=54), 'pack_into', Load(), lineno=455, col_offset=54), Name('small_buf', Load(), lineno=455, col_offset=67), Num(2, lineno=455, col_offset=78), Name('test_string', Load(), lineno=456, col_offset=26)], [], None, None, lineno=455, col_offset=8), lineno=455, col_offset=8), Assign([Name('sb', Store(), lineno=459, col_offset=8)], Name('small_buf', Load(), lineno=459, col_offset=13), lineno=459, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=8), 'assertRaises', Load(), lineno=460, col_offset=8), [Tuple([Name('TypeError', Load(), lineno=460, col_offset=27), Attribute(Name('struct', Load(), lineno=460, col_offset=38), 'error', Load(), lineno=460, col_offset=38)], Load(), lineno=460, col_offset=27), Attribute(Name('struct', Load(), lineno=460, col_offset=53), 'pack_into', Load(), lineno=460, col_offset=53), Str('', lineno=460, col_offset=71), Name('sb', Load(), lineno=460, col_offset=76), Name('None', Load(), lineno=461, col_offset=26)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8)], [], lineno=435, col_offset=4), FunctionDef('test_pack_into_fn', arguments([Name('self', Param(), lineno=463, col_offset=26)], None, None, []), [Assign([Name('test_string', Store(), lineno=464, col_offset=8)], Str('Reykjavik rocks, eow!', lineno=464, col_offset=22), lineno=464, col_offset=8), Assign([Name('writable_buf', Store(), lineno=465, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=465, col_offset=23), 'array', Load(), lineno=465, col_offset=23), [Str('c', lineno=465, col_offset=35), BinOp(Str(' ', lineno=465, col_offset=40), Mult(), Num(100, lineno=465, col_offset=44), lineno=465, col_offset=40)], [], None, None, lineno=465, col_offset=23), lineno=465, col_offset=8), Assign([Name('fmt', Store(), lineno=466, col_offset=8)], Str('21s', lineno=466, col_offset=14), lineno=466, col_offset=8), Assign([Name('pack_into', Store(), lineno=467, col_offset=8)], Lambda(arguments([], 'args', None, []), Call(Attribute(Name('struct', Load(), lineno=467, col_offset=34), 'pack_into', Load(), lineno=467, col_offset=34), [Name('fmt', Load(), lineno=467, col_offset=51)], [], Name('args', Load(), lineno=467, col_offset=57), None, lineno=467, col_offset=34), lineno=467, col_offset=20), lineno=467, col_offset=8), Expr(Call(Name('pack_into', Load(), lineno=470, col_offset=8), [Name('writable_buf', Load(), lineno=470, col_offset=18), Num(0, lineno=470, col_offset=32), Name('test_string', Load(), lineno=470, col_offset=35)], [], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8), Assign([Name('from_buf', Store(), lineno=471, col_offset=8)], Subscript(Call(Attribute(Name('writable_buf', Load(), lineno=471, col_offset=19), 'tostring', Load(), lineno=471, col_offset=19), [], [], None, None, lineno=471, col_offset=19), Slice(None, Call(Name('len', Load(), lineno=471, col_offset=44), [Name('test_string', Load(), lineno=471, col_offset=48)], [], None, None, lineno=471, col_offset=44), None), Load(), lineno=471, col_offset=19), lineno=471, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=472, col_offset=8), 'assertEqual', Load(), lineno=472, col_offset=8), [Name('from_buf', Load(), lineno=472, col_offset=25), Name('test_string', Load(), lineno=472, col_offset=35)], [], None, None, lineno=472, col_offset=8), lineno=472, col_offset=8), Expr(Call(Name('pack_into', Load(), lineno=475, col_offset=8), [Name('writable_buf', Load(), lineno=475, col_offset=18), Num(10, lineno=475, col_offset=32), Name('test_string', Load(), lineno=475, col_offset=36)], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8), Assign([Name('from_buf', Store(), lineno=476, col_offset=8)], Subscript(Call(Attribute(Name('writable_buf', Load(), lineno=476, col_offset=19), 'tostring', Load(), lineno=476, col_offset=19), [], [], None, None, lineno=476, col_offset=19), Slice(None, BinOp(Call(Name('len', Load(), lineno=476, col_offset=44), [Name('test_string', Load(), lineno=476, col_offset=48)], [], None, None, lineno=476, col_offset=44), Add(), Num(10, lineno=476, col_offset=61), lineno=476, col_offset=44), None), Load(), lineno=476, col_offset=19), lineno=476, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=477, col_offset=8), 'assertEqual', Load(), lineno=477, col_offset=8), [Name('from_buf', Load(), lineno=477, col_offset=25), BinOp(Subscript(Name('test_string', Load(), lineno=477, col_offset=35), Slice(None, Num(10, lineno=477, col_offset=48), None), Load(), lineno=477, col_offset=35), Add(), Name('test_string', Load(), lineno=477, col_offset=54), lineno=477, col_offset=35)], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8), Assign([Name('small_buf', Store(), lineno=480, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=480, col_offset=20), 'array', Load(), lineno=480, col_offset=20), [Str('c', lineno=480, col_offset=32), BinOp(Str(' ', lineno=480, col_offset=37), Mult(), Num(10, lineno=480, col_offset=41), lineno=480, col_offset=37)], [], None, None, lineno=480, col_offset=20), lineno=480, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=481, col_offset=8), 'assertRaises', Load(), lineno=481, col_offset=8), [Tuple([Name('ValueError', Load(), lineno=481, col_offset=27), Attribute(Name('struct', Load(), lineno=481, col_offset=39), 'error', Load(), lineno=481, col_offset=39)], Load(), lineno=481, col_offset=27), Name('pack_into', Load(), lineno=481, col_offset=54), Name('small_buf', Load(), lineno=481, col_offset=65), Num(0, lineno=481, col_offset=76), Name('test_string', Load(), lineno=482, col_offset=26)], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=8), 'assertRaises', Load(), lineno=483, col_offset=8), [Tuple([Name('ValueError', Load(), lineno=483, col_offset=27), Attribute(Name('struct', Load(), lineno=483, col_offset=39), 'error', Load(), lineno=483, col_offset=39)], Load(), lineno=483, col_offset=27), Name('pack_into', Load(), lineno=483, col_offset=54), Name('small_buf', Load(), lineno=483, col_offset=65), Num(2, lineno=483, col_offset=76), Name('test_string', Load(), lineno=484, col_offset=26)], [], None, None, lineno=483, col_offset=8), lineno=483, col_offset=8)], [], lineno=463, col_offset=4), FunctionDef('test_unpack_with_buffer', arguments([Name('self', Param(), lineno=486, col_offset=32)], None, None, []), [With(Call(Name('check_py3k_warnings', Load(), lineno=487, col_offset=13), [Tuple([Str('buffer.. not supported in 3.x', lineno=487, col_offset=34), Name('DeprecationWarning', Load(), lineno=488, col_offset=34)], Load(), lineno=487, col_offset=34)], [], None, None, lineno=487, col_offset=13), None, [Assign([Name('data1', Store(), lineno=490, col_offset=12)], Call(Attribute(Name('array', Load(), lineno=490, col_offset=20), 'array', Load(), lineno=490, col_offset=20), [Str('B', lineno=490, col_offset=32), Str('\x124Vx', lineno=490, col_offset=37)], [], None, None, lineno=490, col_offset=20), lineno=490, col_offset=12), Assign([Name('data2', Store(), lineno=491, col_offset=12)], Call(Name('buffer', Load(), lineno=491, col_offset=20), [Str('......\x124Vx......', lineno=491, col_offset=27), Num(6, lineno=491, col_offset=59), Num(4, lineno=491, col_offset=62)], [], None, None, lineno=491, col_offset=20), lineno=491, col_offset=12), For(Name('data', Store(), lineno=492, col_offset=16), List([Name('data1', Load(), lineno=492, col_offset=25), Name('data2', Load(), lineno=492, col_offset=32)], Load(), lineno=492, col_offset=24), [Assign([Tuple([Name('value', Store(), lineno=493, col_offset=16)], Store(), lineno=493, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=493, col_offset=25), 'unpack', Load(), lineno=493, col_offset=25), [Str('>I', lineno=493, col_offset=39), Name('data', Load(), lineno=493, col_offset=45)], [], None, None, lineno=493, col_offset=25), lineno=493, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=16), 'assertEqual', Load(), lineno=494, col_offset=16), [Name('value', Load(), lineno=494, col_offset=33), Num(305419896, lineno=494, col_offset=40)], [], None, None, lineno=494, col_offset=16), lineno=494, col_offset=16)], [], lineno=492, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=12), 'test_unpack_from', Load(), lineno=496, col_offset=12), [], [keyword('cls', Name('buffer', Load(), lineno=496, col_offset=38))], None, None, lineno=496, col_offset=12), lineno=496, col_offset=12)], lineno=487, col_offset=13)], [], lineno=486, col_offset=4), FunctionDef('test_bool', arguments([Name('self', Param(), lineno=498, col_offset=18)], None, None, []), [ClassDef('ExplodingBool', [Name('object', Load(), lineno=499, col_offset=28)], [FunctionDef('__nonzero__', arguments([Name('self', Param(), lineno=500, col_offset=28)], None, None, []), [Raise(Name('IOError', Load(), lineno=501, col_offset=22), None, None, lineno=501, col_offset=16)], [], lineno=500, col_offset=12)], [], lineno=499, col_offset=8), For(Name('prefix', Store(), lineno=502, col_offset=12), BinOp(Call(Name('tuple', Load(), lineno=502, col_offset=22), [Str('<>!=', lineno=502, col_offset=28)], [], None, None, lineno=502, col_offset=22), Add(), Tuple([Str('', lineno=502, col_offset=37)], Load(), lineno=502, col_offset=37), lineno=502, col_offset=22), [Assign([Name('false', Store(), lineno=503, col_offset=12)], Tuple([Tuple([], Load(), lineno=503, col_offset=20), List([], Load(), lineno=503, col_offset=24), List([], Load(), lineno=503, col_offset=28), Str('', lineno=503, col_offset=32), Num(0, lineno=503, col_offset=36)], Load(), lineno=503, col_offset=20), lineno=503, col_offset=12), Assign([Name('true', Store(), lineno=504, col_offset=12)], Tuple([List([Num(1, lineno=504, col_offset=20)], Load(), lineno=504, col_offset=19), Str('test', lineno=504, col_offset=24), Num(5, lineno=504, col_offset=32), Num(-1, lineno=504, col_offset=36), BinOp(Num(4294967295L, lineno=504, col_offset=39), Add(), Num(1, lineno=504, col_offset=51), lineno=504, col_offset=39), BinOp(Num(4294967295, lineno=504, col_offset=54), FloorDiv(), Num(2, lineno=504, col_offset=66), lineno=504, col_offset=54)], Load(), lineno=504, col_offset=19), lineno=504, col_offset=12), Assign([Name('falseFormat', Store(), lineno=506, col_offset=12)], BinOp(Name('prefix', Load(), lineno=506, col_offset=26), Add(), BinOp(Str('?', lineno=506, col_offset=35), Mult(), Call(Name('len', Load(), lineno=506, col_offset=41), [Name('false', Load(), lineno=506, col_offset=45)], [], None, None, lineno=506, col_offset=41), lineno=506, col_offset=35), lineno=506, col_offset=26), lineno=506, col_offset=12), Assign([Name('packedFalse', Store(), lineno=507, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=507, col_offset=26), 'pack', Load(), lineno=507, col_offset=26), [Name('falseFormat', Load(), lineno=507, col_offset=38)], [], Name('false', Load(), lineno=507, col_offset=52), None, lineno=507, col_offset=26), lineno=507, col_offset=12), Assign([Name('unpackedFalse', Store(), lineno=508, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=508, col_offset=28), 'unpack', Load(), lineno=508, col_offset=28), [Name('falseFormat', Load(), lineno=508, col_offset=42), Name('packedFalse', Load(), lineno=508, col_offset=55)], [], None, None, lineno=508, col_offset=28), lineno=508, col_offset=12), Assign([Name('trueFormat', Store(), lineno=510, col_offset=12)], BinOp(Name('prefix', Load(), lineno=510, col_offset=25), Add(), BinOp(Str('?', lineno=510, col_offset=34), Mult(), Call(Name('len', Load(), lineno=510, col_offset=40), [Name('true', Load(), lineno=510, col_offset=44)], [], None, None, lineno=510, col_offset=40), lineno=510, col_offset=34), lineno=510, col_offset=25), lineno=510, col_offset=12), Assign([Name('packedTrue', Store(), lineno=511, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=511, col_offset=25), 'pack', Load(), lineno=511, col_offset=25), [Name('trueFormat', Load(), lineno=511, col_offset=37)], [], Name('true', Load(), lineno=511, col_offset=50), None, lineno=511, col_offset=25), lineno=511, col_offset=12), Assign([Name('unpackedTrue', Store(), lineno=512, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=512, col_offset=27), 'unpack', Load(), lineno=512, col_offset=27), [Name('trueFormat', Load(), lineno=512, col_offset=41), Name('packedTrue', Load(), lineno=512, col_offset=53)], [], None, None, lineno=512, col_offset=27), lineno=512, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=514, col_offset=12), 'assertEqual', Load(), lineno=514, col_offset=12), [Call(Name('len', Load(), lineno=514, col_offset=29), [Name('true', Load(), lineno=514, col_offset=33)], [], None, None, lineno=514, col_offset=29), Call(Name('len', Load(), lineno=514, col_offset=40), [Name('unpackedTrue', Load(), lineno=514, col_offset=44)], [], None, None, lineno=514, col_offset=40)], [], None, None, lineno=514, col_offset=12), lineno=514, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=12), 'assertEqual', Load(), lineno=515, col_offset=12), [Call(Name('len', Load(), lineno=515, col_offset=29), [Name('false', Load(), lineno=515, col_offset=33)], [], None, None, lineno=515, col_offset=29), Call(Name('len', Load(), lineno=515, col_offset=41), [Name('unpackedFalse', Load(), lineno=515, col_offset=45)], [], None, None, lineno=515, col_offset=41)], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12), For(Name('t', Store(), lineno=517, col_offset=16), Name('unpackedFalse', Load(), lineno=517, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=16), 'assertFalse', Load(), lineno=518, col_offset=16), [Name('t', Load(), lineno=518, col_offset=33)], [], None, None, lineno=518, col_offset=16), lineno=518, col_offset=16)], [], lineno=517, col_offset=12), For(Name('t', Store(), lineno=519, col_offset=16), Name('unpackedTrue', Load(), lineno=519, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=16), 'assertTrue', Load(), lineno=520, col_offset=16), [Name('t', Load(), lineno=520, col_offset=32)], [], None, None, lineno=520, col_offset=16), lineno=520, col_offset=16)], [], lineno=519, col_offset=12), Assign([Name('packed', Store(), lineno=522, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=522, col_offset=21), 'pack', Load(), lineno=522, col_offset=21), [BinOp(Name('prefix', Load(), lineno=522, col_offset=33), Add(), Str('?', lineno=522, col_offset=40), lineno=522, col_offset=33), Num(1, lineno=522, col_offset=45)], [], None, None, lineno=522, col_offset=21), lineno=522, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=12), 'assertEqual', Load(), lineno=524, col_offset=12), [Call(Name('len', Load(), lineno=524, col_offset=29), [Name('packed', Load(), lineno=524, col_offset=33)], [], None, None, lineno=524, col_offset=29), Call(Attribute(Name('struct', Load(), lineno=524, col_offset=42), 'calcsize', Load(), lineno=524, col_offset=42), [BinOp(Name('prefix', Load(), lineno=524, col_offset=58), Add(), Str('?', lineno=524, col_offset=65), lineno=524, col_offset=58)], [], None, None, lineno=524, col_offset=42)], [], None, None, lineno=524, col_offset=12), lineno=524, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=526, col_offset=15), [Name('packed', Load(), lineno=526, col_offset=19)], [], None, None, lineno=526, col_offset=15), [NotEq()], [Num(1, lineno=526, col_offset=30)], lineno=526, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=16), 'assertFalse', Load(), lineno=527, col_offset=16), [Name('prefix', Load(), lineno=527, col_offset=33)], [keyword('msg', BinOp(Str('encoded bool is not one byte: %r', lineno=527, col_offset=45), Mod(), Name('packed', Load(), lineno=528, col_offset=46), lineno=527, col_offset=45))], None, None, lineno=527, col_offset=16), lineno=527, col_offset=16)], [], lineno=526, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=12), 'assertRaises', Load(), lineno=530, col_offset=12), [Name('IOError', Load(), lineno=530, col_offset=30), Attribute(Name('struct', Load(), lineno=530, col_offset=39), 'pack', Load(), lineno=530, col_offset=39), BinOp(Name('prefix', Load(), lineno=530, col_offset=52), Add(), Str('?', lineno=530, col_offset=61), lineno=530, col_offset=52), Call(Name('ExplodingBool', Load(), lineno=531, col_offset=30), [], [], None, None, lineno=531, col_offset=30)], [], None, None, lineno=530, col_offset=12), lineno=530, col_offset=12)], [], lineno=502, col_offset=8), For(Name('c', Store(), lineno=533, col_offset=12), List([Str('\x01', lineno=533, col_offset=18), Str('\x7f', lineno=533, col_offset=27), Str('\xff', lineno=533, col_offset=36), Str('\x0f', lineno=533, col_offset=45), Str('\xf0', lineno=533, col_offset=54)], Load(), lineno=533, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=12), 'assertTrue', Load(), lineno=534, col_offset=12), [Subscript(Call(Attribute(Name('struct', Load(), lineno=534, col_offset=28), 'unpack', Load(), lineno=534, col_offset=28), [Str('>?', lineno=534, col_offset=42), Name('c', Load(), lineno=534, col_offset=48)], [], None, None, lineno=534, col_offset=28), Index(Num(0, lineno=534, col_offset=51)), Load(), lineno=534, col_offset=28)], [], None, None, lineno=534, col_offset=12), lineno=534, col_offset=12)], [], lineno=533, col_offset=8)], [], lineno=498, col_offset=4), FunctionDef('test_crasher', arguments([Name('self', Param(), lineno=537, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=538, col_offset=8), 'assertRaises', Load(), lineno=538, col_offset=8), [Name('MemoryError', Load(), lineno=538, col_offset=26), Attribute(Name('struct', Load(), lineno=538, col_offset=39), 'pack', Load(), lineno=538, col_offset=39), Str('357913941c', lineno=538, col_offset=52), Str('a', lineno=538, col_offset=66)], [], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=536, col_offset=5), 'skipUnless', Load(), lineno=536, col_offset=5), [Name('IS32BIT', Load(), lineno=536, col_offset=25), Str('Specific to 32bit machines', lineno=536, col_offset=34)], [], None, None, lineno=536, col_offset=5)], lineno=536, col_offset=4), FunctionDef('test_count_overflow', arguments([Name('self', Param(), lineno=540, col_offset=28)], None, None, []), [Assign([Name('hugecount', Store(), lineno=541, col_offset=8)], Call(Attribute(Str('{}b', lineno=541, col_offset=20), 'format', Load(), lineno=541, col_offset=20), [BinOp(Attribute(Name('sys', Load(), lineno=541, col_offset=33), 'maxsize', Load(), lineno=541, col_offset=33), Add(), Num(1, lineno=541, col_offset=45), lineno=541, col_offset=33)], [], None, None, lineno=541, col_offset=20), lineno=541, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=542, col_offset=8), 'assertRaises', Load(), lineno=542, col_offset=8), [Attribute(Name('struct', Load(), lineno=542, col_offset=26), 'error', Load(), lineno=542, col_offset=26), Attribute(Name('struct', Load(), lineno=542, col_offset=40), 'calcsize', Load(), lineno=542, col_offset=40), Name('hugecount', Load(), lineno=542, col_offset=57)], [], None, None, lineno=542, col_offset=8), lineno=542, col_offset=8), Assign([Name('hugecount2', Store(), lineno=544, col_offset=8)], Call(Attribute(Str('{}b{}H', lineno=544, col_offset=21), 'format', Load(), lineno=544, col_offset=21), [BinOp(Attribute(Name('sys', Load(), lineno=544, col_offset=37), 'maxsize', Load(), lineno=544, col_offset=37), FloorDiv(), Num(2, lineno=544, col_offset=50), lineno=544, col_offset=37), BinOp(Attribute(Name('sys', Load(), lineno=544, col_offset=53), 'maxsize', Load(), lineno=544, col_offset=53), FloorDiv(), Num(2, lineno=544, col_offset=66), lineno=544, col_offset=53)], [], None, None, lineno=544, col_offset=21), lineno=544, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=545, col_offset=8), 'assertRaises', Load(), lineno=545, col_offset=8), [Attribute(Name('struct', Load(), lineno=545, col_offset=26), 'error', Load(), lineno=545, col_offset=26), Attribute(Name('struct', Load(), lineno=545, col_offset=40), 'calcsize', Load(), lineno=545, col_offset=40), Name('hugecount2', Load(), lineno=545, col_offset=57)], [], None, None, lineno=545, col_offset=8), lineno=545, col_offset=8)], [], lineno=540, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=548, col_offset=4), [Name('StructTest', Load(), lineno=548, col_offset=17)], [], None, None, lineno=548, col_offset=4), lineno=548, col_offset=4)], [], lineno=547, col_offset=0), If(Compare(Name('__name__', Load(), lineno=550, col_offset=3), [Eq()], [Str('__main__', lineno=550, col_offset=15)], lineno=550, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=551, col_offset=4), [], [], None, None, lineno=551, col_offset=4), lineno=551, col_offset=4)], [], lineno=550, col_offset=0)])
