Module([Import([alias('datetime', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), ClassDef('Test_Assertions', [Attribute(Name('unittest', Load(), lineno=6, col_offset=22), 'TestCase', Load(), lineno=6, col_offset=22)], [FunctionDef('test_AlmostEqual', arguments([Name('self', Param(), lineno=7, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=8, col_offset=8), 'assertAlmostEqual', Load(), lineno=8, col_offset=8), [Num(1.00000001, lineno=8, col_offset=31), Num(1.0, lineno=8, col_offset=43)], [], None, None, lineno=8, col_offset=8), lineno=8, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=8), 'assertNotAlmostEqual', Load(), lineno=9, col_offset=8), [Num(1.0000001, lineno=9, col_offset=34), Num(1.0, lineno=9, col_offset=45)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertRaises', Load(), lineno=10, col_offset=8), [Attribute(Name('self', Load(), lineno=10, col_offset=26), 'failureException', Load(), lineno=10, col_offset=26), Attribute(Name('self', Load(), lineno=11, col_offset=26), 'assertAlmostEqual', Load(), lineno=11, col_offset=26), Num(1.0000001, lineno=11, col_offset=50), Num(1.0, lineno=11, col_offset=61)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertRaises', Load(), lineno=12, col_offset=8), [Attribute(Name('self', Load(), lineno=12, col_offset=26), 'failureException', Load(), lineno=12, col_offset=26), Attribute(Name('self', Load(), lineno=13, col_offset=26), 'assertNotAlmostEqual', Load(), lineno=13, col_offset=26), Num(1.00000001, lineno=13, col_offset=53), Num(1.0, lineno=13, col_offset=65)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=8), 'assertAlmostEqual', Load(), lineno=15, col_offset=8), [Num(1.1, lineno=15, col_offset=31), Num(1.0, lineno=15, col_offset=36)], [keyword('places', Num(0, lineno=15, col_offset=48))], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertRaises', Load(), lineno=16, col_offset=8), [Attribute(Name('self', Load(), lineno=16, col_offset=26), 'failureException', Load(), lineno=16, col_offset=26), Attribute(Name('self', Load(), lineno=17, col_offset=26), 'assertAlmostEqual', Load(), lineno=17, col_offset=26), Num(1.1, lineno=17, col_offset=50), Num(1.0, lineno=17, col_offset=55)], [keyword('places', Num(1, lineno=17, col_offset=67))], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertAlmostEqual', Load(), lineno=19, col_offset=8), [Num(0, lineno=19, col_offset=31), BinOp(Num(0.1, lineno=19, col_offset=34), Add(), Num(0.1j, lineno=19, col_offset=37), lineno=19, col_offset=34)], [keyword('places', Num(0, lineno=19, col_offset=49))], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertNotAlmostEqual', Load(), lineno=20, col_offset=8), [Num(0, lineno=20, col_offset=34), BinOp(Num(0.1, lineno=20, col_offset=37), Add(), Num(0.1j, lineno=20, col_offset=40), lineno=20, col_offset=37)], [keyword('places', Num(1, lineno=20, col_offset=52))], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertRaises', Load(), lineno=21, col_offset=8), [Attribute(Name('self', Load(), lineno=21, col_offset=26), 'failureException', Load(), lineno=21, col_offset=26), Attribute(Name('self', Load(), lineno=22, col_offset=26), 'assertAlmostEqual', Load(), lineno=22, col_offset=26), Num(0, lineno=22, col_offset=50), BinOp(Num(0.1, lineno=22, col_offset=53), Add(), Num(0.1j, lineno=22, col_offset=56), lineno=22, col_offset=53)], [keyword('places', Num(1, lineno=22, col_offset=68))], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertRaises', Load(), lineno=23, col_offset=8), [Attribute(Name('self', Load(), lineno=23, col_offset=26), 'failureException', Load(), lineno=23, col_offset=26), Attribute(Name('self', Load(), lineno=24, col_offset=26), 'assertNotAlmostEqual', Load(), lineno=24, col_offset=26), Num(0, lineno=24, col_offset=53), BinOp(Num(0.1, lineno=24, col_offset=56), Add(), Num(0.1j, lineno=24, col_offset=59), lineno=24, col_offset=56)], [keyword('places', Num(0, lineno=24, col_offset=71))], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertAlmostEqual', Load(), lineno=26, col_offset=8), [Call(Name('float', Load(), lineno=26, col_offset=31), [Str('inf', lineno=26, col_offset=37)], [], None, None, lineno=26, col_offset=31), Call(Name('float', Load(), lineno=26, col_offset=45), [Str('inf', lineno=26, col_offset=51)], [], None, None, lineno=26, col_offset=45)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertRaises', Load(), lineno=27, col_offset=8), [Attribute(Name('self', Load(), lineno=27, col_offset=26), 'failureException', Load(), lineno=27, col_offset=26), Attribute(Name('self', Load(), lineno=27, col_offset=49), 'assertNotAlmostEqual', Load(), lineno=27, col_offset=49), Call(Name('float', Load(), lineno=28, col_offset=26), [Str('inf', lineno=28, col_offset=32)], [], None, None, lineno=28, col_offset=26), Call(Name('float', Load(), lineno=28, col_offset=40), [Str('inf', lineno=28, col_offset=46)], [], None, None, lineno=28, col_offset=40)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8)], [], lineno=7, col_offset=4), FunctionDef('test_AmostEqualWithDelta', arguments([Name('self', Param(), lineno=30, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertAlmostEqual', Load(), lineno=31, col_offset=8), [Num(1.1, lineno=31, col_offset=31), Num(1.0, lineno=31, col_offset=36)], [keyword('delta', Num(0.5, lineno=31, col_offset=47))], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertAlmostEqual', Load(), lineno=32, col_offset=8), [Num(1.0, lineno=32, col_offset=31), Num(1.1, lineno=32, col_offset=36)], [keyword('delta', Num(0.5, lineno=32, col_offset=47))], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertNotAlmostEqual', Load(), lineno=33, col_offset=8), [Num(1.1, lineno=33, col_offset=34), Num(1.0, lineno=33, col_offset=39)], [keyword('delta', Num(0.05, lineno=33, col_offset=50))], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertNotAlmostEqual', Load(), lineno=34, col_offset=8), [Num(1.0, lineno=34, col_offset=34), Num(1.1, lineno=34, col_offset=39)], [keyword('delta', Num(0.05, lineno=34, col_offset=50))], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertRaises', Load(), lineno=36, col_offset=8), [Attribute(Name('self', Load(), lineno=36, col_offset=26), 'failureException', Load(), lineno=36, col_offset=26), Attribute(Name('self', Load(), lineno=36, col_offset=49), 'assertAlmostEqual', Load(), lineno=36, col_offset=49), Num(1.1, lineno=37, col_offset=26), Num(1.0, lineno=37, col_offset=31)], [keyword('delta', Num(0.05, lineno=37, col_offset=42))], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertRaises', Load(), lineno=38, col_offset=8), [Attribute(Name('self', Load(), lineno=38, col_offset=26), 'failureException', Load(), lineno=38, col_offset=26), Attribute(Name('self', Load(), lineno=38, col_offset=49), 'assertNotAlmostEqual', Load(), lineno=38, col_offset=49), Num(1.1, lineno=39, col_offset=26), Num(1.0, lineno=39, col_offset=31)], [keyword('delta', Num(0.5, lineno=39, col_offset=42))], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertRaises', Load(), lineno=41, col_offset=8), [Name('TypeError', Load(), lineno=41, col_offset=26), Attribute(Name('self', Load(), lineno=41, col_offset=37), 'assertAlmostEqual', Load(), lineno=41, col_offset=37), Num(1.1, lineno=42, col_offset=26), Num(1.0, lineno=42, col_offset=31)], [keyword('places', Num(2, lineno=42, col_offset=43)), keyword('delta', Num(2, lineno=42, col_offset=52))], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'assertRaises', Load(), lineno=43, col_offset=8), [Name('TypeError', Load(), lineno=43, col_offset=26), Attribute(Name('self', Load(), lineno=43, col_offset=37), 'assertNotAlmostEqual', Load(), lineno=43, col_offset=37), Num(1.1, lineno=44, col_offset=26), Num(1.0, lineno=44, col_offset=31)], [keyword('places', Num(2, lineno=44, col_offset=43)), keyword('delta', Num(2, lineno=44, col_offset=52))], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Assign([Name('first', Store(), lineno=46, col_offset=8)], Call(Attribute(Attribute(Name('datetime', Load(), lineno=46, col_offset=16), 'datetime', Load(), lineno=46, col_offset=16), 'now', Load(), lineno=46, col_offset=16), [], [], None, None, lineno=46, col_offset=16), lineno=46, col_offset=8), Assign([Name('second', Store(), lineno=47, col_offset=8)], BinOp(Name('first', Load(), lineno=47, col_offset=17), Add(), Call(Attribute(Name('datetime', Load(), lineno=47, col_offset=25), 'timedelta', Load(), lineno=47, col_offset=25), [], [keyword('seconds', Num(10, lineno=47, col_offset=52))], None, None, lineno=47, col_offset=25), lineno=47, col_offset=17), lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertAlmostEqual', Load(), lineno=48, col_offset=8), [Name('first', Load(), lineno=48, col_offset=31), Name('second', Load(), lineno=48, col_offset=38)], [keyword('delta', Call(Attribute(Name('datetime', Load(), lineno=49, col_offset=37), 'timedelta', Load(), lineno=49, col_offset=37), [], [keyword('seconds', Num(20, lineno=49, col_offset=64))], None, None, lineno=49, col_offset=37))], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertNotAlmostEqual', Load(), lineno=50, col_offset=8), [Name('first', Load(), lineno=50, col_offset=34), Name('second', Load(), lineno=50, col_offset=41)], [keyword('delta', Call(Attribute(Name('datetime', Load(), lineno=51, col_offset=40), 'timedelta', Load(), lineno=51, col_offset=40), [], [keyword('seconds', Num(5, lineno=51, col_offset=67))], None, None, lineno=51, col_offset=40))], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('test_assertRaises', arguments([Name('self', Param(), lineno=53, col_offset=26)], None, None, []), [FunctionDef('_raise', arguments([Name('e', Param(), lineno=54, col_offset=19)], None, None, []), [Raise(Name('e', Load(), lineno=55, col_offset=18), None, None, lineno=55, col_offset=12)], [], lineno=54, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertRaises', Load(), lineno=56, col_offset=8), [Name('KeyError', Load(), lineno=56, col_offset=26), Name('_raise', Load(), lineno=56, col_offset=36), Name('KeyError', Load(), lineno=56, col_offset=44)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertRaises', Load(), lineno=57, col_offset=8), [Name('KeyError', Load(), lineno=57, col_offset=26), Name('_raise', Load(), lineno=57, col_offset=36), Call(Name('KeyError', Load(), lineno=57, col_offset=44), [Str('key', lineno=57, col_offset=53)], [], None, None, lineno=57, col_offset=44)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'assertRaises', Load(), lineno=59, col_offset=12), [Name('KeyError', Load(), lineno=59, col_offset=30), Lambda(arguments([], None, None, []), Name('None', Load(), lineno=59, col_offset=48), lineno=59, col_offset=40)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12)], [ExceptHandler(Attribute(Name('self', Load(), lineno=60, col_offset=15), 'failureException', Load(), lineno=60, col_offset=15), Name('e', Store(), lineno=60, col_offset=40), [Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=12), 'assertIn', Load(), lineno=61, col_offset=12), [Str('KeyError not raised', lineno=61, col_offset=26), Attribute(Name('e', Load(), lineno=61, col_offset=49), 'args', Load(), lineno=61, col_offset=49)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12)], lineno=60, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=12), 'fail', Load(), lineno=63, col_offset=12), [Str("assertRaises() didn't fail", lineno=63, col_offset=22)], [], None, None, lineno=63, col_offset=12), lineno=63, col_offset=12)], lineno=58, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=12), 'assertRaises', Load(), lineno=65, col_offset=12), [Name('KeyError', Load(), lineno=65, col_offset=30), Name('_raise', Load(), lineno=65, col_offset=40), Name('ValueError', Load(), lineno=65, col_offset=48)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=66, col_offset=15), None, [Pass( lineno=67, col_offset=12)], lineno=66, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=12), 'fail', Load(), lineno=69, col_offset=12), [Str("assertRaises() didn't let exception pass through", lineno=69, col_offset=22)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12)], lineno=64, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=70, col_offset=13), 'assertRaises', Load(), lineno=70, col_offset=13), [Name('KeyError', Load(), lineno=70, col_offset=31)], [], None, None, lineno=70, col_offset=13), Name('cm', Store(), lineno=70, col_offset=44), [TryExcept([Raise(Name('KeyError', Load(), lineno=72, col_offset=22), None, None, lineno=72, col_offset=16)], [ExceptHandler(Name('Exception', Load(), lineno=73, col_offset=19), Name('e', Store(), lineno=73, col_offset=30), [Raise(None, None, None, lineno=74, col_offset=16)], lineno=73, col_offset=12)], [], lineno=71, col_offset=12)], lineno=70, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertIs', Load(), lineno=75, col_offset=8), [Attribute(Name('cm', Load(), lineno=75, col_offset=22), 'exception', Load(), lineno=75, col_offset=22), Name('e', Load(), lineno=75, col_offset=36)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=77, col_offset=13), 'assertRaises', Load(), lineno=77, col_offset=13), [Name('KeyError', Load(), lineno=77, col_offset=31)], [], None, None, lineno=77, col_offset=13), None, [Raise(Call(Name('KeyError', Load(), lineno=78, col_offset=18), [Str('key', lineno=78, col_offset=27)], [], None, None, lineno=78, col_offset=18), None, None, lineno=78, col_offset=12)], lineno=77, col_offset=13), TryExcept([With(Call(Attribute(Name('self', Load(), lineno=80, col_offset=17), 'assertRaises', Load(), lineno=80, col_offset=17), [Name('KeyError', Load(), lineno=80, col_offset=35)], [], None, None, lineno=80, col_offset=17), None, [Pass( lineno=81, col_offset=16)], lineno=80, col_offset=17)], [ExceptHandler(Attribute(Name('self', Load(), lineno=82, col_offset=15), 'failureException', Load(), lineno=82, col_offset=15), Name('e', Store(), lineno=82, col_offset=40), [Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=12), 'assertIn', Load(), lineno=83, col_offset=12), [Str('KeyError not raised', lineno=83, col_offset=26), Attribute(Name('e', Load(), lineno=83, col_offset=49), 'args', Load(), lineno=83, col_offset=49)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12)], lineno=82, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=12), 'fail', Load(), lineno=85, col_offset=12), [Str("assertRaises() didn't fail", lineno=85, col_offset=22)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12)], lineno=79, col_offset=8), TryExcept([With(Call(Attribute(Name('self', Load(), lineno=87, col_offset=17), 'assertRaises', Load(), lineno=87, col_offset=17), [Name('KeyError', Load(), lineno=87, col_offset=35)], [], None, None, lineno=87, col_offset=17), None, [Raise(Name('ValueError', Load(), lineno=88, col_offset=22), None, None, lineno=88, col_offset=16)], lineno=87, col_offset=17)], [ExceptHandler(Name('ValueError', Load(), lineno=89, col_offset=15), None, [Pass( lineno=90, col_offset=12)], lineno=89, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=12), 'fail', Load(), lineno=92, col_offset=12), [Str("assertRaises() didn't let exception pass through", lineno=92, col_offset=22)], [], None, None, lineno=92, col_offset=12), lineno=92, col_offset=12)], lineno=86, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('testAssertNotRegexpMatches', arguments([Name('self', Param(), lineno=94, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertNotRegexpMatches', Load(), lineno=95, col_offset=8), [Str('Ala ma kota', lineno=95, col_offset=36), Str('r+', lineno=95, col_offset=51)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'assertNotRegexpMatches', Load(), lineno=97, col_offset=12), [Str('Ala ma kota', lineno=97, col_offset=40), Str('k.t', lineno=97, col_offset=55), Str('Message', lineno=97, col_offset=63)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12)], [ExceptHandler(Attribute(Name('self', Load(), lineno=98, col_offset=15), 'failureException', Load(), lineno=98, col_offset=15), Name('e', Store(), lineno=98, col_offset=38), [Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=12), 'assertIn', Load(), lineno=99, col_offset=12), [Str("'kot'", lineno=99, col_offset=26), Subscript(Attribute(Name('e', Load(), lineno=99, col_offset=35), 'args', Load(), lineno=99, col_offset=35), Index(Num(0, lineno=99, col_offset=42)), Load(), lineno=99, col_offset=35)], [], None, None, lineno=99, col_offset=12), lineno=99, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'assertIn', Load(), lineno=100, col_offset=12), [Str('Message', lineno=100, col_offset=26), Subscript(Attribute(Name('e', Load(), lineno=100, col_offset=37), 'args', Load(), lineno=100, col_offset=37), Index(Num(0, lineno=100, col_offset=44)), Load(), lineno=100, col_offset=37)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], lineno=98, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=12), 'fail', Load(), lineno=102, col_offset=12), [Str('assertNotRegexpMatches should have failed.', lineno=102, col_offset=22)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], lineno=96, col_offset=8)], [], lineno=94, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('TestLongMessage', [Attribute(Name('unittest', Load(), lineno=105, col_offset=22), 'TestCase', Load(), lineno=105, col_offset=22)], [Expr(Str('Test that the individual asserts honour longMessage.\n    This actually tests all the message behaviour for\n    asserts that use longMessage.', lineno=108, col_offset=-1), lineno=108, col_offset=-1), FunctionDef('setUp', arguments([Name('self', Param(), lineno=110, col_offset=14)], None, None, []), [ClassDef('TestableTestFalse', [Attribute(Name('unittest', Load(), lineno=111, col_offset=32), 'TestCase', Load(), lineno=111, col_offset=32)], [Assign([Name('longMessage', Store(), lineno=112, col_offset=12)], Name('False', Load(), lineno=112, col_offset=26), lineno=112, col_offset=12), Assign([Name('failureException', Store(), lineno=113, col_offset=12)], Attribute(Name('self', Load(), lineno=113, col_offset=31), 'failureException', Load(), lineno=113, col_offset=31), lineno=113, col_offset=12), FunctionDef('testTest', arguments([Name('self', Param(), lineno=115, col_offset=25)], None, None, []), [Pass( lineno=116, col_offset=16)], [], lineno=115, col_offset=12)], [], lineno=111, col_offset=8), ClassDef('TestableTestTrue', [Attribute(Name('unittest', Load(), lineno=118, col_offset=31), 'TestCase', Load(), lineno=118, col_offset=31)], [Assign([Name('longMessage', Store(), lineno=119, col_offset=12)], Name('True', Load(), lineno=119, col_offset=26), lineno=119, col_offset=12), Assign([Name('failureException', Store(), lineno=120, col_offset=12)], Attribute(Name('self', Load(), lineno=120, col_offset=31), 'failureException', Load(), lineno=120, col_offset=31), lineno=120, col_offset=12), FunctionDef('testTest', arguments([Name('self', Param(), lineno=122, col_offset=25)], None, None, []), [Pass( lineno=123, col_offset=16)], [], lineno=122, col_offset=12)], [], lineno=118, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=125, col_offset=8), 'testableTrue', Store(), lineno=125, col_offset=8)], Call(Name('TestableTestTrue', Load(), lineno=125, col_offset=28), [Str('testTest', lineno=125, col_offset=45)], [], None, None, lineno=125, col_offset=28), lineno=125, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=126, col_offset=8), 'testableFalse', Store(), lineno=126, col_offset=8)], Call(Name('TestableTestFalse', Load(), lineno=126, col_offset=29), [Str('testTest', lineno=126, col_offset=47)], [], None, None, lineno=126, col_offset=29), lineno=126, col_offset=8)], [], lineno=110, col_offset=4), FunctionDef('testDefault', arguments([Name('self', Param(), lineno=128, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=8), 'assertFalse', Load(), lineno=129, col_offset=8), [Attribute(Attribute(Name('unittest', Load(), lineno=129, col_offset=25), 'TestCase', Load(), lineno=129, col_offset=25), 'longMessage', Load(), lineno=129, col_offset=25)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('test_formatMsg', arguments([Name('self', Param(), lineno=131, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'assertEqual', Load(), lineno=132, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=25), 'testableFalse', Load(), lineno=132, col_offset=25), '_formatMessage', Load(), lineno=132, col_offset=25), [Name('None', Load(), lineno=132, col_offset=59), Str('foo', lineno=132, col_offset=65)], [], None, None, lineno=132, col_offset=25), Str('foo', lineno=132, col_offset=73)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'assertEqual', Load(), lineno=133, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=133, col_offset=25), 'testableFalse', Load(), lineno=133, col_offset=25), '_formatMessage', Load(), lineno=133, col_offset=25), [Str('foo', lineno=133, col_offset=59), Str('bar', lineno=133, col_offset=66)], [], None, None, lineno=133, col_offset=25), Str('foo', lineno=133, col_offset=74)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'assertEqual', Load(), lineno=135, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=135, col_offset=25), 'testableTrue', Load(), lineno=135, col_offset=25), '_formatMessage', Load(), lineno=135, col_offset=25), [Name('None', Load(), lineno=135, col_offset=58), Str('foo', lineno=135, col_offset=64)], [], None, None, lineno=135, col_offset=25), Str('foo', lineno=135, col_offset=72)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertEqual', Load(), lineno=136, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=136, col_offset=25), 'testableTrue', Load(), lineno=136, col_offset=25), '_formatMessage', Load(), lineno=136, col_offset=25), [Str('foo', lineno=136, col_offset=58), Str('bar', lineno=136, col_offset=65)], [], None, None, lineno=136, col_offset=25), Str('bar : foo', lineno=136, col_offset=73)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=139, col_offset=8), 'testableTrue', Load(), lineno=139, col_offset=8), '_formatMessage', Load(), lineno=139, col_offset=8), [Call(Name('object', Load(), lineno=139, col_offset=41), [], [], None, None, lineno=139, col_offset=41), Str('foo', lineno=139, col_offset=51)], [], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('test_formatMessage_unicode_error', arguments([Name('self', Param(), lineno=141, col_offset=41)], None, None, []), [Assign([Name('one', Store(), lineno=142, col_offset=8)], Call(Attribute(Str('', lineno=142, col_offset=14), 'join', Load(), lineno=142, col_offset=14), [GeneratorExp(Call(Name('chr', Load(), lineno=142, col_offset=22), [Name('i', Load(), lineno=142, col_offset=26)], [], None, None, lineno=142, col_offset=22), [comprehension(Name('i', Store(), lineno=142, col_offset=33), Call(Name('range', Load(), lineno=142, col_offset=38), [Num(255, lineno=142, col_offset=44)], [], None, None, lineno=142, col_offset=38), [])], lineno=142, col_offset=22)], [], None, None, lineno=142, col_offset=14), lineno=142, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'testableTrue', Load(), lineno=144, col_offset=8), '_formatMessage', Load(), lineno=144, col_offset=8), [Name('one', Load(), lineno=144, col_offset=41), Str(u'\ufffd', lineno=144, col_offset=46)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('assertMessages', arguments([Name('self', Param(), lineno=146, col_offset=23), Name('methodName', Param(), lineno=146, col_offset=29), Name('args', Param(), lineno=146, col_offset=41), Name('errors', Param(), lineno=146, col_offset=47)], None, None, []), [FunctionDef('getMethod', arguments([Name('i', Param(), lineno=147, col_offset=22)], None, None, []), [Assign([Name('useTestableFalse', Store(), lineno=148, col_offset=12)], Compare(Name('i', Load(), lineno=148, col_offset=32), [Lt()], [Num(2, lineno=148, col_offset=36)], lineno=148, col_offset=32), lineno=148, col_offset=12), If(Name('useTestableFalse', Load(), lineno=149, col_offset=15), [Assign([Name('test', Store(), lineno=150, col_offset=16)], Attribute(Name('self', Load(), lineno=150, col_offset=23), 'testableFalse', Load(), lineno=150, col_offset=23), lineno=150, col_offset=16)], [Assign([Name('test', Store(), lineno=152, col_offset=16)], Attribute(Name('self', Load(), lineno=152, col_offset=23), 'testableTrue', Load(), lineno=152, col_offset=23), lineno=152, col_offset=16)], lineno=149, col_offset=12), Return(Call(Name('getattr', Load(), lineno=153, col_offset=19), [Name('test', Load(), lineno=153, col_offset=27), Name('methodName', Load(), lineno=153, col_offset=33)], [], None, None, lineno=153, col_offset=19), lineno=153, col_offset=12)], [], lineno=147, col_offset=8), For(Tuple([Name('i', Store(), lineno=155, col_offset=12), Name('expected_regexp', Store(), lineno=155, col_offset=15)], Store(), lineno=155, col_offset=12), Call(Name('enumerate', Load(), lineno=155, col_offset=34), [Name('errors', Load(), lineno=155, col_offset=44)], [], None, None, lineno=155, col_offset=34), [Assign([Name('testMethod', Store(), lineno=156, col_offset=12)], Call(Name('getMethod', Load(), lineno=156, col_offset=25), [Name('i', Load(), lineno=156, col_offset=35)], [], None, None, lineno=156, col_offset=25), lineno=156, col_offset=12), Assign([Name('kwargs', Store(), lineno=157, col_offset=12)], Dict([], [], lineno=157, col_offset=21), lineno=157, col_offset=12), Assign([Name('withMsg', Store(), lineno=158, col_offset=12)], BinOp(Name('i', Load(), lineno=158, col_offset=22), Mod(), Num(2, lineno=158, col_offset=26), lineno=158, col_offset=22), lineno=158, col_offset=12), If(Name('withMsg', Load(), lineno=159, col_offset=15), [Assign([Name('kwargs', Store(), lineno=160, col_offset=16)], Dict([Str('msg', lineno=160, col_offset=26)], [Str('oops', lineno=160, col_offset=33)], lineno=160, col_offset=25), lineno=160, col_offset=16)], [], lineno=159, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=162, col_offset=17), 'assertRaisesRegexp', Load(), lineno=162, col_offset=17), [Attribute(Name('self', Load(), lineno=162, col_offset=41), 'failureException', Load(), lineno=162, col_offset=41)], [keyword('expected_regexp', Name('expected_regexp', Load(), lineno=163, col_offset=57))], None, None, lineno=162, col_offset=17), None, [Expr(Call(Name('testMethod', Load(), lineno=164, col_offset=16), [], [], Name('args', Load(), lineno=164, col_offset=28), Name('kwargs', Load(), lineno=164, col_offset=36), lineno=164, col_offset=16), lineno=164, col_offset=16)], lineno=162, col_offset=17)], [], lineno=155, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('testAssertTrue', arguments([Name('self', Param(), lineno=166, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'assertMessages', Load(), lineno=167, col_offset=8), [Str('assertTrue', lineno=167, col_offset=28), Tuple([Name('False', Load(), lineno=167, col_offset=43)], Load(), lineno=167, col_offset=43), List([Str('^False is not True$', lineno=168, col_offset=29), Str('^oops$', lineno=168, col_offset=52), Str('^False is not True$', lineno=168, col_offset=62), Str('^False is not True : oops$', lineno=169, col_offset=29)], Load(), lineno=168, col_offset=28)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('testAssertFalse', arguments([Name('self', Param(), lineno=171, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=8), 'assertMessages', Load(), lineno=172, col_offset=8), [Str('assertFalse', lineno=172, col_offset=28), Tuple([Name('True', Load(), lineno=172, col_offset=44)], Load(), lineno=172, col_offset=44), List([Str('^True is not False$', lineno=173, col_offset=29), Str('^oops$', lineno=173, col_offset=52), Str('^True is not False$', lineno=173, col_offset=62), Str('^True is not False : oops$', lineno=174, col_offset=29)], Load(), lineno=173, col_offset=28)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('testNotEqual', arguments([Name('self', Param(), lineno=176, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'assertMessages', Load(), lineno=177, col_offset=8), [Str('assertNotEqual', lineno=177, col_offset=28), Tuple([Num(1, lineno=177, col_offset=47), Num(1, lineno=177, col_offset=50)], Load(), lineno=177, col_offset=47), List([Str('^1 == 1$', lineno=178, col_offset=29), Str('^oops$', lineno=178, col_offset=41), Str('^1 == 1$', lineno=178, col_offset=51), Str('^1 == 1 : oops$', lineno=179, col_offset=29)], Load(), lineno=178, col_offset=28)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('testAlmostEqual', arguments([Name('self', Param(), lineno=181, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=8), 'assertMessages', Load(), lineno=182, col_offset=8), [Str('assertAlmostEqual', lineno=182, col_offset=28), Tuple([Num(1, lineno=182, col_offset=50), Num(2, lineno=182, col_offset=53)], Load(), lineno=182, col_offset=50), List([Str('^1 != 2 within 7 places$', lineno=183, col_offset=29), Str('^oops$', lineno=183, col_offset=57), Str('^1 != 2 within 7 places$', lineno=184, col_offset=29), Str('^1 != 2 within 7 places : oops$', lineno=184, col_offset=57)], Load(), lineno=183, col_offset=28)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('testNotAlmostEqual', arguments([Name('self', Param(), lineno=186, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertMessages', Load(), lineno=187, col_offset=8), [Str('assertNotAlmostEqual', lineno=187, col_offset=28), Tuple([Num(1, lineno=187, col_offset=53), Num(1, lineno=187, col_offset=56)], Load(), lineno=187, col_offset=53), List([Str('^1 == 1 within 7 places$', lineno=188, col_offset=29), Str('^oops$', lineno=188, col_offset=57), Str('^1 == 1 within 7 places$', lineno=189, col_offset=29), Str('^1 == 1 within 7 places : oops$', lineno=189, col_offset=57)], Load(), lineno=188, col_offset=28)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('test_baseAssertEqual', arguments([Name('self', Param(), lineno=191, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertMessages', Load(), lineno=192, col_offset=8), [Str('_baseAssertEqual', lineno=192, col_offset=28), Tuple([Num(1, lineno=192, col_offset=49), Num(2, lineno=192, col_offset=52)], Load(), lineno=192, col_offset=49), List([Str('^1 != 2$', lineno=193, col_offset=29), Str('^oops$', lineno=193, col_offset=41), Str('^1 != 2$', lineno=193, col_offset=51), Str('^1 != 2 : oops$', lineno=193, col_offset=63)], Load(), lineno=193, col_offset=28)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('testAssertSequenceEqual', arguments([Name('self', Param(), lineno=195, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertMessages', Load(), lineno=198, col_offset=8), [Str('assertSequenceEqual', lineno=198, col_offset=28), Tuple([List([], Load(), lineno=198, col_offset=52), List([Name('None', Load(), lineno=198, col_offset=57)], Load(), lineno=198, col_offset=56)], Load(), lineno=198, col_offset=52), List([Str('\\+ \\[None\\]$', lineno=199, col_offset=29), Str('^oops$', lineno=199, col_offset=45), Str('\\+ \\[None\\]$', lineno=199, col_offset=55), Str('\\+ \\[None\\] : oops$', lineno=200, col_offset=29)], Load(), lineno=199, col_offset=28)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('testAssertSetEqual', arguments([Name('self', Param(), lineno=202, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'assertMessages', Load(), lineno=203, col_offset=8), [Str('assertSetEqual', lineno=203, col_offset=28), Tuple([Call(Name('set', Load(), lineno=203, col_offset=47), [], [], None, None, lineno=203, col_offset=47), Call(Name('set', Load(), lineno=203, col_offset=54), [List([Name('None', Load(), lineno=203, col_offset=59)], Load(), lineno=203, col_offset=58)], [], None, None, lineno=203, col_offset=54)], Load(), lineno=203, col_offset=47), List([Str('None$', lineno=204, col_offset=29), Str('^oops$', lineno=204, col_offset=38), Str('None$', lineno=204, col_offset=48), Str('None : oops$', lineno=205, col_offset=29)], Load(), lineno=204, col_offset=28)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8)], [], lineno=202, col_offset=4), FunctionDef('testAssertIn', arguments([Name('self', Param(), lineno=207, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertMessages', Load(), lineno=208, col_offset=8), [Str('assertIn', lineno=208, col_offset=28), Tuple([Name('None', Load(), lineno=208, col_offset=41), List([], Load(), lineno=208, col_offset=47)], Load(), lineno=208, col_offset=41), List([Str('^None not found in \\[\\]$', lineno=209, col_offset=29), Str('^oops$', lineno=209, col_offset=57), Str('^None not found in \\[\\]$', lineno=210, col_offset=29), Str('^None not found in \\[\\] : oops$', lineno=211, col_offset=29)], Load(), lineno=209, col_offset=28)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('testAssertNotIn', arguments([Name('self', Param(), lineno=213, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'assertMessages', Load(), lineno=214, col_offset=8), [Str('assertNotIn', lineno=214, col_offset=28), Tuple([Name('None', Load(), lineno=214, col_offset=44), List([Name('None', Load(), lineno=214, col_offset=51)], Load(), lineno=214, col_offset=50)], Load(), lineno=214, col_offset=44), List([Str('^None unexpectedly found in \\[None\\]$', lineno=215, col_offset=29), Str('^oops$', lineno=215, col_offset=70), Str('^None unexpectedly found in \\[None\\]$', lineno=216, col_offset=29), Str('^None unexpectedly found in \\[None\\] : oops$', lineno=217, col_offset=29)], Load(), lineno=215, col_offset=28)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8)], [], lineno=213, col_offset=4), FunctionDef('testAssertDictEqual', arguments([Name('self', Param(), lineno=219, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertMessages', Load(), lineno=220, col_offset=8), [Str('assertDictEqual', lineno=220, col_offset=28), Tuple([Dict([], [], lineno=220, col_offset=48), Dict([Str('key', lineno=220, col_offset=53)], [Str('value', lineno=220, col_offset=60)], lineno=220, col_offset=52)], Load(), lineno=220, col_offset=48), List([Str("\\+ \\{'key': 'value'\\}$", lineno=221, col_offset=29), Str('^oops$', lineno=221, col_offset=56), Str("\\+ \\{'key': 'value'\\}$", lineno=222, col_offset=29), Str("\\+ \\{'key': 'value'\\} : oops$", lineno=223, col_offset=29)], Load(), lineno=221, col_offset=28)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('testAssertDictContainsSubset', arguments([Name('self', Param(), lineno=225, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertMessages', Load(), lineno=226, col_offset=8), [Str('assertDictContainsSubset', lineno=226, col_offset=28), Tuple([Dict([Str('key', lineno=226, col_offset=58)], [Str('value', lineno=226, col_offset=65)], lineno=226, col_offset=57), Dict([], [], lineno=226, col_offset=75)], Load(), lineno=226, col_offset=57), List([Str("^Missing: 'key'$", lineno=227, col_offset=29), Str('^oops$', lineno=227, col_offset=49), Str("^Missing: 'key'$", lineno=228, col_offset=29), Str("^Missing: 'key' : oops$", lineno=229, col_offset=29)], Load(), lineno=227, col_offset=28)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=225, col_offset=4), FunctionDef('testAssertItemsEqual', arguments([Name('self', Param(), lineno=231, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertMessages', Load(), lineno=232, col_offset=8), [Str('assertItemsEqual', lineno=232, col_offset=28), Tuple([List([], Load(), lineno=232, col_offset=49), List([Name('None', Load(), lineno=232, col_offset=54)], Load(), lineno=232, col_offset=53)], Load(), lineno=232, col_offset=49), List([Str('\\[None\\]$', lineno=233, col_offset=29), Str('^oops$', lineno=233, col_offset=43), Str('\\[None\\]$', lineno=234, col_offset=29), Str('\\[None\\] : oops$', lineno=235, col_offset=29)], Load(), lineno=233, col_offset=28)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('testAssertMultiLineEqual', arguments([Name('self', Param(), lineno=237, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'assertMessages', Load(), lineno=238, col_offset=8), [Str('assertMultiLineEqual', lineno=238, col_offset=28), Tuple([Str('', lineno=238, col_offset=53), Str('foo', lineno=238, col_offset=57)], Load(), lineno=238, col_offset=53), List([Str('\\+ foo$', lineno=239, col_offset=29), Str('^oops$', lineno=239, col_offset=41), Str('\\+ foo$', lineno=240, col_offset=29), Str('\\+ foo : oops$', lineno=241, col_offset=29)], Load(), lineno=239, col_offset=28)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('testAssertLess', arguments([Name('self', Param(), lineno=243, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertMessages', Load(), lineno=244, col_offset=8), [Str('assertLess', lineno=244, col_offset=28), Tuple([Num(2, lineno=244, col_offset=43), Num(1, lineno=244, col_offset=46)], Load(), lineno=244, col_offset=43), List([Str('^2 not less than 1$', lineno=245, col_offset=29), Str('^oops$', lineno=245, col_offset=52), Str('^2 not less than 1$', lineno=246, col_offset=29), Str('^2 not less than 1 : oops$', lineno=246, col_offset=52)], Load(), lineno=245, col_offset=28)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('testAssertLessEqual', arguments([Name('self', Param(), lineno=248, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertMessages', Load(), lineno=249, col_offset=8), [Str('assertLessEqual', lineno=249, col_offset=28), Tuple([Num(2, lineno=249, col_offset=48), Num(1, lineno=249, col_offset=51)], Load(), lineno=249, col_offset=48), List([Str('^2 not less than or equal to 1$', lineno=250, col_offset=29), Str('^oops$', lineno=250, col_offset=64), Str('^2 not less than or equal to 1$', lineno=251, col_offset=29), Str('^2 not less than or equal to 1 : oops$', lineno=252, col_offset=29)], Load(), lineno=250, col_offset=28)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8)], [], lineno=248, col_offset=4), FunctionDef('testAssertGreater', arguments([Name('self', Param(), lineno=254, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertMessages', Load(), lineno=255, col_offset=8), [Str('assertGreater', lineno=255, col_offset=28), Tuple([Num(1, lineno=255, col_offset=46), Num(2, lineno=255, col_offset=49)], Load(), lineno=255, col_offset=46), List([Str('^1 not greater than 2$', lineno=256, col_offset=29), Str('^oops$', lineno=256, col_offset=55), Str('^1 not greater than 2$', lineno=257, col_offset=29), Str('^1 not greater than 2 : oops$', lineno=258, col_offset=29)], Load(), lineno=256, col_offset=28)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8)], [], lineno=254, col_offset=4), FunctionDef('testAssertGreaterEqual', arguments([Name('self', Param(), lineno=260, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=8), 'assertMessages', Load(), lineno=261, col_offset=8), [Str('assertGreaterEqual', lineno=261, col_offset=28), Tuple([Num(1, lineno=261, col_offset=51), Num(2, lineno=261, col_offset=54)], Load(), lineno=261, col_offset=51), List([Str('^1 not greater than or equal to 2$', lineno=262, col_offset=29), Str('^oops$', lineno=262, col_offset=67), Str('^1 not greater than or equal to 2$', lineno=263, col_offset=29), Str('^1 not greater than or equal to 2 : oops$', lineno=264, col_offset=29)], Load(), lineno=262, col_offset=28)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8)], [], lineno=260, col_offset=4), FunctionDef('testAssertIsNone', arguments([Name('self', Param(), lineno=266, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=8), 'assertMessages', Load(), lineno=267, col_offset=8), [Str('assertIsNone', lineno=267, col_offset=28), Tuple([Str('not None', lineno=267, col_offset=45)], Load(), lineno=267, col_offset=45), List([Str("^'not None' is not None$", lineno=268, col_offset=29), Str('^oops$', lineno=268, col_offset=57), Str("^'not None' is not None$", lineno=269, col_offset=29), Str("^'not None' is not None : oops$", lineno=270, col_offset=29)], Load(), lineno=268, col_offset=28)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('testAssertIsNotNone', arguments([Name('self', Param(), lineno=272, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertMessages', Load(), lineno=273, col_offset=8), [Str('assertIsNotNone', lineno=273, col_offset=28), Tuple([Name('None', Load(), lineno=273, col_offset=48)], Load(), lineno=273, col_offset=48), List([Str('^unexpectedly None$', lineno=274, col_offset=29), Str('^oops$', lineno=274, col_offset=52), Str('^unexpectedly None$', lineno=275, col_offset=29), Str('^unexpectedly None : oops$', lineno=276, col_offset=29)], Load(), lineno=274, col_offset=28)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('testAssertIs', arguments([Name('self', Param(), lineno=278, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertMessages', Load(), lineno=279, col_offset=8), [Str('assertIs', lineno=279, col_offset=28), Tuple([Name('None', Load(), lineno=279, col_offset=41), Str('foo', lineno=279, col_offset=47)], Load(), lineno=279, col_offset=41), List([Str("^None is not 'foo'$", lineno=280, col_offset=29), Str('^oops$', lineno=280, col_offset=52), Str("^None is not 'foo'$", lineno=281, col_offset=29), Str("^None is not 'foo' : oops$", lineno=282, col_offset=29)], Load(), lineno=280, col_offset=28)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=278, col_offset=4), FunctionDef('testAssertIsNot', arguments([Name('self', Param(), lineno=284, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertMessages', Load(), lineno=285, col_offset=8), [Str('assertIsNot', lineno=285, col_offset=28), Tuple([Name('None', Load(), lineno=285, col_offset=44), Name('None', Load(), lineno=285, col_offset=50)], Load(), lineno=285, col_offset=44), List([Str('^unexpectedly identical: None$', lineno=286, col_offset=29), Str('^oops$', lineno=286, col_offset=63), Str('^unexpectedly identical: None$', lineno=287, col_offset=29), Str('^unexpectedly identical: None : oops$', lineno=288, col_offset=29)], Load(), lineno=286, col_offset=28)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=284, col_offset=4)], [], lineno=105, col_offset=0), If(Compare(Name('__name__', Load(), lineno=291, col_offset=3), [Eq()], [Str('__main__', lineno=291, col_offset=15)], lineno=291, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=292, col_offset=4), 'main', Load(), lineno=292, col_offset=4), [], [], None, None, lineno=292, col_offset=4), lineno=292, col_offset=4)], [], lineno=291, col_offset=0)])
