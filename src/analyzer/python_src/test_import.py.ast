Module([Import([alias('imp', None)], lineno=1, col_offset=0), Import([alias('marshal', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('py_compile', None)], lineno=4, col_offset=0), Import([alias('random', None)], lineno=5, col_offset=0), Import([alias('stat', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('unittest', None)], lineno=8, col_offset=0), ImportFrom('test.test_support', [alias('unlink', None), alias('TESTFN', None), alias('unload', None), alias('run_unittest', None), alias('rmtree', None), alias('is_jython', None), alias('check_warnings', None), alias('EnvironmentVarGuard', None)], 0, lineno=9, col_offset=0), FunctionDef('remove_files', arguments([Name('name', Param(), lineno=13, col_offset=17)], None, None, []), [For(Name('f', Store(), lineno=14, col_offset=8), Tuple([BinOp(BinOp(Name('name', Load(), lineno=14, col_offset=14), Add(), Attribute(Name('os', Load(), lineno=14, col_offset=21), 'extsep', Load(), lineno=14, col_offset=21), lineno=14, col_offset=14), Add(), Str('py', lineno=14, col_offset=33), lineno=14, col_offset=31), BinOp(BinOp(Name('name', Load(), lineno=15, col_offset=14), Add(), Attribute(Name('os', Load(), lineno=15, col_offset=21), 'extsep', Load(), lineno=15, col_offset=21), lineno=15, col_offset=14), Add(), Str('pyc', lineno=15, col_offset=33), lineno=15, col_offset=31), BinOp(BinOp(Name('name', Load(), lineno=16, col_offset=14), Add(), Attribute(Name('os', Load(), lineno=16, col_offset=21), 'extsep', Load(), lineno=16, col_offset=21), lineno=16, col_offset=14), Add(), Str('pyo', lineno=16, col_offset=33), lineno=16, col_offset=31), BinOp(BinOp(Name('name', Load(), lineno=17, col_offset=14), Add(), Attribute(Name('os', Load(), lineno=17, col_offset=21), 'extsep', Load(), lineno=17, col_offset=21), lineno=17, col_offset=14), Add(), Str('pyw', lineno=17, col_offset=33), lineno=17, col_offset=31), BinOp(Name('name', Load(), lineno=18, col_offset=14), Add(), Str('$py.class', lineno=18, col_offset=21), lineno=18, col_offset=14)], Load(), lineno=14, col_offset=14), [Expr(Call(Name('unlink', Load(), lineno=19, col_offset=8), [Name('f', Load(), lineno=19, col_offset=15)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8)], [], lineno=14, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('ImportTests', [Attribute(Name('unittest', Load(), lineno=22, col_offset=18), 'TestCase', Load(), lineno=22, col_offset=18)], [FunctionDef('tearDown', arguments([Name('self', Param(), lineno=24, col_offset=17)], None, None, []), [Expr(Call(Name('unload', Load(), lineno=25, col_offset=8), [Name('TESTFN', Load(), lineno=25, col_offset=15)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8)], [], lineno=24, col_offset=4), Assign([Name('setUp', Store(), lineno=26, col_offset=4)], Name('tearDown', Load(), lineno=26, col_offset=12), lineno=26, col_offset=4), FunctionDef('test_case_sensitivity', arguments([Name('self', Param(), lineno=28, col_offset=30)], None, None, []), [TryExcept([Import([alias('RAnDoM', None)], lineno=32, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=33, col_offset=15), None, [Pass( lineno=34, col_offset=12)], lineno=33, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=12), 'fail', Load(), lineno=36, col_offset=12), [Str('import of RAnDoM should have failed (case mismatch)', lineno=36, col_offset=22)], [], None, None, lineno=36, col_offset=12), lineno=36, col_offset=12)], lineno=31, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_double_const', arguments([Name('self', Param(), lineno=38, col_offset=26)], None, None, []), [ImportFrom('test', [alias('double_const', None)], 0, lineno=41, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('test_import', arguments([Name('self', Param(), lineno=43, col_offset=20)], None, None, []), [FunctionDef('test_with_extension', arguments([Name('ext', Param(), lineno=44, col_offset=32)], None, None, []), [Assign([Name('source', Store(), lineno=46, col_offset=12)], BinOp(Name('TESTFN', Load(), lineno=46, col_offset=21), Add(), Name('ext', Load(), lineno=46, col_offset=30), lineno=46, col_offset=21), lineno=46, col_offset=12), Assign([Name('pyo', Store(), lineno=47, col_offset=12)], BinOp(BinOp(Name('TESTFN', Load(), lineno=47, col_offset=18), Add(), Attribute(Name('os', Load(), lineno=47, col_offset=27), 'extsep', Load(), lineno=47, col_offset=27), lineno=47, col_offset=18), Add(), Str('pyo', lineno=47, col_offset=39), lineno=47, col_offset=37), lineno=47, col_offset=12), If(Name('is_jython', Load(), lineno=48, col_offset=15), [Assign([Name('pyc', Store(), lineno=49, col_offset=16)], BinOp(Name('TESTFN', Load(), lineno=49, col_offset=22), Add(), Str('$py.class', lineno=49, col_offset=31), lineno=49, col_offset=22), lineno=49, col_offset=16)], [Assign([Name('pyc', Store(), lineno=51, col_offset=16)], BinOp(BinOp(Name('TESTFN', Load(), lineno=51, col_offset=22), Add(), Attribute(Name('os', Load(), lineno=51, col_offset=31), 'extsep', Load(), lineno=51, col_offset=31), lineno=51, col_offset=22), Add(), Str('pyc', lineno=51, col_offset=43), lineno=51, col_offset=41), lineno=51, col_offset=16)], lineno=48, col_offset=12), With(Call(Name('open', Load(), lineno=53, col_offset=17), [Name('source', Load(), lineno=53, col_offset=22), Str('w', lineno=53, col_offset=30)], [], None, None, lineno=53, col_offset=17), Name('f', Store(), lineno=53, col_offset=38), [Print(Name('f', Load(), lineno=54, col_offset=25), [Tuple([Str("# This tests Python's ability to import a", lineno=54, col_offset=29), Name('ext', Load(), lineno=54, col_offset=74), Str('file.', lineno=55, col_offset=29)], Load(), lineno=54, col_offset=29)], True, lineno=54, col_offset=16), Assign([Name('a', Store(), lineno=56, col_offset=16)], Call(Attribute(Name('random', Load(), lineno=56, col_offset=20), 'randrange', Load(), lineno=56, col_offset=20), [Num(1000, lineno=56, col_offset=37)], [], None, None, lineno=56, col_offset=20), lineno=56, col_offset=16), Assign([Name('b', Store(), lineno=57, col_offset=16)], Call(Attribute(Name('random', Load(), lineno=57, col_offset=20), 'randrange', Load(), lineno=57, col_offset=20), [Num(1000, lineno=57, col_offset=37)], [], None, None, lineno=57, col_offset=20), lineno=57, col_offset=16), Print(Name('f', Load(), lineno=58, col_offset=25), [Str('a =', lineno=58, col_offset=28), Name('a', Load(), lineno=58, col_offset=35)], True, lineno=58, col_offset=16), Print(Name('f', Load(), lineno=59, col_offset=25), [Str('b =', lineno=59, col_offset=28), Name('b', Load(), lineno=59, col_offset=35)], True, lineno=59, col_offset=16)], lineno=53, col_offset=17), TryFinally([TryExcept([Assign([Name('mod', Store(), lineno=62, col_offset=16)], Call(Name('__import__', Load(), lineno=62, col_offset=22), [Name('TESTFN', Load(), lineno=62, col_offset=33)], [], None, None, lineno=62, col_offset=22), lineno=62, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=63, col_offset=19), Name('err', Store(), lineno=63, col_offset=32), [Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=16), 'fail', Load(), lineno=64, col_offset=16), [BinOp(Str('import from %s failed: %s', lineno=64, col_offset=26), Mod(), Tuple([Name('ext', Load(), lineno=64, col_offset=57), Name('err', Load(), lineno=64, col_offset=62)], Load(), lineno=64, col_offset=57), lineno=64, col_offset=26)], [], None, None, lineno=64, col_offset=16), lineno=64, col_offset=16)], lineno=63, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=16), 'assertEqual', Load(), lineno=66, col_offset=16), [Attribute(Name('mod', Load(), lineno=66, col_offset=33), 'a', Load(), lineno=66, col_offset=33), Name('a', Load(), lineno=66, col_offset=40), BinOp(Str('module loaded (%s) but contents invalid', lineno=67, col_offset=20), Mod(), Name('mod', Load(), lineno=67, col_offset=64), lineno=67, col_offset=20)], [], None, None, lineno=66, col_offset=16), lineno=66, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=16), 'assertEqual', Load(), lineno=68, col_offset=16), [Attribute(Name('mod', Load(), lineno=68, col_offset=33), 'b', Load(), lineno=68, col_offset=33), Name('b', Load(), lineno=68, col_offset=40), BinOp(Str('module loaded (%s) but contents invalid', lineno=69, col_offset=20), Mod(), Name('mod', Load(), lineno=69, col_offset=64), lineno=69, col_offset=20)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=16)], lineno=61, col_offset=12)], [Expr(Call(Name('unlink', Load(), lineno=71, col_offset=16), [Name('source', Load(), lineno=71, col_offset=23)], [], None, None, lineno=71, col_offset=16), lineno=71, col_offset=16)], lineno=61, col_offset=12), TryFinally([TryExcept([Expr(Call(Attribute(Name('imp', Load(), lineno=74, col_offset=16), 'reload', Load(), lineno=74, col_offset=16), [Name('mod', Load(), lineno=74, col_offset=27)], [], None, None, lineno=74, col_offset=16), lineno=74, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=75, col_offset=19), Name('err', Store(), lineno=75, col_offset=32), [Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=16), 'fail', Load(), lineno=76, col_offset=16), [BinOp(Str('import from .pyc/.pyo failed: %s', lineno=76, col_offset=26), Mod(), Name('err', Load(), lineno=76, col_offset=63), lineno=76, col_offset=26)], [], None, None, lineno=76, col_offset=16), lineno=76, col_offset=16)], lineno=75, col_offset=12)], [], lineno=73, col_offset=12)], [Expr(Call(Name('unlink', Load(), lineno=78, col_offset=16), [Name('pyc', Load(), lineno=78, col_offset=23)], [], None, None, lineno=78, col_offset=16), lineno=78, col_offset=16), Expr(Call(Name('unlink', Load(), lineno=79, col_offset=16), [Name('pyo', Load(), lineno=79, col_offset=23)], [], None, None, lineno=79, col_offset=16), lineno=79, col_offset=16), Expr(Call(Name('unload', Load(), lineno=80, col_offset=16), [Name('TESTFN', Load(), lineno=80, col_offset=23)], [], None, None, lineno=80, col_offset=16), lineno=80, col_offset=16)], lineno=73, col_offset=12)], [], lineno=44, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=82, col_offset=8), 'path', Load(), lineno=82, col_offset=8), 'insert', Load(), lineno=82, col_offset=8), [Num(0, lineno=82, col_offset=24), Attribute(Name('os', Load(), lineno=82, col_offset=27), 'curdir', Load(), lineno=82, col_offset=27)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), TryFinally([Expr(Call(Name('test_with_extension', Load(), lineno=84, col_offset=12), [BinOp(Attribute(Name('os', Load(), lineno=84, col_offset=32), 'extsep', Load(), lineno=84, col_offset=32), Add(), Str('py', lineno=84, col_offset=44), lineno=84, col_offset=32)], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=12), If(Call(Attribute(Attribute(Name('sys', Load(), lineno=85, col_offset=15), 'platform', Load(), lineno=85, col_offset=15), 'startswith', Load(), lineno=85, col_offset=15), [Str('win', lineno=85, col_offset=39)], [], None, None, lineno=85, col_offset=15), [For(Name('ext', Store(), lineno=86, col_offset=20), List([Str('.PY', lineno=86, col_offset=28), Str('.Py', lineno=86, col_offset=35), Str('.pY', lineno=86, col_offset=42), Str('.pyw', lineno=86, col_offset=49), Str('.PYW', lineno=86, col_offset=57), Str('.pYw', lineno=86, col_offset=65)], Load(), lineno=86, col_offset=27), [Expr(Call(Name('test_with_extension', Load(), lineno=87, col_offset=20), [Name('ext', Load(), lineno=87, col_offset=40)], [], None, None, lineno=87, col_offset=20), lineno=87, col_offset=20)], [], lineno=86, col_offset=16)], [], lineno=85, col_offset=12)], [Delete([Subscript(Attribute(Name('sys', Load(), lineno=89, col_offset=16), 'path', Load(), lineno=89, col_offset=16), Index(Num(0, lineno=89, col_offset=25)), Del(), lineno=89, col_offset=16)], lineno=89, col_offset=12)], lineno=83, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_execute_bit_not_copied', arguments([Name('self', Param(), lineno=92, col_offset=36)], None, None, []), [Assign([Name('oldmask', Store(), lineno=95, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=95, col_offset=18), 'umask', Load(), lineno=95, col_offset=18), [Num(18, lineno=95, col_offset=27)], [], None, None, lineno=95, col_offset=18), lineno=95, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=96, col_offset=8), 'path', Load(), lineno=96, col_offset=8), 'insert', Load(), lineno=96, col_offset=8), [Num(0, lineno=96, col_offset=24), Attribute(Name('os', Load(), lineno=96, col_offset=27), 'curdir', Load(), lineno=96, col_offset=27)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), TryFinally([Assign([Name('fname', Store(), lineno=98, col_offset=12)], BinOp(BinOp(Name('TESTFN', Load(), lineno=98, col_offset=20), Add(), Attribute(Name('os', Load(), lineno=98, col_offset=29), 'extsep', Load(), lineno=98, col_offset=29), lineno=98, col_offset=20), Add(), Str('py', lineno=98, col_offset=41), lineno=98, col_offset=39), lineno=98, col_offset=12), Assign([Name('f', Store(), lineno=99, col_offset=12)], Call(Attribute(Call(Name('open', Load(), lineno=99, col_offset=16), [Name('fname', Load(), lineno=99, col_offset=21), Str('w', lineno=99, col_offset=28)], [], None, None, lineno=99, col_offset=16), 'close', Load(), lineno=99, col_offset=16), [], [], None, None, lineno=99, col_offset=16), lineno=99, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=100, col_offset=12), 'chmod', Load(), lineno=100, col_offset=12), [Name('fname', Load(), lineno=100, col_offset=21), BinOp(BinOp(BinOp(BinOp(BinOp(Attribute(Name('stat', Load(), lineno=100, col_offset=29), 'S_IRUSR', Load(), lineno=100, col_offset=29), BitOr(), Attribute(Name('stat', Load(), lineno=100, col_offset=44), 'S_IRGRP', Load(), lineno=100, col_offset=44), lineno=100, col_offset=29), BitOr(), Attribute(Name('stat', Load(), lineno=100, col_offset=59), 'S_IROTH', Load(), lineno=100, col_offset=59), lineno=100, col_offset=57), BitOr(), Attribute(Name('stat', Load(), lineno=101, col_offset=29), 'S_IXUSR', Load(), lineno=101, col_offset=29), lineno=100, col_offset=72), BitOr(), Attribute(Name('stat', Load(), lineno=101, col_offset=44), 'S_IXGRP', Load(), lineno=101, col_offset=44), lineno=101, col_offset=42), BitOr(), Attribute(Name('stat', Load(), lineno=101, col_offset=59), 'S_IXOTH', Load(), lineno=101, col_offset=59), lineno=101, col_offset=57)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=102, col_offset=12), [Name('TESTFN', Load(), lineno=102, col_offset=23)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12), Assign([Name('fn', Store(), lineno=103, col_offset=12)], BinOp(Name('fname', Load(), lineno=103, col_offset=17), Add(), Str('c', lineno=103, col_offset=25), lineno=103, col_offset=17), lineno=103, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=104, col_offset=19), 'path', Load(), lineno=104, col_offset=19), 'exists', Load(), lineno=104, col_offset=19), [Name('fn', Load(), lineno=104, col_offset=34)], [], None, None, lineno=104, col_offset=19), lineno=104, col_offset=15), [Assign([Name('fn', Store(), lineno=105, col_offset=16)], BinOp(Name('fname', Load(), lineno=105, col_offset=21), Add(), Str('o', lineno=105, col_offset=29), lineno=105, col_offset=21), lineno=105, col_offset=16), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=106, col_offset=23), 'path', Load(), lineno=106, col_offset=23), 'exists', Load(), lineno=106, col_offset=23), [Name('fn', Load(), lineno=106, col_offset=38)], [], None, None, lineno=106, col_offset=23), lineno=106, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=20), 'fail', Load(), lineno=107, col_offset=20), [Str('__import__ did not result in creation of either a .pyc or .pyo file', lineno=107, col_offset=30)], [], None, None, lineno=107, col_offset=20), lineno=107, col_offset=20)], [], lineno=106, col_offset=16)], [], lineno=104, col_offset=12), Assign([Name('s', Store(), lineno=109, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=109, col_offset=16), 'stat', Load(), lineno=109, col_offset=16), [Name('fn', Load(), lineno=109, col_offset=24)], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'assertEqual', Load(), lineno=110, col_offset=12), [Call(Attribute(Name('stat', Load(), lineno=110, col_offset=29), 'S_IMODE', Load(), lineno=110, col_offset=29), [Attribute(Name('s', Load(), lineno=110, col_offset=42), 'st_mode', Load(), lineno=110, col_offset=42)], [], None, None, lineno=110, col_offset=29), BinOp(BinOp(Attribute(Name('stat', Load(), lineno=111, col_offset=29), 'S_IRUSR', Load(), lineno=111, col_offset=29), BitOr(), Attribute(Name('stat', Load(), lineno=111, col_offset=44), 'S_IRGRP', Load(), lineno=111, col_offset=44), lineno=111, col_offset=29), BitOr(), Attribute(Name('stat', Load(), lineno=111, col_offset=59), 'S_IROTH', Load(), lineno=111, col_offset=59), lineno=111, col_offset=57)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12)], [Expr(Call(Attribute(Name('os', Load(), lineno=113, col_offset=12), 'umask', Load(), lineno=113, col_offset=12), [Name('oldmask', Load(), lineno=113, col_offset=21)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=12), Expr(Call(Name('remove_files', Load(), lineno=114, col_offset=12), [Name('TESTFN', Load(), lineno=114, col_offset=25)], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=12), Expr(Call(Name('unload', Load(), lineno=115, col_offset=12), [Name('TESTFN', Load(), lineno=115, col_offset=19)], [], None, None, lineno=115, col_offset=12), lineno=115, col_offset=12), Delete([Subscript(Attribute(Name('sys', Load(), lineno=116, col_offset=16), 'path', Load(), lineno=116, col_offset=16), Index(Num(0, lineno=116, col_offset=25)), Del(), lineno=116, col_offset=16)], lineno=116, col_offset=12)], lineno=97, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=91, col_offset=5), 'skipUnless', Load(), lineno=91, col_offset=5), [Compare(Attribute(Name('os', Load(), lineno=91, col_offset=25), 'name', Load(), lineno=91, col_offset=25), [Eq()], [Str('posix', lineno=91, col_offset=36)], lineno=91, col_offset=25), Str('test meaningful only on posix systems', lineno=91, col_offset=45)], [], None, None, lineno=91, col_offset=5)], lineno=91, col_offset=4), FunctionDef('test_imp_module', arguments([Name('self', Param(), lineno=118, col_offset=24)], None, None, []), [Assign([Name('orig_path', Store(), lineno=128, col_offset=8)], Attribute(Name('os', Load(), lineno=128, col_offset=20), 'path', Load(), lineno=128, col_offset=20), lineno=128, col_offset=8), Assign([Name('orig_getenv', Store(), lineno=129, col_offset=8)], Attribute(Name('os', Load(), lineno=129, col_offset=22), 'getenv', Load(), lineno=129, col_offset=22), lineno=129, col_offset=8), With(Call(Name('EnvironmentVarGuard', Load(), lineno=130, col_offset=13), [], [], None, None, lineno=130, col_offset=13), None, [Assign([Name('x', Store(), lineno=131, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=131, col_offset=16), 'find_module', Load(), lineno=131, col_offset=16), [Str('os', lineno=131, col_offset=32)], [], None, None, lineno=131, col_offset=16), lineno=131, col_offset=12), Assign([Name('new_os', Store(), lineno=132, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=132, col_offset=21), 'load_module', Load(), lineno=132, col_offset=21), [Str('os', lineno=132, col_offset=37)], [], Name('x', Load(), lineno=132, col_offset=44), None, lineno=132, col_offset=21), lineno=132, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=12), 'assertIs', Load(), lineno=133, col_offset=12), [Name('os', Load(), lineno=133, col_offset=26), Name('new_os', Load(), lineno=133, col_offset=30)], [], None, None, lineno=133, col_offset=12), lineno=133, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=12), 'assertIs', Load(), lineno=134, col_offset=12), [Name('orig_path', Load(), lineno=134, col_offset=26), Attribute(Name('new_os', Load(), lineno=134, col_offset=37), 'path', Load(), lineno=134, col_offset=37)], [], None, None, lineno=134, col_offset=12), lineno=134, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=12), 'assertIsNot', Load(), lineno=135, col_offset=12), [Name('orig_getenv', Load(), lineno=135, col_offset=29), Attribute(Name('new_os', Load(), lineno=135, col_offset=42), 'getenv', Load(), lineno=135, col_offset=42)], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=12)], lineno=130, col_offset=13)], [], lineno=118, col_offset=4), FunctionDef('test_module_with_large_stack', arguments([Name('self', Param(), lineno=137, col_offset=37), Name('module', Param(), lineno=137, col_offset=43)], None, None, [Str('longlist', lineno=137, col_offset=50)]), [Assign([Name('filename', Store(), lineno=139, col_offset=8)], BinOp(BinOp(Name('module', Load(), lineno=139, col_offset=19), Add(), Attribute(Name('os', Load(), lineno=139, col_offset=28), 'extsep', Load(), lineno=139, col_offset=28), lineno=139, col_offset=19), Add(), Str('py', lineno=139, col_offset=40), lineno=139, col_offset=38), lineno=139, col_offset=8), With(Call(Name('open', Load(), lineno=142, col_offset=13), [Name('filename', Load(), lineno=142, col_offset=18), Str('w+', lineno=142, col_offset=28)], [], None, None, lineno=142, col_offset=13), Name('f', Store(), lineno=142, col_offset=37), [Expr(Call(Attribute(Name('f', Load(), lineno=143, col_offset=12), 'write', Load(), lineno=143, col_offset=12), [Str('d = [\n', lineno=143, col_offset=20)], [], None, None, lineno=143, col_offset=12), lineno=143, col_offset=12), For(Name('i', Store(), lineno=144, col_offset=16), Call(Name('range', Load(), lineno=144, col_offset=21), [Num(65000, lineno=144, col_offset=27)], [], None, None, lineno=144, col_offset=21), [Expr(Call(Attribute(Name('f', Load(), lineno=145, col_offset=16), 'write', Load(), lineno=145, col_offset=16), [Str('"",\n', lineno=145, col_offset=24)], [], None, None, lineno=145, col_offset=16), lineno=145, col_offset=16)], [], lineno=144, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=146, col_offset=12), 'write', Load(), lineno=146, col_offset=12), [Str(']', lineno=146, col_offset=20)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=12)], lineno=142, col_offset=13), With(Call(Name('open', Load(), lineno=149, col_offset=13), [Name('filename', Load(), lineno=149, col_offset=18), Str('r', lineno=149, col_offset=28)], [], None, None, lineno=149, col_offset=13), Name('f', Store(), lineno=149, col_offset=36), [Expr(Call(Attribute(Name('py_compile', Load(), lineno=150, col_offset=12), 'compile', Load(), lineno=150, col_offset=12), [Name('filename', Load(), lineno=150, col_offset=31)], [], None, None, lineno=150, col_offset=12), lineno=150, col_offset=12)], lineno=149, col_offset=13), Expr(Call(Name('unlink', Load(), lineno=151, col_offset=8), [Name('filename', Load(), lineno=151, col_offset=15)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=154, col_offset=8), 'path', Load(), lineno=154, col_offset=8), 'append', Load(), lineno=154, col_offset=8), [Str('', lineno=154, col_offset=24)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8), Exec(BinOp(Str('import ', lineno=157, col_offset=13), Add(), Name('module', Load(), lineno=157, col_offset=25), lineno=157, col_offset=13), None, None, lineno=157, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=160, col_offset=12), 'path', Load(), lineno=160, col_offset=12), Index(Num(-1, lineno=160, col_offset=22)), Del(), lineno=160, col_offset=12)], lineno=160, col_offset=8), Expr(Call(Name('unlink', Load(), lineno=161, col_offset=8), [BinOp(Name('filename', Load(), lineno=161, col_offset=15), Add(), Str('c', lineno=161, col_offset=26), lineno=161, col_offset=15)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Name('unlink', Load(), lineno=162, col_offset=8), [BinOp(Name('filename', Load(), lineno=162, col_offset=15), Add(), Str('o', lineno=162, col_offset=26), lineno=162, col_offset=15)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8)], [], lineno=137, col_offset=4), FunctionDef('test_failing_import_sticks', arguments([Name('self', Param(), lineno=164, col_offset=35)], None, None, []), [Assign([Name('source', Store(), lineno=165, col_offset=8)], BinOp(BinOp(Name('TESTFN', Load(), lineno=165, col_offset=17), Add(), Attribute(Name('os', Load(), lineno=165, col_offset=26), 'extsep', Load(), lineno=165, col_offset=26), lineno=165, col_offset=17), Add(), Str('py', lineno=165, col_offset=38), lineno=165, col_offset=36), lineno=165, col_offset=8), With(Call(Name('open', Load(), lineno=166, col_offset=13), [Name('source', Load(), lineno=166, col_offset=18), Str('w', lineno=166, col_offset=26)], [], None, None, lineno=166, col_offset=13), Name('f', Store(), lineno=166, col_offset=34), [Print(Name('f', Load(), lineno=167, col_offset=21), [Str('a = 1 // 0', lineno=167, col_offset=24)], True, lineno=167, col_offset=12)], lineno=166, col_offset=13), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=171, col_offset=8), 'path', Load(), lineno=171, col_offset=8), 'insert', Load(), lineno=171, col_offset=8), [Num(0, lineno=171, col_offset=24), Attribute(Name('os', Load(), lineno=171, col_offset=27), 'curdir', Load(), lineno=171, col_offset=27)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), TryFinally([For(Name('i', Store(), lineno=173, col_offset=16), List([Num(1, lineno=173, col_offset=22), Num(2, lineno=173, col_offset=25), Num(3, lineno=173, col_offset=28)], Load(), lineno=173, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=16), 'assertRaises', Load(), lineno=174, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=174, col_offset=34), Name('__import__', Load(), lineno=174, col_offset=53), Name('TESTFN', Load(), lineno=174, col_offset=65)], [], None, None, lineno=174, col_offset=16), lineno=174, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=16), 'assertNotIn', Load(), lineno=175, col_offset=16), [Name('TESTFN', Load(), lineno=175, col_offset=33), Attribute(Name('sys', Load(), lineno=175, col_offset=41), 'modules', Load(), lineno=175, col_offset=41), BinOp(Str('damaged module in sys.modules on %i try', lineno=176, col_offset=33), Mod(), Name('i', Load(), lineno=176, col_offset=77), lineno=176, col_offset=33)], [], None, None, lineno=175, col_offset=16), lineno=175, col_offset=16)], [], lineno=173, col_offset=12)], [Delete([Subscript(Attribute(Name('sys', Load(), lineno=178, col_offset=16), 'path', Load(), lineno=178, col_offset=16), Index(Num(0, lineno=178, col_offset=25)), Del(), lineno=178, col_offset=16)], lineno=178, col_offset=12), Expr(Call(Name('remove_files', Load(), lineno=179, col_offset=12), [Name('TESTFN', Load(), lineno=179, col_offset=25)], [], None, None, lineno=179, col_offset=12), lineno=179, col_offset=12)], lineno=172, col_offset=8)], [], lineno=164, col_offset=4), FunctionDef('test_failing_reload', arguments([Name('self', Param(), lineno=181, col_offset=28)], None, None, []), [Assign([Name('source', Store(), lineno=183, col_offset=8)], BinOp(BinOp(Name('TESTFN', Load(), lineno=183, col_offset=17), Add(), Attribute(Name('os', Load(), lineno=183, col_offset=26), 'extsep', Load(), lineno=183, col_offset=26), lineno=183, col_offset=17), Add(), Str('py', lineno=183, col_offset=38), lineno=183, col_offset=36), lineno=183, col_offset=8), With(Call(Name('open', Load(), lineno=184, col_offset=13), [Name('source', Load(), lineno=184, col_offset=18), Str('w', lineno=184, col_offset=26)], [], None, None, lineno=184, col_offset=13), Name('f', Store(), lineno=184, col_offset=34), [Print(Name('f', Load(), lineno=185, col_offset=21), [Str('a = 1', lineno=185, col_offset=24)], True, lineno=185, col_offset=12), Print(Name('f', Load(), lineno=186, col_offset=21), [Str('b = 2', lineno=186, col_offset=24)], True, lineno=186, col_offset=12)], lineno=184, col_offset=13), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=188, col_offset=8), 'path', Load(), lineno=188, col_offset=8), 'insert', Load(), lineno=188, col_offset=8), [Num(0, lineno=188, col_offset=24), Attribute(Name('os', Load(), lineno=188, col_offset=27), 'curdir', Load(), lineno=188, col_offset=27)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), TryFinally([Assign([Name('mod', Store(), lineno=190, col_offset=12)], Call(Name('__import__', Load(), lineno=190, col_offset=18), [Name('TESTFN', Load(), lineno=190, col_offset=29)], [], None, None, lineno=190, col_offset=18), lineno=190, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=12), 'assertIn', Load(), lineno=191, col_offset=12), [Name('TESTFN', Load(), lineno=191, col_offset=26), Attribute(Name('sys', Load(), lineno=191, col_offset=34), 'modules', Load(), lineno=191, col_offset=34)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=12), 'assertEqual', Load(), lineno=192, col_offset=12), [Attribute(Name('mod', Load(), lineno=192, col_offset=29), 'a', Load(), lineno=192, col_offset=29), Num(1, lineno=192, col_offset=36), Str('module has wrong attribute values', lineno=192, col_offset=39)], [], None, None, lineno=192, col_offset=12), lineno=192, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=12), 'assertEqual', Load(), lineno=193, col_offset=12), [Attribute(Name('mod', Load(), lineno=193, col_offset=29), 'b', Load(), lineno=193, col_offset=29), Num(2, lineno=193, col_offset=36), Str('module has wrong attribute values', lineno=193, col_offset=39)], [], None, None, lineno=193, col_offset=12), lineno=193, col_offset=12), Expr(Call(Name('remove_files', Load(), lineno=199, col_offset=12), [Name('TESTFN', Load(), lineno=199, col_offset=25)], [], None, None, lineno=199, col_offset=12), lineno=199, col_offset=12), With(Call(Name('open', Load(), lineno=202, col_offset=17), [Name('source', Load(), lineno=202, col_offset=22), Str('w', lineno=202, col_offset=30)], [], None, None, lineno=202, col_offset=17), Name('f', Store(), lineno=202, col_offset=38), [Print(Name('f', Load(), lineno=203, col_offset=25), [Str('a = 10', lineno=203, col_offset=28)], True, lineno=203, col_offset=16), Print(Name('f', Load(), lineno=204, col_offset=25), [Str('b = 20//0', lineno=204, col_offset=28)], True, lineno=204, col_offset=16)], lineno=202, col_offset=17), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=12), 'assertRaises', Load(), lineno=206, col_offset=12), [Name('ZeroDivisionError', Load(), lineno=206, col_offset=30), Attribute(Name('imp', Load(), lineno=206, col_offset=49), 'reload', Load(), lineno=206, col_offset=49), Name('mod', Load(), lineno=206, col_offset=61)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12), Assign([Name('mod', Store(), lineno=209, col_offset=12)], Call(Attribute(Attribute(Name('sys', Load(), lineno=209, col_offset=18), 'modules', Load(), lineno=209, col_offset=18), 'get', Load(), lineno=209, col_offset=18), [Name('TESTFN', Load(), lineno=209, col_offset=34)], [], None, None, lineno=209, col_offset=18), lineno=209, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=12), 'assertIsNot', Load(), lineno=210, col_offset=12), [Name('mod', Load(), lineno=210, col_offset=29), Name('None', Load(), lineno=210, col_offset=34), Str('expected module to be in sys.modules', lineno=210, col_offset=40)], [], None, None, lineno=210, col_offset=12), lineno=210, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=12), 'assertEqual', Load(), lineno=214, col_offset=12), [Attribute(Name('mod', Load(), lineno=214, col_offset=29), 'a', Load(), lineno=214, col_offset=29), Num(10, lineno=214, col_offset=36), Str('module has wrong attribute values', lineno=214, col_offset=40)], [], None, None, lineno=214, col_offset=12), lineno=214, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=12), 'assertEqual', Load(), lineno=215, col_offset=12), [Attribute(Name('mod', Load(), lineno=215, col_offset=29), 'b', Load(), lineno=215, col_offset=29), Num(2, lineno=215, col_offset=36), Str('module has wrong attribute values', lineno=215, col_offset=39)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12)], [Delete([Subscript(Attribute(Name('sys', Load(), lineno=218, col_offset=16), 'path', Load(), lineno=218, col_offset=16), Index(Num(0, lineno=218, col_offset=25)), Del(), lineno=218, col_offset=16)], lineno=218, col_offset=12), Expr(Call(Name('remove_files', Load(), lineno=219, col_offset=12), [Name('TESTFN', Load(), lineno=219, col_offset=25)], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=12), Expr(Call(Name('unload', Load(), lineno=220, col_offset=12), [Name('TESTFN', Load(), lineno=220, col_offset=19)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], lineno=189, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_infinite_reload', arguments([Name('self', Param(), lineno=222, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=226, col_offset=8), 'path', Load(), lineno=226, col_offset=8), 'insert', Load(), lineno=226, col_offset=8), [Num(0, lineno=226, col_offset=24), Call(Attribute(Attribute(Name('os', Load(), lineno=226, col_offset=27), 'path', Load(), lineno=226, col_offset=27), 'dirname', Load(), lineno=226, col_offset=27), [Name('__file__', Load(), lineno=226, col_offset=43)], [], None, None, lineno=226, col_offset=27)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), TryFinally([Import([alias('infinite_reload', None)], lineno=228, col_offset=12)], [Delete([Subscript(Attribute(Name('sys', Load(), lineno=230, col_offset=16), 'path', Load(), lineno=230, col_offset=16), Index(Num(0, lineno=230, col_offset=25)), Del(), lineno=230, col_offset=16)], lineno=230, col_offset=12)], lineno=227, col_offset=8)], [], lineno=222, col_offset=4), FunctionDef('test_import_name_binding', arguments([Name('self', Param(), lineno=232, col_offset=33)], None, None, []), [Import([alias('test', 'x')], lineno=234, col_offset=8), Import([alias('test.test_support', None)], lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertIs', Load(), lineno=236, col_offset=8), [Name('x', Load(), lineno=236, col_offset=22), Name('test', Load(), lineno=236, col_offset=25), Attribute(Name('x', Load(), lineno=236, col_offset=31), '__name__', Load(), lineno=236, col_offset=31)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertTrue', Load(), lineno=237, col_offset=8), [Call(Name('hasattr', Load(), lineno=237, col_offset=24), [Attribute(Name('test', Load(), lineno=237, col_offset=32), 'test_support', Load(), lineno=237, col_offset=32), Str('__file__', lineno=237, col_offset=51)], [], None, None, lineno=237, col_offset=24)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Import([alias('test.test_support', 'y')], lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertIs', Load(), lineno=241, col_offset=8), [Name('y', Load(), lineno=241, col_offset=22), Attribute(Name('test', Load(), lineno=241, col_offset=25), 'test_support', Load(), lineno=241, col_offset=25), Attribute(Name('y', Load(), lineno=241, col_offset=44), '__name__', Load(), lineno=241, col_offset=44)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=232, col_offset=4), FunctionDef('test_import_initless_directory_warning', arguments([Name('self', Param(), lineno=243, col_offset=47)], None, None, []), [With(Call(Name('check_warnings', Load(), lineno=244, col_offset=13), [Tuple([Str('', lineno=244, col_offset=29), Name('ImportWarning', Load(), lineno=244, col_offset=33)], Load(), lineno=244, col_offset=29)], [], None, None, lineno=244, col_offset=13), None, [Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=12), 'assertRaises', Load(), lineno=247, col_offset=12), [Name('ImportError', Load(), lineno=247, col_offset=30), Name('__import__', Load(), lineno=247, col_offset=43), Str('site-packages', lineno=247, col_offset=55)], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=12)], lineno=244, col_offset=13)], [], lineno=243, col_offset=4), FunctionDef('test_import_by_filename', arguments([Name('self', Param(), lineno=249, col_offset=32)], None, None, []), [Assign([Name('path', Store(), lineno=250, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=250, col_offset=15), 'path', Load(), lineno=250, col_offset=15), 'abspath', Load(), lineno=250, col_offset=15), [Name('TESTFN', Load(), lineno=250, col_offset=31)], [], None, None, lineno=250, col_offset=15), lineno=250, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=251, col_offset=13), 'assertRaises', Load(), lineno=251, col_offset=13), [Name('ImportError', Load(), lineno=251, col_offset=31)], [], None, None, lineno=251, col_offset=13), Name('c', Store(), lineno=251, col_offset=47), [Expr(Call(Name('__import__', Load(), lineno=252, col_offset=12), [Name('path', Load(), lineno=252, col_offset=23)], [], None, None, lineno=252, col_offset=12), lineno=252, col_offset=12)], lineno=251, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=253, col_offset=8), 'assertEqual', Load(), lineno=253, col_offset=8), [Str('Import by filename is not supported.', lineno=253, col_offset=25), Subscript(Attribute(Attribute(Name('c', Load(), lineno=254, col_offset=25), 'exception', Load(), lineno=254, col_offset=25), 'args', Load(), lineno=254, col_offset=25), Index(Num(0, lineno=254, col_offset=42)), Load(), lineno=254, col_offset=25)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8)], [], lineno=249, col_offset=4)], [], lineno=22, col_offset=0), ClassDef('PycRewritingTests', [Attribute(Name('unittest', Load(), lineno=257, col_offset=24), 'TestCase', Load(), lineno=257, col_offset=24)], [Assign([Name('module_name', Store(), lineno=262, col_offset=4)], Str('unlikely_module_name', lineno=262, col_offset=18), lineno=262, col_offset=4), Assign([Name('module_source', Store(), lineno=263, col_offset=4)], Str('\nimport sys\ncode_filename = sys._getframe().f_code.co_filename\nmodule_filename = __file__\nconstant = 1\ndef func():\n    pass\nfunc_filename = func.func_code.co_filename\n', lineno=271, col_offset=-1), lineno=263, col_offset=4), Assign([Name('dir_name', Store(), lineno=272, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=272, col_offset=15), 'path', Load(), lineno=272, col_offset=15), 'abspath', Load(), lineno=272, col_offset=15), [Name('TESTFN', Load(), lineno=272, col_offset=31)], [], None, None, lineno=272, col_offset=15), lineno=272, col_offset=4), Assign([Name('file_name', Store(), lineno=273, col_offset=4)], BinOp(BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=273, col_offset=16), 'path', Load(), lineno=273, col_offset=16), 'join', Load(), lineno=273, col_offset=16), [Name('dir_name', Load(), lineno=273, col_offset=29), Name('module_name', Load(), lineno=273, col_offset=39)], [], None, None, lineno=273, col_offset=16), Add(), Attribute(Name('os', Load(), lineno=273, col_offset=54), 'extsep', Load(), lineno=273, col_offset=54), lineno=273, col_offset=16), Add(), Str('py', lineno=273, col_offset=66), lineno=273, col_offset=64), lineno=273, col_offset=4), Assign([Name('compiled_name', Store(), lineno=274, col_offset=4)], BinOp(Name('file_name', Load(), lineno=274, col_offset=20), Add(), IfExp(Name('__debug__', Load(), lineno=274, col_offset=40), Str('c', lineno=274, col_offset=33), Str('o', lineno=274, col_offset=55), lineno=274, col_offset=33), lineno=274, col_offset=20), lineno=274, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=276, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=277, col_offset=8), 'sys_path', Store(), lineno=277, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=277, col_offset=24), 'path', Load(), lineno=277, col_offset=24), Slice(None, None, None), Load(), lineno=277, col_offset=24), lineno=277, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=278, col_offset=8), 'orig_module', Store(), lineno=278, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=278, col_offset=27), 'modules', Load(), lineno=278, col_offset=27), 'pop', Load(), lineno=278, col_offset=27), [Attribute(Name('self', Load(), lineno=278, col_offset=43), 'module_name', Load(), lineno=278, col_offset=43), Name('None', Load(), lineno=278, col_offset=61)], [], None, None, lineno=278, col_offset=27), lineno=278, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=279, col_offset=8), 'mkdir', Load(), lineno=279, col_offset=8), [Attribute(Name('self', Load(), lineno=279, col_offset=17), 'dir_name', Load(), lineno=279, col_offset=17)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8), With(Call(Name('open', Load(), lineno=280, col_offset=13), [Attribute(Name('self', Load(), lineno=280, col_offset=18), 'file_name', Load(), lineno=280, col_offset=18), Str('w', lineno=280, col_offset=34)], [], None, None, lineno=280, col_offset=13), Name('f', Store(), lineno=280, col_offset=42), [Expr(Call(Attribute(Name('f', Load(), lineno=281, col_offset=12), 'write', Load(), lineno=281, col_offset=12), [Attribute(Name('self', Load(), lineno=281, col_offset=20), 'module_source', Load(), lineno=281, col_offset=20)], [], None, None, lineno=281, col_offset=12), lineno=281, col_offset=12)], lineno=280, col_offset=13), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=282, col_offset=8), 'path', Load(), lineno=282, col_offset=8), 'insert', Load(), lineno=282, col_offset=8), [Num(0, lineno=282, col_offset=24), Attribute(Name('self', Load(), lineno=282, col_offset=27), 'dir_name', Load(), lineno=282, col_offset=27)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=284, col_offset=17)], None, None, []), [Assign([Subscript(Attribute(Name('sys', Load(), lineno=285, col_offset=8), 'path', Load(), lineno=285, col_offset=8), Slice(None, None, None), Store(), lineno=285, col_offset=8)], Attribute(Name('self', Load(), lineno=285, col_offset=22), 'sys_path', Load(), lineno=285, col_offset=22), lineno=285, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=286, col_offset=11), 'orig_module', Load(), lineno=286, col_offset=11), [IsNot()], [Name('None', Load(), lineno=286, col_offset=35)], lineno=286, col_offset=11), [Assign([Subscript(Attribute(Name('sys', Load(), lineno=287, col_offset=12), 'modules', Load(), lineno=287, col_offset=12), Index(Attribute(Name('self', Load(), lineno=287, col_offset=24), 'module_name', Load(), lineno=287, col_offset=24)), Store(), lineno=287, col_offset=12)], Attribute(Name('self', Load(), lineno=287, col_offset=44), 'orig_module', Load(), lineno=287, col_offset=44), lineno=287, col_offset=12)], [Expr(Call(Name('unload', Load(), lineno=289, col_offset=12), [Attribute(Name('self', Load(), lineno=289, col_offset=19), 'module_name', Load(), lineno=289, col_offset=19)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=12)], lineno=286, col_offset=8), Expr(Call(Name('unlink', Load(), lineno=290, col_offset=8), [Attribute(Name('self', Load(), lineno=290, col_offset=15), 'file_name', Load(), lineno=290, col_offset=15)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Name('unlink', Load(), lineno=291, col_offset=8), [Attribute(Name('self', Load(), lineno=291, col_offset=15), 'compiled_name', Load(), lineno=291, col_offset=15)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8), Expr(Call(Name('rmtree', Load(), lineno=292, col_offset=8), [Attribute(Name('self', Load(), lineno=292, col_offset=15), 'dir_name', Load(), lineno=292, col_offset=15)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('import_module', arguments([Name('self', Param(), lineno=294, col_offset=22)], None, None, []), [Assign([Name('ns', Store(), lineno=295, col_offset=8)], Call(Name('globals', Load(), lineno=295, col_offset=13), [], [], None, None, lineno=295, col_offset=13), lineno=295, col_offset=8), Expr(Call(Name('__import__', Load(), lineno=296, col_offset=8), [Attribute(Name('self', Load(), lineno=296, col_offset=19), 'module_name', Load(), lineno=296, col_offset=19), Name('ns', Load(), lineno=296, col_offset=37), Name('ns', Load(), lineno=296, col_offset=41)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8), Return(Subscript(Attribute(Name('sys', Load(), lineno=297, col_offset=15), 'modules', Load(), lineno=297, col_offset=15), Index(Attribute(Name('self', Load(), lineno=297, col_offset=27), 'module_name', Load(), lineno=297, col_offset=27)), Load(), lineno=297, col_offset=15), lineno=297, col_offset=8)], [], lineno=294, col_offset=4), FunctionDef('test_basics', arguments([Name('self', Param(), lineno=299, col_offset=20)], None, None, []), [Assign([Name('mod', Store(), lineno=300, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=300, col_offset=14), 'import_module', Load(), lineno=300, col_offset=14), [], [], None, None, lineno=300, col_offset=14), lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertEqual', Load(), lineno=301, col_offset=8), [Attribute(Name('mod', Load(), lineno=301, col_offset=25), 'module_filename', Load(), lineno=301, col_offset=25), Attribute(Name('self', Load(), lineno=301, col_offset=46), 'file_name', Load(), lineno=301, col_offset=46)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=8), 'assertEqual', Load(), lineno=302, col_offset=8), [Attribute(Name('mod', Load(), lineno=302, col_offset=25), 'code_filename', Load(), lineno=302, col_offset=25), Attribute(Name('self', Load(), lineno=302, col_offset=44), 'file_name', Load(), lineno=302, col_offset=44)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=303, col_offset=8), 'assertEqual', Load(), lineno=303, col_offset=8), [Attribute(Name('mod', Load(), lineno=303, col_offset=25), 'func_filename', Load(), lineno=303, col_offset=25), Attribute(Name('self', Load(), lineno=303, col_offset=44), 'file_name', Load(), lineno=303, col_offset=44)], [], None, None, lineno=303, col_offset=8), lineno=303, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=304, col_offset=12), 'modules', Load(), lineno=304, col_offset=12), Index(Attribute(Name('self', Load(), lineno=304, col_offset=24), 'module_name', Load(), lineno=304, col_offset=24)), Del(), lineno=304, col_offset=12)], lineno=304, col_offset=8), Assign([Name('mod', Store(), lineno=305, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=305, col_offset=14), 'import_module', Load(), lineno=305, col_offset=14), [], [], None, None, lineno=305, col_offset=14), lineno=305, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=8), 'assertEqual', Load(), lineno=306, col_offset=8), [Attribute(Name('mod', Load(), lineno=306, col_offset=25), 'module_filename', Load(), lineno=306, col_offset=25), Attribute(Name('self', Load(), lineno=306, col_offset=46), 'compiled_name', Load(), lineno=306, col_offset=46)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=8), 'assertEqual', Load(), lineno=307, col_offset=8), [Attribute(Name('mod', Load(), lineno=307, col_offset=25), 'code_filename', Load(), lineno=307, col_offset=25), Attribute(Name('self', Load(), lineno=307, col_offset=44), 'file_name', Load(), lineno=307, col_offset=44)], [], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'assertEqual', Load(), lineno=308, col_offset=8), [Attribute(Name('mod', Load(), lineno=308, col_offset=25), 'func_filename', Load(), lineno=308, col_offset=25), Attribute(Name('self', Load(), lineno=308, col_offset=44), 'file_name', Load(), lineno=308, col_offset=44)], [], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('test_incorrect_code_name', arguments([Name('self', Param(), lineno=310, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('py_compile', Load(), lineno=311, col_offset=8), 'compile', Load(), lineno=311, col_offset=8), [Attribute(Name('self', Load(), lineno=311, col_offset=27), 'file_name', Load(), lineno=311, col_offset=27)], [keyword('dfile', Str('another_module.py', lineno=311, col_offset=49))], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Assign([Name('mod', Store(), lineno=312, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=312, col_offset=14), 'import_module', Load(), lineno=312, col_offset=14), [], [], None, None, lineno=312, col_offset=14), lineno=312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=8), 'assertEqual', Load(), lineno=313, col_offset=8), [Attribute(Name('mod', Load(), lineno=313, col_offset=25), 'module_filename', Load(), lineno=313, col_offset=25), Attribute(Name('self', Load(), lineno=313, col_offset=46), 'compiled_name', Load(), lineno=313, col_offset=46)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'assertEqual', Load(), lineno=314, col_offset=8), [Attribute(Name('mod', Load(), lineno=314, col_offset=25), 'code_filename', Load(), lineno=314, col_offset=25), Attribute(Name('self', Load(), lineno=314, col_offset=44), 'file_name', Load(), lineno=314, col_offset=44)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertEqual', Load(), lineno=315, col_offset=8), [Attribute(Name('mod', Load(), lineno=315, col_offset=25), 'func_filename', Load(), lineno=315, col_offset=25), Attribute(Name('self', Load(), lineno=315, col_offset=44), 'file_name', Load(), lineno=315, col_offset=44)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8)], [], lineno=310, col_offset=4), FunctionDef('test_module_without_source', arguments([Name('self', Param(), lineno=317, col_offset=35)], None, None, []), [Assign([Name('target', Store(), lineno=318, col_offset=8)], Str('another_module.py', lineno=318, col_offset=17), lineno=318, col_offset=8), Expr(Call(Attribute(Name('py_compile', Load(), lineno=319, col_offset=8), 'compile', Load(), lineno=319, col_offset=8), [Attribute(Name('self', Load(), lineno=319, col_offset=27), 'file_name', Load(), lineno=319, col_offset=27)], [keyword('dfile', Name('target', Load(), lineno=319, col_offset=49))], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=320, col_offset=8), 'remove', Load(), lineno=320, col_offset=8), [Attribute(Name('self', Load(), lineno=320, col_offset=18), 'file_name', Load(), lineno=320, col_offset=18)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8), Assign([Name('mod', Store(), lineno=321, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=321, col_offset=14), 'import_module', Load(), lineno=321, col_offset=14), [], [], None, None, lineno=321, col_offset=14), lineno=321, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'assertEqual', Load(), lineno=322, col_offset=8), [Attribute(Name('mod', Load(), lineno=322, col_offset=25), 'module_filename', Load(), lineno=322, col_offset=25), Attribute(Name('self', Load(), lineno=322, col_offset=46), 'compiled_name', Load(), lineno=322, col_offset=46)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=8), 'assertEqual', Load(), lineno=323, col_offset=8), [Attribute(Name('mod', Load(), lineno=323, col_offset=25), 'code_filename', Load(), lineno=323, col_offset=25), Name('target', Load(), lineno=323, col_offset=44)], [], None, None, lineno=323, col_offset=8), lineno=323, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'assertEqual', Load(), lineno=324, col_offset=8), [Attribute(Name('mod', Load(), lineno=324, col_offset=25), 'func_filename', Load(), lineno=324, col_offset=25), Name('target', Load(), lineno=324, col_offset=44)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('test_foreign_code', arguments([Name('self', Param(), lineno=326, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('py_compile', Load(), lineno=327, col_offset=8), 'compile', Load(), lineno=327, col_offset=8), [Attribute(Name('self', Load(), lineno=327, col_offset=27), 'file_name', Load(), lineno=327, col_offset=27)], [], None, None, lineno=327, col_offset=8), lineno=327, col_offset=8), With(Call(Name('open', Load(), lineno=328, col_offset=13), [Attribute(Name('self', Load(), lineno=328, col_offset=18), 'compiled_name', Load(), lineno=328, col_offset=18), Str('rb', lineno=328, col_offset=38)], [], None, None, lineno=328, col_offset=13), Name('f', Store(), lineno=328, col_offset=47), [Assign([Name('header', Store(), lineno=329, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=329, col_offset=21), 'read', Load(), lineno=329, col_offset=21), [Num(8, lineno=329, col_offset=28)], [], None, None, lineno=329, col_offset=21), lineno=329, col_offset=12), Assign([Name('code', Store(), lineno=330, col_offset=12)], Call(Attribute(Name('marshal', Load(), lineno=330, col_offset=19), 'load', Load(), lineno=330, col_offset=19), [Name('f', Load(), lineno=330, col_offset=32)], [], None, None, lineno=330, col_offset=19), lineno=330, col_offset=12)], lineno=328, col_offset=13), Assign([Name('constants', Store(), lineno=331, col_offset=8)], Call(Name('list', Load(), lineno=331, col_offset=20), [Attribute(Name('code', Load(), lineno=331, col_offset=25), 'co_consts', Load(), lineno=331, col_offset=25)], [], None, None, lineno=331, col_offset=20), lineno=331, col_offset=8), Assign([Name('foreign_code', Store(), lineno=332, col_offset=8)], Attribute(Name('test_main', Load(), lineno=332, col_offset=23), 'func_code', Load(), lineno=332, col_offset=23), lineno=332, col_offset=8), Assign([Name('pos', Store(), lineno=333, col_offset=8)], Call(Attribute(Name('constants', Load(), lineno=333, col_offset=14), 'index', Load(), lineno=333, col_offset=14), [Num(1, lineno=333, col_offset=30)], [], None, None, lineno=333, col_offset=14), lineno=333, col_offset=8), Assign([Subscript(Name('constants', Load(), lineno=334, col_offset=8), Index(Name('pos', Load(), lineno=334, col_offset=18)), Store(), lineno=334, col_offset=8)], Name('foreign_code', Load(), lineno=334, col_offset=25), lineno=334, col_offset=8), Assign([Name('code', Store(), lineno=335, col_offset=8)], Call(Call(Name('type', Load(), lineno=335, col_offset=15), [Name('code', Load(), lineno=335, col_offset=20)], [], None, None, lineno=335, col_offset=15), [Attribute(Name('code', Load(), lineno=335, col_offset=26), 'co_argcount', Load(), lineno=335, col_offset=26), Attribute(Name('code', Load(), lineno=335, col_offset=44), 'co_nlocals', Load(), lineno=335, col_offset=44), Attribute(Name('code', Load(), lineno=335, col_offset=61), 'co_stacksize', Load(), lineno=335, col_offset=61), Attribute(Name('code', Load(), lineno=336, col_offset=26), 'co_flags', Load(), lineno=336, col_offset=26), Attribute(Name('code', Load(), lineno=336, col_offset=41), 'co_code', Load(), lineno=336, col_offset=41), Call(Name('tuple', Load(), lineno=336, col_offset=55), [Name('constants', Load(), lineno=336, col_offset=61)], [], None, None, lineno=336, col_offset=55), Attribute(Name('code', Load(), lineno=337, col_offset=26), 'co_names', Load(), lineno=337, col_offset=26), Attribute(Name('code', Load(), lineno=337, col_offset=41), 'co_varnames', Load(), lineno=337, col_offset=41), Attribute(Name('code', Load(), lineno=337, col_offset=59), 'co_filename', Load(), lineno=337, col_offset=59), Attribute(Name('code', Load(), lineno=338, col_offset=26), 'co_name', Load(), lineno=338, col_offset=26), Attribute(Name('code', Load(), lineno=338, col_offset=40), 'co_firstlineno', Load(), lineno=338, col_offset=40), Attribute(Name('code', Load(), lineno=338, col_offset=61), 'co_lnotab', Load(), lineno=338, col_offset=61), Attribute(Name('code', Load(), lineno=339, col_offset=26), 'co_freevars', Load(), lineno=339, col_offset=26), Attribute(Name('code', Load(), lineno=339, col_offset=44), 'co_cellvars', Load(), lineno=339, col_offset=44)], [], None, None, lineno=335, col_offset=15), lineno=335, col_offset=8), With(Call(Name('open', Load(), lineno=340, col_offset=13), [Attribute(Name('self', Load(), lineno=340, col_offset=18), 'compiled_name', Load(), lineno=340, col_offset=18), Str('wb', lineno=340, col_offset=38)], [], None, None, lineno=340, col_offset=13), Name('f', Store(), lineno=340, col_offset=47), [Expr(Call(Attribute(Name('f', Load(), lineno=341, col_offset=12), 'write', Load(), lineno=341, col_offset=12), [Name('header', Load(), lineno=341, col_offset=20)], [], None, None, lineno=341, col_offset=12), lineno=341, col_offset=12), Expr(Call(Attribute(Name('marshal', Load(), lineno=342, col_offset=12), 'dump', Load(), lineno=342, col_offset=12), [Name('code', Load(), lineno=342, col_offset=25), Name('f', Load(), lineno=342, col_offset=31)], [], None, None, lineno=342, col_offset=12), lineno=342, col_offset=12)], lineno=340, col_offset=13), Assign([Name('mod', Store(), lineno=343, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=343, col_offset=14), 'import_module', Load(), lineno=343, col_offset=14), [], [], None, None, lineno=343, col_offset=14), lineno=343, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=344, col_offset=8), 'assertEqual', Load(), lineno=344, col_offset=8), [Attribute(Attribute(Name('mod', Load(), lineno=344, col_offset=25), 'constant', Load(), lineno=344, col_offset=25), 'co_filename', Load(), lineno=344, col_offset=25), Attribute(Name('foreign_code', Load(), lineno=344, col_offset=51), 'co_filename', Load(), lineno=344, col_offset=51)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8)], [], lineno=326, col_offset=4)], [], lineno=257, col_offset=0), ClassDef('PathsTests', [Attribute(Name('unittest', Load(), lineno=347, col_offset=17), 'TestCase', Load(), lineno=347, col_offset=17)], [Assign([Name('path', Store(), lineno=348, col_offset=4)], Name('TESTFN', Load(), lineno=348, col_offset=11), lineno=348, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=350, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=351, col_offset=8), 'mkdir', Load(), lineno=351, col_offset=8), [Attribute(Name('self', Load(), lineno=351, col_offset=17), 'path', Load(), lineno=351, col_offset=17)], [], None, None, lineno=351, col_offset=8), lineno=351, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=352, col_offset=8), 'syspath', Store(), lineno=352, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=352, col_offset=23), 'path', Load(), lineno=352, col_offset=23), Slice(None, None, None), Load(), lineno=352, col_offset=23), lineno=352, col_offset=8)], [], lineno=350, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=354, col_offset=17)], None, None, []), [Expr(Call(Name('rmtree', Load(), lineno=355, col_offset=8), [Attribute(Name('self', Load(), lineno=355, col_offset=15), 'path', Load(), lineno=355, col_offset=15)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Assign([Subscript(Attribute(Name('sys', Load(), lineno=356, col_offset=8), 'path', Load(), lineno=356, col_offset=8), Slice(None, None, None), Store(), lineno=356, col_offset=8)], Attribute(Name('self', Load(), lineno=356, col_offset=22), 'syspath', Load(), lineno=356, col_offset=22), lineno=356, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('test_trailing_slash', arguments([Name('self', Param(), lineno=359, col_offset=28)], None, None, []), [With(Call(Name('open', Load(), lineno=360, col_offset=13), [Call(Attribute(Attribute(Name('os', Load(), lineno=360, col_offset=18), 'path', Load(), lineno=360, col_offset=18), 'join', Load(), lineno=360, col_offset=18), [Attribute(Name('self', Load(), lineno=360, col_offset=31), 'path', Load(), lineno=360, col_offset=31), Str('test_trailing_slash.py', lineno=360, col_offset=42)], [], None, None, lineno=360, col_offset=18), Str('w', lineno=360, col_offset=69)], [], None, None, lineno=360, col_offset=13), Name('f', Store(), lineno=360, col_offset=77), [Expr(Call(Attribute(Name('f', Load(), lineno=361, col_offset=12), 'write', Load(), lineno=361, col_offset=12), [Str("testdata = 'test_trailing_slash'", lineno=361, col_offset=20)], [], None, None, lineno=361, col_offset=12), lineno=361, col_offset=12)], lineno=360, col_offset=13), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=362, col_offset=8), 'path', Load(), lineno=362, col_offset=8), 'append', Load(), lineno=362, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=362, col_offset=24), 'path', Load(), lineno=362, col_offset=24), Add(), Str('/', lineno=362, col_offset=34), lineno=362, col_offset=24)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Assign([Name('mod', Store(), lineno=363, col_offset=8)], Call(Name('__import__', Load(), lineno=363, col_offset=14), [Str('test_trailing_slash', lineno=363, col_offset=25)], [], None, None, lineno=363, col_offset=14), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=364, col_offset=8), 'assertEqual', Load(), lineno=364, col_offset=8), [Attribute(Name('mod', Load(), lineno=364, col_offset=25), 'testdata', Load(), lineno=364, col_offset=25), Str('test_trailing_slash', lineno=364, col_offset=39)], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Expr(Call(Name('unload', Load(), lineno=365, col_offset=8), [Str('test_trailing_slash', lineno=365, col_offset=15)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('_test_UNC_path', arguments([Name('self', Param(), lineno=368, col_offset=23)], None, None, []), [With(Call(Name('open', Load(), lineno=369, col_offset=13), [Call(Attribute(Attribute(Name('os', Load(), lineno=369, col_offset=18), 'path', Load(), lineno=369, col_offset=18), 'join', Load(), lineno=369, col_offset=18), [Attribute(Name('self', Load(), lineno=369, col_offset=31), 'path', Load(), lineno=369, col_offset=31), Str('test_trailing_slash.py', lineno=369, col_offset=42)], [], None, None, lineno=369, col_offset=18), Str('w', lineno=369, col_offset=69)], [], None, None, lineno=369, col_offset=13), Name('f', Store(), lineno=369, col_offset=77), [Expr(Call(Attribute(Name('f', Load(), lineno=370, col_offset=12), 'write', Load(), lineno=370, col_offset=12), [Str("testdata = 'test_trailing_slash'", lineno=370, col_offset=20)], [], None, None, lineno=370, col_offset=12), lineno=370, col_offset=12)], lineno=369, col_offset=13), Assign([Name('path', Store(), lineno=372, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=372, col_offset=15), 'path', Load(), lineno=372, col_offset=15), 'abspath', Load(), lineno=372, col_offset=15), [Attribute(Name('self', Load(), lineno=372, col_offset=31), 'path', Load(), lineno=372, col_offset=31)], [], None, None, lineno=372, col_offset=15), lineno=372, col_offset=8), Import([alias('socket', None)], lineno=373, col_offset=8), Assign([Name('hn', Store(), lineno=374, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=374, col_offset=13), 'gethostname', Load(), lineno=374, col_offset=13), [], [], None, None, lineno=374, col_offset=13), lineno=374, col_offset=8), Assign([Name('drive', Store(), lineno=375, col_offset=8)], Subscript(Name('path', Load(), lineno=375, col_offset=16), Index(Num(0, lineno=375, col_offset=21)), Load(), lineno=375, col_offset=16), lineno=375, col_offset=8), Assign([Name('unc', Store(), lineno=376, col_offset=8)], BinOp(Str('\\\\%s\\%s$', lineno=376, col_offset=14), Mod(), Tuple([Name('hn', Load(), lineno=376, col_offset=29), Name('drive', Load(), lineno=376, col_offset=33)], Load(), lineno=376, col_offset=29), lineno=376, col_offset=14), lineno=376, col_offset=8), AugAssign(Name('unc', Store(), lineno=377, col_offset=8), Add(), Subscript(Name('path', Load(), lineno=377, col_offset=15), Slice(Num(2, lineno=377, col_offset=20), None, None), Load(), lineno=377, col_offset=15), lineno=377, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=378, col_offset=8), 'path', Load(), lineno=378, col_offset=8), 'append', Load(), lineno=378, col_offset=8), [Name('path', Load(), lineno=378, col_offset=24)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Assign([Name('mod', Store(), lineno=379, col_offset=8)], Call(Name('__import__', Load(), lineno=379, col_offset=14), [Str('test_trailing_slash', lineno=379, col_offset=25)], [], None, None, lineno=379, col_offset=14), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=380, col_offset=8), 'assertEqual', Load(), lineno=380, col_offset=8), [Attribute(Name('mod', Load(), lineno=380, col_offset=25), 'testdata', Load(), lineno=380, col_offset=25), Str('test_trailing_slash', lineno=380, col_offset=39)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Name('unload', Load(), lineno=381, col_offset=8), [Str('test_trailing_slash', lineno=381, col_offset=15)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8)], [], lineno=368, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=383, col_offset=7), 'platform', Load(), lineno=383, col_offset=7), [Eq()], [Str('win32', lineno=383, col_offset=23)], lineno=383, col_offset=7), [Assign([Name('test_UNC_path', Store(), lineno=384, col_offset=8)], Name('_test_UNC_path', Load(), lineno=384, col_offset=24), lineno=384, col_offset=8)], [], lineno=383, col_offset=4)], [], lineno=347, col_offset=0), ClassDef('RelativeImportTests', [Attribute(Name('unittest', Load(), lineno=387, col_offset=26), 'TestCase', Load(), lineno=387, col_offset=26)], [FunctionDef('tearDown', arguments([Name('self', Param(), lineno=389, col_offset=17)], None, None, []), [Expr(Call(Name('unload', Load(), lineno=390, col_offset=8), [Str('test.relimport', lineno=390, col_offset=15)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8)], [], lineno=389, col_offset=4), Assign([Name('setUp', Store(), lineno=391, col_offset=4)], Name('tearDown', Load(), lineno=391, col_offset=12), lineno=391, col_offset=4), FunctionDef('test_relimport_star', arguments([Name('self', Param(), lineno=393, col_offset=28)], None, None, []), [ImportFrom(None, [alias('relimport', None)], 1, lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), 'assertTrue', Load(), lineno=396, col_offset=8), [Call(Name('hasattr', Load(), lineno=396, col_offset=24), [Name('relimport', Load(), lineno=396, col_offset=32), Str('RelativeImportTests', lineno=396, col_offset=43)], [], None, None, lineno=396, col_offset=24)], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8)], [], lineno=393, col_offset=4), FunctionDef('test_issue3221', arguments([Name('self', Param(), lineno=398, col_offset=23)], None, None, []), [FunctionDef('check_absolute', arguments([], None, None, []), [Exec(Str('from os import path', lineno=401, col_offset=17), Name('ns', Load(), lineno=401, col_offset=42), None, lineno=401, col_offset=12)], [], lineno=400, col_offset=8), FunctionDef('check_relative', arguments([], None, None, []), [Exec(Str('from . import relimport', lineno=403, col_offset=17), Name('ns', Load(), lineno=403, col_offset=46), None, lineno=403, col_offset=12)], [], lineno=402, col_offset=8), Assign([Name('ns', Store(), lineno=406, col_offset=8)], Call(Name('dict', Load(), lineno=406, col_offset=13), [], [keyword('__package__', Str('test', lineno=406, col_offset=30)), keyword('__name__', Str('test.notarealmodule', lineno=406, col_offset=47))], None, None, lineno=406, col_offset=13), lineno=406, col_offset=8), Expr(Call(Name('check_absolute', Load(), lineno=407, col_offset=8), [], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Name('check_relative', Load(), lineno=408, col_offset=8), [], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Assign([Name('ns', Store(), lineno=411, col_offset=8)], Call(Name('dict', Load(), lineno=411, col_offset=13), [], [keyword('__package__', Str('test', lineno=411, col_offset=30)), keyword('__name__', Str('notarealpkg.notarealmodule', lineno=411, col_offset=47))], None, None, lineno=411, col_offset=13), lineno=411, col_offset=8), Expr(Call(Name('check_absolute', Load(), lineno=412, col_offset=8), [], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Name('check_relative', Load(), lineno=413, col_offset=8), [], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Assign([Name('ns', Store(), lineno=416, col_offset=8)], Call(Name('dict', Load(), lineno=416, col_offset=13), [], [keyword('__package__', Str('foo', lineno=416, col_offset=30)), keyword('__name__', Str('test.notarealmodule', lineno=416, col_offset=46))], None, None, lineno=416, col_offset=13), lineno=416, col_offset=8), With(Call(Name('check_warnings', Load(), lineno=417, col_offset=13), [Tuple([Str('.+foo', lineno=417, col_offset=29), Name('RuntimeWarning', Load(), lineno=417, col_offset=38)], Load(), lineno=417, col_offset=29)], [], None, None, lineno=417, col_offset=13), None, [Expr(Call(Name('check_absolute', Load(), lineno=418, col_offset=12), [], [], None, None, lineno=418, col_offset=12), lineno=418, col_offset=12)], lineno=417, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=8), 'assertRaises', Load(), lineno=419, col_offset=8), [Name('SystemError', Load(), lineno=419, col_offset=26), Name('check_relative', Load(), lineno=419, col_offset=39)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8), Assign([Name('ns', Store(), lineno=422, col_offset=8)], Call(Name('dict', Load(), lineno=422, col_offset=13), [], [keyword('__package__', Str('foo', lineno=422, col_offset=30)), keyword('__name__', Str('notarealpkg.notarealmodule', lineno=422, col_offset=46))], None, None, lineno=422, col_offset=13), lineno=422, col_offset=8), With(Call(Name('check_warnings', Load(), lineno=423, col_offset=13), [Tuple([Str('.+foo', lineno=423, col_offset=29), Name('RuntimeWarning', Load(), lineno=423, col_offset=38)], Load(), lineno=423, col_offset=29)], [], None, None, lineno=423, col_offset=13), None, [Expr(Call(Name('check_absolute', Load(), lineno=424, col_offset=12), [], [], None, None, lineno=424, col_offset=12), lineno=424, col_offset=12)], lineno=423, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=8), 'assertRaises', Load(), lineno=425, col_offset=8), [Name('SystemError', Load(), lineno=425, col_offset=26), Name('check_relative', Load(), lineno=425, col_offset=39)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8), Assign([Name('ns', Store(), lineno=428, col_offset=8)], Call(Name('dict', Load(), lineno=428, col_offset=13), [], [keyword('__package__', Call(Name('object', Load(), lineno=428, col_offset=30), [], [], None, None, lineno=428, col_offset=30))], None, None, lineno=428, col_offset=13), lineno=428, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=429, col_offset=8), 'assertRaises', Load(), lineno=429, col_offset=8), [Name('ValueError', Load(), lineno=429, col_offset=26), Name('check_absolute', Load(), lineno=429, col_offset=38)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertRaises', Load(), lineno=430, col_offset=8), [Name('ValueError', Load(), lineno=430, col_offset=26), Name('check_relative', Load(), lineno=430, col_offset=38)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8)], [], lineno=398, col_offset=4), FunctionDef('test_absolute_import_without_future', arguments([Name('self', Param(), lineno=432, col_offset=44)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=436, col_offset=13), 'assertRaises', Load(), lineno=436, col_offset=13), [Name('ImportError', Load(), lineno=436, col_offset=31)], [], None, None, lineno=436, col_offset=13), None, [ImportFrom('os', [alias('sep', None)], 1, lineno=437, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=12), 'fail', Load(), lineno=438, col_offset=12), [Str('explicit relative import triggered an implicit absolute import', lineno=438, col_offset=22)], [], None, None, lineno=438, col_offset=12), lineno=438, col_offset=12)], lineno=436, col_offset=13)], [], lineno=432, col_offset=4)], [], lineno=387, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=442, col_offset=14)], None, None, [Name('None', Load(), lineno=442, col_offset=22)]), [Expr(Call(Name('run_unittest', Load(), lineno=443, col_offset=4), [Name('ImportTests', Load(), lineno=443, col_offset=17), Name('PycRewritingTests', Load(), lineno=443, col_offset=30), Name('PathsTests', Load(), lineno=443, col_offset=49), Name('RelativeImportTests', Load(), lineno=443, col_offset=61)], [], None, None, lineno=443, col_offset=4), lineno=443, col_offset=4)], [], lineno=442, col_offset=0), If(Compare(Name('__name__', Load(), lineno=445, col_offset=3), [Eq()], [Str('__main__', lineno=445, col_offset=15)], lineno=445, col_offset=3), [ImportFrom('test.test_import', [alias('test_main', None)], 0, lineno=447, col_offset=4), Expr(Call(Name('test_main', Load(), lineno=448, col_offset=4), [], [], None, None, lineno=448, col_offset=4), lineno=448, col_offset=4)], [], lineno=445, col_offset=0)])
