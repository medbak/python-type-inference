Module([Expr(Str('Unit tests for contextlib.py, and other context managers.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('tempfile', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), ImportFrom('contextlib', [alias('*', None)], 0, lineno=6, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), TryExcept([Import([alias('threading', None)], lineno=9, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=10, col_offset=7), None, [Assign([Name('threading', Store(), lineno=11, col_offset=4)], Name('None', Load(), lineno=11, col_offset=16), lineno=11, col_offset=4)], lineno=10, col_offset=0)], [], lineno=8, col_offset=0), ClassDef('ContextManagerTestCase', [Attribute(Name('unittest', Load(), lineno=14, col_offset=29), 'TestCase', Load(), lineno=14, col_offset=29)], [FunctionDef('test_contextmanager_plain', arguments([Name('self', Param(), lineno=16, col_offset=34)], None, None, []), [Assign([Name('state', Store(), lineno=17, col_offset=8)], List([], Load(), lineno=17, col_offset=16), lineno=17, col_offset=8), FunctionDef('woohoo', arguments([], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=20, col_offset=12), 'append', Load(), lineno=20, col_offset=12), [Num(1, lineno=20, col_offset=25)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=12), Expr(Yield(Num(42, lineno=21, col_offset=18), lineno=21, col_offset=12), lineno=21, col_offset=12), Expr(Call(Attribute(Name('state', Load(), lineno=22, col_offset=12), 'append', Load(), lineno=22, col_offset=12), [Num(999, lineno=22, col_offset=25)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=12)], [Name('contextmanager', Load(), lineno=18, col_offset=9)], lineno=18, col_offset=8), With(Call(Name('woohoo', Load(), lineno=23, col_offset=13), [], [], None, None, lineno=23, col_offset=13), Name('x', Store(), lineno=23, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=12), 'assertEqual', Load(), lineno=24, col_offset=12), [Name('state', Load(), lineno=24, col_offset=29), List([Num(1, lineno=24, col_offset=37)], Load(), lineno=24, col_offset=36)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=12), 'assertEqual', Load(), lineno=25, col_offset=12), [Name('x', Load(), lineno=25, col_offset=29), Num(42, lineno=25, col_offset=32)], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=12), Expr(Call(Attribute(Name('state', Load(), lineno=26, col_offset=12), 'append', Load(), lineno=26, col_offset=12), [Name('x', Load(), lineno=26, col_offset=25)], [], None, None, lineno=26, col_offset=12), lineno=26, col_offset=12)], lineno=23, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Name('state', Load(), lineno=27, col_offset=25), List([Num(1, lineno=27, col_offset=33), Num(42, lineno=27, col_offset=36), Num(999, lineno=27, col_offset=40)], Load(), lineno=27, col_offset=32)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_contextmanager_finally', arguments([Name('self', Param(), lineno=29, col_offset=36)], None, None, []), [Assign([Name('state', Store(), lineno=30, col_offset=8)], List([], Load(), lineno=30, col_offset=16), lineno=30, col_offset=8), FunctionDef('woohoo', arguments([], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=33, col_offset=12), 'append', Load(), lineno=33, col_offset=12), [Num(1, lineno=33, col_offset=25)], [], None, None, lineno=33, col_offset=12), lineno=33, col_offset=12), TryFinally([Expr(Yield(Num(42, lineno=35, col_offset=22), lineno=35, col_offset=16), lineno=35, col_offset=16)], [Expr(Call(Attribute(Name('state', Load(), lineno=37, col_offset=16), 'append', Load(), lineno=37, col_offset=16), [Num(999, lineno=37, col_offset=29)], [], None, None, lineno=37, col_offset=16), lineno=37, col_offset=16)], lineno=34, col_offset=12)], [Name('contextmanager', Load(), lineno=31, col_offset=9)], lineno=31, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=38, col_offset=13), 'assertRaises', Load(), lineno=38, col_offset=13), [Name('ZeroDivisionError', Load(), lineno=38, col_offset=31)], [], None, None, lineno=38, col_offset=13), None, [With(Call(Name('woohoo', Load(), lineno=39, col_offset=17), [], [], None, None, lineno=39, col_offset=17), Name('x', Store(), lineno=39, col_offset=29), [Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=16), 'assertEqual', Load(), lineno=40, col_offset=16), [Name('state', Load(), lineno=40, col_offset=33), List([Num(1, lineno=40, col_offset=41)], Load(), lineno=40, col_offset=40)], [], None, None, lineno=40, col_offset=16), lineno=40, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=16), 'assertEqual', Load(), lineno=41, col_offset=16), [Name('x', Load(), lineno=41, col_offset=33), Num(42, lineno=41, col_offset=36)], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=16), Expr(Call(Attribute(Name('state', Load(), lineno=42, col_offset=16), 'append', Load(), lineno=42, col_offset=16), [Name('x', Load(), lineno=42, col_offset=29)], [], None, None, lineno=42, col_offset=16), lineno=42, col_offset=16), Raise(Call(Name('ZeroDivisionError', Load(), lineno=43, col_offset=22), [], [], None, None, lineno=43, col_offset=22), None, None, lineno=43, col_offset=16)], lineno=39, col_offset=17)], lineno=38, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertEqual', Load(), lineno=44, col_offset=8), [Name('state', Load(), lineno=44, col_offset=25), List([Num(1, lineno=44, col_offset=33), Num(42, lineno=44, col_offset=36), Num(999, lineno=44, col_offset=40)], Load(), lineno=44, col_offset=32)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('test_contextmanager_no_reraise', arguments([Name('self', Param(), lineno=46, col_offset=39)], None, None, []), [FunctionDef('whee', arguments([], None, None, []), [Expr(Yield(None, lineno=49, col_offset=12), lineno=49, col_offset=12)], [Name('contextmanager', Load(), lineno=47, col_offset=9)], lineno=47, col_offset=8), Assign([Name('ctx', Store(), lineno=50, col_offset=8)], Call(Name('whee', Load(), lineno=50, col_offset=14), [], [], None, None, lineno=50, col_offset=14), lineno=50, col_offset=8), Expr(Call(Attribute(Name('ctx', Load(), lineno=51, col_offset=8), '__enter__', Load(), lineno=51, col_offset=8), [], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertFalse', Load(), lineno=53, col_offset=8), [Call(Attribute(Name('ctx', Load(), lineno=53, col_offset=25), '__exit__', Load(), lineno=53, col_offset=25), [Name('TypeError', Load(), lineno=53, col_offset=38), Call(Name('TypeError', Load(), lineno=53, col_offset=49), [Str('foo', lineno=53, col_offset=59)], [], None, None, lineno=53, col_offset=49), Name('None', Load(), lineno=53, col_offset=67)], [], None, None, lineno=53, col_offset=25)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('test_contextmanager_trap_yield_after_throw', arguments([Name('self', Param(), lineno=55, col_offset=51)], None, None, []), [FunctionDef('whoo', arguments([], None, None, []), [TryExcept([Expr(Yield(None, lineno=59, col_offset=16), lineno=59, col_offset=16)], [ExceptHandler(None, None, [Expr(Yield(None, lineno=61, col_offset=16), lineno=61, col_offset=16)], lineno=60, col_offset=12)], [], lineno=58, col_offset=12)], [Name('contextmanager', Load(), lineno=56, col_offset=9)], lineno=56, col_offset=8), Assign([Name('ctx', Store(), lineno=62, col_offset=8)], Call(Name('whoo', Load(), lineno=62, col_offset=14), [], [], None, None, lineno=62, col_offset=14), lineno=62, col_offset=8), Expr(Call(Attribute(Name('ctx', Load(), lineno=63, col_offset=8), '__enter__', Load(), lineno=63, col_offset=8), [], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'assertRaises', Load(), lineno=64, col_offset=8), [Name('RuntimeError', Load(), lineno=65, col_offset=12), Attribute(Name('ctx', Load(), lineno=65, col_offset=26), '__exit__', Load(), lineno=65, col_offset=26), Name('TypeError', Load(), lineno=65, col_offset=40), Call(Name('TypeError', Load(), lineno=65, col_offset=51), [Str('foo', lineno=65, col_offset=61)], [], None, None, lineno=65, col_offset=51), Name('None', Load(), lineno=65, col_offset=69)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('test_contextmanager_except', arguments([Name('self', Param(), lineno=68, col_offset=35)], None, None, []), [Assign([Name('state', Store(), lineno=69, col_offset=8)], List([], Load(), lineno=69, col_offset=16), lineno=69, col_offset=8), FunctionDef('woohoo', arguments([], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=72, col_offset=12), 'append', Load(), lineno=72, col_offset=12), [Num(1, lineno=72, col_offset=25)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=12), TryExcept([Expr(Yield(Num(42, lineno=74, col_offset=22), lineno=74, col_offset=16), lineno=74, col_offset=16)], [ExceptHandler(Name('ZeroDivisionError', Load(), lineno=75, col_offset=19), Name('e', Store(), lineno=75, col_offset=38), [Expr(Call(Attribute(Name('state', Load(), lineno=76, col_offset=16), 'append', Load(), lineno=76, col_offset=16), [Subscript(Attribute(Name('e', Load(), lineno=76, col_offset=29), 'args', Load(), lineno=76, col_offset=29), Index(Num(0, lineno=76, col_offset=36)), Load(), lineno=76, col_offset=29)], [], None, None, lineno=76, col_offset=16), lineno=76, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=16), 'assertEqual', Load(), lineno=77, col_offset=16), [Name('state', Load(), lineno=77, col_offset=33), List([Num(1, lineno=77, col_offset=41), Num(42, lineno=77, col_offset=44), Num(999, lineno=77, col_offset=48)], Load(), lineno=77, col_offset=40)], [], None, None, lineno=77, col_offset=16), lineno=77, col_offset=16)], lineno=75, col_offset=12)], [], lineno=73, col_offset=12)], [Name('contextmanager', Load(), lineno=70, col_offset=9)], lineno=70, col_offset=8), With(Call(Name('woohoo', Load(), lineno=78, col_offset=13), [], [], None, None, lineno=78, col_offset=13), Name('x', Store(), lineno=78, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=12), 'assertEqual', Load(), lineno=79, col_offset=12), [Name('state', Load(), lineno=79, col_offset=29), List([Num(1, lineno=79, col_offset=37)], Load(), lineno=79, col_offset=36)], [], None, None, lineno=79, col_offset=12), lineno=79, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=12), 'assertEqual', Load(), lineno=80, col_offset=12), [Name('x', Load(), lineno=80, col_offset=29), Num(42, lineno=80, col_offset=32)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12), Expr(Call(Attribute(Name('state', Load(), lineno=81, col_offset=12), 'append', Load(), lineno=81, col_offset=12), [Name('x', Load(), lineno=81, col_offset=25)], [], None, None, lineno=81, col_offset=12), lineno=81, col_offset=12), Raise(Call(Name('ZeroDivisionError', Load(), lineno=82, col_offset=18), [Num(999, lineno=82, col_offset=36)], [], None, None, lineno=82, col_offset=18), None, None, lineno=82, col_offset=12)], lineno=78, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'assertEqual', Load(), lineno=83, col_offset=8), [Name('state', Load(), lineno=83, col_offset=25), List([Num(1, lineno=83, col_offset=33), Num(42, lineno=83, col_offset=36), Num(999, lineno=83, col_offset=40)], Load(), lineno=83, col_offset=32)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('_create_contextmanager_attribs', arguments([Name('self', Param(), lineno=85, col_offset=39)], None, None, []), [FunctionDef('attribs', arguments([], None, 'kw', []), [FunctionDef('decorate', arguments([Name('func', Param(), lineno=87, col_offset=25)], None, None, []), [For(Tuple([Name('k', Store(), lineno=88, col_offset=20), Name('v', Store(), lineno=88, col_offset=22)], Store(), lineno=88, col_offset=20), Call(Attribute(Name('kw', Load(), lineno=88, col_offset=27), 'items', Load(), lineno=88, col_offset=27), [], [], None, None, lineno=88, col_offset=27), [Expr(Call(Name('setattr', Load(), lineno=89, col_offset=20), [Name('func', Load(), lineno=89, col_offset=28), Name('k', Load(), lineno=89, col_offset=33), Name('v', Load(), lineno=89, col_offset=35)], [], None, None, lineno=89, col_offset=20), lineno=89, col_offset=20)], [], lineno=88, col_offset=16), Return(Name('func', Load(), lineno=90, col_offset=23), lineno=90, col_offset=16)], [], lineno=87, col_offset=12), Return(Name('decorate', Load(), lineno=91, col_offset=19), lineno=91, col_offset=12)], [], lineno=86, col_offset=8), FunctionDef('baz', arguments([Name('spam', Param(), lineno=94, col_offset=16)], None, None, []), [Expr(Str('Whee!', lineno=95, col_offset=12), lineno=95, col_offset=12)], [Name('contextmanager', Load(), lineno=92, col_offset=9), Call(Name('attribs', Load(), lineno=93, col_offset=9), [], [keyword('foo', Str('bar', lineno=93, col_offset=21))], None, None, lineno=93, col_offset=9)], lineno=92, col_offset=8), Return(Name('baz', Load(), lineno=96, col_offset=15), lineno=96, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('test_contextmanager_attribs', arguments([Name('self', Param(), lineno=98, col_offset=36)], None, None, []), [Assign([Name('baz', Store(), lineno=99, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=99, col_offset=14), '_create_contextmanager_attribs', Load(), lineno=99, col_offset=14), [], [], None, None, lineno=99, col_offset=14), lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertEqual', Load(), lineno=100, col_offset=8), [Attribute(Name('baz', Load(), lineno=100, col_offset=25), '__name__', Load(), lineno=100, col_offset=25), Str('baz', lineno=100, col_offset=38)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertEqual', Load(), lineno=101, col_offset=8), [Attribute(Name('baz', Load(), lineno=101, col_offset=25), 'foo', Load(), lineno=101, col_offset=25), Str('bar', lineno=101, col_offset=34)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('test_contextmanager_doc_attrib', arguments([Name('self', Param(), lineno=105, col_offset=39)], None, None, []), [Assign([Name('baz', Store(), lineno=106, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=106, col_offset=14), '_create_contextmanager_attribs', Load(), lineno=106, col_offset=14), [], [], None, None, lineno=106, col_offset=14), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Attribute(Name('baz', Load(), lineno=107, col_offset=25), '__doc__', Load(), lineno=107, col_offset=25), Str('Whee!', lineno=107, col_offset=38)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=103, col_offset=5), 'skipIf', Load(), lineno=103, col_offset=5), [Compare(Attribute(Attribute(Name('sys', Load(), lineno=103, col_offset=21), 'flags', Load(), lineno=103, col_offset=21), 'optimize', Load(), lineno=103, col_offset=21), [GtE()], [Num(2, lineno=103, col_offset=43)], lineno=103, col_offset=21), Str('Docstrings are omitted with -O2 and above', lineno=104, col_offset=21)], [], None, None, lineno=103, col_offset=5)], lineno=103, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('NestedTestCase', [Attribute(Name('unittest', Load(), lineno=109, col_offset=21), 'TestCase', Load(), lineno=109, col_offset=21)], [FunctionDef('test_nested', arguments([Name('self', Param(), lineno=113, col_offset=20)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [Expr(Yield(Num(1, lineno=116, col_offset=18), lineno=116, col_offset=12), lineno=116, col_offset=12)], [Name('contextmanager', Load(), lineno=114, col_offset=9)], lineno=114, col_offset=8), FunctionDef('b', arguments([], None, None, []), [Expr(Yield(Num(2, lineno=119, col_offset=18), lineno=119, col_offset=12), lineno=119, col_offset=12)], [Name('contextmanager', Load(), lineno=117, col_offset=9)], lineno=117, col_offset=8), FunctionDef('c', arguments([], None, None, []), [Expr(Yield(Num(3, lineno=122, col_offset=18), lineno=122, col_offset=12), lineno=122, col_offset=12)], [Name('contextmanager', Load(), lineno=120, col_offset=9)], lineno=120, col_offset=8), With(Call(Name('nested', Load(), lineno=123, col_offset=13), [Call(Name('a', Load(), lineno=123, col_offset=20), [], [], None, None, lineno=123, col_offset=20), Call(Name('b', Load(), lineno=123, col_offset=25), [], [], None, None, lineno=123, col_offset=25), Call(Name('c', Load(), lineno=123, col_offset=30), [], [], None, None, lineno=123, col_offset=30)], [], None, None, lineno=123, col_offset=13), Tuple([Name('x', Store(), lineno=123, col_offset=39), Name('y', Store(), lineno=123, col_offset=42), Name('z', Store(), lineno=123, col_offset=45)], Store(), lineno=123, col_offset=39), [Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=12), 'assertEqual', Load(), lineno=124, col_offset=12), [Name('x', Load(), lineno=124, col_offset=29), Num(1, lineno=124, col_offset=32)], [], None, None, lineno=124, col_offset=12), lineno=124, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=12), 'assertEqual', Load(), lineno=125, col_offset=12), [Name('y', Load(), lineno=125, col_offset=29), Num(2, lineno=125, col_offset=32)], [], None, None, lineno=125, col_offset=12), lineno=125, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=12), 'assertEqual', Load(), lineno=126, col_offset=12), [Name('z', Load(), lineno=126, col_offset=29), Num(3, lineno=126, col_offset=32)], [], None, None, lineno=126, col_offset=12), lineno=126, col_offset=12)], lineno=123, col_offset=13)], [], lineno=113, col_offset=4), FunctionDef('test_nested_cleanup', arguments([Name('self', Param(), lineno=128, col_offset=28)], None, None, []), [Assign([Name('state', Store(), lineno=129, col_offset=8)], List([], Load(), lineno=129, col_offset=16), lineno=129, col_offset=8), FunctionDef('a', arguments([], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=132, col_offset=12), 'append', Load(), lineno=132, col_offset=12), [Num(1, lineno=132, col_offset=25)], [], None, None, lineno=132, col_offset=12), lineno=132, col_offset=12), TryFinally([Expr(Yield(Num(2, lineno=134, col_offset=22), lineno=134, col_offset=16), lineno=134, col_offset=16)], [Expr(Call(Attribute(Name('state', Load(), lineno=136, col_offset=16), 'append', Load(), lineno=136, col_offset=16), [Num(3, lineno=136, col_offset=29)], [], None, None, lineno=136, col_offset=16), lineno=136, col_offset=16)], lineno=133, col_offset=12)], [Name('contextmanager', Load(), lineno=130, col_offset=9)], lineno=130, col_offset=8), FunctionDef('b', arguments([], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=139, col_offset=12), 'append', Load(), lineno=139, col_offset=12), [Num(4, lineno=139, col_offset=25)], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=12), TryFinally([Expr(Yield(Num(5, lineno=141, col_offset=22), lineno=141, col_offset=16), lineno=141, col_offset=16)], [Expr(Call(Attribute(Name('state', Load(), lineno=143, col_offset=16), 'append', Load(), lineno=143, col_offset=16), [Num(6, lineno=143, col_offset=29)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16)], lineno=140, col_offset=12)], [Name('contextmanager', Load(), lineno=137, col_offset=9)], lineno=137, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=144, col_offset=13), 'assertRaises', Load(), lineno=144, col_offset=13), [Name('ZeroDivisionError', Load(), lineno=144, col_offset=31)], [], None, None, lineno=144, col_offset=13), None, [With(Call(Name('nested', Load(), lineno=145, col_offset=17), [Call(Name('a', Load(), lineno=145, col_offset=24), [], [], None, None, lineno=145, col_offset=24), Call(Name('b', Load(), lineno=145, col_offset=29), [], [], None, None, lineno=145, col_offset=29)], [], None, None, lineno=145, col_offset=17), Tuple([Name('x', Store(), lineno=145, col_offset=38), Name('y', Store(), lineno=145, col_offset=41)], Store(), lineno=145, col_offset=38), [Expr(Call(Attribute(Name('state', Load(), lineno=146, col_offset=16), 'append', Load(), lineno=146, col_offset=16), [Name('x', Load(), lineno=146, col_offset=29)], [], None, None, lineno=146, col_offset=16), lineno=146, col_offset=16), Expr(Call(Attribute(Name('state', Load(), lineno=147, col_offset=16), 'append', Load(), lineno=147, col_offset=16), [Name('y', Load(), lineno=147, col_offset=29)], [], None, None, lineno=147, col_offset=16), lineno=147, col_offset=16), Expr(BinOp(Num(1, lineno=148, col_offset=16), FloorDiv(), Num(0, lineno=148, col_offset=21), lineno=148, col_offset=16), lineno=148, col_offset=16)], lineno=145, col_offset=17)], lineno=144, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Name('state', Load(), lineno=149, col_offset=25), List([Num(1, lineno=149, col_offset=33), Num(4, lineno=149, col_offset=36), Num(2, lineno=149, col_offset=39), Num(5, lineno=149, col_offset=42), Num(6, lineno=149, col_offset=45), Num(3, lineno=149, col_offset=48)], Load(), lineno=149, col_offset=32)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('test_nested_right_exception', arguments([Name('self', Param(), lineno=151, col_offset=36)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [Expr(Yield(Num(1, lineno=154, col_offset=18), lineno=154, col_offset=12), lineno=154, col_offset=12)], [Name('contextmanager', Load(), lineno=152, col_offset=9)], lineno=152, col_offset=8), ClassDef('b', [Name('object', Load(), lineno=155, col_offset=16)], [FunctionDef('__enter__', arguments([Name('self', Param(), lineno=156, col_offset=26)], None, None, []), [Return(Num(2, lineno=157, col_offset=23), lineno=157, col_offset=16)], [], lineno=156, col_offset=12), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=158, col_offset=25)], 'exc_info', None, []), [TryExcept([Raise(Call(Name('Exception', Load(), lineno=160, col_offset=26), [], [], None, None, lineno=160, col_offset=26), None, None, lineno=160, col_offset=20)], [ExceptHandler(None, None, [Pass( lineno=162, col_offset=20)], lineno=161, col_offset=16)], [], lineno=159, col_offset=16)], [], lineno=158, col_offset=12)], [], lineno=155, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=163, col_offset=13), 'assertRaises', Load(), lineno=163, col_offset=13), [Name('ZeroDivisionError', Load(), lineno=163, col_offset=31)], [], None, None, lineno=163, col_offset=13), None, [With(Call(Name('nested', Load(), lineno=164, col_offset=17), [Call(Name('a', Load(), lineno=164, col_offset=24), [], [], None, None, lineno=164, col_offset=24), Call(Name('b', Load(), lineno=164, col_offset=29), [], [], None, None, lineno=164, col_offset=29)], [], None, None, lineno=164, col_offset=17), Tuple([Name('x', Store(), lineno=164, col_offset=38), Name('y', Store(), lineno=164, col_offset=41)], Store(), lineno=164, col_offset=38), [Expr(BinOp(Num(1, lineno=165, col_offset=16), FloorDiv(), Num(0, lineno=165, col_offset=21), lineno=165, col_offset=16), lineno=165, col_offset=16)], lineno=164, col_offset=17)], lineno=163, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'assertEqual', Load(), lineno=166, col_offset=8), [Tuple([Name('x', Load(), lineno=166, col_offset=26), Name('y', Load(), lineno=166, col_offset=29)], Load(), lineno=166, col_offset=26), Tuple([Num(1, lineno=166, col_offset=34), Num(2, lineno=166, col_offset=37)], Load(), lineno=166, col_offset=34)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('test_nested_b_swallows', arguments([Name('self', Param(), lineno=168, col_offset=31)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [Expr(Yield(None, lineno=171, col_offset=12), lineno=171, col_offset=12)], [Name('contextmanager', Load(), lineno=169, col_offset=9)], lineno=169, col_offset=8), FunctionDef('b', arguments([], None, None, []), [TryExcept([Expr(Yield(None, lineno=175, col_offset=16), lineno=175, col_offset=16)], [ExceptHandler(None, None, [Pass( lineno=178, col_offset=16)], lineno=176, col_offset=12)], [], lineno=174, col_offset=12)], [Name('contextmanager', Load(), lineno=172, col_offset=9)], lineno=172, col_offset=8), TryExcept([With(Call(Name('nested', Load(), lineno=180, col_offset=17), [Call(Name('a', Load(), lineno=180, col_offset=24), [], [], None, None, lineno=180, col_offset=24), Call(Name('b', Load(), lineno=180, col_offset=29), [], [], None, None, lineno=180, col_offset=29)], [], None, None, lineno=180, col_offset=17), None, [Expr(BinOp(Num(1, lineno=181, col_offset=16), FloorDiv(), Num(0, lineno=181, col_offset=21), lineno=181, col_offset=16), lineno=181, col_offset=16)], lineno=180, col_offset=17)], [ExceptHandler(Name('ZeroDivisionError', Load(), lineno=182, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'fail', Load(), lineno=183, col_offset=12), [Str("Didn't swallow ZeroDivisionError", lineno=183, col_offset=22)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12)], lineno=182, col_offset=8)], [], lineno=179, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('test_nested_break', arguments([Name('self', Param(), lineno=185, col_offset=26)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [Expr(Yield(None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [Name('contextmanager', Load(), lineno=186, col_offset=9)], lineno=186, col_offset=8), Assign([Name('state', Store(), lineno=189, col_offset=8)], Num(0, lineno=189, col_offset=16), lineno=189, col_offset=8), While(Name('True', Load(), lineno=190, col_offset=14), [AugAssign(Name('state', Store(), lineno=191, col_offset=12), Add(), Num(1, lineno=191, col_offset=21), lineno=191, col_offset=12), With(Call(Name('nested', Load(), lineno=192, col_offset=17), [Call(Name('a', Load(), lineno=192, col_offset=24), [], [], None, None, lineno=192, col_offset=24), Call(Name('a', Load(), lineno=192, col_offset=29), [], [], None, None, lineno=192, col_offset=29)], [], None, None, lineno=192, col_offset=17), None, [Break( lineno=193, col_offset=16)], lineno=192, col_offset=17), AugAssign(Name('state', Store(), lineno=194, col_offset=12), Add(), Num(10, lineno=194, col_offset=21), lineno=194, col_offset=12)], [], lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), 'assertEqual', Load(), lineno=195, col_offset=8), [Name('state', Load(), lineno=195, col_offset=25), Num(1, lineno=195, col_offset=32)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('test_nested_continue', arguments([Name('self', Param(), lineno=197, col_offset=29)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [Expr(Yield(None, lineno=200, col_offset=12), lineno=200, col_offset=12)], [Name('contextmanager', Load(), lineno=198, col_offset=9)], lineno=198, col_offset=8), Assign([Name('state', Store(), lineno=201, col_offset=8)], Num(0, lineno=201, col_offset=16), lineno=201, col_offset=8), While(Compare(Name('state', Load(), lineno=202, col_offset=14), [Lt()], [Num(3, lineno=202, col_offset=22)], lineno=202, col_offset=14), [AugAssign(Name('state', Store(), lineno=203, col_offset=12), Add(), Num(1, lineno=203, col_offset=21), lineno=203, col_offset=12), With(Call(Name('nested', Load(), lineno=204, col_offset=17), [Call(Name('a', Load(), lineno=204, col_offset=24), [], [], None, None, lineno=204, col_offset=24), Call(Name('a', Load(), lineno=204, col_offset=29), [], [], None, None, lineno=204, col_offset=29)], [], None, None, lineno=204, col_offset=17), None, [Continue( lineno=205, col_offset=16)], lineno=204, col_offset=17), AugAssign(Name('state', Store(), lineno=206, col_offset=12), Add(), Num(10, lineno=206, col_offset=21), lineno=206, col_offset=12)], [], lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Name('state', Load(), lineno=207, col_offset=25), Num(3, lineno=207, col_offset=32)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('test_nested_return', arguments([Name('self', Param(), lineno=209, col_offset=27)], None, None, []), [FunctionDef('a', arguments([], None, None, []), [TryExcept([Expr(Yield(None, lineno=213, col_offset=16), lineno=213, col_offset=16)], [ExceptHandler(None, None, [Pass( lineno=215, col_offset=16)], lineno=214, col_offset=12)], [], lineno=212, col_offset=12)], [Name('contextmanager', Load(), lineno=210, col_offset=9)], lineno=210, col_offset=8), FunctionDef('foo', arguments([], None, None, []), [With(Call(Name('nested', Load(), lineno=217, col_offset=17), [Call(Name('a', Load(), lineno=217, col_offset=24), [], [], None, None, lineno=217, col_offset=24), Call(Name('a', Load(), lineno=217, col_offset=29), [], [], None, None, lineno=217, col_offset=29)], [], None, None, lineno=217, col_offset=17), None, [Return(Num(1, lineno=218, col_offset=23), lineno=218, col_offset=16)], lineno=217, col_offset=17), Return(Num(10, lineno=219, col_offset=19), lineno=219, col_offset=12)], [], lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=8), 'assertEqual', Load(), lineno=220, col_offset=8), [Call(Name('foo', Load(), lineno=220, col_offset=25), [], [], None, None, lineno=220, col_offset=25), Num(1, lineno=220, col_offset=32)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8)], [], lineno=209, col_offset=4)], [], lineno=109, col_offset=0), ClassDef('ClosingTestCase', [Attribute(Name('unittest', Load(), lineno=222, col_offset=22), 'TestCase', Load(), lineno=222, col_offset=22)], [FunctionDef('test_closing', arguments([Name('self', Param(), lineno=226, col_offset=21)], None, None, []), [Assign([Name('state', Store(), lineno=227, col_offset=8)], List([], Load(), lineno=227, col_offset=16), lineno=227, col_offset=8), ClassDef('C', [], [FunctionDef('close', arguments([Name('self', Param(), lineno=229, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=230, col_offset=16), 'append', Load(), lineno=230, col_offset=16), [Num(1, lineno=230, col_offset=29)], [], None, None, lineno=230, col_offset=16), lineno=230, col_offset=16)], [], lineno=229, col_offset=12)], [], lineno=228, col_offset=8), Assign([Name('x', Store(), lineno=231, col_offset=8)], Call(Name('C', Load(), lineno=231, col_offset=12), [], [], None, None, lineno=231, col_offset=12), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertEqual', Load(), lineno=232, col_offset=8), [Name('state', Load(), lineno=232, col_offset=25), List([], Load(), lineno=232, col_offset=32)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), With(Call(Name('closing', Load(), lineno=233, col_offset=13), [Name('x', Load(), lineno=233, col_offset=21)], [], None, None, lineno=233, col_offset=13), Name('y', Store(), lineno=233, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=12), 'assertEqual', Load(), lineno=234, col_offset=12), [Name('x', Load(), lineno=234, col_offset=29), Name('y', Load(), lineno=234, col_offset=32)], [], None, None, lineno=234, col_offset=12), lineno=234, col_offset=12)], lineno=233, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertEqual', Load(), lineno=235, col_offset=8), [Name('state', Load(), lineno=235, col_offset=25), List([Num(1, lineno=235, col_offset=33)], Load(), lineno=235, col_offset=32)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8)], [], lineno=226, col_offset=4), FunctionDef('test_closing_error', arguments([Name('self', Param(), lineno=237, col_offset=27)], None, None, []), [Assign([Name('state', Store(), lineno=238, col_offset=8)], List([], Load(), lineno=238, col_offset=16), lineno=238, col_offset=8), ClassDef('C', [], [FunctionDef('close', arguments([Name('self', Param(), lineno=240, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('state', Load(), lineno=241, col_offset=16), 'append', Load(), lineno=241, col_offset=16), [Num(1, lineno=241, col_offset=29)], [], None, None, lineno=241, col_offset=16), lineno=241, col_offset=16)], [], lineno=240, col_offset=12)], [], lineno=239, col_offset=8), Assign([Name('x', Store(), lineno=242, col_offset=8)], Call(Name('C', Load(), lineno=242, col_offset=12), [], [], None, None, lineno=242, col_offset=12), lineno=242, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertEqual', Load(), lineno=243, col_offset=8), [Name('state', Load(), lineno=243, col_offset=25), List([], Load(), lineno=243, col_offset=32)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=244, col_offset=13), 'assertRaises', Load(), lineno=244, col_offset=13), [Name('ZeroDivisionError', Load(), lineno=244, col_offset=31)], [], None, None, lineno=244, col_offset=13), None, [With(Call(Name('closing', Load(), lineno=245, col_offset=17), [Name('x', Load(), lineno=245, col_offset=25)], [], None, None, lineno=245, col_offset=17), Name('y', Store(), lineno=245, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=16), 'assertEqual', Load(), lineno=246, col_offset=16), [Name('x', Load(), lineno=246, col_offset=33), Name('y', Load(), lineno=246, col_offset=36)], [], None, None, lineno=246, col_offset=16), lineno=246, col_offset=16), Expr(BinOp(Num(1, lineno=247, col_offset=16), FloorDiv(), Num(0, lineno=247, col_offset=21), lineno=247, col_offset=16), lineno=247, col_offset=16)], lineno=245, col_offset=17)], lineno=244, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'assertEqual', Load(), lineno=248, col_offset=8), [Name('state', Load(), lineno=248, col_offset=25), List([Num(1, lineno=248, col_offset=33)], Load(), lineno=248, col_offset=32)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8)], [], lineno=237, col_offset=4)], [], lineno=222, col_offset=0), ClassDef('FileContextTestCase', [Attribute(Name('unittest', Load(), lineno=250, col_offset=26), 'TestCase', Load(), lineno=250, col_offset=26)], [FunctionDef('testWithOpen', arguments([Name('self', Param(), lineno=252, col_offset=21)], None, None, []), [Assign([Name('tfn', Store(), lineno=253, col_offset=8)], Call(Attribute(Name('tempfile', Load(), lineno=253, col_offset=14), 'mktemp', Load(), lineno=253, col_offset=14), [], [], None, None, lineno=253, col_offset=14), lineno=253, col_offset=8), TryFinally([Assign([Name('f', Store(), lineno=255, col_offset=12)], Name('None', Load(), lineno=255, col_offset=16), lineno=255, col_offset=12), With(Call(Name('open', Load(), lineno=256, col_offset=17), [Name('tfn', Load(), lineno=256, col_offset=22), Str('w', lineno=256, col_offset=27)], [], None, None, lineno=256, col_offset=17), Name('f', Store(), lineno=256, col_offset=35), [Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=16), 'assertFalse', Load(), lineno=257, col_offset=16), [Attribute(Name('f', Load(), lineno=257, col_offset=33), 'closed', Load(), lineno=257, col_offset=33)], [], None, None, lineno=257, col_offset=16), lineno=257, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=258, col_offset=16), 'write', Load(), lineno=258, col_offset=16), [Str('Booh\n', lineno=258, col_offset=24)], [], None, None, lineno=258, col_offset=16), lineno=258, col_offset=16)], lineno=256, col_offset=17), Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=12), 'assertTrue', Load(), lineno=259, col_offset=12), [Attribute(Name('f', Load(), lineno=259, col_offset=28), 'closed', Load(), lineno=259, col_offset=28)], [], None, None, lineno=259, col_offset=12), lineno=259, col_offset=12), Assign([Name('f', Store(), lineno=260, col_offset=12)], Name('None', Load(), lineno=260, col_offset=16), lineno=260, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=261, col_offset=17), 'assertRaises', Load(), lineno=261, col_offset=17), [Name('ZeroDivisionError', Load(), lineno=261, col_offset=35)], [], None, None, lineno=261, col_offset=17), None, [With(Call(Name('open', Load(), lineno=262, col_offset=21), [Name('tfn', Load(), lineno=262, col_offset=26), Str('r', lineno=262, col_offset=31)], [], None, None, lineno=262, col_offset=21), Name('f', Store(), lineno=262, col_offset=39), [Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=20), 'assertFalse', Load(), lineno=263, col_offset=20), [Attribute(Name('f', Load(), lineno=263, col_offset=37), 'closed', Load(), lineno=263, col_offset=37)], [], None, None, lineno=263, col_offset=20), lineno=263, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=20), 'assertEqual', Load(), lineno=264, col_offset=20), [Call(Attribute(Name('f', Load(), lineno=264, col_offset=37), 'read', Load(), lineno=264, col_offset=37), [], [], None, None, lineno=264, col_offset=37), Str('Booh\n', lineno=264, col_offset=47)], [], None, None, lineno=264, col_offset=20), lineno=264, col_offset=20), Expr(BinOp(Num(1, lineno=265, col_offset=20), FloorDiv(), Num(0, lineno=265, col_offset=25), lineno=265, col_offset=20), lineno=265, col_offset=20)], lineno=262, col_offset=21)], lineno=261, col_offset=17), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=12), 'assertTrue', Load(), lineno=266, col_offset=12), [Attribute(Name('f', Load(), lineno=266, col_offset=28), 'closed', Load(), lineno=266, col_offset=28)], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=12)], [Expr(Call(Attribute(Name('test_support', Load(), lineno=268, col_offset=12), 'unlink', Load(), lineno=268, col_offset=12), [Name('tfn', Load(), lineno=268, col_offset=32)], [], None, None, lineno=268, col_offset=12), lineno=268, col_offset=12)], lineno=254, col_offset=8)], [], lineno=252, col_offset=4)], [], lineno=250, col_offset=0), ClassDef('LockContextTestCase', [Attribute(Name('unittest', Load(), lineno=271, col_offset=26), 'TestCase', Load(), lineno=271, col_offset=26)], [FunctionDef('boilerPlate', arguments([Name('self', Param(), lineno=273, col_offset=20), Name('lock', Param(), lineno=273, col_offset=26), Name('locked', Param(), lineno=273, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'assertFalse', Load(), lineno=274, col_offset=8), [Call(Name('locked', Load(), lineno=274, col_offset=25), [], [], None, None, lineno=274, col_offset=25)], [], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8), With(Name('lock', Load(), lineno=275, col_offset=13), None, [Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=12), 'assertTrue', Load(), lineno=276, col_offset=12), [Call(Name('locked', Load(), lineno=276, col_offset=28), [], [], None, None, lineno=276, col_offset=28)], [], None, None, lineno=276, col_offset=12), lineno=276, col_offset=12)], lineno=275, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertFalse', Load(), lineno=277, col_offset=8), [Call(Name('locked', Load(), lineno=277, col_offset=25), [], [], None, None, lineno=277, col_offset=25)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=278, col_offset=13), 'assertRaises', Load(), lineno=278, col_offset=13), [Name('ZeroDivisionError', Load(), lineno=278, col_offset=31)], [], None, None, lineno=278, col_offset=13), None, [With(Name('lock', Load(), lineno=279, col_offset=17), None, [Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=16), 'assertTrue', Load(), lineno=280, col_offset=16), [Call(Name('locked', Load(), lineno=280, col_offset=32), [], [], None, None, lineno=280, col_offset=32)], [], None, None, lineno=280, col_offset=16), lineno=280, col_offset=16), Expr(BinOp(Num(1, lineno=281, col_offset=16), FloorDiv(), Num(0, lineno=281, col_offset=21), lineno=281, col_offset=16), lineno=281, col_offset=16)], lineno=279, col_offset=17)], lineno=278, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), 'assertFalse', Load(), lineno=282, col_offset=8), [Call(Name('locked', Load(), lineno=282, col_offset=25), [], [], None, None, lineno=282, col_offset=25)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8)], [], lineno=273, col_offset=4), FunctionDef('testWithLock', arguments([Name('self', Param(), lineno=284, col_offset=21)], None, None, []), [Assign([Name('lock', Store(), lineno=285, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=285, col_offset=15), 'Lock', Load(), lineno=285, col_offset=15), [], [], None, None, lineno=285, col_offset=15), lineno=285, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=286, col_offset=8), 'boilerPlate', Load(), lineno=286, col_offset=8), [Name('lock', Load(), lineno=286, col_offset=25), Attribute(Name('lock', Load(), lineno=286, col_offset=31), 'locked', Load(), lineno=286, col_offset=31)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('testWithRLock', arguments([Name('self', Param(), lineno=288, col_offset=22)], None, None, []), [Assign([Name('lock', Store(), lineno=289, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=289, col_offset=15), 'RLock', Load(), lineno=289, col_offset=15), [], [], None, None, lineno=289, col_offset=15), lineno=289, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'boilerPlate', Load(), lineno=290, col_offset=8), [Name('lock', Load(), lineno=290, col_offset=25), Attribute(Name('lock', Load(), lineno=290, col_offset=31), '_is_owned', Load(), lineno=290, col_offset=31)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('testWithCondition', arguments([Name('self', Param(), lineno=292, col_offset=26)], None, None, []), [Assign([Name('lock', Store(), lineno=293, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=293, col_offset=15), 'Condition', Load(), lineno=293, col_offset=15), [], [], None, None, lineno=293, col_offset=15), lineno=293, col_offset=8), FunctionDef('locked', arguments([], None, None, []), [Return(Call(Attribute(Name('lock', Load(), lineno=295, col_offset=19), '_is_owned', Load(), lineno=295, col_offset=19), [], [], None, None, lineno=295, col_offset=19), lineno=295, col_offset=12)], [], lineno=294, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'boilerPlate', Load(), lineno=296, col_offset=8), [Name('lock', Load(), lineno=296, col_offset=25), Name('locked', Load(), lineno=296, col_offset=31)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=292, col_offset=4), FunctionDef('testWithSemaphore', arguments([Name('self', Param(), lineno=298, col_offset=26)], None, None, []), [Assign([Name('lock', Store(), lineno=299, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=299, col_offset=15), 'Semaphore', Load(), lineno=299, col_offset=15), [], [], None, None, lineno=299, col_offset=15), lineno=299, col_offset=8), FunctionDef('locked', arguments([], None, None, []), [If(Call(Attribute(Name('lock', Load(), lineno=301, col_offset=15), 'acquire', Load(), lineno=301, col_offset=15), [Name('False', Load(), lineno=301, col_offset=28)], [], None, None, lineno=301, col_offset=15), [Expr(Call(Attribute(Name('lock', Load(), lineno=302, col_offset=16), 'release', Load(), lineno=302, col_offset=16), [], [], None, None, lineno=302, col_offset=16), lineno=302, col_offset=16), Return(Name('False', Load(), lineno=303, col_offset=23), lineno=303, col_offset=16)], [Return(Name('True', Load(), lineno=305, col_offset=23), lineno=305, col_offset=16)], lineno=301, col_offset=12)], [], lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=8), 'boilerPlate', Load(), lineno=306, col_offset=8), [Name('lock', Load(), lineno=306, col_offset=25), Name('locked', Load(), lineno=306, col_offset=31)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8)], [], lineno=298, col_offset=4), FunctionDef('testWithBoundedSemaphore', arguments([Name('self', Param(), lineno=308, col_offset=33)], None, None, []), [Assign([Name('lock', Store(), lineno=309, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=309, col_offset=15), 'BoundedSemaphore', Load(), lineno=309, col_offset=15), [], [], None, None, lineno=309, col_offset=15), lineno=309, col_offset=8), FunctionDef('locked', arguments([], None, None, []), [If(Call(Attribute(Name('lock', Load(), lineno=311, col_offset=15), 'acquire', Load(), lineno=311, col_offset=15), [Name('False', Load(), lineno=311, col_offset=28)], [], None, None, lineno=311, col_offset=15), [Expr(Call(Attribute(Name('lock', Load(), lineno=312, col_offset=16), 'release', Load(), lineno=312, col_offset=16), [], [], None, None, lineno=312, col_offset=16), lineno=312, col_offset=16), Return(Name('False', Load(), lineno=313, col_offset=23), lineno=313, col_offset=16)], [Return(Name('True', Load(), lineno=315, col_offset=23), lineno=315, col_offset=16)], lineno=311, col_offset=12)], [], lineno=310, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), 'boilerPlate', Load(), lineno=316, col_offset=8), [Name('lock', Load(), lineno=316, col_offset=25), Name('locked', Load(), lineno=316, col_offset=31)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=308, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=270, col_offset=1), 'skipUnless', Load(), lineno=270, col_offset=1), [Name('threading', Load(), lineno=270, col_offset=21), Str('Threading required for this test.', lineno=270, col_offset=32)], [], None, None, lineno=270, col_offset=1)], lineno=270, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=320, col_offset=9), 'check_warnings', Load(), lineno=320, col_offset=9), [Tuple([Str('With-statements now directly support multiple context managers', lineno=320, col_offset=38), Name('DeprecationWarning', Load(), lineno=322, col_offset=38)], Load(), lineno=320, col_offset=38)], [], None, None, lineno=320, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=323, col_offset=8), 'run_unittest', Load(), lineno=323, col_offset=8), [Name('__name__', Load(), lineno=323, col_offset=34)], [], None, None, lineno=323, col_offset=8), lineno=323, col_offset=8)], lineno=320, col_offset=9)], [], lineno=319, col_offset=0), If(Compare(Name('__name__', Load(), lineno=325, col_offset=3), [Eq()], [Str('__main__', lineno=325, col_offset=15)], lineno=325, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=326, col_offset=4), [], [], None, None, lineno=326, col_offset=4), lineno=326, col_offset=4)], [], lineno=325, col_offset=0)])
