Module([Expr(Str('Restricted execution facilities.\n\nThe class RExec exports methods r_exec(), r_eval(), r_execfile(), and\nr_import(), which correspond roughly to the built-in operations\nexec, eval(), execfile() and import, but executing the code in an\nenvironment that only exposes those built-in operations that are\ndeemed safe.  To this end, a modest collection of \'fake\' modules is\ncreated which mimics the standard modules by the same names.  It is a\npolicy decision which built-in modules and operations are made\navailable; this module provides a reasonable default, but derived\nclasses can change the policies e.g. by overriding or extending class\nvariables like ok_builtin_modules or methods like make_sys().\n\nXXX To do:\n- r_open should allow writing tmp dir\n- r_exec etc. with explicit globals/locals? (Use rexec("exec ... in ...")?)\n\n', lineno=18, col_offset=-1), lineno=18, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=19, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=20, col_offset=0), [Str('the rexec module has been removed in Python 3.0', lineno=20, col_offset=9)], [keyword('stacklevel', Num(2, lineno=20, col_offset=71))], None, None, lineno=20, col_offset=0), lineno=20, col_offset=0), Delete([Name('warnpy3k', Del(), lineno=21, col_offset=4)], lineno=21, col_offset=0), Import([alias('sys', None)], lineno=24, col_offset=0), Import([alias('__builtin__', None)], lineno=25, col_offset=0), Import([alias('os', None)], lineno=26, col_offset=0), Import([alias('ihooks', None)], lineno=27, col_offset=0), Import([alias('imp', None)], lineno=28, col_offset=0), Assign([Name('__all__', Store(), lineno=30, col_offset=0)], List([Str('RExec', lineno=30, col_offset=11)], Load(), lineno=30, col_offset=10), lineno=30, col_offset=0), ClassDef('FileBase', [], [Assign([Name('ok_file_methods', Store(), lineno=34, col_offset=4)], Tuple([Str('fileno', lineno=34, col_offset=23), Str('flush', lineno=34, col_offset=33), Str('isatty', lineno=34, col_offset=42), Str('read', lineno=34, col_offset=52), Str('readline', lineno=34, col_offset=60), Str('readlines', lineno=35, col_offset=12), Str('seek', lineno=35, col_offset=25), Str('tell', lineno=35, col_offset=33), Str('write', lineno=35, col_offset=41), Str('writelines', lineno=35, col_offset=50), Str('xreadlines', lineno=35, col_offset=64), Str('__iter__', lineno=36, col_offset=12)], Load(), lineno=34, col_offset=23), lineno=34, col_offset=4)], [], lineno=32, col_offset=0), ClassDef('FileWrapper', [Name('FileBase', Load(), lineno=39, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=43, col_offset=17), Name('f', Param(), lineno=43, col_offset=23)], None, None, []), [For(Name('m', Store(), lineno=44, col_offset=12), Attribute(Name('self', Load(), lineno=44, col_offset=17), 'ok_file_methods', Load(), lineno=44, col_offset=17), [If(BoolOp(And(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=45, col_offset=19), [Name('self', Load(), lineno=45, col_offset=27), Name('m', Load(), lineno=45, col_offset=33)], [], None, None, lineno=45, col_offset=19), lineno=45, col_offset=15), Call(Name('hasattr', Load(), lineno=45, col_offset=40), [Name('f', Load(), lineno=45, col_offset=48), Name('m', Load(), lineno=45, col_offset=51)], [], None, None, lineno=45, col_offset=40)], lineno=45, col_offset=15), [Expr(Call(Name('setattr', Load(), lineno=46, col_offset=16), [Name('self', Load(), lineno=46, col_offset=24), Name('m', Load(), lineno=46, col_offset=30), Call(Name('getattr', Load(), lineno=46, col_offset=33), [Name('f', Load(), lineno=46, col_offset=41), Name('m', Load(), lineno=46, col_offset=44)], [], None, None, lineno=46, col_offset=33)], [], None, None, lineno=46, col_offset=16), lineno=46, col_offset=16)], [], lineno=45, col_offset=12)], [], lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=48, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'flush', Load(), lineno=49, col_offset=8), [], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=48, col_offset=4)], [], lineno=39, col_offset=0), Assign([Name('TEMPLATE', Store(), lineno=52, col_offset=0)], Str('\ndef %s(self, *args):\n        return getattr(self.mod, self.name).%s(*args)\n', lineno=55, col_offset=-1), lineno=52, col_offset=0), ClassDef('FileDelegate', [Name('FileBase', Load(), lineno=57, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=59, col_offset=17), Name('mod', Param(), lineno=59, col_offset=23), Name('name', Param(), lineno=59, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'mod', Store(), lineno=60, col_offset=8)], Name('mod', Load(), lineno=60, col_offset=19), lineno=60, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=61, col_offset=8), 'name', Store(), lineno=61, col_offset=8)], Name('name', Load(), lineno=61, col_offset=20), lineno=61, col_offset=8)], [], lineno=59, col_offset=4), For(Name('m', Store(), lineno=63, col_offset=8), BinOp(Attribute(Name('FileBase', Load(), lineno=63, col_offset=13), 'ok_file_methods', Load(), lineno=63, col_offset=13), Add(), Tuple([Str('close', lineno=63, col_offset=41)], Load(), lineno=63, col_offset=41), lineno=63, col_offset=13), [Exec(BinOp(Name('TEMPLATE', Load(), lineno=64, col_offset=13), Mod(), Tuple([Name('m', Load(), lineno=64, col_offset=25), Name('m', Load(), lineno=64, col_offset=28)], Load(), lineno=64, col_offset=25), lineno=64, col_offset=13), None, None, lineno=64, col_offset=8)], [], lineno=63, col_offset=4)], [], lineno=57, col_offset=0), ClassDef('RHooks', [Attribute(Name('ihooks', Load(), lineno=67, col_offset=13), 'Hooks', Load(), lineno=67, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=69, col_offset=17)], 'args', None, []), [Assign([Name('verbose', Store(), lineno=73, col_offset=8)], Num(0, lineno=73, col_offset=18), lineno=73, col_offset=8), Assign([Name('rexec', Store(), lineno=74, col_offset=8)], Name('None', Load(), lineno=74, col_offset=16), lineno=74, col_offset=8), If(BoolOp(And(), [Name('args', Load(), lineno=75, col_offset=11), Compare(Call(Name('type', Load(), lineno=75, col_offset=20), [Subscript(Name('args', Load(), lineno=75, col_offset=25), Index(Num(-1, lineno=75, col_offset=31)), Load(), lineno=75, col_offset=25)], [], None, None, lineno=75, col_offset=20), [Eq()], [Call(Name('type', Load(), lineno=75, col_offset=38), [Num(0, lineno=75, col_offset=43)], [], None, None, lineno=75, col_offset=38)], lineno=75, col_offset=20)], lineno=75, col_offset=11), [Assign([Name('verbose', Store(), lineno=76, col_offset=12)], Subscript(Name('args', Load(), lineno=76, col_offset=22), Index(Num(-1, lineno=76, col_offset=28)), Load(), lineno=76, col_offset=22), lineno=76, col_offset=12), Assign([Name('args', Store(), lineno=77, col_offset=12)], Subscript(Name('args', Load(), lineno=77, col_offset=19), Slice(None, Num(-1, lineno=77, col_offset=26), None), Load(), lineno=77, col_offset=19), lineno=77, col_offset=12)], [], lineno=75, col_offset=8), If(BoolOp(And(), [Name('args', Load(), lineno=78, col_offset=11), Call(Name('hasattr', Load(), lineno=78, col_offset=20), [Subscript(Name('args', Load(), lineno=78, col_offset=28), Index(Num(0, lineno=78, col_offset=33)), Load(), lineno=78, col_offset=28), Str('__class__', lineno=78, col_offset=37)], [], None, None, lineno=78, col_offset=20)], lineno=78, col_offset=11), [Assign([Name('rexec', Store(), lineno=79, col_offset=12)], Subscript(Name('args', Load(), lineno=79, col_offset=20), Index(Num(0, lineno=79, col_offset=25)), Load(), lineno=79, col_offset=20), lineno=79, col_offset=12), Assign([Name('args', Store(), lineno=80, col_offset=12)], Subscript(Name('args', Load(), lineno=80, col_offset=19), Slice(Num(1, lineno=80, col_offset=24), None, None), Load(), lineno=80, col_offset=19), lineno=80, col_offset=12)], [], lineno=78, col_offset=8), If(Name('args', Load(), lineno=81, col_offset=11), [Raise(Name('TypeError', Load(), lineno=82, col_offset=18), Str('too many arguments', lineno=82, col_offset=29), None, lineno=82, col_offset=12)], [], lineno=81, col_offset=8), Expr(Call(Attribute(Attribute(Name('ihooks', Load(), lineno=83, col_offset=8), 'Hooks', Load(), lineno=83, col_offset=8), '__init__', Load(), lineno=83, col_offset=8), [Name('self', Load(), lineno=83, col_offset=30), Name('verbose', Load(), lineno=83, col_offset=36)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=84, col_offset=8), 'rexec', Store(), lineno=84, col_offset=8)], Name('rexec', Load(), lineno=84, col_offset=21), lineno=84, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('set_rexec', arguments([Name('self', Param(), lineno=86, col_offset=18), Name('rexec', Param(), lineno=86, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=88, col_offset=8), 'rexec', Store(), lineno=88, col_offset=8)], Name('rexec', Load(), lineno=88, col_offset=21), lineno=88, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('get_suffixes', arguments([Name('self', Param(), lineno=90, col_offset=21)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=91, col_offset=15), 'rexec', Load(), lineno=91, col_offset=15), 'get_suffixes', Load(), lineno=91, col_offset=15), [], [], None, None, lineno=91, col_offset=15), lineno=91, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('is_builtin', arguments([Name('self', Param(), lineno=93, col_offset=19), Name('name', Param(), lineno=93, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=94, col_offset=15), 'rexec', Load(), lineno=94, col_offset=15), 'is_builtin', Load(), lineno=94, col_offset=15), [Name('name', Load(), lineno=94, col_offset=37)], [], None, None, lineno=94, col_offset=15), lineno=94, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('init_builtin', arguments([Name('self', Param(), lineno=96, col_offset=21), Name('name', Param(), lineno=96, col_offset=27)], None, None, []), [Assign([Name('m', Store(), lineno=97, col_offset=8)], Call(Name('__import__', Load(), lineno=97, col_offset=12), [Name('name', Load(), lineno=97, col_offset=23)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=15), 'rexec', Load(), lineno=98, col_offset=15), 'copy_except', Load(), lineno=98, col_offset=15), [Name('m', Load(), lineno=98, col_offset=38), Tuple([], Load(), lineno=98, col_offset=41)], [], None, None, lineno=98, col_offset=15), lineno=98, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('init_frozen', arguments([Name('self', Param(), lineno=100, col_offset=20), Name('name', Param(), lineno=100, col_offset=26)], None, None, []), [Raise(Name('SystemError', Load(), lineno=100, col_offset=39), Str("don't use this", lineno=100, col_offset=52), None, lineno=100, col_offset=33)], [], lineno=100, col_offset=4), FunctionDef('load_source', arguments([Name('self', Param(), lineno=101, col_offset=20)], 'args', None, []), [Raise(Name('SystemError', Load(), lineno=101, col_offset=40), Str("don't use this", lineno=101, col_offset=53), None, lineno=101, col_offset=34)], [], lineno=101, col_offset=4), FunctionDef('load_compiled', arguments([Name('self', Param(), lineno=102, col_offset=22)], 'args', None, []), [Raise(Name('SystemError', Load(), lineno=102, col_offset=42), Str("don't use this", lineno=102, col_offset=55), None, lineno=102, col_offset=36)], [], lineno=102, col_offset=4), FunctionDef('load_package', arguments([Name('self', Param(), lineno=103, col_offset=21)], 'args', None, []), [Raise(Name('SystemError', Load(), lineno=103, col_offset=41), Str("don't use this", lineno=103, col_offset=54), None, lineno=103, col_offset=35)], [], lineno=103, col_offset=4), FunctionDef('load_dynamic', arguments([Name('self', Param(), lineno=105, col_offset=21), Name('name', Param(), lineno=105, col_offset=27), Name('filename', Param(), lineno=105, col_offset=33), Name('file', Param(), lineno=105, col_offset=43)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=106, col_offset=15), 'rexec', Load(), lineno=106, col_offset=15), 'load_dynamic', Load(), lineno=106, col_offset=15), [Name('name', Load(), lineno=106, col_offset=39), Name('filename', Load(), lineno=106, col_offset=45), Name('file', Load(), lineno=106, col_offset=55)], [], None, None, lineno=106, col_offset=15), lineno=106, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('add_module', arguments([Name('self', Param(), lineno=108, col_offset=19), Name('name', Param(), lineno=108, col_offset=25)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=109, col_offset=15), 'rexec', Load(), lineno=109, col_offset=15), 'add_module', Load(), lineno=109, col_offset=15), [Name('name', Load(), lineno=109, col_offset=37)], [], None, None, lineno=109, col_offset=15), lineno=109, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('modules_dict', arguments([Name('self', Param(), lineno=111, col_offset=21)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=15), 'rexec', Load(), lineno=112, col_offset=15), 'modules', Load(), lineno=112, col_offset=15), lineno=112, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('default_path', arguments([Name('self', Param(), lineno=114, col_offset=21)], None, None, []), [Return(Attribute(Subscript(Attribute(Attribute(Name('self', Load(), lineno=115, col_offset=15), 'rexec', Load(), lineno=115, col_offset=15), 'modules', Load(), lineno=115, col_offset=15), Index(Str('sys', lineno=115, col_offset=34)), Load(), lineno=115, col_offset=15), 'path', Load(), lineno=115, col_offset=15), lineno=115, col_offset=8)], [], lineno=114, col_offset=4)], [], lineno=67, col_offset=0), Assign([Name('RModuleLoader', Store(), lineno=119, col_offset=0)], Attribute(Name('ihooks', Load(), lineno=119, col_offset=16), 'FancyModuleLoader', Load(), lineno=119, col_offset=16), lineno=119, col_offset=0), Assign([Name('RModuleImporter', Store(), lineno=120, col_offset=0)], Attribute(Name('ihooks', Load(), lineno=120, col_offset=18), 'ModuleImporter', Load(), lineno=120, col_offset=18), lineno=120, col_offset=0), ClassDef('RExec', [Attribute(Name('ihooks', Load(), lineno=123, col_offset=12), '_Verbose', Load(), lineno=123, col_offset=12)], [Expr(Str('Basic restricted execution framework.\n\n    Code executed in this restricted environment will only have access to\n    modules and functions that are deemed safe; you can subclass RExec to\n    add or remove capabilities as desired.\n\n    The RExec class can prevent code from performing unsafe operations like\n    reading or writing disk files, or using TCP/IP sockets.  However, it does\n    not protect against code using extremely large amounts of memory or\n    processor time.\n\n    ', lineno=135, col_offset=-1), lineno=135, col_offset=-1), Assign([Name('ok_path', Store(), lineno=137, col_offset=4)], Call(Name('tuple', Load(), lineno=137, col_offset=14), [Attribute(Name('sys', Load(), lineno=137, col_offset=20), 'path', Load(), lineno=137, col_offset=20)], [], None, None, lineno=137, col_offset=14), lineno=137, col_offset=4), Assign([Name('ok_builtin_modules', Store(), lineno=139, col_offset=4)], Tuple([Str('audioop', lineno=139, col_offset=26), Str('array', lineno=139, col_offset=37), Str('binascii', lineno=139, col_offset=46), Str('cmath', lineno=140, col_offset=26), Str('errno', lineno=140, col_offset=35), Str('imageop', lineno=140, col_offset=44), Str('marshal', lineno=141, col_offset=26), Str('math', lineno=141, col_offset=37), Str('md5', lineno=141, col_offset=45), Str('operator', lineno=141, col_offset=52), Str('parser', lineno=142, col_offset=26), Str('select', lineno=142, col_offset=36), Str('sha', lineno=143, col_offset=26), Str('_sre', lineno=143, col_offset=33), Str('strop', lineno=143, col_offset=41), Str('struct', lineno=143, col_offset=50), Str('time', lineno=143, col_offset=60), Str('_weakref', lineno=144, col_offset=26)], Load(), lineno=139, col_offset=26), lineno=139, col_offset=4), Assign([Name('ok_posix_names', Store(), lineno=146, col_offset=4)], Tuple([Str('error', lineno=146, col_offset=22), Str('fstat', lineno=146, col_offset=31), Str('listdir', lineno=146, col_offset=40), Str('lstat', lineno=146, col_offset=51), Str('readlink', lineno=146, col_offset=60), Str('stat', lineno=147, col_offset=22), Str('times', lineno=147, col_offset=30), Str('uname', lineno=147, col_offset=39), Str('getpid', lineno=147, col_offset=48), Str('getppid', lineno=147, col_offset=58), Str('getcwd', lineno=148, col_offset=22), Str('getuid', lineno=148, col_offset=32), Str('getgid', lineno=148, col_offset=42), Str('geteuid', lineno=148, col_offset=52), Str('getegid', lineno=148, col_offset=63)], Load(), lineno=146, col_offset=22), lineno=146, col_offset=4), Assign([Name('ok_sys_names', Store(), lineno=150, col_offset=4)], Tuple([Str('byteorder', lineno=150, col_offset=20), Str('copyright', lineno=150, col_offset=33), Str('exit', lineno=150, col_offset=46), Str('getdefaultencoding', lineno=150, col_offset=54), Str('getrefcount', lineno=151, col_offset=20), Str('hexversion', lineno=151, col_offset=35), Str('maxint', lineno=151, col_offset=49), Str('maxunicode', lineno=151, col_offset=59), Str('platform', lineno=152, col_offset=20), Str('ps1', lineno=152, col_offset=32), Str('ps2', lineno=152, col_offset=39), Str('version', lineno=152, col_offset=46), Str('version_info', lineno=152, col_offset=57)], Load(), lineno=150, col_offset=20), lineno=150, col_offset=4), Assign([Name('nok_builtin_names', Store(), lineno=154, col_offset=4)], Tuple([Str('open', lineno=154, col_offset=25), Str('file', lineno=154, col_offset=33), Str('reload', lineno=154, col_offset=41), Str('__import__', lineno=154, col_offset=51)], Load(), lineno=154, col_offset=25), lineno=154, col_offset=4), Assign([Name('ok_file_types', Store(), lineno=156, col_offset=4)], Tuple([Attribute(Name('imp', Load(), lineno=156, col_offset=21), 'C_EXTENSION', Load(), lineno=156, col_offset=21), Attribute(Name('imp', Load(), lineno=156, col_offset=38), 'PY_SOURCE', Load(), lineno=156, col_offset=38)], Load(), lineno=156, col_offset=21), lineno=156, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=158, col_offset=17), Name('hooks', Param(), lineno=158, col_offset=23), Name('verbose', Param(), lineno=158, col_offset=37)], None, None, [Name('None', Load(), lineno=158, col_offset=31), Num(0, lineno=158, col_offset=47)]), [Expr(Str("Returns an instance of the RExec class.\n\n        The hooks parameter is an instance of the RHooks class or a subclass\n        of it.  If it is omitted or None, the default RHooks class is\n        instantiated.\n\n        Whenever the RExec module searches for a module (even a built-in one)\n        or reads a module's code, it doesn't actually go out to the file\n        system itself.  Rather, it calls methods of an RHooks instance that\n        was passed to or created by its constructor.  (Actually, the RExec\n        object doesn't make these calls --- they are made by a module loader\n        object that's part of the RExec object.  This allows another level of\n        flexibility, which can be useful when changing the mechanics of\n        import within the restricted environment.)\n\n        By providing an alternate RHooks object, we can control the file\n        system accesses made to import a module, without changing the\n        actual algorithm that controls the order in which those accesses are\n        made.  For instance, we could substitute an RHooks object that\n        passes all filesystem requests to a file server elsewhere, via some\n        RPC mechanism such as ILU.  Grail's applet loader uses this to support\n        importing applets from a URL for a directory.\n\n        If the verbose parameter is true, additional debugging output may be\n        sent to standard output.\n\n        ", lineno=185, col_offset=-1), lineno=185, col_offset=-1), Raise(Name('RuntimeError', Load(), lineno=187, col_offset=14), Str('This code is not secure in Python 2.2 and later', lineno=187, col_offset=28), None, lineno=187, col_offset=8), Expr(Call(Attribute(Attribute(Name('ihooks', Load(), lineno=189, col_offset=8), '_Verbose', Load(), lineno=189, col_offset=8), '__init__', Load(), lineno=189, col_offset=8), [Name('self', Load(), lineno=189, col_offset=33), Name('verbose', Load(), lineno=189, col_offset=39)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=191, col_offset=8), 'hooks', Store(), lineno=191, col_offset=8)], BoolOp(Or(), [Name('hooks', Load(), lineno=191, col_offset=21), Call(Name('RHooks', Load(), lineno=191, col_offset=30), [Name('verbose', Load(), lineno=191, col_offset=37)], [], None, None, lineno=191, col_offset=30)], lineno=191, col_offset=21), lineno=191, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'hooks', Load(), lineno=192, col_offset=8), 'set_rexec', Load(), lineno=192, col_offset=8), [Name('self', Load(), lineno=192, col_offset=29)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=193, col_offset=8), 'modules', Store(), lineno=193, col_offset=8)], Dict([], [], lineno=193, col_offset=23), lineno=193, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=194, col_offset=8), 'ok_dynamic_modules', Store(), lineno=194, col_offset=8)], Attribute(Name('self', Load(), lineno=194, col_offset=34), 'ok_builtin_modules', Load(), lineno=194, col_offset=34), lineno=194, col_offset=8), Assign([Name('list', Store(), lineno=195, col_offset=8)], List([], Load(), lineno=195, col_offset=15), lineno=195, col_offset=8), For(Name('mname', Store(), lineno=196, col_offset=12), Attribute(Name('self', Load(), lineno=196, col_offset=21), 'ok_builtin_modules', Load(), lineno=196, col_offset=21), [If(Compare(Name('mname', Load(), lineno=197, col_offset=15), [In()], [Attribute(Name('sys', Load(), lineno=197, col_offset=24), 'builtin_module_names', Load(), lineno=197, col_offset=24)], lineno=197, col_offset=15), [Expr(Call(Attribute(Name('list', Load(), lineno=198, col_offset=16), 'append', Load(), lineno=198, col_offset=16), [Name('mname', Load(), lineno=198, col_offset=28)], [], None, None, lineno=198, col_offset=16), lineno=198, col_offset=16)], [], lineno=197, col_offset=12)], [], lineno=196, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=199, col_offset=8), 'ok_builtin_modules', Store(), lineno=199, col_offset=8)], Call(Name('tuple', Load(), lineno=199, col_offset=34), [Name('list', Load(), lineno=199, col_offset=40)], [], None, None, lineno=199, col_offset=34), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'set_trusted_path', Load(), lineno=200, col_offset=8), [], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'make_builtin', Load(), lineno=201, col_offset=8), [], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'make_initial_modules', Load(), lineno=202, col_offset=8), [], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'make_sys', Load(), lineno=205, col_offset=8), [], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=206, col_offset=8), 'loader', Store(), lineno=206, col_offset=8)], Call(Name('RModuleLoader', Load(), lineno=206, col_offset=22), [Attribute(Name('self', Load(), lineno=206, col_offset=36), 'hooks', Load(), lineno=206, col_offset=36), Name('verbose', Load(), lineno=206, col_offset=48)], [], None, None, lineno=206, col_offset=22), lineno=206, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=207, col_offset=8), 'importer', Store(), lineno=207, col_offset=8)], Call(Name('RModuleImporter', Load(), lineno=207, col_offset=24), [Attribute(Name('self', Load(), lineno=207, col_offset=40), 'loader', Load(), lineno=207, col_offset=40), Name('verbose', Load(), lineno=207, col_offset=53)], [], None, None, lineno=207, col_offset=24), lineno=207, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('set_trusted_path', arguments([Name('self', Param(), lineno=209, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=212, col_offset=8), 'trusted_path', Store(), lineno=212, col_offset=8)], Call(Name('filter', Load(), lineno=212, col_offset=28), [Attribute(Attribute(Name('os', Load(), lineno=212, col_offset=35), 'path', Load(), lineno=212, col_offset=35), 'isabs', Load(), lineno=212, col_offset=35), Attribute(Name('sys', Load(), lineno=212, col_offset=50), 'path', Load(), lineno=212, col_offset=50)], [], None, None, lineno=212, col_offset=28), lineno=212, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('load_dynamic', arguments([Name('self', Param(), lineno=214, col_offset=21), Name('name', Param(), lineno=214, col_offset=27), Name('filename', Param(), lineno=214, col_offset=33), Name('file', Param(), lineno=214, col_offset=43)], None, None, []), [If(Compare(Name('name', Load(), lineno=215, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=215, col_offset=23), 'ok_dynamic_modules', Load(), lineno=215, col_offset=23)], lineno=215, col_offset=11), [Raise(Name('ImportError', Load(), lineno=216, col_offset=18), BinOp(Str('untrusted dynamic module: %s', lineno=216, col_offset=31), Mod(), Name('name', Load(), lineno=216, col_offset=64), lineno=216, col_offset=31), None, lineno=216, col_offset=12)], [], lineno=215, col_offset=8), If(Compare(Name('name', Load(), lineno=217, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=217, col_offset=19), 'modules', Load(), lineno=217, col_offset=19)], lineno=217, col_offset=11), [Assign([Name('src', Store(), lineno=218, col_offset=12)], Subscript(Attribute(Name('sys', Load(), lineno=218, col_offset=18), 'modules', Load(), lineno=218, col_offset=18), Index(Name('name', Load(), lineno=218, col_offset=30)), Load(), lineno=218, col_offset=18), lineno=218, col_offset=12)], [Assign([Name('src', Store(), lineno=220, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=220, col_offset=18), 'load_dynamic', Load(), lineno=220, col_offset=18), [Name('name', Load(), lineno=220, col_offset=35), Name('filename', Load(), lineno=220, col_offset=41), Name('file', Load(), lineno=220, col_offset=51)], [], None, None, lineno=220, col_offset=18), lineno=220, col_offset=12)], lineno=217, col_offset=8), Assign([Name('dst', Store(), lineno=221, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=221, col_offset=14), 'copy_except', Load(), lineno=221, col_offset=14), [Name('src', Load(), lineno=221, col_offset=31), List([], Load(), lineno=221, col_offset=36)], [], None, None, lineno=221, col_offset=14), lineno=221, col_offset=8), Return(Name('dst', Load(), lineno=222, col_offset=15), lineno=222, col_offset=8)], [], lineno=214, col_offset=4), FunctionDef('make_initial_modules', arguments([Name('self', Param(), lineno=224, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'make_main', Load(), lineno=225, col_offset=8), [], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'make_osname', Load(), lineno=226, col_offset=8), [], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('get_suffixes', arguments([Name('self', Param(), lineno=230, col_offset=21)], None, None, []), [Return(ListComp(Name('item', Load(), lineno=231, col_offset=16), [comprehension(Name('item', Store(), lineno=232, col_offset=20), Call(Attribute(Name('imp', Load(), lineno=232, col_offset=28), 'get_suffixes', Load(), lineno=232, col_offset=28), [], [], None, None, lineno=232, col_offset=28), [Compare(Subscript(Name('item', Load(), lineno=233, col_offset=19), Index(Num(2, lineno=233, col_offset=24)), Load(), lineno=233, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=233, col_offset=30), 'ok_file_types', Load(), lineno=233, col_offset=30)], lineno=233, col_offset=19)])], lineno=231, col_offset=16), lineno=231, col_offset=8)], [], lineno=230, col_offset=4), FunctionDef('is_builtin', arguments([Name('self', Param(), lineno=235, col_offset=19), Name('mname', Param(), lineno=235, col_offset=25)], None, None, []), [Return(Compare(Name('mname', Load(), lineno=236, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=236, col_offset=24), 'ok_builtin_modules', Load(), lineno=236, col_offset=24)], lineno=236, col_offset=15), lineno=236, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('make_builtin', arguments([Name('self', Param(), lineno=240, col_offset=21)], None, None, []), [Assign([Name('m', Store(), lineno=241, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=241, col_offset=12), 'copy_except', Load(), lineno=241, col_offset=12), [Name('__builtin__', Load(), lineno=241, col_offset=29), Attribute(Name('self', Load(), lineno=241, col_offset=42), 'nok_builtin_names', Load(), lineno=241, col_offset=42)], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=242, col_offset=8), '__import__', Store(), lineno=242, col_offset=8)], Attribute(Name('self', Load(), lineno=242, col_offset=23), 'r_import', Load(), lineno=242, col_offset=23), lineno=242, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=243, col_offset=8), 'reload', Store(), lineno=243, col_offset=8)], Attribute(Name('self', Load(), lineno=243, col_offset=19), 'r_reload', Load(), lineno=243, col_offset=19), lineno=243, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=244, col_offset=8), 'open', Store(), lineno=244, col_offset=8), Attribute(Name('m', Load(), lineno=244, col_offset=17), 'file', Store(), lineno=244, col_offset=17)], Attribute(Name('self', Load(), lineno=244, col_offset=26), 'r_open', Load(), lineno=244, col_offset=26), lineno=244, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('make_main', arguments([Name('self', Param(), lineno=246, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'add_module', Load(), lineno=247, col_offset=8), [Str('__main__', lineno=247, col_offset=24)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8)], [], lineno=246, col_offset=4), FunctionDef('make_osname', arguments([Name('self', Param(), lineno=249, col_offset=20)], None, None, []), [Assign([Name('osname', Store(), lineno=250, col_offset=8)], Attribute(Name('os', Load(), lineno=250, col_offset=17), 'name', Load(), lineno=250, col_offset=17), lineno=250, col_offset=8), Assign([Name('src', Store(), lineno=251, col_offset=8)], Call(Name('__import__', Load(), lineno=251, col_offset=14), [Name('osname', Load(), lineno=251, col_offset=25)], [], None, None, lineno=251, col_offset=14), lineno=251, col_offset=8), Assign([Name('dst', Store(), lineno=252, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=252, col_offset=14), 'copy_only', Load(), lineno=252, col_offset=14), [Name('src', Load(), lineno=252, col_offset=29), Attribute(Name('self', Load(), lineno=252, col_offset=34), 'ok_posix_names', Load(), lineno=252, col_offset=34)], [], None, None, lineno=252, col_offset=14), lineno=252, col_offset=8), Assign([Attribute(Name('dst', Load(), lineno=253, col_offset=8), 'environ', Store(), lineno=253, col_offset=8), Name('e', Store(), lineno=253, col_offset=22)], Dict([], [], lineno=253, col_offset=26), lineno=253, col_offset=8), For(Tuple([Name('key', Store(), lineno=254, col_offset=12), Name('value', Store(), lineno=254, col_offset=17)], Store(), lineno=254, col_offset=12), Call(Attribute(Attribute(Name('os', Load(), lineno=254, col_offset=26), 'environ', Load(), lineno=254, col_offset=26), 'items', Load(), lineno=254, col_offset=26), [], [], None, None, lineno=254, col_offset=26), [Assign([Subscript(Name('e', Load(), lineno=255, col_offset=12), Index(Name('key', Load(), lineno=255, col_offset=14)), Store(), lineno=255, col_offset=12)], Name('value', Load(), lineno=255, col_offset=21), lineno=255, col_offset=12)], [], lineno=254, col_offset=8)], [], lineno=249, col_offset=4), FunctionDef('make_sys', arguments([Name('self', Param(), lineno=257, col_offset=17)], None, None, []), [Assign([Name('m', Store(), lineno=258, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=258, col_offset=12), 'copy_only', Load(), lineno=258, col_offset=12), [Name('sys', Load(), lineno=258, col_offset=27), Attribute(Name('self', Load(), lineno=258, col_offset=32), 'ok_sys_names', Load(), lineno=258, col_offset=32)], [], None, None, lineno=258, col_offset=12), lineno=258, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=259, col_offset=8), 'modules', Store(), lineno=259, col_offset=8)], Attribute(Name('self', Load(), lineno=259, col_offset=20), 'modules', Load(), lineno=259, col_offset=20), lineno=259, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=260, col_offset=8), 'argv', Store(), lineno=260, col_offset=8)], List([Str('RESTRICTED', lineno=260, col_offset=18)], Load(), lineno=260, col_offset=17), lineno=260, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=261, col_offset=8), 'path', Store(), lineno=261, col_offset=8)], Call(Name('map', Load(), lineno=261, col_offset=17), [Name('None', Load(), lineno=261, col_offset=21), Attribute(Name('self', Load(), lineno=261, col_offset=27), 'ok_path', Load(), lineno=261, col_offset=27)], [], None, None, lineno=261, col_offset=17), lineno=261, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=262, col_offset=8), 'exc_info', Store(), lineno=262, col_offset=8)], Attribute(Name('self', Load(), lineno=262, col_offset=21), 'r_exc_info', Load(), lineno=262, col_offset=21), lineno=262, col_offset=8), Assign([Name('m', Store(), lineno=263, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=263, col_offset=12), 'modules', Load(), lineno=263, col_offset=12), Index(Str('sys', lineno=263, col_offset=25)), Load(), lineno=263, col_offset=12), lineno=263, col_offset=8), Assign([Name('l', Store(), lineno=264, col_offset=8)], BinOp(Call(Attribute(Attribute(Name('self', Load(), lineno=264, col_offset=12), 'modules', Load(), lineno=264, col_offset=12), 'keys', Load(), lineno=264, col_offset=12), [], [], None, None, lineno=264, col_offset=12), Add(), Call(Name('list', Load(), lineno=264, col_offset=34), [Attribute(Name('self', Load(), lineno=264, col_offset=39), 'ok_builtin_modules', Load(), lineno=264, col_offset=39)], [], None, None, lineno=264, col_offset=34), lineno=264, col_offset=12), lineno=264, col_offset=8), Expr(Call(Attribute(Name('l', Load(), lineno=265, col_offset=8), 'sort', Load(), lineno=265, col_offset=8), [], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=266, col_offset=8), 'builtin_module_names', Store(), lineno=266, col_offset=8)], Call(Name('tuple', Load(), lineno=266, col_offset=33), [Name('l', Load(), lineno=266, col_offset=39)], [], None, None, lineno=266, col_offset=33), lineno=266, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('copy_except', arguments([Name('self', Param(), lineno=270, col_offset=20), Name('src', Param(), lineno=270, col_offset=26), Name('exceptions', Param(), lineno=270, col_offset=31)], None, None, []), [Assign([Name('dst', Store(), lineno=271, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=271, col_offset=14), 'copy_none', Load(), lineno=271, col_offset=14), [Name('src', Load(), lineno=271, col_offset=29)], [], None, None, lineno=271, col_offset=14), lineno=271, col_offset=8), For(Name('name', Store(), lineno=272, col_offset=12), Call(Name('dir', Load(), lineno=272, col_offset=20), [Name('src', Load(), lineno=272, col_offset=24)], [], None, None, lineno=272, col_offset=20), [Expr(Call(Name('setattr', Load(), lineno=273, col_offset=12), [Name('dst', Load(), lineno=273, col_offset=20), Name('name', Load(), lineno=273, col_offset=25), Call(Name('getattr', Load(), lineno=273, col_offset=31), [Name('src', Load(), lineno=273, col_offset=39), Name('name', Load(), lineno=273, col_offset=44)], [], None, None, lineno=273, col_offset=31)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12)], [], lineno=272, col_offset=8), For(Name('name', Store(), lineno=274, col_offset=12), Name('exceptions', Load(), lineno=274, col_offset=20), [TryExcept([Expr(Call(Name('delattr', Load(), lineno=276, col_offset=16), [Name('dst', Load(), lineno=276, col_offset=24), Name('name', Load(), lineno=276, col_offset=29)], [], None, None, lineno=276, col_offset=16), lineno=276, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=277, col_offset=19), None, [Pass( lineno=278, col_offset=16)], lineno=277, col_offset=12)], [], lineno=275, col_offset=12)], [], lineno=274, col_offset=8), Return(Name('dst', Load(), lineno=279, col_offset=15), lineno=279, col_offset=8)], [], lineno=270, col_offset=4), FunctionDef('copy_only', arguments([Name('self', Param(), lineno=281, col_offset=18), Name('src', Param(), lineno=281, col_offset=24), Name('names', Param(), lineno=281, col_offset=29)], None, None, []), [Assign([Name('dst', Store(), lineno=282, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=282, col_offset=14), 'copy_none', Load(), lineno=282, col_offset=14), [Name('src', Load(), lineno=282, col_offset=29)], [], None, None, lineno=282, col_offset=14), lineno=282, col_offset=8), For(Name('name', Store(), lineno=283, col_offset=12), Name('names', Load(), lineno=283, col_offset=20), [TryExcept([Assign([Name('value', Store(), lineno=285, col_offset=16)], Call(Name('getattr', Load(), lineno=285, col_offset=24), [Name('src', Load(), lineno=285, col_offset=32), Name('name', Load(), lineno=285, col_offset=37)], [], None, None, lineno=285, col_offset=24), lineno=285, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=286, col_offset=19), None, [Continue( lineno=287, col_offset=16)], lineno=286, col_offset=12)], [], lineno=284, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=288, col_offset=12), [Name('dst', Load(), lineno=288, col_offset=20), Name('name', Load(), lineno=288, col_offset=25), Name('value', Load(), lineno=288, col_offset=31)], [], None, None, lineno=288, col_offset=12), lineno=288, col_offset=12)], [], lineno=283, col_offset=8), Return(Name('dst', Load(), lineno=289, col_offset=15), lineno=289, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('copy_none', arguments([Name('self', Param(), lineno=291, col_offset=18), Name('src', Param(), lineno=291, col_offset=24)], None, None, []), [Assign([Name('m', Store(), lineno=292, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=292, col_offset=12), 'add_module', Load(), lineno=292, col_offset=12), [Attribute(Name('src', Load(), lineno=292, col_offset=28), '__name__', Load(), lineno=292, col_offset=28)], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=293, col_offset=8), '__doc__', Store(), lineno=293, col_offset=8)], Attribute(Name('src', Load(), lineno=293, col_offset=20), '__doc__', Load(), lineno=293, col_offset=20), lineno=293, col_offset=8), Return(Name('m', Load(), lineno=294, col_offset=15), lineno=294, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('add_module', arguments([Name('self', Param(), lineno=298, col_offset=19), Name('mname', Param(), lineno=298, col_offset=25)], None, None, []), [Assign([Name('m', Store(), lineno=299, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=299, col_offset=12), 'modules', Load(), lineno=299, col_offset=12), 'get', Load(), lineno=299, col_offset=12), [Name('mname', Load(), lineno=299, col_offset=29)], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=8), If(Compare(Name('m', Load(), lineno=300, col_offset=11), [Is()], [Name('None', Load(), lineno=300, col_offset=16)], lineno=300, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=301, col_offset=12), 'modules', Load(), lineno=301, col_offset=12), Index(Name('mname', Load(), lineno=301, col_offset=25)), Store(), lineno=301, col_offset=12), Name('m', Store(), lineno=301, col_offset=34)], Call(Attribute(Attribute(Name('self', Load(), lineno=301, col_offset=38), 'hooks', Load(), lineno=301, col_offset=38), 'new_module', Load(), lineno=301, col_offset=38), [Name('mname', Load(), lineno=301, col_offset=60)], [], None, None, lineno=301, col_offset=38), lineno=301, col_offset=12)], [], lineno=300, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=302, col_offset=8), '__builtins__', Store(), lineno=302, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=302, col_offset=25), 'modules', Load(), lineno=302, col_offset=25), Index(Str('__builtin__', lineno=302, col_offset=38)), Load(), lineno=302, col_offset=25), lineno=302, col_offset=8), Return(Name('m', Load(), lineno=303, col_offset=15), lineno=303, col_offset=8)], [], lineno=298, col_offset=4), FunctionDef('r_exec', arguments([Name('self', Param(), lineno=307, col_offset=15), Name('code', Param(), lineno=307, col_offset=21)], None, None, []), [Expr(Str("Execute code within a restricted environment.\n\n        The code parameter must either be a string containing one or more\n        lines of Python code, or a compiled code object, which will be\n        executed in the restricted environment's __main__ module.\n\n        ", lineno=314, col_offset=-1), lineno=314, col_offset=-1), Assign([Name('m', Store(), lineno=315, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=315, col_offset=12), 'add_module', Load(), lineno=315, col_offset=12), [Str('__main__', lineno=315, col_offset=28)], [], None, None, lineno=315, col_offset=12), lineno=315, col_offset=8), Exec(Name('code', Load(), lineno=316, col_offset=13), Attribute(Name('m', Load(), lineno=316, col_offset=21), '__dict__', Load(), lineno=316, col_offset=21), None, lineno=316, col_offset=8)], [], lineno=307, col_offset=4), FunctionDef('r_eval', arguments([Name('self', Param(), lineno=318, col_offset=15), Name('code', Param(), lineno=318, col_offset=21)], None, None, []), [Expr(Str("Evaluate code within a restricted environment.\n\n        The code parameter must either be a string containing a Python\n        expression, or a compiled code object, which will be evaluated in\n        the restricted environment's __main__ module.  The value of the\n        expression or code object will be returned.\n\n        ", lineno=326, col_offset=-1), lineno=326, col_offset=-1), Assign([Name('m', Store(), lineno=327, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=327, col_offset=12), 'add_module', Load(), lineno=327, col_offset=12), [Str('__main__', lineno=327, col_offset=28)], [], None, None, lineno=327, col_offset=12), lineno=327, col_offset=8), Return(Call(Name('eval', Load(), lineno=328, col_offset=15), [Name('code', Load(), lineno=328, col_offset=20), Attribute(Name('m', Load(), lineno=328, col_offset=26), '__dict__', Load(), lineno=328, col_offset=26)], [], None, None, lineno=328, col_offset=15), lineno=328, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('r_execfile', arguments([Name('self', Param(), lineno=330, col_offset=19), Name('file', Param(), lineno=330, col_offset=25)], None, None, []), [Expr(Str("Execute the Python code in the file in the restricted\n        environment's __main__ module.\n\n        ", lineno=334, col_offset=-1), lineno=334, col_offset=-1), Assign([Name('m', Store(), lineno=335, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=335, col_offset=12), 'add_module', Load(), lineno=335, col_offset=12), [Str('__main__', lineno=335, col_offset=28)], [], None, None, lineno=335, col_offset=12), lineno=335, col_offset=8), Expr(Call(Name('execfile', Load(), lineno=336, col_offset=8), [Name('file', Load(), lineno=336, col_offset=17), Attribute(Name('m', Load(), lineno=336, col_offset=23), '__dict__', Load(), lineno=336, col_offset=23)], [], None, None, lineno=336, col_offset=8), lineno=336, col_offset=8)], [], lineno=330, col_offset=4), FunctionDef('r_import', arguments([Name('self', Param(), lineno=338, col_offset=17), Name('mname', Param(), lineno=338, col_offset=23), Name('globals', Param(), lineno=338, col_offset=30), Name('locals', Param(), lineno=338, col_offset=42), Name('fromlist', Param(), lineno=338, col_offset=53)], None, None, [Dict([], [], lineno=338, col_offset=38), Dict([], [], lineno=338, col_offset=49), List([], Load(), lineno=338, col_offset=62)]), [Expr(Str('Import a module, raising an ImportError exception if the module\n        is considered unsafe.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        ', lineno=346, col_offset=-1), lineno=346, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=347, col_offset=15), 'importer', Load(), lineno=347, col_offset=15), 'import_module', Load(), lineno=347, col_offset=15), [Name('mname', Load(), lineno=347, col_offset=43), Name('globals', Load(), lineno=347, col_offset=50), Name('locals', Load(), lineno=347, col_offset=59), Name('fromlist', Load(), lineno=347, col_offset=67)], [], None, None, lineno=347, col_offset=15), lineno=347, col_offset=8)], [], lineno=338, col_offset=4), FunctionDef('r_reload', arguments([Name('self', Param(), lineno=349, col_offset=17), Name('m', Param(), lineno=349, col_offset=23)], None, None, []), [Expr(Str('Reload the module object, re-parsing and re-initializing it.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        ', lineno=356, col_offset=-1), lineno=356, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=357, col_offset=15), 'importer', Load(), lineno=357, col_offset=15), 'reload', Load(), lineno=357, col_offset=15), [Name('m', Load(), lineno=357, col_offset=36)], [], None, None, lineno=357, col_offset=15), lineno=357, col_offset=8)], [], lineno=349, col_offset=4), FunctionDef('r_unload', arguments([Name('self', Param(), lineno=359, col_offset=17), Name('m', Param(), lineno=359, col_offset=23)], None, None, []), [Expr(Str("Unload the module.\n\n        Removes it from the restricted environment's sys.modules dictionary.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        ", lineno=368, col_offset=-1), lineno=368, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=15), 'importer', Load(), lineno=369, col_offset=15), 'unload', Load(), lineno=369, col_offset=15), [Name('m', Load(), lineno=369, col_offset=36)], [], None, None, lineno=369, col_offset=15), lineno=369, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('make_delegate_files', arguments([Name('self', Param(), lineno=373, col_offset=28)], None, None, []), [Assign([Name('s', Store(), lineno=374, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=374, col_offset=12), 'modules', Load(), lineno=374, col_offset=12), Index(Str('sys', lineno=374, col_offset=25)), Load(), lineno=374, col_offset=12), lineno=374, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=375, col_offset=8), 'delegate_stdin', Store(), lineno=375, col_offset=8)], Call(Name('FileDelegate', Load(), lineno=375, col_offset=30), [Name('s', Load(), lineno=375, col_offset=43), Str('stdin', lineno=375, col_offset=46)], [], None, None, lineno=375, col_offset=30), lineno=375, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=376, col_offset=8), 'delegate_stdout', Store(), lineno=376, col_offset=8)], Call(Name('FileDelegate', Load(), lineno=376, col_offset=31), [Name('s', Load(), lineno=376, col_offset=44), Str('stdout', lineno=376, col_offset=47)], [], None, None, lineno=376, col_offset=31), lineno=376, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=377, col_offset=8), 'delegate_stderr', Store(), lineno=377, col_offset=8)], Call(Name('FileDelegate', Load(), lineno=377, col_offset=31), [Name('s', Load(), lineno=377, col_offset=44), Str('stderr', lineno=377, col_offset=47)], [], None, None, lineno=377, col_offset=31), lineno=377, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=378, col_offset=8), 'restricted_stdin', Store(), lineno=378, col_offset=8)], Call(Name('FileWrapper', Load(), lineno=378, col_offset=32), [Attribute(Name('sys', Load(), lineno=378, col_offset=44), 'stdin', Load(), lineno=378, col_offset=44)], [], None, None, lineno=378, col_offset=32), lineno=378, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=379, col_offset=8), 'restricted_stdout', Store(), lineno=379, col_offset=8)], Call(Name('FileWrapper', Load(), lineno=379, col_offset=33), [Attribute(Name('sys', Load(), lineno=379, col_offset=45), 'stdout', Load(), lineno=379, col_offset=45)], [], None, None, lineno=379, col_offset=33), lineno=379, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=380, col_offset=8), 'restricted_stderr', Store(), lineno=380, col_offset=8)], Call(Name('FileWrapper', Load(), lineno=380, col_offset=33), [Attribute(Name('sys', Load(), lineno=380, col_offset=45), 'stderr', Load(), lineno=380, col_offset=45)], [], None, None, lineno=380, col_offset=33), lineno=380, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('set_files', arguments([Name('self', Param(), lineno=382, col_offset=18)], None, None, []), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=383, col_offset=15), [Name('self', Load(), lineno=383, col_offset=23), Str('save_stdin', lineno=383, col_offset=29)], [], None, None, lineno=383, col_offset=15), lineno=383, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=12), 'save_files', Load(), lineno=384, col_offset=12), [], [], None, None, lineno=384, col_offset=12), lineno=384, col_offset=12)], [], lineno=383, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=385, col_offset=15), [Name('self', Load(), lineno=385, col_offset=23), Str('delegate_stdin', lineno=385, col_offset=29)], [], None, None, lineno=385, col_offset=15), lineno=385, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=12), 'make_delegate_files', Load(), lineno=386, col_offset=12), [], [], None, None, lineno=386, col_offset=12), lineno=386, col_offset=12)], [], lineno=385, col_offset=8), Assign([Name('s', Store(), lineno=387, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=387, col_offset=12), 'modules', Load(), lineno=387, col_offset=12), Index(Str('sys', lineno=387, col_offset=25)), Load(), lineno=387, col_offset=12), lineno=387, col_offset=8), Assign([Attribute(Name('s', Load(), lineno=388, col_offset=8), 'stdin', Store(), lineno=388, col_offset=8)], Attribute(Name('self', Load(), lineno=388, col_offset=18), 'restricted_stdin', Load(), lineno=388, col_offset=18), lineno=388, col_offset=8), Assign([Attribute(Name('s', Load(), lineno=389, col_offset=8), 'stdout', Store(), lineno=389, col_offset=8)], Attribute(Name('self', Load(), lineno=389, col_offset=19), 'restricted_stdout', Load(), lineno=389, col_offset=19), lineno=389, col_offset=8), Assign([Attribute(Name('s', Load(), lineno=390, col_offset=8), 'stderr', Store(), lineno=390, col_offset=8)], Attribute(Name('self', Load(), lineno=390, col_offset=19), 'restricted_stderr', Load(), lineno=390, col_offset=19), lineno=390, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=391, col_offset=8), 'stdin', Store(), lineno=391, col_offset=8)], Attribute(Name('self', Load(), lineno=391, col_offset=20), 'delegate_stdin', Load(), lineno=391, col_offset=20), lineno=391, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=392, col_offset=8), 'stdout', Store(), lineno=392, col_offset=8)], Attribute(Name('self', Load(), lineno=392, col_offset=21), 'delegate_stdout', Load(), lineno=392, col_offset=21), lineno=392, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=393, col_offset=8), 'stderr', Store(), lineno=393, col_offset=8)], Attribute(Name('self', Load(), lineno=393, col_offset=21), 'delegate_stderr', Load(), lineno=393, col_offset=21), lineno=393, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('reset_files', arguments([Name('self', Param(), lineno=395, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), 'restore_files', Load(), lineno=396, col_offset=8), [], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8), Assign([Name('s', Store(), lineno=397, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=397, col_offset=12), 'modules', Load(), lineno=397, col_offset=12), Index(Str('sys', lineno=397, col_offset=25)), Load(), lineno=397, col_offset=12), lineno=397, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=398, col_offset=8), 'restricted_stdin', Store(), lineno=398, col_offset=8)], Attribute(Name('s', Load(), lineno=398, col_offset=32), 'stdin', Load(), lineno=398, col_offset=32), lineno=398, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=399, col_offset=8), 'restricted_stdout', Store(), lineno=399, col_offset=8)], Attribute(Name('s', Load(), lineno=399, col_offset=33), 'stdout', Load(), lineno=399, col_offset=33), lineno=399, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=400, col_offset=8), 'restricted_stderr', Store(), lineno=400, col_offset=8)], Attribute(Name('s', Load(), lineno=400, col_offset=33), 'stderr', Load(), lineno=400, col_offset=33), lineno=400, col_offset=8)], [], lineno=395, col_offset=4), FunctionDef('save_files', arguments([Name('self', Param(), lineno=403, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=404, col_offset=8), 'save_stdin', Store(), lineno=404, col_offset=8)], Attribute(Name('sys', Load(), lineno=404, col_offset=26), 'stdin', Load(), lineno=404, col_offset=26), lineno=404, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=405, col_offset=8), 'save_stdout', Store(), lineno=405, col_offset=8)], Attribute(Name('sys', Load(), lineno=405, col_offset=27), 'stdout', Load(), lineno=405, col_offset=27), lineno=405, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=406, col_offset=8), 'save_stderr', Store(), lineno=406, col_offset=8)], Attribute(Name('sys', Load(), lineno=406, col_offset=27), 'stderr', Load(), lineno=406, col_offset=27), lineno=406, col_offset=8)], [], lineno=403, col_offset=4), FunctionDef('restore_files', arguments([Name('self', Param(), lineno=408, col_offset=22)], None, None, []), [Assign([Attribute(Name('sys', Load(), lineno=409, col_offset=8), 'stdin', Store(), lineno=409, col_offset=8)], Attribute(Name('self', Load(), lineno=409, col_offset=20), 'save_stdin', Load(), lineno=409, col_offset=20), lineno=409, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=410, col_offset=8), 'stdout', Store(), lineno=410, col_offset=8)], Attribute(Name('self', Load(), lineno=410, col_offset=21), 'save_stdout', Load(), lineno=410, col_offset=21), lineno=410, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=411, col_offset=8), 'stderr', Store(), lineno=411, col_offset=8)], Attribute(Name('self', Load(), lineno=411, col_offset=21), 'save_stderr', Load(), lineno=411, col_offset=21), lineno=411, col_offset=8)], [], lineno=408, col_offset=4), FunctionDef('s_apply', arguments([Name('self', Param(), lineno=413, col_offset=16), Name('func', Param(), lineno=413, col_offset=22), Name('args', Param(), lineno=413, col_offset=28), Name('kw', Param(), lineno=413, col_offset=37)], None, None, [Tuple([], Load(), lineno=413, col_offset=33), Dict([], [], lineno=413, col_offset=40)]), [Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'save_files', Load(), lineno=414, col_offset=8), [], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=12), 'set_files', Load(), lineno=416, col_offset=12), [], [], None, None, lineno=416, col_offset=12), lineno=416, col_offset=12), Assign([Name('r', Store(), lineno=417, col_offset=12)], Call(Name('func', Load(), lineno=417, col_offset=16), [], [], Name('args', Load(), lineno=417, col_offset=22), Name('kw', Load(), lineno=417, col_offset=30), lineno=417, col_offset=16), lineno=417, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=12), 'restore_files', Load(), lineno=419, col_offset=12), [], [], None, None, lineno=419, col_offset=12), lineno=419, col_offset=12)], lineno=415, col_offset=8), Return(Name('r', Load(), lineno=420, col_offset=15), lineno=420, col_offset=8)], [], lineno=413, col_offset=4), FunctionDef('s_exec', arguments([Name('self', Param(), lineno=422, col_offset=15)], 'args', None, []), [Expr(Str("Execute code within a restricted environment.\n\n        Similar to the r_exec() method, but the code will be granted access\n        to restricted versions of the standard I/O streams sys.stdin,\n        sys.stderr, and sys.stdout.\n\n        The code parameter must either be a string containing one or more\n        lines of Python code, or a compiled code object, which will be\n        executed in the restricted environment's __main__ module.\n\n        ", lineno=433, col_offset=-1), lineno=433, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=434, col_offset=15), 's_apply', Load(), lineno=434, col_offset=15), [Attribute(Name('self', Load(), lineno=434, col_offset=28), 'r_exec', Load(), lineno=434, col_offset=28), Name('args', Load(), lineno=434, col_offset=41)], [], None, None, lineno=434, col_offset=15), lineno=434, col_offset=8)], [], lineno=422, col_offset=4), FunctionDef('s_eval', arguments([Name('self', Param(), lineno=436, col_offset=15)], 'args', None, []), [Expr(Str("Evaluate code within a restricted environment.\n\n        Similar to the r_eval() method, but the code will be granted access\n        to restricted versions of the standard I/O streams sys.stdin,\n        sys.stderr, and sys.stdout.\n\n        The code parameter must either be a string containing a Python\n        expression, or a compiled code object, which will be evaluated in\n        the restricted environment's __main__ module.  The value of the\n        expression or code object will be returned.\n\n        ", lineno=448, col_offset=-1), lineno=448, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=449, col_offset=15), 's_apply', Load(), lineno=449, col_offset=15), [Attribute(Name('self', Load(), lineno=449, col_offset=28), 'r_eval', Load(), lineno=449, col_offset=28), Name('args', Load(), lineno=449, col_offset=41)], [], None, None, lineno=449, col_offset=15), lineno=449, col_offset=8)], [], lineno=436, col_offset=4), FunctionDef('s_execfile', arguments([Name('self', Param(), lineno=451, col_offset=19)], 'args', None, []), [Expr(Str("Execute the Python code in the file in the restricted\n        environment's __main__ module.\n\n        Similar to the r_execfile() method, but the code will be granted\n        access to restricted versions of the standard I/O streams sys.stdin,\n        sys.stderr, and sys.stdout.\n\n        ", lineno=459, col_offset=-1), lineno=459, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=460, col_offset=15), 's_apply', Load(), lineno=460, col_offset=15), [Attribute(Name('self', Load(), lineno=460, col_offset=28), 'r_execfile', Load(), lineno=460, col_offset=28), Name('args', Load(), lineno=460, col_offset=45)], [], None, None, lineno=460, col_offset=15), lineno=460, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('s_import', arguments([Name('self', Param(), lineno=462, col_offset=17)], 'args', None, []), [Expr(Str('Import a module, raising an ImportError exception if the module\n        is considered unsafe.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        Similar to the r_import() method, but has access to restricted\n        versions of the standard I/O streams sys.stdin, sys.stderr, and\n        sys.stdout.\n\n        ', lineno=474, col_offset=-1), lineno=474, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=475, col_offset=15), 's_apply', Load(), lineno=475, col_offset=15), [Attribute(Name('self', Load(), lineno=475, col_offset=28), 'r_import', Load(), lineno=475, col_offset=28), Name('args', Load(), lineno=475, col_offset=43)], [], None, None, lineno=475, col_offset=15), lineno=475, col_offset=8)], [], lineno=462, col_offset=4), FunctionDef('s_reload', arguments([Name('self', Param(), lineno=477, col_offset=17)], 'args', None, []), [Expr(Str('Reload the module object, re-parsing and re-initializing it.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        Similar to the r_reload() method, but has access to restricted\n        versions of the standard I/O streams sys.stdin, sys.stderr, and\n        sys.stdout.\n\n        ', lineno=488, col_offset=-1), lineno=488, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=489, col_offset=15), 's_apply', Load(), lineno=489, col_offset=15), [Attribute(Name('self', Load(), lineno=489, col_offset=28), 'r_reload', Load(), lineno=489, col_offset=28), Name('args', Load(), lineno=489, col_offset=43)], [], None, None, lineno=489, col_offset=15), lineno=489, col_offset=8)], [], lineno=477, col_offset=4), FunctionDef('s_unload', arguments([Name('self', Param(), lineno=491, col_offset=17)], 'args', None, []), [Expr(Str("Unload the module.\n\n        Removes it from the restricted environment's sys.modules dictionary.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        Similar to the r_unload() method, but has access to restricted\n        versions of the standard I/O streams sys.stdin, sys.stderr, and\n        sys.stdout.\n\n        ", lineno=504, col_offset=-1), lineno=504, col_offset=-1), Return(Call(Attribute(Name('self', Load(), lineno=505, col_offset=15), 's_apply', Load(), lineno=505, col_offset=15), [Attribute(Name('self', Load(), lineno=505, col_offset=28), 'r_unload', Load(), lineno=505, col_offset=28), Name('args', Load(), lineno=505, col_offset=43)], [], None, None, lineno=505, col_offset=15), lineno=505, col_offset=8)], [], lineno=491, col_offset=4), FunctionDef('r_open', arguments([Name('self', Param(), lineno=509, col_offset=15), Name('file', Param(), lineno=509, col_offset=21), Name('mode', Param(), lineno=509, col_offset=27), Name('buf', Param(), lineno=509, col_offset=37)], None, None, [Str('r', lineno=509, col_offset=32), Num(-1, lineno=509, col_offset=42)]), [Expr(Str("Method called when open() is called in the restricted environment.\n\n        The arguments are identical to those of the open() function, and a\n        file object (or a class instance compatible with file objects)\n        should be returned.  RExec's default behaviour is allow opening\n        any file for reading, but forbidding any attempt to write a file.\n\n        This method is implicitly called by code executing in the\n        restricted environment.  Overriding this method in a subclass is\n        used to change the policies enforced by a restricted environment.\n\n        ", lineno=521, col_offset=-1), lineno=521, col_offset=-1), Assign([Name('mode', Store(), lineno=522, col_offset=8)], Call(Name('str', Load(), lineno=522, col_offset=15), [Name('mode', Load(), lineno=522, col_offset=19)], [], None, None, lineno=522, col_offset=15), lineno=522, col_offset=8), If(Compare(Name('mode', Load(), lineno=523, col_offset=11), [NotIn()], [Tuple([Str('r', lineno=523, col_offset=24), Str('rb', lineno=523, col_offset=29)], Load(), lineno=523, col_offset=24)], lineno=523, col_offset=11), [Raise(Name('IOError', Load(), lineno=524, col_offset=18), Str("can't open files for writing in restricted mode", lineno=524, col_offset=27), None, lineno=524, col_offset=12)], [], lineno=523, col_offset=8), Return(Call(Name('open', Load(), lineno=525, col_offset=15), [Name('file', Load(), lineno=525, col_offset=20), Name('mode', Load(), lineno=525, col_offset=26), Name('buf', Load(), lineno=525, col_offset=32)], [], None, None, lineno=525, col_offset=15), lineno=525, col_offset=8)], [], lineno=509, col_offset=4), FunctionDef('r_exc_info', arguments([Name('self', Param(), lineno=529, col_offset=19)], None, None, []), [Assign([Tuple([Name('ty', Store(), lineno=530, col_offset=8), Name('va', Store(), lineno=530, col_offset=12), Name('tr', Store(), lineno=530, col_offset=16)], Store(), lineno=530, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=530, col_offset=21), 'exc_info', Load(), lineno=530, col_offset=21), [], [], None, None, lineno=530, col_offset=21), lineno=530, col_offset=8), Assign([Name('tr', Store(), lineno=531, col_offset=8)], Name('None', Load(), lineno=531, col_offset=13), lineno=531, col_offset=8), Return(Tuple([Name('ty', Load(), lineno=532, col_offset=15), Name('va', Load(), lineno=532, col_offset=19), Name('tr', Load(), lineno=532, col_offset=23)], Load(), lineno=532, col_offset=15), lineno=532, col_offset=8)], [], lineno=529, col_offset=4)], [], lineno=123, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Import([alias('getopt', None), alias('traceback', None)], lineno=536, col_offset=4), Assign([Tuple([Name('opts', Store(), lineno=537, col_offset=4), Name('args', Store(), lineno=537, col_offset=10)], Store(), lineno=537, col_offset=4)], Call(Attribute(Name('getopt', Load(), lineno=537, col_offset=17), 'getopt', Load(), lineno=537, col_offset=17), [Subscript(Attribute(Name('sys', Load(), lineno=537, col_offset=31), 'argv', Load(), lineno=537, col_offset=31), Slice(Num(1, lineno=537, col_offset=40), None, None), Load(), lineno=537, col_offset=31), Str('vt:', lineno=537, col_offset=45)], [], None, None, lineno=537, col_offset=17), lineno=537, col_offset=4), Assign([Name('verbose', Store(), lineno=538, col_offset=4)], Num(0, lineno=538, col_offset=14), lineno=538, col_offset=4), Assign([Name('trusted', Store(), lineno=539, col_offset=4)], List([], Load(), lineno=539, col_offset=14), lineno=539, col_offset=4), For(Tuple([Name('o', Store(), lineno=540, col_offset=8), Name('a', Store(), lineno=540, col_offset=11)], Store(), lineno=540, col_offset=8), Name('opts', Load(), lineno=540, col_offset=16), [If(Compare(Name('o', Load(), lineno=541, col_offset=11), [Eq()], [Str('-v', lineno=541, col_offset=16)], lineno=541, col_offset=11), [Assign([Name('verbose', Store(), lineno=542, col_offset=12)], BinOp(Name('verbose', Load(), lineno=542, col_offset=22), Add(), Num(1, lineno=542, col_offset=30), lineno=542, col_offset=22), lineno=542, col_offset=12)], [], lineno=541, col_offset=8), If(Compare(Name('o', Load(), lineno=543, col_offset=11), [Eq()], [Str('-t', lineno=543, col_offset=16)], lineno=543, col_offset=11), [Expr(Call(Attribute(Name('trusted', Load(), lineno=544, col_offset=12), 'append', Load(), lineno=544, col_offset=12), [Name('a', Load(), lineno=544, col_offset=27)], [], None, None, lineno=544, col_offset=12), lineno=544, col_offset=12)], [], lineno=543, col_offset=8)], [], lineno=540, col_offset=4), Assign([Name('r', Store(), lineno=545, col_offset=4)], Call(Name('RExec', Load(), lineno=545, col_offset=8), [], [keyword('verbose', Name('verbose', Load(), lineno=545, col_offset=22))], None, None, lineno=545, col_offset=8), lineno=545, col_offset=4), If(Name('trusted', Load(), lineno=546, col_offset=7), [Assign([Attribute(Name('r', Load(), lineno=547, col_offset=8), 'ok_builtin_modules', Store(), lineno=547, col_offset=8)], BinOp(Attribute(Name('r', Load(), lineno=547, col_offset=31), 'ok_builtin_modules', Load(), lineno=547, col_offset=31), Add(), Call(Name('tuple', Load(), lineno=547, col_offset=54), [Name('trusted', Load(), lineno=547, col_offset=60)], [], None, None, lineno=547, col_offset=54), lineno=547, col_offset=31), lineno=547, col_offset=8)], [], lineno=546, col_offset=4), If(Name('args', Load(), lineno=548, col_offset=7), [Assign([Attribute(Subscript(Attribute(Name('r', Load(), lineno=549, col_offset=8), 'modules', Load(), lineno=549, col_offset=8), Index(Str('sys', lineno=549, col_offset=18)), Load(), lineno=549, col_offset=8), 'argv', Store(), lineno=549, col_offset=8)], Name('args', Load(), lineno=549, col_offset=32), lineno=549, col_offset=8), Expr(Call(Attribute(Attribute(Subscript(Attribute(Name('r', Load(), lineno=550, col_offset=8), 'modules', Load(), lineno=550, col_offset=8), Index(Str('sys', lineno=550, col_offset=18)), Load(), lineno=550, col_offset=8), 'path', Load(), lineno=550, col_offset=8), 'insert', Load(), lineno=550, col_offset=8), [Num(0, lineno=550, col_offset=37), Call(Attribute(Attribute(Name('os', Load(), lineno=550, col_offset=40), 'path', Load(), lineno=550, col_offset=40), 'dirname', Load(), lineno=550, col_offset=40), [Subscript(Name('args', Load(), lineno=550, col_offset=56), Index(Num(0, lineno=550, col_offset=61)), Load(), lineno=550, col_offset=56)], [], None, None, lineno=550, col_offset=40)], [], None, None, lineno=550, col_offset=8), lineno=550, col_offset=8)], [Expr(Call(Attribute(Attribute(Subscript(Attribute(Name('r', Load(), lineno=552, col_offset=8), 'modules', Load(), lineno=552, col_offset=8), Index(Str('sys', lineno=552, col_offset=18)), Load(), lineno=552, col_offset=8), 'path', Load(), lineno=552, col_offset=8), 'insert', Load(), lineno=552, col_offset=8), [Num(0, lineno=552, col_offset=37), Str('', lineno=552, col_offset=40)], [], None, None, lineno=552, col_offset=8), lineno=552, col_offset=8)], lineno=548, col_offset=4), Assign([Name('fp', Store(), lineno=553, col_offset=4)], Attribute(Name('sys', Load(), lineno=553, col_offset=9), 'stdin', Load(), lineno=553, col_offset=9), lineno=553, col_offset=4), If(BoolOp(And(), [Name('args', Load(), lineno=554, col_offset=7), Compare(Subscript(Name('args', Load(), lineno=554, col_offset=16), Index(Num(0, lineno=554, col_offset=21)), Load(), lineno=554, col_offset=16), [NotEq()], [Str('-', lineno=554, col_offset=27)], lineno=554, col_offset=16)], lineno=554, col_offset=7), [TryExcept([Assign([Name('fp', Store(), lineno=556, col_offset=12)], Call(Name('open', Load(), lineno=556, col_offset=17), [Subscript(Name('args', Load(), lineno=556, col_offset=22), Index(Num(0, lineno=556, col_offset=27)), Load(), lineno=556, col_offset=22)], [], None, None, lineno=556, col_offset=17), lineno=556, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=557, col_offset=15), Name('msg', Store(), lineno=557, col_offset=24), [Print(None, [BinOp(Str("%s: can't open file %r", lineno=558, col_offset=18), Mod(), Tuple([Subscript(Attribute(Name('sys', Load(), lineno=558, col_offset=46), 'argv', Load(), lineno=558, col_offset=46), Index(Num(0, lineno=558, col_offset=55)), Load(), lineno=558, col_offset=46), Subscript(Name('args', Load(), lineno=558, col_offset=59), Index(Num(0, lineno=558, col_offset=64)), Load(), lineno=558, col_offset=59)], Load(), lineno=558, col_offset=46), lineno=558, col_offset=18)], True, lineno=558, col_offset=12), Return(Num(1, lineno=559, col_offset=19), lineno=559, col_offset=12)], lineno=557, col_offset=8)], [], lineno=555, col_offset=8)], [], lineno=554, col_offset=4), If(Call(Attribute(Name('fp', Load(), lineno=560, col_offset=7), 'isatty', Load(), lineno=560, col_offset=7), [], [], None, None, lineno=560, col_offset=7), [TryExcept([Import([alias('readline', None)], lineno=562, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=563, col_offset=15), None, [Pass( lineno=564, col_offset=12)], lineno=563, col_offset=8)], [], lineno=561, col_offset=8), Import([alias('code', None)], lineno=565, col_offset=8), ClassDef('RestrictedConsole', [Attribute(Name('code', Load(), lineno=566, col_offset=32), 'InteractiveConsole', Load(), lineno=566, col_offset=32)], [FunctionDef('runcode', arguments([Name('self', Param(), lineno=567, col_offset=24), Name('co', Param(), lineno=567, col_offset=30)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=568, col_offset=16), 'locals', Load(), lineno=568, col_offset=16), Index(Str('__builtins__', lineno=568, col_offset=28)), Store(), lineno=568, col_offset=16)], Subscript(Attribute(Name('r', Load(), lineno=568, col_offset=46), 'modules', Load(), lineno=568, col_offset=46), Index(Str('__builtin__', lineno=568, col_offset=56)), Load(), lineno=568, col_offset=46), lineno=568, col_offset=16), Expr(Call(Attribute(Name('r', Load(), lineno=569, col_offset=16), 's_apply', Load(), lineno=569, col_offset=16), [Attribute(Attribute(Name('code', Load(), lineno=569, col_offset=26), 'InteractiveConsole', Load(), lineno=569, col_offset=26), 'runcode', Load(), lineno=569, col_offset=26), Tuple([Name('self', Load(), lineno=569, col_offset=60), Name('co', Load(), lineno=569, col_offset=66)], Load(), lineno=569, col_offset=60)], [], None, None, lineno=569, col_offset=16), lineno=569, col_offset=16)], [], lineno=567, col_offset=12)], [], lineno=566, col_offset=8), TryExcept([Expr(Call(Attribute(Call(Name('RestrictedConsole', Load(), lineno=571, col_offset=12), [Attribute(Subscript(Attribute(Name('r', Load(), lineno=571, col_offset=30), 'modules', Load(), lineno=571, col_offset=30), Index(Str('__main__', lineno=571, col_offset=40)), Load(), lineno=571, col_offset=30), '__dict__', Load(), lineno=571, col_offset=30)], [], None, None, lineno=571, col_offset=12), 'interact', Load(), lineno=571, col_offset=12), [], [], None, None, lineno=571, col_offset=12), lineno=571, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=572, col_offset=15), Name('n', Store(), lineno=572, col_offset=27), [Return(Name('n', Load(), lineno=573, col_offset=19), lineno=573, col_offset=12)], lineno=572, col_offset=8)], [], lineno=570, col_offset=8)], [Assign([Name('text', Store(), lineno=575, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=575, col_offset=15), 'read', Load(), lineno=575, col_offset=15), [], [], None, None, lineno=575, col_offset=15), lineno=575, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=576, col_offset=8), 'close', Load(), lineno=576, col_offset=8), [], [], None, None, lineno=576, col_offset=8), lineno=576, col_offset=8), Assign([Name('c', Store(), lineno=577, col_offset=8)], Call(Name('compile', Load(), lineno=577, col_offset=12), [Name('text', Load(), lineno=577, col_offset=20), Attribute(Name('fp', Load(), lineno=577, col_offset=26), 'name', Load(), lineno=577, col_offset=26), Str('exec', lineno=577, col_offset=35)], [], None, None, lineno=577, col_offset=12), lineno=577, col_offset=8), TryExcept([Expr(Call(Attribute(Name('r', Load(), lineno=579, col_offset=12), 's_exec', Load(), lineno=579, col_offset=12), [Name('c', Load(), lineno=579, col_offset=21)], [], None, None, lineno=579, col_offset=12), lineno=579, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=580, col_offset=15), Name('n', Store(), lineno=580, col_offset=27), [Return(Name('n', Load(), lineno=581, col_offset=19), lineno=581, col_offset=12)], lineno=580, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('traceback', Load(), lineno=583, col_offset=12), 'print_exc', Load(), lineno=583, col_offset=12), [], [], None, None, lineno=583, col_offset=12), lineno=583, col_offset=12), Return(Num(1, lineno=584, col_offset=19), lineno=584, col_offset=12)], lineno=582, col_offset=8)], [], lineno=578, col_offset=8)], lineno=560, col_offset=4)], [], lineno=535, col_offset=0), If(Compare(Name('__name__', Load(), lineno=587, col_offset=3), [Eq()], [Str('__main__', lineno=587, col_offset=15)], lineno=587, col_offset=3), [Expr(Call(Attribute(Name('sys', Load(), lineno=588, col_offset=4), 'exit', Load(), lineno=588, col_offset=4), [Call(Name('test', Load(), lineno=588, col_offset=13), [], [], None, None, lineno=588, col_offset=13)], [], None, None, lineno=588, col_offset=4), lineno=588, col_offset=4)], [], lineno=587, col_offset=0)])
