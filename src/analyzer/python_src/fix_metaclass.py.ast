Module([Expr(Str("Fixer for __metaclass__ = X -> (metaclass=X) methods.\n\n   The various forms of classef (inherits nothing, inherits once, inherints\n   many) don't parse the same in the CST so we look at ALL classes for\n   a __metaclass__ and if we find one normalize the inherits to all be\n   an arglist.\n\n   For one-liner classes ('class X: pass') there is no indent/dedent so\n   we normalize those into having a suite.\n\n   Moving the __metaclass__ into the classdef can also cause the class\n   body to be empty so there is some special casing for that as well.\n\n   This fixer also tries very hard to keep original indenting and spacing\n   in all those corner cases.\n\n", lineno=17, col_offset=-1), lineno=17, col_offset=-1), ImportFrom(None, [alias('fixer_base', None)], 2, lineno=21, col_offset=0), ImportFrom('pygram', [alias('token', None)], 2, lineno=22, col_offset=0), ImportFrom('fixer_util', [alias('Name', None), alias('syms', None), alias('Node', None), alias('Leaf', None)], 2, lineno=23, col_offset=0), FunctionDef('has_metaclass', arguments([Name('parent', Param(), lineno=26, col_offset=18)], None, None, []), [Expr(Str(" we have to check the cls_node without changing it.\n        There are two possiblities:\n          1)  clsdef => suite => simple_stmt => expr_stmt => Leaf('__meta')\n          2)  clsdef => simple_stmt => expr_stmt => Leaf('__meta')\n    ", lineno=31, col_offset=-1), lineno=31, col_offset=-1), For(Name('node', Store(), lineno=32, col_offset=8), Attribute(Name('parent', Load(), lineno=32, col_offset=16), 'children', Load(), lineno=32, col_offset=16), [If(Compare(Attribute(Name('node', Load(), lineno=33, col_offset=11), 'type', Load(), lineno=33, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=33, col_offset=24), 'suite', Load(), lineno=33, col_offset=24)], lineno=33, col_offset=11), [Return(Call(Name('has_metaclass', Load(), lineno=34, col_offset=19), [Name('node', Load(), lineno=34, col_offset=33)], [], None, None, lineno=34, col_offset=19), lineno=34, col_offset=12)], [If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=35, col_offset=13), 'type', Load(), lineno=35, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=35, col_offset=26), 'simple_stmt', Load(), lineno=35, col_offset=26)], lineno=35, col_offset=13), Attribute(Name('node', Load(), lineno=35, col_offset=47), 'children', Load(), lineno=35, col_offset=47)], lineno=35, col_offset=13), [Assign([Name('expr_node', Store(), lineno=36, col_offset=12)], Subscript(Attribute(Name('node', Load(), lineno=36, col_offset=24), 'children', Load(), lineno=36, col_offset=24), Index(Num(0, lineno=36, col_offset=38)), Load(), lineno=36, col_offset=24), lineno=36, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('expr_node', Load(), lineno=37, col_offset=15), 'type', Load(), lineno=37, col_offset=15), [Eq()], [Attribute(Name('syms', Load(), lineno=37, col_offset=33), 'expr_stmt', Load(), lineno=37, col_offset=33)], lineno=37, col_offset=15), Attribute(Name('expr_node', Load(), lineno=37, col_offset=52), 'children', Load(), lineno=37, col_offset=52)], lineno=37, col_offset=15), [Assign([Name('left_side', Store(), lineno=38, col_offset=16)], Subscript(Attribute(Name('expr_node', Load(), lineno=38, col_offset=28), 'children', Load(), lineno=38, col_offset=28), Index(Num(0, lineno=38, col_offset=47)), Load(), lineno=38, col_offset=28), lineno=38, col_offset=16), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=39, col_offset=19), [Name('left_side', Load(), lineno=39, col_offset=30), Name('Leaf', Load(), lineno=39, col_offset=41)], [], None, None, lineno=39, col_offset=19), Compare(Attribute(Name('left_side', Load(), lineno=40, col_offset=24), 'value', Load(), lineno=40, col_offset=24), [Eq()], [Str('__metaclass__', lineno=40, col_offset=43)], lineno=40, col_offset=24)], lineno=39, col_offset=19), [Return(Name('True', Load(), lineno=41, col_offset=27), lineno=41, col_offset=20)], [], lineno=39, col_offset=16)], [], lineno=37, col_offset=12)], [], lineno=35, col_offset=13)], lineno=33, col_offset=8)], [], lineno=32, col_offset=4), Return(Name('False', Load(), lineno=42, col_offset=11), lineno=42, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('fixup_parse_tree', arguments([Name('cls_node', Param(), lineno=45, col_offset=21)], None, None, []), [Expr(Str(" one-line classes don't get a suite in the parse tree so we add\n        one to normalize the tree\n    ", lineno=48, col_offset=-1), lineno=48, col_offset=-1), For(Name('node', Store(), lineno=49, col_offset=8), Attribute(Name('cls_node', Load(), lineno=49, col_offset=16), 'children', Load(), lineno=49, col_offset=16), [If(Compare(Attribute(Name('node', Load(), lineno=50, col_offset=11), 'type', Load(), lineno=50, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=50, col_offset=24), 'suite', Load(), lineno=50, col_offset=24)], lineno=50, col_offset=11), [Return(None, lineno=52, col_offset=12)], [], lineno=50, col_offset=8)], [], lineno=49, col_offset=4), For(Tuple([Name('i', Store(), lineno=55, col_offset=8), Name('node', Store(), lineno=55, col_offset=11)], Store(), lineno=55, col_offset=8), Call(Name('enumerate', Load(), lineno=55, col_offset=19), [Attribute(Name('cls_node', Load(), lineno=55, col_offset=29), 'children', Load(), lineno=55, col_offset=29)], [], None, None, lineno=55, col_offset=19), [If(Compare(Attribute(Name('node', Load(), lineno=56, col_offset=11), 'type', Load(), lineno=56, col_offset=11), [Eq()], [Attribute(Name('token', Load(), lineno=56, col_offset=24), 'COLON', Load(), lineno=56, col_offset=24)], lineno=56, col_offset=11), [Break( lineno=57, col_offset=12)], [], lineno=56, col_offset=8)], [Raise(Call(Name('ValueError', Load(), lineno=59, col_offset=14), [Str("No class suite and no ':'!", lineno=59, col_offset=25)], [], None, None, lineno=59, col_offset=14), None, None, lineno=59, col_offset=8)], lineno=55, col_offset=4), Assign([Name('suite', Store(), lineno=62, col_offset=4)], Call(Name('Node', Load(), lineno=62, col_offset=12), [Attribute(Name('syms', Load(), lineno=62, col_offset=17), 'suite', Load(), lineno=62, col_offset=17), List([], Load(), lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=4), While(Subscript(Attribute(Name('cls_node', Load(), lineno=63, col_offset=10), 'children', Load(), lineno=63, col_offset=10), Slice(BinOp(Name('i', Load(), lineno=63, col_offset=28), Add(), Num(1, lineno=63, col_offset=30), lineno=63, col_offset=28), None, None), Load(), lineno=63, col_offset=10), [Assign([Name('move_node', Store(), lineno=64, col_offset=8)], Subscript(Attribute(Name('cls_node', Load(), lineno=64, col_offset=20), 'children', Load(), lineno=64, col_offset=20), Index(BinOp(Name('i', Load(), lineno=64, col_offset=38), Add(), Num(1, lineno=64, col_offset=40), lineno=64, col_offset=38)), Load(), lineno=64, col_offset=20), lineno=64, col_offset=8), Expr(Call(Attribute(Name('suite', Load(), lineno=65, col_offset=8), 'append_child', Load(), lineno=65, col_offset=8), [Call(Attribute(Name('move_node', Load(), lineno=65, col_offset=27), 'clone', Load(), lineno=65, col_offset=27), [], [], None, None, lineno=65, col_offset=27)], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Expr(Call(Attribute(Name('move_node', Load(), lineno=66, col_offset=8), 'remove', Load(), lineno=66, col_offset=8), [], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=63, col_offset=4), Expr(Call(Attribute(Name('cls_node', Load(), lineno=67, col_offset=4), 'append_child', Load(), lineno=67, col_offset=4), [Name('suite', Load(), lineno=67, col_offset=26)], [], None, None, lineno=67, col_offset=4), lineno=67, col_offset=4), Assign([Name('node', Store(), lineno=68, col_offset=4)], Name('suite', Load(), lineno=68, col_offset=11), lineno=68, col_offset=4)], [], lineno=45, col_offset=0), FunctionDef('fixup_simple_stmt', arguments([Name('parent', Param(), lineno=71, col_offset=22), Name('i', Param(), lineno=71, col_offset=30), Name('stmt_node', Param(), lineno=71, col_offset=33)], None, None, []), [Expr(Str(' if there is a semi-colon all the parts count as part of the same\n        simple_stmt.  We just want the __metaclass__ part so we move\n        everything efter the semi-colon into its own simple_stmt node\n    ', lineno=75, col_offset=-1), lineno=75, col_offset=-1), For(Tuple([Name('semi_ind', Store(), lineno=76, col_offset=8), Name('node', Store(), lineno=76, col_offset=18)], Store(), lineno=76, col_offset=8), Call(Name('enumerate', Load(), lineno=76, col_offset=26), [Attribute(Name('stmt_node', Load(), lineno=76, col_offset=36), 'children', Load(), lineno=76, col_offset=36)], [], None, None, lineno=76, col_offset=26), [If(Compare(Attribute(Name('node', Load(), lineno=77, col_offset=11), 'type', Load(), lineno=77, col_offset=11), [Eq()], [Attribute(Name('token', Load(), lineno=77, col_offset=24), 'SEMI', Load(), lineno=77, col_offset=24)], lineno=77, col_offset=11), [Break( lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], [Return(None, lineno=80, col_offset=8)], lineno=76, col_offset=4), Expr(Call(Attribute(Name('node', Load(), lineno=82, col_offset=4), 'remove', Load(), lineno=82, col_offset=4), [], [], None, None, lineno=82, col_offset=4), lineno=82, col_offset=4), Assign([Name('new_expr', Store(), lineno=83, col_offset=4)], Call(Name('Node', Load(), lineno=83, col_offset=15), [Attribute(Name('syms', Load(), lineno=83, col_offset=20), 'expr_stmt', Load(), lineno=83, col_offset=20), List([], Load(), lineno=83, col_offset=36)], [], None, None, lineno=83, col_offset=15), lineno=83, col_offset=4), Assign([Name('new_stmt', Store(), lineno=84, col_offset=4)], Call(Name('Node', Load(), lineno=84, col_offset=15), [Attribute(Name('syms', Load(), lineno=84, col_offset=20), 'simple_stmt', Load(), lineno=84, col_offset=20), List([Name('new_expr', Load(), lineno=84, col_offset=39)], Load(), lineno=84, col_offset=38)], [], None, None, lineno=84, col_offset=15), lineno=84, col_offset=4), While(Subscript(Attribute(Name('stmt_node', Load(), lineno=85, col_offset=10), 'children', Load(), lineno=85, col_offset=10), Slice(Name('semi_ind', Load(), lineno=85, col_offset=29), None, None), Load(), lineno=85, col_offset=10), [Assign([Name('move_node', Store(), lineno=86, col_offset=8)], Subscript(Attribute(Name('stmt_node', Load(), lineno=86, col_offset=20), 'children', Load(), lineno=86, col_offset=20), Index(Name('semi_ind', Load(), lineno=86, col_offset=39)), Load(), lineno=86, col_offset=20), lineno=86, col_offset=8), Expr(Call(Attribute(Name('new_expr', Load(), lineno=87, col_offset=8), 'append_child', Load(), lineno=87, col_offset=8), [Call(Attribute(Name('move_node', Load(), lineno=87, col_offset=30), 'clone', Load(), lineno=87, col_offset=30), [], [], None, None, lineno=87, col_offset=30)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('move_node', Load(), lineno=88, col_offset=8), 'remove', Load(), lineno=88, col_offset=8), [], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=85, col_offset=4), Expr(Call(Attribute(Name('parent', Load(), lineno=89, col_offset=4), 'insert_child', Load(), lineno=89, col_offset=4), [Name('i', Load(), lineno=89, col_offset=24), Name('new_stmt', Load(), lineno=89, col_offset=27)], [], None, None, lineno=89, col_offset=4), lineno=89, col_offset=4), Assign([Name('new_leaf1', Store(), lineno=90, col_offset=4)], Subscript(Attribute(Subscript(Attribute(Name('new_stmt', Load(), lineno=90, col_offset=16), 'children', Load(), lineno=90, col_offset=16), Index(Num(0, lineno=90, col_offset=34)), Load(), lineno=90, col_offset=16), 'children', Load(), lineno=90, col_offset=16), Index(Num(0, lineno=90, col_offset=46)), Load(), lineno=90, col_offset=16), lineno=90, col_offset=4), Assign([Name('old_leaf1', Store(), lineno=91, col_offset=4)], Subscript(Attribute(Subscript(Attribute(Name('stmt_node', Load(), lineno=91, col_offset=16), 'children', Load(), lineno=91, col_offset=16), Index(Num(0, lineno=91, col_offset=35)), Load(), lineno=91, col_offset=16), 'children', Load(), lineno=91, col_offset=16), Index(Num(0, lineno=91, col_offset=47)), Load(), lineno=91, col_offset=16), lineno=91, col_offset=4), Assign([Attribute(Name('new_leaf1', Load(), lineno=92, col_offset=4), 'prefix', Store(), lineno=92, col_offset=4)], Attribute(Name('old_leaf1', Load(), lineno=92, col_offset=23), 'prefix', Load(), lineno=92, col_offset=23), lineno=92, col_offset=4)], [], lineno=71, col_offset=0), FunctionDef('remove_trailing_newline', arguments([Name('node', Param(), lineno=95, col_offset=28)], None, None, []), [If(BoolOp(And(), [Attribute(Name('node', Load(), lineno=96, col_offset=7), 'children', Load(), lineno=96, col_offset=7), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=96, col_offset=25), 'children', Load(), lineno=96, col_offset=25), Index(Num(-1, lineno=96, col_offset=40)), Load(), lineno=96, col_offset=25), 'type', Load(), lineno=96, col_offset=25), [Eq()], [Attribute(Name('token', Load(), lineno=96, col_offset=51), 'NEWLINE', Load(), lineno=96, col_offset=51)], lineno=96, col_offset=25)], lineno=96, col_offset=7), [Expr(Call(Attribute(Subscript(Attribute(Name('node', Load(), lineno=97, col_offset=8), 'children', Load(), lineno=97, col_offset=8), Index(Num(-1, lineno=97, col_offset=23)), Load(), lineno=97, col_offset=8), 'remove', Load(), lineno=97, col_offset=8), [], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8)], [], lineno=96, col_offset=4)], [], lineno=95, col_offset=0), FunctionDef('find_metas', arguments([Name('cls_node', Param(), lineno=100, col_offset=15)], None, None, []), [For(Name('node', Store(), lineno=102, col_offset=8), Attribute(Name('cls_node', Load(), lineno=102, col_offset=16), 'children', Load(), lineno=102, col_offset=16), [If(Compare(Attribute(Name('node', Load(), lineno=103, col_offset=11), 'type', Load(), lineno=103, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=103, col_offset=24), 'suite', Load(), lineno=103, col_offset=24)], lineno=103, col_offset=11), [Break( lineno=104, col_offset=12)], [], lineno=103, col_offset=8)], [Raise(Call(Name('ValueError', Load(), lineno=106, col_offset=14), [Str('No class suite!', lineno=106, col_offset=25)], [], None, None, lineno=106, col_offset=14), None, None, lineno=106, col_offset=8)], lineno=102, col_offset=4), For(Tuple([Name('i', Store(), lineno=109, col_offset=8), Name('simple_node', Store(), lineno=109, col_offset=11)], Store(), lineno=109, col_offset=8), Call(Name('list', Load(), lineno=109, col_offset=26), [Call(Name('enumerate', Load(), lineno=109, col_offset=31), [Attribute(Name('node', Load(), lineno=109, col_offset=41), 'children', Load(), lineno=109, col_offset=41)], [], None, None, lineno=109, col_offset=31)], [], None, None, lineno=109, col_offset=26), [If(BoolOp(And(), [Compare(Attribute(Name('simple_node', Load(), lineno=110, col_offset=11), 'type', Load(), lineno=110, col_offset=11), [Eq()], [Attribute(Name('syms', Load(), lineno=110, col_offset=31), 'simple_stmt', Load(), lineno=110, col_offset=31)], lineno=110, col_offset=11), Attribute(Name('simple_node', Load(), lineno=110, col_offset=52), 'children', Load(), lineno=110, col_offset=52)], lineno=110, col_offset=11), [Assign([Name('expr_node', Store(), lineno=111, col_offset=12)], Subscript(Attribute(Name('simple_node', Load(), lineno=111, col_offset=24), 'children', Load(), lineno=111, col_offset=24), Index(Num(0, lineno=111, col_offset=45)), Load(), lineno=111, col_offset=24), lineno=111, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('expr_node', Load(), lineno=112, col_offset=15), 'type', Load(), lineno=112, col_offset=15), [Eq()], [Attribute(Name('syms', Load(), lineno=112, col_offset=33), 'expr_stmt', Load(), lineno=112, col_offset=33)], lineno=112, col_offset=15), Attribute(Name('expr_node', Load(), lineno=112, col_offset=52), 'children', Load(), lineno=112, col_offset=52)], lineno=112, col_offset=15), [Assign([Name('left_node', Store(), lineno=114, col_offset=16)], Subscript(Attribute(Name('expr_node', Load(), lineno=114, col_offset=28), 'children', Load(), lineno=114, col_offset=28), Index(Num(0, lineno=114, col_offset=47)), Load(), lineno=114, col_offset=28), lineno=114, col_offset=16), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=115, col_offset=19), [Name('left_node', Load(), lineno=115, col_offset=30), Name('Leaf', Load(), lineno=115, col_offset=41)], [], None, None, lineno=115, col_offset=19), Compare(Attribute(Name('left_node', Load(), lineno=116, col_offset=24), 'value', Load(), lineno=116, col_offset=24), [Eq()], [Str(u'__metaclass__', lineno=116, col_offset=43)], lineno=116, col_offset=24)], lineno=115, col_offset=19), [Expr(Call(Name('fixup_simple_stmt', Load(), lineno=118, col_offset=20), [Name('node', Load(), lineno=118, col_offset=38), Name('i', Load(), lineno=118, col_offset=44), Name('simple_node', Load(), lineno=118, col_offset=47)], [], None, None, lineno=118, col_offset=20), lineno=118, col_offset=20), Expr(Call(Name('remove_trailing_newline', Load(), lineno=119, col_offset=20), [Name('simple_node', Load(), lineno=119, col_offset=44)], [], None, None, lineno=119, col_offset=20), lineno=119, col_offset=20), Expr(Yield(Tuple([Name('node', Load(), lineno=120, col_offset=27), Name('i', Load(), lineno=120, col_offset=33), Name('simple_node', Load(), lineno=120, col_offset=36)], Load(), lineno=120, col_offset=27), lineno=120, col_offset=20), lineno=120, col_offset=20)], [], lineno=115, col_offset=16)], [], lineno=112, col_offset=12)], [], lineno=110, col_offset=8)], [], lineno=109, col_offset=4)], [], lineno=100, col_offset=0), FunctionDef('fixup_indent', arguments([Name('suite', Param(), lineno=123, col_offset=17)], None, None, []), [Expr(Str(' If an INDENT is followed by a thing with a prefix then nuke the prefix\n        Otherwise we get in trouble when removing __metaclass__ at suite start\n    ', lineno=126, col_offset=-1), lineno=126, col_offset=-1), Assign([Name('kids', Store(), lineno=127, col_offset=4)], Subscript(Attribute(Name('suite', Load(), lineno=127, col_offset=11), 'children', Load(), lineno=127, col_offset=11), Slice(None, None, Num(-1, lineno=127, col_offset=29)), Load(), lineno=127, col_offset=11), lineno=127, col_offset=4), While(Name('kids', Load(), lineno=129, col_offset=10), [Assign([Name('node', Store(), lineno=130, col_offset=8)], Call(Attribute(Name('kids', Load(), lineno=130, col_offset=15), 'pop', Load(), lineno=130, col_offset=15), [], [], None, None, lineno=130, col_offset=15), lineno=130, col_offset=8), If(Compare(Attribute(Name('node', Load(), lineno=131, col_offset=11), 'type', Load(), lineno=131, col_offset=11), [Eq()], [Attribute(Name('token', Load(), lineno=131, col_offset=24), 'INDENT', Load(), lineno=131, col_offset=24)], lineno=131, col_offset=11), [Break( lineno=132, col_offset=12)], [], lineno=131, col_offset=8)], [], lineno=129, col_offset=4), While(Name('kids', Load(), lineno=135, col_offset=10), [Assign([Name('node', Store(), lineno=136, col_offset=8)], Call(Attribute(Name('kids', Load(), lineno=136, col_offset=15), 'pop', Load(), lineno=136, col_offset=15), [], [], None, None, lineno=136, col_offset=15), lineno=136, col_offset=8), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=137, col_offset=11), [Name('node', Load(), lineno=137, col_offset=22), Name('Leaf', Load(), lineno=137, col_offset=28)], [], None, None, lineno=137, col_offset=11), Compare(Attribute(Name('node', Load(), lineno=137, col_offset=38), 'type', Load(), lineno=137, col_offset=38), [NotEq()], [Attribute(Name('token', Load(), lineno=137, col_offset=51), 'DEDENT', Load(), lineno=137, col_offset=51)], lineno=137, col_offset=38)], lineno=137, col_offset=11), [If(Attribute(Name('node', Load(), lineno=138, col_offset=15), 'prefix', Load(), lineno=138, col_offset=15), [Assign([Attribute(Name('node', Load(), lineno=139, col_offset=16), 'prefix', Store(), lineno=139, col_offset=16)], Str(u'', lineno=139, col_offset=30), lineno=139, col_offset=16)], [], lineno=138, col_offset=12), Return(None, lineno=140, col_offset=12)], [Expr(Call(Attribute(Name('kids', Load(), lineno=142, col_offset=12), 'extend', Load(), lineno=142, col_offset=12), [Subscript(Attribute(Name('node', Load(), lineno=142, col_offset=24), 'children', Load(), lineno=142, col_offset=24), Slice(None, None, Num(-1, lineno=142, col_offset=41)), Load(), lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=12), lineno=142, col_offset=12)], lineno=137, col_offset=8)], [], lineno=135, col_offset=4)], [], lineno=123, col_offset=0), ClassDef('FixMetaclass', [Attribute(Name('fixer_base', Load(), lineno=145, col_offset=19), 'BaseFix', Load(), lineno=145, col_offset=19)], [Assign([Name('BM_compatible', Store(), lineno=146, col_offset=4)], Name('True', Load(), lineno=146, col_offset=20), lineno=146, col_offset=4), Assign([Name('PATTERN', Store(), lineno=148, col_offset=4)], Str('\n    classdef<any*>\n    ', lineno=150, col_offset=-1), lineno=148, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=152, col_offset=18), Name('node', Param(), lineno=152, col_offset=24), Name('results', Param(), lineno=152, col_offset=30)], None, None, []), [If(UnaryOp(Not(), Call(Name('has_metaclass', Load(), lineno=153, col_offset=15), [Name('node', Load(), lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=15), lineno=153, col_offset=11), [Return(None, lineno=154, col_offset=12)], [], lineno=153, col_offset=8), Expr(Call(Name('fixup_parse_tree', Load(), lineno=156, col_offset=8), [Name('node', Load(), lineno=156, col_offset=25)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8), Assign([Name('last_metaclass', Store(), lineno=159, col_offset=8)], Name('None', Load(), lineno=159, col_offset=25), lineno=159, col_offset=8), For(Tuple([Name('suite', Store(), lineno=160, col_offset=12), Name('i', Store(), lineno=160, col_offset=19), Name('stmt', Store(), lineno=160, col_offset=22)], Store(), lineno=160, col_offset=12), Call(Name('find_metas', Load(), lineno=160, col_offset=30), [Name('node', Load(), lineno=160, col_offset=41)], [], None, None, lineno=160, col_offset=30), [Assign([Name('last_metaclass', Store(), lineno=161, col_offset=12)], Name('stmt', Load(), lineno=161, col_offset=29), lineno=161, col_offset=12), Expr(Call(Attribute(Name('stmt', Load(), lineno=162, col_offset=12), 'remove', Load(), lineno=162, col_offset=12), [], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12)], [], lineno=160, col_offset=8), Assign([Name('text_type', Store(), lineno=164, col_offset=8)], Attribute(Subscript(Attribute(Name('node', Load(), lineno=164, col_offset=20), 'children', Load(), lineno=164, col_offset=20), Index(Num(0, lineno=164, col_offset=34)), Load(), lineno=164, col_offset=20), 'type', Load(), lineno=164, col_offset=20), lineno=164, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=167, col_offset=11), [Attribute(Name('node', Load(), lineno=167, col_offset=15), 'children', Load(), lineno=167, col_offset=15)], [], None, None, lineno=167, col_offset=11), [Eq()], [Num(7, lineno=167, col_offset=33)], lineno=167, col_offset=11), [If(Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=170, col_offset=15), 'children', Load(), lineno=170, col_offset=15), Index(Num(3, lineno=170, col_offset=29)), Load(), lineno=170, col_offset=15), 'type', Load(), lineno=170, col_offset=15), [Eq()], [Attribute(Name('syms', Load(), lineno=170, col_offset=40), 'arglist', Load(), lineno=170, col_offset=40)], lineno=170, col_offset=15), [Assign([Name('arglist', Store(), lineno=171, col_offset=16)], Subscript(Attribute(Name('node', Load(), lineno=171, col_offset=26), 'children', Load(), lineno=171, col_offset=26), Index(Num(3, lineno=171, col_offset=40)), Load(), lineno=171, col_offset=26), lineno=171, col_offset=16)], [Assign([Name('parent', Store(), lineno=174, col_offset=16)], Call(Attribute(Subscript(Attribute(Name('node', Load(), lineno=174, col_offset=25), 'children', Load(), lineno=174, col_offset=25), Index(Num(3, lineno=174, col_offset=39)), Load(), lineno=174, col_offset=25), 'clone', Load(), lineno=174, col_offset=25), [], [], None, None, lineno=174, col_offset=25), lineno=174, col_offset=16), Assign([Name('arglist', Store(), lineno=175, col_offset=16)], Call(Name('Node', Load(), lineno=175, col_offset=26), [Attribute(Name('syms', Load(), lineno=175, col_offset=31), 'arglist', Load(), lineno=175, col_offset=31), List([Name('parent', Load(), lineno=175, col_offset=46)], Load(), lineno=175, col_offset=45)], [], None, None, lineno=175, col_offset=26), lineno=175, col_offset=16), Expr(Call(Attribute(Name('node', Load(), lineno=176, col_offset=16), 'set_child', Load(), lineno=176, col_offset=16), [Num(3, lineno=176, col_offset=31), Name('arglist', Load(), lineno=176, col_offset=34)], [], None, None, lineno=176, col_offset=16), lineno=176, col_offset=16)], lineno=170, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=177, col_offset=13), [Attribute(Name('node', Load(), lineno=177, col_offset=17), 'children', Load(), lineno=177, col_offset=17)], [], None, None, lineno=177, col_offset=13), [Eq()], [Num(6, lineno=177, col_offset=35)], lineno=177, col_offset=13), [Assign([Name('arglist', Store(), lineno=180, col_offset=12)], Call(Name('Node', Load(), lineno=180, col_offset=22), [Attribute(Name('syms', Load(), lineno=180, col_offset=27), 'arglist', Load(), lineno=180, col_offset=27), List([], Load(), lineno=180, col_offset=41)], [], None, None, lineno=180, col_offset=22), lineno=180, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=181, col_offset=12), 'insert_child', Load(), lineno=181, col_offset=12), [Num(3, lineno=181, col_offset=30), Name('arglist', Load(), lineno=181, col_offset=33)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=182, col_offset=13), [Attribute(Name('node', Load(), lineno=182, col_offset=17), 'children', Load(), lineno=182, col_offset=17)], [], None, None, lineno=182, col_offset=13), [Eq()], [Num(4, lineno=182, col_offset=35)], lineno=182, col_offset=13), [Assign([Name('arglist', Store(), lineno=185, col_offset=12)], Call(Name('Node', Load(), lineno=185, col_offset=22), [Attribute(Name('syms', Load(), lineno=185, col_offset=27), 'arglist', Load(), lineno=185, col_offset=27), List([], Load(), lineno=185, col_offset=41)], [], None, None, lineno=185, col_offset=22), lineno=185, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=186, col_offset=12), 'insert_child', Load(), lineno=186, col_offset=12), [Num(2, lineno=186, col_offset=30), Call(Name('Leaf', Load(), lineno=186, col_offset=33), [Attribute(Name('token', Load(), lineno=186, col_offset=38), 'RPAR', Load(), lineno=186, col_offset=38), Str(u')', lineno=186, col_offset=50)], [], None, None, lineno=186, col_offset=33)], [], None, None, lineno=186, col_offset=12), lineno=186, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=187, col_offset=12), 'insert_child', Load(), lineno=187, col_offset=12), [Num(2, lineno=187, col_offset=30), Name('arglist', Load(), lineno=187, col_offset=33)], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=188, col_offset=12), 'insert_child', Load(), lineno=188, col_offset=12), [Num(2, lineno=188, col_offset=30), Call(Name('Leaf', Load(), lineno=188, col_offset=33), [Attribute(Name('token', Load(), lineno=188, col_offset=38), 'LPAR', Load(), lineno=188, col_offset=38), Str(u'(', lineno=188, col_offset=50)], [], None, None, lineno=188, col_offset=33)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [Raise(Call(Name('ValueError', Load(), lineno=190, col_offset=18), [Str('Unexpected class definition', lineno=190, col_offset=29)], [], None, None, lineno=190, col_offset=18), None, None, lineno=190, col_offset=12)], lineno=182, col_offset=13)], lineno=177, col_offset=13)], lineno=167, col_offset=8), Assign([Name('meta_txt', Store(), lineno=193, col_offset=8)], Subscript(Attribute(Subscript(Attribute(Name('last_metaclass', Load(), lineno=193, col_offset=19), 'children', Load(), lineno=193, col_offset=19), Index(Num(0, lineno=193, col_offset=43)), Load(), lineno=193, col_offset=19), 'children', Load(), lineno=193, col_offset=19), Index(Num(0, lineno=193, col_offset=55)), Load(), lineno=193, col_offset=19), lineno=193, col_offset=8), Assign([Attribute(Name('meta_txt', Load(), lineno=194, col_offset=8), 'value', Store(), lineno=194, col_offset=8)], Str('metaclass', lineno=194, col_offset=25), lineno=194, col_offset=8), Assign([Name('orig_meta_prefix', Store(), lineno=195, col_offset=8)], Attribute(Name('meta_txt', Load(), lineno=195, col_offset=27), 'prefix', Load(), lineno=195, col_offset=27), lineno=195, col_offset=8), If(Attribute(Name('arglist', Load(), lineno=197, col_offset=11), 'children', Load(), lineno=197, col_offset=11), [Expr(Call(Attribute(Name('arglist', Load(), lineno=198, col_offset=12), 'append_child', Load(), lineno=198, col_offset=12), [Call(Name('Leaf', Load(), lineno=198, col_offset=33), [Attribute(Name('token', Load(), lineno=198, col_offset=38), 'COMMA', Load(), lineno=198, col_offset=38), Str(u',', lineno=198, col_offset=51)], [], None, None, lineno=198, col_offset=33)], [], None, None, lineno=198, col_offset=12), lineno=198, col_offset=12), Assign([Attribute(Name('meta_txt', Load(), lineno=199, col_offset=12), 'prefix', Store(), lineno=199, col_offset=12)], Str(u' ', lineno=199, col_offset=30), lineno=199, col_offset=12)], [Assign([Attribute(Name('meta_txt', Load(), lineno=201, col_offset=12), 'prefix', Store(), lineno=201, col_offset=12)], Str(u'', lineno=201, col_offset=30), lineno=201, col_offset=12)], lineno=197, col_offset=8), Assign([Name('expr_stmt', Store(), lineno=204, col_offset=8)], Subscript(Attribute(Name('last_metaclass', Load(), lineno=204, col_offset=20), 'children', Load(), lineno=204, col_offset=20), Index(Num(0, lineno=204, col_offset=44)), Load(), lineno=204, col_offset=20), lineno=204, col_offset=8), Assert(Compare(Attribute(Name('expr_stmt', Load(), lineno=205, col_offset=15), 'type', Load(), lineno=205, col_offset=15), [Eq()], [Attribute(Name('syms', Load(), lineno=205, col_offset=33), 'expr_stmt', Load(), lineno=205, col_offset=33)], lineno=205, col_offset=15), None, lineno=205, col_offset=8), Assign([Attribute(Subscript(Attribute(Name('expr_stmt', Load(), lineno=206, col_offset=8), 'children', Load(), lineno=206, col_offset=8), Index(Num(1, lineno=206, col_offset=27)), Load(), lineno=206, col_offset=8), 'prefix', Store(), lineno=206, col_offset=8)], Str(u'', lineno=206, col_offset=39), lineno=206, col_offset=8), Assign([Attribute(Subscript(Attribute(Name('expr_stmt', Load(), lineno=207, col_offset=8), 'children', Load(), lineno=207, col_offset=8), Index(Num(2, lineno=207, col_offset=27)), Load(), lineno=207, col_offset=8), 'prefix', Store(), lineno=207, col_offset=8)], Str(u'', lineno=207, col_offset=39), lineno=207, col_offset=8), Expr(Call(Attribute(Name('arglist', Load(), lineno=209, col_offset=8), 'append_child', Load(), lineno=209, col_offset=8), [Name('last_metaclass', Load(), lineno=209, col_offset=29)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Name('fixup_indent', Load(), lineno=211, col_offset=8), [Name('suite', Load(), lineno=211, col_offset=21)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), If(UnaryOp(Not(), Attribute(Name('suite', Load(), lineno=214, col_offset=15), 'children', Load(), lineno=214, col_offset=15), lineno=214, col_offset=11), [Expr(Call(Attribute(Name('suite', Load(), lineno=216, col_offset=12), 'remove', Load(), lineno=216, col_offset=12), [], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12), Assign([Name('pass_leaf', Store(), lineno=217, col_offset=12)], Call(Name('Leaf', Load(), lineno=217, col_offset=24), [Name('text_type', Load(), lineno=217, col_offset=29), Str(u'pass', lineno=217, col_offset=40)], [], None, None, lineno=217, col_offset=24), lineno=217, col_offset=12), Assign([Attribute(Name('pass_leaf', Load(), lineno=218, col_offset=12), 'prefix', Store(), lineno=218, col_offset=12)], Name('orig_meta_prefix', Load(), lineno=218, col_offset=31), lineno=218, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=219, col_offset=12), 'append_child', Load(), lineno=219, col_offset=12), [Name('pass_leaf', Load(), lineno=219, col_offset=30)], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=12), Expr(Call(Attribute(Name('node', Load(), lineno=220, col_offset=12), 'append_child', Load(), lineno=220, col_offset=12), [Call(Name('Leaf', Load(), lineno=220, col_offset=30), [Attribute(Name('token', Load(), lineno=220, col_offset=35), 'NEWLINE', Load(), lineno=220, col_offset=35), Str(u'\n', lineno=220, col_offset=50)], [], None, None, lineno=220, col_offset=30)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=222, col_offset=13), [Attribute(Name('suite', Load(), lineno=222, col_offset=17), 'children', Load(), lineno=222, col_offset=17)], [], None, None, lineno=222, col_offset=13), [Gt()], [Num(1, lineno=222, col_offset=35)], lineno=222, col_offset=13), BoolOp(And(), [Compare(Attribute(Subscript(Attribute(Name('suite', Load(), lineno=223, col_offset=18), 'children', Load(), lineno=223, col_offset=18), Index(Num(-2, lineno=223, col_offset=34)), Load(), lineno=223, col_offset=18), 'type', Load(), lineno=223, col_offset=18), [Eq()], [Attribute(Name('token', Load(), lineno=223, col_offset=45), 'INDENT', Load(), lineno=223, col_offset=45)], lineno=223, col_offset=18), Compare(Attribute(Subscript(Attribute(Name('suite', Load(), lineno=224, col_offset=18), 'children', Load(), lineno=224, col_offset=18), Index(Num(-1, lineno=224, col_offset=34)), Load(), lineno=224, col_offset=18), 'type', Load(), lineno=224, col_offset=18), [Eq()], [Attribute(Name('token', Load(), lineno=224, col_offset=45), 'DEDENT', Load(), lineno=224, col_offset=45)], lineno=224, col_offset=18)], lineno=223, col_offset=18)], lineno=222, col_offset=13), [Assign([Name('pass_leaf', Store(), lineno=226, col_offset=12)], Call(Name('Leaf', Load(), lineno=226, col_offset=24), [Name('text_type', Load(), lineno=226, col_offset=29), Str(u'pass', lineno=226, col_offset=40)], [], None, None, lineno=226, col_offset=24), lineno=226, col_offset=12), Expr(Call(Attribute(Name('suite', Load(), lineno=227, col_offset=12), 'insert_child', Load(), lineno=227, col_offset=12), [Num(-1, lineno=227, col_offset=32), Name('pass_leaf', Load(), lineno=227, col_offset=35)], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12), Expr(Call(Attribute(Name('suite', Load(), lineno=228, col_offset=12), 'insert_child', Load(), lineno=228, col_offset=12), [Num(-1, lineno=228, col_offset=32), Call(Name('Leaf', Load(), lineno=228, col_offset=35), [Attribute(Name('token', Load(), lineno=228, col_offset=40), 'NEWLINE', Load(), lineno=228, col_offset=40), Str(u'\n', lineno=228, col_offset=55)], [], None, None, lineno=228, col_offset=35)], [], None, None, lineno=228, col_offset=12), lineno=228, col_offset=12)], [], lineno=222, col_offset=13)], lineno=214, col_offset=8)], [], lineno=152, col_offset=4)], [], lineno=145, col_offset=0)])
