Module([Import([alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Import([alias('socket', None)], lineno=6, col_offset=0), Import([alias('urllib', None)], lineno=7, col_offset=0), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('os', None)], lineno=9, col_offset=0), Import([alias('time', None)], lineno=10, col_offset=0), Assign([Name('mimetools', Store(), lineno=12, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=12, col_offset=12), 'import_module', Load(), lineno=12, col_offset=12), [Str('mimetools', lineno=12, col_offset=39)], [keyword('deprecated', Name('True', Load(), lineno=12, col_offset=63))], None, None, lineno=12, col_offset=12), lineno=12, col_offset=0), FunctionDef('_open_with_retry', arguments([Name('func', Param(), lineno=15, col_offset=21), Name('host', Param(), lineno=15, col_offset=27)], 'args', 'kwargs', []), [For(Name('i', Store(), lineno=18, col_offset=8), Call(Name('range', Load(), lineno=18, col_offset=13), [Num(3, lineno=18, col_offset=19)], [], None, None, lineno=18, col_offset=13), [TryExcept([Return(Call(Name('func', Load(), lineno=20, col_offset=19), [Name('host', Load(), lineno=20, col_offset=24)], [], Name('args', Load(), lineno=20, col_offset=31), Name('kwargs', Load(), lineno=20, col_offset=39), lineno=20, col_offset=19), lineno=20, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=21, col_offset=15), Name('last_exc', Store(), lineno=21, col_offset=24), [Continue( lineno=22, col_offset=12)], lineno=21, col_offset=8), ExceptHandler(None, None, [Raise(None, None, None, lineno=24, col_offset=12)], lineno=23, col_offset=8)], [], lineno=19, col_offset=8)], [], lineno=18, col_offset=4), Raise(Name('last_exc', Load(), lineno=25, col_offset=10), None, None, lineno=25, col_offset=4)], [], lineno=15, col_offset=0), ClassDef('URLTimeoutTest', [Attribute(Name('unittest', Load(), lineno=28, col_offset=21), 'TestCase', Load(), lineno=28, col_offset=21)], [Assign([Name('TIMEOUT', Store(), lineno=30, col_offset=4)], Num(10.0, lineno=30, col_offset=14), lineno=30, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=32, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('socket', Load(), lineno=33, col_offset=8), 'setdefaulttimeout', Load(), lineno=33, col_offset=8), [Attribute(Name('self', Load(), lineno=33, col_offset=33), 'TIMEOUT', Load(), lineno=33, col_offset=33)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=35, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('socket', Load(), lineno=36, col_offset=8), 'setdefaulttimeout', Load(), lineno=36, col_offset=8), [Name('None', Load(), lineno=36, col_offset=33)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('testURLread', arguments([Name('self', Param(), lineno=38, col_offset=20)], None, None, []), [Assign([Name('f', Store(), lineno=39, col_offset=8)], Call(Name('_open_with_retry', Load(), lineno=39, col_offset=12), [Attribute(Name('urllib', Load(), lineno=39, col_offset=29), 'urlopen', Load(), lineno=39, col_offset=29), Str('http://www.python.org/', lineno=39, col_offset=45)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=8), Assign([Name('x', Store(), lineno=40, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=40, col_offset=12), 'read', Load(), lineno=40, col_offset=12), [], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=8)], [], lineno=38, col_offset=4)], [], lineno=28, col_offset=0), ClassDef('urlopenNetworkTests', [Attribute(Name('unittest', Load(), lineno=42, col_offset=26), 'TestCase', Load(), lineno=42, col_offset=26)], [Expr(Str("Tests urllib.urlopen using the network.\n\n    These tests are not exhaustive.  Assuming that testing using files does a\n    good job overall of some of the basic interface features.  There are no\n    tests exercising the optional 'data' and 'proxies' arguments.  No tests\n    for transparent redirection have been written.\n\n    setUp is not used for always constructing a connection to\n    http://www.python.org/ since there a few tests that don't use that address\n    and making a connection is expensive enough to warrant minimizing unneeded\n    connections.\n\n    ", lineno=55, col_offset=-1), lineno=55, col_offset=-1), FunctionDef('urlopen', arguments([Name('self', Param(), lineno=57, col_offset=16)], 'args', None, []), [Return(Call(Name('_open_with_retry', Load(), lineno=58, col_offset=15), [Attribute(Name('urllib', Load(), lineno=58, col_offset=32), 'urlopen', Load(), lineno=58, col_offset=32)], [], Name('args', Load(), lineno=58, col_offset=49), None, lineno=58, col_offset=15), lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=60, col_offset=19)], None, None, []), [Assign([Name('open_url', Store(), lineno=62, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=62, col_offset=19), 'urlopen', Load(), lineno=62, col_offset=19), [Str('http://www.python.org/', lineno=62, col_offset=32)], [], None, None, lineno=62, col_offset=19), lineno=62, col_offset=8), For(Name('attr', Store(), lineno=63, col_offset=12), Tuple([Str('read', lineno=63, col_offset=21), Str('readline', lineno=63, col_offset=29), Str('readlines', lineno=63, col_offset=41), Str('fileno', lineno=63, col_offset=54), Str('close', lineno=63, col_offset=64), Str('info', lineno=64, col_offset=21), Str('geturl', lineno=64, col_offset=29)], Load(), lineno=63, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=12), 'assertTrue', Load(), lineno=65, col_offset=12), [Call(Name('hasattr', Load(), lineno=65, col_offset=28), [Name('open_url', Load(), lineno=65, col_offset=36), Name('attr', Load(), lineno=65, col_offset=46)], [], None, None, lineno=65, col_offset=28), BinOp(Str('object returned from urlopen lacks the %s attribute', lineno=65, col_offset=53), Mod(), Name('attr', Load(), lineno=66, col_offset=63), lineno=65, col_offset=53)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12)], [], lineno=63, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=12), 'assertTrue', Load(), lineno=68, col_offset=12), [Call(Attribute(Name('open_url', Load(), lineno=68, col_offset=28), 'read', Load(), lineno=68, col_offset=28), [], [], None, None, lineno=68, col_offset=28), Str("calling 'read' failed", lineno=68, col_offset=45)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12)], [Expr(Call(Attribute(Name('open_url', Load(), lineno=70, col_offset=12), 'close', Load(), lineno=70, col_offset=12), [], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=12)], lineno=67, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('test_readlines', arguments([Name('self', Param(), lineno=72, col_offset=23)], None, None, []), [Assign([Name('open_url', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=74, col_offset=19), 'urlopen', Load(), lineno=74, col_offset=19), [Str('http://www.python.org/', lineno=74, col_offset=32)], [], None, None, lineno=74, col_offset=19), lineno=74, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=12), 'assertIsInstance', Load(), lineno=76, col_offset=12), [Call(Attribute(Name('open_url', Load(), lineno=76, col_offset=34), 'readline', Load(), lineno=76, col_offset=34), [], [], None, None, lineno=76, col_offset=34), Name('basestring', Load(), lineno=76, col_offset=55), Str('readline did not return a string', lineno=77, col_offset=34)], [], None, None, lineno=76, col_offset=12), lineno=76, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), 'assertIsInstance', Load(), lineno=78, col_offset=12), [Call(Attribute(Name('open_url', Load(), lineno=78, col_offset=34), 'readlines', Load(), lineno=78, col_offset=34), [], [], None, None, lineno=78, col_offset=34), Name('list', Load(), lineno=78, col_offset=56), Str('readlines did not return a list', lineno=79, col_offset=34)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [Expr(Call(Attribute(Name('open_url', Load(), lineno=81, col_offset=12), 'close', Load(), lineno=81, col_offset=12), [], [], None, None, lineno=81, col_offset=12), lineno=81, col_offset=12)], lineno=75, col_offset=8)], [], lineno=72, col_offset=4), FunctionDef('test_info', arguments([Name('self', Param(), lineno=83, col_offset=18)], None, None, []), [Assign([Name('open_url', Store(), lineno=85, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=85, col_offset=19), 'urlopen', Load(), lineno=85, col_offset=19), [Str('http://www.python.org/', lineno=85, col_offset=32)], [], None, None, lineno=85, col_offset=19), lineno=85, col_offset=8), TryFinally([Assign([Name('info_obj', Store(), lineno=87, col_offset=12)], Call(Attribute(Name('open_url', Load(), lineno=87, col_offset=23), 'info', Load(), lineno=87, col_offset=23), [], [], None, None, lineno=87, col_offset=23), lineno=87, col_offset=12)], [Expr(Call(Attribute(Name('open_url', Load(), lineno=89, col_offset=12), 'close', Load(), lineno=89, col_offset=12), [], [], None, None, lineno=89, col_offset=12), lineno=89, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=12), 'assertIsInstance', Load(), lineno=90, col_offset=12), [Name('info_obj', Load(), lineno=90, col_offset=34), Attribute(Name('mimetools', Load(), lineno=90, col_offset=44), 'Message', Load(), lineno=90, col_offset=44), Str("object returned by 'info' is not an instance of mimetools.Message", lineno=91, col_offset=34)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=12), 'assertEqual', Load(), lineno=93, col_offset=12), [Call(Attribute(Name('info_obj', Load(), lineno=93, col_offset=29), 'getsubtype', Load(), lineno=93, col_offset=29), [], [], None, None, lineno=93, col_offset=29), Str('html', lineno=93, col_offset=52)], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=12)], lineno=86, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('test_geturl', arguments([Name('self', Param(), lineno=95, col_offset=20)], None, None, []), [Assign([Name('URL', Store(), lineno=97, col_offset=8)], Str('http://www.python.org/', lineno=97, col_offset=14), lineno=97, col_offset=8), Assign([Name('open_url', Store(), lineno=98, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=98, col_offset=19), 'urlopen', Load(), lineno=98, col_offset=19), [Name('URL', Load(), lineno=98, col_offset=32)], [], None, None, lineno=98, col_offset=19), lineno=98, col_offset=8), TryFinally([Assign([Name('gotten_url', Store(), lineno=100, col_offset=12)], Call(Attribute(Name('open_url', Load(), lineno=100, col_offset=25), 'geturl', Load(), lineno=100, col_offset=25), [], [], None, None, lineno=100, col_offset=25), lineno=100, col_offset=12)], [Expr(Call(Attribute(Name('open_url', Load(), lineno=102, col_offset=12), 'close', Load(), lineno=102, col_offset=12), [], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=103, col_offset=8), 'assertEqual', Load(), lineno=103, col_offset=8), [Name('gotten_url', Load(), lineno=103, col_offset=25), Name('URL', Load(), lineno=103, col_offset=37)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('test_getcode', arguments([Name('self', Param(), lineno=105, col_offset=21)], None, None, []), [Assign([Name('URL', Store(), lineno=107, col_offset=8)], Str('http://www.python.org/XXXinvalidXXX', lineno=107, col_offset=14), lineno=107, col_offset=8), Assign([Name('open_url', Store(), lineno=108, col_offset=8)], Call(Attribute(Call(Attribute(Name('urllib', Load(), lineno=108, col_offset=19), 'FancyURLopener', Load(), lineno=108, col_offset=19), [], [], None, None, lineno=108, col_offset=19), 'open', Load(), lineno=108, col_offset=19), [Name('URL', Load(), lineno=108, col_offset=48)], [], None, None, lineno=108, col_offset=19), lineno=108, col_offset=8), TryFinally([Assign([Name('code', Store(), lineno=110, col_offset=12)], Call(Attribute(Name('open_url', Load(), lineno=110, col_offset=19), 'getcode', Load(), lineno=110, col_offset=19), [], [], None, None, lineno=110, col_offset=19), lineno=110, col_offset=12)], [Expr(Call(Attribute(Name('open_url', Load(), lineno=112, col_offset=12), 'close', Load(), lineno=112, col_offset=12), [], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12)], lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Name('code', Load(), lineno=113, col_offset=25), Num(404, lineno=113, col_offset=31)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('test_fileno', arguments([Name('self', Param(), lineno=115, col_offset=20)], None, None, []), [If(BoolOp(Or(), [Compare(Attribute(Name('sys', Load(), lineno=116, col_offset=12), 'platform', Load(), lineno=116, col_offset=12), [In()], [Tuple([Str('win32', lineno=116, col_offset=29)], Load(), lineno=116, col_offset=29)], lineno=116, col_offset=12), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=117, col_offset=20), [Name('os', Load(), lineno=117, col_offset=28), Str('fdopen', lineno=117, col_offset=32)], [], None, None, lineno=117, col_offset=20), lineno=117, col_offset=16)], lineno=116, col_offset=12), [Return(None, lineno=120, col_offset=12)], [], lineno=116, col_offset=8), Assign([Name('open_url', Store(), lineno=122, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=122, col_offset=19), 'urlopen', Load(), lineno=122, col_offset=19), [Str('http://www.python.org/', lineno=122, col_offset=32)], [], None, None, lineno=122, col_offset=19), lineno=122, col_offset=8), Assign([Name('fd', Store(), lineno=123, col_offset=8)], Call(Attribute(Name('open_url', Load(), lineno=123, col_offset=13), 'fileno', Load(), lineno=123, col_offset=13), [], [], None, None, lineno=123, col_offset=13), lineno=123, col_offset=8), Assign([Name('FILE', Store(), lineno=124, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=124, col_offset=15), 'fdopen', Load(), lineno=124, col_offset=15), [Name('fd', Load(), lineno=124, col_offset=25)], [], None, None, lineno=124, col_offset=15), lineno=124, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=12), 'assertTrue', Load(), lineno=126, col_offset=12), [Call(Attribute(Name('FILE', Load(), lineno=126, col_offset=28), 'read', Load(), lineno=126, col_offset=28), [], [], None, None, lineno=126, col_offset=28), Str('reading from file created using fd returned by fileno failed', lineno=126, col_offset=41)], [], None, None, lineno=126, col_offset=12), lineno=126, col_offset=12)], [Expr(Call(Attribute(Name('FILE', Load(), lineno=129, col_offset=12), 'close', Load(), lineno=129, col_offset=12), [], [], None, None, lineno=129, col_offset=12), lineno=129, col_offset=12)], lineno=125, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('test_bad_address', arguments([Name('self', Param(), lineno=131, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'assertRaises', Load(), lineno=134, col_offset=8), [Name('IOError', Load(), lineno=134, col_offset=26), Attribute(Name('urllib', Load(), lineno=142, col_offset=26), 'urlopen', Load(), lineno=142, col_offset=26), Str('http://sadflkjsasf.i.nvali.d/', lineno=142, col_offset=42)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8)], [], lineno=131, col_offset=4)], [], lineno=42, col_offset=0), ClassDef('urlretrieveNetworkTests', [Attribute(Name('unittest', Load(), lineno=144, col_offset=30), 'TestCase', Load(), lineno=144, col_offset=30)], [Expr(Str('Tests urllib.urlretrieve using the network.', lineno=145, col_offset=4), lineno=145, col_offset=4), FunctionDef('urlretrieve', arguments([Name('self', Param(), lineno=147, col_offset=20)], 'args', None, []), [Return(Call(Name('_open_with_retry', Load(), lineno=148, col_offset=15), [Attribute(Name('urllib', Load(), lineno=148, col_offset=32), 'urlretrieve', Load(), lineno=148, col_offset=32)], [], Name('args', Load(), lineno=148, col_offset=53), None, lineno=148, col_offset=15), lineno=148, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=150, col_offset=19)], None, None, []), [Assign([Tuple([Name('file_location', Store(), lineno=152, col_offset=8), Name('info', Store(), lineno=152, col_offset=22)], Store(), lineno=152, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=152, col_offset=29), 'urlretrieve', Load(), lineno=152, col_offset=29), [Str('http://www.python.org/', lineno=152, col_offset=46)], [], None, None, lineno=152, col_offset=29), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'assertTrue', Load(), lineno=153, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=153, col_offset=24), 'path', Load(), lineno=153, col_offset=24), 'exists', Load(), lineno=153, col_offset=24), [Name('file_location', Load(), lineno=153, col_offset=39)], [], None, None, lineno=153, col_offset=24), Str('file location returned by urlretrieve is not a valid path', lineno=153, col_offset=55)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Assign([Name('FILE', Store(), lineno=155, col_offset=8)], Call(Name('file', Load(), lineno=155, col_offset=15), [Name('file_location', Load(), lineno=155, col_offset=20)], [], None, None, lineno=155, col_offset=15), lineno=155, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=12), 'assertTrue', Load(), lineno=157, col_offset=12), [Call(Attribute(Name('FILE', Load(), lineno=157, col_offset=28), 'read', Load(), lineno=157, col_offset=28), [], [], None, None, lineno=157, col_offset=28), Str('reading from the file location returned by urlretrieve failed', lineno=157, col_offset=41)], [], None, None, lineno=157, col_offset=12), lineno=157, col_offset=12)], [Expr(Call(Attribute(Name('FILE', Load(), lineno=160, col_offset=12), 'close', Load(), lineno=160, col_offset=12), [], [], None, None, lineno=160, col_offset=12), lineno=160, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=161, col_offset=12), 'unlink', Load(), lineno=161, col_offset=12), [Name('file_location', Load(), lineno=161, col_offset=22)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12)], lineno=156, col_offset=8)], [], lineno=150, col_offset=4), FunctionDef('test_specified_path', arguments([Name('self', Param(), lineno=163, col_offset=28)], None, None, []), [Assign([Tuple([Name('file_location', Store(), lineno=165, col_offset=8), Name('info', Store(), lineno=165, col_offset=22)], Store(), lineno=165, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=165, col_offset=29), 'urlretrieve', Load(), lineno=165, col_offset=29), [Str('http://www.python.org/', lineno=165, col_offset=46), Attribute(Name('test_support', Load(), lineno=166, col_offset=46), 'TESTFN', Load(), lineno=166, col_offset=46)], [], None, None, lineno=165, col_offset=29), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'assertEqual', Load(), lineno=167, col_offset=8), [Name('file_location', Load(), lineno=167, col_offset=25), Attribute(Name('test_support', Load(), lineno=167, col_offset=40), 'TESTFN', Load(), lineno=167, col_offset=40)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'assertTrue', Load(), lineno=168, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=24), 'path', Load(), lineno=168, col_offset=24), 'exists', Load(), lineno=168, col_offset=24), [Name('file_location', Load(), lineno=168, col_offset=39)], [], None, None, lineno=168, col_offset=24)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Assign([Name('FILE', Store(), lineno=169, col_offset=8)], Call(Name('file', Load(), lineno=169, col_offset=15), [Name('file_location', Load(), lineno=169, col_offset=20)], [], None, None, lineno=169, col_offset=15), lineno=169, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=12), 'assertTrue', Load(), lineno=171, col_offset=12), [Call(Attribute(Name('FILE', Load(), lineno=171, col_offset=28), 'read', Load(), lineno=171, col_offset=28), [], [], None, None, lineno=171, col_offset=28), Str('reading from temporary file failed', lineno=171, col_offset=41)], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12)], [Expr(Call(Attribute(Name('FILE', Load(), lineno=173, col_offset=12), 'close', Load(), lineno=173, col_offset=12), [], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=174, col_offset=12), 'unlink', Load(), lineno=174, col_offset=12), [Name('file_location', Load(), lineno=174, col_offset=22)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=12)], lineno=170, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('test_header', arguments([Name('self', Param(), lineno=176, col_offset=20)], None, None, []), [Assign([Tuple([Name('file_location', Store(), lineno=178, col_offset=8), Name('header', Store(), lineno=178, col_offset=23)], Store(), lineno=178, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=178, col_offset=32), 'urlretrieve', Load(), lineno=178, col_offset=32), [Str('http://www.python.org/', lineno=178, col_offset=49)], [], None, None, lineno=178, col_offset=32), lineno=178, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=179, col_offset=8), 'unlink', Load(), lineno=179, col_offset=8), [Name('file_location', Load(), lineno=179, col_offset=18)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertIsInstance', Load(), lineno=180, col_offset=8), [Name('header', Load(), lineno=180, col_offset=30), Attribute(Name('mimetools', Load(), lineno=180, col_offset=38), 'Message', Load(), lineno=180, col_offset=38), Str('header is not an instance of mimetools.Message', lineno=181, col_offset=30)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('test_data_header', arguments([Name('self', Param(), lineno=183, col_offset=25)], None, None, []), [Assign([Name('logo', Store(), lineno=184, col_offset=8)], Str('http://www.python.org/community/logos/python-logo-master-v3-TM.png', lineno=184, col_offset=15), lineno=184, col_offset=8), Assign([Tuple([Name('file_location', Store(), lineno=185, col_offset=8), Name('fileheaders', Store(), lineno=185, col_offset=23)], Store(), lineno=185, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=185, col_offset=37), 'urlretrieve', Load(), lineno=185, col_offset=37), [Name('logo', Load(), lineno=185, col_offset=54)], [], None, None, lineno=185, col_offset=37), lineno=185, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=186, col_offset=8), 'unlink', Load(), lineno=186, col_offset=8), [Name('file_location', Load(), lineno=186, col_offset=18)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Assign([Name('datevalue', Store(), lineno=187, col_offset=8)], Call(Attribute(Name('fileheaders', Load(), lineno=187, col_offset=20), 'getheader', Load(), lineno=187, col_offset=20), [Str('Date', lineno=187, col_offset=42)], [], None, None, lineno=187, col_offset=20), lineno=187, col_offset=8), Assign([Name('dateformat', Store(), lineno=188, col_offset=8)], Str('%a, %d %b %Y %H:%M:%S GMT', lineno=188, col_offset=21), lineno=188, col_offset=8), TryExcept([Expr(Call(Attribute(Name('time', Load(), lineno=190, col_offset=12), 'strptime', Load(), lineno=190, col_offset=12), [Name('datevalue', Load(), lineno=190, col_offset=26), Name('dateformat', Load(), lineno=190, col_offset=37)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=191, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=12), 'fail', Load(), lineno=192, col_offset=12), [Str('Date value not in %r format', lineno=192, col_offset=22), Name('dateformat', Load(), lineno=192, col_offset=53)], [], None, None, lineno=192, col_offset=12), lineno=192, col_offset=12)], lineno=191, col_offset=8)], [], lineno=189, col_offset=8)], [], lineno=183, col_offset=4)], [], lineno=144, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=197, col_offset=4), 'requires', Load(), lineno=197, col_offset=4), [Str('network', lineno=197, col_offset=26)], [], None, None, lineno=197, col_offset=4), lineno=197, col_offset=4), With(Call(Attribute(Name('test_support', Load(), lineno=198, col_offset=9), 'check_py3k_warnings', Load(), lineno=198, col_offset=9), [Tuple([Str('urllib.urlopen.. has been removed', lineno=199, col_offset=13), Name('DeprecationWarning', Load(), lineno=199, col_offset=50)], Load(), lineno=199, col_offset=13)], [], None, None, lineno=198, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=200, col_offset=8), 'run_unittest', Load(), lineno=200, col_offset=8), [Name('URLTimeoutTest', Load(), lineno=200, col_offset=34), Name('urlopenNetworkTests', Load(), lineno=201, col_offset=34), Name('urlretrieveNetworkTests', Load(), lineno=202, col_offset=34)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8)], lineno=198, col_offset=9)], [], lineno=196, col_offset=0), If(Compare(Name('__name__', Load(), lineno=204, col_offset=3), [Eq()], [Str('__main__', lineno=204, col_offset=15)], lineno=204, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=205, col_offset=4), [], [], None, None, lineno=205, col_offset=4), lineno=205, col_offset=4)], [], lineno=204, col_offset=0)])
