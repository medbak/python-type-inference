Module([Expr(Str("distutils.command.register\n\nImplements the Distutils 'register' command (register with the repository).\n", lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=8, col_offset=0)], Str('$Id: register.py 77717 2010-01-24 00:33:32Z tarek.ziade $', lineno=8, col_offset=15), lineno=8, col_offset=0), Import([alias('urllib2', None)], lineno=10, col_offset=0), Import([alias('getpass', None)], lineno=11, col_offset=0), Import([alias('urlparse', None)], lineno=12, col_offset=0), Import([alias('StringIO', None)], lineno=13, col_offset=0), ImportFrom('warnings', [alias('warn', None)], 0, lineno=14, col_offset=0), ImportFrom('distutils.core', [alias('PyPIRCCommand', None)], 0, lineno=16, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=17, col_offset=0), ClassDef('register', [Name('PyPIRCCommand', Load(), lineno=19, col_offset=15)], [Assign([Name('description', Store(), lineno=21, col_offset=4)], Str('register the distribution with the Python package index', lineno=21, col_offset=19), lineno=21, col_offset=4), Assign([Name('user_options', Store(), lineno=22, col_offset=4)], BinOp(Attribute(Name('PyPIRCCommand', Load(), lineno=22, col_offset=19), 'user_options', Load(), lineno=22, col_offset=19), Add(), List([Tuple([Str('list-classifiers', lineno=23, col_offset=9), Name('None', Load(), lineno=23, col_offset=29), Str('list the valid Trove classifiers', lineno=24, col_offset=9)], Load(), lineno=23, col_offset=9), Tuple([Str('strict', lineno=25, col_offset=9), Name('None', Load(), lineno=25, col_offset=19), Str('Will stop the registering if the meta-data are not fully compliant', lineno=26, col_offset=9)], Load(), lineno=25, col_offset=9)], Load(), lineno=22, col_offset=48), lineno=22, col_offset=19), lineno=22, col_offset=4), Assign([Name('boolean_options', Store(), lineno=28, col_offset=4)], BinOp(Attribute(Name('PyPIRCCommand', Load(), lineno=28, col_offset=22), 'boolean_options', Load(), lineno=28, col_offset=22), Add(), List([Str('verify', lineno=29, col_offset=8), Str('list-classifiers', lineno=29, col_offset=18), Str('strict', lineno=29, col_offset=38)], Load(), lineno=28, col_offset=54), lineno=28, col_offset=22), lineno=28, col_offset=4), Assign([Name('sub_commands', Store(), lineno=31, col_offset=4)], List([Tuple([Str('check', lineno=31, col_offset=21), Lambda(arguments([Name('self', Param(), lineno=31, col_offset=37)], None, None, []), Name('True', Load(), lineno=31, col_offset=43), lineno=31, col_offset=30)], Load(), lineno=31, col_offset=21)], Load(), lineno=31, col_offset=19), lineno=31, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=33, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('PyPIRCCommand', Load(), lineno=34, col_offset=8), 'initialize_options', Load(), lineno=34, col_offset=8), [Name('self', Load(), lineno=34, col_offset=41)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'list_classifiers', Store(), lineno=35, col_offset=8)], Num(0, lineno=35, col_offset=32), lineno=35, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'strict', Store(), lineno=36, col_offset=8)], Num(0, lineno=36, col_offset=22), lineno=36, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=38, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('PyPIRCCommand', Load(), lineno=39, col_offset=8), 'finalize_options', Load(), lineno=39, col_offset=8), [Name('self', Load(), lineno=39, col_offset=39)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Assign([Name('check_options', Store(), lineno=41, col_offset=8)], Dict([Str('strict', lineno=41, col_offset=25), Str('restructuredtext', lineno=42, col_offset=25)], [Tuple([Str('register', lineno=41, col_offset=36), Attribute(Name('self', Load(), lineno=41, col_offset=48), 'strict', Load(), lineno=41, col_offset=48)], Load(), lineno=41, col_offset=36), Tuple([Str('register', lineno=42, col_offset=46), Num(1, lineno=42, col_offset=58)], Load(), lineno=42, col_offset=46)], lineno=41, col_offset=24), lineno=41, col_offset=8), Assign([Subscript(Attribute(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'distribution', Load(), lineno=43, col_offset=8), 'command_options', Load(), lineno=43, col_offset=8), Index(Str('check', lineno=43, col_offset=42)), Store(), lineno=43, col_offset=8)], Name('check_options', Load(), lineno=43, col_offset=53), lineno=43, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=45, col_offset=12)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'finalize_options', Load(), lineno=46, col_offset=8), [], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), '_set_config', Load(), lineno=47, col_offset=8), [], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8), For(Name('cmd_name', Store(), lineno=50, col_offset=12), Call(Attribute(Name('self', Load(), lineno=50, col_offset=24), 'get_sub_commands', Load(), lineno=50, col_offset=24), [], [], None, None, lineno=50, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=12), 'run_command', Load(), lineno=51, col_offset=12), [Name('cmd_name', Load(), lineno=51, col_offset=29)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12)], [], lineno=50, col_offset=8), If(Attribute(Name('self', Load(), lineno=53, col_offset=11), 'dry_run', Load(), lineno=53, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'verify_metadata', Load(), lineno=54, col_offset=12), [], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], [If(Attribute(Name('self', Load(), lineno=55, col_offset=13), 'list_classifiers', Load(), lineno=55, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=12), 'classifiers', Load(), lineno=56, col_offset=12), [], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=12), 'send_metadata', Load(), lineno=58, col_offset=12), [], [], None, None, lineno=58, col_offset=12), lineno=58, col_offset=12)], lineno=55, col_offset=13)], lineno=53, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('check_metadata', arguments([Name('self', Param(), lineno=60, col_offset=23)], None, None, []), [Expr(Str('Deprecated API.', lineno=61, col_offset=8), lineno=61, col_offset=8), Expr(Call(Name('warn', Load(), lineno=62, col_offset=8), [Str('distutils.command.register.check_metadata is deprecated,               use the check command instead', lineno=63, col_offset=-1), Name('PendingDeprecationWarning', Load(), lineno=63, col_offset=46)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Assign([Name('check', Store(), lineno=64, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=64, col_offset=16), 'distribution', Load(), lineno=64, col_offset=16), 'get_command_obj', Load(), lineno=64, col_offset=16), [Str('check', lineno=64, col_offset=50)], [], None, None, lineno=64, col_offset=16), lineno=64, col_offset=8), Expr(Call(Attribute(Name('check', Load(), lineno=65, col_offset=8), 'ensure_finalized', Load(), lineno=65, col_offset=8), [], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Assign([Attribute(Name('check', Load(), lineno=66, col_offset=8), 'strict', Store(), lineno=66, col_offset=8)], Attribute(Name('self', Load(), lineno=66, col_offset=23), 'strict', Load(), lineno=66, col_offset=23), lineno=66, col_offset=8), Assign([Attribute(Name('check', Load(), lineno=67, col_offset=8), 'restructuredtext', Store(), lineno=67, col_offset=8)], Num(1, lineno=67, col_offset=33), lineno=67, col_offset=8), Expr(Call(Attribute(Name('check', Load(), lineno=68, col_offset=8), 'run', Load(), lineno=68, col_offset=8), [], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('_set_config', arguments([Name('self', Param(), lineno=70, col_offset=20)], None, None, []), [Expr(Str(' Reads the configuration file and set attributes.\n        ', lineno=72, col_offset=-1), lineno=72, col_offset=-1), Assign([Name('config', Store(), lineno=73, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=73, col_offset=17), '_read_pypirc', Load(), lineno=73, col_offset=17), [], [], None, None, lineno=73, col_offset=17), lineno=73, col_offset=8), If(Compare(Name('config', Load(), lineno=74, col_offset=11), [NotEq()], [Dict([], [], lineno=74, col_offset=21)], lineno=74, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=75, col_offset=12), 'username', Store(), lineno=75, col_offset=12)], Subscript(Name('config', Load(), lineno=75, col_offset=28), Index(Str('username', lineno=75, col_offset=35)), Load(), lineno=75, col_offset=28), lineno=75, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=12), 'password', Store(), lineno=76, col_offset=12)], Subscript(Name('config', Load(), lineno=76, col_offset=28), Index(Str('password', lineno=76, col_offset=35)), Load(), lineno=76, col_offset=28), lineno=76, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=77, col_offset=12), 'repository', Store(), lineno=77, col_offset=12)], Subscript(Name('config', Load(), lineno=77, col_offset=30), Index(Str('repository', lineno=77, col_offset=37)), Load(), lineno=77, col_offset=30), lineno=77, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=78, col_offset=12), 'realm', Store(), lineno=78, col_offset=12)], Subscript(Name('config', Load(), lineno=78, col_offset=25), Index(Str('realm', lineno=78, col_offset=32)), Load(), lineno=78, col_offset=25), lineno=78, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=79, col_offset=12), 'has_config', Store(), lineno=79, col_offset=12)], Name('True', Load(), lineno=79, col_offset=30), lineno=79, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=81, col_offset=15), 'repository', Load(), lineno=81, col_offset=15), [NotIn()], [Tuple([Str('pypi', lineno=81, col_offset=39), Attribute(Name('self', Load(), lineno=81, col_offset=47), 'DEFAULT_REPOSITORY', Load(), lineno=81, col_offset=47)], Load(), lineno=81, col_offset=39)], lineno=81, col_offset=15), [Raise(Call(Name('ValueError', Load(), lineno=82, col_offset=22), [BinOp(Str('%s not found in .pypirc', lineno=82, col_offset=33), Mod(), Attribute(Name('self', Load(), lineno=82, col_offset=61), 'repository', Load(), lineno=82, col_offset=61), lineno=82, col_offset=33)], [], None, None, lineno=82, col_offset=22), None, None, lineno=82, col_offset=16)], [], lineno=81, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=83, col_offset=15), 'repository', Load(), lineno=83, col_offset=15), [Eq()], [Str('pypi', lineno=83, col_offset=34)], lineno=83, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=84, col_offset=16), 'repository', Store(), lineno=84, col_offset=16)], Attribute(Name('self', Load(), lineno=84, col_offset=34), 'DEFAULT_REPOSITORY', Load(), lineno=84, col_offset=34), lineno=84, col_offset=16)], [], lineno=83, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=85, col_offset=12), 'has_config', Store(), lineno=85, col_offset=12)], Name('False', Load(), lineno=85, col_offset=30), lineno=85, col_offset=12)], lineno=74, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('classifiers', arguments([Name('self', Param(), lineno=87, col_offset=20)], None, None, []), [Expr(Str(' Fetch the list of classifiers from the server.\n        ', lineno=89, col_offset=-1), lineno=89, col_offset=-1), Assign([Name('response', Store(), lineno=90, col_offset=8)], Call(Attribute(Name('urllib2', Load(), lineno=90, col_offset=19), 'urlopen', Load(), lineno=90, col_offset=19), [BinOp(Attribute(Name('self', Load(), lineno=90, col_offset=35), 'repository', Load(), lineno=90, col_offset=35), Add(), Str('?:action=list_classifiers', lineno=90, col_offset=51), lineno=90, col_offset=35)], [], None, None, lineno=90, col_offset=19), lineno=90, col_offset=8), Expr(Call(Attribute(Name('log', Load(), lineno=91, col_offset=8), 'info', Load(), lineno=91, col_offset=8), [Call(Attribute(Name('response', Load(), lineno=91, col_offset=17), 'read', Load(), lineno=91, col_offset=17), [], [], None, None, lineno=91, col_offset=17)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('verify_metadata', arguments([Name('self', Param(), lineno=93, col_offset=24)], None, None, []), [Expr(Str(' Send the metadata to the package index server to be checked.\n        ', lineno=95, col_offset=-1), lineno=95, col_offset=-1), Assign([Tuple([Name('code', Store(), lineno=97, col_offset=9), Name('result', Store(), lineno=97, col_offset=15)], Store(), lineno=97, col_offset=9)], Call(Attribute(Name('self', Load(), lineno=97, col_offset=25), 'post_to_server', Load(), lineno=97, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=97, col_offset=45), 'build_post_data', Load(), lineno=97, col_offset=45), [Str('verify', lineno=97, col_offset=66)], [], None, None, lineno=97, col_offset=45)], [], None, None, lineno=97, col_offset=25), lineno=97, col_offset=8), Expr(Call(Attribute(Name('log', Load(), lineno=98, col_offset=8), 'info', Load(), lineno=98, col_offset=8), [BinOp(Str('Server response (%s): %s', lineno=98, col_offset=17), Mod(), Tuple([Name('code', Load(), lineno=98, col_offset=47), Name('result', Load(), lineno=98, col_offset=53)], Load(), lineno=98, col_offset=47), lineno=98, col_offset=17)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('send_metadata', arguments([Name('self', Param(), lineno=101, col_offset=22)], None, None, []), [Expr(Str(" Send the metadata to the package index server.\n\n            Well, do the following:\n            1. figure who the user is, and then\n            2. send the data as a Basic auth'ed POST.\n\n            First we try to read the username/password from $HOME/.pypirc,\n            which is a ConfigParser-formatted file with a section\n            [distutils] containing username and password entries (both\n            in clear text). Eg:\n\n                [distutils]\n                index-servers =\n                    pypi\n\n                [pypi]\n                username: fred\n                password: sekrit\n\n            Otherwise, to figure who the user is, we offer the user three\n            choices:\n\n             1. use existing login,\n             2. register as a new user, or\n             3. set the password to a random string and email the user.\n\n        ", lineno=128, col_offset=-1), lineno=128, col_offset=-1), If(Attribute(Name('self', Load(), lineno=131, col_offset=11), 'has_config', Load(), lineno=131, col_offset=11), [Assign([Name('choice', Store(), lineno=132, col_offset=12)], Str('1', lineno=132, col_offset=21), lineno=132, col_offset=12), Assign([Name('username', Store(), lineno=133, col_offset=12)], Attribute(Name('self', Load(), lineno=133, col_offset=23), 'username', Load(), lineno=133, col_offset=23), lineno=133, col_offset=12), Assign([Name('password', Store(), lineno=134, col_offset=12)], Attribute(Name('self', Load(), lineno=134, col_offset=23), 'password', Load(), lineno=134, col_offset=23), lineno=134, col_offset=12)], [Assign([Name('choice', Store(), lineno=136, col_offset=12)], Str('x', lineno=136, col_offset=21), lineno=136, col_offset=12), Assign([Name('username', Store(), lineno=137, col_offset=12), Name('password', Store(), lineno=137, col_offset=23)], Str('', lineno=137, col_offset=34), lineno=137, col_offset=12)], lineno=131, col_offset=8), Assign([Name('choices', Store(), lineno=140, col_offset=8)], Call(Attribute(Str('1 2 3 4', lineno=140, col_offset=18), 'split', Load(), lineno=140, col_offset=18), [], [], None, None, lineno=140, col_offset=18), lineno=140, col_offset=8), While(Compare(Name('choice', Load(), lineno=141, col_offset=14), [NotIn()], [Name('choices', Load(), lineno=141, col_offset=28)], lineno=141, col_offset=14), [Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=12), 'announce', Load(), lineno=142, col_offset=12), [Str('We need to know who you are, so please choose either:\n 1. use your existing login,\n 2. register as a new user,\n 3. have the server generate a new password for you (and email it to you), or\n 4. quit\nYour selection [default 1]: ', lineno=148, col_offset=-1), Attribute(Name('log', Load(), lineno=148, col_offset=33), 'INFO', Load(), lineno=148, col_offset=33)], [], None, None, lineno=142, col_offset=12), lineno=142, col_offset=12), Assign([Name('choice', Store(), lineno=150, col_offset=12)], Call(Name('raw_input', Load(), lineno=150, col_offset=21), [], [], None, None, lineno=150, col_offset=21), lineno=150, col_offset=12), If(UnaryOp(Not(), Name('choice', Load(), lineno=151, col_offset=19), lineno=151, col_offset=15), [Assign([Name('choice', Store(), lineno=152, col_offset=16)], Str('1', lineno=152, col_offset=25), lineno=152, col_offset=16)], [If(Compare(Name('choice', Load(), lineno=153, col_offset=17), [NotIn()], [Name('choices', Load(), lineno=153, col_offset=31)], lineno=153, col_offset=17), [Print(None, [Str('Please choose one of the four options!', lineno=154, col_offset=22)], True, lineno=154, col_offset=16)], [], lineno=153, col_offset=17)], lineno=151, col_offset=12)], [], lineno=141, col_offset=8), If(Compare(Name('choice', Load(), lineno=156, col_offset=11), [Eq()], [Str('1', lineno=156, col_offset=21)], lineno=156, col_offset=11), [While(UnaryOp(Not(), Name('username', Load(), lineno=158, col_offset=22), lineno=158, col_offset=18), [Assign([Name('username', Store(), lineno=159, col_offset=16)], Call(Name('raw_input', Load(), lineno=159, col_offset=27), [Str('Username: ', lineno=159, col_offset=37)], [], None, None, lineno=159, col_offset=27), lineno=159, col_offset=16)], [], lineno=158, col_offset=12), While(UnaryOp(Not(), Name('password', Load(), lineno=160, col_offset=22), lineno=160, col_offset=18), [Assign([Name('password', Store(), lineno=161, col_offset=16)], Call(Attribute(Name('getpass', Load(), lineno=161, col_offset=27), 'getpass', Load(), lineno=161, col_offset=27), [Str('Password: ', lineno=161, col_offset=43)], [], None, None, lineno=161, col_offset=27), lineno=161, col_offset=16)], [], lineno=160, col_offset=12), Assign([Name('auth', Store(), lineno=164, col_offset=12)], Call(Attribute(Name('urllib2', Load(), lineno=164, col_offset=19), 'HTTPPasswordMgr', Load(), lineno=164, col_offset=19), [], [], None, None, lineno=164, col_offset=19), lineno=164, col_offset=12), Assign([Name('host', Store(), lineno=165, col_offset=12)], Subscript(Call(Attribute(Name('urlparse', Load(), lineno=165, col_offset=19), 'urlparse', Load(), lineno=165, col_offset=19), [Attribute(Name('self', Load(), lineno=165, col_offset=37), 'repository', Load(), lineno=165, col_offset=37)], [], None, None, lineno=165, col_offset=19), Index(Num(1, lineno=165, col_offset=54)), Load(), lineno=165, col_offset=19), lineno=165, col_offset=12), Expr(Call(Attribute(Name('auth', Load(), lineno=166, col_offset=12), 'add_password', Load(), lineno=166, col_offset=12), [Attribute(Name('self', Load(), lineno=166, col_offset=30), 'realm', Load(), lineno=166, col_offset=30), Name('host', Load(), lineno=166, col_offset=42), Name('username', Load(), lineno=166, col_offset=48), Name('password', Load(), lineno=166, col_offset=58)], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12), Assign([Tuple([Name('code', Store(), lineno=168, col_offset=12), Name('result', Store(), lineno=168, col_offset=18)], Store(), lineno=168, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=168, col_offset=27), 'post_to_server', Load(), lineno=168, col_offset=27), [Call(Attribute(Name('self', Load(), lineno=168, col_offset=47), 'build_post_data', Load(), lineno=168, col_offset=47), [Str('submit', lineno=168, col_offset=68)], [], None, None, lineno=168, col_offset=47), Name('auth', Load(), lineno=169, col_offset=16)], [], None, None, lineno=168, col_offset=27), lineno=168, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=12), 'announce', Load(), lineno=170, col_offset=12), [BinOp(Str('Server response (%s): %s', lineno=170, col_offset=26), Mod(), Tuple([Name('code', Load(), lineno=170, col_offset=56), Name('result', Load(), lineno=170, col_offset=62)], Load(), lineno=170, col_offset=56), lineno=170, col_offset=26), Attribute(Name('log', Load(), lineno=171, col_offset=26), 'INFO', Load(), lineno=171, col_offset=26)], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=12), If(Compare(Name('code', Load(), lineno=174, col_offset=15), [Eq()], [Num(200, lineno=174, col_offset=23)], lineno=174, col_offset=15), [If(Attribute(Name('self', Load(), lineno=175, col_offset=19), 'has_config', Load(), lineno=175, col_offset=19), [Assign([Attribute(Attribute(Name('self', Load(), lineno=178, col_offset=20), 'distribution', Load(), lineno=178, col_offset=20), 'password', Store(), lineno=178, col_offset=20)], Name('password', Load(), lineno=178, col_offset=49), lineno=178, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=20), 'announce', Load(), lineno=180, col_offset=20), [Str('I can store your PyPI login so future submissions will be faster.', lineno=180, col_offset=35), Attribute(Name('log', Load(), lineno=181, col_offset=67), 'INFO', Load(), lineno=181, col_offset=67)], [], None, None, lineno=180, col_offset=20), lineno=180, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=20), 'announce', Load(), lineno=182, col_offset=20), [BinOp(Str('(the login will be stored in %s)', lineno=182, col_offset=34), Mod(), Call(Attribute(Name('self', Load(), lineno=183, col_offset=34), '_get_rc_file', Load(), lineno=183, col_offset=34), [], [], None, None, lineno=183, col_offset=34), lineno=182, col_offset=34), Attribute(Name('log', Load(), lineno=183, col_offset=55), 'INFO', Load(), lineno=183, col_offset=55)], [], None, None, lineno=182, col_offset=20), lineno=182, col_offset=20), Assign([Name('choice', Store(), lineno=184, col_offset=20)], Str('X', lineno=184, col_offset=29), lineno=184, col_offset=20), While(Compare(Call(Attribute(Name('choice', Load(), lineno=185, col_offset=26), 'lower', Load(), lineno=185, col_offset=26), [], [], None, None, lineno=185, col_offset=26), [NotIn()], [Str('yn', lineno=185, col_offset=48)], lineno=185, col_offset=26), [Assign([Name('choice', Store(), lineno=186, col_offset=24)], Call(Name('raw_input', Load(), lineno=186, col_offset=33), [Str('Save your login (y/N)?', lineno=186, col_offset=43)], [], None, None, lineno=186, col_offset=33), lineno=186, col_offset=24), If(UnaryOp(Not(), Name('choice', Load(), lineno=187, col_offset=31), lineno=187, col_offset=27), [Assign([Name('choice', Store(), lineno=188, col_offset=28)], Str('n', lineno=188, col_offset=37), lineno=188, col_offset=28)], [], lineno=187, col_offset=24)], [], lineno=185, col_offset=20), If(Compare(Call(Attribute(Name('choice', Load(), lineno=189, col_offset=23), 'lower', Load(), lineno=189, col_offset=23), [], [], None, None, lineno=189, col_offset=23), [Eq()], [Str('y', lineno=189, col_offset=41)], lineno=189, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=24), '_store_pypirc', Load(), lineno=190, col_offset=24), [Name('username', Load(), lineno=190, col_offset=43), Name('password', Load(), lineno=190, col_offset=53)], [], None, None, lineno=190, col_offset=24), lineno=190, col_offset=24)], [], lineno=189, col_offset=20)], lineno=175, col_offset=16)], [], lineno=174, col_offset=12)], [If(Compare(Name('choice', Load(), lineno=192, col_offset=13), [Eq()], [Str('2', lineno=192, col_offset=23)], lineno=192, col_offset=13), [Assign([Name('data', Store(), lineno=193, col_offset=12)], Dict([Str(':action', lineno=193, col_offset=20)], [Str('user', lineno=193, col_offset=31)], lineno=193, col_offset=19), lineno=193, col_offset=12), Assign([Subscript(Name('data', Load(), lineno=194, col_offset=12), Index(Str('name', lineno=194, col_offset=17)), Store(), lineno=194, col_offset=12), Subscript(Name('data', Load(), lineno=194, col_offset=27), Index(Str('password', lineno=194, col_offset=32)), Store(), lineno=194, col_offset=27), Subscript(Name('data', Load(), lineno=194, col_offset=46), Index(Str('email', lineno=194, col_offset=51)), Store(), lineno=194, col_offset=46)], Str('', lineno=194, col_offset=62), lineno=194, col_offset=12), Assign([Subscript(Name('data', Load(), lineno=195, col_offset=12), Index(Str('confirm', lineno=195, col_offset=17)), Store(), lineno=195, col_offset=12)], Name('None', Load(), lineno=195, col_offset=30), lineno=195, col_offset=12), While(UnaryOp(Not(), Subscript(Name('data', Load(), lineno=196, col_offset=22), Index(Str('name', lineno=196, col_offset=27)), Load(), lineno=196, col_offset=22), lineno=196, col_offset=18), [Assign([Subscript(Name('data', Load(), lineno=197, col_offset=16), Index(Str('name', lineno=197, col_offset=21)), Store(), lineno=197, col_offset=16)], Call(Name('raw_input', Load(), lineno=197, col_offset=31), [Str('Username: ', lineno=197, col_offset=41)], [], None, None, lineno=197, col_offset=31), lineno=197, col_offset=16)], [], lineno=196, col_offset=12), While(Compare(Subscript(Name('data', Load(), lineno=198, col_offset=18), Index(Str('password', lineno=198, col_offset=23)), Load(), lineno=198, col_offset=18), [NotEq()], [Subscript(Name('data', Load(), lineno=198, col_offset=38), Index(Str('confirm', lineno=198, col_offset=43)), Load(), lineno=198, col_offset=38)], lineno=198, col_offset=18), [While(UnaryOp(Not(), Subscript(Name('data', Load(), lineno=199, col_offset=26), Index(Str('password', lineno=199, col_offset=31)), Load(), lineno=199, col_offset=26), lineno=199, col_offset=22), [Assign([Subscript(Name('data', Load(), lineno=200, col_offset=20), Index(Str('password', lineno=200, col_offset=25)), Store(), lineno=200, col_offset=20)], Call(Attribute(Name('getpass', Load(), lineno=200, col_offset=39), 'getpass', Load(), lineno=200, col_offset=39), [Str('Password: ', lineno=200, col_offset=55)], [], None, None, lineno=200, col_offset=39), lineno=200, col_offset=20)], [], lineno=199, col_offset=16), While(UnaryOp(Not(), Subscript(Name('data', Load(), lineno=201, col_offset=26), Index(Str('confirm', lineno=201, col_offset=31)), Load(), lineno=201, col_offset=26), lineno=201, col_offset=22), [Assign([Subscript(Name('data', Load(), lineno=202, col_offset=20), Index(Str('confirm', lineno=202, col_offset=25)), Store(), lineno=202, col_offset=20)], Call(Attribute(Name('getpass', Load(), lineno=202, col_offset=38), 'getpass', Load(), lineno=202, col_offset=38), [Str(' Confirm: ', lineno=202, col_offset=54)], [], None, None, lineno=202, col_offset=38), lineno=202, col_offset=20)], [], lineno=201, col_offset=16), If(Compare(Subscript(Name('data', Load(), lineno=203, col_offset=19), Index(Str('password', lineno=203, col_offset=24)), Load(), lineno=203, col_offset=19), [NotEq()], [Subscript(Name('data', Load(), lineno=203, col_offset=39), Index(Str('confirm', lineno=203, col_offset=44)), Load(), lineno=203, col_offset=39)], lineno=203, col_offset=19), [Assign([Subscript(Name('data', Load(), lineno=204, col_offset=20), Index(Str('password', lineno=204, col_offset=25)), Store(), lineno=204, col_offset=20)], Str('', lineno=204, col_offset=39), lineno=204, col_offset=20), Assign([Subscript(Name('data', Load(), lineno=205, col_offset=20), Index(Str('confirm', lineno=205, col_offset=25)), Store(), lineno=205, col_offset=20)], Name('None', Load(), lineno=205, col_offset=38), lineno=205, col_offset=20), Print(None, [Str("Password and confirm don't match!", lineno=206, col_offset=26)], True, lineno=206, col_offset=20)], [], lineno=203, col_offset=16)], [], lineno=198, col_offset=12), While(UnaryOp(Not(), Subscript(Name('data', Load(), lineno=207, col_offset=22), Index(Str('email', lineno=207, col_offset=27)), Load(), lineno=207, col_offset=22), lineno=207, col_offset=18), [Assign([Subscript(Name('data', Load(), lineno=208, col_offset=16), Index(Str('email', lineno=208, col_offset=21)), Store(), lineno=208, col_offset=16)], Call(Name('raw_input', Load(), lineno=208, col_offset=32), [Str('   EMail: ', lineno=208, col_offset=42)], [], None, None, lineno=208, col_offset=32), lineno=208, col_offset=16)], [], lineno=207, col_offset=12), Assign([Tuple([Name('code', Store(), lineno=209, col_offset=12), Name('result', Store(), lineno=209, col_offset=18)], Store(), lineno=209, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=209, col_offset=27), 'post_to_server', Load(), lineno=209, col_offset=27), [Name('data', Load(), lineno=209, col_offset=47)], [], None, None, lineno=209, col_offset=27), lineno=209, col_offset=12), If(Compare(Name('code', Load(), lineno=210, col_offset=15), [NotEq()], [Num(200, lineno=210, col_offset=23)], lineno=210, col_offset=15), [Expr(Call(Attribute(Name('log', Load(), lineno=211, col_offset=16), 'info', Load(), lineno=211, col_offset=16), [BinOp(Str('Server response (%s): %s', lineno=211, col_offset=25), Mod(), Tuple([Name('code', Load(), lineno=211, col_offset=55), Name('result', Load(), lineno=211, col_offset=61)], Load(), lineno=211, col_offset=55), lineno=211, col_offset=25)], [], None, None, lineno=211, col_offset=16), lineno=211, col_offset=16)], [Expr(Call(Attribute(Name('log', Load(), lineno=213, col_offset=16), 'info', Load(), lineno=213, col_offset=16), [Str('You will receive an email shortly.', lineno=213, col_offset=25)], [], None, None, lineno=213, col_offset=16), lineno=213, col_offset=16), Expr(Call(Attribute(Name('log', Load(), lineno=214, col_offset=16), 'info', Load(), lineno=214, col_offset=16), [Str('Follow the instructions in it to complete registration.', lineno=214, col_offset=26)], [], None, None, lineno=214, col_offset=16), lineno=214, col_offset=16)], lineno=210, col_offset=12)], [If(Compare(Name('choice', Load(), lineno=216, col_offset=13), [Eq()], [Str('3', lineno=216, col_offset=23)], lineno=216, col_offset=13), [Assign([Name('data', Store(), lineno=217, col_offset=12)], Dict([Str(':action', lineno=217, col_offset=20)], [Str('password_reset', lineno=217, col_offset=31)], lineno=217, col_offset=19), lineno=217, col_offset=12), Assign([Subscript(Name('data', Load(), lineno=218, col_offset=12), Index(Str('email', lineno=218, col_offset=17)), Store(), lineno=218, col_offset=12)], Str('', lineno=218, col_offset=28), lineno=218, col_offset=12), While(UnaryOp(Not(), Subscript(Name('data', Load(), lineno=219, col_offset=22), Index(Str('email', lineno=219, col_offset=27)), Load(), lineno=219, col_offset=22), lineno=219, col_offset=18), [Assign([Subscript(Name('data', Load(), lineno=220, col_offset=16), Index(Str('email', lineno=220, col_offset=21)), Store(), lineno=220, col_offset=16)], Call(Name('raw_input', Load(), lineno=220, col_offset=32), [Str('Your email address: ', lineno=220, col_offset=42)], [], None, None, lineno=220, col_offset=32), lineno=220, col_offset=16)], [], lineno=219, col_offset=12), Assign([Tuple([Name('code', Store(), lineno=221, col_offset=12), Name('result', Store(), lineno=221, col_offset=18)], Store(), lineno=221, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=221, col_offset=27), 'post_to_server', Load(), lineno=221, col_offset=27), [Name('data', Load(), lineno=221, col_offset=47)], [], None, None, lineno=221, col_offset=27), lineno=221, col_offset=12), Expr(Call(Attribute(Name('log', Load(), lineno=222, col_offset=12), 'info', Load(), lineno=222, col_offset=12), [BinOp(Str('Server response (%s): %s', lineno=222, col_offset=21), Mod(), Tuple([Name('code', Load(), lineno=222, col_offset=51), Name('result', Load(), lineno=222, col_offset=57)], Load(), lineno=222, col_offset=51), lineno=222, col_offset=21)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12)], [], lineno=216, col_offset=13)], lineno=192, col_offset=13)], lineno=156, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('build_post_data', arguments([Name('self', Param(), lineno=224, col_offset=24), Name('action', Param(), lineno=224, col_offset=30)], None, None, []), [Assign([Name('meta', Store(), lineno=227, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=227, col_offset=15), 'distribution', Load(), lineno=227, col_offset=15), 'metadata', Load(), lineno=227, col_offset=15), lineno=227, col_offset=8), Assign([Name('data', Store(), lineno=228, col_offset=8)], Dict([Str(':action', lineno=229, col_offset=12), Str('metadata_version', lineno=230, col_offset=12), Str('name', lineno=231, col_offset=12), Str('version', lineno=232, col_offset=12), Str('summary', lineno=233, col_offset=12), Str('home_page', lineno=234, col_offset=12), Str('author', lineno=235, col_offset=12), Str('author_email', lineno=236, col_offset=12), Str('license', lineno=237, col_offset=12), Str('description', lineno=238, col_offset=12), Str('keywords', lineno=239, col_offset=12), Str('platform', lineno=240, col_offset=12), Str('classifiers', lineno=241, col_offset=12), Str('download_url', lineno=242, col_offset=12), Str('provides', lineno=244, col_offset=12), Str('requires', lineno=245, col_offset=12), Str('obsoletes', lineno=246, col_offset=12)], [Name('action', Load(), lineno=229, col_offset=23), Str('1.0', lineno=230, col_offset=33), Call(Attribute(Name('meta', Load(), lineno=231, col_offset=20), 'get_name', Load(), lineno=231, col_offset=20), [], [], None, None, lineno=231, col_offset=20), Call(Attribute(Name('meta', Load(), lineno=232, col_offset=23), 'get_version', Load(), lineno=232, col_offset=23), [], [], None, None, lineno=232, col_offset=23), Call(Attribute(Name('meta', Load(), lineno=233, col_offset=23), 'get_description', Load(), lineno=233, col_offset=23), [], [], None, None, lineno=233, col_offset=23), Call(Attribute(Name('meta', Load(), lineno=234, col_offset=25), 'get_url', Load(), lineno=234, col_offset=25), [], [], None, None, lineno=234, col_offset=25), Call(Attribute(Name('meta', Load(), lineno=235, col_offset=22), 'get_contact', Load(), lineno=235, col_offset=22), [], [], None, None, lineno=235, col_offset=22), Call(Attribute(Name('meta', Load(), lineno=236, col_offset=28), 'get_contact_email', Load(), lineno=236, col_offset=28), [], [], None, None, lineno=236, col_offset=28), Call(Attribute(Name('meta', Load(), lineno=237, col_offset=23), 'get_licence', Load(), lineno=237, col_offset=23), [], [], None, None, lineno=237, col_offset=23), Call(Attribute(Name('meta', Load(), lineno=238, col_offset=27), 'get_long_description', Load(), lineno=238, col_offset=27), [], [], None, None, lineno=238, col_offset=27), Call(Attribute(Name('meta', Load(), lineno=239, col_offset=24), 'get_keywords', Load(), lineno=239, col_offset=24), [], [], None, None, lineno=239, col_offset=24), Call(Attribute(Name('meta', Load(), lineno=240, col_offset=24), 'get_platforms', Load(), lineno=240, col_offset=24), [], [], None, None, lineno=240, col_offset=24), Call(Attribute(Name('meta', Load(), lineno=241, col_offset=27), 'get_classifiers', Load(), lineno=241, col_offset=27), [], [], None, None, lineno=241, col_offset=27), Call(Attribute(Name('meta', Load(), lineno=242, col_offset=28), 'get_download_url', Load(), lineno=242, col_offset=28), [], [], None, None, lineno=242, col_offset=28), Call(Attribute(Name('meta', Load(), lineno=244, col_offset=24), 'get_provides', Load(), lineno=244, col_offset=24), [], [], None, None, lineno=244, col_offset=24), Call(Attribute(Name('meta', Load(), lineno=245, col_offset=24), 'get_requires', Load(), lineno=245, col_offset=24), [], [], None, None, lineno=245, col_offset=24), Call(Attribute(Name('meta', Load(), lineno=246, col_offset=25), 'get_obsoletes', Load(), lineno=246, col_offset=25), [], [], None, None, lineno=246, col_offset=25)], lineno=228, col_offset=15), lineno=228, col_offset=8), If(BoolOp(Or(), [Subscript(Name('data', Load(), lineno=248, col_offset=11), Index(Str('provides', lineno=248, col_offset=16)), Load(), lineno=248, col_offset=11), Subscript(Name('data', Load(), lineno=248, col_offset=31), Index(Str('requires', lineno=248, col_offset=36)), Load(), lineno=248, col_offset=31), Subscript(Name('data', Load(), lineno=248, col_offset=51), Index(Str('obsoletes', lineno=248, col_offset=56)), Load(), lineno=248, col_offset=51)], lineno=248, col_offset=11), [Assign([Subscript(Name('data', Load(), lineno=249, col_offset=12), Index(Str('metadata_version', lineno=249, col_offset=17)), Store(), lineno=249, col_offset=12)], Str('1.1', lineno=249, col_offset=39), lineno=249, col_offset=12)], [], lineno=248, col_offset=8), Return(Name('data', Load(), lineno=250, col_offset=15), lineno=250, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('post_to_server', arguments([Name('self', Param(), lineno=252, col_offset=23), Name('data', Param(), lineno=252, col_offset=29), Name('auth', Param(), lineno=252, col_offset=35)], None, None, [Name('None', Load(), lineno=252, col_offset=40)]), [Expr(Str(' Post a query to the server, and return a string response.\n        ', lineno=254, col_offset=-1), lineno=254, col_offset=-1), If(Compare(Str('name', lineno=255, col_offset=11), [In()], [Name('data', Load(), lineno=255, col_offset=21)], lineno=255, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=12), 'announce', Load(), lineno=256, col_offset=12), [BinOp(Str('Registering %s to %s', lineno=256, col_offset=26), Mod(), Tuple([Subscript(Name('data', Load(), lineno=256, col_offset=52), Index(Str('name', lineno=256, col_offset=57)), Load(), lineno=256, col_offset=52), Attribute(Name('self', Load(), lineno=257, col_offset=51), 'repository', Load(), lineno=257, col_offset=51)], Load(), lineno=256, col_offset=52), lineno=256, col_offset=26), Attribute(Name('log', Load(), lineno=258, col_offset=51), 'INFO', Load(), lineno=258, col_offset=51)], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=12)], [], lineno=255, col_offset=8), Assign([Name('boundary', Store(), lineno=260, col_offset=8)], Str('--------------GHSKFJDLGDS7543FJKLFHRE75642756743254', lineno=260, col_offset=19), lineno=260, col_offset=8), Assign([Name('sep_boundary', Store(), lineno=261, col_offset=8)], BinOp(Str('\n--', lineno=261, col_offset=23), Add(), Name('boundary', Load(), lineno=261, col_offset=32), lineno=261, col_offset=23), lineno=261, col_offset=8), Assign([Name('end_boundary', Store(), lineno=262, col_offset=8)], BinOp(Name('sep_boundary', Load(), lineno=262, col_offset=23), Add(), Str('--', lineno=262, col_offset=38), lineno=262, col_offset=23), lineno=262, col_offset=8), Assign([Name('body', Store(), lineno=263, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=263, col_offset=15), 'StringIO', Load(), lineno=263, col_offset=15), [], [], None, None, lineno=263, col_offset=15), lineno=263, col_offset=8), For(Tuple([Name('key', Store(), lineno=264, col_offset=12), Name('value', Store(), lineno=264, col_offset=17)], Store(), lineno=264, col_offset=12), Call(Attribute(Name('data', Load(), lineno=264, col_offset=26), 'items', Load(), lineno=264, col_offset=26), [], [], None, None, lineno=264, col_offset=26), [If(Compare(Call(Name('type', Load(), lineno=266, col_offset=15), [Name('value', Load(), lineno=266, col_offset=20)], [], None, None, lineno=266, col_offset=15), [NotIn()], [Tuple([Call(Name('type', Load(), lineno=266, col_offset=35), [List([], Load(), lineno=266, col_offset=40)], [], None, None, lineno=266, col_offset=35), Call(Name('type', Load(), lineno=266, col_offset=45), [Tuple([], Load(), lineno=266, col_offset=51)], [], None, None, lineno=266, col_offset=45)], Load(), lineno=266, col_offset=35)], lineno=266, col_offset=15), [Assign([Name('value', Store(), lineno=267, col_offset=16)], List([Name('value', Load(), lineno=267, col_offset=25)], Load(), lineno=267, col_offset=24), lineno=267, col_offset=16)], [], lineno=266, col_offset=12), For(Name('value', Store(), lineno=268, col_offset=16), Name('value', Load(), lineno=268, col_offset=25), [Expr(Call(Attribute(Name('body', Load(), lineno=269, col_offset=16), 'write', Load(), lineno=269, col_offset=16), [Name('sep_boundary', Load(), lineno=269, col_offset=27)], [], None, None, lineno=269, col_offset=16), lineno=269, col_offset=16), Expr(Call(Attribute(Name('body', Load(), lineno=270, col_offset=16), 'write', Load(), lineno=270, col_offset=16), [BinOp(Str('\nContent-Disposition: form-data; name="%s"', lineno=270, col_offset=27), Mod(), Name('key', Load(), lineno=270, col_offset=73), lineno=270, col_offset=27)], [], None, None, lineno=270, col_offset=16), lineno=270, col_offset=16), Expr(Call(Attribute(Name('body', Load(), lineno=271, col_offset=16), 'write', Load(), lineno=271, col_offset=16), [Str('\n\n', lineno=271, col_offset=27)], [], None, None, lineno=271, col_offset=16), lineno=271, col_offset=16), Expr(Call(Attribute(Name('body', Load(), lineno=272, col_offset=16), 'write', Load(), lineno=272, col_offset=16), [Name('value', Load(), lineno=272, col_offset=27)], [], None, None, lineno=272, col_offset=16), lineno=272, col_offset=16), If(BoolOp(And(), [Name('value', Load(), lineno=273, col_offset=19), Compare(Subscript(Name('value', Load(), lineno=273, col_offset=29), Index(Num(-1, lineno=273, col_offset=36)), Load(), lineno=273, col_offset=29), [Eq()], [Str('\r', lineno=273, col_offset=42)], lineno=273, col_offset=29)], lineno=273, col_offset=19), [Expr(Call(Attribute(Name('body', Load(), lineno=274, col_offset=20), 'write', Load(), lineno=274, col_offset=20), [Str('\n', lineno=274, col_offset=31)], [], None, None, lineno=274, col_offset=20), lineno=274, col_offset=20)], [], lineno=273, col_offset=16)], [], lineno=268, col_offset=12)], [], lineno=264, col_offset=8), Expr(Call(Attribute(Name('body', Load(), lineno=275, col_offset=8), 'write', Load(), lineno=275, col_offset=8), [Name('end_boundary', Load(), lineno=275, col_offset=19)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Expr(Call(Attribute(Name('body', Load(), lineno=276, col_offset=8), 'write', Load(), lineno=276, col_offset=8), [Str('\n', lineno=276, col_offset=19)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Assign([Name('body', Store(), lineno=277, col_offset=8)], Call(Attribute(Name('body', Load(), lineno=277, col_offset=15), 'getvalue', Load(), lineno=277, col_offset=15), [], [], None, None, lineno=277, col_offset=15), lineno=277, col_offset=8), Assign([Name('headers', Store(), lineno=280, col_offset=8)], Dict([Str('Content-type', lineno=281, col_offset=12), Str('Content-length', lineno=282, col_offset=12)], [BinOp(Str('multipart/form-data; boundary=%s; charset=utf-8', lineno=281, col_offset=28), Mod(), Name('boundary', Load(), lineno=281, col_offset=78), lineno=281, col_offset=28), Call(Name('str', Load(), lineno=282, col_offset=30), [Call(Name('len', Load(), lineno=282, col_offset=34), [Name('body', Load(), lineno=282, col_offset=38)], [], None, None, lineno=282, col_offset=34)], [], None, None, lineno=282, col_offset=30)], lineno=280, col_offset=18), lineno=280, col_offset=8), Assign([Name('req', Store(), lineno=284, col_offset=8)], Call(Attribute(Name('urllib2', Load(), lineno=284, col_offset=14), 'Request', Load(), lineno=284, col_offset=14), [Attribute(Name('self', Load(), lineno=284, col_offset=30), 'repository', Load(), lineno=284, col_offset=30), Name('body', Load(), lineno=284, col_offset=47), Name('headers', Load(), lineno=284, col_offset=53)], [], None, None, lineno=284, col_offset=14), lineno=284, col_offset=8), Assign([Name('opener', Store(), lineno=287, col_offset=8)], Call(Attribute(Name('urllib2', Load(), lineno=287, col_offset=17), 'build_opener', Load(), lineno=287, col_offset=17), [Call(Attribute(Name('urllib2', Load(), lineno=288, col_offset=12), 'HTTPBasicAuthHandler', Load(), lineno=288, col_offset=12), [], [keyword('password_mgr', Name('auth', Load(), lineno=288, col_offset=54))], None, None, lineno=288, col_offset=12)], [], None, None, lineno=287, col_offset=17), lineno=287, col_offset=8), Assign([Name('data', Store(), lineno=290, col_offset=8)], Str('', lineno=290, col_offset=15), lineno=290, col_offset=8), TryExcept([Assign([Name('result', Store(), lineno=292, col_offset=12)], Call(Attribute(Name('opener', Load(), lineno=292, col_offset=21), 'open', Load(), lineno=292, col_offset=21), [Name('req', Load(), lineno=292, col_offset=33)], [], None, None, lineno=292, col_offset=21), lineno=292, col_offset=12)], [ExceptHandler(Attribute(Name('urllib2', Load(), lineno=293, col_offset=15), 'HTTPError', Load(), lineno=293, col_offset=15), Name('e', Store(), lineno=293, col_offset=34), [If(Attribute(Name('self', Load(), lineno=294, col_offset=15), 'show_response', Load(), lineno=294, col_offset=15), [Assign([Name('data', Store(), lineno=295, col_offset=16)], Call(Attribute(Attribute(Name('e', Load(), lineno=295, col_offset=23), 'fp', Load(), lineno=295, col_offset=23), 'read', Load(), lineno=295, col_offset=23), [], [], None, None, lineno=295, col_offset=23), lineno=295, col_offset=16)], [], lineno=294, col_offset=12), Assign([Name('result', Store(), lineno=296, col_offset=12)], Tuple([Attribute(Name('e', Load(), lineno=296, col_offset=21), 'code', Load(), lineno=296, col_offset=21), Attribute(Name('e', Load(), lineno=296, col_offset=29), 'msg', Load(), lineno=296, col_offset=29)], Load(), lineno=296, col_offset=21), lineno=296, col_offset=12)], lineno=293, col_offset=8), ExceptHandler(Attribute(Name('urllib2', Load(), lineno=297, col_offset=15), 'URLError', Load(), lineno=297, col_offset=15), Name('e', Store(), lineno=297, col_offset=33), [Assign([Name('result', Store(), lineno=298, col_offset=12)], Tuple([Num(500, lineno=298, col_offset=21), Call(Name('str', Load(), lineno=298, col_offset=26), [Name('e', Load(), lineno=298, col_offset=30)], [], None, None, lineno=298, col_offset=26)], Load(), lineno=298, col_offset=21), lineno=298, col_offset=12)], lineno=297, col_offset=8)], [If(Attribute(Name('self', Load(), lineno=300, col_offset=15), 'show_response', Load(), lineno=300, col_offset=15), [Assign([Name('data', Store(), lineno=301, col_offset=16)], Call(Attribute(Name('result', Load(), lineno=301, col_offset=23), 'read', Load(), lineno=301, col_offset=23), [], [], None, None, lineno=301, col_offset=23), lineno=301, col_offset=16)], [], lineno=300, col_offset=12), Assign([Name('result', Store(), lineno=302, col_offset=12)], Tuple([Num(200, lineno=302, col_offset=21), Str('OK', lineno=302, col_offset=26)], Load(), lineno=302, col_offset=21), lineno=302, col_offset=12)], lineno=291, col_offset=8), If(Attribute(Name('self', Load(), lineno=303, col_offset=11), 'show_response', Load(), lineno=303, col_offset=11), [Assign([Name('dashes', Store(), lineno=304, col_offset=12)], BinOp(Str('-', lineno=304, col_offset=21), Mult(), Num(75, lineno=304, col_offset=27), lineno=304, col_offset=21), lineno=304, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=12), 'announce', Load(), lineno=305, col_offset=12), [BinOp(Str('%s%s%s', lineno=305, col_offset=26), Mod(), Tuple([Name('dashes', Load(), lineno=305, col_offset=38), Name('data', Load(), lineno=305, col_offset=46), Name('dashes', Load(), lineno=305, col_offset=52)], Load(), lineno=305, col_offset=38), lineno=305, col_offset=26)], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12)], [], lineno=303, col_offset=8), Return(Name('result', Load(), lineno=307, col_offset=15), lineno=307, col_offset=8)], [], lineno=252, col_offset=4)], [], lineno=19, col_offset=0)])
