Module([Expr(Str("Fixer for dict methods.\n\nd.keys() -> list(d.keys())\nd.items() -> list(d.items())\nd.values() -> list(d.values())\n\nd.iterkeys() -> iter(d.keys())\nd.iteritems() -> iter(d.items())\nd.itervalues() -> iter(d.values())\n\nd.viewkeys() -> d.keys()\nd.viewitems() -> d.items()\nd.viewvalues() -> d.values()\n\nExcept in certain very specific contexts: the iter() can be dropped\nwhen the context is list(), sorted(), iter() or for...in; the list()\ncan be dropped when the context is list() or sorted() (but not iter()\nor for...in!). Special contexts that apply to both: list(), sorted(), tuple()\nset(), any(), all(), sum().\n\nNote: iter(d.keys()) could be written as iter(d) but since the\noriginal d.iterkeys() was also redundant we don't fix this.  And there\nare (rare) contexts where it makes a difference (e.g. when passing it\nas an argument to a function that introspects the argument).\n", lineno=28, col_offset=-1), lineno=28, col_offset=-1), ImportFrom(None, [alias('pytree', None)], 2, lineno=31, col_offset=0), ImportFrom(None, [alias('patcomp', None)], 2, lineno=32, col_offset=0), ImportFrom('pgen2', [alias('token', None)], 2, lineno=33, col_offset=0), ImportFrom(None, [alias('fixer_base', None)], 2, lineno=34, col_offset=0), ImportFrom('fixer_util', [alias('Name', None), alias('Call', None), alias('LParen', None), alias('RParen', None), alias('ArgList', None), alias('Dot', None)], 2, lineno=35, col_offset=0), ImportFrom(None, [alias('fixer_util', None)], 2, lineno=36, col_offset=0), Assign([Name('iter_exempt', Store(), lineno=39, col_offset=0)], BinOp(Attribute(Name('fixer_util', Load(), lineno=39, col_offset=14), 'consuming_calls', Load(), lineno=39, col_offset=14), BitOr(), Call(Name('set', Load(), lineno=39, col_offset=43), [List([Str('iter', lineno=39, col_offset=48)], Load(), lineno=39, col_offset=47)], [], None, None, lineno=39, col_offset=43), lineno=39, col_offset=14), lineno=39, col_offset=0), ClassDef('FixDict', [Attribute(Name('fixer_base', Load(), lineno=42, col_offset=14), 'BaseFix', Load(), lineno=42, col_offset=14)], [Assign([Name('BM_compatible', Store(), lineno=43, col_offset=4)], Name('True', Load(), lineno=43, col_offset=20), lineno=43, col_offset=4), Assign([Name('PATTERN', Store(), lineno=45, col_offset=4)], Str("\n    power< head=any+\n         trailer< '.' method=('keys'|'items'|'values'|\n                              'iterkeys'|'iteritems'|'itervalues'|\n                              'viewkeys'|'viewitems'|'viewvalues') >\n         parens=trailer< '(' ')' >\n         tail=any*\n    >\n    ", lineno=53, col_offset=-1), lineno=45, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=55, col_offset=18), Name('node', Param(), lineno=55, col_offset=24), Name('results', Param(), lineno=55, col_offset=30)], None, None, []), [Assign([Name('head', Store(), lineno=56, col_offset=8)], Subscript(Name('results', Load(), lineno=56, col_offset=15), Index(Str('head', lineno=56, col_offset=23)), Load(), lineno=56, col_offset=15), lineno=56, col_offset=8), Assign([Name('method', Store(), lineno=57, col_offset=8)], Subscript(Subscript(Name('results', Load(), lineno=57, col_offset=17), Index(Str('method', lineno=57, col_offset=25)), Load(), lineno=57, col_offset=17), Index(Num(0, lineno=57, col_offset=35)), Load(), lineno=57, col_offset=17), lineno=57, col_offset=8), Assign([Name('tail', Store(), lineno=58, col_offset=8)], Subscript(Name('results', Load(), lineno=58, col_offset=15), Index(Str('tail', lineno=58, col_offset=23)), Load(), lineno=58, col_offset=15), lineno=58, col_offset=8), Assign([Name('syms', Store(), lineno=59, col_offset=8)], Attribute(Name('self', Load(), lineno=59, col_offset=15), 'syms', Load(), lineno=59, col_offset=15), lineno=59, col_offset=8), Assign([Name('method_name', Store(), lineno=60, col_offset=8)], Attribute(Name('method', Load(), lineno=60, col_offset=22), 'value', Load(), lineno=60, col_offset=22), lineno=60, col_offset=8), Assign([Name('isiter', Store(), lineno=61, col_offset=8)], Call(Attribute(Name('method_name', Load(), lineno=61, col_offset=17), 'startswith', Load(), lineno=61, col_offset=17), [Str(u'iter', lineno=61, col_offset=40)], [], None, None, lineno=61, col_offset=17), lineno=61, col_offset=8), Assign([Name('isview', Store(), lineno=62, col_offset=8)], Call(Attribute(Name('method_name', Load(), lineno=62, col_offset=17), 'startswith', Load(), lineno=62, col_offset=17), [Str(u'view', lineno=62, col_offset=40)], [], None, None, lineno=62, col_offset=17), lineno=62, col_offset=8), If(BoolOp(Or(), [Name('isiter', Load(), lineno=63, col_offset=11), Name('isview', Load(), lineno=63, col_offset=21)], lineno=63, col_offset=11), [Assign([Name('method_name', Store(), lineno=64, col_offset=12)], Subscript(Name('method_name', Load(), lineno=64, col_offset=26), Slice(Num(4, lineno=64, col_offset=38), None, None), Load(), lineno=64, col_offset=26), lineno=64, col_offset=12)], [], lineno=63, col_offset=8), Assert(Compare(Name('method_name', Load(), lineno=65, col_offset=15), [In()], [Tuple([Str(u'keys', lineno=65, col_offset=31), Str(u'items', lineno=65, col_offset=40), Str(u'values', lineno=65, col_offset=50)], Load(), lineno=65, col_offset=31)], lineno=65, col_offset=15), Call(Name('repr', Load(), lineno=65, col_offset=62), [Name('method', Load(), lineno=65, col_offset=67)], [], None, None, lineno=65, col_offset=62), lineno=65, col_offset=8), Assign([Name('head', Store(), lineno=66, col_offset=8)], ListComp(Call(Attribute(Name('n', Load(), lineno=66, col_offset=16), 'clone', Load(), lineno=66, col_offset=16), [], [], None, None, lineno=66, col_offset=16), [comprehension(Name('n', Store(), lineno=66, col_offset=30), Name('head', Load(), lineno=66, col_offset=35), [])], lineno=66, col_offset=16), lineno=66, col_offset=8), Assign([Name('tail', Store(), lineno=67, col_offset=8)], ListComp(Call(Attribute(Name('n', Load(), lineno=67, col_offset=16), 'clone', Load(), lineno=67, col_offset=16), [], [], None, None, lineno=67, col_offset=16), [comprehension(Name('n', Store(), lineno=67, col_offset=30), Name('tail', Load(), lineno=67, col_offset=35), [])], lineno=67, col_offset=16), lineno=67, col_offset=8), Assign([Name('special', Store(), lineno=68, col_offset=8)], BoolOp(And(), [UnaryOp(Not(), Name('tail', Load(), lineno=68, col_offset=22), lineno=68, col_offset=18), Call(Attribute(Name('self', Load(), lineno=68, col_offset=31), 'in_special_context', Load(), lineno=68, col_offset=31), [Name('node', Load(), lineno=68, col_offset=55), Name('isiter', Load(), lineno=68, col_offset=61)], [], None, None, lineno=68, col_offset=31)], lineno=68, col_offset=18), lineno=68, col_offset=8), Assign([Name('args', Store(), lineno=69, col_offset=8)], BinOp(Name('head', Load(), lineno=69, col_offset=15), Add(), List([Call(Attribute(Name('pytree', Load(), lineno=69, col_offset=23), 'Node', Load(), lineno=69, col_offset=23), [Attribute(Name('syms', Load(), lineno=69, col_offset=35), 'trailer', Load(), lineno=69, col_offset=35), List([Call(Name('Dot', Load(), lineno=70, col_offset=36), [], [], None, None, lineno=70, col_offset=36), Call(Name('Name', Load(), lineno=71, col_offset=36), [Name('method_name', Load(), lineno=71, col_offset=41)], [keyword('prefix', Attribute(Name('method', Load(), lineno=72, col_offset=48), 'prefix', Load(), lineno=72, col_offset=48))], None, None, lineno=71, col_offset=36)], Load(), lineno=70, col_offset=35)], [], None, None, lineno=69, col_offset=23), Call(Attribute(Subscript(Name('results', Load(), lineno=73, col_offset=23), Index(Str('parens', lineno=73, col_offset=31)), Load(), lineno=73, col_offset=23), 'clone', Load(), lineno=73, col_offset=23), [], [], None, None, lineno=73, col_offset=23)], Load(), lineno=69, col_offset=22), lineno=69, col_offset=15), lineno=69, col_offset=8), Assign([Name('new', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('pytree', Load(), lineno=74, col_offset=14), 'Node', Load(), lineno=74, col_offset=14), [Attribute(Name('syms', Load(), lineno=74, col_offset=26), 'power', Load(), lineno=74, col_offset=26), Name('args', Load(), lineno=74, col_offset=38)], [], None, None, lineno=74, col_offset=14), lineno=74, col_offset=8), If(UnaryOp(Not(), BoolOp(Or(), [Name('special', Load(), lineno=75, col_offset=16), Name('isview', Load(), lineno=75, col_offset=27)], lineno=75, col_offset=16), lineno=75, col_offset=11), [Assign([Attribute(Name('new', Load(), lineno=76, col_offset=12), 'prefix', Store(), lineno=76, col_offset=12)], Str(u'', lineno=76, col_offset=25), lineno=76, col_offset=12), Assign([Name('new', Store(), lineno=77, col_offset=12)], Call(Name('Call', Load(), lineno=77, col_offset=18), [Call(Name('Name', Load(), lineno=77, col_offset=23), [IfExp(Name('isiter', Load(), lineno=77, col_offset=39), Str(u'iter', lineno=77, col_offset=28), Str(u'list', lineno=77, col_offset=51), lineno=77, col_offset=28)], [], None, None, lineno=77, col_offset=23), List([Name('new', Load(), lineno=77, col_offset=62)], Load(), lineno=77, col_offset=61)], [], None, None, lineno=77, col_offset=18), lineno=77, col_offset=12)], [], lineno=75, col_offset=8), If(Name('tail', Load(), lineno=78, col_offset=11), [Assign([Name('new', Store(), lineno=79, col_offset=12)], Call(Attribute(Name('pytree', Load(), lineno=79, col_offset=18), 'Node', Load(), lineno=79, col_offset=18), [Attribute(Name('syms', Load(), lineno=79, col_offset=30), 'power', Load(), lineno=79, col_offset=30), BinOp(List([Name('new', Load(), lineno=79, col_offset=43)], Load(), lineno=79, col_offset=42), Add(), Name('tail', Load(), lineno=79, col_offset=50), lineno=79, col_offset=42)], [], None, None, lineno=79, col_offset=18), lineno=79, col_offset=12)], [], lineno=78, col_offset=8), Assign([Attribute(Name('new', Load(), lineno=80, col_offset=8), 'prefix', Store(), lineno=80, col_offset=8)], Attribute(Name('node', Load(), lineno=80, col_offset=21), 'prefix', Load(), lineno=80, col_offset=21), lineno=80, col_offset=8), Return(Name('new', Load(), lineno=81, col_offset=15), lineno=81, col_offset=8)], [], lineno=55, col_offset=4), Assign([Name('P1', Store(), lineno=83, col_offset=4)], Str("power< func=NAME trailer< '(' node=any ')' > any* >", lineno=83, col_offset=9), lineno=83, col_offset=4), Assign([Name('p1', Store(), lineno=84, col_offset=4)], Call(Attribute(Name('patcomp', Load(), lineno=84, col_offset=9), 'compile_pattern', Load(), lineno=84, col_offset=9), [Name('P1', Load(), lineno=84, col_offset=33)], [], None, None, lineno=84, col_offset=9), lineno=84, col_offset=4), Assign([Name('P2', Store(), lineno=86, col_offset=4)], Str("for_stmt< 'for' any 'in' node=any ':' any* >\n            | comp_for< 'for' any 'in' node=any any* >\n         ", lineno=88, col_offset=-1), lineno=86, col_offset=4), Assign([Name('p2', Store(), lineno=89, col_offset=4)], Call(Attribute(Name('patcomp', Load(), lineno=89, col_offset=9), 'compile_pattern', Load(), lineno=89, col_offset=9), [Name('P2', Load(), lineno=89, col_offset=33)], [], None, None, lineno=89, col_offset=9), lineno=89, col_offset=4), FunctionDef('in_special_context', arguments([Name('self', Param(), lineno=91, col_offset=27), Name('node', Param(), lineno=91, col_offset=33), Name('isiter', Param(), lineno=91, col_offset=39)], None, None, []), [If(Compare(Attribute(Name('node', Load(), lineno=92, col_offset=11), 'parent', Load(), lineno=92, col_offset=11), [Is()], [Name('None', Load(), lineno=92, col_offset=26)], lineno=92, col_offset=11), [Return(Name('False', Load(), lineno=93, col_offset=19), lineno=93, col_offset=12)], [], lineno=92, col_offset=8), Assign([Name('results', Store(), lineno=94, col_offset=8)], Dict([], [], lineno=94, col_offset=18), lineno=94, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Attribute(Name('node', Load(), lineno=95, col_offset=12), 'parent', Load(), lineno=95, col_offset=12), 'parent', Load(), lineno=95, col_offset=12), [IsNot()], [Name('None', Load(), lineno=95, col_offset=38)], lineno=95, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=96, col_offset=15), 'p1', Load(), lineno=96, col_offset=15), 'match', Load(), lineno=96, col_offset=15), [Attribute(Attribute(Name('node', Load(), lineno=96, col_offset=29), 'parent', Load(), lineno=96, col_offset=29), 'parent', Load(), lineno=96, col_offset=29), Name('results', Load(), lineno=96, col_offset=49)], [], None, None, lineno=96, col_offset=15), Compare(Subscript(Name('results', Load(), lineno=97, col_offset=15), Index(Str('node', lineno=97, col_offset=23)), Load(), lineno=97, col_offset=15), [Is()], [Name('node', Load(), lineno=97, col_offset=34)], lineno=97, col_offset=15)], lineno=95, col_offset=12), [If(Name('isiter', Load(), lineno=98, col_offset=15), [Return(Compare(Attribute(Subscript(Name('results', Load(), lineno=100, col_offset=23), Index(Str('func', lineno=100, col_offset=31)), Load(), lineno=100, col_offset=23), 'value', Load(), lineno=100, col_offset=23), [In()], [Name('iter_exempt', Load(), lineno=100, col_offset=48)], lineno=100, col_offset=23), lineno=100, col_offset=16)], [Return(Compare(Attribute(Subscript(Name('results', Load(), lineno=103, col_offset=23), Index(Str('func', lineno=103, col_offset=31)), Load(), lineno=103, col_offset=23), 'value', Load(), lineno=103, col_offset=23), [In()], [Attribute(Name('fixer_util', Load(), lineno=103, col_offset=48), 'consuming_calls', Load(), lineno=103, col_offset=48)], lineno=103, col_offset=23), lineno=103, col_offset=16)], lineno=98, col_offset=12)], [], lineno=95, col_offset=8), If(UnaryOp(Not(), Name('isiter', Load(), lineno=104, col_offset=15), lineno=104, col_offset=11), [Return(Name('False', Load(), lineno=105, col_offset=19), lineno=105, col_offset=12)], [], lineno=104, col_offset=8), Return(BoolOp(And(), [Call(Attribute(Attribute(Name('self', Load(), lineno=107, col_offset=15), 'p2', Load(), lineno=107, col_offset=15), 'match', Load(), lineno=107, col_offset=15), [Attribute(Name('node', Load(), lineno=107, col_offset=29), 'parent', Load(), lineno=107, col_offset=29), Name('results', Load(), lineno=107, col_offset=42)], [], None, None, lineno=107, col_offset=15), Compare(Subscript(Name('results', Load(), lineno=107, col_offset=55), Index(Str('node', lineno=107, col_offset=63)), Load(), lineno=107, col_offset=55), [Is()], [Name('node', Load(), lineno=107, col_offset=74)], lineno=107, col_offset=55)], lineno=107, col_offset=15), lineno=107, col_offset=8)], [], lineno=91, col_offset=4)], [], lineno=42, col_offset=0)])
