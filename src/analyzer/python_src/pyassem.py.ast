Module([Expr(Str('A flow graph representation for Python bytecode', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('dis', None)], lineno=3, col_offset=0), Import([alias('types', None)], lineno=4, col_offset=0), Import([alias('sys', None)], lineno=5, col_offset=0), ImportFrom('compiler', [alias('misc', None)], 0, lineno=7, col_offset=0), ImportFrom('compiler.consts', [alias('CO_OPTIMIZED', None), alias('CO_NEWLOCALS', None), alias('CO_VARARGS', None), alias('CO_VARKEYWORDS', None)], 0, lineno=8, col_offset=0), ClassDef('FlowGraph', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=12, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=13, col_offset=8), 'current', Store(), lineno=13, col_offset=8), Attribute(Name('self', Load(), lineno=13, col_offset=23), 'entry', Store(), lineno=13, col_offset=23)], Call(Name('Block', Load(), lineno=13, col_offset=36), [], [], None, None, lineno=13, col_offset=36), lineno=13, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=14, col_offset=8), 'exit', Store(), lineno=14, col_offset=8)], Call(Name('Block', Load(), lineno=14, col_offset=20), [Str('exit', lineno=14, col_offset=26)], [], None, None, lineno=14, col_offset=20), lineno=14, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=15, col_offset=8), 'blocks', Store(), lineno=15, col_offset=8)], Call(Attribute(Name('misc', Load(), lineno=15, col_offset=22), 'Set', Load(), lineno=15, col_offset=22), [], [], None, None, lineno=15, col_offset=22), lineno=15, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'blocks', Load(), lineno=16, col_offset=8), 'add', Load(), lineno=16, col_offset=8), [Attribute(Name('self', Load(), lineno=16, col_offset=24), 'entry', Load(), lineno=16, col_offset=24)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'blocks', Load(), lineno=17, col_offset=8), 'add', Load(), lineno=17, col_offset=8), [Attribute(Name('self', Load(), lineno=17, col_offset=24), 'exit', Load(), lineno=17, col_offset=24)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('startBlock', arguments([Name('self', Param(), lineno=19, col_offset=19), Name('block', Param(), lineno=19, col_offset=25)], None, None, []), [If(Attribute(Name('self', Load(), lineno=20, col_offset=11), '_debug', Load(), lineno=20, col_offset=11), [If(Attribute(Name('self', Load(), lineno=21, col_offset=15), 'current', Load(), lineno=21, col_offset=15), [Print(None, [Str('end', lineno=22, col_offset=22), Call(Name('repr', Load(), lineno=22, col_offset=29), [Attribute(Name('self', Load(), lineno=22, col_offset=34), 'current', Load(), lineno=22, col_offset=34)], [], None, None, lineno=22, col_offset=29)], True, lineno=22, col_offset=16), Print(None, [Str('    next', lineno=23, col_offset=22), Attribute(Attribute(Name('self', Load(), lineno=23, col_offset=34), 'current', Load(), lineno=23, col_offset=34), 'next', Load(), lineno=23, col_offset=34)], True, lineno=23, col_offset=16), Print(None, [Str('    prev', lineno=24, col_offset=22), Attribute(Attribute(Name('self', Load(), lineno=24, col_offset=34), 'current', Load(), lineno=24, col_offset=34), 'prev', Load(), lineno=24, col_offset=34)], True, lineno=24, col_offset=16), Print(None, [Str('   ', lineno=25, col_offset=22), Call(Attribute(Attribute(Name('self', Load(), lineno=25, col_offset=29), 'current', Load(), lineno=25, col_offset=29), 'get_children', Load(), lineno=25, col_offset=29), [], [], None, None, lineno=25, col_offset=29)], True, lineno=25, col_offset=16)], [], lineno=21, col_offset=12), Print(None, [Call(Name('repr', Load(), lineno=26, col_offset=18), [Name('block', Load(), lineno=26, col_offset=23)], [], None, None, lineno=26, col_offset=18)], True, lineno=26, col_offset=12)], [], lineno=20, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'current', Store(), lineno=27, col_offset=8)], Name('block', Load(), lineno=27, col_offset=23), lineno=27, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('nextBlock', arguments([Name('self', Param(), lineno=29, col_offset=18), Name('block', Param(), lineno=29, col_offset=24)], None, None, [Name('None', Load(), lineno=29, col_offset=30)]), [If(Compare(Name('block', Load(), lineno=41, col_offset=11), [Is()], [Name('None', Load(), lineno=41, col_offset=20)], lineno=41, col_offset=11), [Assign([Name('block', Store(), lineno=42, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=42, col_offset=20), 'newBlock', Load(), lineno=42, col_offset=20), [], [], None, None, lineno=42, col_offset=20), lineno=42, col_offset=12)], [], lineno=41, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'current', Load(), lineno=50, col_offset=8), 'addNext', Load(), lineno=50, col_offset=8), [Name('block', Load(), lineno=50, col_offset=29)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'startBlock', Load(), lineno=51, col_offset=8), [Name('block', Load(), lineno=51, col_offset=24)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('newBlock', arguments([Name('self', Param(), lineno=53, col_offset=17)], None, None, []), [Assign([Name('b', Store(), lineno=54, col_offset=8)], Call(Name('Block', Load(), lineno=54, col_offset=12), [], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'blocks', Load(), lineno=55, col_offset=8), 'add', Load(), lineno=55, col_offset=8), [Name('b', Load(), lineno=55, col_offset=24)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Return(Name('b', Load(), lineno=56, col_offset=15), lineno=56, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('startExitBlock', arguments([Name('self', Param(), lineno=58, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'startBlock', Load(), lineno=59, col_offset=8), [Attribute(Name('self', Load(), lineno=59, col_offset=24), 'exit', Load(), lineno=59, col_offset=24)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), Assign([Name('_debug', Store(), lineno=61, col_offset=4)], Num(0, lineno=61, col_offset=13), lineno=61, col_offset=4), FunctionDef('_enable_debug', arguments([Name('self', Param(), lineno=63, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=64, col_offset=8), '_debug', Store(), lineno=64, col_offset=8)], Num(1, lineno=64, col_offset=22), lineno=64, col_offset=8)], [], lineno=63, col_offset=4), FunctionDef('_disable_debug', arguments([Name('self', Param(), lineno=66, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=67, col_offset=8), '_debug', Store(), lineno=67, col_offset=8)], Num(0, lineno=67, col_offset=22), lineno=67, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('emit', arguments([Name('self', Param(), lineno=69, col_offset=13)], 'inst', None, []), [If(Attribute(Name('self', Load(), lineno=70, col_offset=11), '_debug', Load(), lineno=70, col_offset=11), [Print(None, [Str('\t', lineno=71, col_offset=18), Name('inst', Load(), lineno=71, col_offset=24)], True, lineno=71, col_offset=12)], [], lineno=70, col_offset=8), If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=72, col_offset=11), [Name('inst', Load(), lineno=72, col_offset=15)], [], None, None, lineno=72, col_offset=11), [Eq()], [Num(2, lineno=72, col_offset=24)], lineno=72, col_offset=11), Call(Name('isinstance', Load(), lineno=72, col_offset=30), [Subscript(Name('inst', Load(), lineno=72, col_offset=41), Index(Num(1, lineno=72, col_offset=46)), Load(), lineno=72, col_offset=41), Name('Block', Load(), lineno=72, col_offset=50)], [], None, None, lineno=72, col_offset=30)], lineno=72, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=73, col_offset=12), 'current', Load(), lineno=73, col_offset=12), 'addOutEdge', Load(), lineno=73, col_offset=12), [Subscript(Name('inst', Load(), lineno=73, col_offset=36), Index(Num(1, lineno=73, col_offset=41)), Load(), lineno=73, col_offset=36)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12)], [], lineno=72, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'current', Load(), lineno=74, col_offset=8), 'emit', Load(), lineno=74, col_offset=8), [Name('inst', Load(), lineno=74, col_offset=26)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('getBlocksInOrder', arguments([Name('self', Param(), lineno=76, col_offset=25)], None, None, []), [Expr(Str('Return the blocks in reverse postorder\n\n        i.e. each node appears before all of its successors\n        ', lineno=80, col_offset=-1), lineno=80, col_offset=-1), Assign([Name('order', Store(), lineno=81, col_offset=8)], Call(Name('order_blocks', Load(), lineno=81, col_offset=16), [Attribute(Name('self', Load(), lineno=81, col_offset=29), 'entry', Load(), lineno=81, col_offset=29), Attribute(Name('self', Load(), lineno=81, col_offset=41), 'exit', Load(), lineno=81, col_offset=41)], [], None, None, lineno=81, col_offset=16), lineno=81, col_offset=8), Return(Name('order', Load(), lineno=82, col_offset=15), lineno=82, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('getBlocks', arguments([Name('self', Param(), lineno=84, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=85, col_offset=15), 'blocks', Load(), lineno=85, col_offset=15), 'elements', Load(), lineno=85, col_offset=15), [], [], None, None, lineno=85, col_offset=15), lineno=85, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('getRoot', arguments([Name('self', Param(), lineno=87, col_offset=16)], None, None, []), [Expr(Str('Return nodes appropriate for use with dominator', lineno=88, col_offset=8), lineno=88, col_offset=8), Return(Attribute(Name('self', Load(), lineno=89, col_offset=15), 'entry', Load(), lineno=89, col_offset=15), lineno=89, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('getContainedGraphs', arguments([Name('self', Param(), lineno=91, col_offset=27)], None, None, []), [Assign([Name('l', Store(), lineno=92, col_offset=8)], List([], Load(), lineno=92, col_offset=12), lineno=92, col_offset=8), For(Name('b', Store(), lineno=93, col_offset=12), Call(Attribute(Name('self', Load(), lineno=93, col_offset=17), 'getBlocks', Load(), lineno=93, col_offset=17), [], [], None, None, lineno=93, col_offset=17), [Expr(Call(Attribute(Name('l', Load(), lineno=94, col_offset=12), 'extend', Load(), lineno=94, col_offset=12), [Call(Attribute(Name('b', Load(), lineno=94, col_offset=21), 'getContainedGraphs', Load(), lineno=94, col_offset=21), [], [], None, None, lineno=94, col_offset=21)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12)], [], lineno=93, col_offset=8), Return(Name('l', Load(), lineno=95, col_offset=15), lineno=95, col_offset=8)], [], lineno=91, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('order_blocks', arguments([Name('start_block', Param(), lineno=98, col_offset=17), Name('exit_block', Param(), lineno=98, col_offset=30)], None, None, []), [Expr(Str('Order blocks so that they are emitted in the right order', lineno=99, col_offset=4), lineno=99, col_offset=4), Assign([Name('order', Store(), lineno=105, col_offset=4)], List([], Load(), lineno=105, col_offset=12), lineno=105, col_offset=4), Assign([Name('remaining', Store(), lineno=108, col_offset=4)], Call(Name('set', Load(), lineno=108, col_offset=16), [], [], None, None, lineno=108, col_offset=16), lineno=108, col_offset=4), Assign([Name('todo', Store(), lineno=109, col_offset=4)], List([Name('start_block', Load(), lineno=109, col_offset=12)], Load(), lineno=109, col_offset=11), lineno=109, col_offset=4), While(Name('todo', Load(), lineno=110, col_offset=10), [Assign([Name('b', Store(), lineno=111, col_offset=8)], Call(Attribute(Name('todo', Load(), lineno=111, col_offset=12), 'pop', Load(), lineno=111, col_offset=12), [], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=8), If(Compare(Name('b', Load(), lineno=112, col_offset=11), [In()], [Name('remaining', Load(), lineno=112, col_offset=16)], lineno=112, col_offset=11), [Continue( lineno=113, col_offset=12)], [], lineno=112, col_offset=8), Expr(Call(Attribute(Name('remaining', Load(), lineno=114, col_offset=8), 'add', Load(), lineno=114, col_offset=8), [Name('b', Load(), lineno=114, col_offset=22)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), For(Name('c', Store(), lineno=115, col_offset=12), Call(Attribute(Name('b', Load(), lineno=115, col_offset=17), 'get_children', Load(), lineno=115, col_offset=17), [], [], None, None, lineno=115, col_offset=17), [If(Compare(Name('c', Load(), lineno=116, col_offset=15), [NotIn()], [Name('remaining', Load(), lineno=116, col_offset=24)], lineno=116, col_offset=15), [Expr(Call(Attribute(Name('todo', Load(), lineno=117, col_offset=16), 'append', Load(), lineno=117, col_offset=16), [Name('c', Load(), lineno=117, col_offset=28)], [], None, None, lineno=117, col_offset=16), lineno=117, col_offset=16)], [], lineno=116, col_offset=12)], [], lineno=115, col_offset=8)], [], lineno=110, col_offset=4), Assign([Name('dominators', Store(), lineno=121, col_offset=4)], Dict([], [], lineno=121, col_offset=17), lineno=121, col_offset=4), For(Name('b', Store(), lineno=122, col_offset=8), Name('remaining', Load(), lineno=122, col_offset=13), [If(BoolOp(And(), [Name('__debug__', Load(), lineno=123, col_offset=11), Attribute(Name('b', Load(), lineno=123, col_offset=25), 'next', Load(), lineno=123, col_offset=25)], lineno=123, col_offset=11), [Assert(Compare(Name('b', Load(), lineno=124, col_offset=19), [Is()], [Subscript(Attribute(Subscript(Attribute(Name('b', Load(), lineno=124, col_offset=24), 'next', Load(), lineno=124, col_offset=24), Index(Num(0, lineno=124, col_offset=31)), Load(), lineno=124, col_offset=24), 'prev', Load(), lineno=124, col_offset=24), Index(Num(0, lineno=124, col_offset=39)), Load(), lineno=124, col_offset=24)], lineno=124, col_offset=19), Tuple([Name('b', Load(), lineno=124, col_offset=44), Attribute(Name('b', Load(), lineno=124, col_offset=47), 'next', Load(), lineno=124, col_offset=47)], Load(), lineno=124, col_offset=44), lineno=124, col_offset=12)], [], lineno=123, col_offset=8), Expr(Call(Attribute(Name('dominators', Load(), lineno=127, col_offset=8), 'setdefault', Load(), lineno=127, col_offset=8), [Name('b', Load(), lineno=127, col_offset=30), Call(Name('set', Load(), lineno=127, col_offset=33), [], [], None, None, lineno=127, col_offset=33)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), For(Name('c', Store(), lineno=129, col_offset=12), Call(Attribute(Name('b', Load(), lineno=129, col_offset=17), 'get_followers', Load(), lineno=129, col_offset=17), [], [], None, None, lineno=129, col_offset=17), [While(Num(1, lineno=130, col_offset=18), [Expr(Call(Attribute(Call(Attribute(Name('dominators', Load(), lineno=131, col_offset=16), 'setdefault', Load(), lineno=131, col_offset=16), [Name('c', Load(), lineno=131, col_offset=38), Call(Name('set', Load(), lineno=131, col_offset=41), [], [], None, None, lineno=131, col_offset=41)], [], None, None, lineno=131, col_offset=16), 'add', Load(), lineno=131, col_offset=16), [Name('b', Load(), lineno=131, col_offset=52)], [], None, None, lineno=131, col_offset=16), lineno=131, col_offset=16), If(BoolOp(And(), [Attribute(Name('c', Load(), lineno=135, col_offset=19), 'prev', Load(), lineno=135, col_offset=19), Compare(Subscript(Attribute(Name('c', Load(), lineno=135, col_offset=30), 'prev', Load(), lineno=135, col_offset=30), Index(Num(0, lineno=135, col_offset=37)), Load(), lineno=135, col_offset=30), [IsNot()], [Name('b', Load(), lineno=135, col_offset=47)], lineno=135, col_offset=30)], lineno=135, col_offset=19), [Assign([Name('c', Store(), lineno=136, col_offset=20)], Subscript(Attribute(Name('c', Load(), lineno=136, col_offset=24), 'prev', Load(), lineno=136, col_offset=24), Index(Num(0, lineno=136, col_offset=31)), Load(), lineno=136, col_offset=24), lineno=136, col_offset=20)], [Break( lineno=138, col_offset=20)], lineno=135, col_offset=16)], [], lineno=130, col_offset=12)], [], lineno=129, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('find_next', arguments([], None, None, []), [For(Name('b', Store(), lineno=142, col_offset=12), Name('remaining', Load(), lineno=142, col_offset=17), [For(Name('c', Store(), lineno=143, col_offset=16), Subscript(Name('dominators', Load(), lineno=143, col_offset=21), Index(Name('b', Load(), lineno=143, col_offset=32)), Load(), lineno=143, col_offset=21), [If(Compare(Name('c', Load(), lineno=144, col_offset=19), [In()], [Name('remaining', Load(), lineno=144, col_offset=24)], lineno=144, col_offset=19), [Break( lineno=145, col_offset=20)], [], lineno=144, col_offset=16)], [Return(Name('b', Load(), lineno=147, col_offset=23), lineno=147, col_offset=16)], lineno=143, col_offset=12)], [], lineno=142, col_offset=8), Assert(Num(0, lineno=148, col_offset=15), Str('circular dependency, cannot find next block', lineno=148, col_offset=18), lineno=148, col_offset=8)], [], lineno=140, col_offset=4), Assign([Name('b', Store(), lineno=150, col_offset=4)], Name('start_block', Load(), lineno=150, col_offset=8), lineno=150, col_offset=4), While(Num(1, lineno=151, col_offset=10), [Expr(Call(Attribute(Name('order', Load(), lineno=152, col_offset=8), 'append', Load(), lineno=152, col_offset=8), [Name('b', Load(), lineno=152, col_offset=21)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('remaining', Load(), lineno=153, col_offset=8), 'discard', Load(), lineno=153, col_offset=8), [Name('b', Load(), lineno=153, col_offset=26)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), If(Attribute(Name('b', Load(), lineno=154, col_offset=11), 'next', Load(), lineno=154, col_offset=11), [Assign([Name('b', Store(), lineno=155, col_offset=12)], Subscript(Attribute(Name('b', Load(), lineno=155, col_offset=16), 'next', Load(), lineno=155, col_offset=16), Index(Num(0, lineno=155, col_offset=23)), Load(), lineno=155, col_offset=16), lineno=155, col_offset=12), Continue( lineno=156, col_offset=12)], [If(BoolOp(And(), [Compare(Name('b', Load(), lineno=157, col_offset=13), [IsNot()], [Name('exit_block', Load(), lineno=157, col_offset=22)], lineno=157, col_offset=13), UnaryOp(Not(), Call(Attribute(Name('b', Load(), lineno=157, col_offset=41), 'has_unconditional_transfer', Load(), lineno=157, col_offset=41), [], [], None, None, lineno=157, col_offset=41), lineno=157, col_offset=37)], lineno=157, col_offset=13), [Expr(Call(Attribute(Name('order', Load(), lineno=158, col_offset=12), 'append', Load(), lineno=158, col_offset=12), [Name('exit_block', Load(), lineno=158, col_offset=25)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], [], lineno=157, col_offset=13)], lineno=154, col_offset=8), If(UnaryOp(Not(), Name('remaining', Load(), lineno=159, col_offset=15), lineno=159, col_offset=11), [Break( lineno=160, col_offset=12)], [], lineno=159, col_offset=8), Assign([Name('b', Store(), lineno=161, col_offset=8)], Call(Name('find_next', Load(), lineno=161, col_offset=12), [], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=8)], [], lineno=151, col_offset=4), Return(Name('order', Load(), lineno=162, col_offset=11), lineno=162, col_offset=4)], [], lineno=98, col_offset=0), ClassDef('Block', [], [Assign([Name('_count', Store(), lineno=166, col_offset=4)], Num(0, lineno=166, col_offset=13), lineno=166, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=168, col_offset=17), Name('label', Param(), lineno=168, col_offset=23)], None, None, [Str('', lineno=168, col_offset=29)]), [Assign([Attribute(Name('self', Load(), lineno=169, col_offset=8), 'insts', Store(), lineno=169, col_offset=8)], List([], Load(), lineno=169, col_offset=21), lineno=169, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=170, col_offset=8), 'outEdges', Store(), lineno=170, col_offset=8)], Call(Name('set', Load(), lineno=170, col_offset=24), [], [], None, None, lineno=170, col_offset=24), lineno=170, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=171, col_offset=8), 'label', Store(), lineno=171, col_offset=8)], Name('label', Load(), lineno=171, col_offset=21), lineno=171, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=172, col_offset=8), 'bid', Store(), lineno=172, col_offset=8)], Attribute(Name('Block', Load(), lineno=172, col_offset=19), '_count', Load(), lineno=172, col_offset=19), lineno=172, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=173, col_offset=8), 'next', Store(), lineno=173, col_offset=8)], List([], Load(), lineno=173, col_offset=20), lineno=173, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=174, col_offset=8), 'prev', Store(), lineno=174, col_offset=8)], List([], Load(), lineno=174, col_offset=20), lineno=174, col_offset=8), Assign([Attribute(Name('Block', Load(), lineno=175, col_offset=8), '_count', Store(), lineno=175, col_offset=8)], BinOp(Attribute(Name('Block', Load(), lineno=175, col_offset=23), '_count', Load(), lineno=175, col_offset=23), Add(), Num(1, lineno=175, col_offset=38), lineno=175, col_offset=23), lineno=175, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=177, col_offset=17)], None, None, []), [If(Attribute(Name('self', Load(), lineno=178, col_offset=11), 'label', Load(), lineno=178, col_offset=11), [Return(BinOp(Str('<block %s id=%d>', lineno=179, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=179, col_offset=41), 'label', Load(), lineno=179, col_offset=41), Attribute(Name('self', Load(), lineno=179, col_offset=53), 'bid', Load(), lineno=179, col_offset=53)], Load(), lineno=179, col_offset=41), lineno=179, col_offset=19), lineno=179, col_offset=12)], [Return(BinOp(Str('<block id=%d>', lineno=181, col_offset=19), Mod(), Attribute(Name('self', Load(), lineno=181, col_offset=38), 'bid', Load(), lineno=181, col_offset=38), lineno=181, col_offset=19), lineno=181, col_offset=12)], lineno=178, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=183, col_offset=16)], None, None, []), [Assign([Name('insts', Store(), lineno=184, col_offset=8)], Call(Name('map', Load(), lineno=184, col_offset=16), [Name('str', Load(), lineno=184, col_offset=20), Attribute(Name('self', Load(), lineno=184, col_offset=25), 'insts', Load(), lineno=184, col_offset=25)], [], None, None, lineno=184, col_offset=16), lineno=184, col_offset=8), Return(BinOp(Str('<block %s %d:\n%s>', lineno=185, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=185, col_offset=39), 'label', Load(), lineno=185, col_offset=39), Attribute(Name('self', Load(), lineno=185, col_offset=51), 'bid', Load(), lineno=185, col_offset=51), Call(Attribute(Str('\n', lineno=186, col_offset=39), 'join', Load(), lineno=186, col_offset=39), [Name('insts', Load(), lineno=186, col_offset=49)], [], None, None, lineno=186, col_offset=39)], Load(), lineno=185, col_offset=39), lineno=185, col_offset=15), lineno=185, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('emit', arguments([Name('self', Param(), lineno=188, col_offset=13), Name('inst', Param(), lineno=188, col_offset=19)], None, None, []), [Assign([Name('op', Store(), lineno=189, col_offset=8)], Subscript(Name('inst', Load(), lineno=189, col_offset=13), Index(Num(0, lineno=189, col_offset=18)), Load(), lineno=189, col_offset=13), lineno=189, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'insts', Load(), lineno=190, col_offset=8), 'append', Load(), lineno=190, col_offset=8), [Name('inst', Load(), lineno=190, col_offset=26)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=188, col_offset=4), FunctionDef('getInstructions', arguments([Name('self', Param(), lineno=192, col_offset=24)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=193, col_offset=15), 'insts', Load(), lineno=193, col_offset=15), lineno=193, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('addOutEdge', arguments([Name('self', Param(), lineno=195, col_offset=19), Name('block', Param(), lineno=195, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'outEdges', Load(), lineno=196, col_offset=8), 'add', Load(), lineno=196, col_offset=8), [Name('block', Load(), lineno=196, col_offset=26)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('addNext', arguments([Name('self', Param(), lineno=198, col_offset=16), Name('block', Param(), lineno=198, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'next', Load(), lineno=199, col_offset=8), 'append', Load(), lineno=199, col_offset=8), [Name('block', Load(), lineno=199, col_offset=25)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Assert(Compare(Call(Name('len', Load(), lineno=200, col_offset=15), [Attribute(Name('self', Load(), lineno=200, col_offset=19), 'next', Load(), lineno=200, col_offset=19)], [], None, None, lineno=200, col_offset=15), [Eq()], [Num(1, lineno=200, col_offset=33)], lineno=200, col_offset=15), Call(Name('map', Load(), lineno=200, col_offset=36), [Name('str', Load(), lineno=200, col_offset=40), Attribute(Name('self', Load(), lineno=200, col_offset=45), 'next', Load(), lineno=200, col_offset=45)], [], None, None, lineno=200, col_offset=36), lineno=200, col_offset=8), Expr(Call(Attribute(Attribute(Name('block', Load(), lineno=201, col_offset=8), 'prev', Load(), lineno=201, col_offset=8), 'append', Load(), lineno=201, col_offset=8), [Name('self', Load(), lineno=201, col_offset=26)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Assert(Compare(Call(Name('len', Load(), lineno=202, col_offset=15), [Attribute(Name('block', Load(), lineno=202, col_offset=19), 'prev', Load(), lineno=202, col_offset=19)], [], None, None, lineno=202, col_offset=15), [Eq()], [Num(1, lineno=202, col_offset=34)], lineno=202, col_offset=15), Call(Name('map', Load(), lineno=202, col_offset=37), [Name('str', Load(), lineno=202, col_offset=41), Attribute(Name('block', Load(), lineno=202, col_offset=46), 'prev', Load(), lineno=202, col_offset=46)], [], None, None, lineno=202, col_offset=37), lineno=202, col_offset=8)], [], lineno=198, col_offset=4), Assign([Name('_uncond_transfer', Store(), lineno=204, col_offset=4)], Tuple([Str('RETURN_VALUE', lineno=204, col_offset=24), Str('RAISE_VARARGS', lineno=204, col_offset=40), Str('JUMP_ABSOLUTE', lineno=205, col_offset=24), Str('JUMP_FORWARD', lineno=205, col_offset=41), Str('CONTINUE_LOOP', lineno=205, col_offset=57)], Load(), lineno=204, col_offset=24), lineno=204, col_offset=4), FunctionDef('has_unconditional_transfer', arguments([Name('self', Param(), lineno=208, col_offset=35)], None, None, []), [Expr(Str("Returns True if there is an unconditional transfer to an other block\n        at the end of this block. This means there is no risk for the bytecode\n        executer to go past this block's bytecode.", lineno=211, col_offset=-1), lineno=211, col_offset=-1), TryExcept([Assign([Tuple([Name('op', Store(), lineno=213, col_offset=12), Name('arg', Store(), lineno=213, col_offset=16)], Store(), lineno=213, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=213, col_offset=22), 'insts', Load(), lineno=213, col_offset=22), Index(Num(-1, lineno=213, col_offset=34)), Load(), lineno=213, col_offset=22), lineno=213, col_offset=12)], [ExceptHandler(Tuple([Name('IndexError', Load(), lineno=214, col_offset=16), Name('ValueError', Load(), lineno=214, col_offset=28)], Load(), lineno=214, col_offset=16), None, [Return(None, lineno=215, col_offset=12)], lineno=214, col_offset=8)], [], lineno=212, col_offset=8), Return(Compare(Name('op', Load(), lineno=216, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=216, col_offset=21), '_uncond_transfer', Load(), lineno=216, col_offset=21)], lineno=216, col_offset=15), lineno=216, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('get_children', arguments([Name('self', Param(), lineno=218, col_offset=21)], None, None, []), [Return(BinOp(Call(Name('list', Load(), lineno=219, col_offset=15), [Attribute(Name('self', Load(), lineno=219, col_offset=20), 'outEdges', Load(), lineno=219, col_offset=20)], [], None, None, lineno=219, col_offset=15), Add(), Attribute(Name('self', Load(), lineno=219, col_offset=37), 'next', Load(), lineno=219, col_offset=37), lineno=219, col_offset=15), lineno=219, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('get_followers', arguments([Name('self', Param(), lineno=221, col_offset=22)], None, None, []), [Expr(Str('Get the whole list of followers, including the next block.', lineno=222, col_offset=8), lineno=222, col_offset=8), Assign([Name('followers', Store(), lineno=223, col_offset=8)], Call(Name('set', Load(), lineno=223, col_offset=20), [Attribute(Name('self', Load(), lineno=223, col_offset=24), 'next', Load(), lineno=223, col_offset=24)], [], None, None, lineno=223, col_offset=20), lineno=223, col_offset=8), For(Name('inst', Store(), lineno=226, col_offset=12), Attribute(Name('self', Load(), lineno=226, col_offset=20), 'insts', Load(), lineno=226, col_offset=20), [If(Compare(Subscript(Name('inst', Load(), lineno=227, col_offset=15), Index(Num(0, lineno=227, col_offset=20)), Load(), lineno=227, col_offset=15), [In()], [Attribute(Name('PyFlowGraph', Load(), lineno=227, col_offset=26), 'hasjrel', Load(), lineno=227, col_offset=26)], lineno=227, col_offset=15), [Expr(Call(Attribute(Name('followers', Load(), lineno=228, col_offset=16), 'add', Load(), lineno=228, col_offset=16), [Subscript(Name('inst', Load(), lineno=228, col_offset=30), Index(Num(1, lineno=228, col_offset=35)), Load(), lineno=228, col_offset=30)], [], None, None, lineno=228, col_offset=16), lineno=228, col_offset=16)], [], lineno=227, col_offset=12)], [], lineno=226, col_offset=8), Return(Name('followers', Load(), lineno=229, col_offset=15), lineno=229, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('getContainedGraphs', arguments([Name('self', Param(), lineno=231, col_offset=27)], None, None, []), [Expr(Str('Return all graphs contained within this block.\n\n        For example, a MAKE_FUNCTION block will contain a reference to\n        the graph for the function body.\n        ', lineno=236, col_offset=-1), lineno=236, col_offset=-1), Assign([Name('contained', Store(), lineno=237, col_offset=8)], List([], Load(), lineno=237, col_offset=20), lineno=237, col_offset=8), For(Name('inst', Store(), lineno=238, col_offset=12), Attribute(Name('self', Load(), lineno=238, col_offset=20), 'insts', Load(), lineno=238, col_offset=20), [If(Compare(Call(Name('len', Load(), lineno=239, col_offset=15), [Name('inst', Load(), lineno=239, col_offset=19)], [], None, None, lineno=239, col_offset=15), [Eq()], [Num(1, lineno=239, col_offset=28)], lineno=239, col_offset=15), [Continue( lineno=240, col_offset=16)], [], lineno=239, col_offset=12), Assign([Name('op', Store(), lineno=241, col_offset=12)], Subscript(Name('inst', Load(), lineno=241, col_offset=17), Index(Num(1, lineno=241, col_offset=22)), Load(), lineno=241, col_offset=17), lineno=241, col_offset=12), If(Call(Name('hasattr', Load(), lineno=242, col_offset=15), [Name('op', Load(), lineno=242, col_offset=23), Str('graph', lineno=242, col_offset=27)], [], None, None, lineno=242, col_offset=15), [Expr(Call(Attribute(Name('contained', Load(), lineno=243, col_offset=16), 'append', Load(), lineno=243, col_offset=16), [Attribute(Name('op', Load(), lineno=243, col_offset=33), 'graph', Load(), lineno=243, col_offset=33)], [], None, None, lineno=243, col_offset=16), lineno=243, col_offset=16)], [], lineno=242, col_offset=12)], [], lineno=238, col_offset=8), Return(Name('contained', Load(), lineno=244, col_offset=15), lineno=244, col_offset=8)], [], lineno=231, col_offset=4)], [], lineno=165, col_offset=0), Assign([Name('RAW', Store(), lineno=249, col_offset=0)], Str('RAW', lineno=249, col_offset=6), lineno=249, col_offset=0), Assign([Name('FLAT', Store(), lineno=250, col_offset=0)], Str('FLAT', lineno=250, col_offset=7), lineno=250, col_offset=0), Assign([Name('CONV', Store(), lineno=251, col_offset=0)], Str('CONV', lineno=251, col_offset=7), lineno=251, col_offset=0), Assign([Name('DONE', Store(), lineno=252, col_offset=0)], Str('DONE', lineno=252, col_offset=7), lineno=252, col_offset=0), ClassDef('PyFlowGraph', [Name('FlowGraph', Load(), lineno=254, col_offset=18)], [Assign([Name('super_init', Store(), lineno=255, col_offset=4)], Attribute(Name('FlowGraph', Load(), lineno=255, col_offset=17), '__init__', Load(), lineno=255, col_offset=17), lineno=255, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=257, col_offset=17), Name('name', Param(), lineno=257, col_offset=23), Name('filename', Param(), lineno=257, col_offset=29), Name('args', Param(), lineno=257, col_offset=39), Name('optimized', Param(), lineno=257, col_offset=48), Name('klass', Param(), lineno=257, col_offset=61)], None, None, [Tuple([], Load(), lineno=257, col_offset=44), Num(0, lineno=257, col_offset=58), Name('None', Load(), lineno=257, col_offset=67)]), [Expr(Call(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'super_init', Load(), lineno=258, col_offset=8), [], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=259, col_offset=8), 'name', Store(), lineno=259, col_offset=8)], Name('name', Load(), lineno=259, col_offset=20), lineno=259, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=260, col_offset=8), 'filename', Store(), lineno=260, col_offset=8)], Name('filename', Load(), lineno=260, col_offset=24), lineno=260, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=261, col_offset=8), 'docstring', Store(), lineno=261, col_offset=8)], Name('None', Load(), lineno=261, col_offset=25), lineno=261, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=262, col_offset=8), 'args', Store(), lineno=262, col_offset=8)], Name('args', Load(), lineno=262, col_offset=20), lineno=262, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=263, col_offset=8), 'argcount', Store(), lineno=263, col_offset=8)], Call(Name('getArgCount', Load(), lineno=263, col_offset=24), [Name('args', Load(), lineno=263, col_offset=36)], [], None, None, lineno=263, col_offset=24), lineno=263, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=264, col_offset=8), 'klass', Store(), lineno=264, col_offset=8)], Name('klass', Load(), lineno=264, col_offset=21), lineno=264, col_offset=8), If(Name('optimized', Load(), lineno=265, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=266, col_offset=12), 'flags', Store(), lineno=266, col_offset=12)], BinOp(Name('CO_OPTIMIZED', Load(), lineno=266, col_offset=25), BitOr(), Name('CO_NEWLOCALS', Load(), lineno=266, col_offset=40), lineno=266, col_offset=25), lineno=266, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=268, col_offset=12), 'flags', Store(), lineno=268, col_offset=12)], Num(0, lineno=268, col_offset=25), lineno=268, col_offset=12)], lineno=265, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=269, col_offset=8), 'consts', Store(), lineno=269, col_offset=8)], List([], Load(), lineno=269, col_offset=22), lineno=269, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=270, col_offset=8), 'names', Store(), lineno=270, col_offset=8)], List([], Load(), lineno=270, col_offset=21), lineno=270, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=273, col_offset=8), 'freevars', Store(), lineno=273, col_offset=8)], List([], Load(), lineno=273, col_offset=24), lineno=273, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=274, col_offset=8), 'cellvars', Store(), lineno=274, col_offset=8)], List([], Load(), lineno=274, col_offset=24), lineno=274, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=279, col_offset=8), 'closure', Store(), lineno=279, col_offset=8)], List([], Load(), lineno=279, col_offset=23), lineno=279, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=280, col_offset=8), 'varnames', Store(), lineno=280, col_offset=8)], BoolOp(Or(), [Call(Name('list', Load(), lineno=280, col_offset=24), [Name('args', Load(), lineno=280, col_offset=29)], [], None, None, lineno=280, col_offset=24), List([], Load(), lineno=280, col_offset=38)], lineno=280, col_offset=24), lineno=280, col_offset=8), For(Name('i', Store(), lineno=281, col_offset=12), Call(Name('range', Load(), lineno=281, col_offset=17), [Call(Name('len', Load(), lineno=281, col_offset=23), [Attribute(Name('self', Load(), lineno=281, col_offset=27), 'varnames', Load(), lineno=281, col_offset=27)], [], None, None, lineno=281, col_offset=23)], [], None, None, lineno=281, col_offset=17), [Assign([Name('var', Store(), lineno=282, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=282, col_offset=18), 'varnames', Load(), lineno=282, col_offset=18), Index(Name('i', Load(), lineno=282, col_offset=32)), Load(), lineno=282, col_offset=18), lineno=282, col_offset=12), If(Call(Name('isinstance', Load(), lineno=283, col_offset=15), [Name('var', Load(), lineno=283, col_offset=26), Name('TupleArg', Load(), lineno=283, col_offset=31)], [], None, None, lineno=283, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=284, col_offset=16), 'varnames', Load(), lineno=284, col_offset=16), Index(Name('i', Load(), lineno=284, col_offset=30)), Store(), lineno=284, col_offset=16)], Call(Attribute(Name('var', Load(), lineno=284, col_offset=35), 'getName', Load(), lineno=284, col_offset=35), [], [], None, None, lineno=284, col_offset=35), lineno=284, col_offset=16)], [], lineno=283, col_offset=12)], [], lineno=281, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=285, col_offset=8), 'stage', Store(), lineno=285, col_offset=8)], Name('RAW', Load(), lineno=285, col_offset=21), lineno=285, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('setDocstring', arguments([Name('self', Param(), lineno=287, col_offset=21), Name('doc', Param(), lineno=287, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=288, col_offset=8), 'docstring', Store(), lineno=288, col_offset=8)], Name('doc', Load(), lineno=288, col_offset=25), lineno=288, col_offset=8)], [], lineno=287, col_offset=4), FunctionDef('setFlag', arguments([Name('self', Param(), lineno=290, col_offset=16), Name('flag', Param(), lineno=290, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=291, col_offset=8), 'flags', Store(), lineno=291, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=291, col_offset=21), 'flags', Load(), lineno=291, col_offset=21), BitOr(), Name('flag', Load(), lineno=291, col_offset=34), lineno=291, col_offset=21), lineno=291, col_offset=8), If(Compare(Name('flag', Load(), lineno=292, col_offset=11), [Eq()], [Name('CO_VARARGS', Load(), lineno=292, col_offset=19)], lineno=292, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=293, col_offset=12), 'argcount', Store(), lineno=293, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=293, col_offset=28), 'argcount', Load(), lineno=293, col_offset=28), Sub(), Num(1, lineno=293, col_offset=44), lineno=293, col_offset=28), lineno=293, col_offset=12)], [], lineno=292, col_offset=8)], [], lineno=290, col_offset=4), FunctionDef('checkFlag', arguments([Name('self', Param(), lineno=295, col_offset=18), Name('flag', Param(), lineno=295, col_offset=24)], None, None, []), [If(BinOp(Attribute(Name('self', Load(), lineno=296, col_offset=11), 'flags', Load(), lineno=296, col_offset=11), BitAnd(), Name('flag', Load(), lineno=296, col_offset=24), lineno=296, col_offset=11), [Return(Num(1, lineno=297, col_offset=19), lineno=297, col_offset=12)], [], lineno=296, col_offset=8)], [], lineno=295, col_offset=4), FunctionDef('setFreeVars', arguments([Name('self', Param(), lineno=299, col_offset=20), Name('names', Param(), lineno=299, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=300, col_offset=8), 'freevars', Store(), lineno=300, col_offset=8)], Call(Name('list', Load(), lineno=300, col_offset=24), [Name('names', Load(), lineno=300, col_offset=29)], [], None, None, lineno=300, col_offset=24), lineno=300, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('setCellVars', arguments([Name('self', Param(), lineno=302, col_offset=20), Name('names', Param(), lineno=302, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=303, col_offset=8), 'cellvars', Store(), lineno=303, col_offset=8)], Name('names', Load(), lineno=303, col_offset=24), lineno=303, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('getCode', arguments([Name('self', Param(), lineno=305, col_offset=16)], None, None, []), [Expr(Str('Get a Python code object', lineno=306, col_offset=8), lineno=306, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=307, col_offset=15), 'stage', Load(), lineno=307, col_offset=15), [Eq()], [Name('RAW', Load(), lineno=307, col_offset=29)], lineno=307, col_offset=15), None, lineno=307, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'computeStackDepth', Load(), lineno=308, col_offset=8), [], [], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), 'flattenGraph', Load(), lineno=309, col_offset=8), [], [], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=310, col_offset=15), 'stage', Load(), lineno=310, col_offset=15), [Eq()], [Name('FLAT', Load(), lineno=310, col_offset=29)], lineno=310, col_offset=15), None, lineno=310, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'convertArgs', Load(), lineno=311, col_offset=8), [], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=312, col_offset=15), 'stage', Load(), lineno=312, col_offset=15), [Eq()], [Name('CONV', Load(), lineno=312, col_offset=29)], lineno=312, col_offset=15), None, lineno=312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=8), 'makeByteCode', Load(), lineno=313, col_offset=8), [], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=314, col_offset=15), 'stage', Load(), lineno=314, col_offset=15), [Eq()], [Name('DONE', Load(), lineno=314, col_offset=29)], lineno=314, col_offset=15), None, lineno=314, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=315, col_offset=15), 'newCodeObject', Load(), lineno=315, col_offset=15), [], [], None, None, lineno=315, col_offset=15), lineno=315, col_offset=8)], [], lineno=305, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=317, col_offset=13), Name('io', Param(), lineno=317, col_offset=19)], None, None, [Name('None', Load(), lineno=317, col_offset=22)]), [If(Name('io', Load(), lineno=318, col_offset=11), [Assign([Name('save', Store(), lineno=319, col_offset=12)], Attribute(Name('sys', Load(), lineno=319, col_offset=19), 'stdout', Load(), lineno=319, col_offset=19), lineno=319, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=320, col_offset=12), 'stdout', Store(), lineno=320, col_offset=12)], Name('io', Load(), lineno=320, col_offset=25), lineno=320, col_offset=12)], [], lineno=318, col_offset=8), Assign([Name('pc', Store(), lineno=321, col_offset=8)], Num(0, lineno=321, col_offset=13), lineno=321, col_offset=8), For(Name('t', Store(), lineno=322, col_offset=12), Attribute(Name('self', Load(), lineno=322, col_offset=17), 'insts', Load(), lineno=322, col_offset=17), [Assign([Name('opname', Store(), lineno=323, col_offset=12)], Subscript(Name('t', Load(), lineno=323, col_offset=21), Index(Num(0, lineno=323, col_offset=23)), Load(), lineno=323, col_offset=21), lineno=323, col_offset=12), If(Compare(Name('opname', Load(), lineno=324, col_offset=15), [Eq()], [Str('SET_LINENO', lineno=324, col_offset=25)], lineno=324, col_offset=15), [Print(None, [], True, lineno=325, col_offset=16)], [], lineno=324, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=326, col_offset=15), [Name('t', Load(), lineno=326, col_offset=19)], [], None, None, lineno=326, col_offset=15), [Eq()], [Num(1, lineno=326, col_offset=25)], lineno=326, col_offset=15), [Print(None, [Str('\t', lineno=327, col_offset=22), BinOp(Str('%3d', lineno=327, col_offset=28), Mod(), Name('pc', Load(), lineno=327, col_offset=36), lineno=327, col_offset=28), Name('opname', Load(), lineno=327, col_offset=40)], True, lineno=327, col_offset=16), Assign([Name('pc', Store(), lineno=328, col_offset=16)], BinOp(Name('pc', Load(), lineno=328, col_offset=21), Add(), Num(1, lineno=328, col_offset=26), lineno=328, col_offset=21), lineno=328, col_offset=16)], [Print(None, [Str('\t', lineno=330, col_offset=22), BinOp(Str('%3d', lineno=330, col_offset=28), Mod(), Name('pc', Load(), lineno=330, col_offset=36), lineno=330, col_offset=28), Name('opname', Load(), lineno=330, col_offset=40), Subscript(Name('t', Load(), lineno=330, col_offset=48), Index(Num(1, lineno=330, col_offset=50)), Load(), lineno=330, col_offset=48)], True, lineno=330, col_offset=16), Assign([Name('pc', Store(), lineno=331, col_offset=16)], BinOp(Name('pc', Load(), lineno=331, col_offset=21), Add(), Num(3, lineno=331, col_offset=26), lineno=331, col_offset=21), lineno=331, col_offset=16)], lineno=326, col_offset=12)], [], lineno=322, col_offset=8), If(Name('io', Load(), lineno=332, col_offset=11), [Assign([Attribute(Name('sys', Load(), lineno=333, col_offset=12), 'stdout', Store(), lineno=333, col_offset=12)], Name('save', Load(), lineno=333, col_offset=25), lineno=333, col_offset=12)], [], lineno=332, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('computeStackDepth', arguments([Name('self', Param(), lineno=335, col_offset=26)], None, None, []), [Expr(Str('Compute the max stack depth.\n\n        Approach is to compute the stack effect of each basic block.\n        Then find the path through the code with the largest total\n        effect.\n        ', lineno=341, col_offset=-1), lineno=341, col_offset=-1), Assign([Name('depth', Store(), lineno=342, col_offset=8)], Dict([], [], lineno=342, col_offset=16), lineno=342, col_offset=8), Assign([Name('exit', Store(), lineno=343, col_offset=8)], Name('None', Load(), lineno=343, col_offset=15), lineno=343, col_offset=8), For(Name('b', Store(), lineno=344, col_offset=12), Call(Attribute(Name('self', Load(), lineno=344, col_offset=17), 'getBlocks', Load(), lineno=344, col_offset=17), [], [], None, None, lineno=344, col_offset=17), [Assign([Subscript(Name('depth', Load(), lineno=345, col_offset=12), Index(Name('b', Load(), lineno=345, col_offset=18)), Store(), lineno=345, col_offset=12)], Call(Name('findDepth', Load(), lineno=345, col_offset=23), [Call(Attribute(Name('b', Load(), lineno=345, col_offset=33), 'getInstructions', Load(), lineno=345, col_offset=33), [], [], None, None, lineno=345, col_offset=33)], [], None, None, lineno=345, col_offset=23), lineno=345, col_offset=12)], [], lineno=344, col_offset=8), Assign([Name('seen', Store(), lineno=347, col_offset=8)], Dict([], [], lineno=347, col_offset=15), lineno=347, col_offset=8), FunctionDef('max_depth', arguments([Name('b', Param(), lineno=349, col_offset=22), Name('d', Param(), lineno=349, col_offset=25)], None, None, []), [If(Compare(Name('b', Load(), lineno=350, col_offset=15), [In()], [Name('seen', Load(), lineno=350, col_offset=20)], lineno=350, col_offset=15), [Return(Name('d', Load(), lineno=351, col_offset=23), lineno=351, col_offset=16)], [], lineno=350, col_offset=12), Assign([Subscript(Name('seen', Load(), lineno=352, col_offset=12), Index(Name('b', Load(), lineno=352, col_offset=17)), Store(), lineno=352, col_offset=12)], Num(1, lineno=352, col_offset=22), lineno=352, col_offset=12), Assign([Name('d', Store(), lineno=353, col_offset=12)], BinOp(Name('d', Load(), lineno=353, col_offset=16), Add(), Subscript(Name('depth', Load(), lineno=353, col_offset=20), Index(Name('b', Load(), lineno=353, col_offset=26)), Load(), lineno=353, col_offset=20), lineno=353, col_offset=16), lineno=353, col_offset=12), Assign([Name('children', Store(), lineno=354, col_offset=12)], Call(Attribute(Name('b', Load(), lineno=354, col_offset=23), 'get_children', Load(), lineno=354, col_offset=23), [], [], None, None, lineno=354, col_offset=23), lineno=354, col_offset=12), If(Name('children', Load(), lineno=355, col_offset=15), [Return(Call(Name('max', Load(), lineno=356, col_offset=23), [ListComp(Call(Name('max_depth', Load(), lineno=356, col_offset=28), [Name('c', Load(), lineno=356, col_offset=38), Name('d', Load(), lineno=356, col_offset=41)], [], None, None, lineno=356, col_offset=28), [comprehension(Name('c', Store(), lineno=356, col_offset=48), Name('children', Load(), lineno=356, col_offset=53), [])], lineno=356, col_offset=28)], [], None, None, lineno=356, col_offset=23), lineno=356, col_offset=16)], [If(UnaryOp(Not(), Compare(Attribute(Name('b', Load(), lineno=358, col_offset=23), 'label', Load(), lineno=358, col_offset=23), [Eq()], [Str('exit', lineno=358, col_offset=34)], lineno=358, col_offset=23), lineno=358, col_offset=19), [Return(Call(Name('max_depth', Load(), lineno=359, col_offset=27), [Attribute(Name('self', Load(), lineno=359, col_offset=37), 'exit', Load(), lineno=359, col_offset=37), Name('d', Load(), lineno=359, col_offset=48)], [], None, None, lineno=359, col_offset=27), lineno=359, col_offset=20)], [Return(Name('d', Load(), lineno=361, col_offset=27), lineno=361, col_offset=20)], lineno=358, col_offset=16)], lineno=355, col_offset=12)], [], lineno=349, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=363, col_offset=8), 'stacksize', Store(), lineno=363, col_offset=8)], Call(Name('max_depth', Load(), lineno=363, col_offset=25), [Attribute(Name('self', Load(), lineno=363, col_offset=35), 'entry', Load(), lineno=363, col_offset=35), Num(0, lineno=363, col_offset=47)], [], None, None, lineno=363, col_offset=25), lineno=363, col_offset=8)], [], lineno=335, col_offset=4), FunctionDef('flattenGraph', arguments([Name('self', Param(), lineno=365, col_offset=21)], None, None, []), [Expr(Str('Arrange the blocks in order and resolve jumps', lineno=366, col_offset=8), lineno=366, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=367, col_offset=15), 'stage', Load(), lineno=367, col_offset=15), [Eq()], [Name('RAW', Load(), lineno=367, col_offset=29)], lineno=367, col_offset=15), None, lineno=367, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=368, col_offset=8), 'insts', Store(), lineno=368, col_offset=8), Name('insts', Store(), lineno=368, col_offset=21)], List([], Load(), lineno=368, col_offset=29), lineno=368, col_offset=8), Assign([Name('pc', Store(), lineno=369, col_offset=8)], Num(0, lineno=369, col_offset=13), lineno=369, col_offset=8), Assign([Name('begin', Store(), lineno=370, col_offset=8)], Dict([], [], lineno=370, col_offset=16), lineno=370, col_offset=8), Assign([Name('end', Store(), lineno=371, col_offset=8)], Dict([], [], lineno=371, col_offset=14), lineno=371, col_offset=8), For(Name('b', Store(), lineno=372, col_offset=12), Call(Attribute(Name('self', Load(), lineno=372, col_offset=17), 'getBlocksInOrder', Load(), lineno=372, col_offset=17), [], [], None, None, lineno=372, col_offset=17), [Assign([Subscript(Name('begin', Load(), lineno=373, col_offset=12), Index(Name('b', Load(), lineno=373, col_offset=18)), Store(), lineno=373, col_offset=12)], Name('pc', Load(), lineno=373, col_offset=23), lineno=373, col_offset=12), For(Name('inst', Store(), lineno=374, col_offset=16), Call(Attribute(Name('b', Load(), lineno=374, col_offset=24), 'getInstructions', Load(), lineno=374, col_offset=24), [], [], None, None, lineno=374, col_offset=24), [Expr(Call(Attribute(Name('insts', Load(), lineno=375, col_offset=16), 'append', Load(), lineno=375, col_offset=16), [Name('inst', Load(), lineno=375, col_offset=29)], [], None, None, lineno=375, col_offset=16), lineno=375, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=376, col_offset=19), [Name('inst', Load(), lineno=376, col_offset=23)], [], None, None, lineno=376, col_offset=19), [Eq()], [Num(1, lineno=376, col_offset=32)], lineno=376, col_offset=19), [Assign([Name('pc', Store(), lineno=377, col_offset=20)], BinOp(Name('pc', Load(), lineno=377, col_offset=25), Add(), Num(1, lineno=377, col_offset=30), lineno=377, col_offset=25), lineno=377, col_offset=20)], [If(Compare(Subscript(Name('inst', Load(), lineno=378, col_offset=21), Index(Num(0, lineno=378, col_offset=26)), Load(), lineno=378, col_offset=21), [NotEq()], [Str('SET_LINENO', lineno=378, col_offset=32)], lineno=378, col_offset=21), [Assign([Name('pc', Store(), lineno=380, col_offset=20)], BinOp(Name('pc', Load(), lineno=380, col_offset=25), Add(), Num(3, lineno=380, col_offset=30), lineno=380, col_offset=25), lineno=380, col_offset=20)], [], lineno=378, col_offset=21)], lineno=376, col_offset=16)], [], lineno=374, col_offset=12), Assign([Subscript(Name('end', Load(), lineno=381, col_offset=12), Index(Name('b', Load(), lineno=381, col_offset=16)), Store(), lineno=381, col_offset=12)], Name('pc', Load(), lineno=381, col_offset=21), lineno=381, col_offset=12)], [], lineno=372, col_offset=8), Assign([Name('pc', Store(), lineno=382, col_offset=8)], Num(0, lineno=382, col_offset=13), lineno=382, col_offset=8), For(Name('i', Store(), lineno=383, col_offset=12), Call(Name('range', Load(), lineno=383, col_offset=17), [Call(Name('len', Load(), lineno=383, col_offset=23), [Name('insts', Load(), lineno=383, col_offset=27)], [], None, None, lineno=383, col_offset=23)], [], None, None, lineno=383, col_offset=17), [Assign([Name('inst', Store(), lineno=384, col_offset=12)], Subscript(Name('insts', Load(), lineno=384, col_offset=19), Index(Name('i', Load(), lineno=384, col_offset=25)), Load(), lineno=384, col_offset=19), lineno=384, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=385, col_offset=15), [Name('inst', Load(), lineno=385, col_offset=19)], [], None, None, lineno=385, col_offset=15), [Eq()], [Num(1, lineno=385, col_offset=28)], lineno=385, col_offset=15), [Assign([Name('pc', Store(), lineno=386, col_offset=16)], BinOp(Name('pc', Load(), lineno=386, col_offset=21), Add(), Num(1, lineno=386, col_offset=26), lineno=386, col_offset=21), lineno=386, col_offset=16)], [If(Compare(Subscript(Name('inst', Load(), lineno=387, col_offset=17), Index(Num(0, lineno=387, col_offset=22)), Load(), lineno=387, col_offset=17), [NotEq()], [Str('SET_LINENO', lineno=387, col_offset=28)], lineno=387, col_offset=17), [Assign([Name('pc', Store(), lineno=388, col_offset=16)], BinOp(Name('pc', Load(), lineno=388, col_offset=21), Add(), Num(3, lineno=388, col_offset=26), lineno=388, col_offset=21), lineno=388, col_offset=16)], [], lineno=387, col_offset=17)], lineno=385, col_offset=12), Assign([Name('opname', Store(), lineno=389, col_offset=12)], Subscript(Name('inst', Load(), lineno=389, col_offset=21), Index(Num(0, lineno=389, col_offset=26)), Load(), lineno=389, col_offset=21), lineno=389, col_offset=12), If(Compare(Name('opname', Load(), lineno=390, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=390, col_offset=25), 'hasjrel', Load(), lineno=390, col_offset=25)], lineno=390, col_offset=15), [Assign([Name('oparg', Store(), lineno=391, col_offset=16)], Subscript(Name('inst', Load(), lineno=391, col_offset=24), Index(Num(1, lineno=391, col_offset=29)), Load(), lineno=391, col_offset=24), lineno=391, col_offset=16), Assign([Name('offset', Store(), lineno=392, col_offset=16)], BinOp(Subscript(Name('begin', Load(), lineno=392, col_offset=25), Index(Name('oparg', Load(), lineno=392, col_offset=31)), Load(), lineno=392, col_offset=25), Sub(), Name('pc', Load(), lineno=392, col_offset=40), lineno=392, col_offset=25), lineno=392, col_offset=16), Assign([Subscript(Name('insts', Load(), lineno=393, col_offset=16), Index(Name('i', Load(), lineno=393, col_offset=22)), Store(), lineno=393, col_offset=16)], Tuple([Name('opname', Load(), lineno=393, col_offset=27), Name('offset', Load(), lineno=393, col_offset=35)], Load(), lineno=393, col_offset=27), lineno=393, col_offset=16)], [If(Compare(Name('opname', Load(), lineno=394, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=394, col_offset=27), 'hasjabs', Load(), lineno=394, col_offset=27)], lineno=394, col_offset=17), [Assign([Subscript(Name('insts', Load(), lineno=395, col_offset=16), Index(Name('i', Load(), lineno=395, col_offset=22)), Store(), lineno=395, col_offset=16)], Tuple([Name('opname', Load(), lineno=395, col_offset=27), Subscript(Name('begin', Load(), lineno=395, col_offset=35), Index(Subscript(Name('inst', Load(), lineno=395, col_offset=41), Index(Num(1, lineno=395, col_offset=46)), Load(), lineno=395, col_offset=41)), Load(), lineno=395, col_offset=35)], Load(), lineno=395, col_offset=27), lineno=395, col_offset=16)], [], lineno=394, col_offset=17)], lineno=390, col_offset=12)], [], lineno=383, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=396, col_offset=8), 'stage', Store(), lineno=396, col_offset=8)], Name('FLAT', Load(), lineno=396, col_offset=21), lineno=396, col_offset=8)], [], lineno=365, col_offset=4), Assign([Name('hasjrel', Store(), lineno=398, col_offset=4)], Call(Name('set', Load(), lineno=398, col_offset=14), [], [], None, None, lineno=398, col_offset=14), lineno=398, col_offset=4), For(Name('i', Store(), lineno=399, col_offset=8), Attribute(Name('dis', Load(), lineno=399, col_offset=13), 'hasjrel', Load(), lineno=399, col_offset=13), [Expr(Call(Attribute(Name('hasjrel', Load(), lineno=400, col_offset=8), 'add', Load(), lineno=400, col_offset=8), [Subscript(Attribute(Name('dis', Load(), lineno=400, col_offset=20), 'opname', Load(), lineno=400, col_offset=20), Index(Name('i', Load(), lineno=400, col_offset=31)), Load(), lineno=400, col_offset=20)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8)], [], lineno=399, col_offset=4), Assign([Name('hasjabs', Store(), lineno=401, col_offset=4)], Call(Name('set', Load(), lineno=401, col_offset=14), [], [], None, None, lineno=401, col_offset=14), lineno=401, col_offset=4), For(Name('i', Store(), lineno=402, col_offset=8), Attribute(Name('dis', Load(), lineno=402, col_offset=13), 'hasjabs', Load(), lineno=402, col_offset=13), [Expr(Call(Attribute(Name('hasjabs', Load(), lineno=403, col_offset=8), 'add', Load(), lineno=403, col_offset=8), [Subscript(Attribute(Name('dis', Load(), lineno=403, col_offset=20), 'opname', Load(), lineno=403, col_offset=20), Index(Name('i', Load(), lineno=403, col_offset=31)), Load(), lineno=403, col_offset=20)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8)], [], lineno=402, col_offset=4), FunctionDef('convertArgs', arguments([Name('self', Param(), lineno=405, col_offset=20)], None, None, []), [Expr(Str('Convert arguments from symbolic to concrete form', lineno=406, col_offset=8), lineno=406, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=407, col_offset=15), 'stage', Load(), lineno=407, col_offset=15), [Eq()], [Name('FLAT', Load(), lineno=407, col_offset=29)], lineno=407, col_offset=15), None, lineno=407, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'consts', Load(), lineno=408, col_offset=8), 'insert', Load(), lineno=408, col_offset=8), [Num(0, lineno=408, col_offset=27), Attribute(Name('self', Load(), lineno=408, col_offset=30), 'docstring', Load(), lineno=408, col_offset=30)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'sort_cellvars', Load(), lineno=409, col_offset=8), [], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), For(Name('i', Store(), lineno=410, col_offset=12), Call(Name('range', Load(), lineno=410, col_offset=17), [Call(Name('len', Load(), lineno=410, col_offset=23), [Attribute(Name('self', Load(), lineno=410, col_offset=27), 'insts', Load(), lineno=410, col_offset=27)], [], None, None, lineno=410, col_offset=23)], [], None, None, lineno=410, col_offset=17), [Assign([Name('t', Store(), lineno=411, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=411, col_offset=16), 'insts', Load(), lineno=411, col_offset=16), Index(Name('i', Load(), lineno=411, col_offset=27)), Load(), lineno=411, col_offset=16), lineno=411, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=412, col_offset=15), [Name('t', Load(), lineno=412, col_offset=19)], [], None, None, lineno=412, col_offset=15), [Eq()], [Num(2, lineno=412, col_offset=25)], lineno=412, col_offset=15), [Assign([Tuple([Name('opname', Store(), lineno=413, col_offset=16), Name('oparg', Store(), lineno=413, col_offset=24)], Store(), lineno=413, col_offset=16)], Name('t', Load(), lineno=413, col_offset=32), lineno=413, col_offset=16), Assign([Name('conv', Store(), lineno=414, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=414, col_offset=23), '_converters', Load(), lineno=414, col_offset=23), 'get', Load(), lineno=414, col_offset=23), [Name('opname', Load(), lineno=414, col_offset=44), Name('None', Load(), lineno=414, col_offset=52)], [], None, None, lineno=414, col_offset=23), lineno=414, col_offset=16), If(Name('conv', Load(), lineno=415, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=416, col_offset=20), 'insts', Load(), lineno=416, col_offset=20), Index(Name('i', Load(), lineno=416, col_offset=31)), Store(), lineno=416, col_offset=20)], Tuple([Name('opname', Load(), lineno=416, col_offset=36), Call(Name('conv', Load(), lineno=416, col_offset=44), [Name('self', Load(), lineno=416, col_offset=49), Name('oparg', Load(), lineno=416, col_offset=55)], [], None, None, lineno=416, col_offset=44)], Load(), lineno=416, col_offset=36), lineno=416, col_offset=20)], [], lineno=415, col_offset=16)], [], lineno=412, col_offset=12)], [], lineno=410, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=417, col_offset=8), 'stage', Store(), lineno=417, col_offset=8)], Name('CONV', Load(), lineno=417, col_offset=21), lineno=417, col_offset=8)], [], lineno=405, col_offset=4), FunctionDef('sort_cellvars', arguments([Name('self', Param(), lineno=419, col_offset=22)], None, None, []), [Expr(Str('Sort cellvars in the order of varnames and prune from freevars.\n        ', lineno=421, col_offset=-1), lineno=421, col_offset=-1), Assign([Name('cells', Store(), lineno=422, col_offset=8)], Dict([], [], lineno=422, col_offset=16), lineno=422, col_offset=8), For(Name('name', Store(), lineno=423, col_offset=12), Attribute(Name('self', Load(), lineno=423, col_offset=20), 'cellvars', Load(), lineno=423, col_offset=20), [Assign([Subscript(Name('cells', Load(), lineno=424, col_offset=12), Index(Name('name', Load(), lineno=424, col_offset=18)), Store(), lineno=424, col_offset=12)], Num(1, lineno=424, col_offset=26), lineno=424, col_offset=12)], [], lineno=423, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=425, col_offset=8), 'cellvars', Store(), lineno=425, col_offset=8)], ListComp(Name('name', Load(), lineno=425, col_offset=25), [comprehension(Name('name', Store(), lineno=425, col_offset=34), Attribute(Name('self', Load(), lineno=425, col_offset=42), 'varnames', Load(), lineno=425, col_offset=42), [Compare(Name('name', Load(), lineno=426, col_offset=28), [In()], [Name('cells', Load(), lineno=426, col_offset=36)], lineno=426, col_offset=28)])], lineno=425, col_offset=25), lineno=425, col_offset=8), For(Name('name', Store(), lineno=427, col_offset=12), Attribute(Name('self', Load(), lineno=427, col_offset=20), 'cellvars', Load(), lineno=427, col_offset=20), [Delete([Subscript(Name('cells', Load(), lineno=428, col_offset=16), Index(Name('name', Load(), lineno=428, col_offset=22)), Del(), lineno=428, col_offset=16)], lineno=428, col_offset=12)], [], lineno=427, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=429, col_offset=8), 'cellvars', Store(), lineno=429, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=429, col_offset=24), 'cellvars', Load(), lineno=429, col_offset=24), Add(), Call(Attribute(Name('cells', Load(), lineno=429, col_offset=40), 'keys', Load(), lineno=429, col_offset=40), [], [], None, None, lineno=429, col_offset=40), lineno=429, col_offset=24), lineno=429, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=430, col_offset=8), 'closure', Store(), lineno=430, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=430, col_offset=23), 'cellvars', Load(), lineno=430, col_offset=23), Add(), Attribute(Name('self', Load(), lineno=430, col_offset=39), 'freevars', Load(), lineno=430, col_offset=39), lineno=430, col_offset=23), lineno=430, col_offset=8)], [], lineno=419, col_offset=4), FunctionDef('_lookupName', arguments([Name('self', Param(), lineno=432, col_offset=20), Name('name', Param(), lineno=432, col_offset=26), Name('list', Param(), lineno=432, col_offset=32)], None, None, []), [Expr(Str("Return index of name in list, appending if necessary\n\n        This routine uses a list instead of a dictionary, because a\n        dictionary can't store two different keys if the keys have the\n        same value but different types, e.g. 2 and 2L.  The compiler\n        must treat these two separately, so it does an explicit type\n        comparison before comparing the values.\n        ", lineno=440, col_offset=-1), lineno=440, col_offset=-1), Assign([Name('t', Store(), lineno=441, col_offset=8)], Call(Name('type', Load(), lineno=441, col_offset=12), [Name('name', Load(), lineno=441, col_offset=17)], [], None, None, lineno=441, col_offset=12), lineno=441, col_offset=8), For(Name('i', Store(), lineno=442, col_offset=12), Call(Name('range', Load(), lineno=442, col_offset=17), [Call(Name('len', Load(), lineno=442, col_offset=23), [Name('list', Load(), lineno=442, col_offset=27)], [], None, None, lineno=442, col_offset=23)], [], None, None, lineno=442, col_offset=17), [If(BoolOp(And(), [Compare(Name('t', Load(), lineno=443, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=443, col_offset=20), [Subscript(Name('list', Load(), lineno=443, col_offset=25), Index(Name('i', Load(), lineno=443, col_offset=30)), Load(), lineno=443, col_offset=25)], [], None, None, lineno=443, col_offset=20)], lineno=443, col_offset=15), Compare(Subscript(Name('list', Load(), lineno=443, col_offset=38), Index(Name('i', Load(), lineno=443, col_offset=43)), Load(), lineno=443, col_offset=38), [Eq()], [Name('name', Load(), lineno=443, col_offset=49)], lineno=443, col_offset=38)], lineno=443, col_offset=15), [Return(Name('i', Load(), lineno=444, col_offset=23), lineno=444, col_offset=16)], [], lineno=443, col_offset=12)], [], lineno=442, col_offset=8), Assign([Name('end', Store(), lineno=445, col_offset=8)], Call(Name('len', Load(), lineno=445, col_offset=14), [Name('list', Load(), lineno=445, col_offset=18)], [], None, None, lineno=445, col_offset=14), lineno=445, col_offset=8), Expr(Call(Attribute(Name('list', Load(), lineno=446, col_offset=8), 'append', Load(), lineno=446, col_offset=8), [Name('name', Load(), lineno=446, col_offset=20)], [], None, None, lineno=446, col_offset=8), lineno=446, col_offset=8), Return(Name('end', Load(), lineno=447, col_offset=15), lineno=447, col_offset=8)], [], lineno=432, col_offset=4), Assign([Name('_converters', Store(), lineno=449, col_offset=4)], Dict([], [], lineno=449, col_offset=18), lineno=449, col_offset=4), FunctionDef('_convert_LOAD_CONST', arguments([Name('self', Param(), lineno=450, col_offset=28), Name('arg', Param(), lineno=450, col_offset=34)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=451, col_offset=11), [Name('arg', Load(), lineno=451, col_offset=19), Str('getCode', lineno=451, col_offset=24)], [], None, None, lineno=451, col_offset=11), [Assign([Name('arg', Store(), lineno=452, col_offset=12)], Call(Attribute(Name('arg', Load(), lineno=452, col_offset=18), 'getCode', Load(), lineno=452, col_offset=18), [], [], None, None, lineno=452, col_offset=18), lineno=452, col_offset=12)], [], lineno=451, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=453, col_offset=15), '_lookupName', Load(), lineno=453, col_offset=15), [Name('arg', Load(), lineno=453, col_offset=32), Attribute(Name('self', Load(), lineno=453, col_offset=37), 'consts', Load(), lineno=453, col_offset=37)], [], None, None, lineno=453, col_offset=15), lineno=453, col_offset=8)], [], lineno=450, col_offset=4), FunctionDef('_convert_LOAD_FAST', arguments([Name('self', Param(), lineno=455, col_offset=27), Name('arg', Param(), lineno=455, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=456, col_offset=8), '_lookupName', Load(), lineno=456, col_offset=8), [Name('arg', Load(), lineno=456, col_offset=25), Attribute(Name('self', Load(), lineno=456, col_offset=30), 'names', Load(), lineno=456, col_offset=30)], [], None, None, lineno=456, col_offset=8), lineno=456, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=457, col_offset=15), '_lookupName', Load(), lineno=457, col_offset=15), [Name('arg', Load(), lineno=457, col_offset=32), Attribute(Name('self', Load(), lineno=457, col_offset=37), 'varnames', Load(), lineno=457, col_offset=37)], [], None, None, lineno=457, col_offset=15), lineno=457, col_offset=8)], [], lineno=455, col_offset=4), Assign([Name('_convert_STORE_FAST', Store(), lineno=458, col_offset=4)], Name('_convert_LOAD_FAST', Load(), lineno=458, col_offset=26), lineno=458, col_offset=4), Assign([Name('_convert_DELETE_FAST', Store(), lineno=459, col_offset=4)], Name('_convert_LOAD_FAST', Load(), lineno=459, col_offset=27), lineno=459, col_offset=4), FunctionDef('_convert_LOAD_NAME', arguments([Name('self', Param(), lineno=461, col_offset=27), Name('arg', Param(), lineno=461, col_offset=33)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=462, col_offset=11), 'klass', Load(), lineno=462, col_offset=11), [Is()], [Name('None', Load(), lineno=462, col_offset=25)], lineno=462, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=463, col_offset=12), '_lookupName', Load(), lineno=463, col_offset=12), [Name('arg', Load(), lineno=463, col_offset=29), Attribute(Name('self', Load(), lineno=463, col_offset=34), 'varnames', Load(), lineno=463, col_offset=34)], [], None, None, lineno=463, col_offset=12), lineno=463, col_offset=12)], [], lineno=462, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=464, col_offset=15), '_lookupName', Load(), lineno=464, col_offset=15), [Name('arg', Load(), lineno=464, col_offset=32), Attribute(Name('self', Load(), lineno=464, col_offset=37), 'names', Load(), lineno=464, col_offset=37)], [], None, None, lineno=464, col_offset=15), lineno=464, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('_convert_NAME', arguments([Name('self', Param(), lineno=466, col_offset=22), Name('arg', Param(), lineno=466, col_offset=28)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=467, col_offset=11), 'klass', Load(), lineno=467, col_offset=11), [Is()], [Name('None', Load(), lineno=467, col_offset=25)], lineno=467, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=468, col_offset=12), '_lookupName', Load(), lineno=468, col_offset=12), [Name('arg', Load(), lineno=468, col_offset=29), Attribute(Name('self', Load(), lineno=468, col_offset=34), 'varnames', Load(), lineno=468, col_offset=34)], [], None, None, lineno=468, col_offset=12), lineno=468, col_offset=12)], [], lineno=467, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=469, col_offset=15), '_lookupName', Load(), lineno=469, col_offset=15), [Name('arg', Load(), lineno=469, col_offset=32), Attribute(Name('self', Load(), lineno=469, col_offset=37), 'names', Load(), lineno=469, col_offset=37)], [], None, None, lineno=469, col_offset=15), lineno=469, col_offset=8)], [], lineno=466, col_offset=4), Assign([Name('_convert_STORE_NAME', Store(), lineno=470, col_offset=4)], Name('_convert_NAME', Load(), lineno=470, col_offset=26), lineno=470, col_offset=4), Assign([Name('_convert_DELETE_NAME', Store(), lineno=471, col_offset=4)], Name('_convert_NAME', Load(), lineno=471, col_offset=27), lineno=471, col_offset=4), Assign([Name('_convert_IMPORT_NAME', Store(), lineno=472, col_offset=4)], Name('_convert_NAME', Load(), lineno=472, col_offset=27), lineno=472, col_offset=4), Assign([Name('_convert_IMPORT_FROM', Store(), lineno=473, col_offset=4)], Name('_convert_NAME', Load(), lineno=473, col_offset=27), lineno=473, col_offset=4), Assign([Name('_convert_STORE_ATTR', Store(), lineno=474, col_offset=4)], Name('_convert_NAME', Load(), lineno=474, col_offset=26), lineno=474, col_offset=4), Assign([Name('_convert_LOAD_ATTR', Store(), lineno=475, col_offset=4)], Name('_convert_NAME', Load(), lineno=475, col_offset=25), lineno=475, col_offset=4), Assign([Name('_convert_DELETE_ATTR', Store(), lineno=476, col_offset=4)], Name('_convert_NAME', Load(), lineno=476, col_offset=27), lineno=476, col_offset=4), Assign([Name('_convert_LOAD_GLOBAL', Store(), lineno=477, col_offset=4)], Name('_convert_NAME', Load(), lineno=477, col_offset=27), lineno=477, col_offset=4), Assign([Name('_convert_STORE_GLOBAL', Store(), lineno=478, col_offset=4)], Name('_convert_NAME', Load(), lineno=478, col_offset=28), lineno=478, col_offset=4), Assign([Name('_convert_DELETE_GLOBAL', Store(), lineno=479, col_offset=4)], Name('_convert_NAME', Load(), lineno=479, col_offset=29), lineno=479, col_offset=4), FunctionDef('_convert_DEREF', arguments([Name('self', Param(), lineno=481, col_offset=23), Name('arg', Param(), lineno=481, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=482, col_offset=8), '_lookupName', Load(), lineno=482, col_offset=8), [Name('arg', Load(), lineno=482, col_offset=25), Attribute(Name('self', Load(), lineno=482, col_offset=30), 'names', Load(), lineno=482, col_offset=30)], [], None, None, lineno=482, col_offset=8), lineno=482, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=8), '_lookupName', Load(), lineno=483, col_offset=8), [Name('arg', Load(), lineno=483, col_offset=25), Attribute(Name('self', Load(), lineno=483, col_offset=30), 'varnames', Load(), lineno=483, col_offset=30)], [], None, None, lineno=483, col_offset=8), lineno=483, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=484, col_offset=15), '_lookupName', Load(), lineno=484, col_offset=15), [Name('arg', Load(), lineno=484, col_offset=32), Attribute(Name('self', Load(), lineno=484, col_offset=37), 'closure', Load(), lineno=484, col_offset=37)], [], None, None, lineno=484, col_offset=15), lineno=484, col_offset=8)], [], lineno=481, col_offset=4), Assign([Name('_convert_LOAD_DEREF', Store(), lineno=485, col_offset=4)], Name('_convert_DEREF', Load(), lineno=485, col_offset=26), lineno=485, col_offset=4), Assign([Name('_convert_STORE_DEREF', Store(), lineno=486, col_offset=4)], Name('_convert_DEREF', Load(), lineno=486, col_offset=27), lineno=486, col_offset=4), FunctionDef('_convert_LOAD_CLOSURE', arguments([Name('self', Param(), lineno=488, col_offset=30), Name('arg', Param(), lineno=488, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=489, col_offset=8), '_lookupName', Load(), lineno=489, col_offset=8), [Name('arg', Load(), lineno=489, col_offset=25), Attribute(Name('self', Load(), lineno=489, col_offset=30), 'varnames', Load(), lineno=489, col_offset=30)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=490, col_offset=15), '_lookupName', Load(), lineno=490, col_offset=15), [Name('arg', Load(), lineno=490, col_offset=32), Attribute(Name('self', Load(), lineno=490, col_offset=37), 'closure', Load(), lineno=490, col_offset=37)], [], None, None, lineno=490, col_offset=15), lineno=490, col_offset=8)], [], lineno=488, col_offset=4), Assign([Name('_cmp', Store(), lineno=492, col_offset=4)], Call(Name('list', Load(), lineno=492, col_offset=11), [Attribute(Name('dis', Load(), lineno=492, col_offset=16), 'cmp_op', Load(), lineno=492, col_offset=16)], [], None, None, lineno=492, col_offset=11), lineno=492, col_offset=4), FunctionDef('_convert_COMPARE_OP', arguments([Name('self', Param(), lineno=493, col_offset=28), Name('arg', Param(), lineno=493, col_offset=34)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=494, col_offset=15), '_cmp', Load(), lineno=494, col_offset=15), 'index', Load(), lineno=494, col_offset=15), [Name('arg', Load(), lineno=494, col_offset=31)], [], None, None, lineno=494, col_offset=15), lineno=494, col_offset=8)], [], lineno=493, col_offset=4), For(Tuple([Name('name', Store(), lineno=498, col_offset=8), Name('obj', Store(), lineno=498, col_offset=14)], Store(), lineno=498, col_offset=8), Call(Attribute(Call(Name('locals', Load(), lineno=498, col_offset=21), [], [], None, None, lineno=498, col_offset=21), 'items', Load(), lineno=498, col_offset=21), [], [], None, None, lineno=498, col_offset=21), [If(Compare(Subscript(Name('name', Load(), lineno=499, col_offset=11), Slice(None, Num(9, lineno=499, col_offset=17), None), Load(), lineno=499, col_offset=11), [Eq()], [Str('_convert_', lineno=499, col_offset=23)], lineno=499, col_offset=11), [Assign([Name('opname', Store(), lineno=500, col_offset=12)], Subscript(Name('name', Load(), lineno=500, col_offset=21), Slice(Num(9, lineno=500, col_offset=26), None, None), Load(), lineno=500, col_offset=21), lineno=500, col_offset=12), Assign([Subscript(Name('_converters', Load(), lineno=501, col_offset=12), Index(Name('opname', Load(), lineno=501, col_offset=24)), Store(), lineno=501, col_offset=12)], Name('obj', Load(), lineno=501, col_offset=34), lineno=501, col_offset=12)], [], lineno=499, col_offset=8)], [], lineno=498, col_offset=4), Delete([Name('name', Del(), lineno=502, col_offset=8), Name('obj', Del(), lineno=502, col_offset=14), Name('opname', Del(), lineno=502, col_offset=19)], lineno=502, col_offset=4), FunctionDef('makeByteCode', arguments([Name('self', Param(), lineno=504, col_offset=21)], None, None, []), [Assert(Compare(Attribute(Name('self', Load(), lineno=505, col_offset=15), 'stage', Load(), lineno=505, col_offset=15), [Eq()], [Name('CONV', Load(), lineno=505, col_offset=29)], lineno=505, col_offset=15), None, lineno=505, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=506, col_offset=8), 'lnotab', Store(), lineno=506, col_offset=8), Name('lnotab', Store(), lineno=506, col_offset=22)], Call(Name('LineAddrTable', Load(), lineno=506, col_offset=31), [], [], None, None, lineno=506, col_offset=31), lineno=506, col_offset=8), For(Name('t', Store(), lineno=507, col_offset=12), Attribute(Name('self', Load(), lineno=507, col_offset=17), 'insts', Load(), lineno=507, col_offset=17), [Assign([Name('opname', Store(), lineno=508, col_offset=12)], Subscript(Name('t', Load(), lineno=508, col_offset=21), Index(Num(0, lineno=508, col_offset=23)), Load(), lineno=508, col_offset=21), lineno=508, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=509, col_offset=15), [Name('t', Load(), lineno=509, col_offset=19)], [], None, None, lineno=509, col_offset=15), [Eq()], [Num(1, lineno=509, col_offset=25)], lineno=509, col_offset=15), [Expr(Call(Attribute(Name('lnotab', Load(), lineno=510, col_offset=16), 'addCode', Load(), lineno=510, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=510, col_offset=31), 'opnum', Load(), lineno=510, col_offset=31), Index(Name('opname', Load(), lineno=510, col_offset=42)), Load(), lineno=510, col_offset=31)], [], None, None, lineno=510, col_offset=16), lineno=510, col_offset=16)], [Assign([Name('oparg', Store(), lineno=512, col_offset=16)], Subscript(Name('t', Load(), lineno=512, col_offset=24), Index(Num(1, lineno=512, col_offset=26)), Load(), lineno=512, col_offset=24), lineno=512, col_offset=16), If(Compare(Name('opname', Load(), lineno=513, col_offset=19), [Eq()], [Str('SET_LINENO', lineno=513, col_offset=29)], lineno=513, col_offset=19), [Expr(Call(Attribute(Name('lnotab', Load(), lineno=514, col_offset=20), 'nextLine', Load(), lineno=514, col_offset=20), [Name('oparg', Load(), lineno=514, col_offset=36)], [], None, None, lineno=514, col_offset=20), lineno=514, col_offset=20), Continue( lineno=515, col_offset=20)], [], lineno=513, col_offset=16), Assign([Tuple([Name('hi', Store(), lineno=516, col_offset=16), Name('lo', Store(), lineno=516, col_offset=20)], Store(), lineno=516, col_offset=16)], Call(Name('twobyte', Load(), lineno=516, col_offset=25), [Name('oparg', Load(), lineno=516, col_offset=33)], [], None, None, lineno=516, col_offset=25), lineno=516, col_offset=16), TryExcept([Expr(Call(Attribute(Name('lnotab', Load(), lineno=518, col_offset=20), 'addCode', Load(), lineno=518, col_offset=20), [Subscript(Attribute(Name('self', Load(), lineno=518, col_offset=35), 'opnum', Load(), lineno=518, col_offset=35), Index(Name('opname', Load(), lineno=518, col_offset=46)), Load(), lineno=518, col_offset=35), Name('lo', Load(), lineno=518, col_offset=55), Name('hi', Load(), lineno=518, col_offset=59)], [], None, None, lineno=518, col_offset=20), lineno=518, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=519, col_offset=23), None, [Print(None, [Name('opname', Load(), lineno=520, col_offset=26), Name('oparg', Load(), lineno=520, col_offset=34)], True, lineno=520, col_offset=20), Print(None, [Subscript(Attribute(Name('self', Load(), lineno=521, col_offset=26), 'opnum', Load(), lineno=521, col_offset=26), Index(Name('opname', Load(), lineno=521, col_offset=37)), Load(), lineno=521, col_offset=26), Name('lo', Load(), lineno=521, col_offset=46), Name('hi', Load(), lineno=521, col_offset=50)], True, lineno=521, col_offset=20), Raise(None, None, None, lineno=522, col_offset=20)], lineno=519, col_offset=16)], [], lineno=517, col_offset=16)], lineno=509, col_offset=12)], [], lineno=507, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=523, col_offset=8), 'stage', Store(), lineno=523, col_offset=8)], Name('DONE', Load(), lineno=523, col_offset=21), lineno=523, col_offset=8)], [], lineno=504, col_offset=4), Assign([Name('opnum', Store(), lineno=525, col_offset=4)], Dict([], [], lineno=525, col_offset=12), lineno=525, col_offset=4), For(Name('num', Store(), lineno=526, col_offset=8), Call(Name('range', Load(), lineno=526, col_offset=15), [Call(Name('len', Load(), lineno=526, col_offset=21), [Attribute(Name('dis', Load(), lineno=526, col_offset=25), 'opname', Load(), lineno=526, col_offset=25)], [], None, None, lineno=526, col_offset=21)], [], None, None, lineno=526, col_offset=15), [Assign([Subscript(Name('opnum', Load(), lineno=527, col_offset=8), Index(Subscript(Attribute(Name('dis', Load(), lineno=527, col_offset=14), 'opname', Load(), lineno=527, col_offset=14), Index(Name('num', Load(), lineno=527, col_offset=25)), Load(), lineno=527, col_offset=14)), Store(), lineno=527, col_offset=8)], Name('num', Load(), lineno=527, col_offset=33), lineno=527, col_offset=8)], [], lineno=526, col_offset=4), Delete([Name('num', Del(), lineno=528, col_offset=8)], lineno=528, col_offset=4), FunctionDef('newCodeObject', arguments([Name('self', Param(), lineno=530, col_offset=22)], None, None, []), [Assert(Compare(Attribute(Name('self', Load(), lineno=531, col_offset=15), 'stage', Load(), lineno=531, col_offset=15), [Eq()], [Name('DONE', Load(), lineno=531, col_offset=29)], lineno=531, col_offset=15), None, lineno=531, col_offset=8), If(Compare(BinOp(Attribute(Name('self', Load(), lineno=532, col_offset=12), 'flags', Load(), lineno=532, col_offset=12), BitAnd(), Name('CO_NEWLOCALS', Load(), lineno=532, col_offset=25), lineno=532, col_offset=12), [Eq()], [Num(0, lineno=532, col_offset=42)], lineno=532, col_offset=11), [Assign([Name('nlocals', Store(), lineno=533, col_offset=12)], Num(0, lineno=533, col_offset=22), lineno=533, col_offset=12)], [Assign([Name('nlocals', Store(), lineno=535, col_offset=12)], Call(Name('len', Load(), lineno=535, col_offset=22), [Attribute(Name('self', Load(), lineno=535, col_offset=26), 'varnames', Load(), lineno=535, col_offset=26)], [], None, None, lineno=535, col_offset=22), lineno=535, col_offset=12)], lineno=532, col_offset=8), Assign([Name('argcount', Store(), lineno=536, col_offset=8)], Attribute(Name('self', Load(), lineno=536, col_offset=19), 'argcount', Load(), lineno=536, col_offset=19), lineno=536, col_offset=8), If(BinOp(Attribute(Name('self', Load(), lineno=537, col_offset=11), 'flags', Load(), lineno=537, col_offset=11), BitAnd(), Name('CO_VARKEYWORDS', Load(), lineno=537, col_offset=24), lineno=537, col_offset=11), [Assign([Name('argcount', Store(), lineno=538, col_offset=12)], BinOp(Name('argcount', Load(), lineno=538, col_offset=23), Sub(), Num(1, lineno=538, col_offset=34), lineno=538, col_offset=23), lineno=538, col_offset=12)], [], lineno=537, col_offset=8), Return(Call(Attribute(Name('types', Load(), lineno=539, col_offset=15), 'CodeType', Load(), lineno=539, col_offset=15), [Name('argcount', Load(), lineno=539, col_offset=30), Name('nlocals', Load(), lineno=539, col_offset=40), Attribute(Name('self', Load(), lineno=539, col_offset=49), 'stacksize', Load(), lineno=539, col_offset=49), Attribute(Name('self', Load(), lineno=539, col_offset=65), 'flags', Load(), lineno=539, col_offset=65), Call(Attribute(Attribute(Name('self', Load(), lineno=540, col_offset=24), 'lnotab', Load(), lineno=540, col_offset=24), 'getCode', Load(), lineno=540, col_offset=24), [], [], None, None, lineno=540, col_offset=24), Call(Attribute(Name('self', Load(), lineno=540, col_offset=47), 'getConsts', Load(), lineno=540, col_offset=47), [], [], None, None, lineno=540, col_offset=47), Call(Name('tuple', Load(), lineno=541, col_offset=24), [Attribute(Name('self', Load(), lineno=541, col_offset=30), 'names', Load(), lineno=541, col_offset=30)], [], None, None, lineno=541, col_offset=24), Call(Name('tuple', Load(), lineno=541, col_offset=43), [Attribute(Name('self', Load(), lineno=541, col_offset=49), 'varnames', Load(), lineno=541, col_offset=49)], [], None, None, lineno=541, col_offset=43), Attribute(Name('self', Load(), lineno=542, col_offset=24), 'filename', Load(), lineno=542, col_offset=24), Attribute(Name('self', Load(), lineno=542, col_offset=39), 'name', Load(), lineno=542, col_offset=39), Attribute(Attribute(Name('self', Load(), lineno=542, col_offset=50), 'lnotab', Load(), lineno=542, col_offset=50), 'firstline', Load(), lineno=542, col_offset=50), Call(Attribute(Attribute(Name('self', Load(), lineno=543, col_offset=24), 'lnotab', Load(), lineno=543, col_offset=24), 'getTable', Load(), lineno=543, col_offset=24), [], [], None, None, lineno=543, col_offset=24), Call(Name('tuple', Load(), lineno=543, col_offset=48), [Attribute(Name('self', Load(), lineno=543, col_offset=54), 'freevars', Load(), lineno=543, col_offset=54)], [], None, None, lineno=543, col_offset=48), Call(Name('tuple', Load(), lineno=544, col_offset=24), [Attribute(Name('self', Load(), lineno=544, col_offset=30), 'cellvars', Load(), lineno=544, col_offset=30)], [], None, None, lineno=544, col_offset=24)], [], None, None, lineno=539, col_offset=15), lineno=539, col_offset=8)], [], lineno=530, col_offset=4), FunctionDef('getConsts', arguments([Name('self', Param(), lineno=546, col_offset=18)], None, None, []), [Expr(Str('Return a tuple for the const slot of the code object\n\n        Must convert references to code (MAKE_FUNCTION) to code\n        objects recursively.\n        ', lineno=551, col_offset=-1), lineno=551, col_offset=-1), Assign([Name('l', Store(), lineno=552, col_offset=8)], List([], Load(), lineno=552, col_offset=12), lineno=552, col_offset=8), For(Name('elt', Store(), lineno=553, col_offset=12), Attribute(Name('self', Load(), lineno=553, col_offset=19), 'consts', Load(), lineno=553, col_offset=19), [If(Call(Name('isinstance', Load(), lineno=554, col_offset=15), [Name('elt', Load(), lineno=554, col_offset=26), Name('PyFlowGraph', Load(), lineno=554, col_offset=31)], [], None, None, lineno=554, col_offset=15), [Assign([Name('elt', Store(), lineno=555, col_offset=16)], Call(Attribute(Name('elt', Load(), lineno=555, col_offset=22), 'getCode', Load(), lineno=555, col_offset=22), [], [], None, None, lineno=555, col_offset=22), lineno=555, col_offset=16)], [], lineno=554, col_offset=12), Expr(Call(Attribute(Name('l', Load(), lineno=556, col_offset=12), 'append', Load(), lineno=556, col_offset=12), [Name('elt', Load(), lineno=556, col_offset=21)], [], None, None, lineno=556, col_offset=12), lineno=556, col_offset=12)], [], lineno=553, col_offset=8), Return(Call(Name('tuple', Load(), lineno=557, col_offset=15), [Name('l', Load(), lineno=557, col_offset=21)], [], None, None, lineno=557, col_offset=15), lineno=557, col_offset=8)], [], lineno=546, col_offset=4)], [], lineno=254, col_offset=0), FunctionDef('isJump', arguments([Name('opname', Param(), lineno=559, col_offset=11)], None, None, []), [If(Compare(Subscript(Name('opname', Load(), lineno=560, col_offset=7), Slice(None, Num(4, lineno=560, col_offset=15), None), Load(), lineno=560, col_offset=7), [Eq()], [Str('JUMP', lineno=560, col_offset=21)], lineno=560, col_offset=7), [Return(Num(1, lineno=561, col_offset=15), lineno=561, col_offset=8)], [], lineno=560, col_offset=4)], [], lineno=559, col_offset=0), ClassDef('TupleArg', [], [Expr(Str('Helper for marking func defs with nested tuples in arglist', lineno=564, col_offset=4), lineno=564, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=565, col_offset=17), Name('count', Param(), lineno=565, col_offset=23), Name('names', Param(), lineno=565, col_offset=30)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=566, col_offset=8), 'count', Store(), lineno=566, col_offset=8)], Name('count', Load(), lineno=566, col_offset=21), lineno=566, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=567, col_offset=8), 'names', Store(), lineno=567, col_offset=8)], Name('names', Load(), lineno=567, col_offset=21), lineno=567, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=568, col_offset=17)], None, None, []), [Return(BinOp(Str('TupleArg(%s, %s)', lineno=569, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=569, col_offset=37), 'count', Load(), lineno=569, col_offset=37), Attribute(Name('self', Load(), lineno=569, col_offset=49), 'names', Load(), lineno=569, col_offset=49)], Load(), lineno=569, col_offset=37), lineno=569, col_offset=15), lineno=569, col_offset=8)], [], lineno=568, col_offset=4), FunctionDef('getName', arguments([Name('self', Param(), lineno=570, col_offset=16)], None, None, []), [Return(BinOp(Str('.%d', lineno=571, col_offset=15), Mod(), Attribute(Name('self', Load(), lineno=571, col_offset=23), 'count', Load(), lineno=571, col_offset=23), lineno=571, col_offset=15), lineno=571, col_offset=8)], [], lineno=570, col_offset=4)], [], lineno=563, col_offset=0), FunctionDef('getArgCount', arguments([Name('args', Param(), lineno=573, col_offset=16)], None, None, []), [Assign([Name('argcount', Store(), lineno=574, col_offset=4)], Call(Name('len', Load(), lineno=574, col_offset=15), [Name('args', Load(), lineno=574, col_offset=19)], [], None, None, lineno=574, col_offset=15), lineno=574, col_offset=4), If(Name('args', Load(), lineno=575, col_offset=7), [For(Name('arg', Store(), lineno=576, col_offset=12), Name('args', Load(), lineno=576, col_offset=19), [If(Call(Name('isinstance', Load(), lineno=577, col_offset=15), [Name('arg', Load(), lineno=577, col_offset=26), Name('TupleArg', Load(), lineno=577, col_offset=31)], [], None, None, lineno=577, col_offset=15), [Assign([Name('numNames', Store(), lineno=578, col_offset=16)], Call(Name('len', Load(), lineno=578, col_offset=27), [Call(Attribute(Name('misc', Load(), lineno=578, col_offset=31), 'flatten', Load(), lineno=578, col_offset=31), [Attribute(Name('arg', Load(), lineno=578, col_offset=44), 'names', Load(), lineno=578, col_offset=44)], [], None, None, lineno=578, col_offset=31)], [], None, None, lineno=578, col_offset=27), lineno=578, col_offset=16), Assign([Name('argcount', Store(), lineno=579, col_offset=16)], BinOp(Name('argcount', Load(), lineno=579, col_offset=27), Sub(), Name('numNames', Load(), lineno=579, col_offset=38), lineno=579, col_offset=27), lineno=579, col_offset=16)], [], lineno=577, col_offset=12)], [], lineno=576, col_offset=8)], [], lineno=575, col_offset=4), Return(Name('argcount', Load(), lineno=580, col_offset=11), lineno=580, col_offset=4)], [], lineno=573, col_offset=0), FunctionDef('twobyte', arguments([Name('val', Param(), lineno=582, col_offset=12)], None, None, []), [Expr(Str('Convert an int argument into high and low bytes', lineno=583, col_offset=4), lineno=583, col_offset=4), Assert(Call(Name('isinstance', Load(), lineno=584, col_offset=11), [Name('val', Load(), lineno=584, col_offset=22), Name('int', Load(), lineno=584, col_offset=27)], [], None, None, lineno=584, col_offset=11), None, lineno=584, col_offset=4), Return(Call(Name('divmod', Load(), lineno=585, col_offset=11), [Name('val', Load(), lineno=585, col_offset=18), Num(256, lineno=585, col_offset=23)], [], None, None, lineno=585, col_offset=11), lineno=585, col_offset=4)], [], lineno=582, col_offset=0), ClassDef('LineAddrTable', [], [Expr(Str("lnotab\n\n    This class builds the lnotab, which is documented in compile.c.\n    Here's a brief recap:\n\n    For each SET_LINENO instruction after the first one, two bytes are\n    added to lnotab.  (In some cases, multiple two-byte entries are\n    added.)  The first byte is the distance in bytes between the\n    instruction for the last SET_LINENO and the current SET_LINENO.\n    The second byte is offset in line numbers.  If either offset is\n    greater than 255, multiple two-byte entries are added -- see\n    compile.c for the delicate details.\n    ", lineno=600, col_offset=-1), lineno=600, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=602, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=603, col_offset=8), 'code', Store(), lineno=603, col_offset=8)], List([], Load(), lineno=603, col_offset=20), lineno=603, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=604, col_offset=8), 'codeOffset', Store(), lineno=604, col_offset=8)], Num(0, lineno=604, col_offset=26), lineno=604, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=605, col_offset=8), 'firstline', Store(), lineno=605, col_offset=8)], Num(0, lineno=605, col_offset=25), lineno=605, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=606, col_offset=8), 'lastline', Store(), lineno=606, col_offset=8)], Num(0, lineno=606, col_offset=24), lineno=606, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=607, col_offset=8), 'lastoff', Store(), lineno=607, col_offset=8)], Num(0, lineno=607, col_offset=23), lineno=607, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=608, col_offset=8), 'lnotab', Store(), lineno=608, col_offset=8)], List([], Load(), lineno=608, col_offset=22), lineno=608, col_offset=8)], [], lineno=602, col_offset=4), FunctionDef('addCode', arguments([Name('self', Param(), lineno=610, col_offset=16)], 'args', None, []), [For(Name('arg', Store(), lineno=611, col_offset=12), Name('args', Load(), lineno=611, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=612, col_offset=12), 'code', Load(), lineno=612, col_offset=12), 'append', Load(), lineno=612, col_offset=12), [Call(Name('chr', Load(), lineno=612, col_offset=29), [Name('arg', Load(), lineno=612, col_offset=33)], [], None, None, lineno=612, col_offset=29)], [], None, None, lineno=612, col_offset=12), lineno=612, col_offset=12)], [], lineno=611, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=613, col_offset=8), 'codeOffset', Store(), lineno=613, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=613, col_offset=26), 'codeOffset', Load(), lineno=613, col_offset=26), Add(), Call(Name('len', Load(), lineno=613, col_offset=44), [Name('args', Load(), lineno=613, col_offset=48)], [], None, None, lineno=613, col_offset=44), lineno=613, col_offset=26), lineno=613, col_offset=8)], [], lineno=610, col_offset=4), FunctionDef('nextLine', arguments([Name('self', Param(), lineno=615, col_offset=17), Name('lineno', Param(), lineno=615, col_offset=23)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=616, col_offset=11), 'firstline', Load(), lineno=616, col_offset=11), [Eq()], [Num(0, lineno=616, col_offset=29)], lineno=616, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=617, col_offset=12), 'firstline', Store(), lineno=617, col_offset=12)], Name('lineno', Load(), lineno=617, col_offset=29), lineno=617, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=618, col_offset=12), 'lastline', Store(), lineno=618, col_offset=12)], Name('lineno', Load(), lineno=618, col_offset=28), lineno=618, col_offset=12)], [Assign([Name('addr', Store(), lineno=621, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=621, col_offset=19), 'codeOffset', Load(), lineno=621, col_offset=19), Sub(), Attribute(Name('self', Load(), lineno=621, col_offset=37), 'lastoff', Load(), lineno=621, col_offset=37), lineno=621, col_offset=19), lineno=621, col_offset=12), Assign([Name('line', Store(), lineno=622, col_offset=12)], BinOp(Name('lineno', Load(), lineno=622, col_offset=19), Sub(), Attribute(Name('self', Load(), lineno=622, col_offset=28), 'lastline', Load(), lineno=622, col_offset=28), lineno=622, col_offset=19), lineno=622, col_offset=12), If(Compare(Name('line', Load(), lineno=633, col_offset=15), [GtE()], [Num(0, lineno=633, col_offset=23)], lineno=633, col_offset=15), [Assign([Name('push', Store(), lineno=634, col_offset=16)], Attribute(Attribute(Name('self', Load(), lineno=634, col_offset=23), 'lnotab', Load(), lineno=634, col_offset=23), 'append', Load(), lineno=634, col_offset=23), lineno=634, col_offset=16), While(Compare(Name('addr', Load(), lineno=635, col_offset=22), [Gt()], [Num(255, lineno=635, col_offset=29)], lineno=635, col_offset=22), [Expr(Call(Name('push', Load(), lineno=636, col_offset=20), [Num(255, lineno=636, col_offset=25)], [], None, None, lineno=636, col_offset=20), lineno=636, col_offset=20), Expr(Call(Name('push', Load(), lineno=636, col_offset=31), [Num(0, lineno=636, col_offset=36)], [], None, None, lineno=636, col_offset=31), lineno=636, col_offset=31), AugAssign(Name('addr', Store(), lineno=637, col_offset=20), Sub(), Num(255, lineno=637, col_offset=28), lineno=637, col_offset=20)], [], lineno=635, col_offset=16), While(Compare(Name('line', Load(), lineno=638, col_offset=22), [Gt()], [Num(255, lineno=638, col_offset=29)], lineno=638, col_offset=22), [Expr(Call(Name('push', Load(), lineno=639, col_offset=20), [Name('addr', Load(), lineno=639, col_offset=25)], [], None, None, lineno=639, col_offset=20), lineno=639, col_offset=20), Expr(Call(Name('push', Load(), lineno=639, col_offset=32), [Num(255, lineno=639, col_offset=37)], [], None, None, lineno=639, col_offset=32), lineno=639, col_offset=32), AugAssign(Name('line', Store(), lineno=640, col_offset=20), Sub(), Num(255, lineno=640, col_offset=28), lineno=640, col_offset=20), Assign([Name('addr', Store(), lineno=641, col_offset=20)], Num(0, lineno=641, col_offset=27), lineno=641, col_offset=20)], [], lineno=638, col_offset=16), If(BoolOp(Or(), [Compare(Name('addr', Load(), lineno=642, col_offset=19), [Gt()], [Num(0, lineno=642, col_offset=26)], lineno=642, col_offset=19), Compare(Name('line', Load(), lineno=642, col_offset=31), [Gt()], [Num(0, lineno=642, col_offset=38)], lineno=642, col_offset=31)], lineno=642, col_offset=19), [Expr(Call(Name('push', Load(), lineno=643, col_offset=20), [Name('addr', Load(), lineno=643, col_offset=25)], [], None, None, lineno=643, col_offset=20), lineno=643, col_offset=20), Expr(Call(Name('push', Load(), lineno=643, col_offset=32), [Name('line', Load(), lineno=643, col_offset=37)], [], None, None, lineno=643, col_offset=32), lineno=643, col_offset=32)], [], lineno=642, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=644, col_offset=16), 'lastline', Store(), lineno=644, col_offset=16)], Name('lineno', Load(), lineno=644, col_offset=32), lineno=644, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=645, col_offset=16), 'lastoff', Store(), lineno=645, col_offset=16)], Attribute(Name('self', Load(), lineno=645, col_offset=31), 'codeOffset', Load(), lineno=645, col_offset=31), lineno=645, col_offset=16)], [], lineno=633, col_offset=12)], lineno=616, col_offset=8)], [], lineno=615, col_offset=4), FunctionDef('getCode', arguments([Name('self', Param(), lineno=647, col_offset=16)], None, None, []), [Return(Call(Attribute(Str('', lineno=648, col_offset=15), 'join', Load(), lineno=648, col_offset=15), [Attribute(Name('self', Load(), lineno=648, col_offset=23), 'code', Load(), lineno=648, col_offset=23)], [], None, None, lineno=648, col_offset=15), lineno=648, col_offset=8)], [], lineno=647, col_offset=4), FunctionDef('getTable', arguments([Name('self', Param(), lineno=650, col_offset=17)], None, None, []), [Return(Call(Attribute(Str('', lineno=651, col_offset=15), 'join', Load(), lineno=651, col_offset=15), [Call(Name('map', Load(), lineno=651, col_offset=23), [Name('chr', Load(), lineno=651, col_offset=27), Attribute(Name('self', Load(), lineno=651, col_offset=32), 'lnotab', Load(), lineno=651, col_offset=32)], [], None, None, lineno=651, col_offset=23)], [], None, None, lineno=651, col_offset=15), lineno=651, col_offset=8)], [], lineno=650, col_offset=4)], [], lineno=587, col_offset=0), ClassDef('StackDepthTracker', [], [FunctionDef('findDepth', arguments([Name('self', Param(), lineno=657, col_offset=18), Name('insts', Param(), lineno=657, col_offset=24), Name('debug', Param(), lineno=657, col_offset=31)], None, None, [Num(0, lineno=657, col_offset=37)]), [Assign([Name('depth', Store(), lineno=658, col_offset=8)], Num(0, lineno=658, col_offset=16), lineno=658, col_offset=8), Assign([Name('maxDepth', Store(), lineno=659, col_offset=8)], Num(0, lineno=659, col_offset=19), lineno=659, col_offset=8), For(Name('i', Store(), lineno=660, col_offset=12), Name('insts', Load(), lineno=660, col_offset=17), [Assign([Name('opname', Store(), lineno=661, col_offset=12)], Subscript(Name('i', Load(), lineno=661, col_offset=21), Index(Num(0, lineno=661, col_offset=23)), Load(), lineno=661, col_offset=21), lineno=661, col_offset=12), If(Name('debug', Load(), lineno=662, col_offset=15), [Print(None, [Name('i', Load(), lineno=663, col_offset=22)], False, lineno=663, col_offset=16)], [], lineno=662, col_offset=12), Assign([Name('delta', Store(), lineno=664, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=664, col_offset=20), 'effect', Load(), lineno=664, col_offset=20), 'get', Load(), lineno=664, col_offset=20), [Name('opname', Load(), lineno=664, col_offset=36), Name('None', Load(), lineno=664, col_offset=44)], [], None, None, lineno=664, col_offset=20), lineno=664, col_offset=12), If(Compare(Name('delta', Load(), lineno=665, col_offset=15), [IsNot()], [Name('None', Load(), lineno=665, col_offset=28)], lineno=665, col_offset=15), [Assign([Name('depth', Store(), lineno=666, col_offset=16)], BinOp(Name('depth', Load(), lineno=666, col_offset=24), Add(), Name('delta', Load(), lineno=666, col_offset=32), lineno=666, col_offset=24), lineno=666, col_offset=16)], [For(Tuple([Name('pat', Store(), lineno=669, col_offset=20), Name('pat_delta', Store(), lineno=669, col_offset=25)], Store(), lineno=669, col_offset=20), Attribute(Name('self', Load(), lineno=669, col_offset=38), 'patterns', Load(), lineno=669, col_offset=38), [If(Compare(Subscript(Name('opname', Load(), lineno=670, col_offset=23), Slice(None, Call(Name('len', Load(), lineno=670, col_offset=31), [Name('pat', Load(), lineno=670, col_offset=35)], [], None, None, lineno=670, col_offset=31), None), Load(), lineno=670, col_offset=23), [Eq()], [Name('pat', Load(), lineno=670, col_offset=44)], lineno=670, col_offset=23), [Assign([Name('delta', Store(), lineno=671, col_offset=24)], Name('pat_delta', Load(), lineno=671, col_offset=32), lineno=671, col_offset=24), Assign([Name('depth', Store(), lineno=672, col_offset=24)], BinOp(Name('depth', Load(), lineno=672, col_offset=32), Add(), Name('delta', Load(), lineno=672, col_offset=40), lineno=672, col_offset=32), lineno=672, col_offset=24), Break( lineno=673, col_offset=24)], [], lineno=670, col_offset=20)], [], lineno=669, col_offset=16), If(Compare(Name('delta', Load(), lineno=675, col_offset=19), [Is()], [Name('None', Load(), lineno=675, col_offset=28)], lineno=675, col_offset=19), [Assign([Name('meth', Store(), lineno=676, col_offset=20)], Call(Name('getattr', Load(), lineno=676, col_offset=27), [Name('self', Load(), lineno=676, col_offset=35), Name('opname', Load(), lineno=676, col_offset=41), Name('None', Load(), lineno=676, col_offset=49)], [], None, None, lineno=676, col_offset=27), lineno=676, col_offset=20), If(Compare(Name('meth', Load(), lineno=677, col_offset=23), [IsNot()], [Name('None', Load(), lineno=677, col_offset=35)], lineno=677, col_offset=23), [Assign([Name('depth', Store(), lineno=678, col_offset=24)], BinOp(Name('depth', Load(), lineno=678, col_offset=32), Add(), Call(Name('meth', Load(), lineno=678, col_offset=40), [Subscript(Name('i', Load(), lineno=678, col_offset=45), Index(Num(1, lineno=678, col_offset=47)), Load(), lineno=678, col_offset=45)], [], None, None, lineno=678, col_offset=40), lineno=678, col_offset=32), lineno=678, col_offset=24)], [], lineno=677, col_offset=20)], [], lineno=675, col_offset=16)], lineno=665, col_offset=12), If(Compare(Name('depth', Load(), lineno=679, col_offset=15), [Gt()], [Name('maxDepth', Load(), lineno=679, col_offset=23)], lineno=679, col_offset=15), [Assign([Name('maxDepth', Store(), lineno=680, col_offset=16)], Name('depth', Load(), lineno=680, col_offset=27), lineno=680, col_offset=16)], [], lineno=679, col_offset=12), If(Name('debug', Load(), lineno=681, col_offset=15), [Print(None, [Name('depth', Load(), lineno=682, col_offset=22), Name('maxDepth', Load(), lineno=682, col_offset=29)], True, lineno=682, col_offset=16)], [], lineno=681, col_offset=12)], [], lineno=660, col_offset=8), Return(Name('maxDepth', Load(), lineno=683, col_offset=15), lineno=683, col_offset=8)], [], lineno=657, col_offset=4), Assign([Name('effect', Store(), lineno=685, col_offset=4)], Dict([Str('POP_TOP', lineno=686, col_offset=8), Str('DUP_TOP', lineno=687, col_offset=8), Str('LIST_APPEND', lineno=688, col_offset=8), Str('SET_ADD', lineno=689, col_offset=8), Str('MAP_ADD', lineno=690, col_offset=8), Str('SLICE+1', lineno=691, col_offset=8), Str('SLICE+2', lineno=692, col_offset=8), Str('SLICE+3', lineno=693, col_offset=8), Str('STORE_SLICE+0', lineno=694, col_offset=8), Str('STORE_SLICE+1', lineno=695, col_offset=8), Str('STORE_SLICE+2', lineno=696, col_offset=8), Str('STORE_SLICE+3', lineno=697, col_offset=8), Str('DELETE_SLICE+0', lineno=698, col_offset=8), Str('DELETE_SLICE+1', lineno=699, col_offset=8), Str('DELETE_SLICE+2', lineno=700, col_offset=8), Str('DELETE_SLICE+3', lineno=701, col_offset=8), Str('STORE_SUBSCR', lineno=702, col_offset=8), Str('DELETE_SUBSCR', lineno=703, col_offset=8), Str('PRINT_ITEM', lineno=705, col_offset=8), Str('RETURN_VALUE', lineno=706, col_offset=8), Str('YIELD_VALUE', lineno=707, col_offset=8), Str('EXEC_STMT', lineno=708, col_offset=8), Str('BUILD_CLASS', lineno=709, col_offset=8), Str('STORE_NAME', lineno=710, col_offset=8), Str('STORE_ATTR', lineno=711, col_offset=8), Str('DELETE_ATTR', lineno=712, col_offset=8), Str('STORE_GLOBAL', lineno=713, col_offset=8), Str('BUILD_MAP', lineno=714, col_offset=8), Str('COMPARE_OP', lineno=715, col_offset=8), Str('STORE_FAST', lineno=716, col_offset=8), Str('IMPORT_STAR', lineno=717, col_offset=8), Str('IMPORT_NAME', lineno=718, col_offset=8), Str('IMPORT_FROM', lineno=719, col_offset=8), Str('LOAD_ATTR', lineno=720, col_offset=8), Str('SETUP_EXCEPT', lineno=722, col_offset=8), Str('SETUP_FINALLY', lineno=723, col_offset=8), Str('FOR_ITER', lineno=724, col_offset=8), Str('WITH_CLEANUP', lineno=725, col_offset=8)], [Num(-1, lineno=686, col_offset=20), Num(1, lineno=687, col_offset=19), Num(-1, lineno=688, col_offset=24), Num(-1, lineno=689, col_offset=20), Num(-2, lineno=690, col_offset=20), Num(-1, lineno=691, col_offset=20), Num(-1, lineno=692, col_offset=20), Num(-2, lineno=693, col_offset=20), Num(-1, lineno=694, col_offset=26), Num(-2, lineno=695, col_offset=26), Num(-2, lineno=696, col_offset=26), Num(-3, lineno=697, col_offset=26), Num(-1, lineno=698, col_offset=27), Num(-2, lineno=699, col_offset=27), Num(-2, lineno=700, col_offset=27), Num(-3, lineno=701, col_offset=27), Num(-3, lineno=702, col_offset=25), Num(-2, lineno=703, col_offset=26), Num(-1, lineno=705, col_offset=23), Num(-1, lineno=706, col_offset=25), Num(-1, lineno=707, col_offset=24), Num(-3, lineno=708, col_offset=22), Num(-2, lineno=709, col_offset=24), Num(-1, lineno=710, col_offset=23), Num(-2, lineno=711, col_offset=23), Num(-1, lineno=712, col_offset=24), Num(-1, lineno=713, col_offset=25), Num(1, lineno=714, col_offset=21), Num(-1, lineno=715, col_offset=23), Num(-1, lineno=716, col_offset=23), Num(-1, lineno=717, col_offset=24), Num(-1, lineno=718, col_offset=24), Num(1, lineno=719, col_offset=23), Num(0, lineno=720, col_offset=21), Num(3, lineno=722, col_offset=24), Num(3, lineno=723, col_offset=25), Num(1, lineno=724, col_offset=20), Num(-1, lineno=725, col_offset=25)], lineno=685, col_offset=13), lineno=685, col_offset=4), Assign([Name('patterns', Store(), lineno=728, col_offset=4)], List([Tuple([Str('BINARY_', lineno=729, col_offset=9), Num(-1, lineno=729, col_offset=21)], Load(), lineno=729, col_offset=9), Tuple([Str('LOAD_', lineno=730, col_offset=9), Num(1, lineno=730, col_offset=18)], Load(), lineno=730, col_offset=9)], Load(), lineno=728, col_offset=15), lineno=728, col_offset=4), FunctionDef('UNPACK_SEQUENCE', arguments([Name('self', Param(), lineno=733, col_offset=24), Name('count', Param(), lineno=733, col_offset=30)], None, None, []), [Return(BinOp(Name('count', Load(), lineno=734, col_offset=15), Sub(), Num(1, lineno=734, col_offset=21), lineno=734, col_offset=15), lineno=734, col_offset=8)], [], lineno=733, col_offset=4), FunctionDef('BUILD_TUPLE', arguments([Name('self', Param(), lineno=735, col_offset=20), Name('count', Param(), lineno=735, col_offset=26)], None, None, []), [Return(BinOp(UnaryOp(USub(), Name('count', Load(), lineno=736, col_offset=16), lineno=736, col_offset=15), Add(), Num(1, lineno=736, col_offset=22), lineno=736, col_offset=15), lineno=736, col_offset=8)], [], lineno=735, col_offset=4), FunctionDef('BUILD_LIST', arguments([Name('self', Param(), lineno=737, col_offset=19), Name('count', Param(), lineno=737, col_offset=25)], None, None, []), [Return(BinOp(UnaryOp(USub(), Name('count', Load(), lineno=738, col_offset=16), lineno=738, col_offset=15), Add(), Num(1, lineno=738, col_offset=22), lineno=738, col_offset=15), lineno=738, col_offset=8)], [], lineno=737, col_offset=4), FunctionDef('BUILD_SET', arguments([Name('self', Param(), lineno=739, col_offset=18), Name('count', Param(), lineno=739, col_offset=24)], None, None, []), [Return(BinOp(UnaryOp(USub(), Name('count', Load(), lineno=740, col_offset=16), lineno=740, col_offset=15), Add(), Num(1, lineno=740, col_offset=22), lineno=740, col_offset=15), lineno=740, col_offset=8)], [], lineno=739, col_offset=4), FunctionDef('CALL_FUNCTION', arguments([Name('self', Param(), lineno=741, col_offset=22), Name('argc', Param(), lineno=741, col_offset=28)], None, None, []), [Assign([Tuple([Name('hi', Store(), lineno=742, col_offset=8), Name('lo', Store(), lineno=742, col_offset=12)], Store(), lineno=742, col_offset=8)], Call(Name('divmod', Load(), lineno=742, col_offset=17), [Name('argc', Load(), lineno=742, col_offset=24), Num(256, lineno=742, col_offset=30)], [], None, None, lineno=742, col_offset=17), lineno=742, col_offset=8), Return(UnaryOp(USub(), BinOp(Name('lo', Load(), lineno=743, col_offset=17), Add(), BinOp(Name('hi', Load(), lineno=743, col_offset=22), Mult(), Num(2, lineno=743, col_offset=27), lineno=743, col_offset=22), lineno=743, col_offset=17), lineno=743, col_offset=15), lineno=743, col_offset=8)], [], lineno=741, col_offset=4), FunctionDef('CALL_FUNCTION_VAR', arguments([Name('self', Param(), lineno=744, col_offset=26), Name('argc', Param(), lineno=744, col_offset=32)], None, None, []), [Return(BinOp(Call(Attribute(Name('self', Load(), lineno=745, col_offset=15), 'CALL_FUNCTION', Load(), lineno=745, col_offset=15), [Name('argc', Load(), lineno=745, col_offset=34)], [], None, None, lineno=745, col_offset=15), Sub(), Num(1, lineno=745, col_offset=40), lineno=745, col_offset=15), lineno=745, col_offset=8)], [], lineno=744, col_offset=4), FunctionDef('CALL_FUNCTION_KW', arguments([Name('self', Param(), lineno=746, col_offset=25), Name('argc', Param(), lineno=746, col_offset=31)], None, None, []), [Return(BinOp(Call(Attribute(Name('self', Load(), lineno=747, col_offset=15), 'CALL_FUNCTION', Load(), lineno=747, col_offset=15), [Name('argc', Load(), lineno=747, col_offset=34)], [], None, None, lineno=747, col_offset=15), Sub(), Num(1, lineno=747, col_offset=40), lineno=747, col_offset=15), lineno=747, col_offset=8)], [], lineno=746, col_offset=4), FunctionDef('CALL_FUNCTION_VAR_KW', arguments([Name('self', Param(), lineno=748, col_offset=29), Name('argc', Param(), lineno=748, col_offset=35)], None, None, []), [Return(BinOp(Call(Attribute(Name('self', Load(), lineno=749, col_offset=15), 'CALL_FUNCTION', Load(), lineno=749, col_offset=15), [Name('argc', Load(), lineno=749, col_offset=34)], [], None, None, lineno=749, col_offset=15), Sub(), Num(2, lineno=749, col_offset=40), lineno=749, col_offset=15), lineno=749, col_offset=8)], [], lineno=748, col_offset=4), FunctionDef('MAKE_FUNCTION', arguments([Name('self', Param(), lineno=750, col_offset=22), Name('argc', Param(), lineno=750, col_offset=28)], None, None, []), [Return(UnaryOp(USub(), Name('argc', Load(), lineno=751, col_offset=16), lineno=751, col_offset=15), lineno=751, col_offset=8)], [], lineno=750, col_offset=4), FunctionDef('MAKE_CLOSURE', arguments([Name('self', Param(), lineno=752, col_offset=21), Name('argc', Param(), lineno=752, col_offset=27)], None, None, []), [Return(UnaryOp(USub(), Name('argc', Load(), lineno=754, col_offset=16), lineno=754, col_offset=15), lineno=754, col_offset=8)], [], lineno=752, col_offset=4), FunctionDef('BUILD_SLICE', arguments([Name('self', Param(), lineno=755, col_offset=20), Name('argc', Param(), lineno=755, col_offset=26)], None, None, []), [If(Compare(Name('argc', Load(), lineno=756, col_offset=11), [Eq()], [Num(2, lineno=756, col_offset=19)], lineno=756, col_offset=11), [Return(Num(-1, lineno=757, col_offset=20), lineno=757, col_offset=12)], [If(Compare(Name('argc', Load(), lineno=758, col_offset=13), [Eq()], [Num(3, lineno=758, col_offset=21)], lineno=758, col_offset=13), [Return(Num(-2, lineno=759, col_offset=20), lineno=759, col_offset=12)], [], lineno=758, col_offset=13)], lineno=756, col_offset=8)], [], lineno=755, col_offset=4), FunctionDef('DUP_TOPX', arguments([Name('self', Param(), lineno=760, col_offset=17), Name('argc', Param(), lineno=760, col_offset=23)], None, None, []), [Return(Name('argc', Load(), lineno=761, col_offset=15), lineno=761, col_offset=8)], [], lineno=760, col_offset=4)], [], lineno=653, col_offset=0), Assign([Name('findDepth', Store(), lineno=763, col_offset=0)], Attribute(Call(Name('StackDepthTracker', Load(), lineno=763, col_offset=12), [], [], None, None, lineno=763, col_offset=12), 'findDepth', Load(), lineno=763, col_offset=12), lineno=763, col_offset=0)])
