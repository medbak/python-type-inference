Module([Import([alias('sys', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=3, col_offset=0), ClassDef('MemFunctionsTest', [Attribute(Name('unittest', Load(), lineno=5, col_offset=23), 'TestCase', Load(), lineno=5, col_offset=23)], [FunctionDef('test_memmove', arguments([Name('self', Param(), lineno=16, col_offset=21)], None, None, []), [Assign([Name('a', Store(), lineno=19, col_offset=8)], Call(Name('create_string_buffer', Load(), lineno=19, col_offset=12), [Num(1000000, lineno=19, col_offset=33)], [], None, None, lineno=19, col_offset=12), lineno=19, col_offset=8), Assign([Name('p', Store(), lineno=20, col_offset=8)], Str('Hello, World', lineno=20, col_offset=12), lineno=20, col_offset=8), Assign([Name('result', Store(), lineno=21, col_offset=8)], Call(Name('memmove', Load(), lineno=21, col_offset=17), [Name('a', Load(), lineno=21, col_offset=25), Name('p', Load(), lineno=21, col_offset=28), Call(Name('len', Load(), lineno=21, col_offset=31), [Name('p', Load(), lineno=21, col_offset=35)], [], None, None, lineno=21, col_offset=31)], [], None, None, lineno=21, col_offset=17), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertEqual', Load(), lineno=22, col_offset=8), [Attribute(Name('a', Load(), lineno=22, col_offset=25), 'value', Load(), lineno=22, col_offset=25), Str('Hello, World', lineno=22, col_offset=34)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Call(Name('string_at', Load(), lineno=24, col_offset=25), [Name('result', Load(), lineno=24, col_offset=35)], [], None, None, lineno=24, col_offset=25), Str('Hello, World', lineno=24, col_offset=44)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertEqual', Load(), lineno=25, col_offset=8), [Call(Name('string_at', Load(), lineno=25, col_offset=25), [Name('result', Load(), lineno=25, col_offset=35), Num(5, lineno=25, col_offset=43)], [], None, None, lineno=25, col_offset=25), Str('Hello', lineno=25, col_offset=47)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Call(Name('string_at', Load(), lineno=26, col_offset=25), [Name('result', Load(), lineno=26, col_offset=35), Num(16, lineno=26, col_offset=43)], [], None, None, lineno=26, col_offset=25), Str('Hello, World\x00\x00\x00\x00', lineno=26, col_offset=48)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertEqual', Load(), lineno=27, col_offset=8), [Call(Name('string_at', Load(), lineno=27, col_offset=25), [Name('result', Load(), lineno=27, col_offset=35), Num(0, lineno=27, col_offset=43)], [], None, None, lineno=27, col_offset=25), Str('', lineno=27, col_offset=47)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_memset', arguments([Name('self', Param(), lineno=29, col_offset=20)], None, None, []), [Assign([Name('a', Store(), lineno=30, col_offset=8)], Call(Name('create_string_buffer', Load(), lineno=30, col_offset=12), [Num(1000000, lineno=30, col_offset=33)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=8), Assign([Name('result', Store(), lineno=31, col_offset=8)], Call(Name('memset', Load(), lineno=31, col_offset=17), [Name('a', Load(), lineno=31, col_offset=24), Call(Name('ord', Load(), lineno=31, col_offset=27), [Str('x', lineno=31, col_offset=31)], [], None, None, lineno=31, col_offset=27), Num(16, lineno=31, col_offset=37)], [], None, None, lineno=31, col_offset=17), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Attribute(Name('a', Load(), lineno=32, col_offset=25), 'value', Load(), lineno=32, col_offset=25), Str('xxxxxxxxxxxxxxxx', lineno=32, col_offset=34)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Call(Name('string_at', Load(), lineno=34, col_offset=25), [Name('result', Load(), lineno=34, col_offset=35)], [], None, None, lineno=34, col_offset=25), Str('xxxxxxxxxxxxxxxx', lineno=34, col_offset=44)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertEqual', Load(), lineno=35, col_offset=8), [Call(Name('string_at', Load(), lineno=35, col_offset=25), [Name('a', Load(), lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=25), Str('xxxxxxxxxxxxxxxx', lineno=35, col_offset=39)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Call(Name('string_at', Load(), lineno=36, col_offset=25), [Name('a', Load(), lineno=36, col_offset=35), Num(20, lineno=36, col_offset=38)], [], None, None, lineno=36, col_offset=25), Str('xxxxxxxxxxxxxxxx\x00\x00\x00\x00', lineno=36, col_offset=43)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('test_cast', arguments([Name('self', Param(), lineno=38, col_offset=18)], None, None, []), [Assign([Name('a', Store(), lineno=39, col_offset=8)], Call(BinOp(Name('c_ubyte', Load(), lineno=39, col_offset=13), Mult(), Num(32, lineno=39, col_offset=23), lineno=39, col_offset=13), [], [], Call(Name('map', Load(), lineno=39, col_offset=28), [Name('ord', Load(), lineno=39, col_offset=32), Str('abcdef', lineno=39, col_offset=37)], [], None, None, lineno=39, col_offset=28), None, lineno=39, col_offset=13), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Attribute(Call(Name('cast', Load(), lineno=40, col_offset=25), [Name('a', Load(), lineno=40, col_offset=30), Name('c_char_p', Load(), lineno=40, col_offset=33)], [], None, None, lineno=40, col_offset=25), 'value', Load(), lineno=40, col_offset=25), Str('abcdef', lineno=40, col_offset=50)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Subscript(Call(Name('cast', Load(), lineno=41, col_offset=25), [Name('a', Load(), lineno=41, col_offset=30), Call(Name('POINTER', Load(), lineno=41, col_offset=33), [Name('c_byte', Load(), lineno=41, col_offset=41)], [], None, None, lineno=41, col_offset=33)], [], None, None, lineno=41, col_offset=25), Slice(None, Num(7, lineno=41, col_offset=51), None), Load(), lineno=41, col_offset=25), List([Num(97, lineno=42, col_offset=30), Num(98, lineno=42, col_offset=34), Num(99, lineno=42, col_offset=38), Num(100, lineno=42, col_offset=42), Num(101, lineno=42, col_offset=47), Num(102, lineno=42, col_offset=52), Num(0, lineno=42, col_offset=57)], Load(), lineno=42, col_offset=29)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'assertEqual', Load(), lineno=43, col_offset=8), [Subscript(Call(Name('cast', Load(), lineno=43, col_offset=25), [Name('a', Load(), lineno=43, col_offset=30), Call(Name('POINTER', Load(), lineno=43, col_offset=33), [Name('c_byte', Load(), lineno=43, col_offset=41)], [], None, None, lineno=43, col_offset=33)], [], None, None, lineno=43, col_offset=25), Slice(None, Num(7, lineno=43, col_offset=51), Name('None', Load(), lineno=43, col_offset=52)), Load(), lineno=43, col_offset=25), List([Num(97, lineno=44, col_offset=30), Num(98, lineno=44, col_offset=34), Num(99, lineno=44, col_offset=38), Num(100, lineno=44, col_offset=42), Num(101, lineno=44, col_offset=47), Num(102, lineno=44, col_offset=52), Num(0, lineno=44, col_offset=57)], Load(), lineno=44, col_offset=29)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Subscript(Call(Name('cast', Load(), lineno=45, col_offset=25), [Name('a', Load(), lineno=45, col_offset=30), Call(Name('POINTER', Load(), lineno=45, col_offset=33), [Name('c_byte', Load(), lineno=45, col_offset=41)], [], None, None, lineno=45, col_offset=33)], [], None, None, lineno=45, col_offset=25), Slice(Num(6, lineno=45, col_offset=50), Num(-1, lineno=45, col_offset=53), Num(-1, lineno=45, col_offset=56)), Load(), lineno=45, col_offset=25), List([Num(0, lineno=46, col_offset=30), Num(102, lineno=46, col_offset=33), Num(101, lineno=46, col_offset=38), Num(100, lineno=46, col_offset=43), Num(99, lineno=46, col_offset=48), Num(98, lineno=46, col_offset=52), Num(97, lineno=46, col_offset=56)], Load(), lineno=46, col_offset=29)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'assertEqual', Load(), lineno=47, col_offset=8), [Subscript(Call(Name('cast', Load(), lineno=47, col_offset=25), [Name('a', Load(), lineno=47, col_offset=30), Call(Name('POINTER', Load(), lineno=47, col_offset=33), [Name('c_byte', Load(), lineno=47, col_offset=41)], [], None, None, lineno=47, col_offset=33)], [], None, None, lineno=47, col_offset=25), Slice(None, Num(7, lineno=47, col_offset=51), Num(2, lineno=47, col_offset=53)), Load(), lineno=47, col_offset=25), List([Num(97, lineno=48, col_offset=30), Num(99, lineno=48, col_offset=34), Num(101, lineno=48, col_offset=38), Num(0, lineno=48, col_offset=43)], Load(), lineno=48, col_offset=29)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertEqual', Load(), lineno=49, col_offset=8), [Subscript(Call(Name('cast', Load(), lineno=49, col_offset=25), [Name('a', Load(), lineno=49, col_offset=30), Call(Name('POINTER', Load(), lineno=49, col_offset=33), [Name('c_byte', Load(), lineno=49, col_offset=41)], [], None, None, lineno=49, col_offset=33)], [], None, None, lineno=49, col_offset=25), Slice(None, Num(7, lineno=49, col_offset=51), Num(7, lineno=49, col_offset=53)), Load(), lineno=49, col_offset=25), List([Num(97, lineno=50, col_offset=30)], Load(), lineno=50, col_offset=29)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('test_string_at', arguments([Name('self', Param(), lineno=52, col_offset=23)], None, None, []), [Assign([Name('s', Store(), lineno=53, col_offset=8)], Call(Name('string_at', Load(), lineno=53, col_offset=12), [Str('foo bar', lineno=53, col_offset=22)], [], None, None, lineno=53, col_offset=12), lineno=53, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=56, col_offset=8), 'assertEqual', Load(), lineno=56, col_offset=8), [Num(2, lineno=56, col_offset=25), Call(Attribute(Name('sys', Load(), lineno=56, col_offset=28), 'getrefcount', Load(), lineno=56, col_offset=28), [Name('s', Load(), lineno=56, col_offset=44)], [], None, None, lineno=56, col_offset=28)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertTrue', Load(), lineno=57, col_offset=8), [Name('s', Load(), lineno=57, col_offset=24), Str('foo bar', lineno=57, col_offset=27)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertEqual', Load(), lineno=59, col_offset=8), [Call(Name('string_at', Load(), lineno=59, col_offset=25), [Str('foo bar', lineno=59, col_offset=35), Num(8, lineno=59, col_offset=46)], [], None, None, lineno=59, col_offset=25), Str('foo bar\x00', lineno=59, col_offset=50)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'assertEqual', Load(), lineno=60, col_offset=8), [Call(Name('string_at', Load(), lineno=60, col_offset=25), [Str('foo bar', lineno=60, col_offset=35), Num(3, lineno=60, col_offset=46)], [], None, None, lineno=60, col_offset=25), Str('foo', lineno=60, col_offset=50)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8)], [], lineno=52, col_offset=4), TryExcept([Expr(Name('create_unicode_buffer', Load(), lineno=63, col_offset=8), lineno=63, col_offset=8)], [ExceptHandler(Name('NameError', Load(), lineno=64, col_offset=11), None, [Pass( lineno=65, col_offset=8)], lineno=64, col_offset=4)], [FunctionDef('test_wstring_at', arguments([Name('self', Param(), lineno=67, col_offset=28)], None, None, []), [Assign([Name('p', Store(), lineno=68, col_offset=12)], Call(Name('create_unicode_buffer', Load(), lineno=68, col_offset=16), [Str('Hello, World', lineno=68, col_offset=38)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=12), Assign([Name('a', Store(), lineno=69, col_offset=12)], Call(Name('create_unicode_buffer', Load(), lineno=69, col_offset=16), [Num(1000000, lineno=69, col_offset=38)], [], None, None, lineno=69, col_offset=16), lineno=69, col_offset=12), Assign([Name('result', Store(), lineno=70, col_offset=12)], Call(Name('memmove', Load(), lineno=70, col_offset=21), [Name('a', Load(), lineno=70, col_offset=29), Name('p', Load(), lineno=70, col_offset=32), BinOp(Call(Name('len', Load(), lineno=70, col_offset=35), [Name('p', Load(), lineno=70, col_offset=39)], [], None, None, lineno=70, col_offset=35), Mult(), Call(Name('sizeof', Load(), lineno=70, col_offset=44), [Name('c_wchar', Load(), lineno=70, col_offset=51)], [], None, None, lineno=70, col_offset=44), lineno=70, col_offset=35)], [], None, None, lineno=70, col_offset=21), lineno=70, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'assertEqual', Load(), lineno=71, col_offset=12), [Attribute(Name('a', Load(), lineno=71, col_offset=29), 'value', Load(), lineno=71, col_offset=29), Str('Hello, World', lineno=71, col_offset=38)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=12), 'assertEqual', Load(), lineno=73, col_offset=12), [Call(Name('wstring_at', Load(), lineno=73, col_offset=29), [Name('a', Load(), lineno=73, col_offset=40)], [], None, None, lineno=73, col_offset=29), Str('Hello, World', lineno=73, col_offset=44)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=12), 'assertEqual', Load(), lineno=74, col_offset=12), [Call(Name('wstring_at', Load(), lineno=74, col_offset=29), [Name('a', Load(), lineno=74, col_offset=40), Num(5, lineno=74, col_offset=43)], [], None, None, lineno=74, col_offset=29), Str('Hello', lineno=74, col_offset=47)], [], None, None, lineno=74, col_offset=12), lineno=74, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=12), 'assertEqual', Load(), lineno=75, col_offset=12), [Call(Name('wstring_at', Load(), lineno=75, col_offset=29), [Name('a', Load(), lineno=75, col_offset=40), Num(16, lineno=75, col_offset=43)], [], None, None, lineno=75, col_offset=29), Str('Hello, World\x00\x00\x00\x00', lineno=75, col_offset=48)], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=12), 'assertEqual', Load(), lineno=76, col_offset=12), [Call(Name('wstring_at', Load(), lineno=76, col_offset=29), [Name('a', Load(), lineno=76, col_offset=40), Num(0, lineno=76, col_offset=43)], [], None, None, lineno=76, col_offset=29), Str('', lineno=76, col_offset=47)], [], None, None, lineno=76, col_offset=12), lineno=76, col_offset=12)], [], lineno=67, col_offset=8)], lineno=62, col_offset=4)], [], lineno=5, col_offset=0), If(Compare(Name('__name__', Load(), lineno=78, col_offset=3), [Eq()], [Str('__main__', lineno=78, col_offset=15)], lineno=78, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=79, col_offset=4), 'main', Load(), lineno=79, col_offset=4), [], [], None, None, lineno=79, col_offset=4), lineno=79, col_offset=4)], [], lineno=78, col_offset=0)])
