Module([Import([alias('macpath', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None), alias('test_genericpath', None)], 0, lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), ClassDef('MacPathTestCase', [Attribute(Name('unittest', Load(), lineno=6, col_offset=22), 'TestCase', Load(), lineno=6, col_offset=22)], [FunctionDef('test_abspath', arguments([Name('self', Param(), lineno=8, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=8), 'assertEqual', Load(), lineno=9, col_offset=8), [Call(Attribute(Name('macpath', Load(), lineno=9, col_offset=25), 'abspath', Load(), lineno=9, col_offset=25), [Str('xx:yy', lineno=9, col_offset=41)], [], None, None, lineno=9, col_offset=25), Str('xx:yy', lineno=9, col_offset=51)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('test_isabs', arguments([Name('self', Param(), lineno=11, col_offset=19)], None, None, []), [Assign([Name('isabs', Store(), lineno=12, col_offset=8)], Attribute(Name('macpath', Load(), lineno=12, col_offset=16), 'isabs', Load(), lineno=12, col_offset=16), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertTrue', Load(), lineno=13, col_offset=8), [Call(Name('isabs', Load(), lineno=13, col_offset=24), [Str('xx:yy', lineno=13, col_offset=30)], [], None, None, lineno=13, col_offset=24)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertTrue', Load(), lineno=14, col_offset=8), [Call(Name('isabs', Load(), lineno=14, col_offset=24), [Str('xx:yy:', lineno=14, col_offset=30)], [], None, None, lineno=14, col_offset=24)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=8), 'assertTrue', Load(), lineno=15, col_offset=8), [Call(Name('isabs', Load(), lineno=15, col_offset=24), [Str('xx:', lineno=15, col_offset=30)], [], None, None, lineno=15, col_offset=24)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertFalse', Load(), lineno=16, col_offset=8), [Call(Name('isabs', Load(), lineno=16, col_offset=25), [Str('foo', lineno=16, col_offset=31)], [], None, None, lineno=16, col_offset=25)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertFalse', Load(), lineno=17, col_offset=8), [Call(Name('isabs', Load(), lineno=17, col_offset=25), [Str(':foo', lineno=17, col_offset=31)], [], None, None, lineno=17, col_offset=25)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertFalse', Load(), lineno=18, col_offset=8), [Call(Name('isabs', Load(), lineno=18, col_offset=25), [Str(':foo:bar', lineno=18, col_offset=31)], [], None, None, lineno=18, col_offset=25)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertFalse', Load(), lineno=19, col_offset=8), [Call(Name('isabs', Load(), lineno=19, col_offset=25), [Str(':foo:bar:', lineno=19, col_offset=31)], [], None, None, lineno=19, col_offset=25)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('test_split', arguments([Name('self', Param(), lineno=21, col_offset=19)], None, None, []), [Assign([Name('split', Store(), lineno=22, col_offset=8)], Attribute(Name('macpath', Load(), lineno=22, col_offset=16), 'split', Load(), lineno=22, col_offset=16), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Call(Name('split', Load(), lineno=23, col_offset=25), [Str('foo:bar', lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=25), Tuple([Str('foo:', lineno=24, col_offset=27), Str('bar', lineno=24, col_offset=35)], Load(), lineno=24, col_offset=27)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertEqual', Load(), lineno=25, col_offset=8), [Call(Name('split', Load(), lineno=25, col_offset=25), [Str('conky:mountpoint:foo:bar', lineno=25, col_offset=31)], [], None, None, lineno=25, col_offset=25), Tuple([Str('conky:mountpoint:foo', lineno=26, col_offset=27), Str('bar', lineno=26, col_offset=51)], Load(), lineno=26, col_offset=27)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Call(Name('split', Load(), lineno=28, col_offset=25), [Str(':', lineno=28, col_offset=31)], [], None, None, lineno=28, col_offset=25), Tuple([Str('', lineno=28, col_offset=38), Str('', lineno=28, col_offset=42)], Load(), lineno=28, col_offset=38)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Call(Name('split', Load(), lineno=29, col_offset=25), [Str(':conky:mountpoint:', lineno=29, col_offset=31)], [], None, None, lineno=29, col_offset=25), Tuple([Str(':conky:mountpoint', lineno=30, col_offset=27), Str('', lineno=30, col_offset=48)], Load(), lineno=30, col_offset=27)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('test_splitext', arguments([Name('self', Param(), lineno=32, col_offset=22)], None, None, []), [Assign([Name('splitext', Store(), lineno=33, col_offset=8)], Attribute(Name('macpath', Load(), lineno=33, col_offset=19), 'splitext', Load(), lineno=33, col_offset=19), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Call(Name('splitext', Load(), lineno=34, col_offset=25), [Str(':foo.ext', lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=25), Tuple([Str(':foo', lineno=34, col_offset=48), Str('.ext', lineno=34, col_offset=56)], Load(), lineno=34, col_offset=48)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertEqual', Load(), lineno=35, col_offset=8), [Call(Name('splitext', Load(), lineno=35, col_offset=25), [Str('foo:foo.ext', lineno=35, col_offset=34)], [], None, None, lineno=35, col_offset=25), Tuple([Str('foo:foo', lineno=35, col_offset=51), Str('.ext', lineno=35, col_offset=62)], Load(), lineno=35, col_offset=51)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Call(Name('splitext', Load(), lineno=36, col_offset=25), [Str('.ext', lineno=36, col_offset=34)], [], None, None, lineno=36, col_offset=25), Tuple([Str('.ext', lineno=36, col_offset=44), Str('', lineno=36, col_offset=52)], Load(), lineno=36, col_offset=44)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertEqual', Load(), lineno=37, col_offset=8), [Call(Name('splitext', Load(), lineno=37, col_offset=25), [Str('foo.ext:foo', lineno=37, col_offset=34)], [], None, None, lineno=37, col_offset=25), Tuple([Str('foo.ext:foo', lineno=37, col_offset=51), Str('', lineno=37, col_offset=66)], Load(), lineno=37, col_offset=51)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertEqual', Load(), lineno=38, col_offset=8), [Call(Name('splitext', Load(), lineno=38, col_offset=25), [Str(':foo.ext:', lineno=38, col_offset=34)], [], None, None, lineno=38, col_offset=25), Tuple([Str(':foo.ext:', lineno=38, col_offset=49), Str('', lineno=38, col_offset=62)], Load(), lineno=38, col_offset=49)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [Call(Name('splitext', Load(), lineno=39, col_offset=25), [Str('', lineno=39, col_offset=34)], [], None, None, lineno=39, col_offset=25), Tuple([Str('', lineno=39, col_offset=40), Str('', lineno=39, col_offset=44)], Load(), lineno=39, col_offset=40)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Call(Name('splitext', Load(), lineno=40, col_offset=25), [Str('foo.bar.ext', lineno=40, col_offset=34)], [], None, None, lineno=40, col_offset=25), Tuple([Str('foo.bar', lineno=40, col_offset=51), Str('.ext', lineno=40, col_offset=62)], Load(), lineno=40, col_offset=51)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('test_normpath', arguments([Name('self', Param(), lineno=42, col_offset=22)], None, None, []), [For(Name('path', Store(), lineno=44, col_offset=12), Tuple([Str(u'', lineno=44, col_offset=21), Str(u'.', lineno=44, col_offset=26), Str(u'/', lineno=44, col_offset=32), Str(u'\\', lineno=44, col_offset=38), Str(u':', lineno=44, col_offset=45), Str(u'///foo/.//bar//', lineno=44, col_offset=51)], Load(), lineno=44, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=12), 'assertIsInstance', Load(), lineno=45, col_offset=12), [Call(Attribute(Name('macpath', Load(), lineno=45, col_offset=34), 'normpath', Load(), lineno=45, col_offset=34), [Name('path', Load(), lineno=45, col_offset=51)], [], None, None, lineno=45, col_offset=34), Name('unicode', Load(), lineno=45, col_offset=58), Str('normpath() returned str instead of unicode', lineno=46, col_offset=34)], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12)], [], lineno=44, col_offset=8)], [], lineno=42, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('MacCommonTest', [Attribute(Name('test_genericpath', Load(), lineno=48, col_offset=20), 'CommonTest', Load(), lineno=48, col_offset=20)], [Assign([Name('pathmodule', Store(), lineno=49, col_offset=4)], Name('macpath', Load(), lineno=49, col_offset=17), lineno=49, col_offset=4)], [], lineno=48, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=53, col_offset=4), 'run_unittest', Load(), lineno=53, col_offset=4), [Name('MacPathTestCase', Load(), lineno=53, col_offset=30), Name('MacCommonTest', Load(), lineno=53, col_offset=47)], [], None, None, lineno=53, col_offset=4), lineno=53, col_offset=4)], [], lineno=52, col_offset=0), If(Compare(Name('__name__', Load(), lineno=56, col_offset=3), [Eq()], [Str('__main__', lineno=56, col_offset=15)], lineno=56, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=57, col_offset=4), [], [], None, None, lineno=57, col_offset=4), lineno=57, col_offset=4)], [], lineno=56, col_offset=0)])
