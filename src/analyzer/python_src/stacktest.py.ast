Module([Import([alias('compiler', None)], lineno=1, col_offset=0), Import([alias('dis', None)], lineno=2, col_offset=0), Import([alias('types', None)], lineno=3, col_offset=0), FunctionDef('extract_code_objects', arguments([Name('co', Param(), lineno=5, col_offset=25)], None, None, []), [Assign([Name('l', Store(), lineno=6, col_offset=4)], List([Name('co', Load(), lineno=6, col_offset=9)], Load(), lineno=6, col_offset=8), lineno=6, col_offset=4), For(Name('const', Store(), lineno=7, col_offset=8), Attribute(Name('co', Load(), lineno=7, col_offset=17), 'co_consts', Load(), lineno=7, col_offset=17), [If(Compare(Call(Name('type', Load(), lineno=8, col_offset=11), [Name('const', Load(), lineno=8, col_offset=16)], [], None, None, lineno=8, col_offset=11), [Eq()], [Attribute(Name('types', Load(), lineno=8, col_offset=26), 'CodeType', Load(), lineno=8, col_offset=26)], lineno=8, col_offset=11), [Expr(Call(Attribute(Name('l', Load(), lineno=9, col_offset=12), 'append', Load(), lineno=9, col_offset=12), [Name('const', Load(), lineno=9, col_offset=21)], [], None, None, lineno=9, col_offset=12), lineno=9, col_offset=12)], [], lineno=8, col_offset=8)], [], lineno=7, col_offset=4), Return(Name('l', Load(), lineno=10, col_offset=11), lineno=10, col_offset=4)], [], lineno=5, col_offset=0), FunctionDef('compare', arguments([Name('a', Param(), lineno=12, col_offset=12), Name('b', Param(), lineno=12, col_offset=15)], None, None, []), [If(UnaryOp(Not(), BoolOp(Or(), [Compare(Attribute(Name('a', Load(), lineno=13, col_offset=12), 'co_name', Load(), lineno=13, col_offset=12), [Eq()], [Str('?', lineno=13, col_offset=25)], lineno=13, col_offset=12), Call(Attribute(Attribute(Name('a', Load(), lineno=13, col_offset=32), 'co_name', Load(), lineno=13, col_offset=32), 'startswith', Load(), lineno=13, col_offset=32), [Str('<lambda', lineno=13, col_offset=53)], [], None, None, lineno=13, col_offset=32)], lineno=13, col_offset=12), lineno=13, col_offset=7), [Assert(Compare(Attribute(Name('a', Load(), lineno=14, col_offset=15), 'co_name', Load(), lineno=14, col_offset=15), [Eq()], [Attribute(Name('b', Load(), lineno=14, col_offset=28), 'co_name', Load(), lineno=14, col_offset=28)], lineno=14, col_offset=15), Tuple([Name('a', Load(), lineno=14, col_offset=40), Name('b', Load(), lineno=14, col_offset=43)], Load(), lineno=14, col_offset=40), lineno=14, col_offset=8)], [], lineno=13, col_offset=4), If(Compare(Attribute(Name('a', Load(), lineno=15, col_offset=7), 'co_stacksize', Load(), lineno=15, col_offset=7), [NotEq()], [Attribute(Name('b', Load(), lineno=15, col_offset=25), 'co_stacksize', Load(), lineno=15, col_offset=25)], lineno=15, col_offset=7), [Print(None, [BinOp(Str('stack mismatch %s: %d vs. %d', lineno=16, col_offset=14), Mod(), Tuple([Attribute(Name('a', Load(), lineno=16, col_offset=48), 'co_name', Load(), lineno=16, col_offset=48), Attribute(Name('a', Load(), lineno=17, col_offset=48), 'co_stacksize', Load(), lineno=17, col_offset=48), Attribute(Name('b', Load(), lineno=18, col_offset=48), 'co_stacksize', Load(), lineno=18, col_offset=48)], Load(), lineno=16, col_offset=48), lineno=16, col_offset=14)], True, lineno=16, col_offset=8), If(Compare(Attribute(Name('a', Load(), lineno=19, col_offset=11), 'co_stacksize', Load(), lineno=19, col_offset=11), [Gt()], [Attribute(Name('b', Load(), lineno=19, col_offset=28), 'co_stacksize', Load(), lineno=19, col_offset=28)], lineno=19, col_offset=11), [Print(None, [Str('good code', lineno=20, col_offset=18)], True, lineno=20, col_offset=12), Expr(Call(Attribute(Name('dis', Load(), lineno=21, col_offset=12), 'dis', Load(), lineno=21, col_offset=12), [Name('a', Load(), lineno=21, col_offset=20)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=12), Print(None, [Str('bad code', lineno=22, col_offset=18)], True, lineno=22, col_offset=12), Expr(Call(Attribute(Name('dis', Load(), lineno=23, col_offset=12), 'dis', Load(), lineno=23, col_offset=12), [Name('b', Load(), lineno=23, col_offset=20)], [], None, None, lineno=23, col_offset=12), lineno=23, col_offset=12), Assert(Num(0, lineno=24, col_offset=19), None, lineno=24, col_offset=12)], [], lineno=19, col_offset=8)], [], lineno=15, col_offset=4)], [], lineno=12, col_offset=0), FunctionDef('main', arguments([Name('files', Param(), lineno=26, col_offset=9)], None, None, []), [For(Name('file', Store(), lineno=27, col_offset=8), Name('files', Load(), lineno=27, col_offset=16), [Print(None, [Name('file', Load(), lineno=28, col_offset=14)], True, lineno=28, col_offset=8), Assign([Name('buf', Store(), lineno=29, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=29, col_offset=14), [Name('file', Load(), lineno=29, col_offset=19)], [], None, None, lineno=29, col_offset=14), 'read', Load(), lineno=29, col_offset=14), [], [], None, None, lineno=29, col_offset=14), lineno=29, col_offset=8), TryExcept([Assign([Name('co1', Store(), lineno=31, col_offset=12)], Call(Name('compile', Load(), lineno=31, col_offset=18), [Name('buf', Load(), lineno=31, col_offset=26), Name('file', Load(), lineno=31, col_offset=31), Str('exec', lineno=31, col_offset=37)], [], None, None, lineno=31, col_offset=18), lineno=31, col_offset=12)], [ExceptHandler(Name('SyntaxError', Load(), lineno=32, col_offset=15), None, [Print(None, [Str('skipped', lineno=33, col_offset=18)], True, lineno=33, col_offset=12), Continue( lineno=34, col_offset=12)], lineno=32, col_offset=8)], [], lineno=30, col_offset=8), Assign([Name('co2', Store(), lineno=35, col_offset=8)], Call(Attribute(Name('compiler', Load(), lineno=35, col_offset=14), 'compile', Load(), lineno=35, col_offset=14), [Name('buf', Load(), lineno=35, col_offset=31), Name('file', Load(), lineno=35, col_offset=36), Str('exec', lineno=35, col_offset=42)], [], None, None, lineno=35, col_offset=14), lineno=35, col_offset=8), Assign([Name('co1l', Store(), lineno=36, col_offset=8)], Call(Name('extract_code_objects', Load(), lineno=36, col_offset=15), [Name('co1', Load(), lineno=36, col_offset=36)], [], None, None, lineno=36, col_offset=15), lineno=36, col_offset=8), Assign([Name('co2l', Store(), lineno=37, col_offset=8)], Call(Name('extract_code_objects', Load(), lineno=37, col_offset=15), [Name('co2', Load(), lineno=37, col_offset=36)], [], None, None, lineno=37, col_offset=15), lineno=37, col_offset=8), For(Tuple([Name('a', Store(), lineno=38, col_offset=12), Name('b', Store(), lineno=38, col_offset=15)], Store(), lineno=38, col_offset=12), Call(Name('zip', Load(), lineno=38, col_offset=20), [Name('co1l', Load(), lineno=38, col_offset=24), Name('co2l', Load(), lineno=38, col_offset=30)], [], None, None, lineno=38, col_offset=20), [Expr(Call(Name('compare', Load(), lineno=39, col_offset=12), [Name('a', Load(), lineno=39, col_offset=20), Name('b', Load(), lineno=39, col_offset=23)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12)], [], lineno=38, col_offset=8)], [], lineno=27, col_offset=4)], [], lineno=26, col_offset=0), If(Compare(Name('__name__', Load(), lineno=41, col_offset=3), [Eq()], [Str('__main__', lineno=41, col_offset=15)], lineno=41, col_offset=3), [Import([alias('sys', None)], lineno=42, col_offset=4), Expr(Call(Name('main', Load(), lineno=43, col_offset=4), [Subscript(Attribute(Name('sys', Load(), lineno=43, col_offset=9), 'argv', Load(), lineno=43, col_offset=9), Slice(Num(1, lineno=43, col_offset=18), None, None), Load(), lineno=43, col_offset=9)], [], None, None, lineno=43, col_offset=4), lineno=43, col_offset=4)], [], lineno=41, col_offset=0)])
