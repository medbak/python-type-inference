Module([Import([alias('sys', None)], lineno=2, col_offset=0), ImportFrom('bgenlocations', [alias('TOOLBOXDIR', None), alias('BGENDIR', None), alias('INCLUDEDIR', None)], 0, lineno=3, col_offset=0), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=4, col_offset=0), 'path', Load(), lineno=4, col_offset=0), 'append', Load(), lineno=4, col_offset=0), [Name('BGENDIR', Load(), lineno=4, col_offset=16)], [], None, None, lineno=4, col_offset=0), lineno=4, col_offset=0), ImportFrom('scantools', [alias('Scanner', None)], 0, lineno=6, col_offset=0), Assign([Name('MISSING_DEFINES', Store(), lineno=8, col_offset=0)], Str('\nkDragHasLeftSenderWindow        = (1 << 0)\nkDragInsideSenderApplication = (1 << 1)\nkDragInsideSenderWindow         = (1 << 2)\nkDragRegionAndImage                     = (1 << 4)\nflavorSenderOnly                        = (1 << 0)\nflavorSenderTranslated          = (1 << 1)\nflavorNotSaved                          = (1 << 2)\nflavorSystemTranslated          = (1 << 8)\n', lineno=17, col_offset=-1), lineno=8, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=21, col_offset=4)], BinOp(Name('INCLUDEDIR', Load(), lineno=21, col_offset=12), Add(), Str('Drag.h', lineno=21, col_offset=25), lineno=21, col_offset=12), lineno=21, col_offset=4), Assign([Name('output', Store(), lineno=22, col_offset=4)], Str('draggen.py', lineno=22, col_offset=13), lineno=22, col_offset=4), Assign([Name('defsoutput', Store(), lineno=23, col_offset=4)], BinOp(Name('TOOLBOXDIR', Load(), lineno=23, col_offset=17), Add(), Str('Dragconst.py', lineno=23, col_offset=30), lineno=23, col_offset=17), lineno=23, col_offset=4), Assign([Name('scanner', Store(), lineno=24, col_offset=4)], Call(Name('MyScanner', Load(), lineno=24, col_offset=14), [Name('input', Load(), lineno=24, col_offset=24), Name('output', Load(), lineno=24, col_offset=31), Name('defsoutput', Load(), lineno=24, col_offset=39)], [], None, None, lineno=24, col_offset=14), lineno=24, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=25, col_offset=4), 'scan', Load(), lineno=25, col_offset=4), [], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=26, col_offset=4), 'close', Load(), lineno=26, col_offset=4), [], [], None, None, lineno=26, col_offset=4), lineno=26, col_offset=4), Print(None, [Str('=== Testing definitions output code ===', lineno=27, col_offset=10)], True, lineno=27, col_offset=4), Expr(Call(Name('execfile', Load(), lineno=28, col_offset=4), [Name('defsoutput', Load(), lineno=28, col_offset=13), Dict([], [], lineno=28, col_offset=25), Dict([], [], lineno=28, col_offset=29)], [], None, None, lineno=28, col_offset=4), lineno=28, col_offset=4), Print(None, [Str("=== Done scanning and generating, now doing 'import dragsupport' ===", lineno=29, col_offset=10)], True, lineno=29, col_offset=4), Import([alias('dragsupport', None)], lineno=30, col_offset=4), Print(None, [Str("=== Done.  It's up to you to compile Dragmodule.c ===", lineno=31, col_offset=10)], True, lineno=31, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('MyScanner', [Name('Scanner', Load(), lineno=33, col_offset=16)], [FunctionDef('destination', arguments([Name('self', Param(), lineno=35, col_offset=20), Name('type', Param(), lineno=35, col_offset=26), Name('name', Param(), lineno=35, col_offset=32), Name('arglist', Param(), lineno=35, col_offset=38)], None, None, []), [Assign([Name('classname', Store(), lineno=36, col_offset=8)], Str('Function', lineno=36, col_offset=20), lineno=36, col_offset=8), Assign([Name('listname', Store(), lineno=37, col_offset=8)], Str('functions', lineno=37, col_offset=19), lineno=37, col_offset=8), If(Name('arglist', Load(), lineno=38, col_offset=11), [Assign([Tuple([Name('t', Store(), lineno=39, col_offset=12), Name('n', Store(), lineno=39, col_offset=15), Name('m', Store(), lineno=39, col_offset=18)], Store(), lineno=39, col_offset=12)], Subscript(Name('arglist', Load(), lineno=39, col_offset=22), Index(Num(0, lineno=39, col_offset=30)), Load(), lineno=39, col_offset=22), lineno=39, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=40, col_offset=15), [In()], [Tuple([Str('DragReference', lineno=40, col_offset=21), Str('DragRef', lineno=40, col_offset=38)], Load(), lineno=40, col_offset=21)], lineno=40, col_offset=15), Compare(Name('m', Load(), lineno=40, col_offset=53), [Eq()], [Str('InMode', lineno=40, col_offset=58)], lineno=40, col_offset=53)], lineno=40, col_offset=15), [Assign([Name('classname', Store(), lineno=41, col_offset=16)], Str('Method', lineno=41, col_offset=28), lineno=41, col_offset=16), Assign([Name('listname', Store(), lineno=42, col_offset=16)], Str('methods', lineno=42, col_offset=27), lineno=42, col_offset=16)], [], lineno=40, col_offset=12)], [], lineno=38, col_offset=8), Return(Tuple([Name('classname', Load(), lineno=43, col_offset=15), Name('listname', Load(), lineno=43, col_offset=26)], Load(), lineno=43, col_offset=15), lineno=43, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('writeinitialdefs', arguments([Name('self', Param(), lineno=45, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'defsfile', Load(), lineno=46, col_offset=8), 'write', Load(), lineno=46, col_offset=8), [Str('def FOUR_CHAR_CODE(x): return x\n', lineno=46, col_offset=28)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'defsfile', Load(), lineno=47, col_offset=8), 'write', Load(), lineno=47, col_offset=8), [Str('from Carbon.TextEdit import *\n', lineno=47, col_offset=28)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'defsfile', Load(), lineno=48, col_offset=8), 'write', Load(), lineno=48, col_offset=8), [Str('from Carbon.QuickDraw import *\n', lineno=48, col_offset=28)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'defsfile', Load(), lineno=49, col_offset=8), 'write', Load(), lineno=49, col_offset=8), [Str('fkDragActionAll = -1\n', lineno=49, col_offset=28)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'defsfile', Load(), lineno=50, col_offset=8), 'write', Load(), lineno=50, col_offset=8), [Str('\n', lineno=50, col_offset=28)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'defsfile', Load(), lineno=52, col_offset=8), 'write', Load(), lineno=52, col_offset=8), [Name('MISSING_DEFINES', Load(), lineno=52, col_offset=28)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=54, col_offset=27)], None, None, []), [Return(List([Str('kDragActionAll', lineno=56, col_offset=16)], Load(), lineno=55, col_offset=15), lineno=55, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=59, col_offset=27)], None, None, []), [Return(List([Str('DragTrackingHandlerUPP', lineno=61, col_offset=16), Str('DragReceiveHandlerUPP', lineno=62, col_offset=16), Str('DragSendDataUPP', lineno=63, col_offset=16), Str('DragInputUPP', lineno=64, col_offset=16), Str('DragDrawingUPP', lineno=65, col_offset=16)], Load(), lineno=60, col_offset=15), lineno=60, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=68, col_offset=31)], None, None, []), [Return(List([Tuple([List([Tuple([Str('void_ptr', lineno=70, col_offset=19), Str('*', lineno=70, col_offset=31), Str('InMode', lineno=70, col_offset=36)], Load(), lineno=70, col_offset=19), Tuple([Str('Size', lineno=70, col_offset=48), Str('*', lineno=70, col_offset=56), Str('InMode', lineno=70, col_offset=61)], Load(), lineno=70, col_offset=48)], Load(), lineno=70, col_offset=17), List([Tuple([Str('OptionalInBuffer', lineno=71, col_offset=19), Str('*', lineno=71, col_offset=39), Str('*', lineno=71, col_offset=44)], Load(), lineno=71, col_offset=19)], Load(), lineno=71, col_offset=17)], Load(), lineno=70, col_offset=17), Tuple([List([Tuple([Str('void', lineno=73, col_offset=19), Str('*', lineno=73, col_offset=27), Str('OutMode', lineno=73, col_offset=32)], Load(), lineno=73, col_offset=19), Tuple([Str('Size', lineno=73, col_offset=45), Str('*', lineno=73, col_offset=53), Str('OutMode', lineno=73, col_offset=58)], Load(), lineno=73, col_offset=45)], Load(), lineno=73, col_offset=17), List([Tuple([Str('VarOutBuffer', lineno=74, col_offset=19), Str('*', lineno=74, col_offset=35), Str('InOutMode', lineno=74, col_offset=40)], Load(), lineno=74, col_offset=19)], Load(), lineno=74, col_offset=17)], Load(), lineno=73, col_offset=17)], Load(), lineno=69, col_offset=15), lineno=69, col_offset=8)], [], lineno=68, col_offset=4)], [], lineno=33, col_offset=0), If(Compare(Name('__name__', Load(), lineno=78, col_offset=3), [Eq()], [Str('__main__', lineno=78, col_offset=15)], lineno=78, col_offset=3), [Expr(Call(Name('main', Load(), lineno=79, col_offset=4), [], [], None, None, lineno=79, col_offset=4), lineno=79, col_offset=4)], [], lineno=78, col_offset=0)])
