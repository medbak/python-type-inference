Module([Expr(Str('Utility functions used by the btm_matcher module', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom(None, [alias('pytree', None)], 1, lineno=3, col_offset=0), ImportFrom('pgen2', [alias('grammar', None), alias('token', None)], 1, lineno=4, col_offset=0), ImportFrom('pygram', [alias('pattern_symbols', None), alias('python_symbols', None)], 1, lineno=5, col_offset=0), Assign([Name('syms', Store(), lineno=7, col_offset=0)], Name('pattern_symbols', Load(), lineno=7, col_offset=7), lineno=7, col_offset=0), Assign([Name('pysyms', Store(), lineno=8, col_offset=0)], Name('python_symbols', Load(), lineno=8, col_offset=9), lineno=8, col_offset=0), Assign([Name('tokens', Store(), lineno=9, col_offset=0)], Attribute(Name('grammar', Load(), lineno=9, col_offset=9), 'opmap', Load(), lineno=9, col_offset=9), lineno=9, col_offset=0), Assign([Name('token_labels', Store(), lineno=10, col_offset=0)], Name('token', Load(), lineno=10, col_offset=15), lineno=10, col_offset=0), Assign([Name('TYPE_ANY', Store(), lineno=12, col_offset=0)], Num(-1, lineno=12, col_offset=12), lineno=12, col_offset=0), Assign([Name('TYPE_ALTERNATIVES', Store(), lineno=13, col_offset=0)], Num(-2, lineno=13, col_offset=21), lineno=13, col_offset=0), Assign([Name('TYPE_GROUP', Store(), lineno=14, col_offset=0)], Num(-3, lineno=14, col_offset=14), lineno=14, col_offset=0), ClassDef('MinNode', [Name('object', Load(), lineno=16, col_offset=14)], [Expr(Str('This class serves as an intermediate representation of the\n    pattern tree during the conversion to sets of leaf-to-root\n    subpatterns', lineno=19, col_offset=-1), lineno=19, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=21, col_offset=17), Name('type', Param(), lineno=21, col_offset=23), Name('name', Param(), lineno=21, col_offset=34)], None, None, [Name('None', Load(), lineno=21, col_offset=28), Name('None', Load(), lineno=21, col_offset=39)]), [Assign([Attribute(Name('self', Load(), lineno=22, col_offset=8), 'type', Store(), lineno=22, col_offset=8)], Name('type', Load(), lineno=22, col_offset=20), lineno=22, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=23, col_offset=8), 'name', Store(), lineno=23, col_offset=8)], Name('name', Load(), lineno=23, col_offset=20), lineno=23, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=24, col_offset=8), 'children', Store(), lineno=24, col_offset=8)], List([], Load(), lineno=24, col_offset=24), lineno=24, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=25, col_offset=8), 'leaf', Store(), lineno=25, col_offset=8)], Name('False', Load(), lineno=25, col_offset=20), lineno=25, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'parent', Store(), lineno=26, col_offset=8)], Name('None', Load(), lineno=26, col_offset=22), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'alternatives', Store(), lineno=27, col_offset=8)], List([], Load(), lineno=27, col_offset=28), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'group', Store(), lineno=28, col_offset=8)], List([], Load(), lineno=28, col_offset=21), lineno=28, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=30, col_offset=17)], None, None, []), [Return(BinOp(BinOp(Call(Name('str', Load(), lineno=31, col_offset=15), [Attribute(Name('self', Load(), lineno=31, col_offset=19), 'type', Load(), lineno=31, col_offset=19)], [], None, None, lineno=31, col_offset=15), Add(), Str(' ', lineno=31, col_offset=32), lineno=31, col_offset=15), Add(), Call(Name('str', Load(), lineno=31, col_offset=38), [Attribute(Name('self', Load(), lineno=31, col_offset=42), 'name', Load(), lineno=31, col_offset=42)], [], None, None, lineno=31, col_offset=38), lineno=31, col_offset=36), lineno=31, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('leaf_to_root', arguments([Name('self', Param(), lineno=33, col_offset=21)], None, None, []), [Expr(Str('Internal method. Returns a characteristic path of the\n        pattern tree. This method must be run for all leaves until the\n        linear subpatterns are merged into a single', lineno=36, col_offset=-1), lineno=36, col_offset=-1), Assign([Name('node', Store(), lineno=37, col_offset=8)], Name('self', Load(), lineno=37, col_offset=15), lineno=37, col_offset=8), Assign([Name('subp', Store(), lineno=38, col_offset=8)], List([], Load(), lineno=38, col_offset=15), lineno=38, col_offset=8), While(Name('node', Load(), lineno=39, col_offset=14), [If(Compare(Attribute(Name('node', Load(), lineno=40, col_offset=15), 'type', Load(), lineno=40, col_offset=15), [Eq()], [Name('TYPE_ALTERNATIVES', Load(), lineno=40, col_offset=28)], lineno=40, col_offset=15), [Expr(Call(Attribute(Attribute(Name('node', Load(), lineno=41, col_offset=16), 'alternatives', Load(), lineno=41, col_offset=16), 'append', Load(), lineno=41, col_offset=16), [Name('subp', Load(), lineno=41, col_offset=41)], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=42, col_offset=19), [Attribute(Name('node', Load(), lineno=42, col_offset=23), 'alternatives', Load(), lineno=42, col_offset=23)], [], None, None, lineno=42, col_offset=19), [Eq()], [Call(Name('len', Load(), lineno=42, col_offset=45), [Attribute(Name('node', Load(), lineno=42, col_offset=49), 'children', Load(), lineno=42, col_offset=49)], [], None, None, lineno=42, col_offset=45)], lineno=42, col_offset=19), [Assign([Name('subp', Store(), lineno=44, col_offset=20)], List([Call(Name('tuple', Load(), lineno=44, col_offset=28), [Attribute(Name('node', Load(), lineno=44, col_offset=34), 'alternatives', Load(), lineno=44, col_offset=34)], [], None, None, lineno=44, col_offset=28)], Load(), lineno=44, col_offset=27), lineno=44, col_offset=20), Assign([Attribute(Name('node', Load(), lineno=45, col_offset=20), 'alternatives', Store(), lineno=45, col_offset=20)], List([], Load(), lineno=45, col_offset=40), lineno=45, col_offset=20), Assign([Name('node', Store(), lineno=46, col_offset=20)], Attribute(Name('node', Load(), lineno=46, col_offset=27), 'parent', Load(), lineno=46, col_offset=27), lineno=46, col_offset=20), Continue( lineno=47, col_offset=20)], [Assign([Name('node', Store(), lineno=49, col_offset=20)], Attribute(Name('node', Load(), lineno=49, col_offset=27), 'parent', Load(), lineno=49, col_offset=27), lineno=49, col_offset=20), Assign([Name('subp', Store(), lineno=50, col_offset=20)], Name('None', Load(), lineno=50, col_offset=27), lineno=50, col_offset=20), Break( lineno=51, col_offset=20)], lineno=42, col_offset=16)], [], lineno=40, col_offset=12), If(Compare(Attribute(Name('node', Load(), lineno=53, col_offset=15), 'type', Load(), lineno=53, col_offset=15), [Eq()], [Name('TYPE_GROUP', Load(), lineno=53, col_offset=28)], lineno=53, col_offset=15), [Expr(Call(Attribute(Attribute(Name('node', Load(), lineno=54, col_offset=16), 'group', Load(), lineno=54, col_offset=16), 'append', Load(), lineno=54, col_offset=16), [Name('subp', Load(), lineno=54, col_offset=34)], [], None, None, lineno=54, col_offset=16), lineno=54, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=56, col_offset=19), [Attribute(Name('node', Load(), lineno=56, col_offset=23), 'group', Load(), lineno=56, col_offset=23)], [], None, None, lineno=56, col_offset=19), [Eq()], [Call(Name('len', Load(), lineno=56, col_offset=38), [Attribute(Name('node', Load(), lineno=56, col_offset=42), 'children', Load(), lineno=56, col_offset=42)], [], None, None, lineno=56, col_offset=38)], lineno=56, col_offset=19), [Assign([Name('subp', Store(), lineno=57, col_offset=20)], Call(Name('get_characteristic_subpattern', Load(), lineno=57, col_offset=27), [Attribute(Name('node', Load(), lineno=57, col_offset=57), 'group', Load(), lineno=57, col_offset=57)], [], None, None, lineno=57, col_offset=27), lineno=57, col_offset=20), Assign([Attribute(Name('node', Load(), lineno=58, col_offset=20), 'group', Store(), lineno=58, col_offset=20)], List([], Load(), lineno=58, col_offset=33), lineno=58, col_offset=20), Assign([Name('node', Store(), lineno=59, col_offset=20)], Attribute(Name('node', Load(), lineno=59, col_offset=27), 'parent', Load(), lineno=59, col_offset=27), lineno=59, col_offset=20), Continue( lineno=60, col_offset=20)], [Assign([Name('node', Store(), lineno=62, col_offset=20)], Attribute(Name('node', Load(), lineno=62, col_offset=27), 'parent', Load(), lineno=62, col_offset=27), lineno=62, col_offset=20), Assign([Name('subp', Store(), lineno=63, col_offset=20)], Name('None', Load(), lineno=63, col_offset=27), lineno=63, col_offset=20), Break( lineno=64, col_offset=20)], lineno=56, col_offset=16)], [], lineno=53, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('node', Load(), lineno=66, col_offset=15), 'type', Load(), lineno=66, col_offset=15), [Eq()], [Attribute(Name('token_labels', Load(), lineno=66, col_offset=28), 'NAME', Load(), lineno=66, col_offset=28)], lineno=66, col_offset=15), Attribute(Name('node', Load(), lineno=66, col_offset=50), 'name', Load(), lineno=66, col_offset=50)], lineno=66, col_offset=15), [Expr(Call(Attribute(Name('subp', Load(), lineno=68, col_offset=16), 'append', Load(), lineno=68, col_offset=16), [Attribute(Name('node', Load(), lineno=68, col_offset=28), 'name', Load(), lineno=68, col_offset=28)], [], None, None, lineno=68, col_offset=16), lineno=68, col_offset=16)], [Expr(Call(Attribute(Name('subp', Load(), lineno=70, col_offset=16), 'append', Load(), lineno=70, col_offset=16), [Attribute(Name('node', Load(), lineno=70, col_offset=28), 'type', Load(), lineno=70, col_offset=28)], [], None, None, lineno=70, col_offset=16), lineno=70, col_offset=16)], lineno=66, col_offset=12), Assign([Name('node', Store(), lineno=72, col_offset=12)], Attribute(Name('node', Load(), lineno=72, col_offset=19), 'parent', Load(), lineno=72, col_offset=19), lineno=72, col_offset=12)], [], lineno=39, col_offset=8), Return(Name('subp', Load(), lineno=73, col_offset=15), lineno=73, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('get_linear_subpattern', arguments([Name('self', Param(), lineno=75, col_offset=30)], None, None, []), [Expr(Str("Drives the leaf_to_root method. The reason that\n        leaf_to_root must be run multiple times is because we need to\n        reject 'group' matches; for example the alternative form\n        (a | b c) creates a group [b c] that needs to be matched. Since\n        matching multiple linear patterns overcomes the automaton's\n        capabilities, leaf_to_root merges each group into a single\n        choice based on 'characteristic'ity,\n\n        i.e. (a|b c) -> (a|b) if b more characteristic than c\n\n        Returns: The most 'characteristic'(as defined by\n          get_characteristic_subpattern) path for the compiled pattern\n          tree.\n        ", lineno=89, col_offset=-1), lineno=89, col_offset=-1), For(Name('l', Store(), lineno=91, col_offset=12), Call(Attribute(Name('self', Load(), lineno=91, col_offset=17), 'leaves', Load(), lineno=91, col_offset=17), [], [], None, None, lineno=91, col_offset=17), [Assign([Name('subp', Store(), lineno=92, col_offset=12)], Call(Attribute(Name('l', Load(), lineno=92, col_offset=19), 'leaf_to_root', Load(), lineno=92, col_offset=19), [], [], None, None, lineno=92, col_offset=19), lineno=92, col_offset=12), If(Name('subp', Load(), lineno=93, col_offset=15), [Return(Name('subp', Load(), lineno=94, col_offset=23), lineno=94, col_offset=16)], [], lineno=93, col_offset=12)], [], lineno=91, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('leaves', arguments([Name('self', Param(), lineno=96, col_offset=15)], None, None, []), [Expr(Str('Generator that returns the leaves of the tree', lineno=97, col_offset=8), lineno=97, col_offset=8), For(Name('child', Store(), lineno=98, col_offset=12), Attribute(Name('self', Load(), lineno=98, col_offset=21), 'children', Load(), lineno=98, col_offset=21), [For(Name('x', Store(), lineno=99, col_offset=16), Call(Attribute(Name('child', Load(), lineno=99, col_offset=21), 'leaves', Load(), lineno=99, col_offset=21), [], [], None, None, lineno=99, col_offset=21), [Expr(Yield(Name('x', Load(), lineno=100, col_offset=22), lineno=100, col_offset=16), lineno=100, col_offset=16)], [], lineno=99, col_offset=12)], [], lineno=98, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=101, col_offset=15), 'children', Load(), lineno=101, col_offset=15), lineno=101, col_offset=11), [Expr(Yield(Name('self', Load(), lineno=102, col_offset=18), lineno=102, col_offset=12), lineno=102, col_offset=12)], [], lineno=101, col_offset=8)], [], lineno=96, col_offset=4)], [], lineno=16, col_offset=0), FunctionDef('reduce_tree', arguments([Name('node', Param(), lineno=104, col_offset=16), Name('parent', Param(), lineno=104, col_offset=22)], None, None, [Name('None', Load(), lineno=104, col_offset=29)]), [Expr(Str('\n    Internal function. Reduces a compiled pattern tree to an\n    intermediate representation suitable for feeding the\n    automaton. This also trims off any optional pattern elements(like\n    [a], a*).\n    ', lineno=110, col_offset=-1), lineno=110, col_offset=-1), Assign([Name('new_node', Store(), lineno=112, col_offset=4)], Name('None', Load(), lineno=112, col_offset=15), lineno=112, col_offset=4), If(Compare(Attribute(Name('node', Load(), lineno=114, col_offset=7), 'type', Load(), lineno=114, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=114, col_offset=20), 'Matcher', Load(), lineno=114, col_offset=20)], lineno=114, col_offset=7), [Assign([Name('node', Store(), lineno=116, col_offset=8)], Subscript(Attribute(Name('node', Load(), lineno=116, col_offset=15), 'children', Load(), lineno=116, col_offset=15), Index(Num(0, lineno=116, col_offset=29)), Load(), lineno=116, col_offset=15), lineno=116, col_offset=8)], [], lineno=114, col_offset=4), If(Compare(Attribute(Name('node', Load(), lineno=118, col_offset=7), 'type', Load(), lineno=118, col_offset=7), [Eq()], [Attribute(Name('syms', Load(), lineno=118, col_offset=20), 'Alternatives', Load(), lineno=118, col_offset=20)], lineno=118, col_offset=7), [If(Compare(Call(Name('len', Load(), lineno=120, col_offset=11), [Attribute(Name('node', Load(), lineno=120, col_offset=15), 'children', Load(), lineno=120, col_offset=15)], [], None, None, lineno=120, col_offset=11), [LtE()], [Num(2, lineno=120, col_offset=33)], lineno=120, col_offset=11), [Assign([Name('new_node', Store(), lineno=122, col_offset=12)], Call(Name('reduce_tree', Load(), lineno=122, col_offset=23), [Subscript(Attribute(Name('node', Load(), lineno=122, col_offset=35), 'children', Load(), lineno=122, col_offset=35), Index(Num(0, lineno=122, col_offset=49)), Load(), lineno=122, col_offset=35), Name('parent', Load(), lineno=122, col_offset=53)], [], None, None, lineno=122, col_offset=23), lineno=122, col_offset=12)], [Assign([Name('new_node', Store(), lineno=125, col_offset=12)], Call(Name('MinNode', Load(), lineno=125, col_offset=23), [], [keyword('type', Name('TYPE_ALTERNATIVES', Load(), lineno=125, col_offset=36))], None, None, lineno=125, col_offset=23), lineno=125, col_offset=12), For(Name('child', Store(), lineno=127, col_offset=16), Attribute(Name('node', Load(), lineno=127, col_offset=25), 'children', Load(), lineno=127, col_offset=25), [If(BinOp(Call(Attribute(Attribute(Name('node', Load(), lineno=128, col_offset=19), 'children', Load(), lineno=128, col_offset=19), 'index', Load(), lineno=128, col_offset=19), [Name('child', Load(), lineno=128, col_offset=39)], [], None, None, lineno=128, col_offset=19), Mod(), Num(2, lineno=128, col_offset=46), lineno=128, col_offset=19), [Continue( lineno=129, col_offset=20)], [], lineno=128, col_offset=16), Assign([Name('reduced', Store(), lineno=130, col_offset=16)], Call(Name('reduce_tree', Load(), lineno=130, col_offset=26), [Name('child', Load(), lineno=130, col_offset=38), Name('new_node', Load(), lineno=130, col_offset=45)], [], None, None, lineno=130, col_offset=26), lineno=130, col_offset=16), If(Compare(Name('reduced', Load(), lineno=131, col_offset=19), [IsNot()], [Name('None', Load(), lineno=131, col_offset=34)], lineno=131, col_offset=19), [Expr(Call(Attribute(Attribute(Name('new_node', Load(), lineno=132, col_offset=20), 'children', Load(), lineno=132, col_offset=20), 'append', Load(), lineno=132, col_offset=20), [Name('reduced', Load(), lineno=132, col_offset=45)], [], None, None, lineno=132, col_offset=20), lineno=132, col_offset=20)], [], lineno=131, col_offset=16)], [], lineno=127, col_offset=12)], lineno=120, col_offset=8)], [If(Compare(Attribute(Name('node', Load(), lineno=133, col_offset=9), 'type', Load(), lineno=133, col_offset=9), [Eq()], [Attribute(Name('syms', Load(), lineno=133, col_offset=22), 'Alternative', Load(), lineno=133, col_offset=22)], lineno=133, col_offset=9), [If(Compare(Call(Name('len', Load(), lineno=134, col_offset=11), [Attribute(Name('node', Load(), lineno=134, col_offset=15), 'children', Load(), lineno=134, col_offset=15)], [], None, None, lineno=134, col_offset=11), [Gt()], [Num(1, lineno=134, col_offset=32)], lineno=134, col_offset=11), [Assign([Name('new_node', Store(), lineno=136, col_offset=12)], Call(Name('MinNode', Load(), lineno=136, col_offset=23), [], [keyword('type', Name('TYPE_GROUP', Load(), lineno=136, col_offset=36))], None, None, lineno=136, col_offset=23), lineno=136, col_offset=12), For(Name('child', Store(), lineno=137, col_offset=16), Attribute(Name('node', Load(), lineno=137, col_offset=25), 'children', Load(), lineno=137, col_offset=25), [Assign([Name('reduced', Store(), lineno=138, col_offset=16)], Call(Name('reduce_tree', Load(), lineno=138, col_offset=26), [Name('child', Load(), lineno=138, col_offset=38), Name('new_node', Load(), lineno=138, col_offset=45)], [], None, None, lineno=138, col_offset=26), lineno=138, col_offset=16), If(Name('reduced', Load(), lineno=139, col_offset=19), [Expr(Call(Attribute(Attribute(Name('new_node', Load(), lineno=140, col_offset=20), 'children', Load(), lineno=140, col_offset=20), 'append', Load(), lineno=140, col_offset=20), [Name('reduced', Load(), lineno=140, col_offset=45)], [], None, None, lineno=140, col_offset=20), lineno=140, col_offset=20)], [], lineno=139, col_offset=16)], [], lineno=137, col_offset=12), If(UnaryOp(Not(), Attribute(Name('new_node', Load(), lineno=141, col_offset=19), 'children', Load(), lineno=141, col_offset=19), lineno=141, col_offset=15), [Assign([Name('new_node', Store(), lineno=143, col_offset=16)], Name('None', Load(), lineno=143, col_offset=27), lineno=143, col_offset=16)], [], lineno=141, col_offset=12)], [Assign([Name('new_node', Store(), lineno=146, col_offset=12)], Call(Name('reduce_tree', Load(), lineno=146, col_offset=23), [Subscript(Attribute(Name('node', Load(), lineno=146, col_offset=35), 'children', Load(), lineno=146, col_offset=35), Index(Num(0, lineno=146, col_offset=49)), Load(), lineno=146, col_offset=35), Name('parent', Load(), lineno=146, col_offset=53)], [], None, None, lineno=146, col_offset=23), lineno=146, col_offset=12)], lineno=134, col_offset=8)], [If(Compare(Attribute(Name('node', Load(), lineno=148, col_offset=9), 'type', Load(), lineno=148, col_offset=9), [Eq()], [Attribute(Name('syms', Load(), lineno=148, col_offset=22), 'Unit', Load(), lineno=148, col_offset=22)], lineno=148, col_offset=9), [If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=149, col_offset=12), [Subscript(Attribute(Name('node', Load(), lineno=149, col_offset=23), 'children', Load(), lineno=149, col_offset=23), Index(Num(0, lineno=149, col_offset=37)), Load(), lineno=149, col_offset=23), Attribute(Name('pytree', Load(), lineno=149, col_offset=41), 'Leaf', Load(), lineno=149, col_offset=41)], [], None, None, lineno=149, col_offset=12), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=150, col_offset=12), 'children', Load(), lineno=150, col_offset=12), Index(Num(0, lineno=150, col_offset=26)), Load(), lineno=150, col_offset=12), 'value', Load(), lineno=150, col_offset=12), [Eq()], [Str('(', lineno=150, col_offset=38)], lineno=150, col_offset=12)], lineno=149, col_offset=12), [Return(Call(Name('reduce_tree', Load(), lineno=152, col_offset=19), [Subscript(Attribute(Name('node', Load(), lineno=152, col_offset=31), 'children', Load(), lineno=152, col_offset=31), Index(Num(1, lineno=152, col_offset=45)), Load(), lineno=152, col_offset=31), Name('parent', Load(), lineno=152, col_offset=49)], [], None, None, lineno=152, col_offset=19), lineno=152, col_offset=12)], [], lineno=149, col_offset=8), If(BoolOp(Or(), [BoolOp(And(), [Call(Name('isinstance', Load(), lineno=153, col_offset=13), [Subscript(Attribute(Name('node', Load(), lineno=153, col_offset=24), 'children', Load(), lineno=153, col_offset=24), Index(Num(0, lineno=153, col_offset=38)), Load(), lineno=153, col_offset=24), Attribute(Name('pytree', Load(), lineno=153, col_offset=42), 'Leaf', Load(), lineno=153, col_offset=42)], [], None, None, lineno=153, col_offset=13), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=154, col_offset=15), 'children', Load(), lineno=154, col_offset=15), Index(Num(0, lineno=154, col_offset=29)), Load(), lineno=154, col_offset=15), 'value', Load(), lineno=154, col_offset=15), [Eq()], [Str('[', lineno=154, col_offset=41)], lineno=154, col_offset=15)], lineno=153, col_offset=13), BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=156, col_offset=16), [Attribute(Name('node', Load(), lineno=156, col_offset=20), 'children', Load(), lineno=156, col_offset=20)], [], None, None, lineno=156, col_offset=16), [Gt()], [Num(1, lineno=156, col_offset=35)], lineno=156, col_offset=16), Call(Name('hasattr', Load(), lineno=157, col_offset=15), [Subscript(Attribute(Name('node', Load(), lineno=157, col_offset=23), 'children', Load(), lineno=157, col_offset=23), Index(Num(1, lineno=157, col_offset=37)), Load(), lineno=157, col_offset=23), Str('value', lineno=157, col_offset=41)], [], None, None, lineno=157, col_offset=15), Compare(Attribute(Subscript(Attribute(Name('node', Load(), lineno=158, col_offset=15), 'children', Load(), lineno=158, col_offset=15), Index(Num(1, lineno=158, col_offset=29)), Load(), lineno=158, col_offset=15), 'value', Load(), lineno=158, col_offset=15), [Eq()], [Str('[', lineno=158, col_offset=41)], lineno=158, col_offset=15)], lineno=156, col_offset=16)], lineno=153, col_offset=12), [Return(Name('None', Load(), lineno=160, col_offset=19), lineno=160, col_offset=12)], [], lineno=153, col_offset=8), Assign([Name('leaf', Store(), lineno=162, col_offset=8)], Name('True', Load(), lineno=162, col_offset=15), lineno=162, col_offset=8), Assign([Name('details_node', Store(), lineno=163, col_offset=8)], Name('None', Load(), lineno=163, col_offset=23), lineno=163, col_offset=8), Assign([Name('alternatives_node', Store(), lineno=164, col_offset=8)], Name('None', Load(), lineno=164, col_offset=28), lineno=164, col_offset=8), Assign([Name('has_repeater', Store(), lineno=165, col_offset=8)], Name('False', Load(), lineno=165, col_offset=23), lineno=165, col_offset=8), Assign([Name('repeater_node', Store(), lineno=166, col_offset=8)], Name('None', Load(), lineno=166, col_offset=24), lineno=166, col_offset=8), Assign([Name('has_variable_name', Store(), lineno=167, col_offset=8)], Name('False', Load(), lineno=167, col_offset=28), lineno=167, col_offset=8), For(Name('child', Store(), lineno=169, col_offset=12), Attribute(Name('node', Load(), lineno=169, col_offset=21), 'children', Load(), lineno=169, col_offset=21), [If(Compare(Attribute(Name('child', Load(), lineno=170, col_offset=15), 'type', Load(), lineno=170, col_offset=15), [Eq()], [Attribute(Name('syms', Load(), lineno=170, col_offset=29), 'Details', Load(), lineno=170, col_offset=29)], lineno=170, col_offset=15), [Assign([Name('leaf', Store(), lineno=171, col_offset=16)], Name('False', Load(), lineno=171, col_offset=23), lineno=171, col_offset=16), Assign([Name('details_node', Store(), lineno=172, col_offset=16)], Name('child', Load(), lineno=172, col_offset=31), lineno=172, col_offset=16)], [If(Compare(Attribute(Name('child', Load(), lineno=173, col_offset=17), 'type', Load(), lineno=173, col_offset=17), [Eq()], [Attribute(Name('syms', Load(), lineno=173, col_offset=31), 'Repeater', Load(), lineno=173, col_offset=31)], lineno=173, col_offset=17), [Assign([Name('has_repeater', Store(), lineno=174, col_offset=16)], Name('True', Load(), lineno=174, col_offset=31), lineno=174, col_offset=16), Assign([Name('repeater_node', Store(), lineno=175, col_offset=16)], Name('child', Load(), lineno=175, col_offset=32), lineno=175, col_offset=16)], [If(Compare(Attribute(Name('child', Load(), lineno=176, col_offset=17), 'type', Load(), lineno=176, col_offset=17), [Eq()], [Attribute(Name('syms', Load(), lineno=176, col_offset=31), 'Alternatives', Load(), lineno=176, col_offset=31)], lineno=176, col_offset=17), [Assign([Name('alternatives_node', Store(), lineno=177, col_offset=16)], Name('child', Load(), lineno=177, col_offset=36), lineno=177, col_offset=16)], [], lineno=176, col_offset=17)], lineno=173, col_offset=17)], lineno=170, col_offset=12), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=178, col_offset=15), [Name('child', Load(), lineno=178, col_offset=23), Str('value', lineno=178, col_offset=30)], [], None, None, lineno=178, col_offset=15), Compare(Attribute(Name('child', Load(), lineno=178, col_offset=43), 'value', Load(), lineno=178, col_offset=43), [Eq()], [Str('=', lineno=178, col_offset=58)], lineno=178, col_offset=43)], lineno=178, col_offset=15), [Assign([Name('has_variable_name', Store(), lineno=179, col_offset=16)], Name('True', Load(), lineno=179, col_offset=36), lineno=179, col_offset=16)], [], lineno=178, col_offset=12)], [], lineno=169, col_offset=8), If(Name('has_variable_name', Load(), lineno=182, col_offset=11), [Assign([Name('name_leaf', Store(), lineno=184, col_offset=12)], Subscript(Attribute(Name('node', Load(), lineno=184, col_offset=24), 'children', Load(), lineno=184, col_offset=24), Index(Num(2, lineno=184, col_offset=38)), Load(), lineno=184, col_offset=24), lineno=184, col_offset=12), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=185, col_offset=15), [Name('name_leaf', Load(), lineno=185, col_offset=23), Str('value', lineno=185, col_offset=34)], [], None, None, lineno=185, col_offset=15), Compare(Attribute(Name('name_leaf', Load(), lineno=185, col_offset=47), 'value', Load(), lineno=185, col_offset=47), [Eq()], [Str('(', lineno=185, col_offset=66)], lineno=185, col_offset=47)], lineno=185, col_offset=15), [Assign([Name('name_leaf', Store(), lineno=187, col_offset=16)], Subscript(Attribute(Name('node', Load(), lineno=187, col_offset=28), 'children', Load(), lineno=187, col_offset=28), Index(Num(3, lineno=187, col_offset=42)), Load(), lineno=187, col_offset=28), lineno=187, col_offset=16)], [], lineno=185, col_offset=12)], [Assign([Name('name_leaf', Store(), lineno=189, col_offset=12)], Subscript(Attribute(Name('node', Load(), lineno=189, col_offset=24), 'children', Load(), lineno=189, col_offset=24), Index(Num(0, lineno=189, col_offset=38)), Load(), lineno=189, col_offset=24), lineno=189, col_offset=12)], lineno=182, col_offset=8), If(Compare(Attribute(Name('name_leaf', Load(), lineno=192, col_offset=11), 'type', Load(), lineno=192, col_offset=11), [Eq()], [Attribute(Name('token_labels', Load(), lineno=192, col_offset=29), 'NAME', Load(), lineno=192, col_offset=29)], lineno=192, col_offset=11), [If(Compare(Attribute(Name('name_leaf', Load(), lineno=194, col_offset=15), 'value', Load(), lineno=194, col_offset=15), [Eq()], [Str('any', lineno=194, col_offset=34)], lineno=194, col_offset=15), [Assign([Name('new_node', Store(), lineno=195, col_offset=16)], Call(Name('MinNode', Load(), lineno=195, col_offset=27), [], [keyword('type', Name('TYPE_ANY', Load(), lineno=195, col_offset=40))], None, None, lineno=195, col_offset=27), lineno=195, col_offset=16)], [If(Call(Name('hasattr', Load(), lineno=197, col_offset=19), [Name('token_labels', Load(), lineno=197, col_offset=27), Attribute(Name('name_leaf', Load(), lineno=197, col_offset=41), 'value', Load(), lineno=197, col_offset=41)], [], None, None, lineno=197, col_offset=19), [Assign([Name('new_node', Store(), lineno=198, col_offset=20)], Call(Name('MinNode', Load(), lineno=198, col_offset=31), [], [keyword('type', Call(Name('getattr', Load(), lineno=198, col_offset=44), [Name('token_labels', Load(), lineno=198, col_offset=52), Attribute(Name('name_leaf', Load(), lineno=198, col_offset=66), 'value', Load(), lineno=198, col_offset=66)], [], None, None, lineno=198, col_offset=44))], None, None, lineno=198, col_offset=31), lineno=198, col_offset=20)], [Assign([Name('new_node', Store(), lineno=200, col_offset=20)], Call(Name('MinNode', Load(), lineno=200, col_offset=31), [], [keyword('type', Call(Name('getattr', Load(), lineno=200, col_offset=44), [Name('pysyms', Load(), lineno=200, col_offset=52), Attribute(Name('name_leaf', Load(), lineno=200, col_offset=60), 'value', Load(), lineno=200, col_offset=60)], [], None, None, lineno=200, col_offset=44))], None, None, lineno=200, col_offset=31), lineno=200, col_offset=20)], lineno=197, col_offset=16)], lineno=194, col_offset=12)], [If(Compare(Attribute(Name('name_leaf', Load(), lineno=202, col_offset=13), 'type', Load(), lineno=202, col_offset=13), [Eq()], [Attribute(Name('token_labels', Load(), lineno=202, col_offset=31), 'STRING', Load(), lineno=202, col_offset=31)], lineno=202, col_offset=13), [Assign([Name('name', Store(), lineno=205, col_offset=12)], Call(Attribute(Attribute(Name('name_leaf', Load(), lineno=205, col_offset=19), 'value', Load(), lineno=205, col_offset=19), 'strip', Load(), lineno=205, col_offset=19), [Str("'", lineno=205, col_offset=41)], [], None, None, lineno=205, col_offset=19), lineno=205, col_offset=12), If(Compare(Name('name', Load(), lineno=206, col_offset=15), [In()], [Name('tokens', Load(), lineno=206, col_offset=23)], lineno=206, col_offset=15), [Assign([Name('new_node', Store(), lineno=207, col_offset=16)], Call(Name('MinNode', Load(), lineno=207, col_offset=27), [], [keyword('type', Subscript(Name('tokens', Load(), lineno=207, col_offset=40), Index(Name('name', Load(), lineno=207, col_offset=47)), Load(), lineno=207, col_offset=40))], None, None, lineno=207, col_offset=27), lineno=207, col_offset=16)], [Assign([Name('new_node', Store(), lineno=209, col_offset=16)], Call(Name('MinNode', Load(), lineno=209, col_offset=27), [], [keyword('type', Attribute(Name('token_labels', Load(), lineno=209, col_offset=40), 'NAME', Load(), lineno=209, col_offset=40)), keyword('name', Name('name', Load(), lineno=209, col_offset=64))], None, None, lineno=209, col_offset=27), lineno=209, col_offset=16)], lineno=206, col_offset=12)], [If(Compare(Attribute(Name('name_leaf', Load(), lineno=210, col_offset=13), 'type', Load(), lineno=210, col_offset=13), [Eq()], [Attribute(Name('syms', Load(), lineno=210, col_offset=31), 'Alternatives', Load(), lineno=210, col_offset=31)], lineno=210, col_offset=13), [Assign([Name('new_node', Store(), lineno=211, col_offset=12)], Call(Name('reduce_tree', Load(), lineno=211, col_offset=23), [Name('alternatives_node', Load(), lineno=211, col_offset=35), Name('parent', Load(), lineno=211, col_offset=54)], [], None, None, lineno=211, col_offset=23), lineno=211, col_offset=12)], [], lineno=210, col_offset=13)], lineno=202, col_offset=13)], lineno=192, col_offset=8), If(Name('has_repeater', Load(), lineno=214, col_offset=11), [If(Compare(Attribute(Subscript(Attribute(Name('repeater_node', Load(), lineno=215, col_offset=15), 'children', Load(), lineno=215, col_offset=15), Index(Num(0, lineno=215, col_offset=38)), Load(), lineno=215, col_offset=15), 'value', Load(), lineno=215, col_offset=15), [Eq()], [Str('*', lineno=215, col_offset=50)], lineno=215, col_offset=15), [Assign([Name('new_node', Store(), lineno=217, col_offset=16)], Name('None', Load(), lineno=217, col_offset=27), lineno=217, col_offset=16)], [If(Compare(Attribute(Subscript(Attribute(Name('repeater_node', Load(), lineno=218, col_offset=17), 'children', Load(), lineno=218, col_offset=17), Index(Num(0, lineno=218, col_offset=40)), Load(), lineno=218, col_offset=17), 'value', Load(), lineno=218, col_offset=17), [Eq()], [Str('+', lineno=218, col_offset=52)], lineno=218, col_offset=17), [Pass( lineno=220, col_offset=16)], [Raise(Name('NotImplementedError', Load(), lineno=223, col_offset=22), None, None, lineno=223, col_offset=16), Pass( lineno=224, col_offset=16)], lineno=218, col_offset=17)], lineno=215, col_offset=12)], [], lineno=214, col_offset=8), If(BoolOp(And(), [Name('details_node', Load(), lineno=227, col_offset=11), Compare(Name('new_node', Load(), lineno=227, col_offset=28), [IsNot()], [Name('None', Load(), lineno=227, col_offset=44)], lineno=227, col_offset=28)], lineno=227, col_offset=11), [For(Name('child', Store(), lineno=228, col_offset=16), Subscript(Attribute(Name('details_node', Load(), lineno=228, col_offset=25), 'children', Load(), lineno=228, col_offset=25), Slice(Num(1, lineno=228, col_offset=47), Num(-1, lineno=228, col_offset=50), None), Load(), lineno=228, col_offset=25), [Assign([Name('reduced', Store(), lineno=230, col_offset=16)], Call(Name('reduce_tree', Load(), lineno=230, col_offset=26), [Name('child', Load(), lineno=230, col_offset=38), Name('new_node', Load(), lineno=230, col_offset=45)], [], None, None, lineno=230, col_offset=26), lineno=230, col_offset=16), If(Compare(Name('reduced', Load(), lineno=231, col_offset=19), [IsNot()], [Name('None', Load(), lineno=231, col_offset=34)], lineno=231, col_offset=19), [Expr(Call(Attribute(Attribute(Name('new_node', Load(), lineno=232, col_offset=20), 'children', Load(), lineno=232, col_offset=20), 'append', Load(), lineno=232, col_offset=20), [Name('reduced', Load(), lineno=232, col_offset=45)], [], None, None, lineno=232, col_offset=20), lineno=232, col_offset=20)], [], lineno=231, col_offset=16)], [], lineno=228, col_offset=12)], [], lineno=227, col_offset=8)], [], lineno=148, col_offset=9)], lineno=133, col_offset=9)], lineno=118, col_offset=4), If(Name('new_node', Load(), lineno=233, col_offset=7), [Assign([Attribute(Name('new_node', Load(), lineno=234, col_offset=8), 'parent', Store(), lineno=234, col_offset=8)], Name('parent', Load(), lineno=234, col_offset=26), lineno=234, col_offset=8)], [], lineno=233, col_offset=4), Return(Name('new_node', Load(), lineno=235, col_offset=11), lineno=235, col_offset=4)], [], lineno=104, col_offset=0), FunctionDef('get_characteristic_subpattern', arguments([Name('subpatterns', Param(), lineno=238, col_offset=34)], None, None, []), [Expr(Str('Picks the most characteristic from a list of linear patterns\n    Current order used is:\n    names > common_names > common_chars\n    ', lineno=242, col_offset=-1), lineno=242, col_offset=-1), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=243, col_offset=11), [Name('subpatterns', Load(), lineno=243, col_offset=22), Name('list', Load(), lineno=243, col_offset=35)], [], None, None, lineno=243, col_offset=11), lineno=243, col_offset=7), [Return(Name('subpatterns', Load(), lineno=244, col_offset=15), lineno=244, col_offset=8)], [], lineno=243, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=245, col_offset=7), [Name('subpatterns', Load(), lineno=245, col_offset=11)], [], None, None, lineno=245, col_offset=7), [Eq()], [Num(1, lineno=245, col_offset=25)], lineno=245, col_offset=7), [Return(Subscript(Name('subpatterns', Load(), lineno=246, col_offset=15), Index(Num(0, lineno=246, col_offset=27)), Load(), lineno=246, col_offset=15), lineno=246, col_offset=8)], [], lineno=245, col_offset=4), Assign([Name('subpatterns_with_names', Store(), lineno=249, col_offset=4)], List([], Load(), lineno=249, col_offset=29), lineno=249, col_offset=4), Assign([Name('subpatterns_with_common_names', Store(), lineno=250, col_offset=4)], List([], Load(), lineno=250, col_offset=36), lineno=250, col_offset=4), Assign([Name('common_names', Store(), lineno=251, col_offset=4)], List([Str('in', lineno=251, col_offset=20), Str('for', lineno=251, col_offset=26), Str('if', lineno=251, col_offset=33), Str('not', lineno=251, col_offset=40), Str('None', lineno=251, col_offset=47)], Load(), lineno=251, col_offset=19), lineno=251, col_offset=4), Assign([Name('subpatterns_with_common_chars', Store(), lineno=252, col_offset=4)], List([], Load(), lineno=252, col_offset=36), lineno=252, col_offset=4), Assign([Name('common_chars', Store(), lineno=253, col_offset=4)], Str('[]().,:', lineno=253, col_offset=19), lineno=253, col_offset=4), For(Name('subpattern', Store(), lineno=254, col_offset=8), Name('subpatterns', Load(), lineno=254, col_offset=22), [If(Call(Name('any', Load(), lineno=255, col_offset=11), [Call(Name('rec_test', Load(), lineno=255, col_offset=15), [Name('subpattern', Load(), lineno=255, col_offset=24), Lambda(arguments([Name('x', Param(), lineno=255, col_offset=43)], None, None, []), Compare(Call(Name('type', Load(), lineno=255, col_offset=46), [Name('x', Load(), lineno=255, col_offset=51)], [], None, None, lineno=255, col_offset=46), [Is()], [Name('str', Load(), lineno=255, col_offset=57)], lineno=255, col_offset=46), lineno=255, col_offset=36)], [], None, None, lineno=255, col_offset=15)], [], None, None, lineno=255, col_offset=11), [If(Call(Name('any', Load(), lineno=256, col_offset=15), [Call(Name('rec_test', Load(), lineno=256, col_offset=19), [Name('subpattern', Load(), lineno=256, col_offset=28), Lambda(arguments([Name('x', Param(), lineno=257, col_offset=35)], None, None, []), BoolOp(And(), [Call(Name('isinstance', Load(), lineno=257, col_offset=38), [Name('x', Load(), lineno=257, col_offset=49), Name('str', Load(), lineno=257, col_offset=52)], [], None, None, lineno=257, col_offset=38), Compare(Name('x', Load(), lineno=257, col_offset=61), [In()], [Name('common_chars', Load(), lineno=257, col_offset=66)], lineno=257, col_offset=61)], lineno=257, col_offset=38), lineno=257, col_offset=28)], [], None, None, lineno=256, col_offset=19)], [], None, None, lineno=256, col_offset=15), [Expr(Call(Attribute(Name('subpatterns_with_common_chars', Load(), lineno=258, col_offset=16), 'append', Load(), lineno=258, col_offset=16), [Name('subpattern', Load(), lineno=258, col_offset=53)], [], None, None, lineno=258, col_offset=16), lineno=258, col_offset=16)], [If(Call(Name('any', Load(), lineno=259, col_offset=17), [Call(Name('rec_test', Load(), lineno=259, col_offset=21), [Name('subpattern', Load(), lineno=259, col_offset=30), Lambda(arguments([Name('x', Param(), lineno=260, col_offset=37)], None, None, []), BoolOp(And(), [Call(Name('isinstance', Load(), lineno=260, col_offset=40), [Name('x', Load(), lineno=260, col_offset=51), Name('str', Load(), lineno=260, col_offset=54)], [], None, None, lineno=260, col_offset=40), Compare(Name('x', Load(), lineno=260, col_offset=63), [In()], [Name('common_names', Load(), lineno=260, col_offset=68)], lineno=260, col_offset=63)], lineno=260, col_offset=40), lineno=260, col_offset=30)], [], None, None, lineno=259, col_offset=21)], [], None, None, lineno=259, col_offset=17), [Expr(Call(Attribute(Name('subpatterns_with_common_names', Load(), lineno=261, col_offset=16), 'append', Load(), lineno=261, col_offset=16), [Name('subpattern', Load(), lineno=261, col_offset=53)], [], None, None, lineno=261, col_offset=16), lineno=261, col_offset=16)], [Expr(Call(Attribute(Name('subpatterns_with_names', Load(), lineno=264, col_offset=16), 'append', Load(), lineno=264, col_offset=16), [Name('subpattern', Load(), lineno=264, col_offset=46)], [], None, None, lineno=264, col_offset=16), lineno=264, col_offset=16)], lineno=259, col_offset=17)], lineno=256, col_offset=12)], [], lineno=255, col_offset=8)], [], lineno=254, col_offset=4), If(Name('subpatterns_with_names', Load(), lineno=266, col_offset=7), [Assign([Name('subpatterns', Store(), lineno=267, col_offset=8)], Name('subpatterns_with_names', Load(), lineno=267, col_offset=22), lineno=267, col_offset=8)], [If(Name('subpatterns_with_common_names', Load(), lineno=268, col_offset=9), [Assign([Name('subpatterns', Store(), lineno=269, col_offset=8)], Name('subpatterns_with_common_names', Load(), lineno=269, col_offset=22), lineno=269, col_offset=8)], [If(Name('subpatterns_with_common_chars', Load(), lineno=270, col_offset=9), [Assign([Name('subpatterns', Store(), lineno=271, col_offset=8)], Name('subpatterns_with_common_chars', Load(), lineno=271, col_offset=22), lineno=271, col_offset=8)], [], lineno=270, col_offset=9)], lineno=268, col_offset=9)], lineno=266, col_offset=4), Return(Call(Name('max', Load(), lineno=273, col_offset=11), [Name('subpatterns', Load(), lineno=273, col_offset=15)], [keyword('key', Name('len', Load(), lineno=273, col_offset=32))], None, None, lineno=273, col_offset=11), lineno=273, col_offset=4)], [], lineno=238, col_offset=0), FunctionDef('rec_test', arguments([Name('sequence', Param(), lineno=275, col_offset=13), Name('test_func', Param(), lineno=275, col_offset=23)], None, None, []), [Expr(Str('Tests test_func on all items of sequence and items of included\n    sub-iterables', lineno=277, col_offset=-1), lineno=277, col_offset=-1), For(Name('x', Store(), lineno=278, col_offset=8), Name('sequence', Load(), lineno=278, col_offset=13), [If(Call(Name('isinstance', Load(), lineno=279, col_offset=11), [Name('x', Load(), lineno=279, col_offset=22), Tuple([Name('list', Load(), lineno=279, col_offset=26), Name('tuple', Load(), lineno=279, col_offset=32)], Load(), lineno=279, col_offset=26)], [], None, None, lineno=279, col_offset=11), [For(Name('y', Store(), lineno=280, col_offset=16), Call(Name('rec_test', Load(), lineno=280, col_offset=21), [Name('x', Load(), lineno=280, col_offset=30), Name('test_func', Load(), lineno=280, col_offset=33)], [], None, None, lineno=280, col_offset=21), [Expr(Yield(Name('y', Load(), lineno=281, col_offset=22), lineno=281, col_offset=16), lineno=281, col_offset=16)], [], lineno=280, col_offset=12)], [Expr(Yield(Call(Name('test_func', Load(), lineno=283, col_offset=18), [Name('x', Load(), lineno=283, col_offset=28)], [], None, None, lineno=283, col_offset=18), lineno=283, col_offset=12), lineno=283, col_offset=12)], lineno=279, col_offset=8)], [], lineno=278, col_offset=4)], [], lineno=275, col_offset=0)])
