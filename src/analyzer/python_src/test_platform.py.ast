Module([Import([alias('sys', None)], lineno=1, col_offset=0), Import([alias('os', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), Import([alias('platform', None)], lineno=4, col_offset=0), Import([alias('subprocess', None)], lineno=5, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), ClassDef('PlatformTest', [Attribute(Name('unittest', Load(), lineno=9, col_offset=19), 'TestCase', Load(), lineno=9, col_offset=19)], [FunctionDef('test_architecture', arguments([Name('self', Param(), lineno=10, col_offset=26)], None, None, []), [Assign([Name('res', Store(), lineno=11, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=11, col_offset=14), 'architecture', Load(), lineno=11, col_offset=14), [], [], None, None, lineno=11, col_offset=14), lineno=11, col_offset=8)], [], lineno=10, col_offset=4), If(Call(Name('hasattr', Load(), lineno=13, col_offset=7), [Name('os', Load(), lineno=13, col_offset=15), Str('symlink', lineno=13, col_offset=19)], [], None, None, lineno=13, col_offset=7), [FunctionDef('test_architecture_via_symlink', arguments([Name('self', Param(), lineno=14, col_offset=42)], None, None, []), [FunctionDef('get', arguments([Name('python', Param(), lineno=15, col_offset=20)], None, None, []), [Assign([Name('cmd', Store(), lineno=16, col_offset=16)], List([Name('python', Load(), lineno=16, col_offset=23), Str('-c', lineno=16, col_offset=31), Str('import platform; print platform.architecture()', lineno=17, col_offset=20)], Load(), lineno=16, col_offset=22), lineno=16, col_offset=16), Assign([Name('p', Store(), lineno=18, col_offset=16)], Call(Attribute(Name('subprocess', Load(), lineno=18, col_offset=20), 'Popen', Load(), lineno=18, col_offset=20), [Name('cmd', Load(), lineno=18, col_offset=37)], [keyword('stdout', Attribute(Name('subprocess', Load(), lineno=18, col_offset=49), 'PIPE', Load(), lineno=18, col_offset=49))], None, None, lineno=18, col_offset=20), lineno=18, col_offset=16), Return(Call(Attribute(Name('p', Load(), lineno=19, col_offset=23), 'communicate', Load(), lineno=19, col_offset=23), [], [], None, None, lineno=19, col_offset=23), lineno=19, col_offset=16)], [], lineno=15, col_offset=12), Assign([Name('real', Store(), lineno=20, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=20, col_offset=19), 'path', Load(), lineno=20, col_offset=19), 'realpath', Load(), lineno=20, col_offset=19), [Attribute(Name('sys', Load(), lineno=20, col_offset=36), 'executable', Load(), lineno=20, col_offset=36)], [], None, None, lineno=20, col_offset=19), lineno=20, col_offset=12), Assign([Name('link', Store(), lineno=21, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=21, col_offset=19), 'path', Load(), lineno=21, col_offset=19), 'abspath', Load(), lineno=21, col_offset=19), [Attribute(Name('test_support', Load(), lineno=21, col_offset=35), 'TESTFN', Load(), lineno=21, col_offset=35)], [], None, None, lineno=21, col_offset=19), lineno=21, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=22, col_offset=12), 'symlink', Load(), lineno=22, col_offset=12), [Name('real', Load(), lineno=22, col_offset=23), Name('link', Load(), lineno=22, col_offset=29)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=12), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=16), 'assertEqual', Load(), lineno=24, col_offset=16), [Call(Name('get', Load(), lineno=24, col_offset=33), [Name('real', Load(), lineno=24, col_offset=37)], [], None, None, lineno=24, col_offset=33), Call(Name('get', Load(), lineno=24, col_offset=44), [Name('link', Load(), lineno=24, col_offset=48)], [], None, None, lineno=24, col_offset=44)], [], None, None, lineno=24, col_offset=16), lineno=24, col_offset=16)], [Expr(Call(Attribute(Name('os', Load(), lineno=26, col_offset=16), 'remove', Load(), lineno=26, col_offset=16), [Name('link', Load(), lineno=26, col_offset=26)], [], None, None, lineno=26, col_offset=16), lineno=26, col_offset=16)], lineno=23, col_offset=12)], [], lineno=14, col_offset=8)], [], lineno=13, col_offset=4), FunctionDef('test_platform', arguments([Name('self', Param(), lineno=28, col_offset=22)], None, None, []), [For(Name('aliased', Store(), lineno=29, col_offset=12), Tuple([Name('False', Load(), lineno=29, col_offset=24), Name('True', Load(), lineno=29, col_offset=31)], Load(), lineno=29, col_offset=24), [For(Name('terse', Store(), lineno=30, col_offset=16), Tuple([Name('False', Load(), lineno=30, col_offset=26), Name('True', Load(), lineno=30, col_offset=33)], Load(), lineno=30, col_offset=26), [Assign([Name('res', Store(), lineno=31, col_offset=16)], Call(Attribute(Name('platform', Load(), lineno=31, col_offset=22), 'platform', Load(), lineno=31, col_offset=22), [Name('aliased', Load(), lineno=31, col_offset=40), Name('terse', Load(), lineno=31, col_offset=49)], [], None, None, lineno=31, col_offset=22), lineno=31, col_offset=16)], [], lineno=30, col_offset=12)], [], lineno=29, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_system', arguments([Name('self', Param(), lineno=33, col_offset=20)], None, None, []), [Assign([Name('res', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=34, col_offset=14), 'system', Load(), lineno=34, col_offset=14), [], [], None, None, lineno=34, col_offset=14), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('test_node', arguments([Name('self', Param(), lineno=36, col_offset=18)], None, None, []), [Assign([Name('res', Store(), lineno=37, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=37, col_offset=14), 'node', Load(), lineno=37, col_offset=14), [], [], None, None, lineno=37, col_offset=14), lineno=37, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_release', arguments([Name('self', Param(), lineno=39, col_offset=21)], None, None, []), [Assign([Name('res', Store(), lineno=40, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=40, col_offset=14), 'release', Load(), lineno=40, col_offset=14), [], [], None, None, lineno=40, col_offset=14), lineno=40, col_offset=8)], [], lineno=39, col_offset=4), FunctionDef('test_version', arguments([Name('self', Param(), lineno=42, col_offset=21)], None, None, []), [Assign([Name('res', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=43, col_offset=14), 'version', Load(), lineno=43, col_offset=14), [], [], None, None, lineno=43, col_offset=14), lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('test_machine', arguments([Name('self', Param(), lineno=45, col_offset=21)], None, None, []), [Assign([Name('res', Store(), lineno=46, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=46, col_offset=14), 'machine', Load(), lineno=46, col_offset=14), [], [], None, None, lineno=46, col_offset=14), lineno=46, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('test_processor', arguments([Name('self', Param(), lineno=48, col_offset=23)], None, None, []), [Assign([Name('res', Store(), lineno=49, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=49, col_offset=14), 'processor', Load(), lineno=49, col_offset=14), [], [], None, None, lineno=49, col_offset=14), lineno=49, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=51, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=52, col_offset=8), 'save_version', Store(), lineno=52, col_offset=8)], Attribute(Name('sys', Load(), lineno=52, col_offset=28), 'version', Load(), lineno=52, col_offset=28), lineno=52, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), 'save_subversion', Store(), lineno=53, col_offset=8)], Attribute(Name('sys', Load(), lineno=53, col_offset=31), 'subversion', Load(), lineno=53, col_offset=31), lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=54, col_offset=8), 'save_platform', Store(), lineno=54, col_offset=8)], Attribute(Name('sys', Load(), lineno=54, col_offset=29), 'platform', Load(), lineno=54, col_offset=29), lineno=54, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=56, col_offset=17)], None, None, []), [Assign([Attribute(Name('sys', Load(), lineno=57, col_offset=8), 'version', Store(), lineno=57, col_offset=8)], Attribute(Name('self', Load(), lineno=57, col_offset=22), 'save_version', Load(), lineno=57, col_offset=22), lineno=57, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=58, col_offset=8), 'subversion', Store(), lineno=58, col_offset=8)], Attribute(Name('self', Load(), lineno=58, col_offset=25), 'save_subversion', Load(), lineno=58, col_offset=25), lineno=58, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=59, col_offset=8), 'platform', Store(), lineno=59, col_offset=8)], Attribute(Name('self', Load(), lineno=59, col_offset=23), 'save_platform', Load(), lineno=59, col_offset=23), lineno=59, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('test_sys_version', arguments([Name('self', Param(), lineno=61, col_offset=25)], None, None, []), [For(Tuple([Name('input', Store(), lineno=63, col_offset=12), Name('output', Store(), lineno=63, col_offset=19)], Store(), lineno=63, col_offset=12), Tuple([Tuple([Str('2.4.3 (#1, Jun 21 2006, 13:54:21) \n[GCC 3.3.4 (pre 3.3.5 20040809)]', lineno=64, col_offset=13), Tuple([Str('CPython', lineno=65, col_offset=14), Str('2.4.3', lineno=65, col_offset=25), Str('', lineno=65, col_offset=34), Str('', lineno=65, col_offset=38), Str('1', lineno=65, col_offset=42), Str('Jun 21 2006 13:54:21', lineno=65, col_offset=47), Str('GCC 3.3.4 (pre 3.3.5 20040809)', lineno=65, col_offset=71)], Load(), lineno=65, col_offset=14)], Load(), lineno=64, col_offset=13), Tuple([Str('IronPython 1.0.60816 on .NET 2.0.50727.42', lineno=66, col_offset=13), Tuple([Str('IronPython', lineno=67, col_offset=14), Str('1.0.60816', lineno=67, col_offset=28), Str('', lineno=67, col_offset=41), Str('', lineno=67, col_offset=45), Str('', lineno=67, col_offset=49), Str('', lineno=67, col_offset=53), Str('.NET 2.0.50727.42', lineno=67, col_offset=57)], Load(), lineno=67, col_offset=14)], Load(), lineno=66, col_offset=13), Tuple([Str('IronPython 1.0 (1.0.61005.1977) on .NET 2.0.50727.42', lineno=68, col_offset=13), Tuple([Str('IronPython', lineno=69, col_offset=14), Str('1.0.0', lineno=69, col_offset=28), Str('', lineno=69, col_offset=37), Str('', lineno=69, col_offset=41), Str('', lineno=69, col_offset=45), Str('', lineno=69, col_offset=49), Str('.NET 2.0.50727.42', lineno=69, col_offset=53)], Load(), lineno=69, col_offset=14)], Load(), lineno=68, col_offset=13)], Load(), lineno=64, col_offset=12), [Assign([Tuple([Name('name', Store(), lineno=73, col_offset=13), Name('version', Store(), lineno=73, col_offset=19), Name('branch', Store(), lineno=73, col_offset=28), Name('revision', Store(), lineno=73, col_offset=36), Name('buildno', Store(), lineno=73, col_offset=46), Name('builddate', Store(), lineno=73, col_offset=55), Name('compiler', Store(), lineno=73, col_offset=66)], Store(), lineno=73, col_offset=13)], Call(Attribute(Name('platform', Load(), lineno=74, col_offset=21), '_sys_version', Load(), lineno=74, col_offset=21), [Name('input', Load(), lineno=74, col_offset=43)], [], None, None, lineno=74, col_offset=21), lineno=73, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=12), 'assertEqual', Load(), lineno=75, col_offset=12), [Tuple([Name('name', Load(), lineno=76, col_offset=17), Name('version', Load(), lineno=76, col_offset=23), Str('', lineno=76, col_offset=32), Str('', lineno=76, col_offset=36), Name('buildno', Load(), lineno=76, col_offset=40), Name('builddate', Load(), lineno=76, col_offset=49), Name('compiler', Load(), lineno=76, col_offset=60)], Load(), lineno=76, col_offset=17), Name('output', Load(), lineno=76, col_offset=71)], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=12)], [], lineno=63, col_offset=8), Assign([Name('sys_versions', Store(), lineno=80, col_offset=8)], Dict([Tuple([Str('2.6.1 (r261:67515, Dec  6 2008, 15:26:00) \n[GCC 4.0.1 (Apple Computer, Inc. build 5370)]', lineno=81, col_offset=13), Tuple([Str('CPython', lineno=82, col_offset=14), Str('tags/r261', lineno=82, col_offset=25), Str('67515', lineno=82, col_offset=38)], Load(), lineno=82, col_offset=14), Attribute(Name('self', Load(), lineno=82, col_offset=48), 'save_platform', Load(), lineno=82, col_offset=48)], Load(), lineno=81, col_offset=13), Tuple([Str('IronPython 2.0 (2.0.0.0) on .NET 2.0.50727.3053', lineno=87, col_offset=13), Name('None', Load(), lineno=87, col_offset=64), Str('cli', lineno=87, col_offset=70)], Load(), lineno=87, col_offset=13), Tuple([Str('2.5 (trunk:6107, Mar 26 2009, 13:02:18) \n[Java HotSpot(TM) Client VM ("Apple Computer, Inc.")]', lineno=91, col_offset=13), Tuple([Str('Jython', lineno=92, col_offset=13), Str('trunk', lineno=92, col_offset=23), Str('6107', lineno=92, col_offset=32)], Load(), lineno=92, col_offset=13), Str('java1.5.0_16', lineno=92, col_offset=41)], Load(), lineno=91, col_offset=13), Tuple([Str('2.5.2 (63378, Mar 26 2009, 18:03:29)\n[PyPy 1.0.0]', lineno=96, col_offset=13), Tuple([Str('PyPy', lineno=97, col_offset=14), Str('trunk', lineno=97, col_offset=22), Str('63378', lineno=97, col_offset=31)], Load(), lineno=97, col_offset=14), Attribute(Name('self', Load(), lineno=97, col_offset=41), 'save_platform', Load(), lineno=97, col_offset=41)], Load(), lineno=96, col_offset=13)], [Tuple([Str('CPython', lineno=84, col_offset=17), Str('2.6.1', lineno=84, col_offset=28), Str('tags/r261', lineno=84, col_offset=37), Str('67515', lineno=84, col_offset=50), Tuple([Str('r261:67515', lineno=85, col_offset=18), Str('Dec  6 2008 15:26:00', lineno=85, col_offset=32)], Load(), lineno=85, col_offset=18), Str('GCC 4.0.1 (Apple Computer, Inc. build 5370)', lineno=86, col_offset=17)], Load(), lineno=84, col_offset=17), Tuple([Str('IronPython', lineno=89, col_offset=17), Str('2.0.0', lineno=89, col_offset=31), Str('', lineno=89, col_offset=40), Str('', lineno=89, col_offset=44), Tuple([Str('', lineno=89, col_offset=49), Str('', lineno=89, col_offset=53)], Load(), lineno=89, col_offset=49), Str('.NET 2.0.50727.3053', lineno=90, col_offset=17)], Load(), lineno=89, col_offset=17), Tuple([Str('Jython', lineno=94, col_offset=17), Str('2.5.0', lineno=94, col_offset=27), Str('trunk', lineno=94, col_offset=36), Str('6107', lineno=94, col_offset=45), Tuple([Str('trunk:6107', lineno=95, col_offset=18), Str('Mar 26 2009', lineno=95, col_offset=32)], Load(), lineno=95, col_offset=18), Str('java1.5.0_16', lineno=95, col_offset=48)], Load(), lineno=94, col_offset=17), Tuple([Str('PyPy', lineno=99, col_offset=17), Str('2.5.2', lineno=99, col_offset=25), Str('trunk', lineno=99, col_offset=34), Str('63378', lineno=99, col_offset=43), Tuple([Str('63378', lineno=99, col_offset=53), Str('Mar 26 2009', lineno=99, col_offset=62)], Load(), lineno=99, col_offset=53), Str('', lineno=100, col_offset=17)], Load(), lineno=99, col_offset=17)], lineno=80, col_offset=23), lineno=80, col_offset=8), For(Tuple([Tuple([Name('version_tag', Store(), lineno=102, col_offset=13), Name('subversion', Store(), lineno=102, col_offset=26), Name('sys_platform', Store(), lineno=102, col_offset=38)], Store(), lineno=102, col_offset=13), Name('info', Store(), lineno=102, col_offset=53)], Store(), lineno=102, col_offset=13), Call(Attribute(Name('sys_versions', Load(), lineno=103, col_offset=16), 'iteritems', Load(), lineno=103, col_offset=16), [], [], None, None, lineno=103, col_offset=16), [Assign([Attribute(Name('sys', Load(), lineno=104, col_offset=12), 'version', Store(), lineno=104, col_offset=12)], Name('version_tag', Load(), lineno=104, col_offset=26), lineno=104, col_offset=12), If(Compare(Name('subversion', Load(), lineno=105, col_offset=15), [Is()], [Name('None', Load(), lineno=105, col_offset=29)], lineno=105, col_offset=15), [If(Call(Name('hasattr', Load(), lineno=106, col_offset=19), [Name('sys', Load(), lineno=106, col_offset=27), Str('subversion', lineno=106, col_offset=32)], [], None, None, lineno=106, col_offset=19), [Delete([Attribute(Name('sys', Load(), lineno=107, col_offset=24), 'subversion', Del(), lineno=107, col_offset=24)], lineno=107, col_offset=20)], [], lineno=106, col_offset=16)], [Assign([Attribute(Name('sys', Load(), lineno=109, col_offset=16), 'subversion', Store(), lineno=109, col_offset=16)], Name('subversion', Load(), lineno=109, col_offset=33), lineno=109, col_offset=16)], lineno=105, col_offset=12), If(Compare(Name('sys_platform', Load(), lineno=110, col_offset=15), [IsNot()], [Name('None', Load(), lineno=110, col_offset=35)], lineno=110, col_offset=15), [Assign([Attribute(Name('sys', Load(), lineno=111, col_offset=16), 'platform', Store(), lineno=111, col_offset=16)], Name('sys_platform', Load(), lineno=111, col_offset=31), lineno=111, col_offset=16)], [], lineno=110, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=12), 'assertEqual', Load(), lineno=112, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=112, col_offset=29), 'python_implementation', Load(), lineno=112, col_offset=29), [], [], None, None, lineno=112, col_offset=29), Subscript(Name('info', Load(), lineno=112, col_offset=63), Index(Num(0, lineno=112, col_offset=68)), Load(), lineno=112, col_offset=63)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=12), 'assertEqual', Load(), lineno=113, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=113, col_offset=29), 'python_version', Load(), lineno=113, col_offset=29), [], [], None, None, lineno=113, col_offset=29), Subscript(Name('info', Load(), lineno=113, col_offset=56), Index(Num(1, lineno=113, col_offset=61)), Load(), lineno=113, col_offset=56)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=12), 'assertEqual', Load(), lineno=114, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=114, col_offset=29), 'python_branch', Load(), lineno=114, col_offset=29), [], [], None, None, lineno=114, col_offset=29), Subscript(Name('info', Load(), lineno=114, col_offset=55), Index(Num(2, lineno=114, col_offset=60)), Load(), lineno=114, col_offset=55)], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=12), 'assertEqual', Load(), lineno=115, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=115, col_offset=29), 'python_revision', Load(), lineno=115, col_offset=29), [], [], None, None, lineno=115, col_offset=29), Subscript(Name('info', Load(), lineno=115, col_offset=57), Index(Num(3, lineno=115, col_offset=62)), Load(), lineno=115, col_offset=57)], [], None, None, lineno=115, col_offset=12), lineno=115, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=12), 'assertEqual', Load(), lineno=116, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=116, col_offset=29), 'python_build', Load(), lineno=116, col_offset=29), [], [], None, None, lineno=116, col_offset=29), Subscript(Name('info', Load(), lineno=116, col_offset=54), Index(Num(4, lineno=116, col_offset=59)), Load(), lineno=116, col_offset=54)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=12), 'assertEqual', Load(), lineno=117, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=117, col_offset=29), 'python_compiler', Load(), lineno=117, col_offset=29), [], [], None, None, lineno=117, col_offset=29), Subscript(Name('info', Load(), lineno=117, col_offset=57), Index(Num(5, lineno=117, col_offset=62)), Load(), lineno=117, col_offset=57)], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=12)], [], lineno=102, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('test_system_alias', arguments([Name('self', Param(), lineno=119, col_offset=26)], None, None, []), [Assign([Name('res', Store(), lineno=120, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=120, col_offset=14), 'system_alias', Load(), lineno=120, col_offset=14), [Call(Attribute(Name('platform', Load(), lineno=121, col_offset=12), 'system', Load(), lineno=121, col_offset=12), [], [], None, None, lineno=121, col_offset=12), Call(Attribute(Name('platform', Load(), lineno=122, col_offset=12), 'release', Load(), lineno=122, col_offset=12), [], [], None, None, lineno=122, col_offset=12), Call(Attribute(Name('platform', Load(), lineno=123, col_offset=12), 'version', Load(), lineno=123, col_offset=12), [], [], None, None, lineno=123, col_offset=12)], [], None, None, lineno=120, col_offset=14), lineno=120, col_offset=8)], [], lineno=119, col_offset=4), FunctionDef('test_uname', arguments([Name('self', Param(), lineno=126, col_offset=19)], None, None, []), [Assign([Name('res', Store(), lineno=127, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=127, col_offset=14), 'uname', Load(), lineno=127, col_offset=14), [], [], None, None, lineno=127, col_offset=14), lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'assertTrue', Load(), lineno=128, col_offset=8), [Call(Name('any', Load(), lineno=128, col_offset=24), [Name('res', Load(), lineno=128, col_offset=28)], [], None, None, lineno=128, col_offset=24)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('test_uname_win32_ARCHITEW6432', arguments([Name('self', Param(), lineno=131, col_offset=38)], None, None, []), [TryFinally([With(Call(Attribute(Name('test_support', Load(), lineno=137, col_offset=17), 'EnvironmentVarGuard', Load(), lineno=137, col_offset=17), [], [], None, None, lineno=137, col_offset=17), Name('environ', Store(), lineno=137, col_offset=55), [If(Compare(Str('PROCESSOR_ARCHITEW6432', lineno=138, col_offset=19), [In()], [Name('environ', Load(), lineno=138, col_offset=47)], lineno=138, col_offset=19), [Delete([Subscript(Name('environ', Load(), lineno=139, col_offset=24), Index(Str('PROCESSOR_ARCHITEW6432', lineno=139, col_offset=32)), Del(), lineno=139, col_offset=24)], lineno=139, col_offset=20)], [], lineno=138, col_offset=16), Assign([Subscript(Name('environ', Load(), lineno=140, col_offset=16), Index(Str('PROCESSOR_ARCHITECTURE', lineno=140, col_offset=24)), Store(), lineno=140, col_offset=16)], Str('foo', lineno=140, col_offset=52), lineno=140, col_offset=16), Assign([Attribute(Name('platform', Load(), lineno=141, col_offset=16), '_uname_cache', Store(), lineno=141, col_offset=16)], Name('None', Load(), lineno=141, col_offset=40), lineno=141, col_offset=16), Assign([Tuple([Name('system', Store(), lineno=142, col_offset=16), Name('node', Store(), lineno=142, col_offset=24), Name('release', Store(), lineno=142, col_offset=30), Name('version', Store(), lineno=142, col_offset=39), Name('machine', Store(), lineno=142, col_offset=48), Name('processor', Store(), lineno=142, col_offset=57)], Store(), lineno=142, col_offset=16)], Call(Attribute(Name('platform', Load(), lineno=142, col_offset=69), 'uname', Load(), lineno=142, col_offset=69), [], [], None, None, lineno=142, col_offset=69), lineno=142, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=16), 'assertEqual', Load(), lineno=143, col_offset=16), [Name('machine', Load(), lineno=143, col_offset=33), Str('foo', lineno=143, col_offset=42)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16), Assign([Subscript(Name('environ', Load(), lineno=144, col_offset=16), Index(Str('PROCESSOR_ARCHITEW6432', lineno=144, col_offset=24)), Store(), lineno=144, col_offset=16)], Str('bar', lineno=144, col_offset=52), lineno=144, col_offset=16), Assign([Attribute(Name('platform', Load(), lineno=145, col_offset=16), '_uname_cache', Store(), lineno=145, col_offset=16)], Name('None', Load(), lineno=145, col_offset=40), lineno=145, col_offset=16), Assign([Tuple([Name('system', Store(), lineno=146, col_offset=16), Name('node', Store(), lineno=146, col_offset=24), Name('release', Store(), lineno=146, col_offset=30), Name('version', Store(), lineno=146, col_offset=39), Name('machine', Store(), lineno=146, col_offset=48), Name('processor', Store(), lineno=146, col_offset=57)], Store(), lineno=146, col_offset=16)], Call(Attribute(Name('platform', Load(), lineno=146, col_offset=69), 'uname', Load(), lineno=146, col_offset=69), [], [], None, None, lineno=146, col_offset=69), lineno=146, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=16), 'assertEqual', Load(), lineno=147, col_offset=16), [Name('machine', Load(), lineno=147, col_offset=33), Str('bar', lineno=147, col_offset=42)], [], None, None, lineno=147, col_offset=16), lineno=147, col_offset=16)], lineno=137, col_offset=17)], [Assign([Attribute(Name('platform', Load(), lineno=149, col_offset=12), '_uname_cache', Store(), lineno=149, col_offset=12)], Name('None', Load(), lineno=149, col_offset=36), lineno=149, col_offset=12)], lineno=136, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=130, col_offset=5), 'skipUnless', Load(), lineno=130, col_offset=5), [Call(Attribute(Attribute(Name('sys', Load(), lineno=130, col_offset=25), 'platform', Load(), lineno=130, col_offset=25), 'startswith', Load(), lineno=130, col_offset=25), [Str('win', lineno=130, col_offset=49)], [], None, None, lineno=130, col_offset=25), Str('windows only test', lineno=130, col_offset=57)], [], None, None, lineno=130, col_offset=5)], lineno=130, col_offset=4), FunctionDef('test_java_ver', arguments([Name('self', Param(), lineno=151, col_offset=22)], None, None, []), [Assign([Name('res', Store(), lineno=152, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=152, col_offset=14), 'java_ver', Load(), lineno=152, col_offset=14), [], [], None, None, lineno=152, col_offset=14), lineno=152, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=153, col_offset=11), 'platform', Load(), lineno=153, col_offset=11), [Eq()], [Str('java', lineno=153, col_offset=27)], lineno=153, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'assertTrue', Load(), lineno=154, col_offset=12), [Call(Name('all', Load(), lineno=154, col_offset=28), [Name('res', Load(), lineno=154, col_offset=32)], [], None, None, lineno=154, col_offset=28)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], [], lineno=153, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('test_win32_ver', arguments([Name('self', Param(), lineno=156, col_offset=23)], None, None, []), [Assign([Name('res', Store(), lineno=157, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=157, col_offset=14), 'win32_ver', Load(), lineno=157, col_offset=14), [], [], None, None, lineno=157, col_offset=14), lineno=157, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('test_mac_ver', arguments([Name('self', Param(), lineno=159, col_offset=21)], None, None, []), [Assign([Name('res', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=160, col_offset=14), 'mac_ver', Load(), lineno=160, col_offset=14), [], [], None, None, lineno=160, col_offset=14), lineno=160, col_offset=8), TryExcept([Import([alias('gestalt', None)], lineno=163, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=164, col_offset=15), None, [Assign([Name('have_toolbox_glue', Store(), lineno=165, col_offset=12)], Name('False', Load(), lineno=165, col_offset=32), lineno=165, col_offset=12)], lineno=164, col_offset=8)], [Assign([Name('have_toolbox_glue', Store(), lineno=167, col_offset=12)], Name('True', Load(), lineno=167, col_offset=32), lineno=167, col_offset=12)], lineno=162, col_offset=8), If(BoolOp(And(), [Name('have_toolbox_glue', Load(), lineno=169, col_offset=11), Compare(Subscript(Call(Attribute(Name('platform', Load(), lineno=169, col_offset=33), 'uname', Load(), lineno=169, col_offset=33), [], [], None, None, lineno=169, col_offset=33), Index(Num(0, lineno=169, col_offset=50)), Load(), lineno=169, col_offset=33), [Eq()], [Str('Darwin', lineno=169, col_offset=56)], lineno=169, col_offset=33)], lineno=169, col_offset=11), [Assign([Name('fd', Store(), lineno=172, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=172, col_offset=17), 'popen', Load(), lineno=172, col_offset=17), [Str('sw_vers', lineno=172, col_offset=26), Str('r', lineno=172, col_offset=37)], [], None, None, lineno=172, col_offset=17), lineno=172, col_offset=12), Assign([Name('real_ver', Store(), lineno=173, col_offset=12)], Name('None', Load(), lineno=173, col_offset=23), lineno=173, col_offset=12), For(Name('ln', Store(), lineno=174, col_offset=16), Name('fd', Load(), lineno=174, col_offset=22), [If(Call(Attribute(Name('ln', Load(), lineno=175, col_offset=19), 'startswith', Load(), lineno=175, col_offset=19), [Str('ProductVersion:', lineno=175, col_offset=33)], [], None, None, lineno=175, col_offset=19), [Assign([Name('real_ver', Store(), lineno=176, col_offset=20)], Subscript(Call(Attribute(Call(Attribute(Name('ln', Load(), lineno=176, col_offset=31), 'strip', Load(), lineno=176, col_offset=31), [], [], None, None, lineno=176, col_offset=31), 'split', Load(), lineno=176, col_offset=31), [], [], None, None, lineno=176, col_offset=31), Index(Num(-1, lineno=176, col_offset=51)), Load(), lineno=176, col_offset=31), lineno=176, col_offset=20), Break( lineno=177, col_offset=20)], [], lineno=175, col_offset=16)], [], lineno=174, col_offset=12), Expr(Call(Attribute(Name('fd', Load(), lineno=178, col_offset=12), 'close', Load(), lineno=178, col_offset=12), [], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=12), 'assertFalse', Load(), lineno=179, col_offset=12), [Compare(Name('real_ver', Load(), lineno=179, col_offset=29), [Is()], [Name('None', Load(), lineno=179, col_offset=41)], lineno=179, col_offset=29)], [], None, None, lineno=179, col_offset=12), lineno=179, col_offset=12), Assign([Name('result_list', Store(), lineno=180, col_offset=12)], Call(Attribute(Subscript(Name('res', Load(), lineno=180, col_offset=26), Index(Num(0, lineno=180, col_offset=30)), Load(), lineno=180, col_offset=26), 'split', Load(), lineno=180, col_offset=26), [Str('.', lineno=180, col_offset=39)], [], None, None, lineno=180, col_offset=26), lineno=180, col_offset=12), Assign([Name('expect_list', Store(), lineno=181, col_offset=12)], Call(Attribute(Name('real_ver', Load(), lineno=181, col_offset=26), 'split', Load(), lineno=181, col_offset=26), [Str('.', lineno=181, col_offset=41)], [], None, None, lineno=181, col_offset=26), lineno=181, col_offset=12), Assign([Name('len_diff', Store(), lineno=182, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=182, col_offset=23), [Name('result_list', Load(), lineno=182, col_offset=27)], [], None, None, lineno=182, col_offset=23), Sub(), Call(Name('len', Load(), lineno=182, col_offset=42), [Name('expect_list', Load(), lineno=182, col_offset=46)], [], None, None, lineno=182, col_offset=42), lineno=182, col_offset=23), lineno=182, col_offset=12), If(Compare(Name('len_diff', Load(), lineno=184, col_offset=15), [Gt()], [Num(0, lineno=184, col_offset=26)], lineno=184, col_offset=15), [Expr(Call(Attribute(Name('expect_list', Load(), lineno=185, col_offset=16), 'extend', Load(), lineno=185, col_offset=16), [BinOp(List([Str('0', lineno=185, col_offset=36)], Load(), lineno=185, col_offset=35), Mult(), Name('len_diff', Load(), lineno=185, col_offset=43), lineno=185, col_offset=35)], [], None, None, lineno=185, col_offset=16), lineno=185, col_offset=16)], [], lineno=184, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=12), 'assertEqual', Load(), lineno=186, col_offset=12), [Name('result_list', Load(), lineno=186, col_offset=29), Name('expect_list', Load(), lineno=186, col_offset=42)], [], None, None, lineno=186, col_offset=12), lineno=186, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=12), 'assertEqual', Load(), lineno=191, col_offset=12), [Subscript(Name('res', Load(), lineno=191, col_offset=29), Index(Num(1, lineno=191, col_offset=33)), Load(), lineno=191, col_offset=29), Tuple([Str('', lineno=191, col_offset=38), Str('', lineno=191, col_offset=42), Str('', lineno=191, col_offset=46)], Load(), lineno=191, col_offset=38)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=193, col_offset=15), 'byteorder', Load(), lineno=193, col_offset=15), [Eq()], [Str('little', lineno=193, col_offset=32)], lineno=193, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=16), 'assertEqual', Load(), lineno=194, col_offset=16), [Subscript(Name('res', Load(), lineno=194, col_offset=33), Index(Num(2, lineno=194, col_offset=37)), Load(), lineno=194, col_offset=33), Str('i386', lineno=194, col_offset=41)], [], None, None, lineno=194, col_offset=16), lineno=194, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=16), 'assertEqual', Load(), lineno=196, col_offset=16), [Subscript(Name('res', Load(), lineno=196, col_offset=33), Index(Num(2, lineno=196, col_offset=37)), Load(), lineno=196, col_offset=33), Str('PowerPC', lineno=196, col_offset=41)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=16)], lineno=193, col_offset=12)], [], lineno=169, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('test_mac_ver_with_fork', arguments([Name('self', Param(), lineno=200, col_offset=31)], None, None, []), [Assign([Name('pid', Store(), lineno=205, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=205, col_offset=14), 'fork', Load(), lineno=205, col_offset=14), [], [], None, None, lineno=205, col_offset=14), lineno=205, col_offset=8), If(Compare(Name('pid', Load(), lineno=206, col_offset=11), [Eq()], [Num(0, lineno=206, col_offset=18)], lineno=206, col_offset=11), [Assign([Name('info', Store(), lineno=208, col_offset=12)], Call(Attribute(Name('platform', Load(), lineno=208, col_offset=19), 'mac_ver', Load(), lineno=208, col_offset=19), [], [], None, None, lineno=208, col_offset=19), lineno=208, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=209, col_offset=12), '_exit', Load(), lineno=209, col_offset=12), [Num(0, lineno=209, col_offset=21)], [], None, None, lineno=209, col_offset=12), lineno=209, col_offset=12)], [Assign([Tuple([Name('cpid', Store(), lineno=213, col_offset=12), Name('sts', Store(), lineno=213, col_offset=18)], Store(), lineno=213, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=213, col_offset=24), 'waitpid', Load(), lineno=213, col_offset=24), [Name('pid', Load(), lineno=213, col_offset=35), Num(0, lineno=213, col_offset=40)], [], None, None, lineno=213, col_offset=24), lineno=213, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=12), 'assertEqual', Load(), lineno=214, col_offset=12), [Name('cpid', Load(), lineno=214, col_offset=29), Name('pid', Load(), lineno=214, col_offset=35)], [], None, None, lineno=214, col_offset=12), lineno=214, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=12), 'assertEqual', Load(), lineno=215, col_offset=12), [Name('sts', Load(), lineno=215, col_offset=29), Num(0, lineno=215, col_offset=34)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12)], lineno=206, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=199, col_offset=5), 'skipUnless', Load(), lineno=199, col_offset=5), [Compare(Attribute(Name('sys', Load(), lineno=199, col_offset=25), 'platform', Load(), lineno=199, col_offset=25), [Eq()], [Str('darwin', lineno=199, col_offset=41)], lineno=199, col_offset=25), Str('OSX only test', lineno=199, col_offset=51)], [], None, None, lineno=199, col_offset=5)], lineno=199, col_offset=4), FunctionDef('test_dist', arguments([Name('self', Param(), lineno=217, col_offset=18)], None, None, []), [Assign([Name('res', Store(), lineno=218, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=218, col_offset=14), 'dist', Load(), lineno=218, col_offset=14), [], [], None, None, lineno=218, col_offset=14), lineno=218, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('test_libc_ver', arguments([Name('self', Param(), lineno=220, col_offset=22)], None, None, []), [Import([alias('os', None)], lineno=221, col_offset=8), If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=222, col_offset=11), 'path', Load(), lineno=222, col_offset=11), 'isdir', Load(), lineno=222, col_offset=11), [Attribute(Name('sys', Load(), lineno=222, col_offset=25), 'executable', Load(), lineno=222, col_offset=25)], [], None, None, lineno=222, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=223, col_offset=11), 'path', Load(), lineno=223, col_offset=11), 'exists', Load(), lineno=223, col_offset=11), [BinOp(Attribute(Name('sys', Load(), lineno=223, col_offset=26), 'executable', Load(), lineno=223, col_offset=26), Add(), Str('.exe', lineno=223, col_offset=41), lineno=223, col_offset=26)], [], None, None, lineno=223, col_offset=11)], lineno=222, col_offset=11), [Assign([Name('executable', Store(), lineno=225, col_offset=12)], BinOp(Attribute(Name('sys', Load(), lineno=225, col_offset=25), 'executable', Load(), lineno=225, col_offset=25), Add(), Str('.exe', lineno=225, col_offset=42), lineno=225, col_offset=25), lineno=225, col_offset=12)], [Assign([Name('executable', Store(), lineno=227, col_offset=12)], Attribute(Name('sys', Load(), lineno=227, col_offset=25), 'executable', Load(), lineno=227, col_offset=25), lineno=227, col_offset=12)], lineno=222, col_offset=8), Assign([Name('res', Store(), lineno=228, col_offset=8)], Call(Attribute(Name('platform', Load(), lineno=228, col_offset=14), 'libc_ver', Load(), lineno=228, col_offset=14), [Name('executable', Load(), lineno=228, col_offset=32)], [], None, None, lineno=228, col_offset=14), lineno=228, col_offset=8)], [], lineno=220, col_offset=4), FunctionDef('test_parse_release_file', arguments([Name('self', Param(), lineno=230, col_offset=32)], None, None, []), [For(Tuple([Name('input', Store(), lineno=232, col_offset=12), Name('output', Store(), lineno=232, col_offset=19)], Store(), lineno=232, col_offset=12), Tuple([Tuple([Str('SuSE Linux 9.3 (x86-64)', lineno=234, col_offset=13), Tuple([Str('SuSE Linux ', lineno=234, col_offset=41), Str('9.3', lineno=234, col_offset=56), Str('x86-64', lineno=234, col_offset=63)], Load(), lineno=234, col_offset=41)], Load(), lineno=234, col_offset=13), Tuple([Str('SUSE LINUX 10.1 (X86-64)', lineno=235, col_offset=13), Tuple([Str('SUSE LINUX ', lineno=235, col_offset=42), Str('10.1', lineno=235, col_offset=57), Str('X86-64', lineno=235, col_offset=65)], Load(), lineno=235, col_offset=42)], Load(), lineno=235, col_offset=13), Tuple([Str('SUSE LINUX 10.1 (i586)', lineno=236, col_offset=13), Tuple([Str('SUSE LINUX ', lineno=236, col_offset=40), Str('10.1', lineno=236, col_offset=55), Str('i586', lineno=236, col_offset=63)], Load(), lineno=236, col_offset=40)], Load(), lineno=236, col_offset=13), Tuple([Str('Fedora Core release 5 (Bordeaux)', lineno=237, col_offset=13), Tuple([Str('Fedora Core', lineno=237, col_offset=50), Str('5', lineno=237, col_offset=65), Str('Bordeaux', lineno=237, col_offset=70)], Load(), lineno=237, col_offset=50)], Load(), lineno=237, col_offset=13), Tuple([Str('Red Hat Linux release 8.0 (Psyche)', lineno=238, col_offset=13), Tuple([Str('Red Hat Linux', lineno=238, col_offset=52), Str('8.0', lineno=238, col_offset=69), Str('Psyche', lineno=238, col_offset=76)], Load(), lineno=238, col_offset=52)], Load(), lineno=238, col_offset=13), Tuple([Str('Red Hat Linux release 9 (Shrike)', lineno=239, col_offset=13), Tuple([Str('Red Hat Linux', lineno=239, col_offset=50), Str('9', lineno=239, col_offset=67), Str('Shrike', lineno=239, col_offset=72)], Load(), lineno=239, col_offset=50)], Load(), lineno=239, col_offset=13), Tuple([Str('Red Hat Enterprise Linux release 4 (Nahant)', lineno=240, col_offset=13), Tuple([Str('Red Hat Enterprise Linux', lineno=240, col_offset=61), Str('4', lineno=240, col_offset=89), Str('Nahant', lineno=240, col_offset=94)], Load(), lineno=240, col_offset=61)], Load(), lineno=240, col_offset=13), Tuple([Str('CentOS release 4', lineno=241, col_offset=13), Tuple([Str('CentOS', lineno=241, col_offset=34), Str('4', lineno=241, col_offset=44), Name('None', Load(), lineno=241, col_offset=49)], Load(), lineno=241, col_offset=34)], Load(), lineno=241, col_offset=13), Tuple([Str('Rocks release 4.2.1 (Cydonia)', lineno=242, col_offset=13), Tuple([Str('Rocks', lineno=242, col_offset=47), Str('4.2.1', lineno=242, col_offset=56), Str('Cydonia', lineno=242, col_offset=65)], Load(), lineno=242, col_offset=47)], Load(), lineno=242, col_offset=13), Tuple([Str('', lineno=243, col_offset=13), Tuple([Str('', lineno=243, col_offset=18), Str('', lineno=243, col_offset=22), Str('', lineno=243, col_offset=26)], Load(), lineno=243, col_offset=18)], Load(), lineno=243, col_offset=13)], Load(), lineno=234, col_offset=12), [Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=12), 'assertEqual', Load(), lineno=245, col_offset=12), [Call(Attribute(Name('platform', Load(), lineno=245, col_offset=29), '_parse_release_file', Load(), lineno=245, col_offset=29), [Name('input', Load(), lineno=245, col_offset=58)], [], None, None, lineno=245, col_offset=29), Name('output', Load(), lineno=245, col_offset=66)], [], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12)], [], lineno=232, col_offset=8)], [], lineno=230, col_offset=4)], [], lineno=9, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=249, col_offset=4), 'run_unittest', Load(), lineno=249, col_offset=4), [Name('PlatformTest', Load(), lineno=250, col_offset=8)], [], None, None, lineno=249, col_offset=4), lineno=249, col_offset=4)], [], lineno=248, col_offset=0), If(Compare(Name('__name__', Load(), lineno=253, col_offset=3), [Eq()], [Str('__main__', lineno=253, col_offset=15)], lineno=253, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=254, col_offset=4), [], [], None, None, lineno=254, col_offset=4), lineno=254, col_offset=4)], [], lineno=253, col_offset=0)])
