Module([Expr(Str("\nCreate and delete FILES_PER_THREAD temp files (via tempfile.TemporaryFile)\nin each of NUM_THREADS threads, recording the number of successes and\nfailures.  A failure is a bug in tempfile, and may be due to:\n\n+ Trying to create more than one tempfile with the same name.\n+ Trying to delete a tempfile that doesn't still exist.\n+ Something we've never seen before.\n\nBy default, NUM_THREADS == 20 and FILES_PER_THREAD == 50.  This is enough to\ncreate about 150 failures per run under Win98SE in 2.0, and runs pretty\nquickly. Guido reports needing to boost FILES_PER_THREAD to 500 before\nprovoking a 2.0 failure under Linux.\n", lineno=14, col_offset=-1), lineno=14, col_offset=-1), Assign([Name('NUM_THREADS', Store(), lineno=16, col_offset=0)], Num(20, lineno=16, col_offset=14), lineno=16, col_offset=0), Assign([Name('FILES_PER_THREAD', Store(), lineno=17, col_offset=0)], Num(50, lineno=17, col_offset=19), lineno=17, col_offset=0), Import([alias('tempfile', None)], lineno=19, col_offset=0), ImportFrom('test.test_support', [alias('threading_setup', None), alias('threading_cleanup', None), alias('run_unittest', None), alias('import_module', None)], 0, lineno=21, col_offset=0), Assign([Name('threading', Store(), lineno=22, col_offset=0)], Call(Name('import_module', Load(), lineno=22, col_offset=12), [Str('threading', lineno=22, col_offset=26)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=0), Import([alias('unittest', None)], lineno=23, col_offset=0), Import([alias('StringIO', None)], lineno=24, col_offset=0), ImportFrom('traceback', [alias('print_exc', None)], 0, lineno=25, col_offset=0), Assign([Name('startEvent', Store(), lineno=27, col_offset=0)], Call(Attribute(Name('threading', Load(), lineno=27, col_offset=13), 'Event', Load(), lineno=27, col_offset=13), [], [], None, None, lineno=27, col_offset=13), lineno=27, col_offset=0), ClassDef('TempFileGreedy', [Attribute(Name('threading', Load(), lineno=29, col_offset=21), 'Thread', Load(), lineno=29, col_offset=21)], [Assign([Name('error_count', Store(), lineno=30, col_offset=4)], Num(0, lineno=30, col_offset=18), lineno=30, col_offset=4), Assign([Name('ok_count', Store(), lineno=31, col_offset=4)], Num(0, lineno=31, col_offset=15), lineno=31, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=33, col_offset=12)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=34, col_offset=8), 'errors', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=34, col_offset=22), 'StringIO', Load(), lineno=34, col_offset=22), [], [], None, None, lineno=34, col_offset=22), lineno=34, col_offset=8), Expr(Call(Attribute(Name('startEvent', Load(), lineno=35, col_offset=8), 'wait', Load(), lineno=35, col_offset=8), [], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), For(Name('i', Store(), lineno=36, col_offset=12), Call(Name('range', Load(), lineno=36, col_offset=17), [Name('FILES_PER_THREAD', Load(), lineno=36, col_offset=23)], [], None, None, lineno=36, col_offset=17), [TryExcept([Assign([Name('f', Store(), lineno=38, col_offset=16)], Call(Attribute(Name('tempfile', Load(), lineno=38, col_offset=20), 'TemporaryFile', Load(), lineno=38, col_offset=20), [Str('w+b', lineno=38, col_offset=43)], [], None, None, lineno=38, col_offset=20), lineno=38, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=39, col_offset=16), 'close', Load(), lineno=39, col_offset=16), [], [], None, None, lineno=39, col_offset=16), lineno=39, col_offset=16)], [ExceptHandler(None, None, [AugAssign(Attribute(Name('self', Load(), lineno=41, col_offset=16), 'error_count', Store(), lineno=41, col_offset=16), Add(), Num(1, lineno=41, col_offset=36), lineno=41, col_offset=16), Expr(Call(Name('print_exc', Load(), lineno=42, col_offset=16), [], [keyword('file', Attribute(Name('self', Load(), lineno=42, col_offset=31), 'errors', Load(), lineno=42, col_offset=31))], None, None, lineno=42, col_offset=16), lineno=42, col_offset=16)], lineno=40, col_offset=12)], [AugAssign(Attribute(Name('self', Load(), lineno=44, col_offset=16), 'ok_count', Store(), lineno=44, col_offset=16), Add(), Num(1, lineno=44, col_offset=33), lineno=44, col_offset=16)], lineno=37, col_offset=12)], [], lineno=36, col_offset=8)], [], lineno=33, col_offset=4)], [], lineno=29, col_offset=0), ClassDef('ThreadedTempFileTest', [Attribute(Name('unittest', Load(), lineno=47, col_offset=27), 'TestCase', Load(), lineno=47, col_offset=27)], [FunctionDef('test_main', arguments([Name('self', Param(), lineno=48, col_offset=18)], None, None, []), [Assign([Name('threads', Store(), lineno=49, col_offset=8)], List([], Load(), lineno=49, col_offset=18), lineno=49, col_offset=8), Assign([Name('thread_info', Store(), lineno=50, col_offset=8)], Call(Name('threading_setup', Load(), lineno=50, col_offset=22), [], [], None, None, lineno=50, col_offset=22), lineno=50, col_offset=8), For(Name('i', Store(), lineno=52, col_offset=12), Call(Name('range', Load(), lineno=52, col_offset=17), [Name('NUM_THREADS', Load(), lineno=52, col_offset=23)], [], None, None, lineno=52, col_offset=17), [Assign([Name('t', Store(), lineno=53, col_offset=12)], Call(Name('TempFileGreedy', Load(), lineno=53, col_offset=16), [], [], None, None, lineno=53, col_offset=16), lineno=53, col_offset=12), Expr(Call(Attribute(Name('threads', Load(), lineno=54, col_offset=12), 'append', Load(), lineno=54, col_offset=12), [Name('t', Load(), lineno=54, col_offset=27)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12), Expr(Call(Attribute(Name('t', Load(), lineno=55, col_offset=12), 'start', Load(), lineno=55, col_offset=12), [], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [], lineno=52, col_offset=8), Expr(Call(Attribute(Name('startEvent', Load(), lineno=57, col_offset=8), 'set', Load(), lineno=57, col_offset=8), [], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Assign([Name('ok', Store(), lineno=59, col_offset=8)], Num(0, lineno=59, col_offset=13), lineno=59, col_offset=8), Assign([Name('errors', Store(), lineno=60, col_offset=8)], List([], Load(), lineno=60, col_offset=17), lineno=60, col_offset=8), For(Name('t', Store(), lineno=61, col_offset=12), Name('threads', Load(), lineno=61, col_offset=17), [Expr(Call(Attribute(Name('t', Load(), lineno=62, col_offset=12), 'join', Load(), lineno=62, col_offset=12), [], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12), AugAssign(Name('ok', Store(), lineno=63, col_offset=12), Add(), Attribute(Name('t', Load(), lineno=63, col_offset=18), 'ok_count', Load(), lineno=63, col_offset=18), lineno=63, col_offset=12), If(Attribute(Name('t', Load(), lineno=64, col_offset=15), 'error_count', Load(), lineno=64, col_offset=15), [Expr(Call(Attribute(Name('errors', Load(), lineno=65, col_offset=16), 'append', Load(), lineno=65, col_offset=16), [BinOp(Call(Name('str', Load(), lineno=65, col_offset=30), [Call(Attribute(Name('t', Load(), lineno=65, col_offset=34), 'getName', Load(), lineno=65, col_offset=34), [], [], None, None, lineno=65, col_offset=34)], [], None, None, lineno=65, col_offset=30), Add(), Call(Name('str', Load(), lineno=65, col_offset=49), [Call(Attribute(Attribute(Name('t', Load(), lineno=65, col_offset=53), 'errors', Load(), lineno=65, col_offset=53), 'getvalue', Load(), lineno=65, col_offset=53), [], [], None, None, lineno=65, col_offset=53)], [], None, None, lineno=65, col_offset=49), lineno=65, col_offset=30)], [], None, None, lineno=65, col_offset=16), lineno=65, col_offset=16)], [], lineno=64, col_offset=12)], [], lineno=61, col_offset=8), Expr(Call(Name('threading_cleanup', Load(), lineno=67, col_offset=8), [], [], Name('thread_info', Load(), lineno=67, col_offset=27), None, lineno=67, col_offset=8), lineno=67, col_offset=8), Assign([Name('msg', Store(), lineno=69, col_offset=8)], BinOp(Str('Errors: errors %d ok %d\n%s', lineno=69, col_offset=14), Mod(), Tuple([Call(Name('len', Load(), lineno=69, col_offset=47), [Name('errors', Load(), lineno=69, col_offset=51)], [], None, None, lineno=69, col_offset=47), Name('ok', Load(), lineno=69, col_offset=60), Call(Attribute(Str('\n', lineno=70, col_offset=12), 'join', Load(), lineno=70, col_offset=12), [Name('errors', Load(), lineno=70, col_offset=22)], [], None, None, lineno=70, col_offset=12)], Load(), lineno=69, col_offset=47), lineno=69, col_offset=14), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'assertEqual', Load(), lineno=71, col_offset=8), [Name('errors', Load(), lineno=71, col_offset=25), List([], Load(), lineno=71, col_offset=33), Name('msg', Load(), lineno=71, col_offset=37)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Name('ok', Load(), lineno=72, col_offset=25), BinOp(Name('NUM_THREADS', Load(), lineno=72, col_offset=29), Mult(), Name('FILES_PER_THREAD', Load(), lineno=72, col_offset=43), lineno=72, col_offset=29)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=48, col_offset=4)], [], lineno=47, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=75, col_offset=4), [Name('ThreadedTempFileTest', Load(), lineno=75, col_offset=17)], [], None, None, lineno=75, col_offset=4), lineno=75, col_offset=4)], [], lineno=74, col_offset=0), If(Compare(Name('__name__', Load(), lineno=77, col_offset=3), [Eq()], [Str('__main__', lineno=77, col_offset=15)], lineno=77, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=78, col_offset=4), [], [], None, None, lineno=78, col_offset=4), lineno=78, col_offset=4)], [], lineno=77, col_offset=0)])
