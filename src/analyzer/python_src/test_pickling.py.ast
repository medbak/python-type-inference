Module([Import([alias('unittest', None)], lineno=1, col_offset=0), Import([alias('pickle', None)], lineno=2, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=3, col_offset=0), Import([alias('_ctypes_test', None)], lineno=4, col_offset=0), Assign([Name('dll', Store(), lineno=5, col_offset=0)], Call(Name('CDLL', Load(), lineno=5, col_offset=6), [Attribute(Name('_ctypes_test', Load(), lineno=5, col_offset=11), '__file__', Load(), lineno=5, col_offset=11)], [], None, None, lineno=5, col_offset=6), lineno=5, col_offset=0), ClassDef('X', [Name('Structure', Load(), lineno=7, col_offset=8)], [Assign([Name('_fields_', Store(), lineno=8, col_offset=4)], List([Tuple([Str('a', lineno=8, col_offset=17), Name('c_int', Load(), lineno=8, col_offset=22)], Load(), lineno=8, col_offset=17), Tuple([Str('b', lineno=8, col_offset=31), Name('c_double', Load(), lineno=8, col_offset=36)], Load(), lineno=8, col_offset=31)], Load(), lineno=8, col_offset=15), lineno=8, col_offset=4), Assign([Name('init_called', Store(), lineno=9, col_offset=4)], Num(0, lineno=9, col_offset=18), lineno=9, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=10, col_offset=17)], 'args', 'kw', []), [AugAssign(Attribute(Name('X', Load(), lineno=11, col_offset=8), 'init_called', Store(), lineno=11, col_offset=8), Add(), Num(1, lineno=11, col_offset=25), lineno=11, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=12, col_offset=8), 'x', Store(), lineno=12, col_offset=8)], Num(42, lineno=12, col_offset=17), lineno=12, col_offset=8)], [], lineno=10, col_offset=4)], [], lineno=7, col_offset=0), ClassDef('Y', [Name('X', Load(), lineno=14, col_offset=8)], [Assign([Name('_fields_', Store(), lineno=15, col_offset=4)], List([Tuple([Str('str', lineno=15, col_offset=17), Name('c_char_p', Load(), lineno=15, col_offset=24)], Load(), lineno=15, col_offset=17)], Load(), lineno=15, col_offset=15), lineno=15, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('PickleTest', [Attribute(Name('unittest', Load(), lineno=17, col_offset=17), 'TestCase', Load(), lineno=17, col_offset=17)], [FunctionDef('dumps', arguments([Name('self', Param(), lineno=18, col_offset=14), Name('item', Param(), lineno=18, col_offset=20)], None, None, []), [Return(Call(Attribute(Name('pickle', Load(), lineno=19, col_offset=15), 'dumps', Load(), lineno=19, col_offset=15), [Name('item', Load(), lineno=19, col_offset=28)], [], None, None, lineno=19, col_offset=15), lineno=19, col_offset=8)], [], lineno=18, col_offset=4), FunctionDef('loads', arguments([Name('self', Param(), lineno=21, col_offset=14), Name('item', Param(), lineno=21, col_offset=20)], None, None, []), [Return(Call(Attribute(Name('pickle', Load(), lineno=22, col_offset=15), 'loads', Load(), lineno=22, col_offset=15), [Name('item', Load(), lineno=22, col_offset=28)], [], None, None, lineno=22, col_offset=15), lineno=22, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('test_simple', arguments([Name('self', Param(), lineno=24, col_offset=20)], None, None, []), [For(Name('src', Store(), lineno=25, col_offset=12), List([Call(Name('c_int', Load(), lineno=26, col_offset=12), [Num(42, lineno=26, col_offset=18)], [], None, None, lineno=26, col_offset=12), Call(Name('c_double', Load(), lineno=27, col_offset=12), [Num(3.14, lineno=27, col_offset=21)], [], None, None, lineno=27, col_offset=12)], Load(), lineno=25, col_offset=19), [Assign([Name('dst', Store(), lineno=29, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=29, col_offset=18), 'loads', Load(), lineno=29, col_offset=18), [Call(Attribute(Name('self', Load(), lineno=29, col_offset=29), 'dumps', Load(), lineno=29, col_offset=29), [Name('src', Load(), lineno=29, col_offset=40)], [], None, None, lineno=29, col_offset=29)], [], None, None, lineno=29, col_offset=18), lineno=29, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=12), 'assertEqual', Load(), lineno=30, col_offset=12), [Attribute(Name('src', Load(), lineno=30, col_offset=29), '__dict__', Load(), lineno=30, col_offset=29), Attribute(Name('dst', Load(), lineno=30, col_offset=43), '__dict__', Load(), lineno=30, col_offset=43)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=12), 'assertEqual', Load(), lineno=31, col_offset=12), [Call(Attribute(Call(Name('memoryview', Load(), lineno=31, col_offset=29), [Name('src', Load(), lineno=31, col_offset=40)], [], None, None, lineno=31, col_offset=29), 'tobytes', Load(), lineno=31, col_offset=29), [], [], None, None, lineno=31, col_offset=29), Call(Attribute(Call(Name('memoryview', Load(), lineno=32, col_offset=33), [Name('dst', Load(), lineno=32, col_offset=44)], [], None, None, lineno=32, col_offset=33), 'tobytes', Load(), lineno=32, col_offset=33), [], [], None, None, lineno=32, col_offset=33)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=12)], [], lineno=25, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('test_struct', arguments([Name('self', Param(), lineno=34, col_offset=20)], None, None, []), [Assign([Attribute(Name('X', Load(), lineno=35, col_offset=8), 'init_called', Store(), lineno=35, col_offset=8)], Num(0, lineno=35, col_offset=24), lineno=35, col_offset=8), Assign([Name('x', Store(), lineno=37, col_offset=8)], Call(Name('X', Load(), lineno=37, col_offset=12), [], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=38, col_offset=8), 'a', Store(), lineno=38, col_offset=8)], Num(42, lineno=38, col_offset=14), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [Attribute(Name('X', Load(), lineno=39, col_offset=25), 'init_called', Load(), lineno=39, col_offset=25), Num(1, lineno=39, col_offset=40)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Assign([Name('y', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=41, col_offset=12), 'loads', Load(), lineno=41, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=41, col_offset=23), 'dumps', Load(), lineno=41, col_offset=23), [Name('x', Load(), lineno=41, col_offset=34)], [], None, None, lineno=41, col_offset=23)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertEqual', Load(), lineno=44, col_offset=8), [Attribute(Name('X', Load(), lineno=44, col_offset=25), 'init_called', Load(), lineno=44, col_offset=25), Num(1, lineno=44, col_offset=40)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertEqual', Load(), lineno=48, col_offset=8), [Attribute(Name('y', Load(), lineno=48, col_offset=25), '__dict__', Load(), lineno=48, col_offset=25), Attribute(Name('x', Load(), lineno=48, col_offset=37), '__dict__', Load(), lineno=48, col_offset=37)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertEqual', Load(), lineno=49, col_offset=8), [Call(Attribute(Call(Name('memoryview', Load(), lineno=49, col_offset=25), [Name('y', Load(), lineno=49, col_offset=36)], [], None, None, lineno=49, col_offset=25), 'tobytes', Load(), lineno=49, col_offset=25), [], [], None, None, lineno=49, col_offset=25), Call(Attribute(Call(Name('memoryview', Load(), lineno=50, col_offset=29), [Name('x', Load(), lineno=50, col_offset=40)], [], None, None, lineno=50, col_offset=29), 'tobytes', Load(), lineno=50, col_offset=29), [], [], None, None, lineno=50, col_offset=29)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('test_unpickable', arguments([Name('self', Param(), lineno=52, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=55, col_offset=8), 'assertRaises', Load(), lineno=55, col_offset=8), [Name('ValueError', Load(), lineno=55, col_offset=26), Lambda(arguments([], None, None, []), Call(Attribute(Name('self', Load(), lineno=55, col_offset=46), 'dumps', Load(), lineno=55, col_offset=46), [Call(Name('Y', Load(), lineno=55, col_offset=57), [], [], None, None, lineno=55, col_offset=57)], [], None, None, lineno=55, col_offset=46), lineno=55, col_offset=38)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Assign([Name('prototype', Store(), lineno=57, col_offset=8)], Call(Name('CFUNCTYPE', Load(), lineno=57, col_offset=20), [Name('c_int', Load(), lineno=57, col_offset=30)], [], None, None, lineno=57, col_offset=20), lineno=57, col_offset=8), For(Name('item', Store(), lineno=59, col_offset=12), List([Call(Name('c_char_p', Load(), lineno=60, col_offset=12), [], [], None, None, lineno=60, col_offset=12), Call(Name('c_wchar_p', Load(), lineno=61, col_offset=12), [], [], None, None, lineno=61, col_offset=12), Call(Name('c_void_p', Load(), lineno=62, col_offset=12), [], [], None, None, lineno=62, col_offset=12), Call(Name('pointer', Load(), lineno=63, col_offset=12), [Call(Name('c_int', Load(), lineno=63, col_offset=20), [Num(42, lineno=63, col_offset=26)], [], None, None, lineno=63, col_offset=20)], [], None, None, lineno=63, col_offset=12), Attribute(Name('dll', Load(), lineno=64, col_offset=12), '_testfunc_p_p', Load(), lineno=64, col_offset=12), Call(Name('prototype', Load(), lineno=65, col_offset=12), [Lambda(arguments([], None, None, []), Num(42, lineno=65, col_offset=30), lineno=65, col_offset=22)], [], None, None, lineno=65, col_offset=12)], Load(), lineno=59, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=12), 'assertRaises', Load(), lineno=67, col_offset=12), [Name('ValueError', Load(), lineno=67, col_offset=30), Lambda(arguments([], None, None, []), Call(Attribute(Name('self', Load(), lineno=67, col_offset=50), 'dumps', Load(), lineno=67, col_offset=50), [Name('item', Load(), lineno=67, col_offset=61)], [], None, None, lineno=67, col_offset=50), lineno=67, col_offset=42)], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=12)], [], lineno=59, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('test_wchar', arguments([Name('self', Param(), lineno=69, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('pickle', Load(), lineno=70, col_offset=8), 'dumps', Load(), lineno=70, col_offset=8), [Call(Name('c_char', Load(), lineno=70, col_offset=21), [Str('x', lineno=70, col_offset=28)], [], None, None, lineno=70, col_offset=21)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Name('pickle', Load(), lineno=72, col_offset=8), 'dumps', Load(), lineno=72, col_offset=8), [Call(Name('c_wchar', Load(), lineno=72, col_offset=21), [Str(u'x', lineno=72, col_offset=29)], [], None, None, lineno=72, col_offset=21)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=69, col_offset=4)], [], lineno=17, col_offset=0), ClassDef('PickleTest_1', [Name('PickleTest', Load(), lineno=74, col_offset=19)], [FunctionDef('dumps', arguments([Name('self', Param(), lineno=75, col_offset=14), Name('item', Param(), lineno=75, col_offset=20)], None, None, []), [Return(Call(Attribute(Name('pickle', Load(), lineno=76, col_offset=15), 'dumps', Load(), lineno=76, col_offset=15), [Name('item', Load(), lineno=76, col_offset=28), Num(1, lineno=76, col_offset=34)], [], None, None, lineno=76, col_offset=15), lineno=76, col_offset=8)], [], lineno=75, col_offset=4)], [], lineno=74, col_offset=0), ClassDef('PickleTest_2', [Name('PickleTest', Load(), lineno=78, col_offset=19)], [FunctionDef('dumps', arguments([Name('self', Param(), lineno=79, col_offset=14), Name('item', Param(), lineno=79, col_offset=20)], None, None, []), [Return(Call(Attribute(Name('pickle', Load(), lineno=80, col_offset=15), 'dumps', Load(), lineno=80, col_offset=15), [Name('item', Load(), lineno=80, col_offset=28), Num(2, lineno=80, col_offset=34)], [], None, None, lineno=80, col_offset=15), lineno=80, col_offset=8)], [], lineno=79, col_offset=4)], [], lineno=78, col_offset=0), If(Compare(Name('__name__', Load(), lineno=82, col_offset=3), [Eq()], [Str('__main__', lineno=82, col_offset=15)], lineno=82, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=83, col_offset=4), 'main', Load(), lineno=83, col_offset=4), [], [], None, None, lineno=83, col_offset=4), lineno=83, col_offset=4)], [], lineno=82, col_offset=0)])
