Module([Expr(Str(" Python 'utf-8-sig' Codec\nThis work similar to UTF-8 with the following changes:\n\n* On encoding/writing a UTF-8 encoded BOM will be prepended/written as the\n  first three bytes.\n\n* On decoding/reading if the first three bytes are a UTF-8 encoded BOM, these\n  bytes will be skipped.\n", lineno=9, col_offset=-1), lineno=9, col_offset=-1), Import([alias('codecs', None)], lineno=10, col_offset=0), FunctionDef('encode', arguments([Name('input', Param(), lineno=14, col_offset=11), Name('errors', Param(), lineno=14, col_offset=18)], None, None, [Str('strict', lineno=14, col_offset=25)]), [Return(Tuple([BinOp(Attribute(Name('codecs', Load(), lineno=15, col_offset=12), 'BOM_UTF8', Load(), lineno=15, col_offset=12), Add(), Subscript(Call(Attribute(Name('codecs', Load(), lineno=15, col_offset=30), 'utf_8_encode', Load(), lineno=15, col_offset=30), [Name('input', Load(), lineno=15, col_offset=50), Name('errors', Load(), lineno=15, col_offset=57)], [], None, None, lineno=15, col_offset=30), Index(Num(0, lineno=15, col_offset=65)), Load(), lineno=15, col_offset=30), lineno=15, col_offset=12), Call(Name('len', Load(), lineno=15, col_offset=69), [Name('input', Load(), lineno=15, col_offset=73)], [], None, None, lineno=15, col_offset=69)], Load(), lineno=15, col_offset=12), lineno=15, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('decode', arguments([Name('input', Param(), lineno=17, col_offset=11), Name('errors', Param(), lineno=17, col_offset=18)], None, None, [Str('strict', lineno=17, col_offset=25)]), [Assign([Name('prefix', Store(), lineno=18, col_offset=4)], Num(0, lineno=18, col_offset=13), lineno=18, col_offset=4), If(Compare(Subscript(Name('input', Load(), lineno=19, col_offset=7), Slice(None, Num(3, lineno=19, col_offset=14), None), Load(), lineno=19, col_offset=7), [Eq()], [Attribute(Name('codecs', Load(), lineno=19, col_offset=20), 'BOM_UTF8', Load(), lineno=19, col_offset=20)], lineno=19, col_offset=7), [Assign([Name('input', Store(), lineno=20, col_offset=8)], Subscript(Name('input', Load(), lineno=20, col_offset=16), Slice(Num(3, lineno=20, col_offset=22), None, None), Load(), lineno=20, col_offset=16), lineno=20, col_offset=8), Assign([Name('prefix', Store(), lineno=21, col_offset=8)], Num(3, lineno=21, col_offset=17), lineno=21, col_offset=8)], [], lineno=19, col_offset=4), Assign([Tuple([Name('output', Store(), lineno=22, col_offset=5), Name('consumed', Store(), lineno=22, col_offset=13)], Store(), lineno=22, col_offset=5)], Call(Attribute(Name('codecs', Load(), lineno=22, col_offset=25), 'utf_8_decode', Load(), lineno=22, col_offset=25), [Name('input', Load(), lineno=22, col_offset=45), Name('errors', Load(), lineno=22, col_offset=52), Name('True', Load(), lineno=22, col_offset=60)], [], None, None, lineno=22, col_offset=25), lineno=22, col_offset=4), Return(Tuple([Name('output', Load(), lineno=23, col_offset=12), BinOp(Name('consumed', Load(), lineno=23, col_offset=20), Add(), Name('prefix', Load(), lineno=23, col_offset=29), lineno=23, col_offset=20)], Load(), lineno=23, col_offset=12), lineno=23, col_offset=4)], [], lineno=17, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=25, col_offset=25), 'IncrementalEncoder', Load(), lineno=25, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=26, col_offset=17), Name('errors', Param(), lineno=26, col_offset=23)], None, None, [Str('strict', lineno=26, col_offset=30)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=27, col_offset=8), 'IncrementalEncoder', Load(), lineno=27, col_offset=8), '__init__', Load(), lineno=27, col_offset=8), [Name('self', Load(), lineno=27, col_offset=43), Name('errors', Load(), lineno=27, col_offset=49)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'first', Store(), lineno=28, col_offset=8)], Num(1, lineno=28, col_offset=21), lineno=28, col_offset=8)], [], lineno=26, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=30, col_offset=15), Name('input', Param(), lineno=30, col_offset=21), Name('final', Param(), lineno=30, col_offset=28)], None, None, [Name('False', Load(), lineno=30, col_offset=34)]), [If(Attribute(Name('self', Load(), lineno=31, col_offset=11), 'first', Load(), lineno=31, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=32, col_offset=12), 'first', Store(), lineno=32, col_offset=12)], Num(0, lineno=32, col_offset=25), lineno=32, col_offset=12), Return(BinOp(Attribute(Name('codecs', Load(), lineno=33, col_offset=19), 'BOM_UTF8', Load(), lineno=33, col_offset=19), Add(), Subscript(Call(Attribute(Name('codecs', Load(), lineno=33, col_offset=37), 'utf_8_encode', Load(), lineno=33, col_offset=37), [Name('input', Load(), lineno=33, col_offset=57), Attribute(Name('self', Load(), lineno=33, col_offset=64), 'errors', Load(), lineno=33, col_offset=64)], [], None, None, lineno=33, col_offset=37), Index(Num(0, lineno=33, col_offset=77)), Load(), lineno=33, col_offset=37), lineno=33, col_offset=19), lineno=33, col_offset=12)], [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=35, col_offset=19), 'utf_8_encode', Load(), lineno=35, col_offset=19), [Name('input', Load(), lineno=35, col_offset=39), Attribute(Name('self', Load(), lineno=35, col_offset=46), 'errors', Load(), lineno=35, col_offset=46)], [], None, None, lineno=35, col_offset=19), Index(Num(0, lineno=35, col_offset=59)), Load(), lineno=35, col_offset=19), lineno=35, col_offset=12)], lineno=31, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=37, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=38, col_offset=8), 'IncrementalEncoder', Load(), lineno=38, col_offset=8), 'reset', Load(), lineno=38, col_offset=8), [Name('self', Load(), lineno=38, col_offset=40)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=8), 'first', Store(), lineno=39, col_offset=8)], Num(1, lineno=39, col_offset=21), lineno=39, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('getstate', arguments([Name('self', Param(), lineno=41, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=42, col_offset=15), 'first', Load(), lineno=42, col_offset=15), lineno=42, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('setstate', arguments([Name('self', Param(), lineno=44, col_offset=17), Name('state', Param(), lineno=44, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'first', Store(), lineno=45, col_offset=8)], Name('state', Load(), lineno=45, col_offset=21), lineno=45, col_offset=8)], [], lineno=44, col_offset=4)], [], lineno=25, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=47, col_offset=25), 'BufferedIncrementalDecoder', Load(), lineno=47, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=48, col_offset=17), Name('errors', Param(), lineno=48, col_offset=23)], None, None, [Str('strict', lineno=48, col_offset=30)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=49, col_offset=8), 'BufferedIncrementalDecoder', Load(), lineno=49, col_offset=8), '__init__', Load(), lineno=49, col_offset=8), [Name('self', Load(), lineno=49, col_offset=51), Name('errors', Load(), lineno=49, col_offset=57)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=50, col_offset=8), 'first', Store(), lineno=50, col_offset=8)], Name('True', Load(), lineno=50, col_offset=21), lineno=50, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('_buffer_decode', arguments([Name('self', Param(), lineno=52, col_offset=23), Name('input', Param(), lineno=52, col_offset=29), Name('errors', Param(), lineno=52, col_offset=36), Name('final', Param(), lineno=52, col_offset=44)], None, None, []), [If(Attribute(Name('self', Load(), lineno=53, col_offset=11), 'first', Load(), lineno=53, col_offset=11), [If(Compare(Call(Name('len', Load(), lineno=54, col_offset=15), [Name('input', Load(), lineno=54, col_offset=19)], [], None, None, lineno=54, col_offset=15), [Lt()], [Num(3, lineno=54, col_offset=28)], lineno=54, col_offset=15), [If(Call(Attribute(Attribute(Name('codecs', Load(), lineno=55, col_offset=19), 'BOM_UTF8', Load(), lineno=55, col_offset=19), 'startswith', Load(), lineno=55, col_offset=19), [Name('input', Load(), lineno=55, col_offset=46)], [], None, None, lineno=55, col_offset=19), [Return(Tuple([Str(u'', lineno=58, col_offset=28), Num(0, lineno=58, col_offset=33)], Load(), lineno=58, col_offset=28), lineno=58, col_offset=20)], [Assign([Attribute(Name('self', Load(), lineno=60, col_offset=20), 'first', Store(), lineno=60, col_offset=20)], Name('None', Load(), lineno=60, col_offset=33), lineno=60, col_offset=20)], lineno=55, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=62, col_offset=16), 'first', Store(), lineno=62, col_offset=16)], Name('None', Load(), lineno=62, col_offset=29), lineno=62, col_offset=16), If(Compare(Subscript(Name('input', Load(), lineno=63, col_offset=19), Slice(None, Num(3, lineno=63, col_offset=26), None), Load(), lineno=63, col_offset=19), [Eq()], [Attribute(Name('codecs', Load(), lineno=63, col_offset=32), 'BOM_UTF8', Load(), lineno=63, col_offset=32)], lineno=63, col_offset=19), [Assign([Tuple([Name('output', Store(), lineno=64, col_offset=21), Name('consumed', Store(), lineno=64, col_offset=29)], Store(), lineno=64, col_offset=21)], Call(Attribute(Name('codecs', Load(), lineno=64, col_offset=41), 'utf_8_decode', Load(), lineno=64, col_offset=41), [Subscript(Name('input', Load(), lineno=64, col_offset=61), Slice(Num(3, lineno=64, col_offset=67), None, None), Load(), lineno=64, col_offset=61), Name('errors', Load(), lineno=64, col_offset=72), Name('final', Load(), lineno=64, col_offset=80)], [], None, None, lineno=64, col_offset=41), lineno=64, col_offset=20), Return(Tuple([Name('output', Load(), lineno=65, col_offset=28), BinOp(Name('consumed', Load(), lineno=65, col_offset=36), Add(), Num(3, lineno=65, col_offset=45), lineno=65, col_offset=36)], Load(), lineno=65, col_offset=28), lineno=65, col_offset=20)], [], lineno=63, col_offset=16)], lineno=54, col_offset=12)], [], lineno=53, col_offset=8), Return(Call(Attribute(Name('codecs', Load(), lineno=66, col_offset=15), 'utf_8_decode', Load(), lineno=66, col_offset=15), [Name('input', Load(), lineno=66, col_offset=35), Name('errors', Load(), lineno=66, col_offset=42), Name('final', Load(), lineno=66, col_offset=50)], [], None, None, lineno=66, col_offset=15), lineno=66, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=68, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=69, col_offset=8), 'BufferedIncrementalDecoder', Load(), lineno=69, col_offset=8), 'reset', Load(), lineno=69, col_offset=8), [Name('self', Load(), lineno=69, col_offset=48)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=70, col_offset=8), 'first', Store(), lineno=70, col_offset=8)], Name('True', Load(), lineno=70, col_offset=21), lineno=70, col_offset=8)], [], lineno=68, col_offset=4)], [], lineno=47, col_offset=0), ClassDef('StreamWriter', [Attribute(Name('codecs', Load(), lineno=72, col_offset=19), 'StreamWriter', Load(), lineno=72, col_offset=19)], [FunctionDef('reset', arguments([Name('self', Param(), lineno=73, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=74, col_offset=8), 'StreamWriter', Load(), lineno=74, col_offset=8), 'reset', Load(), lineno=74, col_offset=8), [Name('self', Load(), lineno=74, col_offset=34)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), TryExcept([Delete([Attribute(Name('self', Load(), lineno=76, col_offset=16), 'encode', Del(), lineno=76, col_offset=16)], lineno=76, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=77, col_offset=15), None, [Pass( lineno=78, col_offset=12)], lineno=77, col_offset=8)], [], lineno=75, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=80, col_offset=15), Name('input', Param(), lineno=80, col_offset=21), Name('errors', Param(), lineno=80, col_offset=28)], None, None, [Str('strict', lineno=80, col_offset=35)]), [Assign([Attribute(Name('self', Load(), lineno=81, col_offset=8), 'encode', Store(), lineno=81, col_offset=8)], Attribute(Name('codecs', Load(), lineno=81, col_offset=22), 'utf_8_encode', Load(), lineno=81, col_offset=22), lineno=81, col_offset=8), Return(Call(Name('encode', Load(), lineno=82, col_offset=15), [Name('input', Load(), lineno=82, col_offset=22), Name('errors', Load(), lineno=82, col_offset=29)], [], None, None, lineno=82, col_offset=15), lineno=82, col_offset=8)], [], lineno=80, col_offset=4)], [], lineno=72, col_offset=0), ClassDef('StreamReader', [Attribute(Name('codecs', Load(), lineno=84, col_offset=19), 'StreamReader', Load(), lineno=84, col_offset=19)], [FunctionDef('reset', arguments([Name('self', Param(), lineno=85, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=86, col_offset=8), 'StreamReader', Load(), lineno=86, col_offset=8), 'reset', Load(), lineno=86, col_offset=8), [Name('self', Load(), lineno=86, col_offset=34)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), TryExcept([Delete([Attribute(Name('self', Load(), lineno=88, col_offset=16), 'decode', Del(), lineno=88, col_offset=16)], lineno=88, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=89, col_offset=15), None, [Pass( lineno=90, col_offset=12)], lineno=89, col_offset=8)], [], lineno=87, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=92, col_offset=15), Name('input', Param(), lineno=92, col_offset=21), Name('errors', Param(), lineno=92, col_offset=28)], None, None, [Str('strict', lineno=92, col_offset=35)]), [If(Compare(Call(Name('len', Load(), lineno=93, col_offset=11), [Name('input', Load(), lineno=93, col_offset=15)], [], None, None, lineno=93, col_offset=11), [Lt()], [Num(3, lineno=93, col_offset=24)], lineno=93, col_offset=11), [If(Call(Attribute(Attribute(Name('codecs', Load(), lineno=94, col_offset=15), 'BOM_UTF8', Load(), lineno=94, col_offset=15), 'startswith', Load(), lineno=94, col_offset=15), [Name('input', Load(), lineno=94, col_offset=42)], [], None, None, lineno=94, col_offset=15), [Return(Tuple([Str(u'', lineno=97, col_offset=24), Num(0, lineno=97, col_offset=29)], Load(), lineno=97, col_offset=24), lineno=97, col_offset=16)], [], lineno=94, col_offset=12)], [If(Compare(Subscript(Name('input', Load(), lineno=98, col_offset=13), Slice(None, Num(3, lineno=98, col_offset=20), None), Load(), lineno=98, col_offset=13), [Eq()], [Attribute(Name('codecs', Load(), lineno=98, col_offset=26), 'BOM_UTF8', Load(), lineno=98, col_offset=26)], lineno=98, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=99, col_offset=12), 'decode', Store(), lineno=99, col_offset=12)], Attribute(Name('codecs', Load(), lineno=99, col_offset=26), 'utf_8_decode', Load(), lineno=99, col_offset=26), lineno=99, col_offset=12), Assign([Tuple([Name('output', Store(), lineno=100, col_offset=13), Name('consumed', Store(), lineno=100, col_offset=21)], Store(), lineno=100, col_offset=13)], Call(Attribute(Name('codecs', Load(), lineno=100, col_offset=33), 'utf_8_decode', Load(), lineno=100, col_offset=33), [Subscript(Name('input', Load(), lineno=100, col_offset=53), Slice(Num(3, lineno=100, col_offset=59), None, None), Load(), lineno=100, col_offset=53), Name('errors', Load(), lineno=100, col_offset=63)], [], None, None, lineno=100, col_offset=33), lineno=100, col_offset=12), Return(Tuple([Name('output', Load(), lineno=101, col_offset=20), BinOp(Name('consumed', Load(), lineno=101, col_offset=28), Add(), Num(3, lineno=101, col_offset=37), lineno=101, col_offset=28)], Load(), lineno=101, col_offset=20), lineno=101, col_offset=12)], [], lineno=98, col_offset=13)], lineno=93, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=103, col_offset=8), 'decode', Store(), lineno=103, col_offset=8)], Attribute(Name('codecs', Load(), lineno=103, col_offset=22), 'utf_8_decode', Load(), lineno=103, col_offset=22), lineno=103, col_offset=8), Return(Call(Attribute(Name('codecs', Load(), lineno=104, col_offset=15), 'utf_8_decode', Load(), lineno=104, col_offset=15), [Name('input', Load(), lineno=104, col_offset=35), Name('errors', Load(), lineno=104, col_offset=42)], [], None, None, lineno=104, col_offset=15), lineno=104, col_offset=8)], [], lineno=92, col_offset=4)], [], lineno=84, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=109, col_offset=11), 'CodecInfo', Load(), lineno=109, col_offset=11), [], [keyword('name', Str('utf-8-sig', lineno=110, col_offset=13)), keyword('encode', Name('encode', Load(), lineno=111, col_offset=15)), keyword('decode', Name('decode', Load(), lineno=112, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=113, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=114, col_offset=27)), keyword('streamreader', Name('StreamReader', Load(), lineno=115, col_offset=21)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=116, col_offset=21))], None, None, lineno=109, col_offset=11), lineno=109, col_offset=4)], [], lineno=108, col_offset=0)])
