Module([Expr(Str('Basic tests for os.popen()\n\n  Particularly useful for platforms that fake popen.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('unittest', None)], lineno=7, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=8, col_offset=0), Import([alias('os', None), alias('sys', None)], lineno=9, col_offset=0), Assign([Name('python', Store(), lineno=16, col_offset=0)], Attribute(Name('sys', Load(), lineno=16, col_offset=9), 'executable', Load(), lineno=16, col_offset=9), lineno=16, col_offset=0), ClassDef('PopenTest', [Attribute(Name('unittest', Load(), lineno=18, col_offset=16), 'TestCase', Load(), lineno=18, col_offset=16)], [FunctionDef('_do_test_commandline', arguments([Name('self', Param(), lineno=19, col_offset=29), Name('cmdline', Param(), lineno=19, col_offset=35), Name('expected', Param(), lineno=19, col_offset=44)], None, None, []), [Assign([Name('cmd', Store(), lineno=20, col_offset=8)], BinOp(Str('%s -c "import sys;print sys.argv" %s', lineno=20, col_offset=14), Mod(), Tuple([Name('python', Load(), lineno=20, col_offset=56), Name('cmdline', Load(), lineno=20, col_offset=64)], Load(), lineno=20, col_offset=56), lineno=20, col_offset=14), lineno=20, col_offset=8), Assign([Name('data', Store(), lineno=21, col_offset=8)], BinOp(Call(Attribute(Call(Attribute(Name('os', Load(), lineno=21, col_offset=15), 'popen', Load(), lineno=21, col_offset=15), [Name('cmd', Load(), lineno=21, col_offset=24)], [], None, None, lineno=21, col_offset=15), 'read', Load(), lineno=21, col_offset=15), [], [], None, None, lineno=21, col_offset=15), Add(), Str('\n', lineno=21, col_offset=38), lineno=21, col_offset=15), lineno=21, col_offset=8), Assign([Name('got', Store(), lineno=22, col_offset=8)], Subscript(Call(Name('eval', Load(), lineno=22, col_offset=14), [Name('data', Load(), lineno=22, col_offset=19)], [], None, None, lineno=22, col_offset=14), Slice(Num(1, lineno=22, col_offset=25), None, None), Load(), lineno=22, col_offset=14), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Name('got', Load(), lineno=23, col_offset=25), Name('expected', Load(), lineno=23, col_offset=30)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('test_popen', arguments([Name('self', Param(), lineno=25, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertRaises', Load(), lineno=26, col_offset=8), [Name('TypeError', Load(), lineno=26, col_offset=26), Attribute(Name('os', Load(), lineno=26, col_offset=37), 'popen', Load(), lineno=26, col_offset=37)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), '_do_test_commandline', Load(), lineno=27, col_offset=8), [Str('foo bar', lineno=28, col_offset=12), List([Str('foo', lineno=29, col_offset=13), Str('bar', lineno=29, col_offset=20)], Load(), lineno=29, col_offset=12)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), '_do_test_commandline', Load(), lineno=31, col_offset=8), [Str('foo "spam and eggs" "silly walk"', lineno=32, col_offset=12), List([Str('foo', lineno=33, col_offset=13), Str('spam and eggs', lineno=33, col_offset=20), Str('silly walk', lineno=33, col_offset=37)], Load(), lineno=33, col_offset=12)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), '_do_test_commandline', Load(), lineno=35, col_offset=8), [Str('foo "a \\"quoted\\" arg" bar', lineno=36, col_offset=12), List([Str('foo', lineno=37, col_offset=13), Str('a "quoted" arg', lineno=37, col_offset=20), Str('bar', lineno=37, col_offset=38)], Load(), lineno=37, col_offset=12)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('test_support', Load(), lineno=39, col_offset=8), 'reap_children', Load(), lineno=39, col_offset=8), [], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('test_return_code', arguments([Name('self', Param(), lineno=41, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Call(Attribute(Call(Attribute(Name('os', Load(), lineno=42, col_offset=25), 'popen', Load(), lineno=42, col_offset=25), [Str('exit 0', lineno=42, col_offset=34)], [], None, None, lineno=42, col_offset=25), 'close', Load(), lineno=42, col_offset=25), [], [], None, None, lineno=42, col_offset=25), Name('None', Load(), lineno=42, col_offset=53)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), If(Compare(Attribute(Name('os', Load(), lineno=43, col_offset=11), 'name', Load(), lineno=43, col_offset=11), [Eq()], [Str('nt', lineno=43, col_offset=22)], lineno=43, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'assertEqual', Load(), lineno=44, col_offset=12), [Call(Attribute(Call(Attribute(Name('os', Load(), lineno=44, col_offset=29), 'popen', Load(), lineno=44, col_offset=29), [Str('exit 42', lineno=44, col_offset=38)], [], None, None, lineno=44, col_offset=29), 'close', Load(), lineno=44, col_offset=29), [], [], None, None, lineno=44, col_offset=29), Num(42, lineno=44, col_offset=58)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=12), 'assertEqual', Load(), lineno=46, col_offset=12), [Call(Attribute(Call(Attribute(Name('os', Load(), lineno=46, col_offset=29), 'popen', Load(), lineno=46, col_offset=29), [Str('exit 42', lineno=46, col_offset=38)], [], None, None, lineno=46, col_offset=29), 'close', Load(), lineno=46, col_offset=29), [], [], None, None, lineno=46, col_offset=29), BinOp(Num(42, lineno=46, col_offset=58), LShift(), Num(8, lineno=46, col_offset=64), lineno=46, col_offset=58)], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=12)], lineno=43, col_offset=8)], [], lineno=41, col_offset=4)], [], lineno=18, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=49, col_offset=4), 'run_unittest', Load(), lineno=49, col_offset=4), [Name('PopenTest', Load(), lineno=49, col_offset=30)], [], None, None, lineno=49, col_offset=4), lineno=49, col_offset=4)], [], lineno=48, col_offset=0), If(Compare(Name('__name__', Load(), lineno=51, col_offset=3), [Eq()], [Str('__main__', lineno=51, col_offset=15)], lineno=51, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=52, col_offset=4), [], [], None, None, lineno=52, col_offset=4), lineno=52, col_offset=4)], [], lineno=51, col_offset=0)])
