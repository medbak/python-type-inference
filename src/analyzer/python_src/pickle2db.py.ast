Module([Expr(Str("\nSynopsis: %(prog)s [-h|-b|-g|-r|-a|-d] [ picklefile ] dbfile\n\nRead the given picklefile as a series of key/value pairs and write to a new\ndatabase.  If the database already exists, any contents are deleted.  The\noptional flags indicate the type of the output database:\n\n    -a - open using anydbm\n    -b - open as bsddb btree file\n    -d - open as dbm file\n    -g - open as gdbm file\n    -h - open as bsddb hash file\n    -r - open as bsddb recno file\n\nThe default is hash.  If a pickle file is named it is opened for read\naccess.  If no pickle file is named, the pickle input is read from standard\ninput.\n\nNote that recno databases can only contain integer keys, so you can't dump a\nhash or btree database using db2pickle.py and reconstitute it to a recno\ndatabase with %(prog)s unless your keys are integers.\n\n", lineno=25, col_offset=-1), lineno=25, col_offset=-1), Import([alias('getopt', None)], lineno=27, col_offset=0), TryExcept([Import([alias('bsddb', None)], lineno=29, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=30, col_offset=7), None, [Assign([Name('bsddb', Store(), lineno=31, col_offset=4)], Name('None', Load(), lineno=31, col_offset=12), lineno=31, col_offset=4)], lineno=30, col_offset=0)], [], lineno=28, col_offset=0), TryExcept([Import([alias('dbm', None)], lineno=33, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=34, col_offset=7), None, [Assign([Name('dbm', Store(), lineno=35, col_offset=4)], Name('None', Load(), lineno=35, col_offset=10), lineno=35, col_offset=4)], lineno=34, col_offset=0)], [], lineno=32, col_offset=0), TryExcept([Import([alias('gdbm', None)], lineno=37, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=38, col_offset=7), None, [Assign([Name('gdbm', Store(), lineno=39, col_offset=4)], Name('None', Load(), lineno=39, col_offset=11), lineno=39, col_offset=4)], lineno=38, col_offset=0)], [], lineno=36, col_offset=0), TryExcept([Import([alias('anydbm', None)], lineno=41, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=42, col_offset=7), None, [Assign([Name('anydbm', Store(), lineno=43, col_offset=4)], Name('None', Load(), lineno=43, col_offset=13), lineno=43, col_offset=4)], lineno=42, col_offset=0)], [], lineno=40, col_offset=0), Import([alias('sys', None)], lineno=44, col_offset=0), TryExcept([Import([alias('cPickle', 'pickle')], lineno=46, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=47, col_offset=7), None, [Import([alias('pickle', None)], lineno=48, col_offset=4)], lineno=47, col_offset=0)], [], lineno=45, col_offset=0), Assign([Name('prog', Store(), lineno=50, col_offset=0)], Subscript(Attribute(Name('sys', Load(), lineno=50, col_offset=7), 'argv', Load(), lineno=50, col_offset=7), Index(Num(0, lineno=50, col_offset=16)), Load(), lineno=50, col_offset=7), lineno=50, col_offset=0), FunctionDef('usage', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=53, col_offset=4), 'stderr', Load(), lineno=53, col_offset=4), 'write', Load(), lineno=53, col_offset=4), [BinOp(Name('__doc__', Load(), lineno=53, col_offset=21), Mod(), Call(Name('globals', Load(), lineno=53, col_offset=31), [], [], None, None, lineno=53, col_offset=31), lineno=53, col_offset=21)], [], None, None, lineno=53, col_offset=4), lineno=53, col_offset=4)], [], lineno=52, col_offset=0), FunctionDef('main', arguments([Name('args', Param(), lineno=55, col_offset=9)], None, None, []), [TryExcept([Assign([Tuple([Name('opts', Store(), lineno=57, col_offset=8), Name('args', Store(), lineno=57, col_offset=14)], Store(), lineno=57, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=57, col_offset=21), 'getopt', Load(), lineno=57, col_offset=21), [Name('args', Load(), lineno=57, col_offset=35), Str('hbrdag', lineno=57, col_offset=41), List([Str('hash', lineno=58, col_offset=36), Str('btree', lineno=58, col_offset=44), Str('recno', lineno=58, col_offset=53), Str('dbm', lineno=58, col_offset=62), Str('anydbm', lineno=58, col_offset=69), Str('gdbm', lineno=59, col_offset=36)], Load(), lineno=58, col_offset=35)], [], None, None, lineno=57, col_offset=21), lineno=57, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=60, col_offset=11), 'error', Load(), lineno=60, col_offset=11), None, [Expr(Call(Name('usage', Load(), lineno=61, col_offset=8), [], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Return(Num(1, lineno=62, col_offset=15), lineno=62, col_offset=8)], lineno=60, col_offset=4)], [], lineno=56, col_offset=4), If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=64, col_offset=7), [Name('args', Load(), lineno=64, col_offset=11)], [], None, None, lineno=64, col_offset=7), [Eq()], [Num(0, lineno=64, col_offset=20)], lineno=64, col_offset=7), Compare(Call(Name('len', Load(), lineno=64, col_offset=25), [Name('args', Load(), lineno=64, col_offset=29)], [], None, None, lineno=64, col_offset=25), [Gt()], [Num(2, lineno=64, col_offset=37)], lineno=64, col_offset=25)], lineno=64, col_offset=7), [Expr(Call(Name('usage', Load(), lineno=65, col_offset=8), [], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Return(Num(1, lineno=66, col_offset=15), lineno=66, col_offset=8)], [If(Compare(Call(Name('len', Load(), lineno=67, col_offset=9), [Name('args', Load(), lineno=67, col_offset=13)], [], None, None, lineno=67, col_offset=9), [Eq()], [Num(1, lineno=67, col_offset=22)], lineno=67, col_offset=9), [Assign([Name('pfile', Store(), lineno=68, col_offset=8)], Attribute(Name('sys', Load(), lineno=68, col_offset=16), 'stdin', Load(), lineno=68, col_offset=16), lineno=68, col_offset=8), Assign([Name('dbfile', Store(), lineno=69, col_offset=8)], Subscript(Name('args', Load(), lineno=69, col_offset=17), Index(Num(0, lineno=69, col_offset=22)), Load(), lineno=69, col_offset=17), lineno=69, col_offset=8)], [TryExcept([Assign([Name('pfile', Store(), lineno=72, col_offset=12)], Call(Name('open', Load(), lineno=72, col_offset=20), [Subscript(Name('args', Load(), lineno=72, col_offset=25), Index(Num(0, lineno=72, col_offset=30)), Load(), lineno=72, col_offset=25), Str('rb', lineno=72, col_offset=34)], [], None, None, lineno=72, col_offset=20), lineno=72, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=73, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=74, col_offset=12), 'stderr', Load(), lineno=74, col_offset=12), 'write', Load(), lineno=74, col_offset=12), [BinOp(Str('Unable to open %s\n', lineno=74, col_offset=29), Mod(), Subscript(Name('args', Load(), lineno=74, col_offset=53), Index(Num(0, lineno=74, col_offset=58)), Load(), lineno=74, col_offset=53), lineno=74, col_offset=29)], [], None, None, lineno=74, col_offset=12), lineno=74, col_offset=12), Return(Num(1, lineno=75, col_offset=19), lineno=75, col_offset=12)], lineno=73, col_offset=8)], [], lineno=71, col_offset=8), Assign([Name('dbfile', Store(), lineno=76, col_offset=8)], Subscript(Name('args', Load(), lineno=76, col_offset=17), Index(Num(1, lineno=76, col_offset=22)), Load(), lineno=76, col_offset=17), lineno=76, col_offset=8)], lineno=67, col_offset=9)], lineno=64, col_offset=4), Assign([Name('dbopen', Store(), lineno=78, col_offset=4)], Name('None', Load(), lineno=78, col_offset=13), lineno=78, col_offset=4), For(Tuple([Name('opt', Store(), lineno=79, col_offset=8), Name('arg', Store(), lineno=79, col_offset=13)], Store(), lineno=79, col_offset=8), Name('opts', Load(), lineno=79, col_offset=20), [If(Compare(Name('opt', Load(), lineno=80, col_offset=11), [In()], [Tuple([Str('-h', lineno=80, col_offset=19), Str('--hash', lineno=80, col_offset=25)], Load(), lineno=80, col_offset=19)], lineno=80, col_offset=11), [TryExcept([Assign([Name('dbopen', Store(), lineno=82, col_offset=16)], Attribute(Name('bsddb', Load(), lineno=82, col_offset=25), 'hashopen', Load(), lineno=82, col_offset=25), lineno=82, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=83, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=84, col_offset=16), 'stderr', Load(), lineno=84, col_offset=16), 'write', Load(), lineno=84, col_offset=16), [Str('bsddb module unavailable.\n', lineno=84, col_offset=33)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=16), Return(Num(1, lineno=85, col_offset=23), lineno=85, col_offset=16)], lineno=83, col_offset=12)], [], lineno=81, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=86, col_offset=13), [In()], [Tuple([Str('-b', lineno=86, col_offset=21), Str('--btree', lineno=86, col_offset=27)], Load(), lineno=86, col_offset=21)], lineno=86, col_offset=13), [TryExcept([Assign([Name('dbopen', Store(), lineno=88, col_offset=16)], Attribute(Name('bsddb', Load(), lineno=88, col_offset=25), 'btopen', Load(), lineno=88, col_offset=25), lineno=88, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=89, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=90, col_offset=16), 'stderr', Load(), lineno=90, col_offset=16), 'write', Load(), lineno=90, col_offset=16), [Str('bsddb module unavailable.\n', lineno=90, col_offset=33)], [], None, None, lineno=90, col_offset=16), lineno=90, col_offset=16), Return(Num(1, lineno=91, col_offset=23), lineno=91, col_offset=16)], lineno=89, col_offset=12)], [], lineno=87, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=92, col_offset=13), [In()], [Tuple([Str('-r', lineno=92, col_offset=21), Str('--recno', lineno=92, col_offset=27)], Load(), lineno=92, col_offset=21)], lineno=92, col_offset=13), [TryExcept([Assign([Name('dbopen', Store(), lineno=94, col_offset=16)], Attribute(Name('bsddb', Load(), lineno=94, col_offset=25), 'rnopen', Load(), lineno=94, col_offset=25), lineno=94, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=95, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=96, col_offset=16), 'stderr', Load(), lineno=96, col_offset=16), 'write', Load(), lineno=96, col_offset=16), [Str('bsddb module unavailable.\n', lineno=96, col_offset=33)], [], None, None, lineno=96, col_offset=16), lineno=96, col_offset=16), Return(Num(1, lineno=97, col_offset=23), lineno=97, col_offset=16)], lineno=95, col_offset=12)], [], lineno=93, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=98, col_offset=13), [In()], [Tuple([Str('-a', lineno=98, col_offset=21), Str('--anydbm', lineno=98, col_offset=27)], Load(), lineno=98, col_offset=21)], lineno=98, col_offset=13), [TryExcept([Assign([Name('dbopen', Store(), lineno=100, col_offset=16)], Attribute(Name('anydbm', Load(), lineno=100, col_offset=25), 'open', Load(), lineno=100, col_offset=25), lineno=100, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=101, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=102, col_offset=16), 'stderr', Load(), lineno=102, col_offset=16), 'write', Load(), lineno=102, col_offset=16), [Str('anydbm module unavailable.\n', lineno=102, col_offset=33)], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=16), Return(Num(1, lineno=103, col_offset=23), lineno=103, col_offset=16)], lineno=101, col_offset=12)], [], lineno=99, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=104, col_offset=13), [In()], [Tuple([Str('-g', lineno=104, col_offset=21), Str('--gdbm', lineno=104, col_offset=27)], Load(), lineno=104, col_offset=21)], lineno=104, col_offset=13), [TryExcept([Assign([Name('dbopen', Store(), lineno=106, col_offset=16)], Attribute(Name('gdbm', Load(), lineno=106, col_offset=25), 'open', Load(), lineno=106, col_offset=25), lineno=106, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=107, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=108, col_offset=16), 'stderr', Load(), lineno=108, col_offset=16), 'write', Load(), lineno=108, col_offset=16), [Str('gdbm module unavailable.\n', lineno=108, col_offset=33)], [], None, None, lineno=108, col_offset=16), lineno=108, col_offset=16), Return(Num(1, lineno=109, col_offset=23), lineno=109, col_offset=16)], lineno=107, col_offset=12)], [], lineno=105, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=110, col_offset=13), [In()], [Tuple([Str('-d', lineno=110, col_offset=21), Str('--dbm', lineno=110, col_offset=27)], Load(), lineno=110, col_offset=21)], lineno=110, col_offset=13), [TryExcept([Assign([Name('dbopen', Store(), lineno=112, col_offset=16)], Attribute(Name('dbm', Load(), lineno=112, col_offset=25), 'open', Load(), lineno=112, col_offset=25), lineno=112, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=113, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=114, col_offset=16), 'stderr', Load(), lineno=114, col_offset=16), 'write', Load(), lineno=114, col_offset=16), [Str('dbm module unavailable.\n', lineno=114, col_offset=33)], [], None, None, lineno=114, col_offset=16), lineno=114, col_offset=16), Return(Num(1, lineno=115, col_offset=23), lineno=115, col_offset=16)], lineno=113, col_offset=12)], [], lineno=111, col_offset=12)], [], lineno=110, col_offset=13)], lineno=104, col_offset=13)], lineno=98, col_offset=13)], lineno=92, col_offset=13)], lineno=86, col_offset=13)], lineno=80, col_offset=8)], [], lineno=79, col_offset=4), If(Compare(Name('dbopen', Load(), lineno=116, col_offset=7), [Is()], [Name('None', Load(), lineno=116, col_offset=17)], lineno=116, col_offset=7), [If(Compare(Name('bsddb', Load(), lineno=117, col_offset=11), [Is()], [Name('None', Load(), lineno=117, col_offset=20)], lineno=117, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=118, col_offset=12), 'stderr', Load(), lineno=118, col_offset=12), 'write', Load(), lineno=118, col_offset=12), [Str('bsddb module unavailable - ', lineno=118, col_offset=29)], [], None, None, lineno=118, col_offset=12), lineno=118, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=119, col_offset=12), 'stderr', Load(), lineno=119, col_offset=12), 'write', Load(), lineno=119, col_offset=12), [Str('must specify dbtype.\n', lineno=119, col_offset=29)], [], None, None, lineno=119, col_offset=12), lineno=119, col_offset=12), Return(Num(1, lineno=120, col_offset=19), lineno=120, col_offset=12)], [Assign([Name('dbopen', Store(), lineno=122, col_offset=12)], Attribute(Name('bsddb', Load(), lineno=122, col_offset=21), 'hashopen', Load(), lineno=122, col_offset=21), lineno=122, col_offset=12)], lineno=117, col_offset=8)], [], lineno=116, col_offset=4), TryExcept([Assign([Name('db', Store(), lineno=125, col_offset=8)], Call(Name('dbopen', Load(), lineno=125, col_offset=13), [Name('dbfile', Load(), lineno=125, col_offset=20), Str('c', lineno=125, col_offset=28)], [], None, None, lineno=125, col_offset=13), lineno=125, col_offset=8)], [ExceptHandler(Attribute(Name('bsddb', Load(), lineno=126, col_offset=11), 'error', Load(), lineno=126, col_offset=11), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=127, col_offset=8), 'stderr', Load(), lineno=127, col_offset=8), 'write', Load(), lineno=127, col_offset=8), [BinOp(Str('Unable to open %s.  ', lineno=127, col_offset=25), Mod(), Name('dbfile', Load(), lineno=127, col_offset=50), lineno=127, col_offset=25)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=128, col_offset=8), 'stderr', Load(), lineno=128, col_offset=8), 'write', Load(), lineno=128, col_offset=8), [Str('Check for format or version mismatch.\n', lineno=128, col_offset=25)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Return(Num(1, lineno=129, col_offset=15), lineno=129, col_offset=8)], lineno=126, col_offset=4)], [For(Name('k', Store(), lineno=131, col_offset=12), Call(Attribute(Name('db', Load(), lineno=131, col_offset=17), 'keys', Load(), lineno=131, col_offset=17), [], [], None, None, lineno=131, col_offset=17), [Delete([Subscript(Name('db', Load(), lineno=132, col_offset=16), Index(Name('k', Load(), lineno=132, col_offset=19)), Del(), lineno=132, col_offset=16)], lineno=132, col_offset=12)], [], lineno=131, col_offset=8)], lineno=124, col_offset=4), While(Num(1, lineno=134, col_offset=10), [TryExcept([Assign([Tuple([Name('key', Store(), lineno=136, col_offset=13), Name('val', Store(), lineno=136, col_offset=18)], Store(), lineno=136, col_offset=13)], Call(Attribute(Name('pickle', Load(), lineno=136, col_offset=25), 'load', Load(), lineno=136, col_offset=25), [Name('pfile', Load(), lineno=136, col_offset=37)], [], None, None, lineno=136, col_offset=25), lineno=136, col_offset=12)], [ExceptHandler(Name('EOFError', Load(), lineno=137, col_offset=15), None, [Break( lineno=138, col_offset=12)], lineno=137, col_offset=8)], [], lineno=135, col_offset=8), Assign([Subscript(Name('db', Load(), lineno=139, col_offset=8), Index(Name('key', Load(), lineno=139, col_offset=11)), Store(), lineno=139, col_offset=8)], Name('val', Load(), lineno=139, col_offset=18), lineno=139, col_offset=8)], [], lineno=134, col_offset=4), Expr(Call(Attribute(Name('db', Load(), lineno=141, col_offset=4), 'close', Load(), lineno=141, col_offset=4), [], [], None, None, lineno=141, col_offset=4), lineno=141, col_offset=4), Expr(Call(Attribute(Name('pfile', Load(), lineno=142, col_offset=4), 'close', Load(), lineno=142, col_offset=4), [], [], None, None, lineno=142, col_offset=4), lineno=142, col_offset=4), Return(Num(0, lineno=144, col_offset=11), lineno=144, col_offset=4)], [], lineno=55, col_offset=0), If(Compare(Name('__name__', Load(), lineno=146, col_offset=3), [Eq()], [Str('__main__', lineno=146, col_offset=15)], lineno=146, col_offset=3), [Expr(Call(Attribute(Name('sys', Load(), lineno=147, col_offset=4), 'exit', Load(), lineno=147, col_offset=4), [Call(Name('main', Load(), lineno=147, col_offset=13), [Subscript(Attribute(Name('sys', Load(), lineno=147, col_offset=18), 'argv', Load(), lineno=147, col_offset=18), Slice(Num(1, lineno=147, col_offset=27), None, None), Load(), lineno=147, col_offset=18)], [], None, None, lineno=147, col_offset=13)], [], None, None, lineno=147, col_offset=4), lineno=147, col_offset=4)], [], lineno=146, col_offset=0)])
