Module([ImportFrom('test.test_support', [alias('run_unittest', None), alias('check_warnings', None)], 0, lineno=1, col_offset=0), Import([alias('cgi', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('tempfile', None)], lineno=5, col_offset=0), Import([alias('unittest', None)], lineno=6, col_offset=0), ClassDef('HackedSysModule', [], [Assign([Name('argv', Store(), lineno=11, col_offset=4)], List([], Load(), lineno=11, col_offset=11), lineno=11, col_offset=4), Assign([Name('stdin', Store(), lineno=12, col_offset=4)], Attribute(Name('sys', Load(), lineno=12, col_offset=12), 'stdin', Load(), lineno=12, col_offset=12), lineno=12, col_offset=4)], [], lineno=8, col_offset=0), Assign([Attribute(Name('cgi', Load(), lineno=14, col_offset=0), 'sys', Store(), lineno=14, col_offset=0)], Call(Name('HackedSysModule', Load(), lineno=14, col_offset=10), [], [], None, None, lineno=14, col_offset=10), lineno=14, col_offset=0), TryExcept([ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=17, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=18, col_offset=7), None, [ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=19, col_offset=4)], lineno=18, col_offset=0)], [], lineno=16, col_offset=0), ClassDef('ComparableException', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=22, col_offset=17), Name('err', Param(), lineno=22, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=23, col_offset=8), 'err', Store(), lineno=23, col_offset=8)], Name('err', Load(), lineno=23, col_offset=19), lineno=23, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=25, col_offset=16)], None, None, []), [Return(Call(Name('str', Load(), lineno=26, col_offset=15), [Attribute(Name('self', Load(), lineno=26, col_offset=19), 'err', Load(), lineno=26, col_offset=19)], [], None, None, lineno=26, col_offset=15), lineno=26, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=28, col_offset=16), Name('anExc', Param(), lineno=28, col_offset=22)], None, None, []), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=29, col_offset=15), [Name('anExc', Load(), lineno=29, col_offset=26), Name('Exception', Load(), lineno=29, col_offset=33)], [], None, None, lineno=29, col_offset=15), lineno=29, col_offset=11), [Return(Num(-1, lineno=30, col_offset=20), lineno=30, col_offset=12)], [], lineno=29, col_offset=8), Assign([Name('x', Store(), lineno=31, col_offset=8)], Call(Name('cmp', Load(), lineno=31, col_offset=12), [Attribute(Attribute(Name('self', Load(), lineno=31, col_offset=16), 'err', Load(), lineno=31, col_offset=16), '__class__', Load(), lineno=31, col_offset=16), Attribute(Name('anExc', Load(), lineno=31, col_offset=36), '__class__', Load(), lineno=31, col_offset=36)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=8), If(Compare(Name('x', Load(), lineno=32, col_offset=11), [NotEq()], [Num(0, lineno=32, col_offset=16)], lineno=32, col_offset=11), [Return(Name('x', Load(), lineno=33, col_offset=19), lineno=33, col_offset=12)], [], lineno=32, col_offset=8), Return(Call(Name('cmp', Load(), lineno=34, col_offset=15), [Attribute(Attribute(Name('self', Load(), lineno=34, col_offset=19), 'err', Load(), lineno=34, col_offset=19), 'args', Load(), lineno=34, col_offset=19), Attribute(Name('anExc', Load(), lineno=34, col_offset=34), 'args', Load(), lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=15), lineno=34, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=36, col_offset=20), Name('attr', Param(), lineno=36, col_offset=26)], None, None, []), [Return(Call(Name('getattr', Load(), lineno=37, col_offset=15), [Attribute(Name('self', Load(), lineno=37, col_offset=23), 'err', Load(), lineno=37, col_offset=23), Name('attr', Load(), lineno=37, col_offset=33)], [], None, None, lineno=37, col_offset=15), lineno=37, col_offset=8)], [], lineno=36, col_offset=4)], [], lineno=21, col_offset=0), FunctionDef('do_test', arguments([Name('buf', Param(), lineno=39, col_offset=12), Name('method', Param(), lineno=39, col_offset=17)], None, None, []), [Assign([Name('env', Store(), lineno=40, col_offset=4)], Dict([], [], lineno=40, col_offset=10), lineno=40, col_offset=4), If(Compare(Name('method', Load(), lineno=41, col_offset=7), [Eq()], [Str('GET', lineno=41, col_offset=17)], lineno=41, col_offset=7), [Assign([Name('fp', Store(), lineno=42, col_offset=8)], Name('None', Load(), lineno=42, col_offset=13), lineno=42, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=43, col_offset=8), Index(Str('REQUEST_METHOD', lineno=43, col_offset=12)), Store(), lineno=43, col_offset=8)], Str('GET', lineno=43, col_offset=32), lineno=43, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=44, col_offset=8), Index(Str('QUERY_STRING', lineno=44, col_offset=12)), Store(), lineno=44, col_offset=8)], Name('buf', Load(), lineno=44, col_offset=30), lineno=44, col_offset=8)], [If(Compare(Name('method', Load(), lineno=45, col_offset=9), [Eq()], [Str('POST', lineno=45, col_offset=19)], lineno=45, col_offset=9), [Assign([Name('fp', Store(), lineno=46, col_offset=8)], Call(Name('StringIO', Load(), lineno=46, col_offset=13), [Name('buf', Load(), lineno=46, col_offset=22)], [], None, None, lineno=46, col_offset=13), lineno=46, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=47, col_offset=8), Index(Str('REQUEST_METHOD', lineno=47, col_offset=12)), Store(), lineno=47, col_offset=8)], Str('POST', lineno=47, col_offset=32), lineno=47, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=48, col_offset=8), Index(Str('CONTENT_TYPE', lineno=48, col_offset=12)), Store(), lineno=48, col_offset=8)], Str('application/x-www-form-urlencoded', lineno=48, col_offset=30), lineno=48, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=49, col_offset=8), Index(Str('CONTENT_LENGTH', lineno=49, col_offset=12)), Store(), lineno=49, col_offset=8)], Call(Name('str', Load(), lineno=49, col_offset=32), [Call(Name('len', Load(), lineno=49, col_offset=36), [Name('buf', Load(), lineno=49, col_offset=40)], [], None, None, lineno=49, col_offset=36)], [], None, None, lineno=49, col_offset=32), lineno=49, col_offset=8)], [Raise(Name('ValueError', Load(), lineno=51, col_offset=14), BinOp(Str('unknown method: %s', lineno=51, col_offset=26), Mod(), Name('method', Load(), lineno=51, col_offset=49), lineno=51, col_offset=26), None, lineno=51, col_offset=8)], lineno=45, col_offset=9)], lineno=41, col_offset=4), TryExcept([Return(Call(Attribute(Name('cgi', Load(), lineno=53, col_offset=15), 'parse', Load(), lineno=53, col_offset=15), [Name('fp', Load(), lineno=53, col_offset=25), Name('env', Load(), lineno=53, col_offset=29)], [keyword('strict_parsing', Num(1, lineno=53, col_offset=49))], None, None, lineno=53, col_offset=15), lineno=53, col_offset=8)], [ExceptHandler(Name('StandardError', Load(), lineno=54, col_offset=11), Name('err', Store(), lineno=54, col_offset=26), [Return(Call(Name('ComparableException', Load(), lineno=55, col_offset=15), [Name('err', Load(), lineno=55, col_offset=35)], [], None, None, lineno=55, col_offset=15), lineno=55, col_offset=8)], lineno=54, col_offset=4)], [], lineno=52, col_offset=4)], [], lineno=39, col_offset=0), Assign([Name('parse_strict_test_cases', Store(), lineno=57, col_offset=0)], List([Tuple([Str('', lineno=58, col_offset=5), Call(Name('ValueError', Load(), lineno=58, col_offset=9), [Str("bad query field: ''", lineno=58, col_offset=20)], [], None, None, lineno=58, col_offset=9)], Load(), lineno=58, col_offset=5), Tuple([Str('&', lineno=59, col_offset=5), Call(Name('ValueError', Load(), lineno=59, col_offset=10), [Str("bad query field: ''", lineno=59, col_offset=21)], [], None, None, lineno=59, col_offset=10)], Load(), lineno=59, col_offset=5), Tuple([Str('&&', lineno=60, col_offset=5), Call(Name('ValueError', Load(), lineno=60, col_offset=11), [Str("bad query field: ''", lineno=60, col_offset=22)], [], None, None, lineno=60, col_offset=11)], Load(), lineno=60, col_offset=5), Tuple([Str(';', lineno=61, col_offset=5), Call(Name('ValueError', Load(), lineno=61, col_offset=10), [Str("bad query field: ''", lineno=61, col_offset=21)], [], None, None, lineno=61, col_offset=10)], Load(), lineno=61, col_offset=5), Tuple([Str(';&;', lineno=62, col_offset=5), Call(Name('ValueError', Load(), lineno=62, col_offset=12), [Str("bad query field: ''", lineno=62, col_offset=23)], [], None, None, lineno=62, col_offset=12)], Load(), lineno=62, col_offset=5), Tuple([Str('=', lineno=64, col_offset=5), Dict([], [], lineno=64, col_offset=10)], Load(), lineno=64, col_offset=5), Tuple([Str('=&=', lineno=65, col_offset=5), Dict([], [], lineno=65, col_offset=12)], Load(), lineno=65, col_offset=5), Tuple([Str('=;=', lineno=66, col_offset=5), Dict([], [], lineno=66, col_offset=12)], Load(), lineno=66, col_offset=5), Tuple([Str('=a', lineno=68, col_offset=5), Dict([Str('', lineno=68, col_offset=12)], [List([Str('a', lineno=68, col_offset=17)], Load(), lineno=68, col_offset=16)], lineno=68, col_offset=11)], Load(), lineno=68, col_offset=5), Tuple([Str('&=a', lineno=69, col_offset=5), Call(Name('ValueError', Load(), lineno=69, col_offset=12), [Str("bad query field: ''", lineno=69, col_offset=23)], [], None, None, lineno=69, col_offset=12)], Load(), lineno=69, col_offset=5), Tuple([Str('=a&', lineno=70, col_offset=5), Call(Name('ValueError', Load(), lineno=70, col_offset=12), [Str("bad query field: ''", lineno=70, col_offset=23)], [], None, None, lineno=70, col_offset=12)], Load(), lineno=70, col_offset=5), Tuple([Str('=&a', lineno=71, col_offset=5), Call(Name('ValueError', Load(), lineno=71, col_offset=12), [Str("bad query field: 'a'", lineno=71, col_offset=23)], [], None, None, lineno=71, col_offset=12)], Load(), lineno=71, col_offset=5), Tuple([Str('b=a', lineno=72, col_offset=5), Dict([Str('b', lineno=72, col_offset=13)], [List([Str('a', lineno=72, col_offset=19)], Load(), lineno=72, col_offset=18)], lineno=72, col_offset=12)], Load(), lineno=72, col_offset=5), Tuple([Str('b+=a', lineno=73, col_offset=5), Dict([Str('b ', lineno=73, col_offset=14)], [List([Str('a', lineno=73, col_offset=21)], Load(), lineno=73, col_offset=20)], lineno=73, col_offset=13)], Load(), lineno=73, col_offset=5), Tuple([Str('a=b=a', lineno=74, col_offset=5), Dict([Str('a', lineno=74, col_offset=15)], [List([Str('b=a', lineno=74, col_offset=21)], Load(), lineno=74, col_offset=20)], lineno=74, col_offset=14)], Load(), lineno=74, col_offset=5), Tuple([Str('a=+b=a', lineno=75, col_offset=5), Dict([Str('a', lineno=75, col_offset=16)], [List([Str(' b=a', lineno=75, col_offset=22)], Load(), lineno=75, col_offset=21)], lineno=75, col_offset=15)], Load(), lineno=75, col_offset=5), Tuple([Str('&b=a', lineno=76, col_offset=5), Call(Name('ValueError', Load(), lineno=76, col_offset=13), [Str("bad query field: ''", lineno=76, col_offset=24)], [], None, None, lineno=76, col_offset=13)], Load(), lineno=76, col_offset=5), Tuple([Str('b&=a', lineno=77, col_offset=5), Call(Name('ValueError', Load(), lineno=77, col_offset=13), [Str("bad query field: 'b'", lineno=77, col_offset=24)], [], None, None, lineno=77, col_offset=13)], Load(), lineno=77, col_offset=5), Tuple([Str('a=a+b&b=b+c', lineno=78, col_offset=5), Dict([Str('a', lineno=78, col_offset=21), Str('b', lineno=78, col_offset=35)], [List([Str('a b', lineno=78, col_offset=27)], Load(), lineno=78, col_offset=26), List([Str('b c', lineno=78, col_offset=41)], Load(), lineno=78, col_offset=40)], lineno=78, col_offset=20)], Load(), lineno=78, col_offset=5), Tuple([Str('a=a+b&a=b+a', lineno=79, col_offset=5), Dict([Str('a', lineno=79, col_offset=21)], [List([Str('a b', lineno=79, col_offset=27), Str('b a', lineno=79, col_offset=34)], Load(), lineno=79, col_offset=26)], lineno=79, col_offset=20)], Load(), lineno=79, col_offset=5), Tuple([Str('x=1&y=2.0&z=2-3.%2b0', lineno=80, col_offset=5), Dict([Str('x', lineno=80, col_offset=30), Str('y', lineno=80, col_offset=42), Str('z', lineno=80, col_offset=56)], [List([Str('1', lineno=80, col_offset=36)], Load(), lineno=80, col_offset=35), List([Str('2.0', lineno=80, col_offset=48)], Load(), lineno=80, col_offset=47), List([Str('2-3.+0', lineno=80, col_offset=62)], Load(), lineno=80, col_offset=61)], lineno=80, col_offset=29)], Load(), lineno=80, col_offset=5), Tuple([Str('x=1;y=2.0&z=2-3.%2b0', lineno=81, col_offset=5), Dict([Str('x', lineno=81, col_offset=30), Str('y', lineno=81, col_offset=42), Str('z', lineno=81, col_offset=56)], [List([Str('1', lineno=81, col_offset=36)], Load(), lineno=81, col_offset=35), List([Str('2.0', lineno=81, col_offset=48)], Load(), lineno=81, col_offset=47), List([Str('2-3.+0', lineno=81, col_offset=62)], Load(), lineno=81, col_offset=61)], lineno=81, col_offset=29)], Load(), lineno=81, col_offset=5), Tuple([Str('x=1;y=2.0;z=2-3.%2b0', lineno=82, col_offset=5), Dict([Str('x', lineno=82, col_offset=30), Str('y', lineno=82, col_offset=42), Str('z', lineno=82, col_offset=56)], [List([Str('1', lineno=82, col_offset=36)], Load(), lineno=82, col_offset=35), List([Str('2.0', lineno=82, col_offset=48)], Load(), lineno=82, col_offset=47), List([Str('2-3.+0', lineno=82, col_offset=62)], Load(), lineno=82, col_offset=61)], lineno=82, col_offset=29)], Load(), lineno=82, col_offset=5), Tuple([Str('Hbc5161168c542333633315dee1182227:key_store_seqid=400006&cuyer=r&view=bustomer&order_id=0bb2e248638833d48cb7fed300000f1b&expire=964546263&lobale=en-US&kid=130003.300038&ss=env', lineno=83, col_offset=5), Dict([Str('Hbc5161168c542333633315dee1182227:key_store_seqid', lineno=84, col_offset=6), Str('cuyer', lineno=85, col_offset=6), Str('expire', lineno=86, col_offset=6), Str('kid', lineno=87, col_offset=6), Str('lobale', lineno=88, col_offset=6), Str('order_id', lineno=89, col_offset=6), Str('ss', lineno=90, col_offset=6), Str('view', lineno=91, col_offset=6)], [List([Str('400006', lineno=84, col_offset=60)], Load(), lineno=84, col_offset=59), List([Str('r', lineno=85, col_offset=16)], Load(), lineno=85, col_offset=15), List([Str('964546263', lineno=86, col_offset=17)], Load(), lineno=86, col_offset=16), List([Str('130003.300038', lineno=87, col_offset=14)], Load(), lineno=87, col_offset=13), List([Str('en-US', lineno=88, col_offset=17)], Load(), lineno=88, col_offset=16), List([Str('0bb2e248638833d48cb7fed300000f1b', lineno=89, col_offset=19)], Load(), lineno=89, col_offset=18), List([Str('env', lineno=90, col_offset=13)], Load(), lineno=90, col_offset=12), List([Str('bustomer', lineno=91, col_offset=15)], Load(), lineno=91, col_offset=14)], lineno=84, col_offset=5)], Load(), lineno=83, col_offset=5), Tuple([Str('group_id=5470&set=custom&_assigned_to=31392&_status=1&_category=100&SUBMIT=Browse', lineno=94, col_offset=5), Dict([Str('SUBMIT', lineno=95, col_offset=6), Str('_assigned_to', lineno=96, col_offset=6), Str('_category', lineno=97, col_offset=6), Str('_status', lineno=98, col_offset=6), Str('group_id', lineno=99, col_offset=6), Str('set', lineno=100, col_offset=6)], [List([Str('Browse', lineno=95, col_offset=17)], Load(), lineno=95, col_offset=16), List([Str('31392', lineno=96, col_offset=23)], Load(), lineno=96, col_offset=22), List([Str('100', lineno=97, col_offset=20)], Load(), lineno=97, col_offset=19), List([Str('1', lineno=98, col_offset=18)], Load(), lineno=98, col_offset=17), List([Str('5470', lineno=99, col_offset=19)], Load(), lineno=99, col_offset=18), List([Str('custom', lineno=100, col_offset=14)], Load(), lineno=100, col_offset=13)], lineno=95, col_offset=5)], Load(), lineno=94, col_offset=5)], Load(), lineno=57, col_offset=26), lineno=57, col_offset=0), FunctionDef('first_elts', arguments([Name('list', Param(), lineno=104, col_offset=15)], None, None, []), [Return(Call(Name('map', Load(), lineno=105, col_offset=11), [Lambda(arguments([Name('x', Param(), lineno=105, col_offset=22)], None, None, []), Subscript(Name('x', Load(), lineno=105, col_offset=24), Index(Num(0, lineno=105, col_offset=26)), Load(), lineno=105, col_offset=24), lineno=105, col_offset=15), Name('list', Load(), lineno=105, col_offset=30)], [], None, None, lineno=105, col_offset=11), lineno=105, col_offset=4)], [], lineno=104, col_offset=0), FunctionDef('first_second_elts', arguments([Name('list', Param(), lineno=107, col_offset=22)], None, None, []), [Return(Call(Name('map', Load(), lineno=108, col_offset=11), [Lambda(arguments([Name('p', Param(), lineno=108, col_offset=22)], None, None, []), Tuple([Subscript(Name('p', Load(), lineno=108, col_offset=25), Index(Num(0, lineno=108, col_offset=27)), Load(), lineno=108, col_offset=25), Subscript(Subscript(Name('p', Load(), lineno=108, col_offset=31), Index(Num(1, lineno=108, col_offset=33)), Load(), lineno=108, col_offset=31), Index(Num(0, lineno=108, col_offset=36)), Load(), lineno=108, col_offset=31)], Load(), lineno=108, col_offset=25), lineno=108, col_offset=15), Name('list', Load(), lineno=108, col_offset=41)], [], None, None, lineno=108, col_offset=11), lineno=108, col_offset=4)], [], lineno=107, col_offset=0), FunctionDef('gen_result', arguments([Name('data', Param(), lineno=110, col_offset=15), Name('environ', Param(), lineno=110, col_offset=21)], None, None, []), [Assign([Name('fake_stdin', Store(), lineno=111, col_offset=4)], Call(Name('StringIO', Load(), lineno=111, col_offset=17), [Name('data', Load(), lineno=111, col_offset=26)], [], None, None, lineno=111, col_offset=17), lineno=111, col_offset=4), Expr(Call(Attribute(Name('fake_stdin', Load(), lineno=112, col_offset=4), 'seek', Load(), lineno=112, col_offset=4), [Num(0, lineno=112, col_offset=20)], [], None, None, lineno=112, col_offset=4), lineno=112, col_offset=4), Assign([Name('form', Store(), lineno=113, col_offset=4)], Call(Attribute(Name('cgi', Load(), lineno=113, col_offset=11), 'FieldStorage', Load(), lineno=113, col_offset=11), [], [keyword('fp', Name('fake_stdin', Load(), lineno=113, col_offset=31)), keyword('environ', Name('environ', Load(), lineno=113, col_offset=51))], None, None, lineno=113, col_offset=11), lineno=113, col_offset=4), Assign([Name('result', Store(), lineno=115, col_offset=4)], Dict([], [], lineno=115, col_offset=13), lineno=115, col_offset=4), For(Tuple([Name('k', Store(), lineno=116, col_offset=8), Name('v', Store(), lineno=116, col_offset=11)], Store(), lineno=116, col_offset=8), Call(Attribute(Call(Name('dict', Load(), lineno=116, col_offset=16), [Name('form', Load(), lineno=116, col_offset=21)], [], None, None, lineno=116, col_offset=16), 'items', Load(), lineno=116, col_offset=16), [], [], None, None, lineno=116, col_offset=16), [Assign([Subscript(Name('result', Load(), lineno=117, col_offset=8), Index(Name('k', Load(), lineno=117, col_offset=15)), Store(), lineno=117, col_offset=8)], BoolOp(Or(), [BoolOp(And(), [Call(Name('isinstance', Load(), lineno=117, col_offset=20), [Name('v', Load(), lineno=117, col_offset=31), Name('list', Load(), lineno=117, col_offset=34)], [], None, None, lineno=117, col_offset=20), Call(Attribute(Name('form', Load(), lineno=117, col_offset=44), 'getlist', Load(), lineno=117, col_offset=44), [Name('k', Load(), lineno=117, col_offset=57)], [], None, None, lineno=117, col_offset=44)], lineno=117, col_offset=20), Attribute(Name('v', Load(), lineno=117, col_offset=63), 'value', Load(), lineno=117, col_offset=63)], lineno=117, col_offset=20), lineno=117, col_offset=8)], [], lineno=116, col_offset=4), Return(Name('result', Load(), lineno=119, col_offset=11), lineno=119, col_offset=4)], [], lineno=110, col_offset=0), ClassDef('CgiTests', [Attribute(Name('unittest', Load(), lineno=121, col_offset=15), 'TestCase', Load(), lineno=121, col_offset=15)], [FunctionDef('test_strict', arguments([Name('self', Param(), lineno=123, col_offset=20)], None, None, []), [For(Tuple([Name('orig', Store(), lineno=124, col_offset=12), Name('expect', Store(), lineno=124, col_offset=18)], Store(), lineno=124, col_offset=12), Name('parse_strict_test_cases', Load(), lineno=124, col_offset=28), [Assign([Name('d', Store(), lineno=126, col_offset=12)], Call(Name('do_test', Load(), lineno=126, col_offset=16), [Name('orig', Load(), lineno=126, col_offset=24), Str('GET', lineno=126, col_offset=30)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=12), 'assertEqual', Load(), lineno=127, col_offset=12), [Name('d', Load(), lineno=127, col_offset=29), Name('expect', Load(), lineno=127, col_offset=32), BinOp(Str('Error parsing %s', lineno=127, col_offset=40), Mod(), Call(Name('repr', Load(), lineno=127, col_offset=61), [Name('orig', Load(), lineno=127, col_offset=66)], [], None, None, lineno=127, col_offset=61), lineno=127, col_offset=40)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12), Assign([Name('d', Store(), lineno=128, col_offset=12)], Call(Name('do_test', Load(), lineno=128, col_offset=16), [Name('orig', Load(), lineno=128, col_offset=24), Str('POST', lineno=128, col_offset=30)], [], None, None, lineno=128, col_offset=16), lineno=128, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=12), 'assertEqual', Load(), lineno=129, col_offset=12), [Name('d', Load(), lineno=129, col_offset=29), Name('expect', Load(), lineno=129, col_offset=32), BinOp(Str('Error parsing %s', lineno=129, col_offset=40), Mod(), Call(Name('repr', Load(), lineno=129, col_offset=61), [Name('orig', Load(), lineno=129, col_offset=66)], [], None, None, lineno=129, col_offset=61), lineno=129, col_offset=40)], [], None, None, lineno=129, col_offset=12), lineno=129, col_offset=12), Assign([Name('env', Store(), lineno=131, col_offset=12)], Dict([Str('QUERY_STRING', lineno=131, col_offset=19)], [Name('orig', Load(), lineno=131, col_offset=35)], lineno=131, col_offset=18), lineno=131, col_offset=12), Assign([Name('fcd', Store(), lineno=132, col_offset=12)], Call(Attribute(Name('cgi', Load(), lineno=132, col_offset=18), 'FormContentDict', Load(), lineno=132, col_offset=18), [Name('env', Load(), lineno=132, col_offset=38)], [], None, None, lineno=132, col_offset=18), lineno=132, col_offset=12), Assign([Name('sd', Store(), lineno=133, col_offset=12)], Call(Attribute(Name('cgi', Load(), lineno=133, col_offset=17), 'SvFormContentDict', Load(), lineno=133, col_offset=17), [Name('env', Load(), lineno=133, col_offset=39)], [], None, None, lineno=133, col_offset=17), lineno=133, col_offset=12), Assign([Name('fs', Store(), lineno=134, col_offset=12)], Call(Attribute(Name('cgi', Load(), lineno=134, col_offset=17), 'FieldStorage', Load(), lineno=134, col_offset=17), [], [keyword('environ', Name('env', Load(), lineno=134, col_offset=42))], None, None, lineno=134, col_offset=17), lineno=134, col_offset=12), If(Call(Name('isinstance', Load(), lineno=135, col_offset=15), [Name('expect', Load(), lineno=135, col_offset=26), Name('dict', Load(), lineno=135, col_offset=34)], [], None, None, lineno=135, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=16), 'assertEqual', Load(), lineno=137, col_offset=16), [Call(Name('len', Load(), lineno=137, col_offset=33), [Name('expect', Load(), lineno=137, col_offset=37)], [], None, None, lineno=137, col_offset=33), Call(Name('len', Load(), lineno=137, col_offset=46), [Name('fcd', Load(), lineno=137, col_offset=50)], [], None, None, lineno=137, col_offset=46)], [], None, None, lineno=137, col_offset=16), lineno=137, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=16), 'assertItemsEqual', Load(), lineno=138, col_offset=16), [Call(Attribute(Name('expect', Load(), lineno=138, col_offset=38), 'keys', Load(), lineno=138, col_offset=38), [], [], None, None, lineno=138, col_offset=38), Call(Attribute(Name('fcd', Load(), lineno=138, col_offset=53), 'keys', Load(), lineno=138, col_offset=53), [], [], None, None, lineno=138, col_offset=53)], [], None, None, lineno=138, col_offset=16), lineno=138, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=16), 'assertItemsEqual', Load(), lineno=139, col_offset=16), [Call(Attribute(Name('expect', Load(), lineno=139, col_offset=38), 'values', Load(), lineno=139, col_offset=38), [], [], None, None, lineno=139, col_offset=38), Call(Attribute(Name('fcd', Load(), lineno=139, col_offset=55), 'values', Load(), lineno=139, col_offset=55), [], [], None, None, lineno=139, col_offset=55)], [], None, None, lineno=139, col_offset=16), lineno=139, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=16), 'assertItemsEqual', Load(), lineno=140, col_offset=16), [Call(Attribute(Name('expect', Load(), lineno=140, col_offset=38), 'items', Load(), lineno=140, col_offset=38), [], [], None, None, lineno=140, col_offset=38), Call(Attribute(Name('fcd', Load(), lineno=140, col_offset=54), 'items', Load(), lineno=140, col_offset=54), [], [], None, None, lineno=140, col_offset=54)], [], None, None, lineno=140, col_offset=16), lineno=140, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=16), 'assertEqual', Load(), lineno=141, col_offset=16), [Call(Attribute(Name('fcd', Load(), lineno=141, col_offset=33), 'get', Load(), lineno=141, col_offset=33), [Str('nonexistent field', lineno=141, col_offset=41), Str('default', lineno=141, col_offset=62)], [], None, None, lineno=141, col_offset=33), Str('default', lineno=141, col_offset=74)], [], None, None, lineno=141, col_offset=16), lineno=141, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=16), 'assertEqual', Load(), lineno=142, col_offset=16), [Call(Name('len', Load(), lineno=142, col_offset=33), [Name('sd', Load(), lineno=142, col_offset=37)], [], None, None, lineno=142, col_offset=33), Call(Name('len', Load(), lineno=142, col_offset=42), [Name('fs', Load(), lineno=142, col_offset=46)], [], None, None, lineno=142, col_offset=42)], [], None, None, lineno=142, col_offset=16), lineno=142, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=16), 'assertItemsEqual', Load(), lineno=143, col_offset=16), [Call(Attribute(Name('sd', Load(), lineno=143, col_offset=38), 'keys', Load(), lineno=143, col_offset=38), [], [], None, None, lineno=143, col_offset=38), Call(Attribute(Name('fs', Load(), lineno=143, col_offset=49), 'keys', Load(), lineno=143, col_offset=49), [], [], None, None, lineno=143, col_offset=49)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=16), 'assertEqual', Load(), lineno=144, col_offset=16), [Call(Attribute(Name('fs', Load(), lineno=144, col_offset=33), 'getvalue', Load(), lineno=144, col_offset=33), [Str('nonexistent field', lineno=144, col_offset=45), Str('default', lineno=144, col_offset=66)], [], None, None, lineno=144, col_offset=33), Str('default', lineno=144, col_offset=78)], [], None, None, lineno=144, col_offset=16), lineno=144, col_offset=16), For(Name('key', Store(), lineno=146, col_offset=20), Call(Attribute(Name('expect', Load(), lineno=146, col_offset=27), 'keys', Load(), lineno=146, col_offset=27), [], [], None, None, lineno=146, col_offset=27), [Assign([Name('expect_val', Store(), lineno=147, col_offset=20)], Subscript(Name('expect', Load(), lineno=147, col_offset=33), Index(Name('key', Load(), lineno=147, col_offset=40)), Load(), lineno=147, col_offset=33), lineno=147, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=20), 'assertTrue', Load(), lineno=148, col_offset=20), [Call(Attribute(Name('fcd', Load(), lineno=148, col_offset=36), 'has_key', Load(), lineno=148, col_offset=36), [Name('key', Load(), lineno=148, col_offset=48)], [], None, None, lineno=148, col_offset=36)], [], None, None, lineno=148, col_offset=20), lineno=148, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=20), 'assertItemsEqual', Load(), lineno=149, col_offset=20), [Subscript(Name('fcd', Load(), lineno=149, col_offset=42), Index(Name('key', Load(), lineno=149, col_offset=46)), Load(), lineno=149, col_offset=42), Subscript(Name('expect', Load(), lineno=149, col_offset=52), Index(Name('key', Load(), lineno=149, col_offset=59)), Load(), lineno=149, col_offset=52)], [], None, None, lineno=149, col_offset=20), lineno=149, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=20), 'assertEqual', Load(), lineno=150, col_offset=20), [Call(Attribute(Name('fcd', Load(), lineno=150, col_offset=37), 'get', Load(), lineno=150, col_offset=37), [Name('key', Load(), lineno=150, col_offset=45), Str('default', lineno=150, col_offset=50)], [], None, None, lineno=150, col_offset=37), Subscript(Name('fcd', Load(), lineno=150, col_offset=62), Index(Name('key', Load(), lineno=150, col_offset=66)), Load(), lineno=150, col_offset=62)], [], None, None, lineno=150, col_offset=20), lineno=150, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=20), 'assertTrue', Load(), lineno=151, col_offset=20), [Call(Attribute(Name('fs', Load(), lineno=151, col_offset=36), 'has_key', Load(), lineno=151, col_offset=36), [Name('key', Load(), lineno=151, col_offset=47)], [], None, None, lineno=151, col_offset=36)], [], None, None, lineno=151, col_offset=20), lineno=151, col_offset=20), If(Compare(Call(Name('len', Load(), lineno=152, col_offset=23), [Name('expect_val', Load(), lineno=152, col_offset=27)], [], None, None, lineno=152, col_offset=23), [Gt()], [Num(1, lineno=152, col_offset=41)], lineno=152, col_offset=23), [Assign([Name('single_value', Store(), lineno=153, col_offset=24)], Num(0, lineno=153, col_offset=39), lineno=153, col_offset=24)], [Assign([Name('single_value', Store(), lineno=155, col_offset=24)], Num(1, lineno=155, col_offset=39), lineno=155, col_offset=24)], lineno=152, col_offset=20), TryExcept([Assign([Name('val', Store(), lineno=157, col_offset=24)], Subscript(Name('sd', Load(), lineno=157, col_offset=30), Index(Name('key', Load(), lineno=157, col_offset=33)), Load(), lineno=157, col_offset=30), lineno=157, col_offset=24)], [ExceptHandler(Name('IndexError', Load(), lineno=158, col_offset=27), None, [Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=24), 'assertFalse', Load(), lineno=159, col_offset=24), [Name('single_value', Load(), lineno=159, col_offset=41)], [], None, None, lineno=159, col_offset=24), lineno=159, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=24), 'assertEqual', Load(), lineno=160, col_offset=24), [Call(Attribute(Name('fs', Load(), lineno=160, col_offset=41), 'getvalue', Load(), lineno=160, col_offset=41), [Name('key', Load(), lineno=160, col_offset=53)], [], None, None, lineno=160, col_offset=41), Name('expect_val', Load(), lineno=160, col_offset=59)], [], None, None, lineno=160, col_offset=24), lineno=160, col_offset=24)], lineno=158, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=24), 'assertTrue', Load(), lineno=162, col_offset=24), [Name('single_value', Load(), lineno=162, col_offset=40)], [], None, None, lineno=162, col_offset=24), lineno=162, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=24), 'assertEqual', Load(), lineno=163, col_offset=24), [Name('val', Load(), lineno=163, col_offset=41), Subscript(Name('expect_val', Load(), lineno=163, col_offset=46), Index(Num(0, lineno=163, col_offset=57)), Load(), lineno=163, col_offset=46)], [], None, None, lineno=163, col_offset=24), lineno=163, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=24), 'assertEqual', Load(), lineno=164, col_offset=24), [Call(Attribute(Name('fs', Load(), lineno=164, col_offset=41), 'getvalue', Load(), lineno=164, col_offset=41), [Name('key', Load(), lineno=164, col_offset=53)], [], None, None, lineno=164, col_offset=41), Subscript(Name('expect_val', Load(), lineno=164, col_offset=59), Index(Num(0, lineno=164, col_offset=70)), Load(), lineno=164, col_offset=59)], [], None, None, lineno=164, col_offset=24), lineno=164, col_offset=24)], lineno=156, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=20), 'assertItemsEqual', Load(), lineno=165, col_offset=20), [Call(Attribute(Name('sd', Load(), lineno=165, col_offset=42), 'getlist', Load(), lineno=165, col_offset=42), [Name('key', Load(), lineno=165, col_offset=53)], [], None, None, lineno=165, col_offset=42), Name('expect_val', Load(), lineno=165, col_offset=59)], [], None, None, lineno=165, col_offset=20), lineno=165, col_offset=20), If(Name('single_value', Load(), lineno=166, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=24), 'assertItemsEqual', Load(), lineno=167, col_offset=24), [Call(Attribute(Name('sd', Load(), lineno=167, col_offset=46), 'values', Load(), lineno=167, col_offset=46), [], [], None, None, lineno=167, col_offset=46), Call(Name('first_elts', Load(), lineno=168, col_offset=48), [Call(Attribute(Name('expect', Load(), lineno=168, col_offset=59), 'values', Load(), lineno=168, col_offset=59), [], [], None, None, lineno=168, col_offset=59)], [], None, None, lineno=168, col_offset=48)], [], None, None, lineno=167, col_offset=24), lineno=167, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=24), 'assertItemsEqual', Load(), lineno=169, col_offset=24), [Call(Attribute(Name('sd', Load(), lineno=169, col_offset=46), 'items', Load(), lineno=169, col_offset=46), [], [], None, None, lineno=169, col_offset=46), Call(Name('first_second_elts', Load(), lineno=170, col_offset=48), [Call(Attribute(Name('expect', Load(), lineno=170, col_offset=66), 'items', Load(), lineno=170, col_offset=66), [], [], None, None, lineno=170, col_offset=66)], [], None, None, lineno=170, col_offset=48)], [], None, None, lineno=169, col_offset=24), lineno=169, col_offset=24)], [], lineno=166, col_offset=20)], [], lineno=146, col_offset=16)], [], lineno=135, col_offset=12)], [], lineno=124, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('test_weird_formcontentdict', arguments([Name('self', Param(), lineno=172, col_offset=35)], None, None, []), [Assign([Name('env', Store(), lineno=174, col_offset=8)], Dict([Str('QUERY_STRING', lineno=174, col_offset=15)], [Str('x=1&y=2.0&z=2-3.%2b0&1=1abc', lineno=174, col_offset=31)], lineno=174, col_offset=14), lineno=174, col_offset=8), Assign([Name('expect', Store(), lineno=175, col_offset=8)], Dict([Str('x', lineno=175, col_offset=18), Str('y', lineno=175, col_offset=26), Str('z', lineno=175, col_offset=36), Str('1', lineno=175, col_offset=51)], [Num(1, lineno=175, col_offset=23), Num(2.0, lineno=175, col_offset=31), Str('2-3.+0', lineno=175, col_offset=41), Str('1abc', lineno=175, col_offset=56)], lineno=175, col_offset=17), lineno=175, col_offset=8), Assign([Name('d', Store(), lineno=176, col_offset=8)], Call(Attribute(Name('cgi', Load(), lineno=176, col_offset=12), 'InterpFormContentDict', Load(), lineno=176, col_offset=12), [Name('env', Load(), lineno=176, col_offset=38)], [], None, None, lineno=176, col_offset=12), lineno=176, col_offset=8), For(Tuple([Name('k', Store(), lineno=177, col_offset=12), Name('v', Store(), lineno=177, col_offset=15)], Store(), lineno=177, col_offset=12), Call(Attribute(Name('expect', Load(), lineno=177, col_offset=20), 'items', Load(), lineno=177, col_offset=20), [], [], None, None, lineno=177, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), 'assertEqual', Load(), lineno=178, col_offset=12), [Subscript(Name('d', Load(), lineno=178, col_offset=29), Index(Name('k', Load(), lineno=178, col_offset=31)), Load(), lineno=178, col_offset=29), Name('v', Load(), lineno=178, col_offset=35)], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12)], [], lineno=177, col_offset=8), For(Tuple([Name('k', Store(), lineno=179, col_offset=12), Name('v', Store(), lineno=179, col_offset=15)], Store(), lineno=179, col_offset=12), Call(Attribute(Name('d', Load(), lineno=179, col_offset=20), 'items', Load(), lineno=179, col_offset=20), [], [], None, None, lineno=179, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=12), 'assertEqual', Load(), lineno=180, col_offset=12), [Subscript(Name('expect', Load(), lineno=180, col_offset=29), Index(Name('k', Load(), lineno=180, col_offset=36)), Load(), lineno=180, col_offset=29), Name('v', Load(), lineno=180, col_offset=40)], [], None, None, lineno=180, col_offset=12), lineno=180, col_offset=12)], [], lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'assertItemsEqual', Load(), lineno=181, col_offset=8), [Call(Attribute(Name('expect', Load(), lineno=181, col_offset=30), 'values', Load(), lineno=181, col_offset=30), [], [], None, None, lineno=181, col_offset=30), Call(Attribute(Name('d', Load(), lineno=181, col_offset=47), 'values', Load(), lineno=181, col_offset=47), [], [], None, None, lineno=181, col_offset=47)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('test_log', arguments([Name('self', Param(), lineno=183, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('cgi', Load(), lineno=184, col_offset=8), 'log', Load(), lineno=184, col_offset=8), [Str('Testing', lineno=184, col_offset=16)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Assign([Attribute(Name('cgi', Load(), lineno=186, col_offset=8), 'logfp', Store(), lineno=186, col_offset=8)], Call(Name('StringIO', Load(), lineno=186, col_offset=20), [], [], None, None, lineno=186, col_offset=20), lineno=186, col_offset=8), Expr(Call(Attribute(Name('cgi', Load(), lineno=187, col_offset=8), 'initlog', Load(), lineno=187, col_offset=8), [Str('%s', lineno=187, col_offset=20), Str('Testing initlog 1', lineno=187, col_offset=26)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('cgi', Load(), lineno=188, col_offset=8), 'log', Load(), lineno=188, col_offset=8), [Str('%s', lineno=188, col_offset=16), Str('Testing log 2', lineno=188, col_offset=22)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [Call(Attribute(Attribute(Name('cgi', Load(), lineno=189, col_offset=25), 'logfp', Load(), lineno=189, col_offset=25), 'getvalue', Load(), lineno=189, col_offset=25), [], [], None, None, lineno=189, col_offset=25), Str('Testing initlog 1\nTesting log 2\n', lineno=189, col_offset=47)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=190, col_offset=11), 'path', Load(), lineno=190, col_offset=11), 'exists', Load(), lineno=190, col_offset=11), [Str('/dev/null', lineno=190, col_offset=26)], [], None, None, lineno=190, col_offset=11), [Assign([Attribute(Name('cgi', Load(), lineno=191, col_offset=12), 'logfp', Store(), lineno=191, col_offset=12)], Name('None', Load(), lineno=191, col_offset=24), lineno=191, col_offset=12), Assign([Attribute(Name('cgi', Load(), lineno=192, col_offset=12), 'logfile', Store(), lineno=192, col_offset=12)], Str('/dev/null', lineno=192, col_offset=26), lineno=192, col_offset=12), Expr(Call(Attribute(Name('cgi', Load(), lineno=193, col_offset=12), 'initlog', Load(), lineno=193, col_offset=12), [Str('%s', lineno=193, col_offset=24), Str('Testing log 3', lineno=193, col_offset=30)], [], None, None, lineno=193, col_offset=12), lineno=193, col_offset=12), Expr(Call(Attribute(Name('cgi', Load(), lineno=194, col_offset=12), 'log', Load(), lineno=194, col_offset=12), [Str('Testing log 4', lineno=194, col_offset=20)], [], None, None, lineno=194, col_offset=12), lineno=194, col_offset=12)], [], lineno=190, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('test_fieldstorage_readline', arguments([Name('self', Param(), lineno=196, col_offset=35)], None, None, []), [ClassDef('TestReadlineFile', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=202, col_offset=25), Name('file', Param(), lineno=202, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=203, col_offset=16), 'file', Store(), lineno=203, col_offset=16)], Name('file', Load(), lineno=203, col_offset=28), lineno=203, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=204, col_offset=16), 'numcalls', Store(), lineno=204, col_offset=16)], Num(0, lineno=204, col_offset=32), lineno=204, col_offset=16)], [], lineno=202, col_offset=12), FunctionDef('readline', arguments([Name('self', Param(), lineno=206, col_offset=25), Name('size', Param(), lineno=206, col_offset=31)], None, None, [Name('None', Load(), lineno=206, col_offset=36)]), [AugAssign(Attribute(Name('self', Load(), lineno=207, col_offset=16), 'numcalls', Store(), lineno=207, col_offset=16), Add(), Num(1, lineno=207, col_offset=33), lineno=207, col_offset=16), If(Name('size', Load(), lineno=208, col_offset=19), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=209, col_offset=27), 'file', Load(), lineno=209, col_offset=27), 'readline', Load(), lineno=209, col_offset=27), [Name('size', Load(), lineno=209, col_offset=46)], [], None, None, lineno=209, col_offset=27), lineno=209, col_offset=20)], [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=211, col_offset=27), 'file', Load(), lineno=211, col_offset=27), 'readline', Load(), lineno=211, col_offset=27), [], [], None, None, lineno=211, col_offset=27), lineno=211, col_offset=20)], lineno=208, col_offset=16)], [], lineno=206, col_offset=12), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=213, col_offset=28), Name('name', Param(), lineno=213, col_offset=34)], None, None, []), [Assign([Name('file', Store(), lineno=214, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=214, col_offset=23), '__dict__', Load(), lineno=214, col_offset=23), Index(Str('file', lineno=214, col_offset=37)), Load(), lineno=214, col_offset=23), lineno=214, col_offset=16), Assign([Name('a', Store(), lineno=215, col_offset=16)], Call(Name('getattr', Load(), lineno=215, col_offset=20), [Name('file', Load(), lineno=215, col_offset=28), Name('name', Load(), lineno=215, col_offset=34)], [], None, None, lineno=215, col_offset=20), lineno=215, col_offset=16), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=216, col_offset=23), [Name('a', Load(), lineno=216, col_offset=34), Name('int', Load(), lineno=216, col_offset=37)], [], None, None, lineno=216, col_offset=23), lineno=216, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=217, col_offset=20), [Name('self', Load(), lineno=217, col_offset=28), Name('name', Load(), lineno=217, col_offset=34), Name('a', Load(), lineno=217, col_offset=40)], [], None, None, lineno=217, col_offset=20), lineno=217, col_offset=20)], [], lineno=216, col_offset=16), Return(Name('a', Load(), lineno=218, col_offset=23), lineno=218, col_offset=16)], [], lineno=213, col_offset=12)], [], lineno=201, col_offset=8), Assign([Name('f', Store(), lineno=220, col_offset=8)], Call(Name('TestReadlineFile', Load(), lineno=220, col_offset=12), [Call(Attribute(Name('tempfile', Load(), lineno=220, col_offset=29), 'TemporaryFile', Load(), lineno=220, col_offset=29), [], [], None, None, lineno=220, col_offset=29)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=221, col_offset=8), 'write', Load(), lineno=221, col_offset=8), [BinOp(BinOp(Str('x', lineno=221, col_offset=16), Mult(), Num(256, lineno=221, col_offset=22), lineno=221, col_offset=16), Mult(), Num(1024, lineno=221, col_offset=28), lineno=221, col_offset=26)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=222, col_offset=8), 'seek', Load(), lineno=222, col_offset=8), [Num(0, lineno=222, col_offset=15)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Assign([Name('env', Store(), lineno=223, col_offset=8)], Dict([Str('REQUEST_METHOD', lineno=223, col_offset=15)], [Str('PUT', lineno=223, col_offset=32)], lineno=223, col_offset=14), lineno=223, col_offset=8), Assign([Name('fs', Store(), lineno=224, col_offset=8)], Call(Attribute(Name('cgi', Load(), lineno=224, col_offset=13), 'FieldStorage', Load(), lineno=224, col_offset=13), [], [keyword('fp', Name('f', Load(), lineno=224, col_offset=33)), keyword('environ', Name('env', Load(), lineno=224, col_offset=44))], None, None, lineno=224, col_offset=13), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertTrue', Load(), lineno=228, col_offset=8), [Compare(Attribute(Name('f', Load(), lineno=228, col_offset=24), 'numcalls', Load(), lineno=228, col_offset=24), [Gt()], [Num(2, lineno=228, col_offset=37)], lineno=228, col_offset=24)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8)], [], lineno=196, col_offset=4), FunctionDef('test_fieldstorage_multipart', arguments([Name('self', Param(), lineno=230, col_offset=36)], None, None, []), [Assign([Name('env', Store(), lineno=232, col_offset=8)], Dict([Str('REQUEST_METHOD', lineno=232, col_offset=15), Str('CONTENT_TYPE', lineno=232, col_offset=40), Str('CONTENT_LENGTH', lineno=232, col_offset=143)], [Str('POST', lineno=232, col_offset=32), Str('multipart/form-data; boundary=---------------------------721837373350705526688164684', lineno=232, col_offset=55), Str('558', lineno=232, col_offset=160)], lineno=232, col_offset=14), lineno=232, col_offset=8), Assign([Name('postdata', Store(), lineno=233, col_offset=8)], Str('-----------------------------721837373350705526688164684\nContent-Disposition: form-data; name="id"\n\n1234\n-----------------------------721837373350705526688164684\nContent-Disposition: form-data; name="title"\n\n\n-----------------------------721837373350705526688164684\nContent-Disposition: form-data; name="file"; filename="test.txt"\nContent-Type: text/plain\n\nTesting 123.\n\n-----------------------------721837373350705526688164684\nContent-Disposition: form-data; name="submit"\n\n Add \n-----------------------------721837373350705526688164684--\n', lineno=252, col_offset=-1), lineno=233, col_offset=8), Assign([Name('fs', Store(), lineno=253, col_offset=8)], Call(Attribute(Name('cgi', Load(), lineno=253, col_offset=13), 'FieldStorage', Load(), lineno=253, col_offset=13), [], [keyword('fp', Call(Name('StringIO', Load(), lineno=253, col_offset=33), [Name('postdata', Load(), lineno=253, col_offset=42)], [], None, None, lineno=253, col_offset=33)), keyword('environ', Name('env', Load(), lineno=253, col_offset=61))], None, None, lineno=253, col_offset=13), lineno=253, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'assertEqual', Load(), lineno=254, col_offset=8), [Call(Name('len', Load(), lineno=254, col_offset=25), [Attribute(Name('fs', Load(), lineno=254, col_offset=29), 'list', Load(), lineno=254, col_offset=29)], [], None, None, lineno=254, col_offset=25), Num(4, lineno=254, col_offset=39)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Assign([Name('expect', Store(), lineno=255, col_offset=8)], List([Dict([Str('name', lineno=255, col_offset=19), Str('filename', lineno=255, col_offset=32), Str('value', lineno=255, col_offset=49)], [Str('id', lineno=255, col_offset=26), Name('None', Load(), lineno=255, col_offset=43), Str('1234', lineno=255, col_offset=57)], lineno=255, col_offset=18), Dict([Str('name', lineno=256, col_offset=19), Str('filename', lineno=256, col_offset=35), Str('value', lineno=256, col_offset=52)], [Str('title', lineno=256, col_offset=26), Name('None', Load(), lineno=256, col_offset=46), Str('', lineno=256, col_offset=60)], lineno=256, col_offset=18), Dict([Str('name', lineno=257, col_offset=19), Str('filename', lineno=257, col_offset=34), Str('value', lineno=257, col_offset=56)], [Str('file', lineno=257, col_offset=26), Str('test.txt', lineno=257, col_offset=45), Str('Testing 123.\n', lineno=257, col_offset=64)], lineno=257, col_offset=18), Dict([Str('name', lineno=258, col_offset=19), Str('filename', lineno=258, col_offset=36), Str('value', lineno=258, col_offset=53)], [Str('submit', lineno=258, col_offset=26), Name('None', Load(), lineno=258, col_offset=47), Str(' Add ', lineno=258, col_offset=61)], lineno=258, col_offset=18)], Load(), lineno=255, col_offset=17), lineno=255, col_offset=8), For(Name('x', Store(), lineno=259, col_offset=12), Call(Name('range', Load(), lineno=259, col_offset=17), [Call(Name('len', Load(), lineno=259, col_offset=23), [Attribute(Name('fs', Load(), lineno=259, col_offset=27), 'list', Load(), lineno=259, col_offset=27)], [], None, None, lineno=259, col_offset=23)], [], None, None, lineno=259, col_offset=17), [For(Tuple([Name('k', Store(), lineno=260, col_offset=16), Name('exp', Store(), lineno=260, col_offset=19)], Store(), lineno=260, col_offset=16), Call(Attribute(Subscript(Name('expect', Load(), lineno=260, col_offset=26), Index(Name('x', Load(), lineno=260, col_offset=33)), Load(), lineno=260, col_offset=26), 'items', Load(), lineno=260, col_offset=26), [], [], None, None, lineno=260, col_offset=26), [Assign([Name('got', Store(), lineno=261, col_offset=16)], Call(Name('getattr', Load(), lineno=261, col_offset=22), [Subscript(Attribute(Name('fs', Load(), lineno=261, col_offset=30), 'list', Load(), lineno=261, col_offset=30), Index(Name('x', Load(), lineno=261, col_offset=38)), Load(), lineno=261, col_offset=30), Name('k', Load(), lineno=261, col_offset=42)], [], None, None, lineno=261, col_offset=22), lineno=261, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=262, col_offset=16), 'assertEqual', Load(), lineno=262, col_offset=16), [Name('got', Load(), lineno=262, col_offset=33), Name('exp', Load(), lineno=262, col_offset=38)], [], None, None, lineno=262, col_offset=16), lineno=262, col_offset=16)], [], lineno=260, col_offset=12)], [], lineno=259, col_offset=8)], [], lineno=230, col_offset=4), Assign([Name('_qs_result', Store(), lineno=264, col_offset=4)], Dict([Str('key1', lineno=265, col_offset=8), Str('key2', lineno=266, col_offset=8), Str('key3', lineno=267, col_offset=8), Str('key4', lineno=268, col_offset=8)], [Str('value1', lineno=265, col_offset=16), List([Str('value2x', lineno=266, col_offset=17), Str('value2y', lineno=266, col_offset=28)], Load(), lineno=266, col_offset=16), Str('value3', lineno=267, col_offset=16), Str('value4', lineno=268, col_offset=16)], lineno=264, col_offset=17), lineno=264, col_offset=4), FunctionDef('testQSAndUrlEncode', arguments([Name('self', Param(), lineno=270, col_offset=27)], None, None, []), [Assign([Name('data', Store(), lineno=271, col_offset=8)], Str('key2=value2x&key3=value3&key4=value4', lineno=271, col_offset=15), lineno=271, col_offset=8), Assign([Name('environ', Store(), lineno=272, col_offset=8)], Dict([Str('CONTENT_LENGTH', lineno=273, col_offset=12), Str('CONTENT_TYPE', lineno=274, col_offset=12), Str('QUERY_STRING', lineno=275, col_offset=12), Str('REQUEST_METHOD', lineno=276, col_offset=12)], [Call(Name('str', Load(), lineno=273, col_offset=32), [Call(Name('len', Load(), lineno=273, col_offset=36), [Name('data', Load(), lineno=273, col_offset=40)], [], None, None, lineno=273, col_offset=36)], [], None, None, lineno=273, col_offset=32), Str('application/x-www-form-urlencoded', lineno=274, col_offset=32), Str('key1=value1&key2=value2y', lineno=275, col_offset=32), Str('POST', lineno=276, col_offset=32)], lineno=272, col_offset=18), lineno=272, col_offset=8), Assign([Name('v', Store(), lineno=278, col_offset=8)], Call(Name('gen_result', Load(), lineno=278, col_offset=12), [Name('data', Load(), lineno=278, col_offset=23), Name('environ', Load(), lineno=278, col_offset=29)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertEqual', Load(), lineno=279, col_offset=8), [Attribute(Name('self', Load(), lineno=279, col_offset=25), '_qs_result', Load(), lineno=279, col_offset=25), Name('v', Load(), lineno=279, col_offset=42)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=270, col_offset=4), FunctionDef('testQSAndFormData', arguments([Name('self', Param(), lineno=281, col_offset=26)], None, None, []), [Assign([Name('data', Store(), lineno=282, col_offset=8)], Str('\n---123\nContent-Disposition: form-data; name="key2"\n\nvalue2y\n---123\nContent-Disposition: form-data; name="key3"\n\nvalue3\n---123\nContent-Disposition: form-data; name="key4"\n\nvalue4\n---123--\n', lineno=296, col_offset=-1), lineno=282, col_offset=8), Assign([Name('environ', Store(), lineno=297, col_offset=8)], Dict([Str('CONTENT_LENGTH', lineno=298, col_offset=12), Str('CONTENT_TYPE', lineno=299, col_offset=12), Str('QUERY_STRING', lineno=300, col_offset=12), Str('REQUEST_METHOD', lineno=301, col_offset=12)], [Call(Name('str', Load(), lineno=298, col_offset=32), [Call(Name('len', Load(), lineno=298, col_offset=36), [Name('data', Load(), lineno=298, col_offset=40)], [], None, None, lineno=298, col_offset=36)], [], None, None, lineno=298, col_offset=32), Str('multipart/form-data; boundary=-123', lineno=299, col_offset=32), Str('key1=value1&key2=value2x', lineno=300, col_offset=32), Str('POST', lineno=301, col_offset=32)], lineno=297, col_offset=18), lineno=297, col_offset=8), Assign([Name('v', Store(), lineno=303, col_offset=8)], Call(Name('gen_result', Load(), lineno=303, col_offset=12), [Name('data', Load(), lineno=303, col_offset=23), Name('environ', Load(), lineno=303, col_offset=29)], [], None, None, lineno=303, col_offset=12), lineno=303, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=304, col_offset=8), 'assertEqual', Load(), lineno=304, col_offset=8), [Attribute(Name('self', Load(), lineno=304, col_offset=25), '_qs_result', Load(), lineno=304, col_offset=25), Name('v', Load(), lineno=304, col_offset=42)], [], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('testQSAndFormDataFile', arguments([Name('self', Param(), lineno=306, col_offset=30)], None, None, []), [Assign([Name('data', Store(), lineno=307, col_offset=8)], Str('\n---123\nContent-Disposition: form-data; name="key2"\n\nvalue2y\n---123\nContent-Disposition: form-data; name="key3"\n\nvalue3\n---123\nContent-Disposition: form-data; name="key4"\n\nvalue4\n---123\nContent-Disposition: form-data; name="upload"; filename="fake.txt"\nContent-Type: text/plain\n\nthis is the content of the fake file\n\n---123--\n', lineno=327, col_offset=-1), lineno=307, col_offset=8), Assign([Name('environ', Store(), lineno=328, col_offset=8)], Dict([Str('CONTENT_LENGTH', lineno=329, col_offset=12), Str('CONTENT_TYPE', lineno=330, col_offset=12), Str('QUERY_STRING', lineno=331, col_offset=12), Str('REQUEST_METHOD', lineno=332, col_offset=12)], [Call(Name('str', Load(), lineno=329, col_offset=32), [Call(Name('len', Load(), lineno=329, col_offset=36), [Name('data', Load(), lineno=329, col_offset=40)], [], None, None, lineno=329, col_offset=36)], [], None, None, lineno=329, col_offset=32), Str('multipart/form-data; boundary=-123', lineno=330, col_offset=32), Str('key1=value1&key2=value2x', lineno=331, col_offset=32), Str('POST', lineno=332, col_offset=32)], lineno=328, col_offset=18), lineno=328, col_offset=8), Assign([Name('result', Store(), lineno=334, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=334, col_offset=17), '_qs_result', Load(), lineno=334, col_offset=17), 'copy', Load(), lineno=334, col_offset=17), [], [], None, None, lineno=334, col_offset=17), lineno=334, col_offset=8), Expr(Call(Attribute(Name('result', Load(), lineno=335, col_offset=8), 'update', Load(), lineno=335, col_offset=8), [Dict([Str('upload', lineno=336, col_offset=12)], [Str('this is the content of the fake file\n', lineno=336, col_offset=22)], lineno=335, col_offset=22)], [], None, None, lineno=335, col_offset=8), lineno=335, col_offset=8), Assign([Name('v', Store(), lineno=338, col_offset=8)], Call(Name('gen_result', Load(), lineno=338, col_offset=12), [Name('data', Load(), lineno=338, col_offset=23), Name('environ', Load(), lineno=338, col_offset=29)], [], None, None, lineno=338, col_offset=12), lineno=338, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=339, col_offset=8), 'assertEqual', Load(), lineno=339, col_offset=8), [Name('result', Load(), lineno=339, col_offset=25), Name('v', Load(), lineno=339, col_offset=33)], [], None, None, lineno=339, col_offset=8), lineno=339, col_offset=8)], [], lineno=306, col_offset=4), FunctionDef('test_deprecated_parse_qs', arguments([Name('self', Param(), lineno=341, col_offset=33)], None, None, []), [With(Call(Name('check_warnings', Load(), lineno=343, col_offset=13), [Tuple([Str('cgi.parse_qs is deprecated, use urlparse.parse_qs instead', lineno=343, col_offset=29), Name('PendingDeprecationWarning', Load(), lineno=344, col_offset=49)], Load(), lineno=343, col_offset=29)], [], None, None, lineno=343, col_offset=13), None, [Expr(Call(Attribute(Name('self', Load(), lineno=345, col_offset=12), 'assertEqual', Load(), lineno=345, col_offset=12), [Dict([Str('a', lineno=345, col_offset=30), Str('B', lineno=345, col_offset=43), Str('b', lineno=345, col_offset=56)], [List([Str('A1', lineno=345, col_offset=36)], Load(), lineno=345, col_offset=35), List([Str('B3', lineno=345, col_offset=49)], Load(), lineno=345, col_offset=48), List([Str('B2', lineno=345, col_offset=62)], Load(), lineno=345, col_offset=61)], lineno=345, col_offset=29), Call(Attribute(Name('cgi', Load(), lineno=346, col_offset=29), 'parse_qs', Load(), lineno=346, col_offset=29), [Str('a=A1&b=B2&B=B3', lineno=346, col_offset=42)], [], None, None, lineno=346, col_offset=29)], [], None, None, lineno=345, col_offset=12), lineno=345, col_offset=12)], lineno=343, col_offset=13)], [], lineno=341, col_offset=4), FunctionDef('test_deprecated_parse_qsl', arguments([Name('self', Param(), lineno=348, col_offset=34)], None, None, []), [With(Call(Name('check_warnings', Load(), lineno=350, col_offset=13), [Tuple([Str('cgi.parse_qsl is deprecated, use urlparse.parse_qsl instead', lineno=350, col_offset=29), Name('PendingDeprecationWarning', Load(), lineno=351, col_offset=50)], Load(), lineno=350, col_offset=29)], [], None, None, lineno=350, col_offset=13), None, [Expr(Call(Attribute(Name('self', Load(), lineno=352, col_offset=12), 'assertEqual', Load(), lineno=352, col_offset=12), [List([Tuple([Str('a', lineno=352, col_offset=31), Str('A1', lineno=352, col_offset=36)], Load(), lineno=352, col_offset=31), Tuple([Str('b', lineno=352, col_offset=44), Str('B2', lineno=352, col_offset=49)], Load(), lineno=352, col_offset=44), Tuple([Str('B', lineno=352, col_offset=57), Str('B3', lineno=352, col_offset=62)], Load(), lineno=352, col_offset=57)], Load(), lineno=352, col_offset=29), Call(Attribute(Name('cgi', Load(), lineno=353, col_offset=29), 'parse_qsl', Load(), lineno=353, col_offset=29), [Str('a=A1&b=B2&B=B3', lineno=353, col_offset=43)], [], None, None, lineno=353, col_offset=29)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=12)], lineno=350, col_offset=13)], [], lineno=348, col_offset=4), FunctionDef('test_parse_header', arguments([Name('self', Param(), lineno=355, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'assertEqual', Load(), lineno=356, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=357, col_offset=12), 'parse_header', Load(), lineno=357, col_offset=12), [Str('text/plain', lineno=357, col_offset=29)], [], None, None, lineno=357, col_offset=12), Tuple([Str('text/plain', lineno=358, col_offset=13), Dict([], [], lineno=358, col_offset=27)], Load(), lineno=358, col_offset=13)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertEqual', Load(), lineno=359, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=360, col_offset=12), 'parse_header', Load(), lineno=360, col_offset=12), [Str('text/vnd.just.made.this.up ; ', lineno=360, col_offset=29)], [], None, None, lineno=360, col_offset=12), Tuple([Str('text/vnd.just.made.this.up', lineno=361, col_offset=13), Dict([], [], lineno=361, col_offset=43)], Load(), lineno=361, col_offset=13)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertEqual', Load(), lineno=362, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=363, col_offset=12), 'parse_header', Load(), lineno=363, col_offset=12), [Str('text/plain;charset=us-ascii', lineno=363, col_offset=29)], [], None, None, lineno=363, col_offset=12), Tuple([Str('text/plain', lineno=364, col_offset=13), Dict([Str('charset', lineno=364, col_offset=28)], [Str('us-ascii', lineno=364, col_offset=39)], lineno=364, col_offset=27)], Load(), lineno=364, col_offset=13)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertEqual', Load(), lineno=365, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=366, col_offset=12), 'parse_header', Load(), lineno=366, col_offset=12), [Str('text/plain ; charset="us-ascii"', lineno=366, col_offset=29)], [], None, None, lineno=366, col_offset=12), Tuple([Str('text/plain', lineno=367, col_offset=13), Dict([Str('charset', lineno=367, col_offset=28)], [Str('us-ascii', lineno=367, col_offset=39)], lineno=367, col_offset=27)], Load(), lineno=367, col_offset=13)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), 'assertEqual', Load(), lineno=368, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=369, col_offset=12), 'parse_header', Load(), lineno=369, col_offset=12), [Str('text/plain ; charset="us-ascii"; another=opt', lineno=369, col_offset=29)], [], None, None, lineno=369, col_offset=12), Tuple([Str('text/plain', lineno=370, col_offset=13), Dict([Str('charset', lineno=370, col_offset=28), Str('another', lineno=370, col_offset=51)], [Str('us-ascii', lineno=370, col_offset=39), Str('opt', lineno=370, col_offset=62)], lineno=370, col_offset=27)], Load(), lineno=370, col_offset=13)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertEqual', Load(), lineno=371, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=372, col_offset=12), 'parse_header', Load(), lineno=372, col_offset=12), [Str('attachment; filename="silly.txt"', lineno=372, col_offset=29)], [], None, None, lineno=372, col_offset=12), Tuple([Str('attachment', lineno=373, col_offset=13), Dict([Str('filename', lineno=373, col_offset=28)], [Str('silly.txt', lineno=373, col_offset=40)], lineno=373, col_offset=27)], Load(), lineno=373, col_offset=13)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=374, col_offset=8), 'assertEqual', Load(), lineno=374, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=375, col_offset=12), 'parse_header', Load(), lineno=375, col_offset=12), [Str('attachment; filename="strange;name"', lineno=375, col_offset=29)], [], None, None, lineno=375, col_offset=12), Tuple([Str('attachment', lineno=376, col_offset=13), Dict([Str('filename', lineno=376, col_offset=28)], [Str('strange;name', lineno=376, col_offset=40)], lineno=376, col_offset=27)], Load(), lineno=376, col_offset=13)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=8), 'assertEqual', Load(), lineno=377, col_offset=8), [Call(Attribute(Name('cgi', Load(), lineno=378, col_offset=12), 'parse_header', Load(), lineno=378, col_offset=12), [Str('attachment; filename="strange;name";size=123;', lineno=378, col_offset=29)], [], None, None, lineno=378, col_offset=12), Tuple([Str('attachment', lineno=379, col_offset=13), Dict([Str('filename', lineno=379, col_offset=28), Str('size', lineno=379, col_offset=56)], [Str('strange;name', lineno=379, col_offset=40), Str('123', lineno=379, col_offset=64)], lineno=379, col_offset=27)], Load(), lineno=379, col_offset=13)], [], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8)], [], lineno=355, col_offset=4)], [], lineno=121, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=383, col_offset=4), [Name('CgiTests', Load(), lineno=383, col_offset=17)], [], None, None, lineno=383, col_offset=4), lineno=383, col_offset=4)], [], lineno=382, col_offset=0), If(Compare(Name('__name__', Load(), lineno=385, col_offset=3), [Eq()], [Str('__main__', lineno=385, col_offset=15)], lineno=385, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=386, col_offset=4), [], [], None, None, lineno=386, col_offset=4), lineno=386, col_offset=4)], [], lineno=385, col_offset=0)])
