Module([Expr(Str('\nUnittest for time.strftime\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), Import([alias('calendar', None)], lineno=5, col_offset=0), Import([alias('sys', None)], lineno=6, col_offset=0), Import([alias('re', None)], lineno=7, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=8, col_offset=0), Import([alias('time', None)], lineno=9, col_offset=0), Import([alias('unittest', None)], lineno=10, col_offset=0), FunctionDef('fixasctime', arguments([Name('s', Param(), lineno=14, col_offset=15)], None, None, []), [If(Compare(Subscript(Name('s', Load(), lineno=15, col_offset=7), Index(Num(8, lineno=15, col_offset=9)), Load(), lineno=15, col_offset=7), [Eq()], [Str(' ', lineno=15, col_offset=15)], lineno=15, col_offset=7), [Assign([Name('s', Store(), lineno=16, col_offset=8)], BinOp(BinOp(Subscript(Name('s', Load(), lineno=16, col_offset=12), Slice(None, Num(8, lineno=16, col_offset=15), None), Load(), lineno=16, col_offset=12), Add(), Str('0', lineno=16, col_offset=20), lineno=16, col_offset=12), Add(), Subscript(Name('s', Load(), lineno=16, col_offset=26), Slice(Num(9, lineno=16, col_offset=28), None, None), Load(), lineno=16, col_offset=26), lineno=16, col_offset=24), lineno=16, col_offset=8)], [], lineno=15, col_offset=4), Return(Name('s', Load(), lineno=17, col_offset=11), lineno=17, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('escapestr', arguments([Name('text', Param(), lineno=19, col_offset=14), Name('ampm', Param(), lineno=19, col_offset=20)], None, None, []), [Expr(Str('\n    Escape text to deal with possible locale values that have regex\n    syntax while allowing regex syntax used for comparison.\n    ', lineno=23, col_offset=-1), lineno=23, col_offset=-1), Assign([Name('new_text', Store(), lineno=24, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=24, col_offset=15), 'escape', Load(), lineno=24, col_offset=15), [Name('text', Load(), lineno=24, col_offset=25)], [], None, None, lineno=24, col_offset=15), lineno=24, col_offset=4), Assign([Name('new_text', Store(), lineno=25, col_offset=4)], Call(Attribute(Name('new_text', Load(), lineno=25, col_offset=15), 'replace', Load(), lineno=25, col_offset=15), [Call(Attribute(Name('re', Load(), lineno=25, col_offset=32), 'escape', Load(), lineno=25, col_offset=32), [Name('ampm', Load(), lineno=25, col_offset=42)], [], None, None, lineno=25, col_offset=32), Name('ampm', Load(), lineno=25, col_offset=49)], [], None, None, lineno=25, col_offset=15), lineno=25, col_offset=4), Assign([Name('new_text', Store(), lineno=26, col_offset=4)], Call(Attribute(Name('new_text', Load(), lineno=26, col_offset=15), 'replace', Load(), lineno=26, col_offset=15), [Str('\\%', lineno=26, col_offset=32), Str('%', lineno=26, col_offset=38)], [], None, None, lineno=26, col_offset=15), lineno=26, col_offset=4), Assign([Name('new_text', Store(), lineno=27, col_offset=4)], Call(Attribute(Name('new_text', Load(), lineno=27, col_offset=15), 'replace', Load(), lineno=27, col_offset=15), [Str('\\:', lineno=27, col_offset=32), Str(':', lineno=27, col_offset=38)], [], None, None, lineno=27, col_offset=15), lineno=27, col_offset=4), Assign([Name('new_text', Store(), lineno=28, col_offset=4)], Call(Attribute(Name('new_text', Load(), lineno=28, col_offset=15), 'replace', Load(), lineno=28, col_offset=15), [Str('\\?', lineno=28, col_offset=32), Str('?', lineno=28, col_offset=38)], [], None, None, lineno=28, col_offset=15), lineno=28, col_offset=4), Return(Name('new_text', Load(), lineno=29, col_offset=11), lineno=29, col_offset=4)], [], lineno=19, col_offset=0), ClassDef('StrftimeTest', [Attribute(Name('unittest', Load(), lineno=31, col_offset=19), 'TestCase', Load(), lineno=31, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=33, col_offset=17)], 'k', 'kw', []), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=34, col_offset=8), 'TestCase', Load(), lineno=34, col_offset=8), '__init__', Load(), lineno=34, col_offset=8), [Name('self', Load(), lineno=34, col_offset=35)], [], Name('k', Load(), lineno=34, col_offset=42), Name('kw', Load(), lineno=34, col_offset=47), lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('_update_variables', arguments([Name('self', Param(), lineno=36, col_offset=26), Name('now', Param(), lineno=36, col_offset=32)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'gmt', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=38, col_offset=19), 'gmtime', Load(), lineno=38, col_offset=19), [Name('now', Load(), lineno=38, col_offset=31)], [], None, None, lineno=38, col_offset=19), lineno=38, col_offset=8), Assign([Name('now', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=39, col_offset=14), 'localtime', Load(), lineno=39, col_offset=14), [Name('now', Load(), lineno=39, col_offset=29)], [], None, None, lineno=39, col_offset=14), lineno=39, col_offset=8), If(Compare(Subscript(Name('now', Load(), lineno=41, col_offset=11), Index(Num(3, lineno=41, col_offset=15)), Load(), lineno=41, col_offset=11), [Lt()], [Num(12, lineno=41, col_offset=20)], lineno=41, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=41, col_offset=24), 'ampm', Store(), lineno=41, col_offset=24)], Str('(AM|am)', lineno=41, col_offset=34), lineno=41, col_offset=24)], [Assign([Attribute(Name('self', Load(), lineno=42, col_offset=14), 'ampm', Store(), lineno=42, col_offset=14)], Str('(PM|pm)', lineno=42, col_offset=24), lineno=42, col_offset=14)], lineno=41, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'jan1', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=44, col_offset=20), 'localtime', Load(), lineno=44, col_offset=20), [Call(Attribute(Name('time', Load(), lineno=44, col_offset=35), 'mktime', Load(), lineno=44, col_offset=35), [Tuple([Subscript(Name('now', Load(), lineno=44, col_offset=48), Index(Num(0, lineno=44, col_offset=52)), Load(), lineno=44, col_offset=48), Num(1, lineno=44, col_offset=56), Num(1, lineno=44, col_offset=59), Num(0, lineno=44, col_offset=62), Num(0, lineno=44, col_offset=65), Num(0, lineno=44, col_offset=68), Num(0, lineno=44, col_offset=71), Num(1, lineno=44, col_offset=74), Num(0, lineno=44, col_offset=77)], Load(), lineno=44, col_offset=48)], [], None, None, lineno=44, col_offset=35)], [], None, None, lineno=44, col_offset=20), lineno=44, col_offset=8), TryExcept([If(Subscript(Name('now', Load(), lineno=47, col_offset=15), Index(Num(8, lineno=47, col_offset=19)), Load(), lineno=47, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=47, col_offset=23), 'tz', Store(), lineno=47, col_offset=23)], Subscript(Attribute(Name('time', Load(), lineno=47, col_offset=33), 'tzname', Load(), lineno=47, col_offset=33), Index(Num(1, lineno=47, col_offset=45)), Load(), lineno=47, col_offset=33), lineno=47, col_offset=23)], [Assign([Attribute(Name('self', Load(), lineno=48, col_offset=18), 'tz', Store(), lineno=48, col_offset=18)], Subscript(Attribute(Name('time', Load(), lineno=48, col_offset=28), 'tzname', Load(), lineno=48, col_offset=28), Index(Num(0, lineno=48, col_offset=40)), Load(), lineno=48, col_offset=28), lineno=48, col_offset=18)], lineno=47, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=49, col_offset=15), None, [Assign([Attribute(Name('self', Load(), lineno=50, col_offset=12), 'tz', Store(), lineno=50, col_offset=12)], Str('', lineno=50, col_offset=22), lineno=50, col_offset=12)], lineno=49, col_offset=8)], [], lineno=46, col_offset=8), If(Compare(Subscript(Name('now', Load(), lineno=52, col_offset=11), Index(Num(3, lineno=52, col_offset=15)), Load(), lineno=52, col_offset=11), [Gt()], [Num(12, lineno=52, col_offset=20)], lineno=52, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=52, col_offset=24), 'clock12', Store(), lineno=52, col_offset=24)], BinOp(Subscript(Name('now', Load(), lineno=52, col_offset=39), Index(Num(3, lineno=52, col_offset=43)), Load(), lineno=52, col_offset=39), Sub(), Num(12, lineno=52, col_offset=48), lineno=52, col_offset=39), lineno=52, col_offset=24)], [If(Compare(Subscript(Name('now', Load(), lineno=53, col_offset=13), Index(Num(3, lineno=53, col_offset=17)), Load(), lineno=53, col_offset=13), [Gt()], [Num(0, lineno=53, col_offset=22)], lineno=53, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=53, col_offset=25), 'clock12', Store(), lineno=53, col_offset=25)], Subscript(Name('now', Load(), lineno=53, col_offset=40), Index(Num(3, lineno=53, col_offset=44)), Load(), lineno=53, col_offset=40), lineno=53, col_offset=25)], [Assign([Attribute(Name('self', Load(), lineno=54, col_offset=14), 'clock12', Store(), lineno=54, col_offset=14)], Num(12, lineno=54, col_offset=29), lineno=54, col_offset=14)], lineno=53, col_offset=13)], lineno=52, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'now', Store(), lineno=56, col_offset=8)], Name('now', Load(), lineno=56, col_offset=19), lineno=56, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=58, col_offset=14)], None, None, []), [TryExcept([Import([alias('java', None)], lineno=60, col_offset=12), Expr(Call(Attribute(Attribute(Attribute(Name('java', Load(), lineno=61, col_offset=12), 'util', Load(), lineno=61, col_offset=12), 'Locale', Load(), lineno=61, col_offset=12), 'setDefault', Load(), lineno=61, col_offset=12), [Attribute(Attribute(Attribute(Name('java', Load(), lineno=61, col_offset=40), 'util', Load(), lineno=61, col_offset=40), 'Locale', Load(), lineno=61, col_offset=40), 'US', Load(), lineno=61, col_offset=40)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=62, col_offset=15), None, [Import([alias('locale', None)], lineno=63, col_offset=12), Expr(Call(Attribute(Name('locale', Load(), lineno=64, col_offset=12), 'setlocale', Load(), lineno=64, col_offset=12), [Attribute(Name('locale', Load(), lineno=64, col_offset=29), 'LC_TIME', Load(), lineno=64, col_offset=29), Str('C', lineno=64, col_offset=45)], [], None, None, lineno=64, col_offset=12), lineno=64, col_offset=12)], lineno=62, col_offset=8)], [], lineno=59, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('test_strftime', arguments([Name('self', Param(), lineno=66, col_offset=22)], None, None, []), [Assign([Name('now', Store(), lineno=67, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=67, col_offset=14), 'time', Load(), lineno=67, col_offset=14), [], [], None, None, lineno=67, col_offset=14), lineno=67, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), '_update_variables', Load(), lineno=68, col_offset=8), [Name('now', Load(), lineno=68, col_offset=31)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'strftest1', Load(), lineno=69, col_offset=8), [Name('now', Load(), lineno=69, col_offset=23)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'strftest2', Load(), lineno=70, col_offset=8), [Name('now', Load(), lineno=70, col_offset=23)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=72, col_offset=11), 'verbose', Load(), lineno=72, col_offset=11), [Print(None, [BinOp(Str('Strftime test, platform: %s, Python version: %s', lineno=73, col_offset=18), Mod(), Tuple([Attribute(Name('sys', Load(), lineno=74, col_offset=19), 'platform', Load(), lineno=74, col_offset=19), Subscript(Call(Attribute(Attribute(Name('sys', Load(), lineno=74, col_offset=33), 'version', Load(), lineno=74, col_offset=33), 'split', Load(), lineno=74, col_offset=33), [], [], None, None, lineno=74, col_offset=33), Index(Num(0, lineno=74, col_offset=53)), Load(), lineno=74, col_offset=33)], Load(), lineno=74, col_offset=19), lineno=73, col_offset=18)], True, lineno=73, col_offset=12)], [], lineno=72, col_offset=8), For(Name('j', Store(), lineno=76, col_offset=12), Call(Name('range', Load(), lineno=76, col_offset=17), [Num(-5, lineno=76, col_offset=24), Num(5, lineno=76, col_offset=27)], [], None, None, lineno=76, col_offset=17), [For(Name('i', Store(), lineno=77, col_offset=16), Call(Name('range', Load(), lineno=77, col_offset=21), [Num(25, lineno=77, col_offset=27)], [], None, None, lineno=77, col_offset=21), [Assign([Name('arg', Store(), lineno=78, col_offset=16)], BinOp(Name('now', Load(), lineno=78, col_offset=22), Add(), BinOp(BinOp(BinOp(Name('i', Load(), lineno=78, col_offset=29), Add(), BinOp(Name('j', Load(), lineno=78, col_offset=31), Mult(), Num(100, lineno=78, col_offset=33), lineno=78, col_offset=31), lineno=78, col_offset=29), Mult(), Num(23, lineno=78, col_offset=38), lineno=78, col_offset=28), Mult(), Num(3603, lineno=78, col_offset=41), lineno=78, col_offset=40), lineno=78, col_offset=22), lineno=78, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=16), '_update_variables', Load(), lineno=79, col_offset=16), [Name('arg', Load(), lineno=79, col_offset=39)], [], None, None, lineno=79, col_offset=16), lineno=79, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=16), 'strftest1', Load(), lineno=80, col_offset=16), [Name('arg', Load(), lineno=80, col_offset=31)], [], None, None, lineno=80, col_offset=16), lineno=80, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=16), 'strftest2', Load(), lineno=81, col_offset=16), [Name('arg', Load(), lineno=81, col_offset=31)], [], None, None, lineno=81, col_offset=16), lineno=81, col_offset=16)], [], lineno=77, col_offset=12)], [], lineno=76, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('strftest1', arguments([Name('self', Param(), lineno=83, col_offset=18), Name('now', Param(), lineno=83, col_offset=24)], None, None, []), [If(Attribute(Name('test_support', Load(), lineno=84, col_offset=11), 'verbose', Load(), lineno=84, col_offset=11), [Print(None, [Str('strftime test for', lineno=85, col_offset=18), Call(Attribute(Name('time', Load(), lineno=85, col_offset=39), 'ctime', Load(), lineno=85, col_offset=39), [Name('now', Load(), lineno=85, col_offset=50)], [], None, None, lineno=85, col_offset=39)], True, lineno=85, col_offset=12)], [], lineno=84, col_offset=8), Assign([Name('now', Store(), lineno=86, col_offset=8)], Attribute(Name('self', Load(), lineno=86, col_offset=14), 'now', Load(), lineno=86, col_offset=14), lineno=86, col_offset=8), Assign([Name('expectations', Store(), lineno=89, col_offset=8)], Tuple([Tuple([Str('%a', lineno=90, col_offset=13), Subscript(Attribute(Name('calendar', Load(), lineno=90, col_offset=19), 'day_abbr', Load(), lineno=90, col_offset=19), Index(Subscript(Name('now', Load(), lineno=90, col_offset=37), Index(Num(6, lineno=90, col_offset=41)), Load(), lineno=90, col_offset=37)), Load(), lineno=90, col_offset=19), Str('abbreviated weekday name', lineno=90, col_offset=46)], Load(), lineno=90, col_offset=13), Tuple([Str('%A', lineno=91, col_offset=13), Subscript(Attribute(Name('calendar', Load(), lineno=91, col_offset=19), 'day_name', Load(), lineno=91, col_offset=19), Index(Subscript(Name('now', Load(), lineno=91, col_offset=37), Index(Num(6, lineno=91, col_offset=41)), Load(), lineno=91, col_offset=37)), Load(), lineno=91, col_offset=19), Str('full weekday name', lineno=91, col_offset=46)], Load(), lineno=91, col_offset=13), Tuple([Str('%b', lineno=92, col_offset=13), Subscript(Attribute(Name('calendar', Load(), lineno=92, col_offset=19), 'month_abbr', Load(), lineno=92, col_offset=19), Index(Subscript(Name('now', Load(), lineno=92, col_offset=39), Index(Num(1, lineno=92, col_offset=43)), Load(), lineno=92, col_offset=39)), Load(), lineno=92, col_offset=19), Str('abbreviated month name', lineno=92, col_offset=48)], Load(), lineno=92, col_offset=13), Tuple([Str('%B', lineno=93, col_offset=13), Subscript(Attribute(Name('calendar', Load(), lineno=93, col_offset=19), 'month_name', Load(), lineno=93, col_offset=19), Index(Subscript(Name('now', Load(), lineno=93, col_offset=39), Index(Num(1, lineno=93, col_offset=43)), Load(), lineno=93, col_offset=39)), Load(), lineno=93, col_offset=19), Str('full month name', lineno=93, col_offset=48)], Load(), lineno=93, col_offset=13), Tuple([Str('%d', lineno=95, col_offset=13), BinOp(Str('%02d', lineno=95, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=95, col_offset=28), Index(Num(2, lineno=95, col_offset=32)), Load(), lineno=95, col_offset=28), lineno=95, col_offset=19), Str('day of month as number (00-31)', lineno=95, col_offset=36)], Load(), lineno=95, col_offset=13), Tuple([Str('%H', lineno=96, col_offset=13), BinOp(Str('%02d', lineno=96, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=96, col_offset=28), Index(Num(3, lineno=96, col_offset=32)), Load(), lineno=96, col_offset=28), lineno=96, col_offset=19), Str('hour (00-23)', lineno=96, col_offset=36)], Load(), lineno=96, col_offset=13), Tuple([Str('%I', lineno=97, col_offset=13), BinOp(Str('%02d', lineno=97, col_offset=19), Mod(), Attribute(Name('self', Load(), lineno=97, col_offset=28), 'clock12', Load(), lineno=97, col_offset=28), lineno=97, col_offset=19), Str('hour (01-12)', lineno=97, col_offset=42)], Load(), lineno=97, col_offset=13), Tuple([Str('%j', lineno=98, col_offset=13), BinOp(Str('%03d', lineno=98, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=98, col_offset=28), Index(Num(7, lineno=98, col_offset=32)), Load(), lineno=98, col_offset=28), lineno=98, col_offset=19), Str('julian day (001-366)', lineno=98, col_offset=36)], Load(), lineno=98, col_offset=13), Tuple([Str('%m', lineno=99, col_offset=13), BinOp(Str('%02d', lineno=99, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=99, col_offset=28), Index(Num(1, lineno=99, col_offset=32)), Load(), lineno=99, col_offset=28), lineno=99, col_offset=19), Str('month as number (01-12)', lineno=99, col_offset=36)], Load(), lineno=99, col_offset=13), Tuple([Str('%M', lineno=100, col_offset=13), BinOp(Str('%02d', lineno=100, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=100, col_offset=28), Index(Num(4, lineno=100, col_offset=32)), Load(), lineno=100, col_offset=28), lineno=100, col_offset=19), Str('minute, (00-59)', lineno=100, col_offset=36)], Load(), lineno=100, col_offset=13), Tuple([Str('%p', lineno=101, col_offset=13), Attribute(Name('self', Load(), lineno=101, col_offset=19), 'ampm', Load(), lineno=101, col_offset=19), Str('AM or PM as appropriate', lineno=101, col_offset=30)], Load(), lineno=101, col_offset=13), Tuple([Str('%S', lineno=102, col_offset=13), BinOp(Str('%02d', lineno=102, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=102, col_offset=28), Index(Num(5, lineno=102, col_offset=32)), Load(), lineno=102, col_offset=28), lineno=102, col_offset=19), Str('seconds of current time (00-60)', lineno=102, col_offset=36)], Load(), lineno=102, col_offset=13), Tuple([Str('%U', lineno=103, col_offset=13), BinOp(Str('%02d', lineno=103, col_offset=19), Mod(), BinOp(BinOp(Subscript(Name('now', Load(), lineno=103, col_offset=30), Index(Num(7, lineno=103, col_offset=34)), Load(), lineno=103, col_offset=30), Add(), Subscript(Attribute(Name('self', Load(), lineno=103, col_offset=39), 'jan1', Load(), lineno=103, col_offset=39), Index(Num(6, lineno=103, col_offset=49)), Load(), lineno=103, col_offset=39), lineno=103, col_offset=30), FloorDiv(), Num(7, lineno=103, col_offset=54), lineno=103, col_offset=29), lineno=103, col_offset=19), Str('week number of the year (Sun 1st)', lineno=104, col_offset=13)], Load(), lineno=103, col_offset=13), Tuple([Str('%w', lineno=105, col_offset=13), BinOp(Str('0?%d', lineno=105, col_offset=19), Mod(), BinOp(BinOp(Num(1, lineno=105, col_offset=30), Add(), Subscript(Name('now', Load(), lineno=105, col_offset=32), Index(Num(6, lineno=105, col_offset=36)), Load(), lineno=105, col_offset=32), lineno=105, col_offset=30), Mod(), Num(7, lineno=105, col_offset=42), lineno=105, col_offset=29), lineno=105, col_offset=19), Str('weekday as a number (Sun 1st)', lineno=105, col_offset=46)], Load(), lineno=105, col_offset=13), Tuple([Str('%W', lineno=106, col_offset=13), BinOp(Str('%02d', lineno=106, col_offset=19), Mod(), BinOp(BinOp(Subscript(Name('now', Load(), lineno=106, col_offset=30), Index(Num(7, lineno=106, col_offset=34)), Load(), lineno=106, col_offset=30), Add(), BinOp(BinOp(Subscript(Attribute(Name('self', Load(), lineno=106, col_offset=40), 'jan1', Load(), lineno=106, col_offset=40), Index(Num(6, lineno=106, col_offset=50)), Load(), lineno=106, col_offset=40), Sub(), Num(1, lineno=106, col_offset=55), lineno=106, col_offset=40), Mod(), Num(7, lineno=106, col_offset=58), lineno=106, col_offset=39), lineno=106, col_offset=30), FloorDiv(), Num(7, lineno=106, col_offset=62), lineno=106, col_offset=29), lineno=106, col_offset=19), Str('week number of the year (Mon 1st)', lineno=107, col_offset=12)], Load(), lineno=106, col_offset=13), Tuple([Str('%X', lineno=109, col_offset=13), BinOp(Str('%02d:%02d:%02d', lineno=109, col_offset=19), Mod(), Tuple([Subscript(Name('now', Load(), lineno=109, col_offset=39), Index(Num(3, lineno=109, col_offset=43)), Load(), lineno=109, col_offset=39), Subscript(Name('now', Load(), lineno=109, col_offset=47), Index(Num(4, lineno=109, col_offset=51)), Load(), lineno=109, col_offset=47), Subscript(Name('now', Load(), lineno=109, col_offset=55), Index(Num(5, lineno=109, col_offset=59)), Load(), lineno=109, col_offset=55)], Load(), lineno=109, col_offset=39), lineno=109, col_offset=19), Str('%H:%M:%S', lineno=109, col_offset=64)], Load(), lineno=109, col_offset=13), Tuple([Str('%y', lineno=110, col_offset=13), BinOp(Str('%02d', lineno=110, col_offset=19), Mod(), BinOp(Subscript(Name('now', Load(), lineno=110, col_offset=29), Index(Num(0, lineno=110, col_offset=33)), Load(), lineno=110, col_offset=29), Mod(), Num(100, lineno=110, col_offset=36), lineno=110, col_offset=29), lineno=110, col_offset=19), Str('year without century', lineno=110, col_offset=42)], Load(), lineno=110, col_offset=13), Tuple([Str('%Y', lineno=111, col_offset=13), BinOp(Str('%d', lineno=111, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=111, col_offset=26), Index(Num(0, lineno=111, col_offset=30)), Load(), lineno=111, col_offset=26), lineno=111, col_offset=19), Str('year with century', lineno=111, col_offset=34)], Load(), lineno=111, col_offset=13), Tuple([Str('%%', lineno=113, col_offset=13), Str('%', lineno=113, col_offset=19), Str('single percent sign', lineno=113, col_offset=24)], Load(), lineno=113, col_offset=13)], Load(), lineno=90, col_offset=12), lineno=89, col_offset=8), For(Name('e', Store(), lineno=116, col_offset=12), Name('expectations', Load(), lineno=116, col_offset=17), [TryExcept([Assign([Name('result', Store(), lineno=119, col_offset=16)], Call(Attribute(Name('time', Load(), lineno=119, col_offset=25), 'strftime', Load(), lineno=119, col_offset=25), [Subscript(Name('e', Load(), lineno=119, col_offset=39), Index(Num(0, lineno=119, col_offset=41)), Load(), lineno=119, col_offset=39), Name('now', Load(), lineno=119, col_offset=45)], [], None, None, lineno=119, col_offset=25), lineno=119, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=120, col_offset=19), Name('error', Store(), lineno=120, col_offset=31), [Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=16), 'fail', Load(), lineno=121, col_offset=16), [BinOp(Str("strftime '%s' format gave error: %s", lineno=121, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=121, col_offset=67), Index(Num(0, lineno=121, col_offset=69)), Load(), lineno=121, col_offset=67), Name('error', Load(), lineno=121, col_offset=73)], Load(), lineno=121, col_offset=67), lineno=121, col_offset=26)], [], None, None, lineno=121, col_offset=16), lineno=121, col_offset=16)], lineno=120, col_offset=12)], [], lineno=118, col_offset=12), If(Call(Attribute(Name('re', Load(), lineno=122, col_offset=15), 'match', Load(), lineno=122, col_offset=15), [Call(Name('escapestr', Load(), lineno=122, col_offset=24), [Subscript(Name('e', Load(), lineno=122, col_offset=34), Index(Num(1, lineno=122, col_offset=36)), Load(), lineno=122, col_offset=34), Attribute(Name('self', Load(), lineno=122, col_offset=40), 'ampm', Load(), lineno=122, col_offset=40)], [], None, None, lineno=122, col_offset=24), Name('result', Load(), lineno=122, col_offset=52)], [], None, None, lineno=122, col_offset=15), [Continue( lineno=123, col_offset=16)], [], lineno=122, col_offset=12), If(BoolOp(Or(), [UnaryOp(Not(), Name('result', Load(), lineno=124, col_offset=19), lineno=124, col_offset=15), Compare(Subscript(Name('result', Load(), lineno=124, col_offset=29), Index(Num(0, lineno=124, col_offset=36)), Load(), lineno=124, col_offset=29), [Eq()], [Str('%', lineno=124, col_offset=42)], lineno=124, col_offset=29)], lineno=124, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=16), 'fail', Load(), lineno=125, col_offset=16), [BinOp(Str("strftime does not support standard '%s' format (%s)", lineno=125, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=126, col_offset=29), Index(Num(0, lineno=126, col_offset=31)), Load(), lineno=126, col_offset=29), Subscript(Name('e', Load(), lineno=126, col_offset=35), Index(Num(2, lineno=126, col_offset=37)), Load(), lineno=126, col_offset=35)], Load(), lineno=126, col_offset=29), lineno=125, col_offset=26)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=16), 'fail', Load(), lineno=128, col_offset=16), [BinOp(Str('Conflict for %s (%s): expected %s, but got %s', lineno=128, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=129, col_offset=29), Index(Num(0, lineno=129, col_offset=31)), Load(), lineno=129, col_offset=29), Subscript(Name('e', Load(), lineno=129, col_offset=35), Index(Num(2, lineno=129, col_offset=37)), Load(), lineno=129, col_offset=35), Subscript(Name('e', Load(), lineno=129, col_offset=41), Index(Num(1, lineno=129, col_offset=43)), Load(), lineno=129, col_offset=41), Name('result', Load(), lineno=129, col_offset=47)], Load(), lineno=129, col_offset=29), lineno=128, col_offset=26)], [], None, None, lineno=128, col_offset=16), lineno=128, col_offset=16)], lineno=124, col_offset=12)], [], lineno=116, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('strftest2', arguments([Name('self', Param(), lineno=131, col_offset=18), Name('now', Param(), lineno=131, col_offset=24)], None, None, []), [Assign([Name('nowsecs', Store(), lineno=132, col_offset=8)], Subscript(Call(Name('str', Load(), lineno=132, col_offset=18), [Call(Name('long', Load(), lineno=132, col_offset=22), [Name('now', Load(), lineno=132, col_offset=27)], [], None, None, lineno=132, col_offset=22)], [], None, None, lineno=132, col_offset=18), Slice(None, Num(-1, lineno=132, col_offset=35), None), Load(), lineno=132, col_offset=18), lineno=132, col_offset=8), Assign([Name('now', Store(), lineno=133, col_offset=8)], Attribute(Name('self', Load(), lineno=133, col_offset=14), 'now', Load(), lineno=133, col_offset=14), lineno=133, col_offset=8), Assign([Name('nonstandard_expectations', Store(), lineno=135, col_offset=8)], Tuple([Tuple([Str('%c', lineno=137, col_offset=13), Call(Name('fixasctime', Load(), lineno=137, col_offset=19), [Call(Attribute(Name('time', Load(), lineno=137, col_offset=30), 'asctime', Load(), lineno=137, col_offset=30), [Name('now', Load(), lineno=137, col_offset=43)], [], None, None, lineno=137, col_offset=30)], [], None, None, lineno=137, col_offset=19), Str('near-asctime() format', lineno=137, col_offset=50)], Load(), lineno=137, col_offset=13), Tuple([Str('%x', lineno=138, col_offset=13), BinOp(Str('%02d/%02d/%02d', lineno=138, col_offset=19), Mod(), Tuple([Subscript(Name('now', Load(), lineno=138, col_offset=39), Index(Num(1, lineno=138, col_offset=43)), Load(), lineno=138, col_offset=39), Subscript(Name('now', Load(), lineno=138, col_offset=47), Index(Num(2, lineno=138, col_offset=51)), Load(), lineno=138, col_offset=47), BinOp(Subscript(Name('now', Load(), lineno=138, col_offset=56), Index(Num(0, lineno=138, col_offset=60)), Load(), lineno=138, col_offset=56), Mod(), Num(100, lineno=138, col_offset=63), lineno=138, col_offset=56)], Load(), lineno=138, col_offset=39), lineno=138, col_offset=19), Str('%m/%d/%y %H:%M:%S', lineno=139, col_offset=12)], Load(), lineno=138, col_offset=13), Tuple([Str('%Z', lineno=140, col_offset=13), BinOp(Str('%s', lineno=140, col_offset=19), Mod(), Attribute(Name('self', Load(), lineno=140, col_offset=26), 'tz', Load(), lineno=140, col_offset=26), lineno=140, col_offset=19), Str('time zone name', lineno=140, col_offset=35)], Load(), lineno=140, col_offset=13), Tuple([Str('%D', lineno=143, col_offset=13), BinOp(Str('%02d/%02d/%02d', lineno=143, col_offset=19), Mod(), Tuple([Subscript(Name('now', Load(), lineno=143, col_offset=39), Index(Num(1, lineno=143, col_offset=43)), Load(), lineno=143, col_offset=39), Subscript(Name('now', Load(), lineno=143, col_offset=47), Index(Num(2, lineno=143, col_offset=51)), Load(), lineno=143, col_offset=47), BinOp(Subscript(Name('now', Load(), lineno=143, col_offset=56), Index(Num(0, lineno=143, col_offset=60)), Load(), lineno=143, col_offset=56), Mod(), Num(100, lineno=143, col_offset=63), lineno=143, col_offset=56)], Load(), lineno=143, col_offset=39), lineno=143, col_offset=19), Str('mm/dd/yy', lineno=143, col_offset=70)], Load(), lineno=143, col_offset=13), Tuple([Str('%e', lineno=144, col_offset=13), BinOp(Str('%2d', lineno=144, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=144, col_offset=27), Index(Num(2, lineno=144, col_offset=31)), Load(), lineno=144, col_offset=27), lineno=144, col_offset=19), Str('day of month as number, blank padded ( 0-31)', lineno=144, col_offset=35)], Load(), lineno=144, col_offset=13), Tuple([Str('%h', lineno=145, col_offset=13), Subscript(Attribute(Name('calendar', Load(), lineno=145, col_offset=19), 'month_abbr', Load(), lineno=145, col_offset=19), Index(Subscript(Name('now', Load(), lineno=145, col_offset=39), Index(Num(1, lineno=145, col_offset=43)), Load(), lineno=145, col_offset=39)), Load(), lineno=145, col_offset=19), Str('abbreviated month name', lineno=145, col_offset=48)], Load(), lineno=145, col_offset=13), Tuple([Str('%k', lineno=146, col_offset=13), BinOp(Str('%2d', lineno=146, col_offset=19), Mod(), Subscript(Name('now', Load(), lineno=146, col_offset=27), Index(Num(3, lineno=146, col_offset=31)), Load(), lineno=146, col_offset=27), lineno=146, col_offset=19), Str('hour, blank padded ( 0-23)', lineno=146, col_offset=35)], Load(), lineno=146, col_offset=13), Tuple([Str('%n', lineno=147, col_offset=13), Str('\n', lineno=147, col_offset=19), Str('newline character', lineno=147, col_offset=25)], Load(), lineno=147, col_offset=13), Tuple([Str('%r', lineno=148, col_offset=13), BinOp(Str('%02d:%02d:%02d %s', lineno=148, col_offset=19), Mod(), Tuple([Attribute(Name('self', Load(), lineno=148, col_offset=42), 'clock12', Load(), lineno=148, col_offset=42), Subscript(Name('now', Load(), lineno=148, col_offset=56), Index(Num(4, lineno=148, col_offset=60)), Load(), lineno=148, col_offset=56), Subscript(Name('now', Load(), lineno=148, col_offset=64), Index(Num(5, lineno=148, col_offset=68)), Load(), lineno=148, col_offset=64), Attribute(Name('self', Load(), lineno=148, col_offset=72), 'ampm', Load(), lineno=148, col_offset=72)], Load(), lineno=148, col_offset=42), lineno=148, col_offset=19), Str('%I:%M:%S %p', lineno=149, col_offset=12)], Load(), lineno=148, col_offset=13), Tuple([Str('%R', lineno=150, col_offset=13), BinOp(Str('%02d:%02d', lineno=150, col_offset=19), Mod(), Tuple([Subscript(Name('now', Load(), lineno=150, col_offset=34), Index(Num(3, lineno=150, col_offset=38)), Load(), lineno=150, col_offset=34), Subscript(Name('now', Load(), lineno=150, col_offset=42), Index(Num(4, lineno=150, col_offset=46)), Load(), lineno=150, col_offset=42)], Load(), lineno=150, col_offset=34), lineno=150, col_offset=19), Str('%H:%M', lineno=150, col_offset=51)], Load(), lineno=150, col_offset=13), Tuple([Str('%s', lineno=151, col_offset=13), Name('nowsecs', Load(), lineno=151, col_offset=19), Str('seconds since the Epoch in UCT', lineno=151, col_offset=28)], Load(), lineno=151, col_offset=13), Tuple([Str('%t', lineno=152, col_offset=13), Str('\t', lineno=152, col_offset=19), Str('tab character', lineno=152, col_offset=25)], Load(), lineno=152, col_offset=13), Tuple([Str('%T', lineno=153, col_offset=13), BinOp(Str('%02d:%02d:%02d', lineno=153, col_offset=19), Mod(), Tuple([Subscript(Name('now', Load(), lineno=153, col_offset=39), Index(Num(3, lineno=153, col_offset=43)), Load(), lineno=153, col_offset=39), Subscript(Name('now', Load(), lineno=153, col_offset=47), Index(Num(4, lineno=153, col_offset=51)), Load(), lineno=153, col_offset=47), Subscript(Name('now', Load(), lineno=153, col_offset=55), Index(Num(5, lineno=153, col_offset=59)), Load(), lineno=153, col_offset=55)], Load(), lineno=153, col_offset=39), lineno=153, col_offset=19), Str('%H:%M:%S', lineno=153, col_offset=64)], Load(), lineno=153, col_offset=13), Tuple([Str('%3y', lineno=154, col_offset=13), BinOp(Str('%03d', lineno=154, col_offset=20), Mod(), BinOp(Subscript(Name('now', Load(), lineno=154, col_offset=30), Index(Num(0, lineno=154, col_offset=34)), Load(), lineno=154, col_offset=30), Mod(), Num(100, lineno=154, col_offset=37), lineno=154, col_offset=30), lineno=154, col_offset=20), Str('year without century rendered using fieldwidth', lineno=155, col_offset=12)], Load(), lineno=154, col_offset=13)], Load(), lineno=137, col_offset=12), lineno=135, col_offset=8), For(Name('e', Store(), lineno=158, col_offset=12), Name('nonstandard_expectations', Load(), lineno=158, col_offset=17), [TryExcept([Assign([Name('result', Store(), lineno=160, col_offset=16)], Call(Attribute(Name('time', Load(), lineno=160, col_offset=25), 'strftime', Load(), lineno=160, col_offset=25), [Subscript(Name('e', Load(), lineno=160, col_offset=39), Index(Num(0, lineno=160, col_offset=41)), Load(), lineno=160, col_offset=39), Name('now', Load(), lineno=160, col_offset=45)], [], None, None, lineno=160, col_offset=25), lineno=160, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=161, col_offset=19), Name('result', Store(), lineno=161, col_offset=31), [Assign([Name('msg', Store(), lineno=162, col_offset=16)], BinOp(Str("Error for nonstandard '%s' format (%s): %s", lineno=162, col_offset=22), Mod(), Tuple([Subscript(Name('e', Load(), lineno=163, col_offset=23), Index(Num(0, lineno=163, col_offset=25)), Load(), lineno=163, col_offset=23), Subscript(Name('e', Load(), lineno=163, col_offset=29), Index(Num(2, lineno=163, col_offset=31)), Load(), lineno=163, col_offset=29), Call(Name('str', Load(), lineno=163, col_offset=35), [Name('result', Load(), lineno=163, col_offset=39)], [], None, None, lineno=163, col_offset=35)], Load(), lineno=163, col_offset=23), lineno=162, col_offset=22), lineno=162, col_offset=16), If(Attribute(Name('test_support', Load(), lineno=164, col_offset=19), 'verbose', Load(), lineno=164, col_offset=19), [Print(None, [Name('msg', Load(), lineno=165, col_offset=26)], True, lineno=165, col_offset=20)], [], lineno=164, col_offset=16), Continue( lineno=166, col_offset=16)], lineno=161, col_offset=12)], [], lineno=159, col_offset=12), If(Call(Attribute(Name('re', Load(), lineno=168, col_offset=15), 'match', Load(), lineno=168, col_offset=15), [Call(Name('escapestr', Load(), lineno=168, col_offset=24), [Subscript(Name('e', Load(), lineno=168, col_offset=34), Index(Num(1, lineno=168, col_offset=36)), Load(), lineno=168, col_offset=34), Attribute(Name('self', Load(), lineno=168, col_offset=40), 'ampm', Load(), lineno=168, col_offset=40)], [], None, None, lineno=168, col_offset=24), Name('result', Load(), lineno=168, col_offset=52)], [], None, None, lineno=168, col_offset=15), [If(Attribute(Name('test_support', Load(), lineno=169, col_offset=19), 'verbose', Load(), lineno=169, col_offset=19), [Print(None, [BinOp(Str("Supports nonstandard '%s' format (%s)", lineno=170, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=170, col_offset=69), Index(Num(0, lineno=170, col_offset=71)), Load(), lineno=170, col_offset=69), Subscript(Name('e', Load(), lineno=170, col_offset=75), Index(Num(2, lineno=170, col_offset=77)), Load(), lineno=170, col_offset=75)], Load(), lineno=170, col_offset=69), lineno=170, col_offset=26)], True, lineno=170, col_offset=20)], [], lineno=169, col_offset=16)], [If(BoolOp(Or(), [UnaryOp(Not(), Name('result', Load(), lineno=171, col_offset=21), lineno=171, col_offset=17), Compare(Subscript(Name('result', Load(), lineno=171, col_offset=31), Index(Num(0, lineno=171, col_offset=38)), Load(), lineno=171, col_offset=31), [Eq()], [Str('%', lineno=171, col_offset=44)], lineno=171, col_offset=31)], lineno=171, col_offset=17), [If(Attribute(Name('test_support', Load(), lineno=172, col_offset=19), 'verbose', Load(), lineno=172, col_offset=19), [Print(None, [BinOp(Str("Does not appear to support '%s' format (%s)", lineno=173, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=174, col_offset=28), Index(Num(0, lineno=174, col_offset=30)), Load(), lineno=174, col_offset=28), Subscript(Name('e', Load(), lineno=174, col_offset=34), Index(Num(2, lineno=174, col_offset=36)), Load(), lineno=174, col_offset=34)], Load(), lineno=174, col_offset=28), lineno=173, col_offset=26)], True, lineno=173, col_offset=20)], [], lineno=172, col_offset=16)], [If(Attribute(Name('test_support', Load(), lineno=176, col_offset=19), 'verbose', Load(), lineno=176, col_offset=19), [Print(None, [BinOp(Str("Conflict for nonstandard '%s' format (%s):", lineno=177, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=178, col_offset=28), Index(Num(0, lineno=178, col_offset=30)), Load(), lineno=178, col_offset=28), Subscript(Name('e', Load(), lineno=178, col_offset=34), Index(Num(2, lineno=178, col_offset=36)), Load(), lineno=178, col_offset=34)], Load(), lineno=178, col_offset=28), lineno=177, col_offset=26)], True, lineno=177, col_offset=20), Print(None, [BinOp(Str('  Expected %s, but got %s', lineno=179, col_offset=26), Mod(), Tuple([Subscript(Name('e', Load(), lineno=179, col_offset=57), Index(Num(1, lineno=179, col_offset=59)), Load(), lineno=179, col_offset=57), Name('result', Load(), lineno=179, col_offset=63)], Load(), lineno=179, col_offset=57), lineno=179, col_offset=26)], True, lineno=179, col_offset=20)], [], lineno=176, col_offset=16)], lineno=171, col_offset=17)], lineno=168, col_offset=12)], [], lineno=158, col_offset=8)], [], lineno=131, col_offset=4)], [], lineno=31, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=182, col_offset=4), 'run_unittest', Load(), lineno=182, col_offset=4), [Name('StrftimeTest', Load(), lineno=182, col_offset=30)], [], None, None, lineno=182, col_offset=4), lineno=182, col_offset=4)], [], lineno=181, col_offset=0), If(Compare(Name('__name__', Load(), lineno=184, col_offset=3), [Eq()], [Str('__main__', lineno=184, col_offset=15)], lineno=184, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=185, col_offset=4), [], [], None, None, lineno=185, col_offset=4), lineno=185, col_offset=4)], [], lineno=184, col_offset=0)])
