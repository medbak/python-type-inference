Module([Expr(Str('       turtle-example-suite:\n\n        xtx_lindenmayer_indian.py\n\nEach morning women in Tamil Nadu, in southern\nIndia, place designs, created by using rice\nflour and known as kolam on the thresholds of\ntheir homes.\n\nThese can be described by Lindenmayer systems,\nwhich can easily be implemented with turtle\ngraphics and Python.\n\nTwo examples are shown here:\n(1) the snake kolam\n(2) anklets of Krishna\n\nTaken from Marcia Ascher: Mathematics\nElsewhere, An Exploration of Ideas Across\nCultures\n\n', lineno=23, col_offset=-1), lineno=23, col_offset=-1), ImportFrom('turtle', [alias('*', None)], 0, lineno=28, col_offset=0), FunctionDef('replace', arguments([Name('seq', Param(), lineno=30, col_offset=13), Name('replacementRules', Param(), lineno=30, col_offset=18), Name('n', Param(), lineno=30, col_offset=36)], None, None, []), [For(Name('i', Store(), lineno=31, col_offset=8), Call(Name('range', Load(), lineno=31, col_offset=13), [Name('n', Load(), lineno=31, col_offset=19)], [], None, None, lineno=31, col_offset=13), [Assign([Name('newseq', Store(), lineno=32, col_offset=8)], Str('', lineno=32, col_offset=17), lineno=32, col_offset=8), For(Name('element', Store(), lineno=33, col_offset=12), Name('seq', Load(), lineno=33, col_offset=23), [Assign([Name('newseq', Store(), lineno=34, col_offset=12)], BinOp(Name('newseq', Load(), lineno=34, col_offset=21), Add(), Call(Attribute(Name('replacementRules', Load(), lineno=34, col_offset=30), 'get', Load(), lineno=34, col_offset=30), [Name('element', Load(), lineno=34, col_offset=51), Name('element', Load(), lineno=34, col_offset=59)], [], None, None, lineno=34, col_offset=30), lineno=34, col_offset=21), lineno=34, col_offset=12)], [], lineno=33, col_offset=8), Assign([Name('seq', Store(), lineno=35, col_offset=8)], Name('newseq', Load(), lineno=35, col_offset=14), lineno=35, col_offset=8)], [], lineno=31, col_offset=4), Return(Name('seq', Load(), lineno=36, col_offset=11), lineno=36, col_offset=4)], [], lineno=30, col_offset=0), FunctionDef('draw', arguments([Name('commands', Param(), lineno=38, col_offset=10), Name('rules', Param(), lineno=38, col_offset=20)], None, None, []), [For(Name('b', Store(), lineno=39, col_offset=8), Name('commands', Load(), lineno=39, col_offset=13), [TryExcept([Expr(Call(Subscript(Name('rules', Load(), lineno=41, col_offset=12), Index(Name('b', Load(), lineno=41, col_offset=18)), Load(), lineno=41, col_offset=12), [], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=42, col_offset=15), None, [TryExcept([Expr(Call(Name('draw', Load(), lineno=44, col_offset=16), [Subscript(Name('rules', Load(), lineno=44, col_offset=21), Index(Name('b', Load(), lineno=44, col_offset=27)), Load(), lineno=44, col_offset=21), Name('rules', Load(), lineno=44, col_offset=31)], [], None, None, lineno=44, col_offset=16), lineno=44, col_offset=16)], [ExceptHandler(None, None, [Pass( lineno=46, col_offset=16)], lineno=45, col_offset=12)], [], lineno=43, col_offset=12)], lineno=42, col_offset=8)], [], lineno=40, col_offset=8)], [], lineno=39, col_offset=4)], [], lineno=38, col_offset=0), FunctionDef('main', arguments([], None, None, []), [FunctionDef('r', arguments([], None, None, []), [Expr(Call(Name('right', Load(), lineno=56, col_offset=8), [Num(45, lineno=56, col_offset=14)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('l', arguments([], None, None, []), [Expr(Call(Name('left', Load(), lineno=59, col_offset=8), [Num(45, lineno=59, col_offset=13)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('f', arguments([], None, None, []), [Expr(Call(Name('forward', Load(), lineno=62, col_offset=8), [Num(7.5, lineno=62, col_offset=16)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8)], [], lineno=61, col_offset=4), Assign([Name('snake_rules', Store(), lineno=64, col_offset=4)], Dict([Str('-', lineno=64, col_offset=19), Str('+', lineno=64, col_offset=26), Str('f', lineno=64, col_offset=33), Str('b', lineno=64, col_offset=40)], [Name('r', Load(), lineno=64, col_offset=23), Name('l', Load(), lineno=64, col_offset=30), Name('f', Load(), lineno=64, col_offset=37), Str('f+f+f--f--f+f+f', lineno=64, col_offset=44)], lineno=64, col_offset=18), lineno=64, col_offset=4), Assign([Name('snake_replacementRules', Store(), lineno=65, col_offset=4)], Dict([Str('b', lineno=65, col_offset=30)], [Str('b+f+b--f--b+f+b', lineno=65, col_offset=35)], lineno=65, col_offset=29), lineno=65, col_offset=4), Assign([Name('snake_start', Store(), lineno=66, col_offset=4)], Str('b--f--b--f', lineno=66, col_offset=18), lineno=66, col_offset=4), Assign([Name('drawing', Store(), lineno=68, col_offset=4)], Call(Name('replace', Load(), lineno=68, col_offset=14), [Name('snake_start', Load(), lineno=68, col_offset=22), Name('snake_replacementRules', Load(), lineno=68, col_offset=35), Num(3, lineno=68, col_offset=59)], [], None, None, lineno=68, col_offset=14), lineno=68, col_offset=4), Expr(Call(Name('reset', Load(), lineno=70, col_offset=4), [], [], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4), Expr(Call(Name('speed', Load(), lineno=71, col_offset=4), [Num(3, lineno=71, col_offset=10)], [], None, None, lineno=71, col_offset=4), lineno=71, col_offset=4), Expr(Call(Name('tracer', Load(), lineno=72, col_offset=4), [Num(1, lineno=72, col_offset=11), Num(0, lineno=72, col_offset=13)], [], None, None, lineno=72, col_offset=4), lineno=72, col_offset=4), Expr(Call(Name('ht', Load(), lineno=73, col_offset=4), [], [], None, None, lineno=73, col_offset=4), lineno=73, col_offset=4), Expr(Call(Name('up', Load(), lineno=74, col_offset=4), [], [], None, None, lineno=74, col_offset=4), lineno=74, col_offset=4), Expr(Call(Name('backward', Load(), lineno=75, col_offset=4), [Num(195, lineno=75, col_offset=13)], [], None, None, lineno=75, col_offset=4), lineno=75, col_offset=4), Expr(Call(Name('down', Load(), lineno=76, col_offset=4), [], [], None, None, lineno=76, col_offset=4), lineno=76, col_offset=4), Expr(Call(Name('draw', Load(), lineno=77, col_offset=4), [Name('drawing', Load(), lineno=77, col_offset=9), Name('snake_rules', Load(), lineno=77, col_offset=18)], [], None, None, lineno=77, col_offset=4), lineno=77, col_offset=4), ImportFrom('time', [alias('sleep', None)], 0, lineno=79, col_offset=4), Expr(Call(Name('sleep', Load(), lineno=80, col_offset=4), [Num(3, lineno=80, col_offset=10)], [], None, None, lineno=80, col_offset=4), lineno=80, col_offset=4), FunctionDef('A', arguments([], None, None, []), [Expr(Call(Name('color', Load(), lineno=87, col_offset=8), [Str('red', lineno=87, col_offset=14)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Name('circle', Load(), lineno=88, col_offset=8), [Num(10, lineno=88, col_offset=15), Num(90, lineno=88, col_offset=18)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('B', arguments([], None, None, []), [ImportFrom('math', [alias('sqrt', None)], 0, lineno=91, col_offset=8), Expr(Call(Name('color', Load(), lineno=92, col_offset=8), [Str('black', lineno=92, col_offset=14)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Assign([Name('l', Store(), lineno=93, col_offset=8)], BinOp(Num(5, lineno=93, col_offset=12), Div(), Call(Name('sqrt', Load(), lineno=93, col_offset=14), [Num(2, lineno=93, col_offset=19)], [], None, None, lineno=93, col_offset=14), lineno=93, col_offset=12), lineno=93, col_offset=8), Expr(Call(Name('forward', Load(), lineno=94, col_offset=8), [Name('l', Load(), lineno=94, col_offset=16)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Expr(Call(Name('circle', Load(), lineno=95, col_offset=8), [Name('l', Load(), lineno=95, col_offset=15), Num(270, lineno=95, col_offset=18)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), Expr(Call(Name('forward', Load(), lineno=96, col_offset=8), [Name('l', Load(), lineno=96, col_offset=16)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8)], [], lineno=90, col_offset=4), FunctionDef('F', arguments([], None, None, []), [Expr(Call(Name('color', Load(), lineno=99, col_offset=8), [Str('green', lineno=99, col_offset=14)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Name('forward', Load(), lineno=100, col_offset=8), [Num(10, lineno=100, col_offset=16)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8)], [], lineno=98, col_offset=4), Assign([Name('krishna_rules', Store(), lineno=102, col_offset=4)], Dict([Str('a', lineno=102, col_offset=21), Str('b', lineno=102, col_offset=28), Str('f', lineno=102, col_offset=35)], [Name('A', Load(), lineno=102, col_offset=25), Name('B', Load(), lineno=102, col_offset=32), Name('F', Load(), lineno=102, col_offset=39)], lineno=102, col_offset=20), lineno=102, col_offset=4), Assign([Name('krishna_replacementRules', Store(), lineno=103, col_offset=4)], Dict([Str('a', lineno=103, col_offset=32), Str('b', lineno=103, col_offset=47)], [Str('afbfa', lineno=103, col_offset=38), Str('afbfbfbfa', lineno=103, col_offset=53)], lineno=103, col_offset=31), lineno=103, col_offset=4), Assign([Name('krishna_start', Store(), lineno=104, col_offset=4)], Str('fbfbfbfb', lineno=104, col_offset=20), lineno=104, col_offset=4), Expr(Call(Name('reset', Load(), lineno=106, col_offset=4), [], [], None, None, lineno=106, col_offset=4), lineno=106, col_offset=4), Expr(Call(Name('speed', Load(), lineno=107, col_offset=4), [Num(0, lineno=107, col_offset=10)], [], None, None, lineno=107, col_offset=4), lineno=107, col_offset=4), Expr(Call(Name('tracer', Load(), lineno=108, col_offset=4), [Num(3, lineno=108, col_offset=11), Num(0, lineno=108, col_offset=13)], [], None, None, lineno=108, col_offset=4), lineno=108, col_offset=4), Expr(Call(Name('ht', Load(), lineno=109, col_offset=4), [], [], None, None, lineno=109, col_offset=4), lineno=109, col_offset=4), Expr(Call(Name('left', Load(), lineno=110, col_offset=4), [Num(45, lineno=110, col_offset=9)], [], None, None, lineno=110, col_offset=4), lineno=110, col_offset=4), Assign([Name('drawing', Store(), lineno=111, col_offset=4)], Call(Name('replace', Load(), lineno=111, col_offset=14), [Name('krishna_start', Load(), lineno=111, col_offset=22), Name('krishna_replacementRules', Load(), lineno=111, col_offset=37), Num(3, lineno=111, col_offset=63)], [], None, None, lineno=111, col_offset=14), lineno=111, col_offset=4), Expr(Call(Name('draw', Load(), lineno=112, col_offset=4), [Name('drawing', Load(), lineno=112, col_offset=9), Name('krishna_rules', Load(), lineno=112, col_offset=18)], [], None, None, lineno=112, col_offset=4), lineno=112, col_offset=4), Expr(Call(Name('tracer', Load(), lineno=113, col_offset=4), [Num(1, lineno=113, col_offset=11)], [], None, None, lineno=113, col_offset=4), lineno=113, col_offset=4), Return(Str('Done!', lineno=114, col_offset=11), lineno=114, col_offset=4)], [], lineno=49, col_offset=0), If(Compare(Name('__name__', Load(), lineno=116, col_offset=3), [Eq()], [Str('__main__', lineno=116, col_offset=13)], lineno=116, col_offset=3), [Assign([Name('msg', Store(), lineno=117, col_offset=4)], Call(Name('main', Load(), lineno=117, col_offset=10), [], [], None, None, lineno=117, col_offset=10), lineno=117, col_offset=4), Print(None, [Name('msg', Load(), lineno=118, col_offset=10)], True, lineno=118, col_offset=4), Expr(Call(Name('mainloop', Load(), lineno=119, col_offset=4), [], [], None, None, lineno=119, col_offset=4), lineno=119, col_offset=4)], [], lineno=116, col_offset=0)])
