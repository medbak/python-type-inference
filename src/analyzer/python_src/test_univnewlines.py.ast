Module([ImportFrom('__future__', [alias('print_function', None)], 0, lineno=6, col_offset=0), ImportFrom('__future__', [alias('unicode_literals', None)], 0, lineno=7, col_offset=0), Import([alias('io', None)], lineno=9, col_offset=0), Import([alias('_pyio', 'pyio')], lineno=10, col_offset=0), Import([alias('unittest', None)], lineno=11, col_offset=0), Import([alias('os', None)], lineno=12, col_offset=0), Import([alias('sys', None)], lineno=13, col_offset=0), ImportFrom('test', [alias('test_support', 'support')], 0, lineno=14, col_offset=0), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=16, col_offset=7), [Attribute(Name('sys', Load(), lineno=16, col_offset=15), 'stdin', Load(), lineno=16, col_offset=15), Str(u'newlines', lineno=16, col_offset=26)], [], None, None, lineno=16, col_offset=7), lineno=16, col_offset=3), [Raise(Call(Attribute(Name('unittest', Load(), lineno=17, col_offset=10), 'SkipTest', Load(), lineno=17, col_offset=10), [Str(u'This Python does not have universal newline support', lineno=18, col_offset=8)], [], None, None, lineno=17, col_offset=10), None, None, lineno=17, col_offset=4)], [], lineno=16, col_offset=0), Assign([Name('FATX', Store(), lineno=20, col_offset=0)], BinOp(Str(u'x', lineno=20, col_offset=7), Mult(), BinOp(Num(2, lineno=20, col_offset=14), Pow(), Num(14, lineno=20, col_offset=17), lineno=20, col_offset=14), lineno=20, col_offset=7), lineno=20, col_offset=0), Assign([Name('DATA_TEMPLATE', Store(), lineno=22, col_offset=0)], List([Str(u'line1=1', lineno=23, col_offset=4), BinOp(BinOp(Str(u"line2='this is a very long line designed to go past any default ", lineno=24, col_offset=4), Add(), Str(u'buffer limits that exist in io.py but we also want to test ', lineno=25, col_offset=8), lineno=24, col_offset=4), Add(), Str(u"the uncommon case, naturally.'", lineno=26, col_offset=8), lineno=25, col_offset=70), Str(u'def line3():pass', lineno=27, col_offset=4), BinOp(Str(u"line4 = '%s'", lineno=28, col_offset=4), Mod(), Name('FATX', Load(), lineno=28, col_offset=21), lineno=28, col_offset=4)], Load(), lineno=22, col_offset=16), lineno=22, col_offset=0), Assign([Name('DATA_LF', Store(), lineno=31, col_offset=0)], BinOp(Call(Attribute(Str(u'\n', lineno=31, col_offset=10), 'join', Load(), lineno=31, col_offset=10), [Name('DATA_TEMPLATE', Load(), lineno=31, col_offset=20)], [], None, None, lineno=31, col_offset=10), Add(), Str(u'\n', lineno=31, col_offset=37), lineno=31, col_offset=10), lineno=31, col_offset=0), Assign([Name('DATA_CR', Store(), lineno=32, col_offset=0)], BinOp(Call(Attribute(Str(u'\r', lineno=32, col_offset=10), 'join', Load(), lineno=32, col_offset=10), [Name('DATA_TEMPLATE', Load(), lineno=32, col_offset=20)], [], None, None, lineno=32, col_offset=10), Add(), Str(u'\r', lineno=32, col_offset=37), lineno=32, col_offset=10), lineno=32, col_offset=0), Assign([Name('DATA_CRLF', Store(), lineno=33, col_offset=0)], BinOp(Call(Attribute(Str(u'\r\n', lineno=33, col_offset=12), 'join', Load(), lineno=33, col_offset=12), [Name('DATA_TEMPLATE', Load(), lineno=33, col_offset=24)], [], None, None, lineno=33, col_offset=12), Add(), Str(u'\r\n', lineno=33, col_offset=41), lineno=33, col_offset=12), lineno=33, col_offset=0), Assign([Name('DATA_MIXED', Store(), lineno=37, col_offset=0)], BinOp(Call(Attribute(Str(u'\n', lineno=37, col_offset=13), 'join', Load(), lineno=37, col_offset=13), [Name('DATA_TEMPLATE', Load(), lineno=37, col_offset=23)], [], None, None, lineno=37, col_offset=13), Add(), Str(u'\r', lineno=37, col_offset=40), lineno=37, col_offset=13), lineno=37, col_offset=0), Assign([Name('DATA_SPLIT', Store(), lineno=38, col_offset=0)], ListComp(BinOp(Name('x', Load(), lineno=38, col_offset=14), Add(), Str(u'\n', lineno=38, col_offset=18), lineno=38, col_offset=14), [comprehension(Name('x', Store(), lineno=38, col_offset=27), Name('DATA_TEMPLATE', Load(), lineno=38, col_offset=32), [])], lineno=38, col_offset=14), lineno=38, col_offset=0), ClassDef('TestGenericUnivNewlines', [Attribute(Name('unittest', Load(), lineno=40, col_offset=30), 'TestCase', Load(), lineno=40, col_offset=30)], [Assign([Name('READMODE', Store(), lineno=43, col_offset=4)], Str(u'r', lineno=43, col_offset=15), lineno=43, col_offset=4), Assign([Name('WRITEMODE', Store(), lineno=44, col_offset=4)], Str(u'wb', lineno=44, col_offset=16), lineno=44, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=46, col_offset=14)], None, None, []), [Assign([Name('data', Store(), lineno=47, col_offset=8)], Attribute(Name('self', Load(), lineno=47, col_offset=15), 'DATA', Load(), lineno=47, col_offset=15), lineno=47, col_offset=8), If(Compare(Str(u'b', lineno=48, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=48, col_offset=18), 'WRITEMODE', Load(), lineno=48, col_offset=18)], lineno=48, col_offset=11), [Assign([Name('data', Store(), lineno=49, col_offset=12)], Call(Attribute(Name('data', Load(), lineno=49, col_offset=19), 'encode', Load(), lineno=49, col_offset=19), [Str(u'ascii', lineno=49, col_offset=31)], [], None, None, lineno=49, col_offset=19), lineno=49, col_offset=12)], [], lineno=48, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=50, col_offset=13), 'open', Load(), lineno=50, col_offset=13), [Attribute(Name('support', Load(), lineno=50, col_offset=23), 'TESTFN', Load(), lineno=50, col_offset=23), Attribute(Name('self', Load(), lineno=50, col_offset=39), 'WRITEMODE', Load(), lineno=50, col_offset=39)], [], None, None, lineno=50, col_offset=13), Name('fp', Store(), lineno=50, col_offset=58), [Expr(Call(Attribute(Name('fp', Load(), lineno=51, col_offset=12), 'write', Load(), lineno=51, col_offset=12), [Name('data', Load(), lineno=51, col_offset=21)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12)], lineno=50, col_offset=13)], [], lineno=46, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=53, col_offset=17)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=55, col_offset=12), 'unlink', Load(), lineno=55, col_offset=12), [Attribute(Name('support', Load(), lineno=55, col_offset=22), 'TESTFN', Load(), lineno=55, col_offset=22)], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=57, col_offset=12)], lineno=56, col_offset=8)], [], lineno=54, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('test_read', arguments([Name('self', Param(), lineno=59, col_offset=18)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=60, col_offset=13), 'open', Load(), lineno=60, col_offset=13), [Attribute(Name('support', Load(), lineno=60, col_offset=23), 'TESTFN', Load(), lineno=60, col_offset=23), Attribute(Name('self', Load(), lineno=60, col_offset=39), 'READMODE', Load(), lineno=60, col_offset=39)], [], None, None, lineno=60, col_offset=13), Name('fp', Store(), lineno=60, col_offset=57), [Assign([Name('data', Store(), lineno=61, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=61, col_offset=19), 'read', Load(), lineno=61, col_offset=19), [], [], None, None, lineno=61, col_offset=19), lineno=61, col_offset=12)], lineno=60, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertEqual', Load(), lineno=62, col_offset=8), [Name('data', Load(), lineno=62, col_offset=25), Name('DATA_LF', Load(), lineno=62, col_offset=31)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertEqual', Load(), lineno=63, col_offset=8), [Call(Name('set', Load(), lineno=63, col_offset=25), [Attribute(Name('fp', Load(), lineno=63, col_offset=29), 'newlines', Load(), lineno=63, col_offset=29)], [], None, None, lineno=63, col_offset=25), Call(Name('set', Load(), lineno=63, col_offset=43), [Attribute(Name('self', Load(), lineno=63, col_offset=47), 'NEWLINE', Load(), lineno=63, col_offset=47)], [], None, None, lineno=63, col_offset=43)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('test_readlines', arguments([Name('self', Param(), lineno=65, col_offset=23)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=66, col_offset=13), 'open', Load(), lineno=66, col_offset=13), [Attribute(Name('support', Load(), lineno=66, col_offset=23), 'TESTFN', Load(), lineno=66, col_offset=23), Attribute(Name('self', Load(), lineno=66, col_offset=39), 'READMODE', Load(), lineno=66, col_offset=39)], [], None, None, lineno=66, col_offset=13), Name('fp', Store(), lineno=66, col_offset=57), [Assign([Name('data', Store(), lineno=67, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=67, col_offset=19), 'readlines', Load(), lineno=67, col_offset=19), [], [], None, None, lineno=67, col_offset=19), lineno=67, col_offset=12)], lineno=66, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertEqual', Load(), lineno=68, col_offset=8), [Name('data', Load(), lineno=68, col_offset=25), Name('DATA_SPLIT', Load(), lineno=68, col_offset=31)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Call(Name('set', Load(), lineno=69, col_offset=25), [Attribute(Name('fp', Load(), lineno=69, col_offset=29), 'newlines', Load(), lineno=69, col_offset=29)], [], None, None, lineno=69, col_offset=25), Call(Name('set', Load(), lineno=69, col_offset=43), [Attribute(Name('self', Load(), lineno=69, col_offset=47), 'NEWLINE', Load(), lineno=69, col_offset=47)], [], None, None, lineno=69, col_offset=43)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('test_readline', arguments([Name('self', Param(), lineno=71, col_offset=22)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=72, col_offset=13), 'open', Load(), lineno=72, col_offset=13), [Attribute(Name('support', Load(), lineno=72, col_offset=23), 'TESTFN', Load(), lineno=72, col_offset=23), Attribute(Name('self', Load(), lineno=72, col_offset=39), 'READMODE', Load(), lineno=72, col_offset=39)], [], None, None, lineno=72, col_offset=13), Name('fp', Store(), lineno=72, col_offset=57), [Assign([Name('data', Store(), lineno=73, col_offset=12)], List([], Load(), lineno=73, col_offset=19), lineno=73, col_offset=12), Assign([Name('d', Store(), lineno=74, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=74, col_offset=16), 'readline', Load(), lineno=74, col_offset=16), [], [], None, None, lineno=74, col_offset=16), lineno=74, col_offset=12), While(Name('d', Load(), lineno=75, col_offset=18), [Expr(Call(Attribute(Name('data', Load(), lineno=76, col_offset=16), 'append', Load(), lineno=76, col_offset=16), [Name('d', Load(), lineno=76, col_offset=28)], [], None, None, lineno=76, col_offset=16), lineno=76, col_offset=16), Assign([Name('d', Store(), lineno=77, col_offset=16)], Call(Attribute(Name('fp', Load(), lineno=77, col_offset=20), 'readline', Load(), lineno=77, col_offset=20), [], [], None, None, lineno=77, col_offset=20), lineno=77, col_offset=16)], [], lineno=75, col_offset=12)], lineno=72, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertEqual', Load(), lineno=78, col_offset=8), [Name('data', Load(), lineno=78, col_offset=25), Name('DATA_SPLIT', Load(), lineno=78, col_offset=31)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertEqual', Load(), lineno=79, col_offset=8), [Call(Name('set', Load(), lineno=79, col_offset=25), [Attribute(Name('fp', Load(), lineno=79, col_offset=29), 'newlines', Load(), lineno=79, col_offset=29)], [], None, None, lineno=79, col_offset=25), Call(Name('set', Load(), lineno=79, col_offset=43), [Attribute(Name('self', Load(), lineno=79, col_offset=47), 'NEWLINE', Load(), lineno=79, col_offset=47)], [], None, None, lineno=79, col_offset=43)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_seek', arguments([Name('self', Param(), lineno=81, col_offset=18)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=82, col_offset=13), 'open', Load(), lineno=82, col_offset=13), [Attribute(Name('support', Load(), lineno=82, col_offset=23), 'TESTFN', Load(), lineno=82, col_offset=23), Attribute(Name('self', Load(), lineno=82, col_offset=39), 'READMODE', Load(), lineno=82, col_offset=39)], [], None, None, lineno=82, col_offset=13), Name('fp', Store(), lineno=82, col_offset=57), [Expr(Call(Attribute(Name('fp', Load(), lineno=83, col_offset=12), 'readline', Load(), lineno=83, col_offset=12), [], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12), Assign([Name('pos', Store(), lineno=84, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=84, col_offset=18), 'tell', Load(), lineno=84, col_offset=18), [], [], None, None, lineno=84, col_offset=18), lineno=84, col_offset=12), Assign([Name('data', Store(), lineno=85, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=85, col_offset=19), 'readlines', Load(), lineno=85, col_offset=19), [], [], None, None, lineno=85, col_offset=19), lineno=85, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=12), 'assertEqual', Load(), lineno=86, col_offset=12), [Name('data', Load(), lineno=86, col_offset=29), Subscript(Name('DATA_SPLIT', Load(), lineno=86, col_offset=35), Slice(Num(1, lineno=86, col_offset=46), None, None), Load(), lineno=86, col_offset=35)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=87, col_offset=12), 'seek', Load(), lineno=87, col_offset=12), [Name('pos', Load(), lineno=87, col_offset=20)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12), Assign([Name('data', Store(), lineno=88, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=88, col_offset=19), 'readlines', Load(), lineno=88, col_offset=19), [], [], None, None, lineno=88, col_offset=19), lineno=88, col_offset=12)], lineno=82, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertEqual', Load(), lineno=89, col_offset=8), [Name('data', Load(), lineno=89, col_offset=25), Subscript(Name('DATA_SPLIT', Load(), lineno=89, col_offset=31), Slice(Num(1, lineno=89, col_offset=42), None, None), Load(), lineno=89, col_offset=31)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8)], [], lineno=81, col_offset=4)], [], lineno=40, col_offset=0), ClassDef('TestCRNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=92, col_offset=21)], [Assign([Name('NEWLINE', Store(), lineno=93, col_offset=4)], Str(u'\r', lineno=93, col_offset=14), lineno=93, col_offset=4), Assign([Name('DATA', Store(), lineno=94, col_offset=4)], Name('DATA_CR', Load(), lineno=94, col_offset=11), lineno=94, col_offset=4)], [], lineno=92, col_offset=0), ClassDef('TestLFNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=96, col_offset=21)], [Assign([Name('NEWLINE', Store(), lineno=97, col_offset=4)], Str(u'\n', lineno=97, col_offset=14), lineno=97, col_offset=4), Assign([Name('DATA', Store(), lineno=98, col_offset=4)], Name('DATA_LF', Load(), lineno=98, col_offset=11), lineno=98, col_offset=4)], [], lineno=96, col_offset=0), ClassDef('TestCRLFNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=100, col_offset=23)], [Assign([Name('NEWLINE', Store(), lineno=101, col_offset=4)], Str(u'\r\n', lineno=101, col_offset=14), lineno=101, col_offset=4), Assign([Name('DATA', Store(), lineno=102, col_offset=4)], Name('DATA_CRLF', Load(), lineno=102, col_offset=11), lineno=102, col_offset=4), FunctionDef('test_tell', arguments([Name('self', Param(), lineno=104, col_offset=18)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=105, col_offset=13), 'open', Load(), lineno=105, col_offset=13), [Attribute(Name('support', Load(), lineno=105, col_offset=23), 'TESTFN', Load(), lineno=105, col_offset=23), Attribute(Name('self', Load(), lineno=105, col_offset=39), 'READMODE', Load(), lineno=105, col_offset=39)], [], None, None, lineno=105, col_offset=13), Name('fp', Store(), lineno=105, col_offset=57), [Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=12), 'assertEqual', Load(), lineno=106, col_offset=12), [Call(Name('repr', Load(), lineno=106, col_offset=29), [Attribute(Name('fp', Load(), lineno=106, col_offset=34), 'newlines', Load(), lineno=106, col_offset=34)], [], None, None, lineno=106, col_offset=29), Call(Name('repr', Load(), lineno=106, col_offset=48), [Name('None', Load(), lineno=106, col_offset=53)], [], None, None, lineno=106, col_offset=48)], [], None, None, lineno=106, col_offset=12), lineno=106, col_offset=12), Assign([Name('data', Store(), lineno=107, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=107, col_offset=19), 'readline', Load(), lineno=107, col_offset=19), [], [], None, None, lineno=107, col_offset=19), lineno=107, col_offset=12), Assign([Name('pos', Store(), lineno=108, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=108, col_offset=18), 'tell', Load(), lineno=108, col_offset=18), [], [], None, None, lineno=108, col_offset=18), lineno=108, col_offset=12)], lineno=105, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'assertEqual', Load(), lineno=109, col_offset=8), [Call(Name('repr', Load(), lineno=109, col_offset=25), [Attribute(Name('fp', Load(), lineno=109, col_offset=30), 'newlines', Load(), lineno=109, col_offset=30)], [], None, None, lineno=109, col_offset=25), Call(Name('repr', Load(), lineno=109, col_offset=44), [Attribute(Name('self', Load(), lineno=109, col_offset=49), 'NEWLINE', Load(), lineno=109, col_offset=49)], [], None, None, lineno=109, col_offset=44)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8)], [], lineno=104, col_offset=4)], [], lineno=100, col_offset=0), ClassDef('TestMixedNewlines', [Name('TestGenericUnivNewlines', Load(), lineno=111, col_offset=24)], [Assign([Name('NEWLINE', Store(), lineno=112, col_offset=4)], Tuple([Str(u'\r', lineno=112, col_offset=15), Str(u'\n', lineno=112, col_offset=21)], Load(), lineno=112, col_offset=15), lineno=112, col_offset=4), Assign([Name('DATA', Store(), lineno=113, col_offset=4)], Name('DATA_MIXED', Load(), lineno=113, col_offset=11), lineno=113, col_offset=4)], [], lineno=111, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('base_tests', Store(), lineno=117, col_offset=4)], Tuple([Name('TestCRNewlines', Load(), lineno=117, col_offset=18), Name('TestLFNewlines', Load(), lineno=118, col_offset=18), Name('TestCRLFNewlines', Load(), lineno=119, col_offset=18), Name('TestMixedNewlines', Load(), lineno=120, col_offset=18)], Load(), lineno=117, col_offset=18), lineno=117, col_offset=4), Assign([Name('tests', Store(), lineno=121, col_offset=4)], List([], Load(), lineno=121, col_offset=12), lineno=121, col_offset=4), For(Name('test', Store(), lineno=123, col_offset=8), Name('base_tests', Load(), lineno=123, col_offset=16), [ClassDef('CTest', [Name('test', Load(), lineno=124, col_offset=20)], [Assign([Name('open', Store(), lineno=125, col_offset=12)], Attribute(Name('io', Load(), lineno=125, col_offset=19), 'open', Load(), lineno=125, col_offset=19), lineno=125, col_offset=12)], [], lineno=124, col_offset=8), Assign([Attribute(Name('CTest', Load(), lineno=126, col_offset=8), '__name__', Store(), lineno=126, col_offset=8)], Call(Name('str', Load(), lineno=126, col_offset=25), [BinOp(Str(u'C', lineno=126, col_offset=29), Add(), Attribute(Name('test', Load(), lineno=126, col_offset=35), '__name__', Load(), lineno=126, col_offset=35), lineno=126, col_offset=29)], [], None, None, lineno=126, col_offset=25), lineno=126, col_offset=8), ClassDef('PyTest', [Name('test', Load(), lineno=127, col_offset=21)], [Assign([Name('open', Store(), lineno=128, col_offset=12)], Call(Name('staticmethod', Load(), lineno=128, col_offset=19), [Attribute(Name('pyio', Load(), lineno=128, col_offset=32), 'open', Load(), lineno=128, col_offset=32)], [], None, None, lineno=128, col_offset=19), lineno=128, col_offset=12)], [], lineno=127, col_offset=8), Assign([Attribute(Name('PyTest', Load(), lineno=129, col_offset=8), '__name__', Store(), lineno=129, col_offset=8)], Call(Name('str', Load(), lineno=129, col_offset=26), [BinOp(Str(u'Py', lineno=129, col_offset=30), Add(), Attribute(Name('test', Load(), lineno=129, col_offset=37), '__name__', Load(), lineno=129, col_offset=37), lineno=129, col_offset=30)], [], None, None, lineno=129, col_offset=26), lineno=129, col_offset=8), Expr(Call(Attribute(Name('tests', Load(), lineno=130, col_offset=8), 'append', Load(), lineno=130, col_offset=8), [Name('CTest', Load(), lineno=130, col_offset=21)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('tests', Load(), lineno=131, col_offset=8), 'append', Load(), lineno=131, col_offset=8), [Name('PyTest', Load(), lineno=131, col_offset=21)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8)], [], lineno=123, col_offset=4), Expr(Call(Attribute(Name('support', Load(), lineno=132, col_offset=4), 'run_unittest', Load(), lineno=132, col_offset=4), [], [], Name('tests', Load(), lineno=132, col_offset=26), None, lineno=132, col_offset=4), lineno=132, col_offset=4)], [], lineno=116, col_offset=0), If(Compare(Name('__name__', Load(), lineno=134, col_offset=3), [Eq()], [Str(u'__main__', lineno=134, col_offset=15)], lineno=134, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=135, col_offset=4), [], [], None, None, lineno=135, col_offset=4), lineno=135, col_offset=4)], [], lineno=134, col_offset=0)])
