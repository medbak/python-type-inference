Module([Expr(Str('macresource - Locate and open the resources needed for a script.', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=3, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=4, col_offset=0), [Str('In 3.x, the macresource module is removed.', lineno=4, col_offset=9)], [keyword('stacklevel', Num(2, lineno=4, col_offset=66))], None, None, lineno=4, col_offset=0), lineno=4, col_offset=0), ImportFrom('Carbon', [alias('Res', None)], 0, lineno=6, col_offset=0), Import([alias('os', None)], lineno=7, col_offset=0), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Import([alias('macostools', None)], lineno=10, col_offset=0), ClassDef('ArgumentError', [Name('TypeError', Load(), lineno=12, col_offset=20)], [Pass( lineno=12, col_offset=32)], [], lineno=12, col_offset=0), ClassDef('ResourceFileNotFoundError', [Name('ImportError', Load(), lineno=13, col_offset=32)], [Pass( lineno=13, col_offset=46)], [], lineno=13, col_offset=0), FunctionDef('need', arguments([Name('restype', Param(), lineno=15, col_offset=9), Name('resid', Param(), lineno=15, col_offset=18), Name('filename', Param(), lineno=15, col_offset=25), Name('modname', Param(), lineno=15, col_offset=40)], None, None, [Name('None', Load(), lineno=15, col_offset=34), Name('None', Load(), lineno=15, col_offset=48)]), [Expr(Str('Open a resource file, if needed. restype and resid\n    are required parameters, and identify the resource for which to test. If it\n    is available we are done. If it is not available we look for a file filename\n    (default: modname with .rsrc appended) either in the same folder as\n    where modname was loaded from, or otherwise across sys.path.\n\n    Returns the refno of the resource file opened (or None)', lineno=22, col_offset=-1), lineno=22, col_offset=-1), If(BoolOp(And(), [Compare(Name('modname', Load(), lineno=24, col_offset=7), [Is()], [Name('None', Load(), lineno=24, col_offset=18)], lineno=24, col_offset=7), Compare(Name('filename', Load(), lineno=24, col_offset=27), [Is()], [Name('None', Load(), lineno=24, col_offset=39)], lineno=24, col_offset=27)], lineno=24, col_offset=7), [Raise(Name('ArgumentError', Load(), lineno=25, col_offset=14), Str('Either filename or modname argument (or both) must be given', lineno=25, col_offset=29), None, lineno=25, col_offset=8)], [], lineno=24, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=27, col_offset=7), [Name('resid', Load(), lineno=27, col_offset=12)], [], None, None, lineno=27, col_offset=7), [Is()], [Call(Name('type', Load(), lineno=27, col_offset=22), [Num(1, lineno=27, col_offset=27)], [], None, None, lineno=27, col_offset=22)], lineno=27, col_offset=7), [TryExcept([Assign([Name('h', Store(), lineno=29, col_offset=12)], Call(Attribute(Name('Res', Load(), lineno=29, col_offset=16), 'GetResource', Load(), lineno=29, col_offset=16), [Name('restype', Load(), lineno=29, col_offset=32), Name('resid', Load(), lineno=29, col_offset=41)], [], None, None, lineno=29, col_offset=16), lineno=29, col_offset=12)], [ExceptHandler(Attribute(Name('Res', Load(), lineno=30, col_offset=15), 'Error', Load(), lineno=30, col_offset=15), None, [Pass( lineno=31, col_offset=12)], lineno=30, col_offset=8)], [Return(Name('None', Load(), lineno=33, col_offset=19), lineno=33, col_offset=12)], lineno=28, col_offset=8)], [TryExcept([Assign([Name('h', Store(), lineno=36, col_offset=12)], Call(Attribute(Name('Res', Load(), lineno=36, col_offset=16), 'GetNamedResource', Load(), lineno=36, col_offset=16), [Name('restype', Load(), lineno=36, col_offset=37), Name('resid', Load(), lineno=36, col_offset=46)], [], None, None, lineno=36, col_offset=16), lineno=36, col_offset=12)], [ExceptHandler(Attribute(Name('Res', Load(), lineno=37, col_offset=15), 'Error', Load(), lineno=37, col_offset=15), None, [Pass( lineno=38, col_offset=12)], lineno=37, col_offset=8)], [Return(Name('None', Load(), lineno=40, col_offset=19), lineno=40, col_offset=12)], lineno=35, col_offset=8)], lineno=27, col_offset=4), If(UnaryOp(Not(), Name('filename', Load(), lineno=43, col_offset=11), lineno=43, col_offset=7), [If(Compare(Str('.', lineno=44, col_offset=11), [In()], [Name('modname', Load(), lineno=44, col_offset=18)], lineno=44, col_offset=11), [Assign([Name('filename', Store(), lineno=45, col_offset=12)], BinOp(Subscript(Call(Attribute(Name('modname', Load(), lineno=45, col_offset=23), 'split', Load(), lineno=45, col_offset=23), [Str('.', lineno=45, col_offset=37)], [], None, None, lineno=45, col_offset=23), Index(Num(-1, lineno=45, col_offset=43)), Load(), lineno=45, col_offset=23), Add(), Str('.rsrc', lineno=45, col_offset=48), lineno=45, col_offset=23), lineno=45, col_offset=12)], [Assign([Name('filename', Store(), lineno=47, col_offset=12)], BinOp(Name('modname', Load(), lineno=47, col_offset=23), Add(), Str('.rsrc', lineno=47, col_offset=33), lineno=47, col_offset=23), lineno=47, col_offset=12)], lineno=44, col_offset=8)], [], lineno=43, col_offset=4), Assign([Name('searchdirs', Store(), lineno=50, col_offset=4)], List([], Load(), lineno=50, col_offset=17), lineno=50, col_offset=4), If(Compare(Name('modname', Load(), lineno=51, col_offset=7), [Eq()], [Str('__main__', lineno=51, col_offset=18)], lineno=51, col_offset=7), [Assign([Name('searchdirs', Store(), lineno=53, col_offset=8)], List([Attribute(Name('os', Load(), lineno=53, col_offset=22), 'curdir', Load(), lineno=53, col_offset=22)], Load(), lineno=53, col_offset=21), lineno=53, col_offset=8)], [], lineno=51, col_offset=4), If(Compare(Name('modname', Load(), lineno=54, col_offset=7), [In()], [Attribute(Name('sys', Load(), lineno=54, col_offset=18), 'modules', Load(), lineno=54, col_offset=18)], lineno=54, col_offset=7), [Assign([Name('mod', Store(), lineno=55, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=55, col_offset=14), 'modules', Load(), lineno=55, col_offset=14), Index(Name('modname', Load(), lineno=55, col_offset=26)), Load(), lineno=55, col_offset=14), lineno=55, col_offset=8), If(Call(Name('hasattr', Load(), lineno=56, col_offset=11), [Name('mod', Load(), lineno=56, col_offset=19), Str('__file__', lineno=56, col_offset=24)], [], None, None, lineno=56, col_offset=11), [Assign([Name('searchdirs', Store(), lineno=57, col_offset=12)], List([Call(Attribute(Attribute(Name('os', Load(), lineno=57, col_offset=26), 'path', Load(), lineno=57, col_offset=26), 'dirname', Load(), lineno=57, col_offset=26), [Attribute(Name('mod', Load(), lineno=57, col_offset=42), '__file__', Load(), lineno=57, col_offset=42)], [], None, None, lineno=57, col_offset=26)], Load(), lineno=57, col_offset=25), lineno=57, col_offset=12)], [], lineno=56, col_offset=8)], [], lineno=54, col_offset=4), Expr(Call(Attribute(Name('searchdirs', Load(), lineno=58, col_offset=4), 'extend', Load(), lineno=58, col_offset=4), [Attribute(Name('sys', Load(), lineno=58, col_offset=22), 'path', Load(), lineno=58, col_offset=22)], [], None, None, lineno=58, col_offset=4), lineno=58, col_offset=4), For(Name('dir', Store(), lineno=61, col_offset=8), Name('searchdirs', Load(), lineno=61, col_offset=15), [Assign([Name('pathname', Store(), lineno=62, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=62, col_offset=19), 'path', Load(), lineno=62, col_offset=19), 'join', Load(), lineno=62, col_offset=19), [Name('dir', Load(), lineno=62, col_offset=32), Name('filename', Load(), lineno=62, col_offset=37)], [], None, None, lineno=62, col_offset=19), lineno=62, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=63, col_offset=11), 'path', Load(), lineno=63, col_offset=11), 'exists', Load(), lineno=63, col_offset=11), [Name('pathname', Load(), lineno=63, col_offset=26)], [], None, None, lineno=63, col_offset=11), [Break( lineno=64, col_offset=12)], [], lineno=63, col_offset=8)], [Raise(Name('ResourceFileNotFoundError', Load(), lineno=66, col_offset=14), Name('filename', Load(), lineno=66, col_offset=41), None, lineno=66, col_offset=8)], lineno=61, col_offset=4), Assign([Name('refno', Store(), lineno=68, col_offset=4)], Call(Name('open_pathname', Load(), lineno=68, col_offset=12), [Name('pathname', Load(), lineno=68, col_offset=26)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=71, col_offset=7), [Name('resid', Load(), lineno=71, col_offset=12)], [], None, None, lineno=71, col_offset=7), [Is()], [Call(Name('type', Load(), lineno=71, col_offset=22), [Num(1, lineno=71, col_offset=27)], [], None, None, lineno=71, col_offset=22)], lineno=71, col_offset=7), [Assign([Name('h', Store(), lineno=72, col_offset=8)], Call(Attribute(Name('Res', Load(), lineno=72, col_offset=12), 'GetResource', Load(), lineno=72, col_offset=12), [Name('restype', Load(), lineno=72, col_offset=28), Name('resid', Load(), lineno=72, col_offset=37)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=8)], [Assign([Name('h', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('Res', Load(), lineno=74, col_offset=12), 'GetNamedResource', Load(), lineno=74, col_offset=12), [Name('restype', Load(), lineno=74, col_offset=33), Name('resid', Load(), lineno=74, col_offset=42)], [], None, None, lineno=74, col_offset=12), lineno=74, col_offset=8)], lineno=71, col_offset=4), Return(Name('refno', Load(), lineno=75, col_offset=11), lineno=75, col_offset=4)], [], lineno=15, col_offset=0), FunctionDef('open_pathname', arguments([Name('pathname', Param(), lineno=77, col_offset=18), Name('verbose', Param(), lineno=77, col_offset=28)], None, None, [Num(0, lineno=77, col_offset=36)]), [Expr(Str('Open a resource file given by pathname, possibly decoding an\n    AppleSingle file', lineno=79, col_offset=-1), lineno=79, col_offset=-1), TryExcept([Assign([Name('refno', Store(), lineno=84, col_offset=8)], Call(Attribute(Name('Res', Load(), lineno=84, col_offset=16), 'FSOpenResourceFile', Load(), lineno=84, col_offset=16), [Name('pathname', Load(), lineno=84, col_offset=39), Str(u'', lineno=84, col_offset=49), Num(1, lineno=84, col_offset=54)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=8)], [ExceptHandler(Attribute(Name('Res', Load(), lineno=85, col_offset=11), 'Error', Load(), lineno=85, col_offset=11), Name('arg', Store(), lineno=85, col_offset=22), [If(Compare(Subscript(Name('arg', Load(), lineno=86, col_offset=11), Index(Num(0, lineno=86, col_offset=15)), Load(), lineno=86, col_offset=11), [NotEq()], [Num(-199, lineno=86, col_offset=22)], lineno=86, col_offset=11), [Raise(None, None, None, lineno=88, col_offset=12)], [], lineno=86, col_offset=8)], lineno=85, col_offset=4)], [Return(Name('refno', Load(), lineno=90, col_offset=15), lineno=90, col_offset=8)], lineno=83, col_offset=4), Assign([Name('pathname', Store(), lineno=92, col_offset=4)], Call(Name('_decode', Load(), lineno=92, col_offset=15), [Name('pathname', Load(), lineno=92, col_offset=23)], [keyword('verbose', Name('verbose', Load(), lineno=92, col_offset=41))], None, None, lineno=92, col_offset=15), lineno=92, col_offset=4), Assign([Name('refno', Store(), lineno=93, col_offset=4)], Call(Attribute(Name('Res', Load(), lineno=93, col_offset=12), 'FSOpenResourceFile', Load(), lineno=93, col_offset=12), [Name('pathname', Load(), lineno=93, col_offset=35), Str(u'', lineno=93, col_offset=45), Num(1, lineno=93, col_offset=50)], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=4)], [], lineno=77, col_offset=0), FunctionDef('resource_pathname', arguments([Name('pathname', Param(), lineno=95, col_offset=22), Name('verbose', Param(), lineno=95, col_offset=32)], None, None, [Num(0, lineno=95, col_offset=40)]), [Expr(Str('Return the pathname for a resource file (either DF or RF based).\n    If the pathname given already refers to such a file simply return it,\n    otherwise first decode it.', lineno=98, col_offset=-1), lineno=98, col_offset=-1), TryExcept([Assign([Name('refno', Store(), lineno=103, col_offset=8)], Call(Attribute(Name('Res', Load(), lineno=103, col_offset=16), 'FSOpenResourceFile', Load(), lineno=103, col_offset=16), [Name('pathname', Load(), lineno=103, col_offset=39), Str(u'', lineno=103, col_offset=49), Num(1, lineno=103, col_offset=54)], [], None, None, lineno=103, col_offset=16), lineno=103, col_offset=8)], [ExceptHandler(Attribute(Name('Res', Load(), lineno=104, col_offset=11), 'Error', Load(), lineno=104, col_offset=11), Name('arg', Store(), lineno=104, col_offset=22), [If(Compare(Subscript(Name('arg', Load(), lineno=105, col_offset=11), Index(Num(0, lineno=105, col_offset=15)), Load(), lineno=105, col_offset=11), [NotEq()], [Num(-199, lineno=105, col_offset=22)], lineno=105, col_offset=11), [Raise(None, None, None, lineno=107, col_offset=12)], [], lineno=105, col_offset=8)], lineno=104, col_offset=4)], [Return(Name('refno', Load(), lineno=109, col_offset=15), lineno=109, col_offset=8)], lineno=102, col_offset=4), Assign([Name('pathname', Store(), lineno=111, col_offset=4)], Call(Name('_decode', Load(), lineno=111, col_offset=15), [Name('pathname', Load(), lineno=111, col_offset=23)], [keyword('verbose', Name('verbose', Load(), lineno=111, col_offset=41))], None, None, lineno=111, col_offset=15), lineno=111, col_offset=4), Return(Name('pathname', Load(), lineno=112, col_offset=11), lineno=112, col_offset=4)], [], lineno=95, col_offset=0), FunctionDef('open_error_resource', arguments([], None, None, []), [Expr(Str('Open the resource file containing the error code to error message\n    mapping.', lineno=116, col_offset=-1), lineno=116, col_offset=-1), Expr(Call(Name('need', Load(), lineno=117, col_offset=4), [Str('Estr', lineno=117, col_offset=9), Num(1, lineno=117, col_offset=17)], [keyword('filename', Str('errors.rsrc', lineno=117, col_offset=29)), keyword('modname', Name('__name__', Load(), lineno=117, col_offset=52))], None, None, lineno=117, col_offset=4), lineno=117, col_offset=4)], [], lineno=114, col_offset=0), FunctionDef('_decode', arguments([Name('pathname', Param(), lineno=119, col_offset=12), Name('verbose', Param(), lineno=119, col_offset=22)], None, None, [Num(0, lineno=119, col_offset=30)]), [Assign([Name('newpathname', Store(), lineno=121, col_offset=4)], BinOp(Name('pathname', Load(), lineno=121, col_offset=18), Add(), Str('.df.rsrc', lineno=121, col_offset=29), lineno=121, col_offset=18), lineno=121, col_offset=4), If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=122, col_offset=7), 'path', Load(), lineno=122, col_offset=7), 'exists', Load(), lineno=122, col_offset=7), [Name('newpathname', Load(), lineno=122, col_offset=22)], [], None, None, lineno=122, col_offset=7), Compare(Attribute(Call(Attribute(Name('os', Load(), lineno=123, col_offset=8), 'stat', Load(), lineno=123, col_offset=8), [Name('newpathname', Load(), lineno=123, col_offset=16)], [], None, None, lineno=123, col_offset=8), 'st_mtime', Load(), lineno=123, col_offset=8), [GtE()], [Attribute(Call(Attribute(Name('os', Load(), lineno=123, col_offset=41), 'stat', Load(), lineno=123, col_offset=41), [Name('pathname', Load(), lineno=123, col_offset=49)], [], None, None, lineno=123, col_offset=41), 'st_mtime', Load(), lineno=123, col_offset=41)], lineno=123, col_offset=8)], lineno=122, col_offset=7), [Return(Name('newpathname', Load(), lineno=124, col_offset=15), lineno=124, col_offset=8)], [], lineno=122, col_offset=4), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=125, col_offset=7), [Name('os', Load(), lineno=125, col_offset=15), Str('access', lineno=125, col_offset=19)], [], None, None, lineno=125, col_offset=7), UnaryOp(Not(), Call(Attribute(Name('os', Load(), lineno=126, col_offset=8), 'access', Load(), lineno=126, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=126, col_offset=18), 'path', Load(), lineno=126, col_offset=18), 'dirname', Load(), lineno=126, col_offset=18), [Name('pathname', Load(), lineno=126, col_offset=34)], [], None, None, lineno=126, col_offset=18), BinOp(Attribute(Name('os', Load(), lineno=126, col_offset=45), 'W_OK', Load(), lineno=126, col_offset=45), BitOr(), Attribute(Name('os', Load(), lineno=126, col_offset=53), 'X_OK', Load(), lineno=126, col_offset=53), lineno=126, col_offset=45)], [], None, None, lineno=126, col_offset=8), lineno=125, col_offset=33)], lineno=125, col_offset=7), [Import([alias('tempfile', None)], lineno=129, col_offset=8), Assign([Tuple([Name('fd', Store(), lineno=130, col_offset=8), Name('newpathname', Store(), lineno=130, col_offset=12)], Store(), lineno=130, col_offset=8)], Call(Attribute(Name('tempfile', Load(), lineno=130, col_offset=26), 'mkstemp', Load(), lineno=130, col_offset=26), [Str('.rsrc', lineno=130, col_offset=43)], [], None, None, lineno=130, col_offset=26), lineno=130, col_offset=8)], [], lineno=125, col_offset=4), If(Name('verbose', Load(), lineno=131, col_offset=7), [Print(None, [Str('Decoding', lineno=132, col_offset=14), Name('pathname', Load(), lineno=132, col_offset=26), Str('to', lineno=132, col_offset=36), Name('newpathname', Load(), lineno=132, col_offset=42)], True, lineno=132, col_offset=8)], [], lineno=131, col_offset=4), Import([alias('applesingle', None)], lineno=133, col_offset=4), Expr(Call(Attribute(Name('applesingle', Load(), lineno=134, col_offset=4), 'decode', Load(), lineno=134, col_offset=4), [Name('pathname', Load(), lineno=134, col_offset=23), Name('newpathname', Load(), lineno=134, col_offset=33)], [keyword('resonly', Num(1, lineno=134, col_offset=54))], None, None, lineno=134, col_offset=4), lineno=134, col_offset=4), Return(Name('newpathname', Load(), lineno=135, col_offset=11), lineno=135, col_offset=4)], [], lineno=119, col_offset=0)])
