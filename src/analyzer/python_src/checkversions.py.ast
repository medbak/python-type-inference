Module([Expr(Str('Checkversions - recursively search a directory (default: sys.prefix)\nfor _checkversion.py files, and run each of them. This will tell you of\nnew versions available for any packages you have installed.', lineno=3, col_offset=-1), lineno=3, col_offset=-1), Import([alias('os', None)], lineno=5, col_offset=0), Import([alias('getopt', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('pyversioncheck', None)], lineno=8, col_offset=0), Assign([Name('CHECKNAME', Store(), lineno=10, col_offset=0)], Str('_checkversion.py', lineno=10, col_offset=10), lineno=10, col_offset=0), Assign([Name('VERBOSE', Store(), lineno=12, col_offset=0)], Num(1, lineno=12, col_offset=8), lineno=12, col_offset=0), Assign([Name('USAGE', Store(), lineno=14, col_offset=0)], Str('Usage: checkversions [-v verboselevel] [dir ...]\nRecursively examine a tree (default: sys.prefix) and for each package\nwith a _checkversion.py file compare the installed version against the current\nversion.\n\nValues for verboselevel:\n0 - Minimal output, one line per package\n1 - Also print descriptions for outdated packages (default)\n2 - Print information on each URL checked\n3 - Check every URL for packages with multiple locations', lineno=23, col_offset=-1), lineno=14, col_offset=0), FunctionDef('check1dir', arguments([Name('dummy', Param(), lineno=25, col_offset=14), Name('dir', Param(), lineno=25, col_offset=21), Name('files', Param(), lineno=25, col_offset=26)], None, None, []), [If(Compare(Name('CHECKNAME', Load(), lineno=26, col_offset=7), [In()], [Name('files', Load(), lineno=26, col_offset=20)], lineno=26, col_offset=7), [Assign([Name('fullname', Store(), lineno=27, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=27, col_offset=19), 'path', Load(), lineno=27, col_offset=19), 'join', Load(), lineno=27, col_offset=19), [Name('dir', Load(), lineno=27, col_offset=32), Name('CHECKNAME', Load(), lineno=27, col_offset=37)], [], None, None, lineno=27, col_offset=19), lineno=27, col_offset=8), TryExcept([Expr(Call(Name('execfile', Load(), lineno=29, col_offset=12), [Name('fullname', Load(), lineno=29, col_offset=21)], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=12)], [ExceptHandler(None, None, [Print(None, [Str('** Exception in', lineno=31, col_offset=18), Name('fullname', Load(), lineno=31, col_offset=37)], True, lineno=31, col_offset=12)], lineno=30, col_offset=8)], [], lineno=28, col_offset=8)], [], lineno=26, col_offset=4)], [], lineno=25, col_offset=0), FunctionDef('walk1tree', arguments([Name('tree', Param(), lineno=33, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('os', Load(), lineno=34, col_offset=4), 'path', Load(), lineno=34, col_offset=4), 'walk', Load(), lineno=34, col_offset=4), [Name('tree', Load(), lineno=34, col_offset=17), Name('check1dir', Load(), lineno=34, col_offset=23), Name('None', Load(), lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=4), lineno=34, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Global(['VERBOSE'], lineno=37, col_offset=4), TryExcept([Assign([Tuple([Name('options', Store(), lineno=39, col_offset=8), Name('arguments', Store(), lineno=39, col_offset=17)], Store(), lineno=39, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=39, col_offset=29), 'getopt', Load(), lineno=39, col_offset=29), [Subscript(Attribute(Name('sys', Load(), lineno=39, col_offset=43), 'argv', Load(), lineno=39, col_offset=43), Slice(Num(1, lineno=39, col_offset=52), None, None), Load(), lineno=39, col_offset=43), Str('v:', lineno=39, col_offset=57)], [], None, None, lineno=39, col_offset=29), lineno=39, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=40, col_offset=11), 'error', Load(), lineno=40, col_offset=11), None, [Print(None, [Name('USAGE', Load(), lineno=41, col_offset=14)], True, lineno=41, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=42, col_offset=8), 'exit', Load(), lineno=42, col_offset=8), [Num(1, lineno=42, col_offset=17)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8)], lineno=40, col_offset=4)], [], lineno=38, col_offset=4), For(Tuple([Name('o', Store(), lineno=43, col_offset=8), Name('a', Store(), lineno=43, col_offset=11)], Store(), lineno=43, col_offset=8), Name('options', Load(), lineno=43, col_offset=16), [If(Compare(Name('o', Load(), lineno=44, col_offset=11), [Eq()], [Str('-v', lineno=44, col_offset=16)], lineno=44, col_offset=11), [Assign([Name('VERBOSE', Store(), lineno=45, col_offset=12)], Call(Name('int', Load(), lineno=45, col_offset=22), [Name('a', Load(), lineno=45, col_offset=26)], [], None, None, lineno=45, col_offset=22), lineno=45, col_offset=12)], [], lineno=44, col_offset=8)], [], lineno=43, col_offset=4), If(UnaryOp(Not(), Name('arguments', Load(), lineno=46, col_offset=11), lineno=46, col_offset=7), [Assign([Name('arguments', Store(), lineno=47, col_offset=8)], List([Attribute(Name('sys', Load(), lineno=47, col_offset=21), 'prefix', Load(), lineno=47, col_offset=21)], Load(), lineno=47, col_offset=20), lineno=47, col_offset=8)], [], lineno=46, col_offset=4), For(Name('dir', Store(), lineno=48, col_offset=8), Name('arguments', Load(), lineno=48, col_offset=15), [Expr(Call(Name('walk1tree', Load(), lineno=49, col_offset=8), [Name('dir', Load(), lineno=49, col_offset=18)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=48, col_offset=4)], [], lineno=36, col_offset=0), If(Compare(Name('__name__', Load(), lineno=51, col_offset=3), [Eq()], [Str('__main__', lineno=51, col_offset=15)], lineno=51, col_offset=3), [Expr(Call(Name('main', Load(), lineno=52, col_offset=4), [], [], None, None, lineno=52, col_offset=4), lineno=52, col_offset=4)], [], lineno=51, col_offset=0)])
