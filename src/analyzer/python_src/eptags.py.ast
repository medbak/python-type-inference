Module([Expr(Str('Create a TAGS file for Python programs, usable with GNU Emacs.\n\nusage: eptags pyfiles...\n\nThe output TAGS file is usable with Emacs version 18, 19, 20.\nTagged are:\n - functions (even inside other defs or classes)\n - classes\n\neptags warns about files it cannot open.\neptags will not give warnings about duplicate tags.\n\nBUGS:\n   Because of tag duplication (methods with the same name in different\n   classes), TAGS files are not very useful for most object-oriented\n   python projects.\n', lineno=18, col_offset=-1), lineno=18, col_offset=-1), Import([alias('sys', None), alias('re', None)], lineno=19, col_offset=0), Assign([Name('expr', Store(), lineno=21, col_offset=0)], Str('^[ \\t]*(def|class)[ \\t]+([a-zA-Z_][a-zA-Z0-9_]*)[ \\t]*[:\\(]', lineno=21, col_offset=7), lineno=21, col_offset=0), Assign([Name('matcher', Store(), lineno=22, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=22, col_offset=10), 'compile', Load(), lineno=22, col_offset=10), [Name('expr', Load(), lineno=22, col_offset=21)], [], None, None, lineno=22, col_offset=10), lineno=22, col_offset=0), FunctionDef('treat_file', arguments([Name('filename', Param(), lineno=24, col_offset=15), Name('outfp', Param(), lineno=24, col_offset=25)], None, None, []), [Expr(Str("Append tags found in file named 'filename' to the open file 'outfp'", lineno=25, col_offset=4), lineno=25, col_offset=4), TryExcept([Assign([Name('fp', Store(), lineno=27, col_offset=8)], Call(Name('open', Load(), lineno=27, col_offset=13), [Name('filename', Load(), lineno=27, col_offset=18), Str('r', lineno=27, col_offset=28)], [], None, None, lineno=27, col_offset=13), lineno=27, col_offset=8)], [ExceptHandler(None, None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=29, col_offset=8), 'stderr', Load(), lineno=29, col_offset=8), 'write', Load(), lineno=29, col_offset=8), [BinOp(Str('Cannot open %s\n', lineno=29, col_offset=25), Mod(), Name('filename', Load(), lineno=29, col_offset=44), lineno=29, col_offset=25)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Return(None, lineno=30, col_offset=8)], lineno=28, col_offset=4)], [], lineno=26, col_offset=4), Assign([Name('charno', Store(), lineno=31, col_offset=4)], Num(0, lineno=31, col_offset=13), lineno=31, col_offset=4), Assign([Name('lineno', Store(), lineno=32, col_offset=4)], Num(0, lineno=32, col_offset=13), lineno=32, col_offset=4), Assign([Name('tags', Store(), lineno=33, col_offset=4)], List([], Load(), lineno=33, col_offset=11), lineno=33, col_offset=4), Assign([Name('size', Store(), lineno=34, col_offset=4)], Num(0, lineno=34, col_offset=11), lineno=34, col_offset=4), While(Num(1, lineno=35, col_offset=10), [Assign([Name('line', Store(), lineno=36, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=36, col_offset=15), 'readline', Load(), lineno=36, col_offset=15), [], [], None, None, lineno=36, col_offset=15), lineno=36, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=37, col_offset=15), lineno=37, col_offset=11), [Break( lineno=38, col_offset=12)], [], lineno=37, col_offset=8), Assign([Name('lineno', Store(), lineno=39, col_offset=8)], BinOp(Name('lineno', Load(), lineno=39, col_offset=17), Add(), Num(1, lineno=39, col_offset=26), lineno=39, col_offset=17), lineno=39, col_offset=8), Assign([Name('m', Store(), lineno=40, col_offset=8)], Call(Attribute(Name('matcher', Load(), lineno=40, col_offset=12), 'search', Load(), lineno=40, col_offset=12), [Name('line', Load(), lineno=40, col_offset=27)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=8), If(Name('m', Load(), lineno=41, col_offset=11), [Assign([Name('tag', Store(), lineno=42, col_offset=12)], BinOp(Call(Attribute(Name('m', Load(), lineno=42, col_offset=18), 'group', Load(), lineno=42, col_offset=18), [Num(0, lineno=42, col_offset=26)], [], None, None, lineno=42, col_offset=18), Add(), BinOp(Str('\x7f%d,%d\n', lineno=42, col_offset=31), Mod(), Tuple([Name('lineno', Load(), lineno=42, col_offset=48), Name('charno', Load(), lineno=42, col_offset=56)], Load(), lineno=42, col_offset=48), lineno=42, col_offset=31), lineno=42, col_offset=18), lineno=42, col_offset=12), Expr(Call(Attribute(Name('tags', Load(), lineno=43, col_offset=12), 'append', Load(), lineno=43, col_offset=12), [Name('tag', Load(), lineno=43, col_offset=24)], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=12), Assign([Name('size', Store(), lineno=44, col_offset=12)], BinOp(Name('size', Load(), lineno=44, col_offset=19), Add(), Call(Name('len', Load(), lineno=44, col_offset=26), [Name('tag', Load(), lineno=44, col_offset=30)], [], None, None, lineno=44, col_offset=26), lineno=44, col_offset=19), lineno=44, col_offset=12)], [], lineno=41, col_offset=8), Assign([Name('charno', Store(), lineno=45, col_offset=8)], BinOp(Name('charno', Load(), lineno=45, col_offset=17), Add(), Call(Name('len', Load(), lineno=45, col_offset=26), [Name('line', Load(), lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=26), lineno=45, col_offset=17), lineno=45, col_offset=8)], [], lineno=35, col_offset=4), Expr(Call(Attribute(Name('outfp', Load(), lineno=46, col_offset=4), 'write', Load(), lineno=46, col_offset=4), [BinOp(Str('\x0c\n%s,%d\n', lineno=46, col_offset=16), Mod(), Tuple([Name('filename', Load(), lineno=46, col_offset=33), Name('size', Load(), lineno=46, col_offset=42)], Load(), lineno=46, col_offset=33), lineno=46, col_offset=16)], [], None, None, lineno=46, col_offset=4), lineno=46, col_offset=4), For(Name('tag', Store(), lineno=47, col_offset=8), Name('tags', Load(), lineno=47, col_offset=15), [Expr(Call(Attribute(Name('outfp', Load(), lineno=48, col_offset=8), 'write', Load(), lineno=48, col_offset=8), [Name('tag', Load(), lineno=48, col_offset=20)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8)], [], lineno=47, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('outfp', Store(), lineno=51, col_offset=4)], Call(Name('open', Load(), lineno=51, col_offset=12), [Str('TAGS', lineno=51, col_offset=17), Str('w', lineno=51, col_offset=25)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=4), For(Name('filename', Store(), lineno=52, col_offset=8), Subscript(Attribute(Name('sys', Load(), lineno=52, col_offset=20), 'argv', Load(), lineno=52, col_offset=20), Slice(Num(1, lineno=52, col_offset=29), None, None), Load(), lineno=52, col_offset=20), [Expr(Call(Name('treat_file', Load(), lineno=53, col_offset=8), [Name('filename', Load(), lineno=53, col_offset=19), Name('outfp', Load(), lineno=53, col_offset=29)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=52, col_offset=4)], [], lineno=50, col_offset=0), If(Compare(Name('__name__', Load(), lineno=55, col_offset=3), [Eq()], [Str('__main__', lineno=55, col_offset=13)], lineno=55, col_offset=3), [Expr(Call(Name('main', Load(), lineno=56, col_offset=4), [], [], None, None, lineno=56, col_offset=4), lineno=56, col_offset=4)], [], lineno=55, col_offset=0)])
