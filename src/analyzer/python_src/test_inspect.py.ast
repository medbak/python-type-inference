Module([Import([alias('re', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), Import([alias('types', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('inspect', None)], lineno=5, col_offset=0), Import([alias('linecache', None)], lineno=6, col_offset=0), Import([alias('datetime', None)], lineno=7, col_offset=0), ImportFrom('UserList', [alias('UserList', None)], 0, lineno=8, col_offset=0), ImportFrom('UserDict', [alias('UserDict', None)], 0, lineno=9, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('check_py3k_warnings', None)], 0, lineno=11, col_offset=0), With(Call(Name('check_py3k_warnings', Load(), lineno=13, col_offset=5), [Tuple([Str('tuple parameter unpacking has been removed', lineno=14, col_offset=9), Name('SyntaxWarning', Load(), lineno=14, col_offset=55)], Load(), lineno=14, col_offset=9)], [keyword('quiet', Name('True', Load(), lineno=15, col_offset=14))], None, None, lineno=13, col_offset=5), None, [ImportFrom('test', [alias('inspect_fodder', 'mod')], 0, lineno=16, col_offset=4), ImportFrom('test', [alias('inspect_fodder2', 'mod2')], 0, lineno=17, col_offset=4)], lineno=13, col_offset=5), Import([alias('unicodedata', None)], lineno=20, col_offset=0), Assign([Name('modfile', Store(), lineno=32, col_offset=0)], Attribute(Name('mod', Load(), lineno=32, col_offset=10), '__file__', Load(), lineno=32, col_offset=10), lineno=32, col_offset=0), If(Call(Attribute(Name('modfile', Load(), lineno=33, col_offset=3), 'endswith', Load(), lineno=33, col_offset=3), [Tuple([Str('c', lineno=33, col_offset=21), Str('o', lineno=33, col_offset=26)], Load(), lineno=33, col_offset=21)], [], None, None, lineno=33, col_offset=3), [Assign([Name('modfile', Store(), lineno=34, col_offset=4)], Subscript(Name('modfile', Load(), lineno=34, col_offset=14), Slice(None, Num(-1, lineno=34, col_offset=24), None), Load(), lineno=34, col_offset=14), lineno=34, col_offset=4)], [], lineno=33, col_offset=0), Import([alias('__builtin__', None)], lineno=36, col_offset=0), TryExcept([Expr(BinOp(Num(1, lineno=39, col_offset=4), FloorDiv(), Num(0, lineno=39, col_offset=9), lineno=39, col_offset=4), lineno=39, col_offset=4)], [ExceptHandler(None, None, [Assign([Name('tb', Store(), lineno=41, col_offset=4)], Attribute(Name('sys', Load(), lineno=41, col_offset=9), 'exc_traceback', Load(), lineno=41, col_offset=9), lineno=41, col_offset=4)], lineno=40, col_offset=0)], [], lineno=38, col_offset=0), Assign([Name('git', Store(), lineno=43, col_offset=0)], Call(Attribute(Name('mod', Load(), lineno=43, col_offset=6), 'StupidGit', Load(), lineno=43, col_offset=6), [], [], None, None, lineno=43, col_offset=6), lineno=43, col_offset=0), ClassDef('IsTestBase', [Attribute(Name('unittest', Load(), lineno=45, col_offset=17), 'TestCase', Load(), lineno=45, col_offset=17)], [Assign([Name('predicates', Store(), lineno=46, col_offset=4)], Call(Name('set', Load(), lineno=46, col_offset=17), [List([Attribute(Name('inspect', Load(), lineno=46, col_offset=22), 'isbuiltin', Load(), lineno=46, col_offset=22), Attribute(Name('inspect', Load(), lineno=46, col_offset=41), 'isclass', Load(), lineno=46, col_offset=41), Attribute(Name('inspect', Load(), lineno=46, col_offset=58), 'iscode', Load(), lineno=46, col_offset=58), Attribute(Name('inspect', Load(), lineno=47, col_offset=22), 'isframe', Load(), lineno=47, col_offset=22), Attribute(Name('inspect', Load(), lineno=47, col_offset=39), 'isfunction', Load(), lineno=47, col_offset=39), Attribute(Name('inspect', Load(), lineno=47, col_offset=59), 'ismethod', Load(), lineno=47, col_offset=59), Attribute(Name('inspect', Load(), lineno=48, col_offset=22), 'ismodule', Load(), lineno=48, col_offset=22), Attribute(Name('inspect', Load(), lineno=48, col_offset=40), 'istraceback', Load(), lineno=48, col_offset=40), Attribute(Name('inspect', Load(), lineno=49, col_offset=22), 'isgenerator', Load(), lineno=49, col_offset=22), Attribute(Name('inspect', Load(), lineno=49, col_offset=43), 'isgeneratorfunction', Load(), lineno=49, col_offset=43)], Load(), lineno=46, col_offset=21)], [], None, None, lineno=46, col_offset=17), lineno=46, col_offset=4), FunctionDef('istest', arguments([Name('self', Param(), lineno=51, col_offset=15), Name('predicate', Param(), lineno=51, col_offset=21), Name('exp', Param(), lineno=51, col_offset=32)], None, None, []), [Assign([Name('obj', Store(), lineno=52, col_offset=8)], Call(Name('eval', Load(), lineno=52, col_offset=14), [Name('exp', Load(), lineno=52, col_offset=19)], [], None, None, lineno=52, col_offset=14), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertTrue', Load(), lineno=53, col_offset=8), [Call(Name('predicate', Load(), lineno=53, col_offset=24), [Name('obj', Load(), lineno=53, col_offset=34)], [], None, None, lineno=53, col_offset=24), BinOp(Str('%s(%s)', lineno=53, col_offset=40), Mod(), Tuple([Attribute(Name('predicate', Load(), lineno=53, col_offset=52), '__name__', Load(), lineno=53, col_offset=52), Name('exp', Load(), lineno=53, col_offset=72)], Load(), lineno=53, col_offset=52), lineno=53, col_offset=40)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), For(Name('other', Store(), lineno=55, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=55, col_offset=21), 'predicates', Load(), lineno=55, col_offset=21), Sub(), Call(Name('set', Load(), lineno=55, col_offset=39), [List([Name('predicate', Load(), lineno=55, col_offset=44)], Load(), lineno=55, col_offset=43)], [], None, None, lineno=55, col_offset=39), lineno=55, col_offset=21), [If(BoolOp(And(), [Compare(Name('predicate', Load(), lineno=56, col_offset=15), [Eq()], [Attribute(Name('inspect', Load(), lineno=56, col_offset=28), 'isgeneratorfunction', Load(), lineno=56, col_offset=28)], lineno=56, col_offset=15), Compare(Name('other', Load(), lineno=57, col_offset=15), [Eq()], [Attribute(Name('inspect', Load(), lineno=57, col_offset=24), 'isfunction', Load(), lineno=57, col_offset=24)], lineno=57, col_offset=15)], lineno=56, col_offset=15), [Continue( lineno=58, col_offset=16)], [], lineno=56, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'assertFalse', Load(), lineno=59, col_offset=12), [Call(Name('other', Load(), lineno=59, col_offset=29), [Name('obj', Load(), lineno=59, col_offset=35)], [], None, None, lineno=59, col_offset=29), BinOp(Str('not %s(%s)', lineno=59, col_offset=41), Mod(), Tuple([Attribute(Name('other', Load(), lineno=59, col_offset=57), '__name__', Load(), lineno=59, col_offset=57), Name('exp', Load(), lineno=59, col_offset=73)], Load(), lineno=59, col_offset=57), lineno=59, col_offset=41)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12)], [], lineno=55, col_offset=8)], [], lineno=51, col_offset=4)], [], lineno=45, col_offset=0), FunctionDef('generator_function_example', arguments([Name('self', Param(), lineno=61, col_offset=31)], None, None, []), [For(Name('i', Store(), lineno=62, col_offset=8), Call(Name('xrange', Load(), lineno=62, col_offset=13), [Num(2, lineno=62, col_offset=20)], [], None, None, lineno=62, col_offset=13), [Expr(Yield(Name('i', Load(), lineno=63, col_offset=14), lineno=63, col_offset=8), lineno=63, col_offset=8)], [], lineno=62, col_offset=4)], [], lineno=61, col_offset=0), ClassDef('TestPredicates', [Name('IsTestBase', Load(), lineno=65, col_offset=21)], [FunctionDef('test_sixteen', arguments([Name('self', Param(), lineno=66, col_offset=21)], None, None, []), [Assign([Name('count', Store(), lineno=67, col_offset=8)], Call(Name('len', Load(), lineno=67, col_offset=16), [Call(Name('filter', Load(), lineno=67, col_offset=20), [Lambda(arguments([Name('x', Param(), lineno=67, col_offset=34)], None, None, []), Call(Attribute(Name('x', Load(), lineno=67, col_offset=36), 'startswith', Load(), lineno=67, col_offset=36), [Str('is', lineno=67, col_offset=49)], [], None, None, lineno=67, col_offset=36), lineno=67, col_offset=27), Call(Name('dir', Load(), lineno=67, col_offset=56), [Name('inspect', Load(), lineno=67, col_offset=60)], [], None, None, lineno=67, col_offset=56)], [], None, None, lineno=67, col_offset=20)], [], None, None, lineno=67, col_offset=16), lineno=67, col_offset=8), Assign([Name('expected', Store(), lineno=70, col_offset=8)], Num(16, lineno=70, col_offset=19), lineno=70, col_offset=8), Assign([Name('err_msg', Store(), lineno=71, col_offset=8)], BinOp(Str('There are %d (not %d) is* functions', lineno=71, col_offset=18), Mod(), Tuple([Name('count', Load(), lineno=71, col_offset=59), Name('expected', Load(), lineno=71, col_offset=66)], Load(), lineno=71, col_offset=59), lineno=71, col_offset=18), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Name('count', Load(), lineno=72, col_offset=25), Name('expected', Load(), lineno=72, col_offset=32), Name('err_msg', Load(), lineno=72, col_offset=42)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('test_excluding_predicates', arguments([Name('self', Param(), lineno=75, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'istest', Load(), lineno=76, col_offset=8), [Attribute(Name('inspect', Load(), lineno=76, col_offset=20), 'isbuiltin', Load(), lineno=76, col_offset=20), Str('sys.exit', lineno=76, col_offset=39)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'istest', Load(), lineno=77, col_offset=8), [Attribute(Name('inspect', Load(), lineno=77, col_offset=20), 'isbuiltin', Load(), lineno=77, col_offset=20), Str('[].append', lineno=77, col_offset=39)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'istest', Load(), lineno=78, col_offset=8), [Attribute(Name('inspect', Load(), lineno=78, col_offset=20), 'iscode', Load(), lineno=78, col_offset=20), Str('mod.spam.func_code', lineno=78, col_offset=36)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'istest', Load(), lineno=79, col_offset=8), [Attribute(Name('inspect', Load(), lineno=79, col_offset=20), 'isframe', Load(), lineno=79, col_offset=20), Str('tb.tb_frame', lineno=79, col_offset=37)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'istest', Load(), lineno=80, col_offset=8), [Attribute(Name('inspect', Load(), lineno=80, col_offset=20), 'isfunction', Load(), lineno=80, col_offset=20), Str('mod.spam', lineno=80, col_offset=40)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'istest', Load(), lineno=81, col_offset=8), [Attribute(Name('inspect', Load(), lineno=81, col_offset=20), 'ismethod', Load(), lineno=81, col_offset=20), Str('mod.StupidGit.abuse', lineno=81, col_offset=38)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'istest', Load(), lineno=82, col_offset=8), [Attribute(Name('inspect', Load(), lineno=82, col_offset=20), 'ismethod', Load(), lineno=82, col_offset=20), Str('git.argue', lineno=82, col_offset=38)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=83, col_offset=8), 'istest', Load(), lineno=83, col_offset=8), [Attribute(Name('inspect', Load(), lineno=83, col_offset=20), 'ismodule', Load(), lineno=83, col_offset=20), Str('mod', lineno=83, col_offset=38)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'istest', Load(), lineno=84, col_offset=8), [Attribute(Name('inspect', Load(), lineno=84, col_offset=20), 'istraceback', Load(), lineno=84, col_offset=20), Str('tb', lineno=84, col_offset=41)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=8), 'istest', Load(), lineno=85, col_offset=8), [Attribute(Name('inspect', Load(), lineno=85, col_offset=20), 'isdatadescriptor', Load(), lineno=85, col_offset=20), Str('__builtin__.file.closed', lineno=85, col_offset=46)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=8), 'istest', Load(), lineno=86, col_offset=8), [Attribute(Name('inspect', Load(), lineno=86, col_offset=20), 'isdatadescriptor', Load(), lineno=86, col_offset=20), Str('__builtin__.file.softspace', lineno=86, col_offset=46)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'istest', Load(), lineno=87, col_offset=8), [Attribute(Name('inspect', Load(), lineno=87, col_offset=20), 'isgenerator', Load(), lineno=87, col_offset=20), Str('(x for x in xrange(2))', lineno=87, col_offset=41)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'istest', Load(), lineno=88, col_offset=8), [Attribute(Name('inspect', Load(), lineno=88, col_offset=20), 'isgeneratorfunction', Load(), lineno=88, col_offset=20), Str('generator_function_example', lineno=88, col_offset=49)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), If(Call(Name('hasattr', Load(), lineno=89, col_offset=11), [Name('types', Load(), lineno=89, col_offset=19), Str('GetSetDescriptorType', lineno=89, col_offset=26)], [], None, None, lineno=89, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=12), 'istest', Load(), lineno=90, col_offset=12), [Attribute(Name('inspect', Load(), lineno=90, col_offset=24), 'isgetsetdescriptor', Load(), lineno=90, col_offset=24), Str('type(tb.tb_frame).f_locals', lineno=91, col_offset=24)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=12), 'assertFalse', Load(), lineno=93, col_offset=12), [Call(Attribute(Name('inspect', Load(), lineno=93, col_offset=29), 'isgetsetdescriptor', Load(), lineno=93, col_offset=29), [Attribute(Call(Name('type', Load(), lineno=93, col_offset=56), [Attribute(Name('tb', Load(), lineno=93, col_offset=61), 'tb_frame', Load(), lineno=93, col_offset=61)], [], None, None, lineno=93, col_offset=56), 'f_locals', Load(), lineno=93, col_offset=56)], [], None, None, lineno=93, col_offset=29)], [], None, None, lineno=93, col_offset=12), lineno=93, col_offset=12)], lineno=89, col_offset=8), If(Call(Name('hasattr', Load(), lineno=94, col_offset=11), [Name('types', Load(), lineno=94, col_offset=19), Str('MemberDescriptorType', lineno=94, col_offset=26)], [], None, None, lineno=94, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=12), 'istest', Load(), lineno=95, col_offset=12), [Attribute(Name('inspect', Load(), lineno=95, col_offset=24), 'ismemberdescriptor', Load(), lineno=95, col_offset=24), Str('datetime.timedelta.days', lineno=95, col_offset=52)], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'assertFalse', Load(), lineno=97, col_offset=12), [Call(Attribute(Name('inspect', Load(), lineno=97, col_offset=29), 'ismemberdescriptor', Load(), lineno=97, col_offset=29), [Attribute(Attribute(Name('datetime', Load(), lineno=97, col_offset=56), 'timedelta', Load(), lineno=97, col_offset=56), 'days', Load(), lineno=97, col_offset=56)], [], None, None, lineno=97, col_offset=29)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12)], lineno=94, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('test_isroutine', arguments([Name('self', Param(), lineno=99, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertTrue', Load(), lineno=100, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=100, col_offset=24), 'isroutine', Load(), lineno=100, col_offset=24), [Attribute(Name('mod', Load(), lineno=100, col_offset=42), 'spam', Load(), lineno=100, col_offset=42)], [], None, None, lineno=100, col_offset=24)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertTrue', Load(), lineno=101, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=101, col_offset=24), 'isroutine', Load(), lineno=101, col_offset=24), [Attribute(List([], Load(), lineno=101, col_offset=42), 'count', Load(), lineno=101, col_offset=42)], [], None, None, lineno=101, col_offset=24)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=99, col_offset=4), FunctionDef('test_isclass', arguments([Name('self', Param(), lineno=103, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'istest', Load(), lineno=104, col_offset=8), [Attribute(Name('inspect', Load(), lineno=104, col_offset=20), 'isclass', Load(), lineno=104, col_offset=20), Str('mod.StupidGit', lineno=104, col_offset=37)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=8), 'assertTrue', Load(), lineno=105, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=105, col_offset=24), 'isclass', Load(), lineno=105, col_offset=24), [Name('list', Load(), lineno=105, col_offset=40)], [], None, None, lineno=105, col_offset=24)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8), ClassDef('newstyle', [Name('object', Load(), lineno=107, col_offset=23)], [Pass( lineno=107, col_offset=32)], [], lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertTrue', Load(), lineno=108, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=108, col_offset=24), 'isclass', Load(), lineno=108, col_offset=24), [Name('newstyle', Load(), lineno=108, col_offset=40)], [], None, None, lineno=108, col_offset=24)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), ClassDef('CustomGetattr', [Name('object', Load(), lineno=110, col_offset=28)], [FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=111, col_offset=28), Name('attr', Param(), lineno=111, col_offset=34)], None, None, []), [Return(Name('None', Load(), lineno=112, col_offset=23), lineno=112, col_offset=16)], [], lineno=111, col_offset=12)], [], lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertFalse', Load(), lineno=113, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=113, col_offset=25), 'isclass', Load(), lineno=113, col_offset=25), [Call(Name('CustomGetattr', Load(), lineno=113, col_offset=41), [], [], None, None, lineno=113, col_offset=41)], [], None, None, lineno=113, col_offset=25)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('test_get_slot_members', arguments([Name('self', Param(), lineno=115, col_offset=30)], None, None, []), [ClassDef('C', [Name('object', Load(), lineno=116, col_offset=16)], [Assign([Name('__slots__', Store(), lineno=117, col_offset=12)], Tuple([Str('a', lineno=117, col_offset=25), Str('b', lineno=117, col_offset=30)], Load(), lineno=117, col_offset=25), lineno=117, col_offset=12)], [], lineno=116, col_offset=8), Assign([Name('x', Store(), lineno=119, col_offset=8)], Call(Name('C', Load(), lineno=119, col_offset=12), [], [], None, None, lineno=119, col_offset=12), lineno=119, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=120, col_offset=8), 'a', Store(), lineno=120, col_offset=8)], Num(42, lineno=120, col_offset=14), lineno=120, col_offset=8), Assign([Name('members', Store(), lineno=121, col_offset=8)], Call(Name('dict', Load(), lineno=121, col_offset=18), [Call(Attribute(Name('inspect', Load(), lineno=121, col_offset=23), 'getmembers', Load(), lineno=121, col_offset=23), [Name('x', Load(), lineno=121, col_offset=42)], [], None, None, lineno=121, col_offset=23)], [], None, None, lineno=121, col_offset=18), lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'assertIn', Load(), lineno=122, col_offset=8), [Str('a', lineno=122, col_offset=22), Name('members', Load(), lineno=122, col_offset=27)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=8), 'assertNotIn', Load(), lineno=123, col_offset=8), [Str('b', lineno=123, col_offset=25), Name('members', Load(), lineno=123, col_offset=30)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('test_isabstract', arguments([Name('self', Param(), lineno=125, col_offset=24)], None, None, []), [ImportFrom('abc', [alias('ABCMeta', None), alias('abstractmethod', None)], 0, lineno=126, col_offset=8), ClassDef('AbstractClassExample', [Name('object', Load(), lineno=128, col_offset=35)], [Assign([Name('__metaclass__', Store(), lineno=129, col_offset=12)], Name('ABCMeta', Load(), lineno=129, col_offset=28), lineno=129, col_offset=12), FunctionDef('foo', arguments([Name('self', Param(), lineno=132, col_offset=20)], None, None, []), [Pass( lineno=133, col_offset=16)], [Name('abstractmethod', Load(), lineno=131, col_offset=13)], lineno=131, col_offset=12)], [], lineno=128, col_offset=8), ClassDef('ClassExample', [Name('AbstractClassExample', Load(), lineno=135, col_offset=27)], [FunctionDef('foo', arguments([Name('self', Param(), lineno=136, col_offset=20)], None, None, []), [Pass( lineno=137, col_offset=16)], [], lineno=136, col_offset=12)], [], lineno=135, col_offset=8), Assign([Name('a', Store(), lineno=139, col_offset=8)], Call(Name('ClassExample', Load(), lineno=139, col_offset=12), [], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertTrue', Load(), lineno=142, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=142, col_offset=24), 'isabstract', Load(), lineno=142, col_offset=24), [Name('AbstractClassExample', Load(), lineno=142, col_offset=43)], [], None, None, lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertFalse', Load(), lineno=143, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=143, col_offset=25), 'isabstract', Load(), lineno=143, col_offset=25), [Name('ClassExample', Load(), lineno=143, col_offset=44)], [], None, None, lineno=143, col_offset=25)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertFalse', Load(), lineno=144, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=144, col_offset=25), 'isabstract', Load(), lineno=144, col_offset=25), [Name('a', Load(), lineno=144, col_offset=44)], [], None, None, lineno=144, col_offset=25)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertFalse', Load(), lineno=145, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=145, col_offset=25), 'isabstract', Load(), lineno=145, col_offset=25), [Name('int', Load(), lineno=145, col_offset=44)], [], None, None, lineno=145, col_offset=25)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertFalse', Load(), lineno=146, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=146, col_offset=25), 'isabstract', Load(), lineno=146, col_offset=25), [Num(5, lineno=146, col_offset=44)], [], None, None, lineno=146, col_offset=25)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=125, col_offset=4)], [], lineno=65, col_offset=0), ClassDef('TestInterpreterStack', [Name('IsTestBase', Load(), lineno=149, col_offset=27)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=150, col_offset=17)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=151, col_offset=8), 'TestCase', Load(), lineno=151, col_offset=8), '__init__', Load(), lineno=151, col_offset=8), [Name('self', Load(), lineno=151, col_offset=35)], [], Name('args', Load(), lineno=151, col_offset=42), Name('kwargs', Load(), lineno=151, col_offset=50), lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('git', Load(), lineno=153, col_offset=8), 'abuse', Load(), lineno=153, col_offset=8), [Num(7, lineno=153, col_offset=18), Num(8, lineno=153, col_offset=21), Num(9, lineno=153, col_offset=24)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8)], [], lineno=150, col_offset=4), FunctionDef('test_abuse_done', arguments([Name('self', Param(), lineno=155, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=156, col_offset=8), 'istest', Load(), lineno=156, col_offset=8), [Attribute(Name('inspect', Load(), lineno=156, col_offset=20), 'istraceback', Load(), lineno=156, col_offset=20), Str('git.ex[2]', lineno=156, col_offset=41)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'istest', Load(), lineno=157, col_offset=8), [Attribute(Name('inspect', Load(), lineno=157, col_offset=20), 'isframe', Load(), lineno=157, col_offset=20), Str('mod.fr', lineno=157, col_offset=37)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=155, col_offset=4), FunctionDef('test_stack', arguments([Name('self', Param(), lineno=159, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=160, col_offset=8), 'assertTrue', Load(), lineno=160, col_offset=8), [Compare(Call(Name('len', Load(), lineno=160, col_offset=24), [Attribute(Name('mod', Load(), lineno=160, col_offset=28), 'st', Load(), lineno=160, col_offset=28)], [], None, None, lineno=160, col_offset=24), [GtE()], [Num(5, lineno=160, col_offset=39)], lineno=160, col_offset=24)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=8), 'assertEqual', Load(), lineno=161, col_offset=8), [Subscript(Subscript(Attribute(Name('mod', Load(), lineno=161, col_offset=25), 'st', Load(), lineno=161, col_offset=25), Index(Num(0, lineno=161, col_offset=32)), Load(), lineno=161, col_offset=25), Slice(Num(1, lineno=161, col_offset=35), None, None), Load(), lineno=161, col_offset=25), Tuple([Name('modfile', Load(), lineno=162, col_offset=14), Num(16, lineno=162, col_offset=23), Str('eggs', lineno=162, col_offset=27), List([Str('    st = inspect.stack()\n', lineno=162, col_offset=36)], Load(), lineno=162, col_offset=35), Num(0, lineno=162, col_offset=67)], Load(), lineno=162, col_offset=14)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=8), 'assertEqual', Load(), lineno=163, col_offset=8), [Subscript(Subscript(Attribute(Name('mod', Load(), lineno=163, col_offset=25), 'st', Load(), lineno=163, col_offset=25), Index(Num(1, lineno=163, col_offset=32)), Load(), lineno=163, col_offset=25), Slice(Num(1, lineno=163, col_offset=35), None, None), Load(), lineno=163, col_offset=25), Tuple([Name('modfile', Load(), lineno=164, col_offset=14), Num(9, lineno=164, col_offset=23), Str('spam', lineno=164, col_offset=26), List([Str('    eggs(b + d, c + f)\n', lineno=164, col_offset=35)], Load(), lineno=164, col_offset=34), Num(0, lineno=164, col_offset=64)], Load(), lineno=164, col_offset=14)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=8), 'assertEqual', Load(), lineno=165, col_offset=8), [Subscript(Subscript(Attribute(Name('mod', Load(), lineno=165, col_offset=25), 'st', Load(), lineno=165, col_offset=25), Index(Num(2, lineno=165, col_offset=32)), Load(), lineno=165, col_offset=25), Slice(Num(1, lineno=165, col_offset=35), None, None), Load(), lineno=165, col_offset=25), Tuple([Name('modfile', Load(), lineno=166, col_offset=14), Num(43, lineno=166, col_offset=23), Str('argue', lineno=166, col_offset=27), List([Str('            spam(a, b, c)\n', lineno=166, col_offset=37)], Load(), lineno=166, col_offset=36), Num(0, lineno=166, col_offset=69)], Load(), lineno=166, col_offset=14)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'assertEqual', Load(), lineno=167, col_offset=8), [Subscript(Subscript(Attribute(Name('mod', Load(), lineno=167, col_offset=25), 'st', Load(), lineno=167, col_offset=25), Index(Num(3, lineno=167, col_offset=32)), Load(), lineno=167, col_offset=25), Slice(Num(1, lineno=167, col_offset=35), None, None), Load(), lineno=167, col_offset=25), Tuple([Name('modfile', Load(), lineno=168, col_offset=14), Num(39, lineno=168, col_offset=23), Str('abuse', lineno=168, col_offset=27), List([Str('        self.argue(a, b, c)\n', lineno=168, col_offset=37)], Load(), lineno=168, col_offset=36), Num(0, lineno=168, col_offset=71)], Load(), lineno=168, col_offset=14)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('test_trace', arguments([Name('self', Param(), lineno=170, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertEqual', Load(), lineno=171, col_offset=8), [Call(Name('len', Load(), lineno=171, col_offset=25), [Attribute(Name('git', Load(), lineno=171, col_offset=29), 'tr', Load(), lineno=171, col_offset=29)], [], None, None, lineno=171, col_offset=25), Num(3, lineno=171, col_offset=38)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=8), 'assertEqual', Load(), lineno=172, col_offset=8), [Subscript(Subscript(Attribute(Name('git', Load(), lineno=172, col_offset=25), 'tr', Load(), lineno=172, col_offset=25), Index(Num(0, lineno=172, col_offset=32)), Load(), lineno=172, col_offset=25), Slice(Num(1, lineno=172, col_offset=35), None, None), Load(), lineno=172, col_offset=25), Tuple([Name('modfile', Load(), lineno=172, col_offset=41), Num(43, lineno=172, col_offset=50), Str('argue', lineno=172, col_offset=54), List([Str('            spam(a, b, c)\n', lineno=173, col_offset=42)], Load(), lineno=173, col_offset=41), Num(0, lineno=173, col_offset=74)], Load(), lineno=172, col_offset=41)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertEqual', Load(), lineno=174, col_offset=8), [Subscript(Subscript(Attribute(Name('git', Load(), lineno=174, col_offset=25), 'tr', Load(), lineno=174, col_offset=25), Index(Num(1, lineno=174, col_offset=32)), Load(), lineno=174, col_offset=25), Slice(Num(1, lineno=174, col_offset=35), None, None), Load(), lineno=174, col_offset=25), Tuple([Name('modfile', Load(), lineno=174, col_offset=41), Num(9, lineno=174, col_offset=50), Str('spam', lineno=174, col_offset=53), List([Str('    eggs(b + d, c + f)\n', lineno=175, col_offset=42)], Load(), lineno=175, col_offset=41), Num(0, lineno=175, col_offset=71)], Load(), lineno=174, col_offset=41)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'assertEqual', Load(), lineno=176, col_offset=8), [Subscript(Subscript(Attribute(Name('git', Load(), lineno=176, col_offset=25), 'tr', Load(), lineno=176, col_offset=25), Index(Num(2, lineno=176, col_offset=32)), Load(), lineno=176, col_offset=25), Slice(Num(1, lineno=176, col_offset=35), None, None), Load(), lineno=176, col_offset=25), Tuple([Name('modfile', Load(), lineno=176, col_offset=41), Num(18, lineno=176, col_offset=50), Str('eggs', lineno=176, col_offset=54), List([Str('    q = y // 0\n', lineno=177, col_offset=42)], Load(), lineno=177, col_offset=41), Num(0, lineno=177, col_offset=63)], Load(), lineno=176, col_offset=41)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('test_frame', arguments([Name('self', Param(), lineno=179, col_offset=19)], None, None, []), [Assign([Tuple([Name('args', Store(), lineno=180, col_offset=8), Name('varargs', Store(), lineno=180, col_offset=14), Name('varkw', Store(), lineno=180, col_offset=23), Name('locals', Store(), lineno=180, col_offset=30)], Store(), lineno=180, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=180, col_offset=39), 'getargvalues', Load(), lineno=180, col_offset=39), [Attribute(Name('mod', Load(), lineno=180, col_offset=60), 'fr', Load(), lineno=180, col_offset=60)], [], None, None, lineno=180, col_offset=39), lineno=180, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'assertEqual', Load(), lineno=181, col_offset=8), [Name('args', Load(), lineno=181, col_offset=25), List([Str('x', lineno=181, col_offset=32), Str('y', lineno=181, col_offset=37)], Load(), lineno=181, col_offset=31)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=8), 'assertEqual', Load(), lineno=182, col_offset=8), [Name('varargs', Load(), lineno=182, col_offset=25), Name('None', Load(), lineno=182, col_offset=34)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'assertEqual', Load(), lineno=183, col_offset=8), [Name('varkw', Load(), lineno=183, col_offset=25), Name('None', Load(), lineno=183, col_offset=32)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'assertEqual', Load(), lineno=184, col_offset=8), [Name('locals', Load(), lineno=184, col_offset=25), Dict([Str('x', lineno=184, col_offset=34), Str('p', lineno=184, col_offset=43), Str('y', lineno=184, col_offset=52)], [Num(11, lineno=184, col_offset=39), Num(11, lineno=184, col_offset=48), Num(14, lineno=184, col_offset=57)], lineno=184, col_offset=33)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertEqual', Load(), lineno=185, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=185, col_offset=25), 'formatargvalues', Load(), lineno=185, col_offset=25), [Name('args', Load(), lineno=185, col_offset=49), Name('varargs', Load(), lineno=185, col_offset=55), Name('varkw', Load(), lineno=185, col_offset=64), Name('locals', Load(), lineno=185, col_offset=71)], [], None, None, lineno=185, col_offset=25), Str('(x=11, y=14)', lineno=186, col_offset=25)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8)], [], lineno=179, col_offset=4), FunctionDef('test_previous_frame', arguments([Name('self', Param(), lineno=188, col_offset=28)], None, None, []), [Assign([Tuple([Name('args', Store(), lineno=189, col_offset=8), Name('varargs', Store(), lineno=189, col_offset=14), Name('varkw', Store(), lineno=189, col_offset=23), Name('locals', Store(), lineno=189, col_offset=30)], Store(), lineno=189, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=189, col_offset=39), 'getargvalues', Load(), lineno=189, col_offset=39), [Attribute(Attribute(Name('mod', Load(), lineno=189, col_offset=60), 'fr', Load(), lineno=189, col_offset=60), 'f_back', Load(), lineno=189, col_offset=60)], [], None, None, lineno=189, col_offset=39), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertEqual', Load(), lineno=190, col_offset=8), [Name('args', Load(), lineno=190, col_offset=25), List([Str('a', lineno=190, col_offset=32), Str('b', lineno=190, col_offset=37), Str('c', lineno=190, col_offset=42), Str('d', lineno=190, col_offset=47), List([Str('e', lineno=190, col_offset=53), List([Str('f', lineno=190, col_offset=59)], Load(), lineno=190, col_offset=58)], Load(), lineno=190, col_offset=52)], Load(), lineno=190, col_offset=31)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertEqual', Load(), lineno=191, col_offset=8), [Name('varargs', Load(), lineno=191, col_offset=25), Str('g', lineno=191, col_offset=34)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Name('varkw', Load(), lineno=192, col_offset=25), Str('h', lineno=192, col_offset=32)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertEqual', Load(), lineno=193, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=193, col_offset=25), 'formatargvalues', Load(), lineno=193, col_offset=25), [Name('args', Load(), lineno=193, col_offset=49), Name('varargs', Load(), lineno=193, col_offset=55), Name('varkw', Load(), lineno=193, col_offset=64), Name('locals', Load(), lineno=193, col_offset=71)], [], None, None, lineno=193, col_offset=25), Str('(a=7, b=8, c=9, d=3, (e=4, (f=5,)), *g=(), **h={})', lineno=194, col_offset=13)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8)], [], lineno=188, col_offset=4)], [], lineno=149, col_offset=0), ClassDef('GetSourceBase', [Attribute(Name('unittest', Load(), lineno=196, col_offset=20), 'TestCase', Load(), lineno=196, col_offset=20)], [Assign([Name('fodderFile', Store(), lineno=198, col_offset=4)], Name('None', Load(), lineno=198, col_offset=17), lineno=198, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=200, col_offset=17)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=201, col_offset=8), 'TestCase', Load(), lineno=201, col_offset=8), '__init__', Load(), lineno=201, col_offset=8), [Name('self', Load(), lineno=201, col_offset=35)], [], Name('args', Load(), lineno=201, col_offset=42), Name('kwargs', Load(), lineno=201, col_offset=50), lineno=201, col_offset=8), lineno=201, col_offset=8), With(Call(Name('open', Load(), lineno=203, col_offset=13), [Call(Attribute(Name('inspect', Load(), lineno=203, col_offset=18), 'getsourcefile', Load(), lineno=203, col_offset=18), [Attribute(Name('self', Load(), lineno=203, col_offset=40), 'fodderFile', Load(), lineno=203, col_offset=40)], [], None, None, lineno=203, col_offset=18)], [], None, None, lineno=203, col_offset=13), Name('fp', Store(), lineno=203, col_offset=61), [Assign([Attribute(Name('self', Load(), lineno=204, col_offset=12), 'source', Store(), lineno=204, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=204, col_offset=26), 'read', Load(), lineno=204, col_offset=26), [], [], None, None, lineno=204, col_offset=26), lineno=204, col_offset=12)], lineno=203, col_offset=13)], [], lineno=200, col_offset=4), FunctionDef('sourcerange', arguments([Name('self', Param(), lineno=206, col_offset=20), Name('top', Param(), lineno=206, col_offset=26), Name('bottom', Param(), lineno=206, col_offset=31)], None, None, []), [Assign([Name('lines', Store(), lineno=207, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=207, col_offset=16), 'source', Load(), lineno=207, col_offset=16), 'split', Load(), lineno=207, col_offset=16), [Str('\n', lineno=207, col_offset=34)], [], None, None, lineno=207, col_offset=16), lineno=207, col_offset=8), Return(BinOp(Call(Attribute(Str('\n', lineno=208, col_offset=15), 'join', Load(), lineno=208, col_offset=15), [Subscript(Name('lines', Load(), lineno=208, col_offset=25), Slice(BinOp(Name('top', Load(), lineno=208, col_offset=31), Sub(), Num(1, lineno=208, col_offset=35), lineno=208, col_offset=31), Name('bottom', Load(), lineno=208, col_offset=37), None), Load(), lineno=208, col_offset=25)], [], None, None, lineno=208, col_offset=15), Add(), Str('\n', lineno=208, col_offset=48), lineno=208, col_offset=15), lineno=208, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('assertSourceEqual', arguments([Name('self', Param(), lineno=210, col_offset=26), Name('obj', Param(), lineno=210, col_offset=32), Name('top', Param(), lineno=210, col_offset=37), Name('bottom', Param(), lineno=210, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=211, col_offset=25), 'getsource', Load(), lineno=211, col_offset=25), [Name('obj', Load(), lineno=211, col_offset=43)], [], None, None, lineno=211, col_offset=25), Call(Attribute(Name('self', Load(), lineno=212, col_offset=25), 'sourcerange', Load(), lineno=212, col_offset=25), [Name('top', Load(), lineno=212, col_offset=42), Name('bottom', Load(), lineno=212, col_offset=47)], [], None, None, lineno=212, col_offset=25)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=210, col_offset=4)], [], lineno=196, col_offset=0), ClassDef('TestRetrievingSourceCode', [Name('GetSourceBase', Load(), lineno=214, col_offset=31)], [Assign([Name('fodderFile', Store(), lineno=215, col_offset=4)], Name('mod', Load(), lineno=215, col_offset=17), lineno=215, col_offset=4), FunctionDef('test_getclasses', arguments([Name('self', Param(), lineno=217, col_offset=24)], None, None, []), [Assign([Name('classes', Store(), lineno=218, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=218, col_offset=18), 'getmembers', Load(), lineno=218, col_offset=18), [Name('mod', Load(), lineno=218, col_offset=37), Attribute(Name('inspect', Load(), lineno=218, col_offset=42), 'isclass', Load(), lineno=218, col_offset=42)], [], None, None, lineno=218, col_offset=18), lineno=218, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertEqual', Load(), lineno=219, col_offset=8), [Name('classes', Load(), lineno=219, col_offset=25), List([Tuple([Str('FesteringGob', lineno=220, col_offset=27), Attribute(Name('mod', Load(), lineno=220, col_offset=43), 'FesteringGob', Load(), lineno=220, col_offset=43)], Load(), lineno=220, col_offset=27), Tuple([Str('MalodorousPervert', lineno=221, col_offset=27), Attribute(Name('mod', Load(), lineno=221, col_offset=48), 'MalodorousPervert', Load(), lineno=221, col_offset=48)], Load(), lineno=221, col_offset=27), Tuple([Str('ParrotDroppings', lineno=222, col_offset=27), Attribute(Name('mod', Load(), lineno=222, col_offset=46), 'ParrotDroppings', Load(), lineno=222, col_offset=46)], Load(), lineno=222, col_offset=27), Tuple([Str('StupidGit', lineno=223, col_offset=27), Attribute(Name('mod', Load(), lineno=223, col_offset=40), 'StupidGit', Load(), lineno=223, col_offset=40)], Load(), lineno=223, col_offset=27)], Load(), lineno=220, col_offset=25)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), Assign([Name('tree', Store(), lineno=224, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=224, col_offset=15), 'getclasstree', Load(), lineno=224, col_offset=15), [ListComp(Subscript(Name('cls', Load(), lineno=224, col_offset=37), Index(Num(1, lineno=224, col_offset=41)), Load(), lineno=224, col_offset=37), [comprehension(Name('cls', Store(), lineno=224, col_offset=48), Name('classes', Load(), lineno=224, col_offset=55), [])], lineno=224, col_offset=37), Num(1, lineno=224, col_offset=65)], [], None, None, lineno=224, col_offset=15), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertEqual', Load(), lineno=225, col_offset=8), [Name('tree', Load(), lineno=225, col_offset=25), List([Tuple([Attribute(Name('mod', Load(), lineno=226, col_offset=27), 'ParrotDroppings', Load(), lineno=226, col_offset=27), Tuple([], Load(), lineno=226, col_offset=48)], Load(), lineno=226, col_offset=27), Tuple([Attribute(Name('mod', Load(), lineno=227, col_offset=27), 'StupidGit', Load(), lineno=227, col_offset=27), Tuple([], Load(), lineno=227, col_offset=42)], Load(), lineno=227, col_offset=27), List([Tuple([Attribute(Name('mod', Load(), lineno=228, col_offset=28), 'MalodorousPervert', Load(), lineno=228, col_offset=28), Tuple([Attribute(Name('mod', Load(), lineno=228, col_offset=52), 'StupidGit', Load(), lineno=228, col_offset=52)], Load(), lineno=228, col_offset=52)], Load(), lineno=228, col_offset=28), List([Tuple([Attribute(Name('mod', Load(), lineno=229, col_offset=29), 'FesteringGob', Load(), lineno=229, col_offset=29), Tuple([Attribute(Name('mod', Load(), lineno=229, col_offset=48), 'MalodorousPervert', Load(), lineno=229, col_offset=48), Attribute(Name('mod', Load(), lineno=230, col_offset=51), 'ParrotDroppings', Load(), lineno=230, col_offset=51)], Load(), lineno=229, col_offset=48)], Load(), lineno=229, col_offset=29)], Load(), lineno=229, col_offset=27)], Load(), lineno=228, col_offset=26)], Load(), lineno=226, col_offset=25)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('test_getfunctions', arguments([Name('self', Param(), lineno=235, col_offset=26)], None, None, []), [Assign([Name('functions', Store(), lineno=236, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=236, col_offset=20), 'getmembers', Load(), lineno=236, col_offset=20), [Name('mod', Load(), lineno=236, col_offset=39), Attribute(Name('inspect', Load(), lineno=236, col_offset=44), 'isfunction', Load(), lineno=236, col_offset=44)], [], None, None, lineno=236, col_offset=20), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertEqual', Load(), lineno=237, col_offset=8), [Name('functions', Load(), lineno=237, col_offset=25), List([Tuple([Str('eggs', lineno=237, col_offset=38), Attribute(Name('mod', Load(), lineno=237, col_offset=46), 'eggs', Load(), lineno=237, col_offset=46)], Load(), lineno=237, col_offset=38), Tuple([Str('spam', lineno=238, col_offset=38), Attribute(Name('mod', Load(), lineno=238, col_offset=46), 'spam', Load(), lineno=238, col_offset=46)], Load(), lineno=238, col_offset=38)], Load(), lineno=237, col_offset=36)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('test_getdoc', arguments([Name('self', Param(), lineno=242, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertEqual', Load(), lineno=243, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=243, col_offset=25), 'getdoc', Load(), lineno=243, col_offset=25), [Name('mod', Load(), lineno=243, col_offset=40)], [], None, None, lineno=243, col_offset=25), Str('A module docstring.', lineno=243, col_offset=46)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertEqual', Load(), lineno=244, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=244, col_offset=25), 'getdoc', Load(), lineno=244, col_offset=25), [Attribute(Name('mod', Load(), lineno=244, col_offset=40), 'StupidGit', Load(), lineno=244, col_offset=40)], [], None, None, lineno=244, col_offset=25), Str('A longer,\n\nindented\n\ndocstring.', lineno=245, col_offset=25)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'assertEqual', Load(), lineno=246, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=246, col_offset=25), 'getdoc', Load(), lineno=246, col_offset=25), [Attribute(Name('git', Load(), lineno=246, col_offset=40), 'abuse', Load(), lineno=246, col_offset=40)], [], None, None, lineno=246, col_offset=25), Str('Another\n\ndocstring\n\ncontaining\n\ntabs', lineno=247, col_offset=25)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=240, col_offset=5), 'skipIf', Load(), lineno=240, col_offset=5), [Compare(Attribute(Attribute(Name('sys', Load(), lineno=240, col_offset=21), 'flags', Load(), lineno=240, col_offset=21), 'optimize', Load(), lineno=240, col_offset=21), [GtE()], [Num(2, lineno=240, col_offset=43)], lineno=240, col_offset=21), Str('Docstrings are omitted with -O2 and above', lineno=241, col_offset=21)], [], None, None, lineno=240, col_offset=5)], lineno=240, col_offset=4), FunctionDef('test_cleandoc', arguments([Name('self', Param(), lineno=249, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'assertEqual', Load(), lineno=250, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=250, col_offset=25), 'cleandoc', Load(), lineno=250, col_offset=25), [Str('An\n    indented\n    docstring.', lineno=250, col_offset=42)], [], None, None, lineno=250, col_offset=25), Str('An\nindented\ndocstring.', lineno=251, col_offset=25)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8)], [], lineno=249, col_offset=4), FunctionDef('test_getcomments', arguments([Name('self', Param(), lineno=253, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'assertEqual', Load(), lineno=254, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=254, col_offset=25), 'getcomments', Load(), lineno=254, col_offset=25), [Name('mod', Load(), lineno=254, col_offset=45)], [], None, None, lineno=254, col_offset=25), Str('# line 1\n', lineno=254, col_offset=51)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=255, col_offset=25), 'getcomments', Load(), lineno=255, col_offset=25), [Attribute(Name('mod', Load(), lineno=255, col_offset=45), 'StupidGit', Load(), lineno=255, col_offset=45)], [], None, None, lineno=255, col_offset=25), Str('# line 20\n', lineno=255, col_offset=61)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8)], [], lineno=253, col_offset=4), FunctionDef('test_getmodule', arguments([Name('self', Param(), lineno=257, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=8), 'assertEqual', Load(), lineno=259, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=259, col_offset=25), 'getmodule', Load(), lineno=259, col_offset=25), [Name('mod', Load(), lineno=259, col_offset=43)], [], None, None, lineno=259, col_offset=25), Name('mod', Load(), lineno=259, col_offset=49)], [], None, None, lineno=259, col_offset=8), lineno=259, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=8), 'assertEqual', Load(), lineno=261, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=261, col_offset=25), 'getmodule', Load(), lineno=261, col_offset=25), [Attribute(Name('mod', Load(), lineno=261, col_offset=43), 'StupidGit', Load(), lineno=261, col_offset=43)], [], None, None, lineno=261, col_offset=25), Name('mod', Load(), lineno=261, col_offset=59)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=8), 'assertEqual', Load(), lineno=263, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=263, col_offset=25), 'getmodule', Load(), lineno=263, col_offset=25), [Attribute(Attribute(Name('mod', Load(), lineno=263, col_offset=43), 'StupidGit', Load(), lineno=263, col_offset=43), 'abuse', Load(), lineno=263, col_offset=43)], [], None, None, lineno=263, col_offset=25), Name('mod', Load(), lineno=263, col_offset=65)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=265, col_offset=8), 'assertEqual', Load(), lineno=265, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=265, col_offset=25), 'getmodule', Load(), lineno=265, col_offset=25), [Attribute(Attribute(Name('mod', Load(), lineno=265, col_offset=43), 'StupidGit', Load(), lineno=265, col_offset=43), 'abuse', Load(), lineno=265, col_offset=43)], [], None, None, lineno=265, col_offset=25), Name('mod', Load(), lineno=265, col_offset=65)], [], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=8), 'assertEqual', Load(), lineno=267, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=267, col_offset=25), 'getmodule', Load(), lineno=267, col_offset=25), [Name('str', Load(), lineno=267, col_offset=43)], [], None, None, lineno=267, col_offset=25), Subscript(Attribute(Name('sys', Load(), lineno=267, col_offset=49), 'modules', Load(), lineno=267, col_offset=49), Index(Str('__builtin__', lineno=267, col_offset=61)), Load(), lineno=267, col_offset=49)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'assertEqual', Load(), lineno=269, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=269, col_offset=25), 'getmodule', Load(), lineno=269, col_offset=25), [Name('None', Load(), lineno=269, col_offset=43), Name('modfile', Load(), lineno=269, col_offset=49)], [], None, None, lineno=269, col_offset=25), Name('mod', Load(), lineno=269, col_offset=59)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_getsource', arguments([Name('self', Param(), lineno=271, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=272, col_offset=8), 'assertSourceEqual', Load(), lineno=272, col_offset=8), [Attribute(Name('git', Load(), lineno=272, col_offset=31), 'abuse', Load(), lineno=272, col_offset=31), Num(29, lineno=272, col_offset=42), Num(39, lineno=272, col_offset=46)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertSourceEqual', Load(), lineno=273, col_offset=8), [Attribute(Name('mod', Load(), lineno=273, col_offset=31), 'StupidGit', Load(), lineno=273, col_offset=31), Num(21, lineno=273, col_offset=46), Num(46, lineno=273, col_offset=50)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('test_getsourcefile', arguments([Name('self', Param(), lineno=275, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'assertEqual', Load(), lineno=276, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=276, col_offset=25), 'getsourcefile', Load(), lineno=276, col_offset=25), [Attribute(Name('mod', Load(), lineno=276, col_offset=47), 'spam', Load(), lineno=276, col_offset=47)], [], None, None, lineno=276, col_offset=25), Name('modfile', Load(), lineno=276, col_offset=58)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertEqual', Load(), lineno=277, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=277, col_offset=25), 'getsourcefile', Load(), lineno=277, col_offset=25), [Attribute(Name('git', Load(), lineno=277, col_offset=47), 'abuse', Load(), lineno=277, col_offset=47)], [], None, None, lineno=277, col_offset=25), Name('modfile', Load(), lineno=277, col_offset=59)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), Assign([Name('fn', Store(), lineno=278, col_offset=8)], Str('_non_existing_filename_used_for_sourcefile_test.py', lineno=278, col_offset=13), lineno=278, col_offset=8), Assign([Name('co', Store(), lineno=279, col_offset=8)], Call(Name('compile', Load(), lineno=279, col_offset=13), [Str('None', lineno=279, col_offset=21), Name('fn', Load(), lineno=279, col_offset=29), Str('exec', lineno=279, col_offset=33)], [], None, None, lineno=279, col_offset=13), lineno=279, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=8), 'assertEqual', Load(), lineno=280, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=280, col_offset=25), 'getsourcefile', Load(), lineno=280, col_offset=25), [Name('co', Load(), lineno=280, col_offset=47)], [], None, None, lineno=280, col_offset=25), Name('None', Load(), lineno=280, col_offset=52)], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), Assign([Subscript(Attribute(Name('linecache', Load(), lineno=281, col_offset=8), 'cache', Load(), lineno=281, col_offset=8), Index(Attribute(Name('co', Load(), lineno=281, col_offset=24), 'co_filename', Load(), lineno=281, col_offset=24)), Store(), lineno=281, col_offset=8)], Tuple([Num(1, lineno=281, col_offset=43), Name('None', Load(), lineno=281, col_offset=46), Str('None', lineno=281, col_offset=52), Attribute(Name('co', Load(), lineno=281, col_offset=60), 'co_filename', Load(), lineno=281, col_offset=60)], Load(), lineno=281, col_offset=43), lineno=281, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), 'assertEqual', Load(), lineno=282, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=282, col_offset=25), 'getsourcefile', Load(), lineno=282, col_offset=25), [Name('co', Load(), lineno=282, col_offset=47)], [], None, None, lineno=282, col_offset=25), Name('fn', Load(), lineno=282, col_offset=52)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_getfile', arguments([Name('self', Param(), lineno=284, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertEqual', Load(), lineno=285, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=285, col_offset=25), 'getfile', Load(), lineno=285, col_offset=25), [Attribute(Name('mod', Load(), lineno=285, col_offset=41), 'StupidGit', Load(), lineno=285, col_offset=41)], [], None, None, lineno=285, col_offset=25), Attribute(Name('mod', Load(), lineno=285, col_offset=57), '__file__', Load(), lineno=285, col_offset=57)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('test_getmodule_recursion', arguments([Name('self', Param(), lineno=287, col_offset=33)], None, None, []), [ImportFrom('types', [alias('ModuleType', None)], 0, lineno=288, col_offset=8), Assign([Name('name', Store(), lineno=289, col_offset=8)], Str('__inspect_dummy', lineno=289, col_offset=15), lineno=289, col_offset=8), Assign([Name('m', Store(), lineno=290, col_offset=8), Subscript(Attribute(Name('sys', Load(), lineno=290, col_offset=12), 'modules', Load(), lineno=290, col_offset=12), Index(Name('name', Load(), lineno=290, col_offset=24)), Store(), lineno=290, col_offset=12)], Call(Name('ModuleType', Load(), lineno=290, col_offset=32), [Name('name', Load(), lineno=290, col_offset=43)], [], None, None, lineno=290, col_offset=32), lineno=290, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=291, col_offset=8), '__file__', Store(), lineno=291, col_offset=8)], Str('<string>', lineno=291, col_offset=21), lineno=291, col_offset=8), Assign([Attribute(Name('m', Load(), lineno=292, col_offset=8), '__loader__', Store(), lineno=292, col_offset=8)], Str('dummy', lineno=292, col_offset=23), lineno=292, col_offset=8), Exec(Str('def x(): pass', lineno=293, col_offset=13), Attribute(Name('m', Load(), lineno=293, col_offset=32), '__dict__', Load(), lineno=293, col_offset=32), None, lineno=293, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=294, col_offset=8), 'assertEqual', Load(), lineno=294, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=294, col_offset=25), 'getsourcefile', Load(), lineno=294, col_offset=25), [Attribute(Attribute(Name('m', Load(), lineno=294, col_offset=47), 'x', Load(), lineno=294, col_offset=47), 'func_code', Load(), lineno=294, col_offset=47)], [], None, None, lineno=294, col_offset=25), Str('<string>', lineno=294, col_offset=63)], [], None, None, lineno=294, col_offset=8), lineno=294, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=295, col_offset=12), 'modules', Load(), lineno=295, col_offset=12), Index(Name('name', Load(), lineno=295, col_offset=24)), Del(), lineno=295, col_offset=12)], lineno=295, col_offset=8), Expr(Call(Attribute(Name('inspect', Load(), lineno=296, col_offset=8), 'getmodule', Load(), lineno=296, col_offset=8), [Call(Name('compile', Load(), lineno=296, col_offset=26), [Str('a=10', lineno=296, col_offset=34), Str('', lineno=296, col_offset=41), Str('single', lineno=296, col_offset=44)], [], None, None, lineno=296, col_offset=26)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8)], [], lineno=287, col_offset=4)], [], lineno=214, col_offset=0), ClassDef('TestDecorators', [Name('GetSourceBase', Load(), lineno=298, col_offset=21)], [Assign([Name('fodderFile', Store(), lineno=299, col_offset=4)], Name('mod2', Load(), lineno=299, col_offset=17), lineno=299, col_offset=4), FunctionDef('test_wrapped_decorator', arguments([Name('self', Param(), lineno=301, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=8), 'assertSourceEqual', Load(), lineno=302, col_offset=8), [Attribute(Name('mod2', Load(), lineno=302, col_offset=31), 'wrapped', Load(), lineno=302, col_offset=31), Num(14, lineno=302, col_offset=45), Num(17, lineno=302, col_offset=49)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8)], [], lineno=301, col_offset=4), FunctionDef('test_replacing_decorator', arguments([Name('self', Param(), lineno=304, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'assertSourceEqual', Load(), lineno=305, col_offset=8), [Attribute(Name('mod2', Load(), lineno=305, col_offset=31), 'gone', Load(), lineno=305, col_offset=31), Num(9, lineno=305, col_offset=42), Num(10, lineno=305, col_offset=45)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8)], [], lineno=304, col_offset=4)], [], lineno=298, col_offset=0), ClassDef('TestOneliners', [Name('GetSourceBase', Load(), lineno=307, col_offset=20)], [Assign([Name('fodderFile', Store(), lineno=308, col_offset=4)], Name('mod2', Load(), lineno=308, col_offset=17), lineno=308, col_offset=4), FunctionDef('test_oneline_lambda', arguments([Name('self', Param(), lineno=309, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'assertSourceEqual', Load(), lineno=311, col_offset=8), [Attribute(Name('mod2', Load(), lineno=311, col_offset=31), 'oll', Load(), lineno=311, col_offset=31), Num(25, lineno=311, col_offset=41), Num(25, lineno=311, col_offset=45)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8)], [], lineno=309, col_offset=4), FunctionDef('test_threeline_lambda', arguments([Name('self', Param(), lineno=313, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), 'assertSourceEqual', Load(), lineno=316, col_offset=8), [Attribute(Name('mod2', Load(), lineno=316, col_offset=31), 'tll', Load(), lineno=316, col_offset=31), Num(28, lineno=316, col_offset=41), Num(30, lineno=316, col_offset=45)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('test_twoline_indented_lambda', arguments([Name('self', Param(), lineno=318, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=321, col_offset=8), 'assertSourceEqual', Load(), lineno=321, col_offset=8), [Attribute(Name('mod2', Load(), lineno=321, col_offset=31), 'tlli', Load(), lineno=321, col_offset=31), Num(33, lineno=321, col_offset=42), Num(34, lineno=321, col_offset=46)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('test_onelinefunc', arguments([Name('self', Param(), lineno=323, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'assertSourceEqual', Load(), lineno=325, col_offset=8), [Attribute(Name('mod2', Load(), lineno=325, col_offset=31), 'onelinefunc', Load(), lineno=325, col_offset=31), Num(37, lineno=325, col_offset=49), Num(37, lineno=325, col_offset=53)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8)], [], lineno=323, col_offset=4), FunctionDef('test_manyargs', arguments([Name('self', Param(), lineno=327, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=8), 'assertSourceEqual', Load(), lineno=331, col_offset=8), [Attribute(Name('mod2', Load(), lineno=331, col_offset=31), 'manyargs', Load(), lineno=331, col_offset=31), Num(40, lineno=331, col_offset=46), Num(41, lineno=331, col_offset=50)], [], None, None, lineno=331, col_offset=8), lineno=331, col_offset=8)], [], lineno=327, col_offset=4), FunctionDef('test_twolinefunc', arguments([Name('self', Param(), lineno=333, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertSourceEqual', Load(), lineno=337, col_offset=8), [Attribute(Name('mod2', Load(), lineno=337, col_offset=31), 'twolinefunc', Load(), lineno=337, col_offset=31), Num(44, lineno=337, col_offset=49), Num(45, lineno=337, col_offset=53)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8)], [], lineno=333, col_offset=4), FunctionDef('test_lambda_in_list', arguments([Name('self', Param(), lineno=339, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=342, col_offset=8), 'assertSourceEqual', Load(), lineno=342, col_offset=8), [Subscript(Attribute(Name('mod2', Load(), lineno=342, col_offset=31), 'a', Load(), lineno=342, col_offset=31), Index(Num(1, lineno=342, col_offset=38)), Load(), lineno=342, col_offset=31), Num(49, lineno=342, col_offset=42), Num(49, lineno=342, col_offset=46)], [], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8)], [], lineno=339, col_offset=4), FunctionDef('test_anonymous', arguments([Name('self', Param(), lineno=344, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=347, col_offset=8), 'assertSourceEqual', Load(), lineno=347, col_offset=8), [Attribute(Name('mod2', Load(), lineno=347, col_offset=31), 'anonymous', Load(), lineno=347, col_offset=31), Num(55, lineno=347, col_offset=47), Num(55, lineno=347, col_offset=51)], [], None, None, lineno=347, col_offset=8), lineno=347, col_offset=8)], [], lineno=344, col_offset=4)], [], lineno=307, col_offset=0), ClassDef('TestBuggyCases', [Name('GetSourceBase', Load(), lineno=349, col_offset=21)], [Assign([Name('fodderFile', Store(), lineno=350, col_offset=4)], Name('mod2', Load(), lineno=350, col_offset=17), lineno=350, col_offset=4), FunctionDef('test_with_comment', arguments([Name('self', Param(), lineno=352, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=8), 'assertSourceEqual', Load(), lineno=353, col_offset=8), [Attribute(Name('mod2', Load(), lineno=353, col_offset=31), 'with_comment', Load(), lineno=353, col_offset=31), Num(58, lineno=353, col_offset=50), Num(59, lineno=353, col_offset=54)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8)], [], lineno=352, col_offset=4), FunctionDef('test_multiline_sig', arguments([Name('self', Param(), lineno=355, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'assertSourceEqual', Load(), lineno=356, col_offset=8), [Subscript(Attribute(Name('mod2', Load(), lineno=356, col_offset=31), 'multiline_sig', Load(), lineno=356, col_offset=31), Index(Num(0, lineno=356, col_offset=50)), Load(), lineno=356, col_offset=31), Num(63, lineno=356, col_offset=54), Num(64, lineno=356, col_offset=58)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8)], [], lineno=355, col_offset=4), FunctionDef('test_nested_class', arguments([Name('self', Param(), lineno=358, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertSourceEqual', Load(), lineno=359, col_offset=8), [Attribute(Call(Attribute(Name('mod2', Load(), lineno=359, col_offset=31), 'func69', Load(), lineno=359, col_offset=31), [], [], None, None, lineno=359, col_offset=31), 'func71', Load(), lineno=359, col_offset=31), Num(71, lineno=359, col_offset=53), Num(72, lineno=359, col_offset=57)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8)], [], lineno=358, col_offset=4), FunctionDef('test_one_liner_followed_by_non_name', arguments([Name('self', Param(), lineno=361, col_offset=44)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertSourceEqual', Load(), lineno=362, col_offset=8), [Attribute(Name('mod2', Load(), lineno=362, col_offset=31), 'func77', Load(), lineno=362, col_offset=31), Num(77, lineno=362, col_offset=44), Num(77, lineno=362, col_offset=48)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8)], [], lineno=361, col_offset=4), FunctionDef('test_one_liner_dedent_non_name', arguments([Name('self', Param(), lineno=364, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertSourceEqual', Load(), lineno=365, col_offset=8), [Attribute(Attribute(Name('mod2', Load(), lineno=365, col_offset=31), 'cls82', Load(), lineno=365, col_offset=31), 'func83', Load(), lineno=365, col_offset=31), Num(83, lineno=365, col_offset=50), Num(83, lineno=365, col_offset=54)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8)], [], lineno=364, col_offset=4), FunctionDef('test_with_comment_instead_of_docstring', arguments([Name('self', Param(), lineno=367, col_offset=47)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), 'assertSourceEqual', Load(), lineno=368, col_offset=8), [Attribute(Name('mod2', Load(), lineno=368, col_offset=31), 'func88', Load(), lineno=368, col_offset=31), Num(88, lineno=368, col_offset=44), Num(90, lineno=368, col_offset=48)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8)], [], lineno=367, col_offset=4), FunctionDef('test_method_in_dynamic_class', arguments([Name('self', Param(), lineno=370, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertSourceEqual', Load(), lineno=371, col_offset=8), [Attribute(Name('mod2', Load(), lineno=371, col_offset=31), 'method_in_dynamic_class', Load(), lineno=371, col_offset=31), Num(95, lineno=371, col_offset=61), Num(97, lineno=371, col_offset=65)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8)], [], lineno=370, col_offset=4), FunctionDef('test_findsource_binary', arguments([Name('self', Param(), lineno=377, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=8), 'assertRaises', Load(), lineno=378, col_offset=8), [Name('IOError', Load(), lineno=378, col_offset=26), Attribute(Name('inspect', Load(), lineno=378, col_offset=35), 'getsource', Load(), lineno=378, col_offset=35), Name('unicodedata', Load(), lineno=378, col_offset=54)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertRaises', Load(), lineno=379, col_offset=8), [Name('IOError', Load(), lineno=379, col_offset=26), Attribute(Name('inspect', Load(), lineno=379, col_offset=35), 'findsource', Load(), lineno=379, col_offset=35), Name('unicodedata', Load(), lineno=379, col_offset=55)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=373, col_offset=5), 'skipIf', Load(), lineno=373, col_offset=5), [BoolOp(Or(), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=374, col_offset=12), [Name('unicodedata', Load(), lineno=374, col_offset=20), Str('__file__', lineno=374, col_offset=33)], [], None, None, lineno=374, col_offset=12), lineno=374, col_offset=8), Compare(Subscript(Attribute(Name('unicodedata', Load(), lineno=375, col_offset=12), '__file__', Load(), lineno=375, col_offset=12), Slice(Num(-4, lineno=375, col_offset=34), None, None), Load(), lineno=375, col_offset=12), [In()], [Tuple([Str('.pyc', lineno=375, col_offset=42), Str('.pyo', lineno=375, col_offset=50)], Load(), lineno=375, col_offset=42)], lineno=375, col_offset=12)], lineno=374, col_offset=8), Str('unicodedata is not an external binary module', lineno=376, col_offset=8)], [], None, None, lineno=373, col_offset=5)], lineno=373, col_offset=4), FunctionDef('test_findsource_code_in_linecache', arguments([Name('self', Param(), lineno=381, col_offset=42)], None, None, []), [Assign([Name('lines', Store(), lineno=382, col_offset=8)], List([Str('x=1', lineno=382, col_offset=17)], Load(), lineno=382, col_offset=16), lineno=382, col_offset=8), Assign([Name('co', Store(), lineno=383, col_offset=8)], Call(Name('compile', Load(), lineno=383, col_offset=13), [Subscript(Name('lines', Load(), lineno=383, col_offset=21), Index(Num(0, lineno=383, col_offset=27)), Load(), lineno=383, col_offset=21), Str('_dynamically_created_file', lineno=383, col_offset=31), Str('exec', lineno=383, col_offset=60)], [], None, None, lineno=383, col_offset=13), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertRaises', Load(), lineno=384, col_offset=8), [Name('IOError', Load(), lineno=384, col_offset=26), Attribute(Name('inspect', Load(), lineno=384, col_offset=35), 'findsource', Load(), lineno=384, col_offset=35), Name('co', Load(), lineno=384, col_offset=55)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'assertRaises', Load(), lineno=385, col_offset=8), [Name('IOError', Load(), lineno=385, col_offset=26), Attribute(Name('inspect', Load(), lineno=385, col_offset=35), 'getsource', Load(), lineno=385, col_offset=35), Name('co', Load(), lineno=385, col_offset=54)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Assign([Subscript(Attribute(Name('linecache', Load(), lineno=386, col_offset=8), 'cache', Load(), lineno=386, col_offset=8), Index(Attribute(Name('co', Load(), lineno=386, col_offset=24), 'co_filename', Load(), lineno=386, col_offset=24)), Store(), lineno=386, col_offset=8)], Tuple([Num(1, lineno=386, col_offset=43), Name('None', Load(), lineno=386, col_offset=46), Name('lines', Load(), lineno=386, col_offset=52), Attribute(Name('co', Load(), lineno=386, col_offset=59), 'co_filename', Load(), lineno=386, col_offset=59)], Load(), lineno=386, col_offset=43), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertEqual', Load(), lineno=387, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=387, col_offset=25), 'findsource', Load(), lineno=387, col_offset=25), [Name('co', Load(), lineno=387, col_offset=44)], [], None, None, lineno=387, col_offset=25), Tuple([Name('lines', Load(), lineno=387, col_offset=50), Num(0, lineno=387, col_offset=56)], Load(), lineno=387, col_offset=50)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'assertEqual', Load(), lineno=388, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=388, col_offset=25), 'getsource', Load(), lineno=388, col_offset=25), [Name('co', Load(), lineno=388, col_offset=43)], [], None, None, lineno=388, col_offset=25), Subscript(Name('lines', Load(), lineno=388, col_offset=48), Index(Num(0, lineno=388, col_offset=54)), Load(), lineno=388, col_offset=48)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8)], [], lineno=381, col_offset=4)], [], lineno=349, col_offset=0), FunctionDef('attrs_wo_objs', arguments([Name('cls', Param(), lineno=391, col_offset=18)], None, None, []), [Return(ListComp(Subscript(Name('t', Load(), lineno=392, col_offset=12), Slice(None, Num(3, lineno=392, col_offset=15), None), Load(), lineno=392, col_offset=12), [comprehension(Name('t', Store(), lineno=392, col_offset=22), Call(Attribute(Name('inspect', Load(), lineno=392, col_offset=27), 'classify_class_attrs', Load(), lineno=392, col_offset=27), [Name('cls', Load(), lineno=392, col_offset=56)], [], None, None, lineno=392, col_offset=27), [])], lineno=392, col_offset=12), lineno=392, col_offset=4)], [], lineno=391, col_offset=0), ClassDef('TestClassesAndFunctions', [Attribute(Name('unittest', Load(), lineno=394, col_offset=30), 'TestCase', Load(), lineno=394, col_offset=30)], [FunctionDef('test_classic_mro', arguments([Name('self', Param(), lineno=395, col_offset=25)], None, None, []), [ClassDef('A', [], [Pass( lineno=397, col_offset=20)], [], lineno=397, col_offset=8), ClassDef('B', [Name('A', Load(), lineno=398, col_offset=16)], [Pass( lineno=398, col_offset=20)], [], lineno=398, col_offset=8), ClassDef('C', [Name('A', Load(), lineno=399, col_offset=16)], [Pass( lineno=399, col_offset=20)], [], lineno=399, col_offset=8), ClassDef('D', [Name('B', Load(), lineno=400, col_offset=16), Name('C', Load(), lineno=400, col_offset=19)], [Pass( lineno=400, col_offset=23)], [], lineno=400, col_offset=8), Assign([Name('expected', Store(), lineno=402, col_offset=8)], Tuple([Name('D', Load(), lineno=402, col_offset=20), Name('B', Load(), lineno=402, col_offset=23), Name('A', Load(), lineno=402, col_offset=26), Name('C', Load(), lineno=402, col_offset=29)], Load(), lineno=402, col_offset=20), lineno=402, col_offset=8), Assign([Name('got', Store(), lineno=403, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=403, col_offset=14), 'getmro', Load(), lineno=403, col_offset=14), [Name('D', Load(), lineno=403, col_offset=29)], [], None, None, lineno=403, col_offset=14), lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertEqual', Load(), lineno=404, col_offset=8), [Name('expected', Load(), lineno=404, col_offset=25), Name('got', Load(), lineno=404, col_offset=35)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8)], [], lineno=395, col_offset=4), FunctionDef('test_newstyle_mro', arguments([Name('self', Param(), lineno=406, col_offset=26)], None, None, []), [ClassDef('A', [Name('object', Load(), lineno=408, col_offset=16)], [Pass( lineno=408, col_offset=28)], [], lineno=408, col_offset=8), ClassDef('B', [Name('A', Load(), lineno=409, col_offset=16)], [Pass( lineno=409, col_offset=20)], [], lineno=409, col_offset=8), ClassDef('C', [Name('A', Load(), lineno=410, col_offset=16)], [Pass( lineno=410, col_offset=20)], [], lineno=410, col_offset=8), ClassDef('D', [Name('B', Load(), lineno=411, col_offset=16), Name('C', Load(), lineno=411, col_offset=19)], [Pass( lineno=411, col_offset=23)], [], lineno=411, col_offset=8), Assign([Name('expected', Store(), lineno=413, col_offset=8)], Tuple([Name('D', Load(), lineno=413, col_offset=20), Name('B', Load(), lineno=413, col_offset=23), Name('C', Load(), lineno=413, col_offset=26), Name('A', Load(), lineno=413, col_offset=29), Name('object', Load(), lineno=413, col_offset=32)], Load(), lineno=413, col_offset=20), lineno=413, col_offset=8), Assign([Name('got', Store(), lineno=414, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=414, col_offset=14), 'getmro', Load(), lineno=414, col_offset=14), [Name('D', Load(), lineno=414, col_offset=29)], [], None, None, lineno=414, col_offset=14), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertEqual', Load(), lineno=415, col_offset=8), [Name('expected', Load(), lineno=415, col_offset=25), Name('got', Load(), lineno=415, col_offset=35)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8)], [], lineno=406, col_offset=4), FunctionDef('assertArgSpecEquals', arguments([Name('self', Param(), lineno=417, col_offset=28), Name('routine', Param(), lineno=417, col_offset=34), Name('args_e', Param(), lineno=417, col_offset=43), Name('varargs_e', Param(), lineno=417, col_offset=51), Name('varkw_e', Param(), lineno=418, col_offset=28), Name('defaults_e', Param(), lineno=418, col_offset=44), Name('formatted', Param(), lineno=419, col_offset=28)], None, None, [Name('None', Load(), lineno=417, col_offset=63), Name('None', Load(), lineno=418, col_offset=38), Name('None', Load(), lineno=418, col_offset=57), Name('None', Load(), lineno=419, col_offset=40)]), [Assign([Tuple([Name('args', Store(), lineno=420, col_offset=8), Name('varargs', Store(), lineno=420, col_offset=14), Name('varkw', Store(), lineno=420, col_offset=23), Name('defaults', Store(), lineno=420, col_offset=30)], Store(), lineno=420, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=420, col_offset=41), 'getargspec', Load(), lineno=420, col_offset=41), [Name('routine', Load(), lineno=420, col_offset=60)], [], None, None, lineno=420, col_offset=41), lineno=420, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'assertEqual', Load(), lineno=421, col_offset=8), [Name('args', Load(), lineno=421, col_offset=25), Name('args_e', Load(), lineno=421, col_offset=31)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=8), 'assertEqual', Load(), lineno=422, col_offset=8), [Name('varargs', Load(), lineno=422, col_offset=25), Name('varargs_e', Load(), lineno=422, col_offset=34)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=8), 'assertEqual', Load(), lineno=423, col_offset=8), [Name('varkw', Load(), lineno=423, col_offset=25), Name('varkw_e', Load(), lineno=423, col_offset=32)], [], None, None, lineno=423, col_offset=8), lineno=423, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=424, col_offset=8), 'assertEqual', Load(), lineno=424, col_offset=8), [Name('defaults', Load(), lineno=424, col_offset=25), Name('defaults_e', Load(), lineno=424, col_offset=35)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8), If(Compare(Name('formatted', Load(), lineno=425, col_offset=11), [IsNot()], [Name('None', Load(), lineno=425, col_offset=28)], lineno=425, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=426, col_offset=12), 'assertEqual', Load(), lineno=426, col_offset=12), [Call(Attribute(Name('inspect', Load(), lineno=426, col_offset=29), 'formatargspec', Load(), lineno=426, col_offset=29), [Name('args', Load(), lineno=426, col_offset=51), Name('varargs', Load(), lineno=426, col_offset=57), Name('varkw', Load(), lineno=426, col_offset=66), Name('defaults', Load(), lineno=426, col_offset=73)], [], None, None, lineno=426, col_offset=29), Name('formatted', Load(), lineno=427, col_offset=29)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=12)], [], lineno=425, col_offset=8)], [], lineno=417, col_offset=4), FunctionDef('test_getargspec', arguments([Name('self', Param(), lineno=429, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertArgSpecEquals', Load(), lineno=430, col_offset=8), [Attribute(Name('mod', Load(), lineno=430, col_offset=33), 'eggs', Load(), lineno=430, col_offset=33), List([Str('x', lineno=430, col_offset=44), Str('y', lineno=430, col_offset=49)], Load(), lineno=430, col_offset=43)], [keyword('formatted', Str('(x, y)', lineno=430, col_offset=67))], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=8), 'assertArgSpecEquals', Load(), lineno=432, col_offset=8), [Attribute(Name('mod', Load(), lineno=432, col_offset=33), 'spam', Load(), lineno=432, col_offset=33), List([Str('a', lineno=433, col_offset=34), Str('b', lineno=433, col_offset=39), Str('c', lineno=433, col_offset=44), Str('d', lineno=433, col_offset=49), List([Str('e', lineno=433, col_offset=55), List([Str('f', lineno=433, col_offset=61)], Load(), lineno=433, col_offset=60)], Load(), lineno=433, col_offset=54)], Load(), lineno=433, col_offset=33), Str('g', lineno=434, col_offset=33), Str('h', lineno=434, col_offset=38), Tuple([Num(3, lineno=434, col_offset=44), Tuple([Num(4, lineno=434, col_offset=48), Tuple([Num(5, lineno=434, col_offset=52)], Load(), lineno=434, col_offset=52)], Load(), lineno=434, col_offset=48)], Load(), lineno=434, col_offset=44), Str('(a, b, c, d=3, (e, (f,))=(4, (5,)), *g, **h)', lineno=435, col_offset=33)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8)], [], lineno=429, col_offset=4), FunctionDef('test_getargspec_method', arguments([Name('self', Param(), lineno=437, col_offset=31)], None, None, []), [ClassDef('A', [Name('object', Load(), lineno=438, col_offset=16)], [FunctionDef('m', arguments([Name('self', Param(), lineno=439, col_offset=18)], None, None, []), [Pass( lineno=440, col_offset=16)], [], lineno=439, col_offset=12)], [], lineno=438, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=441, col_offset=8), 'assertArgSpecEquals', Load(), lineno=441, col_offset=8), [Attribute(Name('A', Load(), lineno=441, col_offset=33), 'm', Load(), lineno=441, col_offset=33), List([Str('self', lineno=441, col_offset=39)], Load(), lineno=441, col_offset=38)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8)], [], lineno=437, col_offset=4), FunctionDef('test_getargspec_sublistofone', arguments([Name('self', Param(), lineno=443, col_offset=37)], None, None, []), [With(Call(Name('check_py3k_warnings', Load(), lineno=444, col_offset=13), [Tuple([Str('tuple parameter unpacking has been removed', lineno=445, col_offset=17), Name('SyntaxWarning', Load(), lineno=445, col_offset=63)], Load(), lineno=445, col_offset=17), Tuple([Str('parenthesized argument names are invalid', lineno=446, col_offset=17), Name('SyntaxWarning', Load(), lineno=446, col_offset=61)], Load(), lineno=446, col_offset=17)], [], None, None, lineno=444, col_offset=13), None, [Exec(Str('def sublistOfOne((foo,)): return 1', lineno=447, col_offset=17), None, None, lineno=447, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=12), 'assertArgSpecEquals', Load(), lineno=448, col_offset=12), [Name('sublistOfOne', Load(), lineno=448, col_offset=37), List([List([Str('foo', lineno=448, col_offset=53)], Load(), lineno=448, col_offset=52)], Load(), lineno=448, col_offset=51)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=12), Exec(Str('def fakeSublistOfOne((foo)): return 1', lineno=450, col_offset=17), None, None, lineno=450, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=12), 'assertArgSpecEquals', Load(), lineno=451, col_offset=12), [Name('fakeSublistOfOne', Load(), lineno=451, col_offset=37), List([Str('foo', lineno=451, col_offset=56)], Load(), lineno=451, col_offset=55)], [], None, None, lineno=451, col_offset=12), lineno=451, col_offset=12)], lineno=444, col_offset=13)], [], lineno=443, col_offset=4), FunctionDef('_classify_test', arguments([Name('self', Param(), lineno=454, col_offset=23), Name('newstyle', Param(), lineno=454, col_offset=29)], None, None, []), [Expr(Str('Helper for testing that classify_class_attrs finds a bunch of\n        different kinds of attributes on a given class.\n        ', lineno=457, col_offset=-1), lineno=457, col_offset=-1), If(Name('newstyle', Load(), lineno=458, col_offset=11), [Assign([Name('base', Store(), lineno=459, col_offset=12)], Name('object', Load(), lineno=459, col_offset=19), lineno=459, col_offset=12)], [ClassDef('base', [], [Pass( lineno=462, col_offset=16)], [], lineno=461, col_offset=12)], lineno=458, col_offset=8), ClassDef('A', [Name('base', Load(), lineno=464, col_offset=16)], [FunctionDef('s', arguments([], None, None, []), [Pass( lineno=465, col_offset=21)], [], lineno=465, col_offset=12), Assign([Name('s', Store(), lineno=466, col_offset=12)], Call(Name('staticmethod', Load(), lineno=466, col_offset=16), [Name('s', Load(), lineno=466, col_offset=29)], [], None, None, lineno=466, col_offset=16), lineno=466, col_offset=12), FunctionDef('c', arguments([Name('cls', Param(), lineno=468, col_offset=18)], None, None, []), [Pass( lineno=468, col_offset=24)], [], lineno=468, col_offset=12), Assign([Name('c', Store(), lineno=469, col_offset=12)], Call(Name('classmethod', Load(), lineno=469, col_offset=16), [Name('c', Load(), lineno=469, col_offset=28)], [], None, None, lineno=469, col_offset=16), lineno=469, col_offset=12), FunctionDef('getp', arguments([Name('self', Param(), lineno=471, col_offset=21)], None, None, []), [Pass( lineno=471, col_offset=28)], [], lineno=471, col_offset=12), Assign([Name('p', Store(), lineno=472, col_offset=12)], Call(Name('property', Load(), lineno=472, col_offset=16), [Name('getp', Load(), lineno=472, col_offset=25)], [], None, None, lineno=472, col_offset=16), lineno=472, col_offset=12), FunctionDef('m', arguments([Name('self', Param(), lineno=474, col_offset=18)], None, None, []), [Pass( lineno=474, col_offset=25)], [], lineno=474, col_offset=12), FunctionDef('m1', arguments([Name('self', Param(), lineno=476, col_offset=19)], None, None, []), [Pass( lineno=476, col_offset=26)], [], lineno=476, col_offset=12), Assign([Name('datablob', Store(), lineno=478, col_offset=12)], Str('1', lineno=478, col_offset=23), lineno=478, col_offset=12)], [], lineno=464, col_offset=8), Assign([Name('attrs', Store(), lineno=480, col_offset=8)], Call(Name('attrs_wo_objs', Load(), lineno=480, col_offset=16), [Name('A', Load(), lineno=480, col_offset=30)], [], None, None, lineno=480, col_offset=16), lineno=480, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=481, col_offset=8), 'assertIn', Load(), lineno=481, col_offset=8), [Tuple([Str('s', lineno=481, col_offset=23), Str('static method', lineno=481, col_offset=28), Name('A', Load(), lineno=481, col_offset=45)], Load(), lineno=481, col_offset=23), Name('attrs', Load(), lineno=481, col_offset=49), Str('missing static method', lineno=481, col_offset=56)], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=482, col_offset=8), 'assertIn', Load(), lineno=482, col_offset=8), [Tuple([Str('c', lineno=482, col_offset=23), Str('class method', lineno=482, col_offset=28), Name('A', Load(), lineno=482, col_offset=44)], Load(), lineno=482, col_offset=23), Name('attrs', Load(), lineno=482, col_offset=48), Str('missing class method', lineno=482, col_offset=55)], [], None, None, lineno=482, col_offset=8), lineno=482, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=8), 'assertIn', Load(), lineno=483, col_offset=8), [Tuple([Str('p', lineno=483, col_offset=23), Str('property', lineno=483, col_offset=28), Name('A', Load(), lineno=483, col_offset=40)], Load(), lineno=483, col_offset=23), Name('attrs', Load(), lineno=483, col_offset=44), Str('missing property', lineno=483, col_offset=51)], [], None, None, lineno=483, col_offset=8), lineno=483, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=8), 'assertIn', Load(), lineno=484, col_offset=8), [Tuple([Str('m', lineno=484, col_offset=23), Str('method', lineno=484, col_offset=28), Name('A', Load(), lineno=484, col_offset=38)], Load(), lineno=484, col_offset=23), Name('attrs', Load(), lineno=484, col_offset=42), Str('missing plain method', lineno=484, col_offset=49)], [], None, None, lineno=484, col_offset=8), lineno=484, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=485, col_offset=8), 'assertIn', Load(), lineno=485, col_offset=8), [Tuple([Str('m1', lineno=485, col_offset=23), Str('method', lineno=485, col_offset=29), Name('A', Load(), lineno=485, col_offset=39)], Load(), lineno=485, col_offset=23), Name('attrs', Load(), lineno=485, col_offset=43), Str('missing plain method', lineno=485, col_offset=50)], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertIn', Load(), lineno=486, col_offset=8), [Tuple([Str('datablob', lineno=486, col_offset=23), Str('data', lineno=486, col_offset=35), Name('A', Load(), lineno=486, col_offset=43)], Load(), lineno=486, col_offset=23), Name('attrs', Load(), lineno=486, col_offset=47), Str('missing data', lineno=486, col_offset=54)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8), ClassDef('B', [Name('A', Load(), lineno=488, col_offset=16)], [FunctionDef('m', arguments([Name('self', Param(), lineno=489, col_offset=18)], None, None, []), [Pass( lineno=489, col_offset=25)], [], lineno=489, col_offset=12)], [], lineno=488, col_offset=8), Assign([Name('attrs', Store(), lineno=491, col_offset=8)], Call(Name('attrs_wo_objs', Load(), lineno=491, col_offset=16), [Name('B', Load(), lineno=491, col_offset=30)], [], None, None, lineno=491, col_offset=16), lineno=491, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=492, col_offset=8), 'assertIn', Load(), lineno=492, col_offset=8), [Tuple([Str('s', lineno=492, col_offset=23), Str('static method', lineno=492, col_offset=28), Name('A', Load(), lineno=492, col_offset=45)], Load(), lineno=492, col_offset=23), Name('attrs', Load(), lineno=492, col_offset=49), Str('missing static method', lineno=492, col_offset=56)], [], None, None, lineno=492, col_offset=8), lineno=492, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=8), 'assertIn', Load(), lineno=493, col_offset=8), [Tuple([Str('c', lineno=493, col_offset=23), Str('class method', lineno=493, col_offset=28), Name('A', Load(), lineno=493, col_offset=44)], Load(), lineno=493, col_offset=23), Name('attrs', Load(), lineno=493, col_offset=48), Str('missing class method', lineno=493, col_offset=55)], [], None, None, lineno=493, col_offset=8), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=8), 'assertIn', Load(), lineno=494, col_offset=8), [Tuple([Str('p', lineno=494, col_offset=23), Str('property', lineno=494, col_offset=28), Name('A', Load(), lineno=494, col_offset=40)], Load(), lineno=494, col_offset=23), Name('attrs', Load(), lineno=494, col_offset=44), Str('missing property', lineno=494, col_offset=51)], [], None, None, lineno=494, col_offset=8), lineno=494, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=8), 'assertIn', Load(), lineno=495, col_offset=8), [Tuple([Str('m', lineno=495, col_offset=23), Str('method', lineno=495, col_offset=28), Name('B', Load(), lineno=495, col_offset=38)], Load(), lineno=495, col_offset=23), Name('attrs', Load(), lineno=495, col_offset=42), Str('missing plain method', lineno=495, col_offset=49)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=8), 'assertIn', Load(), lineno=496, col_offset=8), [Tuple([Str('m1', lineno=496, col_offset=23), Str('method', lineno=496, col_offset=29), Name('A', Load(), lineno=496, col_offset=39)], Load(), lineno=496, col_offset=23), Name('attrs', Load(), lineno=496, col_offset=43), Str('missing plain method', lineno=496, col_offset=50)], [], None, None, lineno=496, col_offset=8), lineno=496, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=497, col_offset=8), 'assertIn', Load(), lineno=497, col_offset=8), [Tuple([Str('datablob', lineno=497, col_offset=23), Str('data', lineno=497, col_offset=35), Name('A', Load(), lineno=497, col_offset=43)], Load(), lineno=497, col_offset=23), Name('attrs', Load(), lineno=497, col_offset=47), Str('missing data', lineno=497, col_offset=54)], [], None, None, lineno=497, col_offset=8), lineno=497, col_offset=8), ClassDef('C', [Name('A', Load(), lineno=500, col_offset=16)], [FunctionDef('m', arguments([Name('self', Param(), lineno=501, col_offset=18)], None, None, []), [Pass( lineno=501, col_offset=25)], [], lineno=501, col_offset=12), FunctionDef('c', arguments([Name('self', Param(), lineno=502, col_offset=18)], None, None, []), [Pass( lineno=502, col_offset=25)], [], lineno=502, col_offset=12)], [], lineno=500, col_offset=8), Assign([Name('attrs', Store(), lineno=504, col_offset=8)], Call(Name('attrs_wo_objs', Load(), lineno=504, col_offset=16), [Name('C', Load(), lineno=504, col_offset=30)], [], None, None, lineno=504, col_offset=16), lineno=504, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=8), 'assertIn', Load(), lineno=505, col_offset=8), [Tuple([Str('s', lineno=505, col_offset=23), Str('static method', lineno=505, col_offset=28), Name('A', Load(), lineno=505, col_offset=45)], Load(), lineno=505, col_offset=23), Name('attrs', Load(), lineno=505, col_offset=49), Str('missing static method', lineno=505, col_offset=56)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=506, col_offset=8), 'assertIn', Load(), lineno=506, col_offset=8), [Tuple([Str('c', lineno=506, col_offset=23), Str('method', lineno=506, col_offset=28), Name('C', Load(), lineno=506, col_offset=38)], Load(), lineno=506, col_offset=23), Name('attrs', Load(), lineno=506, col_offset=42), Str('missing plain method', lineno=506, col_offset=49)], [], None, None, lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=8), 'assertIn', Load(), lineno=507, col_offset=8), [Tuple([Str('p', lineno=507, col_offset=23), Str('property', lineno=507, col_offset=28), Name('A', Load(), lineno=507, col_offset=40)], Load(), lineno=507, col_offset=23), Name('attrs', Load(), lineno=507, col_offset=44), Str('missing property', lineno=507, col_offset=51)], [], None, None, lineno=507, col_offset=8), lineno=507, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=508, col_offset=8), 'assertIn', Load(), lineno=508, col_offset=8), [Tuple([Str('m', lineno=508, col_offset=23), Str('method', lineno=508, col_offset=28), Name('C', Load(), lineno=508, col_offset=38)], Load(), lineno=508, col_offset=23), Name('attrs', Load(), lineno=508, col_offset=42), Str('missing plain method', lineno=508, col_offset=49)], [], None, None, lineno=508, col_offset=8), lineno=508, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=509, col_offset=8), 'assertIn', Load(), lineno=509, col_offset=8), [Tuple([Str('m1', lineno=509, col_offset=23), Str('method', lineno=509, col_offset=29), Name('A', Load(), lineno=509, col_offset=39)], Load(), lineno=509, col_offset=23), Name('attrs', Load(), lineno=509, col_offset=43), Str('missing plain method', lineno=509, col_offset=50)], [], None, None, lineno=509, col_offset=8), lineno=509, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=8), 'assertIn', Load(), lineno=510, col_offset=8), [Tuple([Str('datablob', lineno=510, col_offset=23), Str('data', lineno=510, col_offset=35), Name('A', Load(), lineno=510, col_offset=43)], Load(), lineno=510, col_offset=23), Name('attrs', Load(), lineno=510, col_offset=47), Str('missing data', lineno=510, col_offset=54)], [], None, None, lineno=510, col_offset=8), lineno=510, col_offset=8), ClassDef('D', [Name('B', Load(), lineno=512, col_offset=16), Name('C', Load(), lineno=512, col_offset=19)], [FunctionDef('m1', arguments([Name('self', Param(), lineno=513, col_offset=19)], None, None, []), [Pass( lineno=513, col_offset=26)], [], lineno=513, col_offset=12)], [], lineno=512, col_offset=8), Assign([Name('attrs', Store(), lineno=515, col_offset=8)], Call(Name('attrs_wo_objs', Load(), lineno=515, col_offset=16), [Name('D', Load(), lineno=515, col_offset=30)], [], None, None, lineno=515, col_offset=16), lineno=515, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertIn', Load(), lineno=516, col_offset=8), [Tuple([Str('s', lineno=516, col_offset=23), Str('static method', lineno=516, col_offset=28), Name('A', Load(), lineno=516, col_offset=45)], Load(), lineno=516, col_offset=23), Name('attrs', Load(), lineno=516, col_offset=49), Str('missing static method', lineno=516, col_offset=56)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), If(Name('newstyle', Load(), lineno=517, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=12), 'assertIn', Load(), lineno=518, col_offset=12), [Tuple([Str('c', lineno=518, col_offset=27), Str('method', lineno=518, col_offset=32), Name('C', Load(), lineno=518, col_offset=42)], Load(), lineno=518, col_offset=27), Name('attrs', Load(), lineno=518, col_offset=46), Str('missing plain method', lineno=518, col_offset=53)], [], None, None, lineno=518, col_offset=12), lineno=518, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=12), 'assertIn', Load(), lineno=520, col_offset=12), [Tuple([Str('c', lineno=520, col_offset=27), Str('class method', lineno=520, col_offset=32), Name('A', Load(), lineno=520, col_offset=48)], Load(), lineno=520, col_offset=27), Name('attrs', Load(), lineno=520, col_offset=52), Str('missing class method', lineno=520, col_offset=59)], [], None, None, lineno=520, col_offset=12), lineno=520, col_offset=12)], lineno=517, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=521, col_offset=8), 'assertIn', Load(), lineno=521, col_offset=8), [Tuple([Str('p', lineno=521, col_offset=23), Str('property', lineno=521, col_offset=28), Name('A', Load(), lineno=521, col_offset=40)], Load(), lineno=521, col_offset=23), Name('attrs', Load(), lineno=521, col_offset=44), Str('missing property', lineno=521, col_offset=51)], [], None, None, lineno=521, col_offset=8), lineno=521, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=522, col_offset=8), 'assertIn', Load(), lineno=522, col_offset=8), [Tuple([Str('m', lineno=522, col_offset=23), Str('method', lineno=522, col_offset=28), Name('B', Load(), lineno=522, col_offset=38)], Load(), lineno=522, col_offset=23), Name('attrs', Load(), lineno=522, col_offset=42), Str('missing plain method', lineno=522, col_offset=49)], [], None, None, lineno=522, col_offset=8), lineno=522, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=523, col_offset=8), 'assertIn', Load(), lineno=523, col_offset=8), [Tuple([Str('m1', lineno=523, col_offset=23), Str('method', lineno=523, col_offset=29), Name('D', Load(), lineno=523, col_offset=39)], Load(), lineno=523, col_offset=23), Name('attrs', Load(), lineno=523, col_offset=43), Str('missing plain method', lineno=523, col_offset=50)], [], None, None, lineno=523, col_offset=8), lineno=523, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=8), 'assertIn', Load(), lineno=524, col_offset=8), [Tuple([Str('datablob', lineno=524, col_offset=23), Str('data', lineno=524, col_offset=35), Name('A', Load(), lineno=524, col_offset=43)], Load(), lineno=524, col_offset=23), Name('attrs', Load(), lineno=524, col_offset=47), Str('missing data', lineno=524, col_offset=54)], [], None, None, lineno=524, col_offset=8), lineno=524, col_offset=8)], [], lineno=454, col_offset=4), FunctionDef('test_classify_oldstyle', arguments([Name('self', Param(), lineno=527, col_offset=31)], None, None, []), [Expr(Str('classify_class_attrs finds static methods, class methods,\n        properties, normal methods, and data attributes on an old-style\n        class.\n        ', lineno=531, col_offset=-1), lineno=531, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=532, col_offset=8), '_classify_test', Load(), lineno=532, col_offset=8), [Name('False', Load(), lineno=532, col_offset=28)], [], None, None, lineno=532, col_offset=8), lineno=532, col_offset=8)], [], lineno=527, col_offset=4), FunctionDef('test_classify_newstyle', arguments([Name('self', Param(), lineno=535, col_offset=31)], None, None, []), [Expr(Str('Just like test_classify_oldstyle, but for a new-style class.\n        ', lineno=537, col_offset=-1), lineno=537, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=538, col_offset=8), '_classify_test', Load(), lineno=538, col_offset=8), [Name('True', Load(), lineno=538, col_offset=28)], [], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8)], [], lineno=535, col_offset=4)], [], lineno=394, col_offset=0), ClassDef('TestGetcallargsFunctions', [Attribute(Name('unittest', Load(), lineno=542, col_offset=31), 'TestCase', Load(), lineno=542, col_offset=31)], [Assign([Name('is_tuplename', Store(), lineno=545, col_offset=4)], Attribute(Call(Attribute(Name('re', Load(), lineno=545, col_offset=19), 'compile', Load(), lineno=545, col_offset=19), [Str('^\\.\\d+$', lineno=545, col_offset=30)], [], None, None, lineno=545, col_offset=19), 'match', Load(), lineno=545, col_offset=19), lineno=545, col_offset=4), FunctionDef('assertEqualCallArgs', arguments([Name('self', Param(), lineno=547, col_offset=28), Name('func', Param(), lineno=547, col_offset=34), Name('call_params_string', Param(), lineno=547, col_offset=40), Name('locs', Param(), lineno=547, col_offset=60)], None, None, [Name('None', Load(), lineno=547, col_offset=65)]), [Assign([Name('locs', Store(), lineno=548, col_offset=8)], Call(Name('dict', Load(), lineno=548, col_offset=15), [BoolOp(Or(), [Name('locs', Load(), lineno=548, col_offset=20), Dict([], [], lineno=548, col_offset=28)], lineno=548, col_offset=20)], [keyword('func', Name('func', Load(), lineno=548, col_offset=37))], None, None, lineno=548, col_offset=15), lineno=548, col_offset=8), Assign([Name('r1', Store(), lineno=549, col_offset=8)], Call(Name('eval', Load(), lineno=549, col_offset=13), [BinOp(Str('func(%s)', lineno=549, col_offset=18), Mod(), Name('call_params_string', Load(), lineno=549, col_offset=31), lineno=549, col_offset=18), Name('None', Load(), lineno=549, col_offset=51), Name('locs', Load(), lineno=549, col_offset=57)], [], None, None, lineno=549, col_offset=13), lineno=549, col_offset=8), Assign([Name('r2', Store(), lineno=550, col_offset=8)], Call(Name('eval', Load(), lineno=550, col_offset=13), [BinOp(Str('inspect.getcallargs(func, %s)', lineno=550, col_offset=18), Mod(), Name('call_params_string', Load(), lineno=550, col_offset=52), lineno=550, col_offset=18), Name('None', Load(), lineno=550, col_offset=72), Name('locs', Load(), lineno=551, col_offset=18)], [], None, None, lineno=550, col_offset=13), lineno=550, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=552, col_offset=8), 'assertEqual', Load(), lineno=552, col_offset=8), [Name('r1', Load(), lineno=552, col_offset=25), Name('r2', Load(), lineno=552, col_offset=29)], [], None, None, lineno=552, col_offset=8), lineno=552, col_offset=8)], [], lineno=547, col_offset=4), FunctionDef('assertEqualException', arguments([Name('self', Param(), lineno=554, col_offset=29), Name('func', Param(), lineno=554, col_offset=35), Name('call_param_string', Param(), lineno=554, col_offset=41), Name('locs', Param(), lineno=554, col_offset=60)], None, None, [Name('None', Load(), lineno=554, col_offset=65)]), [Assign([Name('locs', Store(), lineno=555, col_offset=8)], Call(Name('dict', Load(), lineno=555, col_offset=15), [BoolOp(Or(), [Name('locs', Load(), lineno=555, col_offset=20), Dict([], [], lineno=555, col_offset=28)], lineno=555, col_offset=20)], [keyword('func', Name('func', Load(), lineno=555, col_offset=37))], None, None, lineno=555, col_offset=15), lineno=555, col_offset=8), TryExcept([Expr(Call(Name('eval', Load(), lineno=557, col_offset=12), [BinOp(Str('func(%s)', lineno=557, col_offset=17), Mod(), Name('call_param_string', Load(), lineno=557, col_offset=30), lineno=557, col_offset=17), Name('None', Load(), lineno=557, col_offset=49), Name('locs', Load(), lineno=557, col_offset=55)], [], None, None, lineno=557, col_offset=12), lineno=557, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=558, col_offset=15), Name('ex1', Store(), lineno=558, col_offset=26), [Pass( lineno=559, col_offset=12)], lineno=558, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=561, col_offset=12), 'fail', Load(), lineno=561, col_offset=12), [Str('Exception not raised', lineno=561, col_offset=22)], [], None, None, lineno=561, col_offset=12), lineno=561, col_offset=12)], lineno=556, col_offset=8), TryExcept([Expr(Call(Name('eval', Load(), lineno=563, col_offset=12), [BinOp(Str('inspect.getcallargs(func, %s)', lineno=563, col_offset=17), Mod(), Name('call_param_string', Load(), lineno=563, col_offset=51), lineno=563, col_offset=17), Name('None', Load(), lineno=563, col_offset=70), Name('locs', Load(), lineno=564, col_offset=17)], [], None, None, lineno=563, col_offset=12), lineno=563, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=565, col_offset=15), Name('ex2', Store(), lineno=565, col_offset=26), [Pass( lineno=566, col_offset=12)], lineno=565, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=568, col_offset=12), 'fail', Load(), lineno=568, col_offset=12), [Str('Exception not raised', lineno=568, col_offset=22)], [], None, None, lineno=568, col_offset=12), lineno=568, col_offset=12)], lineno=562, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=569, col_offset=8), 'assertIs', Load(), lineno=569, col_offset=8), [Call(Name('type', Load(), lineno=569, col_offset=22), [Name('ex1', Load(), lineno=569, col_offset=27)], [], None, None, lineno=569, col_offset=22), Call(Name('type', Load(), lineno=569, col_offset=33), [Name('ex2', Load(), lineno=569, col_offset=38)], [], None, None, lineno=569, col_offset=33)], [], None, None, lineno=569, col_offset=8), lineno=569, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=570, col_offset=8), 'assertEqual', Load(), lineno=570, col_offset=8), [Call(Name('str', Load(), lineno=570, col_offset=25), [Name('ex1', Load(), lineno=570, col_offset=29)], [], None, None, lineno=570, col_offset=25), Call(Name('str', Load(), lineno=570, col_offset=35), [Name('ex2', Load(), lineno=570, col_offset=39)], [], None, None, lineno=570, col_offset=35)], [], None, None, lineno=570, col_offset=8), lineno=570, col_offset=8)], [], lineno=554, col_offset=4), FunctionDef('makeCallable', arguments([Name('self', Param(), lineno=572, col_offset=21), Name('signature', Param(), lineno=572, col_offset=27)], None, None, []), [Expr(Str("Create a function that returns its locals(), excluding the\n        autogenerated '.1', '.2', etc. tuple param names (if any).", lineno=574, col_offset=-1), lineno=574, col_offset=-1), With(Call(Name('check_py3k_warnings', Load(), lineno=575, col_offset=13), [Tuple([Str('tuple parameter unpacking has been removed', lineno=576, col_offset=13), Name('SyntaxWarning', Load(), lineno=576, col_offset=59)], Load(), lineno=576, col_offset=13)], [keyword('quiet', Name('True', Load(), lineno=577, col_offset=18))], None, None, lineno=575, col_offset=13), None, [Assign([Name('code', Store(), lineno=578, col_offset=12)], Str('lambda %s: dict(i for i in locals().items() if not is_tuplename(i[0]))', lineno=578, col_offset=20), lineno=578, col_offset=12), Return(Call(Name('eval', Load(), lineno=580, col_offset=19), [BinOp(Name('code', Load(), lineno=580, col_offset=24), Mod(), Name('signature', Load(), lineno=580, col_offset=31), lineno=580, col_offset=24), Dict([Str('is_tuplename', lineno=580, col_offset=43)], [Attribute(Name('self', Load(), lineno=580, col_offset=60), 'is_tuplename', Load(), lineno=580, col_offset=60)], lineno=580, col_offset=42)], [], None, None, lineno=580, col_offset=19), lineno=580, col_offset=12)], lineno=575, col_offset=13)], [], lineno=572, col_offset=4), FunctionDef('test_plain', arguments([Name('self', Param(), lineno=582, col_offset=19)], None, None, []), [Assign([Name('f', Store(), lineno=583, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=583, col_offset=12), 'makeCallable', Load(), lineno=583, col_offset=12), [Str('a, b=1', lineno=583, col_offset=30)], [], None, None, lineno=583, col_offset=12), lineno=583, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'assertEqualCallArgs', Load(), lineno=584, col_offset=8), [Name('f', Load(), lineno=584, col_offset=33), Str('2', lineno=584, col_offset=36)], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=585, col_offset=8), 'assertEqualCallArgs', Load(), lineno=585, col_offset=8), [Name('f', Load(), lineno=585, col_offset=33), Str('2, 3', lineno=585, col_offset=36)], [], None, None, lineno=585, col_offset=8), lineno=585, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=586, col_offset=8), 'assertEqualCallArgs', Load(), lineno=586, col_offset=8), [Name('f', Load(), lineno=586, col_offset=33), Str('a=2', lineno=586, col_offset=36)], [], None, None, lineno=586, col_offset=8), lineno=586, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=8), 'assertEqualCallArgs', Load(), lineno=587, col_offset=8), [Name('f', Load(), lineno=587, col_offset=33), Str('b=3, a=2', lineno=587, col_offset=36)], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=588, col_offset=8), 'assertEqualCallArgs', Load(), lineno=588, col_offset=8), [Name('f', Load(), lineno=588, col_offset=33), Str('2, b=3', lineno=588, col_offset=36)], [], None, None, lineno=588, col_offset=8), lineno=588, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=590, col_offset=8), 'assertEqualCallArgs', Load(), lineno=590, col_offset=8), [Name('f', Load(), lineno=590, col_offset=33), Str('*(2,)', lineno=590, col_offset=36)], [], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=591, col_offset=8), 'assertEqualCallArgs', Load(), lineno=591, col_offset=8), [Name('f', Load(), lineno=591, col_offset=33), Str('*[2]', lineno=591, col_offset=36)], [], None, None, lineno=591, col_offset=8), lineno=591, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=8), 'assertEqualCallArgs', Load(), lineno=592, col_offset=8), [Name('f', Load(), lineno=592, col_offset=33), Str('*(2, 3)', lineno=592, col_offset=36)], [], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=593, col_offset=8), 'assertEqualCallArgs', Load(), lineno=593, col_offset=8), [Name('f', Load(), lineno=593, col_offset=33), Str('*[2, 3]', lineno=593, col_offset=36)], [], None, None, lineno=593, col_offset=8), lineno=593, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=594, col_offset=8), 'assertEqualCallArgs', Load(), lineno=594, col_offset=8), [Name('f', Load(), lineno=594, col_offset=33), Str('**{"a":2}', lineno=594, col_offset=36)], [], None, None, lineno=594, col_offset=8), lineno=594, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=595, col_offset=8), 'assertEqualCallArgs', Load(), lineno=595, col_offset=8), [Name('f', Load(), lineno=595, col_offset=33), Str('b=3, **{"a":2}', lineno=595, col_offset=36)], [], None, None, lineno=595, col_offset=8), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=596, col_offset=8), 'assertEqualCallArgs', Load(), lineno=596, col_offset=8), [Name('f', Load(), lineno=596, col_offset=33), Str('2, **{"b":3}', lineno=596, col_offset=36)], [], None, None, lineno=596, col_offset=8), lineno=596, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=597, col_offset=8), 'assertEqualCallArgs', Load(), lineno=597, col_offset=8), [Name('f', Load(), lineno=597, col_offset=33), Str('**{"b":3, "a":2}', lineno=597, col_offset=36)], [], None, None, lineno=597, col_offset=8), lineno=597, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=599, col_offset=8), 'assertEqualCallArgs', Load(), lineno=599, col_offset=8), [Name('f', Load(), lineno=599, col_offset=33), Str('*UserList([2])', lineno=599, col_offset=36)], [], None, None, lineno=599, col_offset=8), lineno=599, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=8), 'assertEqualCallArgs', Load(), lineno=600, col_offset=8), [Name('f', Load(), lineno=600, col_offset=33), Str('*UserList([2, 3])', lineno=600, col_offset=36)], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=601, col_offset=8), 'assertEqualCallArgs', Load(), lineno=601, col_offset=8), [Name('f', Load(), lineno=601, col_offset=33), Str('**UserDict(a=2)', lineno=601, col_offset=36)], [], None, None, lineno=601, col_offset=8), lineno=601, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=8), 'assertEqualCallArgs', Load(), lineno=602, col_offset=8), [Name('f', Load(), lineno=602, col_offset=33), Str('2, **UserDict(b=3)', lineno=602, col_offset=36)], [], None, None, lineno=602, col_offset=8), lineno=602, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=603, col_offset=8), 'assertEqualCallArgs', Load(), lineno=603, col_offset=8), [Name('f', Load(), lineno=603, col_offset=33), Str('b=2, **UserDict(a=3)', lineno=603, col_offset=36)], [], None, None, lineno=603, col_offset=8), lineno=603, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=8), 'assertEqualCallArgs', Load(), lineno=605, col_offset=8), [Name('f', Load(), lineno=605, col_offset=33), Str('**{u"a":2}', lineno=605, col_offset=36)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=606, col_offset=8), 'assertEqualCallArgs', Load(), lineno=606, col_offset=8), [Name('f', Load(), lineno=606, col_offset=33), Str('b=3, **{u"a":2}', lineno=606, col_offset=36)], [], None, None, lineno=606, col_offset=8), lineno=606, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=607, col_offset=8), 'assertEqualCallArgs', Load(), lineno=607, col_offset=8), [Name('f', Load(), lineno=607, col_offset=33), Str('2, **{u"b":3}', lineno=607, col_offset=36)], [], None, None, lineno=607, col_offset=8), lineno=607, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=608, col_offset=8), 'assertEqualCallArgs', Load(), lineno=608, col_offset=8), [Name('f', Load(), lineno=608, col_offset=33), Str('**{u"b":3, u"a":2}', lineno=608, col_offset=36)], [], None, None, lineno=608, col_offset=8), lineno=608, col_offset=8)], [], lineno=582, col_offset=4), FunctionDef('test_varargs', arguments([Name('self', Param(), lineno=610, col_offset=21)], None, None, []), [Assign([Name('f', Store(), lineno=611, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=611, col_offset=12), 'makeCallable', Load(), lineno=611, col_offset=12), [Str('a, b=1, *c', lineno=611, col_offset=30)], [], None, None, lineno=611, col_offset=12), lineno=611, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=612, col_offset=8), 'assertEqualCallArgs', Load(), lineno=612, col_offset=8), [Name('f', Load(), lineno=612, col_offset=33), Str('2', lineno=612, col_offset=36)], [], None, None, lineno=612, col_offset=8), lineno=612, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=613, col_offset=8), 'assertEqualCallArgs', Load(), lineno=613, col_offset=8), [Name('f', Load(), lineno=613, col_offset=33), Str('2, 3', lineno=613, col_offset=36)], [], None, None, lineno=613, col_offset=8), lineno=613, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=614, col_offset=8), 'assertEqualCallArgs', Load(), lineno=614, col_offset=8), [Name('f', Load(), lineno=614, col_offset=33), Str('2, 3, 4', lineno=614, col_offset=36)], [], None, None, lineno=614, col_offset=8), lineno=614, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=615, col_offset=8), 'assertEqualCallArgs', Load(), lineno=615, col_offset=8), [Name('f', Load(), lineno=615, col_offset=33), Str('*(2,3,4)', lineno=615, col_offset=36)], [], None, None, lineno=615, col_offset=8), lineno=615, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=616, col_offset=8), 'assertEqualCallArgs', Load(), lineno=616, col_offset=8), [Name('f', Load(), lineno=616, col_offset=33), Str('2, *[3,4]', lineno=616, col_offset=36)], [], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=617, col_offset=8), 'assertEqualCallArgs', Load(), lineno=617, col_offset=8), [Name('f', Load(), lineno=617, col_offset=33), Str('2, 3, *UserList([4])', lineno=617, col_offset=36)], [], None, None, lineno=617, col_offset=8), lineno=617, col_offset=8)], [], lineno=610, col_offset=4), FunctionDef('test_varkw', arguments([Name('self', Param(), lineno=619, col_offset=19)], None, None, []), [Assign([Name('f', Store(), lineno=620, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=620, col_offset=12), 'makeCallable', Load(), lineno=620, col_offset=12), [Str('a, b=1, **c', lineno=620, col_offset=30)], [], None, None, lineno=620, col_offset=12), lineno=620, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=621, col_offset=8), 'assertEqualCallArgs', Load(), lineno=621, col_offset=8), [Name('f', Load(), lineno=621, col_offset=33), Str('a=2', lineno=621, col_offset=36)], [], None, None, lineno=621, col_offset=8), lineno=621, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=622, col_offset=8), 'assertEqualCallArgs', Load(), lineno=622, col_offset=8), [Name('f', Load(), lineno=622, col_offset=33), Str('2, b=3, c=4', lineno=622, col_offset=36)], [], None, None, lineno=622, col_offset=8), lineno=622, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=623, col_offset=8), 'assertEqualCallArgs', Load(), lineno=623, col_offset=8), [Name('f', Load(), lineno=623, col_offset=33), Str('b=3, a=2, c=4', lineno=623, col_offset=36)], [], None, None, lineno=623, col_offset=8), lineno=623, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=624, col_offset=8), 'assertEqualCallArgs', Load(), lineno=624, col_offset=8), [Name('f', Load(), lineno=624, col_offset=33), Str('c=4, **{"a":2, "b":3}', lineno=624, col_offset=36)], [], None, None, lineno=624, col_offset=8), lineno=624, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=625, col_offset=8), 'assertEqualCallArgs', Load(), lineno=625, col_offset=8), [Name('f', Load(), lineno=625, col_offset=33), Str('2, c=4, **{"b":3}', lineno=625, col_offset=36)], [], None, None, lineno=625, col_offset=8), lineno=625, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=626, col_offset=8), 'assertEqualCallArgs', Load(), lineno=626, col_offset=8), [Name('f', Load(), lineno=626, col_offset=33), Str('b=2, **{"a":3, "c":4}', lineno=626, col_offset=36)], [], None, None, lineno=626, col_offset=8), lineno=626, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=627, col_offset=8), 'assertEqualCallArgs', Load(), lineno=627, col_offset=8), [Name('f', Load(), lineno=627, col_offset=33), Str('**UserDict(a=2, b=3, c=4)', lineno=627, col_offset=36)], [], None, None, lineno=627, col_offset=8), lineno=627, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=628, col_offset=8), 'assertEqualCallArgs', Load(), lineno=628, col_offset=8), [Name('f', Load(), lineno=628, col_offset=33), Str('2, c=4, **UserDict(b=3)', lineno=628, col_offset=36)], [], None, None, lineno=628, col_offset=8), lineno=628, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=629, col_offset=8), 'assertEqualCallArgs', Load(), lineno=629, col_offset=8), [Name('f', Load(), lineno=629, col_offset=33), Str('b=2, **UserDict(a=3, c=4)', lineno=629, col_offset=36)], [], None, None, lineno=629, col_offset=8), lineno=629, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=631, col_offset=8), 'assertEqualCallArgs', Load(), lineno=631, col_offset=8), [Name('f', Load(), lineno=631, col_offset=33), Str('c=4, **{u"a":2, u"b":3}', lineno=631, col_offset=36)], [], None, None, lineno=631, col_offset=8), lineno=631, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=632, col_offset=8), 'assertEqualCallArgs', Load(), lineno=632, col_offset=8), [Name('f', Load(), lineno=632, col_offset=33), Str('2, c=4, **{u"b":3}', lineno=632, col_offset=36)], [], None, None, lineno=632, col_offset=8), lineno=632, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=633, col_offset=8), 'assertEqualCallArgs', Load(), lineno=633, col_offset=8), [Name('f', Load(), lineno=633, col_offset=33), Str('b=2, **{u"a":3, u"c":4}', lineno=633, col_offset=36)], [], None, None, lineno=633, col_offset=8), lineno=633, col_offset=8)], [], lineno=619, col_offset=4), FunctionDef('test_tupleargs', arguments([Name('self', Param(), lineno=635, col_offset=23)], None, None, []), [Assign([Name('f', Store(), lineno=636, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=636, col_offset=12), 'makeCallable', Load(), lineno=636, col_offset=12), [Str('(b,c), (d,(e,f))=(0,[1,2])', lineno=636, col_offset=30)], [], None, None, lineno=636, col_offset=12), lineno=636, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=637, col_offset=8), 'assertEqualCallArgs', Load(), lineno=637, col_offset=8), [Name('f', Load(), lineno=637, col_offset=33), Str('(2,3)', lineno=637, col_offset=36)], [], None, None, lineno=637, col_offset=8), lineno=637, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=638, col_offset=8), 'assertEqualCallArgs', Load(), lineno=638, col_offset=8), [Name('f', Load(), lineno=638, col_offset=33), Str('[2,3]', lineno=638, col_offset=36)], [], None, None, lineno=638, col_offset=8), lineno=638, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=639, col_offset=8), 'assertEqualCallArgs', Load(), lineno=639, col_offset=8), [Name('f', Load(), lineno=639, col_offset=33), Str('UserList([2,3])', lineno=639, col_offset=36)], [], None, None, lineno=639, col_offset=8), lineno=639, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=640, col_offset=8), 'assertEqualCallArgs', Load(), lineno=640, col_offset=8), [Name('f', Load(), lineno=640, col_offset=33), Str('(2,3), (4,(5,6))', lineno=640, col_offset=36)], [], None, None, lineno=640, col_offset=8), lineno=640, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=641, col_offset=8), 'assertEqualCallArgs', Load(), lineno=641, col_offset=8), [Name('f', Load(), lineno=641, col_offset=33), Str('(2,3), (4,[5,6])', lineno=641, col_offset=36)], [], None, None, lineno=641, col_offset=8), lineno=641, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=642, col_offset=8), 'assertEqualCallArgs', Load(), lineno=642, col_offset=8), [Name('f', Load(), lineno=642, col_offset=33), Str('(2,3), [4,UserList([5,6])]', lineno=642, col_offset=36)], [], None, None, lineno=642, col_offset=8), lineno=642, col_offset=8)], [], lineno=635, col_offset=4), FunctionDef('test_multiple_features', arguments([Name('self', Param(), lineno=644, col_offset=31)], None, None, []), [Assign([Name('f', Store(), lineno=645, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=645, col_offset=12), 'makeCallable', Load(), lineno=645, col_offset=12), [Str('a, b=2, (c,(d,e))=(3,[4,5]), *f, **g', lineno=645, col_offset=30)], [], None, None, lineno=645, col_offset=12), lineno=645, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=646, col_offset=8), 'assertEqualCallArgs', Load(), lineno=646, col_offset=8), [Name('f', Load(), lineno=646, col_offset=33), Str('2, 3, (4,[5,6]), 7', lineno=646, col_offset=36)], [], None, None, lineno=646, col_offset=8), lineno=646, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=647, col_offset=8), 'assertEqualCallArgs', Load(), lineno=647, col_offset=8), [Name('f', Load(), lineno=647, col_offset=33), Str('2, 3, *[(4,[5,6]), 7], x=8', lineno=647, col_offset=36)], [], None, None, lineno=647, col_offset=8), lineno=647, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=648, col_offset=8), 'assertEqualCallArgs', Load(), lineno=648, col_offset=8), [Name('f', Load(), lineno=648, col_offset=33), Str('2, 3, x=8, *[(4,[5,6]), 7]', lineno=648, col_offset=36)], [], None, None, lineno=648, col_offset=8), lineno=648, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=649, col_offset=8), 'assertEqualCallArgs', Load(), lineno=649, col_offset=8), [Name('f', Load(), lineno=649, col_offset=33), Str('2, x=8, *[3, (4,[5,6]), 7], y=9', lineno=649, col_offset=36)], [], None, None, lineno=649, col_offset=8), lineno=649, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=650, col_offset=8), 'assertEqualCallArgs', Load(), lineno=650, col_offset=8), [Name('f', Load(), lineno=650, col_offset=33), Str('x=8, *[2, 3, (4,[5,6])], y=9', lineno=650, col_offset=36)], [], None, None, lineno=650, col_offset=8), lineno=650, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=8), 'assertEqualCallArgs', Load(), lineno=651, col_offset=8), [Name('f', Load(), lineno=651, col_offset=33), Str('x=8, *UserList([2, 3, (4,[5,6])]), **{"y":9, "z":10}', lineno=651, col_offset=36)], [], None, None, lineno=651, col_offset=8), lineno=651, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=653, col_offset=8), 'assertEqualCallArgs', Load(), lineno=653, col_offset=8), [Name('f', Load(), lineno=653, col_offset=33), Str('2, x=8, *UserList([3, (4,[5,6])]), **UserDict(y=9, z=10)', lineno=653, col_offset=36)], [], None, None, lineno=653, col_offset=8), lineno=653, col_offset=8)], [], lineno=644, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=656, col_offset=20)], None, None, []), [Assign([Name('f0', Store(), lineno=657, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=657, col_offset=13), 'makeCallable', Load(), lineno=657, col_offset=13), [Str('', lineno=657, col_offset=31)], [], None, None, lineno=657, col_offset=13), lineno=657, col_offset=8), Assign([Name('f1', Store(), lineno=658, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=658, col_offset=13), 'makeCallable', Load(), lineno=658, col_offset=13), [Str('a, b', lineno=658, col_offset=31)], [], None, None, lineno=658, col_offset=13), lineno=658, col_offset=8), Assign([Name('f2', Store(), lineno=659, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=659, col_offset=13), 'makeCallable', Load(), lineno=659, col_offset=13), [Str('a, b=1', lineno=659, col_offset=31)], [], None, None, lineno=659, col_offset=13), lineno=659, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=661, col_offset=8), 'assertEqualException', Load(), lineno=661, col_offset=8), [Name('f0', Load(), lineno=661, col_offset=34), Str('1', lineno=661, col_offset=38)], [], None, None, lineno=661, col_offset=8), lineno=661, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=662, col_offset=8), 'assertEqualException', Load(), lineno=662, col_offset=8), [Name('f0', Load(), lineno=662, col_offset=34), Str('x=1', lineno=662, col_offset=38)], [], None, None, lineno=662, col_offset=8), lineno=662, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=663, col_offset=8), 'assertEqualException', Load(), lineno=663, col_offset=8), [Name('f0', Load(), lineno=663, col_offset=34), Str('1,x=1', lineno=663, col_offset=38)], [], None, None, lineno=663, col_offset=8), lineno=663, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=665, col_offset=8), 'assertEqualException', Load(), lineno=665, col_offset=8), [Name('f1', Load(), lineno=665, col_offset=34), Str('', lineno=665, col_offset=38)], [], None, None, lineno=665, col_offset=8), lineno=665, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=666, col_offset=8), 'assertEqualException', Load(), lineno=666, col_offset=8), [Name('f1', Load(), lineno=666, col_offset=34), Str('1', lineno=666, col_offset=38)], [], None, None, lineno=666, col_offset=8), lineno=666, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=667, col_offset=8), 'assertEqualException', Load(), lineno=667, col_offset=8), [Name('f1', Load(), lineno=667, col_offset=34), Str('a=2', lineno=667, col_offset=38)], [], None, None, lineno=667, col_offset=8), lineno=667, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=668, col_offset=8), 'assertEqualException', Load(), lineno=668, col_offset=8), [Name('f1', Load(), lineno=668, col_offset=34), Str('b=3', lineno=668, col_offset=38)], [], None, None, lineno=668, col_offset=8), lineno=668, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=670, col_offset=8), 'assertEqualException', Load(), lineno=670, col_offset=8), [Name('f2', Load(), lineno=670, col_offset=34), Str('', lineno=670, col_offset=38)], [], None, None, lineno=670, col_offset=8), lineno=670, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=671, col_offset=8), 'assertEqualException', Load(), lineno=671, col_offset=8), [Name('f2', Load(), lineno=671, col_offset=34), Str('b=3', lineno=671, col_offset=38)], [], None, None, lineno=671, col_offset=8), lineno=671, col_offset=8), For(Name('f', Store(), lineno=672, col_offset=12), Tuple([Name('f1', Load(), lineno=672, col_offset=17), Name('f2', Load(), lineno=672, col_offset=21)], Load(), lineno=672, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=674, col_offset=12), 'assertEqualException', Load(), lineno=674, col_offset=12), [Name('f', Load(), lineno=674, col_offset=38), Str('2, 3, 4', lineno=674, col_offset=41)], [], None, None, lineno=674, col_offset=12), lineno=674, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=675, col_offset=12), 'assertEqualException', Load(), lineno=675, col_offset=12), [Name('f', Load(), lineno=675, col_offset=38), Str('1, 2, 3, a=1', lineno=675, col_offset=41)], [], None, None, lineno=675, col_offset=12), lineno=675, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=676, col_offset=12), 'assertEqualException', Load(), lineno=676, col_offset=12), [Name('f', Load(), lineno=676, col_offset=38), Str('2, 3, 4, c=5', lineno=676, col_offset=41)], [], None, None, lineno=676, col_offset=12), lineno=676, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=677, col_offset=12), 'assertEqualException', Load(), lineno=677, col_offset=12), [Name('f', Load(), lineno=677, col_offset=38), Str('2, 3, 4, a=1, c=5', lineno=677, col_offset=41)], [], None, None, lineno=677, col_offset=12), lineno=677, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=679, col_offset=12), 'assertEqualException', Load(), lineno=679, col_offset=12), [Name('f', Load(), lineno=679, col_offset=38), Str('c=2', lineno=679, col_offset=41)], [], None, None, lineno=679, col_offset=12), lineno=679, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=680, col_offset=12), 'assertEqualException', Load(), lineno=680, col_offset=12), [Name('f', Load(), lineno=680, col_offset=38), Str('2, c=3', lineno=680, col_offset=41)], [], None, None, lineno=680, col_offset=12), lineno=680, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=681, col_offset=12), 'assertEqualException', Load(), lineno=681, col_offset=12), [Name('f', Load(), lineno=681, col_offset=38), Str('2, 3, c=4', lineno=681, col_offset=41)], [], None, None, lineno=681, col_offset=12), lineno=681, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=682, col_offset=12), 'assertEqualException', Load(), lineno=682, col_offset=12), [Name('f', Load(), lineno=682, col_offset=38), Str('2, c=4, b=3', lineno=682, col_offset=41)], [], None, None, lineno=682, col_offset=12), lineno=682, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=683, col_offset=12), 'assertEqualException', Load(), lineno=683, col_offset=12), [Name('f', Load(), lineno=683, col_offset=38), Str('**{u"\\u03c0\\u03b9": 4}', lineno=683, col_offset=41)], [], None, None, lineno=683, col_offset=12), lineno=683, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=685, col_offset=12), 'assertEqualException', Load(), lineno=685, col_offset=12), [Name('f', Load(), lineno=685, col_offset=38), Str('1, a=2', lineno=685, col_offset=41)], [], None, None, lineno=685, col_offset=12), lineno=685, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=686, col_offset=12), 'assertEqualException', Load(), lineno=686, col_offset=12), [Name('f', Load(), lineno=686, col_offset=38), Str('1, **{"a":2}', lineno=686, col_offset=41)], [], None, None, lineno=686, col_offset=12), lineno=686, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=687, col_offset=12), 'assertEqualException', Load(), lineno=687, col_offset=12), [Name('f', Load(), lineno=687, col_offset=38), Str('1, 2, b=3', lineno=687, col_offset=41)], [], None, None, lineno=687, col_offset=12), lineno=687, col_offset=12)], [], lineno=672, col_offset=8), Assign([Name('f', Store(), lineno=692, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=692, col_offset=12), 'makeCallable', Load(), lineno=692, col_offset=12), [Str('(a,b)=(0,1)', lineno=692, col_offset=30)], [], None, None, lineno=692, col_offset=12), lineno=692, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=693, col_offset=8), 'assertEqualException', Load(), lineno=693, col_offset=8), [Name('f', Load(), lineno=693, col_offset=34), Str('1', lineno=693, col_offset=37)], [], None, None, lineno=693, col_offset=8), lineno=693, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=694, col_offset=8), 'assertEqualException', Load(), lineno=694, col_offset=8), [Name('f', Load(), lineno=694, col_offset=34), Str('[1]', lineno=694, col_offset=37)], [], None, None, lineno=694, col_offset=8), lineno=694, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=695, col_offset=8), 'assertEqualException', Load(), lineno=695, col_offset=8), [Name('f', Load(), lineno=695, col_offset=34), Str('(1,2,3)', lineno=695, col_offset=37)], [], None, None, lineno=695, col_offset=8), lineno=695, col_offset=8)], [], lineno=656, col_offset=4)], [], lineno=542, col_offset=0), ClassDef('TestGetcallargsMethods', [Name('TestGetcallargsFunctions', Load(), lineno=697, col_offset=29)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=699, col_offset=14)], None, None, []), [ClassDef('Foo', [Name('object', Load(), lineno=700, col_offset=18)], [Pass( lineno=701, col_offset=12)], [], lineno=700, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=702, col_offset=8), 'cls', Store(), lineno=702, col_offset=8)], Name('Foo', Load(), lineno=702, col_offset=19), lineno=702, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=703, col_offset=8), 'inst', Store(), lineno=703, col_offset=8)], Call(Name('Foo', Load(), lineno=703, col_offset=20), [], [], None, None, lineno=703, col_offset=20), lineno=703, col_offset=8)], [], lineno=699, col_offset=4), FunctionDef('makeCallable', arguments([Name('self', Param(), lineno=705, col_offset=21), Name('signature', Param(), lineno=705, col_offset=27)], None, None, []), [Assert(Compare(Str('self', lineno=706, col_offset=15), [NotIn()], [Name('signature', Load(), lineno=706, col_offset=29)], lineno=706, col_offset=15), None, lineno=706, col_offset=8), Assign([Name('mk', Store(), lineno=707, col_offset=8)], Attribute(Call(Name('super', Load(), lineno=707, col_offset=13), [Name('TestGetcallargsMethods', Load(), lineno=707, col_offset=19), Name('self', Load(), lineno=707, col_offset=43)], [], None, None, lineno=707, col_offset=13), 'makeCallable', Load(), lineno=707, col_offset=13), lineno=707, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=708, col_offset=8), 'cls', Load(), lineno=708, col_offset=8), 'method', Store(), lineno=708, col_offset=8)], Call(Name('mk', Load(), lineno=708, col_offset=26), [BinOp(Str('self, ', lineno=708, col_offset=29), Add(), Name('signature', Load(), lineno=708, col_offset=40), lineno=708, col_offset=29)], [], None, None, lineno=708, col_offset=26), lineno=708, col_offset=8), Return(Attribute(Attribute(Name('self', Load(), lineno=709, col_offset=15), 'inst', Load(), lineno=709, col_offset=15), 'method', Load(), lineno=709, col_offset=15), lineno=709, col_offset=8)], [], lineno=705, col_offset=4)], [], lineno=697, col_offset=0), ClassDef('TestGetcallargsUnboundMethods', [Name('TestGetcallargsMethods', Load(), lineno=711, col_offset=36)], [FunctionDef('makeCallable', arguments([Name('self', Param(), lineno=713, col_offset=21), Name('signature', Param(), lineno=713, col_offset=27)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=714, col_offset=8), [Name('TestGetcallargsUnboundMethods', Load(), lineno=714, col_offset=14), Name('self', Load(), lineno=714, col_offset=45)], [], None, None, lineno=714, col_offset=8), 'makeCallable', Load(), lineno=714, col_offset=8), [Name('signature', Load(), lineno=714, col_offset=64)], [], None, None, lineno=714, col_offset=8), lineno=714, col_offset=8), Return(Attribute(Attribute(Name('self', Load(), lineno=715, col_offset=15), 'cls', Load(), lineno=715, col_offset=15), 'method', Load(), lineno=715, col_offset=15), lineno=715, col_offset=8)], [], lineno=713, col_offset=4), FunctionDef('assertEqualCallArgs', arguments([Name('self', Param(), lineno=717, col_offset=28), Name('func', Param(), lineno=717, col_offset=34), Name('call_params_string', Param(), lineno=717, col_offset=40), Name('locs', Param(), lineno=717, col_offset=60)], None, None, [Name('None', Load(), lineno=717, col_offset=65)]), [Return(Call(Attribute(Call(Name('super', Load(), lineno=718, col_offset=15), [Name('TestGetcallargsUnboundMethods', Load(), lineno=718, col_offset=21), Name('self', Load(), lineno=718, col_offset=52)], [], None, None, lineno=718, col_offset=15), 'assertEqualCallArgs', Load(), lineno=718, col_offset=15), [], [], Call(Attribute(Name('self', Load(), lineno=719, col_offset=13), '_getAssertEqualParams', Load(), lineno=719, col_offset=13), [Name('func', Load(), lineno=719, col_offset=40), Name('call_params_string', Load(), lineno=719, col_offset=46), Name('locs', Load(), lineno=719, col_offset=66)], [], None, None, lineno=719, col_offset=13), None, lineno=718, col_offset=15), lineno=718, col_offset=8)], [], lineno=717, col_offset=4), FunctionDef('assertEqualException', arguments([Name('self', Param(), lineno=721, col_offset=29), Name('func', Param(), lineno=721, col_offset=35), Name('call_params_string', Param(), lineno=721, col_offset=41), Name('locs', Param(), lineno=721, col_offset=61)], None, None, [Name('None', Load(), lineno=721, col_offset=66)]), [Return(Call(Attribute(Call(Name('super', Load(), lineno=722, col_offset=15), [Name('TestGetcallargsUnboundMethods', Load(), lineno=722, col_offset=21), Name('self', Load(), lineno=722, col_offset=52)], [], None, None, lineno=722, col_offset=15), 'assertEqualException', Load(), lineno=722, col_offset=15), [], [], Call(Attribute(Name('self', Load(), lineno=723, col_offset=13), '_getAssertEqualParams', Load(), lineno=723, col_offset=13), [Name('func', Load(), lineno=723, col_offset=40), Name('call_params_string', Load(), lineno=723, col_offset=46), Name('locs', Load(), lineno=723, col_offset=66)], [], None, None, lineno=723, col_offset=13), None, lineno=722, col_offset=15), lineno=722, col_offset=8)], [], lineno=721, col_offset=4), FunctionDef('_getAssertEqualParams', arguments([Name('self', Param(), lineno=725, col_offset=30), Name('func', Param(), lineno=725, col_offset=36), Name('call_params_string', Param(), lineno=725, col_offset=42), Name('locs', Param(), lineno=725, col_offset=62)], None, None, [Name('None', Load(), lineno=725, col_offset=67)]), [Assert(Compare(Str('inst', lineno=726, col_offset=15), [NotIn()], [Name('call_params_string', Load(), lineno=726, col_offset=29)], lineno=726, col_offset=15), None, lineno=726, col_offset=8), Assign([Name('locs', Store(), lineno=727, col_offset=8)], Call(Name('dict', Load(), lineno=727, col_offset=15), [BoolOp(Or(), [Name('locs', Load(), lineno=727, col_offset=20), Dict([], [], lineno=727, col_offset=28)], lineno=727, col_offset=20)], [keyword('inst', Attribute(Name('self', Load(), lineno=727, col_offset=37), 'inst', Load(), lineno=727, col_offset=37))], None, None, lineno=727, col_offset=15), lineno=727, col_offset=8), Return(Tuple([Name('func', Load(), lineno=728, col_offset=16), BinOp(Str('inst,', lineno=728, col_offset=22), Add(), Name('call_params_string', Load(), lineno=728, col_offset=32), lineno=728, col_offset=22), Name('locs', Load(), lineno=728, col_offset=52)], Load(), lineno=728, col_offset=16), lineno=728, col_offset=8)], [], lineno=725, col_offset=4)], [], lineno=711, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=731, col_offset=4), [Name('TestDecorators', Load(), lineno=732, col_offset=8), Name('TestRetrievingSourceCode', Load(), lineno=732, col_offset=24), Name('TestOneliners', Load(), lineno=732, col_offset=50), Name('TestBuggyCases', Load(), lineno=732, col_offset=65), Name('TestInterpreterStack', Load(), lineno=733, col_offset=8), Name('TestClassesAndFunctions', Load(), lineno=733, col_offset=30), Name('TestPredicates', Load(), lineno=733, col_offset=55), Name('TestGetcallargsFunctions', Load(), lineno=734, col_offset=8), Name('TestGetcallargsMethods', Load(), lineno=734, col_offset=34), Name('TestGetcallargsUnboundMethods', Load(), lineno=735, col_offset=8)], [], None, None, lineno=731, col_offset=4), lineno=731, col_offset=4)], [], lineno=730, col_offset=0), If(Compare(Name('__name__', Load(), lineno=737, col_offset=3), [Eq()], [Str('__main__', lineno=737, col_offset=15)], lineno=737, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=738, col_offset=4), [], [], None, None, lineno=738, col_offset=4), lineno=738, col_offset=4)], [], lineno=737, col_offset=0)])
