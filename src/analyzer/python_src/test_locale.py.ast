Module([ImportFrom('test.test_support', [alias('run_unittest', None), alias('verbose', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('locale', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('codecs', None)], lineno=5, col_offset=0), Assign([Name('enUS_locale', Store(), lineno=8, col_offset=0)], Name('None', Load(), lineno=8, col_offset=14), lineno=8, col_offset=0), FunctionDef('get_enUS_locale', arguments([], None, None, []), [Global(['enUS_locale'], lineno=11, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=12, col_offset=7), 'platform', Load(), lineno=12, col_offset=7), [Eq()], [Str('darwin', lineno=12, col_offset=23)], lineno=12, col_offset=7), [Import([alias('os', None)], lineno=13, col_offset=8), Assign([Name('tlocs', Store(), lineno=14, col_offset=8)], Tuple([Str('en_US.UTF-8', lineno=14, col_offset=17), Str('en_US.ISO8859-1', lineno=14, col_offset=32), Str('en_US', lineno=14, col_offset=51)], Load(), lineno=14, col_offset=17), lineno=14, col_offset=8), If(Compare(Call(Name('int', Load(), lineno=15, col_offset=11), [Subscript(Call(Attribute(Subscript(Call(Attribute(Name('os', Load(), lineno=15, col_offset=15), 'uname', Load(), lineno=15, col_offset=15), [], [], None, None, lineno=15, col_offset=15), Index(Num(2, lineno=15, col_offset=26)), Load(), lineno=15, col_offset=15), 'split', Load(), lineno=15, col_offset=15), [Str('.', lineno=15, col_offset=35)], [], None, None, lineno=15, col_offset=15), Index(Num(0, lineno=15, col_offset=40)), Load(), lineno=15, col_offset=15)], [], None, None, lineno=15, col_offset=11), [Lt()], [Num(10, lineno=15, col_offset=46)], lineno=15, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=19, col_offset=18), 'SkipTest', Load(), lineno=19, col_offset=18), [Str('Locale support on MacOSX is minimal', lineno=19, col_offset=36)], [], None, None, lineno=19, col_offset=18), None, None, lineno=19, col_offset=12)], [], lineno=15, col_offset=8)], [], lineno=12, col_offset=4), If(Call(Attribute(Attribute(Name('sys', Load(), lineno=20, col_offset=7), 'platform', Load(), lineno=20, col_offset=7), 'startswith', Load(), lineno=20, col_offset=7), [Str('win', lineno=20, col_offset=31)], [], None, None, lineno=20, col_offset=7), [Assign([Name('tlocs', Store(), lineno=21, col_offset=8)], Tuple([Str('En', lineno=21, col_offset=17), Str('English', lineno=21, col_offset=23)], Load(), lineno=21, col_offset=17), lineno=21, col_offset=8)], [Assign([Name('tlocs', Store(), lineno=23, col_offset=8)], Tuple([Str('en_US.UTF-8', lineno=23, col_offset=17), Str('en_US.US-ASCII', lineno=23, col_offset=32), Str('en_US', lineno=23, col_offset=50)], Load(), lineno=23, col_offset=17), lineno=23, col_offset=8)], lineno=20, col_offset=4), Assign([Name('oldlocale', Store(), lineno=24, col_offset=4)], Call(Attribute(Name('locale', Load(), lineno=24, col_offset=16), 'setlocale', Load(), lineno=24, col_offset=16), [Attribute(Name('locale', Load(), lineno=24, col_offset=33), 'LC_NUMERIC', Load(), lineno=24, col_offset=33)], [], None, None, lineno=24, col_offset=16), lineno=24, col_offset=4), For(Name('tloc', Store(), lineno=25, col_offset=8), Name('tlocs', Load(), lineno=25, col_offset=16), [TryExcept([Expr(Call(Attribute(Name('locale', Load(), lineno=27, col_offset=12), 'setlocale', Load(), lineno=27, col_offset=12), [Attribute(Name('locale', Load(), lineno=27, col_offset=29), 'LC_NUMERIC', Load(), lineno=27, col_offset=29), Name('tloc', Load(), lineno=27, col_offset=48)], [], None, None, lineno=27, col_offset=12), lineno=27, col_offset=12)], [ExceptHandler(Attribute(Name('locale', Load(), lineno=28, col_offset=15), 'Error', Load(), lineno=28, col_offset=15), None, [Continue( lineno=29, col_offset=12)], lineno=28, col_offset=8)], [], lineno=26, col_offset=8), Break( lineno=30, col_offset=8)], [Raise(Call(Attribute(Name('unittest', Load(), lineno=32, col_offset=14), 'SkipTest', Load(), lineno=32, col_offset=14), [BinOp(Str('Test locale not supported (tried %s)', lineno=33, col_offset=12), Mod(), Call(Attribute(Str(', ', lineno=33, col_offset=54), 'join', Load(), lineno=33, col_offset=54), [Name('tlocs', Load(), lineno=33, col_offset=64)], [], None, None, lineno=33, col_offset=54), lineno=33, col_offset=12)], [], None, None, lineno=32, col_offset=14), None, None, lineno=32, col_offset=8)], lineno=25, col_offset=4), Assign([Name('enUS_locale', Store(), lineno=34, col_offset=4)], Name('tloc', Load(), lineno=34, col_offset=18), lineno=34, col_offset=4), Expr(Call(Attribute(Name('locale', Load(), lineno=35, col_offset=4), 'setlocale', Load(), lineno=35, col_offset=4), [Attribute(Name('locale', Load(), lineno=35, col_offset=21), 'LC_NUMERIC', Load(), lineno=35, col_offset=21), Name('oldlocale', Load(), lineno=35, col_offset=40)], [], None, None, lineno=35, col_offset=4), lineno=35, col_offset=4)], [], lineno=10, col_offset=0), ClassDef('BaseLocalizedTest', [Attribute(Name('unittest', Load(), lineno=38, col_offset=24), 'TestCase', Load(), lineno=38, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=43, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'oldlocale', Store(), lineno=44, col_offset=8)], Call(Attribute(Name('locale', Load(), lineno=44, col_offset=25), 'setlocale', Load(), lineno=44, col_offset=25), [Attribute(Name('self', Load(), lineno=44, col_offset=42), 'locale_type', Load(), lineno=44, col_offset=42)], [], None, None, lineno=44, col_offset=25), lineno=44, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=45, col_offset=8), 'setlocale', Load(), lineno=45, col_offset=8), [Attribute(Name('self', Load(), lineno=45, col_offset=25), 'locale_type', Load(), lineno=45, col_offset=25), Name('enUS_locale', Load(), lineno=45, col_offset=43)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), If(Name('verbose', Load(), lineno=46, col_offset=11), [Print(None, [BinOp(Str('testing with "%s"...', lineno=47, col_offset=18), Mod(), Name('enUS_locale', Load(), lineno=47, col_offset=45), lineno=47, col_offset=18)], False, lineno=47, col_offset=12)], [], lineno=46, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=49, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('locale', Load(), lineno=50, col_offset=8), 'setlocale', Load(), lineno=50, col_offset=8), [Attribute(Name('self', Load(), lineno=50, col_offset=25), 'locale_type', Load(), lineno=50, col_offset=25), Attribute(Name('self', Load(), lineno=50, col_offset=43), 'oldlocale', Load(), lineno=50, col_offset=43)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8)], [], lineno=49, col_offset=4)], [], lineno=38, col_offset=0), ClassDef('BaseCookedTest', [Attribute(Name('unittest', Load(), lineno=53, col_offset=21), 'TestCase', Load(), lineno=53, col_offset=21)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=58, col_offset=14)], None, None, []), [Assign([Attribute(Name('locale', Load(), lineno=59, col_offset=8), '_override_localeconv', Store(), lineno=59, col_offset=8)], Attribute(Name('self', Load(), lineno=59, col_offset=38), 'cooked_values', Load(), lineno=59, col_offset=38), lineno=59, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=61, col_offset=17)], None, None, []), [Assign([Attribute(Name('locale', Load(), lineno=62, col_offset=8), '_override_localeconv', Store(), lineno=62, col_offset=8)], Dict([], [], lineno=62, col_offset=38), lineno=62, col_offset=8)], [], lineno=61, col_offset=4)], [], lineno=53, col_offset=0), ClassDef('CCookedTest', [Name('BaseCookedTest', Load(), lineno=65, col_offset=18)], [Assign([Name('cooked_values', Store(), lineno=68, col_offset=4)], Dict([Str('currency_symbol', lineno=69, col_offset=8), Str('decimal_point', lineno=70, col_offset=8), Str('frac_digits', lineno=71, col_offset=8), Str('grouping', lineno=72, col_offset=8), Str('int_curr_symbol', lineno=73, col_offset=8), Str('int_frac_digits', lineno=74, col_offset=8), Str('mon_decimal_point', lineno=75, col_offset=8), Str('mon_grouping', lineno=76, col_offset=8), Str('mon_thousands_sep', lineno=77, col_offset=8), Str('n_cs_precedes', lineno=78, col_offset=8), Str('n_sep_by_space', lineno=79, col_offset=8), Str('n_sign_posn', lineno=80, col_offset=8), Str('negative_sign', lineno=81, col_offset=8), Str('p_cs_precedes', lineno=82, col_offset=8), Str('p_sep_by_space', lineno=83, col_offset=8), Str('p_sign_posn', lineno=84, col_offset=8), Str('positive_sign', lineno=85, col_offset=8), Str('thousands_sep', lineno=86, col_offset=8)], [Str('', lineno=69, col_offset=27), Str('.', lineno=70, col_offset=25), Num(127, lineno=71, col_offset=23), List([], Load(), lineno=72, col_offset=20), Str('', lineno=73, col_offset=27), Num(127, lineno=74, col_offset=27), Str('', lineno=75, col_offset=29), List([], Load(), lineno=76, col_offset=24), Str('', lineno=77, col_offset=29), Num(127, lineno=78, col_offset=25), Num(127, lineno=79, col_offset=26), Num(127, lineno=80, col_offset=23), Str('', lineno=81, col_offset=25), Num(127, lineno=82, col_offset=25), Num(127, lineno=83, col_offset=26), Num(127, lineno=84, col_offset=23), Str('', lineno=85, col_offset=25), Str('', lineno=86, col_offset=25)], lineno=68, col_offset=20), lineno=68, col_offset=4)], [], lineno=65, col_offset=0), ClassDef('EnUSCookedTest', [Name('BaseCookedTest', Load(), lineno=89, col_offset=21)], [Assign([Name('cooked_values', Store(), lineno=92, col_offset=4)], Dict([Str('currency_symbol', lineno=93, col_offset=8), Str('decimal_point', lineno=94, col_offset=8), Str('frac_digits', lineno=95, col_offset=8), Str('grouping', lineno=96, col_offset=8), Str('int_curr_symbol', lineno=97, col_offset=8), Str('int_frac_digits', lineno=98, col_offset=8), Str('mon_decimal_point', lineno=99, col_offset=8), Str('mon_grouping', lineno=100, col_offset=8), Str('mon_thousands_sep', lineno=101, col_offset=8), Str('n_cs_precedes', lineno=102, col_offset=8), Str('n_sep_by_space', lineno=103, col_offset=8), Str('n_sign_posn', lineno=104, col_offset=8), Str('negative_sign', lineno=105, col_offset=8), Str('p_cs_precedes', lineno=106, col_offset=8), Str('p_sep_by_space', lineno=107, col_offset=8), Str('p_sign_posn', lineno=108, col_offset=8), Str('positive_sign', lineno=109, col_offset=8), Str('thousands_sep', lineno=110, col_offset=8)], [Str('$', lineno=93, col_offset=27), Str('.', lineno=94, col_offset=25), Num(2, lineno=95, col_offset=23), List([Num(3, lineno=96, col_offset=21), Num(3, lineno=96, col_offset=24), Num(0, lineno=96, col_offset=27)], Load(), lineno=96, col_offset=20), Str('USD ', lineno=97, col_offset=27), Num(2, lineno=98, col_offset=27), Str('.', lineno=99, col_offset=29), List([Num(3, lineno=100, col_offset=25), Num(3, lineno=100, col_offset=28), Num(0, lineno=100, col_offset=31)], Load(), lineno=100, col_offset=24), Str(',', lineno=101, col_offset=29), Num(1, lineno=102, col_offset=25), Num(0, lineno=103, col_offset=26), Num(1, lineno=104, col_offset=23), Str('-', lineno=105, col_offset=25), Num(1, lineno=106, col_offset=25), Num(0, lineno=107, col_offset=26), Num(1, lineno=108, col_offset=23), Str('', lineno=109, col_offset=25), Str(',', lineno=110, col_offset=25)], lineno=92, col_offset=20), lineno=92, col_offset=4)], [], lineno=89, col_offset=0), ClassDef('FrFRCookedTest', [Name('BaseCookedTest', Load(), lineno=114, col_offset=21)], [Assign([Name('cooked_values', Store(), lineno=118, col_offset=4)], Dict([Str('currency_symbol', lineno=119, col_offset=8), Str('decimal_point', lineno=120, col_offset=8), Str('frac_digits', lineno=121, col_offset=8), Str('grouping', lineno=122, col_offset=8), Str('int_curr_symbol', lineno=123, col_offset=8), Str('int_frac_digits', lineno=124, col_offset=8), Str('mon_decimal_point', lineno=125, col_offset=8), Str('mon_grouping', lineno=126, col_offset=8), Str('mon_thousands_sep', lineno=127, col_offset=8), Str('n_cs_precedes', lineno=128, col_offset=8), Str('n_sep_by_space', lineno=129, col_offset=8), Str('n_sign_posn', lineno=130, col_offset=8), Str('negative_sign', lineno=131, col_offset=8), Str('p_cs_precedes', lineno=132, col_offset=8), Str('p_sep_by_space', lineno=133, col_offset=8), Str('p_sign_posn', lineno=134, col_offset=8), Str('positive_sign', lineno=135, col_offset=8), Str('thousands_sep', lineno=136, col_offset=8)], [Str('\xe2\x82\xac', lineno=119, col_offset=27), Str(',', lineno=120, col_offset=25), Num(2, lineno=121, col_offset=23), List([Num(3, lineno=122, col_offset=21), Num(3, lineno=122, col_offset=24), Num(0, lineno=122, col_offset=27)], Load(), lineno=122, col_offset=20), Str('EUR ', lineno=123, col_offset=27), Num(2, lineno=124, col_offset=27), Str(',', lineno=125, col_offset=29), List([Num(3, lineno=126, col_offset=25), Num(3, lineno=126, col_offset=28), Num(0, lineno=126, col_offset=31)], Load(), lineno=126, col_offset=24), Str(' ', lineno=127, col_offset=29), Num(0, lineno=128, col_offset=25), Num(1, lineno=129, col_offset=26), Num(1, lineno=130, col_offset=23), Str('-', lineno=131, col_offset=25), Num(0, lineno=132, col_offset=25), Num(1, lineno=133, col_offset=26), Num(1, lineno=134, col_offset=23), Str('', lineno=135, col_offset=25), Str(' ', lineno=136, col_offset=25)], lineno=118, col_offset=20), lineno=118, col_offset=4)], [], lineno=114, col_offset=0), ClassDef('BaseFormattingTest', [Name('object', Load(), lineno=140, col_offset=25)], [FunctionDef('_test_formatfunc', arguments([Name('self', Param(), lineno=145, col_offset=25), Name('format', Param(), lineno=145, col_offset=31), Name('value', Param(), lineno=145, col_offset=39), Name('out', Param(), lineno=145, col_offset=46), Name('func', Param(), lineno=145, col_offset=51)], None, 'format_opts', []), [Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertEqual', Load(), lineno=146, col_offset=8), [Call(Name('func', Load(), lineno=147, col_offset=12), [Name('format', Load(), lineno=147, col_offset=17), Name('value', Load(), lineno=147, col_offset=25)], [], None, Name('format_opts', Load(), lineno=147, col_offset=34), lineno=147, col_offset=12), Name('out', Load(), lineno=147, col_offset=48)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('_test_format', arguments([Name('self', Param(), lineno=149, col_offset=21), Name('format', Param(), lineno=149, col_offset=27), Name('value', Param(), lineno=149, col_offset=35), Name('out', Param(), lineno=149, col_offset=42)], None, 'format_opts', []), [Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), '_test_formatfunc', Load(), lineno=150, col_offset=8), [Name('format', Load(), lineno=150, col_offset=30), Name('value', Load(), lineno=150, col_offset=38), Name('out', Load(), lineno=150, col_offset=45)], [keyword('func', Attribute(Name('locale', Load(), lineno=151, col_offset=17), 'format', Load(), lineno=151, col_offset=17))], None, Name('format_opts', Load(), lineno=151, col_offset=34), lineno=150, col_offset=8), lineno=150, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('_test_format_string', arguments([Name('self', Param(), lineno=153, col_offset=28), Name('format', Param(), lineno=153, col_offset=34), Name('value', Param(), lineno=153, col_offset=42), Name('out', Param(), lineno=153, col_offset=49)], None, 'format_opts', []), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), '_test_formatfunc', Load(), lineno=154, col_offset=8), [Name('format', Load(), lineno=154, col_offset=30), Name('value', Load(), lineno=154, col_offset=38), Name('out', Load(), lineno=154, col_offset=45)], [keyword('func', Attribute(Name('locale', Load(), lineno=155, col_offset=17), 'format_string', Load(), lineno=155, col_offset=17))], None, Name('format_opts', Load(), lineno=155, col_offset=41), lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('_test_currency', arguments([Name('self', Param(), lineno=157, col_offset=23), Name('value', Param(), lineno=157, col_offset=29), Name('out', Param(), lineno=157, col_offset=36)], None, 'format_opts', []), [Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=8), 'assertEqual', Load(), lineno=158, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=158, col_offset=25), 'currency', Load(), lineno=158, col_offset=25), [Name('value', Load(), lineno=158, col_offset=41)], [], None, Name('format_opts', Load(), lineno=158, col_offset=50), lineno=158, col_offset=25), Name('out', Load(), lineno=158, col_offset=64)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=157, col_offset=4)], [], lineno=140, col_offset=0), ClassDef('EnUSNumberFormatting', [Name('BaseFormattingTest', Load(), lineno=161, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=165, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=166, col_offset=8), 'sep', Store(), lineno=166, col_offset=8)], Subscript(Call(Attribute(Name('locale', Load(), lineno=166, col_offset=19), 'localeconv', Load(), lineno=166, col_offset=19), [], [], None, None, lineno=166, col_offset=19), Index(Str('thousands_sep', lineno=166, col_offset=39)), Load(), lineno=166, col_offset=19), lineno=166, col_offset=8)], [], lineno=165, col_offset=4), FunctionDef('test_grouping', arguments([Name('self', Param(), lineno=168, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), '_test_format', Load(), lineno=169, col_offset=8), [Str('%f', lineno=169, col_offset=26), Num(1024, lineno=169, col_offset=32)], [keyword('grouping', Num(1, lineno=169, col_offset=47)), keyword('out', BinOp(Str('1%s024.000000', lineno=169, col_offset=54), Mod(), Attribute(Name('self', Load(), lineno=169, col_offset=72), 'sep', Load(), lineno=169, col_offset=72), lineno=169, col_offset=54))], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), '_test_format', Load(), lineno=170, col_offset=8), [Str('%f', lineno=170, col_offset=26), Num(102, lineno=170, col_offset=32)], [keyword('grouping', Num(1, lineno=170, col_offset=46)), keyword('out', Str('102.000000', lineno=170, col_offset=53))], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), '_test_format', Load(), lineno=171, col_offset=8), [Str('%f', lineno=171, col_offset=26), Num(-42, lineno=171, col_offset=33)], [keyword('grouping', Num(1, lineno=171, col_offset=46)), keyword('out', Str('-42.000000', lineno=171, col_offset=53))], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=8), '_test_format', Load(), lineno=172, col_offset=8), [Str('%+f', lineno=172, col_offset=26), Num(-42, lineno=172, col_offset=34)], [keyword('grouping', Num(1, lineno=172, col_offset=47)), keyword('out', Str('-42.000000', lineno=172, col_offset=54))], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8)], [], lineno=168, col_offset=4), FunctionDef('test_grouping_and_padding', arguments([Name('self', Param(), lineno=174, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), '_test_format', Load(), lineno=175, col_offset=8), [Str('%20.f', lineno=175, col_offset=26), Num(-42, lineno=175, col_offset=36)], [keyword('grouping', Num(1, lineno=175, col_offset=49)), keyword('out', Call(Attribute(Str('-42', lineno=175, col_offset=56), 'rjust', Load(), lineno=175, col_offset=56), [Num(20, lineno=175, col_offset=68)], [], None, None, lineno=175, col_offset=56))], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), If(Attribute(Name('self', Load(), lineno=176, col_offset=11), 'sep', Load(), lineno=176, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=12), '_test_format', Load(), lineno=177, col_offset=12), [Str('%+10.f', lineno=177, col_offset=30), Num(-4200, lineno=177, col_offset=41)], [keyword('grouping', Num(1, lineno=177, col_offset=56)), keyword('out', Call(Attribute(BinOp(Str('-4%s200', lineno=178, col_offset=21), Mod(), Attribute(Name('self', Load(), lineno=178, col_offset=33), 'sep', Load(), lineno=178, col_offset=33), lineno=178, col_offset=21), 'rjust', Load(), lineno=178, col_offset=21), [Num(10, lineno=178, col_offset=49)], [], None, None, lineno=178, col_offset=21))], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=12), '_test_format', Load(), lineno=179, col_offset=12), [Str('%-10.f', lineno=179, col_offset=30), Num(-4200, lineno=179, col_offset=41)], [keyword('grouping', Num(1, lineno=179, col_offset=56)), keyword('out', Call(Attribute(BinOp(Str('-4%s200', lineno=180, col_offset=21), Mod(), Attribute(Name('self', Load(), lineno=180, col_offset=33), 'sep', Load(), lineno=180, col_offset=33), lineno=180, col_offset=21), 'ljust', Load(), lineno=180, col_offset=21), [Num(10, lineno=180, col_offset=49)], [], None, None, lineno=180, col_offset=21))], None, None, lineno=179, col_offset=12), lineno=179, col_offset=12)], [], lineno=176, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('test_integer_grouping', arguments([Name('self', Param(), lineno=182, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), '_test_format', Load(), lineno=183, col_offset=8), [Str('%d', lineno=183, col_offset=26), Num(4200, lineno=183, col_offset=32)], [keyword('grouping', Name('True', Load(), lineno=183, col_offset=47)), keyword('out', BinOp(Str('4%s200', lineno=183, col_offset=57), Mod(), Attribute(Name('self', Load(), lineno=183, col_offset=68), 'sep', Load(), lineno=183, col_offset=68), lineno=183, col_offset=57))], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), '_test_format', Load(), lineno=184, col_offset=8), [Str('%+d', lineno=184, col_offset=26), Num(4200, lineno=184, col_offset=33)], [keyword('grouping', Name('True', Load(), lineno=184, col_offset=48)), keyword('out', BinOp(Str('+4%s200', lineno=184, col_offset=58), Mod(), Attribute(Name('self', Load(), lineno=184, col_offset=70), 'sep', Load(), lineno=184, col_offset=70), lineno=184, col_offset=58))], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), '_test_format', Load(), lineno=185, col_offset=8), [Str('%+d', lineno=185, col_offset=26), Num(-4200, lineno=185, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=185, col_offset=49)), keyword('out', BinOp(Str('-4%s200', lineno=185, col_offset=59), Mod(), Attribute(Name('self', Load(), lineno=185, col_offset=71), 'sep', Load(), lineno=185, col_offset=71), lineno=185, col_offset=59))], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('test_integer_grouping_and_padding', arguments([Name('self', Param(), lineno=187, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), '_test_format', Load(), lineno=188, col_offset=8), [Str('%10d', lineno=188, col_offset=26), Num(4200, lineno=188, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=188, col_offset=49)), keyword('out', Call(Attribute(BinOp(Str('4%s200', lineno=189, col_offset=17), Mod(), Attribute(Name('self', Load(), lineno=189, col_offset=28), 'sep', Load(), lineno=189, col_offset=28), lineno=189, col_offset=17), 'rjust', Load(), lineno=189, col_offset=17), [Num(10, lineno=189, col_offset=44)], [], None, None, lineno=189, col_offset=17))], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), '_test_format', Load(), lineno=190, col_offset=8), [Str('%-10d', lineno=190, col_offset=26), Num(-4200, lineno=190, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=190, col_offset=51)), keyword('out', Call(Attribute(BinOp(Str('-4%s200', lineno=191, col_offset=17), Mod(), Attribute(Name('self', Load(), lineno=191, col_offset=29), 'sep', Load(), lineno=191, col_offset=29), lineno=191, col_offset=17), 'ljust', Load(), lineno=191, col_offset=17), [Num(10, lineno=191, col_offset=45)], [], None, None, lineno=191, col_offset=17))], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('test_simple', arguments([Name('self', Param(), lineno=193, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), '_test_format', Load(), lineno=194, col_offset=8), [Str('%f', lineno=194, col_offset=26), Num(1024, lineno=194, col_offset=32)], [keyword('grouping', Num(0, lineno=194, col_offset=47)), keyword('out', Str('1024.000000', lineno=194, col_offset=54))], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), '_test_format', Load(), lineno=195, col_offset=8), [Str('%f', lineno=195, col_offset=26), Num(102, lineno=195, col_offset=32)], [keyword('grouping', Num(0, lineno=195, col_offset=46)), keyword('out', Str('102.000000', lineno=195, col_offset=53))], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), '_test_format', Load(), lineno=196, col_offset=8), [Str('%f', lineno=196, col_offset=26), Num(-42, lineno=196, col_offset=33)], [keyword('grouping', Num(0, lineno=196, col_offset=46)), keyword('out', Str('-42.000000', lineno=196, col_offset=53))], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), '_test_format', Load(), lineno=197, col_offset=8), [Str('%+f', lineno=197, col_offset=26), Num(-42, lineno=197, col_offset=34)], [keyword('grouping', Num(0, lineno=197, col_offset=47)), keyword('out', Str('-42.000000', lineno=197, col_offset=54))], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8)], [], lineno=193, col_offset=4), FunctionDef('test_padding', arguments([Name('self', Param(), lineno=199, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), '_test_format', Load(), lineno=200, col_offset=8), [Str('%20.f', lineno=200, col_offset=26), Num(-42, lineno=200, col_offset=36)], [keyword('grouping', Num(0, lineno=200, col_offset=49)), keyword('out', Call(Attribute(Str('-42', lineno=200, col_offset=56), 'rjust', Load(), lineno=200, col_offset=56), [Num(20, lineno=200, col_offset=68)], [], None, None, lineno=200, col_offset=56))], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), '_test_format', Load(), lineno=201, col_offset=8), [Str('%+10.f', lineno=201, col_offset=26), Num(-4200, lineno=201, col_offset=37)], [keyword('grouping', Num(0, lineno=201, col_offset=52)), keyword('out', Call(Attribute(Str('-4200', lineno=201, col_offset=59), 'rjust', Load(), lineno=201, col_offset=59), [Num(10, lineno=201, col_offset=73)], [], None, None, lineno=201, col_offset=59))], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), '_test_format', Load(), lineno=202, col_offset=8), [Str('%-10.f', lineno=202, col_offset=26), Num(4200, lineno=202, col_offset=36)], [keyword('grouping', Num(0, lineno=202, col_offset=51)), keyword('out', Call(Attribute(Str('4200', lineno=202, col_offset=58), 'ljust', Load(), lineno=202, col_offset=58), [Num(10, lineno=202, col_offset=71)], [], None, None, lineno=202, col_offset=58))], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('test_complex_formatting', arguments([Name('self', Param(), lineno=204, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), '_test_format_string', Load(), lineno=206, col_offset=8), [Str('One million is %i', lineno=206, col_offset=33), Num(1000000, lineno=206, col_offset=54)], [keyword('grouping', Num(1, lineno=206, col_offset=72)), keyword('out', BinOp(Str('One million is 1%s000%s000', lineno=207, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=207, col_offset=48), 'sep', Load(), lineno=207, col_offset=48), Attribute(Name('self', Load(), lineno=207, col_offset=58), 'sep', Load(), lineno=207, col_offset=58)], Load(), lineno=207, col_offset=48), lineno=207, col_offset=16))], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), '_test_format_string', Load(), lineno=208, col_offset=8), [Str('One  million is %i', lineno=208, col_offset=33), Num(1000000, lineno=208, col_offset=55)], [keyword('grouping', Num(1, lineno=208, col_offset=73)), keyword('out', BinOp(Str('One  million is 1%s000%s000', lineno=209, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=209, col_offset=49), 'sep', Load(), lineno=209, col_offset=49), Attribute(Name('self', Load(), lineno=209, col_offset=59), 'sep', Load(), lineno=209, col_offset=59)], Load(), lineno=209, col_offset=49), lineno=209, col_offset=16))], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), '_test_format_string', Load(), lineno=211, col_offset=8), [Str('.%f.', lineno=211, col_offset=33), Num(1000.0, lineno=211, col_offset=41)], [keyword('out', Str('.1000.000000.', lineno=211, col_offset=53))], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), If(Attribute(Name('self', Load(), lineno=213, col_offset=11), 'sep', Load(), lineno=213, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=12), '_test_format_string', Load(), lineno=214, col_offset=12), [Str('-->  %10.2f', lineno=214, col_offset=37), Num(4200, lineno=214, col_offset=52)], [keyword('grouping', Num(1, lineno=214, col_offset=67)), keyword('out', BinOp(Str('-->  ', lineno=215, col_offset=20), Add(), Call(Attribute(BinOp(Str('4%s200.00', lineno=215, col_offset=31), Mod(), Attribute(Name('self', Load(), lineno=215, col_offset=45), 'sep', Load(), lineno=215, col_offset=45), lineno=215, col_offset=31), 'rjust', Load(), lineno=215, col_offset=31), [Num(10, lineno=215, col_offset=61)], [], None, None, lineno=215, col_offset=31), lineno=215, col_offset=20))], None, None, lineno=214, col_offset=12), lineno=214, col_offset=12)], [], lineno=213, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), '_test_format_string', Load(), lineno=217, col_offset=8), [Str('%10.*f', lineno=217, col_offset=33), Tuple([Num(2, lineno=217, col_offset=44), Num(1000, lineno=217, col_offset=47)], Load(), lineno=217, col_offset=44)], [keyword('grouping', Num(0, lineno=217, col_offset=63)), keyword('out', Call(Attribute(Str('1000.00', lineno=218, col_offset=16), 'rjust', Load(), lineno=218, col_offset=16), [Num(10, lineno=218, col_offset=32)], [], None, None, lineno=218, col_offset=16))], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), If(Attribute(Name('self', Load(), lineno=219, col_offset=11), 'sep', Load(), lineno=219, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=220, col_offset=12), '_test_format_string', Load(), lineno=220, col_offset=12), [Str('%*.*f', lineno=220, col_offset=37), Tuple([Num(10, lineno=220, col_offset=47), Num(2, lineno=220, col_offset=51), Num(1000, lineno=220, col_offset=54)], Load(), lineno=220, col_offset=47)], [keyword('grouping', Num(1, lineno=220, col_offset=70)), keyword('out', Call(Attribute(BinOp(Str('1%s000.00', lineno=221, col_offset=21), Mod(), Attribute(Name('self', Load(), lineno=221, col_offset=35), 'sep', Load(), lineno=221, col_offset=35), lineno=221, col_offset=21), 'rjust', Load(), lineno=221, col_offset=21), [Num(10, lineno=221, col_offset=51)], [], None, None, lineno=221, col_offset=21))], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], [], lineno=219, col_offset=8), If(Attribute(Name('self', Load(), lineno=223, col_offset=11), 'sep', Load(), lineno=223, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=12), '_test_format_string', Load(), lineno=224, col_offset=12), [Str('int %i float %.2f str %s', lineno=224, col_offset=37), Tuple([Num(1000, lineno=225, col_offset=17), Num(1000.0, lineno=225, col_offset=23), Str('str', lineno=225, col_offset=31)], Load(), lineno=225, col_offset=17)], [keyword('grouping', Num(1, lineno=225, col_offset=48)), keyword('out', BinOp(Str('int 1%s000 float 1%s000.00 str str', lineno=226, col_offset=20), Mod(), Tuple([Attribute(Name('self', Load(), lineno=227, col_offset=17), 'sep', Load(), lineno=227, col_offset=17), Attribute(Name('self', Load(), lineno=227, col_offset=27), 'sep', Load(), lineno=227, col_offset=27)], Load(), lineno=227, col_offset=17), lineno=226, col_offset=20))], None, None, lineno=224, col_offset=12), lineno=224, col_offset=12)], [], lineno=223, col_offset=8)], [], lineno=204, col_offset=4)], [], lineno=161, col_offset=0), ClassDef('TestFormatPatternArg', [Attribute(Name('unittest', Load(), lineno=230, col_offset=27), 'TestCase', Load(), lineno=230, col_offset=27)], [FunctionDef('test_onlyOnePattern', arguments([Name('self', Param(), lineno=233, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertRaises', Load(), lineno=235, col_offset=8), [Name('ValueError', Load(), lineno=235, col_offset=26), Attribute(Name('locale', Load(), lineno=235, col_offset=38), 'format', Load(), lineno=235, col_offset=38), Str('%f\n', lineno=235, col_offset=53), Str('foo', lineno=235, col_offset=61)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertRaises', Load(), lineno=236, col_offset=8), [Name('ValueError', Load(), lineno=236, col_offset=26), Attribute(Name('locale', Load(), lineno=236, col_offset=38), 'format', Load(), lineno=236, col_offset=38), Str('%f\r', lineno=236, col_offset=53), Str('foo', lineno=236, col_offset=61)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Name('ValueError', Load(), lineno=237, col_offset=26), Attribute(Name('locale', Load(), lineno=237, col_offset=38), 'format', Load(), lineno=237, col_offset=38), Str('%f\r\n', lineno=237, col_offset=53), Str('foo', lineno=237, col_offset=63)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'assertRaises', Load(), lineno=238, col_offset=8), [Name('ValueError', Load(), lineno=238, col_offset=26), Attribute(Name('locale', Load(), lineno=238, col_offset=38), 'format', Load(), lineno=238, col_offset=38), Str(' %f', lineno=238, col_offset=53), Str('foo', lineno=238, col_offset=60)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=8), 'assertRaises', Load(), lineno=239, col_offset=8), [Name('ValueError', Load(), lineno=239, col_offset=26), Attribute(Name('locale', Load(), lineno=239, col_offset=38), 'format', Load(), lineno=239, col_offset=38), Str('%fg', lineno=239, col_offset=53), Str('foo', lineno=239, col_offset=60)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertRaises', Load(), lineno=240, col_offset=8), [Name('ValueError', Load(), lineno=240, col_offset=26), Attribute(Name('locale', Load(), lineno=240, col_offset=38), 'format', Load(), lineno=240, col_offset=38), Str('%^g', lineno=240, col_offset=53), Str('foo', lineno=240, col_offset=60)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertRaises', Load(), lineno=241, col_offset=8), [Name('ValueError', Load(), lineno=241, col_offset=26), Attribute(Name('locale', Load(), lineno=241, col_offset=38), 'format', Load(), lineno=241, col_offset=38), Str('%f%%', lineno=241, col_offset=53), Str('foo', lineno=241, col_offset=61)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=233, col_offset=4)], [], lineno=230, col_offset=0), ClassDef('TestLocaleFormatString', [Attribute(Name('unittest', Load(), lineno=244, col_offset=29), 'TestCase', Load(), lineno=244, col_offset=29)], [Expr(Str('General tests on locale.format_string', lineno=245, col_offset=4), lineno=245, col_offset=4), FunctionDef('test_percent_escape', arguments([Name('self', Param(), lineno=247, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'assertEqual', Load(), lineno=248, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=248, col_offset=25), 'format_string', Load(), lineno=248, col_offset=25), [Str('%f%%', lineno=248, col_offset=46), Num(1.0, lineno=248, col_offset=54)], [], None, None, lineno=248, col_offset=25), BinOp(Str('%f%%', lineno=248, col_offset=60), Mod(), Num(1.0, lineno=248, col_offset=69), lineno=248, col_offset=60)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertEqual', Load(), lineno=249, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=249, col_offset=25), 'format_string', Load(), lineno=249, col_offset=25), [Str('%d %f%%d', lineno=249, col_offset=46), Tuple([Num(1, lineno=249, col_offset=59), Num(1.0, lineno=249, col_offset=62)], Load(), lineno=249, col_offset=59)], [], None, None, lineno=249, col_offset=25), BinOp(Str('%d %f%%d', lineno=250, col_offset=12), Mod(), Tuple([Num(1, lineno=250, col_offset=26), Num(1.0, lineno=250, col_offset=29)], Load(), lineno=250, col_offset=26), lineno=250, col_offset=12)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=8), 'assertEqual', Load(), lineno=251, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=251, col_offset=25), 'format_string', Load(), lineno=251, col_offset=25), [Str('%(foo)s %%d', lineno=251, col_offset=46), Dict([Str('foo', lineno=251, col_offset=62)], [Str('bar', lineno=251, col_offset=69)], lineno=251, col_offset=61)], [], None, None, lineno=251, col_offset=25), BinOp(Str('%(foo)s %%d', lineno=252, col_offset=13), Mod(), Dict([Str('foo', lineno=252, col_offset=30)], [Str('bar', lineno=252, col_offset=37)], lineno=252, col_offset=29), lineno=252, col_offset=13)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8)], [], lineno=247, col_offset=4), FunctionDef('test_mapping', arguments([Name('self', Param(), lineno=254, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=255, col_offset=25), 'format_string', Load(), lineno=255, col_offset=25), [Str('%(foo)s bing.', lineno=255, col_offset=46), Dict([Str('foo', lineno=255, col_offset=64)], [Str('bar', lineno=255, col_offset=71)], lineno=255, col_offset=63)], [], None, None, lineno=255, col_offset=25), BinOp(Str('%(foo)s bing.', lineno=256, col_offset=13), Mod(), Dict([Str('foo', lineno=256, col_offset=32)], [Str('bar', lineno=256, col_offset=39)], lineno=256, col_offset=31), lineno=256, col_offset=13)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertEqual', Load(), lineno=257, col_offset=8), [Call(Attribute(Name('locale', Load(), lineno=257, col_offset=25), 'format_string', Load(), lineno=257, col_offset=25), [Str('%(foo)s', lineno=257, col_offset=46), Dict([Str('foo', lineno=257, col_offset=58)], [Str('bar', lineno=257, col_offset=65)], lineno=257, col_offset=57)], [], None, None, lineno=257, col_offset=25), BinOp(Str('%(foo)s', lineno=258, col_offset=13), Mod(), Dict([Str('foo', lineno=258, col_offset=26)], [Str('bar', lineno=258, col_offset=33)], lineno=258, col_offset=25), lineno=258, col_offset=13)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8)], [], lineno=254, col_offset=4)], [], lineno=244, col_offset=0), ClassDef('TestNumberFormatting', [Name('BaseLocalizedTest', Load(), lineno=262, col_offset=27), Name('EnUSNumberFormatting', Load(), lineno=262, col_offset=46)], [Assign([Name('locale_type', Store(), lineno=265, col_offset=4)], Attribute(Name('locale', Load(), lineno=265, col_offset=18), 'LC_NUMERIC', Load(), lineno=265, col_offset=18), lineno=265, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=267, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('BaseLocalizedTest', Load(), lineno=268, col_offset=8), 'setUp', Load(), lineno=268, col_offset=8), [Name('self', Load(), lineno=268, col_offset=32)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8), Expr(Call(Attribute(Name('EnUSNumberFormatting', Load(), lineno=269, col_offset=8), 'setUp', Load(), lineno=269, col_offset=8), [Name('self', Load(), lineno=269, col_offset=35)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8)], [], lineno=267, col_offset=4)], [], lineno=262, col_offset=0), ClassDef('TestEnUSNumberFormatting', [Name('EnUSCookedTest', Load(), lineno=272, col_offset=31), Name('EnUSNumberFormatting', Load(), lineno=272, col_offset=47)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=275, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('EnUSCookedTest', Load(), lineno=276, col_offset=8), 'setUp', Load(), lineno=276, col_offset=8), [Name('self', Load(), lineno=276, col_offset=29)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Expr(Call(Attribute(Name('EnUSNumberFormatting', Load(), lineno=277, col_offset=8), 'setUp', Load(), lineno=277, col_offset=8), [Name('self', Load(), lineno=277, col_offset=35)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_currency', arguments([Name('self', Param(), lineno=279, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=8), '_test_currency', Load(), lineno=280, col_offset=8), [Num(50000, lineno=280, col_offset=28), Str('$50000.00', lineno=280, col_offset=35)], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), '_test_currency', Load(), lineno=281, col_offset=8), [Num(50000, lineno=281, col_offset=28), Str('$50,000.00', lineno=281, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=281, col_offset=58))], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), '_test_currency', Load(), lineno=282, col_offset=8), [Num(50000, lineno=282, col_offset=28), Str('USD 50,000.00', lineno=282, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=283, col_offset=21)), keyword('international', Name('True', Load(), lineno=283, col_offset=41))], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8)], [], lineno=279, col_offset=4)], [], lineno=272, col_offset=0), ClassDef('TestCNumberFormatting', [Name('CCookedTest', Load(), lineno=286, col_offset=28), Name('BaseFormattingTest', Load(), lineno=286, col_offset=41)], [FunctionDef('test_grouping', arguments([Name('self', Param(), lineno=289, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), '_test_format', Load(), lineno=290, col_offset=8), [Str('%.2f', lineno=290, col_offset=26), Num(12345.67, lineno=290, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=290, col_offset=53)), keyword('out', Str('12345.67', lineno=290, col_offset=63))], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8)], [], lineno=289, col_offset=4), FunctionDef('test_grouping_and_padding', arguments([Name('self', Param(), lineno=292, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=8), '_test_format', Load(), lineno=293, col_offset=8), [Str('%9.2f', lineno=293, col_offset=26), Num(12345.67, lineno=293, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=293, col_offset=54)), keyword('out', Str(' 12345.67', lineno=293, col_offset=64))], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8)], [], lineno=292, col_offset=4)], [], lineno=286, col_offset=0), ClassDef('TestFrFRNumberFormatting', [Name('FrFRCookedTest', Load(), lineno=296, col_offset=31), Name('BaseFormattingTest', Load(), lineno=296, col_offset=47)], [FunctionDef('test_decimal_point', arguments([Name('self', Param(), lineno=299, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), '_test_format', Load(), lineno=300, col_offset=8), [Str('%.2f', lineno=300, col_offset=26), Num(12345.67, lineno=300, col_offset=34)], [keyword('out', Str('12345,67', lineno=300, col_offset=48))], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('test_grouping', arguments([Name('self', Param(), lineno=302, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=303, col_offset=8), '_test_format', Load(), lineno=303, col_offset=8), [Str('%.2f', lineno=303, col_offset=26), Num(345.67, lineno=303, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=303, col_offset=51)), keyword('out', Str('345,67', lineno=303, col_offset=61))], None, None, lineno=303, col_offset=8), lineno=303, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=304, col_offset=8), '_test_format', Load(), lineno=304, col_offset=8), [Str('%.2f', lineno=304, col_offset=26), Num(12345.67, lineno=304, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=304, col_offset=53)), keyword('out', Str('12 345,67', lineno=304, col_offset=63))], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('test_grouping_and_padding', arguments([Name('self', Param(), lineno=306, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=8), '_test_format', Load(), lineno=307, col_offset=8), [Str('%6.2f', lineno=307, col_offset=26), Num(345.67, lineno=307, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=307, col_offset=52)), keyword('out', Str('345,67', lineno=307, col_offset=62))], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), '_test_format', Load(), lineno=308, col_offset=8), [Str('%7.2f', lineno=308, col_offset=26), Num(345.67, lineno=308, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=308, col_offset=52)), keyword('out', Str(' 345,67', lineno=308, col_offset=62))], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), '_test_format', Load(), lineno=309, col_offset=8), [Str('%8.2f', lineno=309, col_offset=26), Num(12345.67, lineno=309, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=309, col_offset=54)), keyword('out', Str('12 345,67', lineno=309, col_offset=64))], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=310, col_offset=8), '_test_format', Load(), lineno=310, col_offset=8), [Str('%9.2f', lineno=310, col_offset=26), Num(12345.67, lineno=310, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=310, col_offset=54)), keyword('out', Str('12 345,67', lineno=310, col_offset=64))], None, None, lineno=310, col_offset=8), lineno=310, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), '_test_format', Load(), lineno=311, col_offset=8), [Str('%10.2f', lineno=311, col_offset=26), Num(12345.67, lineno=311, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=311, col_offset=55)), keyword('out', Str(' 12 345,67', lineno=311, col_offset=65))], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=312, col_offset=8), '_test_format', Load(), lineno=312, col_offset=8), [Str('%-6.2f', lineno=312, col_offset=26), Num(345.67, lineno=312, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=312, col_offset=53)), keyword('out', Str('345,67', lineno=312, col_offset=63))], None, None, lineno=312, col_offset=8), lineno=312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=8), '_test_format', Load(), lineno=313, col_offset=8), [Str('%-7.2f', lineno=313, col_offset=26), Num(345.67, lineno=313, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=313, col_offset=53)), keyword('out', Str('345,67 ', lineno=313, col_offset=63))], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), '_test_format', Load(), lineno=314, col_offset=8), [Str('%-8.2f', lineno=314, col_offset=26), Num(12345.67, lineno=314, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=314, col_offset=55)), keyword('out', Str('12 345,67', lineno=314, col_offset=65))], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), '_test_format', Load(), lineno=315, col_offset=8), [Str('%-9.2f', lineno=315, col_offset=26), Num(12345.67, lineno=315, col_offset=36)], [keyword('grouping', Name('True', Load(), lineno=315, col_offset=55)), keyword('out', Str('12 345,67', lineno=315, col_offset=65))], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), '_test_format', Load(), lineno=316, col_offset=8), [Str('%-10.2f', lineno=316, col_offset=26), Num(12345.67, lineno=316, col_offset=37)], [keyword('grouping', Name('True', Load(), lineno=316, col_offset=56)), keyword('out', Str('12 345,67 ', lineno=316, col_offset=66))], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=306, col_offset=4), FunctionDef('test_integer_grouping', arguments([Name('self', Param(), lineno=318, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=319, col_offset=8), '_test_format', Load(), lineno=319, col_offset=8), [Str('%d', lineno=319, col_offset=26), Num(200, lineno=319, col_offset=32)], [keyword('grouping', Name('True', Load(), lineno=319, col_offset=46)), keyword('out', Str('200', lineno=319, col_offset=56))], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=8), '_test_format', Load(), lineno=320, col_offset=8), [Str('%d', lineno=320, col_offset=26), Num(4200, lineno=320, col_offset=32)], [keyword('grouping', Name('True', Load(), lineno=320, col_offset=47)), keyword('out', Str('4 200', lineno=320, col_offset=57))], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('test_integer_grouping_and_padding', arguments([Name('self', Param(), lineno=322, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=8), '_test_format', Load(), lineno=323, col_offset=8), [Str('%4d', lineno=323, col_offset=26), Num(4200, lineno=323, col_offset=33)], [keyword('grouping', Name('True', Load(), lineno=323, col_offset=48)), keyword('out', Str('4 200', lineno=323, col_offset=58))], None, None, lineno=323, col_offset=8), lineno=323, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), '_test_format', Load(), lineno=324, col_offset=8), [Str('%5d', lineno=324, col_offset=26), Num(4200, lineno=324, col_offset=33)], [keyword('grouping', Name('True', Load(), lineno=324, col_offset=48)), keyword('out', Str('4 200', lineno=324, col_offset=58))], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), '_test_format', Load(), lineno=325, col_offset=8), [Str('%10d', lineno=325, col_offset=26), Num(4200, lineno=325, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=325, col_offset=49)), keyword('out', Call(Attribute(Str('4 200', lineno=325, col_offset=59), 'rjust', Load(), lineno=325, col_offset=59), [Num(10, lineno=325, col_offset=73)], [], None, None, lineno=325, col_offset=59))], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=326, col_offset=8), '_test_format', Load(), lineno=326, col_offset=8), [Str('%-4d', lineno=326, col_offset=26), Num(4200, lineno=326, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=326, col_offset=49)), keyword('out', Str('4 200', lineno=326, col_offset=59))], None, None, lineno=326, col_offset=8), lineno=326, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=327, col_offset=8), '_test_format', Load(), lineno=327, col_offset=8), [Str('%-5d', lineno=327, col_offset=26), Num(4200, lineno=327, col_offset=34)], [keyword('grouping', Name('True', Load(), lineno=327, col_offset=49)), keyword('out', Str('4 200', lineno=327, col_offset=59))], None, None, lineno=327, col_offset=8), lineno=327, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=8), '_test_format', Load(), lineno=328, col_offset=8), [Str('%-10d', lineno=328, col_offset=26), Num(4200, lineno=328, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=328, col_offset=50)), keyword('out', Call(Attribute(Str('4 200', lineno=328, col_offset=60), 'ljust', Load(), lineno=328, col_offset=60), [Num(10, lineno=328, col_offset=74)], [], None, None, lineno=328, col_offset=60))], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8)], [], lineno=322, col_offset=4), FunctionDef('test_currency', arguments([Name('self', Param(), lineno=330, col_offset=22)], None, None, []), [Assign([Name('euro', Store(), lineno=331, col_offset=8)], Call(Attribute(Str(u'\u20ac', lineno=331, col_offset=15), 'encode', Load(), lineno=331, col_offset=15), [Str('utf-8', lineno=331, col_offset=32)], [], None, None, lineno=331, col_offset=15), lineno=331, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=332, col_offset=8), '_test_currency', Load(), lineno=332, col_offset=8), [Num(50000, lineno=332, col_offset=28), BinOp(Str('50000,00 ', lineno=332, col_offset=35), Add(), Name('euro', Load(), lineno=332, col_offset=49), lineno=332, col_offset=35)], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=8), '_test_currency', Load(), lineno=333, col_offset=8), [Num(50000, lineno=333, col_offset=28), BinOp(Str('50 000,00 ', lineno=333, col_offset=35), Add(), Name('euro', Load(), lineno=333, col_offset=50), lineno=333, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=333, col_offset=65))], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=335, col_offset=8), '_test_currency', Load(), lineno=335, col_offset=8), [Num(50000, lineno=335, col_offset=28), Str('50 000,00 EUR ', lineno=335, col_offset=35)], [keyword('grouping', Name('True', Load(), lineno=336, col_offset=21)), keyword('international', Name('True', Load(), lineno=336, col_offset=41))], None, None, lineno=335, col_offset=8), lineno=335, col_offset=8)], [], lineno=330, col_offset=4)], [], lineno=296, col_offset=0), ClassDef('TestStringMethods', [Name('BaseLocalizedTest', Load(), lineno=339, col_offset=24)], [Assign([Name('locale_type', Store(), lineno=340, col_offset=4)], Attribute(Name('locale', Load(), lineno=340, col_offset=18), 'LC_CTYPE', Load(), lineno=340, col_offset=18), lineno=340, col_offset=4), If(BoolOp(And(), [Compare(Attribute(Name('sys', Load(), lineno=342, col_offset=7), 'platform', Load(), lineno=342, col_offset=7), [NotEq()], [Str('sunos5', lineno=342, col_offset=23)], lineno=342, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=342, col_offset=40), 'platform', Load(), lineno=342, col_offset=40), 'startswith', Load(), lineno=342, col_offset=40), [Str('win', lineno=342, col_offset=64)], [], None, None, lineno=342, col_offset=40), lineno=342, col_offset=36)], lineno=342, col_offset=7), [FunctionDef('test_isspace', arguments([Name('self', Param(), lineno=345, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=346, col_offset=12), 'assertEqual', Load(), lineno=346, col_offset=12), [Call(Attribute(Str(' ', lineno=346, col_offset=29), 'isspace', Load(), lineno=346, col_offset=29), [], [], None, None, lineno=346, col_offset=29), Name('True', Load(), lineno=346, col_offset=47)], [], None, None, lineno=346, col_offset=12), lineno=346, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=347, col_offset=12), 'assertEqual', Load(), lineno=347, col_offset=12), [Call(Attribute(Str('\xa0', lineno=347, col_offset=29), 'isspace', Load(), lineno=347, col_offset=29), [], [], None, None, lineno=347, col_offset=29), Name('False', Load(), lineno=347, col_offset=47)], [], None, None, lineno=347, col_offset=12), lineno=347, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=348, col_offset=12), 'assertEqual', Load(), lineno=348, col_offset=12), [Call(Attribute(Str('\xa1', lineno=348, col_offset=29), 'isspace', Load(), lineno=348, col_offset=29), [], [], None, None, lineno=348, col_offset=29), Name('False', Load(), lineno=348, col_offset=47)], [], None, None, lineno=348, col_offset=12), lineno=348, col_offset=12)], [], lineno=345, col_offset=8), FunctionDef('test_isalpha', arguments([Name('self', Param(), lineno=350, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=12), 'assertEqual', Load(), lineno=351, col_offset=12), [Call(Attribute(Str('\xc0', lineno=351, col_offset=29), 'isalpha', Load(), lineno=351, col_offset=29), [], [], None, None, lineno=351, col_offset=29), Name('False', Load(), lineno=351, col_offset=47)], [], None, None, lineno=351, col_offset=12), lineno=351, col_offset=12)], [], lineno=350, col_offset=8), FunctionDef('test_isalnum', arguments([Name('self', Param(), lineno=353, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=354, col_offset=12), 'assertEqual', Load(), lineno=354, col_offset=12), [Call(Attribute(Str('\xc0', lineno=354, col_offset=29), 'isalnum', Load(), lineno=354, col_offset=29), [], [], None, None, lineno=354, col_offset=29), Name('False', Load(), lineno=354, col_offset=47)], [], None, None, lineno=354, col_offset=12), lineno=354, col_offset=12)], [], lineno=353, col_offset=8), FunctionDef('test_isupper', arguments([Name('self', Param(), lineno=356, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=357, col_offset=12), 'assertEqual', Load(), lineno=357, col_offset=12), [Call(Attribute(Str('\xc0', lineno=357, col_offset=29), 'isupper', Load(), lineno=357, col_offset=29), [], [], None, None, lineno=357, col_offset=29), Name('False', Load(), lineno=357, col_offset=47)], [], None, None, lineno=357, col_offset=12), lineno=357, col_offset=12)], [], lineno=356, col_offset=8), FunctionDef('test_islower', arguments([Name('self', Param(), lineno=359, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=12), 'assertEqual', Load(), lineno=360, col_offset=12), [Call(Attribute(Str('\xc0', lineno=360, col_offset=29), 'islower', Load(), lineno=360, col_offset=29), [], [], None, None, lineno=360, col_offset=29), Name('False', Load(), lineno=360, col_offset=47)], [], None, None, lineno=360, col_offset=12), lineno=360, col_offset=12)], [], lineno=359, col_offset=8), FunctionDef('test_lower', arguments([Name('self', Param(), lineno=362, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=12), 'assertEqual', Load(), lineno=363, col_offset=12), [Call(Attribute(Str('\xcc\x85', lineno=363, col_offset=29), 'lower', Load(), lineno=363, col_offset=29), [], [], None, None, lineno=363, col_offset=29), Str('\xcc\x85', lineno=363, col_offset=49)], [], None, None, lineno=363, col_offset=12), lineno=363, col_offset=12)], [], lineno=362, col_offset=8), FunctionDef('test_upper', arguments([Name('self', Param(), lineno=365, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=12), 'assertEqual', Load(), lineno=366, col_offset=12), [Call(Attribute(Str('\xed\x95\xa0', lineno=366, col_offset=29), 'upper', Load(), lineno=366, col_offset=29), [], [], None, None, lineno=366, col_offset=29), Str('\xed\x95\xa0', lineno=366, col_offset=53)], [], None, None, lineno=366, col_offset=12), lineno=366, col_offset=12)], [], lineno=365, col_offset=8), FunctionDef('test_strip', arguments([Name('self', Param(), lineno=368, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=12), 'assertEqual', Load(), lineno=369, col_offset=12), [Call(Attribute(Str('\xed\x95\xa0', lineno=369, col_offset=29), 'strip', Load(), lineno=369, col_offset=29), [], [], None, None, lineno=369, col_offset=29), Str('\xed\x95\xa0', lineno=369, col_offset=53)], [], None, None, lineno=369, col_offset=12), lineno=369, col_offset=12)], [], lineno=368, col_offset=8), FunctionDef('test_split', arguments([Name('self', Param(), lineno=371, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=12), 'assertEqual', Load(), lineno=372, col_offset=12), [Call(Attribute(Str('\xec\xa0\xbc', lineno=372, col_offset=29), 'split', Load(), lineno=372, col_offset=29), [], [], None, None, lineno=372, col_offset=29), List([Str('\xec\xa0\xbc', lineno=372, col_offset=54)], Load(), lineno=372, col_offset=53)], [], None, None, lineno=372, col_offset=12), lineno=372, col_offset=12)], [], lineno=371, col_offset=8)], [], lineno=342, col_offset=4)], [], lineno=339, col_offset=0), ClassDef('TestMiscellaneous', [Attribute(Name('unittest', Load(), lineno=375, col_offset=24), 'TestCase', Load(), lineno=375, col_offset=24)], [FunctionDef('test_getpreferredencoding', arguments([Name('self', Param(), lineno=376, col_offset=34)], None, None, []), [Assign([Name('enc', Store(), lineno=378, col_offset=8)], Call(Attribute(Name('locale', Load(), lineno=378, col_offset=14), 'getpreferredencoding', Load(), lineno=378, col_offset=14), [], [], None, None, lineno=378, col_offset=14), lineno=378, col_offset=8), If(Name('enc', Load(), lineno=379, col_offset=11), [Expr(Call(Attribute(Name('codecs', Load(), lineno=381, col_offset=12), 'lookup', Load(), lineno=381, col_offset=12), [Name('enc', Load(), lineno=381, col_offset=26)], [], None, None, lineno=381, col_offset=12), lineno=381, col_offset=12)], [], lineno=379, col_offset=8)], [], lineno=376, col_offset=4), If(Call(Name('hasattr', Load(), lineno=383, col_offset=7), [Name('locale', Load(), lineno=383, col_offset=15), Str('strcoll', lineno=383, col_offset=23)], [], None, None, lineno=383, col_offset=7), [FunctionDef('test_strcoll_3303', arguments([Name('self', Param(), lineno=384, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=12), 'assertRaises', Load(), lineno=386, col_offset=12), [Name('TypeError', Load(), lineno=386, col_offset=30), Attribute(Name('locale', Load(), lineno=386, col_offset=41), 'strcoll', Load(), lineno=386, col_offset=41), Str(u'a', lineno=386, col_offset=57), Name('None', Load(), lineno=386, col_offset=63)], [], None, None, lineno=386, col_offset=12), lineno=386, col_offset=12)], [], lineno=384, col_offset=8)], [], lineno=383, col_offset=4), FunctionDef('test_setlocale_category', arguments([Name('self', Param(), lineno=388, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('locale', Load(), lineno=389, col_offset=8), 'setlocale', Load(), lineno=389, col_offset=8), [Attribute(Name('locale', Load(), lineno=389, col_offset=25), 'LC_ALL', Load(), lineno=389, col_offset=25)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=390, col_offset=8), 'setlocale', Load(), lineno=390, col_offset=8), [Attribute(Name('locale', Load(), lineno=390, col_offset=25), 'LC_TIME', Load(), lineno=390, col_offset=25)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=391, col_offset=8), 'setlocale', Load(), lineno=391, col_offset=8), [Attribute(Name('locale', Load(), lineno=391, col_offset=25), 'LC_CTYPE', Load(), lineno=391, col_offset=25)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=392, col_offset=8), 'setlocale', Load(), lineno=392, col_offset=8), [Attribute(Name('locale', Load(), lineno=392, col_offset=25), 'LC_COLLATE', Load(), lineno=392, col_offset=25)], [], None, None, lineno=392, col_offset=8), lineno=392, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=393, col_offset=8), 'setlocale', Load(), lineno=393, col_offset=8), [Attribute(Name('locale', Load(), lineno=393, col_offset=25), 'LC_MONETARY', Load(), lineno=393, col_offset=25)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), Expr(Call(Attribute(Name('locale', Load(), lineno=394, col_offset=8), 'setlocale', Load(), lineno=394, col_offset=8), [Attribute(Name('locale', Load(), lineno=394, col_offset=25), 'LC_NUMERIC', Load(), lineno=394, col_offset=25)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=8), 'assertRaises', Load(), lineno=397, col_offset=8), [Attribute(Name('locale', Load(), lineno=397, col_offset=26), 'Error', Load(), lineno=397, col_offset=26), Attribute(Name('locale', Load(), lineno=397, col_offset=40), 'setlocale', Load(), lineno=397, col_offset=40), Num(12345, lineno=397, col_offset=58)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8)], [], lineno=388, col_offset=4)], [], lineno=375, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('tests', Store(), lineno=401, col_offset=4)], List([Name('TestMiscellaneous', Load(), lineno=402, col_offset=8), Name('TestFormatPatternArg', Load(), lineno=403, col_offset=8), Name('TestLocaleFormatString', Load(), lineno=404, col_offset=8), Name('TestEnUSNumberFormatting', Load(), lineno=405, col_offset=8), Name('TestCNumberFormatting', Load(), lineno=406, col_offset=8), Name('TestFrFRNumberFormatting', Load(), lineno=407, col_offset=8)], Load(), lineno=401, col_offset=12), lineno=401, col_offset=4), TryExcept([Expr(Call(Name('get_enUS_locale', Load(), lineno=411, col_offset=8), [], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8)], [ExceptHandler(Attribute(Name('unittest', Load(), lineno=412, col_offset=11), 'SkipTest', Load(), lineno=412, col_offset=11), Name('e', Store(), lineno=412, col_offset=32), [If(Name('verbose', Load(), lineno=413, col_offset=11), [Print(None, [BinOp(Str('Some tests will be disabled: %s', lineno=414, col_offset=18), Mod(), Name('e', Load(), lineno=414, col_offset=54), lineno=414, col_offset=18)], True, lineno=414, col_offset=12)], [], lineno=413, col_offset=8)], lineno=412, col_offset=4)], [AugAssign(Name('tests', Store(), lineno=416, col_offset=8), Add(), List([Name('TestNumberFormatting', Load(), lineno=416, col_offset=18), Name('TestStringMethods', Load(), lineno=416, col_offset=40)], Load(), lineno=416, col_offset=17), lineno=416, col_offset=8)], lineno=410, col_offset=4), Expr(Call(Name('run_unittest', Load(), lineno=417, col_offset=4), [], [], Name('tests', Load(), lineno=417, col_offset=18), None, lineno=417, col_offset=4), lineno=417, col_offset=4)], [], lineno=400, col_offset=0), If(Compare(Name('__name__', Load(), lineno=419, col_offset=3), [Eq()], [Str('__main__', lineno=419, col_offset=15)], lineno=419, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=420, col_offset=4), [], [], None, None, lineno=420, col_offset=4), lineno=420, col_offset=4)], [], lineno=419, col_offset=0)])
