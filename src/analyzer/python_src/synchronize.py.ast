Module([Assign([Name('__all__', Store(), lineno=9, col_offset=0)], List([Str('Lock', lineno=10, col_offset=4), Str('RLock', lineno=10, col_offset=12), Str('Semaphore', lineno=10, col_offset=21), Str('BoundedSemaphore', lineno=10, col_offset=34), Str('Condition', lineno=10, col_offset=54), Str('Event', lineno=10, col_offset=67)], Load(), lineno=9, col_offset=10), lineno=9, col_offset=0), Import([alias('threading', None)], lineno=13, col_offset=0), Import([alias('os', None)], lineno=14, col_offset=0), Import([alias('sys', None)], lineno=15, col_offset=0), ImportFrom('time', [alias('time', '_time'), alias('sleep', '_sleep')], 0, lineno=17, col_offset=0), Import([alias('_multiprocessing', None)], lineno=19, col_offset=0), ImportFrom('multiprocessing.process', [alias('current_process', None)], 0, lineno=20, col_offset=0), ImportFrom('multiprocessing.util', [alias('Finalize', None), alias('register_after_fork', None), alias('debug', None)], 0, lineno=21, col_offset=0), ImportFrom('multiprocessing.forking', [alias('assert_spawning', None), alias('Popen', None)], 0, lineno=22, col_offset=0), TryExcept([ImportFrom('_multiprocessing', [alias('SemLock', None)], 0, lineno=28, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=29, col_offset=8), None, [Raise(Call(Name('ImportError', Load(), lineno=30, col_offset=10), [BinOp(BinOp(BinOp(Str('This platform lacks a functioning sem_open', lineno=30, col_offset=22), Add(), Str(' implementation, therefore, the required', lineno=31, col_offset=22), lineno=30, col_offset=22), Add(), Str(' synchronization primitives needed will not', lineno=32, col_offset=22), lineno=31, col_offset=65), Add(), Str(' function, see issue 3770.', lineno=33, col_offset=22), lineno=32, col_offset=68)], [], None, None, lineno=30, col_offset=10), None, None, lineno=30, col_offset=4)], lineno=29, col_offset=0)], [], lineno=27, col_offset=0), Assign([Tuple([Name('RECURSIVE_MUTEX', Store(), lineno=39, col_offset=0), Name('SEMAPHORE', Store(), lineno=39, col_offset=17)], Store(), lineno=39, col_offset=0)], Call(Name('range', Load(), lineno=39, col_offset=29), [Num(2, lineno=39, col_offset=35)], [], None, None, lineno=39, col_offset=29), lineno=39, col_offset=0), Assign([Name('SEM_VALUE_MAX', Store(), lineno=40, col_offset=0)], Attribute(Attribute(Name('_multiprocessing', Load(), lineno=40, col_offset=16), 'SemLock', Load(), lineno=40, col_offset=16), 'SEM_VALUE_MAX', Load(), lineno=40, col_offset=16), lineno=40, col_offset=0), ClassDef('SemLock', [Name('object', Load(), lineno=46, col_offset=14)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=48, col_offset=17), Name('kind', Param(), lineno=48, col_offset=23), Name('value', Param(), lineno=48, col_offset=29), Name('maxvalue', Param(), lineno=48, col_offset=36)], None, None, []), [Assign([Name('sl', Store(), lineno=49, col_offset=8), Attribute(Name('self', Load(), lineno=49, col_offset=13), '_semlock', Store(), lineno=49, col_offset=13)], Call(Attribute(Name('_multiprocessing', Load(), lineno=49, col_offset=29), 'SemLock', Load(), lineno=49, col_offset=29), [Name('kind', Load(), lineno=49, col_offset=54), Name('value', Load(), lineno=49, col_offset=60), Name('maxvalue', Load(), lineno=49, col_offset=67)], [], None, None, lineno=49, col_offset=29), lineno=49, col_offset=8), Expr(Call(Name('debug', Load(), lineno=50, col_offset=8), [BinOp(Str('created semlock with handle %s', lineno=50, col_offset=14), Mod(), Attribute(Name('sl', Load(), lineno=50, col_offset=49), 'handle', Load(), lineno=50, col_offset=49), lineno=50, col_offset=14)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), '_make_methods', Load(), lineno=51, col_offset=8), [], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=53, col_offset=11), 'platform', Load(), lineno=53, col_offset=11), [NotEq()], [Str('win32', lineno=53, col_offset=27)], lineno=53, col_offset=11), [FunctionDef('_after_fork', arguments([Name('obj', Param(), lineno=54, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('obj', Load(), lineno=55, col_offset=16), '_semlock', Load(), lineno=55, col_offset=16), '_after_fork', Load(), lineno=55, col_offset=16), [], [], None, None, lineno=55, col_offset=16), lineno=55, col_offset=16)], [], lineno=54, col_offset=12), Expr(Call(Name('register_after_fork', Load(), lineno=56, col_offset=12), [Name('self', Load(), lineno=56, col_offset=32), Name('_after_fork', Load(), lineno=56, col_offset=38)], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=12)], [], lineno=53, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('_make_methods', arguments([Name('self', Param(), lineno=58, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), 'acquire', Store(), lineno=59, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=59, col_offset=23), '_semlock', Load(), lineno=59, col_offset=23), 'acquire', Load(), lineno=59, col_offset=23), lineno=59, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=60, col_offset=8), 'release', Store(), lineno=60, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=60, col_offset=23), '_semlock', Load(), lineno=60, col_offset=23), 'release', Load(), lineno=60, col_offset=23), lineno=60, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=62, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=15), '_semlock', Load(), lineno=63, col_offset=15), '__enter__', Load(), lineno=63, col_offset=15), [], [], None, None, lineno=63, col_offset=15), lineno=63, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=65, col_offset=17)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=66, col_offset=15), '_semlock', Load(), lineno=66, col_offset=15), '__exit__', Load(), lineno=66, col_offset=15), [], [], Name('args', Load(), lineno=66, col_offset=39), None, lineno=66, col_offset=15), lineno=66, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('__getstate__', arguments([Name('self', Param(), lineno=68, col_offset=21)], None, None, []), [Expr(Call(Name('assert_spawning', Load(), lineno=69, col_offset=8), [Name('self', Load(), lineno=69, col_offset=24)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Name('sl', Store(), lineno=70, col_offset=8)], Attribute(Name('self', Load(), lineno=70, col_offset=13), '_semlock', Load(), lineno=70, col_offset=13), lineno=70, col_offset=8), Return(Tuple([Call(Attribute(Name('Popen', Load(), lineno=71, col_offset=16), 'duplicate_for_child', Load(), lineno=71, col_offset=16), [Attribute(Name('sl', Load(), lineno=71, col_offset=42), 'handle', Load(), lineno=71, col_offset=42)], [], None, None, lineno=71, col_offset=16), Attribute(Name('sl', Load(), lineno=71, col_offset=54), 'kind', Load(), lineno=71, col_offset=54), Attribute(Name('sl', Load(), lineno=71, col_offset=63), 'maxvalue', Load(), lineno=71, col_offset=63)], Load(), lineno=71, col_offset=16), lineno=71, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('__setstate__', arguments([Name('self', Param(), lineno=73, col_offset=21), Name('state', Param(), lineno=73, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=74, col_offset=8), '_semlock', Store(), lineno=74, col_offset=8)], Call(Attribute(Attribute(Name('_multiprocessing', Load(), lineno=74, col_offset=24), 'SemLock', Load(), lineno=74, col_offset=24), '_rebuild', Load(), lineno=74, col_offset=24), [], [], Name('state', Load(), lineno=74, col_offset=59), None, lineno=74, col_offset=24), lineno=74, col_offset=8), Expr(Call(Name('debug', Load(), lineno=75, col_offset=8), [BinOp(Str('recreated blocker with handle %r', lineno=75, col_offset=14), Mod(), Subscript(Name('state', Load(), lineno=75, col_offset=51), Index(Num(0, lineno=75, col_offset=57)), Load(), lineno=75, col_offset=51), lineno=75, col_offset=14)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), '_make_methods', Load(), lineno=76, col_offset=8), [], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8)], [], lineno=73, col_offset=4)], [], lineno=46, col_offset=0), ClassDef('Semaphore', [Name('SemLock', Load(), lineno=82, col_offset=16)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=84, col_offset=17), Name('value', Param(), lineno=84, col_offset=23)], None, None, [Num(1, lineno=84, col_offset=29)]), [Expr(Call(Attribute(Name('SemLock', Load(), lineno=85, col_offset=8), '__init__', Load(), lineno=85, col_offset=8), [Name('self', Load(), lineno=85, col_offset=25), Name('SEMAPHORE', Load(), lineno=85, col_offset=31), Name('value', Load(), lineno=85, col_offset=42), Name('SEM_VALUE_MAX', Load(), lineno=85, col_offset=49)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('get_value', arguments([Name('self', Param(), lineno=87, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=88, col_offset=15), '_semlock', Load(), lineno=88, col_offset=15), '_get_value', Load(), lineno=88, col_offset=15), [], [], None, None, lineno=88, col_offset=15), lineno=88, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=90, col_offset=17)], None, None, []), [TryExcept([Assign([Name('value', Store(), lineno=92, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=92, col_offset=20), '_semlock', Load(), lineno=92, col_offset=20), '_get_value', Load(), lineno=92, col_offset=20), [], [], None, None, lineno=92, col_offset=20), lineno=92, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=93, col_offset=15), None, [Assign([Name('value', Store(), lineno=94, col_offset=12)], Str('unknown', lineno=94, col_offset=20), lineno=94, col_offset=12)], lineno=93, col_offset=8)], [], lineno=91, col_offset=8), Return(BinOp(Str('<Semaphore(value=%s)>', lineno=95, col_offset=15), Mod(), Name('value', Load(), lineno=95, col_offset=41), lineno=95, col_offset=15), lineno=95, col_offset=8)], [], lineno=90, col_offset=4)], [], lineno=82, col_offset=0), ClassDef('BoundedSemaphore', [Name('Semaphore', Load(), lineno=101, col_offset=23)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=103, col_offset=17), Name('value', Param(), lineno=103, col_offset=23)], None, None, [Num(1, lineno=103, col_offset=29)]), [Expr(Call(Attribute(Name('SemLock', Load(), lineno=104, col_offset=8), '__init__', Load(), lineno=104, col_offset=8), [Name('self', Load(), lineno=104, col_offset=25), Name('SEMAPHORE', Load(), lineno=104, col_offset=31), Name('value', Load(), lineno=104, col_offset=42), Name('value', Load(), lineno=104, col_offset=49)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=106, col_offset=17)], None, None, []), [TryExcept([Assign([Name('value', Store(), lineno=108, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=108, col_offset=20), '_semlock', Load(), lineno=108, col_offset=20), '_get_value', Load(), lineno=108, col_offset=20), [], [], None, None, lineno=108, col_offset=20), lineno=108, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=109, col_offset=15), None, [Assign([Name('value', Store(), lineno=110, col_offset=12)], Str('unknown', lineno=110, col_offset=20), lineno=110, col_offset=12)], lineno=109, col_offset=8)], [], lineno=107, col_offset=8), Return(BinOp(Str('<BoundedSemaphore(value=%s, maxvalue=%s)>', lineno=111, col_offset=15), Mod(), Tuple([Name('value', Load(), lineno=112, col_offset=16), Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=23), '_semlock', Load(), lineno=112, col_offset=23), 'maxvalue', Load(), lineno=112, col_offset=23)], Load(), lineno=112, col_offset=16), lineno=111, col_offset=15), lineno=111, col_offset=8)], [], lineno=106, col_offset=4)], [], lineno=101, col_offset=0), ClassDef('Lock', [Name('SemLock', Load(), lineno=118, col_offset=11)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=120, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('SemLock', Load(), lineno=121, col_offset=8), '__init__', Load(), lineno=121, col_offset=8), [Name('self', Load(), lineno=121, col_offset=25), Name('SEMAPHORE', Load(), lineno=121, col_offset=31), Num(1, lineno=121, col_offset=42), Num(1, lineno=121, col_offset=45)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=123, col_offset=17)], None, None, []), [TryExcept([If(Call(Attribute(Attribute(Name('self', Load(), lineno=125, col_offset=15), '_semlock', Load(), lineno=125, col_offset=15), '_is_mine', Load(), lineno=125, col_offset=15), [], [], None, None, lineno=125, col_offset=15), [Assign([Name('name', Store(), lineno=126, col_offset=16)], Attribute(Call(Name('current_process', Load(), lineno=126, col_offset=23), [], [], None, None, lineno=126, col_offset=23), 'name', Load(), lineno=126, col_offset=23), lineno=126, col_offset=16), If(Compare(Attribute(Call(Attribute(Name('threading', Load(), lineno=127, col_offset=19), 'current_thread', Load(), lineno=127, col_offset=19), [], [], None, None, lineno=127, col_offset=19), 'name', Load(), lineno=127, col_offset=19), [NotEq()], [Str('MainThread', lineno=127, col_offset=54)], lineno=127, col_offset=19), [AugAssign(Name('name', Store(), lineno=128, col_offset=20), Add(), BinOp(Str('|', lineno=128, col_offset=28), Add(), Attribute(Call(Attribute(Name('threading', Load(), lineno=128, col_offset=34), 'current_thread', Load(), lineno=128, col_offset=34), [], [], None, None, lineno=128, col_offset=34), 'name', Load(), lineno=128, col_offset=34), lineno=128, col_offset=28), lineno=128, col_offset=20)], [], lineno=127, col_offset=16)], [If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=129, col_offset=17), '_semlock', Load(), lineno=129, col_offset=17), '_get_value', Load(), lineno=129, col_offset=17), [], [], None, None, lineno=129, col_offset=17), [Eq()], [Num(1, lineno=129, col_offset=47)], lineno=129, col_offset=17), [Assign([Name('name', Store(), lineno=130, col_offset=16)], Str('None', lineno=130, col_offset=23), lineno=130, col_offset=16)], [If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=131, col_offset=17), '_semlock', Load(), lineno=131, col_offset=17), '_count', Load(), lineno=131, col_offset=17), [], [], None, None, lineno=131, col_offset=17), [Gt()], [Num(0, lineno=131, col_offset=42)], lineno=131, col_offset=17), [Assign([Name('name', Store(), lineno=132, col_offset=16)], Str('SomeOtherThread', lineno=132, col_offset=23), lineno=132, col_offset=16)], [Assign([Name('name', Store(), lineno=134, col_offset=16)], Str('SomeOtherProcess', lineno=134, col_offset=23), lineno=134, col_offset=16)], lineno=131, col_offset=17)], lineno=129, col_offset=17)], lineno=125, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=135, col_offset=15), None, [Assign([Name('name', Store(), lineno=136, col_offset=12)], Str('unknown', lineno=136, col_offset=19), lineno=136, col_offset=12)], lineno=135, col_offset=8)], [], lineno=124, col_offset=8), Return(BinOp(Str('<Lock(owner=%s)>', lineno=137, col_offset=15), Mod(), Name('name', Load(), lineno=137, col_offset=36), lineno=137, col_offset=15), lineno=137, col_offset=8)], [], lineno=123, col_offset=4)], [], lineno=118, col_offset=0), ClassDef('RLock', [Name('SemLock', Load(), lineno=143, col_offset=12)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=145, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('SemLock', Load(), lineno=146, col_offset=8), '__init__', Load(), lineno=146, col_offset=8), [Name('self', Load(), lineno=146, col_offset=25), Name('RECURSIVE_MUTEX', Load(), lineno=146, col_offset=31), Num(1, lineno=146, col_offset=48), Num(1, lineno=146, col_offset=51)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=148, col_offset=17)], None, None, []), [TryExcept([If(Call(Attribute(Attribute(Name('self', Load(), lineno=150, col_offset=15), '_semlock', Load(), lineno=150, col_offset=15), '_is_mine', Load(), lineno=150, col_offset=15), [], [], None, None, lineno=150, col_offset=15), [Assign([Name('name', Store(), lineno=151, col_offset=16)], Attribute(Call(Name('current_process', Load(), lineno=151, col_offset=23), [], [], None, None, lineno=151, col_offset=23), 'name', Load(), lineno=151, col_offset=23), lineno=151, col_offset=16), If(Compare(Attribute(Call(Attribute(Name('threading', Load(), lineno=152, col_offset=19), 'current_thread', Load(), lineno=152, col_offset=19), [], [], None, None, lineno=152, col_offset=19), 'name', Load(), lineno=152, col_offset=19), [NotEq()], [Str('MainThread', lineno=152, col_offset=54)], lineno=152, col_offset=19), [AugAssign(Name('name', Store(), lineno=153, col_offset=20), Add(), BinOp(Str('|', lineno=153, col_offset=28), Add(), Attribute(Call(Attribute(Name('threading', Load(), lineno=153, col_offset=34), 'current_thread', Load(), lineno=153, col_offset=34), [], [], None, None, lineno=153, col_offset=34), 'name', Load(), lineno=153, col_offset=34), lineno=153, col_offset=28), lineno=153, col_offset=20)], [], lineno=152, col_offset=16), Assign([Name('count', Store(), lineno=154, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=154, col_offset=24), '_semlock', Load(), lineno=154, col_offset=24), '_count', Load(), lineno=154, col_offset=24), [], [], None, None, lineno=154, col_offset=24), lineno=154, col_offset=16)], [If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=155, col_offset=17), '_semlock', Load(), lineno=155, col_offset=17), '_get_value', Load(), lineno=155, col_offset=17), [], [], None, None, lineno=155, col_offset=17), [Eq()], [Num(1, lineno=155, col_offset=47)], lineno=155, col_offset=17), [Assign([Tuple([Name('name', Store(), lineno=156, col_offset=16), Name('count', Store(), lineno=156, col_offset=22)], Store(), lineno=156, col_offset=16)], Tuple([Str('None', lineno=156, col_offset=30), Num(0, lineno=156, col_offset=38)], Load(), lineno=156, col_offset=30), lineno=156, col_offset=16)], [If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=157, col_offset=17), '_semlock', Load(), lineno=157, col_offset=17), '_count', Load(), lineno=157, col_offset=17), [], [], None, None, lineno=157, col_offset=17), [Gt()], [Num(0, lineno=157, col_offset=42)], lineno=157, col_offset=17), [Assign([Tuple([Name('name', Store(), lineno=158, col_offset=16), Name('count', Store(), lineno=158, col_offset=22)], Store(), lineno=158, col_offset=16)], Tuple([Str('SomeOtherThread', lineno=158, col_offset=30), Str('nonzero', lineno=158, col_offset=49)], Load(), lineno=158, col_offset=30), lineno=158, col_offset=16)], [Assign([Tuple([Name('name', Store(), lineno=160, col_offset=16), Name('count', Store(), lineno=160, col_offset=22)], Store(), lineno=160, col_offset=16)], Tuple([Str('SomeOtherProcess', lineno=160, col_offset=30), Str('nonzero', lineno=160, col_offset=50)], Load(), lineno=160, col_offset=30), lineno=160, col_offset=16)], lineno=157, col_offset=17)], lineno=155, col_offset=17)], lineno=150, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=161, col_offset=15), None, [Assign([Tuple([Name('name', Store(), lineno=162, col_offset=12), Name('count', Store(), lineno=162, col_offset=18)], Store(), lineno=162, col_offset=12)], Tuple([Str('unknown', lineno=162, col_offset=26), Str('unknown', lineno=162, col_offset=37)], Load(), lineno=162, col_offset=26), lineno=162, col_offset=12)], lineno=161, col_offset=8)], [], lineno=149, col_offset=8), Return(BinOp(Str('<RLock(%s, %s)>', lineno=163, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=163, col_offset=36), Name('count', Load(), lineno=163, col_offset=42)], Load(), lineno=163, col_offset=36), lineno=163, col_offset=15), lineno=163, col_offset=8)], [], lineno=148, col_offset=4)], [], lineno=143, col_offset=0), ClassDef('Condition', [Name('object', Load(), lineno=169, col_offset=16)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=171, col_offset=17), Name('lock', Param(), lineno=171, col_offset=23)], None, None, [Name('None', Load(), lineno=171, col_offset=28)]), [Assign([Attribute(Name('self', Load(), lineno=172, col_offset=8), '_lock', Store(), lineno=172, col_offset=8)], BoolOp(Or(), [Name('lock', Load(), lineno=172, col_offset=21), Call(Name('RLock', Load(), lineno=172, col_offset=29), [], [], None, None, lineno=172, col_offset=29)], lineno=172, col_offset=21), lineno=172, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=173, col_offset=8), '_sleeping_count', Store(), lineno=173, col_offset=8)], Call(Name('Semaphore', Load(), lineno=173, col_offset=31), [Num(0, lineno=173, col_offset=41)], [], None, None, lineno=173, col_offset=31), lineno=173, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=174, col_offset=8), '_woken_count', Store(), lineno=174, col_offset=8)], Call(Name('Semaphore', Load(), lineno=174, col_offset=28), [Num(0, lineno=174, col_offset=38)], [], None, None, lineno=174, col_offset=28), lineno=174, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=175, col_offset=8), '_wait_semaphore', Store(), lineno=175, col_offset=8)], Call(Name('Semaphore', Load(), lineno=175, col_offset=31), [Num(0, lineno=175, col_offset=41)], [], None, None, lineno=175, col_offset=31), lineno=175, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), '_make_methods', Load(), lineno=176, col_offset=8), [], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('__getstate__', arguments([Name('self', Param(), lineno=178, col_offset=21)], None, None, []), [Expr(Call(Name('assert_spawning', Load(), lineno=179, col_offset=8), [Name('self', Load(), lineno=179, col_offset=24)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), Return(Tuple([Attribute(Name('self', Load(), lineno=180, col_offset=16), '_lock', Load(), lineno=180, col_offset=16), Attribute(Name('self', Load(), lineno=180, col_offset=28), '_sleeping_count', Load(), lineno=180, col_offset=28), Attribute(Name('self', Load(), lineno=181, col_offset=16), '_woken_count', Load(), lineno=181, col_offset=16), Attribute(Name('self', Load(), lineno=181, col_offset=35), '_wait_semaphore', Load(), lineno=181, col_offset=35)], Load(), lineno=180, col_offset=16), lineno=180, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('__setstate__', arguments([Name('self', Param(), lineno=183, col_offset=21), Name('state', Param(), lineno=183, col_offset=27)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=184, col_offset=9), '_lock', Store(), lineno=184, col_offset=9), Attribute(Name('self', Load(), lineno=184, col_offset=21), '_sleeping_count', Store(), lineno=184, col_offset=21), Attribute(Name('self', Load(), lineno=185, col_offset=9), '_woken_count', Store(), lineno=185, col_offset=9), Attribute(Name('self', Load(), lineno=185, col_offset=28), '_wait_semaphore', Store(), lineno=185, col_offset=28)], Store(), lineno=184, col_offset=9)], Name('state', Load(), lineno=185, col_offset=52), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), '_make_methods', Load(), lineno=186, col_offset=8), [], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('__enter__', arguments([Name('self', Param(), lineno=188, col_offset=18)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=189, col_offset=15), '_lock', Load(), lineno=189, col_offset=15), '__enter__', Load(), lineno=189, col_offset=15), [], [], None, None, lineno=189, col_offset=15), lineno=189, col_offset=8)], [], lineno=188, col_offset=4), FunctionDef('__exit__', arguments([Name('self', Param(), lineno=191, col_offset=17)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=15), '_lock', Load(), lineno=192, col_offset=15), '__exit__', Load(), lineno=192, col_offset=15), [], [], Name('args', Load(), lineno=192, col_offset=36), None, lineno=192, col_offset=15), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('_make_methods', arguments([Name('self', Param(), lineno=194, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=195, col_offset=8), 'acquire', Store(), lineno=195, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=195, col_offset=23), '_lock', Load(), lineno=195, col_offset=23), 'acquire', Load(), lineno=195, col_offset=23), lineno=195, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=196, col_offset=8), 'release', Store(), lineno=196, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=196, col_offset=23), '_lock', Load(), lineno=196, col_offset=23), 'release', Load(), lineno=196, col_offset=23), lineno=196, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=198, col_offset=17)], None, None, []), [TryExcept([Assign([Name('num_waiters', Store(), lineno=200, col_offset=12)], BinOp(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=200, col_offset=27), '_sleeping_count', Load(), lineno=200, col_offset=27), '_semlock', Load(), lineno=200, col_offset=27), '_get_value', Load(), lineno=200, col_offset=27), [], [], None, None, lineno=200, col_offset=27), Sub(), Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=201, col_offset=27), '_woken_count', Load(), lineno=201, col_offset=27), '_semlock', Load(), lineno=201, col_offset=27), '_get_value', Load(), lineno=201, col_offset=27), [], [], None, None, lineno=201, col_offset=27), lineno=200, col_offset=27), lineno=200, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=202, col_offset=15), None, [Assign([Name('num_waiters', Store(), lineno=203, col_offset=12)], Str('unkown', lineno=203, col_offset=26), lineno=203, col_offset=12)], lineno=202, col_offset=8)], [], lineno=199, col_offset=8), Return(BinOp(Str('<Condition(%s, %s)>', lineno=204, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=204, col_offset=40), '_lock', Load(), lineno=204, col_offset=40), Name('num_waiters', Load(), lineno=204, col_offset=52)], Load(), lineno=204, col_offset=40), lineno=204, col_offset=15), lineno=204, col_offset=8)], [], lineno=198, col_offset=4), FunctionDef('wait', arguments([Name('self', Param(), lineno=206, col_offset=13), Name('timeout', Param(), lineno=206, col_offset=19)], None, None, [Name('None', Load(), lineno=206, col_offset=27)]), [Assert(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=207, col_offset=15), '_lock', Load(), lineno=207, col_offset=15), '_semlock', Load(), lineno=207, col_offset=15), '_is_mine', Load(), lineno=207, col_offset=15), [], [], None, None, lineno=207, col_offset=15), Str('must acquire() condition before using wait()', lineno=208, col_offset=15), lineno=207, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=211, col_offset=8), '_sleeping_count', Load(), lineno=211, col_offset=8), 'release', Load(), lineno=211, col_offset=8), [], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Assign([Name('count', Store(), lineno=214, col_offset=8)], Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=214, col_offset=16), '_lock', Load(), lineno=214, col_offset=16), '_semlock', Load(), lineno=214, col_offset=16), '_count', Load(), lineno=214, col_offset=16), [], [], None, None, lineno=214, col_offset=16), lineno=214, col_offset=8), For(Name('i', Store(), lineno=215, col_offset=12), Call(Name('xrange', Load(), lineno=215, col_offset=17), [Name('count', Load(), lineno=215, col_offset=24)], [], None, None, lineno=215, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=216, col_offset=12), '_lock', Load(), lineno=216, col_offset=12), 'release', Load(), lineno=216, col_offset=12), [], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12)], [], lineno=215, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=220, col_offset=12), '_wait_semaphore', Load(), lineno=220, col_offset=12), 'acquire', Load(), lineno=220, col_offset=12), [Name('True', Load(), lineno=220, col_offset=41), Name('timeout', Load(), lineno=220, col_offset=47)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=223, col_offset=12), '_woken_count', Load(), lineno=223, col_offset=12), 'release', Load(), lineno=223, col_offset=12), [], [], None, None, lineno=223, col_offset=12), lineno=223, col_offset=12), For(Name('i', Store(), lineno=226, col_offset=16), Call(Name('xrange', Load(), lineno=226, col_offset=21), [Name('count', Load(), lineno=226, col_offset=28)], [], None, None, lineno=226, col_offset=21), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=227, col_offset=16), '_lock', Load(), lineno=227, col_offset=16), 'acquire', Load(), lineno=227, col_offset=16), [], [], None, None, lineno=227, col_offset=16), lineno=227, col_offset=16)], [], lineno=226, col_offset=12)], lineno=218, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('notify', arguments([Name('self', Param(), lineno=229, col_offset=15)], None, None, []), [Assert(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=230, col_offset=15), '_lock', Load(), lineno=230, col_offset=15), '_semlock', Load(), lineno=230, col_offset=15), '_is_mine', Load(), lineno=230, col_offset=15), [], [], None, None, lineno=230, col_offset=15), Str('lock is not owned', lineno=230, col_offset=47), lineno=230, col_offset=8), Assert(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=231, col_offset=19), '_wait_semaphore', Load(), lineno=231, col_offset=19), 'acquire', Load(), lineno=231, col_offset=19), [Name('False', Load(), lineno=231, col_offset=48)], [], None, None, lineno=231, col_offset=19), lineno=231, col_offset=15), None, lineno=231, col_offset=8), While(Call(Attribute(Attribute(Name('self', Load(), lineno=235, col_offset=14), '_woken_count', Load(), lineno=235, col_offset=14), 'acquire', Load(), lineno=235, col_offset=14), [Name('False', Load(), lineno=235, col_offset=40)], [], None, None, lineno=235, col_offset=14), [Assign([Name('res', Store(), lineno=236, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=236, col_offset=18), '_sleeping_count', Load(), lineno=236, col_offset=18), 'acquire', Load(), lineno=236, col_offset=18), [Name('False', Load(), lineno=236, col_offset=47)], [], None, None, lineno=236, col_offset=18), lineno=236, col_offset=12), Assert(Name('res', Load(), lineno=237, col_offset=19), None, lineno=237, col_offset=12)], [], lineno=235, col_offset=8), If(Call(Attribute(Attribute(Name('self', Load(), lineno=239, col_offset=11), '_sleeping_count', Load(), lineno=239, col_offset=11), 'acquire', Load(), lineno=239, col_offset=11), [Name('False', Load(), lineno=239, col_offset=40)], [], None, None, lineno=239, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=240, col_offset=12), '_wait_semaphore', Load(), lineno=240, col_offset=12), 'release', Load(), lineno=240, col_offset=12), [], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=241, col_offset=12), '_woken_count', Load(), lineno=241, col_offset=12), 'acquire', Load(), lineno=241, col_offset=12), [], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=244, col_offset=12), '_wait_semaphore', Load(), lineno=244, col_offset=12), 'acquire', Load(), lineno=244, col_offset=12), [Name('False', Load(), lineno=244, col_offset=41)], [], None, None, lineno=244, col_offset=12), lineno=244, col_offset=12)], [], lineno=239, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('notify_all', arguments([Name('self', Param(), lineno=246, col_offset=19)], None, None, []), [Assert(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=247, col_offset=15), '_lock', Load(), lineno=247, col_offset=15), '_semlock', Load(), lineno=247, col_offset=15), '_is_mine', Load(), lineno=247, col_offset=15), [], [], None, None, lineno=247, col_offset=15), Str('lock is not owned', lineno=247, col_offset=47), lineno=247, col_offset=8), Assert(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=248, col_offset=19), '_wait_semaphore', Load(), lineno=248, col_offset=19), 'acquire', Load(), lineno=248, col_offset=19), [Name('False', Load(), lineno=248, col_offset=48)], [], None, None, lineno=248, col_offset=19), lineno=248, col_offset=15), None, lineno=248, col_offset=8), While(Call(Attribute(Attribute(Name('self', Load(), lineno=252, col_offset=14), '_woken_count', Load(), lineno=252, col_offset=14), 'acquire', Load(), lineno=252, col_offset=14), [Name('False', Load(), lineno=252, col_offset=40)], [], None, None, lineno=252, col_offset=14), [Assign([Name('res', Store(), lineno=253, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=253, col_offset=18), '_sleeping_count', Load(), lineno=253, col_offset=18), 'acquire', Load(), lineno=253, col_offset=18), [Name('False', Load(), lineno=253, col_offset=47)], [], None, None, lineno=253, col_offset=18), lineno=253, col_offset=12), Assert(Name('res', Load(), lineno=254, col_offset=19), None, lineno=254, col_offset=12)], [], lineno=252, col_offset=8), Assign([Name('sleepers', Store(), lineno=256, col_offset=8)], Num(0, lineno=256, col_offset=19), lineno=256, col_offset=8), While(Call(Attribute(Attribute(Name('self', Load(), lineno=257, col_offset=14), '_sleeping_count', Load(), lineno=257, col_offset=14), 'acquire', Load(), lineno=257, col_offset=14), [Name('False', Load(), lineno=257, col_offset=43)], [], None, None, lineno=257, col_offset=14), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=258, col_offset=12), '_wait_semaphore', Load(), lineno=258, col_offset=12), 'release', Load(), lineno=258, col_offset=12), [], [], None, None, lineno=258, col_offset=12), lineno=258, col_offset=12), AugAssign(Name('sleepers', Store(), lineno=259, col_offset=12), Add(), Num(1, lineno=259, col_offset=24), lineno=259, col_offset=12)], [], lineno=257, col_offset=8), If(Name('sleepers', Load(), lineno=261, col_offset=11), [For(Name('i', Store(), lineno=262, col_offset=16), Call(Name('xrange', Load(), lineno=262, col_offset=21), [Name('sleepers', Load(), lineno=262, col_offset=28)], [], None, None, lineno=262, col_offset=21), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=263, col_offset=16), '_woken_count', Load(), lineno=263, col_offset=16), 'acquire', Load(), lineno=263, col_offset=16), [], [], None, None, lineno=263, col_offset=16), lineno=263, col_offset=16)], [], lineno=262, col_offset=12), While(Call(Attribute(Attribute(Name('self', Load(), lineno=266, col_offset=18), '_wait_semaphore', Load(), lineno=266, col_offset=18), 'acquire', Load(), lineno=266, col_offset=18), [Name('False', Load(), lineno=266, col_offset=47)], [], None, None, lineno=266, col_offset=18), [Pass( lineno=267, col_offset=16)], [], lineno=266, col_offset=12)], [], lineno=261, col_offset=8)], [], lineno=246, col_offset=4)], [], lineno=169, col_offset=0), ClassDef('Event', [Name('object', Load(), lineno=273, col_offset=12)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=275, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=276, col_offset=8), '_cond', Store(), lineno=276, col_offset=8)], Call(Name('Condition', Load(), lineno=276, col_offset=21), [Call(Name('Lock', Load(), lineno=276, col_offset=31), [], [], None, None, lineno=276, col_offset=31)], [], None, None, lineno=276, col_offset=21), lineno=276, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=277, col_offset=8), '_flag', Store(), lineno=277, col_offset=8)], Call(Name('Semaphore', Load(), lineno=277, col_offset=21), [Num(0, lineno=277, col_offset=31)], [], None, None, lineno=277, col_offset=21), lineno=277, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('is_set', arguments([Name('self', Param(), lineno=279, col_offset=15)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=280, col_offset=8), '_cond', Load(), lineno=280, col_offset=8), 'acquire', Load(), lineno=280, col_offset=8), [], [], None, None, lineno=280, col_offset=8), lineno=280, col_offset=8), TryFinally([If(Call(Attribute(Attribute(Name('self', Load(), lineno=282, col_offset=15), '_flag', Load(), lineno=282, col_offset=15), 'acquire', Load(), lineno=282, col_offset=15), [Name('False', Load(), lineno=282, col_offset=34)], [], None, None, lineno=282, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=283, col_offset=16), '_flag', Load(), lineno=283, col_offset=16), 'release', Load(), lineno=283, col_offset=16), [], [], None, None, lineno=283, col_offset=16), lineno=283, col_offset=16), Return(Name('True', Load(), lineno=284, col_offset=23), lineno=284, col_offset=16)], [], lineno=282, col_offset=12), Return(Name('False', Load(), lineno=285, col_offset=19), lineno=285, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=287, col_offset=12), '_cond', Load(), lineno=287, col_offset=12), 'release', Load(), lineno=287, col_offset=12), [], [], None, None, lineno=287, col_offset=12), lineno=287, col_offset=12)], lineno=281, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=289, col_offset=12)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=290, col_offset=8), '_cond', Load(), lineno=290, col_offset=8), 'acquire', Load(), lineno=290, col_offset=8), [], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=292, col_offset=12), '_flag', Load(), lineno=292, col_offset=12), 'acquire', Load(), lineno=292, col_offset=12), [Name('False', Load(), lineno=292, col_offset=31)], [], None, None, lineno=292, col_offset=12), lineno=292, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=293, col_offset=12), '_flag', Load(), lineno=293, col_offset=12), 'release', Load(), lineno=293, col_offset=12), [], [], None, None, lineno=293, col_offset=12), lineno=293, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=294, col_offset=12), '_cond', Load(), lineno=294, col_offset=12), 'notify_all', Load(), lineno=294, col_offset=12), [], [], None, None, lineno=294, col_offset=12), lineno=294, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=296, col_offset=12), '_cond', Load(), lineno=296, col_offset=12), 'release', Load(), lineno=296, col_offset=12), [], [], None, None, lineno=296, col_offset=12), lineno=296, col_offset=12)], lineno=291, col_offset=8)], [], lineno=289, col_offset=4), FunctionDef('clear', arguments([Name('self', Param(), lineno=298, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=299, col_offset=8), '_cond', Load(), lineno=299, col_offset=8), 'acquire', Load(), lineno=299, col_offset=8), [], [], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=301, col_offset=12), '_flag', Load(), lineno=301, col_offset=12), 'acquire', Load(), lineno=301, col_offset=12), [Name('False', Load(), lineno=301, col_offset=31)], [], None, None, lineno=301, col_offset=12), lineno=301, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=303, col_offset=12), '_cond', Load(), lineno=303, col_offset=12), 'release', Load(), lineno=303, col_offset=12), [], [], None, None, lineno=303, col_offset=12), lineno=303, col_offset=12)], lineno=300, col_offset=8)], [], lineno=298, col_offset=4), FunctionDef('wait', arguments([Name('self', Param(), lineno=305, col_offset=13), Name('timeout', Param(), lineno=305, col_offset=19)], None, None, [Name('None', Load(), lineno=305, col_offset=27)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=306, col_offset=8), '_cond', Load(), lineno=306, col_offset=8), 'acquire', Load(), lineno=306, col_offset=8), [], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), TryFinally([If(Call(Attribute(Attribute(Name('self', Load(), lineno=308, col_offset=15), '_flag', Load(), lineno=308, col_offset=15), 'acquire', Load(), lineno=308, col_offset=15), [Name('False', Load(), lineno=308, col_offset=34)], [], None, None, lineno=308, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=309, col_offset=16), '_flag', Load(), lineno=309, col_offset=16), 'release', Load(), lineno=309, col_offset=16), [], [], None, None, lineno=309, col_offset=16), lineno=309, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=311, col_offset=16), '_cond', Load(), lineno=311, col_offset=16), 'wait', Load(), lineno=311, col_offset=16), [Name('timeout', Load(), lineno=311, col_offset=32)], [], None, None, lineno=311, col_offset=16), lineno=311, col_offset=16)], lineno=308, col_offset=12), If(Call(Attribute(Attribute(Name('self', Load(), lineno=313, col_offset=15), '_flag', Load(), lineno=313, col_offset=15), 'acquire', Load(), lineno=313, col_offset=15), [Name('False', Load(), lineno=313, col_offset=34)], [], None, None, lineno=313, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=314, col_offset=16), '_flag', Load(), lineno=314, col_offset=16), 'release', Load(), lineno=314, col_offset=16), [], [], None, None, lineno=314, col_offset=16), lineno=314, col_offset=16), Return(Name('True', Load(), lineno=315, col_offset=23), lineno=315, col_offset=16)], [], lineno=313, col_offset=12), Return(Name('False', Load(), lineno=316, col_offset=19), lineno=316, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=318, col_offset=12), '_cond', Load(), lineno=318, col_offset=12), 'release', Load(), lineno=318, col_offset=12), [], [], None, None, lineno=318, col_offset=12), lineno=318, col_offset=12)], lineno=307, col_offset=8)], [], lineno=305, col_offset=4)], [], lineno=273, col_offset=0)])
