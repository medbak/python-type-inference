Module([Expr(Str('AutoComplete.py - An IDLE extension for automatically completing names.\n\nThis extension can complete either attribute names of file names. It can pop\na window with all available names, for the user to select from.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('os', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('string', None)], lineno=8, col_offset=0), ImportFrom('idlelib.configHandler', [alias('idleConf', None)], 0, lineno=10, col_offset=0), Assign([Name('FILENAME_CHARS', Store(), lineno=14, col_offset=0)], BinOp(BinOp(BinOp(Attribute(Name('string', Load(), lineno=14, col_offset=17), 'ascii_letters', Load(), lineno=14, col_offset=17), Add(), Attribute(Name('string', Load(), lineno=14, col_offset=40), 'digits', Load(), lineno=14, col_offset=40), lineno=14, col_offset=17), Add(), Attribute(Name('os', Load(), lineno=14, col_offset=56), 'curdir', Load(), lineno=14, col_offset=56), lineno=14, col_offset=54), Add(), Str('._~#$:-', lineno=14, col_offset=68), lineno=14, col_offset=66), lineno=14, col_offset=0), Assign([Name('ID_CHARS', Store(), lineno=16, col_offset=0)], BinOp(BinOp(Attribute(Name('string', Load(), lineno=16, col_offset=11), 'ascii_letters', Load(), lineno=16, col_offset=11), Add(), Attribute(Name('string', Load(), lineno=16, col_offset=34), 'digits', Load(), lineno=16, col_offset=34), lineno=16, col_offset=11), Add(), Str('_', lineno=16, col_offset=50), lineno=16, col_offset=48), lineno=16, col_offset=0), Assign([Tuple([Name('COMPLETE_ATTRIBUTES', Store(), lineno=19, col_offset=0), Name('COMPLETE_FILES', Store(), lineno=19, col_offset=21)], Store(), lineno=19, col_offset=0)], Call(Name('range', Load(), lineno=19, col_offset=38), [Num(1, lineno=19, col_offset=44), BinOp(Num(2, lineno=19, col_offset=47), Add(), Num(1, lineno=19, col_offset=49), lineno=19, col_offset=47)], [], None, None, lineno=19, col_offset=38), lineno=19, col_offset=0), ImportFrom('idlelib', [alias('AutoCompleteWindow', None)], 0, lineno=21, col_offset=0), ImportFrom('idlelib.HyperParser', [alias('HyperParser', None)], 0, lineno=22, col_offset=0), Import([alias('__main__', None)], lineno=24, col_offset=0), Assign([Name('SEPS', Store(), lineno=26, col_offset=0)], Attribute(Name('os', Load(), lineno=26, col_offset=7), 'sep', Load(), lineno=26, col_offset=7), lineno=26, col_offset=0), If(Attribute(Name('os', Load(), lineno=27, col_offset=3), 'altsep', Load(), lineno=27, col_offset=3), [AugAssign(Name('SEPS', Store(), lineno=28, col_offset=4), Add(), Attribute(Name('os', Load(), lineno=28, col_offset=12), 'altsep', Load(), lineno=28, col_offset=12), lineno=28, col_offset=4)], [], lineno=27, col_offset=0), ClassDef('AutoComplete', [], [Assign([Name('menudefs', Store(), lineno=32, col_offset=4)], List([Tuple([Str('edit', lineno=33, col_offset=9), List([Tuple([Str('Show Completions', lineno=34, col_offset=13), Str('<<force-open-completions>>', lineno=34, col_offset=33)], Load(), lineno=34, col_offset=13)], Load(), lineno=33, col_offset=17)], Load(), lineno=33, col_offset=9)], Load(), lineno=32, col_offset=15), lineno=32, col_offset=4), Assign([Name('popupwait', Store(), lineno=38, col_offset=4)], Call(Attribute(Name('idleConf', Load(), lineno=38, col_offset=16), 'GetOption', Load(), lineno=38, col_offset=16), [Str('extensions', lineno=38, col_offset=35), Str('AutoComplete', lineno=38, col_offset=49), Str('popupwait', lineno=39, col_offset=35)], [keyword('type', Str('int', lineno=39, col_offset=53)), keyword('default', Num(0, lineno=39, col_offset=68))], None, None, lineno=38, col_offset=16), lineno=38, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=41, col_offset=17), Name('editwin', Param(), lineno=41, col_offset=23)], None, None, [Name('None', Load(), lineno=41, col_offset=31)]), [Assign([Attribute(Name('self', Load(), lineno=42, col_offset=8), 'editwin', Store(), lineno=42, col_offset=8)], Name('editwin', Load(), lineno=42, col_offset=23), lineno=42, col_offset=8), If(Compare(Name('editwin', Load(), lineno=43, col_offset=11), [Is()], [Name('None', Load(), lineno=43, col_offset=22)], lineno=43, col_offset=11), [Return(None, lineno=44, col_offset=12)], [], lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'text', Store(), lineno=45, col_offset=8)], Attribute(Name('editwin', Load(), lineno=45, col_offset=20), 'text', Load(), lineno=45, col_offset=20), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 'autocompletewindow', Store(), lineno=46, col_offset=8)], Name('None', Load(), lineno=46, col_offset=34), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=51, col_offset=8), '_delayed_completion_id', Store(), lineno=51, col_offset=8)], Name('None', Load(), lineno=51, col_offset=38), lineno=51, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=52, col_offset=8), '_delayed_completion_index', Store(), lineno=52, col_offset=8)], Name('None', Load(), lineno=52, col_offset=41), lineno=52, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('_make_autocomplete_window', arguments([Name('self', Param(), lineno=54, col_offset=34)], None, None, []), [Return(Call(Attribute(Name('AutoCompleteWindow', Load(), lineno=55, col_offset=15), 'AutoCompleteWindow', Load(), lineno=55, col_offset=15), [Attribute(Name('self', Load(), lineno=55, col_offset=53), 'text', Load(), lineno=55, col_offset=53)], [], None, None, lineno=55, col_offset=15), lineno=55, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('_remove_autocomplete_window', arguments([Name('self', Param(), lineno=57, col_offset=36), Name('event', Param(), lineno=57, col_offset=42)], None, None, [Name('None', Load(), lineno=57, col_offset=48)]), [If(Attribute(Name('self', Load(), lineno=58, col_offset=11), 'autocompletewindow', Load(), lineno=58, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'autocompletewindow', Load(), lineno=59, col_offset=12), 'hide_window', Load(), lineno=59, col_offset=12), [], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=60, col_offset=12), 'autocompletewindow', Store(), lineno=60, col_offset=12)], Name('None', Load(), lineno=60, col_offset=38), lineno=60, col_offset=12)], [], lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('force_open_completions_event', arguments([Name('self', Param(), lineno=62, col_offset=37), Name('event', Param(), lineno=62, col_offset=43)], None, None, []), [Expr(Str('Happens when the user really wants to open a completion list, even\n        if a function call is needed.\n        ', lineno=65, col_offset=-1), lineno=65, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'open_completions', Load(), lineno=66, col_offset=8), [Name('True', Load(), lineno=66, col_offset=30), Name('False', Load(), lineno=66, col_offset=36), Name('True', Load(), lineno=66, col_offset=43)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('try_open_completions_event', arguments([Name('self', Param(), lineno=68, col_offset=35), Name('event', Param(), lineno=68, col_offset=41)], None, None, []), [Expr(Str("Happens when it would be nice to open a completion list, but not\n        really necessary, for example after an dot, so function\n        calls won't be made.\n        ", lineno=72, col_offset=-1), lineno=72, col_offset=-1), Assign([Name('lastchar', Store(), lineno=73, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=73, col_offset=19), 'text', Load(), lineno=73, col_offset=19), 'get', Load(), lineno=73, col_offset=19), [Str('insert-1c', lineno=73, col_offset=33)], [], None, None, lineno=73, col_offset=19), lineno=73, col_offset=8), If(Compare(Name('lastchar', Load(), lineno=74, col_offset=11), [Eq()], [Str('.', lineno=74, col_offset=23)], lineno=74, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=12), '_open_completions_later', Load(), lineno=75, col_offset=12), [Name('False', Load(), lineno=75, col_offset=41), Name('False', Load(), lineno=75, col_offset=48), Name('False', Load(), lineno=75, col_offset=55), Name('COMPLETE_ATTRIBUTES', Load(), lineno=76, col_offset=41)], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=12)], [If(Compare(Name('lastchar', Load(), lineno=77, col_offset=13), [In()], [Name('SEPS', Load(), lineno=77, col_offset=25)], lineno=77, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), '_open_completions_later', Load(), lineno=78, col_offset=12), [Name('False', Load(), lineno=78, col_offset=41), Name('False', Load(), lineno=78, col_offset=48), Name('False', Load(), lineno=78, col_offset=55), Name('COMPLETE_FILES', Load(), lineno=79, col_offset=41)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [], lineno=77, col_offset=13)], lineno=74, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('autocomplete_event', arguments([Name('self', Param(), lineno=81, col_offset=27), Name('event', Param(), lineno=81, col_offset=33)], None, None, []), [Expr(Str('Happens when the user wants to complete his word, and if necessary,\n        open a completion list after that (if there is more than one\n        completion)\n        ', lineno=85, col_offset=-1), lineno=85, col_offset=-1), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=86, col_offset=11), [Name('event', Load(), lineno=86, col_offset=19), Str('mc_state', lineno=86, col_offset=26)], [], None, None, lineno=86, col_offset=11), Attribute(Name('event', Load(), lineno=86, col_offset=42), 'mc_state', Load(), lineno=86, col_offset=42)], lineno=86, col_offset=11), [Return(None, lineno=88, col_offset=12)], [], lineno=86, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=89, col_offset=11), 'autocompletewindow', Load(), lineno=89, col_offset=11), Call(Attribute(Attribute(Name('self', Load(), lineno=89, col_offset=39), 'autocompletewindow', Load(), lineno=89, col_offset=39), 'is_active', Load(), lineno=89, col_offset=39), [], [], None, None, lineno=89, col_offset=39)], lineno=89, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=90, col_offset=12), 'autocompletewindow', Load(), lineno=90, col_offset=12), 'complete', Load(), lineno=90, col_offset=12), [], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12), Return(Str('break', lineno=91, col_offset=19), lineno=91, col_offset=12)], [Assign([Name('opened', Store(), lineno=93, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=93, col_offset=21), 'open_completions', Load(), lineno=93, col_offset=21), [Name('False', Load(), lineno=93, col_offset=43), Name('True', Load(), lineno=93, col_offset=50), Name('True', Load(), lineno=93, col_offset=56)], [], None, None, lineno=93, col_offset=21), lineno=93, col_offset=12), If(Name('opened', Load(), lineno=94, col_offset=15), [Return(Str('break', lineno=95, col_offset=23), lineno=95, col_offset=16)], [], lineno=94, col_offset=12)], lineno=89, col_offset=8)], [], lineno=81, col_offset=4), FunctionDef('_open_completions_later', arguments([Name('self', Param(), lineno=97, col_offset=32)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=98, col_offset=8), '_delayed_completion_index', Store(), lineno=98, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=41), 'text', Load(), lineno=98, col_offset=41), 'index', Load(), lineno=98, col_offset=41), [Str('insert', lineno=98, col_offset=57)], [], None, None, lineno=98, col_offset=41), lineno=98, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=99, col_offset=11), '_delayed_completion_id', Load(), lineno=99, col_offset=11), [IsNot()], [Name('None', Load(), lineno=99, col_offset=46)], lineno=99, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=100, col_offset=12), 'text', Load(), lineno=100, col_offset=12), 'after_cancel', Load(), lineno=100, col_offset=12), [Attribute(Name('self', Load(), lineno=100, col_offset=35), '_delayed_completion_id', Load(), lineno=100, col_offset=35)], [], None, None, lineno=100, col_offset=12), lineno=100, col_offset=12)], [], lineno=99, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=101, col_offset=8), '_delayed_completion_id', Store(), lineno=101, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=102, col_offset=12), 'text', Load(), lineno=102, col_offset=12), 'after', Load(), lineno=102, col_offset=12), [Attribute(Name('self', Load(), lineno=102, col_offset=28), 'popupwait', Load(), lineno=102, col_offset=28), Attribute(Name('self', Load(), lineno=102, col_offset=44), '_delayed_open_completions', Load(), lineno=102, col_offset=44)], [], Name('args', Load(), lineno=103, col_offset=29), None, lineno=102, col_offset=12), lineno=101, col_offset=8)], [], lineno=97, col_offset=4), FunctionDef('_delayed_open_completions', arguments([Name('self', Param(), lineno=105, col_offset=34)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=106, col_offset=8), '_delayed_completion_id', Store(), lineno=106, col_offset=8)], Name('None', Load(), lineno=106, col_offset=38), lineno=106, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=107, col_offset=11), 'text', Load(), lineno=107, col_offset=11), 'index', Load(), lineno=107, col_offset=11), [Str('insert', lineno=107, col_offset=27)], [], None, None, lineno=107, col_offset=11), [NotEq()], [Attribute(Name('self', Load(), lineno=107, col_offset=40), '_delayed_completion_index', Load(), lineno=107, col_offset=40)], lineno=107, col_offset=11), [Return(None, lineno=108, col_offset=12)], [], lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'open_completions', Load(), lineno=109, col_offset=8), [], [], Name('args', Load(), lineno=109, col_offset=31), None, lineno=109, col_offset=8), lineno=109, col_offset=8)], [], lineno=105, col_offset=4), FunctionDef('open_completions', arguments([Name('self', Param(), lineno=111, col_offset=25), Name('evalfuncs', Param(), lineno=111, col_offset=31), Name('complete', Param(), lineno=111, col_offset=42), Name('userWantsWin', Param(), lineno=111, col_offset=52), Name('mode', Param(), lineno=111, col_offset=66)], None, None, [Name('None', Load(), lineno=111, col_offset=71)]), [Expr(Str("Find the completions and create the AutoCompleteWindow.\n        Return True if successful (no syntax error or so found).\n        if complete is True, then if there's nothing to complete and no\n        start of completion, won't open completions and return False.\n        If mode is given, will open a completion list only in this mode.\n        ", lineno=117, col_offset=-1), lineno=117, col_offset=-1), If(Compare(Attribute(Name('self', Load(), lineno=119, col_offset=11), '_delayed_completion_id', Load(), lineno=119, col_offset=11), [IsNot()], [Name('None', Load(), lineno=119, col_offset=46)], lineno=119, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=120, col_offset=12), 'text', Load(), lineno=120, col_offset=12), 'after_cancel', Load(), lineno=120, col_offset=12), [Attribute(Name('self', Load(), lineno=120, col_offset=35), '_delayed_completion_id', Load(), lineno=120, col_offset=35)], [], None, None, lineno=120, col_offset=12), lineno=120, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=12), '_delayed_completion_id', Store(), lineno=121, col_offset=12)], Name('None', Load(), lineno=121, col_offset=42), lineno=121, col_offset=12)], [], lineno=119, col_offset=8), Assign([Name('hp', Store(), lineno=123, col_offset=8)], Call(Name('HyperParser', Load(), lineno=123, col_offset=13), [Attribute(Name('self', Load(), lineno=123, col_offset=25), 'editwin', Load(), lineno=123, col_offset=25), Str('insert', lineno=123, col_offset=39)], [], None, None, lineno=123, col_offset=13), lineno=123, col_offset=8), Assign([Name('curline', Store(), lineno=124, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=124, col_offset=18), 'text', Load(), lineno=124, col_offset=18), 'get', Load(), lineno=124, col_offset=18), [Str('insert linestart', lineno=124, col_offset=32), Str('insert', lineno=124, col_offset=52)], [], None, None, lineno=124, col_offset=18), lineno=124, col_offset=8), Assign([Name('i', Store(), lineno=125, col_offset=8), Name('j', Store(), lineno=125, col_offset=12)], Call(Name('len', Load(), lineno=125, col_offset=16), [Name('curline', Load(), lineno=125, col_offset=20)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('hp', Load(), lineno=126, col_offset=11), 'is_in_string', Load(), lineno=126, col_offset=11), [], [], None, None, lineno=126, col_offset=11), BoolOp(Or(), [UnaryOp(Not(), Name('mode', Load(), lineno=126, col_offset=38), lineno=126, col_offset=34), Compare(Name('mode', Load(), lineno=126, col_offset=46), [Eq()], [Name('COMPLETE_FILES', Load(), lineno=126, col_offset=52)], lineno=126, col_offset=46)], lineno=126, col_offset=34)], lineno=126, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=12), '_remove_autocomplete_window', Load(), lineno=127, col_offset=12), [], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12), Assign([Name('mode', Store(), lineno=128, col_offset=12)], Name('COMPLETE_FILES', Load(), lineno=128, col_offset=19), lineno=128, col_offset=12), While(BoolOp(And(), [Name('i', Load(), lineno=129, col_offset=18), Compare(Subscript(Name('curline', Load(), lineno=129, col_offset=24), Index(BinOp(Name('i', Load(), lineno=129, col_offset=32), Sub(), Num(1, lineno=129, col_offset=34), lineno=129, col_offset=32)), Load(), lineno=129, col_offset=24), [In()], [Name('FILENAME_CHARS', Load(), lineno=129, col_offset=40)], lineno=129, col_offset=24)], lineno=129, col_offset=18), [AugAssign(Name('i', Store(), lineno=130, col_offset=16), Sub(), Num(1, lineno=130, col_offset=21), lineno=130, col_offset=16)], [], lineno=129, col_offset=12), Assign([Name('comp_start', Store(), lineno=131, col_offset=12)], Subscript(Name('curline', Load(), lineno=131, col_offset=25), Slice(Name('i', Load(), lineno=131, col_offset=33), Name('j', Load(), lineno=131, col_offset=35), None), Load(), lineno=131, col_offset=25), lineno=131, col_offset=12), Assign([Name('j', Store(), lineno=132, col_offset=12)], Name('i', Load(), lineno=132, col_offset=16), lineno=132, col_offset=12), While(BoolOp(And(), [Name('i', Load(), lineno=133, col_offset=18), Compare(Subscript(Name('curline', Load(), lineno=133, col_offset=24), Index(BinOp(Name('i', Load(), lineno=133, col_offset=32), Sub(), Num(1, lineno=133, col_offset=34), lineno=133, col_offset=32)), Load(), lineno=133, col_offset=24), [In()], [BinOp(Name('FILENAME_CHARS', Load(), lineno=133, col_offset=40), Add(), Name('SEPS', Load(), lineno=133, col_offset=57), lineno=133, col_offset=40)], lineno=133, col_offset=24)], lineno=133, col_offset=18), [AugAssign(Name('i', Store(), lineno=134, col_offset=16), Sub(), Num(1, lineno=134, col_offset=21), lineno=134, col_offset=16)], [], lineno=133, col_offset=12), Assign([Name('comp_what', Store(), lineno=135, col_offset=12)], Subscript(Name('curline', Load(), lineno=135, col_offset=24), Slice(Name('i', Load(), lineno=135, col_offset=32), Name('j', Load(), lineno=135, col_offset=34), None), Load(), lineno=135, col_offset=24), lineno=135, col_offset=12)], [If(BoolOp(And(), [Call(Attribute(Name('hp', Load(), lineno=136, col_offset=13), 'is_in_code', Load(), lineno=136, col_offset=13), [], [], None, None, lineno=136, col_offset=13), BoolOp(Or(), [UnaryOp(Not(), Name('mode', Load(), lineno=136, col_offset=38), lineno=136, col_offset=34), Compare(Name('mode', Load(), lineno=136, col_offset=46), [Eq()], [Name('COMPLETE_ATTRIBUTES', Load(), lineno=136, col_offset=52)], lineno=136, col_offset=46)], lineno=136, col_offset=34)], lineno=136, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=12), '_remove_autocomplete_window', Load(), lineno=137, col_offset=12), [], [], None, None, lineno=137, col_offset=12), lineno=137, col_offset=12), Assign([Name('mode', Store(), lineno=138, col_offset=12)], Name('COMPLETE_ATTRIBUTES', Load(), lineno=138, col_offset=19), lineno=138, col_offset=12), While(BoolOp(And(), [Name('i', Load(), lineno=139, col_offset=18), Compare(Subscript(Name('curline', Load(), lineno=139, col_offset=24), Index(BinOp(Name('i', Load(), lineno=139, col_offset=32), Sub(), Num(1, lineno=139, col_offset=34), lineno=139, col_offset=32)), Load(), lineno=139, col_offset=24), [In()], [Name('ID_CHARS', Load(), lineno=139, col_offset=40)], lineno=139, col_offset=24)], lineno=139, col_offset=18), [AugAssign(Name('i', Store(), lineno=140, col_offset=16), Sub(), Num(1, lineno=140, col_offset=21), lineno=140, col_offset=16)], [], lineno=139, col_offset=12), Assign([Name('comp_start', Store(), lineno=141, col_offset=12)], Subscript(Name('curline', Load(), lineno=141, col_offset=25), Slice(Name('i', Load(), lineno=141, col_offset=33), Name('j', Load(), lineno=141, col_offset=35), None), Load(), lineno=141, col_offset=25), lineno=141, col_offset=12), If(BoolOp(And(), [Name('i', Load(), lineno=142, col_offset=15), Compare(Subscript(Name('curline', Load(), lineno=142, col_offset=21), Index(BinOp(Name('i', Load(), lineno=142, col_offset=29), Sub(), Num(1, lineno=142, col_offset=31), lineno=142, col_offset=29)), Load(), lineno=142, col_offset=21), [Eq()], [Str('.', lineno=142, col_offset=37)], lineno=142, col_offset=21)], lineno=142, col_offset=15), [Expr(Call(Attribute(Name('hp', Load(), lineno=143, col_offset=16), 'set_index', Load(), lineno=143, col_offset=16), [BinOp(Str('insert-%dc', lineno=143, col_offset=29), Mod(), BinOp(Call(Name('len', Load(), lineno=143, col_offset=45), [Name('curline', Load(), lineno=143, col_offset=49)], [], None, None, lineno=143, col_offset=45), Sub(), BinOp(Name('i', Load(), lineno=143, col_offset=59), Sub(), Num(1, lineno=143, col_offset=61), lineno=143, col_offset=59), lineno=143, col_offset=45), lineno=143, col_offset=29)], [], None, None, lineno=143, col_offset=16), lineno=143, col_offset=16), Assign([Name('comp_what', Store(), lineno=144, col_offset=16)], Call(Attribute(Name('hp', Load(), lineno=144, col_offset=28), 'get_expression', Load(), lineno=144, col_offset=28), [], [], None, None, lineno=144, col_offset=28), lineno=144, col_offset=16), If(BoolOp(Or(), [UnaryOp(Not(), Name('comp_what', Load(), lineno=145, col_offset=23), lineno=145, col_offset=19), BoolOp(And(), [UnaryOp(Not(), Name('evalfuncs', Load(), lineno=146, col_offset=24), lineno=146, col_offset=20), Compare(Call(Attribute(Name('comp_what', Load(), lineno=146, col_offset=38), 'find', Load(), lineno=146, col_offset=38), [Str('(', lineno=146, col_offset=53)], [], None, None, lineno=146, col_offset=38), [NotEq()], [Num(-1, lineno=146, col_offset=62)], lineno=146, col_offset=38)], lineno=146, col_offset=20)], lineno=145, col_offset=19), [Return(None, lineno=147, col_offset=20)], [], lineno=145, col_offset=16)], [Assign([Name('comp_what', Store(), lineno=149, col_offset=16)], Str('', lineno=149, col_offset=28), lineno=149, col_offset=16)], lineno=142, col_offset=12)], [Return(None, lineno=151, col_offset=12)], lineno=136, col_offset=13)], lineno=126, col_offset=8), If(BoolOp(And(), [Name('complete', Load(), lineno=153, col_offset=11), UnaryOp(Not(), Name('comp_what', Load(), lineno=153, col_offset=28), lineno=153, col_offset=24), UnaryOp(Not(), Name('comp_start', Load(), lineno=153, col_offset=46), lineno=153, col_offset=42)], lineno=153, col_offset=11), [Return(None, lineno=154, col_offset=12)], [], lineno=153, col_offset=8), Assign([Name('comp_lists', Store(), lineno=155, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=155, col_offset=21), 'fetch_completions', Load(), lineno=155, col_offset=21), [Name('comp_what', Load(), lineno=155, col_offset=44), Name('mode', Load(), lineno=155, col_offset=55)], [], None, None, lineno=155, col_offset=21), lineno=155, col_offset=8), If(UnaryOp(Not(), Subscript(Name('comp_lists', Load(), lineno=156, col_offset=15), Index(Num(0, lineno=156, col_offset=26)), Load(), lineno=156, col_offset=15), lineno=156, col_offset=11), [Return(None, lineno=157, col_offset=12)], [], lineno=156, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=158, col_offset=8), 'autocompletewindow', Store(), lineno=158, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=158, col_offset=34), '_make_autocomplete_window', Load(), lineno=158, col_offset=34), [], [], None, None, lineno=158, col_offset=34), lineno=158, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'autocompletewindow', Load(), lineno=159, col_offset=8), 'show_window', Load(), lineno=159, col_offset=8), [Name('comp_lists', Load(), lineno=159, col_offset=44), BinOp(Str('insert-%dc', lineno=160, col_offset=44), Mod(), Call(Name('len', Load(), lineno=160, col_offset=59), [Name('comp_start', Load(), lineno=160, col_offset=63)], [], None, None, lineno=160, col_offset=59), lineno=160, col_offset=44), Name('complete', Load(), lineno=161, col_offset=44), Name('mode', Load(), lineno=162, col_offset=44), Name('userWantsWin', Load(), lineno=163, col_offset=44)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Return(Name('True', Load(), lineno=164, col_offset=15), lineno=164, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('fetch_completions', arguments([Name('self', Param(), lineno=166, col_offset=26), Name('what', Param(), lineno=166, col_offset=32), Name('mode', Param(), lineno=166, col_offset=38)], None, None, []), [Expr(Str('Return a pair of lists of completions for something. The first list\n        is a sublist of the second. Both are sorted.\n\n        If there is a Python subprocess, get the comp. list there.  Otherwise,\n        either fetch_completions() is running in the subprocess itself or it\n        was called in an IDLE EditorWindow before any script had been run.\n\n        The subprocess environment is that of the most recently run script.  If\n        two unrelated modules are being edited some calltips in the current\n        module may be inoperative if the module was not the last to run.\n        ', lineno=177, col_offset=-1), lineno=177, col_offset=-1), TryExcept([Assign([Name('rpcclt', Store(), lineno=179, col_offset=12)], Attribute(Attribute(Attribute(Attribute(Attribute(Name('self', Load(), lineno=179, col_offset=21), 'editwin', Load(), lineno=179, col_offset=21), 'flist', Load(), lineno=179, col_offset=21), 'pyshell', Load(), lineno=179, col_offset=21), 'interp', Load(), lineno=179, col_offset=21), 'rpcclt', Load(), lineno=179, col_offset=21), lineno=179, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('rpcclt', Store(), lineno=181, col_offset=12)], Name('None', Load(), lineno=181, col_offset=21), lineno=181, col_offset=12)], lineno=180, col_offset=8)], [], lineno=178, col_offset=8), If(Name('rpcclt', Load(), lineno=182, col_offset=11), [Return(Call(Attribute(Name('rpcclt', Load(), lineno=183, col_offset=19), 'remotecall', Load(), lineno=183, col_offset=19), [Str('exec', lineno=183, col_offset=37), Str('get_the_completion_list', lineno=183, col_offset=45), Tuple([Name('what', Load(), lineno=184, col_offset=38), Name('mode', Load(), lineno=184, col_offset=44)], Load(), lineno=184, col_offset=38), Dict([], [], lineno=184, col_offset=51)], [], None, None, lineno=183, col_offset=19), lineno=183, col_offset=12)], [If(Compare(Name('mode', Load(), lineno=186, col_offset=15), [Eq()], [Name('COMPLETE_ATTRIBUTES', Load(), lineno=186, col_offset=23)], lineno=186, col_offset=15), [If(Compare(Name('what', Load(), lineno=187, col_offset=19), [Eq()], [Str('', lineno=187, col_offset=27)], lineno=187, col_offset=19), [Assign([Name('namespace', Store(), lineno=188, col_offset=20)], Call(Attribute(Attribute(Name('__main__', Load(), lineno=188, col_offset=32), '__dict__', Load(), lineno=188, col_offset=32), 'copy', Load(), lineno=188, col_offset=32), [], [], None, None, lineno=188, col_offset=32), lineno=188, col_offset=20), Expr(Call(Attribute(Name('namespace', Load(), lineno=189, col_offset=20), 'update', Load(), lineno=189, col_offset=20), [Attribute(Attribute(Name('__main__', Load(), lineno=189, col_offset=37), '__builtins__', Load(), lineno=189, col_offset=37), '__dict__', Load(), lineno=189, col_offset=37)], [], None, None, lineno=189, col_offset=20), lineno=189, col_offset=20), Assign([Name('bigl', Store(), lineno=190, col_offset=20)], Call(Name('eval', Load(), lineno=190, col_offset=27), [Str('dir()', lineno=190, col_offset=32), Name('namespace', Load(), lineno=190, col_offset=41)], [], None, None, lineno=190, col_offset=27), lineno=190, col_offset=20), Expr(Call(Attribute(Name('bigl', Load(), lineno=191, col_offset=20), 'sort', Load(), lineno=191, col_offset=20), [], [], None, None, lineno=191, col_offset=20), lineno=191, col_offset=20), If(Compare(Str('__all__', lineno=192, col_offset=23), [In()], [Name('bigl', Load(), lineno=192, col_offset=36)], lineno=192, col_offset=23), [Assign([Name('smalll', Store(), lineno=193, col_offset=24)], Call(Name('eval', Load(), lineno=193, col_offset=33), [Str('__all__', lineno=193, col_offset=38), Name('namespace', Load(), lineno=193, col_offset=49)], [], None, None, lineno=193, col_offset=33), lineno=193, col_offset=24), Expr(Call(Attribute(Name('smalll', Load(), lineno=194, col_offset=24), 'sort', Load(), lineno=194, col_offset=24), [], [], None, None, lineno=194, col_offset=24), lineno=194, col_offset=24)], [Assign([Name('smalll', Store(), lineno=196, col_offset=24)], ListComp(Name('s', Load(), lineno=196, col_offset=34), [comprehension(Name('s', Store(), lineno=196, col_offset=40), Name('bigl', Load(), lineno=196, col_offset=45), [Compare(Subscript(Name('s', Load(), lineno=196, col_offset=53), Slice(None, Num(1, lineno=196, col_offset=56), None), Load(), lineno=196, col_offset=53), [NotEq()], [Str('_', lineno=196, col_offset=62)], lineno=196, col_offset=53)])], lineno=196, col_offset=34), lineno=196, col_offset=24)], lineno=192, col_offset=20)], [TryExcept([Assign([Name('entity', Store(), lineno=199, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=199, col_offset=33), 'get_entity', Load(), lineno=199, col_offset=33), [Name('what', Load(), lineno=199, col_offset=49)], [], None, None, lineno=199, col_offset=33), lineno=199, col_offset=24), Assign([Name('bigl', Store(), lineno=200, col_offset=24)], Call(Name('dir', Load(), lineno=200, col_offset=31), [Name('entity', Load(), lineno=200, col_offset=35)], [], None, None, lineno=200, col_offset=31), lineno=200, col_offset=24), Expr(Call(Attribute(Name('bigl', Load(), lineno=201, col_offset=24), 'sort', Load(), lineno=201, col_offset=24), [], [], None, None, lineno=201, col_offset=24), lineno=201, col_offset=24), If(Compare(Str('__all__', lineno=202, col_offset=27), [In()], [Name('bigl', Load(), lineno=202, col_offset=40)], lineno=202, col_offset=27), [Assign([Name('smalll', Store(), lineno=203, col_offset=28)], Attribute(Name('entity', Load(), lineno=203, col_offset=37), '__all__', Load(), lineno=203, col_offset=37), lineno=203, col_offset=28), Expr(Call(Attribute(Name('smalll', Load(), lineno=204, col_offset=28), 'sort', Load(), lineno=204, col_offset=28), [], [], None, None, lineno=204, col_offset=28), lineno=204, col_offset=28)], [Assign([Name('smalll', Store(), lineno=206, col_offset=28)], ListComp(Name('s', Load(), lineno=206, col_offset=38), [comprehension(Name('s', Store(), lineno=206, col_offset=44), Name('bigl', Load(), lineno=206, col_offset=49), [Compare(Subscript(Name('s', Load(), lineno=206, col_offset=57), Slice(None, Num(1, lineno=206, col_offset=60), None), Load(), lineno=206, col_offset=57), [NotEq()], [Str('_', lineno=206, col_offset=66)], lineno=206, col_offset=57)])], lineno=206, col_offset=38), lineno=206, col_offset=28)], lineno=202, col_offset=24)], [ExceptHandler(None, None, [Return(Tuple([List([], Load(), lineno=208, col_offset=31), List([], Load(), lineno=208, col_offset=35)], Load(), lineno=208, col_offset=31), lineno=208, col_offset=24)], lineno=207, col_offset=20)], [], lineno=198, col_offset=20)], lineno=187, col_offset=16)], [If(Compare(Name('mode', Load(), lineno=210, col_offset=17), [Eq()], [Name('COMPLETE_FILES', Load(), lineno=210, col_offset=25)], lineno=210, col_offset=17), [If(Compare(Name('what', Load(), lineno=211, col_offset=19), [Eq()], [Str('', lineno=211, col_offset=27)], lineno=211, col_offset=19), [Assign([Name('what', Store(), lineno=212, col_offset=20)], Str('.', lineno=212, col_offset=27), lineno=212, col_offset=20)], [], lineno=211, col_offset=16), TryExcept([Assign([Name('expandedpath', Store(), lineno=214, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=214, col_offset=35), 'path', Load(), lineno=214, col_offset=35), 'expanduser', Load(), lineno=214, col_offset=35), [Name('what', Load(), lineno=214, col_offset=54)], [], None, None, lineno=214, col_offset=35), lineno=214, col_offset=20), Assign([Name('bigl', Store(), lineno=215, col_offset=20)], Call(Attribute(Name('os', Load(), lineno=215, col_offset=27), 'listdir', Load(), lineno=215, col_offset=27), [Name('expandedpath', Load(), lineno=215, col_offset=38)], [], None, None, lineno=215, col_offset=27), lineno=215, col_offset=20), Expr(Call(Attribute(Name('bigl', Load(), lineno=216, col_offset=20), 'sort', Load(), lineno=216, col_offset=20), [], [], None, None, lineno=216, col_offset=20), lineno=216, col_offset=20), Assign([Name('smalll', Store(), lineno=217, col_offset=20)], ListComp(Name('s', Load(), lineno=217, col_offset=30), [comprehension(Name('s', Store(), lineno=217, col_offset=36), Name('bigl', Load(), lineno=217, col_offset=41), [Compare(Subscript(Name('s', Load(), lineno=217, col_offset=49), Slice(None, Num(1, lineno=217, col_offset=52), None), Load(), lineno=217, col_offset=49), [NotEq()], [Str('.', lineno=217, col_offset=58)], lineno=217, col_offset=49)])], lineno=217, col_offset=30), lineno=217, col_offset=20)], [ExceptHandler(Name('OSError', Load(), lineno=218, col_offset=23), None, [Return(Tuple([List([], Load(), lineno=219, col_offset=27), List([], Load(), lineno=219, col_offset=31)], Load(), lineno=219, col_offset=27), lineno=219, col_offset=20)], lineno=218, col_offset=16)], [], lineno=213, col_offset=16)], [], lineno=210, col_offset=17)], lineno=186, col_offset=12), If(UnaryOp(Not(), Name('smalll', Load(), lineno=221, col_offset=19), lineno=221, col_offset=15), [Assign([Name('smalll', Store(), lineno=222, col_offset=16)], Name('bigl', Load(), lineno=222, col_offset=25), lineno=222, col_offset=16)], [], lineno=221, col_offset=12), Return(Tuple([Name('smalll', Load(), lineno=223, col_offset=19), Name('bigl', Load(), lineno=223, col_offset=27)], Load(), lineno=223, col_offset=19), lineno=223, col_offset=12)], lineno=182, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('get_entity', arguments([Name('self', Param(), lineno=225, col_offset=19), Name('name', Param(), lineno=225, col_offset=25)], None, None, []), [Expr(Str('Lookup name in a namespace spanning sys.modules and __main.dict__', lineno=226, col_offset=8), lineno=226, col_offset=8), Assign([Name('namespace', Store(), lineno=227, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=227, col_offset=20), 'modules', Load(), lineno=227, col_offset=20), 'copy', Load(), lineno=227, col_offset=20), [], [], None, None, lineno=227, col_offset=20), lineno=227, col_offset=8), Expr(Call(Attribute(Name('namespace', Load(), lineno=228, col_offset=8), 'update', Load(), lineno=228, col_offset=8), [Attribute(Name('__main__', Load(), lineno=228, col_offset=25), '__dict__', Load(), lineno=228, col_offset=25)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Return(Call(Name('eval', Load(), lineno=229, col_offset=15), [Name('name', Load(), lineno=229, col_offset=20), Name('namespace', Load(), lineno=229, col_offset=26)], [], None, None, lineno=229, col_offset=15), lineno=229, col_offset=8)], [], lineno=225, col_offset=4)], [], lineno=30, col_offset=0)])
