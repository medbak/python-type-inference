Module([ImportFrom('macsupport', [alias('*', None)], 0, lineno=6, col_offset=0), ClassDef('ResMixIn', [], [FunctionDef('checkit', arguments([Name('self', Param(), lineno=10, col_offset=16)], None, None, []), [If(Compare(Attribute(Attribute(Name('self', Load(), lineno=11, col_offset=11), 'returntype', Load(), lineno=11, col_offset=11), '__class__', Load(), lineno=11, col_offset=11), [NotEq()], [Name('OSErrType', Load(), lineno=11, col_offset=40)], lineno=11, col_offset=11), [Expr(Call(Name('OutLbrace', Load(), lineno=12, col_offset=12), [], [], None, None, lineno=12, col_offset=12), lineno=12, col_offset=12), Expr(Call(Name('Output', Load(), lineno=13, col_offset=12), [Str('OSErr _err = ResError();', lineno=13, col_offset=19)], [], None, None, lineno=13, col_offset=12), lineno=13, col_offset=12), Expr(Call(Name('Output', Load(), lineno=14, col_offset=12), [Str('if (_err != noErr) return PyMac_Error(_err);', lineno=14, col_offset=19)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=12), Expr(Call(Name('OutRbrace', Load(), lineno=15, col_offset=12), [], [], None, None, lineno=15, col_offset=12), lineno=15, col_offset=12)], [], lineno=11, col_offset=8), Expr(Call(Attribute(Name('FunctionGenerator', Load(), lineno=16, col_offset=8), 'checkit', Load(), lineno=16, col_offset=8), [Name('self', Load(), lineno=16, col_offset=34)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8)], [], lineno=10, col_offset=4)], [], lineno=8, col_offset=0), ClassDef('ResFunction', [Name('ResMixIn', Load(), lineno=18, col_offset=18), Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=18, col_offset=28)], [Pass( lineno=18, col_offset=61)], [], lineno=18, col_offset=0), ClassDef('ResMethod', [Name('ResMixIn', Load(), lineno=19, col_offset=16), Name('OSErrWeakLinkMethodGenerator', Load(), lineno=19, col_offset=26)], [Pass( lineno=19, col_offset=57)], [], lineno=19, col_offset=0), Assign([Name('RsrcChainLocation', Store(), lineno=21, col_offset=0)], Call(Name('Type', Load(), lineno=21, col_offset=20), [Str('RsrcChainLocation', lineno=21, col_offset=25), Str('h', lineno=21, col_offset=46)], [], None, None, lineno=21, col_offset=20), lineno=21, col_offset=0), Assign([Name('FSCatalogInfoBitmap', Store(), lineno=22, col_offset=0)], Call(Name('FakeType', Load(), lineno=22, col_offset=22), [Str('0', lineno=22, col_offset=31)], [], None, None, lineno=22, col_offset=22), lineno=22, col_offset=0), Assign([Name('FSCatalogInfo_ptr', Store(), lineno=23, col_offset=0)], Call(Name('FakeType', Load(), lineno=23, col_offset=20), [Str('(FSCatalogInfo *)0', lineno=23, col_offset=29)], [], None, None, lineno=23, col_offset=20), lineno=23, col_offset=0), Assign([Name('includestuff', Store(), lineno=27, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=27, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n\n#ifdef USE_TOOLBOX_OBJECT_GLUE\nextern PyObject *_ResObj_New(Handle);\nextern int _ResObj_Convert(PyObject *, Handle *);\nextern PyObject *_OptResObj_New(Handle);\nextern int _OptResObj_Convert(PyObject *, Handle *);\n#define ResObj_New _ResObj_New\n#define ResObj_Convert _ResObj_Convert\n#define OptResObj_New _OptResObj_New\n#define OptResObj_Convert _OptResObj_Convert\n#endif\n\n/* Function to dispose a resource, with a "normal" calling sequence */\nstatic void\nPyMac_AutoDisposeHandle(Handle h)\n{\n        DisposeHandle(h);\n}\n', lineno=47, col_offset=-1), lineno=27, col_offset=15), lineno=27, col_offset=0), Assign([Name('finalstuff', Store(), lineno=49, col_offset=0)], BinOp(Name('finalstuff', Load(), lineno=49, col_offset=13), Add(), Str('\n\n/* Alternative version of ResObj_New, which returns None for null argument */\nPyObject *OptResObj_New(Handle itself)\n{\n        if (itself == NULL) {\n                Py_INCREF(Py_None);\n                return Py_None;\n        }\n        return ResObj_New(itself);\n}\n\nint OptResObj_Convert(PyObject *v, Handle *p_itself)\n{\n        PyObject *tmp;\n\n        if ( v == Py_None ) {\n                *p_itself = NULL;\n                return 1;\n        }\n        if (ResObj_Check(v))\n        {\n                *p_itself = ((ResourceObject *)v)->ob_itself;\n                return 1;\n        }\n        /* If it isn\'t a resource yet see whether it is convertible */\n        if ( (tmp=PyObject_CallMethod(v, "as_Resource", "")) ) {\n                *p_itself = ((ResourceObject *)tmp)->ob_itself;\n                Py_DECREF(tmp);\n                return 1;\n        }\n        PyErr_Clear();\n        PyErr_SetString(PyExc_TypeError, "Resource required");\n        return 0;\n}\n', lineno=84, col_offset=-1), lineno=49, col_offset=13), lineno=49, col_offset=0), Assign([Name('initstuff', Store(), lineno=86, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=86, col_offset=12), Add(), Str('\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(Handle, ResObj_New);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(Handle, ResObj_Convert);\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(Handle, OptResObj_New);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(Handle, OptResObj_Convert);\n', lineno=91, col_offset=-1), lineno=86, col_offset=12), lineno=86, col_offset=0), Assign([Name('module', Store(), lineno=93, col_offset=0)], Call(Name('MacModule', Load(), lineno=93, col_offset=9), [Str('_Res', lineno=93, col_offset=19), Str('Res', lineno=93, col_offset=27), Name('includestuff', Load(), lineno=93, col_offset=34), Name('finalstuff', Load(), lineno=93, col_offset=48), Name('initstuff', Load(), lineno=93, col_offset=60)], [], None, None, lineno=93, col_offset=9), lineno=93, col_offset=0), ClassDef('ResDefinition', [Name('PEP253Mixin', Load(), lineno=95, col_offset=20), Name('GlobalObjectDefinition', Load(), lineno=95, col_offset=33)], [Assign([Name('getsetlist', Store(), lineno=96, col_offset=4)], List([Tuple([Str('data', lineno=97, col_offset=13), Str('\n            PyObject *res;\n            char state;\n\n            state = HGetState(self->ob_itself);\n            HLock(self->ob_itself);\n            res = PyString_FromStringAndSize(\n                    *self->ob_itself,\n                    GetHandleSize(self->ob_itself));\n            HUnlock(self->ob_itself);\n            HSetState(self->ob_itself, state);\n            return res;\n            ', lineno=110, col_offset=-1), Str('\n            char *data;\n            long size;\n\n            if ( v == NULL )\n                    return -1;\n            if ( !PyString_Check(v) )\n                    return -1;\n            size = PyString_Size(v);\n            data = PyString_AsString(v);\n            /* XXXX Do I need the GetState/SetState calls? */\n            SetHandleSize(self->ob_itself, size);\n            if ( MemError())\n                    return -1;\n            HLock(self->ob_itself);\n            memcpy((char *)*self->ob_itself, data, size);\n            HUnlock(self->ob_itself);\n            /* XXXX Should I do the Changed call immedeately? */\n            return 0;\n            ', lineno=130, col_offset=-1), Str('The resource data', lineno=131, col_offset=12)], Load(), lineno=97, col_offset=13), Tuple([Str('size', lineno=133, col_offset=12), Str('return PyInt_FromLong(GetHandleSize(self->ob_itself));', lineno=134, col_offset=12), Name('None', Load(), lineno=135, col_offset=12), Str('The length of the resource data', lineno=136, col_offset=12)], Load(), lineno=133, col_offset=12)], Load(), lineno=96, col_offset=17), lineno=96, col_offset=4), FunctionDef('outputCheckNewArg', arguments([Name('self', Param(), lineno=139, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=140, col_offset=8), [Str('if (itself == NULL) return PyMac_Error(resNotFound);', lineno=140, col_offset=15)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8)], [], lineno=139, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=142, col_offset=30)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=144, col_offset=8), [Str('if (!%s_Check(v))', lineno=144, col_offset=15), Attribute(Name('self', Load(), lineno=144, col_offset=36), 'prefix', Load(), lineno=144, col_offset=36)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=145, col_offset=8), [], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Expr(Call(Name('Output', Load(), lineno=146, col_offset=8), [Str('PyObject *tmp;', lineno=146, col_offset=15)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8), Expr(Call(Name('Output', Load(), lineno=147, col_offset=8), [Str('if ( (tmp=PyObject_CallMethod(v, "as_Resource", "")) )', lineno=147, col_offset=15)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=148, col_offset=8), [], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), Expr(Call(Name('Output', Load(), lineno=149, col_offset=8), [Str('*p_itself = ((ResourceObject *)tmp)->ob_itself;', lineno=149, col_offset=15)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Name('Output', Load(), lineno=150, col_offset=8), [Str('Py_DECREF(tmp);', lineno=150, col_offset=15)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Name('Output', Load(), lineno=151, col_offset=8), [Str('return 1;', lineno=151, col_offset=15)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=152, col_offset=8), [], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Name('Output', Load(), lineno=153, col_offset=8), [Str('PyErr_Clear();', lineno=153, col_offset=15)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=154, col_offset=8), [], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=156, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=157, col_offset=8), 'outputStructMembers', Load(), lineno=157, col_offset=8), [Name('self', Load(), lineno=157, col_offset=51)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Expr(Call(Name('Output', Load(), lineno=158, col_offset=8), [Str('void (*ob_freeit)(%s ptr);', lineno=158, col_offset=15), Attribute(Name('self', Load(), lineno=158, col_offset=45), 'itselftype', Load(), lineno=158, col_offset=45)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=160, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=161, col_offset=8), 'outputInitStructMembers', Load(), lineno=161, col_offset=8), [Name('self', Load(), lineno=161, col_offset=55)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Name('Output', Load(), lineno=162, col_offset=8), [Str('it->ob_freeit = NULL;', lineno=162, col_offset=15)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8)], [], lineno=160, col_offset=4), FunctionDef('outputCleanupStructMembers', arguments([Name('self', Param(), lineno=164, col_offset=35)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=165, col_offset=8), [Str('if (self->ob_freeit && self->ob_itself)', lineno=165, col_offset=15)], [], None, None, lineno=165, col_offset=8), lineno=165, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=166, col_offset=8), [], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Name('Output', Load(), lineno=167, col_offset=8), [Str('self->ob_freeit(self->ob_itself);', lineno=167, col_offset=15)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=168, col_offset=8), [], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Expr(Call(Name('Output', Load(), lineno=169, col_offset=8), [Str('self->ob_itself = NULL;', lineno=169, col_offset=15)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8)], [], lineno=164, col_offset=4), FunctionDef('output_tp_newBody', arguments([Name('self', Param(), lineno=171, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=172, col_offset=8), [Str('PyObject *self;', lineno=172, col_offset=15)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Name('Output', Load(), lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Name('Output', Load(), lineno=174, col_offset=8), [Str('if ((self = type->tp_alloc(type, 0)) == NULL) return NULL;', lineno=174, col_offset=15)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Name('Output', Load(), lineno=175, col_offset=8), [Str('((%s *)self)->ob_itself = NULL;', lineno=175, col_offset=15), Attribute(Name('self', Load(), lineno=175, col_offset=50), 'objecttype', Load(), lineno=175, col_offset=50)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), Expr(Call(Name('Output', Load(), lineno=176, col_offset=8), [Str('((%s *)self)->ob_freeit = NULL;', lineno=176, col_offset=15), Attribute(Name('self', Load(), lineno=176, col_offset=50), 'objecttype', Load(), lineno=176, col_offset=50)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8), Expr(Call(Name('Output', Load(), lineno=177, col_offset=8), [Str('return self;', lineno=177, col_offset=15)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('output_tp_initBody', arguments([Name('self', Param(), lineno=179, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=180, col_offset=8), [Str('char *srcdata = NULL;', lineno=180, col_offset=15)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Expr(Call(Name('Output', Load(), lineno=181, col_offset=8), [Str('int srclen = 0;', lineno=181, col_offset=15)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), Expr(Call(Name('Output', Load(), lineno=182, col_offset=8), [Str('%s itself;', lineno=182, col_offset=15), Attribute(Name('self', Load(), lineno=182, col_offset=29), 'itselftype', Load(), lineno=182, col_offset=29)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=8), Expr(Call(Name('Output', Load(), lineno=183, col_offset=8), [Str('char *kw[] = {"itself", 0};', lineno=183, col_offset=15)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Name('Output', Load(), lineno=184, col_offset=8), [], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Name('Output', Load(), lineno=185, col_offset=8), [Str('if (PyArg_ParseTupleAndKeywords(_args, _kwds, "O&", kw, %s_Convert, &itself))', lineno=185, col_offset=15), Attribute(Name('self', Load(), lineno=186, col_offset=16), 'prefix', Load(), lineno=186, col_offset=16)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=187, col_offset=8), [], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Name('Output', Load(), lineno=188, col_offset=8), [Str('((%s *)_self)->ob_itself = itself;', lineno=188, col_offset=15), Attribute(Name('self', Load(), lineno=188, col_offset=53), 'objecttype', Load(), lineno=188, col_offset=53)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Name('Output', Load(), lineno=189, col_offset=8), [Str('return 0;', lineno=189, col_offset=15)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=190, col_offset=8), [], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Name('Output', Load(), lineno=191, col_offset=8), [Str('PyErr_Clear();', lineno=191, col_offset=15)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Expr(Call(Name('Output', Load(), lineno=192, col_offset=8), [Str('if (!PyArg_ParseTupleAndKeywords(_args, _kwds, "|s#", kw, &srcdata, &srclen)) return -1;', lineno=192, col_offset=15)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Name('Output', Load(), lineno=193, col_offset=8), [Str('if ((itself = NewHandle(srclen)) == NULL)', lineno=193, col_offset=15)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=194, col_offset=8), [], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Name('Output', Load(), lineno=195, col_offset=8), [Str('PyErr_NoMemory();', lineno=195, col_offset=15)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Name('Output', Load(), lineno=196, col_offset=8), [Str('return 0;', lineno=196, col_offset=15)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=197, col_offset=8), [], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Name('Output', Load(), lineno=198, col_offset=8), [Str('((%s *)_self)->ob_itself = itself;', lineno=198, col_offset=15), Attribute(Name('self', Load(), lineno=198, col_offset=53), 'objecttype', Load(), lineno=198, col_offset=53)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Name('Output', Load(), lineno=200, col_offset=8), [Str('if (srclen && srcdata)', lineno=200, col_offset=15)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=201, col_offset=8), [], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Name('Output', Load(), lineno=202, col_offset=8), [Str('HLock(itself);', lineno=202, col_offset=15)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Name('Output', Load(), lineno=203, col_offset=8), [Str('memcpy(*itself, srcdata, srclen);', lineno=203, col_offset=15)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Name('Output', Load(), lineno=204, col_offset=8), [Str('HUnlock(itself);', lineno=204, col_offset=15)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=205, col_offset=8), [], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Name('Output', Load(), lineno=206, col_offset=8), [Str('return 0;', lineno=206, col_offset=15)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8)], [], lineno=179, col_offset=4)], [], lineno=95, col_offset=0), Assign([Name('resobject', Store(), lineno=208, col_offset=0)], Call(Name('ResDefinition', Load(), lineno=208, col_offset=12), [Str('Resource', lineno=208, col_offset=26), Str('ResObj', lineno=208, col_offset=38), Str('Handle', lineno=208, col_offset=48)], [], None, None, lineno=208, col_offset=12), lineno=208, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=209, col_offset=0), 'addobject', Load(), lineno=209, col_offset=0), [Name('resobject', Load(), lineno=209, col_offset=17)], [], None, None, lineno=209, col_offset=0), lineno=209, col_offset=0), Assign([Name('functions', Store(), lineno=211, col_offset=0)], List([], Load(), lineno=211, col_offset=12), lineno=211, col_offset=0), Assign([Name('resmethods', Store(), lineno=212, col_offset=0)], List([], Load(), lineno=212, col_offset=13), lineno=212, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=214, col_offset=0), [Str('resgen.py', lineno=214, col_offset=9)], [], None, None, lineno=214, col_offset=0), lineno=214, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=215, col_offset=0), [Str('resedit.py', lineno=215, col_offset=9)], [], None, None, lineno=215, col_offset=0), lineno=215, col_offset=0), For(Name('f', Store(), lineno=217, col_offset=4), Name('functions', Load(), lineno=217, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=217, col_offset=20), 'add', Load(), lineno=217, col_offset=20), [Name('f', Load(), lineno=217, col_offset=31)], [], None, None, lineno=217, col_offset=20), lineno=217, col_offset=20)], [], lineno=217, col_offset=0), For(Name('f', Store(), lineno=218, col_offset=4), Name('resmethods', Load(), lineno=218, col_offset=9), [Expr(Call(Attribute(Name('resobject', Load(), lineno=218, col_offset=21), 'add', Load(), lineno=218, col_offset=21), [Name('f', Load(), lineno=218, col_offset=35)], [], None, None, lineno=218, col_offset=21), lineno=218, col_offset=21)], [], lineno=218, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=220, col_offset=0), [Str('_Resmodule.c', lineno=220, col_offset=18)], [], None, None, lineno=220, col_offset=0), lineno=220, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=221, col_offset=0), 'generate', Load(), lineno=221, col_offset=0), [], [], None, None, lineno=221, col_offset=0), lineno=221, col_offset=0)])
