Module([Expr(Str('Tests for distutils.version.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('distutils.version', [alias('LooseVersion', None)], 0, lineno=3, col_offset=0), ImportFrom('distutils.version', [alias('StrictVersion', None)], 0, lineno=4, col_offset=0), ClassDef('VersionTestCase', [Attribute(Name('unittest', Load(), lineno=6, col_offset=22), 'TestCase', Load(), lineno=6, col_offset=22)], [FunctionDef('test_prerelease', arguments([Name('self', Param(), lineno=8, col_offset=24)], None, None, []), [Assign([Name('version', Store(), lineno=9, col_offset=8)], Call(Name('StrictVersion', Load(), lineno=9, col_offset=18), [Str('1.2.3a1', lineno=9, col_offset=32)], [], None, None, lineno=9, col_offset=18), lineno=9, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertEqual', Load(), lineno=10, col_offset=8), [Attribute(Name('version', Load(), lineno=10, col_offset=25), 'version', Load(), lineno=10, col_offset=25), Tuple([Num(1, lineno=10, col_offset=43), Num(2, lineno=10, col_offset=46), Num(3, lineno=10, col_offset=49)], Load(), lineno=10, col_offset=43)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=8), 'assertEqual', Load(), lineno=11, col_offset=8), [Attribute(Name('version', Load(), lineno=11, col_offset=25), 'prerelease', Load(), lineno=11, col_offset=25), Tuple([Str('a', lineno=11, col_offset=46), Num(1, lineno=11, col_offset=51)], Load(), lineno=11, col_offset=46)], [], None, None, lineno=11, col_offset=8), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Call(Name('str', Load(), lineno=12, col_offset=25), [Name('version', Load(), lineno=12, col_offset=29)], [], None, None, lineno=12, col_offset=25), Str('1.2.3a1', lineno=12, col_offset=39)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Assign([Name('version', Store(), lineno=14, col_offset=8)], Call(Name('StrictVersion', Load(), lineno=14, col_offset=18), [Str('1.2.0', lineno=14, col_offset=32)], [], None, None, lineno=14, col_offset=18), lineno=14, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=8), 'assertEqual', Load(), lineno=15, col_offset=8), [Call(Name('str', Load(), lineno=15, col_offset=25), [Name('version', Load(), lineno=15, col_offset=29)], [], None, None, lineno=15, col_offset=25), Str('1.2', lineno=15, col_offset=39)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('test_cmp_strict', arguments([Name('self', Param(), lineno=17, col_offset=24)], None, None, []), [Assign([Name('versions', Store(), lineno=18, col_offset=8)], Tuple([Tuple([Str('1.5.1', lineno=18, col_offset=21), Str('1.5.2b2', lineno=18, col_offset=30), Num(-1, lineno=18, col_offset=42)], Load(), lineno=18, col_offset=21), Tuple([Str('161', lineno=19, col_offset=21), Str('3.10a', lineno=19, col_offset=28), Name('ValueError', Load(), lineno=19, col_offset=37)], Load(), lineno=19, col_offset=21), Tuple([Str('8.02', lineno=20, col_offset=21), Str('8.02', lineno=20, col_offset=29), Num(0, lineno=20, col_offset=37)], Load(), lineno=20, col_offset=21), Tuple([Str('3.4j', lineno=21, col_offset=21), Str('1996.07.12', lineno=21, col_offset=29), Name('ValueError', Load(), lineno=21, col_offset=43)], Load(), lineno=21, col_offset=21), Tuple([Str('3.2.pl0', lineno=22, col_offset=21), Str('3.1.1.6', lineno=22, col_offset=32), Name('ValueError', Load(), lineno=22, col_offset=43)], Load(), lineno=22, col_offset=21), Tuple([Str('2g6', lineno=23, col_offset=21), Str('11g', lineno=23, col_offset=28), Name('ValueError', Load(), lineno=23, col_offset=35)], Load(), lineno=23, col_offset=21), Tuple([Str('0.9', lineno=24, col_offset=21), Str('2.2', lineno=24, col_offset=28), Num(-1, lineno=24, col_offset=36)], Load(), lineno=24, col_offset=21), Tuple([Str('1.2.1', lineno=25, col_offset=21), Str('1.2', lineno=25, col_offset=30), Num(1, lineno=25, col_offset=37)], Load(), lineno=25, col_offset=21), Tuple([Str('1.1', lineno=26, col_offset=21), Str('1.2.2', lineno=26, col_offset=28), Num(-1, lineno=26, col_offset=38)], Load(), lineno=26, col_offset=21), Tuple([Str('1.2', lineno=27, col_offset=21), Str('1.1', lineno=27, col_offset=28), Num(1, lineno=27, col_offset=35)], Load(), lineno=27, col_offset=21), Tuple([Str('1.2.1', lineno=28, col_offset=21), Str('1.2.2', lineno=28, col_offset=30), Num(-1, lineno=28, col_offset=40)], Load(), lineno=28, col_offset=21), Tuple([Str('1.2.2', lineno=29, col_offset=21), Str('1.2', lineno=29, col_offset=30), Num(1, lineno=29, col_offset=37)], Load(), lineno=29, col_offset=21), Tuple([Str('1.2', lineno=30, col_offset=21), Str('1.2.2', lineno=30, col_offset=28), Num(-1, lineno=30, col_offset=38)], Load(), lineno=30, col_offset=21), Tuple([Str('0.4.0', lineno=31, col_offset=21), Str('0.4', lineno=31, col_offset=30), Num(0, lineno=31, col_offset=37)], Load(), lineno=31, col_offset=21), Tuple([Str('1.13++', lineno=32, col_offset=21), Str('5.5.kw', lineno=32, col_offset=31), Name('ValueError', Load(), lineno=32, col_offset=41)], Load(), lineno=32, col_offset=21)], Load(), lineno=18, col_offset=20), lineno=18, col_offset=8), For(Tuple([Name('v1', Store(), lineno=34, col_offset=12), Name('v2', Store(), lineno=34, col_offset=16), Name('wanted', Store(), lineno=34, col_offset=20)], Store(), lineno=34, col_offset=12), Name('versions', Load(), lineno=34, col_offset=30), [TryExcept([Assign([Name('res', Store(), lineno=36, col_offset=16)], Call(Attribute(Call(Name('StrictVersion', Load(), lineno=36, col_offset=22), [Name('v1', Load(), lineno=36, col_offset=36)], [], None, None, lineno=36, col_offset=22), '__cmp__', Load(), lineno=36, col_offset=22), [Call(Name('StrictVersion', Load(), lineno=36, col_offset=48), [Name('v2', Load(), lineno=36, col_offset=62)], [], None, None, lineno=36, col_offset=48)], [], None, None, lineno=36, col_offset=22), lineno=36, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=37, col_offset=19), None, [If(Compare(Name('wanted', Load(), lineno=38, col_offset=19), [Is()], [Name('ValueError', Load(), lineno=38, col_offset=29)], lineno=38, col_offset=19), [Continue( lineno=39, col_offset=20)], [Raise(Call(Name('AssertionError', Load(), lineno=41, col_offset=26), [BinOp(Str("cmp(%s, %s) shouldn't raise ValueError", lineno=41, col_offset=42), Mod(), Tuple([Name('v1', Load(), lineno=43, col_offset=47), Name('v2', Load(), lineno=43, col_offset=51)], Load(), lineno=43, col_offset=47), lineno=41, col_offset=41)], [], None, None, lineno=41, col_offset=26), None, None, lineno=41, col_offset=20)], lineno=38, col_offset=16)], lineno=37, col_offset=12)], [], lineno=35, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'assertEqual', Load(), lineno=44, col_offset=12), [Name('res', Load(), lineno=44, col_offset=29), Name('wanted', Load(), lineno=44, col_offset=34), BinOp(Str('cmp(%s, %s) should be %s, got %s', lineno=45, col_offset=29), Mod(), Tuple([Name('v1', Load(), lineno=46, col_offset=30), Name('v2', Load(), lineno=46, col_offset=34), Name('wanted', Load(), lineno=46, col_offset=38), Name('res', Load(), lineno=46, col_offset=46)], Load(), lineno=46, col_offset=30), lineno=45, col_offset=29)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=12)], [], lineno=34, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('test_cmp', arguments([Name('self', Param(), lineno=49, col_offset=17)], None, None, []), [Assign([Name('versions', Store(), lineno=50, col_offset=8)], Tuple([Tuple([Str('1.5.1', lineno=50, col_offset=21), Str('1.5.2b2', lineno=50, col_offset=30), Num(-1, lineno=50, col_offset=42)], Load(), lineno=50, col_offset=21), Tuple([Str('161', lineno=51, col_offset=21), Str('3.10a', lineno=51, col_offset=28), Num(1, lineno=51, col_offset=37)], Load(), lineno=51, col_offset=21), Tuple([Str('8.02', lineno=52, col_offset=21), Str('8.02', lineno=52, col_offset=29), Num(0, lineno=52, col_offset=37)], Load(), lineno=52, col_offset=21), Tuple([Str('3.4j', lineno=53, col_offset=21), Str('1996.07.12', lineno=53, col_offset=29), Num(-1, lineno=53, col_offset=44)], Load(), lineno=53, col_offset=21), Tuple([Str('3.2.pl0', lineno=54, col_offset=21), Str('3.1.1.6', lineno=54, col_offset=32), Num(1, lineno=54, col_offset=43)], Load(), lineno=54, col_offset=21), Tuple([Str('2g6', lineno=55, col_offset=21), Str('11g', lineno=55, col_offset=28), Num(-1, lineno=55, col_offset=36)], Load(), lineno=55, col_offset=21), Tuple([Str('0.960923', lineno=56, col_offset=21), Str('2.2beta29', lineno=56, col_offset=33), Num(-1, lineno=56, col_offset=47)], Load(), lineno=56, col_offset=21), Tuple([Str('1.13++', lineno=57, col_offset=21), Str('5.5.kw', lineno=57, col_offset=31), Num(-1, lineno=57, col_offset=42)], Load(), lineno=57, col_offset=21)], Load(), lineno=50, col_offset=20), lineno=50, col_offset=8), For(Tuple([Name('v1', Store(), lineno=60, col_offset=12), Name('v2', Store(), lineno=60, col_offset=16), Name('wanted', Store(), lineno=60, col_offset=20)], Store(), lineno=60, col_offset=12), Name('versions', Load(), lineno=60, col_offset=30), [Assign([Name('res', Store(), lineno=61, col_offset=12)], Call(Attribute(Call(Name('LooseVersion', Load(), lineno=61, col_offset=18), [Name('v1', Load(), lineno=61, col_offset=31)], [], None, None, lineno=61, col_offset=18), '__cmp__', Load(), lineno=61, col_offset=18), [Call(Name('LooseVersion', Load(), lineno=61, col_offset=43), [Name('v2', Load(), lineno=61, col_offset=56)], [], None, None, lineno=61, col_offset=43)], [], None, None, lineno=61, col_offset=18), lineno=61, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=12), 'assertEqual', Load(), lineno=62, col_offset=12), [Name('res', Load(), lineno=62, col_offset=29), Name('wanted', Load(), lineno=62, col_offset=34), BinOp(Str('cmp(%s, %s) should be %s, got %s', lineno=63, col_offset=29), Mod(), Tuple([Name('v1', Load(), lineno=64, col_offset=30), Name('v2', Load(), lineno=64, col_offset=34), Name('wanted', Load(), lineno=64, col_offset=38), Name('res', Load(), lineno=64, col_offset=46)], Load(), lineno=64, col_offset=30), lineno=63, col_offset=29)], [], None, None, lineno=62, col_offset=12), lineno=62, col_offset=12)], [], lineno=60, col_offset=8)], [], lineno=49, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Return(Call(Attribute(Name('unittest', Load(), lineno=67, col_offset=11), 'makeSuite', Load(), lineno=67, col_offset=11), [Name('VersionTestCase', Load(), lineno=67, col_offset=30)], [], None, None, lineno=67, col_offset=11), lineno=67, col_offset=4)], [], lineno=66, col_offset=0), If(Compare(Name('__name__', Load(), lineno=69, col_offset=3), [Eq()], [Str('__main__', lineno=69, col_offset=15)], lineno=69, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=70, col_offset=4), 'main', Load(), lineno=70, col_offset=4), [], [keyword('defaultTest', Str('test_suite', lineno=70, col_offset=30))], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4)], [], lineno=69, col_offset=0)])
