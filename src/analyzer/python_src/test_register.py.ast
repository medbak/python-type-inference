Module([Expr(Str('Tests for distutils.command.register.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('os', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), Import([alias('getpass', None)], lineno=6, col_offset=0), Import([alias('urllib2', None)], lineno=7, col_offset=0), Import([alias('warnings', None)], lineno=8, col_offset=0), ImportFrom('test.test_support', [alias('check_warnings', None)], 0, lineno=10, col_offset=0), ImportFrom('distutils.command', [alias('register', 'register_module')], 0, lineno=12, col_offset=0), ImportFrom('distutils.command.register', [alias('register', None)], 0, lineno=13, col_offset=0), ImportFrom('distutils.core', [alias('Distribution', None)], 0, lineno=14, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsSetupError', None)], 0, lineno=15, col_offset=0), ImportFrom('distutils.tests', [alias('support', None)], 0, lineno=17, col_offset=0), ImportFrom('distutils.tests.test_config', [alias('PYPIRC', None), alias('PyPIRCCommandTestCase', None)], 0, lineno=18, col_offset=0), Assign([Name('PYPIRC_NOPASSWORD', Store(), lineno=20, col_offset=0)], Str('[distutils]\n\nindex-servers =\n    server1\n\n[server1]\nusername:me\n', lineno=28, col_offset=-1), lineno=20, col_offset=0), Assign([Name('WANTED_PYPIRC', Store(), lineno=30, col_offset=0)], Str('[distutils]\nindex-servers =\n    pypi\n\n[pypi]\nusername:tarek\npassword:password\n', lineno=38, col_offset=-1), lineno=30, col_offset=0), ClassDef('RawInputs', [Name('object', Load(), lineno=40, col_offset=16)], [Expr(Str('Fakes user inputs.', lineno=41, col_offset=4), lineno=41, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=42, col_offset=17)], 'answers', None, []), [Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), 'answers', Store(), lineno=43, col_offset=8)], Name('answers', Load(), lineno=43, col_offset=23), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'index', Store(), lineno=44, col_offset=8)], Num(0, lineno=44, col_offset=21), lineno=44, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=46, col_offset=17), Name('prompt', Param(), lineno=46, col_offset=23)], None, None, [Str('', lineno=46, col_offset=30)]), [TryFinally([Return(Subscript(Attribute(Name('self', Load(), lineno=48, col_offset=19), 'answers', Load(), lineno=48, col_offset=19), Index(Attribute(Name('self', Load(), lineno=48, col_offset=32), 'index', Load(), lineno=48, col_offset=32)), Load(), lineno=48, col_offset=19), lineno=48, col_offset=12)], [AugAssign(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'index', Store(), lineno=50, col_offset=12), Add(), Num(1, lineno=50, col_offset=26), lineno=50, col_offset=12)], lineno=47, col_offset=8)], [], lineno=46, col_offset=4)], [], lineno=40, col_offset=0), ClassDef('FakeOpener', [Name('object', Load(), lineno=52, col_offset=17)], [Expr(Str('Fakes a PyPI server', lineno=53, col_offset=4), lineno=53, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=54, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=55, col_offset=8), 'reqs', Store(), lineno=55, col_offset=8)], List([], Load(), lineno=55, col_offset=20), lineno=55, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=57, col_offset=17)], 'args', None, []), [Return(Name('self', Load(), lineno=58, col_offset=15), lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('open', arguments([Name('self', Param(), lineno=60, col_offset=13), Name('req', Param(), lineno=60, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'reqs', Load(), lineno=61, col_offset=8), 'append', Load(), lineno=61, col_offset=8), [Name('req', Load(), lineno=61, col_offset=25)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Return(Name('self', Load(), lineno=62, col_offset=15), lineno=62, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('read', arguments([Name('self', Param(), lineno=64, col_offset=13)], None, None, []), [Return(Str('xxx', lineno=65, col_offset=15), lineno=65, col_offset=8)], [], lineno=64, col_offset=4)], [], lineno=52, col_offset=0), ClassDef('RegisterTestCase', [Name('PyPIRCCommandTestCase', Load(), lineno=67, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=69, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=70, col_offset=8), [Name('RegisterTestCase', Load(), lineno=70, col_offset=14), Name('self', Load(), lineno=70, col_offset=32)], [], None, None, lineno=70, col_offset=8), 'setUp', Load(), lineno=70, col_offset=8), [], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=72, col_offset=8), '_old_getpass', Store(), lineno=72, col_offset=8)], Attribute(Name('getpass', Load(), lineno=72, col_offset=28), 'getpass', Load(), lineno=72, col_offset=28), lineno=72, col_offset=8), FunctionDef('_getpass', arguments([Name('prompt', Param(), lineno=73, col_offset=21)], None, None, []), [Return(Str('password', lineno=74, col_offset=19), lineno=74, col_offset=12)], [], lineno=73, col_offset=8), Assign([Attribute(Name('getpass', Load(), lineno=75, col_offset=8), 'getpass', Store(), lineno=75, col_offset=8)], Name('_getpass', Load(), lineno=75, col_offset=26), lineno=75, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), 'old_opener', Store(), lineno=76, col_offset=8)], Attribute(Name('urllib2', Load(), lineno=76, col_offset=26), 'build_opener', Load(), lineno=76, col_offset=26), lineno=76, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=77, col_offset=8), 'conn', Store(), lineno=77, col_offset=8), Attribute(Name('urllib2', Load(), lineno=77, col_offset=20), 'build_opener', Store(), lineno=77, col_offset=20)], Call(Name('FakeOpener', Load(), lineno=77, col_offset=43), [], [], None, None, lineno=77, col_offset=43), lineno=77, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=79, col_offset=17)], None, None, []), [Assign([Attribute(Name('getpass', Load(), lineno=80, col_offset=8), 'getpass', Store(), lineno=80, col_offset=8)], Attribute(Name('self', Load(), lineno=80, col_offset=26), '_old_getpass', Load(), lineno=80, col_offset=26), lineno=80, col_offset=8), Assign([Attribute(Name('urllib2', Load(), lineno=81, col_offset=8), 'build_opener', Store(), lineno=81, col_offset=8)], Attribute(Name('self', Load(), lineno=81, col_offset=31), 'old_opener', Load(), lineno=81, col_offset=31), lineno=81, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=82, col_offset=8), [Name('RegisterTestCase', Load(), lineno=82, col_offset=14), Name('self', Load(), lineno=82, col_offset=32)], [], None, None, lineno=82, col_offset=8), 'tearDown', Load(), lineno=82, col_offset=8), [], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('_get_cmd', arguments([Name('self', Param(), lineno=84, col_offset=17), Name('metadata', Param(), lineno=84, col_offset=23)], None, None, [Name('None', Load(), lineno=84, col_offset=32)]), [If(Compare(Name('metadata', Load(), lineno=85, col_offset=11), [Is()], [Name('None', Load(), lineno=85, col_offset=23)], lineno=85, col_offset=11), [Assign([Name('metadata', Store(), lineno=86, col_offset=12)], Dict([Str('url', lineno=86, col_offset=24), Str('author', lineno=86, col_offset=38), Str('author_email', lineno=87, col_offset=24), Str('name', lineno=88, col_offset=24), Str('version', lineno=88, col_offset=39)], [Str('xxx', lineno=86, col_offset=31), Str('xxx', lineno=86, col_offset=48), Str('xxx', lineno=87, col_offset=40), Str('xxx', lineno=88, col_offset=32), Str('xxx', lineno=88, col_offset=50)], lineno=86, col_offset=23), lineno=86, col_offset=12)], [], lineno=85, col_offset=8), Assign([Tuple([Name('pkg_info', Store(), lineno=89, col_offset=8), Name('dist', Store(), lineno=89, col_offset=18)], Store(), lineno=89, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=89, col_offset=25), 'create_dist', Load(), lineno=89, col_offset=25), [], [], None, Name('metadata', Load(), lineno=89, col_offset=44), lineno=89, col_offset=25), lineno=89, col_offset=8), Return(Call(Name('register', Load(), lineno=90, col_offset=15), [Name('dist', Load(), lineno=90, col_offset=24)], [], None, None, lineno=90, col_offset=15), lineno=90, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('test_create_pypirc', arguments([Name('self', Param(), lineno=92, col_offset=27)], None, None, []), [Assign([Name('cmd', Store(), lineno=97, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=97, col_offset=14), '_get_cmd', Load(), lineno=97, col_offset=14), [], [], None, None, lineno=97, col_offset=14), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertTrue', Load(), lineno=100, col_offset=8), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=100, col_offset=28), 'path', Load(), lineno=100, col_offset=28), 'exists', Load(), lineno=100, col_offset=28), [Attribute(Name('self', Load(), lineno=100, col_offset=43), 'rc', Load(), lineno=100, col_offset=43)], [], None, None, lineno=100, col_offset=28), lineno=100, col_offset=24)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Assign([Name('inputs', Store(), lineno=110, col_offset=8)], Call(Name('RawInputs', Load(), lineno=110, col_offset=17), [Str('1', lineno=110, col_offset=27), Str('tarek', lineno=110, col_offset=32), Str('y', lineno=110, col_offset=41)], [], None, None, lineno=110, col_offset=17), lineno=110, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=111, col_offset=8), 'raw_input', Store(), lineno=111, col_offset=8)], Attribute(Name('inputs', Load(), lineno=111, col_offset=36), '__call__', Load(), lineno=111, col_offset=36), lineno=111, col_offset=8), TryFinally([Expr(Call(Attribute(Name('cmd', Load(), lineno=114, col_offset=12), 'run', Load(), lineno=114, col_offset=12), [], [], None, None, lineno=114, col_offset=12), lineno=114, col_offset=12)], [Delete([Attribute(Name('register_module', Load(), lineno=116, col_offset=16), 'raw_input', Del(), lineno=116, col_offset=16)], lineno=116, col_offset=12)], lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'assertTrue', Load(), lineno=119, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=119, col_offset=24), 'path', Load(), lineno=119, col_offset=24), 'exists', Load(), lineno=119, col_offset=24), [Attribute(Name('self', Load(), lineno=119, col_offset=39), 'rc', Load(), lineno=119, col_offset=39)], [], None, None, lineno=119, col_offset=24)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), Assign([Name('f', Store(), lineno=122, col_offset=8)], Call(Name('open', Load(), lineno=122, col_offset=12), [Attribute(Name('self', Load(), lineno=122, col_offset=17), 'rc', Load(), lineno=122, col_offset=17)], [], None, None, lineno=122, col_offset=12), lineno=122, col_offset=8), TryFinally([Assign([Name('content', Store(), lineno=124, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=124, col_offset=22), 'read', Load(), lineno=124, col_offset=22), [], [], None, None, lineno=124, col_offset=22), lineno=124, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=12), 'assertEqual', Load(), lineno=125, col_offset=12), [Name('content', Load(), lineno=125, col_offset=29), Name('WANTED_PYPIRC', Load(), lineno=125, col_offset=38)], [], None, None, lineno=125, col_offset=12), lineno=125, col_offset=12)], [Expr(Call(Attribute(Name('f', Load(), lineno=127, col_offset=12), 'close', Load(), lineno=127, col_offset=12), [], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12)], lineno=123, col_offset=8), FunctionDef('_no_way', arguments([Name('prompt', Param(), lineno=132, col_offset=20)], None, None, [Str('', lineno=132, col_offset=27)]), [Raise(Call(Name('AssertionError', Load(), lineno=133, col_offset=18), [Name('prompt', Load(), lineno=133, col_offset=33)], [], None, None, lineno=133, col_offset=18), None, None, lineno=133, col_offset=12)], [], lineno=132, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=134, col_offset=8), 'raw_input', Store(), lineno=134, col_offset=8)], Name('_no_way', Load(), lineno=134, col_offset=36), lineno=134, col_offset=8), Assign([Attribute(Name('cmd', Load(), lineno=136, col_offset=8), 'show_response', Store(), lineno=136, col_offset=8)], Num(1, lineno=136, col_offset=28), lineno=136, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=137, col_offset=8), 'run', Load(), lineno=137, col_offset=8), [], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'assertTrue', Load(), lineno=141, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=141, col_offset=24), 'conn', Load(), lineno=141, col_offset=24), 'reqs', Load(), lineno=141, col_offset=24), Num(2, lineno=141, col_offset=40)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Assign([Name('req1', Store(), lineno=142, col_offset=8)], Call(Name('dict', Load(), lineno=142, col_offset=15), [Attribute(Subscript(Attribute(Attribute(Name('self', Load(), lineno=142, col_offset=20), 'conn', Load(), lineno=142, col_offset=20), 'reqs', Load(), lineno=142, col_offset=20), Index(Num(0, lineno=142, col_offset=35)), Load(), lineno=142, col_offset=20), 'headers', Load(), lineno=142, col_offset=20)], [], None, None, lineno=142, col_offset=15), lineno=142, col_offset=8), Assign([Name('req2', Store(), lineno=143, col_offset=8)], Call(Name('dict', Load(), lineno=143, col_offset=15), [Attribute(Subscript(Attribute(Attribute(Name('self', Load(), lineno=143, col_offset=20), 'conn', Load(), lineno=143, col_offset=20), 'reqs', Load(), lineno=143, col_offset=20), Index(Num(1, lineno=143, col_offset=35)), Load(), lineno=143, col_offset=20), 'headers', Load(), lineno=143, col_offset=20)], [], None, None, lineno=143, col_offset=15), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertEqual', Load(), lineno=144, col_offset=8), [Subscript(Name('req2', Load(), lineno=144, col_offset=25), Index(Str('Content-length', lineno=144, col_offset=30)), Load(), lineno=144, col_offset=25), Subscript(Name('req1', Load(), lineno=144, col_offset=49), Index(Str('Content-length', lineno=144, col_offset=54)), Load(), lineno=144, col_offset=49)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertTrue', Load(), lineno=145, col_offset=8), [Compare(Str('xxx', lineno=145, col_offset=24), [In()], [Attribute(Subscript(Attribute(Attribute(Name('self', Load(), lineno=145, col_offset=33), 'conn', Load(), lineno=145, col_offset=33), 'reqs', Load(), lineno=145, col_offset=33), Index(Num(1, lineno=145, col_offset=48)), Load(), lineno=145, col_offset=33), 'data', Load(), lineno=145, col_offset=33)], lineno=145, col_offset=24)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('test_password_not_in_file', arguments([Name('self', Param(), lineno=147, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'write_file', Load(), lineno=149, col_offset=8), [Attribute(Name('self', Load(), lineno=149, col_offset=24), 'rc', Load(), lineno=149, col_offset=24), Name('PYPIRC_NOPASSWORD', Load(), lineno=149, col_offset=33)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Assign([Name('cmd', Store(), lineno=150, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=150, col_offset=14), '_get_cmd', Load(), lineno=150, col_offset=14), [], [], None, None, lineno=150, col_offset=14), lineno=150, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=151, col_offset=8), '_set_config', Load(), lineno=151, col_offset=8), [], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=152, col_offset=8), 'finalize_options', Load(), lineno=152, col_offset=8), [], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=153, col_offset=8), 'send_metadata', Load(), lineno=153, col_offset=8), [], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertEqual', Load(), lineno=157, col_offset=8), [Attribute(Attribute(Name('cmd', Load(), lineno=157, col_offset=25), 'distribution', Load(), lineno=157, col_offset=25), 'password', Load(), lineno=157, col_offset=25), Str('password', lineno=157, col_offset=52)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('test_registering', arguments([Name('self', Param(), lineno=159, col_offset=25)], None, None, []), [Assign([Name('cmd', Store(), lineno=161, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=161, col_offset=14), '_get_cmd', Load(), lineno=161, col_offset=14), [], [], None, None, lineno=161, col_offset=14), lineno=161, col_offset=8), Assign([Name('inputs', Store(), lineno=162, col_offset=8)], Call(Name('RawInputs', Load(), lineno=162, col_offset=17), [Str('2', lineno=162, col_offset=27), Str('tarek', lineno=162, col_offset=32), Str('tarek@ziade.org', lineno=162, col_offset=41)], [], None, None, lineno=162, col_offset=17), lineno=162, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=163, col_offset=8), 'raw_input', Store(), lineno=163, col_offset=8)], Attribute(Name('inputs', Load(), lineno=163, col_offset=36), '__call__', Load(), lineno=163, col_offset=36), lineno=163, col_offset=8), TryFinally([Expr(Call(Attribute(Name('cmd', Load(), lineno=166, col_offset=12), 'run', Load(), lineno=166, col_offset=12), [], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12)], [Delete([Attribute(Name('register_module', Load(), lineno=168, col_offset=16), 'raw_input', Del(), lineno=168, col_offset=16)], lineno=168, col_offset=12)], lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=171, col_offset=8), 'assertTrue', Load(), lineno=171, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=171, col_offset=24), 'conn', Load(), lineno=171, col_offset=24), 'reqs', Load(), lineno=171, col_offset=24), Num(1, lineno=171, col_offset=40)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Assign([Name('req', Store(), lineno=172, col_offset=8)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=172, col_offset=14), 'conn', Load(), lineno=172, col_offset=14), 'reqs', Load(), lineno=172, col_offset=14), Index(Num(0, lineno=172, col_offset=29)), Load(), lineno=172, col_offset=14), lineno=172, col_offset=8), Assign([Name('headers', Store(), lineno=173, col_offset=8)], Call(Name('dict', Load(), lineno=173, col_offset=18), [Attribute(Name('req', Load(), lineno=173, col_offset=23), 'headers', Load(), lineno=173, col_offset=23)], [], None, None, lineno=173, col_offset=18), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertEqual', Load(), lineno=174, col_offset=8), [Subscript(Name('headers', Load(), lineno=174, col_offset=25), Index(Str('Content-length', lineno=174, col_offset=33)), Load(), lineno=174, col_offset=25), Str('608', lineno=174, col_offset=52)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertTrue', Load(), lineno=175, col_offset=8), [Compare(Str('tarek', lineno=175, col_offset=24), [In()], [Attribute(Name('req', Load(), lineno=175, col_offset=35), 'data', Load(), lineno=175, col_offset=35)], lineno=175, col_offset=24)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('test_password_reset', arguments([Name('self', Param(), lineno=177, col_offset=28)], None, None, []), [Assign([Name('cmd', Store(), lineno=179, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=179, col_offset=14), '_get_cmd', Load(), lineno=179, col_offset=14), [], [], None, None, lineno=179, col_offset=14), lineno=179, col_offset=8), Assign([Name('inputs', Store(), lineno=180, col_offset=8)], Call(Name('RawInputs', Load(), lineno=180, col_offset=17), [Str('3', lineno=180, col_offset=27), Str('tarek@ziade.org', lineno=180, col_offset=32)], [], None, None, lineno=180, col_offset=17), lineno=180, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=181, col_offset=8), 'raw_input', Store(), lineno=181, col_offset=8)], Attribute(Name('inputs', Load(), lineno=181, col_offset=36), '__call__', Load(), lineno=181, col_offset=36), lineno=181, col_offset=8), TryFinally([Expr(Call(Attribute(Name('cmd', Load(), lineno=184, col_offset=12), 'run', Load(), lineno=184, col_offset=12), [], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=12)], [Delete([Attribute(Name('register_module', Load(), lineno=186, col_offset=16), 'raw_input', Del(), lineno=186, col_offset=16)], lineno=186, col_offset=12)], lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertTrue', Load(), lineno=189, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=189, col_offset=24), 'conn', Load(), lineno=189, col_offset=24), 'reqs', Load(), lineno=189, col_offset=24), Num(1, lineno=189, col_offset=40)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Assign([Name('req', Store(), lineno=190, col_offset=8)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=14), 'conn', Load(), lineno=190, col_offset=14), 'reqs', Load(), lineno=190, col_offset=14), Index(Num(0, lineno=190, col_offset=29)), Load(), lineno=190, col_offset=14), lineno=190, col_offset=8), Assign([Name('headers', Store(), lineno=191, col_offset=8)], Call(Name('dict', Load(), lineno=191, col_offset=18), [Attribute(Name('req', Load(), lineno=191, col_offset=23), 'headers', Load(), lineno=191, col_offset=23)], [], None, None, lineno=191, col_offset=18), lineno=191, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Subscript(Name('headers', Load(), lineno=192, col_offset=25), Index(Str('Content-length', lineno=192, col_offset=33)), Load(), lineno=192, col_offset=25), Str('290', lineno=192, col_offset=52)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertTrue', Load(), lineno=193, col_offset=8), [Compare(Str('tarek', lineno=193, col_offset=24), [In()], [Attribute(Name('req', Load(), lineno=193, col_offset=35), 'data', Load(), lineno=193, col_offset=35)], lineno=193, col_offset=24)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('test_strict', arguments([Name('self', Param(), lineno=195, col_offset=20)], None, None, []), [Assign([Name('cmd', Store(), lineno=202, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=202, col_offset=14), '_get_cmd', Load(), lineno=202, col_offset=14), [Dict([], [], lineno=202, col_offset=28)], [], None, None, lineno=202, col_offset=14), lineno=202, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=203, col_offset=8), 'ensure_finalized', Load(), lineno=203, col_offset=8), [], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Assign([Attribute(Name('cmd', Load(), lineno=204, col_offset=8), 'strict', Store(), lineno=204, col_offset=8)], Num(1, lineno=204, col_offset=21), lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertRaises', Load(), lineno=205, col_offset=8), [Name('DistutilsSetupError', Load(), lineno=205, col_offset=26), Attribute(Name('cmd', Load(), lineno=205, col_offset=47), 'run', Load(), lineno=205, col_offset=47)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), TryExcept([Import([alias('docutils', None)], lineno=210, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=211, col_offset=15), None, [Return(None, lineno=212, col_offset=12)], lineno=211, col_offset=8)], [], lineno=209, col_offset=8), Assign([Name('metadata', Store(), lineno=215, col_offset=8)], Dict([Str('url', lineno=215, col_offset=20), Str('author', lineno=215, col_offset=34), Str('author_email', lineno=216, col_offset=20), Str('name', lineno=217, col_offset=20), Str('version', lineno=217, col_offset=35), Str('long_description', lineno=218, col_offset=20)], [Str('xxx', lineno=215, col_offset=27), Str('xxx', lineno=215, col_offset=44), Str(u'\xe9x\xe9x\xe9', lineno=216, col_offset=36), Str('xxx', lineno=217, col_offset=28), Str('xxx', lineno=217, col_offset=46), Str('title\n==\n\ntext', lineno=218, col_offset=40)], lineno=215, col_offset=19), lineno=215, col_offset=8), Assign([Name('cmd', Store(), lineno=220, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=220, col_offset=14), '_get_cmd', Load(), lineno=220, col_offset=14), [Name('metadata', Load(), lineno=220, col_offset=28)], [], None, None, lineno=220, col_offset=14), lineno=220, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=221, col_offset=8), 'ensure_finalized', Load(), lineno=221, col_offset=8), [], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Assign([Attribute(Name('cmd', Load(), lineno=222, col_offset=8), 'strict', Store(), lineno=222, col_offset=8)], Num(1, lineno=222, col_offset=21), lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'assertRaises', Load(), lineno=223, col_offset=8), [Name('DistutilsSetupError', Load(), lineno=223, col_offset=26), Attribute(Name('cmd', Load(), lineno=223, col_offset=47), 'run', Load(), lineno=223, col_offset=47)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Assign([Subscript(Name('metadata', Load(), lineno=226, col_offset=8), Index(Str('long_description', lineno=226, col_offset=17)), Store(), lineno=226, col_offset=8)], Str('title\n=====\n\ntext', lineno=226, col_offset=39), lineno=226, col_offset=8), Assign([Name('cmd', Store(), lineno=227, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=227, col_offset=14), '_get_cmd', Load(), lineno=227, col_offset=14), [Name('metadata', Load(), lineno=227, col_offset=28)], [], None, None, lineno=227, col_offset=14), lineno=227, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=228, col_offset=8), 'ensure_finalized', Load(), lineno=228, col_offset=8), [], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Assign([Attribute(Name('cmd', Load(), lineno=229, col_offset=8), 'strict', Store(), lineno=229, col_offset=8)], Num(1, lineno=229, col_offset=21), lineno=229, col_offset=8), Assign([Name('inputs', Store(), lineno=230, col_offset=8)], Call(Name('RawInputs', Load(), lineno=230, col_offset=17), [Str('1', lineno=230, col_offset=27), Str('tarek', lineno=230, col_offset=32), Str('y', lineno=230, col_offset=41)], [], None, None, lineno=230, col_offset=17), lineno=230, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=231, col_offset=8), 'raw_input', Store(), lineno=231, col_offset=8)], Attribute(Name('inputs', Load(), lineno=231, col_offset=36), '__call__', Load(), lineno=231, col_offset=36), lineno=231, col_offset=8), TryFinally([Expr(Call(Attribute(Name('cmd', Load(), lineno=234, col_offset=12), 'run', Load(), lineno=234, col_offset=12), [], [], None, None, lineno=234, col_offset=12), lineno=234, col_offset=12)], [Delete([Attribute(Name('register_module', Load(), lineno=236, col_offset=16), 'raw_input', Del(), lineno=236, col_offset=16)], lineno=236, col_offset=12)], lineno=233, col_offset=8), Assign([Name('cmd', Store(), lineno=239, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=239, col_offset=14), '_get_cmd', Load(), lineno=239, col_offset=14), [], [], None, None, lineno=239, col_offset=14), lineno=239, col_offset=8), Expr(Call(Attribute(Name('cmd', Load(), lineno=240, col_offset=8), 'ensure_finalized', Load(), lineno=240, col_offset=8), [], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Assign([Name('inputs', Store(), lineno=241, col_offset=8)], Call(Name('RawInputs', Load(), lineno=241, col_offset=17), [Str('1', lineno=241, col_offset=27), Str('tarek', lineno=241, col_offset=32), Str('y', lineno=241, col_offset=41)], [], None, None, lineno=241, col_offset=17), lineno=241, col_offset=8), Assign([Attribute(Name('register_module', Load(), lineno=242, col_offset=8), 'raw_input', Store(), lineno=242, col_offset=8)], Attribute(Name('inputs', Load(), lineno=242, col_offset=36), '__call__', Load(), lineno=242, col_offset=36), lineno=242, col_offset=8), TryFinally([Expr(Call(Attribute(Name('cmd', Load(), lineno=245, col_offset=12), 'run', Load(), lineno=245, col_offset=12), [], [], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12)], [Delete([Attribute(Name('register_module', Load(), lineno=247, col_offset=16), 'raw_input', Del(), lineno=247, col_offset=16)], lineno=247, col_offset=12)], lineno=244, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('test_check_metadata_deprecated', arguments([Name('self', Param(), lineno=249, col_offset=39)], None, None, []), [Assign([Name('cmd', Store(), lineno=251, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=251, col_offset=14), '_get_cmd', Load(), lineno=251, col_offset=14), [], [], None, None, lineno=251, col_offset=14), lineno=251, col_offset=8), With(Call(Name('check_warnings', Load(), lineno=252, col_offset=13), [], [], None, None, lineno=252, col_offset=13), Name('w', Store(), lineno=252, col_offset=33), [Expr(Call(Attribute(Name('warnings', Load(), lineno=253, col_offset=12), 'simplefilter', Load(), lineno=253, col_offset=12), [Str('always', lineno=253, col_offset=34)], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=12), Expr(Call(Attribute(Name('cmd', Load(), lineno=254, col_offset=12), 'check_metadata', Load(), lineno=254, col_offset=12), [], [], None, None, lineno=254, col_offset=12), lineno=254, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=12), 'assertEqual', Load(), lineno=255, col_offset=12), [Call(Name('len', Load(), lineno=255, col_offset=29), [Attribute(Name('w', Load(), lineno=255, col_offset=33), 'warnings', Load(), lineno=255, col_offset=33)], [], None, None, lineno=255, col_offset=29), Num(1, lineno=255, col_offset=46)], [], None, None, lineno=255, col_offset=12), lineno=255, col_offset=12)], lineno=252, col_offset=13)], [], lineno=249, col_offset=4)], [], lineno=67, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Return(Call(Attribute(Name('unittest', Load(), lineno=258, col_offset=11), 'makeSuite', Load(), lineno=258, col_offset=11), [Name('RegisterTestCase', Load(), lineno=258, col_offset=30)], [], None, None, lineno=258, col_offset=11), lineno=258, col_offset=4)], [], lineno=257, col_offset=0), If(Compare(Name('__name__', Load(), lineno=260, col_offset=3), [Eq()], [Str('__main__', lineno=260, col_offset=15)], lineno=260, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=261, col_offset=4), 'main', Load(), lineno=261, col_offset=4), [], [keyword('defaultTest', Str('test_suite', lineno=261, col_offset=30))], None, None, lineno=261, col_offset=4), lineno=261, col_offset=4)], [], lineno=260, col_offset=0)])
