Module([Expr(Str("Extension to execute code outside the Python shell window.\n\nThis adds the following commands:\n\n- Check module does a full syntax check of the current module.\n  It also runs the tabnanny to catch any inconsistent tabs.\n\n- Run module executes the module's code in the __main__ namespace.  The window\n  must have been saved previously. The module is added to sys.modules, and is\n  also added to the __main__ namespace.\n\nXXX GvR Redesign this interface (yet again) as follows:\n\n- Present a dialog box for ``Run Module''\n\n- Allow specify command line arguments in the dialog box\n\n", lineno=18, col_offset=-1), lineno=18, col_offset=-1), Import([alias('os', None)], lineno=20, col_offset=0), Import([alias('re', None)], lineno=21, col_offset=0), Import([alias('string', None)], lineno=22, col_offset=0), Import([alias('tabnanny', None)], lineno=23, col_offset=0), Import([alias('tokenize', None)], lineno=24, col_offset=0), Import([alias('tkMessageBox', None)], lineno=25, col_offset=0), ImportFrom('idlelib', [alias('PyShell', None)], 0, lineno=26, col_offset=0), ImportFrom('idlelib.configHandler', [alias('idleConf', None)], 0, lineno=28, col_offset=0), Assign([Name('IDENTCHARS', Store(), lineno=30, col_offset=0)], BinOp(BinOp(Attribute(Name('string', Load(), lineno=30, col_offset=13), 'ascii_letters', Load(), lineno=30, col_offset=13), Add(), Attribute(Name('string', Load(), lineno=30, col_offset=36), 'digits', Load(), lineno=30, col_offset=36), lineno=30, col_offset=13), Add(), Str('_', lineno=30, col_offset=52), lineno=30, col_offset=50), lineno=30, col_offset=0), Assign([Name('indent_message', Store(), lineno=32, col_offset=0)], Str('Error: Inconsistent indentation detected!\n\n1) Your indentation is outright incorrect (easy to fix), OR\n\n2) Your indentation mixes tabs and spaces.\n\nTo fix case 2, change all tabs to spaces by using Edit->Select All followed by Format->Untabify Region and specify the number of columns used by each tab.\n', lineno=40, col_offset=-1), lineno=32, col_offset=0), ClassDef('ScriptBinding', [], [Assign([Name('menudefs', Store(), lineno=44, col_offset=4)], List([Tuple([Str('run', lineno=45, col_offset=9), List([Name('None', Load(), lineno=45, col_offset=17), Tuple([Str('Check Module', lineno=46, col_offset=18), Str('<<check-module>>', lineno=46, col_offset=34)], Load(), lineno=46, col_offset=18), Tuple([Str('Run Module', lineno=47, col_offset=18), Str('<<run-module>>', lineno=47, col_offset=32)], Load(), lineno=47, col_offset=18)], Load(), lineno=45, col_offset=16)], Load(), lineno=45, col_offset=9)], Load(), lineno=44, col_offset=15), lineno=44, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=49, col_offset=17), Name('editwin', Param(), lineno=49, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=50, col_offset=8), 'editwin', Store(), lineno=50, col_offset=8)], Name('editwin', Load(), lineno=50, col_offset=23), lineno=50, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), 'flist', Store(), lineno=53, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=53, col_offset=21), 'editwin', Load(), lineno=53, col_offset=21), 'flist', Load(), lineno=53, col_offset=21), lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=54, col_offset=8), 'root', Store(), lineno=54, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=54, col_offset=20), 'editwin', Load(), lineno=54, col_offset=20), 'root', Load(), lineno=54, col_offset=20), lineno=54, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('check_module_event', arguments([Name('self', Param(), lineno=56, col_offset=27), Name('event', Param(), lineno=56, col_offset=33)], None, None, []), [Assign([Name('filename', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=57, col_offset=19), 'getfilename', Load(), lineno=57, col_offset=19), [], [], None, None, lineno=57, col_offset=19), lineno=57, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=58, col_offset=15), lineno=58, col_offset=11), [Return(Str('break', lineno=59, col_offset=19), lineno=59, col_offset=12)], [], lineno=58, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=60, col_offset=15), 'checksyntax', Load(), lineno=60, col_offset=15), [Name('filename', Load(), lineno=60, col_offset=32)], [], None, None, lineno=60, col_offset=15), lineno=60, col_offset=11), [Return(Str('break', lineno=61, col_offset=19), lineno=61, col_offset=12)], [], lineno=60, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=62, col_offset=15), 'tabnanny', Load(), lineno=62, col_offset=15), [Name('filename', Load(), lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=15), lineno=62, col_offset=11), [Return(Str('break', lineno=63, col_offset=19), lineno=63, col_offset=12)], [], lineno=62, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('tabnanny', arguments([Name('self', Param(), lineno=65, col_offset=17), Name('filename', Param(), lineno=65, col_offset=23)], None, None, []), [Assign([Name('f', Store(), lineno=66, col_offset=8)], Call(Name('open', Load(), lineno=66, col_offset=12), [Name('filename', Load(), lineno=66, col_offset=17), Str('r', lineno=66, col_offset=27)], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=8), TryExcept([Expr(Call(Attribute(Name('tabnanny', Load(), lineno=68, col_offset=12), 'process_tokens', Load(), lineno=68, col_offset=12), [Call(Attribute(Name('tokenize', Load(), lineno=68, col_offset=36), 'generate_tokens', Load(), lineno=68, col_offset=36), [Attribute(Name('f', Load(), lineno=68, col_offset=61), 'readline', Load(), lineno=68, col_offset=61)], [], None, None, lineno=68, col_offset=36)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12)], [ExceptHandler(Attribute(Name('tokenize', Load(), lineno=69, col_offset=15), 'TokenError', Load(), lineno=69, col_offset=15), Name('msg', Store(), lineno=69, col_offset=36), [Assign([Tuple([Name('msgtxt', Store(), lineno=70, col_offset=12), Tuple([Name('lineno', Store(), lineno=70, col_offset=21), Name('start', Store(), lineno=70, col_offset=29)], Store(), lineno=70, col_offset=21)], Store(), lineno=70, col_offset=12)], Name('msg', Load(), lineno=70, col_offset=38), lineno=70, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=12), 'editwin', Load(), lineno=71, col_offset=12), 'gotoline', Load(), lineno=71, col_offset=12), [Name('lineno', Load(), lineno=71, col_offset=34)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=12), 'errorbox', Load(), lineno=72, col_offset=12), [Str('Tabnanny Tokenizing Error', lineno=72, col_offset=26), BinOp(Str('Token Error: %s', lineno=73, col_offset=26), Mod(), Name('msgtxt', Load(), lineno=73, col_offset=46), lineno=73, col_offset=26)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=12), Return(Name('False', Load(), lineno=74, col_offset=19), lineno=74, col_offset=12)], lineno=69, col_offset=8), ExceptHandler(Attribute(Name('tabnanny', Load(), lineno=75, col_offset=15), 'NannyNag', Load(), lineno=75, col_offset=15), Name('nag', Store(), lineno=75, col_offset=34), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=77, col_offset=12), 'editwin', Load(), lineno=77, col_offset=12), 'gotoline', Load(), lineno=77, col_offset=12), [Call(Attribute(Name('nag', Load(), lineno=77, col_offset=34), 'get_lineno', Load(), lineno=77, col_offset=34), [], [], None, None, lineno=77, col_offset=34)], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), 'errorbox', Load(), lineno=78, col_offset=12), [Str('Tab/space error', lineno=78, col_offset=26), Name('indent_message', Load(), lineno=78, col_offset=45)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12), Return(Name('False', Load(), lineno=79, col_offset=19), lineno=79, col_offset=12)], lineno=75, col_offset=8)], [], lineno=67, col_offset=8), Return(Name('True', Load(), lineno=80, col_offset=15), lineno=80, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('checksyntax', arguments([Name('self', Param(), lineno=82, col_offset=20), Name('filename', Param(), lineno=82, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=83, col_offset=8), 'shell', Store(), lineno=83, col_offset=8), Name('shell', Store(), lineno=83, col_offset=21)], Call(Attribute(Attribute(Name('self', Load(), lineno=83, col_offset=29), 'flist', Load(), lineno=83, col_offset=29), 'open_shell', Load(), lineno=83, col_offset=29), [], [], None, None, lineno=83, col_offset=29), lineno=83, col_offset=8), Assign([Name('saved_stream', Store(), lineno=84, col_offset=8)], Call(Attribute(Name('shell', Load(), lineno=84, col_offset=23), 'get_warning_stream', Load(), lineno=84, col_offset=23), [], [], None, None, lineno=84, col_offset=23), lineno=84, col_offset=8), Expr(Call(Attribute(Name('shell', Load(), lineno=85, col_offset=8), 'set_warning_stream', Load(), lineno=85, col_offset=8), [Attribute(Name('shell', Load(), lineno=85, col_offset=33), 'stderr', Load(), lineno=85, col_offset=33)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Assign([Name('f', Store(), lineno=86, col_offset=8)], Call(Name('open', Load(), lineno=86, col_offset=12), [Name('filename', Load(), lineno=86, col_offset=17), Str('r', lineno=86, col_offset=27)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=8), Assign([Name('source', Store(), lineno=87, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=87, col_offset=17), 'read', Load(), lineno=87, col_offset=17), [], [], None, None, lineno=87, col_offset=17), lineno=87, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=88, col_offset=8), 'close', Load(), lineno=88, col_offset=8), [], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), If(Compare(Str('\r', lineno=89, col_offset=11), [In()], [Name('source', Load(), lineno=89, col_offset=19)], lineno=89, col_offset=11), [Assign([Name('source', Store(), lineno=90, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=90, col_offset=21), 'sub', Load(), lineno=90, col_offset=21), [Str('\\r\\n', lineno=90, col_offset=28), Str('\n', lineno=90, col_offset=37), Name('source', Load(), lineno=90, col_offset=43)], [], None, None, lineno=90, col_offset=21), lineno=90, col_offset=12), Assign([Name('source', Store(), lineno=91, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=91, col_offset=21), 'sub', Load(), lineno=91, col_offset=21), [Str('\\r', lineno=91, col_offset=28), Str('\n', lineno=91, col_offset=35), Name('source', Load(), lineno=91, col_offset=41)], [], None, None, lineno=91, col_offset=21), lineno=91, col_offset=12)], [], lineno=89, col_offset=8), If(BoolOp(And(), [Name('source', Load(), lineno=92, col_offset=11), Compare(Subscript(Name('source', Load(), lineno=92, col_offset=22), Index(Num(-1, lineno=92, col_offset=30)), Load(), lineno=92, col_offset=22), [NotEq()], [Str('\n', lineno=92, col_offset=36)], lineno=92, col_offset=22)], lineno=92, col_offset=11), [Assign([Name('source', Store(), lineno=93, col_offset=12)], BinOp(Name('source', Load(), lineno=93, col_offset=21), Add(), Str('\n', lineno=93, col_offset=30), lineno=93, col_offset=21), lineno=93, col_offset=12)], [], lineno=92, col_offset=8), Assign([Name('text', Store(), lineno=94, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=94, col_offset=15), 'editwin', Load(), lineno=94, col_offset=15), 'text', Load(), lineno=94, col_offset=15), lineno=94, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=95, col_offset=8), 'tag_remove', Load(), lineno=95, col_offset=8), [Str('ERROR', lineno=95, col_offset=24), Str('1.0', lineno=95, col_offset=33), Str('end', lineno=95, col_offset=40)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), TryFinally([TryExcept([Return(Call(Name('compile', Load(), lineno=99, col_offset=23), [Name('source', Load(), lineno=99, col_offset=31), Name('filename', Load(), lineno=99, col_offset=39), Str('exec', lineno=99, col_offset=49)], [], None, None, lineno=99, col_offset=23), lineno=99, col_offset=16)], [ExceptHandler(Tuple([Name('SyntaxError', Load(), lineno=100, col_offset=20), Name('OverflowError', Load(), lineno=100, col_offset=33)], Load(), lineno=100, col_offset=20), Name('err', Store(), lineno=100, col_offset=49), [TryExcept([Assign([Tuple([Name('msg', Store(), lineno=102, col_offset=20), Tuple([Name('errorfilename', Store(), lineno=102, col_offset=26), Name('lineno', Store(), lineno=102, col_offset=41), Name('offset', Store(), lineno=102, col_offset=49), Name('line', Store(), lineno=102, col_offset=57)], Store(), lineno=102, col_offset=26)], Store(), lineno=102, col_offset=20)], Name('err', Load(), lineno=102, col_offset=65), lineno=102, col_offset=20), If(UnaryOp(Not(), Name('errorfilename', Load(), lineno=103, col_offset=27), lineno=103, col_offset=23), [Assign([Attribute(Name('err', Load(), lineno=104, col_offset=24), 'args', Store(), lineno=104, col_offset=24)], Tuple([Name('msg', Load(), lineno=104, col_offset=35), Tuple([Name('filename', Load(), lineno=104, col_offset=41), Name('lineno', Load(), lineno=104, col_offset=51), Name('offset', Load(), lineno=104, col_offset=59), Name('line', Load(), lineno=104, col_offset=67)], Load(), lineno=104, col_offset=41)], Load(), lineno=104, col_offset=35), lineno=104, col_offset=24), Assign([Attribute(Name('err', Load(), lineno=105, col_offset=24), 'filename', Store(), lineno=105, col_offset=24)], Name('filename', Load(), lineno=105, col_offset=39), lineno=105, col_offset=24)], [], lineno=103, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=20), 'colorize_syntax_error', Load(), lineno=106, col_offset=20), [Name('msg', Load(), lineno=106, col_offset=47), Name('lineno', Load(), lineno=106, col_offset=52), Name('offset', Load(), lineno=106, col_offset=60)], [], None, None, lineno=106, col_offset=20), lineno=106, col_offset=20)], [ExceptHandler(None, None, [Assign([Name('msg', Store(), lineno=108, col_offset=20)], BinOp(Str('*** ', lineno=108, col_offset=26), Add(), Call(Name('str', Load(), lineno=108, col_offset=35), [Name('err', Load(), lineno=108, col_offset=39)], [], None, None, lineno=108, col_offset=35), lineno=108, col_offset=26), lineno=108, col_offset=20)], lineno=107, col_offset=16)], [], lineno=101, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=16), 'errorbox', Load(), lineno=109, col_offset=16), [Str('Syntax error', lineno=109, col_offset=30), BinOp(Str("There's an error in your program:\n", lineno=110, col_offset=30), Add(), Name('msg', Load(), lineno=110, col_offset=70), lineno=110, col_offset=30)], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=16), Return(Name('False', Load(), lineno=111, col_offset=23), lineno=111, col_offset=16)], lineno=100, col_offset=12)], [], lineno=97, col_offset=12)], [Expr(Call(Attribute(Name('shell', Load(), lineno=113, col_offset=12), 'set_warning_stream', Load(), lineno=113, col_offset=12), [Name('saved_stream', Load(), lineno=113, col_offset=37)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=12)], lineno=96, col_offset=8)], [], lineno=82, col_offset=4), FunctionDef('colorize_syntax_error', arguments([Name('self', Param(), lineno=115, col_offset=30), Name('msg', Param(), lineno=115, col_offset=36), Name('lineno', Param(), lineno=115, col_offset=41), Name('offset', Param(), lineno=115, col_offset=49)], None, None, []), [Assign([Name('text', Store(), lineno=116, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=15), 'editwin', Load(), lineno=116, col_offset=15), 'text', Load(), lineno=116, col_offset=15), lineno=116, col_offset=8), Assign([Name('pos', Store(), lineno=117, col_offset=8)], BinOp(Str('0.0 + %d lines + %d chars', lineno=117, col_offset=14), Mod(), Tuple([BinOp(Name('lineno', Load(), lineno=117, col_offset=45), Sub(), Num(1, lineno=117, col_offset=52), lineno=117, col_offset=45), BinOp(Name('offset', Load(), lineno=117, col_offset=55), Sub(), Num(1, lineno=117, col_offset=62), lineno=117, col_offset=55)], Load(), lineno=117, col_offset=45), lineno=117, col_offset=14), lineno=117, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=118, col_offset=8), 'tag_add', Load(), lineno=118, col_offset=8), [Str('ERROR', lineno=118, col_offset=21), Name('pos', Load(), lineno=118, col_offset=30)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), Assign([Name('char', Store(), lineno=119, col_offset=8)], Call(Attribute(Name('text', Load(), lineno=119, col_offset=15), 'get', Load(), lineno=119, col_offset=15), [Name('pos', Load(), lineno=119, col_offset=24)], [], None, None, lineno=119, col_offset=15), lineno=119, col_offset=8), If(BoolOp(And(), [Name('char', Load(), lineno=120, col_offset=11), Compare(Name('char', Load(), lineno=120, col_offset=20), [In()], [Name('IDENTCHARS', Load(), lineno=120, col_offset=28)], lineno=120, col_offset=20)], lineno=120, col_offset=11), [Expr(Call(Attribute(Name('text', Load(), lineno=121, col_offset=12), 'tag_add', Load(), lineno=121, col_offset=12), [Str('ERROR', lineno=121, col_offset=25), BinOp(Name('pos', Load(), lineno=121, col_offset=34), Add(), Str(' wordstart', lineno=121, col_offset=40), lineno=121, col_offset=34), Name('pos', Load(), lineno=121, col_offset=54)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [], lineno=120, col_offset=8), If(Compare(Str('\n', lineno=122, col_offset=11), [Eq()], [Call(Attribute(Name('text', Load(), lineno=122, col_offset=19), 'get', Load(), lineno=122, col_offset=19), [Name('pos', Load(), lineno=122, col_offset=28)], [], None, None, lineno=122, col_offset=19)], lineno=122, col_offset=11), [Expr(Call(Attribute(Name('text', Load(), lineno=123, col_offset=12), 'mark_set', Load(), lineno=123, col_offset=12), [Str('insert', lineno=123, col_offset=26), Name('pos', Load(), lineno=123, col_offset=36)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=12)], [Expr(Call(Attribute(Name('text', Load(), lineno=125, col_offset=12), 'mark_set', Load(), lineno=125, col_offset=12), [Str('insert', lineno=125, col_offset=26), BinOp(Name('pos', Load(), lineno=125, col_offset=36), Add(), Str('+1c', lineno=125, col_offset=42), lineno=125, col_offset=36)], [], None, None, lineno=125, col_offset=12), lineno=125, col_offset=12)], lineno=122, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=126, col_offset=8), 'see', Load(), lineno=126, col_offset=8), [Name('pos', Load(), lineno=126, col_offset=17)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('run_module_event', arguments([Name('self', Param(), lineno=128, col_offset=25), Name('event', Param(), lineno=128, col_offset=31)], None, None, []), [Expr(Str("Run the module after setting up the environment.\n\n        First check the syntax.  If OK, make sure the shell is active and\n        then transfer the arguments, set the run environment's working\n        directory to the directory of the module being executed and also\n        add that directory to its sys.path if not already included.\n\n        ", lineno=136, col_offset=-1), lineno=136, col_offset=-1), Assign([Name('filename', Store(), lineno=137, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=137, col_offset=19), 'getfilename', Load(), lineno=137, col_offset=19), [], [], None, None, lineno=137, col_offset=19), lineno=137, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=138, col_offset=15), lineno=138, col_offset=11), [Return(Str('break', lineno=139, col_offset=19), lineno=139, col_offset=12)], [], lineno=138, col_offset=8), Assign([Name('code', Store(), lineno=140, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=140, col_offset=15), 'checksyntax', Load(), lineno=140, col_offset=15), [Name('filename', Load(), lineno=140, col_offset=32)], [], None, None, lineno=140, col_offset=15), lineno=140, col_offset=8), If(UnaryOp(Not(), Name('code', Load(), lineno=141, col_offset=15), lineno=141, col_offset=11), [Return(Str('break', lineno=142, col_offset=19), lineno=142, col_offset=12)], [], lineno=141, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=143, col_offset=15), 'tabnanny', Load(), lineno=143, col_offset=15), [Name('filename', Load(), lineno=143, col_offset=29)], [], None, None, lineno=143, col_offset=15), lineno=143, col_offset=11), [Return(Str('break', lineno=144, col_offset=19), lineno=144, col_offset=12)], [], lineno=143, col_offset=8), Assign([Name('shell', Store(), lineno=145, col_offset=8)], Attribute(Name('self', Load(), lineno=145, col_offset=16), 'shell', Load(), lineno=145, col_offset=16), lineno=145, col_offset=8), Assign([Name('interp', Store(), lineno=146, col_offset=8)], Attribute(Name('shell', Load(), lineno=146, col_offset=17), 'interp', Load(), lineno=146, col_offset=17), lineno=146, col_offset=8), If(Attribute(Name('PyShell', Load(), lineno=147, col_offset=11), 'use_subprocess', Load(), lineno=147, col_offset=11), [Expr(Call(Attribute(Name('shell', Load(), lineno=148, col_offset=12), 'restart_shell', Load(), lineno=148, col_offset=12), [], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=12)], [], lineno=147, col_offset=8), Assign([Name('dirname', Store(), lineno=149, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=149, col_offset=18), 'path', Load(), lineno=149, col_offset=18), 'dirname', Load(), lineno=149, col_offset=18), [Name('filename', Load(), lineno=149, col_offset=34)], [], None, None, lineno=149, col_offset=18), lineno=149, col_offset=8), Expr(Call(Attribute(Name('interp', Load(), lineno=151, col_offset=8), 'runcommand', Load(), lineno=151, col_offset=8), [BinOp(Str('if 1:\n            _filename = %r\n            import sys as _sys\n            from os.path import basename as _basename\n            if (not _sys.argv or\n                _basename(_sys.argv[0]) != _basename(_filename)):\n                _sys.argv = [_filename]\n            import os as _os\n            _os.chdir(%r)\n            del _filename, _sys, _basename, _os\n            \n', lineno=161, col_offset=-1), Mod(), Tuple([Name('filename', Load(), lineno=161, col_offset=21), Name('dirname', Load(), lineno=161, col_offset=31)], Load(), lineno=161, col_offset=21), lineno=161, col_offset=-1)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('interp', Load(), lineno=162, col_offset=8), 'prepend_syspath', Load(), lineno=162, col_offset=8), [Name('filename', Load(), lineno=162, col_offset=31)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Attribute(Name('interp', Load(), lineno=166, col_offset=8), 'runcode', Load(), lineno=166, col_offset=8), [Name('code', Load(), lineno=166, col_offset=23)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Return(Str('break', lineno=167, col_offset=15), lineno=167, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('getfilename', arguments([Name('self', Param(), lineno=169, col_offset=20)], None, None, []), [Expr(Str('Get source filename.  If not saved, offer to save (or create) file\n\n        The debugger requires a source file.  Make sure there is one, and that\n        the current version of the source buffer has been saved.  If the user\n        declines to save or cancels the Save As dialog, return None.\n\n        If the user has configured IDLE for Autosave, the file will be\n        silently saved if it already exists and is dirty.\n\n        ', lineno=179, col_offset=-1), lineno=179, col_offset=-1), Assign([Name('filename', Store(), lineno=180, col_offset=8)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=180, col_offset=19), 'editwin', Load(), lineno=180, col_offset=19), 'io', Load(), lineno=180, col_offset=19), 'filename', Load(), lineno=180, col_offset=19), lineno=180, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=181, col_offset=15), 'editwin', Load(), lineno=181, col_offset=15), 'get_saved', Load(), lineno=181, col_offset=15), [], [], None, None, lineno=181, col_offset=15), lineno=181, col_offset=11), [Assign([Name('autosave', Store(), lineno=182, col_offset=12)], Call(Attribute(Name('idleConf', Load(), lineno=182, col_offset=23), 'GetOption', Load(), lineno=182, col_offset=23), [Str('main', lineno=182, col_offset=42), Str('General', lineno=182, col_offset=50), Str('autosave', lineno=183, col_offset=42)], [keyword('type', Str('bool', lineno=183, col_offset=59))], None, None, lineno=182, col_offset=23), lineno=182, col_offset=12), If(BoolOp(And(), [Name('autosave', Load(), lineno=184, col_offset=15), Name('filename', Load(), lineno=184, col_offset=28)], lineno=184, col_offset=15), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=185, col_offset=16), 'editwin', Load(), lineno=185, col_offset=16), 'io', Load(), lineno=185, col_offset=16), 'save', Load(), lineno=185, col_offset=16), [Name('None', Load(), lineno=185, col_offset=37)], [], None, None, lineno=185, col_offset=16), lineno=185, col_offset=16)], [Assign([Name('reply', Store(), lineno=187, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=187, col_offset=24), 'ask_save_dialog', Load(), lineno=187, col_offset=24), [], [], None, None, lineno=187, col_offset=24), lineno=187, col_offset=16), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=188, col_offset=16), 'editwin', Load(), lineno=188, col_offset=16), 'text', Load(), lineno=188, col_offset=16), 'focus_set', Load(), lineno=188, col_offset=16), [], [], None, None, lineno=188, col_offset=16), lineno=188, col_offset=16), If(Compare(Name('reply', Load(), lineno=189, col_offset=19), [Eq()], [Str('ok', lineno=189, col_offset=28)], lineno=189, col_offset=19), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=20), 'editwin', Load(), lineno=190, col_offset=20), 'io', Load(), lineno=190, col_offset=20), 'save', Load(), lineno=190, col_offset=20), [Name('None', Load(), lineno=190, col_offset=41)], [], None, None, lineno=190, col_offset=20), lineno=190, col_offset=20), Assign([Name('filename', Store(), lineno=191, col_offset=20)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=191, col_offset=31), 'editwin', Load(), lineno=191, col_offset=31), 'io', Load(), lineno=191, col_offset=31), 'filename', Load(), lineno=191, col_offset=31), lineno=191, col_offset=20)], [Assign([Name('filename', Store(), lineno=193, col_offset=20)], Name('None', Load(), lineno=193, col_offset=31), lineno=193, col_offset=20)], lineno=189, col_offset=16)], lineno=184, col_offset=12)], [], lineno=181, col_offset=8), Return(Name('filename', Load(), lineno=194, col_offset=15), lineno=194, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('ask_save_dialog', arguments([Name('self', Param(), lineno=196, col_offset=24)], None, None, []), [Assign([Name('msg', Store(), lineno=197, col_offset=8)], BinOp(BinOp(Str('Source Must Be Saved\n', lineno=197, col_offset=14), Add(), BinOp(Num(5, lineno=197, col_offset=41), Mult(), Str(' ', lineno=197, col_offset=43), lineno=197, col_offset=41), lineno=197, col_offset=14), Add(), Str('OK to Save?', lineno=197, col_offset=49), lineno=197, col_offset=47), lineno=197, col_offset=8), Assign([Name('mb', Store(), lineno=198, col_offset=8)], Call(Attribute(Name('tkMessageBox', Load(), lineno=198, col_offset=13), 'Message', Load(), lineno=198, col_offset=13), [], [keyword('title', Str('Save Before Run or Check', lineno=198, col_offset=40)), keyword('message', Name('msg', Load(), lineno=199, col_offset=42)), keyword('icon', Attribute(Name('tkMessageBox', Load(), lineno=200, col_offset=39), 'QUESTION', Load(), lineno=200, col_offset=39)), keyword('type', Attribute(Name('tkMessageBox', Load(), lineno=201, col_offset=39), 'OKCANCEL', Load(), lineno=201, col_offset=39)), keyword('default', Attribute(Name('tkMessageBox', Load(), lineno=202, col_offset=42), 'OK', Load(), lineno=202, col_offset=42)), keyword('master', Attribute(Attribute(Name('self', Load(), lineno=203, col_offset=41), 'editwin', Load(), lineno=203, col_offset=41), 'text', Load(), lineno=203, col_offset=41))], None, None, lineno=198, col_offset=13), lineno=198, col_offset=8), Return(Call(Attribute(Name('mb', Load(), lineno=204, col_offset=15), 'show', Load(), lineno=204, col_offset=15), [], [], None, None, lineno=204, col_offset=15), lineno=204, col_offset=8)], [], lineno=196, col_offset=4), FunctionDef('errorbox', arguments([Name('self', Param(), lineno=206, col_offset=17), Name('title', Param(), lineno=206, col_offset=23), Name('message', Param(), lineno=206, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('tkMessageBox', Load(), lineno=208, col_offset=8), 'showerror', Load(), lineno=208, col_offset=8), [Name('title', Load(), lineno=208, col_offset=31), Name('message', Load(), lineno=208, col_offset=38)], [keyword('master', Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=54), 'editwin', Load(), lineno=208, col_offset=54), 'text', Load(), lineno=208, col_offset=54))], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'editwin', Load(), lineno=209, col_offset=8), 'text', Load(), lineno=209, col_offset=8), 'focus_set', Load(), lineno=209, col_offset=8), [], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8)], [], lineno=206, col_offset=4)], [], lineno=42, col_offset=0)])
