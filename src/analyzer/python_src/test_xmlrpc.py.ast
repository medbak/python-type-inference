Module([Import([alias('base64', None)], lineno=1, col_offset=0), Import([alias('datetime', None)], lineno=2, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('time', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), Import([alias('xmlrpclib', None)], lineno=6, col_offset=0), Import([alias('SimpleXMLRPCServer', None)], lineno=7, col_offset=0), Import([alias('mimetools', None)], lineno=8, col_offset=0), Import([alias('httplib', None)], lineno=9, col_offset=0), Import([alias('socket', None)], lineno=10, col_offset=0), Import([alias('StringIO', None)], lineno=11, col_offset=0), Import([alias('os', None)], lineno=12, col_offset=0), Import([alias('re', None)], lineno=13, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=14, col_offset=0), TryExcept([Import([alias('threading', None)], lineno=17, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=18, col_offset=7), None, [Assign([Name('threading', Store(), lineno=19, col_offset=4)], Name('None', Load(), lineno=19, col_offset=16), lineno=19, col_offset=4)], lineno=18, col_offset=0)], [], lineno=16, col_offset=0), TryExcept([Expr(Name('unicode', Load(), lineno=22, col_offset=4), lineno=22, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=23, col_offset=7), None, [Assign([Name('have_unicode', Store(), lineno=24, col_offset=4)], Name('False', Load(), lineno=24, col_offset=19), lineno=24, col_offset=4)], lineno=23, col_offset=0)], [Assign([Name('have_unicode', Store(), lineno=26, col_offset=4)], Name('True', Load(), lineno=26, col_offset=19), lineno=26, col_offset=4)], lineno=21, col_offset=0), Assign([Name('alist', Store(), lineno=28, col_offset=0)], List([Dict([Str('astring', lineno=28, col_offset=10), Str('afloat', lineno=29, col_offset=10), Str('anint', lineno=30, col_offset=10), Str('ashortlong', lineno=31, col_offset=10), Str('anotherlist', lineno=32, col_offset=10), Str('abase64', lineno=33, col_offset=10), Str('boolean', lineno=34, col_offset=10), Str('unicode', lineno=35, col_offset=10), Str(u'ukey\u4000', lineno=36, col_offset=10), Str('datetime1', lineno=37, col_offset=10), Str('datetime2', lineno=38, col_offset=10), Str('datetime3', lineno=40, col_offset=10)], [Str('foo@bar.baz.spam', lineno=28, col_offset=21), Num(7283.43, lineno=29, col_offset=20), BinOp(Num(2, lineno=30, col_offset=19), Pow(), Num(20, lineno=30, col_offset=22), lineno=30, col_offset=19), Num(2L, lineno=31, col_offset=24), List([Str('.zyx.41', lineno=32, col_offset=26)], Load(), lineno=32, col_offset=25), Call(Attribute(Name('xmlrpclib', Load(), lineno=33, col_offset=21), 'Binary', Load(), lineno=33, col_offset=21), [Str('my dog has fleas', lineno=33, col_offset=38)], [], None, None, lineno=33, col_offset=21), Attribute(Name('xmlrpclib', Load(), lineno=34, col_offset=21), 'False', Load(), lineno=34, col_offset=21), Str(u'\u4000\u6000\u8000', lineno=35, col_offset=21), Str('regular value', lineno=36, col_offset=25), Call(Attribute(Name('xmlrpclib', Load(), lineno=37, col_offset=23), 'DateTime', Load(), lineno=37, col_offset=23), [Str('20050210T11:41:23', lineno=37, col_offset=42)], [], None, None, lineno=37, col_offset=23), Call(Attribute(Name('xmlrpclib', Load(), lineno=38, col_offset=23), 'DateTime', Load(), lineno=38, col_offset=23), [Tuple([Num(2005, lineno=39, col_offset=25), Num(2, lineno=39, col_offset=31), Num(10, lineno=39, col_offset=35), Num(11, lineno=39, col_offset=39), Num(41, lineno=39, col_offset=43), Num(23, lineno=39, col_offset=47), Num(0, lineno=39, col_offset=51), Num(1, lineno=39, col_offset=54), Num(-1, lineno=39, col_offset=58)], Load(), lineno=39, col_offset=25)], [], None, None, lineno=38, col_offset=23), Call(Attribute(Name('xmlrpclib', Load(), lineno=40, col_offset=23), 'DateTime', Load(), lineno=40, col_offset=23), [Call(Attribute(Name('datetime', Load(), lineno=41, col_offset=24), 'datetime', Load(), lineno=41, col_offset=24), [Num(2005, lineno=41, col_offset=42), Num(2, lineno=41, col_offset=48), Num(10, lineno=41, col_offset=52), Num(11, lineno=41, col_offset=56), Num(41, lineno=41, col_offset=60), Num(23, lineno=41, col_offset=64)], [], None, None, lineno=41, col_offset=24)], [], None, None, lineno=40, col_offset=23)], lineno=28, col_offset=9)], Load(), lineno=28, col_offset=8), lineno=28, col_offset=0), ClassDef('XMLRPCTestCase', [Attribute(Name('unittest', Load(), lineno=44, col_offset=21), 'TestCase', Load(), lineno=44, col_offset=21)], [FunctionDef('test_dump_load', arguments([Name('self', Param(), lineno=46, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'assertEqual', Load(), lineno=47, col_offset=8), [Name('alist', Load(), lineno=47, col_offset=25), Subscript(Subscript(Call(Attribute(Name('xmlrpclib', Load(), lineno=48, col_offset=25), 'loads', Load(), lineno=48, col_offset=25), [Call(Attribute(Name('xmlrpclib', Load(), lineno=48, col_offset=41), 'dumps', Load(), lineno=48, col_offset=41), [Tuple([Name('alist', Load(), lineno=48, col_offset=58)], Load(), lineno=48, col_offset=58)], [], None, None, lineno=48, col_offset=41)], [], None, None, lineno=48, col_offset=25), Index(Num(0, lineno=48, col_offset=68)), Load(), lineno=48, col_offset=25), Index(Num(0, lineno=48, col_offset=71)), Load(), lineno=48, col_offset=25)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('test_dump_bare_datetime', arguments([Name('self', Param(), lineno=50, col_offset=32)], None, None, []), [Assign([Name('dt', Store(), lineno=55, col_offset=8)], Call(Attribute(Name('datetime', Load(), lineno=55, col_offset=13), 'datetime', Load(), lineno=55, col_offset=13), [Num(2005, lineno=55, col_offset=31), Num(2, lineno=55, col_offset=37), Num(10, lineno=55, col_offset=41), Num(11, lineno=55, col_offset=45), Num(41, lineno=55, col_offset=49), Num(23, lineno=55, col_offset=53)], [], None, None, lineno=55, col_offset=13), lineno=55, col_offset=8), Assign([Name('s', Store(), lineno=56, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=56, col_offset=12), 'dumps', Load(), lineno=56, col_offset=12), [Tuple([Name('dt', Load(), lineno=56, col_offset=29)], Load(), lineno=56, col_offset=29)], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=8), Assign([Tuple([Tuple([Name('newdt', Store(), lineno=57, col_offset=9)], Store(), lineno=57, col_offset=9), Name('m', Store(), lineno=57, col_offset=18)], Store(), lineno=57, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=57, col_offset=22), 'loads', Load(), lineno=57, col_offset=22), [Name('s', Load(), lineno=57, col_offset=38)], [keyword('use_datetime', Num(1, lineno=57, col_offset=54))], None, None, lineno=57, col_offset=22), lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=8), 'assertEqual', Load(), lineno=58, col_offset=8), [Name('newdt', Load(), lineno=58, col_offset=25), Name('dt', Load(), lineno=58, col_offset=32)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertEqual', Load(), lineno=59, col_offset=8), [Name('m', Load(), lineno=59, col_offset=25), Name('None', Load(), lineno=59, col_offset=28)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Assign([Tuple([Tuple([Name('newdt', Store(), lineno=61, col_offset=9)], Store(), lineno=61, col_offset=9), Name('m', Store(), lineno=61, col_offset=18)], Store(), lineno=61, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=61, col_offset=22), 'loads', Load(), lineno=61, col_offset=22), [Name('s', Load(), lineno=61, col_offset=38)], [keyword('use_datetime', Num(0, lineno=61, col_offset=54))], None, None, lineno=61, col_offset=22), lineno=61, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertEqual', Load(), lineno=62, col_offset=8), [Name('newdt', Load(), lineno=62, col_offset=25), Call(Attribute(Name('xmlrpclib', Load(), lineno=62, col_offset=32), 'DateTime', Load(), lineno=62, col_offset=32), [Str('20050210T11:41:23', lineno=62, col_offset=51)], [], None, None, lineno=62, col_offset=32)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8)], [], lineno=50, col_offset=4), FunctionDef('test_datetime_before_1900', arguments([Name('self', Param(), lineno=64, col_offset=34)], None, None, []), [Assign([Name('dt', Store(), lineno=66, col_offset=8)], Call(Attribute(Name('datetime', Load(), lineno=66, col_offset=13), 'datetime', Load(), lineno=66, col_offset=13), [Num(1, lineno=66, col_offset=31), Num(2, lineno=66, col_offset=34), Num(10, lineno=66, col_offset=38), Num(11, lineno=66, col_offset=42), Num(41, lineno=66, col_offset=46), Num(23, lineno=66, col_offset=50)], [], None, None, lineno=66, col_offset=13), lineno=66, col_offset=8), Assign([Name('s', Store(), lineno=67, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=67, col_offset=12), 'dumps', Load(), lineno=67, col_offset=12), [Tuple([Name('dt', Load(), lineno=67, col_offset=29)], Load(), lineno=67, col_offset=29)], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=8), Assign([Tuple([Tuple([Name('newdt', Store(), lineno=68, col_offset=9)], Store(), lineno=68, col_offset=9), Name('m', Store(), lineno=68, col_offset=18)], Store(), lineno=68, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=68, col_offset=22), 'loads', Load(), lineno=68, col_offset=22), [Name('s', Load(), lineno=68, col_offset=38)], [keyword('use_datetime', Num(1, lineno=68, col_offset=54))], None, None, lineno=68, col_offset=22), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Name('newdt', Load(), lineno=69, col_offset=25), Name('dt', Load(), lineno=69, col_offset=32)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertEqual', Load(), lineno=70, col_offset=8), [Name('m', Load(), lineno=70, col_offset=25), Name('None', Load(), lineno=70, col_offset=28)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Tuple([Tuple([Name('newdt', Store(), lineno=72, col_offset=9)], Store(), lineno=72, col_offset=9), Name('m', Store(), lineno=72, col_offset=18)], Store(), lineno=72, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=72, col_offset=22), 'loads', Load(), lineno=72, col_offset=22), [Name('s', Load(), lineno=72, col_offset=38)], [keyword('use_datetime', Num(0, lineno=72, col_offset=54))], None, None, lineno=72, col_offset=22), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertEqual', Load(), lineno=73, col_offset=8), [Name('newdt', Load(), lineno=73, col_offset=25), Call(Attribute(Name('xmlrpclib', Load(), lineno=73, col_offset=32), 'DateTime', Load(), lineno=73, col_offset=32), [Str('00010210T11:41:23', lineno=73, col_offset=51)], [], None, None, lineno=73, col_offset=32)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('test_cmp_datetime_DateTime', arguments([Name('self', Param(), lineno=75, col_offset=35)], None, None, []), [Assign([Name('now', Store(), lineno=76, col_offset=8)], Call(Attribute(Attribute(Name('datetime', Load(), lineno=76, col_offset=14), 'datetime', Load(), lineno=76, col_offset=14), 'now', Load(), lineno=76, col_offset=14), [], [], None, None, lineno=76, col_offset=14), lineno=76, col_offset=8), Assign([Name('dt', Store(), lineno=77, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=77, col_offset=13), 'DateTime', Load(), lineno=77, col_offset=13), [Call(Attribute(Name('now', Load(), lineno=77, col_offset=32), 'timetuple', Load(), lineno=77, col_offset=32), [], [], None, None, lineno=77, col_offset=32)], [], None, None, lineno=77, col_offset=13), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertTrue', Load(), lineno=78, col_offset=8), [Compare(Name('dt', Load(), lineno=78, col_offset=24), [Eq()], [Name('now', Load(), lineno=78, col_offset=30)], lineno=78, col_offset=24)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertTrue', Load(), lineno=79, col_offset=8), [Compare(Name('now', Load(), lineno=79, col_offset=24), [Eq()], [Name('dt', Load(), lineno=79, col_offset=31)], lineno=79, col_offset=24)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Assign([Name('then', Store(), lineno=80, col_offset=8)], BinOp(Name('now', Load(), lineno=80, col_offset=15), Add(), Call(Attribute(Name('datetime', Load(), lineno=80, col_offset=21), 'timedelta', Load(), lineno=80, col_offset=21), [], [keyword('seconds', Num(4, lineno=80, col_offset=48))], None, None, lineno=80, col_offset=21), lineno=80, col_offset=15), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertTrue', Load(), lineno=81, col_offset=8), [Compare(Name('then', Load(), lineno=81, col_offset=24), [GtE()], [Name('dt', Load(), lineno=81, col_offset=32)], lineno=81, col_offset=24)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertTrue', Load(), lineno=82, col_offset=8), [Compare(Name('dt', Load(), lineno=82, col_offset=24), [Lt()], [Name('then', Load(), lineno=82, col_offset=29)], lineno=82, col_offset=24)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('test_bug_1164912', arguments([Name('self', Param(), lineno=84, col_offset=26)], None, None, []), [Assign([Name('d', Store(), lineno=85, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=85, col_offset=12), 'DateTime', Load(), lineno=85, col_offset=12), [], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=8), Assign([Tuple([Tuple([Name('new_d', Store(), lineno=86, col_offset=10)], Store(), lineno=86, col_offset=10), Name('dummy', Store(), lineno=86, col_offset=19)], Store(), lineno=86, col_offset=9)], Call(Attribute(Name('xmlrpclib', Load(), lineno=86, col_offset=28), 'loads', Load(), lineno=86, col_offset=28), [Call(Attribute(Name('xmlrpclib', Load(), lineno=86, col_offset=44), 'dumps', Load(), lineno=86, col_offset=44), [Tuple([Name('d', Load(), lineno=86, col_offset=61)], Load(), lineno=86, col_offset=61)], [keyword('methodresponse', Name('True', Load(), lineno=87, col_offset=59))], None, None, lineno=86, col_offset=44)], [], None, None, lineno=86, col_offset=28), lineno=86, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertIsInstance', Load(), lineno=88, col_offset=8), [Attribute(Name('new_d', Load(), lineno=88, col_offset=30), 'value', Load(), lineno=88, col_offset=30), Name('str', Load(), lineno=88, col_offset=43)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Assign([Name('s', Store(), lineno=91, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=91, col_offset=12), 'dumps', Load(), lineno=91, col_offset=12), [Tuple([Name('new_d', Load(), lineno=91, col_offset=29)], Load(), lineno=91, col_offset=29)], [keyword('methodresponse', Name('True', Load(), lineno=91, col_offset=53))], None, None, lineno=91, col_offset=12), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertIsInstance', Load(), lineno=92, col_offset=8), [Name('s', Load(), lineno=92, col_offset=30), Name('str', Load(), lineno=92, col_offset=33)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('test_newstyle_class', arguments([Name('self', Param(), lineno=94, col_offset=28)], None, None, []), [ClassDef('T', [Name('object', Load(), lineno=95, col_offset=16)], [Pass( lineno=96, col_offset=12)], [], lineno=95, col_offset=8), Assign([Name('t', Store(), lineno=97, col_offset=8)], Call(Name('T', Load(), lineno=97, col_offset=12), [], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=98, col_offset=8), 'x', Store(), lineno=98, col_offset=8)], Num(100, lineno=98, col_offset=14), lineno=98, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=99, col_offset=8), 'y', Store(), lineno=99, col_offset=8)], Str('Hello', lineno=99, col_offset=14), lineno=99, col_offset=8), Assign([Tuple([Tuple([Name('t2', Store(), lineno=100, col_offset=10)], Store(), lineno=100, col_offset=10), Name('dummy', Store(), lineno=100, col_offset=16)], Store(), lineno=100, col_offset=9)], Call(Attribute(Name('xmlrpclib', Load(), lineno=100, col_offset=25), 'loads', Load(), lineno=100, col_offset=25), [Call(Attribute(Name('xmlrpclib', Load(), lineno=100, col_offset=41), 'dumps', Load(), lineno=100, col_offset=41), [Tuple([Name('t', Load(), lineno=100, col_offset=58)], Load(), lineno=100, col_offset=58)], [], None, None, lineno=100, col_offset=41)], [], None, None, lineno=100, col_offset=25), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertEqual', Load(), lineno=101, col_offset=8), [Name('t2', Load(), lineno=101, col_offset=25), Attribute(Name('t', Load(), lineno=101, col_offset=29), '__dict__', Load(), lineno=101, col_offset=29)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('test_dump_big_long', arguments([Name('self', Param(), lineno=103, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertRaises', Load(), lineno=104, col_offset=8), [Name('OverflowError', Load(), lineno=104, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=104, col_offset=41), 'dumps', Load(), lineno=104, col_offset=41), Tuple([BinOp(Num(2L, lineno=104, col_offset=59), Pow(), Num(99, lineno=104, col_offset=63), lineno=104, col_offset=59)], Load(), lineno=104, col_offset=59)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('test_dump_bad_dict', arguments([Name('self', Param(), lineno=106, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertRaises', Load(), lineno=107, col_offset=8), [Name('TypeError', Load(), lineno=107, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=107, col_offset=37), 'dumps', Load(), lineno=107, col_offset=37), Tuple([Dict([Tuple([Num(1, lineno=107, col_offset=57), Num(2, lineno=107, col_offset=59), Num(3, lineno=107, col_offset=61)], Load(), lineno=107, col_offset=57)], [Num(1, lineno=107, col_offset=65)], lineno=107, col_offset=55)], Load(), lineno=107, col_offset=55)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('test_dump_recursive_seq', arguments([Name('self', Param(), lineno=109, col_offset=32)], None, None, []), [Assign([Name('l', Store(), lineno=110, col_offset=8)], List([Num(1, lineno=110, col_offset=13), Num(2, lineno=110, col_offset=15), Num(3, lineno=110, col_offset=17)], Load(), lineno=110, col_offset=12), lineno=110, col_offset=8), Assign([Name('t', Store(), lineno=111, col_offset=8)], List([Num(3, lineno=111, col_offset=13), Num(4, lineno=111, col_offset=15), Num(5, lineno=111, col_offset=17), Name('l', Load(), lineno=111, col_offset=19)], Load(), lineno=111, col_offset=12), lineno=111, col_offset=8), Expr(Call(Attribute(Name('l', Load(), lineno=112, col_offset=8), 'append', Load(), lineno=112, col_offset=8), [Name('t', Load(), lineno=112, col_offset=17)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertRaises', Load(), lineno=113, col_offset=8), [Name('TypeError', Load(), lineno=113, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=113, col_offset=37), 'dumps', Load(), lineno=113, col_offset=37), Tuple([Name('l', Load(), lineno=113, col_offset=55)], Load(), lineno=113, col_offset=55)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8)], [], lineno=109, col_offset=4), FunctionDef('test_dump_recursive_dict', arguments([Name('self', Param(), lineno=115, col_offset=33)], None, None, []), [Assign([Name('d', Store(), lineno=116, col_offset=8)], Dict([Str('1', lineno=116, col_offset=13), Str('2', lineno=116, col_offset=20)], [Num(1, lineno=116, col_offset=17), Num(1, lineno=116, col_offset=24)], lineno=116, col_offset=12), lineno=116, col_offset=8), Assign([Name('t', Store(), lineno=117, col_offset=8)], Dict([Str('3', lineno=117, col_offset=13), Str('d', lineno=117, col_offset=20)], [Num(3, lineno=117, col_offset=17), Name('d', Load(), lineno=117, col_offset=24)], lineno=117, col_offset=12), lineno=117, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=118, col_offset=8), Index(Str('t', lineno=118, col_offset=10)), Store(), lineno=118, col_offset=8)], Name('t', Load(), lineno=118, col_offset=17), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'assertRaises', Load(), lineno=119, col_offset=8), [Name('TypeError', Load(), lineno=119, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=119, col_offset=37), 'dumps', Load(), lineno=119, col_offset=37), Tuple([Name('d', Load(), lineno=119, col_offset=55)], Load(), lineno=119, col_offset=55)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('test_dump_big_int', arguments([Name('self', Param(), lineno=121, col_offset=26)], None, None, []), [If(Compare(Attribute(Name('sys', Load(), lineno=122, col_offset=11), 'maxint', Load(), lineno=122, col_offset=11), [Gt()], [BinOp(BinOp(Num(2L, lineno=122, col_offset=24), Pow(), Num(31, lineno=122, col_offset=28), lineno=122, col_offset=24), Sub(), Num(1, lineno=122, col_offset=31), lineno=122, col_offset=24)], lineno=122, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=12), 'assertRaises', Load(), lineno=123, col_offset=12), [Name('OverflowError', Load(), lineno=123, col_offset=30), Attribute(Name('xmlrpclib', Load(), lineno=123, col_offset=45), 'dumps', Load(), lineno=123, col_offset=45), Tuple([Call(Name('int', Load(), lineno=124, col_offset=31), [BinOp(Num(2L, lineno=124, col_offset=35), Pow(), Num(34, lineno=124, col_offset=39), lineno=124, col_offset=35)], [], None, None, lineno=124, col_offset=31)], Load(), lineno=124, col_offset=31)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=12)], [], lineno=122, col_offset=8), Expr(Call(Attribute(Name('xmlrpclib', Load(), lineno=126, col_offset=8), 'dumps', Load(), lineno=126, col_offset=8), [Tuple([Attribute(Name('xmlrpclib', Load(), lineno=126, col_offset=25), 'MAXINT', Load(), lineno=126, col_offset=25), Attribute(Name('xmlrpclib', Load(), lineno=126, col_offset=43), 'MININT', Load(), lineno=126, col_offset=43)], Load(), lineno=126, col_offset=25)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=8), 'assertRaises', Load(), lineno=127, col_offset=8), [Name('OverflowError', Load(), lineno=127, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=127, col_offset=41), 'dumps', Load(), lineno=127, col_offset=41), Tuple([BinOp(Attribute(Name('xmlrpclib', Load(), lineno=127, col_offset=59), 'MAXINT', Load(), lineno=127, col_offset=59), Add(), Num(1, lineno=127, col_offset=76), lineno=127, col_offset=59)], Load(), lineno=127, col_offset=59)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'assertRaises', Load(), lineno=128, col_offset=8), [Name('OverflowError', Load(), lineno=128, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=128, col_offset=41), 'dumps', Load(), lineno=128, col_offset=41), Tuple([BinOp(Attribute(Name('xmlrpclib', Load(), lineno=128, col_offset=59), 'MININT', Load(), lineno=128, col_offset=59), Sub(), Num(1, lineno=128, col_offset=76), lineno=128, col_offset=59)], Load(), lineno=128, col_offset=59)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), FunctionDef('dummy_write', arguments([Name('s', Param(), lineno=130, col_offset=24)], None, None, []), [Pass( lineno=131, col_offset=12)], [], lineno=130, col_offset=8), Assign([Name('m', Store(), lineno=133, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=133, col_offset=12), 'Marshaller', Load(), lineno=133, col_offset=12), [], [], None, None, lineno=133, col_offset=12), lineno=133, col_offset=8), Expr(Call(Attribute(Name('m', Load(), lineno=134, col_offset=8), 'dump_int', Load(), lineno=134, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=134, col_offset=19), 'MAXINT', Load(), lineno=134, col_offset=19), Name('dummy_write', Load(), lineno=134, col_offset=37)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), Expr(Call(Attribute(Name('m', Load(), lineno=135, col_offset=8), 'dump_int', Load(), lineno=135, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=135, col_offset=19), 'MININT', Load(), lineno=135, col_offset=19), Name('dummy_write', Load(), lineno=135, col_offset=37)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertRaises', Load(), lineno=136, col_offset=8), [Name('OverflowError', Load(), lineno=136, col_offset=26), Attribute(Name('m', Load(), lineno=136, col_offset=41), 'dump_int', Load(), lineno=136, col_offset=41), BinOp(Attribute(Name('xmlrpclib', Load(), lineno=136, col_offset=53), 'MAXINT', Load(), lineno=136, col_offset=53), Add(), Num(1, lineno=136, col_offset=70), lineno=136, col_offset=53), Name('dummy_write', Load(), lineno=136, col_offset=73)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertRaises', Load(), lineno=137, col_offset=8), [Name('OverflowError', Load(), lineno=137, col_offset=26), Attribute(Name('m', Load(), lineno=137, col_offset=41), 'dump_int', Load(), lineno=137, col_offset=41), BinOp(Attribute(Name('xmlrpclib', Load(), lineno=137, col_offset=53), 'MININT', Load(), lineno=137, col_offset=53), Sub(), Num(1, lineno=137, col_offset=70), lineno=137, col_offset=53), Name('dummy_write', Load(), lineno=137, col_offset=73)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('test_dump_none', arguments([Name('self', Param(), lineno=140, col_offset=23)], None, None, []), [Assign([Name('value', Store(), lineno=141, col_offset=8)], BinOp(Name('alist', Load(), lineno=141, col_offset=16), Add(), List([Name('None', Load(), lineno=141, col_offset=25)], Load(), lineno=141, col_offset=24), lineno=141, col_offset=16), lineno=141, col_offset=8), Assign([Name('arg1', Store(), lineno=142, col_offset=8)], Tuple([BinOp(Name('alist', Load(), lineno=142, col_offset=16), Add(), List([Name('None', Load(), lineno=142, col_offset=25)], Load(), lineno=142, col_offset=24), lineno=142, col_offset=16)], Load(), lineno=142, col_offset=16), lineno=142, col_offset=8), Assign([Name('strg', Store(), lineno=143, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=143, col_offset=15), 'dumps', Load(), lineno=143, col_offset=15), [Name('arg1', Load(), lineno=143, col_offset=31)], [keyword('allow_none', Name('True', Load(), lineno=143, col_offset=48))], None, None, lineno=143, col_offset=15), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertEqual', Load(), lineno=144, col_offset=8), [Name('value', Load(), lineno=144, col_offset=25), Subscript(Subscript(Call(Attribute(Name('xmlrpclib', Load(), lineno=145, col_offset=25), 'loads', Load(), lineno=145, col_offset=25), [Name('strg', Load(), lineno=145, col_offset=41)], [], None, None, lineno=145, col_offset=25), Index(Num(0, lineno=145, col_offset=47)), Load(), lineno=145, col_offset=25), Index(Num(0, lineno=145, col_offset=50)), Load(), lineno=145, col_offset=25)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'assertRaises', Load(), lineno=146, col_offset=8), [Name('TypeError', Load(), lineno=146, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=146, col_offset=37), 'dumps', Load(), lineno=146, col_offset=37), Tuple([Name('arg1', Load(), lineno=146, col_offset=55)], Load(), lineno=146, col_offset=55)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('test_default_encoding_issues', arguments([Name('self', Param(), lineno=148, col_offset=37)], None, None, []), [Assign([Name('utf8', Store(), lineno=150, col_offset=8)], Str("<?xml version='1.0' encoding='iso-8859-1'?>\n                  <params>\n                    <param><value>\n                      <string>abc \x95</string>\n                      </value></param>\n                    <param><value>\n                      <struct>\n                        <member>\n                          <name>def \x96</name>\n                          <value><string>ghi \x97</string></value>\n                          </member>\n                        </struct>\n                      </value></param>\n                  </params>\n                  ", lineno=164, col_offset=-1), lineno=150, col_offset=8), Assign([Name('old_encoding', Store(), lineno=170, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=170, col_offset=23), 'getdefaultencoding', Load(), lineno=170, col_offset=23), [], [], None, None, lineno=170, col_offset=23), lineno=170, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=171, col_offset=13), 'CleanImport', Load(), lineno=171, col_offset=13), [Str('sys', lineno=171, col_offset=38)], [], None, None, lineno=171, col_offset=13), None, [Import([alias('sys', 'temp_sys')], lineno=172, col_offset=12), Expr(Call(Attribute(Name('temp_sys', Load(), lineno=173, col_offset=12), 'setdefaultencoding', Load(), lineno=173, col_offset=12), [Str('iso-8859-1', lineno=173, col_offset=40)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=12), TryFinally([Assign([Tuple([Tuple([Name('s', Store(), lineno=175, col_offset=17), Name('d', Store(), lineno=175, col_offset=20)], Store(), lineno=175, col_offset=17), Name('m', Store(), lineno=175, col_offset=24)], Store(), lineno=175, col_offset=16)], Call(Attribute(Name('xmlrpclib', Load(), lineno=175, col_offset=28), 'loads', Load(), lineno=175, col_offset=28), [Name('utf8', Load(), lineno=175, col_offset=44)], [], None, None, lineno=175, col_offset=28), lineno=175, col_offset=16)], [Expr(Call(Attribute(Name('temp_sys', Load(), lineno=177, col_offset=16), 'setdefaultencoding', Load(), lineno=177, col_offset=16), [Name('old_encoding', Load(), lineno=177, col_offset=44)], [], None, None, lineno=177, col_offset=16), lineno=177, col_offset=16)], lineno=174, col_offset=12)], lineno=171, col_offset=13), Assign([Name('items', Store(), lineno=179, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=179, col_offset=16), 'items', Load(), lineno=179, col_offset=16), [], [], None, None, lineno=179, col_offset=16), lineno=179, col_offset=8), If(Name('have_unicode', Load(), lineno=180, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'assertEqual', Load(), lineno=181, col_offset=12), [Name('s', Load(), lineno=181, col_offset=29), Str(u'abc \x95', lineno=181, col_offset=32)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=12), 'assertIsInstance', Load(), lineno=182, col_offset=12), [Name('s', Load(), lineno=182, col_offset=34), Name('unicode', Load(), lineno=182, col_offset=37)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'assertEqual', Load(), lineno=183, col_offset=12), [Name('items', Load(), lineno=183, col_offset=29), List([Tuple([Str(u'def \x96', lineno=183, col_offset=38), Str(u'ghi \x97', lineno=183, col_offset=51)], Load(), lineno=183, col_offset=38)], Load(), lineno=183, col_offset=36)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=12), 'assertIsInstance', Load(), lineno=184, col_offset=12), [Subscript(Subscript(Name('items', Load(), lineno=184, col_offset=34), Index(Num(0, lineno=184, col_offset=40)), Load(), lineno=184, col_offset=34), Index(Num(0, lineno=184, col_offset=43)), Load(), lineno=184, col_offset=34), Name('unicode', Load(), lineno=184, col_offset=47)], [], None, None, lineno=184, col_offset=12), lineno=184, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=12), 'assertIsInstance', Load(), lineno=185, col_offset=12), [Subscript(Subscript(Name('items', Load(), lineno=185, col_offset=34), Index(Num(0, lineno=185, col_offset=40)), Load(), lineno=185, col_offset=34), Index(Num(1, lineno=185, col_offset=43)), Load(), lineno=185, col_offset=34), Name('unicode', Load(), lineno=185, col_offset=47)], [], None, None, lineno=185, col_offset=12), lineno=185, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'assertEqual', Load(), lineno=187, col_offset=12), [Name('s', Load(), lineno=187, col_offset=29), Str('abc \xc2\x95', lineno=187, col_offset=32)], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), 'assertEqual', Load(), lineno=188, col_offset=12), [Name('items', Load(), lineno=188, col_offset=29), List([Tuple([Str('def \xc2\x96', lineno=188, col_offset=38), Str('ghi \xc2\x97', lineno=188, col_offset=54)], Load(), lineno=188, col_offset=38)], Load(), lineno=188, col_offset=36)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], lineno=180, col_offset=8)], [], lineno=148, col_offset=4)], [], lineno=44, col_offset=0), ClassDef('HelperTestCase', [Attribute(Name('unittest', Load(), lineno=191, col_offset=21), 'TestCase', Load(), lineno=191, col_offset=21)], [FunctionDef('test_escape', arguments([Name('self', Param(), lineno=192, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertEqual', Load(), lineno=193, col_offset=8), [Call(Attribute(Name('xmlrpclib', Load(), lineno=193, col_offset=25), 'escape', Load(), lineno=193, col_offset=25), [Str('a&b', lineno=193, col_offset=42)], [], None, None, lineno=193, col_offset=25), Str('a&amp;b', lineno=193, col_offset=50)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertEqual', Load(), lineno=194, col_offset=8), [Call(Attribute(Name('xmlrpclib', Load(), lineno=194, col_offset=25), 'escape', Load(), lineno=194, col_offset=25), [Str('a<b', lineno=194, col_offset=42)], [], None, None, lineno=194, col_offset=25), Str('a&lt;b', lineno=194, col_offset=50)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), 'assertEqual', Load(), lineno=195, col_offset=8), [Call(Attribute(Name('xmlrpclib', Load(), lineno=195, col_offset=25), 'escape', Load(), lineno=195, col_offset=25), [Str('a>b', lineno=195, col_offset=42)], [], None, None, lineno=195, col_offset=25), Str('a&gt;b', lineno=195, col_offset=50)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=192, col_offset=4)], [], lineno=191, col_offset=0), ClassDef('FaultTestCase', [Attribute(Name('unittest', Load(), lineno=197, col_offset=20), 'TestCase', Load(), lineno=197, col_offset=20)], [FunctionDef('test_repr', arguments([Name('self', Param(), lineno=198, col_offset=18)], None, None, []), [Assign([Name('f', Store(), lineno=199, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=199, col_offset=12), 'Fault', Load(), lineno=199, col_offset=12), [Num(42, lineno=199, col_offset=28), Str('Test Fault', lineno=199, col_offset=32)], [], None, None, lineno=199, col_offset=12), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'assertEqual', Load(), lineno=200, col_offset=8), [Call(Name('repr', Load(), lineno=200, col_offset=25), [Name('f', Load(), lineno=200, col_offset=30)], [], None, None, lineno=200, col_offset=25), Str("<Fault 42: 'Test Fault'>", lineno=200, col_offset=34)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'assertEqual', Load(), lineno=201, col_offset=8), [Call(Name('repr', Load(), lineno=201, col_offset=25), [Name('f', Load(), lineno=201, col_offset=30)], [], None, None, lineno=201, col_offset=25), Call(Name('str', Load(), lineno=201, col_offset=34), [Name('f', Load(), lineno=201, col_offset=38)], [], None, None, lineno=201, col_offset=34)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8)], [], lineno=198, col_offset=4), FunctionDef('test_dump_fault', arguments([Name('self', Param(), lineno=203, col_offset=24)], None, None, []), [Assign([Name('f', Store(), lineno=204, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=204, col_offset=12), 'Fault', Load(), lineno=204, col_offset=12), [Num(42, lineno=204, col_offset=28), Str('Test Fault', lineno=204, col_offset=32)], [], None, None, lineno=204, col_offset=12), lineno=204, col_offset=8), Assign([Name('s', Store(), lineno=205, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=205, col_offset=12), 'dumps', Load(), lineno=205, col_offset=12), [Tuple([Name('f', Load(), lineno=205, col_offset=29)], Load(), lineno=205, col_offset=29)], [], None, None, lineno=205, col_offset=12), lineno=205, col_offset=8), Assign([Tuple([Tuple([Name('newf', Store(), lineno=206, col_offset=9)], Store(), lineno=206, col_offset=9), Name('m', Store(), lineno=206, col_offset=17)], Store(), lineno=206, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=206, col_offset=21), 'loads', Load(), lineno=206, col_offset=21), [Name('s', Load(), lineno=206, col_offset=37)], [], None, None, lineno=206, col_offset=21), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Name('newf', Load(), lineno=207, col_offset=25), Dict([Str('faultCode', lineno=207, col_offset=32), Str('faultString', lineno=207, col_offset=49)], [Num(42, lineno=207, col_offset=45), Str('Test Fault', lineno=207, col_offset=64)], lineno=207, col_offset=31)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'assertEqual', Load(), lineno=208, col_offset=8), [Name('m', Load(), lineno=208, col_offset=25), Name('None', Load(), lineno=208, col_offset=28)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Assign([Name('s', Store(), lineno=210, col_offset=8)], Call(Attribute(Call(Attribute(Name('xmlrpclib', Load(), lineno=210, col_offset=12), 'Marshaller', Load(), lineno=210, col_offset=12), [], [], None, None, lineno=210, col_offset=12), 'dumps', Load(), lineno=210, col_offset=12), [Name('f', Load(), lineno=210, col_offset=41)], [], None, None, lineno=210, col_offset=12), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertRaises', Load(), lineno=211, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=211, col_offset=26), 'Fault', Load(), lineno=211, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=211, col_offset=43), 'loads', Load(), lineno=211, col_offset=43), Name('s', Load(), lineno=211, col_offset=60)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=203, col_offset=4)], [], lineno=197, col_offset=0), ClassDef('DateTimeTestCase', [Attribute(Name('unittest', Load(), lineno=214, col_offset=23), 'TestCase', Load(), lineno=214, col_offset=23)], [FunctionDef('test_default', arguments([Name('self', Param(), lineno=215, col_offset=21)], None, None, []), [Assign([Name('t', Store(), lineno=216, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=216, col_offset=12), 'DateTime', Load(), lineno=216, col_offset=12), [], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=8)], [], lineno=215, col_offset=4), FunctionDef('test_time', arguments([Name('self', Param(), lineno=218, col_offset=18)], None, None, []), [Assign([Name('d', Store(), lineno=219, col_offset=8)], Num(1181399930.036952, lineno=219, col_offset=12), lineno=219, col_offset=8), Assign([Name('t', Store(), lineno=220, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=220, col_offset=12), 'DateTime', Load(), lineno=220, col_offset=12), [Name('d', Load(), lineno=220, col_offset=31)], [], None, None, lineno=220, col_offset=12), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertEqual', Load(), lineno=221, col_offset=8), [Call(Name('str', Load(), lineno=221, col_offset=25), [Name('t', Load(), lineno=221, col_offset=29)], [], None, None, lineno=221, col_offset=25), Call(Attribute(Name('time', Load(), lineno=221, col_offset=33), 'strftime', Load(), lineno=221, col_offset=33), [Str('%Y%m%dT%H:%M:%S', lineno=221, col_offset=47), Call(Attribute(Name('time', Load(), lineno=221, col_offset=66), 'localtime', Load(), lineno=221, col_offset=66), [Name('d', Load(), lineno=221, col_offset=81)], [], None, None, lineno=221, col_offset=66)], [], None, None, lineno=221, col_offset=33)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('test_time_tuple', arguments([Name('self', Param(), lineno=223, col_offset=24)], None, None, []), [Assign([Name('d', Store(), lineno=224, col_offset=8)], Tuple([Num(2007, lineno=224, col_offset=13), Num(6, lineno=224, col_offset=18), Num(9, lineno=224, col_offset=20), Num(10, lineno=224, col_offset=22), Num(38, lineno=224, col_offset=25), Num(50, lineno=224, col_offset=28), Num(5, lineno=224, col_offset=31), Num(160, lineno=224, col_offset=33), Num(0, lineno=224, col_offset=37)], Load(), lineno=224, col_offset=13), lineno=224, col_offset=8), Assign([Name('t', Store(), lineno=225, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=225, col_offset=12), 'DateTime', Load(), lineno=225, col_offset=12), [Name('d', Load(), lineno=225, col_offset=31)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertEqual', Load(), lineno=226, col_offset=8), [Call(Name('str', Load(), lineno=226, col_offset=25), [Name('t', Load(), lineno=226, col_offset=29)], [], None, None, lineno=226, col_offset=25), Str('20070609T10:38:50', lineno=226, col_offset=33)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('test_time_struct', arguments([Name('self', Param(), lineno=228, col_offset=25)], None, None, []), [Assign([Name('d', Store(), lineno=229, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=229, col_offset=12), 'localtime', Load(), lineno=229, col_offset=12), [Num(1181399930.036952, lineno=229, col_offset=27)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=8), Assign([Name('t', Store(), lineno=230, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=230, col_offset=12), 'DateTime', Load(), lineno=230, col_offset=12), [Name('d', Load(), lineno=230, col_offset=31)], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertEqual', Load(), lineno=231, col_offset=8), [Call(Name('str', Load(), lineno=231, col_offset=25), [Name('t', Load(), lineno=231, col_offset=29)], [], None, None, lineno=231, col_offset=25), Call(Attribute(Name('time', Load(), lineno=231, col_offset=34), 'strftime', Load(), lineno=231, col_offset=34), [Str('%Y%m%dT%H:%M:%S', lineno=231, col_offset=48), Name('d', Load(), lineno=231, col_offset=67)], [], None, None, lineno=231, col_offset=34)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('test_datetime_datetime', arguments([Name('self', Param(), lineno=233, col_offset=31)], None, None, []), [Assign([Name('d', Store(), lineno=234, col_offset=8)], Call(Attribute(Name('datetime', Load(), lineno=234, col_offset=12), 'datetime', Load(), lineno=234, col_offset=12), [Num(2007, lineno=234, col_offset=30), Num(1, lineno=234, col_offset=35), Num(2, lineno=234, col_offset=37), Num(3, lineno=234, col_offset=39), Num(4, lineno=234, col_offset=41), Num(5, lineno=234, col_offset=43)], [], None, None, lineno=234, col_offset=12), lineno=234, col_offset=8), Assign([Name('t', Store(), lineno=235, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=235, col_offset=12), 'DateTime', Load(), lineno=235, col_offset=12), [Name('d', Load(), lineno=235, col_offset=31)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertEqual', Load(), lineno=236, col_offset=8), [Call(Name('str', Load(), lineno=236, col_offset=25), [Name('t', Load(), lineno=236, col_offset=29)], [], None, None, lineno=236, col_offset=25), Str('20070102T03:04:05', lineno=236, col_offset=33)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8)], [], lineno=233, col_offset=4), FunctionDef('test_repr', arguments([Name('self', Param(), lineno=238, col_offset=18)], None, None, []), [Assign([Name('d', Store(), lineno=239, col_offset=8)], Call(Attribute(Name('datetime', Load(), lineno=239, col_offset=12), 'datetime', Load(), lineno=239, col_offset=12), [Num(2007, lineno=239, col_offset=30), Num(1, lineno=239, col_offset=35), Num(2, lineno=239, col_offset=37), Num(3, lineno=239, col_offset=39), Num(4, lineno=239, col_offset=41), Num(5, lineno=239, col_offset=43)], [], None, None, lineno=239, col_offset=12), lineno=239, col_offset=8), Assign([Name('t', Store(), lineno=240, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=240, col_offset=12), 'DateTime', Load(), lineno=240, col_offset=12), [Name('d', Load(), lineno=240, col_offset=31)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=8), Assign([Name('val', Store(), lineno=241, col_offset=8)], BinOp(Str("<DateTime '20070102T03:04:05' at %x>", lineno=241, col_offset=13), Mod(), Call(Name('id', Load(), lineno=241, col_offset=54), [Name('t', Load(), lineno=241, col_offset=57)], [], None, None, lineno=241, col_offset=54), lineno=241, col_offset=13), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'assertEqual', Load(), lineno=242, col_offset=8), [Call(Name('repr', Load(), lineno=242, col_offset=25), [Name('t', Load(), lineno=242, col_offset=30)], [], None, None, lineno=242, col_offset=25), Name('val', Load(), lineno=242, col_offset=34)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8)], [], lineno=238, col_offset=4), FunctionDef('test_decode', arguments([Name('self', Param(), lineno=244, col_offset=20)], None, None, []), [Assign([Name('d', Store(), lineno=245, col_offset=8)], Str(' 20070908T07:11:13  ', lineno=245, col_offset=12), lineno=245, col_offset=8), Assign([Name('t1', Store(), lineno=246, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=246, col_offset=13), 'DateTime', Load(), lineno=246, col_offset=13), [], [], None, None, lineno=246, col_offset=13), lineno=246, col_offset=8), Expr(Call(Attribute(Name('t1', Load(), lineno=247, col_offset=8), 'decode', Load(), lineno=247, col_offset=8), [Name('d', Load(), lineno=247, col_offset=18)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8), Assign([Name('tref', Store(), lineno=248, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=248, col_offset=15), 'DateTime', Load(), lineno=248, col_offset=15), [Call(Attribute(Name('datetime', Load(), lineno=248, col_offset=34), 'datetime', Load(), lineno=248, col_offset=34), [Num(2007, lineno=248, col_offset=52), Num(9, lineno=248, col_offset=57), Num(8, lineno=248, col_offset=59), Num(7, lineno=248, col_offset=61), Num(11, lineno=248, col_offset=63), Num(13, lineno=248, col_offset=66)], [], None, None, lineno=248, col_offset=34)], [], None, None, lineno=248, col_offset=15), lineno=248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertEqual', Load(), lineno=249, col_offset=8), [Name('t1', Load(), lineno=249, col_offset=25), Name('tref', Load(), lineno=249, col_offset=29)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8), Assign([Name('t2', Store(), lineno=251, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=251, col_offset=13), '_datetime', Load(), lineno=251, col_offset=13), [Name('d', Load(), lineno=251, col_offset=33)], [], None, None, lineno=251, col_offset=13), lineno=251, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertEqual', Load(), lineno=252, col_offset=8), [Name('t1', Load(), lineno=252, col_offset=25), Name('tref', Load(), lineno=252, col_offset=29)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8)], [], lineno=244, col_offset=4)], [], lineno=214, col_offset=0), ClassDef('BinaryTestCase', [Attribute(Name('unittest', Load(), lineno=254, col_offset=21), 'TestCase', Load(), lineno=254, col_offset=21)], [FunctionDef('test_default', arguments([Name('self', Param(), lineno=255, col_offset=21)], None, None, []), [Assign([Name('t', Store(), lineno=256, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=256, col_offset=12), 'Binary', Load(), lineno=256, col_offset=12), [], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertEqual', Load(), lineno=257, col_offset=8), [Call(Name('str', Load(), lineno=257, col_offset=25), [Name('t', Load(), lineno=257, col_offset=29)], [], None, None, lineno=257, col_offset=25), Str('', lineno=257, col_offset=33)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8)], [], lineno=255, col_offset=4), FunctionDef('test_string', arguments([Name('self', Param(), lineno=259, col_offset=20)], None, None, []), [Assign([Name('d', Store(), lineno=260, col_offset=8)], Str('\x01\x02\x03abc123\xff\xfe', lineno=260, col_offset=12), lineno=260, col_offset=8), Assign([Name('t', Store(), lineno=261, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=261, col_offset=12), 'Binary', Load(), lineno=261, col_offset=12), [Name('d', Load(), lineno=261, col_offset=29)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=262, col_offset=8), 'assertEqual', Load(), lineno=262, col_offset=8), [Call(Name('str', Load(), lineno=262, col_offset=25), [Name('t', Load(), lineno=262, col_offset=29)], [], None, None, lineno=262, col_offset=25), Name('d', Load(), lineno=262, col_offset=33)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8)], [], lineno=259, col_offset=4), FunctionDef('test_decode', arguments([Name('self', Param(), lineno=264, col_offset=20)], None, None, []), [Assign([Name('d', Store(), lineno=265, col_offset=8)], Str('\x01\x02\x03abc123\xff\xfe', lineno=265, col_offset=12), lineno=265, col_offset=8), Assign([Name('de', Store(), lineno=266, col_offset=8)], Call(Attribute(Name('base64', Load(), lineno=266, col_offset=13), 'encodestring', Load(), lineno=266, col_offset=13), [Name('d', Load(), lineno=266, col_offset=33)], [], None, None, lineno=266, col_offset=13), lineno=266, col_offset=8), Assign([Name('t1', Store(), lineno=267, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=267, col_offset=13), 'Binary', Load(), lineno=267, col_offset=13), [], [], None, None, lineno=267, col_offset=13), lineno=267, col_offset=8), Expr(Call(Attribute(Name('t1', Load(), lineno=268, col_offset=8), 'decode', Load(), lineno=268, col_offset=8), [Name('de', Load(), lineno=268, col_offset=18)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'assertEqual', Load(), lineno=269, col_offset=8), [Call(Name('str', Load(), lineno=269, col_offset=25), [Name('t1', Load(), lineno=269, col_offset=29)], [], None, None, lineno=269, col_offset=25), Name('d', Load(), lineno=269, col_offset=34)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8), Assign([Name('t2', Store(), lineno=271, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=271, col_offset=13), '_binary', Load(), lineno=271, col_offset=13), [Name('de', Load(), lineno=271, col_offset=31)], [], None, None, lineno=271, col_offset=13), lineno=271, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=272, col_offset=8), 'assertEqual', Load(), lineno=272, col_offset=8), [Call(Name('str', Load(), lineno=272, col_offset=25), [Name('t2', Load(), lineno=272, col_offset=29)], [], None, None, lineno=272, col_offset=25), Name('d', Load(), lineno=272, col_offset=34)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8)], [], lineno=264, col_offset=4)], [], lineno=254, col_offset=0), Assign([Name('ADDR', Store(), lineno=275, col_offset=0), Name('PORT', Store(), lineno=275, col_offset=7), Name('URL', Store(), lineno=275, col_offset=14)], Name('None', Load(), lineno=275, col_offset=20), lineno=275, col_offset=0), FunctionDef('http_server', arguments([Name('evt', Param(), lineno=280, col_offset=16), Name('numrequests', Param(), lineno=280, col_offset=21), Name('requestHandler', Param(), lineno=280, col_offset=34)], None, None, [Name('None', Load(), lineno=280, col_offset=49)]), [ClassDef('TestInstanceClass', [], [FunctionDef('div', arguments([Name('self', Param(), lineno=282, col_offset=16), Name('x', Param(), lineno=282, col_offset=22), Name('y', Param(), lineno=282, col_offset=25)], None, None, []), [Return(BinOp(Name('x', Load(), lineno=283, col_offset=19), FloorDiv(), Name('y', Load(), lineno=283, col_offset=24), lineno=283, col_offset=19), lineno=283, col_offset=12)], [], lineno=282, col_offset=8), FunctionDef('_methodHelp', arguments([Name('self', Param(), lineno=285, col_offset=24), Name('name', Param(), lineno=285, col_offset=30)], None, None, []), [If(Compare(Name('name', Load(), lineno=286, col_offset=15), [Eq()], [Str('div', lineno=286, col_offset=23)], lineno=286, col_offset=15), [Return(Str('This is the div function', lineno=287, col_offset=23), lineno=287, col_offset=16)], [], lineno=286, col_offset=12)], [], lineno=285, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('my_function', arguments([], None, None, []), [Expr(Str('This is my function', lineno=290, col_offset=8), lineno=290, col_offset=8), Return(Name('True', Load(), lineno=291, col_offset=15), lineno=291, col_offset=8)], [], lineno=289, col_offset=4), ClassDef('MyXMLRPCServer', [Attribute(Name('SimpleXMLRPCServer', Load(), lineno=293, col_offset=25), 'SimpleXMLRPCServer', Load(), lineno=293, col_offset=25)], [FunctionDef('get_request', arguments([Name('self', Param(), lineno=294, col_offset=24)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=297, col_offset=12), Name('port', Store(), lineno=297, col_offset=15)], Store(), lineno=297, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=297, col_offset=22), 'socket', Load(), lineno=297, col_offset=22), 'accept', Load(), lineno=297, col_offset=22), [], [], None, None, lineno=297, col_offset=22), lineno=297, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=298, col_offset=12), 'setblocking', Load(), lineno=298, col_offset=12), [Name('True', Load(), lineno=298, col_offset=26)], [], None, None, lineno=298, col_offset=12), lineno=298, col_offset=12), Return(Tuple([Name('s', Load(), lineno=299, col_offset=19), Name('port', Load(), lineno=299, col_offset=22)], Load(), lineno=299, col_offset=19), lineno=299, col_offset=12)], [], lineno=294, col_offset=8)], [], lineno=293, col_offset=4), If(UnaryOp(Not(), Name('requestHandler', Load(), lineno=301, col_offset=11), lineno=301, col_offset=7), [Assign([Name('requestHandler', Store(), lineno=302, col_offset=8)], Attribute(Name('SimpleXMLRPCServer', Load(), lineno=302, col_offset=25), 'SimpleXMLRPCRequestHandler', Load(), lineno=302, col_offset=25), lineno=302, col_offset=8)], [], lineno=301, col_offset=4), Assign([Name('serv', Store(), lineno=303, col_offset=4)], Call(Name('MyXMLRPCServer', Load(), lineno=303, col_offset=11), [Tuple([Str('localhost', lineno=303, col_offset=27), Num(0, lineno=303, col_offset=40)], Load(), lineno=303, col_offset=27), Name('requestHandler', Load(), lineno=303, col_offset=44)], [keyword('logRequests', Name('False', Load(), lineno=304, col_offset=38)), keyword('bind_and_activate', Name('False', Load(), lineno=304, col_offset=63))], None, None, lineno=303, col_offset=11), lineno=303, col_offset=4), TryFinally([TryExcept([Expr(Call(Attribute(Attribute(Name('serv', Load(), lineno=306, col_offset=8), 'socket', Load(), lineno=306, col_offset=8), 'settimeout', Load(), lineno=306, col_offset=8), [Num(3, lineno=306, col_offset=31)], [], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=307, col_offset=8), 'server_bind', Load(), lineno=307, col_offset=8), [], [], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), Global(['ADDR', 'PORT', 'URL'], lineno=308, col_offset=8), Assign([Tuple([Name('ADDR', Store(), lineno=309, col_offset=8), Name('PORT', Store(), lineno=309, col_offset=14)], Store(), lineno=309, col_offset=8)], Call(Attribute(Attribute(Name('serv', Load(), lineno=309, col_offset=21), 'socket', Load(), lineno=309, col_offset=21), 'getsockname', Load(), lineno=309, col_offset=21), [], [], None, None, lineno=309, col_offset=21), lineno=309, col_offset=8), Assign([Name('URL', Store(), lineno=314, col_offset=8)], BinOp(Str('http://%s:%d', lineno=314, col_offset=14), Mod(), Tuple([Name('ADDR', Load(), lineno=314, col_offset=30), Name('PORT', Load(), lineno=314, col_offset=36)], Load(), lineno=314, col_offset=30), lineno=314, col_offset=14), lineno=314, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=315, col_offset=8), 'server_activate', Load(), lineno=315, col_offset=8), [], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=316, col_offset=8), 'register_introspection_functions', Load(), lineno=316, col_offset=8), [], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=317, col_offset=8), 'register_multicall_functions', Load(), lineno=317, col_offset=8), [], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=318, col_offset=8), 'register_function', Load(), lineno=318, col_offset=8), [Name('pow', Load(), lineno=318, col_offset=31)], [], None, None, lineno=318, col_offset=8), lineno=318, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=319, col_offset=8), 'register_function', Load(), lineno=319, col_offset=8), [Lambda(arguments([Name('x', Param(), lineno=319, col_offset=38), Name('y', Param(), lineno=319, col_offset=40)], None, None, []), BinOp(Name('x', Load(), lineno=319, col_offset=43), Add(), Name('y', Load(), lineno=319, col_offset=45), lineno=319, col_offset=43), lineno=319, col_offset=31), Str('add', lineno=319, col_offset=48)], [], None, None, lineno=319, col_offset=8), lineno=319, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=320, col_offset=8), 'register_function', Load(), lineno=320, col_offset=8), [Name('my_function', Load(), lineno=320, col_offset=31)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=321, col_offset=8), 'register_instance', Load(), lineno=321, col_offset=8), [Call(Name('TestInstanceClass', Load(), lineno=321, col_offset=31), [], [], None, None, lineno=321, col_offset=31)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8), Expr(Call(Attribute(Name('evt', Load(), lineno=322, col_offset=8), 'set', Load(), lineno=322, col_offset=8), [], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), While(Compare(Name('numrequests', Load(), lineno=325, col_offset=14), [Gt()], [Num(0, lineno=325, col_offset=28)], lineno=325, col_offset=14), [Expr(Call(Attribute(Name('serv', Load(), lineno=326, col_offset=12), 'handle_request', Load(), lineno=326, col_offset=12), [], [], None, None, lineno=326, col_offset=12), lineno=326, col_offset=12), AugAssign(Name('numrequests', Store(), lineno=327, col_offset=12), Sub(), Num(1, lineno=327, col_offset=27), lineno=327, col_offset=12)], [], lineno=325, col_offset=8)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=329, col_offset=11), 'timeout', Load(), lineno=329, col_offset=11), None, [Pass( lineno=330, col_offset=8)], lineno=329, col_offset=4)], [], lineno=305, col_offset=4)], [Expr(Call(Attribute(Attribute(Name('serv', Load(), lineno=332, col_offset=8), 'socket', Load(), lineno=332, col_offset=8), 'close', Load(), lineno=332, col_offset=8), [], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8), Assign([Name('PORT', Store(), lineno=333, col_offset=8)], Name('None', Load(), lineno=333, col_offset=15), lineno=333, col_offset=8), Expr(Call(Attribute(Name('evt', Load(), lineno=334, col_offset=8), 'set', Load(), lineno=334, col_offset=8), [], [], None, None, lineno=334, col_offset=8), lineno=334, col_offset=8)], lineno=305, col_offset=4)], [], lineno=280, col_offset=0), FunctionDef('http_multi_server', arguments([Name('evt', Param(), lineno=336, col_offset=22), Name('numrequests', Param(), lineno=336, col_offset=27), Name('requestHandler', Param(), lineno=336, col_offset=40)], None, None, [Name('None', Load(), lineno=336, col_offset=55)]), [ClassDef('TestInstanceClass', [], [FunctionDef('div', arguments([Name('self', Param(), lineno=338, col_offset=16), Name('x', Param(), lineno=338, col_offset=22), Name('y', Param(), lineno=338, col_offset=25)], None, None, []), [Return(BinOp(Name('x', Load(), lineno=339, col_offset=19), FloorDiv(), Name('y', Load(), lineno=339, col_offset=24), lineno=339, col_offset=19), lineno=339, col_offset=12)], [], lineno=338, col_offset=8), FunctionDef('_methodHelp', arguments([Name('self', Param(), lineno=341, col_offset=24), Name('name', Param(), lineno=341, col_offset=30)], None, None, []), [If(Compare(Name('name', Load(), lineno=342, col_offset=15), [Eq()], [Str('div', lineno=342, col_offset=23)], lineno=342, col_offset=15), [Return(Str('This is the div function', lineno=343, col_offset=23), lineno=343, col_offset=16)], [], lineno=342, col_offset=12)], [], lineno=341, col_offset=8)], [], lineno=337, col_offset=4), FunctionDef('my_function', arguments([], None, None, []), [Expr(Str('This is my function', lineno=346, col_offset=8), lineno=346, col_offset=8), Return(Name('True', Load(), lineno=347, col_offset=15), lineno=347, col_offset=8)], [], lineno=345, col_offset=4), ClassDef('MyXMLRPCServer', [Attribute(Name('SimpleXMLRPCServer', Load(), lineno=349, col_offset=25), 'MultiPathXMLRPCServer', Load(), lineno=349, col_offset=25)], [FunctionDef('get_request', arguments([Name('self', Param(), lineno=350, col_offset=24)], None, None, []), [Assign([Tuple([Name('s', Store(), lineno=353, col_offset=12), Name('port', Store(), lineno=353, col_offset=15)], Store(), lineno=353, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=353, col_offset=22), 'socket', Load(), lineno=353, col_offset=22), 'accept', Load(), lineno=353, col_offset=22), [], [], None, None, lineno=353, col_offset=22), lineno=353, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=354, col_offset=12), 'setblocking', Load(), lineno=354, col_offset=12), [Name('True', Load(), lineno=354, col_offset=26)], [], None, None, lineno=354, col_offset=12), lineno=354, col_offset=12), Return(Tuple([Name('s', Load(), lineno=355, col_offset=19), Name('port', Load(), lineno=355, col_offset=22)], Load(), lineno=355, col_offset=19), lineno=355, col_offset=12)], [], lineno=350, col_offset=8)], [], lineno=349, col_offset=4), If(UnaryOp(Not(), Name('requestHandler', Load(), lineno=357, col_offset=11), lineno=357, col_offset=7), [Assign([Name('requestHandler', Store(), lineno=358, col_offset=8)], Attribute(Name('SimpleXMLRPCServer', Load(), lineno=358, col_offset=25), 'SimpleXMLRPCRequestHandler', Load(), lineno=358, col_offset=25), lineno=358, col_offset=8)], [], lineno=357, col_offset=4), ClassDef('MyRequestHandler', [Name('requestHandler', Load(), lineno=359, col_offset=27)], [Assign([Name('rpc_paths', Store(), lineno=360, col_offset=8)], List([], Load(), lineno=360, col_offset=20), lineno=360, col_offset=8)], [], lineno=359, col_offset=4), Assign([Name('serv', Store(), lineno=362, col_offset=4)], Call(Name('MyXMLRPCServer', Load(), lineno=362, col_offset=11), [Tuple([Str('localhost', lineno=362, col_offset=27), Num(0, lineno=362, col_offset=40)], Load(), lineno=362, col_offset=27), Name('MyRequestHandler', Load(), lineno=362, col_offset=44)], [keyword('logRequests', Name('False', Load(), lineno=363, col_offset=38)), keyword('bind_and_activate', Name('False', Load(), lineno=363, col_offset=63))], None, None, lineno=362, col_offset=11), lineno=362, col_offset=4), Expr(Call(Attribute(Attribute(Name('serv', Load(), lineno=364, col_offset=4), 'socket', Load(), lineno=364, col_offset=4), 'settimeout', Load(), lineno=364, col_offset=4), [Num(3, lineno=364, col_offset=27)], [], None, None, lineno=364, col_offset=4), lineno=364, col_offset=4), Expr(Call(Attribute(Name('serv', Load(), lineno=365, col_offset=4), 'server_bind', Load(), lineno=365, col_offset=4), [], [], None, None, lineno=365, col_offset=4), lineno=365, col_offset=4), TryFinally([TryExcept([Global(['ADDR', 'PORT', 'URL'], lineno=367, col_offset=8), Assign([Tuple([Name('ADDR', Store(), lineno=368, col_offset=8), Name('PORT', Store(), lineno=368, col_offset=14)], Store(), lineno=368, col_offset=8)], Call(Attribute(Attribute(Name('serv', Load(), lineno=368, col_offset=21), 'socket', Load(), lineno=368, col_offset=21), 'getsockname', Load(), lineno=368, col_offset=21), [], [], None, None, lineno=368, col_offset=21), lineno=368, col_offset=8), Assign([Name('URL', Store(), lineno=373, col_offset=8)], BinOp(Str('http://%s:%d', lineno=373, col_offset=14), Mod(), Tuple([Name('ADDR', Load(), lineno=373, col_offset=30), Name('PORT', Load(), lineno=373, col_offset=36)], Load(), lineno=373, col_offset=30), lineno=373, col_offset=14), lineno=373, col_offset=8), Expr(Call(Attribute(Name('serv', Load(), lineno=374, col_offset=8), 'server_activate', Load(), lineno=374, col_offset=8), [], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Assign([Name('paths', Store(), lineno=375, col_offset=8)], List([Str('/foo', lineno=375, col_offset=17), Str('/foo/bar', lineno=375, col_offset=25)], Load(), lineno=375, col_offset=16), lineno=375, col_offset=8), For(Name('path', Store(), lineno=376, col_offset=12), Name('paths', Load(), lineno=376, col_offset=20), [Assign([Name('d', Store(), lineno=377, col_offset=12)], Call(Attribute(Name('serv', Load(), lineno=377, col_offset=16), 'add_dispatcher', Load(), lineno=377, col_offset=16), [Name('path', Load(), lineno=377, col_offset=36), Call(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=377, col_offset=42), 'SimpleXMLRPCDispatcher', Load(), lineno=377, col_offset=42), [], [], None, None, lineno=377, col_offset=42)], [], None, None, lineno=377, col_offset=16), lineno=377, col_offset=12), Expr(Call(Attribute(Name('d', Load(), lineno=378, col_offset=12), 'register_introspection_functions', Load(), lineno=378, col_offset=12), [], [], None, None, lineno=378, col_offset=12), lineno=378, col_offset=12), Expr(Call(Attribute(Name('d', Load(), lineno=379, col_offset=12), 'register_multicall_functions', Load(), lineno=379, col_offset=12), [], [], None, None, lineno=379, col_offset=12), lineno=379, col_offset=12)], [], lineno=376, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('serv', Load(), lineno=380, col_offset=8), 'get_dispatcher', Load(), lineno=380, col_offset=8), [Subscript(Name('paths', Load(), lineno=380, col_offset=28), Index(Num(0, lineno=380, col_offset=34)), Load(), lineno=380, col_offset=28)], [], None, None, lineno=380, col_offset=8), 'register_function', Load(), lineno=380, col_offset=8), [Name('pow', Load(), lineno=380, col_offset=56)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('serv', Load(), lineno=381, col_offset=8), 'get_dispatcher', Load(), lineno=381, col_offset=8), [Subscript(Name('paths', Load(), lineno=381, col_offset=28), Index(Num(1, lineno=381, col_offset=34)), Load(), lineno=381, col_offset=28)], [], None, None, lineno=381, col_offset=8), 'register_function', Load(), lineno=381, col_offset=8), [Lambda(arguments([Name('x', Param(), lineno=381, col_offset=63), Name('y', Param(), lineno=381, col_offset=65)], None, None, []), BinOp(Name('x', Load(), lineno=381, col_offset=68), Add(), Name('y', Load(), lineno=381, col_offset=70), lineno=381, col_offset=68), lineno=381, col_offset=56), Str('add', lineno=381, col_offset=73)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8), Expr(Call(Attribute(Name('evt', Load(), lineno=382, col_offset=8), 'set', Load(), lineno=382, col_offset=8), [], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), While(Compare(Name('numrequests', Load(), lineno=385, col_offset=14), [Gt()], [Num(0, lineno=385, col_offset=28)], lineno=385, col_offset=14), [Expr(Call(Attribute(Name('serv', Load(), lineno=386, col_offset=12), 'handle_request', Load(), lineno=386, col_offset=12), [], [], None, None, lineno=386, col_offset=12), lineno=386, col_offset=12), AugAssign(Name('numrequests', Store(), lineno=387, col_offset=12), Sub(), Num(1, lineno=387, col_offset=27), lineno=387, col_offset=12)], [], lineno=385, col_offset=8)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=389, col_offset=11), 'timeout', Load(), lineno=389, col_offset=11), None, [Pass( lineno=390, col_offset=8)], lineno=389, col_offset=4)], [], lineno=366, col_offset=4)], [Expr(Call(Attribute(Attribute(Name('serv', Load(), lineno=392, col_offset=8), 'socket', Load(), lineno=392, col_offset=8), 'close', Load(), lineno=392, col_offset=8), [], [], None, None, lineno=392, col_offset=8), lineno=392, col_offset=8), Assign([Name('PORT', Store(), lineno=393, col_offset=8)], Name('None', Load(), lineno=393, col_offset=15), lineno=393, col_offset=8), Expr(Call(Attribute(Name('evt', Load(), lineno=394, col_offset=8), 'set', Load(), lineno=394, col_offset=8), [], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8)], lineno=366, col_offset=4)], [], lineno=336, col_offset=0), FunctionDef('is_unavailable_exception', arguments([Name('e', Param(), lineno=398, col_offset=29)], None, None, []), [Expr(Str("Returns True if the given ProtocolError is the product of a server-side\n       exception caused by the 'temporarily unavailable' response sometimes\n       given by operations on non-blocking sockets.", lineno=401, col_offset=-1), lineno=401, col_offset=-1), TryExcept([If(BoolOp(Or(), [Compare(Attribute(Name('e', Load(), lineno=405, col_offset=11), 'errcode', Load(), lineno=405, col_offset=11), [Eq()], [Num(-1, lineno=405, col_offset=25)], lineno=405, col_offset=11), Compare(Attribute(Name('e', Load(), lineno=405, col_offset=30), 'headers', Load(), lineno=405, col_offset=30), [Is()], [Name('None', Load(), lineno=405, col_offset=43)], lineno=405, col_offset=30)], lineno=405, col_offset=11), [Return(Name('True', Load(), lineno=406, col_offset=19), lineno=406, col_offset=12)], [], lineno=405, col_offset=8), Assign([Name('exc_mess', Store(), lineno=407, col_offset=8)], Call(Attribute(Attribute(Name('e', Load(), lineno=407, col_offset=19), 'headers', Load(), lineno=407, col_offset=19), 'get', Load(), lineno=407, col_offset=19), [Str('X-exception', lineno=407, col_offset=33)], [], None, None, lineno=407, col_offset=19), lineno=407, col_offset=8)], [ExceptHandler(Name('AttributeError', Load(), lineno=408, col_offset=11), None, [Assign([Name('exc_mess', Store(), lineno=410, col_offset=8)], Call(Name('str', Load(), lineno=410, col_offset=19), [Name('e', Load(), lineno=410, col_offset=23)], [], None, None, lineno=410, col_offset=19), lineno=410, col_offset=8)], lineno=408, col_offset=4)], [], lineno=404, col_offset=4), If(BoolOp(And(), [Name('exc_mess', Load(), lineno=412, col_offset=7), Compare(Str('temporarily unavailable', lineno=412, col_offset=20), [In()], [Call(Attribute(Name('exc_mess', Load(), lineno=412, col_offset=49), 'lower', Load(), lineno=412, col_offset=49), [], [], None, None, lineno=412, col_offset=49)], lineno=412, col_offset=20)], lineno=412, col_offset=7), [Return(Name('True', Load(), lineno=413, col_offset=15), lineno=413, col_offset=8)], [], lineno=412, col_offset=4), Return(Name('False', Load(), lineno=415, col_offset=11), lineno=415, col_offset=4)], [], lineno=398, col_offset=0), ClassDef('BaseServerTestCase', [Attribute(Name('unittest', Load(), lineno=418, col_offset=25), 'TestCase', Load(), lineno=418, col_offset=25)], [Assign([Name('requestHandler', Store(), lineno=419, col_offset=4)], Name('None', Load(), lineno=419, col_offset=21), lineno=419, col_offset=4), Assign([Name('request_count', Store(), lineno=420, col_offset=4)], Num(1, lineno=420, col_offset=20), lineno=420, col_offset=4), Assign([Name('threadFunc', Store(), lineno=421, col_offset=4)], Call(Name('staticmethod', Load(), lineno=421, col_offset=17), [Name('http_server', Load(), lineno=421, col_offset=30)], [], None, None, lineno=421, col_offset=17), lineno=421, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=423, col_offset=14)], None, None, []), [Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=425, col_offset=8), 'SimpleXMLRPCServer', Load(), lineno=425, col_offset=8), '_send_traceback_header', Store(), lineno=425, col_offset=8)], Name('True', Load(), lineno=425, col_offset=71), lineno=425, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=427, col_offset=8), 'evt', Store(), lineno=427, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=427, col_offset=19), 'Event', Load(), lineno=427, col_offset=19), [], [], None, None, lineno=427, col_offset=19), lineno=427, col_offset=8), Assign([Name('serv_args', Store(), lineno=429, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=429, col_offset=21), 'evt', Load(), lineno=429, col_offset=21), Attribute(Name('self', Load(), lineno=429, col_offset=31), 'request_count', Load(), lineno=429, col_offset=31), Attribute(Name('self', Load(), lineno=429, col_offset=51), 'requestHandler', Load(), lineno=429, col_offset=51)], Load(), lineno=429, col_offset=21), lineno=429, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=430, col_offset=8), 'Thread', Load(), lineno=430, col_offset=8), [], [keyword('target', Attribute(Name('self', Load(), lineno=430, col_offset=32), 'threadFunc', Load(), lineno=430, col_offset=32)), keyword('args', Name('serv_args', Load(), lineno=430, col_offset=54))], None, None, lineno=430, col_offset=8), 'start', Load(), lineno=430, col_offset=8), [], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'evt', Load(), lineno=433, col_offset=8), 'wait', Load(), lineno=433, col_offset=8), [Num(10, lineno=433, col_offset=22)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'evt', Load(), lineno=434, col_offset=8), 'clear', Load(), lineno=434, col_offset=8), [], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8)], [], lineno=423, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=436, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=438, col_offset=8), 'evt', Load(), lineno=438, col_offset=8), 'wait', Load(), lineno=438, col_offset=8), [Num(10, lineno=438, col_offset=22)], [], None, None, lineno=438, col_offset=8), lineno=438, col_offset=8), Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=441, col_offset=8), 'SimpleXMLRPCServer', Load(), lineno=441, col_offset=8), '_send_traceback_header', Store(), lineno=441, col_offset=8)], Name('False', Load(), lineno=441, col_offset=71), lineno=441, col_offset=8)], [], lineno=436, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=417, col_offset=1), 'skipUnless', Load(), lineno=417, col_offset=1), [Name('threading', Load(), lineno=417, col_offset=21), Str('Threading required for this test.', lineno=417, col_offset=32)], [], None, None, lineno=417, col_offset=1)], lineno=417, col_offset=0), ClassDef('SimpleServerTestCase', [Name('BaseServerTestCase', Load(), lineno=450, col_offset=27)], [FunctionDef('test_simple1', arguments([Name('self', Param(), lineno=451, col_offset=21)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=453, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=453, col_offset=16), 'ServerProxy', Load(), lineno=453, col_offset=16), [Name('URL', Load(), lineno=453, col_offset=38)], [], None, None, lineno=453, col_offset=16), lineno=453, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=454, col_offset=12), 'assertEqual', Load(), lineno=454, col_offset=12), [Call(Attribute(Name('p', Load(), lineno=454, col_offset=29), 'pow', Load(), lineno=454, col_offset=29), [Num(6, lineno=454, col_offset=35), Num(8, lineno=454, col_offset=37)], [], None, None, lineno=454, col_offset=29), BinOp(Num(6, lineno=454, col_offset=41), Pow(), Num(8, lineno=454, col_offset=44), lineno=454, col_offset=41)], [], None, None, lineno=454, col_offset=12), lineno=454, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=455, col_offset=16), 'ProtocolError', Load(), lineno=455, col_offset=16), Attribute(Name('socket', Load(), lineno=455, col_offset=41), 'error', Load(), lineno=455, col_offset=41)], Load(), lineno=455, col_offset=16), Name('e', Store(), lineno=455, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=457, col_offset=19), [Name('e', Load(), lineno=457, col_offset=44)], [], None, None, lineno=457, col_offset=19), lineno=457, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=16), 'fail', Load(), lineno=459, col_offset=16), [BinOp(Str('%s\n%s', lineno=459, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=459, col_offset=38), Call(Name('getattr', Load(), lineno=459, col_offset=41), [Name('e', Load(), lineno=459, col_offset=49), Str('headers', lineno=459, col_offset=52), Str('', lineno=459, col_offset=63)], [], None, None, lineno=459, col_offset=41)], Load(), lineno=459, col_offset=38), lineno=459, col_offset=26)], [], None, None, lineno=459, col_offset=16), lineno=459, col_offset=16)], [], lineno=457, col_offset=12)], lineno=455, col_offset=8)], [], lineno=452, col_offset=8)], [], lineno=451, col_offset=4), FunctionDef('test_nonascii', arguments([Name('self', Param(), lineno=461, col_offset=22)], None, None, []), [Assign([Name('start_string', Store(), lineno=462, col_offset=8)], Str('P\\N{LATIN SMALL LETTER Y WITH CIRCUMFLEX}t', lineno=462, col_offset=23), lineno=462, col_offset=8), Assign([Name('end_string', Store(), lineno=463, col_offset=8)], Str('h\\N{LATIN SMALL LETTER O WITH HORN}n', lineno=463, col_offset=21), lineno=463, col_offset=8), TryExcept([Assign([Name('p', Store(), lineno=466, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=466, col_offset=16), 'ServerProxy', Load(), lineno=466, col_offset=16), [Name('URL', Load(), lineno=466, col_offset=38)], [], None, None, lineno=466, col_offset=16), lineno=466, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=467, col_offset=12), 'assertEqual', Load(), lineno=467, col_offset=12), [Call(Attribute(Name('p', Load(), lineno=467, col_offset=29), 'add', Load(), lineno=467, col_offset=29), [Name('start_string', Load(), lineno=467, col_offset=35), Name('end_string', Load(), lineno=467, col_offset=49)], [], None, None, lineno=467, col_offset=29), BinOp(Name('start_string', Load(), lineno=468, col_offset=29), Add(), Name('end_string', Load(), lineno=468, col_offset=44), lineno=468, col_offset=29)], [], None, None, lineno=467, col_offset=12), lineno=467, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=469, col_offset=16), 'ProtocolError', Load(), lineno=469, col_offset=16), Attribute(Name('socket', Load(), lineno=469, col_offset=41), 'error', Load(), lineno=469, col_offset=41)], Load(), lineno=469, col_offset=16), Name('e', Store(), lineno=469, col_offset=58), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=471, col_offset=19), [Name('e', Load(), lineno=471, col_offset=44)], [], None, None, lineno=471, col_offset=19), lineno=471, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=473, col_offset=16), 'fail', Load(), lineno=473, col_offset=16), [BinOp(Str('%s\n%s', lineno=473, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=473, col_offset=38), Call(Name('getattr', Load(), lineno=473, col_offset=41), [Name('e', Load(), lineno=473, col_offset=49), Str('headers', lineno=473, col_offset=52), Str('', lineno=473, col_offset=63)], [], None, None, lineno=473, col_offset=41)], Load(), lineno=473, col_offset=38), lineno=473, col_offset=26)], [], None, None, lineno=473, col_offset=16), lineno=473, col_offset=16)], [], lineno=471, col_offset=12)], lineno=469, col_offset=8)], [], lineno=465, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('XXXtest_404', arguments([Name('self', Param(), lineno=477, col_offset=20)], None, None, []), [Assign([Name('conn', Store(), lineno=480, col_offset=8)], Call(Attribute(Name('httplib', Load(), lineno=480, col_offset=15), 'HTTPConnection', Load(), lineno=480, col_offset=15), [Name('ADDR', Load(), lineno=480, col_offset=38), Name('PORT', Load(), lineno=480, col_offset=44)], [], None, None, lineno=480, col_offset=15), lineno=480, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=481, col_offset=8), 'request', Load(), lineno=481, col_offset=8), [Str('POST', lineno=481, col_offset=21), Str('/this-is-not-valid', lineno=481, col_offset=29)], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8), Assign([Name('response', Store(), lineno=482, col_offset=8)], Call(Attribute(Name('conn', Load(), lineno=482, col_offset=19), 'getresponse', Load(), lineno=482, col_offset=19), [], [], None, None, lineno=482, col_offset=19), lineno=482, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=483, col_offset=8), 'close', Load(), lineno=483, col_offset=8), [], [], None, None, lineno=483, col_offset=8), lineno=483, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=485, col_offset=8), 'assertEqual', Load(), lineno=485, col_offset=8), [Attribute(Name('response', Load(), lineno=485, col_offset=25), 'status', Load(), lineno=485, col_offset=25), Num(404, lineno=485, col_offset=42)], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertEqual', Load(), lineno=486, col_offset=8), [Attribute(Name('response', Load(), lineno=486, col_offset=25), 'reason', Load(), lineno=486, col_offset=25), Str('Not Found', lineno=486, col_offset=42)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8)], [], lineno=477, col_offset=4), FunctionDef('test_introspection1', arguments([Name('self', Param(), lineno=488, col_offset=28)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=490, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=490, col_offset=16), 'ServerProxy', Load(), lineno=490, col_offset=16), [Name('URL', Load(), lineno=490, col_offset=38)], [], None, None, lineno=490, col_offset=16), lineno=490, col_offset=12), Assign([Name('meth', Store(), lineno=491, col_offset=12)], Call(Attribute(Attribute(Name('p', Load(), lineno=491, col_offset=19), 'system', Load(), lineno=491, col_offset=19), 'listMethods', Load(), lineno=491, col_offset=19), [], [], None, None, lineno=491, col_offset=19), lineno=491, col_offset=12), Assign([Name('expected_methods', Store(), lineno=492, col_offset=12)], Call(Name('set', Load(), lineno=492, col_offset=31), [List([Str('pow', lineno=492, col_offset=36), Str('div', lineno=492, col_offset=43), Str('my_function', lineno=492, col_offset=50), Str('add', lineno=492, col_offset=65), Str('system.listMethods', lineno=493, col_offset=36), Str('system.methodHelp', lineno=493, col_offset=58), Str('system.methodSignature', lineno=494, col_offset=36), Str('system.multicall', lineno=494, col_offset=62)], Load(), lineno=492, col_offset=35)], [], None, None, lineno=492, col_offset=31), lineno=492, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=495, col_offset=12), 'assertEqual', Load(), lineno=495, col_offset=12), [Call(Name('set', Load(), lineno=495, col_offset=29), [Name('meth', Load(), lineno=495, col_offset=33)], [], None, None, lineno=495, col_offset=29), Name('expected_methods', Load(), lineno=495, col_offset=40)], [], None, None, lineno=495, col_offset=12), lineno=495, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=496, col_offset=16), 'ProtocolError', Load(), lineno=496, col_offset=16), Attribute(Name('socket', Load(), lineno=496, col_offset=41), 'error', Load(), lineno=496, col_offset=41)], Load(), lineno=496, col_offset=16), Name('e', Store(), lineno=496, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=498, col_offset=19), [Name('e', Load(), lineno=498, col_offset=44)], [], None, None, lineno=498, col_offset=19), lineno=498, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=500, col_offset=16), 'fail', Load(), lineno=500, col_offset=16), [BinOp(Str('%s\n%s', lineno=500, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=500, col_offset=38), Call(Name('getattr', Load(), lineno=500, col_offset=41), [Name('e', Load(), lineno=500, col_offset=49), Str('headers', lineno=500, col_offset=52), Str('', lineno=500, col_offset=63)], [], None, None, lineno=500, col_offset=41)], Load(), lineno=500, col_offset=38), lineno=500, col_offset=26)], [], None, None, lineno=500, col_offset=16), lineno=500, col_offset=16)], [], lineno=498, col_offset=12)], lineno=496, col_offset=8)], [], lineno=489, col_offset=8)], [], lineno=488, col_offset=4), FunctionDef('test_introspection2', arguments([Name('self', Param(), lineno=502, col_offset=28)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=505, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=505, col_offset=16), 'ServerProxy', Load(), lineno=505, col_offset=16), [Name('URL', Load(), lineno=505, col_offset=38)], [], None, None, lineno=505, col_offset=16), lineno=505, col_offset=12), Assign([Name('divhelp', Store(), lineno=506, col_offset=12)], Call(Attribute(Attribute(Name('p', Load(), lineno=506, col_offset=22), 'system', Load(), lineno=506, col_offset=22), 'methodHelp', Load(), lineno=506, col_offset=22), [Str('div', lineno=506, col_offset=42)], [], None, None, lineno=506, col_offset=22), lineno=506, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=12), 'assertEqual', Load(), lineno=507, col_offset=12), [Name('divhelp', Load(), lineno=507, col_offset=29), Str('This is the div function', lineno=507, col_offset=38)], [], None, None, lineno=507, col_offset=12), lineno=507, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=508, col_offset=16), 'ProtocolError', Load(), lineno=508, col_offset=16), Attribute(Name('socket', Load(), lineno=508, col_offset=41), 'error', Load(), lineno=508, col_offset=41)], Load(), lineno=508, col_offset=16), Name('e', Store(), lineno=508, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=510, col_offset=19), [Name('e', Load(), lineno=510, col_offset=44)], [], None, None, lineno=510, col_offset=19), lineno=510, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=16), 'fail', Load(), lineno=512, col_offset=16), [BinOp(Str('%s\n%s', lineno=512, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=512, col_offset=38), Call(Name('getattr', Load(), lineno=512, col_offset=41), [Name('e', Load(), lineno=512, col_offset=49), Str('headers', lineno=512, col_offset=52), Str('', lineno=512, col_offset=63)], [], None, None, lineno=512, col_offset=41)], Load(), lineno=512, col_offset=38), lineno=512, col_offset=26)], [], None, None, lineno=512, col_offset=16), lineno=512, col_offset=16)], [], lineno=510, col_offset=12)], lineno=508, col_offset=8)], [], lineno=503, col_offset=8)], [], lineno=502, col_offset=4), FunctionDef('test_introspection3', arguments([Name('self', Param(), lineno=516, col_offset=28)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=519, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=519, col_offset=16), 'ServerProxy', Load(), lineno=519, col_offset=16), [Name('URL', Load(), lineno=519, col_offset=38)], [], None, None, lineno=519, col_offset=16), lineno=519, col_offset=12), Assign([Name('myfunction', Store(), lineno=520, col_offset=12)], Call(Attribute(Attribute(Name('p', Load(), lineno=520, col_offset=25), 'system', Load(), lineno=520, col_offset=25), 'methodHelp', Load(), lineno=520, col_offset=25), [Str('my_function', lineno=520, col_offset=45)], [], None, None, lineno=520, col_offset=25), lineno=520, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=521, col_offset=12), 'assertEqual', Load(), lineno=521, col_offset=12), [Name('myfunction', Load(), lineno=521, col_offset=29), Str('This is my function', lineno=521, col_offset=41)], [], None, None, lineno=521, col_offset=12), lineno=521, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=522, col_offset=16), 'ProtocolError', Load(), lineno=522, col_offset=16), Attribute(Name('socket', Load(), lineno=522, col_offset=41), 'error', Load(), lineno=522, col_offset=41)], Load(), lineno=522, col_offset=16), Name('e', Store(), lineno=522, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=524, col_offset=19), [Name('e', Load(), lineno=524, col_offset=44)], [], None, None, lineno=524, col_offset=19), lineno=524, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=16), 'fail', Load(), lineno=526, col_offset=16), [BinOp(Str('%s\n%s', lineno=526, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=526, col_offset=38), Call(Name('getattr', Load(), lineno=526, col_offset=41), [Name('e', Load(), lineno=526, col_offset=49), Str('headers', lineno=526, col_offset=52), Str('', lineno=526, col_offset=63)], [], None, None, lineno=526, col_offset=41)], Load(), lineno=526, col_offset=38), lineno=526, col_offset=26)], [], None, None, lineno=526, col_offset=16), lineno=526, col_offset=16)], [], lineno=524, col_offset=12)], lineno=522, col_offset=8)], [], lineno=517, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=514, col_offset=5), 'skipIf', Load(), lineno=514, col_offset=5), [Compare(Attribute(Attribute(Name('sys', Load(), lineno=514, col_offset=21), 'flags', Load(), lineno=514, col_offset=21), 'optimize', Load(), lineno=514, col_offset=21), [GtE()], [Num(2, lineno=514, col_offset=43)], lineno=514, col_offset=21), Str('Docstrings are omitted with -O2 and above', lineno=515, col_offset=21)], [], None, None, lineno=514, col_offset=5)], lineno=514, col_offset=4), FunctionDef('test_introspection4', arguments([Name('self', Param(), lineno=528, col_offset=28)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=532, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=532, col_offset=16), 'ServerProxy', Load(), lineno=532, col_offset=16), [Name('URL', Load(), lineno=532, col_offset=38)], [], None, None, lineno=532, col_offset=16), lineno=532, col_offset=12), Assign([Name('divsig', Store(), lineno=533, col_offset=12)], Call(Attribute(Attribute(Name('p', Load(), lineno=533, col_offset=21), 'system', Load(), lineno=533, col_offset=21), 'methodSignature', Load(), lineno=533, col_offset=21), [Str('div', lineno=533, col_offset=46)], [], None, None, lineno=533, col_offset=21), lineno=533, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=12), 'assertEqual', Load(), lineno=534, col_offset=12), [Name('divsig', Load(), lineno=534, col_offset=29), Str('signatures not supported', lineno=534, col_offset=37)], [], None, None, lineno=534, col_offset=12), lineno=534, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=535, col_offset=16), 'ProtocolError', Load(), lineno=535, col_offset=16), Attribute(Name('socket', Load(), lineno=535, col_offset=41), 'error', Load(), lineno=535, col_offset=41)], Load(), lineno=535, col_offset=16), Name('e', Store(), lineno=535, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=537, col_offset=19), [Name('e', Load(), lineno=537, col_offset=44)], [], None, None, lineno=537, col_offset=19), lineno=537, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=539, col_offset=16), 'fail', Load(), lineno=539, col_offset=16), [BinOp(Str('%s\n%s', lineno=539, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=539, col_offset=38), Call(Name('getattr', Load(), lineno=539, col_offset=41), [Name('e', Load(), lineno=539, col_offset=49), Str('headers', lineno=539, col_offset=52), Str('', lineno=539, col_offset=63)], [], None, None, lineno=539, col_offset=41)], Load(), lineno=539, col_offset=38), lineno=539, col_offset=26)], [], None, None, lineno=539, col_offset=16), lineno=539, col_offset=16)], [], lineno=537, col_offset=12)], lineno=535, col_offset=8)], [], lineno=531, col_offset=8)], [], lineno=528, col_offset=4), FunctionDef('test_multicall', arguments([Name('self', Param(), lineno=541, col_offset=23)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=543, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=543, col_offset=16), 'ServerProxy', Load(), lineno=543, col_offset=16), [Name('URL', Load(), lineno=543, col_offset=38)], [], None, None, lineno=543, col_offset=16), lineno=543, col_offset=12), Assign([Name('multicall', Store(), lineno=544, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=544, col_offset=24), 'MultiCall', Load(), lineno=544, col_offset=24), [Name('p', Load(), lineno=544, col_offset=44)], [], None, None, lineno=544, col_offset=24), lineno=544, col_offset=12), Expr(Call(Attribute(Name('multicall', Load(), lineno=545, col_offset=12), 'add', Load(), lineno=545, col_offset=12), [Num(2, lineno=545, col_offset=26), Num(3, lineno=545, col_offset=28)], [], None, None, lineno=545, col_offset=12), lineno=545, col_offset=12), Expr(Call(Attribute(Name('multicall', Load(), lineno=546, col_offset=12), 'pow', Load(), lineno=546, col_offset=12), [Num(6, lineno=546, col_offset=26), Num(8, lineno=546, col_offset=28)], [], None, None, lineno=546, col_offset=12), lineno=546, col_offset=12), Expr(Call(Attribute(Name('multicall', Load(), lineno=547, col_offset=12), 'div', Load(), lineno=547, col_offset=12), [Num(127, lineno=547, col_offset=26), Num(42, lineno=547, col_offset=30)], [], None, None, lineno=547, col_offset=12), lineno=547, col_offset=12), Assign([Tuple([Name('add_result', Store(), lineno=548, col_offset=12), Name('pow_result', Store(), lineno=548, col_offset=24), Name('div_result', Store(), lineno=548, col_offset=36)], Store(), lineno=548, col_offset=12)], Call(Name('multicall', Load(), lineno=548, col_offset=49), [], [], None, None, lineno=548, col_offset=49), lineno=548, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=549, col_offset=12), 'assertEqual', Load(), lineno=549, col_offset=12), [Name('add_result', Load(), lineno=549, col_offset=29), BinOp(Num(2, lineno=549, col_offset=41), Add(), Num(3, lineno=549, col_offset=43), lineno=549, col_offset=41)], [], None, None, lineno=549, col_offset=12), lineno=549, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=550, col_offset=12), 'assertEqual', Load(), lineno=550, col_offset=12), [Name('pow_result', Load(), lineno=550, col_offset=29), BinOp(Num(6, lineno=550, col_offset=41), Pow(), Num(8, lineno=550, col_offset=44), lineno=550, col_offset=41)], [], None, None, lineno=550, col_offset=12), lineno=550, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=551, col_offset=12), 'assertEqual', Load(), lineno=551, col_offset=12), [Name('div_result', Load(), lineno=551, col_offset=29), BinOp(Num(127, lineno=551, col_offset=41), FloorDiv(), Num(42, lineno=551, col_offset=46), lineno=551, col_offset=41)], [], None, None, lineno=551, col_offset=12), lineno=551, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=552, col_offset=16), 'ProtocolError', Load(), lineno=552, col_offset=16), Attribute(Name('socket', Load(), lineno=552, col_offset=41), 'error', Load(), lineno=552, col_offset=41)], Load(), lineno=552, col_offset=16), Name('e', Store(), lineno=552, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=554, col_offset=19), [Name('e', Load(), lineno=554, col_offset=44)], [], None, None, lineno=554, col_offset=19), lineno=554, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=556, col_offset=16), 'fail', Load(), lineno=556, col_offset=16), [BinOp(Str('%s\n%s', lineno=556, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=556, col_offset=38), Call(Name('getattr', Load(), lineno=556, col_offset=41), [Name('e', Load(), lineno=556, col_offset=49), Str('headers', lineno=556, col_offset=52), Str('', lineno=556, col_offset=63)], [], None, None, lineno=556, col_offset=41)], Load(), lineno=556, col_offset=38), lineno=556, col_offset=26)], [], None, None, lineno=556, col_offset=16), lineno=556, col_offset=16)], [], lineno=554, col_offset=12)], lineno=552, col_offset=8)], [], lineno=542, col_offset=8)], [], lineno=541, col_offset=4), FunctionDef('test_non_existing_multicall', arguments([Name('self', Param(), lineno=558, col_offset=36)], None, None, []), [TryExcept([Assign([Name('p', Store(), lineno=560, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=560, col_offset=16), 'ServerProxy', Load(), lineno=560, col_offset=16), [Name('URL', Load(), lineno=560, col_offset=38)], [], None, None, lineno=560, col_offset=16), lineno=560, col_offset=12), Assign([Name('multicall', Store(), lineno=561, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=561, col_offset=24), 'MultiCall', Load(), lineno=561, col_offset=24), [Name('p', Load(), lineno=561, col_offset=44)], [], None, None, lineno=561, col_offset=24), lineno=561, col_offset=12), Expr(Call(Attribute(Name('multicall', Load(), lineno=562, col_offset=12), 'this_is_not_exists', Load(), lineno=562, col_offset=12), [], [], None, None, lineno=562, col_offset=12), lineno=562, col_offset=12), Assign([Name('result', Store(), lineno=563, col_offset=12)], Call(Name('multicall', Load(), lineno=563, col_offset=21), [], [], None, None, lineno=563, col_offset=21), lineno=563, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=569, col_offset=12), 'assertEqual', Load(), lineno=569, col_offset=12), [Subscript(Subscript(Attribute(Name('result', Load(), lineno=569, col_offset=29), 'results', Load(), lineno=569, col_offset=29), Index(Num(0, lineno=569, col_offset=44)), Load(), lineno=569, col_offset=29), Index(Str('faultCode', lineno=569, col_offset=47)), Load(), lineno=569, col_offset=29), Num(1, lineno=569, col_offset=61)], [], None, None, lineno=569, col_offset=12), lineno=569, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=570, col_offset=12), 'assertEqual', Load(), lineno=570, col_offset=12), [Subscript(Subscript(Attribute(Name('result', Load(), lineno=570, col_offset=29), 'results', Load(), lineno=570, col_offset=29), Index(Num(0, lineno=570, col_offset=44)), Load(), lineno=570, col_offset=29), Index(Str('faultString', lineno=570, col_offset=47)), Load(), lineno=570, col_offset=29), Str('<type \'exceptions.Exception\'>:method "this_is_not_exists" is not supported', lineno=571, col_offset=16)], [], None, None, lineno=570, col_offset=12), lineno=570, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=573, col_offset=16), 'ProtocolError', Load(), lineno=573, col_offset=16), Attribute(Name('socket', Load(), lineno=573, col_offset=41), 'error', Load(), lineno=573, col_offset=41)], Load(), lineno=573, col_offset=16), Name('e', Store(), lineno=573, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=575, col_offset=19), [Name('e', Load(), lineno=575, col_offset=44)], [], None, None, lineno=575, col_offset=19), lineno=575, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=577, col_offset=16), 'fail', Load(), lineno=577, col_offset=16), [BinOp(Str('%s\n%s', lineno=577, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=577, col_offset=38), Call(Name('getattr', Load(), lineno=577, col_offset=41), [Name('e', Load(), lineno=577, col_offset=49), Str('headers', lineno=577, col_offset=52), Str('', lineno=577, col_offset=63)], [], None, None, lineno=577, col_offset=41)], Load(), lineno=577, col_offset=38), lineno=577, col_offset=26)], [], None, None, lineno=577, col_offset=16), lineno=577, col_offset=16)], [], lineno=575, col_offset=12)], lineno=573, col_offset=8)], [], lineno=559, col_offset=8)], [], lineno=558, col_offset=4), FunctionDef('test_dotted_attribute', arguments([Name('self', Param(), lineno=579, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'assertRaises', Load(), lineno=581, col_offset=8), [Name('AttributeError', Load(), lineno=581, col_offset=26), Attribute(Name('SimpleXMLRPCServer', Load(), lineno=582, col_offset=26), 'resolve_dotted_attribute', Load(), lineno=582, col_offset=26), Name('str', Load(), lineno=582, col_offset=71), Str('__add', lineno=582, col_offset=76)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'assertTrue', Load(), lineno=584, col_offset=8), [Call(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=584, col_offset=24), 'resolve_dotted_attribute', Load(), lineno=584, col_offset=24), [Name('str', Load(), lineno=584, col_offset=68), Str('title', lineno=584, col_offset=73)], [], None, None, lineno=584, col_offset=24)], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=8), 'test_simple1', Load(), lineno=587, col_offset=8), [], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8)], [], lineno=579, col_offset=4)], [], lineno=450, col_offset=0), ClassDef('MultiPathServerTestCase', [Name('BaseServerTestCase', Load(), lineno=589, col_offset=30)], [Assign([Name('threadFunc', Store(), lineno=590, col_offset=4)], Call(Name('staticmethod', Load(), lineno=590, col_offset=17), [Name('http_multi_server', Load(), lineno=590, col_offset=30)], [], None, None, lineno=590, col_offset=17), lineno=590, col_offset=4), Assign([Name('request_count', Store(), lineno=591, col_offset=4)], Num(2, lineno=591, col_offset=20), lineno=591, col_offset=4), FunctionDef('test_path1', arguments([Name('self', Param(), lineno=592, col_offset=19)], None, None, []), [Assign([Name('p', Store(), lineno=593, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=593, col_offset=12), 'ServerProxy', Load(), lineno=593, col_offset=12), [BinOp(Name('URL', Load(), lineno=593, col_offset=34), Add(), Str('/foo', lineno=593, col_offset=38), lineno=593, col_offset=34)], [], None, None, lineno=593, col_offset=12), lineno=593, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=594, col_offset=8), 'assertEqual', Load(), lineno=594, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=594, col_offset=25), 'pow', Load(), lineno=594, col_offset=25), [Num(6, lineno=594, col_offset=31), Num(8, lineno=594, col_offset=33)], [], None, None, lineno=594, col_offset=25), BinOp(Num(6, lineno=594, col_offset=37), Pow(), Num(8, lineno=594, col_offset=40), lineno=594, col_offset=37)], [], None, None, lineno=594, col_offset=8), lineno=594, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=595, col_offset=8), 'assertRaises', Load(), lineno=595, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=595, col_offset=26), 'Fault', Load(), lineno=595, col_offset=26), Attribute(Name('p', Load(), lineno=595, col_offset=43), 'add', Load(), lineno=595, col_offset=43), Num(6, lineno=595, col_offset=50), Num(8, lineno=595, col_offset=53)], [], None, None, lineno=595, col_offset=8), lineno=595, col_offset=8)], [], lineno=592, col_offset=4), FunctionDef('test_path2', arguments([Name('self', Param(), lineno=596, col_offset=19)], None, None, []), [Assign([Name('p', Store(), lineno=597, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=597, col_offset=12), 'ServerProxy', Load(), lineno=597, col_offset=12), [BinOp(Name('URL', Load(), lineno=597, col_offset=34), Add(), Str('/foo/bar', lineno=597, col_offset=38), lineno=597, col_offset=34)], [], None, None, lineno=597, col_offset=12), lineno=597, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=598, col_offset=8), 'assertEqual', Load(), lineno=598, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=598, col_offset=25), 'add', Load(), lineno=598, col_offset=25), [Num(6, lineno=598, col_offset=31), Num(8, lineno=598, col_offset=33)], [], None, None, lineno=598, col_offset=25), BinOp(Num(6, lineno=598, col_offset=37), Add(), Num(8, lineno=598, col_offset=39), lineno=598, col_offset=37)], [], None, None, lineno=598, col_offset=8), lineno=598, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=599, col_offset=8), 'assertRaises', Load(), lineno=599, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=599, col_offset=26), 'Fault', Load(), lineno=599, col_offset=26), Attribute(Name('p', Load(), lineno=599, col_offset=43), 'pow', Load(), lineno=599, col_offset=43), Num(6, lineno=599, col_offset=50), Num(8, lineno=599, col_offset=53)], [], None, None, lineno=599, col_offset=8), lineno=599, col_offset=8)], [], lineno=596, col_offset=4)], [], lineno=589, col_offset=0), ClassDef('BaseKeepaliveServerTestCase', [Name('BaseServerTestCase', Load(), lineno=603, col_offset=34)], [ClassDef('RequestHandler', [Attribute(Name('SimpleXMLRPCServer', Load(), lineno=606, col_offset=25), 'SimpleXMLRPCRequestHandler', Load(), lineno=606, col_offset=25)], [Assign([Name('parentClass', Store(), lineno=607, col_offset=8)], Attribute(Name('SimpleXMLRPCServer', Load(), lineno=607, col_offset=22), 'SimpleXMLRPCRequestHandler', Load(), lineno=607, col_offset=22), lineno=607, col_offset=8), Assign([Name('protocol_version', Store(), lineno=608, col_offset=8)], Str('HTTP/1.1', lineno=608, col_offset=27), lineno=608, col_offset=8), Assign([Name('myRequests', Store(), lineno=609, col_offset=8)], List([], Load(), lineno=609, col_offset=21), lineno=609, col_offset=8), FunctionDef('handle', arguments([Name('self', Param(), lineno=610, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=611, col_offset=12), 'myRequests', Load(), lineno=611, col_offset=12), 'append', Load(), lineno=611, col_offset=12), [List([], Load(), lineno=611, col_offset=35)], [], None, None, lineno=611, col_offset=12), lineno=611, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=612, col_offset=12), 'reqidx', Store(), lineno=612, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=612, col_offset=26), [Attribute(Name('self', Load(), lineno=612, col_offset=30), 'myRequests', Load(), lineno=612, col_offset=30)], [], None, None, lineno=612, col_offset=26), Sub(), Num(1, lineno=612, col_offset=47), lineno=612, col_offset=26), lineno=612, col_offset=12), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=613, col_offset=19), 'parentClass', Load(), lineno=613, col_offset=19), 'handle', Load(), lineno=613, col_offset=19), [Name('self', Load(), lineno=613, col_offset=43)], [], None, None, lineno=613, col_offset=19), lineno=613, col_offset=12)], [], lineno=610, col_offset=8), FunctionDef('handle_one_request', arguments([Name('self', Param(), lineno=614, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=615, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=615, col_offset=21), 'parentClass', Load(), lineno=615, col_offset=21), 'handle_one_request', Load(), lineno=615, col_offset=21), [Name('self', Load(), lineno=615, col_offset=57)], [], None, None, lineno=615, col_offset=21), lineno=615, col_offset=12), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=616, col_offset=12), 'myRequests', Load(), lineno=616, col_offset=12), Index(Attribute(Name('self', Load(), lineno=616, col_offset=28), 'reqidx', Load(), lineno=616, col_offset=28)), Load(), lineno=616, col_offset=12), 'append', Load(), lineno=616, col_offset=12), [Attribute(Name('self', Load(), lineno=616, col_offset=48), 'raw_requestline', Load(), lineno=616, col_offset=48)], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=12), Return(Name('result', Load(), lineno=617, col_offset=19), lineno=617, col_offset=12)], [], lineno=614, col_offset=8)], [], lineno=606, col_offset=4), Assign([Name('requestHandler', Store(), lineno=619, col_offset=4)], Name('RequestHandler', Load(), lineno=619, col_offset=21), lineno=619, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=620, col_offset=14)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=622, col_offset=8), 'RequestHandler', Load(), lineno=622, col_offset=8), 'myRequests', Store(), lineno=622, col_offset=8)], List([], Load(), lineno=622, col_offset=41), lineno=622, col_offset=8), Return(Call(Attribute(Name('BaseServerTestCase', Load(), lineno=623, col_offset=15), 'setUp', Load(), lineno=623, col_offset=15), [Name('self', Load(), lineno=623, col_offset=40)], [], None, None, lineno=623, col_offset=15), lineno=623, col_offset=8)], [], lineno=620, col_offset=4)], [], lineno=603, col_offset=0), ClassDef('KeepaliveServerTestCase1', [Name('BaseKeepaliveServerTestCase', Load(), lineno=627, col_offset=31)], [FunctionDef('test_two', arguments([Name('self', Param(), lineno=628, col_offset=17)], None, None, []), [Assign([Name('p', Store(), lineno=629, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=629, col_offset=12), 'ServerProxy', Load(), lineno=629, col_offset=12), [Name('URL', Load(), lineno=629, col_offset=34)], [], None, None, lineno=629, col_offset=12), lineno=629, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=631, col_offset=8), 'assertEqual', Load(), lineno=631, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=631, col_offset=25), 'pow', Load(), lineno=631, col_offset=25), [Num(6, lineno=631, col_offset=31), Num(8, lineno=631, col_offset=33)], [], None, None, lineno=631, col_offset=25), BinOp(Num(6, lineno=631, col_offset=37), Pow(), Num(8, lineno=631, col_offset=40), lineno=631, col_offset=37)], [], None, None, lineno=631, col_offset=8), lineno=631, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=632, col_offset=8), 'assertEqual', Load(), lineno=632, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=632, col_offset=25), 'pow', Load(), lineno=632, col_offset=25), [Num(6, lineno=632, col_offset=31), Num(8, lineno=632, col_offset=33)], [], None, None, lineno=632, col_offset=25), BinOp(Num(6, lineno=632, col_offset=37), Pow(), Num(8, lineno=632, col_offset=40), lineno=632, col_offset=37)], [], None, None, lineno=632, col_offset=8), lineno=632, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=633, col_offset=8), 'assertEqual', Load(), lineno=633, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=633, col_offset=25), 'pow', Load(), lineno=633, col_offset=25), [Num(6, lineno=633, col_offset=31), Num(8, lineno=633, col_offset=33)], [], None, None, lineno=633, col_offset=25), BinOp(Num(6, lineno=633, col_offset=37), Pow(), Num(8, lineno=633, col_offset=40), lineno=633, col_offset=37)], [], None, None, lineno=633, col_offset=8), lineno=633, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=636, col_offset=8), 'assertEqual', Load(), lineno=636, col_offset=8), [Call(Name('len', Load(), lineno=636, col_offset=25), [Attribute(Attribute(Name('self', Load(), lineno=636, col_offset=29), 'RequestHandler', Load(), lineno=636, col_offset=29), 'myRequests', Load(), lineno=636, col_offset=29)], [], None, None, lineno=636, col_offset=25), Num(1, lineno=636, col_offset=62)], [], None, None, lineno=636, col_offset=8), lineno=636, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=640, col_offset=8), 'assertGreaterEqual', Load(), lineno=640, col_offset=8), [Call(Name('len', Load(), lineno=640, col_offset=32), [Subscript(Attribute(Attribute(Name('self', Load(), lineno=640, col_offset=36), 'RequestHandler', Load(), lineno=640, col_offset=36), 'myRequests', Load(), lineno=640, col_offset=36), Index(Num(-1, lineno=640, col_offset=68)), Load(), lineno=640, col_offset=36)], [], None, None, lineno=640, col_offset=32), Num(2, lineno=640, col_offset=73)], [], None, None, lineno=640, col_offset=8), lineno=640, col_offset=8)], [], lineno=628, col_offset=4)], [], lineno=627, col_offset=0), ClassDef('KeepaliveServerTestCase2', [Name('BaseKeepaliveServerTestCase', Load(), lineno=644, col_offset=31)], [Assign([Name('request_count', Store(), lineno=646, col_offset=4)], Num(2, lineno=646, col_offset=18), lineno=646, col_offset=4), FunctionDef('test_close', arguments([Name('self', Param(), lineno=648, col_offset=19)], None, None, []), [Assign([Name('p', Store(), lineno=649, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=649, col_offset=12), 'ServerProxy', Load(), lineno=649, col_offset=12), [Name('URL', Load(), lineno=649, col_offset=34)], [], None, None, lineno=649, col_offset=12), lineno=649, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=8), 'assertEqual', Load(), lineno=651, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=651, col_offset=25), 'pow', Load(), lineno=651, col_offset=25), [Num(6, lineno=651, col_offset=31), Num(8, lineno=651, col_offset=33)], [], None, None, lineno=651, col_offset=25), BinOp(Num(6, lineno=651, col_offset=37), Pow(), Num(8, lineno=651, col_offset=40), lineno=651, col_offset=37)], [], None, None, lineno=651, col_offset=8), lineno=651, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=652, col_offset=8), 'assertEqual', Load(), lineno=652, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=652, col_offset=25), 'pow', Load(), lineno=652, col_offset=25), [Num(6, lineno=652, col_offset=31), Num(8, lineno=652, col_offset=33)], [], None, None, lineno=652, col_offset=25), BinOp(Num(6, lineno=652, col_offset=37), Pow(), Num(8, lineno=652, col_offset=40), lineno=652, col_offset=37)], [], None, None, lineno=652, col_offset=8), lineno=652, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=653, col_offset=8), 'assertEqual', Load(), lineno=653, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=653, col_offset=25), 'pow', Load(), lineno=653, col_offset=25), [Num(6, lineno=653, col_offset=31), Num(8, lineno=653, col_offset=33)], [], None, None, lineno=653, col_offset=25), BinOp(Num(6, lineno=653, col_offset=37), Pow(), Num(8, lineno=653, col_offset=40), lineno=653, col_offset=37)], [], None, None, lineno=653, col_offset=8), lineno=653, col_offset=8), Expr(Call(Call(Name('p', Load(), lineno=654, col_offset=8), [Str('close', lineno=654, col_offset=10)], [], None, None, lineno=654, col_offset=8), [], [], None, None, lineno=654, col_offset=8), lineno=654, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=655, col_offset=8), 'assertEqual', Load(), lineno=655, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=655, col_offset=25), 'pow', Load(), lineno=655, col_offset=25), [Num(6, lineno=655, col_offset=31), Num(8, lineno=655, col_offset=33)], [], None, None, lineno=655, col_offset=25), BinOp(Num(6, lineno=655, col_offset=37), Pow(), Num(8, lineno=655, col_offset=40), lineno=655, col_offset=37)], [], None, None, lineno=655, col_offset=8), lineno=655, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=656, col_offset=8), 'assertEqual', Load(), lineno=656, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=656, col_offset=25), 'pow', Load(), lineno=656, col_offset=25), [Num(6, lineno=656, col_offset=31), Num(8, lineno=656, col_offset=33)], [], None, None, lineno=656, col_offset=25), BinOp(Num(6, lineno=656, col_offset=37), Pow(), Num(8, lineno=656, col_offset=40), lineno=656, col_offset=37)], [], None, None, lineno=656, col_offset=8), lineno=656, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=657, col_offset=8), 'assertEqual', Load(), lineno=657, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=657, col_offset=25), 'pow', Load(), lineno=657, col_offset=25), [Num(6, lineno=657, col_offset=31), Num(8, lineno=657, col_offset=33)], [], None, None, lineno=657, col_offset=25), BinOp(Num(6, lineno=657, col_offset=37), Pow(), Num(8, lineno=657, col_offset=40), lineno=657, col_offset=37)], [], None, None, lineno=657, col_offset=8), lineno=657, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=661, col_offset=8), 'assertEqual', Load(), lineno=661, col_offset=8), [Call(Name('len', Load(), lineno=661, col_offset=25), [Attribute(Attribute(Name('self', Load(), lineno=661, col_offset=29), 'RequestHandler', Load(), lineno=661, col_offset=29), 'myRequests', Load(), lineno=661, col_offset=29)], [], None, None, lineno=661, col_offset=25), Num(2, lineno=661, col_offset=62)], [], None, None, lineno=661, col_offset=8), lineno=661, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=662, col_offset=8), 'assertGreaterEqual', Load(), lineno=662, col_offset=8), [Call(Name('len', Load(), lineno=662, col_offset=32), [Subscript(Attribute(Attribute(Name('self', Load(), lineno=662, col_offset=36), 'RequestHandler', Load(), lineno=662, col_offset=36), 'myRequests', Load(), lineno=662, col_offset=36), Index(Num(-1, lineno=662, col_offset=68)), Load(), lineno=662, col_offset=36)], [], None, None, lineno=662, col_offset=32), Num(2, lineno=662, col_offset=73)], [], None, None, lineno=662, col_offset=8), lineno=662, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=663, col_offset=8), 'assertGreaterEqual', Load(), lineno=663, col_offset=8), [Call(Name('len', Load(), lineno=663, col_offset=32), [Subscript(Attribute(Attribute(Name('self', Load(), lineno=663, col_offset=36), 'RequestHandler', Load(), lineno=663, col_offset=36), 'myRequests', Load(), lineno=663, col_offset=36), Index(Num(-2, lineno=663, col_offset=68)), Load(), lineno=663, col_offset=36)], [], None, None, lineno=663, col_offset=32), Num(2, lineno=663, col_offset=73)], [], None, None, lineno=663, col_offset=8), lineno=663, col_offset=8)], [], lineno=648, col_offset=4), FunctionDef('test_transport', arguments([Name('self', Param(), lineno=665, col_offset=23)], None, None, []), [Assign([Name('p', Store(), lineno=666, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=666, col_offset=12), 'ServerProxy', Load(), lineno=666, col_offset=12), [Name('URL', Load(), lineno=666, col_offset=34)], [], None, None, lineno=666, col_offset=12), lineno=666, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=668, col_offset=8), 'assertEqual', Load(), lineno=668, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=668, col_offset=25), 'pow', Load(), lineno=668, col_offset=25), [Num(6, lineno=668, col_offset=31), Num(8, lineno=668, col_offset=33)], [], None, None, lineno=668, col_offset=25), BinOp(Num(6, lineno=668, col_offset=37), Pow(), Num(8, lineno=668, col_offset=40), lineno=668, col_offset=37)], [], None, None, lineno=668, col_offset=8), lineno=668, col_offset=8), Expr(Call(Attribute(Call(Name('p', Load(), lineno=669, col_offset=8), [Str('transport', lineno=669, col_offset=10)], [], None, None, lineno=669, col_offset=8), 'close', Load(), lineno=669, col_offset=8), [], [], None, None, lineno=669, col_offset=8), lineno=669, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=670, col_offset=8), 'assertEqual', Load(), lineno=670, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=670, col_offset=25), 'pow', Load(), lineno=670, col_offset=25), [Num(6, lineno=670, col_offset=31), Num(8, lineno=670, col_offset=33)], [], None, None, lineno=670, col_offset=25), BinOp(Num(6, lineno=670, col_offset=37), Pow(), Num(8, lineno=670, col_offset=40), lineno=670, col_offset=37)], [], None, None, lineno=670, col_offset=8), lineno=670, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=671, col_offset=8), 'assertEqual', Load(), lineno=671, col_offset=8), [Call(Name('len', Load(), lineno=671, col_offset=25), [Attribute(Attribute(Name('self', Load(), lineno=671, col_offset=29), 'RequestHandler', Load(), lineno=671, col_offset=29), 'myRequests', Load(), lineno=671, col_offset=29)], [], None, None, lineno=671, col_offset=25), Num(2, lineno=671, col_offset=62)], [], None, None, lineno=671, col_offset=8), lineno=671, col_offset=8)], [], lineno=665, col_offset=4)], [], lineno=644, col_offset=0), ClassDef('GzipServerTestCase', [Name('BaseServerTestCase', Load(), lineno=675, col_offset=25)], [ClassDef('RequestHandler', [Attribute(Name('SimpleXMLRPCServer', Load(), lineno=678, col_offset=25), 'SimpleXMLRPCRequestHandler', Load(), lineno=678, col_offset=25)], [Assign([Name('parentClass', Store(), lineno=679, col_offset=8)], Attribute(Name('SimpleXMLRPCServer', Load(), lineno=679, col_offset=22), 'SimpleXMLRPCRequestHandler', Load(), lineno=679, col_offset=22), lineno=679, col_offset=8), Assign([Name('protocol_version', Store(), lineno=680, col_offset=8)], Str('HTTP/1.1', lineno=680, col_offset=27), lineno=680, col_offset=8), FunctionDef('do_POST', arguments([Name('self', Param(), lineno=682, col_offset=20)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=684, col_offset=12), '__class__', Load(), lineno=684, col_offset=12), 'content_length', Store(), lineno=684, col_offset=12)], Call(Name('int', Load(), lineno=684, col_offset=44), [Subscript(Attribute(Name('self', Load(), lineno=684, col_offset=48), 'headers', Load(), lineno=684, col_offset=48), Index(Str('content-length', lineno=684, col_offset=61)), Load(), lineno=684, col_offset=48)], [], None, None, lineno=684, col_offset=44), lineno=684, col_offset=12), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=685, col_offset=19), 'parentClass', Load(), lineno=685, col_offset=19), 'do_POST', Load(), lineno=685, col_offset=19), [Name('self', Load(), lineno=685, col_offset=44)], [], None, None, lineno=685, col_offset=19), lineno=685, col_offset=12)], [], lineno=682, col_offset=8)], [], lineno=678, col_offset=4), Assign([Name('requestHandler', Store(), lineno=686, col_offset=4)], Name('RequestHandler', Load(), lineno=686, col_offset=21), lineno=686, col_offset=4), ClassDef('Transport', [Attribute(Name('xmlrpclib', Load(), lineno=688, col_offset=20), 'Transport', Load(), lineno=688, col_offset=20)], [Assign([Name('fake_gzip', Store(), lineno=690, col_offset=8)], Name('False', Load(), lineno=690, col_offset=20), lineno=690, col_offset=8), FunctionDef('parse_response', arguments([Name('self', Param(), lineno=691, col_offset=27), Name('response', Param(), lineno=691, col_offset=33)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=692, col_offset=12), 'response_length', Store(), lineno=692, col_offset=12)], Call(Name('int', Load(), lineno=692, col_offset=33), [Call(Attribute(Name('response', Load(), lineno=692, col_offset=37), 'getheader', Load(), lineno=692, col_offset=37), [Str('content-length', lineno=692, col_offset=56), Num(0, lineno=692, col_offset=74)], [], None, None, lineno=692, col_offset=37)], [], None, None, lineno=692, col_offset=33), lineno=692, col_offset=12), Return(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=693, col_offset=19), 'Transport', Load(), lineno=693, col_offset=19), 'parse_response', Load(), lineno=693, col_offset=19), [Name('self', Load(), lineno=693, col_offset=54), Name('response', Load(), lineno=693, col_offset=60)], [], None, None, lineno=693, col_offset=19), lineno=693, col_offset=12)], [], lineno=691, col_offset=8), FunctionDef('send_content', arguments([Name('self', Param(), lineno=695, col_offset=25), Name('connection', Param(), lineno=695, col_offset=31), Name('body', Param(), lineno=695, col_offset=43)], None, None, []), [If(Attribute(Name('self', Load(), lineno=696, col_offset=15), 'fake_gzip', Load(), lineno=696, col_offset=15), [Expr(Call(Attribute(Name('connection', Load(), lineno=698, col_offset=16), 'putheader', Load(), lineno=698, col_offset=16), [Str('Content-Encoding', lineno=698, col_offset=37), Str('gzip', lineno=698, col_offset=57)], [], None, None, lineno=698, col_offset=16), lineno=698, col_offset=16)], [], lineno=696, col_offset=12), Return(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=699, col_offset=19), 'Transport', Load(), lineno=699, col_offset=19), 'send_content', Load(), lineno=699, col_offset=19), [Name('self', Load(), lineno=699, col_offset=52), Name('connection', Load(), lineno=699, col_offset=58), Name('body', Load(), lineno=699, col_offset=70)], [], None, None, lineno=699, col_offset=19), lineno=699, col_offset=12)], [], lineno=695, col_offset=8)], [], lineno=688, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=701, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('BaseServerTestCase', Load(), lineno=702, col_offset=8), 'setUp', Load(), lineno=702, col_offset=8), [Name('self', Load(), lineno=702, col_offset=33)], [], None, None, lineno=702, col_offset=8), lineno=702, col_offset=8)], [], lineno=701, col_offset=4), FunctionDef('test_gzip_request', arguments([Name('self', Param(), lineno=704, col_offset=26)], None, None, []), [Assign([Name('t', Store(), lineno=705, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=705, col_offset=12), 'Transport', Load(), lineno=705, col_offset=12), [], [], None, None, lineno=705, col_offset=12), lineno=705, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=706, col_offset=8), 'encode_threshold', Store(), lineno=706, col_offset=8)], Name('None', Load(), lineno=706, col_offset=29), lineno=706, col_offset=8), Assign([Name('p', Store(), lineno=707, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=707, col_offset=12), 'ServerProxy', Load(), lineno=707, col_offset=12), [Name('URL', Load(), lineno=707, col_offset=34)], [keyword('transport', Name('t', Load(), lineno=707, col_offset=49))], None, None, lineno=707, col_offset=12), lineno=707, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=708, col_offset=8), 'assertEqual', Load(), lineno=708, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=708, col_offset=25), 'pow', Load(), lineno=708, col_offset=25), [Num(6, lineno=708, col_offset=31), Num(8, lineno=708, col_offset=33)], [], None, None, lineno=708, col_offset=25), BinOp(Num(6, lineno=708, col_offset=37), Pow(), Num(8, lineno=708, col_offset=40), lineno=708, col_offset=37)], [], None, None, lineno=708, col_offset=8), lineno=708, col_offset=8), Assign([Name('a', Store(), lineno=709, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=709, col_offset=12), 'RequestHandler', Load(), lineno=709, col_offset=12), 'content_length', Load(), lineno=709, col_offset=12), lineno=709, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=710, col_offset=8), 'encode_threshold', Store(), lineno=710, col_offset=8)], Num(0, lineno=710, col_offset=29), lineno=710, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=711, col_offset=8), 'assertEqual', Load(), lineno=711, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=711, col_offset=25), 'pow', Load(), lineno=711, col_offset=25), [Num(6, lineno=711, col_offset=31), Num(8, lineno=711, col_offset=33)], [], None, None, lineno=711, col_offset=25), BinOp(Num(6, lineno=711, col_offset=37), Pow(), Num(8, lineno=711, col_offset=40), lineno=711, col_offset=37)], [], None, None, lineno=711, col_offset=8), lineno=711, col_offset=8), Assign([Name('b', Store(), lineno=712, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=712, col_offset=12), 'RequestHandler', Load(), lineno=712, col_offset=12), 'content_length', Load(), lineno=712, col_offset=12), lineno=712, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=713, col_offset=8), 'assertTrue', Load(), lineno=713, col_offset=8), [Compare(Name('a', Load(), lineno=713, col_offset=24), [Gt()], [Name('b', Load(), lineno=713, col_offset=26)], lineno=713, col_offset=24)], [], None, None, lineno=713, col_offset=8), lineno=713, col_offset=8)], [], lineno=704, col_offset=4), FunctionDef('test_bad_gzip_request', arguments([Name('self', Param(), lineno=715, col_offset=30)], None, None, []), [Assign([Name('t', Store(), lineno=716, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=716, col_offset=12), 'Transport', Load(), lineno=716, col_offset=12), [], [], None, None, lineno=716, col_offset=12), lineno=716, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=717, col_offset=8), 'encode_threshold', Store(), lineno=717, col_offset=8)], Name('None', Load(), lineno=717, col_offset=29), lineno=717, col_offset=8), Assign([Attribute(Name('t', Load(), lineno=718, col_offset=8), 'fake_gzip', Store(), lineno=718, col_offset=8)], Name('True', Load(), lineno=718, col_offset=22), lineno=718, col_offset=8), Assign([Name('p', Store(), lineno=719, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=719, col_offset=12), 'ServerProxy', Load(), lineno=719, col_offset=12), [Name('URL', Load(), lineno=719, col_offset=34)], [keyword('transport', Name('t', Load(), lineno=719, col_offset=49))], None, None, lineno=719, col_offset=12), lineno=719, col_offset=8), Assign([Name('cm', Store(), lineno=720, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=720, col_offset=13), 'assertRaisesRegexp', Load(), lineno=720, col_offset=13), [Attribute(Name('xmlrpclib', Load(), lineno=720, col_offset=37), 'ProtocolError', Load(), lineno=720, col_offset=37), Call(Attribute(Name('re', Load(), lineno=721, col_offset=37), 'compile', Load(), lineno=721, col_offset=37), [Str('\\b400\\b', lineno=721, col_offset=48)], [], None, None, lineno=721, col_offset=37)], [], None, None, lineno=720, col_offset=13), lineno=720, col_offset=8), With(Name('cm', Load(), lineno=722, col_offset=13), None, [Expr(Call(Attribute(Name('p', Load(), lineno=723, col_offset=12), 'pow', Load(), lineno=723, col_offset=12), [Num(6, lineno=723, col_offset=18), Num(8, lineno=723, col_offset=21)], [], None, None, lineno=723, col_offset=12), lineno=723, col_offset=12)], lineno=722, col_offset=13)], [], lineno=715, col_offset=4), FunctionDef('test_gsip_response', arguments([Name('self', Param(), lineno=725, col_offset=27)], None, None, []), [Assign([Name('t', Store(), lineno=726, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=726, col_offset=12), 'Transport', Load(), lineno=726, col_offset=12), [], [], None, None, lineno=726, col_offset=12), lineno=726, col_offset=8), Assign([Name('p', Store(), lineno=727, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=727, col_offset=12), 'ServerProxy', Load(), lineno=727, col_offset=12), [Name('URL', Load(), lineno=727, col_offset=34)], [keyword('transport', Name('t', Load(), lineno=727, col_offset=49))], None, None, lineno=727, col_offset=12), lineno=727, col_offset=8), Assign([Name('old', Store(), lineno=728, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=728, col_offset=14), 'requestHandler', Load(), lineno=728, col_offset=14), 'encode_threshold', Load(), lineno=728, col_offset=14), lineno=728, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=729, col_offset=8), 'requestHandler', Load(), lineno=729, col_offset=8), 'encode_threshold', Store(), lineno=729, col_offset=8)], Name('None', Load(), lineno=729, col_offset=47), lineno=729, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=730, col_offset=8), 'assertEqual', Load(), lineno=730, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=730, col_offset=25), 'pow', Load(), lineno=730, col_offset=25), [Num(6, lineno=730, col_offset=31), Num(8, lineno=730, col_offset=33)], [], None, None, lineno=730, col_offset=25), BinOp(Num(6, lineno=730, col_offset=37), Pow(), Num(8, lineno=730, col_offset=40), lineno=730, col_offset=37)], [], None, None, lineno=730, col_offset=8), lineno=730, col_offset=8), Assign([Name('a', Store(), lineno=731, col_offset=8)], Attribute(Name('t', Load(), lineno=731, col_offset=12), 'response_length', Load(), lineno=731, col_offset=12), lineno=731, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=732, col_offset=8), 'requestHandler', Load(), lineno=732, col_offset=8), 'encode_threshold', Store(), lineno=732, col_offset=8)], Num(0, lineno=732, col_offset=47), lineno=732, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=733, col_offset=8), 'assertEqual', Load(), lineno=733, col_offset=8), [Call(Attribute(Name('p', Load(), lineno=733, col_offset=25), 'pow', Load(), lineno=733, col_offset=25), [Num(6, lineno=733, col_offset=31), Num(8, lineno=733, col_offset=33)], [], None, None, lineno=733, col_offset=25), BinOp(Num(6, lineno=733, col_offset=37), Pow(), Num(8, lineno=733, col_offset=40), lineno=733, col_offset=37)], [], None, None, lineno=733, col_offset=8), lineno=733, col_offset=8), Assign([Name('b', Store(), lineno=734, col_offset=8)], Attribute(Name('t', Load(), lineno=734, col_offset=12), 'response_length', Load(), lineno=734, col_offset=12), lineno=734, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=735, col_offset=8), 'requestHandler', Load(), lineno=735, col_offset=8), 'encode_threshold', Store(), lineno=735, col_offset=8)], Name('old', Load(), lineno=735, col_offset=47), lineno=735, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=736, col_offset=8), 'assertTrue', Load(), lineno=736, col_offset=8), [Compare(Name('a', Load(), lineno=736, col_offset=24), [Gt()], [Name('b', Load(), lineno=736, col_offset=26)], lineno=736, col_offset=24)], [], None, None, lineno=736, col_offset=8), lineno=736, col_offset=8)], [], lineno=725, col_offset=4)], [], lineno=675, col_offset=0), ClassDef('ServerProxyTestCase', [Attribute(Name('unittest', Load(), lineno=739, col_offset=26), 'TestCase', Load(), lineno=739, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=740, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=741, col_offset=8), 'TestCase', Load(), lineno=741, col_offset=8), 'setUp', Load(), lineno=741, col_offset=8), [Name('self', Load(), lineno=741, col_offset=32)], [], None, None, lineno=741, col_offset=8), lineno=741, col_offset=8), If(Name('threading', Load(), lineno=742, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=743, col_offset=12), 'url', Store(), lineno=743, col_offset=12)], Name('URL', Load(), lineno=743, col_offset=23), lineno=743, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=748, col_offset=12), 'url', Store(), lineno=748, col_offset=12)], Str('http://', lineno=748, col_offset=23), lineno=748, col_offset=12)], lineno=742, col_offset=8)], [], lineno=740, col_offset=4), FunctionDef('test_close', arguments([Name('self', Param(), lineno=750, col_offset=19)], None, None, []), [Assign([Name('p', Store(), lineno=751, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=751, col_offset=12), 'ServerProxy', Load(), lineno=751, col_offset=12), [Attribute(Name('self', Load(), lineno=751, col_offset=34), 'url', Load(), lineno=751, col_offset=34)], [], None, None, lineno=751, col_offset=12), lineno=751, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=752, col_offset=8), 'assertEqual', Load(), lineno=752, col_offset=8), [Call(Call(Name('p', Load(), lineno=752, col_offset=25), [Str('close', lineno=752, col_offset=27)], [], None, None, lineno=752, col_offset=25), [], [], None, None, lineno=752, col_offset=25), Name('None', Load(), lineno=752, col_offset=39)], [], None, None, lineno=752, col_offset=8), lineno=752, col_offset=8)], [], lineno=750, col_offset=4), FunctionDef('test_transport', arguments([Name('self', Param(), lineno=754, col_offset=23)], None, None, []), [Assign([Name('t', Store(), lineno=755, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=755, col_offset=12), 'Transport', Load(), lineno=755, col_offset=12), [], [], None, None, lineno=755, col_offset=12), lineno=755, col_offset=8), Assign([Name('p', Store(), lineno=756, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=756, col_offset=12), 'ServerProxy', Load(), lineno=756, col_offset=12), [Attribute(Name('self', Load(), lineno=756, col_offset=34), 'url', Load(), lineno=756, col_offset=34)], [keyword('transport', Name('t', Load(), lineno=756, col_offset=54))], None, None, lineno=756, col_offset=12), lineno=756, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=757, col_offset=8), 'assertEqual', Load(), lineno=757, col_offset=8), [Call(Name('p', Load(), lineno=757, col_offset=25), [Str('transport', lineno=757, col_offset=27)], [], None, None, lineno=757, col_offset=25), Name('t', Load(), lineno=757, col_offset=41)], [], None, None, lineno=757, col_offset=8), lineno=757, col_offset=8)], [], lineno=754, col_offset=4)], [], lineno=739, col_offset=0), ClassDef('FailingMessageClass', [Attribute(Name('mimetools', Load(), lineno=761, col_offset=26), 'Message', Load(), lineno=761, col_offset=26)], [FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=762, col_offset=20), Name('key', Param(), lineno=762, col_offset=26)], None, None, []), [Assign([Name('key', Store(), lineno=763, col_offset=8)], Call(Attribute(Name('key', Load(), lineno=763, col_offset=14), 'lower', Load(), lineno=763, col_offset=14), [], [], None, None, lineno=763, col_offset=14), lineno=763, col_offset=8), If(Compare(Name('key', Load(), lineno=764, col_offset=11), [Eq()], [Str('content-length', lineno=764, col_offset=18)], lineno=764, col_offset=11), [Return(Str('I am broken', lineno=765, col_offset=19), lineno=765, col_offset=12)], [], lineno=764, col_offset=8), Return(Call(Attribute(Attribute(Name('mimetools', Load(), lineno=766, col_offset=15), 'Message', Load(), lineno=766, col_offset=15), '__getitem__', Load(), lineno=766, col_offset=15), [Name('self', Load(), lineno=766, col_offset=45), Name('key', Load(), lineno=766, col_offset=51)], [], None, None, lineno=766, col_offset=15), lineno=766, col_offset=8)], [], lineno=762, col_offset=4)], [], lineno=761, col_offset=0), ClassDef('FailingServerTestCase', [Attribute(Name('unittest', Load(), lineno=770, col_offset=28), 'TestCase', Load(), lineno=770, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=771, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=772, col_offset=8), 'evt', Store(), lineno=772, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=772, col_offset=19), 'Event', Load(), lineno=772, col_offset=19), [], [], None, None, lineno=772, col_offset=19), lineno=772, col_offset=8), Assign([Name('serv_args', Store(), lineno=774, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=774, col_offset=21), 'evt', Load(), lineno=774, col_offset=21), Num(1, lineno=774, col_offset=31)], Load(), lineno=774, col_offset=21), lineno=774, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=775, col_offset=8), 'Thread', Load(), lineno=775, col_offset=8), [], [keyword('target', Name('http_server', Load(), lineno=775, col_offset=32)), keyword('args', Name('serv_args', Load(), lineno=775, col_offset=50))], None, None, lineno=775, col_offset=8), 'start', Load(), lineno=775, col_offset=8), [], [], None, None, lineno=775, col_offset=8), lineno=775, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=778, col_offset=8), 'evt', Load(), lineno=778, col_offset=8), 'wait', Load(), lineno=778, col_offset=8), [], [], None, None, lineno=778, col_offset=8), lineno=778, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=779, col_offset=8), 'evt', Load(), lineno=779, col_offset=8), 'clear', Load(), lineno=779, col_offset=8), [], [], None, None, lineno=779, col_offset=8), lineno=779, col_offset=8)], [], lineno=771, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=781, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=783, col_offset=8), 'evt', Load(), lineno=783, col_offset=8), 'wait', Load(), lineno=783, col_offset=8), [], [], None, None, lineno=783, col_offset=8), lineno=783, col_offset=8), Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=785, col_offset=8), 'SimpleXMLRPCServer', Load(), lineno=785, col_offset=8), '_send_traceback_header', Store(), lineno=785, col_offset=8)], Name('False', Load(), lineno=785, col_offset=71), lineno=785, col_offset=8), Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=787, col_offset=8), 'SimpleXMLRPCRequestHandler', Load(), lineno=787, col_offset=8), 'MessageClass', Store(), lineno=787, col_offset=8)], Attribute(Name('mimetools', Load(), lineno=787, col_offset=69), 'Message', Load(), lineno=787, col_offset=69), lineno=787, col_offset=8)], [], lineno=781, col_offset=4), FunctionDef('test_basic', arguments([Name('self', Param(), lineno=789, col_offset=19)], None, None, []), [Assign([Name('flagval', Store(), lineno=791, col_offset=8)], Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=791, col_offset=18), 'SimpleXMLRPCServer', Load(), lineno=791, col_offset=18), '_send_traceback_header', Load(), lineno=791, col_offset=18), lineno=791, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=792, col_offset=8), 'assertEqual', Load(), lineno=792, col_offset=8), [Name('flagval', Load(), lineno=792, col_offset=25), Name('False', Load(), lineno=792, col_offset=34)], [], None, None, lineno=792, col_offset=8), lineno=792, col_offset=8), Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=795, col_offset=8), 'SimpleXMLRPCServer', Load(), lineno=795, col_offset=8), '_send_traceback_header', Store(), lineno=795, col_offset=8)], Name('True', Load(), lineno=795, col_offset=71), lineno=795, col_offset=8), TryExcept([Assign([Name('p', Store(), lineno=799, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=799, col_offset=16), 'ServerProxy', Load(), lineno=799, col_offset=16), [Name('URL', Load(), lineno=799, col_offset=38)], [], None, None, lineno=799, col_offset=16), lineno=799, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=800, col_offset=12), 'assertEqual', Load(), lineno=800, col_offset=12), [Call(Attribute(Name('p', Load(), lineno=800, col_offset=29), 'pow', Load(), lineno=800, col_offset=29), [Num(6, lineno=800, col_offset=35), Num(8, lineno=800, col_offset=37)], [], None, None, lineno=800, col_offset=29), BinOp(Num(6, lineno=800, col_offset=41), Pow(), Num(8, lineno=800, col_offset=44), lineno=800, col_offset=41)], [], None, None, lineno=800, col_offset=12), lineno=800, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=801, col_offset=16), 'ProtocolError', Load(), lineno=801, col_offset=16), Attribute(Name('socket', Load(), lineno=801, col_offset=41), 'error', Load(), lineno=801, col_offset=41)], Load(), lineno=801, col_offset=16), Name('e', Store(), lineno=801, col_offset=56), [If(UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=803, col_offset=19), [Name('e', Load(), lineno=803, col_offset=44)], [], None, None, lineno=803, col_offset=19), lineno=803, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=805, col_offset=16), 'fail', Load(), lineno=805, col_offset=16), [BinOp(Str('%s\n%s', lineno=805, col_offset=26), Mod(), Tuple([Name('e', Load(), lineno=805, col_offset=38), Call(Name('getattr', Load(), lineno=805, col_offset=41), [Name('e', Load(), lineno=805, col_offset=49), Str('headers', lineno=805, col_offset=52), Str('', lineno=805, col_offset=63)], [], None, None, lineno=805, col_offset=41)], Load(), lineno=805, col_offset=38), lineno=805, col_offset=26)], [], None, None, lineno=805, col_offset=16), lineno=805, col_offset=16)], [], lineno=803, col_offset=12)], lineno=801, col_offset=8)], [], lineno=798, col_offset=8)], [], lineno=789, col_offset=4), FunctionDef('test_fail_no_info', arguments([Name('self', Param(), lineno=807, col_offset=26)], None, None, []), [Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=809, col_offset=8), 'SimpleXMLRPCRequestHandler', Load(), lineno=809, col_offset=8), 'MessageClass', Store(), lineno=809, col_offset=8)], Name('FailingMessageClass', Load(), lineno=809, col_offset=69), lineno=809, col_offset=8), TryExcept([Assign([Name('p', Store(), lineno=812, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=812, col_offset=16), 'ServerProxy', Load(), lineno=812, col_offset=16), [Name('URL', Load(), lineno=812, col_offset=38)], [], None, None, lineno=812, col_offset=16), lineno=812, col_offset=12), Expr(Call(Attribute(Name('p', Load(), lineno=813, col_offset=12), 'pow', Load(), lineno=813, col_offset=12), [Num(6, lineno=813, col_offset=18), Num(8, lineno=813, col_offset=20)], [], None, None, lineno=813, col_offset=12), lineno=813, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=814, col_offset=16), 'ProtocolError', Load(), lineno=814, col_offset=16), Attribute(Name('socket', Load(), lineno=814, col_offset=41), 'error', Load(), lineno=814, col_offset=41)], Load(), lineno=814, col_offset=16), Name('e', Store(), lineno=814, col_offset=56), [If(BoolOp(And(), [UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=816, col_offset=19), [Name('e', Load(), lineno=816, col_offset=44)], [], None, None, lineno=816, col_offset=19), lineno=816, col_offset=15), Call(Name('hasattr', Load(), lineno=816, col_offset=51), [Name('e', Load(), lineno=816, col_offset=59), Str('headers', lineno=816, col_offset=62)], [], None, None, lineno=816, col_offset=51)], lineno=816, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=818, col_offset=16), 'assertTrue', Load(), lineno=818, col_offset=16), [Compare(Call(Attribute(Attribute(Name('e', Load(), lineno=818, col_offset=32), 'headers', Load(), lineno=818, col_offset=32), 'get', Load(), lineno=818, col_offset=32), [Str('X-exception', lineno=818, col_offset=46)], [], None, None, lineno=818, col_offset=32), [Is()], [Name('None', Load(), lineno=818, col_offset=64)], lineno=818, col_offset=32)], [], None, None, lineno=818, col_offset=16), lineno=818, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=819, col_offset=16), 'assertTrue', Load(), lineno=819, col_offset=16), [Compare(Call(Attribute(Attribute(Name('e', Load(), lineno=819, col_offset=32), 'headers', Load(), lineno=819, col_offset=32), 'get', Load(), lineno=819, col_offset=32), [Str('X-traceback', lineno=819, col_offset=46)], [], None, None, lineno=819, col_offset=32), [Is()], [Name('None', Load(), lineno=819, col_offset=64)], lineno=819, col_offset=32)], [], None, None, lineno=819, col_offset=16), lineno=819, col_offset=16)], [], lineno=816, col_offset=12)], lineno=814, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=821, col_offset=12), 'fail', Load(), lineno=821, col_offset=12), [Str('ProtocolError not raised', lineno=821, col_offset=22)], [], None, None, lineno=821, col_offset=12), lineno=821, col_offset=12)], lineno=811, col_offset=8)], [], lineno=807, col_offset=4), FunctionDef('test_fail_with_info', arguments([Name('self', Param(), lineno=823, col_offset=28)], None, None, []), [Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=825, col_offset=8), 'SimpleXMLRPCRequestHandler', Load(), lineno=825, col_offset=8), 'MessageClass', Store(), lineno=825, col_offset=8)], Name('FailingMessageClass', Load(), lineno=825, col_offset=69), lineno=825, col_offset=8), Assign([Attribute(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=829, col_offset=8), 'SimpleXMLRPCServer', Load(), lineno=829, col_offset=8), '_send_traceback_header', Store(), lineno=829, col_offset=8)], Name('True', Load(), lineno=829, col_offset=71), lineno=829, col_offset=8), TryExcept([Assign([Name('p', Store(), lineno=832, col_offset=12)], Call(Attribute(Name('xmlrpclib', Load(), lineno=832, col_offset=16), 'ServerProxy', Load(), lineno=832, col_offset=16), [Name('URL', Load(), lineno=832, col_offset=38)], [], None, None, lineno=832, col_offset=16), lineno=832, col_offset=12), Expr(Call(Attribute(Name('p', Load(), lineno=833, col_offset=12), 'pow', Load(), lineno=833, col_offset=12), [Num(6, lineno=833, col_offset=18), Num(8, lineno=833, col_offset=20)], [], None, None, lineno=833, col_offset=12), lineno=833, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('xmlrpclib', Load(), lineno=834, col_offset=16), 'ProtocolError', Load(), lineno=834, col_offset=16), Attribute(Name('socket', Load(), lineno=834, col_offset=41), 'error', Load(), lineno=834, col_offset=41)], Load(), lineno=834, col_offset=16), Name('e', Store(), lineno=834, col_offset=56), [If(BoolOp(And(), [UnaryOp(Not(), Call(Name('is_unavailable_exception', Load(), lineno=836, col_offset=19), [Name('e', Load(), lineno=836, col_offset=44)], [], None, None, lineno=836, col_offset=19), lineno=836, col_offset=15), Call(Name('hasattr', Load(), lineno=836, col_offset=51), [Name('e', Load(), lineno=836, col_offset=59), Str('headers', lineno=836, col_offset=62)], [], None, None, lineno=836, col_offset=51)], lineno=836, col_offset=15), [Assign([Name('expected_err', Store(), lineno=838, col_offset=16)], Str("invalid literal for int() with base 10: 'I am broken'", lineno=838, col_offset=31), lineno=838, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=839, col_offset=16), 'assertEqual', Load(), lineno=839, col_offset=16), [Call(Attribute(Attribute(Name('e', Load(), lineno=839, col_offset=33), 'headers', Load(), lineno=839, col_offset=33), 'get', Load(), lineno=839, col_offset=33), [Str('x-exception', lineno=839, col_offset=47)], [], None, None, lineno=839, col_offset=33), Name('expected_err', Load(), lineno=839, col_offset=63)], [], None, None, lineno=839, col_offset=16), lineno=839, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=840, col_offset=16), 'assertTrue', Load(), lineno=840, col_offset=16), [Compare(Call(Attribute(Attribute(Name('e', Load(), lineno=840, col_offset=32), 'headers', Load(), lineno=840, col_offset=32), 'get', Load(), lineno=840, col_offset=32), [Str('x-traceback', lineno=840, col_offset=46)], [], None, None, lineno=840, col_offset=32), [IsNot()], [Name('None', Load(), lineno=840, col_offset=68)], lineno=840, col_offset=32)], [], None, None, lineno=840, col_offset=16), lineno=840, col_offset=16)], [], lineno=836, col_offset=12)], lineno=834, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=842, col_offset=12), 'fail', Load(), lineno=842, col_offset=12), [Str('ProtocolError not raised', lineno=842, col_offset=22)], [], None, None, lineno=842, col_offset=12), lineno=842, col_offset=12)], lineno=831, col_offset=8)], [], lineno=823, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=769, col_offset=1), 'skipUnless', Load(), lineno=769, col_offset=1), [Name('threading', Load(), lineno=769, col_offset=21), Str('Threading required for this test.', lineno=769, col_offset=32)], [], None, None, lineno=769, col_offset=1)], lineno=769, col_offset=0), ClassDef('CGIHandlerTestCase', [Attribute(Name('unittest', Load(), lineno=844, col_offset=25), 'TestCase', Load(), lineno=844, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=845, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=846, col_offset=8), 'cgi', Store(), lineno=846, col_offset=8)], Call(Attribute(Name('SimpleXMLRPCServer', Load(), lineno=846, col_offset=19), 'CGIXMLRPCRequestHandler', Load(), lineno=846, col_offset=19), [], [], None, None, lineno=846, col_offset=19), lineno=846, col_offset=8)], [], lineno=845, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=848, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=849, col_offset=8), 'cgi', Store(), lineno=849, col_offset=8)], Name('None', Load(), lineno=849, col_offset=19), lineno=849, col_offset=8)], [], lineno=848, col_offset=4), FunctionDef('test_cgi_get', arguments([Name('self', Param(), lineno=851, col_offset=21)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=852, col_offset=13), 'EnvironmentVarGuard', Load(), lineno=852, col_offset=13), [], [], None, None, lineno=852, col_offset=13), Name('env', Store(), lineno=852, col_offset=51), [Assign([Subscript(Name('env', Load(), lineno=853, col_offset=12), Index(Str('REQUEST_METHOD', lineno=853, col_offset=16)), Store(), lineno=853, col_offset=12)], Str('GET', lineno=853, col_offset=36), lineno=853, col_offset=12), With(Call(Attribute(Name('test_support', Load(), lineno=856, col_offset=17), 'captured_stdout', Load(), lineno=856, col_offset=17), [], [], None, None, lineno=856, col_offset=17), Name('data_out', Store(), lineno=856, col_offset=51), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=857, col_offset=16), 'cgi', Load(), lineno=857, col_offset=16), 'handle_request', Load(), lineno=857, col_offset=16), [], [], None, None, lineno=857, col_offset=16), lineno=857, col_offset=16)], lineno=856, col_offset=17), Expr(Call(Attribute(Name('data_out', Load(), lineno=860, col_offset=12), 'seek', Load(), lineno=860, col_offset=12), [Num(0, lineno=860, col_offset=26)], [], None, None, lineno=860, col_offset=12), lineno=860, col_offset=12), Assign([Name('handle', Store(), lineno=861, col_offset=12)], Call(Attribute(Name('data_out', Load(), lineno=861, col_offset=21), 'read', Load(), lineno=861, col_offset=21), [], [], None, None, lineno=861, col_offset=21), lineno=861, col_offset=12), Assign([Name('status', Store(), lineno=862, col_offset=12)], Subscript(Call(Attribute(Name('handle', Load(), lineno=862, col_offset=21), 'split', Load(), lineno=862, col_offset=21), [], [], None, None, lineno=862, col_offset=21), Index(Num(1, lineno=862, col_offset=36)), Load(), lineno=862, col_offset=21), lineno=862, col_offset=12), Assign([Name('message', Store(), lineno=863, col_offset=12)], Call(Attribute(Str(' ', lineno=863, col_offset=22), 'join', Load(), lineno=863, col_offset=22), [Subscript(Call(Attribute(Name('handle', Load(), lineno=863, col_offset=31), 'split', Load(), lineno=863, col_offset=31), [], [], None, None, lineno=863, col_offset=31), Slice(Num(2, lineno=863, col_offset=46), Num(4, lineno=863, col_offset=48), None), Load(), lineno=863, col_offset=31)], [], None, None, lineno=863, col_offset=22), lineno=863, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=865, col_offset=12), 'assertEqual', Load(), lineno=865, col_offset=12), [Name('status', Load(), lineno=865, col_offset=29), Str('400', lineno=865, col_offset=37)], [], None, None, lineno=865, col_offset=12), lineno=865, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=866, col_offset=12), 'assertEqual', Load(), lineno=866, col_offset=12), [Name('message', Load(), lineno=866, col_offset=29), Str('Bad Request', lineno=866, col_offset=38)], [], None, None, lineno=866, col_offset=12), lineno=866, col_offset=12)], lineno=852, col_offset=13)], [], lineno=851, col_offset=4), FunctionDef('test_cgi_xmlrpc_response', arguments([Name('self', Param(), lineno=869, col_offset=33)], None, None, []), [Assign([Name('data', Store(), lineno=870, col_offset=8)], Str("<?xml version='1.0'?>\n        <methodCall>\n            <methodName>test_method</methodName>\n            <params>\n                <param>\n                    <value><string>foo</string></value>\n                </param>\n                <param>\n                    <value><string>bar</string></value>\n                </param>\n            </params>\n        </methodCall>\n        ", lineno=882, col_offset=-1), lineno=870, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=884, col_offset=13), 'EnvironmentVarGuard', Load(), lineno=884, col_offset=13), [], [], None, None, lineno=884, col_offset=13), Name('env', Store(), lineno=884, col_offset=51), [With(Call(Attribute(Name('test_support', Load(), lineno=885, col_offset=13), 'captured_stdout', Load(), lineno=885, col_offset=13), [], [], None, None, lineno=885, col_offset=13), Name('data_out', Store(), lineno=885, col_offset=47), [With(Call(Attribute(Name('test_support', Load(), lineno=886, col_offset=13), 'captured_stdin', Load(), lineno=886, col_offset=13), [], [], None, None, lineno=886, col_offset=13), Name('data_in', Store(), lineno=886, col_offset=46), [Expr(Call(Attribute(Name('data_in', Load(), lineno=887, col_offset=12), 'write', Load(), lineno=887, col_offset=12), [Name('data', Load(), lineno=887, col_offset=26)], [], None, None, lineno=887, col_offset=12), lineno=887, col_offset=12), Expr(Call(Attribute(Name('data_in', Load(), lineno=888, col_offset=12), 'seek', Load(), lineno=888, col_offset=12), [Num(0, lineno=888, col_offset=25)], [], None, None, lineno=888, col_offset=12), lineno=888, col_offset=12), Assign([Subscript(Name('env', Load(), lineno=889, col_offset=12), Index(Str('CONTENT_LENGTH', lineno=889, col_offset=16)), Store(), lineno=889, col_offset=12)], Call(Name('str', Load(), lineno=889, col_offset=36), [Call(Name('len', Load(), lineno=889, col_offset=40), [Name('data', Load(), lineno=889, col_offset=44)], [], None, None, lineno=889, col_offset=40)], [], None, None, lineno=889, col_offset=36), lineno=889, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=890, col_offset=12), 'cgi', Load(), lineno=890, col_offset=12), 'handle_request', Load(), lineno=890, col_offset=12), [], [], None, None, lineno=890, col_offset=12), lineno=890, col_offset=12)], lineno=886, col_offset=13)], lineno=885, col_offset=13)], lineno=884, col_offset=13), Expr(Call(Attribute(Name('data_out', Load(), lineno=891, col_offset=8), 'seek', Load(), lineno=891, col_offset=8), [Num(0, lineno=891, col_offset=22)], [], None, None, lineno=891, col_offset=8), lineno=891, col_offset=8), Assign([Name('handle', Store(), lineno=894, col_offset=8)], Call(Attribute(Name('data_out', Load(), lineno=894, col_offset=17), 'read', Load(), lineno=894, col_offset=17), [], [], None, None, lineno=894, col_offset=17), lineno=894, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=897, col_offset=8), 'assertRaises', Load(), lineno=897, col_offset=8), [Attribute(Name('xmlrpclib', Load(), lineno=897, col_offset=26), 'Fault', Load(), lineno=897, col_offset=26), Attribute(Name('xmlrpclib', Load(), lineno=897, col_offset=43), 'loads', Load(), lineno=897, col_offset=43), Subscript(Name('handle', Load(), lineno=897, col_offset=60), Slice(Num(44, lineno=897, col_offset=67), None, None), Load(), lineno=897, col_offset=60)], [], None, None, lineno=897, col_offset=8), lineno=897, col_offset=8), Assign([Name('content', Store(), lineno=904, col_offset=8)], Subscript(Name('handle', Load(), lineno=904, col_offset=18), Slice(Call(Attribute(Name('handle', Load(), lineno=904, col_offset=25), 'find', Load(), lineno=904, col_offset=25), [Str('<?xml', lineno=904, col_offset=37)], [], None, None, lineno=904, col_offset=25), None, None), Load(), lineno=904, col_offset=18), lineno=904, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=906, col_offset=8), 'assertEqual', Load(), lineno=906, col_offset=8), [Call(Name('int', Load(), lineno=907, col_offset=12), [Call(Attribute(Call(Attribute(Name('re', Load(), lineno=907, col_offset=16), 'search', Load(), lineno=907, col_offset=16), [Str('Content-Length: (\\d+)', lineno=907, col_offset=26), Name('handle', Load(), lineno=907, col_offset=51)], [], None, None, lineno=907, col_offset=16), 'group', Load(), lineno=907, col_offset=16), [Num(1, lineno=907, col_offset=65)], [], None, None, lineno=907, col_offset=16)], [], None, None, lineno=907, col_offset=12), Call(Name('len', Load(), lineno=908, col_offset=12), [Name('content', Load(), lineno=908, col_offset=16)], [], None, None, lineno=908, col_offset=12)], [], None, None, lineno=906, col_offset=8), lineno=906, col_offset=8)], [], lineno=869, col_offset=4)], [], lineno=844, col_offset=0), ClassDef('FakeSocket', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=913, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=914, col_offset=8), 'data', Store(), lineno=914, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=914, col_offset=20), 'StringIO', Load(), lineno=914, col_offset=20), [], [], None, None, lineno=914, col_offset=20), lineno=914, col_offset=8)], [], lineno=913, col_offset=4), FunctionDef('send', arguments([Name('self', Param(), lineno=916, col_offset=13), Name('buf', Param(), lineno=916, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=917, col_offset=8), 'data', Load(), lineno=917, col_offset=8), 'write', Load(), lineno=917, col_offset=8), [Name('buf', Load(), lineno=917, col_offset=24)], [], None, None, lineno=917, col_offset=8), lineno=917, col_offset=8), Return(Call(Name('len', Load(), lineno=918, col_offset=15), [Name('buf', Load(), lineno=918, col_offset=19)], [], None, None, lineno=918, col_offset=15), lineno=918, col_offset=8)], [], lineno=916, col_offset=4), FunctionDef('sendall', arguments([Name('self', Param(), lineno=920, col_offset=16), Name('buf', Param(), lineno=920, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=921, col_offset=8), 'data', Load(), lineno=921, col_offset=8), 'write', Load(), lineno=921, col_offset=8), [Name('buf', Load(), lineno=921, col_offset=24)], [], None, None, lineno=921, col_offset=8), lineno=921, col_offset=8)], [], lineno=920, col_offset=4), FunctionDef('getvalue', arguments([Name('self', Param(), lineno=923, col_offset=17)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=924, col_offset=15), 'data', Load(), lineno=924, col_offset=15), 'getvalue', Load(), lineno=924, col_offset=15), [], [], None, None, lineno=924, col_offset=15), lineno=924, col_offset=8)], [], lineno=923, col_offset=4), FunctionDef('makefile', arguments([Name('self', Param(), lineno=926, col_offset=17), Name('x', Param(), lineno=926, col_offset=23), Name('y', Param(), lineno=926, col_offset=30)], None, None, [Str('r', lineno=926, col_offset=25), Num(-1, lineno=926, col_offset=33)]), [Raise(Name('RuntimeError', Load(), lineno=927, col_offset=14), None, None, lineno=927, col_offset=8)], [], lineno=926, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=929, col_offset=14)], None, None, []), [Pass( lineno=930, col_offset=8)], [], lineno=929, col_offset=4)], [], lineno=911, col_offset=0), ClassDef('FakeTransport', [Attribute(Name('xmlrpclib', Load(), lineno=932, col_offset=20), 'Transport', Load(), lineno=932, col_offset=20)], [Expr(Str("A Transport instance that records instead of sending a request.\n\n    This class replaces the actual socket used by httplib with a\n    FakeSocket object that records the request.  It doesn't provide a\n    response.\n    ", lineno=938, col_offset=-1), lineno=938, col_offset=-1), FunctionDef('make_connection', arguments([Name('self', Param(), lineno=940, col_offset=24), Name('host', Param(), lineno=940, col_offset=30)], None, None, []), [Assign([Name('conn', Store(), lineno=941, col_offset=8)], Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=941, col_offset=15), 'Transport', Load(), lineno=941, col_offset=15), 'make_connection', Load(), lineno=941, col_offset=15), [Name('self', Load(), lineno=941, col_offset=51), Name('host', Load(), lineno=941, col_offset=57)], [], None, None, lineno=941, col_offset=15), lineno=941, col_offset=8), Assign([Attribute(Name('conn', Load(), lineno=942, col_offset=8), 'sock', Store(), lineno=942, col_offset=8), Attribute(Name('self', Load(), lineno=942, col_offset=20), 'fake_socket', Store(), lineno=942, col_offset=20)], Call(Name('FakeSocket', Load(), lineno=942, col_offset=39), [], [], None, None, lineno=942, col_offset=39), lineno=942, col_offset=8), Return(Name('conn', Load(), lineno=943, col_offset=15), lineno=943, col_offset=8)], [], lineno=940, col_offset=4)], [], lineno=932, col_offset=0), ClassDef('TransportSubclassTestCase', [Attribute(Name('unittest', Load(), lineno=945, col_offset=32), 'TestCase', Load(), lineno=945, col_offset=32)], [FunctionDef('issue_request', arguments([Name('self', Param(), lineno=947, col_offset=22), Name('transport_class', Param(), lineno=947, col_offset=28)], None, None, []), [Expr(Str('Return an HTTP request made via transport_class.', lineno=948, col_offset=8), lineno=948, col_offset=8), Assign([Name('transport', Store(), lineno=949, col_offset=8)], Call(Name('transport_class', Load(), lineno=949, col_offset=20), [], [], None, None, lineno=949, col_offset=20), lineno=949, col_offset=8), Assign([Name('proxy', Store(), lineno=950, col_offset=8)], Call(Attribute(Name('xmlrpclib', Load(), lineno=950, col_offset=16), 'ServerProxy', Load(), lineno=950, col_offset=16), [Str('http://example.com/', lineno=950, col_offset=38)], [keyword('transport', Name('transport', Load(), lineno=951, col_offset=48))], None, None, lineno=950, col_offset=16), lineno=950, col_offset=8), TryExcept([Expr(Call(Attribute(Name('proxy', Load(), lineno=953, col_offset=12), 'pow', Load(), lineno=953, col_offset=12), [Num(6, lineno=953, col_offset=22), Num(8, lineno=953, col_offset=25)], [], None, None, lineno=953, col_offset=12), lineno=953, col_offset=12)], [ExceptHandler(Name('RuntimeError', Load(), lineno=954, col_offset=15), None, [Return(Call(Attribute(Attribute(Name('transport', Load(), lineno=955, col_offset=19), 'fake_socket', Load(), lineno=955, col_offset=19), 'getvalue', Load(), lineno=955, col_offset=19), [], [], None, None, lineno=955, col_offset=19), lineno=955, col_offset=12)], lineno=954, col_offset=8)], [], lineno=952, col_offset=8), Return(Name('None', Load(), lineno=956, col_offset=15), lineno=956, col_offset=8)], [], lineno=947, col_offset=4), FunctionDef('test_custom_user_agent', arguments([Name('self', Param(), lineno=958, col_offset=31)], None, None, []), [ClassDef('TestTransport', [Name('FakeTransport', Load(), lineno=959, col_offset=28)], [FunctionDef('send_user_agent', arguments([Name('self', Param(), lineno=961, col_offset=32), Name('conn', Param(), lineno=961, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=962, col_offset=16), 'Transport', Load(), lineno=962, col_offset=16), 'send_user_agent', Load(), lineno=962, col_offset=16), [Name('self', Load(), lineno=962, col_offset=52), Name('conn', Load(), lineno=962, col_offset=58)], [], None, None, lineno=962, col_offset=16), lineno=962, col_offset=16), Expr(Call(Attribute(Name('conn', Load(), lineno=963, col_offset=16), 'putheader', Load(), lineno=963, col_offset=16), [Str('X-Test', lineno=963, col_offset=31), Str('test_custom_user_agent', lineno=963, col_offset=41)], [], None, None, lineno=963, col_offset=16), lineno=963, col_offset=16)], [], lineno=961, col_offset=12)], [], lineno=959, col_offset=8), Assign([Name('req', Store(), lineno=965, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=965, col_offset=14), 'issue_request', Load(), lineno=965, col_offset=14), [Name('TestTransport', Load(), lineno=965, col_offset=33)], [], None, None, lineno=965, col_offset=14), lineno=965, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=966, col_offset=8), 'assertIn', Load(), lineno=966, col_offset=8), [Str('X-Test: test_custom_user_agent\r\n', lineno=966, col_offset=22), Name('req', Load(), lineno=966, col_offset=60)], [], None, None, lineno=966, col_offset=8), lineno=966, col_offset=8)], [], lineno=958, col_offset=4), FunctionDef('test_send_host', arguments([Name('self', Param(), lineno=968, col_offset=23)], None, None, []), [ClassDef('TestTransport', [Name('FakeTransport', Load(), lineno=969, col_offset=28)], [FunctionDef('send_host', arguments([Name('self', Param(), lineno=971, col_offset=26), Name('conn', Param(), lineno=971, col_offset=32), Name('host', Param(), lineno=971, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=972, col_offset=16), 'Transport', Load(), lineno=972, col_offset=16), 'send_host', Load(), lineno=972, col_offset=16), [Name('self', Load(), lineno=972, col_offset=46), Name('conn', Load(), lineno=972, col_offset=52), Name('host', Load(), lineno=972, col_offset=58)], [], None, None, lineno=972, col_offset=16), lineno=972, col_offset=16), Expr(Call(Attribute(Name('conn', Load(), lineno=973, col_offset=16), 'putheader', Load(), lineno=973, col_offset=16), [Str('X-Test', lineno=973, col_offset=31), Str('test_send_host', lineno=973, col_offset=41)], [], None, None, lineno=973, col_offset=16), lineno=973, col_offset=16)], [], lineno=971, col_offset=12)], [], lineno=969, col_offset=8), Assign([Name('req', Store(), lineno=975, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=975, col_offset=14), 'issue_request', Load(), lineno=975, col_offset=14), [Name('TestTransport', Load(), lineno=975, col_offset=33)], [], None, None, lineno=975, col_offset=14), lineno=975, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=976, col_offset=8), 'assertIn', Load(), lineno=976, col_offset=8), [Str('X-Test: test_send_host\r\n', lineno=976, col_offset=22), Name('req', Load(), lineno=976, col_offset=52)], [], None, None, lineno=976, col_offset=8), lineno=976, col_offset=8)], [], lineno=968, col_offset=4), FunctionDef('test_send_request', arguments([Name('self', Param(), lineno=978, col_offset=26)], None, None, []), [ClassDef('TestTransport', [Name('FakeTransport', Load(), lineno=979, col_offset=28)], [FunctionDef('send_request', arguments([Name('self', Param(), lineno=981, col_offset=29), Name('conn', Param(), lineno=981, col_offset=35), Name('url', Param(), lineno=981, col_offset=41), Name('body', Param(), lineno=981, col_offset=46)], None, None, []), [Expr(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=982, col_offset=16), 'Transport', Load(), lineno=982, col_offset=16), 'send_request', Load(), lineno=982, col_offset=16), [Name('self', Load(), lineno=982, col_offset=49), Name('conn', Load(), lineno=982, col_offset=55), Name('url', Load(), lineno=982, col_offset=61), Name('body', Load(), lineno=982, col_offset=66)], [], None, None, lineno=982, col_offset=16), lineno=982, col_offset=16), Expr(Call(Attribute(Name('conn', Load(), lineno=983, col_offset=16), 'putheader', Load(), lineno=983, col_offset=16), [Str('X-Test', lineno=983, col_offset=31), Str('test_send_request', lineno=983, col_offset=41)], [], None, None, lineno=983, col_offset=16), lineno=983, col_offset=16)], [], lineno=981, col_offset=12)], [], lineno=979, col_offset=8), Assign([Name('req', Store(), lineno=985, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=985, col_offset=14), 'issue_request', Load(), lineno=985, col_offset=14), [Name('TestTransport', Load(), lineno=985, col_offset=33)], [], None, None, lineno=985, col_offset=14), lineno=985, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=986, col_offset=8), 'assertIn', Load(), lineno=986, col_offset=8), [Str('X-Test: test_send_request\r\n', lineno=986, col_offset=22), Name('req', Load(), lineno=986, col_offset=55)], [], None, None, lineno=986, col_offset=8), lineno=986, col_offset=8)], [], lineno=978, col_offset=4), FunctionDef('test_send_content', arguments([Name('self', Param(), lineno=988, col_offset=26)], None, None, []), [ClassDef('TestTransport', [Name('FakeTransport', Load(), lineno=989, col_offset=28)], [FunctionDef('send_content', arguments([Name('self', Param(), lineno=991, col_offset=29), Name('conn', Param(), lineno=991, col_offset=35), Name('body', Param(), lineno=991, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('conn', Load(), lineno=992, col_offset=16), 'putheader', Load(), lineno=992, col_offset=16), [Str('X-Test', lineno=992, col_offset=31), Str('test_send_content', lineno=992, col_offset=41)], [], None, None, lineno=992, col_offset=16), lineno=992, col_offset=16), Expr(Call(Attribute(Attribute(Name('xmlrpclib', Load(), lineno=993, col_offset=16), 'Transport', Load(), lineno=993, col_offset=16), 'send_content', Load(), lineno=993, col_offset=16), [Name('self', Load(), lineno=993, col_offset=49), Name('conn', Load(), lineno=993, col_offset=55), Name('body', Load(), lineno=993, col_offset=61)], [], None, None, lineno=993, col_offset=16), lineno=993, col_offset=16)], [], lineno=991, col_offset=12)], [], lineno=989, col_offset=8), Assign([Name('req', Store(), lineno=995, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=995, col_offset=14), 'issue_request', Load(), lineno=995, col_offset=14), [Name('TestTransport', Load(), lineno=995, col_offset=33)], [], None, None, lineno=995, col_offset=14), lineno=995, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=996, col_offset=8), 'assertIn', Load(), lineno=996, col_offset=8), [Str('X-Test: test_send_content\r\n', lineno=996, col_offset=22), Name('req', Load(), lineno=996, col_offset=55)], [], None, None, lineno=996, col_offset=8), lineno=996, col_offset=8)], [], lineno=988, col_offset=4)], [], lineno=945, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('xmlrpc_tests', Store(), lineno=1000, col_offset=4)], List([Name('XMLRPCTestCase', Load(), lineno=1000, col_offset=20), Name('HelperTestCase', Load(), lineno=1000, col_offset=36), Name('DateTimeTestCase', Load(), lineno=1000, col_offset=52), Name('BinaryTestCase', Load(), lineno=1001, col_offset=9), Name('FaultTestCase', Load(), lineno=1001, col_offset=25), Name('TransportSubclassTestCase', Load(), lineno=1001, col_offset=40)], Load(), lineno=1000, col_offset=19), lineno=1000, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1002, col_offset=4), 'append', Load(), lineno=1002, col_offset=4), [Name('SimpleServerTestCase', Load(), lineno=1002, col_offset=24)], [], None, None, lineno=1002, col_offset=4), lineno=1002, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1003, col_offset=4), 'append', Load(), lineno=1003, col_offset=4), [Name('KeepaliveServerTestCase1', Load(), lineno=1003, col_offset=24)], [], None, None, lineno=1003, col_offset=4), lineno=1003, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1004, col_offset=4), 'append', Load(), lineno=1004, col_offset=4), [Name('KeepaliveServerTestCase2', Load(), lineno=1004, col_offset=24)], [], None, None, lineno=1004, col_offset=4), lineno=1004, col_offset=4), TryExcept([Import([alias('gzip', None)], lineno=1006, col_offset=8), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1007, col_offset=8), 'append', Load(), lineno=1007, col_offset=8), [Name('GzipServerTestCase', Load(), lineno=1007, col_offset=28)], [], None, None, lineno=1007, col_offset=8), lineno=1007, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=1008, col_offset=11), None, [Pass( lineno=1009, col_offset=8)], lineno=1008, col_offset=4)], [], lineno=1005, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1010, col_offset=4), 'append', Load(), lineno=1010, col_offset=4), [Name('MultiPathServerTestCase', Load(), lineno=1010, col_offset=24)], [], None, None, lineno=1010, col_offset=4), lineno=1010, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1011, col_offset=4), 'append', Load(), lineno=1011, col_offset=4), [Name('ServerProxyTestCase', Load(), lineno=1011, col_offset=24)], [], None, None, lineno=1011, col_offset=4), lineno=1011, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1012, col_offset=4), 'append', Load(), lineno=1012, col_offset=4), [Name('FailingServerTestCase', Load(), lineno=1012, col_offset=24)], [], None, None, lineno=1012, col_offset=4), lineno=1012, col_offset=4), Expr(Call(Attribute(Name('xmlrpc_tests', Load(), lineno=1013, col_offset=4), 'append', Load(), lineno=1013, col_offset=4), [Name('CGIHandlerTestCase', Load(), lineno=1013, col_offset=24)], [], None, None, lineno=1013, col_offset=4), lineno=1013, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=1015, col_offset=4), 'run_unittest', Load(), lineno=1015, col_offset=4), [], [], Name('xmlrpc_tests', Load(), lineno=1015, col_offset=31), None, lineno=1015, col_offset=4), lineno=1015, col_offset=4)], [Attribute(Name('test_support', Load(), lineno=998, col_offset=1), 'reap_threads', Load(), lineno=998, col_offset=1)], lineno=998, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1017, col_offset=3), [Eq()], [Str('__main__', lineno=1017, col_offset=15)], lineno=1017, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=1018, col_offset=4), [], [], None, None, lineno=1018, col_offset=4), lineno=1018, col_offset=4)], [], lineno=1017, col_offset=0)])
