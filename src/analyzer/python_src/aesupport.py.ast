Module([ImportFrom('macsupport', [alias('*', None)], 0, lineno=7, col_offset=0), Assign([Name('AEArrayType', Store(), lineno=10, col_offset=0)], Call(Name('Type', Load(), lineno=10, col_offset=14), [Str('AEArrayType', lineno=10, col_offset=19), Str('c', lineno=10, col_offset=34)], [], None, None, lineno=10, col_offset=14), lineno=10, col_offset=0), Assign([Name('AESendMode', Store(), lineno=11, col_offset=0)], Call(Name('Type', Load(), lineno=11, col_offset=13), [Str('AESendMode', lineno=11, col_offset=18), Str('l', lineno=11, col_offset=32)], [], None, None, lineno=11, col_offset=13), lineno=11, col_offset=0), Assign([Name('AESendPriority', Store(), lineno=12, col_offset=0)], Call(Name('Type', Load(), lineno=12, col_offset=17), [Str('AESendPriority', lineno=12, col_offset=22), Str('h', lineno=12, col_offset=40)], [], None, None, lineno=12, col_offset=17), lineno=12, col_offset=0), Assign([Name('AEInteractAllowed', Store(), lineno=13, col_offset=0)], Call(Name('Type', Load(), lineno=13, col_offset=20), [Str('AEInteractAllowed', lineno=13, col_offset=25), Str('b', lineno=13, col_offset=46)], [], None, None, lineno=13, col_offset=20), lineno=13, col_offset=0), Assign([Name('AEReturnID', Store(), lineno=14, col_offset=0)], Call(Name('Type', Load(), lineno=14, col_offset=13), [Str('AEReturnID', lineno=14, col_offset=18), Str('h', lineno=14, col_offset=32)], [], None, None, lineno=14, col_offset=13), lineno=14, col_offset=0), Assign([Name('AETransactionID', Store(), lineno=15, col_offset=0)], Call(Name('Type', Load(), lineno=15, col_offset=18), [Str('AETransactionID', lineno=15, col_offset=23), Str('l', lineno=15, col_offset=42)], [], None, None, lineno=15, col_offset=18), lineno=15, col_offset=0), Assign([Name('AEEventClass', Store(), lineno=19, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=19, col_offset=15), [Str('AEEventClass', lineno=19, col_offset=26)], [], None, None, lineno=19, col_offset=15), lineno=19, col_offset=0), Assign([Name('AEEventID', Store(), lineno=20, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=20, col_offset=12), [Str('AEEventID', lineno=20, col_offset=23)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=0), Assign([Name('AEKeyword', Store(), lineno=21, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=21, col_offset=12), [Str('AEKeyword', lineno=21, col_offset=23)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=0), Assign([Name('DescType', Store(), lineno=22, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=22, col_offset=11), [Str('DescType', lineno=22, col_offset=22)], [], None, None, lineno=22, col_offset=11), lineno=22, col_offset=0), Assign([Name('AEDesc', Store(), lineno=25, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=25, col_offset=9), [Str('AEDesc', lineno=25, col_offset=20)], [], None, None, lineno=25, col_offset=9), lineno=25, col_offset=0), Assign([Name('AEDesc_ptr', Store(), lineno=26, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=26, col_offset=13), [Str('AEDesc', lineno=26, col_offset=24)], [], None, None, lineno=26, col_offset=13), lineno=26, col_offset=0), Assign([Name('AEAddressDesc', Store(), lineno=28, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=28, col_offset=16), [Str('AEAddressDesc', lineno=28, col_offset=27), Str('AEDesc', lineno=28, col_offset=44)], [], None, None, lineno=28, col_offset=16), lineno=28, col_offset=0), Assign([Name('AEAddressDesc_ptr', Store(), lineno=29, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=29, col_offset=20), [Str('AEAddressDesc', lineno=29, col_offset=31), Str('AEDesc', lineno=29, col_offset=48)], [], None, None, lineno=29, col_offset=20), lineno=29, col_offset=0), Assign([Name('AEDescList', Store(), lineno=31, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=31, col_offset=13), [Str('AEDescList', lineno=31, col_offset=24), Str('AEDesc', lineno=31, col_offset=38)], [], None, None, lineno=31, col_offset=13), lineno=31, col_offset=0), Assign([Name('AEDescList_ptr', Store(), lineno=32, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=32, col_offset=17), [Str('AEDescList', lineno=32, col_offset=28), Str('AEDesc', lineno=32, col_offset=42)], [], None, None, lineno=32, col_offset=17), lineno=32, col_offset=0), Assign([Name('AERecord', Store(), lineno=34, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=34, col_offset=11), [Str('AERecord', lineno=34, col_offset=22), Str('AEDesc', lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=11), lineno=34, col_offset=0), Assign([Name('AERecord_ptr', Store(), lineno=35, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=35, col_offset=15), [Str('AERecord', lineno=35, col_offset=26), Str('AEDesc', lineno=35, col_offset=38)], [], None, None, lineno=35, col_offset=15), lineno=35, col_offset=0), Assign([Name('AppleEvent', Store(), lineno=37, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=37, col_offset=13), [Str('AppleEvent', lineno=37, col_offset=24), Str('AEDesc', lineno=37, col_offset=38)], [], None, None, lineno=37, col_offset=13), lineno=37, col_offset=0), Assign([Name('AppleEvent_ptr', Store(), lineno=38, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=38, col_offset=17), [Str('AppleEvent', lineno=38, col_offset=28), Str('AEDesc', lineno=38, col_offset=42)], [], None, None, lineno=38, col_offset=17), lineno=38, col_offset=0), ClassDef('EHType', [Name('Type', Load(), lineno=41, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=42, col_offset=17), Name('name', Param(), lineno=42, col_offset=23), Name('format', Param(), lineno=42, col_offset=46)], None, None, [Str('EventHandler', lineno=42, col_offset=30), Str('', lineno=42, col_offset=55)]), [Expr(Call(Attribute(Name('Type', Load(), lineno=43, col_offset=8), '__init__', Load(), lineno=43, col_offset=8), [Name('self', Load(), lineno=43, col_offset=22), Name('name', Load(), lineno=43, col_offset=28), Name('format', Load(), lineno=43, col_offset=34)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('declare', arguments([Name('self', Param(), lineno=44, col_offset=16), Name('name', Param(), lineno=44, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=45, col_offset=8), [Str('AEEventHandlerUPP %s__proc__ = upp_GenericEventHandler;', lineno=45, col_offset=15), Name('name', Load(), lineno=45, col_offset=74)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Name('Output', Load(), lineno=46, col_offset=8), [Str('PyObject *%s;', lineno=46, col_offset=15), Name('name', Load(), lineno=46, col_offset=32)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8)], [], lineno=44, col_offset=4), FunctionDef('getargsFormat', arguments([Name('self', Param(), lineno=47, col_offset=22)], None, None, []), [Return(Str('O', lineno=48, col_offset=15), lineno=48, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('getargsArgs', arguments([Name('self', Param(), lineno=49, col_offset=20), Name('name', Param(), lineno=49, col_offset=26)], None, None, []), [Return(BinOp(Str('&%s', lineno=50, col_offset=15), Mod(), Name('name', Load(), lineno=50, col_offset=23), lineno=50, col_offset=15), lineno=50, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('passInput', arguments([Name('self', Param(), lineno=51, col_offset=18), Name('name', Param(), lineno=51, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__proc__, (long)%s', lineno=52, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=52, col_offset=41), Name('name', Load(), lineno=52, col_offset=47)], Load(), lineno=52, col_offset=41), lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=53, col_offset=19), Name('name', Param(), lineno=53, col_offset=25)], None, None, []), [Return(BinOp(Str('&%s__proc__, (long *)&%s', lineno=54, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=54, col_offset=45), Name('name', Load(), lineno=54, col_offset=51)], Load(), lineno=54, col_offset=45), lineno=54, col_offset=15), lineno=54, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('mkvalueFormat', arguments([Name('self', Param(), lineno=55, col_offset=22)], None, None, []), [Return(Str('O', lineno=56, col_offset=15), lineno=56, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('mkvalueArgs', arguments([Name('self', Param(), lineno=57, col_offset=20), Name('name', Param(), lineno=57, col_offset=26)], None, None, []), [Return(Name('name', Load(), lineno=58, col_offset=15), lineno=58, col_offset=8)], [], lineno=57, col_offset=4), FunctionDef('cleanup', arguments([Name('self', Param(), lineno=59, col_offset=16), Name('name', Param(), lineno=59, col_offset=22)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=60, col_offset=8), [Str('Py_INCREF(%s); /* XXX leak, but needed */', lineno=60, col_offset=15), Name('name', Load(), lineno=60, col_offset=60)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8)], [], lineno=59, col_offset=4)], [], lineno=41, col_offset=0), ClassDef('EHNoRefConType', [Name('EHType', Load(), lineno=62, col_offset=21)], [FunctionDef('passInput', arguments([Name('self', Param(), lineno=63, col_offset=18), Name('name', Param(), lineno=63, col_offset=24)], None, None, []), [Return(Str('upp_GenericEventHandler', lineno=64, col_offset=15), lineno=64, col_offset=8)], [], lineno=63, col_offset=4)], [], lineno=62, col_offset=0), Assign([Name('EventHandler', Store(), lineno=66, col_offset=0)], Call(Name('EHType', Load(), lineno=66, col_offset=15), [], [], None, None, lineno=66, col_offset=15), lineno=66, col_offset=0), Assign([Name('EventHandlerNoRefCon', Store(), lineno=67, col_offset=0)], Call(Name('EHNoRefConType', Load(), lineno=67, col_offset=23), [], [], None, None, lineno=67, col_offset=23), lineno=67, col_offset=0), Assign([Name('IdleProcPtr', Store(), lineno=70, col_offset=0)], Call(Name('FakeType', Load(), lineno=70, col_offset=14), [Str('upp_AEIdleProc', lineno=70, col_offset=23)], [], None, None, lineno=70, col_offset=14), lineno=70, col_offset=0), Assign([Name('AEIdleUPP', Store(), lineno=71, col_offset=0)], Name('IdleProcPtr', Load(), lineno=71, col_offset=12), lineno=71, col_offset=0), Assign([Name('EventFilterProcPtr', Store(), lineno=72, col_offset=0)], Call(Name('FakeType', Load(), lineno=72, col_offset=21), [Str('(AEFilterUPP)0', lineno=72, col_offset=30)], [], None, None, lineno=72, col_offset=21), lineno=72, col_offset=0), Assign([Name('AEFilterUPP', Store(), lineno=73, col_offset=0)], Name('EventFilterProcPtr', Load(), lineno=73, col_offset=14), lineno=73, col_offset=0), Assign([Name('NMRecPtr', Store(), lineno=74, col_offset=0)], Call(Name('FakeType', Load(), lineno=74, col_offset=11), [Str('(NMRecPtr)0', lineno=74, col_offset=20)], [], None, None, lineno=74, col_offset=11), lineno=74, col_offset=0), Assign([Name('EventHandlerProcPtr', Store(), lineno=75, col_offset=0)], Call(Name('FakeType', Load(), lineno=75, col_offset=22), [Str('upp_GenericEventHandler', lineno=75, col_offset=31)], [], None, None, lineno=75, col_offset=22), lineno=75, col_offset=0), Assign([Name('AEEventHandlerUPP', Store(), lineno=76, col_offset=0)], Name('EventHandlerProcPtr', Load(), lineno=76, col_offset=20), lineno=76, col_offset=0), Assign([Name('AlwaysFalse', Store(), lineno=77, col_offset=0)], Call(Name('FakeType', Load(), lineno=77, col_offset=14), [Str('0', lineno=77, col_offset=23)], [], None, None, lineno=77, col_offset=14), lineno=77, col_offset=0), Assign([Name('AEFunction', Store(), lineno=80, col_offset=0)], Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=80, col_offset=13), lineno=80, col_offset=0), Assign([Name('AEMethod', Store(), lineno=81, col_offset=0)], Name('OSErrWeakLinkMethodGenerator', Load(), lineno=81, col_offset=11), lineno=81, col_offset=0), Assign([Name('includestuff', Store(), lineno=84, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=84, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n\n#ifdef USE_TOOLBOX_OBJECT_GLUE\nextern PyObject *_AEDesc_New(AEDesc *);\nextern int _AEDesc_Convert(PyObject *, AEDesc *);\n\n#define AEDesc_New _AEDesc_New\n#define AEDesc_NewBorrowed _AEDesc_NewBorrowed\n#define AEDesc_Convert _AEDesc_Convert\n#endif\n\ntypedef long refcontype;\n\nstatic pascal OSErr GenericEventHandler(const AppleEvent *request, AppleEvent *reply, refcontype refcon); /* Forward */\n\nAEEventHandlerUPP upp_GenericEventHandler;\n\nstatic pascal Boolean AEIdleProc(EventRecord *theEvent, long *sleepTime, RgnHandle *mouseRgn)\n{\n        if ( PyOS_InterruptOccurred() )\n                return 1;\n        return 0;\n}\n\nAEIdleUPP upp_AEIdleProc;\n', lineno=110, col_offset=-1), lineno=84, col_offset=15), lineno=84, col_offset=0), Assign([Name('finalstuff', Store(), lineno=112, col_offset=0)], BinOp(Name('finalstuff', Load(), lineno=112, col_offset=13), Add(), Str('\nstatic pascal OSErr\nGenericEventHandler(const AppleEvent *request, AppleEvent *reply, refcontype refcon)\n{\n        PyObject *handler = (PyObject *)refcon;\n        AEDescObject *requestObject, *replyObject;\n        PyObject *args, *res;\n        if ((requestObject = (AEDescObject *)AEDesc_New((AppleEvent *)request)) == NULL) {\n                return -1;\n        }\n        if ((replyObject = (AEDescObject *)AEDesc_New(reply)) == NULL) {\n                Py_DECREF(requestObject);\n                return -1;\n        }\n        if ((args = Py_BuildValue("OO", requestObject, replyObject)) == NULL) {\n                Py_DECREF(requestObject);\n                Py_DECREF(replyObject);\n                return -1;\n        }\n        res = PyEval_CallObject(handler, args);\n        requestObject->ob_itself.descriptorType = \'null\';\n        requestObject->ob_itself.dataHandle = NULL;\n        replyObject->ob_itself.descriptorType = \'null\';\n        replyObject->ob_itself.dataHandle = NULL;\n        Py_DECREF(args);\n        if (res == NULL) {\n                PySys_WriteStderr("Exception in AE event handler function\\n");\n                PyErr_Print();\n                return -1;\n        }\n        Py_DECREF(res);\n        return noErr;\n}\n\nPyObject *AEDesc_NewBorrowed(AEDesc *itself)\n{\n        PyObject *it;\n\n        it = AEDesc_New(itself);\n        if (it)\n                ((AEDescObject *)it)->ob_owned = 0;\n        return (PyObject *)it;\n}\n\n', lineno=156, col_offset=-1), lineno=112, col_offset=13), lineno=112, col_offset=0), Assign([Name('initstuff', Store(), lineno=158, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=158, col_offset=12), Add(), Str('\n        upp_AEIdleProc = NewAEIdleUPP(AEIdleProc);\n        upp_GenericEventHandler = NewAEEventHandlerUPP(GenericEventHandler);\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(AEDesc *, AEDesc_New);\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(AEDesc *, AEDesc_NewBorrowed);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(AEDesc, AEDesc_Convert);\n', lineno=164, col_offset=-1), lineno=158, col_offset=12), lineno=158, col_offset=0), Assign([Name('module', Store(), lineno=166, col_offset=0)], Call(Name('MacModule', Load(), lineno=166, col_offset=9), [Str('_AE', lineno=166, col_offset=19), Str('AE', lineno=166, col_offset=26), Name('includestuff', Load(), lineno=166, col_offset=32), Name('finalstuff', Load(), lineno=166, col_offset=46), Name('initstuff', Load(), lineno=166, col_offset=58)], [], None, None, lineno=166, col_offset=9), lineno=166, col_offset=0), ClassDef('AEDescDefinition', [Name('PEP253Mixin', Load(), lineno=168, col_offset=23), Name('GlobalObjectDefinition', Load(), lineno=168, col_offset=36)], [Assign([Name('getsetlist', Store(), lineno=169, col_offset=4)], List([Tuple([Str('type', lineno=170, col_offset=12), Str('return PyMac_BuildOSType(self->ob_itself.descriptorType);', lineno=171, col_offset=12), Name('None', Load(), lineno=172, col_offset=12), Str('Type of this AEDesc', lineno=173, col_offset=12)], Load(), lineno=170, col_offset=12), Tuple([Str('data', lineno=175, col_offset=12), Str('\n            PyObject *res;\n            Size size;\n            char *ptr;\n            OSErr err;\n\n            size = AEGetDescDataSize(&self->ob_itself);\n            if ( (res = PyString_FromStringAndSize(NULL, size)) == NULL )\n                    return NULL;\n            if ( (ptr = PyString_AsString(res)) == NULL )\n                    return NULL;\n            if ( (err=AEGetDescData(&self->ob_itself, ptr, size)) < 0 )\n                    return PyMac_Error(err);\n            return res;\n            ', lineno=190, col_offset=-1), Name('None', Load(), lineno=191, col_offset=12), Str('The raw data in this AEDesc', lineno=192, col_offset=12)], Load(), lineno=175, col_offset=12)], Load(), lineno=169, col_offset=17), lineno=169, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=195, col_offset=17), Name('name', Param(), lineno=195, col_offset=23), Name('prefix', Param(), lineno=195, col_offset=29), Name('itselftype', Param(), lineno=195, col_offset=44)], None, None, [Name('None', Load(), lineno=195, col_offset=38), Name('None', Load(), lineno=195, col_offset=57)]), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=196, col_offset=8), '__init__', Load(), lineno=196, col_offset=8), [Name('self', Load(), lineno=196, col_offset=40), Name('name', Load(), lineno=196, col_offset=46), BoolOp(Or(), [Name('prefix', Load(), lineno=196, col_offset=52), Name('name', Load(), lineno=196, col_offset=62)], lineno=196, col_offset=52), BoolOp(Or(), [Name('itselftype', Load(), lineno=196, col_offset=68), Name('name', Load(), lineno=196, col_offset=82)], lineno=196, col_offset=68)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=197, col_offset=8), 'argref', Store(), lineno=197, col_offset=8)], Str('*', lineno=197, col_offset=22), lineno=197, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=199, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=200, col_offset=8), 'outputStructMembers', Load(), lineno=200, col_offset=8), [Name('self', Load(), lineno=200, col_offset=51)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Name('Output', Load(), lineno=201, col_offset=8), [Str('int ob_owned;', lineno=201, col_offset=15)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=203, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=204, col_offset=8), 'outputInitStructMembers', Load(), lineno=204, col_offset=8), [Name('self', Load(), lineno=204, col_offset=55)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Expr(Call(Name('Output', Load(), lineno=205, col_offset=8), [Str('it->ob_owned = 1;', lineno=205, col_offset=15)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=203, col_offset=4), FunctionDef('outputCleanupStructMembers', arguments([Name('self', Param(), lineno=207, col_offset=35)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=208, col_offset=8), [Str('if (self->ob_owned) AEDisposeDesc(&self->ob_itself);', lineno=208, col_offset=15)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=207, col_offset=4)], [], lineno=168, col_offset=0), Assign([Name('aedescobject', Store(), lineno=210, col_offset=0)], Call(Name('AEDescDefinition', Load(), lineno=210, col_offset=15), [Str('AEDesc', lineno=210, col_offset=32)], [], None, None, lineno=210, col_offset=15), lineno=210, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=211, col_offset=0), 'addobject', Load(), lineno=211, col_offset=0), [Name('aedescobject', Load(), lineno=211, col_offset=17)], [], None, None, lineno=211, col_offset=0), lineno=211, col_offset=0), Assign([Name('functions', Store(), lineno=213, col_offset=0)], List([], Load(), lineno=213, col_offset=12), lineno=213, col_offset=0), Assign([Name('aedescmethods', Store(), lineno=214, col_offset=0)], List([], Load(), lineno=214, col_offset=16), lineno=214, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=216, col_offset=0), [Str('aegen.py', lineno=216, col_offset=9)], [], None, None, lineno=216, col_offset=0), lineno=216, col_offset=0), Assign([Name('AutoDispose_body', Store(), lineno=220, col_offset=0)], Str('\nint onoff, old;\nif (!PyArg_ParseTuple(_args, "i", &onoff))\n        return NULL;\nold = _self->ob_owned;\n_self->ob_owned = onoff;\n_res = Py_BuildValue("i", old);\nreturn _res;\n', lineno=228, col_offset=-1), lineno=220, col_offset=0), Assign([Name('f', Store(), lineno=229, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=229, col_offset=4), [Str('AutoDispose', lineno=229, col_offset=20), Name('AutoDispose_body', Load(), lineno=229, col_offset=35)], [], None, None, lineno=229, col_offset=4), lineno=229, col_offset=0), Assign([Attribute(Name('f', Load(), lineno=230, col_offset=0), 'docstring', Store(), lineno=230, col_offset=0)], Lambda(arguments([], None, None, []), Str('(int)->int. Automatically AEDisposeDesc the object on Python object cleanup', lineno=230, col_offset=22), lineno=230, col_offset=14), lineno=230, col_offset=0), Expr(Call(Attribute(Name('aedescmethods', Load(), lineno=231, col_offset=0), 'append', Load(), lineno=231, col_offset=0), [Name('f', Load(), lineno=231, col_offset=21)], [], None, None, lineno=231, col_offset=0), lineno=231, col_offset=0), For(Name('f', Store(), lineno=233, col_offset=4), Name('functions', Load(), lineno=233, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=233, col_offset=20), 'add', Load(), lineno=233, col_offset=20), [Name('f', Load(), lineno=233, col_offset=31)], [], None, None, lineno=233, col_offset=20), lineno=233, col_offset=20)], [], lineno=233, col_offset=0), For(Name('f', Store(), lineno=234, col_offset=4), Name('aedescmethods', Load(), lineno=234, col_offset=9), [Expr(Call(Attribute(Name('aedescobject', Load(), lineno=234, col_offset=24), 'add', Load(), lineno=234, col_offset=24), [Name('f', Load(), lineno=234, col_offset=41)], [], None, None, lineno=234, col_offset=24), lineno=234, col_offset=24)], [], lineno=234, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=236, col_offset=0), [Str('_AEmodule.c', lineno=236, col_offset=18)], [], None, None, lineno=236, col_offset=0), lineno=236, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=237, col_offset=0), 'generate', Load(), lineno=237, col_offset=0), [], [], None, None, lineno=237, col_offset=0), lineno=237, col_offset=0)])
