Module([Expr(Str('distutils.unixccompiler\n\nContains the UnixCCompiler class, a subclass of CCompiler that handles\nthe "typical" Unix-style command-line C compiler:\n  * macros defined with -Dname[=value]\n  * macros undefined with -Uname\n  * include search directories specified with -Idir\n  * libraries specified with -lllib\n  * library search directories specified with -Ldir\n  * compile handled by \'cc\' (or similar) executable with -c option:\n    compiles .c to .o\n  * link static library handled by \'ar\' command (possibly with \'ranlib\')\n  * link shared library handled by \'cc -shared\'\n', lineno=14, col_offset=-1), lineno=14, col_offset=-1), Assign([Name('__revision__', Store(), lineno=16, col_offset=0)], Str('$Id: unixccompiler.py 82272 2010-06-27 12:36:16Z ronald.oussoren $', lineno=16, col_offset=15), lineno=16, col_offset=0), Import([alias('os', None), alias('sys', None), alias('re', None)], lineno=18, col_offset=0), ImportFrom('types', [alias('StringType', None), alias('NoneType', None)], 0, lineno=19, col_offset=0), ImportFrom('distutils', [alias('sysconfig', None)], 0, lineno=21, col_offset=0), ImportFrom('distutils.dep_util', [alias('newer', None)], 0, lineno=22, col_offset=0), ImportFrom('distutils.ccompiler', [alias('CCompiler', None), alias('gen_preprocess_options', None), alias('gen_lib_options', None)], 0, lineno=23, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsExecError', None), alias('CompileError', None), alias('LibError', None), alias('LinkError', None)], 0, lineno=25, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=27, col_offset=0), FunctionDef('_darwin_compiler_fixup', arguments([Name('compiler_so', Param(), lineno=44, col_offset=27), Name('cc_args', Param(), lineno=44, col_offset=40)], None, None, []), [Expr(Str("\n    This function will strip '-isysroot PATH' and '-arch ARCH' from the\n    compile flags if the user has specified one them in extra_compile_flags.\n\n    This is needed because '-arch ARCH' adds another architecture to the\n    build, without a way to remove an architecture. Furthermore GCC will\n    barf if multiple '-isysroot' arguments are present.\n    ", lineno=52, col_offset=-1), lineno=52, col_offset=-1), Assign([Name('stripArch', Store(), lineno=53, col_offset=4), Name('stripSysroot', Store(), lineno=53, col_offset=16)], Num(0, lineno=53, col_offset=31), lineno=53, col_offset=4), Assign([Name('compiler_so', Store(), lineno=55, col_offset=4)], Call(Name('list', Load(), lineno=55, col_offset=18), [Name('compiler_so', Load(), lineno=55, col_offset=23)], [], None, None, lineno=55, col_offset=18), lineno=55, col_offset=4), Assign([Name('kernel_version', Store(), lineno=56, col_offset=4)], Subscript(Call(Attribute(Name('os', Load(), lineno=56, col_offset=21), 'uname', Load(), lineno=56, col_offset=21), [], [], None, None, lineno=56, col_offset=21), Index(Num(2, lineno=56, col_offset=32)), Load(), lineno=56, col_offset=21), lineno=56, col_offset=4), Assign([Name('major_version', Store(), lineno=57, col_offset=4)], Call(Name('int', Load(), lineno=57, col_offset=20), [Subscript(Call(Attribute(Name('kernel_version', Load(), lineno=57, col_offset=24), 'split', Load(), lineno=57, col_offset=24), [Str('.', lineno=57, col_offset=45)], [], None, None, lineno=57, col_offset=24), Index(Num(0, lineno=57, col_offset=50)), Load(), lineno=57, col_offset=24)], [], None, None, lineno=57, col_offset=20), lineno=57, col_offset=4), If(Compare(Name('major_version', Load(), lineno=59, col_offset=7), [Lt()], [Num(8, lineno=59, col_offset=23)], lineno=59, col_offset=7), [Assign([Name('stripArch', Store(), lineno=62, col_offset=8), Name('stripSysroot', Store(), lineno=62, col_offset=20)], Name('True', Load(), lineno=62, col_offset=35), lineno=62, col_offset=8)], [Assign([Name('stripArch', Store(), lineno=64, col_offset=8)], Compare(Str('-arch', lineno=64, col_offset=20), [In()], [Name('cc_args', Load(), lineno=64, col_offset=31)], lineno=64, col_offset=20), lineno=64, col_offset=8), Assign([Name('stripSysroot', Store(), lineno=65, col_offset=8)], Compare(Str('-isysroot', lineno=65, col_offset=23), [In()], [Name('cc_args', Load(), lineno=65, col_offset=38)], lineno=65, col_offset=23), lineno=65, col_offset=8)], lineno=59, col_offset=4), If(BoolOp(Or(), [Name('stripArch', Load(), lineno=67, col_offset=7), Compare(Str('ARCHFLAGS', lineno=67, col_offset=20), [In()], [Attribute(Name('os', Load(), lineno=67, col_offset=35), 'environ', Load(), lineno=67, col_offset=35)], lineno=67, col_offset=20)], lineno=67, col_offset=7), [While(Num(1, lineno=68, col_offset=14), [TryExcept([Assign([Name('index', Store(), lineno=70, col_offset=16)], Call(Attribute(Name('compiler_so', Load(), lineno=70, col_offset=24), 'index', Load(), lineno=70, col_offset=24), [Str('-arch', lineno=70, col_offset=42)], [], None, None, lineno=70, col_offset=24), lineno=70, col_offset=16), Delete([Subscript(Name('compiler_so', Load(), lineno=72, col_offset=20), Slice(Name('index', Load(), lineno=72, col_offset=32), BinOp(Name('index', Load(), lineno=72, col_offset=38), Add(), Num(2, lineno=72, col_offset=44), lineno=72, col_offset=38), None), Del(), lineno=72, col_offset=20)], lineno=72, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=73, col_offset=19), None, [Break( lineno=74, col_offset=16)], lineno=73, col_offset=12)], [], lineno=69, col_offset=12)], [], lineno=68, col_offset=8)], [], lineno=67, col_offset=4), If(BoolOp(And(), [Compare(Str('ARCHFLAGS', lineno=76, col_offset=7), [In()], [Attribute(Name('os', Load(), lineno=76, col_offset=22), 'environ', Load(), lineno=76, col_offset=22)], lineno=76, col_offset=7), UnaryOp(Not(), Name('stripArch', Load(), lineno=76, col_offset=41), lineno=76, col_offset=37)], lineno=76, col_offset=7), [Assign([Name('compiler_so', Store(), lineno=79, col_offset=8)], BinOp(Name('compiler_so', Load(), lineno=79, col_offset=22), Add(), Call(Attribute(Subscript(Attribute(Name('os', Load(), lineno=79, col_offset=36), 'environ', Load(), lineno=79, col_offset=36), Index(Str('ARCHFLAGS', lineno=79, col_offset=47)), Load(), lineno=79, col_offset=36), 'split', Load(), lineno=79, col_offset=36), [], [], None, None, lineno=79, col_offset=36), lineno=79, col_offset=22), lineno=79, col_offset=8)], [], lineno=76, col_offset=4), If(Name('stripSysroot', Load(), lineno=81, col_offset=7), [TryExcept([Assign([Name('index', Store(), lineno=83, col_offset=12)], Call(Attribute(Name('compiler_so', Load(), lineno=83, col_offset=20), 'index', Load(), lineno=83, col_offset=20), [Str('-isysroot', lineno=83, col_offset=38)], [], None, None, lineno=83, col_offset=20), lineno=83, col_offset=12), Delete([Subscript(Name('compiler_so', Load(), lineno=85, col_offset=16), Slice(Name('index', Load(), lineno=85, col_offset=28), BinOp(Name('index', Load(), lineno=85, col_offset=34), Add(), Num(2, lineno=85, col_offset=40), lineno=85, col_offset=34), None), Del(), lineno=85, col_offset=16)], lineno=85, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=86, col_offset=15), None, [Pass( lineno=87, col_offset=12)], lineno=86, col_offset=8)], [], lineno=82, col_offset=8)], [], lineno=81, col_offset=4), Assign([Name('sysroot', Store(), lineno=92, col_offset=4)], Name('None', Load(), lineno=92, col_offset=14), lineno=92, col_offset=4), If(Compare(Str('-isysroot', lineno=93, col_offset=7), [In()], [Name('cc_args', Load(), lineno=93, col_offset=22)], lineno=93, col_offset=7), [Assign([Name('idx', Store(), lineno=94, col_offset=8)], Call(Attribute(Name('cc_args', Load(), lineno=94, col_offset=14), 'index', Load(), lineno=94, col_offset=14), [Str('-isysroot', lineno=94, col_offset=28)], [], None, None, lineno=94, col_offset=14), lineno=94, col_offset=8), Assign([Name('sysroot', Store(), lineno=95, col_offset=8)], Subscript(Name('cc_args', Load(), lineno=95, col_offset=18), Index(BinOp(Name('idx', Load(), lineno=95, col_offset=26), Add(), Num(1, lineno=95, col_offset=30), lineno=95, col_offset=26)), Load(), lineno=95, col_offset=18), lineno=95, col_offset=8)], [If(Compare(Str('-isysroot', lineno=96, col_offset=9), [In()], [Name('compiler_so', Load(), lineno=96, col_offset=24)], lineno=96, col_offset=9), [Assign([Name('idx', Store(), lineno=97, col_offset=8)], Call(Attribute(Name('compiler_so', Load(), lineno=97, col_offset=14), 'index', Load(), lineno=97, col_offset=14), [Str('-isysroot', lineno=97, col_offset=32)], [], None, None, lineno=97, col_offset=14), lineno=97, col_offset=8), Assign([Name('sysroot', Store(), lineno=98, col_offset=8)], Subscript(Name('compiler_so', Load(), lineno=98, col_offset=18), Index(BinOp(Name('idx', Load(), lineno=98, col_offset=30), Add(), Num(1, lineno=98, col_offset=34), lineno=98, col_offset=30)), Load(), lineno=98, col_offset=18), lineno=98, col_offset=8)], [], lineno=96, col_offset=9)], lineno=93, col_offset=4), If(BoolOp(And(), [Name('sysroot', Load(), lineno=100, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=100, col_offset=23), 'path', Load(), lineno=100, col_offset=23), 'isdir', Load(), lineno=100, col_offset=23), [Name('sysroot', Load(), lineno=100, col_offset=37)], [], None, None, lineno=100, col_offset=23), lineno=100, col_offset=19)], lineno=100, col_offset=7), [Expr(Call(Attribute(Name('log', Load(), lineno=101, col_offset=8), 'warn', Load(), lineno=101, col_offset=8), [Str("Compiling with an SDK that doesn't seem to exist: %s", lineno=101, col_offset=17), Name('sysroot', Load(), lineno=102, col_offset=16)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('log', Load(), lineno=103, col_offset=8), 'warn', Load(), lineno=103, col_offset=8), [Str('Please check your Xcode installation', lineno=103, col_offset=17)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8)], [], lineno=100, col_offset=4), Return(Name('compiler_so', Load(), lineno=105, col_offset=11), lineno=105, col_offset=4)], [], lineno=44, col_offset=0), ClassDef('UnixCCompiler', [Name('CCompiler', Load(), lineno=107, col_offset=20)], [Assign([Name('compiler_type', Store(), lineno=109, col_offset=4)], Str('unix', lineno=109, col_offset=20), lineno=109, col_offset=4), Assign([Name('executables', Store(), lineno=117, col_offset=4)], Dict([Str('preprocessor', lineno=117, col_offset=19), Str('compiler', lineno=118, col_offset=19), Str('compiler_so', lineno=119, col_offset=19), Str('compiler_cxx', lineno=120, col_offset=19), Str('linker_so', lineno=121, col_offset=19), Str('linker_exe', lineno=122, col_offset=19), Str('archiver', lineno=123, col_offset=19), Str('ranlib', lineno=124, col_offset=19)], [Name('None', Load(), lineno=117, col_offset=36), List([Str('cc', lineno=118, col_offset=37)], Load(), lineno=118, col_offset=36), List([Str('cc', lineno=119, col_offset=37)], Load(), lineno=119, col_offset=36), List([Str('cc', lineno=120, col_offset=37)], Load(), lineno=120, col_offset=36), List([Str('cc', lineno=121, col_offset=37), Str('-shared', lineno=121, col_offset=43)], Load(), lineno=121, col_offset=36), List([Str('cc', lineno=122, col_offset=37)], Load(), lineno=122, col_offset=36), List([Str('ar', lineno=123, col_offset=37), Str('-cr', lineno=123, col_offset=43)], Load(), lineno=123, col_offset=36), Name('None', Load(), lineno=124, col_offset=36)], lineno=117, col_offset=18), lineno=117, col_offset=4), If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=127, col_offset=7), 'platform', Load(), lineno=127, col_offset=7), Slice(None, Num(6, lineno=127, col_offset=21), None), Load(), lineno=127, col_offset=7), [Eq()], [Str('darwin', lineno=127, col_offset=27)], lineno=127, col_offset=7), [Assign([Subscript(Name('executables', Load(), lineno=128, col_offset=8), Index(Str('ranlib', lineno=128, col_offset=20)), Store(), lineno=128, col_offset=8)], List([Str('ranlib', lineno=128, col_offset=33)], Load(), lineno=128, col_offset=32), lineno=128, col_offset=8)], [], lineno=127, col_offset=4), Assign([Name('src_extensions', Store(), lineno=136, col_offset=4)], List([Str('.c', lineno=136, col_offset=22), Str('.C', lineno=136, col_offset=27), Str('.cc', lineno=136, col_offset=32), Str('.cxx', lineno=136, col_offset=38), Str('.cpp', lineno=136, col_offset=45), Str('.m', lineno=136, col_offset=52)], Load(), lineno=136, col_offset=21), lineno=136, col_offset=4), Assign([Name('obj_extension', Store(), lineno=137, col_offset=4)], Str('.o', lineno=137, col_offset=20), lineno=137, col_offset=4), Assign([Name('static_lib_extension', Store(), lineno=138, col_offset=4)], Str('.a', lineno=138, col_offset=27), lineno=138, col_offset=4), Assign([Name('shared_lib_extension', Store(), lineno=139, col_offset=4)], Str('.so', lineno=139, col_offset=27), lineno=139, col_offset=4), Assign([Name('dylib_lib_extension', Store(), lineno=140, col_offset=4)], Str('.dylib', lineno=140, col_offset=26), lineno=140, col_offset=4), Assign([Name('static_lib_format', Store(), lineno=141, col_offset=4), Name('shared_lib_format', Store(), lineno=141, col_offset=24), Name('dylib_lib_format', Store(), lineno=141, col_offset=44)], Str('lib%s%s', lineno=141, col_offset=63), lineno=141, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=142, col_offset=7), 'platform', Load(), lineno=142, col_offset=7), [Eq()], [Str('cygwin', lineno=142, col_offset=23)], lineno=142, col_offset=7), [Assign([Name('exe_extension', Store(), lineno=143, col_offset=8)], Str('.exe', lineno=143, col_offset=24), lineno=143, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('preprocess', arguments([Name('self', Param(), lineno=145, col_offset=19), Name('source', Param(), lineno=145, col_offset=25), Name('output_file', Param(), lineno=146, col_offset=19), Name('macros', Param(), lineno=146, col_offset=37), Name('include_dirs', Param(), lineno=146, col_offset=50), Name('extra_preargs', Param(), lineno=147, col_offset=19), Name('extra_postargs', Param(), lineno=147, col_offset=39)], None, None, [Name('None', Load(), lineno=146, col_offset=31), Name('None', Load(), lineno=146, col_offset=44), Name('None', Load(), lineno=146, col_offset=63), Name('None', Load(), lineno=147, col_offset=33), Name('None', Load(), lineno=147, col_offset=54)]), [Assign([Tuple([Name('ignore', Store(), lineno=148, col_offset=8), Name('macros', Store(), lineno=148, col_offset=16), Name('include_dirs', Store(), lineno=148, col_offset=24)], Store(), lineno=148, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=149, col_offset=12), '_fix_compile_args', Load(), lineno=149, col_offset=12), [Name('None', Load(), lineno=149, col_offset=35), Name('macros', Load(), lineno=149, col_offset=41), Name('include_dirs', Load(), lineno=149, col_offset=49)], [], None, None, lineno=149, col_offset=12), lineno=148, col_offset=8), Assign([Name('pp_opts', Store(), lineno=150, col_offset=8)], Call(Name('gen_preprocess_options', Load(), lineno=150, col_offset=18), [Name('macros', Load(), lineno=150, col_offset=41), Name('include_dirs', Load(), lineno=150, col_offset=49)], [], None, None, lineno=150, col_offset=18), lineno=150, col_offset=8), Assign([Name('pp_args', Store(), lineno=151, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=151, col_offset=18), 'preprocessor', Load(), lineno=151, col_offset=18), Add(), Name('pp_opts', Load(), lineno=151, col_offset=38), lineno=151, col_offset=18), lineno=151, col_offset=8), If(Name('output_file', Load(), lineno=152, col_offset=11), [Expr(Call(Attribute(Name('pp_args', Load(), lineno=153, col_offset=12), 'extend', Load(), lineno=153, col_offset=12), [List([Str('-o', lineno=153, col_offset=28), Name('output_file', Load(), lineno=153, col_offset=34)], Load(), lineno=153, col_offset=27)], [], None, None, lineno=153, col_offset=12), lineno=153, col_offset=12)], [], lineno=152, col_offset=8), If(Name('extra_preargs', Load(), lineno=154, col_offset=11), [Assign([Subscript(Name('pp_args', Load(), lineno=155, col_offset=12), Slice(None, Num(0, lineno=155, col_offset=21), None), Store(), lineno=155, col_offset=12)], Name('extra_preargs', Load(), lineno=155, col_offset=26), lineno=155, col_offset=12)], [], lineno=154, col_offset=8), If(Name('extra_postargs', Load(), lineno=156, col_offset=11), [Expr(Call(Attribute(Name('pp_args', Load(), lineno=157, col_offset=12), 'extend', Load(), lineno=157, col_offset=12), [Name('extra_postargs', Load(), lineno=157, col_offset=27)], [], None, None, lineno=157, col_offset=12), lineno=157, col_offset=12)], [], lineno=156, col_offset=8), Expr(Call(Attribute(Name('pp_args', Load(), lineno=158, col_offset=8), 'append', Load(), lineno=158, col_offset=8), [Name('source', Load(), lineno=158, col_offset=23)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=164, col_offset=11), 'force', Load(), lineno=164, col_offset=11), Compare(Name('output_file', Load(), lineno=164, col_offset=25), [Is()], [Name('None', Load(), lineno=164, col_offset=40)], lineno=164, col_offset=25), Call(Name('newer', Load(), lineno=164, col_offset=48), [Name('source', Load(), lineno=164, col_offset=54), Name('output_file', Load(), lineno=164, col_offset=62)], [], None, None, lineno=164, col_offset=48)], lineno=164, col_offset=11), [If(Name('output_file', Load(), lineno=165, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=16), 'mkpath', Load(), lineno=166, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=166, col_offset=28), 'path', Load(), lineno=166, col_offset=28), 'dirname', Load(), lineno=166, col_offset=28), [Name('output_file', Load(), lineno=166, col_offset=44)], [], None, None, lineno=166, col_offset=28)], [], None, None, lineno=166, col_offset=16), lineno=166, col_offset=16)], [], lineno=165, col_offset=12), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=16), 'spawn', Load(), lineno=168, col_offset=16), [Name('pp_args', Load(), lineno=168, col_offset=27)], [], None, None, lineno=168, col_offset=16), lineno=168, col_offset=16)], [ExceptHandler(Name('DistutilsExecError', Load(), lineno=169, col_offset=19), Name('msg', Store(), lineno=169, col_offset=39), [Raise(Name('CompileError', Load(), lineno=170, col_offset=22), Name('msg', Load(), lineno=170, col_offset=36), None, lineno=170, col_offset=16)], lineno=169, col_offset=12)], [], lineno=167, col_offset=12)], [], lineno=164, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('_compile', arguments([Name('self', Param(), lineno=172, col_offset=17), Name('obj', Param(), lineno=172, col_offset=23), Name('src', Param(), lineno=172, col_offset=28), Name('ext', Param(), lineno=172, col_offset=33), Name('cc_args', Param(), lineno=172, col_offset=38), Name('extra_postargs', Param(), lineno=172, col_offset=47), Name('pp_opts', Param(), lineno=172, col_offset=63)], None, None, []), [Assign([Name('compiler_so', Store(), lineno=173, col_offset=8)], Attribute(Name('self', Load(), lineno=173, col_offset=22), 'compiler_so', Load(), lineno=173, col_offset=22), lineno=173, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=174, col_offset=11), 'platform', Load(), lineno=174, col_offset=11), [Eq()], [Str('darwin', lineno=174, col_offset=27)], lineno=174, col_offset=11), [Assign([Name('compiler_so', Store(), lineno=175, col_offset=12)], Call(Name('_darwin_compiler_fixup', Load(), lineno=175, col_offset=26), [Name('compiler_so', Load(), lineno=175, col_offset=49), BinOp(Name('cc_args', Load(), lineno=175, col_offset=62), Add(), Name('extra_postargs', Load(), lineno=175, col_offset=72), lineno=175, col_offset=62)], [], None, None, lineno=175, col_offset=26), lineno=175, col_offset=12)], [], lineno=174, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=12), 'spawn', Load(), lineno=177, col_offset=12), [BinOp(BinOp(BinOp(Name('compiler_so', Load(), lineno=177, col_offset=23), Add(), Name('cc_args', Load(), lineno=177, col_offset=37), lineno=177, col_offset=23), Add(), List([Name('src', Load(), lineno=177, col_offset=48), Str('-o', lineno=177, col_offset=53), Name('obj', Load(), lineno=177, col_offset=59)], Load(), lineno=177, col_offset=47), lineno=177, col_offset=45), Add(), Name('extra_postargs', Load(), lineno=178, col_offset=23), lineno=177, col_offset=64)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], [ExceptHandler(Name('DistutilsExecError', Load(), lineno=179, col_offset=15), Name('msg', Store(), lineno=179, col_offset=35), [Raise(Name('CompileError', Load(), lineno=180, col_offset=18), Name('msg', Load(), lineno=180, col_offset=32), None, lineno=180, col_offset=12)], lineno=179, col_offset=8)], [], lineno=176, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('create_static_lib', arguments([Name('self', Param(), lineno=182, col_offset=26), Name('objects', Param(), lineno=182, col_offset=32), Name('output_libname', Param(), lineno=182, col_offset=41), Name('output_dir', Param(), lineno=183, col_offset=26), Name('debug', Param(), lineno=183, col_offset=43), Name('target_lang', Param(), lineno=183, col_offset=52)], None, None, [Name('None', Load(), lineno=183, col_offset=37), Num(0, lineno=183, col_offset=49), Name('None', Load(), lineno=183, col_offset=64)]), [Assign([Tuple([Name('objects', Store(), lineno=184, col_offset=8), Name('output_dir', Store(), lineno=184, col_offset=17)], Store(), lineno=184, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=184, col_offset=30), '_fix_object_args', Load(), lineno=184, col_offset=30), [Name('objects', Load(), lineno=184, col_offset=52), Name('output_dir', Load(), lineno=184, col_offset=61)], [], None, None, lineno=184, col_offset=30), lineno=184, col_offset=8), Assign([Name('output_filename', Store(), lineno=186, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'library_filename', Load(), lineno=187, col_offset=12), [Name('output_libname', Load(), lineno=187, col_offset=34)], [keyword('output_dir', Name('output_dir', Load(), lineno=187, col_offset=61))], None, None, lineno=187, col_offset=12), lineno=186, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=189, col_offset=11), '_need_link', Load(), lineno=189, col_offset=11), [Name('objects', Load(), lineno=189, col_offset=27), Name('output_filename', Load(), lineno=189, col_offset=36)], [], None, None, lineno=189, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=12), 'mkpath', Load(), lineno=190, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=190, col_offset=24), 'path', Load(), lineno=190, col_offset=24), 'dirname', Load(), lineno=190, col_offset=24), [Name('output_filename', Load(), lineno=190, col_offset=40)], [], None, None, lineno=190, col_offset=24)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=12), 'spawn', Load(), lineno=191, col_offset=12), [BinOp(BinOp(BinOp(Attribute(Name('self', Load(), lineno=191, col_offset=23), 'archiver', Load(), lineno=191, col_offset=23), Add(), List([Name('output_filename', Load(), lineno=192, col_offset=24)], Load(), lineno=192, col_offset=23), lineno=191, col_offset=23), Add(), Name('objects', Load(), lineno=193, col_offset=23), lineno=192, col_offset=41), Add(), Attribute(Name('self', Load(), lineno=193, col_offset=33), 'objects', Load(), lineno=193, col_offset=33), lineno=193, col_offset=31)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), If(Attribute(Name('self', Load(), lineno=200, col_offset=15), 'ranlib', Load(), lineno=200, col_offset=15), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=20), 'spawn', Load(), lineno=202, col_offset=20), [BinOp(Attribute(Name('self', Load(), lineno=202, col_offset=31), 'ranlib', Load(), lineno=202, col_offset=31), Add(), List([Name('output_filename', Load(), lineno=202, col_offset=46)], Load(), lineno=202, col_offset=45), lineno=202, col_offset=31)], [], None, None, lineno=202, col_offset=20), lineno=202, col_offset=20)], [ExceptHandler(Name('DistutilsExecError', Load(), lineno=203, col_offset=23), Name('msg', Store(), lineno=203, col_offset=43), [Raise(Name('LibError', Load(), lineno=204, col_offset=26), Name('msg', Load(), lineno=204, col_offset=36), None, lineno=204, col_offset=20)], lineno=203, col_offset=16)], [], lineno=201, col_offset=16)], [], lineno=200, col_offset=12)], [Expr(Call(Attribute(Name('log', Load(), lineno=206, col_offset=12), 'debug', Load(), lineno=206, col_offset=12), [Str('skipping %s (up-to-date)', lineno=206, col_offset=22), Name('output_filename', Load(), lineno=206, col_offset=50)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12)], lineno=189, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('link', arguments([Name('self', Param(), lineno=208, col_offset=13), Name('target_desc', Param(), lineno=208, col_offset=19), Name('objects', Param(), lineno=208, col_offset=32), Name('output_filename', Param(), lineno=209, col_offset=13), Name('output_dir', Param(), lineno=209, col_offset=30), Name('libraries', Param(), lineno=209, col_offset=47), Name('library_dirs', Param(), lineno=210, col_offset=13), Name('runtime_library_dirs', Param(), lineno=210, col_offset=32), Name('export_symbols', Param(), lineno=211, col_offset=13), Name('debug', Param(), lineno=211, col_offset=34), Name('extra_preargs', Param(), lineno=211, col_offset=43), Name('extra_postargs', Param(), lineno=212, col_offset=13), Name('build_temp', Param(), lineno=212, col_offset=34), Name('target_lang', Param(), lineno=212, col_offset=51)], None, None, [Name('None', Load(), lineno=209, col_offset=41), Name('None', Load(), lineno=209, col_offset=57), Name('None', Load(), lineno=210, col_offset=26), Name('None', Load(), lineno=210, col_offset=53), Name('None', Load(), lineno=211, col_offset=28), Num(0, lineno=211, col_offset=40), Name('None', Load(), lineno=211, col_offset=57), Name('None', Load(), lineno=212, col_offset=28), Name('None', Load(), lineno=212, col_offset=45), Name('None', Load(), lineno=212, col_offset=63)]), [Assign([Tuple([Name('objects', Store(), lineno=213, col_offset=8), Name('output_dir', Store(), lineno=213, col_offset=17)], Store(), lineno=213, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=213, col_offset=30), '_fix_object_args', Load(), lineno=213, col_offset=30), [Name('objects', Load(), lineno=213, col_offset=52), Name('output_dir', Load(), lineno=213, col_offset=61)], [], None, None, lineno=213, col_offset=30), lineno=213, col_offset=8), Assign([Tuple([Name('libraries', Store(), lineno=214, col_offset=8), Name('library_dirs', Store(), lineno=214, col_offset=19), Name('runtime_library_dirs', Store(), lineno=214, col_offset=33)], Store(), lineno=214, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=215, col_offset=12), '_fix_lib_args', Load(), lineno=215, col_offset=12), [Name('libraries', Load(), lineno=215, col_offset=31), Name('library_dirs', Load(), lineno=215, col_offset=42), Name('runtime_library_dirs', Load(), lineno=215, col_offset=56)], [], None, None, lineno=215, col_offset=12), lineno=214, col_offset=8), Assign([Name('lib_opts', Store(), lineno=217, col_offset=8)], Call(Name('gen_lib_options', Load(), lineno=217, col_offset=19), [Name('self', Load(), lineno=217, col_offset=35), Name('library_dirs', Load(), lineno=217, col_offset=41), Name('runtime_library_dirs', Load(), lineno=217, col_offset=55), Name('libraries', Load(), lineno=218, col_offset=35)], [], None, None, lineno=217, col_offset=19), lineno=217, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=219, col_offset=11), [Name('output_dir', Load(), lineno=219, col_offset=16)], [], None, None, lineno=219, col_offset=11), [NotIn()], [Tuple([Name('StringType', Load(), lineno=219, col_offset=36), Name('NoneType', Load(), lineno=219, col_offset=48)], Load(), lineno=219, col_offset=36)], lineno=219, col_offset=11), [Raise(Name('TypeError', Load(), lineno=220, col_offset=18), Str("'output_dir' must be a string or None", lineno=220, col_offset=29), None, lineno=220, col_offset=12)], [], lineno=219, col_offset=8), If(Compare(Name('output_dir', Load(), lineno=221, col_offset=11), [IsNot()], [Name('None', Load(), lineno=221, col_offset=29)], lineno=221, col_offset=11), [Assign([Name('output_filename', Store(), lineno=222, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=222, col_offset=30), 'path', Load(), lineno=222, col_offset=30), 'join', Load(), lineno=222, col_offset=30), [Name('output_dir', Load(), lineno=222, col_offset=43), Name('output_filename', Load(), lineno=222, col_offset=55)], [], None, None, lineno=222, col_offset=30), lineno=222, col_offset=12)], [], lineno=221, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=224, col_offset=11), '_need_link', Load(), lineno=224, col_offset=11), [Name('objects', Load(), lineno=224, col_offset=27), Name('output_filename', Load(), lineno=224, col_offset=36)], [], None, None, lineno=224, col_offset=11), [Assign([Name('ld_args', Store(), lineno=225, col_offset=12)], BinOp(BinOp(BinOp(Name('objects', Load(), lineno=225, col_offset=23), Add(), Attribute(Name('self', Load(), lineno=225, col_offset=33), 'objects', Load(), lineno=225, col_offset=33), lineno=225, col_offset=23), Add(), Name('lib_opts', Load(), lineno=226, col_offset=23), lineno=225, col_offset=46), Add(), List([Str('-o', lineno=226, col_offset=35), Name('output_filename', Load(), lineno=226, col_offset=41)], Load(), lineno=226, col_offset=34), lineno=226, col_offset=32), lineno=225, col_offset=12), If(Name('debug', Load(), lineno=227, col_offset=15), [Assign([Subscript(Name('ld_args', Load(), lineno=228, col_offset=16), Slice(None, Num(0, lineno=228, col_offset=25), None), Store(), lineno=228, col_offset=16)], List([Str('-g', lineno=228, col_offset=31)], Load(), lineno=228, col_offset=30), lineno=228, col_offset=16)], [], lineno=227, col_offset=12), If(Name('extra_preargs', Load(), lineno=229, col_offset=15), [Assign([Subscript(Name('ld_args', Load(), lineno=230, col_offset=16), Slice(None, Num(0, lineno=230, col_offset=25), None), Store(), lineno=230, col_offset=16)], Name('extra_preargs', Load(), lineno=230, col_offset=30), lineno=230, col_offset=16)], [], lineno=229, col_offset=12), If(Name('extra_postargs', Load(), lineno=231, col_offset=15), [Expr(Call(Attribute(Name('ld_args', Load(), lineno=232, col_offset=16), 'extend', Load(), lineno=232, col_offset=16), [Name('extra_postargs', Load(), lineno=232, col_offset=31)], [], None, None, lineno=232, col_offset=16), lineno=232, col_offset=16)], [], lineno=231, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=12), 'mkpath', Load(), lineno=233, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=233, col_offset=24), 'path', Load(), lineno=233, col_offset=24), 'dirname', Load(), lineno=233, col_offset=24), [Name('output_filename', Load(), lineno=233, col_offset=40)], [], None, None, lineno=233, col_offset=24)], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=12), TryExcept([If(Compare(Name('target_desc', Load(), lineno=235, col_offset=19), [Eq()], [Attribute(Name('CCompiler', Load(), lineno=235, col_offset=34), 'EXECUTABLE', Load(), lineno=235, col_offset=34)], lineno=235, col_offset=19), [Assign([Name('linker', Store(), lineno=236, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=236, col_offset=29), 'linker_exe', Load(), lineno=236, col_offset=29), Slice(None, None, None), Load(), lineno=236, col_offset=29), lineno=236, col_offset=20)], [Assign([Name('linker', Store(), lineno=238, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=238, col_offset=29), 'linker_so', Load(), lineno=238, col_offset=29), Slice(None, None, None), Load(), lineno=238, col_offset=29), lineno=238, col_offset=20)], lineno=235, col_offset=16), If(BoolOp(And(), [Compare(Name('target_lang', Load(), lineno=239, col_offset=19), [Eq()], [Str('c++', lineno=239, col_offset=34)], lineno=239, col_offset=19), Attribute(Name('self', Load(), lineno=239, col_offset=44), 'compiler_cxx', Load(), lineno=239, col_offset=44)], lineno=239, col_offset=19), [Assign([Name('i', Store(), lineno=245, col_offset=20)], Num(0, lineno=245, col_offset=24), lineno=245, col_offset=20), If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=246, col_offset=23), 'path', Load(), lineno=246, col_offset=23), 'basename', Load(), lineno=246, col_offset=23), [Subscript(Name('linker', Load(), lineno=246, col_offset=40), Index(Num(0, lineno=246, col_offset=47)), Load(), lineno=246, col_offset=40)], [], None, None, lineno=246, col_offset=23), [Eq()], [Str('env', lineno=246, col_offset=54)], lineno=246, col_offset=23), [Assign([Name('i', Store(), lineno=247, col_offset=24)], Num(1, lineno=247, col_offset=28), lineno=247, col_offset=24), While(Compare(Str('=', lineno=248, col_offset=30), [In()], [Subscript(Name('linker', Load(), lineno=248, col_offset=37), Index(Name('i', Load(), lineno=248, col_offset=44)), Load(), lineno=248, col_offset=37)], lineno=248, col_offset=30), [Assign([Name('i', Store(), lineno=249, col_offset=28)], BinOp(Name('i', Load(), lineno=249, col_offset=32), Add(), Num(1, lineno=249, col_offset=36), lineno=249, col_offset=32), lineno=249, col_offset=28)], [], lineno=248, col_offset=24)], [], lineno=246, col_offset=20), Assign([Subscript(Name('linker', Load(), lineno=251, col_offset=20), Index(Name('i', Load(), lineno=251, col_offset=27)), Store(), lineno=251, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=251, col_offset=32), 'compiler_cxx', Load(), lineno=251, col_offset=32), Index(Name('i', Load(), lineno=251, col_offset=50)), Load(), lineno=251, col_offset=32), lineno=251, col_offset=20)], [], lineno=239, col_offset=16), If(Compare(Attribute(Name('sys', Load(), lineno=253, col_offset=19), 'platform', Load(), lineno=253, col_offset=19), [Eq()], [Str('darwin', lineno=253, col_offset=35)], lineno=253, col_offset=19), [Assign([Name('linker', Store(), lineno=254, col_offset=20)], Call(Name('_darwin_compiler_fixup', Load(), lineno=254, col_offset=29), [Name('linker', Load(), lineno=254, col_offset=52), Name('ld_args', Load(), lineno=254, col_offset=60)], [], None, None, lineno=254, col_offset=29), lineno=254, col_offset=20)], [], lineno=253, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=16), 'spawn', Load(), lineno=256, col_offset=16), [BinOp(Name('linker', Load(), lineno=256, col_offset=27), Add(), Name('ld_args', Load(), lineno=256, col_offset=36), lineno=256, col_offset=27)], [], None, None, lineno=256, col_offset=16), lineno=256, col_offset=16)], [ExceptHandler(Name('DistutilsExecError', Load(), lineno=257, col_offset=19), Name('msg', Store(), lineno=257, col_offset=39), [Raise(Name('LinkError', Load(), lineno=258, col_offset=22), Name('msg', Load(), lineno=258, col_offset=33), None, lineno=258, col_offset=16)], lineno=257, col_offset=12)], [], lineno=234, col_offset=12)], [Expr(Call(Attribute(Name('log', Load(), lineno=260, col_offset=12), 'debug', Load(), lineno=260, col_offset=12), [Str('skipping %s (up-to-date)', lineno=260, col_offset=22), Name('output_filename', Load(), lineno=260, col_offset=50)], [], None, None, lineno=260, col_offset=12), lineno=260, col_offset=12)], lineno=224, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('library_dir_option', arguments([Name('self', Param(), lineno=266, col_offset=27), Name('dir', Param(), lineno=266, col_offset=33)], None, None, []), [Return(BinOp(Str('-L', lineno=267, col_offset=15), Add(), Name('dir', Load(), lineno=267, col_offset=22), lineno=267, col_offset=15), lineno=267, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('_is_gcc', arguments([Name('self', Param(), lineno=269, col_offset=16), Name('compiler_name', Param(), lineno=269, col_offset=22)], None, None, []), [Return(BoolOp(Or(), [Compare(Str('gcc', lineno=270, col_offset=15), [In()], [Name('compiler_name', Load(), lineno=270, col_offset=24)], lineno=270, col_offset=15), Compare(Str('g++', lineno=270, col_offset=41), [In()], [Name('compiler_name', Load(), lineno=270, col_offset=50)], lineno=270, col_offset=41)], lineno=270, col_offset=15), lineno=270, col_offset=8)], [], lineno=269, col_offset=4), FunctionDef('runtime_library_dir_option', arguments([Name('self', Param(), lineno=272, col_offset=35), Name('dir', Param(), lineno=272, col_offset=41)], None, None, []), [Assign([Name('compiler', Store(), lineno=285, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=285, col_offset=19), 'path', Load(), lineno=285, col_offset=19), 'basename', Load(), lineno=285, col_offset=19), [Call(Attribute(Name('sysconfig', Load(), lineno=285, col_offset=36), 'get_config_var', Load(), lineno=285, col_offset=36), [Str('CC', lineno=285, col_offset=61)], [], None, None, lineno=285, col_offset=36)], [], None, None, lineno=285, col_offset=19), lineno=285, col_offset=8), If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=286, col_offset=11), 'platform', Load(), lineno=286, col_offset=11), Slice(None, Num(6, lineno=286, col_offset=25), None), Load(), lineno=286, col_offset=11), [Eq()], [Str('darwin', lineno=286, col_offset=31)], lineno=286, col_offset=11), [Return(BinOp(Str('-L', lineno=288, col_offset=19), Add(), Name('dir', Load(), lineno=288, col_offset=26), lineno=288, col_offset=19), lineno=288, col_offset=12)], [If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=289, col_offset=13), 'platform', Load(), lineno=289, col_offset=13), Slice(None, Num(5, lineno=289, col_offset=27), None), Load(), lineno=289, col_offset=13), [Eq()], [Str('hp-ux', lineno=289, col_offset=33)], lineno=289, col_offset=13), [If(Call(Attribute(Name('self', Load(), lineno=290, col_offset=15), '_is_gcc', Load(), lineno=290, col_offset=15), [Name('compiler', Load(), lineno=290, col_offset=28)], [], None, None, lineno=290, col_offset=15), [Return(List([Str('-Wl,+s', lineno=291, col_offset=24), BinOp(Str('-L', lineno=291, col_offset=34), Add(), Name('dir', Load(), lineno=291, col_offset=41), lineno=291, col_offset=34)], Load(), lineno=291, col_offset=23), lineno=291, col_offset=16)], [], lineno=290, col_offset=12), Return(List([Str('+s', lineno=292, col_offset=20), BinOp(Str('-L', lineno=292, col_offset=26), Add(), Name('dir', Load(), lineno=292, col_offset=33), lineno=292, col_offset=26)], Load(), lineno=292, col_offset=19), lineno=292, col_offset=12)], [If(BoolOp(Or(), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=293, col_offset=13), 'platform', Load(), lineno=293, col_offset=13), Slice(None, Num(7, lineno=293, col_offset=27), None), Load(), lineno=293, col_offset=13), [Eq()], [Str('irix646', lineno=293, col_offset=33)], lineno=293, col_offset=13), Compare(Subscript(Attribute(Name('sys', Load(), lineno=293, col_offset=46), 'platform', Load(), lineno=293, col_offset=46), Slice(None, Num(6, lineno=293, col_offset=60), None), Load(), lineno=293, col_offset=46), [Eq()], [Str('osf1V5', lineno=293, col_offset=66)], lineno=293, col_offset=46)], lineno=293, col_offset=13), [Return(List([Str('-rpath', lineno=294, col_offset=20), Name('dir', Load(), lineno=294, col_offset=30)], Load(), lineno=294, col_offset=19), lineno=294, col_offset=12)], [If(Call(Attribute(Name('self', Load(), lineno=295, col_offset=13), '_is_gcc', Load(), lineno=295, col_offset=13), [Name('compiler', Load(), lineno=295, col_offset=26)], [], None, None, lineno=295, col_offset=13), [Return(BinOp(Str('-Wl,-R', lineno=296, col_offset=19), Add(), Name('dir', Load(), lineno=296, col_offset=30), lineno=296, col_offset=19), lineno=296, col_offset=12)], [Return(BinOp(Str('-R', lineno=298, col_offset=19), Add(), Name('dir', Load(), lineno=298, col_offset=26), lineno=298, col_offset=19), lineno=298, col_offset=12)], lineno=295, col_offset=13)], lineno=293, col_offset=13)], lineno=289, col_offset=13)], lineno=286, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('library_option', arguments([Name('self', Param(), lineno=300, col_offset=23), Name('lib', Param(), lineno=300, col_offset=29)], None, None, []), [Return(BinOp(Str('-l', lineno=301, col_offset=15), Add(), Name('lib', Load(), lineno=301, col_offset=22), lineno=301, col_offset=15), lineno=301, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('find_library_file', arguments([Name('self', Param(), lineno=303, col_offset=26), Name('dirs', Param(), lineno=303, col_offset=32), Name('lib', Param(), lineno=303, col_offset=38), Name('debug', Param(), lineno=303, col_offset=43)], None, None, [Num(0, lineno=303, col_offset=49)]), [Assign([Name('shared_f', Store(), lineno=304, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=304, col_offset=19), 'library_filename', Load(), lineno=304, col_offset=19), [Name('lib', Load(), lineno=304, col_offset=41)], [keyword('lib_type', Str('shared', lineno=304, col_offset=55))], None, None, lineno=304, col_offset=19), lineno=304, col_offset=8), Assign([Name('dylib_f', Store(), lineno=305, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=305, col_offset=18), 'library_filename', Load(), lineno=305, col_offset=18), [Name('lib', Load(), lineno=305, col_offset=40)], [keyword('lib_type', Str('dylib', lineno=305, col_offset=54))], None, None, lineno=305, col_offset=18), lineno=305, col_offset=8), Assign([Name('static_f', Store(), lineno=306, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=306, col_offset=19), 'library_filename', Load(), lineno=306, col_offset=19), [Name('lib', Load(), lineno=306, col_offset=41)], [keyword('lib_type', Str('static', lineno=306, col_offset=55))], None, None, lineno=306, col_offset=19), lineno=306, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=308, col_offset=11), 'platform', Load(), lineno=308, col_offset=11), [Eq()], [Str('darwin', lineno=308, col_offset=27)], lineno=308, col_offset=11), [Assign([Name('cflags', Store(), lineno=312, col_offset=12)], Call(Attribute(Name('sysconfig', Load(), lineno=312, col_offset=21), 'get_config_var', Load(), lineno=312, col_offset=21), [Str('CFLAGS', lineno=312, col_offset=46)], [], None, None, lineno=312, col_offset=21), lineno=312, col_offset=12), Assign([Name('m', Store(), lineno=313, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=313, col_offset=16), 'search', Load(), lineno=313, col_offset=16), [Str('-isysroot\\s+(\\S+)', lineno=313, col_offset=26), Name('cflags', Load(), lineno=313, col_offset=48)], [], None, None, lineno=313, col_offset=16), lineno=313, col_offset=12), If(Compare(Name('m', Load(), lineno=314, col_offset=15), [Is()], [Name('None', Load(), lineno=314, col_offset=20)], lineno=314, col_offset=15), [Assign([Name('sysroot', Store(), lineno=315, col_offset=16)], Str('/', lineno=315, col_offset=26), lineno=315, col_offset=16)], [Assign([Name('sysroot', Store(), lineno=317, col_offset=16)], Call(Attribute(Name('m', Load(), lineno=317, col_offset=26), 'group', Load(), lineno=317, col_offset=26), [Num(1, lineno=317, col_offset=34)], [], None, None, lineno=317, col_offset=26), lineno=317, col_offset=16)], lineno=314, col_offset=12)], [], lineno=308, col_offset=8), For(Name('dir', Store(), lineno=321, col_offset=12), Name('dirs', Load(), lineno=321, col_offset=19), [Assign([Name('shared', Store(), lineno=322, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=322, col_offset=21), 'path', Load(), lineno=322, col_offset=21), 'join', Load(), lineno=322, col_offset=21), [Name('dir', Load(), lineno=322, col_offset=34), Name('shared_f', Load(), lineno=322, col_offset=39)], [], None, None, lineno=322, col_offset=21), lineno=322, col_offset=12), Assign([Name('dylib', Store(), lineno=323, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=323, col_offset=20), 'path', Load(), lineno=323, col_offset=20), 'join', Load(), lineno=323, col_offset=20), [Name('dir', Load(), lineno=323, col_offset=33), Name('dylib_f', Load(), lineno=323, col_offset=38)], [], None, None, lineno=323, col_offset=20), lineno=323, col_offset=12), Assign([Name('static', Store(), lineno=324, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=324, col_offset=21), 'path', Load(), lineno=324, col_offset=21), 'join', Load(), lineno=324, col_offset=21), [Name('dir', Load(), lineno=324, col_offset=34), Name('static_f', Load(), lineno=324, col_offset=39)], [], None, None, lineno=324, col_offset=21), lineno=324, col_offset=12), If(BoolOp(And(), [Compare(Attribute(Name('sys', Load(), lineno=326, col_offset=15), 'platform', Load(), lineno=326, col_offset=15), [Eq()], [Str('darwin', lineno=326, col_offset=31)], lineno=326, col_offset=15), BoolOp(Or(), [Call(Attribute(Name('dir', Load(), lineno=327, col_offset=16), 'startswith', Load(), lineno=327, col_offset=16), [Str('/System/', lineno=327, col_offset=31)], [], None, None, lineno=327, col_offset=16), BoolOp(And(), [Call(Attribute(Name('dir', Load(), lineno=328, col_offset=16), 'startswith', Load(), lineno=328, col_offset=16), [Str('/usr/', lineno=328, col_offset=31)], [], None, None, lineno=328, col_offset=16), UnaryOp(Not(), Call(Attribute(Name('dir', Load(), lineno=328, col_offset=48), 'startswith', Load(), lineno=328, col_offset=48), [Str('/usr/local/', lineno=328, col_offset=63)], [], None, None, lineno=328, col_offset=48), lineno=328, col_offset=44)], lineno=328, col_offset=16)], lineno=327, col_offset=16)], lineno=326, col_offset=15), [Assign([Name('shared', Store(), lineno=330, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=330, col_offset=25), 'path', Load(), lineno=330, col_offset=25), 'join', Load(), lineno=330, col_offset=25), [Name('sysroot', Load(), lineno=330, col_offset=38), Subscript(Name('dir', Load(), lineno=330, col_offset=47), Slice(Num(1, lineno=330, col_offset=51), None, None), Load(), lineno=330, col_offset=47), Name('shared_f', Load(), lineno=330, col_offset=56)], [], None, None, lineno=330, col_offset=25), lineno=330, col_offset=16), Assign([Name('dylib', Store(), lineno=331, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=331, col_offset=24), 'path', Load(), lineno=331, col_offset=24), 'join', Load(), lineno=331, col_offset=24), [Name('sysroot', Load(), lineno=331, col_offset=37), Subscript(Name('dir', Load(), lineno=331, col_offset=46), Slice(Num(1, lineno=331, col_offset=50), None, None), Load(), lineno=331, col_offset=46), Name('dylib_f', Load(), lineno=331, col_offset=55)], [], None, None, lineno=331, col_offset=24), lineno=331, col_offset=16), Assign([Name('static', Store(), lineno=332, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=332, col_offset=25), 'path', Load(), lineno=332, col_offset=25), 'join', Load(), lineno=332, col_offset=25), [Name('sysroot', Load(), lineno=332, col_offset=38), Subscript(Name('dir', Load(), lineno=332, col_offset=47), Slice(Num(1, lineno=332, col_offset=51), None, None), Load(), lineno=332, col_offset=47), Name('static_f', Load(), lineno=332, col_offset=56)], [], None, None, lineno=332, col_offset=25), lineno=332, col_offset=16)], [], lineno=326, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=338, col_offset=15), 'path', Load(), lineno=338, col_offset=15), 'exists', Load(), lineno=338, col_offset=15), [Name('dylib', Load(), lineno=338, col_offset=30)], [], None, None, lineno=338, col_offset=15), [Return(Name('dylib', Load(), lineno=339, col_offset=23), lineno=339, col_offset=16)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=340, col_offset=17), 'path', Load(), lineno=340, col_offset=17), 'exists', Load(), lineno=340, col_offset=17), [Name('shared', Load(), lineno=340, col_offset=32)], [], None, None, lineno=340, col_offset=17), [Return(Name('shared', Load(), lineno=341, col_offset=23), lineno=341, col_offset=16)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=342, col_offset=17), 'path', Load(), lineno=342, col_offset=17), 'exists', Load(), lineno=342, col_offset=17), [Name('static', Load(), lineno=342, col_offset=32)], [], None, None, lineno=342, col_offset=17), [Return(Name('static', Load(), lineno=343, col_offset=23), lineno=343, col_offset=16)], [], lineno=342, col_offset=17)], lineno=340, col_offset=17)], lineno=338, col_offset=12)], [], lineno=321, col_offset=8), Return(Name('None', Load(), lineno=346, col_offset=15), lineno=346, col_offset=8)], [], lineno=303, col_offset=4)], [], lineno=107, col_offset=0)])
