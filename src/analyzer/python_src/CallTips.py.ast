Module([Expr(Str('CallTips.py - An IDLE Extension to Jog Your Memory\n\nCall Tips are floating windows which display function, class, and method\nparameter and docstring information when you type an opening parenthesis, and\nwhich disappear when you type a closing parenthesis.\n\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('re', None)], lineno=8, col_offset=0), Import([alias('sys', None)], lineno=9, col_offset=0), Import([alias('types', None)], lineno=10, col_offset=0), ImportFrom('idlelib', [alias('CallTipWindow', None)], 0, lineno=12, col_offset=0), ImportFrom('idlelib.HyperParser', [alias('HyperParser', None)], 0, lineno=13, col_offset=0), Import([alias('__main__', None)], lineno=15, col_offset=0), ClassDef('CallTips', [], [Assign([Name('menudefs', Store(), lineno=19, col_offset=4)], List([Tuple([Str('edit', lineno=20, col_offset=9), List([Tuple([Str('Show call tip', lineno=21, col_offset=13), Str('<<force-open-calltip>>', lineno=21, col_offset=30)], Load(), lineno=21, col_offset=13)], Load(), lineno=20, col_offset=17)], Load(), lineno=20, col_offset=9)], Load(), lineno=19, col_offset=15), lineno=19, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=25, col_offset=17), Name('editwin', Param(), lineno=25, col_offset=23)], None, None, [Name('None', Load(), lineno=25, col_offset=31)]), [If(Compare(Name('editwin', Load(), lineno=26, col_offset=11), [Is()], [Name('None', Load(), lineno=26, col_offset=22)], lineno=26, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=27, col_offset=12), 'editwin', Store(), lineno=27, col_offset=12)], Name('None', Load(), lineno=27, col_offset=27), lineno=27, col_offset=12), Return(None, lineno=28, col_offset=12)], [], lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'editwin', Store(), lineno=29, col_offset=8)], Name('editwin', Load(), lineno=29, col_offset=23), lineno=29, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=30, col_offset=8), 'text', Store(), lineno=30, col_offset=8)], Attribute(Name('editwin', Load(), lineno=30, col_offset=20), 'text', Load(), lineno=30, col_offset=20), lineno=30, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=31, col_offset=8), 'calltip', Store(), lineno=31, col_offset=8)], Name('None', Load(), lineno=31, col_offset=23), lineno=31, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=32, col_offset=8), '_make_calltip_window', Store(), lineno=32, col_offset=8)], Attribute(Name('self', Load(), lineno=32, col_offset=36), '_make_tk_calltip_window', Load(), lineno=32, col_offset=36), lineno=32, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=34, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), '_make_calltip_window', Store(), lineno=35, col_offset=8)], Name('None', Load(), lineno=35, col_offset=36), lineno=35, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('_make_tk_calltip_window', arguments([Name('self', Param(), lineno=37, col_offset=32)], None, None, []), [Return(Call(Attribute(Name('CallTipWindow', Load(), lineno=39, col_offset=15), 'CallTip', Load(), lineno=39, col_offset=15), [Attribute(Name('self', Load(), lineno=39, col_offset=37), 'text', Load(), lineno=39, col_offset=37)], [], None, None, lineno=39, col_offset=15), lineno=39, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('_remove_calltip_window', arguments([Name('self', Param(), lineno=41, col_offset=31), Name('event', Param(), lineno=41, col_offset=37)], None, None, [Name('None', Load(), lineno=41, col_offset=43)]), [If(Attribute(Name('self', Load(), lineno=42, col_offset=11), 'calltip', Load(), lineno=42, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=43, col_offset=12), 'calltip', Load(), lineno=43, col_offset=12), 'hidetip', Load(), lineno=43, col_offset=12), [], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=12), 'calltip', Store(), lineno=44, col_offset=12)], Name('None', Load(), lineno=44, col_offset=27), lineno=44, col_offset=12)], [], lineno=42, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('force_open_calltip_event', arguments([Name('self', Param(), lineno=46, col_offset=33), Name('event', Param(), lineno=46, col_offset=39)], None, None, []), [Expr(Str('Happens when the user really wants to open a CallTip, even if a\n        function call is needed.\n        ', lineno=49, col_offset=-1), lineno=49, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'open_calltip', Load(), lineno=50, col_offset=8), [Name('True', Load(), lineno=50, col_offset=26)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8)], [], lineno=46, col_offset=4), FunctionDef('try_open_calltip_event', arguments([Name('self', Param(), lineno=52, col_offset=31), Name('event', Param(), lineno=52, col_offset=37)], None, None, []), [Expr(Str("Happens when it would be nice to open a CallTip, but not really\n        necessary, for example after an opening bracket, so function calls\n        won't be made.\n        ", lineno=56, col_offset=-1), lineno=56, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'open_calltip', Load(), lineno=57, col_offset=8), [Name('False', Load(), lineno=57, col_offset=26)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('refresh_calltip_event', arguments([Name('self', Param(), lineno=59, col_offset=30), Name('event', Param(), lineno=59, col_offset=36)], None, None, []), [Expr(Str('If there is already a calltip window, check if it is still needed,\n        and if so, reload it.\n        ', lineno=62, col_offset=-1), lineno=62, col_offset=-1), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=63, col_offset=11), 'calltip', Load(), lineno=63, col_offset=11), Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=28), 'calltip', Load(), lineno=63, col_offset=28), 'is_active', Load(), lineno=63, col_offset=28), [], [], None, None, lineno=63, col_offset=28)], lineno=63, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=12), 'open_calltip', Load(), lineno=64, col_offset=12), [Name('False', Load(), lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=12), lineno=64, col_offset=12)], [], lineno=63, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('open_calltip', arguments([Name('self', Param(), lineno=66, col_offset=21), Name('evalfuncs', Param(), lineno=66, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), '_remove_calltip_window', Load(), lineno=67, col_offset=8), [], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Assign([Name('hp', Store(), lineno=69, col_offset=8)], Call(Name('HyperParser', Load(), lineno=69, col_offset=13), [Attribute(Name('self', Load(), lineno=69, col_offset=25), 'editwin', Load(), lineno=69, col_offset=25), Str('insert', lineno=69, col_offset=39)], [], None, None, lineno=69, col_offset=13), lineno=69, col_offset=8), Assign([Name('sur_paren', Store(), lineno=70, col_offset=8)], Call(Attribute(Name('hp', Load(), lineno=70, col_offset=20), 'get_surrounding_brackets', Load(), lineno=70, col_offset=20), [Str('(', lineno=70, col_offset=48)], [], None, None, lineno=70, col_offset=20), lineno=70, col_offset=8), If(UnaryOp(Not(), Name('sur_paren', Load(), lineno=71, col_offset=15), lineno=71, col_offset=11), [Return(None, lineno=72, col_offset=12)], [], lineno=71, col_offset=8), Expr(Call(Attribute(Name('hp', Load(), lineno=73, col_offset=8), 'set_index', Load(), lineno=73, col_offset=8), [Subscript(Name('sur_paren', Load(), lineno=73, col_offset=21), Index(Num(0, lineno=73, col_offset=31)), Load(), lineno=73, col_offset=21)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Assign([Name('name', Store(), lineno=74, col_offset=8)], Call(Attribute(Name('hp', Load(), lineno=74, col_offset=15), 'get_expression', Load(), lineno=74, col_offset=15), [], [], None, None, lineno=74, col_offset=15), lineno=74, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('name', Load(), lineno=75, col_offset=15), lineno=75, col_offset=11), BoolOp(And(), [UnaryOp(Not(), Name('evalfuncs', Load(), lineno=75, col_offset=28), lineno=75, col_offset=24), Compare(Call(Attribute(Name('name', Load(), lineno=75, col_offset=42), 'find', Load(), lineno=75, col_offset=42), [Str('(', lineno=75, col_offset=52)], [], None, None, lineno=75, col_offset=42), [NotEq()], [Num(-1, lineno=75, col_offset=61)], lineno=75, col_offset=42)], lineno=75, col_offset=24)], lineno=75, col_offset=11), [Return(None, lineno=76, col_offset=12)], [], lineno=75, col_offset=8), Assign([Name('arg_text', Store(), lineno=77, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=77, col_offset=19), 'fetch_tip', Load(), lineno=77, col_offset=19), [Name('name', Load(), lineno=77, col_offset=34)], [], None, None, lineno=77, col_offset=19), lineno=77, col_offset=8), If(UnaryOp(Not(), Name('arg_text', Load(), lineno=78, col_offset=15), lineno=78, col_offset=11), [Return(None, lineno=79, col_offset=12)], [], lineno=78, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=80, col_offset=8), 'calltip', Store(), lineno=80, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=80, col_offset=23), '_make_calltip_window', Load(), lineno=80, col_offset=23), [], [], None, None, lineno=80, col_offset=23), lineno=80, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'calltip', Load(), lineno=81, col_offset=8), 'showtip', Load(), lineno=81, col_offset=8), [Name('arg_text', Load(), lineno=81, col_offset=29), Subscript(Name('sur_paren', Load(), lineno=81, col_offset=39), Index(Num(0, lineno=81, col_offset=49)), Load(), lineno=81, col_offset=39), Subscript(Name('sur_paren', Load(), lineno=81, col_offset=53), Index(Num(1, lineno=81, col_offset=63)), Load(), lineno=81, col_offset=53)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('fetch_tip', arguments([Name('self', Param(), lineno=83, col_offset=18), Name('name', Param(), lineno=83, col_offset=24)], None, None, []), [Expr(Str('Return the argument list and docstring of a function or class\n\n        If there is a Python subprocess, get the calltip there.  Otherwise,\n        either fetch_tip() is running in the subprocess itself or it was called\n        in an IDLE EditorWindow before any script had been run.\n\n        The subprocess environment is that of the most recently run script.  If\n        two unrelated modules are being edited some calltips in the current\n        module may be inoperative if the module was not the last to run.\n\n        To find methods, fetch_tip must be fed a fully qualified name.\n\n        ', lineno=96, col_offset=-1), lineno=96, col_offset=-1), TryExcept([Assign([Name('rpcclt', Store(), lineno=98, col_offset=12)], Attribute(Attribute(Attribute(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=21), 'editwin', Load(), lineno=98, col_offset=21), 'flist', Load(), lineno=98, col_offset=21), 'pyshell', Load(), lineno=98, col_offset=21), 'interp', Load(), lineno=98, col_offset=21), 'rpcclt', Load(), lineno=98, col_offset=21), lineno=98, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('rpcclt', Store(), lineno=100, col_offset=12)], Name('None', Load(), lineno=100, col_offset=21), lineno=100, col_offset=12)], lineno=99, col_offset=8)], [], lineno=97, col_offset=8), If(Name('rpcclt', Load(), lineno=101, col_offset=11), [Return(Call(Attribute(Name('rpcclt', Load(), lineno=102, col_offset=19), 'remotecall', Load(), lineno=102, col_offset=19), [Str('exec', lineno=102, col_offset=37), Str('get_the_calltip', lineno=102, col_offset=45), Tuple([Name('name', Load(), lineno=103, col_offset=38)], Load(), lineno=103, col_offset=38), Dict([], [], lineno=103, col_offset=46)], [], None, None, lineno=102, col_offset=19), lineno=102, col_offset=12)], [Assign([Name('entity', Store(), lineno=105, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=105, col_offset=21), 'get_entity', Load(), lineno=105, col_offset=21), [Name('name', Load(), lineno=105, col_offset=37)], [], None, None, lineno=105, col_offset=21), lineno=105, col_offset=12), Return(Call(Name('get_arg_text', Load(), lineno=106, col_offset=19), [Name('entity', Load(), lineno=106, col_offset=32)], [], None, None, lineno=106, col_offset=19), lineno=106, col_offset=12)], lineno=101, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('get_entity', arguments([Name('self', Param(), lineno=108, col_offset=19), Name('name', Param(), lineno=108, col_offset=25)], None, None, []), [Expr(Str('Lookup name in a namespace spanning sys.modules and __main.dict__', lineno=109, col_offset=8), lineno=109, col_offset=8), If(Name('name', Load(), lineno=110, col_offset=11), [Assign([Name('namespace', Store(), lineno=111, col_offset=12)], Call(Attribute(Attribute(Name('sys', Load(), lineno=111, col_offset=24), 'modules', Load(), lineno=111, col_offset=24), 'copy', Load(), lineno=111, col_offset=24), [], [], None, None, lineno=111, col_offset=24), lineno=111, col_offset=12), Expr(Call(Attribute(Name('namespace', Load(), lineno=112, col_offset=12), 'update', Load(), lineno=112, col_offset=12), [Attribute(Name('__main__', Load(), lineno=112, col_offset=29), '__dict__', Load(), lineno=112, col_offset=29)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12), TryExcept([Return(Call(Name('eval', Load(), lineno=114, col_offset=23), [Name('name', Load(), lineno=114, col_offset=28), Name('namespace', Load(), lineno=114, col_offset=34)], [], None, None, lineno=114, col_offset=23), lineno=114, col_offset=16)], [ExceptHandler(Tuple([Name('NameError', Load(), lineno=115, col_offset=20), Name('AttributeError', Load(), lineno=115, col_offset=31)], Load(), lineno=115, col_offset=20), None, [Return(Name('None', Load(), lineno=116, col_offset=23), lineno=116, col_offset=16)], lineno=115, col_offset=12)], [], lineno=113, col_offset=12)], [], lineno=110, col_offset=8)], [], lineno=108, col_offset=4)], [], lineno=17, col_offset=0), FunctionDef('_find_constructor', arguments([Name('class_ob', Param(), lineno=118, col_offset=22)], None, None, []), [TryExcept([Return(Attribute(Attribute(Name('class_ob', Load(), lineno=122, col_offset=15), '__init__', Load(), lineno=122, col_offset=15), 'im_func', Load(), lineno=122, col_offset=15), lineno=122, col_offset=8)], [ExceptHandler(Name('AttributeError', Load(), lineno=123, col_offset=11), None, [For(Name('base', Store(), lineno=124, col_offset=12), Attribute(Name('class_ob', Load(), lineno=124, col_offset=20), '__bases__', Load(), lineno=124, col_offset=20), [Assign([Name('rc', Store(), lineno=125, col_offset=12)], Call(Name('_find_constructor', Load(), lineno=125, col_offset=17), [Name('base', Load(), lineno=125, col_offset=35)], [], None, None, lineno=125, col_offset=17), lineno=125, col_offset=12), If(Compare(Name('rc', Load(), lineno=126, col_offset=15), [IsNot()], [Name('None', Load(), lineno=126, col_offset=25)], lineno=126, col_offset=15), [Return(Name('rc', Load(), lineno=126, col_offset=38), lineno=126, col_offset=31)], [], lineno=126, col_offset=12)], [], lineno=124, col_offset=8)], lineno=123, col_offset=4)], [], lineno=121, col_offset=4), Return(Name('None', Load(), lineno=127, col_offset=11), lineno=127, col_offset=4)], [], lineno=118, col_offset=0), FunctionDef('get_arg_text', arguments([Name('ob', Param(), lineno=129, col_offset=17)], None, None, []), [Expr(Str('Get a string describing the arguments for the given object', lineno=130, col_offset=4), lineno=130, col_offset=4), Assign([Name('arg_text', Store(), lineno=131, col_offset=4)], Str('', lineno=131, col_offset=15), lineno=131, col_offset=4), If(Compare(Name('ob', Load(), lineno=132, col_offset=7), [IsNot()], [Name('None', Load(), lineno=132, col_offset=17)], lineno=132, col_offset=7), [Assign([Name('arg_offset', Store(), lineno=133, col_offset=8)], Num(0, lineno=133, col_offset=21), lineno=133, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=134, col_offset=11), [Name('ob', Load(), lineno=134, col_offset=16)], [], None, None, lineno=134, col_offset=11), [In()], [Tuple([Attribute(Name('types', Load(), lineno=134, col_offset=24), 'ClassType', Load(), lineno=134, col_offset=24), Attribute(Name('types', Load(), lineno=134, col_offset=41), 'TypeType', Load(), lineno=134, col_offset=41)], Load(), lineno=134, col_offset=24)], lineno=134, col_offset=11), [Assign([Name('fob', Store(), lineno=136, col_offset=12)], Call(Name('_find_constructor', Load(), lineno=136, col_offset=18), [Name('ob', Load(), lineno=136, col_offset=36)], [], None, None, lineno=136, col_offset=18), lineno=136, col_offset=12), If(Compare(Name('fob', Load(), lineno=137, col_offset=15), [Is()], [Name('None', Load(), lineno=137, col_offset=22)], lineno=137, col_offset=15), [Assign([Name('fob', Store(), lineno=138, col_offset=16)], Lambda(arguments([], None, None, []), Name('None', Load(), lineno=138, col_offset=30), lineno=138, col_offset=22), lineno=138, col_offset=16)], [Assign([Name('arg_offset', Store(), lineno=140, col_offset=16)], Num(1, lineno=140, col_offset=29), lineno=140, col_offset=16)], lineno=137, col_offset=12)], [If(Compare(Call(Name('type', Load(), lineno=141, col_offset=13), [Name('ob', Load(), lineno=141, col_offset=18)], [], None, None, lineno=141, col_offset=13), [Eq()], [Attribute(Name('types', Load(), lineno=141, col_offset=23), 'MethodType', Load(), lineno=141, col_offset=23)], lineno=141, col_offset=13), [Assign([Name('fob', Store(), lineno=144, col_offset=12)], Attribute(Name('ob', Load(), lineno=144, col_offset=18), 'im_func', Load(), lineno=144, col_offset=18), lineno=144, col_offset=12), Assign([Name('arg_offset', Store(), lineno=145, col_offset=12)], Num(1, lineno=145, col_offset=25), lineno=145, col_offset=12)], [Assign([Name('fob', Store(), lineno=147, col_offset=12)], Name('ob', Load(), lineno=147, col_offset=18), lineno=147, col_offset=12)], lineno=141, col_offset=13)], lineno=134, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=149, col_offset=11), [Name('fob', Load(), lineno=149, col_offset=16)], [], None, None, lineno=149, col_offset=11), [In()], [List([Attribute(Name('types', Load(), lineno=149, col_offset=25), 'FunctionType', Load(), lineno=149, col_offset=25), Attribute(Name('types', Load(), lineno=149, col_offset=45), 'LambdaType', Load(), lineno=149, col_offset=45)], Load(), lineno=149, col_offset=24)], lineno=149, col_offset=11), [Assign([Name('argcount', Store(), lineno=150, col_offset=12)], Attribute(Attribute(Name('fob', Load(), lineno=150, col_offset=23), 'func_code', Load(), lineno=150, col_offset=23), 'co_argcount', Load(), lineno=150, col_offset=23), lineno=150, col_offset=12), Assign([Name('real_args', Store(), lineno=151, col_offset=12)], Subscript(Attribute(Attribute(Name('fob', Load(), lineno=151, col_offset=24), 'func_code', Load(), lineno=151, col_offset=24), 'co_varnames', Load(), lineno=151, col_offset=24), Slice(Name('arg_offset', Load(), lineno=151, col_offset=50), Name('argcount', Load(), lineno=151, col_offset=61), None), Load(), lineno=151, col_offset=24), lineno=151, col_offset=12), Assign([Name('defaults', Store(), lineno=152, col_offset=12)], BoolOp(Or(), [Attribute(Name('fob', Load(), lineno=152, col_offset=23), 'func_defaults', Load(), lineno=152, col_offset=23), List([], Load(), lineno=152, col_offset=44)], lineno=152, col_offset=23), lineno=152, col_offset=12), Assign([Name('defaults', Store(), lineno=153, col_offset=12)], Call(Name('list', Load(), lineno=153, col_offset=23), [Call(Name('map', Load(), lineno=153, col_offset=28), [Lambda(arguments([Name('name', Param(), lineno=153, col_offset=39)], None, None, []), BinOp(Str('=%s', lineno=153, col_offset=45), Mod(), Call(Name('repr', Load(), lineno=153, col_offset=53), [Name('name', Load(), lineno=153, col_offset=58)], [], None, None, lineno=153, col_offset=53), lineno=153, col_offset=45), lineno=153, col_offset=32), Name('defaults', Load(), lineno=153, col_offset=65)], [], None, None, lineno=153, col_offset=28)], [], None, None, lineno=153, col_offset=23), lineno=153, col_offset=12), Assign([Name('defaults', Store(), lineno=154, col_offset=12)], BinOp(BinOp(List([Str('', lineno=154, col_offset=24)], Load(), lineno=154, col_offset=23), Mult(), BinOp(Call(Name('len', Load(), lineno=154, col_offset=31), [Name('real_args', Load(), lineno=154, col_offset=35)], [], None, None, lineno=154, col_offset=31), Sub(), Call(Name('len', Load(), lineno=154, col_offset=48), [Name('defaults', Load(), lineno=154, col_offset=52)], [], None, None, lineno=154, col_offset=48), lineno=154, col_offset=31), lineno=154, col_offset=23), Add(), Name('defaults', Load(), lineno=154, col_offset=65), lineno=154, col_offset=23), lineno=154, col_offset=12), Assign([Name('items', Store(), lineno=155, col_offset=12)], Call(Name('map', Load(), lineno=155, col_offset=20), [Lambda(arguments([Name('arg', Param(), lineno=155, col_offset=31), Name('dflt', Param(), lineno=155, col_offset=36)], None, None, []), BinOp(Name('arg', Load(), lineno=155, col_offset=42), Add(), Name('dflt', Load(), lineno=155, col_offset=48), lineno=155, col_offset=42), lineno=155, col_offset=24), Name('real_args', Load(), lineno=155, col_offset=54), Name('defaults', Load(), lineno=155, col_offset=65)], [], None, None, lineno=155, col_offset=20), lineno=155, col_offset=12), If(BinOp(Attribute(Attribute(Name('fob', Load(), lineno=156, col_offset=15), 'func_code', Load(), lineno=156, col_offset=15), 'co_flags', Load(), lineno=156, col_offset=15), BitAnd(), Num(4, lineno=156, col_offset=40), lineno=156, col_offset=15), [Expr(Call(Attribute(Name('items', Load(), lineno=157, col_offset=16), 'append', Load(), lineno=157, col_offset=16), [Str('...', lineno=157, col_offset=29)], [], None, None, lineno=157, col_offset=16), lineno=157, col_offset=16)], [], lineno=156, col_offset=12), If(BinOp(Attribute(Attribute(Name('fob', Load(), lineno=158, col_offset=15), 'func_code', Load(), lineno=158, col_offset=15), 'co_flags', Load(), lineno=158, col_offset=15), BitAnd(), Num(8, lineno=158, col_offset=40), lineno=158, col_offset=15), [Expr(Call(Attribute(Name('items', Load(), lineno=159, col_offset=16), 'append', Load(), lineno=159, col_offset=16), [Str('***', lineno=159, col_offset=29)], [], None, None, lineno=159, col_offset=16), lineno=159, col_offset=16)], [], lineno=158, col_offset=12), Assign([Name('arg_text', Store(), lineno=160, col_offset=12)], Call(Attribute(Str(', ', lineno=160, col_offset=23), 'join', Load(), lineno=160, col_offset=23), [Name('items', Load(), lineno=160, col_offset=33)], [], None, None, lineno=160, col_offset=23), lineno=160, col_offset=12), Assign([Name('arg_text', Store(), lineno=161, col_offset=12)], BinOp(Str('(%s)', lineno=161, col_offset=23), Mod(), Call(Attribute(Name('re', Load(), lineno=161, col_offset=32), 'sub', Load(), lineno=161, col_offset=32), [Str('\\.\\d+', lineno=161, col_offset=39), Str('<tuple>', lineno=161, col_offset=48), Name('arg_text', Load(), lineno=161, col_offset=59)], [], None, None, lineno=161, col_offset=32), lineno=161, col_offset=23), lineno=161, col_offset=12)], [], lineno=149, col_offset=8), Assign([Name('doc', Store(), lineno=163, col_offset=8)], Call(Name('getattr', Load(), lineno=163, col_offset=14), [Name('ob', Load(), lineno=163, col_offset=22), Str('__doc__', lineno=163, col_offset=26), Str('', lineno=163, col_offset=37)], [], None, None, lineno=163, col_offset=14), lineno=163, col_offset=8), If(Name('doc', Load(), lineno=164, col_offset=11), [Assign([Name('doc', Store(), lineno=165, col_offset=12)], Call(Attribute(Name('doc', Load(), lineno=165, col_offset=18), 'lstrip', Load(), lineno=165, col_offset=18), [], [], None, None, lineno=165, col_offset=18), lineno=165, col_offset=12), Assign([Name('pos', Store(), lineno=166, col_offset=12)], Call(Attribute(Name('doc', Load(), lineno=166, col_offset=18), 'find', Load(), lineno=166, col_offset=18), [Str('\n', lineno=166, col_offset=27)], [], None, None, lineno=166, col_offset=18), lineno=166, col_offset=12), If(BoolOp(Or(), [Compare(Name('pos', Load(), lineno=167, col_offset=15), [Lt()], [Num(0, lineno=167, col_offset=21)], lineno=167, col_offset=15), Compare(Name('pos', Load(), lineno=167, col_offset=26), [Gt()], [Num(70, lineno=167, col_offset=32)], lineno=167, col_offset=26)], lineno=167, col_offset=15), [Assign([Name('pos', Store(), lineno=168, col_offset=16)], Num(70, lineno=168, col_offset=22), lineno=168, col_offset=16)], [], lineno=167, col_offset=12), If(Name('arg_text', Load(), lineno=169, col_offset=15), [AugAssign(Name('arg_text', Store(), lineno=170, col_offset=16), Add(), Str('\n', lineno=170, col_offset=28), lineno=170, col_offset=16)], [], lineno=169, col_offset=12), AugAssign(Name('arg_text', Store(), lineno=171, col_offset=12), Add(), Subscript(Name('doc', Load(), lineno=171, col_offset=24), Slice(None, Name('pos', Load(), lineno=171, col_offset=29), None), Load(), lineno=171, col_offset=24), lineno=171, col_offset=12)], [], lineno=164, col_offset=8)], [], lineno=132, col_offset=4), Return(Name('arg_text', Load(), lineno=172, col_offset=11), lineno=172, col_offset=4)], [], lineno=129, col_offset=0), If(Compare(Name('__name__', Load(), lineno=178, col_offset=3), [Eq()], [Str('__main__', lineno=178, col_offset=13)], lineno=178, col_offset=3), [FunctionDef('t1', arguments([], None, None, []), [Expr(Str('()', lineno=180, col_offset=14), lineno=180, col_offset=14)], [], lineno=180, col_offset=4), FunctionDef('t2', arguments([Name('a', Param(), lineno=181, col_offset=11), Name('b', Param(), lineno=181, col_offset=14)], None, None, [Name('None', Load(), lineno=181, col_offset=16)]), [Expr(Str('(a, b=None)', lineno=181, col_offset=23), lineno=181, col_offset=23)], [], lineno=181, col_offset=4), FunctionDef('t3', arguments([Name('a', Param(), lineno=182, col_offset=11)], 'args', None, []), [Expr(Str('(a, ...)', lineno=182, col_offset=22), lineno=182, col_offset=22)], [], lineno=182, col_offset=4), FunctionDef('t4', arguments([], 'args', None, []), [Expr(Str('(...)', lineno=183, col_offset=19), lineno=183, col_offset=19)], [], lineno=183, col_offset=4), FunctionDef('t5', arguments([Name('a', Param(), lineno=184, col_offset=11)], 'args', None, []), [Expr(Str('(a, ...)', lineno=184, col_offset=22), lineno=184, col_offset=22)], [], lineno=184, col_offset=4), FunctionDef('t6', arguments([Name('a', Param(), lineno=185, col_offset=11), Name('b', Param(), lineno=185, col_offset=14)], 'args', 'kw', [Name('None', Load(), lineno=185, col_offset=16)]), [Expr(Str('(a, b=None, ..., ***)', lineno=185, col_offset=36), lineno=185, col_offset=36)], [], lineno=185, col_offset=4), FunctionDef('t7', arguments([Tuple([Name('a', Store(), lineno=186, col_offset=12), Name('b', Store(), lineno=186, col_offset=15)], Store(), lineno=186, col_offset=12), Name('c', Param(), lineno=186, col_offset=19), Tuple([Name('d', Store(), lineno=186, col_offset=23), Name('e', Store(), lineno=186, col_offset=26)], Store(), lineno=186, col_offset=23)], None, None, []), [Expr(Str('(<tuple>, c, <tuple>)', lineno=186, col_offset=31), lineno=186, col_offset=31)], [], lineno=186, col_offset=4), ClassDef('TC', [Name('object', Load(), lineno=188, col_offset=13)], [Expr(Str('(ai=None, ...)', lineno=189, col_offset=8), lineno=189, col_offset=8), FunctionDef('__init__', arguments([Name('self', Param(), lineno=190, col_offset=21), Name('ai', Param(), lineno=190, col_offset=27)], 'b', None, [Name('None', Load(), lineno=190, col_offset=30)]), [Expr(Str('(ai=None, ...)', lineno=190, col_offset=41), lineno=190, col_offset=41)], [], lineno=190, col_offset=8), FunctionDef('t1', arguments([Name('self', Param(), lineno=191, col_offset=15)], None, None, []), [Expr(Str('()', lineno=191, col_offset=22), lineno=191, col_offset=22)], [], lineno=191, col_offset=8), FunctionDef('t2', arguments([Name('self', Param(), lineno=192, col_offset=15), Name('ai', Param(), lineno=192, col_offset=21), Name('b', Param(), lineno=192, col_offset=25)], None, None, [Name('None', Load(), lineno=192, col_offset=27)]), [Expr(Str('(ai, b=None)', lineno=192, col_offset=34), lineno=192, col_offset=34)], [], lineno=192, col_offset=8), FunctionDef('t3', arguments([Name('self', Param(), lineno=193, col_offset=15), Name('ai', Param(), lineno=193, col_offset=21)], 'args', None, []), [Expr(Str('(ai, ...)', lineno=193, col_offset=33), lineno=193, col_offset=33)], [], lineno=193, col_offset=8), FunctionDef('t4', arguments([Name('self', Param(), lineno=194, col_offset=15)], 'args', None, []), [Expr(Str('(...)', lineno=194, col_offset=29), lineno=194, col_offset=29)], [], lineno=194, col_offset=8), FunctionDef('t5', arguments([Name('self', Param(), lineno=195, col_offset=15), Name('ai', Param(), lineno=195, col_offset=21)], 'args', None, []), [Expr(Str('(ai, ...)', lineno=195, col_offset=33), lineno=195, col_offset=33)], [], lineno=195, col_offset=8), FunctionDef('t6', arguments([Name('self', Param(), lineno=196, col_offset=15), Name('ai', Param(), lineno=196, col_offset=21), Name('b', Param(), lineno=196, col_offset=25)], 'args', 'kw', [Name('None', Load(), lineno=196, col_offset=27)]), [Expr(Str('(ai, b=None, ..., ***)', lineno=196, col_offset=47), lineno=196, col_offset=47)], [], lineno=196, col_offset=8), FunctionDef('t7', arguments([Name('self', Param(), lineno=197, col_offset=15), Tuple([Name('ai', Store(), lineno=197, col_offset=22), Name('b', Store(), lineno=197, col_offset=26)], Store(), lineno=197, col_offset=22), Name('c', Param(), lineno=197, col_offset=30), Tuple([Name('d', Store(), lineno=197, col_offset=34), Name('e', Store(), lineno=197, col_offset=37)], Store(), lineno=197, col_offset=34)], None, None, []), [Expr(Str('(<tuple>, c, <tuple>)', lineno=197, col_offset=42), lineno=197, col_offset=42)], [], lineno=197, col_offset=8)], [], lineno=188, col_offset=4), FunctionDef('test', arguments([Name('tests', Param(), lineno=199, col_offset=13)], None, None, []), [Assign([Name('ct', Store(), lineno=200, col_offset=8)], Call(Name('CallTips', Load(), lineno=200, col_offset=13), [], [], None, None, lineno=200, col_offset=13), lineno=200, col_offset=8), Assign([Name('failed', Store(), lineno=201, col_offset=8)], List([], Load(), lineno=201, col_offset=15), lineno=201, col_offset=8), For(Name('t', Store(), lineno=202, col_offset=12), Name('tests', Load(), lineno=202, col_offset=17), [Assign([Name('expected', Store(), lineno=203, col_offset=12)], BinOp(BinOp(Attribute(Name('t', Load(), lineno=203, col_offset=23), '__doc__', Load(), lineno=203, col_offset=23), Add(), Str('\n', lineno=203, col_offset=35), lineno=203, col_offset=23), Add(), Attribute(Name('t', Load(), lineno=203, col_offset=42), '__doc__', Load(), lineno=203, col_offset=42), lineno=203, col_offset=40), lineno=203, col_offset=12), Assign([Name('name', Store(), lineno=204, col_offset=12)], Attribute(Name('t', Load(), lineno=204, col_offset=19), '__name__', Load(), lineno=204, col_offset=19), lineno=204, col_offset=12), TryExcept([Assign([Name('qualified_name', Store(), lineno=207, col_offset=16)], BinOp(Str('%s.%s', lineno=207, col_offset=33), Mod(), Tuple([Attribute(Attribute(Name('t', Load(), lineno=207, col_offset=44), 'im_class', Load(), lineno=207, col_offset=44), '__name__', Load(), lineno=207, col_offset=44), Name('name', Load(), lineno=207, col_offset=65)], Load(), lineno=207, col_offset=44), lineno=207, col_offset=33), lineno=207, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=208, col_offset=19), None, [Assign([Name('qualified_name', Store(), lineno=209, col_offset=16)], Name('name', Load(), lineno=209, col_offset=33), lineno=209, col_offset=16)], lineno=208, col_offset=12)], [], lineno=206, col_offset=12), Assign([Name('arg_text', Store(), lineno=210, col_offset=12)], Call(Attribute(Name('ct', Load(), lineno=210, col_offset=23), 'fetch_tip', Load(), lineno=210, col_offset=23), [Name('qualified_name', Load(), lineno=210, col_offset=36)], [], None, None, lineno=210, col_offset=23), lineno=210, col_offset=12), If(Compare(Name('arg_text', Load(), lineno=211, col_offset=15), [NotEq()], [Name('expected', Load(), lineno=211, col_offset=27)], lineno=211, col_offset=15), [Expr(Call(Attribute(Name('failed', Load(), lineno=212, col_offset=16), 'append', Load(), lineno=212, col_offset=16), [Name('t', Load(), lineno=212, col_offset=30)], [], None, None, lineno=212, col_offset=16), lineno=212, col_offset=16), Assign([Name('fmt', Store(), lineno=213, col_offset=16)], Str('%s - expected %s, but got %s', lineno=213, col_offset=22), lineno=213, col_offset=16), Print(None, [BinOp(Name('fmt', Load(), lineno=214, col_offset=23), Mod(), Tuple([Attribute(Name('t', Load(), lineno=214, col_offset=30), '__name__', Load(), lineno=214, col_offset=30), Name('expected', Load(), lineno=214, col_offset=42), Call(Name('get_arg_text', Load(), lineno=214, col_offset=52), [Name('t', Load(), lineno=214, col_offset=65)], [], None, None, lineno=214, col_offset=52)], Load(), lineno=214, col_offset=30), lineno=214, col_offset=23)], True, lineno=214, col_offset=16)], [], lineno=211, col_offset=12)], [], lineno=202, col_offset=8), Print(None, [BinOp(Str('%d of %d tests failed', lineno=215, col_offset=14), Mod(), Tuple([Call(Name('len', Load(), lineno=215, col_offset=41), [Name('failed', Load(), lineno=215, col_offset=45)], [], None, None, lineno=215, col_offset=41), Call(Name('len', Load(), lineno=215, col_offset=54), [Name('tests', Load(), lineno=215, col_offset=58)], [], None, None, lineno=215, col_offset=54)], Load(), lineno=215, col_offset=41), lineno=215, col_offset=14)], True, lineno=215, col_offset=8)], [], lineno=199, col_offset=4), Assign([Name('tc', Store(), lineno=217, col_offset=4)], Call(Name('TC', Load(), lineno=217, col_offset=9), [], [], None, None, lineno=217, col_offset=9), lineno=217, col_offset=4), Assign([Name('tests', Store(), lineno=218, col_offset=4)], Tuple([Name('t1', Load(), lineno=218, col_offset=13), Name('t2', Load(), lineno=218, col_offset=17), Name('t3', Load(), lineno=218, col_offset=21), Name('t4', Load(), lineno=218, col_offset=25), Name('t5', Load(), lineno=218, col_offset=29), Name('t6', Load(), lineno=218, col_offset=33), Name('t7', Load(), lineno=218, col_offset=37), Name('TC', Load(), lineno=219, col_offset=13), Attribute(Name('tc', Load(), lineno=219, col_offset=17), 't1', Load(), lineno=219, col_offset=17), Attribute(Name('tc', Load(), lineno=219, col_offset=24), 't2', Load(), lineno=219, col_offset=24), Attribute(Name('tc', Load(), lineno=219, col_offset=31), 't3', Load(), lineno=219, col_offset=31), Attribute(Name('tc', Load(), lineno=219, col_offset=38), 't4', Load(), lineno=219, col_offset=38), Attribute(Name('tc', Load(), lineno=219, col_offset=45), 't5', Load(), lineno=219, col_offset=45), Attribute(Name('tc', Load(), lineno=219, col_offset=52), 't6', Load(), lineno=219, col_offset=52), Attribute(Name('tc', Load(), lineno=219, col_offset=59), 't7', Load(), lineno=219, col_offset=59)], Load(), lineno=218, col_offset=13), lineno=218, col_offset=4), Expr(Call(Name('test', Load(), lineno=221, col_offset=4), [Name('tests', Load(), lineno=221, col_offset=9)], [], None, None, lineno=221, col_offset=4), lineno=221, col_offset=4)], [], lineno=178, col_offset=0)])
