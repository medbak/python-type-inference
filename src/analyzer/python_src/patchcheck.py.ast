Module([Import([alias('re', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), Import([alias('shutil', None)], lineno=3, col_offset=0), Import([alias('os.path', None)], lineno=4, col_offset=0), Import([alias('subprocess', None)], lineno=5, col_offset=0), Import([alias('reindent', None)], lineno=7, col_offset=0), Import([alias('untabify', None)], lineno=8, col_offset=0), FunctionDef('n_files_str', arguments([Name('count', Param(), lineno=11, col_offset=16)], None, None, []), [Expr(Str("Return 'N file(s)' with the proper plurality on 'file'.", lineno=12, col_offset=4), lineno=12, col_offset=4), Return(Call(Attribute(Str('{} file{}', lineno=13, col_offset=11), 'format', Load(), lineno=13, col_offset=11), [Name('count', Load(), lineno=13, col_offset=30), IfExp(Compare(Name('count', Load(), lineno=13, col_offset=44), [NotEq()], [Num(1, lineno=13, col_offset=53)], lineno=13, col_offset=44), Str('s', lineno=13, col_offset=37), Str('', lineno=13, col_offset=60), lineno=13, col_offset=37)], [], None, None, lineno=13, col_offset=11), lineno=13, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('status', arguments([Name('message', Param(), lineno=16, col_offset=11), Name('modal', Param(), lineno=16, col_offset=20), Name('info', Param(), lineno=16, col_offset=33)], None, None, [Name('False', Load(), lineno=16, col_offset=26), Name('None', Load(), lineno=16, col_offset=38)]), [Expr(Str('Decorator to output status info to stdout.', lineno=17, col_offset=4), lineno=17, col_offset=4), FunctionDef('decorated_fxn', arguments([Name('fxn', Param(), lineno=18, col_offset=22)], None, None, []), [FunctionDef('call_fxn', arguments([], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=20, col_offset=12), 'stdout', Load(), lineno=20, col_offset=12), 'write', Load(), lineno=20, col_offset=12), [BinOp(Name('message', Load(), lineno=20, col_offset=29), Add(), Str(' ... ', lineno=20, col_offset=39), lineno=20, col_offset=29)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=21, col_offset=12), 'stdout', Load(), lineno=21, col_offset=12), 'flush', Load(), lineno=21, col_offset=12), [], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=12), Assign([Name('result', Store(), lineno=22, col_offset=12)], Call(Name('fxn', Load(), lineno=22, col_offset=21), [], [], Name('args', Load(), lineno=22, col_offset=26), Name('kwargs', Load(), lineno=22, col_offset=34), lineno=22, col_offset=21), lineno=22, col_offset=12), If(BoolOp(And(), [UnaryOp(Not(), Name('modal', Load(), lineno=23, col_offset=19), lineno=23, col_offset=15), UnaryOp(Not(), Name('info', Load(), lineno=23, col_offset=33), lineno=23, col_offset=29)], lineno=23, col_offset=15), [Print(None, [Str('done', lineno=24, col_offset=22)], True, lineno=24, col_offset=16)], [If(Name('info', Load(), lineno=25, col_offset=17), [Print(None, [Call(Name('info', Load(), lineno=26, col_offset=22), [Name('result', Load(), lineno=26, col_offset=27)], [], None, None, lineno=26, col_offset=22)], True, lineno=26, col_offset=16)], [Print(None, [IfExp(Name('result', Load(), lineno=28, col_offset=31), Str('yes', lineno=28, col_offset=22), Str('NO', lineno=28, col_offset=43), lineno=28, col_offset=22)], True, lineno=28, col_offset=16)], lineno=25, col_offset=17)], lineno=23, col_offset=12), Return(Name('result', Load(), lineno=29, col_offset=19), lineno=29, col_offset=12)], [], lineno=19, col_offset=8), Return(Name('call_fxn', Load(), lineno=30, col_offset=15), lineno=30, col_offset=8)], [], lineno=18, col_offset=4), Return(Name('decorated_fxn', Load(), lineno=31, col_offset=11), lineno=31, col_offset=4)], [], lineno=16, col_offset=0), FunctionDef('changed_files', arguments([], None, None, []), [Expr(Str('Get the list of changed or added files from the VCS.', lineno=37, col_offset=4), lineno=37, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=38, col_offset=7), 'path', Load(), lineno=38, col_offset=7), 'isdir', Load(), lineno=38, col_offset=7), [Str('.hg', lineno=38, col_offset=21)], [], None, None, lineno=38, col_offset=7), [Assign([Name('vcs', Store(), lineno=39, col_offset=8)], Str('hg', lineno=39, col_offset=14), lineno=39, col_offset=8), Assign([Name('cmd', Store(), lineno=40, col_offset=8)], Str('hg status --added --modified --no-status', lineno=40, col_offset=14), lineno=40, col_offset=8)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=41, col_offset=9), 'path', Load(), lineno=41, col_offset=9), 'isdir', Load(), lineno=41, col_offset=9), [Str('.svn', lineno=41, col_offset=23)], [], None, None, lineno=41, col_offset=9), [Assign([Name('vcs', Store(), lineno=42, col_offset=8)], Str('svn', lineno=42, col_offset=14), lineno=42, col_offset=8), Assign([Name('cmd', Store(), lineno=43, col_offset=8)], Str('svn status --quiet --non-interactive --ignore-externals', lineno=43, col_offset=14), lineno=43, col_offset=8)], [Expr(Call(Attribute(Name('sys', Load(), lineno=45, col_offset=8), 'exit', Load(), lineno=45, col_offset=8), [Str('need a checkout to get modified files', lineno=45, col_offset=17)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8)], lineno=41, col_offset=9)], lineno=38, col_offset=4), Assign([Name('st', Store(), lineno=47, col_offset=4)], Call(Attribute(Name('subprocess', Load(), lineno=47, col_offset=9), 'Popen', Load(), lineno=47, col_offset=9), [Call(Attribute(Name('cmd', Load(), lineno=47, col_offset=26), 'split', Load(), lineno=47, col_offset=26), [], [], None, None, lineno=47, col_offset=26)], [keyword('stdout', Attribute(Name('subprocess', Load(), lineno=47, col_offset=46), 'PIPE', Load(), lineno=47, col_offset=46))], None, None, lineno=47, col_offset=9), lineno=47, col_offset=4), TryFinally([Expr(Call(Attribute(Name('st', Load(), lineno=49, col_offset=8), 'wait', Load(), lineno=49, col_offset=8), [], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), If(Compare(Name('vcs', Load(), lineno=50, col_offset=11), [Eq()], [Str('hg', lineno=50, col_offset=18)], lineno=50, col_offset=11), [Return(ListComp(Call(Attribute(Call(Attribute(Name('x', Load(), lineno=51, col_offset=20), 'decode', Load(), lineno=51, col_offset=20), [], [], None, None, lineno=51, col_offset=20), 'rstrip', Load(), lineno=51, col_offset=20), [], [], None, None, lineno=51, col_offset=20), [comprehension(Name('x', Store(), lineno=51, col_offset=44), Attribute(Name('st', Load(), lineno=51, col_offset=49), 'stdout', Load(), lineno=51, col_offset=49), [])], lineno=51, col_offset=20), lineno=51, col_offset=12)], [Assign([Name('output', Store(), lineno=53, col_offset=12)], GeneratorExp(Subscript(Call(Attribute(Call(Attribute(Call(Attribute(Name('x', Load(), lineno=53, col_offset=22), 'decode', Load(), lineno=53, col_offset=22), [], [], None, None, lineno=53, col_offset=22), 'rstrip', Load(), lineno=53, col_offset=22), [], [], None, None, lineno=53, col_offset=22), 'rsplit', Load(), lineno=53, col_offset=22), [Name('None', Load(), lineno=53, col_offset=49), Num(1, lineno=53, col_offset=55)], [], None, None, lineno=53, col_offset=22), Index(Num(-1, lineno=53, col_offset=59)), Load(), lineno=53, col_offset=22), [comprehension(Name('x', Store(), lineno=54, col_offset=26), Attribute(Name('st', Load(), lineno=54, col_offset=31), 'stdout', Load(), lineno=54, col_offset=31), [Compare(Subscript(Name('x', Load(), lineno=54, col_offset=44), Index(Num(0, lineno=54, col_offset=46)), Load(), lineno=54, col_offset=44), [In()], [Str('AM', lineno=54, col_offset=52)], lineno=54, col_offset=44)])], lineno=53, col_offset=22), lineno=53, col_offset=12)], lineno=50, col_offset=8), Return(Call(Name('set', Load(), lineno=55, col_offset=15), [GeneratorExp(Name('path', Load(), lineno=55, col_offset=19), [comprehension(Name('path', Store(), lineno=55, col_offset=28), Name('output', Load(), lineno=55, col_offset=36), [Call(Attribute(Attribute(Name('os', Load(), lineno=55, col_offset=46), 'path', Load(), lineno=55, col_offset=46), 'isfile', Load(), lineno=55, col_offset=46), [Name('path', Load(), lineno=55, col_offset=61)], [], None, None, lineno=55, col_offset=46)])], lineno=55, col_offset=19)], [], None, None, lineno=55, col_offset=15), lineno=55, col_offset=8)], [Expr(Call(Attribute(Attribute(Name('st', Load(), lineno=57, col_offset=8), 'stdout', Load(), lineno=57, col_offset=8), 'close', Load(), lineno=57, col_offset=8), [], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], lineno=48, col_offset=4)], [Call(Name('status', Load(), lineno=34, col_offset=1), [Str('Getting the list of files that have been added/changed', lineno=34, col_offset=8)], [keyword('info', Lambda(arguments([Name('x', Param(), lineno=35, col_offset=20)], None, None, []), Call(Name('n_files_str', Load(), lineno=35, col_offset=23), [Call(Name('len', Load(), lineno=35, col_offset=35), [Name('x', Load(), lineno=35, col_offset=39)], [], None, None, lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=23), lineno=35, col_offset=13))], None, None, lineno=34, col_offset=1)], lineno=34, col_offset=0), FunctionDef('report_modified_files', arguments([Name('file_paths', Param(), lineno=60, col_offset=26)], None, None, []), [Assign([Name('count', Store(), lineno=61, col_offset=4)], Call(Name('len', Load(), lineno=61, col_offset=12), [Name('file_paths', Load(), lineno=61, col_offset=16)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=4), If(Compare(Name('count', Load(), lineno=62, col_offset=7), [Eq()], [Num(0, lineno=62, col_offset=16)], lineno=62, col_offset=7), [Return(Call(Name('n_files_str', Load(), lineno=63, col_offset=15), [Name('count', Load(), lineno=63, col_offset=27)], [], None, None, lineno=63, col_offset=15), lineno=63, col_offset=8)], [Assign([Name('lines', Store(), lineno=65, col_offset=8)], List([Call(Attribute(Str('{}:', lineno=65, col_offset=17), 'format', Load(), lineno=65, col_offset=17), [Call(Name('n_files_str', Load(), lineno=65, col_offset=30), [Name('count', Load(), lineno=65, col_offset=42)], [], None, None, lineno=65, col_offset=30)], [], None, None, lineno=65, col_offset=17)], Load(), lineno=65, col_offset=16), lineno=65, col_offset=8), For(Name('path', Store(), lineno=66, col_offset=12), Name('file_paths', Load(), lineno=66, col_offset=20), [Expr(Call(Attribute(Name('lines', Load(), lineno=67, col_offset=12), 'append', Load(), lineno=67, col_offset=12), [Call(Attribute(Str('  {}', lineno=67, col_offset=25), 'format', Load(), lineno=67, col_offset=25), [Name('path', Load(), lineno=67, col_offset=39)], [], None, None, lineno=67, col_offset=25)], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=12)], [], lineno=66, col_offset=8), Return(Call(Attribute(Str('\n', lineno=68, col_offset=15), 'join', Load(), lineno=68, col_offset=15), [Name('lines', Load(), lineno=68, col_offset=25)], [], None, None, lineno=68, col_offset=15), lineno=68, col_offset=8)], lineno=62, col_offset=4)], [], lineno=60, col_offset=0), FunctionDef('normalize_whitespace', arguments([Name('file_paths', Param(), lineno=72, col_offset=25)], None, None, []), [Expr(Str('Make sure that the whitespace for .py files have been normalized.', lineno=73, col_offset=4), lineno=73, col_offset=4), Assign([Attribute(Name('reindent', Load(), lineno=74, col_offset=4), 'makebackup', Store(), lineno=74, col_offset=4)], Name('False', Load(), lineno=74, col_offset=26), lineno=74, col_offset=4), Assign([Name('fixed', Store(), lineno=75, col_offset=4)], List([], Load(), lineno=75, col_offset=12), lineno=75, col_offset=4), For(Name('path', Store(), lineno=76, col_offset=8), GeneratorExp(Name('x', Load(), lineno=76, col_offset=17), [comprehension(Name('x', Store(), lineno=76, col_offset=23), Name('file_paths', Load(), lineno=76, col_offset=28), [Call(Attribute(Name('x', Load(), lineno=76, col_offset=42), 'endswith', Load(), lineno=76, col_offset=42), [Str('.py', lineno=76, col_offset=53)], [], None, None, lineno=76, col_offset=42)])], lineno=76, col_offset=17), [If(Call(Attribute(Name('reindent', Load(), lineno=77, col_offset=11), 'check', Load(), lineno=77, col_offset=11), [Name('path', Load(), lineno=77, col_offset=26)], [], None, None, lineno=77, col_offset=11), [Expr(Call(Attribute(Name('fixed', Load(), lineno=78, col_offset=12), 'append', Load(), lineno=78, col_offset=12), [Name('path', Load(), lineno=78, col_offset=25)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], [], lineno=76, col_offset=4), Return(Name('fixed', Load(), lineno=79, col_offset=11), lineno=79, col_offset=4)], [Call(Name('status', Load(), lineno=71, col_offset=1), [Str('Fixing whitespace', lineno=71, col_offset=8)], [keyword('info', Name('report_modified_files', Load(), lineno=71, col_offset=34))], None, None, lineno=71, col_offset=1)], lineno=71, col_offset=0), FunctionDef('normalize_c_whitespace', arguments([Name('file_paths', Param(), lineno=83, col_offset=27)], None, None, []), [Expr(Str('Report if any C files ', lineno=84, col_offset=4), lineno=84, col_offset=4), Assign([Name('fixed', Store(), lineno=85, col_offset=4)], List([], Load(), lineno=85, col_offset=12), lineno=85, col_offset=4), For(Name('path', Store(), lineno=86, col_offset=8), Name('file_paths', Load(), lineno=86, col_offset=16), [With(Call(Name('open', Load(), lineno=87, col_offset=13), [Name('path', Load(), lineno=87, col_offset=18), Str('r', lineno=87, col_offset=24)], [], None, None, lineno=87, col_offset=13), Name('f', Store(), lineno=87, col_offset=32), [If(Compare(Str('\t', lineno=88, col_offset=15), [NotIn()], [Call(Attribute(Name('f', Load(), lineno=88, col_offset=27), 'read', Load(), lineno=88, col_offset=27), [], [], None, None, lineno=88, col_offset=27)], lineno=88, col_offset=15), [Continue( lineno=89, col_offset=16)], [], lineno=88, col_offset=12)], lineno=87, col_offset=13), Expr(Call(Attribute(Name('untabify', Load(), lineno=90, col_offset=8), 'process', Load(), lineno=90, col_offset=8), [Name('path', Load(), lineno=90, col_offset=25), Num(8, lineno=90, col_offset=31)], [keyword('verbose', Name('False', Load(), lineno=90, col_offset=42))], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('fixed', Load(), lineno=91, col_offset=8), 'append', Load(), lineno=91, col_offset=8), [Name('path', Load(), lineno=91, col_offset=21)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=86, col_offset=4), Return(Name('fixed', Load(), lineno=92, col_offset=11), lineno=92, col_offset=4)], [Call(Name('status', Load(), lineno=82, col_offset=1), [Str('Fixing C file whitespace', lineno=82, col_offset=8)], [keyword('info', Name('report_modified_files', Load(), lineno=82, col_offset=41))], None, None, lineno=82, col_offset=1)], lineno=82, col_offset=0), Assign([Name('ws_re', Store(), lineno=95, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=95, col_offset=8), 'compile', Load(), lineno=95, col_offset=8), [Str('\\s+(\\r?\\n)$', lineno=95, col_offset=19)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=0), FunctionDef('normalize_docs_whitespace', arguments([Name('file_paths', Param(), lineno=98, col_offset=30)], None, None, []), [Assign([Name('fixed', Store(), lineno=99, col_offset=4)], List([], Load(), lineno=99, col_offset=12), lineno=99, col_offset=4), For(Name('path', Store(), lineno=100, col_offset=8), Name('file_paths', Load(), lineno=100, col_offset=16), [TryExcept([With(Call(Name('open', Load(), lineno=102, col_offset=17), [Name('path', Load(), lineno=102, col_offset=22), Str('rb', lineno=102, col_offset=28)], [], None, None, lineno=102, col_offset=17), Name('f', Store(), lineno=102, col_offset=37), [Assign([Name('lines', Store(), lineno=103, col_offset=16)], Call(Attribute(Name('f', Load(), lineno=103, col_offset=24), 'readlines', Load(), lineno=103, col_offset=24), [], [], None, None, lineno=103, col_offset=24), lineno=103, col_offset=16)], lineno=102, col_offset=17), Assign([Name('new_lines', Store(), lineno=104, col_offset=12)], ListComp(Call(Attribute(Name('ws_re', Load(), lineno=104, col_offset=25), 'sub', Load(), lineno=104, col_offset=25), [Str('\\1', lineno=104, col_offset=35), Name('line', Load(), lineno=104, col_offset=43)], [], None, None, lineno=104, col_offset=25), [comprehension(Name('line', Store(), lineno=104, col_offset=53), Name('lines', Load(), lineno=104, col_offset=61), [])], lineno=104, col_offset=25), lineno=104, col_offset=12), If(Compare(Name('new_lines', Load(), lineno=105, col_offset=15), [NotEq()], [Name('lines', Load(), lineno=105, col_offset=28)], lineno=105, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=106, col_offset=16), 'copyfile', Load(), lineno=106, col_offset=16), [Name('path', Load(), lineno=106, col_offset=32), BinOp(Name('path', Load(), lineno=106, col_offset=38), Add(), Str('.bak', lineno=106, col_offset=45), lineno=106, col_offset=38)], [], None, None, lineno=106, col_offset=16), lineno=106, col_offset=16), With(Call(Name('open', Load(), lineno=107, col_offset=21), [Name('path', Load(), lineno=107, col_offset=26), Str('wb', lineno=107, col_offset=32)], [], None, None, lineno=107, col_offset=21), Name('f', Store(), lineno=107, col_offset=41), [Expr(Call(Attribute(Name('f', Load(), lineno=108, col_offset=20), 'writelines', Load(), lineno=108, col_offset=20), [Name('new_lines', Load(), lineno=108, col_offset=33)], [], None, None, lineno=108, col_offset=20), lineno=108, col_offset=20)], lineno=107, col_offset=21), Expr(Call(Attribute(Name('fixed', Load(), lineno=109, col_offset=16), 'append', Load(), lineno=109, col_offset=16), [Name('path', Load(), lineno=109, col_offset=29)], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=16)], [], lineno=105, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=110, col_offset=15), Name('err', Store(), lineno=110, col_offset=28), [Print(None, [BinOp(Str('Cannot fix %s: %s', lineno=111, col_offset=18), Mod(), Tuple([Name('path', Load(), lineno=111, col_offset=41), Name('err', Load(), lineno=111, col_offset=47)], Load(), lineno=111, col_offset=41), lineno=111, col_offset=18)], True, lineno=111, col_offset=12)], lineno=110, col_offset=8)], [], lineno=101, col_offset=8)], [], lineno=100, col_offset=4), Return(Name('fixed', Load(), lineno=112, col_offset=11), lineno=112, col_offset=4)], [Call(Name('status', Load(), lineno=97, col_offset=1), [Str('Fixing docs whitespace', lineno=97, col_offset=8)], [keyword('info', Name('report_modified_files', Load(), lineno=97, col_offset=39))], None, None, lineno=97, col_offset=1)], lineno=97, col_offset=0), FunctionDef('docs_modified', arguments([Name('file_paths', Param(), lineno=116, col_offset=18)], None, None, []), [Expr(Str('Report if any file in the Doc directory has been changed.', lineno=117, col_offset=4), lineno=117, col_offset=4), Return(Call(Name('bool', Load(), lineno=118, col_offset=11), [Name('file_paths', Load(), lineno=118, col_offset=16)], [], None, None, lineno=118, col_offset=11), lineno=118, col_offset=4)], [Call(Name('status', Load(), lineno=115, col_offset=1), [Str('Docs modified', lineno=115, col_offset=8)], [keyword('modal', Name('True', Load(), lineno=115, col_offset=31))], None, None, lineno=115, col_offset=1)], lineno=115, col_offset=0), FunctionDef('credit_given', arguments([Name('file_paths', Param(), lineno=122, col_offset=17)], None, None, []), [Expr(Str('Check if Misc/ACKS has been changed.', lineno=123, col_offset=4), lineno=123, col_offset=4), Return(Compare(Str('Misc/ACKS', lineno=124, col_offset=11), [In()], [Name('file_paths', Load(), lineno=124, col_offset=26)], lineno=124, col_offset=11), lineno=124, col_offset=4)], [Call(Name('status', Load(), lineno=121, col_offset=1), [Str('Misc/ACKS updated', lineno=121, col_offset=8)], [keyword('modal', Name('True', Load(), lineno=121, col_offset=35))], None, None, lineno=121, col_offset=1)], lineno=121, col_offset=0), FunctionDef('reported_news', arguments([Name('file_paths', Param(), lineno=128, col_offset=18)], None, None, []), [Expr(Str('Check if Misc/NEWS has been changed.', lineno=129, col_offset=4), lineno=129, col_offset=4), Return(Compare(Str('Misc/NEWS', lineno=130, col_offset=11), [In()], [Name('file_paths', Load(), lineno=130, col_offset=26)], lineno=130, col_offset=11), lineno=130, col_offset=4)], [Call(Name('status', Load(), lineno=127, col_offset=1), [Str('Misc/NEWS updated', lineno=127, col_offset=8)], [keyword('modal', Name('True', Load(), lineno=127, col_offset=35))], None, None, lineno=127, col_offset=1)], lineno=127, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('file_paths', Store(), lineno=134, col_offset=4)], Call(Name('changed_files', Load(), lineno=134, col_offset=17), [], [], None, None, lineno=134, col_offset=17), lineno=134, col_offset=4), Assign([Name('python_files', Store(), lineno=135, col_offset=4)], ListComp(Name('fn', Load(), lineno=135, col_offset=20), [comprehension(Name('fn', Store(), lineno=135, col_offset=27), Name('file_paths', Load(), lineno=135, col_offset=33), [Call(Attribute(Name('fn', Load(), lineno=135, col_offset=47), 'endswith', Load(), lineno=135, col_offset=47), [Str('.py', lineno=135, col_offset=59)], [], None, None, lineno=135, col_offset=47)])], lineno=135, col_offset=20), lineno=135, col_offset=4), Assign([Name('c_files', Store(), lineno=136, col_offset=4)], ListComp(Name('fn', Load(), lineno=136, col_offset=15), [comprehension(Name('fn', Store(), lineno=136, col_offset=22), Name('file_paths', Load(), lineno=136, col_offset=28), [Call(Attribute(Name('fn', Load(), lineno=136, col_offset=42), 'endswith', Load(), lineno=136, col_offset=42), [Tuple([Str('.c', lineno=136, col_offset=55), Str('.h', lineno=136, col_offset=61)], Load(), lineno=136, col_offset=55)], [], None, None, lineno=136, col_offset=42)])], lineno=136, col_offset=15), lineno=136, col_offset=4), Assign([Name('doc_files', Store(), lineno=137, col_offset=4)], ListComp(Name('fn', Load(), lineno=137, col_offset=17), [comprehension(Name('fn', Store(), lineno=137, col_offset=24), Name('file_paths', Load(), lineno=137, col_offset=30), [Call(Attribute(Name('fn', Load(), lineno=137, col_offset=44), 'startswith', Load(), lineno=137, col_offset=44), [Str('Doc', lineno=137, col_offset=58)], [], None, None, lineno=137, col_offset=44)])], lineno=137, col_offset=17), lineno=137, col_offset=4), Assign([Name('special_files', Store(), lineno=138, col_offset=4)], BinOp(Set([Str('Misc/ACKS', lineno=138, col_offset=21), Str('Misc/NEWS', lineno=138, col_offset=34)], lineno=138, col_offset=20), BitAnd(), Call(Name('set', Load(), lineno=138, col_offset=49), [Name('file_paths', Load(), lineno=138, col_offset=53)], [], None, None, lineno=138, col_offset=49), lineno=138, col_offset=20), lineno=138, col_offset=4), Expr(Call(Name('normalize_whitespace', Load(), lineno=140, col_offset=4), [Name('python_files', Load(), lineno=140, col_offset=25)], [], None, None, lineno=140, col_offset=4), lineno=140, col_offset=4), Expr(Call(Name('normalize_c_whitespace', Load(), lineno=142, col_offset=4), [Name('c_files', Load(), lineno=142, col_offset=27)], [], None, None, lineno=142, col_offset=4), lineno=142, col_offset=4), Expr(Call(Name('normalize_docs_whitespace', Load(), lineno=144, col_offset=4), [Name('doc_files', Load(), lineno=144, col_offset=30)], [], None, None, lineno=144, col_offset=4), lineno=144, col_offset=4), Expr(Call(Name('docs_modified', Load(), lineno=146, col_offset=4), [Name('doc_files', Load(), lineno=146, col_offset=18)], [], None, None, lineno=146, col_offset=4), lineno=146, col_offset=4), Expr(Call(Name('credit_given', Load(), lineno=148, col_offset=4), [Name('special_files', Load(), lineno=148, col_offset=17)], [], None, None, lineno=148, col_offset=4), lineno=148, col_offset=4), Expr(Call(Name('reported_news', Load(), lineno=150, col_offset=4), [Name('special_files', Load(), lineno=150, col_offset=18)], [], None, None, lineno=150, col_offset=4), lineno=150, col_offset=4), Print(None, [], True, lineno=153, col_offset=4), Print(None, [Str('Did you run the test suite?', lineno=154, col_offset=10)], True, lineno=154, col_offset=4)], [], lineno=133, col_offset=0), If(Compare(Name('__name__', Load(), lineno=157, col_offset=3), [Eq()], [Str('__main__', lineno=157, col_offset=15)], lineno=157, col_offset=3), [Expr(Call(Name('main', Load(), lineno=158, col_offset=4), [], [], None, None, lineno=158, col_offset=4), lineno=158, col_offset=4)], [], lineno=157, col_offset=0)])
