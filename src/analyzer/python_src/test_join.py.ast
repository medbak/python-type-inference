Module([Expr(Str('TestCases for using the DB.join and DBCursor.join_item methods.\n', lineno=2, col_offset=-1), lineno=2, col_offset=-1), Import([alias('os', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=6, col_offset=0), ImportFrom('test_all', [alias('db', None), alias('dbshelve', None), alias('test_support', None), alias('verbose', None), alias('get_new_environment_path', None), alias('get_new_database_path', None)], 0, lineno=8, col_offset=0), Assign([Name('ProductIndex', Store(), lineno=13, col_offset=0)], List([Tuple([Str('apple', lineno=14, col_offset=5), Str('Convenience Store', lineno=14, col_offset=14)], Load(), lineno=14, col_offset=5), Tuple([Str('blueberry', lineno=15, col_offset=5), Str("Farmer's Market", lineno=15, col_offset=18)], Load(), lineno=15, col_offset=5), Tuple([Str('shotgun', lineno=16, col_offset=5), Str('S-Mart', lineno=16, col_offset=16)], Load(), lineno=16, col_offset=5), Tuple([Str('pear', lineno=17, col_offset=5), Str("Farmer's Market", lineno=17, col_offset=13)], Load(), lineno=17, col_offset=5), Tuple([Str('chainsaw', lineno=18, col_offset=5), Str('S-Mart', lineno=18, col_offset=17)], Load(), lineno=18, col_offset=5), Tuple([Str('strawberry', lineno=19, col_offset=5), Str("Farmer's Market", lineno=19, col_offset=19)], Load(), lineno=19, col_offset=5)], Load(), lineno=13, col_offset=15), lineno=13, col_offset=0), Assign([Name('ColorIndex', Store(), lineno=22, col_offset=0)], List([Tuple([Str('blue', lineno=23, col_offset=5), Str('blueberry', lineno=23, col_offset=13)], Load(), lineno=23, col_offset=5), Tuple([Str('red', lineno=24, col_offset=5), Str('apple', lineno=24, col_offset=12)], Load(), lineno=24, col_offset=5), Tuple([Str('red', lineno=25, col_offset=5), Str('chainsaw', lineno=25, col_offset=12)], Load(), lineno=25, col_offset=5), Tuple([Str('red', lineno=26, col_offset=5), Str('strawberry', lineno=26, col_offset=12)], Load(), lineno=26, col_offset=5), Tuple([Str('yellow', lineno=27, col_offset=5), Str('peach', lineno=27, col_offset=15)], Load(), lineno=27, col_offset=5), Tuple([Str('yellow', lineno=28, col_offset=5), Str('pear', lineno=28, col_offset=15)], Load(), lineno=28, col_offset=5), Tuple([Str('black', lineno=29, col_offset=5), Str('shotgun', lineno=29, col_offset=14)], Load(), lineno=29, col_offset=5)], Load(), lineno=22, col_offset=13), lineno=22, col_offset=0), ClassDef('JoinTestCase', [Attribute(Name('unittest', Load(), lineno=32, col_offset=19), 'TestCase', Load(), lineno=32, col_offset=19)], [Assign([Name('keytype', Store(), lineno=33, col_offset=4)], Str('', lineno=33, col_offset=14), lineno=33, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=35, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'filename', Store(), lineno=36, col_offset=8)], BinOp(Attribute(Attribute(Name('self', Load(), lineno=36, col_offset=24), '__class__', Load(), lineno=36, col_offset=24), '__name__', Load(), lineno=36, col_offset=24), Add(), Str('.db', lineno=36, col_offset=50), lineno=36, col_offset=24), lineno=36, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'homeDir', Store(), lineno=37, col_offset=8)], Call(Name('get_new_environment_path', Load(), lineno=37, col_offset=23), [], [], None, None, lineno=37, col_offset=23), lineno=37, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'env', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=38, col_offset=19), 'DBEnv', Load(), lineno=38, col_offset=19), [], [], None, None, lineno=38, col_offset=19), lineno=38, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'env', Load(), lineno=39, col_offset=8), 'open', Load(), lineno=39, col_offset=8), [Attribute(Name('self', Load(), lineno=39, col_offset=22), 'homeDir', Load(), lineno=39, col_offset=22), BinOp(BinOp(Attribute(Name('db', Load(), lineno=39, col_offset=36), 'DB_CREATE', Load(), lineno=39, col_offset=36), BitOr(), Attribute(Name('db', Load(), lineno=39, col_offset=51), 'DB_INIT_MPOOL', Load(), lineno=39, col_offset=51), lineno=39, col_offset=36), BitOr(), Attribute(Name('db', Load(), lineno=39, col_offset=70), 'DB_INIT_LOCK', Load(), lineno=39, col_offset=70), lineno=39, col_offset=68)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=41, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'env', Load(), lineno=42, col_offset=8), 'close', Load(), lineno=42, col_offset=8), [], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Expr(Call(Attribute(Name('test_support', Load(), lineno=43, col_offset=8), 'rmtree', Load(), lineno=43, col_offset=8), [Attribute(Name('self', Load(), lineno=43, col_offset=28), 'homeDir', Load(), lineno=43, col_offset=28)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('test01_join', arguments([Name('self', Param(), lineno=45, col_offset=20)], None, None, []), [If(Name('verbose', Load(), lineno=46, col_offset=11), [Print(None, [Str('\n', lineno=47, col_offset=18), BinOp(Str('-=', lineno=47, col_offset=24), Mult(), Num(30, lineno=47, col_offset=31), lineno=47, col_offset=24)], True, lineno=47, col_offset=12), Print(None, [BinOp(Str('Running %s.test01_join...', lineno=48, col_offset=18), Mod(), Attribute(Attribute(Name('self', Load(), lineno=49, col_offset=18), '__class__', Load(), lineno=49, col_offset=18), '__name__', Load(), lineno=49, col_offset=18), lineno=48, col_offset=18)], True, lineno=48, col_offset=12)], [], lineno=46, col_offset=8), Assign([Name('priDB', Store(), lineno=52, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=52, col_offset=16), 'DB', Load(), lineno=52, col_offset=16), [Attribute(Name('self', Load(), lineno=52, col_offset=22), 'env', Load(), lineno=52, col_offset=22)], [], None, None, lineno=52, col_offset=16), lineno=52, col_offset=8), Expr(Call(Attribute(Name('priDB', Load(), lineno=53, col_offset=8), 'open', Load(), lineno=53, col_offset=8), [Attribute(Name('self', Load(), lineno=53, col_offset=19), 'filename', Load(), lineno=53, col_offset=19), Str('primary', lineno=53, col_offset=34), Attribute(Name('db', Load(), lineno=53, col_offset=45), 'DB_BTREE', Load(), lineno=53, col_offset=45), Attribute(Name('db', Load(), lineno=53, col_offset=58), 'DB_CREATE', Load(), lineno=53, col_offset=58)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), Expr(Call(Name('map', Load(), lineno=54, col_offset=8), [Lambda(arguments([Name('t', Param(), lineno=54, col_offset=19), Name('priDB', Param(), lineno=54, col_offset=22)], None, None, [Name('priDB', Load(), lineno=54, col_offset=28)]), Call(Attribute(Name('priDB', Load(), lineno=54, col_offset=35), 'put', Load(), lineno=54, col_offset=35), [], [], Name('t', Load(), lineno=54, col_offset=46), None, lineno=54, col_offset=35), lineno=54, col_offset=12), Name('ProductIndex', Load(), lineno=54, col_offset=50)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Assign([Name('secDB', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=57, col_offset=16), 'DB', Load(), lineno=57, col_offset=16), [Attribute(Name('self', Load(), lineno=57, col_offset=22), 'env', Load(), lineno=57, col_offset=22)], [], None, None, lineno=57, col_offset=16), lineno=57, col_offset=8), Expr(Call(Attribute(Name('secDB', Load(), lineno=58, col_offset=8), 'set_flags', Load(), lineno=58, col_offset=8), [BinOp(Attribute(Name('db', Load(), lineno=58, col_offset=24), 'DB_DUP', Load(), lineno=58, col_offset=24), BitOr(), Attribute(Name('db', Load(), lineno=58, col_offset=36), 'DB_DUPSORT', Load(), lineno=58, col_offset=36), lineno=58, col_offset=24)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Attribute(Name('secDB', Load(), lineno=59, col_offset=8), 'open', Load(), lineno=59, col_offset=8), [Attribute(Name('self', Load(), lineno=59, col_offset=19), 'filename', Load(), lineno=59, col_offset=19), Str('secondary', lineno=59, col_offset=34), Attribute(Name('db', Load(), lineno=59, col_offset=47), 'DB_BTREE', Load(), lineno=59, col_offset=47), Attribute(Name('db', Load(), lineno=59, col_offset=60), 'DB_CREATE', Load(), lineno=59, col_offset=60)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Name('map', Load(), lineno=60, col_offset=8), [Lambda(arguments([Name('t', Param(), lineno=60, col_offset=19), Name('secDB', Param(), lineno=60, col_offset=22)], None, None, [Name('secDB', Load(), lineno=60, col_offset=28)]), Call(Attribute(Name('secDB', Load(), lineno=60, col_offset=35), 'put', Load(), lineno=60, col_offset=35), [], [], Name('t', Load(), lineno=60, col_offset=46), None, lineno=60, col_offset=35), lineno=60, col_offset=12), Name('ColorIndex', Load(), lineno=60, col_offset=50)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8), Assign([Name('sCursor', Store(), lineno=62, col_offset=8)], Name('None', Load(), lineno=62, col_offset=18), lineno=62, col_offset=8), Assign([Name('jCursor', Store(), lineno=63, col_offset=8)], Name('None', Load(), lineno=63, col_offset=18), lineno=63, col_offset=8), TryFinally([Assign([Name('sCursor', Store(), lineno=66, col_offset=12)], Call(Attribute(Name('secDB', Load(), lineno=66, col_offset=22), 'cursor', Load(), lineno=66, col_offset=22), [], [], None, None, lineno=66, col_offset=22), lineno=66, col_offset=12), Assign([Name('tmp', Store(), lineno=69, col_offset=12)], Call(Attribute(Name('sCursor', Load(), lineno=69, col_offset=18), 'set', Load(), lineno=69, col_offset=18), [Str('red', lineno=69, col_offset=30)], [], None, None, lineno=69, col_offset=18), lineno=69, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=12), 'assertTrue', Load(), lineno=70, col_offset=12), [Name('tmp', Load(), lineno=70, col_offset=28)], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=12), Assign([Name('jCursor', Store(), lineno=75, col_offset=12)], Call(Attribute(Name('priDB', Load(), lineno=75, col_offset=22), 'join', Load(), lineno=75, col_offset=22), [List([Name('sCursor', Load(), lineno=75, col_offset=34)], Load(), lineno=75, col_offset=33)], [], None, None, lineno=75, col_offset=22), lineno=75, col_offset=12), If(Compare(Call(Attribute(Name('jCursor', Load(), lineno=77, col_offset=15), 'get', Load(), lineno=77, col_offset=15), [Num(0, lineno=77, col_offset=27)], [], None, None, lineno=77, col_offset=15), [NotEq()], [Tuple([Str('apple', lineno=77, col_offset=34), Str('Convenience Store', lineno=77, col_offset=43)], Load(), lineno=77, col_offset=34)], lineno=77, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=16), 'fail', Load(), lineno=78, col_offset=16), [Str('join cursor positioned wrong', lineno=78, col_offset=26)], [], None, None, lineno=78, col_offset=16), lineno=78, col_offset=16)], [], lineno=77, col_offset=12), If(Compare(Call(Attribute(Name('jCursor', Load(), lineno=79, col_offset=15), 'join_item', Load(), lineno=79, col_offset=15), [], [], None, None, lineno=79, col_offset=15), [NotEq()], [Str('chainsaw', lineno=79, col_offset=38)], lineno=79, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=16), 'fail', Load(), lineno=80, col_offset=16), [Str('DBCursor.join_item returned wrong item', lineno=80, col_offset=26)], [], None, None, lineno=80, col_offset=16), lineno=80, col_offset=16)], [], lineno=79, col_offset=12), If(Compare(Subscript(Call(Attribute(Name('jCursor', Load(), lineno=81, col_offset=15), 'get', Load(), lineno=81, col_offset=15), [Num(0, lineno=81, col_offset=27)], [], None, None, lineno=81, col_offset=15), Index(Num(0, lineno=81, col_offset=30)), Load(), lineno=81, col_offset=15), [NotEq()], [Str('strawberry', lineno=81, col_offset=36)], lineno=81, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=16), 'fail', Load(), lineno=82, col_offset=16), [Str('join cursor returned wrong thing', lineno=82, col_offset=26)], [], None, None, lineno=82, col_offset=16), lineno=82, col_offset=16)], [], lineno=81, col_offset=12), If(Call(Attribute(Name('jCursor', Load(), lineno=83, col_offset=15), 'get', Load(), lineno=83, col_offset=15), [Num(0, lineno=83, col_offset=27)], [], None, None, lineno=83, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=16), 'fail', Load(), lineno=84, col_offset=16), [Str('join cursor returned too many items', lineno=84, col_offset=26)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=16)], [], lineno=83, col_offset=12)], [If(Name('jCursor', Load(), lineno=86, col_offset=15), [Expr(Call(Attribute(Name('jCursor', Load(), lineno=87, col_offset=16), 'close', Load(), lineno=87, col_offset=16), [], [], None, None, lineno=87, col_offset=16), lineno=87, col_offset=16)], [], lineno=86, col_offset=12), If(Name('sCursor', Load(), lineno=88, col_offset=15), [Expr(Call(Attribute(Name('sCursor', Load(), lineno=89, col_offset=16), 'close', Load(), lineno=89, col_offset=16), [], [], None, None, lineno=89, col_offset=16), lineno=89, col_offset=16)], [], lineno=88, col_offset=12), Expr(Call(Attribute(Name('priDB', Load(), lineno=90, col_offset=12), 'close', Load(), lineno=90, col_offset=12), [], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12), Expr(Call(Attribute(Name('secDB', Load(), lineno=91, col_offset=12), 'close', Load(), lineno=91, col_offset=12), [], [], None, None, lineno=91, col_offset=12), lineno=91, col_offset=12)], lineno=64, col_offset=8)], [], lineno=45, col_offset=4)], [], lineno=32, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Assign([Name('suite', Store(), lineno=95, col_offset=4)], Call(Attribute(Name('unittest', Load(), lineno=95, col_offset=12), 'TestSuite', Load(), lineno=95, col_offset=12), [], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=4), Expr(Call(Attribute(Name('suite', Load(), lineno=97, col_offset=4), 'addTest', Load(), lineno=97, col_offset=4), [Call(Attribute(Name('unittest', Load(), lineno=97, col_offset=18), 'makeSuite', Load(), lineno=97, col_offset=18), [Name('JoinTestCase', Load(), lineno=97, col_offset=37)], [], None, None, lineno=97, col_offset=18)], [], None, None, lineno=97, col_offset=4), lineno=97, col_offset=4), Return(Name('suite', Load(), lineno=99, col_offset=11), lineno=99, col_offset=4)], [], lineno=94, col_offset=0)])
