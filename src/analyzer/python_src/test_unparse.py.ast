Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), Import([alias('cStringIO', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('os', None)], lineno=5, col_offset=0), Import([alias('tokenize', None)], lineno=6, col_offset=0), Import([alias('ast', None)], lineno=7, col_offset=0), Import([alias('unparse', None)], lineno=8, col_offset=0), FunctionDef('read_pyfile', arguments([Name('filename', Param(), lineno=10, col_offset=16)], None, None, []), [Expr(Str('Read and return the contents of a Python source file (as a\n    string), taking into account the file encoding.', lineno=12, col_offset=-1), lineno=12, col_offset=-1), With(Call(Name('open', Load(), lineno=13, col_offset=9), [Name('filename', Load(), lineno=13, col_offset=14), Str('r', lineno=13, col_offset=24)], [], None, None, lineno=13, col_offset=9), Name('pyfile', Store(), lineno=13, col_offset=32), [Assign([Name('source', Store(), lineno=14, col_offset=8)], Call(Attribute(Name('pyfile', Load(), lineno=14, col_offset=17), 'read', Load(), lineno=14, col_offset=17), [], [], None, None, lineno=14, col_offset=17), lineno=14, col_offset=8)], lineno=13, col_offset=9), Return(Name('source', Load(), lineno=15, col_offset=11), lineno=15, col_offset=4)], [], lineno=10, col_offset=0), Assign([Name('for_else', Store(), lineno=17, col_offset=0)], Str('def f():\n    for x in range(10):\n        break\n    else:\n        y = 2\n    z = 3\n', lineno=24, col_offset=-1), lineno=17, col_offset=0), Assign([Name('while_else', Store(), lineno=26, col_offset=0)], Str('def g():\n    while True:\n        break\n    else:\n        y = 2\n    z = 3\n', lineno=33, col_offset=-1), lineno=26, col_offset=0), Assign([Name('relative_import', Store(), lineno=35, col_offset=0)], Str('from . import fred\nfrom .. import barney\nfrom .australia import shrimp as prawns\n', lineno=39, col_offset=-1), lineno=35, col_offset=0), Assign([Name('class_decorator', Store(), lineno=41, col_offset=0)], Str('@f1(arg)\n@f2\nclass Foo: pass\n', lineno=45, col_offset=-1), lineno=41, col_offset=0), Assign([Name('elif1', Store(), lineno=47, col_offset=0)], Str('if cond1:\n    suite1\nelif cond2:\n    suite2\nelse:\n    suite3\n', lineno=54, col_offset=-1), lineno=47, col_offset=0), Assign([Name('elif2', Store(), lineno=56, col_offset=0)], Str('if cond1:\n    suite1\nelif cond2:\n    suite2\n', lineno=61, col_offset=-1), lineno=56, col_offset=0), Assign([Name('try_except_finally', Store(), lineno=63, col_offset=0)], Str('try:\n    suite1\nexcept ex1:\n    suite2\nexcept ex2:\n    suite3\nelse:\n    suite4\nfinally:\n    suite5\n', lineno=74, col_offset=-1), lineno=63, col_offset=0), ClassDef('ASTTestCase', [Attribute(Name('unittest', Load(), lineno=76, col_offset=18), 'TestCase', Load(), lineno=76, col_offset=18)], [FunctionDef('assertASTEqual', arguments([Name('self', Param(), lineno=77, col_offset=23), Name('ast1', Param(), lineno=77, col_offset=29), Name('ast2', Param(), lineno=77, col_offset=35)], None, None, []), [Assign([Name('dump1', Store(), lineno=78, col_offset=8)], Call(Attribute(Name('ast', Load(), lineno=78, col_offset=16), 'dump', Load(), lineno=78, col_offset=16), [Name('ast1', Load(), lineno=78, col_offset=25)], [], None, None, lineno=78, col_offset=16), lineno=78, col_offset=8), Assign([Name('dump2', Store(), lineno=79, col_offset=8)], Call(Attribute(Name('ast', Load(), lineno=79, col_offset=16), 'dump', Load(), lineno=79, col_offset=16), [Name('ast2', Load(), lineno=79, col_offset=25)], [], None, None, lineno=79, col_offset=16), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Call(Attribute(Name('ast', Load(), lineno=80, col_offset=25), 'dump', Load(), lineno=80, col_offset=25), [Name('ast1', Load(), lineno=80, col_offset=34)], [], None, None, lineno=80, col_offset=25), Call(Attribute(Name('ast', Load(), lineno=80, col_offset=41), 'dump', Load(), lineno=80, col_offset=41), [Name('ast2', Load(), lineno=80, col_offset=50)], [], None, None, lineno=80, col_offset=41)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('check_roundtrip', arguments([Name('self', Param(), lineno=82, col_offset=24), Name('code1', Param(), lineno=82, col_offset=30), Name('filename', Param(), lineno=82, col_offset=37)], None, None, [Str('internal', lineno=82, col_offset=46)]), [Assign([Name('ast1', Store(), lineno=83, col_offset=8)], Call(Name('compile', Load(), lineno=83, col_offset=15), [Name('code1', Load(), lineno=83, col_offset=23), Name('filename', Load(), lineno=83, col_offset=30), Str('exec', lineno=83, col_offset=40), Attribute(Name('ast', Load(), lineno=83, col_offset=48), 'PyCF_ONLY_AST', Load(), lineno=83, col_offset=48)], [], None, None, lineno=83, col_offset=15), lineno=83, col_offset=8), Assign([Name('unparse_buffer', Store(), lineno=84, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=84, col_offset=25), 'StringIO', Load(), lineno=84, col_offset=25), [], [], None, None, lineno=84, col_offset=25), lineno=84, col_offset=8), Expr(Call(Attribute(Name('unparse', Load(), lineno=85, col_offset=8), 'Unparser', Load(), lineno=85, col_offset=8), [Name('ast1', Load(), lineno=85, col_offset=25), Name('unparse_buffer', Load(), lineno=85, col_offset=31)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Assign([Name('code2', Store(), lineno=86, col_offset=8)], Call(Attribute(Name('unparse_buffer', Load(), lineno=86, col_offset=16), 'getvalue', Load(), lineno=86, col_offset=16), [], [], None, None, lineno=86, col_offset=16), lineno=86, col_offset=8), Assign([Name('ast2', Store(), lineno=87, col_offset=8)], Call(Name('compile', Load(), lineno=87, col_offset=15), [Name('code2', Load(), lineno=87, col_offset=23), Name('filename', Load(), lineno=87, col_offset=30), Str('exec', lineno=87, col_offset=40), Attribute(Name('ast', Load(), lineno=87, col_offset=48), 'PyCF_ONLY_AST', Load(), lineno=87, col_offset=48)], [], None, None, lineno=87, col_offset=15), lineno=87, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertASTEqual', Load(), lineno=88, col_offset=8), [Name('ast1', Load(), lineno=88, col_offset=28), Name('ast2', Load(), lineno=88, col_offset=34)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=82, col_offset=4)], [], lineno=76, col_offset=0), ClassDef('UnparseTestCase', [Name('ASTTestCase', Load(), lineno=90, col_offset=22)], [FunctionDef('test_del_statement', arguments([Name('self', Param(), lineno=93, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'check_roundtrip', Load(), lineno=94, col_offset=8), [Str('del x, y, z', lineno=94, col_offset=29)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('test_shifts', arguments([Name('self', Param(), lineno=96, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=8), 'check_roundtrip', Load(), lineno=97, col_offset=8), [Str('45 << 2', lineno=97, col_offset=29)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'check_roundtrip', Load(), lineno=98, col_offset=8), [Str('13 >> 7', lineno=98, col_offset=29)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('test_for_else', arguments([Name('self', Param(), lineno=100, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'check_roundtrip', Load(), lineno=101, col_offset=8), [Name('for_else', Load(), lineno=101, col_offset=29)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('test_while_else', arguments([Name('self', Param(), lineno=103, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'check_roundtrip', Load(), lineno=104, col_offset=8), [Name('while_else', Load(), lineno=104, col_offset=29)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8)], [], lineno=103, col_offset=4), FunctionDef('test_unary_parens', arguments([Name('self', Param(), lineno=106, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'check_roundtrip', Load(), lineno=107, col_offset=8), [Str('(-1)**7', lineno=107, col_offset=29)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'check_roundtrip', Load(), lineno=108, col_offset=8), [Str('(-1.)**8', lineno=108, col_offset=29)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'check_roundtrip', Load(), lineno=109, col_offset=8), [Str('(-1j)**6', lineno=109, col_offset=29)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'check_roundtrip', Load(), lineno=110, col_offset=8), [Str('not True or False', lineno=110, col_offset=29)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'check_roundtrip', Load(), lineno=111, col_offset=8), [Str('True or not False', lineno=111, col_offset=29)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=106, col_offset=4), FunctionDef('test_integer_parens', arguments([Name('self', Param(), lineno=113, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=8), 'check_roundtrip', Load(), lineno=114, col_offset=8), [Str('3 .__abs__()', lineno=114, col_offset=29)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('test_huge_float', arguments([Name('self', Param(), lineno=116, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'check_roundtrip', Load(), lineno=117, col_offset=8), [Str('1e1000', lineno=117, col_offset=29)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'check_roundtrip', Load(), lineno=118, col_offset=8), [Str('-1e1000', lineno=118, col_offset=29)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'check_roundtrip', Load(), lineno=119, col_offset=8), [Str('1e1000j', lineno=119, col_offset=29)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'check_roundtrip', Load(), lineno=120, col_offset=8), [Str('-1e1000j', lineno=120, col_offset=29)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('test_min_int', arguments([Name('self', Param(), lineno=122, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=8), 'check_roundtrip', Load(), lineno=123, col_offset=8), [Call(Name('str', Load(), lineno=123, col_offset=29), [BinOp(UnaryOp(USub(), Attribute(Name('sys', Load(), lineno=123, col_offset=34), 'maxint', Load(), lineno=123, col_offset=34), lineno=123, col_offset=33), Sub(), Num(1, lineno=123, col_offset=45), lineno=123, col_offset=33)], [], None, None, lineno=123, col_offset=29)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=8), 'check_roundtrip', Load(), lineno=124, col_offset=8), [BinOp(Str('-(%s)', lineno=124, col_offset=29), Mod(), BinOp(Attribute(Name('sys', Load(), lineno=124, col_offset=40), 'maxint', Load(), lineno=124, col_offset=40), Add(), Num(1, lineno=124, col_offset=53), lineno=124, col_offset=40), lineno=124, col_offset=29)], [], None, None, lineno=124, col_offset=8), lineno=124, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('test_imaginary_literals', arguments([Name('self', Param(), lineno=126, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=8), 'check_roundtrip', Load(), lineno=127, col_offset=8), [Str('7j', lineno=127, col_offset=29)], [], None, None, lineno=127, col_offset=8), lineno=127, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'check_roundtrip', Load(), lineno=128, col_offset=8), [Str('-7j', lineno=128, col_offset=29)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=8), 'check_roundtrip', Load(), lineno=129, col_offset=8), [Str('-(7j)', lineno=129, col_offset=29)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'check_roundtrip', Load(), lineno=130, col_offset=8), [Str('0j', lineno=130, col_offset=29)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=131, col_offset=8), 'check_roundtrip', Load(), lineno=131, col_offset=8), [Str('-0j', lineno=131, col_offset=29)], [], None, None, lineno=131, col_offset=8), lineno=131, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=132, col_offset=8), 'check_roundtrip', Load(), lineno=132, col_offset=8), [Str('-(0j)', lineno=132, col_offset=29)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('test_negative_zero', arguments([Name('self', Param(), lineno=134, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=135, col_offset=8), 'check_roundtrip', Load(), lineno=135, col_offset=8), [Str('-0', lineno=135, col_offset=29)], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'check_roundtrip', Load(), lineno=136, col_offset=8), [Str('-(0)', lineno=136, col_offset=29)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'check_roundtrip', Load(), lineno=137, col_offset=8), [Str('-0b0', lineno=137, col_offset=29)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=8), 'check_roundtrip', Load(), lineno=138, col_offset=8), [Str('-(0b0)', lineno=138, col_offset=29)], [], None, None, lineno=138, col_offset=8), lineno=138, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=8), 'check_roundtrip', Load(), lineno=139, col_offset=8), [Str('-0o0', lineno=139, col_offset=29)], [], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'check_roundtrip', Load(), lineno=140, col_offset=8), [Str('-(0o0)', lineno=140, col_offset=29)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'check_roundtrip', Load(), lineno=141, col_offset=8), [Str('-0x0', lineno=141, col_offset=29)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'check_roundtrip', Load(), lineno=142, col_offset=8), [Str('-(0x0)', lineno=142, col_offset=29)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('test_lambda_parentheses', arguments([Name('self', Param(), lineno=144, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'check_roundtrip', Load(), lineno=145, col_offset=8), [Str('(lambda: int)()', lineno=145, col_offset=29)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('test_chained_comparisons', arguments([Name('self', Param(), lineno=147, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=8), 'check_roundtrip', Load(), lineno=148, col_offset=8), [Str('1 < 4 <= 5', lineno=148, col_offset=29)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'check_roundtrip', Load(), lineno=149, col_offset=8), [Str('a is b is c is not d', lineno=149, col_offset=29)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('test_function_arguments', arguments([Name('self', Param(), lineno=151, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'check_roundtrip', Load(), lineno=152, col_offset=8), [Str('def f(): pass', lineno=152, col_offset=29)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'check_roundtrip', Load(), lineno=153, col_offset=8), [Str('def f(a): pass', lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'check_roundtrip', Load(), lineno=154, col_offset=8), [Str('def f(b = 2): pass', lineno=154, col_offset=29)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'check_roundtrip', Load(), lineno=155, col_offset=8), [Str('def f(a, b): pass', lineno=155, col_offset=29)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=156, col_offset=8), 'check_roundtrip', Load(), lineno=156, col_offset=8), [Str('def f(a, b = 2): pass', lineno=156, col_offset=29)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'check_roundtrip', Load(), lineno=157, col_offset=8), [Str('def f(a = 5, b = 2): pass', lineno=157, col_offset=29)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=8), 'check_roundtrip', Load(), lineno=158, col_offset=8), [Str('def f(*args, **kwargs): pass', lineno=158, col_offset=29)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('test_relative_import', arguments([Name('self', Param(), lineno=160, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=8), 'check_roundtrip', Load(), lineno=161, col_offset=8), [Name('relative_import', Load(), lineno=161, col_offset=29)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8)], [], lineno=160, col_offset=4), FunctionDef('test_bytes', arguments([Name('self', Param(), lineno=163, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'check_roundtrip', Load(), lineno=164, col_offset=8), [Str("b'123'", lineno=164, col_offset=29)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('test_set_literal', arguments([Name('self', Param(), lineno=166, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'check_roundtrip', Load(), lineno=167, col_offset=8), [Str("{'a', 'b', 'c'}", lineno=167, col_offset=29)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('test_set_comprehension', arguments([Name('self', Param(), lineno=169, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'check_roundtrip', Load(), lineno=170, col_offset=8), [Str('{x for x in range(5)}', lineno=170, col_offset=29)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('test_dict_comprehension', arguments([Name('self', Param(), lineno=172, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'check_roundtrip', Load(), lineno=173, col_offset=8), [Str('{x: x*x for x in range(10)}', lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('test_class_decorators', arguments([Name('self', Param(), lineno=175, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=8), 'check_roundtrip', Load(), lineno=176, col_offset=8), [Name('class_decorator', Load(), lineno=176, col_offset=29)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('test_elifs', arguments([Name('self', Param(), lineno=178, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'check_roundtrip', Load(), lineno=179, col_offset=8), [Name('elif1', Load(), lineno=179, col_offset=29)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'check_roundtrip', Load(), lineno=180, col_offset=8), [Name('elif2', Load(), lineno=180, col_offset=29)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('test_try_except_finally', arguments([Name('self', Param(), lineno=182, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'check_roundtrip', Load(), lineno=183, col_offset=8), [Name('try_except_finally', Load(), lineno=183, col_offset=29)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8)], [], lineno=182, col_offset=4)], [], lineno=90, col_offset=0), ClassDef('DirectoryTestCase', [Name('ASTTestCase', Load(), lineno=185, col_offset=24)], [Expr(Str('Test roundtrip behaviour on all files in Lib and Lib/test.', lineno=186, col_offset=4), lineno=186, col_offset=4), Assign([Name('test_directories', Store(), lineno=189, col_offset=4)], Tuple([Str('Lib', lineno=189, col_offset=23), Call(Attribute(Attribute(Name('os', Load(), lineno=189, col_offset=30), 'path', Load(), lineno=189, col_offset=30), 'join', Load(), lineno=189, col_offset=30), [Str('Lib', lineno=189, col_offset=43), Str('test', lineno=189, col_offset=50)], [], None, None, lineno=189, col_offset=30)], Load(), lineno=189, col_offset=23), lineno=189, col_offset=4), FunctionDef('test_files', arguments([Name('self', Param(), lineno=191, col_offset=19)], None, None, []), [Assign([Name('dist_dir', Store(), lineno=193, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=193, col_offset=19), 'path', Load(), lineno=193, col_offset=19), 'join', Load(), lineno=193, col_offset=19), [Call(Attribute(Attribute(Name('os', Load(), lineno=193, col_offset=32), 'path', Load(), lineno=193, col_offset=32), 'dirname', Load(), lineno=193, col_offset=32), [Name('__file__', Load(), lineno=193, col_offset=48)], [], None, None, lineno=193, col_offset=32), Attribute(Name('os', Load(), lineno=193, col_offset=59), 'pardir', Load(), lineno=193, col_offset=59), Attribute(Name('os', Load(), lineno=193, col_offset=70), 'pardir', Load(), lineno=193, col_offset=70)], [], None, None, lineno=193, col_offset=19), lineno=193, col_offset=8), Assign([Name('names', Store(), lineno=195, col_offset=8)], List([], Load(), lineno=195, col_offset=16), lineno=195, col_offset=8), For(Name('d', Store(), lineno=196, col_offset=12), Attribute(Name('self', Load(), lineno=196, col_offset=17), 'test_directories', Load(), lineno=196, col_offset=17), [Assign([Name('test_dir', Store(), lineno=197, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=197, col_offset=23), 'path', Load(), lineno=197, col_offset=23), 'join', Load(), lineno=197, col_offset=23), [Name('dist_dir', Load(), lineno=197, col_offset=36), Name('d', Load(), lineno=197, col_offset=46)], [], None, None, lineno=197, col_offset=23), lineno=197, col_offset=12), For(Name('n', Store(), lineno=198, col_offset=16), Call(Attribute(Name('os', Load(), lineno=198, col_offset=21), 'listdir', Load(), lineno=198, col_offset=21), [Name('test_dir', Load(), lineno=198, col_offset=32)], [], None, None, lineno=198, col_offset=21), [If(BoolOp(And(), [Call(Attribute(Name('n', Load(), lineno=199, col_offset=19), 'endswith', Load(), lineno=199, col_offset=19), [Str('.py', lineno=199, col_offset=30)], [], None, None, lineno=199, col_offset=19), UnaryOp(Not(), Call(Attribute(Name('n', Load(), lineno=199, col_offset=45), 'startswith', Load(), lineno=199, col_offset=45), [Str('bad', lineno=199, col_offset=58)], [], None, None, lineno=199, col_offset=45), lineno=199, col_offset=41)], lineno=199, col_offset=19), [Expr(Call(Attribute(Name('names', Load(), lineno=200, col_offset=20), 'append', Load(), lineno=200, col_offset=20), [Call(Attribute(Attribute(Name('os', Load(), lineno=200, col_offset=33), 'path', Load(), lineno=200, col_offset=33), 'join', Load(), lineno=200, col_offset=33), [Name('test_dir', Load(), lineno=200, col_offset=46), Name('n', Load(), lineno=200, col_offset=56)], [], None, None, lineno=200, col_offset=33)], [], None, None, lineno=200, col_offset=20), lineno=200, col_offset=20)], [], lineno=199, col_offset=16)], [], lineno=198, col_offset=12)], [], lineno=196, col_offset=8), For(Name('filename', Store(), lineno=202, col_offset=12), Name('names', Load(), lineno=202, col_offset=24), [If(Attribute(Name('test_support', Load(), lineno=203, col_offset=15), 'verbose', Load(), lineno=203, col_offset=15), [Print(None, [BinOp(Str('Testing %s', lineno=204, col_offset=22), Mod(), Name('filename', Load(), lineno=204, col_offset=37), lineno=204, col_offset=22)], True, lineno=204, col_offset=16)], [], lineno=203, col_offset=12), Assign([Name('source', Store(), lineno=205, col_offset=12)], Call(Name('read_pyfile', Load(), lineno=205, col_offset=21), [Name('filename', Load(), lineno=205, col_offset=33)], [], None, None, lineno=205, col_offset=21), lineno=205, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=12), 'check_roundtrip', Load(), lineno=206, col_offset=12), [Name('source', Load(), lineno=206, col_offset=33)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12)], [], lineno=202, col_offset=8)], [], lineno=191, col_offset=4)], [], lineno=185, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=210, col_offset=4), 'run_unittest', Load(), lineno=210, col_offset=4), [Name('UnparseTestCase', Load(), lineno=210, col_offset=30), Name('DirectoryTestCase', Load(), lineno=210, col_offset=47)], [], None, None, lineno=210, col_offset=4), lineno=210, col_offset=4)], [], lineno=209, col_offset=0), If(Compare(Name('__name__', Load(), lineno=212, col_offset=3), [Eq()], [Str('__main__', lineno=212, col_offset=15)], lineno=212, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=213, col_offset=4), [], [], None, None, lineno=213, col_offset=4), lineno=213, col_offset=4)], [], lineno=212, col_offset=0)])
