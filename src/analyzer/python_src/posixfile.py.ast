Module([Expr(Str("Extended file operations available in POSIX.\n\nf = posixfile.open(filename, [mode, [bufsize]])\n      will create a new posixfile object\n\nf = posixfile.fileopen(fileobject)\n      will create a posixfile object from a builtin file object\n\nf.file()\n      will return the original builtin file object\n\nf.dup()\n      will return a new file object based on a new filedescriptor\n\nf.dup2(fd)\n      will return a new file object based on the given filedescriptor\n\nf.flags(mode)\n      will turn on the associated flag (merge)\n      mode can contain the following characters:\n\n  (character representing a flag)\n      a       append only flag\n      c       close on exec flag\n      n       no delay flag\n      s       synchronization flag\n  (modifiers)\n      !       turn flags 'off' instead of default 'on'\n      =       copy flags 'as is' instead of default 'merge'\n      ?       return a string in which the characters represent the flags\n              that are set\n\n      note: - the '!' and '=' modifiers are mutually exclusive.\n            - the '?' modifier will return the status of the flags after they\n              have been changed by other characters in the mode string\n\nf.lock(mode [, len [, start [, whence]]])\n      will (un)lock a region\n      mode can contain the following characters:\n\n  (character representing type of lock)\n      u       unlock\n      r       read lock\n      w       write lock\n  (modifiers)\n      |       wait until the lock can be granted\n      ?       return the first lock conflicting with the requested lock\n              or 'None' if there is no conflict. The lock returned is in the\n              format (mode, len, start, whence, pid) where mode is a\n              character representing the type of lock ('r' or 'w')\n\n      note: - the '?' modifier prevents a region from being locked; it is\n              query only\n", lineno=54, col_offset=-1), lineno=54, col_offset=-1), Import([alias('warnings', None)], lineno=55, col_offset=0), Expr(Call(Attribute(Name('warnings', Load(), lineno=56, col_offset=0), 'warn', Load(), lineno=56, col_offset=0), [Str('The posixfile module is deprecated; fcntl.lockf() provides better locking', lineno=56, col_offset=14), Name('DeprecationWarning', Load(), lineno=57, col_offset=57), Num(2, lineno=57, col_offset=77)], [], None, None, lineno=56, col_offset=0), lineno=56, col_offset=0), ClassDef('_posixfile_', [], [Expr(Str('File wrapper class that provides extra POSIX file routines.', lineno=60, col_offset=4), lineno=60, col_offset=4), Assign([Name('states', Store(), lineno=62, col_offset=4)], List([Str('open', lineno=62, col_offset=14), Str('closed', lineno=62, col_offset=22)], Load(), lineno=62, col_offset=13), lineno=62, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=67, col_offset=17)], None, None, []), [Assign([Name('file', Store(), lineno=68, col_offset=8)], Attribute(Name('self', Load(), lineno=68, col_offset=15), '_file_', Load(), lineno=68, col_offset=15), lineno=68, col_offset=8), Return(BinOp(Str("<%s posixfile '%s', mode '%s' at %s>", lineno=69, col_offset=15), Mod(), Tuple([Subscript(Attribute(Name('self', Load(), lineno=70, col_offset=17), 'states', Load(), lineno=70, col_offset=17), Index(Attribute(Name('file', Load(), lineno=70, col_offset=29), 'closed', Load(), lineno=70, col_offset=29)), Load(), lineno=70, col_offset=17), Attribute(Name('file', Load(), lineno=70, col_offset=43), 'name', Load(), lineno=70, col_offset=43), Attribute(Name('file', Load(), lineno=70, col_offset=54), 'mode', Load(), lineno=70, col_offset=54), Subscript(Call(Name('hex', Load(), lineno=71, col_offset=17), [Call(Name('id', Load(), lineno=71, col_offset=21), [Name('self', Load(), lineno=71, col_offset=24)], [], None, None, lineno=71, col_offset=21)], [], None, None, lineno=71, col_offset=17), Slice(Num(2, lineno=71, col_offset=31), None, None), Load(), lineno=71, col_offset=17)], Load(), lineno=70, col_offset=17), lineno=69, col_offset=15), lineno=69, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('open', arguments([Name('self', Param(), lineno=76, col_offset=13), Name('name', Param(), lineno=76, col_offset=19), Name('mode', Param(), lineno=76, col_offset=25), Name('bufsize', Param(), lineno=76, col_offset=35)], None, None, [Str('r', lineno=76, col_offset=30), Num(-1, lineno=76, col_offset=44)]), [Import([alias('__builtin__', None)], lineno=77, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=78, col_offset=15), 'fileopen', Load(), lineno=78, col_offset=15), [Call(Attribute(Name('__builtin__', Load(), lineno=78, col_offset=29), 'open', Load(), lineno=78, col_offset=29), [Name('name', Load(), lineno=78, col_offset=46), Name('mode', Load(), lineno=78, col_offset=52), Name('bufsize', Load(), lineno=78, col_offset=58)], [], None, None, lineno=78, col_offset=29)], [], None, None, lineno=78, col_offset=15), lineno=78, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('fileopen', arguments([Name('self', Param(), lineno=80, col_offset=17), Name('file', Param(), lineno=80, col_offset=23)], None, None, []), [Import([alias('types', None)], lineno=81, col_offset=8), If(Compare(Call(Name('repr', Load(), lineno=82, col_offset=11), [Call(Name('type', Load(), lineno=82, col_offset=16), [Name('file', Load(), lineno=82, col_offset=21)], [], None, None, lineno=82, col_offset=16)], [], None, None, lineno=82, col_offset=11), [NotEq()], [Str("<type 'file'>", lineno=82, col_offset=31)], lineno=82, col_offset=11), [Raise(Name('TypeError', Load(), lineno=83, col_offset=18), Str('posixfile.fileopen() arg must be file object', lineno=83, col_offset=29), None, lineno=83, col_offset=12)], [], lineno=82, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=84, col_offset=8), '_file_', Store(), lineno=84, col_offset=8)], Name('file', Load(), lineno=84, col_offset=23), lineno=84, col_offset=8), For(Name('maybemethod', Store(), lineno=86, col_offset=12), Call(Name('dir', Load(), lineno=86, col_offset=27), [Name('file', Load(), lineno=86, col_offset=31)], [], None, None, lineno=86, col_offset=27), [If(UnaryOp(Not(), Call(Attribute(Name('maybemethod', Load(), lineno=87, col_offset=19), 'startswith', Load(), lineno=87, col_offset=19), [Str('_', lineno=87, col_offset=42)], [], None, None, lineno=87, col_offset=19), lineno=87, col_offset=15), [Assign([Name('attr', Store(), lineno=88, col_offset=16)], Call(Name('getattr', Load(), lineno=88, col_offset=23), [Name('file', Load(), lineno=88, col_offset=31), Name('maybemethod', Load(), lineno=88, col_offset=37)], [], None, None, lineno=88, col_offset=23), lineno=88, col_offset=16), If(Call(Name('isinstance', Load(), lineno=89, col_offset=19), [Name('attr', Load(), lineno=89, col_offset=30), Attribute(Name('types', Load(), lineno=89, col_offset=36), 'BuiltinMethodType', Load(), lineno=89, col_offset=36)], [], None, None, lineno=89, col_offset=19), [Expr(Call(Name('setattr', Load(), lineno=90, col_offset=20), [Name('self', Load(), lineno=90, col_offset=28), Name('maybemethod', Load(), lineno=90, col_offset=34), Name('attr', Load(), lineno=90, col_offset=47)], [], None, None, lineno=90, col_offset=20), lineno=90, col_offset=20)], [], lineno=89, col_offset=16)], [], lineno=87, col_offset=12)], [], lineno=86, col_offset=8), Return(Name('self', Load(), lineno=91, col_offset=15), lineno=91, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('file', arguments([Name('self', Param(), lineno=96, col_offset=13)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=97, col_offset=15), '_file_', Load(), lineno=97, col_offset=15), lineno=97, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('dup', arguments([Name('self', Param(), lineno=99, col_offset=12)], None, None, []), [Import([alias('posix', None)], lineno=100, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=102, col_offset=15), [Name('posix', Load(), lineno=102, col_offset=23), Str('fdopen', lineno=102, col_offset=30)], [], None, None, lineno=102, col_offset=15), lineno=102, col_offset=11), [Raise(Name('AttributeError', Load(), lineno=103, col_offset=18), Str('dup() method unavailable', lineno=103, col_offset=34), None, lineno=103, col_offset=12)], [], lineno=102, col_offset=8), Return(Call(Attribute(Name('posix', Load(), lineno=105, col_offset=15), 'fdopen', Load(), lineno=105, col_offset=15), [Call(Attribute(Name('posix', Load(), lineno=105, col_offset=28), 'dup', Load(), lineno=105, col_offset=28), [Call(Attribute(Attribute(Name('self', Load(), lineno=105, col_offset=38), '_file_', Load(), lineno=105, col_offset=38), 'fileno', Load(), lineno=105, col_offset=38), [], [], None, None, lineno=105, col_offset=38)], [], None, None, lineno=105, col_offset=28), Attribute(Attribute(Name('self', Load(), lineno=105, col_offset=61), '_file_', Load(), lineno=105, col_offset=61), 'mode', Load(), lineno=105, col_offset=61)], [], None, None, lineno=105, col_offset=15), lineno=105, col_offset=8)], [], lineno=99, col_offset=4), FunctionDef('dup2', arguments([Name('self', Param(), lineno=107, col_offset=13), Name('fd', Param(), lineno=107, col_offset=19)], None, None, []), [Import([alias('posix', None)], lineno=108, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=110, col_offset=15), [Name('posix', Load(), lineno=110, col_offset=23), Str('fdopen', lineno=110, col_offset=30)], [], None, None, lineno=110, col_offset=15), lineno=110, col_offset=11), [Raise(Name('AttributeError', Load(), lineno=111, col_offset=18), Str('dup() method unavailable', lineno=111, col_offset=34), None, lineno=111, col_offset=12)], [], lineno=110, col_offset=8), Expr(Call(Attribute(Name('posix', Load(), lineno=113, col_offset=8), 'dup2', Load(), lineno=113, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=113, col_offset=19), '_file_', Load(), lineno=113, col_offset=19), 'fileno', Load(), lineno=113, col_offset=19), [], [], None, None, lineno=113, col_offset=19), Name('fd', Load(), lineno=113, col_offset=41)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Return(Call(Attribute(Name('posix', Load(), lineno=114, col_offset=15), 'fdopen', Load(), lineno=114, col_offset=15), [Name('fd', Load(), lineno=114, col_offset=28), Attribute(Attribute(Name('self', Load(), lineno=114, col_offset=32), '_file_', Load(), lineno=114, col_offset=32), 'mode', Load(), lineno=114, col_offset=32)], [], None, None, lineno=114, col_offset=15), lineno=114, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('flags', arguments([Name('self', Param(), lineno=116, col_offset=14)], 'which', None, []), [Import([alias('fcntl', None), alias('os', None)], lineno=117, col_offset=8), If(Name('which', Load(), lineno=119, col_offset=11), [If(Compare(Call(Name('len', Load(), lineno=120, col_offset=15), [Name('which', Load(), lineno=120, col_offset=19)], [], None, None, lineno=120, col_offset=15), [Gt()], [Num(1, lineno=120, col_offset=28)], lineno=120, col_offset=15), [Raise(Name('TypeError', Load(), lineno=121, col_offset=22), Str('Too many arguments', lineno=121, col_offset=33), None, lineno=121, col_offset=16)], [], lineno=120, col_offset=12), Assign([Name('which', Store(), lineno=122, col_offset=12)], Subscript(Name('which', Load(), lineno=122, col_offset=20), Index(Num(0, lineno=122, col_offset=26)), Load(), lineno=122, col_offset=20), lineno=122, col_offset=12)], [Assign([Name('which', Store(), lineno=123, col_offset=14)], Str('?', lineno=123, col_offset=22), lineno=123, col_offset=14)], lineno=119, col_offset=8), Assign([Name('l_flags', Store(), lineno=125, col_offset=8)], Num(0, lineno=125, col_offset=18), lineno=125, col_offset=8), If(Compare(Str('n', lineno=126, col_offset=11), [In()], [Name('which', Load(), lineno=126, col_offset=18)], lineno=126, col_offset=11), [Assign([Name('l_flags', Store(), lineno=126, col_offset=25)], BinOp(Name('l_flags', Load(), lineno=126, col_offset=35), BitOr(), Attribute(Name('os', Load(), lineno=126, col_offset=45), 'O_NDELAY', Load(), lineno=126, col_offset=45), lineno=126, col_offset=35), lineno=126, col_offset=25)], [], lineno=126, col_offset=8), If(Compare(Str('a', lineno=127, col_offset=11), [In()], [Name('which', Load(), lineno=127, col_offset=18)], lineno=127, col_offset=11), [Assign([Name('l_flags', Store(), lineno=127, col_offset=25)], BinOp(Name('l_flags', Load(), lineno=127, col_offset=35), BitOr(), Attribute(Name('os', Load(), lineno=127, col_offset=45), 'O_APPEND', Load(), lineno=127, col_offset=45), lineno=127, col_offset=35), lineno=127, col_offset=25)], [], lineno=127, col_offset=8), If(Compare(Str('s', lineno=128, col_offset=11), [In()], [Name('which', Load(), lineno=128, col_offset=18)], lineno=128, col_offset=11), [Assign([Name('l_flags', Store(), lineno=128, col_offset=25)], BinOp(Name('l_flags', Load(), lineno=128, col_offset=35), BitOr(), Attribute(Name('os', Load(), lineno=128, col_offset=45), 'O_SYNC', Load(), lineno=128, col_offset=45), lineno=128, col_offset=35), lineno=128, col_offset=25)], [], lineno=128, col_offset=8), Assign([Name('file', Store(), lineno=130, col_offset=8)], Attribute(Name('self', Load(), lineno=130, col_offset=15), '_file_', Load(), lineno=130, col_offset=15), lineno=130, col_offset=8), If(Compare(Str('=', lineno=132, col_offset=11), [NotIn()], [Name('which', Load(), lineno=132, col_offset=22)], lineno=132, col_offset=11), [Assign([Name('cur_fl', Store(), lineno=133, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=133, col_offset=21), 'fcntl', Load(), lineno=133, col_offset=21), [Call(Attribute(Name('file', Load(), lineno=133, col_offset=33), 'fileno', Load(), lineno=133, col_offset=33), [], [], None, None, lineno=133, col_offset=33), Attribute(Name('fcntl', Load(), lineno=133, col_offset=48), 'F_GETFL', Load(), lineno=133, col_offset=48), Num(0, lineno=133, col_offset=63)], [], None, None, lineno=133, col_offset=21), lineno=133, col_offset=12), If(Compare(Str('!', lineno=134, col_offset=15), [In()], [Name('which', Load(), lineno=134, col_offset=22)], lineno=134, col_offset=15), [Assign([Name('l_flags', Store(), lineno=134, col_offset=29)], BinOp(Name('cur_fl', Load(), lineno=134, col_offset=39), BitAnd(), UnaryOp(Invert(), Name('l_flags', Load(), lineno=134, col_offset=50), lineno=134, col_offset=48), lineno=134, col_offset=39), lineno=134, col_offset=29)], [Assign([Name('l_flags', Store(), lineno=135, col_offset=18)], BinOp(Name('cur_fl', Load(), lineno=135, col_offset=28), BitOr(), Name('l_flags', Load(), lineno=135, col_offset=37), lineno=135, col_offset=28), lineno=135, col_offset=18)], lineno=134, col_offset=12)], [], lineno=132, col_offset=8), Assign([Name('l_flags', Store(), lineno=137, col_offset=8)], Call(Attribute(Name('fcntl', Load(), lineno=137, col_offset=18), 'fcntl', Load(), lineno=137, col_offset=18), [Call(Attribute(Name('file', Load(), lineno=137, col_offset=30), 'fileno', Load(), lineno=137, col_offset=30), [], [], None, None, lineno=137, col_offset=30), Attribute(Name('fcntl', Load(), lineno=137, col_offset=45), 'F_SETFL', Load(), lineno=137, col_offset=45), Name('l_flags', Load(), lineno=137, col_offset=60)], [], None, None, lineno=137, col_offset=18), lineno=137, col_offset=8), If(Compare(Str('c', lineno=139, col_offset=11), [In()], [Name('which', Load(), lineno=139, col_offset=18)], lineno=139, col_offset=11), [Assign([Name('arg', Store(), lineno=140, col_offset=12)], Compare(Str('!', lineno=140, col_offset=19), [NotIn()], [Name('which', Load(), lineno=140, col_offset=30)], lineno=140, col_offset=19), lineno=140, col_offset=12), Assign([Name('l_flags', Store(), lineno=141, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=141, col_offset=22), 'fcntl', Load(), lineno=141, col_offset=22), [Call(Attribute(Name('file', Load(), lineno=141, col_offset=34), 'fileno', Load(), lineno=141, col_offset=34), [], [], None, None, lineno=141, col_offset=34), Attribute(Name('fcntl', Load(), lineno=141, col_offset=49), 'F_SETFD', Load(), lineno=141, col_offset=49), Name('arg', Load(), lineno=141, col_offset=64)], [], None, None, lineno=141, col_offset=22), lineno=141, col_offset=12)], [], lineno=139, col_offset=8), If(Compare(Str('?', lineno=143, col_offset=11), [In()], [Name('which', Load(), lineno=143, col_offset=18)], lineno=143, col_offset=11), [Assign([Name('which', Store(), lineno=144, col_offset=12)], Str('', lineno=144, col_offset=20), lineno=144, col_offset=12), Assign([Name('l_flags', Store(), lineno=145, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=145, col_offset=22), 'fcntl', Load(), lineno=145, col_offset=22), [Call(Attribute(Name('file', Load(), lineno=145, col_offset=34), 'fileno', Load(), lineno=145, col_offset=34), [], [], None, None, lineno=145, col_offset=34), Attribute(Name('fcntl', Load(), lineno=145, col_offset=49), 'F_GETFL', Load(), lineno=145, col_offset=49), Num(0, lineno=145, col_offset=64)], [], None, None, lineno=145, col_offset=22), lineno=145, col_offset=12), If(BinOp(Attribute(Name('os', Load(), lineno=146, col_offset=15), 'O_APPEND', Load(), lineno=146, col_offset=15), BitAnd(), Name('l_flags', Load(), lineno=146, col_offset=29), lineno=146, col_offset=15), [Assign([Name('which', Store(), lineno=146, col_offset=38)], BinOp(Name('which', Load(), lineno=146, col_offset=46), Add(), Str('a', lineno=146, col_offset=54), lineno=146, col_offset=46), lineno=146, col_offset=38)], [], lineno=146, col_offset=12), If(BinOp(Call(Attribute(Name('fcntl', Load(), lineno=147, col_offset=15), 'fcntl', Load(), lineno=147, col_offset=15), [Call(Attribute(Name('file', Load(), lineno=147, col_offset=27), 'fileno', Load(), lineno=147, col_offset=27), [], [], None, None, lineno=147, col_offset=27), Attribute(Name('fcntl', Load(), lineno=147, col_offset=42), 'F_GETFD', Load(), lineno=147, col_offset=42), Num(0, lineno=147, col_offset=57)], [], None, None, lineno=147, col_offset=15), BitAnd(), Num(1, lineno=147, col_offset=62), lineno=147, col_offset=15), [Assign([Name('which', Store(), lineno=148, col_offset=16)], BinOp(Name('which', Load(), lineno=148, col_offset=24), Add(), Str('c', lineno=148, col_offset=32), lineno=148, col_offset=24), lineno=148, col_offset=16)], [], lineno=147, col_offset=12), If(BinOp(Attribute(Name('os', Load(), lineno=149, col_offset=15), 'O_NDELAY', Load(), lineno=149, col_offset=15), BitAnd(), Name('l_flags', Load(), lineno=149, col_offset=29), lineno=149, col_offset=15), [Assign([Name('which', Store(), lineno=149, col_offset=38)], BinOp(Name('which', Load(), lineno=149, col_offset=46), Add(), Str('n', lineno=149, col_offset=54), lineno=149, col_offset=46), lineno=149, col_offset=38)], [], lineno=149, col_offset=12), If(BinOp(Attribute(Name('os', Load(), lineno=150, col_offset=15), 'O_SYNC', Load(), lineno=150, col_offset=15), BitAnd(), Name('l_flags', Load(), lineno=150, col_offset=27), lineno=150, col_offset=15), [Assign([Name('which', Store(), lineno=150, col_offset=36)], BinOp(Name('which', Load(), lineno=150, col_offset=44), Add(), Str('s', lineno=150, col_offset=52), lineno=150, col_offset=44), lineno=150, col_offset=36)], [], lineno=150, col_offset=12), Return(Name('which', Load(), lineno=151, col_offset=19), lineno=151, col_offset=12)], [], lineno=143, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('lock', arguments([Name('self', Param(), lineno=153, col_offset=13), Name('how', Param(), lineno=153, col_offset=19)], 'args', None, []), [Import([alias('struct', None), alias('fcntl', None)], lineno=154, col_offset=8), If(Compare(Str('w', lineno=156, col_offset=11), [In()], [Name('how', Load(), lineno=156, col_offset=18)], lineno=156, col_offset=11), [Assign([Name('l_type', Store(), lineno=156, col_offset=23)], Attribute(Name('fcntl', Load(), lineno=156, col_offset=32), 'F_WRLCK', Load(), lineno=156, col_offset=32), lineno=156, col_offset=23)], [If(Compare(Str('r', lineno=157, col_offset=13), [In()], [Name('how', Load(), lineno=157, col_offset=20)], lineno=157, col_offset=13), [Assign([Name('l_type', Store(), lineno=157, col_offset=25)], Attribute(Name('fcntl', Load(), lineno=157, col_offset=34), 'F_RDLCK', Load(), lineno=157, col_offset=34), lineno=157, col_offset=25)], [If(Compare(Str('u', lineno=158, col_offset=13), [In()], [Name('how', Load(), lineno=158, col_offset=20)], lineno=158, col_offset=13), [Assign([Name('l_type', Store(), lineno=158, col_offset=25)], Attribute(Name('fcntl', Load(), lineno=158, col_offset=34), 'F_UNLCK', Load(), lineno=158, col_offset=34), lineno=158, col_offset=25)], [Raise(Name('TypeError', Load(), lineno=159, col_offset=20), Str('no type of lock specified', lineno=159, col_offset=31), None, lineno=159, col_offset=14)], lineno=158, col_offset=13)], lineno=157, col_offset=13)], lineno=156, col_offset=8), If(Compare(Str('|', lineno=161, col_offset=11), [In()], [Name('how', Load(), lineno=161, col_offset=18)], lineno=161, col_offset=11), [Assign([Name('cmd', Store(), lineno=161, col_offset=23)], Attribute(Name('fcntl', Load(), lineno=161, col_offset=29), 'F_SETLKW', Load(), lineno=161, col_offset=29), lineno=161, col_offset=23)], [If(Compare(Str('?', lineno=162, col_offset=13), [In()], [Name('how', Load(), lineno=162, col_offset=20)], lineno=162, col_offset=13), [Assign([Name('cmd', Store(), lineno=162, col_offset=25)], Attribute(Name('fcntl', Load(), lineno=162, col_offset=31), 'F_GETLK', Load(), lineno=162, col_offset=31), lineno=162, col_offset=25)], [Assign([Name('cmd', Store(), lineno=163, col_offset=14)], Attribute(Name('fcntl', Load(), lineno=163, col_offset=20), 'F_SETLK', Load(), lineno=163, col_offset=20), lineno=163, col_offset=14)], lineno=162, col_offset=13)], lineno=161, col_offset=8), Assign([Name('l_whence', Store(), lineno=165, col_offset=8)], Num(0, lineno=165, col_offset=19), lineno=165, col_offset=8), Assign([Name('l_start', Store(), lineno=166, col_offset=8)], Num(0, lineno=166, col_offset=18), lineno=166, col_offset=8), Assign([Name('l_len', Store(), lineno=167, col_offset=8)], Num(0, lineno=167, col_offset=16), lineno=167, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=169, col_offset=11), [Name('args', Load(), lineno=169, col_offset=15)], [], None, None, lineno=169, col_offset=11), [Eq()], [Num(1, lineno=169, col_offset=24)], lineno=169, col_offset=11), [Assign([Name('l_len', Store(), lineno=170, col_offset=12)], Subscript(Name('args', Load(), lineno=170, col_offset=20), Index(Num(0, lineno=170, col_offset=25)), Load(), lineno=170, col_offset=20), lineno=170, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=171, col_offset=13), [Name('args', Load(), lineno=171, col_offset=17)], [], None, None, lineno=171, col_offset=13), [Eq()], [Num(2, lineno=171, col_offset=26)], lineno=171, col_offset=13), [Assign([Tuple([Name('l_len', Store(), lineno=172, col_offset=12), Name('l_start', Store(), lineno=172, col_offset=19)], Store(), lineno=172, col_offset=12)], Name('args', Load(), lineno=172, col_offset=29), lineno=172, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=173, col_offset=13), [Name('args', Load(), lineno=173, col_offset=17)], [], None, None, lineno=173, col_offset=13), [Eq()], [Num(3, lineno=173, col_offset=26)], lineno=173, col_offset=13), [Assign([Tuple([Name('l_len', Store(), lineno=174, col_offset=12), Name('l_start', Store(), lineno=174, col_offset=19), Name('l_whence', Store(), lineno=174, col_offset=28)], Store(), lineno=174, col_offset=12)], Name('args', Load(), lineno=174, col_offset=39), lineno=174, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=175, col_offset=13), [Name('args', Load(), lineno=175, col_offset=17)], [], None, None, lineno=175, col_offset=13), [Gt()], [Num(3, lineno=175, col_offset=25)], lineno=175, col_offset=13), [Raise(Name('TypeError', Load(), lineno=176, col_offset=18), Str('too many arguments', lineno=176, col_offset=29), None, lineno=176, col_offset=12)], [], lineno=175, col_offset=13)], lineno=173, col_offset=13)], lineno=171, col_offset=13)], lineno=169, col_offset=8), Import([alias('sys', None), alias('os', None)], lineno=180, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=181, col_offset=11), 'platform', Load(), lineno=181, col_offset=11), [In()], [Tuple([Str('netbsd1', lineno=181, col_offset=28), Str('openbsd2', lineno=182, col_offset=28), Str('freebsd2', lineno=183, col_offset=28), Str('freebsd3', lineno=183, col_offset=40), Str('freebsd4', lineno=183, col_offset=52), Str('freebsd5', lineno=183, col_offset=64), Str('freebsd6', lineno=184, col_offset=28), Str('freebsd7', lineno=184, col_offset=40), Str('freebsd8', lineno=184, col_offset=52), Str('bsdos2', lineno=185, col_offset=28), Str('bsdos3', lineno=185, col_offset=38), Str('bsdos4', lineno=185, col_offset=48)], Load(), lineno=181, col_offset=28)], lineno=181, col_offset=11), [Assign([Name('flock', Store(), lineno=186, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=186, col_offset=20), 'pack', Load(), lineno=186, col_offset=20), [Str('lxxxxlxxxxlhh', lineno=186, col_offset=32), Name('l_start', Load(), lineno=187, col_offset=18), Name('l_len', Load(), lineno=187, col_offset=27), Call(Attribute(Name('os', Load(), lineno=187, col_offset=34), 'getpid', Load(), lineno=187, col_offset=34), [], [], None, None, lineno=187, col_offset=34), Name('l_type', Load(), lineno=187, col_offset=47), Name('l_whence', Load(), lineno=187, col_offset=55)], [], None, None, lineno=186, col_offset=20), lineno=186, col_offset=12)], [If(Compare(Attribute(Name('sys', Load(), lineno=188, col_offset=13), 'platform', Load(), lineno=188, col_offset=13), [In()], [Tuple([Str('aix3', lineno=188, col_offset=30), Str('aix4', lineno=188, col_offset=38)], Load(), lineno=188, col_offset=30)], lineno=188, col_offset=13), [Assign([Name('flock', Store(), lineno=189, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=189, col_offset=20), 'pack', Load(), lineno=189, col_offset=20), [Str('hhlllii', lineno=189, col_offset=32), Name('l_type', Load(), lineno=190, col_offset=18), Name('l_whence', Load(), lineno=190, col_offset=26), Name('l_start', Load(), lineno=190, col_offset=36), Name('l_len', Load(), lineno=190, col_offset=45), Num(0, lineno=190, col_offset=52), Num(0, lineno=190, col_offset=55), Num(0, lineno=190, col_offset=58)], [], None, None, lineno=189, col_offset=20), lineno=189, col_offset=12)], [Assign([Name('flock', Store(), lineno=192, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=192, col_offset=20), 'pack', Load(), lineno=192, col_offset=20), [Str('hhllhh', lineno=192, col_offset=32), Name('l_type', Load(), lineno=193, col_offset=18), Name('l_whence', Load(), lineno=193, col_offset=26), Name('l_start', Load(), lineno=193, col_offset=36), Name('l_len', Load(), lineno=193, col_offset=45), Num(0, lineno=193, col_offset=52), Num(0, lineno=193, col_offset=55)], [], None, None, lineno=192, col_offset=20), lineno=192, col_offset=12)], lineno=188, col_offset=13)], lineno=181, col_offset=8), Assign([Name('flock', Store(), lineno=195, col_offset=8)], Call(Attribute(Name('fcntl', Load(), lineno=195, col_offset=16), 'fcntl', Load(), lineno=195, col_offset=16), [Call(Attribute(Attribute(Name('self', Load(), lineno=195, col_offset=28), '_file_', Load(), lineno=195, col_offset=28), 'fileno', Load(), lineno=195, col_offset=28), [], [], None, None, lineno=195, col_offset=28), Name('cmd', Load(), lineno=195, col_offset=50), Name('flock', Load(), lineno=195, col_offset=55)], [], None, None, lineno=195, col_offset=16), lineno=195, col_offset=8), If(Compare(Str('?', lineno=197, col_offset=11), [In()], [Name('how', Load(), lineno=197, col_offset=18)], lineno=197, col_offset=11), [If(Compare(Attribute(Name('sys', Load(), lineno=198, col_offset=15), 'platform', Load(), lineno=198, col_offset=15), [In()], [Tuple([Str('netbsd1', lineno=198, col_offset=32), Str('openbsd2', lineno=199, col_offset=32), Str('freebsd2', lineno=200, col_offset=32), Str('freebsd3', lineno=200, col_offset=44), Str('freebsd4', lineno=200, col_offset=56), Str('freebsd5', lineno=200, col_offset=68), Str('bsdos2', lineno=201, col_offset=32), Str('bsdos3', lineno=201, col_offset=42), Str('bsdos4', lineno=201, col_offset=52)], Load(), lineno=198, col_offset=32)], lineno=198, col_offset=15), [Assign([Tuple([Name('l_start', Store(), lineno=202, col_offset=16), Name('l_len', Store(), lineno=202, col_offset=25), Name('l_pid', Store(), lineno=202, col_offset=32), Name('l_type', Store(), lineno=202, col_offset=39), Name('l_whence', Store(), lineno=202, col_offset=47)], Store(), lineno=202, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=203, col_offset=20), 'unpack', Load(), lineno=203, col_offset=20), [Str('lxxxxlxxxxlhh', lineno=203, col_offset=34), Name('flock', Load(), lineno=203, col_offset=51)], [], None, None, lineno=203, col_offset=20), lineno=202, col_offset=16)], [If(Compare(Attribute(Name('sys', Load(), lineno=204, col_offset=17), 'platform', Load(), lineno=204, col_offset=17), [In()], [Tuple([Str('aix3', lineno=204, col_offset=34), Str('aix4', lineno=204, col_offset=42)], Load(), lineno=204, col_offset=34)], lineno=204, col_offset=17), [Assign([Tuple([Name('l_type', Store(), lineno=205, col_offset=16), Name('l_whence', Store(), lineno=205, col_offset=24), Name('l_start', Store(), lineno=205, col_offset=34), Name('l_len', Store(), lineno=205, col_offset=43), Name('l_sysid', Store(), lineno=205, col_offset=50), Name('l_pid', Store(), lineno=205, col_offset=59), Name('l_vfs', Store(), lineno=205, col_offset=66)], Store(), lineno=205, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=206, col_offset=20), 'unpack', Load(), lineno=206, col_offset=20), [Str('hhlllii', lineno=206, col_offset=34), Name('flock', Load(), lineno=206, col_offset=45)], [], None, None, lineno=206, col_offset=20), lineno=205, col_offset=16)], [If(Compare(Attribute(Name('sys', Load(), lineno=207, col_offset=17), 'platform', Load(), lineno=207, col_offset=17), [Eq()], [Str('linux2', lineno=207, col_offset=33)], lineno=207, col_offset=17), [Assign([Tuple([Name('l_type', Store(), lineno=208, col_offset=16), Name('l_whence', Store(), lineno=208, col_offset=24), Name('l_start', Store(), lineno=208, col_offset=34), Name('l_len', Store(), lineno=208, col_offset=43), Name('l_pid', Store(), lineno=208, col_offset=50), Name('l_sysid', Store(), lineno=208, col_offset=57)], Store(), lineno=208, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=209, col_offset=20), 'unpack', Load(), lineno=209, col_offset=20), [Str('hhllhh', lineno=209, col_offset=34), Name('flock', Load(), lineno=209, col_offset=44)], [], None, None, lineno=209, col_offset=20), lineno=208, col_offset=16)], [Assign([Tuple([Name('l_type', Store(), lineno=211, col_offset=16), Name('l_whence', Store(), lineno=211, col_offset=24), Name('l_start', Store(), lineno=211, col_offset=34), Name('l_len', Store(), lineno=211, col_offset=43), Name('l_sysid', Store(), lineno=211, col_offset=50), Name('l_pid', Store(), lineno=211, col_offset=59)], Store(), lineno=211, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=212, col_offset=20), 'unpack', Load(), lineno=212, col_offset=20), [Str('hhllhh', lineno=212, col_offset=34), Name('flock', Load(), lineno=212, col_offset=44)], [], None, None, lineno=212, col_offset=20), lineno=211, col_offset=16)], lineno=207, col_offset=17)], lineno=204, col_offset=17)], lineno=198, col_offset=12), If(Compare(Name('l_type', Load(), lineno=214, col_offset=15), [NotEq()], [Attribute(Name('fcntl', Load(), lineno=214, col_offset=25), 'F_UNLCK', Load(), lineno=214, col_offset=25)], lineno=214, col_offset=15), [If(Compare(Name('l_type', Load(), lineno=215, col_offset=19), [Eq()], [Attribute(Name('fcntl', Load(), lineno=215, col_offset=29), 'F_RDLCK', Load(), lineno=215, col_offset=29)], lineno=215, col_offset=19), [Return(Tuple([Str('r', lineno=216, col_offset=27), Name('l_len', Load(), lineno=216, col_offset=32), Name('l_start', Load(), lineno=216, col_offset=39), Name('l_whence', Load(), lineno=216, col_offset=48), Name('l_pid', Load(), lineno=216, col_offset=58)], Load(), lineno=216, col_offset=27), lineno=216, col_offset=20)], [Return(Tuple([Str('w', lineno=218, col_offset=27), Name('l_len', Load(), lineno=218, col_offset=32), Name('l_start', Load(), lineno=218, col_offset=39), Name('l_whence', Load(), lineno=218, col_offset=48), Name('l_pid', Load(), lineno=218, col_offset=58)], Load(), lineno=218, col_offset=27), lineno=218, col_offset=20)], lineno=215, col_offset=16)], [], lineno=214, col_offset=12)], [], lineno=197, col_offset=8)], [], lineno=153, col_offset=4)], [], lineno=59, col_offset=0), FunctionDef('open', arguments([Name('name', Param(), lineno=220, col_offset=9), Name('mode', Param(), lineno=220, col_offset=15), Name('bufsize', Param(), lineno=220, col_offset=25)], None, None, [Str('r', lineno=220, col_offset=20), Num(-1, lineno=220, col_offset=34)]), [Expr(Str('Public routine to open a file as a posixfile object.', lineno=221, col_offset=4), lineno=221, col_offset=4), Return(Call(Attribute(Call(Name('_posixfile_', Load(), lineno=222, col_offset=11), [], [], None, None, lineno=222, col_offset=11), 'open', Load(), lineno=222, col_offset=11), [Name('name', Load(), lineno=222, col_offset=30), Name('mode', Load(), lineno=222, col_offset=36), Name('bufsize', Load(), lineno=222, col_offset=42)], [], None, None, lineno=222, col_offset=11), lineno=222, col_offset=4)], [], lineno=220, col_offset=0), FunctionDef('fileopen', arguments([Name('file', Param(), lineno=224, col_offset=13)], None, None, []), [Expr(Str('Public routine to get a posixfile object from a Python file object.', lineno=225, col_offset=4), lineno=225, col_offset=4), Return(Call(Attribute(Call(Name('_posixfile_', Load(), lineno=226, col_offset=11), [], [], None, None, lineno=226, col_offset=11), 'fileopen', Load(), lineno=226, col_offset=11), [Name('file', Load(), lineno=226, col_offset=34)], [], None, None, lineno=226, col_offset=11), lineno=226, col_offset=4)], [], lineno=224, col_offset=0), Assign([Name('SEEK_SET', Store(), lineno=231, col_offset=0)], Num(0, lineno=231, col_offset=11), lineno=231, col_offset=0), Assign([Name('SEEK_CUR', Store(), lineno=232, col_offset=0)], Num(1, lineno=232, col_offset=11), lineno=232, col_offset=0), Assign([Name('SEEK_END', Store(), lineno=233, col_offset=0)], Num(2, lineno=233, col_offset=11), lineno=233, col_offset=0)])
