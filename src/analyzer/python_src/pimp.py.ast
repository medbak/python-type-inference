Module([Expr(Str('Package Install Manager for Python.\n\nThis is currently a MacOSX-only strawman implementation.\nDespite other rumours the name stands for "Packman IMPlementation".\n\nTools to allow easy installation of packages. The idea is that there is\nan online XML database per (platform, python-version) containing packages\nknown to work with that combination. This module contains tools for getting\nand parsing the database, testing whether packages are installed, computing\ndependencies and installing packages.\n\nThere is a minimal main program that works as a command line tool, but the\nintention is that the end user will use this through a GUI.\n', lineno=14, col_offset=-1), lineno=14, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=16, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=17, col_offset=0), [Str('In 3.x, the pimp module is removed.', lineno=17, col_offset=9)], [keyword('stacklevel', Num(2, lineno=17, col_offset=59))], None, None, lineno=17, col_offset=0), lineno=17, col_offset=0), Import([alias('sys', None)], lineno=19, col_offset=0), Import([alias('os', None)], lineno=20, col_offset=0), Import([alias('subprocess', None)], lineno=21, col_offset=0), Import([alias('urllib', None)], lineno=22, col_offset=0), Import([alias('urllib2', None)], lineno=23, col_offset=0), Import([alias('urlparse', None)], lineno=24, col_offset=0), Import([alias('plistlib', None)], lineno=25, col_offset=0), Import([alias('distutils.util', None)], lineno=26, col_offset=0), Import([alias('distutils.sysconfig', None)], lineno=27, col_offset=0), Import([alias('hashlib', None)], lineno=28, col_offset=0), Import([alias('tarfile', None)], lineno=29, col_offset=0), Import([alias('tempfile', None)], lineno=30, col_offset=0), Import([alias('shutil', None)], lineno=31, col_offset=0), Import([alias('time', None)], lineno=32, col_offset=0), Assign([Name('__all__', Store(), lineno=34, col_offset=0)], List([Str('PimpPreferences', lineno=34, col_offset=11), Str('PimpDatabase', lineno=34, col_offset=30), Str('PimpPackage', lineno=34, col_offset=46), Str('main', lineno=34, col_offset=61), Str('getDefaultDatabase', lineno=35, col_offset=4), Str('PIMP_VERSION', lineno=35, col_offset=26), Str('main', lineno=35, col_offset=42)], Load(), lineno=34, col_offset=10), lineno=34, col_offset=0), Assign([Name('_scriptExc_NotInstalled', Store(), lineno=37, col_offset=0)], Str('pimp._scriptExc_NotInstalled', lineno=37, col_offset=26), lineno=37, col_offset=0), Assign([Name('_scriptExc_OldInstalled', Store(), lineno=38, col_offset=0)], Str('pimp._scriptExc_OldInstalled', lineno=38, col_offset=26), lineno=38, col_offset=0), Assign([Name('_scriptExc_BadInstalled', Store(), lineno=39, col_offset=0)], Str('pimp._scriptExc_BadInstalled', lineno=39, col_offset=26), lineno=39, col_offset=0), Assign([Name('NO_EXECUTE', Store(), lineno=41, col_offset=0)], Num(0, lineno=41, col_offset=11), lineno=41, col_offset=0), Assign([Name('PIMP_VERSION', Store(), lineno=43, col_offset=0)], Str('0.5', lineno=43, col_offset=13), lineno=43, col_offset=0), Assign([Name('DEFAULT_FLAVORORDER', Store(), lineno=49, col_offset=0)], List([Str('source', lineno=49, col_offset=21), Str('binary', lineno=49, col_offset=31), Str('installer', lineno=49, col_offset=41)], Load(), lineno=49, col_offset=20), lineno=49, col_offset=0), Assign([Name('DEFAULT_DOWNLOADDIR', Store(), lineno=50, col_offset=0)], Str('/tmp', lineno=50, col_offset=20), lineno=50, col_offset=0), Assign([Name('DEFAULT_BUILDDIR', Store(), lineno=51, col_offset=0)], Str('/tmp', lineno=51, col_offset=17), lineno=51, col_offset=0), Assign([Name('DEFAULT_INSTALLDIR', Store(), lineno=52, col_offset=0)], Call(Attribute(Attribute(Name('distutils', Load(), lineno=52, col_offset=19), 'sysconfig', Load(), lineno=52, col_offset=19), 'get_python_lib', Load(), lineno=52, col_offset=19), [], [], None, None, lineno=52, col_offset=19), lineno=52, col_offset=0), Assign([Name('DEFAULT_PIMPDATABASE_FMT', Store(), lineno=53, col_offset=0)], Str('http://www.python.org/packman/version-%s/%s-%s-%s-%s-%s.plist', lineno=53, col_offset=25), lineno=53, col_offset=0), FunctionDef('getDefaultDatabase', arguments([Name('experimental', Param(), lineno=55, col_offset=23)], None, None, [Name('False', Load(), lineno=55, col_offset=36)]), [If(Name('experimental', Load(), lineno=56, col_offset=7), [Assign([Name('status', Store(), lineno=57, col_offset=8)], Str('exp', lineno=57, col_offset=17), lineno=57, col_offset=8)], [Assign([Name('status', Store(), lineno=59, col_offset=8)], Str('prod', lineno=59, col_offset=17), lineno=59, col_offset=8)], lineno=56, col_offset=4), Assign([Tuple([Name('major', Store(), lineno=61, col_offset=4), Name('minor', Store(), lineno=61, col_offset=11), Name('micro', Store(), lineno=61, col_offset=18), Name('state', Store(), lineno=61, col_offset=25), Name('extra', Store(), lineno=61, col_offset=32)], Store(), lineno=61, col_offset=4)], Attribute(Name('sys', Load(), lineno=61, col_offset=40), 'version_info', Load(), lineno=61, col_offset=40), lineno=61, col_offset=4), Assign([Name('pyvers', Store(), lineno=62, col_offset=4)], BinOp(Str('%d.%d', lineno=62, col_offset=13), Mod(), Tuple([Name('major', Load(), lineno=62, col_offset=24), Name('minor', Load(), lineno=62, col_offset=31)], Load(), lineno=62, col_offset=24), lineno=62, col_offset=13), lineno=62, col_offset=4), If(BoolOp(And(), [Compare(Name('micro', Load(), lineno=63, col_offset=7), [Eq()], [Num(0, lineno=63, col_offset=16)], lineno=63, col_offset=7), Compare(Name('state', Load(), lineno=63, col_offset=22), [NotEq()], [Str('final', lineno=63, col_offset=31)], lineno=63, col_offset=22)], lineno=63, col_offset=7), [Assign([Name('pyvers', Store(), lineno=64, col_offset=8)], BinOp(Name('pyvers', Load(), lineno=64, col_offset=17), Add(), BinOp(Str('%s%d', lineno=64, col_offset=26), Mod(), Tuple([Name('state', Load(), lineno=64, col_offset=36), Name('extra', Load(), lineno=64, col_offset=43)], Load(), lineno=64, col_offset=36), lineno=64, col_offset=26), lineno=64, col_offset=17), lineno=64, col_offset=8)], [], lineno=63, col_offset=4), Assign([Name('longplatform', Store(), lineno=66, col_offset=4)], Call(Attribute(Attribute(Name('distutils', Load(), lineno=66, col_offset=19), 'util', Load(), lineno=66, col_offset=19), 'get_platform', Load(), lineno=66, col_offset=19), [], [], None, None, lineno=66, col_offset=19), lineno=66, col_offset=4), Assign([Tuple([Name('osname', Store(), lineno=67, col_offset=4), Name('release', Store(), lineno=67, col_offset=12), Name('machine', Store(), lineno=67, col_offset=21)], Store(), lineno=67, col_offset=4)], Call(Attribute(Name('longplatform', Load(), lineno=67, col_offset=31), 'split', Load(), lineno=67, col_offset=31), [Str('-', lineno=67, col_offset=50)], [], None, None, lineno=67, col_offset=31), lineno=67, col_offset=4), If(Compare(Name('osname', Load(), lineno=70, col_offset=7), [Eq()], [Str('darwin', lineno=70, col_offset=17)], lineno=70, col_offset=7), [If(Call(Attribute(Attribute(Name('sys', Load(), lineno=71, col_offset=11), 'prefix', Load(), lineno=71, col_offset=11), 'startswith', Load(), lineno=71, col_offset=11), [Str('/System/Library/Frameworks/Python.framework', lineno=71, col_offset=33)], [], None, None, lineno=71, col_offset=11), [Assign([Name('osname', Store(), lineno=72, col_offset=12)], Str('darwin_apple', lineno=72, col_offset=21), lineno=72, col_offset=12)], [If(Call(Attribute(Attribute(Name('sys', Load(), lineno=73, col_offset=13), 'prefix', Load(), lineno=73, col_offset=13), 'startswith', Load(), lineno=73, col_offset=13), [Str('/Library/Frameworks/Python.framework', lineno=73, col_offset=35)], [], None, None, lineno=73, col_offset=13), [Assign([Name('osname', Store(), lineno=74, col_offset=12)], Str('darwin_macpython', lineno=74, col_offset=21), lineno=74, col_offset=12)], [], lineno=73, col_offset=13)], lineno=71, col_offset=8)], [], lineno=70, col_offset=4), Assign([Name('rel', Store(), lineno=78, col_offset=4)], Name('release', Load(), lineno=78, col_offset=10), lineno=78, col_offset=4), While(Name('True', Load(), lineno=79, col_offset=10), [Assign([Name('url', Store(), lineno=80, col_offset=8)], BinOp(Name('DEFAULT_PIMPDATABASE_FMT', Load(), lineno=80, col_offset=14), Mod(), Tuple([Name('PIMP_VERSION', Load(), lineno=80, col_offset=42), Name('status', Load(), lineno=80, col_offset=56), Name('pyvers', Load(), lineno=80, col_offset=64), Name('osname', Load(), lineno=80, col_offset=72), Name('rel', Load(), lineno=80, col_offset=80), Name('machine', Load(), lineno=80, col_offset=85)], Load(), lineno=80, col_offset=42), lineno=80, col_offset=14), lineno=80, col_offset=8), TryExcept([Expr(Call(Attribute(Name('urllib2', Load(), lineno=82, col_offset=12), 'urlopen', Load(), lineno=82, col_offset=12), [Name('url', Load(), lineno=82, col_offset=28)], [], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12)], [ExceptHandler(Attribute(Name('urllib2', Load(), lineno=83, col_offset=15), 'HTTPError', Load(), lineno=83, col_offset=15), Name('arg', Store(), lineno=83, col_offset=34), [Pass( lineno=84, col_offset=12)], lineno=83, col_offset=8)], [Break( lineno=86, col_offset=12)], lineno=81, col_offset=8), If(UnaryOp(Not(), Name('rel', Load(), lineno=87, col_offset=15), lineno=87, col_offset=11), [Assign([Name('url', Store(), lineno=91, col_offset=12)], BinOp(Name('DEFAULT_PIMPDATABASE_FMT', Load(), lineno=91, col_offset=18), Mod(), Tuple([Name('PIMP_VERSION', Load(), lineno=91, col_offset=46), Name('status', Load(), lineno=91, col_offset=60), Name('pyvers', Load(), lineno=91, col_offset=68), Name('osname', Load(), lineno=91, col_offset=76), Name('release', Load(), lineno=91, col_offset=84), Name('machine', Load(), lineno=91, col_offset=93)], Load(), lineno=91, col_offset=46), lineno=91, col_offset=18), lineno=91, col_offset=12), Break( lineno=92, col_offset=12)], [], lineno=87, col_offset=8), Assign([Name('idx', Store(), lineno=93, col_offset=8)], Call(Attribute(Name('rel', Load(), lineno=93, col_offset=14), 'rfind', Load(), lineno=93, col_offset=14), [Str('.', lineno=93, col_offset=24)], [], None, None, lineno=93, col_offset=14), lineno=93, col_offset=8), If(Compare(Name('idx', Load(), lineno=94, col_offset=11), [Lt()], [Num(0, lineno=94, col_offset=17)], lineno=94, col_offset=11), [Assign([Name('rel', Store(), lineno=95, col_offset=12)], Str('', lineno=95, col_offset=18), lineno=95, col_offset=12)], [Assign([Name('rel', Store(), lineno=97, col_offset=12)], Subscript(Name('rel', Load(), lineno=97, col_offset=18), Slice(None, Name('idx', Load(), lineno=97, col_offset=23), None), Load(), lineno=97, col_offset=18), lineno=97, col_offset=12)], lineno=94, col_offset=8)], [], lineno=79, col_offset=4), Return(Name('url', Load(), lineno=98, col_offset=11), lineno=98, col_offset=4)], [], lineno=55, col_offset=0), FunctionDef('_cmd', arguments([Name('output', Param(), lineno=100, col_offset=9), Name('dir', Param(), lineno=100, col_offset=17)], 'cmditems', None, []), [Expr(Str('Internal routine to run a shell command in a given directory.', lineno=101, col_offset=4), lineno=101, col_offset=4), Assign([Name('cmd', Store(), lineno=103, col_offset=4)], BinOp(BinOp(Str('cd "%s"; ', lineno=103, col_offset=11), Mod(), Name('dir', Load(), lineno=103, col_offset=27), lineno=103, col_offset=11), Add(), Call(Attribute(Str(' ', lineno=103, col_offset=34), 'join', Load(), lineno=103, col_offset=34), [Name('cmditems', Load(), lineno=103, col_offset=43)], [], None, None, lineno=103, col_offset=34), lineno=103, col_offset=10), lineno=103, col_offset=4), If(Name('output', Load(), lineno=104, col_offset=7), [Expr(Call(Attribute(Name('output', Load(), lineno=105, col_offset=8), 'write', Load(), lineno=105, col_offset=8), [BinOp(Str('+ %s\n', lineno=105, col_offset=21), Mod(), Name('cmd', Load(), lineno=105, col_offset=32), lineno=105, col_offset=21)], [], None, None, lineno=105, col_offset=8), lineno=105, col_offset=8)], [], lineno=104, col_offset=4), If(Name('NO_EXECUTE', Load(), lineno=106, col_offset=7), [Return(Num(0, lineno=107, col_offset=15), lineno=107, col_offset=8)], [], lineno=106, col_offset=4), Assign([Name('child', Store(), lineno=108, col_offset=4)], Call(Attribute(Name('subprocess', Load(), lineno=108, col_offset=12), 'Popen', Load(), lineno=108, col_offset=12), [Name('cmd', Load(), lineno=108, col_offset=29)], [keyword('shell', Name('True', Load(), lineno=108, col_offset=40)), keyword('stdin', Attribute(Name('subprocess', Load(), lineno=108, col_offset=52), 'PIPE', Load(), lineno=108, col_offset=52)), keyword('stdout', Attribute(Name('subprocess', Load(), lineno=109, col_offset=36), 'PIPE', Load(), lineno=109, col_offset=36)), keyword('stderr', Attribute(Name('subprocess', Load(), lineno=109, col_offset=60), 'STDOUT', Load(), lineno=109, col_offset=60))], None, None, lineno=108, col_offset=12), lineno=108, col_offset=4), Expr(Call(Attribute(Attribute(Name('child', Load(), lineno=110, col_offset=4), 'stdin', Load(), lineno=110, col_offset=4), 'close', Load(), lineno=110, col_offset=4), [], [], None, None, lineno=110, col_offset=4), lineno=110, col_offset=4), While(Num(1, lineno=111, col_offset=10), [Assign([Name('line', Store(), lineno=112, col_offset=8)], Call(Attribute(Attribute(Name('child', Load(), lineno=112, col_offset=15), 'stdout', Load(), lineno=112, col_offset=15), 'readline', Load(), lineno=112, col_offset=15), [], [], None, None, lineno=112, col_offset=15), lineno=112, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=113, col_offset=15), lineno=113, col_offset=11), [Break( lineno=114, col_offset=12)], [], lineno=113, col_offset=8), If(Name('output', Load(), lineno=115, col_offset=11), [Expr(Call(Attribute(Name('output', Load(), lineno=116, col_offset=12), 'write', Load(), lineno=116, col_offset=12), [Name('line', Load(), lineno=116, col_offset=25)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [], lineno=115, col_offset=8)], [], lineno=111, col_offset=4), Return(Call(Attribute(Name('child', Load(), lineno=117, col_offset=11), 'wait', Load(), lineno=117, col_offset=11), [], [], None, None, lineno=117, col_offset=11), lineno=117, col_offset=4)], [], lineno=100, col_offset=0), ClassDef('PimpDownloader', [], [Expr(Str('Abstract base class - Downloader for archives', lineno=120, col_offset=4), lineno=120, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=122, col_offset=17), Name('argument', Param(), lineno=122, col_offset=23), Name('dir', Param(), lineno=123, col_offset=12), Name('watcher', Param(), lineno=124, col_offset=12)], None, None, [Str('', lineno=123, col_offset=16), Name('None', Load(), lineno=124, col_offset=20)]), [Assign([Attribute(Name('self', Load(), lineno=125, col_offset=8), 'argument', Store(), lineno=125, col_offset=8)], Name('argument', Load(), lineno=125, col_offset=24), lineno=125, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=126, col_offset=8), '_dir', Store(), lineno=126, col_offset=8)], Name('dir', Load(), lineno=126, col_offset=20), lineno=126, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=127, col_offset=8), '_watcher', Store(), lineno=127, col_offset=8)], Name('watcher', Load(), lineno=127, col_offset=24), lineno=127, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('download', arguments([Name('self', Param(), lineno=129, col_offset=17), Name('url', Param(), lineno=129, col_offset=23), Name('filename', Param(), lineno=129, col_offset=28), Name('output', Param(), lineno=129, col_offset=38)], None, None, [Name('None', Load(), lineno=129, col_offset=45)]), [Return(Name('None', Load(), lineno=130, col_offset=15), lineno=130, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('update', arguments([Name('self', Param(), lineno=132, col_offset=15), Name('str', Param(), lineno=132, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=133, col_offset=11), '_watcher', Load(), lineno=133, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=19), '_watcher', Load(), lineno=134, col_offset=19), 'update', Load(), lineno=134, col_offset=19), [Name('str', Load(), lineno=134, col_offset=40)], [], None, None, lineno=134, col_offset=19), lineno=134, col_offset=12)], [], lineno=133, col_offset=8), Return(Name('True', Load(), lineno=135, col_offset=15), lineno=135, col_offset=8)], [], lineno=132, col_offset=4)], [], lineno=119, col_offset=0), ClassDef('PimpCurlDownloader', [Name('PimpDownloader', Load(), lineno=137, col_offset=25)], [FunctionDef('download', arguments([Name('self', Param(), lineno=139, col_offset=17), Name('url', Param(), lineno=139, col_offset=23), Name('filename', Param(), lineno=139, col_offset=28), Name('output', Param(), lineno=139, col_offset=38)], None, None, [Name('None', Load(), lineno=139, col_offset=45)]), [Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'update', Load(), lineno=140, col_offset=8), [BinOp(Str('Downloading %s...', lineno=140, col_offset=20), Mod(), Name('url', Load(), lineno=140, col_offset=42), lineno=140, col_offset=20)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Assign([Name('exitstatus', Store(), lineno=141, col_offset=8)], Call(Name('_cmd', Load(), lineno=141, col_offset=21), [Name('output', Load(), lineno=141, col_offset=26), Attribute(Name('self', Load(), lineno=141, col_offset=34), '_dir', Load(), lineno=141, col_offset=34), Str('curl', lineno=142, col_offset=20), Str('--output', lineno=143, col_offset=20), Name('filename', Load(), lineno=143, col_offset=32), Name('url', Load(), lineno=144, col_offset=20)], [], None, None, lineno=141, col_offset=21), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'update', Load(), lineno=145, col_offset=8), [BinOp(Str('Downloading %s: finished', lineno=145, col_offset=20), Mod(), Name('url', Load(), lineno=145, col_offset=49), lineno=145, col_offset=20)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Return(UnaryOp(Not(), Name('exitstatus', Load(), lineno=146, col_offset=20), lineno=146, col_offset=16), lineno=146, col_offset=8)], [], lineno=139, col_offset=4)], [], lineno=137, col_offset=0), ClassDef('PimpUrllibDownloader', [Name('PimpDownloader', Load(), lineno=148, col_offset=27)], [FunctionDef('download', arguments([Name('self', Param(), lineno=150, col_offset=17), Name('url', Param(), lineno=150, col_offset=23), Name('filename', Param(), lineno=150, col_offset=28), Name('output', Param(), lineno=150, col_offset=38)], None, None, [Name('None', Load(), lineno=150, col_offset=45)]), [Assign([Name('output', Store(), lineno=151, col_offset=8)], Call(Name('open', Load(), lineno=151, col_offset=17), [Name('filename', Load(), lineno=151, col_offset=22), Str('wb', lineno=151, col_offset=32)], [], None, None, lineno=151, col_offset=17), lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'update', Load(), lineno=152, col_offset=8), [BinOp(Str('Downloading %s: opening connection', lineno=152, col_offset=20), Mod(), Name('url', Load(), lineno=152, col_offset=59), lineno=152, col_offset=20)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Assign([Name('keepgoing', Store(), lineno=153, col_offset=8)], Name('True', Load(), lineno=153, col_offset=20), lineno=153, col_offset=8), Assign([Name('download', Store(), lineno=154, col_offset=8)], Call(Attribute(Name('urllib2', Load(), lineno=154, col_offset=19), 'urlopen', Load(), lineno=154, col_offset=19), [Name('url', Load(), lineno=154, col_offset=35)], [], None, None, lineno=154, col_offset=19), lineno=154, col_offset=8), If(Compare(Str('content-length', lineno=155, col_offset=11), [In()], [Attribute(Name('download', Load(), lineno=155, col_offset=31), 'headers', Load(), lineno=155, col_offset=31)], lineno=155, col_offset=11), [Assign([Name('length', Store(), lineno=156, col_offset=12)], Call(Name('long', Load(), lineno=156, col_offset=21), [Subscript(Attribute(Name('download', Load(), lineno=156, col_offset=26), 'headers', Load(), lineno=156, col_offset=26), Index(Str('content-length', lineno=156, col_offset=43)), Load(), lineno=156, col_offset=26)], [], None, None, lineno=156, col_offset=21), lineno=156, col_offset=12)], [Assign([Name('length', Store(), lineno=158, col_offset=12)], Num(-1, lineno=158, col_offset=22), lineno=158, col_offset=12)], lineno=155, col_offset=8), Assign([Name('data', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('download', Load(), lineno=160, col_offset=15), 'read', Load(), lineno=160, col_offset=15), [Num(4096, lineno=160, col_offset=29)], [], None, None, lineno=160, col_offset=15), lineno=160, col_offset=8), Assign([Name('dlsize', Store(), lineno=161, col_offset=8)], Num(0, lineno=161, col_offset=17), lineno=161, col_offset=8), Assign([Name('lasttime', Store(), lineno=162, col_offset=8)], Num(0, lineno=162, col_offset=19), lineno=162, col_offset=8), While(Name('keepgoing', Load(), lineno=163, col_offset=14), [Assign([Name('dlsize', Store(), lineno=164, col_offset=12)], BinOp(Name('dlsize', Load(), lineno=164, col_offset=21), Add(), Call(Name('len', Load(), lineno=164, col_offset=30), [Name('data', Load(), lineno=164, col_offset=34)], [], None, None, lineno=164, col_offset=30), lineno=164, col_offset=21), lineno=164, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=165, col_offset=15), [Name('data', Load(), lineno=165, col_offset=19)], [], None, None, lineno=165, col_offset=15), [Eq()], [Num(0, lineno=165, col_offset=28)], lineno=165, col_offset=15), [Break( lineno=167, col_offset=16)], [], lineno=165, col_offset=12), Expr(Call(Attribute(Name('output', Load(), lineno=168, col_offset=12), 'write', Load(), lineno=168, col_offset=12), [Name('data', Load(), lineno=168, col_offset=25)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12), If(Compare(Call(Name('int', Load(), lineno=169, col_offset=15), [Call(Attribute(Name('time', Load(), lineno=169, col_offset=19), 'time', Load(), lineno=169, col_offset=19), [], [], None, None, lineno=169, col_offset=19)], [], None, None, lineno=169, col_offset=15), [NotEq()], [Name('lasttime', Load(), lineno=169, col_offset=35)], lineno=169, col_offset=15), [Assign([Name('lasttime', Store(), lineno=171, col_offset=16)], Call(Name('int', Load(), lineno=171, col_offset=27), [Call(Attribute(Name('time', Load(), lineno=171, col_offset=31), 'time', Load(), lineno=171, col_offset=31), [], [], None, None, lineno=171, col_offset=31)], [], None, None, lineno=171, col_offset=27), lineno=171, col_offset=16), If(Compare(Name('length', Load(), lineno=172, col_offset=19), [Eq()], [Num(-1, lineno=172, col_offset=30)], lineno=172, col_offset=19), [Assign([Name('keepgoing', Store(), lineno=173, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=173, col_offset=32), 'update', Load(), lineno=173, col_offset=32), [BinOp(Str('Downloading %s: %d bytes...', lineno=173, col_offset=44), Mod(), Tuple([Name('url', Load(), lineno=173, col_offset=77), Name('dlsize', Load(), lineno=173, col_offset=82)], Load(), lineno=173, col_offset=77), lineno=173, col_offset=44)], [], None, None, lineno=173, col_offset=32), lineno=173, col_offset=20)], [Assign([Name('keepgoing', Store(), lineno=175, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=175, col_offset=32), 'update', Load(), lineno=175, col_offset=32), [BinOp(Str('Downloading %s: %d%% (%d bytes)...', lineno=175, col_offset=44), Mod(), Tuple([Name('url', Load(), lineno=175, col_offset=84), Call(Name('int', Load(), lineno=175, col_offset=89), [BinOp(BinOp(Num(100.0, lineno=175, col_offset=93), Mult(), Name('dlsize', Load(), lineno=175, col_offset=99), lineno=175, col_offset=93), Div(), Name('length', Load(), lineno=175, col_offset=106), lineno=175, col_offset=105)], [], None, None, lineno=175, col_offset=89), Name('dlsize', Load(), lineno=175, col_offset=115)], Load(), lineno=175, col_offset=84), lineno=175, col_offset=44)], [], None, None, lineno=175, col_offset=32), lineno=175, col_offset=20)], lineno=172, col_offset=16)], [], lineno=169, col_offset=12), Assign([Name('data', Store(), lineno=176, col_offset=12)], Call(Attribute(Name('download', Load(), lineno=176, col_offset=19), 'read', Load(), lineno=176, col_offset=19), [Num(4096, lineno=176, col_offset=33)], [], None, None, lineno=176, col_offset=19), lineno=176, col_offset=12)], [], lineno=163, col_offset=8), If(Name('keepgoing', Load(), lineno=177, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), 'update', Load(), lineno=178, col_offset=12), [BinOp(Str('Downloading %s: finished', lineno=178, col_offset=24), Mod(), Name('url', Load(), lineno=178, col_offset=53), lineno=178, col_offset=24)], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12)], [], lineno=177, col_offset=8), Return(Name('keepgoing', Load(), lineno=179, col_offset=15), lineno=179, col_offset=8)], [], lineno=150, col_offset=4)], [], lineno=148, col_offset=0), ClassDef('PimpUnpacker', [], [Expr(Str('Abstract base class - Unpacker for archives', lineno=182, col_offset=4), lineno=182, col_offset=4), Assign([Name('_can_rename', Store(), lineno=184, col_offset=4)], Name('False', Load(), lineno=184, col_offset=18), lineno=184, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=186, col_offset=17), Name('argument', Param(), lineno=186, col_offset=23), Name('dir', Param(), lineno=187, col_offset=12), Name('renames', Param(), lineno=188, col_offset=12), Name('watcher', Param(), lineno=189, col_offset=12)], None, None, [Str('', lineno=187, col_offset=16), List([], Load(), lineno=188, col_offset=20), Name('None', Load(), lineno=189, col_offset=20)]), [Assign([Attribute(Name('self', Load(), lineno=190, col_offset=8), 'argument', Store(), lineno=190, col_offset=8)], Name('argument', Load(), lineno=190, col_offset=24), lineno=190, col_offset=8), If(BoolOp(And(), [Name('renames', Load(), lineno=191, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=191, col_offset=27), '_can_rename', Load(), lineno=191, col_offset=27), lineno=191, col_offset=23)], lineno=191, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=192, col_offset=18), Str('This unpacker cannot rename files', lineno=192, col_offset=32), None, lineno=192, col_offset=12)], [], lineno=191, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=193, col_offset=8), '_dir', Store(), lineno=193, col_offset=8)], Name('dir', Load(), lineno=193, col_offset=20), lineno=193, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=194, col_offset=8), '_renames', Store(), lineno=194, col_offset=8)], Name('renames', Load(), lineno=194, col_offset=24), lineno=194, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=195, col_offset=8), '_watcher', Store(), lineno=195, col_offset=8)], Name('watcher', Load(), lineno=195, col_offset=24), lineno=195, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('unpack', arguments([Name('self', Param(), lineno=197, col_offset=15), Name('archive', Param(), lineno=197, col_offset=21), Name('output', Param(), lineno=197, col_offset=30), Name('package', Param(), lineno=197, col_offset=43)], None, None, [Name('None', Load(), lineno=197, col_offset=37), Name('None', Load(), lineno=197, col_offset=51)]), [Return(Name('None', Load(), lineno=198, col_offset=15), lineno=198, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('update', arguments([Name('self', Param(), lineno=200, col_offset=15), Name('str', Param(), lineno=200, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=201, col_offset=11), '_watcher', Load(), lineno=201, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=202, col_offset=19), '_watcher', Load(), lineno=202, col_offset=19), 'update', Load(), lineno=202, col_offset=19), [Name('str', Load(), lineno=202, col_offset=40)], [], None, None, lineno=202, col_offset=19), lineno=202, col_offset=12)], [], lineno=201, col_offset=8), Return(Name('True', Load(), lineno=203, col_offset=15), lineno=203, col_offset=8)], [], lineno=200, col_offset=4)], [], lineno=181, col_offset=0), ClassDef('PimpCommandUnpacker', [Name('PimpUnpacker', Load(), lineno=205, col_offset=26)], [Expr(Str('Unpack archives by calling a Unix utility', lineno=206, col_offset=4), lineno=206, col_offset=4), Assign([Name('_can_rename', Store(), lineno=208, col_offset=4)], Name('False', Load(), lineno=208, col_offset=18), lineno=208, col_offset=4), FunctionDef('unpack', arguments([Name('self', Param(), lineno=210, col_offset=15), Name('archive', Param(), lineno=210, col_offset=21), Name('output', Param(), lineno=210, col_offset=30), Name('package', Param(), lineno=210, col_offset=43)], None, None, [Name('None', Load(), lineno=210, col_offset=37), Name('None', Load(), lineno=210, col_offset=51)]), [Assign([Name('cmd', Store(), lineno=211, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=211, col_offset=14), 'argument', Load(), lineno=211, col_offset=14), Mod(), Name('archive', Load(), lineno=211, col_offset=30), lineno=211, col_offset=14), lineno=211, col_offset=8), If(Call(Name('_cmd', Load(), lineno=212, col_offset=11), [Name('output', Load(), lineno=212, col_offset=16), Attribute(Name('self', Load(), lineno=212, col_offset=24), '_dir', Load(), lineno=212, col_offset=24), Name('cmd', Load(), lineno=212, col_offset=35)], [], None, None, lineno=212, col_offset=11), [Return(Str('unpack command failed', lineno=213, col_offset=19), lineno=213, col_offset=12)], [], lineno=212, col_offset=8)], [], lineno=210, col_offset=4)], [], lineno=205, col_offset=0), ClassDef('PimpTarUnpacker', [Name('PimpUnpacker', Load(), lineno=215, col_offset=22)], [Expr(Str('Unpack tarfiles using the builtin tarfile module', lineno=216, col_offset=4), lineno=216, col_offset=4), Assign([Name('_can_rename', Store(), lineno=218, col_offset=4)], Name('True', Load(), lineno=218, col_offset=18), lineno=218, col_offset=4), FunctionDef('unpack', arguments([Name('self', Param(), lineno=220, col_offset=15), Name('archive', Param(), lineno=220, col_offset=21), Name('output', Param(), lineno=220, col_offset=30), Name('package', Param(), lineno=220, col_offset=43)], None, None, [Name('None', Load(), lineno=220, col_offset=37), Name('None', Load(), lineno=220, col_offset=51)]), [Assign([Name('tf', Store(), lineno=221, col_offset=8)], Call(Attribute(Name('tarfile', Load(), lineno=221, col_offset=13), 'open', Load(), lineno=221, col_offset=13), [Name('archive', Load(), lineno=221, col_offset=26), Str('r', lineno=221, col_offset=35)], [], None, None, lineno=221, col_offset=13), lineno=221, col_offset=8), Assign([Name('members', Store(), lineno=222, col_offset=8)], Call(Attribute(Name('tf', Load(), lineno=222, col_offset=18), 'getmembers', Load(), lineno=222, col_offset=18), [], [], None, None, lineno=222, col_offset=18), lineno=222, col_offset=8), Assign([Name('skip', Store(), lineno=223, col_offset=8)], List([], Load(), lineno=223, col_offset=15), lineno=223, col_offset=8), If(Attribute(Name('self', Load(), lineno=224, col_offset=11), '_renames', Load(), lineno=224, col_offset=11), [For(Name('member', Store(), lineno=225, col_offset=16), Name('members', Load(), lineno=225, col_offset=26), [For(Tuple([Name('oldprefix', Store(), lineno=226, col_offset=20), Name('newprefix', Store(), lineno=226, col_offset=31)], Store(), lineno=226, col_offset=20), Attribute(Name('self', Load(), lineno=226, col_offset=44), '_renames', Load(), lineno=226, col_offset=44), [If(Compare(Subscript(Name('oldprefix', Load(), lineno=227, col_offset=23), Slice(None, Call(Name('len', Load(), lineno=227, col_offset=34), [Attribute(Name('self', Load(), lineno=227, col_offset=38), '_dir', Load(), lineno=227, col_offset=38)], [], None, None, lineno=227, col_offset=34), None), Load(), lineno=227, col_offset=23), [Eq()], [Attribute(Name('self', Load(), lineno=227, col_offset=53), '_dir', Load(), lineno=227, col_offset=53)], lineno=227, col_offset=23), [Assign([Name('oldprefix2', Store(), lineno=228, col_offset=24)], Subscript(Name('oldprefix', Load(), lineno=228, col_offset=37), Slice(Call(Name('len', Load(), lineno=228, col_offset=47), [Attribute(Name('self', Load(), lineno=228, col_offset=51), '_dir', Load(), lineno=228, col_offset=51)], [], None, None, lineno=228, col_offset=47), None, None), Load(), lineno=228, col_offset=37), lineno=228, col_offset=24)], [Assign([Name('oldprefix2', Store(), lineno=230, col_offset=24)], Name('None', Load(), lineno=230, col_offset=37), lineno=230, col_offset=24)], lineno=227, col_offset=20), If(Compare(Subscript(Attribute(Name('member', Load(), lineno=231, col_offset=23), 'name', Load(), lineno=231, col_offset=23), Slice(None, Call(Name('len', Load(), lineno=231, col_offset=36), [Name('oldprefix', Load(), lineno=231, col_offset=40)], [], None, None, lineno=231, col_offset=36), None), Load(), lineno=231, col_offset=23), [Eq()], [Name('oldprefix', Load(), lineno=231, col_offset=55)], lineno=231, col_offset=23), [If(Compare(Name('newprefix', Load(), lineno=232, col_offset=27), [Is()], [Name('None', Load(), lineno=232, col_offset=40)], lineno=232, col_offset=27), [Expr(Call(Attribute(Name('skip', Load(), lineno=233, col_offset=28), 'append', Load(), lineno=233, col_offset=28), [Name('member', Load(), lineno=233, col_offset=40)], [], None, None, lineno=233, col_offset=28), lineno=233, col_offset=28)], [Assign([Attribute(Name('member', Load(), lineno=236, col_offset=28), 'name', Store(), lineno=236, col_offset=28)], BinOp(Name('newprefix', Load(), lineno=236, col_offset=42), Add(), Subscript(Attribute(Name('member', Load(), lineno=236, col_offset=54), 'name', Load(), lineno=236, col_offset=54), Slice(Call(Name('len', Load(), lineno=236, col_offset=66), [Name('oldprefix', Load(), lineno=236, col_offset=70)], [], None, None, lineno=236, col_offset=66), None, None), Load(), lineno=236, col_offset=54), lineno=236, col_offset=42), lineno=236, col_offset=28), Print(None, [Str('    ', lineno=237, col_offset=34), Attribute(Name('member', Load(), lineno=237, col_offset=42), 'name', Load(), lineno=237, col_offset=42)], True, lineno=237, col_offset=28)], lineno=232, col_offset=24), Break( lineno=238, col_offset=24)], [If(BoolOp(And(), [Name('oldprefix2', Load(), lineno=239, col_offset=25), Compare(Subscript(Attribute(Name('member', Load(), lineno=239, col_offset=40), 'name', Load(), lineno=239, col_offset=40), Slice(None, Call(Name('len', Load(), lineno=239, col_offset=53), [Name('oldprefix2', Load(), lineno=239, col_offset=57)], [], None, None, lineno=239, col_offset=53), None), Load(), lineno=239, col_offset=40), [Eq()], [Name('oldprefix2', Load(), lineno=239, col_offset=73)], lineno=239, col_offset=40)], lineno=239, col_offset=25), [If(Compare(Name('newprefix', Load(), lineno=240, col_offset=27), [Is()], [Name('None', Load(), lineno=240, col_offset=40)], lineno=240, col_offset=27), [Expr(Call(Attribute(Name('skip', Load(), lineno=241, col_offset=28), 'append', Load(), lineno=241, col_offset=28), [Name('member', Load(), lineno=241, col_offset=40)], [], None, None, lineno=241, col_offset=28), lineno=241, col_offset=28)], [Assign([Attribute(Name('member', Load(), lineno=244, col_offset=28), 'name', Store(), lineno=244, col_offset=28)], BinOp(Name('newprefix', Load(), lineno=244, col_offset=42), Add(), Subscript(Attribute(Name('member', Load(), lineno=244, col_offset=54), 'name', Load(), lineno=244, col_offset=54), Slice(Call(Name('len', Load(), lineno=244, col_offset=66), [Name('oldprefix2', Load(), lineno=244, col_offset=70)], [], None, None, lineno=244, col_offset=66), None, None), Load(), lineno=244, col_offset=54), lineno=244, col_offset=42), lineno=244, col_offset=28)], lineno=240, col_offset=24), Break( lineno=246, col_offset=24)], [], lineno=239, col_offset=25)], lineno=231, col_offset=20)], [Expr(Call(Attribute(Name('skip', Load(), lineno=248, col_offset=20), 'append', Load(), lineno=248, col_offset=20), [Name('member', Load(), lineno=248, col_offset=32)], [], None, None, lineno=248, col_offset=20), lineno=248, col_offset=20)], lineno=226, col_offset=16)], [], lineno=225, col_offset=12)], [], lineno=224, col_offset=8), For(Name('member', Store(), lineno=250, col_offset=12), Name('members', Load(), lineno=250, col_offset=22), [If(Compare(Name('member', Load(), lineno=251, col_offset=15), [In()], [Name('skip', Load(), lineno=251, col_offset=25)], lineno=251, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=16), 'update', Load(), lineno=252, col_offset=16), [BinOp(Str('Skipping %s', lineno=252, col_offset=28), Mod(), Attribute(Name('member', Load(), lineno=252, col_offset=44), 'name', Load(), lineno=252, col_offset=44), lineno=252, col_offset=28)], [], None, None, lineno=252, col_offset=16), lineno=252, col_offset=16), Continue( lineno=253, col_offset=16)], [], lineno=251, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=12), 'update', Load(), lineno=254, col_offset=12), [BinOp(Str('Extracting %s', lineno=254, col_offset=24), Mod(), Attribute(Name('member', Load(), lineno=254, col_offset=42), 'name', Load(), lineno=254, col_offset=42), lineno=254, col_offset=24)], [], None, None, lineno=254, col_offset=12), lineno=254, col_offset=12), Expr(Call(Attribute(Name('tf', Load(), lineno=255, col_offset=12), 'extract', Load(), lineno=255, col_offset=12), [Name('member', Load(), lineno=255, col_offset=23), Attribute(Name('self', Load(), lineno=255, col_offset=31), '_dir', Load(), lineno=255, col_offset=31)], [], None, None, lineno=255, col_offset=12), lineno=255, col_offset=12)], [], lineno=250, col_offset=8), If(Name('skip', Load(), lineno=256, col_offset=11), [Assign([Name('names', Store(), lineno=257, col_offset=12)], ListComp(Attribute(Name('member', Load(), lineno=257, col_offset=21), 'name', Load(), lineno=257, col_offset=21), [comprehension(Name('member', Store(), lineno=257, col_offset=37), Name('skip', Load(), lineno=257, col_offset=47), [Compare(Subscript(Attribute(Name('member', Load(), lineno=257, col_offset=55), 'name', Load(), lineno=257, col_offset=55), Index(Num(-1, lineno=257, col_offset=68)), Load(), lineno=257, col_offset=55), [NotEq()], [Str('/', lineno=257, col_offset=74)], lineno=257, col_offset=55)])], lineno=257, col_offset=21), lineno=257, col_offset=12), If(Name('package', Load(), lineno=258, col_offset=15), [Assign([Name('names', Store(), lineno=259, col_offset=16)], Call(Attribute(Name('package', Load(), lineno=259, col_offset=24), 'filterExpectedSkips', Load(), lineno=259, col_offset=24), [Name('names', Load(), lineno=259, col_offset=52)], [], None, None, lineno=259, col_offset=24), lineno=259, col_offset=16)], [], lineno=258, col_offset=12), If(Name('names', Load(), lineno=260, col_offset=15), [Return(BinOp(Str('Not all files were unpacked: %s', lineno=261, col_offset=23), Mod(), Call(Attribute(Str(' ', lineno=261, col_offset=59), 'join', Load(), lineno=261, col_offset=59), [Name('names', Load(), lineno=261, col_offset=68)], [], None, None, lineno=261, col_offset=59), lineno=261, col_offset=23), lineno=261, col_offset=16)], [], lineno=260, col_offset=12)], [], lineno=256, col_offset=8)], [], lineno=220, col_offset=4)], [], lineno=215, col_offset=0), Assign([Name('ARCHIVE_FORMATS', Store(), lineno=263, col_offset=0)], List([Tuple([Str('.tar.Z', lineno=264, col_offset=5), Name('PimpTarUnpacker', Load(), lineno=264, col_offset=15), Name('None', Load(), lineno=264, col_offset=32)], Load(), lineno=264, col_offset=5), Tuple([Str('.taz', lineno=265, col_offset=5), Name('PimpTarUnpacker', Load(), lineno=265, col_offset=13), Name('None', Load(), lineno=265, col_offset=30)], Load(), lineno=265, col_offset=5), Tuple([Str('.tar.gz', lineno=266, col_offset=5), Name('PimpTarUnpacker', Load(), lineno=266, col_offset=16), Name('None', Load(), lineno=266, col_offset=33)], Load(), lineno=266, col_offset=5), Tuple([Str('.tgz', lineno=267, col_offset=5), Name('PimpTarUnpacker', Load(), lineno=267, col_offset=13), Name('None', Load(), lineno=267, col_offset=30)], Load(), lineno=267, col_offset=5), Tuple([Str('.tar.bz', lineno=268, col_offset=5), Name('PimpTarUnpacker', Load(), lineno=268, col_offset=16), Name('None', Load(), lineno=268, col_offset=33)], Load(), lineno=268, col_offset=5), Tuple([Str('.zip', lineno=269, col_offset=5), Name('PimpCommandUnpacker', Load(), lineno=269, col_offset=13), Str('unzip "%s"', lineno=269, col_offset=34)], Load(), lineno=269, col_offset=5)], Load(), lineno=263, col_offset=18), lineno=263, col_offset=0), ClassDef('PimpPreferences', [], [Expr(Str('Container for per-user preferences, such as the database to use\n    and where to install packages.', lineno=274, col_offset=-1), lineno=274, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=276, col_offset=17), Name('flavorOrder', Param(), lineno=277, col_offset=12), Name('downloadDir', Param(), lineno=278, col_offset=12), Name('buildDir', Param(), lineno=279, col_offset=12), Name('installDir', Param(), lineno=280, col_offset=12), Name('pimpDatabase', Param(), lineno=281, col_offset=12)], None, None, [Name('None', Load(), lineno=277, col_offset=24), Name('None', Load(), lineno=278, col_offset=24), Name('None', Load(), lineno=279, col_offset=21), Name('None', Load(), lineno=280, col_offset=23), Name('None', Load(), lineno=281, col_offset=25)]), [If(UnaryOp(Not(), Name('flavorOrder', Load(), lineno=282, col_offset=15), lineno=282, col_offset=11), [Assign([Name('flavorOrder', Store(), lineno=283, col_offset=12)], Name('DEFAULT_FLAVORORDER', Load(), lineno=283, col_offset=26), lineno=283, col_offset=12)], [], lineno=282, col_offset=8), If(UnaryOp(Not(), Name('downloadDir', Load(), lineno=284, col_offset=15), lineno=284, col_offset=11), [Assign([Name('downloadDir', Store(), lineno=285, col_offset=12)], Name('DEFAULT_DOWNLOADDIR', Load(), lineno=285, col_offset=26), lineno=285, col_offset=12)], [], lineno=284, col_offset=8), If(UnaryOp(Not(), Name('buildDir', Load(), lineno=286, col_offset=15), lineno=286, col_offset=11), [Assign([Name('buildDir', Store(), lineno=287, col_offset=12)], Name('DEFAULT_BUILDDIR', Load(), lineno=287, col_offset=23), lineno=287, col_offset=12)], [], lineno=286, col_offset=8), If(UnaryOp(Not(), Name('pimpDatabase', Load(), lineno=288, col_offset=15), lineno=288, col_offset=11), [Assign([Name('pimpDatabase', Store(), lineno=289, col_offset=12)], Call(Name('getDefaultDatabase', Load(), lineno=289, col_offset=27), [], [], None, None, lineno=289, col_offset=27), lineno=289, col_offset=12)], [], lineno=288, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'setInstallDir', Load(), lineno=290, col_offset=8), [Name('installDir', Load(), lineno=290, col_offset=27)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=291, col_offset=8), 'flavorOrder', Store(), lineno=291, col_offset=8)], Name('flavorOrder', Load(), lineno=291, col_offset=27), lineno=291, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=292, col_offset=8), 'downloadDir', Store(), lineno=292, col_offset=8)], Name('downloadDir', Load(), lineno=292, col_offset=27), lineno=292, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=293, col_offset=8), 'buildDir', Store(), lineno=293, col_offset=8)], Name('buildDir', Load(), lineno=293, col_offset=24), lineno=293, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=294, col_offset=8), 'pimpDatabase', Store(), lineno=294, col_offset=8)], Name('pimpDatabase', Load(), lineno=294, col_offset=28), lineno=294, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=295, col_offset=8), 'watcher', Store(), lineno=295, col_offset=8)], Name('None', Load(), lineno=295, col_offset=23), lineno=295, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('setWatcher', arguments([Name('self', Param(), lineno=297, col_offset=19), Name('watcher', Param(), lineno=297, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=298, col_offset=8), 'watcher', Store(), lineno=298, col_offset=8)], Name('watcher', Load(), lineno=298, col_offset=23), lineno=298, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('setInstallDir', arguments([Name('self', Param(), lineno=300, col_offset=22), Name('installDir', Param(), lineno=300, col_offset=28)], None, None, [Name('None', Load(), lineno=300, col_offset=39)]), [If(Name('installDir', Load(), lineno=301, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=303, col_offset=12), 'installLocations', Store(), lineno=303, col_offset=12)], List([Tuple([Str('--install-lib', lineno=304, col_offset=17), Name('installDir', Load(), lineno=304, col_offset=34)], Load(), lineno=304, col_offset=17), Tuple([Str('--install-headers', lineno=305, col_offset=17), Name('None', Load(), lineno=305, col_offset=38)], Load(), lineno=305, col_offset=17), Tuple([Str('--install-scripts', lineno=306, col_offset=17), Name('None', Load(), lineno=306, col_offset=38)], Load(), lineno=306, col_offset=17), Tuple([Str('--install-data', lineno=307, col_offset=17), Name('None', Load(), lineno=307, col_offset=35)], Load(), lineno=307, col_offset=17)], Load(), lineno=303, col_offset=36), lineno=303, col_offset=12)], [Assign([Name('installDir', Store(), lineno=309, col_offset=12)], Name('DEFAULT_INSTALLDIR', Load(), lineno=309, col_offset=25), lineno=309, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=310, col_offset=12), 'installLocations', Store(), lineno=310, col_offset=12)], List([], Load(), lineno=310, col_offset=36), lineno=310, col_offset=12)], lineno=301, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=311, col_offset=8), 'installDir', Store(), lineno=311, col_offset=8)], Name('installDir', Load(), lineno=311, col_offset=26), lineno=311, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('isUserInstall', arguments([Name('self', Param(), lineno=313, col_offset=22)], None, None, []), [Return(Compare(Attribute(Name('self', Load(), lineno=314, col_offset=15), 'installDir', Load(), lineno=314, col_offset=15), [NotEq()], [Name('DEFAULT_INSTALLDIR', Load(), lineno=314, col_offset=34)], lineno=314, col_offset=15), lineno=314, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('check', arguments([Name('self', Param(), lineno=316, col_offset=14)], None, None, []), [Expr(Str('Check that the preferences make sense: directories exist and are\n        writable, the install directory is on sys.path, etc.', lineno=318, col_offset=-1), lineno=318, col_offset=-1), Assign([Name('rv', Store(), lineno=320, col_offset=8)], Str('', lineno=320, col_offset=13), lineno=320, col_offset=8), Assign([Name('RWX_OK', Store(), lineno=321, col_offset=8)], BinOp(BinOp(Attribute(Name('os', Load(), lineno=321, col_offset=17), 'R_OK', Load(), lineno=321, col_offset=17), BitOr(), Attribute(Name('os', Load(), lineno=321, col_offset=25), 'W_OK', Load(), lineno=321, col_offset=25), lineno=321, col_offset=17), BitOr(), Attribute(Name('os', Load(), lineno=321, col_offset=33), 'X_OK', Load(), lineno=321, col_offset=33), lineno=321, col_offset=32), lineno=321, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=322, col_offset=15), 'path', Load(), lineno=322, col_offset=15), 'exists', Load(), lineno=322, col_offset=15), [Attribute(Name('self', Load(), lineno=322, col_offset=30), 'downloadDir', Load(), lineno=322, col_offset=30)], [], None, None, lineno=322, col_offset=15), lineno=322, col_offset=11), [AugAssign(Name('rv', Store(), lineno=323, col_offset=12), Add(), BinOp(Str('Warning: Download directory "%s" does not exist\n', lineno=323, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=323, col_offset=74), 'downloadDir', Load(), lineno=323, col_offset=74), lineno=323, col_offset=18), lineno=323, col_offset=12)], [If(UnaryOp(Not(), Call(Attribute(Name('os', Load(), lineno=324, col_offset=17), 'access', Load(), lineno=324, col_offset=17), [Attribute(Name('self', Load(), lineno=324, col_offset=27), 'downloadDir', Load(), lineno=324, col_offset=27), Name('RWX_OK', Load(), lineno=324, col_offset=45)], [], None, None, lineno=324, col_offset=17), lineno=324, col_offset=13), [AugAssign(Name('rv', Store(), lineno=325, col_offset=12), Add(), BinOp(Str('Warning: Download directory "%s" is not writable or not readable\n', lineno=325, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=325, col_offset=91), 'downloadDir', Load(), lineno=325, col_offset=91), lineno=325, col_offset=18), lineno=325, col_offset=12)], [], lineno=324, col_offset=13)], lineno=322, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=326, col_offset=15), 'path', Load(), lineno=326, col_offset=15), 'exists', Load(), lineno=326, col_offset=15), [Attribute(Name('self', Load(), lineno=326, col_offset=30), 'buildDir', Load(), lineno=326, col_offset=30)], [], None, None, lineno=326, col_offset=15), lineno=326, col_offset=11), [AugAssign(Name('rv', Store(), lineno=327, col_offset=12), Add(), BinOp(Str('Warning: Build directory "%s" does not exist\n', lineno=327, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=327, col_offset=71), 'buildDir', Load(), lineno=327, col_offset=71), lineno=327, col_offset=18), lineno=327, col_offset=12)], [If(UnaryOp(Not(), Call(Attribute(Name('os', Load(), lineno=328, col_offset=17), 'access', Load(), lineno=328, col_offset=17), [Attribute(Name('self', Load(), lineno=328, col_offset=27), 'buildDir', Load(), lineno=328, col_offset=27), Name('RWX_OK', Load(), lineno=328, col_offset=42)], [], None, None, lineno=328, col_offset=17), lineno=328, col_offset=13), [AugAssign(Name('rv', Store(), lineno=329, col_offset=12), Add(), BinOp(Str('Warning: Build directory "%s" is not writable or not readable\n', lineno=329, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=329, col_offset=88), 'buildDir', Load(), lineno=329, col_offset=88), lineno=329, col_offset=18), lineno=329, col_offset=12)], [], lineno=328, col_offset=13)], lineno=326, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=330, col_offset=15), 'path', Load(), lineno=330, col_offset=15), 'exists', Load(), lineno=330, col_offset=15), [Attribute(Name('self', Load(), lineno=330, col_offset=30), 'installDir', Load(), lineno=330, col_offset=30)], [], None, None, lineno=330, col_offset=15), lineno=330, col_offset=11), [AugAssign(Name('rv', Store(), lineno=331, col_offset=12), Add(), BinOp(Str('Warning: Install directory "%s" does not exist\n', lineno=331, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=331, col_offset=73), 'installDir', Load(), lineno=331, col_offset=73), lineno=331, col_offset=18), lineno=331, col_offset=12)], [If(UnaryOp(Not(), Call(Attribute(Name('os', Load(), lineno=332, col_offset=17), 'access', Load(), lineno=332, col_offset=17), [Attribute(Name('self', Load(), lineno=332, col_offset=27), 'installDir', Load(), lineno=332, col_offset=27), Name('RWX_OK', Load(), lineno=332, col_offset=44)], [], None, None, lineno=332, col_offset=17), lineno=332, col_offset=13), [AugAssign(Name('rv', Store(), lineno=333, col_offset=12), Add(), BinOp(Str('Warning: Install directory "%s" is not writable or not readable\n', lineno=333, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=333, col_offset=90), 'installDir', Load(), lineno=333, col_offset=90), lineno=333, col_offset=18), lineno=333, col_offset=12)], [Assign([Name('installDir', Store(), lineno=335, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=335, col_offset=25), 'path', Load(), lineno=335, col_offset=25), 'realpath', Load(), lineno=335, col_offset=25), [Attribute(Name('self', Load(), lineno=335, col_offset=42), 'installDir', Load(), lineno=335, col_offset=42)], [], None, None, lineno=335, col_offset=25), lineno=335, col_offset=12), For(Name('p', Store(), lineno=336, col_offset=16), Attribute(Name('sys', Load(), lineno=336, col_offset=21), 'path', Load(), lineno=336, col_offset=21), [TryExcept([Assign([Name('realpath', Store(), lineno=338, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=338, col_offset=31), 'path', Load(), lineno=338, col_offset=31), 'realpath', Load(), lineno=338, col_offset=31), [Name('p', Load(), lineno=338, col_offset=48)], [], None, None, lineno=338, col_offset=31), lineno=338, col_offset=20)], [ExceptHandler(None, None, [Pass( lineno=340, col_offset=20)], lineno=339, col_offset=16)], [], lineno=337, col_offset=16), If(Compare(Name('installDir', Load(), lineno=341, col_offset=19), [Eq()], [Name('realpath', Load(), lineno=341, col_offset=33)], lineno=341, col_offset=19), [Break( lineno=342, col_offset=20)], [], lineno=341, col_offset=16)], [AugAssign(Name('rv', Store(), lineno=344, col_offset=16), Add(), BinOp(Str('Warning: Install directory "%s" is not on sys.path\n', lineno=344, col_offset=22), Mod(), Attribute(Name('self', Load(), lineno=344, col_offset=81), 'installDir', Load(), lineno=344, col_offset=81), lineno=344, col_offset=22), lineno=344, col_offset=16)], lineno=336, col_offset=12)], lineno=332, col_offset=13)], lineno=330, col_offset=8), Return(Name('rv', Load(), lineno=345, col_offset=15), lineno=345, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('compareFlavors', arguments([Name('self', Param(), lineno=347, col_offset=23), Name('left', Param(), lineno=347, col_offset=29), Name('right', Param(), lineno=347, col_offset=35)], None, None, []), [Expr(Str('Compare two flavor strings. This is part of your preferences\n        because whether the user prefers installing from source or binary is.', lineno=349, col_offset=-1), lineno=349, col_offset=-1), If(Compare(Name('left', Load(), lineno=350, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=350, col_offset=19), 'flavorOrder', Load(), lineno=350, col_offset=19)], lineno=350, col_offset=11), [If(Compare(Name('right', Load(), lineno=351, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=351, col_offset=24), 'flavorOrder', Load(), lineno=351, col_offset=24)], lineno=351, col_offset=15), [Return(Call(Name('cmp', Load(), lineno=352, col_offset=23), [Call(Attribute(Attribute(Name('self', Load(), lineno=352, col_offset=27), 'flavorOrder', Load(), lineno=352, col_offset=27), 'index', Load(), lineno=352, col_offset=27), [Name('left', Load(), lineno=352, col_offset=50)], [], None, None, lineno=352, col_offset=27), Call(Attribute(Attribute(Name('self', Load(), lineno=352, col_offset=57), 'flavorOrder', Load(), lineno=352, col_offset=57), 'index', Load(), lineno=352, col_offset=57), [Name('right', Load(), lineno=352, col_offset=80)], [], None, None, lineno=352, col_offset=57)], [], None, None, lineno=352, col_offset=23), lineno=352, col_offset=16)], [], lineno=351, col_offset=12), Return(Num(-1, lineno=353, col_offset=20), lineno=353, col_offset=12)], [], lineno=350, col_offset=8), If(Compare(Name('right', Load(), lineno=354, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=354, col_offset=20), 'flavorOrder', Load(), lineno=354, col_offset=20)], lineno=354, col_offset=11), [Return(Num(1, lineno=355, col_offset=19), lineno=355, col_offset=12)], [], lineno=354, col_offset=8), Return(Call(Name('cmp', Load(), lineno=356, col_offset=15), [Name('left', Load(), lineno=356, col_offset=19), Name('right', Load(), lineno=356, col_offset=25)], [], None, None, lineno=356, col_offset=15), lineno=356, col_offset=8)], [], lineno=347, col_offset=4)], [], lineno=272, col_offset=0), ClassDef('PimpDatabase', [], [Expr(Str('Class representing a pimp database. It can actually contain\n    information from multiple databases through inclusion, but the\n    toplevel database is considered the master, as its maintainer is\n    "responsible" for the contents.', lineno=362, col_offset=-1), lineno=362, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=364, col_offset=17), Name('prefs', Param(), lineno=364, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=365, col_offset=8), '_packages', Store(), lineno=365, col_offset=8)], List([], Load(), lineno=365, col_offset=25), lineno=365, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=366, col_offset=8), 'preferences', Store(), lineno=366, col_offset=8)], Name('prefs', Load(), lineno=366, col_offset=27), lineno=366, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=367, col_offset=8), '_url', Store(), lineno=367, col_offset=8)], Str('', lineno=367, col_offset=20), lineno=367, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=368, col_offset=8), '_urllist', Store(), lineno=368, col_offset=8)], List([], Load(), lineno=368, col_offset=24), lineno=368, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=369, col_offset=8), '_version', Store(), lineno=369, col_offset=8)], Str('', lineno=369, col_offset=24), lineno=369, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=370, col_offset=8), '_maintainer', Store(), lineno=370, col_offset=8)], Str('', lineno=370, col_offset=27), lineno=370, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=371, col_offset=8), '_description', Store(), lineno=371, col_offset=8)], Str('', lineno=371, col_offset=28), lineno=371, col_offset=8)], [], lineno=364, col_offset=4), FunctionDef('url', arguments([Name('self', Param(), lineno=374, col_offset=12)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=374, col_offset=26), '_url', Load(), lineno=374, col_offset=26), lineno=374, col_offset=19)], [], lineno=374, col_offset=4), FunctionDef('version', arguments([Name('self', Param(), lineno=375, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=375, col_offset=30), '_version', Load(), lineno=375, col_offset=30), lineno=375, col_offset=23)], [], lineno=375, col_offset=4), FunctionDef('maintainer', arguments([Name('self', Param(), lineno=376, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=376, col_offset=33), '_maintainer', Load(), lineno=376, col_offset=33), lineno=376, col_offset=26)], [], lineno=376, col_offset=4), FunctionDef('description', arguments([Name('self', Param(), lineno=377, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=377, col_offset=34), '_description', Load(), lineno=377, col_offset=34), lineno=377, col_offset=27)], [], lineno=377, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=379, col_offset=14)], None, None, []), [Expr(Str('Clean up', lineno=380, col_offset=8), lineno=380, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=381, col_offset=8), '_packages', Store(), lineno=381, col_offset=8)], List([], Load(), lineno=381, col_offset=25), lineno=381, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=382, col_offset=8), 'preferences', Store(), lineno=382, col_offset=8)], Name('None', Load(), lineno=382, col_offset=27), lineno=382, col_offset=8)], [], lineno=379, col_offset=4), FunctionDef('appendURL', arguments([Name('self', Param(), lineno=384, col_offset=18), Name('url', Param(), lineno=384, col_offset=24), Name('included', Param(), lineno=384, col_offset=29)], None, None, [Num(0, lineno=384, col_offset=38)]), [Expr(Str('Append packages from the database with the given URL.\n        Only the first database should specify included=0, so the\n        global information (maintainer, description) get stored.', lineno=387, col_offset=-1), lineno=387, col_offset=-1), If(Compare(Name('url', Load(), lineno=389, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=389, col_offset=18), '_urllist', Load(), lineno=389, col_offset=18)], lineno=389, col_offset=11), [Return(None, lineno=390, col_offset=12)], [], lineno=389, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=391, col_offset=8), '_urllist', Load(), lineno=391, col_offset=8), 'append', Load(), lineno=391, col_offset=8), [Name('url', Load(), lineno=391, col_offset=29)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Assign([Name('fp', Store(), lineno=392, col_offset=8)], Attribute(Call(Attribute(Name('urllib2', Load(), lineno=392, col_offset=13), 'urlopen', Load(), lineno=392, col_offset=13), [Name('url', Load(), lineno=392, col_offset=29)], [], None, None, lineno=392, col_offset=13), 'fp', Load(), lineno=392, col_offset=13), lineno=392, col_offset=8), Assign([Name('plistdata', Store(), lineno=393, col_offset=8)], Call(Attribute(Attribute(Name('plistlib', Load(), lineno=393, col_offset=20), 'Plist', Load(), lineno=393, col_offset=20), 'fromFile', Load(), lineno=393, col_offset=20), [Name('fp', Load(), lineno=393, col_offset=44)], [], None, None, lineno=393, col_offset=20), lineno=393, col_offset=8), If(Name('included', Load(), lineno=395, col_offset=11), [Assign([Name('version', Store(), lineno=396, col_offset=12)], Call(Attribute(Name('plistdata', Load(), lineno=396, col_offset=22), 'get', Load(), lineno=396, col_offset=22), [Str('Version', lineno=396, col_offset=36)], [], None, None, lineno=396, col_offset=22), lineno=396, col_offset=12), If(BoolOp(And(), [Name('version', Load(), lineno=397, col_offset=15), Compare(Name('version', Load(), lineno=397, col_offset=27), [Gt()], [Attribute(Name('self', Load(), lineno=397, col_offset=37), '_version', Load(), lineno=397, col_offset=37)], lineno=397, col_offset=27)], lineno=397, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=398, col_offset=16), 'stderr', Load(), lineno=398, col_offset=16), 'write', Load(), lineno=398, col_offset=16), [BinOp(Str('Warning: included database %s is for pimp version %s\n', lineno=398, col_offset=33), Mod(), Tuple([Name('url', Load(), lineno=399, col_offset=21), Name('version', Load(), lineno=399, col_offset=26)], Load(), lineno=399, col_offset=21), lineno=398, col_offset=33)], [], None, None, lineno=398, col_offset=16), lineno=398, col_offset=16)], [], lineno=397, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=401, col_offset=12), '_version', Store(), lineno=401, col_offset=12)], Call(Attribute(Name('plistdata', Load(), lineno=401, col_offset=28), 'get', Load(), lineno=401, col_offset=28), [Str('Version', lineno=401, col_offset=42)], [], None, None, lineno=401, col_offset=28), lineno=401, col_offset=12), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=402, col_offset=19), '_version', Load(), lineno=402, col_offset=19), lineno=402, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=403, col_offset=16), 'stderr', Load(), lineno=403, col_offset=16), 'write', Load(), lineno=403, col_offset=16), [Str('Warning: database has no Version information\n', lineno=403, col_offset=33)], [], None, None, lineno=403, col_offset=16), lineno=403, col_offset=16)], [If(Compare(Attribute(Name('self', Load(), lineno=404, col_offset=17), '_version', Load(), lineno=404, col_offset=17), [Gt()], [Name('PIMP_VERSION', Load(), lineno=404, col_offset=33)], lineno=404, col_offset=17), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=405, col_offset=16), 'stderr', Load(), lineno=405, col_offset=16), 'write', Load(), lineno=405, col_offset=16), [BinOp(Str('Warning: database version %s newer than pimp version %s\n', lineno=405, col_offset=33), Mod(), Tuple([Attribute(Name('self', Load(), lineno=406, col_offset=23), '_version', Load(), lineno=406, col_offset=23), Name('PIMP_VERSION', Load(), lineno=406, col_offset=38)], Load(), lineno=406, col_offset=23), lineno=405, col_offset=33)], [], None, None, lineno=405, col_offset=16), lineno=405, col_offset=16)], [], lineno=404, col_offset=17)], lineno=402, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=407, col_offset=12), '_maintainer', Store(), lineno=407, col_offset=12)], Call(Attribute(Name('plistdata', Load(), lineno=407, col_offset=31), 'get', Load(), lineno=407, col_offset=31), [Str('Maintainer', lineno=407, col_offset=45), Str('', lineno=407, col_offset=59)], [], None, None, lineno=407, col_offset=31), lineno=407, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=408, col_offset=12), '_description', Store(), lineno=408, col_offset=12)], Call(Attribute(Call(Attribute(Name('plistdata', Load(), lineno=408, col_offset=32), 'get', Load(), lineno=408, col_offset=32), [Str('Description', lineno=408, col_offset=46), Str('', lineno=408, col_offset=61)], [], None, None, lineno=408, col_offset=32), 'strip', Load(), lineno=408, col_offset=32), [], [], None, None, lineno=408, col_offset=32), lineno=408, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=409, col_offset=12), '_url', Store(), lineno=409, col_offset=12)], Name('url', Load(), lineno=409, col_offset=24), lineno=409, col_offset=12)], lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), '_appendPackages', Load(), lineno=410, col_offset=8), [Subscript(Name('plistdata', Load(), lineno=410, col_offset=29), Index(Str('Packages', lineno=410, col_offset=39)), Load(), lineno=410, col_offset=29), Name('url', Load(), lineno=410, col_offset=52)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Assign([Name('others', Store(), lineno=411, col_offset=8)], Call(Attribute(Name('plistdata', Load(), lineno=411, col_offset=17), 'get', Load(), lineno=411, col_offset=17), [Str('Include', lineno=411, col_offset=31), List([], Load(), lineno=411, col_offset=42)], [], None, None, lineno=411, col_offset=17), lineno=411, col_offset=8), For(Name('o', Store(), lineno=412, col_offset=12), Name('others', Load(), lineno=412, col_offset=17), [Assign([Name('o', Store(), lineno=413, col_offset=12)], Call(Attribute(Name('urllib', Load(), lineno=413, col_offset=16), 'basejoin', Load(), lineno=413, col_offset=16), [Name('url', Load(), lineno=413, col_offset=32), Name('o', Load(), lineno=413, col_offset=37)], [], None, None, lineno=413, col_offset=16), lineno=413, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=12), 'appendURL', Load(), lineno=414, col_offset=12), [Name('o', Load(), lineno=414, col_offset=27)], [keyword('included', Num(1, lineno=414, col_offset=39))], None, None, lineno=414, col_offset=12), lineno=414, col_offset=12)], [], lineno=412, col_offset=8)], [], lineno=384, col_offset=4), FunctionDef('_appendPackages', arguments([Name('self', Param(), lineno=416, col_offset=24), Name('packages', Param(), lineno=416, col_offset=30), Name('url', Param(), lineno=416, col_offset=40)], None, None, []), [Expr(Str('Given a list of dictionaries containing package\n        descriptions create the PimpPackage objects and append them\n        to our internal storage.', lineno=419, col_offset=-1), lineno=419, col_offset=-1), For(Name('p', Store(), lineno=421, col_offset=12), Name('packages', Load(), lineno=421, col_offset=17), [Assign([Name('p', Store(), lineno=422, col_offset=12)], Call(Name('dict', Load(), lineno=422, col_offset=16), [Name('p', Load(), lineno=422, col_offset=21)], [], None, None, lineno=422, col_offset=16), lineno=422, col_offset=12), If(Compare(Str('Download-URL', lineno=423, col_offset=15), [In()], [Name('p', Load(), lineno=423, col_offset=33)], lineno=423, col_offset=15), [Assign([Subscript(Name('p', Load(), lineno=424, col_offset=16), Index(Str('Download-URL', lineno=424, col_offset=18)), Store(), lineno=424, col_offset=16)], Call(Attribute(Name('urllib', Load(), lineno=424, col_offset=36), 'basejoin', Load(), lineno=424, col_offset=36), [Name('url', Load(), lineno=424, col_offset=52), Subscript(Name('p', Load(), lineno=424, col_offset=57), Index(Str('Download-URL', lineno=424, col_offset=59)), Load(), lineno=424, col_offset=57)], [], None, None, lineno=424, col_offset=36), lineno=424, col_offset=16)], [], lineno=423, col_offset=12), Assign([Name('flavor', Store(), lineno=425, col_offset=12)], Call(Attribute(Name('p', Load(), lineno=425, col_offset=21), 'get', Load(), lineno=425, col_offset=21), [Str('Flavor', lineno=425, col_offset=27)], [], None, None, lineno=425, col_offset=21), lineno=425, col_offset=12), If(Compare(Name('flavor', Load(), lineno=426, col_offset=15), [Eq()], [Str('source', lineno=426, col_offset=25)], lineno=426, col_offset=15), [Assign([Name('pkg', Store(), lineno=427, col_offset=16)], Call(Name('PimpPackage_source', Load(), lineno=427, col_offset=22), [Name('self', Load(), lineno=427, col_offset=41), Name('p', Load(), lineno=427, col_offset=47)], [], None, None, lineno=427, col_offset=22), lineno=427, col_offset=16)], [If(Compare(Name('flavor', Load(), lineno=428, col_offset=17), [Eq()], [Str('binary', lineno=428, col_offset=27)], lineno=428, col_offset=17), [Assign([Name('pkg', Store(), lineno=429, col_offset=16)], Call(Name('PimpPackage_binary', Load(), lineno=429, col_offset=22), [Name('self', Load(), lineno=429, col_offset=41), Name('p', Load(), lineno=429, col_offset=47)], [], None, None, lineno=429, col_offset=22), lineno=429, col_offset=16)], [If(Compare(Name('flavor', Load(), lineno=430, col_offset=17), [Eq()], [Str('installer', lineno=430, col_offset=27)], lineno=430, col_offset=17), [Assign([Name('pkg', Store(), lineno=431, col_offset=16)], Call(Name('PimpPackage_installer', Load(), lineno=431, col_offset=22), [Name('self', Load(), lineno=431, col_offset=44), Name('p', Load(), lineno=431, col_offset=50)], [], None, None, lineno=431, col_offset=22), lineno=431, col_offset=16)], [If(Compare(Name('flavor', Load(), lineno=432, col_offset=17), [Eq()], [Str('hidden', lineno=432, col_offset=27)], lineno=432, col_offset=17), [Assign([Name('pkg', Store(), lineno=433, col_offset=16)], Call(Name('PimpPackage_installer', Load(), lineno=433, col_offset=22), [Name('self', Load(), lineno=433, col_offset=44), Name('p', Load(), lineno=433, col_offset=50)], [], None, None, lineno=433, col_offset=22), lineno=433, col_offset=16)], [Assign([Name('pkg', Store(), lineno=435, col_offset=16)], Call(Name('PimpPackage', Load(), lineno=435, col_offset=22), [Name('self', Load(), lineno=435, col_offset=34), Call(Name('dict', Load(), lineno=435, col_offset=40), [Name('p', Load(), lineno=435, col_offset=45)], [], None, None, lineno=435, col_offset=40)], [], None, None, lineno=435, col_offset=22), lineno=435, col_offset=16)], lineno=432, col_offset=17)], lineno=430, col_offset=17)], lineno=428, col_offset=17)], lineno=426, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=436, col_offset=12), '_packages', Load(), lineno=436, col_offset=12), 'append', Load(), lineno=436, col_offset=12), [Name('pkg', Load(), lineno=436, col_offset=34)], [], None, None, lineno=436, col_offset=12), lineno=436, col_offset=12)], [], lineno=421, col_offset=8)], [], lineno=416, col_offset=4), FunctionDef('list', arguments([Name('self', Param(), lineno=438, col_offset=13)], None, None, []), [Expr(Str('Return a list of all PimpPackage objects in the database.', lineno=439, col_offset=8), lineno=439, col_offset=8), Return(Attribute(Name('self', Load(), lineno=441, col_offset=15), '_packages', Load(), lineno=441, col_offset=15), lineno=441, col_offset=8)], [], lineno=438, col_offset=4), FunctionDef('listnames', arguments([Name('self', Param(), lineno=443, col_offset=18)], None, None, []), [Expr(Str('Return a list of names of all packages in the database.', lineno=444, col_offset=8), lineno=444, col_offset=8), Assign([Name('rv', Store(), lineno=446, col_offset=8)], List([], Load(), lineno=446, col_offset=13), lineno=446, col_offset=8), For(Name('pkg', Store(), lineno=447, col_offset=12), Attribute(Name('self', Load(), lineno=447, col_offset=19), '_packages', Load(), lineno=447, col_offset=19), [Expr(Call(Attribute(Name('rv', Load(), lineno=448, col_offset=12), 'append', Load(), lineno=448, col_offset=12), [Call(Attribute(Name('pkg', Load(), lineno=448, col_offset=22), 'fullname', Load(), lineno=448, col_offset=22), [], [], None, None, lineno=448, col_offset=22)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=12)], [], lineno=447, col_offset=8), Expr(Call(Attribute(Name('rv', Load(), lineno=449, col_offset=8), 'sort', Load(), lineno=449, col_offset=8), [], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Return(Name('rv', Load(), lineno=450, col_offset=15), lineno=450, col_offset=8)], [], lineno=443, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=452, col_offset=13), Name('pathOrFile', Param(), lineno=452, col_offset=19)], None, None, []), [Expr(Str('Dump the contents of the database to an XML .plist file.\n\n        The file can be passed as either a file object or a pathname.\n        All data, including included databases, is dumped.', lineno=456, col_offset=-1), lineno=456, col_offset=-1), Assign([Name('packages', Store(), lineno=458, col_offset=8)], List([], Load(), lineno=458, col_offset=19), lineno=458, col_offset=8), For(Name('pkg', Store(), lineno=459, col_offset=12), Attribute(Name('self', Load(), lineno=459, col_offset=19), '_packages', Load(), lineno=459, col_offset=19), [Expr(Call(Attribute(Name('packages', Load(), lineno=460, col_offset=12), 'append', Load(), lineno=460, col_offset=12), [Call(Attribute(Name('pkg', Load(), lineno=460, col_offset=28), 'dump', Load(), lineno=460, col_offset=28), [], [], None, None, lineno=460, col_offset=28)], [], None, None, lineno=460, col_offset=12), lineno=460, col_offset=12)], [], lineno=459, col_offset=8), Assign([Name('plistdata', Store(), lineno=461, col_offset=8)], Dict([Str('Version', lineno=462, col_offset=12), Str('Maintainer', lineno=463, col_offset=12), Str('Description', lineno=464, col_offset=12), Str('Packages', lineno=465, col_offset=12)], [Attribute(Name('self', Load(), lineno=462, col_offset=23), '_version', Load(), lineno=462, col_offset=23), Attribute(Name('self', Load(), lineno=463, col_offset=26), '_maintainer', Load(), lineno=463, col_offset=26), Attribute(Name('self', Load(), lineno=464, col_offset=27), '_description', Load(), lineno=464, col_offset=27), Name('packages', Load(), lineno=465, col_offset=24)], lineno=461, col_offset=20), lineno=461, col_offset=8), Assign([Name('plist', Store(), lineno=467, col_offset=8)], Call(Attribute(Name('plistlib', Load(), lineno=467, col_offset=16), 'Plist', Load(), lineno=467, col_offset=16), [], [], None, Name('plistdata', Load(), lineno=467, col_offset=33), lineno=467, col_offset=16), lineno=467, col_offset=8), Expr(Call(Attribute(Name('plist', Load(), lineno=468, col_offset=8), 'write', Load(), lineno=468, col_offset=8), [Name('pathOrFile', Load(), lineno=468, col_offset=20)], [], None, None, lineno=468, col_offset=8), lineno=468, col_offset=8)], [], lineno=452, col_offset=4), FunctionDef('find', arguments([Name('self', Param(), lineno=470, col_offset=13), Name('ident', Param(), lineno=470, col_offset=19)], None, None, []), [Expr(Str("Find a package. The package can be specified by name\n        or as a dictionary with name, version and flavor entries.\n\n        Only name is obligatory. If there are multiple matches the\n        best one (higher version number, flavors ordered according to\n        users' preference) is returned.", lineno=476, col_offset=-1), lineno=476, col_offset=-1), If(Compare(Call(Name('type', Load(), lineno=478, col_offset=11), [Name('ident', Load(), lineno=478, col_offset=16)], [], None, None, lineno=478, col_offset=11), [Eq()], [Name('str', Load(), lineno=478, col_offset=26)], lineno=478, col_offset=11), [If(BoolOp(And(), [Compare(Subscript(Name('ident', Load(), lineno=480, col_offset=15), Index(Num(0, lineno=480, col_offset=21)), Load(), lineno=480, col_offset=15), [Eq()], [Str('(', lineno=480, col_offset=27)], lineno=480, col_offset=15), Compare(Subscript(Name('ident', Load(), lineno=480, col_offset=35), Index(Num(-1, lineno=480, col_offset=42)), Load(), lineno=480, col_offset=35), [Eq()], [Str(')', lineno=480, col_offset=48)], lineno=480, col_offset=35)], lineno=480, col_offset=15), [Assign([Name('ident', Store(), lineno=481, col_offset=16)], Subscript(Name('ident', Load(), lineno=481, col_offset=24), Slice(Num(1, lineno=481, col_offset=30), Num(-1, lineno=481, col_offset=33), None), Load(), lineno=481, col_offset=24), lineno=481, col_offset=16)], [], lineno=480, col_offset=12), Assign([Name('fields', Store(), lineno=483, col_offset=12)], Call(Attribute(Name('ident', Load(), lineno=483, col_offset=21), 'split', Load(), lineno=483, col_offset=21), [Str('-', lineno=483, col_offset=33)], [], None, None, lineno=483, col_offset=21), lineno=483, col_offset=12), If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=484, col_offset=15), [Name('fields', Load(), lineno=484, col_offset=19)], [], None, None, lineno=484, col_offset=15), [Lt()], [Num(1, lineno=484, col_offset=29)], lineno=484, col_offset=15), Compare(Call(Name('len', Load(), lineno=484, col_offset=34), [Name('fields', Load(), lineno=484, col_offset=38)], [], None, None, lineno=484, col_offset=34), [Gt()], [Num(3, lineno=484, col_offset=48)], lineno=484, col_offset=34)], lineno=484, col_offset=15), [Return(Name('None', Load(), lineno=485, col_offset=23), lineno=485, col_offset=16)], [], lineno=484, col_offset=12), Assign([Name('name', Store(), lineno=486, col_offset=12)], Subscript(Name('fields', Load(), lineno=486, col_offset=19), Index(Num(0, lineno=486, col_offset=26)), Load(), lineno=486, col_offset=19), lineno=486, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=487, col_offset=15), [Name('fields', Load(), lineno=487, col_offset=19)], [], None, None, lineno=487, col_offset=15), [Gt()], [Num(1, lineno=487, col_offset=29)], lineno=487, col_offset=15), [Assign([Name('version', Store(), lineno=488, col_offset=16)], Subscript(Name('fields', Load(), lineno=488, col_offset=26), Index(Num(1, lineno=488, col_offset=33)), Load(), lineno=488, col_offset=26), lineno=488, col_offset=16)], [Assign([Name('version', Store(), lineno=490, col_offset=16)], Name('None', Load(), lineno=490, col_offset=26), lineno=490, col_offset=16)], lineno=487, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=491, col_offset=15), [Name('fields', Load(), lineno=491, col_offset=19)], [], None, None, lineno=491, col_offset=15), [Gt()], [Num(2, lineno=491, col_offset=29)], lineno=491, col_offset=15), [Assign([Name('flavor', Store(), lineno=492, col_offset=16)], Subscript(Name('fields', Load(), lineno=492, col_offset=25), Index(Num(2, lineno=492, col_offset=32)), Load(), lineno=492, col_offset=25), lineno=492, col_offset=16)], [Assign([Name('flavor', Store(), lineno=494, col_offset=16)], Name('None', Load(), lineno=494, col_offset=25), lineno=494, col_offset=16)], lineno=491, col_offset=12)], [Assign([Name('name', Store(), lineno=496, col_offset=12)], Subscript(Name('ident', Load(), lineno=496, col_offset=19), Index(Str('Name', lineno=496, col_offset=25)), Load(), lineno=496, col_offset=19), lineno=496, col_offset=12), Assign([Name('version', Store(), lineno=497, col_offset=12)], Call(Attribute(Name('ident', Load(), lineno=497, col_offset=22), 'get', Load(), lineno=497, col_offset=22), [Str('Version', lineno=497, col_offset=32)], [], None, None, lineno=497, col_offset=22), lineno=497, col_offset=12), Assign([Name('flavor', Store(), lineno=498, col_offset=12)], Call(Attribute(Name('ident', Load(), lineno=498, col_offset=21), 'get', Load(), lineno=498, col_offset=21), [Str('Flavor', lineno=498, col_offset=31)], [], None, None, lineno=498, col_offset=21), lineno=498, col_offset=12)], lineno=478, col_offset=8), Assign([Name('found', Store(), lineno=499, col_offset=8)], Name('None', Load(), lineno=499, col_offset=16), lineno=499, col_offset=8), For(Name('p', Store(), lineno=500, col_offset=12), Attribute(Name('self', Load(), lineno=500, col_offset=17), '_packages', Load(), lineno=500, col_offset=17), [If(BoolOp(And(), [Compare(Name('name', Load(), lineno=501, col_offset=15), [Eq()], [Call(Attribute(Name('p', Load(), lineno=501, col_offset=23), 'name', Load(), lineno=501, col_offset=23), [], [], None, None, lineno=501, col_offset=23)], lineno=501, col_offset=15), BoolOp(Or(), [UnaryOp(Not(), Name('version', Load(), lineno=502, col_offset=25), lineno=502, col_offset=21), Compare(Name('version', Load(), lineno=502, col_offset=36), [Eq()], [Call(Attribute(Name('p', Load(), lineno=502, col_offset=47), 'version', Load(), lineno=502, col_offset=47), [], [], None, None, lineno=502, col_offset=47)], lineno=502, col_offset=36)], lineno=502, col_offset=21), BoolOp(Or(), [UnaryOp(Not(), Name('flavor', Load(), lineno=503, col_offset=25), lineno=503, col_offset=21), Compare(Name('flavor', Load(), lineno=503, col_offset=35), [Eq()], [Call(Attribute(Name('p', Load(), lineno=503, col_offset=45), 'flavor', Load(), lineno=503, col_offset=45), [], [], None, None, lineno=503, col_offset=45)], lineno=503, col_offset=35)], lineno=503, col_offset=21)], lineno=501, col_offset=15), [If(BoolOp(Or(), [UnaryOp(Not(), Name('found', Load(), lineno=504, col_offset=23), lineno=504, col_offset=19), Compare(Name('found', Load(), lineno=504, col_offset=32), [Lt()], [Name('p', Load(), lineno=504, col_offset=40)], lineno=504, col_offset=32)], lineno=504, col_offset=19), [Assign([Name('found', Store(), lineno=505, col_offset=20)], Name('p', Load(), lineno=505, col_offset=28), lineno=505, col_offset=20)], [], lineno=504, col_offset=16)], [], lineno=501, col_offset=12)], [], lineno=500, col_offset=8), Return(Name('found', Load(), lineno=506, col_offset=15), lineno=506, col_offset=8)], [], lineno=470, col_offset=4)], [], lineno=358, col_offset=0), Assign([Name('ALLOWED_KEYS', Store(), lineno=508, col_offset=0)], List([Str('Name', lineno=509, col_offset=4), Str('Version', lineno=510, col_offset=4), Str('Flavor', lineno=511, col_offset=4), Str('Description', lineno=512, col_offset=4), Str('Home-page', lineno=513, col_offset=4), Str('Download-URL', lineno=514, col_offset=4), Str('Install-test', lineno=515, col_offset=4), Str('Install-command', lineno=516, col_offset=4), Str('Pre-install-command', lineno=517, col_offset=4), Str('Post-install-command', lineno=518, col_offset=4), Str('Prerequisites', lineno=519, col_offset=4), Str('MD5Sum', lineno=520, col_offset=4), Str('User-install-skips', lineno=521, col_offset=4), Str('Systemwide-only', lineno=522, col_offset=4)], Load(), lineno=508, col_offset=15), lineno=508, col_offset=0), ClassDef('PimpPackage', [], [Expr(Str('Class representing a single package.', lineno=526, col_offset=4), lineno=526, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=528, col_offset=17), Name('db', Param(), lineno=528, col_offset=23), Name('plistdata', Param(), lineno=528, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=529, col_offset=8), '_db', Store(), lineno=529, col_offset=8)], Name('db', Load(), lineno=529, col_offset=19), lineno=529, col_offset=8), Assign([Name('name', Store(), lineno=530, col_offset=8)], Subscript(Name('plistdata', Load(), lineno=530, col_offset=15), Index(Str('Name', lineno=530, col_offset=25)), Load(), lineno=530, col_offset=15), lineno=530, col_offset=8), For(Name('k', Store(), lineno=531, col_offset=12), Call(Attribute(Name('plistdata', Load(), lineno=531, col_offset=17), 'keys', Load(), lineno=531, col_offset=17), [], [], None, None, lineno=531, col_offset=17), [If(UnaryOp(Not(), Compare(Name('k', Load(), lineno=532, col_offset=19), [In()], [Name('ALLOWED_KEYS', Load(), lineno=532, col_offset=24)], lineno=532, col_offset=19), lineno=532, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=533, col_offset=16), 'stderr', Load(), lineno=533, col_offset=16), 'write', Load(), lineno=533, col_offset=16), [BinOp(Str('Warning: %s: unknown key %s\n', lineno=533, col_offset=33), Mod(), Tuple([Name('name', Load(), lineno=533, col_offset=68), Name('k', Load(), lineno=533, col_offset=74)], Load(), lineno=533, col_offset=68), lineno=533, col_offset=33)], [], None, None, lineno=533, col_offset=16), lineno=533, col_offset=16)], [], lineno=532, col_offset=12)], [], lineno=531, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=534, col_offset=8), '_dict', Store(), lineno=534, col_offset=8)], Name('plistdata', Load(), lineno=534, col_offset=21), lineno=534, col_offset=8)], [], lineno=528, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=536, col_offset=20), Name('key', Param(), lineno=536, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=537, col_offset=15), '_dict', Load(), lineno=537, col_offset=15), Index(Name('key', Load(), lineno=537, col_offset=26)), Load(), lineno=537, col_offset=15), lineno=537, col_offset=8)], [], lineno=536, col_offset=4), FunctionDef('name', arguments([Name('self', Param(), lineno=539, col_offset=13)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=539, col_offset=27), '_dict', Load(), lineno=539, col_offset=27), Index(Str('Name', lineno=539, col_offset=38)), Load(), lineno=539, col_offset=27), lineno=539, col_offset=20)], [], lineno=539, col_offset=4), FunctionDef('version', arguments([Name('self', Param(), lineno=540, col_offset=16)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=540, col_offset=30), '_dict', Load(), lineno=540, col_offset=30), 'get', Load(), lineno=540, col_offset=30), [Str('Version', lineno=540, col_offset=45)], [], None, None, lineno=540, col_offset=30), lineno=540, col_offset=23)], [], lineno=540, col_offset=4), FunctionDef('flavor', arguments([Name('self', Param(), lineno=541, col_offset=15)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=541, col_offset=29), '_dict', Load(), lineno=541, col_offset=29), 'get', Load(), lineno=541, col_offset=29), [Str('Flavor', lineno=541, col_offset=44)], [], None, None, lineno=541, col_offset=29), lineno=541, col_offset=22)], [], lineno=541, col_offset=4), FunctionDef('description', arguments([Name('self', Param(), lineno=542, col_offset=20)], None, None, []), [Return(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=542, col_offset=34), '_dict', Load(), lineno=542, col_offset=34), Index(Str('Description', lineno=542, col_offset=45)), Load(), lineno=542, col_offset=34), 'strip', Load(), lineno=542, col_offset=34), [], [], None, None, lineno=542, col_offset=34), lineno=542, col_offset=27)], [], lineno=542, col_offset=4), FunctionDef('shortdescription', arguments([Name('self', Param(), lineno=543, col_offset=25)], None, None, []), [Return(Subscript(Call(Attribute(Call(Attribute(Name('self', Load(), lineno=543, col_offset=39), 'description', Load(), lineno=543, col_offset=39), [], [], None, None, lineno=543, col_offset=39), 'splitlines', Load(), lineno=543, col_offset=39), [], [], None, None, lineno=543, col_offset=39), Index(Num(0, lineno=543, col_offset=71)), Load(), lineno=543, col_offset=39), lineno=543, col_offset=32)], [], lineno=543, col_offset=4), FunctionDef('homepage', arguments([Name('self', Param(), lineno=544, col_offset=17)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=544, col_offset=31), '_dict', Load(), lineno=544, col_offset=31), 'get', Load(), lineno=544, col_offset=31), [Str('Home-page', lineno=544, col_offset=46)], [], None, None, lineno=544, col_offset=31), lineno=544, col_offset=24)], [], lineno=544, col_offset=4), FunctionDef('downloadURL', arguments([Name('self', Param(), lineno=545, col_offset=20)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=545, col_offset=34), '_dict', Load(), lineno=545, col_offset=34), 'get', Load(), lineno=545, col_offset=34), [Str('Download-URL', lineno=545, col_offset=49)], [], None, None, lineno=545, col_offset=34), lineno=545, col_offset=27)], [], lineno=545, col_offset=4), FunctionDef('systemwideOnly', arguments([Name('self', Param(), lineno=546, col_offset=23)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=546, col_offset=37), '_dict', Load(), lineno=546, col_offset=37), 'get', Load(), lineno=546, col_offset=37), [Str('Systemwide-only', lineno=546, col_offset=52)], [], None, None, lineno=546, col_offset=37), lineno=546, col_offset=30)], [], lineno=546, col_offset=4), FunctionDef('fullname', arguments([Name('self', Param(), lineno=548, col_offset=17)], None, None, []), [Expr(Str('Return the full name "name-version-flavor" of a package.\n\n        If the package is a pseudo-package, something that cannot be\n        installed through pimp, return the name in (parentheses).', lineno=552, col_offset=-1), lineno=552, col_offset=-1), Assign([Name('rv', Store(), lineno=554, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=554, col_offset=13), '_dict', Load(), lineno=554, col_offset=13), Index(Str('Name', lineno=554, col_offset=24)), Load(), lineno=554, col_offset=13), lineno=554, col_offset=8), If(Compare(Str('Version', lineno=555, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=555, col_offset=24), '_dict', Load(), lineno=555, col_offset=24)], lineno=555, col_offset=11), [Assign([Name('rv', Store(), lineno=556, col_offset=12)], BinOp(Name('rv', Load(), lineno=556, col_offset=17), Add(), BinOp(Str('-%s', lineno=556, col_offset=22), Mod(), Subscript(Attribute(Name('self', Load(), lineno=556, col_offset=30), '_dict', Load(), lineno=556, col_offset=30), Index(Str('Version', lineno=556, col_offset=41)), Load(), lineno=556, col_offset=30), lineno=556, col_offset=22), lineno=556, col_offset=17), lineno=556, col_offset=12)], [], lineno=555, col_offset=8), If(Compare(Str('Flavor', lineno=557, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=557, col_offset=23), '_dict', Load(), lineno=557, col_offset=23)], lineno=557, col_offset=11), [Assign([Name('rv', Store(), lineno=558, col_offset=12)], BinOp(Name('rv', Load(), lineno=558, col_offset=17), Add(), BinOp(Str('-%s', lineno=558, col_offset=22), Mod(), Subscript(Attribute(Name('self', Load(), lineno=558, col_offset=30), '_dict', Load(), lineno=558, col_offset=30), Index(Str('Flavor', lineno=558, col_offset=41)), Load(), lineno=558, col_offset=30), lineno=558, col_offset=22), lineno=558, col_offset=17), lineno=558, col_offset=12)], [], lineno=557, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=559, col_offset=11), '_dict', Load(), lineno=559, col_offset=11), 'get', Load(), lineno=559, col_offset=11), [Str('Flavor', lineno=559, col_offset=26)], [], None, None, lineno=559, col_offset=11), [Eq()], [Str('hidden', lineno=559, col_offset=39)], lineno=559, col_offset=11), [Assign([Name('rv', Store(), lineno=561, col_offset=12)], BinOp(Str('(%s)', lineno=561, col_offset=17), Mod(), Name('rv', Load(), lineno=561, col_offset=26), lineno=561, col_offset=17), lineno=561, col_offset=12)], [], lineno=559, col_offset=8), Return(Name('rv', Load(), lineno=562, col_offset=15), lineno=562, col_offset=8)], [], lineno=548, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=564, col_offset=13)], None, None, []), [Expr(Str('Return a dict object containing the information on the package.', lineno=565, col_offset=8), lineno=565, col_offset=8), Return(Attribute(Name('self', Load(), lineno=566, col_offset=15), '_dict', Load(), lineno=566, col_offset=15), lineno=566, col_offset=8)], [], lineno=564, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=568, col_offset=16), Name('other', Param(), lineno=568, col_offset=22)], None, None, []), [Expr(Str('Compare two packages, where the "better" package sorts lower.', lineno=569, col_offset=8), lineno=569, col_offset=8), If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=571, col_offset=15), [Name('other', Load(), lineno=571, col_offset=26), Name('PimpPackage', Load(), lineno=571, col_offset=33)], [], None, None, lineno=571, col_offset=15), lineno=571, col_offset=11), [Return(Call(Name('cmp', Load(), lineno=572, col_offset=19), [Call(Name('id', Load(), lineno=572, col_offset=23), [Name('self', Load(), lineno=572, col_offset=26)], [], None, None, lineno=572, col_offset=23), Call(Name('id', Load(), lineno=572, col_offset=33), [Name('other', Load(), lineno=572, col_offset=36)], [], None, None, lineno=572, col_offset=33)], [], None, None, lineno=572, col_offset=19), lineno=572, col_offset=12)], [], lineno=571, col_offset=8), If(Compare(Call(Attribute(Name('self', Load(), lineno=573, col_offset=11), 'name', Load(), lineno=573, col_offset=11), [], [], None, None, lineno=573, col_offset=11), [NotEq()], [Call(Attribute(Name('other', Load(), lineno=573, col_offset=26), 'name', Load(), lineno=573, col_offset=26), [], [], None, None, lineno=573, col_offset=26)], lineno=573, col_offset=11), [Return(Call(Name('cmp', Load(), lineno=574, col_offset=19), [Call(Attribute(Name('self', Load(), lineno=574, col_offset=23), 'name', Load(), lineno=574, col_offset=23), [], [], None, None, lineno=574, col_offset=23), Call(Attribute(Name('other', Load(), lineno=574, col_offset=36), 'name', Load(), lineno=574, col_offset=36), [], [], None, None, lineno=574, col_offset=36)], [], None, None, lineno=574, col_offset=19), lineno=574, col_offset=12)], [], lineno=573, col_offset=8), If(Compare(Call(Attribute(Name('self', Load(), lineno=575, col_offset=11), 'version', Load(), lineno=575, col_offset=11), [], [], None, None, lineno=575, col_offset=11), [NotEq()], [Call(Attribute(Name('other', Load(), lineno=575, col_offset=29), 'version', Load(), lineno=575, col_offset=29), [], [], None, None, lineno=575, col_offset=29)], lineno=575, col_offset=11), [Return(UnaryOp(USub(), Call(Name('cmp', Load(), lineno=576, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=576, col_offset=24), 'version', Load(), lineno=576, col_offset=24), [], [], None, None, lineno=576, col_offset=24), Call(Attribute(Name('other', Load(), lineno=576, col_offset=40), 'version', Load(), lineno=576, col_offset=40), [], [], None, None, lineno=576, col_offset=40)], [], None, None, lineno=576, col_offset=20), lineno=576, col_offset=19), lineno=576, col_offset=12)], [], lineno=575, col_offset=8), Return(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=577, col_offset=15), '_db', Load(), lineno=577, col_offset=15), 'preferences', Load(), lineno=577, col_offset=15), 'compareFlavors', Load(), lineno=577, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=577, col_offset=51), 'flavor', Load(), lineno=577, col_offset=51), [], [], None, None, lineno=577, col_offset=51), Call(Attribute(Name('other', Load(), lineno=577, col_offset=66), 'flavor', Load(), lineno=577, col_offset=66), [], [], None, None, lineno=577, col_offset=66)], [], None, None, lineno=577, col_offset=15), lineno=577, col_offset=8)], [], lineno=568, col_offset=4), FunctionDef('installed', arguments([Name('self', Param(), lineno=579, col_offset=18)], None, None, []), [Expr(Str('Test wheter the package is installed.\n\n        Returns two values: a status indicator which is one of\n        "yes", "no", "old" (an older version is installed) or "bad"\n        (something went wrong during the install test) and a human\n        readable string which may contain more details.', lineno=585, col_offset=-1), lineno=585, col_offset=-1), Assign([Name('namespace', Store(), lineno=587, col_offset=8)], Dict([Str('NotInstalled', lineno=588, col_offset=12), Str('OldInstalled', lineno=589, col_offset=12), Str('BadInstalled', lineno=590, col_offset=12), Str('os', lineno=591, col_offset=12), Str('sys', lineno=592, col_offset=12)], [Name('_scriptExc_NotInstalled', Load(), lineno=588, col_offset=28), Name('_scriptExc_OldInstalled', Load(), lineno=589, col_offset=28), Name('_scriptExc_BadInstalled', Load(), lineno=590, col_offset=28), Name('os', Load(), lineno=591, col_offset=18), Name('sys', Load(), lineno=592, col_offset=19)], lineno=587, col_offset=20), lineno=587, col_offset=8), Assign([Name('installTest', Store(), lineno=594, col_offset=8)], BinOp(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=594, col_offset=22), '_dict', Load(), lineno=594, col_offset=22), Index(Str('Install-test', lineno=594, col_offset=33)), Load(), lineno=594, col_offset=22), 'strip', Load(), lineno=594, col_offset=22), [], [], None, None, lineno=594, col_offset=22), Add(), Str('\n', lineno=594, col_offset=59), lineno=594, col_offset=22), lineno=594, col_offset=8), TryExcept([Exec(Name('installTest', Load(), lineno=596, col_offset=17), Name('namespace', Load(), lineno=596, col_offset=32), None, lineno=596, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=597, col_offset=15), Name('arg', Store(), lineno=597, col_offset=28), [Return(Tuple([Str('no', lineno=598, col_offset=19), Call(Name('str', Load(), lineno=598, col_offset=25), [Name('arg', Load(), lineno=598, col_offset=29)], [], None, None, lineno=598, col_offset=25)], Load(), lineno=598, col_offset=19), lineno=598, col_offset=12)], lineno=597, col_offset=8), ExceptHandler(Name('_scriptExc_NotInstalled', Load(), lineno=599, col_offset=15), Name('arg', Store(), lineno=599, col_offset=40), [Return(Tuple([Str('no', lineno=600, col_offset=19), Call(Name('str', Load(), lineno=600, col_offset=25), [Name('arg', Load(), lineno=600, col_offset=29)], [], None, None, lineno=600, col_offset=25)], Load(), lineno=600, col_offset=19), lineno=600, col_offset=12)], lineno=599, col_offset=8), ExceptHandler(Name('_scriptExc_OldInstalled', Load(), lineno=601, col_offset=15), Name('arg', Store(), lineno=601, col_offset=40), [Return(Tuple([Str('old', lineno=602, col_offset=19), Call(Name('str', Load(), lineno=602, col_offset=26), [Name('arg', Load(), lineno=602, col_offset=30)], [], None, None, lineno=602, col_offset=26)], Load(), lineno=602, col_offset=19), lineno=602, col_offset=12)], lineno=601, col_offset=8), ExceptHandler(Name('_scriptExc_BadInstalled', Load(), lineno=603, col_offset=15), Name('arg', Store(), lineno=603, col_offset=40), [Return(Tuple([Str('bad', lineno=604, col_offset=19), Call(Name('str', Load(), lineno=604, col_offset=26), [Name('arg', Load(), lineno=604, col_offset=30)], [], None, None, lineno=604, col_offset=26)], Load(), lineno=604, col_offset=19), lineno=604, col_offset=12)], lineno=603, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=606, col_offset=12), 'stderr', Load(), lineno=606, col_offset=12), 'write', Load(), lineno=606, col_offset=12), [Str('-------------------------------------\n', lineno=606, col_offset=29)], [], None, None, lineno=606, col_offset=12), lineno=606, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=607, col_offset=12), 'stderr', Load(), lineno=607, col_offset=12), 'write', Load(), lineno=607, col_offset=12), [BinOp(Str('---- %s: install test got exception\n', lineno=607, col_offset=29), Mod(), Call(Attribute(Name('self', Load(), lineno=607, col_offset=71), 'fullname', Load(), lineno=607, col_offset=71), [], [], None, None, lineno=607, col_offset=71), lineno=607, col_offset=29)], [], None, None, lineno=607, col_offset=12), lineno=607, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=608, col_offset=12), 'stderr', Load(), lineno=608, col_offset=12), 'write', Load(), lineno=608, col_offset=12), [Str('---- source:\n', lineno=608, col_offset=29)], [], None, None, lineno=608, col_offset=12), lineno=608, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=609, col_offset=12), 'stderr', Load(), lineno=609, col_offset=12), 'write', Load(), lineno=609, col_offset=12), [Name('installTest', Load(), lineno=609, col_offset=29)], [], None, None, lineno=609, col_offset=12), lineno=609, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=610, col_offset=12), 'stderr', Load(), lineno=610, col_offset=12), 'write', Load(), lineno=610, col_offset=12), [Str('---- exception:\n', lineno=610, col_offset=29)], [], None, None, lineno=610, col_offset=12), lineno=610, col_offset=12), Import([alias('traceback', None)], lineno=611, col_offset=12), Expr(Call(Attribute(Name('traceback', Load(), lineno=612, col_offset=12), 'print_exc', Load(), lineno=612, col_offset=12), [], [keyword('file', Attribute(Name('sys', Load(), lineno=612, col_offset=37), 'stderr', Load(), lineno=612, col_offset=37))], None, None, lineno=612, col_offset=12), lineno=612, col_offset=12), If(Attribute(Attribute(Name('self', Load(), lineno=613, col_offset=15), '_db', Load(), lineno=613, col_offset=15), '_maintainer', Load(), lineno=613, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=614, col_offset=16), 'stderr', Load(), lineno=614, col_offset=16), 'write', Load(), lineno=614, col_offset=16), [BinOp(Str('---- Please copy this and mail to %s\n', lineno=614, col_offset=33), Mod(), Attribute(Attribute(Name('self', Load(), lineno=614, col_offset=76), '_db', Load(), lineno=614, col_offset=76), '_maintainer', Load(), lineno=614, col_offset=76), lineno=614, col_offset=33)], [], None, None, lineno=614, col_offset=16), lineno=614, col_offset=16)], [], lineno=613, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=615, col_offset=12), 'stderr', Load(), lineno=615, col_offset=12), 'write', Load(), lineno=615, col_offset=12), [Str('-------------------------------------\n', lineno=615, col_offset=29)], [], None, None, lineno=615, col_offset=12), lineno=615, col_offset=12), Return(Tuple([Str('bad', lineno=616, col_offset=19), Str('Package install test got exception', lineno=616, col_offset=26)], Load(), lineno=616, col_offset=19), lineno=616, col_offset=12)], lineno=605, col_offset=8)], [], lineno=595, col_offset=8), Return(Tuple([Str('yes', lineno=617, col_offset=15), Str('', lineno=617, col_offset=22)], Load(), lineno=617, col_offset=15), lineno=617, col_offset=8)], [], lineno=579, col_offset=4), FunctionDef('prerequisites', arguments([Name('self', Param(), lineno=619, col_offset=22)], None, None, []), [Expr(Str("Return a list of prerequisites for this package.\n\n        The list contains 2-tuples, of which the first item is either\n        a PimpPackage object or None, and the second is a descriptive\n        string. The first item can be None if this package depends on\n        something that isn't pimp-installable, in which case the descriptive\n        string should tell the user what to do.", lineno=626, col_offset=-1), lineno=626, col_offset=-1), Assign([Name('rv', Store(), lineno=628, col_offset=8)], List([], Load(), lineno=628, col_offset=13), lineno=628, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=629, col_offset=15), '_dict', Load(), lineno=629, col_offset=15), 'get', Load(), lineno=629, col_offset=15), [Str('Download-URL', lineno=629, col_offset=30)], [], None, None, lineno=629, col_offset=15), lineno=629, col_offset=11), [Assign([Tuple([Name('status', Store(), lineno=632, col_offset=12), Name('_', Store(), lineno=632, col_offset=20)], Store(), lineno=632, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=632, col_offset=25), 'installed', Load(), lineno=632, col_offset=25), [], [], None, None, lineno=632, col_offset=25), lineno=632, col_offset=12), If(Compare(Name('status', Load(), lineno=633, col_offset=15), [Eq()], [Str('yes', lineno=633, col_offset=25)], lineno=633, col_offset=15), [Return(List([], Load(), lineno=634, col_offset=23), lineno=634, col_offset=16)], [], lineno=633, col_offset=12), Return(List([Tuple([Name('None', Load(), lineno=635, col_offset=21), BinOp(Str('Package %s cannot be installed automatically, see the description', lineno=636, col_offset=16), Mod(), Call(Attribute(Name('self', Load(), lineno=637, col_offset=20), 'fullname', Load(), lineno=637, col_offset=20), [], [], None, None, lineno=637, col_offset=20), lineno=636, col_offset=16)], Load(), lineno=635, col_offset=21)], Load(), lineno=635, col_offset=19), lineno=635, col_offset=12)], [], lineno=629, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('self', Load(), lineno=638, col_offset=11), 'systemwideOnly', Load(), lineno=638, col_offset=11), [], [], None, None, lineno=638, col_offset=11), Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=638, col_offset=37), '_db', Load(), lineno=638, col_offset=37), 'preferences', Load(), lineno=638, col_offset=37), 'isUserInstall', Load(), lineno=638, col_offset=37), [], [], None, None, lineno=638, col_offset=37)], lineno=638, col_offset=11), [Return(List([Tuple([Name('None', Load(), lineno=639, col_offset=21), BinOp(Str('Package %s can only be installed system-wide', lineno=640, col_offset=16), Mod(), Call(Attribute(Name('self', Load(), lineno=641, col_offset=20), 'fullname', Load(), lineno=641, col_offset=20), [], [], None, None, lineno=641, col_offset=20), lineno=640, col_offset=16)], Load(), lineno=639, col_offset=21)], Load(), lineno=639, col_offset=19), lineno=639, col_offset=12)], [], lineno=638, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=642, col_offset=15), '_dict', Load(), lineno=642, col_offset=15), 'get', Load(), lineno=642, col_offset=15), [Str('Prerequisites', lineno=642, col_offset=30)], [], None, None, lineno=642, col_offset=15), lineno=642, col_offset=11), [Return(List([], Load(), lineno=643, col_offset=19), lineno=643, col_offset=12)], [], lineno=642, col_offset=8), For(Name('item', Store(), lineno=644, col_offset=12), Subscript(Attribute(Name('self', Load(), lineno=644, col_offset=20), '_dict', Load(), lineno=644, col_offset=20), Index(Str('Prerequisites', lineno=644, col_offset=31)), Load(), lineno=644, col_offset=20), [If(Compare(Call(Name('type', Load(), lineno=645, col_offset=15), [Name('item', Load(), lineno=645, col_offset=20)], [], None, None, lineno=645, col_offset=15), [Eq()], [Name('str', Load(), lineno=645, col_offset=29)], lineno=645, col_offset=15), [Assign([Name('pkg', Store(), lineno=646, col_offset=16)], Name('None', Load(), lineno=646, col_offset=22), lineno=646, col_offset=16), Assign([Name('descr', Store(), lineno=647, col_offset=16)], Call(Name('str', Load(), lineno=647, col_offset=24), [Name('item', Load(), lineno=647, col_offset=28)], [], None, None, lineno=647, col_offset=24), lineno=647, col_offset=16)], [Assign([Name('name', Store(), lineno=649, col_offset=16)], Subscript(Name('item', Load(), lineno=649, col_offset=23), Index(Str('Name', lineno=649, col_offset=28)), Load(), lineno=649, col_offset=23), lineno=649, col_offset=16), If(Compare(Str('Version', lineno=650, col_offset=19), [In()], [Name('item', Load(), lineno=650, col_offset=32)], lineno=650, col_offset=19), [Assign([Name('name', Store(), lineno=651, col_offset=20)], BinOp(BinOp(Name('name', Load(), lineno=651, col_offset=27), Add(), Str('-', lineno=651, col_offset=34), lineno=651, col_offset=27), Add(), Subscript(Name('item', Load(), lineno=651, col_offset=40), Index(Str('Version', lineno=651, col_offset=45)), Load(), lineno=651, col_offset=40), lineno=651, col_offset=38), lineno=651, col_offset=20)], [], lineno=650, col_offset=16), If(Compare(Str('Flavor', lineno=652, col_offset=19), [In()], [Name('item', Load(), lineno=652, col_offset=31)], lineno=652, col_offset=19), [Assign([Name('name', Store(), lineno=653, col_offset=20)], BinOp(BinOp(Name('name', Load(), lineno=653, col_offset=27), Add(), Str('-', lineno=653, col_offset=34), lineno=653, col_offset=27), Add(), Subscript(Name('item', Load(), lineno=653, col_offset=40), Index(Str('Flavor', lineno=653, col_offset=45)), Load(), lineno=653, col_offset=40), lineno=653, col_offset=38), lineno=653, col_offset=20)], [], lineno=652, col_offset=16), Assign([Name('pkg', Store(), lineno=654, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=654, col_offset=22), '_db', Load(), lineno=654, col_offset=22), 'find', Load(), lineno=654, col_offset=22), [Name('name', Load(), lineno=654, col_offset=36)], [], None, None, lineno=654, col_offset=22), lineno=654, col_offset=16), If(UnaryOp(Not(), Name('pkg', Load(), lineno=655, col_offset=23), lineno=655, col_offset=19), [Assign([Name('descr', Store(), lineno=656, col_offset=20)], BinOp(Str('Requires unknown %s', lineno=656, col_offset=28), Mod(), Name('name', Load(), lineno=656, col_offset=50), lineno=656, col_offset=28), lineno=656, col_offset=20)], [Assign([Name('descr', Store(), lineno=658, col_offset=20)], Call(Attribute(Name('pkg', Load(), lineno=658, col_offset=28), 'shortdescription', Load(), lineno=658, col_offset=28), [], [], None, None, lineno=658, col_offset=28), lineno=658, col_offset=20)], lineno=655, col_offset=16)], lineno=645, col_offset=12), Expr(Call(Attribute(Name('rv', Load(), lineno=659, col_offset=12), 'append', Load(), lineno=659, col_offset=12), [Tuple([Name('pkg', Load(), lineno=659, col_offset=23), Name('descr', Load(), lineno=659, col_offset=28)], Load(), lineno=659, col_offset=23)], [], None, None, lineno=659, col_offset=12), lineno=659, col_offset=12)], [], lineno=644, col_offset=8), Return(Name('rv', Load(), lineno=660, col_offset=15), lineno=660, col_offset=8)], [], lineno=619, col_offset=4), FunctionDef('downloadPackageOnly', arguments([Name('self', Param(), lineno=663, col_offset=28), Name('output', Param(), lineno=663, col_offset=34)], None, None, [Name('None', Load(), lineno=663, col_offset=41)]), [Expr(Str('Download a single package, if needed.\n\n        An MD5 signature is used to determine whether download is needed,\n        and to test that we actually downloaded what we expected.\n        If output is given it is a file-like object that will receive a log\n        of what happens.\n\n        If anything unforeseen happened the method returns an error message\n        string.\n        ', lineno=673, col_offset=-1), lineno=673, col_offset=-1), Assign([Tuple([Name('scheme', Store(), lineno=675, col_offset=8), Name('loc', Store(), lineno=675, col_offset=16), Name('path', Store(), lineno=675, col_offset=21), Name('query', Store(), lineno=675, col_offset=27), Name('frag', Store(), lineno=675, col_offset=34)], Store(), lineno=675, col_offset=8)], Call(Attribute(Name('urlparse', Load(), lineno=675, col_offset=41), 'urlsplit', Load(), lineno=675, col_offset=41), [Subscript(Attribute(Name('self', Load(), lineno=675, col_offset=59), '_dict', Load(), lineno=675, col_offset=59), Index(Str('Download-URL', lineno=675, col_offset=70)), Load(), lineno=675, col_offset=59)], [], None, None, lineno=675, col_offset=41), lineno=675, col_offset=8), Assign([Name('path', Store(), lineno=676, col_offset=8)], Call(Attribute(Name('urllib', Load(), lineno=676, col_offset=15), 'url2pathname', Load(), lineno=676, col_offset=15), [Name('path', Load(), lineno=676, col_offset=35)], [], None, None, lineno=676, col_offset=15), lineno=676, col_offset=8), Assign([Name('filename', Store(), lineno=677, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=677, col_offset=19), 'path', Load(), lineno=677, col_offset=19), 'split', Load(), lineno=677, col_offset=19), [Name('path', Load(), lineno=677, col_offset=33)], [], None, None, lineno=677, col_offset=19), Index(Num(1, lineno=677, col_offset=39)), Load(), lineno=677, col_offset=19), lineno=677, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=678, col_offset=8), 'archiveFilename', Store(), lineno=678, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=678, col_offset=31), 'path', Load(), lineno=678, col_offset=31), 'join', Load(), lineno=678, col_offset=31), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=678, col_offset=44), '_db', Load(), lineno=678, col_offset=44), 'preferences', Load(), lineno=678, col_offset=44), 'downloadDir', Load(), lineno=678, col_offset=44), Name('filename', Load(), lineno=678, col_offset=78)], [], None, None, lineno=678, col_offset=31), lineno=678, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=679, col_offset=15), '_archiveOK', Load(), lineno=679, col_offset=15), [], [], None, None, lineno=679, col_offset=15), lineno=679, col_offset=11), [If(Compare(Name('scheme', Load(), lineno=680, col_offset=15), [Eq()], [Str('manual', lineno=680, col_offset=25)], lineno=680, col_offset=15), [Return(BinOp(Str('Please download package manually and save as %s', lineno=681, col_offset=23), Mod(), Attribute(Name('self', Load(), lineno=681, col_offset=75), 'archiveFilename', Load(), lineno=681, col_offset=75), lineno=681, col_offset=23), lineno=681, col_offset=16)], [], lineno=680, col_offset=12), Assign([Name('downloader', Store(), lineno=682, col_offset=12)], Call(Name('PimpUrllibDownloader', Load(), lineno=682, col_offset=25), [Name('None', Load(), lineno=682, col_offset=46), Attribute(Attribute(Attribute(Name('self', Load(), lineno=682, col_offset=52), '_db', Load(), lineno=682, col_offset=52), 'preferences', Load(), lineno=682, col_offset=52), 'downloadDir', Load(), lineno=682, col_offset=52)], [keyword('watcher', Attribute(Attribute(Attribute(Name('self', Load(), lineno=683, col_offset=24), '_db', Load(), lineno=683, col_offset=24), 'preferences', Load(), lineno=683, col_offset=24), 'watcher', Load(), lineno=683, col_offset=24))], None, None, lineno=682, col_offset=25), lineno=682, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Name('downloader', Load(), lineno=684, col_offset=19), 'download', Load(), lineno=684, col_offset=19), [Subscript(Attribute(Name('self', Load(), lineno=684, col_offset=39), '_dict', Load(), lineno=684, col_offset=39), Index(Str('Download-URL', lineno=684, col_offset=50)), Load(), lineno=684, col_offset=39), Attribute(Name('self', Load(), lineno=685, col_offset=20), 'archiveFilename', Load(), lineno=685, col_offset=20), Name('output', Load(), lineno=685, col_offset=42)], [], None, None, lineno=684, col_offset=19), lineno=684, col_offset=15), [Return(Str('download command failed', lineno=686, col_offset=23), lineno=686, col_offset=16)], [], lineno=684, col_offset=12)], [], lineno=679, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=687, col_offset=15), 'path', Load(), lineno=687, col_offset=15), 'exists', Load(), lineno=687, col_offset=15), [Attribute(Name('self', Load(), lineno=687, col_offset=30), 'archiveFilename', Load(), lineno=687, col_offset=30)], [], None, None, lineno=687, col_offset=15), lineno=687, col_offset=11), UnaryOp(Not(), Name('NO_EXECUTE', Load(), lineno=687, col_offset=60), lineno=687, col_offset=56)], lineno=687, col_offset=11), [Return(Str('archive not found after download', lineno=688, col_offset=19), lineno=688, col_offset=12)], [], lineno=687, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=689, col_offset=15), '_archiveOK', Load(), lineno=689, col_offset=15), [], [], None, None, lineno=689, col_offset=15), lineno=689, col_offset=11), [Return(Str('archive does not have correct MD5 checksum', lineno=690, col_offset=19), lineno=690, col_offset=12)], [], lineno=689, col_offset=8)], [], lineno=663, col_offset=4), FunctionDef('_archiveOK', arguments([Name('self', Param(), lineno=692, col_offset=19)], None, None, []), [Expr(Str('Test an archive. It should exist and the MD5 checksum should be correct.', lineno=693, col_offset=8), lineno=693, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=695, col_offset=15), 'path', Load(), lineno=695, col_offset=15), 'exists', Load(), lineno=695, col_offset=15), [Attribute(Name('self', Load(), lineno=695, col_offset=30), 'archiveFilename', Load(), lineno=695, col_offset=30)], [], None, None, lineno=695, col_offset=15), lineno=695, col_offset=11), [Return(Num(0, lineno=696, col_offset=19), lineno=696, col_offset=12)], [], lineno=695, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=697, col_offset=15), '_dict', Load(), lineno=697, col_offset=15), 'get', Load(), lineno=697, col_offset=15), [Str('MD5Sum', lineno=697, col_offset=30)], [], None, None, lineno=697, col_offset=15), lineno=697, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=698, col_offset=12), 'stderr', Load(), lineno=698, col_offset=12), 'write', Load(), lineno=698, col_offset=12), [BinOp(Str('Warning: no MD5Sum for %s\n', lineno=698, col_offset=29), Mod(), Call(Attribute(Name('self', Load(), lineno=698, col_offset=61), 'fullname', Load(), lineno=698, col_offset=61), [], [], None, None, lineno=698, col_offset=61), lineno=698, col_offset=29)], [], None, None, lineno=698, col_offset=12), lineno=698, col_offset=12), Return(Num(1, lineno=699, col_offset=19), lineno=699, col_offset=12)], [], lineno=697, col_offset=8), Assign([Name('data', Store(), lineno=700, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=700, col_offset=15), [Attribute(Name('self', Load(), lineno=700, col_offset=20), 'archiveFilename', Load(), lineno=700, col_offset=20), Str('rb', lineno=700, col_offset=42)], [], None, None, lineno=700, col_offset=15), 'read', Load(), lineno=700, col_offset=15), [], [], None, None, lineno=700, col_offset=15), lineno=700, col_offset=8), Assign([Name('checksum', Store(), lineno=701, col_offset=8)], Call(Attribute(Call(Attribute(Name('hashlib', Load(), lineno=701, col_offset=19), 'md5', Load(), lineno=701, col_offset=19), [Name('data', Load(), lineno=701, col_offset=31)], [], None, None, lineno=701, col_offset=19), 'hexdigest', Load(), lineno=701, col_offset=19), [], [], None, None, lineno=701, col_offset=19), lineno=701, col_offset=8), Return(Compare(Name('checksum', Load(), lineno=702, col_offset=15), [Eq()], [Subscript(Attribute(Name('self', Load(), lineno=702, col_offset=27), '_dict', Load(), lineno=702, col_offset=27), Index(Str('MD5Sum', lineno=702, col_offset=38)), Load(), lineno=702, col_offset=27)], lineno=702, col_offset=15), lineno=702, col_offset=8)], [], lineno=692, col_offset=4), FunctionDef('unpackPackageOnly', arguments([Name('self', Param(), lineno=704, col_offset=26), Name('output', Param(), lineno=704, col_offset=32)], None, None, [Name('None', Load(), lineno=704, col_offset=39)]), [Expr(Str('Unpack a downloaded package archive.', lineno=705, col_offset=8), lineno=705, col_offset=8), Assign([Name('filename', Store(), lineno=707, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=707, col_offset=19), 'path', Load(), lineno=707, col_offset=19), 'split', Load(), lineno=707, col_offset=19), [Attribute(Name('self', Load(), lineno=707, col_offset=33), 'archiveFilename', Load(), lineno=707, col_offset=33)], [], None, None, lineno=707, col_offset=19), Index(Num(1, lineno=707, col_offset=55)), Load(), lineno=707, col_offset=19), lineno=707, col_offset=8), For(Tuple([Name('ext', Store(), lineno=708, col_offset=12), Name('unpackerClass', Store(), lineno=708, col_offset=17), Name('arg', Store(), lineno=708, col_offset=32)], Store(), lineno=708, col_offset=12), Name('ARCHIVE_FORMATS', Load(), lineno=708, col_offset=39), [If(Compare(Subscript(Name('filename', Load(), lineno=709, col_offset=15), Slice(UnaryOp(USub(), Call(Name('len', Load(), lineno=709, col_offset=25), [Name('ext', Load(), lineno=709, col_offset=29)], [], None, None, lineno=709, col_offset=25), lineno=709, col_offset=24), None, None), Load(), lineno=709, col_offset=15), [Eq()], [Name('ext', Load(), lineno=709, col_offset=39)], lineno=709, col_offset=15), [Break( lineno=710, col_offset=16)], [], lineno=709, col_offset=12)], [Return(BinOp(Str('unknown extension for archive file: %s', lineno=712, col_offset=19), Mod(), Name('filename', Load(), lineno=712, col_offset=62), lineno=712, col_offset=19), lineno=712, col_offset=12)], lineno=708, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=713, col_offset=8), 'basename', Store(), lineno=713, col_offset=8)], Subscript(Name('filename', Load(), lineno=713, col_offset=24), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=713, col_offset=35), [Name('ext', Load(), lineno=713, col_offset=39)], [], None, None, lineno=713, col_offset=35), lineno=713, col_offset=34), None), Load(), lineno=713, col_offset=24), lineno=713, col_offset=8), Assign([Name('unpacker', Store(), lineno=714, col_offset=8)], Call(Name('unpackerClass', Load(), lineno=714, col_offset=19), [Name('arg', Load(), lineno=714, col_offset=33)], [keyword('dir', Attribute(Attribute(Attribute(Name('self', Load(), lineno=714, col_offset=42), '_db', Load(), lineno=714, col_offset=42), 'preferences', Load(), lineno=714, col_offset=42), 'buildDir', Load(), lineno=714, col_offset=42)), keyword('watcher', Attribute(Attribute(Attribute(Name('self', Load(), lineno=715, col_offset=24), '_db', Load(), lineno=715, col_offset=24), 'preferences', Load(), lineno=715, col_offset=24), 'watcher', Load(), lineno=715, col_offset=24))], None, None, lineno=714, col_offset=19), lineno=714, col_offset=8), Assign([Name('rv', Store(), lineno=716, col_offset=8)], Call(Attribute(Name('unpacker', Load(), lineno=716, col_offset=13), 'unpack', Load(), lineno=716, col_offset=13), [Attribute(Name('self', Load(), lineno=716, col_offset=29), 'archiveFilename', Load(), lineno=716, col_offset=29)], [keyword('output', Name('output', Load(), lineno=716, col_offset=58))], None, None, lineno=716, col_offset=13), lineno=716, col_offset=8), If(Name('rv', Load(), lineno=717, col_offset=11), [Return(Name('rv', Load(), lineno=718, col_offset=19), lineno=718, col_offset=12)], [], lineno=717, col_offset=8)], [], lineno=704, col_offset=4), FunctionDef('installPackageOnly', arguments([Name('self', Param(), lineno=720, col_offset=27), Name('output', Param(), lineno=720, col_offset=33)], None, None, [Name('None', Load(), lineno=720, col_offset=40)]), [Expr(Str('Default install method, to be overridden by subclasses', lineno=721, col_offset=8), lineno=721, col_offset=8), Return(BinOp(Str('%s: This package needs to be installed manually (no support for flavor="%s")', lineno=722, col_offset=15), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=723, col_offset=15), 'fullname', Load(), lineno=723, col_offset=15), [], [], None, None, lineno=723, col_offset=15), Call(Attribute(Attribute(Name('self', Load(), lineno=723, col_offset=32), '_dict', Load(), lineno=723, col_offset=32), 'get', Load(), lineno=723, col_offset=32), [Name('flavor', Load(), lineno=723, col_offset=47), Str('', lineno=723, col_offset=55)], [], None, None, lineno=723, col_offset=32)], Load(), lineno=723, col_offset=15), lineno=722, col_offset=15), lineno=722, col_offset=8)], [], lineno=720, col_offset=4), FunctionDef('installSinglePackage', arguments([Name('self', Param(), lineno=725, col_offset=29), Name('output', Param(), lineno=725, col_offset=35)], None, None, [Name('None', Load(), lineno=725, col_offset=42)]), [Expr(Str('Download, unpack and install a single package.\n\n        If output is given it should be a file-like object and it\n        will receive a log of what happened.', lineno=729, col_offset=-1), lineno=729, col_offset=-1), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('self', Load(), lineno=731, col_offset=15), '_dict', Load(), lineno=731, col_offset=15), 'get', Load(), lineno=731, col_offset=15), [Str('Download-URL', lineno=731, col_offset=30)], [], None, None, lineno=731, col_offset=15), lineno=731, col_offset=11), [Return(BinOp(Str('%s: This package needs to be installed manually (no Download-URL field)', lineno=732, col_offset=19), Mod(), Call(Attribute(Name('self', Load(), lineno=732, col_offset=95), 'fullname', Load(), lineno=732, col_offset=95), [], [], None, None, lineno=732, col_offset=95), lineno=732, col_offset=19), lineno=732, col_offset=12)], [], lineno=731, col_offset=8), Assign([Name('msg', Store(), lineno=733, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=733, col_offset=14), 'downloadPackageOnly', Load(), lineno=733, col_offset=14), [Name('output', Load(), lineno=733, col_offset=39)], [], None, None, lineno=733, col_offset=14), lineno=733, col_offset=8), If(Name('msg', Load(), lineno=734, col_offset=11), [Return(BinOp(Str('%s: download: %s', lineno=735, col_offset=19), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=735, col_offset=41), 'fullname', Load(), lineno=735, col_offset=41), [], [], None, None, lineno=735, col_offset=41), Name('msg', Load(), lineno=735, col_offset=58)], Load(), lineno=735, col_offset=41), lineno=735, col_offset=19), lineno=735, col_offset=12)], [], lineno=734, col_offset=8), Assign([Name('msg', Store(), lineno=737, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=737, col_offset=14), 'unpackPackageOnly', Load(), lineno=737, col_offset=14), [Name('output', Load(), lineno=737, col_offset=37)], [], None, None, lineno=737, col_offset=14), lineno=737, col_offset=8), If(Name('msg', Load(), lineno=738, col_offset=11), [Return(BinOp(Str('%s: unpack: %s', lineno=739, col_offset=19), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=739, col_offset=39), 'fullname', Load(), lineno=739, col_offset=39), [], [], None, None, lineno=739, col_offset=39), Name('msg', Load(), lineno=739, col_offset=56)], Load(), lineno=739, col_offset=39), lineno=739, col_offset=19), lineno=739, col_offset=12)], [], lineno=738, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=741, col_offset=15), 'installPackageOnly', Load(), lineno=741, col_offset=15), [Name('output', Load(), lineno=741, col_offset=39)], [], None, None, lineno=741, col_offset=15), lineno=741, col_offset=8)], [], lineno=725, col_offset=4), FunctionDef('beforeInstall', arguments([Name('self', Param(), lineno=743, col_offset=22)], None, None, []), [Expr(Str('Bookkeeping before installation: remember what we have in site-packages', lineno=744, col_offset=8), lineno=744, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=745, col_offset=8), '_old_contents', Store(), lineno=745, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=745, col_offset=29), 'listdir', Load(), lineno=745, col_offset=29), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=745, col_offset=40), '_db', Load(), lineno=745, col_offset=40), 'preferences', Load(), lineno=745, col_offset=40), 'installDir', Load(), lineno=745, col_offset=40)], [], None, None, lineno=745, col_offset=29), lineno=745, col_offset=8)], [], lineno=743, col_offset=4), FunctionDef('afterInstall', arguments([Name('self', Param(), lineno=747, col_offset=21)], None, None, []), [Expr(Str('Bookkeeping after installation: interpret any new .pth files that have\n        appeared', lineno=749, col_offset=-1), lineno=749, col_offset=-1), Assign([Name('new_contents', Store(), lineno=751, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=751, col_offset=23), 'listdir', Load(), lineno=751, col_offset=23), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=751, col_offset=34), '_db', Load(), lineno=751, col_offset=34), 'preferences', Load(), lineno=751, col_offset=34), 'installDir', Load(), lineno=751, col_offset=34)], [], None, None, lineno=751, col_offset=23), lineno=751, col_offset=8), For(Name('fn', Store(), lineno=752, col_offset=12), Name('new_contents', Load(), lineno=752, col_offset=18), [If(Compare(Name('fn', Load(), lineno=753, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=753, col_offset=21), '_old_contents', Load(), lineno=753, col_offset=21)], lineno=753, col_offset=15), [Continue( lineno=754, col_offset=16)], [], lineno=753, col_offset=12), If(Compare(Subscript(Name('fn', Load(), lineno=755, col_offset=15), Slice(Num(-4, lineno=755, col_offset=19), None, None), Load(), lineno=755, col_offset=15), [NotEq()], [Str('.pth', lineno=755, col_offset=26)], lineno=755, col_offset=15), [Continue( lineno=756, col_offset=16)], [], lineno=755, col_offset=12), Assign([Name('fullname', Store(), lineno=757, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=757, col_offset=23), 'path', Load(), lineno=757, col_offset=23), 'join', Load(), lineno=757, col_offset=23), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=757, col_offset=36), '_db', Load(), lineno=757, col_offset=36), 'preferences', Load(), lineno=757, col_offset=36), 'installDir', Load(), lineno=757, col_offset=36), Name('fn', Load(), lineno=757, col_offset=69)], [], None, None, lineno=757, col_offset=23), lineno=757, col_offset=12), Assign([Name('f', Store(), lineno=758, col_offset=12)], Call(Name('open', Load(), lineno=758, col_offset=16), [Name('fullname', Load(), lineno=758, col_offset=21)], [], None, None, lineno=758, col_offset=16), lineno=758, col_offset=12), For(Name('line', Store(), lineno=759, col_offset=16), Call(Attribute(Name('f', Load(), lineno=759, col_offset=24), 'readlines', Load(), lineno=759, col_offset=24), [], [], None, None, lineno=759, col_offset=24), [If(UnaryOp(Not(), Name('line', Load(), lineno=760, col_offset=23), lineno=760, col_offset=19), [Continue( lineno=761, col_offset=20)], [], lineno=760, col_offset=16), If(Compare(Subscript(Name('line', Load(), lineno=762, col_offset=19), Index(Num(0, lineno=762, col_offset=24)), Load(), lineno=762, col_offset=19), [Eq()], [Str('#', lineno=762, col_offset=30)], lineno=762, col_offset=19), [Continue( lineno=763, col_offset=20)], [], lineno=762, col_offset=16), If(Compare(Subscript(Name('line', Load(), lineno=764, col_offset=19), Slice(None, Num(6, lineno=764, col_offset=25), None), Load(), lineno=764, col_offset=19), [Eq()], [Str('import', lineno=764, col_offset=31)], lineno=764, col_offset=19), [Exec(Name('line', Load(), lineno=765, col_offset=25), None, None, lineno=765, col_offset=20), Continue( lineno=766, col_offset=20)], [], lineno=764, col_offset=16), If(Compare(Subscript(Name('line', Load(), lineno=767, col_offset=19), Index(Num(-1, lineno=767, col_offset=25)), Load(), lineno=767, col_offset=19), [Eq()], [Str('\n', lineno=767, col_offset=31)], lineno=767, col_offset=19), [Assign([Name('line', Store(), lineno=768, col_offset=20)], Subscript(Name('line', Load(), lineno=768, col_offset=27), Slice(None, Num(-1, lineno=768, col_offset=34), None), Load(), lineno=768, col_offset=27), lineno=768, col_offset=20)], [], lineno=767, col_offset=16), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=769, col_offset=23), 'path', Load(), lineno=769, col_offset=23), 'isabs', Load(), lineno=769, col_offset=23), [Name('line', Load(), lineno=769, col_offset=37)], [], None, None, lineno=769, col_offset=23), lineno=769, col_offset=19), [Assign([Name('line', Store(), lineno=770, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=770, col_offset=27), 'path', Load(), lineno=770, col_offset=27), 'join', Load(), lineno=770, col_offset=27), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=770, col_offset=40), '_db', Load(), lineno=770, col_offset=40), 'preferences', Load(), lineno=770, col_offset=40), 'installDir', Load(), lineno=770, col_offset=40), Name('line', Load(), lineno=770, col_offset=73)], [], None, None, lineno=770, col_offset=27), lineno=770, col_offset=20)], [], lineno=769, col_offset=16), Assign([Name('line', Store(), lineno=771, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=771, col_offset=23), 'path', Load(), lineno=771, col_offset=23), 'realpath', Load(), lineno=771, col_offset=23), [Name('line', Load(), lineno=771, col_offset=40)], [], None, None, lineno=771, col_offset=23), lineno=771, col_offset=16), If(UnaryOp(Not(), Compare(Name('line', Load(), lineno=772, col_offset=23), [In()], [Attribute(Name('sys', Load(), lineno=772, col_offset=31), 'path', Load(), lineno=772, col_offset=31)], lineno=772, col_offset=23), lineno=772, col_offset=19), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=773, col_offset=20), 'path', Load(), lineno=773, col_offset=20), 'append', Load(), lineno=773, col_offset=20), [Name('line', Load(), lineno=773, col_offset=36)], [], None, None, lineno=773, col_offset=20), lineno=773, col_offset=20)], [], lineno=772, col_offset=16)], [], lineno=759, col_offset=12)], [], lineno=752, col_offset=8)], [], lineno=747, col_offset=4), FunctionDef('filterExpectedSkips', arguments([Name('self', Param(), lineno=775, col_offset=28), Name('names', Param(), lineno=775, col_offset=34)], None, None, []), [Expr(Str('Return a list that contains only unpexpected skips', lineno=776, col_offset=8), lineno=776, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=777, col_offset=15), '_db', Load(), lineno=777, col_offset=15), 'preferences', Load(), lineno=777, col_offset=15), 'isUserInstall', Load(), lineno=777, col_offset=15), [], [], None, None, lineno=777, col_offset=15), lineno=777, col_offset=11), [Return(Name('names', Load(), lineno=778, col_offset=19), lineno=778, col_offset=12)], [], lineno=777, col_offset=8), Assign([Name('expected_skips', Store(), lineno=779, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=779, col_offset=25), '_dict', Load(), lineno=779, col_offset=25), 'get', Load(), lineno=779, col_offset=25), [Str('User-install-skips', lineno=779, col_offset=40)], [], None, None, lineno=779, col_offset=25), lineno=779, col_offset=8), If(UnaryOp(Not(), Name('expected_skips', Load(), lineno=780, col_offset=15), lineno=780, col_offset=11), [Return(Name('names', Load(), lineno=781, col_offset=19), lineno=781, col_offset=12)], [], lineno=780, col_offset=8), Assign([Name('newnames', Store(), lineno=782, col_offset=8)], List([], Load(), lineno=782, col_offset=19), lineno=782, col_offset=8), For(Name('name', Store(), lineno=783, col_offset=12), Name('names', Load(), lineno=783, col_offset=20), [For(Name('skip', Store(), lineno=784, col_offset=16), Name('expected_skips', Load(), lineno=784, col_offset=24), [If(Compare(Subscript(Name('name', Load(), lineno=785, col_offset=19), Slice(None, Call(Name('len', Load(), lineno=785, col_offset=25), [Name('skip', Load(), lineno=785, col_offset=29)], [], None, None, lineno=785, col_offset=25), None), Load(), lineno=785, col_offset=19), [Eq()], [Name('skip', Load(), lineno=785, col_offset=39)], lineno=785, col_offset=19), [Break( lineno=786, col_offset=20)], [], lineno=785, col_offset=16)], [Expr(Call(Attribute(Name('newnames', Load(), lineno=788, col_offset=16), 'append', Load(), lineno=788, col_offset=16), [Name('name', Load(), lineno=788, col_offset=32)], [], None, None, lineno=788, col_offset=16), lineno=788, col_offset=16)], lineno=784, col_offset=12)], [], lineno=783, col_offset=8), Return(Name('newnames', Load(), lineno=789, col_offset=15), lineno=789, col_offset=8)], [], lineno=775, col_offset=4)], [], lineno=525, col_offset=0), ClassDef('PimpPackage_binary', [Name('PimpPackage', Load(), lineno=791, col_offset=25)], [FunctionDef('unpackPackageOnly', arguments([Name('self', Param(), lineno=793, col_offset=26), Name('output', Param(), lineno=793, col_offset=32)], None, None, [Name('None', Load(), lineno=793, col_offset=39)]), [Expr(Str("We don't unpack binary packages until installing", lineno=794, col_offset=8), lineno=794, col_offset=8), Pass( lineno=795, col_offset=8)], [], lineno=793, col_offset=4), FunctionDef('installPackageOnly', arguments([Name('self', Param(), lineno=797, col_offset=27), Name('output', Param(), lineno=797, col_offset=33)], None, None, [Name('None', Load(), lineno=797, col_offset=40)]), [Expr(Str('Install a single source package.\n\n        If output is given it should be a file-like object and it\n        will receive a log of what happened.', lineno=801, col_offset=-1), lineno=801, col_offset=-1), If(Compare(Str('Install-command', lineno=803, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=803, col_offset=32), '_dict', Load(), lineno=803, col_offset=32)], lineno=803, col_offset=11), [Return(BinOp(Str('%s: Binary package cannot have Install-command', lineno=804, col_offset=19), Mod(), Call(Attribute(Name('self', Load(), lineno=804, col_offset=70), 'fullname', Load(), lineno=804, col_offset=70), [], [], None, None, lineno=804, col_offset=70), lineno=804, col_offset=19), lineno=804, col_offset=12)], [], lineno=803, col_offset=8), If(Compare(Str('Pre-install-command', lineno=806, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=806, col_offset=36), '_dict', Load(), lineno=806, col_offset=36)], lineno=806, col_offset=11), [If(Call(Name('_cmd', Load(), lineno=807, col_offset=15), [Name('output', Load(), lineno=807, col_offset=20), Str('/tmp', lineno=807, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=807, col_offset=36), '_dict', Load(), lineno=807, col_offset=36), Index(Str('Pre-install-command', lineno=807, col_offset=47)), Load(), lineno=807, col_offset=36)], [], None, None, lineno=807, col_offset=15), [Return(BinOp(Str('pre-install %s: running "%s" failed', lineno=808, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=809, col_offset=21), 'fullname', Load(), lineno=809, col_offset=21), [], [], None, None, lineno=809, col_offset=21), Subscript(Attribute(Name('self', Load(), lineno=809, col_offset=38), '_dict', Load(), lineno=809, col_offset=38), Index(Str('Pre-install-command', lineno=809, col_offset=49)), Load(), lineno=809, col_offset=38)], Load(), lineno=809, col_offset=21), lineno=808, col_offset=23), lineno=808, col_offset=16)], [], lineno=807, col_offset=12)], [], lineno=806, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=811, col_offset=8), 'beforeInstall', Load(), lineno=811, col_offset=8), [], [], None, None, lineno=811, col_offset=8), lineno=811, col_offset=8), Assign([Name('filename', Store(), lineno=814, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=814, col_offset=19), 'path', Load(), lineno=814, col_offset=19), 'split', Load(), lineno=814, col_offset=19), [Attribute(Name('self', Load(), lineno=814, col_offset=33), 'archiveFilename', Load(), lineno=814, col_offset=33)], [], None, None, lineno=814, col_offset=19), Index(Num(1, lineno=814, col_offset=55)), Load(), lineno=814, col_offset=19), lineno=814, col_offset=8), For(Tuple([Name('ext', Store(), lineno=815, col_offset=12), Name('unpackerClass', Store(), lineno=815, col_offset=17), Name('arg', Store(), lineno=815, col_offset=32)], Store(), lineno=815, col_offset=12), Name('ARCHIVE_FORMATS', Load(), lineno=815, col_offset=39), [If(Compare(Subscript(Name('filename', Load(), lineno=816, col_offset=15), Slice(UnaryOp(USub(), Call(Name('len', Load(), lineno=816, col_offset=25), [Name('ext', Load(), lineno=816, col_offset=29)], [], None, None, lineno=816, col_offset=25), lineno=816, col_offset=24), None, None), Load(), lineno=816, col_offset=15), [Eq()], [Name('ext', Load(), lineno=816, col_offset=39)], lineno=816, col_offset=15), [Break( lineno=817, col_offset=16)], [], lineno=816, col_offset=12)], [Return(BinOp(Str('%s: unknown extension for archive file: %s', lineno=819, col_offset=19), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=819, col_offset=67), 'fullname', Load(), lineno=819, col_offset=67), [], [], None, None, lineno=819, col_offset=67), Name('filename', Load(), lineno=819, col_offset=84)], Load(), lineno=819, col_offset=67), lineno=819, col_offset=19), lineno=819, col_offset=12)], lineno=815, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=820, col_offset=8), 'basename', Store(), lineno=820, col_offset=8)], Subscript(Name('filename', Load(), lineno=820, col_offset=24), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=820, col_offset=35), [Name('ext', Load(), lineno=820, col_offset=39)], [], None, None, lineno=820, col_offset=35), lineno=820, col_offset=34), None), Load(), lineno=820, col_offset=24), lineno=820, col_offset=8), Assign([Name('install_renames', Store(), lineno=822, col_offset=8)], List([], Load(), lineno=822, col_offset=26), lineno=822, col_offset=8), For(Tuple([Name('k', Store(), lineno=823, col_offset=12), Name('newloc', Store(), lineno=823, col_offset=15)], Store(), lineno=823, col_offset=12), Attribute(Attribute(Attribute(Name('self', Load(), lineno=823, col_offset=25), '_db', Load(), lineno=823, col_offset=25), 'preferences', Load(), lineno=823, col_offset=25), 'installLocations', Load(), lineno=823, col_offset=25), [If(UnaryOp(Not(), Name('newloc', Load(), lineno=824, col_offset=19), lineno=824, col_offset=15), [Continue( lineno=825, col_offset=16)], [], lineno=824, col_offset=12), If(Compare(Name('k', Load(), lineno=826, col_offset=15), [Eq()], [Str('--install-lib', lineno=826, col_offset=20)], lineno=826, col_offset=15), [Assign([Name('oldloc', Store(), lineno=827, col_offset=16)], Name('DEFAULT_INSTALLDIR', Load(), lineno=827, col_offset=25), lineno=827, col_offset=16)], [Return(BinOp(Str("%s: Don't know installLocation %s", lineno=829, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=829, col_offset=62), 'fullname', Load(), lineno=829, col_offset=62), [], [], None, None, lineno=829, col_offset=62), Name('k', Load(), lineno=829, col_offset=79)], Load(), lineno=829, col_offset=62), lineno=829, col_offset=23), lineno=829, col_offset=16)], lineno=826, col_offset=12), Expr(Call(Attribute(Name('install_renames', Load(), lineno=830, col_offset=12), 'append', Load(), lineno=830, col_offset=12), [Tuple([Name('oldloc', Load(), lineno=830, col_offset=36), Name('newloc', Load(), lineno=830, col_offset=44)], Load(), lineno=830, col_offset=36)], [], None, None, lineno=830, col_offset=12), lineno=830, col_offset=12)], [], lineno=823, col_offset=8), Assign([Name('unpacker', Store(), lineno=832, col_offset=8)], Call(Name('unpackerClass', Load(), lineno=832, col_offset=19), [Name('arg', Load(), lineno=832, col_offset=33)], [keyword('dir', Str('/', lineno=832, col_offset=42)), keyword('renames', Name('install_renames', Load(), lineno=832, col_offset=55))], None, None, lineno=832, col_offset=19), lineno=832, col_offset=8), Assign([Name('rv', Store(), lineno=833, col_offset=8)], Call(Attribute(Name('unpacker', Load(), lineno=833, col_offset=13), 'unpack', Load(), lineno=833, col_offset=13), [Attribute(Name('self', Load(), lineno=833, col_offset=29), 'archiveFilename', Load(), lineno=833, col_offset=29)], [keyword('output', Name('output', Load(), lineno=833, col_offset=58)), keyword('package', Name('self', Load(), lineno=833, col_offset=74))], None, None, lineno=833, col_offset=13), lineno=833, col_offset=8), If(Name('rv', Load(), lineno=834, col_offset=11), [Return(Name('rv', Load(), lineno=835, col_offset=19), lineno=835, col_offset=12)], [], lineno=834, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=837, col_offset=8), 'afterInstall', Load(), lineno=837, col_offset=8), [], [], None, None, lineno=837, col_offset=8), lineno=837, col_offset=8), If(Compare(Str('Post-install-command', lineno=839, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=839, col_offset=37), '_dict', Load(), lineno=839, col_offset=37)], lineno=839, col_offset=11), [If(Call(Name('_cmd', Load(), lineno=840, col_offset=15), [Name('output', Load(), lineno=840, col_offset=20), Str('/tmp', lineno=840, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=840, col_offset=36), '_dict', Load(), lineno=840, col_offset=36), Index(Str('Post-install-command', lineno=840, col_offset=47)), Load(), lineno=840, col_offset=36)], [], None, None, lineno=840, col_offset=15), [Return(BinOp(Str('%s: post-install: running "%s" failed', lineno=841, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=842, col_offset=21), 'fullname', Load(), lineno=842, col_offset=21), [], [], None, None, lineno=842, col_offset=21), Subscript(Attribute(Name('self', Load(), lineno=842, col_offset=38), '_dict', Load(), lineno=842, col_offset=38), Index(Str('Post-install-command', lineno=842, col_offset=49)), Load(), lineno=842, col_offset=38)], Load(), lineno=842, col_offset=21), lineno=841, col_offset=23), lineno=841, col_offset=16)], [], lineno=840, col_offset=12)], [], lineno=839, col_offset=8), Return(Name('None', Load(), lineno=844, col_offset=15), lineno=844, col_offset=8)], [], lineno=797, col_offset=4)], [], lineno=791, col_offset=0), ClassDef('PimpPackage_source', [Name('PimpPackage', Load(), lineno=847, col_offset=25)], [FunctionDef('unpackPackageOnly', arguments([Name('self', Param(), lineno=849, col_offset=26), Name('output', Param(), lineno=849, col_offset=32)], None, None, [Name('None', Load(), lineno=849, col_offset=39)]), [Expr(Str('Unpack a source package and check that setup.py exists', lineno=850, col_offset=8), lineno=850, col_offset=8), Expr(Call(Attribute(Name('PimpPackage', Load(), lineno=851, col_offset=8), 'unpackPackageOnly', Load(), lineno=851, col_offset=8), [Name('self', Load(), lineno=851, col_offset=38), Name('output', Load(), lineno=851, col_offset=44)], [], None, None, lineno=851, col_offset=8), lineno=851, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=853, col_offset=8), '_buildDirname', Store(), lineno=853, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=853, col_offset=29), 'path', Load(), lineno=853, col_offset=29), 'join', Load(), lineno=853, col_offset=29), [Attribute(Attribute(Attribute(Name('self', Load(), lineno=853, col_offset=42), '_db', Load(), lineno=853, col_offset=42), 'preferences', Load(), lineno=853, col_offset=42), 'buildDir', Load(), lineno=853, col_offset=42), Attribute(Name('self', Load(), lineno=853, col_offset=73), 'basename', Load(), lineno=853, col_offset=73)], [], None, None, lineno=853, col_offset=29), lineno=853, col_offset=8), Assign([Name('setupname', Store(), lineno=854, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=854, col_offset=20), 'path', Load(), lineno=854, col_offset=20), 'join', Load(), lineno=854, col_offset=20), [Attribute(Name('self', Load(), lineno=854, col_offset=33), '_buildDirname', Load(), lineno=854, col_offset=33), Str('setup.py', lineno=854, col_offset=53)], [], None, None, lineno=854, col_offset=20), lineno=854, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=855, col_offset=15), 'path', Load(), lineno=855, col_offset=15), 'exists', Load(), lineno=855, col_offset=15), [Name('setupname', Load(), lineno=855, col_offset=30)], [], None, None, lineno=855, col_offset=15), lineno=855, col_offset=11), UnaryOp(Not(), Name('NO_EXECUTE', Load(), lineno=855, col_offset=49), lineno=855, col_offset=45)], lineno=855, col_offset=11), [Return(Str('no setup.py found after unpack of archive', lineno=856, col_offset=19), lineno=856, col_offset=12)], [], lineno=855, col_offset=8)], [], lineno=849, col_offset=4), FunctionDef('installPackageOnly', arguments([Name('self', Param(), lineno=858, col_offset=27), Name('output', Param(), lineno=858, col_offset=33)], None, None, [Name('None', Load(), lineno=858, col_offset=40)]), [Expr(Str('Install a single source package.\n\n        If output is given it should be a file-like object and it\n        will receive a log of what happened.', lineno=862, col_offset=-1), lineno=862, col_offset=-1), If(Compare(Str('Pre-install-command', lineno=864, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=864, col_offset=36), '_dict', Load(), lineno=864, col_offset=36)], lineno=864, col_offset=11), [If(Call(Name('_cmd', Load(), lineno=865, col_offset=15), [Name('output', Load(), lineno=865, col_offset=20), Attribute(Name('self', Load(), lineno=865, col_offset=28), '_buildDirname', Load(), lineno=865, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=865, col_offset=48), '_dict', Load(), lineno=865, col_offset=48), Index(Str('Pre-install-command', lineno=865, col_offset=59)), Load(), lineno=865, col_offset=48)], [], None, None, lineno=865, col_offset=15), [Return(BinOp(Str('pre-install %s: running "%s" failed', lineno=866, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=867, col_offset=21), 'fullname', Load(), lineno=867, col_offset=21), [], [], None, None, lineno=867, col_offset=21), Subscript(Attribute(Name('self', Load(), lineno=867, col_offset=38), '_dict', Load(), lineno=867, col_offset=38), Index(Str('Pre-install-command', lineno=867, col_offset=49)), Load(), lineno=867, col_offset=38)], Load(), lineno=867, col_offset=21), lineno=866, col_offset=23), lineno=866, col_offset=16)], [], lineno=865, col_offset=12)], [], lineno=864, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=869, col_offset=8), 'beforeInstall', Load(), lineno=869, col_offset=8), [], [], None, None, lineno=869, col_offset=8), lineno=869, col_offset=8), Assign([Name('installcmd', Store(), lineno=870, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=870, col_offset=21), '_dict', Load(), lineno=870, col_offset=21), 'get', Load(), lineno=870, col_offset=21), [Str('Install-command', lineno=870, col_offset=36)], [], None, None, lineno=870, col_offset=21), lineno=870, col_offset=8), If(BoolOp(And(), [Name('installcmd', Load(), lineno=871, col_offset=11), Attribute(Name('self', Load(), lineno=871, col_offset=26), '_install_renames', Load(), lineno=871, col_offset=26)], lineno=871, col_offset=11), [Return(Str('Package has install-command and can only be installed to standard location', lineno=872, col_offset=19), lineno=872, col_offset=12)], [], lineno=871, col_offset=8), Assign([Name('unwanted_install_dir', Store(), lineno=875, col_offset=8)], Name('None', Load(), lineno=875, col_offset=31), lineno=875, col_offset=8), If(UnaryOp(Not(), Name('installcmd', Load(), lineno=876, col_offset=15), lineno=876, col_offset=11), [Assign([Name('extra_args', Store(), lineno=877, col_offset=12)], Str('', lineno=877, col_offset=25), lineno=877, col_offset=12), For(Tuple([Name('k', Store(), lineno=878, col_offset=16), Name('v', Store(), lineno=878, col_offset=19)], Store(), lineno=878, col_offset=16), Attribute(Attribute(Attribute(Name('self', Load(), lineno=878, col_offset=24), '_db', Load(), lineno=878, col_offset=24), 'preferences', Load(), lineno=878, col_offset=24), 'installLocations', Load(), lineno=878, col_offset=24), [If(UnaryOp(Not(), Name('v', Load(), lineno=879, col_offset=23), lineno=879, col_offset=19), [If(UnaryOp(Not(), Name('unwanted_install_dir', Load(), lineno=882, col_offset=27), lineno=882, col_offset=23), [Assign([Name('unwanted_install_dir', Store(), lineno=883, col_offset=24)], Call(Attribute(Name('tempfile', Load(), lineno=883, col_offset=47), 'mkdtemp', Load(), lineno=883, col_offset=47), [], [], None, None, lineno=883, col_offset=47), lineno=883, col_offset=24)], [], lineno=882, col_offset=20), Assign([Name('v', Store(), lineno=884, col_offset=20)], Name('unwanted_install_dir', Load(), lineno=884, col_offset=24), lineno=884, col_offset=20)], [], lineno=879, col_offset=16), Assign([Name('extra_args', Store(), lineno=885, col_offset=16)], BinOp(Name('extra_args', Load(), lineno=885, col_offset=29), Add(), BinOp(Str(' %s "%s"', lineno=885, col_offset=42), Mod(), Tuple([Name('k', Load(), lineno=885, col_offset=58), Name('v', Load(), lineno=885, col_offset=61)], Load(), lineno=885, col_offset=58), lineno=885, col_offset=42), lineno=885, col_offset=29), lineno=885, col_offset=16)], [], lineno=878, col_offset=12), Assign([Name('installcmd', Store(), lineno=886, col_offset=12)], BinOp(Str('"%s" setup.py install %s', lineno=886, col_offset=25), Mod(), Tuple([Attribute(Name('sys', Load(), lineno=886, col_offset=55), 'executable', Load(), lineno=886, col_offset=55), Name('extra_args', Load(), lineno=886, col_offset=71)], Load(), lineno=886, col_offset=55), lineno=886, col_offset=25), lineno=886, col_offset=12)], [], lineno=876, col_offset=8), If(Call(Name('_cmd', Load(), lineno=887, col_offset=11), [Name('output', Load(), lineno=887, col_offset=16), Attribute(Name('self', Load(), lineno=887, col_offset=24), '_buildDirname', Load(), lineno=887, col_offset=24), Name('installcmd', Load(), lineno=887, col_offset=44)], [], None, None, lineno=887, col_offset=11), [Return(BinOp(Str('install %s: running "%s" failed', lineno=888, col_offset=19), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=889, col_offset=17), 'fullname', Load(), lineno=889, col_offset=17), [], [], None, None, lineno=889, col_offset=17), Name('installcmd', Load(), lineno=889, col_offset=34)], Load(), lineno=889, col_offset=17), lineno=888, col_offset=19), lineno=888, col_offset=12)], [], lineno=887, col_offset=8), If(BoolOp(And(), [Name('unwanted_install_dir', Load(), lineno=890, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=890, col_offset=36), 'path', Load(), lineno=890, col_offset=36), 'exists', Load(), lineno=890, col_offset=36), [Name('unwanted_install_dir', Load(), lineno=890, col_offset=51)], [], None, None, lineno=890, col_offset=36)], lineno=890, col_offset=11), [Assign([Name('unwanted_files', Store(), lineno=891, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=891, col_offset=29), 'listdir', Load(), lineno=891, col_offset=29), [Name('unwanted_install_dir', Load(), lineno=891, col_offset=40)], [], None, None, lineno=891, col_offset=29), lineno=891, col_offset=12), If(Name('unwanted_files', Load(), lineno=892, col_offset=15), [Assign([Name('rv', Store(), lineno=893, col_offset=16)], BinOp(Str('Warning: some files were not installed: %s', lineno=893, col_offset=21), Mod(), Call(Attribute(Str(' ', lineno=893, col_offset=68), 'join', Load(), lineno=893, col_offset=68), [Name('unwanted_files', Load(), lineno=893, col_offset=77)], [], None, None, lineno=893, col_offset=68), lineno=893, col_offset=21), lineno=893, col_offset=16)], [Assign([Name('rv', Store(), lineno=895, col_offset=16)], Name('None', Load(), lineno=895, col_offset=21), lineno=895, col_offset=16)], lineno=892, col_offset=12), Expr(Call(Attribute(Name('shutil', Load(), lineno=896, col_offset=12), 'rmtree', Load(), lineno=896, col_offset=12), [Name('unwanted_install_dir', Load(), lineno=896, col_offset=26)], [], None, None, lineno=896, col_offset=12), lineno=896, col_offset=12), Return(Name('rv', Load(), lineno=897, col_offset=19), lineno=897, col_offset=12)], [], lineno=890, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=899, col_offset=8), 'afterInstall', Load(), lineno=899, col_offset=8), [], [], None, None, lineno=899, col_offset=8), lineno=899, col_offset=8), If(Compare(Str('Post-install-command', lineno=901, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=901, col_offset=37), '_dict', Load(), lineno=901, col_offset=37)], lineno=901, col_offset=11), [If(Call(Name('_cmd', Load(), lineno=902, col_offset=15), [Name('output', Load(), lineno=902, col_offset=20), Attribute(Name('self', Load(), lineno=902, col_offset=28), '_buildDirname', Load(), lineno=902, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=902, col_offset=48), '_dict', Load(), lineno=902, col_offset=48), Index(Str('Post-install-command', lineno=902, col_offset=59)), Load(), lineno=902, col_offset=48)], [], None, None, lineno=902, col_offset=15), [Return(BinOp(Str('post-install %s: running "%s" failed', lineno=903, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=904, col_offset=21), 'fullname', Load(), lineno=904, col_offset=21), [], [], None, None, lineno=904, col_offset=21), Subscript(Attribute(Name('self', Load(), lineno=904, col_offset=38), '_dict', Load(), lineno=904, col_offset=38), Index(Str('Post-install-command', lineno=904, col_offset=49)), Load(), lineno=904, col_offset=38)], Load(), lineno=904, col_offset=21), lineno=903, col_offset=23), lineno=903, col_offset=16)], [], lineno=902, col_offset=12)], [], lineno=901, col_offset=8), Return(Name('None', Load(), lineno=905, col_offset=15), lineno=905, col_offset=8)], [], lineno=858, col_offset=4)], [], lineno=847, col_offset=0), ClassDef('PimpPackage_installer', [Name('PimpPackage', Load(), lineno=907, col_offset=28)], [FunctionDef('unpackPackageOnly', arguments([Name('self', Param(), lineno=909, col_offset=26), Name('output', Param(), lineno=909, col_offset=32)], None, None, [Name('None', Load(), lineno=909, col_offset=39)]), [Expr(Str("We don't unpack dmg packages until installing", lineno=910, col_offset=8), lineno=910, col_offset=8), Pass( lineno=911, col_offset=8)], [], lineno=909, col_offset=4), FunctionDef('installPackageOnly', arguments([Name('self', Param(), lineno=913, col_offset=27), Name('output', Param(), lineno=913, col_offset=33)], None, None, [Name('None', Load(), lineno=913, col_offset=40)]), [Expr(Str('Install a single source package.\n\n        If output is given it should be a file-like object and it\n        will receive a log of what happened.', lineno=917, col_offset=-1), lineno=917, col_offset=-1), If(Compare(Str('Post-install-command', lineno=919, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=919, col_offset=37), '_dict', Load(), lineno=919, col_offset=37)], lineno=919, col_offset=11), [Return(BinOp(Str('%s: Installer package cannot have Post-install-command', lineno=920, col_offset=19), Mod(), Call(Attribute(Name('self', Load(), lineno=920, col_offset=78), 'fullname', Load(), lineno=920, col_offset=78), [], [], None, None, lineno=920, col_offset=78), lineno=920, col_offset=19), lineno=920, col_offset=12)], [], lineno=919, col_offset=8), If(Compare(Str('Pre-install-command', lineno=922, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=922, col_offset=36), '_dict', Load(), lineno=922, col_offset=36)], lineno=922, col_offset=11), [If(Call(Name('_cmd', Load(), lineno=923, col_offset=15), [Name('output', Load(), lineno=923, col_offset=20), Str('/tmp', lineno=923, col_offset=28), Subscript(Attribute(Name('self', Load(), lineno=923, col_offset=36), '_dict', Load(), lineno=923, col_offset=36), Index(Str('Pre-install-command', lineno=923, col_offset=47)), Load(), lineno=923, col_offset=36)], [], None, None, lineno=923, col_offset=15), [Return(BinOp(Str('pre-install %s: running "%s" failed', lineno=924, col_offset=23), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=925, col_offset=21), 'fullname', Load(), lineno=925, col_offset=21), [], [], None, None, lineno=925, col_offset=21), Subscript(Attribute(Name('self', Load(), lineno=925, col_offset=38), '_dict', Load(), lineno=925, col_offset=38), Index(Str('Pre-install-command', lineno=925, col_offset=49)), Load(), lineno=925, col_offset=38)], Load(), lineno=925, col_offset=21), lineno=924, col_offset=23), lineno=924, col_offset=16)], [], lineno=923, col_offset=12)], [], lineno=922, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=927, col_offset=8), 'beforeInstall', Load(), lineno=927, col_offset=8), [], [], None, None, lineno=927, col_offset=8), lineno=927, col_offset=8), Assign([Name('installcmd', Store(), lineno=929, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=929, col_offset=21), '_dict', Load(), lineno=929, col_offset=21), 'get', Load(), lineno=929, col_offset=21), [Str('Install-command', lineno=929, col_offset=36)], [], None, None, lineno=929, col_offset=21), lineno=929, col_offset=8), If(Name('installcmd', Load(), lineno=930, col_offset=11), [If(Compare(Str('%', lineno=931, col_offset=15), [In()], [Name('installcmd', Load(), lineno=931, col_offset=22)], lineno=931, col_offset=15), [Assign([Name('installcmd', Store(), lineno=932, col_offset=16)], BinOp(Name('installcmd', Load(), lineno=932, col_offset=29), Mod(), Attribute(Name('self', Load(), lineno=932, col_offset=42), 'archiveFilename', Load(), lineno=932, col_offset=42), lineno=932, col_offset=29), lineno=932, col_offset=16)], [], lineno=931, col_offset=12)], [Assign([Name('installcmd', Store(), lineno=934, col_offset=12)], BinOp(Str('open "%s"', lineno=934, col_offset=25), Mod(), Attribute(Name('self', Load(), lineno=934, col_offset=41), 'archiveFilename', Load(), lineno=934, col_offset=41), lineno=934, col_offset=25), lineno=934, col_offset=12)], lineno=930, col_offset=8), If(Call(Name('_cmd', Load(), lineno=935, col_offset=11), [Name('output', Load(), lineno=935, col_offset=16), Str('/tmp', lineno=935, col_offset=24), Name('installcmd', Load(), lineno=935, col_offset=32)], [], None, None, lineno=935, col_offset=11), [Return(BinOp(Str('%s: install command failed (use verbose for details)', lineno=936, col_offset=19), Mod(), Call(Attribute(Name('self', Load(), lineno=936, col_offset=76), 'fullname', Load(), lineno=936, col_offset=76), [], [], None, None, lineno=936, col_offset=76), lineno=936, col_offset=19), lineno=936, col_offset=12)], [], lineno=935, col_offset=8), Return(BinOp(Str('%s: downloaded and opened. Install manually and restart Package Manager', lineno=937, col_offset=15), Mod(), Attribute(Name('self', Load(), lineno=937, col_offset=91), 'archiveFilename', Load(), lineno=937, col_offset=91), lineno=937, col_offset=15), lineno=937, col_offset=8)], [], lineno=913, col_offset=4)], [], lineno=907, col_offset=0), ClassDef('PimpInstaller', [], [Expr(Str('Installer engine: computes dependencies and installs\n    packages in the right order.', lineno=941, col_offset=-1), lineno=941, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=943, col_offset=17), Name('db', Param(), lineno=943, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=944, col_offset=8), '_todo', Store(), lineno=944, col_offset=8)], List([], Load(), lineno=944, col_offset=21), lineno=944, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=945, col_offset=8), '_db', Store(), lineno=945, col_offset=8)], Name('db', Load(), lineno=945, col_offset=19), lineno=945, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=946, col_offset=8), '_curtodo', Store(), lineno=946, col_offset=8)], List([], Load(), lineno=946, col_offset=24), lineno=946, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=947, col_offset=8), '_curmessages', Store(), lineno=947, col_offset=8)], List([], Load(), lineno=947, col_offset=28), lineno=947, col_offset=8)], [], lineno=943, col_offset=4), FunctionDef('__contains__', arguments([Name('self', Param(), lineno=949, col_offset=21), Name('package', Param(), lineno=949, col_offset=27)], None, None, []), [Return(Compare(Name('package', Load(), lineno=950, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=950, col_offset=26), '_todo', Load(), lineno=950, col_offset=26)], lineno=950, col_offset=15), lineno=950, col_offset=8)], [], lineno=949, col_offset=4), FunctionDef('_addPackages', arguments([Name('self', Param(), lineno=952, col_offset=21), Name('packages', Param(), lineno=952, col_offset=27)], None, None, []), [For(Name('package', Store(), lineno=953, col_offset=12), Name('packages', Load(), lineno=953, col_offset=23), [If(UnaryOp(Not(), Compare(Name('package', Load(), lineno=954, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=954, col_offset=30), '_todo', Load(), lineno=954, col_offset=30)], lineno=954, col_offset=19), lineno=954, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=955, col_offset=16), '_todo', Load(), lineno=955, col_offset=16), 'append', Load(), lineno=955, col_offset=16), [Name('package', Load(), lineno=955, col_offset=34)], [], None, None, lineno=955, col_offset=16), lineno=955, col_offset=16)], [], lineno=954, col_offset=12)], [], lineno=953, col_offset=8)], [], lineno=952, col_offset=4), FunctionDef('_prepareInstall', arguments([Name('self', Param(), lineno=957, col_offset=24), Name('package', Param(), lineno=957, col_offset=30), Name('force', Param(), lineno=957, col_offset=39), Name('recursive', Param(), lineno=957, col_offset=48)], None, None, [Num(0, lineno=957, col_offset=45), Num(1, lineno=957, col_offset=58)]), [Expr(Str('Internal routine, recursive engine for prepareInstall.\n\n        Test whether the package is installed and (if not installed\n        or if force==1) prepend it to the temporary todo list and\n        call ourselves recursively on all prerequisites.', lineno=962, col_offset=-1), lineno=962, col_offset=-1), If(UnaryOp(Not(), Name('force', Load(), lineno=964, col_offset=15), lineno=964, col_offset=11), [Assign([Tuple([Name('status', Store(), lineno=965, col_offset=12), Name('message', Store(), lineno=965, col_offset=20)], Store(), lineno=965, col_offset=12)], Call(Attribute(Name('package', Load(), lineno=965, col_offset=30), 'installed', Load(), lineno=965, col_offset=30), [], [], None, None, lineno=965, col_offset=30), lineno=965, col_offset=12), If(Compare(Name('status', Load(), lineno=966, col_offset=15), [Eq()], [Str('yes', lineno=966, col_offset=25)], lineno=966, col_offset=15), [Return(None, lineno=967, col_offset=16)], [], lineno=966, col_offset=12)], [], lineno=964, col_offset=8), If(BoolOp(Or(), [Compare(Name('package', Load(), lineno=968, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=968, col_offset=22), '_todo', Load(), lineno=968, col_offset=22)], lineno=968, col_offset=11), Compare(Name('package', Load(), lineno=968, col_offset=36), [In()], [Attribute(Name('self', Load(), lineno=968, col_offset=47), '_curtodo', Load(), lineno=968, col_offset=47)], lineno=968, col_offset=36)], lineno=968, col_offset=11), [Return(None, lineno=969, col_offset=12)], [], lineno=968, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=970, col_offset=8), '_curtodo', Load(), lineno=970, col_offset=8), 'insert', Load(), lineno=970, col_offset=8), [Num(0, lineno=970, col_offset=29), Name('package', Load(), lineno=970, col_offset=32)], [], None, None, lineno=970, col_offset=8), lineno=970, col_offset=8), If(UnaryOp(Not(), Name('recursive', Load(), lineno=971, col_offset=15), lineno=971, col_offset=11), [Return(None, lineno=972, col_offset=12)], [], lineno=971, col_offset=8), Assign([Name('prereqs', Store(), lineno=973, col_offset=8)], Call(Attribute(Name('package', Load(), lineno=973, col_offset=18), 'prerequisites', Load(), lineno=973, col_offset=18), [], [], None, None, lineno=973, col_offset=18), lineno=973, col_offset=8), For(Tuple([Name('pkg', Store(), lineno=974, col_offset=12), Name('descr', Store(), lineno=974, col_offset=17)], Store(), lineno=974, col_offset=12), Name('prereqs', Load(), lineno=974, col_offset=26), [If(Name('pkg', Load(), lineno=975, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=976, col_offset=16), '_prepareInstall', Load(), lineno=976, col_offset=16), [Name('pkg', Load(), lineno=976, col_offset=37), Name('False', Load(), lineno=976, col_offset=42), Name('recursive', Load(), lineno=976, col_offset=49)], [], None, None, lineno=976, col_offset=16), lineno=976, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=978, col_offset=16), '_curmessages', Load(), lineno=978, col_offset=16), 'append', Load(), lineno=978, col_offset=16), [BinOp(Str('Problem with dependency: %s', lineno=978, col_offset=41), Mod(), Name('descr', Load(), lineno=978, col_offset=73), lineno=978, col_offset=41)], [], None, None, lineno=978, col_offset=16), lineno=978, col_offset=16)], lineno=975, col_offset=12)], [], lineno=974, col_offset=8)], [], lineno=957, col_offset=4), FunctionDef('prepareInstall', arguments([Name('self', Param(), lineno=980, col_offset=23), Name('package', Param(), lineno=980, col_offset=29), Name('force', Param(), lineno=980, col_offset=38), Name('recursive', Param(), lineno=980, col_offset=47)], None, None, [Num(0, lineno=980, col_offset=44), Num(1, lineno=980, col_offset=57)]), [Expr(Str('Prepare installation of a package.\n\n        If the package is already installed and force is false nothing\n        is done. If recursive is true prerequisites are installed first.\n\n        Returns a list of packages (to be passed to install) and a list\n        of messages of any problems encountered.\n        ', lineno=988, col_offset=-1), lineno=988, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=990, col_offset=8), '_curtodo', Store(), lineno=990, col_offset=8)], List([], Load(), lineno=990, col_offset=24), lineno=990, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=991, col_offset=8), '_curmessages', Store(), lineno=991, col_offset=8)], List([], Load(), lineno=991, col_offset=28), lineno=991, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=992, col_offset=8), '_prepareInstall', Load(), lineno=992, col_offset=8), [Name('package', Load(), lineno=992, col_offset=29), Name('force', Load(), lineno=992, col_offset=38), Name('recursive', Load(), lineno=992, col_offset=45)], [], None, None, lineno=992, col_offset=8), lineno=992, col_offset=8), Assign([Name('rv', Store(), lineno=993, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=993, col_offset=13), '_curtodo', Load(), lineno=993, col_offset=13), Attribute(Name('self', Load(), lineno=993, col_offset=28), '_curmessages', Load(), lineno=993, col_offset=28)], Load(), lineno=993, col_offset=13), lineno=993, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=994, col_offset=8), '_curtodo', Store(), lineno=994, col_offset=8)], List([], Load(), lineno=994, col_offset=24), lineno=994, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=995, col_offset=8), '_curmessages', Store(), lineno=995, col_offset=8)], List([], Load(), lineno=995, col_offset=28), lineno=995, col_offset=8), Return(Name('rv', Load(), lineno=996, col_offset=15), lineno=996, col_offset=8)], [], lineno=980, col_offset=4), FunctionDef('install', arguments([Name('self', Param(), lineno=998, col_offset=16), Name('packages', Param(), lineno=998, col_offset=22), Name('output', Param(), lineno=998, col_offset=32)], None, None, []), [Expr(Str('Install a list of packages.', lineno=999, col_offset=8), lineno=999, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1001, col_offset=8), '_addPackages', Load(), lineno=1001, col_offset=8), [Name('packages', Load(), lineno=1001, col_offset=26)], [], None, None, lineno=1001, col_offset=8), lineno=1001, col_offset=8), Assign([Name('status', Store(), lineno=1002, col_offset=8)], List([], Load(), lineno=1002, col_offset=17), lineno=1002, col_offset=8), For(Name('pkg', Store(), lineno=1003, col_offset=12), Attribute(Name('self', Load(), lineno=1003, col_offset=19), '_todo', Load(), lineno=1003, col_offset=19), [Assign([Name('msg', Store(), lineno=1004, col_offset=12)], Call(Attribute(Name('pkg', Load(), lineno=1004, col_offset=18), 'installSinglePackage', Load(), lineno=1004, col_offset=18), [Name('output', Load(), lineno=1004, col_offset=43)], [], None, None, lineno=1004, col_offset=18), lineno=1004, col_offset=12), If(Name('msg', Load(), lineno=1005, col_offset=15), [Expr(Call(Attribute(Name('status', Load(), lineno=1006, col_offset=16), 'append', Load(), lineno=1006, col_offset=16), [Name('msg', Load(), lineno=1006, col_offset=30)], [], None, None, lineno=1006, col_offset=16), lineno=1006, col_offset=16)], [], lineno=1005, col_offset=12)], [], lineno=1003, col_offset=8), Return(Name('status', Load(), lineno=1007, col_offset=15), lineno=1007, col_offset=8)], [], lineno=998, col_offset=4)], [], lineno=939, col_offset=0), FunctionDef('_run', arguments([Name('mode', Param(), lineno=1011, col_offset=9), Name('verbose', Param(), lineno=1011, col_offset=15), Name('force', Param(), lineno=1011, col_offset=24), Name('args', Param(), lineno=1011, col_offset=31), Name('prefargs', Param(), lineno=1011, col_offset=37), Name('watcher', Param(), lineno=1011, col_offset=47)], None, None, []), [Expr(Str('Engine for the main program', lineno=1012, col_offset=4), lineno=1012, col_offset=4), Assign([Name('prefs', Store(), lineno=1014, col_offset=4)], Call(Name('PimpPreferences', Load(), lineno=1014, col_offset=12), [], [], None, Name('prefargs', Load(), lineno=1014, col_offset=30), lineno=1014, col_offset=12), lineno=1014, col_offset=4), If(Name('watcher', Load(), lineno=1015, col_offset=7), [Expr(Call(Attribute(Name('prefs', Load(), lineno=1016, col_offset=8), 'setWatcher', Load(), lineno=1016, col_offset=8), [Name('watcher', Load(), lineno=1016, col_offset=25)], [], None, None, lineno=1016, col_offset=8), lineno=1016, col_offset=8)], [], lineno=1015, col_offset=4), Assign([Name('rv', Store(), lineno=1017, col_offset=4)], Call(Attribute(Name('prefs', Load(), lineno=1017, col_offset=9), 'check', Load(), lineno=1017, col_offset=9), [], [], None, None, lineno=1017, col_offset=9), lineno=1017, col_offset=4), If(Name('rv', Load(), lineno=1018, col_offset=7), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1019, col_offset=8), 'stdout', Load(), lineno=1019, col_offset=8), 'write', Load(), lineno=1019, col_offset=8), [Name('rv', Load(), lineno=1019, col_offset=25)], [], None, None, lineno=1019, col_offset=8), lineno=1019, col_offset=8)], [], lineno=1018, col_offset=4), Assign([Name('db', Store(), lineno=1020, col_offset=4)], Call(Name('PimpDatabase', Load(), lineno=1020, col_offset=9), [Name('prefs', Load(), lineno=1020, col_offset=22)], [], None, None, lineno=1020, col_offset=9), lineno=1020, col_offset=4), Expr(Call(Attribute(Name('db', Load(), lineno=1021, col_offset=4), 'appendURL', Load(), lineno=1021, col_offset=4), [Attribute(Name('prefs', Load(), lineno=1021, col_offset=17), 'pimpDatabase', Load(), lineno=1021, col_offset=17)], [], None, None, lineno=1021, col_offset=4), lineno=1021, col_offset=4), If(Compare(Name('mode', Load(), lineno=1023, col_offset=7), [Eq()], [Str('dump', lineno=1023, col_offset=15)], lineno=1023, col_offset=7), [Expr(Call(Attribute(Name('db', Load(), lineno=1024, col_offset=8), 'dump', Load(), lineno=1024, col_offset=8), [Attribute(Name('sys', Load(), lineno=1024, col_offset=16), 'stdout', Load(), lineno=1024, col_offset=16)], [], None, None, lineno=1024, col_offset=8), lineno=1024, col_offset=8)], [If(Compare(Name('mode', Load(), lineno=1025, col_offset=9), [Eq()], [Str('list', lineno=1025, col_offset=16)], lineno=1025, col_offset=9), [If(UnaryOp(Not(), Name('args', Load(), lineno=1026, col_offset=15), lineno=1026, col_offset=11), [Assign([Name('args', Store(), lineno=1027, col_offset=12)], Call(Attribute(Name('db', Load(), lineno=1027, col_offset=19), 'listnames', Load(), lineno=1027, col_offset=19), [], [], None, None, lineno=1027, col_offset=19), lineno=1027, col_offset=12)], [], lineno=1026, col_offset=8), Print(None, [BinOp(Str('%-20.20s\t%s', lineno=1028, col_offset=14), Mod(), Tuple([Str('Package', lineno=1028, col_offset=32), Str('Description', lineno=1028, col_offset=43)], Load(), lineno=1028, col_offset=32), lineno=1028, col_offset=14)], True, lineno=1028, col_offset=8), Print(None, [], True, lineno=1029, col_offset=8), For(Name('pkgname', Store(), lineno=1030, col_offset=12), Name('args', Load(), lineno=1030, col_offset=23), [Assign([Name('pkg', Store(), lineno=1031, col_offset=12)], Call(Attribute(Name('db', Load(), lineno=1031, col_offset=18), 'find', Load(), lineno=1031, col_offset=18), [Name('pkgname', Load(), lineno=1031, col_offset=26)], [], None, None, lineno=1031, col_offset=18), lineno=1031, col_offset=12), If(Name('pkg', Load(), lineno=1032, col_offset=15), [Assign([Name('description', Store(), lineno=1033, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1033, col_offset=30), 'shortdescription', Load(), lineno=1033, col_offset=30), [], [], None, None, lineno=1033, col_offset=30), lineno=1033, col_offset=16), Assign([Name('pkgname', Store(), lineno=1034, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1034, col_offset=26), 'fullname', Load(), lineno=1034, col_offset=26), [], [], None, None, lineno=1034, col_offset=26), lineno=1034, col_offset=16)], [Assign([Name('description', Store(), lineno=1036, col_offset=16)], Str('Error: no such package', lineno=1036, col_offset=30), lineno=1036, col_offset=16)], lineno=1032, col_offset=12), Print(None, [BinOp(Str('%-20.20s\t%s', lineno=1037, col_offset=18), Mod(), Tuple([Name('pkgname', Load(), lineno=1037, col_offset=36), Name('description', Load(), lineno=1037, col_offset=45)], Load(), lineno=1037, col_offset=36), lineno=1037, col_offset=18)], True, lineno=1037, col_offset=12), If(Name('verbose', Load(), lineno=1038, col_offset=15), [Print(None, [Str('\tHome page:\t', lineno=1039, col_offset=22), Call(Attribute(Name('pkg', Load(), lineno=1039, col_offset=40), 'homepage', Load(), lineno=1039, col_offset=40), [], [], None, None, lineno=1039, col_offset=40)], True, lineno=1039, col_offset=16), TryExcept([Print(None, [Str('\tDownload URL:\t', lineno=1041, col_offset=26), Call(Attribute(Name('pkg', Load(), lineno=1041, col_offset=47), 'downloadURL', Load(), lineno=1041, col_offset=47), [], [], None, None, lineno=1041, col_offset=47)], True, lineno=1041, col_offset=20)], [ExceptHandler(Name('KeyError', Load(), lineno=1042, col_offset=23), None, [Pass( lineno=1043, col_offset=20)], lineno=1042, col_offset=16)], [], lineno=1040, col_offset=16), Assign([Name('description', Store(), lineno=1044, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1044, col_offset=30), 'description', Load(), lineno=1044, col_offset=30), [], [], None, None, lineno=1044, col_offset=30), lineno=1044, col_offset=16), Assign([Name('description', Store(), lineno=1045, col_offset=16)], Call(Attribute(Str('\n\t\t\t\t\t', lineno=1045, col_offset=30), 'join', Load(), lineno=1045, col_offset=30), [Call(Attribute(Name('description', Load(), lineno=1045, col_offset=50), 'splitlines', Load(), lineno=1045, col_offset=50), [], [], None, None, lineno=1045, col_offset=50)], [], None, None, lineno=1045, col_offset=30), lineno=1045, col_offset=16), Print(None, [BinOp(Str('\tDescription:\t%s', lineno=1046, col_offset=22), Mod(), Name('description', Load(), lineno=1046, col_offset=45), lineno=1046, col_offset=22)], True, lineno=1046, col_offset=16)], [], lineno=1038, col_offset=12)], [], lineno=1030, col_offset=8)], [If(Compare(Name('mode', Load(), lineno=1047, col_offset=9), [Eq()], [Str('status', lineno=1047, col_offset=16)], lineno=1047, col_offset=9), [If(UnaryOp(Not(), Name('args', Load(), lineno=1048, col_offset=15), lineno=1048, col_offset=11), [Assign([Name('args', Store(), lineno=1049, col_offset=12)], Call(Attribute(Name('db', Load(), lineno=1049, col_offset=19), 'listnames', Load(), lineno=1049, col_offset=19), [], [], None, None, lineno=1049, col_offset=19), lineno=1049, col_offset=12), Print(None, [BinOp(Str('%-20.20s\t%s\t%s', lineno=1050, col_offset=18), Mod(), Tuple([Str('Package', lineno=1050, col_offset=40), Str('Installed', lineno=1050, col_offset=51), Str('Message', lineno=1050, col_offset=64)], Load(), lineno=1050, col_offset=40), lineno=1050, col_offset=18)], True, lineno=1050, col_offset=12), Print(None, [], True, lineno=1051, col_offset=12)], [], lineno=1048, col_offset=8), For(Name('pkgname', Store(), lineno=1052, col_offset=12), Name('args', Load(), lineno=1052, col_offset=23), [Assign([Name('pkg', Store(), lineno=1053, col_offset=12)], Call(Attribute(Name('db', Load(), lineno=1053, col_offset=18), 'find', Load(), lineno=1053, col_offset=18), [Name('pkgname', Load(), lineno=1053, col_offset=26)], [], None, None, lineno=1053, col_offset=18), lineno=1053, col_offset=12), If(Name('pkg', Load(), lineno=1054, col_offset=15), [Assign([Tuple([Name('status', Store(), lineno=1055, col_offset=16), Name('msg', Store(), lineno=1055, col_offset=24)], Store(), lineno=1055, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1055, col_offset=30), 'installed', Load(), lineno=1055, col_offset=30), [], [], None, None, lineno=1055, col_offset=30), lineno=1055, col_offset=16), Assign([Name('pkgname', Store(), lineno=1056, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1056, col_offset=26), 'fullname', Load(), lineno=1056, col_offset=26), [], [], None, None, lineno=1056, col_offset=26), lineno=1056, col_offset=16)], [Assign([Name('status', Store(), lineno=1058, col_offset=16)], Str('error', lineno=1058, col_offset=25), lineno=1058, col_offset=16), Assign([Name('msg', Store(), lineno=1059, col_offset=16)], Str('No such package', lineno=1059, col_offset=22), lineno=1059, col_offset=16)], lineno=1054, col_offset=12), Print(None, [BinOp(Str('%-20.20s\t%-9.9s\t%s', lineno=1060, col_offset=18), Mod(), Tuple([Name('pkgname', Load(), lineno=1060, col_offset=44), Name('status', Load(), lineno=1060, col_offset=53), Name('msg', Load(), lineno=1060, col_offset=61)], Load(), lineno=1060, col_offset=44), lineno=1060, col_offset=18)], True, lineno=1060, col_offset=12), If(BoolOp(And(), [Name('verbose', Load(), lineno=1061, col_offset=15), Compare(Name('status', Load(), lineno=1061, col_offset=27), [Eq()], [Str('no', lineno=1061, col_offset=37)], lineno=1061, col_offset=27)], lineno=1061, col_offset=15), [Assign([Name('prereq', Store(), lineno=1062, col_offset=16)], Call(Attribute(Name('pkg', Load(), lineno=1062, col_offset=25), 'prerequisites', Load(), lineno=1062, col_offset=25), [], [], None, None, lineno=1062, col_offset=25), lineno=1062, col_offset=16), For(Tuple([Name('pkg', Store(), lineno=1063, col_offset=20), Name('msg', Store(), lineno=1063, col_offset=25)], Store(), lineno=1063, col_offset=20), Name('prereq', Load(), lineno=1063, col_offset=32), [If(UnaryOp(Not(), Name('pkg', Load(), lineno=1064, col_offset=27), lineno=1064, col_offset=23), [Assign([Name('pkg', Store(), lineno=1065, col_offset=24)], Str('', lineno=1065, col_offset=30), lineno=1065, col_offset=24)], [Assign([Name('pkg', Store(), lineno=1067, col_offset=24)], Call(Attribute(Name('pkg', Load(), lineno=1067, col_offset=30), 'fullname', Load(), lineno=1067, col_offset=30), [], [], None, None, lineno=1067, col_offset=30), lineno=1067, col_offset=24)], lineno=1064, col_offset=20), Print(None, [BinOp(Str('%-20.20s\tRequirement: %s %s', lineno=1068, col_offset=26), Mod(), Tuple([Str('', lineno=1068, col_offset=60), Name('pkg', Load(), lineno=1068, col_offset=64), Name('msg', Load(), lineno=1068, col_offset=69)], Load(), lineno=1068, col_offset=60), lineno=1068, col_offset=26)], True, lineno=1068, col_offset=20)], [], lineno=1063, col_offset=16)], [], lineno=1061, col_offset=12)], [], lineno=1052, col_offset=8)], [If(Compare(Name('mode', Load(), lineno=1069, col_offset=9), [Eq()], [Str('install', lineno=1069, col_offset=17)], lineno=1069, col_offset=9), [If(UnaryOp(Not(), Name('args', Load(), lineno=1070, col_offset=15), lineno=1070, col_offset=11), [Print(None, [Str('Please specify packages to install', lineno=1071, col_offset=18)], True, lineno=1071, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=1072, col_offset=12), 'exit', Load(), lineno=1072, col_offset=12), [Num(1, lineno=1072, col_offset=21)], [], None, None, lineno=1072, col_offset=12), lineno=1072, col_offset=12)], [], lineno=1070, col_offset=8), Assign([Name('inst', Store(), lineno=1073, col_offset=8)], Call(Name('PimpInstaller', Load(), lineno=1073, col_offset=15), [Name('db', Load(), lineno=1073, col_offset=29)], [], None, None, lineno=1073, col_offset=15), lineno=1073, col_offset=8), For(Name('pkgname', Store(), lineno=1074, col_offset=12), Name('args', Load(), lineno=1074, col_offset=23), [Assign([Name('pkg', Store(), lineno=1075, col_offset=12)], Call(Attribute(Name('db', Load(), lineno=1075, col_offset=18), 'find', Load(), lineno=1075, col_offset=18), [Name('pkgname', Load(), lineno=1075, col_offset=26)], [], None, None, lineno=1075, col_offset=18), lineno=1075, col_offset=12), If(UnaryOp(Not(), Name('pkg', Load(), lineno=1076, col_offset=19), lineno=1076, col_offset=15), [Print(None, [BinOp(Str('%s: No such package', lineno=1077, col_offset=22), Mod(), Name('pkgname', Load(), lineno=1077, col_offset=46), lineno=1077, col_offset=22)], True, lineno=1077, col_offset=16), Continue( lineno=1078, col_offset=16)], [], lineno=1076, col_offset=12), Assign([Tuple([Name('list', Store(), lineno=1079, col_offset=12), Name('messages', Store(), lineno=1079, col_offset=18)], Store(), lineno=1079, col_offset=12)], Call(Attribute(Name('inst', Load(), lineno=1079, col_offset=29), 'prepareInstall', Load(), lineno=1079, col_offset=29), [Name('pkg', Load(), lineno=1079, col_offset=49), Name('force', Load(), lineno=1079, col_offset=54)], [], None, None, lineno=1079, col_offset=29), lineno=1079, col_offset=12), If(BoolOp(And(), [Name('messages', Load(), lineno=1080, col_offset=15), UnaryOp(Not(), Name('force', Load(), lineno=1080, col_offset=32), lineno=1080, col_offset=28)], lineno=1080, col_offset=15), [Print(None, [BinOp(Str('%s: Not installed:', lineno=1081, col_offset=22), Mod(), Name('pkgname', Load(), lineno=1081, col_offset=45), lineno=1081, col_offset=22)], True, lineno=1081, col_offset=16), For(Name('m', Store(), lineno=1082, col_offset=20), Name('messages', Load(), lineno=1082, col_offset=25), [Print(None, [Str('\t', lineno=1083, col_offset=26), Name('m', Load(), lineno=1083, col_offset=32)], True, lineno=1083, col_offset=20)], [], lineno=1082, col_offset=16)], [If(Name('verbose', Load(), lineno=1085, col_offset=19), [Assign([Name('output', Store(), lineno=1086, col_offset=20)], Attribute(Name('sys', Load(), lineno=1086, col_offset=29), 'stdout', Load(), lineno=1086, col_offset=29), lineno=1086, col_offset=20)], [Assign([Name('output', Store(), lineno=1088, col_offset=20)], Name('None', Load(), lineno=1088, col_offset=29), lineno=1088, col_offset=20)], lineno=1085, col_offset=16), Assign([Name('messages', Store(), lineno=1089, col_offset=16)], Call(Attribute(Name('inst', Load(), lineno=1089, col_offset=27), 'install', Load(), lineno=1089, col_offset=27), [Name('list', Load(), lineno=1089, col_offset=40), Name('output', Load(), lineno=1089, col_offset=46)], [], None, None, lineno=1089, col_offset=27), lineno=1089, col_offset=16), If(Name('messages', Load(), lineno=1090, col_offset=19), [Print(None, [BinOp(Str('%s: Not installed:', lineno=1091, col_offset=26), Mod(), Name('pkgname', Load(), lineno=1091, col_offset=49), lineno=1091, col_offset=26)], True, lineno=1091, col_offset=20), For(Name('m', Store(), lineno=1092, col_offset=24), Name('messages', Load(), lineno=1092, col_offset=29), [Print(None, [Str('\t', lineno=1093, col_offset=30), Name('m', Load(), lineno=1093, col_offset=36)], True, lineno=1093, col_offset=24)], [], lineno=1092, col_offset=20)], [], lineno=1090, col_offset=16)], lineno=1080, col_offset=12)], [], lineno=1074, col_offset=8)], [], lineno=1069, col_offset=9)], lineno=1047, col_offset=9)], lineno=1025, col_offset=9)], lineno=1023, col_offset=4)], [], lineno=1011, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Expr(Str('Minimal commandline tool to drive pimp.', lineno=1096, col_offset=4), lineno=1096, col_offset=4), Import([alias('getopt', None)], lineno=1098, col_offset=4), FunctionDef('_help', arguments([], None, None, []), [Print(None, [Str('Usage: pimp [options] -s [package ...]  List installed status', lineno=1100, col_offset=14)], True, lineno=1100, col_offset=8), Print(None, [Str('       pimp [options] -l [package ...]  Show package information', lineno=1101, col_offset=14)], True, lineno=1101, col_offset=8), Print(None, [Str('       pimp [options] -i package ...    Install packages', lineno=1102, col_offset=14)], True, lineno=1102, col_offset=8), Print(None, [Str('       pimp -d                          Dump database to stdout', lineno=1103, col_offset=14)], True, lineno=1103, col_offset=8), Print(None, [Str('       pimp -V                          Print version number', lineno=1104, col_offset=14)], True, lineno=1104, col_offset=8), Print(None, [Str('Options:', lineno=1105, col_offset=14)], True, lineno=1105, col_offset=8), Print(None, [Str('       -v     Verbose', lineno=1106, col_offset=14)], True, lineno=1106, col_offset=8), Print(None, [Str('       -f     Force installation', lineno=1107, col_offset=14)], True, lineno=1107, col_offset=8), Print(None, [Str('       -D dir Set destination directory', lineno=1108, col_offset=14)], True, lineno=1108, col_offset=8), Print(None, [BinOp(Str('              (default: %s)', lineno=1109, col_offset=14), Mod(), Name('DEFAULT_INSTALLDIR', Load(), lineno=1109, col_offset=46), lineno=1109, col_offset=14)], True, lineno=1109, col_offset=8), Print(None, [Str('       -u url URL for database', lineno=1110, col_offset=14)], True, lineno=1110, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1111, col_offset=8), 'exit', Load(), lineno=1111, col_offset=8), [Num(1, lineno=1111, col_offset=17)], [], None, None, lineno=1111, col_offset=8), lineno=1111, col_offset=8)], [], lineno=1099, col_offset=4), ClassDef('_Watcher', [], [FunctionDef('update', arguments([Name('self', Param(), lineno=1114, col_offset=19), Name('msg', Param(), lineno=1114, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1115, col_offset=12), 'stderr', Load(), lineno=1115, col_offset=12), 'write', Load(), lineno=1115, col_offset=12), [BinOp(Name('msg', Load(), lineno=1115, col_offset=29), Add(), Str('\r', lineno=1115, col_offset=35), lineno=1115, col_offset=29)], [], None, None, lineno=1115, col_offset=12), lineno=1115, col_offset=12), Return(Num(1, lineno=1116, col_offset=19), lineno=1116, col_offset=12)], [], lineno=1114, col_offset=8)], [], lineno=1113, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=1119, col_offset=8), Name('args', Store(), lineno=1119, col_offset=14)], Store(), lineno=1119, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=1119, col_offset=21), 'getopt', Load(), lineno=1119, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=1119, col_offset=35), 'argv', Load(), lineno=1119, col_offset=35), Slice(Num(1, lineno=1119, col_offset=44), None, None), Load(), lineno=1119, col_offset=35), Str('slifvdD:Vu:', lineno=1119, col_offset=49)], [], None, None, lineno=1119, col_offset=21), lineno=1119, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=1120, col_offset=11), 'GetoptError', Load(), lineno=1120, col_offset=11), None, [Expr(Call(Name('_help', Load(), lineno=1121, col_offset=8), [], [], None, None, lineno=1121, col_offset=8), lineno=1121, col_offset=8)], lineno=1120, col_offset=4)], [], lineno=1118, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Name('opts', Load(), lineno=1122, col_offset=11), lineno=1122, col_offset=7), UnaryOp(Not(), Name('args', Load(), lineno=1122, col_offset=24), lineno=1122, col_offset=20)], lineno=1122, col_offset=7), [Expr(Call(Name('_help', Load(), lineno=1123, col_offset=8), [], [], None, None, lineno=1123, col_offset=8), lineno=1123, col_offset=8)], [], lineno=1122, col_offset=4), Assign([Name('mode', Store(), lineno=1124, col_offset=4)], Name('None', Load(), lineno=1124, col_offset=11), lineno=1124, col_offset=4), Assign([Name('force', Store(), lineno=1125, col_offset=4)], Num(0, lineno=1125, col_offset=12), lineno=1125, col_offset=4), Assign([Name('verbose', Store(), lineno=1126, col_offset=4)], Num(0, lineno=1126, col_offset=14), lineno=1126, col_offset=4), Assign([Name('prefargs', Store(), lineno=1127, col_offset=4)], Dict([], [], lineno=1127, col_offset=15), lineno=1127, col_offset=4), Assign([Name('watcher', Store(), lineno=1128, col_offset=4)], Name('None', Load(), lineno=1128, col_offset=14), lineno=1128, col_offset=4), For(Tuple([Name('o', Store(), lineno=1129, col_offset=8), Name('a', Store(), lineno=1129, col_offset=11)], Store(), lineno=1129, col_offset=8), Name('opts', Load(), lineno=1129, col_offset=16), [If(Compare(Name('o', Load(), lineno=1130, col_offset=11), [Eq()], [Str('-s', lineno=1130, col_offset=16)], lineno=1130, col_offset=11), [If(Name('mode', Load(), lineno=1131, col_offset=15), [Expr(Call(Name('_help', Load(), lineno=1132, col_offset=16), [], [], None, None, lineno=1132, col_offset=16), lineno=1132, col_offset=16)], [], lineno=1131, col_offset=12), Assign([Name('mode', Store(), lineno=1133, col_offset=12)], Str('status', lineno=1133, col_offset=19), lineno=1133, col_offset=12)], [], lineno=1130, col_offset=8), If(Compare(Name('o', Load(), lineno=1134, col_offset=11), [Eq()], [Str('-l', lineno=1134, col_offset=16)], lineno=1134, col_offset=11), [If(Name('mode', Load(), lineno=1135, col_offset=15), [Expr(Call(Name('_help', Load(), lineno=1136, col_offset=16), [], [], None, None, lineno=1136, col_offset=16), lineno=1136, col_offset=16)], [], lineno=1135, col_offset=12), Assign([Name('mode', Store(), lineno=1137, col_offset=12)], Str('list', lineno=1137, col_offset=19), lineno=1137, col_offset=12)], [], lineno=1134, col_offset=8), If(Compare(Name('o', Load(), lineno=1138, col_offset=11), [Eq()], [Str('-d', lineno=1138, col_offset=16)], lineno=1138, col_offset=11), [If(Name('mode', Load(), lineno=1139, col_offset=15), [Expr(Call(Name('_help', Load(), lineno=1140, col_offset=16), [], [], None, None, lineno=1140, col_offset=16), lineno=1140, col_offset=16)], [], lineno=1139, col_offset=12), Assign([Name('mode', Store(), lineno=1141, col_offset=12)], Str('dump', lineno=1141, col_offset=19), lineno=1141, col_offset=12)], [], lineno=1138, col_offset=8), If(Compare(Name('o', Load(), lineno=1142, col_offset=11), [Eq()], [Str('-V', lineno=1142, col_offset=16)], lineno=1142, col_offset=11), [If(Name('mode', Load(), lineno=1143, col_offset=15), [Expr(Call(Name('_help', Load(), lineno=1144, col_offset=16), [], [], None, None, lineno=1144, col_offset=16), lineno=1144, col_offset=16)], [], lineno=1143, col_offset=12), Assign([Name('mode', Store(), lineno=1145, col_offset=12)], Str('version', lineno=1145, col_offset=19), lineno=1145, col_offset=12)], [], lineno=1142, col_offset=8), If(Compare(Name('o', Load(), lineno=1146, col_offset=11), [Eq()], [Str('-i', lineno=1146, col_offset=16)], lineno=1146, col_offset=11), [Assign([Name('mode', Store(), lineno=1147, col_offset=12)], Str('install', lineno=1147, col_offset=19), lineno=1147, col_offset=12)], [], lineno=1146, col_offset=8), If(Compare(Name('o', Load(), lineno=1148, col_offset=11), [Eq()], [Str('-f', lineno=1148, col_offset=16)], lineno=1148, col_offset=11), [Assign([Name('force', Store(), lineno=1149, col_offset=12)], Num(1, lineno=1149, col_offset=20), lineno=1149, col_offset=12)], [], lineno=1148, col_offset=8), If(Compare(Name('o', Load(), lineno=1150, col_offset=11), [Eq()], [Str('-v', lineno=1150, col_offset=16)], lineno=1150, col_offset=11), [Assign([Name('verbose', Store(), lineno=1151, col_offset=12)], Num(1, lineno=1151, col_offset=22), lineno=1151, col_offset=12), Assign([Name('watcher', Store(), lineno=1152, col_offset=12)], Call(Name('_Watcher', Load(), lineno=1152, col_offset=22), [], [], None, None, lineno=1152, col_offset=22), lineno=1152, col_offset=12)], [], lineno=1150, col_offset=8), If(Compare(Name('o', Load(), lineno=1153, col_offset=11), [Eq()], [Str('-D', lineno=1153, col_offset=16)], lineno=1153, col_offset=11), [Assign([Subscript(Name('prefargs', Load(), lineno=1154, col_offset=12), Index(Str('installDir', lineno=1154, col_offset=21)), Store(), lineno=1154, col_offset=12)], Name('a', Load(), lineno=1154, col_offset=37), lineno=1154, col_offset=12)], [], lineno=1153, col_offset=8), If(Compare(Name('o', Load(), lineno=1155, col_offset=11), [Eq()], [Str('-u', lineno=1155, col_offset=16)], lineno=1155, col_offset=11), [Assign([Subscript(Name('prefargs', Load(), lineno=1156, col_offset=12), Index(Str('pimpDatabase', lineno=1156, col_offset=21)), Store(), lineno=1156, col_offset=12)], Name('a', Load(), lineno=1156, col_offset=39), lineno=1156, col_offset=12)], [], lineno=1155, col_offset=8)], [], lineno=1129, col_offset=4), If(UnaryOp(Not(), Name('mode', Load(), lineno=1157, col_offset=11), lineno=1157, col_offset=7), [Expr(Call(Name('_help', Load(), lineno=1158, col_offset=8), [], [], None, None, lineno=1158, col_offset=8), lineno=1158, col_offset=8)], [], lineno=1157, col_offset=4), If(Compare(Name('mode', Load(), lineno=1159, col_offset=7), [Eq()], [Str('version', lineno=1159, col_offset=15)], lineno=1159, col_offset=7), [Print(None, [BinOp(Str('Pimp version %s; module name is %s', lineno=1160, col_offset=14), Mod(), Tuple([Name('PIMP_VERSION', Load(), lineno=1160, col_offset=54), Name('__name__', Load(), lineno=1160, col_offset=68)], Load(), lineno=1160, col_offset=54), lineno=1160, col_offset=14)], True, lineno=1160, col_offset=8)], [Expr(Call(Name('_run', Load(), lineno=1162, col_offset=8), [Name('mode', Load(), lineno=1162, col_offset=13), Name('verbose', Load(), lineno=1162, col_offset=19), Name('force', Load(), lineno=1162, col_offset=28), Name('args', Load(), lineno=1162, col_offset=35), Name('prefargs', Load(), lineno=1162, col_offset=41), Name('watcher', Load(), lineno=1162, col_offset=51)], [], None, None, lineno=1162, col_offset=8), lineno=1162, col_offset=8)], lineno=1159, col_offset=4)], [], lineno=1095, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1168, col_offset=3), [NotEq()], [Str('pimp_update', lineno=1168, col_offset=15)], lineno=1168, col_offset=3), [TryExcept([Import([alias('pimp_update', None)], lineno=1170, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=1171, col_offset=11), None, [Pass( lineno=1172, col_offset=8)], lineno=1171, col_offset=4)], [If(Compare(Attribute(Name('pimp_update', Load(), lineno=1174, col_offset=11), 'PIMP_VERSION', Load(), lineno=1174, col_offset=11), [LtE()], [Name('PIMP_VERSION', Load(), lineno=1174, col_offset=39)], lineno=1174, col_offset=11), [Import([alias('warnings', None)], lineno=1175, col_offset=12), Expr(Call(Attribute(Name('warnings', Load(), lineno=1176, col_offset=12), 'warn', Load(), lineno=1176, col_offset=12), [BinOp(Str('pimp_update is version %s, not newer than pimp version %s', lineno=1176, col_offset=26), Mod(), Tuple([Attribute(Name('pimp_update', Load(), lineno=1177, col_offset=17), 'PIMP_VERSION', Load(), lineno=1177, col_offset=17), Name('PIMP_VERSION', Load(), lineno=1177, col_offset=43)], Load(), lineno=1177, col_offset=17), lineno=1176, col_offset=26)], [], None, None, lineno=1176, col_offset=12), lineno=1176, col_offset=12)], [ImportFrom('pimp_update', [alias('*', None)], 0, lineno=1179, col_offset=12)], lineno=1174, col_offset=8)], lineno=1169, col_offset=4)], [], lineno=1168, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1181, col_offset=3), [Eq()], [Str('__main__', lineno=1181, col_offset=15)], lineno=1181, col_offset=3), [Expr(Call(Name('main', Load(), lineno=1182, col_offset=4), [], [], None, None, lineno=1182, col_offset=4), lineno=1182, col_offset=4)], [], lineno=1181, col_offset=0)])
