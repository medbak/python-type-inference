Module([Import([alias('string', None)], lineno=6, col_offset=0), Assign([Name('MACHEADERFILE', Store(), lineno=9, col_offset=0)], Str('Components.h', lineno=9, col_offset=16), lineno=9, col_offset=0), Assign([Name('MODNAME', Store(), lineno=10, col_offset=0)], Str('_Cm', lineno=10, col_offset=10), lineno=10, col_offset=0), Assign([Name('MODPREFIX', Store(), lineno=13, col_offset=0)], Str('Cm', lineno=13, col_offset=12), lineno=13, col_offset=0), Assign([Name('C_OBJECTPREFIX', Store(), lineno=14, col_offset=0)], Str('CmpObj', lineno=14, col_offset=17), lineno=14, col_offset=0), Assign([Name('CI_OBJECTPREFIX', Store(), lineno=15, col_offset=0)], Str('CmpInstObj', lineno=15, col_offset=18), lineno=15, col_offset=0), Assign([Name('INPUTFILE', Store(), lineno=16, col_offset=0)], BinOp(Call(Attribute(Name('string', Load(), lineno=16, col_offset=12), 'lower', Load(), lineno=16, col_offset=12), [Name('MODPREFIX', Load(), lineno=16, col_offset=25)], [], None, None, lineno=16, col_offset=12), Add(), Str('gen.py', lineno=16, col_offset=38), lineno=16, col_offset=12), lineno=16, col_offset=0), Assign([Name('OUTPUTFILE', Store(), lineno=17, col_offset=0)], BinOp(Name('MODNAME', Load(), lineno=17, col_offset=13), Add(), Str('module.c', lineno=17, col_offset=23), lineno=17, col_offset=13), lineno=17, col_offset=0), ImportFrom('macsupport', [alias('*', None)], 0, lineno=19, col_offset=0), Assign([Name('includestuff', Store(), lineno=23, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=23, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n\n#ifdef USE_TOOLBOX_OBJECT_GLUE\nextern PyObject *_CmpObj_New(Component);\nextern int _CmpObj_Convert(PyObject *, Component *);\nextern PyObject *_CmpInstObj_New(ComponentInstance);\nextern int _CmpInstObj_Convert(PyObject *, ComponentInstance *);\n\n#define CmpObj_New _CmpObj_New\n#define CmpObj_Convert _CmpObj_Convert\n#define CmpInstObj_New _CmpInstObj_New\n#define CmpInstObj_Convert _CmpInstObj_Convert\n#endif\n\n/*\n** Parse/generate ComponentDescriptor records\n*/\nstatic PyObject *\nCmpDesc_New(ComponentDescription *itself)\n{\n\n        return Py_BuildValue("O&O&O&ll",\n                PyMac_BuildOSType, itself->componentType,\n                PyMac_BuildOSType, itself->componentSubType,\n                PyMac_BuildOSType, itself->componentManufacturer,\n                itself->componentFlags, itself->componentFlagsMask);\n}\n\nstatic int\nCmpDesc_Convert(PyObject *v, ComponentDescription *p_itself)\n{\n        return PyArg_ParseTuple(v, "O&O&O&ll",\n                PyMac_GetOSType, &p_itself->componentType,\n                PyMac_GetOSType, &p_itself->componentSubType,\n                PyMac_GetOSType, &p_itself->componentManufacturer,\n                &p_itself->componentFlags, &p_itself->componentFlagsMask);\n}\n\n', lineno=62, col_offset=-1), lineno=23, col_offset=15), lineno=23, col_offset=0), Assign([Name('initstuff', Store(), lineno=64, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=64, col_offset=12), Add(), Str('\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(Component, CmpObj_New);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(Component, CmpObj_Convert);\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(ComponentInstance, CmpInstObj_New);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(ComponentInstance, CmpInstObj_Convert);\n', lineno=69, col_offset=-1), lineno=64, col_offset=12), lineno=64, col_offset=0), Assign([Name('ComponentDescription', Store(), lineno=71, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=71, col_offset=23), [Str('ComponentDescription', lineno=71, col_offset=34), Str('CmpDesc', lineno=71, col_offset=58)], [], None, None, lineno=71, col_offset=23), lineno=71, col_offset=0), Assign([Name('Component', Store(), lineno=72, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=72, col_offset=12), [Str('Component', lineno=72, col_offset=30), Name('C_OBJECTPREFIX', Load(), lineno=72, col_offset=43)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=0), Assign([Name('ComponentInstance', Store(), lineno=73, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=73, col_offset=20), [Str('ComponentInstance', lineno=73, col_offset=38), Name('CI_OBJECTPREFIX', Load(), lineno=73, col_offset=59)], [], None, None, lineno=73, col_offset=20), lineno=73, col_offset=0), Assign([Name('ComponentResult', Store(), lineno=74, col_offset=0)], Call(Name('Type', Load(), lineno=74, col_offset=18), [Str('ComponentResult', lineno=74, col_offset=23), Str('l', lineno=74, col_offset=42)], [], None, None, lineno=74, col_offset=18), lineno=74, col_offset=0), Assign([Name('ComponentResourceHandle', Store(), lineno=76, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=76, col_offset=26), [Str('ComponentResourceHandle', lineno=76, col_offset=44), Str('ResObj', lineno=76, col_offset=71)], [], None, None, lineno=76, col_offset=26), lineno=76, col_offset=0), ClassDef('MyCIObjectDefinition', [Name('PEP253Mixin', Load(), lineno=78, col_offset=27), Name('GlobalObjectDefinition', Load(), lineno=78, col_offset=40)], [FunctionDef('outputCheckNewArg', arguments([Name('self', Param(), lineno=79, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=80, col_offset=8), [Str('if (itself == NULL) {\n                                PyErr_SetString(Cm_Error,"NULL ComponentInstance");\n                                return NULL;\n                        }', lineno=83, col_offset=-1)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8)], [], lineno=79, col_offset=4)], [], lineno=78, col_offset=0), ClassDef('MyCObjectDefinition', [Name('PEP253Mixin', Load(), lineno=85, col_offset=26), Name('GlobalObjectDefinition', Load(), lineno=85, col_offset=39)], [FunctionDef('outputCheckNewArg', arguments([Name('self', Param(), lineno=86, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=87, col_offset=8), [Str('if (itself == NULL) {\n                                /* XXXX Or should we return None? */\n                                PyErr_SetString(Cm_Error,"No such component");\n                                return NULL;\n                        }', lineno=91, col_offset=-1)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('outputCheckConvertArg', arguments([Name('self', Param(), lineno=93, col_offset=30)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=94, col_offset=8), [Str('if ( v == Py_None ) {\n                                *p_itself = 0;\n                                return 1;\n        }', lineno=97, col_offset=-1)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8)], [], lineno=93, col_offset=4)], [], lineno=85, col_offset=0), Assign([Name('module', Store(), lineno=100, col_offset=0)], Call(Name('MacModule', Load(), lineno=100, col_offset=9), [Name('MODNAME', Load(), lineno=100, col_offset=19), Name('MODPREFIX', Load(), lineno=100, col_offset=28), Name('includestuff', Load(), lineno=100, col_offset=39), Name('finalstuff', Load(), lineno=100, col_offset=53), Name('initstuff', Load(), lineno=100, col_offset=65)], [], None, None, lineno=100, col_offset=9), lineno=100, col_offset=0), Assign([Name('ci_object', Store(), lineno=101, col_offset=0)], Call(Name('MyCIObjectDefinition', Load(), lineno=101, col_offset=12), [Str('ComponentInstance', lineno=101, col_offset=33), Name('CI_OBJECTPREFIX', Load(), lineno=101, col_offset=54), Str('ComponentInstance', lineno=102, col_offset=16)], [], None, None, lineno=101, col_offset=12), lineno=101, col_offset=0), Assign([Name('c_object', Store(), lineno=103, col_offset=0)], Call(Name('MyCObjectDefinition', Load(), lineno=103, col_offset=11), [Str('Component', lineno=103, col_offset=31), Name('C_OBJECTPREFIX', Load(), lineno=103, col_offset=44), Str('Component', lineno=103, col_offset=60)], [], None, None, lineno=103, col_offset=11), lineno=103, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=104, col_offset=0), 'addobject', Load(), lineno=104, col_offset=0), [Name('ci_object', Load(), lineno=104, col_offset=17)], [], None, None, lineno=104, col_offset=0), lineno=104, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=105, col_offset=0), 'addobject', Load(), lineno=105, col_offset=0), [Name('c_object', Load(), lineno=105, col_offset=17)], [], None, None, lineno=105, col_offset=0), lineno=105, col_offset=0), Assign([Name('Function', Store(), lineno=108, col_offset=0)], Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=108, col_offset=11), lineno=108, col_offset=0), Assign([Name('Method', Store(), lineno=109, col_offset=0)], Name('OSErrWeakLinkMethodGenerator', Load(), lineno=109, col_offset=9), lineno=109, col_offset=0), Assign([Name('functions', Store(), lineno=112, col_offset=0)], List([], Load(), lineno=112, col_offset=12), lineno=112, col_offset=0), Assign([Name('c_methods', Store(), lineno=113, col_offset=0)], List([], Load(), lineno=113, col_offset=12), lineno=113, col_offset=0), Assign([Name('ci_methods', Store(), lineno=114, col_offset=0)], List([], Load(), lineno=114, col_offset=13), lineno=114, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=115, col_offset=0), [Name('INPUTFILE', Load(), lineno=115, col_offset=9)], [], None, None, lineno=115, col_offset=0), lineno=115, col_offset=0), For(Name('f', Store(), lineno=119, col_offset=4), Name('functions', Load(), lineno=119, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=119, col_offset=20), 'add', Load(), lineno=119, col_offset=20), [Name('f', Load(), lineno=119, col_offset=31)], [], None, None, lineno=119, col_offset=20), lineno=119, col_offset=20)], [], lineno=119, col_offset=0), For(Name('f', Store(), lineno=120, col_offset=4), Name('c_methods', Load(), lineno=120, col_offset=9), [Expr(Call(Attribute(Name('c_object', Load(), lineno=120, col_offset=20), 'add', Load(), lineno=120, col_offset=20), [Name('f', Load(), lineno=120, col_offset=33)], [], None, None, lineno=120, col_offset=20), lineno=120, col_offset=20)], [], lineno=120, col_offset=0), For(Name('f', Store(), lineno=121, col_offset=4), Name('ci_methods', Load(), lineno=121, col_offset=9), [Expr(Call(Attribute(Name('ci_object', Load(), lineno=121, col_offset=21), 'add', Load(), lineno=121, col_offset=21), [Name('f', Load(), lineno=121, col_offset=35)], [], None, None, lineno=121, col_offset=21), lineno=121, col_offset=21)], [], lineno=121, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=124, col_offset=0), [Name('OUTPUTFILE', Load(), lineno=124, col_offset=18)], [], None, None, lineno=124, col_offset=0), lineno=124, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=125, col_offset=0), 'generate', Load(), lineno=125, col_offset=0), [], [], None, None, lineno=125, col_offset=0), lineno=125, col_offset=0)])
