Module([Expr(Str(' Python Character Mapping Codec for PalmOS 3.5.\n\nWritten by Sjoerd Mullender (sjoerd@acm.org); based on iso8859_15.py.\n\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('codecs', None)], lineno=7, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=11, col_offset=12), 'Codec', Load(), lineno=11, col_offset=12)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=12, col_offset=15), Name('input', Param(), lineno=12, col_offset=20), Name('errors', Param(), lineno=12, col_offset=26)], None, None, [Str('strict', lineno=12, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=13, col_offset=15), 'charmap_encode', Load(), lineno=13, col_offset=15), [Name('input', Load(), lineno=13, col_offset=37), Name('errors', Load(), lineno=13, col_offset=43), Name('encoding_map', Load(), lineno=13, col_offset=50)], [], None, None, lineno=13, col_offset=15), lineno=13, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=15, col_offset=15), Name('input', Param(), lineno=15, col_offset=20), Name('errors', Param(), lineno=15, col_offset=26)], None, None, [Str('strict', lineno=15, col_offset=33)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=16, col_offset=15), 'charmap_decode', Load(), lineno=16, col_offset=15), [Name('input', Load(), lineno=16, col_offset=37), Name('errors', Load(), lineno=16, col_offset=43), Name('decoding_map', Load(), lineno=16, col_offset=50)], [], None, None, lineno=16, col_offset=15), lineno=16, col_offset=8)], [], lineno=15, col_offset=4)], [], lineno=11, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=18, col_offset=25), 'IncrementalEncoder', Load(), lineno=18, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=19, col_offset=15), Name('input', Param(), lineno=19, col_offset=21), Name('final', Param(), lineno=19, col_offset=28)], None, None, [Name('False', Load(), lineno=19, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=20, col_offset=15), 'charmap_encode', Load(), lineno=20, col_offset=15), [Name('input', Load(), lineno=20, col_offset=37), Attribute(Name('self', Load(), lineno=20, col_offset=43), 'errors', Load(), lineno=20, col_offset=43), Name('encoding_map', Load(), lineno=20, col_offset=55)], [], None, None, lineno=20, col_offset=15), Index(Num(0, lineno=20, col_offset=69)), Load(), lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=19, col_offset=4)], [], lineno=18, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=22, col_offset=25), 'IncrementalDecoder', Load(), lineno=22, col_offset=25)], [FunctionDef('decode', arguments([Name('self', Param(), lineno=23, col_offset=15), Name('input', Param(), lineno=23, col_offset=21), Name('final', Param(), lineno=23, col_offset=28)], None, None, [Name('False', Load(), lineno=23, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=24, col_offset=15), 'charmap_decode', Load(), lineno=24, col_offset=15), [Name('input', Load(), lineno=24, col_offset=37), Attribute(Name('self', Load(), lineno=24, col_offset=43), 'errors', Load(), lineno=24, col_offset=43), Name('decoding_map', Load(), lineno=24, col_offset=55)], [], None, None, lineno=24, col_offset=15), Index(Num(0, lineno=24, col_offset=69)), Load(), lineno=24, col_offset=15), lineno=24, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=22, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=26, col_offset=19), Attribute(Name('codecs', Load(), lineno=26, col_offset=25), 'StreamWriter', Load(), lineno=26, col_offset=25)], [Pass( lineno=27, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=29, col_offset=19), Attribute(Name('codecs', Load(), lineno=29, col_offset=25), 'StreamReader', Load(), lineno=29, col_offset=25)], [Pass( lineno=30, col_offset=4)], [], lineno=29, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=35, col_offset=11), 'CodecInfo', Load(), lineno=35, col_offset=11), [], [keyword('name', Str('palmos', lineno=36, col_offset=13)), keyword('encode', Attribute(Call(Name('Codec', Load(), lineno=37, col_offset=15), [], [], None, None, lineno=37, col_offset=15), 'encode', Load(), lineno=37, col_offset=15)), keyword('decode', Attribute(Call(Name('Codec', Load(), lineno=38, col_offset=15), [], [], None, None, lineno=38, col_offset=15), 'decode', Load(), lineno=38, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=39, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=40, col_offset=27)), keyword('streamreader', Name('StreamReader', Load(), lineno=41, col_offset=21)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=42, col_offset=21))], None, None, lineno=35, col_offset=11), lineno=35, col_offset=4)], [], lineno=34, col_offset=0), Assign([Name('decoding_map', Store(), lineno=47, col_offset=0)], Call(Attribute(Name('codecs', Load(), lineno=47, col_offset=15), 'make_identity_dict', Load(), lineno=47, col_offset=15), [Call(Name('range', Load(), lineno=47, col_offset=41), [Num(256, lineno=47, col_offset=47)], [], None, None, lineno=47, col_offset=41)], [], None, None, lineno=47, col_offset=15), lineno=47, col_offset=0), Expr(Call(Attribute(Name('decoding_map', Load(), lineno=50, col_offset=0), 'update', Load(), lineno=50, col_offset=0), [Dict([Num(128, lineno=51, col_offset=8), Num(130, lineno=52, col_offset=8), Num(131, lineno=53, col_offset=8), Num(132, lineno=54, col_offset=8), Num(133, lineno=55, col_offset=8), Num(134, lineno=56, col_offset=8), Num(135, lineno=57, col_offset=8), Num(136, lineno=58, col_offset=8), Num(137, lineno=59, col_offset=8), Num(138, lineno=60, col_offset=8), Num(139, lineno=61, col_offset=8), Num(140, lineno=62, col_offset=8), Num(141, lineno=63, col_offset=8), Num(142, lineno=64, col_offset=8), Num(143, lineno=65, col_offset=8), Num(144, lineno=66, col_offset=8), Num(145, lineno=67, col_offset=8), Num(146, lineno=68, col_offset=8), Num(147, lineno=69, col_offset=8), Num(148, lineno=70, col_offset=8), Num(149, lineno=71, col_offset=8), Num(150, lineno=72, col_offset=8), Num(151, lineno=73, col_offset=8), Num(152, lineno=74, col_offset=8), Num(153, lineno=75, col_offset=8), Num(154, lineno=76, col_offset=8), Num(156, lineno=77, col_offset=8), Num(159, lineno=78, col_offset=8)], [Num(8364, lineno=51, col_offset=16), Num(8218, lineno=52, col_offset=16), Num(402, lineno=53, col_offset=16), Num(8222, lineno=54, col_offset=16), Num(8230, lineno=55, col_offset=16), Num(8224, lineno=56, col_offset=16), Num(8225, lineno=57, col_offset=16), Num(710, lineno=58, col_offset=16), Num(8240, lineno=59, col_offset=16), Num(352, lineno=60, col_offset=16), Num(8249, lineno=61, col_offset=16), Num(338, lineno=62, col_offset=16), Num(9830, lineno=63, col_offset=16), Num(9827, lineno=64, col_offset=16), Num(9829, lineno=65, col_offset=16), Num(9824, lineno=66, col_offset=16), Num(8216, lineno=67, col_offset=16), Num(8217, lineno=68, col_offset=16), Num(8220, lineno=69, col_offset=16), Num(8221, lineno=70, col_offset=16), Num(8226, lineno=71, col_offset=16), Num(8211, lineno=72, col_offset=16), Num(8212, lineno=73, col_offset=16), Num(732, lineno=74, col_offset=16), Num(8482, lineno=75, col_offset=16), Num(353, lineno=76, col_offset=16), Num(339, lineno=77, col_offset=16), Num(376, lineno=78, col_offset=16)], lineno=50, col_offset=20)], [], None, None, lineno=50, col_offset=0), lineno=50, col_offset=0), Assign([Name('encoding_map', Store(), lineno=83, col_offset=0)], Call(Attribute(Name('codecs', Load(), lineno=83, col_offset=15), 'make_encoding_map', Load(), lineno=83, col_offset=15), [Name('decoding_map', Load(), lineno=83, col_offset=40)], [], None, None, lineno=83, col_offset=15), lineno=83, col_offset=0)])
