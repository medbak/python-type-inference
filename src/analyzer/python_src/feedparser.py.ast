Module([Expr(Str("FeedParser - An email feed parser.\n\nThe feed parser implements an interface for incrementally parsing an email\nmessage, line by line.  This has advantages for certain applications, such as\nthose reading email messages off a socket.\n\nFeedParser.feed() is the primary interface for pushing new data into the\nparser.  It returns when there's nothing more it can do with the available\ndata.  When you have no more data to push into the parser, call .close().\nThis completes the parsing and returns the root message object.\n\nThe other advantage of this parser is that it will never throw a parsing\nexception.  Instead, when it finds something unexpected, it adds a 'defect' to\nthe current message.  Defects are just instances that live on the message\nobject's .defects attribute.\n", lineno=20, col_offset=-1), lineno=20, col_offset=-1), Assign([Name('__all__', Store(), lineno=22, col_offset=0)], List([Str('FeedParser', lineno=22, col_offset=11)], Load(), lineno=22, col_offset=10), lineno=22, col_offset=0), Import([alias('re', None)], lineno=24, col_offset=0), ImportFrom('email', [alias('errors', None)], 0, lineno=26, col_offset=0), ImportFrom('email', [alias('message', None)], 0, lineno=27, col_offset=0), Assign([Name('NLCRE', Store(), lineno=29, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=29, col_offset=8), 'compile', Load(), lineno=29, col_offset=8), [Str('\r\n|\r|\n', lineno=29, col_offset=19)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=0), Assign([Name('NLCRE_bol', Store(), lineno=30, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=30, col_offset=12), 'compile', Load(), lineno=30, col_offset=12), [Str('(\r\n|\r|\n)', lineno=30, col_offset=23)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=0), Assign([Name('NLCRE_eol', Store(), lineno=31, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=31, col_offset=12), 'compile', Load(), lineno=31, col_offset=12), [Str('(\r\n|\r|\n)\\Z', lineno=31, col_offset=23)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=0), Assign([Name('NLCRE_crack', Store(), lineno=32, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=32, col_offset=14), 'compile', Load(), lineno=32, col_offset=14), [Str('(\r\n|\r|\n)', lineno=32, col_offset=25)], [], None, None, lineno=32, col_offset=14), lineno=32, col_offset=0), Assign([Name('headerRE', Store(), lineno=35, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=35, col_offset=11), 'compile', Load(), lineno=35, col_offset=11), [Str('^(From |[\\041-\\071\\073-\\176]{1,}:|[\\t ])', lineno=35, col_offset=22)], [], None, None, lineno=35, col_offset=11), lineno=35, col_offset=0), Assign([Name('EMPTYSTRING', Store(), lineno=36, col_offset=0)], Str('', lineno=36, col_offset=14), lineno=36, col_offset=0), Assign([Name('NL', Store(), lineno=37, col_offset=0)], Str('\n', lineno=37, col_offset=5), lineno=37, col_offset=0), Assign([Name('NeedMoreData', Store(), lineno=39, col_offset=0)], Call(Name('object', Load(), lineno=39, col_offset=15), [], [], None, None, lineno=39, col_offset=15), lineno=39, col_offset=0), ClassDef('BufferedSubFile', [Name('object', Load(), lineno=43, col_offset=22)], [Expr(Str('A file-ish object that can have new data loaded into it.\n\n    You can also push and pop line-matching predicates onto a stack.  When the\n    current predicate matches the current line, a false EOF response\n    (i.e. empty string) is returned instead.  This lets the parser adhere to a\n    simple abstraction -- it parses until EOF closes the current message.\n    ', lineno=50, col_offset=-1), lineno=50, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=51, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), '_partial', Store(), lineno=53, col_offset=8)], Str('', lineno=53, col_offset=24), lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=55, col_offset=8), '_lines', Store(), lineno=55, col_offset=8)], List([], Load(), lineno=55, col_offset=22), lineno=55, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=57, col_offset=8), '_eofstack', Store(), lineno=57, col_offset=8)], List([], Load(), lineno=57, col_offset=25), lineno=57, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=59, col_offset=8), '_closed', Store(), lineno=59, col_offset=8)], Name('False', Load(), lineno=59, col_offset=23), lineno=59, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('push_eof_matcher', arguments([Name('self', Param(), lineno=61, col_offset=25), Name('pred', Param(), lineno=61, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=62, col_offset=8), '_eofstack', Load(), lineno=62, col_offset=8), 'append', Load(), lineno=62, col_offset=8), [Name('pred', Load(), lineno=62, col_offset=30)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('pop_eof_matcher', arguments([Name('self', Param(), lineno=64, col_offset=24)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=65, col_offset=15), '_eofstack', Load(), lineno=65, col_offset=15), 'pop', Load(), lineno=65, col_offset=15), [], [], None, None, lineno=65, col_offset=15), lineno=65, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=67, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=69, col_offset=8), '_lines', Load(), lineno=69, col_offset=8), 'append', Load(), lineno=69, col_offset=8), [Attribute(Name('self', Load(), lineno=69, col_offset=27), '_partial', Load(), lineno=69, col_offset=27)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=70, col_offset=8), '_partial', Store(), lineno=70, col_offset=8)], Str('', lineno=70, col_offset=24), lineno=70, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=71, col_offset=8), '_closed', Store(), lineno=71, col_offset=8)], Name('True', Load(), lineno=71, col_offset=23), lineno=71, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('readline', arguments([Name('self', Param(), lineno=73, col_offset=17)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=74, col_offset=15), '_lines', Load(), lineno=74, col_offset=15), lineno=74, col_offset=11), [If(Attribute(Name('self', Load(), lineno=75, col_offset=15), '_closed', Load(), lineno=75, col_offset=15), [Return(Str('', lineno=76, col_offset=23), lineno=76, col_offset=16)], [], lineno=75, col_offset=12), Return(Name('NeedMoreData', Load(), lineno=77, col_offset=19), lineno=77, col_offset=12)], [], lineno=74, col_offset=8), Assign([Name('line', Store(), lineno=80, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=80, col_offset=15), '_lines', Load(), lineno=80, col_offset=15), 'pop', Load(), lineno=80, col_offset=15), [], [], None, None, lineno=80, col_offset=15), lineno=80, col_offset=8), For(Name('ateof', Store(), lineno=84, col_offset=12), Subscript(Attribute(Name('self', Load(), lineno=84, col_offset=21), '_eofstack', Load(), lineno=84, col_offset=21), Slice(None, None, Num(-1, lineno=84, col_offset=39)), Load(), lineno=84, col_offset=21), [If(Call(Name('ateof', Load(), lineno=85, col_offset=15), [Name('line', Load(), lineno=85, col_offset=21)], [], None, None, lineno=85, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=87, col_offset=16), '_lines', Load(), lineno=87, col_offset=16), 'append', Load(), lineno=87, col_offset=16), [Name('line', Load(), lineno=87, col_offset=35)], [], None, None, lineno=87, col_offset=16), lineno=87, col_offset=16), Return(Str('', lineno=88, col_offset=23), lineno=88, col_offset=16)], [], lineno=85, col_offset=12)], [], lineno=84, col_offset=8), Return(Name('line', Load(), lineno=89, col_offset=15), lineno=89, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('unreadline', arguments([Name('self', Param(), lineno=91, col_offset=19), Name('line', Param(), lineno=91, col_offset=25)], None, None, []), [Assert(Compare(Name('line', Load(), lineno=93, col_offset=15), [IsNot()], [Name('NeedMoreData', Load(), lineno=93, col_offset=27)], lineno=93, col_offset=15), None, lineno=93, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=94, col_offset=8), '_lines', Load(), lineno=94, col_offset=8), 'append', Load(), lineno=94, col_offset=8), [Name('line', Load(), lineno=94, col_offset=27)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8)], [], lineno=91, col_offset=4), FunctionDef('push', arguments([Name('self', Param(), lineno=96, col_offset=13), Name('data', Param(), lineno=96, col_offset=19)], None, None, []), [Expr(Str('Push some new data into this object.', lineno=97, col_offset=8), lineno=97, col_offset=8), Assign([Tuple([Name('data', Store(), lineno=99, col_offset=8), Attribute(Name('self', Load(), lineno=99, col_offset=14), '_partial', Store(), lineno=99, col_offset=14)], Store(), lineno=99, col_offset=8)], Tuple([BinOp(Attribute(Name('self', Load(), lineno=99, col_offset=30), '_partial', Load(), lineno=99, col_offset=30), Add(), Name('data', Load(), lineno=99, col_offset=46), lineno=99, col_offset=30), Str('', lineno=99, col_offset=52)], Load(), lineno=99, col_offset=30), lineno=99, col_offset=8), Assign([Name('parts', Store(), lineno=101, col_offset=8)], Call(Attribute(Name('NLCRE_crack', Load(), lineno=101, col_offset=16), 'split', Load(), lineno=101, col_offset=16), [Name('data', Load(), lineno=101, col_offset=34)], [], None, None, lineno=101, col_offset=16), lineno=101, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=106, col_offset=8), '_partial', Store(), lineno=106, col_offset=8)], Call(Attribute(Name('parts', Load(), lineno=106, col_offset=24), 'pop', Load(), lineno=106, col_offset=24), [], [], None, None, lineno=106, col_offset=24), lineno=106, col_offset=8), If(BoolOp(And(), [UnaryOp(Not(), Attribute(Name('self', Load(), lineno=109, col_offset=15), '_partial', Load(), lineno=109, col_offset=15), lineno=109, col_offset=11), Name('parts', Load(), lineno=109, col_offset=33), Call(Attribute(Subscript(Name('parts', Load(), lineno=109, col_offset=43), Index(Num(-1, lineno=109, col_offset=50)), Load(), lineno=109, col_offset=43), 'endswith', Load(), lineno=109, col_offset=43), [Str('\r', lineno=109, col_offset=62)], [], None, None, lineno=109, col_offset=43)], lineno=109, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=110, col_offset=12), '_partial', Store(), lineno=110, col_offset=12)], BinOp(Call(Attribute(Name('parts', Load(), lineno=110, col_offset=28), 'pop', Load(), lineno=110, col_offset=28), [Num(-2, lineno=110, col_offset=39)], [], None, None, lineno=110, col_offset=28), Add(), Call(Attribute(Name('parts', Load(), lineno=110, col_offset=42), 'pop', Load(), lineno=110, col_offset=42), [], [], None, None, lineno=110, col_offset=42), lineno=110, col_offset=28), lineno=110, col_offset=12)], [], lineno=109, col_offset=8), Assign([Name('lines', Store(), lineno=114, col_offset=8)], List([], Load(), lineno=114, col_offset=16), lineno=114, col_offset=8), For(Name('i', Store(), lineno=115, col_offset=12), Call(Name('range', Load(), lineno=115, col_offset=17), [BinOp(Call(Name('len', Load(), lineno=115, col_offset=23), [Name('parts', Load(), lineno=115, col_offset=27)], [], None, None, lineno=115, col_offset=23), FloorDiv(), Num(2, lineno=115, col_offset=37), lineno=115, col_offset=23)], [], None, None, lineno=115, col_offset=17), [Expr(Call(Attribute(Name('lines', Load(), lineno=116, col_offset=12), 'append', Load(), lineno=116, col_offset=12), [BinOp(Subscript(Name('parts', Load(), lineno=116, col_offset=25), Index(BinOp(Name('i', Load(), lineno=116, col_offset=31), Mult(), Num(2, lineno=116, col_offset=33), lineno=116, col_offset=31)), Load(), lineno=116, col_offset=25), Add(), Subscript(Name('parts', Load(), lineno=116, col_offset=38), Index(BinOp(BinOp(Name('i', Load(), lineno=116, col_offset=44), Mult(), Num(2, lineno=116, col_offset=46), lineno=116, col_offset=44), Add(), Num(1, lineno=116, col_offset=48), lineno=116, col_offset=44)), Load(), lineno=116, col_offset=38), lineno=116, col_offset=25)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [], lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'pushlines', Load(), lineno=117, col_offset=8), [Name('lines', Load(), lineno=117, col_offset=23)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('pushlines', arguments([Name('self', Param(), lineno=119, col_offset=18), Name('lines', Param(), lineno=119, col_offset=24)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=121, col_offset=8), '_lines', Load(), lineno=121, col_offset=8), Slice(None, Num(0, lineno=121, col_offset=21), None), Store(), lineno=121, col_offset=8)], Subscript(Name('lines', Load(), lineno=121, col_offset=26), Slice(None, None, Num(-1, lineno=121, col_offset=35)), Load(), lineno=121, col_offset=26), lineno=121, col_offset=8)], [], lineno=119, col_offset=4), FunctionDef('is_closed', arguments([Name('self', Param(), lineno=123, col_offset=18)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=124, col_offset=15), '_closed', Load(), lineno=124, col_offset=15), lineno=124, col_offset=8)], [], lineno=123, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=126, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=127, col_offset=15), lineno=127, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=129, col_offset=13)], None, None, []), [Assign([Name('line', Store(), lineno=130, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=130, col_offset=15), 'readline', Load(), lineno=130, col_offset=15), [], [], None, None, lineno=130, col_offset=15), lineno=130, col_offset=8), If(Compare(Name('line', Load(), lineno=131, col_offset=11), [Eq()], [Str('', lineno=131, col_offset=19)], lineno=131, col_offset=11), [Raise(Name('StopIteration', Load(), lineno=132, col_offset=18), None, None, lineno=132, col_offset=12)], [], lineno=131, col_offset=8), Return(Name('line', Load(), lineno=133, col_offset=15), lineno=133, col_offset=8)], [], lineno=129, col_offset=4)], [], lineno=43, col_offset=0), ClassDef('FeedParser', [], [Expr(Str('A feed-style parser of email.', lineno=138, col_offset=4), lineno=138, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=140, col_offset=17), Name('_factory', Param(), lineno=140, col_offset=23)], None, None, [Attribute(Name('message', Load(), lineno=140, col_offset=32), 'Message', Load(), lineno=140, col_offset=32)]), [Expr(Str('_factory is called with no arguments to create a new message obj', lineno=141, col_offset=8), lineno=141, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=142, col_offset=8), '_factory', Store(), lineno=142, col_offset=8)], Name('_factory', Load(), lineno=142, col_offset=24), lineno=142, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=143, col_offset=8), '_input', Store(), lineno=143, col_offset=8)], Call(Name('BufferedSubFile', Load(), lineno=143, col_offset=22), [], [], None, None, lineno=143, col_offset=22), lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), '_msgstack', Store(), lineno=144, col_offset=8)], List([], Load(), lineno=144, col_offset=25), lineno=144, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=145, col_offset=8), '_parse', Store(), lineno=145, col_offset=8)], Attribute(Call(Attribute(Name('self', Load(), lineno=145, col_offset=22), '_parsegen', Load(), lineno=145, col_offset=22), [], [], None, None, lineno=145, col_offset=22), 'next', Load(), lineno=145, col_offset=22), lineno=145, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=146, col_offset=8), '_cur', Store(), lineno=146, col_offset=8)], Name('None', Load(), lineno=146, col_offset=20), lineno=146, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=147, col_offset=8), '_last', Store(), lineno=147, col_offset=8)], Name('None', Load(), lineno=147, col_offset=21), lineno=147, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=148, col_offset=8), '_headersonly', Store(), lineno=148, col_offset=8)], Name('False', Load(), lineno=148, col_offset=28), lineno=148, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('_set_headersonly', arguments([Name('self', Param(), lineno=151, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=152, col_offset=8), '_headersonly', Store(), lineno=152, col_offset=8)], Name('True', Load(), lineno=152, col_offset=28), lineno=152, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('feed', arguments([Name('self', Param(), lineno=154, col_offset=13), Name('data', Param(), lineno=154, col_offset=19)], None, None, []), [Expr(Str('Push more data into the parser.', lineno=155, col_offset=8), lineno=155, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=156, col_offset=8), '_input', Load(), lineno=156, col_offset=8), 'push', Load(), lineno=156, col_offset=8), [Name('data', Load(), lineno=156, col_offset=25)], [], None, None, lineno=156, col_offset=8), lineno=156, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), '_call_parse', Load(), lineno=157, col_offset=8), [], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=154, col_offset=4), FunctionDef('_call_parse', arguments([Name('self', Param(), lineno=159, col_offset=20)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=161, col_offset=12), '_parse', Load(), lineno=161, col_offset=12), [], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12)], [ExceptHandler(Name('StopIteration', Load(), lineno=162, col_offset=15), None, [Pass( lineno=163, col_offset=12)], lineno=162, col_offset=8)], [], lineno=160, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=165, col_offset=14)], None, None, []), [Expr(Str('Parse all remaining data and return the root message object.', lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=167, col_offset=8), '_input', Load(), lineno=167, col_offset=8), 'close', Load(), lineno=167, col_offset=8), [], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), '_call_parse', Load(), lineno=168, col_offset=8), [], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Assign([Name('root', Store(), lineno=169, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=169, col_offset=15), '_pop_message', Load(), lineno=169, col_offset=15), [], [], None, None, lineno=169, col_offset=15), lineno=169, col_offset=8), Assert(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=170, col_offset=19), '_msgstack', Load(), lineno=170, col_offset=19), lineno=170, col_offset=15), None, lineno=170, col_offset=8), If(BoolOp(And(), [Compare(Call(Attribute(Name('root', Load(), lineno=172, col_offset=11), 'get_content_maintype', Load(), lineno=172, col_offset=11), [], [], None, None, lineno=172, col_offset=11), [Eq()], [Str('multipart', lineno=172, col_offset=42)], lineno=172, col_offset=11), UnaryOp(Not(), Call(Attribute(Name('root', Load(), lineno=173, col_offset=23), 'is_multipart', Load(), lineno=173, col_offset=23), [], [], None, None, lineno=173, col_offset=23), lineno=173, col_offset=19)], lineno=172, col_offset=11), [Expr(Call(Attribute(Attribute(Name('root', Load(), lineno=174, col_offset=12), 'defects', Load(), lineno=174, col_offset=12), 'append', Load(), lineno=174, col_offset=12), [Call(Attribute(Name('errors', Load(), lineno=174, col_offset=32), 'MultipartInvariantViolationDefect', Load(), lineno=174, col_offset=32), [], [], None, None, lineno=174, col_offset=32)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=12)], [], lineno=172, col_offset=8), Return(Name('root', Load(), lineno=175, col_offset=15), lineno=175, col_offset=8)], [], lineno=165, col_offset=4), FunctionDef('_new_message', arguments([Name('self', Param(), lineno=177, col_offset=21)], None, None, []), [Assign([Name('msg', Store(), lineno=178, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=178, col_offset=14), '_factory', Load(), lineno=178, col_offset=14), [], [], None, None, lineno=178, col_offset=14), lineno=178, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=179, col_offset=11), '_cur', Load(), lineno=179, col_offset=11), Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=179, col_offset=25), '_cur', Load(), lineno=179, col_offset=25), 'get_content_type', Load(), lineno=179, col_offset=25), [], [], None, None, lineno=179, col_offset=25), [Eq()], [Str('multipart/digest', lineno=179, col_offset=57)], lineno=179, col_offset=25)], lineno=179, col_offset=11), [Expr(Call(Attribute(Name('msg', Load(), lineno=180, col_offset=12), 'set_default_type', Load(), lineno=180, col_offset=12), [Str('message/rfc822', lineno=180, col_offset=33)], [], None, None, lineno=180, col_offset=12), lineno=180, col_offset=12)], [], lineno=179, col_offset=8), If(Attribute(Name('self', Load(), lineno=181, col_offset=11), '_msgstack', Load(), lineno=181, col_offset=11), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=182, col_offset=12), '_msgstack', Load(), lineno=182, col_offset=12), Index(Num(-1, lineno=182, col_offset=28)), Load(), lineno=182, col_offset=12), 'attach', Load(), lineno=182, col_offset=12), [Name('msg', Load(), lineno=182, col_offset=38)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12)], [], lineno=181, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=183, col_offset=8), '_msgstack', Load(), lineno=183, col_offset=8), 'append', Load(), lineno=183, col_offset=8), [Name('msg', Load(), lineno=183, col_offset=30)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=184, col_offset=8), '_cur', Store(), lineno=184, col_offset=8)], Name('msg', Load(), lineno=184, col_offset=20), lineno=184, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=185, col_offset=8), '_last', Store(), lineno=185, col_offset=8)], Name('msg', Load(), lineno=185, col_offset=21), lineno=185, col_offset=8)], [], lineno=177, col_offset=4), FunctionDef('_pop_message', arguments([Name('self', Param(), lineno=187, col_offset=21)], None, None, []), [Assign([Name('retval', Store(), lineno=188, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=188, col_offset=17), '_msgstack', Load(), lineno=188, col_offset=17), 'pop', Load(), lineno=188, col_offset=17), [], [], None, None, lineno=188, col_offset=17), lineno=188, col_offset=8), If(Attribute(Name('self', Load(), lineno=189, col_offset=11), '_msgstack', Load(), lineno=189, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=190, col_offset=12), '_cur', Store(), lineno=190, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=190, col_offset=24), '_msgstack', Load(), lineno=190, col_offset=24), Index(Num(-1, lineno=190, col_offset=40)), Load(), lineno=190, col_offset=24), lineno=190, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=192, col_offset=12), '_cur', Store(), lineno=192, col_offset=12)], Name('None', Load(), lineno=192, col_offset=24), lineno=192, col_offset=12)], lineno=189, col_offset=8), Return(Name('retval', Load(), lineno=193, col_offset=15), lineno=193, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('_parsegen', arguments([Name('self', Param(), lineno=195, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), '_new_message', Load(), lineno=197, col_offset=8), [], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Assign([Name('headers', Store(), lineno=198, col_offset=8)], List([], Load(), lineno=198, col_offset=18), lineno=198, col_offset=8), For(Name('line', Store(), lineno=201, col_offset=12), Attribute(Name('self', Load(), lineno=201, col_offset=20), '_input', Load(), lineno=201, col_offset=20), [If(Compare(Name('line', Load(), lineno=202, col_offset=15), [Is()], [Name('NeedMoreData', Load(), lineno=202, col_offset=23)], lineno=202, col_offset=15), [Expr(Yield(Name('NeedMoreData', Load(), lineno=203, col_offset=22), lineno=203, col_offset=16), lineno=203, col_offset=16), Continue( lineno=204, col_offset=16)], [], lineno=202, col_offset=12), If(UnaryOp(Not(), Call(Attribute(Name('headerRE', Load(), lineno=205, col_offset=19), 'match', Load(), lineno=205, col_offset=19), [Name('line', Load(), lineno=205, col_offset=34)], [], None, None, lineno=205, col_offset=19), lineno=205, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Name('NLCRE', Load(), lineno=209, col_offset=23), 'match', Load(), lineno=209, col_offset=23), [Name('line', Load(), lineno=209, col_offset=35)], [], None, None, lineno=209, col_offset=23), lineno=209, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=210, col_offset=20), '_input', Load(), lineno=210, col_offset=20), 'unreadline', Load(), lineno=210, col_offset=20), [Name('line', Load(), lineno=210, col_offset=43)], [], None, None, lineno=210, col_offset=20), lineno=210, col_offset=20)], [], lineno=209, col_offset=16), Break( lineno=211, col_offset=16)], [], lineno=205, col_offset=12), Expr(Call(Attribute(Name('headers', Load(), lineno=212, col_offset=12), 'append', Load(), lineno=212, col_offset=12), [Name('line', Load(), lineno=212, col_offset=27)], [], None, None, lineno=212, col_offset=12), lineno=212, col_offset=12)], [], lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), '_parse_headers', Load(), lineno=215, col_offset=8), [Name('headers', Load(), lineno=215, col_offset=28)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), If(Attribute(Name('self', Load(), lineno=219, col_offset=11), '_headersonly', Load(), lineno=219, col_offset=11), [Assign([Name('lines', Store(), lineno=220, col_offset=12)], List([], Load(), lineno=220, col_offset=20), lineno=220, col_offset=12), While(Name('True', Load(), lineno=221, col_offset=18), [Assign([Name('line', Store(), lineno=222, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=222, col_offset=23), '_input', Load(), lineno=222, col_offset=23), 'readline', Load(), lineno=222, col_offset=23), [], [], None, None, lineno=222, col_offset=23), lineno=222, col_offset=16), If(Compare(Name('line', Load(), lineno=223, col_offset=19), [Is()], [Name('NeedMoreData', Load(), lineno=223, col_offset=27)], lineno=223, col_offset=19), [Expr(Yield(Name('NeedMoreData', Load(), lineno=224, col_offset=26), lineno=224, col_offset=20), lineno=224, col_offset=20), Continue( lineno=225, col_offset=20)], [], lineno=223, col_offset=16), If(Compare(Name('line', Load(), lineno=226, col_offset=19), [Eq()], [Str('', lineno=226, col_offset=27)], lineno=226, col_offset=19), [Break( lineno=227, col_offset=20)], [], lineno=226, col_offset=16), Expr(Call(Attribute(Name('lines', Load(), lineno=228, col_offset=16), 'append', Load(), lineno=228, col_offset=16), [Name('line', Load(), lineno=228, col_offset=29)], [], None, None, lineno=228, col_offset=16), lineno=228, col_offset=16)], [], lineno=221, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=229, col_offset=12), '_cur', Load(), lineno=229, col_offset=12), 'set_payload', Load(), lineno=229, col_offset=12), [Call(Attribute(Name('EMPTYSTRING', Load(), lineno=229, col_offset=34), 'join', Load(), lineno=229, col_offset=34), [Name('lines', Load(), lineno=229, col_offset=51)], [], None, None, lineno=229, col_offset=34)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12), Return(None, lineno=230, col_offset=12)], [], lineno=219, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=231, col_offset=11), '_cur', Load(), lineno=231, col_offset=11), 'get_content_type', Load(), lineno=231, col_offset=11), [], [], None, None, lineno=231, col_offset=11), [Eq()], [Str('message/delivery-status', lineno=231, col_offset=43)], lineno=231, col_offset=11), [While(Name('True', Load(), lineno=237, col_offset=18), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=238, col_offset=16), '_input', Load(), lineno=238, col_offset=16), 'push_eof_matcher', Load(), lineno=238, col_offset=16), [Attribute(Name('NLCRE', Load(), lineno=238, col_offset=45), 'match', Load(), lineno=238, col_offset=45)], [], None, None, lineno=238, col_offset=16), lineno=238, col_offset=16), For(Name('retval', Store(), lineno=239, col_offset=20), Call(Attribute(Name('self', Load(), lineno=239, col_offset=30), '_parsegen', Load(), lineno=239, col_offset=30), [], [], None, None, lineno=239, col_offset=30), [If(Compare(Name('retval', Load(), lineno=240, col_offset=23), [Is()], [Name('NeedMoreData', Load(), lineno=240, col_offset=33)], lineno=240, col_offset=23), [Expr(Yield(Name('NeedMoreData', Load(), lineno=241, col_offset=30), lineno=241, col_offset=24), lineno=241, col_offset=24), Continue( lineno=242, col_offset=24)], [], lineno=240, col_offset=20), Break( lineno=243, col_offset=20)], [], lineno=239, col_offset=16), Assign([Name('msg', Store(), lineno=244, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=244, col_offset=22), '_pop_message', Load(), lineno=244, col_offset=22), [], [], None, None, lineno=244, col_offset=22), lineno=244, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=248, col_offset=16), '_input', Load(), lineno=248, col_offset=16), 'pop_eof_matcher', Load(), lineno=248, col_offset=16), [], [], None, None, lineno=248, col_offset=16), lineno=248, col_offset=16), While(Name('True', Load(), lineno=253, col_offset=22), [Assign([Name('line', Store(), lineno=254, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=254, col_offset=27), '_input', Load(), lineno=254, col_offset=27), 'readline', Load(), lineno=254, col_offset=27), [], [], None, None, lineno=254, col_offset=27), lineno=254, col_offset=20), If(Compare(Name('line', Load(), lineno=255, col_offset=23), [Is()], [Name('NeedMoreData', Load(), lineno=255, col_offset=31)], lineno=255, col_offset=23), [Expr(Yield(Name('NeedMoreData', Load(), lineno=256, col_offset=30), lineno=256, col_offset=24), lineno=256, col_offset=24), Continue( lineno=257, col_offset=24)], [], lineno=255, col_offset=20), Break( lineno=258, col_offset=20)], [], lineno=253, col_offset=16), While(Name('True', Load(), lineno=259, col_offset=22), [Assign([Name('line', Store(), lineno=260, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=260, col_offset=27), '_input', Load(), lineno=260, col_offset=27), 'readline', Load(), lineno=260, col_offset=27), [], [], None, None, lineno=260, col_offset=27), lineno=260, col_offset=20), If(Compare(Name('line', Load(), lineno=261, col_offset=23), [Is()], [Name('NeedMoreData', Load(), lineno=261, col_offset=31)], lineno=261, col_offset=23), [Expr(Yield(Name('NeedMoreData', Load(), lineno=262, col_offset=30), lineno=262, col_offset=24), lineno=262, col_offset=24), Continue( lineno=263, col_offset=24)], [], lineno=261, col_offset=20), Break( lineno=264, col_offset=20)], [], lineno=259, col_offset=16), If(Compare(Name('line', Load(), lineno=265, col_offset=19), [Eq()], [Str('', lineno=265, col_offset=27)], lineno=265, col_offset=19), [Break( lineno=266, col_offset=20)], [], lineno=265, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=268, col_offset=16), '_input', Load(), lineno=268, col_offset=16), 'unreadline', Load(), lineno=268, col_offset=16), [Name('line', Load(), lineno=268, col_offset=39)], [], None, None, lineno=268, col_offset=16), lineno=268, col_offset=16)], [], lineno=237, col_offset=12), Return(None, lineno=269, col_offset=12)], [], lineno=231, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=270, col_offset=11), '_cur', Load(), lineno=270, col_offset=11), 'get_content_maintype', Load(), lineno=270, col_offset=11), [], [], None, None, lineno=270, col_offset=11), [Eq()], [Str('message', lineno=270, col_offset=47)], lineno=270, col_offset=11), [For(Name('retval', Store(), lineno=273, col_offset=16), Call(Attribute(Name('self', Load(), lineno=273, col_offset=26), '_parsegen', Load(), lineno=273, col_offset=26), [], [], None, None, lineno=273, col_offset=26), [If(Compare(Name('retval', Load(), lineno=274, col_offset=19), [Is()], [Name('NeedMoreData', Load(), lineno=274, col_offset=29)], lineno=274, col_offset=19), [Expr(Yield(Name('NeedMoreData', Load(), lineno=275, col_offset=26), lineno=275, col_offset=20), lineno=275, col_offset=20), Continue( lineno=276, col_offset=20)], [], lineno=274, col_offset=16), Break( lineno=277, col_offset=16)], [], lineno=273, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=12), '_pop_message', Load(), lineno=278, col_offset=12), [], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=12), Return(None, lineno=279, col_offset=12)], [], lineno=270, col_offset=8), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=280, col_offset=11), '_cur', Load(), lineno=280, col_offset=11), 'get_content_maintype', Load(), lineno=280, col_offset=11), [], [], None, None, lineno=280, col_offset=11), [Eq()], [Str('multipart', lineno=280, col_offset=47)], lineno=280, col_offset=11), [Assign([Name('boundary', Store(), lineno=281, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=281, col_offset=23), '_cur', Load(), lineno=281, col_offset=23), 'get_boundary', Load(), lineno=281, col_offset=23), [], [], None, None, lineno=281, col_offset=23), lineno=281, col_offset=12), If(Compare(Name('boundary', Load(), lineno=282, col_offset=15), [Is()], [Name('None', Load(), lineno=282, col_offset=27)], lineno=282, col_offset=15), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=287, col_offset=16), '_cur', Load(), lineno=287, col_offset=16), 'defects', Load(), lineno=287, col_offset=16), 'append', Load(), lineno=287, col_offset=16), [Call(Attribute(Name('errors', Load(), lineno=287, col_offset=41), 'NoBoundaryInMultipartDefect', Load(), lineno=287, col_offset=41), [], [], None, None, lineno=287, col_offset=41)], [], None, None, lineno=287, col_offset=16), lineno=287, col_offset=16), Assign([Name('lines', Store(), lineno=288, col_offset=16)], List([], Load(), lineno=288, col_offset=24), lineno=288, col_offset=16), For(Name('line', Store(), lineno=289, col_offset=20), Attribute(Name('self', Load(), lineno=289, col_offset=28), '_input', Load(), lineno=289, col_offset=28), [If(Compare(Name('line', Load(), lineno=290, col_offset=23), [Is()], [Name('NeedMoreData', Load(), lineno=290, col_offset=31)], lineno=290, col_offset=23), [Expr(Yield(Name('NeedMoreData', Load(), lineno=291, col_offset=30), lineno=291, col_offset=24), lineno=291, col_offset=24), Continue( lineno=292, col_offset=24)], [], lineno=290, col_offset=20), Expr(Call(Attribute(Name('lines', Load(), lineno=293, col_offset=20), 'append', Load(), lineno=293, col_offset=20), [Name('line', Load(), lineno=293, col_offset=33)], [], None, None, lineno=293, col_offset=20), lineno=293, col_offset=20)], [], lineno=289, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=294, col_offset=16), '_cur', Load(), lineno=294, col_offset=16), 'set_payload', Load(), lineno=294, col_offset=16), [Call(Attribute(Name('EMPTYSTRING', Load(), lineno=294, col_offset=38), 'join', Load(), lineno=294, col_offset=38), [Name('lines', Load(), lineno=294, col_offset=55)], [], None, None, lineno=294, col_offset=38)], [], None, None, lineno=294, col_offset=16), lineno=294, col_offset=16), Return(None, lineno=295, col_offset=16)], [], lineno=282, col_offset=12), Assign([Name('separator', Store(), lineno=300, col_offset=12)], BinOp(Str('--', lineno=300, col_offset=24), Add(), Name('boundary', Load(), lineno=300, col_offset=31), lineno=300, col_offset=24), lineno=300, col_offset=12), Assign([Name('boundaryre', Store(), lineno=301, col_offset=12)], Call(Attribute(Name('re', Load(), lineno=301, col_offset=25), 'compile', Load(), lineno=301, col_offset=25), [BinOp(BinOp(Str('(?P<sep>', lineno=302, col_offset=16), Add(), Call(Attribute(Name('re', Load(), lineno=302, col_offset=29), 'escape', Load(), lineno=302, col_offset=29), [Name('separator', Load(), lineno=302, col_offset=39)], [], None, None, lineno=302, col_offset=29), lineno=302, col_offset=16), Add(), Str(')(?P<end>--)?(?P<ws>[ \\t]*)(?P<linesep>\\r\\n|\\r|\\n)?$', lineno=303, col_offset=16), lineno=302, col_offset=50)], [], None, None, lineno=301, col_offset=25), lineno=301, col_offset=12), Assign([Name('capturing_preamble', Store(), lineno=304, col_offset=12)], Name('True', Load(), lineno=304, col_offset=33), lineno=304, col_offset=12), Assign([Name('preamble', Store(), lineno=305, col_offset=12)], List([], Load(), lineno=305, col_offset=23), lineno=305, col_offset=12), Assign([Name('linesep', Store(), lineno=306, col_offset=12)], Name('False', Load(), lineno=306, col_offset=22), lineno=306, col_offset=12), While(Name('True', Load(), lineno=307, col_offset=18), [Assign([Name('line', Store(), lineno=308, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=308, col_offset=23), '_input', Load(), lineno=308, col_offset=23), 'readline', Load(), lineno=308, col_offset=23), [], [], None, None, lineno=308, col_offset=23), lineno=308, col_offset=16), If(Compare(Name('line', Load(), lineno=309, col_offset=19), [Is()], [Name('NeedMoreData', Load(), lineno=309, col_offset=27)], lineno=309, col_offset=19), [Expr(Yield(Name('NeedMoreData', Load(), lineno=310, col_offset=26), lineno=310, col_offset=20), lineno=310, col_offset=20), Continue( lineno=311, col_offset=20)], [], lineno=309, col_offset=16), If(Compare(Name('line', Load(), lineno=312, col_offset=19), [Eq()], [Str('', lineno=312, col_offset=27)], lineno=312, col_offset=19), [Break( lineno=313, col_offset=20)], [], lineno=312, col_offset=16), Assign([Name('mo', Store(), lineno=314, col_offset=16)], Call(Attribute(Name('boundaryre', Load(), lineno=314, col_offset=21), 'match', Load(), lineno=314, col_offset=21), [Name('line', Load(), lineno=314, col_offset=38)], [], None, None, lineno=314, col_offset=21), lineno=314, col_offset=16), If(Name('mo', Load(), lineno=315, col_offset=19), [If(Call(Attribute(Name('mo', Load(), lineno=320, col_offset=23), 'group', Load(), lineno=320, col_offset=23), [Str('end', lineno=320, col_offset=32)], [], None, None, lineno=320, col_offset=23), [Assign([Name('linesep', Store(), lineno=321, col_offset=24)], Call(Attribute(Name('mo', Load(), lineno=321, col_offset=34), 'group', Load(), lineno=321, col_offset=34), [Str('linesep', lineno=321, col_offset=43)], [], None, None, lineno=321, col_offset=34), lineno=321, col_offset=24), Break( lineno=322, col_offset=24)], [], lineno=320, col_offset=20), If(Name('capturing_preamble', Load(), lineno=324, col_offset=23), [If(Name('preamble', Load(), lineno=325, col_offset=27), [Assign([Name('lastline', Store(), lineno=328, col_offset=28)], Subscript(Name('preamble', Load(), lineno=328, col_offset=39), Index(Num(-1, lineno=328, col_offset=49)), Load(), lineno=328, col_offset=39), lineno=328, col_offset=28), Assign([Name('eolmo', Store(), lineno=329, col_offset=28)], Call(Attribute(Name('NLCRE_eol', Load(), lineno=329, col_offset=36), 'search', Load(), lineno=329, col_offset=36), [Name('lastline', Load(), lineno=329, col_offset=53)], [], None, None, lineno=329, col_offset=36), lineno=329, col_offset=28), If(Name('eolmo', Load(), lineno=330, col_offset=31), [Assign([Subscript(Name('preamble', Load(), lineno=331, col_offset=32), Index(Num(-1, lineno=331, col_offset=42)), Store(), lineno=331, col_offset=32)], Subscript(Name('lastline', Load(), lineno=331, col_offset=47), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=331, col_offset=58), [Call(Attribute(Name('eolmo', Load(), lineno=331, col_offset=62), 'group', Load(), lineno=331, col_offset=62), [Num(0, lineno=331, col_offset=74)], [], None, None, lineno=331, col_offset=62)], [], None, None, lineno=331, col_offset=58), lineno=331, col_offset=57), None), Load(), lineno=331, col_offset=47), lineno=331, col_offset=32)], [], lineno=330, col_offset=28), Assign([Attribute(Attribute(Name('self', Load(), lineno=332, col_offset=28), '_cur', Load(), lineno=332, col_offset=28), 'preamble', Store(), lineno=332, col_offset=28)], Call(Attribute(Name('EMPTYSTRING', Load(), lineno=332, col_offset=49), 'join', Load(), lineno=332, col_offset=49), [Name('preamble', Load(), lineno=332, col_offset=66)], [], None, None, lineno=332, col_offset=49), lineno=332, col_offset=28)], [], lineno=325, col_offset=24), Assign([Name('capturing_preamble', Store(), lineno=333, col_offset=24)], Name('False', Load(), lineno=333, col_offset=45), lineno=333, col_offset=24), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=334, col_offset=24), '_input', Load(), lineno=334, col_offset=24), 'unreadline', Load(), lineno=334, col_offset=24), [Name('line', Load(), lineno=334, col_offset=47)], [], None, None, lineno=334, col_offset=24), lineno=334, col_offset=24), Continue( lineno=335, col_offset=24)], [], lineno=324, col_offset=20), While(Name('True', Load(), lineno=340, col_offset=26), [Assign([Name('line', Store(), lineno=341, col_offset=24)], Call(Attribute(Attribute(Name('self', Load(), lineno=341, col_offset=31), '_input', Load(), lineno=341, col_offset=31), 'readline', Load(), lineno=341, col_offset=31), [], [], None, None, lineno=341, col_offset=31), lineno=341, col_offset=24), If(Compare(Name('line', Load(), lineno=342, col_offset=27), [Is()], [Name('NeedMoreData', Load(), lineno=342, col_offset=35)], lineno=342, col_offset=27), [Expr(Yield(Name('NeedMoreData', Load(), lineno=343, col_offset=34), lineno=343, col_offset=28), lineno=343, col_offset=28), Continue( lineno=344, col_offset=28)], [], lineno=342, col_offset=24), Assign([Name('mo', Store(), lineno=345, col_offset=24)], Call(Attribute(Name('boundaryre', Load(), lineno=345, col_offset=29), 'match', Load(), lineno=345, col_offset=29), [Name('line', Load(), lineno=345, col_offset=46)], [], None, None, lineno=345, col_offset=29), lineno=345, col_offset=24), If(UnaryOp(Not(), Name('mo', Load(), lineno=346, col_offset=31), lineno=346, col_offset=27), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=347, col_offset=28), '_input', Load(), lineno=347, col_offset=28), 'unreadline', Load(), lineno=347, col_offset=28), [Name('line', Load(), lineno=347, col_offset=51)], [], None, None, lineno=347, col_offset=28), lineno=347, col_offset=28), Break( lineno=348, col_offset=28)], [], lineno=346, col_offset=24)], [], lineno=340, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=351, col_offset=20), '_input', Load(), lineno=351, col_offset=20), 'push_eof_matcher', Load(), lineno=351, col_offset=20), [Attribute(Name('boundaryre', Load(), lineno=351, col_offset=49), 'match', Load(), lineno=351, col_offset=49)], [], None, None, lineno=351, col_offset=20), lineno=351, col_offset=20), For(Name('retval', Store(), lineno=352, col_offset=24), Call(Attribute(Name('self', Load(), lineno=352, col_offset=34), '_parsegen', Load(), lineno=352, col_offset=34), [], [], None, None, lineno=352, col_offset=34), [If(Compare(Name('retval', Load(), lineno=353, col_offset=27), [Is()], [Name('NeedMoreData', Load(), lineno=353, col_offset=37)], lineno=353, col_offset=27), [Expr(Yield(Name('NeedMoreData', Load(), lineno=354, col_offset=34), lineno=354, col_offset=28), lineno=354, col_offset=28), Continue( lineno=355, col_offset=28)], [], lineno=353, col_offset=24), Break( lineno=356, col_offset=24)], [], lineno=352, col_offset=20), If(Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=361, col_offset=23), '_last', Load(), lineno=361, col_offset=23), 'get_content_maintype', Load(), lineno=361, col_offset=23), [], [], None, None, lineno=361, col_offset=23), [Eq()], [Str('multipart', lineno=361, col_offset=60)], lineno=361, col_offset=23), [Assign([Name('epilogue', Store(), lineno=362, col_offset=24)], Attribute(Attribute(Name('self', Load(), lineno=362, col_offset=35), '_last', Load(), lineno=362, col_offset=35), 'epilogue', Load(), lineno=362, col_offset=35), lineno=362, col_offset=24), If(Compare(Name('epilogue', Load(), lineno=363, col_offset=27), [Eq()], [Str('', lineno=363, col_offset=39)], lineno=363, col_offset=27), [Assign([Attribute(Attribute(Name('self', Load(), lineno=364, col_offset=28), '_last', Load(), lineno=364, col_offset=28), 'epilogue', Store(), lineno=364, col_offset=28)], Name('None', Load(), lineno=364, col_offset=50), lineno=364, col_offset=28)], [If(Compare(Name('epilogue', Load(), lineno=365, col_offset=29), [IsNot()], [Name('None', Load(), lineno=365, col_offset=45)], lineno=365, col_offset=29), [Assign([Name('mo', Store(), lineno=366, col_offset=28)], Call(Attribute(Name('NLCRE_eol', Load(), lineno=366, col_offset=33), 'search', Load(), lineno=366, col_offset=33), [Name('epilogue', Load(), lineno=366, col_offset=50)], [], None, None, lineno=366, col_offset=33), lineno=366, col_offset=28), If(Name('mo', Load(), lineno=367, col_offset=31), [Assign([Name('end', Store(), lineno=368, col_offset=32)], Call(Name('len', Load(), lineno=368, col_offset=38), [Call(Attribute(Name('mo', Load(), lineno=368, col_offset=42), 'group', Load(), lineno=368, col_offset=42), [Num(0, lineno=368, col_offset=51)], [], None, None, lineno=368, col_offset=42)], [], None, None, lineno=368, col_offset=38), lineno=368, col_offset=32), Assign([Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=32), '_last', Load(), lineno=369, col_offset=32), 'epilogue', Store(), lineno=369, col_offset=32)], Subscript(Name('epilogue', Load(), lineno=369, col_offset=54), Slice(None, UnaryOp(USub(), Name('end', Load(), lineno=369, col_offset=65), lineno=369, col_offset=64), None), Load(), lineno=369, col_offset=54), lineno=369, col_offset=32)], [], lineno=367, col_offset=28)], [], lineno=365, col_offset=29)], lineno=363, col_offset=24)], [Assign([Name('payload', Store(), lineno=371, col_offset=24)], Call(Attribute(Attribute(Name('self', Load(), lineno=371, col_offset=34), '_last', Load(), lineno=371, col_offset=34), 'get_payload', Load(), lineno=371, col_offset=34), [], [], None, None, lineno=371, col_offset=34), lineno=371, col_offset=24), If(Call(Name('isinstance', Load(), lineno=372, col_offset=27), [Name('payload', Load(), lineno=372, col_offset=38), Name('basestring', Load(), lineno=372, col_offset=47)], [], None, None, lineno=372, col_offset=27), [Assign([Name('mo', Store(), lineno=373, col_offset=28)], Call(Attribute(Name('NLCRE_eol', Load(), lineno=373, col_offset=33), 'search', Load(), lineno=373, col_offset=33), [Name('payload', Load(), lineno=373, col_offset=50)], [], None, None, lineno=373, col_offset=33), lineno=373, col_offset=28), If(Name('mo', Load(), lineno=374, col_offset=31), [Assign([Name('payload', Store(), lineno=375, col_offset=32)], Subscript(Name('payload', Load(), lineno=375, col_offset=42), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=375, col_offset=52), [Call(Attribute(Name('mo', Load(), lineno=375, col_offset=56), 'group', Load(), lineno=375, col_offset=56), [Num(0, lineno=375, col_offset=65)], [], None, None, lineno=375, col_offset=56)], [], None, None, lineno=375, col_offset=52), lineno=375, col_offset=51), None), Load(), lineno=375, col_offset=42), lineno=375, col_offset=32), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=376, col_offset=32), '_last', Load(), lineno=376, col_offset=32), 'set_payload', Load(), lineno=376, col_offset=32), [Name('payload', Load(), lineno=376, col_offset=55)], [], None, None, lineno=376, col_offset=32), lineno=376, col_offset=32)], [], lineno=374, col_offset=28)], [], lineno=372, col_offset=24)], lineno=361, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=377, col_offset=20), '_input', Load(), lineno=377, col_offset=20), 'pop_eof_matcher', Load(), lineno=377, col_offset=20), [], [], None, None, lineno=377, col_offset=20), lineno=377, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=20), '_pop_message', Load(), lineno=378, col_offset=20), [], [], None, None, lineno=378, col_offset=20), lineno=378, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=381, col_offset=20), '_last', Store(), lineno=381, col_offset=20)], Attribute(Name('self', Load(), lineno=381, col_offset=33), '_cur', Load(), lineno=381, col_offset=33), lineno=381, col_offset=20)], [Assert(Name('capturing_preamble', Load(), lineno=384, col_offset=27), None, lineno=384, col_offset=20), Expr(Call(Attribute(Name('preamble', Load(), lineno=385, col_offset=20), 'append', Load(), lineno=385, col_offset=20), [Name('line', Load(), lineno=385, col_offset=36)], [], None, None, lineno=385, col_offset=20), lineno=385, col_offset=20)], lineno=315, col_offset=16)], [], lineno=307, col_offset=12), If(Name('capturing_preamble', Load(), lineno=390, col_offset=15), [Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=391, col_offset=16), '_cur', Load(), lineno=391, col_offset=16), 'defects', Load(), lineno=391, col_offset=16), 'append', Load(), lineno=391, col_offset=16), [Call(Attribute(Name('errors', Load(), lineno=391, col_offset=41), 'StartBoundaryNotFoundDefect', Load(), lineno=391, col_offset=41), [], [], None, None, lineno=391, col_offset=41)], [], None, None, lineno=391, col_offset=16), lineno=391, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=392, col_offset=16), '_cur', Load(), lineno=392, col_offset=16), 'set_payload', Load(), lineno=392, col_offset=16), [Call(Attribute(Name('EMPTYSTRING', Load(), lineno=392, col_offset=38), 'join', Load(), lineno=392, col_offset=38), [Name('preamble', Load(), lineno=392, col_offset=55)], [], None, None, lineno=392, col_offset=38)], [], None, None, lineno=392, col_offset=16), lineno=392, col_offset=16), Assign([Name('epilogue', Store(), lineno=393, col_offset=16)], List([], Load(), lineno=393, col_offset=27), lineno=393, col_offset=16), For(Name('line', Store(), lineno=394, col_offset=20), Attribute(Name('self', Load(), lineno=394, col_offset=28), '_input', Load(), lineno=394, col_offset=28), [If(Compare(Name('line', Load(), lineno=395, col_offset=23), [Is()], [Name('NeedMoreData', Load(), lineno=395, col_offset=31)], lineno=395, col_offset=23), [Expr(Yield(Name('NeedMoreData', Load(), lineno=396, col_offset=30), lineno=396, col_offset=24), lineno=396, col_offset=24), Continue( lineno=397, col_offset=24)], [], lineno=395, col_offset=20)], [], lineno=394, col_offset=16), Assign([Attribute(Attribute(Name('self', Load(), lineno=398, col_offset=16), '_cur', Load(), lineno=398, col_offset=16), 'epilogue', Store(), lineno=398, col_offset=16)], Call(Attribute(Name('EMPTYSTRING', Load(), lineno=398, col_offset=37), 'join', Load(), lineno=398, col_offset=37), [Name('epilogue', Load(), lineno=398, col_offset=54)], [], None, None, lineno=398, col_offset=37), lineno=398, col_offset=16), Return(None, lineno=399, col_offset=16)], [], lineno=390, col_offset=12), If(Name('linesep', Load(), lineno=402, col_offset=15), [Assign([Name('epilogue', Store(), lineno=403, col_offset=16)], List([Str('', lineno=403, col_offset=28)], Load(), lineno=403, col_offset=27), lineno=403, col_offset=16)], [Assign([Name('epilogue', Store(), lineno=405, col_offset=16)], List([], Load(), lineno=405, col_offset=27), lineno=405, col_offset=16)], lineno=402, col_offset=12), For(Name('line', Store(), lineno=406, col_offset=16), Attribute(Name('self', Load(), lineno=406, col_offset=24), '_input', Load(), lineno=406, col_offset=24), [If(Compare(Name('line', Load(), lineno=407, col_offset=19), [Is()], [Name('NeedMoreData', Load(), lineno=407, col_offset=27)], lineno=407, col_offset=19), [Expr(Yield(Name('NeedMoreData', Load(), lineno=408, col_offset=26), lineno=408, col_offset=20), lineno=408, col_offset=20), Continue( lineno=409, col_offset=20)], [], lineno=407, col_offset=16), Expr(Call(Attribute(Name('epilogue', Load(), lineno=410, col_offset=16), 'append', Load(), lineno=410, col_offset=16), [Name('line', Load(), lineno=410, col_offset=32)], [], None, None, lineno=410, col_offset=16), lineno=410, col_offset=16)], [], lineno=406, col_offset=12), If(Name('epilogue', Load(), lineno=414, col_offset=15), [Assign([Name('firstline', Store(), lineno=415, col_offset=16)], Subscript(Name('epilogue', Load(), lineno=415, col_offset=28), Index(Num(0, lineno=415, col_offset=37)), Load(), lineno=415, col_offset=28), lineno=415, col_offset=16), Assign([Name('bolmo', Store(), lineno=416, col_offset=16)], Call(Attribute(Name('NLCRE_bol', Load(), lineno=416, col_offset=24), 'match', Load(), lineno=416, col_offset=24), [Name('firstline', Load(), lineno=416, col_offset=40)], [], None, None, lineno=416, col_offset=24), lineno=416, col_offset=16), If(Name('bolmo', Load(), lineno=417, col_offset=19), [Assign([Subscript(Name('epilogue', Load(), lineno=418, col_offset=20), Index(Num(0, lineno=418, col_offset=29)), Store(), lineno=418, col_offset=20)], Subscript(Name('firstline', Load(), lineno=418, col_offset=34), Slice(Call(Name('len', Load(), lineno=418, col_offset=44), [Call(Attribute(Name('bolmo', Load(), lineno=418, col_offset=48), 'group', Load(), lineno=418, col_offset=48), [Num(0, lineno=418, col_offset=60)], [], None, None, lineno=418, col_offset=48)], [], None, None, lineno=418, col_offset=44), None, None), Load(), lineno=418, col_offset=34), lineno=418, col_offset=20)], [], lineno=417, col_offset=16)], [], lineno=414, col_offset=12), Assign([Attribute(Attribute(Name('self', Load(), lineno=419, col_offset=12), '_cur', Load(), lineno=419, col_offset=12), 'epilogue', Store(), lineno=419, col_offset=12)], Call(Attribute(Name('EMPTYSTRING', Load(), lineno=419, col_offset=33), 'join', Load(), lineno=419, col_offset=33), [Name('epilogue', Load(), lineno=419, col_offset=50)], [], None, None, lineno=419, col_offset=33), lineno=419, col_offset=12), Return(None, lineno=420, col_offset=12)], [], lineno=280, col_offset=8), Assign([Name('lines', Store(), lineno=423, col_offset=8)], List([], Load(), lineno=423, col_offset=16), lineno=423, col_offset=8), For(Name('line', Store(), lineno=424, col_offset=12), Attribute(Name('self', Load(), lineno=424, col_offset=20), '_input', Load(), lineno=424, col_offset=20), [If(Compare(Name('line', Load(), lineno=425, col_offset=15), [Is()], [Name('NeedMoreData', Load(), lineno=425, col_offset=23)], lineno=425, col_offset=15), [Expr(Yield(Name('NeedMoreData', Load(), lineno=426, col_offset=22), lineno=426, col_offset=16), lineno=426, col_offset=16), Continue( lineno=427, col_offset=16)], [], lineno=425, col_offset=12), Expr(Call(Attribute(Name('lines', Load(), lineno=428, col_offset=12), 'append', Load(), lineno=428, col_offset=12), [Name('line', Load(), lineno=428, col_offset=25)], [], None, None, lineno=428, col_offset=12), lineno=428, col_offset=12)], [], lineno=424, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=429, col_offset=8), '_cur', Load(), lineno=429, col_offset=8), 'set_payload', Load(), lineno=429, col_offset=8), [Call(Attribute(Name('EMPTYSTRING', Load(), lineno=429, col_offset=30), 'join', Load(), lineno=429, col_offset=30), [Name('lines', Load(), lineno=429, col_offset=47)], [], None, None, lineno=429, col_offset=30)], [], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('_parse_headers', arguments([Name('self', Param(), lineno=431, col_offset=23), Name('lines', Param(), lineno=431, col_offset=29)], None, None, []), [Assign([Name('lastheader', Store(), lineno=433, col_offset=8)], Str('', lineno=433, col_offset=21), lineno=433, col_offset=8), Assign([Name('lastvalue', Store(), lineno=434, col_offset=8)], List([], Load(), lineno=434, col_offset=20), lineno=434, col_offset=8), For(Tuple([Name('lineno', Store(), lineno=435, col_offset=12), Name('line', Store(), lineno=435, col_offset=20)], Store(), lineno=435, col_offset=12), Call(Name('enumerate', Load(), lineno=435, col_offset=28), [Name('lines', Load(), lineno=435, col_offset=38)], [], None, None, lineno=435, col_offset=28), [If(Compare(Subscript(Name('line', Load(), lineno=437, col_offset=15), Index(Num(0, lineno=437, col_offset=20)), Load(), lineno=437, col_offset=15), [In()], [Str(' \t', lineno=437, col_offset=26)], lineno=437, col_offset=15), [If(UnaryOp(Not(), Name('lastheader', Load(), lineno=438, col_offset=23), lineno=438, col_offset=19), [Assign([Name('defect', Store(), lineno=442, col_offset=20)], Call(Attribute(Name('errors', Load(), lineno=442, col_offset=29), 'FirstHeaderLineIsContinuationDefect', Load(), lineno=442, col_offset=29), [Name('line', Load(), lineno=442, col_offset=72)], [], None, None, lineno=442, col_offset=29), lineno=442, col_offset=20), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=443, col_offset=20), '_cur', Load(), lineno=443, col_offset=20), 'defects', Load(), lineno=443, col_offset=20), 'append', Load(), lineno=443, col_offset=20), [Name('defect', Load(), lineno=443, col_offset=45)], [], None, None, lineno=443, col_offset=20), lineno=443, col_offset=20), Continue( lineno=444, col_offset=20)], [], lineno=438, col_offset=16), Expr(Call(Attribute(Name('lastvalue', Load(), lineno=445, col_offset=16), 'append', Load(), lineno=445, col_offset=16), [Name('line', Load(), lineno=445, col_offset=33)], [], None, None, lineno=445, col_offset=16), lineno=445, col_offset=16), Continue( lineno=446, col_offset=16)], [], lineno=437, col_offset=12), If(Name('lastheader', Load(), lineno=447, col_offset=15), [Assign([Name('lhdr', Store(), lineno=449, col_offset=16)], Call(Attribute(Subscript(Call(Attribute(Name('EMPTYSTRING', Load(), lineno=449, col_offset=23), 'join', Load(), lineno=449, col_offset=23), [Name('lastvalue', Load(), lineno=449, col_offset=40)], [], None, None, lineno=449, col_offset=23), Slice(None, Num(-1, lineno=449, col_offset=53), None), Load(), lineno=449, col_offset=23), 'rstrip', Load(), lineno=449, col_offset=23), [Str('\r\n', lineno=449, col_offset=63)], [], None, None, lineno=449, col_offset=23), lineno=449, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=450, col_offset=16), '_cur', Load(), lineno=450, col_offset=16), Index(Name('lastheader', Load(), lineno=450, col_offset=26)), Store(), lineno=450, col_offset=16)], Name('lhdr', Load(), lineno=450, col_offset=40), lineno=450, col_offset=16), Assign([Tuple([Name('lastheader', Store(), lineno=451, col_offset=16), Name('lastvalue', Store(), lineno=451, col_offset=28)], Store(), lineno=451, col_offset=16)], Tuple([Str('', lineno=451, col_offset=40), List([], Load(), lineno=451, col_offset=44)], Load(), lineno=451, col_offset=40), lineno=451, col_offset=16)], [], lineno=447, col_offset=12), If(Call(Attribute(Name('line', Load(), lineno=453, col_offset=15), 'startswith', Load(), lineno=453, col_offset=15), [Str('From ', lineno=453, col_offset=31)], [], None, None, lineno=453, col_offset=15), [If(Compare(Name('lineno', Load(), lineno=454, col_offset=19), [Eq()], [Num(0, lineno=454, col_offset=29)], lineno=454, col_offset=19), [Assign([Name('mo', Store(), lineno=456, col_offset=20)], Call(Attribute(Name('NLCRE_eol', Load(), lineno=456, col_offset=25), 'search', Load(), lineno=456, col_offset=25), [Name('line', Load(), lineno=456, col_offset=42)], [], None, None, lineno=456, col_offset=25), lineno=456, col_offset=20), If(Name('mo', Load(), lineno=457, col_offset=23), [Assign([Name('line', Store(), lineno=458, col_offset=24)], Subscript(Name('line', Load(), lineno=458, col_offset=31), Slice(None, UnaryOp(USub(), Call(Name('len', Load(), lineno=458, col_offset=38), [Call(Attribute(Name('mo', Load(), lineno=458, col_offset=42), 'group', Load(), lineno=458, col_offset=42), [Num(0, lineno=458, col_offset=51)], [], None, None, lineno=458, col_offset=42)], [], None, None, lineno=458, col_offset=38), lineno=458, col_offset=37), None), Load(), lineno=458, col_offset=31), lineno=458, col_offset=24)], [], lineno=457, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=459, col_offset=20), '_cur', Load(), lineno=459, col_offset=20), 'set_unixfrom', Load(), lineno=459, col_offset=20), [Name('line', Load(), lineno=459, col_offset=43)], [], None, None, lineno=459, col_offset=20), lineno=459, col_offset=20), Continue( lineno=460, col_offset=20)], [If(Compare(Name('lineno', Load(), lineno=461, col_offset=21), [Eq()], [BinOp(Call(Name('len', Load(), lineno=461, col_offset=31), [Name('lines', Load(), lineno=461, col_offset=35)], [], None, None, lineno=461, col_offset=31), Sub(), Num(1, lineno=461, col_offset=44), lineno=461, col_offset=31)], lineno=461, col_offset=21), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=465, col_offset=20), '_input', Load(), lineno=465, col_offset=20), 'unreadline', Load(), lineno=465, col_offset=20), [Name('line', Load(), lineno=465, col_offset=43)], [], None, None, lineno=465, col_offset=20), lineno=465, col_offset=20), Return(None, lineno=466, col_offset=20)], [Assign([Name('defect', Store(), lineno=470, col_offset=20)], Call(Attribute(Name('errors', Load(), lineno=470, col_offset=29), 'MisplacedEnvelopeHeaderDefect', Load(), lineno=470, col_offset=29), [Name('line', Load(), lineno=470, col_offset=66)], [], None, None, lineno=470, col_offset=29), lineno=470, col_offset=20), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=471, col_offset=20), '_cur', Load(), lineno=471, col_offset=20), 'defects', Load(), lineno=471, col_offset=20), 'append', Load(), lineno=471, col_offset=20), [Name('defect', Load(), lineno=471, col_offset=45)], [], None, None, lineno=471, col_offset=20), lineno=471, col_offset=20), Continue( lineno=472, col_offset=20)], lineno=461, col_offset=21)], lineno=454, col_offset=16)], [], lineno=453, col_offset=12), Assign([Name('i', Store(), lineno=474, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=474, col_offset=16), 'find', Load(), lineno=474, col_offset=16), [Str(':', lineno=474, col_offset=26)], [], None, None, lineno=474, col_offset=16), lineno=474, col_offset=12), If(Compare(Name('i', Load(), lineno=475, col_offset=15), [Lt()], [Num(0, lineno=475, col_offset=19)], lineno=475, col_offset=15), [Assign([Name('defect', Store(), lineno=476, col_offset=16)], Call(Attribute(Name('errors', Load(), lineno=476, col_offset=25), 'MalformedHeaderDefect', Load(), lineno=476, col_offset=25), [Name('line', Load(), lineno=476, col_offset=54)], [], None, None, lineno=476, col_offset=25), lineno=476, col_offset=16), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=477, col_offset=16), '_cur', Load(), lineno=477, col_offset=16), 'defects', Load(), lineno=477, col_offset=16), 'append', Load(), lineno=477, col_offset=16), [Name('defect', Load(), lineno=477, col_offset=41)], [], None, None, lineno=477, col_offset=16), lineno=477, col_offset=16), Continue( lineno=478, col_offset=16)], [], lineno=475, col_offset=12), Assign([Name('lastheader', Store(), lineno=479, col_offset=12)], Subscript(Name('line', Load(), lineno=479, col_offset=25), Slice(None, Name('i', Load(), lineno=479, col_offset=31), None), Load(), lineno=479, col_offset=25), lineno=479, col_offset=12), Assign([Name('lastvalue', Store(), lineno=480, col_offset=12)], List([Call(Attribute(Subscript(Name('line', Load(), lineno=480, col_offset=25), Slice(BinOp(Name('i', Load(), lineno=480, col_offset=30), Add(), Num(1, lineno=480, col_offset=32), lineno=480, col_offset=30), None, None), Load(), lineno=480, col_offset=25), 'lstrip', Load(), lineno=480, col_offset=25), [], [], None, None, lineno=480, col_offset=25)], Load(), lineno=480, col_offset=24), lineno=480, col_offset=12)], [], lineno=435, col_offset=8), If(Name('lastheader', Load(), lineno=482, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=484, col_offset=12), '_cur', Load(), lineno=484, col_offset=12), Index(Name('lastheader', Load(), lineno=484, col_offset=22)), Store(), lineno=484, col_offset=12)], Call(Attribute(Call(Attribute(Name('EMPTYSTRING', Load(), lineno=484, col_offset=36), 'join', Load(), lineno=484, col_offset=36), [Name('lastvalue', Load(), lineno=484, col_offset=53)], [], None, None, lineno=484, col_offset=36), 'rstrip', Load(), lineno=484, col_offset=36), [Str('\r\n', lineno=484, col_offset=71)], [], None, None, lineno=484, col_offset=36), lineno=484, col_offset=12)], [], lineno=482, col_offset=8)], [], lineno=431, col_offset=4)], [], lineno=137, col_offset=0)])
