Module([Import([alias('string', None)], lineno=6, col_offset=0), Assign([Name('MACHEADERFILE', Store(), lineno=9, col_offset=0)], Str('Drag.h', lineno=9, col_offset=16), lineno=9, col_offset=0), Assign([Name('MODNAME', Store(), lineno=10, col_offset=0)], Str('_Drag', lineno=10, col_offset=10), lineno=10, col_offset=0), Assign([Name('OBJECTNAME', Store(), lineno=11, col_offset=0)], Str('DragObj', lineno=11, col_offset=13), lineno=11, col_offset=0), Assign([Name('MODPREFIX', Store(), lineno=14, col_offset=0)], Str('Drag', lineno=14, col_offset=12), lineno=14, col_offset=0), Assign([Name('OBJECTTYPE', Store(), lineno=15, col_offset=0)], Str('DragRef', lineno=15, col_offset=13), lineno=15, col_offset=0), Assign([Name('OBJECTPREFIX', Store(), lineno=16, col_offset=0)], BinOp(Name('MODPREFIX', Load(), lineno=16, col_offset=15), Add(), Str('Obj', lineno=16, col_offset=27), lineno=16, col_offset=15), lineno=16, col_offset=0), Assign([Name('INPUTFILE', Store(), lineno=17, col_offset=0)], BinOp(Call(Attribute(Name('string', Load(), lineno=17, col_offset=12), 'lower', Load(), lineno=17, col_offset=12), [Name('MODPREFIX', Load(), lineno=17, col_offset=25)], [], None, None, lineno=17, col_offset=12), Add(), Str('gen.py', lineno=17, col_offset=38), lineno=17, col_offset=12), lineno=17, col_offset=0), Assign([Name('OUTPUTFILE', Store(), lineno=18, col_offset=0)], BinOp(Name('MODNAME', Load(), lineno=18, col_offset=13), Add(), Str('module.c', lineno=18, col_offset=23), lineno=18, col_offset=13), lineno=18, col_offset=0), ImportFrom('macsupport', [alias('*', None)], 0, lineno=20, col_offset=0), Assign([Name('DragRef', Store(), lineno=24, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=24, col_offset=10), [Name('OBJECTTYPE', Load(), lineno=24, col_offset=28), Name('OBJECTPREFIX', Load(), lineno=24, col_offset=40)], [], None, None, lineno=24, col_offset=10), lineno=24, col_offset=0), Assign([Name('DragItemRef', Store(), lineno=25, col_offset=0)], Call(Name('Type', Load(), lineno=25, col_offset=14), [Str('ItemReference', lineno=25, col_offset=19), Str('l', lineno=25, col_offset=36)], [], None, None, lineno=25, col_offset=14), lineno=25, col_offset=0), Assign([Name('DragReference', Store(), lineno=27, col_offset=0)], Name('DragRef', Load(), lineno=27, col_offset=16), lineno=27, col_offset=0), Assign([Name('ItemReference', Store(), lineno=28, col_offset=0)], Name('DragItemRef', Load(), lineno=28, col_offset=16), lineno=28, col_offset=0), Assign([Name('PixMapHandle', Store(), lineno=30, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=30, col_offset=15), [Str('PixMapHandle', lineno=30, col_offset=33), Str('ResObj', lineno=30, col_offset=49)], [], None, None, lineno=30, col_offset=15), lineno=30, col_offset=0), Assign([Name('RgnHandle', Store(), lineno=31, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=31, col_offset=12), [Str('RgnHandle', lineno=31, col_offset=30), Str('ResObj', lineno=31, col_offset=43)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=0), Assign([Name('AEDesc', Store(), lineno=32, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=32, col_offset=9), [Str('AEDesc', lineno=32, col_offset=20)], [], None, None, lineno=32, col_offset=9), lineno=32, col_offset=0), Assign([Name('AEDesc_ptr', Store(), lineno=33, col_offset=0)], Name('AEDesc', Load(), lineno=33, col_offset=13), lineno=33, col_offset=0), Assign([Name('RGBColor', Store(), lineno=34, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=34, col_offset=11), [Str('RGBColor', lineno=34, col_offset=22), Str('QdRGB', lineno=34, col_offset=34)], [], None, None, lineno=34, col_offset=11), lineno=34, col_offset=0), Assign([Name('FlavorType', Store(), lineno=36, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=36, col_offset=13), [Str('FlavorType', lineno=36, col_offset=24)], [], None, None, lineno=36, col_offset=13), lineno=36, col_offset=0), Assign([Name('DragAttributes', Store(), lineno=37, col_offset=0)], Call(Name('Type', Load(), lineno=37, col_offset=17), [Str('DragAttributes', lineno=37, col_offset=22), Str('l', lineno=37, col_offset=40)], [], None, None, lineno=37, col_offset=17), lineno=37, col_offset=0), Assign([Name('DragBehaviors', Store(), lineno=38, col_offset=0)], Call(Name('Type', Load(), lineno=38, col_offset=16), [Str('DragBehaviors', lineno=38, col_offset=21), Str('l', lineno=38, col_offset=38)], [], None, None, lineno=38, col_offset=16), lineno=38, col_offset=0), Assign([Name('DragImageFlags', Store(), lineno=39, col_offset=0)], Call(Name('Type', Load(), lineno=39, col_offset=17), [Str('DragImageFlags', lineno=39, col_offset=22), Str('l', lineno=39, col_offset=40)], [], None, None, lineno=39, col_offset=17), lineno=39, col_offset=0), Assign([Name('DragImageTranslucency', Store(), lineno=40, col_offset=0)], Call(Name('Type', Load(), lineno=40, col_offset=24), [Str('DragImageTranslucency', lineno=40, col_offset=29), Str('l', lineno=40, col_offset=54)], [], None, None, lineno=40, col_offset=24), lineno=40, col_offset=0), Assign([Name('DragRegionMessage', Store(), lineno=41, col_offset=0)], Call(Name('Type', Load(), lineno=41, col_offset=20), [Str('DragRegionMessage', lineno=41, col_offset=25), Str('h', lineno=41, col_offset=46)], [], None, None, lineno=41, col_offset=20), lineno=41, col_offset=0), Assign([Name('ZoomAcceleration', Store(), lineno=42, col_offset=0)], Call(Name('Type', Load(), lineno=42, col_offset=19), [Str('ZoomAcceleration', lineno=42, col_offset=24), Str('h', lineno=42, col_offset=44)], [], None, None, lineno=42, col_offset=19), lineno=42, col_offset=0), Assign([Name('FlavorFlags', Store(), lineno=43, col_offset=0)], Call(Name('Type', Load(), lineno=43, col_offset=14), [Str('FlavorFlags', lineno=43, col_offset=19), Str('l', lineno=43, col_offset=34)], [], None, None, lineno=43, col_offset=14), lineno=43, col_offset=0), Assign([Name('DragTrackingMessage', Store(), lineno=44, col_offset=0)], Call(Name('Type', Load(), lineno=44, col_offset=22), [Str('DragTrackingMessage', lineno=44, col_offset=27), Str('h', lineno=44, col_offset=50)], [], None, None, lineno=44, col_offset=22), lineno=44, col_offset=0), Assign([Name('includestuff', Store(), lineno=46, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=46, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n\n/* Callback glue routines */\nDragTrackingHandlerUPP dragglue_TrackingHandlerUPP;\nDragReceiveHandlerUPP dragglue_ReceiveHandlerUPP;\nDragSendDataUPP dragglue_SendDataUPP;\n#if 0\nDragInputUPP dragglue_InputUPP;\nDragDrawingUPP dragglue_DrawingUPP;\n#endif\n\n#ifdef USE_TOOLBOX_OBJECT_GLUE\nextern PyObject *_DragObj_New(DragRef);\nextern int _DragObj_Convert(PyObject *, DragRef *);\n\n#define DragObj_New _DragObj_New\n#define DragObj_Convert _DragObj_Convert\n#endif\n', lineno=65, col_offset=-1), lineno=46, col_offset=15), lineno=46, col_offset=0), Assign([Name('finalstuff', Store(), lineno=67, col_offset=0)], BinOp(Name('finalstuff', Load(), lineno=67, col_offset=13), Add(), Str('\nstatic pascal OSErr\ndragglue_TrackingHandler(DragTrackingMessage theMessage, WindowPtr theWindow,\n                         void *handlerRefCon, DragReference theDrag)\n{\n        PyObject *args, *rv;\n        int i;\n\n        args = Py_BuildValue("hO&O&", theMessage, DragObj_New, theDrag, WinObj_WhichWindow, theWindow);\n        if ( args == NULL )\n                return -1;\n        rv = PyEval_CallObject((PyObject *)handlerRefCon, args);\n        Py_DECREF(args);\n        if ( rv == NULL ) {\n                PySys_WriteStderr("Drag: Exception in TrackingHandler\\n");\n                PyErr_Print();\n                return -1;\n        }\n        i = -1;\n        if ( rv == Py_None )\n                i = 0;\n        else\n                PyArg_Parse(rv, "l", &i);\n        Py_DECREF(rv);\n        return i;\n}\n\nstatic pascal OSErr\ndragglue_ReceiveHandler(WindowPtr theWindow, void *handlerRefCon,\n                        DragReference theDrag)\n{\n        PyObject *args, *rv;\n        int i;\n\n        args = Py_BuildValue("O&O&", DragObj_New, theDrag, WinObj_WhichWindow, theWindow);\n        if ( args == NULL )\n                return -1;\n        rv = PyEval_CallObject((PyObject *)handlerRefCon, args);\n        Py_DECREF(args);\n        if ( rv == NULL ) {\n                PySys_WriteStderr("Drag: Exception in ReceiveHandler\\n");\n                PyErr_Print();\n                return -1;\n        }\n        i = -1;\n        if ( rv == Py_None )\n                i = 0;\n        else\n                PyArg_Parse(rv, "l", &i);\n        Py_DECREF(rv);\n        return i;\n}\n\nstatic pascal OSErr\ndragglue_SendData(FlavorType theType, void *dragSendRefCon,\n                      ItemReference theItem, DragReference theDrag)\n{\n        DragObjObject *self = (DragObjObject *)dragSendRefCon;\n        PyObject *args, *rv;\n        int i;\n\n        if ( self->sendproc == NULL )\n                return -1;\n        args = Py_BuildValue("O&l", PyMac_BuildOSType, theType, theItem);\n        if ( args == NULL )\n                return -1;\n        rv = PyEval_CallObject(self->sendproc, args);\n        Py_DECREF(args);\n        if ( rv == NULL ) {\n                PySys_WriteStderr("Drag: Exception in SendDataHandler\\n");\n                PyErr_Print();\n                return -1;\n        }\n        i = -1;\n        if ( rv == Py_None )\n                i = 0;\n        else\n                PyArg_Parse(rv, "l", &i);\n        Py_DECREF(rv);\n        return i;\n}\n\n#if 0\nstatic pascal OSErr\ndragglue_Input(Point *mouse, short *modifiers,\n                   void *dragSendRefCon, DragReference theDrag)\n{\n    return 0;\n}\n\nstatic pascal OSErr\ndragglue_Drawing(xxxx\n                   void *dragSendRefCon, DragReference theDrag)\n{\n    return 0;\n}\n#endif\n\n', lineno=165, col_offset=-1), lineno=67, col_offset=13), lineno=67, col_offset=0), Assign([Name('initstuff', Store(), lineno=167, col_offset=0)], BinOp(Name('initstuff', Load(), lineno=167, col_offset=12), Add(), Str('\n        PyMac_INIT_TOOLBOX_OBJECT_NEW(DragRef, DragObj_New);\n        PyMac_INIT_TOOLBOX_OBJECT_CONVERT(DragRef, DragObj_Convert);\n', lineno=170, col_offset=-1), lineno=167, col_offset=12), lineno=167, col_offset=0), Assign([Name('variablestuff', Store(), lineno=172, col_offset=0)], Str('\ndragglue_TrackingHandlerUPP = NewDragTrackingHandlerUPP(dragglue_TrackingHandler);\ndragglue_ReceiveHandlerUPP = NewDragReceiveHandlerUPP(dragglue_ReceiveHandler);\ndragglue_SendDataUPP = NewDragSendDataUPP(dragglue_SendData);\n#if 0\ndragglue_InputUPP = NewDragInputUPP(dragglue_Input);\ndragglue_DrawingUPP = NewDragDrawingUPP(dragglue_Drawing);\n#endif\n', lineno=180, col_offset=-1), lineno=172, col_offset=0), ClassDef('MyObjectDefinition', [Name('PEP253Mixin', Load(), lineno=182, col_offset=25), Name('GlobalObjectDefinition', Load(), lineno=182, col_offset=38)], [FunctionDef('outputCheckNewArg', arguments([Name('self', Param(), lineno=183, col_offset=26)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=184, col_offset=8), [Str('if (itself == NULL) {\n                                PyErr_SetString(Drag_Error,"Cannot create null Drag");\n                                return NULL;\n                        }', lineno=187, col_offset=-1)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('outputFreeIt', arguments([Name('self', Param(), lineno=188, col_offset=21), Name('itselfname', Param(), lineno=188, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=190, col_offset=8), [Str('Py_XDECREF(self->sendproc);', lineno=190, col_offset=15)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=188, col_offset=4), FunctionDef('outputStructMembers', arguments([Name('self', Param(), lineno=194, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=195, col_offset=8), 'outputStructMembers', Load(), lineno=195, col_offset=8), [Name('self', Load(), lineno=195, col_offset=51)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Expr(Call(Name('Output', Load(), lineno=196, col_offset=8), [Str('PyObject *sendproc;', lineno=196, col_offset=15)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('outputInitStructMembers', arguments([Name('self', Param(), lineno=200, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('GlobalObjectDefinition', Load(), lineno=201, col_offset=8), 'outputInitStructMembers', Load(), lineno=201, col_offset=8), [Name('self', Load(), lineno=201, col_offset=55)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Name('Output', Load(), lineno=202, col_offset=8), [Str('it->sendproc = NULL;', lineno=202, col_offset=15)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=200, col_offset=4)], [], lineno=182, col_offset=0), Assign([Name('module', Store(), lineno=208, col_offset=0)], Call(Name('MacModule', Load(), lineno=208, col_offset=9), [Name('MODNAME', Load(), lineno=208, col_offset=19), Name('MODPREFIX', Load(), lineno=208, col_offset=28), Name('includestuff', Load(), lineno=208, col_offset=39), Name('finalstuff', Load(), lineno=208, col_offset=53), Name('initstuff', Load(), lineno=208, col_offset=65), Name('variablestuff', Load(), lineno=208, col_offset=76)], [], None, None, lineno=208, col_offset=9), lineno=208, col_offset=0), Assign([Name('object', Store(), lineno=209, col_offset=0)], Call(Name('MyObjectDefinition', Load(), lineno=209, col_offset=9), [Name('OBJECTNAME', Load(), lineno=209, col_offset=28), Name('OBJECTPREFIX', Load(), lineno=209, col_offset=40), Name('OBJECTTYPE', Load(), lineno=209, col_offset=54)], [], None, None, lineno=209, col_offset=9), lineno=209, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=210, col_offset=0), 'addobject', Load(), lineno=210, col_offset=0), [Name('object', Load(), lineno=210, col_offset=17)], [], None, None, lineno=210, col_offset=0), lineno=210, col_offset=0), Assign([Name('Function', Store(), lineno=213, col_offset=0)], Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=213, col_offset=11), lineno=213, col_offset=0), Assign([Name('Method', Store(), lineno=214, col_offset=0)], Name('OSErrWeakLinkMethodGenerator', Load(), lineno=214, col_offset=9), lineno=214, col_offset=0), Assign([Name('functions', Store(), lineno=217, col_offset=0)], List([], Load(), lineno=217, col_offset=12), lineno=217, col_offset=0), Assign([Name('methods', Store(), lineno=218, col_offset=0)], List([], Load(), lineno=218, col_offset=10), lineno=218, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=219, col_offset=0), [Name('INPUTFILE', Load(), lineno=219, col_offset=9)], [], None, None, lineno=219, col_offset=0), lineno=219, col_offset=0), For(Name('f', Store(), lineno=222, col_offset=4), Name('functions', Load(), lineno=222, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=222, col_offset=20), 'add', Load(), lineno=222, col_offset=20), [Name('f', Load(), lineno=222, col_offset=31)], [], None, None, lineno=222, col_offset=20), lineno=222, col_offset=20)], [], lineno=222, col_offset=0), For(Name('f', Store(), lineno=223, col_offset=4), Name('methods', Load(), lineno=223, col_offset=9), [Expr(Call(Attribute(Name('object', Load(), lineno=223, col_offset=18), 'add', Load(), lineno=223, col_offset=18), [Name('f', Load(), lineno=223, col_offset=29)], [], None, None, lineno=223, col_offset=18), lineno=223, col_offset=18)], [], lineno=223, col_offset=0), Assign([Name('installtracking_body', Store(), lineno=227, col_offset=0)], Str('\n    PyObject *callback;\n    WindowPtr theWindow = NULL;\n    OSErr _err;\n\n    if ( !PyArg_ParseTuple(_args, "O|O&", &callback, WinObj_Convert, &theWindow) )\n        return NULL;\n    Py_INCREF(callback);        /* Cannot decref later, too bad */\n    _err = InstallTrackingHandler(dragglue_TrackingHandlerUPP, theWindow, (void *)callback);\n        if (_err != noErr) return PyMac_Error(_err);\n        Py_INCREF(Py_None);\n        _res = Py_None;\n        return _res;\n', lineno=240, col_offset=-1), lineno=227, col_offset=0), Assign([Name('installtracking', Store(), lineno=241, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=241, col_offset=18), [Str('InstallTrackingHandler', lineno=241, col_offset=34), Name('installtracking_body', Load(), lineno=241, col_offset=60)], [], None, None, lineno=241, col_offset=18), lineno=241, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=242, col_offset=0), 'add', Load(), lineno=242, col_offset=0), [Name('installtracking', Load(), lineno=242, col_offset=11)], [], None, None, lineno=242, col_offset=0), lineno=242, col_offset=0), Assign([Name('installreceive_body', Store(), lineno=244, col_offset=0)], Str('\n    PyObject *callback;\n    WindowPtr theWindow = NULL;\n    OSErr _err;\n\n    if ( !PyArg_ParseTuple(_args, "O|O&", &callback, WinObj_Convert, &theWindow) )\n        return NULL;\n    Py_INCREF(callback);        /* Cannot decref later, too bad */\n    _err = InstallReceiveHandler(dragglue_ReceiveHandlerUPP, theWindow, (void *)callback);\n        if (_err != noErr) return PyMac_Error(_err);\n        Py_INCREF(Py_None);\n        _res = Py_None;\n        return _res;\n', lineno=257, col_offset=-1), lineno=244, col_offset=0), Assign([Name('installreceive', Store(), lineno=258, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=258, col_offset=17), [Str('InstallReceiveHandler', lineno=258, col_offset=33), Name('installreceive_body', Load(), lineno=258, col_offset=58)], [], None, None, lineno=258, col_offset=17), lineno=258, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=259, col_offset=0), 'add', Load(), lineno=259, col_offset=0), [Name('installreceive', Load(), lineno=259, col_offset=11)], [], None, None, lineno=259, col_offset=0), lineno=259, col_offset=0), Assign([Name('removetracking_body', Store(), lineno=261, col_offset=0)], Str('\n    WindowPtr theWindow = NULL;\n    OSErr _err;\n\n    if ( !PyArg_ParseTuple(_args, "|O&", WinObj_Convert, &theWindow) )\n        return NULL;\n    _err = RemoveTrackingHandler(dragglue_TrackingHandlerUPP, theWindow);\n        if (_err != noErr) return PyMac_Error(_err);\n        Py_INCREF(Py_None);\n        _res = Py_None;\n        return _res;\n', lineno=272, col_offset=-1), lineno=261, col_offset=0), Assign([Name('removetracking', Store(), lineno=273, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=273, col_offset=17), [Str('RemoveTrackingHandler', lineno=273, col_offset=33), Name('removetracking_body', Load(), lineno=273, col_offset=58)], [], None, None, lineno=273, col_offset=17), lineno=273, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=274, col_offset=0), 'add', Load(), lineno=274, col_offset=0), [Name('removetracking', Load(), lineno=274, col_offset=11)], [], None, None, lineno=274, col_offset=0), lineno=274, col_offset=0), Assign([Name('removereceive_body', Store(), lineno=276, col_offset=0)], Str('\n    WindowPtr theWindow = NULL;\n    OSErr _err;\n\n    if ( !PyArg_ParseTuple(_args, "|O&", WinObj_Convert, &theWindow) )\n        return NULL;\n    _err = RemoveReceiveHandler(dragglue_ReceiveHandlerUPP, theWindow);\n        if (_err != noErr) return PyMac_Error(_err);\n        Py_INCREF(Py_None);\n        _res = Py_None;\n        return _res;\n', lineno=287, col_offset=-1), lineno=276, col_offset=0), Assign([Name('removereceive', Store(), lineno=288, col_offset=0)], Call(Name('ManualGenerator', Load(), lineno=288, col_offset=16), [Str('RemoveReceiveHandler', lineno=288, col_offset=32), Name('removereceive_body', Load(), lineno=288, col_offset=56)], [], None, None, lineno=288, col_offset=16), lineno=288, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=289, col_offset=0), 'add', Load(), lineno=289, col_offset=0), [Name('removereceive', Load(), lineno=289, col_offset=11)], [], None, None, lineno=289, col_offset=0), lineno=289, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=292, col_offset=0), [Name('OUTPUTFILE', Load(), lineno=292, col_offset=18)], [], None, None, lineno=292, col_offset=0), lineno=292, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=293, col_offset=0), 'generate', Load(), lineno=293, col_offset=0), [], [], None, None, lineno=293, col_offset=0), lineno=293, col_offset=0)])
