Module([Expr(Str("Interface to the compiler's internal symbol tables", lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('_symtable', None)], lineno=3, col_offset=0), ImportFrom('_symtable', [alias('USE', None), alias('DEF_GLOBAL', None), alias('DEF_LOCAL', None), alias('DEF_PARAM', None), alias('DEF_IMPORT', None), alias('DEF_BOUND', None), alias('OPT_IMPORT_STAR', None), alias('OPT_EXEC', None), alias('OPT_BARE_EXEC', None), alias('SCOPE_OFF', None), alias('SCOPE_MASK', None), alias('FREE', None), alias('GLOBAL_IMPLICIT', None), alias('GLOBAL_EXPLICIT', None), alias('CELL', None), alias('LOCAL', None)], 0, lineno=4, col_offset=0), Import([alias('weakref', None)], lineno=8, col_offset=0), Assign([Name('__all__', Store(), lineno=10, col_offset=0)], List([Str('symtable', lineno=10, col_offset=11), Str('SymbolTable', lineno=10, col_offset=23), Str('Class', lineno=10, col_offset=38), Str('Function', lineno=10, col_offset=47), Str('Symbol', lineno=10, col_offset=59)], Load(), lineno=10, col_offset=10), lineno=10, col_offset=0), FunctionDef('symtable', arguments([Name('code', Param(), lineno=12, col_offset=13), Name('filename', Param(), lineno=12, col_offset=19), Name('compile_type', Param(), lineno=12, col_offset=29)], None, None, []), [Assign([Name('raw', Store(), lineno=13, col_offset=4)], Call(Attribute(Name('_symtable', Load(), lineno=13, col_offset=10), 'symtable', Load(), lineno=13, col_offset=10), [Name('code', Load(), lineno=13, col_offset=29), Name('filename', Load(), lineno=13, col_offset=35), Name('compile_type', Load(), lineno=13, col_offset=45)], [], None, None, lineno=13, col_offset=10), lineno=13, col_offset=4), For(Name('top', Store(), lineno=14, col_offset=8), Call(Attribute(Name('raw', Load(), lineno=14, col_offset=15), 'itervalues', Load(), lineno=14, col_offset=15), [], [], None, None, lineno=14, col_offset=15), [If(Compare(Attribute(Name('top', Load(), lineno=15, col_offset=11), 'name', Load(), lineno=15, col_offset=11), [Eq()], [Str('top', lineno=15, col_offset=23)], lineno=15, col_offset=11), [Break( lineno=16, col_offset=12)], [], lineno=15, col_offset=8)], [], lineno=14, col_offset=4), Return(Call(Name('_newSymbolTable', Load(), lineno=17, col_offset=11), [Name('top', Load(), lineno=17, col_offset=27), Name('filename', Load(), lineno=17, col_offset=32)], [], None, None, lineno=17, col_offset=11), lineno=17, col_offset=4)], [], lineno=12, col_offset=0), ClassDef('SymbolTableFactory', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=20, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=21, col_offset=8), '__memo', Store(), lineno=21, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=21, col_offset=22), 'WeakValueDictionary', Load(), lineno=21, col_offset=22), [], [], None, None, lineno=21, col_offset=22), lineno=21, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('new', arguments([Name('self', Param(), lineno=23, col_offset=12), Name('table', Param(), lineno=23, col_offset=18), Name('filename', Param(), lineno=23, col_offset=25)], None, None, []), [If(Compare(Attribute(Name('table', Load(), lineno=24, col_offset=11), 'type', Load(), lineno=24, col_offset=11), [Eq()], [Attribute(Name('_symtable', Load(), lineno=24, col_offset=25), 'TYPE_FUNCTION', Load(), lineno=24, col_offset=25)], lineno=24, col_offset=11), [Return(Call(Name('Function', Load(), lineno=25, col_offset=19), [Name('table', Load(), lineno=25, col_offset=28), Name('filename', Load(), lineno=25, col_offset=35)], [], None, None, lineno=25, col_offset=19), lineno=25, col_offset=12)], [], lineno=24, col_offset=8), If(Compare(Attribute(Name('table', Load(), lineno=26, col_offset=11), 'type', Load(), lineno=26, col_offset=11), [Eq()], [Attribute(Name('_symtable', Load(), lineno=26, col_offset=25), 'TYPE_CLASS', Load(), lineno=26, col_offset=25)], lineno=26, col_offset=11), [Return(Call(Name('Class', Load(), lineno=27, col_offset=19), [Name('table', Load(), lineno=27, col_offset=25), Name('filename', Load(), lineno=27, col_offset=32)], [], None, None, lineno=27, col_offset=19), lineno=27, col_offset=12)], [], lineno=26, col_offset=8), Return(Call(Name('SymbolTable', Load(), lineno=28, col_offset=15), [Name('table', Load(), lineno=28, col_offset=27), Name('filename', Load(), lineno=28, col_offset=34)], [], None, None, lineno=28, col_offset=15), lineno=28, col_offset=8)], [], lineno=23, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=30, col_offset=17), Name('table', Param(), lineno=30, col_offset=23), Name('filename', Param(), lineno=30, col_offset=30)], None, None, []), [Assign([Name('key', Store(), lineno=31, col_offset=8)], Tuple([Name('table', Load(), lineno=31, col_offset=14), Name('filename', Load(), lineno=31, col_offset=21)], Load(), lineno=31, col_offset=14), lineno=31, col_offset=8), Assign([Name('obj', Store(), lineno=32, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=32, col_offset=14), '__memo', Load(), lineno=32, col_offset=14), 'get', Load(), lineno=32, col_offset=14), [Name('key', Load(), lineno=32, col_offset=30), Name('None', Load(), lineno=32, col_offset=35)], [], None, None, lineno=32, col_offset=14), lineno=32, col_offset=8), If(Compare(Name('obj', Load(), lineno=33, col_offset=11), [Is()], [Name('None', Load(), lineno=33, col_offset=18)], lineno=33, col_offset=11), [Assign([Name('obj', Store(), lineno=34, col_offset=12), Subscript(Attribute(Name('self', Load(), lineno=34, col_offset=18), '__memo', Load(), lineno=34, col_offset=18), Index(Name('key', Load(), lineno=34, col_offset=30)), Store(), lineno=34, col_offset=18)], Call(Attribute(Name('self', Load(), lineno=34, col_offset=37), 'new', Load(), lineno=34, col_offset=37), [Name('table', Load(), lineno=34, col_offset=46), Name('filename', Load(), lineno=34, col_offset=53)], [], None, None, lineno=34, col_offset=37), lineno=34, col_offset=12)], [], lineno=33, col_offset=8), Return(Name('obj', Load(), lineno=35, col_offset=15), lineno=35, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=19, col_offset=0), Assign([Name('_newSymbolTable', Store(), lineno=37, col_offset=0)], Call(Name('SymbolTableFactory', Load(), lineno=37, col_offset=18), [], [], None, None, lineno=37, col_offset=18), lineno=37, col_offset=0), ClassDef('SymbolTable', [Name('object', Load(), lineno=40, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=42, col_offset=17), Name('raw_table', Param(), lineno=42, col_offset=23), Name('filename', Param(), lineno=42, col_offset=34)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), '_table', Store(), lineno=43, col_offset=8)], Name('raw_table', Load(), lineno=43, col_offset=22), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), '_filename', Store(), lineno=44, col_offset=8)], Name('filename', Load(), lineno=44, col_offset=25), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), '_symbols', Store(), lineno=45, col_offset=8)], Dict([], [], lineno=45, col_offset=24), lineno=45, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=47, col_offset=17)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=48, col_offset=11), '__class__', Load(), lineno=48, col_offset=11), [Eq()], [Name('SymbolTable', Load(), lineno=48, col_offset=29)], lineno=48, col_offset=11), [Assign([Name('kind', Store(), lineno=49, col_offset=12)], Str('', lineno=49, col_offset=19), lineno=49, col_offset=12)], [Assign([Name('kind', Store(), lineno=51, col_offset=12)], BinOp(Str('%s ', lineno=51, col_offset=19), Mod(), Attribute(Attribute(Name('self', Load(), lineno=51, col_offset=27), '__class__', Load(), lineno=51, col_offset=27), '__name__', Load(), lineno=51, col_offset=27), lineno=51, col_offset=19), lineno=51, col_offset=12)], lineno=48, col_offset=8), If(Compare(Attribute(Attribute(Name('self', Load(), lineno=53, col_offset=11), '_table', Load(), lineno=53, col_offset=11), 'name', Load(), lineno=53, col_offset=11), [Eq()], [Str('global', lineno=53, col_offset=31)], lineno=53, col_offset=11), [Return(Call(Attribute(Str('<{0}SymbolTable for module {1}>', lineno=54, col_offset=19), 'format', Load(), lineno=54, col_offset=19), [Name('kind', Load(), lineno=54, col_offset=60), Attribute(Name('self', Load(), lineno=54, col_offset=66), '_filename', Load(), lineno=54, col_offset=66)], [], None, None, lineno=54, col_offset=19), lineno=54, col_offset=12)], [Return(Call(Attribute(Str('<{0}SymbolTable for {1} in {2}>', lineno=56, col_offset=19), 'format', Load(), lineno=56, col_offset=19), [Name('kind', Load(), lineno=56, col_offset=60), Attribute(Attribute(Name('self', Load(), lineno=57, col_offset=60), '_table', Load(), lineno=57, col_offset=60), 'name', Load(), lineno=57, col_offset=60), Attribute(Name('self', Load(), lineno=58, col_offset=60), '_filename', Load(), lineno=58, col_offset=60)], [], None, None, lineno=56, col_offset=19), lineno=56, col_offset=12)], lineno=53, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('get_type', arguments([Name('self', Param(), lineno=60, col_offset=17)], None, None, []), [If(Compare(Attribute(Attribute(Name('self', Load(), lineno=61, col_offset=11), '_table', Load(), lineno=61, col_offset=11), 'type', Load(), lineno=61, col_offset=11), [Eq()], [Attribute(Name('_symtable', Load(), lineno=61, col_offset=31), 'TYPE_MODULE', Load(), lineno=61, col_offset=31)], lineno=61, col_offset=11), [Return(Str('module', lineno=62, col_offset=19), lineno=62, col_offset=12)], [], lineno=61, col_offset=8), If(Compare(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=11), '_table', Load(), lineno=63, col_offset=11), 'type', Load(), lineno=63, col_offset=11), [Eq()], [Attribute(Name('_symtable', Load(), lineno=63, col_offset=31), 'TYPE_FUNCTION', Load(), lineno=63, col_offset=31)], lineno=63, col_offset=11), [Return(Str('function', lineno=64, col_offset=19), lineno=64, col_offset=12)], [], lineno=63, col_offset=8), If(Compare(Attribute(Attribute(Name('self', Load(), lineno=65, col_offset=11), '_table', Load(), lineno=65, col_offset=11), 'type', Load(), lineno=65, col_offset=11), [Eq()], [Attribute(Name('_symtable', Load(), lineno=65, col_offset=31), 'TYPE_CLASS', Load(), lineno=65, col_offset=31)], lineno=65, col_offset=11), [Return(Str('class', lineno=66, col_offset=19), lineno=66, col_offset=12)], [], lineno=65, col_offset=8), Assert(Compare(Attribute(Attribute(Name('self', Load(), lineno=67, col_offset=15), '_table', Load(), lineno=67, col_offset=15), 'type', Load(), lineno=67, col_offset=15), [In()], [Tuple([Num(1, lineno=67, col_offset=36), Num(2, lineno=67, col_offset=39), Num(3, lineno=67, col_offset=42)], Load(), lineno=67, col_offset=36)], lineno=67, col_offset=15), Call(Attribute(Str('unexpected type: {0}', lineno=68, col_offset=15), 'format', Load(), lineno=68, col_offset=15), [Attribute(Attribute(Name('self', Load(), lineno=68, col_offset=45), '_table', Load(), lineno=68, col_offset=45), 'type', Load(), lineno=68, col_offset=45)], [], None, None, lineno=68, col_offset=15), lineno=67, col_offset=8)], [], lineno=60, col_offset=4), FunctionDef('get_id', arguments([Name('self', Param(), lineno=70, col_offset=15)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=15), '_table', Load(), lineno=71, col_offset=15), 'id', Load(), lineno=71, col_offset=15), lineno=71, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('get_name', arguments([Name('self', Param(), lineno=73, col_offset=17)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=74, col_offset=15), '_table', Load(), lineno=74, col_offset=15), 'name', Load(), lineno=74, col_offset=15), lineno=74, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('get_lineno', arguments([Name('self', Param(), lineno=76, col_offset=19)], None, None, []), [Return(Attribute(Attribute(Name('self', Load(), lineno=77, col_offset=15), '_table', Load(), lineno=77, col_offset=15), 'lineno', Load(), lineno=77, col_offset=15), lineno=77, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('is_optimized', arguments([Name('self', Param(), lineno=79, col_offset=21)], None, None, []), [Return(Call(Name('bool', Load(), lineno=80, col_offset=15), [BoolOp(And(), [Compare(Attribute(Attribute(Name('self', Load(), lineno=80, col_offset=20), '_table', Load(), lineno=80, col_offset=20), 'type', Load(), lineno=80, col_offset=20), [Eq()], [Attribute(Name('_symtable', Load(), lineno=80, col_offset=40), 'TYPE_FUNCTION', Load(), lineno=80, col_offset=40)], lineno=80, col_offset=20), UnaryOp(Not(), Attribute(Attribute(Name('self', Load(), lineno=81, col_offset=28), '_table', Load(), lineno=81, col_offset=28), 'optimized', Load(), lineno=81, col_offset=28), lineno=81, col_offset=24)], lineno=80, col_offset=20)], [], None, None, lineno=80, col_offset=15), lineno=80, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('is_nested', arguments([Name('self', Param(), lineno=83, col_offset=18)], None, None, []), [Return(Call(Name('bool', Load(), lineno=84, col_offset=15), [Attribute(Attribute(Name('self', Load(), lineno=84, col_offset=20), '_table', Load(), lineno=84, col_offset=20), 'nested', Load(), lineno=84, col_offset=20)], [], None, None, lineno=84, col_offset=15), lineno=84, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('has_children', arguments([Name('self', Param(), lineno=86, col_offset=21)], None, None, []), [Return(Call(Name('bool', Load(), lineno=87, col_offset=15), [Attribute(Attribute(Name('self', Load(), lineno=87, col_offset=20), '_table', Load(), lineno=87, col_offset=20), 'children', Load(), lineno=87, col_offset=20)], [], None, None, lineno=87, col_offset=15), lineno=87, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('has_exec', arguments([Name('self', Param(), lineno=89, col_offset=17)], None, None, []), [Expr(Str('Return true if the scope uses exec', lineno=90, col_offset=8), lineno=90, col_offset=8), Return(Call(Name('bool', Load(), lineno=91, col_offset=15), [BinOp(Attribute(Attribute(Name('self', Load(), lineno=91, col_offset=20), '_table', Load(), lineno=91, col_offset=20), 'optimized', Load(), lineno=91, col_offset=20), BitAnd(), BinOp(Name('OPT_EXEC', Load(), lineno=91, col_offset=45), BitOr(), Name('OPT_BARE_EXEC', Load(), lineno=91, col_offset=56), lineno=91, col_offset=45), lineno=91, col_offset=20)], [], None, None, lineno=91, col_offset=15), lineno=91, col_offset=8)], [], lineno=89, col_offset=4), FunctionDef('has_import_star', arguments([Name('self', Param(), lineno=93, col_offset=24)], None, None, []), [Expr(Str('Return true if the scope uses import *', lineno=94, col_offset=8), lineno=94, col_offset=8), Return(Call(Name('bool', Load(), lineno=95, col_offset=15), [BinOp(Attribute(Attribute(Name('self', Load(), lineno=95, col_offset=20), '_table', Load(), lineno=95, col_offset=20), 'optimized', Load(), lineno=95, col_offset=20), BitAnd(), Name('OPT_IMPORT_STAR', Load(), lineno=95, col_offset=44), lineno=95, col_offset=20)], [], None, None, lineno=95, col_offset=15), lineno=95, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('get_identifiers', arguments([Name('self', Param(), lineno=97, col_offset=24)], None, None, []), [Return(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=98, col_offset=15), '_table', Load(), lineno=98, col_offset=15), 'symbols', Load(), lineno=98, col_offset=15), 'keys', Load(), lineno=98, col_offset=15), [], [], None, None, lineno=98, col_offset=15), lineno=98, col_offset=8)], [], lineno=97, col_offset=4), FunctionDef('lookup', arguments([Name('self', Param(), lineno=100, col_offset=15), Name('name', Param(), lineno=100, col_offset=21)], None, None, []), [Assign([Name('sym', Store(), lineno=101, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=101, col_offset=14), '_symbols', Load(), lineno=101, col_offset=14), 'get', Load(), lineno=101, col_offset=14), [Name('name', Load(), lineno=101, col_offset=32)], [], None, None, lineno=101, col_offset=14), lineno=101, col_offset=8), If(Compare(Name('sym', Load(), lineno=102, col_offset=11), [Is()], [Name('None', Load(), lineno=102, col_offset=18)], lineno=102, col_offset=11), [Assign([Name('flags', Store(), lineno=103, col_offset=12)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=103, col_offset=20), '_table', Load(), lineno=103, col_offset=20), 'symbols', Load(), lineno=103, col_offset=20), Index(Name('name', Load(), lineno=103, col_offset=40)), Load(), lineno=103, col_offset=20), lineno=103, col_offset=12), Assign([Name('namespaces', Store(), lineno=104, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=104, col_offset=25), '__check_children', Load(), lineno=104, col_offset=25), [Name('name', Load(), lineno=104, col_offset=47)], [], None, None, lineno=104, col_offset=25), lineno=104, col_offset=12), Assign([Name('sym', Store(), lineno=105, col_offset=12), Subscript(Attribute(Name('self', Load(), lineno=105, col_offset=18), '_symbols', Load(), lineno=105, col_offset=18), Index(Name('name', Load(), lineno=105, col_offset=32)), Store(), lineno=105, col_offset=18)], Call(Name('Symbol', Load(), lineno=105, col_offset=40), [Name('name', Load(), lineno=105, col_offset=47), Name('flags', Load(), lineno=105, col_offset=53), Name('namespaces', Load(), lineno=105, col_offset=60)], [], None, None, lineno=105, col_offset=40), lineno=105, col_offset=12)], [], lineno=102, col_offset=8), Return(Name('sym', Load(), lineno=106, col_offset=15), lineno=106, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('get_symbols', arguments([Name('self', Param(), lineno=108, col_offset=20)], None, None, []), [Return(ListComp(Call(Attribute(Name('self', Load(), lineno=109, col_offset=16), 'lookup', Load(), lineno=109, col_offset=16), [Name('ident', Load(), lineno=109, col_offset=28)], [], None, None, lineno=109, col_offset=16), [comprehension(Name('ident', Store(), lineno=109, col_offset=39), Call(Attribute(Name('self', Load(), lineno=109, col_offset=48), 'get_identifiers', Load(), lineno=109, col_offset=48), [], [], None, None, lineno=109, col_offset=48), [])], lineno=109, col_offset=16), lineno=109, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('__check_children', arguments([Name('self', Param(), lineno=111, col_offset=25), Name('name', Param(), lineno=111, col_offset=31)], None, None, []), [Return(ListComp(Call(Name('_newSymbolTable', Load(), lineno=112, col_offset=16), [Name('st', Load(), lineno=112, col_offset=32), Attribute(Name('self', Load(), lineno=112, col_offset=36), '_filename', Load(), lineno=112, col_offset=36)], [], None, None, lineno=112, col_offset=16), [comprehension(Name('st', Store(), lineno=113, col_offset=20), Attribute(Attribute(Name('self', Load(), lineno=113, col_offset=26), '_table', Load(), lineno=113, col_offset=26), 'children', Load(), lineno=113, col_offset=26), [Compare(Attribute(Name('st', Load(), lineno=114, col_offset=19), 'name', Load(), lineno=114, col_offset=19), [Eq()], [Name('name', Load(), lineno=114, col_offset=30)], lineno=114, col_offset=19)])], lineno=112, col_offset=16), lineno=112, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('get_children', arguments([Name('self', Param(), lineno=116, col_offset=21)], None, None, []), [Return(ListComp(Call(Name('_newSymbolTable', Load(), lineno=117, col_offset=16), [Name('st', Load(), lineno=117, col_offset=32), Attribute(Name('self', Load(), lineno=117, col_offset=36), '_filename', Load(), lineno=117, col_offset=36)], [], None, None, lineno=117, col_offset=16), [comprehension(Name('st', Store(), lineno=118, col_offset=20), Attribute(Attribute(Name('self', Load(), lineno=118, col_offset=26), '_table', Load(), lineno=118, col_offset=26), 'children', Load(), lineno=118, col_offset=26), [])], lineno=117, col_offset=16), lineno=117, col_offset=8)], [], lineno=116, col_offset=4)], [], lineno=40, col_offset=0), ClassDef('Function', [Name('SymbolTable', Load(), lineno=121, col_offset=15)], [Assign([Name('__params', Store(), lineno=124, col_offset=4)], Name('None', Load(), lineno=124, col_offset=15), lineno=124, col_offset=4), Assign([Name('__locals', Store(), lineno=125, col_offset=4)], Name('None', Load(), lineno=125, col_offset=15), lineno=125, col_offset=4), Assign([Name('__frees', Store(), lineno=126, col_offset=4)], Name('None', Load(), lineno=126, col_offset=14), lineno=126, col_offset=4), Assign([Name('__globals', Store(), lineno=127, col_offset=4)], Name('None', Load(), lineno=127, col_offset=16), lineno=127, col_offset=4), FunctionDef('__idents_matching', arguments([Name('self', Param(), lineno=129, col_offset=26), Name('test_func', Param(), lineno=129, col_offset=32)], None, None, []), [Return(Call(Name('tuple', Load(), lineno=130, col_offset=15), [ListComp(Name('ident', Load(), lineno=130, col_offset=22), [comprehension(Name('ident', Store(), lineno=130, col_offset=32), Call(Attribute(Name('self', Load(), lineno=130, col_offset=41), 'get_identifiers', Load(), lineno=130, col_offset=41), [], [], None, None, lineno=130, col_offset=41), [Call(Name('test_func', Load(), lineno=131, col_offset=25), [Subscript(Attribute(Attribute(Name('self', Load(), lineno=131, col_offset=35), '_table', Load(), lineno=131, col_offset=35), 'symbols', Load(), lineno=131, col_offset=35), Index(Name('ident', Load(), lineno=131, col_offset=55)), Load(), lineno=131, col_offset=35)], [], None, None, lineno=131, col_offset=25)])], lineno=130, col_offset=22)], [], None, None, lineno=130, col_offset=15), lineno=130, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('get_parameters', arguments([Name('self', Param(), lineno=133, col_offset=23)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=134, col_offset=11), '__params', Load(), lineno=134, col_offset=11), [Is()], [Name('None', Load(), lineno=134, col_offset=28)], lineno=134, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=135, col_offset=12), '__params', Store(), lineno=135, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=135, col_offset=28), '__idents_matching', Load(), lineno=135, col_offset=28), [Lambda(arguments([Name('x', Param(), lineno=135, col_offset=58)], None, None, []), BinOp(Name('x', Load(), lineno=135, col_offset=60), BitAnd(), Name('DEF_PARAM', Load(), lineno=135, col_offset=64), lineno=135, col_offset=60), lineno=135, col_offset=51)], [], None, None, lineno=135, col_offset=28), lineno=135, col_offset=12)], [], lineno=134, col_offset=8), Return(Attribute(Name('self', Load(), lineno=136, col_offset=15), '__params', Load(), lineno=136, col_offset=15), lineno=136, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('get_locals', arguments([Name('self', Param(), lineno=138, col_offset=19)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=139, col_offset=11), '__locals', Load(), lineno=139, col_offset=11), [Is()], [Name('None', Load(), lineno=139, col_offset=28)], lineno=139, col_offset=11), [Assign([Name('locs', Store(), lineno=140, col_offset=12)], Tuple([Name('LOCAL', Load(), lineno=140, col_offset=20), Name('CELL', Load(), lineno=140, col_offset=27)], Load(), lineno=140, col_offset=20), lineno=140, col_offset=12), Assign([Name('test', Store(), lineno=141, col_offset=12)], Lambda(arguments([Name('x', Param(), lineno=141, col_offset=26)], None, None, []), Compare(BinOp(BinOp(Name('x', Load(), lineno=141, col_offset=31), RShift(), Name('SCOPE_OFF', Load(), lineno=141, col_offset=36), lineno=141, col_offset=31), BitAnd(), Name('SCOPE_MASK', Load(), lineno=141, col_offset=49), lineno=141, col_offset=30), [In()], [Name('locs', Load(), lineno=141, col_offset=64)], lineno=141, col_offset=29), lineno=141, col_offset=19), lineno=141, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=142, col_offset=12), '__locals', Store(), lineno=142, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=142, col_offset=28), '__idents_matching', Load(), lineno=142, col_offset=28), [Name('test', Load(), lineno=142, col_offset=51)], [], None, None, lineno=142, col_offset=28), lineno=142, col_offset=12)], [], lineno=139, col_offset=8), Return(Attribute(Name('self', Load(), lineno=143, col_offset=15), '__locals', Load(), lineno=143, col_offset=15), lineno=143, col_offset=8)], [], lineno=138, col_offset=4), FunctionDef('get_globals', arguments([Name('self', Param(), lineno=145, col_offset=20)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=146, col_offset=11), '__globals', Load(), lineno=146, col_offset=11), [Is()], [Name('None', Load(), lineno=146, col_offset=29)], lineno=146, col_offset=11), [Assign([Name('glob', Store(), lineno=147, col_offset=12)], Tuple([Name('GLOBAL_IMPLICIT', Load(), lineno=147, col_offset=20), Name('GLOBAL_EXPLICIT', Load(), lineno=147, col_offset=37)], Load(), lineno=147, col_offset=20), lineno=147, col_offset=12), Assign([Name('test', Store(), lineno=148, col_offset=12)], Lambda(arguments([Name('x', Param(), lineno=148, col_offset=26)], None, None, []), Compare(BinOp(BinOp(Name('x', Load(), lineno=148, col_offset=30), RShift(), Name('SCOPE_OFF', Load(), lineno=148, col_offset=35), lineno=148, col_offset=30), BitAnd(), Name('SCOPE_MASK', Load(), lineno=148, col_offset=48), lineno=148, col_offset=29), [In()], [Name('glob', Load(), lineno=148, col_offset=63)], lineno=148, col_offset=28), lineno=148, col_offset=19), lineno=148, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=149, col_offset=12), '__globals', Store(), lineno=149, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=149, col_offset=29), '__idents_matching', Load(), lineno=149, col_offset=29), [Name('test', Load(), lineno=149, col_offset=52)], [], None, None, lineno=149, col_offset=29), lineno=149, col_offset=12)], [], lineno=146, col_offset=8), Return(Attribute(Name('self', Load(), lineno=150, col_offset=15), '__globals', Load(), lineno=150, col_offset=15), lineno=150, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('get_frees', arguments([Name('self', Param(), lineno=152, col_offset=18)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=153, col_offset=11), '__frees', Load(), lineno=153, col_offset=11), [Is()], [Name('None', Load(), lineno=153, col_offset=27)], lineno=153, col_offset=11), [Assign([Name('is_free', Store(), lineno=154, col_offset=12)], Lambda(arguments([Name('x', Param(), lineno=154, col_offset=29)], None, None, []), Compare(BinOp(BinOp(Name('x', Load(), lineno=154, col_offset=33), RShift(), Name('SCOPE_OFF', Load(), lineno=154, col_offset=38), lineno=154, col_offset=33), BitAnd(), Name('SCOPE_MASK', Load(), lineno=154, col_offset=51), lineno=154, col_offset=32), [Eq()], [Name('FREE', Load(), lineno=154, col_offset=66)], lineno=154, col_offset=31), lineno=154, col_offset=22), lineno=154, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=155, col_offset=12), '__frees', Store(), lineno=155, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=155, col_offset=27), '__idents_matching', Load(), lineno=155, col_offset=27), [Name('is_free', Load(), lineno=155, col_offset=50)], [], None, None, lineno=155, col_offset=27), lineno=155, col_offset=12)], [], lineno=153, col_offset=8), Return(Attribute(Name('self', Load(), lineno=156, col_offset=15), '__frees', Load(), lineno=156, col_offset=15), lineno=156, col_offset=8)], [], lineno=152, col_offset=4)], [], lineno=121, col_offset=0), ClassDef('Class', [Name('SymbolTable', Load(), lineno=159, col_offset=12)], [Assign([Name('__methods', Store(), lineno=161, col_offset=4)], Name('None', Load(), lineno=161, col_offset=16), lineno=161, col_offset=4), FunctionDef('get_methods', arguments([Name('self', Param(), lineno=163, col_offset=20)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=164, col_offset=11), '__methods', Load(), lineno=164, col_offset=11), [Is()], [Name('None', Load(), lineno=164, col_offset=29)], lineno=164, col_offset=11), [Assign([Name('d', Store(), lineno=165, col_offset=12)], Dict([], [], lineno=165, col_offset=16), lineno=165, col_offset=12), For(Name('st', Store(), lineno=166, col_offset=16), Attribute(Attribute(Name('self', Load(), lineno=166, col_offset=22), '_table', Load(), lineno=166, col_offset=22), 'children', Load(), lineno=166, col_offset=22), [Assign([Subscript(Name('d', Load(), lineno=167, col_offset=16), Index(Attribute(Name('st', Load(), lineno=167, col_offset=18), 'name', Load(), lineno=167, col_offset=18)), Store(), lineno=167, col_offset=16)], Num(1, lineno=167, col_offset=29), lineno=167, col_offset=16)], [], lineno=166, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=168, col_offset=12), '__methods', Store(), lineno=168, col_offset=12)], Call(Name('tuple', Load(), lineno=168, col_offset=29), [Name('d', Load(), lineno=168, col_offset=35)], [], None, None, lineno=168, col_offset=29), lineno=168, col_offset=12)], [], lineno=164, col_offset=8), Return(Attribute(Name('self', Load(), lineno=169, col_offset=15), '__methods', Load(), lineno=169, col_offset=15), lineno=169, col_offset=8)], [], lineno=163, col_offset=4)], [], lineno=159, col_offset=0), ClassDef('Symbol', [Name('object', Load(), lineno=172, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=174, col_offset=17), Name('name', Param(), lineno=174, col_offset=23), Name('flags', Param(), lineno=174, col_offset=29), Name('namespaces', Param(), lineno=174, col_offset=36)], None, None, [Name('None', Load(), lineno=174, col_offset=47)]), [Assign([Attribute(Name('self', Load(), lineno=175, col_offset=8), '__name', Store(), lineno=175, col_offset=8)], Name('name', Load(), lineno=175, col_offset=22), lineno=175, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=176, col_offset=8), '__flags', Store(), lineno=176, col_offset=8)], Name('flags', Load(), lineno=176, col_offset=23), lineno=176, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=177, col_offset=8), '__scope', Store(), lineno=177, col_offset=8)], BinOp(BinOp(Name('flags', Load(), lineno=177, col_offset=24), RShift(), Name('SCOPE_OFF', Load(), lineno=177, col_offset=33), lineno=177, col_offset=24), BitAnd(), Name('SCOPE_MASK', Load(), lineno=177, col_offset=46), lineno=177, col_offset=23), lineno=177, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=178, col_offset=8), '__namespaces', Store(), lineno=178, col_offset=8)], BoolOp(Or(), [Name('namespaces', Load(), lineno=178, col_offset=28), Tuple([], Load(), lineno=178, col_offset=42)], lineno=178, col_offset=28), lineno=178, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=180, col_offset=17)], None, None, []), [Return(Call(Attribute(Str('<symbol {0!r}>', lineno=181, col_offset=15), 'format', Load(), lineno=181, col_offset=15), [Attribute(Name('self', Load(), lineno=181, col_offset=39), '__name', Load(), lineno=181, col_offset=39)], [], None, None, lineno=181, col_offset=15), lineno=181, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('get_name', arguments([Name('self', Param(), lineno=183, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=184, col_offset=15), '__name', Load(), lineno=184, col_offset=15), lineno=184, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('is_referenced', arguments([Name('self', Param(), lineno=186, col_offset=22)], None, None, []), [Return(Call(Name('bool', Load(), lineno=187, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=187, col_offset=20), '__flags', Load(), lineno=187, col_offset=20), BitAnd(), Attribute(Name('_symtable', Load(), lineno=187, col_offset=35), 'USE', Load(), lineno=187, col_offset=35), lineno=187, col_offset=20)], [], None, None, lineno=187, col_offset=15), lineno=187, col_offset=8)], [], lineno=186, col_offset=4), FunctionDef('is_parameter', arguments([Name('self', Param(), lineno=189, col_offset=21)], None, None, []), [Return(Call(Name('bool', Load(), lineno=190, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=190, col_offset=20), '__flags', Load(), lineno=190, col_offset=20), BitAnd(), Name('DEF_PARAM', Load(), lineno=190, col_offset=35), lineno=190, col_offset=20)], [], None, None, lineno=190, col_offset=15), lineno=190, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('is_global', arguments([Name('self', Param(), lineno=192, col_offset=18)], None, None, []), [Return(Call(Name('bool', Load(), lineno=193, col_offset=15), [Compare(Attribute(Name('self', Load(), lineno=193, col_offset=20), '__scope', Load(), lineno=193, col_offset=20), [In()], [Tuple([Name('GLOBAL_IMPLICIT', Load(), lineno=193, col_offset=37), Name('GLOBAL_EXPLICIT', Load(), lineno=193, col_offset=54)], Load(), lineno=193, col_offset=37)], lineno=193, col_offset=20)], [], None, None, lineno=193, col_offset=15), lineno=193, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('is_declared_global', arguments([Name('self', Param(), lineno=195, col_offset=27)], None, None, []), [Return(Call(Name('bool', Load(), lineno=196, col_offset=15), [Compare(Attribute(Name('self', Load(), lineno=196, col_offset=20), '__scope', Load(), lineno=196, col_offset=20), [Eq()], [Name('GLOBAL_EXPLICIT', Load(), lineno=196, col_offset=36)], lineno=196, col_offset=20)], [], None, None, lineno=196, col_offset=15), lineno=196, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('is_local', arguments([Name('self', Param(), lineno=198, col_offset=17)], None, None, []), [Return(Call(Name('bool', Load(), lineno=199, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=199, col_offset=20), '__flags', Load(), lineno=199, col_offset=20), BitAnd(), Name('DEF_BOUND', Load(), lineno=199, col_offset=35), lineno=199, col_offset=20)], [], None, None, lineno=199, col_offset=15), lineno=199, col_offset=8)], [], lineno=198, col_offset=4), FunctionDef('is_free', arguments([Name('self', Param(), lineno=201, col_offset=16)], None, None, []), [Return(Call(Name('bool', Load(), lineno=202, col_offset=15), [Compare(Attribute(Name('self', Load(), lineno=202, col_offset=20), '__scope', Load(), lineno=202, col_offset=20), [Eq()], [Name('FREE', Load(), lineno=202, col_offset=36)], lineno=202, col_offset=20)], [], None, None, lineno=202, col_offset=15), lineno=202, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('is_imported', arguments([Name('self', Param(), lineno=204, col_offset=20)], None, None, []), [Return(Call(Name('bool', Load(), lineno=205, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=205, col_offset=20), '__flags', Load(), lineno=205, col_offset=20), BitAnd(), Name('DEF_IMPORT', Load(), lineno=205, col_offset=35), lineno=205, col_offset=20)], [], None, None, lineno=205, col_offset=15), lineno=205, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('is_assigned', arguments([Name('self', Param(), lineno=207, col_offset=20)], None, None, []), [Return(Call(Name('bool', Load(), lineno=208, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=208, col_offset=20), '__flags', Load(), lineno=208, col_offset=20), BitAnd(), Name('DEF_LOCAL', Load(), lineno=208, col_offset=35), lineno=208, col_offset=20)], [], None, None, lineno=208, col_offset=15), lineno=208, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('is_namespace', arguments([Name('self', Param(), lineno=210, col_offset=21)], None, None, []), [Expr(Str('Returns true if name binding introduces new namespace.\n\n        If the name is used as the target of a function or class\n        statement, this will be true.\n\n        Note that a single name can be bound to multiple objects.  If\n        is_namespace() is true, the name may also be bound to other\n        objects, like an int or list, that does not introduce a new\n        namespace.\n        ', lineno=220, col_offset=-1), lineno=220, col_offset=-1), Return(Call(Name('bool', Load(), lineno=221, col_offset=15), [Attribute(Name('self', Load(), lineno=221, col_offset=20), '__namespaces', Load(), lineno=221, col_offset=20)], [], None, None, lineno=221, col_offset=15), lineno=221, col_offset=8)], [], lineno=210, col_offset=4), FunctionDef('get_namespaces', arguments([Name('self', Param(), lineno=223, col_offset=23)], None, None, []), [Expr(Str('Return a list of namespaces bound to this name', lineno=224, col_offset=8), lineno=224, col_offset=8), Return(Attribute(Name('self', Load(), lineno=225, col_offset=15), '__namespaces', Load(), lineno=225, col_offset=15), lineno=225, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('get_namespace', arguments([Name('self', Param(), lineno=227, col_offset=22)], None, None, []), [Expr(Str('Returns the single namespace bound to this name.\n\n        Raises ValueError if the name is bound to multiple namespaces.\n        ', lineno=231, col_offset=-1), lineno=231, col_offset=-1), If(Compare(Call(Name('len', Load(), lineno=232, col_offset=11), [Attribute(Name('self', Load(), lineno=232, col_offset=15), '__namespaces', Load(), lineno=232, col_offset=15)], [], None, None, lineno=232, col_offset=11), [NotEq()], [Num(1, lineno=232, col_offset=37)], lineno=232, col_offset=11), [Raise(Name('ValueError', Load(), lineno=233, col_offset=18), Str('name is bound to multiple namespaces', lineno=233, col_offset=30), None, lineno=233, col_offset=12)], [], lineno=232, col_offset=8), Return(Subscript(Attribute(Name('self', Load(), lineno=234, col_offset=15), '__namespaces', Load(), lineno=234, col_offset=15), Index(Num(0, lineno=234, col_offset=33)), Load(), lineno=234, col_offset=15), lineno=234, col_offset=8)], [], lineno=227, col_offset=4)], [], lineno=172, col_offset=0), If(Compare(Name('__name__', Load(), lineno=236, col_offset=3), [Eq()], [Str('__main__', lineno=236, col_offset=15)], lineno=236, col_offset=3), [Import([alias('os', None), alias('sys', None)], lineno=237, col_offset=4), Assign([Name('src', Store(), lineno=238, col_offset=4)], Call(Attribute(Call(Name('open', Load(), lineno=238, col_offset=10), [Subscript(Attribute(Name('sys', Load(), lineno=238, col_offset=15), 'argv', Load(), lineno=238, col_offset=15), Index(Num(0, lineno=238, col_offset=24)), Load(), lineno=238, col_offset=15)], [], None, None, lineno=238, col_offset=10), 'read', Load(), lineno=238, col_offset=10), [], [], None, None, lineno=238, col_offset=10), lineno=238, col_offset=4), Assign([Name('mod', Store(), lineno=239, col_offset=4)], Call(Name('symtable', Load(), lineno=239, col_offset=10), [Name('src', Load(), lineno=239, col_offset=19), Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=239, col_offset=24), 'path', Load(), lineno=239, col_offset=24), 'split', Load(), lineno=239, col_offset=24), [Subscript(Attribute(Name('sys', Load(), lineno=239, col_offset=38), 'argv', Load(), lineno=239, col_offset=38), Index(Num(0, lineno=239, col_offset=47)), Load(), lineno=239, col_offset=38)], [], None, None, lineno=239, col_offset=24), Index(Num(1, lineno=239, col_offset=51)), Load(), lineno=239, col_offset=24), Str('exec', lineno=239, col_offset=55)], [], None, None, lineno=239, col_offset=10), lineno=239, col_offset=4), For(Name('ident', Store(), lineno=240, col_offset=8), Call(Attribute(Name('mod', Load(), lineno=240, col_offset=17), 'get_identifiers', Load(), lineno=240, col_offset=17), [], [], None, None, lineno=240, col_offset=17), [Assign([Name('info', Store(), lineno=241, col_offset=8)], Call(Attribute(Name('mod', Load(), lineno=241, col_offset=15), 'lookup', Load(), lineno=241, col_offset=15), [Name('ident', Load(), lineno=241, col_offset=26)], [], None, None, lineno=241, col_offset=15), lineno=241, col_offset=8), Print(None, [Name('info', Load(), lineno=242, col_offset=14), Call(Attribute(Name('info', Load(), lineno=242, col_offset=20), 'is_local', Load(), lineno=242, col_offset=20), [], [], None, None, lineno=242, col_offset=20), Call(Attribute(Name('info', Load(), lineno=242, col_offset=37), 'is_namespace', Load(), lineno=242, col_offset=37), [], [], None, None, lineno=242, col_offset=37)], True, lineno=242, col_offset=8)], [], lineno=240, col_offset=4)], [], lineno=236, col_offset=0)])
