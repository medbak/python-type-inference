Module([Import([alias('string', None)], lineno=6, col_offset=0), Assign([Name('MACHEADERFILE', Store(), lineno=9, col_offset=0)], Str('Fonts.h', lineno=9, col_offset=16), lineno=9, col_offset=0), Assign([Name('MODNAME', Store(), lineno=10, col_offset=0)], Str('_Fm', lineno=10, col_offset=10), lineno=10, col_offset=0), Assign([Name('MODPREFIX', Store(), lineno=13, col_offset=0)], Str('Fm', lineno=13, col_offset=12), lineno=13, col_offset=0), Assign([Name('INPUTFILE', Store(), lineno=14, col_offset=0)], BinOp(Call(Attribute(Name('string', Load(), lineno=14, col_offset=12), 'lower', Load(), lineno=14, col_offset=12), [Name('MODPREFIX', Load(), lineno=14, col_offset=25)], [], None, None, lineno=14, col_offset=12), Add(), Str('gen.py', lineno=14, col_offset=38), lineno=14, col_offset=12), lineno=14, col_offset=0), Assign([Name('OUTPUTFILE', Store(), lineno=15, col_offset=0)], BinOp(Name('MODNAME', Load(), lineno=15, col_offset=13), Add(), Str('module.c', lineno=15, col_offset=23), lineno=15, col_offset=13), lineno=15, col_offset=0), ImportFrom('macsupport', [alias('*', None)], 0, lineno=17, col_offset=0), ClassDef('RevVarInputBufferType', [Name('VarInputBufferType', Load(), lineno=21, col_offset=28)], [FunctionDef('passInput', arguments([Name('self', Param(), lineno=22, col_offset=18), Name('name', Param(), lineno=22, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__len__, %s__in__', lineno=23, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=23, col_offset=40), Name('name', Load(), lineno=23, col_offset=46)], Load(), lineno=23, col_offset=40), lineno=23, col_offset=15), lineno=23, col_offset=8)], [], lineno=22, col_offset=4)], [], lineno=21, col_offset=0), Assign([Name('TextBuffer', Store(), lineno=25, col_offset=0)], Call(Name('RevVarInputBufferType', Load(), lineno=25, col_offset=13), [], [], None, None, lineno=25, col_offset=13), lineno=25, col_offset=0), Assign([Name('includestuff', Store(), lineno=28, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=28, col_offset=15), Add(), Str('\n#include <Carbon/Carbon.h>\n\n\n/*\n** Parse/generate ComponentDescriptor records\n*/\nstatic PyObject *\nFMRec_New(FMetricRec *itself)\n{\n\n        return Py_BuildValue("O&O&O&O&O&",\n                PyMac_BuildFixed, itself->ascent,\n                PyMac_BuildFixed, itself->descent,\n                PyMac_BuildFixed, itself->leading,\n                PyMac_BuildFixed, itself->widMax,\n                ResObj_New, itself->wTabHandle);\n}\n\n#if 0\n/* Not needed... */\nstatic int\nFMRec_Convert(PyObject *v, FMetricRec *p_itself)\n{\n        return PyArg_ParseTuple(v, "O&O&O&O&O&",\n                PyMac_GetFixed, &itself->ascent,\n                PyMac_GetFixed, &itself->descent,\n                PyMac_GetFixed, &itself->leading,\n                PyMac_GetFixed, &itself->widMax,\n                ResObj_Convert, &itself->wTabHandle);\n}\n#endif\n\n', lineno=61, col_offset=-1), lineno=28, col_offset=15), lineno=28, col_offset=0), Assign([Name('FMetricRecPtr', Store(), lineno=63, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=63, col_offset=16), [Str('FMetricRec', lineno=63, col_offset=27), Str('FMRec', lineno=63, col_offset=41)], [], None, None, lineno=63, col_offset=16), lineno=63, col_offset=0), Assign([Name('module', Store(), lineno=66, col_offset=0)], Call(Name('MacModule', Load(), lineno=66, col_offset=9), [Name('MODNAME', Load(), lineno=66, col_offset=19), Name('MODPREFIX', Load(), lineno=66, col_offset=28), Name('includestuff', Load(), lineno=66, col_offset=39), Name('finalstuff', Load(), lineno=66, col_offset=53), Name('initstuff', Load(), lineno=66, col_offset=65)], [], None, None, lineno=66, col_offset=9), lineno=66, col_offset=0), Assign([Name('Function', Store(), lineno=69, col_offset=0)], Name('OSErrWeakLinkFunctionGenerator', Load(), lineno=69, col_offset=11), lineno=69, col_offset=0), Assign([Name('functions', Store(), lineno=72, col_offset=0)], List([], Load(), lineno=72, col_offset=12), lineno=72, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=73, col_offset=0), [Name('INPUTFILE', Load(), lineno=73, col_offset=9)], [], None, None, lineno=73, col_offset=0), lineno=73, col_offset=0), For(Name('f', Store(), lineno=77, col_offset=4), Name('functions', Load(), lineno=77, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=77, col_offset=20), 'add', Load(), lineno=77, col_offset=20), [Name('f', Load(), lineno=77, col_offset=31)], [], None, None, lineno=77, col_offset=20), lineno=77, col_offset=20)], [], lineno=77, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=80, col_offset=0), [Name('OUTPUTFILE', Load(), lineno=80, col_offset=18)], [], None, None, lineno=80, col_offset=0), lineno=80, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=81, col_offset=0), 'generate', Load(), lineno=81, col_offset=0), [], [], None, None, lineno=81, col_offset=0), lineno=81, col_offset=0)])
