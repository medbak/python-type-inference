Module([Expr(Str('Main program for testing the infrastructure.', lineno=5, col_offset=0), lineno=5, col_offset=0), Assign([Name('__author__', Store(), lineno=7, col_offset=0)], Str('Guido van Rossum <guido@python.org>', lineno=7, col_offset=13), lineno=7, col_offset=0), ImportFrom(None, [alias('support', None)], 1, lineno=10, col_offset=0), Import([alias('os', None)], lineno=13, col_offset=0), Import([alias('sys', None)], lineno=14, col_offset=0), Import([alias('logging', None)], lineno=15, col_offset=0), ImportFrom(None, [alias('pytree', None)], 2, lineno=18, col_offset=0), Import([alias('pgen2', None)], lineno=19, col_offset=0), ImportFrom('pgen2', [alias('driver', None)], 0, lineno=20, col_offset=0), Expr(Call(Attribute(Name('logging', Load(), lineno=22, col_offset=0), 'basicConfig', Load(), lineno=22, col_offset=0), [], [], None, None, lineno=22, col_offset=0), lineno=22, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('gr', Store(), lineno=25, col_offset=4)], Call(Attribute(Name('driver', Load(), lineno=25, col_offset=9), 'load_grammar', Load(), lineno=25, col_offset=9), [Str('Grammar.txt', lineno=25, col_offset=29)], [], None, None, lineno=25, col_offset=9), lineno=25, col_offset=4), Assign([Name('dr', Store(), lineno=26, col_offset=4)], Call(Attribute(Name('driver', Load(), lineno=26, col_offset=9), 'Driver', Load(), lineno=26, col_offset=9), [Name('gr', Load(), lineno=26, col_offset=23)], [keyword('convert', Attribute(Name('pytree', Load(), lineno=26, col_offset=35), 'convert', Load(), lineno=26, col_offset=35))], None, None, lineno=26, col_offset=9), lineno=26, col_offset=4), Assign([Name('fn', Store(), lineno=28, col_offset=4)], Str('example.py', lineno=28, col_offset=9), lineno=28, col_offset=4), Assign([Name('tree', Store(), lineno=29, col_offset=4)], Call(Attribute(Name('dr', Load(), lineno=29, col_offset=11), 'parse_file', Load(), lineno=29, col_offset=11), [Name('fn', Load(), lineno=29, col_offset=25)], [keyword('debug', Name('True', Load(), lineno=29, col_offset=35))], None, None, lineno=29, col_offset=11), lineno=29, col_offset=4), If(UnaryOp(Not(), Call(Name('diff', Load(), lineno=30, col_offset=11), [Name('fn', Load(), lineno=30, col_offset=16), Name('tree', Load(), lineno=30, col_offset=20)], [], None, None, lineno=30, col_offset=11), lineno=30, col_offset=7), [Print(None, [Str('No diffs.', lineno=31, col_offset=14)], True, lineno=31, col_offset=8)], [], lineno=30, col_offset=4), If(UnaryOp(Not(), Subscript(Attribute(Name('sys', Load(), lineno=32, col_offset=11), 'argv', Load(), lineno=32, col_offset=11), Slice(Num(1, lineno=32, col_offset=20), None, None), Load(), lineno=32, col_offset=11), lineno=32, col_offset=7), [Return(None, lineno=33, col_offset=8)], [], lineno=32, col_offset=4), Assign([Name('problems', Store(), lineno=35, col_offset=4)], List([], Load(), lineno=35, col_offset=15), lineno=35, col_offset=4), For(Name('name', Store(), lineno=38, col_offset=8), Attribute(Name('sys', Load(), lineno=38, col_offset=16), 'modules', Load(), lineno=38, col_offset=16), [Assign([Name('mod', Store(), lineno=39, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=39, col_offset=14), 'modules', Load(), lineno=39, col_offset=14), Index(Name('name', Load(), lineno=39, col_offset=26)), Load(), lineno=39, col_offset=14), lineno=39, col_offset=8), If(BoolOp(Or(), [Compare(Name('mod', Load(), lineno=40, col_offset=11), [Is()], [Name('None', Load(), lineno=40, col_offset=18)], lineno=40, col_offset=11), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=40, col_offset=30), [Name('mod', Load(), lineno=40, col_offset=38), Str('__file__', lineno=40, col_offset=43)], [], None, None, lineno=40, col_offset=30), lineno=40, col_offset=26)], lineno=40, col_offset=11), [Continue( lineno=41, col_offset=12)], [], lineno=40, col_offset=8), Assign([Name('fn', Store(), lineno=42, col_offset=8)], Attribute(Name('mod', Load(), lineno=42, col_offset=13), '__file__', Load(), lineno=42, col_offset=13), lineno=42, col_offset=8), If(Call(Attribute(Name('fn', Load(), lineno=43, col_offset=11), 'endswith', Load(), lineno=43, col_offset=11), [Str('.pyc', lineno=43, col_offset=23)], [], None, None, lineno=43, col_offset=11), [Assign([Name('fn', Store(), lineno=44, col_offset=12)], Subscript(Name('fn', Load(), lineno=44, col_offset=17), Slice(None, Num(-1, lineno=44, col_offset=22), None), Load(), lineno=44, col_offset=17), lineno=44, col_offset=12)], [], lineno=43, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('fn', Load(), lineno=45, col_offset=15), 'endswith', Load(), lineno=45, col_offset=15), [Str('.py', lineno=45, col_offset=27)], [], None, None, lineno=45, col_offset=15), lineno=45, col_offset=11), [Continue( lineno=46, col_offset=12)], [], lineno=45, col_offset=8), Print(Attribute(Name('sys', Load(), lineno=47, col_offset=16), 'stderr', Load(), lineno=47, col_offset=16), [Str('Parsing', lineno=47, col_offset=28), Name('fn', Load(), lineno=47, col_offset=39)], True, lineno=47, col_offset=8), Assign([Name('tree', Store(), lineno=48, col_offset=8)], Call(Attribute(Name('dr', Load(), lineno=48, col_offset=15), 'parse_file', Load(), lineno=48, col_offset=15), [Name('fn', Load(), lineno=48, col_offset=29)], [keyword('debug', Name('True', Load(), lineno=48, col_offset=39))], None, None, lineno=48, col_offset=15), lineno=48, col_offset=8), If(Call(Name('diff', Load(), lineno=49, col_offset=11), [Name('fn', Load(), lineno=49, col_offset=16), Name('tree', Load(), lineno=49, col_offset=20)], [], None, None, lineno=49, col_offset=11), [Expr(Call(Attribute(Name('problems', Load(), lineno=50, col_offset=12), 'append', Load(), lineno=50, col_offset=12), [Name('fn', Load(), lineno=50, col_offset=28)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12)], [], lineno=49, col_offset=8)], [], lineno=38, col_offset=4), For(Name('dir', Store(), lineno=53, col_offset=8), Attribute(Name('sys', Load(), lineno=53, col_offset=15), 'path', Load(), lineno=53, col_offset=15), [TryExcept([Assign([Name('names', Store(), lineno=55, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=55, col_offset=20), 'listdir', Load(), lineno=55, col_offset=20), [Name('dir', Load(), lineno=55, col_offset=31)], [], None, None, lineno=55, col_offset=20), lineno=55, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=56, col_offset=15), 'error', Load(), lineno=56, col_offset=15), None, [Continue( lineno=57, col_offset=12)], lineno=56, col_offset=8)], [], lineno=54, col_offset=8), Print(Attribute(Name('sys', Load(), lineno=58, col_offset=16), 'stderr', Load(), lineno=58, col_offset=16), [Str('Scanning', lineno=58, col_offset=28), Name('dir', Load(), lineno=58, col_offset=40), Str('...', lineno=58, col_offset=45)], True, lineno=58, col_offset=8), For(Name('name', Store(), lineno=59, col_offset=12), Name('names', Load(), lineno=59, col_offset=20), [If(UnaryOp(Not(), Call(Attribute(Name('name', Load(), lineno=60, col_offset=19), 'endswith', Load(), lineno=60, col_offset=19), [Str('.py', lineno=60, col_offset=33)], [], None, None, lineno=60, col_offset=19), lineno=60, col_offset=15), [Continue( lineno=61, col_offset=16)], [], lineno=60, col_offset=12), Print(Attribute(Name('sys', Load(), lineno=62, col_offset=20), 'stderr', Load(), lineno=62, col_offset=20), [Str('Parsing', lineno=62, col_offset=32), Name('name', Load(), lineno=62, col_offset=43)], True, lineno=62, col_offset=12), Assign([Name('fn', Store(), lineno=63, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=63, col_offset=17), 'path', Load(), lineno=63, col_offset=17), 'join', Load(), lineno=63, col_offset=17), [Name('dir', Load(), lineno=63, col_offset=30), Name('name', Load(), lineno=63, col_offset=35)], [], None, None, lineno=63, col_offset=17), lineno=63, col_offset=12), TryExcept([Assign([Name('tree', Store(), lineno=65, col_offset=16)], Call(Attribute(Name('dr', Load(), lineno=65, col_offset=23), 'parse_file', Load(), lineno=65, col_offset=23), [Name('fn', Load(), lineno=65, col_offset=37)], [keyword('debug', Name('True', Load(), lineno=65, col_offset=47))], None, None, lineno=65, col_offset=23), lineno=65, col_offset=16)], [ExceptHandler(Attribute(Attribute(Name('pgen2', Load(), lineno=66, col_offset=19), 'parse', Load(), lineno=66, col_offset=19), 'ParseError', Load(), lineno=66, col_offset=19), Name('err', Store(), lineno=66, col_offset=43), [Print(None, [Str('ParseError:', lineno=67, col_offset=22), Name('err', Load(), lineno=67, col_offset=37)], True, lineno=67, col_offset=16)], lineno=66, col_offset=12)], [If(Call(Name('diff', Load(), lineno=69, col_offset=19), [Name('fn', Load(), lineno=69, col_offset=24), Name('tree', Load(), lineno=69, col_offset=28)], [], None, None, lineno=69, col_offset=19), [Expr(Call(Attribute(Name('problems', Load(), lineno=70, col_offset=20), 'append', Load(), lineno=70, col_offset=20), [Name('fn', Load(), lineno=70, col_offset=36)], [], None, None, lineno=70, col_offset=20), lineno=70, col_offset=20)], [], lineno=69, col_offset=16)], lineno=64, col_offset=12)], [], lineno=59, col_offset=8)], [], lineno=53, col_offset=4), If(UnaryOp(Not(), Name('problems', Load(), lineno=73, col_offset=11), lineno=73, col_offset=7), [Print(None, [Str('No problems.  Congratulations!', lineno=74, col_offset=14)], True, lineno=74, col_offset=8)], [Print(None, [Str('Problems in following files:', lineno=76, col_offset=14)], True, lineno=76, col_offset=8), For(Name('fn', Store(), lineno=77, col_offset=12), Name('problems', Load(), lineno=77, col_offset=18), [Print(None, [Str('***', lineno=78, col_offset=18), Name('fn', Load(), lineno=78, col_offset=25)], True, lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], lineno=73, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('diff', arguments([Name('fn', Param(), lineno=80, col_offset=9), Name('tree', Param(), lineno=80, col_offset=13)], None, None, []), [Assign([Name('f', Store(), lineno=81, col_offset=4)], Call(Name('open', Load(), lineno=81, col_offset=8), [Str('@', lineno=81, col_offset=13), Str('w', lineno=81, col_offset=18)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=4), TryFinally([Expr(Call(Attribute(Name('f', Load(), lineno=83, col_offset=8), 'write', Load(), lineno=83, col_offset=8), [Call(Name('str', Load(), lineno=83, col_offset=16), [Name('tree', Load(), lineno=83, col_offset=20)], [], None, None, lineno=83, col_offset=16)], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [Expr(Call(Attribute(Name('f', Load(), lineno=85, col_offset=8), 'close', Load(), lineno=85, col_offset=8), [], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8)], lineno=82, col_offset=4), TryFinally([Return(Call(Attribute(Name('os', Load(), lineno=87, col_offset=15), 'system', Load(), lineno=87, col_offset=15), [BinOp(Str('diff -u %s @', lineno=87, col_offset=25), Mod(), Name('fn', Load(), lineno=87, col_offset=42), lineno=87, col_offset=25)], [], None, None, lineno=87, col_offset=15), lineno=87, col_offset=8)], [Expr(Call(Attribute(Name('os', Load(), lineno=89, col_offset=8), 'remove', Load(), lineno=89, col_offset=8), [Str('@', lineno=89, col_offset=18)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8)], lineno=86, col_offset=4)], [], lineno=80, col_offset=0), If(Compare(Name('__name__', Load(), lineno=91, col_offset=3), [Eq()], [Str('__main__', lineno=91, col_offset=15)], lineno=91, col_offset=3), [Expr(Call(Name('main', Load(), lineno=92, col_offset=4), [], [], None, None, lineno=92, col_offset=4), lineno=92, col_offset=4)], [], lineno=91, col_offset=0)])
