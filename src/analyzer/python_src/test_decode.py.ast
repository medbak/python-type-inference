Module([Import([alias('decimal', None)], lineno=1, col_offset=0), ImportFrom('unittest', [alias('TestCase', None)], 0, lineno=2, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=3, col_offset=0), Import([alias('json', None)], lineno=5, col_offset=0), ImportFrom('collections', [alias('OrderedDict', None)], 0, lineno=6, col_offset=0), ClassDef('TestDecode', [Name('TestCase', Load(), lineno=8, col_offset=17)], [FunctionDef('test_decimal', arguments([Name('self', Param(), lineno=9, col_offset=21)], None, None, []), [Assign([Name('rval', Store(), lineno=10, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=10, col_offset=15), 'loads', Load(), lineno=10, col_offset=15), [Str('1.1', lineno=10, col_offset=26)], [keyword('parse_float', Attribute(Name('decimal', Load(), lineno=10, col_offset=45), 'Decimal', Load(), lineno=10, col_offset=45))], None, None, lineno=10, col_offset=15), lineno=10, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=8), 'assertTrue', Load(), lineno=11, col_offset=8), [Call(Name('isinstance', Load(), lineno=11, col_offset=24), [Name('rval', Load(), lineno=11, col_offset=35), Attribute(Name('decimal', Load(), lineno=11, col_offset=41), 'Decimal', Load(), lineno=11, col_offset=41)], [], None, None, lineno=11, col_offset=24)], [], None, None, lineno=11, col_offset=8), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Name('rval', Load(), lineno=12, col_offset=25), Call(Attribute(Name('decimal', Load(), lineno=12, col_offset=31), 'Decimal', Load(), lineno=12, col_offset=31), [Str('1.1', lineno=12, col_offset=47)], [], None, None, lineno=12, col_offset=31)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_float', arguments([Name('self', Param(), lineno=14, col_offset=19)], None, None, []), [Assign([Name('rval', Store(), lineno=15, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=15, col_offset=15), 'loads', Load(), lineno=15, col_offset=15), [Str('1', lineno=15, col_offset=26)], [keyword('parse_int', Name('float', Load(), lineno=15, col_offset=41))], None, None, lineno=15, col_offset=15), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertTrue', Load(), lineno=16, col_offset=8), [Call(Name('isinstance', Load(), lineno=16, col_offset=24), [Name('rval', Load(), lineno=16, col_offset=35), Name('float', Load(), lineno=16, col_offset=41)], [], None, None, lineno=16, col_offset=24)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Name('rval', Load(), lineno=17, col_offset=25), Num(1.0, lineno=17, col_offset=31)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8)], [], lineno=14, col_offset=4), FunctionDef('test_decoder_optimizations', arguments([Name('self', Param(), lineno=19, col_offset=35)], None, None, []), [Assign([Name('rval', Store(), lineno=23, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=23, col_offset=15), 'loads', Load(), lineno=23, col_offset=15), [Str('{   "key"    :    "value"    ,  "k":"v"    }', lineno=23, col_offset=26)], [], None, None, lineno=23, col_offset=15), lineno=23, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Name('rval', Load(), lineno=24, col_offset=25), Dict([Str('key', lineno=24, col_offset=32), Str('k', lineno=24, col_offset=47)], [Str('value', lineno=24, col_offset=38), Str('v', lineno=24, col_offset=51)], lineno=24, col_offset=31)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('test_object_pairs_hook', arguments([Name('self', Param(), lineno=26, col_offset=31)], None, None, []), [Assign([Name('s', Store(), lineno=27, col_offset=8)], Str('{"xkd":1, "kcw":2, "art":3, "hxm":4, "qrt":5, "pad":6, "hoy":7}', lineno=27, col_offset=12), lineno=27, col_offset=8), Assign([Name('p', Store(), lineno=28, col_offset=8)], List([Tuple([Str('xkd', lineno=28, col_offset=14), Num(1, lineno=28, col_offset=21)], Load(), lineno=28, col_offset=14), Tuple([Str('kcw', lineno=28, col_offset=26), Num(2, lineno=28, col_offset=33)], Load(), lineno=28, col_offset=26), Tuple([Str('art', lineno=28, col_offset=38), Num(3, lineno=28, col_offset=45)], Load(), lineno=28, col_offset=38), Tuple([Str('hxm', lineno=28, col_offset=50), Num(4, lineno=28, col_offset=57)], Load(), lineno=28, col_offset=50), Tuple([Str('qrt', lineno=29, col_offset=14), Num(5, lineno=29, col_offset=21)], Load(), lineno=29, col_offset=14), Tuple([Str('pad', lineno=29, col_offset=26), Num(6, lineno=29, col_offset=33)], Load(), lineno=29, col_offset=26), Tuple([Str('hoy', lineno=29, col_offset=38), Num(7, lineno=29, col_offset=45)], Load(), lineno=29, col_offset=38)], Load(), lineno=28, col_offset=12), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertEqual', Load(), lineno=30, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=30, col_offset=25), 'loads', Load(), lineno=30, col_offset=25), [Name('s', Load(), lineno=30, col_offset=36)], [], None, None, lineno=30, col_offset=25), Call(Name('eval', Load(), lineno=30, col_offset=40), [Name('s', Load(), lineno=30, col_offset=45)], [], None, None, lineno=30, col_offset=40)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertEqual', Load(), lineno=31, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=31, col_offset=25), 'loads', Load(), lineno=31, col_offset=25), [Name('s', Load(), lineno=31, col_offset=36)], [keyword('object_pairs_hook', Lambda(arguments([Name('x', Param(), lineno=31, col_offset=64)], None, None, []), Name('x', Load(), lineno=31, col_offset=67), lineno=31, col_offset=57))], None, None, lineno=31, col_offset=25), Name('p', Load(), lineno=31, col_offset=71)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=32, col_offset=25), 'load', Load(), lineno=32, col_offset=25), [Call(Name('StringIO', Load(), lineno=32, col_offset=35), [Name('s', Load(), lineno=32, col_offset=44)], [], None, None, lineno=32, col_offset=35)], [keyword('object_pairs_hook', Lambda(arguments([Name('x', Param(), lineno=33, col_offset=60)], None, None, []), Name('x', Load(), lineno=33, col_offset=63), lineno=33, col_offset=53))], None, None, lineno=32, col_offset=25), Name('p', Load(), lineno=33, col_offset=67)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Assign([Name('od', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=34, col_offset=13), 'loads', Load(), lineno=34, col_offset=13), [Name('s', Load(), lineno=34, col_offset=24)], [keyword('object_pairs_hook', Name('OrderedDict', Load(), lineno=34, col_offset=45))], None, None, lineno=34, col_offset=13), lineno=34, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertEqual', Load(), lineno=35, col_offset=8), [Name('od', Load(), lineno=35, col_offset=25), Call(Name('OrderedDict', Load(), lineno=35, col_offset=29), [Name('p', Load(), lineno=35, col_offset=41)], [], None, None, lineno=35, col_offset=29)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Call(Name('type', Load(), lineno=36, col_offset=25), [Name('od', Load(), lineno=36, col_offset=30)], [], None, None, lineno=36, col_offset=25), Name('OrderedDict', Load(), lineno=36, col_offset=35)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertEqual', Load(), lineno=38, col_offset=8), [Call(Attribute(Name('json', Load(), lineno=38, col_offset=25), 'loads', Load(), lineno=38, col_offset=25), [Name('s', Load(), lineno=38, col_offset=36)], [keyword('object_pairs_hook', Name('OrderedDict', Load(), lineno=39, col_offset=54)), keyword('object_hook', Lambda(arguments([Name('x', Param(), lineno=40, col_offset=55)], None, None, []), Name('None', Load(), lineno=40, col_offset=58), lineno=40, col_offset=48))], None, None, lineno=38, col_offset=25), Call(Name('OrderedDict', Load(), lineno=41, col_offset=25), [Name('p', Load(), lineno=41, col_offset=37)], [], None, None, lineno=41, col_offset=25)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [], lineno=26, col_offset=4)], [], lineno=8, col_offset=0)])
