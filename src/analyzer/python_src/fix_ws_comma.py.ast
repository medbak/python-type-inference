Module([Expr(Str("Fixer that changes 'a ,b' into 'a, b'.\n\nThis also changes '{a :b}' into '{a: b}', but does not touch other\nuses of colons.  It does not touch other uses of whitespace.\n\n", lineno=6, col_offset=-1), lineno=6, col_offset=-1), ImportFrom(None, [alias('pytree', None)], 2, lineno=8, col_offset=0), ImportFrom('pgen2', [alias('token', None)], 2, lineno=9, col_offset=0), ImportFrom(None, [alias('fixer_base', None)], 2, lineno=10, col_offset=0), ClassDef('FixWsComma', [Attribute(Name('fixer_base', Load(), lineno=12, col_offset=17), 'BaseFix', Load(), lineno=12, col_offset=17)], [Assign([Name('explicit', Store(), lineno=14, col_offset=4)], Name('True', Load(), lineno=14, col_offset=15), lineno=14, col_offset=4), Assign([Name('PATTERN', Store(), lineno=16, col_offset=4)], Str("\n    any<(not(',') any)+ ',' ((not(',') any)+ ',')* [not(',') any]>\n    ", lineno=18, col_offset=-1), lineno=16, col_offset=4), Assign([Name('COMMA', Store(), lineno=20, col_offset=4)], Call(Attribute(Name('pytree', Load(), lineno=20, col_offset=12), 'Leaf', Load(), lineno=20, col_offset=12), [Attribute(Name('token', Load(), lineno=20, col_offset=24), 'COMMA', Load(), lineno=20, col_offset=24), Str(u',', lineno=20, col_offset=37)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=4), Assign([Name('COLON', Store(), lineno=21, col_offset=4)], Call(Attribute(Name('pytree', Load(), lineno=21, col_offset=12), 'Leaf', Load(), lineno=21, col_offset=12), [Attribute(Name('token', Load(), lineno=21, col_offset=24), 'COLON', Load(), lineno=21, col_offset=24), Str(u':', lineno=21, col_offset=37)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=4), Assign([Name('SEPS', Store(), lineno=22, col_offset=4)], Tuple([Name('COMMA', Load(), lineno=22, col_offset=12), Name('COLON', Load(), lineno=22, col_offset=19)], Load(), lineno=22, col_offset=12), lineno=22, col_offset=4), FunctionDef('transform', arguments([Name('self', Param(), lineno=24, col_offset=18), Name('node', Param(), lineno=24, col_offset=24), Name('results', Param(), lineno=24, col_offset=30)], None, None, []), [Assign([Name('new', Store(), lineno=25, col_offset=8)], Call(Attribute(Name('node', Load(), lineno=25, col_offset=14), 'clone', Load(), lineno=25, col_offset=14), [], [], None, None, lineno=25, col_offset=14), lineno=25, col_offset=8), Assign([Name('comma', Store(), lineno=26, col_offset=8)], Name('False', Load(), lineno=26, col_offset=16), lineno=26, col_offset=8), For(Name('child', Store(), lineno=27, col_offset=12), Attribute(Name('new', Load(), lineno=27, col_offset=21), 'children', Load(), lineno=27, col_offset=21), [If(Compare(Name('child', Load(), lineno=28, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=28, col_offset=24), 'SEPS', Load(), lineno=28, col_offset=24)], lineno=28, col_offset=15), [Assign([Name('prefix', Store(), lineno=29, col_offset=16)], Attribute(Name('child', Load(), lineno=29, col_offset=25), 'prefix', Load(), lineno=29, col_offset=25), lineno=29, col_offset=16), If(BoolOp(And(), [Call(Attribute(Name('prefix', Load(), lineno=30, col_offset=19), 'isspace', Load(), lineno=30, col_offset=19), [], [], None, None, lineno=30, col_offset=19), Compare(Str(u'\n', lineno=30, col_offset=40), [NotIn()], [Name('prefix', Load(), lineno=30, col_offset=53)], lineno=30, col_offset=40)], lineno=30, col_offset=19), [Assign([Attribute(Name('child', Load(), lineno=31, col_offset=20), 'prefix', Store(), lineno=31, col_offset=20)], Str(u'', lineno=31, col_offset=35), lineno=31, col_offset=20)], [], lineno=30, col_offset=16), Assign([Name('comma', Store(), lineno=32, col_offset=16)], Name('True', Load(), lineno=32, col_offset=24), lineno=32, col_offset=16)], [If(Name('comma', Load(), lineno=34, col_offset=19), [Assign([Name('prefix', Store(), lineno=35, col_offset=20)], Attribute(Name('child', Load(), lineno=35, col_offset=29), 'prefix', Load(), lineno=35, col_offset=29), lineno=35, col_offset=20), If(UnaryOp(Not(), Name('prefix', Load(), lineno=36, col_offset=27), lineno=36, col_offset=23), [Assign([Attribute(Name('child', Load(), lineno=37, col_offset=24), 'prefix', Store(), lineno=37, col_offset=24)], Str(u' ', lineno=37, col_offset=39), lineno=37, col_offset=24)], [], lineno=36, col_offset=20)], [], lineno=34, col_offset=16), Assign([Name('comma', Store(), lineno=38, col_offset=16)], Name('False', Load(), lineno=38, col_offset=24), lineno=38, col_offset=16)], lineno=28, col_offset=12)], [], lineno=27, col_offset=8), Return(Name('new', Load(), lineno=39, col_offset=15), lineno=39, col_offset=8)], [], lineno=24, col_offset=4)], [], lineno=12, col_offset=0)])
