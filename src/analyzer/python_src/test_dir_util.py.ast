Module([Expr(Str('Tests for distutils.dir_util.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('stat', None)], lineno=4, col_offset=0), Import([alias('shutil', None)], lineno=5, col_offset=0), Import([alias('sys', None)], lineno=6, col_offset=0), ImportFrom('distutils.dir_util', [alias('mkpath', None), alias('remove_tree', None), alias('create_tree', None), alias('copy_tree', None), alias('ensure_relative', None)], 0, lineno=8, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=11, col_offset=0), ImportFrom('distutils.tests', [alias('support', None)], 0, lineno=12, col_offset=0), ClassDef('DirUtilTestCase', [Attribute(Name('support', Load(), lineno=14, col_offset=22), 'TempdirManager', Load(), lineno=14, col_offset=22), Attribute(Name('unittest', Load(), lineno=14, col_offset=46), 'TestCase', Load(), lineno=14, col_offset=46)], [FunctionDef('_log', arguments([Name('self', Param(), lineno=16, col_offset=13), Name('msg', Param(), lineno=16, col_offset=19)], 'args', None, []), [If(Compare(Call(Name('len', Load(), lineno=17, col_offset=11), [Name('args', Load(), lineno=17, col_offset=15)], [], None, None, lineno=17, col_offset=11), [Gt()], [Num(0, lineno=17, col_offset=23)], lineno=17, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=18, col_offset=12), '_logs', Load(), lineno=18, col_offset=12), 'append', Load(), lineno=18, col_offset=12), [BinOp(Name('msg', Load(), lineno=18, col_offset=30), Mod(), Name('args', Load(), lineno=18, col_offset=36), lineno=18, col_offset=30)], [], None, None, lineno=18, col_offset=12), lineno=18, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=20, col_offset=12), '_logs', Load(), lineno=20, col_offset=12), 'append', Load(), lineno=20, col_offset=12), [Name('msg', Load(), lineno=20, col_offset=30)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=12)], lineno=17, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=22, col_offset=14)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=23, col_offset=8), [Name('DirUtilTestCase', Load(), lineno=23, col_offset=14), Name('self', Load(), lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=8), 'setUp', Load(), lineno=23, col_offset=8), [], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=24, col_offset=8), '_logs', Store(), lineno=24, col_offset=8)], List([], Load(), lineno=24, col_offset=21), lineno=24, col_offset=8), Assign([Name('tmp_dir', Store(), lineno=25, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=25, col_offset=18), 'mkdtemp', Load(), lineno=25, col_offset=18), [], [], None, None, lineno=25, col_offset=18), lineno=25, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'root_target', Store(), lineno=26, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=26, col_offset=27), 'path', Load(), lineno=26, col_offset=27), 'join', Load(), lineno=26, col_offset=27), [Name('tmp_dir', Load(), lineno=26, col_offset=40), Str('deep', lineno=26, col_offset=49)], [], None, None, lineno=26, col_offset=27), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'target', Store(), lineno=27, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=27, col_offset=22), 'path', Load(), lineno=27, col_offset=22), 'join', Load(), lineno=27, col_offset=22), [Attribute(Name('self', Load(), lineno=27, col_offset=35), 'root_target', Load(), lineno=27, col_offset=35), Str('here', lineno=27, col_offset=53)], [], None, None, lineno=27, col_offset=22), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'target2', Store(), lineno=28, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=28, col_offset=23), 'path', Load(), lineno=28, col_offset=23), 'join', Load(), lineno=28, col_offset=23), [Name('tmp_dir', Load(), lineno=28, col_offset=36), Str('deep2', lineno=28, col_offset=45)], [], None, None, lineno=28, col_offset=23), lineno=28, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'old_log', Store(), lineno=29, col_offset=8)], Attribute(Name('log', Load(), lineno=29, col_offset=23), 'info', Load(), lineno=29, col_offset=23), lineno=29, col_offset=8), Assign([Attribute(Name('log', Load(), lineno=30, col_offset=8), 'info', Store(), lineno=30, col_offset=8)], Attribute(Name('self', Load(), lineno=30, col_offset=19), '_log', Load(), lineno=30, col_offset=19), lineno=30, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=32, col_offset=17)], None, None, []), [Assign([Attribute(Name('log', Load(), lineno=33, col_offset=8), 'info', Store(), lineno=33, col_offset=8)], Attribute(Name('self', Load(), lineno=33, col_offset=19), 'old_log', Load(), lineno=33, col_offset=19), lineno=33, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=34, col_offset=8), [Name('DirUtilTestCase', Load(), lineno=34, col_offset=14), Name('self', Load(), lineno=34, col_offset=31)], [], None, None, lineno=34, col_offset=8), 'tearDown', Load(), lineno=34, col_offset=8), [], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('test_mkpath_remove_tree_verbosity', arguments([Name('self', Param(), lineno=36, col_offset=42)], None, None, []), [Expr(Call(Name('mkpath', Load(), lineno=38, col_offset=8), [Attribute(Name('self', Load(), lineno=38, col_offset=15), 'target', Load(), lineno=38, col_offset=15)], [keyword('verbose', Num(0, lineno=38, col_offset=36))], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Assign([Name('wanted', Store(), lineno=39, col_offset=8)], List([], Load(), lineno=39, col_offset=17), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Attribute(Name('self', Load(), lineno=40, col_offset=25), '_logs', Load(), lineno=40, col_offset=25), Name('wanted', Load(), lineno=40, col_offset=37)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=41, col_offset=8), [Attribute(Name('self', Load(), lineno=41, col_offset=20), 'root_target', Load(), lineno=41, col_offset=20)], [keyword('verbose', Num(0, lineno=41, col_offset=46))], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Name('mkpath', Load(), lineno=43, col_offset=8), [Attribute(Name('self', Load(), lineno=43, col_offset=15), 'target', Load(), lineno=43, col_offset=15)], [keyword('verbose', Num(1, lineno=43, col_offset=36))], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Assign([Name('wanted', Store(), lineno=44, col_offset=8)], List([BinOp(Str('creating %s', lineno=44, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=44, col_offset=34), 'root_target', Load(), lineno=44, col_offset=34), lineno=44, col_offset=18), BinOp(Str('creating %s', lineno=45, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=45, col_offset=34), 'target', Load(), lineno=45, col_offset=34), lineno=45, col_offset=18)], Load(), lineno=44, col_offset=17), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Attribute(Name('self', Load(), lineno=46, col_offset=25), '_logs', Load(), lineno=46, col_offset=25), Name('wanted', Load(), lineno=46, col_offset=37)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=47, col_offset=8), '_logs', Store(), lineno=47, col_offset=8)], List([], Load(), lineno=47, col_offset=21), lineno=47, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=49, col_offset=8), [Attribute(Name('self', Load(), lineno=49, col_offset=20), 'root_target', Load(), lineno=49, col_offset=20)], [keyword('verbose', Num(1, lineno=49, col_offset=46))], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Assign([Name('wanted', Store(), lineno=50, col_offset=8)], List([BinOp(Str("removing '%s' (and everything under it)", lineno=50, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=50, col_offset=62), 'root_target', Load(), lineno=50, col_offset=62), lineno=50, col_offset=18)], Load(), lineno=50, col_offset=17), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertEqual', Load(), lineno=51, col_offset=8), [Attribute(Name('self', Load(), lineno=51, col_offset=25), '_logs', Load(), lineno=51, col_offset=25), Name('wanted', Load(), lineno=51, col_offset=37)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_mkpath_with_custom_mode', arguments([Name('self', Param(), lineno=55, col_offset=37)], None, None, []), [Assign([Name('umask', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=57, col_offset=16), 'umask', Load(), lineno=57, col_offset=16), [Num(2, lineno=57, col_offset=25)], [], None, None, lineno=57, col_offset=16), lineno=57, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=58, col_offset=8), 'umask', Load(), lineno=58, col_offset=8), [Name('umask', Load(), lineno=58, col_offset=17)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Name('mkpath', Load(), lineno=59, col_offset=8), [Attribute(Name('self', Load(), lineno=59, col_offset=15), 'target', Load(), lineno=59, col_offset=15), Num(448, lineno=59, col_offset=28)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'assertEqual', Load(), lineno=60, col_offset=8), [Call(Attribute(Name('stat', Load(), lineno=61, col_offset=12), 'S_IMODE', Load(), lineno=61, col_offset=12), [Attribute(Call(Attribute(Name('os', Load(), lineno=61, col_offset=25), 'stat', Load(), lineno=61, col_offset=25), [Attribute(Name('self', Load(), lineno=61, col_offset=33), 'target', Load(), lineno=61, col_offset=33)], [], None, None, lineno=61, col_offset=25), 'st_mode', Load(), lineno=61, col_offset=25)], [], None, None, lineno=61, col_offset=12), BinOp(Num(448, lineno=61, col_offset=56), BitAnd(), UnaryOp(Invert(), Name('umask', Load(), lineno=61, col_offset=65), lineno=61, col_offset=64), lineno=61, col_offset=56)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8), Expr(Call(Name('mkpath', Load(), lineno=62, col_offset=8), [Attribute(Name('self', Load(), lineno=62, col_offset=15), 'target2', Load(), lineno=62, col_offset=15), Num(365, lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'assertEqual', Load(), lineno=63, col_offset=8), [Call(Attribute(Name('stat', Load(), lineno=64, col_offset=12), 'S_IMODE', Load(), lineno=64, col_offset=12), [Attribute(Call(Attribute(Name('os', Load(), lineno=64, col_offset=25), 'stat', Load(), lineno=64, col_offset=25), [Attribute(Name('self', Load(), lineno=64, col_offset=33), 'target2', Load(), lineno=64, col_offset=33)], [], None, None, lineno=64, col_offset=25), 'st_mode', Load(), lineno=64, col_offset=25)], [], None, None, lineno=64, col_offset=12), BinOp(Num(365, lineno=64, col_offset=57), BitAnd(), UnaryOp(Invert(), Name('umask', Load(), lineno=64, col_offset=66), lineno=64, col_offset=65), lineno=64, col_offset=57)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=53, col_offset=5), 'skipIf', Load(), lineno=53, col_offset=5), [Call(Attribute(Attribute(Name('sys', Load(), lineno=53, col_offset=21), 'platform', Load(), lineno=53, col_offset=21), 'startswith', Load(), lineno=53, col_offset=21), [Str('win', lineno=53, col_offset=45)], [], None, None, lineno=53, col_offset=21), Str('This test is only appropriate for POSIX-like systems.', lineno=54, col_offset=24)], [], None, None, lineno=53, col_offset=5)], lineno=53, col_offset=4), FunctionDef('test_create_tree_verbosity', arguments([Name('self', Param(), lineno=66, col_offset=35)], None, None, []), [Expr(Call(Name('create_tree', Load(), lineno=68, col_offset=8), [Attribute(Name('self', Load(), lineno=68, col_offset=20), 'root_target', Load(), lineno=68, col_offset=20), List([Str('one', lineno=68, col_offset=39), Str('two', lineno=68, col_offset=46), Str('three', lineno=68, col_offset=53)], Load(), lineno=68, col_offset=38)], [keyword('verbose', Num(0, lineno=68, col_offset=71))], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Attribute(Name('self', Load(), lineno=69, col_offset=25), '_logs', Load(), lineno=69, col_offset=25), List([], Load(), lineno=69, col_offset=37)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=70, col_offset=8), [Attribute(Name('self', Load(), lineno=70, col_offset=20), 'root_target', Load(), lineno=70, col_offset=20)], [keyword('verbose', Num(0, lineno=70, col_offset=46))], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Assign([Name('wanted', Store(), lineno=72, col_offset=8)], List([BinOp(Str('creating %s', lineno=72, col_offset=18), Mod(), Attribute(Name('self', Load(), lineno=72, col_offset=34), 'root_target', Load(), lineno=72, col_offset=34), lineno=72, col_offset=18)], Load(), lineno=72, col_offset=17), lineno=72, col_offset=8), Expr(Call(Name('create_tree', Load(), lineno=73, col_offset=8), [Attribute(Name('self', Load(), lineno=73, col_offset=20), 'root_target', Load(), lineno=73, col_offset=20), List([Str('one', lineno=73, col_offset=39), Str('two', lineno=73, col_offset=46), Str('three', lineno=73, col_offset=53)], Load(), lineno=73, col_offset=38)], [keyword('verbose', Num(1, lineno=73, col_offset=71))], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'assertEqual', Load(), lineno=74, col_offset=8), [Attribute(Name('self', Load(), lineno=74, col_offset=25), '_logs', Load(), lineno=74, col_offset=25), Name('wanted', Load(), lineno=74, col_offset=37)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=76, col_offset=8), [Attribute(Name('self', Load(), lineno=76, col_offset=20), 'root_target', Load(), lineno=76, col_offset=20)], [keyword('verbose', Num(0, lineno=76, col_offset=46))], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8)], [], lineno=66, col_offset=4), FunctionDef('test_copy_tree_verbosity', arguments([Name('self', Param(), lineno=79, col_offset=33)], None, None, []), [Expr(Call(Name('mkpath', Load(), lineno=81, col_offset=8), [Attribute(Name('self', Load(), lineno=81, col_offset=15), 'target', Load(), lineno=81, col_offset=15)], [keyword('verbose', Num(0, lineno=81, col_offset=36))], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Expr(Call(Name('copy_tree', Load(), lineno=83, col_offset=8), [Attribute(Name('self', Load(), lineno=83, col_offset=18), 'target', Load(), lineno=83, col_offset=18), Attribute(Name('self', Load(), lineno=83, col_offset=31), 'target2', Load(), lineno=83, col_offset=31)], [keyword('verbose', Num(0, lineno=83, col_offset=53))], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'assertEqual', Load(), lineno=84, col_offset=8), [Attribute(Name('self', Load(), lineno=84, col_offset=25), '_logs', Load(), lineno=84, col_offset=25), List([], Load(), lineno=84, col_offset=37)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=86, col_offset=8), [Attribute(Name('self', Load(), lineno=86, col_offset=20), 'root_target', Load(), lineno=86, col_offset=20)], [keyword('verbose', Num(0, lineno=86, col_offset=46))], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Name('mkpath', Load(), lineno=88, col_offset=8), [Attribute(Name('self', Load(), lineno=88, col_offset=15), 'target', Load(), lineno=88, col_offset=15)], [keyword('verbose', Num(0, lineno=88, col_offset=36))], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Assign([Name('a_file', Store(), lineno=89, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=89, col_offset=17), 'path', Load(), lineno=89, col_offset=17), 'join', Load(), lineno=89, col_offset=17), [Attribute(Name('self', Load(), lineno=89, col_offset=30), 'target', Load(), lineno=89, col_offset=30), Str('ok.txt', lineno=89, col_offset=43)], [], None, None, lineno=89, col_offset=17), lineno=89, col_offset=8), Assign([Name('f', Store(), lineno=90, col_offset=8)], Call(Name('open', Load(), lineno=90, col_offset=12), [Name('a_file', Load(), lineno=90, col_offset=17), Str('w', lineno=90, col_offset=25)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=8), TryFinally([Expr(Call(Attribute(Name('f', Load(), lineno=92, col_offset=12), 'write', Load(), lineno=92, col_offset=12), [Str('some content', lineno=92, col_offset=20)], [], None, None, lineno=92, col_offset=12), lineno=92, col_offset=12)], [Expr(Call(Attribute(Name('f', Load(), lineno=94, col_offset=12), 'close', Load(), lineno=94, col_offset=12), [], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12)], lineno=91, col_offset=8), Assign([Name('wanted', Store(), lineno=96, col_offset=8)], List([BinOp(Str('copying %s -> %s', lineno=96, col_offset=18), Mod(), Tuple([Name('a_file', Load(), lineno=96, col_offset=40), Attribute(Name('self', Load(), lineno=96, col_offset=48), 'target2', Load(), lineno=96, col_offset=48)], Load(), lineno=96, col_offset=40), lineno=96, col_offset=18)], Load(), lineno=96, col_offset=17), lineno=96, col_offset=8), Expr(Call(Name('copy_tree', Load(), lineno=97, col_offset=8), [Attribute(Name('self', Load(), lineno=97, col_offset=18), 'target', Load(), lineno=97, col_offset=18), Attribute(Name('self', Load(), lineno=97, col_offset=31), 'target2', Load(), lineno=97, col_offset=31)], [keyword('verbose', Num(1, lineno=97, col_offset=53))], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=98, col_offset=8), 'assertEqual', Load(), lineno=98, col_offset=8), [Attribute(Name('self', Load(), lineno=98, col_offset=25), '_logs', Load(), lineno=98, col_offset=25), Name('wanted', Load(), lineno=98, col_offset=37)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=100, col_offset=8), [Attribute(Name('self', Load(), lineno=100, col_offset=20), 'root_target', Load(), lineno=100, col_offset=20)], [keyword('verbose', Num(0, lineno=100, col_offset=46))], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Name('remove_tree', Load(), lineno=101, col_offset=8), [Attribute(Name('self', Load(), lineno=101, col_offset=20), 'target2', Load(), lineno=101, col_offset=20)], [keyword('verbose', Num(0, lineno=101, col_offset=42))], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('test_ensure_relative', arguments([Name('self', Param(), lineno=103, col_offset=29)], None, None, []), [If(Compare(Attribute(Name('os', Load(), lineno=104, col_offset=11), 'sep', Load(), lineno=104, col_offset=11), [Eq()], [Str('/', lineno=104, col_offset=21)], lineno=104, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=105, col_offset=12), 'assertEqual', Load(), lineno=105, col_offset=12), [Call(Name('ensure_relative', Load(), lineno=105, col_offset=29), [Str('/home/foo', lineno=105, col_offset=45)], [], None, None, lineno=105, col_offset=29), Str('home/foo', lineno=105, col_offset=59)], [], None, None, lineno=105, col_offset=12), lineno=105, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=12), 'assertEqual', Load(), lineno=106, col_offset=12), [Call(Name('ensure_relative', Load(), lineno=106, col_offset=29), [Str('some/path', lineno=106, col_offset=45)], [], None, None, lineno=106, col_offset=29), Str('some/path', lineno=106, col_offset=59)], [], None, None, lineno=106, col_offset=12), lineno=106, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=12), 'assertEqual', Load(), lineno=108, col_offset=12), [Call(Name('ensure_relative', Load(), lineno=108, col_offset=29), [Str('c:\\home\\foo', lineno=108, col_offset=45)], [], None, None, lineno=108, col_offset=29), Str('c:home\\foo', lineno=108, col_offset=63)], [], None, None, lineno=108, col_offset=12), lineno=108, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=12), 'assertEqual', Load(), lineno=109, col_offset=12), [Call(Name('ensure_relative', Load(), lineno=109, col_offset=29), [Str('home\\foo', lineno=109, col_offset=45)], [], None, None, lineno=109, col_offset=29), Str('home\\foo', lineno=109, col_offset=59)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12)], lineno=104, col_offset=8)], [], lineno=103, col_offset=4)], [], lineno=14, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Return(Call(Attribute(Name('unittest', Load(), lineno=112, col_offset=11), 'makeSuite', Load(), lineno=112, col_offset=11), [Name('DirUtilTestCase', Load(), lineno=112, col_offset=30)], [], None, None, lineno=112, col_offset=11), lineno=112, col_offset=4)], [], lineno=111, col_offset=0), If(Compare(Name('__name__', Load(), lineno=114, col_offset=3), [Eq()], [Str('__main__', lineno=114, col_offset=15)], lineno=114, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=115, col_offset=4), 'main', Load(), lineno=115, col_offset=4), [], [keyword('defaultTest', Str('test_suite', lineno=115, col_offset=30))], None, None, lineno=115, col_offset=4), lineno=115, col_offset=4)], [], lineno=114, col_offset=0)])
