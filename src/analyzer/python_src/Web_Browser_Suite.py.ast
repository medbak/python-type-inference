Module([Expr(Str('Suite Web Browser Suite: Class of events supported by Web Browser applications\nLevel 1, version 1\n\nGenerated from /Applications/Internet Explorer.app\nAETE/AEUT resource version 1/0, language 0, script 0\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('aetools', None)], lineno=8, col_offset=0), Import([alias('MacOS', None)], lineno=9, col_offset=0), Assign([Name('_code', Store(), lineno=11, col_offset=0)], Str('WWW!', lineno=11, col_offset=8), lineno=11, col_offset=0), ClassDef('Web_Browser_Suite_Events', [], [FunctionDef('Activate', arguments([Name('self', Param(), lineno=15, col_offset=17), Name('_object', Param(), lineno=15, col_offset=23), Name('_attributes', Param(), lineno=15, col_offset=37)], None, '_arguments', [Name('None', Load(), lineno=15, col_offset=31), Dict([], [], lineno=15, col_offset=49)]), [Expr(Str('Activate: Activate Internet Explorer and optionally select window designated by Window Identifier.\n        Required argument: Window Identifier\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Window Identifier of window to activate\n        ', lineno=20, col_offset=-1), lineno=20, col_offset=-1), Assign([Name('_code', Store(), lineno=21, col_offset=8)], Str('WWW!', lineno=21, col_offset=16), lineno=21, col_offset=8), Assign([Name('_subcode', Store(), lineno=22, col_offset=8)], Str('ACTV', lineno=22, col_offset=19), lineno=22, col_offset=8), If(Name('_arguments', Load(), lineno=24, col_offset=11), [Raise(Name('TypeError', Load(), lineno=24, col_offset=29), Str('No optional args expected', lineno=24, col_offset=40), None, lineno=24, col_offset=23)], [], lineno=24, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=25, col_offset=8), Index(Str('----', lineno=25, col_offset=19)), Store(), lineno=25, col_offset=8)], Name('_object', Load(), lineno=25, col_offset=29), lineno=25, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=28, col_offset=8), Name('_arguments', Store(), lineno=28, col_offset=16), Name('_attributes', Store(), lineno=28, col_offset=28)], Store(), lineno=28, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=28, col_offset=42), 'send', Load(), lineno=28, col_offset=42), [Name('_code', Load(), lineno=28, col_offset=52), Name('_subcode', Load(), lineno=28, col_offset=59), Name('_arguments', Load(), lineno=29, col_offset=16), Name('_attributes', Load(), lineno=29, col_offset=28)], [], None, None, lineno=28, col_offset=42), lineno=28, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=30, col_offset=11), 'get', Load(), lineno=30, col_offset=11), [Str('errn', lineno=30, col_offset=26), Num(0, lineno=30, col_offset=34)], [], None, None, lineno=30, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=31, col_offset=18), 'Error', Load(), lineno=31, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=31, col_offset=33), 'decodeerror', Load(), lineno=31, col_offset=33), [Name('_arguments', Load(), lineno=31, col_offset=53)], [], None, None, lineno=31, col_offset=33), None, lineno=31, col_offset=12)], [], lineno=30, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=33, col_offset=11), 'has_key', Load(), lineno=33, col_offset=11), [Str('----', lineno=33, col_offset=30)], [], None, None, lineno=33, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=34, col_offset=19), Index(Str('----', lineno=34, col_offset=30)), Load(), lineno=34, col_offset=19), lineno=34, col_offset=12)], [], lineno=33, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('CloseAllWindows', arguments([Name('self', Param(), lineno=36, col_offset=24), Name('_no_object', Param(), lineno=36, col_offset=30), Name('_attributes', Param(), lineno=36, col_offset=47)], None, '_arguments', [Name('None', Load(), lineno=36, col_offset=41), Dict([], [], lineno=36, col_offset=59)]), [Expr(Str('CloseAllWindows: Closes all windows\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Success\n        ', lineno=40, col_offset=-1), lineno=40, col_offset=-1), Assign([Name('_code', Store(), lineno=41, col_offset=8)], Str('WWW!', lineno=41, col_offset=16), lineno=41, col_offset=8), Assign([Name('_subcode', Store(), lineno=42, col_offset=8)], Str('CLSA', lineno=42, col_offset=19), lineno=42, col_offset=8), If(Name('_arguments', Load(), lineno=44, col_offset=11), [Raise(Name('TypeError', Load(), lineno=44, col_offset=29), Str('No optional args expected', lineno=44, col_offset=40), None, lineno=44, col_offset=23)], [], lineno=44, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=45, col_offset=11), [IsNot()], [Name('None', Load(), lineno=45, col_offset=29)], lineno=45, col_offset=11), [Raise(Name('TypeError', Load(), lineno=45, col_offset=41), Str('No direct arg expected', lineno=45, col_offset=52), None, lineno=45, col_offset=35)], [], lineno=45, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=48, col_offset=8), Name('_arguments', Store(), lineno=48, col_offset=16), Name('_attributes', Store(), lineno=48, col_offset=28)], Store(), lineno=48, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=48, col_offset=42), 'send', Load(), lineno=48, col_offset=42), [Name('_code', Load(), lineno=48, col_offset=52), Name('_subcode', Load(), lineno=48, col_offset=59), Name('_arguments', Load(), lineno=49, col_offset=16), Name('_attributes', Load(), lineno=49, col_offset=28)], [], None, None, lineno=48, col_offset=42), lineno=48, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=50, col_offset=11), 'get', Load(), lineno=50, col_offset=11), [Str('errn', lineno=50, col_offset=26), Num(0, lineno=50, col_offset=34)], [], None, None, lineno=50, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=51, col_offset=18), 'Error', Load(), lineno=51, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=51, col_offset=33), 'decodeerror', Load(), lineno=51, col_offset=33), [Name('_arguments', Load(), lineno=51, col_offset=53)], [], None, None, lineno=51, col_offset=33), None, lineno=51, col_offset=12)], [], lineno=50, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=53, col_offset=11), 'has_key', Load(), lineno=53, col_offset=11), [Str('----', lineno=53, col_offset=30)], [], None, None, lineno=53, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=54, col_offset=19), Index(Str('----', lineno=54, col_offset=30)), Load(), lineno=54, col_offset=19), lineno=54, col_offset=12)], [], lineno=53, col_offset=8)], [], lineno=36, col_offset=4), Assign([Name('_argmap_CloseWindow', Store(), lineno=56, col_offset=4)], Dict([Str('ID', lineno=57, col_offset=8), Str('Title', lineno=58, col_offset=8)], [Str('WIND', lineno=57, col_offset=15), Str('TITL', lineno=58, col_offset=18)], lineno=56, col_offset=26), lineno=56, col_offset=4), FunctionDef('CloseWindow', arguments([Name('self', Param(), lineno=61, col_offset=20), Name('_no_object', Param(), lineno=61, col_offset=26), Name('_attributes', Param(), lineno=61, col_offset=43)], None, '_arguments', [Name('None', Load(), lineno=61, col_offset=37), Dict([], [], lineno=61, col_offset=55)]), [Expr(Str('CloseWindow: Close the window specified by either Window Identifier or Title. If no parameter is specified, close the top window.\n        Keyword argument ID: ID of the window to close. (Can use -1 for top window)\n        Keyword argument Title: Title of the window to close\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Success\n        ', lineno=67, col_offset=-1), lineno=67, col_offset=-1), Assign([Name('_code', Store(), lineno=68, col_offset=8)], Str('WWW!', lineno=68, col_offset=16), lineno=68, col_offset=8), Assign([Name('_subcode', Store(), lineno=69, col_offset=8)], Str('CLOS', lineno=69, col_offset=19), lineno=69, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=71, col_offset=8), 'keysubst', Load(), lineno=71, col_offset=8), [Name('_arguments', Load(), lineno=71, col_offset=25), Attribute(Name('self', Load(), lineno=71, col_offset=37), '_argmap_CloseWindow', Load(), lineno=71, col_offset=37)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=72, col_offset=11), [IsNot()], [Name('None', Load(), lineno=72, col_offset=29)], lineno=72, col_offset=11), [Raise(Name('TypeError', Load(), lineno=72, col_offset=41), Str('No direct arg expected', lineno=72, col_offset=52), None, lineno=72, col_offset=35)], [], lineno=72, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=75, col_offset=8), Name('_arguments', Store(), lineno=75, col_offset=16), Name('_attributes', Store(), lineno=75, col_offset=28)], Store(), lineno=75, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=75, col_offset=42), 'send', Load(), lineno=75, col_offset=42), [Name('_code', Load(), lineno=75, col_offset=52), Name('_subcode', Load(), lineno=75, col_offset=59), Name('_arguments', Load(), lineno=76, col_offset=16), Name('_attributes', Load(), lineno=76, col_offset=28)], [], None, None, lineno=75, col_offset=42), lineno=75, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=77, col_offset=11), 'get', Load(), lineno=77, col_offset=11), [Str('errn', lineno=77, col_offset=26), Num(0, lineno=77, col_offset=34)], [], None, None, lineno=77, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=78, col_offset=18), 'Error', Load(), lineno=78, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=78, col_offset=33), 'decodeerror', Load(), lineno=78, col_offset=33), [Name('_arguments', Load(), lineno=78, col_offset=53)], [], None, None, lineno=78, col_offset=33), None, lineno=78, col_offset=12)], [], lineno=77, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=80, col_offset=11), 'has_key', Load(), lineno=80, col_offset=11), [Str('----', lineno=80, col_offset=30)], [], None, None, lineno=80, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=81, col_offset=19), Index(Str('----', lineno=81, col_offset=30)), Load(), lineno=81, col_offset=19), lineno=81, col_offset=12)], [], lineno=80, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('GetWindowInfo', arguments([Name('self', Param(), lineno=83, col_offset=22), Name('_object', Param(), lineno=83, col_offset=28), Name('_attributes', Param(), lineno=83, col_offset=37)], None, '_arguments', [Dict([], [], lineno=83, col_offset=49)]), [Expr(Str('GetWindowInfo: Returns a window info record (URL/Title) for the specified window.\n        Required argument: Window Identifier of the window\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns:\n        ', lineno=88, col_offset=-1), lineno=88, col_offset=-1), Assign([Name('_code', Store(), lineno=89, col_offset=8)], Str('WWW!', lineno=89, col_offset=16), lineno=89, col_offset=8), Assign([Name('_subcode', Store(), lineno=90, col_offset=8)], Str('WNFO', lineno=90, col_offset=19), lineno=90, col_offset=8), If(Name('_arguments', Load(), lineno=92, col_offset=11), [Raise(Name('TypeError', Load(), lineno=92, col_offset=29), Str('No optional args expected', lineno=92, col_offset=40), None, lineno=92, col_offset=23)], [], lineno=92, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=93, col_offset=8), Index(Str('----', lineno=93, col_offset=19)), Store(), lineno=93, col_offset=8)], Name('_object', Load(), lineno=93, col_offset=29), lineno=93, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=96, col_offset=8), Name('_arguments', Store(), lineno=96, col_offset=16), Name('_attributes', Store(), lineno=96, col_offset=28)], Store(), lineno=96, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=96, col_offset=42), 'send', Load(), lineno=96, col_offset=42), [Name('_code', Load(), lineno=96, col_offset=52), Name('_subcode', Load(), lineno=96, col_offset=59), Name('_arguments', Load(), lineno=97, col_offset=16), Name('_attributes', Load(), lineno=97, col_offset=28)], [], None, None, lineno=96, col_offset=42), lineno=96, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=98, col_offset=11), 'get', Load(), lineno=98, col_offset=11), [Str('errn', lineno=98, col_offset=26), Num(0, lineno=98, col_offset=34)], [], None, None, lineno=98, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=99, col_offset=18), 'Error', Load(), lineno=99, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=99, col_offset=33), 'decodeerror', Load(), lineno=99, col_offset=33), [Name('_arguments', Load(), lineno=99, col_offset=53)], [], None, None, lineno=99, col_offset=33), None, lineno=99, col_offset=12)], [], lineno=98, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=101, col_offset=11), 'has_key', Load(), lineno=101, col_offset=11), [Str('----', lineno=101, col_offset=30)], [], None, None, lineno=101, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=102, col_offset=19), Index(Str('----', lineno=102, col_offset=30)), Load(), lineno=102, col_offset=19), lineno=102, col_offset=12)], [], lineno=101, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('ListWindows', arguments([Name('self', Param(), lineno=104, col_offset=20), Name('_no_object', Param(), lineno=104, col_offset=26), Name('_attributes', Param(), lineno=104, col_offset=43)], None, '_arguments', [Name('None', Load(), lineno=104, col_offset=37), Dict([], [], lineno=104, col_offset=55)]), [Expr(Str("ListWindows: Returns list of Window Identifiers for all open windows.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: undocumented, typecode 'list'\n        ", lineno=108, col_offset=-1), lineno=108, col_offset=-1), Assign([Name('_code', Store(), lineno=109, col_offset=8)], Str('WWW!', lineno=109, col_offset=16), lineno=109, col_offset=8), Assign([Name('_subcode', Store(), lineno=110, col_offset=8)], Str('LSTW', lineno=110, col_offset=19), lineno=110, col_offset=8), If(Name('_arguments', Load(), lineno=112, col_offset=11), [Raise(Name('TypeError', Load(), lineno=112, col_offset=29), Str('No optional args expected', lineno=112, col_offset=40), None, lineno=112, col_offset=23)], [], lineno=112, col_offset=8), If(Compare(Name('_no_object', Load(), lineno=113, col_offset=11), [IsNot()], [Name('None', Load(), lineno=113, col_offset=29)], lineno=113, col_offset=11), [Raise(Name('TypeError', Load(), lineno=113, col_offset=41), Str('No direct arg expected', lineno=113, col_offset=52), None, lineno=113, col_offset=35)], [], lineno=113, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=116, col_offset=8), Name('_arguments', Store(), lineno=116, col_offset=16), Name('_attributes', Store(), lineno=116, col_offset=28)], Store(), lineno=116, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=116, col_offset=42), 'send', Load(), lineno=116, col_offset=42), [Name('_code', Load(), lineno=116, col_offset=52), Name('_subcode', Load(), lineno=116, col_offset=59), Name('_arguments', Load(), lineno=117, col_offset=16), Name('_attributes', Load(), lineno=117, col_offset=28)], [], None, None, lineno=116, col_offset=42), lineno=116, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=118, col_offset=11), 'get', Load(), lineno=118, col_offset=11), [Str('errn', lineno=118, col_offset=26), Num(0, lineno=118, col_offset=34)], [], None, None, lineno=118, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=119, col_offset=18), 'Error', Load(), lineno=119, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=119, col_offset=33), 'decodeerror', Load(), lineno=119, col_offset=33), [Name('_arguments', Load(), lineno=119, col_offset=53)], [], None, None, lineno=119, col_offset=33), None, lineno=119, col_offset=12)], [], lineno=118, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=121, col_offset=11), 'has_key', Load(), lineno=121, col_offset=11), [Str('----', lineno=121, col_offset=30)], [], None, None, lineno=121, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=122, col_offset=19), Index(Str('----', lineno=122, col_offset=30)), Load(), lineno=122, col_offset=19), lineno=122, col_offset=12)], [], lineno=121, col_offset=8)], [], lineno=104, col_offset=4), Assign([Name('_argmap_OpenURL', Store(), lineno=124, col_offset=4)], Dict([Str('to', lineno=125, col_offset=8), Str('toWindow', lineno=126, col_offset=8), Str('Flags', lineno=127, col_offset=8), Str('FormData', lineno=128, col_offset=8), Str('MIME_Type', lineno=129, col_offset=8)], [Str('INTO', lineno=125, col_offset=15), Str('WIND', lineno=126, col_offset=21), Str('FLGS', lineno=127, col_offset=18), Str('POST', lineno=128, col_offset=21), Str('MIME', lineno=129, col_offset=22)], lineno=124, col_offset=22), lineno=124, col_offset=4), FunctionDef('OpenURL', arguments([Name('self', Param(), lineno=132, col_offset=16), Name('_object', Param(), lineno=132, col_offset=22), Name('_attributes', Param(), lineno=132, col_offset=31)], None, '_arguments', [Dict([], [], lineno=132, col_offset=43)]), [Expr(Str('OpenURL: Retrieves URL off the Web.\n        Required argument: Fully-qualified URL\n        Keyword argument to: Target file for saving downloaded data\n        Keyword argument toWindow: Target window for resource at URL (-1 for top window, 0 for new window)\n        Keyword argument Flags: Valid Flags settings are: 1-Ignore the document cache; 2-Ignore the image cache; 4-Operate in background mode.\n        Keyword argument FormData: data to post\n        Keyword argument MIME_Type: MIME type of data being posted\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=141, col_offset=-1), lineno=141, col_offset=-1), Assign([Name('_code', Store(), lineno=142, col_offset=8)], Str('WWW!', lineno=142, col_offset=16), lineno=142, col_offset=8), Assign([Name('_subcode', Store(), lineno=143, col_offset=8)], Str('OURL', lineno=143, col_offset=19), lineno=143, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=145, col_offset=8), 'keysubst', Load(), lineno=145, col_offset=8), [Name('_arguments', Load(), lineno=145, col_offset=25), Attribute(Name('self', Load(), lineno=145, col_offset=37), '_argmap_OpenURL', Load(), lineno=145, col_offset=37)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=146, col_offset=8), Index(Str('----', lineno=146, col_offset=19)), Store(), lineno=146, col_offset=8)], Name('_object', Load(), lineno=146, col_offset=29), lineno=146, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=149, col_offset=8), Name('_arguments', Store(), lineno=149, col_offset=16), Name('_attributes', Store(), lineno=149, col_offset=28)], Store(), lineno=149, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=149, col_offset=42), 'send', Load(), lineno=149, col_offset=42), [Name('_code', Load(), lineno=149, col_offset=52), Name('_subcode', Load(), lineno=149, col_offset=59), Name('_arguments', Load(), lineno=150, col_offset=16), Name('_attributes', Load(), lineno=150, col_offset=28)], [], None, None, lineno=149, col_offset=42), lineno=149, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=151, col_offset=11), 'get', Load(), lineno=151, col_offset=11), [Str('errn', lineno=151, col_offset=26), Num(0, lineno=151, col_offset=34)], [], None, None, lineno=151, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=152, col_offset=18), 'Error', Load(), lineno=152, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=152, col_offset=33), 'decodeerror', Load(), lineno=152, col_offset=33), [Name('_arguments', Load(), lineno=152, col_offset=53)], [], None, None, lineno=152, col_offset=33), None, lineno=152, col_offset=12)], [], lineno=151, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=154, col_offset=11), 'has_key', Load(), lineno=154, col_offset=11), [Str('----', lineno=154, col_offset=30)], [], None, None, lineno=154, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=155, col_offset=19), Index(Str('----', lineno=155, col_offset=30)), Load(), lineno=155, col_offset=19), lineno=155, col_offset=12)], [], lineno=154, col_offset=8)], [], lineno=132, col_offset=4), Assign([Name('_argmap_ParseAnchor', Store(), lineno=157, col_offset=4)], Dict([Str('withURL', lineno=158, col_offset=8)], [Str('RELA', lineno=158, col_offset=20)], lineno=157, col_offset=26), lineno=157, col_offset=4), FunctionDef('ParseAnchor', arguments([Name('self', Param(), lineno=161, col_offset=20), Name('_object', Param(), lineno=161, col_offset=26), Name('_attributes', Param(), lineno=161, col_offset=35)], None, '_arguments', [Dict([], [], lineno=161, col_offset=47)]), [Expr(Str('ParseAnchor: Combines a base URL and a relative URL to produce a fully-qualified URL\n        Required argument: Base URL\n        Keyword argument withURL: Relative URL that is combined with the Base URL (in the direct object) to produce a fully-qualified URL.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: Fully-qualified URL\n        ', lineno=167, col_offset=-1), lineno=167, col_offset=-1), Assign([Name('_code', Store(), lineno=168, col_offset=8)], Str('WWW!', lineno=168, col_offset=16), lineno=168, col_offset=8), Assign([Name('_subcode', Store(), lineno=169, col_offset=8)], Str('PRSA', lineno=169, col_offset=19), lineno=169, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=171, col_offset=8), 'keysubst', Load(), lineno=171, col_offset=8), [Name('_arguments', Load(), lineno=171, col_offset=25), Attribute(Name('self', Load(), lineno=171, col_offset=37), '_argmap_ParseAnchor', Load(), lineno=171, col_offset=37)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=172, col_offset=8), Index(Str('----', lineno=172, col_offset=19)), Store(), lineno=172, col_offset=8)], Name('_object', Load(), lineno=172, col_offset=29), lineno=172, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=175, col_offset=8), Name('_arguments', Store(), lineno=175, col_offset=16), Name('_attributes', Store(), lineno=175, col_offset=28)], Store(), lineno=175, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=175, col_offset=42), 'send', Load(), lineno=175, col_offset=42), [Name('_code', Load(), lineno=175, col_offset=52), Name('_subcode', Load(), lineno=175, col_offset=59), Name('_arguments', Load(), lineno=176, col_offset=16), Name('_attributes', Load(), lineno=176, col_offset=28)], [], None, None, lineno=175, col_offset=42), lineno=175, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=177, col_offset=11), 'get', Load(), lineno=177, col_offset=11), [Str('errn', lineno=177, col_offset=26), Num(0, lineno=177, col_offset=34)], [], None, None, lineno=177, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=178, col_offset=18), 'Error', Load(), lineno=178, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=178, col_offset=33), 'decodeerror', Load(), lineno=178, col_offset=33), [Name('_arguments', Load(), lineno=178, col_offset=53)], [], None, None, lineno=178, col_offset=33), None, lineno=178, col_offset=12)], [], lineno=177, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=180, col_offset=11), 'has_key', Load(), lineno=180, col_offset=11), [Str('----', lineno=180, col_offset=30)], [], None, None, lineno=180, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=181, col_offset=19), Index(Str('----', lineno=181, col_offset=30)), Load(), lineno=181, col_offset=19), lineno=181, col_offset=12)], [], lineno=180, col_offset=8)], [], lineno=161, col_offset=4), Assign([Name('_argmap_ShowFile', Store(), lineno=183, col_offset=4)], Dict([Str('MIME_Type', lineno=184, col_offset=8), Str('Window_Identifier', lineno=185, col_offset=8), Str('URL', lineno=186, col_offset=8)], [Str('MIME', lineno=184, col_offset=22), Str('WIND', lineno=185, col_offset=30), Str('URL ', lineno=186, col_offset=16)], lineno=183, col_offset=23), lineno=183, col_offset=4), FunctionDef('ShowFile', arguments([Name('self', Param(), lineno=189, col_offset=17), Name('_object', Param(), lineno=189, col_offset=23), Name('_attributes', Param(), lineno=189, col_offset=32)], None, '_arguments', [Dict([], [], lineno=189, col_offset=44)]), [Expr(Str('ShowFile: FileSpec containing data of specified MIME type to be rendered in window specified by Window Identifier.\n        Required argument: The file\n        Keyword argument MIME_Type: MIME type\n        Keyword argument Window_Identifier: Identifier of the target window for the URL. (Can use -1 for top window)\n        Keyword argument URL: URL that allows this document to be reloaded.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=196, col_offset=-1), lineno=196, col_offset=-1), Assign([Name('_code', Store(), lineno=197, col_offset=8)], Str('WWW!', lineno=197, col_offset=16), lineno=197, col_offset=8), Assign([Name('_subcode', Store(), lineno=198, col_offset=8)], Str('SHWF', lineno=198, col_offset=19), lineno=198, col_offset=8), Expr(Call(Attribute(Name('aetools', Load(), lineno=200, col_offset=8), 'keysubst', Load(), lineno=200, col_offset=8), [Name('_arguments', Load(), lineno=200, col_offset=25), Attribute(Name('self', Load(), lineno=200, col_offset=37), '_argmap_ShowFile', Load(), lineno=200, col_offset=37)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=201, col_offset=8), Index(Str('----', lineno=201, col_offset=19)), Store(), lineno=201, col_offset=8)], Name('_object', Load(), lineno=201, col_offset=29), lineno=201, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=204, col_offset=8), Name('_arguments', Store(), lineno=204, col_offset=16), Name('_attributes', Store(), lineno=204, col_offset=28)], Store(), lineno=204, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=204, col_offset=42), 'send', Load(), lineno=204, col_offset=42), [Name('_code', Load(), lineno=204, col_offset=52), Name('_subcode', Load(), lineno=204, col_offset=59), Name('_arguments', Load(), lineno=205, col_offset=16), Name('_attributes', Load(), lineno=205, col_offset=28)], [], None, None, lineno=204, col_offset=42), lineno=204, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=206, col_offset=11), 'get', Load(), lineno=206, col_offset=11), [Str('errn', lineno=206, col_offset=26), Num(0, lineno=206, col_offset=34)], [], None, None, lineno=206, col_offset=11), [Raise(Attribute(Name('aetools', Load(), lineno=207, col_offset=18), 'Error', Load(), lineno=207, col_offset=18), Call(Attribute(Name('aetools', Load(), lineno=207, col_offset=33), 'decodeerror', Load(), lineno=207, col_offset=33), [Name('_arguments', Load(), lineno=207, col_offset=53)], [], None, None, lineno=207, col_offset=33), None, lineno=207, col_offset=12)], [], lineno=206, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=209, col_offset=11), 'has_key', Load(), lineno=209, col_offset=11), [Str('----', lineno=209, col_offset=30)], [], None, None, lineno=209, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=210, col_offset=19), Index(Str('----', lineno=210, col_offset=30)), Load(), lineno=210, col_offset=19), lineno=210, col_offset=12)], [], lineno=209, col_offset=8)], [], lineno=189, col_offset=4)], [], lineno=13, col_offset=0), Assign([Name('_classdeclarations', Store(), lineno=216, col_offset=0)], Dict([], [], lineno=216, col_offset=21), lineno=216, col_offset=0), Assign([Name('_propdeclarations', Store(), lineno=219, col_offset=0)], Dict([], [], lineno=219, col_offset=20), lineno=219, col_offset=0), Assign([Name('_compdeclarations', Store(), lineno=222, col_offset=0)], Dict([], [], lineno=222, col_offset=20), lineno=222, col_offset=0), Assign([Name('_enumdeclarations', Store(), lineno=225, col_offset=0)], Dict([], [], lineno=225, col_offset=20), lineno=225, col_offset=0)])
