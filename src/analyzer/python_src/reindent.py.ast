Module([Expr(Str('reindent [-d][-r][-v] [ path ... ]\n\n-d (--dryrun)   Dry run.   Analyze, but don\'t make any changes to, files.\n-r (--recurse)  Recurse.   Search for all .py files in subdirectories too.\n-n (--nobackup) No backup. Does not make a ".bak" file before reindenting.\n-v (--verbose)  Verbose.   Print informative msgs; else no output.\n-h (--help)     Help.      Print this usage information and exit.\n\nChange Python (.py) files to use 4-space indents and no hard tab characters.\nAlso trim excess spaces and tabs from ends of lines, and remove empty lines\nat the end of files.  Also ensure the last line ends with a newline.\n\nIf no paths are given on the command line, reindent operates as a filter,\nreading a single source file from standard input and writing the transformed\nsource to standard output.  In this case, the -d, -r and -v flags are\nignored.\n\nYou can pass one or more file and/or directory paths.  When a directory\npath, all .py files within the directory will be examined, and, if the -r\noption is given, likewise recursively for subdirectories.\n\nIf output is not to standard output, reindent overwrites files in place,\nrenaming the originals with a .bak extension.  If it finds nothing to\nchange, the file is left alone.  If reindent does change a file, the changed\nfile is a fixed-point for future runs (i.e., running reindent on the\nresulting .py file won\'t change it again).\n\nThe hard part of reindenting is figuring out what to do with comment\nlines.  So long as the input files get a clean bill of health from\ntabnanny.py, reindent should do a good job.\n\nThe backup file is a copy of the one that is being reindented. The ".bak"\nfile is generated with shutil.copy(), but some corner cases regarding\nuser/group and permissions could leave the backup file more readable that\nyou\'d prefer. You can always use the --nobackup option to prevent this.\n', lineno=40, col_offset=-1), lineno=40, col_offset=-1), Assign([Name('__version__', Store(), lineno=42, col_offset=0)], Str('1', lineno=42, col_offset=14), lineno=42, col_offset=0), Import([alias('tokenize', None)], lineno=44, col_offset=0), Import([alias('os', None), alias('shutil', None)], lineno=45, col_offset=0), Import([alias('sys', None)], lineno=46, col_offset=0), Assign([Name('verbose', Store(), lineno=48, col_offset=0)], Num(0, lineno=48, col_offset=13), lineno=48, col_offset=0), Assign([Name('recurse', Store(), lineno=49, col_offset=0)], Num(0, lineno=49, col_offset=13), lineno=49, col_offset=0), Assign([Name('dryrun', Store(), lineno=50, col_offset=0)], Num(0, lineno=50, col_offset=13), lineno=50, col_offset=0), Assign([Name('makebackup', Store(), lineno=51, col_offset=0)], Name('True', Load(), lineno=51, col_offset=13), lineno=51, col_offset=0), FunctionDef('usage', arguments([Name('msg', Param(), lineno=53, col_offset=10)], None, None, [Name('None', Load(), lineno=53, col_offset=14)]), [If(Compare(Name('msg', Load(), lineno=54, col_offset=7), [IsNot()], [Name('None', Load(), lineno=54, col_offset=18)], lineno=54, col_offset=7), [Print(Attribute(Name('sys', Load(), lineno=55, col_offset=17), 'stderr', Load(), lineno=55, col_offset=17), [Name('msg', Load(), lineno=55, col_offset=29)], True, lineno=55, col_offset=8)], [], lineno=54, col_offset=4), Print(Attribute(Name('sys', Load(), lineno=56, col_offset=13), 'stderr', Load(), lineno=56, col_offset=13), [Name('__doc__', Load(), lineno=56, col_offset=25)], True, lineno=56, col_offset=4)], [], lineno=53, col_offset=0), FunctionDef('errprint', arguments([], 'args', None, []), [Assign([Name('sep', Store(), lineno=59, col_offset=4)], Str('', lineno=59, col_offset=10), lineno=59, col_offset=4), For(Name('arg', Store(), lineno=60, col_offset=8), Name('args', Load(), lineno=60, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=61, col_offset=8), 'stderr', Load(), lineno=61, col_offset=8), 'write', Load(), lineno=61, col_offset=8), [BinOp(Name('sep', Load(), lineno=61, col_offset=25), Add(), Call(Name('str', Load(), lineno=61, col_offset=31), [Name('arg', Load(), lineno=61, col_offset=35)], [], None, None, lineno=61, col_offset=31), lineno=61, col_offset=25)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Assign([Name('sep', Store(), lineno=62, col_offset=8)], Str(' ', lineno=62, col_offset=14), lineno=62, col_offset=8)], [], lineno=60, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=63, col_offset=4), 'stderr', Load(), lineno=63, col_offset=4), 'write', Load(), lineno=63, col_offset=4), [Str('\n', lineno=63, col_offset=21)], [], None, None, lineno=63, col_offset=4), lineno=63, col_offset=4)], [], lineno=58, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Import([alias('getopt', None)], lineno=66, col_offset=4), Global(['verbose', 'recurse', 'dryrun', 'makebackup'], lineno=67, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=69, col_offset=8), Name('args', Store(), lineno=69, col_offset=14)], Store(), lineno=69, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=69, col_offset=21), 'getopt', Load(), lineno=69, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=69, col_offset=35), 'argv', Load(), lineno=69, col_offset=35), Slice(Num(1, lineno=69, col_offset=44), None, None), Load(), lineno=69, col_offset=35), Str('drnvh', lineno=69, col_offset=49), List([Str('dryrun', lineno=70, col_offset=25), Str('recurse', lineno=70, col_offset=35), Str('nobackup', lineno=70, col_offset=46), Str('verbose', lineno=70, col_offset=58), Str('help', lineno=70, col_offset=69)], Load(), lineno=70, col_offset=24)], [], None, None, lineno=69, col_offset=21), lineno=69, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=71, col_offset=11), 'error', Load(), lineno=71, col_offset=11), Name('msg', Store(), lineno=71, col_offset=25), [Expr(Call(Name('usage', Load(), lineno=72, col_offset=8), [Name('msg', Load(), lineno=72, col_offset=14)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Return(None, lineno=73, col_offset=8)], lineno=71, col_offset=4)], [], lineno=68, col_offset=4), For(Tuple([Name('o', Store(), lineno=74, col_offset=8), Name('a', Store(), lineno=74, col_offset=11)], Store(), lineno=74, col_offset=8), Name('opts', Load(), lineno=74, col_offset=16), [If(Compare(Name('o', Load(), lineno=75, col_offset=11), [In()], [Tuple([Str('-d', lineno=75, col_offset=17), Str('--dryrun', lineno=75, col_offset=23)], Load(), lineno=75, col_offset=17)], lineno=75, col_offset=11), [AugAssign(Name('dryrun', Store(), lineno=76, col_offset=12), Add(), Num(1, lineno=76, col_offset=22), lineno=76, col_offset=12)], [If(Compare(Name('o', Load(), lineno=77, col_offset=13), [In()], [Tuple([Str('-r', lineno=77, col_offset=19), Str('--recurse', lineno=77, col_offset=25)], Load(), lineno=77, col_offset=19)], lineno=77, col_offset=13), [AugAssign(Name('recurse', Store(), lineno=78, col_offset=12), Add(), Num(1, lineno=78, col_offset=23), lineno=78, col_offset=12)], [If(Compare(Name('o', Load(), lineno=79, col_offset=13), [In()], [Tuple([Str('-n', lineno=79, col_offset=19), Str('--nobackup', lineno=79, col_offset=25)], Load(), lineno=79, col_offset=19)], lineno=79, col_offset=13), [Assign([Name('makebackup', Store(), lineno=80, col_offset=12)], Name('False', Load(), lineno=80, col_offset=25), lineno=80, col_offset=12)], [If(Compare(Name('o', Load(), lineno=81, col_offset=13), [In()], [Tuple([Str('-v', lineno=81, col_offset=19), Str('--verbose', lineno=81, col_offset=25)], Load(), lineno=81, col_offset=19)], lineno=81, col_offset=13), [AugAssign(Name('verbose', Store(), lineno=82, col_offset=12), Add(), Num(1, lineno=82, col_offset=23), lineno=82, col_offset=12)], [If(Compare(Name('o', Load(), lineno=83, col_offset=13), [In()], [Tuple([Str('-h', lineno=83, col_offset=19), Str('--help', lineno=83, col_offset=25)], Load(), lineno=83, col_offset=19)], lineno=83, col_offset=13), [Expr(Call(Name('usage', Load(), lineno=84, col_offset=12), [], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=12), Return(None, lineno=85, col_offset=12)], [], lineno=83, col_offset=13)], lineno=81, col_offset=13)], lineno=79, col_offset=13)], lineno=77, col_offset=13)], lineno=75, col_offset=8)], [], lineno=74, col_offset=4), If(UnaryOp(Not(), Name('args', Load(), lineno=86, col_offset=11), lineno=86, col_offset=7), [Assign([Name('r', Store(), lineno=87, col_offset=8)], Call(Name('Reindenter', Load(), lineno=87, col_offset=12), [Attribute(Name('sys', Load(), lineno=87, col_offset=23), 'stdin', Load(), lineno=87, col_offset=23)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=8), Expr(Call(Attribute(Name('r', Load(), lineno=88, col_offset=8), 'run', Load(), lineno=88, col_offset=8), [], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Expr(Call(Attribute(Name('r', Load(), lineno=89, col_offset=8), 'write', Load(), lineno=89, col_offset=8), [Attribute(Name('sys', Load(), lineno=89, col_offset=16), 'stdout', Load(), lineno=89, col_offset=16)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Return(None, lineno=90, col_offset=8)], [], lineno=86, col_offset=4), For(Name('arg', Store(), lineno=91, col_offset=8), Name('args', Load(), lineno=91, col_offset=15), [Expr(Call(Name('check', Load(), lineno=92, col_offset=8), [Name('arg', Load(), lineno=92, col_offset=14)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=91, col_offset=4)], [], lineno=65, col_offset=0), FunctionDef('check', arguments([Name('file', Param(), lineno=94, col_offset=10)], None, None, []), [If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=95, col_offset=7), 'path', Load(), lineno=95, col_offset=7), 'isdir', Load(), lineno=95, col_offset=7), [Name('file', Load(), lineno=95, col_offset=21)], [], None, None, lineno=95, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=95, col_offset=35), 'path', Load(), lineno=95, col_offset=35), 'islink', Load(), lineno=95, col_offset=35), [Name('file', Load(), lineno=95, col_offset=50)], [], None, None, lineno=95, col_offset=35), lineno=95, col_offset=31)], lineno=95, col_offset=7), [If(Name('verbose', Load(), lineno=96, col_offset=11), [Print(None, [Str('listing directory', lineno=97, col_offset=18), Name('file', Load(), lineno=97, col_offset=39)], True, lineno=97, col_offset=12)], [], lineno=96, col_offset=8), Assign([Name('names', Store(), lineno=98, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=98, col_offset=16), 'listdir', Load(), lineno=98, col_offset=16), [Name('file', Load(), lineno=98, col_offset=27)], [], None, None, lineno=98, col_offset=16), lineno=98, col_offset=8), For(Name('name', Store(), lineno=99, col_offset=12), Name('names', Load(), lineno=99, col_offset=20), [Assign([Name('fullname', Store(), lineno=100, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=100, col_offset=23), 'path', Load(), lineno=100, col_offset=23), 'join', Load(), lineno=100, col_offset=23), [Name('file', Load(), lineno=100, col_offset=36), Name('name', Load(), lineno=100, col_offset=42)], [], None, None, lineno=100, col_offset=23), lineno=100, col_offset=12), If(BoolOp(Or(), [BoolOp(And(), [Name('recurse', Load(), lineno=101, col_offset=17), Call(Attribute(Attribute(Name('os', Load(), lineno=101, col_offset=29), 'path', Load(), lineno=101, col_offset=29), 'isdir', Load(), lineno=101, col_offset=29), [Name('fullname', Load(), lineno=101, col_offset=43)], [], None, None, lineno=101, col_offset=29), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=102, col_offset=21), 'path', Load(), lineno=102, col_offset=21), 'islink', Load(), lineno=102, col_offset=21), [Name('fullname', Load(), lineno=102, col_offset=36)], [], None, None, lineno=102, col_offset=21), lineno=102, col_offset=17), UnaryOp(Not(), Call(Attribute(Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=103, col_offset=21), 'path', Load(), lineno=103, col_offset=21), 'split', Load(), lineno=103, col_offset=21), [Name('fullname', Load(), lineno=103, col_offset=35)], [], None, None, lineno=103, col_offset=21), Index(Num(1, lineno=103, col_offset=45)), Load(), lineno=103, col_offset=21), 'startswith', Load(), lineno=103, col_offset=21), [Str('.', lineno=103, col_offset=59)], [], None, None, lineno=103, col_offset=21), lineno=103, col_offset=17)], lineno=101, col_offset=17), Call(Attribute(Call(Attribute(Name('name', Load(), lineno=104, col_offset=19), 'lower', Load(), lineno=104, col_offset=19), [], [], None, None, lineno=104, col_offset=19), 'endswith', Load(), lineno=104, col_offset=19), [Str('.py', lineno=104, col_offset=41)], [], None, None, lineno=104, col_offset=19)], lineno=101, col_offset=16), [Expr(Call(Name('check', Load(), lineno=105, col_offset=16), [Name('fullname', Load(), lineno=105, col_offset=22)], [], None, None, lineno=105, col_offset=16), lineno=105, col_offset=16)], [], lineno=101, col_offset=12)], [], lineno=99, col_offset=8), Return(None, lineno=106, col_offset=8)], [], lineno=95, col_offset=4), If(Name('verbose', Load(), lineno=108, col_offset=7), [Print(None, [Str('checking', lineno=109, col_offset=14), Name('file', Load(), lineno=109, col_offset=26), Str('...', lineno=109, col_offset=32)], False, lineno=109, col_offset=8)], [], lineno=108, col_offset=4), TryExcept([Assign([Name('f', Store(), lineno=111, col_offset=8)], Call(Name('open', Load(), lineno=111, col_offset=12), [Name('file', Load(), lineno=111, col_offset=17)], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=112, col_offset=11), Name('msg', Store(), lineno=112, col_offset=20), [Expr(Call(Name('errprint', Load(), lineno=113, col_offset=8), [BinOp(Str('%s: I/O Error: %s', lineno=113, col_offset=17), Mod(), Tuple([Name('file', Load(), lineno=113, col_offset=40), Call(Name('str', Load(), lineno=113, col_offset=46), [Name('msg', Load(), lineno=113, col_offset=50)], [], None, None, lineno=113, col_offset=46)], Load(), lineno=113, col_offset=40), lineno=113, col_offset=17)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Return(None, lineno=114, col_offset=8)], lineno=112, col_offset=4)], [], lineno=110, col_offset=4), Assign([Name('r', Store(), lineno=116, col_offset=4)], Call(Name('Reindenter', Load(), lineno=116, col_offset=8), [Name('f', Load(), lineno=116, col_offset=19)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=117, col_offset=4), 'close', Load(), lineno=117, col_offset=4), [], [], None, None, lineno=117, col_offset=4), lineno=117, col_offset=4), If(Call(Attribute(Name('r', Load(), lineno=118, col_offset=7), 'run', Load(), lineno=118, col_offset=7), [], [], None, None, lineno=118, col_offset=7), [If(Name('verbose', Load(), lineno=119, col_offset=11), [Print(None, [Str('changed.', lineno=120, col_offset=18)], True, lineno=120, col_offset=12), If(Name('dryrun', Load(), lineno=121, col_offset=15), [Print(None, [Str('But this is a dry run, so leaving it alone.', lineno=122, col_offset=22)], True, lineno=122, col_offset=16)], [], lineno=121, col_offset=12)], [], lineno=119, col_offset=8), If(UnaryOp(Not(), Name('dryrun', Load(), lineno=123, col_offset=15), lineno=123, col_offset=11), [Assign([Name('bak', Store(), lineno=124, col_offset=12)], BinOp(Name('file', Load(), lineno=124, col_offset=18), Add(), Str('.bak', lineno=124, col_offset=25), lineno=124, col_offset=18), lineno=124, col_offset=12), If(Name('makebackup', Load(), lineno=125, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=126, col_offset=16), 'copyfile', Load(), lineno=126, col_offset=16), [Name('file', Load(), lineno=126, col_offset=32), Name('bak', Load(), lineno=126, col_offset=38)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=16), If(Name('verbose', Load(), lineno=127, col_offset=19), [Print(None, [Str('backed up', lineno=128, col_offset=26), Name('file', Load(), lineno=128, col_offset=39), Str('to', lineno=128, col_offset=45), Name('bak', Load(), lineno=128, col_offset=51)], True, lineno=128, col_offset=20)], [], lineno=127, col_offset=16)], [], lineno=125, col_offset=12), Assign([Name('f', Store(), lineno=129, col_offset=12)], Call(Name('open', Load(), lineno=129, col_offset=16), [Name('file', Load(), lineno=129, col_offset=21), Str('w', lineno=129, col_offset=27)], [], None, None, lineno=129, col_offset=16), lineno=129, col_offset=12), Expr(Call(Attribute(Name('r', Load(), lineno=130, col_offset=12), 'write', Load(), lineno=130, col_offset=12), [Name('f', Load(), lineno=130, col_offset=20)], [], None, None, lineno=130, col_offset=12), lineno=130, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=131, col_offset=12), 'close', Load(), lineno=131, col_offset=12), [], [], None, None, lineno=131, col_offset=12), lineno=131, col_offset=12), If(Name('verbose', Load(), lineno=132, col_offset=15), [Print(None, [Str('wrote new', lineno=133, col_offset=22), Name('file', Load(), lineno=133, col_offset=35)], True, lineno=133, col_offset=16)], [], lineno=132, col_offset=12)], [], lineno=123, col_offset=8), Return(Name('True', Load(), lineno=134, col_offset=15), lineno=134, col_offset=8)], [If(Name('verbose', Load(), lineno=136, col_offset=11), [Print(None, [Str('unchanged.', lineno=137, col_offset=18)], True, lineno=137, col_offset=12)], [], lineno=136, col_offset=8), Return(Name('False', Load(), lineno=138, col_offset=15), lineno=138, col_offset=8)], lineno=118, col_offset=4)], [], lineno=94, col_offset=0), FunctionDef('_rstrip', arguments([Name('line', Param(), lineno=140, col_offset=12), Name('JUNK', Param(), lineno=140, col_offset=18)], None, None, [Str('\n \t', lineno=140, col_offset=23)]), [Expr(Str('Return line stripped of trailing spaces, tabs, newlines.\n\n    Note that line.rstrip() instead also strips sundry control characters,\n    but at least one known Emacs user expects to keep junk like that, not\n    mentioning Barry by name or anything <wink>.\n    ', lineno=146, col_offset=-1), lineno=146, col_offset=-1), Assign([Name('i', Store(), lineno=148, col_offset=4)], Call(Name('len', Load(), lineno=148, col_offset=8), [Name('line', Load(), lineno=148, col_offset=12)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=4), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=149, col_offset=10), [Gt()], [Num(0, lineno=149, col_offset=14)], lineno=149, col_offset=10), Compare(Subscript(Name('line', Load(), lineno=149, col_offset=20), Index(BinOp(Name('i', Load(), lineno=149, col_offset=25), Sub(), Num(1, lineno=149, col_offset=27), lineno=149, col_offset=25)), Load(), lineno=149, col_offset=20), [In()], [Name('JUNK', Load(), lineno=149, col_offset=33)], lineno=149, col_offset=20)], lineno=149, col_offset=10), [AugAssign(Name('i', Store(), lineno=150, col_offset=8), Sub(), Num(1, lineno=150, col_offset=13), lineno=150, col_offset=8)], [], lineno=149, col_offset=4), Return(Subscript(Name('line', Load(), lineno=151, col_offset=11), Slice(None, Name('i', Load(), lineno=151, col_offset=17), None), Load(), lineno=151, col_offset=11), lineno=151, col_offset=4)], [], lineno=140, col_offset=0), ClassDef('Reindenter', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=155, col_offset=17), Name('f', Param(), lineno=155, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=156, col_offset=8), 'find_stmt', Store(), lineno=156, col_offset=8)], Num(1, lineno=156, col_offset=25), lineno=156, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=157, col_offset=8), 'level', Store(), lineno=157, col_offset=8)], Num(0, lineno=157, col_offset=21), lineno=157, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=160, col_offset=8), 'raw', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=160, col_offset=19), 'readlines', Load(), lineno=160, col_offset=19), [], [], None, None, lineno=160, col_offset=19), lineno=160, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=165, col_offset=8), 'lines', Store(), lineno=165, col_offset=8)], ListComp(BinOp(Call(Attribute(Call(Name('_rstrip', Load(), lineno=165, col_offset=22), [Name('line', Load(), lineno=165, col_offset=30)], [], None, None, lineno=165, col_offset=22), 'expandtabs', Load(), lineno=165, col_offset=22), [], [], None, None, lineno=165, col_offset=22), Add(), Str('\n', lineno=165, col_offset=51), lineno=165, col_offset=22), [comprehension(Name('line', Store(), lineno=166, col_offset=26), Attribute(Name('self', Load(), lineno=166, col_offset=34), 'raw', Load(), lineno=166, col_offset=34), [])], lineno=165, col_offset=22), lineno=165, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=167, col_offset=8), 'lines', Load(), lineno=167, col_offset=8), 'insert', Load(), lineno=167, col_offset=8), [Num(0, lineno=167, col_offset=26), Name('None', Load(), lineno=167, col_offset=29)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=168, col_offset=8), 'index', Store(), lineno=168, col_offset=8)], Num(1, lineno=168, col_offset=21), lineno=168, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=174, col_offset=8), 'stats', Store(), lineno=174, col_offset=8)], List([], Load(), lineno=174, col_offset=21), lineno=174, col_offset=8)], [], lineno=155, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=176, col_offset=12)], None, None, []), [Expr(Call(Attribute(Name('tokenize', Load(), lineno=177, col_offset=8), 'tokenize', Load(), lineno=177, col_offset=8), [Attribute(Name('self', Load(), lineno=177, col_offset=26), 'getline', Load(), lineno=177, col_offset=26), Attribute(Name('self', Load(), lineno=177, col_offset=40), 'tokeneater', Load(), lineno=177, col_offset=40)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Assign([Name('lines', Store(), lineno=179, col_offset=8)], Attribute(Name('self', Load(), lineno=179, col_offset=16), 'lines', Load(), lineno=179, col_offset=16), lineno=179, col_offset=8), While(BoolOp(And(), [Name('lines', Load(), lineno=180, col_offset=14), Compare(Subscript(Name('lines', Load(), lineno=180, col_offset=24), Index(Num(-1, lineno=180, col_offset=31)), Load(), lineno=180, col_offset=24), [Eq()], [Str('\n', lineno=180, col_offset=37)], lineno=180, col_offset=24)], lineno=180, col_offset=14), [Expr(Call(Attribute(Name('lines', Load(), lineno=181, col_offset=12), 'pop', Load(), lineno=181, col_offset=12), [], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], [], lineno=180, col_offset=8), Assign([Name('stats', Store(), lineno=183, col_offset=8)], Attribute(Name('self', Load(), lineno=183, col_offset=16), 'stats', Load(), lineno=183, col_offset=16), lineno=183, col_offset=8), Expr(Call(Attribute(Name('stats', Load(), lineno=184, col_offset=8), 'append', Load(), lineno=184, col_offset=8), [Tuple([Call(Name('len', Load(), lineno=184, col_offset=22), [Name('lines', Load(), lineno=184, col_offset=26)], [], None, None, lineno=184, col_offset=22), Num(0, lineno=184, col_offset=34)], Load(), lineno=184, col_offset=22)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Assign([Name('have2want', Store(), lineno=186, col_offset=8)], Dict([], [], lineno=186, col_offset=20), lineno=186, col_offset=8), Assign([Name('after', Store(), lineno=188, col_offset=8), Attribute(Name('self', Load(), lineno=188, col_offset=16), 'after', Store(), lineno=188, col_offset=16)], List([], Load(), lineno=188, col_offset=29), lineno=188, col_offset=8), Assign([Name('i', Store(), lineno=191, col_offset=8)], Subscript(Subscript(Name('stats', Load(), lineno=191, col_offset=12), Index(Num(0, lineno=191, col_offset=18)), Load(), lineno=191, col_offset=12), Index(Num(0, lineno=191, col_offset=21)), Load(), lineno=191, col_offset=12), lineno=191, col_offset=8), Expr(Call(Attribute(Name('after', Load(), lineno=192, col_offset=8), 'extend', Load(), lineno=192, col_offset=8), [Subscript(Name('lines', Load(), lineno=192, col_offset=21), Slice(Num(1, lineno=192, col_offset=27), Name('i', Load(), lineno=192, col_offset=29), None), Load(), lineno=192, col_offset=21)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), For(Name('i', Store(), lineno=193, col_offset=12), Call(Name('range', Load(), lineno=193, col_offset=17), [BinOp(Call(Name('len', Load(), lineno=193, col_offset=23), [Name('stats', Load(), lineno=193, col_offset=27)], [], None, None, lineno=193, col_offset=23), Sub(), Num(1, lineno=193, col_offset=34), lineno=193, col_offset=23)], [], None, None, lineno=193, col_offset=17), [Assign([Tuple([Name('thisstmt', Store(), lineno=194, col_offset=12), Name('thislevel', Store(), lineno=194, col_offset=22)], Store(), lineno=194, col_offset=12)], Subscript(Name('stats', Load(), lineno=194, col_offset=34), Index(Name('i', Load(), lineno=194, col_offset=40)), Load(), lineno=194, col_offset=34), lineno=194, col_offset=12), Assign([Name('nextstmt', Store(), lineno=195, col_offset=12)], Subscript(Subscript(Name('stats', Load(), lineno=195, col_offset=23), Index(BinOp(Name('i', Load(), lineno=195, col_offset=29), Add(), Num(1, lineno=195, col_offset=31), lineno=195, col_offset=29)), Load(), lineno=195, col_offset=23), Index(Num(0, lineno=195, col_offset=34)), Load(), lineno=195, col_offset=23), lineno=195, col_offset=12), Assign([Name('have', Store(), lineno=196, col_offset=12)], Call(Name('getlspace', Load(), lineno=196, col_offset=19), [Subscript(Name('lines', Load(), lineno=196, col_offset=29), Index(Name('thisstmt', Load(), lineno=196, col_offset=35)), Load(), lineno=196, col_offset=29)], [], None, None, lineno=196, col_offset=19), lineno=196, col_offset=12), Assign([Name('want', Store(), lineno=197, col_offset=12)], BinOp(Name('thislevel', Load(), lineno=197, col_offset=19), Mult(), Num(4, lineno=197, col_offset=31), lineno=197, col_offset=19), lineno=197, col_offset=12), If(Compare(Name('want', Load(), lineno=198, col_offset=15), [Lt()], [Num(0, lineno=198, col_offset=22)], lineno=198, col_offset=15), [If(Name('have', Load(), lineno=200, col_offset=19), [Assign([Name('want', Store(), lineno=204, col_offset=20)], Call(Attribute(Name('have2want', Load(), lineno=204, col_offset=27), 'get', Load(), lineno=204, col_offset=27), [Name('have', Load(), lineno=204, col_offset=41), Num(-1, lineno=204, col_offset=48)], [], None, None, lineno=204, col_offset=27), lineno=204, col_offset=20), If(Compare(Name('want', Load(), lineno=205, col_offset=23), [Lt()], [Num(0, lineno=205, col_offset=30)], lineno=205, col_offset=23), [For(Name('j', Store(), lineno=207, col_offset=28), Call(Name('xrange', Load(), lineno=207, col_offset=33), [BinOp(Name('i', Load(), lineno=207, col_offset=40), Add(), Num(1, lineno=207, col_offset=42), lineno=207, col_offset=40), BinOp(Call(Name('len', Load(), lineno=207, col_offset=45), [Name('stats', Load(), lineno=207, col_offset=49)], [], None, None, lineno=207, col_offset=45), Sub(), Num(1, lineno=207, col_offset=56), lineno=207, col_offset=45)], [], None, None, lineno=207, col_offset=33), [Assign([Tuple([Name('jline', Store(), lineno=208, col_offset=28), Name('jlevel', Store(), lineno=208, col_offset=35)], Store(), lineno=208, col_offset=28)], Subscript(Name('stats', Load(), lineno=208, col_offset=44), Index(Name('j', Load(), lineno=208, col_offset=50)), Load(), lineno=208, col_offset=44), lineno=208, col_offset=28), If(Compare(Name('jlevel', Load(), lineno=209, col_offset=31), [GtE()], [Num(0, lineno=209, col_offset=41)], lineno=209, col_offset=31), [If(Compare(Name('have', Load(), lineno=210, col_offset=35), [Eq()], [Call(Name('getlspace', Load(), lineno=210, col_offset=43), [Subscript(Name('lines', Load(), lineno=210, col_offset=53), Index(Name('jline', Load(), lineno=210, col_offset=59)), Load(), lineno=210, col_offset=53)], [], None, None, lineno=210, col_offset=43)], lineno=210, col_offset=35), [Assign([Name('want', Store(), lineno=211, col_offset=36)], BinOp(Name('jlevel', Load(), lineno=211, col_offset=43), Mult(), Num(4, lineno=211, col_offset=52), lineno=211, col_offset=43), lineno=211, col_offset=36)], [], lineno=210, col_offset=32), Break( lineno=212, col_offset=32)], [], lineno=209, col_offset=28)], [], lineno=207, col_offset=24)], [], lineno=205, col_offset=20), If(Compare(Name('want', Load(), lineno=213, col_offset=23), [Lt()], [Num(0, lineno=213, col_offset=30)], lineno=213, col_offset=23), [For(Name('j', Store(), lineno=217, col_offset=28), Call(Name('xrange', Load(), lineno=217, col_offset=33), [BinOp(Name('i', Load(), lineno=217, col_offset=40), Sub(), Num(1, lineno=217, col_offset=42), lineno=217, col_offset=40), Num(-1, lineno=217, col_offset=46), Num(-1, lineno=217, col_offset=50)], [], None, None, lineno=217, col_offset=33), [Assign([Tuple([Name('jline', Store(), lineno=218, col_offset=28), Name('jlevel', Store(), lineno=218, col_offset=35)], Store(), lineno=218, col_offset=28)], Subscript(Name('stats', Load(), lineno=218, col_offset=44), Index(Name('j', Load(), lineno=218, col_offset=50)), Load(), lineno=218, col_offset=44), lineno=218, col_offset=28), If(Compare(Name('jlevel', Load(), lineno=219, col_offset=31), [GtE()], [Num(0, lineno=219, col_offset=41)], lineno=219, col_offset=31), [Assign([Name('want', Store(), lineno=220, col_offset=32)], BinOp(BinOp(Name('have', Load(), lineno=220, col_offset=39), Add(), Call(Name('getlspace', Load(), lineno=220, col_offset=46), [Subscript(Name('after', Load(), lineno=220, col_offset=56), Index(BinOp(Name('jline', Load(), lineno=220, col_offset=62), Sub(), Num(1, lineno=220, col_offset=68), lineno=220, col_offset=62)), Load(), lineno=220, col_offset=56)], [], None, None, lineno=220, col_offset=46), lineno=220, col_offset=39), Sub(), Call(Name('getlspace', Load(), lineno=221, col_offset=39), [Subscript(Name('lines', Load(), lineno=221, col_offset=49), Index(Name('jline', Load(), lineno=221, col_offset=55)), Load(), lineno=221, col_offset=49)], [], None, None, lineno=221, col_offset=39), lineno=220, col_offset=72), lineno=220, col_offset=32), Break( lineno=222, col_offset=32)], [], lineno=219, col_offset=28)], [], lineno=217, col_offset=24)], [], lineno=213, col_offset=20), If(Compare(Name('want', Load(), lineno=223, col_offset=23), [Lt()], [Num(0, lineno=223, col_offset=30)], lineno=223, col_offset=23), [Assign([Name('want', Store(), lineno=225, col_offset=24)], Name('have', Load(), lineno=225, col_offset=31), lineno=225, col_offset=24)], [], lineno=223, col_offset=20)], [Assign([Name('want', Store(), lineno=227, col_offset=20)], Num(0, lineno=227, col_offset=27), lineno=227, col_offset=20)], lineno=200, col_offset=16)], [], lineno=198, col_offset=12), Assert(Compare(Name('want', Load(), lineno=228, col_offset=19), [GtE()], [Num(0, lineno=228, col_offset=27)], lineno=228, col_offset=19), None, lineno=228, col_offset=12), Assign([Subscript(Name('have2want', Load(), lineno=229, col_offset=12), Index(Name('have', Load(), lineno=229, col_offset=22)), Store(), lineno=229, col_offset=12)], Name('want', Load(), lineno=229, col_offset=30), lineno=229, col_offset=12), Assign([Name('diff', Store(), lineno=230, col_offset=12)], BinOp(Name('want', Load(), lineno=230, col_offset=19), Sub(), Name('have', Load(), lineno=230, col_offset=26), lineno=230, col_offset=19), lineno=230, col_offset=12), If(BoolOp(Or(), [Compare(Name('diff', Load(), lineno=231, col_offset=15), [Eq()], [Num(0, lineno=231, col_offset=23)], lineno=231, col_offset=15), Compare(Name('have', Load(), lineno=231, col_offset=28), [Eq()], [Num(0, lineno=231, col_offset=36)], lineno=231, col_offset=28)], lineno=231, col_offset=15), [Expr(Call(Attribute(Name('after', Load(), lineno=232, col_offset=16), 'extend', Load(), lineno=232, col_offset=16), [Subscript(Name('lines', Load(), lineno=232, col_offset=29), Slice(Name('thisstmt', Load(), lineno=232, col_offset=35), Name('nextstmt', Load(), lineno=232, col_offset=44), None), Load(), lineno=232, col_offset=29)], [], None, None, lineno=232, col_offset=16), lineno=232, col_offset=16)], [For(Name('line', Store(), lineno=234, col_offset=20), Subscript(Name('lines', Load(), lineno=234, col_offset=28), Slice(Name('thisstmt', Load(), lineno=234, col_offset=34), Name('nextstmt', Load(), lineno=234, col_offset=43), None), Load(), lineno=234, col_offset=28), [If(Compare(Name('diff', Load(), lineno=235, col_offset=23), [Gt()], [Num(0, lineno=235, col_offset=30)], lineno=235, col_offset=23), [If(Compare(Name('line', Load(), lineno=236, col_offset=27), [Eq()], [Str('\n', lineno=236, col_offset=35)], lineno=236, col_offset=27), [Expr(Call(Attribute(Name('after', Load(), lineno=237, col_offset=28), 'append', Load(), lineno=237, col_offset=28), [Name('line', Load(), lineno=237, col_offset=41)], [], None, None, lineno=237, col_offset=28), lineno=237, col_offset=28)], [Expr(Call(Attribute(Name('after', Load(), lineno=239, col_offset=28), 'append', Load(), lineno=239, col_offset=28), [BinOp(BinOp(Str(' ', lineno=239, col_offset=41), Mult(), Name('diff', Load(), lineno=239, col_offset=47), lineno=239, col_offset=41), Add(), Name('line', Load(), lineno=239, col_offset=54), lineno=239, col_offset=41)], [], None, None, lineno=239, col_offset=28), lineno=239, col_offset=28)], lineno=236, col_offset=24)], [Assign([Name('remove', Store(), lineno=241, col_offset=24)], Call(Name('min', Load(), lineno=241, col_offset=33), [Call(Name('getlspace', Load(), lineno=241, col_offset=37), [Name('line', Load(), lineno=241, col_offset=47)], [], None, None, lineno=241, col_offset=37), UnaryOp(USub(), Name('diff', Load(), lineno=241, col_offset=55), lineno=241, col_offset=54)], [], None, None, lineno=241, col_offset=33), lineno=241, col_offset=24), Expr(Call(Attribute(Name('after', Load(), lineno=242, col_offset=24), 'append', Load(), lineno=242, col_offset=24), [Subscript(Name('line', Load(), lineno=242, col_offset=37), Slice(Name('remove', Load(), lineno=242, col_offset=42), None, None), Load(), lineno=242, col_offset=37)], [], None, None, lineno=242, col_offset=24), lineno=242, col_offset=24)], lineno=235, col_offset=20)], [], lineno=234, col_offset=16)], lineno=231, col_offset=12)], [], lineno=193, col_offset=8), Return(Compare(Attribute(Name('self', Load(), lineno=243, col_offset=15), 'raw', Load(), lineno=243, col_offset=15), [NotEq()], [Attribute(Name('self', Load(), lineno=243, col_offset=27), 'after', Load(), lineno=243, col_offset=27)], lineno=243, col_offset=15), lineno=243, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=245, col_offset=14), Name('f', Param(), lineno=245, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('f', Load(), lineno=246, col_offset=8), 'writelines', Load(), lineno=246, col_offset=8), [Attribute(Name('self', Load(), lineno=246, col_offset=21), 'after', Load(), lineno=246, col_offset=21)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8)], [], lineno=245, col_offset=4), FunctionDef('getline', arguments([Name('self', Param(), lineno=249, col_offset=16)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=250, col_offset=11), 'index', Load(), lineno=250, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=250, col_offset=25), [Attribute(Name('self', Load(), lineno=250, col_offset=29), 'lines', Load(), lineno=250, col_offset=29)], [], None, None, lineno=250, col_offset=25)], lineno=250, col_offset=11), [Assign([Name('line', Store(), lineno=251, col_offset=12)], Str('', lineno=251, col_offset=19), lineno=251, col_offset=12)], [Assign([Name('line', Store(), lineno=253, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=253, col_offset=19), 'lines', Load(), lineno=253, col_offset=19), Index(Attribute(Name('self', Load(), lineno=253, col_offset=30), 'index', Load(), lineno=253, col_offset=30)), Load(), lineno=253, col_offset=19), lineno=253, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=254, col_offset=12), 'index', Store(), lineno=254, col_offset=12), Add(), Num(1, lineno=254, col_offset=26), lineno=254, col_offset=12)], lineno=250, col_offset=8), Return(Name('line', Load(), lineno=255, col_offset=15), lineno=255, col_offset=8)], [], lineno=249, col_offset=4), FunctionDef('tokeneater', arguments([Name('self', Param(), lineno=258, col_offset=19), Name('type', Param(), lineno=258, col_offset=25), Name('token', Param(), lineno=258, col_offset=31), Tuple([Name('sline', Store(), lineno=258, col_offset=39), Name('scol', Store(), lineno=258, col_offset=46)], Store(), lineno=258, col_offset=39), Name('end', Param(), lineno=258, col_offset=53), Name('line', Param(), lineno=258, col_offset=58), Name('INDENT', Param(), lineno=259, col_offset=19), Name('DEDENT', Param(), lineno=260, col_offset=19), Name('NEWLINE', Param(), lineno=261, col_offset=19), Name('COMMENT', Param(), lineno=262, col_offset=19), Name('NL', Param(), lineno=263, col_offset=19)], None, None, [Attribute(Name('tokenize', Load(), lineno=259, col_offset=26), 'INDENT', Load(), lineno=259, col_offset=26), Attribute(Name('tokenize', Load(), lineno=260, col_offset=26), 'DEDENT', Load(), lineno=260, col_offset=26), Attribute(Name('tokenize', Load(), lineno=261, col_offset=27), 'NEWLINE', Load(), lineno=261, col_offset=27), Attribute(Name('tokenize', Load(), lineno=262, col_offset=27), 'COMMENT', Load(), lineno=262, col_offset=27), Attribute(Name('tokenize', Load(), lineno=263, col_offset=22), 'NL', Load(), lineno=263, col_offset=22)]), [If(Compare(Name('type', Load(), lineno=265, col_offset=11), [Eq()], [Name('NEWLINE', Load(), lineno=265, col_offset=19)], lineno=265, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=269, col_offset=12), 'find_stmt', Store(), lineno=269, col_offset=12)], Num(1, lineno=269, col_offset=29), lineno=269, col_offset=12)], [If(Compare(Name('type', Load(), lineno=271, col_offset=13), [Eq()], [Name('INDENT', Load(), lineno=271, col_offset=21)], lineno=271, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=272, col_offset=12), 'find_stmt', Store(), lineno=272, col_offset=12)], Num(1, lineno=272, col_offset=29), lineno=272, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=273, col_offset=12), 'level', Store(), lineno=273, col_offset=12), Add(), Num(1, lineno=273, col_offset=26), lineno=273, col_offset=12)], [If(Compare(Name('type', Load(), lineno=275, col_offset=13), [Eq()], [Name('DEDENT', Load(), lineno=275, col_offset=21)], lineno=275, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=276, col_offset=12), 'find_stmt', Store(), lineno=276, col_offset=12)], Num(1, lineno=276, col_offset=29), lineno=276, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=277, col_offset=12), 'level', Store(), lineno=277, col_offset=12), Sub(), Num(1, lineno=277, col_offset=26), lineno=277, col_offset=12)], [If(Compare(Name('type', Load(), lineno=279, col_offset=13), [Eq()], [Name('COMMENT', Load(), lineno=279, col_offset=21)], lineno=279, col_offset=13), [If(Attribute(Name('self', Load(), lineno=280, col_offset=15), 'find_stmt', Load(), lineno=280, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=281, col_offset=16), 'stats', Load(), lineno=281, col_offset=16), 'append', Load(), lineno=281, col_offset=16), [Tuple([Name('sline', Load(), lineno=281, col_offset=35), Num(-1, lineno=281, col_offset=43)], Load(), lineno=281, col_offset=35)], [], None, None, lineno=281, col_offset=16), lineno=281, col_offset=16)], [], lineno=280, col_offset=12)], [If(Compare(Name('type', Load(), lineno=285, col_offset=13), [Eq()], [Name('NL', Load(), lineno=285, col_offset=21)], lineno=285, col_offset=13), [Pass( lineno=286, col_offset=12)], [If(Attribute(Name('self', Load(), lineno=288, col_offset=13), 'find_stmt', Load(), lineno=288, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=292, col_offset=12), 'find_stmt', Store(), lineno=292, col_offset=12)], Num(0, lineno=292, col_offset=29), lineno=292, col_offset=12), If(Name('line', Load(), lineno=293, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=294, col_offset=16), 'stats', Load(), lineno=294, col_offset=16), 'append', Load(), lineno=294, col_offset=16), [Tuple([Name('sline', Load(), lineno=294, col_offset=35), Attribute(Name('self', Load(), lineno=294, col_offset=42), 'level', Load(), lineno=294, col_offset=42)], Load(), lineno=294, col_offset=35)], [], None, None, lineno=294, col_offset=16), lineno=294, col_offset=16)], [], lineno=293, col_offset=12)], [], lineno=288, col_offset=13)], lineno=285, col_offset=13)], lineno=279, col_offset=13)], lineno=275, col_offset=13)], lineno=271, col_offset=13)], lineno=265, col_offset=8)], [], lineno=258, col_offset=4)], [], lineno=153, col_offset=0), FunctionDef('getlspace', arguments([Name('line', Param(), lineno=297, col_offset=14)], None, None, []), [Assign([Tuple([Name('i', Store(), lineno=298, col_offset=4), Name('n', Store(), lineno=298, col_offset=7)], Store(), lineno=298, col_offset=4)], Tuple([Num(0, lineno=298, col_offset=11), Call(Name('len', Load(), lineno=298, col_offset=14), [Name('line', Load(), lineno=298, col_offset=18)], [], None, None, lineno=298, col_offset=14)], Load(), lineno=298, col_offset=11), lineno=298, col_offset=4), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=299, col_offset=10), [Lt()], [Name('n', Load(), lineno=299, col_offset=14)], lineno=299, col_offset=10), Compare(Subscript(Name('line', Load(), lineno=299, col_offset=20), Index(Name('i', Load(), lineno=299, col_offset=25)), Load(), lineno=299, col_offset=20), [Eq()], [Str(' ', lineno=299, col_offset=31)], lineno=299, col_offset=20)], lineno=299, col_offset=10), [AugAssign(Name('i', Store(), lineno=300, col_offset=8), Add(), Num(1, lineno=300, col_offset=13), lineno=300, col_offset=8)], [], lineno=299, col_offset=4), Return(Name('i', Load(), lineno=301, col_offset=11), lineno=301, col_offset=4)], [], lineno=297, col_offset=0), If(Compare(Name('__name__', Load(), lineno=303, col_offset=3), [Eq()], [Str('__main__', lineno=303, col_offset=15)], lineno=303, col_offset=3), [Expr(Call(Name('main', Load(), lineno=304, col_offset=4), [], [], None, None, lineno=304, col_offset=4), lineno=304, col_offset=4)], [], lineno=303, col_offset=0)])
