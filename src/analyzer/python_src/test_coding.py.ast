Module([Import([alias('test.test_support', None), alias('unittest', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), ClassDef('CodingTest', [Attribute(Name('unittest', Load(), lineno=5, col_offset=17), 'TestCase', Load(), lineno=5, col_offset=17)], [FunctionDef('test_bad_coding', arguments([Name('self', Param(), lineno=6, col_offset=24)], None, None, []), [Assign([Name('module_name', Store(), lineno=7, col_offset=8)], Str('bad_coding', lineno=7, col_offset=22), lineno=7, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=8, col_offset=8), 'verify_bad_module', Load(), lineno=8, col_offset=8), [Name('module_name', Load(), lineno=8, col_offset=31)], [], None, None, lineno=8, col_offset=8), lineno=8, col_offset=8)], [], lineno=6, col_offset=4), FunctionDef('test_bad_coding2', arguments([Name('self', Param(), lineno=10, col_offset=25)], None, None, []), [Assign([Name('module_name', Store(), lineno=11, col_offset=8)], Str('bad_coding2', lineno=11, col_offset=22), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'verify_bad_module', Load(), lineno=12, col_offset=8), [Name('module_name', Load(), lineno=12, col_offset=31)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('verify_bad_module', arguments([Name('self', Param(), lineno=14, col_offset=26), Name('module_name', Param(), lineno=14, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=8), 'assertRaises', Load(), lineno=15, col_offset=8), [Name('SyntaxError', Load(), lineno=15, col_offset=26), Name('__import__', Load(), lineno=15, col_offset=39), BinOp(Str('test.', lineno=15, col_offset=51), Add(), Name('module_name', Load(), lineno=15, col_offset=61), lineno=15, col_offset=51)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Assign([Name('path', Store(), lineno=17, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=17, col_offset=15), 'path', Load(), lineno=17, col_offset=15), 'dirname', Load(), lineno=17, col_offset=15), [Name('__file__', Load(), lineno=17, col_offset=31)], [], None, None, lineno=17, col_offset=15), lineno=17, col_offset=8), Assign([Name('filename', Store(), lineno=18, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=18, col_offset=19), 'path', Load(), lineno=18, col_offset=19), 'join', Load(), lineno=18, col_offset=19), [Name('path', Load(), lineno=18, col_offset=32), BinOp(Name('module_name', Load(), lineno=18, col_offset=38), Add(), Str('.py', lineno=18, col_offset=52), lineno=18, col_offset=38)], [], None, None, lineno=18, col_offset=19), lineno=18, col_offset=8), With(Call(Name('open', Load(), lineno=19, col_offset=13), [Name('filename', Load(), lineno=19, col_offset=18)], [], None, None, lineno=19, col_offset=13), Name('fp', Store(), lineno=19, col_offset=31), [Assign([Name('text', Store(), lineno=20, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=20, col_offset=19), 'read', Load(), lineno=20, col_offset=19), [], [], None, None, lineno=20, col_offset=19), lineno=20, col_offset=12)], lineno=19, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertRaises', Load(), lineno=21, col_offset=8), [Name('SyntaxError', Load(), lineno=21, col_offset=26), Name('compile', Load(), lineno=21, col_offset=39), Name('text', Load(), lineno=21, col_offset=48), Name('filename', Load(), lineno=21, col_offset=54), Str('exec', lineno=21, col_offset=64)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=14, col_offset=4), FunctionDef('test_error_from_string', arguments([Name('self', Param(), lineno=23, col_offset=31)], None, None, []), [Assign([Name('input', Store(), lineno=25, col_offset=8)], Call(Attribute(Str(u'# coding: ascii\n\u2603', lineno=25, col_offset=16), 'encode', Load(), lineno=25, col_offset=16), [Str('utf-8', lineno=25, col_offset=55)], [], None, None, lineno=25, col_offset=16), lineno=25, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=26, col_offset=13), 'assertRaises', Load(), lineno=26, col_offset=13), [Name('SyntaxError', Load(), lineno=26, col_offset=31)], [], None, None, lineno=26, col_offset=13), Name('c', Store(), lineno=26, col_offset=47), [Expr(Call(Name('compile', Load(), lineno=27, col_offset=12), [Name('input', Load(), lineno=27, col_offset=20), Str('<string>', lineno=27, col_offset=27), Str('exec', lineno=27, col_offset=39)], [], None, None, lineno=27, col_offset=12), lineno=27, col_offset=12)], lineno=26, col_offset=13), Assign([Name('expected', Store(), lineno=28, col_offset=8)], Str("'ascii' codec can't decode byte 0xe2 in position 16: ordinal not in range(128)", lineno=28, col_offset=19), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertTrue', Load(), lineno=30, col_offset=8), [Call(Attribute(Subscript(Attribute(Attribute(Name('c', Load(), lineno=30, col_offset=24), 'exception', Load(), lineno=30, col_offset=24), 'args', Load(), lineno=30, col_offset=24), Index(Num(0, lineno=30, col_offset=41)), Load(), lineno=30, col_offset=24), 'startswith', Load(), lineno=30, col_offset=24), [Name('expected', Load(), lineno=30, col_offset=55)], [], None, None, lineno=30, col_offset=24)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=5, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=34, col_offset=4), 'test_support', Load(), lineno=34, col_offset=4), 'run_unittest', Load(), lineno=34, col_offset=4), [Name('CodingTest', Load(), lineno=34, col_offset=35)], [], None, None, lineno=34, col_offset=4), lineno=34, col_offset=4)], [], lineno=33, col_offset=0), If(Compare(Name('__name__', Load(), lineno=36, col_offset=3), [Eq()], [Str('__main__', lineno=36, col_offset=15)], lineno=36, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=37, col_offset=4), [], [], None, None, lineno=37, col_offset=4), lineno=37, col_offset=4)], [], lineno=36, col_offset=0)])
