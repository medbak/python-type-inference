Module([Expr(Str(' Generic Python Character Mapping Codec.\n\n    Use this codec directly rather than through the automatic\n    conversion mechanisms supplied by unicode() and .encode().\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n', lineno=11, col_offset=-1), lineno=11, col_offset=-1), Import([alias('codecs', None)], lineno=13, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=17, col_offset=12), 'Codec', Load(), lineno=17, col_offset=12)], [Assign([Name('encode', Store(), lineno=21, col_offset=4)], Attribute(Name('codecs', Load(), lineno=21, col_offset=13), 'charmap_encode', Load(), lineno=21, col_offset=13), lineno=21, col_offset=4), Assign([Name('decode', Store(), lineno=22, col_offset=4)], Attribute(Name('codecs', Load(), lineno=22, col_offset=13), 'charmap_decode', Load(), lineno=22, col_offset=13), lineno=22, col_offset=4)], [], lineno=17, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=24, col_offset=25), 'IncrementalEncoder', Load(), lineno=24, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=25, col_offset=17), Name('errors', Param(), lineno=25, col_offset=23), Name('mapping', Param(), lineno=25, col_offset=40)], None, None, [Str('strict', lineno=25, col_offset=30), Name('None', Load(), lineno=25, col_offset=48)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=26, col_offset=8), 'IncrementalEncoder', Load(), lineno=26, col_offset=8), '__init__', Load(), lineno=26, col_offset=8), [Name('self', Load(), lineno=26, col_offset=43), Name('errors', Load(), lineno=26, col_offset=49)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'mapping', Store(), lineno=27, col_offset=8)], Name('mapping', Load(), lineno=27, col_offset=23), lineno=27, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=29, col_offset=15), Name('input', Param(), lineno=29, col_offset=21), Name('final', Param(), lineno=29, col_offset=28)], None, None, [Name('False', Load(), lineno=29, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=30, col_offset=15), 'charmap_encode', Load(), lineno=30, col_offset=15), [Name('input', Load(), lineno=30, col_offset=37), Attribute(Name('self', Load(), lineno=30, col_offset=44), 'errors', Load(), lineno=30, col_offset=44), Attribute(Name('self', Load(), lineno=30, col_offset=57), 'mapping', Load(), lineno=30, col_offset=57)], [], None, None, lineno=30, col_offset=15), Index(Num(0, lineno=30, col_offset=71)), Load(), lineno=30, col_offset=15), lineno=30, col_offset=8)], [], lineno=29, col_offset=4)], [], lineno=24, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=32, col_offset=25), 'IncrementalDecoder', Load(), lineno=32, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=33, col_offset=17), Name('errors', Param(), lineno=33, col_offset=23), Name('mapping', Param(), lineno=33, col_offset=40)], None, None, [Str('strict', lineno=33, col_offset=30), Name('None', Load(), lineno=33, col_offset=48)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=34, col_offset=8), 'IncrementalDecoder', Load(), lineno=34, col_offset=8), '__init__', Load(), lineno=34, col_offset=8), [Name('self', Load(), lineno=34, col_offset=43), Name('errors', Load(), lineno=34, col_offset=49)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'mapping', Store(), lineno=35, col_offset=8)], Name('mapping', Load(), lineno=35, col_offset=23), lineno=35, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=37, col_offset=15), Name('input', Param(), lineno=37, col_offset=21), Name('final', Param(), lineno=37, col_offset=28)], None, None, [Name('False', Load(), lineno=37, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=38, col_offset=15), 'charmap_decode', Load(), lineno=38, col_offset=15), [Name('input', Load(), lineno=38, col_offset=37), Attribute(Name('self', Load(), lineno=38, col_offset=44), 'errors', Load(), lineno=38, col_offset=44), Attribute(Name('self', Load(), lineno=38, col_offset=57), 'mapping', Load(), lineno=38, col_offset=57)], [], None, None, lineno=38, col_offset=15), Index(Num(0, lineno=38, col_offset=71)), Load(), lineno=38, col_offset=15), lineno=38, col_offset=8)], [], lineno=37, col_offset=4)], [], lineno=32, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=40, col_offset=19), Attribute(Name('codecs', Load(), lineno=40, col_offset=25), 'StreamWriter', Load(), lineno=40, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=42, col_offset=17), Name('stream', Param(), lineno=42, col_offset=22), Name('errors', Param(), lineno=42, col_offset=29), Name('mapping', Param(), lineno=42, col_offset=45)], None, None, [Str('strict', lineno=42, col_offset=36), Name('None', Load(), lineno=42, col_offset=53)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=43, col_offset=8), 'StreamWriter', Load(), lineno=43, col_offset=8), '__init__', Load(), lineno=43, col_offset=8), [Name('self', Load(), lineno=43, col_offset=37), Name('stream', Load(), lineno=43, col_offset=42), Name('errors', Load(), lineno=43, col_offset=49)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'mapping', Store(), lineno=44, col_offset=8)], Name('mapping', Load(), lineno=44, col_offset=23), lineno=44, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=46, col_offset=15), Name('input', Param(), lineno=46, col_offset=20), Name('errors', Param(), lineno=46, col_offset=26)], None, None, [Str('strict', lineno=46, col_offset=33)]), [Return(Call(Attribute(Name('Codec', Load(), lineno=47, col_offset=15), 'encode', Load(), lineno=47, col_offset=15), [Name('input', Load(), lineno=47, col_offset=28), Name('errors', Load(), lineno=47, col_offset=34), Attribute(Name('self', Load(), lineno=47, col_offset=41), 'mapping', Load(), lineno=47, col_offset=41)], [], None, None, lineno=47, col_offset=15), lineno=47, col_offset=8)], [], lineno=46, col_offset=4)], [], lineno=40, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=49, col_offset=19), Attribute(Name('codecs', Load(), lineno=49, col_offset=25), 'StreamReader', Load(), lineno=49, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=51, col_offset=17), Name('stream', Param(), lineno=51, col_offset=22), Name('errors', Param(), lineno=51, col_offset=29), Name('mapping', Param(), lineno=51, col_offset=45)], None, None, [Str('strict', lineno=51, col_offset=36), Name('None', Load(), lineno=51, col_offset=53)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=52, col_offset=8), 'StreamReader', Load(), lineno=52, col_offset=8), '__init__', Load(), lineno=52, col_offset=8), [Name('self', Load(), lineno=52, col_offset=37), Name('stream', Load(), lineno=52, col_offset=42), Name('errors', Load(), lineno=52, col_offset=49)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=53, col_offset=8), 'mapping', Store(), lineno=53, col_offset=8)], Name('mapping', Load(), lineno=53, col_offset=23), lineno=53, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=55, col_offset=15), Name('input', Param(), lineno=55, col_offset=20), Name('errors', Param(), lineno=55, col_offset=26)], None, None, [Str('strict', lineno=55, col_offset=33)]), [Return(Call(Attribute(Name('Codec', Load(), lineno=56, col_offset=15), 'decode', Load(), lineno=56, col_offset=15), [Name('input', Load(), lineno=56, col_offset=28), Name('errors', Load(), lineno=56, col_offset=34), Attribute(Name('self', Load(), lineno=56, col_offset=41), 'mapping', Load(), lineno=56, col_offset=41)], [], None, None, lineno=56, col_offset=15), lineno=56, col_offset=8)], [], lineno=55, col_offset=4)], [], lineno=49, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=61, col_offset=11), 'CodecInfo', Load(), lineno=61, col_offset=11), [], [keyword('name', Str('charmap', lineno=62, col_offset=13)), keyword('encode', Attribute(Name('Codec', Load(), lineno=63, col_offset=15), 'encode', Load(), lineno=63, col_offset=15)), keyword('decode', Attribute(Name('Codec', Load(), lineno=64, col_offset=15), 'decode', Load(), lineno=64, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=65, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=66, col_offset=27)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=67, col_offset=21)), keyword('streamreader', Name('StreamReader', Load(), lineno=68, col_offset=21))], None, None, lineno=61, col_offset=11), lineno=61, col_offset=4)], [], lineno=60, col_offset=0)])
