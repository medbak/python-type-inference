Module([Assign([Name('__all__', Store(), lineno=9, col_offset=0)], List([Str('Pool', lineno=9, col_offset=11)], Load(), lineno=9, col_offset=10), lineno=9, col_offset=0), Import([alias('threading', None)], lineno=15, col_offset=0), Import([alias('Queue', None)], lineno=16, col_offset=0), Import([alias('itertools', None)], lineno=17, col_offset=0), Import([alias('collections', None)], lineno=18, col_offset=0), Import([alias('time', None)], lineno=19, col_offset=0), ImportFrom('multiprocessing', [alias('Process', None), alias('cpu_count', None), alias('TimeoutError', None)], 0, lineno=21, col_offset=0), ImportFrom('multiprocessing.util', [alias('Finalize', None), alias('debug', None)], 0, lineno=22, col_offset=0), Assign([Name('RUN', Store(), lineno=28, col_offset=0)], Num(0, lineno=28, col_offset=6), lineno=28, col_offset=0), Assign([Name('CLOSE', Store(), lineno=29, col_offset=0)], Num(1, lineno=29, col_offset=8), lineno=29, col_offset=0), Assign([Name('TERMINATE', Store(), lineno=30, col_offset=0)], Num(2, lineno=30, col_offset=12), lineno=30, col_offset=0), Assign([Name('job_counter', Store(), lineno=36, col_offset=0)], Call(Attribute(Name('itertools', Load(), lineno=36, col_offset=14), 'count', Load(), lineno=36, col_offset=14), [], [], None, None, lineno=36, col_offset=14), lineno=36, col_offset=0), FunctionDef('mapstar', arguments([Name('args', Param(), lineno=38, col_offset=12)], None, None, []), [Return(Call(Name('map', Load(), lineno=39, col_offset=11), [], [], Name('args', Load(), lineno=39, col_offset=16), None, lineno=39, col_offset=11), lineno=39, col_offset=4)], [], lineno=38, col_offset=0), FunctionDef('worker', arguments([Name('inqueue', Param(), lineno=45, col_offset=11), Name('outqueue', Param(), lineno=45, col_offset=20), Name('initializer', Param(), lineno=45, col_offset=30), Name('initargs', Param(), lineno=45, col_offset=48), Name('maxtasks', Param(), lineno=45, col_offset=61)], None, None, [Name('None', Load(), lineno=45, col_offset=42), Tuple([], Load(), lineno=45, col_offset=57), Name('None', Load(), lineno=45, col_offset=70)]), [Assert(BoolOp(Or(), [Compare(Name('maxtasks', Load(), lineno=46, col_offset=11), [Is()], [Name('None', Load(), lineno=46, col_offset=23)], lineno=46, col_offset=11), BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=46, col_offset=32), [Name('maxtasks', Load(), lineno=46, col_offset=37)], [], None, None, lineno=46, col_offset=32), [Eq()], [Name('int', Load(), lineno=46, col_offset=50)], lineno=46, col_offset=32), Compare(Name('maxtasks', Load(), lineno=46, col_offset=58), [Gt()], [Num(0, lineno=46, col_offset=69)], lineno=46, col_offset=58)], lineno=46, col_offset=32)], lineno=46, col_offset=11), None, lineno=46, col_offset=4), Assign([Name('put', Store(), lineno=47, col_offset=4)], Attribute(Name('outqueue', Load(), lineno=47, col_offset=10), 'put', Load(), lineno=47, col_offset=10), lineno=47, col_offset=4), Assign([Name('get', Store(), lineno=48, col_offset=4)], Attribute(Name('inqueue', Load(), lineno=48, col_offset=10), 'get', Load(), lineno=48, col_offset=10), lineno=48, col_offset=4), If(Call(Name('hasattr', Load(), lineno=49, col_offset=7), [Name('inqueue', Load(), lineno=49, col_offset=15), Str('_writer', lineno=49, col_offset=24)], [], None, None, lineno=49, col_offset=7), [Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=50, col_offset=8), '_writer', Load(), lineno=50, col_offset=8), 'close', Load(), lineno=50, col_offset=8), [], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Attribute(Name('outqueue', Load(), lineno=51, col_offset=8), '_reader', Load(), lineno=51, col_offset=8), 'close', Load(), lineno=51, col_offset=8), [], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=49, col_offset=4), If(Compare(Name('initializer', Load(), lineno=53, col_offset=7), [IsNot()], [Name('None', Load(), lineno=53, col_offset=26)], lineno=53, col_offset=7), [Expr(Call(Name('initializer', Load(), lineno=54, col_offset=8), [], [], Name('initargs', Load(), lineno=54, col_offset=21), None, lineno=54, col_offset=8), lineno=54, col_offset=8)], [], lineno=53, col_offset=4), Assign([Name('completed', Store(), lineno=56, col_offset=4)], Num(0, lineno=56, col_offset=16), lineno=56, col_offset=4), While(BoolOp(Or(), [Compare(Name('maxtasks', Load(), lineno=57, col_offset=10), [Is()], [Name('None', Load(), lineno=57, col_offset=22)], lineno=57, col_offset=10), BoolOp(And(), [Name('maxtasks', Load(), lineno=57, col_offset=31), Compare(Name('completed', Load(), lineno=57, col_offset=44), [Lt()], [Name('maxtasks', Load(), lineno=57, col_offset=56)], lineno=57, col_offset=44)], lineno=57, col_offset=31)], lineno=57, col_offset=10), [TryExcept([Assign([Name('task', Store(), lineno=59, col_offset=12)], Call(Name('get', Load(), lineno=59, col_offset=19), [], [], None, None, lineno=59, col_offset=19), lineno=59, col_offset=12)], [ExceptHandler(Tuple([Name('EOFError', Load(), lineno=60, col_offset=16), Name('IOError', Load(), lineno=60, col_offset=26)], Load(), lineno=60, col_offset=16), None, [Expr(Call(Name('debug', Load(), lineno=61, col_offset=12), [Str('worker got EOFError or IOError -- exiting', lineno=61, col_offset=18)], [], None, None, lineno=61, col_offset=12), lineno=61, col_offset=12), Break( lineno=62, col_offset=12)], lineno=60, col_offset=8)], [], lineno=58, col_offset=8), If(Compare(Name('task', Load(), lineno=64, col_offset=11), [Is()], [Name('None', Load(), lineno=64, col_offset=19)], lineno=64, col_offset=11), [Expr(Call(Name('debug', Load(), lineno=65, col_offset=12), [Str('worker got sentinel -- exiting', lineno=65, col_offset=18)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12), Break( lineno=66, col_offset=12)], [], lineno=64, col_offset=8), Assign([Tuple([Name('job', Store(), lineno=68, col_offset=8), Name('i', Store(), lineno=68, col_offset=13), Name('func', Store(), lineno=68, col_offset=16), Name('args', Store(), lineno=68, col_offset=22), Name('kwds', Store(), lineno=68, col_offset=28)], Store(), lineno=68, col_offset=8)], Name('task', Load(), lineno=68, col_offset=35), lineno=68, col_offset=8), TryExcept([Assign([Name('result', Store(), lineno=70, col_offset=12)], Tuple([Name('True', Load(), lineno=70, col_offset=22), Call(Name('func', Load(), lineno=70, col_offset=28), [], [], Name('args', Load(), lineno=70, col_offset=34), Name('kwds', Load(), lineno=70, col_offset=42), lineno=70, col_offset=28)], Load(), lineno=70, col_offset=22), lineno=70, col_offset=12)], [ExceptHandler(Name('Exception', Load(), lineno=71, col_offset=15), Name('e', Store(), lineno=71, col_offset=26), [Assign([Name('result', Store(), lineno=72, col_offset=12)], Tuple([Name('False', Load(), lineno=72, col_offset=22), Name('e', Load(), lineno=72, col_offset=29)], Load(), lineno=72, col_offset=22), lineno=72, col_offset=12)], lineno=71, col_offset=8)], [], lineno=69, col_offset=8), Expr(Call(Name('put', Load(), lineno=73, col_offset=8), [Tuple([Name('job', Load(), lineno=73, col_offset=13), Name('i', Load(), lineno=73, col_offset=18), Name('result', Load(), lineno=73, col_offset=21)], Load(), lineno=73, col_offset=13)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), AugAssign(Name('completed', Store(), lineno=74, col_offset=8), Add(), Num(1, lineno=74, col_offset=21), lineno=74, col_offset=8)], [], lineno=57, col_offset=4), Expr(Call(Name('debug', Load(), lineno=75, col_offset=4), [BinOp(Str('worker exiting after %d tasks', lineno=75, col_offset=10), Mod(), Name('completed', Load(), lineno=75, col_offset=44), lineno=75, col_offset=10)], [], None, None, lineno=75, col_offset=4), lineno=75, col_offset=4)], [], lineno=45, col_offset=0), ClassDef('Pool', [Name('object', Load(), lineno=81, col_offset=11)], [Expr(Str('\n    Class which supports an async version of the `apply()` builtin\n    ', lineno=84, col_offset=-1), lineno=84, col_offset=-1), Assign([Name('Process', Store(), lineno=85, col_offset=4)], Name('Process', Load(), lineno=85, col_offset=14), lineno=85, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=87, col_offset=17), Name('processes', Param(), lineno=87, col_offset=23), Name('initializer', Param(), lineno=87, col_offset=39), Name('initargs', Param(), lineno=87, col_offset=57), Name('maxtasksperchild', Param(), lineno=88, col_offset=17)], None, None, [Name('None', Load(), lineno=87, col_offset=33), Name('None', Load(), lineno=87, col_offset=51), Tuple([], Load(), lineno=87, col_offset=66), Name('None', Load(), lineno=88, col_offset=34)]), [Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), '_setup_queues', Load(), lineno=89, col_offset=8), [], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), '_taskqueue', Store(), lineno=90, col_offset=8)], Call(Attribute(Name('Queue', Load(), lineno=90, col_offset=26), 'Queue', Load(), lineno=90, col_offset=26), [], [], None, None, lineno=90, col_offset=26), lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), '_cache', Store(), lineno=91, col_offset=8)], Dict([], [], lineno=91, col_offset=22), lineno=91, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=92, col_offset=8), '_state', Store(), lineno=92, col_offset=8)], Name('RUN', Load(), lineno=92, col_offset=22), lineno=92, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=93, col_offset=8), '_maxtasksperchild', Store(), lineno=93, col_offset=8)], Name('maxtasksperchild', Load(), lineno=93, col_offset=33), lineno=93, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=94, col_offset=8), '_initializer', Store(), lineno=94, col_offset=8)], Name('initializer', Load(), lineno=94, col_offset=28), lineno=94, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=95, col_offset=8), '_initargs', Store(), lineno=95, col_offset=8)], Name('initargs', Load(), lineno=95, col_offset=25), lineno=95, col_offset=8), If(Compare(Name('processes', Load(), lineno=97, col_offset=11), [Is()], [Name('None', Load(), lineno=97, col_offset=24)], lineno=97, col_offset=11), [TryExcept([Assign([Name('processes', Store(), lineno=99, col_offset=16)], Call(Name('cpu_count', Load(), lineno=99, col_offset=28), [], [], None, None, lineno=99, col_offset=28), lineno=99, col_offset=16)], [ExceptHandler(Name('NotImplementedError', Load(), lineno=100, col_offset=19), None, [Assign([Name('processes', Store(), lineno=101, col_offset=16)], Num(1, lineno=101, col_offset=28), lineno=101, col_offset=16)], lineno=100, col_offset=12)], [], lineno=98, col_offset=12)], [], lineno=97, col_offset=8), If(BoolOp(And(), [Compare(Name('initializer', Load(), lineno=103, col_offset=11), [IsNot()], [Name('None', Load(), lineno=103, col_offset=30)], lineno=103, col_offset=11), UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=103, col_offset=43), [Name('initializer', Load(), lineno=103, col_offset=51), Str('__call__', lineno=103, col_offset=64)], [], None, None, lineno=103, col_offset=43), lineno=103, col_offset=39)], lineno=103, col_offset=11), [Raise(Call(Name('TypeError', Load(), lineno=104, col_offset=18), [Str('initializer must be a callable', lineno=104, col_offset=28)], [], None, None, lineno=104, col_offset=18), None, None, lineno=104, col_offset=12)], [], lineno=103, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=106, col_offset=8), '_processes', Store(), lineno=106, col_offset=8)], Name('processes', Load(), lineno=106, col_offset=26), lineno=106, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=107, col_offset=8), '_pool', Store(), lineno=107, col_offset=8)], List([], Load(), lineno=107, col_offset=21), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), '_repopulate_pool', Load(), lineno=108, col_offset=8), [], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=110, col_offset=8), '_worker_handler', Store(), lineno=110, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=110, col_offset=31), 'Thread', Load(), lineno=110, col_offset=31), [], [keyword('target', Attribute(Name('Pool', Load(), lineno=111, col_offset=19), '_handle_workers', Load(), lineno=111, col_offset=19)), keyword('args', Tuple([Name('self', Load(), lineno=112, col_offset=18)], Load(), lineno=112, col_offset=18))], None, None, lineno=110, col_offset=31), lineno=110, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=114, col_offset=8), '_worker_handler', Load(), lineno=114, col_offset=8), 'daemon', Store(), lineno=114, col_offset=8)], Name('True', Load(), lineno=114, col_offset=38), lineno=114, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=115, col_offset=8), '_worker_handler', Load(), lineno=115, col_offset=8), '_state', Store(), lineno=115, col_offset=8)], Name('RUN', Load(), lineno=115, col_offset=38), lineno=115, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=8), '_worker_handler', Load(), lineno=116, col_offset=8), 'start', Load(), lineno=116, col_offset=8), [], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=119, col_offset=8), '_task_handler', Store(), lineno=119, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=119, col_offset=29), 'Thread', Load(), lineno=119, col_offset=29), [], [keyword('target', Attribute(Name('Pool', Load(), lineno=120, col_offset=19), '_handle_tasks', Load(), lineno=120, col_offset=19)), keyword('args', Tuple([Attribute(Name('self', Load(), lineno=121, col_offset=18), '_taskqueue', Load(), lineno=121, col_offset=18), Attribute(Name('self', Load(), lineno=121, col_offset=35), '_quick_put', Load(), lineno=121, col_offset=35), Attribute(Name('self', Load(), lineno=121, col_offset=52), '_outqueue', Load(), lineno=121, col_offset=52), Attribute(Name('self', Load(), lineno=121, col_offset=68), '_pool', Load(), lineno=121, col_offset=68)], Load(), lineno=121, col_offset=18))], None, None, lineno=119, col_offset=29), lineno=119, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=123, col_offset=8), '_task_handler', Load(), lineno=123, col_offset=8), 'daemon', Store(), lineno=123, col_offset=8)], Name('True', Load(), lineno=123, col_offset=36), lineno=123, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=124, col_offset=8), '_task_handler', Load(), lineno=124, col_offset=8), '_state', Store(), lineno=124, col_offset=8)], Name('RUN', Load(), lineno=124, col_offset=36), lineno=124, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=125, col_offset=8), '_task_handler', Load(), lineno=125, col_offset=8), 'start', Load(), lineno=125, col_offset=8), [], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=127, col_offset=8), '_result_handler', Store(), lineno=127, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=127, col_offset=31), 'Thread', Load(), lineno=127, col_offset=31), [], [keyword('target', Attribute(Name('Pool', Load(), lineno=128, col_offset=19), '_handle_results', Load(), lineno=128, col_offset=19)), keyword('args', Tuple([Attribute(Name('self', Load(), lineno=129, col_offset=18), '_outqueue', Load(), lineno=129, col_offset=18), Attribute(Name('self', Load(), lineno=129, col_offset=34), '_quick_get', Load(), lineno=129, col_offset=34), Attribute(Name('self', Load(), lineno=129, col_offset=51), '_cache', Load(), lineno=129, col_offset=51)], Load(), lineno=129, col_offset=18))], None, None, lineno=127, col_offset=31), lineno=127, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=131, col_offset=8), '_result_handler', Load(), lineno=131, col_offset=8), 'daemon', Store(), lineno=131, col_offset=8)], Name('True', Load(), lineno=131, col_offset=38), lineno=131, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=8), '_result_handler', Load(), lineno=132, col_offset=8), '_state', Store(), lineno=132, col_offset=8)], Name('RUN', Load(), lineno=132, col_offset=38), lineno=132, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=133, col_offset=8), '_result_handler', Load(), lineno=133, col_offset=8), 'start', Load(), lineno=133, col_offset=8), [], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=135, col_offset=8), '_terminate', Store(), lineno=135, col_offset=8)], Call(Name('Finalize', Load(), lineno=135, col_offset=26), [Name('self', Load(), lineno=136, col_offset=12), Attribute(Name('self', Load(), lineno=136, col_offset=18), '_terminate_pool', Load(), lineno=136, col_offset=18)], [keyword('args', Tuple([Attribute(Name('self', Load(), lineno=137, col_offset=18), '_taskqueue', Load(), lineno=137, col_offset=18), Attribute(Name('self', Load(), lineno=137, col_offset=35), '_inqueue', Load(), lineno=137, col_offset=35), Attribute(Name('self', Load(), lineno=137, col_offset=50), '_outqueue', Load(), lineno=137, col_offset=50), Attribute(Name('self', Load(), lineno=137, col_offset=66), '_pool', Load(), lineno=137, col_offset=66), Attribute(Name('self', Load(), lineno=138, col_offset=18), '_worker_handler', Load(), lineno=138, col_offset=18), Attribute(Name('self', Load(), lineno=138, col_offset=40), '_task_handler', Load(), lineno=138, col_offset=40), Attribute(Name('self', Load(), lineno=139, col_offset=18), '_result_handler', Load(), lineno=139, col_offset=18), Attribute(Name('self', Load(), lineno=139, col_offset=40), '_cache', Load(), lineno=139, col_offset=40)], Load(), lineno=137, col_offset=18)), keyword('exitpriority', Num(15, lineno=140, col_offset=25))], None, None, lineno=135, col_offset=26), lineno=135, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('_join_exited_workers', arguments([Name('self', Param(), lineno=143, col_offset=29)], None, None, []), [Expr(Str('Cleanup after any worker processes which have exited due to reaching\n        their specified lifetime.  Returns True if any workers were cleaned up.\n        ', lineno=146, col_offset=-1), lineno=146, col_offset=-1), Assign([Name('cleaned', Store(), lineno=147, col_offset=8)], Name('False', Load(), lineno=147, col_offset=18), lineno=147, col_offset=8), For(Name('i', Store(), lineno=148, col_offset=12), Call(Name('reversed', Load(), lineno=148, col_offset=17), [Call(Name('range', Load(), lineno=148, col_offset=26), [Call(Name('len', Load(), lineno=148, col_offset=32), [Attribute(Name('self', Load(), lineno=148, col_offset=36), '_pool', Load(), lineno=148, col_offset=36)], [], None, None, lineno=148, col_offset=32)], [], None, None, lineno=148, col_offset=26)], [], None, None, lineno=148, col_offset=17), [Assign([Name('worker', Store(), lineno=149, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=149, col_offset=21), '_pool', Load(), lineno=149, col_offset=21), Index(Name('i', Load(), lineno=149, col_offset=32)), Load(), lineno=149, col_offset=21), lineno=149, col_offset=12), If(Compare(Attribute(Name('worker', Load(), lineno=150, col_offset=15), 'exitcode', Load(), lineno=150, col_offset=15), [IsNot()], [Name('None', Load(), lineno=150, col_offset=38)], lineno=150, col_offset=15), [Expr(Call(Name('debug', Load(), lineno=152, col_offset=16), [BinOp(Str('cleaning up worker %d', lineno=152, col_offset=22), Mod(), Name('i', Load(), lineno=152, col_offset=48), lineno=152, col_offset=22)], [], None, None, lineno=152, col_offset=16), lineno=152, col_offset=16), Expr(Call(Attribute(Name('worker', Load(), lineno=153, col_offset=16), 'join', Load(), lineno=153, col_offset=16), [], [], None, None, lineno=153, col_offset=16), lineno=153, col_offset=16), Assign([Name('cleaned', Store(), lineno=154, col_offset=16)], Name('True', Load(), lineno=154, col_offset=26), lineno=154, col_offset=16), Delete([Subscript(Attribute(Name('self', Load(), lineno=155, col_offset=20), '_pool', Load(), lineno=155, col_offset=20), Index(Name('i', Load(), lineno=155, col_offset=31)), Del(), lineno=155, col_offset=20)], lineno=155, col_offset=16)], [], lineno=150, col_offset=12)], [], lineno=148, col_offset=8), Return(Name('cleaned', Load(), lineno=156, col_offset=15), lineno=156, col_offset=8)], [], lineno=143, col_offset=4), FunctionDef('_repopulate_pool', arguments([Name('self', Param(), lineno=158, col_offset=25)], None, None, []), [Expr(Str('Bring the number of pool processes up to the specified number,\n        for use after reaping workers which have exited.\n        ', lineno=161, col_offset=-1), lineno=161, col_offset=-1), For(Name('i', Store(), lineno=162, col_offset=12), Call(Name('range', Load(), lineno=162, col_offset=17), [BinOp(Attribute(Name('self', Load(), lineno=162, col_offset=23), '_processes', Load(), lineno=162, col_offset=23), Sub(), Call(Name('len', Load(), lineno=162, col_offset=41), [Attribute(Name('self', Load(), lineno=162, col_offset=45), '_pool', Load(), lineno=162, col_offset=45)], [], None, None, lineno=162, col_offset=41), lineno=162, col_offset=23)], [], None, None, lineno=162, col_offset=17), [Assign([Name('w', Store(), lineno=163, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=163, col_offset=16), 'Process', Load(), lineno=163, col_offset=16), [], [keyword('target', Name('worker', Load(), lineno=163, col_offset=36)), keyword('args', Tuple([Attribute(Name('self', Load(), lineno=164, col_offset=35), '_inqueue', Load(), lineno=164, col_offset=35), Attribute(Name('self', Load(), lineno=164, col_offset=50), '_outqueue', Load(), lineno=164, col_offset=50), Attribute(Name('self', Load(), lineno=165, col_offset=35), '_initializer', Load(), lineno=165, col_offset=35), Attribute(Name('self', Load(), lineno=166, col_offset=35), '_initargs', Load(), lineno=166, col_offset=35), Attribute(Name('self', Load(), lineno=166, col_offset=51), '_maxtasksperchild', Load(), lineno=166, col_offset=51)], Load(), lineno=164, col_offset=35))], None, None, lineno=163, col_offset=16), lineno=163, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=168, col_offset=12), '_pool', Load(), lineno=168, col_offset=12), 'append', Load(), lineno=168, col_offset=12), [Name('w', Load(), lineno=168, col_offset=30)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12), Assign([Attribute(Name('w', Load(), lineno=169, col_offset=12), 'name', Store(), lineno=169, col_offset=12)], Call(Attribute(Attribute(Name('w', Load(), lineno=169, col_offset=21), 'name', Load(), lineno=169, col_offset=21), 'replace', Load(), lineno=169, col_offset=21), [Str('Process', lineno=169, col_offset=36), Str('PoolWorker', lineno=169, col_offset=47)], [], None, None, lineno=169, col_offset=21), lineno=169, col_offset=12), Assign([Attribute(Name('w', Load(), lineno=170, col_offset=12), 'daemon', Store(), lineno=170, col_offset=12)], Name('True', Load(), lineno=170, col_offset=23), lineno=170, col_offset=12), Expr(Call(Attribute(Name('w', Load(), lineno=171, col_offset=12), 'start', Load(), lineno=171, col_offset=12), [], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12), Expr(Call(Name('debug', Load(), lineno=172, col_offset=12), [Str('added worker', lineno=172, col_offset=18)], [], None, None, lineno=172, col_offset=12), lineno=172, col_offset=12)], [], lineno=162, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('_maintain_pool', arguments([Name('self', Param(), lineno=174, col_offset=23)], None, None, []), [Expr(Str('Clean up any exited workers and start replacements for them.\n        ', lineno=176, col_offset=-1), lineno=176, col_offset=-1), If(Call(Attribute(Name('self', Load(), lineno=177, col_offset=11), '_join_exited_workers', Load(), lineno=177, col_offset=11), [], [], None, None, lineno=177, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), '_repopulate_pool', Load(), lineno=178, col_offset=12), [], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12)], [], lineno=177, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('_setup_queues', arguments([Name('self', Param(), lineno=180, col_offset=22)], None, None, []), [ImportFrom('queues', [alias('SimpleQueue', None)], 1, lineno=181, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=182, col_offset=8), '_inqueue', Store(), lineno=182, col_offset=8)], Call(Name('SimpleQueue', Load(), lineno=182, col_offset=24), [], [], None, None, lineno=182, col_offset=24), lineno=182, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=183, col_offset=8), '_outqueue', Store(), lineno=183, col_offset=8)], Call(Name('SimpleQueue', Load(), lineno=183, col_offset=25), [], [], None, None, lineno=183, col_offset=25), lineno=183, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=184, col_offset=8), '_quick_put', Store(), lineno=184, col_offset=8)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=184, col_offset=26), '_inqueue', Load(), lineno=184, col_offset=26), '_writer', Load(), lineno=184, col_offset=26), 'send', Load(), lineno=184, col_offset=26), lineno=184, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=185, col_offset=8), '_quick_get', Store(), lineno=185, col_offset=8)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=185, col_offset=26), '_outqueue', Load(), lineno=185, col_offset=26), '_reader', Load(), lineno=185, col_offset=26), 'recv', Load(), lineno=185, col_offset=26), lineno=185, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('apply', arguments([Name('self', Param(), lineno=187, col_offset=14), Name('func', Param(), lineno=187, col_offset=20), Name('args', Param(), lineno=187, col_offset=26), Name('kwds', Param(), lineno=187, col_offset=35)], None, None, [Tuple([], Load(), lineno=187, col_offset=31), Dict([], [], lineno=187, col_offset=40)]), [Expr(Str('\n        Equivalent of `apply()` builtin\n        ', lineno=190, col_offset=-1), lineno=190, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=191, col_offset=15), '_state', Load(), lineno=191, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=191, col_offset=30)], lineno=191, col_offset=15), None, lineno=191, col_offset=8), Return(Call(Attribute(Call(Attribute(Name('self', Load(), lineno=192, col_offset=15), 'apply_async', Load(), lineno=192, col_offset=15), [Name('func', Load(), lineno=192, col_offset=32), Name('args', Load(), lineno=192, col_offset=38), Name('kwds', Load(), lineno=192, col_offset=44)], [], None, None, lineno=192, col_offset=15), 'get', Load(), lineno=192, col_offset=15), [], [], None, None, lineno=192, col_offset=15), lineno=192, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('map', arguments([Name('self', Param(), lineno=194, col_offset=12), Name('func', Param(), lineno=194, col_offset=18), Name('iterable', Param(), lineno=194, col_offset=24), Name('chunksize', Param(), lineno=194, col_offset=34)], None, None, [Name('None', Load(), lineno=194, col_offset=44)]), [Expr(Str('\n        Equivalent of `map()` builtin\n        ', lineno=197, col_offset=-1), lineno=197, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=198, col_offset=15), '_state', Load(), lineno=198, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=198, col_offset=30)], lineno=198, col_offset=15), None, lineno=198, col_offset=8), Return(Call(Attribute(Call(Attribute(Name('self', Load(), lineno=199, col_offset=15), 'map_async', Load(), lineno=199, col_offset=15), [Name('func', Load(), lineno=199, col_offset=30), Name('iterable', Load(), lineno=199, col_offset=36), Name('chunksize', Load(), lineno=199, col_offset=46)], [], None, None, lineno=199, col_offset=15), 'get', Load(), lineno=199, col_offset=15), [], [], None, None, lineno=199, col_offset=15), lineno=199, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('imap', arguments([Name('self', Param(), lineno=201, col_offset=13), Name('func', Param(), lineno=201, col_offset=19), Name('iterable', Param(), lineno=201, col_offset=25), Name('chunksize', Param(), lineno=201, col_offset=35)], None, None, [Num(1, lineno=201, col_offset=45)]), [Expr(Str('\n        Equivalent of `itertools.imap()` -- can be MUCH slower than `Pool.map()`\n        ', lineno=204, col_offset=-1), lineno=204, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=205, col_offset=15), '_state', Load(), lineno=205, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=205, col_offset=30)], lineno=205, col_offset=15), None, lineno=205, col_offset=8), If(Compare(Name('chunksize', Load(), lineno=206, col_offset=11), [Eq()], [Num(1, lineno=206, col_offset=24)], lineno=206, col_offset=11), [Assign([Name('result', Store(), lineno=207, col_offset=12)], Call(Name('IMapIterator', Load(), lineno=207, col_offset=21), [Attribute(Name('self', Load(), lineno=207, col_offset=34), '_cache', Load(), lineno=207, col_offset=34)], [], None, None, lineno=207, col_offset=21), lineno=207, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=12), '_taskqueue', Load(), lineno=208, col_offset=12), 'put', Load(), lineno=208, col_offset=12), [Tuple([GeneratorExp(Tuple([Attribute(Name('result', Load(), lineno=208, col_offset=35), '_job', Load(), lineno=208, col_offset=35), Name('i', Load(), lineno=208, col_offset=48), Name('func', Load(), lineno=208, col_offset=51), Tuple([Name('x', Load(), lineno=208, col_offset=58)], Load(), lineno=208, col_offset=58), Dict([], [], lineno=208, col_offset=63)], Load(), lineno=208, col_offset=35), [comprehension(Tuple([Name('i', Store(), lineno=209, col_offset=29), Name('x', Store(), lineno=209, col_offset=32)], Store(), lineno=209, col_offset=29), Call(Name('enumerate', Load(), lineno=209, col_offset=37), [Name('iterable', Load(), lineno=209, col_offset=47)], [], None, None, lineno=209, col_offset=37), [])], lineno=208, col_offset=34), Attribute(Name('result', Load(), lineno=209, col_offset=59), '_set_length', Load(), lineno=209, col_offset=59)], Load(), lineno=208, col_offset=33)], [], None, None, lineno=208, col_offset=12), lineno=208, col_offset=12), Return(Name('result', Load(), lineno=210, col_offset=19), lineno=210, col_offset=12)], [Assert(Compare(Name('chunksize', Load(), lineno=212, col_offset=19), [Gt()], [Num(1, lineno=212, col_offset=31)], lineno=212, col_offset=19), None, lineno=212, col_offset=12), Assign([Name('task_batches', Store(), lineno=213, col_offset=12)], Call(Attribute(Name('Pool', Load(), lineno=213, col_offset=27), '_get_tasks', Load(), lineno=213, col_offset=27), [Name('func', Load(), lineno=213, col_offset=43), Name('iterable', Load(), lineno=213, col_offset=49), Name('chunksize', Load(), lineno=213, col_offset=59)], [], None, None, lineno=213, col_offset=27), lineno=213, col_offset=12), Assign([Name('result', Store(), lineno=214, col_offset=12)], Call(Name('IMapIterator', Load(), lineno=214, col_offset=21), [Attribute(Name('self', Load(), lineno=214, col_offset=34), '_cache', Load(), lineno=214, col_offset=34)], [], None, None, lineno=214, col_offset=21), lineno=214, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=215, col_offset=12), '_taskqueue', Load(), lineno=215, col_offset=12), 'put', Load(), lineno=215, col_offset=12), [Tuple([GeneratorExp(Tuple([Attribute(Name('result', Load(), lineno=215, col_offset=35), '_job', Load(), lineno=215, col_offset=35), Name('i', Load(), lineno=215, col_offset=48), Name('mapstar', Load(), lineno=215, col_offset=51), Tuple([Name('x', Load(), lineno=215, col_offset=61)], Load(), lineno=215, col_offset=61), Dict([], [], lineno=215, col_offset=66)], Load(), lineno=215, col_offset=35), [comprehension(Tuple([Name('i', Store(), lineno=216, col_offset=25), Name('x', Store(), lineno=216, col_offset=28)], Store(), lineno=216, col_offset=25), Call(Name('enumerate', Load(), lineno=216, col_offset=33), [Name('task_batches', Load(), lineno=216, col_offset=43)], [], None, None, lineno=216, col_offset=33), [])], lineno=215, col_offset=34), Attribute(Name('result', Load(), lineno=216, col_offset=59), '_set_length', Load(), lineno=216, col_offset=59)], Load(), lineno=215, col_offset=33)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12), Return(GeneratorExp(Name('item', Load(), lineno=217, col_offset=20), [comprehension(Name('chunk', Store(), lineno=217, col_offset=29), Name('result', Load(), lineno=217, col_offset=38), []), comprehension(Name('item', Store(), lineno=217, col_offset=49), Name('chunk', Load(), lineno=217, col_offset=57), [])], lineno=217, col_offset=20), lineno=217, col_offset=12)], lineno=206, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('imap_unordered', arguments([Name('self', Param(), lineno=219, col_offset=23), Name('func', Param(), lineno=219, col_offset=29), Name('iterable', Param(), lineno=219, col_offset=35), Name('chunksize', Param(), lineno=219, col_offset=45)], None, None, [Num(1, lineno=219, col_offset=55)]), [Expr(Str('\n        Like `imap()` method but ordering of results is arbitrary\n        ', lineno=222, col_offset=-1), lineno=222, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=223, col_offset=15), '_state', Load(), lineno=223, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=223, col_offset=30)], lineno=223, col_offset=15), None, lineno=223, col_offset=8), If(Compare(Name('chunksize', Load(), lineno=224, col_offset=11), [Eq()], [Num(1, lineno=224, col_offset=24)], lineno=224, col_offset=11), [Assign([Name('result', Store(), lineno=225, col_offset=12)], Call(Name('IMapUnorderedIterator', Load(), lineno=225, col_offset=21), [Attribute(Name('self', Load(), lineno=225, col_offset=43), '_cache', Load(), lineno=225, col_offset=43)], [], None, None, lineno=225, col_offset=21), lineno=225, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=226, col_offset=12), '_taskqueue', Load(), lineno=226, col_offset=12), 'put', Load(), lineno=226, col_offset=12), [Tuple([GeneratorExp(Tuple([Attribute(Name('result', Load(), lineno=226, col_offset=35), '_job', Load(), lineno=226, col_offset=35), Name('i', Load(), lineno=226, col_offset=48), Name('func', Load(), lineno=226, col_offset=51), Tuple([Name('x', Load(), lineno=226, col_offset=58)], Load(), lineno=226, col_offset=58), Dict([], [], lineno=226, col_offset=63)], Load(), lineno=226, col_offset=35), [comprehension(Tuple([Name('i', Store(), lineno=227, col_offset=29), Name('x', Store(), lineno=227, col_offset=32)], Store(), lineno=227, col_offset=29), Call(Name('enumerate', Load(), lineno=227, col_offset=37), [Name('iterable', Load(), lineno=227, col_offset=47)], [], None, None, lineno=227, col_offset=37), [])], lineno=226, col_offset=34), Attribute(Name('result', Load(), lineno=227, col_offset=59), '_set_length', Load(), lineno=227, col_offset=59)], Load(), lineno=226, col_offset=33)], [], None, None, lineno=226, col_offset=12), lineno=226, col_offset=12), Return(Name('result', Load(), lineno=228, col_offset=19), lineno=228, col_offset=12)], [Assert(Compare(Name('chunksize', Load(), lineno=230, col_offset=19), [Gt()], [Num(1, lineno=230, col_offset=31)], lineno=230, col_offset=19), None, lineno=230, col_offset=12), Assign([Name('task_batches', Store(), lineno=231, col_offset=12)], Call(Attribute(Name('Pool', Load(), lineno=231, col_offset=27), '_get_tasks', Load(), lineno=231, col_offset=27), [Name('func', Load(), lineno=231, col_offset=43), Name('iterable', Load(), lineno=231, col_offset=49), Name('chunksize', Load(), lineno=231, col_offset=59)], [], None, None, lineno=231, col_offset=27), lineno=231, col_offset=12), Assign([Name('result', Store(), lineno=232, col_offset=12)], Call(Name('IMapUnorderedIterator', Load(), lineno=232, col_offset=21), [Attribute(Name('self', Load(), lineno=232, col_offset=43), '_cache', Load(), lineno=232, col_offset=43)], [], None, None, lineno=232, col_offset=21), lineno=232, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=233, col_offset=12), '_taskqueue', Load(), lineno=233, col_offset=12), 'put', Load(), lineno=233, col_offset=12), [Tuple([GeneratorExp(Tuple([Attribute(Name('result', Load(), lineno=233, col_offset=35), '_job', Load(), lineno=233, col_offset=35), Name('i', Load(), lineno=233, col_offset=48), Name('mapstar', Load(), lineno=233, col_offset=51), Tuple([Name('x', Load(), lineno=233, col_offset=61)], Load(), lineno=233, col_offset=61), Dict([], [], lineno=233, col_offset=66)], Load(), lineno=233, col_offset=35), [comprehension(Tuple([Name('i', Store(), lineno=234, col_offset=25), Name('x', Store(), lineno=234, col_offset=28)], Store(), lineno=234, col_offset=25), Call(Name('enumerate', Load(), lineno=234, col_offset=33), [Name('task_batches', Load(), lineno=234, col_offset=43)], [], None, None, lineno=234, col_offset=33), [])], lineno=233, col_offset=34), Attribute(Name('result', Load(), lineno=234, col_offset=59), '_set_length', Load(), lineno=234, col_offset=59)], Load(), lineno=233, col_offset=33)], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=12), Return(GeneratorExp(Name('item', Load(), lineno=235, col_offset=20), [comprehension(Name('chunk', Store(), lineno=235, col_offset=29), Name('result', Load(), lineno=235, col_offset=38), []), comprehension(Name('item', Store(), lineno=235, col_offset=49), Name('chunk', Load(), lineno=235, col_offset=57), [])], lineno=235, col_offset=20), lineno=235, col_offset=12)], lineno=224, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('apply_async', arguments([Name('self', Param(), lineno=237, col_offset=20), Name('func', Param(), lineno=237, col_offset=26), Name('args', Param(), lineno=237, col_offset=32), Name('kwds', Param(), lineno=237, col_offset=41), Name('callback', Param(), lineno=237, col_offset=50)], None, None, [Tuple([], Load(), lineno=237, col_offset=37), Dict([], [], lineno=237, col_offset=46), Name('None', Load(), lineno=237, col_offset=59)]), [Expr(Str('\n        Asynchronous equivalent of `apply()` builtin\n        ', lineno=240, col_offset=-1), lineno=240, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=241, col_offset=15), '_state', Load(), lineno=241, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=241, col_offset=30)], lineno=241, col_offset=15), None, lineno=241, col_offset=8), Assign([Name('result', Store(), lineno=242, col_offset=8)], Call(Name('ApplyResult', Load(), lineno=242, col_offset=17), [Attribute(Name('self', Load(), lineno=242, col_offset=29), '_cache', Load(), lineno=242, col_offset=29), Name('callback', Load(), lineno=242, col_offset=42)], [], None, None, lineno=242, col_offset=17), lineno=242, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=243, col_offset=8), '_taskqueue', Load(), lineno=243, col_offset=8), 'put', Load(), lineno=243, col_offset=8), [Tuple([List([Tuple([Attribute(Name('result', Load(), lineno=243, col_offset=31), '_job', Load(), lineno=243, col_offset=31), Name('None', Load(), lineno=243, col_offset=44), Name('func', Load(), lineno=243, col_offset=50), Name('args', Load(), lineno=243, col_offset=56), Name('kwds', Load(), lineno=243, col_offset=62)], Load(), lineno=243, col_offset=31)], Load(), lineno=243, col_offset=29), Name('None', Load(), lineno=243, col_offset=70)], Load(), lineno=243, col_offset=29)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Return(Name('result', Load(), lineno=244, col_offset=15), lineno=244, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('map_async', arguments([Name('self', Param(), lineno=246, col_offset=18), Name('func', Param(), lineno=246, col_offset=24), Name('iterable', Param(), lineno=246, col_offset=30), Name('chunksize', Param(), lineno=246, col_offset=40), Name('callback', Param(), lineno=246, col_offset=56)], None, None, [Name('None', Load(), lineno=246, col_offset=50), Name('None', Load(), lineno=246, col_offset=65)]), [Expr(Str('\n        Asynchronous equivalent of `map()` builtin\n        ', lineno=249, col_offset=-1), lineno=249, col_offset=-1), Assert(Compare(Attribute(Name('self', Load(), lineno=250, col_offset=15), '_state', Load(), lineno=250, col_offset=15), [Eq()], [Name('RUN', Load(), lineno=250, col_offset=30)], lineno=250, col_offset=15), None, lineno=250, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=251, col_offset=15), [Name('iterable', Load(), lineno=251, col_offset=23), Str('__len__', lineno=251, col_offset=33)], [], None, None, lineno=251, col_offset=15), lineno=251, col_offset=11), [Assign([Name('iterable', Store(), lineno=252, col_offset=12)], Call(Name('list', Load(), lineno=252, col_offset=23), [Name('iterable', Load(), lineno=252, col_offset=28)], [], None, None, lineno=252, col_offset=23), lineno=252, col_offset=12)], [], lineno=251, col_offset=8), If(Compare(Name('chunksize', Load(), lineno=254, col_offset=11), [Is()], [Name('None', Load(), lineno=254, col_offset=24)], lineno=254, col_offset=11), [Assign([Tuple([Name('chunksize', Store(), lineno=255, col_offset=12), Name('extra', Store(), lineno=255, col_offset=23)], Store(), lineno=255, col_offset=12)], Call(Name('divmod', Load(), lineno=255, col_offset=31), [Call(Name('len', Load(), lineno=255, col_offset=38), [Name('iterable', Load(), lineno=255, col_offset=42)], [], None, None, lineno=255, col_offset=38), BinOp(Call(Name('len', Load(), lineno=255, col_offset=53), [Attribute(Name('self', Load(), lineno=255, col_offset=57), '_pool', Load(), lineno=255, col_offset=57)], [], None, None, lineno=255, col_offset=53), Mult(), Num(4, lineno=255, col_offset=71), lineno=255, col_offset=53)], [], None, None, lineno=255, col_offset=31), lineno=255, col_offset=12), If(Name('extra', Load(), lineno=256, col_offset=15), [AugAssign(Name('chunksize', Store(), lineno=257, col_offset=16), Add(), Num(1, lineno=257, col_offset=29), lineno=257, col_offset=16)], [], lineno=256, col_offset=12)], [], lineno=254, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=258, col_offset=11), [Name('iterable', Load(), lineno=258, col_offset=15)], [], None, None, lineno=258, col_offset=11), [Eq()], [Num(0, lineno=258, col_offset=28)], lineno=258, col_offset=11), [Assign([Name('chunksize', Store(), lineno=259, col_offset=12)], Num(0, lineno=259, col_offset=24), lineno=259, col_offset=12)], [], lineno=258, col_offset=8), Assign([Name('task_batches', Store(), lineno=261, col_offset=8)], Call(Attribute(Name('Pool', Load(), lineno=261, col_offset=23), '_get_tasks', Load(), lineno=261, col_offset=23), [Name('func', Load(), lineno=261, col_offset=39), Name('iterable', Load(), lineno=261, col_offset=45), Name('chunksize', Load(), lineno=261, col_offset=55)], [], None, None, lineno=261, col_offset=23), lineno=261, col_offset=8), Assign([Name('result', Store(), lineno=262, col_offset=8)], Call(Name('MapResult', Load(), lineno=262, col_offset=17), [Attribute(Name('self', Load(), lineno=262, col_offset=27), '_cache', Load(), lineno=262, col_offset=27), Name('chunksize', Load(), lineno=262, col_offset=40), Call(Name('len', Load(), lineno=262, col_offset=51), [Name('iterable', Load(), lineno=262, col_offset=55)], [], None, None, lineno=262, col_offset=51), Name('callback', Load(), lineno=262, col_offset=66)], [], None, None, lineno=262, col_offset=17), lineno=262, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=263, col_offset=8), '_taskqueue', Load(), lineno=263, col_offset=8), 'put', Load(), lineno=263, col_offset=8), [Tuple([GeneratorExp(Tuple([Attribute(Name('result', Load(), lineno=263, col_offset=31), '_job', Load(), lineno=263, col_offset=31), Name('i', Load(), lineno=263, col_offset=44), Name('mapstar', Load(), lineno=263, col_offset=47), Tuple([Name('x', Load(), lineno=263, col_offset=57)], Load(), lineno=263, col_offset=57), Dict([], [], lineno=263, col_offset=62)], Load(), lineno=263, col_offset=31), [comprehension(Tuple([Name('i', Store(), lineno=264, col_offset=34), Name('x', Store(), lineno=264, col_offset=37)], Store(), lineno=264, col_offset=34), Call(Name('enumerate', Load(), lineno=264, col_offset=42), [Name('task_batches', Load(), lineno=264, col_offset=52)], [], None, None, lineno=264, col_offset=42), [])], lineno=263, col_offset=30), Name('None', Load(), lineno=264, col_offset=68)], Load(), lineno=263, col_offset=29)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Return(Name('result', Load(), lineno=265, col_offset=15), lineno=265, col_offset=8)], [], lineno=246, col_offset=4), FunctionDef('_handle_workers', arguments([Name('pool', Param(), lineno=268, col_offset=24)], None, None, []), [While(BoolOp(And(), [Compare(Attribute(Attribute(Name('pool', Load(), lineno=269, col_offset=14), '_worker_handler', Load(), lineno=269, col_offset=14), '_state', Load(), lineno=269, col_offset=14), [Eq()], [Name('RUN', Load(), lineno=269, col_offset=45)], lineno=269, col_offset=14), Compare(Attribute(Name('pool', Load(), lineno=269, col_offset=53), '_state', Load(), lineno=269, col_offset=53), [Eq()], [Name('RUN', Load(), lineno=269, col_offset=68)], lineno=269, col_offset=53)], lineno=269, col_offset=14), [Expr(Call(Attribute(Name('pool', Load(), lineno=270, col_offset=12), '_maintain_pool', Load(), lineno=270, col_offset=12), [], [], None, None, lineno=270, col_offset=12), lineno=270, col_offset=12), Expr(Call(Attribute(Name('time', Load(), lineno=271, col_offset=12), 'sleep', Load(), lineno=271, col_offset=12), [Num(0.1, lineno=271, col_offset=23)], [], None, None, lineno=271, col_offset=12), lineno=271, col_offset=12)], [], lineno=269, col_offset=8), Expr(Call(Name('debug', Load(), lineno=272, col_offset=8), [Str('worker handler exiting', lineno=272, col_offset=14)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8)], [Name('staticmethod', Load(), lineno=267, col_offset=5)], lineno=267, col_offset=4), FunctionDef('_handle_tasks', arguments([Name('taskqueue', Param(), lineno=275, col_offset=22), Name('put', Param(), lineno=275, col_offset=33), Name('outqueue', Param(), lineno=275, col_offset=38), Name('pool', Param(), lineno=275, col_offset=48)], None, None, []), [Assign([Name('thread', Store(), lineno=276, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=276, col_offset=17), 'current_thread', Load(), lineno=276, col_offset=17), [], [], None, None, lineno=276, col_offset=17), lineno=276, col_offset=8), For(Tuple([Name('taskseq', Store(), lineno=278, col_offset=12), Name('set_length', Store(), lineno=278, col_offset=21)], Store(), lineno=278, col_offset=12), Call(Name('iter', Load(), lineno=278, col_offset=35), [Attribute(Name('taskqueue', Load(), lineno=278, col_offset=40), 'get', Load(), lineno=278, col_offset=40), Name('None', Load(), lineno=278, col_offset=55)], [], None, None, lineno=278, col_offset=35), [Assign([Name('i', Store(), lineno=279, col_offset=12)], Num(-1, lineno=279, col_offset=17), lineno=279, col_offset=12), For(Tuple([Name('i', Store(), lineno=280, col_offset=16), Name('task', Store(), lineno=280, col_offset=19)], Store(), lineno=280, col_offset=16), Call(Name('enumerate', Load(), lineno=280, col_offset=27), [Name('taskseq', Load(), lineno=280, col_offset=37)], [], None, None, lineno=280, col_offset=27), [If(Attribute(Name('thread', Load(), lineno=281, col_offset=19), '_state', Load(), lineno=281, col_offset=19), [Expr(Call(Name('debug', Load(), lineno=282, col_offset=20), [Str('task handler found thread._state != RUN', lineno=282, col_offset=26)], [], None, None, lineno=282, col_offset=20), lineno=282, col_offset=20), Break( lineno=283, col_offset=20)], [], lineno=281, col_offset=16), TryExcept([Expr(Call(Name('put', Load(), lineno=285, col_offset=20), [Name('task', Load(), lineno=285, col_offset=24)], [], None, None, lineno=285, col_offset=20), lineno=285, col_offset=20)], [ExceptHandler(Name('IOError', Load(), lineno=286, col_offset=23), None, [Expr(Call(Name('debug', Load(), lineno=287, col_offset=20), [Str('could not put task on queue', lineno=287, col_offset=26)], [], None, None, lineno=287, col_offset=20), lineno=287, col_offset=20), Break( lineno=288, col_offset=20)], lineno=286, col_offset=16)], [], lineno=284, col_offset=16)], [If(Name('set_length', Load(), lineno=290, col_offset=19), [Expr(Call(Name('debug', Load(), lineno=291, col_offset=20), [Str('doing set_length()', lineno=291, col_offset=26)], [], None, None, lineno=291, col_offset=20), lineno=291, col_offset=20), Expr(Call(Name('set_length', Load(), lineno=292, col_offset=20), [BinOp(Name('i', Load(), lineno=292, col_offset=31), Add(), Num(1, lineno=292, col_offset=33), lineno=292, col_offset=31)], [], None, None, lineno=292, col_offset=20), lineno=292, col_offset=20)], [], lineno=290, col_offset=16), Continue( lineno=293, col_offset=16)], lineno=280, col_offset=12), Break( lineno=294, col_offset=12)], [Expr(Call(Name('debug', Load(), lineno=296, col_offset=12), [Str('task handler got sentinel', lineno=296, col_offset=18)], [], None, None, lineno=296, col_offset=12), lineno=296, col_offset=12)], lineno=278, col_offset=8), TryExcept([Expr(Call(Name('debug', Load(), lineno=301, col_offset=12), [Str('task handler sending sentinel to result handler', lineno=301, col_offset=18)], [], None, None, lineno=301, col_offset=12), lineno=301, col_offset=12), Expr(Call(Attribute(Name('outqueue', Load(), lineno=302, col_offset=12), 'put', Load(), lineno=302, col_offset=12), [Name('None', Load(), lineno=302, col_offset=25)], [], None, None, lineno=302, col_offset=12), lineno=302, col_offset=12), Expr(Call(Name('debug', Load(), lineno=305, col_offset=12), [Str('task handler sending sentinel to workers', lineno=305, col_offset=18)], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12), For(Name('p', Store(), lineno=306, col_offset=16), Name('pool', Load(), lineno=306, col_offset=21), [Expr(Call(Name('put', Load(), lineno=307, col_offset=16), [Name('None', Load(), lineno=307, col_offset=20)], [], None, None, lineno=307, col_offset=16), lineno=307, col_offset=16)], [], lineno=306, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=308, col_offset=15), None, [Expr(Call(Name('debug', Load(), lineno=309, col_offset=12), [Str('task handler got IOError when sending sentinels', lineno=309, col_offset=18)], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12)], lineno=308, col_offset=8)], [], lineno=299, col_offset=8), Expr(Call(Name('debug', Load(), lineno=311, col_offset=8), [Str('task handler exiting', lineno=311, col_offset=14)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8)], [Name('staticmethod', Load(), lineno=274, col_offset=5)], lineno=274, col_offset=4), FunctionDef('_handle_results', arguments([Name('outqueue', Param(), lineno=314, col_offset=24), Name('get', Param(), lineno=314, col_offset=34), Name('cache', Param(), lineno=314, col_offset=39)], None, None, []), [Assign([Name('thread', Store(), lineno=315, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=315, col_offset=17), 'current_thread', Load(), lineno=315, col_offset=17), [], [], None, None, lineno=315, col_offset=17), lineno=315, col_offset=8), While(Num(1, lineno=317, col_offset=14), [TryExcept([Assign([Name('task', Store(), lineno=319, col_offset=16)], Call(Name('get', Load(), lineno=319, col_offset=23), [], [], None, None, lineno=319, col_offset=23), lineno=319, col_offset=16)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=320, col_offset=20), Name('EOFError', Load(), lineno=320, col_offset=29)], Load(), lineno=320, col_offset=20), None, [Expr(Call(Name('debug', Load(), lineno=321, col_offset=16), [Str('result handler got EOFError/IOError -- exiting', lineno=321, col_offset=22)], [], None, None, lineno=321, col_offset=16), lineno=321, col_offset=16), Return(None, lineno=322, col_offset=16)], lineno=320, col_offset=12)], [], lineno=318, col_offset=12), If(Attribute(Name('thread', Load(), lineno=324, col_offset=15), '_state', Load(), lineno=324, col_offset=15), [Assert(Compare(Attribute(Name('thread', Load(), lineno=325, col_offset=23), '_state', Load(), lineno=325, col_offset=23), [Eq()], [Name('TERMINATE', Load(), lineno=325, col_offset=40)], lineno=325, col_offset=23), None, lineno=325, col_offset=16), Expr(Call(Name('debug', Load(), lineno=326, col_offset=16), [Str('result handler found thread._state=TERMINATE', lineno=326, col_offset=22)], [], None, None, lineno=326, col_offset=16), lineno=326, col_offset=16), Break( lineno=327, col_offset=16)], [], lineno=324, col_offset=12), If(Compare(Name('task', Load(), lineno=329, col_offset=15), [Is()], [Name('None', Load(), lineno=329, col_offset=23)], lineno=329, col_offset=15), [Expr(Call(Name('debug', Load(), lineno=330, col_offset=16), [Str('result handler got sentinel', lineno=330, col_offset=22)], [], None, None, lineno=330, col_offset=16), lineno=330, col_offset=16), Break( lineno=331, col_offset=16)], [], lineno=329, col_offset=12), Assign([Tuple([Name('job', Store(), lineno=333, col_offset=12), Name('i', Store(), lineno=333, col_offset=17), Name('obj', Store(), lineno=333, col_offset=20)], Store(), lineno=333, col_offset=12)], Name('task', Load(), lineno=333, col_offset=26), lineno=333, col_offset=12), TryExcept([Expr(Call(Attribute(Subscript(Name('cache', Load(), lineno=335, col_offset=16), Index(Name('job', Load(), lineno=335, col_offset=22)), Load(), lineno=335, col_offset=16), '_set', Load(), lineno=335, col_offset=16), [Name('i', Load(), lineno=335, col_offset=32), Name('obj', Load(), lineno=335, col_offset=35)], [], None, None, lineno=335, col_offset=16), lineno=335, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=336, col_offset=19), None, [Pass( lineno=337, col_offset=16)], lineno=336, col_offset=12)], [], lineno=334, col_offset=12)], [], lineno=317, col_offset=8), While(BoolOp(And(), [Name('cache', Load(), lineno=339, col_offset=14), Compare(Attribute(Name('thread', Load(), lineno=339, col_offset=24), '_state', Load(), lineno=339, col_offset=24), [NotEq()], [Name('TERMINATE', Load(), lineno=339, col_offset=41)], lineno=339, col_offset=24)], lineno=339, col_offset=14), [TryExcept([Assign([Name('task', Store(), lineno=341, col_offset=16)], Call(Name('get', Load(), lineno=341, col_offset=23), [], [], None, None, lineno=341, col_offset=23), lineno=341, col_offset=16)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=342, col_offset=20), Name('EOFError', Load(), lineno=342, col_offset=29)], Load(), lineno=342, col_offset=20), None, [Expr(Call(Name('debug', Load(), lineno=343, col_offset=16), [Str('result handler got EOFError/IOError -- exiting', lineno=343, col_offset=22)], [], None, None, lineno=343, col_offset=16), lineno=343, col_offset=16), Return(None, lineno=344, col_offset=16)], lineno=342, col_offset=12)], [], lineno=340, col_offset=12), If(Compare(Name('task', Load(), lineno=346, col_offset=15), [Is()], [Name('None', Load(), lineno=346, col_offset=23)], lineno=346, col_offset=15), [Expr(Call(Name('debug', Load(), lineno=347, col_offset=16), [Str('result handler ignoring extra sentinel', lineno=347, col_offset=22)], [], None, None, lineno=347, col_offset=16), lineno=347, col_offset=16), Continue( lineno=348, col_offset=16)], [], lineno=346, col_offset=12), Assign([Tuple([Name('job', Store(), lineno=349, col_offset=12), Name('i', Store(), lineno=349, col_offset=17), Name('obj', Store(), lineno=349, col_offset=20)], Store(), lineno=349, col_offset=12)], Name('task', Load(), lineno=349, col_offset=26), lineno=349, col_offset=12), TryExcept([Expr(Call(Attribute(Subscript(Name('cache', Load(), lineno=351, col_offset=16), Index(Name('job', Load(), lineno=351, col_offset=22)), Load(), lineno=351, col_offset=16), '_set', Load(), lineno=351, col_offset=16), [Name('i', Load(), lineno=351, col_offset=32), Name('obj', Load(), lineno=351, col_offset=35)], [], None, None, lineno=351, col_offset=16), lineno=351, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=352, col_offset=19), None, [Pass( lineno=353, col_offset=16)], lineno=352, col_offset=12)], [], lineno=350, col_offset=12)], [], lineno=339, col_offset=8), If(Call(Name('hasattr', Load(), lineno=355, col_offset=11), [Name('outqueue', Load(), lineno=355, col_offset=19), Str('_reader', lineno=355, col_offset=29)], [], None, None, lineno=355, col_offset=11), [Expr(Call(Name('debug', Load(), lineno=356, col_offset=12), [Str('ensuring that outqueue is not full', lineno=356, col_offset=18)], [], None, None, lineno=356, col_offset=12), lineno=356, col_offset=12), TryExcept([For(Name('i', Store(), lineno=361, col_offset=20), Call(Name('range', Load(), lineno=361, col_offset=25), [Num(10, lineno=361, col_offset=31)], [], None, None, lineno=361, col_offset=25), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('outqueue', Load(), lineno=362, col_offset=27), '_reader', Load(), lineno=362, col_offset=27), 'poll', Load(), lineno=362, col_offset=27), [], [], None, None, lineno=362, col_offset=27), lineno=362, col_offset=23), [Break( lineno=363, col_offset=24)], [], lineno=362, col_offset=20), Expr(Call(Name('get', Load(), lineno=364, col_offset=20), [], [], None, None, lineno=364, col_offset=20), lineno=364, col_offset=20)], [], lineno=361, col_offset=16)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=365, col_offset=20), Name('EOFError', Load(), lineno=365, col_offset=29)], Load(), lineno=365, col_offset=20), None, [Pass( lineno=366, col_offset=16)], lineno=365, col_offset=12)], [], lineno=360, col_offset=12)], [], lineno=355, col_offset=8), Expr(Call(Name('debug', Load(), lineno=368, col_offset=8), [Str('result handler exiting: len(cache)=%s, thread._state=%s', lineno=368, col_offset=14), Call(Name('len', Load(), lineno=369, col_offset=14), [Name('cache', Load(), lineno=369, col_offset=18)], [], None, None, lineno=369, col_offset=14), Attribute(Name('thread', Load(), lineno=369, col_offset=26), '_state', Load(), lineno=369, col_offset=26)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8)], [Name('staticmethod', Load(), lineno=313, col_offset=5)], lineno=313, col_offset=4), FunctionDef('_get_tasks', arguments([Name('func', Param(), lineno=372, col_offset=19), Name('it', Param(), lineno=372, col_offset=25), Name('size', Param(), lineno=372, col_offset=29)], None, None, []), [Assign([Name('it', Store(), lineno=373, col_offset=8)], Call(Name('iter', Load(), lineno=373, col_offset=13), [Name('it', Load(), lineno=373, col_offset=18)], [], None, None, lineno=373, col_offset=13), lineno=373, col_offset=8), While(Num(1, lineno=374, col_offset=14), [Assign([Name('x', Store(), lineno=375, col_offset=12)], Call(Name('tuple', Load(), lineno=375, col_offset=16), [Call(Attribute(Name('itertools', Load(), lineno=375, col_offset=22), 'islice', Load(), lineno=375, col_offset=22), [Name('it', Load(), lineno=375, col_offset=39), Name('size', Load(), lineno=375, col_offset=43)], [], None, None, lineno=375, col_offset=22)], [], None, None, lineno=375, col_offset=16), lineno=375, col_offset=12), If(UnaryOp(Not(), Name('x', Load(), lineno=376, col_offset=19), lineno=376, col_offset=15), [Return(None, lineno=377, col_offset=16)], [], lineno=376, col_offset=12), Expr(Yield(Tuple([Name('func', Load(), lineno=378, col_offset=19), Name('x', Load(), lineno=378, col_offset=25)], Load(), lineno=378, col_offset=19), lineno=378, col_offset=12), lineno=378, col_offset=12)], [], lineno=374, col_offset=8)], [Name('staticmethod', Load(), lineno=371, col_offset=5)], lineno=371, col_offset=4), FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=380, col_offset=19)], None, None, []), [Raise(Call(Name('NotImplementedError', Load(), lineno=381, col_offset=14), [Str('pool objects cannot be passed between processes or pickled', lineno=382, col_offset=14)], [], None, None, lineno=381, col_offset=14), None, None, lineno=381, col_offset=8)], [], lineno=380, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=385, col_offset=14)], None, None, []), [Expr(Call(Name('debug', Load(), lineno=386, col_offset=8), [Str('closing pool', lineno=386, col_offset=14)], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=387, col_offset=11), '_state', Load(), lineno=387, col_offset=11), [Eq()], [Name('RUN', Load(), lineno=387, col_offset=26)], lineno=387, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=388, col_offset=12), '_state', Store(), lineno=388, col_offset=12)], Name('CLOSE', Load(), lineno=388, col_offset=26), lineno=388, col_offset=12), Assign([Attribute(Attribute(Name('self', Load(), lineno=389, col_offset=12), '_worker_handler', Load(), lineno=389, col_offset=12), '_state', Store(), lineno=389, col_offset=12)], Name('CLOSE', Load(), lineno=389, col_offset=42), lineno=389, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=390, col_offset=12), '_taskqueue', Load(), lineno=390, col_offset=12), 'put', Load(), lineno=390, col_offset=12), [Name('None', Load(), lineno=390, col_offset=32)], [], None, None, lineno=390, col_offset=12), lineno=390, col_offset=12)], [], lineno=387, col_offset=8)], [], lineno=385, col_offset=4), FunctionDef('terminate', arguments([Name('self', Param(), lineno=392, col_offset=18)], None, None, []), [Expr(Call(Name('debug', Load(), lineno=393, col_offset=8), [Str('terminating pool', lineno=393, col_offset=14)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=394, col_offset=8), '_state', Store(), lineno=394, col_offset=8)], Name('TERMINATE', Load(), lineno=394, col_offset=22), lineno=394, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=395, col_offset=8), '_worker_handler', Load(), lineno=395, col_offset=8), '_state', Store(), lineno=395, col_offset=8)], Name('TERMINATE', Load(), lineno=395, col_offset=38), lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), '_terminate', Load(), lineno=396, col_offset=8), [], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8)], [], lineno=392, col_offset=4), FunctionDef('join', arguments([Name('self', Param(), lineno=398, col_offset=13)], None, None, []), [Expr(Call(Name('debug', Load(), lineno=399, col_offset=8), [Str('joining pool', lineno=399, col_offset=14)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8), Assert(Compare(Attribute(Name('self', Load(), lineno=400, col_offset=15), '_state', Load(), lineno=400, col_offset=15), [In()], [Tuple([Name('CLOSE', Load(), lineno=400, col_offset=31), Name('TERMINATE', Load(), lineno=400, col_offset=38)], Load(), lineno=400, col_offset=31)], lineno=400, col_offset=15), None, lineno=400, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=401, col_offset=8), '_worker_handler', Load(), lineno=401, col_offset=8), 'join', Load(), lineno=401, col_offset=8), [], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=402, col_offset=8), '_task_handler', Load(), lineno=402, col_offset=8), 'join', Load(), lineno=402, col_offset=8), [], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=403, col_offset=8), '_result_handler', Load(), lineno=403, col_offset=8), 'join', Load(), lineno=403, col_offset=8), [], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), For(Name('p', Store(), lineno=404, col_offset=12), Attribute(Name('self', Load(), lineno=404, col_offset=17), '_pool', Load(), lineno=404, col_offset=17), [Expr(Call(Attribute(Name('p', Load(), lineno=405, col_offset=12), 'join', Load(), lineno=405, col_offset=12), [], [], None, None, lineno=405, col_offset=12), lineno=405, col_offset=12)], [], lineno=404, col_offset=8)], [], lineno=398, col_offset=4), FunctionDef('_help_stuff_finish', arguments([Name('inqueue', Param(), lineno=408, col_offset=27), Name('task_handler', Param(), lineno=408, col_offset=36), Name('size', Param(), lineno=408, col_offset=50)], None, None, []), [Expr(Call(Name('debug', Load(), lineno=410, col_offset=8), [Str('removing tasks from inqueue until task handler finished', lineno=410, col_offset=14)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=411, col_offset=8), '_rlock', Load(), lineno=411, col_offset=8), 'acquire', Load(), lineno=411, col_offset=8), [], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), While(BoolOp(And(), [Call(Attribute(Name('task_handler', Load(), lineno=412, col_offset=14), 'is_alive', Load(), lineno=412, col_offset=14), [], [], None, None, lineno=412, col_offset=14), Call(Attribute(Attribute(Name('inqueue', Load(), lineno=412, col_offset=42), '_reader', Load(), lineno=412, col_offset=42), 'poll', Load(), lineno=412, col_offset=42), [], [], None, None, lineno=412, col_offset=42)], lineno=412, col_offset=14), [Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=413, col_offset=12), '_reader', Load(), lineno=413, col_offset=12), 'recv', Load(), lineno=413, col_offset=12), [], [], None, None, lineno=413, col_offset=12), lineno=413, col_offset=12), Expr(Call(Attribute(Name('time', Load(), lineno=414, col_offset=12), 'sleep', Load(), lineno=414, col_offset=12), [Num(0, lineno=414, col_offset=23)], [], None, None, lineno=414, col_offset=12), lineno=414, col_offset=12)], [], lineno=412, col_offset=8)], [Name('staticmethod', Load(), lineno=407, col_offset=5)], lineno=407, col_offset=4), FunctionDef('_terminate_pool', arguments([Name('cls', Param(), lineno=417, col_offset=24), Name('taskqueue', Param(), lineno=417, col_offset=29), Name('inqueue', Param(), lineno=417, col_offset=40), Name('outqueue', Param(), lineno=417, col_offset=49), Name('pool', Param(), lineno=417, col_offset=59), Name('worker_handler', Param(), lineno=418, col_offset=24), Name('task_handler', Param(), lineno=418, col_offset=40), Name('result_handler', Param(), lineno=418, col_offset=54), Name('cache', Param(), lineno=418, col_offset=70)], None, None, []), [Expr(Call(Name('debug', Load(), lineno=420, col_offset=8), [Str('finalizing pool', lineno=420, col_offset=14)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Assign([Attribute(Name('worker_handler', Load(), lineno=422, col_offset=8), '_state', Store(), lineno=422, col_offset=8)], Name('TERMINATE', Load(), lineno=422, col_offset=32), lineno=422, col_offset=8), Assign([Attribute(Name('task_handler', Load(), lineno=423, col_offset=8), '_state', Store(), lineno=423, col_offset=8)], Name('TERMINATE', Load(), lineno=423, col_offset=30), lineno=423, col_offset=8), Expr(Call(Attribute(Name('taskqueue', Load(), lineno=424, col_offset=8), 'put', Load(), lineno=424, col_offset=8), [Name('None', Load(), lineno=424, col_offset=22)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8), Expr(Call(Name('debug', Load(), lineno=426, col_offset=8), [Str('helping task handler/workers to finish', lineno=426, col_offset=14)], [], None, None, lineno=426, col_offset=8), lineno=426, col_offset=8), Expr(Call(Attribute(Name('cls', Load(), lineno=427, col_offset=8), '_help_stuff_finish', Load(), lineno=427, col_offset=8), [Name('inqueue', Load(), lineno=427, col_offset=31), Name('task_handler', Load(), lineno=427, col_offset=40), Call(Name('len', Load(), lineno=427, col_offset=54), [Name('pool', Load(), lineno=427, col_offset=58)], [], None, None, lineno=427, col_offset=54)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8), Assert(BoolOp(Or(), [Call(Attribute(Name('result_handler', Load(), lineno=429, col_offset=15), 'is_alive', Load(), lineno=429, col_offset=15), [], [], None, None, lineno=429, col_offset=15), Compare(Call(Name('len', Load(), lineno=429, col_offset=44), [Name('cache', Load(), lineno=429, col_offset=48)], [], None, None, lineno=429, col_offset=44), [Eq()], [Num(0, lineno=429, col_offset=58)], lineno=429, col_offset=44)], lineno=429, col_offset=15), None, lineno=429, col_offset=8), Assign([Attribute(Name('result_handler', Load(), lineno=431, col_offset=8), '_state', Store(), lineno=431, col_offset=8)], Name('TERMINATE', Load(), lineno=431, col_offset=32), lineno=431, col_offset=8), Expr(Call(Attribute(Name('outqueue', Load(), lineno=432, col_offset=8), 'put', Load(), lineno=432, col_offset=8), [Name('None', Load(), lineno=432, col_offset=21)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8), If(BoolOp(And(), [Name('pool', Load(), lineno=435, col_offset=11), Call(Name('hasattr', Load(), lineno=435, col_offset=20), [Subscript(Name('pool', Load(), lineno=435, col_offset=28), Index(Num(0, lineno=435, col_offset=33)), Load(), lineno=435, col_offset=28), Str('terminate', lineno=435, col_offset=37)], [], None, None, lineno=435, col_offset=20)], lineno=435, col_offset=11), [Expr(Call(Name('debug', Load(), lineno=436, col_offset=12), [Str('terminating workers', lineno=436, col_offset=18)], [], None, None, lineno=436, col_offset=12), lineno=436, col_offset=12), For(Name('p', Store(), lineno=437, col_offset=16), Name('pool', Load(), lineno=437, col_offset=21), [If(Compare(Attribute(Name('p', Load(), lineno=438, col_offset=19), 'exitcode', Load(), lineno=438, col_offset=19), [Is()], [Name('None', Load(), lineno=438, col_offset=33)], lineno=438, col_offset=19), [Expr(Call(Attribute(Name('p', Load(), lineno=439, col_offset=20), 'terminate', Load(), lineno=439, col_offset=20), [], [], None, None, lineno=439, col_offset=20), lineno=439, col_offset=20)], [], lineno=438, col_offset=16)], [], lineno=437, col_offset=12)], [], lineno=435, col_offset=8), Expr(Call(Name('debug', Load(), lineno=441, col_offset=8), [Str('joining task handler', lineno=441, col_offset=14)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8), Expr(Call(Attribute(Name('task_handler', Load(), lineno=442, col_offset=8), 'join', Load(), lineno=442, col_offset=8), [Num(1e+100, lineno=442, col_offset=26)], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8), Expr(Call(Name('debug', Load(), lineno=444, col_offset=8), [Str('joining result handler', lineno=444, col_offset=14)], [], None, None, lineno=444, col_offset=8), lineno=444, col_offset=8), Expr(Call(Attribute(Name('result_handler', Load(), lineno=445, col_offset=8), 'join', Load(), lineno=445, col_offset=8), [Num(1e+100, lineno=445, col_offset=28)], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8), If(BoolOp(And(), [Name('pool', Load(), lineno=447, col_offset=11), Call(Name('hasattr', Load(), lineno=447, col_offset=20), [Subscript(Name('pool', Load(), lineno=447, col_offset=28), Index(Num(0, lineno=447, col_offset=33)), Load(), lineno=447, col_offset=28), Str('terminate', lineno=447, col_offset=37)], [], None, None, lineno=447, col_offset=20)], lineno=447, col_offset=11), [Expr(Call(Name('debug', Load(), lineno=448, col_offset=12), [Str('joining pool workers', lineno=448, col_offset=18)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=12), For(Name('p', Store(), lineno=449, col_offset=16), Name('pool', Load(), lineno=449, col_offset=21), [If(Call(Attribute(Name('p', Load(), lineno=450, col_offset=19), 'is_alive', Load(), lineno=450, col_offset=19), [], [], None, None, lineno=450, col_offset=19), [Expr(Call(Name('debug', Load(), lineno=452, col_offset=20), [BinOp(Str('cleaning up worker %d', lineno=452, col_offset=26), Mod(), Attribute(Name('p', Load(), lineno=452, col_offset=52), 'pid', Load(), lineno=452, col_offset=52), lineno=452, col_offset=26)], [], None, None, lineno=452, col_offset=20), lineno=452, col_offset=20), Expr(Call(Attribute(Name('p', Load(), lineno=453, col_offset=20), 'join', Load(), lineno=453, col_offset=20), [], [], None, None, lineno=453, col_offset=20), lineno=453, col_offset=20)], [], lineno=450, col_offset=16)], [], lineno=449, col_offset=12)], [], lineno=447, col_offset=8)], [Name('classmethod', Load(), lineno=416, col_offset=5)], lineno=416, col_offset=4)], [], lineno=81, col_offset=0), ClassDef('ApplyResult', [Name('object', Load(), lineno=459, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=461, col_offset=17), Name('cache', Param(), lineno=461, col_offset=23), Name('callback', Param(), lineno=461, col_offset=30)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=462, col_offset=8), '_cond', Store(), lineno=462, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=462, col_offset=21), 'Condition', Load(), lineno=462, col_offset=21), [Call(Attribute(Name('threading', Load(), lineno=462, col_offset=41), 'Lock', Load(), lineno=462, col_offset=41), [], [], None, None, lineno=462, col_offset=41)], [], None, None, lineno=462, col_offset=21), lineno=462, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=463, col_offset=8), '_job', Store(), lineno=463, col_offset=8)], Call(Attribute(Name('job_counter', Load(), lineno=463, col_offset=20), 'next', Load(), lineno=463, col_offset=20), [], [], None, None, lineno=463, col_offset=20), lineno=463, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=464, col_offset=8), '_cache', Store(), lineno=464, col_offset=8)], Name('cache', Load(), lineno=464, col_offset=22), lineno=464, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=465, col_offset=8), '_ready', Store(), lineno=465, col_offset=8)], Name('False', Load(), lineno=465, col_offset=22), lineno=465, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=466, col_offset=8), '_callback', Store(), lineno=466, col_offset=8)], Name('callback', Load(), lineno=466, col_offset=25), lineno=466, col_offset=8), Assign([Subscript(Name('cache', Load(), lineno=467, col_offset=8), Index(Attribute(Name('self', Load(), lineno=467, col_offset=14), '_job', Load(), lineno=467, col_offset=14)), Store(), lineno=467, col_offset=8)], Name('self', Load(), lineno=467, col_offset=27), lineno=467, col_offset=8)], [], lineno=461, col_offset=4), FunctionDef('ready', arguments([Name('self', Param(), lineno=469, col_offset=14)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=470, col_offset=15), '_ready', Load(), lineno=470, col_offset=15), lineno=470, col_offset=8)], [], lineno=469, col_offset=4), FunctionDef('successful', arguments([Name('self', Param(), lineno=472, col_offset=19)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=473, col_offset=15), '_ready', Load(), lineno=473, col_offset=15), None, lineno=473, col_offset=8), Return(Attribute(Name('self', Load(), lineno=474, col_offset=15), '_success', Load(), lineno=474, col_offset=15), lineno=474, col_offset=8)], [], lineno=472, col_offset=4), FunctionDef('wait', arguments([Name('self', Param(), lineno=476, col_offset=13), Name('timeout', Param(), lineno=476, col_offset=19)], None, None, [Name('None', Load(), lineno=476, col_offset=27)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=477, col_offset=8), '_cond', Load(), lineno=477, col_offset=8), 'acquire', Load(), lineno=477, col_offset=8), [], [], None, None, lineno=477, col_offset=8), lineno=477, col_offset=8), TryFinally([If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=479, col_offset=19), '_ready', Load(), lineno=479, col_offset=19), lineno=479, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=480, col_offset=16), '_cond', Load(), lineno=480, col_offset=16), 'wait', Load(), lineno=480, col_offset=16), [Name('timeout', Load(), lineno=480, col_offset=32)], [], None, None, lineno=480, col_offset=16), lineno=480, col_offset=16)], [], lineno=479, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=482, col_offset=12), '_cond', Load(), lineno=482, col_offset=12), 'release', Load(), lineno=482, col_offset=12), [], [], None, None, lineno=482, col_offset=12), lineno=482, col_offset=12)], lineno=478, col_offset=8)], [], lineno=476, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=484, col_offset=12), Name('timeout', Param(), lineno=484, col_offset=18)], None, None, [Name('None', Load(), lineno=484, col_offset=26)]), [Expr(Call(Attribute(Name('self', Load(), lineno=485, col_offset=8), 'wait', Load(), lineno=485, col_offset=8), [Name('timeout', Load(), lineno=485, col_offset=18)], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=486, col_offset=15), '_ready', Load(), lineno=486, col_offset=15), lineno=486, col_offset=11), [Raise(Name('TimeoutError', Load(), lineno=487, col_offset=18), None, None, lineno=487, col_offset=12)], [], lineno=486, col_offset=8), If(Attribute(Name('self', Load(), lineno=488, col_offset=11), '_success', Load(), lineno=488, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=489, col_offset=19), '_value', Load(), lineno=489, col_offset=19), lineno=489, col_offset=12)], [Raise(Attribute(Name('self', Load(), lineno=491, col_offset=18), '_value', Load(), lineno=491, col_offset=18), None, None, lineno=491, col_offset=12)], lineno=488, col_offset=8)], [], lineno=484, col_offset=4), FunctionDef('_set', arguments([Name('self', Param(), lineno=493, col_offset=13), Name('i', Param(), lineno=493, col_offset=19), Name('obj', Param(), lineno=493, col_offset=22)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=494, col_offset=8), '_success', Store(), lineno=494, col_offset=8), Attribute(Name('self', Load(), lineno=494, col_offset=23), '_value', Store(), lineno=494, col_offset=23)], Store(), lineno=494, col_offset=8)], Name('obj', Load(), lineno=494, col_offset=37), lineno=494, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=495, col_offset=11), '_callback', Load(), lineno=495, col_offset=11), Attribute(Name('self', Load(), lineno=495, col_offset=30), '_success', Load(), lineno=495, col_offset=30)], lineno=495, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=496, col_offset=12), '_callback', Load(), lineno=496, col_offset=12), [Attribute(Name('self', Load(), lineno=496, col_offset=27), '_value', Load(), lineno=496, col_offset=27)], [], None, None, lineno=496, col_offset=12), lineno=496, col_offset=12)], [], lineno=495, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=497, col_offset=8), '_cond', Load(), lineno=497, col_offset=8), 'acquire', Load(), lineno=497, col_offset=8), [], [], None, None, lineno=497, col_offset=8), lineno=497, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=499, col_offset=12), '_ready', Store(), lineno=499, col_offset=12)], Name('True', Load(), lineno=499, col_offset=26), lineno=499, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=500, col_offset=12), '_cond', Load(), lineno=500, col_offset=12), 'notify', Load(), lineno=500, col_offset=12), [], [], None, None, lineno=500, col_offset=12), lineno=500, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=502, col_offset=12), '_cond', Load(), lineno=502, col_offset=12), 'release', Load(), lineno=502, col_offset=12), [], [], None, None, lineno=502, col_offset=12), lineno=502, col_offset=12)], lineno=498, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=503, col_offset=12), '_cache', Load(), lineno=503, col_offset=12), Index(Attribute(Name('self', Load(), lineno=503, col_offset=24), '_job', Load(), lineno=503, col_offset=24)), Del(), lineno=503, col_offset=12)], lineno=503, col_offset=8)], [], lineno=493, col_offset=4)], [], lineno=459, col_offset=0), ClassDef('MapResult', [Name('ApplyResult', Load(), lineno=509, col_offset=16)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=511, col_offset=17), Name('cache', Param(), lineno=511, col_offset=23), Name('chunksize', Param(), lineno=511, col_offset=30), Name('length', Param(), lineno=511, col_offset=41), Name('callback', Param(), lineno=511, col_offset=49)], None, None, []), [Expr(Call(Attribute(Name('ApplyResult', Load(), lineno=512, col_offset=8), '__init__', Load(), lineno=512, col_offset=8), [Name('self', Load(), lineno=512, col_offset=29), Name('cache', Load(), lineno=512, col_offset=35), Name('callback', Load(), lineno=512, col_offset=42)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=513, col_offset=8), '_success', Store(), lineno=513, col_offset=8)], Name('True', Load(), lineno=513, col_offset=24), lineno=513, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=514, col_offset=8), '_value', Store(), lineno=514, col_offset=8)], BinOp(List([Name('None', Load(), lineno=514, col_offset=23)], Load(), lineno=514, col_offset=22), Mult(), Name('length', Load(), lineno=514, col_offset=31), lineno=514, col_offset=22), lineno=514, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=515, col_offset=8), '_chunksize', Store(), lineno=515, col_offset=8)], Name('chunksize', Load(), lineno=515, col_offset=26), lineno=515, col_offset=8), If(Compare(Name('chunksize', Load(), lineno=516, col_offset=11), [LtE()], [Num(0, lineno=516, col_offset=24)], lineno=516, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=517, col_offset=12), '_number_left', Store(), lineno=517, col_offset=12)], Num(0, lineno=517, col_offset=32), lineno=517, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=518, col_offset=12), '_ready', Store(), lineno=518, col_offset=12)], Name('True', Load(), lineno=518, col_offset=26), lineno=518, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=520, col_offset=12), '_number_left', Store(), lineno=520, col_offset=12)], BinOp(BinOp(Name('length', Load(), lineno=520, col_offset=32), FloorDiv(), Name('chunksize', Load(), lineno=520, col_offset=40), lineno=520, col_offset=32), Add(), Call(Name('bool', Load(), lineno=520, col_offset=52), [BinOp(Name('length', Load(), lineno=520, col_offset=57), Mod(), Name('chunksize', Load(), lineno=520, col_offset=66), lineno=520, col_offset=57)], [], None, None, lineno=520, col_offset=52), lineno=520, col_offset=32), lineno=520, col_offset=12)], lineno=516, col_offset=8)], [], lineno=511, col_offset=4), FunctionDef('_set', arguments([Name('self', Param(), lineno=522, col_offset=13), Name('i', Param(), lineno=522, col_offset=19), Name('success_result', Param(), lineno=522, col_offset=22)], None, None, []), [Assign([Tuple([Name('success', Store(), lineno=523, col_offset=8), Name('result', Store(), lineno=523, col_offset=17)], Store(), lineno=523, col_offset=8)], Name('success_result', Load(), lineno=523, col_offset=26), lineno=523, col_offset=8), If(Name('success', Load(), lineno=524, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=525, col_offset=12), '_value', Load(), lineno=525, col_offset=12), Slice(BinOp(Name('i', Load(), lineno=525, col_offset=24), Mult(), Attribute(Name('self', Load(), lineno=525, col_offset=26), '_chunksize', Load(), lineno=525, col_offset=26), lineno=525, col_offset=24), BinOp(BinOp(Name('i', Load(), lineno=525, col_offset=43), Add(), Num(1, lineno=525, col_offset=45), lineno=525, col_offset=43), Mult(), Attribute(Name('self', Load(), lineno=525, col_offset=48), '_chunksize', Load(), lineno=525, col_offset=48), lineno=525, col_offset=42), None), Store(), lineno=525, col_offset=12)], Name('result', Load(), lineno=525, col_offset=67), lineno=525, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=526, col_offset=12), '_number_left', Store(), lineno=526, col_offset=12), Sub(), Num(1, lineno=526, col_offset=33), lineno=526, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=527, col_offset=15), '_number_left', Load(), lineno=527, col_offset=15), [Eq()], [Num(0, lineno=527, col_offset=36)], lineno=527, col_offset=15), [If(Attribute(Name('self', Load(), lineno=528, col_offset=19), '_callback', Load(), lineno=528, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=20), '_callback', Load(), lineno=529, col_offset=20), [Attribute(Name('self', Load(), lineno=529, col_offset=35), '_value', Load(), lineno=529, col_offset=35)], [], None, None, lineno=529, col_offset=20), lineno=529, col_offset=20)], [], lineno=528, col_offset=16), Delete([Subscript(Attribute(Name('self', Load(), lineno=530, col_offset=20), '_cache', Load(), lineno=530, col_offset=20), Index(Attribute(Name('self', Load(), lineno=530, col_offset=32), '_job', Load(), lineno=530, col_offset=32)), Del(), lineno=530, col_offset=20)], lineno=530, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=531, col_offset=16), '_cond', Load(), lineno=531, col_offset=16), 'acquire', Load(), lineno=531, col_offset=16), [], [], None, None, lineno=531, col_offset=16), lineno=531, col_offset=16), TryFinally([Assign([Attribute(Name('self', Load(), lineno=533, col_offset=20), '_ready', Store(), lineno=533, col_offset=20)], Name('True', Load(), lineno=533, col_offset=34), lineno=533, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=534, col_offset=20), '_cond', Load(), lineno=534, col_offset=20), 'notify', Load(), lineno=534, col_offset=20), [], [], None, None, lineno=534, col_offset=20), lineno=534, col_offset=20)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=536, col_offset=20), '_cond', Load(), lineno=536, col_offset=20), 'release', Load(), lineno=536, col_offset=20), [], [], None, None, lineno=536, col_offset=20), lineno=536, col_offset=20)], lineno=532, col_offset=16)], [], lineno=527, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=539, col_offset=12), '_success', Store(), lineno=539, col_offset=12)], Name('False', Load(), lineno=539, col_offset=28), lineno=539, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=540, col_offset=12), '_value', Store(), lineno=540, col_offset=12)], Name('result', Load(), lineno=540, col_offset=26), lineno=540, col_offset=12), Delete([Subscript(Attribute(Name('self', Load(), lineno=541, col_offset=16), '_cache', Load(), lineno=541, col_offset=16), Index(Attribute(Name('self', Load(), lineno=541, col_offset=28), '_job', Load(), lineno=541, col_offset=28)), Del(), lineno=541, col_offset=16)], lineno=541, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=542, col_offset=12), '_cond', Load(), lineno=542, col_offset=12), 'acquire', Load(), lineno=542, col_offset=12), [], [], None, None, lineno=542, col_offset=12), lineno=542, col_offset=12), TryFinally([Assign([Attribute(Name('self', Load(), lineno=544, col_offset=16), '_ready', Store(), lineno=544, col_offset=16)], Name('True', Load(), lineno=544, col_offset=30), lineno=544, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=545, col_offset=16), '_cond', Load(), lineno=545, col_offset=16), 'notify', Load(), lineno=545, col_offset=16), [], [], None, None, lineno=545, col_offset=16), lineno=545, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=547, col_offset=16), '_cond', Load(), lineno=547, col_offset=16), 'release', Load(), lineno=547, col_offset=16), [], [], None, None, lineno=547, col_offset=16), lineno=547, col_offset=16)], lineno=543, col_offset=12)], lineno=524, col_offset=8)], [], lineno=522, col_offset=4)], [], lineno=509, col_offset=0), ClassDef('IMapIterator', [Name('object', Load(), lineno=553, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=555, col_offset=17), Name('cache', Param(), lineno=555, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=556, col_offset=8), '_cond', Store(), lineno=556, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=556, col_offset=21), 'Condition', Load(), lineno=556, col_offset=21), [Call(Attribute(Name('threading', Load(), lineno=556, col_offset=41), 'Lock', Load(), lineno=556, col_offset=41), [], [], None, None, lineno=556, col_offset=41)], [], None, None, lineno=556, col_offset=21), lineno=556, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=557, col_offset=8), '_job', Store(), lineno=557, col_offset=8)], Call(Attribute(Name('job_counter', Load(), lineno=557, col_offset=20), 'next', Load(), lineno=557, col_offset=20), [], [], None, None, lineno=557, col_offset=20), lineno=557, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=558, col_offset=8), '_cache', Store(), lineno=558, col_offset=8)], Name('cache', Load(), lineno=558, col_offset=22), lineno=558, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=559, col_offset=8), '_items', Store(), lineno=559, col_offset=8)], Call(Attribute(Name('collections', Load(), lineno=559, col_offset=22), 'deque', Load(), lineno=559, col_offset=22), [], [], None, None, lineno=559, col_offset=22), lineno=559, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=560, col_offset=8), '_index', Store(), lineno=560, col_offset=8)], Num(0, lineno=560, col_offset=22), lineno=560, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=561, col_offset=8), '_length', Store(), lineno=561, col_offset=8)], Name('None', Load(), lineno=561, col_offset=23), lineno=561, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=562, col_offset=8), '_unsorted', Store(), lineno=562, col_offset=8)], Dict([], [], lineno=562, col_offset=25), lineno=562, col_offset=8), Assign([Subscript(Name('cache', Load(), lineno=563, col_offset=8), Index(Attribute(Name('self', Load(), lineno=563, col_offset=14), '_job', Load(), lineno=563, col_offset=14)), Store(), lineno=563, col_offset=8)], Name('self', Load(), lineno=563, col_offset=27), lineno=563, col_offset=8)], [], lineno=555, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=565, col_offset=17)], None, None, []), [Return(Name('self', Load(), lineno=566, col_offset=15), lineno=566, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=568, col_offset=13), Name('timeout', Param(), lineno=568, col_offset=19)], None, None, [Name('None', Load(), lineno=568, col_offset=27)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=569, col_offset=8), '_cond', Load(), lineno=569, col_offset=8), 'acquire', Load(), lineno=569, col_offset=8), [], [], None, None, lineno=569, col_offset=8), lineno=569, col_offset=8), TryFinally([TryExcept([Assign([Name('item', Store(), lineno=572, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=572, col_offset=23), '_items', Load(), lineno=572, col_offset=23), 'popleft', Load(), lineno=572, col_offset=23), [], [], None, None, lineno=572, col_offset=23), lineno=572, col_offset=16)], [ExceptHandler(Name('IndexError', Load(), lineno=573, col_offset=19), None, [If(Compare(Attribute(Name('self', Load(), lineno=574, col_offset=19), '_index', Load(), lineno=574, col_offset=19), [Eq()], [Attribute(Name('self', Load(), lineno=574, col_offset=34), '_length', Load(), lineno=574, col_offset=34)], lineno=574, col_offset=19), [Raise(Name('StopIteration', Load(), lineno=575, col_offset=26), None, None, lineno=575, col_offset=20)], [], lineno=574, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=576, col_offset=16), '_cond', Load(), lineno=576, col_offset=16), 'wait', Load(), lineno=576, col_offset=16), [Name('timeout', Load(), lineno=576, col_offset=32)], [], None, None, lineno=576, col_offset=16), lineno=576, col_offset=16), TryExcept([Assign([Name('item', Store(), lineno=578, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=578, col_offset=27), '_items', Load(), lineno=578, col_offset=27), 'popleft', Load(), lineno=578, col_offset=27), [], [], None, None, lineno=578, col_offset=27), lineno=578, col_offset=20)], [ExceptHandler(Name('IndexError', Load(), lineno=579, col_offset=23), None, [If(Compare(Attribute(Name('self', Load(), lineno=580, col_offset=23), '_index', Load(), lineno=580, col_offset=23), [Eq()], [Attribute(Name('self', Load(), lineno=580, col_offset=38), '_length', Load(), lineno=580, col_offset=38)], lineno=580, col_offset=23), [Raise(Name('StopIteration', Load(), lineno=581, col_offset=30), None, None, lineno=581, col_offset=24)], [], lineno=580, col_offset=20), Raise(Name('TimeoutError', Load(), lineno=582, col_offset=26), None, None, lineno=582, col_offset=20)], lineno=579, col_offset=16)], [], lineno=577, col_offset=16)], lineno=573, col_offset=12)], [], lineno=571, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=584, col_offset=12), '_cond', Load(), lineno=584, col_offset=12), 'release', Load(), lineno=584, col_offset=12), [], [], None, None, lineno=584, col_offset=12), lineno=584, col_offset=12)], lineno=570, col_offset=8), Assign([Tuple([Name('success', Store(), lineno=586, col_offset=8), Name('value', Store(), lineno=586, col_offset=17)], Store(), lineno=586, col_offset=8)], Name('item', Load(), lineno=586, col_offset=25), lineno=586, col_offset=8), If(Name('success', Load(), lineno=587, col_offset=11), [Return(Name('value', Load(), lineno=588, col_offset=19), lineno=588, col_offset=12)], [], lineno=587, col_offset=8), Raise(Name('value', Load(), lineno=589, col_offset=14), None, None, lineno=589, col_offset=8)], [], lineno=568, col_offset=4), Assign([Name('__next__', Store(), lineno=591, col_offset=4)], Name('next', Load(), lineno=591, col_offset=15), lineno=591, col_offset=4), FunctionDef('_set', arguments([Name('self', Param(), lineno=593, col_offset=13), Name('i', Param(), lineno=593, col_offset=19), Name('obj', Param(), lineno=593, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=594, col_offset=8), '_cond', Load(), lineno=594, col_offset=8), 'acquire', Load(), lineno=594, col_offset=8), [], [], None, None, lineno=594, col_offset=8), lineno=594, col_offset=8), TryFinally([If(Compare(Attribute(Name('self', Load(), lineno=596, col_offset=15), '_index', Load(), lineno=596, col_offset=15), [Eq()], [Name('i', Load(), lineno=596, col_offset=30)], lineno=596, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=597, col_offset=16), '_items', Load(), lineno=597, col_offset=16), 'append', Load(), lineno=597, col_offset=16), [Name('obj', Load(), lineno=597, col_offset=35)], [], None, None, lineno=597, col_offset=16), lineno=597, col_offset=16), AugAssign(Attribute(Name('self', Load(), lineno=598, col_offset=16), '_index', Store(), lineno=598, col_offset=16), Add(), Num(1, lineno=598, col_offset=31), lineno=598, col_offset=16), While(Compare(Attribute(Name('self', Load(), lineno=599, col_offset=22), '_index', Load(), lineno=599, col_offset=22), [In()], [Attribute(Name('self', Load(), lineno=599, col_offset=37), '_unsorted', Load(), lineno=599, col_offset=37)], lineno=599, col_offset=22), [Assign([Name('obj', Store(), lineno=600, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=600, col_offset=26), '_unsorted', Load(), lineno=600, col_offset=26), 'pop', Load(), lineno=600, col_offset=26), [Attribute(Name('self', Load(), lineno=600, col_offset=45), '_index', Load(), lineno=600, col_offset=45)], [], None, None, lineno=600, col_offset=26), lineno=600, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=601, col_offset=20), '_items', Load(), lineno=601, col_offset=20), 'append', Load(), lineno=601, col_offset=20), [Name('obj', Load(), lineno=601, col_offset=39)], [], None, None, lineno=601, col_offset=20), lineno=601, col_offset=20), AugAssign(Attribute(Name('self', Load(), lineno=602, col_offset=20), '_index', Store(), lineno=602, col_offset=20), Add(), Num(1, lineno=602, col_offset=35), lineno=602, col_offset=20)], [], lineno=599, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=603, col_offset=16), '_cond', Load(), lineno=603, col_offset=16), 'notify', Load(), lineno=603, col_offset=16), [], [], None, None, lineno=603, col_offset=16), lineno=603, col_offset=16)], [Assign([Subscript(Attribute(Name('self', Load(), lineno=605, col_offset=16), '_unsorted', Load(), lineno=605, col_offset=16), Index(Name('i', Load(), lineno=605, col_offset=31)), Store(), lineno=605, col_offset=16)], Name('obj', Load(), lineno=605, col_offset=36), lineno=605, col_offset=16)], lineno=596, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=607, col_offset=15), '_index', Load(), lineno=607, col_offset=15), [Eq()], [Attribute(Name('self', Load(), lineno=607, col_offset=30), '_length', Load(), lineno=607, col_offset=30)], lineno=607, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=608, col_offset=20), '_cache', Load(), lineno=608, col_offset=20), Index(Attribute(Name('self', Load(), lineno=608, col_offset=32), '_job', Load(), lineno=608, col_offset=32)), Del(), lineno=608, col_offset=20)], lineno=608, col_offset=16)], [], lineno=607, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=610, col_offset=12), '_cond', Load(), lineno=610, col_offset=12), 'release', Load(), lineno=610, col_offset=12), [], [], None, None, lineno=610, col_offset=12), lineno=610, col_offset=12)], lineno=595, col_offset=8)], [], lineno=593, col_offset=4), FunctionDef('_set_length', arguments([Name('self', Param(), lineno=612, col_offset=20), Name('length', Param(), lineno=612, col_offset=26)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=613, col_offset=8), '_cond', Load(), lineno=613, col_offset=8), 'acquire', Load(), lineno=613, col_offset=8), [], [], None, None, lineno=613, col_offset=8), lineno=613, col_offset=8), TryFinally([Assign([Attribute(Name('self', Load(), lineno=615, col_offset=12), '_length', Store(), lineno=615, col_offset=12)], Name('length', Load(), lineno=615, col_offset=27), lineno=615, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=616, col_offset=15), '_index', Load(), lineno=616, col_offset=15), [Eq()], [Attribute(Name('self', Load(), lineno=616, col_offset=30), '_length', Load(), lineno=616, col_offset=30)], lineno=616, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=617, col_offset=16), '_cond', Load(), lineno=617, col_offset=16), 'notify', Load(), lineno=617, col_offset=16), [], [], None, None, lineno=617, col_offset=16), lineno=617, col_offset=16), Delete([Subscript(Attribute(Name('self', Load(), lineno=618, col_offset=20), '_cache', Load(), lineno=618, col_offset=20), Index(Attribute(Name('self', Load(), lineno=618, col_offset=32), '_job', Load(), lineno=618, col_offset=32)), Del(), lineno=618, col_offset=20)], lineno=618, col_offset=16)], [], lineno=616, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=620, col_offset=12), '_cond', Load(), lineno=620, col_offset=12), 'release', Load(), lineno=620, col_offset=12), [], [], None, None, lineno=620, col_offset=12), lineno=620, col_offset=12)], lineno=614, col_offset=8)], [], lineno=612, col_offset=4)], [], lineno=553, col_offset=0), ClassDef('IMapUnorderedIterator', [Name('IMapIterator', Load(), lineno=626, col_offset=28)], [FunctionDef('_set', arguments([Name('self', Param(), lineno=628, col_offset=13), Name('i', Param(), lineno=628, col_offset=19), Name('obj', Param(), lineno=628, col_offset=22)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=629, col_offset=8), '_cond', Load(), lineno=629, col_offset=8), 'acquire', Load(), lineno=629, col_offset=8), [], [], None, None, lineno=629, col_offset=8), lineno=629, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=631, col_offset=12), '_items', Load(), lineno=631, col_offset=12), 'append', Load(), lineno=631, col_offset=12), [Name('obj', Load(), lineno=631, col_offset=31)], [], None, None, lineno=631, col_offset=12), lineno=631, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=632, col_offset=12), '_index', Store(), lineno=632, col_offset=12), Add(), Num(1, lineno=632, col_offset=27), lineno=632, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=633, col_offset=12), '_cond', Load(), lineno=633, col_offset=12), 'notify', Load(), lineno=633, col_offset=12), [], [], None, None, lineno=633, col_offset=12), lineno=633, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=634, col_offset=15), '_index', Load(), lineno=634, col_offset=15), [Eq()], [Attribute(Name('self', Load(), lineno=634, col_offset=30), '_length', Load(), lineno=634, col_offset=30)], lineno=634, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=635, col_offset=20), '_cache', Load(), lineno=635, col_offset=20), Index(Attribute(Name('self', Load(), lineno=635, col_offset=32), '_job', Load(), lineno=635, col_offset=32)), Del(), lineno=635, col_offset=20)], lineno=635, col_offset=16)], [], lineno=634, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=637, col_offset=12), '_cond', Load(), lineno=637, col_offset=12), 'release', Load(), lineno=637, col_offset=12), [], [], None, None, lineno=637, col_offset=12), lineno=637, col_offset=12)], lineno=630, col_offset=8)], [], lineno=628, col_offset=4)], [], lineno=626, col_offset=0), ClassDef('ThreadPool', [Name('Pool', Load(), lineno=643, col_offset=17)], [ImportFrom('dummy', [alias('Process', None)], 1, lineno=645, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=647, col_offset=17), Name('processes', Param(), lineno=647, col_offset=23), Name('initializer', Param(), lineno=647, col_offset=39), Name('initargs', Param(), lineno=647, col_offset=57)], None, None, [Name('None', Load(), lineno=647, col_offset=33), Name('None', Load(), lineno=647, col_offset=51), Tuple([], Load(), lineno=647, col_offset=66)]), [Expr(Call(Attribute(Name('Pool', Load(), lineno=648, col_offset=8), '__init__', Load(), lineno=648, col_offset=8), [Name('self', Load(), lineno=648, col_offset=22), Name('processes', Load(), lineno=648, col_offset=28), Name('initializer', Load(), lineno=648, col_offset=39), Name('initargs', Load(), lineno=648, col_offset=52)], [], None, None, lineno=648, col_offset=8), lineno=648, col_offset=8)], [], lineno=647, col_offset=4), FunctionDef('_setup_queues', arguments([Name('self', Param(), lineno=650, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=651, col_offset=8), '_inqueue', Store(), lineno=651, col_offset=8)], Call(Attribute(Name('Queue', Load(), lineno=651, col_offset=24), 'Queue', Load(), lineno=651, col_offset=24), [], [], None, None, lineno=651, col_offset=24), lineno=651, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=652, col_offset=8), '_outqueue', Store(), lineno=652, col_offset=8)], Call(Attribute(Name('Queue', Load(), lineno=652, col_offset=25), 'Queue', Load(), lineno=652, col_offset=25), [], [], None, None, lineno=652, col_offset=25), lineno=652, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=653, col_offset=8), '_quick_put', Store(), lineno=653, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=653, col_offset=26), '_inqueue', Load(), lineno=653, col_offset=26), 'put', Load(), lineno=653, col_offset=26), lineno=653, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=654, col_offset=8), '_quick_get', Store(), lineno=654, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=654, col_offset=26), '_outqueue', Load(), lineno=654, col_offset=26), 'get', Load(), lineno=654, col_offset=26), lineno=654, col_offset=8)], [], lineno=650, col_offset=4), FunctionDef('_help_stuff_finish', arguments([Name('inqueue', Param(), lineno=657, col_offset=27), Name('task_handler', Param(), lineno=657, col_offset=36), Name('size', Param(), lineno=657, col_offset=50)], None, None, []), [Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=659, col_offset=8), 'not_empty', Load(), lineno=659, col_offset=8), 'acquire', Load(), lineno=659, col_offset=8), [], [], None, None, lineno=659, col_offset=8), lineno=659, col_offset=8), TryFinally([Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=661, col_offset=12), 'queue', Load(), lineno=661, col_offset=12), 'clear', Load(), lineno=661, col_offset=12), [], [], None, None, lineno=661, col_offset=12), lineno=661, col_offset=12), Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=662, col_offset=12), 'queue', Load(), lineno=662, col_offset=12), 'extend', Load(), lineno=662, col_offset=12), [BinOp(List([Name('None', Load(), lineno=662, col_offset=34)], Load(), lineno=662, col_offset=33), Mult(), Name('size', Load(), lineno=662, col_offset=42), lineno=662, col_offset=33)], [], None, None, lineno=662, col_offset=12), lineno=662, col_offset=12), Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=663, col_offset=12), 'not_empty', Load(), lineno=663, col_offset=12), 'notify_all', Load(), lineno=663, col_offset=12), [], [], None, None, lineno=663, col_offset=12), lineno=663, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('inqueue', Load(), lineno=665, col_offset=12), 'not_empty', Load(), lineno=665, col_offset=12), 'release', Load(), lineno=665, col_offset=12), [], [], None, None, lineno=665, col_offset=12), lineno=665, col_offset=12)], lineno=660, col_offset=8)], [Name('staticmethod', Load(), lineno=656, col_offset=5)], lineno=656, col_offset=4)], [], lineno=643, col_offset=0)])
