Module([Import([alias('sys', None)], lineno=1, col_offset=0), Import([alias('imp', None)], lineno=2, col_offset=0), Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), Assign([Name('test_src', Store(), lineno=8, col_offset=0)], Str('def get_name():\n    return __name__\ndef get_file():\n    return __file__\n', lineno=13, col_offset=-1), lineno=8, col_offset=0), Assign([Name('absimp', Store(), lineno=15, col_offset=0)], Str('import sub\n', lineno=15, col_offset=9), lineno=15, col_offset=0), Assign([Name('relimp', Store(), lineno=16, col_offset=0)], Str('from . import sub\n', lineno=16, col_offset=9), lineno=16, col_offset=0), Assign([Name('deeprelimp', Store(), lineno=17, col_offset=0)], Str('from .... import sub\n', lineno=17, col_offset=13), lineno=17, col_offset=0), Assign([Name('futimp', Store(), lineno=18, col_offset=0)], Str('from __future__ import absolute_import\n', lineno=18, col_offset=9), lineno=18, col_offset=0), Assign([Name('reload_src', Store(), lineno=20, col_offset=0)], BinOp(Name('test_src', Load(), lineno=20, col_offset=13), Add(), Str('reloaded = True\n', lineno=22, col_offset=-1), lineno=20, col_offset=13), lineno=20, col_offset=0), Assign([Name('test_co', Store(), lineno=24, col_offset=0)], Call(Name('compile', Load(), lineno=24, col_offset=10), [Name('test_src', Load(), lineno=24, col_offset=18), Str('<???>', lineno=24, col_offset=28), Str('exec', lineno=24, col_offset=37)], [], None, None, lineno=24, col_offset=10), lineno=24, col_offset=0), Assign([Name('reload_co', Store(), lineno=25, col_offset=0)], Call(Name('compile', Load(), lineno=25, col_offset=12), [Name('reload_src', Load(), lineno=25, col_offset=20), Str('<???>', lineno=25, col_offset=32), Str('exec', lineno=25, col_offset=41)], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=0), Assign([Name('test2_oldabs_co', Store(), lineno=27, col_offset=0)], Call(Name('compile', Load(), lineno=27, col_offset=18), [BinOp(Name('absimp', Load(), lineno=27, col_offset=26), Add(), Name('test_src', Load(), lineno=27, col_offset=35), lineno=27, col_offset=26), Str('<???>', lineno=27, col_offset=45), Str('exec', lineno=27, col_offset=54)], [], None, None, lineno=27, col_offset=18), lineno=27, col_offset=0), Assign([Name('test2_newabs_co', Store(), lineno=28, col_offset=0)], Call(Name('compile', Load(), lineno=28, col_offset=18), [BinOp(BinOp(Name('futimp', Load(), lineno=28, col_offset=26), Add(), Name('absimp', Load(), lineno=28, col_offset=35), lineno=28, col_offset=26), Add(), Name('test_src', Load(), lineno=28, col_offset=44), lineno=28, col_offset=42), Str('<???>', lineno=28, col_offset=54), Str('exec', lineno=28, col_offset=63)], [], None, None, lineno=28, col_offset=18), lineno=28, col_offset=0), Assign([Name('test2_newrel_co', Store(), lineno=29, col_offset=0)], Call(Name('compile', Load(), lineno=29, col_offset=18), [BinOp(Name('relimp', Load(), lineno=29, col_offset=26), Add(), Name('test_src', Load(), lineno=29, col_offset=35), lineno=29, col_offset=26), Str('<???>', lineno=29, col_offset=45), Str('exec', lineno=29, col_offset=54)], [], None, None, lineno=29, col_offset=18), lineno=29, col_offset=0), Assign([Name('test2_deeprel_co', Store(), lineno=30, col_offset=0)], Call(Name('compile', Load(), lineno=30, col_offset=19), [BinOp(Name('deeprelimp', Load(), lineno=30, col_offset=27), Add(), Name('test_src', Load(), lineno=30, col_offset=40), lineno=30, col_offset=27), Str('<???>', lineno=30, col_offset=50), Str('exec', lineno=30, col_offset=59)], [], None, None, lineno=30, col_offset=19), lineno=30, col_offset=0), Assign([Name('test2_futrel_co', Store(), lineno=31, col_offset=0)], Call(Name('compile', Load(), lineno=31, col_offset=18), [BinOp(BinOp(Name('futimp', Load(), lineno=31, col_offset=26), Add(), Name('relimp', Load(), lineno=31, col_offset=35), lineno=31, col_offset=26), Add(), Name('test_src', Load(), lineno=31, col_offset=44), lineno=31, col_offset=42), Str('<???>', lineno=31, col_offset=54), Str('exec', lineno=31, col_offset=63)], [], None, None, lineno=31, col_offset=18), lineno=31, col_offset=0), Assign([Name('test_path', Store(), lineno=33, col_offset=0)], Str('!!!_test_!!!', lineno=33, col_offset=12), lineno=33, col_offset=0), ClassDef('TestImporter', [], [Assign([Name('modules', Store(), lineno=38, col_offset=4)], Dict([Str('hooktestmodule', lineno=39, col_offset=8), Str('hooktestpackage', lineno=40, col_offset=8), Str('hooktestpackage.sub', lineno=41, col_offset=8), Str('hooktestpackage.sub.subber', lineno=42, col_offset=8), Str('hooktestpackage.oldabs', lineno=43, col_offset=8), Str('hooktestpackage.newabs', lineno=44, col_offset=8), Str('hooktestpackage.newrel', lineno=45, col_offset=8), Str('hooktestpackage.sub.subber.subest', lineno=46, col_offset=8), Str('hooktestpackage.futrel', lineno=47, col_offset=8), Str('sub', lineno=48, col_offset=8), Str('reloadmodule', lineno=49, col_offset=8)], [Tuple([Name('False', Load(), lineno=39, col_offset=27), Name('test_co', Load(), lineno=39, col_offset=34)], Load(), lineno=39, col_offset=27), Tuple([Name('True', Load(), lineno=40, col_offset=28), Name('test_co', Load(), lineno=40, col_offset=34)], Load(), lineno=40, col_offset=28), Tuple([Name('True', Load(), lineno=41, col_offset=32), Name('test_co', Load(), lineno=41, col_offset=38)], Load(), lineno=41, col_offset=32), Tuple([Name('True', Load(), lineno=42, col_offset=39), Name('test_co', Load(), lineno=42, col_offset=45)], Load(), lineno=42, col_offset=39), Tuple([Name('False', Load(), lineno=43, col_offset=35), Name('test2_oldabs_co', Load(), lineno=43, col_offset=42)], Load(), lineno=43, col_offset=35), Tuple([Name('False', Load(), lineno=44, col_offset=35), Name('test2_newabs_co', Load(), lineno=44, col_offset=42)], Load(), lineno=44, col_offset=35), Tuple([Name('False', Load(), lineno=45, col_offset=35), Name('test2_newrel_co', Load(), lineno=45, col_offset=42)], Load(), lineno=45, col_offset=35), Tuple([Name('True', Load(), lineno=46, col_offset=46), Name('test2_deeprel_co', Load(), lineno=46, col_offset=52)], Load(), lineno=46, col_offset=46), Tuple([Name('False', Load(), lineno=47, col_offset=35), Name('test2_futrel_co', Load(), lineno=47, col_offset=42)], Load(), lineno=47, col_offset=35), Tuple([Name('False', Load(), lineno=48, col_offset=16), Name('test_co', Load(), lineno=48, col_offset=23)], Load(), lineno=48, col_offset=16), Tuple([Name('False', Load(), lineno=49, col_offset=25), Name('test_co', Load(), lineno=49, col_offset=32)], Load(), lineno=49, col_offset=25)], lineno=38, col_offset=14), lineno=38, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=52, col_offset=17), Name('path', Param(), lineno=52, col_offset=23)], None, None, [Name('test_path', Load(), lineno=52, col_offset=28)]), [If(Compare(Name('path', Load(), lineno=53, col_offset=11), [NotEq()], [Name('test_path', Load(), lineno=53, col_offset=19)], lineno=53, col_offset=11), [Raise(Name('ImportError', Load(), lineno=56, col_offset=18), None, None, lineno=56, col_offset=12)], [], lineno=53, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=57, col_offset=8), 'path', Store(), lineno=57, col_offset=8)], Name('path', Load(), lineno=57, col_offset=20), lineno=57, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('_get__path__', arguments([Name('self', Param(), lineno=59, col_offset=21)], None, None, []), [Raise(Name('NotImplementedError', Load(), lineno=60, col_offset=14), None, None, lineno=60, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('find_module', arguments([Name('self', Param(), lineno=62, col_offset=20), Name('fullname', Param(), lineno=62, col_offset=26), Name('path', Param(), lineno=62, col_offset=36)], None, None, [Name('None', Load(), lineno=62, col_offset=41)]), [If(Compare(Name('fullname', Load(), lineno=63, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=63, col_offset=23), 'modules', Load(), lineno=63, col_offset=23)], lineno=63, col_offset=11), [Return(Name('self', Load(), lineno=64, col_offset=19), lineno=64, col_offset=12)], [Return(Name('None', Load(), lineno=66, col_offset=19), lineno=66, col_offset=12)], lineno=63, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=68, col_offset=20), Name('fullname', Param(), lineno=68, col_offset=26)], None, None, []), [Assign([Tuple([Name('ispkg', Store(), lineno=69, col_offset=8), Name('code', Store(), lineno=69, col_offset=15)], Store(), lineno=69, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=69, col_offset=22), 'modules', Load(), lineno=69, col_offset=22), Index(Name('fullname', Load(), lineno=69, col_offset=35)), Load(), lineno=69, col_offset=22), lineno=69, col_offset=8), Assign([Name('mod', Store(), lineno=70, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=70, col_offset=14), 'modules', Load(), lineno=70, col_offset=14), 'setdefault', Load(), lineno=70, col_offset=14), [Name('fullname', Load(), lineno=70, col_offset=37), Call(Attribute(Name('imp', Load(), lineno=70, col_offset=46), 'new_module', Load(), lineno=70, col_offset=46), [Name('fullname', Load(), lineno=70, col_offset=61)], [], None, None, lineno=70, col_offset=46)], [], None, None, lineno=70, col_offset=14), lineno=70, col_offset=8), Assign([Attribute(Name('mod', Load(), lineno=71, col_offset=8), '__file__', Store(), lineno=71, col_offset=8)], BinOp(Str('<%s>', lineno=71, col_offset=23), Mod(), Attribute(Attribute(Name('self', Load(), lineno=71, col_offset=32), '__class__', Load(), lineno=71, col_offset=32), '__name__', Load(), lineno=71, col_offset=32), lineno=71, col_offset=23), lineno=71, col_offset=8), Assign([Attribute(Name('mod', Load(), lineno=72, col_offset=8), '__loader__', Store(), lineno=72, col_offset=8)], Name('self', Load(), lineno=72, col_offset=25), lineno=72, col_offset=8), If(Name('ispkg', Load(), lineno=73, col_offset=11), [Assign([Attribute(Name('mod', Load(), lineno=74, col_offset=12), '__path__', Store(), lineno=74, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=74, col_offset=27), '_get__path__', Load(), lineno=74, col_offset=27), [], [], None, None, lineno=74, col_offset=27), lineno=74, col_offset=12)], [], lineno=73, col_offset=8), Exec(Name('code', Load(), lineno=75, col_offset=13), Attribute(Name('mod', Load(), lineno=75, col_offset=21), '__dict__', Load(), lineno=75, col_offset=21), None, lineno=75, col_offset=8), Return(Name('mod', Load(), lineno=76, col_offset=15), lineno=76, col_offset=8)], [], lineno=68, col_offset=4)], [], lineno=36, col_offset=0), ClassDef('MetaImporter', [Name('TestImporter', Load(), lineno=79, col_offset=19)], [FunctionDef('_get__path__', arguments([Name('self', Param(), lineno=80, col_offset=21)], None, None, []), [Return(List([], Load(), lineno=81, col_offset=15), lineno=81, col_offset=8)], [], lineno=80, col_offset=4)], [], lineno=79, col_offset=0), ClassDef('PathImporter', [Name('TestImporter', Load(), lineno=83, col_offset=19)], [FunctionDef('_get__path__', arguments([Name('self', Param(), lineno=84, col_offset=21)], None, None, []), [Return(List([Attribute(Name('self', Load(), lineno=85, col_offset=16), 'path', Load(), lineno=85, col_offset=16)], Load(), lineno=85, col_offset=15), lineno=85, col_offset=8)], [], lineno=84, col_offset=4)], [], lineno=83, col_offset=0), ClassDef('ImportBlocker', [], [Expr(Str("Place an ImportBlocker instance on sys.meta_path and you\n    can be sure the modules you specified can't be imported, even\n    if it's a builtin.", lineno=91, col_offset=-1), lineno=91, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=92, col_offset=17)], 'namestoblock', None, []), [Assign([Attribute(Name('self', Load(), lineno=93, col_offset=8), 'namestoblock', Store(), lineno=93, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=93, col_offset=28), 'fromkeys', Load(), lineno=93, col_offset=28), [Name('namestoblock', Load(), lineno=93, col_offset=42)], [], None, None, lineno=93, col_offset=28), lineno=93, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('find_module', arguments([Name('self', Param(), lineno=94, col_offset=20), Name('fullname', Param(), lineno=94, col_offset=26), Name('path', Param(), lineno=94, col_offset=36)], None, None, [Name('None', Load(), lineno=94, col_offset=41)]), [If(Compare(Name('fullname', Load(), lineno=95, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=95, col_offset=23), 'namestoblock', Load(), lineno=95, col_offset=23)], lineno=95, col_offset=11), [Return(Name('self', Load(), lineno=96, col_offset=19), lineno=96, col_offset=12)], [], lineno=95, col_offset=8), Return(Name('None', Load(), lineno=97, col_offset=15), lineno=97, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=98, col_offset=20), Name('fullname', Param(), lineno=98, col_offset=26)], None, None, []), [Raise(Name('ImportError', Load(), lineno=99, col_offset=14), Str('I dare you', lineno=99, col_offset=27), None, lineno=99, col_offset=8)], [], lineno=98, col_offset=4)], [], lineno=88, col_offset=0), ClassDef('ImpWrapper', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=104, col_offset=17), Name('path', Param(), lineno=104, col_offset=23)], None, None, [Name('None', Load(), lineno=104, col_offset=28)]), [If(BoolOp(And(), [Compare(Name('path', Load(), lineno=105, col_offset=11), [IsNot()], [Name('None', Load(), lineno=105, col_offset=23)], lineno=105, col_offset=11), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=105, col_offset=36), 'path', Load(), lineno=105, col_offset=36), 'isdir', Load(), lineno=105, col_offset=36), [Name('path', Load(), lineno=105, col_offset=50)], [], None, None, lineno=105, col_offset=36), lineno=105, col_offset=32)], lineno=105, col_offset=11), [Raise(Name('ImportError', Load(), lineno=106, col_offset=18), None, None, lineno=106, col_offset=12)], [], lineno=105, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=107, col_offset=8), 'path', Store(), lineno=107, col_offset=8)], Name('path', Load(), lineno=107, col_offset=20), lineno=107, col_offset=8)], [], lineno=104, col_offset=4), FunctionDef('find_module', arguments([Name('self', Param(), lineno=109, col_offset=20), Name('fullname', Param(), lineno=109, col_offset=26), Name('path', Param(), lineno=109, col_offset=36)], None, None, [Name('None', Load(), lineno=109, col_offset=41)]), [Assign([Name('subname', Store(), lineno=110, col_offset=8)], Subscript(Call(Attribute(Name('fullname', Load(), lineno=110, col_offset=18), 'split', Load(), lineno=110, col_offset=18), [Str('.', lineno=110, col_offset=33)], [], None, None, lineno=110, col_offset=18), Index(Num(-1, lineno=110, col_offset=39)), Load(), lineno=110, col_offset=18), lineno=110, col_offset=8), If(BoolOp(And(), [Compare(Name('subname', Load(), lineno=111, col_offset=11), [NotEq()], [Name('fullname', Load(), lineno=111, col_offset=22)], lineno=111, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=111, col_offset=35), 'path', Load(), lineno=111, col_offset=35), [Is()], [Name('None', Load(), lineno=111, col_offset=48)], lineno=111, col_offset=35)], lineno=111, col_offset=11), [Return(Name('None', Load(), lineno=112, col_offset=19), lineno=112, col_offset=12)], [], lineno=111, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=113, col_offset=11), 'path', Load(), lineno=113, col_offset=11), [Is()], [Name('None', Load(), lineno=113, col_offset=24)], lineno=113, col_offset=11), [Assign([Name('path', Store(), lineno=114, col_offset=12)], Name('None', Load(), lineno=114, col_offset=19), lineno=114, col_offset=12)], [Assign([Name('path', Store(), lineno=116, col_offset=12)], List([Attribute(Name('self', Load(), lineno=116, col_offset=20), 'path', Load(), lineno=116, col_offset=20)], Load(), lineno=116, col_offset=19), lineno=116, col_offset=12)], lineno=113, col_offset=8), TryExcept([Assign([Tuple([Name('file', Store(), lineno=118, col_offset=12), Name('filename', Store(), lineno=118, col_offset=18), Name('stuff', Store(), lineno=118, col_offset=28)], Store(), lineno=118, col_offset=12)], Call(Attribute(Name('imp', Load(), lineno=118, col_offset=36), 'find_module', Load(), lineno=118, col_offset=36), [Name('subname', Load(), lineno=118, col_offset=52), Name('path', Load(), lineno=118, col_offset=61)], [], None, None, lineno=118, col_offset=36), lineno=118, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=119, col_offset=15), None, [Return(Name('None', Load(), lineno=120, col_offset=19), lineno=120, col_offset=12)], lineno=119, col_offset=8)], [], lineno=117, col_offset=8), Return(Call(Name('ImpLoader', Load(), lineno=121, col_offset=15), [Name('file', Load(), lineno=121, col_offset=25), Name('filename', Load(), lineno=121, col_offset=31), Name('stuff', Load(), lineno=121, col_offset=41)], [], None, None, lineno=121, col_offset=15), lineno=121, col_offset=8)], [], lineno=109, col_offset=4)], [], lineno=102, col_offset=0), ClassDef('ImpLoader', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=126, col_offset=17), Name('file', Param(), lineno=126, col_offset=23), Name('filename', Param(), lineno=126, col_offset=29), Name('stuff', Param(), lineno=126, col_offset=39)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=127, col_offset=8), 'file', Store(), lineno=127, col_offset=8)], Name('file', Load(), lineno=127, col_offset=20), lineno=127, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=128, col_offset=8), 'filename', Store(), lineno=128, col_offset=8)], Name('filename', Load(), lineno=128, col_offset=24), lineno=128, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=129, col_offset=8), 'stuff', Store(), lineno=129, col_offset=8)], Name('stuff', Load(), lineno=129, col_offset=21), lineno=129, col_offset=8)], [], lineno=126, col_offset=4), FunctionDef('load_module', arguments([Name('self', Param(), lineno=131, col_offset=20), Name('fullname', Param(), lineno=131, col_offset=26)], None, None, []), [Assign([Name('mod', Store(), lineno=132, col_offset=8)], Call(Attribute(Name('imp', Load(), lineno=132, col_offset=14), 'load_module', Load(), lineno=132, col_offset=14), [Name('fullname', Load(), lineno=132, col_offset=30), Attribute(Name('self', Load(), lineno=132, col_offset=40), 'file', Load(), lineno=132, col_offset=40), Attribute(Name('self', Load(), lineno=132, col_offset=51), 'filename', Load(), lineno=132, col_offset=51), Attribute(Name('self', Load(), lineno=132, col_offset=66), 'stuff', Load(), lineno=132, col_offset=66)], [], None, None, lineno=132, col_offset=14), lineno=132, col_offset=8), If(Attribute(Name('self', Load(), lineno=133, col_offset=11), 'file', Load(), lineno=133, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=12), 'file', Load(), lineno=134, col_offset=12), 'close', Load(), lineno=134, col_offset=12), [], [], None, None, lineno=134, col_offset=12), lineno=134, col_offset=12)], [], lineno=133, col_offset=8), Assign([Attribute(Name('mod', Load(), lineno=135, col_offset=8), '__loader__', Store(), lineno=135, col_offset=8)], Name('self', Load(), lineno=135, col_offset=25), lineno=135, col_offset=8), Return(Name('mod', Load(), lineno=136, col_offset=15), lineno=136, col_offset=8)], [], lineno=131, col_offset=4)], [], lineno=124, col_offset=0), ClassDef('ImportHooksBaseTestCase', [Attribute(Name('unittest', Load(), lineno=139, col_offset=30), 'TestCase', Load(), lineno=139, col_offset=30)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=141, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=142, col_offset=8), 'path', Store(), lineno=142, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=142, col_offset=20), 'path', Load(), lineno=142, col_offset=20), Slice(None, None, None), Load(), lineno=142, col_offset=20), lineno=142, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=143, col_offset=8), 'meta_path', Store(), lineno=143, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=143, col_offset=25), 'meta_path', Load(), lineno=143, col_offset=25), Slice(None, None, None), Load(), lineno=143, col_offset=25), lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), 'path_hooks', Store(), lineno=144, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=144, col_offset=26), 'path_hooks', Load(), lineno=144, col_offset=26), Slice(None, None, None), Load(), lineno=144, col_offset=26), lineno=144, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=145, col_offset=8), 'path_importer_cache', Load(), lineno=145, col_offset=8), 'clear', Load(), lineno=145, col_offset=8), [], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=146, col_offset=8), 'modules_before', Store(), lineno=146, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=146, col_offset=30), 'modules', Load(), lineno=146, col_offset=30), 'copy', Load(), lineno=146, col_offset=30), [], [], None, None, lineno=146, col_offset=30), lineno=146, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=148, col_offset=17)], None, None, []), [Assign([Subscript(Attribute(Name('sys', Load(), lineno=149, col_offset=8), 'path', Load(), lineno=149, col_offset=8), Slice(None, None, None), Store(), lineno=149, col_offset=8)], Attribute(Name('self', Load(), lineno=149, col_offset=22), 'path', Load(), lineno=149, col_offset=22), lineno=149, col_offset=8), Assign([Subscript(Attribute(Name('sys', Load(), lineno=150, col_offset=8), 'meta_path', Load(), lineno=150, col_offset=8), Slice(None, None, None), Store(), lineno=150, col_offset=8)], Attribute(Name('self', Load(), lineno=150, col_offset=27), 'meta_path', Load(), lineno=150, col_offset=27), lineno=150, col_offset=8), Assign([Subscript(Attribute(Name('sys', Load(), lineno=151, col_offset=8), 'path_hooks', Load(), lineno=151, col_offset=8), Slice(None, None, None), Store(), lineno=151, col_offset=8)], Attribute(Name('self', Load(), lineno=151, col_offset=28), 'path_hooks', Load(), lineno=151, col_offset=28), lineno=151, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=152, col_offset=8), 'path_importer_cache', Load(), lineno=152, col_offset=8), 'clear', Load(), lineno=152, col_offset=8), [], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=153, col_offset=8), 'modules', Load(), lineno=153, col_offset=8), 'clear', Load(), lineno=153, col_offset=8), [], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=154, col_offset=8), 'modules', Load(), lineno=154, col_offset=8), 'update', Load(), lineno=154, col_offset=8), [Attribute(Name('self', Load(), lineno=154, col_offset=27), 'modules_before', Load(), lineno=154, col_offset=27)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=148, col_offset=4)], [], lineno=139, col_offset=0), ClassDef('ImportHooksTestCase', [Name('ImportHooksBaseTestCase', Load(), lineno=157, col_offset=26)], [FunctionDef('doTestImports', arguments([Name('self', Param(), lineno=159, col_offset=22), Name('importer', Param(), lineno=159, col_offset=28)], None, None, [Name('None', Load(), lineno=159, col_offset=37)]), [Import([alias('hooktestmodule', None)], lineno=160, col_offset=8), Import([alias('hooktestpackage', None)], lineno=161, col_offset=8), Import([alias('hooktestpackage.sub', None)], lineno=162, col_offset=8), Import([alias('hooktestpackage.sub.subber', None)], lineno=163, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=8), 'assertEqual', Load(), lineno=164, col_offset=8), [Call(Attribute(Name('hooktestmodule', Load(), lineno=164, col_offset=25), 'get_name', Load(), lineno=164, col_offset=25), [], [], None, None, lineno=164, col_offset=25), Str('hooktestmodule', lineno=165, col_offset=25)], [], None, None, lineno=164, col_offset=8), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'assertEqual', Load(), lineno=166, col_offset=8), [Call(Attribute(Name('hooktestpackage', Load(), lineno=166, col_offset=25), 'get_name', Load(), lineno=166, col_offset=25), [], [], None, None, lineno=166, col_offset=25), Str('hooktestpackage', lineno=167, col_offset=25)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'assertEqual', Load(), lineno=168, col_offset=8), [Call(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=168, col_offset=25), 'sub', Load(), lineno=168, col_offset=25), 'get_name', Load(), lineno=168, col_offset=25), [], [], None, None, lineno=168, col_offset=25), Str('hooktestpackage.sub', lineno=169, col_offset=25)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'assertEqual', Load(), lineno=170, col_offset=8), [Call(Attribute(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=170, col_offset=25), 'sub', Load(), lineno=170, col_offset=25), 'subber', Load(), lineno=170, col_offset=25), 'get_name', Load(), lineno=170, col_offset=25), [], [], None, None, lineno=170, col_offset=25), Str('hooktestpackage.sub.subber', lineno=171, col_offset=25)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), If(Name('importer', Load(), lineno=172, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=12), 'assertEqual', Load(), lineno=173, col_offset=12), [Attribute(Name('hooktestmodule', Load(), lineno=173, col_offset=29), '__loader__', Load(), lineno=173, col_offset=29), Name('importer', Load(), lineno=173, col_offset=56)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=12), 'assertEqual', Load(), lineno=174, col_offset=12), [Attribute(Name('hooktestpackage', Load(), lineno=174, col_offset=29), '__loader__', Load(), lineno=174, col_offset=29), Name('importer', Load(), lineno=174, col_offset=57)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'assertEqual', Load(), lineno=175, col_offset=12), [Attribute(Attribute(Name('hooktestpackage', Load(), lineno=175, col_offset=29), 'sub', Load(), lineno=175, col_offset=29), '__loader__', Load(), lineno=175, col_offset=29), Name('importer', Load(), lineno=175, col_offset=61)], [], None, None, lineno=175, col_offset=12), lineno=175, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=12), 'assertEqual', Load(), lineno=176, col_offset=12), [Attribute(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=176, col_offset=29), 'sub', Load(), lineno=176, col_offset=29), 'subber', Load(), lineno=176, col_offset=29), '__loader__', Load(), lineno=176, col_offset=29), Name('importer', Load(), lineno=176, col_offset=68)], [], None, None, lineno=176, col_offset=12), lineno=176, col_offset=12)], [], lineno=172, col_offset=8), Assign([Subscript(Attribute(Name('TestImporter', Load(), lineno=178, col_offset=8), 'modules', Load(), lineno=178, col_offset=8), Index(Str('reloadmodule', lineno=178, col_offset=29)), Store(), lineno=178, col_offset=8)], Tuple([Name('False', Load(), lineno=178, col_offset=48), Name('test_co', Load(), lineno=178, col_offset=55)], Load(), lineno=178, col_offset=48), lineno=178, col_offset=8), Import([alias('reloadmodule', None)], lineno=179, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=8), 'assertFalse', Load(), lineno=180, col_offset=8), [Call(Name('hasattr', Load(), lineno=180, col_offset=25), [Name('reloadmodule', Load(), lineno=180, col_offset=33), Str('reloaded', lineno=180, col_offset=46)], [], None, None, lineno=180, col_offset=25)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Assign([Subscript(Attribute(Name('TestImporter', Load(), lineno=182, col_offset=8), 'modules', Load(), lineno=182, col_offset=8), Index(Str('reloadmodule', lineno=182, col_offset=29)), Store(), lineno=182, col_offset=8)], Tuple([Name('False', Load(), lineno=182, col_offset=48), Name('reload_co', Load(), lineno=182, col_offset=55)], Load(), lineno=182, col_offset=48), lineno=182, col_offset=8), Expr(Call(Attribute(Name('imp', Load(), lineno=183, col_offset=8), 'reload', Load(), lineno=183, col_offset=8), [Name('reloadmodule', Load(), lineno=183, col_offset=19)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=184, col_offset=8), 'assertTrue', Load(), lineno=184, col_offset=8), [Call(Name('hasattr', Load(), lineno=184, col_offset=24), [Name('reloadmodule', Load(), lineno=184, col_offset=32), Str('reloaded', lineno=184, col_offset=45)], [], None, None, lineno=184, col_offset=24)], [], None, None, lineno=184, col_offset=8), lineno=184, col_offset=8), Import([alias('hooktestpackage.oldabs', None)], lineno=186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=8), 'assertEqual', Load(), lineno=187, col_offset=8), [Call(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=187, col_offset=25), 'oldabs', Load(), lineno=187, col_offset=25), 'get_name', Load(), lineno=187, col_offset=25), [], [], None, None, lineno=187, col_offset=25), Str('hooktestpackage.oldabs', lineno=188, col_offset=25)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [Attribute(Attribute(Name('hooktestpackage', Load(), lineno=189, col_offset=25), 'oldabs', Load(), lineno=189, col_offset=25), 'sub', Load(), lineno=189, col_offset=25), Attribute(Name('hooktestpackage', Load(), lineno=190, col_offset=25), 'sub', Load(), lineno=190, col_offset=25)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Import([alias('hooktestpackage.newrel', None)], lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertEqual', Load(), lineno=193, col_offset=8), [Call(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=193, col_offset=25), 'newrel', Load(), lineno=193, col_offset=25), 'get_name', Load(), lineno=193, col_offset=25), [], [], None, None, lineno=193, col_offset=25), Str('hooktestpackage.newrel', lineno=194, col_offset=25)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), 'assertEqual', Load(), lineno=195, col_offset=8), [Attribute(Attribute(Name('hooktestpackage', Load(), lineno=195, col_offset=25), 'newrel', Load(), lineno=195, col_offset=25), 'sub', Load(), lineno=195, col_offset=25), Attribute(Name('hooktestpackage', Load(), lineno=196, col_offset=25), 'sub', Load(), lineno=196, col_offset=25)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8), Import([alias('hooktestpackage.sub.subber.subest', 'subest')], lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Call(Attribute(Name('subest', Load(), lineno=199, col_offset=25), 'get_name', Load(), lineno=199, col_offset=25), [], [], None, None, lineno=199, col_offset=25), Str('hooktestpackage.sub.subber.subest', lineno=200, col_offset=25)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'assertEqual', Load(), lineno=201, col_offset=8), [Attribute(Name('subest', Load(), lineno=201, col_offset=25), 'sub', Load(), lineno=201, col_offset=25), Attribute(Name('hooktestpackage', Load(), lineno=202, col_offset=25), 'sub', Load(), lineno=202, col_offset=25)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Import([alias('hooktestpackage.futrel', None)], lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertEqual', Load(), lineno=205, col_offset=8), [Call(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=205, col_offset=25), 'futrel', Load(), lineno=205, col_offset=25), 'get_name', Load(), lineno=205, col_offset=25), [], [], None, None, lineno=205, col_offset=25), Str('hooktestpackage.futrel', lineno=206, col_offset=25)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Attribute(Attribute(Name('hooktestpackage', Load(), lineno=207, col_offset=25), 'futrel', Load(), lineno=207, col_offset=25), 'sub', Load(), lineno=207, col_offset=25), Attribute(Name('hooktestpackage', Load(), lineno=208, col_offset=25), 'sub', Load(), lineno=208, col_offset=25)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Import([alias('sub', None)], lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Attribute(Name('sub', Load(), lineno=211, col_offset=25), 'get_name', Load(), lineno=211, col_offset=25), [], [], None, None, lineno=211, col_offset=25), Str('sub', lineno=211, col_offset=41)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Import([alias('hooktestpackage.newabs', None)], lineno=213, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'assertEqual', Load(), lineno=214, col_offset=8), [Call(Attribute(Attribute(Name('hooktestpackage', Load(), lineno=214, col_offset=25), 'newabs', Load(), lineno=214, col_offset=25), 'get_name', Load(), lineno=214, col_offset=25), [], [], None, None, lineno=214, col_offset=25), Str('hooktestpackage.newabs', lineno=215, col_offset=25)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertEqual', Load(), lineno=216, col_offset=8), [Attribute(Attribute(Name('hooktestpackage', Load(), lineno=216, col_offset=25), 'newabs', Load(), lineno=216, col_offset=25), 'sub', Load(), lineno=216, col_offset=25), Name('sub', Load(), lineno=216, col_offset=53)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('testMetaPath', arguments([Name('self', Param(), lineno=218, col_offset=21)], None, None, []), [Assign([Name('i', Store(), lineno=219, col_offset=8)], Call(Name('MetaImporter', Load(), lineno=219, col_offset=12), [], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=220, col_offset=8), 'meta_path', Load(), lineno=220, col_offset=8), 'append', Load(), lineno=220, col_offset=8), [Name('i', Load(), lineno=220, col_offset=29)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'doTestImports', Load(), lineno=221, col_offset=8), [Name('i', Load(), lineno=221, col_offset=27)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('testPathHook', arguments([Name('self', Param(), lineno=223, col_offset=21)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=224, col_offset=8), 'path_hooks', Load(), lineno=224, col_offset=8), 'append', Load(), lineno=224, col_offset=8), [Name('PathImporter', Load(), lineno=224, col_offset=30)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=225, col_offset=8), 'path', Load(), lineno=225, col_offset=8), 'append', Load(), lineno=225, col_offset=8), [Name('test_path', Load(), lineno=225, col_offset=24)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'doTestImports', Load(), lineno=226, col_offset=8), [], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('testBlocker', arguments([Name('self', Param(), lineno=228, col_offset=20)], None, None, []), [Assign([Name('mname', Store(), lineno=229, col_offset=8)], Str('exceptions', lineno=229, col_offset=16), lineno=229, col_offset=8), Expr(Call(Attribute(Name('test_support', Load(), lineno=230, col_offset=8), 'unload', Load(), lineno=230, col_offset=8), [Name('mname', Load(), lineno=230, col_offset=28)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=231, col_offset=8), 'meta_path', Load(), lineno=231, col_offset=8), 'append', Load(), lineno=231, col_offset=8), [Call(Name('ImportBlocker', Load(), lineno=231, col_offset=29), [Name('mname', Load(), lineno=231, col_offset=43)], [], None, None, lineno=231, col_offset=29)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertRaises', Load(), lineno=232, col_offset=8), [Name('ImportError', Load(), lineno=232, col_offset=26), Name('__import__', Load(), lineno=232, col_offset=39), Name('mname', Load(), lineno=232, col_offset=51)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('testImpWrapper', arguments([Name('self', Param(), lineno=234, col_offset=23)], None, None, []), [Assign([Name('i', Store(), lineno=235, col_offset=8)], Call(Name('ImpWrapper', Load(), lineno=235, col_offset=12), [], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=236, col_offset=8), 'meta_path', Load(), lineno=236, col_offset=8), 'append', Load(), lineno=236, col_offset=8), [Name('i', Load(), lineno=236, col_offset=29)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=237, col_offset=8), 'path_hooks', Load(), lineno=237, col_offset=8), 'append', Load(), lineno=237, col_offset=8), [Name('ImpWrapper', Load(), lineno=237, col_offset=30)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Assign([Name('mnames', Store(), lineno=238, col_offset=8)], Tuple([Str('colorsys', lineno=238, col_offset=18), Str('urlparse', lineno=238, col_offset=30), Str('distutils.core', lineno=238, col_offset=42), Str('compiler.misc', lineno=238, col_offset=60)], Load(), lineno=238, col_offset=18), lineno=238, col_offset=8), For(Name('mname', Store(), lineno=239, col_offset=12), Name('mnames', Load(), lineno=239, col_offset=21), [Assign([Name('parent', Store(), lineno=240, col_offset=12)], Subscript(Call(Attribute(Name('mname', Load(), lineno=240, col_offset=21), 'split', Load(), lineno=240, col_offset=21), [Str('.', lineno=240, col_offset=33)], [], None, None, lineno=240, col_offset=21), Index(Num(0, lineno=240, col_offset=38)), Load(), lineno=240, col_offset=21), lineno=240, col_offset=12), For(Name('n', Store(), lineno=241, col_offset=16), Call(Attribute(Attribute(Name('sys', Load(), lineno=241, col_offset=21), 'modules', Load(), lineno=241, col_offset=21), 'keys', Load(), lineno=241, col_offset=21), [], [], None, None, lineno=241, col_offset=21), [If(Call(Attribute(Name('n', Load(), lineno=242, col_offset=19), 'startswith', Load(), lineno=242, col_offset=19), [Name('parent', Load(), lineno=242, col_offset=32)], [], None, None, lineno=242, col_offset=19), [Delete([Subscript(Attribute(Name('sys', Load(), lineno=243, col_offset=24), 'modules', Load(), lineno=243, col_offset=24), Index(Name('n', Load(), lineno=243, col_offset=36)), Del(), lineno=243, col_offset=24)], lineno=243, col_offset=20)], [], lineno=242, col_offset=16)], [], lineno=241, col_offset=12)], [], lineno=239, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=244, col_offset=13), 'check_warnings', Load(), lineno=244, col_offset=13), [Tuple([Str('The compiler package is deprecated and removed', lineno=244, col_offset=42), Name('DeprecationWarning', Load(), lineno=245, col_offset=57)], Load(), lineno=244, col_offset=42)], [], None, None, lineno=244, col_offset=13), None, [For(Name('mname', Store(), lineno=246, col_offset=16), Name('mnames', Load(), lineno=246, col_offset=25), [Assign([Name('m', Store(), lineno=247, col_offset=16)], Call(Name('__import__', Load(), lineno=247, col_offset=20), [Name('mname', Load(), lineno=247, col_offset=31), Call(Name('globals', Load(), lineno=247, col_offset=38), [], [], None, None, lineno=247, col_offset=38), Call(Name('locals', Load(), lineno=247, col_offset=49), [], [], None, None, lineno=247, col_offset=49), List([Str('__dummy__', lineno=247, col_offset=60)], Load(), lineno=247, col_offset=59)], [], None, None, lineno=247, col_offset=20), lineno=247, col_offset=16), Expr(Attribute(Name('m', Load(), lineno=248, col_offset=16), '__loader__', Load(), lineno=248, col_offset=16), lineno=248, col_offset=16)], [], lineno=246, col_offset=12)], lineno=244, col_offset=13)], [], lineno=234, col_offset=4)], [], lineno=157, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=252, col_offset=4), 'run_unittest', Load(), lineno=252, col_offset=4), [Name('ImportHooksTestCase', Load(), lineno=252, col_offset=30)], [], None, None, lineno=252, col_offset=4), lineno=252, col_offset=4)], [], lineno=251, col_offset=0), If(Compare(Name('__name__', Load(), lineno=254, col_offset=3), [Eq()], [Str('__main__', lineno=254, col_offset=15)], lineno=254, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=255, col_offset=4), [], [], None, None, lineno=255, col_offset=4), lineno=255, col_offset=4)], [], lineno=254, col_offset=0)])
