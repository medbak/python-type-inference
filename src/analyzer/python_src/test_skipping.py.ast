Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('support', [alias('LoggingResult', None)], 1, lineno=3, col_offset=0), ClassDef('Test_TestSkipping', [Attribute(Name('unittest', Load(), lineno=6, col_offset=24), 'TestCase', Load(), lineno=6, col_offset=24)], [FunctionDef('test_skipping', arguments([Name('self', Param(), lineno=8, col_offset=22)], None, None, []), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=9, col_offset=18), 'TestCase', Load(), lineno=9, col_offset=18)], [FunctionDef('test_skip_me', arguments([Name('self', Param(), lineno=10, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=16), 'skipTest', Load(), lineno=11, col_offset=16), [Str('skip', lineno=11, col_offset=30)], [], None, None, lineno=11, col_offset=16), lineno=11, col_offset=16)], [], lineno=10, col_offset=12)], [], lineno=9, col_offset=8), Assign([Name('events', Store(), lineno=12, col_offset=8)], List([], Load(), lineno=12, col_offset=17), lineno=12, col_offset=8), Assign([Name('result', Store(), lineno=13, col_offset=8)], Call(Name('LoggingResult', Load(), lineno=13, col_offset=17), [Name('events', Load(), lineno=13, col_offset=31)], [], None, None, lineno=13, col_offset=17), lineno=13, col_offset=8), Assign([Name('test', Store(), lineno=14, col_offset=8)], Call(Name('Foo', Load(), lineno=14, col_offset=15), [Str('test_skip_me', lineno=14, col_offset=19)], [], None, None, lineno=14, col_offset=15), lineno=14, col_offset=8), Expr(Call(Attribute(Name('test', Load(), lineno=15, col_offset=8), 'run', Load(), lineno=15, col_offset=8), [Name('result', Load(), lineno=15, col_offset=17)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertEqual', Load(), lineno=16, col_offset=8), [Name('events', Load(), lineno=16, col_offset=25), List([Str('startTest', lineno=16, col_offset=34), Str('addSkip', lineno=16, col_offset=47), Str('stopTest', lineno=16, col_offset=58)], Load(), lineno=16, col_offset=33)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertEqual', Load(), lineno=17, col_offset=8), [Attribute(Name('result', Load(), lineno=17, col_offset=25), 'skipped', Load(), lineno=17, col_offset=25), List([Tuple([Name('test', Load(), lineno=17, col_offset=43), Str('skip', lineno=17, col_offset=49)], Load(), lineno=17, col_offset=43)], Load(), lineno=17, col_offset=41)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=20, col_offset=18), 'TestCase', Load(), lineno=20, col_offset=18)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=21, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=16), 'skipTest', Load(), lineno=22, col_offset=16), [Str('testing', lineno=22, col_offset=30)], [], None, None, lineno=22, col_offset=16), lineno=22, col_offset=16)], [], lineno=21, col_offset=12), FunctionDef('test_nothing', arguments([Name('self', Param(), lineno=23, col_offset=29)], None, None, []), [Pass( lineno=23, col_offset=36)], [], lineno=23, col_offset=12)], [], lineno=20, col_offset=8), Assign([Name('events', Store(), lineno=24, col_offset=8)], List([], Load(), lineno=24, col_offset=17), lineno=24, col_offset=8), Assign([Name('result', Store(), lineno=25, col_offset=8)], Call(Name('LoggingResult', Load(), lineno=25, col_offset=17), [Name('events', Load(), lineno=25, col_offset=31)], [], None, None, lineno=25, col_offset=17), lineno=25, col_offset=8), Assign([Name('test', Store(), lineno=26, col_offset=8)], Call(Name('Foo', Load(), lineno=26, col_offset=15), [Str('test_nothing', lineno=26, col_offset=19)], [], None, None, lineno=26, col_offset=15), lineno=26, col_offset=8), Expr(Call(Attribute(Name('test', Load(), lineno=27, col_offset=8), 'run', Load(), lineno=27, col_offset=8), [Name('result', Load(), lineno=27, col_offset=17)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Name('events', Load(), lineno=28, col_offset=25), List([Str('startTest', lineno=28, col_offset=34), Str('addSkip', lineno=28, col_offset=47), Str('stopTest', lineno=28, col_offset=58)], Load(), lineno=28, col_offset=33)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Attribute(Name('result', Load(), lineno=29, col_offset=25), 'skipped', Load(), lineno=29, col_offset=25), List([Tuple([Name('test', Load(), lineno=29, col_offset=43), Str('testing', lineno=29, col_offset=49)], Load(), lineno=29, col_offset=43)], Load(), lineno=29, col_offset=41)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertEqual', Load(), lineno=30, col_offset=8), [Attribute(Name('result', Load(), lineno=30, col_offset=25), 'testsRun', Load(), lineno=30, col_offset=25), Num(1, lineno=30, col_offset=42)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('test_skipping_decorators', arguments([Name('self', Param(), lineno=32, col_offset=33)], None, None, []), [Assign([Name('op_table', Store(), lineno=33, col_offset=8)], Tuple([Tuple([Attribute(Name('unittest', Load(), lineno=33, col_offset=21), 'skipUnless', Load(), lineno=33, col_offset=21), Name('False', Load(), lineno=33, col_offset=42), Name('True', Load(), lineno=33, col_offset=49)], Load(), lineno=33, col_offset=21), Tuple([Attribute(Name('unittest', Load(), lineno=34, col_offset=21), 'skipIf', Load(), lineno=34, col_offset=21), Name('True', Load(), lineno=34, col_offset=38), Name('False', Load(), lineno=34, col_offset=44)], Load(), lineno=34, col_offset=21)], Load(), lineno=33, col_offset=20), lineno=33, col_offset=8), For(Tuple([Name('deco', Store(), lineno=35, col_offset=12), Name('do_skip', Store(), lineno=35, col_offset=18), Name('dont_skip', Store(), lineno=35, col_offset=27)], Store(), lineno=35, col_offset=12), Name('op_table', Load(), lineno=35, col_offset=40), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=36, col_offset=22), 'TestCase', Load(), lineno=36, col_offset=22)], [FunctionDef('test_skip', arguments([Name('self', Param(), lineno=38, col_offset=30)], None, None, []), [Pass( lineno=38, col_offset=37)], [Call(Name('deco', Load(), lineno=37, col_offset=17), [Name('do_skip', Load(), lineno=37, col_offset=22), Str('testing', lineno=37, col_offset=31)], [], None, None, lineno=37, col_offset=17)], lineno=37, col_offset=16), FunctionDef('test_dont_skip', arguments([Name('self', Param(), lineno=41, col_offset=35)], None, None, []), [Pass( lineno=41, col_offset=42)], [Call(Name('deco', Load(), lineno=40, col_offset=17), [Name('dont_skip', Load(), lineno=40, col_offset=22), Str('testing', lineno=40, col_offset=33)], [], None, None, lineno=40, col_offset=17)], lineno=40, col_offset=16)], [], lineno=36, col_offset=12), Assign([Name('test_do_skip', Store(), lineno=42, col_offset=12)], Call(Name('Foo', Load(), lineno=42, col_offset=27), [Str('test_skip', lineno=42, col_offset=31)], [], None, None, lineno=42, col_offset=27), lineno=42, col_offset=12), Assign([Name('test_dont_skip', Store(), lineno=43, col_offset=12)], Call(Name('Foo', Load(), lineno=43, col_offset=29), [Str('test_dont_skip', lineno=43, col_offset=33)], [], None, None, lineno=43, col_offset=29), lineno=43, col_offset=12), Assign([Name('suite', Store(), lineno=44, col_offset=12)], Call(Attribute(Name('unittest', Load(), lineno=44, col_offset=20), 'TestSuite', Load(), lineno=44, col_offset=20), [List([Name('test_do_skip', Load(), lineno=44, col_offset=40), Name('test_dont_skip', Load(), lineno=44, col_offset=54)], Load(), lineno=44, col_offset=39)], [], None, None, lineno=44, col_offset=20), lineno=44, col_offset=12), Assign([Name('events', Store(), lineno=45, col_offset=12)], List([], Load(), lineno=45, col_offset=21), lineno=45, col_offset=12), Assign([Name('result', Store(), lineno=46, col_offset=12)], Call(Name('LoggingResult', Load(), lineno=46, col_offset=21), [Name('events', Load(), lineno=46, col_offset=35)], [], None, None, lineno=46, col_offset=21), lineno=46, col_offset=12), Expr(Call(Attribute(Name('suite', Load(), lineno=47, col_offset=12), 'run', Load(), lineno=47, col_offset=12), [Name('result', Load(), lineno=47, col_offset=22)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=12), 'assertEqual', Load(), lineno=48, col_offset=12), [Call(Name('len', Load(), lineno=48, col_offset=29), [Attribute(Name('result', Load(), lineno=48, col_offset=33), 'skipped', Load(), lineno=48, col_offset=33)], [], None, None, lineno=48, col_offset=29), Num(1, lineno=48, col_offset=50)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=12), Assign([Name('expected', Store(), lineno=49, col_offset=12)], List([Str('startTest', lineno=49, col_offset=24), Str('addSkip', lineno=49, col_offset=37), Str('stopTest', lineno=49, col_offset=48), Str('startTest', lineno=50, col_offset=24), Str('addSuccess', lineno=50, col_offset=37), Str('stopTest', lineno=50, col_offset=51)], Load(), lineno=49, col_offset=23), lineno=49, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=12), 'assertEqual', Load(), lineno=51, col_offset=12), [Name('events', Load(), lineno=51, col_offset=29), Name('expected', Load(), lineno=51, col_offset=37)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=12), 'assertEqual', Load(), lineno=52, col_offset=12), [Attribute(Name('result', Load(), lineno=52, col_offset=29), 'testsRun', Load(), lineno=52, col_offset=29), Num(2, lineno=52, col_offset=46)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=12), 'assertEqual', Load(), lineno=53, col_offset=12), [Attribute(Name('result', Load(), lineno=53, col_offset=29), 'skipped', Load(), lineno=53, col_offset=29), List([Tuple([Name('test_do_skip', Load(), lineno=53, col_offset=47), Str('testing', lineno=53, col_offset=61)], Load(), lineno=53, col_offset=47)], Load(), lineno=53, col_offset=45)], [], None, None, lineno=53, col_offset=12), lineno=53, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'assertTrue', Load(), lineno=54, col_offset=12), [Call(Attribute(Name('result', Load(), lineno=54, col_offset=28), 'wasSuccessful', Load(), lineno=54, col_offset=28), [], [], None, None, lineno=54, col_offset=28)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], [], lineno=35, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('test_skip_class', arguments([Name('self', Param(), lineno=56, col_offset=24)], None, None, []), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=58, col_offset=18), 'TestCase', Load(), lineno=58, col_offset=18)], [FunctionDef('test_1', arguments([Name('self', Param(), lineno=59, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('record', Load(), lineno=60, col_offset=16), 'append', Load(), lineno=60, col_offset=16), [Num(1, lineno=60, col_offset=30)], [], None, None, lineno=60, col_offset=16), lineno=60, col_offset=16)], [], lineno=59, col_offset=12)], [Call(Attribute(Name('unittest', Load(), lineno=57, col_offset=9), 'skip', Load(), lineno=57, col_offset=9), [Str('testing', lineno=57, col_offset=23)], [], None, None, lineno=57, col_offset=9)], lineno=57, col_offset=8), Assign([Name('record', Store(), lineno=61, col_offset=8)], List([], Load(), lineno=61, col_offset=17), lineno=61, col_offset=8), Assign([Name('result', Store(), lineno=62, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=62, col_offset=17), 'TestResult', Load(), lineno=62, col_offset=17), [], [], None, None, lineno=62, col_offset=17), lineno=62, col_offset=8), Assign([Name('test', Store(), lineno=63, col_offset=8)], Call(Name('Foo', Load(), lineno=63, col_offset=15), [Str('test_1', lineno=63, col_offset=19)], [], None, None, lineno=63, col_offset=15), lineno=63, col_offset=8), Assign([Name('suite', Store(), lineno=64, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=64, col_offset=16), 'TestSuite', Load(), lineno=64, col_offset=16), [List([Name('test', Load(), lineno=64, col_offset=36)], Load(), lineno=64, col_offset=35)], [], None, None, lineno=64, col_offset=16), lineno=64, col_offset=8), Expr(Call(Attribute(Name('suite', Load(), lineno=65, col_offset=8), 'run', Load(), lineno=65, col_offset=8), [Name('result', Load(), lineno=65, col_offset=18)], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertEqual', Load(), lineno=66, col_offset=8), [Attribute(Name('result', Load(), lineno=66, col_offset=25), 'skipped', Load(), lineno=66, col_offset=25), List([Tuple([Name('test', Load(), lineno=66, col_offset=43), Str('testing', lineno=66, col_offset=49)], Load(), lineno=66, col_offset=43)], Load(), lineno=66, col_offset=41)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=8), 'assertEqual', Load(), lineno=67, col_offset=8), [Name('record', Load(), lineno=67, col_offset=25), List([], Load(), lineno=67, col_offset=33)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('test_expected_failure', arguments([Name('self', Param(), lineno=69, col_offset=30)], None, None, []), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=70, col_offset=18), 'TestCase', Load(), lineno=70, col_offset=18)], [FunctionDef('test_die', arguments([Name('self', Param(), lineno=72, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=16), 'fail', Load(), lineno=73, col_offset=16), [Str('help me!', lineno=73, col_offset=26)], [], None, None, lineno=73, col_offset=16), lineno=73, col_offset=16)], [Attribute(Name('unittest', Load(), lineno=71, col_offset=13), 'expectedFailure', Load(), lineno=71, col_offset=13)], lineno=71, col_offset=12)], [], lineno=70, col_offset=8), Assign([Name('events', Store(), lineno=74, col_offset=8)], List([], Load(), lineno=74, col_offset=17), lineno=74, col_offset=8), Assign([Name('result', Store(), lineno=75, col_offset=8)], Call(Name('LoggingResult', Load(), lineno=75, col_offset=17), [Name('events', Load(), lineno=75, col_offset=31)], [], None, None, lineno=75, col_offset=17), lineno=75, col_offset=8), Assign([Name('test', Store(), lineno=76, col_offset=8)], Call(Name('Foo', Load(), lineno=76, col_offset=15), [Str('test_die', lineno=76, col_offset=19)], [], None, None, lineno=76, col_offset=15), lineno=76, col_offset=8), Expr(Call(Attribute(Name('test', Load(), lineno=77, col_offset=8), 'run', Load(), lineno=77, col_offset=8), [Name('result', Load(), lineno=77, col_offset=17)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertEqual', Load(), lineno=78, col_offset=8), [Name('events', Load(), lineno=78, col_offset=25), List([Str('startTest', lineno=79, col_offset=26), Str('addExpectedFailure', lineno=79, col_offset=39), Str('stopTest', lineno=79, col_offset=61)], Load(), lineno=79, col_offset=25)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Subscript(Subscript(Attribute(Name('result', Load(), lineno=80, col_offset=25), 'expectedFailures', Load(), lineno=80, col_offset=25), Index(Num(0, lineno=80, col_offset=49)), Load(), lineno=80, col_offset=25), Index(Num(0, lineno=80, col_offset=52)), Load(), lineno=80, col_offset=25), Name('test', Load(), lineno=80, col_offset=56)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertTrue', Load(), lineno=81, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=81, col_offset=24), 'wasSuccessful', Load(), lineno=81, col_offset=24), [], [], None, None, lineno=81, col_offset=24)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('test_unexpected_success', arguments([Name('self', Param(), lineno=83, col_offset=32)], None, None, []), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=84, col_offset=18), 'TestCase', Load(), lineno=84, col_offset=18)], [FunctionDef('test_die', arguments([Name('self', Param(), lineno=86, col_offset=25)], None, None, []), [Pass( lineno=87, col_offset=16)], [Attribute(Name('unittest', Load(), lineno=85, col_offset=13), 'expectedFailure', Load(), lineno=85, col_offset=13)], lineno=85, col_offset=12)], [], lineno=84, col_offset=8), Assign([Name('events', Store(), lineno=88, col_offset=8)], List([], Load(), lineno=88, col_offset=17), lineno=88, col_offset=8), Assign([Name('result', Store(), lineno=89, col_offset=8)], Call(Name('LoggingResult', Load(), lineno=89, col_offset=17), [Name('events', Load(), lineno=89, col_offset=31)], [], None, None, lineno=89, col_offset=17), lineno=89, col_offset=8), Assign([Name('test', Store(), lineno=90, col_offset=8)], Call(Name('Foo', Load(), lineno=90, col_offset=15), [Str('test_die', lineno=90, col_offset=19)], [], None, None, lineno=90, col_offset=15), lineno=90, col_offset=8), Expr(Call(Attribute(Name('test', Load(), lineno=91, col_offset=8), 'run', Load(), lineno=91, col_offset=8), [Name('result', Load(), lineno=91, col_offset=17)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertEqual', Load(), lineno=92, col_offset=8), [Name('events', Load(), lineno=92, col_offset=25), List([Str('startTest', lineno=93, col_offset=26), Str('addUnexpectedSuccess', lineno=93, col_offset=39), Str('stopTest', lineno=93, col_offset=63)], Load(), lineno=93, col_offset=25)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'assertFalse', Load(), lineno=94, col_offset=8), [Attribute(Name('result', Load(), lineno=94, col_offset=25), 'failures', Load(), lineno=94, col_offset=25)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertEqual', Load(), lineno=95, col_offset=8), [Attribute(Name('result', Load(), lineno=95, col_offset=25), 'unexpectedSuccesses', Load(), lineno=95, col_offset=25), List([Name('test', Load(), lineno=95, col_offset=54)], Load(), lineno=95, col_offset=53)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=96, col_offset=8), 'assertTrue', Load(), lineno=96, col_offset=8), [Call(Attribute(Name('result', Load(), lineno=96, col_offset=24), 'wasSuccessful', Load(), lineno=96, col_offset=24), [], [], None, None, lineno=96, col_offset=24)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('test_skip_doesnt_run_setup', arguments([Name('self', Param(), lineno=98, col_offset=35)], None, None, []), [ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=99, col_offset=18), 'TestCase', Load(), lineno=99, col_offset=18)], [Assign([Name('wasSetUp', Store(), lineno=100, col_offset=12)], Name('False', Load(), lineno=100, col_offset=23), lineno=100, col_offset=12), Assign([Name('wasTornDown', Store(), lineno=101, col_offset=12)], Name('False', Load(), lineno=101, col_offset=26), lineno=101, col_offset=12), FunctionDef('setUp', arguments([Name('self', Param(), lineno=102, col_offset=22)], None, None, []), [Assign([Attribute(Name('Foo', Load(), lineno=103, col_offset=16), 'wasSetUp', Store(), lineno=103, col_offset=16)], Name('True', Load(), lineno=103, col_offset=31), lineno=103, col_offset=16)], [], lineno=102, col_offset=12), FunctionDef('tornDown', arguments([Name('self', Param(), lineno=104, col_offset=25)], None, None, []), [Assign([Attribute(Name('Foo', Load(), lineno=105, col_offset=16), 'wasTornDown', Store(), lineno=105, col_offset=16)], Name('True', Load(), lineno=105, col_offset=34), lineno=105, col_offset=16)], [], lineno=104, col_offset=12), FunctionDef('test_1', arguments([Name('self', Param(), lineno=107, col_offset=23)], None, None, []), [Pass( lineno=108, col_offset=16)], [Call(Attribute(Name('unittest', Load(), lineno=106, col_offset=13), 'skip', Load(), lineno=106, col_offset=13), [Str('testing', lineno=106, col_offset=27)], [], None, None, lineno=106, col_offset=13)], lineno=106, col_offset=12)], [], lineno=99, col_offset=8), Assign([Name('result', Store(), lineno=110, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=110, col_offset=17), 'TestResult', Load(), lineno=110, col_offset=17), [], [], None, None, lineno=110, col_offset=17), lineno=110, col_offset=8), Assign([Name('test', Store(), lineno=111, col_offset=8)], Call(Name('Foo', Load(), lineno=111, col_offset=15), [Str('test_1', lineno=111, col_offset=19)], [], None, None, lineno=111, col_offset=15), lineno=111, col_offset=8), Assign([Name('suite', Store(), lineno=112, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=112, col_offset=16), 'TestSuite', Load(), lineno=112, col_offset=16), [List([Name('test', Load(), lineno=112, col_offset=36)], Load(), lineno=112, col_offset=35)], [], None, None, lineno=112, col_offset=16), lineno=112, col_offset=8), Expr(Call(Attribute(Name('suite', Load(), lineno=113, col_offset=8), 'run', Load(), lineno=113, col_offset=8), [Name('result', Load(), lineno=113, col_offset=18)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=114, col_offset=8), 'assertEqual', Load(), lineno=114, col_offset=8), [Attribute(Name('result', Load(), lineno=114, col_offset=25), 'skipped', Load(), lineno=114, col_offset=25), List([Tuple([Name('test', Load(), lineno=114, col_offset=43), Str('testing', lineno=114, col_offset=49)], Load(), lineno=114, col_offset=43)], Load(), lineno=114, col_offset=41)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=8), 'assertFalse', Load(), lineno=115, col_offset=8), [Attribute(Name('Foo', Load(), lineno=115, col_offset=25), 'wasSetUp', Load(), lineno=115, col_offset=25)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=8), 'assertFalse', Load(), lineno=116, col_offset=8), [Attribute(Name('Foo', Load(), lineno=116, col_offset=25), 'wasTornDown', Load(), lineno=116, col_offset=25)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('test_decorated_skip', arguments([Name('self', Param(), lineno=118, col_offset=28)], None, None, []), [FunctionDef('decorator', arguments([Name('func', Param(), lineno=119, col_offset=22)], None, None, []), [FunctionDef('inner', arguments([], 'a', None, []), [Return(Call(Name('func', Load(), lineno=121, col_offset=23), [], [], Name('a', Load(), lineno=121, col_offset=29), None, lineno=121, col_offset=23), lineno=121, col_offset=16)], [], lineno=120, col_offset=12), Return(Name('inner', Load(), lineno=122, col_offset=19), lineno=122, col_offset=12)], [], lineno=119, col_offset=8), ClassDef('Foo', [Attribute(Name('unittest', Load(), lineno=124, col_offset=18), 'TestCase', Load(), lineno=124, col_offset=18)], [FunctionDef('test_1', arguments([Name('self', Param(), lineno=127, col_offset=23)], None, None, []), [Pass( lineno=128, col_offset=16)], [Name('decorator', Load(), lineno=125, col_offset=13), Call(Attribute(Name('unittest', Load(), lineno=126, col_offset=13), 'skip', Load(), lineno=126, col_offset=13), [Str('testing', lineno=126, col_offset=27)], [], None, None, lineno=126, col_offset=13)], lineno=125, col_offset=12)], [], lineno=124, col_offset=8), Assign([Name('result', Store(), lineno=130, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=130, col_offset=17), 'TestResult', Load(), lineno=130, col_offset=17), [], [], None, None, lineno=130, col_offset=17), lineno=130, col_offset=8), Assign([Name('test', Store(), lineno=131, col_offset=8)], Call(Name('Foo', Load(), lineno=131, col_offset=15), [Str('test_1', lineno=131, col_offset=19)], [], None, None, lineno=131, col_offset=15), lineno=131, col_offset=8), Assign([Name('suite', Store(), lineno=132, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=132, col_offset=16), 'TestSuite', Load(), lineno=132, col_offset=16), [List([Name('test', Load(), lineno=132, col_offset=36)], Load(), lineno=132, col_offset=35)], [], None, None, lineno=132, col_offset=16), lineno=132, col_offset=8), Expr(Call(Attribute(Name('suite', Load(), lineno=133, col_offset=8), 'run', Load(), lineno=133, col_offset=8), [Name('result', Load(), lineno=133, col_offset=18)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'assertEqual', Load(), lineno=134, col_offset=8), [Attribute(Name('result', Load(), lineno=134, col_offset=25), 'skipped', Load(), lineno=134, col_offset=25), List([Tuple([Name('test', Load(), lineno=134, col_offset=43), Str('testing', lineno=134, col_offset=49)], Load(), lineno=134, col_offset=43)], Load(), lineno=134, col_offset=41)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8)], [], lineno=118, col_offset=4)], [], lineno=6, col_offset=0), If(Compare(Name('__name__', Load(), lineno=137, col_offset=3), [Eq()], [Str('__main__', lineno=137, col_offset=15)], lineno=137, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=138, col_offset=4), 'main', Load(), lineno=138, col_offset=4), [], [], None, None, lineno=138, col_offset=4), lineno=138, col_offset=4)], [], lineno=137, col_offset=0)])
