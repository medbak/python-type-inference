Module([Import([alias('time', None)], lineno=4, col_offset=0), Import([alias('os', None)], lineno=5, col_offset=0), Import([alias('re', None)], lineno=6, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('hashlib', None)], lineno=8, col_offset=0), Import([alias('functools', None)], lineno=9, col_offset=0), Import([alias('itertools', None)], lineno=10, col_offset=0), ImportFrom('optparse', [alias('OptionParser', None)], 0, lineno=11, col_offset=0), Assign([Name('out', Store(), lineno=13, col_offset=0)], Attribute(Name('sys', Load(), lineno=13, col_offset=6), 'stdout', Load(), lineno=13, col_offset=6), lineno=13, col_offset=0), Assign([Name('TEXT_ENCODING', Store(), lineno=15, col_offset=0)], Str('utf8', lineno=15, col_offset=16), lineno=15, col_offset=0), Assign([Name('NEWLINES', Store(), lineno=16, col_offset=0)], Str('lf', lineno=16, col_offset=11), lineno=16, col_offset=0), TryExcept([Expr(Name('xrange', Load(), lineno=20, col_offset=4), lineno=20, col_offset=4)], [ExceptHandler(Name('NameError', Load(), lineno=21, col_offset=7), None, [Assign([Name('xrange', Store(), lineno=22, col_offset=4)], Name('range', Load(), lineno=22, col_offset=13), lineno=22, col_offset=4)], lineno=21, col_offset=0)], [], lineno=19, col_offset=0), FunctionDef('text_open', arguments([Name('fn', Param(), lineno=24, col_offset=14), Name('mode', Param(), lineno=24, col_offset=18), Name('encoding', Param(), lineno=24, col_offset=24)], None, None, [Name('None', Load(), lineno=24, col_offset=33)]), [TryExcept([Return(Call(Name('open', Load(), lineno=26, col_offset=15), [Name('fn', Load(), lineno=26, col_offset=20), Name('mode', Load(), lineno=26, col_offset=24)], [keyword('encoding', BoolOp(Or(), [Name('encoding', Load(), lineno=26, col_offset=39), Name('TEXT_ENCODING', Load(), lineno=26, col_offset=51)], lineno=26, col_offset=39))], None, None, lineno=26, col_offset=15), lineno=26, col_offset=8)], [ExceptHandler(Name('TypeError', Load(), lineno=27, col_offset=11), None, [Return(Call(Name('open', Load(), lineno=28, col_offset=15), [Name('fn', Load(), lineno=28, col_offset=20), Name('mode', Load(), lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=15), lineno=28, col_offset=8)], lineno=27, col_offset=4)], [], lineno=25, col_offset=4)], [], lineno=24, col_offset=0), FunctionDef('get_file_sizes', arguments([], None, None, []), [For(Name('s', Store(), lineno=31, col_offset=8), List([Str('20 KB', lineno=31, col_offset=14), Str('400 KB', lineno=31, col_offset=23), Str('10 MB', lineno=31, col_offset=33)], Load(), lineno=31, col_offset=13), [Assign([Tuple([Name('size', Store(), lineno=32, col_offset=8), Name('unit', Store(), lineno=32, col_offset=14)], Store(), lineno=32, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=32, col_offset=21), 'split', Load(), lineno=32, col_offset=21), [], [], None, None, lineno=32, col_offset=21), lineno=32, col_offset=8), Assign([Name('size', Store(), lineno=33, col_offset=8)], BinOp(Call(Name('int', Load(), lineno=33, col_offset=15), [Name('size', Load(), lineno=33, col_offset=19)], [], None, None, lineno=33, col_offset=15), Mult(), Subscript(Dict([Str('KB', lineno=33, col_offset=28), Str('MB', lineno=33, col_offset=40)], [Num(1024, lineno=33, col_offset=34), BinOp(Num(1024, lineno=33, col_offset=46), Pow(), Num(2, lineno=33, col_offset=54), lineno=33, col_offset=46)], lineno=33, col_offset=27), Index(Name('unit', Load(), lineno=33, col_offset=57)), Load(), lineno=33, col_offset=27), lineno=33, col_offset=15), lineno=33, col_offset=8), Expr(Yield(Tuple([Call(Attribute(Name('s', Load(), lineno=34, col_offset=14), 'replace', Load(), lineno=34, col_offset=14), [Str(' ', lineno=34, col_offset=24), Str('', lineno=34, col_offset=29)], [], None, None, lineno=34, col_offset=14), Name('size', Load(), lineno=34, col_offset=34)], Load(), lineno=34, col_offset=14), lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=30, col_offset=0), FunctionDef('get_binary_files', arguments([], None, None, []), [Return(GeneratorExp(Tuple([BinOp(Name('name', Load(), lineno=37, col_offset=13), Add(), Str('.bin', lineno=37, col_offset=20), lineno=37, col_offset=13), Name('size', Load(), lineno=37, col_offset=28)], Load(), lineno=37, col_offset=13), [comprehension(Tuple([Name('name', Store(), lineno=37, col_offset=38), Name('size', Store(), lineno=37, col_offset=44)], Store(), lineno=37, col_offset=38), Call(Name('get_file_sizes', Load(), lineno=37, col_offset=52), [], [], None, None, lineno=37, col_offset=52), [])], lineno=37, col_offset=12), lineno=37, col_offset=4)], [], lineno=36, col_offset=0), FunctionDef('get_text_files', arguments([], None, None, []), [Return(GeneratorExp(Tuple([BinOp(Str('%s-%s-%s.txt', lineno=40, col_offset=13), Mod(), Tuple([Name('name', Load(), lineno=40, col_offset=31), Name('TEXT_ENCODING', Load(), lineno=40, col_offset=37), Name('NEWLINES', Load(), lineno=40, col_offset=52)], Load(), lineno=40, col_offset=31), lineno=40, col_offset=13), Name('size', Load(), lineno=40, col_offset=63)], Load(), lineno=40, col_offset=13), [comprehension(Tuple([Name('name', Store(), lineno=41, col_offset=12), Name('size', Store(), lineno=41, col_offset=18)], Store(), lineno=41, col_offset=12), Call(Name('get_file_sizes', Load(), lineno=41, col_offset=26), [], [], None, None, lineno=41, col_offset=26), [])], lineno=40, col_offset=12), lineno=40, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('with_open_mode', arguments([Name('mode', Param(), lineno=43, col_offset=19)], None, None, []), [FunctionDef('decorate', arguments([Name('f', Param(), lineno=44, col_offset=17)], None, None, []), [Assign([Attribute(Name('f', Load(), lineno=45, col_offset=8), 'file_open_mode', Store(), lineno=45, col_offset=8)], Name('mode', Load(), lineno=45, col_offset=27), lineno=45, col_offset=8), Return(Name('f', Load(), lineno=46, col_offset=15), lineno=46, col_offset=8)], [], lineno=44, col_offset=4), Return(Name('decorate', Load(), lineno=47, col_offset=11), lineno=47, col_offset=4)], [], lineno=43, col_offset=0), FunctionDef('with_sizes', arguments([], 'sizes', None, []), [FunctionDef('decorate', arguments([Name('f', Param(), lineno=50, col_offset=17)], None, None, []), [Assign([Attribute(Name('f', Load(), lineno=51, col_offset=8), 'file_sizes', Store(), lineno=51, col_offset=8)], Name('sizes', Load(), lineno=51, col_offset=23), lineno=51, col_offset=8), Return(Name('f', Load(), lineno=52, col_offset=15), lineno=52, col_offset=8)], [], lineno=50, col_offset=4), Return(Name('decorate', Load(), lineno=53, col_offset=11), lineno=53, col_offset=4)], [], lineno=49, col_offset=0), FunctionDef('read_bytewise', arguments([Name('f', Param(), lineno=60, col_offset=18)], None, None, []), [Expr(Str(' read one unit at a time ', lineno=61, col_offset=4), lineno=61, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=62, col_offset=4), 'seek', Load(), lineno=62, col_offset=4), [Num(0, lineno=62, col_offset=11)], [], None, None, lineno=62, col_offset=4), lineno=62, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=63, col_offset=10), 'read', Load(), lineno=63, col_offset=10), [Num(1, lineno=63, col_offset=17)], [], None, None, lineno=63, col_offset=10), [Pass( lineno=64, col_offset=8)], [], lineno=63, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=58, col_offset=1), [Str('r', lineno=58, col_offset=16)], [], None, None, lineno=58, col_offset=1), Call(Name('with_sizes', Load(), lineno=59, col_offset=1), [Str('medium', lineno=59, col_offset=12)], [], None, None, lineno=59, col_offset=1)], lineno=58, col_offset=0), FunctionDef('read_small_chunks', arguments([Name('f', Param(), lineno=68, col_offset=22)], None, None, []), [Expr(Str(' read 20 units at a time ', lineno=69, col_offset=4), lineno=69, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=70, col_offset=4), 'seek', Load(), lineno=70, col_offset=4), [Num(0, lineno=70, col_offset=11)], [], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=71, col_offset=10), 'read', Load(), lineno=71, col_offset=10), [Num(20, lineno=71, col_offset=17)], [], None, None, lineno=71, col_offset=10), [Pass( lineno=72, col_offset=8)], [], lineno=71, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=66, col_offset=1), [Str('r', lineno=66, col_offset=16)], [], None, None, lineno=66, col_offset=1), Call(Name('with_sizes', Load(), lineno=67, col_offset=1), [Str('medium', lineno=67, col_offset=12)], [], None, None, lineno=67, col_offset=1)], lineno=66, col_offset=0), FunctionDef('read_big_chunks', arguments([Name('f', Param(), lineno=76, col_offset=20)], None, None, []), [Expr(Str(' read 4096 units at a time ', lineno=77, col_offset=4), lineno=77, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=78, col_offset=4), 'seek', Load(), lineno=78, col_offset=4), [Num(0, lineno=78, col_offset=11)], [], None, None, lineno=78, col_offset=4), lineno=78, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=79, col_offset=10), 'read', Load(), lineno=79, col_offset=10), [Num(4096, lineno=79, col_offset=17)], [], None, None, lineno=79, col_offset=10), [Pass( lineno=80, col_offset=8)], [], lineno=79, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=74, col_offset=1), [Str('r', lineno=74, col_offset=16)], [], None, None, lineno=74, col_offset=1), Call(Name('with_sizes', Load(), lineno=75, col_offset=1), [Str('medium', lineno=75, col_offset=12)], [], None, None, lineno=75, col_offset=1)], lineno=74, col_offset=0), FunctionDef('read_whole_file', arguments([Name('f', Param(), lineno=84, col_offset=20)], None, None, []), [Expr(Str(' read whole contents at once ', lineno=85, col_offset=4), lineno=85, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=86, col_offset=4), 'seek', Load(), lineno=86, col_offset=4), [Num(0, lineno=86, col_offset=11)], [], None, None, lineno=86, col_offset=4), lineno=86, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=87, col_offset=10), 'read', Load(), lineno=87, col_offset=10), [], [], None, None, lineno=87, col_offset=10), [Pass( lineno=88, col_offset=8)], [], lineno=87, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=82, col_offset=1), [Str('r', lineno=82, col_offset=16)], [], None, None, lineno=82, col_offset=1), Call(Name('with_sizes', Load(), lineno=83, col_offset=1), [Str('small', lineno=83, col_offset=12), Str('medium', lineno=83, col_offset=21), Str('large', lineno=83, col_offset=31)], [], None, None, lineno=83, col_offset=1)], lineno=82, col_offset=0), FunctionDef('read_lines', arguments([Name('f', Param(), lineno=92, col_offset=15)], None, None, []), [Expr(Str(' read one line at a time ', lineno=93, col_offset=4), lineno=93, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=94, col_offset=4), 'seek', Load(), lineno=94, col_offset=4), [Num(0, lineno=94, col_offset=11)], [], None, None, lineno=94, col_offset=4), lineno=94, col_offset=4), For(Name('line', Store(), lineno=95, col_offset=8), Name('f', Load(), lineno=95, col_offset=16), [Pass( lineno=96, col_offset=8)], [], lineno=95, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=90, col_offset=1), [Str('rt', lineno=90, col_offset=16)], [], None, None, lineno=90, col_offset=1), Call(Name('with_sizes', Load(), lineno=91, col_offset=1), [Str('medium', lineno=91, col_offset=12)], [], None, None, lineno=91, col_offset=1)], lineno=90, col_offset=0), FunctionDef('seek_forward_bytewise', arguments([Name('f', Param(), lineno=100, col_offset=26)], None, None, []), [Expr(Str(' seek forward one unit at a time ', lineno=101, col_offset=4), lineno=101, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=102, col_offset=4), 'seek', Load(), lineno=102, col_offset=4), [Num(0, lineno=102, col_offset=11), Num(2, lineno=102, col_offset=14)], [], None, None, lineno=102, col_offset=4), lineno=102, col_offset=4), Assign([Name('size', Store(), lineno=103, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=103, col_offset=11), 'tell', Load(), lineno=103, col_offset=11), [], [], None, None, lineno=103, col_offset=11), lineno=103, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=104, col_offset=4), 'seek', Load(), lineno=104, col_offset=4), [Num(0, lineno=104, col_offset=11), Num(0, lineno=104, col_offset=14)], [], None, None, lineno=104, col_offset=4), lineno=104, col_offset=4), For(Name('i', Store(), lineno=105, col_offset=8), Call(Name('xrange', Load(), lineno=105, col_offset=13), [Num(0, lineno=105, col_offset=20), BinOp(Name('size', Load(), lineno=105, col_offset=23), Sub(), Num(1, lineno=105, col_offset=30), lineno=105, col_offset=23)], [], None, None, lineno=105, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=106, col_offset=8), 'seek', Load(), lineno=106, col_offset=8), [Name('i', Load(), lineno=106, col_offset=15), Num(0, lineno=106, col_offset=18)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8)], [], lineno=105, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=98, col_offset=1), [Str('r', lineno=98, col_offset=16)], [], None, None, lineno=98, col_offset=1), Call(Name('with_sizes', Load(), lineno=99, col_offset=1), [Str('medium', lineno=99, col_offset=12)], [], None, None, lineno=99, col_offset=1)], lineno=98, col_offset=0), FunctionDef('seek_forward_blockwise', arguments([Name('f', Param(), lineno=110, col_offset=27)], None, None, []), [Expr(Str(' seek forward 1000 units at a time ', lineno=111, col_offset=4), lineno=111, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=112, col_offset=4), 'seek', Load(), lineno=112, col_offset=4), [Num(0, lineno=112, col_offset=11), Num(2, lineno=112, col_offset=14)], [], None, None, lineno=112, col_offset=4), lineno=112, col_offset=4), Assign([Name('size', Store(), lineno=113, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=113, col_offset=11), 'tell', Load(), lineno=113, col_offset=11), [], [], None, None, lineno=113, col_offset=11), lineno=113, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=114, col_offset=4), 'seek', Load(), lineno=114, col_offset=4), [Num(0, lineno=114, col_offset=11), Num(0, lineno=114, col_offset=14)], [], None, None, lineno=114, col_offset=4), lineno=114, col_offset=4), For(Name('i', Store(), lineno=115, col_offset=8), Call(Name('xrange', Load(), lineno=115, col_offset=13), [Num(0, lineno=115, col_offset=20), BinOp(Name('size', Load(), lineno=115, col_offset=23), Sub(), Num(1, lineno=115, col_offset=30), lineno=115, col_offset=23), Num(1000, lineno=115, col_offset=33)], [], None, None, lineno=115, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=116, col_offset=8), 'seek', Load(), lineno=116, col_offset=8), [Name('i', Load(), lineno=116, col_offset=15), Num(0, lineno=116, col_offset=18)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8)], [], lineno=115, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=108, col_offset=1), [Str('r', lineno=108, col_offset=16)], [], None, None, lineno=108, col_offset=1), Call(Name('with_sizes', Load(), lineno=109, col_offset=1), [Str('medium', lineno=109, col_offset=12)], [], None, None, lineno=109, col_offset=1)], lineno=108, col_offset=0), FunctionDef('read_seek_bytewise', arguments([Name('f', Param(), lineno=120, col_offset=23)], None, None, []), [Expr(Str(' alternate read & seek one unit ', lineno=121, col_offset=4), lineno=121, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=122, col_offset=4), 'seek', Load(), lineno=122, col_offset=4), [Num(0, lineno=122, col_offset=11)], [], None, None, lineno=122, col_offset=4), lineno=122, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=123, col_offset=10), 'read', Load(), lineno=123, col_offset=10), [Num(1, lineno=123, col_offset=17)], [], None, None, lineno=123, col_offset=10), [Expr(Call(Attribute(Name('f', Load(), lineno=124, col_offset=8), 'seek', Load(), lineno=124, col_offset=8), [Num(1, lineno=124, col_offset=15), Num(1, lineno=124, col_offset=18)], [], None, None, lineno=124, col_offset=8), lineno=124, col_offset=8)], [], lineno=123, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=118, col_offset=1), [Str('rb', lineno=118, col_offset=16)], [], None, None, lineno=118, col_offset=1), Call(Name('with_sizes', Load(), lineno=119, col_offset=1), [Str('medium', lineno=119, col_offset=12)], [], None, None, lineno=119, col_offset=1)], lineno=118, col_offset=0), FunctionDef('read_seek_blockwise', arguments([Name('f', Param(), lineno=128, col_offset=24)], None, None, []), [Expr(Str(' alternate read & seek 1000 units ', lineno=129, col_offset=4), lineno=129, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=130, col_offset=4), 'seek', Load(), lineno=130, col_offset=4), [Num(0, lineno=130, col_offset=11)], [], None, None, lineno=130, col_offset=4), lineno=130, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=131, col_offset=10), 'read', Load(), lineno=131, col_offset=10), [Num(1000, lineno=131, col_offset=17)], [], None, None, lineno=131, col_offset=10), [Expr(Call(Attribute(Name('f', Load(), lineno=132, col_offset=8), 'seek', Load(), lineno=132, col_offset=8), [Num(1000, lineno=132, col_offset=15), Num(1, lineno=132, col_offset=21)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=131, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=126, col_offset=1), [Str('rb', lineno=126, col_offset=16)], [], None, None, lineno=126, col_offset=1), Call(Name('with_sizes', Load(), lineno=127, col_offset=1), [Str('medium', lineno=127, col_offset=12)], [], None, None, lineno=127, col_offset=1)], lineno=126, col_offset=0), FunctionDef('write_bytewise', arguments([Name('f', Param(), lineno=137, col_offset=19), Name('source', Param(), lineno=137, col_offset=22)], None, None, []), [Expr(Str(' write one unit at a time ', lineno=138, col_offset=4), lineno=138, col_offset=4), For(Name('i', Store(), lineno=139, col_offset=8), Call(Name('xrange', Load(), lineno=139, col_offset=13), [Num(0, lineno=139, col_offset=20), Call(Name('len', Load(), lineno=139, col_offset=23), [Name('source', Load(), lineno=139, col_offset=27)], [], None, None, lineno=139, col_offset=23)], [], None, None, lineno=139, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=140, col_offset=8), 'write', Load(), lineno=140, col_offset=8), [Subscript(Name('source', Load(), lineno=140, col_offset=16), Slice(Name('i', Load(), lineno=140, col_offset=23), BinOp(Name('i', Load(), lineno=140, col_offset=25), Add(), Num(1, lineno=140, col_offset=27), lineno=140, col_offset=25), None), Load(), lineno=140, col_offset=16)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8)], [], lineno=139, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=135, col_offset=1), [Str('w', lineno=135, col_offset=16)], [], None, None, lineno=135, col_offset=1), Call(Name('with_sizes', Load(), lineno=136, col_offset=1), [Str('small', lineno=136, col_offset=12)], [], None, None, lineno=136, col_offset=1)], lineno=135, col_offset=0), FunctionDef('write_small_chunks', arguments([Name('f', Param(), lineno=144, col_offset=23), Name('source', Param(), lineno=144, col_offset=26)], None, None, []), [Expr(Str(' write 20 units at a time ', lineno=145, col_offset=4), lineno=145, col_offset=4), For(Name('i', Store(), lineno=146, col_offset=8), Call(Name('xrange', Load(), lineno=146, col_offset=13), [Num(0, lineno=146, col_offset=20), Call(Name('len', Load(), lineno=146, col_offset=23), [Name('source', Load(), lineno=146, col_offset=27)], [], None, None, lineno=146, col_offset=23), Num(20, lineno=146, col_offset=36)], [], None, None, lineno=146, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=147, col_offset=8), 'write', Load(), lineno=147, col_offset=8), [Subscript(Name('source', Load(), lineno=147, col_offset=16), Slice(Name('i', Load(), lineno=147, col_offset=23), BinOp(Name('i', Load(), lineno=147, col_offset=25), Add(), Num(20, lineno=147, col_offset=27), lineno=147, col_offset=25), None), Load(), lineno=147, col_offset=16)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8)], [], lineno=146, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=142, col_offset=1), [Str('w', lineno=142, col_offset=16)], [], None, None, lineno=142, col_offset=1), Call(Name('with_sizes', Load(), lineno=143, col_offset=1), [Str('medium', lineno=143, col_offset=12)], [], None, None, lineno=143, col_offset=1)], lineno=142, col_offset=0), FunctionDef('write_medium_chunks', arguments([Name('f', Param(), lineno=151, col_offset=24), Name('source', Param(), lineno=151, col_offset=27)], None, None, []), [Expr(Str(' write 4096 units at a time ', lineno=152, col_offset=4), lineno=152, col_offset=4), For(Name('i', Store(), lineno=153, col_offset=8), Call(Name('xrange', Load(), lineno=153, col_offset=13), [Num(0, lineno=153, col_offset=20), Call(Name('len', Load(), lineno=153, col_offset=23), [Name('source', Load(), lineno=153, col_offset=27)], [], None, None, lineno=153, col_offset=23), Num(4096, lineno=153, col_offset=36)], [], None, None, lineno=153, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=154, col_offset=8), 'write', Load(), lineno=154, col_offset=8), [Subscript(Name('source', Load(), lineno=154, col_offset=16), Slice(Name('i', Load(), lineno=154, col_offset=23), BinOp(Name('i', Load(), lineno=154, col_offset=25), Add(), Num(4096, lineno=154, col_offset=27), lineno=154, col_offset=25), None), Load(), lineno=154, col_offset=16)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=153, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=149, col_offset=1), [Str('w', lineno=149, col_offset=16)], [], None, None, lineno=149, col_offset=1), Call(Name('with_sizes', Load(), lineno=150, col_offset=1), [Str('medium', lineno=150, col_offset=12)], [], None, None, lineno=150, col_offset=1)], lineno=149, col_offset=0), FunctionDef('write_large_chunks', arguments([Name('f', Param(), lineno=158, col_offset=23), Name('source', Param(), lineno=158, col_offset=26)], None, None, []), [Expr(Str(' write 1e6 units at a time ', lineno=159, col_offset=4), lineno=159, col_offset=4), For(Name('i', Store(), lineno=160, col_offset=8), Call(Name('xrange', Load(), lineno=160, col_offset=13), [Num(0, lineno=160, col_offset=20), Call(Name('len', Load(), lineno=160, col_offset=23), [Name('source', Load(), lineno=160, col_offset=27)], [], None, None, lineno=160, col_offset=23), Num(1000000, lineno=160, col_offset=36)], [], None, None, lineno=160, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=161, col_offset=8), 'write', Load(), lineno=161, col_offset=8), [Subscript(Name('source', Load(), lineno=161, col_offset=16), Slice(Name('i', Load(), lineno=161, col_offset=23), BinOp(Name('i', Load(), lineno=161, col_offset=25), Add(), Num(1000000, lineno=161, col_offset=27), lineno=161, col_offset=25), None), Load(), lineno=161, col_offset=16)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8)], [], lineno=160, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=156, col_offset=1), [Str('w', lineno=156, col_offset=16)], [], None, None, lineno=156, col_offset=1), Call(Name('with_sizes', Load(), lineno=157, col_offset=1), [Str('large', lineno=157, col_offset=12)], [], None, None, lineno=157, col_offset=1)], lineno=156, col_offset=0), FunctionDef('modify_bytewise', arguments([Name('f', Param(), lineno=166, col_offset=20), Name('source', Param(), lineno=166, col_offset=23)], None, None, []), [Expr(Str(' modify one unit at a time ', lineno=167, col_offset=4), lineno=167, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=168, col_offset=4), 'seek', Load(), lineno=168, col_offset=4), [Num(0, lineno=168, col_offset=11)], [], None, None, lineno=168, col_offset=4), lineno=168, col_offset=4), For(Name('i', Store(), lineno=169, col_offset=8), Call(Name('xrange', Load(), lineno=169, col_offset=13), [Num(0, lineno=169, col_offset=20), Call(Name('len', Load(), lineno=169, col_offset=23), [Name('source', Load(), lineno=169, col_offset=27)], [], None, None, lineno=169, col_offset=23)], [], None, None, lineno=169, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=170, col_offset=8), 'write', Load(), lineno=170, col_offset=8), [Subscript(Name('source', Load(), lineno=170, col_offset=16), Slice(Name('i', Load(), lineno=170, col_offset=23), BinOp(Name('i', Load(), lineno=170, col_offset=25), Add(), Num(1, lineno=170, col_offset=27), lineno=170, col_offset=25), None), Load(), lineno=170, col_offset=16)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8)], [], lineno=169, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=164, col_offset=1), [Str('w+', lineno=164, col_offset=16)], [], None, None, lineno=164, col_offset=1), Call(Name('with_sizes', Load(), lineno=165, col_offset=1), [Str('small', lineno=165, col_offset=12)], [], None, None, lineno=165, col_offset=1)], lineno=164, col_offset=0), FunctionDef('modify_small_chunks', arguments([Name('f', Param(), lineno=174, col_offset=24), Name('source', Param(), lineno=174, col_offset=27)], None, None, []), [Expr(Str(' modify 20 units at a time ', lineno=175, col_offset=4), lineno=175, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=176, col_offset=4), 'seek', Load(), lineno=176, col_offset=4), [Num(0, lineno=176, col_offset=11)], [], None, None, lineno=176, col_offset=4), lineno=176, col_offset=4), For(Name('i', Store(), lineno=177, col_offset=8), Call(Name('xrange', Load(), lineno=177, col_offset=13), [Num(0, lineno=177, col_offset=20), Call(Name('len', Load(), lineno=177, col_offset=23), [Name('source', Load(), lineno=177, col_offset=27)], [], None, None, lineno=177, col_offset=23), Num(20, lineno=177, col_offset=36)], [], None, None, lineno=177, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=178, col_offset=8), 'write', Load(), lineno=178, col_offset=8), [Subscript(Name('source', Load(), lineno=178, col_offset=16), Slice(Name('i', Load(), lineno=178, col_offset=23), BinOp(Name('i', Load(), lineno=178, col_offset=25), Add(), Num(20, lineno=178, col_offset=27), lineno=178, col_offset=25), None), Load(), lineno=178, col_offset=16)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8)], [], lineno=177, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=172, col_offset=1), [Str('w+', lineno=172, col_offset=16)], [], None, None, lineno=172, col_offset=1), Call(Name('with_sizes', Load(), lineno=173, col_offset=1), [Str('medium', lineno=173, col_offset=12)], [], None, None, lineno=173, col_offset=1)], lineno=172, col_offset=0), FunctionDef('modify_medium_chunks', arguments([Name('f', Param(), lineno=182, col_offset=25), Name('source', Param(), lineno=182, col_offset=28)], None, None, []), [Expr(Str(' modify 4096 units at a time ', lineno=183, col_offset=4), lineno=183, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=184, col_offset=4), 'seek', Load(), lineno=184, col_offset=4), [Num(0, lineno=184, col_offset=11)], [], None, None, lineno=184, col_offset=4), lineno=184, col_offset=4), For(Name('i', Store(), lineno=185, col_offset=8), Call(Name('xrange', Load(), lineno=185, col_offset=13), [Num(0, lineno=185, col_offset=20), Call(Name('len', Load(), lineno=185, col_offset=23), [Name('source', Load(), lineno=185, col_offset=27)], [], None, None, lineno=185, col_offset=23), Num(4096, lineno=185, col_offset=36)], [], None, None, lineno=185, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=186, col_offset=8), 'write', Load(), lineno=186, col_offset=8), [Subscript(Name('source', Load(), lineno=186, col_offset=16), Slice(Name('i', Load(), lineno=186, col_offset=23), BinOp(Name('i', Load(), lineno=186, col_offset=25), Add(), Num(4096, lineno=186, col_offset=27), lineno=186, col_offset=25), None), Load(), lineno=186, col_offset=16)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=185, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=180, col_offset=1), [Str('w+', lineno=180, col_offset=16)], [], None, None, lineno=180, col_offset=1), Call(Name('with_sizes', Load(), lineno=181, col_offset=1), [Str('medium', lineno=181, col_offset=12)], [], None, None, lineno=181, col_offset=1)], lineno=180, col_offset=0), FunctionDef('modify_seek_forward_bytewise', arguments([Name('f', Param(), lineno=190, col_offset=33), Name('source', Param(), lineno=190, col_offset=36)], None, None, []), [Expr(Str(' alternate write & seek one unit ', lineno=191, col_offset=4), lineno=191, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=192, col_offset=4), 'seek', Load(), lineno=192, col_offset=4), [Num(0, lineno=192, col_offset=11)], [], None, None, lineno=192, col_offset=4), lineno=192, col_offset=4), For(Name('i', Store(), lineno=193, col_offset=8), Call(Name('xrange', Load(), lineno=193, col_offset=13), [Num(0, lineno=193, col_offset=20), Call(Name('len', Load(), lineno=193, col_offset=23), [Name('source', Load(), lineno=193, col_offset=27)], [], None, None, lineno=193, col_offset=23), Num(2, lineno=193, col_offset=36)], [], None, None, lineno=193, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=194, col_offset=8), 'write', Load(), lineno=194, col_offset=8), [Subscript(Name('source', Load(), lineno=194, col_offset=16), Slice(Name('i', Load(), lineno=194, col_offset=23), BinOp(Name('i', Load(), lineno=194, col_offset=25), Add(), Num(1, lineno=194, col_offset=27), lineno=194, col_offset=25), None), Load(), lineno=194, col_offset=16)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=195, col_offset=8), 'seek', Load(), lineno=195, col_offset=8), [BinOp(Name('i', Load(), lineno=195, col_offset=15), Add(), Num(2, lineno=195, col_offset=17), lineno=195, col_offset=15)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=193, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=188, col_offset=1), [Str('wb+', lineno=188, col_offset=16)], [], None, None, lineno=188, col_offset=1), Call(Name('with_sizes', Load(), lineno=189, col_offset=1), [Str('medium', lineno=189, col_offset=12)], [], None, None, lineno=189, col_offset=1)], lineno=188, col_offset=0), FunctionDef('modify_seek_forward_blockwise', arguments([Name('f', Param(), lineno=199, col_offset=34), Name('source', Param(), lineno=199, col_offset=37)], None, None, []), [Expr(Str(' alternate write & seek 1000 units ', lineno=200, col_offset=4), lineno=200, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=201, col_offset=4), 'seek', Load(), lineno=201, col_offset=4), [Num(0, lineno=201, col_offset=11)], [], None, None, lineno=201, col_offset=4), lineno=201, col_offset=4), For(Name('i', Store(), lineno=202, col_offset=8), Call(Name('xrange', Load(), lineno=202, col_offset=13), [Num(0, lineno=202, col_offset=20), Call(Name('len', Load(), lineno=202, col_offset=23), [Name('source', Load(), lineno=202, col_offset=27)], [], None, None, lineno=202, col_offset=23), Num(2000, lineno=202, col_offset=36)], [], None, None, lineno=202, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=203, col_offset=8), 'write', Load(), lineno=203, col_offset=8), [Subscript(Name('source', Load(), lineno=203, col_offset=16), Slice(Name('i', Load(), lineno=203, col_offset=23), BinOp(Name('i', Load(), lineno=203, col_offset=25), Add(), Num(1000, lineno=203, col_offset=27), lineno=203, col_offset=25), None), Load(), lineno=203, col_offset=16)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=204, col_offset=8), 'seek', Load(), lineno=204, col_offset=8), [BinOp(Name('i', Load(), lineno=204, col_offset=15), Add(), Num(2000, lineno=204, col_offset=17), lineno=204, col_offset=15)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8)], [], lineno=202, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=197, col_offset=1), [Str('wb+', lineno=197, col_offset=16)], [], None, None, lineno=197, col_offset=1), Call(Name('with_sizes', Load(), lineno=198, col_offset=1), [Str('medium', lineno=198, col_offset=12)], [], None, None, lineno=198, col_offset=1)], lineno=197, col_offset=0), FunctionDef('read_modify_bytewise', arguments([Name('f', Param(), lineno=209, col_offset=25), Name('source', Param(), lineno=209, col_offset=28)], None, None, []), [Expr(Str(' alternate read & write one unit ', lineno=210, col_offset=4), lineno=210, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=211, col_offset=4), 'seek', Load(), lineno=211, col_offset=4), [Num(0, lineno=211, col_offset=11)], [], None, None, lineno=211, col_offset=4), lineno=211, col_offset=4), For(Name('i', Store(), lineno=212, col_offset=8), Call(Name('xrange', Load(), lineno=212, col_offset=13), [Num(0, lineno=212, col_offset=20), Call(Name('len', Load(), lineno=212, col_offset=23), [Name('source', Load(), lineno=212, col_offset=27)], [], None, None, lineno=212, col_offset=23), Num(2, lineno=212, col_offset=36)], [], None, None, lineno=212, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=213, col_offset=8), 'read', Load(), lineno=213, col_offset=8), [Num(1, lineno=213, col_offset=15)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=214, col_offset=8), 'write', Load(), lineno=214, col_offset=8), [Subscript(Name('source', Load(), lineno=214, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=214, col_offset=23), Add(), Num(1, lineno=214, col_offset=25), lineno=214, col_offset=23), BinOp(Name('i', Load(), lineno=214, col_offset=27), Add(), Num(2, lineno=214, col_offset=29), lineno=214, col_offset=27), None), Load(), lineno=214, col_offset=16)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8)], [], lineno=212, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=207, col_offset=1), [Str('wb+', lineno=207, col_offset=16)], [], None, None, lineno=207, col_offset=1), Call(Name('with_sizes', Load(), lineno=208, col_offset=1), [Str('medium', lineno=208, col_offset=12)], [], None, None, lineno=208, col_offset=1)], lineno=207, col_offset=0), FunctionDef('read_modify_blockwise', arguments([Name('f', Param(), lineno=218, col_offset=26), Name('source', Param(), lineno=218, col_offset=29)], None, None, []), [Expr(Str(' alternate read & write 1000 units ', lineno=219, col_offset=4), lineno=219, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=220, col_offset=4), 'seek', Load(), lineno=220, col_offset=4), [Num(0, lineno=220, col_offset=11)], [], None, None, lineno=220, col_offset=4), lineno=220, col_offset=4), For(Name('i', Store(), lineno=221, col_offset=8), Call(Name('xrange', Load(), lineno=221, col_offset=13), [Num(0, lineno=221, col_offset=20), Call(Name('len', Load(), lineno=221, col_offset=23), [Name('source', Load(), lineno=221, col_offset=27)], [], None, None, lineno=221, col_offset=23), Num(2000, lineno=221, col_offset=36)], [], None, None, lineno=221, col_offset=13), [Expr(Call(Attribute(Name('f', Load(), lineno=222, col_offset=8), 'read', Load(), lineno=222, col_offset=8), [Num(1000, lineno=222, col_offset=15)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=223, col_offset=8), 'write', Load(), lineno=223, col_offset=8), [Subscript(Name('source', Load(), lineno=223, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=223, col_offset=23), Add(), Num(1000, lineno=223, col_offset=25), lineno=223, col_offset=23), BinOp(Name('i', Load(), lineno=223, col_offset=30), Add(), Num(2000, lineno=223, col_offset=32), lineno=223, col_offset=30), None), Load(), lineno=223, col_offset=16)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8)], [], lineno=221, col_offset=4)], [Call(Name('with_open_mode', Load(), lineno=216, col_offset=1), [Str('wb+', lineno=216, col_offset=16)], [], None, None, lineno=216, col_offset=1), Call(Name('with_sizes', Load(), lineno=217, col_offset=1), [Str('medium', lineno=217, col_offset=12)], [], None, None, lineno=217, col_offset=1)], lineno=216, col_offset=0), Assign([Name('read_tests', Store(), lineno=226, col_offset=0)], List([Name('read_bytewise', Load(), lineno=227, col_offset=4), Name('read_small_chunks', Load(), lineno=227, col_offset=19), Name('read_lines', Load(), lineno=227, col_offset=38), Name('read_big_chunks', Load(), lineno=227, col_offset=50), Name('None', Load(), lineno=228, col_offset=4), Name('read_whole_file', Load(), lineno=228, col_offset=10), Name('None', Load(), lineno=228, col_offset=27), Name('seek_forward_bytewise', Load(), lineno=229, col_offset=4), Name('seek_forward_blockwise', Load(), lineno=229, col_offset=27), Name('read_seek_bytewise', Load(), lineno=230, col_offset=4), Name('read_seek_blockwise', Load(), lineno=230, col_offset=24)], Load(), lineno=226, col_offset=13), lineno=226, col_offset=0), Assign([Name('write_tests', Store(), lineno=233, col_offset=0)], List([Name('write_bytewise', Load(), lineno=234, col_offset=4), Name('write_small_chunks', Load(), lineno=234, col_offset=20), Name('write_medium_chunks', Load(), lineno=234, col_offset=40), Name('write_large_chunks', Load(), lineno=234, col_offset=61)], Load(), lineno=233, col_offset=14), lineno=233, col_offset=0), Assign([Name('modify_tests', Store(), lineno=237, col_offset=0)], List([Name('modify_bytewise', Load(), lineno=238, col_offset=4), Name('modify_small_chunks', Load(), lineno=238, col_offset=21), Name('modify_medium_chunks', Load(), lineno=238, col_offset=42), Name('None', Load(), lineno=239, col_offset=4), Name('modify_seek_forward_bytewise', Load(), lineno=240, col_offset=4), Name('modify_seek_forward_blockwise', Load(), lineno=240, col_offset=34), Name('read_modify_bytewise', Load(), lineno=241, col_offset=4), Name('read_modify_blockwise', Load(), lineno=241, col_offset=26)], Load(), lineno=237, col_offset=15), lineno=237, col_offset=0), FunctionDef('run_during', arguments([Name('duration', Param(), lineno=244, col_offset=15), Name('func', Param(), lineno=244, col_offset=25)], None, None, []), [Assign([Name('_t', Store(), lineno=245, col_offset=4)], Attribute(Name('time', Load(), lineno=245, col_offset=9), 'time', Load(), lineno=245, col_offset=9), lineno=245, col_offset=4), Assign([Name('n', Store(), lineno=246, col_offset=4)], Num(0, lineno=246, col_offset=8), lineno=246, col_offset=4), Assign([Name('start', Store(), lineno=247, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=247, col_offset=12), 'times', Load(), lineno=247, col_offset=12), [], [], None, None, lineno=247, col_offset=12), lineno=247, col_offset=4), Assign([Name('start_timestamp', Store(), lineno=248, col_offset=4)], Call(Name('_t', Load(), lineno=248, col_offset=22), [], [], None, None, lineno=248, col_offset=22), lineno=248, col_offset=4), Assign([Name('real_start', Store(), lineno=249, col_offset=4)], BoolOp(Or(), [Subscript(Name('start', Load(), lineno=249, col_offset=17), Index(Num(4, lineno=249, col_offset=23)), Load(), lineno=249, col_offset=17), Name('start_timestamp', Load(), lineno=249, col_offset=29)], lineno=249, col_offset=17), lineno=249, col_offset=4), While(Name('True', Load(), lineno=250, col_offset=10), [Expr(Call(Name('func', Load(), lineno=251, col_offset=8), [], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), AugAssign(Name('n', Store(), lineno=252, col_offset=8), Add(), Num(1, lineno=252, col_offset=13), lineno=252, col_offset=8), If(Compare(BinOp(Call(Name('_t', Load(), lineno=253, col_offset=11), [], [], None, None, lineno=253, col_offset=11), Sub(), Name('start_timestamp', Load(), lineno=253, col_offset=18), lineno=253, col_offset=11), [Gt()], [Name('duration', Load(), lineno=253, col_offset=36)], lineno=253, col_offset=11), [Break( lineno=254, col_offset=12)], [], lineno=253, col_offset=8)], [], lineno=250, col_offset=4), Assign([Name('end', Store(), lineno=255, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=255, col_offset=10), 'times', Load(), lineno=255, col_offset=10), [], [], None, None, lineno=255, col_offset=10), lineno=255, col_offset=4), Assign([Name('real', Store(), lineno=256, col_offset=4)], BinOp(IfExp(Subscript(Name('start', Load(), lineno=256, col_offset=22), Index(Num(4, lineno=256, col_offset=28)), Load(), lineno=256, col_offset=22), Subscript(Name('end', Load(), lineno=256, col_offset=12), Index(Num(4, lineno=256, col_offset=16)), Load(), lineno=256, col_offset=12), Call(Attribute(Name('time', Load(), lineno=256, col_offset=36), 'time', Load(), lineno=256, col_offset=36), [], [], None, None, lineno=256, col_offset=36), lineno=256, col_offset=12), Sub(), Name('real_start', Load(), lineno=256, col_offset=51), lineno=256, col_offset=11), lineno=256, col_offset=4), Return(Tuple([Name('n', Load(), lineno=257, col_offset=11), Name('real', Load(), lineno=257, col_offset=14), BinOp(Call(Name('sum', Load(), lineno=257, col_offset=20), [Subscript(Name('end', Load(), lineno=257, col_offset=24), Slice(Num(0, lineno=257, col_offset=28), Num(2, lineno=257, col_offset=30), None), Load(), lineno=257, col_offset=24)], [], None, None, lineno=257, col_offset=20), Sub(), Call(Name('sum', Load(), lineno=257, col_offset=36), [Subscript(Name('start', Load(), lineno=257, col_offset=40), Slice(Num(0, lineno=257, col_offset=46), Num(2, lineno=257, col_offset=48), None), Load(), lineno=257, col_offset=40)], [], None, None, lineno=257, col_offset=36), lineno=257, col_offset=20)], Load(), lineno=257, col_offset=11), lineno=257, col_offset=4)], [], lineno=244, col_offset=0), FunctionDef('warm_cache', arguments([Name('filename', Param(), lineno=259, col_offset=15)], None, None, []), [With(Call(Name('open', Load(), lineno=260, col_offset=9), [Name('filename', Load(), lineno=260, col_offset=14), Str('rb', lineno=260, col_offset=24)], [], None, None, lineno=260, col_offset=9), Name('f', Store(), lineno=260, col_offset=33), [Expr(Call(Attribute(Name('f', Load(), lineno=261, col_offset=8), 'read', Load(), lineno=261, col_offset=8), [], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8)], lineno=260, col_offset=9)], [], lineno=259, col_offset=0), FunctionDef('run_all_tests', arguments([Name('options', Param(), lineno=264, col_offset=18)], None, None, []), [FunctionDef('print_label', arguments([Name('filename', Param(), lineno=265, col_offset=20), Name('func', Param(), lineno=265, col_offset=30)], None, None, []), [Assign([Name('name', Store(), lineno=266, col_offset=8)], Subscript(Call(Attribute(Name('re', Load(), lineno=266, col_offset=15), 'split', Load(), lineno=266, col_offset=15), [Str('[-.]', lineno=266, col_offset=24), Name('filename', Load(), lineno=266, col_offset=33)], [], None, None, lineno=266, col_offset=15), Index(Num(0, lineno=266, col_offset=43)), Load(), lineno=266, col_offset=15), lineno=266, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=267, col_offset=8), 'write', Load(), lineno=267, col_offset=8), [Call(Attribute(BinOp(Str('[%s] %s... ', lineno=268, col_offset=13), Mod(), Tuple([Call(Attribute(Name('name', Load(), lineno=269, col_offset=19), 'center', Load(), lineno=269, col_offset=19), [Num(7, lineno=269, col_offset=31)], [], None, None, lineno=269, col_offset=19), Call(Attribute(Attribute(Name('func', Load(), lineno=269, col_offset=35), '__doc__', Load(), lineno=269, col_offset=35), 'strip', Load(), lineno=269, col_offset=35), [], [], None, None, lineno=269, col_offset=35)], Load(), lineno=269, col_offset=19), lineno=268, col_offset=13), 'ljust', Load(), lineno=268, col_offset=13), [Num(52, lineno=270, col_offset=20)], [], None, None, lineno=268, col_offset=13)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=271, col_offset=8), 'flush', Load(), lineno=271, col_offset=8), [], [], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8)], [], lineno=265, col_offset=4), FunctionDef('print_results', arguments([Name('size', Param(), lineno=273, col_offset=22), Name('n', Param(), lineno=273, col_offset=28), Name('real', Param(), lineno=273, col_offset=31), Name('cpu', Param(), lineno=273, col_offset=37)], None, None, []), [Assign([Name('bw', Store(), lineno=274, col_offset=8)], BinOp(BinOp(BinOp(Name('n', Load(), lineno=274, col_offset=13), Mult(), Call(Name('float', Load(), lineno=274, col_offset=17), [Name('size', Load(), lineno=274, col_offset=23)], [], None, None, lineno=274, col_offset=17), lineno=274, col_offset=13), Div(), BinOp(Num(1024, lineno=274, col_offset=31), Pow(), Num(2, lineno=274, col_offset=39), lineno=274, col_offset=31), lineno=274, col_offset=29), Div(), Name('real', Load(), lineno=274, col_offset=43), lineno=274, col_offset=41), lineno=274, col_offset=8), Assign([Name('bw', Store(), lineno=275, col_offset=8)], BinOp(IfExp(Compare(Name('bw', Load(), lineno=275, col_offset=28), [Gt()], [Num(100, lineno=275, col_offset=33)], lineno=275, col_offset=28), Str('%4d MB/s', lineno=275, col_offset=14), Str('%.3g MB/s', lineno=275, col_offset=42), lineno=275, col_offset=14), Mod(), Name('bw', Load(), lineno=275, col_offset=57), lineno=275, col_offset=13), lineno=275, col_offset=8), Expr(Call(Attribute(Name('out', Load(), lineno=276, col_offset=8), 'write', Load(), lineno=276, col_offset=8), [BinOp(Call(Attribute(Name('bw', Load(), lineno=276, col_offset=18), 'rjust', Load(), lineno=276, col_offset=18), [Num(12, lineno=276, col_offset=27)], [], None, None, lineno=276, col_offset=18), Add(), Str('\n', lineno=276, col_offset=33), lineno=276, col_offset=18)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), If(Compare(Name('cpu', Load(), lineno=277, col_offset=11), [Lt()], [BinOp(Num(0.9, lineno=277, col_offset=17), Mult(), Name('real', Load(), lineno=277, col_offset=24), lineno=277, col_offset=17)], lineno=277, col_offset=11), [Expr(Call(Attribute(Name('out', Load(), lineno=278, col_offset=12), 'write', Load(), lineno=278, col_offset=12), [BinOp(Str('   warning: test above used only %d%% CPU, result may be flawed!\n', lineno=278, col_offset=22), Mod(), BinOp(BinOp(Num(100.0, lineno=279, col_offset=45), Mult(), Name('cpu', Load(), lineno=279, col_offset=53), lineno=279, col_offset=45), Div(), Name('real', Load(), lineno=279, col_offset=59), lineno=279, col_offset=57), lineno=278, col_offset=22)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=12)], [], lineno=277, col_offset=8)], [], lineno=273, col_offset=4), FunctionDef('run_one_test', arguments([Name('name', Param(), lineno=281, col_offset=21), Name('size', Param(), lineno=281, col_offset=27), Name('open_func', Param(), lineno=281, col_offset=33), Name('test_func', Param(), lineno=281, col_offset=44)], 'args', None, []), [Assign([Name('mode', Store(), lineno=282, col_offset=8)], Attribute(Name('test_func', Load(), lineno=282, col_offset=15), 'file_open_mode', Load(), lineno=282, col_offset=15), lineno=282, col_offset=8), Expr(Call(Name('print_label', Load(), lineno=283, col_offset=8), [Name('name', Load(), lineno=283, col_offset=20), Name('test_func', Load(), lineno=283, col_offset=26)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), If(BoolOp(Or(), [Compare(Str('w', lineno=284, col_offset=11), [NotIn()], [Name('mode', Load(), lineno=284, col_offset=22)], lineno=284, col_offset=11), Compare(Str('+', lineno=284, col_offset=30), [In()], [Name('mode', Load(), lineno=284, col_offset=37)], lineno=284, col_offset=30)], lineno=284, col_offset=11), [Expr(Call(Name('warm_cache', Load(), lineno=285, col_offset=12), [Name('name', Load(), lineno=285, col_offset=23)], [], None, None, lineno=285, col_offset=12), lineno=285, col_offset=12)], [], lineno=284, col_offset=8), With(Call(Name('open_func', Load(), lineno=286, col_offset=13), [Name('name', Load(), lineno=286, col_offset=23)], [], None, None, lineno=286, col_offset=13), Name('f', Store(), lineno=286, col_offset=32), [Assign([Tuple([Name('n', Store(), lineno=287, col_offset=12), Name('real', Store(), lineno=287, col_offset=15), Name('cpu', Store(), lineno=287, col_offset=21)], Store(), lineno=287, col_offset=12)], Call(Name('run_during', Load(), lineno=287, col_offset=27), [Num(1.5, lineno=287, col_offset=38), Lambda(arguments([], None, None, []), Call(Name('test_func', Load(), lineno=287, col_offset=51), [Name('f', Load(), lineno=287, col_offset=61)], [], Name('args', Load(), lineno=287, col_offset=65), None, lineno=287, col_offset=51), lineno=287, col_offset=43)], [], None, None, lineno=287, col_offset=27), lineno=287, col_offset=12)], lineno=286, col_offset=13), Expr(Call(Name('print_results', Load(), lineno=288, col_offset=8), [Name('size', Load(), lineno=288, col_offset=22), Name('n', Load(), lineno=288, col_offset=28), Name('real', Load(), lineno=288, col_offset=31), Name('cpu', Load(), lineno=288, col_offset=37)], [], None, None, lineno=288, col_offset=8), lineno=288, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('run_test_family', arguments([Name('tests', Param(), lineno=290, col_offset=24), Name('mode_filter', Param(), lineno=290, col_offset=31), Name('files', Param(), lineno=290, col_offset=44), Name('open_func', Param(), lineno=290, col_offset=51)], 'make_args', None, []), [For(Name('test_func', Store(), lineno=291, col_offset=12), Name('tests', Load(), lineno=291, col_offset=25), [If(Compare(Name('test_func', Load(), lineno=292, col_offset=15), [Is()], [Name('None', Load(), lineno=292, col_offset=28)], lineno=292, col_offset=15), [Expr(Call(Attribute(Name('out', Load(), lineno=293, col_offset=16), 'write', Load(), lineno=293, col_offset=16), [Str('\n', lineno=293, col_offset=26)], [], None, None, lineno=293, col_offset=16), lineno=293, col_offset=16), Continue( lineno=294, col_offset=16)], [], lineno=292, col_offset=12), If(Compare(Name('mode_filter', Load(), lineno=295, col_offset=15), [In()], [Attribute(Name('test_func', Load(), lineno=295, col_offset=30), 'file_open_mode', Load(), lineno=295, col_offset=30)], lineno=295, col_offset=15), [Continue( lineno=296, col_offset=16)], [], lineno=295, col_offset=12), For(Name('s', Store(), lineno=297, col_offset=16), Attribute(Name('test_func', Load(), lineno=297, col_offset=21), 'file_sizes', Load(), lineno=297, col_offset=21), [Assign([Tuple([Name('name', Store(), lineno=298, col_offset=16), Name('size', Store(), lineno=298, col_offset=22)], Store(), lineno=298, col_offset=16)], Subscript(Name('files', Load(), lineno=298, col_offset=29), Index(Subscript(Name('size_names', Load(), lineno=298, col_offset=35), Index(Name('s', Load(), lineno=298, col_offset=46)), Load(), lineno=298, col_offset=35)), Load(), lineno=298, col_offset=29), lineno=298, col_offset=16), Assign([Name('args', Store(), lineno=300, col_offset=16)], Call(Name('tuple', Load(), lineno=300, col_offset=23), [GeneratorExp(Call(Name('f', Load(), lineno=300, col_offset=29), [Name('name', Load(), lineno=300, col_offset=31), Name('size', Load(), lineno=300, col_offset=37)], [], None, None, lineno=300, col_offset=29), [comprehension(Name('f', Store(), lineno=300, col_offset=47), Name('make_args', Load(), lineno=300, col_offset=52), [])], lineno=300, col_offset=29)], [], None, None, lineno=300, col_offset=23), lineno=300, col_offset=16), Expr(Call(Name('run_one_test', Load(), lineno=301, col_offset=16), [Name('name', Load(), lineno=301, col_offset=29), Name('size', Load(), lineno=301, col_offset=35), Name('open_func', Load(), lineno=302, col_offset=20), Name('test_func', Load(), lineno=302, col_offset=31)], [], Name('args', Load(), lineno=302, col_offset=43), None, lineno=301, col_offset=16), lineno=301, col_offset=16)], [], lineno=297, col_offset=12)], [], lineno=291, col_offset=8)], [], lineno=290, col_offset=4), Assign([Name('size_names', Store(), lineno=304, col_offset=4)], Dict([Str('small', lineno=305, col_offset=8), Str('medium', lineno=306, col_offset=8), Str('large', lineno=307, col_offset=8)], [Num(0, lineno=305, col_offset=17), Num(1, lineno=306, col_offset=18), Num(2, lineno=307, col_offset=17)], lineno=304, col_offset=17), lineno=304, col_offset=4), Assign([Name('binary_files', Store(), lineno=310, col_offset=4)], Call(Name('list', Load(), lineno=310, col_offset=19), [Call(Name('get_binary_files', Load(), lineno=310, col_offset=24), [], [], None, None, lineno=310, col_offset=24)], [], None, None, lineno=310, col_offset=19), lineno=310, col_offset=4), Assign([Name('text_files', Store(), lineno=311, col_offset=4)], Call(Name('list', Load(), lineno=311, col_offset=17), [Call(Name('get_text_files', Load(), lineno=311, col_offset=22), [], [], None, None, lineno=311, col_offset=22)], [], None, None, lineno=311, col_offset=17), lineno=311, col_offset=4), If(Compare(Str('b', lineno=312, col_offset=7), [In()], [Name('options', Load(), lineno=312, col_offset=14)], lineno=312, col_offset=7), [Print(None, [Str('Binary unit = one byte', lineno=313, col_offset=14)], True, lineno=313, col_offset=8)], [], lineno=312, col_offset=4), If(Compare(Str('t', lineno=314, col_offset=7), [In()], [Name('options', Load(), lineno=314, col_offset=14)], lineno=314, col_offset=7), [Print(None, [BinOp(Str('Text unit = one character (%s-decoded)', lineno=315, col_offset=14), Mod(), Name('TEXT_ENCODING', Load(), lineno=315, col_offset=57), lineno=315, col_offset=14)], True, lineno=315, col_offset=8)], [], lineno=314, col_offset=4), If(BoolOp(And(), [Compare(Str('b', lineno=318, col_offset=7), [In()], [Name('options', Load(), lineno=318, col_offset=14)], lineno=318, col_offset=7), Compare(Str('r', lineno=318, col_offset=26), [In()], [Name('options', Load(), lineno=318, col_offset=33)], lineno=318, col_offset=26)], lineno=318, col_offset=7), [Print(None, [Str('\n** Binary input **\n', lineno=319, col_offset=14)], True, lineno=319, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=320, col_offset=8), [Name('read_tests', Load(), lineno=320, col_offset=24), Str('t', lineno=320, col_offset=36), Name('binary_files', Load(), lineno=320, col_offset=41), Lambda(arguments([Name('fn', Param(), lineno=320, col_offset=62)], None, None, []), Call(Name('open', Load(), lineno=320, col_offset=66), [Name('fn', Load(), lineno=320, col_offset=71), Str('rb', lineno=320, col_offset=75)], [], None, None, lineno=320, col_offset=66), lineno=320, col_offset=55)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8)], [], lineno=318, col_offset=4), If(BoolOp(And(), [Compare(Str('t', lineno=323, col_offset=7), [In()], [Name('options', Load(), lineno=323, col_offset=14)], lineno=323, col_offset=7), Compare(Str('r', lineno=323, col_offset=26), [In()], [Name('options', Load(), lineno=323, col_offset=33)], lineno=323, col_offset=26)], lineno=323, col_offset=7), [Print(None, [Str('\n** Text input **\n', lineno=324, col_offset=14)], True, lineno=324, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=325, col_offset=8), [Name('read_tests', Load(), lineno=325, col_offset=24), Str('b', lineno=325, col_offset=36), Name('text_files', Load(), lineno=325, col_offset=41), Lambda(arguments([Name('fn', Param(), lineno=325, col_offset=60)], None, None, []), Call(Name('text_open', Load(), lineno=325, col_offset=64), [Name('fn', Load(), lineno=325, col_offset=74), Str('r', lineno=325, col_offset=78)], [], None, None, lineno=325, col_offset=64), lineno=325, col_offset=53)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8)], [], lineno=323, col_offset=4), If(BoolOp(And(), [Compare(Str('b', lineno=328, col_offset=7), [In()], [Name('options', Load(), lineno=328, col_offset=14)], lineno=328, col_offset=7), Compare(Str('w', lineno=328, col_offset=26), [In()], [Name('options', Load(), lineno=328, col_offset=33)], lineno=328, col_offset=26)], lineno=328, col_offset=7), [Print(None, [Str('\n** Binary append **\n', lineno=329, col_offset=14)], True, lineno=329, col_offset=8), FunctionDef('make_test_source', arguments([Name('name', Param(), lineno=330, col_offset=29), Name('size', Param(), lineno=330, col_offset=35)], None, None, []), [With(Call(Name('open', Load(), lineno=331, col_offset=17), [Name('name', Load(), lineno=331, col_offset=22), Str('rb', lineno=331, col_offset=28)], [], None, None, lineno=331, col_offset=17), Name('f', Store(), lineno=331, col_offset=37), [Return(Call(Attribute(Name('f', Load(), lineno=332, col_offset=23), 'read', Load(), lineno=332, col_offset=23), [], [], None, None, lineno=332, col_offset=23), lineno=332, col_offset=16)], lineno=331, col_offset=17)], [], lineno=330, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=333, col_offset=8), [Name('write_tests', Load(), lineno=333, col_offset=24), Str('t', lineno=333, col_offset=37), Name('binary_files', Load(), lineno=333, col_offset=42), Lambda(arguments([Name('fn', Param(), lineno=334, col_offset=19)], None, None, []), Call(Name('open', Load(), lineno=334, col_offset=23), [Attribute(Name('os', Load(), lineno=334, col_offset=28), 'devnull', Load(), lineno=334, col_offset=28), Str('wb', lineno=334, col_offset=40)], [], None, None, lineno=334, col_offset=23), lineno=334, col_offset=12), Name('make_test_source', Load(), lineno=334, col_offset=47)], [], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8)], [], lineno=328, col_offset=4), If(BoolOp(And(), [Compare(Str('t', lineno=337, col_offset=7), [In()], [Name('options', Load(), lineno=337, col_offset=14)], lineno=337, col_offset=7), Compare(Str('w', lineno=337, col_offset=26), [In()], [Name('options', Load(), lineno=337, col_offset=33)], lineno=337, col_offset=26)], lineno=337, col_offset=7), [Print(None, [Str('\n** Text append **\n', lineno=338, col_offset=14)], True, lineno=338, col_offset=8), FunctionDef('make_test_source', arguments([Name('name', Param(), lineno=339, col_offset=29), Name('size', Param(), lineno=339, col_offset=35)], None, None, []), [With(Call(Name('text_open', Load(), lineno=340, col_offset=17), [Name('name', Load(), lineno=340, col_offset=27), Str('r', lineno=340, col_offset=33)], [], None, None, lineno=340, col_offset=17), Name('f', Store(), lineno=340, col_offset=41), [Return(Call(Attribute(Name('f', Load(), lineno=341, col_offset=23), 'read', Load(), lineno=341, col_offset=23), [], [], None, None, lineno=341, col_offset=23), lineno=341, col_offset=16)], lineno=340, col_offset=17)], [], lineno=339, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=342, col_offset=8), [Name('write_tests', Load(), lineno=342, col_offset=24), Str('b', lineno=342, col_offset=37), Name('text_files', Load(), lineno=342, col_offset=42), Lambda(arguments([Name('fn', Param(), lineno=343, col_offset=19)], None, None, []), Call(Name('text_open', Load(), lineno=343, col_offset=23), [Attribute(Name('os', Load(), lineno=343, col_offset=33), 'devnull', Load(), lineno=343, col_offset=33), Str('w', lineno=343, col_offset=45)], [], None, None, lineno=343, col_offset=23), lineno=343, col_offset=12), Name('make_test_source', Load(), lineno=343, col_offset=51)], [], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8)], [], lineno=337, col_offset=4), If(BoolOp(And(), [Compare(Str('b', lineno=346, col_offset=7), [In()], [Name('options', Load(), lineno=346, col_offset=14)], lineno=346, col_offset=7), Compare(Str('w', lineno=346, col_offset=26), [In()], [Name('options', Load(), lineno=346, col_offset=33)], lineno=346, col_offset=26)], lineno=346, col_offset=7), [Print(None, [Str('\n** Binary overwrite **\n', lineno=347, col_offset=14)], True, lineno=347, col_offset=8), FunctionDef('make_test_source', arguments([Name('name', Param(), lineno=348, col_offset=29), Name('size', Param(), lineno=348, col_offset=35)], None, None, []), [With(Call(Name('open', Load(), lineno=349, col_offset=17), [Name('name', Load(), lineno=349, col_offset=22), Str('rb', lineno=349, col_offset=28)], [], None, None, lineno=349, col_offset=17), Name('f', Store(), lineno=349, col_offset=37), [Return(Call(Attribute(Name('f', Load(), lineno=350, col_offset=23), 'read', Load(), lineno=350, col_offset=23), [], [], None, None, lineno=350, col_offset=23), lineno=350, col_offset=16)], lineno=349, col_offset=17)], [], lineno=348, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=351, col_offset=8), [Name('modify_tests', Load(), lineno=351, col_offset=24), Str('t', lineno=351, col_offset=38), Name('binary_files', Load(), lineno=351, col_offset=43), Lambda(arguments([Name('fn', Param(), lineno=352, col_offset=19)], None, None, []), Call(Name('open', Load(), lineno=352, col_offset=23), [Name('fn', Load(), lineno=352, col_offset=28), Str('r+b', lineno=352, col_offset=32)], [], None, None, lineno=352, col_offset=23), lineno=352, col_offset=12), Name('make_test_source', Load(), lineno=352, col_offset=40)], [], None, None, lineno=351, col_offset=8), lineno=351, col_offset=8)], [], lineno=346, col_offset=4), If(BoolOp(And(), [Compare(Str('t', lineno=355, col_offset=7), [In()], [Name('options', Load(), lineno=355, col_offset=14)], lineno=355, col_offset=7), Compare(Str('w', lineno=355, col_offset=26), [In()], [Name('options', Load(), lineno=355, col_offset=33)], lineno=355, col_offset=26)], lineno=355, col_offset=7), [Print(None, [Str('\n** Text overwrite **\n', lineno=356, col_offset=14)], True, lineno=356, col_offset=8), FunctionDef('make_test_source', arguments([Name('name', Param(), lineno=357, col_offset=29), Name('size', Param(), lineno=357, col_offset=35)], None, None, []), [With(Call(Name('text_open', Load(), lineno=358, col_offset=17), [Name('name', Load(), lineno=358, col_offset=27), Str('r', lineno=358, col_offset=33)], [], None, None, lineno=358, col_offset=17), Name('f', Store(), lineno=358, col_offset=41), [Return(Call(Attribute(Name('f', Load(), lineno=359, col_offset=23), 'read', Load(), lineno=359, col_offset=23), [], [], None, None, lineno=359, col_offset=23), lineno=359, col_offset=16)], lineno=358, col_offset=17)], [], lineno=357, col_offset=8), Expr(Call(Name('run_test_family', Load(), lineno=360, col_offset=8), [Name('modify_tests', Load(), lineno=360, col_offset=24), Str('b', lineno=360, col_offset=38), Name('text_files', Load(), lineno=360, col_offset=43), Lambda(arguments([Name('fn', Param(), lineno=361, col_offset=19)], None, None, []), Call(Name('open', Load(), lineno=361, col_offset=23), [Name('fn', Load(), lineno=361, col_offset=28), Str('r+', lineno=361, col_offset=32)], [], None, None, lineno=361, col_offset=23), lineno=361, col_offset=12), Name('make_test_source', Load(), lineno=361, col_offset=39)], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8)], [], lineno=355, col_offset=4)], [], lineno=264, col_offset=0), FunctionDef('prepare_files', arguments([], None, None, []), [Print(None, [Str('Preparing files...', lineno=365, col_offset=10)], True, lineno=365, col_offset=4), For(Tuple([Name('name', Store(), lineno=367, col_offset=8), Name('size', Store(), lineno=367, col_offset=14)], Store(), lineno=367, col_offset=8), Call(Name('get_binary_files', Load(), lineno=367, col_offset=22), [], [], None, None, lineno=367, col_offset=22), [If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=368, col_offset=11), 'path', Load(), lineno=368, col_offset=11), 'isfile', Load(), lineno=368, col_offset=11), [Name('name', Load(), lineno=368, col_offset=26)], [], None, None, lineno=368, col_offset=11), Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=368, col_offset=36), 'path', Load(), lineno=368, col_offset=36), 'getsize', Load(), lineno=368, col_offset=36), [Name('name', Load(), lineno=368, col_offset=52)], [], None, None, lineno=368, col_offset=36), [Eq()], [Name('size', Load(), lineno=368, col_offset=61)], lineno=368, col_offset=36)], lineno=368, col_offset=11), [Continue( lineno=369, col_offset=12)], [], lineno=368, col_offset=8), With(Call(Name('open', Load(), lineno=370, col_offset=13), [Name('name', Load(), lineno=370, col_offset=18), Str('wb', lineno=370, col_offset=24)], [], None, None, lineno=370, col_offset=13), Name('f', Store(), lineno=370, col_offset=33), [Expr(Call(Attribute(Name('f', Load(), lineno=371, col_offset=12), 'write', Load(), lineno=371, col_offset=12), [Call(Attribute(Name('os', Load(), lineno=371, col_offset=20), 'urandom', Load(), lineno=371, col_offset=20), [Name('size', Load(), lineno=371, col_offset=31)], [], None, None, lineno=371, col_offset=20)], [], None, None, lineno=371, col_offset=12), lineno=371, col_offset=12)], lineno=370, col_offset=13)], [], lineno=367, col_offset=4), Assign([Name('chunk', Store(), lineno=373, col_offset=4)], List([], Load(), lineno=373, col_offset=12), lineno=373, col_offset=4), With(Call(Name('text_open', Load(), lineno=374, col_offset=9), [Name('__file__', Load(), lineno=374, col_offset=19), Str('rU', lineno=374, col_offset=29)], [keyword('encoding', Str('utf8', lineno=374, col_offset=44))], None, None, lineno=374, col_offset=9), Name('f', Store(), lineno=374, col_offset=55), [For(Name('line', Store(), lineno=375, col_offset=12), Name('f', Load(), lineno=375, col_offset=20), [If(Call(Attribute(Name('line', Load(), lineno=376, col_offset=15), 'startswith', Load(), lineno=376, col_offset=15), [Str('# <iobench text chunk marker>', lineno=376, col_offset=31)], [], None, None, lineno=376, col_offset=15), [Break( lineno=377, col_offset=16)], [], lineno=376, col_offset=12)], [Raise(Call(Name('RuntimeError', Load(), lineno=379, col_offset=18), [BinOp(Str("Couldn't find chunk marker in %s !", lineno=380, col_offset=16), Mod(), Name('__file__', Load(), lineno=380, col_offset=55), lineno=380, col_offset=16)], [], None, None, lineno=379, col_offset=18), None, None, lineno=379, col_offset=12)], lineno=375, col_offset=8), If(Compare(Name('NEWLINES', Load(), lineno=381, col_offset=11), [Eq()], [Str('all', lineno=381, col_offset=23)], lineno=381, col_offset=11), [Assign([Name('it', Store(), lineno=382, col_offset=12)], Call(Attribute(Name('itertools', Load(), lineno=382, col_offset=17), 'cycle', Load(), lineno=382, col_offset=17), [List([Str('\n', lineno=382, col_offset=34), Str('\r', lineno=382, col_offset=40), Str('\r\n', lineno=382, col_offset=46)], Load(), lineno=382, col_offset=33)], [], None, None, lineno=382, col_offset=17), lineno=382, col_offset=12)], [Assign([Name('it', Store(), lineno=384, col_offset=12)], Call(Attribute(Name('itertools', Load(), lineno=384, col_offset=17), 'repeat', Load(), lineno=384, col_offset=17), [Subscript(Dict([Str('cr', lineno=385, col_offset=17), Str('lf', lineno=385, col_offset=29), Str('crlf', lineno=385, col_offset=41)], [Str('\r', lineno=385, col_offset=23), Str('\n', lineno=385, col_offset=35), Str('\r\n', lineno=385, col_offset=49)], lineno=385, col_offset=16), Index(Name('NEWLINES', Load(), lineno=385, col_offset=57)), Load(), lineno=385, col_offset=16)], [], None, None, lineno=384, col_offset=17), lineno=384, col_offset=12)], lineno=381, col_offset=8), Assign([Name('chunk', Store(), lineno=386, col_offset=8)], Call(Attribute(Str('', lineno=386, col_offset=16), 'join', Load(), lineno=386, col_offset=16), [GeneratorExp(Call(Attribute(Name('line', Load(), lineno=386, col_offset=24), 'replace', Load(), lineno=386, col_offset=24), [Str('\n', lineno=386, col_offset=37), Call(Name('next', Load(), lineno=386, col_offset=43), [Name('it', Load(), lineno=386, col_offset=48)], [], None, None, lineno=386, col_offset=43)], [], None, None, lineno=386, col_offset=24), [comprehension(Name('line', Store(), lineno=386, col_offset=57), Name('f', Load(), lineno=386, col_offset=65), [])], lineno=386, col_offset=24)], [], None, None, lineno=386, col_offset=16), lineno=386, col_offset=8), If(Call(Name('isinstance', Load(), lineno=387, col_offset=11), [Name('chunk', Load(), lineno=387, col_offset=22), Name('bytes', Load(), lineno=387, col_offset=29)], [], None, None, lineno=387, col_offset=11), [Assign([Name('chunk', Store(), lineno=388, col_offset=12)], Call(Attribute(Name('chunk', Load(), lineno=388, col_offset=20), 'decode', Load(), lineno=388, col_offset=20), [Str('utf8', lineno=388, col_offset=33)], [], None, None, lineno=388, col_offset=20), lineno=388, col_offset=12)], [], lineno=387, col_offset=8), Assign([Name('chunk', Store(), lineno=389, col_offset=8)], Call(Attribute(Name('chunk', Load(), lineno=389, col_offset=16), 'encode', Load(), lineno=389, col_offset=16), [Name('TEXT_ENCODING', Load(), lineno=389, col_offset=29)], [], None, None, lineno=389, col_offset=16), lineno=389, col_offset=8)], lineno=374, col_offset=9), For(Tuple([Name('name', Store(), lineno=390, col_offset=8), Name('size', Store(), lineno=390, col_offset=14)], Store(), lineno=390, col_offset=8), Call(Name('get_text_files', Load(), lineno=390, col_offset=22), [], [], None, None, lineno=390, col_offset=22), [If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=391, col_offset=11), 'path', Load(), lineno=391, col_offset=11), 'isfile', Load(), lineno=391, col_offset=11), [Name('name', Load(), lineno=391, col_offset=26)], [], None, None, lineno=391, col_offset=11), Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=391, col_offset=36), 'path', Load(), lineno=391, col_offset=36), 'getsize', Load(), lineno=391, col_offset=36), [Name('name', Load(), lineno=391, col_offset=52)], [], None, None, lineno=391, col_offset=36), [Eq()], [Name('size', Load(), lineno=391, col_offset=61)], lineno=391, col_offset=36)], lineno=391, col_offset=11), [Continue( lineno=392, col_offset=12)], [], lineno=391, col_offset=8), Assign([Name('head', Store(), lineno=393, col_offset=8)], BinOp(Name('chunk', Load(), lineno=393, col_offset=15), Mult(), BinOp(Name('size', Load(), lineno=393, col_offset=24), FloorDiv(), Call(Name('len', Load(), lineno=393, col_offset=32), [Name('chunk', Load(), lineno=393, col_offset=36)], [], None, None, lineno=393, col_offset=32), lineno=393, col_offset=24), lineno=393, col_offset=15), lineno=393, col_offset=8), Assign([Name('tail', Store(), lineno=394, col_offset=8)], Subscript(Name('chunk', Load(), lineno=394, col_offset=15), Slice(None, BinOp(Name('size', Load(), lineno=394, col_offset=22), Mod(), Call(Name('len', Load(), lineno=394, col_offset=29), [Name('chunk', Load(), lineno=394, col_offset=33)], [], None, None, lineno=394, col_offset=29), lineno=394, col_offset=22), None), Load(), lineno=394, col_offset=15), lineno=394, col_offset=8), While(Name('True', Load(), lineno=396, col_offset=14), [TryExcept([Expr(Call(Attribute(Name('tail', Load(), lineno=398, col_offset=16), 'decode', Load(), lineno=398, col_offset=16), [Name('TEXT_ENCODING', Load(), lineno=398, col_offset=28)], [], None, None, lineno=398, col_offset=16), lineno=398, col_offset=16), Break( lineno=399, col_offset=16)], [ExceptHandler(Name('UnicodeDecodeError', Load(), lineno=400, col_offset=19), None, [Assign([Name('tail', Store(), lineno=401, col_offset=16)], Subscript(Name('tail', Load(), lineno=401, col_offset=23), Slice(None, Num(-1, lineno=401, col_offset=30), None), Load(), lineno=401, col_offset=23), lineno=401, col_offset=16)], lineno=400, col_offset=12)], [], lineno=397, col_offset=12)], [], lineno=396, col_offset=8), With(Call(Name('open', Load(), lineno=402, col_offset=13), [Name('name', Load(), lineno=402, col_offset=18), Str('wb', lineno=402, col_offset=24)], [], None, None, lineno=402, col_offset=13), Name('f', Store(), lineno=402, col_offset=33), [Expr(Call(Attribute(Name('f', Load(), lineno=403, col_offset=12), 'write', Load(), lineno=403, col_offset=12), [Name('head', Load(), lineno=403, col_offset=20)], [], None, None, lineno=403, col_offset=12), lineno=403, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=404, col_offset=12), 'write', Load(), lineno=404, col_offset=12), [Name('tail', Load(), lineno=404, col_offset=20)], [], None, None, lineno=404, col_offset=12), lineno=404, col_offset=12)], lineno=402, col_offset=13)], [], lineno=390, col_offset=4)], [], lineno=364, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Global(['TEXT_ENCODING', 'NEWLINES'], lineno=407, col_offset=4), Assign([Name('usage', Store(), lineno=409, col_offset=4)], Str('usage: %prog [-h|--help] [options]', lineno=409, col_offset=12), lineno=409, col_offset=4), Assign([Name('parser', Store(), lineno=410, col_offset=4)], Call(Name('OptionParser', Load(), lineno=410, col_offset=13), [], [keyword('usage', Name('usage', Load(), lineno=410, col_offset=32))], None, None, lineno=410, col_offset=13), lineno=410, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=411, col_offset=4), 'add_option', Load(), lineno=411, col_offset=4), [Str('-b', lineno=411, col_offset=22), Str('--binary', lineno=411, col_offset=28)], [keyword('action', Str('store_true', lineno=412, col_offset=29)), keyword('dest', Str('binary', lineno=412, col_offset=48)), keyword('default', Name('False', Load(), lineno=412, col_offset=66)), keyword('help', Str('run binary I/O tests', lineno=413, col_offset=27))], None, None, lineno=411, col_offset=4), lineno=411, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=414, col_offset=4), 'add_option', Load(), lineno=414, col_offset=4), [Str('-t', lineno=414, col_offset=22), Str('--text', lineno=414, col_offset=28)], [keyword('action', Str('store_true', lineno=415, col_offset=29)), keyword('dest', Str('text', lineno=415, col_offset=48)), keyword('default', Name('False', Load(), lineno=415, col_offset=64)), keyword('help', Str('run text I/O tests', lineno=416, col_offset=27))], None, None, lineno=414, col_offset=4), lineno=414, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=417, col_offset=4), 'add_option', Load(), lineno=417, col_offset=4), [Str('-r', lineno=417, col_offset=22), Str('--read', lineno=417, col_offset=28)], [keyword('action', Str('store_true', lineno=418, col_offset=29)), keyword('dest', Str('read', lineno=418, col_offset=48)), keyword('default', Name('False', Load(), lineno=418, col_offset=64)), keyword('help', Str('run read tests', lineno=419, col_offset=27))], None, None, lineno=417, col_offset=4), lineno=417, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=420, col_offset=4), 'add_option', Load(), lineno=420, col_offset=4), [Str('-w', lineno=420, col_offset=22), Str('--write', lineno=420, col_offset=28)], [keyword('action', Str('store_true', lineno=421, col_offset=29)), keyword('dest', Str('write', lineno=421, col_offset=48)), keyword('default', Name('False', Load(), lineno=421, col_offset=65)), keyword('help', Str('run write & modify tests', lineno=422, col_offset=27))], None, None, lineno=420, col_offset=4), lineno=420, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=423, col_offset=4), 'add_option', Load(), lineno=423, col_offset=4), [Str('-E', lineno=423, col_offset=22), Str('--encoding', lineno=423, col_offset=28)], [keyword('action', Str('store', lineno=424, col_offset=29)), keyword('dest', Str('encoding', lineno=424, col_offset=43)), keyword('default', Name('None', Load(), lineno=424, col_offset=63)), keyword('help', BinOp(Str('encoding for text tests (default: %s)', lineno=425, col_offset=27), Mod(), Name('TEXT_ENCODING', Load(), lineno=425, col_offset=69), lineno=425, col_offset=27))], None, None, lineno=423, col_offset=4), lineno=423, col_offset=4), Expr(Call(Attribute(Name('parser', Load(), lineno=426, col_offset=4), 'add_option', Load(), lineno=426, col_offset=4), [Str('-N', lineno=426, col_offset=22), Str('--newlines', lineno=426, col_offset=28)], [keyword('action', Str('store', lineno=427, col_offset=29)), keyword('dest', Str('newlines', lineno=427, col_offset=43)), keyword('default', Str('lf', lineno=427, col_offset=63)), keyword('help', Str('line endings for text tests (one of: {lf (default), cr, crlf, all})', lineno=428, col_offset=27))], None, None, lineno=426, col_offset=4), lineno=426, col_offset=4), Assign([Tuple([Name('options', Store(), lineno=430, col_offset=4), Name('args', Store(), lineno=430, col_offset=13)], Store(), lineno=430, col_offset=4)], Call(Attribute(Name('parser', Load(), lineno=430, col_offset=20), 'parse_args', Load(), lineno=430, col_offset=20), [], [], None, None, lineno=430, col_offset=20), lineno=430, col_offset=4), If(Name('args', Load(), lineno=431, col_offset=7), [Expr(Call(Attribute(Name('parser', Load(), lineno=432, col_offset=8), 'error', Load(), lineno=432, col_offset=8), [Str('unexpected arguments', lineno=432, col_offset=21)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8)], [], lineno=431, col_offset=4), Assign([Name('NEWLINES', Store(), lineno=433, col_offset=4)], Call(Attribute(Attribute(Name('options', Load(), lineno=433, col_offset=15), 'newlines', Load(), lineno=433, col_offset=15), 'lower', Load(), lineno=433, col_offset=15), [], [], None, None, lineno=433, col_offset=15), lineno=433, col_offset=4), If(Compare(Name('NEWLINES', Load(), lineno=434, col_offset=7), [NotIn()], [Tuple([Str('lf', lineno=434, col_offset=24), Str('cr', lineno=434, col_offset=30), Str('crlf', lineno=434, col_offset=36), Str('all', lineno=434, col_offset=44)], Load(), lineno=434, col_offset=24)], lineno=434, col_offset=7), [Expr(Call(Attribute(Name('parser', Load(), lineno=435, col_offset=8), 'error', Load(), lineno=435, col_offset=8), [BinOp(Str("invalid 'newlines' option: %r", lineno=435, col_offset=21), Mod(), Name('NEWLINES', Load(), lineno=435, col_offset=55), lineno=435, col_offset=21)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8)], [], lineno=434, col_offset=4), Assign([Name('test_options', Store(), lineno=437, col_offset=4)], Str('', lineno=437, col_offset=19), lineno=437, col_offset=4), If(Attribute(Name('options', Load(), lineno=438, col_offset=7), 'read', Load(), lineno=438, col_offset=7), [AugAssign(Name('test_options', Store(), lineno=439, col_offset=8), Add(), Str('r', lineno=439, col_offset=24), lineno=439, col_offset=8)], [], lineno=438, col_offset=4), If(Attribute(Name('options', Load(), lineno=440, col_offset=7), 'write', Load(), lineno=440, col_offset=7), [AugAssign(Name('test_options', Store(), lineno=441, col_offset=8), Add(), Str('w', lineno=441, col_offset=24), lineno=441, col_offset=8)], [If(UnaryOp(Not(), Attribute(Name('options', Load(), lineno=442, col_offset=13), 'read', Load(), lineno=442, col_offset=13), lineno=442, col_offset=9), [AugAssign(Name('test_options', Store(), lineno=443, col_offset=8), Add(), Str('rw', lineno=443, col_offset=24), lineno=443, col_offset=8)], [], lineno=442, col_offset=9)], lineno=440, col_offset=4), If(Attribute(Name('options', Load(), lineno=444, col_offset=7), 'text', Load(), lineno=444, col_offset=7), [AugAssign(Name('test_options', Store(), lineno=445, col_offset=8), Add(), Str('t', lineno=445, col_offset=24), lineno=445, col_offset=8)], [], lineno=444, col_offset=4), If(Attribute(Name('options', Load(), lineno=446, col_offset=7), 'binary', Load(), lineno=446, col_offset=7), [AugAssign(Name('test_options', Store(), lineno=447, col_offset=8), Add(), Str('b', lineno=447, col_offset=24), lineno=447, col_offset=8)], [If(UnaryOp(Not(), Attribute(Name('options', Load(), lineno=448, col_offset=13), 'text', Load(), lineno=448, col_offset=13), lineno=448, col_offset=9), [AugAssign(Name('test_options', Store(), lineno=449, col_offset=8), Add(), Str('tb', lineno=449, col_offset=24), lineno=449, col_offset=8)], [], lineno=448, col_offset=9)], lineno=446, col_offset=4), If(Attribute(Name('options', Load(), lineno=451, col_offset=7), 'encoding', Load(), lineno=451, col_offset=7), [Assign([Name('TEXT_ENCODING', Store(), lineno=452, col_offset=8)], Attribute(Name('options', Load(), lineno=452, col_offset=24), 'encoding', Load(), lineno=452, col_offset=24), lineno=452, col_offset=8)], [], lineno=451, col_offset=4), Expr(Call(Name('prepare_files', Load(), lineno=454, col_offset=4), [], [], None, None, lineno=454, col_offset=4), lineno=454, col_offset=4), Expr(Call(Name('run_all_tests', Load(), lineno=455, col_offset=4), [Name('test_options', Load(), lineno=455, col_offset=18)], [], None, None, lineno=455, col_offset=4), lineno=455, col_offset=4)], [], lineno=406, col_offset=0), If(Compare(Name('__name__', Load(), lineno=457, col_offset=3), [Eq()], [Str('__main__', lineno=457, col_offset=15)], lineno=457, col_offset=3), [Expr(Call(Name('main', Load(), lineno=458, col_offset=4), [], [], None, None, lineno=458, col_offset=4), lineno=458, col_offset=4)], [], lineno=457, col_offset=0), Expr(Str('\n1.\nG\xc3\xa1ttir allar,\n\xc3\xa1\xc3\xb0r gangi fram,\num sko\xc3\xb0ask skyli,\num skyggnast skyli,\n\xc3\xbev\xc3\xad at \xc3\xb3v\xc3\xadst er at vita,\nhvar \xc3\xb3vinir\nsitja \xc3\xa1 fleti fyrir.\n\n2.\nGefendr heilir!\nGestr er inn kominn,\nhvar skal sitja sj\xc3\xa1?\nMj\xc3\xb6k er br\xc3\xa1\xc3\xb0r,\ns\xc3\xa1 er \xc3\xa1 br\xc3\xb6ndum skal\ns\xc3\xadns of freista frama.\n\n3.\nElds er \xc3\xbe\xc3\xb6rf,\n\xc3\xbeeims inn er kominn\nok \xc3\xa1 kn\xc3\xa9 kalinn;\nmatar ok v\xc3\xa1\xc3\xb0a\ner manni \xc3\xbe\xc3\xb6rf,\n\xc3\xbeeim er hefr um fjall farit.\n\n4.\nVatns er \xc3\xbe\xc3\xb6rf,\n\xc3\xbeeim er til ver\xc3\xb0ar kemr,\n\xc3\xbeerru ok \xc3\xbej\xc3\xb3\xc3\xb0la\xc3\xb0ar,\ng\xc3\xb3\xc3\xb0s of \xc3\xa6\xc3\xb0is,\nef s\xc3\xa9r geta m\xc3\xa6tti,\nor\xc3\xb0s ok endr\xc3\xbe\xc3\xb6gu.\n\n5.\nVits er \xc3\xbe\xc3\xb6rf,\n\xc3\xbeeim er v\xc3\xad\xc3\xb0a ratar;\nd\xc3\xa6lt er heima hvat;\nat augabrag\xc3\xb0i ver\xc3\xb0r,\ns\xc3\xa1 er ekki kann\nok me\xc3\xb0 snotrum sitr.\n\n6.\nAt hyggjandi sinni\nskyli-t ma\xc3\xb0r hr\xc3\xa6sinn vera,\nheldr g\xc3\xa6tinn at ge\xc3\xb0i;\n\xc3\xbe\xc3\xa1 er horskr ok \xc3\xbe\xc3\xb6gull\nkemr heimisgar\xc3\xb0a til,\nsjaldan ver\xc3\xb0r v\xc3\xadti v\xc3\xb6rum,\n\xc3\xbev\xc3\xad at \xc3\xb3brig\xc3\xb0ra vin\nf\xc3\xa6r ma\xc3\xb0r aldregi\nen mannvit mikit.\n\n7.\nInn vari gestr,\ner til ver\xc3\xb0ar kemr,\n\xc3\xbeunnu hlj\xc3\xb3\xc3\xb0i \xc3\xbeegir,\neyrum hl\xc3\xbd\xc3\xb0ir,\nen augum sko\xc3\xb0ar;\nsv\xc3\xa1 n\xc3\xbdsisk fr\xc3\xb3\xc3\xb0ra hverr fyrir.\n\n8.\nHinn er s\xc3\xa6ll,\ner s\xc3\xa9r of getr\nlof ok l\xc3\xadknstafi;\n\xc3\xb3d\xc3\xa6lla er vi\xc3\xb0 \xc3\xbeat,\ner ma\xc3\xb0r eiga skal\nannars brj\xc3\xb3stum \xc3\xad.\n', lineno=532, col_offset=-1), lineno=532, col_offset=-1), Expr(Str("\nC'est revenir tard, je le sens, sur un sujet trop rebattu et d\xc3\xa9j\xc3\xa0 presque oubli\xc3\xa9. Mon \xc3\xa9tat, qui ne me permet plus aucun travail suivi, mon aversion pour le genre pol\xc3\xa9mique, ont caus\xc3\xa9 ma lenteur \xc3\xa0 \xc3\xa9crire et ma r\xc3\xa9pugnance \xc3\xa0 publier. J'aurais m\xc3\xaame tout \xc3\xa0 fait supprim\xc3\xa9 ces Lettres, ou plut\xc3\xb4t je lie les aurais point \xc3\xa9crites, s'il n'e\xc3\xbbt \xc3\xa9t\xc3\xa9 question que de moi : Mais ma patrie ne m'est pas tellement devenue \xc3\xa9trang\xc3\xa8re que je puisse voir tranquillement opprimer ses citoyens, surtout lorsqu'ils n'ont compromis leurs droits qu'en d\xc3\xa9fendant ma cause. Je serais le dernier des hommes si dans une telle occasion j'\xc3\xa9coutais un sentiment qui n'est plus ni douceur ni patience, mais faiblesse et l\xc3\xa2chet\xc3\xa9, dans celui qu'il emp\xc3\xaache de remplir son devoir.\nRien de moins important pour le public, j'en conviens, que la mati\xc3\xa8re de ces lettres. La constitution d'une petite R\xc3\xa9publique, le sort d'un petit particulier, l'expos\xc3\xa9 de quelques injustices, la r\xc3\xa9futation de quelques sophismes ; tout cela n'a rien en soi d'assez consid\xc3\xa9rable pour m\xc3\xa9riter beaucoup de lecteurs : mais si mes sujets sont petits mes objets sont grands, et dignes de l'attention de tout honn\xc3\xaate homme. Laissons Gen\xc3\xa8ve \xc3\xa0 sa place, et Rousseau dans sa d\xc3\xa9pression ; mais la religion, mais la libert\xc3\xa9, la justice ! voil\xc3\xa0, qui que vous soyez, ce qui n'est pas au-dessous de vous.\nQu'on ne cherche pas m\xc3\xaame ici dans le style le d\xc3\xa9dommagement de l'aridit\xc3\xa9 de la mati\xc3\xa8re. Ceux que quelques traits heureux de ma plume ont si fort irrit\xc3\xa9s trouveront de quoi s'apaiser dans ces lettres, L'honneur de d\xc3\xa9fendre un opprim\xc3\xa9 e\xc3\xbbt enflamm\xc3\xa9 mon coeur si j'avais parl\xc3\xa9 pour un autre. R\xc3\xa9duit au triste emploi de me d\xc3\xa9fendre moi-m\xc3\xaame, j'ai d\xc3\xbb me borner \xc3\xa0 raisonner ; m'\xc3\xa9chauffer e\xc3\xbbt \xc3\xa9t\xc3\xa9 m'avilir. J'aurai donc trouv\xc3\xa9 gr\xc3\xa2ce en ce point devant ceux qui s'imaginent qu'il est essentiel \xc3\xa0 la v\xc3\xa9rit\xc3\xa9 d'\xc3\xaatre dite froidement ; opinion que pourtant j'ai peine \xc3\xa0 comprendre. Lorsqu'une vive persuasion nous anime, le moyen d'employer un langage glac\xc3\xa9 ? Quand Archim\xc3\xa8de tout transport\xc3\xa9 courait nu dans les rues de Syracuse, en avait-il moins trouv\xc3\xa9 la v\xc3\xa9rit\xc3\xa9 parce qu'il se passionnait pour elle ? Tout au contraire, celui qui la sent ne peut s'abstenir de l'adorer ; celui qui demeure froid ne l'a pas vue.\nQuoi qu'il en soit, je prie les lecteurs de vouloir bien mettre \xc3\xa0 part mon beau style, et d'examiner seulement si je raisonne bien ou mal ; car enfin, de cela seul qu'un auteur s'exprime en bons termes, je ne vois pas comment il peut s'ensuivre que cet auteur ne sait ce qu'il dit.\n", lineno=539, col_offset=-1), lineno=539, col_offset=-1)])
