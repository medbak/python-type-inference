Module([ImportFrom('test.test_support', [alias('run_unittest', None), alias('run_doctest', None), alias('check_warnings', None)], 0, lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Import([alias('Cookie', None)], lineno=5, col_offset=0), ClassDef('CookieTests', [Attribute(Name('unittest', Load(), lineno=8, col_offset=18), 'TestCase', Load(), lineno=8, col_offset=18)], [FunctionDef('test_basic', arguments([Name('self', Param(), lineno=10, col_offset=19)], None, None, []), [Assign([Name('cases', Store(), lineno=11, col_offset=8)], List([Dict([Str('data', lineno=12, col_offset=14), Str('dict', lineno=13, col_offset=14), Str('repr', lineno=14, col_offset=14), Str('output', lineno=15, col_offset=14)], [Str('chips=ahoy; vienna=finger', lineno=12, col_offset=22), Dict([Str('chips', lineno=13, col_offset=23), Str('vienna', lineno=13, col_offset=39)], [Str('ahoy', lineno=13, col_offset=31), Str('finger', lineno=13, col_offset=48)], lineno=13, col_offset=22), Str("<SimpleCookie: chips='ahoy' vienna='finger'>", lineno=14, col_offset=22), Str('Set-Cookie: chips=ahoy\nSet-Cookie: vienna=finger', lineno=15, col_offset=24)], lineno=12, col_offset=12), Dict([Str('data', lineno=18, col_offset=14), Str('dict', lineno=19, col_offset=14), Str('repr', lineno=20, col_offset=14), Str('output', lineno=21, col_offset=14)], [Str('keebler="E=mc2; L=\\"Loves\\"; fudge=\\012;"', lineno=18, col_offset=22), Dict([Str('keebler', lineno=19, col_offset=23)], [Str('E=mc2; L="Loves"; fudge=\n;', lineno=19, col_offset=35)], lineno=19, col_offset=22), Str('<SimpleCookie: keebler=\'E=mc2; L="Loves"; fudge=\\n;\'>', lineno=20, col_offset=22), Str('Set-Cookie: keebler="E=mc2; L=\\"Loves\\"; fudge=\\012;"', lineno=21, col_offset=24)], lineno=18, col_offset=12), Dict([Str('data', lineno=25, col_offset=14), Str('dict', lineno=26, col_offset=14), Str('repr', lineno=27, col_offset=14), Str('output', lineno=28, col_offset=14)], [Str('keebler=E=mc2', lineno=25, col_offset=22), Dict([Str('keebler', lineno=26, col_offset=23)], [Str('E=mc2', lineno=26, col_offset=35)], lineno=26, col_offset=22), Str("<SimpleCookie: keebler='E=mc2'>", lineno=27, col_offset=22), Str('Set-Cookie: keebler=E=mc2', lineno=28, col_offset=24)], lineno=25, col_offset=12)], Load(), lineno=11, col_offset=16), lineno=11, col_offset=8), For(Name('case', Store(), lineno=32, col_offset=12), Name('cases', Load(), lineno=32, col_offset=20), [Assign([Name('C', Store(), lineno=33, col_offset=12)], Call(Attribute(Name('Cookie', Load(), lineno=33, col_offset=16), 'SimpleCookie', Load(), lineno=33, col_offset=16), [], [], None, None, lineno=33, col_offset=16), lineno=33, col_offset=12), Expr(Call(Attribute(Name('C', Load(), lineno=34, col_offset=12), 'load', Load(), lineno=34, col_offset=12), [Subscript(Name('case', Load(), lineno=34, col_offset=19), Index(Str('data', lineno=34, col_offset=24)), Load(), lineno=34, col_offset=19)], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=12), 'assertEqual', Load(), lineno=35, col_offset=12), [Call(Name('repr', Load(), lineno=35, col_offset=29), [Name('C', Load(), lineno=35, col_offset=34)], [], None, None, lineno=35, col_offset=29), Subscript(Name('case', Load(), lineno=35, col_offset=38), Index(Str('repr', lineno=35, col_offset=43)), Load(), lineno=35, col_offset=38)], [], None, None, lineno=35, col_offset=12), lineno=35, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=12), 'assertEqual', Load(), lineno=36, col_offset=12), [Call(Attribute(Name('C', Load(), lineno=36, col_offset=29), 'output', Load(), lineno=36, col_offset=29), [], [keyword('sep', Str('\n', lineno=36, col_offset=42))], None, None, lineno=36, col_offset=29), Subscript(Name('case', Load(), lineno=36, col_offset=49), Index(Str('output', lineno=36, col_offset=54)), Load(), lineno=36, col_offset=49)], [], None, None, lineno=36, col_offset=12), lineno=36, col_offset=12), For(Tuple([Name('k', Store(), lineno=37, col_offset=16), Name('v', Store(), lineno=37, col_offset=19)], Store(), lineno=37, col_offset=16), Call(Name('sorted', Load(), lineno=37, col_offset=24), [Call(Attribute(Subscript(Name('case', Load(), lineno=37, col_offset=31), Index(Str('dict', lineno=37, col_offset=36)), Load(), lineno=37, col_offset=31), 'iteritems', Load(), lineno=37, col_offset=31), [], [], None, None, lineno=37, col_offset=31)], [], None, None, lineno=37, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=16), 'assertEqual', Load(), lineno=38, col_offset=16), [Attribute(Subscript(Name('C', Load(), lineno=38, col_offset=33), Index(Name('k', Load(), lineno=38, col_offset=35)), Load(), lineno=38, col_offset=33), 'value', Load(), lineno=38, col_offset=33), Name('v', Load(), lineno=38, col_offset=45)], [], None, None, lineno=38, col_offset=16), lineno=38, col_offset=16)], [], lineno=37, col_offset=12)], [], lineno=32, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('test_load', arguments([Name('self', Param(), lineno=40, col_offset=18)], None, None, []), [Assign([Name('C', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('Cookie', Load(), lineno=41, col_offset=12), 'SimpleCookie', Load(), lineno=41, col_offset=12), [], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=8), Expr(Call(Attribute(Name('C', Load(), lineno=42, col_offset=8), 'load', Load(), lineno=42, col_offset=8), [Str('Customer="WILE_E_COYOTE"; Version=1; Path=/acme', lineno=42, col_offset=15)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertEqual', Load(), lineno=44, col_offset=8), [Attribute(Subscript(Name('C', Load(), lineno=44, col_offset=25), Index(Str('Customer', lineno=44, col_offset=27)), Load(), lineno=44, col_offset=25), 'value', Load(), lineno=44, col_offset=25), Str('WILE_E_COYOTE', lineno=44, col_offset=46)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=45, col_offset=25), Index(Str('Customer', lineno=45, col_offset=27)), Load(), lineno=45, col_offset=25), Index(Str('version', lineno=45, col_offset=39)), Load(), lineno=45, col_offset=25), Str('1', lineno=45, col_offset=51)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=46, col_offset=25), Index(Str('Customer', lineno=46, col_offset=27)), Load(), lineno=46, col_offset=25), Index(Str('path', lineno=46, col_offset=39)), Load(), lineno=46, col_offset=25), Str('/acme', lineno=46, col_offset=48)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=8), 'assertEqual', Load(), lineno=48, col_offset=8), [Call(Attribute(Name('C', Load(), lineno=48, col_offset=25), 'output', Load(), lineno=48, col_offset=25), [List([Str('path', lineno=48, col_offset=35)], Load(), lineno=48, col_offset=34)], [], None, None, lineno=48, col_offset=25), Str('Set-Cookie: Customer="WILE_E_COYOTE"; Path=/acme', lineno=49, col_offset=12)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertEqual', Load(), lineno=50, col_offset=8), [Call(Attribute(Name('C', Load(), lineno=50, col_offset=25), 'js_output', Load(), lineno=50, col_offset=25), [], [], None, None, lineno=50, col_offset=25), Str('\n        <script type="text/javascript">\n        <!-- begin hiding\n        document.cookie = "Customer=\\"WILE_E_COYOTE\\"; Path=/acme; Version=1";\n        // end hiding -->\n        </script>\n        ', lineno=56, col_offset=-1)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertEqual', Load(), lineno=57, col_offset=8), [Call(Attribute(Name('C', Load(), lineno=57, col_offset=25), 'js_output', Load(), lineno=57, col_offset=25), [List([Str('path', lineno=57, col_offset=38)], Load(), lineno=57, col_offset=37)], [], None, None, lineno=57, col_offset=25), Str('\n        <script type="text/javascript">\n        <!-- begin hiding\n        document.cookie = "Customer=\\"WILE_E_COYOTE\\"; Path=/acme";\n        // end hiding -->\n        </script>\n        ', lineno=63, col_offset=-1)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8), Assign([Name('C', Store(), lineno=66, col_offset=8)], Call(Attribute(Name('Cookie', Load(), lineno=66, col_offset=12), 'SimpleCookie', Load(), lineno=66, col_offset=12), [], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=8), Expr(Call(Attribute(Name('C', Load(), lineno=67, col_offset=8), 'load', Load(), lineno=67, col_offset=8), [Str('Customer="W"; expires=Wed, 01-Jan-2010 00:00:00 GMT', lineno=67, col_offset=15)], [], None, None, lineno=67, col_offset=8), lineno=67, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'assertEqual', Load(), lineno=68, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=68, col_offset=25), Index(Str('Customer', lineno=68, col_offset=27)), Load(), lineno=68, col_offset=25), Index(Str('expires', lineno=68, col_offset=39)), Load(), lineno=68, col_offset=25), Str('Wed, 01-Jan-2010 00:00:00 GMT', lineno=69, col_offset=25)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Assign([Name('C', Store(), lineno=70, col_offset=8)], Call(Attribute(Name('Cookie', Load(), lineno=70, col_offset=12), 'SimpleCookie', Load(), lineno=70, col_offset=12), [], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=8), Expr(Call(Attribute(Name('C', Load(), lineno=71, col_offset=8), 'load', Load(), lineno=71, col_offset=8), [Str('Customer="W"; expires=Wed, 01-Jan-98 00:00:00 GMT', lineno=71, col_offset=15)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=72, col_offset=25), Index(Str('Customer', lineno=72, col_offset=27)), Load(), lineno=72, col_offset=25), Index(Str('expires', lineno=72, col_offset=39)), Load(), lineno=72, col_offset=25), Str('Wed, 01-Jan-98 00:00:00 GMT', lineno=73, col_offset=25)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=40, col_offset=4), FunctionDef('test_quoted_meta', arguments([Name('self', Param(), lineno=75, col_offset=25)], None, None, []), [Assign([Name('C', Store(), lineno=77, col_offset=8)], Call(Attribute(Name('Cookie', Load(), lineno=77, col_offset=12), 'SimpleCookie', Load(), lineno=77, col_offset=12), [], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=8), Expr(Call(Attribute(Name('C', Load(), lineno=78, col_offset=8), 'load', Load(), lineno=78, col_offset=8), [Str('Customer="WILE_E_COYOTE"; Version="1"; Path="/acme"', lineno=78, col_offset=15)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertEqual', Load(), lineno=79, col_offset=8), [Attribute(Subscript(Name('C', Load(), lineno=79, col_offset=25), Index(Str('Customer', lineno=79, col_offset=27)), Load(), lineno=79, col_offset=25), 'value', Load(), lineno=79, col_offset=25), Str('WILE_E_COYOTE', lineno=79, col_offset=46)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=80, col_offset=25), Index(Str('Customer', lineno=80, col_offset=27)), Load(), lineno=80, col_offset=25), Index(Str('version', lineno=80, col_offset=39)), Load(), lineno=80, col_offset=25), Str('1', lineno=80, col_offset=51)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertEqual', Load(), lineno=81, col_offset=8), [Subscript(Subscript(Name('C', Load(), lineno=81, col_offset=25), Index(Str('Customer', lineno=81, col_offset=27)), Load(), lineno=81, col_offset=25), Index(Str('path', lineno=81, col_offset=39)), Load(), lineno=81, col_offset=25), Str('/acme', lineno=81, col_offset=48)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8)], [], lineno=75, col_offset=4)], [], lineno=8, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=84, col_offset=4), [Name('CookieTests', Load(), lineno=84, col_offset=17)], [], None, None, lineno=84, col_offset=4), lineno=84, col_offset=4), With(Call(Name('check_warnings', Load(), lineno=85, col_offset=9), [Tuple([Str('.+Cookie class is insecure; do not use it', lineno=85, col_offset=25), Name('DeprecationWarning', Load(), lineno=86, col_offset=25)], Load(), lineno=85, col_offset=25)], [], None, None, lineno=85, col_offset=9), None, [Expr(Call(Name('run_doctest', Load(), lineno=87, col_offset=8), [Name('Cookie', Load(), lineno=87, col_offset=20)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], lineno=85, col_offset=9)], [], lineno=83, col_offset=0), If(Compare(Name('__name__', Load(), lineno=89, col_offset=3), [Eq()], [Str('__main__', lineno=89, col_offset=15)], lineno=89, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=90, col_offset=4), [], [], None, None, lineno=90, col_offset=4), lineno=90, col_offset=4)], [], lineno=89, col_offset=0)])
