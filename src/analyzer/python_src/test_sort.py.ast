Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=1, col_offset=0), Import([alias('random', None)], lineno=2, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), Assign([Name('verbose', Store(), lineno=6, col_offset=0)], Attribute(Name('test_support', Load(), lineno=6, col_offset=10), 'verbose', Load(), lineno=6, col_offset=10), lineno=6, col_offset=0), Assign([Name('nerrors', Store(), lineno=7, col_offset=0)], Num(0, lineno=7, col_offset=10), lineno=7, col_offset=0), FunctionDef('check', arguments([Name('tag', Param(), lineno=9, col_offset=10), Name('expected', Param(), lineno=9, col_offset=15), Name('raw', Param(), lineno=9, col_offset=25), Name('compare', Param(), lineno=9, col_offset=30)], None, None, [Name('None', Load(), lineno=9, col_offset=38)]), [Global(['nerrors'], lineno=10, col_offset=4), If(Name('verbose', Load(), lineno=12, col_offset=7), [Print(None, [Str('    checking', lineno=13, col_offset=14), Name('tag', Load(), lineno=13, col_offset=30)], True, lineno=13, col_offset=8)], [], lineno=12, col_offset=4), Assign([Name('orig', Store(), lineno=15, col_offset=4)], Subscript(Name('raw', Load(), lineno=15, col_offset=11), Slice(None, None, None), Load(), lineno=15, col_offset=11), lineno=15, col_offset=4), If(Name('compare', Load(), lineno=16, col_offset=7), [Expr(Call(Attribute(Name('raw', Load(), lineno=17, col_offset=8), 'sort', Load(), lineno=17, col_offset=8), [Name('compare', Load(), lineno=17, col_offset=17)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8)], [Expr(Call(Attribute(Name('raw', Load(), lineno=19, col_offset=8), 'sort', Load(), lineno=19, col_offset=8), [], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8)], lineno=16, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=21, col_offset=7), [Name('expected', Load(), lineno=21, col_offset=11)], [], None, None, lineno=21, col_offset=7), [NotEq()], [Call(Name('len', Load(), lineno=21, col_offset=24), [Name('raw', Load(), lineno=21, col_offset=28)], [], None, None, lineno=21, col_offset=24)], lineno=21, col_offset=7), [Print(None, [Str('error in', lineno=22, col_offset=14), Name('tag', Load(), lineno=22, col_offset=26)], True, lineno=22, col_offset=8), Print(None, [Str('length mismatch;', lineno=23, col_offset=14), Call(Name('len', Load(), lineno=23, col_offset=34), [Name('expected', Load(), lineno=23, col_offset=38)], [], None, None, lineno=23, col_offset=34), Call(Name('len', Load(), lineno=23, col_offset=49), [Name('raw', Load(), lineno=23, col_offset=53)], [], None, None, lineno=23, col_offset=49)], True, lineno=23, col_offset=8), Print(None, [Name('expected', Load(), lineno=24, col_offset=14)], True, lineno=24, col_offset=8), Print(None, [Name('orig', Load(), lineno=25, col_offset=14)], True, lineno=25, col_offset=8), Print(None, [Name('raw', Load(), lineno=26, col_offset=14)], True, lineno=26, col_offset=8), AugAssign(Name('nerrors', Store(), lineno=27, col_offset=8), Add(), Num(1, lineno=27, col_offset=19), lineno=27, col_offset=8), Return(None, lineno=28, col_offset=8)], [], lineno=21, col_offset=4), For(Tuple([Name('i', Store(), lineno=30, col_offset=8), Name('good', Store(), lineno=30, col_offset=11)], Store(), lineno=30, col_offset=8), Call(Name('enumerate', Load(), lineno=30, col_offset=19), [Name('expected', Load(), lineno=30, col_offset=29)], [], None, None, lineno=30, col_offset=19), [Assign([Name('maybe', Store(), lineno=31, col_offset=8)], Subscript(Name('raw', Load(), lineno=31, col_offset=16), Index(Name('i', Load(), lineno=31, col_offset=20)), Load(), lineno=31, col_offset=16), lineno=31, col_offset=8), If(Compare(Name('good', Load(), lineno=32, col_offset=11), [IsNot()], [Name('maybe', Load(), lineno=32, col_offset=23)], lineno=32, col_offset=11), [Print(None, [Str('error in', lineno=33, col_offset=18), Name('tag', Load(), lineno=33, col_offset=30)], True, lineno=33, col_offset=12), Print(None, [Str('out of order at index', lineno=34, col_offset=18), Name('i', Load(), lineno=34, col_offset=43), Name('good', Load(), lineno=34, col_offset=46), Name('maybe', Load(), lineno=34, col_offset=52)], True, lineno=34, col_offset=12), Print(None, [Name('expected', Load(), lineno=35, col_offset=18)], True, lineno=35, col_offset=12), Print(None, [Name('orig', Load(), lineno=36, col_offset=18)], True, lineno=36, col_offset=12), Print(None, [Name('raw', Load(), lineno=37, col_offset=18)], True, lineno=37, col_offset=12), AugAssign(Name('nerrors', Store(), lineno=38, col_offset=12), Add(), Num(1, lineno=38, col_offset=23), lineno=38, col_offset=12), Return(None, lineno=39, col_offset=12)], [], lineno=32, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=9, col_offset=0), ClassDef('TestBase', [Attribute(Name('unittest', Load(), lineno=41, col_offset=15), 'TestCase', Load(), lineno=41, col_offset=15)], [FunctionDef('testStressfully', arguments([Name('self', Param(), lineno=42, col_offset=24)], None, None, []), [Assign([Name('sizes', Store(), lineno=44, col_offset=8)], List([Num(0, lineno=44, col_offset=17)], Load(), lineno=44, col_offset=16), lineno=44, col_offset=8), For(Name('power', Store(), lineno=45, col_offset=12), Call(Name('range', Load(), lineno=45, col_offset=21), [Num(1, lineno=45, col_offset=27), Num(10, lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=21), [Assign([Name('n', Store(), lineno=46, col_offset=12)], BinOp(Num(2, lineno=46, col_offset=16), Pow(), Name('power', Load(), lineno=46, col_offset=21), lineno=46, col_offset=16), lineno=46, col_offset=12), Expr(Call(Attribute(Name('sizes', Load(), lineno=47, col_offset=12), 'extend', Load(), lineno=47, col_offset=12), [Call(Name('range', Load(), lineno=47, col_offset=25), [BinOp(Name('n', Load(), lineno=47, col_offset=31), Sub(), Num(1, lineno=47, col_offset=33), lineno=47, col_offset=31), BinOp(Name('n', Load(), lineno=47, col_offset=36), Add(), Num(2, lineno=47, col_offset=38), lineno=47, col_offset=36)], [], None, None, lineno=47, col_offset=25)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12)], [], lineno=45, col_offset=8), Expr(Call(Attribute(Name('sizes', Load(), lineno=48, col_offset=8), 'extend', Load(), lineno=48, col_offset=8), [List([Num(10, lineno=48, col_offset=22), Num(100, lineno=48, col_offset=26), Num(1000, lineno=48, col_offset=31)], Load(), lineno=48, col_offset=21)], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), ClassDef('Complains', [Name('object', Load(), lineno=50, col_offset=24)], [Assign([Name('maybe_complain', Store(), lineno=51, col_offset=12)], Name('True', Load(), lineno=51, col_offset=29), lineno=51, col_offset=12), FunctionDef('__init__', arguments([Name('self', Param(), lineno=53, col_offset=25), Name('i', Param(), lineno=53, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=54, col_offset=16), 'i', Store(), lineno=54, col_offset=16)], Name('i', Load(), lineno=54, col_offset=25), lineno=54, col_offset=16)], [], lineno=53, col_offset=12), FunctionDef('__lt__', arguments([Name('self', Param(), lineno=56, col_offset=23), Name('other', Param(), lineno=56, col_offset=29)], None, None, []), [If(BoolOp(And(), [Attribute(Name('Complains', Load(), lineno=57, col_offset=19), 'maybe_complain', Load(), lineno=57, col_offset=19), Compare(Call(Attribute(Name('random', Load(), lineno=57, col_offset=48), 'random', Load(), lineno=57, col_offset=48), [], [], None, None, lineno=57, col_offset=48), [Lt()], [Num(0.001, lineno=57, col_offset=66)], lineno=57, col_offset=48)], lineno=57, col_offset=19), [If(Name('verbose', Load(), lineno=58, col_offset=23), [Print(None, [Str('        complaining at', lineno=59, col_offset=30), Name('self', Load(), lineno=59, col_offset=56), Name('other', Load(), lineno=59, col_offset=62)], True, lineno=59, col_offset=24)], [], lineno=58, col_offset=20), Raise(Name('RuntimeError', Load(), lineno=60, col_offset=26), None, None, lineno=60, col_offset=20)], [], lineno=57, col_offset=16), Return(Compare(Attribute(Name('self', Load(), lineno=61, col_offset=23), 'i', Load(), lineno=61, col_offset=23), [Lt()], [Attribute(Name('other', Load(), lineno=61, col_offset=32), 'i', Load(), lineno=61, col_offset=32)], lineno=61, col_offset=23), lineno=61, col_offset=16)], [], lineno=56, col_offset=12), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=63, col_offset=25)], None, None, []), [Return(BinOp(Str('Complains(%d)', lineno=64, col_offset=23), Mod(), Attribute(Name('self', Load(), lineno=64, col_offset=41), 'i', Load(), lineno=64, col_offset=41), lineno=64, col_offset=23), lineno=64, col_offset=16)], [], lineno=63, col_offset=12)], [], lineno=50, col_offset=8), ClassDef('Stable', [Name('object', Load(), lineno=66, col_offset=21)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=67, col_offset=25), Name('key', Param(), lineno=67, col_offset=31), Name('i', Param(), lineno=67, col_offset=36)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=68, col_offset=16), 'key', Store(), lineno=68, col_offset=16)], Name('key', Load(), lineno=68, col_offset=27), lineno=68, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=69, col_offset=16), 'index', Store(), lineno=69, col_offset=16)], Name('i', Load(), lineno=69, col_offset=29), lineno=69, col_offset=16)], [], lineno=67, col_offset=12), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=71, col_offset=24), Name('other', Param(), lineno=71, col_offset=30)], None, None, []), [Return(Call(Name('cmp', Load(), lineno=72, col_offset=23), [Attribute(Name('self', Load(), lineno=72, col_offset=27), 'key', Load(), lineno=72, col_offset=27), Attribute(Name('other', Load(), lineno=72, col_offset=37), 'key', Load(), lineno=72, col_offset=37)], [], None, None, lineno=72, col_offset=23), lineno=72, col_offset=16)], [], lineno=71, col_offset=12), Assign([Name('__hash__', Store(), lineno=73, col_offset=12)], Name('None', Load(), lineno=73, col_offset=23), lineno=73, col_offset=12), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=75, col_offset=25)], None, None, []), [Return(BinOp(Str('Stable(%d, %d)', lineno=76, col_offset=23), Mod(), Tuple([Attribute(Name('self', Load(), lineno=76, col_offset=43), 'key', Load(), lineno=76, col_offset=43), Attribute(Name('self', Load(), lineno=76, col_offset=53), 'index', Load(), lineno=76, col_offset=53)], Load(), lineno=76, col_offset=43), lineno=76, col_offset=23), lineno=76, col_offset=16)], [], lineno=75, col_offset=12)], [], lineno=66, col_offset=8), For(Name('n', Store(), lineno=78, col_offset=12), Name('sizes', Load(), lineno=78, col_offset=17), [Assign([Name('x', Store(), lineno=79, col_offset=12)], Call(Name('range', Load(), lineno=79, col_offset=16), [Name('n', Load(), lineno=79, col_offset=22)], [], None, None, lineno=79, col_offset=16), lineno=79, col_offset=12), If(Name('verbose', Load(), lineno=80, col_offset=15), [Print(None, [Str('Testing size', lineno=81, col_offset=22), Name('n', Load(), lineno=81, col_offset=38)], True, lineno=81, col_offset=16)], [], lineno=80, col_offset=12), Assign([Name('s', Store(), lineno=83, col_offset=12)], Subscript(Name('x', Load(), lineno=83, col_offset=16), Slice(None, None, None), Load(), lineno=83, col_offset=16), lineno=83, col_offset=12), Expr(Call(Name('check', Load(), lineno=84, col_offset=12), [Str('identity', lineno=84, col_offset=18), Name('x', Load(), lineno=84, col_offset=30), Name('s', Load(), lineno=84, col_offset=33)], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=12), Assign([Name('s', Store(), lineno=86, col_offset=12)], Subscript(Name('x', Load(), lineno=86, col_offset=16), Slice(None, None, None), Load(), lineno=86, col_offset=16), lineno=86, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=87, col_offset=12), 'reverse', Load(), lineno=87, col_offset=12), [], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12), Expr(Call(Name('check', Load(), lineno=88, col_offset=12), [Str('reversed', lineno=88, col_offset=18), Name('x', Load(), lineno=88, col_offset=30), Name('s', Load(), lineno=88, col_offset=33)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12), Assign([Name('s', Store(), lineno=90, col_offset=12)], Subscript(Name('x', Load(), lineno=90, col_offset=16), Slice(None, None, None), Load(), lineno=90, col_offset=16), lineno=90, col_offset=12), Expr(Call(Attribute(Name('random', Load(), lineno=91, col_offset=12), 'shuffle', Load(), lineno=91, col_offset=12), [Name('s', Load(), lineno=91, col_offset=27)], [], None, None, lineno=91, col_offset=12), lineno=91, col_offset=12), Expr(Call(Name('check', Load(), lineno=92, col_offset=12), [Str('random permutation', lineno=92, col_offset=18), Name('x', Load(), lineno=92, col_offset=40), Name('s', Load(), lineno=92, col_offset=43)], [], None, None, lineno=92, col_offset=12), lineno=92, col_offset=12), Assign([Name('y', Store(), lineno=94, col_offset=12)], Subscript(Name('x', Load(), lineno=94, col_offset=16), Slice(None, None, None), Load(), lineno=94, col_offset=16), lineno=94, col_offset=12), Expr(Call(Attribute(Name('y', Load(), lineno=95, col_offset=12), 'reverse', Load(), lineno=95, col_offset=12), [], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12), Assign([Name('s', Store(), lineno=96, col_offset=12)], Subscript(Name('x', Load(), lineno=96, col_offset=16), Slice(None, None, None), Load(), lineno=96, col_offset=16), lineno=96, col_offset=12), Expr(Call(Name('check', Load(), lineno=97, col_offset=12), [Str('reversed via function', lineno=97, col_offset=18), Name('y', Load(), lineno=97, col_offset=43), Name('s', Load(), lineno=97, col_offset=46), Lambda(arguments([Name('a', Param(), lineno=97, col_offset=56), Name('b', Param(), lineno=97, col_offset=59)], None, None, []), Call(Name('cmp', Load(), lineno=97, col_offset=62), [Name('b', Load(), lineno=97, col_offset=66), Name('a', Load(), lineno=97, col_offset=69)], [], None, None, lineno=97, col_offset=62), lineno=97, col_offset=49)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12), If(Name('verbose', Load(), lineno=99, col_offset=15), [Print(None, [Str('    Checking against an insane comparison function.', lineno=100, col_offset=22)], True, lineno=100, col_offset=16), Print(None, [Str("        If the implementation isn't careful, this may segfault.", lineno=101, col_offset=22)], True, lineno=101, col_offset=16)], [], lineno=99, col_offset=12), Assign([Name('s', Store(), lineno=102, col_offset=12)], Subscript(Name('x', Load(), lineno=102, col_offset=16), Slice(None, None, None), Load(), lineno=102, col_offset=16), lineno=102, col_offset=12), Expr(Call(Attribute(Name('s', Load(), lineno=103, col_offset=12), 'sort', Load(), lineno=103, col_offset=12), [Lambda(arguments([Name('a', Param(), lineno=103, col_offset=26), Name('b', Param(), lineno=103, col_offset=29)], None, None, []), BinOp(Call(Name('int', Load(), lineno=103, col_offset=33), [BinOp(Call(Attribute(Name('random', Load(), lineno=103, col_offset=37), 'random', Load(), lineno=103, col_offset=37), [], [], None, None, lineno=103, col_offset=37), Mult(), Num(3, lineno=103, col_offset=55), lineno=103, col_offset=37)], [], None, None, lineno=103, col_offset=33), Sub(), Num(1, lineno=103, col_offset=60), lineno=103, col_offset=33), lineno=103, col_offset=19)], [], None, None, lineno=103, col_offset=12), lineno=103, col_offset=12), Expr(Call(Name('check', Load(), lineno=104, col_offset=12), [Str('an insane function left some permutation', lineno=104, col_offset=18), Name('x', Load(), lineno=104, col_offset=62), Name('s', Load(), lineno=104, col_offset=65)], [], None, None, lineno=104, col_offset=12), lineno=104, col_offset=12), Assign([Name('x', Store(), lineno=106, col_offset=12)], ListComp(Call(Name('Complains', Load(), lineno=106, col_offset=17), [Name('i', Load(), lineno=106, col_offset=27)], [], None, None, lineno=106, col_offset=17), [comprehension(Name('i', Store(), lineno=106, col_offset=34), Name('x', Load(), lineno=106, col_offset=39), [])], lineno=106, col_offset=17), lineno=106, col_offset=12), Assign([Name('s', Store(), lineno=107, col_offset=12)], Subscript(Name('x', Load(), lineno=107, col_offset=16), Slice(None, None, None), Load(), lineno=107, col_offset=16), lineno=107, col_offset=12), Expr(Call(Attribute(Name('random', Load(), lineno=108, col_offset=12), 'shuffle', Load(), lineno=108, col_offset=12), [Name('s', Load(), lineno=108, col_offset=27)], [], None, None, lineno=108, col_offset=12), lineno=108, col_offset=12), Assign([Attribute(Name('Complains', Load(), lineno=109, col_offset=12), 'maybe_complain', Store(), lineno=109, col_offset=12)], Name('True', Load(), lineno=109, col_offset=39), lineno=109, col_offset=12), Assign([Name('it_complained', Store(), lineno=110, col_offset=12)], Name('False', Load(), lineno=110, col_offset=28), lineno=110, col_offset=12), TryExcept([Expr(Call(Attribute(Name('s', Load(), lineno=112, col_offset=16), 'sort', Load(), lineno=112, col_offset=16), [], [], None, None, lineno=112, col_offset=16), lineno=112, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=113, col_offset=19), None, [Assign([Name('it_complained', Store(), lineno=114, col_offset=16)], Name('True', Load(), lineno=114, col_offset=32), lineno=114, col_offset=16)], lineno=113, col_offset=12)], [], lineno=111, col_offset=12), If(Name('it_complained', Load(), lineno=115, col_offset=15), [Assign([Attribute(Name('Complains', Load(), lineno=116, col_offset=16), 'maybe_complain', Store(), lineno=116, col_offset=16)], Name('False', Load(), lineno=116, col_offset=43), lineno=116, col_offset=16), Expr(Call(Name('check', Load(), lineno=117, col_offset=16), [Str('exception during sort left some permutation', lineno=117, col_offset=22), Name('x', Load(), lineno=117, col_offset=69), Name('s', Load(), lineno=117, col_offset=72)], [], None, None, lineno=117, col_offset=16), lineno=117, col_offset=16)], [], lineno=115, col_offset=12), Assign([Name('s', Store(), lineno=119, col_offset=12)], ListComp(Call(Name('Stable', Load(), lineno=119, col_offset=17), [Call(Attribute(Name('random', Load(), lineno=119, col_offset=24), 'randrange', Load(), lineno=119, col_offset=24), [Num(10, lineno=119, col_offset=41)], [], None, None, lineno=119, col_offset=24), Name('i', Load(), lineno=119, col_offset=46)], [], None, None, lineno=119, col_offset=17), [comprehension(Name('i', Store(), lineno=119, col_offset=53), Call(Name('xrange', Load(), lineno=119, col_offset=58), [Name('n', Load(), lineno=119, col_offset=65)], [], None, None, lineno=119, col_offset=58), [])], lineno=119, col_offset=17), lineno=119, col_offset=12), Assign([Name('augmented', Store(), lineno=120, col_offset=12)], ListComp(Tuple([Name('e', Load(), lineno=120, col_offset=26), Attribute(Name('e', Load(), lineno=120, col_offset=29), 'index', Load(), lineno=120, col_offset=29)], Load(), lineno=120, col_offset=26), [comprehension(Name('e', Store(), lineno=120, col_offset=42), Name('s', Load(), lineno=120, col_offset=47), [])], lineno=120, col_offset=25), lineno=120, col_offset=12), Expr(Call(Attribute(Name('augmented', Load(), lineno=121, col_offset=12), 'sort', Load(), lineno=121, col_offset=12), [], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12), Assign([Name('x', Store(), lineno=122, col_offset=12)], ListComp(Name('e', Load(), lineno=122, col_offset=17), [comprehension(Tuple([Name('e', Store(), lineno=122, col_offset=23), Name('i', Store(), lineno=122, col_offset=26)], Store(), lineno=122, col_offset=23), Name('augmented', Load(), lineno=122, col_offset=31), [])], lineno=122, col_offset=17), lineno=122, col_offset=12), Expr(Call(Name('check', Load(), lineno=123, col_offset=12), [Str('stability', lineno=123, col_offset=18), Name('x', Load(), lineno=123, col_offset=31), Name('s', Load(), lineno=123, col_offset=34)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=12)], [], lineno=78, col_offset=8)], [], lineno=42, col_offset=4)], [], lineno=41, col_offset=0), ClassDef('TestBugs', [Attribute(Name('unittest', Load(), lineno=127, col_offset=15), 'TestCase', Load(), lineno=127, col_offset=15)], [FunctionDef('test_bug453523', arguments([Name('self', Param(), lineno=129, col_offset=23)], None, None, []), [ClassDef('C', [], [FunctionDef('__lt__', arguments([Name('self', Param(), lineno=135, col_offset=23), Name('other', Param(), lineno=135, col_offset=29)], None, None, []), [If(BoolOp(And(), [Name('L', Load(), lineno=136, col_offset=19), Compare(Call(Attribute(Name('random', Load(), lineno=136, col_offset=25), 'random', Load(), lineno=136, col_offset=25), [], [], None, None, lineno=136, col_offset=25), [Lt()], [Num(0.75, lineno=136, col_offset=43)], lineno=136, col_offset=25)], lineno=136, col_offset=19), [Expr(Call(Attribute(Name('L', Load(), lineno=137, col_offset=20), 'pop', Load(), lineno=137, col_offset=20), [], [], None, None, lineno=137, col_offset=20), lineno=137, col_offset=20)], [Expr(Call(Attribute(Name('L', Load(), lineno=139, col_offset=20), 'append', Load(), lineno=139, col_offset=20), [Num(3, lineno=139, col_offset=29)], [], None, None, lineno=139, col_offset=20), lineno=139, col_offset=20)], lineno=136, col_offset=16), Return(Compare(Call(Attribute(Name('random', Load(), lineno=140, col_offset=23), 'random', Load(), lineno=140, col_offset=23), [], [], None, None, lineno=140, col_offset=23), [Lt()], [Num(0.5, lineno=140, col_offset=41)], lineno=140, col_offset=23), lineno=140, col_offset=16)], [], lineno=135, col_offset=12)], [], lineno=134, col_offset=8), Assign([Name('L', Store(), lineno=142, col_offset=8)], ListComp(Call(Name('C', Load(), lineno=142, col_offset=13), [], [], None, None, lineno=142, col_offset=13), [comprehension(Name('i', Store(), lineno=142, col_offset=21), Call(Name('range', Load(), lineno=142, col_offset=26), [Num(50, lineno=142, col_offset=32)], [], None, None, lineno=142, col_offset=26), [])], lineno=142, col_offset=13), lineno=142, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertRaises', Load(), lineno=143, col_offset=8), [Name('ValueError', Load(), lineno=143, col_offset=26), Attribute(Name('L', Load(), lineno=143, col_offset=38), 'sort', Load(), lineno=143, col_offset=38)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('test_cmpNone', arguments([Name('self', Param(), lineno=145, col_offset=21)], None, None, []), [Assign([Name('L', Store(), lineno=148, col_offset=8)], Call(Name('range', Load(), lineno=148, col_offset=12), [Num(50, lineno=148, col_offset=18)], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=8), Expr(Call(Attribute(Name('random', Load(), lineno=149, col_offset=8), 'shuffle', Load(), lineno=149, col_offset=8), [Name('L', Load(), lineno=149, col_offset=23)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('L', Load(), lineno=150, col_offset=8), 'sort', Load(), lineno=150, col_offset=8), [Name('None', Load(), lineno=150, col_offset=15)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'assertEqual', Load(), lineno=151, col_offset=8), [Name('L', Load(), lineno=151, col_offset=25), Call(Name('range', Load(), lineno=151, col_offset=28), [Num(50, lineno=151, col_offset=34)], [], None, None, lineno=151, col_offset=28)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8)], [], lineno=145, col_offset=4), FunctionDef('test_undetected_mutation', arguments([Name('self', Param(), lineno=153, col_offset=33)], None, None, []), [Assign([Name('memorywaster', Store(), lineno=155, col_offset=8)], List([], Load(), lineno=155, col_offset=23), lineno=155, col_offset=8), For(Name('i', Store(), lineno=156, col_offset=12), Call(Name('range', Load(), lineno=156, col_offset=17), [Num(20, lineno=156, col_offset=23)], [], None, None, lineno=156, col_offset=17), [FunctionDef('mutating_cmp', arguments([Name('x', Param(), lineno=157, col_offset=29), Name('y', Param(), lineno=157, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('L', Load(), lineno=158, col_offset=16), 'append', Load(), lineno=158, col_offset=16), [Num(3, lineno=158, col_offset=25)], [], None, None, lineno=158, col_offset=16), lineno=158, col_offset=16), Expr(Call(Attribute(Name('L', Load(), lineno=159, col_offset=16), 'pop', Load(), lineno=159, col_offset=16), [], [], None, None, lineno=159, col_offset=16), lineno=159, col_offset=16), Return(Call(Name('cmp', Load(), lineno=160, col_offset=23), [Name('x', Load(), lineno=160, col_offset=27), Name('y', Load(), lineno=160, col_offset=30)], [], None, None, lineno=160, col_offset=23), lineno=160, col_offset=16)], [], lineno=157, col_offset=12), Assign([Name('L', Store(), lineno=161, col_offset=12)], List([Num(1, lineno=161, col_offset=17), Num(2, lineno=161, col_offset=19)], Load(), lineno=161, col_offset=16), lineno=161, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=12), 'assertRaises', Load(), lineno=162, col_offset=12), [Name('ValueError', Load(), lineno=162, col_offset=30), Attribute(Name('L', Load(), lineno=162, col_offset=42), 'sort', Load(), lineno=162, col_offset=42), Name('mutating_cmp', Load(), lineno=162, col_offset=50)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12), FunctionDef('mutating_cmp', arguments([Name('x', Param(), lineno=163, col_offset=29), Name('y', Param(), lineno=163, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('L', Load(), lineno=164, col_offset=16), 'append', Load(), lineno=164, col_offset=16), [Num(3, lineno=164, col_offset=25)], [], None, None, lineno=164, col_offset=16), lineno=164, col_offset=16), Delete([Subscript(Name('L', Load(), lineno=165, col_offset=20), Slice(None, None, None), Del(), lineno=165, col_offset=20)], lineno=165, col_offset=16), Return(Call(Name('cmp', Load(), lineno=166, col_offset=23), [Name('x', Load(), lineno=166, col_offset=27), Name('y', Load(), lineno=166, col_offset=30)], [], None, None, lineno=166, col_offset=23), lineno=166, col_offset=16)], [], lineno=163, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=12), 'assertRaises', Load(), lineno=167, col_offset=12), [Name('ValueError', Load(), lineno=167, col_offset=30), Attribute(Name('L', Load(), lineno=167, col_offset=42), 'sort', Load(), lineno=167, col_offset=42), Name('mutating_cmp', Load(), lineno=167, col_offset=50)], [], None, None, lineno=167, col_offset=12), lineno=167, col_offset=12), Assign([Name('memorywaster', Store(), lineno=168, col_offset=12)], List([Name('memorywaster', Load(), lineno=168, col_offset=28)], Load(), lineno=168, col_offset=27), lineno=168, col_offset=12)], [], lineno=156, col_offset=8)], [], lineno=153, col_offset=4)], [], lineno=127, col_offset=0), ClassDef('TestDecorateSortUndecorate', [Attribute(Name('unittest', Load(), lineno=172, col_offset=33), 'TestCase', Load(), lineno=172, col_offset=33)], [FunctionDef('test_decorated', arguments([Name('self', Param(), lineno=174, col_offset=23)], None, None, []), [Assign([Name('data', Store(), lineno=175, col_offset=8)], Call(Attribute(Str('The quick Brown fox Jumped over The lazy Dog', lineno=175, col_offset=15), 'split', Load(), lineno=175, col_offset=15), [], [], None, None, lineno=175, col_offset=15), lineno=175, col_offset=8), Assign([Name('copy', Store(), lineno=176, col_offset=8)], Subscript(Name('data', Load(), lineno=176, col_offset=15), Slice(None, None, None), Load(), lineno=176, col_offset=15), lineno=176, col_offset=8), Expr(Call(Attribute(Name('random', Load(), lineno=177, col_offset=8), 'shuffle', Load(), lineno=177, col_offset=8), [Name('data', Load(), lineno=177, col_offset=23)], [], None, None, lineno=177, col_offset=8), lineno=177, col_offset=8), Expr(Call(Attribute(Name('data', Load(), lineno=178, col_offset=8), 'sort', Load(), lineno=178, col_offset=8), [], [keyword('key', Attribute(Name('str', Load(), lineno=178, col_offset=22), 'lower', Load(), lineno=178, col_offset=22))], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8), Expr(Call(Attribute(Name('copy', Load(), lineno=179, col_offset=8), 'sort', Load(), lineno=179, col_offset=8), [], [keyword('cmp', Lambda(arguments([Name('x', Param(), lineno=179, col_offset=29), Name('y', Param(), lineno=179, col_offset=31)], None, None, []), Call(Name('cmp', Load(), lineno=179, col_offset=34), [Call(Attribute(Name('x', Load(), lineno=179, col_offset=38), 'lower', Load(), lineno=179, col_offset=38), [], [], None, None, lineno=179, col_offset=38), Call(Attribute(Name('y', Load(), lineno=179, col_offset=49), 'lower', Load(), lineno=179, col_offset=49), [], [], None, None, lineno=179, col_offset=49)], [], None, None, lineno=179, col_offset=34), lineno=179, col_offset=22))], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('test_baddecorator', arguments([Name('self', Param(), lineno=181, col_offset=26)], None, None, []), [Assign([Name('data', Store(), lineno=182, col_offset=8)], Call(Attribute(Str('The quick Brown fox Jumped over The lazy Dog', lineno=182, col_offset=15), 'split', Load(), lineno=182, col_offset=15), [], [], None, None, lineno=182, col_offset=15), lineno=182, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=8), 'assertRaises', Load(), lineno=183, col_offset=8), [Name('TypeError', Load(), lineno=183, col_offset=26), Attribute(Name('data', Load(), lineno=183, col_offset=37), 'sort', Load(), lineno=183, col_offset=37), Name('None', Load(), lineno=183, col_offset=48), Lambda(arguments([Name('x', Param(), lineno=183, col_offset=61), Name('y', Param(), lineno=183, col_offset=63)], None, None, []), Num(0, lineno=183, col_offset=66), lineno=183, col_offset=54)], [], None, None, lineno=183, col_offset=8), lineno=183, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_stability', arguments([Name('self', Param(), lineno=185, col_offset=23)], None, None, []), [Assign([Name('data', Store(), lineno=186, col_offset=8)], ListComp(Tuple([Call(Attribute(Name('random', Load(), lineno=186, col_offset=17), 'randrange', Load(), lineno=186, col_offset=17), [Num(100, lineno=186, col_offset=34)], [], None, None, lineno=186, col_offset=17), Name('i', Load(), lineno=186, col_offset=40)], Load(), lineno=186, col_offset=17), [comprehension(Name('i', Store(), lineno=186, col_offset=47), Call(Name('xrange', Load(), lineno=186, col_offset=52), [Num(200, lineno=186, col_offset=59)], [], None, None, lineno=186, col_offset=52), [])], lineno=186, col_offset=16), lineno=186, col_offset=8), Assign([Name('copy', Store(), lineno=187, col_offset=8)], Subscript(Name('data', Load(), lineno=187, col_offset=15), Slice(None, None, None), Load(), lineno=187, col_offset=15), lineno=187, col_offset=8), Expr(Call(Attribute(Name('data', Load(), lineno=188, col_offset=8), 'sort', Load(), lineno=188, col_offset=8), [], [keyword('key', Lambda(arguments([Name('x', Param(), lineno=188, col_offset=29)], None, None, []), Subscript(Name('x', Load(), lineno=188, col_offset=32), Index(Num(0, lineno=188, col_offset=34)), Load(), lineno=188, col_offset=32), lineno=188, col_offset=22))], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('copy', Load(), lineno=189, col_offset=8), 'sort', Load(), lineno=189, col_offset=8), [], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertEqual', Load(), lineno=190, col_offset=8), [Name('data', Load(), lineno=190, col_offset=25), Name('copy', Load(), lineno=190, col_offset=31)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('test_cmp_and_key_combination', arguments([Name('self', Param(), lineno=192, col_offset=37)], None, None, []), [FunctionDef('compare', arguments([Name('x', Param(), lineno=194, col_offset=20), Name('y', Param(), lineno=194, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'assertEqual', Load(), lineno=195, col_offset=12), [Call(Name('type', Load(), lineno=195, col_offset=29), [Name('x', Load(), lineno=195, col_offset=34)], [], None, None, lineno=195, col_offset=29), Name('str', Load(), lineno=195, col_offset=38)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=12), 'assertEqual', Load(), lineno=196, col_offset=12), [Call(Name('type', Load(), lineno=196, col_offset=29), [Name('x', Load(), lineno=196, col_offset=34)], [], None, None, lineno=196, col_offset=29), Name('str', Load(), lineno=196, col_offset=38)], [], None, None, lineno=196, col_offset=12), lineno=196, col_offset=12), Return(Call(Name('cmp', Load(), lineno=197, col_offset=19), [Name('x', Load(), lineno=197, col_offset=23), Name('y', Load(), lineno=197, col_offset=26)], [], None, None, lineno=197, col_offset=19), lineno=197, col_offset=12)], [], lineno=194, col_offset=8), Assign([Name('data', Store(), lineno=198, col_offset=8)], Call(Attribute(Str('The quick Brown fox Jumped over The lazy Dog', lineno=198, col_offset=15), 'split', Load(), lineno=198, col_offset=15), [], [], None, None, lineno=198, col_offset=15), lineno=198, col_offset=8), Expr(Call(Attribute(Name('data', Load(), lineno=199, col_offset=8), 'sort', Load(), lineno=199, col_offset=8), [], [keyword('cmp', Name('compare', Load(), lineno=199, col_offset=22)), keyword('key', Attribute(Name('str', Load(), lineno=199, col_offset=35), 'lower', Load(), lineno=199, col_offset=35))], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('test_badcmp_with_key', arguments([Name('self', Param(), lineno=201, col_offset=29)], None, None, []), [Assign([Name('data', Store(), lineno=203, col_offset=8)], Call(Attribute(Str('The quick Brown fox Jumped over The lazy Dog', lineno=203, col_offset=15), 'split', Load(), lineno=203, col_offset=15), [], [], None, None, lineno=203, col_offset=15), lineno=203, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'assertRaises', Load(), lineno=204, col_offset=8), [Name('TypeError', Load(), lineno=204, col_offset=26), Attribute(Name('data', Load(), lineno=204, col_offset=37), 'sort', Load(), lineno=204, col_offset=37), Str('bad', lineno=204, col_offset=48), Attribute(Name('str', Load(), lineno=204, col_offset=55), 'lower', Load(), lineno=204, col_offset=55)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('test_key_with_exception', arguments([Name('self', Param(), lineno=206, col_offset=32)], None, None, []), [Assign([Name('data', Store(), lineno=208, col_offset=8)], Call(Name('range', Load(), lineno=208, col_offset=15), [Num(-2, lineno=208, col_offset=22), Num(2, lineno=208, col_offset=24)], [], None, None, lineno=208, col_offset=15), lineno=208, col_offset=8), Assign([Name('dup', Store(), lineno=209, col_offset=8)], Subscript(Name('data', Load(), lineno=209, col_offset=14), Slice(None, None, None), Load(), lineno=209, col_offset=14), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertRaises', Load(), lineno=210, col_offset=8), [Name('ZeroDivisionError', Load(), lineno=210, col_offset=26), Attribute(Name('data', Load(), lineno=210, col_offset=45), 'sort', Load(), lineno=210, col_offset=45), Name('None', Load(), lineno=210, col_offset=56), Lambda(arguments([Name('x', Param(), lineno=210, col_offset=69)], None, None, []), BinOp(Num(1, lineno=210, col_offset=72), FloorDiv(), Name('x', Load(), lineno=210, col_offset=77), lineno=210, col_offset=72), lineno=210, col_offset=62)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Name('data', Load(), lineno=211, col_offset=25), Name('dup', Load(), lineno=211, col_offset=31)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('test_key_with_mutation', arguments([Name('self', Param(), lineno=213, col_offset=31)], None, None, []), [Assign([Name('data', Store(), lineno=214, col_offset=8)], Call(Name('range', Load(), lineno=214, col_offset=15), [Num(10, lineno=214, col_offset=21)], [], None, None, lineno=214, col_offset=15), lineno=214, col_offset=8), FunctionDef('k', arguments([Name('x', Param(), lineno=215, col_offset=14)], None, None, []), [Delete([Subscript(Name('data', Load(), lineno=216, col_offset=16), Slice(None, None, None), Del(), lineno=216, col_offset=16)], lineno=216, col_offset=12), Assign([Subscript(Name('data', Load(), lineno=217, col_offset=12), Slice(None, None, None), Store(), lineno=217, col_offset=12)], Call(Name('range', Load(), lineno=217, col_offset=22), [Num(20, lineno=217, col_offset=28)], [], None, None, lineno=217, col_offset=22), lineno=217, col_offset=12), Return(Name('x', Load(), lineno=218, col_offset=19), lineno=218, col_offset=12)], [], lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertRaises', Load(), lineno=219, col_offset=8), [Name('ValueError', Load(), lineno=219, col_offset=26), Attribute(Name('data', Load(), lineno=219, col_offset=38), 'sort', Load(), lineno=219, col_offset=38)], [keyword('key', Name('k', Load(), lineno=219, col_offset=53))], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8)], [], lineno=213, col_offset=4), FunctionDef('test_key_with_mutating_del', arguments([Name('self', Param(), lineno=221, col_offset=35)], None, None, []), [Assign([Name('data', Store(), lineno=222, col_offset=8)], Call(Name('range', Load(), lineno=222, col_offset=15), [Num(10, lineno=222, col_offset=21)], [], None, None, lineno=222, col_offset=15), lineno=222, col_offset=8), ClassDef('SortKiller', [Name('object', Load(), lineno=223, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=224, col_offset=25), Name('x', Param(), lineno=224, col_offset=31)], None, None, []), [Pass( lineno=225, col_offset=16)], [], lineno=224, col_offset=12), FunctionDef('__del__', arguments([Name('self', Param(), lineno=226, col_offset=24)], None, None, []), [Delete([Subscript(Name('data', Load(), lineno=227, col_offset=20), Slice(None, None, None), Del(), lineno=227, col_offset=20)], lineno=227, col_offset=16), Assign([Subscript(Name('data', Load(), lineno=228, col_offset=16), Slice(None, None, None), Store(), lineno=228, col_offset=16)], Call(Name('range', Load(), lineno=228, col_offset=26), [Num(20, lineno=228, col_offset=32)], [], None, None, lineno=228, col_offset=26), lineno=228, col_offset=16)], [], lineno=226, col_offset=12)], [], lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertRaises', Load(), lineno=229, col_offset=8), [Name('ValueError', Load(), lineno=229, col_offset=26), Attribute(Name('data', Load(), lineno=229, col_offset=38), 'sort', Load(), lineno=229, col_offset=38)], [keyword('key', Name('SortKiller', Load(), lineno=229, col_offset=53))], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('test_key_with_mutating_del_and_exception', arguments([Name('self', Param(), lineno=231, col_offset=49)], None, None, []), [Assign([Name('data', Store(), lineno=232, col_offset=8)], Call(Name('range', Load(), lineno=232, col_offset=15), [Num(10, lineno=232, col_offset=21)], [], None, None, lineno=232, col_offset=15), lineno=232, col_offset=8), ClassDef('SortKiller', [Name('object', Load(), lineno=234, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=235, col_offset=25), Name('x', Param(), lineno=235, col_offset=31)], None, None, []), [If(Compare(Name('x', Load(), lineno=236, col_offset=19), [Gt()], [Num(2, lineno=236, col_offset=23)], lineno=236, col_offset=19), [Raise(Name('RuntimeError', Load(), lineno=237, col_offset=26), None, None, lineno=237, col_offset=20)], [], lineno=236, col_offset=16)], [], lineno=235, col_offset=12), FunctionDef('__del__', arguments([Name('self', Param(), lineno=238, col_offset=24)], None, None, []), [Delete([Subscript(Name('data', Load(), lineno=239, col_offset=20), Slice(None, None, None), Del(), lineno=239, col_offset=20)], lineno=239, col_offset=16), Assign([Subscript(Name('data', Load(), lineno=240, col_offset=16), Slice(None, None, None), Store(), lineno=240, col_offset=16)], Call(Name('range', Load(), lineno=240, col_offset=26), [Num(20, lineno=240, col_offset=32)], [], None, None, lineno=240, col_offset=26), lineno=240, col_offset=16)], [], lineno=238, col_offset=12)], [], lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertRaises', Load(), lineno=241, col_offset=8), [Name('RuntimeError', Load(), lineno=241, col_offset=26), Attribute(Name('data', Load(), lineno=241, col_offset=40), 'sort', Load(), lineno=241, col_offset=40)], [keyword('key', Name('SortKiller', Load(), lineno=241, col_offset=55))], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('test_reverse', arguments([Name('self', Param(), lineno=251, col_offset=21)], None, None, []), [Assign([Name('data', Store(), lineno=252, col_offset=8)], Call(Name('range', Load(), lineno=252, col_offset=15), [Num(100, lineno=252, col_offset=21)], [], None, None, lineno=252, col_offset=15), lineno=252, col_offset=8), Expr(Call(Attribute(Name('random', Load(), lineno=253, col_offset=8), 'shuffle', Load(), lineno=253, col_offset=8), [Name('data', Load(), lineno=253, col_offset=23)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8), Expr(Call(Attribute(Name('data', Load(), lineno=254, col_offset=8), 'sort', Load(), lineno=254, col_offset=8), [], [keyword('reverse', Name('True', Load(), lineno=254, col_offset=26))], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [Name('data', Load(), lineno=255, col_offset=25), Call(Name('range', Load(), lineno=255, col_offset=31), [Num(99, lineno=255, col_offset=37), Num(-1, lineno=255, col_offset=41), Num(-1, lineno=255, col_offset=44)], [], None, None, lineno=255, col_offset=31)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=256, col_offset=8), 'assertRaises', Load(), lineno=256, col_offset=8), [Name('TypeError', Load(), lineno=256, col_offset=26), Attribute(Name('data', Load(), lineno=256, col_offset=37), 'sort', Load(), lineno=256, col_offset=37), Str('wrong type', lineno=256, col_offset=48)], [], None, None, lineno=256, col_offset=8), lineno=256, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('test_reverse_stability', arguments([Name('self', Param(), lineno=258, col_offset=31)], None, None, []), [Assign([Name('data', Store(), lineno=259, col_offset=8)], ListComp(Tuple([Call(Attribute(Name('random', Load(), lineno=259, col_offset=17), 'randrange', Load(), lineno=259, col_offset=17), [Num(100, lineno=259, col_offset=34)], [], None, None, lineno=259, col_offset=17), Name('i', Load(), lineno=259, col_offset=40)], Load(), lineno=259, col_offset=17), [comprehension(Name('i', Store(), lineno=259, col_offset=47), Call(Name('xrange', Load(), lineno=259, col_offset=52), [Num(200, lineno=259, col_offset=59)], [], None, None, lineno=259, col_offset=52), [])], lineno=259, col_offset=16), lineno=259, col_offset=8), Assign([Name('copy1', Store(), lineno=260, col_offset=8)], Subscript(Name('data', Load(), lineno=260, col_offset=16), Slice(None, None, None), Load(), lineno=260, col_offset=16), lineno=260, col_offset=8), Assign([Name('copy2', Store(), lineno=261, col_offset=8)], Subscript(Name('data', Load(), lineno=261, col_offset=16), Slice(None, None, None), Load(), lineno=261, col_offset=16), lineno=261, col_offset=8), Expr(Call(Attribute(Name('data', Load(), lineno=262, col_offset=8), 'sort', Load(), lineno=262, col_offset=8), [], [keyword('cmp', Lambda(arguments([Name('x', Param(), lineno=262, col_offset=29), Name('y', Param(), lineno=262, col_offset=31)], None, None, []), Call(Name('cmp', Load(), lineno=262, col_offset=34), [Subscript(Name('x', Load(), lineno=262, col_offset=38), Index(Num(0, lineno=262, col_offset=40)), Load(), lineno=262, col_offset=38), Subscript(Name('y', Load(), lineno=262, col_offset=43), Index(Num(0, lineno=262, col_offset=45)), Load(), lineno=262, col_offset=43)], [], None, None, lineno=262, col_offset=34), lineno=262, col_offset=22)), keyword('reverse', Name('True', Load(), lineno=262, col_offset=58))], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Expr(Call(Attribute(Name('copy1', Load(), lineno=263, col_offset=8), 'sort', Load(), lineno=263, col_offset=8), [], [keyword('cmp', Lambda(arguments([Name('x', Param(), lineno=263, col_offset=30), Name('y', Param(), lineno=263, col_offset=32)], None, None, []), Call(Name('cmp', Load(), lineno=263, col_offset=35), [Subscript(Name('y', Load(), lineno=263, col_offset=39), Index(Num(0, lineno=263, col_offset=41)), Load(), lineno=263, col_offset=39), Subscript(Name('x', Load(), lineno=263, col_offset=44), Index(Num(0, lineno=263, col_offset=46)), Load(), lineno=263, col_offset=44)], [], None, None, lineno=263, col_offset=35), lineno=263, col_offset=23))], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=8), 'assertEqual', Load(), lineno=264, col_offset=8), [Name('data', Load(), lineno=264, col_offset=25), Name('copy1', Load(), lineno=264, col_offset=31)], [], None, None, lineno=264, col_offset=8), lineno=264, col_offset=8), Expr(Call(Attribute(Name('copy2', Load(), lineno=265, col_offset=8), 'sort', Load(), lineno=265, col_offset=8), [], [keyword('key', Lambda(arguments([Name('x', Param(), lineno=265, col_offset=30)], None, None, []), Subscript(Name('x', Load(), lineno=265, col_offset=33), Index(Num(0, lineno=265, col_offset=35)), Load(), lineno=265, col_offset=33), lineno=265, col_offset=23)), keyword('reverse', Name('True', Load(), lineno=265, col_offset=47))], None, None, lineno=265, col_offset=8), lineno=265, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=8), 'assertEqual', Load(), lineno=266, col_offset=8), [Name('data', Load(), lineno=266, col_offset=25), Name('copy2', Load(), lineno=266, col_offset=31)], [], None, None, lineno=266, col_offset=8), lineno=266, col_offset=8)], [], lineno=258, col_offset=4)], [], lineno=172, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=270, col_offset=14)], None, None, [Name('None', Load(), lineno=270, col_offset=22)]), [Assign([Name('test_classes', Store(), lineno=271, col_offset=4)], Tuple([Name('TestBase', Load(), lineno=272, col_offset=8), Name('TestDecorateSortUndecorate', Load(), lineno=273, col_offset=8), Name('TestBugs', Load(), lineno=274, col_offset=8)], Load(), lineno=272, col_offset=8), lineno=271, col_offset=4), With(Call(Attribute(Name('test_support', Load(), lineno=277, col_offset=9), 'check_py3k_warnings', Load(), lineno=277, col_offset=9), [Tuple([Str('the cmp argument is not supported', lineno=278, col_offset=13), Name('DeprecationWarning', Load(), lineno=278, col_offset=50)], Load(), lineno=278, col_offset=13)], [], None, None, lineno=277, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=279, col_offset=8), 'run_unittest', Load(), lineno=279, col_offset=8), [], [], Name('test_classes', Load(), lineno=279, col_offset=35), None, lineno=279, col_offset=8), lineno=279, col_offset=8), If(BoolOp(And(), [Name('verbose', Load(), lineno=282, col_offset=11), Call(Name('hasattr', Load(), lineno=282, col_offset=23), [Name('sys', Load(), lineno=282, col_offset=31), Str('gettotalrefcount', lineno=282, col_offset=36)], [], None, None, lineno=282, col_offset=23)], lineno=282, col_offset=11), [Import([alias('gc', None)], lineno=283, col_offset=12), Assign([Name('counts', Store(), lineno=284, col_offset=12)], BinOp(List([Name('None', Load(), lineno=284, col_offset=22)], Load(), lineno=284, col_offset=21), Mult(), Num(5, lineno=284, col_offset=30), lineno=284, col_offset=21), lineno=284, col_offset=12), For(Name('i', Store(), lineno=285, col_offset=16), Call(Name('xrange', Load(), lineno=285, col_offset=21), [Call(Name('len', Load(), lineno=285, col_offset=28), [Name('counts', Load(), lineno=285, col_offset=32)], [], None, None, lineno=285, col_offset=28)], [], None, None, lineno=285, col_offset=21), [Expr(Call(Attribute(Name('test_support', Load(), lineno=286, col_offset=16), 'run_unittest', Load(), lineno=286, col_offset=16), [], [], Name('test_classes', Load(), lineno=286, col_offset=43), None, lineno=286, col_offset=16), lineno=286, col_offset=16), Expr(Call(Attribute(Name('gc', Load(), lineno=287, col_offset=16), 'collect', Load(), lineno=287, col_offset=16), [], [], None, None, lineno=287, col_offset=16), lineno=287, col_offset=16), Assign([Subscript(Name('counts', Load(), lineno=288, col_offset=16), Index(Name('i', Load(), lineno=288, col_offset=23)), Store(), lineno=288, col_offset=16)], Call(Attribute(Name('sys', Load(), lineno=288, col_offset=28), 'gettotalrefcount', Load(), lineno=288, col_offset=28), [], [], None, None, lineno=288, col_offset=28), lineno=288, col_offset=16)], [], lineno=285, col_offset=12), Print(None, [Name('counts', Load(), lineno=289, col_offset=18)], True, lineno=289, col_offset=12)], [], lineno=282, col_offset=8)], lineno=277, col_offset=9)], [], lineno=270, col_offset=0), If(Compare(Name('__name__', Load(), lineno=291, col_offset=3), [Eq()], [Str('__main__', lineno=291, col_offset=15)], lineno=291, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=292, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=292, col_offset=22))], None, None, lineno=292, col_offset=4), lineno=292, col_offset=4)], [], lineno=291, col_offset=0)])
