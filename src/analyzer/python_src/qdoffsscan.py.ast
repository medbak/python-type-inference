Module([Import([alias('sys', None)], lineno=2, col_offset=0), ImportFrom('bgenlocations', [alias('TOOLBOXDIR', None), alias('BGENDIR', None)], 0, lineno=3, col_offset=0), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=4, col_offset=0), 'path', Load(), lineno=4, col_offset=0), 'append', Load(), lineno=4, col_offset=0), [Name('BGENDIR', Load(), lineno=4, col_offset=16)], [], None, None, lineno=4, col_offset=0), lineno=4, col_offset=0), ImportFrom('scantools', [alias('Scanner', None)], 0, lineno=6, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=9, col_offset=4)], Str('QDOffscreen.h', lineno=9, col_offset=12), lineno=9, col_offset=4), Assign([Name('output', Store(), lineno=10, col_offset=4)], Str('qdoffsgen.py', lineno=10, col_offset=13), lineno=10, col_offset=4), Assign([Name('defsoutput', Store(), lineno=11, col_offset=4)], BinOp(Name('TOOLBOXDIR', Load(), lineno=11, col_offset=17), Add(), Str('QDOffscreen.py', lineno=11, col_offset=30), lineno=11, col_offset=17), lineno=11, col_offset=4), Assign([Name('scanner', Store(), lineno=12, col_offset=4)], Call(Name('MyScanner', Load(), lineno=12, col_offset=14), [Name('input', Load(), lineno=12, col_offset=24), Name('output', Load(), lineno=12, col_offset=31), Name('defsoutput', Load(), lineno=12, col_offset=39)], [], None, None, lineno=12, col_offset=14), lineno=12, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=13, col_offset=4), 'scan', Load(), lineno=13, col_offset=4), [], [], None, None, lineno=13, col_offset=4), lineno=13, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=14, col_offset=4), 'close', Load(), lineno=14, col_offset=4), [], [], None, None, lineno=14, col_offset=4), lineno=14, col_offset=4), Print(None, [Str('=== Testing definitions output code ===', lineno=15, col_offset=10)], True, lineno=15, col_offset=4), Expr(Call(Name('execfile', Load(), lineno=16, col_offset=4), [Name('defsoutput', Load(), lineno=16, col_offset=13), Dict([], [], lineno=16, col_offset=25), Dict([], [], lineno=16, col_offset=29)], [], None, None, lineno=16, col_offset=4), lineno=16, col_offset=4), Print(None, [Str('=== Done scanning and generating, now importing the generated code... ===', lineno=17, col_offset=10)], True, lineno=17, col_offset=4), Import([alias('qdoffssupport', None)], lineno=18, col_offset=4), Print(None, [Str("=== Done.  It's up to you to compile it now! ===", lineno=19, col_offset=10)], True, lineno=19, col_offset=4)], [], lineno=8, col_offset=0), ClassDef('MyScanner', [Name('Scanner', Load(), lineno=21, col_offset=16)], [FunctionDef('destination', arguments([Name('self', Param(), lineno=23, col_offset=20), Name('type', Param(), lineno=23, col_offset=26), Name('name', Param(), lineno=23, col_offset=32), Name('arglist', Param(), lineno=23, col_offset=38)], None, None, []), [Assign([Name('classname', Store(), lineno=24, col_offset=8)], Str('Function', lineno=24, col_offset=20), lineno=24, col_offset=8), Assign([Name('listname', Store(), lineno=25, col_offset=8)], Str('functions', lineno=25, col_offset=19), lineno=25, col_offset=8), If(Name('arglist', Load(), lineno=26, col_offset=11), [Assign([Tuple([Name('t', Store(), lineno=27, col_offset=12), Name('n', Store(), lineno=27, col_offset=15), Name('m', Store(), lineno=27, col_offset=18)], Store(), lineno=27, col_offset=12)], Subscript(Name('arglist', Load(), lineno=27, col_offset=22), Index(Num(0, lineno=27, col_offset=30)), Load(), lineno=27, col_offset=22), lineno=27, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=28, col_offset=15), [Eq()], [Str('GWorldPtr', lineno=28, col_offset=20)], lineno=28, col_offset=15), Compare(Name('m', Load(), lineno=28, col_offset=36), [In()], [Tuple([Str('InMode', lineno=28, col_offset=42), Str('InOutMode', lineno=28, col_offset=52)], Load(), lineno=28, col_offset=42)], lineno=28, col_offset=36)], lineno=28, col_offset=15), [Assign([Name('classname', Store(), lineno=29, col_offset=16)], Str('Method', lineno=29, col_offset=28), lineno=29, col_offset=16), Assign([Name('listname', Store(), lineno=30, col_offset=16)], Str('methods', lineno=30, col_offset=27), lineno=30, col_offset=16)], [], lineno=28, col_offset=12)], [], lineno=26, col_offset=8), Return(Tuple([Name('classname', Load(), lineno=31, col_offset=15), Name('listname', Load(), lineno=31, col_offset=26)], Load(), lineno=31, col_offset=15), lineno=31, col_offset=8)], [], lineno=23, col_offset=4), FunctionDef('writeinitialdefs', arguments([Name('self', Param(), lineno=33, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'defsfile', Load(), lineno=34, col_offset=8), 'write', Load(), lineno=34, col_offset=8), [Str('def FOUR_CHAR_CODE(x): return x\n', lineno=34, col_offset=28)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=36, col_offset=27)], None, None, []), [Return(List([Str('DisposeGWorld', lineno=38, col_offset=16), Str('NewGWorldFromHBITMAP', lineno=39, col_offset=16), Str('GetGDeviceAttributes', lineno=40, col_offset=16)], Load(), lineno=37, col_offset=15), lineno=37, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=43, col_offset=27)], None, None, []), [Return(List([Str('void_ptr', lineno=45, col_offset=16), Str('Ptr', lineno=46, col_offset=16)], Load(), lineno=44, col_offset=15), lineno=44, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=49, col_offset=31)], None, None, []), [Return(List([Tuple([List([Tuple([Str('GDHandle', lineno=60, col_offset=19), Str('*', lineno=60, col_offset=31), Str('InMode', lineno=60, col_offset=36)], Load(), lineno=60, col_offset=19)], Load(), lineno=60, col_offset=17), List([Tuple([Str('OptGDHandle', lineno=61, col_offset=19), Str('*', lineno=61, col_offset=34), Str('InMode', lineno=61, col_offset=39)], Load(), lineno=61, col_offset=19)], Load(), lineno=61, col_offset=17)], Load(), lineno=60, col_offset=17)], Load(), lineno=50, col_offset=15), lineno=50, col_offset=8)], [], lineno=49, col_offset=4)], [], lineno=21, col_offset=0), If(Compare(Name('__name__', Load(), lineno=64, col_offset=3), [Eq()], [Str('__main__', lineno=64, col_offset=15)], lineno=64, col_offset=3), [Expr(Call(Name('main', Load(), lineno=65, col_offset=4), [], [], None, None, lineno=65, col_offset=4), lineno=65, col_offset=4)], [], lineno=64, col_offset=0)])
