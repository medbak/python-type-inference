Module([Expr(Str('\nA number of function that enhance IDLE on MacOSX when it used as a normal\nGUI application (as opposed to an X11 application).\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Import([alias('sys', None)], lineno=5, col_offset=0), Import([alias('Tkinter', None)], lineno=6, col_offset=0), Assign([Name('_appbundle', Store(), lineno=9, col_offset=0)], Name('None', Load(), lineno=9, col_offset=13), lineno=9, col_offset=0), FunctionDef('runningAsOSXApp', arguments([], None, None, []), [Expr(Str('\n    Returns True if Python is running from within an app on OSX.\n    If so, assume that Python was built with Aqua Tcl/Tk rather than\n    X11 Tcl/Tk.\n    ', lineno=16, col_offset=-1), lineno=16, col_offset=-1), Global(['_appbundle'], lineno=17, col_offset=4), If(Compare(Name('_appbundle', Load(), lineno=18, col_offset=7), [Is()], [Name('None', Load(), lineno=18, col_offset=21)], lineno=18, col_offset=7), [Assign([Name('_appbundle', Store(), lineno=19, col_offset=8)], BoolOp(And(), [Compare(Attribute(Name('sys', Load(), lineno=19, col_offset=22), 'platform', Load(), lineno=19, col_offset=22), [Eq()], [Str('darwin', lineno=19, col_offset=38)], lineno=19, col_offset=22), Compare(Str('.app', lineno=19, col_offset=51), [In()], [Attribute(Name('sys', Load(), lineno=19, col_offset=61), 'executable', Load(), lineno=19, col_offset=61)], lineno=19, col_offset=51)], lineno=19, col_offset=22), lineno=19, col_offset=8)], [], lineno=18, col_offset=4), Return(Name('_appbundle', Load(), lineno=20, col_offset=11), lineno=20, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('addOpenEventSupport', arguments([Name('root', Param(), lineno=22, col_offset=24), Name('flist', Param(), lineno=22, col_offset=30)], None, None, []), [Expr(Str('\n    This ensures that the application will respont to open AppleEvents, which\n    makes is feaseable to use IDLE as the default application for python files.\n    ', lineno=26, col_offset=-1), lineno=26, col_offset=-1), FunctionDef('doOpenFile', arguments([], 'args', None, []), [For(Name('fn', Store(), lineno=28, col_offset=12), Name('args', Load(), lineno=28, col_offset=18), [Expr(Call(Attribute(Name('flist', Load(), lineno=29, col_offset=12), 'open', Load(), lineno=29, col_offset=12), [Name('fn', Load(), lineno=29, col_offset=23)], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=12)], [], lineno=28, col_offset=8)], [], lineno=27, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=34, col_offset=4), 'createcommand', Load(), lineno=34, col_offset=4), [Str('::tk::mac::OpenDocument', lineno=34, col_offset=23), Name('doOpenFile', Load(), lineno=34, col_offset=50)], [], None, None, lineno=34, col_offset=4), lineno=34, col_offset=4)], [], lineno=22, col_offset=0), FunctionDef('hideTkConsole', arguments([Name('root', Param(), lineno=36, col_offset=18)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('root', Load(), lineno=38, col_offset=8), 'tk', Load(), lineno=38, col_offset=8), 'call', Load(), lineno=38, col_offset=8), [Str('console', lineno=38, col_offset=21), Str('hide', lineno=38, col_offset=32)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8)], [ExceptHandler(Attribute(Name('Tkinter', Load(), lineno=39, col_offset=11), 'TclError', Load(), lineno=39, col_offset=11), None, [Pass( lineno=41, col_offset=8)], lineno=39, col_offset=4)], [], lineno=37, col_offset=4)], [], lineno=36, col_offset=0), FunctionDef('overrideRootMenu', arguments([Name('root', Param(), lineno=43, col_offset=21), Name('flist', Param(), lineno=43, col_offset=27)], None, None, []), [Expr(Str("\n    Replace the Tk root menu by something that's more appropriate for\n    IDLE.\n    ", lineno=47, col_offset=-1), lineno=47, col_offset=-1), ImportFrom('Tkinter', [alias('Menu', None), alias('Text', None), alias('Text', None)], 0, lineno=59, col_offset=4), ImportFrom('idlelib.EditorWindow', [alias('prepstr', None), alias('get_accelerator', None)], 0, lineno=60, col_offset=4), ImportFrom('idlelib', [alias('Bindings', None)], 0, lineno=61, col_offset=4), ImportFrom('idlelib', [alias('WindowList', None)], 0, lineno=62, col_offset=4), ImportFrom('idlelib.MultiCall', [alias('MultiCallCreator', None)], 0, lineno=63, col_offset=4), Assign([Name('menubar', Store(), lineno=65, col_offset=4)], Call(Name('Menu', Load(), lineno=65, col_offset=14), [Name('root', Load(), lineno=65, col_offset=19)], [], None, None, lineno=65, col_offset=14), lineno=65, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=66, col_offset=4), 'configure', Load(), lineno=66, col_offset=4), [], [keyword('menu', Name('menubar', Load(), lineno=66, col_offset=24))], None, None, lineno=66, col_offset=4), lineno=66, col_offset=4), Assign([Name('menudict', Store(), lineno=67, col_offset=4)], Dict([], [], lineno=67, col_offset=15), lineno=67, col_offset=4), Assign([Subscript(Name('menudict', Load(), lineno=69, col_offset=4), Index(Str('windows', lineno=69, col_offset=13)), Store(), lineno=69, col_offset=4), Name('menu', Store(), lineno=69, col_offset=26)], Call(Name('Menu', Load(), lineno=69, col_offset=33), [Name('menubar', Load(), lineno=69, col_offset=38)], [keyword('name', Str('windows', lineno=69, col_offset=52))], None, None, lineno=69, col_offset=33), lineno=69, col_offset=4), Expr(Call(Attribute(Name('menubar', Load(), lineno=70, col_offset=4), 'add_cascade', Load(), lineno=70, col_offset=4), [], [keyword('label', Str('Window', lineno=70, col_offset=30)), keyword('menu', Name('menu', Load(), lineno=70, col_offset=45)), keyword('underline', Num(0, lineno=70, col_offset=61))], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4), FunctionDef('postwindowsmenu', arguments([Name('menu', Param(), lineno=72, col_offset=24)], None, None, [Name('menu', Load(), lineno=72, col_offset=29)]), [Assign([Name('end', Store(), lineno=73, col_offset=8)], Call(Attribute(Name('menu', Load(), lineno=73, col_offset=14), 'index', Load(), lineno=73, col_offset=14), [Str('end', lineno=73, col_offset=25)], [], None, None, lineno=73, col_offset=14), lineno=73, col_offset=8), If(Compare(Name('end', Load(), lineno=74, col_offset=11), [Is()], [Name('None', Load(), lineno=74, col_offset=18)], lineno=74, col_offset=11), [Assign([Name('end', Store(), lineno=75, col_offset=12)], Num(-1, lineno=75, col_offset=19), lineno=75, col_offset=12)], [], lineno=74, col_offset=8), If(Compare(Name('end', Load(), lineno=77, col_offset=11), [Gt()], [Num(0, lineno=77, col_offset=17)], lineno=77, col_offset=11), [Expr(Call(Attribute(Name('menu', Load(), lineno=78, col_offset=12), 'delete', Load(), lineno=78, col_offset=12), [Num(0, lineno=78, col_offset=24), Name('end', Load(), lineno=78, col_offset=27)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [], lineno=77, col_offset=8), Expr(Call(Attribute(Name('WindowList', Load(), lineno=79, col_offset=8), 'add_windows_to_menu', Load(), lineno=79, col_offset=8), [Name('menu', Load(), lineno=79, col_offset=39)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8)], [], lineno=72, col_offset=4), Expr(Call(Attribute(Name('WindowList', Load(), lineno=80, col_offset=4), 'register_callback', Load(), lineno=80, col_offset=4), [Name('postwindowsmenu', Load(), lineno=80, col_offset=33)], [], None, None, lineno=80, col_offset=4), lineno=80, col_offset=4), Assign([Subscript(Name('menudict', Load(), lineno=82, col_offset=4), Index(Str('application', lineno=82, col_offset=13)), Store(), lineno=82, col_offset=4), Name('menu', Store(), lineno=82, col_offset=30)], Call(Name('Menu', Load(), lineno=82, col_offset=37), [Name('menubar', Load(), lineno=82, col_offset=42)], [keyword('name', Str('apple', lineno=82, col_offset=56))], None, None, lineno=82, col_offset=37), lineno=82, col_offset=4), Expr(Call(Attribute(Name('menubar', Load(), lineno=83, col_offset=4), 'add_cascade', Load(), lineno=83, col_offset=4), [], [keyword('label', Str('IDLE', lineno=83, col_offset=30)), keyword('menu', Name('menu', Load(), lineno=83, col_offset=43))], None, None, lineno=83, col_offset=4), lineno=83, col_offset=4), FunctionDef('about_dialog', arguments([Name('event', Param(), lineno=85, col_offset=21)], None, None, [Name('None', Load(), lineno=85, col_offset=27)]), [ImportFrom('idlelib', [alias('aboutDialog', None)], 0, lineno=86, col_offset=8), Expr(Call(Attribute(Name('aboutDialog', Load(), lineno=87, col_offset=8), 'AboutDialog', Load(), lineno=87, col_offset=8), [Name('root', Load(), lineno=87, col_offset=32), Str('About IDLE', lineno=87, col_offset=38)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8)], [], lineno=85, col_offset=4), FunctionDef('config_dialog', arguments([Name('event', Param(), lineno=89, col_offset=22)], None, None, [Name('None', Load(), lineno=89, col_offset=28)]), [ImportFrom('idlelib', [alias('configDialog', None)], 0, lineno=90, col_offset=8), Assign([Attribute(Name('root', Load(), lineno=91, col_offset=8), 'instance_dict', Store(), lineno=91, col_offset=8)], Attribute(Name('flist', Load(), lineno=91, col_offset=29), 'inversedict', Load(), lineno=91, col_offset=29), lineno=91, col_offset=8), Expr(Call(Attribute(Name('configDialog', Load(), lineno=92, col_offset=8), 'ConfigDialog', Load(), lineno=92, col_offset=8), [Name('root', Load(), lineno=92, col_offset=34), Str('Settings', lineno=92, col_offset=40)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=89, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=95, col_offset=4), 'bind', Load(), lineno=95, col_offset=4), [Str('<<about-idle>>', lineno=95, col_offset=14), Name('about_dialog', Load(), lineno=95, col_offset=32)], [], None, None, lineno=95, col_offset=4), lineno=95, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=96, col_offset=4), 'bind', Load(), lineno=96, col_offset=4), [Str('<<open-config-dialog>>', lineno=96, col_offset=14), Name('config_dialog', Load(), lineno=96, col_offset=40)], [], None, None, lineno=96, col_offset=4), lineno=96, col_offset=4), If(Name('flist', Load(), lineno=97, col_offset=7), [Expr(Call(Attribute(Name('root', Load(), lineno=98, col_offset=8), 'bind', Load(), lineno=98, col_offset=8), [Str('<<close-all-windows>>', lineno=98, col_offset=18), Attribute(Name('flist', Load(), lineno=98, col_offset=43), 'close_all_callback', Load(), lineno=98, col_offset=43)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=97, col_offset=4), Assign([Name('tkversion', Store(), lineno=102, col_offset=4)], Call(Attribute(Attribute(Name('root', Load(), lineno=102, col_offset=16), 'tk', Load(), lineno=102, col_offset=16), 'eval', Load(), lineno=102, col_offset=16), [Str('info patchlevel', lineno=102, col_offset=29)], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=4), If(Compare(Call(Name('tuple', Load(), lineno=105, col_offset=7), [Call(Name('map', Load(), lineno=105, col_offset=13), [Name('int', Load(), lineno=105, col_offset=17), Call(Attribute(Name('tkversion', Load(), lineno=105, col_offset=22), 'split', Load(), lineno=105, col_offset=22), [Str('.', lineno=105, col_offset=38)], [], None, None, lineno=105, col_offset=22)], [], None, None, lineno=105, col_offset=13)], [], None, None, lineno=105, col_offset=7), [GtE()], [Tuple([Num(8, lineno=105, col_offset=49), Num(4, lineno=105, col_offset=52), Num(14, lineno=105, col_offset=55)], Load(), lineno=105, col_offset=49)], lineno=105, col_offset=7), [Assign([Subscript(Attribute(Name('Bindings', Load(), lineno=106, col_offset=8), 'menudefs', Load(), lineno=106, col_offset=8), Index(Num(0, lineno=106, col_offset=26)), Store(), lineno=106, col_offset=8)], Tuple([Str('application', lineno=106, col_offset=33), List([Tuple([Str('About IDLE', lineno=107, col_offset=17), Str('<<about-idle>>', lineno=107, col_offset=31)], Load(), lineno=107, col_offset=17), Name('None', Load(), lineno=108, col_offset=16)], Load(), lineno=106, col_offset=48)], Load(), lineno=106, col_offset=33), lineno=106, col_offset=8), Expr(Call(Attribute(Name('root', Load(), lineno=110, col_offset=8), 'createcommand', Load(), lineno=110, col_offset=8), [Str('::tk::mac::ShowPreferences', lineno=110, col_offset=27), Name('config_dialog', Load(), lineno=110, col_offset=57)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8)], [For(Tuple([Name('mname', Store(), lineno=112, col_offset=12), Name('entrylist', Store(), lineno=112, col_offset=19)], Store(), lineno=112, col_offset=12), Attribute(Name('Bindings', Load(), lineno=112, col_offset=32), 'menudefs', Load(), lineno=112, col_offset=32), [Assign([Name('menu', Store(), lineno=113, col_offset=12)], Call(Attribute(Name('menudict', Load(), lineno=113, col_offset=19), 'get', Load(), lineno=113, col_offset=19), [Name('mname', Load(), lineno=113, col_offset=32)], [], None, None, lineno=113, col_offset=19), lineno=113, col_offset=12), If(UnaryOp(Not(), Name('menu', Load(), lineno=114, col_offset=19), lineno=114, col_offset=15), [Continue( lineno=115, col_offset=16)], [For(Name('entry', Store(), lineno=117, col_offset=20), Name('entrylist', Load(), lineno=117, col_offset=29), [If(UnaryOp(Not(), Name('entry', Load(), lineno=118, col_offset=27), lineno=118, col_offset=23), [Expr(Call(Attribute(Name('menu', Load(), lineno=119, col_offset=24), 'add_separator', Load(), lineno=119, col_offset=24), [], [], None, None, lineno=119, col_offset=24), lineno=119, col_offset=24)], [Assign([Tuple([Name('label', Store(), lineno=121, col_offset=24), Name('eventname', Store(), lineno=121, col_offset=31)], Store(), lineno=121, col_offset=24)], Name('entry', Load(), lineno=121, col_offset=43), lineno=121, col_offset=24), Assign([Tuple([Name('underline', Store(), lineno=122, col_offset=24), Name('label', Store(), lineno=122, col_offset=35)], Store(), lineno=122, col_offset=24)], Call(Name('prepstr', Load(), lineno=122, col_offset=43), [Name('label', Load(), lineno=122, col_offset=51)], [], None, None, lineno=122, col_offset=43), lineno=122, col_offset=24), Assign([Name('accelerator', Store(), lineno=123, col_offset=24)], Call(Name('get_accelerator', Load(), lineno=123, col_offset=38), [Attribute(Name('Bindings', Load(), lineno=123, col_offset=54), 'default_keydefs', Load(), lineno=123, col_offset=54), Name('eventname', Load(), lineno=124, col_offset=24)], [], None, None, lineno=123, col_offset=38), lineno=123, col_offset=24), FunctionDef('command', arguments([Name('text', Param(), lineno=125, col_offset=36), Name('eventname', Param(), lineno=125, col_offset=47)], None, None, [Name('root', Load(), lineno=125, col_offset=41), Name('eventname', Load(), lineno=125, col_offset=57)]), [Expr(Call(Attribute(Name('text', Load(), lineno=126, col_offset=28), 'event_generate', Load(), lineno=126, col_offset=28), [Name('eventname', Load(), lineno=126, col_offset=48)], [], None, None, lineno=126, col_offset=28), lineno=126, col_offset=28)], [], lineno=125, col_offset=24), Expr(Call(Attribute(Name('menu', Load(), lineno=127, col_offset=24), 'add_command', Load(), lineno=127, col_offset=24), [], [keyword('label', Name('label', Load(), lineno=127, col_offset=47)), keyword('underline', Name('underline', Load(), lineno=127, col_offset=64)), keyword('command', Name('command', Load(), lineno=128, col_offset=32)), keyword('accelerator', Name('accelerator', Load(), lineno=128, col_offset=53))], None, None, lineno=127, col_offset=24), lineno=127, col_offset=24)], lineno=118, col_offset=20)], [], lineno=117, col_offset=16)], lineno=114, col_offset=12)], [], lineno=112, col_offset=8)], lineno=105, col_offset=4)], [], lineno=43, col_offset=0), FunctionDef('setupApp', arguments([Name('root', Param(), lineno=130, col_offset=13), Name('flist', Param(), lineno=130, col_offset=19)], None, None, []), [Expr(Str('\n    Perform setup for the OSX application bundle.\n    ', lineno=133, col_offset=-1), lineno=133, col_offset=-1), If(UnaryOp(Not(), Call(Name('runningAsOSXApp', Load(), lineno=134, col_offset=11), [], [], None, None, lineno=134, col_offset=11), lineno=134, col_offset=7), [Return(None, lineno=134, col_offset=30)], [], lineno=134, col_offset=4), Expr(Call(Name('hideTkConsole', Load(), lineno=136, col_offset=4), [Name('root', Load(), lineno=136, col_offset=18)], [], None, None, lineno=136, col_offset=4), lineno=136, col_offset=4), Expr(Call(Name('overrideRootMenu', Load(), lineno=137, col_offset=4), [Name('root', Load(), lineno=137, col_offset=21), Name('flist', Load(), lineno=137, col_offset=27)], [], None, None, lineno=137, col_offset=4), lineno=137, col_offset=4), Expr(Call(Name('addOpenEventSupport', Load(), lineno=138, col_offset=4), [Name('root', Load(), lineno=138, col_offset=24), Name('flist', Load(), lineno=138, col_offset=30)], [], None, None, lineno=138, col_offset=4), lineno=138, col_offset=4)], [], lineno=130, col_offset=0)])
