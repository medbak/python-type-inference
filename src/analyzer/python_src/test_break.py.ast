Module([Import([alias('gc', None)], lineno=1, col_offset=0), Import([alias('os', None)], lineno=2, col_offset=0), Import([alias('sys', None)], lineno=3, col_offset=0), Import([alias('signal', None)], lineno=4, col_offset=0), Import([alias('weakref', None)], lineno=5, col_offset=0), ImportFrom('cStringIO', [alias('StringIO', None)], 0, lineno=7, col_offset=0), Import([alias('unittest', None)], lineno=10, col_offset=0), ClassDef('TestBreak', [Attribute(Name('unittest', Load(), lineno=17, col_offset=16), 'TestCase', Load(), lineno=17, col_offset=16)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=19, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=20, col_offset=8), '_default_handler', Store(), lineno=20, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=20, col_offset=32), 'getsignal', Load(), lineno=20, col_offset=32), [Attribute(Name('signal', Load(), lineno=20, col_offset=49), 'SIGINT', Load(), lineno=20, col_offset=49)], [], None, None, lineno=20, col_offset=32), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=22, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('signal', Load(), lineno=23, col_offset=8), 'signal', Load(), lineno=23, col_offset=8), [Attribute(Name('signal', Load(), lineno=23, col_offset=22), 'SIGINT', Load(), lineno=23, col_offset=22), Attribute(Name('self', Load(), lineno=23, col_offset=37), '_default_handler', Load(), lineno=23, col_offset=37)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Assign([Attribute(Attribute(Name('unittest', Load(), lineno=24, col_offset=8), 'signals', Load(), lineno=24, col_offset=8), '_results', Store(), lineno=24, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=24, col_offset=36), 'WeakKeyDictionary', Load(), lineno=24, col_offset=36), [], [], None, None, lineno=24, col_offset=36), lineno=24, col_offset=8), Assign([Attribute(Attribute(Name('unittest', Load(), lineno=25, col_offset=8), 'signals', Load(), lineno=25, col_offset=8), '_interrupt_handler', Store(), lineno=25, col_offset=8)], Name('None', Load(), lineno=25, col_offset=46), lineno=25, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('testInstallHandler', arguments([Name('self', Param(), lineno=28, col_offset=27)], None, None, []), [Assign([Name('default_handler', Store(), lineno=29, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=29, col_offset=26), 'getsignal', Load(), lineno=29, col_offset=26), [Attribute(Name('signal', Load(), lineno=29, col_offset=43), 'SIGINT', Load(), lineno=29, col_offset=43)], [], None, None, lineno=29, col_offset=26), lineno=29, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=30, col_offset=8), 'installHandler', Load(), lineno=30, col_offset=8), [], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertNotEqual', Load(), lineno=31, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=31, col_offset=28), 'getsignal', Load(), lineno=31, col_offset=28), [Attribute(Name('signal', Load(), lineno=31, col_offset=45), 'SIGINT', Load(), lineno=31, col_offset=45)], [], None, None, lineno=31, col_offset=28), Name('default_handler', Load(), lineno=31, col_offset=61)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), TryExcept([Assign([Name('pid', Store(), lineno=34, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=34, col_offset=18), 'getpid', Load(), lineno=34, col_offset=18), [], [], None, None, lineno=34, col_offset=18), lineno=34, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=35, col_offset=12), 'kill', Load(), lineno=35, col_offset=12), [Name('pid', Load(), lineno=35, col_offset=20), Attribute(Name('signal', Load(), lineno=35, col_offset=25), 'SIGINT', Load(), lineno=35, col_offset=25)], [], None, None, lineno=35, col_offset=12), lineno=35, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=36, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=12), 'fail', Load(), lineno=37, col_offset=12), [Str('KeyboardInterrupt not handled', lineno=37, col_offset=22)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=12)], lineno=36, col_offset=8)], [], lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertTrue', Load(), lineno=39, col_offset=8), [Attribute(Attribute(Attribute(Name('unittest', Load(), lineno=39, col_offset=24), 'signals', Load(), lineno=39, col_offset=24), '_interrupt_handler', Load(), lineno=39, col_offset=24), 'called', Load(), lineno=39, col_offset=24)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('testRegisterResult', arguments([Name('self', Param(), lineno=41, col_offset=27)], None, None, []), [Assign([Name('result', Store(), lineno=42, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=42, col_offset=17), 'TestResult', Load(), lineno=42, col_offset=17), [], [], None, None, lineno=42, col_offset=17), lineno=42, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=43, col_offset=8), 'registerResult', Load(), lineno=43, col_offset=8), [Name('result', Load(), lineno=43, col_offset=32)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), For(Name('ref', Store(), lineno=45, col_offset=12), Attribute(Attribute(Name('unittest', Load(), lineno=45, col_offset=19), 'signals', Load(), lineno=45, col_offset=19), '_results', Load(), lineno=45, col_offset=19), [If(Compare(Name('ref', Load(), lineno=46, col_offset=15), [Is()], [Name('result', Load(), lineno=46, col_offset=22)], lineno=46, col_offset=15), [Break( lineno=47, col_offset=16)], [If(Compare(Name('ref', Load(), lineno=48, col_offset=17), [IsNot()], [Name('result', Load(), lineno=48, col_offset=28)], lineno=48, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=16), 'fail', Load(), lineno=49, col_offset=16), [Str('odd object in result set', lineno=49, col_offset=26)], [], None, None, lineno=49, col_offset=16), lineno=49, col_offset=16)], [], lineno=48, col_offset=17)], lineno=46, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=12), 'fail', Load(), lineno=51, col_offset=12), [Str('result not found', lineno=51, col_offset=22)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12)], lineno=45, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('testInterruptCaught', arguments([Name('self', Param(), lineno=54, col_offset=28)], None, None, []), [Assign([Name('default_handler', Store(), lineno=55, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=55, col_offset=26), 'getsignal', Load(), lineno=55, col_offset=26), [Attribute(Name('signal', Load(), lineno=55, col_offset=43), 'SIGINT', Load(), lineno=55, col_offset=43)], [], None, None, lineno=55, col_offset=26), lineno=55, col_offset=8), Assign([Name('result', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=57, col_offset=17), 'TestResult', Load(), lineno=57, col_offset=17), [], [], None, None, lineno=57, col_offset=17), lineno=57, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=58, col_offset=8), 'installHandler', Load(), lineno=58, col_offset=8), [], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=59, col_offset=8), 'registerResult', Load(), lineno=59, col_offset=8), [Name('result', Load(), lineno=59, col_offset=32)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertNotEqual', Load(), lineno=61, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=61, col_offset=28), 'getsignal', Load(), lineno=61, col_offset=28), [Attribute(Name('signal', Load(), lineno=61, col_offset=45), 'SIGINT', Load(), lineno=61, col_offset=45)], [], None, None, lineno=61, col_offset=28), Name('default_handler', Load(), lineno=61, col_offset=61)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), FunctionDef('test', arguments([Name('result', Param(), lineno=63, col_offset=17)], None, None, []), [Assign([Name('pid', Store(), lineno=64, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=64, col_offset=18), 'getpid', Load(), lineno=64, col_offset=18), [], [], None, None, lineno=64, col_offset=18), lineno=64, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=65, col_offset=12), 'kill', Load(), lineno=65, col_offset=12), [Name('pid', Load(), lineno=65, col_offset=20), Attribute(Name('signal', Load(), lineno=65, col_offset=25), 'SIGINT', Load(), lineno=65, col_offset=25)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12), Assign([Attribute(Name('result', Load(), lineno=66, col_offset=12), 'breakCaught', Store(), lineno=66, col_offset=12)], Name('True', Load(), lineno=66, col_offset=33), lineno=66, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=67, col_offset=12), 'assertTrue', Load(), lineno=67, col_offset=12), [Attribute(Name('result', Load(), lineno=67, col_offset=28), 'shouldStop', Load(), lineno=67, col_offset=28)], [], None, None, lineno=67, col_offset=12), lineno=67, col_offset=12)], [], lineno=63, col_offset=8), TryExcept([Expr(Call(Name('test', Load(), lineno=70, col_offset=12), [Name('result', Load(), lineno=70, col_offset=17)], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=71, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=12), 'fail', Load(), lineno=72, col_offset=12), [Str('KeyboardInterrupt not handled', lineno=72, col_offset=22)], [], None, None, lineno=72, col_offset=12), lineno=72, col_offset=12)], lineno=71, col_offset=8)], [], lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertTrue', Load(), lineno=73, col_offset=8), [Attribute(Name('result', Load(), lineno=73, col_offset=24), 'breakCaught', Load(), lineno=73, col_offset=24)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('testSecondInterrupt', arguments([Name('self', Param(), lineno=76, col_offset=28)], None, None, []), [Assign([Name('result', Store(), lineno=77, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=77, col_offset=17), 'TestResult', Load(), lineno=77, col_offset=17), [], [], None, None, lineno=77, col_offset=17), lineno=77, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=78, col_offset=8), 'installHandler', Load(), lineno=78, col_offset=8), [], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=79, col_offset=8), 'registerResult', Load(), lineno=79, col_offset=8), [Name('result', Load(), lineno=79, col_offset=32)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), FunctionDef('test', arguments([Name('result', Param(), lineno=81, col_offset=17)], None, None, []), [Assign([Name('pid', Store(), lineno=82, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=82, col_offset=18), 'getpid', Load(), lineno=82, col_offset=18), [], [], None, None, lineno=82, col_offset=18), lineno=82, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=83, col_offset=12), 'kill', Load(), lineno=83, col_offset=12), [Name('pid', Load(), lineno=83, col_offset=20), Attribute(Name('signal', Load(), lineno=83, col_offset=25), 'SIGINT', Load(), lineno=83, col_offset=25)], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12), Assign([Attribute(Name('result', Load(), lineno=84, col_offset=12), 'breakCaught', Store(), lineno=84, col_offset=12)], Name('True', Load(), lineno=84, col_offset=33), lineno=84, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=12), 'assertTrue', Load(), lineno=85, col_offset=12), [Attribute(Name('result', Load(), lineno=85, col_offset=28), 'shouldStop', Load(), lineno=85, col_offset=28)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=86, col_offset=12), 'kill', Load(), lineno=86, col_offset=12), [Name('pid', Load(), lineno=86, col_offset=20), Attribute(Name('signal', Load(), lineno=86, col_offset=25), 'SIGINT', Load(), lineno=86, col_offset=25)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=12), 'fail', Load(), lineno=87, col_offset=12), [Str('Second KeyboardInterrupt not raised', lineno=87, col_offset=22)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12)], [], lineno=81, col_offset=8), TryExcept([Expr(Call(Name('test', Load(), lineno=90, col_offset=12), [Name('result', Load(), lineno=90, col_offset=17)], [], None, None, lineno=90, col_offset=12), lineno=90, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=91, col_offset=15), None, [Pass( lineno=92, col_offset=12)], lineno=91, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=12), 'fail', Load(), lineno=94, col_offset=12), [Str('Second KeyboardInterrupt not raised', lineno=94, col_offset=22)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=12)], lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertTrue', Load(), lineno=95, col_offset=8), [Attribute(Name('result', Load(), lineno=95, col_offset=24), 'breakCaught', Load(), lineno=95, col_offset=24)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('testTwoResults', arguments([Name('self', Param(), lineno=98, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('unittest', Load(), lineno=99, col_offset=8), 'installHandler', Load(), lineno=99, col_offset=8), [], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Assign([Name('result', Store(), lineno=101, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=101, col_offset=17), 'TestResult', Load(), lineno=101, col_offset=17), [], [], None, None, lineno=101, col_offset=17), lineno=101, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=102, col_offset=8), 'registerResult', Load(), lineno=102, col_offset=8), [Name('result', Load(), lineno=102, col_offset=32)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Assign([Name('new_handler', Store(), lineno=103, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=103, col_offset=22), 'getsignal', Load(), lineno=103, col_offset=22), [Attribute(Name('signal', Load(), lineno=103, col_offset=39), 'SIGINT', Load(), lineno=103, col_offset=39)], [], None, None, lineno=103, col_offset=22), lineno=103, col_offset=8), Assign([Name('result2', Store(), lineno=105, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=105, col_offset=18), 'TestResult', Load(), lineno=105, col_offset=18), [], [], None, None, lineno=105, col_offset=18), lineno=105, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=106, col_offset=8), 'registerResult', Load(), lineno=106, col_offset=8), [Name('result2', Load(), lineno=106, col_offset=32)], [], None, None, lineno=106, col_offset=8), lineno=106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=107, col_offset=25), 'getsignal', Load(), lineno=107, col_offset=25), [Attribute(Name('signal', Load(), lineno=107, col_offset=42), 'SIGINT', Load(), lineno=107, col_offset=42)], [], None, None, lineno=107, col_offset=25), Name('new_handler', Load(), lineno=107, col_offset=58)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Assign([Name('result3', Store(), lineno=109, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=109, col_offset=18), 'TestResult', Load(), lineno=109, col_offset=18), [], [], None, None, lineno=109, col_offset=18), lineno=109, col_offset=8), FunctionDef('test', arguments([Name('result', Param(), lineno=111, col_offset=17)], None, None, []), [Assign([Name('pid', Store(), lineno=112, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=112, col_offset=18), 'getpid', Load(), lineno=112, col_offset=18), [], [], None, None, lineno=112, col_offset=18), lineno=112, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=113, col_offset=12), 'kill', Load(), lineno=113, col_offset=12), [Name('pid', Load(), lineno=113, col_offset=20), Attribute(Name('signal', Load(), lineno=113, col_offset=25), 'SIGINT', Load(), lineno=113, col_offset=25)], [], None, None, lineno=113, col_offset=12), lineno=113, col_offset=12)], [], lineno=111, col_offset=8), TryExcept([Expr(Call(Name('test', Load(), lineno=116, col_offset=12), [Name('result', Load(), lineno=116, col_offset=17)], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=117, col_offset=15), None, [Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=12), 'fail', Load(), lineno=118, col_offset=12), [Str('KeyboardInterrupt not handled', lineno=118, col_offset=22)], [], None, None, lineno=118, col_offset=12), lineno=118, col_offset=12)], lineno=117, col_offset=8)], [], lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'assertTrue', Load(), lineno=120, col_offset=8), [Attribute(Name('result', Load(), lineno=120, col_offset=24), 'shouldStop', Load(), lineno=120, col_offset=24)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=121, col_offset=8), 'assertTrue', Load(), lineno=121, col_offset=8), [Attribute(Name('result2', Load(), lineno=121, col_offset=24), 'shouldStop', Load(), lineno=121, col_offset=24)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=122, col_offset=8), 'assertFalse', Load(), lineno=122, col_offset=8), [Attribute(Name('result3', Load(), lineno=122, col_offset=25), 'shouldStop', Load(), lineno=122, col_offset=25)], [], None, None, lineno=122, col_offset=8), lineno=122, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('testHandlerReplacedButCalled', arguments([Name('self', Param(), lineno=125, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('unittest', Load(), lineno=129, col_offset=8), 'installHandler', Load(), lineno=129, col_offset=8), [], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Assign([Name('handler', Store(), lineno=131, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=131, col_offset=18), 'getsignal', Load(), lineno=131, col_offset=18), [Attribute(Name('signal', Load(), lineno=131, col_offset=35), 'SIGINT', Load(), lineno=131, col_offset=35)], [], None, None, lineno=131, col_offset=18), lineno=131, col_offset=8), FunctionDef('new_handler', arguments([Name('frame', Param(), lineno=132, col_offset=24), Name('signum', Param(), lineno=132, col_offset=31)], None, None, []), [Expr(Call(Name('handler', Load(), lineno=133, col_offset=12), [Name('frame', Load(), lineno=133, col_offset=20), Name('signum', Load(), lineno=133, col_offset=27)], [], None, None, lineno=133, col_offset=12), lineno=133, col_offset=12)], [], lineno=132, col_offset=8), Expr(Call(Attribute(Name('signal', Load(), lineno=134, col_offset=8), 'signal', Load(), lineno=134, col_offset=8), [Attribute(Name('signal', Load(), lineno=134, col_offset=22), 'SIGINT', Load(), lineno=134, col_offset=22), Name('new_handler', Load(), lineno=134, col_offset=37)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), TryExcept([Assign([Name('pid', Store(), lineno=137, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=137, col_offset=18), 'getpid', Load(), lineno=137, col_offset=18), [], [], None, None, lineno=137, col_offset=18), lineno=137, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=138, col_offset=12), 'kill', Load(), lineno=138, col_offset=12), [Name('pid', Load(), lineno=138, col_offset=20), Attribute(Name('signal', Load(), lineno=138, col_offset=25), 'SIGINT', Load(), lineno=138, col_offset=25)], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=139, col_offset=15), None, [Pass( lineno=140, col_offset=12)], lineno=139, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=12), 'fail', Load(), lineno=142, col_offset=12), [Str("replaced but delegated handler doesn't raise interrupt", lineno=142, col_offset=22)], [], None, None, lineno=142, col_offset=12), lineno=142, col_offset=12)], lineno=136, col_offset=8)], [], lineno=125, col_offset=4), FunctionDef('testRunner', arguments([Name('self', Param(), lineno=144, col_offset=19)], None, None, []), [Assign([Name('runner', Store(), lineno=147, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=147, col_offset=17), 'TextTestRunner', Load(), lineno=147, col_offset=17), [], [keyword('stream', Call(Name('StringIO', Load(), lineno=147, col_offset=48), [], [], None, None, lineno=147, col_offset=48))], None, None, lineno=147, col_offset=17), lineno=147, col_offset=8), Assign([Name('result', Store(), lineno=149, col_offset=8)], Call(Attribute(Name('runner', Load(), lineno=149, col_offset=17), 'run', Load(), lineno=149, col_offset=17), [Call(Attribute(Name('unittest', Load(), lineno=149, col_offset=28), 'TestSuite', Load(), lineno=149, col_offset=28), [], [], None, None, lineno=149, col_offset=28)], [], None, None, lineno=149, col_offset=17), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertIn', Load(), lineno=150, col_offset=8), [Name('result', Load(), lineno=150, col_offset=22), Attribute(Attribute(Name('unittest', Load(), lineno=150, col_offset=30), 'signals', Load(), lineno=150, col_offset=30), '_results', Load(), lineno=150, col_offset=30)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('testWeakReferences', arguments([Name('self', Param(), lineno=152, col_offset=27)], None, None, []), [Assign([Name('result', Store(), lineno=154, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=154, col_offset=17), 'TestResult', Load(), lineno=154, col_offset=17), [], [], None, None, lineno=154, col_offset=17), lineno=154, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=155, col_offset=8), 'registerResult', Load(), lineno=155, col_offset=8), [Name('result', Load(), lineno=155, col_offset=32)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8), Assign([Name('ref', Store(), lineno=157, col_offset=8)], Call(Attribute(Name('weakref', Load(), lineno=157, col_offset=14), 'ref', Load(), lineno=157, col_offset=14), [Name('result', Load(), lineno=157, col_offset=26)], [], None, None, lineno=157, col_offset=14), lineno=157, col_offset=8), Delete([Name('result', Del(), lineno=158, col_offset=12)], lineno=158, col_offset=8), Expr(Call(Attribute(Name('gc', Load(), lineno=161, col_offset=8), 'collect', Load(), lineno=161, col_offset=8), [], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Attribute(Name('gc', Load(), lineno=161, col_offset=21), 'collect', Load(), lineno=161, col_offset=21), [], [], None, None, lineno=161, col_offset=21), lineno=161, col_offset=21), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=8), 'assertIsNone', Load(), lineno=162, col_offset=8), [Call(Name('ref', Load(), lineno=162, col_offset=26), [], [], None, None, lineno=162, col_offset=26)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('testRemoveResult', arguments([Name('self', Param(), lineno=165, col_offset=25)], None, None, []), [Assign([Name('result', Store(), lineno=166, col_offset=8)], Call(Attribute(Name('unittest', Load(), lineno=166, col_offset=17), 'TestResult', Load(), lineno=166, col_offset=17), [], [], None, None, lineno=166, col_offset=17), lineno=166, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=167, col_offset=8), 'registerResult', Load(), lineno=167, col_offset=8), [Name('result', Load(), lineno=167, col_offset=32)], [], None, None, lineno=167, col_offset=8), lineno=167, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=169, col_offset=8), 'installHandler', Load(), lineno=169, col_offset=8), [], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'assertTrue', Load(), lineno=170, col_offset=8), [Call(Attribute(Name('unittest', Load(), lineno=170, col_offset=24), 'removeResult', Load(), lineno=170, col_offset=24), [Name('result', Load(), lineno=170, col_offset=46)], [], None, None, lineno=170, col_offset=24)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'assertFalse', Load(), lineno=173, col_offset=8), [Call(Attribute(Name('unittest', Load(), lineno=173, col_offset=25), 'removeResult', Load(), lineno=173, col_offset=25), [Call(Attribute(Name('unittest', Load(), lineno=173, col_offset=47), 'TestResult', Load(), lineno=173, col_offset=47), [], [], None, None, lineno=173, col_offset=47)], [], None, None, lineno=173, col_offset=25)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), TryExcept([Assign([Name('pid', Store(), lineno=176, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=176, col_offset=18), 'getpid', Load(), lineno=176, col_offset=18), [], [], None, None, lineno=176, col_offset=18), lineno=176, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=177, col_offset=12), 'kill', Load(), lineno=177, col_offset=12), [Name('pid', Load(), lineno=177, col_offset=20), Attribute(Name('signal', Load(), lineno=177, col_offset=25), 'SIGINT', Load(), lineno=177, col_offset=25)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=178, col_offset=15), None, [Pass( lineno=179, col_offset=12)], lineno=178, col_offset=8)], [], lineno=175, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=8), 'assertFalse', Load(), lineno=181, col_offset=8), [Attribute(Name('result', Load(), lineno=181, col_offset=25), 'shouldStop', Load(), lineno=181, col_offset=25)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8)], [], lineno=165, col_offset=4), FunctionDef('testMainInstallsHandler', arguments([Name('self', Param(), lineno=183, col_offset=32)], None, None, []), [Assign([Name('failfast', Store(), lineno=184, col_offset=8)], Call(Name('object', Load(), lineno=184, col_offset=19), [], [], None, None, lineno=184, col_offset=19), lineno=184, col_offset=8), Assign([Name('test', Store(), lineno=185, col_offset=8)], Call(Name('object', Load(), lineno=185, col_offset=15), [], [], None, None, lineno=185, col_offset=15), lineno=185, col_offset=8), Assign([Name('verbosity', Store(), lineno=186, col_offset=8)], Call(Name('object', Load(), lineno=186, col_offset=20), [], [], None, None, lineno=186, col_offset=20), lineno=186, col_offset=8), Assign([Name('result', Store(), lineno=187, col_offset=8)], Call(Name('object', Load(), lineno=187, col_offset=17), [], [], None, None, lineno=187, col_offset=17), lineno=187, col_offset=8), Assign([Name('default_handler', Store(), lineno=188, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=188, col_offset=26), 'getsignal', Load(), lineno=188, col_offset=26), [Attribute(Name('signal', Load(), lineno=188, col_offset=43), 'SIGINT', Load(), lineno=188, col_offset=43)], [], None, None, lineno=188, col_offset=26), lineno=188, col_offset=8), ClassDef('FakeRunner', [Name('object', Load(), lineno=190, col_offset=25)], [Assign([Name('initArgs', Store(), lineno=191, col_offset=12)], List([], Load(), lineno=191, col_offset=23), lineno=191, col_offset=12), Assign([Name('runArgs', Store(), lineno=192, col_offset=12)], List([], Load(), lineno=192, col_offset=22), lineno=192, col_offset=12), FunctionDef('__init__', arguments([Name('self', Param(), lineno=193, col_offset=25)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=194, col_offset=16), 'initArgs', Load(), lineno=194, col_offset=16), 'append', Load(), lineno=194, col_offset=16), [Tuple([Name('args', Load(), lineno=194, col_offset=38), Name('kwargs', Load(), lineno=194, col_offset=44)], Load(), lineno=194, col_offset=38)], [], None, None, lineno=194, col_offset=16), lineno=194, col_offset=16)], [], lineno=193, col_offset=12), FunctionDef('run', arguments([Name('self', Param(), lineno=195, col_offset=20), Name('test', Param(), lineno=195, col_offset=26)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=196, col_offset=16), 'runArgs', Load(), lineno=196, col_offset=16), 'append', Load(), lineno=196, col_offset=16), [Name('test', Load(), lineno=196, col_offset=36)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=16), Return(Name('result', Load(), lineno=197, col_offset=23), lineno=197, col_offset=16)], [], lineno=195, col_offset=12)], [], lineno=190, col_offset=8), ClassDef('Program', [Attribute(Name('unittest', Load(), lineno=199, col_offset=22), 'TestProgram', Load(), lineno=199, col_offset=22)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=200, col_offset=25), Name('catchbreak', Param(), lineno=200, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=201, col_offset=16), 'exit', Store(), lineno=201, col_offset=16)], Name('False', Load(), lineno=201, col_offset=28), lineno=201, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=202, col_offset=16), 'verbosity', Store(), lineno=202, col_offset=16)], Name('verbosity', Load(), lineno=202, col_offset=33), lineno=202, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=16), 'failfast', Store(), lineno=203, col_offset=16)], Name('failfast', Load(), lineno=203, col_offset=32), lineno=203, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=204, col_offset=16), 'catchbreak', Store(), lineno=204, col_offset=16)], Name('catchbreak', Load(), lineno=204, col_offset=34), lineno=204, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=205, col_offset=16), 'testRunner', Store(), lineno=205, col_offset=16)], Name('FakeRunner', Load(), lineno=205, col_offset=34), lineno=205, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=206, col_offset=16), 'test', Store(), lineno=206, col_offset=16)], Name('test', Load(), lineno=206, col_offset=28), lineno=206, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=207, col_offset=16), 'result', Store(), lineno=207, col_offset=16)], Name('None', Load(), lineno=207, col_offset=30), lineno=207, col_offset=16)], [], lineno=200, col_offset=12)], [], lineno=199, col_offset=8), Assign([Name('p', Store(), lineno=209, col_offset=8)], Call(Name('Program', Load(), lineno=209, col_offset=12), [Name('False', Load(), lineno=209, col_offset=20)], [], None, None, lineno=209, col_offset=12), lineno=209, col_offset=8), Expr(Call(Attribute(Name('p', Load(), lineno=210, col_offset=8), 'runTests', Load(), lineno=210, col_offset=8), [], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertEqual', Load(), lineno=212, col_offset=8), [Attribute(Name('FakeRunner', Load(), lineno=212, col_offset=25), 'initArgs', Load(), lineno=212, col_offset=25), List([Tuple([Tuple([], Load(), lineno=212, col_offset=48), Dict([Str('buffer', lineno=212, col_offset=53), Str('verbosity', lineno=213, col_offset=53), Str('failfast', lineno=214, col_offset=53)], [Name('None', Load(), lineno=212, col_offset=63), Name('verbosity', Load(), lineno=213, col_offset=66), Name('failfast', Load(), lineno=214, col_offset=65)], lineno=212, col_offset=52)], Load(), lineno=212, col_offset=48)], Load(), lineno=212, col_offset=46)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertEqual', Load(), lineno=215, col_offset=8), [Attribute(Name('FakeRunner', Load(), lineno=215, col_offset=25), 'runArgs', Load(), lineno=215, col_offset=25), List([Name('test', Load(), lineno=215, col_offset=46)], Load(), lineno=215, col_offset=45)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertEqual', Load(), lineno=216, col_offset=8), [Attribute(Name('p', Load(), lineno=216, col_offset=25), 'result', Load(), lineno=216, col_offset=25), Name('result', Load(), lineno=216, col_offset=35)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'assertEqual', Load(), lineno=218, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=218, col_offset=25), 'getsignal', Load(), lineno=218, col_offset=25), [Attribute(Name('signal', Load(), lineno=218, col_offset=42), 'SIGINT', Load(), lineno=218, col_offset=42)], [], None, None, lineno=218, col_offset=25), Name('default_handler', Load(), lineno=218, col_offset=58)], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Assign([Attribute(Name('FakeRunner', Load(), lineno=220, col_offset=8), 'initArgs', Store(), lineno=220, col_offset=8)], List([], Load(), lineno=220, col_offset=30), lineno=220, col_offset=8), Assign([Attribute(Name('FakeRunner', Load(), lineno=221, col_offset=8), 'runArgs', Store(), lineno=221, col_offset=8)], List([], Load(), lineno=221, col_offset=29), lineno=221, col_offset=8), Assign([Name('p', Store(), lineno=222, col_offset=8)], Call(Name('Program', Load(), lineno=222, col_offset=12), [Name('True', Load(), lineno=222, col_offset=20)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=8), Expr(Call(Attribute(Name('p', Load(), lineno=223, col_offset=8), 'runTests', Load(), lineno=223, col_offset=8), [], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertEqual', Load(), lineno=225, col_offset=8), [Attribute(Name('FakeRunner', Load(), lineno=225, col_offset=25), 'initArgs', Load(), lineno=225, col_offset=25), List([Tuple([Tuple([], Load(), lineno=225, col_offset=48), Dict([Str('buffer', lineno=225, col_offset=53), Str('verbosity', lineno=226, col_offset=53), Str('failfast', lineno=227, col_offset=53)], [Name('None', Load(), lineno=225, col_offset=63), Name('verbosity', Load(), lineno=226, col_offset=66), Name('failfast', Load(), lineno=227, col_offset=65)], lineno=225, col_offset=52)], Load(), lineno=225, col_offset=48)], Load(), lineno=225, col_offset=46)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertEqual', Load(), lineno=228, col_offset=8), [Attribute(Name('FakeRunner', Load(), lineno=228, col_offset=25), 'runArgs', Load(), lineno=228, col_offset=25), List([Name('test', Load(), lineno=228, col_offset=46)], Load(), lineno=228, col_offset=45)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Attribute(Name('p', Load(), lineno=229, col_offset=25), 'result', Load(), lineno=229, col_offset=25), Name('result', Load(), lineno=229, col_offset=35)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertNotEqual', Load(), lineno=231, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=231, col_offset=28), 'getsignal', Load(), lineno=231, col_offset=28), [Attribute(Name('signal', Load(), lineno=231, col_offset=45), 'SIGINT', Load(), lineno=231, col_offset=45)], [], None, None, lineno=231, col_offset=28), Name('default_handler', Load(), lineno=231, col_offset=61)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('testRemoveHandler', arguments([Name('self', Param(), lineno=233, col_offset=26)], None, None, []), [Assign([Name('default_handler', Store(), lineno=234, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=234, col_offset=26), 'getsignal', Load(), lineno=234, col_offset=26), [Attribute(Name('signal', Load(), lineno=234, col_offset=43), 'SIGINT', Load(), lineno=234, col_offset=43)], [], None, None, lineno=234, col_offset=26), lineno=234, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=235, col_offset=8), 'installHandler', Load(), lineno=235, col_offset=8), [], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=236, col_offset=8), 'removeHandler', Load(), lineno=236, col_offset=8), [], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertEqual', Load(), lineno=237, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=237, col_offset=25), 'getsignal', Load(), lineno=237, col_offset=25), [Attribute(Name('signal', Load(), lineno=237, col_offset=42), 'SIGINT', Load(), lineno=237, col_offset=42)], [], None, None, lineno=237, col_offset=25), Name('default_handler', Load(), lineno=237, col_offset=58)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=240, col_offset=8), 'removeHandler', Load(), lineno=240, col_offset=8), [], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertEqual', Load(), lineno=241, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=241, col_offset=25), 'getsignal', Load(), lineno=241, col_offset=25), [Attribute(Name('signal', Load(), lineno=241, col_offset=42), 'SIGINT', Load(), lineno=241, col_offset=42)], [], None, None, lineno=241, col_offset=25), Name('default_handler', Load(), lineno=241, col_offset=58)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=233, col_offset=4), FunctionDef('testRemoveHandlerAsDecorator', arguments([Name('self', Param(), lineno=243, col_offset=37)], None, None, []), [Assign([Name('default_handler', Store(), lineno=244, col_offset=8)], Call(Attribute(Name('signal', Load(), lineno=244, col_offset=26), 'getsignal', Load(), lineno=244, col_offset=26), [Attribute(Name('signal', Load(), lineno=244, col_offset=43), 'SIGINT', Load(), lineno=244, col_offset=43)], [], None, None, lineno=244, col_offset=26), lineno=244, col_offset=8), Expr(Call(Attribute(Name('unittest', Load(), lineno=245, col_offset=8), 'installHandler', Load(), lineno=245, col_offset=8), [], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), FunctionDef('test', arguments([], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=12), 'assertEqual', Load(), lineno=249, col_offset=12), [Call(Attribute(Name('signal', Load(), lineno=249, col_offset=29), 'getsignal', Load(), lineno=249, col_offset=29), [Attribute(Name('signal', Load(), lineno=249, col_offset=46), 'SIGINT', Load(), lineno=249, col_offset=46)], [], None, None, lineno=249, col_offset=29), Name('default_handler', Load(), lineno=249, col_offset=62)], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12)], [Attribute(Name('unittest', Load(), lineno=247, col_offset=9), 'removeHandler', Load(), lineno=247, col_offset=9)], lineno=247, col_offset=8), Expr(Call(Name('test', Load(), lineno=251, col_offset=8), [], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertNotEqual', Load(), lineno=252, col_offset=8), [Call(Attribute(Name('signal', Load(), lineno=252, col_offset=28), 'getsignal', Load(), lineno=252, col_offset=28), [Attribute(Name('signal', Load(), lineno=252, col_offset=45), 'SIGINT', Load(), lineno=252, col_offset=45)], [], None, None, lineno=252, col_offset=28), Name('default_handler', Load(), lineno=252, col_offset=61)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8)], [], lineno=243, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=13, col_offset=1), 'skipUnless', Load(), lineno=13, col_offset=1), [Call(Name('hasattr', Load(), lineno=13, col_offset=21), [Name('os', Load(), lineno=13, col_offset=29), Str('kill', lineno=13, col_offset=33)], [], None, None, lineno=13, col_offset=21), Str('Test requires os.kill', lineno=13, col_offset=42)], [], None, None, lineno=13, col_offset=1), Call(Attribute(Name('unittest', Load(), lineno=14, col_offset=1), 'skipIf', Load(), lineno=14, col_offset=1), [Compare(Attribute(Name('sys', Load(), lineno=14, col_offset=17), 'platform', Load(), lineno=14, col_offset=17), [Eq()], [Str('win32', lineno=14, col_offset=32)], lineno=14, col_offset=17), Str('Test cannot run on Windows', lineno=14, col_offset=41)], [], None, None, lineno=14, col_offset=1), Call(Attribute(Name('unittest', Load(), lineno=15, col_offset=1), 'skipIf', Load(), lineno=15, col_offset=1), [Compare(Attribute(Name('sys', Load(), lineno=15, col_offset=17), 'platform', Load(), lineno=15, col_offset=17), [Eq()], [Str('freebsd6', lineno=15, col_offset=33)], lineno=15, col_offset=17), Str('Test kills regrtest on freebsd6 if threads have been used', lineno=15, col_offset=45)], [], None, None, lineno=15, col_offset=1)], lineno=13, col_offset=0)])
