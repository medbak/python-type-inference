Module([Import([alias('unittest', None)], lineno=1, col_offset=0), Import([alias('pickle', None)], lineno=2, col_offset=0), Import([alias('cPickle', None)], lineno=3, col_offset=0), Import([alias('StringIO', None)], lineno=4, col_offset=0), Import([alias('cStringIO', None)], lineno=5, col_offset=0), Import([alias('pickletools', None)], lineno=6, col_offset=0), Import([alias('copy_reg', None)], lineno=7, col_offset=0), ImportFrom('test.test_support', [alias('TestFailed', None), alias('have_unicode', None), alias('TESTFN', None)], 0, lineno=9, col_offset=0), Assert(Compare(Attribute(Name('pickle', Load(), lineno=14, col_offset=7), 'HIGHEST_PROTOCOL', Load(), lineno=14, col_offset=7), [Eq(), Eq()], [Attribute(Name('cPickle', Load(), lineno=14, col_offset=34), 'HIGHEST_PROTOCOL', Load(), lineno=14, col_offset=34), Num(2, lineno=14, col_offset=62)], lineno=14, col_offset=7), None, lineno=14, col_offset=0), Assign([Name('protocols', Store(), lineno=15, col_offset=0)], Call(Name('range', Load(), lineno=15, col_offset=12), [BinOp(Attribute(Name('pickle', Load(), lineno=15, col_offset=18), 'HIGHEST_PROTOCOL', Load(), lineno=15, col_offset=18), Add(), Num(1, lineno=15, col_offset=44), lineno=15, col_offset=18)], [], None, None, lineno=15, col_offset=12), lineno=15, col_offset=0), FunctionDef('run_with_locale', arguments([Name('catstr', Param(), lineno=21, col_offset=20)], 'locales', None, []), [FunctionDef('decorator', arguments([Name('func', Param(), lineno=22, col_offset=18)], None, None, []), [FunctionDef('inner', arguments([], 'args', 'kwds', []), [TryExcept([Import([alias('locale', None)], lineno=25, col_offset=16), Assign([Name('category', Store(), lineno=26, col_offset=16)], Call(Name('getattr', Load(), lineno=26, col_offset=27), [Name('locale', Load(), lineno=26, col_offset=35), Name('catstr', Load(), lineno=26, col_offset=43)], [], None, None, lineno=26, col_offset=27), lineno=26, col_offset=16), Assign([Name('orig_locale', Store(), lineno=27, col_offset=16)], Call(Attribute(Name('locale', Load(), lineno=27, col_offset=30), 'setlocale', Load(), lineno=27, col_offset=30), [Name('category', Load(), lineno=27, col_offset=47)], [], None, None, lineno=27, col_offset=30), lineno=27, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=28, col_offset=19), None, [Raise(None, None, None, lineno=30, col_offset=16)], lineno=28, col_offset=12), ExceptHandler(None, None, [Assign([Name('locale', Store(), lineno=33, col_offset=16), Name('orig_locale', Store(), lineno=33, col_offset=25)], Name('None', Load(), lineno=33, col_offset=39), lineno=33, col_offset=16)], lineno=31, col_offset=12)], [For(Name('loc', Store(), lineno=35, col_offset=20), Name('locales', Load(), lineno=35, col_offset=27), [TryExcept([Expr(Call(Attribute(Name('locale', Load(), lineno=37, col_offset=24), 'setlocale', Load(), lineno=37, col_offset=24), [Name('category', Load(), lineno=37, col_offset=41), Name('loc', Load(), lineno=37, col_offset=51)], [], None, None, lineno=37, col_offset=24), lineno=37, col_offset=24), Break( lineno=38, col_offset=24)], [ExceptHandler(None, None, [Pass( lineno=40, col_offset=24)], lineno=39, col_offset=20)], [], lineno=36, col_offset=20)], [], lineno=35, col_offset=16)], lineno=24, col_offset=12), TryFinally([Return(Call(Name('func', Load(), lineno=44, col_offset=23), [], [], Name('args', Load(), lineno=44, col_offset=29), Name('kwds', Load(), lineno=44, col_offset=37), lineno=44, col_offset=23), lineno=44, col_offset=16)], [If(BoolOp(And(), [Name('locale', Load(), lineno=46, col_offset=19), Name('orig_locale', Load(), lineno=46, col_offset=30)], lineno=46, col_offset=19), [Expr(Call(Attribute(Name('locale', Load(), lineno=47, col_offset=20), 'setlocale', Load(), lineno=47, col_offset=20), [Name('category', Load(), lineno=47, col_offset=37), Name('orig_locale', Load(), lineno=47, col_offset=47)], [], None, None, lineno=47, col_offset=20), lineno=47, col_offset=20)], [], lineno=46, col_offset=16)], lineno=43, col_offset=12)], [], lineno=23, col_offset=8), Assign([Attribute(Name('inner', Load(), lineno=48, col_offset=8), 'func_name', Store(), lineno=48, col_offset=8)], Attribute(Name('func', Load(), lineno=48, col_offset=26), 'func_name', Load(), lineno=48, col_offset=26), lineno=48, col_offset=8), Assign([Attribute(Name('inner', Load(), lineno=49, col_offset=8), '__doc__', Store(), lineno=49, col_offset=8)], Attribute(Name('func', Load(), lineno=49, col_offset=24), '__doc__', Load(), lineno=49, col_offset=24), lineno=49, col_offset=8), Return(Name('inner', Load(), lineno=50, col_offset=15), lineno=50, col_offset=8)], [], lineno=22, col_offset=4), Return(Name('decorator', Load(), lineno=51, col_offset=11), lineno=51, col_offset=4)], [], lineno=21, col_offset=0), FunctionDef('opcode_in_pickle', arguments([Name('code', Param(), lineno=55, col_offset=21), Name('pickle', Param(), lineno=55, col_offset=27)], None, None, []), [For(Tuple([Name('op', Store(), lineno=56, col_offset=8), Name('dummy', Store(), lineno=56, col_offset=12), Name('dummy', Store(), lineno=56, col_offset=19)], Store(), lineno=56, col_offset=8), Call(Attribute(Name('pickletools', Load(), lineno=56, col_offset=28), 'genops', Load(), lineno=56, col_offset=28), [Name('pickle', Load(), lineno=56, col_offset=47)], [], None, None, lineno=56, col_offset=28), [If(Compare(Attribute(Name('op', Load(), lineno=57, col_offset=11), 'code', Load(), lineno=57, col_offset=11), [Eq()], [Name('code', Load(), lineno=57, col_offset=22)], lineno=57, col_offset=11), [Return(Name('True', Load(), lineno=58, col_offset=19), lineno=58, col_offset=12)], [], lineno=57, col_offset=8)], [], lineno=56, col_offset=4), Return(Name('False', Load(), lineno=59, col_offset=11), lineno=59, col_offset=4)], [], lineno=55, col_offset=0), FunctionDef('count_opcode', arguments([Name('code', Param(), lineno=62, col_offset=17), Name('pickle', Param(), lineno=62, col_offset=23)], None, None, []), [Assign([Name('n', Store(), lineno=63, col_offset=4)], Num(0, lineno=63, col_offset=8), lineno=63, col_offset=4), For(Tuple([Name('op', Store(), lineno=64, col_offset=8), Name('dummy', Store(), lineno=64, col_offset=12), Name('dummy', Store(), lineno=64, col_offset=19)], Store(), lineno=64, col_offset=8), Call(Attribute(Name('pickletools', Load(), lineno=64, col_offset=28), 'genops', Load(), lineno=64, col_offset=28), [Name('pickle', Load(), lineno=64, col_offset=47)], [], None, None, lineno=64, col_offset=28), [If(Compare(Attribute(Name('op', Load(), lineno=65, col_offset=11), 'code', Load(), lineno=65, col_offset=11), [Eq()], [Name('code', Load(), lineno=65, col_offset=22)], lineno=65, col_offset=11), [AugAssign(Name('n', Store(), lineno=66, col_offset=12), Add(), Num(1, lineno=66, col_offset=17), lineno=66, col_offset=12)], [], lineno=65, col_offset=8)], [], lineno=64, col_offset=4), Return(Name('n', Load(), lineno=67, col_offset=11), lineno=67, col_offset=4)], [], lineno=62, col_offset=0), ClassDef('ExtensionSaver', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=82, col_offset=17), Name('code', Param(), lineno=82, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=83, col_offset=8), 'code', Store(), lineno=83, col_offset=8)], Name('code', Load(), lineno=83, col_offset=20), lineno=83, col_offset=8), If(Compare(Name('code', Load(), lineno=84, col_offset=11), [In()], [Attribute(Name('copy_reg', Load(), lineno=84, col_offset=19), '_inverted_registry', Load(), lineno=84, col_offset=19)], lineno=84, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=85, col_offset=12), 'pair', Store(), lineno=85, col_offset=12)], Subscript(Attribute(Name('copy_reg', Load(), lineno=85, col_offset=24), '_inverted_registry', Load(), lineno=85, col_offset=24), Index(Name('code', Load(), lineno=85, col_offset=52)), Load(), lineno=85, col_offset=24), lineno=85, col_offset=12), Expr(Call(Attribute(Name('copy_reg', Load(), lineno=86, col_offset=12), 'remove_extension', Load(), lineno=86, col_offset=12), [Subscript(Attribute(Name('self', Load(), lineno=86, col_offset=38), 'pair', Load(), lineno=86, col_offset=38), Index(Num(0, lineno=86, col_offset=48)), Load(), lineno=86, col_offset=38), Subscript(Attribute(Name('self', Load(), lineno=86, col_offset=52), 'pair', Load(), lineno=86, col_offset=52), Index(Num(1, lineno=86, col_offset=62)), Load(), lineno=86, col_offset=52), Name('code', Load(), lineno=86, col_offset=66)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=88, col_offset=12), 'pair', Store(), lineno=88, col_offset=12)], Name('None', Load(), lineno=88, col_offset=24), lineno=88, col_offset=12)], lineno=84, col_offset=8)], [], lineno=82, col_offset=4), FunctionDef('restore', arguments([Name('self', Param(), lineno=91, col_offset=16)], None, None, []), [Assign([Name('code', Store(), lineno=92, col_offset=8)], Attribute(Name('self', Load(), lineno=92, col_offset=15), 'code', Load(), lineno=92, col_offset=15), lineno=92, col_offset=8), Assign([Name('curpair', Store(), lineno=93, col_offset=8)], Call(Attribute(Attribute(Name('copy_reg', Load(), lineno=93, col_offset=18), '_inverted_registry', Load(), lineno=93, col_offset=18), 'get', Load(), lineno=93, col_offset=18), [Name('code', Load(), lineno=93, col_offset=50)], [], None, None, lineno=93, col_offset=18), lineno=93, col_offset=8), If(Compare(Name('curpair', Load(), lineno=94, col_offset=11), [IsNot()], [Name('None', Load(), lineno=94, col_offset=26)], lineno=94, col_offset=11), [Expr(Call(Attribute(Name('copy_reg', Load(), lineno=95, col_offset=12), 'remove_extension', Load(), lineno=95, col_offset=12), [Subscript(Name('curpair', Load(), lineno=95, col_offset=38), Index(Num(0, lineno=95, col_offset=46)), Load(), lineno=95, col_offset=38), Subscript(Name('curpair', Load(), lineno=95, col_offset=50), Index(Num(1, lineno=95, col_offset=58)), Load(), lineno=95, col_offset=50), Name('code', Load(), lineno=95, col_offset=62)], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12)], [], lineno=94, col_offset=8), Assign([Name('pair', Store(), lineno=96, col_offset=8)], Attribute(Name('self', Load(), lineno=96, col_offset=15), 'pair', Load(), lineno=96, col_offset=15), lineno=96, col_offset=8), If(Compare(Name('pair', Load(), lineno=97, col_offset=11), [IsNot()], [Name('None', Load(), lineno=97, col_offset=23)], lineno=97, col_offset=11), [Expr(Call(Attribute(Name('copy_reg', Load(), lineno=98, col_offset=12), 'add_extension', Load(), lineno=98, col_offset=12), [Subscript(Name('pair', Load(), lineno=98, col_offset=35), Index(Num(0, lineno=98, col_offset=40)), Load(), lineno=98, col_offset=35), Subscript(Name('pair', Load(), lineno=98, col_offset=44), Index(Num(1, lineno=98, col_offset=49)), Load(), lineno=98, col_offset=44), Name('code', Load(), lineno=98, col_offset=53)], [], None, None, lineno=98, col_offset=12), lineno=98, col_offset=12)], [], lineno=97, col_offset=8)], [], lineno=91, col_offset=4)], [], lineno=79, col_offset=0), ClassDef('C', [], [FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=101, col_offset=16), Name('other', Param(), lineno=101, col_offset=22)], None, None, []), [Return(Call(Name('cmp', Load(), lineno=102, col_offset=15), [Attribute(Name('self', Load(), lineno=102, col_offset=19), '__dict__', Load(), lineno=102, col_offset=19), Attribute(Name('other', Load(), lineno=102, col_offset=34), '__dict__', Load(), lineno=102, col_offset=34)], [], None, None, lineno=102, col_offset=15), lineno=102, col_offset=8)], [], lineno=101, col_offset=4)], [], lineno=100, col_offset=0), Import([alias('__main__', None)], lineno=104, col_offset=0), Assign([Attribute(Name('__main__', Load(), lineno=105, col_offset=0), 'C', Store(), lineno=105, col_offset=0)], Name('C', Load(), lineno=105, col_offset=13), lineno=105, col_offset=0), Assign([Attribute(Name('C', Load(), lineno=106, col_offset=0), '__module__', Store(), lineno=106, col_offset=0)], Str('__main__', lineno=106, col_offset=15), lineno=106, col_offset=0), ClassDef('myint', [Name('int', Load(), lineno=108, col_offset=12)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=109, col_offset=17), Name('x', Param(), lineno=109, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=110, col_offset=8), 'str', Store(), lineno=110, col_offset=8)], Call(Name('str', Load(), lineno=110, col_offset=19), [Name('x', Load(), lineno=110, col_offset=23)], [], None, None, lineno=110, col_offset=19), lineno=110, col_offset=8)], [], lineno=109, col_offset=4)], [], lineno=108, col_offset=0), ClassDef('initarg', [Name('C', Load(), lineno=112, col_offset=14)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=114, col_offset=17), Name('a', Param(), lineno=114, col_offset=23), Name('b', Param(), lineno=114, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=115, col_offset=8), 'a', Store(), lineno=115, col_offset=8)], Name('a', Load(), lineno=115, col_offset=17), lineno=115, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=116, col_offset=8), 'b', Store(), lineno=116, col_offset=8)], Name('b', Load(), lineno=116, col_offset=17), lineno=116, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('__getinitargs__', arguments([Name('self', Param(), lineno=118, col_offset=24)], None, None, []), [Return(Tuple([Attribute(Name('self', Load(), lineno=119, col_offset=15), 'a', Load(), lineno=119, col_offset=15), Attribute(Name('self', Load(), lineno=119, col_offset=23), 'b', Load(), lineno=119, col_offset=23)], Load(), lineno=119, col_offset=15), lineno=119, col_offset=8)], [], lineno=118, col_offset=4)], [], lineno=112, col_offset=0), ClassDef('metaclass', [Name('type', Load(), lineno=121, col_offset=16)], [Pass( lineno=122, col_offset=4)], [], lineno=121, col_offset=0), ClassDef('use_metaclass', [Name('object', Load(), lineno=124, col_offset=20)], [Assign([Name('__metaclass__', Store(), lineno=125, col_offset=4)], Name('metaclass', Load(), lineno=125, col_offset=20), lineno=125, col_offset=4)], [], lineno=124, col_offset=0), Assign([Name('DATA0', Store(), lineno=131, col_offset=0)], BinOp(BinOp(BinOp(BinOp(Str('(lp1\nI0\naL1L\naF2\nac__builtin__\ncomplex\np2\n', lineno=138, col_offset=-1), Add(), Str('(F3\nF0\ntRp3\naI1\naI-1\naI255\naI-255\naI-256\naI65535\naI-65535\naI-65536\naI2147483647\naI-2147483647\naI-2147483648\na', lineno=153, col_offset=-1), lineno=138, col_offset=-1), Add(), Str("(S'abc'\np4\ng4\n", lineno=157, col_offset=-1), lineno=153, col_offset=5), Add(), Str('(i__main__\nC\np5\n', lineno=161, col_offset=-1), lineno=157, col_offset=4), Add(), Str("(dp6\nS'foo'\np7\nI1\nsS'bar'\np8\nI2\nsbg5\ntp9\nag9\naI5\na.\n", lineno=174, col_offset=-1), lineno=161, col_offset=4), lineno=131, col_offset=0), Assign([Name('DATA0_DIS', Store(), lineno=177, col_offset=0)], Str("    0: (    MARK\n    1: l        LIST       (MARK at 0)\n    2: p    PUT        1\n    5: I    INT        0\n    8: a    APPEND\n    9: L    LONG       1L\n   13: a    APPEND\n   14: F    FLOAT      2.0\n   17: a    APPEND\n   18: c    GLOBAL     '__builtin__ complex'\n   39: p    PUT        2\n   42: (    MARK\n   43: F        FLOAT      3.0\n   46: F        FLOAT      0.0\n   49: t        TUPLE      (MARK at 42)\n   50: R    REDUCE\n   51: p    PUT        3\n   54: a    APPEND\n   55: I    INT        1\n   58: a    APPEND\n   59: I    INT        -1\n   63: a    APPEND\n   64: I    INT        255\n   69: a    APPEND\n   70: I    INT        -255\n   76: a    APPEND\n   77: I    INT        -256\n   83: a    APPEND\n   84: I    INT        65535\n   91: a    APPEND\n   92: I    INT        -65535\n  100: a    APPEND\n  101: I    INT        -65536\n  109: a    APPEND\n  110: I    INT        2147483647\n  122: a    APPEND\n  123: I    INT        -2147483647\n  136: a    APPEND\n  137: I    INT        -2147483648\n  150: a    APPEND\n  151: (    MARK\n  152: S        STRING     'abc'\n  159: p        PUT        4\n  162: g        GET        4\n  165: (        MARK\n  166: i            INST       '__main__ C' (MARK at 165)\n  178: p        PUT        5\n  181: (        MARK\n  182: d            DICT       (MARK at 181)\n  183: p        PUT        6\n  186: S        STRING     'foo'\n  193: p        PUT        7\n  196: I        INT        1\n  199: s        SETITEM\n  200: S        STRING     'bar'\n  207: p        PUT        8\n  210: I        INT        2\n  213: s        SETITEM\n  214: b        BUILD\n  215: g        GET        5\n  218: t        TUPLE      (MARK at 151)\n  219: p    PUT        9\n  222: a    APPEND\n  223: g    GET        9\n  226: a    APPEND\n  227: I    INT        5\n  230: a    APPEND\n  231: .    STOP\nhighest protocol among opcodes = 0\n", lineno=247, col_offset=-1), lineno=177, col_offset=0), Assign([Name('DATA1', Store(), lineno=249, col_offset=0)], Str(']q\x01(K\x00L1L\nG@\x00\x00\x00\x00\x00\x00\x00c__builtin__\ncomplex\nq\x02(G@\x08\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00\x00tRq\x03K\x01J\xff\xff\xff\xffK\xffJ\x01\xff\xff\xffJ\x00\xff\xff\xffM\xff\xffJ\x01\x00\xff\xffJ\x00\x00\xff\xffJ\xff\xff\xff\x7fJ\x01\x00\x00\x80J\x00\x00\x00\x80(U\x03abcq\x04h\x04(c__main__\nC\nq\x05oq\x06}q\x07(U\x03fooq\x08K\x01U\x03barq\tK\x02ubh\x06tq\nh\nK\x05e.', lineno=249, col_offset=9), lineno=249, col_offset=0), Assign([Name('DATA1_DIS', Store(), lineno=260, col_offset=0)], Str("    0: ]    EMPTY_LIST\n    1: q    BINPUT     1\n    3: (    MARK\n    4: K        BININT1    0\n    6: L        LONG       1L\n   10: G        BINFLOAT   2.0\n   19: c        GLOBAL     '__builtin__ complex'\n   40: q        BINPUT     2\n   42: (        MARK\n   43: G            BINFLOAT   3.0\n   52: G            BINFLOAT   0.0\n   61: t            TUPLE      (MARK at 42)\n   62: R        REDUCE\n   63: q        BINPUT     3\n   65: K        BININT1    1\n   67: J        BININT     -1\n   72: K        BININT1    255\n   74: J        BININT     -255\n   79: J        BININT     -256\n   84: M        BININT2    65535\n   87: J        BININT     -65535\n   92: J        BININT     -65536\n   97: J        BININT     2147483647\n  102: J        BININT     -2147483647\n  107: J        BININT     -2147483648\n  112: (        MARK\n  113: U            SHORT_BINSTRING 'abc'\n  118: q            BINPUT     4\n  120: h            BINGET     4\n  122: (            MARK\n  123: c                GLOBAL     '__main__ C'\n  135: q                BINPUT     5\n  137: o                OBJ        (MARK at 122)\n  138: q            BINPUT     6\n  140: }            EMPTY_DICT\n  141: q            BINPUT     7\n  143: (            MARK\n  144: U                SHORT_BINSTRING 'foo'\n  149: q                BINPUT     8\n  151: K                BININT1    1\n  153: U                SHORT_BINSTRING 'bar'\n  158: q                BINPUT     9\n  160: K                BININT1    2\n  162: u                SETITEMS   (MARK at 143)\n  163: b            BUILD\n  164: h            BINGET     6\n  166: t            TUPLE      (MARK at 112)\n  167: q        BINPUT     10\n  169: h        BINGET     10\n  171: K        BININT1    5\n  173: e        APPENDS    (MARK at 3)\n  174: .    STOP\nhighest protocol among opcodes = 1\n", lineno=314, col_offset=-1), lineno=260, col_offset=0), Assign([Name('DATA2', Store(), lineno=316, col_offset=0)], Str('\x80\x02]q\x01(K\x00\x8a\x01\x01G@\x00\x00\x00\x00\x00\x00\x00c__builtin__\ncomplex\nq\x02G@\x08\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00\x00\x86Rq\x03K\x01J\xff\xff\xff\xffK\xffJ\x01\xff\xff\xffJ\x00\xff\xff\xffM\xff\xffJ\x01\x00\xff\xffJ\x00\x00\xff\xffJ\xff\xff\xff\x7fJ\x01\x00\x00\x80J\x00\x00\x00\x80(U\x03abcq\x04h\x04(c__main__\nC\nq\x05oq\x06}q\x07(U\x03fooq\x08K\x01U\x03barq\tK\x02ubh\x06tq\nh\nK\x05e.', lineno=316, col_offset=9), lineno=316, col_offset=0), Assign([Name('DATA2_DIS', Store(), lineno=325, col_offset=0)], Str("    0: \x80 PROTO      2\n    2: ]    EMPTY_LIST\n    3: q    BINPUT     1\n    5: (    MARK\n    6: K        BININT1    0\n    8: \x8a     LONG1      1L\n   11: G        BINFLOAT   2.0\n   20: c        GLOBAL     '__builtin__ complex'\n   41: q        BINPUT     2\n   43: G        BINFLOAT   3.0\n   52: G        BINFLOAT   0.0\n   61: \x86     TUPLE2\n   62: R        REDUCE\n   63: q        BINPUT     3\n   65: K        BININT1    1\n   67: J        BININT     -1\n   72: K        BININT1    255\n   74: J        BININT     -255\n   79: J        BININT     -256\n   84: M        BININT2    65535\n   87: J        BININT     -65535\n   92: J        BININT     -65536\n   97: J        BININT     2147483647\n  102: J        BININT     -2147483647\n  107: J        BININT     -2147483648\n  112: (        MARK\n  113: U            SHORT_BINSTRING 'abc'\n  118: q            BINPUT     4\n  120: h            BINGET     4\n  122: (            MARK\n  123: c                GLOBAL     '__main__ C'\n  135: q                BINPUT     5\n  137: o                OBJ        (MARK at 122)\n  138: q            BINPUT     6\n  140: }            EMPTY_DICT\n  141: q            BINPUT     7\n  143: (            MARK\n  144: U                SHORT_BINSTRING 'foo'\n  149: q                BINPUT     8\n  151: K                BININT1    1\n  153: U                SHORT_BINSTRING 'bar'\n  158: q                BINPUT     9\n  160: K                BININT1    2\n  162: u                SETITEMS   (MARK at 143)\n  163: b            BUILD\n  164: h            BINGET     6\n  166: t            TUPLE      (MARK at 112)\n  167: q        BINPUT     10\n  169: h        BINGET     10\n  171: K        BININT1    5\n  173: e        APPENDS    (MARK at 5)\n  174: .    STOP\nhighest protocol among opcodes = 2\n", lineno=379, col_offset=-1), lineno=325, col_offset=0), FunctionDef('create_data', arguments([], None, None, []), [Assign([Name('c', Store(), lineno=382, col_offset=4)], Call(Name('C', Load(), lineno=382, col_offset=8), [], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=4), Assign([Attribute(Name('c', Load(), lineno=383, col_offset=4), 'foo', Store(), lineno=383, col_offset=4)], Num(1, lineno=383, col_offset=12), lineno=383, col_offset=4), Assign([Attribute(Name('c', Load(), lineno=384, col_offset=4), 'bar', Store(), lineno=384, col_offset=4)], Num(2, lineno=384, col_offset=12), lineno=384, col_offset=4), Assign([Name('x', Store(), lineno=385, col_offset=4)], List([Num(0, lineno=385, col_offset=9), Num(1L, lineno=385, col_offset=12), Num(2.0, lineno=385, col_offset=16), BinOp(Num(3.0, lineno=385, col_offset=21), Add(), Num(0j, lineno=385, col_offset=25), lineno=385, col_offset=21)], Load(), lineno=385, col_offset=8), lineno=385, col_offset=4), Assign([Name('uint1max', Store(), lineno=388, col_offset=4)], Num(255, lineno=388, col_offset=15), lineno=388, col_offset=4), Assign([Name('uint2max', Store(), lineno=389, col_offset=4)], Num(65535, lineno=389, col_offset=15), lineno=389, col_offset=4), Assign([Name('int4max', Store(), lineno=390, col_offset=4)], Num(2147483647, lineno=390, col_offset=14), lineno=390, col_offset=4), Expr(Call(Attribute(Name('x', Load(), lineno=391, col_offset=4), 'extend', Load(), lineno=391, col_offset=4), [List([Num(1, lineno=391, col_offset=14), Num(-1, lineno=391, col_offset=18), Name('uint1max', Load(), lineno=392, col_offset=14), UnaryOp(USub(), Name('uint1max', Load(), lineno=392, col_offset=25), lineno=392, col_offset=24), BinOp(UnaryOp(USub(), Name('uint1max', Load(), lineno=392, col_offset=36), lineno=392, col_offset=35), Sub(), Num(1, lineno=392, col_offset=45), lineno=392, col_offset=35), Name('uint2max', Load(), lineno=393, col_offset=14), UnaryOp(USub(), Name('uint2max', Load(), lineno=393, col_offset=25), lineno=393, col_offset=24), BinOp(UnaryOp(USub(), Name('uint2max', Load(), lineno=393, col_offset=36), lineno=393, col_offset=35), Sub(), Num(1, lineno=393, col_offset=45), lineno=393, col_offset=35), Name('int4max', Load(), lineno=394, col_offset=15), UnaryOp(USub(), Name('int4max', Load(), lineno=394, col_offset=26), lineno=394, col_offset=25), BinOp(UnaryOp(USub(), Name('int4max', Load(), lineno=394, col_offset=37), lineno=394, col_offset=36), Sub(), Num(1, lineno=394, col_offset=45), lineno=394, col_offset=36)], Load(), lineno=391, col_offset=13)], [], None, None, lineno=391, col_offset=4), lineno=391, col_offset=4), Assign([Name('y', Store(), lineno=395, col_offset=4)], Tuple([Str('abc', lineno=395, col_offset=9), Str('abc', lineno=395, col_offset=16), Name('c', Load(), lineno=395, col_offset=23), Name('c', Load(), lineno=395, col_offset=26)], Load(), lineno=395, col_offset=9), lineno=395, col_offset=4), Expr(Call(Attribute(Name('x', Load(), lineno=396, col_offset=4), 'append', Load(), lineno=396, col_offset=4), [Name('y', Load(), lineno=396, col_offset=13)], [], None, None, lineno=396, col_offset=4), lineno=396, col_offset=4), Expr(Call(Attribute(Name('x', Load(), lineno=397, col_offset=4), 'append', Load(), lineno=397, col_offset=4), [Name('y', Load(), lineno=397, col_offset=13)], [], None, None, lineno=397, col_offset=4), lineno=397, col_offset=4), Expr(Call(Attribute(Name('x', Load(), lineno=398, col_offset=4), 'append', Load(), lineno=398, col_offset=4), [Num(5, lineno=398, col_offset=13)], [], None, None, lineno=398, col_offset=4), lineno=398, col_offset=4), Return(Name('x', Load(), lineno=399, col_offset=11), lineno=399, col_offset=4)], [], lineno=381, col_offset=0), ClassDef('AbstractPickleTests', [Attribute(Name('unittest', Load(), lineno=401, col_offset=26), 'TestCase', Load(), lineno=401, col_offset=26)], [Assign([Name('_testdata', Store(), lineno=404, col_offset=4)], Call(Name('create_data', Load(), lineno=404, col_offset=16), [], [], None, None, lineno=404, col_offset=16), lineno=404, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=406, col_offset=14)], None, None, []), [Pass( lineno=407, col_offset=8)], [], lineno=406, col_offset=4), FunctionDef('test_misc', arguments([Name('self', Param(), lineno=409, col_offset=18)], None, None, []), [For(Name('proto', Store(), lineno=411, col_offset=12), Name('protocols', Load(), lineno=411, col_offset=21), [Assign([Name('x', Store(), lineno=412, col_offset=12)], Call(Name('myint', Load(), lineno=412, col_offset=16), [Num(4, lineno=412, col_offset=22)], [], None, None, lineno=412, col_offset=16), lineno=412, col_offset=12), Assign([Name('s', Store(), lineno=413, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=413, col_offset=16), 'dumps', Load(), lineno=413, col_offset=16), [Name('x', Load(), lineno=413, col_offset=27), Name('proto', Load(), lineno=413, col_offset=30)], [], None, None, lineno=413, col_offset=16), lineno=413, col_offset=12), Assign([Name('y', Store(), lineno=414, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=414, col_offset=16), 'loads', Load(), lineno=414, col_offset=16), [Name('s', Load(), lineno=414, col_offset=27)], [], None, None, lineno=414, col_offset=16), lineno=414, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=12), 'assertEqual', Load(), lineno=415, col_offset=12), [Name('x', Load(), lineno=415, col_offset=29), Name('y', Load(), lineno=415, col_offset=32)], [], None, None, lineno=415, col_offset=12), lineno=415, col_offset=12), Assign([Name('x', Store(), lineno=417, col_offset=12)], Tuple([Num(1, lineno=417, col_offset=17), Tuple([], Load(), lineno=417, col_offset=20)], Load(), lineno=417, col_offset=17), lineno=417, col_offset=12), Assign([Name('s', Store(), lineno=418, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=418, col_offset=16), 'dumps', Load(), lineno=418, col_offset=16), [Name('x', Load(), lineno=418, col_offset=27), Name('proto', Load(), lineno=418, col_offset=30)], [], None, None, lineno=418, col_offset=16), lineno=418, col_offset=12), Assign([Name('y', Store(), lineno=419, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=419, col_offset=16), 'loads', Load(), lineno=419, col_offset=16), [Name('s', Load(), lineno=419, col_offset=27)], [], None, None, lineno=419, col_offset=16), lineno=419, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=12), 'assertEqual', Load(), lineno=420, col_offset=12), [Name('x', Load(), lineno=420, col_offset=29), Name('y', Load(), lineno=420, col_offset=32)], [], None, None, lineno=420, col_offset=12), lineno=420, col_offset=12), Assign([Name('x', Store(), lineno=422, col_offset=12)], Call(Name('initarg', Load(), lineno=422, col_offset=16), [Num(1, lineno=422, col_offset=24), Name('x', Load(), lineno=422, col_offset=27)], [], None, None, lineno=422, col_offset=16), lineno=422, col_offset=12), Assign([Name('s', Store(), lineno=423, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=423, col_offset=16), 'dumps', Load(), lineno=423, col_offset=16), [Name('x', Load(), lineno=423, col_offset=27), Name('proto', Load(), lineno=423, col_offset=30)], [], None, None, lineno=423, col_offset=16), lineno=423, col_offset=12), Assign([Name('y', Store(), lineno=424, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=424, col_offset=16), 'loads', Load(), lineno=424, col_offset=16), [Name('s', Load(), lineno=424, col_offset=27)], [], None, None, lineno=424, col_offset=16), lineno=424, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=12), 'assertEqual', Load(), lineno=425, col_offset=12), [Name('x', Load(), lineno=425, col_offset=29), Name('y', Load(), lineno=425, col_offset=32)], [], None, None, lineno=425, col_offset=12), lineno=425, col_offset=12)], [], lineno=411, col_offset=8)], [], lineno=409, col_offset=4), FunctionDef('test_roundtrip_equality', arguments([Name('self', Param(), lineno=429, col_offset=32)], None, None, []), [Assign([Name('expected', Store(), lineno=430, col_offset=8)], Attribute(Name('self', Load(), lineno=430, col_offset=19), '_testdata', Load(), lineno=430, col_offset=19), lineno=430, col_offset=8), For(Name('proto', Store(), lineno=431, col_offset=12), Name('protocols', Load(), lineno=431, col_offset=21), [Assign([Name('s', Store(), lineno=432, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=432, col_offset=16), 'dumps', Load(), lineno=432, col_offset=16), [Name('expected', Load(), lineno=432, col_offset=27), Name('proto', Load(), lineno=432, col_offset=37)], [], None, None, lineno=432, col_offset=16), lineno=432, col_offset=12), Assign([Name('got', Store(), lineno=433, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=433, col_offset=18), 'loads', Load(), lineno=433, col_offset=18), [Name('s', Load(), lineno=433, col_offset=29)], [], None, None, lineno=433, col_offset=18), lineno=433, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=12), 'assertEqual', Load(), lineno=434, col_offset=12), [Name('expected', Load(), lineno=434, col_offset=29), Name('got', Load(), lineno=434, col_offset=39)], [], None, None, lineno=434, col_offset=12), lineno=434, col_offset=12)], [], lineno=431, col_offset=8)], [], lineno=429, col_offset=4), FunctionDef('test_load_from_canned_string', arguments([Name('self', Param(), lineno=436, col_offset=37)], None, None, []), [Assign([Name('expected', Store(), lineno=437, col_offset=8)], Attribute(Name('self', Load(), lineno=437, col_offset=19), '_testdata', Load(), lineno=437, col_offset=19), lineno=437, col_offset=8), For(Name('canned', Store(), lineno=438, col_offset=12), Tuple([Name('DATA0', Load(), lineno=438, col_offset=22), Name('DATA1', Load(), lineno=438, col_offset=29), Name('DATA2', Load(), lineno=438, col_offset=36)], Load(), lineno=438, col_offset=22), [Assign([Name('got', Store(), lineno=439, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=439, col_offset=18), 'loads', Load(), lineno=439, col_offset=18), [Name('canned', Load(), lineno=439, col_offset=29)], [], None, None, lineno=439, col_offset=18), lineno=439, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=440, col_offset=12), 'assertEqual', Load(), lineno=440, col_offset=12), [Name('expected', Load(), lineno=440, col_offset=29), Name('got', Load(), lineno=440, col_offset=39)], [], None, None, lineno=440, col_offset=12), lineno=440, col_offset=12)], [], lineno=438, col_offset=8)], [], lineno=436, col_offset=4), FunctionDef('dont_test_disassembly', arguments([Name('self', Param(), lineno=448, col_offset=30)], None, None, []), [ImportFrom('pickletools', [alias('dis', None)], 0, lineno=449, col_offset=8), For(Tuple([Name('proto', Store(), lineno=451, col_offset=12), Name('expected', Store(), lineno=451, col_offset=19)], Store(), lineno=451, col_offset=12), Tuple([Tuple([Num(0, lineno=451, col_offset=32), Name('DATA0_DIS', Load(), lineno=451, col_offset=35)], Load(), lineno=451, col_offset=32), Tuple([Num(1, lineno=451, col_offset=48), Name('DATA1_DIS', Load(), lineno=451, col_offset=51)], Load(), lineno=451, col_offset=48)], Load(), lineno=451, col_offset=31), [Assign([Name('s', Store(), lineno=452, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=452, col_offset=16), 'dumps', Load(), lineno=452, col_offset=16), [Attribute(Name('self', Load(), lineno=452, col_offset=27), '_testdata', Load(), lineno=452, col_offset=27), Name('proto', Load(), lineno=452, col_offset=43)], [], None, None, lineno=452, col_offset=16), lineno=452, col_offset=12), Assign([Name('filelike', Store(), lineno=453, col_offset=12)], Call(Attribute(Name('cStringIO', Load(), lineno=453, col_offset=23), 'StringIO', Load(), lineno=453, col_offset=23), [], [], None, None, lineno=453, col_offset=23), lineno=453, col_offset=12), Expr(Call(Name('dis', Load(), lineno=454, col_offset=12), [Name('s', Load(), lineno=454, col_offset=16)], [keyword('out', Name('filelike', Load(), lineno=454, col_offset=23))], None, None, lineno=454, col_offset=12), lineno=454, col_offset=12), Assign([Name('got', Store(), lineno=455, col_offset=12)], Call(Attribute(Name('filelike', Load(), lineno=455, col_offset=18), 'getvalue', Load(), lineno=455, col_offset=18), [], [], None, None, lineno=455, col_offset=18), lineno=455, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=456, col_offset=12), 'assertEqual', Load(), lineno=456, col_offset=12), [Name('expected', Load(), lineno=456, col_offset=29), Name('got', Load(), lineno=456, col_offset=39)], [], None, None, lineno=456, col_offset=12), lineno=456, col_offset=12)], [], lineno=451, col_offset=8)], [], lineno=448, col_offset=4), FunctionDef('test_recursive_list', arguments([Name('self', Param(), lineno=458, col_offset=28)], None, None, []), [Assign([Name('l', Store(), lineno=459, col_offset=8)], List([], Load(), lineno=459, col_offset=12), lineno=459, col_offset=8), Expr(Call(Attribute(Name('l', Load(), lineno=460, col_offset=8), 'append', Load(), lineno=460, col_offset=8), [Name('l', Load(), lineno=460, col_offset=17)], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), For(Name('proto', Store(), lineno=461, col_offset=12), Name('protocols', Load(), lineno=461, col_offset=21), [Assign([Name('s', Store(), lineno=462, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=462, col_offset=16), 'dumps', Load(), lineno=462, col_offset=16), [Name('l', Load(), lineno=462, col_offset=27), Name('proto', Load(), lineno=462, col_offset=30)], [], None, None, lineno=462, col_offset=16), lineno=462, col_offset=12), Assign([Name('x', Store(), lineno=463, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=463, col_offset=16), 'loads', Load(), lineno=463, col_offset=16), [Name('s', Load(), lineno=463, col_offset=27)], [], None, None, lineno=463, col_offset=16), lineno=463, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=464, col_offset=12), 'assertEqual', Load(), lineno=464, col_offset=12), [Call(Name('len', Load(), lineno=464, col_offset=29), [Name('x', Load(), lineno=464, col_offset=33)], [], None, None, lineno=464, col_offset=29), Num(1, lineno=464, col_offset=37)], [], None, None, lineno=464, col_offset=12), lineno=464, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=465, col_offset=12), 'assertTrue', Load(), lineno=465, col_offset=12), [Compare(Name('x', Load(), lineno=465, col_offset=28), [Is()], [Subscript(Name('x', Load(), lineno=465, col_offset=33), Index(Num(0, lineno=465, col_offset=35)), Load(), lineno=465, col_offset=33)], lineno=465, col_offset=28)], [], None, None, lineno=465, col_offset=12), lineno=465, col_offset=12)], [], lineno=461, col_offset=8)], [], lineno=458, col_offset=4), FunctionDef('test_recursive_tuple', arguments([Name('self', Param(), lineno=467, col_offset=29)], None, None, []), [Assign([Name('t', Store(), lineno=468, col_offset=8)], Tuple([List([], Load(), lineno=468, col_offset=13)], Load(), lineno=468, col_offset=13), lineno=468, col_offset=8), Expr(Call(Attribute(Subscript(Name('t', Load(), lineno=469, col_offset=8), Index(Num(0, lineno=469, col_offset=10)), Load(), lineno=469, col_offset=8), 'append', Load(), lineno=469, col_offset=8), [Name('t', Load(), lineno=469, col_offset=20)], [], None, None, lineno=469, col_offset=8), lineno=469, col_offset=8), For(Name('proto', Store(), lineno=470, col_offset=12), Name('protocols', Load(), lineno=470, col_offset=21), [Assign([Name('s', Store(), lineno=471, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=471, col_offset=16), 'dumps', Load(), lineno=471, col_offset=16), [Name('t', Load(), lineno=471, col_offset=27), Name('proto', Load(), lineno=471, col_offset=30)], [], None, None, lineno=471, col_offset=16), lineno=471, col_offset=12), Assign([Name('x', Store(), lineno=472, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=472, col_offset=16), 'loads', Load(), lineno=472, col_offset=16), [Name('s', Load(), lineno=472, col_offset=27)], [], None, None, lineno=472, col_offset=16), lineno=472, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=473, col_offset=12), 'assertEqual', Load(), lineno=473, col_offset=12), [Call(Name('len', Load(), lineno=473, col_offset=29), [Name('x', Load(), lineno=473, col_offset=33)], [], None, None, lineno=473, col_offset=29), Num(1, lineno=473, col_offset=37)], [], None, None, lineno=473, col_offset=12), lineno=473, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=474, col_offset=12), 'assertEqual', Load(), lineno=474, col_offset=12), [Call(Name('len', Load(), lineno=474, col_offset=29), [Subscript(Name('x', Load(), lineno=474, col_offset=33), Index(Num(0, lineno=474, col_offset=35)), Load(), lineno=474, col_offset=33)], [], None, None, lineno=474, col_offset=29), Num(1, lineno=474, col_offset=40)], [], None, None, lineno=474, col_offset=12), lineno=474, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=12), 'assertTrue', Load(), lineno=475, col_offset=12), [Compare(Name('x', Load(), lineno=475, col_offset=28), [Is()], [Subscript(Subscript(Name('x', Load(), lineno=475, col_offset=33), Index(Num(0, lineno=475, col_offset=35)), Load(), lineno=475, col_offset=33), Index(Num(0, lineno=475, col_offset=38)), Load(), lineno=475, col_offset=33)], lineno=475, col_offset=28)], [], None, None, lineno=475, col_offset=12), lineno=475, col_offset=12)], [], lineno=470, col_offset=8)], [], lineno=467, col_offset=4), FunctionDef('test_recursive_dict', arguments([Name('self', Param(), lineno=477, col_offset=28)], None, None, []), [Assign([Name('d', Store(), lineno=478, col_offset=8)], Dict([], [], lineno=478, col_offset=12), lineno=478, col_offset=8), Assign([Subscript(Name('d', Load(), lineno=479, col_offset=8), Index(Num(1, lineno=479, col_offset=10)), Store(), lineno=479, col_offset=8)], Name('d', Load(), lineno=479, col_offset=15), lineno=479, col_offset=8), For(Name('proto', Store(), lineno=480, col_offset=12), Name('protocols', Load(), lineno=480, col_offset=21), [Assign([Name('s', Store(), lineno=481, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=481, col_offset=16), 'dumps', Load(), lineno=481, col_offset=16), [Name('d', Load(), lineno=481, col_offset=27), Name('proto', Load(), lineno=481, col_offset=30)], [], None, None, lineno=481, col_offset=16), lineno=481, col_offset=12), Assign([Name('x', Store(), lineno=482, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=482, col_offset=16), 'loads', Load(), lineno=482, col_offset=16), [Name('s', Load(), lineno=482, col_offset=27)], [], None, None, lineno=482, col_offset=16), lineno=482, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=483, col_offset=12), 'assertEqual', Load(), lineno=483, col_offset=12), [Call(Attribute(Name('x', Load(), lineno=483, col_offset=29), 'keys', Load(), lineno=483, col_offset=29), [], [], None, None, lineno=483, col_offset=29), List([Num(1, lineno=483, col_offset=40)], Load(), lineno=483, col_offset=39)], [], None, None, lineno=483, col_offset=12), lineno=483, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=12), 'assertTrue', Load(), lineno=484, col_offset=12), [Compare(Subscript(Name('x', Load(), lineno=484, col_offset=28), Index(Num(1, lineno=484, col_offset=30)), Load(), lineno=484, col_offset=28), [Is()], [Name('x', Load(), lineno=484, col_offset=36)], lineno=484, col_offset=28)], [], None, None, lineno=484, col_offset=12), lineno=484, col_offset=12)], [], lineno=480, col_offset=8)], [], lineno=477, col_offset=4), FunctionDef('test_recursive_inst', arguments([Name('self', Param(), lineno=486, col_offset=28)], None, None, []), [Assign([Name('i', Store(), lineno=487, col_offset=8)], Call(Name('C', Load(), lineno=487, col_offset=12), [], [], None, None, lineno=487, col_offset=12), lineno=487, col_offset=8), Assign([Attribute(Name('i', Load(), lineno=488, col_offset=8), 'attr', Store(), lineno=488, col_offset=8)], Name('i', Load(), lineno=488, col_offset=17), lineno=488, col_offset=8), For(Name('proto', Store(), lineno=489, col_offset=12), Name('protocols', Load(), lineno=489, col_offset=21), [Assign([Name('s', Store(), lineno=490, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=490, col_offset=16), 'dumps', Load(), lineno=490, col_offset=16), [Name('i', Load(), lineno=490, col_offset=27), Num(2, lineno=490, col_offset=30)], [], None, None, lineno=490, col_offset=16), lineno=490, col_offset=12), Assign([Name('x', Store(), lineno=491, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=491, col_offset=16), 'loads', Load(), lineno=491, col_offset=16), [Name('s', Load(), lineno=491, col_offset=27)], [], None, None, lineno=491, col_offset=16), lineno=491, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=492, col_offset=12), 'assertEqual', Load(), lineno=492, col_offset=12), [Call(Name('dir', Load(), lineno=492, col_offset=29), [Name('x', Load(), lineno=492, col_offset=33)], [], None, None, lineno=492, col_offset=29), Call(Name('dir', Load(), lineno=492, col_offset=37), [Name('i', Load(), lineno=492, col_offset=41)], [], None, None, lineno=492, col_offset=37)], [], None, None, lineno=492, col_offset=12), lineno=492, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=493, col_offset=12), 'assertTrue', Load(), lineno=493, col_offset=12), [Compare(Attribute(Name('x', Load(), lineno=493, col_offset=28), 'attr', Load(), lineno=493, col_offset=28), [Is()], [Name('x', Load(), lineno=493, col_offset=38)], lineno=493, col_offset=28)], [], None, None, lineno=493, col_offset=12), lineno=493, col_offset=12)], [], lineno=489, col_offset=8)], [], lineno=486, col_offset=4), FunctionDef('test_recursive_multi', arguments([Name('self', Param(), lineno=495, col_offset=29)], None, None, []), [Assign([Name('l', Store(), lineno=496, col_offset=8)], List([], Load(), lineno=496, col_offset=12), lineno=496, col_offset=8), Assign([Name('d', Store(), lineno=497, col_offset=8)], Dict([Num(1, lineno=497, col_offset=13)], [Name('l', Load(), lineno=497, col_offset=15)], lineno=497, col_offset=12), lineno=497, col_offset=8), Assign([Name('i', Store(), lineno=498, col_offset=8)], Call(Name('C', Load(), lineno=498, col_offset=12), [], [], None, None, lineno=498, col_offset=12), lineno=498, col_offset=8), Assign([Attribute(Name('i', Load(), lineno=499, col_offset=8), 'attr', Store(), lineno=499, col_offset=8)], Name('d', Load(), lineno=499, col_offset=17), lineno=499, col_offset=8), Expr(Call(Attribute(Name('l', Load(), lineno=500, col_offset=8), 'append', Load(), lineno=500, col_offset=8), [Name('i', Load(), lineno=500, col_offset=17)], [], None, None, lineno=500, col_offset=8), lineno=500, col_offset=8), For(Name('proto', Store(), lineno=501, col_offset=12), Name('protocols', Load(), lineno=501, col_offset=21), [Assign([Name('s', Store(), lineno=502, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=502, col_offset=16), 'dumps', Load(), lineno=502, col_offset=16), [Name('l', Load(), lineno=502, col_offset=27), Name('proto', Load(), lineno=502, col_offset=30)], [], None, None, lineno=502, col_offset=16), lineno=502, col_offset=12), Assign([Name('x', Store(), lineno=503, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=503, col_offset=16), 'loads', Load(), lineno=503, col_offset=16), [Name('s', Load(), lineno=503, col_offset=27)], [], None, None, lineno=503, col_offset=16), lineno=503, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=504, col_offset=12), 'assertEqual', Load(), lineno=504, col_offset=12), [Call(Name('len', Load(), lineno=504, col_offset=29), [Name('x', Load(), lineno=504, col_offset=33)], [], None, None, lineno=504, col_offset=29), Num(1, lineno=504, col_offset=37)], [], None, None, lineno=504, col_offset=12), lineno=504, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=12), 'assertEqual', Load(), lineno=505, col_offset=12), [Call(Name('dir', Load(), lineno=505, col_offset=29), [Subscript(Name('x', Load(), lineno=505, col_offset=33), Index(Num(0, lineno=505, col_offset=35)), Load(), lineno=505, col_offset=33)], [], None, None, lineno=505, col_offset=29), Call(Name('dir', Load(), lineno=505, col_offset=40), [Name('i', Load(), lineno=505, col_offset=44)], [], None, None, lineno=505, col_offset=40)], [], None, None, lineno=505, col_offset=12), lineno=505, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=506, col_offset=12), 'assertEqual', Load(), lineno=506, col_offset=12), [Call(Attribute(Attribute(Subscript(Name('x', Load(), lineno=506, col_offset=29), Index(Num(0, lineno=506, col_offset=31)), Load(), lineno=506, col_offset=29), 'attr', Load(), lineno=506, col_offset=29), 'keys', Load(), lineno=506, col_offset=29), [], [], None, None, lineno=506, col_offset=29), List([Num(1, lineno=506, col_offset=48)], Load(), lineno=506, col_offset=47)], [], None, None, lineno=506, col_offset=12), lineno=506, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=12), 'assertTrue', Load(), lineno=507, col_offset=12), [Compare(Subscript(Attribute(Subscript(Name('x', Load(), lineno=507, col_offset=28), Index(Num(0, lineno=507, col_offset=30)), Load(), lineno=507, col_offset=28), 'attr', Load(), lineno=507, col_offset=28), Index(Num(1, lineno=507, col_offset=38)), Load(), lineno=507, col_offset=28), [Is()], [Name('x', Load(), lineno=507, col_offset=44)], lineno=507, col_offset=28)], [], None, None, lineno=507, col_offset=12), lineno=507, col_offset=12)], [], lineno=501, col_offset=8)], [], lineno=495, col_offset=4), FunctionDef('test_garyp', arguments([Name('self', Param(), lineno=509, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=8), 'assertRaises', Load(), lineno=510, col_offset=8), [Attribute(Name('self', Load(), lineno=510, col_offset=26), 'error', Load(), lineno=510, col_offset=26), Attribute(Name('self', Load(), lineno=510, col_offset=38), 'loads', Load(), lineno=510, col_offset=38), Str('garyp', lineno=510, col_offset=50)], [], None, None, lineno=510, col_offset=8), lineno=510, col_offset=8)], [], lineno=509, col_offset=4), FunctionDef('test_insecure_strings', arguments([Name('self', Param(), lineno=512, col_offset=30)], None, None, []), [Assign([Name('insecure', Store(), lineno=513, col_offset=8)], List([Str('abc', lineno=513, col_offset=20), Str('2 + 2', lineno=513, col_offset=27), Str("'abc", lineno=515, col_offset=20), Str('\'abc"', lineno=516, col_offset=20), Str("'abc'   ?", lineno=517, col_offset=20), Str("'\\'", lineno=518, col_offset=20)], Load(), lineno=513, col_offset=19), lineno=513, col_offset=8), For(Name('s', Store(), lineno=523, col_offset=12), Name('insecure', Load(), lineno=523, col_offset=17), [Assign([Name('buf', Store(), lineno=524, col_offset=12)], BinOp(BinOp(Str('S', lineno=524, col_offset=18), Add(), Name('s', Load(), lineno=524, col_offset=24), lineno=524, col_offset=18), Add(), Str('\np0\n.', lineno=524, col_offset=28), lineno=524, col_offset=26), lineno=524, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=525, col_offset=12), 'assertRaises', Load(), lineno=525, col_offset=12), [Name('ValueError', Load(), lineno=525, col_offset=30), Attribute(Name('self', Load(), lineno=525, col_offset=42), 'loads', Load(), lineno=525, col_offset=42), Name('buf', Load(), lineno=525, col_offset=54)], [], None, None, lineno=525, col_offset=12), lineno=525, col_offset=12)], [], lineno=523, col_offset=8)], [], lineno=512, col_offset=4), If(Name('have_unicode', Load(), lineno=527, col_offset=7), [FunctionDef('test_unicode', arguments([Name('self', Param(), lineno=528, col_offset=25)], None, None, []), [Assign([Name('endcases', Store(), lineno=529, col_offset=12)], List([Str(u'', lineno=529, col_offset=24), Str(u'<\\u>', lineno=529, col_offset=29), Str(u'<\\\u1234>', lineno=529, col_offset=39), Str(u'<\n>', lineno=529, col_offset=54), Str(u'<\\>', lineno=530, col_offset=24), Str(u'<\\\U00012345>', lineno=530, col_offset=33)], Load(), lineno=529, col_offset=23), lineno=529, col_offset=12), For(Name('proto', Store(), lineno=531, col_offset=16), Name('protocols', Load(), lineno=531, col_offset=25), [For(Name('u', Store(), lineno=532, col_offset=20), Name('endcases', Load(), lineno=532, col_offset=25), [Assign([Name('p', Store(), lineno=533, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=533, col_offset=24), 'dumps', Load(), lineno=533, col_offset=24), [Name('u', Load(), lineno=533, col_offset=35), Name('proto', Load(), lineno=533, col_offset=38)], [], None, None, lineno=533, col_offset=24), lineno=533, col_offset=20), Assign([Name('u2', Store(), lineno=534, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=534, col_offset=25), 'loads', Load(), lineno=534, col_offset=25), [Name('p', Load(), lineno=534, col_offset=36)], [], None, None, lineno=534, col_offset=25), lineno=534, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=535, col_offset=20), 'assertEqual', Load(), lineno=535, col_offset=20), [Name('u2', Load(), lineno=535, col_offset=37), Name('u', Load(), lineno=535, col_offset=41)], [], None, None, lineno=535, col_offset=20), lineno=535, col_offset=20)], [], lineno=532, col_offset=16)], [], lineno=531, col_offset=12)], [], lineno=528, col_offset=8), FunctionDef('test_unicode_high_plane', arguments([Name('self', Param(), lineno=537, col_offset=36)], None, None, []), [Assign([Name('t', Store(), lineno=538, col_offset=12)], Str(u'\U00012345', lineno=538, col_offset=16), lineno=538, col_offset=12), For(Name('proto', Store(), lineno=539, col_offset=16), Name('protocols', Load(), lineno=539, col_offset=25), [Assign([Name('p', Store(), lineno=540, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=540, col_offset=20), 'dumps', Load(), lineno=540, col_offset=20), [Name('t', Load(), lineno=540, col_offset=31), Name('proto', Load(), lineno=540, col_offset=34)], [], None, None, lineno=540, col_offset=20), lineno=540, col_offset=16), Assign([Name('t2', Store(), lineno=541, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=541, col_offset=21), 'loads', Load(), lineno=541, col_offset=21), [Name('p', Load(), lineno=541, col_offset=32)], [], None, None, lineno=541, col_offset=21), lineno=541, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=542, col_offset=16), 'assertEqual', Load(), lineno=542, col_offset=16), [Name('t2', Load(), lineno=542, col_offset=33), Name('t', Load(), lineno=542, col_offset=37)], [], None, None, lineno=542, col_offset=16), lineno=542, col_offset=16)], [], lineno=539, col_offset=12)], [], lineno=537, col_offset=8)], [], lineno=527, col_offset=4), FunctionDef('test_ints', arguments([Name('self', Param(), lineno=544, col_offset=18)], None, None, []), [Import([alias('sys', None)], lineno=545, col_offset=8), For(Name('proto', Store(), lineno=546, col_offset=12), Name('protocols', Load(), lineno=546, col_offset=21), [Assign([Name('n', Store(), lineno=547, col_offset=12)], Attribute(Name('sys', Load(), lineno=547, col_offset=16), 'maxint', Load(), lineno=547, col_offset=16), lineno=547, col_offset=12), While(Name('n', Load(), lineno=548, col_offset=18), [For(Name('expected', Store(), lineno=549, col_offset=20), Tuple([UnaryOp(USub(), Name('n', Load(), lineno=549, col_offset=34), lineno=549, col_offset=33), Name('n', Load(), lineno=549, col_offset=37)], Load(), lineno=549, col_offset=33), [Assign([Name('s', Store(), lineno=550, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=550, col_offset=24), 'dumps', Load(), lineno=550, col_offset=24), [Name('expected', Load(), lineno=550, col_offset=35), Name('proto', Load(), lineno=550, col_offset=45)], [], None, None, lineno=550, col_offset=24), lineno=550, col_offset=20), Assign([Name('n2', Store(), lineno=551, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=551, col_offset=25), 'loads', Load(), lineno=551, col_offset=25), [Name('s', Load(), lineno=551, col_offset=36)], [], None, None, lineno=551, col_offset=25), lineno=551, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=552, col_offset=20), 'assertEqual', Load(), lineno=552, col_offset=20), [Name('expected', Load(), lineno=552, col_offset=37), Name('n2', Load(), lineno=552, col_offset=47)], [], None, None, lineno=552, col_offset=20), lineno=552, col_offset=20)], [], lineno=549, col_offset=16), Assign([Name('n', Store(), lineno=553, col_offset=16)], BinOp(Name('n', Load(), lineno=553, col_offset=20), RShift(), Num(1, lineno=553, col_offset=25), lineno=553, col_offset=20), lineno=553, col_offset=16)], [], lineno=548, col_offset=12)], [], lineno=546, col_offset=8)], [], lineno=544, col_offset=4), FunctionDef('test_maxint64', arguments([Name('self', Param(), lineno=555, col_offset=22)], None, None, []), [Assign([Name('maxint64', Store(), lineno=556, col_offset=8)], BinOp(BinOp(Num(1L, lineno=556, col_offset=20), LShift(), Num(63, lineno=556, col_offset=26), lineno=556, col_offset=20), Sub(), Num(1, lineno=556, col_offset=32), lineno=556, col_offset=19), lineno=556, col_offset=8), Assign([Name('data', Store(), lineno=557, col_offset=8)], BinOp(BinOp(Str('I', lineno=557, col_offset=15), Add(), Call(Name('str', Load(), lineno=557, col_offset=21), [Name('maxint64', Load(), lineno=557, col_offset=25)], [], None, None, lineno=557, col_offset=21), lineno=557, col_offset=15), Add(), Str('\n.', lineno=557, col_offset=37), lineno=557, col_offset=35), lineno=557, col_offset=8), Assign([Name('got', Store(), lineno=558, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=558, col_offset=14), 'loads', Load(), lineno=558, col_offset=14), [Name('data', Load(), lineno=558, col_offset=25)], [], None, None, lineno=558, col_offset=14), lineno=558, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=559, col_offset=8), 'assertEqual', Load(), lineno=559, col_offset=8), [Name('got', Load(), lineno=559, col_offset=25), Name('maxint64', Load(), lineno=559, col_offset=30)], [], None, None, lineno=559, col_offset=8), lineno=559, col_offset=8), Assign([Name('data', Store(), lineno=562, col_offset=8)], BinOp(BinOp(Str('I', lineno=562, col_offset=15), Add(), Call(Name('str', Load(), lineno=562, col_offset=21), [Name('maxint64', Load(), lineno=562, col_offset=25)], [], None, None, lineno=562, col_offset=21), lineno=562, col_offset=15), Add(), Str('JUNK\n.', lineno=562, col_offset=37), lineno=562, col_offset=35), lineno=562, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=563, col_offset=8), 'assertRaises', Load(), lineno=563, col_offset=8), [Name('ValueError', Load(), lineno=563, col_offset=26), Attribute(Name('self', Load(), lineno=563, col_offset=38), 'loads', Load(), lineno=563, col_offset=38), Name('data', Load(), lineno=563, col_offset=50)], [], None, None, lineno=563, col_offset=8), lineno=563, col_offset=8)], [], lineno=555, col_offset=4), FunctionDef('test_long', arguments([Name('self', Param(), lineno=565, col_offset=18)], None, None, []), [For(Name('proto', Store(), lineno=566, col_offset=12), Name('protocols', Load(), lineno=566, col_offset=21), [For(Name('nbits', Store(), lineno=568, col_offset=16), Tuple([Num(1, lineno=568, col_offset=25), Num(8, lineno=568, col_offset=28), BinOp(Num(8, lineno=568, col_offset=31), Mult(), Num(254, lineno=568, col_offset=33), lineno=568, col_offset=31), BinOp(Num(8, lineno=568, col_offset=38), Mult(), Num(255, lineno=568, col_offset=40), lineno=568, col_offset=38), BinOp(Num(8, lineno=568, col_offset=45), Mult(), Num(256, lineno=568, col_offset=47), lineno=568, col_offset=45), BinOp(Num(8, lineno=568, col_offset=52), Mult(), Num(257, lineno=568, col_offset=54), lineno=568, col_offset=52)], Load(), lineno=568, col_offset=25), [Assign([Name('nbase', Store(), lineno=569, col_offset=16)], BinOp(Num(1L, lineno=569, col_offset=24), LShift(), Name('nbits', Load(), lineno=569, col_offset=30), lineno=569, col_offset=24), lineno=569, col_offset=16), For(Name('npos', Store(), lineno=570, col_offset=20), Tuple([BinOp(Name('nbase', Load(), lineno=570, col_offset=28), Sub(), Num(1, lineno=570, col_offset=34), lineno=570, col_offset=28), Name('nbase', Load(), lineno=570, col_offset=37), BinOp(Name('nbase', Load(), lineno=570, col_offset=44), Add(), Num(1, lineno=570, col_offset=50), lineno=570, col_offset=44)], Load(), lineno=570, col_offset=28), [For(Name('n', Store(), lineno=571, col_offset=24), Tuple([Name('npos', Load(), lineno=571, col_offset=29), UnaryOp(USub(), Name('npos', Load(), lineno=571, col_offset=36), lineno=571, col_offset=35)], Load(), lineno=571, col_offset=29), [Assign([Name('pickle', Store(), lineno=572, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=572, col_offset=33), 'dumps', Load(), lineno=572, col_offset=33), [Name('n', Load(), lineno=572, col_offset=44), Name('proto', Load(), lineno=572, col_offset=47)], [], None, None, lineno=572, col_offset=33), lineno=572, col_offset=24), Assign([Name('got', Store(), lineno=573, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=573, col_offset=30), 'loads', Load(), lineno=573, col_offset=30), [Name('pickle', Load(), lineno=573, col_offset=41)], [], None, None, lineno=573, col_offset=30), lineno=573, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=574, col_offset=24), 'assertEqual', Load(), lineno=574, col_offset=24), [Name('n', Load(), lineno=574, col_offset=41), Name('got', Load(), lineno=574, col_offset=44)], [], None, None, lineno=574, col_offset=24), lineno=574, col_offset=24)], [], lineno=571, col_offset=20)], [], lineno=570, col_offset=16)], [], lineno=568, col_offset=12)], [], lineno=566, col_offset=8), Assign([Name('nbase', Store(), lineno=577, col_offset=8)], Call(Name('long', Load(), lineno=577, col_offset=16), [Str('deadbeeffeedface', lineno=577, col_offset=21), Num(16, lineno=577, col_offset=41)], [], None, None, lineno=577, col_offset=16), lineno=577, col_offset=8), AugAssign(Name('nbase', Store(), lineno=578, col_offset=8), Add(), BinOp(Name('nbase', Load(), lineno=578, col_offset=17), LShift(), Num(1000000, lineno=578, col_offset=26), lineno=578, col_offset=17), lineno=578, col_offset=8), For(Name('n', Store(), lineno=579, col_offset=12), Tuple([Name('nbase', Load(), lineno=579, col_offset=17), UnaryOp(USub(), Name('nbase', Load(), lineno=579, col_offset=25), lineno=579, col_offset=24)], Load(), lineno=579, col_offset=17), [Assign([Name('p', Store(), lineno=580, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=580, col_offset=16), 'dumps', Load(), lineno=580, col_offset=16), [Name('n', Load(), lineno=580, col_offset=27), Num(2, lineno=580, col_offset=30)], [], None, None, lineno=580, col_offset=16), lineno=580, col_offset=12), Assign([Name('got', Store(), lineno=581, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=581, col_offset=18), 'loads', Load(), lineno=581, col_offset=18), [Name('p', Load(), lineno=581, col_offset=29)], [], None, None, lineno=581, col_offset=18), lineno=581, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=582, col_offset=12), 'assertEqual', Load(), lineno=582, col_offset=12), [Name('n', Load(), lineno=582, col_offset=29), Name('got', Load(), lineno=582, col_offset=32)], [], None, None, lineno=582, col_offset=12), lineno=582, col_offset=12)], [], lineno=579, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('test_float', arguments([Name('self', Param(), lineno=584, col_offset=19)], None, None, []), [Assign([Name('test_values', Store(), lineno=585, col_offset=8)], List([Num(0.0, lineno=585, col_offset=23), Num(5e-324, lineno=585, col_offset=28), Num(1e-310, lineno=585, col_offset=39), Num(7e-308, lineno=585, col_offset=47), Num(6.626e-34, lineno=585, col_offset=55), Num(0.1, lineno=585, col_offset=66), Num(0.5, lineno=585, col_offset=71), Num(3.14, lineno=586, col_offset=23), Num(263.44582062374053, lineno=586, col_offset=29), Num(6.022e+23, lineno=586, col_offset=49), Num(1e+30, lineno=586, col_offset=59)], Load(), lineno=585, col_offset=22), lineno=585, col_offset=8), Assign([Name('test_values', Store(), lineno=587, col_offset=8)], BinOp(Name('test_values', Load(), lineno=587, col_offset=22), Add(), ListComp(UnaryOp(USub(), Name('x', Load(), lineno=587, col_offset=38), lineno=587, col_offset=37), [comprehension(Name('x', Store(), lineno=587, col_offset=44), Name('test_values', Load(), lineno=587, col_offset=49), [])], lineno=587, col_offset=37), lineno=587, col_offset=22), lineno=587, col_offset=8), For(Name('proto', Store(), lineno=588, col_offset=12), Name('protocols', Load(), lineno=588, col_offset=21), [For(Name('value', Store(), lineno=589, col_offset=16), Name('test_values', Load(), lineno=589, col_offset=25), [Assign([Name('pickle', Store(), lineno=590, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=590, col_offset=25), 'dumps', Load(), lineno=590, col_offset=25), [Name('value', Load(), lineno=590, col_offset=36), Name('proto', Load(), lineno=590, col_offset=43)], [], None, None, lineno=590, col_offset=25), lineno=590, col_offset=16), Assign([Name('got', Store(), lineno=591, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=591, col_offset=22), 'loads', Load(), lineno=591, col_offset=22), [Name('pickle', Load(), lineno=591, col_offset=33)], [], None, None, lineno=591, col_offset=22), lineno=591, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=16), 'assertEqual', Load(), lineno=592, col_offset=16), [Name('value', Load(), lineno=592, col_offset=33), Name('got', Load(), lineno=592, col_offset=40)], [], None, None, lineno=592, col_offset=16), lineno=592, col_offset=16)], [], lineno=589, col_offset=12)], [], lineno=588, col_offset=8)], [], lineno=584, col_offset=4), FunctionDef('test_float_format', arguments([Name('self', Param(), lineno=595, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=597, col_offset=8), 'assertEqual', Load(), lineno=597, col_offset=8), [Subscript(Call(Attribute(Name('self', Load(), lineno=597, col_offset=25), 'dumps', Load(), lineno=597, col_offset=25), [Num(1.2, lineno=597, col_offset=36)], [], None, None, lineno=597, col_offset=25), Slice(Num(0, lineno=597, col_offset=41), Num(3, lineno=597, col_offset=43), None), Load(), lineno=597, col_offset=25), Str('F1.', lineno=597, col_offset=47)], [], None, None, lineno=597, col_offset=8), lineno=597, col_offset=8)], [Call(Name('run_with_locale', Load(), lineno=594, col_offset=5), [Str('LC_ALL', lineno=594, col_offset=21), Str('de_DE', lineno=594, col_offset=31), Str('fr_FR', lineno=594, col_offset=40)], [], None, None, lineno=594, col_offset=5)], lineno=594, col_offset=4), FunctionDef('test_reduce', arguments([Name('self', Param(), lineno=599, col_offset=20)], None, None, []), [Pass( lineno=600, col_offset=8)], [], lineno=599, col_offset=4), FunctionDef('test_getinitargs', arguments([Name('self', Param(), lineno=602, col_offset=25)], None, None, []), [Pass( lineno=603, col_offset=8)], [], lineno=602, col_offset=4), FunctionDef('test_metaclass', arguments([Name('self', Param(), lineno=605, col_offset=23)], None, None, []), [Assign([Name('a', Store(), lineno=606, col_offset=8)], Call(Name('use_metaclass', Load(), lineno=606, col_offset=12), [], [], None, None, lineno=606, col_offset=12), lineno=606, col_offset=8), For(Name('proto', Store(), lineno=607, col_offset=12), Name('protocols', Load(), lineno=607, col_offset=21), [Assign([Name('s', Store(), lineno=608, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=608, col_offset=16), 'dumps', Load(), lineno=608, col_offset=16), [Name('a', Load(), lineno=608, col_offset=27), Name('proto', Load(), lineno=608, col_offset=30)], [], None, None, lineno=608, col_offset=16), lineno=608, col_offset=12), Assign([Name('b', Store(), lineno=609, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=609, col_offset=16), 'loads', Load(), lineno=609, col_offset=16), [Name('s', Load(), lineno=609, col_offset=27)], [], None, None, lineno=609, col_offset=16), lineno=609, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=610, col_offset=12), 'assertEqual', Load(), lineno=610, col_offset=12), [Attribute(Name('a', Load(), lineno=610, col_offset=29), '__class__', Load(), lineno=610, col_offset=29), Attribute(Name('b', Load(), lineno=610, col_offset=42), '__class__', Load(), lineno=610, col_offset=42)], [], None, None, lineno=610, col_offset=12), lineno=610, col_offset=12)], [], lineno=607, col_offset=8)], [], lineno=605, col_offset=4), FunctionDef('test_structseq', arguments([Name('self', Param(), lineno=612, col_offset=23)], None, None, []), [Import([alias('time', None)], lineno=613, col_offset=8), Import([alias('os', None)], lineno=614, col_offset=8), Assign([Name('t', Store(), lineno=616, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=616, col_offset=12), 'localtime', Load(), lineno=616, col_offset=12), [], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=8), For(Name('proto', Store(), lineno=617, col_offset=12), Name('protocols', Load(), lineno=617, col_offset=21), [Assign([Name('s', Store(), lineno=618, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=618, col_offset=16), 'dumps', Load(), lineno=618, col_offset=16), [Name('t', Load(), lineno=618, col_offset=27), Name('proto', Load(), lineno=618, col_offset=30)], [], None, None, lineno=618, col_offset=16), lineno=618, col_offset=12), Assign([Name('u', Store(), lineno=619, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=619, col_offset=16), 'loads', Load(), lineno=619, col_offset=16), [Name('s', Load(), lineno=619, col_offset=27)], [], None, None, lineno=619, col_offset=16), lineno=619, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=620, col_offset=12), 'assertEqual', Load(), lineno=620, col_offset=12), [Name('t', Load(), lineno=620, col_offset=29), Name('u', Load(), lineno=620, col_offset=32)], [], None, None, lineno=620, col_offset=12), lineno=620, col_offset=12), If(Call(Name('hasattr', Load(), lineno=621, col_offset=15), [Name('os', Load(), lineno=621, col_offset=23), Str('stat', lineno=621, col_offset=27)], [], None, None, lineno=621, col_offset=15), [Assign([Name('t', Store(), lineno=622, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=622, col_offset=20), 'stat', Load(), lineno=622, col_offset=20), [Attribute(Name('os', Load(), lineno=622, col_offset=28), 'curdir', Load(), lineno=622, col_offset=28)], [], None, None, lineno=622, col_offset=20), lineno=622, col_offset=16), Assign([Name('s', Store(), lineno=623, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=623, col_offset=20), 'dumps', Load(), lineno=623, col_offset=20), [Name('t', Load(), lineno=623, col_offset=31), Name('proto', Load(), lineno=623, col_offset=34)], [], None, None, lineno=623, col_offset=20), lineno=623, col_offset=16), Assign([Name('u', Store(), lineno=624, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=624, col_offset=20), 'loads', Load(), lineno=624, col_offset=20), [Name('s', Load(), lineno=624, col_offset=31)], [], None, None, lineno=624, col_offset=20), lineno=624, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=625, col_offset=16), 'assertEqual', Load(), lineno=625, col_offset=16), [Name('t', Load(), lineno=625, col_offset=33), Name('u', Load(), lineno=625, col_offset=36)], [], None, None, lineno=625, col_offset=16), lineno=625, col_offset=16)], [], lineno=621, col_offset=12), If(Call(Name('hasattr', Load(), lineno=626, col_offset=15), [Name('os', Load(), lineno=626, col_offset=23), Str('statvfs', lineno=626, col_offset=27)], [], None, None, lineno=626, col_offset=15), [Assign([Name('t', Store(), lineno=627, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=627, col_offset=20), 'statvfs', Load(), lineno=627, col_offset=20), [Attribute(Name('os', Load(), lineno=627, col_offset=31), 'curdir', Load(), lineno=627, col_offset=31)], [], None, None, lineno=627, col_offset=20), lineno=627, col_offset=16), Assign([Name('s', Store(), lineno=628, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=628, col_offset=20), 'dumps', Load(), lineno=628, col_offset=20), [Name('t', Load(), lineno=628, col_offset=31), Name('proto', Load(), lineno=628, col_offset=34)], [], None, None, lineno=628, col_offset=20), lineno=628, col_offset=16), Assign([Name('u', Store(), lineno=629, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=629, col_offset=20), 'loads', Load(), lineno=629, col_offset=20), [Name('s', Load(), lineno=629, col_offset=31)], [], None, None, lineno=629, col_offset=20), lineno=629, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=630, col_offset=16), 'assertEqual', Load(), lineno=630, col_offset=16), [Name('t', Load(), lineno=630, col_offset=33), Name('u', Load(), lineno=630, col_offset=36)], [], None, None, lineno=630, col_offset=16), lineno=630, col_offset=16)], [], lineno=626, col_offset=12)], [], lineno=617, col_offset=8)], [], lineno=612, col_offset=4), FunctionDef('test_proto', arguments([Name('self', Param(), lineno=634, col_offset=19)], None, None, []), [Assign([Name('build_none', Store(), lineno=635, col_offset=8)], BinOp(Attribute(Name('pickle', Load(), lineno=635, col_offset=21), 'NONE', Load(), lineno=635, col_offset=21), Add(), Attribute(Name('pickle', Load(), lineno=635, col_offset=35), 'STOP', Load(), lineno=635, col_offset=35), lineno=635, col_offset=21), lineno=635, col_offset=8), For(Name('proto', Store(), lineno=636, col_offset=12), Name('protocols', Load(), lineno=636, col_offset=21), [Assign([Name('expected', Store(), lineno=637, col_offset=12)], Name('build_none', Load(), lineno=637, col_offset=23), lineno=637, col_offset=12), If(Compare(Name('proto', Load(), lineno=638, col_offset=15), [GtE()], [Num(2, lineno=638, col_offset=24)], lineno=638, col_offset=15), [Assign([Name('expected', Store(), lineno=639, col_offset=16)], BinOp(BinOp(Attribute(Name('pickle', Load(), lineno=639, col_offset=27), 'PROTO', Load(), lineno=639, col_offset=27), Add(), Call(Name('chr', Load(), lineno=639, col_offset=42), [Name('proto', Load(), lineno=639, col_offset=46)], [], None, None, lineno=639, col_offset=42), lineno=639, col_offset=27), Add(), Name('expected', Load(), lineno=639, col_offset=55), lineno=639, col_offset=53), lineno=639, col_offset=16)], [], lineno=638, col_offset=12), Assign([Name('p', Store(), lineno=640, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=640, col_offset=16), 'dumps', Load(), lineno=640, col_offset=16), [Name('None', Load(), lineno=640, col_offset=27), Name('proto', Load(), lineno=640, col_offset=33)], [], None, None, lineno=640, col_offset=16), lineno=640, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=641, col_offset=12), 'assertEqual', Load(), lineno=641, col_offset=12), [Name('p', Load(), lineno=641, col_offset=29), Name('expected', Load(), lineno=641, col_offset=32)], [], None, None, lineno=641, col_offset=12), lineno=641, col_offset=12)], [], lineno=636, col_offset=8), Assign([Name('oob', Store(), lineno=643, col_offset=8)], BinOp(Subscript(Name('protocols', Load(), lineno=643, col_offset=14), Index(Num(-1, lineno=643, col_offset=25)), Load(), lineno=643, col_offset=14), Add(), Num(1, lineno=643, col_offset=30), lineno=643, col_offset=14), lineno=643, col_offset=8), Assign([Name('badpickle', Store(), lineno=644, col_offset=8)], BinOp(BinOp(Attribute(Name('pickle', Load(), lineno=644, col_offset=20), 'PROTO', Load(), lineno=644, col_offset=20), Add(), Call(Name('chr', Load(), lineno=644, col_offset=35), [Name('oob', Load(), lineno=644, col_offset=39)], [], None, None, lineno=644, col_offset=35), lineno=644, col_offset=20), Add(), Name('build_none', Load(), lineno=644, col_offset=46), lineno=644, col_offset=44), lineno=644, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=646, col_offset=12), 'loads', Load(), lineno=646, col_offset=12), [Name('badpickle', Load(), lineno=646, col_offset=23)], [], None, None, lineno=646, col_offset=12), lineno=646, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=647, col_offset=15), Name('detail', Store(), lineno=647, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=648, col_offset=12), 'assertTrue', Load(), lineno=648, col_offset=12), [Call(Attribute(Call(Name('str', Load(), lineno=648, col_offset=28), [Name('detail', Load(), lineno=648, col_offset=32)], [], None, None, lineno=648, col_offset=28), 'startswith', Load(), lineno=648, col_offset=28), [Str('unsupported pickle protocol', lineno=649, col_offset=44)], [], None, None, lineno=648, col_offset=28)], [], None, None, lineno=648, col_offset=12), lineno=648, col_offset=12)], lineno=647, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=12), 'fail', Load(), lineno=651, col_offset=12), [Str('expected bad protocol number to raise ValueError', lineno=651, col_offset=22)], [], None, None, lineno=651, col_offset=12), lineno=651, col_offset=12)], lineno=645, col_offset=8)], [], lineno=634, col_offset=4), FunctionDef('test_long1', arguments([Name('self', Param(), lineno=653, col_offset=19)], None, None, []), [Assign([Name('x', Store(), lineno=654, col_offset=8)], Num(12345678910111213141516178920L, lineno=654, col_offset=12), lineno=654, col_offset=8), For(Name('proto', Store(), lineno=655, col_offset=12), Name('protocols', Load(), lineno=655, col_offset=21), [Assign([Name('s', Store(), lineno=656, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=656, col_offset=16), 'dumps', Load(), lineno=656, col_offset=16), [Name('x', Load(), lineno=656, col_offset=27), Name('proto', Load(), lineno=656, col_offset=30)], [], None, None, lineno=656, col_offset=16), lineno=656, col_offset=12), Assign([Name('y', Store(), lineno=657, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=657, col_offset=16), 'loads', Load(), lineno=657, col_offset=16), [Name('s', Load(), lineno=657, col_offset=27)], [], None, None, lineno=657, col_offset=16), lineno=657, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=658, col_offset=12), 'assertEqual', Load(), lineno=658, col_offset=12), [Name('x', Load(), lineno=658, col_offset=29), Name('y', Load(), lineno=658, col_offset=32)], [], None, None, lineno=658, col_offset=12), lineno=658, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=659, col_offset=12), 'assertEqual', Load(), lineno=659, col_offset=12), [Call(Name('opcode_in_pickle', Load(), lineno=659, col_offset=29), [Attribute(Name('pickle', Load(), lineno=659, col_offset=46), 'LONG1', Load(), lineno=659, col_offset=46), Name('s', Load(), lineno=659, col_offset=60)], [], None, None, lineno=659, col_offset=29), Compare(Name('proto', Load(), lineno=659, col_offset=64), [GtE()], [Num(2, lineno=659, col_offset=73)], lineno=659, col_offset=64)], [], None, None, lineno=659, col_offset=12), lineno=659, col_offset=12)], [], lineno=655, col_offset=8)], [], lineno=653, col_offset=4), FunctionDef('test_long4', arguments([Name('self', Param(), lineno=661, col_offset=19)], None, None, []), [Assign([Name('x', Store(), lineno=662, col_offset=8)], BinOp(Num(12345678910111213141516178920L, lineno=662, col_offset=12), LShift(), BinOp(Num(256, lineno=662, col_offset=47), Mult(), Num(8, lineno=662, col_offset=51), lineno=662, col_offset=47), lineno=662, col_offset=12), lineno=662, col_offset=8), For(Name('proto', Store(), lineno=663, col_offset=12), Name('protocols', Load(), lineno=663, col_offset=21), [Assign([Name('s', Store(), lineno=664, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=664, col_offset=16), 'dumps', Load(), lineno=664, col_offset=16), [Name('x', Load(), lineno=664, col_offset=27), Name('proto', Load(), lineno=664, col_offset=30)], [], None, None, lineno=664, col_offset=16), lineno=664, col_offset=12), Assign([Name('y', Store(), lineno=665, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=665, col_offset=16), 'loads', Load(), lineno=665, col_offset=16), [Name('s', Load(), lineno=665, col_offset=27)], [], None, None, lineno=665, col_offset=16), lineno=665, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=666, col_offset=12), 'assertEqual', Load(), lineno=666, col_offset=12), [Name('x', Load(), lineno=666, col_offset=29), Name('y', Load(), lineno=666, col_offset=32)], [], None, None, lineno=666, col_offset=12), lineno=666, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=667, col_offset=12), 'assertEqual', Load(), lineno=667, col_offset=12), [Call(Name('opcode_in_pickle', Load(), lineno=667, col_offset=29), [Attribute(Name('pickle', Load(), lineno=667, col_offset=46), 'LONG4', Load(), lineno=667, col_offset=46), Name('s', Load(), lineno=667, col_offset=60)], [], None, None, lineno=667, col_offset=29), Compare(Name('proto', Load(), lineno=667, col_offset=64), [GtE()], [Num(2, lineno=667, col_offset=73)], lineno=667, col_offset=64)], [], None, None, lineno=667, col_offset=12), lineno=667, col_offset=12)], [], lineno=663, col_offset=8)], [], lineno=661, col_offset=4), FunctionDef('test_short_tuples', arguments([Name('self', Param(), lineno=669, col_offset=26)], None, None, []), [Assign([Name('expected_opcode', Store(), lineno=671, col_offset=8)], Dict([Tuple([Num(0, lineno=671, col_offset=28), Num(0, lineno=671, col_offset=31)], Load(), lineno=671, col_offset=28), Tuple([Num(0, lineno=672, col_offset=28), Num(1, lineno=672, col_offset=31)], Load(), lineno=672, col_offset=28), Tuple([Num(0, lineno=673, col_offset=28), Num(2, lineno=673, col_offset=31)], Load(), lineno=673, col_offset=28), Tuple([Num(0, lineno=674, col_offset=28), Num(3, lineno=674, col_offset=31)], Load(), lineno=674, col_offset=28), Tuple([Num(0, lineno=675, col_offset=28), Num(4, lineno=675, col_offset=31)], Load(), lineno=675, col_offset=28), Tuple([Num(1, lineno=677, col_offset=28), Num(0, lineno=677, col_offset=31)], Load(), lineno=677, col_offset=28), Tuple([Num(1, lineno=678, col_offset=28), Num(1, lineno=678, col_offset=31)], Load(), lineno=678, col_offset=28), Tuple([Num(1, lineno=679, col_offset=28), Num(2, lineno=679, col_offset=31)], Load(), lineno=679, col_offset=28), Tuple([Num(1, lineno=680, col_offset=28), Num(3, lineno=680, col_offset=31)], Load(), lineno=680, col_offset=28), Tuple([Num(1, lineno=681, col_offset=28), Num(4, lineno=681, col_offset=31)], Load(), lineno=681, col_offset=28), Tuple([Num(2, lineno=683, col_offset=28), Num(0, lineno=683, col_offset=31)], Load(), lineno=683, col_offset=28), Tuple([Num(2, lineno=684, col_offset=28), Num(1, lineno=684, col_offset=31)], Load(), lineno=684, col_offset=28), Tuple([Num(2, lineno=685, col_offset=28), Num(2, lineno=685, col_offset=31)], Load(), lineno=685, col_offset=28), Tuple([Num(2, lineno=686, col_offset=28), Num(3, lineno=686, col_offset=31)], Load(), lineno=686, col_offset=28), Tuple([Num(2, lineno=687, col_offset=28), Num(4, lineno=687, col_offset=31)], Load(), lineno=687, col_offset=28)], [Attribute(Name('pickle', Load(), lineno=671, col_offset=35), 'TUPLE', Load(), lineno=671, col_offset=35), Attribute(Name('pickle', Load(), lineno=672, col_offset=35), 'TUPLE', Load(), lineno=672, col_offset=35), Attribute(Name('pickle', Load(), lineno=673, col_offset=35), 'TUPLE', Load(), lineno=673, col_offset=35), Attribute(Name('pickle', Load(), lineno=674, col_offset=35), 'TUPLE', Load(), lineno=674, col_offset=35), Attribute(Name('pickle', Load(), lineno=675, col_offset=35), 'TUPLE', Load(), lineno=675, col_offset=35), Attribute(Name('pickle', Load(), lineno=677, col_offset=35), 'EMPTY_TUPLE', Load(), lineno=677, col_offset=35), Attribute(Name('pickle', Load(), lineno=678, col_offset=35), 'TUPLE', Load(), lineno=678, col_offset=35), Attribute(Name('pickle', Load(), lineno=679, col_offset=35), 'TUPLE', Load(), lineno=679, col_offset=35), Attribute(Name('pickle', Load(), lineno=680, col_offset=35), 'TUPLE', Load(), lineno=680, col_offset=35), Attribute(Name('pickle', Load(), lineno=681, col_offset=35), 'TUPLE', Load(), lineno=681, col_offset=35), Attribute(Name('pickle', Load(), lineno=683, col_offset=35), 'EMPTY_TUPLE', Load(), lineno=683, col_offset=35), Attribute(Name('pickle', Load(), lineno=684, col_offset=35), 'TUPLE1', Load(), lineno=684, col_offset=35), Attribute(Name('pickle', Load(), lineno=685, col_offset=35), 'TUPLE2', Load(), lineno=685, col_offset=35), Attribute(Name('pickle', Load(), lineno=686, col_offset=35), 'TUPLE3', Load(), lineno=686, col_offset=35), Attribute(Name('pickle', Load(), lineno=687, col_offset=35), 'TUPLE', Load(), lineno=687, col_offset=35)], lineno=671, col_offset=26), lineno=671, col_offset=8), Assign([Name('a', Store(), lineno=689, col_offset=8)], Tuple([], Load(), lineno=689, col_offset=12), lineno=689, col_offset=8), Assign([Name('b', Store(), lineno=690, col_offset=8)], Tuple([Num(1, lineno=690, col_offset=13)], Load(), lineno=690, col_offset=13), lineno=690, col_offset=8), Assign([Name('c', Store(), lineno=691, col_offset=8)], Tuple([Num(1, lineno=691, col_offset=13), Num(2, lineno=691, col_offset=16)], Load(), lineno=691, col_offset=13), lineno=691, col_offset=8), Assign([Name('d', Store(), lineno=692, col_offset=8)], Tuple([Num(1, lineno=692, col_offset=13), Num(2, lineno=692, col_offset=16), Num(3, lineno=692, col_offset=19)], Load(), lineno=692, col_offset=13), lineno=692, col_offset=8), Assign([Name('e', Store(), lineno=693, col_offset=8)], Tuple([Num(1, lineno=693, col_offset=13), Num(2, lineno=693, col_offset=16), Num(3, lineno=693, col_offset=19), Num(4, lineno=693, col_offset=22)], Load(), lineno=693, col_offset=13), lineno=693, col_offset=8), For(Name('proto', Store(), lineno=694, col_offset=12), Name('protocols', Load(), lineno=694, col_offset=21), [For(Name('x', Store(), lineno=695, col_offset=16), Tuple([Name('a', Load(), lineno=695, col_offset=21), Name('b', Load(), lineno=695, col_offset=24), Name('c', Load(), lineno=695, col_offset=27), Name('d', Load(), lineno=695, col_offset=30), Name('e', Load(), lineno=695, col_offset=33)], Load(), lineno=695, col_offset=21), [Assign([Name('s', Store(), lineno=696, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=696, col_offset=20), 'dumps', Load(), lineno=696, col_offset=20), [Name('x', Load(), lineno=696, col_offset=31), Name('proto', Load(), lineno=696, col_offset=34)], [], None, None, lineno=696, col_offset=20), lineno=696, col_offset=16), Assign([Name('y', Store(), lineno=697, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=697, col_offset=20), 'loads', Load(), lineno=697, col_offset=20), [Name('s', Load(), lineno=697, col_offset=31)], [], None, None, lineno=697, col_offset=20), lineno=697, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=698, col_offset=16), 'assertEqual', Load(), lineno=698, col_offset=16), [Name('x', Load(), lineno=698, col_offset=33), Name('y', Load(), lineno=698, col_offset=36), Tuple([Name('proto', Load(), lineno=698, col_offset=40), Name('x', Load(), lineno=698, col_offset=47), Name('s', Load(), lineno=698, col_offset=50), Name('y', Load(), lineno=698, col_offset=53)], Load(), lineno=698, col_offset=40)], [], None, None, lineno=698, col_offset=16), lineno=698, col_offset=16), Assign([Name('expected', Store(), lineno=699, col_offset=16)], Subscript(Name('expected_opcode', Load(), lineno=699, col_offset=27), Index(Tuple([Name('proto', Load(), lineno=699, col_offset=43), Call(Name('len', Load(), lineno=699, col_offset=50), [Name('x', Load(), lineno=699, col_offset=54)], [], None, None, lineno=699, col_offset=50)], Load(), lineno=699, col_offset=43)), Load(), lineno=699, col_offset=27), lineno=699, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=700, col_offset=16), 'assertEqual', Load(), lineno=700, col_offset=16), [Call(Name('opcode_in_pickle', Load(), lineno=700, col_offset=33), [Name('expected', Load(), lineno=700, col_offset=50), Name('s', Load(), lineno=700, col_offset=60)], [], None, None, lineno=700, col_offset=33), Name('True', Load(), lineno=700, col_offset=64)], [], None, None, lineno=700, col_offset=16), lineno=700, col_offset=16)], [], lineno=695, col_offset=12)], [], lineno=694, col_offset=8)], [], lineno=669, col_offset=4), FunctionDef('test_singletons', arguments([Name('self', Param(), lineno=702, col_offset=24)], None, None, []), [Assign([Name('expected_opcode', Store(), lineno=704, col_offset=8)], Dict([Tuple([Num(0, lineno=704, col_offset=28), Name('None', Load(), lineno=704, col_offset=31)], Load(), lineno=704, col_offset=28), Tuple([Num(1, lineno=705, col_offset=28), Name('None', Load(), lineno=705, col_offset=31)], Load(), lineno=705, col_offset=28), Tuple([Num(2, lineno=706, col_offset=28), Name('None', Load(), lineno=706, col_offset=31)], Load(), lineno=706, col_offset=28), Tuple([Num(0, lineno=708, col_offset=28), Name('True', Load(), lineno=708, col_offset=31)], Load(), lineno=708, col_offset=28), Tuple([Num(1, lineno=709, col_offset=28), Name('True', Load(), lineno=709, col_offset=31)], Load(), lineno=709, col_offset=28), Tuple([Num(2, lineno=710, col_offset=28), Name('True', Load(), lineno=710, col_offset=31)], Load(), lineno=710, col_offset=28), Tuple([Num(0, lineno=712, col_offset=28), Name('False', Load(), lineno=712, col_offset=31)], Load(), lineno=712, col_offset=28), Tuple([Num(1, lineno=713, col_offset=28), Name('False', Load(), lineno=713, col_offset=31)], Load(), lineno=713, col_offset=28), Tuple([Num(2, lineno=714, col_offset=28), Name('False', Load(), lineno=714, col_offset=31)], Load(), lineno=714, col_offset=28)], [Attribute(Name('pickle', Load(), lineno=704, col_offset=38), 'NONE', Load(), lineno=704, col_offset=38), Attribute(Name('pickle', Load(), lineno=705, col_offset=38), 'NONE', Load(), lineno=705, col_offset=38), Attribute(Name('pickle', Load(), lineno=706, col_offset=38), 'NONE', Load(), lineno=706, col_offset=38), Attribute(Name('pickle', Load(), lineno=708, col_offset=38), 'INT', Load(), lineno=708, col_offset=38), Attribute(Name('pickle', Load(), lineno=709, col_offset=38), 'INT', Load(), lineno=709, col_offset=38), Attribute(Name('pickle', Load(), lineno=710, col_offset=38), 'NEWTRUE', Load(), lineno=710, col_offset=38), Attribute(Name('pickle', Load(), lineno=712, col_offset=39), 'INT', Load(), lineno=712, col_offset=39), Attribute(Name('pickle', Load(), lineno=713, col_offset=39), 'INT', Load(), lineno=713, col_offset=39), Attribute(Name('pickle', Load(), lineno=714, col_offset=39), 'NEWFALSE', Load(), lineno=714, col_offset=39)], lineno=704, col_offset=26), lineno=704, col_offset=8), For(Name('proto', Store(), lineno=716, col_offset=12), Name('protocols', Load(), lineno=716, col_offset=21), [For(Name('x', Store(), lineno=717, col_offset=16), Tuple([Name('None', Load(), lineno=717, col_offset=21), Name('False', Load(), lineno=717, col_offset=27), Name('True', Load(), lineno=717, col_offset=34)], Load(), lineno=717, col_offset=21), [Assign([Name('s', Store(), lineno=718, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=718, col_offset=20), 'dumps', Load(), lineno=718, col_offset=20), [Name('x', Load(), lineno=718, col_offset=31), Name('proto', Load(), lineno=718, col_offset=34)], [], None, None, lineno=718, col_offset=20), lineno=718, col_offset=16), Assign([Name('y', Store(), lineno=719, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=719, col_offset=20), 'loads', Load(), lineno=719, col_offset=20), [Name('s', Load(), lineno=719, col_offset=31)], [], None, None, lineno=719, col_offset=20), lineno=719, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=720, col_offset=16), 'assertTrue', Load(), lineno=720, col_offset=16), [Compare(Name('x', Load(), lineno=720, col_offset=32), [Is()], [Name('y', Load(), lineno=720, col_offset=37)], lineno=720, col_offset=32), Tuple([Name('proto', Load(), lineno=720, col_offset=41), Name('x', Load(), lineno=720, col_offset=48), Name('s', Load(), lineno=720, col_offset=51), Name('y', Load(), lineno=720, col_offset=54)], Load(), lineno=720, col_offset=41)], [], None, None, lineno=720, col_offset=16), lineno=720, col_offset=16), Assign([Name('expected', Store(), lineno=721, col_offset=16)], Subscript(Name('expected_opcode', Load(), lineno=721, col_offset=27), Index(Tuple([Name('proto', Load(), lineno=721, col_offset=43), Name('x', Load(), lineno=721, col_offset=50)], Load(), lineno=721, col_offset=43)), Load(), lineno=721, col_offset=27), lineno=721, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=722, col_offset=16), 'assertEqual', Load(), lineno=722, col_offset=16), [Call(Name('opcode_in_pickle', Load(), lineno=722, col_offset=33), [Name('expected', Load(), lineno=722, col_offset=50), Name('s', Load(), lineno=722, col_offset=60)], [], None, None, lineno=722, col_offset=33), Name('True', Load(), lineno=722, col_offset=64)], [], None, None, lineno=722, col_offset=16), lineno=722, col_offset=16)], [], lineno=717, col_offset=12)], [], lineno=716, col_offset=8)], [], lineno=702, col_offset=4), FunctionDef('test_newobj_tuple', arguments([Name('self', Param(), lineno=724, col_offset=26)], None, None, []), [Assign([Name('x', Store(), lineno=725, col_offset=8)], Call(Name('MyTuple', Load(), lineno=725, col_offset=12), [List([Num(1, lineno=725, col_offset=21), Num(2, lineno=725, col_offset=24), Num(3, lineno=725, col_offset=27)], Load(), lineno=725, col_offset=20)], [], None, None, lineno=725, col_offset=12), lineno=725, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=726, col_offset=8), 'foo', Store(), lineno=726, col_offset=8)], Num(42, lineno=726, col_offset=16), lineno=726, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=727, col_offset=8), 'bar', Store(), lineno=727, col_offset=8)], Str('hello', lineno=727, col_offset=16), lineno=727, col_offset=8), For(Name('proto', Store(), lineno=728, col_offset=12), Name('protocols', Load(), lineno=728, col_offset=21), [Assign([Name('s', Store(), lineno=729, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=729, col_offset=16), 'dumps', Load(), lineno=729, col_offset=16), [Name('x', Load(), lineno=729, col_offset=27), Name('proto', Load(), lineno=729, col_offset=30)], [], None, None, lineno=729, col_offset=16), lineno=729, col_offset=12), Assign([Name('y', Store(), lineno=730, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=730, col_offset=16), 'loads', Load(), lineno=730, col_offset=16), [Name('s', Load(), lineno=730, col_offset=27)], [], None, None, lineno=730, col_offset=16), lineno=730, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=731, col_offset=12), 'assertEqual', Load(), lineno=731, col_offset=12), [Call(Name('tuple', Load(), lineno=731, col_offset=29), [Name('x', Load(), lineno=731, col_offset=35)], [], None, None, lineno=731, col_offset=29), Call(Name('tuple', Load(), lineno=731, col_offset=39), [Name('y', Load(), lineno=731, col_offset=45)], [], None, None, lineno=731, col_offset=39)], [], None, None, lineno=731, col_offset=12), lineno=731, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=732, col_offset=12), 'assertEqual', Load(), lineno=732, col_offset=12), [Attribute(Name('x', Load(), lineno=732, col_offset=29), '__dict__', Load(), lineno=732, col_offset=29), Attribute(Name('y', Load(), lineno=732, col_offset=41), '__dict__', Load(), lineno=732, col_offset=41)], [], None, None, lineno=732, col_offset=12), lineno=732, col_offset=12)], [], lineno=728, col_offset=8)], [], lineno=724, col_offset=4), FunctionDef('test_newobj_list', arguments([Name('self', Param(), lineno=734, col_offset=25)], None, None, []), [Assign([Name('x', Store(), lineno=735, col_offset=8)], Call(Name('MyList', Load(), lineno=735, col_offset=12), [List([Num(1, lineno=735, col_offset=20), Num(2, lineno=735, col_offset=23), Num(3, lineno=735, col_offset=26)], Load(), lineno=735, col_offset=19)], [], None, None, lineno=735, col_offset=12), lineno=735, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=736, col_offset=8), 'foo', Store(), lineno=736, col_offset=8)], Num(42, lineno=736, col_offset=16), lineno=736, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=737, col_offset=8), 'bar', Store(), lineno=737, col_offset=8)], Str('hello', lineno=737, col_offset=16), lineno=737, col_offset=8), For(Name('proto', Store(), lineno=738, col_offset=12), Name('protocols', Load(), lineno=738, col_offset=21), [Assign([Name('s', Store(), lineno=739, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=739, col_offset=16), 'dumps', Load(), lineno=739, col_offset=16), [Name('x', Load(), lineno=739, col_offset=27), Name('proto', Load(), lineno=739, col_offset=30)], [], None, None, lineno=739, col_offset=16), lineno=739, col_offset=12), Assign([Name('y', Store(), lineno=740, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=740, col_offset=16), 'loads', Load(), lineno=740, col_offset=16), [Name('s', Load(), lineno=740, col_offset=27)], [], None, None, lineno=740, col_offset=16), lineno=740, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=741, col_offset=12), 'assertEqual', Load(), lineno=741, col_offset=12), [Call(Name('list', Load(), lineno=741, col_offset=29), [Name('x', Load(), lineno=741, col_offset=34)], [], None, None, lineno=741, col_offset=29), Call(Name('list', Load(), lineno=741, col_offset=38), [Name('y', Load(), lineno=741, col_offset=43)], [], None, None, lineno=741, col_offset=38)], [], None, None, lineno=741, col_offset=12), lineno=741, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=742, col_offset=12), 'assertEqual', Load(), lineno=742, col_offset=12), [Attribute(Name('x', Load(), lineno=742, col_offset=29), '__dict__', Load(), lineno=742, col_offset=29), Attribute(Name('y', Load(), lineno=742, col_offset=41), '__dict__', Load(), lineno=742, col_offset=41)], [], None, None, lineno=742, col_offset=12), lineno=742, col_offset=12)], [], lineno=738, col_offset=8)], [], lineno=734, col_offset=4), FunctionDef('test_newobj_generic', arguments([Name('self', Param(), lineno=744, col_offset=28)], None, None, []), [For(Name('proto', Store(), lineno=745, col_offset=12), Name('protocols', Load(), lineno=745, col_offset=21), [For(Name('C', Store(), lineno=746, col_offset=16), Name('myclasses', Load(), lineno=746, col_offset=21), [Assign([Name('B', Store(), lineno=747, col_offset=16)], Attribute(Name('C', Load(), lineno=747, col_offset=20), '__base__', Load(), lineno=747, col_offset=20), lineno=747, col_offset=16), Assign([Name('x', Store(), lineno=748, col_offset=16)], Call(Name('C', Load(), lineno=748, col_offset=20), [Attribute(Name('C', Load(), lineno=748, col_offset=22), 'sample', Load(), lineno=748, col_offset=22)], [], None, None, lineno=748, col_offset=20), lineno=748, col_offset=16), Assign([Attribute(Name('x', Load(), lineno=749, col_offset=16), 'foo', Store(), lineno=749, col_offset=16)], Num(42, lineno=749, col_offset=24), lineno=749, col_offset=16), Assign([Name('s', Store(), lineno=750, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=750, col_offset=20), 'dumps', Load(), lineno=750, col_offset=20), [Name('x', Load(), lineno=750, col_offset=31), Name('proto', Load(), lineno=750, col_offset=34)], [], None, None, lineno=750, col_offset=20), lineno=750, col_offset=16), Assign([Name('y', Store(), lineno=751, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=751, col_offset=20), 'loads', Load(), lineno=751, col_offset=20), [Name('s', Load(), lineno=751, col_offset=31)], [], None, None, lineno=751, col_offset=20), lineno=751, col_offset=16), Assign([Name('detail', Store(), lineno=752, col_offset=16)], Tuple([Name('proto', Load(), lineno=752, col_offset=26), Name('C', Load(), lineno=752, col_offset=33), Name('B', Load(), lineno=752, col_offset=36), Name('x', Load(), lineno=752, col_offset=39), Name('y', Load(), lineno=752, col_offset=42), Call(Name('type', Load(), lineno=752, col_offset=45), [Name('y', Load(), lineno=752, col_offset=50)], [], None, None, lineno=752, col_offset=45)], Load(), lineno=752, col_offset=26), lineno=752, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=753, col_offset=16), 'assertEqual', Load(), lineno=753, col_offset=16), [Call(Name('B', Load(), lineno=753, col_offset=33), [Name('x', Load(), lineno=753, col_offset=35)], [], None, None, lineno=753, col_offset=33), Call(Name('B', Load(), lineno=753, col_offset=39), [Name('y', Load(), lineno=753, col_offset=41)], [], None, None, lineno=753, col_offset=39), Name('detail', Load(), lineno=753, col_offset=45)], [], None, None, lineno=753, col_offset=16), lineno=753, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=754, col_offset=16), 'assertEqual', Load(), lineno=754, col_offset=16), [Attribute(Name('x', Load(), lineno=754, col_offset=33), '__dict__', Load(), lineno=754, col_offset=33), Attribute(Name('y', Load(), lineno=754, col_offset=45), '__dict__', Load(), lineno=754, col_offset=45), Name('detail', Load(), lineno=754, col_offset=57)], [], None, None, lineno=754, col_offset=16), lineno=754, col_offset=16)], [], lineno=746, col_offset=12)], [], lineno=745, col_offset=8)], [], lineno=744, col_offset=4), FunctionDef('produce_global_ext', arguments([Name('self', Param(), lineno=760, col_offset=27), Name('extcode', Param(), lineno=760, col_offset=33), Name('opcode', Param(), lineno=760, col_offset=42)], None, None, []), [Assign([Name('e', Store(), lineno=761, col_offset=8)], Call(Name('ExtensionSaver', Load(), lineno=761, col_offset=12), [Name('extcode', Load(), lineno=761, col_offset=27)], [], None, None, lineno=761, col_offset=12), lineno=761, col_offset=8), TryFinally([Expr(Call(Attribute(Name('copy_reg', Load(), lineno=763, col_offset=12), 'add_extension', Load(), lineno=763, col_offset=12), [Name('__name__', Load(), lineno=763, col_offset=35), Str('MyList', lineno=763, col_offset=45), Name('extcode', Load(), lineno=763, col_offset=55)], [], None, None, lineno=763, col_offset=12), lineno=763, col_offset=12), Assign([Name('x', Store(), lineno=764, col_offset=12)], Call(Name('MyList', Load(), lineno=764, col_offset=16), [List([Num(1, lineno=764, col_offset=24), Num(2, lineno=764, col_offset=27), Num(3, lineno=764, col_offset=30)], Load(), lineno=764, col_offset=23)], [], None, None, lineno=764, col_offset=16), lineno=764, col_offset=12), Assign([Attribute(Name('x', Load(), lineno=765, col_offset=12), 'foo', Store(), lineno=765, col_offset=12)], Num(42, lineno=765, col_offset=20), lineno=765, col_offset=12), Assign([Attribute(Name('x', Load(), lineno=766, col_offset=12), 'bar', Store(), lineno=766, col_offset=12)], Str('hello', lineno=766, col_offset=20), lineno=766, col_offset=12), Assign([Name('s1', Store(), lineno=769, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=769, col_offset=17), 'dumps', Load(), lineno=769, col_offset=17), [Name('x', Load(), lineno=769, col_offset=28), Num(1, lineno=769, col_offset=31)], [], None, None, lineno=769, col_offset=17), lineno=769, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=770, col_offset=12), 'assertIn', Load(), lineno=770, col_offset=12), [Name('__name__', Load(), lineno=770, col_offset=26), Name('s1', Load(), lineno=770, col_offset=36)], [], None, None, lineno=770, col_offset=12), lineno=770, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=771, col_offset=12), 'assertIn', Load(), lineno=771, col_offset=12), [Str('MyList', lineno=771, col_offset=26), Name('s1', Load(), lineno=771, col_offset=36)], [], None, None, lineno=771, col_offset=12), lineno=771, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=772, col_offset=12), 'assertEqual', Load(), lineno=772, col_offset=12), [Call(Name('opcode_in_pickle', Load(), lineno=772, col_offset=29), [Name('opcode', Load(), lineno=772, col_offset=46), Name('s1', Load(), lineno=772, col_offset=54)], [], None, None, lineno=772, col_offset=29), Name('False', Load(), lineno=772, col_offset=59)], [], None, None, lineno=772, col_offset=12), lineno=772, col_offset=12), Assign([Name('y', Store(), lineno=774, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=774, col_offset=16), 'loads', Load(), lineno=774, col_offset=16), [Name('s1', Load(), lineno=774, col_offset=27)], [], None, None, lineno=774, col_offset=16), lineno=774, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=775, col_offset=12), 'assertEqual', Load(), lineno=775, col_offset=12), [Call(Name('list', Load(), lineno=775, col_offset=29), [Name('x', Load(), lineno=775, col_offset=34)], [], None, None, lineno=775, col_offset=29), Call(Name('list', Load(), lineno=775, col_offset=38), [Name('y', Load(), lineno=775, col_offset=43)], [], None, None, lineno=775, col_offset=38)], [], None, None, lineno=775, col_offset=12), lineno=775, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=776, col_offset=12), 'assertEqual', Load(), lineno=776, col_offset=12), [Attribute(Name('x', Load(), lineno=776, col_offset=29), '__dict__', Load(), lineno=776, col_offset=29), Attribute(Name('y', Load(), lineno=776, col_offset=41), '__dict__', Load(), lineno=776, col_offset=41)], [], None, None, lineno=776, col_offset=12), lineno=776, col_offset=12), Assign([Name('s2', Store(), lineno=779, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=779, col_offset=17), 'dumps', Load(), lineno=779, col_offset=17), [Name('x', Load(), lineno=779, col_offset=28), Num(2, lineno=779, col_offset=31)], [], None, None, lineno=779, col_offset=17), lineno=779, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=780, col_offset=12), 'assertNotIn', Load(), lineno=780, col_offset=12), [Name('__name__', Load(), lineno=780, col_offset=29), Name('s2', Load(), lineno=780, col_offset=39)], [], None, None, lineno=780, col_offset=12), lineno=780, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=781, col_offset=12), 'assertNotIn', Load(), lineno=781, col_offset=12), [Str('MyList', lineno=781, col_offset=29), Name('s2', Load(), lineno=781, col_offset=39)], [], None, None, lineno=781, col_offset=12), lineno=781, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=782, col_offset=12), 'assertEqual', Load(), lineno=782, col_offset=12), [Call(Name('opcode_in_pickle', Load(), lineno=782, col_offset=29), [Name('opcode', Load(), lineno=782, col_offset=46), Name('s2', Load(), lineno=782, col_offset=54)], [], None, None, lineno=782, col_offset=29), Name('True', Load(), lineno=782, col_offset=59)], [], None, None, lineno=782, col_offset=12), lineno=782, col_offset=12), Assign([Name('y', Store(), lineno=784, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=784, col_offset=16), 'loads', Load(), lineno=784, col_offset=16), [Name('s2', Load(), lineno=784, col_offset=27)], [], None, None, lineno=784, col_offset=16), lineno=784, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=785, col_offset=12), 'assertEqual', Load(), lineno=785, col_offset=12), [Call(Name('list', Load(), lineno=785, col_offset=29), [Name('x', Load(), lineno=785, col_offset=34)], [], None, None, lineno=785, col_offset=29), Call(Name('list', Load(), lineno=785, col_offset=38), [Name('y', Load(), lineno=785, col_offset=43)], [], None, None, lineno=785, col_offset=38)], [], None, None, lineno=785, col_offset=12), lineno=785, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=786, col_offset=12), 'assertEqual', Load(), lineno=786, col_offset=12), [Attribute(Name('x', Load(), lineno=786, col_offset=29), '__dict__', Load(), lineno=786, col_offset=29), Attribute(Name('y', Load(), lineno=786, col_offset=41), '__dict__', Load(), lineno=786, col_offset=41)], [], None, None, lineno=786, col_offset=12), lineno=786, col_offset=12)], [Expr(Call(Attribute(Name('e', Load(), lineno=789, col_offset=12), 'restore', Load(), lineno=789, col_offset=12), [], [], None, None, lineno=789, col_offset=12), lineno=789, col_offset=12)], lineno=762, col_offset=8)], [], lineno=760, col_offset=4), FunctionDef('test_global_ext1', arguments([Name('self', Param(), lineno=791, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=792, col_offset=8), 'produce_global_ext', Load(), lineno=792, col_offset=8), [Num(1, lineno=792, col_offset=32), Attribute(Name('pickle', Load(), lineno=792, col_offset=44), 'EXT1', Load(), lineno=792, col_offset=44)], [], None, None, lineno=792, col_offset=8), lineno=792, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=793, col_offset=8), 'produce_global_ext', Load(), lineno=793, col_offset=8), [Num(255, lineno=793, col_offset=32), Attribute(Name('pickle', Load(), lineno=793, col_offset=44), 'EXT1', Load(), lineno=793, col_offset=44)], [], None, None, lineno=793, col_offset=8), lineno=793, col_offset=8)], [], lineno=791, col_offset=4), FunctionDef('test_global_ext2', arguments([Name('self', Param(), lineno=795, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=796, col_offset=8), 'produce_global_ext', Load(), lineno=796, col_offset=8), [Num(256, lineno=796, col_offset=32), Attribute(Name('pickle', Load(), lineno=796, col_offset=44), 'EXT2', Load(), lineno=796, col_offset=44)], [], None, None, lineno=796, col_offset=8), lineno=796, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=797, col_offset=8), 'produce_global_ext', Load(), lineno=797, col_offset=8), [Num(65535, lineno=797, col_offset=32), Attribute(Name('pickle', Load(), lineno=797, col_offset=44), 'EXT2', Load(), lineno=797, col_offset=44)], [], None, None, lineno=797, col_offset=8), lineno=797, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=798, col_offset=8), 'produce_global_ext', Load(), lineno=798, col_offset=8), [Num(43981, lineno=798, col_offset=32), Attribute(Name('pickle', Load(), lineno=798, col_offset=44), 'EXT2', Load(), lineno=798, col_offset=44)], [], None, None, lineno=798, col_offset=8), lineno=798, col_offset=8)], [], lineno=795, col_offset=4), FunctionDef('test_global_ext4', arguments([Name('self', Param(), lineno=800, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=801, col_offset=8), 'produce_global_ext', Load(), lineno=801, col_offset=8), [Num(65536, lineno=801, col_offset=32), Attribute(Name('pickle', Load(), lineno=801, col_offset=44), 'EXT4', Load(), lineno=801, col_offset=44)], [], None, None, lineno=801, col_offset=8), lineno=801, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=802, col_offset=8), 'produce_global_ext', Load(), lineno=802, col_offset=8), [Num(2147483647, lineno=802, col_offset=32), Attribute(Name('pickle', Load(), lineno=802, col_offset=44), 'EXT4', Load(), lineno=802, col_offset=44)], [], None, None, lineno=802, col_offset=8), lineno=802, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=803, col_offset=8), 'produce_global_ext', Load(), lineno=803, col_offset=8), [Num(313249263, lineno=803, col_offset=32), Attribute(Name('pickle', Load(), lineno=803, col_offset=44), 'EXT4', Load(), lineno=803, col_offset=44)], [], None, None, lineno=803, col_offset=8), lineno=803, col_offset=8)], [], lineno=800, col_offset=4), FunctionDef('test_list_chunking', arguments([Name('self', Param(), lineno=805, col_offset=27)], None, None, []), [Assign([Name('n', Store(), lineno=806, col_offset=8)], Num(10, lineno=806, col_offset=12), lineno=806, col_offset=8), Assign([Name('x', Store(), lineno=807, col_offset=8)], Call(Name('range', Load(), lineno=807, col_offset=12), [Name('n', Load(), lineno=807, col_offset=18)], [], None, None, lineno=807, col_offset=12), lineno=807, col_offset=8), For(Name('proto', Store(), lineno=808, col_offset=12), Name('protocols', Load(), lineno=808, col_offset=21), [Assign([Name('s', Store(), lineno=809, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=809, col_offset=16), 'dumps', Load(), lineno=809, col_offset=16), [Name('x', Load(), lineno=809, col_offset=27), Name('proto', Load(), lineno=809, col_offset=30)], [], None, None, lineno=809, col_offset=16), lineno=809, col_offset=12), Assign([Name('y', Store(), lineno=810, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=810, col_offset=16), 'loads', Load(), lineno=810, col_offset=16), [Name('s', Load(), lineno=810, col_offset=27)], [], None, None, lineno=810, col_offset=16), lineno=810, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=811, col_offset=12), 'assertEqual', Load(), lineno=811, col_offset=12), [Name('x', Load(), lineno=811, col_offset=29), Name('y', Load(), lineno=811, col_offset=32)], [], None, None, lineno=811, col_offset=12), lineno=811, col_offset=12), Assign([Name('num_appends', Store(), lineno=812, col_offset=12)], Call(Name('count_opcode', Load(), lineno=812, col_offset=26), [Attribute(Name('pickle', Load(), lineno=812, col_offset=39), 'APPENDS', Load(), lineno=812, col_offset=39), Name('s', Load(), lineno=812, col_offset=55)], [], None, None, lineno=812, col_offset=26), lineno=812, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=813, col_offset=12), 'assertEqual', Load(), lineno=813, col_offset=12), [Name('num_appends', Load(), lineno=813, col_offset=29), Compare(Name('proto', Load(), lineno=813, col_offset=42), [Gt()], [Num(0, lineno=813, col_offset=50)], lineno=813, col_offset=42)], [], None, None, lineno=813, col_offset=12), lineno=813, col_offset=12)], [], lineno=808, col_offset=8), Assign([Name('n', Store(), lineno=815, col_offset=8)], Num(2500, lineno=815, col_offset=12), lineno=815, col_offset=8), Assign([Name('x', Store(), lineno=816, col_offset=8)], Call(Name('range', Load(), lineno=816, col_offset=12), [Name('n', Load(), lineno=816, col_offset=18)], [], None, None, lineno=816, col_offset=12), lineno=816, col_offset=8), For(Name('proto', Store(), lineno=817, col_offset=12), Name('protocols', Load(), lineno=817, col_offset=21), [Assign([Name('s', Store(), lineno=818, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=818, col_offset=16), 'dumps', Load(), lineno=818, col_offset=16), [Name('x', Load(), lineno=818, col_offset=27), Name('proto', Load(), lineno=818, col_offset=30)], [], None, None, lineno=818, col_offset=16), lineno=818, col_offset=12), Assign([Name('y', Store(), lineno=819, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=819, col_offset=16), 'loads', Load(), lineno=819, col_offset=16), [Name('s', Load(), lineno=819, col_offset=27)], [], None, None, lineno=819, col_offset=16), lineno=819, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=820, col_offset=12), 'assertEqual', Load(), lineno=820, col_offset=12), [Name('x', Load(), lineno=820, col_offset=29), Name('y', Load(), lineno=820, col_offset=32)], [], None, None, lineno=820, col_offset=12), lineno=820, col_offset=12), Assign([Name('num_appends', Store(), lineno=821, col_offset=12)], Call(Name('count_opcode', Load(), lineno=821, col_offset=26), [Attribute(Name('pickle', Load(), lineno=821, col_offset=39), 'APPENDS', Load(), lineno=821, col_offset=39), Name('s', Load(), lineno=821, col_offset=55)], [], None, None, lineno=821, col_offset=26), lineno=821, col_offset=12), If(Compare(Name('proto', Load(), lineno=822, col_offset=15), [Eq()], [Num(0, lineno=822, col_offset=24)], lineno=822, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=823, col_offset=16), 'assertEqual', Load(), lineno=823, col_offset=16), [Name('num_appends', Load(), lineno=823, col_offset=33), Num(0, lineno=823, col_offset=46)], [], None, None, lineno=823, col_offset=16), lineno=823, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=825, col_offset=16), 'assertTrue', Load(), lineno=825, col_offset=16), [Compare(Name('num_appends', Load(), lineno=825, col_offset=32), [GtE()], [Num(2, lineno=825, col_offset=47)], lineno=825, col_offset=32)], [], None, None, lineno=825, col_offset=16), lineno=825, col_offset=16)], lineno=822, col_offset=12)], [], lineno=817, col_offset=8)], [], lineno=805, col_offset=4), FunctionDef('test_dict_chunking', arguments([Name('self', Param(), lineno=827, col_offset=27)], None, None, []), [Assign([Name('n', Store(), lineno=828, col_offset=8)], Num(10, lineno=828, col_offset=12), lineno=828, col_offset=8), Assign([Name('x', Store(), lineno=829, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=829, col_offset=12), 'fromkeys', Load(), lineno=829, col_offset=12), [Call(Name('range', Load(), lineno=829, col_offset=26), [Name('n', Load(), lineno=829, col_offset=32)], [], None, None, lineno=829, col_offset=26)], [], None, None, lineno=829, col_offset=12), lineno=829, col_offset=8), For(Name('proto', Store(), lineno=830, col_offset=12), Name('protocols', Load(), lineno=830, col_offset=21), [Assign([Name('s', Store(), lineno=831, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=831, col_offset=16), 'dumps', Load(), lineno=831, col_offset=16), [Name('x', Load(), lineno=831, col_offset=27), Name('proto', Load(), lineno=831, col_offset=30)], [], None, None, lineno=831, col_offset=16), lineno=831, col_offset=12), Assign([Name('y', Store(), lineno=832, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=832, col_offset=16), 'loads', Load(), lineno=832, col_offset=16), [Name('s', Load(), lineno=832, col_offset=27)], [], None, None, lineno=832, col_offset=16), lineno=832, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=833, col_offset=12), 'assertEqual', Load(), lineno=833, col_offset=12), [Name('x', Load(), lineno=833, col_offset=29), Name('y', Load(), lineno=833, col_offset=32)], [], None, None, lineno=833, col_offset=12), lineno=833, col_offset=12), Assign([Name('num_setitems', Store(), lineno=834, col_offset=12)], Call(Name('count_opcode', Load(), lineno=834, col_offset=27), [Attribute(Name('pickle', Load(), lineno=834, col_offset=40), 'SETITEMS', Load(), lineno=834, col_offset=40), Name('s', Load(), lineno=834, col_offset=57)], [], None, None, lineno=834, col_offset=27), lineno=834, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=835, col_offset=12), 'assertEqual', Load(), lineno=835, col_offset=12), [Name('num_setitems', Load(), lineno=835, col_offset=29), Compare(Name('proto', Load(), lineno=835, col_offset=43), [Gt()], [Num(0, lineno=835, col_offset=51)], lineno=835, col_offset=43)], [], None, None, lineno=835, col_offset=12), lineno=835, col_offset=12)], [], lineno=830, col_offset=8), Assign([Name('n', Store(), lineno=837, col_offset=8)], Num(2500, lineno=837, col_offset=12), lineno=837, col_offset=8), Assign([Name('x', Store(), lineno=838, col_offset=8)], Call(Attribute(Name('dict', Load(), lineno=838, col_offset=12), 'fromkeys', Load(), lineno=838, col_offset=12), [Call(Name('range', Load(), lineno=838, col_offset=26), [Name('n', Load(), lineno=838, col_offset=32)], [], None, None, lineno=838, col_offset=26)], [], None, None, lineno=838, col_offset=12), lineno=838, col_offset=8), For(Name('proto', Store(), lineno=839, col_offset=12), Name('protocols', Load(), lineno=839, col_offset=21), [Assign([Name('s', Store(), lineno=840, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=840, col_offset=16), 'dumps', Load(), lineno=840, col_offset=16), [Name('x', Load(), lineno=840, col_offset=27), Name('proto', Load(), lineno=840, col_offset=30)], [], None, None, lineno=840, col_offset=16), lineno=840, col_offset=12), Assign([Name('y', Store(), lineno=841, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=841, col_offset=16), 'loads', Load(), lineno=841, col_offset=16), [Name('s', Load(), lineno=841, col_offset=27)], [], None, None, lineno=841, col_offset=16), lineno=841, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=842, col_offset=12), 'assertEqual', Load(), lineno=842, col_offset=12), [Name('x', Load(), lineno=842, col_offset=29), Name('y', Load(), lineno=842, col_offset=32)], [], None, None, lineno=842, col_offset=12), lineno=842, col_offset=12), Assign([Name('num_setitems', Store(), lineno=843, col_offset=12)], Call(Name('count_opcode', Load(), lineno=843, col_offset=27), [Attribute(Name('pickle', Load(), lineno=843, col_offset=40), 'SETITEMS', Load(), lineno=843, col_offset=40), Name('s', Load(), lineno=843, col_offset=57)], [], None, None, lineno=843, col_offset=27), lineno=843, col_offset=12), If(Compare(Name('proto', Load(), lineno=844, col_offset=15), [Eq()], [Num(0, lineno=844, col_offset=24)], lineno=844, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=845, col_offset=16), 'assertEqual', Load(), lineno=845, col_offset=16), [Name('num_setitems', Load(), lineno=845, col_offset=33), Num(0, lineno=845, col_offset=47)], [], None, None, lineno=845, col_offset=16), lineno=845, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=847, col_offset=16), 'assertTrue', Load(), lineno=847, col_offset=16), [Compare(Name('num_setitems', Load(), lineno=847, col_offset=32), [GtE()], [Num(2, lineno=847, col_offset=48)], lineno=847, col_offset=32)], [], None, None, lineno=847, col_offset=16), lineno=847, col_offset=16)], lineno=844, col_offset=12)], [], lineno=839, col_offset=8)], [], lineno=827, col_offset=4), FunctionDef('test_simple_newobj', arguments([Name('self', Param(), lineno=849, col_offset=27)], None, None, []), [Assign([Name('x', Store(), lineno=850, col_offset=8)], Call(Attribute(Name('object', Load(), lineno=850, col_offset=12), '__new__', Load(), lineno=850, col_offset=12), [Name('SimpleNewObj', Load(), lineno=850, col_offset=27)], [], None, None, lineno=850, col_offset=12), lineno=850, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=851, col_offset=8), 'abc', Store(), lineno=851, col_offset=8)], Num(666, lineno=851, col_offset=16), lineno=851, col_offset=8), For(Name('proto', Store(), lineno=852, col_offset=12), Name('protocols', Load(), lineno=852, col_offset=21), [Assign([Name('s', Store(), lineno=853, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=853, col_offset=16), 'dumps', Load(), lineno=853, col_offset=16), [Name('x', Load(), lineno=853, col_offset=27), Name('proto', Load(), lineno=853, col_offset=30)], [], None, None, lineno=853, col_offset=16), lineno=853, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=854, col_offset=12), 'assertEqual', Load(), lineno=854, col_offset=12), [Call(Name('opcode_in_pickle', Load(), lineno=854, col_offset=29), [Attribute(Name('pickle', Load(), lineno=854, col_offset=46), 'NEWOBJ', Load(), lineno=854, col_offset=46), Name('s', Load(), lineno=854, col_offset=61)], [], None, None, lineno=854, col_offset=29), Compare(Name('proto', Load(), lineno=854, col_offset=65), [GtE()], [Num(2, lineno=854, col_offset=74)], lineno=854, col_offset=65)], [], None, None, lineno=854, col_offset=12), lineno=854, col_offset=12), Assign([Name('y', Store(), lineno=855, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=855, col_offset=16), 'loads', Load(), lineno=855, col_offset=16), [Name('s', Load(), lineno=855, col_offset=27)], [], None, None, lineno=855, col_offset=16), lineno=855, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=856, col_offset=12), 'assertEqual', Load(), lineno=856, col_offset=12), [Attribute(Name('y', Load(), lineno=856, col_offset=29), 'abc', Load(), lineno=856, col_offset=29), Num(666, lineno=856, col_offset=36)], [], None, None, lineno=856, col_offset=12), lineno=856, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=857, col_offset=12), 'assertEqual', Load(), lineno=857, col_offset=12), [Attribute(Name('x', Load(), lineno=857, col_offset=29), '__dict__', Load(), lineno=857, col_offset=29), Attribute(Name('y', Load(), lineno=857, col_offset=41), '__dict__', Load(), lineno=857, col_offset=41)], [], None, None, lineno=857, col_offset=12), lineno=857, col_offset=12)], [], lineno=852, col_offset=8)], [], lineno=849, col_offset=4), FunctionDef('test_newobj_list_slots', arguments([Name('self', Param(), lineno=859, col_offset=31)], None, None, []), [Assign([Name('x', Store(), lineno=860, col_offset=8)], Call(Name('SlotList', Load(), lineno=860, col_offset=12), [List([Num(1, lineno=860, col_offset=22), Num(2, lineno=860, col_offset=25), Num(3, lineno=860, col_offset=28)], Load(), lineno=860, col_offset=21)], [], None, None, lineno=860, col_offset=12), lineno=860, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=861, col_offset=8), 'foo', Store(), lineno=861, col_offset=8)], Num(42, lineno=861, col_offset=16), lineno=861, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=862, col_offset=8), 'bar', Store(), lineno=862, col_offset=8)], Str('hello', lineno=862, col_offset=16), lineno=862, col_offset=8), Assign([Name('s', Store(), lineno=863, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=863, col_offset=12), 'dumps', Load(), lineno=863, col_offset=12), [Name('x', Load(), lineno=863, col_offset=23), Num(2, lineno=863, col_offset=26)], [], None, None, lineno=863, col_offset=12), lineno=863, col_offset=8), Assign([Name('y', Store(), lineno=864, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=864, col_offset=12), 'loads', Load(), lineno=864, col_offset=12), [Name('s', Load(), lineno=864, col_offset=23)], [], None, None, lineno=864, col_offset=12), lineno=864, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=865, col_offset=8), 'assertEqual', Load(), lineno=865, col_offset=8), [Call(Name('list', Load(), lineno=865, col_offset=25), [Name('x', Load(), lineno=865, col_offset=30)], [], None, None, lineno=865, col_offset=25), Call(Name('list', Load(), lineno=865, col_offset=34), [Name('y', Load(), lineno=865, col_offset=39)], [], None, None, lineno=865, col_offset=34)], [], None, None, lineno=865, col_offset=8), lineno=865, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=866, col_offset=8), 'assertEqual', Load(), lineno=866, col_offset=8), [Attribute(Name('x', Load(), lineno=866, col_offset=25), '__dict__', Load(), lineno=866, col_offset=25), Attribute(Name('y', Load(), lineno=866, col_offset=37), '__dict__', Load(), lineno=866, col_offset=37)], [], None, None, lineno=866, col_offset=8), lineno=866, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=867, col_offset=8), 'assertEqual', Load(), lineno=867, col_offset=8), [Attribute(Name('x', Load(), lineno=867, col_offset=25), 'foo', Load(), lineno=867, col_offset=25), Attribute(Name('y', Load(), lineno=867, col_offset=32), 'foo', Load(), lineno=867, col_offset=32)], [], None, None, lineno=867, col_offset=8), lineno=867, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=868, col_offset=8), 'assertEqual', Load(), lineno=868, col_offset=8), [Attribute(Name('x', Load(), lineno=868, col_offset=25), 'bar', Load(), lineno=868, col_offset=25), Attribute(Name('y', Load(), lineno=868, col_offset=32), 'bar', Load(), lineno=868, col_offset=32)], [], None, None, lineno=868, col_offset=8), lineno=868, col_offset=8)], [], lineno=859, col_offset=4), FunctionDef('test_reduce_overrides_default_reduce_ex', arguments([Name('self', Param(), lineno=870, col_offset=48)], None, None, []), [For(Name('proto', Store(), lineno=871, col_offset=12), Name('protocols', Load(), lineno=871, col_offset=21), [Assign([Name('x', Store(), lineno=872, col_offset=12)], Call(Name('REX_one', Load(), lineno=872, col_offset=16), [], [], None, None, lineno=872, col_offset=16), lineno=872, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=873, col_offset=12), 'assertEqual', Load(), lineno=873, col_offset=12), [Attribute(Name('x', Load(), lineno=873, col_offset=29), '_reduce_called', Load(), lineno=873, col_offset=29), Num(0, lineno=873, col_offset=47)], [], None, None, lineno=873, col_offset=12), lineno=873, col_offset=12), Assign([Name('s', Store(), lineno=874, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=874, col_offset=16), 'dumps', Load(), lineno=874, col_offset=16), [Name('x', Load(), lineno=874, col_offset=27), Name('proto', Load(), lineno=874, col_offset=30)], [], None, None, lineno=874, col_offset=16), lineno=874, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=875, col_offset=12), 'assertEqual', Load(), lineno=875, col_offset=12), [Attribute(Name('x', Load(), lineno=875, col_offset=29), '_reduce_called', Load(), lineno=875, col_offset=29), Num(1, lineno=875, col_offset=47)], [], None, None, lineno=875, col_offset=12), lineno=875, col_offset=12), Assign([Name('y', Store(), lineno=876, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=876, col_offset=16), 'loads', Load(), lineno=876, col_offset=16), [Name('s', Load(), lineno=876, col_offset=27)], [], None, None, lineno=876, col_offset=16), lineno=876, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=877, col_offset=12), 'assertEqual', Load(), lineno=877, col_offset=12), [Attribute(Name('y', Load(), lineno=877, col_offset=29), '_reduce_called', Load(), lineno=877, col_offset=29), Num(0, lineno=877, col_offset=47)], [], None, None, lineno=877, col_offset=12), lineno=877, col_offset=12)], [], lineno=871, col_offset=8)], [], lineno=870, col_offset=4), FunctionDef('test_reduce_ex_called', arguments([Name('self', Param(), lineno=879, col_offset=30)], None, None, []), [For(Name('proto', Store(), lineno=880, col_offset=12), Name('protocols', Load(), lineno=880, col_offset=21), [Assign([Name('x', Store(), lineno=881, col_offset=12)], Call(Name('REX_two', Load(), lineno=881, col_offset=16), [], [], None, None, lineno=881, col_offset=16), lineno=881, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=882, col_offset=12), 'assertEqual', Load(), lineno=882, col_offset=12), [Attribute(Name('x', Load(), lineno=882, col_offset=29), '_proto', Load(), lineno=882, col_offset=29), Name('None', Load(), lineno=882, col_offset=39)], [], None, None, lineno=882, col_offset=12), lineno=882, col_offset=12), Assign([Name('s', Store(), lineno=883, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=883, col_offset=16), 'dumps', Load(), lineno=883, col_offset=16), [Name('x', Load(), lineno=883, col_offset=27), Name('proto', Load(), lineno=883, col_offset=30)], [], None, None, lineno=883, col_offset=16), lineno=883, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=884, col_offset=12), 'assertEqual', Load(), lineno=884, col_offset=12), [Attribute(Name('x', Load(), lineno=884, col_offset=29), '_proto', Load(), lineno=884, col_offset=29), Name('proto', Load(), lineno=884, col_offset=39)], [], None, None, lineno=884, col_offset=12), lineno=884, col_offset=12), Assign([Name('y', Store(), lineno=885, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=885, col_offset=16), 'loads', Load(), lineno=885, col_offset=16), [Name('s', Load(), lineno=885, col_offset=27)], [], None, None, lineno=885, col_offset=16), lineno=885, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=886, col_offset=12), 'assertEqual', Load(), lineno=886, col_offset=12), [Attribute(Name('y', Load(), lineno=886, col_offset=29), '_proto', Load(), lineno=886, col_offset=29), Name('None', Load(), lineno=886, col_offset=39)], [], None, None, lineno=886, col_offset=12), lineno=886, col_offset=12)], [], lineno=880, col_offset=8)], [], lineno=879, col_offset=4), FunctionDef('test_reduce_ex_overrides_reduce', arguments([Name('self', Param(), lineno=888, col_offset=40)], None, None, []), [For(Name('proto', Store(), lineno=889, col_offset=12), Name('protocols', Load(), lineno=889, col_offset=21), [Assign([Name('x', Store(), lineno=890, col_offset=12)], Call(Name('REX_three', Load(), lineno=890, col_offset=16), [], [], None, None, lineno=890, col_offset=16), lineno=890, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=891, col_offset=12), 'assertEqual', Load(), lineno=891, col_offset=12), [Attribute(Name('x', Load(), lineno=891, col_offset=29), '_proto', Load(), lineno=891, col_offset=29), Name('None', Load(), lineno=891, col_offset=39)], [], None, None, lineno=891, col_offset=12), lineno=891, col_offset=12), Assign([Name('s', Store(), lineno=892, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=892, col_offset=16), 'dumps', Load(), lineno=892, col_offset=16), [Name('x', Load(), lineno=892, col_offset=27), Name('proto', Load(), lineno=892, col_offset=30)], [], None, None, lineno=892, col_offset=16), lineno=892, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=893, col_offset=12), 'assertEqual', Load(), lineno=893, col_offset=12), [Attribute(Name('x', Load(), lineno=893, col_offset=29), '_proto', Load(), lineno=893, col_offset=29), Name('proto', Load(), lineno=893, col_offset=39)], [], None, None, lineno=893, col_offset=12), lineno=893, col_offset=12), Assign([Name('y', Store(), lineno=894, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=894, col_offset=16), 'loads', Load(), lineno=894, col_offset=16), [Name('s', Load(), lineno=894, col_offset=27)], [], None, None, lineno=894, col_offset=16), lineno=894, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=895, col_offset=12), 'assertEqual', Load(), lineno=895, col_offset=12), [Attribute(Name('y', Load(), lineno=895, col_offset=29), '_proto', Load(), lineno=895, col_offset=29), Name('None', Load(), lineno=895, col_offset=39)], [], None, None, lineno=895, col_offset=12), lineno=895, col_offset=12)], [], lineno=889, col_offset=8)], [], lineno=888, col_offset=4), FunctionDef('test_reduce_ex_calls_base', arguments([Name('self', Param(), lineno=897, col_offset=34)], None, None, []), [For(Name('proto', Store(), lineno=898, col_offset=12), Name('protocols', Load(), lineno=898, col_offset=21), [Assign([Name('x', Store(), lineno=899, col_offset=12)], Call(Name('REX_four', Load(), lineno=899, col_offset=16), [], [], None, None, lineno=899, col_offset=16), lineno=899, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=900, col_offset=12), 'assertEqual', Load(), lineno=900, col_offset=12), [Attribute(Name('x', Load(), lineno=900, col_offset=29), '_proto', Load(), lineno=900, col_offset=29), Name('None', Load(), lineno=900, col_offset=39)], [], None, None, lineno=900, col_offset=12), lineno=900, col_offset=12), Assign([Name('s', Store(), lineno=901, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=901, col_offset=16), 'dumps', Load(), lineno=901, col_offset=16), [Name('x', Load(), lineno=901, col_offset=27), Name('proto', Load(), lineno=901, col_offset=30)], [], None, None, lineno=901, col_offset=16), lineno=901, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=902, col_offset=12), 'assertEqual', Load(), lineno=902, col_offset=12), [Attribute(Name('x', Load(), lineno=902, col_offset=29), '_proto', Load(), lineno=902, col_offset=29), Name('proto', Load(), lineno=902, col_offset=39)], [], None, None, lineno=902, col_offset=12), lineno=902, col_offset=12), Assign([Name('y', Store(), lineno=903, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=903, col_offset=16), 'loads', Load(), lineno=903, col_offset=16), [Name('s', Load(), lineno=903, col_offset=27)], [], None, None, lineno=903, col_offset=16), lineno=903, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=904, col_offset=12), 'assertEqual', Load(), lineno=904, col_offset=12), [Attribute(Name('y', Load(), lineno=904, col_offset=29), '_proto', Load(), lineno=904, col_offset=29), Name('proto', Load(), lineno=904, col_offset=39)], [], None, None, lineno=904, col_offset=12), lineno=904, col_offset=12)], [], lineno=898, col_offset=8)], [], lineno=897, col_offset=4), FunctionDef('test_reduce_calls_base', arguments([Name('self', Param(), lineno=906, col_offset=31)], None, None, []), [For(Name('proto', Store(), lineno=907, col_offset=12), Name('protocols', Load(), lineno=907, col_offset=21), [Assign([Name('x', Store(), lineno=908, col_offset=12)], Call(Name('REX_five', Load(), lineno=908, col_offset=16), [], [], None, None, lineno=908, col_offset=16), lineno=908, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=909, col_offset=12), 'assertEqual', Load(), lineno=909, col_offset=12), [Attribute(Name('x', Load(), lineno=909, col_offset=29), '_reduce_called', Load(), lineno=909, col_offset=29), Num(0, lineno=909, col_offset=47)], [], None, None, lineno=909, col_offset=12), lineno=909, col_offset=12), Assign([Name('s', Store(), lineno=910, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=910, col_offset=16), 'dumps', Load(), lineno=910, col_offset=16), [Name('x', Load(), lineno=910, col_offset=27), Name('proto', Load(), lineno=910, col_offset=30)], [], None, None, lineno=910, col_offset=16), lineno=910, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=911, col_offset=12), 'assertEqual', Load(), lineno=911, col_offset=12), [Attribute(Name('x', Load(), lineno=911, col_offset=29), '_reduce_called', Load(), lineno=911, col_offset=29), Num(1, lineno=911, col_offset=47)], [], None, None, lineno=911, col_offset=12), lineno=911, col_offset=12), Assign([Name('y', Store(), lineno=912, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=912, col_offset=16), 'loads', Load(), lineno=912, col_offset=16), [Name('s', Load(), lineno=912, col_offset=27)], [], None, None, lineno=912, col_offset=16), lineno=912, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=913, col_offset=12), 'assertEqual', Load(), lineno=913, col_offset=12), [Attribute(Name('y', Load(), lineno=913, col_offset=29), '_reduce_called', Load(), lineno=913, col_offset=29), Num(1, lineno=913, col_offset=47)], [], None, None, lineno=913, col_offset=12), lineno=913, col_offset=12)], [], lineno=907, col_offset=8)], [], lineno=906, col_offset=4), FunctionDef('test_reduce_bad_iterator', arguments([Name('self', Param(), lineno=915, col_offset=33)], None, None, []), [ClassDef('C', [Name('object', Load(), lineno=918, col_offset=16)], [FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=919, col_offset=27)], None, None, []), [Return(Tuple([Name('list', Load(), lineno=921, col_offset=23), Tuple([], Load(), lineno=921, col_offset=29), Name('None', Load(), lineno=921, col_offset=33), List([], Load(), lineno=921, col_offset=39), Name('None', Load(), lineno=921, col_offset=43)], Load(), lineno=921, col_offset=23), lineno=921, col_offset=16)], [], lineno=919, col_offset=12)], [], lineno=918, col_offset=8), ClassDef('D', [Name('object', Load(), lineno=922, col_offset=16)], [FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=923, col_offset=27)], None, None, []), [Return(Tuple([Name('dict', Load(), lineno=925, col_offset=23), Tuple([], Load(), lineno=925, col_offset=29), Name('None', Load(), lineno=925, col_offset=33), Name('None', Load(), lineno=925, col_offset=39), List([], Load(), lineno=925, col_offset=45)], Load(), lineno=925, col_offset=23), lineno=925, col_offset=16)], [], lineno=923, col_offset=12)], [], lineno=922, col_offset=8), For(Name('proto', Store(), lineno=928, col_offset=12), Name('protocols', Load(), lineno=928, col_offset=21), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=930, col_offset=16), 'dumps', Load(), lineno=930, col_offset=16), [Call(Name('C', Load(), lineno=930, col_offset=27), [], [], None, None, lineno=930, col_offset=27), Name('proto', Load(), lineno=930, col_offset=32)], [], None, None, lineno=930, col_offset=16), lineno=930, col_offset=16)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=931, col_offset=20), Attribute(Name('pickle', Load(), lineno=931, col_offset=36), 'PickleError', Load(), lineno=931, col_offset=36), Attribute(Name('cPickle', Load(), lineno=931, col_offset=56), 'PickleError', Load(), lineno=931, col_offset=56)], Load(), lineno=931, col_offset=20), None, [Pass( lineno=932, col_offset=16)], lineno=931, col_offset=12)], [], lineno=929, col_offset=12), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=934, col_offset=16), 'dumps', Load(), lineno=934, col_offset=16), [Call(Name('D', Load(), lineno=934, col_offset=27), [], [], None, None, lineno=934, col_offset=27), Name('proto', Load(), lineno=934, col_offset=32)], [], None, None, lineno=934, col_offset=16), lineno=934, col_offset=16)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=935, col_offset=20), Attribute(Name('pickle', Load(), lineno=935, col_offset=36), 'PickleError', Load(), lineno=935, col_offset=36), Attribute(Name('cPickle', Load(), lineno=935, col_offset=56), 'PickleError', Load(), lineno=935, col_offset=56)], Load(), lineno=935, col_offset=20), None, [Pass( lineno=936, col_offset=16)], lineno=935, col_offset=12)], [], lineno=933, col_offset=12)], [], lineno=928, col_offset=8)], [], lineno=915, col_offset=4), FunctionDef('test_many_puts_and_gets', arguments([Name('self', Param(), lineno=938, col_offset=32)], None, None, []), [Assign([Name('keys', Store(), lineno=941, col_offset=8)], GeneratorExp(BinOp(Str('aaa', lineno=941, col_offset=16), Add(), Call(Name('str', Load(), lineno=941, col_offset=24), [Name('i', Load(), lineno=941, col_offset=28)], [], None, None, lineno=941, col_offset=24), lineno=941, col_offset=16), [comprehension(Name('i', Store(), lineno=941, col_offset=35), Call(Name('xrange', Load(), lineno=941, col_offset=40), [Num(100, lineno=941, col_offset=47)], [], None, None, lineno=941, col_offset=40), [])], lineno=941, col_offset=16), lineno=941, col_offset=8), Assign([Name('large_dict', Store(), lineno=942, col_offset=8)], Call(Name('dict', Load(), lineno=942, col_offset=21), [GeneratorExp(Tuple([Name('k', Load(), lineno=942, col_offset=27), List([Num(4, lineno=942, col_offset=31), Num(5, lineno=942, col_offset=34), Num(6, lineno=942, col_offset=37)], Load(), lineno=942, col_offset=30)], Load(), lineno=942, col_offset=27), [comprehension(Name('k', Store(), lineno=942, col_offset=45), Name('keys', Load(), lineno=942, col_offset=50), [])], lineno=942, col_offset=26)], [], None, None, lineno=942, col_offset=21), lineno=942, col_offset=8), Assign([Name('obj', Store(), lineno=943, col_offset=8)], List([Call(Name('dict', Load(), lineno=943, col_offset=15), [Name('large_dict', Load(), lineno=943, col_offset=20)], [], None, None, lineno=943, col_offset=15), Call(Name('dict', Load(), lineno=943, col_offset=33), [Name('large_dict', Load(), lineno=943, col_offset=38)], [], None, None, lineno=943, col_offset=33), Call(Name('dict', Load(), lineno=943, col_offset=51), [Name('large_dict', Load(), lineno=943, col_offset=56)], [], None, None, lineno=943, col_offset=51)], Load(), lineno=943, col_offset=14), lineno=943, col_offset=8), For(Name('proto', Store(), lineno=945, col_offset=12), Name('protocols', Load(), lineno=945, col_offset=21), [Assign([Name('dumped', Store(), lineno=946, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=946, col_offset=21), 'dumps', Load(), lineno=946, col_offset=21), [Name('obj', Load(), lineno=946, col_offset=32), Name('proto', Load(), lineno=946, col_offset=37)], [], None, None, lineno=946, col_offset=21), lineno=946, col_offset=12), Assign([Name('loaded', Store(), lineno=947, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=947, col_offset=21), 'loads', Load(), lineno=947, col_offset=21), [Name('dumped', Load(), lineno=947, col_offset=32)], [], None, None, lineno=947, col_offset=21), lineno=947, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=948, col_offset=12), 'assertEqual', Load(), lineno=948, col_offset=12), [Name('loaded', Load(), lineno=948, col_offset=29), Name('obj', Load(), lineno=948, col_offset=37), BinOp(Str('Failed protocol %d: %r != %r', lineno=949, col_offset=29), Mod(), Tuple([Name('proto', Load(), lineno=950, col_offset=32), Name('obj', Load(), lineno=950, col_offset=39), Name('loaded', Load(), lineno=950, col_offset=44)], Load(), lineno=950, col_offset=32), lineno=949, col_offset=29)], [], None, None, lineno=948, col_offset=12), lineno=948, col_offset=12)], [], lineno=945, col_offset=8)], [], lineno=938, col_offset=4), FunctionDef('test_attribute_name_interning', arguments([Name('self', Param(), lineno=952, col_offset=38)], None, None, []), [For(Name('proto', Store(), lineno=955, col_offset=12), Name('protocols', Load(), lineno=955, col_offset=21), [Assign([Name('x', Store(), lineno=956, col_offset=12)], Call(Name('C', Load(), lineno=956, col_offset=16), [], [], None, None, lineno=956, col_offset=16), lineno=956, col_offset=12), Assign([Attribute(Name('x', Load(), lineno=957, col_offset=12), 'foo', Store(), lineno=957, col_offset=12)], Num(42, lineno=957, col_offset=20), lineno=957, col_offset=12), Assign([Attribute(Name('x', Load(), lineno=958, col_offset=12), 'bar', Store(), lineno=958, col_offset=12)], Str('hello', lineno=958, col_offset=20), lineno=958, col_offset=12), Assign([Name('s', Store(), lineno=959, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=959, col_offset=16), 'dumps', Load(), lineno=959, col_offset=16), [Name('x', Load(), lineno=959, col_offset=27), Name('proto', Load(), lineno=959, col_offset=30)], [], None, None, lineno=959, col_offset=16), lineno=959, col_offset=12), Assign([Name('y', Store(), lineno=960, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=960, col_offset=16), 'loads', Load(), lineno=960, col_offset=16), [Name('s', Load(), lineno=960, col_offset=27)], [], None, None, lineno=960, col_offset=16), lineno=960, col_offset=12), Assign([Name('x_keys', Store(), lineno=961, col_offset=12)], Call(Name('sorted', Load(), lineno=961, col_offset=21), [Attribute(Name('x', Load(), lineno=961, col_offset=28), '__dict__', Load(), lineno=961, col_offset=28)], [], None, None, lineno=961, col_offset=21), lineno=961, col_offset=12), Assign([Name('y_keys', Store(), lineno=962, col_offset=12)], Call(Name('sorted', Load(), lineno=962, col_offset=21), [Attribute(Name('y', Load(), lineno=962, col_offset=28), '__dict__', Load(), lineno=962, col_offset=28)], [], None, None, lineno=962, col_offset=21), lineno=962, col_offset=12), For(Tuple([Name('x_key', Store(), lineno=963, col_offset=16), Name('y_key', Store(), lineno=963, col_offset=23)], Store(), lineno=963, col_offset=16), Call(Name('zip', Load(), lineno=963, col_offset=32), [Name('x_keys', Load(), lineno=963, col_offset=36), Name('y_keys', Load(), lineno=963, col_offset=44)], [], None, None, lineno=963, col_offset=32), [Expr(Call(Attribute(Name('self', Load(), lineno=964, col_offset=16), 'assertIs', Load(), lineno=964, col_offset=16), [Name('x_key', Load(), lineno=964, col_offset=30), Name('y_key', Load(), lineno=964, col_offset=37)], [], None, None, lineno=964, col_offset=16), lineno=964, col_offset=16)], [], lineno=963, col_offset=12)], [], lineno=955, col_offset=8)], [], lineno=952, col_offset=4)], [], lineno=401, col_offset=0), ClassDef('REX_one', [Name('object', Load(), lineno=969, col_offset=14)], [Assign([Name('_reduce_called', Store(), lineno=970, col_offset=4)], Num(0, lineno=970, col_offset=21), lineno=970, col_offset=4), FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=971, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=972, col_offset=8), '_reduce_called', Store(), lineno=972, col_offset=8)], Num(1, lineno=972, col_offset=30), lineno=972, col_offset=8), Return(Tuple([Name('REX_one', Load(), lineno=973, col_offset=15), Tuple([], Load(), lineno=973, col_offset=24)], Load(), lineno=973, col_offset=15), lineno=973, col_offset=8)], [], lineno=971, col_offset=4)], [], lineno=969, col_offset=0), ClassDef('REX_two', [Name('object', Load(), lineno=976, col_offset=14)], [Assign([Name('_proto', Store(), lineno=977, col_offset=4)], Name('None', Load(), lineno=977, col_offset=13), lineno=977, col_offset=4), FunctionDef('__reduce_ex__', arguments([Name('self', Param(), lineno=978, col_offset=22), Name('proto', Param(), lineno=978, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=979, col_offset=8), '_proto', Store(), lineno=979, col_offset=8)], Name('proto', Load(), lineno=979, col_offset=22), lineno=979, col_offset=8), Return(Tuple([Name('REX_two', Load(), lineno=980, col_offset=15), Tuple([], Load(), lineno=980, col_offset=24)], Load(), lineno=980, col_offset=15), lineno=980, col_offset=8)], [], lineno=978, col_offset=4)], [], lineno=976, col_offset=0), ClassDef('REX_three', [Name('object', Load(), lineno=983, col_offset=16)], [Assign([Name('_proto', Store(), lineno=984, col_offset=4)], Name('None', Load(), lineno=984, col_offset=13), lineno=984, col_offset=4), FunctionDef('__reduce_ex__', arguments([Name('self', Param(), lineno=985, col_offset=22), Name('proto', Param(), lineno=985, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=986, col_offset=8), '_proto', Store(), lineno=986, col_offset=8)], Name('proto', Load(), lineno=986, col_offset=22), lineno=986, col_offset=8), Return(Tuple([Name('REX_two', Load(), lineno=987, col_offset=15), Tuple([], Load(), lineno=987, col_offset=24)], Load(), lineno=987, col_offset=15), lineno=987, col_offset=8)], [], lineno=985, col_offset=4), FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=988, col_offset=19)], None, None, []), [Raise(Name('TestFailed', Load(), lineno=989, col_offset=14), Str("This __reduce__ shouldn't be called", lineno=989, col_offset=26), None, lineno=989, col_offset=8)], [], lineno=988, col_offset=4)], [], lineno=983, col_offset=0), ClassDef('REX_four', [Name('object', Load(), lineno=991, col_offset=15)], [Assign([Name('_proto', Store(), lineno=992, col_offset=4)], Name('None', Load(), lineno=992, col_offset=13), lineno=992, col_offset=4), FunctionDef('__reduce_ex__', arguments([Name('self', Param(), lineno=993, col_offset=22), Name('proto', Param(), lineno=993, col_offset=28)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=994, col_offset=8), '_proto', Store(), lineno=994, col_offset=8)], Name('proto', Load(), lineno=994, col_offset=22), lineno=994, col_offset=8), Return(Call(Attribute(Name('object', Load(), lineno=995, col_offset=15), '__reduce_ex__', Load(), lineno=995, col_offset=15), [Name('self', Load(), lineno=995, col_offset=36), Name('proto', Load(), lineno=995, col_offset=42)], [], None, None, lineno=995, col_offset=15), lineno=995, col_offset=8)], [], lineno=993, col_offset=4)], [], lineno=991, col_offset=0), ClassDef('REX_five', [Name('object', Load(), lineno=998, col_offset=15)], [Assign([Name('_reduce_called', Store(), lineno=999, col_offset=4)], Num(0, lineno=999, col_offset=21), lineno=999, col_offset=4), FunctionDef('__reduce__', arguments([Name('self', Param(), lineno=1000, col_offset=19)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1001, col_offset=8), '_reduce_called', Store(), lineno=1001, col_offset=8)], Num(1, lineno=1001, col_offset=30), lineno=1001, col_offset=8), Return(Call(Attribute(Name('object', Load(), lineno=1002, col_offset=15), '__reduce__', Load(), lineno=1002, col_offset=15), [Name('self', Load(), lineno=1002, col_offset=33)], [], None, None, lineno=1002, col_offset=15), lineno=1002, col_offset=8)], [], lineno=1000, col_offset=4)], [], lineno=998, col_offset=0), ClassDef('MyInt', [Name('int', Load(), lineno=1007, col_offset=12)], [Assign([Name('sample', Store(), lineno=1008, col_offset=4)], Num(1, lineno=1008, col_offset=13), lineno=1008, col_offset=4)], [], lineno=1007, col_offset=0), ClassDef('MyLong', [Name('long', Load(), lineno=1010, col_offset=13)], [Assign([Name('sample', Store(), lineno=1011, col_offset=4)], Num(1L, lineno=1011, col_offset=13), lineno=1011, col_offset=4)], [], lineno=1010, col_offset=0), ClassDef('MyFloat', [Name('float', Load(), lineno=1013, col_offset=14)], [Assign([Name('sample', Store(), lineno=1014, col_offset=4)], Num(1.0, lineno=1014, col_offset=13), lineno=1014, col_offset=4)], [], lineno=1013, col_offset=0), ClassDef('MyComplex', [Name('complex', Load(), lineno=1016, col_offset=16)], [Assign([Name('sample', Store(), lineno=1017, col_offset=4)], BinOp(Num(1.0, lineno=1017, col_offset=13), Add(), Num(0j, lineno=1017, col_offset=19), lineno=1017, col_offset=13), lineno=1017, col_offset=4)], [], lineno=1016, col_offset=0), ClassDef('MyStr', [Name('str', Load(), lineno=1019, col_offset=12)], [Assign([Name('sample', Store(), lineno=1020, col_offset=4)], Str('hello', lineno=1020, col_offset=13), lineno=1020, col_offset=4)], [], lineno=1019, col_offset=0), ClassDef('MyUnicode', [Name('unicode', Load(), lineno=1022, col_offset=16)], [Assign([Name('sample', Store(), lineno=1023, col_offset=4)], Str(u'hello \u1234', lineno=1023, col_offset=13), lineno=1023, col_offset=4)], [], lineno=1022, col_offset=0), ClassDef('MyTuple', [Name('tuple', Load(), lineno=1025, col_offset=14)], [Assign([Name('sample', Store(), lineno=1026, col_offset=4)], Tuple([Num(1, lineno=1026, col_offset=14), Num(2, lineno=1026, col_offset=17), Num(3, lineno=1026, col_offset=20)], Load(), lineno=1026, col_offset=14), lineno=1026, col_offset=4)], [], lineno=1025, col_offset=0), ClassDef('MyList', [Name('list', Load(), lineno=1028, col_offset=13)], [Assign([Name('sample', Store(), lineno=1029, col_offset=4)], List([Num(1, lineno=1029, col_offset=14), Num(2, lineno=1029, col_offset=17), Num(3, lineno=1029, col_offset=20)], Load(), lineno=1029, col_offset=13), lineno=1029, col_offset=4)], [], lineno=1028, col_offset=0), ClassDef('MyDict', [Name('dict', Load(), lineno=1031, col_offset=13)], [Assign([Name('sample', Store(), lineno=1032, col_offset=4)], Dict([Str('a', lineno=1032, col_offset=14), Str('b', lineno=1032, col_offset=22)], [Num(1, lineno=1032, col_offset=19), Num(2, lineno=1032, col_offset=27)], lineno=1032, col_offset=13), lineno=1032, col_offset=4)], [], lineno=1031, col_offset=0), Assign([Name('myclasses', Store(), lineno=1034, col_offset=0)], List([Name('MyInt', Load(), lineno=1034, col_offset=13), Name('MyLong', Load(), lineno=1034, col_offset=20), Name('MyFloat', Load(), lineno=1034, col_offset=28), Name('MyComplex', Load(), lineno=1035, col_offset=13), Name('MyStr', Load(), lineno=1036, col_offset=13), Name('MyUnicode', Load(), lineno=1036, col_offset=20), Name('MyTuple', Load(), lineno=1037, col_offset=13), Name('MyList', Load(), lineno=1037, col_offset=22), Name('MyDict', Load(), lineno=1037, col_offset=30)], Load(), lineno=1034, col_offset=12), lineno=1034, col_offset=0), ClassDef('SlotList', [Name('MyList', Load(), lineno=1040, col_offset=15)], [Assign([Name('__slots__', Store(), lineno=1041, col_offset=4)], List([Str('foo', lineno=1041, col_offset=17)], Load(), lineno=1041, col_offset=16), lineno=1041, col_offset=4)], [], lineno=1040, col_offset=0), ClassDef('SimpleNewObj', [Name('object', Load(), lineno=1043, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1044, col_offset=17), Name('a', Param(), lineno=1044, col_offset=23), Name('b', Param(), lineno=1044, col_offset=26), Name('c', Param(), lineno=1044, col_offset=29)], None, None, []), [Raise(Call(Name('TypeError', Load(), lineno=1046, col_offset=14), [Str("SimpleNewObj.__init__() didn't expect to get called", lineno=1046, col_offset=24)], [], None, None, lineno=1046, col_offset=14), None, None, lineno=1046, col_offset=8)], [], lineno=1044, col_offset=4)], [], lineno=1043, col_offset=0), ClassDef('AbstractPickleModuleTests', [Attribute(Name('unittest', Load(), lineno=1048, col_offset=32), 'TestCase', Load(), lineno=1048, col_offset=32)], [FunctionDef('test_dump_closed_file', arguments([Name('self', Param(), lineno=1050, col_offset=30)], None, None, []), [Import([alias('os', None)], lineno=1051, col_offset=8), Assign([Name('f', Store(), lineno=1052, col_offset=8)], Call(Name('open', Load(), lineno=1052, col_offset=12), [Name('TESTFN', Load(), lineno=1052, col_offset=17), Str('w', lineno=1052, col_offset=25)], [], None, None, lineno=1052, col_offset=12), lineno=1052, col_offset=8), TryFinally([Expr(Call(Attribute(Name('f', Load(), lineno=1054, col_offset=12), 'close', Load(), lineno=1054, col_offset=12), [], [], None, None, lineno=1054, col_offset=12), lineno=1054, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1055, col_offset=12), 'assertRaises', Load(), lineno=1055, col_offset=12), [Name('ValueError', Load(), lineno=1055, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1055, col_offset=42), 'module', Load(), lineno=1055, col_offset=42), 'dump', Load(), lineno=1055, col_offset=42), Num(123, lineno=1055, col_offset=60), Name('f', Load(), lineno=1055, col_offset=65)], [], None, None, lineno=1055, col_offset=12), lineno=1055, col_offset=12)], [Expr(Call(Attribute(Name('os', Load(), lineno=1057, col_offset=12), 'remove', Load(), lineno=1057, col_offset=12), [Name('TESTFN', Load(), lineno=1057, col_offset=22)], [], None, None, lineno=1057, col_offset=12), lineno=1057, col_offset=12)], lineno=1053, col_offset=8)], [], lineno=1050, col_offset=4), FunctionDef('test_load_closed_file', arguments([Name('self', Param(), lineno=1059, col_offset=30)], None, None, []), [Import([alias('os', None)], lineno=1060, col_offset=8), Assign([Name('f', Store(), lineno=1061, col_offset=8)], Call(Name('open', Load(), lineno=1061, col_offset=12), [Name('TESTFN', Load(), lineno=1061, col_offset=17), Str('w', lineno=1061, col_offset=25)], [], None, None, lineno=1061, col_offset=12), lineno=1061, col_offset=8), TryFinally([Expr(Call(Attribute(Name('f', Load(), lineno=1063, col_offset=12), 'close', Load(), lineno=1063, col_offset=12), [], [], None, None, lineno=1063, col_offset=12), lineno=1063, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1064, col_offset=12), 'assertRaises', Load(), lineno=1064, col_offset=12), [Name('ValueError', Load(), lineno=1064, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=1064, col_offset=42), 'module', Load(), lineno=1064, col_offset=42), 'dump', Load(), lineno=1064, col_offset=42), Num(123, lineno=1064, col_offset=60), Name('f', Load(), lineno=1064, col_offset=65)], [], None, None, lineno=1064, col_offset=12), lineno=1064, col_offset=12)], [Expr(Call(Attribute(Name('os', Load(), lineno=1066, col_offset=12), 'remove', Load(), lineno=1066, col_offset=12), [Name('TESTFN', Load(), lineno=1066, col_offset=22)], [], None, None, lineno=1066, col_offset=12), lineno=1066, col_offset=12)], lineno=1062, col_offset=8)], [], lineno=1059, col_offset=4), FunctionDef('test_load_from_and_dump_to_file', arguments([Name('self', Param(), lineno=1068, col_offset=40)], None, None, []), [Assign([Name('stream', Store(), lineno=1069, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1069, col_offset=17), 'StringIO', Load(), lineno=1069, col_offset=17), [], [], None, None, lineno=1069, col_offset=17), lineno=1069, col_offset=8), Assign([Name('data', Store(), lineno=1070, col_offset=8)], List([Num(123, lineno=1070, col_offset=16), Dict([], [], lineno=1070, col_offset=21), Num(124, lineno=1070, col_offset=25)], Load(), lineno=1070, col_offset=15), lineno=1070, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1071, col_offset=8), 'module', Load(), lineno=1071, col_offset=8), 'dump', Load(), lineno=1071, col_offset=8), [Name('data', Load(), lineno=1071, col_offset=25), Name('stream', Load(), lineno=1071, col_offset=31)], [], None, None, lineno=1071, col_offset=8), lineno=1071, col_offset=8), Expr(Call(Attribute(Name('stream', Load(), lineno=1072, col_offset=8), 'seek', Load(), lineno=1072, col_offset=8), [Num(0, lineno=1072, col_offset=20)], [], None, None, lineno=1072, col_offset=8), lineno=1072, col_offset=8), Assign([Name('unpickled', Store(), lineno=1073, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1073, col_offset=20), 'module', Load(), lineno=1073, col_offset=20), 'load', Load(), lineno=1073, col_offset=20), [Name('stream', Load(), lineno=1073, col_offset=37)], [], None, None, lineno=1073, col_offset=20), lineno=1073, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1074, col_offset=8), 'assertEqual', Load(), lineno=1074, col_offset=8), [Name('unpickled', Load(), lineno=1074, col_offset=25), Name('data', Load(), lineno=1074, col_offset=36)], [], None, None, lineno=1074, col_offset=8), lineno=1074, col_offset=8)], [], lineno=1068, col_offset=4), FunctionDef('test_highest_protocol', arguments([Name('self', Param(), lineno=1076, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1078, col_offset=8), 'assertEqual', Load(), lineno=1078, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1078, col_offset=25), 'module', Load(), lineno=1078, col_offset=25), 'HIGHEST_PROTOCOL', Load(), lineno=1078, col_offset=25), Num(2, lineno=1078, col_offset=55)], [], None, None, lineno=1078, col_offset=8), lineno=1078, col_offset=8)], [], lineno=1076, col_offset=4), FunctionDef('test_callapi', arguments([Name('self', Param(), lineno=1080, col_offset=21)], None, None, []), [Assign([Name('f', Store(), lineno=1081, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1081, col_offset=12), 'StringIO', Load(), lineno=1081, col_offset=12), [], [], None, None, lineno=1081, col_offset=12), lineno=1081, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1083, col_offset=8), 'module', Load(), lineno=1083, col_offset=8), 'dump', Load(), lineno=1083, col_offset=8), [Num(123, lineno=1083, col_offset=25), Name('f', Load(), lineno=1083, col_offset=30), Num(-1, lineno=1083, col_offset=34)], [], None, None, lineno=1083, col_offset=8), lineno=1083, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1084, col_offset=8), 'module', Load(), lineno=1084, col_offset=8), 'dump', Load(), lineno=1084, col_offset=8), [Num(123, lineno=1084, col_offset=25)], [keyword('file', Name('f', Load(), lineno=1084, col_offset=35)), keyword('protocol', Num(-1, lineno=1084, col_offset=48))], None, None, lineno=1084, col_offset=8), lineno=1084, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1085, col_offset=8), 'module', Load(), lineno=1085, col_offset=8), 'dumps', Load(), lineno=1085, col_offset=8), [Num(123, lineno=1085, col_offset=26), Num(-1, lineno=1085, col_offset=32)], [], None, None, lineno=1085, col_offset=8), lineno=1085, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1086, col_offset=8), 'module', Load(), lineno=1086, col_offset=8), 'dumps', Load(), lineno=1086, col_offset=8), [Num(123, lineno=1086, col_offset=26)], [keyword('protocol', Num(-1, lineno=1086, col_offset=41))], None, None, lineno=1086, col_offset=8), lineno=1086, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1087, col_offset=8), 'module', Load(), lineno=1087, col_offset=8), 'Pickler', Load(), lineno=1087, col_offset=8), [Name('f', Load(), lineno=1087, col_offset=28), Num(-1, lineno=1087, col_offset=32)], [], None, None, lineno=1087, col_offset=8), lineno=1087, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1088, col_offset=8), 'module', Load(), lineno=1088, col_offset=8), 'Pickler', Load(), lineno=1088, col_offset=8), [Name('f', Load(), lineno=1088, col_offset=28)], [keyword('protocol', Num(-1, lineno=1088, col_offset=41))], None, None, lineno=1088, col_offset=8), lineno=1088, col_offset=8)], [], lineno=1080, col_offset=4), FunctionDef('test_incomplete_input', arguments([Name('self', Param(), lineno=1090, col_offset=30)], None, None, []), [Assign([Name('s', Store(), lineno=1091, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1091, col_offset=12), 'StringIO', Load(), lineno=1091, col_offset=12), [Str("X''.", lineno=1091, col_offset=30)], [], None, None, lineno=1091, col_offset=12), lineno=1091, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1092, col_offset=8), 'assertRaises', Load(), lineno=1092, col_offset=8), [Name('EOFError', Load(), lineno=1092, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=1092, col_offset=36), 'module', Load(), lineno=1092, col_offset=36), 'load', Load(), lineno=1092, col_offset=36), Name('s', Load(), lineno=1092, col_offset=54)], [], None, None, lineno=1092, col_offset=8), lineno=1092, col_offset=8)], [], lineno=1090, col_offset=4), FunctionDef('test_restricted', arguments([Name('self', Param(), lineno=1094, col_offset=24)], None, None, []), [Assign([Name('builtins', Store(), lineno=1096, col_offset=8)], Dict([Attribute(Attribute(Name('self', Load(), lineno=1096, col_offset=20), 'module', Load(), lineno=1096, col_offset=20), '__name__', Load(), lineno=1096, col_offset=20), Str('__import__', lineno=1097, col_offset=20)], [Attribute(Name('self', Load(), lineno=1096, col_offset=42), 'module', Load(), lineno=1096, col_offset=42), Name('__import__', Load(), lineno=1097, col_offset=34)], lineno=1096, col_offset=19), lineno=1096, col_offset=8), Assign([Name('d', Store(), lineno=1098, col_offset=8)], Dict([], [], lineno=1098, col_offset=12), lineno=1098, col_offset=8), Assign([Name('teststr', Store(), lineno=1099, col_offset=8)], Call(Attribute(Str('def f(): {0}.dumps(0)', lineno=1099, col_offset=18), 'format', Load(), lineno=1099, col_offset=18), [Attribute(Attribute(Name('self', Load(), lineno=1099, col_offset=49), 'module', Load(), lineno=1099, col_offset=49), '__name__', Load(), lineno=1099, col_offset=49)], [], None, None, lineno=1099, col_offset=18), lineno=1099, col_offset=8), Exec(Name('teststr', Load(), lineno=1100, col_offset=13), Dict([Str('__builtins__', lineno=1100, col_offset=25)], [Name('builtins', Load(), lineno=1100, col_offset=41)], lineno=1100, col_offset=24), Name('d', Load(), lineno=1100, col_offset=52), lineno=1100, col_offset=8), Expr(Call(Subscript(Name('d', Load(), lineno=1101, col_offset=8), Index(Str('f', lineno=1101, col_offset=10)), Load(), lineno=1101, col_offset=8), [], [], None, None, lineno=1101, col_offset=8), lineno=1101, col_offset=8)], [], lineno=1094, col_offset=4), FunctionDef('test_bad_input', arguments([Name('self', Param(), lineno=1103, col_offset=23)], None, None, []), [Assign([Name('s', Store(), lineno=1105, col_offset=8)], Str('X\x00\x00\x00T', lineno=1105, col_offset=12), lineno=1105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1106, col_offset=8), 'assertRaises', Load(), lineno=1106, col_offset=8), [Name('EOFError', Load(), lineno=1106, col_offset=26), Attribute(Attribute(Name('self', Load(), lineno=1106, col_offset=36), 'module', Load(), lineno=1106, col_offset=36), 'loads', Load(), lineno=1106, col_offset=36), Name('s', Load(), lineno=1106, col_offset=55)], [], None, None, lineno=1106, col_offset=8), lineno=1106, col_offset=8), Assign([Name('s', Store(), lineno=1108, col_offset=8)], Str('0', lineno=1108, col_offset=12), lineno=1108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1110, col_offset=8), 'assertRaises', Load(), lineno=1110, col_offset=8), [Tuple([Name('IndexError', Load(), lineno=1110, col_offset=27), Attribute(Name('cPickle', Load(), lineno=1110, col_offset=39), 'UnpicklingError', Load(), lineno=1110, col_offset=39)], Load(), lineno=1110, col_offset=27), Attribute(Attribute(Name('self', Load(), lineno=1111, col_offset=26), 'module', Load(), lineno=1111, col_offset=26), 'loads', Load(), lineno=1111, col_offset=26), Name('s', Load(), lineno=1111, col_offset=45)], [], None, None, lineno=1110, col_offset=8), lineno=1110, col_offset=8)], [], lineno=1103, col_offset=4)], [], lineno=1048, col_offset=0), ClassDef('AbstractPersistentPicklerTests', [Attribute(Name('unittest', Load(), lineno=1113, col_offset=37), 'TestCase', Load(), lineno=1113, col_offset=37)], [FunctionDef('persistent_id', arguments([Name('self', Param(), lineno=1119, col_offset=22), Name('object', Param(), lineno=1119, col_offset=28)], None, None, []), [If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=1120, col_offset=11), [Name('object', Load(), lineno=1120, col_offset=22), Name('int', Load(), lineno=1120, col_offset=30)], [], None, None, lineno=1120, col_offset=11), Compare(BinOp(Name('object', Load(), lineno=1120, col_offset=39), Mod(), Num(2, lineno=1120, col_offset=48), lineno=1120, col_offset=39), [Eq()], [Num(0, lineno=1120, col_offset=53)], lineno=1120, col_offset=39)], lineno=1120, col_offset=11), [AugAssign(Attribute(Name('self', Load(), lineno=1121, col_offset=12), 'id_count', Store(), lineno=1121, col_offset=12), Add(), Num(1, lineno=1121, col_offset=29), lineno=1121, col_offset=12), Return(Call(Name('str', Load(), lineno=1122, col_offset=19), [Name('object', Load(), lineno=1122, col_offset=23)], [], None, None, lineno=1122, col_offset=19), lineno=1122, col_offset=12)], [Return(Name('None', Load(), lineno=1124, col_offset=19), lineno=1124, col_offset=12)], lineno=1120, col_offset=8)], [], lineno=1119, col_offset=4), FunctionDef('persistent_load', arguments([Name('self', Param(), lineno=1126, col_offset=24), Name('oid', Param(), lineno=1126, col_offset=30)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=1127, col_offset=8), 'load_count', Store(), lineno=1127, col_offset=8), Add(), Num(1, lineno=1127, col_offset=27), lineno=1127, col_offset=8), Assign([Name('object', Store(), lineno=1128, col_offset=8)], Call(Name('int', Load(), lineno=1128, col_offset=17), [Name('oid', Load(), lineno=1128, col_offset=21)], [], None, None, lineno=1128, col_offset=17), lineno=1128, col_offset=8), Assert(Compare(BinOp(Name('object', Load(), lineno=1129, col_offset=15), Mod(), Num(2, lineno=1129, col_offset=24), lineno=1129, col_offset=15), [Eq()], [Num(0, lineno=1129, col_offset=29)], lineno=1129, col_offset=15), None, lineno=1129, col_offset=8), Return(Name('object', Load(), lineno=1130, col_offset=15), lineno=1130, col_offset=8)], [], lineno=1126, col_offset=4), FunctionDef('test_persistence', arguments([Name('self', Param(), lineno=1132, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1133, col_offset=8), 'id_count', Store(), lineno=1133, col_offset=8)], Num(0, lineno=1133, col_offset=24), lineno=1133, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1134, col_offset=8), 'load_count', Store(), lineno=1134, col_offset=8)], Num(0, lineno=1134, col_offset=26), lineno=1134, col_offset=8), Assign([Name('L', Store(), lineno=1135, col_offset=8)], Call(Name('range', Load(), lineno=1135, col_offset=12), [Num(10, lineno=1135, col_offset=18)], [], None, None, lineno=1135, col_offset=12), lineno=1135, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1136, col_offset=8), 'assertEqual', Load(), lineno=1136, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=1136, col_offset=25), 'loads', Load(), lineno=1136, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=1136, col_offset=36), 'dumps', Load(), lineno=1136, col_offset=36), [Name('L', Load(), lineno=1136, col_offset=47)], [], None, None, lineno=1136, col_offset=36)], [], None, None, lineno=1136, col_offset=25), Name('L', Load(), lineno=1136, col_offset=52)], [], None, None, lineno=1136, col_offset=8), lineno=1136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1137, col_offset=8), 'assertEqual', Load(), lineno=1137, col_offset=8), [Attribute(Name('self', Load(), lineno=1137, col_offset=25), 'id_count', Load(), lineno=1137, col_offset=25), Num(5, lineno=1137, col_offset=40)], [], None, None, lineno=1137, col_offset=8), lineno=1137, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1138, col_offset=8), 'assertEqual', Load(), lineno=1138, col_offset=8), [Attribute(Name('self', Load(), lineno=1138, col_offset=25), 'load_count', Load(), lineno=1138, col_offset=25), Num(5, lineno=1138, col_offset=42)], [], None, None, lineno=1138, col_offset=8), lineno=1138, col_offset=8)], [], lineno=1132, col_offset=4), FunctionDef('test_bin_persistence', arguments([Name('self', Param(), lineno=1140, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1141, col_offset=8), 'id_count', Store(), lineno=1141, col_offset=8)], Num(0, lineno=1141, col_offset=24), lineno=1141, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1142, col_offset=8), 'load_count', Store(), lineno=1142, col_offset=8)], Num(0, lineno=1142, col_offset=26), lineno=1142, col_offset=8), Assign([Name('L', Store(), lineno=1143, col_offset=8)], Call(Name('range', Load(), lineno=1143, col_offset=12), [Num(10, lineno=1143, col_offset=18)], [], None, None, lineno=1143, col_offset=12), lineno=1143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1144, col_offset=8), 'assertEqual', Load(), lineno=1144, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=1144, col_offset=25), 'loads', Load(), lineno=1144, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=1144, col_offset=36), 'dumps', Load(), lineno=1144, col_offset=36), [Name('L', Load(), lineno=1144, col_offset=47), Num(1, lineno=1144, col_offset=50)], [], None, None, lineno=1144, col_offset=36)], [], None, None, lineno=1144, col_offset=25), Name('L', Load(), lineno=1144, col_offset=55)], [], None, None, lineno=1144, col_offset=8), lineno=1144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1145, col_offset=8), 'assertEqual', Load(), lineno=1145, col_offset=8), [Attribute(Name('self', Load(), lineno=1145, col_offset=25), 'id_count', Load(), lineno=1145, col_offset=25), Num(5, lineno=1145, col_offset=40)], [], None, None, lineno=1145, col_offset=8), lineno=1145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1146, col_offset=8), 'assertEqual', Load(), lineno=1146, col_offset=8), [Attribute(Name('self', Load(), lineno=1146, col_offset=25), 'load_count', Load(), lineno=1146, col_offset=25), Num(5, lineno=1146, col_offset=42)], [], None, None, lineno=1146, col_offset=8), lineno=1146, col_offset=8)], [], lineno=1140, col_offset=4)], [], lineno=1113, col_offset=0), ClassDef('AbstractPicklerUnpicklerObjectTests', [Attribute(Name('unittest', Load(), lineno=1148, col_offset=42), 'TestCase', Load(), lineno=1148, col_offset=42)], [Assign([Name('pickler_class', Store(), lineno=1150, col_offset=4)], Name('None', Load(), lineno=1150, col_offset=20), lineno=1150, col_offset=4), Assign([Name('unpickler_class', Store(), lineno=1151, col_offset=4)], Name('None', Load(), lineno=1151, col_offset=22), lineno=1151, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=1153, col_offset=14)], None, None, []), [Assert(Attribute(Name('self', Load(), lineno=1154, col_offset=15), 'pickler_class', Load(), lineno=1154, col_offset=15), None, lineno=1154, col_offset=8), Assert(Attribute(Name('self', Load(), lineno=1155, col_offset=15), 'unpickler_class', Load(), lineno=1155, col_offset=15), None, lineno=1155, col_offset=8)], [], lineno=1153, col_offset=4), FunctionDef('test_clear_pickler_memo', arguments([Name('self', Param(), lineno=1157, col_offset=32)], None, None, []), [Assign([Name('data', Store(), lineno=1163, col_offset=8)], List([Str('abcdefg', lineno=1163, col_offset=16), Str('abcdefg', lineno=1163, col_offset=27), Num(44, lineno=1163, col_offset=38)], Load(), lineno=1163, col_offset=15), lineno=1163, col_offset=8), Assign([Name('f', Store(), lineno=1164, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1164, col_offset=12), 'StringIO', Load(), lineno=1164, col_offset=12), [], [], None, None, lineno=1164, col_offset=12), lineno=1164, col_offset=8), Assign([Name('pickler', Store(), lineno=1165, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1165, col_offset=18), 'pickler_class', Load(), lineno=1165, col_offset=18), [Name('f', Load(), lineno=1165, col_offset=37)], [], None, None, lineno=1165, col_offset=18), lineno=1165, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1167, col_offset=8), 'dump', Load(), lineno=1167, col_offset=8), [Name('data', Load(), lineno=1167, col_offset=21)], [], None, None, lineno=1167, col_offset=8), lineno=1167, col_offset=8), Assign([Name('first_pickled', Store(), lineno=1168, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1168, col_offset=24), 'getvalue', Load(), lineno=1168, col_offset=24), [], [], None, None, lineno=1168, col_offset=24), lineno=1168, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1171, col_offset=8), 'seek', Load(), lineno=1171, col_offset=8), [Num(0, lineno=1171, col_offset=15)], [], None, None, lineno=1171, col_offset=8), lineno=1171, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1172, col_offset=8), 'truncate', Load(), lineno=1172, col_offset=8), [], [], None, None, lineno=1172, col_offset=8), lineno=1172, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1174, col_offset=8), 'dump', Load(), lineno=1174, col_offset=8), [Name('data', Load(), lineno=1174, col_offset=21)], [], None, None, lineno=1174, col_offset=8), lineno=1174, col_offset=8), Assign([Name('second_pickled', Store(), lineno=1175, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1175, col_offset=25), 'getvalue', Load(), lineno=1175, col_offset=25), [], [], None, None, lineno=1175, col_offset=25), lineno=1175, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1178, col_offset=8), 'clear_memo', Load(), lineno=1178, col_offset=8), [], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1179, col_offset=8), 'seek', Load(), lineno=1179, col_offset=8), [Num(0, lineno=1179, col_offset=15)], [], None, None, lineno=1179, col_offset=8), lineno=1179, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1180, col_offset=8), 'truncate', Load(), lineno=1180, col_offset=8), [], [], None, None, lineno=1180, col_offset=8), lineno=1180, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1182, col_offset=8), 'dump', Load(), lineno=1182, col_offset=8), [Name('data', Load(), lineno=1182, col_offset=21)], [], None, None, lineno=1182, col_offset=8), lineno=1182, col_offset=8), Assign([Name('third_pickled', Store(), lineno=1183, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1183, col_offset=24), 'getvalue', Load(), lineno=1183, col_offset=24), [], [], None, None, lineno=1183, col_offset=24), lineno=1183, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1185, col_offset=8), 'assertNotEqual', Load(), lineno=1185, col_offset=8), [Name('first_pickled', Load(), lineno=1185, col_offset=28), Name('second_pickled', Load(), lineno=1185, col_offset=43)], [], None, None, lineno=1185, col_offset=8), lineno=1185, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1186, col_offset=8), 'assertEqual', Load(), lineno=1186, col_offset=8), [Name('first_pickled', Load(), lineno=1186, col_offset=25), Name('third_pickled', Load(), lineno=1186, col_offset=40)], [], None, None, lineno=1186, col_offset=8), lineno=1186, col_offset=8)], [], lineno=1157, col_offset=4), FunctionDef('test_priming_pickler_memo', arguments([Name('self', Param(), lineno=1188, col_offset=34)], None, None, []), [Assign([Name('data', Store(), lineno=1190, col_offset=8)], List([Str('abcdefg', lineno=1190, col_offset=16), Str('abcdefg', lineno=1190, col_offset=27), Num(44, lineno=1190, col_offset=38)], Load(), lineno=1190, col_offset=15), lineno=1190, col_offset=8), Assign([Name('f', Store(), lineno=1191, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1191, col_offset=12), 'StringIO', Load(), lineno=1191, col_offset=12), [], [], None, None, lineno=1191, col_offset=12), lineno=1191, col_offset=8), Assign([Name('pickler', Store(), lineno=1192, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1192, col_offset=18), 'pickler_class', Load(), lineno=1192, col_offset=18), [Name('f', Load(), lineno=1192, col_offset=37)], [], None, None, lineno=1192, col_offset=18), lineno=1192, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1194, col_offset=8), 'dump', Load(), lineno=1194, col_offset=8), [Name('data', Load(), lineno=1194, col_offset=21)], [], None, None, lineno=1194, col_offset=8), lineno=1194, col_offset=8), Assign([Name('first_pickled', Store(), lineno=1195, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1195, col_offset=24), 'getvalue', Load(), lineno=1195, col_offset=24), [], [], None, None, lineno=1195, col_offset=24), lineno=1195, col_offset=8), Assign([Name('f', Store(), lineno=1197, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1197, col_offset=12), 'StringIO', Load(), lineno=1197, col_offset=12), [], [], None, None, lineno=1197, col_offset=12), lineno=1197, col_offset=8), Assign([Name('primed', Store(), lineno=1198, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1198, col_offset=17), 'pickler_class', Load(), lineno=1198, col_offset=17), [Name('f', Load(), lineno=1198, col_offset=36)], [], None, None, lineno=1198, col_offset=17), lineno=1198, col_offset=8), Assign([Attribute(Name('primed', Load(), lineno=1199, col_offset=8), 'memo', Store(), lineno=1199, col_offset=8)], Attribute(Name('pickler', Load(), lineno=1199, col_offset=22), 'memo', Load(), lineno=1199, col_offset=22), lineno=1199, col_offset=8), Expr(Call(Attribute(Name('primed', Load(), lineno=1201, col_offset=8), 'dump', Load(), lineno=1201, col_offset=8), [Name('data', Load(), lineno=1201, col_offset=20)], [], None, None, lineno=1201, col_offset=8), lineno=1201, col_offset=8), Assign([Name('primed_pickled', Store(), lineno=1202, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1202, col_offset=25), 'getvalue', Load(), lineno=1202, col_offset=25), [], [], None, None, lineno=1202, col_offset=25), lineno=1202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1204, col_offset=8), 'assertNotEqual', Load(), lineno=1204, col_offset=8), [Name('first_pickled', Load(), lineno=1204, col_offset=28), Name('primed_pickled', Load(), lineno=1204, col_offset=43)], [], None, None, lineno=1204, col_offset=8), lineno=1204, col_offset=8)], [], lineno=1188, col_offset=4), FunctionDef('test_priming_unpickler_memo', arguments([Name('self', Param(), lineno=1206, col_offset=36)], None, None, []), [Assign([Name('data', Store(), lineno=1208, col_offset=8)], List([Str('abcdefg', lineno=1208, col_offset=16), Str('abcdefg', lineno=1208, col_offset=27), Num(44, lineno=1208, col_offset=38)], Load(), lineno=1208, col_offset=15), lineno=1208, col_offset=8), Assign([Name('f', Store(), lineno=1209, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1209, col_offset=12), 'StringIO', Load(), lineno=1209, col_offset=12), [], [], None, None, lineno=1209, col_offset=12), lineno=1209, col_offset=8), Assign([Name('pickler', Store(), lineno=1210, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1210, col_offset=18), 'pickler_class', Load(), lineno=1210, col_offset=18), [Name('f', Load(), lineno=1210, col_offset=37)], [], None, None, lineno=1210, col_offset=18), lineno=1210, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1212, col_offset=8), 'dump', Load(), lineno=1212, col_offset=8), [Name('data', Load(), lineno=1212, col_offset=21)], [], None, None, lineno=1212, col_offset=8), lineno=1212, col_offset=8), Assign([Name('first_pickled', Store(), lineno=1213, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1213, col_offset=24), 'getvalue', Load(), lineno=1213, col_offset=24), [], [], None, None, lineno=1213, col_offset=24), lineno=1213, col_offset=8), Assign([Name('f', Store(), lineno=1215, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1215, col_offset=12), 'StringIO', Load(), lineno=1215, col_offset=12), [], [], None, None, lineno=1215, col_offset=12), lineno=1215, col_offset=8), Assign([Name('primed', Store(), lineno=1216, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1216, col_offset=17), 'pickler_class', Load(), lineno=1216, col_offset=17), [Name('f', Load(), lineno=1216, col_offset=36)], [], None, None, lineno=1216, col_offset=17), lineno=1216, col_offset=8), Assign([Attribute(Name('primed', Load(), lineno=1217, col_offset=8), 'memo', Store(), lineno=1217, col_offset=8)], Attribute(Name('pickler', Load(), lineno=1217, col_offset=22), 'memo', Load(), lineno=1217, col_offset=22), lineno=1217, col_offset=8), Expr(Call(Attribute(Name('primed', Load(), lineno=1219, col_offset=8), 'dump', Load(), lineno=1219, col_offset=8), [Name('data', Load(), lineno=1219, col_offset=20)], [], None, None, lineno=1219, col_offset=8), lineno=1219, col_offset=8), Assign([Name('primed_pickled', Store(), lineno=1220, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1220, col_offset=25), 'getvalue', Load(), lineno=1220, col_offset=25), [], [], None, None, lineno=1220, col_offset=25), lineno=1220, col_offset=8), Assign([Name('unpickler', Store(), lineno=1222, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1222, col_offset=20), 'unpickler_class', Load(), lineno=1222, col_offset=20), [Call(Attribute(Name('cStringIO', Load(), lineno=1222, col_offset=41), 'StringIO', Load(), lineno=1222, col_offset=41), [Name('first_pickled', Load(), lineno=1222, col_offset=60)], [], None, None, lineno=1222, col_offset=41)], [], None, None, lineno=1222, col_offset=20), lineno=1222, col_offset=8), Assign([Name('unpickled_data1', Store(), lineno=1223, col_offset=8)], Call(Attribute(Name('unpickler', Load(), lineno=1223, col_offset=26), 'load', Load(), lineno=1223, col_offset=26), [], [], None, None, lineno=1223, col_offset=26), lineno=1223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1225, col_offset=8), 'assertEqual', Load(), lineno=1225, col_offset=8), [Name('unpickled_data1', Load(), lineno=1225, col_offset=25), Name('data', Load(), lineno=1225, col_offset=42)], [], None, None, lineno=1225, col_offset=8), lineno=1225, col_offset=8), Assign([Name('primed', Store(), lineno=1227, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1227, col_offset=17), 'unpickler_class', Load(), lineno=1227, col_offset=17), [Call(Attribute(Name('cStringIO', Load(), lineno=1227, col_offset=38), 'StringIO', Load(), lineno=1227, col_offset=38), [Name('primed_pickled', Load(), lineno=1227, col_offset=57)], [], None, None, lineno=1227, col_offset=38)], [], None, None, lineno=1227, col_offset=17), lineno=1227, col_offset=8), Assign([Attribute(Name('primed', Load(), lineno=1228, col_offset=8), 'memo', Store(), lineno=1228, col_offset=8)], Attribute(Name('unpickler', Load(), lineno=1228, col_offset=22), 'memo', Load(), lineno=1228, col_offset=22), lineno=1228, col_offset=8), Assign([Name('unpickled_data2', Store(), lineno=1229, col_offset=8)], Call(Attribute(Name('primed', Load(), lineno=1229, col_offset=26), 'load', Load(), lineno=1229, col_offset=26), [], [], None, None, lineno=1229, col_offset=26), lineno=1229, col_offset=8), Expr(Call(Attribute(Attribute(Name('primed', Load(), lineno=1231, col_offset=8), 'memo', Load(), lineno=1231, col_offset=8), 'clear', Load(), lineno=1231, col_offset=8), [], [], None, None, lineno=1231, col_offset=8), lineno=1231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1233, col_offset=8), 'assertEqual', Load(), lineno=1233, col_offset=8), [Name('unpickled_data2', Load(), lineno=1233, col_offset=25), Name('data', Load(), lineno=1233, col_offset=42)], [], None, None, lineno=1233, col_offset=8), lineno=1233, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1234, col_offset=8), 'assertTrue', Load(), lineno=1234, col_offset=8), [Compare(Name('unpickled_data2', Load(), lineno=1234, col_offset=24), [Is()], [Name('unpickled_data1', Load(), lineno=1234, col_offset=43)], lineno=1234, col_offset=24)], [], None, None, lineno=1234, col_offset=8), lineno=1234, col_offset=8)], [], lineno=1206, col_offset=4), FunctionDef('test_reusing_unpickler_objects', arguments([Name('self', Param(), lineno=1236, col_offset=39)], None, None, []), [Assign([Name('data1', Store(), lineno=1237, col_offset=8)], List([Str('abcdefg', lineno=1237, col_offset=17), Str('abcdefg', lineno=1237, col_offset=28), Num(44, lineno=1237, col_offset=39)], Load(), lineno=1237, col_offset=16), lineno=1237, col_offset=8), Assign([Name('f', Store(), lineno=1238, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1238, col_offset=12), 'StringIO', Load(), lineno=1238, col_offset=12), [], [], None, None, lineno=1238, col_offset=12), lineno=1238, col_offset=8), Assign([Name('pickler', Store(), lineno=1239, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1239, col_offset=18), 'pickler_class', Load(), lineno=1239, col_offset=18), [Name('f', Load(), lineno=1239, col_offset=37)], [], None, None, lineno=1239, col_offset=18), lineno=1239, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1240, col_offset=8), 'dump', Load(), lineno=1240, col_offset=8), [Name('data1', Load(), lineno=1240, col_offset=21)], [], None, None, lineno=1240, col_offset=8), lineno=1240, col_offset=8), Assign([Name('pickled1', Store(), lineno=1241, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1241, col_offset=19), 'getvalue', Load(), lineno=1241, col_offset=19), [], [], None, None, lineno=1241, col_offset=19), lineno=1241, col_offset=8), Assign([Name('data2', Store(), lineno=1243, col_offset=8)], List([Str('abcdefg', lineno=1243, col_offset=17), Num(44, lineno=1243, col_offset=28), Num(44, lineno=1243, col_offset=32)], Load(), lineno=1243, col_offset=16), lineno=1243, col_offset=8), Assign([Name('f', Store(), lineno=1244, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1244, col_offset=12), 'StringIO', Load(), lineno=1244, col_offset=12), [], [], None, None, lineno=1244, col_offset=12), lineno=1244, col_offset=8), Assign([Name('pickler', Store(), lineno=1245, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1245, col_offset=18), 'pickler_class', Load(), lineno=1245, col_offset=18), [Name('f', Load(), lineno=1245, col_offset=37)], [], None, None, lineno=1245, col_offset=18), lineno=1245, col_offset=8), Expr(Call(Attribute(Name('pickler', Load(), lineno=1246, col_offset=8), 'dump', Load(), lineno=1246, col_offset=8), [Name('data2', Load(), lineno=1246, col_offset=21)], [], None, None, lineno=1246, col_offset=8), lineno=1246, col_offset=8), Assign([Name('pickled2', Store(), lineno=1247, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=1247, col_offset=19), 'getvalue', Load(), lineno=1247, col_offset=19), [], [], None, None, lineno=1247, col_offset=19), lineno=1247, col_offset=8), Assign([Name('f', Store(), lineno=1249, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=1249, col_offset=12), 'StringIO', Load(), lineno=1249, col_offset=12), [], [], None, None, lineno=1249, col_offset=12), lineno=1249, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1250, col_offset=8), 'write', Load(), lineno=1250, col_offset=8), [Name('pickled1', Load(), lineno=1250, col_offset=16)], [], None, None, lineno=1250, col_offset=8), lineno=1250, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1251, col_offset=8), 'seek', Load(), lineno=1251, col_offset=8), [Num(0, lineno=1251, col_offset=15)], [], None, None, lineno=1251, col_offset=8), lineno=1251, col_offset=8), Assign([Name('unpickler', Store(), lineno=1252, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1252, col_offset=20), 'unpickler_class', Load(), lineno=1252, col_offset=20), [Name('f', Load(), lineno=1252, col_offset=41)], [], None, None, lineno=1252, col_offset=20), lineno=1252, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1253, col_offset=8), 'assertEqual', Load(), lineno=1253, col_offset=8), [Call(Attribute(Name('unpickler', Load(), lineno=1253, col_offset=25), 'load', Load(), lineno=1253, col_offset=25), [], [], None, None, lineno=1253, col_offset=25), Name('data1', Load(), lineno=1253, col_offset=43)], [], None, None, lineno=1253, col_offset=8), lineno=1253, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1255, col_offset=8), 'seek', Load(), lineno=1255, col_offset=8), [Num(0, lineno=1255, col_offset=15)], [], None, None, lineno=1255, col_offset=8), lineno=1255, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1256, col_offset=8), 'truncate', Load(), lineno=1256, col_offset=8), [], [], None, None, lineno=1256, col_offset=8), lineno=1256, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1257, col_offset=8), 'write', Load(), lineno=1257, col_offset=8), [Name('pickled2', Load(), lineno=1257, col_offset=16)], [], None, None, lineno=1257, col_offset=8), lineno=1257, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=1258, col_offset=8), 'seek', Load(), lineno=1258, col_offset=8), [Num(0, lineno=1258, col_offset=15)], [], None, None, lineno=1258, col_offset=8), lineno=1258, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1259, col_offset=8), 'assertEqual', Load(), lineno=1259, col_offset=8), [Call(Attribute(Name('unpickler', Load(), lineno=1259, col_offset=25), 'load', Load(), lineno=1259, col_offset=25), [], [], None, None, lineno=1259, col_offset=25), Name('data2', Load(), lineno=1259, col_offset=43)], [], None, None, lineno=1259, col_offset=8), lineno=1259, col_offset=8)], [], lineno=1236, col_offset=4)], [], lineno=1148, col_offset=0)])
