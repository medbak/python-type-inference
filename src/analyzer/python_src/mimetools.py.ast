Module([Expr(Str('Various tools used by MIME-reading or MIME-writing programs.', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('os', None)], lineno=4, col_offset=0), Import([alias('sys', None)], lineno=5, col_offset=0), Import([alias('tempfile', None)], lineno=6, col_offset=0), ImportFrom('warnings', [alias('filterwarnings', None), alias('catch_warnings', None)], 0, lineno=7, col_offset=0), With(Call(Name('catch_warnings', Load(), lineno=8, col_offset=5), [], [], None, None, lineno=8, col_offset=5), None, [If(Attribute(Name('sys', Load(), lineno=9, col_offset=7), 'py3kwarning', Load(), lineno=9, col_offset=7), [Expr(Call(Name('filterwarnings', Load(), lineno=10, col_offset=8), [Str('ignore', lineno=10, col_offset=23), Str('.*rfc822 has been removed', lineno=10, col_offset=33), Name('DeprecationWarning', Load(), lineno=10, col_offset=62)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8)], [], lineno=9, col_offset=4), Import([alias('rfc822', None)], lineno=11, col_offset=4)], lineno=8, col_offset=5), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=13, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=14, col_offset=0), [Str('in 3.x, mimetools has been removed in favor of the email package', lineno=14, col_offset=9)], [keyword('stacklevel', Num(2, lineno=15, col_offset=20))], None, None, lineno=14, col_offset=0), lineno=14, col_offset=0), Assign([Name('__all__', Store(), lineno=17, col_offset=0)], List([Str('Message', lineno=17, col_offset=11), Str('choose_boundary', lineno=17, col_offset=21), Str('encode', lineno=17, col_offset=39), Str('decode', lineno=17, col_offset=48), Str('copyliteral', lineno=17, col_offset=57), Str('copybinary', lineno=18, col_offset=11)], Load(), lineno=17, col_offset=10), lineno=17, col_offset=0), ClassDef('Message', [Attribute(Name('rfc822', Load(), lineno=20, col_offset=14), 'Message', Load(), lineno=20, col_offset=14)], [Expr(Str('A derived class of rfc822.Message that knows about MIME headers and\n    contains some hooks for decoding encoded and multipart messages.', lineno=22, col_offset=-1), lineno=22, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=24, col_offset=17), Name('fp', Param(), lineno=24, col_offset=23), Name('seekable', Param(), lineno=24, col_offset=27)], None, None, [Num(1, lineno=24, col_offset=38)]), [Expr(Call(Attribute(Attribute(Name('rfc822', Load(), lineno=25, col_offset=8), 'Message', Load(), lineno=25, col_offset=8), '__init__', Load(), lineno=25, col_offset=8), [Name('self', Load(), lineno=25, col_offset=32), Name('fp', Load(), lineno=25, col_offset=38), Name('seekable', Load(), lineno=25, col_offset=42)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=26, col_offset=8), 'encodingheader', Store(), lineno=26, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=27, col_offset=16), 'getheader', Load(), lineno=27, col_offset=16), [Str('content-transfer-encoding', lineno=27, col_offset=31)], [], None, None, lineno=27, col_offset=16), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'typeheader', Store(), lineno=28, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=29, col_offset=16), 'getheader', Load(), lineno=29, col_offset=16), [Str('content-type', lineno=29, col_offset=31)], [], None, None, lineno=29, col_offset=16), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'parsetype', Load(), lineno=30, col_offset=8), [], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'parseplist', Load(), lineno=31, col_offset=8), [], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('parsetype', arguments([Name('self', Param(), lineno=33, col_offset=18)], None, None, []), [Assign([Name('str', Store(), lineno=34, col_offset=8)], Attribute(Name('self', Load(), lineno=34, col_offset=14), 'typeheader', Load(), lineno=34, col_offset=14), lineno=34, col_offset=8), If(Compare(Name('str', Load(), lineno=35, col_offset=11), [Is()], [Name('None', Load(), lineno=35, col_offset=18)], lineno=35, col_offset=11), [Assign([Name('str', Store(), lineno=36, col_offset=12)], Str('text/plain', lineno=36, col_offset=18), lineno=36, col_offset=12)], [], lineno=35, col_offset=8), If(Compare(Str(';', lineno=37, col_offset=11), [In()], [Name('str', Load(), lineno=37, col_offset=18)], lineno=37, col_offset=11), [Assign([Name('i', Store(), lineno=38, col_offset=12)], Call(Attribute(Name('str', Load(), lineno=38, col_offset=16), 'index', Load(), lineno=38, col_offset=16), [Str(';', lineno=38, col_offset=26)], [], None, None, lineno=38, col_offset=16), lineno=38, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=12), 'plisttext', Store(), lineno=39, col_offset=12)], Subscript(Name('str', Load(), lineno=39, col_offset=29), Slice(Name('i', Load(), lineno=39, col_offset=33), None, None), Load(), lineno=39, col_offset=29), lineno=39, col_offset=12), Assign([Name('str', Store(), lineno=40, col_offset=12)], Subscript(Name('str', Load(), lineno=40, col_offset=18), Slice(None, Name('i', Load(), lineno=40, col_offset=23), None), Load(), lineno=40, col_offset=18), lineno=40, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=42, col_offset=12), 'plisttext', Store(), lineno=42, col_offset=12)], Str('', lineno=42, col_offset=29), lineno=42, col_offset=12)], lineno=37, col_offset=8), Assign([Name('fields', Store(), lineno=43, col_offset=8)], Call(Attribute(Name('str', Load(), lineno=43, col_offset=17), 'split', Load(), lineno=43, col_offset=17), [Str('/', lineno=43, col_offset=27)], [], None, None, lineno=43, col_offset=17), lineno=43, col_offset=8), For(Name('i', Store(), lineno=44, col_offset=12), Call(Name('range', Load(), lineno=44, col_offset=17), [Call(Name('len', Load(), lineno=44, col_offset=23), [Name('fields', Load(), lineno=44, col_offset=27)], [], None, None, lineno=44, col_offset=23)], [], None, None, lineno=44, col_offset=17), [Assign([Subscript(Name('fields', Load(), lineno=45, col_offset=12), Index(Name('i', Load(), lineno=45, col_offset=19)), Store(), lineno=45, col_offset=12)], Call(Attribute(Call(Attribute(Subscript(Name('fields', Load(), lineno=45, col_offset=24), Index(Name('i', Load(), lineno=45, col_offset=31)), Load(), lineno=45, col_offset=24), 'strip', Load(), lineno=45, col_offset=24), [], [], None, None, lineno=45, col_offset=24), 'lower', Load(), lineno=45, col_offset=24), [], [], None, None, lineno=45, col_offset=24), lineno=45, col_offset=12)], [], lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 'type', Store(), lineno=46, col_offset=8)], Call(Attribute(Str('/', lineno=46, col_offset=20), 'join', Load(), lineno=46, col_offset=20), [Name('fields', Load(), lineno=46, col_offset=29)], [], None, None, lineno=46, col_offset=20), lineno=46, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=47, col_offset=8), 'maintype', Store(), lineno=47, col_offset=8)], Subscript(Name('fields', Load(), lineno=47, col_offset=24), Index(Num(0, lineno=47, col_offset=31)), Load(), lineno=47, col_offset=24), lineno=47, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=48, col_offset=8), 'subtype', Store(), lineno=48, col_offset=8)], Call(Attribute(Str('/', lineno=48, col_offset=23), 'join', Load(), lineno=48, col_offset=23), [Subscript(Name('fields', Load(), lineno=48, col_offset=32), Slice(Num(1, lineno=48, col_offset=39), None, None), Load(), lineno=48, col_offset=32)], [], None, None, lineno=48, col_offset=23), lineno=48, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('parseplist', arguments([Name('self', Param(), lineno=50, col_offset=19)], None, None, []), [Assign([Name('str', Store(), lineno=51, col_offset=8)], Attribute(Name('self', Load(), lineno=51, col_offset=14), 'plisttext', Load(), lineno=51, col_offset=14), lineno=51, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=52, col_offset=8), 'plist', Store(), lineno=52, col_offset=8)], List([], Load(), lineno=52, col_offset=21), lineno=52, col_offset=8), While(Compare(Subscript(Name('str', Load(), lineno=53, col_offset=14), Slice(None, Num(1, lineno=53, col_offset=19), None), Load(), lineno=53, col_offset=14), [Eq()], [Str(';', lineno=53, col_offset=25)], lineno=53, col_offset=14), [Assign([Name('str', Store(), lineno=54, col_offset=12)], Subscript(Name('str', Load(), lineno=54, col_offset=18), Slice(Num(1, lineno=54, col_offset=22), None, None), Load(), lineno=54, col_offset=18), lineno=54, col_offset=12), If(Compare(Str(';', lineno=55, col_offset=15), [In()], [Name('str', Load(), lineno=55, col_offset=22)], lineno=55, col_offset=15), [Assign([Name('end', Store(), lineno=57, col_offset=16)], Call(Attribute(Name('str', Load(), lineno=57, col_offset=22), 'index', Load(), lineno=57, col_offset=22), [Str(';', lineno=57, col_offset=32)], [], None, None, lineno=57, col_offset=22), lineno=57, col_offset=16)], [Assign([Name('end', Store(), lineno=59, col_offset=16)], Call(Name('len', Load(), lineno=59, col_offset=22), [Name('str', Load(), lineno=59, col_offset=26)], [], None, None, lineno=59, col_offset=22), lineno=59, col_offset=16)], lineno=55, col_offset=12), Assign([Name('f', Store(), lineno=60, col_offset=12)], Subscript(Name('str', Load(), lineno=60, col_offset=16), Slice(None, Name('end', Load(), lineno=60, col_offset=21), None), Load(), lineno=60, col_offset=16), lineno=60, col_offset=12), If(Compare(Str('=', lineno=61, col_offset=15), [In()], [Name('f', Load(), lineno=61, col_offset=22)], lineno=61, col_offset=15), [Assign([Name('i', Store(), lineno=62, col_offset=16)], Call(Attribute(Name('f', Load(), lineno=62, col_offset=20), 'index', Load(), lineno=62, col_offset=20), [Str('=', lineno=62, col_offset=28)], [], None, None, lineno=62, col_offset=20), lineno=62, col_offset=16), Assign([Name('f', Store(), lineno=63, col_offset=16)], BinOp(BinOp(Call(Attribute(Call(Attribute(Subscript(Name('f', Load(), lineno=63, col_offset=20), Slice(None, Name('i', Load(), lineno=63, col_offset=23), None), Load(), lineno=63, col_offset=20), 'strip', Load(), lineno=63, col_offset=20), [], [], None, None, lineno=63, col_offset=20), 'lower', Load(), lineno=63, col_offset=20), [], [], None, None, lineno=63, col_offset=20), Add(), Str('=', lineno=64, col_offset=24), lineno=63, col_offset=20), Add(), Call(Attribute(Subscript(Name('f', Load(), lineno=64, col_offset=30), Slice(BinOp(Name('i', Load(), lineno=64, col_offset=32), Add(), Num(1, lineno=64, col_offset=34), lineno=64, col_offset=32), None, None), Load(), lineno=64, col_offset=30), 'strip', Load(), lineno=64, col_offset=30), [], [], None, None, lineno=64, col_offset=30), lineno=64, col_offset=28), lineno=63, col_offset=16)], [], lineno=61, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=65, col_offset=12), 'plist', Load(), lineno=65, col_offset=12), 'append', Load(), lineno=65, col_offset=12), [Call(Attribute(Name('f', Load(), lineno=65, col_offset=30), 'strip', Load(), lineno=65, col_offset=30), [], [], None, None, lineno=65, col_offset=30)], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12), Assign([Name('str', Store(), lineno=66, col_offset=12)], Subscript(Name('str', Load(), lineno=66, col_offset=18), Slice(Name('end', Load(), lineno=66, col_offset=22), None, None), Load(), lineno=66, col_offset=18), lineno=66, col_offset=12)], [], lineno=53, col_offset=8)], [], lineno=50, col_offset=4), FunctionDef('getplist', arguments([Name('self', Param(), lineno=68, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=69, col_offset=15), 'plist', Load(), lineno=69, col_offset=15), lineno=69, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('getparam', arguments([Name('self', Param(), lineno=71, col_offset=17), Name('name', Param(), lineno=71, col_offset=23)], None, None, []), [Assign([Name('name', Store(), lineno=72, col_offset=8)], BinOp(Call(Attribute(Name('name', Load(), lineno=72, col_offset=15), 'lower', Load(), lineno=72, col_offset=15), [], [], None, None, lineno=72, col_offset=15), Add(), Str('=', lineno=72, col_offset=30), lineno=72, col_offset=15), lineno=72, col_offset=8), Assign([Name('n', Store(), lineno=73, col_offset=8)], Call(Name('len', Load(), lineno=73, col_offset=12), [Name('name', Load(), lineno=73, col_offset=16)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=8), For(Name('p', Store(), lineno=74, col_offset=12), Attribute(Name('self', Load(), lineno=74, col_offset=17), 'plist', Load(), lineno=74, col_offset=17), [If(Compare(Subscript(Name('p', Load(), lineno=75, col_offset=15), Slice(None, Name('n', Load(), lineno=75, col_offset=18), None), Load(), lineno=75, col_offset=15), [Eq()], [Name('name', Load(), lineno=75, col_offset=24)], lineno=75, col_offset=15), [Return(Call(Attribute(Name('rfc822', Load(), lineno=76, col_offset=23), 'unquote', Load(), lineno=76, col_offset=23), [Subscript(Name('p', Load(), lineno=76, col_offset=38), Slice(Name('n', Load(), lineno=76, col_offset=40), None, None), Load(), lineno=76, col_offset=38)], [], None, None, lineno=76, col_offset=23), lineno=76, col_offset=16)], [], lineno=75, col_offset=12)], [], lineno=74, col_offset=8), Return(Name('None', Load(), lineno=77, col_offset=15), lineno=77, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('getparamnames', arguments([Name('self', Param(), lineno=79, col_offset=22)], None, None, []), [Assign([Name('result', Store(), lineno=80, col_offset=8)], List([], Load(), lineno=80, col_offset=17), lineno=80, col_offset=8), For(Name('p', Store(), lineno=81, col_offset=12), Attribute(Name('self', Load(), lineno=81, col_offset=17), 'plist', Load(), lineno=81, col_offset=17), [Assign([Name('i', Store(), lineno=82, col_offset=12)], Call(Attribute(Name('p', Load(), lineno=82, col_offset=16), 'find', Load(), lineno=82, col_offset=16), [Str('=', lineno=82, col_offset=23)], [], None, None, lineno=82, col_offset=16), lineno=82, col_offset=12), If(Compare(Name('i', Load(), lineno=83, col_offset=15), [GtE()], [Num(0, lineno=83, col_offset=20)], lineno=83, col_offset=15), [Expr(Call(Attribute(Name('result', Load(), lineno=84, col_offset=16), 'append', Load(), lineno=84, col_offset=16), [Call(Attribute(Subscript(Name('p', Load(), lineno=84, col_offset=30), Slice(None, Name('i', Load(), lineno=84, col_offset=33), None), Load(), lineno=84, col_offset=30), 'lower', Load(), lineno=84, col_offset=30), [], [], None, None, lineno=84, col_offset=30)], [], None, None, lineno=84, col_offset=16), lineno=84, col_offset=16)], [], lineno=83, col_offset=12)], [], lineno=81, col_offset=8), Return(Name('result', Load(), lineno=85, col_offset=15), lineno=85, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('getencoding', arguments([Name('self', Param(), lineno=87, col_offset=20)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=88, col_offset=11), 'encodingheader', Load(), lineno=88, col_offset=11), [Is()], [Name('None', Load(), lineno=88, col_offset=34)], lineno=88, col_offset=11), [Return(Str('7bit', lineno=89, col_offset=19), lineno=89, col_offset=12)], [], lineno=88, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=90, col_offset=15), 'encodingheader', Load(), lineno=90, col_offset=15), 'lower', Load(), lineno=90, col_offset=15), [], [], None, None, lineno=90, col_offset=15), lineno=90, col_offset=8)], [], lineno=87, col_offset=4), FunctionDef('gettype', arguments([Name('self', Param(), lineno=92, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=93, col_offset=15), 'type', Load(), lineno=93, col_offset=15), lineno=93, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('getmaintype', arguments([Name('self', Param(), lineno=95, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=96, col_offset=15), 'maintype', Load(), lineno=96, col_offset=15), lineno=96, col_offset=8)], [], lineno=95, col_offset=4), FunctionDef('getsubtype', arguments([Name('self', Param(), lineno=98, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=99, col_offset=15), 'subtype', Load(), lineno=99, col_offset=15), lineno=99, col_offset=8)], [], lineno=98, col_offset=4)], [], lineno=20, col_offset=0), TryExcept([Import([alias('thread', None)], lineno=108, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=109, col_offset=7), None, [Import([alias('dummy_thread', 'thread')], lineno=110, col_offset=4)], lineno=109, col_offset=0)], [], lineno=107, col_offset=0), Assign([Name('_counter_lock', Store(), lineno=111, col_offset=0)], Call(Attribute(Name('thread', Load(), lineno=111, col_offset=16), 'allocate_lock', Load(), lineno=111, col_offset=16), [], [], None, None, lineno=111, col_offset=16), lineno=111, col_offset=0), Delete([Name('thread', Del(), lineno=112, col_offset=4)], lineno=112, col_offset=0), Assign([Name('_counter', Store(), lineno=114, col_offset=0)], Num(0, lineno=114, col_offset=11), lineno=114, col_offset=0), FunctionDef('_get_next_counter', arguments([], None, None, []), [Global(['_counter'], lineno=116, col_offset=4), Expr(Call(Attribute(Name('_counter_lock', Load(), lineno=117, col_offset=4), 'acquire', Load(), lineno=117, col_offset=4), [], [], None, None, lineno=117, col_offset=4), lineno=117, col_offset=4), AugAssign(Name('_counter', Store(), lineno=118, col_offset=4), Add(), Num(1, lineno=118, col_offset=16), lineno=118, col_offset=4), Assign([Name('result', Store(), lineno=119, col_offset=4)], Name('_counter', Load(), lineno=119, col_offset=13), lineno=119, col_offset=4), Expr(Call(Attribute(Name('_counter_lock', Load(), lineno=120, col_offset=4), 'release', Load(), lineno=120, col_offset=4), [], [], None, None, lineno=120, col_offset=4), lineno=120, col_offset=4), Return(Name('result', Load(), lineno=121, col_offset=11), lineno=121, col_offset=4)], [], lineno=115, col_offset=0), Assign([Name('_prefix', Store(), lineno=123, col_offset=0)], Name('None', Load(), lineno=123, col_offset=10), lineno=123, col_offset=0), FunctionDef('choose_boundary', arguments([], None, None, []), [Expr(Str("Return a string usable as a multipart boundary.\n\n    The string chosen is unique within a single program run, and\n    incorporates the user id (if available), process id (if available),\n    and current time.  So it's very unlikely the returned string appears\n    in message text, but there's no guarantee.\n\n    The boundary contains dots so you have to quote it in the header.", lineno=133, col_offset=-1), lineno=133, col_offset=-1), Global(['_prefix'], lineno=135, col_offset=4), Import([alias('time', None)], lineno=136, col_offset=4), If(Compare(Name('_prefix', Load(), lineno=137, col_offset=7), [Is()], [Name('None', Load(), lineno=137, col_offset=18)], lineno=137, col_offset=7), [Import([alias('socket', None)], lineno=138, col_offset=8), TryExcept([Assign([Name('hostid', Store(), lineno=140, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=140, col_offset=21), 'gethostbyname', Load(), lineno=140, col_offset=21), [Call(Attribute(Name('socket', Load(), lineno=140, col_offset=42), 'gethostname', Load(), lineno=140, col_offset=42), [], [], None, None, lineno=140, col_offset=42)], [], None, None, lineno=140, col_offset=21), lineno=140, col_offset=12)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=141, col_offset=15), 'gaierror', Load(), lineno=141, col_offset=15), None, [Assign([Name('hostid', Store(), lineno=142, col_offset=12)], Str('127.0.0.1', lineno=142, col_offset=21), lineno=142, col_offset=12)], lineno=141, col_offset=8)], [], lineno=139, col_offset=8), TryExcept([Assign([Name('uid', Store(), lineno=144, col_offset=12)], Call(Name('repr', Load(), lineno=144, col_offset=18), [Call(Attribute(Name('os', Load(), lineno=144, col_offset=23), 'getuid', Load(), lineno=144, col_offset=23), [], [], None, None, lineno=144, col_offset=23)], [], None, None, lineno=144, col_offset=18), lineno=144, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=145, col_offset=15), None, [Assign([Name('uid', Store(), lineno=146, col_offset=12)], Str('1', lineno=146, col_offset=18), lineno=146, col_offset=12)], lineno=145, col_offset=8)], [], lineno=143, col_offset=8), TryExcept([Assign([Name('pid', Store(), lineno=148, col_offset=12)], Call(Name('repr', Load(), lineno=148, col_offset=18), [Call(Attribute(Name('os', Load(), lineno=148, col_offset=23), 'getpid', Load(), lineno=148, col_offset=23), [], [], None, None, lineno=148, col_offset=23)], [], None, None, lineno=148, col_offset=18), lineno=148, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=149, col_offset=15), None, [Assign([Name('pid', Store(), lineno=150, col_offset=12)], Str('1', lineno=150, col_offset=18), lineno=150, col_offset=12)], lineno=149, col_offset=8)], [], lineno=147, col_offset=8), Assign([Name('_prefix', Store(), lineno=151, col_offset=8)], BinOp(BinOp(BinOp(BinOp(Name('hostid', Load(), lineno=151, col_offset=18), Add(), Str('.', lineno=151, col_offset=27), lineno=151, col_offset=18), Add(), Name('uid', Load(), lineno=151, col_offset=33), lineno=151, col_offset=31), Add(), Str('.', lineno=151, col_offset=39), lineno=151, col_offset=37), Add(), Name('pid', Load(), lineno=151, col_offset=45), lineno=151, col_offset=43), lineno=151, col_offset=8)], [], lineno=137, col_offset=4), Return(BinOp(Str('%s.%.3f.%d', lineno=152, col_offset=11), Mod(), Tuple([Name('_prefix', Load(), lineno=152, col_offset=27), Call(Attribute(Name('time', Load(), lineno=152, col_offset=36), 'time', Load(), lineno=152, col_offset=36), [], [], None, None, lineno=152, col_offset=36), Call(Name('_get_next_counter', Load(), lineno=152, col_offset=49), [], [], None, None, lineno=152, col_offset=49)], Load(), lineno=152, col_offset=27), lineno=152, col_offset=11), lineno=152, col_offset=4)], [], lineno=125, col_offset=0), FunctionDef('decode', arguments([Name('input', Param(), lineno=157, col_offset=11), Name('output', Param(), lineno=157, col_offset=18), Name('encoding', Param(), lineno=157, col_offset=26)], None, None, []), [Expr(Str('Decode common content-transfer-encodings (base64, quopri, uuencode).', lineno=158, col_offset=4), lineno=158, col_offset=4), If(Compare(Name('encoding', Load(), lineno=159, col_offset=7), [Eq()], [Str('base64', lineno=159, col_offset=19)], lineno=159, col_offset=7), [Import([alias('base64', None)], lineno=160, col_offset=8), Return(Call(Attribute(Name('base64', Load(), lineno=161, col_offset=15), 'decode', Load(), lineno=161, col_offset=15), [Name('input', Load(), lineno=161, col_offset=29), Name('output', Load(), lineno=161, col_offset=36)], [], None, None, lineno=161, col_offset=15), lineno=161, col_offset=8)], [], lineno=159, col_offset=4), If(Compare(Name('encoding', Load(), lineno=162, col_offset=7), [Eq()], [Str('quoted-printable', lineno=162, col_offset=19)], lineno=162, col_offset=7), [Import([alias('quopri', None)], lineno=163, col_offset=8), Return(Call(Attribute(Name('quopri', Load(), lineno=164, col_offset=15), 'decode', Load(), lineno=164, col_offset=15), [Name('input', Load(), lineno=164, col_offset=29), Name('output', Load(), lineno=164, col_offset=36)], [], None, None, lineno=164, col_offset=15), lineno=164, col_offset=8)], [], lineno=162, col_offset=4), If(Compare(Name('encoding', Load(), lineno=165, col_offset=7), [In()], [Tuple([Str('uuencode', lineno=165, col_offset=20), Str('x-uuencode', lineno=165, col_offset=32), Str('uue', lineno=165, col_offset=46), Str('x-uue', lineno=165, col_offset=53)], Load(), lineno=165, col_offset=20)], lineno=165, col_offset=7), [Import([alias('uu', None)], lineno=166, col_offset=8), Return(Call(Attribute(Name('uu', Load(), lineno=167, col_offset=15), 'decode', Load(), lineno=167, col_offset=15), [Name('input', Load(), lineno=167, col_offset=25), Name('output', Load(), lineno=167, col_offset=32)], [], None, None, lineno=167, col_offset=15), lineno=167, col_offset=8)], [], lineno=165, col_offset=4), If(Compare(Name('encoding', Load(), lineno=168, col_offset=7), [In()], [Tuple([Str('7bit', lineno=168, col_offset=20), Str('8bit', lineno=168, col_offset=28)], Load(), lineno=168, col_offset=20)], lineno=168, col_offset=7), [Return(Call(Attribute(Name('output', Load(), lineno=169, col_offset=15), 'write', Load(), lineno=169, col_offset=15), [Call(Attribute(Name('input', Load(), lineno=169, col_offset=28), 'read', Load(), lineno=169, col_offset=28), [], [], None, None, lineno=169, col_offset=28)], [], None, None, lineno=169, col_offset=15), lineno=169, col_offset=8)], [], lineno=168, col_offset=4), If(Compare(Name('encoding', Load(), lineno=170, col_offset=7), [In()], [Name('decodetab', Load(), lineno=170, col_offset=19)], lineno=170, col_offset=7), [Expr(Call(Name('pipethrough', Load(), lineno=171, col_offset=8), [Name('input', Load(), lineno=171, col_offset=20), Subscript(Name('decodetab', Load(), lineno=171, col_offset=27), Index(Name('encoding', Load(), lineno=171, col_offset=37)), Load(), lineno=171, col_offset=27), Name('output', Load(), lineno=171, col_offset=48)], [], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [Raise(Name('ValueError', Load(), lineno=173, col_offset=14), BinOp(Str('unknown Content-Transfer-Encoding: %s', lineno=174, col_offset=14), Mod(), Name('encoding', Load(), lineno=174, col_offset=56), lineno=174, col_offset=14), None, lineno=173, col_offset=8)], lineno=170, col_offset=4)], [], lineno=157, col_offset=0), FunctionDef('encode', arguments([Name('input', Param(), lineno=176, col_offset=11), Name('output', Param(), lineno=176, col_offset=18), Name('encoding', Param(), lineno=176, col_offset=26)], None, None, []), [Expr(Str('Encode common content-transfer-encodings (base64, quopri, uuencode).', lineno=177, col_offset=4), lineno=177, col_offset=4), If(Compare(Name('encoding', Load(), lineno=178, col_offset=7), [Eq()], [Str('base64', lineno=178, col_offset=19)], lineno=178, col_offset=7), [Import([alias('base64', None)], lineno=179, col_offset=8), Return(Call(Attribute(Name('base64', Load(), lineno=180, col_offset=15), 'encode', Load(), lineno=180, col_offset=15), [Name('input', Load(), lineno=180, col_offset=29), Name('output', Load(), lineno=180, col_offset=36)], [], None, None, lineno=180, col_offset=15), lineno=180, col_offset=8)], [], lineno=178, col_offset=4), If(Compare(Name('encoding', Load(), lineno=181, col_offset=7), [Eq()], [Str('quoted-printable', lineno=181, col_offset=19)], lineno=181, col_offset=7), [Import([alias('quopri', None)], lineno=182, col_offset=8), Return(Call(Attribute(Name('quopri', Load(), lineno=183, col_offset=15), 'encode', Load(), lineno=183, col_offset=15), [Name('input', Load(), lineno=183, col_offset=29), Name('output', Load(), lineno=183, col_offset=36), Num(0, lineno=183, col_offset=44)], [], None, None, lineno=183, col_offset=15), lineno=183, col_offset=8)], [], lineno=181, col_offset=4), If(Compare(Name('encoding', Load(), lineno=184, col_offset=7), [In()], [Tuple([Str('uuencode', lineno=184, col_offset=20), Str('x-uuencode', lineno=184, col_offset=32), Str('uue', lineno=184, col_offset=46), Str('x-uue', lineno=184, col_offset=53)], Load(), lineno=184, col_offset=20)], lineno=184, col_offset=7), [Import([alias('uu', None)], lineno=185, col_offset=8), Return(Call(Attribute(Name('uu', Load(), lineno=186, col_offset=15), 'encode', Load(), lineno=186, col_offset=15), [Name('input', Load(), lineno=186, col_offset=25), Name('output', Load(), lineno=186, col_offset=32)], [], None, None, lineno=186, col_offset=15), lineno=186, col_offset=8)], [], lineno=184, col_offset=4), If(Compare(Name('encoding', Load(), lineno=187, col_offset=7), [In()], [Tuple([Str('7bit', lineno=187, col_offset=20), Str('8bit', lineno=187, col_offset=28)], Load(), lineno=187, col_offset=20)], lineno=187, col_offset=7), [Return(Call(Attribute(Name('output', Load(), lineno=188, col_offset=15), 'write', Load(), lineno=188, col_offset=15), [Call(Attribute(Name('input', Load(), lineno=188, col_offset=28), 'read', Load(), lineno=188, col_offset=28), [], [], None, None, lineno=188, col_offset=28)], [], None, None, lineno=188, col_offset=15), lineno=188, col_offset=8)], [], lineno=187, col_offset=4), If(Compare(Name('encoding', Load(), lineno=189, col_offset=7), [In()], [Name('encodetab', Load(), lineno=189, col_offset=19)], lineno=189, col_offset=7), [Expr(Call(Name('pipethrough', Load(), lineno=190, col_offset=8), [Name('input', Load(), lineno=190, col_offset=20), Subscript(Name('encodetab', Load(), lineno=190, col_offset=27), Index(Name('encoding', Load(), lineno=190, col_offset=37)), Load(), lineno=190, col_offset=27), Name('output', Load(), lineno=190, col_offset=48)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [Raise(Name('ValueError', Load(), lineno=192, col_offset=14), BinOp(Str('unknown Content-Transfer-Encoding: %s', lineno=193, col_offset=14), Mod(), Name('encoding', Load(), lineno=193, col_offset=56), lineno=193, col_offset=14), None, lineno=192, col_offset=8)], lineno=189, col_offset=4)], [], lineno=176, col_offset=0), Assign([Name('uudecode_pipe', Store(), lineno=199, col_offset=0)], Str('(\nTEMP=/tmp/@uu.$$\nsed "s%^begin [0-7][0-7]* .*%begin 600 $TEMP%" | uudecode\ncat $TEMP\nrm $TEMP\n)', lineno=204, col_offset=-1), lineno=199, col_offset=0), Assign([Name('decodetab', Store(), lineno=206, col_offset=0)], Dict([Str('uuencode', lineno=207, col_offset=8), Str('x-uuencode', lineno=208, col_offset=8), Str('uue', lineno=209, col_offset=8), Str('x-uue', lineno=210, col_offset=8), Str('quoted-printable', lineno=211, col_offset=8), Str('base64', lineno=212, col_offset=8)], [Name('uudecode_pipe', Load(), lineno=207, col_offset=32), Name('uudecode_pipe', Load(), lineno=208, col_offset=32), Name('uudecode_pipe', Load(), lineno=209, col_offset=32), Name('uudecode_pipe', Load(), lineno=210, col_offset=32), Str('mmencode -u -q', lineno=211, col_offset=32), Str('mmencode -u -b', lineno=212, col_offset=32)], lineno=206, col_offset=12), lineno=206, col_offset=0), Assign([Name('encodetab', Store(), lineno=215, col_offset=0)], Dict([Str('x-uuencode', lineno=216, col_offset=8), Str('uuencode', lineno=217, col_offset=8), Str('x-uue', lineno=218, col_offset=8), Str('uue', lineno=219, col_offset=8), Str('quoted-printable', lineno=220, col_offset=8), Str('base64', lineno=221, col_offset=8)], [Str('uuencode tempfile', lineno=216, col_offset=32), Str('uuencode tempfile', lineno=217, col_offset=32), Str('uuencode tempfile', lineno=218, col_offset=32), Str('uuencode tempfile', lineno=219, col_offset=32), Str('mmencode -q', lineno=220, col_offset=32), Str('mmencode -b', lineno=221, col_offset=32)], lineno=215, col_offset=12), lineno=215, col_offset=0), FunctionDef('pipeto', arguments([Name('input', Param(), lineno=224, col_offset=11), Name('command', Param(), lineno=224, col_offset=18)], None, None, []), [Assign([Name('pipe', Store(), lineno=225, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=225, col_offset=11), 'popen', Load(), lineno=225, col_offset=11), [Name('command', Load(), lineno=225, col_offset=20), Str('w', lineno=225, col_offset=29)], [], None, None, lineno=225, col_offset=11), lineno=225, col_offset=4), Expr(Call(Name('copyliteral', Load(), lineno=226, col_offset=4), [Name('input', Load(), lineno=226, col_offset=16), Name('pipe', Load(), lineno=226, col_offset=23)], [], None, None, lineno=226, col_offset=4), lineno=226, col_offset=4), Expr(Call(Attribute(Name('pipe', Load(), lineno=227, col_offset=4), 'close', Load(), lineno=227, col_offset=4), [], [], None, None, lineno=227, col_offset=4), lineno=227, col_offset=4)], [], lineno=224, col_offset=0), FunctionDef('pipethrough', arguments([Name('input', Param(), lineno=229, col_offset=16), Name('command', Param(), lineno=229, col_offset=23), Name('output', Param(), lineno=229, col_offset=32)], None, None, []), [Assign([Tuple([Name('fd', Store(), lineno=230, col_offset=5), Name('tempname', Store(), lineno=230, col_offset=9)], Store(), lineno=230, col_offset=5)], Call(Attribute(Name('tempfile', Load(), lineno=230, col_offset=21), 'mkstemp', Load(), lineno=230, col_offset=21), [], [], None, None, lineno=230, col_offset=21), lineno=230, col_offset=4), Assign([Name('temp', Store(), lineno=231, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=231, col_offset=11), 'fdopen', Load(), lineno=231, col_offset=11), [Name('fd', Load(), lineno=231, col_offset=21), Str('w', lineno=231, col_offset=25)], [], None, None, lineno=231, col_offset=11), lineno=231, col_offset=4), Expr(Call(Name('copyliteral', Load(), lineno=232, col_offset=4), [Name('input', Load(), lineno=232, col_offset=16), Name('temp', Load(), lineno=232, col_offset=23)], [], None, None, lineno=232, col_offset=4), lineno=232, col_offset=4), Expr(Call(Attribute(Name('temp', Load(), lineno=233, col_offset=4), 'close', Load(), lineno=233, col_offset=4), [], [], None, None, lineno=233, col_offset=4), lineno=233, col_offset=4), Assign([Name('pipe', Store(), lineno=234, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=234, col_offset=11), 'popen', Load(), lineno=234, col_offset=11), [BinOp(BinOp(Name('command', Load(), lineno=234, col_offset=20), Add(), Str(' <', lineno=234, col_offset=30), lineno=234, col_offset=20), Add(), Name('tempname', Load(), lineno=234, col_offset=37), lineno=234, col_offset=35), Str('r', lineno=234, col_offset=47)], [], None, None, lineno=234, col_offset=11), lineno=234, col_offset=4), Expr(Call(Name('copybinary', Load(), lineno=235, col_offset=4), [Name('pipe', Load(), lineno=235, col_offset=15), Name('output', Load(), lineno=235, col_offset=21)], [], None, None, lineno=235, col_offset=4), lineno=235, col_offset=4), Expr(Call(Attribute(Name('pipe', Load(), lineno=236, col_offset=4), 'close', Load(), lineno=236, col_offset=4), [], [], None, None, lineno=236, col_offset=4), lineno=236, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=237, col_offset=4), 'unlink', Load(), lineno=237, col_offset=4), [Name('tempname', Load(), lineno=237, col_offset=14)], [], None, None, lineno=237, col_offset=4), lineno=237, col_offset=4)], [], lineno=229, col_offset=0), FunctionDef('copyliteral', arguments([Name('input', Param(), lineno=239, col_offset=16), Name('output', Param(), lineno=239, col_offset=23)], None, None, []), [While(Num(1, lineno=240, col_offset=10), [Assign([Name('line', Store(), lineno=241, col_offset=8)], Call(Attribute(Name('input', Load(), lineno=241, col_offset=15), 'readline', Load(), lineno=241, col_offset=15), [], [], None, None, lineno=241, col_offset=15), lineno=241, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=242, col_offset=15), lineno=242, col_offset=11), [Break( lineno=242, col_offset=21)], [], lineno=242, col_offset=8), Expr(Call(Attribute(Name('output', Load(), lineno=243, col_offset=8), 'write', Load(), lineno=243, col_offset=8), [Name('line', Load(), lineno=243, col_offset=21)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8)], [], lineno=240, col_offset=4)], [], lineno=239, col_offset=0), FunctionDef('copybinary', arguments([Name('input', Param(), lineno=245, col_offset=15), Name('output', Param(), lineno=245, col_offset=22)], None, None, []), [Assign([Name('BUFSIZE', Store(), lineno=246, col_offset=4)], Num(8192, lineno=246, col_offset=14), lineno=246, col_offset=4), While(Num(1, lineno=247, col_offset=10), [Assign([Name('line', Store(), lineno=248, col_offset=8)], Call(Attribute(Name('input', Load(), lineno=248, col_offset=15), 'read', Load(), lineno=248, col_offset=15), [Name('BUFSIZE', Load(), lineno=248, col_offset=26)], [], None, None, lineno=248, col_offset=15), lineno=248, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=249, col_offset=15), lineno=249, col_offset=11), [Break( lineno=249, col_offset=21)], [], lineno=249, col_offset=8), Expr(Call(Attribute(Name('output', Load(), lineno=250, col_offset=8), 'write', Load(), lineno=250, col_offset=8), [Name('line', Load(), lineno=250, col_offset=21)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8)], [], lineno=247, col_offset=4)], [], lineno=245, col_offset=0)])
