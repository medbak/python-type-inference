Module([Expr(Str("An FTP client class and some helper functions.\n\nBased on RFC 959: File Transfer Protocol (FTP), by J. Postel and J. Reynolds\n\nExample:\n\n>>> from ftplib import FTP\n>>> ftp = FTP('ftp.python.org') # connect to host, default port\n>>> ftp.login() # default, i.e.: user anonymous, passwd anonymous@\n'230 Guest login ok, access restrictions apply.'\n>>> ftp.retrlines('LIST') # list directory contents\ntotal 9\ndrwxr-xr-x   8 root     wheel        1024 Jan  3  1994 .\ndrwxr-xr-x   8 root     wheel        1024 Jan  3  1994 ..\ndrwxr-xr-x   2 root     wheel        1024 Jan  3  1994 bin\ndrwxr-xr-x   2 root     wheel        1024 Jan  3  1994 etc\nd-wxrwxr-x   2 ftp      wheel        1024 Sep  5 13:43 incoming\ndrwxr-xr-x   2 root     wheel        1024 Nov 17  1993 lib\ndrwxr-xr-x   6 1094     wheel        1024 Sep 13 19:07 pub\ndrwxr-xr-x   3 root     wheel        1024 Jan  3  1994 usr\n-rw-r--r--   1 root     root          312 Aug  1  1994 welcome.msg\n'226 Transfer complete.'\n>>> ftp.quit()\n'221 Goodbye.'\n>>>\n\nA nice test that reveals some of the network dialogue would be:\npython ftplib.py -d localhost -l -p -l\n", lineno=29, col_offset=-1), lineno=29, col_offset=-1), Import([alias('os', None)], lineno=39, col_offset=0), Import([alias('sys', None)], lineno=40, col_offset=0), TryExcept([Import([alias('SOCKS', None)], lineno=44, col_offset=4), Assign([Name('socket', Store(), lineno=44, col_offset=18)], Name('SOCKS', Load(), lineno=44, col_offset=27), lineno=44, col_offset=18), Delete([Name('SOCKS', Del(), lineno=44, col_offset=38)], lineno=44, col_offset=34), ImportFrom('socket', [alias('getfqdn', None)], 0, lineno=45, col_offset=4), Assign([Attribute(Name('socket', Load(), lineno=45, col_offset=32), 'getfqdn', Store(), lineno=45, col_offset=32)], Name('getfqdn', Load(), lineno=45, col_offset=49), lineno=45, col_offset=32), Delete([Name('getfqdn', Del(), lineno=45, col_offset=62)], lineno=45, col_offset=58)], [ExceptHandler(Name('ImportError', Load(), lineno=46, col_offset=7), None, [Import([alias('socket', None)], lineno=47, col_offset=4)], lineno=46, col_offset=0)], [], lineno=43, col_offset=0), ImportFrom('socket', [alias('_GLOBAL_DEFAULT_TIMEOUT', None)], 0, lineno=48, col_offset=0), Assign([Name('__all__', Store(), lineno=50, col_offset=0)], List([Str('FTP', lineno=50, col_offset=11), Str('Netrc', lineno=50, col_offset=17)], Load(), lineno=50, col_offset=10), lineno=50, col_offset=0), Assign([Name('MSG_OOB', Store(), lineno=53, col_offset=0)], Num(1, lineno=53, col_offset=10), lineno=53, col_offset=0), Assign([Name('FTP_PORT', Store(), lineno=57, col_offset=0)], Num(21, lineno=57, col_offset=11), lineno=57, col_offset=0), ClassDef('Error', [Name('Exception', Load(), lineno=61, col_offset=12)], [Pass( lineno=61, col_offset=24)], [], lineno=61, col_offset=0), ClassDef('error_reply', [Name('Error', Load(), lineno=62, col_offset=18)], [Pass( lineno=62, col_offset=26)], [], lineno=62, col_offset=0), ClassDef('error_temp', [Name('Error', Load(), lineno=63, col_offset=17)], [Pass( lineno=63, col_offset=25)], [], lineno=63, col_offset=0), ClassDef('error_perm', [Name('Error', Load(), lineno=64, col_offset=17)], [Pass( lineno=64, col_offset=25)], [], lineno=64, col_offset=0), ClassDef('error_proto', [Name('Error', Load(), lineno=65, col_offset=18)], [Pass( lineno=65, col_offset=26)], [], lineno=65, col_offset=0), Assign([Name('all_errors', Store(), lineno=70, col_offset=0)], Tuple([Name('Error', Load(), lineno=70, col_offset=14), Name('IOError', Load(), lineno=70, col_offset=21), Name('EOFError', Load(), lineno=70, col_offset=30)], Load(), lineno=70, col_offset=14), lineno=70, col_offset=0), Assign([Name('CRLF', Store(), lineno=74, col_offset=0)], Str('\r\n', lineno=74, col_offset=7), lineno=74, col_offset=0), ClassDef('FTP', [], [Expr(Str("An FTP client class.\n\n    To create a connection, call the class using these arguments:\n            host, user, passwd, acct, timeout\n\n    The first four arguments are all strings, and have default value ''.\n    timeout must be numeric and defaults to None if not passed,\n    meaning that no timeout will be set on any ftp socket(s)\n    If a timeout is passed, then this is now the default timeout for all ftp\n    socket operations for this instance.\n\n    Then use self.connect() with optional host and port argument.\n\n    To download a file, use ftp.retrlines('RETR ' + filename),\n    or ftp.retrbinary() with slightly different arguments.\n    To upload a file, use ftp.storlines() or ftp.storbinary(),\n    which have an open file as argument (see their definitions\n    below for details).\n    The download/upload functions first issue appropriate TYPE\n    and PORT or PASV commands.\n", lineno=99, col_offset=-1), lineno=99, col_offset=-1), Assign([Name('debugging', Store(), lineno=101, col_offset=4)], Num(0, lineno=101, col_offset=16), lineno=101, col_offset=4), Assign([Name('host', Store(), lineno=102, col_offset=4)], Str('', lineno=102, col_offset=11), lineno=102, col_offset=4), Assign([Name('port', Store(), lineno=103, col_offset=4)], Name('FTP_PORT', Load(), lineno=103, col_offset=11), lineno=103, col_offset=4), Assign([Name('sock', Store(), lineno=104, col_offset=4)], Name('None', Load(), lineno=104, col_offset=11), lineno=104, col_offset=4), Assign([Name('file', Store(), lineno=105, col_offset=4)], Name('None', Load(), lineno=105, col_offset=11), lineno=105, col_offset=4), Assign([Name('welcome', Store(), lineno=106, col_offset=4)], Name('None', Load(), lineno=106, col_offset=14), lineno=106, col_offset=4), Assign([Name('passiveserver', Store(), lineno=107, col_offset=4)], Num(1, lineno=107, col_offset=20), lineno=107, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=113, col_offset=17), Name('host', Param(), lineno=113, col_offset=23), Name('user', Param(), lineno=113, col_offset=32), Name('passwd', Param(), lineno=113, col_offset=41), Name('acct', Param(), lineno=113, col_offset=52), Name('timeout', Param(), lineno=114, col_offset=17)], None, None, [Str('', lineno=113, col_offset=28), Str('', lineno=113, col_offset=37), Str('', lineno=113, col_offset=48), Str('', lineno=113, col_offset=57), Name('_GLOBAL_DEFAULT_TIMEOUT', Load(), lineno=114, col_offset=25)]), [Assign([Attribute(Name('self', Load(), lineno=115, col_offset=8), 'timeout', Store(), lineno=115, col_offset=8)], Name('timeout', Load(), lineno=115, col_offset=23), lineno=115, col_offset=8), If(Name('host', Load(), lineno=116, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=12), 'connect', Load(), lineno=117, col_offset=12), [Name('host', Load(), lineno=117, col_offset=25)], [], None, None, lineno=117, col_offset=12), lineno=117, col_offset=12), If(Name('user', Load(), lineno=118, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=16), 'login', Load(), lineno=119, col_offset=16), [Name('user', Load(), lineno=119, col_offset=27), Name('passwd', Load(), lineno=119, col_offset=33), Name('acct', Load(), lineno=119, col_offset=41)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=16)], [], lineno=118, col_offset=12)], [], lineno=116, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('connect', arguments([Name('self', Param(), lineno=121, col_offset=16), Name('host', Param(), lineno=121, col_offset=22), Name('port', Param(), lineno=121, col_offset=31), Name('timeout', Param(), lineno=121, col_offset=39)], None, None, [Str('', lineno=121, col_offset=27), Num(0, lineno=121, col_offset=36), Num(-999, lineno=121, col_offset=48)]), [Expr(Str('Connect to host.  Arguments are:\n         - host: hostname to connect to (string, default previous host)\n         - port: port to connect to (integer, default previous port)\n        ', lineno=125, col_offset=-1), lineno=125, col_offset=-1), If(Compare(Name('host', Load(), lineno=126, col_offset=11), [NotEq()], [Str('', lineno=126, col_offset=19)], lineno=126, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=127, col_offset=12), 'host', Store(), lineno=127, col_offset=12)], Name('host', Load(), lineno=127, col_offset=24), lineno=127, col_offset=12)], [], lineno=126, col_offset=8), If(Compare(Name('port', Load(), lineno=128, col_offset=11), [Gt()], [Num(0, lineno=128, col_offset=18)], lineno=128, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=129, col_offset=12), 'port', Store(), lineno=129, col_offset=12)], Name('port', Load(), lineno=129, col_offset=24), lineno=129, col_offset=12)], [], lineno=128, col_offset=8), If(Compare(Name('timeout', Load(), lineno=130, col_offset=11), [NotEq()], [Num(-999, lineno=130, col_offset=23)], lineno=130, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=131, col_offset=12), 'timeout', Store(), lineno=131, col_offset=12)], Name('timeout', Load(), lineno=131, col_offset=27), lineno=131, col_offset=12)], [], lineno=130, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=132, col_offset=8), 'sock', Store(), lineno=132, col_offset=8)], Call(Attribute(Name('socket', Load(), lineno=132, col_offset=20), 'create_connection', Load(), lineno=132, col_offset=20), [Tuple([Attribute(Name('self', Load(), lineno=132, col_offset=46), 'host', Load(), lineno=132, col_offset=46), Attribute(Name('self', Load(), lineno=132, col_offset=57), 'port', Load(), lineno=132, col_offset=57)], Load(), lineno=132, col_offset=46), Attribute(Name('self', Load(), lineno=132, col_offset=69), 'timeout', Load(), lineno=132, col_offset=69)], [], None, None, lineno=132, col_offset=20), lineno=132, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=133, col_offset=8), 'af', Store(), lineno=133, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=133, col_offset=18), 'sock', Load(), lineno=133, col_offset=18), 'family', Load(), lineno=133, col_offset=18), lineno=133, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=134, col_offset=8), 'file', Store(), lineno=134, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=134, col_offset=20), 'sock', Load(), lineno=134, col_offset=20), 'makefile', Load(), lineno=134, col_offset=20), [Str('rb', lineno=134, col_offset=39)], [], None, None, lineno=134, col_offset=20), lineno=134, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=135, col_offset=8), 'welcome', Store(), lineno=135, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=135, col_offset=23), 'getresp', Load(), lineno=135, col_offset=23), [], [], None, None, lineno=135, col_offset=23), lineno=135, col_offset=8), Return(Attribute(Name('self', Load(), lineno=136, col_offset=15), 'welcome', Load(), lineno=136, col_offset=15), lineno=136, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('getwelcome', arguments([Name('self', Param(), lineno=138, col_offset=19)], None, None, []), [Expr(Str('Get the welcome message from the server.\n        (this is read and squirreled away by connect())', lineno=140, col_offset=-1), lineno=140, col_offset=-1), If(Attribute(Name('self', Load(), lineno=141, col_offset=11), 'debugging', Load(), lineno=141, col_offset=11), [Print(None, [Str('*welcome*', lineno=142, col_offset=18), Call(Attribute(Name('self', Load(), lineno=142, col_offset=31), 'sanitize', Load(), lineno=142, col_offset=31), [Attribute(Name('self', Load(), lineno=142, col_offset=45), 'welcome', Load(), lineno=142, col_offset=45)], [], None, None, lineno=142, col_offset=31)], True, lineno=142, col_offset=12)], [], lineno=141, col_offset=8), Return(Attribute(Name('self', Load(), lineno=143, col_offset=15), 'welcome', Load(), lineno=143, col_offset=15), lineno=143, col_offset=8)], [], lineno=138, col_offset=4), FunctionDef('set_debuglevel', arguments([Name('self', Param(), lineno=145, col_offset=23), Name('level', Param(), lineno=145, col_offset=29)], None, None, []), [Expr(Str('Set the debugging level.\n        The required argument level means:\n        0: no debugging output (default)\n        1: print commands and responses but not body text etc.\n        2: also print raw lines read and sent before stripping CR/LF', lineno=150, col_offset=-1), lineno=150, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=151, col_offset=8), 'debugging', Store(), lineno=151, col_offset=8)], Name('level', Load(), lineno=151, col_offset=25), lineno=151, col_offset=8)], [], lineno=145, col_offset=4), Assign([Name('debug', Store(), lineno=152, col_offset=4)], Name('set_debuglevel', Load(), lineno=152, col_offset=12), lineno=152, col_offset=4), FunctionDef('set_pasv', arguments([Name('self', Param(), lineno=154, col_offset=17), Name('val', Param(), lineno=154, col_offset=23)], None, None, []), [Expr(Str('Use passive or active mode for data transfers.\n        With a false argument, use the normal PORT mode,\n        With a true argument, use the PASV command.', lineno=157, col_offset=-1), lineno=157, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=158, col_offset=8), 'passiveserver', Store(), lineno=158, col_offset=8)], Name('val', Load(), lineno=158, col_offset=29), lineno=158, col_offset=8)], [], lineno=154, col_offset=4), FunctionDef('sanitize', arguments([Name('self', Param(), lineno=161, col_offset=17), Name('s', Param(), lineno=161, col_offset=23)], None, None, []), [If(BoolOp(Or(), [Compare(Subscript(Name('s', Load(), lineno=162, col_offset=11), Slice(None, Num(5, lineno=162, col_offset=14), None), Load(), lineno=162, col_offset=11), [Eq()], [Str('pass ', lineno=162, col_offset=20)], lineno=162, col_offset=11), Compare(Subscript(Name('s', Load(), lineno=162, col_offset=31), Slice(None, Num(5, lineno=162, col_offset=34), None), Load(), lineno=162, col_offset=31), [Eq()], [Str('PASS ', lineno=162, col_offset=40)], lineno=162, col_offset=31)], lineno=162, col_offset=11), [Assign([Name('i', Store(), lineno=163, col_offset=12)], Call(Name('len', Load(), lineno=163, col_offset=16), [Name('s', Load(), lineno=163, col_offset=20)], [], None, None, lineno=163, col_offset=16), lineno=163, col_offset=12), While(BoolOp(And(), [Compare(Name('i', Load(), lineno=164, col_offset=18), [Gt()], [Num(5, lineno=164, col_offset=22)], lineno=164, col_offset=18), Compare(Subscript(Name('s', Load(), lineno=164, col_offset=28), Index(BinOp(Name('i', Load(), lineno=164, col_offset=30), Sub(), Num(1, lineno=164, col_offset=32), lineno=164, col_offset=30)), Load(), lineno=164, col_offset=28), [In()], [Str('\r\n', lineno=164, col_offset=38)], lineno=164, col_offset=28)], lineno=164, col_offset=18), [Assign([Name('i', Store(), lineno=165, col_offset=16)], BinOp(Name('i', Load(), lineno=165, col_offset=20), Sub(), Num(1, lineno=165, col_offset=22), lineno=165, col_offset=20), lineno=165, col_offset=16)], [], lineno=164, col_offset=12), Assign([Name('s', Store(), lineno=166, col_offset=12)], BinOp(BinOp(Subscript(Name('s', Load(), lineno=166, col_offset=16), Slice(None, Num(5, lineno=166, col_offset=19), None), Load(), lineno=166, col_offset=16), Add(), BinOp(Str('*', lineno=166, col_offset=24), Mult(), BinOp(Name('i', Load(), lineno=166, col_offset=29), Sub(), Num(5, lineno=166, col_offset=31), lineno=166, col_offset=29), lineno=166, col_offset=24), lineno=166, col_offset=16), Add(), Subscript(Name('s', Load(), lineno=166, col_offset=36), Slice(Name('i', Load(), lineno=166, col_offset=38), None, None), Load(), lineno=166, col_offset=36), lineno=166, col_offset=34), lineno=166, col_offset=12)], [], lineno=162, col_offset=8), Return(Call(Name('repr', Load(), lineno=167, col_offset=15), [Name('s', Load(), lineno=167, col_offset=20)], [], None, None, lineno=167, col_offset=15), lineno=167, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('putline', arguments([Name('self', Param(), lineno=170, col_offset=16), Name('line', Param(), lineno=170, col_offset=22)], None, None, []), [Assign([Name('line', Store(), lineno=171, col_offset=8)], BinOp(Name('line', Load(), lineno=171, col_offset=15), Add(), Name('CRLF', Load(), lineno=171, col_offset=22), lineno=171, col_offset=15), lineno=171, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=172, col_offset=11), 'debugging', Load(), lineno=172, col_offset=11), [Gt()], [Num(1, lineno=172, col_offset=28)], lineno=172, col_offset=11), [Print(None, [Str('*put*', lineno=172, col_offset=37), Call(Attribute(Name('self', Load(), lineno=172, col_offset=46), 'sanitize', Load(), lineno=172, col_offset=46), [Name('line', Load(), lineno=172, col_offset=60)], [], None, None, lineno=172, col_offset=46)], True, lineno=172, col_offset=31)], [], lineno=172, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'sock', Load(), lineno=173, col_offset=8), 'sendall', Load(), lineno=173, col_offset=8), [Name('line', Load(), lineno=173, col_offset=26)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('putcmd', arguments([Name('self', Param(), lineno=176, col_offset=15), Name('line', Param(), lineno=176, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=177, col_offset=11), 'debugging', Load(), lineno=177, col_offset=11), [Print(None, [Str('*cmd*', lineno=177, col_offset=33), Call(Attribute(Name('self', Load(), lineno=177, col_offset=42), 'sanitize', Load(), lineno=177, col_offset=42), [Name('line', Load(), lineno=177, col_offset=56)], [], None, None, lineno=177, col_offset=42)], True, lineno=177, col_offset=27)], [], lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=8), 'putline', Load(), lineno=178, col_offset=8), [Name('line', Load(), lineno=178, col_offset=21)], [], None, None, lineno=178, col_offset=8), lineno=178, col_offset=8)], [], lineno=176, col_offset=4), FunctionDef('getline', arguments([Name('self', Param(), lineno=182, col_offset=16)], None, None, []), [Assign([Name('line', Store(), lineno=183, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=183, col_offset=15), 'file', Load(), lineno=183, col_offset=15), 'readline', Load(), lineno=183, col_offset=15), [], [], None, None, lineno=183, col_offset=15), lineno=183, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=184, col_offset=11), 'debugging', Load(), lineno=184, col_offset=11), [Gt()], [Num(1, lineno=184, col_offset=28)], lineno=184, col_offset=11), [Print(None, [Str('*get*', lineno=185, col_offset=18), Call(Attribute(Name('self', Load(), lineno=185, col_offset=27), 'sanitize', Load(), lineno=185, col_offset=27), [Name('line', Load(), lineno=185, col_offset=41)], [], None, None, lineno=185, col_offset=27)], True, lineno=185, col_offset=12)], [], lineno=184, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=186, col_offset=15), lineno=186, col_offset=11), [Raise(Name('EOFError', Load(), lineno=186, col_offset=27), None, None, lineno=186, col_offset=21)], [], lineno=186, col_offset=8), If(Compare(Subscript(Name('line', Load(), lineno=187, col_offset=11), Slice(Num(-2, lineno=187, col_offset=17), None, None), Load(), lineno=187, col_offset=11), [Eq()], [Name('CRLF', Load(), lineno=187, col_offset=24)], lineno=187, col_offset=11), [Assign([Name('line', Store(), lineno=187, col_offset=30)], Subscript(Name('line', Load(), lineno=187, col_offset=37), Slice(None, Num(-2, lineno=187, col_offset=44), None), Load(), lineno=187, col_offset=37), lineno=187, col_offset=30)], [If(Compare(Subscript(Name('line', Load(), lineno=188, col_offset=13), Slice(Num(-1, lineno=188, col_offset=19), None, None), Load(), lineno=188, col_offset=13), [In()], [Name('CRLF', Load(), lineno=188, col_offset=26)], lineno=188, col_offset=13), [Assign([Name('line', Store(), lineno=188, col_offset=32)], Subscript(Name('line', Load(), lineno=188, col_offset=39), Slice(None, Num(-1, lineno=188, col_offset=46), None), Load(), lineno=188, col_offset=39), lineno=188, col_offset=32)], [], lineno=188, col_offset=13)], lineno=187, col_offset=8), Return(Name('line', Load(), lineno=189, col_offset=15), lineno=189, col_offset=8)], [], lineno=182, col_offset=4), FunctionDef('getmultiline', arguments([Name('self', Param(), lineno=195, col_offset=21)], None, None, []), [Assign([Name('line', Store(), lineno=196, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=196, col_offset=15), 'getline', Load(), lineno=196, col_offset=15), [], [], None, None, lineno=196, col_offset=15), lineno=196, col_offset=8), If(Compare(Subscript(Name('line', Load(), lineno=197, col_offset=11), Slice(Num(3, lineno=197, col_offset=16), Num(4, lineno=197, col_offset=18), None), Load(), lineno=197, col_offset=11), [Eq()], [Str('-', lineno=197, col_offset=24)], lineno=197, col_offset=11), [Assign([Name('code', Store(), lineno=198, col_offset=12)], Subscript(Name('line', Load(), lineno=198, col_offset=19), Slice(None, Num(3, lineno=198, col_offset=25), None), Load(), lineno=198, col_offset=19), lineno=198, col_offset=12), While(Num(1, lineno=199, col_offset=18), [Assign([Name('nextline', Store(), lineno=200, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=200, col_offset=27), 'getline', Load(), lineno=200, col_offset=27), [], [], None, None, lineno=200, col_offset=27), lineno=200, col_offset=16), Assign([Name('line', Store(), lineno=201, col_offset=16)], BinOp(Name('line', Load(), lineno=201, col_offset=23), Add(), BinOp(Str('\n', lineno=201, col_offset=31), Add(), Name('nextline', Load(), lineno=201, col_offset=38), lineno=201, col_offset=31), lineno=201, col_offset=23), lineno=201, col_offset=16), If(BoolOp(And(), [Compare(Subscript(Name('nextline', Load(), lineno=202, col_offset=19), Slice(None, Num(3, lineno=202, col_offset=29), None), Load(), lineno=202, col_offset=19), [Eq()], [Name('code', Load(), lineno=202, col_offset=35)], lineno=202, col_offset=19), Compare(Subscript(Name('nextline', Load(), lineno=203, col_offset=24), Slice(Num(3, lineno=203, col_offset=33), Num(4, lineno=203, col_offset=35), None), Load(), lineno=203, col_offset=24), [NotEq()], [Str('-', lineno=203, col_offset=41)], lineno=203, col_offset=24)], lineno=202, col_offset=19), [Break( lineno=204, col_offset=20)], [], lineno=202, col_offset=16)], [], lineno=199, col_offset=12)], [], lineno=197, col_offset=8), Return(Name('line', Load(), lineno=205, col_offset=15), lineno=205, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('getresp', arguments([Name('self', Param(), lineno=209, col_offset=16)], None, None, []), [Assign([Name('resp', Store(), lineno=210, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=210, col_offset=15), 'getmultiline', Load(), lineno=210, col_offset=15), [], [], None, None, lineno=210, col_offset=15), lineno=210, col_offset=8), If(Attribute(Name('self', Load(), lineno=211, col_offset=11), 'debugging', Load(), lineno=211, col_offset=11), [Print(None, [Str('*resp*', lineno=211, col_offset=33), Call(Attribute(Name('self', Load(), lineno=211, col_offset=43), 'sanitize', Load(), lineno=211, col_offset=43), [Name('resp', Load(), lineno=211, col_offset=57)], [], None, None, lineno=211, col_offset=43)], True, lineno=211, col_offset=27)], [], lineno=211, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=212, col_offset=8), 'lastresp', Store(), lineno=212, col_offset=8)], Subscript(Name('resp', Load(), lineno=212, col_offset=24), Slice(None, Num(3, lineno=212, col_offset=30), None), Load(), lineno=212, col_offset=24), lineno=212, col_offset=8), Assign([Name('c', Store(), lineno=213, col_offset=8)], Subscript(Name('resp', Load(), lineno=213, col_offset=12), Slice(None, Num(1, lineno=213, col_offset=18), None), Load(), lineno=213, col_offset=12), lineno=213, col_offset=8), If(Compare(Name('c', Load(), lineno=214, col_offset=11), [In()], [Tuple([Str('1', lineno=214, col_offset=17), Str('2', lineno=214, col_offset=22), Str('3', lineno=214, col_offset=27)], Load(), lineno=214, col_offset=17)], lineno=214, col_offset=11), [Return(Name('resp', Load(), lineno=215, col_offset=19), lineno=215, col_offset=12)], [], lineno=214, col_offset=8), If(Compare(Name('c', Load(), lineno=216, col_offset=11), [Eq()], [Str('4', lineno=216, col_offset=16)], lineno=216, col_offset=11), [Raise(Name('error_temp', Load(), lineno=217, col_offset=18), Name('resp', Load(), lineno=217, col_offset=30), None, lineno=217, col_offset=12)], [], lineno=216, col_offset=8), If(Compare(Name('c', Load(), lineno=218, col_offset=11), [Eq()], [Str('5', lineno=218, col_offset=16)], lineno=218, col_offset=11), [Raise(Name('error_perm', Load(), lineno=219, col_offset=18), Name('resp', Load(), lineno=219, col_offset=30), None, lineno=219, col_offset=12)], [], lineno=218, col_offset=8), Raise(Name('error_proto', Load(), lineno=220, col_offset=14), Name('resp', Load(), lineno=220, col_offset=27), None, lineno=220, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('voidresp', arguments([Name('self', Param(), lineno=222, col_offset=17)], None, None, []), [Expr(Str("Expect a response beginning with '2'.", lineno=223, col_offset=8), lineno=223, col_offset=8), Assign([Name('resp', Store(), lineno=224, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=224, col_offset=15), 'getresp', Load(), lineno=224, col_offset=15), [], [], None, None, lineno=224, col_offset=15), lineno=224, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=225, col_offset=11), Slice(None, Num(1, lineno=225, col_offset=17), None), Load(), lineno=225, col_offset=11), [NotEq()], [Str('2', lineno=225, col_offset=23)], lineno=225, col_offset=11), [Raise(Name('error_reply', Load(), lineno=226, col_offset=18), Name('resp', Load(), lineno=226, col_offset=31), None, lineno=226, col_offset=12)], [], lineno=225, col_offset=8), Return(Name('resp', Load(), lineno=227, col_offset=15), lineno=227, col_offset=8)], [], lineno=222, col_offset=4), FunctionDef('abort', arguments([Name('self', Param(), lineno=229, col_offset=14)], None, None, []), [Expr(Str("Abort a file transfer.  Uses out-of-band data.\n        This does not follow the procedure from the RFC to send Telnet\n        IP and Synch; that doesn't seem to work with the servers I've\n        tried.  Instead, just send the ABOR command as OOB data.", lineno=233, col_offset=-1), lineno=233, col_offset=-1), Assign([Name('line', Store(), lineno=234, col_offset=8)], BinOp(Str('ABOR', lineno=234, col_offset=15), Add(), Name('CRLF', Load(), lineno=234, col_offset=24), lineno=234, col_offset=15), lineno=234, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=235, col_offset=11), 'debugging', Load(), lineno=235, col_offset=11), [Gt()], [Num(1, lineno=235, col_offset=28)], lineno=235, col_offset=11), [Print(None, [Str('*put urgent*', lineno=235, col_offset=37), Call(Attribute(Name('self', Load(), lineno=235, col_offset=53), 'sanitize', Load(), lineno=235, col_offset=53), [Name('line', Load(), lineno=235, col_offset=67)], [], None, None, lineno=235, col_offset=53)], True, lineno=235, col_offset=31)], [], lineno=235, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'sock', Load(), lineno=236, col_offset=8), 'sendall', Load(), lineno=236, col_offset=8), [Name('line', Load(), lineno=236, col_offset=26), Name('MSG_OOB', Load(), lineno=236, col_offset=32)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Assign([Name('resp', Store(), lineno=237, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=237, col_offset=15), 'getmultiline', Load(), lineno=237, col_offset=15), [], [], None, None, lineno=237, col_offset=15), lineno=237, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=238, col_offset=11), Slice(None, Num(3, lineno=238, col_offset=17), None), Load(), lineno=238, col_offset=11), [NotIn()], [Tuple([Str('426', lineno=238, col_offset=28), Str('225', lineno=238, col_offset=35), Str('226', lineno=238, col_offset=42)], Load(), lineno=238, col_offset=28)], lineno=238, col_offset=11), [Raise(Name('error_proto', Load(), lineno=239, col_offset=18), Name('resp', Load(), lineno=239, col_offset=31), None, lineno=239, col_offset=12)], [], lineno=238, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('sendcmd', arguments([Name('self', Param(), lineno=241, col_offset=16), Name('cmd', Param(), lineno=241, col_offset=22)], None, None, []), [Expr(Str('Send a command and return the response.', lineno=242, col_offset=8), lineno=242, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'putcmd', Load(), lineno=243, col_offset=8), [Name('cmd', Load(), lineno=243, col_offset=20)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=244, col_offset=15), 'getresp', Load(), lineno=244, col_offset=15), [], [], None, None, lineno=244, col_offset=15), lineno=244, col_offset=8)], [], lineno=241, col_offset=4), FunctionDef('voidcmd', arguments([Name('self', Param(), lineno=246, col_offset=16), Name('cmd', Param(), lineno=246, col_offset=22)], None, None, []), [Expr(Str("Send a command and expect a response beginning with '2'.", lineno=247, col_offset=8), lineno=247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'putcmd', Load(), lineno=248, col_offset=8), [Name('cmd', Load(), lineno=248, col_offset=20)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=249, col_offset=15), 'voidresp', Load(), lineno=249, col_offset=15), [], [], None, None, lineno=249, col_offset=15), lineno=249, col_offset=8)], [], lineno=246, col_offset=4), FunctionDef('sendport', arguments([Name('self', Param(), lineno=251, col_offset=17), Name('host', Param(), lineno=251, col_offset=23), Name('port', Param(), lineno=251, col_offset=29)], None, None, []), [Expr(Str('Send a PORT command with the current host and the given\n        port number.\n        ', lineno=254, col_offset=-1), lineno=254, col_offset=-1), Assign([Name('hbytes', Store(), lineno=255, col_offset=8)], Call(Attribute(Name('host', Load(), lineno=255, col_offset=17), 'split', Load(), lineno=255, col_offset=17), [Str('.', lineno=255, col_offset=28)], [], None, None, lineno=255, col_offset=17), lineno=255, col_offset=8), Assign([Name('pbytes', Store(), lineno=256, col_offset=8)], List([Call(Name('repr', Load(), lineno=256, col_offset=18), [BinOp(Name('port', Load(), lineno=256, col_offset=23), FloorDiv(), Num(256, lineno=256, col_offset=29), lineno=256, col_offset=23)], [], None, None, lineno=256, col_offset=18), Call(Name('repr', Load(), lineno=256, col_offset=35), [BinOp(Name('port', Load(), lineno=256, col_offset=40), Mod(), Num(256, lineno=256, col_offset=45), lineno=256, col_offset=40)], [], None, None, lineno=256, col_offset=35)], Load(), lineno=256, col_offset=17), lineno=256, col_offset=8), Assign([Name('bytes', Store(), lineno=257, col_offset=8)], BinOp(Name('hbytes', Load(), lineno=257, col_offset=16), Add(), Name('pbytes', Load(), lineno=257, col_offset=25), lineno=257, col_offset=16), lineno=257, col_offset=8), Assign([Name('cmd', Store(), lineno=258, col_offset=8)], BinOp(Str('PORT ', lineno=258, col_offset=14), Add(), Call(Attribute(Str(',', lineno=258, col_offset=24), 'join', Load(), lineno=258, col_offset=24), [Name('bytes', Load(), lineno=258, col_offset=33)], [], None, None, lineno=258, col_offset=24), lineno=258, col_offset=14), lineno=258, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=259, col_offset=15), 'voidcmd', Load(), lineno=259, col_offset=15), [Name('cmd', Load(), lineno=259, col_offset=28)], [], None, None, lineno=259, col_offset=15), lineno=259, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('sendeprt', arguments([Name('self', Param(), lineno=261, col_offset=17), Name('host', Param(), lineno=261, col_offset=23), Name('port', Param(), lineno=261, col_offset=29)], None, None, []), [Expr(Str('Send a EPRT command with the current host and the given port number.', lineno=262, col_offset=8), lineno=262, col_offset=8), Assign([Name('af', Store(), lineno=263, col_offset=8)], Num(0, lineno=263, col_offset=13), lineno=263, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=264, col_offset=11), 'af', Load(), lineno=264, col_offset=11), [Eq()], [Attribute(Name('socket', Load(), lineno=264, col_offset=22), 'AF_INET', Load(), lineno=264, col_offset=22)], lineno=264, col_offset=11), [Assign([Name('af', Store(), lineno=265, col_offset=12)], Num(1, lineno=265, col_offset=17), lineno=265, col_offset=12)], [], lineno=264, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=266, col_offset=11), 'af', Load(), lineno=266, col_offset=11), [Eq()], [Attribute(Name('socket', Load(), lineno=266, col_offset=22), 'AF_INET6', Load(), lineno=266, col_offset=22)], lineno=266, col_offset=11), [Assign([Name('af', Store(), lineno=267, col_offset=12)], Num(2, lineno=267, col_offset=17), lineno=267, col_offset=12)], [], lineno=266, col_offset=8), If(Compare(Name('af', Load(), lineno=268, col_offset=11), [Eq()], [Num(0, lineno=268, col_offset=17)], lineno=268, col_offset=11), [Raise(Name('error_proto', Load(), lineno=269, col_offset=18), Str('unsupported address family', lineno=269, col_offset=31), None, lineno=269, col_offset=12)], [], lineno=268, col_offset=8), Assign([Name('fields', Store(), lineno=270, col_offset=8)], List([Str('', lineno=270, col_offset=18), Call(Name('repr', Load(), lineno=270, col_offset=22), [Name('af', Load(), lineno=270, col_offset=27)], [], None, None, lineno=270, col_offset=22), Name('host', Load(), lineno=270, col_offset=32), Call(Name('repr', Load(), lineno=270, col_offset=38), [Name('port', Load(), lineno=270, col_offset=43)], [], None, None, lineno=270, col_offset=38), Str('', lineno=270, col_offset=50)], Load(), lineno=270, col_offset=17), lineno=270, col_offset=8), Assign([Name('cmd', Store(), lineno=271, col_offset=8)], BinOp(Str('EPRT ', lineno=271, col_offset=14), Add(), Call(Attribute(Str('|', lineno=271, col_offset=24), 'join', Load(), lineno=271, col_offset=24), [Name('fields', Load(), lineno=271, col_offset=33)], [], None, None, lineno=271, col_offset=24), lineno=271, col_offset=14), lineno=271, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=272, col_offset=15), 'voidcmd', Load(), lineno=272, col_offset=15), [Name('cmd', Load(), lineno=272, col_offset=28)], [], None, None, lineno=272, col_offset=15), lineno=272, col_offset=8)], [], lineno=261, col_offset=4), FunctionDef('makeport', arguments([Name('self', Param(), lineno=274, col_offset=17)], None, None, []), [Expr(Str('Create a new socket and send a PORT command for it.', lineno=275, col_offset=8), lineno=275, col_offset=8), Assign([Name('msg', Store(), lineno=276, col_offset=8)], Str('getaddrinfo returns an empty list', lineno=276, col_offset=14), lineno=276, col_offset=8), Assign([Name('sock', Store(), lineno=277, col_offset=8)], Name('None', Load(), lineno=277, col_offset=15), lineno=277, col_offset=8), For(Name('res', Store(), lineno=278, col_offset=12), Call(Attribute(Name('socket', Load(), lineno=278, col_offset=19), 'getaddrinfo', Load(), lineno=278, col_offset=19), [Name('None', Load(), lineno=278, col_offset=38), Num(0, lineno=278, col_offset=44), Attribute(Name('self', Load(), lineno=278, col_offset=47), 'af', Load(), lineno=278, col_offset=47), Attribute(Name('socket', Load(), lineno=278, col_offset=56), 'SOCK_STREAM', Load(), lineno=278, col_offset=56), Num(0, lineno=278, col_offset=76), Attribute(Name('socket', Load(), lineno=278, col_offset=79), 'AI_PASSIVE', Load(), lineno=278, col_offset=79)], [], None, None, lineno=278, col_offset=19), [Assign([Tuple([Name('af', Store(), lineno=279, col_offset=12), Name('socktype', Store(), lineno=279, col_offset=16), Name('proto', Store(), lineno=279, col_offset=26), Name('canonname', Store(), lineno=279, col_offset=33), Name('sa', Store(), lineno=279, col_offset=44)], Store(), lineno=279, col_offset=12)], Name('res', Load(), lineno=279, col_offset=49), lineno=279, col_offset=12), TryExcept([Assign([Name('sock', Store(), lineno=281, col_offset=16)], Call(Attribute(Name('socket', Load(), lineno=281, col_offset=23), 'socket', Load(), lineno=281, col_offset=23), [Name('af', Load(), lineno=281, col_offset=37), Name('socktype', Load(), lineno=281, col_offset=41), Name('proto', Load(), lineno=281, col_offset=51)], [], None, None, lineno=281, col_offset=23), lineno=281, col_offset=16), Expr(Call(Attribute(Name('sock', Load(), lineno=282, col_offset=16), 'bind', Load(), lineno=282, col_offset=16), [Name('sa', Load(), lineno=282, col_offset=26)], [], None, None, lineno=282, col_offset=16), lineno=282, col_offset=16)], [ExceptHandler(Attribute(Name('socket', Load(), lineno=283, col_offset=19), 'error', Load(), lineno=283, col_offset=19), Name('msg', Store(), lineno=283, col_offset=33), [If(Name('sock', Load(), lineno=284, col_offset=19), [Expr(Call(Attribute(Name('sock', Load(), lineno=285, col_offset=20), 'close', Load(), lineno=285, col_offset=20), [], [], None, None, lineno=285, col_offset=20), lineno=285, col_offset=20)], [], lineno=284, col_offset=16), Assign([Name('sock', Store(), lineno=286, col_offset=16)], Name('None', Load(), lineno=286, col_offset=23), lineno=286, col_offset=16), Continue( lineno=287, col_offset=16)], lineno=283, col_offset=12)], [], lineno=280, col_offset=12), Break( lineno=288, col_offset=12)], [], lineno=278, col_offset=8), If(UnaryOp(Not(), Name('sock', Load(), lineno=289, col_offset=15), lineno=289, col_offset=11), [Raise(Attribute(Name('socket', Load(), lineno=290, col_offset=18), 'error', Load(), lineno=290, col_offset=18), Name('msg', Load(), lineno=290, col_offset=32), None, lineno=290, col_offset=12)], [], lineno=289, col_offset=8), Expr(Call(Attribute(Name('sock', Load(), lineno=291, col_offset=8), 'listen', Load(), lineno=291, col_offset=8), [Num(1, lineno=291, col_offset=20)], [], None, None, lineno=291, col_offset=8), lineno=291, col_offset=8), Assign([Name('port', Store(), lineno=292, col_offset=8)], Subscript(Call(Attribute(Name('sock', Load(), lineno=292, col_offset=15), 'getsockname', Load(), lineno=292, col_offset=15), [], [], None, None, lineno=292, col_offset=15), Index(Num(1, lineno=292, col_offset=34)), Load(), lineno=292, col_offset=15), lineno=292, col_offset=8), Assign([Name('host', Store(), lineno=293, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('self', Load(), lineno=293, col_offset=15), 'sock', Load(), lineno=293, col_offset=15), 'getsockname', Load(), lineno=293, col_offset=15), [], [], None, None, lineno=293, col_offset=15), Index(Num(0, lineno=293, col_offset=39)), Load(), lineno=293, col_offset=15), lineno=293, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=294, col_offset=11), 'af', Load(), lineno=294, col_offset=11), [Eq()], [Attribute(Name('socket', Load(), lineno=294, col_offset=22), 'AF_INET', Load(), lineno=294, col_offset=22)], lineno=294, col_offset=11), [Assign([Name('resp', Store(), lineno=295, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=295, col_offset=19), 'sendport', Load(), lineno=295, col_offset=19), [Name('host', Load(), lineno=295, col_offset=33), Name('port', Load(), lineno=295, col_offset=39)], [], None, None, lineno=295, col_offset=19), lineno=295, col_offset=12)], [Assign([Name('resp', Store(), lineno=297, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=297, col_offset=19), 'sendeprt', Load(), lineno=297, col_offset=19), [Name('host', Load(), lineno=297, col_offset=33), Name('port', Load(), lineno=297, col_offset=39)], [], None, None, lineno=297, col_offset=19), lineno=297, col_offset=12)], lineno=294, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=298, col_offset=11), 'timeout', Load(), lineno=298, col_offset=11), [IsNot()], [Name('_GLOBAL_DEFAULT_TIMEOUT', Load(), lineno=298, col_offset=31)], lineno=298, col_offset=11), [Expr(Call(Attribute(Name('sock', Load(), lineno=299, col_offset=12), 'settimeout', Load(), lineno=299, col_offset=12), [Attribute(Name('self', Load(), lineno=299, col_offset=28), 'timeout', Load(), lineno=299, col_offset=28)], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=12)], [], lineno=298, col_offset=8), Return(Name('sock', Load(), lineno=300, col_offset=15), lineno=300, col_offset=8)], [], lineno=274, col_offset=4), FunctionDef('makepasv', arguments([Name('self', Param(), lineno=302, col_offset=17)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=303, col_offset=11), 'af', Load(), lineno=303, col_offset=11), [Eq()], [Attribute(Name('socket', Load(), lineno=303, col_offset=22), 'AF_INET', Load(), lineno=303, col_offset=22)], lineno=303, col_offset=11), [Assign([Tuple([Name('host', Store(), lineno=304, col_offset=12), Name('port', Store(), lineno=304, col_offset=18)], Store(), lineno=304, col_offset=12)], Call(Name('parse227', Load(), lineno=304, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=304, col_offset=34), 'sendcmd', Load(), lineno=304, col_offset=34), [Str('PASV', lineno=304, col_offset=47)], [], None, None, lineno=304, col_offset=34)], [], None, None, lineno=304, col_offset=25), lineno=304, col_offset=12)], [Assign([Tuple([Name('host', Store(), lineno=306, col_offset=12), Name('port', Store(), lineno=306, col_offset=18)], Store(), lineno=306, col_offset=12)], Call(Name('parse229', Load(), lineno=306, col_offset=25), [Call(Attribute(Name('self', Load(), lineno=306, col_offset=34), 'sendcmd', Load(), lineno=306, col_offset=34), [Str('EPSV', lineno=306, col_offset=47)], [], None, None, lineno=306, col_offset=34), Call(Attribute(Attribute(Name('self', Load(), lineno=306, col_offset=56), 'sock', Load(), lineno=306, col_offset=56), 'getpeername', Load(), lineno=306, col_offset=56), [], [], None, None, lineno=306, col_offset=56)], [], None, None, lineno=306, col_offset=25), lineno=306, col_offset=12)], lineno=303, col_offset=8), Return(Tuple([Name('host', Load(), lineno=307, col_offset=15), Name('port', Load(), lineno=307, col_offset=21)], Load(), lineno=307, col_offset=15), lineno=307, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('ntransfercmd', arguments([Name('self', Param(), lineno=309, col_offset=21), Name('cmd', Param(), lineno=309, col_offset=27), Name('rest', Param(), lineno=309, col_offset=32)], None, None, [Name('None', Load(), lineno=309, col_offset=37)]), [Expr(Str("Initiate a transfer over the data connection.\n\n        If the transfer is active, send a port command and the\n        transfer command, and accept the connection.  If the server is\n        passive, send a pasv command, connect to it, and start the\n        transfer command.  Either way, return the socket for the\n        connection and the expected size of the transfer.  The\n        expected size may be None if it could not be determined.\n\n        Optional `rest' argument can be a string that is sent as the\n        argument to a REST command.  This is essentially a server\n        marker used to tell the server to skip over any data up to the\n        given marker.\n        ", lineno=323, col_offset=-1), lineno=323, col_offset=-1), Assign([Name('size', Store(), lineno=324, col_offset=8)], Name('None', Load(), lineno=324, col_offset=15), lineno=324, col_offset=8), If(Attribute(Name('self', Load(), lineno=325, col_offset=11), 'passiveserver', Load(), lineno=325, col_offset=11), [Assign([Tuple([Name('host', Store(), lineno=326, col_offset=12), Name('port', Store(), lineno=326, col_offset=18)], Store(), lineno=326, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=326, col_offset=25), 'makepasv', Load(), lineno=326, col_offset=25), [], [], None, None, lineno=326, col_offset=25), lineno=326, col_offset=12), Assign([Name('conn', Store(), lineno=327, col_offset=12)], Call(Attribute(Name('socket', Load(), lineno=327, col_offset=19), 'create_connection', Load(), lineno=327, col_offset=19), [Tuple([Name('host', Load(), lineno=327, col_offset=45), Name('port', Load(), lineno=327, col_offset=51)], Load(), lineno=327, col_offset=45), Attribute(Name('self', Load(), lineno=327, col_offset=58), 'timeout', Load(), lineno=327, col_offset=58)], [], None, None, lineno=327, col_offset=19), lineno=327, col_offset=12), If(Compare(Name('rest', Load(), lineno=328, col_offset=15), [IsNot()], [Name('None', Load(), lineno=328, col_offset=27)], lineno=328, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=329, col_offset=16), 'sendcmd', Load(), lineno=329, col_offset=16), [BinOp(Str('REST %s', lineno=329, col_offset=29), Mod(), Name('rest', Load(), lineno=329, col_offset=41), lineno=329, col_offset=29)], [], None, None, lineno=329, col_offset=16), lineno=329, col_offset=16)], [], lineno=328, col_offset=12), Assign([Name('resp', Store(), lineno=330, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=330, col_offset=19), 'sendcmd', Load(), lineno=330, col_offset=19), [Name('cmd', Load(), lineno=330, col_offset=32)], [], None, None, lineno=330, col_offset=19), lineno=330, col_offset=12), If(Compare(Subscript(Name('resp', Load(), lineno=337, col_offset=15), Index(Num(0, lineno=337, col_offset=20)), Load(), lineno=337, col_offset=15), [Eq()], [Str('2', lineno=337, col_offset=26)], lineno=337, col_offset=15), [Assign([Name('resp', Store(), lineno=338, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=338, col_offset=23), 'getresp', Load(), lineno=338, col_offset=23), [], [], None, None, lineno=338, col_offset=23), lineno=338, col_offset=16)], [], lineno=337, col_offset=12), If(Compare(Subscript(Name('resp', Load(), lineno=339, col_offset=15), Index(Num(0, lineno=339, col_offset=20)), Load(), lineno=339, col_offset=15), [NotEq()], [Str('1', lineno=339, col_offset=26)], lineno=339, col_offset=15), [Raise(Name('error_reply', Load(), lineno=340, col_offset=22), Name('resp', Load(), lineno=340, col_offset=35), None, lineno=340, col_offset=16)], [], lineno=339, col_offset=12)], [Assign([Name('sock', Store(), lineno=342, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=342, col_offset=19), 'makeport', Load(), lineno=342, col_offset=19), [], [], None, None, lineno=342, col_offset=19), lineno=342, col_offset=12), If(Compare(Name('rest', Load(), lineno=343, col_offset=15), [IsNot()], [Name('None', Load(), lineno=343, col_offset=27)], lineno=343, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=344, col_offset=16), 'sendcmd', Load(), lineno=344, col_offset=16), [BinOp(Str('REST %s', lineno=344, col_offset=29), Mod(), Name('rest', Load(), lineno=344, col_offset=41), lineno=344, col_offset=29)], [], None, None, lineno=344, col_offset=16), lineno=344, col_offset=16)], [], lineno=343, col_offset=12), Assign([Name('resp', Store(), lineno=345, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=345, col_offset=19), 'sendcmd', Load(), lineno=345, col_offset=19), [Name('cmd', Load(), lineno=345, col_offset=32)], [], None, None, lineno=345, col_offset=19), lineno=345, col_offset=12), If(Compare(Subscript(Name('resp', Load(), lineno=347, col_offset=15), Index(Num(0, lineno=347, col_offset=20)), Load(), lineno=347, col_offset=15), [Eq()], [Str('2', lineno=347, col_offset=26)], lineno=347, col_offset=15), [Assign([Name('resp', Store(), lineno=348, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=348, col_offset=23), 'getresp', Load(), lineno=348, col_offset=23), [], [], None, None, lineno=348, col_offset=23), lineno=348, col_offset=16)], [], lineno=347, col_offset=12), If(Compare(Subscript(Name('resp', Load(), lineno=349, col_offset=15), Index(Num(0, lineno=349, col_offset=20)), Load(), lineno=349, col_offset=15), [NotEq()], [Str('1', lineno=349, col_offset=26)], lineno=349, col_offset=15), [Raise(Name('error_reply', Load(), lineno=350, col_offset=22), Name('resp', Load(), lineno=350, col_offset=35), None, lineno=350, col_offset=16)], [], lineno=349, col_offset=12), Assign([Tuple([Name('conn', Store(), lineno=351, col_offset=12), Name('sockaddr', Store(), lineno=351, col_offset=18)], Store(), lineno=351, col_offset=12)], Call(Attribute(Name('sock', Load(), lineno=351, col_offset=29), 'accept', Load(), lineno=351, col_offset=29), [], [], None, None, lineno=351, col_offset=29), lineno=351, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=352, col_offset=15), 'timeout', Load(), lineno=352, col_offset=15), [IsNot()], [Name('_GLOBAL_DEFAULT_TIMEOUT', Load(), lineno=352, col_offset=35)], lineno=352, col_offset=15), [Expr(Call(Attribute(Name('conn', Load(), lineno=353, col_offset=16), 'settimeout', Load(), lineno=353, col_offset=16), [Attribute(Name('self', Load(), lineno=353, col_offset=32), 'timeout', Load(), lineno=353, col_offset=32)], [], None, None, lineno=353, col_offset=16), lineno=353, col_offset=16)], [], lineno=352, col_offset=12)], lineno=325, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=354, col_offset=11), Slice(None, Num(3, lineno=354, col_offset=17), None), Load(), lineno=354, col_offset=11), [Eq()], [Str('150', lineno=354, col_offset=23)], lineno=354, col_offset=11), [Assign([Name('size', Store(), lineno=356, col_offset=12)], Call(Name('parse150', Load(), lineno=356, col_offset=19), [Name('resp', Load(), lineno=356, col_offset=28)], [], None, None, lineno=356, col_offset=19), lineno=356, col_offset=12)], [], lineno=354, col_offset=8), Return(Tuple([Name('conn', Load(), lineno=357, col_offset=15), Name('size', Load(), lineno=357, col_offset=21)], Load(), lineno=357, col_offset=15), lineno=357, col_offset=8)], [], lineno=309, col_offset=4), FunctionDef('transfercmd', arguments([Name('self', Param(), lineno=359, col_offset=20), Name('cmd', Param(), lineno=359, col_offset=26), Name('rest', Param(), lineno=359, col_offset=31)], None, None, [Name('None', Load(), lineno=359, col_offset=36)]), [Expr(Str('Like ntransfercmd() but returns only the socket.', lineno=360, col_offset=8), lineno=360, col_offset=8), Return(Subscript(Call(Attribute(Name('self', Load(), lineno=361, col_offset=15), 'ntransfercmd', Load(), lineno=361, col_offset=15), [Name('cmd', Load(), lineno=361, col_offset=33), Name('rest', Load(), lineno=361, col_offset=38)], [], None, None, lineno=361, col_offset=15), Index(Num(0, lineno=361, col_offset=44)), Load(), lineno=361, col_offset=15), lineno=361, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('login', arguments([Name('self', Param(), lineno=363, col_offset=14), Name('user', Param(), lineno=363, col_offset=20), Name('passwd', Param(), lineno=363, col_offset=31), Name('acct', Param(), lineno=363, col_offset=44)], None, None, [Str('', lineno=363, col_offset=27), Str('', lineno=363, col_offset=40), Str('', lineno=363, col_offset=51)]), [Expr(Str('Login, default anonymous.', lineno=364, col_offset=8), lineno=364, col_offset=8), If(UnaryOp(Not(), Name('user', Load(), lineno=365, col_offset=15), lineno=365, col_offset=11), [Assign([Name('user', Store(), lineno=365, col_offset=21)], Str('anonymous', lineno=365, col_offset=28), lineno=365, col_offset=21)], [], lineno=365, col_offset=8), If(UnaryOp(Not(), Name('passwd', Load(), lineno=366, col_offset=15), lineno=366, col_offset=11), [Assign([Name('passwd', Store(), lineno=366, col_offset=23)], Str('', lineno=366, col_offset=32), lineno=366, col_offset=23)], [], lineno=366, col_offset=8), If(UnaryOp(Not(), Name('acct', Load(), lineno=367, col_offset=15), lineno=367, col_offset=11), [Assign([Name('acct', Store(), lineno=367, col_offset=21)], Str('', lineno=367, col_offset=28), lineno=367, col_offset=21)], [], lineno=367, col_offset=8), If(BoolOp(And(), [Compare(Name('user', Load(), lineno=368, col_offset=11), [Eq()], [Str('anonymous', lineno=368, col_offset=19)], lineno=368, col_offset=11), Compare(Name('passwd', Load(), lineno=368, col_offset=35), [In()], [Tuple([Str('', lineno=368, col_offset=46), Str('-', lineno=368, col_offset=50)], Load(), lineno=368, col_offset=46)], lineno=368, col_offset=35)], lineno=368, col_offset=11), [Assign([Name('passwd', Store(), lineno=376, col_offset=12)], BinOp(Name('passwd', Load(), lineno=376, col_offset=21), Add(), Str('anonymous@', lineno=376, col_offset=30), lineno=376, col_offset=21), lineno=376, col_offset=12)], [], lineno=368, col_offset=8), Assign([Name('resp', Store(), lineno=377, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=377, col_offset=15), 'sendcmd', Load(), lineno=377, col_offset=15), [BinOp(Str('USER ', lineno=377, col_offset=28), Add(), Name('user', Load(), lineno=377, col_offset=38), lineno=377, col_offset=28)], [], None, None, lineno=377, col_offset=15), lineno=377, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=378, col_offset=11), Index(Num(0, lineno=378, col_offset=16)), Load(), lineno=378, col_offset=11), [Eq()], [Str('3', lineno=378, col_offset=22)], lineno=378, col_offset=11), [Assign([Name('resp', Store(), lineno=378, col_offset=27)], Call(Attribute(Name('self', Load(), lineno=378, col_offset=34), 'sendcmd', Load(), lineno=378, col_offset=34), [BinOp(Str('PASS ', lineno=378, col_offset=47), Add(), Name('passwd', Load(), lineno=378, col_offset=57), lineno=378, col_offset=47)], [], None, None, lineno=378, col_offset=34), lineno=378, col_offset=27)], [], lineno=378, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=379, col_offset=11), Index(Num(0, lineno=379, col_offset=16)), Load(), lineno=379, col_offset=11), [Eq()], [Str('3', lineno=379, col_offset=22)], lineno=379, col_offset=11), [Assign([Name('resp', Store(), lineno=379, col_offset=27)], Call(Attribute(Name('self', Load(), lineno=379, col_offset=34), 'sendcmd', Load(), lineno=379, col_offset=34), [BinOp(Str('ACCT ', lineno=379, col_offset=47), Add(), Name('acct', Load(), lineno=379, col_offset=57), lineno=379, col_offset=47)], [], None, None, lineno=379, col_offset=34), lineno=379, col_offset=27)], [], lineno=379, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=380, col_offset=11), Index(Num(0, lineno=380, col_offset=16)), Load(), lineno=380, col_offset=11), [NotEq()], [Str('2', lineno=380, col_offset=22)], lineno=380, col_offset=11), [Raise(Name('error_reply', Load(), lineno=381, col_offset=18), Name('resp', Load(), lineno=381, col_offset=31), None, lineno=381, col_offset=12)], [], lineno=380, col_offset=8), Return(Name('resp', Load(), lineno=382, col_offset=15), lineno=382, col_offset=8)], [], lineno=363, col_offset=4), FunctionDef('retrbinary', arguments([Name('self', Param(), lineno=384, col_offset=19), Name('cmd', Param(), lineno=384, col_offset=25), Name('callback', Param(), lineno=384, col_offset=30), Name('blocksize', Param(), lineno=384, col_offset=40), Name('rest', Param(), lineno=384, col_offset=56)], None, None, [Num(8192, lineno=384, col_offset=50), Name('None', Load(), lineno=384, col_offset=61)]), [Expr(Str('Retrieve data in binary mode.  A new port is created for you.\n\n        Args:\n          cmd: A RETR command.\n          callback: A single parameter callable to be called on each\n                    block of data read.\n          blocksize: The maximum number of bytes to read from the\n                     socket at one time.  [default: 8192]\n          rest: Passed to transfercmd().  [default: None]\n\n        Returns:\n          The response code.\n        ', lineno=397, col_offset=-1), lineno=397, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'voidcmd', Load(), lineno=398, col_offset=8), [Str('TYPE I', lineno=398, col_offset=21)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Assign([Name('conn', Store(), lineno=399, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=399, col_offset=15), 'transfercmd', Load(), lineno=399, col_offset=15), [Name('cmd', Load(), lineno=399, col_offset=32), Name('rest', Load(), lineno=399, col_offset=37)], [], None, None, lineno=399, col_offset=15), lineno=399, col_offset=8), While(Num(1, lineno=400, col_offset=14), [Assign([Name('data', Store(), lineno=401, col_offset=12)], Call(Attribute(Name('conn', Load(), lineno=401, col_offset=19), 'recv', Load(), lineno=401, col_offset=19), [Name('blocksize', Load(), lineno=401, col_offset=29)], [], None, None, lineno=401, col_offset=19), lineno=401, col_offset=12), If(UnaryOp(Not(), Name('data', Load(), lineno=402, col_offset=19), lineno=402, col_offset=15), [Break( lineno=403, col_offset=16)], [], lineno=402, col_offset=12), Expr(Call(Name('callback', Load(), lineno=404, col_offset=12), [Name('data', Load(), lineno=404, col_offset=21)], [], None, None, lineno=404, col_offset=12), lineno=404, col_offset=12)], [], lineno=400, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=405, col_offset=8), 'close', Load(), lineno=405, col_offset=8), [], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=406, col_offset=15), 'voidresp', Load(), lineno=406, col_offset=15), [], [], None, None, lineno=406, col_offset=15), lineno=406, col_offset=8)], [], lineno=384, col_offset=4), FunctionDef('retrlines', arguments([Name('self', Param(), lineno=408, col_offset=18), Name('cmd', Param(), lineno=408, col_offset=24), Name('callback', Param(), lineno=408, col_offset=29)], None, None, [Name('None', Load(), lineno=408, col_offset=40)]), [Expr(Str('Retrieve data in line mode.  A new port is created for you.\n\n        Args:\n          cmd: A RETR, LIST, NLST, or MLSD command.\n          callback: An optional single parameter callable that is called\n                    for each line with the trailing CRLF stripped.\n                    [default: print_line()]\n\n        Returns:\n          The response code.\n        ', lineno=419, col_offset=-1), lineno=419, col_offset=-1), If(Compare(Name('callback', Load(), lineno=420, col_offset=11), [Is()], [Name('None', Load(), lineno=420, col_offset=23)], lineno=420, col_offset=11), [Assign([Name('callback', Store(), lineno=420, col_offset=29)], Name('print_line', Load(), lineno=420, col_offset=40), lineno=420, col_offset=29)], [], lineno=420, col_offset=8), Assign([Name('resp', Store(), lineno=421, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=421, col_offset=15), 'sendcmd', Load(), lineno=421, col_offset=15), [Str('TYPE A', lineno=421, col_offset=28)], [], None, None, lineno=421, col_offset=15), lineno=421, col_offset=8), Assign([Name('conn', Store(), lineno=422, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=422, col_offset=15), 'transfercmd', Load(), lineno=422, col_offset=15), [Name('cmd', Load(), lineno=422, col_offset=32)], [], None, None, lineno=422, col_offset=15), lineno=422, col_offset=8), Assign([Name('fp', Store(), lineno=423, col_offset=8)], Call(Attribute(Name('conn', Load(), lineno=423, col_offset=13), 'makefile', Load(), lineno=423, col_offset=13), [Str('rb', lineno=423, col_offset=27)], [], None, None, lineno=423, col_offset=13), lineno=423, col_offset=8), While(Num(1, lineno=424, col_offset=14), [Assign([Name('line', Store(), lineno=425, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=425, col_offset=19), 'readline', Load(), lineno=425, col_offset=19), [], [], None, None, lineno=425, col_offset=19), lineno=425, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=426, col_offset=15), 'debugging', Load(), lineno=426, col_offset=15), [Gt()], [Num(2, lineno=426, col_offset=32)], lineno=426, col_offset=15), [Print(None, [Str('*retr*', lineno=426, col_offset=41), Call(Name('repr', Load(), lineno=426, col_offset=51), [Name('line', Load(), lineno=426, col_offset=56)], [], None, None, lineno=426, col_offset=51)], True, lineno=426, col_offset=35)], [], lineno=426, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=427, col_offset=19), lineno=427, col_offset=15), [Break( lineno=428, col_offset=16)], [], lineno=427, col_offset=12), If(Compare(Subscript(Name('line', Load(), lineno=429, col_offset=15), Slice(Num(-2, lineno=429, col_offset=21), None, None), Load(), lineno=429, col_offset=15), [Eq()], [Name('CRLF', Load(), lineno=429, col_offset=28)], lineno=429, col_offset=15), [Assign([Name('line', Store(), lineno=430, col_offset=16)], Subscript(Name('line', Load(), lineno=430, col_offset=23), Slice(None, Num(-2, lineno=430, col_offset=30), None), Load(), lineno=430, col_offset=23), lineno=430, col_offset=16)], [If(Compare(Subscript(Name('line', Load(), lineno=431, col_offset=17), Slice(Num(-1, lineno=431, col_offset=23), None, None), Load(), lineno=431, col_offset=17), [Eq()], [Str('\n', lineno=431, col_offset=30)], lineno=431, col_offset=17), [Assign([Name('line', Store(), lineno=432, col_offset=16)], Subscript(Name('line', Load(), lineno=432, col_offset=23), Slice(None, Num(-1, lineno=432, col_offset=30), None), Load(), lineno=432, col_offset=23), lineno=432, col_offset=16)], [], lineno=431, col_offset=17)], lineno=429, col_offset=12), Expr(Call(Name('callback', Load(), lineno=433, col_offset=12), [Name('line', Load(), lineno=433, col_offset=21)], [], None, None, lineno=433, col_offset=12), lineno=433, col_offset=12)], [], lineno=424, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=434, col_offset=8), 'close', Load(), lineno=434, col_offset=8), [], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=435, col_offset=8), 'close', Load(), lineno=435, col_offset=8), [], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=436, col_offset=15), 'voidresp', Load(), lineno=436, col_offset=15), [], [], None, None, lineno=436, col_offset=15), lineno=436, col_offset=8)], [], lineno=408, col_offset=4), FunctionDef('storbinary', arguments([Name('self', Param(), lineno=438, col_offset=19), Name('cmd', Param(), lineno=438, col_offset=25), Name('fp', Param(), lineno=438, col_offset=30), Name('blocksize', Param(), lineno=438, col_offset=34), Name('callback', Param(), lineno=438, col_offset=50), Name('rest', Param(), lineno=438, col_offset=65)], None, None, [Num(8192, lineno=438, col_offset=44), Name('None', Load(), lineno=438, col_offset=59), Name('None', Load(), lineno=438, col_offset=70)]), [Expr(Str('Store a file in binary mode.  A new port is created for you.\n\n        Args:\n          cmd: A STOR command.\n          fp: A file-like object with a read(num_bytes) method.\n          blocksize: The maximum data size to read from fp and send over\n                     the connection at once.  [default: 8192]\n          callback: An optional single parameter callable that is called on\n                    on each block of data after it is sent.  [default: None]\n          rest: Passed to transfercmd().  [default: None]\n\n        Returns:\n          The response code.\n        ', lineno=452, col_offset=-1), lineno=452, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=8), 'voidcmd', Load(), lineno=453, col_offset=8), [Str('TYPE I', lineno=453, col_offset=21)], [], None, None, lineno=453, col_offset=8), lineno=453, col_offset=8), Assign([Name('conn', Store(), lineno=454, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=454, col_offset=15), 'transfercmd', Load(), lineno=454, col_offset=15), [Name('cmd', Load(), lineno=454, col_offset=32), Name('rest', Load(), lineno=454, col_offset=37)], [], None, None, lineno=454, col_offset=15), lineno=454, col_offset=8), While(Num(1, lineno=455, col_offset=14), [Assign([Name('buf', Store(), lineno=456, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=456, col_offset=18), 'read', Load(), lineno=456, col_offset=18), [Name('blocksize', Load(), lineno=456, col_offset=26)], [], None, None, lineno=456, col_offset=18), lineno=456, col_offset=12), If(UnaryOp(Not(), Name('buf', Load(), lineno=457, col_offset=19), lineno=457, col_offset=15), [Break( lineno=457, col_offset=24)], [], lineno=457, col_offset=12), Expr(Call(Attribute(Name('conn', Load(), lineno=458, col_offset=12), 'sendall', Load(), lineno=458, col_offset=12), [Name('buf', Load(), lineno=458, col_offset=25)], [], None, None, lineno=458, col_offset=12), lineno=458, col_offset=12), If(Name('callback', Load(), lineno=459, col_offset=15), [Expr(Call(Name('callback', Load(), lineno=459, col_offset=25), [Name('buf', Load(), lineno=459, col_offset=34)], [], None, None, lineno=459, col_offset=25), lineno=459, col_offset=25)], [], lineno=459, col_offset=12)], [], lineno=455, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=460, col_offset=8), 'close', Load(), lineno=460, col_offset=8), [], [], None, None, lineno=460, col_offset=8), lineno=460, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=461, col_offset=15), 'voidresp', Load(), lineno=461, col_offset=15), [], [], None, None, lineno=461, col_offset=15), lineno=461, col_offset=8)], [], lineno=438, col_offset=4), FunctionDef('storlines', arguments([Name('self', Param(), lineno=463, col_offset=18), Name('cmd', Param(), lineno=463, col_offset=24), Name('fp', Param(), lineno=463, col_offset=29), Name('callback', Param(), lineno=463, col_offset=33)], None, None, [Name('None', Load(), lineno=463, col_offset=42)]), [Expr(Str('Store a file in line mode.  A new port is created for you.\n\n        Args:\n          cmd: A STOR command.\n          fp: A file-like object with a readline() method.\n          callback: An optional single parameter callable that is called on\n                    on each line after it is sent.  [default: None]\n\n        Returns:\n          The response code.\n        ', lineno=474, col_offset=-1), lineno=474, col_offset=-1), Expr(Call(Attribute(Name('self', Load(), lineno=475, col_offset=8), 'voidcmd', Load(), lineno=475, col_offset=8), [Str('TYPE A', lineno=475, col_offset=21)], [], None, None, lineno=475, col_offset=8), lineno=475, col_offset=8), Assign([Name('conn', Store(), lineno=476, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=476, col_offset=15), 'transfercmd', Load(), lineno=476, col_offset=15), [Name('cmd', Load(), lineno=476, col_offset=32)], [], None, None, lineno=476, col_offset=15), lineno=476, col_offset=8), While(Num(1, lineno=477, col_offset=14), [Assign([Name('buf', Store(), lineno=478, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=478, col_offset=18), 'readline', Load(), lineno=478, col_offset=18), [], [], None, None, lineno=478, col_offset=18), lineno=478, col_offset=12), If(UnaryOp(Not(), Name('buf', Load(), lineno=479, col_offset=19), lineno=479, col_offset=15), [Break( lineno=479, col_offset=24)], [], lineno=479, col_offset=12), If(Compare(Subscript(Name('buf', Load(), lineno=480, col_offset=15), Slice(Num(-2, lineno=480, col_offset=20), None, None), Load(), lineno=480, col_offset=15), [NotEq()], [Name('CRLF', Load(), lineno=480, col_offset=27)], lineno=480, col_offset=15), [If(Compare(Subscript(Name('buf', Load(), lineno=481, col_offset=19), Index(Num(-1, lineno=481, col_offset=24)), Load(), lineno=481, col_offset=19), [In()], [Name('CRLF', Load(), lineno=481, col_offset=30)], lineno=481, col_offset=19), [Assign([Name('buf', Store(), lineno=481, col_offset=36)], Subscript(Name('buf', Load(), lineno=481, col_offset=42), Slice(None, Num(-1, lineno=481, col_offset=48), None), Load(), lineno=481, col_offset=42), lineno=481, col_offset=36)], [], lineno=481, col_offset=16), Assign([Name('buf', Store(), lineno=482, col_offset=16)], BinOp(Name('buf', Load(), lineno=482, col_offset=22), Add(), Name('CRLF', Load(), lineno=482, col_offset=28), lineno=482, col_offset=22), lineno=482, col_offset=16)], [], lineno=480, col_offset=12), Expr(Call(Attribute(Name('conn', Load(), lineno=483, col_offset=12), 'sendall', Load(), lineno=483, col_offset=12), [Name('buf', Load(), lineno=483, col_offset=25)], [], None, None, lineno=483, col_offset=12), lineno=483, col_offset=12), If(Name('callback', Load(), lineno=484, col_offset=15), [Expr(Call(Name('callback', Load(), lineno=484, col_offset=25), [Name('buf', Load(), lineno=484, col_offset=34)], [], None, None, lineno=484, col_offset=25), lineno=484, col_offset=25)], [], lineno=484, col_offset=12)], [], lineno=477, col_offset=8), Expr(Call(Attribute(Name('conn', Load(), lineno=485, col_offset=8), 'close', Load(), lineno=485, col_offset=8), [], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=486, col_offset=15), 'voidresp', Load(), lineno=486, col_offset=15), [], [], None, None, lineno=486, col_offset=15), lineno=486, col_offset=8)], [], lineno=463, col_offset=4), FunctionDef('acct', arguments([Name('self', Param(), lineno=488, col_offset=13), Name('password', Param(), lineno=488, col_offset=19)], None, None, []), [Expr(Str('Send new account name.', lineno=489, col_offset=8), lineno=489, col_offset=8), Assign([Name('cmd', Store(), lineno=490, col_offset=8)], BinOp(Str('ACCT ', lineno=490, col_offset=14), Add(), Name('password', Load(), lineno=490, col_offset=24), lineno=490, col_offset=14), lineno=490, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=491, col_offset=15), 'voidcmd', Load(), lineno=491, col_offset=15), [Name('cmd', Load(), lineno=491, col_offset=28)], [], None, None, lineno=491, col_offset=15), lineno=491, col_offset=8)], [], lineno=488, col_offset=4), FunctionDef('nlst', arguments([Name('self', Param(), lineno=493, col_offset=13)], 'args', None, []), [Expr(Str('Return a list of files in a given directory (default the current).', lineno=494, col_offset=8), lineno=494, col_offset=8), Assign([Name('cmd', Store(), lineno=495, col_offset=8)], Str('NLST', lineno=495, col_offset=14), lineno=495, col_offset=8), For(Name('arg', Store(), lineno=496, col_offset=12), Name('args', Load(), lineno=496, col_offset=19), [Assign([Name('cmd', Store(), lineno=497, col_offset=12)], BinOp(Name('cmd', Load(), lineno=497, col_offset=18), Add(), BinOp(Str(' ', lineno=497, col_offset=25), Add(), Name('arg', Load(), lineno=497, col_offset=31), lineno=497, col_offset=25), lineno=497, col_offset=18), lineno=497, col_offset=12)], [], lineno=496, col_offset=8), Assign([Name('files', Store(), lineno=498, col_offset=8)], List([], Load(), lineno=498, col_offset=16), lineno=498, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=8), 'retrlines', Load(), lineno=499, col_offset=8), [Name('cmd', Load(), lineno=499, col_offset=23), Attribute(Name('files', Load(), lineno=499, col_offset=28), 'append', Load(), lineno=499, col_offset=28)], [], None, None, lineno=499, col_offset=8), lineno=499, col_offset=8), Return(Name('files', Load(), lineno=500, col_offset=15), lineno=500, col_offset=8)], [], lineno=493, col_offset=4), FunctionDef('dir', arguments([Name('self', Param(), lineno=502, col_offset=12)], 'args', None, []), [Expr(Str('List a directory in long form.\n        By default list current directory to stdout.\n        Optional last argument is callback function; all\n        non-empty arguments before it are concatenated to the\n        LIST command.  (This *should* only be used for a pathname.)', lineno=507, col_offset=-1), lineno=507, col_offset=-1), Assign([Name('cmd', Store(), lineno=508, col_offset=8)], Str('LIST', lineno=508, col_offset=14), lineno=508, col_offset=8), Assign([Name('func', Store(), lineno=509, col_offset=8)], Name('None', Load(), lineno=509, col_offset=15), lineno=509, col_offset=8), If(BoolOp(And(), [Subscript(Name('args', Load(), lineno=510, col_offset=11), Slice(Num(-1, lineno=510, col_offset=17), None, None), Load(), lineno=510, col_offset=11), Compare(Call(Name('type', Load(), lineno=510, col_offset=25), [Subscript(Name('args', Load(), lineno=510, col_offset=30), Index(Num(-1, lineno=510, col_offset=36)), Load(), lineno=510, col_offset=30)], [], None, None, lineno=510, col_offset=25), [NotEq()], [Call(Name('type', Load(), lineno=510, col_offset=43), [Str('', lineno=510, col_offset=48)], [], None, None, lineno=510, col_offset=43)], lineno=510, col_offset=25)], lineno=510, col_offset=11), [Assign([Tuple([Name('args', Store(), lineno=511, col_offset=12), Name('func', Store(), lineno=511, col_offset=18)], Store(), lineno=511, col_offset=12)], Tuple([Subscript(Name('args', Load(), lineno=511, col_offset=25), Slice(None, Num(-1, lineno=511, col_offset=32), None), Load(), lineno=511, col_offset=25), Subscript(Name('args', Load(), lineno=511, col_offset=36), Index(Num(-1, lineno=511, col_offset=42)), Load(), lineno=511, col_offset=36)], Load(), lineno=511, col_offset=25), lineno=511, col_offset=12)], [], lineno=510, col_offset=8), For(Name('arg', Store(), lineno=512, col_offset=12), Name('args', Load(), lineno=512, col_offset=19), [If(Name('arg', Load(), lineno=513, col_offset=15), [Assign([Name('cmd', Store(), lineno=514, col_offset=16)], BinOp(Name('cmd', Load(), lineno=514, col_offset=22), Add(), BinOp(Str(' ', lineno=514, col_offset=29), Add(), Name('arg', Load(), lineno=514, col_offset=35), lineno=514, col_offset=29), lineno=514, col_offset=22), lineno=514, col_offset=16)], [], lineno=513, col_offset=12)], [], lineno=512, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=515, col_offset=8), 'retrlines', Load(), lineno=515, col_offset=8), [Name('cmd', Load(), lineno=515, col_offset=23), Name('func', Load(), lineno=515, col_offset=28)], [], None, None, lineno=515, col_offset=8), lineno=515, col_offset=8)], [], lineno=502, col_offset=4), FunctionDef('rename', arguments([Name('self', Param(), lineno=517, col_offset=15), Name('fromname', Param(), lineno=517, col_offset=21), Name('toname', Param(), lineno=517, col_offset=31)], None, None, []), [Expr(Str('Rename a file.', lineno=518, col_offset=8), lineno=518, col_offset=8), Assign([Name('resp', Store(), lineno=519, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=519, col_offset=15), 'sendcmd', Load(), lineno=519, col_offset=15), [BinOp(Str('RNFR ', lineno=519, col_offset=28), Add(), Name('fromname', Load(), lineno=519, col_offset=38), lineno=519, col_offset=28)], [], None, None, lineno=519, col_offset=15), lineno=519, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=520, col_offset=11), Index(Num(0, lineno=520, col_offset=16)), Load(), lineno=520, col_offset=11), [NotEq()], [Str('3', lineno=520, col_offset=22)], lineno=520, col_offset=11), [Raise(Name('error_reply', Load(), lineno=521, col_offset=18), Name('resp', Load(), lineno=521, col_offset=31), None, lineno=521, col_offset=12)], [], lineno=520, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=522, col_offset=15), 'voidcmd', Load(), lineno=522, col_offset=15), [BinOp(Str('RNTO ', lineno=522, col_offset=28), Add(), Name('toname', Load(), lineno=522, col_offset=38), lineno=522, col_offset=28)], [], None, None, lineno=522, col_offset=15), lineno=522, col_offset=8)], [], lineno=517, col_offset=4), FunctionDef('delete', arguments([Name('self', Param(), lineno=524, col_offset=15), Name('filename', Param(), lineno=524, col_offset=21)], None, None, []), [Expr(Str('Delete a file.', lineno=525, col_offset=8), lineno=525, col_offset=8), Assign([Name('resp', Store(), lineno=526, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=526, col_offset=15), 'sendcmd', Load(), lineno=526, col_offset=15), [BinOp(Str('DELE ', lineno=526, col_offset=28), Add(), Name('filename', Load(), lineno=526, col_offset=38), lineno=526, col_offset=28)], [], None, None, lineno=526, col_offset=15), lineno=526, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=527, col_offset=11), Slice(None, Num(3, lineno=527, col_offset=17), None), Load(), lineno=527, col_offset=11), [In()], [Tuple([Str('250', lineno=527, col_offset=24), Str('200', lineno=527, col_offset=31)], Load(), lineno=527, col_offset=24)], lineno=527, col_offset=11), [Return(Name('resp', Load(), lineno=528, col_offset=19), lineno=528, col_offset=12)], [Raise(Name('error_reply', Load(), lineno=530, col_offset=18), Name('resp', Load(), lineno=530, col_offset=31), None, lineno=530, col_offset=12)], lineno=527, col_offset=8)], [], lineno=524, col_offset=4), FunctionDef('cwd', arguments([Name('self', Param(), lineno=532, col_offset=12), Name('dirname', Param(), lineno=532, col_offset=18)], None, None, []), [Expr(Str('Change to a directory.', lineno=533, col_offset=8), lineno=533, col_offset=8), If(Compare(Name('dirname', Load(), lineno=534, col_offset=11), [Eq()], [Str('..', lineno=534, col_offset=22)], lineno=534, col_offset=11), [TryExcept([Return(Call(Attribute(Name('self', Load(), lineno=536, col_offset=23), 'voidcmd', Load(), lineno=536, col_offset=23), [Str('CDUP', lineno=536, col_offset=36)], [], None, None, lineno=536, col_offset=23), lineno=536, col_offset=16)], [ExceptHandler(Name('error_perm', Load(), lineno=537, col_offset=19), Name('msg', Store(), lineno=537, col_offset=31), [If(Compare(Subscript(Subscript(Attribute(Name('msg', Load(), lineno=538, col_offset=19), 'args', Load(), lineno=538, col_offset=19), Index(Num(0, lineno=538, col_offset=28)), Load(), lineno=538, col_offset=19), Slice(None, Num(3, lineno=538, col_offset=32), None), Load(), lineno=538, col_offset=19), [NotEq()], [Str('500', lineno=538, col_offset=38)], lineno=538, col_offset=19), [Raise(None, None, None, lineno=539, col_offset=20)], [], lineno=538, col_offset=16)], lineno=537, col_offset=12)], [], lineno=535, col_offset=12)], [If(Compare(Name('dirname', Load(), lineno=540, col_offset=13), [Eq()], [Str('', lineno=540, col_offset=24)], lineno=540, col_offset=13), [Assign([Name('dirname', Store(), lineno=541, col_offset=12)], Str('.', lineno=541, col_offset=22), lineno=541, col_offset=12)], [], lineno=540, col_offset=13)], lineno=534, col_offset=8), Assign([Name('cmd', Store(), lineno=542, col_offset=8)], BinOp(Str('CWD ', lineno=542, col_offset=14), Add(), Name('dirname', Load(), lineno=542, col_offset=23), lineno=542, col_offset=14), lineno=542, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=543, col_offset=15), 'voidcmd', Load(), lineno=543, col_offset=15), [Name('cmd', Load(), lineno=543, col_offset=28)], [], None, None, lineno=543, col_offset=15), lineno=543, col_offset=8)], [], lineno=532, col_offset=4), FunctionDef('size', arguments([Name('self', Param(), lineno=545, col_offset=13), Name('filename', Param(), lineno=545, col_offset=19)], None, None, []), [Expr(Str('Retrieve the size of a file.', lineno=546, col_offset=8), lineno=546, col_offset=8), Assign([Name('resp', Store(), lineno=548, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=548, col_offset=15), 'sendcmd', Load(), lineno=548, col_offset=15), [BinOp(Str('SIZE ', lineno=548, col_offset=28), Add(), Name('filename', Load(), lineno=548, col_offset=38), lineno=548, col_offset=28)], [], None, None, lineno=548, col_offset=15), lineno=548, col_offset=8), If(Compare(Subscript(Name('resp', Load(), lineno=549, col_offset=11), Slice(None, Num(3, lineno=549, col_offset=17), None), Load(), lineno=549, col_offset=11), [Eq()], [Str('213', lineno=549, col_offset=23)], lineno=549, col_offset=11), [Assign([Name('s', Store(), lineno=550, col_offset=12)], Call(Attribute(Subscript(Name('resp', Load(), lineno=550, col_offset=16), Slice(Num(3, lineno=550, col_offset=21), None, None), Load(), lineno=550, col_offset=16), 'strip', Load(), lineno=550, col_offset=16), [], [], None, None, lineno=550, col_offset=16), lineno=550, col_offset=12), TryExcept([Return(Call(Name('int', Load(), lineno=552, col_offset=23), [Name('s', Load(), lineno=552, col_offset=27)], [], None, None, lineno=552, col_offset=23), lineno=552, col_offset=16)], [ExceptHandler(Tuple([Name('OverflowError', Load(), lineno=553, col_offset=20), Name('ValueError', Load(), lineno=553, col_offset=35)], Load(), lineno=553, col_offset=20), None, [Return(Call(Name('long', Load(), lineno=554, col_offset=23), [Name('s', Load(), lineno=554, col_offset=28)], [], None, None, lineno=554, col_offset=23), lineno=554, col_offset=16)], lineno=553, col_offset=12)], [], lineno=551, col_offset=12)], [], lineno=549, col_offset=8)], [], lineno=545, col_offset=4), FunctionDef('mkd', arguments([Name('self', Param(), lineno=556, col_offset=12), Name('dirname', Param(), lineno=556, col_offset=18)], None, None, []), [Expr(Str('Make a directory, return its full pathname.', lineno=557, col_offset=8), lineno=557, col_offset=8), Assign([Name('resp', Store(), lineno=558, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=558, col_offset=15), 'sendcmd', Load(), lineno=558, col_offset=15), [BinOp(Str('MKD ', lineno=558, col_offset=28), Add(), Name('dirname', Load(), lineno=558, col_offset=37), lineno=558, col_offset=28)], [], None, None, lineno=558, col_offset=15), lineno=558, col_offset=8), Return(Call(Name('parse257', Load(), lineno=559, col_offset=15), [Name('resp', Load(), lineno=559, col_offset=24)], [], None, None, lineno=559, col_offset=15), lineno=559, col_offset=8)], [], lineno=556, col_offset=4), FunctionDef('rmd', arguments([Name('self', Param(), lineno=561, col_offset=12), Name('dirname', Param(), lineno=561, col_offset=18)], None, None, []), [Expr(Str('Remove a directory.', lineno=562, col_offset=8), lineno=562, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=563, col_offset=15), 'voidcmd', Load(), lineno=563, col_offset=15), [BinOp(Str('RMD ', lineno=563, col_offset=28), Add(), Name('dirname', Load(), lineno=563, col_offset=37), lineno=563, col_offset=28)], [], None, None, lineno=563, col_offset=15), lineno=563, col_offset=8)], [], lineno=561, col_offset=4), FunctionDef('pwd', arguments([Name('self', Param(), lineno=565, col_offset=12)], None, None, []), [Expr(Str('Return current working directory.', lineno=566, col_offset=8), lineno=566, col_offset=8), Assign([Name('resp', Store(), lineno=567, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=567, col_offset=15), 'sendcmd', Load(), lineno=567, col_offset=15), [Str('PWD', lineno=567, col_offset=28)], [], None, None, lineno=567, col_offset=15), lineno=567, col_offset=8), Return(Call(Name('parse257', Load(), lineno=568, col_offset=15), [Name('resp', Load(), lineno=568, col_offset=24)], [], None, None, lineno=568, col_offset=15), lineno=568, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('quit', arguments([Name('self', Param(), lineno=570, col_offset=13)], None, None, []), [Expr(Str('Quit, and close the connection.', lineno=571, col_offset=8), lineno=571, col_offset=8), Assign([Name('resp', Store(), lineno=572, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=572, col_offset=15), 'voidcmd', Load(), lineno=572, col_offset=15), [Str('QUIT', lineno=572, col_offset=28)], [], None, None, lineno=572, col_offset=15), lineno=572, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=8), 'close', Load(), lineno=573, col_offset=8), [], [], None, None, lineno=573, col_offset=8), lineno=573, col_offset=8), Return(Name('resp', Load(), lineno=574, col_offset=15), lineno=574, col_offset=8)], [], lineno=570, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=576, col_offset=14)], None, None, []), [Expr(Str('Close the connection without assuming anything about it.', lineno=577, col_offset=8), lineno=577, col_offset=8), If(Attribute(Name('self', Load(), lineno=578, col_offset=11), 'file', Load(), lineno=578, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=579, col_offset=12), 'file', Load(), lineno=579, col_offset=12), 'close', Load(), lineno=579, col_offset=12), [], [], None, None, lineno=579, col_offset=12), lineno=579, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=580, col_offset=12), 'sock', Load(), lineno=580, col_offset=12), 'close', Load(), lineno=580, col_offset=12), [], [], None, None, lineno=580, col_offset=12), lineno=580, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=581, col_offset=12), 'file', Store(), lineno=581, col_offset=12), Attribute(Name('self', Load(), lineno=581, col_offset=24), 'sock', Store(), lineno=581, col_offset=24)], Name('None', Load(), lineno=581, col_offset=36), lineno=581, col_offset=12)], [], lineno=578, col_offset=8)], [], lineno=576, col_offset=4)], [], lineno=77, col_offset=0), TryExcept([Import([alias('ssl', None)], lineno=585, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=586, col_offset=7), None, [Pass( lineno=587, col_offset=4)], lineno=586, col_offset=0)], [ClassDef('FTP_TLS', [Name('FTP', Load(), lineno=589, col_offset=18)], [Expr(Str("A FTP subclass which adds TLS support to FTP as described\n        in RFC-4217.\n\n        Connect as usual to port 21 implicitly securing the FTP control\n        connection before authenticating.\n\n        Securing the data connection requires user to explicitly ask\n        for it by calling prot_p() method.\n\n        Usage example:\n        >>> from ftplib import FTP_TLS\n        >>> ftps = FTP_TLS('ftp.python.org')\n        >>> ftps.login()  # login anonimously previously securing control channel\n        '230 Guest login ok, access restrictions apply.'\n        >>> ftps.prot_p()  # switch to secure data connection\n        '200 Protection level set to P'\n        >>> ftps.retrlines('LIST')  # list directory content securely\n        total 9\n        drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 .\n        drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 ..\n        drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 bin\n        drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 etc\n        d-wxrwxr-x   2 ftp      wheel        1024 Sep  5 13:43 incoming\n        drwxr-xr-x   2 root     wheel        1024 Nov 17  1993 lib\n        drwxr-xr-x   6 1094     wheel        1024 Sep 13 19:07 pub\n        drwxr-xr-x   3 root     wheel        1024 Jan  3  1994 usr\n        -rw-r--r--   1 root     root          312 Aug  1  1994 welcome.msg\n        '226 Transfer complete.'\n        >>> ftps.quit()\n        '221 Goodbye.'\n        >>>\n        ", lineno=621, col_offset=-1), lineno=621, col_offset=-1), Assign([Name('ssl_version', Store(), lineno=622, col_offset=8)], Attribute(Name('ssl', Load(), lineno=622, col_offset=22), 'PROTOCOL_TLSv1', Load(), lineno=622, col_offset=22), lineno=622, col_offset=8), FunctionDef('__init__', arguments([Name('self', Param(), lineno=624, col_offset=21), Name('host', Param(), lineno=624, col_offset=27), Name('user', Param(), lineno=624, col_offset=36), Name('passwd', Param(), lineno=624, col_offset=45), Name('acct', Param(), lineno=624, col_offset=56), Name('keyfile', Param(), lineno=624, col_offset=65), Name('certfile', Param(), lineno=625, col_offset=21), Name('timeout', Param(), lineno=625, col_offset=36)], None, None, [Str('', lineno=624, col_offset=32), Str('', lineno=624, col_offset=41), Str('', lineno=624, col_offset=52), Str('', lineno=624, col_offset=61), Name('None', Load(), lineno=624, col_offset=73), Name('None', Load(), lineno=625, col_offset=30), Name('_GLOBAL_DEFAULT_TIMEOUT', Load(), lineno=625, col_offset=44)]), [Assign([Attribute(Name('self', Load(), lineno=626, col_offset=12), 'keyfile', Store(), lineno=626, col_offset=12)], Name('keyfile', Load(), lineno=626, col_offset=27), lineno=626, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=627, col_offset=12), 'certfile', Store(), lineno=627, col_offset=12)], Name('certfile', Load(), lineno=627, col_offset=28), lineno=627, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=628, col_offset=12), '_prot_p', Store(), lineno=628, col_offset=12)], Name('False', Load(), lineno=628, col_offset=27), lineno=628, col_offset=12), Expr(Call(Attribute(Name('FTP', Load(), lineno=629, col_offset=12), '__init__', Load(), lineno=629, col_offset=12), [Name('self', Load(), lineno=629, col_offset=25), Name('host', Load(), lineno=629, col_offset=31), Name('user', Load(), lineno=629, col_offset=37), Name('passwd', Load(), lineno=629, col_offset=43), Name('acct', Load(), lineno=629, col_offset=51), Name('timeout', Load(), lineno=629, col_offset=57)], [], None, None, lineno=629, col_offset=12), lineno=629, col_offset=12)], [], lineno=624, col_offset=8), FunctionDef('login', arguments([Name('self', Param(), lineno=631, col_offset=18), Name('user', Param(), lineno=631, col_offset=24), Name('passwd', Param(), lineno=631, col_offset=33), Name('acct', Param(), lineno=631, col_offset=44), Name('secure', Param(), lineno=631, col_offset=53)], None, None, [Str('', lineno=631, col_offset=29), Str('', lineno=631, col_offset=40), Str('', lineno=631, col_offset=49), Name('True', Load(), lineno=631, col_offset=60)]), [If(BoolOp(And(), [Name('secure', Load(), lineno=632, col_offset=15), UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=632, col_offset=30), [Attribute(Name('self', Load(), lineno=632, col_offset=41), 'sock', Load(), lineno=632, col_offset=41), Attribute(Name('ssl', Load(), lineno=632, col_offset=52), 'SSLSocket', Load(), lineno=632, col_offset=52)], [], None, None, lineno=632, col_offset=30), lineno=632, col_offset=26)], lineno=632, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=633, col_offset=16), 'auth', Load(), lineno=633, col_offset=16), [], [], None, None, lineno=633, col_offset=16), lineno=633, col_offset=16)], [], lineno=632, col_offset=12), Return(Call(Attribute(Name('FTP', Load(), lineno=634, col_offset=19), 'login', Load(), lineno=634, col_offset=19), [Name('self', Load(), lineno=634, col_offset=29), Name('user', Load(), lineno=634, col_offset=35), Name('passwd', Load(), lineno=634, col_offset=41), Name('acct', Load(), lineno=634, col_offset=49)], [], None, None, lineno=634, col_offset=19), lineno=634, col_offset=12)], [], lineno=631, col_offset=8), FunctionDef('auth', arguments([Name('self', Param(), lineno=636, col_offset=17)], None, None, []), [Expr(Str('Set up secure control connection by using TLS/SSL.', lineno=637, col_offset=12), lineno=637, col_offset=12), If(Call(Name('isinstance', Load(), lineno=638, col_offset=15), [Attribute(Name('self', Load(), lineno=638, col_offset=26), 'sock', Load(), lineno=638, col_offset=26), Attribute(Name('ssl', Load(), lineno=638, col_offset=37), 'SSLSocket', Load(), lineno=638, col_offset=37)], [], None, None, lineno=638, col_offset=15), [Raise(Call(Name('ValueError', Load(), lineno=639, col_offset=22), [Str('Already using TLS', lineno=639, col_offset=33)], [], None, None, lineno=639, col_offset=22), None, None, lineno=639, col_offset=16)], [], lineno=638, col_offset=12), If(Compare(Attribute(Name('self', Load(), lineno=640, col_offset=15), 'ssl_version', Load(), lineno=640, col_offset=15), [Eq()], [Attribute(Name('ssl', Load(), lineno=640, col_offset=35), 'PROTOCOL_TLSv1', Load(), lineno=640, col_offset=35)], lineno=640, col_offset=15), [Assign([Name('resp', Store(), lineno=641, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=641, col_offset=23), 'voidcmd', Load(), lineno=641, col_offset=23), [Str('AUTH TLS', lineno=641, col_offset=36)], [], None, None, lineno=641, col_offset=23), lineno=641, col_offset=16)], [Assign([Name('resp', Store(), lineno=643, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=643, col_offset=23), 'voidcmd', Load(), lineno=643, col_offset=23), [Str('AUTH SSL', lineno=643, col_offset=36)], [], None, None, lineno=643, col_offset=23), lineno=643, col_offset=16)], lineno=640, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=644, col_offset=12), 'sock', Store(), lineno=644, col_offset=12)], Call(Attribute(Name('ssl', Load(), lineno=644, col_offset=24), 'wrap_socket', Load(), lineno=644, col_offset=24), [Attribute(Name('self', Load(), lineno=644, col_offset=40), 'sock', Load(), lineno=644, col_offset=40), Attribute(Name('self', Load(), lineno=644, col_offset=51), 'keyfile', Load(), lineno=644, col_offset=51), Attribute(Name('self', Load(), lineno=644, col_offset=65), 'certfile', Load(), lineno=644, col_offset=65)], [keyword('ssl_version', Attribute(Name('self', Load(), lineno=645, col_offset=52), 'ssl_version', Load(), lineno=645, col_offset=52))], None, None, lineno=644, col_offset=24), lineno=644, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=646, col_offset=12), 'file', Store(), lineno=646, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=646, col_offset=24), 'sock', Load(), lineno=646, col_offset=24), 'makefile', Load(), lineno=646, col_offset=24), [], [keyword('mode', Str('rb', lineno=646, col_offset=48))], None, None, lineno=646, col_offset=24), lineno=646, col_offset=12), Return(Name('resp', Load(), lineno=647, col_offset=19), lineno=647, col_offset=12)], [], lineno=636, col_offset=8), FunctionDef('prot_p', arguments([Name('self', Param(), lineno=649, col_offset=19)], None, None, []), [Expr(Str('Set up secure data connection.', lineno=650, col_offset=12), lineno=650, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=660, col_offset=12), 'voidcmd', Load(), lineno=660, col_offset=12), [Str('PBSZ 0', lineno=660, col_offset=25)], [], None, None, lineno=660, col_offset=12), lineno=660, col_offset=12), Assign([Name('resp', Store(), lineno=661, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=661, col_offset=19), 'voidcmd', Load(), lineno=661, col_offset=19), [Str('PROT P', lineno=661, col_offset=32)], [], None, None, lineno=661, col_offset=19), lineno=661, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=662, col_offset=12), '_prot_p', Store(), lineno=662, col_offset=12)], Name('True', Load(), lineno=662, col_offset=27), lineno=662, col_offset=12), Return(Name('resp', Load(), lineno=663, col_offset=19), lineno=663, col_offset=12)], [], lineno=649, col_offset=8), FunctionDef('prot_c', arguments([Name('self', Param(), lineno=665, col_offset=19)], None, None, []), [Expr(Str('Set up clear text data connection.', lineno=666, col_offset=12), lineno=666, col_offset=12), Assign([Name('resp', Store(), lineno=667, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=667, col_offset=19), 'voidcmd', Load(), lineno=667, col_offset=19), [Str('PROT C', lineno=667, col_offset=32)], [], None, None, lineno=667, col_offset=19), lineno=667, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=668, col_offset=12), '_prot_p', Store(), lineno=668, col_offset=12)], Name('False', Load(), lineno=668, col_offset=27), lineno=668, col_offset=12), Return(Name('resp', Load(), lineno=669, col_offset=19), lineno=669, col_offset=12)], [], lineno=665, col_offset=8), FunctionDef('ntransfercmd', arguments([Name('self', Param(), lineno=673, col_offset=25), Name('cmd', Param(), lineno=673, col_offset=31), Name('rest', Param(), lineno=673, col_offset=36)], None, None, [Name('None', Load(), lineno=673, col_offset=41)]), [Assign([Tuple([Name('conn', Store(), lineno=674, col_offset=12), Name('size', Store(), lineno=674, col_offset=18)], Store(), lineno=674, col_offset=12)], Call(Attribute(Name('FTP', Load(), lineno=674, col_offset=25), 'ntransfercmd', Load(), lineno=674, col_offset=25), [Name('self', Load(), lineno=674, col_offset=42), Name('cmd', Load(), lineno=674, col_offset=48), Name('rest', Load(), lineno=674, col_offset=53)], [], None, None, lineno=674, col_offset=25), lineno=674, col_offset=12), If(Attribute(Name('self', Load(), lineno=675, col_offset=15), '_prot_p', Load(), lineno=675, col_offset=15), [Assign([Name('conn', Store(), lineno=676, col_offset=16)], Call(Attribute(Name('ssl', Load(), lineno=676, col_offset=23), 'wrap_socket', Load(), lineno=676, col_offset=23), [Name('conn', Load(), lineno=676, col_offset=39), Attribute(Name('self', Load(), lineno=676, col_offset=45), 'keyfile', Load(), lineno=676, col_offset=45), Attribute(Name('self', Load(), lineno=676, col_offset=59), 'certfile', Load(), lineno=676, col_offset=59)], [keyword('ssl_version', Attribute(Name('self', Load(), lineno=677, col_offset=51), 'ssl_version', Load(), lineno=677, col_offset=51))], None, None, lineno=676, col_offset=23), lineno=676, col_offset=16)], [], lineno=675, col_offset=12), Return(Tuple([Name('conn', Load(), lineno=678, col_offset=19), Name('size', Load(), lineno=678, col_offset=25)], Load(), lineno=678, col_offset=19), lineno=678, col_offset=12)], [], lineno=673, col_offset=8), FunctionDef('retrbinary', arguments([Name('self', Param(), lineno=680, col_offset=23), Name('cmd', Param(), lineno=680, col_offset=29), Name('callback', Param(), lineno=680, col_offset=34), Name('blocksize', Param(), lineno=680, col_offset=44), Name('rest', Param(), lineno=680, col_offset=60)], None, None, [Num(8192, lineno=680, col_offset=54), Name('None', Load(), lineno=680, col_offset=65)]), [Expr(Call(Attribute(Name('self', Load(), lineno=681, col_offset=12), 'voidcmd', Load(), lineno=681, col_offset=12), [Str('TYPE I', lineno=681, col_offset=25)], [], None, None, lineno=681, col_offset=12), lineno=681, col_offset=12), Assign([Name('conn', Store(), lineno=682, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=682, col_offset=19), 'transfercmd', Load(), lineno=682, col_offset=19), [Name('cmd', Load(), lineno=682, col_offset=36), Name('rest', Load(), lineno=682, col_offset=41)], [], None, None, lineno=682, col_offset=19), lineno=682, col_offset=12), TryFinally([While(Num(1, lineno=684, col_offset=22), [Assign([Name('data', Store(), lineno=685, col_offset=20)], Call(Attribute(Name('conn', Load(), lineno=685, col_offset=27), 'recv', Load(), lineno=685, col_offset=27), [Name('blocksize', Load(), lineno=685, col_offset=37)], [], None, None, lineno=685, col_offset=27), lineno=685, col_offset=20), If(UnaryOp(Not(), Name('data', Load(), lineno=686, col_offset=27), lineno=686, col_offset=23), [Break( lineno=687, col_offset=24)], [], lineno=686, col_offset=20), Expr(Call(Name('callback', Load(), lineno=688, col_offset=20), [Name('data', Load(), lineno=688, col_offset=29)], [], None, None, lineno=688, col_offset=20), lineno=688, col_offset=20)], [], lineno=684, col_offset=16), If(Call(Name('isinstance', Load(), lineno=690, col_offset=19), [Name('conn', Load(), lineno=690, col_offset=30), Attribute(Name('ssl', Load(), lineno=690, col_offset=36), 'SSLSocket', Load(), lineno=690, col_offset=36)], [], None, None, lineno=690, col_offset=19), [Expr(Call(Attribute(Name('conn', Load(), lineno=691, col_offset=20), 'unwrap', Load(), lineno=691, col_offset=20), [], [], None, None, lineno=691, col_offset=20), lineno=691, col_offset=20)], [], lineno=690, col_offset=16)], [Expr(Call(Attribute(Name('conn', Load(), lineno=693, col_offset=16), 'close', Load(), lineno=693, col_offset=16), [], [], None, None, lineno=693, col_offset=16), lineno=693, col_offset=16)], lineno=683, col_offset=12), Return(Call(Attribute(Name('self', Load(), lineno=694, col_offset=19), 'voidresp', Load(), lineno=694, col_offset=19), [], [], None, None, lineno=694, col_offset=19), lineno=694, col_offset=12)], [], lineno=680, col_offset=8), FunctionDef('retrlines', arguments([Name('self', Param(), lineno=696, col_offset=22), Name('cmd', Param(), lineno=696, col_offset=28), Name('callback', Param(), lineno=696, col_offset=33)], None, None, [Name('None', Load(), lineno=696, col_offset=44)]), [If(Compare(Name('callback', Load(), lineno=697, col_offset=15), [Is()], [Name('None', Load(), lineno=697, col_offset=27)], lineno=697, col_offset=15), [Assign([Name('callback', Store(), lineno=697, col_offset=33)], Name('print_line', Load(), lineno=697, col_offset=44), lineno=697, col_offset=33)], [], lineno=697, col_offset=12), Assign([Name('resp', Store(), lineno=698, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=698, col_offset=19), 'sendcmd', Load(), lineno=698, col_offset=19), [Str('TYPE A', lineno=698, col_offset=32)], [], None, None, lineno=698, col_offset=19), lineno=698, col_offset=12), Assign([Name('conn', Store(), lineno=699, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=699, col_offset=19), 'transfercmd', Load(), lineno=699, col_offset=19), [Name('cmd', Load(), lineno=699, col_offset=36)], [], None, None, lineno=699, col_offset=19), lineno=699, col_offset=12), Assign([Name('fp', Store(), lineno=700, col_offset=12)], Call(Attribute(Name('conn', Load(), lineno=700, col_offset=17), 'makefile', Load(), lineno=700, col_offset=17), [Str('rb', lineno=700, col_offset=31)], [], None, None, lineno=700, col_offset=17), lineno=700, col_offset=12), TryFinally([While(Num(1, lineno=702, col_offset=22), [Assign([Name('line', Store(), lineno=703, col_offset=20)], Call(Attribute(Name('fp', Load(), lineno=703, col_offset=27), 'readline', Load(), lineno=703, col_offset=27), [], [], None, None, lineno=703, col_offset=27), lineno=703, col_offset=20), If(Compare(Attribute(Name('self', Load(), lineno=704, col_offset=23), 'debugging', Load(), lineno=704, col_offset=23), [Gt()], [Num(2, lineno=704, col_offset=40)], lineno=704, col_offset=23), [Print(None, [Str('*retr*', lineno=704, col_offset=49), Call(Name('repr', Load(), lineno=704, col_offset=59), [Name('line', Load(), lineno=704, col_offset=64)], [], None, None, lineno=704, col_offset=59)], True, lineno=704, col_offset=43)], [], lineno=704, col_offset=20), If(UnaryOp(Not(), Name('line', Load(), lineno=705, col_offset=27), lineno=705, col_offset=23), [Break( lineno=706, col_offset=24)], [], lineno=705, col_offset=20), If(Compare(Subscript(Name('line', Load(), lineno=707, col_offset=23), Slice(Num(-2, lineno=707, col_offset=29), None, None), Load(), lineno=707, col_offset=23), [Eq()], [Name('CRLF', Load(), lineno=707, col_offset=36)], lineno=707, col_offset=23), [Assign([Name('line', Store(), lineno=708, col_offset=24)], Subscript(Name('line', Load(), lineno=708, col_offset=31), Slice(None, Num(-2, lineno=708, col_offset=38), None), Load(), lineno=708, col_offset=31), lineno=708, col_offset=24)], [If(Compare(Subscript(Name('line', Load(), lineno=709, col_offset=25), Slice(Num(-1, lineno=709, col_offset=31), None, None), Load(), lineno=709, col_offset=25), [Eq()], [Str('\n', lineno=709, col_offset=38)], lineno=709, col_offset=25), [Assign([Name('line', Store(), lineno=710, col_offset=24)], Subscript(Name('line', Load(), lineno=710, col_offset=31), Slice(None, Num(-1, lineno=710, col_offset=38), None), Load(), lineno=710, col_offset=31), lineno=710, col_offset=24)], [], lineno=709, col_offset=25)], lineno=707, col_offset=20), Expr(Call(Name('callback', Load(), lineno=711, col_offset=20), [Name('line', Load(), lineno=711, col_offset=29)], [], None, None, lineno=711, col_offset=20), lineno=711, col_offset=20)], [], lineno=702, col_offset=16), If(Call(Name('isinstance', Load(), lineno=713, col_offset=19), [Name('conn', Load(), lineno=713, col_offset=30), Attribute(Name('ssl', Load(), lineno=713, col_offset=36), 'SSLSocket', Load(), lineno=713, col_offset=36)], [], None, None, lineno=713, col_offset=19), [Expr(Call(Attribute(Name('conn', Load(), lineno=714, col_offset=20), 'unwrap', Load(), lineno=714, col_offset=20), [], [], None, None, lineno=714, col_offset=20), lineno=714, col_offset=20)], [], lineno=713, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=716, col_offset=16), 'close', Load(), lineno=716, col_offset=16), [], [], None, None, lineno=716, col_offset=16), lineno=716, col_offset=16), Expr(Call(Attribute(Name('conn', Load(), lineno=717, col_offset=16), 'close', Load(), lineno=717, col_offset=16), [], [], None, None, lineno=717, col_offset=16), lineno=717, col_offset=16)], lineno=701, col_offset=12), Return(Call(Attribute(Name('self', Load(), lineno=718, col_offset=19), 'voidresp', Load(), lineno=718, col_offset=19), [], [], None, None, lineno=718, col_offset=19), lineno=718, col_offset=12)], [], lineno=696, col_offset=8), FunctionDef('storbinary', arguments([Name('self', Param(), lineno=720, col_offset=23), Name('cmd', Param(), lineno=720, col_offset=29), Name('fp', Param(), lineno=720, col_offset=34), Name('blocksize', Param(), lineno=720, col_offset=38), Name('callback', Param(), lineno=720, col_offset=54), Name('rest', Param(), lineno=720, col_offset=69)], None, None, [Num(8192, lineno=720, col_offset=48), Name('None', Load(), lineno=720, col_offset=63), Name('None', Load(), lineno=720, col_offset=74)]), [Expr(Call(Attribute(Name('self', Load(), lineno=721, col_offset=12), 'voidcmd', Load(), lineno=721, col_offset=12), [Str('TYPE I', lineno=721, col_offset=25)], [], None, None, lineno=721, col_offset=12), lineno=721, col_offset=12), Assign([Name('conn', Store(), lineno=722, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=722, col_offset=19), 'transfercmd', Load(), lineno=722, col_offset=19), [Name('cmd', Load(), lineno=722, col_offset=36), Name('rest', Load(), lineno=722, col_offset=41)], [], None, None, lineno=722, col_offset=19), lineno=722, col_offset=12), TryFinally([While(Num(1, lineno=724, col_offset=22), [Assign([Name('buf', Store(), lineno=725, col_offset=20)], Call(Attribute(Name('fp', Load(), lineno=725, col_offset=26), 'read', Load(), lineno=725, col_offset=26), [Name('blocksize', Load(), lineno=725, col_offset=34)], [], None, None, lineno=725, col_offset=26), lineno=725, col_offset=20), If(UnaryOp(Not(), Name('buf', Load(), lineno=726, col_offset=27), lineno=726, col_offset=23), [Break( lineno=726, col_offset=32)], [], lineno=726, col_offset=20), Expr(Call(Attribute(Name('conn', Load(), lineno=727, col_offset=20), 'sendall', Load(), lineno=727, col_offset=20), [Name('buf', Load(), lineno=727, col_offset=33)], [], None, None, lineno=727, col_offset=20), lineno=727, col_offset=20), If(Name('callback', Load(), lineno=728, col_offset=23), [Expr(Call(Name('callback', Load(), lineno=728, col_offset=33), [Name('buf', Load(), lineno=728, col_offset=42)], [], None, None, lineno=728, col_offset=33), lineno=728, col_offset=33)], [], lineno=728, col_offset=20)], [], lineno=724, col_offset=16), If(Call(Name('isinstance', Load(), lineno=730, col_offset=19), [Name('conn', Load(), lineno=730, col_offset=30), Attribute(Name('ssl', Load(), lineno=730, col_offset=36), 'SSLSocket', Load(), lineno=730, col_offset=36)], [], None, None, lineno=730, col_offset=19), [Expr(Call(Attribute(Name('conn', Load(), lineno=731, col_offset=20), 'unwrap', Load(), lineno=731, col_offset=20), [], [], None, None, lineno=731, col_offset=20), lineno=731, col_offset=20)], [], lineno=730, col_offset=16)], [Expr(Call(Attribute(Name('conn', Load(), lineno=733, col_offset=16), 'close', Load(), lineno=733, col_offset=16), [], [], None, None, lineno=733, col_offset=16), lineno=733, col_offset=16)], lineno=723, col_offset=12), Return(Call(Attribute(Name('self', Load(), lineno=734, col_offset=19), 'voidresp', Load(), lineno=734, col_offset=19), [], [], None, None, lineno=734, col_offset=19), lineno=734, col_offset=12)], [], lineno=720, col_offset=8), FunctionDef('storlines', arguments([Name('self', Param(), lineno=736, col_offset=22), Name('cmd', Param(), lineno=736, col_offset=28), Name('fp', Param(), lineno=736, col_offset=33), Name('callback', Param(), lineno=736, col_offset=37)], None, None, [Name('None', Load(), lineno=736, col_offset=46)]), [Expr(Call(Attribute(Name('self', Load(), lineno=737, col_offset=12), 'voidcmd', Load(), lineno=737, col_offset=12), [Str('TYPE A', lineno=737, col_offset=25)], [], None, None, lineno=737, col_offset=12), lineno=737, col_offset=12), Assign([Name('conn', Store(), lineno=738, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=738, col_offset=19), 'transfercmd', Load(), lineno=738, col_offset=19), [Name('cmd', Load(), lineno=738, col_offset=36)], [], None, None, lineno=738, col_offset=19), lineno=738, col_offset=12), TryFinally([While(Num(1, lineno=740, col_offset=22), [Assign([Name('buf', Store(), lineno=741, col_offset=20)], Call(Attribute(Name('fp', Load(), lineno=741, col_offset=26), 'readline', Load(), lineno=741, col_offset=26), [], [], None, None, lineno=741, col_offset=26), lineno=741, col_offset=20), If(UnaryOp(Not(), Name('buf', Load(), lineno=742, col_offset=27), lineno=742, col_offset=23), [Break( lineno=742, col_offset=32)], [], lineno=742, col_offset=20), If(Compare(Subscript(Name('buf', Load(), lineno=743, col_offset=23), Slice(Num(-2, lineno=743, col_offset=28), None, None), Load(), lineno=743, col_offset=23), [NotEq()], [Name('CRLF', Load(), lineno=743, col_offset=35)], lineno=743, col_offset=23), [If(Compare(Subscript(Name('buf', Load(), lineno=744, col_offset=27), Index(Num(-1, lineno=744, col_offset=32)), Load(), lineno=744, col_offset=27), [In()], [Name('CRLF', Load(), lineno=744, col_offset=38)], lineno=744, col_offset=27), [Assign([Name('buf', Store(), lineno=744, col_offset=44)], Subscript(Name('buf', Load(), lineno=744, col_offset=50), Slice(None, Num(-1, lineno=744, col_offset=56), None), Load(), lineno=744, col_offset=50), lineno=744, col_offset=44)], [], lineno=744, col_offset=24), Assign([Name('buf', Store(), lineno=745, col_offset=24)], BinOp(Name('buf', Load(), lineno=745, col_offset=30), Add(), Name('CRLF', Load(), lineno=745, col_offset=36), lineno=745, col_offset=30), lineno=745, col_offset=24)], [], lineno=743, col_offset=20), Expr(Call(Attribute(Name('conn', Load(), lineno=746, col_offset=20), 'sendall', Load(), lineno=746, col_offset=20), [Name('buf', Load(), lineno=746, col_offset=33)], [], None, None, lineno=746, col_offset=20), lineno=746, col_offset=20), If(Name('callback', Load(), lineno=747, col_offset=23), [Expr(Call(Name('callback', Load(), lineno=747, col_offset=33), [Name('buf', Load(), lineno=747, col_offset=42)], [], None, None, lineno=747, col_offset=33), lineno=747, col_offset=33)], [], lineno=747, col_offset=20)], [], lineno=740, col_offset=16), If(Call(Name('isinstance', Load(), lineno=749, col_offset=19), [Name('conn', Load(), lineno=749, col_offset=30), Attribute(Name('ssl', Load(), lineno=749, col_offset=36), 'SSLSocket', Load(), lineno=749, col_offset=36)], [], None, None, lineno=749, col_offset=19), [Expr(Call(Attribute(Name('conn', Load(), lineno=750, col_offset=20), 'unwrap', Load(), lineno=750, col_offset=20), [], [], None, None, lineno=750, col_offset=20), lineno=750, col_offset=20)], [], lineno=749, col_offset=16)], [Expr(Call(Attribute(Name('conn', Load(), lineno=752, col_offset=16), 'close', Load(), lineno=752, col_offset=16), [], [], None, None, lineno=752, col_offset=16), lineno=752, col_offset=16)], lineno=739, col_offset=12), Return(Call(Attribute(Name('self', Load(), lineno=753, col_offset=19), 'voidresp', Load(), lineno=753, col_offset=19), [], [], None, None, lineno=753, col_offset=19), lineno=753, col_offset=12)], [], lineno=736, col_offset=8)], [], lineno=589, col_offset=4), Expr(Call(Attribute(Name('__all__', Load(), lineno=755, col_offset=4), 'append', Load(), lineno=755, col_offset=4), [Str('FTP_TLS', lineno=755, col_offset=19)], [], None, None, lineno=755, col_offset=4), lineno=755, col_offset=4), Assign([Name('all_errors', Store(), lineno=756, col_offset=4)], Tuple([Name('Error', Load(), lineno=756, col_offset=18), Name('IOError', Load(), lineno=756, col_offset=25), Name('EOFError', Load(), lineno=756, col_offset=34), Attribute(Name('ssl', Load(), lineno=756, col_offset=44), 'SSLError', Load(), lineno=756, col_offset=44)], Load(), lineno=756, col_offset=18), lineno=756, col_offset=4)], lineno=584, col_offset=0), Assign([Name('_150_re', Store(), lineno=759, col_offset=0)], Name('None', Load(), lineno=759, col_offset=10), lineno=759, col_offset=0), FunctionDef('parse150', arguments([Name('resp', Param(), lineno=761, col_offset=13)], None, None, []), [Expr(Str("Parse the '150' response for a RETR request.\n    Returns the expected transfer size or None; size is not guaranteed to\n    be present in the 150 message.\n    ", lineno=765, col_offset=-1), lineno=765, col_offset=-1), If(Compare(Subscript(Name('resp', Load(), lineno=766, col_offset=7), Slice(None, Num(3, lineno=766, col_offset=13), None), Load(), lineno=766, col_offset=7), [NotEq()], [Str('150', lineno=766, col_offset=19)], lineno=766, col_offset=7), [Raise(Name('error_reply', Load(), lineno=767, col_offset=14), Name('resp', Load(), lineno=767, col_offset=27), None, lineno=767, col_offset=8)], [], lineno=766, col_offset=4), Global(['_150_re'], lineno=768, col_offset=4), If(Compare(Name('_150_re', Load(), lineno=769, col_offset=7), [Is()], [Name('None', Load(), lineno=769, col_offset=18)], lineno=769, col_offset=7), [Import([alias('re', None)], lineno=770, col_offset=8), Assign([Name('_150_re', Store(), lineno=771, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=771, col_offset=18), 'compile', Load(), lineno=771, col_offset=18), [Str('150 .* \\((\\d+) bytes\\)', lineno=771, col_offset=29), Attribute(Name('re', Load(), lineno=771, col_offset=55), 'IGNORECASE', Load(), lineno=771, col_offset=55)], [], None, None, lineno=771, col_offset=18), lineno=771, col_offset=8)], [], lineno=769, col_offset=4), Assign([Name('m', Store(), lineno=772, col_offset=4)], Call(Attribute(Name('_150_re', Load(), lineno=772, col_offset=8), 'match', Load(), lineno=772, col_offset=8), [Name('resp', Load(), lineno=772, col_offset=22)], [], None, None, lineno=772, col_offset=8), lineno=772, col_offset=4), If(UnaryOp(Not(), Name('m', Load(), lineno=773, col_offset=11), lineno=773, col_offset=7), [Return(Name('None', Load(), lineno=774, col_offset=15), lineno=774, col_offset=8)], [], lineno=773, col_offset=4), Assign([Name('s', Store(), lineno=775, col_offset=4)], Call(Attribute(Name('m', Load(), lineno=775, col_offset=8), 'group', Load(), lineno=775, col_offset=8), [Num(1, lineno=775, col_offset=16)], [], None, None, lineno=775, col_offset=8), lineno=775, col_offset=4), TryExcept([Return(Call(Name('int', Load(), lineno=777, col_offset=15), [Name('s', Load(), lineno=777, col_offset=19)], [], None, None, lineno=777, col_offset=15), lineno=777, col_offset=8)], [ExceptHandler(Tuple([Name('OverflowError', Load(), lineno=778, col_offset=12), Name('ValueError', Load(), lineno=778, col_offset=27)], Load(), lineno=778, col_offset=12), None, [Return(Call(Name('long', Load(), lineno=779, col_offset=15), [Name('s', Load(), lineno=779, col_offset=20)], [], None, None, lineno=779, col_offset=15), lineno=779, col_offset=8)], lineno=778, col_offset=4)], [], lineno=776, col_offset=4)], [], lineno=761, col_offset=0), Assign([Name('_227_re', Store(), lineno=782, col_offset=0)], Name('None', Load(), lineno=782, col_offset=10), lineno=782, col_offset=0), FunctionDef('parse227', arguments([Name('resp', Param(), lineno=784, col_offset=13)], None, None, []), [Expr(Str("Parse the '227' response for a PASV request.\n    Raises error_proto if it does not contain '(h1,h2,h3,h4,p1,p2)'\n    Return ('host.addr.as.numbers', port#) tuple.", lineno=787, col_offset=-1), lineno=787, col_offset=-1), If(Compare(Subscript(Name('resp', Load(), lineno=789, col_offset=7), Slice(None, Num(3, lineno=789, col_offset=13), None), Load(), lineno=789, col_offset=7), [NotEq()], [Str('227', lineno=789, col_offset=19)], lineno=789, col_offset=7), [Raise(Name('error_reply', Load(), lineno=790, col_offset=14), Name('resp', Load(), lineno=790, col_offset=27), None, lineno=790, col_offset=8)], [], lineno=789, col_offset=4), Global(['_227_re'], lineno=791, col_offset=4), If(Compare(Name('_227_re', Load(), lineno=792, col_offset=7), [Is()], [Name('None', Load(), lineno=792, col_offset=18)], lineno=792, col_offset=7), [Import([alias('re', None)], lineno=793, col_offset=8), Assign([Name('_227_re', Store(), lineno=794, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=794, col_offset=18), 'compile', Load(), lineno=794, col_offset=18), [Str('(\\d+),(\\d+),(\\d+),(\\d+),(\\d+),(\\d+)', lineno=794, col_offset=29)], [], None, None, lineno=794, col_offset=18), lineno=794, col_offset=8)], [], lineno=792, col_offset=4), Assign([Name('m', Store(), lineno=795, col_offset=4)], Call(Attribute(Name('_227_re', Load(), lineno=795, col_offset=8), 'search', Load(), lineno=795, col_offset=8), [Name('resp', Load(), lineno=795, col_offset=23)], [], None, None, lineno=795, col_offset=8), lineno=795, col_offset=4), If(UnaryOp(Not(), Name('m', Load(), lineno=796, col_offset=11), lineno=796, col_offset=7), [Raise(Name('error_proto', Load(), lineno=797, col_offset=14), Name('resp', Load(), lineno=797, col_offset=27), None, lineno=797, col_offset=8)], [], lineno=796, col_offset=4), Assign([Name('numbers', Store(), lineno=798, col_offset=4)], Call(Attribute(Name('m', Load(), lineno=798, col_offset=14), 'groups', Load(), lineno=798, col_offset=14), [], [], None, None, lineno=798, col_offset=14), lineno=798, col_offset=4), Assign([Name('host', Store(), lineno=799, col_offset=4)], Call(Attribute(Str('.', lineno=799, col_offset=11), 'join', Load(), lineno=799, col_offset=11), [Subscript(Name('numbers', Load(), lineno=799, col_offset=20), Slice(None, Num(4, lineno=799, col_offset=29), None), Load(), lineno=799, col_offset=20)], [], None, None, lineno=799, col_offset=11), lineno=799, col_offset=4), Assign([Name('port', Store(), lineno=800, col_offset=4)], BinOp(BinOp(Call(Name('int', Load(), lineno=800, col_offset=12), [Subscript(Name('numbers', Load(), lineno=800, col_offset=16), Index(Num(4, lineno=800, col_offset=24)), Load(), lineno=800, col_offset=16)], [], None, None, lineno=800, col_offset=12), LShift(), Num(8, lineno=800, col_offset=31), lineno=800, col_offset=12), Add(), Call(Name('int', Load(), lineno=800, col_offset=36), [Subscript(Name('numbers', Load(), lineno=800, col_offset=40), Index(Num(5, lineno=800, col_offset=48)), Load(), lineno=800, col_offset=40)], [], None, None, lineno=800, col_offset=36), lineno=800, col_offset=11), lineno=800, col_offset=4), Return(Tuple([Name('host', Load(), lineno=801, col_offset=11), Name('port', Load(), lineno=801, col_offset=17)], Load(), lineno=801, col_offset=11), lineno=801, col_offset=4)], [], lineno=784, col_offset=0), FunctionDef('parse229', arguments([Name('resp', Param(), lineno=804, col_offset=13), Name('peer', Param(), lineno=804, col_offset=19)], None, None, []), [Expr(Str("Parse the '229' response for a EPSV request.\n    Raises error_proto if it does not contain '(|||port|)'\n    Return ('host.addr.as.numbers', port#) tuple.", lineno=807, col_offset=-1), lineno=807, col_offset=-1), If(Compare(Subscript(Name('resp', Load(), lineno=809, col_offset=7), Slice(None, Num(3, lineno=809, col_offset=13), None), Load(), lineno=809, col_offset=7), [NotEq()], [Str('229', lineno=809, col_offset=19)], lineno=809, col_offset=7), [Raise(Name('error_reply', Load(), lineno=810, col_offset=14), Name('resp', Load(), lineno=810, col_offset=27), None, lineno=810, col_offset=8)], [], lineno=809, col_offset=4), Assign([Name('left', Store(), lineno=811, col_offset=4)], Call(Attribute(Name('resp', Load(), lineno=811, col_offset=11), 'find', Load(), lineno=811, col_offset=11), [Str('(', lineno=811, col_offset=21)], [], None, None, lineno=811, col_offset=11), lineno=811, col_offset=4), If(Compare(Name('left', Load(), lineno=812, col_offset=7), [Lt()], [Num(0, lineno=812, col_offset=14)], lineno=812, col_offset=7), [Raise(Name('error_proto', Load(), lineno=812, col_offset=23), Name('resp', Load(), lineno=812, col_offset=36), None, lineno=812, col_offset=17)], [], lineno=812, col_offset=4), Assign([Name('right', Store(), lineno=813, col_offset=4)], Call(Attribute(Name('resp', Load(), lineno=813, col_offset=12), 'find', Load(), lineno=813, col_offset=12), [Str(')', lineno=813, col_offset=22), BinOp(Name('left', Load(), lineno=813, col_offset=27), Add(), Num(1, lineno=813, col_offset=34), lineno=813, col_offset=27)], [], None, None, lineno=813, col_offset=12), lineno=813, col_offset=4), If(Compare(Name('right', Load(), lineno=814, col_offset=7), [Lt()], [Num(0, lineno=814, col_offset=15)], lineno=814, col_offset=7), [Raise(Name('error_proto', Load(), lineno=815, col_offset=14), Name('resp', Load(), lineno=815, col_offset=27), None, lineno=815, col_offset=8)], [], lineno=814, col_offset=4), If(Compare(Subscript(Name('resp', Load(), lineno=816, col_offset=7), Index(BinOp(Name('left', Load(), lineno=816, col_offset=12), Add(), Num(1, lineno=816, col_offset=19), lineno=816, col_offset=12)), Load(), lineno=816, col_offset=7), [NotEq()], [Subscript(Name('resp', Load(), lineno=816, col_offset=25), Index(BinOp(Name('right', Load(), lineno=816, col_offset=30), Sub(), Num(1, lineno=816, col_offset=38), lineno=816, col_offset=30)), Load(), lineno=816, col_offset=25)], lineno=816, col_offset=7), [Raise(Name('error_proto', Load(), lineno=817, col_offset=14), Name('resp', Load(), lineno=817, col_offset=27), None, lineno=817, col_offset=8)], [], lineno=816, col_offset=4), Assign([Name('parts', Store(), lineno=818, col_offset=4)], Call(Attribute(Subscript(Name('resp', Load(), lineno=818, col_offset=12), Slice(BinOp(Name('left', Load(), lineno=818, col_offset=17), Add(), Num(1, lineno=818, col_offset=24), lineno=818, col_offset=17), Name('right', Load(), lineno=818, col_offset=26), None), Load(), lineno=818, col_offset=12), 'split', Load(), lineno=818, col_offset=12), [Subscript(Name('resp', Load(), lineno=818, col_offset=39), Index(BinOp(Name('left', Load(), lineno=818, col_offset=44), Add(), Num(1, lineno=818, col_offset=49), lineno=818, col_offset=44)), Load(), lineno=818, col_offset=39)], [], None, None, lineno=818, col_offset=12), lineno=818, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=819, col_offset=7), [Name('parts', Load(), lineno=819, col_offset=11)], [], None, None, lineno=819, col_offset=7), [NotEq()], [Num(5, lineno=819, col_offset=21)], lineno=819, col_offset=7), [Raise(Name('error_proto', Load(), lineno=820, col_offset=14), Name('resp', Load(), lineno=820, col_offset=27), None, lineno=820, col_offset=8)], [], lineno=819, col_offset=4), Assign([Name('host', Store(), lineno=821, col_offset=4)], Subscript(Name('peer', Load(), lineno=821, col_offset=11), Index(Num(0, lineno=821, col_offset=16)), Load(), lineno=821, col_offset=11), lineno=821, col_offset=4), Assign([Name('port', Store(), lineno=822, col_offset=4)], Call(Name('int', Load(), lineno=822, col_offset=11), [Subscript(Name('parts', Load(), lineno=822, col_offset=15), Index(Num(3, lineno=822, col_offset=21)), Load(), lineno=822, col_offset=15)], [], None, None, lineno=822, col_offset=11), lineno=822, col_offset=4), Return(Tuple([Name('host', Load(), lineno=823, col_offset=11), Name('port', Load(), lineno=823, col_offset=17)], Load(), lineno=823, col_offset=11), lineno=823, col_offset=4)], [], lineno=804, col_offset=0), FunctionDef('parse257', arguments([Name('resp', Param(), lineno=826, col_offset=13)], None, None, []), [Expr(Str("Parse the '257' response for a MKD or PWD request.\n    This is a response to a MKD or PWD request: a directory name.\n    Returns the directoryname in the 257 reply.", lineno=829, col_offset=-1), lineno=829, col_offset=-1), If(Compare(Subscript(Name('resp', Load(), lineno=831, col_offset=7), Slice(None, Num(3, lineno=831, col_offset=13), None), Load(), lineno=831, col_offset=7), [NotEq()], [Str('257', lineno=831, col_offset=19)], lineno=831, col_offset=7), [Raise(Name('error_reply', Load(), lineno=832, col_offset=14), Name('resp', Load(), lineno=832, col_offset=27), None, lineno=832, col_offset=8)], [], lineno=831, col_offset=4), If(Compare(Subscript(Name('resp', Load(), lineno=833, col_offset=7), Slice(Num(3, lineno=833, col_offset=12), Num(5, lineno=833, col_offset=14), None), Load(), lineno=833, col_offset=7), [NotEq()], [Str(' "', lineno=833, col_offset=20)], lineno=833, col_offset=7), [Return(Str('', lineno=834, col_offset=15), lineno=834, col_offset=8)], [], lineno=833, col_offset=4), Assign([Name('dirname', Store(), lineno=835, col_offset=4)], Str('', lineno=835, col_offset=14), lineno=835, col_offset=4), Assign([Name('i', Store(), lineno=836, col_offset=4)], Num(5, lineno=836, col_offset=8), lineno=836, col_offset=4), Assign([Name('n', Store(), lineno=837, col_offset=4)], Call(Name('len', Load(), lineno=837, col_offset=8), [Name('resp', Load(), lineno=837, col_offset=12)], [], None, None, lineno=837, col_offset=8), lineno=837, col_offset=4), While(Compare(Name('i', Load(), lineno=838, col_offset=10), [Lt()], [Name('n', Load(), lineno=838, col_offset=14)], lineno=838, col_offset=10), [Assign([Name('c', Store(), lineno=839, col_offset=8)], Subscript(Name('resp', Load(), lineno=839, col_offset=12), Index(Name('i', Load(), lineno=839, col_offset=17)), Load(), lineno=839, col_offset=12), lineno=839, col_offset=8), Assign([Name('i', Store(), lineno=840, col_offset=8)], BinOp(Name('i', Load(), lineno=840, col_offset=12), Add(), Num(1, lineno=840, col_offset=14), lineno=840, col_offset=12), lineno=840, col_offset=8), If(Compare(Name('c', Load(), lineno=841, col_offset=11), [Eq()], [Str('"', lineno=841, col_offset=16)], lineno=841, col_offset=11), [If(BoolOp(Or(), [Compare(Name('i', Load(), lineno=842, col_offset=15), [GtE()], [Name('n', Load(), lineno=842, col_offset=20)], lineno=842, col_offset=15), Compare(Subscript(Name('resp', Load(), lineno=842, col_offset=25), Index(Name('i', Load(), lineno=842, col_offset=30)), Load(), lineno=842, col_offset=25), [NotEq()], [Str('"', lineno=842, col_offset=36)], lineno=842, col_offset=25)], lineno=842, col_offset=15), [Break( lineno=843, col_offset=16)], [], lineno=842, col_offset=12), Assign([Name('i', Store(), lineno=844, col_offset=12)], BinOp(Name('i', Load(), lineno=844, col_offset=16), Add(), Num(1, lineno=844, col_offset=18), lineno=844, col_offset=16), lineno=844, col_offset=12)], [], lineno=841, col_offset=8), Assign([Name('dirname', Store(), lineno=845, col_offset=8)], BinOp(Name('dirname', Load(), lineno=845, col_offset=18), Add(), Name('c', Load(), lineno=845, col_offset=28), lineno=845, col_offset=18), lineno=845, col_offset=8)], [], lineno=838, col_offset=4), Return(Name('dirname', Load(), lineno=846, col_offset=11), lineno=846, col_offset=4)], [], lineno=826, col_offset=0), FunctionDef('print_line', arguments([Name('line', Param(), lineno=849, col_offset=15)], None, None, []), [Expr(Str('Default retrlines callback to print a line.', lineno=850, col_offset=4), lineno=850, col_offset=4), Print(None, [Name('line', Load(), lineno=851, col_offset=10)], True, lineno=851, col_offset=4)], [], lineno=849, col_offset=0), FunctionDef('ftpcp', arguments([Name('source', Param(), lineno=854, col_offset=10), Name('sourcename', Param(), lineno=854, col_offset=18), Name('target', Param(), lineno=854, col_offset=30), Name('targetname', Param(), lineno=854, col_offset=38), Name('type', Param(), lineno=854, col_offset=55)], None, None, [Str('', lineno=854, col_offset=51), Str('I', lineno=854, col_offset=62)]), [Expr(Str('Copy file from one FTP-instance to another.', lineno=855, col_offset=4), lineno=855, col_offset=4), If(UnaryOp(Not(), Name('targetname', Load(), lineno=856, col_offset=11), lineno=856, col_offset=7), [Assign([Name('targetname', Store(), lineno=856, col_offset=23)], Name('sourcename', Load(), lineno=856, col_offset=36), lineno=856, col_offset=23)], [], lineno=856, col_offset=4), Assign([Name('type', Store(), lineno=857, col_offset=4)], BinOp(Str('TYPE ', lineno=857, col_offset=11), Add(), Name('type', Load(), lineno=857, col_offset=21), lineno=857, col_offset=11), lineno=857, col_offset=4), Expr(Call(Attribute(Name('source', Load(), lineno=858, col_offset=4), 'voidcmd', Load(), lineno=858, col_offset=4), [Name('type', Load(), lineno=858, col_offset=19)], [], None, None, lineno=858, col_offset=4), lineno=858, col_offset=4), Expr(Call(Attribute(Name('target', Load(), lineno=859, col_offset=4), 'voidcmd', Load(), lineno=859, col_offset=4), [Name('type', Load(), lineno=859, col_offset=19)], [], None, None, lineno=859, col_offset=4), lineno=859, col_offset=4), Assign([Tuple([Name('sourcehost', Store(), lineno=860, col_offset=4), Name('sourceport', Store(), lineno=860, col_offset=16)], Store(), lineno=860, col_offset=4)], Call(Name('parse227', Load(), lineno=860, col_offset=29), [Call(Attribute(Name('source', Load(), lineno=860, col_offset=38), 'sendcmd', Load(), lineno=860, col_offset=38), [Str('PASV', lineno=860, col_offset=53)], [], None, None, lineno=860, col_offset=38)], [], None, None, lineno=860, col_offset=29), lineno=860, col_offset=4), Expr(Call(Attribute(Name('target', Load(), lineno=861, col_offset=4), 'sendport', Load(), lineno=861, col_offset=4), [Name('sourcehost', Load(), lineno=861, col_offset=20), Name('sourceport', Load(), lineno=861, col_offset=32)], [], None, None, lineno=861, col_offset=4), lineno=861, col_offset=4), Assign([Name('treply', Store(), lineno=865, col_offset=4)], Call(Attribute(Name('target', Load(), lineno=865, col_offset=13), 'sendcmd', Load(), lineno=865, col_offset=13), [BinOp(Str('STOR ', lineno=865, col_offset=28), Add(), Name('targetname', Load(), lineno=865, col_offset=38), lineno=865, col_offset=28)], [], None, None, lineno=865, col_offset=13), lineno=865, col_offset=4), If(Compare(Subscript(Name('treply', Load(), lineno=866, col_offset=7), Slice(None, Num(3, lineno=866, col_offset=15), None), Load(), lineno=866, col_offset=7), [NotIn()], [Tuple([Str('125', lineno=866, col_offset=26), Str('150', lineno=866, col_offset=33)], Load(), lineno=866, col_offset=26)], lineno=866, col_offset=7), [Raise(Name('error_proto', Load(), lineno=866, col_offset=47), None, None, lineno=866, col_offset=41)], [], lineno=866, col_offset=4), Assign([Name('sreply', Store(), lineno=867, col_offset=4)], Call(Attribute(Name('source', Load(), lineno=867, col_offset=13), 'sendcmd', Load(), lineno=867, col_offset=13), [BinOp(Str('RETR ', lineno=867, col_offset=28), Add(), Name('sourcename', Load(), lineno=867, col_offset=38), lineno=867, col_offset=28)], [], None, None, lineno=867, col_offset=13), lineno=867, col_offset=4), If(Compare(Subscript(Name('sreply', Load(), lineno=868, col_offset=7), Slice(None, Num(3, lineno=868, col_offset=15), None), Load(), lineno=868, col_offset=7), [NotIn()], [Tuple([Str('125', lineno=868, col_offset=26), Str('150', lineno=868, col_offset=33)], Load(), lineno=868, col_offset=26)], lineno=868, col_offset=7), [Raise(Name('error_proto', Load(), lineno=868, col_offset=47), None, None, lineno=868, col_offset=41)], [], lineno=868, col_offset=4), Expr(Call(Attribute(Name('source', Load(), lineno=869, col_offset=4), 'voidresp', Load(), lineno=869, col_offset=4), [], [], None, None, lineno=869, col_offset=4), lineno=869, col_offset=4), Expr(Call(Attribute(Name('target', Load(), lineno=870, col_offset=4), 'voidresp', Load(), lineno=870, col_offset=4), [], [], None, None, lineno=870, col_offset=4), lineno=870, col_offset=4)], [], lineno=854, col_offset=0), ClassDef('Netrc', [], [Expr(Str("Class to parse & provide access to 'netrc' format files.\n\n    See the netrc(4) man page for information on the file format.\n\n    WARNING: This class is obsolete -- use module netrc instead.\n\n    ", lineno=880, col_offset=-1), lineno=880, col_offset=-1), Assign([Name('__defuser', Store(), lineno=881, col_offset=4)], Name('None', Load(), lineno=881, col_offset=16), lineno=881, col_offset=4), Assign([Name('__defpasswd', Store(), lineno=882, col_offset=4)], Name('None', Load(), lineno=882, col_offset=18), lineno=882, col_offset=4), Assign([Name('__defacct', Store(), lineno=883, col_offset=4)], Name('None', Load(), lineno=883, col_offset=16), lineno=883, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=885, col_offset=17), Name('filename', Param(), lineno=885, col_offset=23)], None, None, [Name('None', Load(), lineno=885, col_offset=32)]), [If(Compare(Name('filename', Load(), lineno=886, col_offset=11), [Is()], [Name('None', Load(), lineno=886, col_offset=23)], lineno=886, col_offset=11), [If(Compare(Str('HOME', lineno=887, col_offset=15), [In()], [Attribute(Name('os', Load(), lineno=887, col_offset=25), 'environ', Load(), lineno=887, col_offset=25)], lineno=887, col_offset=15), [Assign([Name('filename', Store(), lineno=888, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=888, col_offset=27), 'path', Load(), lineno=888, col_offset=27), 'join', Load(), lineno=888, col_offset=27), [Subscript(Attribute(Name('os', Load(), lineno=888, col_offset=40), 'environ', Load(), lineno=888, col_offset=40), Index(Str('HOME', lineno=888, col_offset=51)), Load(), lineno=888, col_offset=40), Str('.netrc', lineno=889, col_offset=40)], [], None, None, lineno=888, col_offset=27), lineno=888, col_offset=16)], [Raise(Name('IOError', Load(), lineno=891, col_offset=22), Str('specify file to load or set $HOME', lineno=892, col_offset=22), None, lineno=891, col_offset=16)], lineno=887, col_offset=12)], [], lineno=886, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=893, col_offset=8), '__hosts', Store(), lineno=893, col_offset=8)], Dict([], [], lineno=893, col_offset=23), lineno=893, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=894, col_offset=8), '__macros', Store(), lineno=894, col_offset=8)], Dict([], [], lineno=894, col_offset=24), lineno=894, col_offset=8), Assign([Name('fp', Store(), lineno=895, col_offset=8)], Call(Name('open', Load(), lineno=895, col_offset=13), [Name('filename', Load(), lineno=895, col_offset=18), Str('r', lineno=895, col_offset=28)], [], None, None, lineno=895, col_offset=13), lineno=895, col_offset=8), Assign([Name('in_macro', Store(), lineno=896, col_offset=8)], Num(0, lineno=896, col_offset=19), lineno=896, col_offset=8), While(Num(1, lineno=897, col_offset=14), [Assign([Name('line', Store(), lineno=898, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=898, col_offset=19), 'readline', Load(), lineno=898, col_offset=19), [], [], None, None, lineno=898, col_offset=19), lineno=898, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=899, col_offset=19), lineno=899, col_offset=15), [Break( lineno=899, col_offset=25)], [], lineno=899, col_offset=12), If(BoolOp(And(), [Name('in_macro', Load(), lineno=900, col_offset=15), Call(Attribute(Name('line', Load(), lineno=900, col_offset=28), 'strip', Load(), lineno=900, col_offset=28), [], [], None, None, lineno=900, col_offset=28)], lineno=900, col_offset=15), [Expr(Call(Attribute(Name('macro_lines', Load(), lineno=901, col_offset=16), 'append', Load(), lineno=901, col_offset=16), [Name('line', Load(), lineno=901, col_offset=35)], [], None, None, lineno=901, col_offset=16), lineno=901, col_offset=16), Continue( lineno=902, col_offset=16)], [If(Name('in_macro', Load(), lineno=903, col_offset=17), [Assign([Subscript(Attribute(Name('self', Load(), lineno=904, col_offset=16), '__macros', Load(), lineno=904, col_offset=16), Index(Name('macro_name', Load(), lineno=904, col_offset=30)), Store(), lineno=904, col_offset=16)], Call(Name('tuple', Load(), lineno=904, col_offset=44), [Name('macro_lines', Load(), lineno=904, col_offset=50)], [], None, None, lineno=904, col_offset=44), lineno=904, col_offset=16), Assign([Name('in_macro', Store(), lineno=905, col_offset=16)], Num(0, lineno=905, col_offset=27), lineno=905, col_offset=16)], [], lineno=903, col_offset=17)], lineno=900, col_offset=12), Assign([Name('words', Store(), lineno=906, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=906, col_offset=20), 'split', Load(), lineno=906, col_offset=20), [], [], None, None, lineno=906, col_offset=20), lineno=906, col_offset=12), Assign([Name('host', Store(), lineno=907, col_offset=12), Name('user', Store(), lineno=907, col_offset=19), Name('passwd', Store(), lineno=907, col_offset=26), Name('acct', Store(), lineno=907, col_offset=35)], Name('None', Load(), lineno=907, col_offset=42), lineno=907, col_offset=12), Assign([Name('default', Store(), lineno=908, col_offset=12)], Num(0, lineno=908, col_offset=22), lineno=908, col_offset=12), Assign([Name('i', Store(), lineno=909, col_offset=12)], Num(0, lineno=909, col_offset=16), lineno=909, col_offset=12), While(Compare(Name('i', Load(), lineno=910, col_offset=18), [Lt()], [Call(Name('len', Load(), lineno=910, col_offset=22), [Name('words', Load(), lineno=910, col_offset=26)], [], None, None, lineno=910, col_offset=22)], lineno=910, col_offset=18), [Assign([Name('w1', Store(), lineno=911, col_offset=16)], Subscript(Name('words', Load(), lineno=911, col_offset=21), Index(Name('i', Load(), lineno=911, col_offset=27)), Load(), lineno=911, col_offset=21), lineno=911, col_offset=16), If(Compare(BinOp(Name('i', Load(), lineno=912, col_offset=19), Add(), Num(1, lineno=912, col_offset=21), lineno=912, col_offset=19), [Lt()], [Call(Name('len', Load(), lineno=912, col_offset=25), [Name('words', Load(), lineno=912, col_offset=29)], [], None, None, lineno=912, col_offset=25)], lineno=912, col_offset=19), [Assign([Name('w2', Store(), lineno=913, col_offset=20)], Subscript(Name('words', Load(), lineno=913, col_offset=25), Index(BinOp(Name('i', Load(), lineno=913, col_offset=31), Add(), Num(1, lineno=913, col_offset=35), lineno=913, col_offset=31)), Load(), lineno=913, col_offset=25), lineno=913, col_offset=20)], [Assign([Name('w2', Store(), lineno=915, col_offset=20)], Name('None', Load(), lineno=915, col_offset=25), lineno=915, col_offset=20)], lineno=912, col_offset=16), If(Compare(Name('w1', Load(), lineno=916, col_offset=19), [Eq()], [Str('default', lineno=916, col_offset=25)], lineno=916, col_offset=19), [Assign([Name('default', Store(), lineno=917, col_offset=20)], Num(1, lineno=917, col_offset=30), lineno=917, col_offset=20)], [If(BoolOp(And(), [Compare(Name('w1', Load(), lineno=918, col_offset=21), [Eq()], [Str('machine', lineno=918, col_offset=27)], lineno=918, col_offset=21), Name('w2', Load(), lineno=918, col_offset=41)], lineno=918, col_offset=21), [Assign([Name('host', Store(), lineno=919, col_offset=20)], Call(Attribute(Name('w2', Load(), lineno=919, col_offset=27), 'lower', Load(), lineno=919, col_offset=27), [], [], None, None, lineno=919, col_offset=27), lineno=919, col_offset=20), Assign([Name('i', Store(), lineno=920, col_offset=20)], BinOp(Name('i', Load(), lineno=920, col_offset=24), Add(), Num(1, lineno=920, col_offset=28), lineno=920, col_offset=24), lineno=920, col_offset=20)], [If(BoolOp(And(), [Compare(Name('w1', Load(), lineno=921, col_offset=21), [Eq()], [Str('login', lineno=921, col_offset=27)], lineno=921, col_offset=21), Name('w2', Load(), lineno=921, col_offset=39)], lineno=921, col_offset=21), [Assign([Name('user', Store(), lineno=922, col_offset=20)], Name('w2', Load(), lineno=922, col_offset=27), lineno=922, col_offset=20), Assign([Name('i', Store(), lineno=923, col_offset=20)], BinOp(Name('i', Load(), lineno=923, col_offset=24), Add(), Num(1, lineno=923, col_offset=28), lineno=923, col_offset=24), lineno=923, col_offset=20)], [If(BoolOp(And(), [Compare(Name('w1', Load(), lineno=924, col_offset=21), [Eq()], [Str('password', lineno=924, col_offset=27)], lineno=924, col_offset=21), Name('w2', Load(), lineno=924, col_offset=42)], lineno=924, col_offset=21), [Assign([Name('passwd', Store(), lineno=925, col_offset=20)], Name('w2', Load(), lineno=925, col_offset=29), lineno=925, col_offset=20), Assign([Name('i', Store(), lineno=926, col_offset=20)], BinOp(Name('i', Load(), lineno=926, col_offset=24), Add(), Num(1, lineno=926, col_offset=28), lineno=926, col_offset=24), lineno=926, col_offset=20)], [If(BoolOp(And(), [Compare(Name('w1', Load(), lineno=927, col_offset=21), [Eq()], [Str('account', lineno=927, col_offset=27)], lineno=927, col_offset=21), Name('w2', Load(), lineno=927, col_offset=41)], lineno=927, col_offset=21), [Assign([Name('acct', Store(), lineno=928, col_offset=20)], Name('w2', Load(), lineno=928, col_offset=27), lineno=928, col_offset=20), Assign([Name('i', Store(), lineno=929, col_offset=20)], BinOp(Name('i', Load(), lineno=929, col_offset=24), Add(), Num(1, lineno=929, col_offset=28), lineno=929, col_offset=24), lineno=929, col_offset=20)], [If(BoolOp(And(), [Compare(Name('w1', Load(), lineno=930, col_offset=21), [Eq()], [Str('macdef', lineno=930, col_offset=27)], lineno=930, col_offset=21), Name('w2', Load(), lineno=930, col_offset=40)], lineno=930, col_offset=21), [Assign([Name('macro_name', Store(), lineno=931, col_offset=20)], Name('w2', Load(), lineno=931, col_offset=33), lineno=931, col_offset=20), Assign([Name('macro_lines', Store(), lineno=932, col_offset=20)], List([], Load(), lineno=932, col_offset=34), lineno=932, col_offset=20), Assign([Name('in_macro', Store(), lineno=933, col_offset=20)], Num(1, lineno=933, col_offset=31), lineno=933, col_offset=20), Break( lineno=934, col_offset=20)], [], lineno=930, col_offset=21)], lineno=927, col_offset=21)], lineno=924, col_offset=21)], lineno=921, col_offset=21)], lineno=918, col_offset=21)], lineno=916, col_offset=16), Assign([Name('i', Store(), lineno=935, col_offset=16)], BinOp(Name('i', Load(), lineno=935, col_offset=20), Add(), Num(1, lineno=935, col_offset=24), lineno=935, col_offset=20), lineno=935, col_offset=16)], [], lineno=910, col_offset=12), If(Name('default', Load(), lineno=936, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=937, col_offset=16), '__defuser', Store(), lineno=937, col_offset=16)], BoolOp(Or(), [Name('user', Load(), lineno=937, col_offset=33), Attribute(Name('self', Load(), lineno=937, col_offset=41), '__defuser', Load(), lineno=937, col_offset=41)], lineno=937, col_offset=33), lineno=937, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=938, col_offset=16), '__defpasswd', Store(), lineno=938, col_offset=16)], BoolOp(Or(), [Name('passwd', Load(), lineno=938, col_offset=35), Attribute(Name('self', Load(), lineno=938, col_offset=45), '__defpasswd', Load(), lineno=938, col_offset=45)], lineno=938, col_offset=35), lineno=938, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=939, col_offset=16), '__defacct', Store(), lineno=939, col_offset=16)], BoolOp(Or(), [Name('acct', Load(), lineno=939, col_offset=33), Attribute(Name('self', Load(), lineno=939, col_offset=41), '__defacct', Load(), lineno=939, col_offset=41)], lineno=939, col_offset=33), lineno=939, col_offset=16)], [], lineno=936, col_offset=12), If(Name('host', Load(), lineno=940, col_offset=15), [If(Compare(Name('host', Load(), lineno=941, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=941, col_offset=27), '__hosts', Load(), lineno=941, col_offset=27)], lineno=941, col_offset=19), [Assign([Tuple([Name('ouser', Store(), lineno=942, col_offset=20), Name('opasswd', Store(), lineno=942, col_offset=27), Name('oacct', Store(), lineno=942, col_offset=36)], Store(), lineno=942, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=943, col_offset=27), '__hosts', Load(), lineno=943, col_offset=27), Index(Name('host', Load(), lineno=943, col_offset=40)), Load(), lineno=943, col_offset=27), lineno=942, col_offset=20), Assign([Name('user', Store(), lineno=944, col_offset=20)], BoolOp(Or(), [Name('user', Load(), lineno=944, col_offset=27), Name('ouser', Load(), lineno=944, col_offset=35)], lineno=944, col_offset=27), lineno=944, col_offset=20), Assign([Name('passwd', Store(), lineno=945, col_offset=20)], BoolOp(Or(), [Name('passwd', Load(), lineno=945, col_offset=29), Name('opasswd', Load(), lineno=945, col_offset=39)], lineno=945, col_offset=29), lineno=945, col_offset=20), Assign([Name('acct', Store(), lineno=946, col_offset=20)], BoolOp(Or(), [Name('acct', Load(), lineno=946, col_offset=27), Name('oacct', Load(), lineno=946, col_offset=35)], lineno=946, col_offset=27), lineno=946, col_offset=20)], [], lineno=941, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=947, col_offset=16), '__hosts', Load(), lineno=947, col_offset=16), Index(Name('host', Load(), lineno=947, col_offset=29)), Store(), lineno=947, col_offset=16)], Tuple([Name('user', Load(), lineno=947, col_offset=37), Name('passwd', Load(), lineno=947, col_offset=43), Name('acct', Load(), lineno=947, col_offset=51)], Load(), lineno=947, col_offset=37), lineno=947, col_offset=16)], [], lineno=940, col_offset=12)], [], lineno=897, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=948, col_offset=8), 'close', Load(), lineno=948, col_offset=8), [], [], None, None, lineno=948, col_offset=8), lineno=948, col_offset=8)], [], lineno=885, col_offset=4), FunctionDef('get_hosts', arguments([Name('self', Param(), lineno=950, col_offset=18)], None, None, []), [Expr(Str('Return a list of hosts mentioned in the .netrc file.', lineno=951, col_offset=8), lineno=951, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=952, col_offset=15), '__hosts', Load(), lineno=952, col_offset=15), 'keys', Load(), lineno=952, col_offset=15), [], [], None, None, lineno=952, col_offset=15), lineno=952, col_offset=8)], [], lineno=950, col_offset=4), FunctionDef('get_account', arguments([Name('self', Param(), lineno=954, col_offset=20), Name('host', Param(), lineno=954, col_offset=26)], None, None, []), [Expr(Str('Returns login information for the named host.\n\n        The return value is a triple containing userid,\n        password, and the accounting field.\n\n        ', lineno=960, col_offset=-1), lineno=960, col_offset=-1), Assign([Name('host', Store(), lineno=961, col_offset=8)], Call(Attribute(Name('host', Load(), lineno=961, col_offset=15), 'lower', Load(), lineno=961, col_offset=15), [], [], None, None, lineno=961, col_offset=15), lineno=961, col_offset=8), Assign([Name('user', Store(), lineno=962, col_offset=8), Name('passwd', Store(), lineno=962, col_offset=15), Name('acct', Store(), lineno=962, col_offset=24)], Name('None', Load(), lineno=962, col_offset=31), lineno=962, col_offset=8), If(Compare(Name('host', Load(), lineno=963, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=963, col_offset=19), '__hosts', Load(), lineno=963, col_offset=19)], lineno=963, col_offset=11), [Assign([Tuple([Name('user', Store(), lineno=964, col_offset=12), Name('passwd', Store(), lineno=964, col_offset=18), Name('acct', Store(), lineno=964, col_offset=26)], Store(), lineno=964, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=964, col_offset=33), '__hosts', Load(), lineno=964, col_offset=33), Index(Name('host', Load(), lineno=964, col_offset=46)), Load(), lineno=964, col_offset=33), lineno=964, col_offset=12)], [], lineno=963, col_offset=8), Assign([Name('user', Store(), lineno=965, col_offset=8)], BoolOp(Or(), [Name('user', Load(), lineno=965, col_offset=15), Attribute(Name('self', Load(), lineno=965, col_offset=23), '__defuser', Load(), lineno=965, col_offset=23)], lineno=965, col_offset=15), lineno=965, col_offset=8), Assign([Name('passwd', Store(), lineno=966, col_offset=8)], BoolOp(Or(), [Name('passwd', Load(), lineno=966, col_offset=17), Attribute(Name('self', Load(), lineno=966, col_offset=27), '__defpasswd', Load(), lineno=966, col_offset=27)], lineno=966, col_offset=17), lineno=966, col_offset=8), Assign([Name('acct', Store(), lineno=967, col_offset=8)], BoolOp(Or(), [Name('acct', Load(), lineno=967, col_offset=15), Attribute(Name('self', Load(), lineno=967, col_offset=23), '__defacct', Load(), lineno=967, col_offset=23)], lineno=967, col_offset=15), lineno=967, col_offset=8), Return(Tuple([Name('user', Load(), lineno=968, col_offset=15), Name('passwd', Load(), lineno=968, col_offset=21), Name('acct', Load(), lineno=968, col_offset=29)], Load(), lineno=968, col_offset=15), lineno=968, col_offset=8)], [], lineno=954, col_offset=4), FunctionDef('get_macros', arguments([Name('self', Param(), lineno=970, col_offset=19)], None, None, []), [Expr(Str('Return a list of all defined macro names.', lineno=971, col_offset=8), lineno=971, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=972, col_offset=15), '__macros', Load(), lineno=972, col_offset=15), 'keys', Load(), lineno=972, col_offset=15), [], [], None, None, lineno=972, col_offset=15), lineno=972, col_offset=8)], [], lineno=970, col_offset=4), FunctionDef('get_macro', arguments([Name('self', Param(), lineno=974, col_offset=18), Name('macro', Param(), lineno=974, col_offset=24)], None, None, []), [Expr(Str('Return a sequence of lines which define a named macro.', lineno=975, col_offset=8), lineno=975, col_offset=8), Return(Subscript(Attribute(Name('self', Load(), lineno=976, col_offset=15), '__macros', Load(), lineno=976, col_offset=15), Index(Name('macro', Load(), lineno=976, col_offset=29)), Load(), lineno=976, col_offset=15), lineno=976, col_offset=8)], [], lineno=974, col_offset=4)], [], lineno=873, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Expr(Str('Test program.\n    Usage: ftp [-d] [-r[file]] host [-l[dir]] [-d[dir]] [-p] [file] ...\n\n    -d dir\n    -l list\n    -p password\n    ', lineno=987, col_offset=-1), lineno=987, col_offset=-1), If(Compare(Call(Name('len', Load(), lineno=989, col_offset=7), [Attribute(Name('sys', Load(), lineno=989, col_offset=11), 'argv', Load(), lineno=989, col_offset=11)], [], None, None, lineno=989, col_offset=7), [Lt()], [Num(2, lineno=989, col_offset=23)], lineno=989, col_offset=7), [Print(None, [Attribute(Name('test', Load(), lineno=990, col_offset=14), '__doc__', Load(), lineno=990, col_offset=14)], True, lineno=990, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=991, col_offset=8), 'exit', Load(), lineno=991, col_offset=8), [Num(0, lineno=991, col_offset=17)], [], None, None, lineno=991, col_offset=8), lineno=991, col_offset=8)], [], lineno=989, col_offset=4), Assign([Name('debugging', Store(), lineno=993, col_offset=4)], Num(0, lineno=993, col_offset=16), lineno=993, col_offset=4), Assign([Name('rcfile', Store(), lineno=994, col_offset=4)], Name('None', Load(), lineno=994, col_offset=13), lineno=994, col_offset=4), While(Compare(Subscript(Attribute(Name('sys', Load(), lineno=995, col_offset=10), 'argv', Load(), lineno=995, col_offset=10), Index(Num(1, lineno=995, col_offset=19)), Load(), lineno=995, col_offset=10), [Eq()], [Str('-d', lineno=995, col_offset=25)], lineno=995, col_offset=10), [Assign([Name('debugging', Store(), lineno=996, col_offset=8)], BinOp(Name('debugging', Load(), lineno=996, col_offset=20), Add(), Num(1, lineno=996, col_offset=30), lineno=996, col_offset=20), lineno=996, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=997, col_offset=12), 'argv', Load(), lineno=997, col_offset=12), Index(Num(1, lineno=997, col_offset=21)), Del(), lineno=997, col_offset=12)], lineno=997, col_offset=8)], [], lineno=995, col_offset=4), If(Compare(Subscript(Subscript(Attribute(Name('sys', Load(), lineno=998, col_offset=7), 'argv', Load(), lineno=998, col_offset=7), Index(Num(1, lineno=998, col_offset=16)), Load(), lineno=998, col_offset=7), Slice(None, Num(2, lineno=998, col_offset=20), None), Load(), lineno=998, col_offset=7), [Eq()], [Str('-r', lineno=998, col_offset=26)], lineno=998, col_offset=7), [Assign([Name('rcfile', Store(), lineno=1000, col_offset=8)], Subscript(Subscript(Attribute(Name('sys', Load(), lineno=1000, col_offset=17), 'argv', Load(), lineno=1000, col_offset=17), Index(Num(1, lineno=1000, col_offset=26)), Load(), lineno=1000, col_offset=17), Slice(Num(2, lineno=1000, col_offset=29), None, None), Load(), lineno=1000, col_offset=17), lineno=1000, col_offset=8), Delete([Subscript(Attribute(Name('sys', Load(), lineno=1001, col_offset=12), 'argv', Load(), lineno=1001, col_offset=12), Index(Num(1, lineno=1001, col_offset=21)), Del(), lineno=1001, col_offset=12)], lineno=1001, col_offset=8)], [], lineno=998, col_offset=4), Assign([Name('host', Store(), lineno=1002, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=1002, col_offset=11), 'argv', Load(), lineno=1002, col_offset=11), Index(Num(1, lineno=1002, col_offset=20)), Load(), lineno=1002, col_offset=11), lineno=1002, col_offset=4), Assign([Name('ftp', Store(), lineno=1003, col_offset=4)], Call(Name('FTP', Load(), lineno=1003, col_offset=10), [Name('host', Load(), lineno=1003, col_offset=14)], [], None, None, lineno=1003, col_offset=10), lineno=1003, col_offset=4), Expr(Call(Attribute(Name('ftp', Load(), lineno=1004, col_offset=4), 'set_debuglevel', Load(), lineno=1004, col_offset=4), [Name('debugging', Load(), lineno=1004, col_offset=23)], [], None, None, lineno=1004, col_offset=4), lineno=1004, col_offset=4), Assign([Name('userid', Store(), lineno=1005, col_offset=4), Name('passwd', Store(), lineno=1005, col_offset=13), Name('acct', Store(), lineno=1005, col_offset=22)], Str('', lineno=1005, col_offset=29), lineno=1005, col_offset=4), TryExcept([Assign([Name('netrc', Store(), lineno=1007, col_offset=8)], Call(Name('Netrc', Load(), lineno=1007, col_offset=16), [Name('rcfile', Load(), lineno=1007, col_offset=22)], [], None, None, lineno=1007, col_offset=16), lineno=1007, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=1008, col_offset=11), None, [If(Compare(Name('rcfile', Load(), lineno=1009, col_offset=11), [IsNot()], [Name('None', Load(), lineno=1009, col_offset=25)], lineno=1009, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1010, col_offset=12), 'stderr', Load(), lineno=1010, col_offset=12), 'write', Load(), lineno=1010, col_offset=12), [Str('Could not open account file -- using anonymous login.', lineno=1010, col_offset=29)], [], None, None, lineno=1010, col_offset=12), lineno=1010, col_offset=12)], [], lineno=1009, col_offset=8)], lineno=1008, col_offset=4)], [TryExcept([Assign([Tuple([Name('userid', Store(), lineno=1014, col_offset=12), Name('passwd', Store(), lineno=1014, col_offset=20), Name('acct', Store(), lineno=1014, col_offset=28)], Store(), lineno=1014, col_offset=12)], Call(Attribute(Name('netrc', Load(), lineno=1014, col_offset=35), 'get_account', Load(), lineno=1014, col_offset=35), [Name('host', Load(), lineno=1014, col_offset=53)], [], None, None, lineno=1014, col_offset=35), lineno=1014, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=1015, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1017, col_offset=12), 'stderr', Load(), lineno=1017, col_offset=12), 'write', Load(), lineno=1017, col_offset=12), [Str('No account -- using anonymous login.', lineno=1018, col_offset=20)], [], None, None, lineno=1017, col_offset=12), lineno=1017, col_offset=12)], lineno=1015, col_offset=8)], [], lineno=1013, col_offset=8)], lineno=1006, col_offset=4), Expr(Call(Attribute(Name('ftp', Load(), lineno=1019, col_offset=4), 'login', Load(), lineno=1019, col_offset=4), [Name('userid', Load(), lineno=1019, col_offset=14), Name('passwd', Load(), lineno=1019, col_offset=22), Name('acct', Load(), lineno=1019, col_offset=30)], [], None, None, lineno=1019, col_offset=4), lineno=1019, col_offset=4), For(Name('file', Store(), lineno=1020, col_offset=8), Subscript(Attribute(Name('sys', Load(), lineno=1020, col_offset=16), 'argv', Load(), lineno=1020, col_offset=16), Slice(Num(2, lineno=1020, col_offset=25), None, None), Load(), lineno=1020, col_offset=16), [If(Compare(Subscript(Name('file', Load(), lineno=1021, col_offset=11), Slice(None, Num(2, lineno=1021, col_offset=17), None), Load(), lineno=1021, col_offset=11), [Eq()], [Str('-l', lineno=1021, col_offset=23)], lineno=1021, col_offset=11), [Expr(Call(Attribute(Name('ftp', Load(), lineno=1022, col_offset=12), 'dir', Load(), lineno=1022, col_offset=12), [Subscript(Name('file', Load(), lineno=1022, col_offset=20), Slice(Num(2, lineno=1022, col_offset=25), None, None), Load(), lineno=1022, col_offset=20)], [], None, None, lineno=1022, col_offset=12), lineno=1022, col_offset=12)], [If(Compare(Subscript(Name('file', Load(), lineno=1023, col_offset=13), Slice(None, Num(2, lineno=1023, col_offset=19), None), Load(), lineno=1023, col_offset=13), [Eq()], [Str('-d', lineno=1023, col_offset=25)], lineno=1023, col_offset=13), [Assign([Name('cmd', Store(), lineno=1024, col_offset=12)], Str('CWD', lineno=1024, col_offset=18), lineno=1024, col_offset=12), If(Subscript(Name('file', Load(), lineno=1025, col_offset=15), Slice(Num(2, lineno=1025, col_offset=20), None, None), Load(), lineno=1025, col_offset=15), [Assign([Name('cmd', Store(), lineno=1025, col_offset=25)], BinOp(BinOp(Name('cmd', Load(), lineno=1025, col_offset=31), Add(), Str(' ', lineno=1025, col_offset=37), lineno=1025, col_offset=31), Add(), Subscript(Name('file', Load(), lineno=1025, col_offset=43), Slice(Num(2, lineno=1025, col_offset=48), None, None), Load(), lineno=1025, col_offset=43), lineno=1025, col_offset=41), lineno=1025, col_offset=25)], [], lineno=1025, col_offset=12), Assign([Name('resp', Store(), lineno=1026, col_offset=12)], Call(Attribute(Name('ftp', Load(), lineno=1026, col_offset=19), 'sendcmd', Load(), lineno=1026, col_offset=19), [Name('cmd', Load(), lineno=1026, col_offset=31)], [], None, None, lineno=1026, col_offset=19), lineno=1026, col_offset=12)], [If(Compare(Name('file', Load(), lineno=1027, col_offset=13), [Eq()], [Str('-p', lineno=1027, col_offset=21)], lineno=1027, col_offset=13), [Expr(Call(Attribute(Name('ftp', Load(), lineno=1028, col_offset=12), 'set_pasv', Load(), lineno=1028, col_offset=12), [UnaryOp(Not(), Attribute(Name('ftp', Load(), lineno=1028, col_offset=29), 'passiveserver', Load(), lineno=1028, col_offset=29), lineno=1028, col_offset=25)], [], None, None, lineno=1028, col_offset=12), lineno=1028, col_offset=12)], [Expr(Call(Attribute(Name('ftp', Load(), lineno=1030, col_offset=12), 'retrbinary', Load(), lineno=1030, col_offset=12), [BinOp(Str('RETR ', lineno=1030, col_offset=27), Add(), Name('file', Load(), lineno=1030, col_offset=37), lineno=1030, col_offset=27), Attribute(Attribute(Name('sys', Load(), lineno=1031, col_offset=27), 'stdout', Load(), lineno=1031, col_offset=27), 'write', Load(), lineno=1031, col_offset=27), Num(1024, lineno=1031, col_offset=45)], [], None, None, lineno=1030, col_offset=12), lineno=1030, col_offset=12)], lineno=1027, col_offset=13)], lineno=1023, col_offset=13)], lineno=1021, col_offset=8)], [], lineno=1020, col_offset=4), Expr(Call(Attribute(Name('ftp', Load(), lineno=1032, col_offset=4), 'quit', Load(), lineno=1032, col_offset=4), [], [], None, None, lineno=1032, col_offset=4), lineno=1032, col_offset=4)], [], lineno=980, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1035, col_offset=3), [Eq()], [Str('__main__', lineno=1035, col_offset=15)], lineno=1035, col_offset=3), [Expr(Call(Name('test', Load(), lineno=1036, col_offset=4), [], [], None, None, lineno=1036, col_offset=4), lineno=1036, col_offset=4)], [], lineno=1035, col_offset=0)])
