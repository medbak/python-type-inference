Module([Expr(Str('Registration facilities for DOM. This module should not be used\ndirectly. Instead, the functions getDOMImplementation and\nregisterDOMImplementation should be imported from xml.dom.', lineno=3, col_offset=-1), lineno=3, col_offset=-1), ImportFrom('xml.dom.minicompat', [alias('*', None)], 0, lineno=5, col_offset=0), Assign([Name('well_known_implementations', Store(), lineno=11, col_offset=0)], Dict([Str('minidom', lineno=12, col_offset=4), Str('4DOM', lineno=13, col_offset=4)], [Str('xml.dom.minidom', lineno=12, col_offset=14), Str('xml.dom.DOMImplementation', lineno=13, col_offset=12)], lineno=11, col_offset=29), lineno=11, col_offset=0), Assign([Name('registered', Store(), lineno=19, col_offset=0)], Dict([], [], lineno=19, col_offset=13), lineno=19, col_offset=0), FunctionDef('registerDOMImplementation', arguments([Name('name', Param(), lineno=21, col_offset=30), Name('factory', Param(), lineno=21, col_offset=36)], None, None, []), [Expr(Str('registerDOMImplementation(name, factory)\n\n    Register the factory function with the name. The factory function\n    should return an object which implements the DOMImplementation\n    interface. The factory function can either return the same object,\n    or a new one (e.g. if that implementation supports some\n    customization).', lineno=28, col_offset=-1), lineno=28, col_offset=-1), Assign([Subscript(Name('registered', Load(), lineno=30, col_offset=4), Index(Name('name', Load(), lineno=30, col_offset=15)), Store(), lineno=30, col_offset=4)], Name('factory', Load(), lineno=30, col_offset=23), lineno=30, col_offset=4)], [], lineno=21, col_offset=0), FunctionDef('_good_enough', arguments([Name('dom', Param(), lineno=32, col_offset=17), Name('features', Param(), lineno=32, col_offset=22)], None, None, []), [Expr(Str('_good_enough(dom, features) -> Return 1 if the dom offers the features', lineno=33, col_offset=4), lineno=33, col_offset=4), For(Tuple([Name('f', Store(), lineno=34, col_offset=8), Name('v', Store(), lineno=34, col_offset=10)], Store(), lineno=34, col_offset=8), Name('features', Load(), lineno=34, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Name('dom', Load(), lineno=35, col_offset=15), 'hasFeature', Load(), lineno=35, col_offset=15), [Name('f', Load(), lineno=35, col_offset=30), Name('v', Load(), lineno=35, col_offset=32)], [], None, None, lineno=35, col_offset=15), lineno=35, col_offset=11), [Return(Num(0, lineno=36, col_offset=19), lineno=36, col_offset=12)], [], lineno=35, col_offset=8)], [], lineno=34, col_offset=4), Return(Num(1, lineno=37, col_offset=11), lineno=37, col_offset=4)], [], lineno=32, col_offset=0), FunctionDef('getDOMImplementation', arguments([Name('name', Param(), lineno=39, col_offset=25), Name('features', Param(), lineno=39, col_offset=38)], None, None, [Name('None', Load(), lineno=39, col_offset=32), Tuple([], Load(), lineno=39, col_offset=49)]), [Expr(Str('getDOMImplementation(name = None, features = ()) -> DOM implementation.\n\n    Return a suitable DOM implementation. The name is either\n    well-known, the module name of a DOM implementation, or None. If\n    it is not None, imports the corresponding module and returns\n    DOMImplementation object if the import succeeds.\n\n    If name is not given, consider the available implementations to\n    find one with the required feature set. If no implementation can\n    be found, raise an ImportError. The features list must be a sequence\n    of (feature, version) pairs which are passed to hasFeature.', lineno=50, col_offset=-1), lineno=50, col_offset=-1), Import([alias('os', None)], lineno=52, col_offset=4), Assign([Name('creator', Store(), lineno=53, col_offset=4)], Name('None', Load(), lineno=53, col_offset=14), lineno=53, col_offset=4), Assign([Name('mod', Store(), lineno=54, col_offset=4)], Call(Attribute(Name('well_known_implementations', Load(), lineno=54, col_offset=10), 'get', Load(), lineno=54, col_offset=10), [Name('name', Load(), lineno=54, col_offset=41)], [], None, None, lineno=54, col_offset=10), lineno=54, col_offset=4), If(Name('mod', Load(), lineno=55, col_offset=7), [Assign([Name('mod', Store(), lineno=56, col_offset=8)], Call(Name('__import__', Load(), lineno=56, col_offset=14), [Name('mod', Load(), lineno=56, col_offset=25), Dict([], [], lineno=56, col_offset=30), Dict([], [], lineno=56, col_offset=34), List([Str('getDOMImplementation', lineno=56, col_offset=39)], Load(), lineno=56, col_offset=38)], [], None, None, lineno=56, col_offset=14), lineno=56, col_offset=8), Return(Call(Attribute(Name('mod', Load(), lineno=57, col_offset=15), 'getDOMImplementation', Load(), lineno=57, col_offset=15), [], [], None, None, lineno=57, col_offset=15), lineno=57, col_offset=8)], [If(Name('name', Load(), lineno=58, col_offset=9), [Return(Call(Subscript(Name('registered', Load(), lineno=59, col_offset=15), Index(Name('name', Load(), lineno=59, col_offset=26)), Load(), lineno=59, col_offset=15), [], [], None, None, lineno=59, col_offset=15), lineno=59, col_offset=8)], [If(Compare(Str('PYTHON_DOM', lineno=60, col_offset=9), [In()], [Attribute(Name('os', Load(), lineno=60, col_offset=25), 'environ', Load(), lineno=60, col_offset=25)], lineno=60, col_offset=9), [Return(Call(Name('getDOMImplementation', Load(), lineno=61, col_offset=15), [], [keyword('name', Subscript(Attribute(Name('os', Load(), lineno=61, col_offset=43), 'environ', Load(), lineno=61, col_offset=43), Index(Str('PYTHON_DOM', lineno=61, col_offset=54)), Load(), lineno=61, col_offset=43))], None, None, lineno=61, col_offset=15), lineno=61, col_offset=8)], [], lineno=60, col_offset=9)], lineno=58, col_offset=9)], lineno=55, col_offset=4), If(Call(Name('isinstance', Load(), lineno=65, col_offset=7), [Name('features', Load(), lineno=65, col_offset=18), Name('StringTypes', Load(), lineno=65, col_offset=28)], [], None, None, lineno=65, col_offset=7), [Assign([Name('features', Store(), lineno=66, col_offset=8)], Call(Name('_parse_feature_string', Load(), lineno=66, col_offset=19), [Name('features', Load(), lineno=66, col_offset=41)], [], None, None, lineno=66, col_offset=19), lineno=66, col_offset=8)], [], lineno=65, col_offset=4), For(Name('creator', Store(), lineno=67, col_offset=8), Call(Attribute(Name('registered', Load(), lineno=67, col_offset=19), 'values', Load(), lineno=67, col_offset=19), [], [], None, None, lineno=67, col_offset=19), [Assign([Name('dom', Store(), lineno=68, col_offset=8)], Call(Name('creator', Load(), lineno=68, col_offset=14), [], [], None, None, lineno=68, col_offset=14), lineno=68, col_offset=8), If(Call(Name('_good_enough', Load(), lineno=69, col_offset=11), [Name('dom', Load(), lineno=69, col_offset=24), Name('features', Load(), lineno=69, col_offset=29)], [], None, None, lineno=69, col_offset=11), [Return(Name('dom', Load(), lineno=70, col_offset=19), lineno=70, col_offset=12)], [], lineno=69, col_offset=8)], [], lineno=67, col_offset=4), For(Name('creator', Store(), lineno=72, col_offset=8), Call(Attribute(Name('well_known_implementations', Load(), lineno=72, col_offset=19), 'keys', Load(), lineno=72, col_offset=19), [], [], None, None, lineno=72, col_offset=19), [TryExcept([Assign([Name('dom', Store(), lineno=74, col_offset=12)], Call(Name('getDOMImplementation', Load(), lineno=74, col_offset=18), [], [keyword('name', Name('creator', Load(), lineno=74, col_offset=46))], None, None, lineno=74, col_offset=18), lineno=74, col_offset=12)], [ExceptHandler(Name('StandardError', Load(), lineno=75, col_offset=15), None, [Continue( lineno=76, col_offset=12)], lineno=75, col_offset=8)], [], lineno=73, col_offset=8), If(Call(Name('_good_enough', Load(), lineno=77, col_offset=11), [Name('dom', Load(), lineno=77, col_offset=24), Name('features', Load(), lineno=77, col_offset=29)], [], None, None, lineno=77, col_offset=11), [Return(Name('dom', Load(), lineno=78, col_offset=19), lineno=78, col_offset=12)], [], lineno=77, col_offset=8)], [], lineno=72, col_offset=4), Raise(Name('ImportError', Load(), lineno=80, col_offset=10), Str('no suitable DOM implementation found', lineno=80, col_offset=22), None, lineno=80, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('_parse_feature_string', arguments([Name('s', Param(), lineno=82, col_offset=26)], None, None, []), [Assign([Name('features', Store(), lineno=83, col_offset=4)], List([], Load(), lineno=83, col_offset=15), lineno=83, col_offset=4), Assign([Name('parts', Store(), lineno=84, col_offset=4)], Call(Attribute(Name('s', Load(), lineno=84, col_offset=12), 'split', Load(), lineno=84, col_offset=12), [], [], None, None, lineno=84, col_offset=12), lineno=84, col_offset=4), Assign([Name('i', Store(), lineno=85, col_offset=4)], Num(0, lineno=85, col_offset=8), lineno=85, col_offset=4), Assign([Name('length', Store(), lineno=86, col_offset=4)], Call(Name('len', Load(), lineno=86, col_offset=13), [Name('parts', Load(), lineno=86, col_offset=17)], [], None, None, lineno=86, col_offset=13), lineno=86, col_offset=4), While(Compare(Name('i', Load(), lineno=87, col_offset=10), [Lt()], [Name('length', Load(), lineno=87, col_offset=14)], lineno=87, col_offset=10), [Assign([Name('feature', Store(), lineno=88, col_offset=8)], Subscript(Name('parts', Load(), lineno=88, col_offset=18), Index(Name('i', Load(), lineno=88, col_offset=24)), Load(), lineno=88, col_offset=18), lineno=88, col_offset=8), If(Compare(Subscript(Name('feature', Load(), lineno=89, col_offset=11), Index(Num(0, lineno=89, col_offset=19)), Load(), lineno=89, col_offset=11), [In()], [Str('0123456789', lineno=89, col_offset=25)], lineno=89, col_offset=11), [Raise(Name('ValueError', Load(), lineno=90, col_offset=18), BinOp(Str('bad feature name: %r', lineno=90, col_offset=30), Mod(), Tuple([Name('feature', Load(), lineno=90, col_offset=56)], Load(), lineno=90, col_offset=56), lineno=90, col_offset=30), None, lineno=90, col_offset=12)], [], lineno=89, col_offset=8), Assign([Name('i', Store(), lineno=91, col_offset=8)], BinOp(Name('i', Load(), lineno=91, col_offset=12), Add(), Num(1, lineno=91, col_offset=16), lineno=91, col_offset=12), lineno=91, col_offset=8), Assign([Name('version', Store(), lineno=92, col_offset=8)], Name('None', Load(), lineno=92, col_offset=18), lineno=92, col_offset=8), If(Compare(Name('i', Load(), lineno=93, col_offset=11), [Lt()], [Name('length', Load(), lineno=93, col_offset=15)], lineno=93, col_offset=11), [Assign([Name('v', Store(), lineno=94, col_offset=12)], Subscript(Name('parts', Load(), lineno=94, col_offset=16), Index(Name('i', Load(), lineno=94, col_offset=22)), Load(), lineno=94, col_offset=16), lineno=94, col_offset=12), If(Compare(Subscript(Name('v', Load(), lineno=95, col_offset=15), Index(Num(0, lineno=95, col_offset=17)), Load(), lineno=95, col_offset=15), [In()], [Str('0123456789', lineno=95, col_offset=23)], lineno=95, col_offset=15), [Assign([Name('i', Store(), lineno=96, col_offset=16)], BinOp(Name('i', Load(), lineno=96, col_offset=20), Add(), Num(1, lineno=96, col_offset=24), lineno=96, col_offset=20), lineno=96, col_offset=16), Assign([Name('version', Store(), lineno=97, col_offset=16)], Name('v', Load(), lineno=97, col_offset=26), lineno=97, col_offset=16)], [], lineno=95, col_offset=12)], [], lineno=93, col_offset=8), Expr(Call(Attribute(Name('features', Load(), lineno=98, col_offset=8), 'append', Load(), lineno=98, col_offset=8), [Tuple([Name('feature', Load(), lineno=98, col_offset=25), Name('version', Load(), lineno=98, col_offset=34)], Load(), lineno=98, col_offset=25)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8)], [], lineno=87, col_offset=4), Return(Call(Name('tuple', Load(), lineno=99, col_offset=11), [Name('features', Load(), lineno=99, col_offset=17)], [], None, None, lineno=99, col_offset=11), lineno=99, col_offset=4)], [], lineno=82, col_offset=0)])
