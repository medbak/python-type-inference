Module([Expr(Str('Manage shelves of pickled objects using bsddb database files for the\nstorage.\n', lineno=28, col_offset=-1), lineno=28, col_offset=-1), Import([alias('sys', None)], lineno=32, col_offset=0), Assign([Name('absolute_import', Store(), lineno=33, col_offset=0)], Compare(Subscript(Attribute(Name('sys', Load(), lineno=33, col_offset=19), 'version_info', Load(), lineno=33, col_offset=19), Index(Num(0, lineno=33, col_offset=36)), Load(), lineno=33, col_offset=19), [GtE()], [Num(3, lineno=33, col_offset=42)], lineno=33, col_offset=19), lineno=33, col_offset=0), If(Name('absolute_import', Load(), lineno=34, col_offset=3), [Exec(Str('from . import db', lineno=36, col_offset=9), None, None, lineno=36, col_offset=4)], [Import([alias('db', None)], lineno=38, col_offset=4)], lineno=34, col_offset=0), If(Compare(Subscript(Attribute(Name('sys', Load(), lineno=40, col_offset=3), 'version_info', Load(), lineno=40, col_offset=3), Index(Num(0, lineno=40, col_offset=20)), Load(), lineno=40, col_offset=3), [GtE()], [Num(3, lineno=40, col_offset=26)], lineno=40, col_offset=3), [Import([alias('cPickle', None)], lineno=41, col_offset=4)], [If(Compare(Attribute(Name('sys', Load(), lineno=43, col_offset=7), 'version_info', Load(), lineno=43, col_offset=7), [Lt()], [Tuple([Num(2, lineno=43, col_offset=27), Num(6, lineno=43, col_offset=30)], Load(), lineno=43, col_offset=27)], lineno=43, col_offset=7), [Import([alias('cPickle', None)], lineno=44, col_offset=8)], [Import([alias('warnings', None)], lineno=56, col_offset=8), Assign([Name('w', Store(), lineno=57, col_offset=8)], Call(Attribute(Name('warnings', Load(), lineno=57, col_offset=12), 'catch_warnings', Load(), lineno=57, col_offset=12), [], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=8), Expr(Call(Attribute(Name('w', Load(), lineno=58, col_offset=8), '__enter__', Load(), lineno=58, col_offset=8), [], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), TryFinally([Expr(Call(Attribute(Name('warnings', Load(), lineno=60, col_offset=12), 'filterwarnings', Load(), lineno=60, col_offset=12), [Str('ignore', lineno=60, col_offset=36)], [keyword('message', Str('the cPickle module has been removed in Python 3.0', lineno=61, col_offset=24)), keyword('category', Name('DeprecationWarning', Load(), lineno=62, col_offset=25))], None, None, lineno=60, col_offset=12), lineno=60, col_offset=12), Import([alias('cPickle', None)], lineno=63, col_offset=12)], [Expr(Call(Attribute(Name('w', Load(), lineno=65, col_offset=12), '__exit__', Load(), lineno=65, col_offset=12), [], [], None, None, lineno=65, col_offset=12), lineno=65, col_offset=12)], lineno=59, col_offset=8), Delete([Name('w', Del(), lineno=66, col_offset=12)], lineno=66, col_offset=8)], lineno=43, col_offset=4)], lineno=40, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=69, col_offset=3), 'version_info', Load(), lineno=69, col_offset=3), [GtE()], [Tuple([Num(2, lineno=69, col_offset=24), Num(3, lineno=69, col_offset=27)], Load(), lineno=69, col_offset=24)], lineno=69, col_offset=3), [Assign([Name('HIGHEST_PROTOCOL', Store(), lineno=70, col_offset=4)], Attribute(Name('cPickle', Load(), lineno=70, col_offset=23), 'HIGHEST_PROTOCOL', Load(), lineno=70, col_offset=23), lineno=70, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=74, col_offset=7), 'version_info', Load(), lineno=74, col_offset=7), [Lt()], [Tuple([Num(2, lineno=74, col_offset=27), Num(4, lineno=74, col_offset=30)], Load(), lineno=74, col_offset=27)], lineno=74, col_offset=7), [FunctionDef('_dumps', arguments([Name('object', Param(), lineno=75, col_offset=19), Name('protocol', Param(), lineno=75, col_offset=27)], None, None, []), [Return(Call(Attribute(Name('cPickle', Load(), lineno=76, col_offset=19), 'dumps', Load(), lineno=76, col_offset=19), [Name('object', Load(), lineno=76, col_offset=33), Name('protocol', Load(), lineno=76, col_offset=41)], [], None, None, lineno=76, col_offset=19), lineno=76, col_offset=12)], [], lineno=75, col_offset=8)], [FunctionDef('_dumps', arguments([Name('object', Param(), lineno=78, col_offset=19), Name('protocol', Param(), lineno=78, col_offset=27)], None, None, []), [Return(Call(Attribute(Name('cPickle', Load(), lineno=79, col_offset=19), 'dumps', Load(), lineno=79, col_offset=19), [Name('object', Load(), lineno=79, col_offset=33)], [keyword('protocol', Name('protocol', Load(), lineno=79, col_offset=50))], None, None, lineno=79, col_offset=19), lineno=79, col_offset=12)], [], lineno=78, col_offset=8)], lineno=74, col_offset=4)], [Assign([Name('HIGHEST_PROTOCOL', Store(), lineno=82, col_offset=4)], Name('None', Load(), lineno=82, col_offset=23), lineno=82, col_offset=4), FunctionDef('_dumps', arguments([Name('object', Param(), lineno=83, col_offset=15), Name('protocol', Param(), lineno=83, col_offset=23)], None, None, []), [Return(Call(Attribute(Name('cPickle', Load(), lineno=84, col_offset=15), 'dumps', Load(), lineno=84, col_offset=15), [Name('object', Load(), lineno=84, col_offset=29)], [keyword('bin', Name('protocol', Load(), lineno=84, col_offset=41))], None, None, lineno=84, col_offset=15), lineno=84, col_offset=8)], [], lineno=83, col_offset=4)], lineno=69, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=87, col_offset=3), 'version_info', Load(), lineno=87, col_offset=3), [Lt()], [Tuple([Num(2, lineno=87, col_offset=23), Num(6, lineno=87, col_offset=26)], Load(), lineno=87, col_offset=23)], lineno=87, col_offset=3), [TryExcept([ImportFrom('UserDict', [alias('DictMixin', None)], 0, lineno=89, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=90, col_offset=11), None, [ClassDef('DictMixin', [], [Pass( lineno=92, col_offset=25)], [], lineno=92, col_offset=8)], lineno=90, col_offset=4)], [], lineno=88, col_offset=4), Assign([Name('MutableMapping', Store(), lineno=93, col_offset=4)], Name('DictMixin', Load(), lineno=93, col_offset=21), lineno=93, col_offset=4)], [Import([alias('collections', None)], lineno=95, col_offset=4), Assign([Name('MutableMapping', Store(), lineno=96, col_offset=4)], Attribute(Name('collections', Load(), lineno=96, col_offset=21), 'MutableMapping', Load(), lineno=96, col_offset=21), lineno=96, col_offset=4)], lineno=87, col_offset=0), FunctionDef('open', arguments([Name('filename', Param(), lineno=101, col_offset=9), Name('flags', Param(), lineno=101, col_offset=19), Name('mode', Param(), lineno=101, col_offset=39), Name('filetype', Param(), lineno=101, col_offset=50), Name('dbenv', Param(), lineno=102, col_offset=9), Name('dbname', Param(), lineno=102, col_offset=21)], None, None, [Attribute(Name('db', Load(), lineno=101, col_offset=25), 'DB_CREATE', Load(), lineno=101, col_offset=25), Num(432, lineno=101, col_offset=44), Attribute(Name('db', Load(), lineno=101, col_offset=59), 'DB_HASH', Load(), lineno=101, col_offset=59), Name('None', Load(), lineno=102, col_offset=15), Name('None', Load(), lineno=102, col_offset=28)]), [Expr(Str('\n    A simple factory function for compatibility with the standard\n    shleve.py module.  It can be used like this, where key is a string\n    and data is a pickleable object:\n\n        from bsddb import dbshelve\n        db = dbshelve.open(filename)\n\n        db[key] = data\n\n        db.close()\n    ', lineno=114, col_offset=-1), lineno=114, col_offset=-1), If(Compare(Call(Name('type', Load(), lineno=115, col_offset=7), [Name('flags', Load(), lineno=115, col_offset=12)], [], None, None, lineno=115, col_offset=7), [Eq()], [Call(Name('type', Load(), lineno=115, col_offset=22), [Str('', lineno=115, col_offset=27)], [], None, None, lineno=115, col_offset=22)], lineno=115, col_offset=7), [Assign([Name('sflag', Store(), lineno=116, col_offset=8)], Name('flags', Load(), lineno=116, col_offset=16), lineno=116, col_offset=8), If(Compare(Name('sflag', Load(), lineno=117, col_offset=11), [Eq()], [Str('r', lineno=117, col_offset=20)], lineno=117, col_offset=11), [Assign([Name('flags', Store(), lineno=118, col_offset=12)], Attribute(Name('db', Load(), lineno=118, col_offset=20), 'DB_RDONLY', Load(), lineno=118, col_offset=20), lineno=118, col_offset=12)], [If(Compare(Name('sflag', Load(), lineno=119, col_offset=13), [Eq()], [Str('rw', lineno=119, col_offset=22)], lineno=119, col_offset=13), [Assign([Name('flags', Store(), lineno=120, col_offset=12)], Num(0, lineno=120, col_offset=20), lineno=120, col_offset=12)], [If(Compare(Name('sflag', Load(), lineno=121, col_offset=13), [Eq()], [Str('w', lineno=121, col_offset=22)], lineno=121, col_offset=13), [Assign([Name('flags', Store(), lineno=122, col_offset=12)], Attribute(Name('db', Load(), lineno=122, col_offset=21), 'DB_CREATE', Load(), lineno=122, col_offset=21), lineno=122, col_offset=12)], [If(Compare(Name('sflag', Load(), lineno=123, col_offset=13), [Eq()], [Str('c', lineno=123, col_offset=22)], lineno=123, col_offset=13), [Assign([Name('flags', Store(), lineno=124, col_offset=12)], Attribute(Name('db', Load(), lineno=124, col_offset=21), 'DB_CREATE', Load(), lineno=124, col_offset=21), lineno=124, col_offset=12)], [If(Compare(Name('sflag', Load(), lineno=125, col_offset=13), [Eq()], [Str('n', lineno=125, col_offset=22)], lineno=125, col_offset=13), [Assign([Name('flags', Store(), lineno=126, col_offset=12)], BinOp(Attribute(Name('db', Load(), lineno=126, col_offset=20), 'DB_TRUNCATE', Load(), lineno=126, col_offset=20), BitOr(), Attribute(Name('db', Load(), lineno=126, col_offset=37), 'DB_CREATE', Load(), lineno=126, col_offset=37), lineno=126, col_offset=20), lineno=126, col_offset=12)], [Raise(Attribute(Name('db', Load(), lineno=128, col_offset=18), 'DBError', Load(), lineno=128, col_offset=18), Str("flags should be one of 'r', 'w', 'c' or 'n' or use the bsddb.db.DB_* flags", lineno=128, col_offset=30), None, lineno=128, col_offset=12)], lineno=125, col_offset=13)], lineno=123, col_offset=13)], lineno=121, col_offset=13)], lineno=119, col_offset=13)], lineno=117, col_offset=8)], [], lineno=115, col_offset=4), Assign([Name('d', Store(), lineno=130, col_offset=4)], Call(Name('DBShelf', Load(), lineno=130, col_offset=8), [Name('dbenv', Load(), lineno=130, col_offset=16)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=4), Expr(Call(Attribute(Name('d', Load(), lineno=131, col_offset=4), 'open', Load(), lineno=131, col_offset=4), [Name('filename', Load(), lineno=131, col_offset=11), Name('dbname', Load(), lineno=131, col_offset=21), Name('filetype', Load(), lineno=131, col_offset=29), Name('flags', Load(), lineno=131, col_offset=39), Name('mode', Load(), lineno=131, col_offset=46)], [], None, None, lineno=131, col_offset=4), lineno=131, col_offset=4), Return(Name('d', Load(), lineno=132, col_offset=11), lineno=132, col_offset=4)], [], lineno=101, col_offset=0), ClassDef('DBShelveError', [Attribute(Name('db', Load(), lineno=136, col_offset=20), 'DBError', Load(), lineno=136, col_offset=20)], [Pass( lineno=136, col_offset=33)], [], lineno=136, col_offset=0), ClassDef('DBShelf', [Name('MutableMapping', Load(), lineno=139, col_offset=14)], [Expr(Str('A shelf to hold pickled objects, built upon a bsddb DB object.  It\n    automatically pickles/unpickles data objects going to/from the DB.\n    ', lineno=142, col_offset=-1), lineno=142, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=143, col_offset=17), Name('dbenv', Param(), lineno=143, col_offset=23)], None, None, [Name('None', Load(), lineno=143, col_offset=29)]), [Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), 'db', Store(), lineno=144, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=144, col_offset=18), 'DB', Load(), lineno=144, col_offset=18), [Name('dbenv', Load(), lineno=144, col_offset=24)], [], None, None, lineno=144, col_offset=18), lineno=144, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=145, col_offset=8), '_closed', Store(), lineno=145, col_offset=8)], Name('True', Load(), lineno=145, col_offset=23), lineno=145, col_offset=8), If(Name('HIGHEST_PROTOCOL', Load(), lineno=146, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=147, col_offset=12), 'protocol', Store(), lineno=147, col_offset=12)], Name('HIGHEST_PROTOCOL', Load(), lineno=147, col_offset=28), lineno=147, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=149, col_offset=12), 'protocol', Store(), lineno=149, col_offset=12)], Num(1, lineno=149, col_offset=28), lineno=149, col_offset=12)], lineno=146, col_offset=8)], [], lineno=143, col_offset=4), FunctionDef('__del__', arguments([Name('self', Param(), lineno=152, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=153, col_offset=8), 'close', Load(), lineno=153, col_offset=8), [], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=156, col_offset=20), Name('name', Param(), lineno=156, col_offset=26)], None, None, []), [Expr(Str('Many methods we can just pass through to the DB object.\n        (See below)\n        ', lineno=159, col_offset=-1), lineno=159, col_offset=-1), Return(Call(Name('getattr', Load(), lineno=160, col_offset=15), [Attribute(Name('self', Load(), lineno=160, col_offset=23), 'db', Load(), lineno=160, col_offset=23), Name('name', Load(), lineno=160, col_offset=32)], [], None, None, lineno=160, col_offset=15), lineno=160, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=166, col_offset=16)], None, None, []), [Return(Call(Name('len', Load(), lineno=167, col_offset=15), [Attribute(Name('self', Load(), lineno=167, col_offset=19), 'db', Load(), lineno=167, col_offset=19)], [], None, None, lineno=167, col_offset=15), lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=170, col_offset=20), Name('key', Param(), lineno=170, col_offset=26)], None, None, []), [Assign([Name('data', Store(), lineno=171, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=171, col_offset=15), 'db', Load(), lineno=171, col_offset=15), Index(Name('key', Load(), lineno=171, col_offset=23)), Load(), lineno=171, col_offset=15), lineno=171, col_offset=8), Return(Call(Attribute(Name('cPickle', Load(), lineno=172, col_offset=15), 'loads', Load(), lineno=172, col_offset=15), [Name('data', Load(), lineno=172, col_offset=29)], [], None, None, lineno=172, col_offset=15), lineno=172, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=175, col_offset=20), Name('key', Param(), lineno=175, col_offset=26), Name('value', Param(), lineno=175, col_offset=31)], None, None, []), [Assign([Name('data', Store(), lineno=176, col_offset=8)], Call(Name('_dumps', Load(), lineno=176, col_offset=15), [Name('value', Load(), lineno=176, col_offset=22), Attribute(Name('self', Load(), lineno=176, col_offset=29), 'protocol', Load(), lineno=176, col_offset=29)], [], None, None, lineno=176, col_offset=15), lineno=176, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=177, col_offset=8), 'db', Load(), lineno=177, col_offset=8), Index(Name('key', Load(), lineno=177, col_offset=16)), Store(), lineno=177, col_offset=8)], Name('data', Load(), lineno=177, col_offset=23), lineno=177, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('__delitem__', arguments([Name('self', Param(), lineno=180, col_offset=20), Name('key', Param(), lineno=180, col_offset=26)], None, None, []), [Delete([Subscript(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'db', Load(), lineno=181, col_offset=12), Index(Name('key', Load(), lineno=181, col_offset=20)), Del(), lineno=181, col_offset=12)], lineno=181, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('keys', arguments([Name('self', Param(), lineno=184, col_offset=13), Name('txn', Param(), lineno=184, col_offset=19)], None, None, [Name('None', Load(), lineno=184, col_offset=23)]), [If(Compare(Name('txn', Load(), lineno=185, col_offset=11), [IsNot()], [Name('None', Load(), lineno=185, col_offset=22)], lineno=185, col_offset=11), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=186, col_offset=19), 'db', Load(), lineno=186, col_offset=19), 'keys', Load(), lineno=186, col_offset=19), [Name('txn', Load(), lineno=186, col_offset=32)], [], None, None, lineno=186, col_offset=19), lineno=186, col_offset=12)], [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=188, col_offset=19), 'db', Load(), lineno=188, col_offset=19), 'keys', Load(), lineno=188, col_offset=19), [], [], None, None, lineno=188, col_offset=19), lineno=188, col_offset=12)], lineno=185, col_offset=8)], [], lineno=184, col_offset=4), If(Compare(Attribute(Name('sys', Load(), lineno=190, col_offset=7), 'version_info', Load(), lineno=190, col_offset=7), [GtE()], [Tuple([Num(2, lineno=190, col_offset=28), Num(6, lineno=190, col_offset=31)], Load(), lineno=190, col_offset=28)], lineno=190, col_offset=7), [FunctionDef('__iter__', arguments([Name('self', Param(), lineno=191, col_offset=21)], None, None, []), [For(Name('k', Store(), lineno=192, col_offset=16), Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=21), 'db', Load(), lineno=192, col_offset=21), 'keys', Load(), lineno=192, col_offset=21), [], [], None, None, lineno=192, col_offset=21), [Expr(Yield(Name('k', Load(), lineno=193, col_offset=22), lineno=193, col_offset=16), lineno=193, col_offset=16)], [], lineno=192, col_offset=12)], [], lineno=191, col_offset=8)], [], lineno=190, col_offset=4), FunctionDef('open', arguments([Name('self', Param(), lineno=202, col_offset=13)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'db', Load(), lineno=203, col_offset=8), 'open', Load(), lineno=203, col_offset=8), [], [], Name('args', Load(), lineno=203, col_offset=22), Name('kwargs', Load(), lineno=203, col_offset=30), lineno=203, col_offset=8), lineno=203, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=204, col_offset=8), '_closed', Store(), lineno=204, col_offset=8)], Name('False', Load(), lineno=204, col_offset=23), lineno=204, col_offset=8)], [], lineno=202, col_offset=4), FunctionDef('close', arguments([Name('self', Param(), lineno=207, col_offset=14)], 'args', 'kwargs', []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'db', Load(), lineno=208, col_offset=8), 'close', Load(), lineno=208, col_offset=8), [], [], Name('args', Load(), lineno=208, col_offset=23), Name('kwargs', Load(), lineno=208, col_offset=31), lineno=208, col_offset=8), lineno=208, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=209, col_offset=8), '_closed', Store(), lineno=209, col_offset=8)], Name('True', Load(), lineno=209, col_offset=23), lineno=209, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=212, col_offset=17)], None, None, []), [If(Attribute(Name('self', Load(), lineno=213, col_offset=11), '_closed', Load(), lineno=213, col_offset=11), [Return(BinOp(Str('<DBShelf @ 0x%x - closed>', lineno=214, col_offset=19), Mod(), Call(Name('id', Load(), lineno=214, col_offset=50), [Name('self', Load(), lineno=214, col_offset=53)], [], None, None, lineno=214, col_offset=50), lineno=214, col_offset=19), lineno=214, col_offset=12)], [Return(Call(Name('repr', Load(), lineno=216, col_offset=19), [Call(Name('dict', Load(), lineno=216, col_offset=24), [Call(Attribute(Name('self', Load(), lineno=216, col_offset=29), 'iteritems', Load(), lineno=216, col_offset=29), [], [], None, None, lineno=216, col_offset=29)], [], None, None, lineno=216, col_offset=24)], [], None, None, lineno=216, col_offset=19), lineno=216, col_offset=12)], lineno=213, col_offset=8)], [], lineno=212, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=219, col_offset=14), Name('txn', Param(), lineno=219, col_offset=20)], None, None, [Name('None', Load(), lineno=219, col_offset=24)]), [If(Compare(Name('txn', Load(), lineno=220, col_offset=11), [IsNot()], [Name('None', Load(), lineno=220, col_offset=22)], lineno=220, col_offset=11), [Assign([Name('items', Store(), lineno=221, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=221, col_offset=20), 'db', Load(), lineno=221, col_offset=20), 'items', Load(), lineno=221, col_offset=20), [Name('txn', Load(), lineno=221, col_offset=34)], [], None, None, lineno=221, col_offset=20), lineno=221, col_offset=12)], [Assign([Name('items', Store(), lineno=223, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=223, col_offset=20), 'db', Load(), lineno=223, col_offset=20), 'items', Load(), lineno=223, col_offset=20), [], [], None, None, lineno=223, col_offset=20), lineno=223, col_offset=12)], lineno=220, col_offset=8), Assign([Name('newitems', Store(), lineno=224, col_offset=8)], List([], Load(), lineno=224, col_offset=19), lineno=224, col_offset=8), For(Tuple([Name('k', Store(), lineno=226, col_offset=12), Name('v', Store(), lineno=226, col_offset=15)], Store(), lineno=226, col_offset=12), Name('items', Load(), lineno=226, col_offset=20), [Expr(Call(Attribute(Name('newitems', Load(), lineno=227, col_offset=12), 'append', Load(), lineno=227, col_offset=12), [Tuple([Name('k', Load(), lineno=227, col_offset=30), Call(Attribute(Name('cPickle', Load(), lineno=227, col_offset=33), 'loads', Load(), lineno=227, col_offset=33), [Name('v', Load(), lineno=227, col_offset=47)], [], None, None, lineno=227, col_offset=33)], Load(), lineno=227, col_offset=30)], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12)], [], lineno=226, col_offset=8), Return(Name('newitems', Load(), lineno=228, col_offset=15), lineno=228, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('values', arguments([Name('self', Param(), lineno=230, col_offset=15), Name('txn', Param(), lineno=230, col_offset=21)], None, None, [Name('None', Load(), lineno=230, col_offset=25)]), [If(Compare(Name('txn', Load(), lineno=231, col_offset=11), [IsNot()], [Name('None', Load(), lineno=231, col_offset=22)], lineno=231, col_offset=11), [Assign([Name('values', Store(), lineno=232, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=232, col_offset=21), 'db', Load(), lineno=232, col_offset=21), 'values', Load(), lineno=232, col_offset=21), [Name('txn', Load(), lineno=232, col_offset=36)], [], None, None, lineno=232, col_offset=21), lineno=232, col_offset=12)], [Assign([Name('values', Store(), lineno=234, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=234, col_offset=21), 'db', Load(), lineno=234, col_offset=21), 'values', Load(), lineno=234, col_offset=21), [], [], None, None, lineno=234, col_offset=21), lineno=234, col_offset=12)], lineno=231, col_offset=8), Return(Call(Name('map', Load(), lineno=236, col_offset=15), [Attribute(Name('cPickle', Load(), lineno=236, col_offset=19), 'loads', Load(), lineno=236, col_offset=19), Name('values', Load(), lineno=236, col_offset=34)], [], None, None, lineno=236, col_offset=15), lineno=236, col_offset=8)], [], lineno=230, col_offset=4), FunctionDef('__append', arguments([Name('self', Param(), lineno=241, col_offset=17), Name('value', Param(), lineno=241, col_offset=23), Name('txn', Param(), lineno=241, col_offset=30)], None, None, [Name('None', Load(), lineno=241, col_offset=34)]), [Assign([Name('data', Store(), lineno=242, col_offset=8)], Call(Name('_dumps', Load(), lineno=242, col_offset=15), [Name('value', Load(), lineno=242, col_offset=22), Attribute(Name('self', Load(), lineno=242, col_offset=29), 'protocol', Load(), lineno=242, col_offset=29)], [], None, None, lineno=242, col_offset=15), lineno=242, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=243, col_offset=15), 'db', Load(), lineno=243, col_offset=15), 'append', Load(), lineno=243, col_offset=15), [Name('data', Load(), lineno=243, col_offset=30), Name('txn', Load(), lineno=243, col_offset=36)], [], None, None, lineno=243, col_offset=15), lineno=243, col_offset=8)], [], lineno=241, col_offset=4), FunctionDef('append', arguments([Name('self', Param(), lineno=245, col_offset=15), Name('value', Param(), lineno=245, col_offset=21), Name('txn', Param(), lineno=245, col_offset=28)], None, None, [Name('None', Load(), lineno=245, col_offset=32)]), [If(Compare(Call(Attribute(Name('self', Load(), lineno=246, col_offset=11), 'get_type', Load(), lineno=246, col_offset=11), [], [], None, None, lineno=246, col_offset=11), [Eq()], [Attribute(Name('db', Load(), lineno=246, col_offset=30), 'DB_RECNO', Load(), lineno=246, col_offset=30)], lineno=246, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=247, col_offset=19), '__append', Load(), lineno=247, col_offset=19), [Name('value', Load(), lineno=247, col_offset=33)], [keyword('txn', Name('txn', Load(), lineno=247, col_offset=44))], None, None, lineno=247, col_offset=19), lineno=247, col_offset=12)], [], lineno=246, col_offset=8), Raise(Name('DBShelveError', Load(), lineno=248, col_offset=14), Str('append() only supported when dbshelve opened with filetype=dbshelve.db.DB_RECNO', lineno=248, col_offset=29), None, lineno=248, col_offset=8)], [], lineno=245, col_offset=4), FunctionDef('associate', arguments([Name('self', Param(), lineno=251, col_offset=18), Name('secondaryDB', Param(), lineno=251, col_offset=24), Name('callback', Param(), lineno=251, col_offset=37), Name('flags', Param(), lineno=251, col_offset=47)], None, None, [Num(0, lineno=251, col_offset=53)]), [FunctionDef('_shelf_callback', arguments([Name('priKey', Param(), lineno=252, col_offset=28), Name('priData', Param(), lineno=252, col_offset=36), Name('realCallback', Param(), lineno=252, col_offset=45)], None, None, [Name('callback', Load(), lineno=252, col_offset=58)]), [If(BoolOp(Or(), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=254, col_offset=15), 'version_info', Load(), lineno=254, col_offset=15), Index(Num(0, lineno=254, col_offset=32)), Load(), lineno=254, col_offset=15), [Lt()], [Num(3, lineno=254, col_offset=37)], lineno=254, col_offset=15), Call(Name('isinstance', Load(), lineno=254, col_offset=42), [Name('priData', Load(), lineno=254, col_offset=53), Name('bytes', Load(), lineno=254, col_offset=62)], [], None, None, lineno=254, col_offset=42)], lineno=254, col_offset=15), [Assign([Name('data', Store(), lineno=255, col_offset=16)], Call(Attribute(Name('cPickle', Load(), lineno=255, col_offset=23), 'loads', Load(), lineno=255, col_offset=23), [Name('priData', Load(), lineno=255, col_offset=37)], [], None, None, lineno=255, col_offset=23), lineno=255, col_offset=16)], [Assign([Name('data', Store(), lineno=257, col_offset=16)], Call(Attribute(Name('cPickle', Load(), lineno=257, col_offset=23), 'loads', Load(), lineno=257, col_offset=23), [Call(Name('bytes', Load(), lineno=257, col_offset=37), [Name('priData', Load(), lineno=257, col_offset=43), Str('iso8859-1', lineno=257, col_offset=52)], [], None, None, lineno=257, col_offset=37)], [], None, None, lineno=257, col_offset=23), lineno=257, col_offset=16)], lineno=254, col_offset=12), Return(Call(Name('realCallback', Load(), lineno=258, col_offset=19), [Name('priKey', Load(), lineno=258, col_offset=32), Name('data', Load(), lineno=258, col_offset=40)], [], None, None, lineno=258, col_offset=19), lineno=258, col_offset=12)], [], lineno=252, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=260, col_offset=15), 'db', Load(), lineno=260, col_offset=15), 'associate', Load(), lineno=260, col_offset=15), [Name('secondaryDB', Load(), lineno=260, col_offset=33), Name('_shelf_callback', Load(), lineno=260, col_offset=46), Name('flags', Load(), lineno=260, col_offset=63)], [], None, None, lineno=260, col_offset=15), lineno=260, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=264, col_offset=12)], 'args', 'kw', []), [Assign([Name('data', Store(), lineno=269, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=269, col_offset=15), 'db', Load(), lineno=269, col_offset=15), 'get', Load(), lineno=269, col_offset=15), [], [], Name('args', Load(), lineno=269, col_offset=28), Name('kw', Load(), lineno=269, col_offset=36), lineno=269, col_offset=15), lineno=269, col_offset=8), TryExcept([Return(Call(Attribute(Name('cPickle', Load(), lineno=271, col_offset=19), 'loads', Load(), lineno=271, col_offset=19), [Name('data', Load(), lineno=271, col_offset=33)], [], None, None, lineno=271, col_offset=19), lineno=271, col_offset=12)], [ExceptHandler(Tuple([Name('EOFError', Load(), lineno=272, col_offset=16), Name('TypeError', Load(), lineno=272, col_offset=26), Attribute(Name('cPickle', Load(), lineno=272, col_offset=37), 'UnpicklingError', Load(), lineno=272, col_offset=37)], Load(), lineno=272, col_offset=16), None, [Return(Name('data', Load(), lineno=273, col_offset=19), lineno=273, col_offset=12)], lineno=272, col_offset=8)], [], lineno=270, col_offset=8)], [], lineno=264, col_offset=4), FunctionDef('get_both', arguments([Name('self', Param(), lineno=276, col_offset=17), Name('key', Param(), lineno=276, col_offset=23), Name('value', Param(), lineno=276, col_offset=28), Name('txn', Param(), lineno=276, col_offset=35), Name('flags', Param(), lineno=276, col_offset=45)], None, None, [Name('None', Load(), lineno=276, col_offset=39), Num(0, lineno=276, col_offset=51)]), [Assign([Name('data', Store(), lineno=277, col_offset=8)], Call(Name('_dumps', Load(), lineno=277, col_offset=15), [Name('value', Load(), lineno=277, col_offset=22), Attribute(Name('self', Load(), lineno=277, col_offset=29), 'protocol', Load(), lineno=277, col_offset=29)], [], None, None, lineno=277, col_offset=15), lineno=277, col_offset=8), Assign([Name('data', Store(), lineno=278, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=278, col_offset=15), 'db', Load(), lineno=278, col_offset=15), 'get', Load(), lineno=278, col_offset=15), [Name('key', Load(), lineno=278, col_offset=27), Name('data', Load(), lineno=278, col_offset=32), Name('txn', Load(), lineno=278, col_offset=38), Name('flags', Load(), lineno=278, col_offset=43)], [], None, None, lineno=278, col_offset=15), lineno=278, col_offset=8), Return(Call(Attribute(Name('cPickle', Load(), lineno=279, col_offset=15), 'loads', Load(), lineno=279, col_offset=15), [Name('data', Load(), lineno=279, col_offset=29)], [], None, None, lineno=279, col_offset=15), lineno=279, col_offset=8)], [], lineno=276, col_offset=4), FunctionDef('cursor', arguments([Name('self', Param(), lineno=282, col_offset=15), Name('txn', Param(), lineno=282, col_offset=21), Name('flags', Param(), lineno=282, col_offset=31)], None, None, [Name('None', Load(), lineno=282, col_offset=25), Num(0, lineno=282, col_offset=37)]), [Assign([Name('c', Store(), lineno=283, col_offset=8)], Call(Name('DBShelfCursor', Load(), lineno=283, col_offset=12), [Call(Attribute(Attribute(Name('self', Load(), lineno=283, col_offset=26), 'db', Load(), lineno=283, col_offset=26), 'cursor', Load(), lineno=283, col_offset=26), [Name('txn', Load(), lineno=283, col_offset=41), Name('flags', Load(), lineno=283, col_offset=46)], [], None, None, lineno=283, col_offset=26)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=8), Assign([Attribute(Name('c', Load(), lineno=284, col_offset=8), 'protocol', Store(), lineno=284, col_offset=8)], Attribute(Name('self', Load(), lineno=284, col_offset=21), 'protocol', Load(), lineno=284, col_offset=21), lineno=284, col_offset=8), Return(Name('c', Load(), lineno=285, col_offset=15), lineno=285, col_offset=8)], [], lineno=282, col_offset=4), FunctionDef('put', arguments([Name('self', Param(), lineno=288, col_offset=12), Name('key', Param(), lineno=288, col_offset=18), Name('value', Param(), lineno=288, col_offset=23), Name('txn', Param(), lineno=288, col_offset=30), Name('flags', Param(), lineno=288, col_offset=40)], None, None, [Name('None', Load(), lineno=288, col_offset=34), Num(0, lineno=288, col_offset=46)]), [Assign([Name('data', Store(), lineno=289, col_offset=8)], Call(Name('_dumps', Load(), lineno=289, col_offset=15), [Name('value', Load(), lineno=289, col_offset=22), Attribute(Name('self', Load(), lineno=289, col_offset=29), 'protocol', Load(), lineno=289, col_offset=29)], [], None, None, lineno=289, col_offset=15), lineno=289, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=290, col_offset=15), 'db', Load(), lineno=290, col_offset=15), 'put', Load(), lineno=290, col_offset=15), [Name('key', Load(), lineno=290, col_offset=27), Name('data', Load(), lineno=290, col_offset=32), Name('txn', Load(), lineno=290, col_offset=38), Name('flags', Load(), lineno=290, col_offset=43)], [], None, None, lineno=290, col_offset=15), lineno=290, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('join', arguments([Name('self', Param(), lineno=293, col_offset=13), Name('cursorList', Param(), lineno=293, col_offset=19), Name('flags', Param(), lineno=293, col_offset=31)], None, None, [Num(0, lineno=293, col_offset=37)]), [Raise(Name('NotImplementedError', Load(), lineno=294, col_offset=14), None, None, lineno=294, col_offset=8)], [], lineno=293, col_offset=4)], [], lineno=139, col_offset=0), ClassDef('DBShelfCursor', [], [Expr(Str('\n    ', lineno=309, col_offset=-1), lineno=309, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=310, col_offset=17), Name('cursor', Param(), lineno=310, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=311, col_offset=8), 'dbc', Store(), lineno=311, col_offset=8)], Name('cursor', Load(), lineno=311, col_offset=19), lineno=311, col_offset=8)], [], lineno=310, col_offset=4), FunctionDef('__del__', arguments([Name('self', Param(), lineno=313, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'close', Load(), lineno=314, col_offset=8), [], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=317, col_offset=20), Name('name', Param(), lineno=317, col_offset=26)], None, None, []), [Expr(Str('Some methods we can just pass through to the cursor object.  (See below)', lineno=318, col_offset=8), lineno=318, col_offset=8), Return(Call(Name('getattr', Load(), lineno=319, col_offset=15), [Attribute(Name('self', Load(), lineno=319, col_offset=23), 'dbc', Load(), lineno=319, col_offset=23), Name('name', Load(), lineno=319, col_offset=33)], [], None, None, lineno=319, col_offset=15), lineno=319, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('dup', arguments([Name('self', Param(), lineno=324, col_offset=12), Name('flags', Param(), lineno=324, col_offset=18)], None, None, [Num(0, lineno=324, col_offset=24)]), [Assign([Name('c', Store(), lineno=325, col_offset=8)], Call(Name('DBShelfCursor', Load(), lineno=325, col_offset=12), [Call(Attribute(Attribute(Name('self', Load(), lineno=325, col_offset=26), 'dbc', Load(), lineno=325, col_offset=26), 'dup', Load(), lineno=325, col_offset=26), [Name('flags', Load(), lineno=325, col_offset=39)], [], None, None, lineno=325, col_offset=26)], [], None, None, lineno=325, col_offset=12), lineno=325, col_offset=8), Assign([Attribute(Name('c', Load(), lineno=326, col_offset=8), 'protocol', Store(), lineno=326, col_offset=8)], Attribute(Name('self', Load(), lineno=326, col_offset=21), 'protocol', Load(), lineno=326, col_offset=21), lineno=326, col_offset=8), Return(Name('c', Load(), lineno=327, col_offset=15), lineno=327, col_offset=8)], [], lineno=324, col_offset=4), FunctionDef('put', arguments([Name('self', Param(), lineno=330, col_offset=12), Name('key', Param(), lineno=330, col_offset=18), Name('value', Param(), lineno=330, col_offset=23), Name('flags', Param(), lineno=330, col_offset=30)], None, None, [Num(0, lineno=330, col_offset=36)]), [Assign([Name('data', Store(), lineno=331, col_offset=8)], Call(Name('_dumps', Load(), lineno=331, col_offset=15), [Name('value', Load(), lineno=331, col_offset=22), Attribute(Name('self', Load(), lineno=331, col_offset=29), 'protocol', Load(), lineno=331, col_offset=29)], [], None, None, lineno=331, col_offset=15), lineno=331, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=332, col_offset=15), 'dbc', Load(), lineno=332, col_offset=15), 'put', Load(), lineno=332, col_offset=15), [Name('key', Load(), lineno=332, col_offset=28), Name('data', Load(), lineno=332, col_offset=33), Name('flags', Load(), lineno=332, col_offset=39)], [], None, None, lineno=332, col_offset=15), lineno=332, col_offset=8)], [], lineno=330, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=335, col_offset=12)], 'args', None, []), [Assign([Name('count', Store(), lineno=336, col_offset=8)], Call(Name('len', Load(), lineno=336, col_offset=16), [Name('args', Load(), lineno=336, col_offset=20)], [], None, None, lineno=336, col_offset=16), lineno=336, col_offset=8), Assign([Name('method', Store(), lineno=337, col_offset=8)], Call(Name('getattr', Load(), lineno=337, col_offset=17), [Name('self', Load(), lineno=337, col_offset=25), BinOp(Str('get_%d', lineno=337, col_offset=31), Mod(), Name('count', Load(), lineno=337, col_offset=42), lineno=337, col_offset=31)], [], None, None, lineno=337, col_offset=17), lineno=337, col_offset=8), Expr(Call(Name('method', Load(), lineno=338, col_offset=8), [], [], Name('args', Load(), lineno=338, col_offset=16), None, lineno=338, col_offset=8), lineno=338, col_offset=8)], [], lineno=335, col_offset=4), FunctionDef('get_1', arguments([Name('self', Param(), lineno=340, col_offset=14), Name('flags', Param(), lineno=340, col_offset=20)], None, None, []), [Assign([Name('rec', Store(), lineno=341, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=341, col_offset=14), 'dbc', Load(), lineno=341, col_offset=14), 'get', Load(), lineno=341, col_offset=14), [Name('flags', Load(), lineno=341, col_offset=27)], [], None, None, lineno=341, col_offset=14), lineno=341, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=342, col_offset=15), '_extract', Load(), lineno=342, col_offset=15), [Name('rec', Load(), lineno=342, col_offset=29)], [], None, None, lineno=342, col_offset=15), lineno=342, col_offset=8)], [], lineno=340, col_offset=4), FunctionDef('get_2', arguments([Name('self', Param(), lineno=344, col_offset=14), Name('key', Param(), lineno=344, col_offset=20), Name('flags', Param(), lineno=344, col_offset=25)], None, None, []), [Assign([Name('rec', Store(), lineno=345, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=345, col_offset=14), 'dbc', Load(), lineno=345, col_offset=14), 'get', Load(), lineno=345, col_offset=14), [Name('key', Load(), lineno=345, col_offset=27), Name('flags', Load(), lineno=345, col_offset=32)], [], None, None, lineno=345, col_offset=14), lineno=345, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=346, col_offset=15), '_extract', Load(), lineno=346, col_offset=15), [Name('rec', Load(), lineno=346, col_offset=29)], [], None, None, lineno=346, col_offset=15), lineno=346, col_offset=8)], [], lineno=344, col_offset=4), FunctionDef('get_3', arguments([Name('self', Param(), lineno=348, col_offset=14), Name('key', Param(), lineno=348, col_offset=20), Name('value', Param(), lineno=348, col_offset=25), Name('flags', Param(), lineno=348, col_offset=32)], None, None, []), [Assign([Name('data', Store(), lineno=349, col_offset=8)], Call(Name('_dumps', Load(), lineno=349, col_offset=15), [Name('value', Load(), lineno=349, col_offset=22), Attribute(Name('self', Load(), lineno=349, col_offset=29), 'protocol', Load(), lineno=349, col_offset=29)], [], None, None, lineno=349, col_offset=15), lineno=349, col_offset=8), Assign([Name('rec', Store(), lineno=350, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=350, col_offset=14), 'dbc', Load(), lineno=350, col_offset=14), 'get', Load(), lineno=350, col_offset=14), [Name('key', Load(), lineno=350, col_offset=27), Name('flags', Load(), lineno=350, col_offset=32)], [], None, None, lineno=350, col_offset=14), lineno=350, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=351, col_offset=15), '_extract', Load(), lineno=351, col_offset=15), [Name('rec', Load(), lineno=351, col_offset=29)], [], None, None, lineno=351, col_offset=15), lineno=351, col_offset=8)], [], lineno=348, col_offset=4), FunctionDef('current', arguments([Name('self', Param(), lineno=354, col_offset=16), Name('flags', Param(), lineno=354, col_offset=22)], None, None, [Num(0, lineno=354, col_offset=28)]), [Return(Call(Attribute(Name('self', Load(), lineno=354, col_offset=39), 'get_1', Load(), lineno=354, col_offset=39), [BinOp(Name('flags', Load(), lineno=354, col_offset=50), BitOr(), Attribute(Name('db', Load(), lineno=354, col_offset=56), 'DB_CURRENT', Load(), lineno=354, col_offset=56), lineno=354, col_offset=50)], [], None, None, lineno=354, col_offset=39), lineno=354, col_offset=32)], [], lineno=354, col_offset=4), FunctionDef('first', arguments([Name('self', Param(), lineno=355, col_offset=14), Name('flags', Param(), lineno=355, col_offset=20)], None, None, [Num(0, lineno=355, col_offset=26)]), [Return(Call(Attribute(Name('self', Load(), lineno=355, col_offset=37), 'get_1', Load(), lineno=355, col_offset=37), [BinOp(Name('flags', Load(), lineno=355, col_offset=48), BitOr(), Attribute(Name('db', Load(), lineno=355, col_offset=54), 'DB_FIRST', Load(), lineno=355, col_offset=54), lineno=355, col_offset=48)], [], None, None, lineno=355, col_offset=37), lineno=355, col_offset=30)], [], lineno=355, col_offset=4), FunctionDef('last', arguments([Name('self', Param(), lineno=356, col_offset=13), Name('flags', Param(), lineno=356, col_offset=19)], None, None, [Num(0, lineno=356, col_offset=25)]), [Return(Call(Attribute(Name('self', Load(), lineno=356, col_offset=36), 'get_1', Load(), lineno=356, col_offset=36), [BinOp(Name('flags', Load(), lineno=356, col_offset=47), BitOr(), Attribute(Name('db', Load(), lineno=356, col_offset=53), 'DB_LAST', Load(), lineno=356, col_offset=53), lineno=356, col_offset=47)], [], None, None, lineno=356, col_offset=36), lineno=356, col_offset=29)], [], lineno=356, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=357, col_offset=13), Name('flags', Param(), lineno=357, col_offset=19)], None, None, [Num(0, lineno=357, col_offset=25)]), [Return(Call(Attribute(Name('self', Load(), lineno=357, col_offset=36), 'get_1', Load(), lineno=357, col_offset=36), [BinOp(Name('flags', Load(), lineno=357, col_offset=47), BitOr(), Attribute(Name('db', Load(), lineno=357, col_offset=53), 'DB_NEXT', Load(), lineno=357, col_offset=53), lineno=357, col_offset=47)], [], None, None, lineno=357, col_offset=36), lineno=357, col_offset=29)], [], lineno=357, col_offset=4), FunctionDef('prev', arguments([Name('self', Param(), lineno=358, col_offset=13), Name('flags', Param(), lineno=358, col_offset=19)], None, None, [Num(0, lineno=358, col_offset=25)]), [Return(Call(Attribute(Name('self', Load(), lineno=358, col_offset=36), 'get_1', Load(), lineno=358, col_offset=36), [BinOp(Name('flags', Load(), lineno=358, col_offset=47), BitOr(), Attribute(Name('db', Load(), lineno=358, col_offset=53), 'DB_PREV', Load(), lineno=358, col_offset=53), lineno=358, col_offset=47)], [], None, None, lineno=358, col_offset=36), lineno=358, col_offset=29)], [], lineno=358, col_offset=4), FunctionDef('consume', arguments([Name('self', Param(), lineno=359, col_offset=16), Name('flags', Param(), lineno=359, col_offset=22)], None, None, [Num(0, lineno=359, col_offset=28)]), [Return(Call(Attribute(Name('self', Load(), lineno=359, col_offset=39), 'get_1', Load(), lineno=359, col_offset=39), [BinOp(Name('flags', Load(), lineno=359, col_offset=50), BitOr(), Attribute(Name('db', Load(), lineno=359, col_offset=56), 'DB_CONSUME', Load(), lineno=359, col_offset=56), lineno=359, col_offset=50)], [], None, None, lineno=359, col_offset=39), lineno=359, col_offset=32)], [], lineno=359, col_offset=4), FunctionDef('next_dup', arguments([Name('self', Param(), lineno=360, col_offset=17), Name('flags', Param(), lineno=360, col_offset=23)], None, None, [Num(0, lineno=360, col_offset=29)]), [Return(Call(Attribute(Name('self', Load(), lineno=360, col_offset=40), 'get_1', Load(), lineno=360, col_offset=40), [BinOp(Name('flags', Load(), lineno=360, col_offset=51), BitOr(), Attribute(Name('db', Load(), lineno=360, col_offset=57), 'DB_NEXT_DUP', Load(), lineno=360, col_offset=57), lineno=360, col_offset=51)], [], None, None, lineno=360, col_offset=40), lineno=360, col_offset=33)], [], lineno=360, col_offset=4), FunctionDef('next_nodup', arguments([Name('self', Param(), lineno=361, col_offset=19), Name('flags', Param(), lineno=361, col_offset=25)], None, None, [Num(0, lineno=361, col_offset=31)]), [Return(Call(Attribute(Name('self', Load(), lineno=361, col_offset=42), 'get_1', Load(), lineno=361, col_offset=42), [BinOp(Name('flags', Load(), lineno=361, col_offset=53), BitOr(), Attribute(Name('db', Load(), lineno=361, col_offset=59), 'DB_NEXT_NODUP', Load(), lineno=361, col_offset=59), lineno=361, col_offset=53)], [], None, None, lineno=361, col_offset=42), lineno=361, col_offset=35)], [], lineno=361, col_offset=4), FunctionDef('prev_nodup', arguments([Name('self', Param(), lineno=362, col_offset=19), Name('flags', Param(), lineno=362, col_offset=25)], None, None, [Num(0, lineno=362, col_offset=31)]), [Return(Call(Attribute(Name('self', Load(), lineno=362, col_offset=42), 'get_1', Load(), lineno=362, col_offset=42), [BinOp(Name('flags', Load(), lineno=362, col_offset=53), BitOr(), Attribute(Name('db', Load(), lineno=362, col_offset=59), 'DB_PREV_NODUP', Load(), lineno=362, col_offset=59), lineno=362, col_offset=53)], [], None, None, lineno=362, col_offset=42), lineno=362, col_offset=35)], [], lineno=362, col_offset=4), FunctionDef('get_both', arguments([Name('self', Param(), lineno=365, col_offset=17), Name('key', Param(), lineno=365, col_offset=23), Name('value', Param(), lineno=365, col_offset=28), Name('flags', Param(), lineno=365, col_offset=35)], None, None, [Num(0, lineno=365, col_offset=41)]), [Assign([Name('data', Store(), lineno=366, col_offset=8)], Call(Name('_dumps', Load(), lineno=366, col_offset=15), [Name('value', Load(), lineno=366, col_offset=22), Attribute(Name('self', Load(), lineno=366, col_offset=29), 'protocol', Load(), lineno=366, col_offset=29)], [], None, None, lineno=366, col_offset=15), lineno=366, col_offset=8), Assign([Name('rec', Store(), lineno=367, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=367, col_offset=14), 'dbc', Load(), lineno=367, col_offset=14), 'get_both', Load(), lineno=367, col_offset=14), [Name('key', Load(), lineno=367, col_offset=32), Name('flags', Load(), lineno=367, col_offset=37)], [], None, None, lineno=367, col_offset=14), lineno=367, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=368, col_offset=15), '_extract', Load(), lineno=368, col_offset=15), [Name('rec', Load(), lineno=368, col_offset=29)], [], None, None, lineno=368, col_offset=15), lineno=368, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=371, col_offset=12), Name('key', Param(), lineno=371, col_offset=18), Name('flags', Param(), lineno=371, col_offset=23)], None, None, [Num(0, lineno=371, col_offset=29)]), [Assign([Name('rec', Store(), lineno=372, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=372, col_offset=14), 'dbc', Load(), lineno=372, col_offset=14), 'set', Load(), lineno=372, col_offset=14), [Name('key', Load(), lineno=372, col_offset=27), Name('flags', Load(), lineno=372, col_offset=32)], [], None, None, lineno=372, col_offset=14), lineno=372, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=373, col_offset=15), '_extract', Load(), lineno=373, col_offset=15), [Name('rec', Load(), lineno=373, col_offset=29)], [], None, None, lineno=373, col_offset=15), lineno=373, col_offset=8)], [], lineno=371, col_offset=4), FunctionDef('set_range', arguments([Name('self', Param(), lineno=375, col_offset=18), Name('key', Param(), lineno=375, col_offset=24), Name('flags', Param(), lineno=375, col_offset=29)], None, None, [Num(0, lineno=375, col_offset=35)]), [Assign([Name('rec', Store(), lineno=376, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=376, col_offset=14), 'dbc', Load(), lineno=376, col_offset=14), 'set_range', Load(), lineno=376, col_offset=14), [Name('key', Load(), lineno=376, col_offset=33), Name('flags', Load(), lineno=376, col_offset=38)], [], None, None, lineno=376, col_offset=14), lineno=376, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=377, col_offset=15), '_extract', Load(), lineno=377, col_offset=15), [Name('rec', Load(), lineno=377, col_offset=29)], [], None, None, lineno=377, col_offset=15), lineno=377, col_offset=8)], [], lineno=375, col_offset=4), FunctionDef('set_recno', arguments([Name('self', Param(), lineno=379, col_offset=18), Name('recno', Param(), lineno=379, col_offset=24), Name('flags', Param(), lineno=379, col_offset=31)], None, None, [Num(0, lineno=379, col_offset=37)]), [Assign([Name('rec', Store(), lineno=380, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=380, col_offset=14), 'dbc', Load(), lineno=380, col_offset=14), 'set_recno', Load(), lineno=380, col_offset=14), [Name('recno', Load(), lineno=380, col_offset=33), Name('flags', Load(), lineno=380, col_offset=40)], [], None, None, lineno=380, col_offset=14), lineno=380, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=381, col_offset=15), '_extract', Load(), lineno=381, col_offset=15), [Name('rec', Load(), lineno=381, col_offset=29)], [], None, None, lineno=381, col_offset=15), lineno=381, col_offset=8)], [], lineno=379, col_offset=4), Assign([Name('set_both', Store(), lineno=383, col_offset=4)], Name('get_both', Load(), lineno=383, col_offset=15), lineno=383, col_offset=4), FunctionDef('_extract', arguments([Name('self', Param(), lineno=385, col_offset=17), Name('rec', Param(), lineno=385, col_offset=23)], None, None, []), [If(Compare(Name('rec', Load(), lineno=386, col_offset=11), [Is()], [Name('None', Load(), lineno=386, col_offset=18)], lineno=386, col_offset=11), [Return(Name('None', Load(), lineno=387, col_offset=19), lineno=387, col_offset=12)], [Assign([Tuple([Name('key', Store(), lineno=389, col_offset=12), Name('data', Store(), lineno=389, col_offset=17)], Store(), lineno=389, col_offset=12)], Name('rec', Load(), lineno=389, col_offset=24), lineno=389, col_offset=12), If(BoolOp(Or(), [Compare(Subscript(Attribute(Name('sys', Load(), lineno=391, col_offset=15), 'version_info', Load(), lineno=391, col_offset=15), Index(Num(0, lineno=391, col_offset=32)), Load(), lineno=391, col_offset=15), [Lt()], [Num(3, lineno=391, col_offset=37)], lineno=391, col_offset=15), Call(Name('isinstance', Load(), lineno=391, col_offset=42), [Name('data', Load(), lineno=391, col_offset=53), Name('bytes', Load(), lineno=391, col_offset=59)], [], None, None, lineno=391, col_offset=42)], lineno=391, col_offset=15), [Return(Tuple([Name('key', Load(), lineno=392, col_offset=23), Call(Attribute(Name('cPickle', Load(), lineno=392, col_offset=28), 'loads', Load(), lineno=392, col_offset=28), [Name('data', Load(), lineno=392, col_offset=42)], [], None, None, lineno=392, col_offset=28)], Load(), lineno=392, col_offset=23), lineno=392, col_offset=16)], [Return(Tuple([Name('key', Load(), lineno=394, col_offset=23), Call(Attribute(Name('cPickle', Load(), lineno=394, col_offset=28), 'loads', Load(), lineno=394, col_offset=28), [Call(Name('bytes', Load(), lineno=394, col_offset=42), [Name('data', Load(), lineno=394, col_offset=48), Str('iso8859-1', lineno=394, col_offset=54)], [], None, None, lineno=394, col_offset=42)], [], None, None, lineno=394, col_offset=28)], Load(), lineno=394, col_offset=23), lineno=394, col_offset=16)], lineno=391, col_offset=12)], lineno=386, col_offset=8)], [], lineno=385, col_offset=4)], [], lineno=307, col_offset=0)])
