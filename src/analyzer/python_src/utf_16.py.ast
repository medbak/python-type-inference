Module([Expr(Str(" Python 'utf-16' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n", lineno=8, col_offset=-1), lineno=8, col_offset=-1), Import([alias('codecs', None), alias('sys', None)], lineno=9, col_offset=0), Assign([Name('encode', Store(), lineno=13, col_offset=0)], Attribute(Name('codecs', Load(), lineno=13, col_offset=9), 'utf_16_encode', Load(), lineno=13, col_offset=9), lineno=13, col_offset=0), FunctionDef('decode', arguments([Name('input', Param(), lineno=15, col_offset=11), Name('errors', Param(), lineno=15, col_offset=18)], None, None, [Str('strict', lineno=15, col_offset=25)]), [Return(Call(Attribute(Name('codecs', Load(), lineno=16, col_offset=11), 'utf_16_decode', Load(), lineno=16, col_offset=11), [Name('input', Load(), lineno=16, col_offset=32), Name('errors', Load(), lineno=16, col_offset=39), Name('True', Load(), lineno=16, col_offset=47)], [], None, None, lineno=16, col_offset=11), lineno=16, col_offset=4)], [], lineno=15, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=18, col_offset=25), 'IncrementalEncoder', Load(), lineno=18, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=19, col_offset=17), Name('errors', Param(), lineno=19, col_offset=23)], None, None, [Str('strict', lineno=19, col_offset=30)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=20, col_offset=8), 'IncrementalEncoder', Load(), lineno=20, col_offset=8), '__init__', Load(), lineno=20, col_offset=8), [Name('self', Load(), lineno=20, col_offset=43), Name('errors', Load(), lineno=20, col_offset=49)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=21, col_offset=8), 'encoder', Store(), lineno=21, col_offset=8)], Name('None', Load(), lineno=21, col_offset=23), lineno=21, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=23, col_offset=15), Name('input', Param(), lineno=23, col_offset=21), Name('final', Param(), lineno=23, col_offset=28)], None, None, [Name('False', Load(), lineno=23, col_offset=34)]), [If(Compare(Attribute(Name('self', Load(), lineno=24, col_offset=11), 'encoder', Load(), lineno=24, col_offset=11), [Is()], [Name('None', Load(), lineno=24, col_offset=27)], lineno=24, col_offset=11), [Assign([Name('result', Store(), lineno=25, col_offset=12)], Subscript(Call(Attribute(Name('codecs', Load(), lineno=25, col_offset=21), 'utf_16_encode', Load(), lineno=25, col_offset=21), [Name('input', Load(), lineno=25, col_offset=42), Attribute(Name('self', Load(), lineno=25, col_offset=49), 'errors', Load(), lineno=25, col_offset=49)], [], None, None, lineno=25, col_offset=21), Index(Num(0, lineno=25, col_offset=62)), Load(), lineno=25, col_offset=21), lineno=25, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=26, col_offset=15), 'byteorder', Load(), lineno=26, col_offset=15), [Eq()], [Str('little', lineno=26, col_offset=32)], lineno=26, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=27, col_offset=16), 'encoder', Store(), lineno=27, col_offset=16)], Attribute(Name('codecs', Load(), lineno=27, col_offset=31), 'utf_16_le_encode', Load(), lineno=27, col_offset=31), lineno=27, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=29, col_offset=16), 'encoder', Store(), lineno=29, col_offset=16)], Attribute(Name('codecs', Load(), lineno=29, col_offset=31), 'utf_16_be_encode', Load(), lineno=29, col_offset=31), lineno=29, col_offset=16)], lineno=26, col_offset=12), Return(Name('result', Load(), lineno=30, col_offset=19), lineno=30, col_offset=12)], [], lineno=24, col_offset=8), Return(Subscript(Call(Attribute(Name('self', Load(), lineno=31, col_offset=15), 'encoder', Load(), lineno=31, col_offset=15), [Name('input', Load(), lineno=31, col_offset=28), Attribute(Name('self', Load(), lineno=31, col_offset=35), 'errors', Load(), lineno=31, col_offset=35)], [], None, None, lineno=31, col_offset=15), Index(Num(0, lineno=31, col_offset=48)), Load(), lineno=31, col_offset=15), lineno=31, col_offset=8)], [], lineno=23, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=33, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=34, col_offset=8), 'IncrementalEncoder', Load(), lineno=34, col_offset=8), 'reset', Load(), lineno=34, col_offset=8), [Name('self', Load(), lineno=34, col_offset=40)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'encoder', Store(), lineno=35, col_offset=8)], Name('None', Load(), lineno=35, col_offset=23), lineno=35, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('getstate', arguments([Name('self', Param(), lineno=37, col_offset=17)], None, None, []), [Return(IfExp(Compare(Attribute(Name('self', Load(), lineno=42, col_offset=21), 'encoder', Load(), lineno=42, col_offset=21), [Is()], [Name('None', Load(), lineno=42, col_offset=37)], lineno=42, col_offset=21), Num(2, lineno=42, col_offset=16), Num(0, lineno=42, col_offset=47), lineno=42, col_offset=16), lineno=42, col_offset=8)], [], lineno=37, col_offset=4), FunctionDef('setstate', arguments([Name('self', Param(), lineno=44, col_offset=17), Name('state', Param(), lineno=44, col_offset=23)], None, None, []), [If(Name('state', Load(), lineno=45, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=46, col_offset=12), 'encoder', Store(), lineno=46, col_offset=12)], Name('None', Load(), lineno=46, col_offset=27), lineno=46, col_offset=12)], [If(Compare(Attribute(Name('sys', Load(), lineno=48, col_offset=15), 'byteorder', Load(), lineno=48, col_offset=15), [Eq()], [Str('little', lineno=48, col_offset=32)], lineno=48, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=49, col_offset=16), 'encoder', Store(), lineno=49, col_offset=16)], Attribute(Name('codecs', Load(), lineno=49, col_offset=31), 'utf_16_le_encode', Load(), lineno=49, col_offset=31), lineno=49, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=51, col_offset=16), 'encoder', Store(), lineno=51, col_offset=16)], Attribute(Name('codecs', Load(), lineno=51, col_offset=31), 'utf_16_be_encode', Load(), lineno=51, col_offset=31), lineno=51, col_offset=16)], lineno=48, col_offset=12)], lineno=45, col_offset=8)], [], lineno=44, col_offset=4)], [], lineno=18, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=53, col_offset=25), 'BufferedIncrementalDecoder', Load(), lineno=53, col_offset=25)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=54, col_offset=17), Name('errors', Param(), lineno=54, col_offset=23)], None, None, [Str('strict', lineno=54, col_offset=30)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=55, col_offset=8), 'BufferedIncrementalDecoder', Load(), lineno=55, col_offset=8), '__init__', Load(), lineno=55, col_offset=8), [Name('self', Load(), lineno=55, col_offset=51), Name('errors', Load(), lineno=55, col_offset=57)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=56, col_offset=8), 'decoder', Store(), lineno=56, col_offset=8)], Name('None', Load(), lineno=56, col_offset=23), lineno=56, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('_buffer_decode', arguments([Name('self', Param(), lineno=58, col_offset=23), Name('input', Param(), lineno=58, col_offset=29), Name('errors', Param(), lineno=58, col_offset=36), Name('final', Param(), lineno=58, col_offset=44)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=59, col_offset=11), 'decoder', Load(), lineno=59, col_offset=11), [Is()], [Name('None', Load(), lineno=59, col_offset=27)], lineno=59, col_offset=11), [Assign([Tuple([Name('output', Store(), lineno=60, col_offset=13), Name('consumed', Store(), lineno=60, col_offset=21), Name('byteorder', Store(), lineno=60, col_offset=31)], Store(), lineno=60, col_offset=13)], Call(Attribute(Name('codecs', Load(), lineno=61, col_offset=16), 'utf_16_ex_decode', Load(), lineno=61, col_offset=16), [Name('input', Load(), lineno=61, col_offset=40), Name('errors', Load(), lineno=61, col_offset=47), Num(0, lineno=61, col_offset=55), Name('final', Load(), lineno=61, col_offset=58)], [], None, None, lineno=61, col_offset=16), lineno=60, col_offset=12), If(Compare(Name('byteorder', Load(), lineno=62, col_offset=15), [Eq()], [Num(-1, lineno=62, col_offset=29)], lineno=62, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=63, col_offset=16), 'decoder', Store(), lineno=63, col_offset=16)], Attribute(Name('codecs', Load(), lineno=63, col_offset=31), 'utf_16_le_decode', Load(), lineno=63, col_offset=31), lineno=63, col_offset=16)], [If(Compare(Name('byteorder', Load(), lineno=64, col_offset=17), [Eq()], [Num(1, lineno=64, col_offset=30)], lineno=64, col_offset=17), [Assign([Attribute(Name('self', Load(), lineno=65, col_offset=16), 'decoder', Store(), lineno=65, col_offset=16)], Attribute(Name('codecs', Load(), lineno=65, col_offset=31), 'utf_16_be_decode', Load(), lineno=65, col_offset=31), lineno=65, col_offset=16)], [If(Compare(Name('consumed', Load(), lineno=66, col_offset=17), [GtE()], [Num(2, lineno=66, col_offset=29)], lineno=66, col_offset=17), [Raise(Call(Name('UnicodeError', Load(), lineno=67, col_offset=22), [Str('UTF-16 stream does not start with BOM', lineno=67, col_offset=35)], [], None, None, lineno=67, col_offset=22), None, None, lineno=67, col_offset=16)], [], lineno=66, col_offset=17)], lineno=64, col_offset=17)], lineno=62, col_offset=12), Return(Tuple([Name('output', Load(), lineno=68, col_offset=20), Name('consumed', Load(), lineno=68, col_offset=28)], Load(), lineno=68, col_offset=20), lineno=68, col_offset=12)], [], lineno=59, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=69, col_offset=15), 'decoder', Load(), lineno=69, col_offset=15), [Name('input', Load(), lineno=69, col_offset=28), Attribute(Name('self', Load(), lineno=69, col_offset=35), 'errors', Load(), lineno=69, col_offset=35), Name('final', Load(), lineno=69, col_offset=48)], [], None, None, lineno=69, col_offset=15), lineno=69, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=71, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=72, col_offset=8), 'BufferedIncrementalDecoder', Load(), lineno=72, col_offset=8), 'reset', Load(), lineno=72, col_offset=8), [Name('self', Load(), lineno=72, col_offset=48)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=73, col_offset=8), 'decoder', Store(), lineno=73, col_offset=8)], Name('None', Load(), lineno=73, col_offset=23), lineno=73, col_offset=8)], [], lineno=71, col_offset=4)], [], lineno=53, col_offset=0), ClassDef('StreamWriter', [Attribute(Name('codecs', Load(), lineno=75, col_offset=19), 'StreamWriter', Load(), lineno=75, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=76, col_offset=17), Name('stream', Param(), lineno=76, col_offset=23), Name('errors', Param(), lineno=76, col_offset=31)], None, None, [Str('strict', lineno=76, col_offset=38)]), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=77, col_offset=8), 'StreamWriter', Load(), lineno=77, col_offset=8), '__init__', Load(), lineno=77, col_offset=8), [Name('self', Load(), lineno=77, col_offset=37), Name('stream', Load(), lineno=77, col_offset=43), Name('errors', Load(), lineno=77, col_offset=51)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=78, col_offset=8), 'encoder', Store(), lineno=78, col_offset=8)], Name('None', Load(), lineno=78, col_offset=23), lineno=78, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=80, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=81, col_offset=8), 'StreamWriter', Load(), lineno=81, col_offset=8), 'reset', Load(), lineno=81, col_offset=8), [Name('self', Load(), lineno=81, col_offset=34)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=82, col_offset=8), 'encoder', Store(), lineno=82, col_offset=8)], Name('None', Load(), lineno=82, col_offset=23), lineno=82, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('encode', arguments([Name('self', Param(), lineno=84, col_offset=15), Name('input', Param(), lineno=84, col_offset=21), Name('errors', Param(), lineno=84, col_offset=28)], None, None, [Str('strict', lineno=84, col_offset=35)]), [If(Compare(Attribute(Name('self', Load(), lineno=85, col_offset=11), 'encoder', Load(), lineno=85, col_offset=11), [Is()], [Name('None', Load(), lineno=85, col_offset=27)], lineno=85, col_offset=11), [Assign([Name('result', Store(), lineno=86, col_offset=12)], Call(Attribute(Name('codecs', Load(), lineno=86, col_offset=21), 'utf_16_encode', Load(), lineno=86, col_offset=21), [Name('input', Load(), lineno=86, col_offset=42), Name('errors', Load(), lineno=86, col_offset=49)], [], None, None, lineno=86, col_offset=21), lineno=86, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=87, col_offset=15), 'byteorder', Load(), lineno=87, col_offset=15), [Eq()], [Str('little', lineno=87, col_offset=32)], lineno=87, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=88, col_offset=16), 'encoder', Store(), lineno=88, col_offset=16)], Attribute(Name('codecs', Load(), lineno=88, col_offset=31), 'utf_16_le_encode', Load(), lineno=88, col_offset=31), lineno=88, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=90, col_offset=16), 'encoder', Store(), lineno=90, col_offset=16)], Attribute(Name('codecs', Load(), lineno=90, col_offset=31), 'utf_16_be_encode', Load(), lineno=90, col_offset=31), lineno=90, col_offset=16)], lineno=87, col_offset=12), Return(Name('result', Load(), lineno=91, col_offset=19), lineno=91, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=93, col_offset=19), 'encoder', Load(), lineno=93, col_offset=19), [Name('input', Load(), lineno=93, col_offset=32), Name('errors', Load(), lineno=93, col_offset=39)], [], None, None, lineno=93, col_offset=19), lineno=93, col_offset=12)], lineno=85, col_offset=8)], [], lineno=84, col_offset=4)], [], lineno=75, col_offset=0), ClassDef('StreamReader', [Attribute(Name('codecs', Load(), lineno=95, col_offset=19), 'StreamReader', Load(), lineno=95, col_offset=19)], [FunctionDef('reset', arguments([Name('self', Param(), lineno=97, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('codecs', Load(), lineno=98, col_offset=8), 'StreamReader', Load(), lineno=98, col_offset=8), 'reset', Load(), lineno=98, col_offset=8), [Name('self', Load(), lineno=98, col_offset=34)], [], None, None, lineno=98, col_offset=8), lineno=98, col_offset=8), TryExcept([Delete([Attribute(Name('self', Load(), lineno=100, col_offset=16), 'decode', Del(), lineno=100, col_offset=16)], lineno=100, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=101, col_offset=15), None, [Pass( lineno=102, col_offset=12)], lineno=101, col_offset=8)], [], lineno=99, col_offset=8)], [], lineno=97, col_offset=4), FunctionDef('decode', arguments([Name('self', Param(), lineno=104, col_offset=15), Name('input', Param(), lineno=104, col_offset=21), Name('errors', Param(), lineno=104, col_offset=28)], None, None, [Str('strict', lineno=104, col_offset=35)]), [Assign([Tuple([Name('object', Store(), lineno=105, col_offset=9), Name('consumed', Store(), lineno=105, col_offset=17), Name('byteorder', Store(), lineno=105, col_offset=27)], Store(), lineno=105, col_offset=9)], Call(Attribute(Name('codecs', Load(), lineno=106, col_offset=12), 'utf_16_ex_decode', Load(), lineno=106, col_offset=12), [Name('input', Load(), lineno=106, col_offset=36), Name('errors', Load(), lineno=106, col_offset=43), Num(0, lineno=106, col_offset=51), Name('False', Load(), lineno=106, col_offset=54)], [], None, None, lineno=106, col_offset=12), lineno=105, col_offset=8), If(Compare(Name('byteorder', Load(), lineno=107, col_offset=11), [Eq()], [Num(-1, lineno=107, col_offset=25)], lineno=107, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=108, col_offset=12), 'decode', Store(), lineno=108, col_offset=12)], Attribute(Name('codecs', Load(), lineno=108, col_offset=26), 'utf_16_le_decode', Load(), lineno=108, col_offset=26), lineno=108, col_offset=12)], [If(Compare(Name('byteorder', Load(), lineno=109, col_offset=13), [Eq()], [Num(1, lineno=109, col_offset=26)], lineno=109, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=110, col_offset=12), 'decode', Store(), lineno=110, col_offset=12)], Attribute(Name('codecs', Load(), lineno=110, col_offset=26), 'utf_16_be_decode', Load(), lineno=110, col_offset=26), lineno=110, col_offset=12)], [If(Compare(Name('consumed', Load(), lineno=111, col_offset=13), [GtE()], [Num(2, lineno=111, col_offset=23)], lineno=111, col_offset=13), [Raise(Name('UnicodeError', Load(), lineno=112, col_offset=18), Str('UTF-16 stream does not start with BOM', lineno=112, col_offset=31), None, lineno=112, col_offset=12)], [], lineno=111, col_offset=13)], lineno=109, col_offset=13)], lineno=107, col_offset=8), Return(Tuple([Name('object', Load(), lineno=113, col_offset=16), Name('consumed', Load(), lineno=113, col_offset=24)], Load(), lineno=113, col_offset=16), lineno=113, col_offset=8)], [], lineno=104, col_offset=4)], [], lineno=95, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=118, col_offset=11), 'CodecInfo', Load(), lineno=118, col_offset=11), [], [keyword('name', Str('utf-16', lineno=119, col_offset=13)), keyword('encode', Name('encode', Load(), lineno=120, col_offset=15)), keyword('decode', Name('decode', Load(), lineno=121, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=122, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=123, col_offset=27)), keyword('streamreader', Name('StreamReader', Load(), lineno=124, col_offset=21)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=125, col_offset=21))], None, None, lineno=118, col_offset=11), lineno=118, col_offset=4)], [], lineno=117, col_offset=0)])
