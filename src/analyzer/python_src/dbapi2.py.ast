Module([Import([alias('datetime', None)], lineno=24, col_offset=0), Import([alias('time', None)], lineno=25, col_offset=0), ImportFrom('_sqlite3', [alias('*', None)], 0, lineno=27, col_offset=0), Assign([Name('paramstyle', Store(), lineno=29, col_offset=0)], Str('qmark', lineno=29, col_offset=13), lineno=29, col_offset=0), Assign([Name('threadsafety', Store(), lineno=31, col_offset=0)], Num(1, lineno=31, col_offset=15), lineno=31, col_offset=0), Assign([Name('apilevel', Store(), lineno=33, col_offset=0)], Str('2.0', lineno=33, col_offset=11), lineno=33, col_offset=0), Assign([Name('Date', Store(), lineno=35, col_offset=0)], Attribute(Name('datetime', Load(), lineno=35, col_offset=7), 'date', Load(), lineno=35, col_offset=7), lineno=35, col_offset=0), Assign([Name('Time', Store(), lineno=37, col_offset=0)], Attribute(Name('datetime', Load(), lineno=37, col_offset=7), 'time', Load(), lineno=37, col_offset=7), lineno=37, col_offset=0), Assign([Name('Timestamp', Store(), lineno=39, col_offset=0)], Attribute(Name('datetime', Load(), lineno=39, col_offset=12), 'datetime', Load(), lineno=39, col_offset=12), lineno=39, col_offset=0), FunctionDef('DateFromTicks', arguments([Name('ticks', Param(), lineno=41, col_offset=18)], None, None, []), [Return(Call(Name('Date', Load(), lineno=42, col_offset=11), [], [], Subscript(Call(Attribute(Name('time', Load(), lineno=42, col_offset=17), 'localtime', Load(), lineno=42, col_offset=17), [Name('ticks', Load(), lineno=42, col_offset=32)], [], None, None, lineno=42, col_offset=17), Slice(None, Num(3, lineno=42, col_offset=40), None), Load(), lineno=42, col_offset=17), None, lineno=42, col_offset=11), lineno=42, col_offset=4)], [], lineno=41, col_offset=0), FunctionDef('TimeFromTicks', arguments([Name('ticks', Param(), lineno=44, col_offset=18)], None, None, []), [Return(Call(Name('Time', Load(), lineno=45, col_offset=11), [], [], Subscript(Call(Attribute(Name('time', Load(), lineno=45, col_offset=17), 'localtime', Load(), lineno=45, col_offset=17), [Name('ticks', Load(), lineno=45, col_offset=32)], [], None, None, lineno=45, col_offset=17), Slice(Num(3, lineno=45, col_offset=39), Num(6, lineno=45, col_offset=41), None), Load(), lineno=45, col_offset=17), None, lineno=45, col_offset=11), lineno=45, col_offset=4)], [], lineno=44, col_offset=0), FunctionDef('TimestampFromTicks', arguments([Name('ticks', Param(), lineno=47, col_offset=23)], None, None, []), [Return(Call(Name('Timestamp', Load(), lineno=48, col_offset=11), [], [], Subscript(Call(Attribute(Name('time', Load(), lineno=48, col_offset=22), 'localtime', Load(), lineno=48, col_offset=22), [Name('ticks', Load(), lineno=48, col_offset=37)], [], None, None, lineno=48, col_offset=22), Slice(None, Num(6, lineno=48, col_offset=45), None), Load(), lineno=48, col_offset=22), None, lineno=48, col_offset=11), lineno=48, col_offset=4)], [], lineno=47, col_offset=0), Assign([Name('version_info', Store(), lineno=50, col_offset=0)], Call(Name('tuple', Load(), lineno=50, col_offset=15), [ListComp(Call(Name('int', Load(), lineno=50, col_offset=22), [Name('x', Load(), lineno=50, col_offset=26)], [], None, None, lineno=50, col_offset=22), [comprehension(Name('x', Store(), lineno=50, col_offset=33), Call(Attribute(Name('version', Load(), lineno=50, col_offset=38), 'split', Load(), lineno=50, col_offset=38), [Str('.', lineno=50, col_offset=52)], [], None, None, lineno=50, col_offset=38), [])], lineno=50, col_offset=22)], [], None, None, lineno=50, col_offset=15), lineno=50, col_offset=0), Assign([Name('sqlite_version_info', Store(), lineno=51, col_offset=0)], Call(Name('tuple', Load(), lineno=51, col_offset=22), [ListComp(Call(Name('int', Load(), lineno=51, col_offset=29), [Name('x', Load(), lineno=51, col_offset=33)], [], None, None, lineno=51, col_offset=29), [comprehension(Name('x', Store(), lineno=51, col_offset=40), Call(Attribute(Name('sqlite_version', Load(), lineno=51, col_offset=45), 'split', Load(), lineno=51, col_offset=45), [Str('.', lineno=51, col_offset=66)], [], None, None, lineno=51, col_offset=45), [])], lineno=51, col_offset=29)], [], None, None, lineno=51, col_offset=22), lineno=51, col_offset=0), Assign([Name('Binary', Store(), lineno=53, col_offset=0)], Name('buffer', Load(), lineno=53, col_offset=9), lineno=53, col_offset=0), FunctionDef('register_adapters_and_converters', arguments([], None, None, []), [FunctionDef('adapt_date', arguments([Name('val', Param(), lineno=56, col_offset=19)], None, None, []), [Return(Call(Attribute(Name('val', Load(), lineno=57, col_offset=15), 'isoformat', Load(), lineno=57, col_offset=15), [], [], None, None, lineno=57, col_offset=15), lineno=57, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('adapt_datetime', arguments([Name('val', Param(), lineno=59, col_offset=23)], None, None, []), [Return(Call(Attribute(Name('val', Load(), lineno=60, col_offset=15), 'isoformat', Load(), lineno=60, col_offset=15), [Str(' ', lineno=60, col_offset=29)], [], None, None, lineno=60, col_offset=15), lineno=60, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('convert_date', arguments([Name('val', Param(), lineno=62, col_offset=21)], None, None, []), [Return(Call(Attribute(Name('datetime', Load(), lineno=63, col_offset=15), 'date', Load(), lineno=63, col_offset=15), [], [], Call(Name('map', Load(), lineno=63, col_offset=30), [Name('int', Load(), lineno=63, col_offset=34), Call(Attribute(Name('val', Load(), lineno=63, col_offset=39), 'split', Load(), lineno=63, col_offset=39), [Str('-', lineno=63, col_offset=49)], [], None, None, lineno=63, col_offset=39)], [], None, None, lineno=63, col_offset=30), None, lineno=63, col_offset=15), lineno=63, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('convert_timestamp', arguments([Name('val', Param(), lineno=65, col_offset=26)], None, None, []), [Assign([Tuple([Name('datepart', Store(), lineno=66, col_offset=8), Name('timepart', Store(), lineno=66, col_offset=18)], Store(), lineno=66, col_offset=8)], Call(Attribute(Name('val', Load(), lineno=66, col_offset=29), 'split', Load(), lineno=66, col_offset=29), [Str(' ', lineno=66, col_offset=39)], [], None, None, lineno=66, col_offset=29), lineno=66, col_offset=8), Assign([Tuple([Name('year', Store(), lineno=67, col_offset=8), Name('month', Store(), lineno=67, col_offset=14), Name('day', Store(), lineno=67, col_offset=21)], Store(), lineno=67, col_offset=8)], Call(Name('map', Load(), lineno=67, col_offset=27), [Name('int', Load(), lineno=67, col_offset=31), Call(Attribute(Name('datepart', Load(), lineno=67, col_offset=36), 'split', Load(), lineno=67, col_offset=36), [Str('-', lineno=67, col_offset=51)], [], None, None, lineno=67, col_offset=36)], [], None, None, lineno=67, col_offset=27), lineno=67, col_offset=8), Assign([Name('timepart_full', Store(), lineno=68, col_offset=8)], Call(Attribute(Name('timepart', Load(), lineno=68, col_offset=24), 'split', Load(), lineno=68, col_offset=24), [Str('.', lineno=68, col_offset=39)], [], None, None, lineno=68, col_offset=24), lineno=68, col_offset=8), Assign([Tuple([Name('hours', Store(), lineno=69, col_offset=8), Name('minutes', Store(), lineno=69, col_offset=15), Name('seconds', Store(), lineno=69, col_offset=24)], Store(), lineno=69, col_offset=8)], Call(Name('map', Load(), lineno=69, col_offset=34), [Name('int', Load(), lineno=69, col_offset=38), Call(Attribute(Subscript(Name('timepart_full', Load(), lineno=69, col_offset=43), Index(Num(0, lineno=69, col_offset=57)), Load(), lineno=69, col_offset=43), 'split', Load(), lineno=69, col_offset=43), [Str(':', lineno=69, col_offset=66)], [], None, None, lineno=69, col_offset=43)], [], None, None, lineno=69, col_offset=34), lineno=69, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=70, col_offset=11), [Name('timepart_full', Load(), lineno=70, col_offset=15)], [], None, None, lineno=70, col_offset=11), [Eq()], [Num(2, lineno=70, col_offset=33)], lineno=70, col_offset=11), [Assign([Name('microseconds', Store(), lineno=71, col_offset=12)], Call(Name('int', Load(), lineno=71, col_offset=27), [Subscript(Name('timepart_full', Load(), lineno=71, col_offset=31), Index(Num(1, lineno=71, col_offset=45)), Load(), lineno=71, col_offset=31)], [], None, None, lineno=71, col_offset=27), lineno=71, col_offset=12)], [Assign([Name('microseconds', Store(), lineno=73, col_offset=12)], Num(0, lineno=73, col_offset=27), lineno=73, col_offset=12)], lineno=70, col_offset=8), Assign([Name('val', Store(), lineno=75, col_offset=8)], Call(Attribute(Name('datetime', Load(), lineno=75, col_offset=14), 'datetime', Load(), lineno=75, col_offset=14), [Name('year', Load(), lineno=75, col_offset=32), Name('month', Load(), lineno=75, col_offset=38), Name('day', Load(), lineno=75, col_offset=45), Name('hours', Load(), lineno=75, col_offset=50), Name('minutes', Load(), lineno=75, col_offset=57), Name('seconds', Load(), lineno=75, col_offset=66), Name('microseconds', Load(), lineno=75, col_offset=75)], [], None, None, lineno=75, col_offset=14), lineno=75, col_offset=8), Return(Name('val', Load(), lineno=76, col_offset=15), lineno=76, col_offset=8)], [], lineno=65, col_offset=4), Expr(Call(Name('register_adapter', Load(), lineno=79, col_offset=4), [Attribute(Name('datetime', Load(), lineno=79, col_offset=21), 'date', Load(), lineno=79, col_offset=21), Name('adapt_date', Load(), lineno=79, col_offset=36)], [], None, None, lineno=79, col_offset=4), lineno=79, col_offset=4), Expr(Call(Name('register_adapter', Load(), lineno=80, col_offset=4), [Attribute(Name('datetime', Load(), lineno=80, col_offset=21), 'datetime', Load(), lineno=80, col_offset=21), Name('adapt_datetime', Load(), lineno=80, col_offset=40)], [], None, None, lineno=80, col_offset=4), lineno=80, col_offset=4), Expr(Call(Name('register_converter', Load(), lineno=81, col_offset=4), [Str('date', lineno=81, col_offset=23), Name('convert_date', Load(), lineno=81, col_offset=31)], [], None, None, lineno=81, col_offset=4), lineno=81, col_offset=4), Expr(Call(Name('register_converter', Load(), lineno=82, col_offset=4), [Str('timestamp', lineno=82, col_offset=23), Name('convert_timestamp', Load(), lineno=82, col_offset=36)], [], None, None, lineno=82, col_offset=4), lineno=82, col_offset=4)], [], lineno=55, col_offset=0), Expr(Call(Name('register_adapters_and_converters', Load(), lineno=84, col_offset=0), [], [], None, None, lineno=84, col_offset=0), lineno=84, col_offset=0), Delete([Name('register_adapters_and_converters', Del(), lineno=88, col_offset=4)], lineno=88, col_offset=0)])
