Module([Expr(Str('\nPath operations common to more than one OS\nDo not use directly.  The OS specific modules import the appropriate\nfunctions from this module themselves.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('os', None)], lineno=6, col_offset=0), Import([alias('stat', None)], lineno=7, col_offset=0), Assign([Name('__all__', Store(), lineno=9, col_offset=0)], List([Str('commonprefix', lineno=9, col_offset=11), Str('exists', lineno=9, col_offset=27), Str('getatime', lineno=9, col_offset=37), Str('getctime', lineno=9, col_offset=49), Str('getmtime', lineno=9, col_offset=61), Str('getsize', lineno=10, col_offset=11), Str('isdir', lineno=10, col_offset=22), Str('isfile', lineno=10, col_offset=31)], Load(), lineno=9, col_offset=10), lineno=9, col_offset=0), FunctionDef('exists', arguments([Name('path', Param(), lineno=15, col_offset=11)], None, None, []), [Expr(Str('Test whether a path exists.  Returns False for broken symbolic links', lineno=16, col_offset=4), lineno=16, col_offset=4), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=18, col_offset=8), 'stat', Load(), lineno=18, col_offset=8), [Name('path', Load(), lineno=18, col_offset=16)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=19, col_offset=11), 'error', Load(), lineno=19, col_offset=11), None, [Return(Name('False', Load(), lineno=20, col_offset=15), lineno=20, col_offset=8)], lineno=19, col_offset=4)], [], lineno=17, col_offset=4), Return(Name('True', Load(), lineno=21, col_offset=11), lineno=21, col_offset=4)], [], lineno=15, col_offset=0), FunctionDef('isfile', arguments([Name('path', Param(), lineno=26, col_offset=11)], None, None, []), [Expr(Str('Test whether a path is a regular file', lineno=27, col_offset=4), lineno=27, col_offset=4), TryExcept([Assign([Name('st', Store(), lineno=29, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=29, col_offset=13), 'stat', Load(), lineno=29, col_offset=13), [Name('path', Load(), lineno=29, col_offset=21)], [], None, None, lineno=29, col_offset=13), lineno=29, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=30, col_offset=11), 'error', Load(), lineno=30, col_offset=11), None, [Return(Name('False', Load(), lineno=31, col_offset=15), lineno=31, col_offset=8)], lineno=30, col_offset=4)], [], lineno=28, col_offset=4), Return(Call(Attribute(Name('stat', Load(), lineno=32, col_offset=11), 'S_ISREG', Load(), lineno=32, col_offset=11), [Attribute(Name('st', Load(), lineno=32, col_offset=24), 'st_mode', Load(), lineno=32, col_offset=24)], [], None, None, lineno=32, col_offset=11), lineno=32, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('isdir', arguments([Name('s', Param(), lineno=38, col_offset=10)], None, None, []), [Expr(Str('Return true if the pathname refers to an existing directory.', lineno=39, col_offset=4), lineno=39, col_offset=4), TryExcept([Assign([Name('st', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=41, col_offset=13), 'stat', Load(), lineno=41, col_offset=13), [Name('s', Load(), lineno=41, col_offset=21)], [], None, None, lineno=41, col_offset=13), lineno=41, col_offset=8)], [ExceptHandler(Attribute(Name('os', Load(), lineno=42, col_offset=11), 'error', Load(), lineno=42, col_offset=11), None, [Return(Name('False', Load(), lineno=43, col_offset=15), lineno=43, col_offset=8)], lineno=42, col_offset=4)], [], lineno=40, col_offset=4), Return(Call(Attribute(Name('stat', Load(), lineno=44, col_offset=11), 'S_ISDIR', Load(), lineno=44, col_offset=11), [Attribute(Name('st', Load(), lineno=44, col_offset=24), 'st_mode', Load(), lineno=44, col_offset=24)], [], None, None, lineno=44, col_offset=11), lineno=44, col_offset=4)], [], lineno=38, col_offset=0), FunctionDef('getsize', arguments([Name('filename', Param(), lineno=47, col_offset=12)], None, None, []), [Expr(Str('Return the size of a file, reported by os.stat().', lineno=48, col_offset=4), lineno=48, col_offset=4), Return(Attribute(Call(Attribute(Name('os', Load(), lineno=49, col_offset=11), 'stat', Load(), lineno=49, col_offset=11), [Name('filename', Load(), lineno=49, col_offset=19)], [], None, None, lineno=49, col_offset=11), 'st_size', Load(), lineno=49, col_offset=11), lineno=49, col_offset=4)], [], lineno=47, col_offset=0), FunctionDef('getmtime', arguments([Name('filename', Param(), lineno=52, col_offset=13)], None, None, []), [Expr(Str('Return the last modification time of a file, reported by os.stat().', lineno=53, col_offset=4), lineno=53, col_offset=4), Return(Attribute(Call(Attribute(Name('os', Load(), lineno=54, col_offset=11), 'stat', Load(), lineno=54, col_offset=11), [Name('filename', Load(), lineno=54, col_offset=19)], [], None, None, lineno=54, col_offset=11), 'st_mtime', Load(), lineno=54, col_offset=11), lineno=54, col_offset=4)], [], lineno=52, col_offset=0), FunctionDef('getatime', arguments([Name('filename', Param(), lineno=57, col_offset=13)], None, None, []), [Expr(Str('Return the last access time of a file, reported by os.stat().', lineno=58, col_offset=4), lineno=58, col_offset=4), Return(Attribute(Call(Attribute(Name('os', Load(), lineno=59, col_offset=11), 'stat', Load(), lineno=59, col_offset=11), [Name('filename', Load(), lineno=59, col_offset=19)], [], None, None, lineno=59, col_offset=11), 'st_atime', Load(), lineno=59, col_offset=11), lineno=59, col_offset=4)], [], lineno=57, col_offset=0), FunctionDef('getctime', arguments([Name('filename', Param(), lineno=62, col_offset=13)], None, None, []), [Expr(Str('Return the metadata change time of a file, reported by os.stat().', lineno=63, col_offset=4), lineno=63, col_offset=4), Return(Attribute(Call(Attribute(Name('os', Load(), lineno=64, col_offset=11), 'stat', Load(), lineno=64, col_offset=11), [Name('filename', Load(), lineno=64, col_offset=19)], [], None, None, lineno=64, col_offset=11), 'st_ctime', Load(), lineno=64, col_offset=11), lineno=64, col_offset=4)], [], lineno=62, col_offset=0), FunctionDef('commonprefix', arguments([Name('m', Param(), lineno=68, col_offset=17)], None, None, []), [Expr(Str('Given a list of pathnames, returns the longest common leading component', lineno=69, col_offset=4), lineno=69, col_offset=4), If(UnaryOp(Not(), Name('m', Load(), lineno=70, col_offset=11), lineno=70, col_offset=7), [Return(Str('', lineno=70, col_offset=21), lineno=70, col_offset=14)], [], lineno=70, col_offset=4), Assign([Name('s1', Store(), lineno=71, col_offset=4)], Call(Name('min', Load(), lineno=71, col_offset=9), [Name('m', Load(), lineno=71, col_offset=13)], [], None, None, lineno=71, col_offset=9), lineno=71, col_offset=4), Assign([Name('s2', Store(), lineno=72, col_offset=4)], Call(Name('max', Load(), lineno=72, col_offset=9), [Name('m', Load(), lineno=72, col_offset=13)], [], None, None, lineno=72, col_offset=9), lineno=72, col_offset=4), For(Tuple([Name('i', Store(), lineno=73, col_offset=8), Name('c', Store(), lineno=73, col_offset=11)], Store(), lineno=73, col_offset=8), Call(Name('enumerate', Load(), lineno=73, col_offset=16), [Name('s1', Load(), lineno=73, col_offset=26)], [], None, None, lineno=73, col_offset=16), [If(Compare(Name('c', Load(), lineno=74, col_offset=11), [NotEq()], [Subscript(Name('s2', Load(), lineno=74, col_offset=16), Index(Name('i', Load(), lineno=74, col_offset=19)), Load(), lineno=74, col_offset=16)], lineno=74, col_offset=11), [Return(Subscript(Name('s1', Load(), lineno=75, col_offset=19), Slice(None, Name('i', Load(), lineno=75, col_offset=23), None), Load(), lineno=75, col_offset=19), lineno=75, col_offset=12)], [], lineno=74, col_offset=8)], [], lineno=73, col_offset=4), Return(Name('s1', Load(), lineno=76, col_offset=11), lineno=76, col_offset=4)], [], lineno=68, col_offset=0), FunctionDef('_splitext', arguments([Name('p', Param(), lineno=85, col_offset=14), Name('sep', Param(), lineno=85, col_offset=17), Name('altsep', Param(), lineno=85, col_offset=22), Name('extsep', Param(), lineno=85, col_offset=30)], None, None, []), [Expr(Str('Split the extension from a pathname.\n\n    Extension is everything from the last dot to the end, ignoring\n    leading dots.  Returns "(root, ext)"; ext may be empty.', lineno=89, col_offset=-1), lineno=89, col_offset=-1), Assign([Name('sepIndex', Store(), lineno=91, col_offset=4)], Call(Attribute(Name('p', Load(), lineno=91, col_offset=15), 'rfind', Load(), lineno=91, col_offset=15), [Name('sep', Load(), lineno=91, col_offset=23)], [], None, None, lineno=91, col_offset=15), lineno=91, col_offset=4), If(Name('altsep', Load(), lineno=92, col_offset=7), [Assign([Name('altsepIndex', Store(), lineno=93, col_offset=8)], Call(Attribute(Name('p', Load(), lineno=93, col_offset=22), 'rfind', Load(), lineno=93, col_offset=22), [Name('altsep', Load(), lineno=93, col_offset=30)], [], None, None, lineno=93, col_offset=22), lineno=93, col_offset=8), Assign([Name('sepIndex', Store(), lineno=94, col_offset=8)], Call(Name('max', Load(), lineno=94, col_offset=19), [Name('sepIndex', Load(), lineno=94, col_offset=23), Name('altsepIndex', Load(), lineno=94, col_offset=33)], [], None, None, lineno=94, col_offset=19), lineno=94, col_offset=8)], [], lineno=92, col_offset=4), Assign([Name('dotIndex', Store(), lineno=96, col_offset=4)], Call(Attribute(Name('p', Load(), lineno=96, col_offset=15), 'rfind', Load(), lineno=96, col_offset=15), [Name('extsep', Load(), lineno=96, col_offset=23)], [], None, None, lineno=96, col_offset=15), lineno=96, col_offset=4), If(Compare(Name('dotIndex', Load(), lineno=97, col_offset=7), [Gt()], [Name('sepIndex', Load(), lineno=97, col_offset=18)], lineno=97, col_offset=7), [Assign([Name('filenameIndex', Store(), lineno=99, col_offset=8)], BinOp(Name('sepIndex', Load(), lineno=99, col_offset=24), Add(), Num(1, lineno=99, col_offset=35), lineno=99, col_offset=24), lineno=99, col_offset=8), While(Compare(Name('filenameIndex', Load(), lineno=100, col_offset=14), [Lt()], [Name('dotIndex', Load(), lineno=100, col_offset=30)], lineno=100, col_offset=14), [If(Compare(Subscript(Name('p', Load(), lineno=101, col_offset=15), Index(Name('filenameIndex', Load(), lineno=101, col_offset=17)), Load(), lineno=101, col_offset=15), [NotEq()], [Name('extsep', Load(), lineno=101, col_offset=35)], lineno=101, col_offset=15), [Return(Tuple([Subscript(Name('p', Load(), lineno=102, col_offset=23), Slice(None, Name('dotIndex', Load(), lineno=102, col_offset=26), None), Load(), lineno=102, col_offset=23), Subscript(Name('p', Load(), lineno=102, col_offset=37), Slice(Name('dotIndex', Load(), lineno=102, col_offset=39), None, None), Load(), lineno=102, col_offset=37)], Load(), lineno=102, col_offset=23), lineno=102, col_offset=16)], [], lineno=101, col_offset=12), AugAssign(Name('filenameIndex', Store(), lineno=103, col_offset=12), Add(), Num(1, lineno=103, col_offset=29), lineno=103, col_offset=12)], [], lineno=100, col_offset=8)], [], lineno=97, col_offset=4), Return(Tuple([Name('p', Load(), lineno=105, col_offset=11), Str('', lineno=105, col_offset=14)], Load(), lineno=105, col_offset=11), lineno=105, col_offset=4)], [], lineno=85, col_offset=0)])
