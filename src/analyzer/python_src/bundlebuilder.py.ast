Module([Expr(Str('bundlebuilder.py -- Tools to assemble MacOS X (application) bundles.\n\nThis module contains two classes to build so called "bundles" for\nMacOS X. BundleBuilder is a general tool, AppBuilder is a subclass\nspecialized in building application bundles.\n\n[Bundle|App]Builder objects are instantiated with a bunch of keyword\narguments, and have a build() method that will do all the work. See\nthe class doc strings for a description of the constructor arguments.\n\nThe module contains a main program that can be used in two ways:\n\n  % python bundlebuilder.py [options] build\n  % python buildapp.py [options] build\n\nWhere "buildapp.py" is a user-supplied setup.py-like script following\nthis model:\n\n  from bundlebuilder import buildapp\n  buildapp(<lots-of-keyword-args>)\n\n', lineno=25, col_offset=-1), lineno=25, col_offset=-1), Assign([Name('__all__', Store(), lineno=28, col_offset=0)], List([Str('BundleBuilder', lineno=28, col_offset=11), Str('BundleBuilderError', lineno=28, col_offset=28), Str('AppBuilder', lineno=28, col_offset=50), Str('buildapp', lineno=28, col_offset=64)], Load(), lineno=28, col_offset=10), lineno=28, col_offset=0), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=31, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=32, col_offset=0), [Str('In 3.x, the bundlebuilder module is removed.', lineno=32, col_offset=9)], [keyword('stacklevel', Num(2, lineno=32, col_offset=68))], None, None, lineno=32, col_offset=0), lineno=32, col_offset=0), Import([alias('sys', None)], lineno=34, col_offset=0), Import([alias('os', None), alias('errno', None), alias('shutil', None)], lineno=35, col_offset=0), Import([alias('imp', None), alias('marshal', None)], lineno=36, col_offset=0), Import([alias('re', None)], lineno=37, col_offset=0), ImportFrom('copy', [alias('deepcopy', None)], 0, lineno=38, col_offset=0), Import([alias('getopt', None)], lineno=39, col_offset=0), ImportFrom('plistlib', [alias('Plist', None)], 0, lineno=40, col_offset=0), ImportFrom('types', [alias('FunctionType', 'function')], 0, lineno=41, col_offset=0), ClassDef('BundleBuilderError', [Name('Exception', Load(), lineno=43, col_offset=25)], [Pass( lineno=43, col_offset=37)], [], lineno=43, col_offset=0), ClassDef('Defaults', [], [Expr(Str("Class attributes that don't start with an underscore and are\n    not functions or classmethods are (deep)copied to self.__dict__.\n    This allows for mutable default values.\n    ", lineno=51, col_offset=-1), lineno=51, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=53, col_offset=17)], None, 'kwargs', []), [Assign([Name('defaults', Store(), lineno=54, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=54, col_offset=19), '_getDefaults', Load(), lineno=54, col_offset=19), [], [], None, None, lineno=54, col_offset=19), lineno=54, col_offset=8), Expr(Call(Attribute(Name('defaults', Load(), lineno=55, col_offset=8), 'update', Load(), lineno=55, col_offset=8), [Name('kwargs', Load(), lineno=55, col_offset=24)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=56, col_offset=8), '__dict__', Load(), lineno=56, col_offset=8), 'update', Load(), lineno=56, col_offset=8), [Name('defaults', Load(), lineno=56, col_offset=29)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('_getDefaults', arguments([Name('cls', Param(), lineno=58, col_offset=21)], None, None, []), [Assign([Name('defaults', Store(), lineno=59, col_offset=8)], Dict([], [], lineno=59, col_offset=19), lineno=59, col_offset=8), For(Name('base', Store(), lineno=60, col_offset=12), Attribute(Name('cls', Load(), lineno=60, col_offset=20), '__bases__', Load(), lineno=60, col_offset=20), [If(Call(Name('hasattr', Load(), lineno=61, col_offset=15), [Name('base', Load(), lineno=61, col_offset=23), Str('_getDefaults', lineno=61, col_offset=29)], [], None, None, lineno=61, col_offset=15), [Expr(Call(Attribute(Name('defaults', Load(), lineno=62, col_offset=16), 'update', Load(), lineno=62, col_offset=16), [Call(Attribute(Name('base', Load(), lineno=62, col_offset=32), '_getDefaults', Load(), lineno=62, col_offset=32), [], [], None, None, lineno=62, col_offset=32)], [], None, None, lineno=62, col_offset=16), lineno=62, col_offset=16)], [], lineno=61, col_offset=12)], [], lineno=60, col_offset=8), For(Tuple([Name('name', Store(), lineno=63, col_offset=12), Name('value', Store(), lineno=63, col_offset=18)], Store(), lineno=63, col_offset=12), Call(Attribute(Attribute(Name('cls', Load(), lineno=63, col_offset=27), '__dict__', Load(), lineno=63, col_offset=27), 'items', Load(), lineno=63, col_offset=27), [], [], None, None, lineno=63, col_offset=27), [If(BoolOp(And(), [Compare(Subscript(Name('name', Load(), lineno=64, col_offset=15), Index(Num(0, lineno=64, col_offset=20)), Load(), lineno=64, col_offset=15), [NotEq()], [Str('_', lineno=64, col_offset=26)], lineno=64, col_offset=15), UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=64, col_offset=38), [Name('value', Load(), lineno=64, col_offset=49), Tuple([Name('function', Load(), lineno=65, col_offset=21), Name('classmethod', Load(), lineno=65, col_offset=31)], Load(), lineno=65, col_offset=21)], [], None, None, lineno=64, col_offset=38), lineno=64, col_offset=34)], lineno=64, col_offset=15), [Assign([Subscript(Name('defaults', Load(), lineno=66, col_offset=16), Index(Name('name', Load(), lineno=66, col_offset=25)), Store(), lineno=66, col_offset=16)], Call(Name('deepcopy', Load(), lineno=66, col_offset=33), [Name('value', Load(), lineno=66, col_offset=42)], [], None, None, lineno=66, col_offset=33), lineno=66, col_offset=16)], [], lineno=64, col_offset=12)], [], lineno=63, col_offset=8), Return(Name('defaults', Load(), lineno=67, col_offset=15), lineno=67, col_offset=8)], [], lineno=58, col_offset=4), Assign([Name('_getDefaults', Store(), lineno=68, col_offset=4)], Call(Name('classmethod', Load(), lineno=68, col_offset=19), [Name('_getDefaults', Load(), lineno=68, col_offset=31)], [], None, None, lineno=68, col_offset=19), lineno=68, col_offset=4)], [], lineno=46, col_offset=0), ClassDef('BundleBuilder', [Name('Defaults', Load(), lineno=71, col_offset=20)], [Expr(Str('BundleBuilder is a barebones class for assembling bundles. It\n    knows nothing about executables or icons, it only copies files\n    and creates the PkgInfo and Info.plist files.\n    ', lineno=76, col_offset=-1), lineno=76, col_offset=-1), Assign([Name('name', Store(), lineno=82, col_offset=4)], Name('None', Load(), lineno=82, col_offset=11), lineno=82, col_offset=4), Assign([Name('plist', Store(), lineno=85, col_offset=4)], Call(Name('Plist', Load(), lineno=85, col_offset=12), [], [keyword('CFBundleDevelopmentRegion', Str('English', lineno=85, col_offset=46)), keyword('CFBundleInfoDictionaryVersion', Str('6.0', lineno=86, col_offset=50))], None, None, lineno=85, col_offset=12), lineno=85, col_offset=4), Assign([Name('type', Store(), lineno=89, col_offset=4)], Str('BNDL', lineno=89, col_offset=11), lineno=89, col_offset=4), Assign([Name('creator', Store(), lineno=91, col_offset=4)], Name('None', Load(), lineno=91, col_offset=14), lineno=91, col_offset=4), Assign([Name('bundle_id', Store(), lineno=94, col_offset=4)], Name('None', Load(), lineno=94, col_offset=16), lineno=94, col_offset=4), Assign([Name('resources', Store(), lineno=97, col_offset=4)], List([], Load(), lineno=97, col_offset=16), lineno=97, col_offset=4), Assign([Name('files', Store(), lineno=101, col_offset=4)], List([], Load(), lineno=101, col_offset=12), lineno=101, col_offset=4), Assign([Name('libs', Store(), lineno=105, col_offset=4)], List([], Load(), lineno=105, col_offset=11), lineno=105, col_offset=4), Assign([Name('builddir', Store(), lineno=108, col_offset=4)], Str('build', lineno=108, col_offset=15), lineno=108, col_offset=4), Assign([Name('symlink', Store(), lineno=112, col_offset=4)], Num(0, lineno=112, col_offset=14), lineno=112, col_offset=4), Assign([Name('verbosity', Store(), lineno=115, col_offset=4)], Num(1, lineno=115, col_offset=16), lineno=115, col_offset=4), Assign([Name('destroot', Store(), lineno=118, col_offset=4)], Str('', lineno=118, col_offset=15), lineno=118, col_offset=4), FunctionDef('setup', arguments([Name('self', Param(), lineno=120, col_offset=14)], None, None, []), [Assign([Tuple([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'name', Store(), lineno=122, col_offset=8), Name('ext', Store(), lineno=122, col_offset=19)], Store(), lineno=122, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=122, col_offset=25), 'path', Load(), lineno=122, col_offset=25), 'splitext', Load(), lineno=122, col_offset=25), [Attribute(Name('self', Load(), lineno=122, col_offset=42), 'name', Load(), lineno=122, col_offset=42)], [], None, None, lineno=122, col_offset=25), lineno=122, col_offset=8), If(UnaryOp(Not(), Name('ext', Load(), lineno=123, col_offset=15), lineno=123, col_offset=11), [Assign([Name('ext', Store(), lineno=124, col_offset=12)], Str('.bundle', lineno=124, col_offset=18), lineno=124, col_offset=12)], [], lineno=123, col_offset=8), Assign([Name('bundleextension', Store(), lineno=125, col_offset=8)], Name('ext', Load(), lineno=125, col_offset=26), lineno=125, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=127, col_offset=8), 'bundlepath', Store(), lineno=127, col_offset=8)], Call(Name('pathjoin', Load(), lineno=127, col_offset=26), [Attribute(Name('self', Load(), lineno=127, col_offset=35), 'builddir', Load(), lineno=127, col_offset=35), BinOp(Attribute(Name('self', Load(), lineno=127, col_offset=50), 'name', Load(), lineno=127, col_offset=50), Add(), Name('bundleextension', Load(), lineno=127, col_offset=62), lineno=127, col_offset=50)], [], None, None, lineno=127, col_offset=26), lineno=127, col_offset=8), Assign([Name('plist', Store(), lineno=129, col_offset=8)], Attribute(Name('self', Load(), lineno=129, col_offset=16), 'plist', Load(), lineno=129, col_offset=16), lineno=129, col_offset=8), Assign([Attribute(Name('plist', Load(), lineno=130, col_offset=8), 'CFBundleName', Store(), lineno=130, col_offset=8)], Attribute(Name('self', Load(), lineno=130, col_offset=29), 'name', Load(), lineno=130, col_offset=29), lineno=130, col_offset=8), Assign([Attribute(Name('plist', Load(), lineno=131, col_offset=8), 'CFBundlePackageType', Store(), lineno=131, col_offset=8)], Attribute(Name('self', Load(), lineno=131, col_offset=36), 'type', Load(), lineno=131, col_offset=36), lineno=131, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=132, col_offset=11), 'creator', Load(), lineno=132, col_offset=11), [Is()], [Name('None', Load(), lineno=132, col_offset=27)], lineno=132, col_offset=11), [If(Call(Name('hasattr', Load(), lineno=133, col_offset=15), [Name('plist', Load(), lineno=133, col_offset=23), Str('CFBundleSignature', lineno=133, col_offset=30)], [], None, None, lineno=133, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=134, col_offset=16), 'creator', Store(), lineno=134, col_offset=16)], Attribute(Name('plist', Load(), lineno=134, col_offset=31), 'CFBundleSignature', Load(), lineno=134, col_offset=31), lineno=134, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=136, col_offset=16), 'creator', Store(), lineno=136, col_offset=16)], Str('????', lineno=136, col_offset=31), lineno=136, col_offset=16)], lineno=133, col_offset=12)], [], lineno=132, col_offset=8), Assign([Attribute(Name('plist', Load(), lineno=137, col_offset=8), 'CFBundleSignature', Store(), lineno=137, col_offset=8)], Attribute(Name('self', Load(), lineno=137, col_offset=34), 'creator', Load(), lineno=137, col_offset=34), lineno=137, col_offset=8), If(Attribute(Name('self', Load(), lineno=138, col_offset=11), 'bundle_id', Load(), lineno=138, col_offset=11), [Assign([Attribute(Name('plist', Load(), lineno=139, col_offset=12), 'CFBundleIdentifier', Store(), lineno=139, col_offset=12)], Attribute(Name('self', Load(), lineno=139, col_offset=39), 'bundle_id', Load(), lineno=139, col_offset=39), lineno=139, col_offset=12)], [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=140, col_offset=17), [Name('plist', Load(), lineno=140, col_offset=25), Str('CFBundleIdentifier', lineno=140, col_offset=32)], [], None, None, lineno=140, col_offset=17), lineno=140, col_offset=13), [Assign([Attribute(Name('plist', Load(), lineno=141, col_offset=12), 'CFBundleIdentifier', Store(), lineno=141, col_offset=12)], Attribute(Name('self', Load(), lineno=141, col_offset=39), 'name', Load(), lineno=141, col_offset=39), lineno=141, col_offset=12)], [], lineno=140, col_offset=13)], lineno=138, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('build', arguments([Name('self', Param(), lineno=143, col_offset=14)], None, None, []), [Expr(Str('Build the bundle.', lineno=144, col_offset=8), lineno=144, col_offset=8), Assign([Name('builddir', Store(), lineno=145, col_offset=8)], Attribute(Name('self', Load(), lineno=145, col_offset=19), 'builddir', Load(), lineno=145, col_offset=19), lineno=145, col_offset=8), If(BoolOp(And(), [Name('builddir', Load(), lineno=146, col_offset=11), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=146, col_offset=28), 'path', Load(), lineno=146, col_offset=28), 'exists', Load(), lineno=146, col_offset=28), [Name('builddir', Load(), lineno=146, col_offset=43)], [], None, None, lineno=146, col_offset=28), lineno=146, col_offset=24)], lineno=146, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=147, col_offset=12), 'mkdir', Load(), lineno=147, col_offset=12), [Name('builddir', Load(), lineno=147, col_offset=21)], [], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12)], [], lineno=146, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=8), 'message', Load(), lineno=148, col_offset=8), [BinOp(Str('Building %s', lineno=148, col_offset=21), Mod(), Call(Name('repr', Load(), lineno=148, col_offset=37), [Attribute(Name('self', Load(), lineno=148, col_offset=42), 'bundlepath', Load(), lineno=148, col_offset=42)], [], None, None, lineno=148, col_offset=37), lineno=148, col_offset=21), Num(1, lineno=148, col_offset=60)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=149, col_offset=11), 'path', Load(), lineno=149, col_offset=11), 'exists', Load(), lineno=149, col_offset=11), [Attribute(Name('self', Load(), lineno=149, col_offset=26), 'bundlepath', Load(), lineno=149, col_offset=26)], [], None, None, lineno=149, col_offset=11), [Expr(Call(Attribute(Name('shutil', Load(), lineno=150, col_offset=12), 'rmtree', Load(), lineno=150, col_offset=12), [Attribute(Name('self', Load(), lineno=150, col_offset=26), 'bundlepath', Load(), lineno=150, col_offset=26)], [], None, None, lineno=150, col_offset=12), lineno=150, col_offset=12)], [], lineno=149, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=151, col_offset=11), 'path', Load(), lineno=151, col_offset=11), 'exists', Load(), lineno=151, col_offset=11), [BinOp(Attribute(Name('self', Load(), lineno=151, col_offset=26), 'bundlepath', Load(), lineno=151, col_offset=26), Add(), Str('~', lineno=151, col_offset=44), lineno=151, col_offset=26)], [], None, None, lineno=151, col_offset=11), [Expr(Call(Attribute(Name('shutil', Load(), lineno=152, col_offset=12), 'rmtree', Load(), lineno=152, col_offset=12), [BinOp(Attribute(Name('self', Load(), lineno=152, col_offset=26), 'bundlepath', Load(), lineno=152, col_offset=26), Add(), Str('~', lineno=152, col_offset=44), lineno=152, col_offset=26)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=12)], [], lineno=151, col_offset=8), Assign([Name('bp', Store(), lineno=153, col_offset=8)], Attribute(Name('self', Load(), lineno=153, col_offset=13), 'bundlepath', Load(), lineno=153, col_offset=13), lineno=153, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=159, col_offset=8), 'bundlepath', Store(), lineno=159, col_offset=8)], BinOp(Name('bp', Load(), lineno=159, col_offset=26), Add(), Str('~', lineno=159, col_offset=31), lineno=159, col_offset=26), lineno=159, col_offset=8), TryFinally([Expr(Call(Attribute(Name('os', Load(), lineno=161, col_offset=12), 'mkdir', Load(), lineno=161, col_offset=12), [Attribute(Name('self', Load(), lineno=161, col_offset=21), 'bundlepath', Load(), lineno=161, col_offset=21)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=12), 'preProcess', Load(), lineno=162, col_offset=12), [], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=163, col_offset=12), '_copyFiles', Load(), lineno=163, col_offset=12), [], [], None, None, lineno=163, col_offset=12), lineno=163, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=12), '_addMetaFiles', Load(), lineno=164, col_offset=12), [], [], None, None, lineno=164, col_offset=12), lineno=164, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=12), 'postProcess', Load(), lineno=165, col_offset=12), [], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=166, col_offset=12), 'rename', Load(), lineno=166, col_offset=12), [Attribute(Name('self', Load(), lineno=166, col_offset=22), 'bundlepath', Load(), lineno=166, col_offset=22), Name('bp', Load(), lineno=166, col_offset=39)], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=168, col_offset=12), 'bundlepath', Store(), lineno=168, col_offset=12)], Name('bp', Load(), lineno=168, col_offset=30), lineno=168, col_offset=12)], lineno=160, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=8), 'message', Load(), lineno=169, col_offset=8), [Str('Done.', lineno=169, col_offset=21), Num(1, lineno=169, col_offset=30)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8)], [], lineno=143, col_offset=4), FunctionDef('preProcess', arguments([Name('self', Param(), lineno=171, col_offset=19)], None, None, []), [Expr(Str('Hook for subclasses.', lineno=172, col_offset=8), lineno=172, col_offset=8), Pass( lineno=173, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('postProcess', arguments([Name('self', Param(), lineno=174, col_offset=20)], None, None, []), [Expr(Str('Hook for subclasses.', lineno=175, col_offset=8), lineno=175, col_offset=8), Pass( lineno=176, col_offset=8)], [], lineno=174, col_offset=4), FunctionDef('_addMetaFiles', arguments([Name('self', Param(), lineno=178, col_offset=22)], None, None, []), [Assign([Name('contents', Store(), lineno=179, col_offset=8)], Call(Name('pathjoin', Load(), lineno=179, col_offset=19), [Attribute(Name('self', Load(), lineno=179, col_offset=28), 'bundlepath', Load(), lineno=179, col_offset=28), Str('Contents', lineno=179, col_offset=45)], [], None, None, lineno=179, col_offset=19), lineno=179, col_offset=8), Expr(Call(Name('makedirs', Load(), lineno=180, col_offset=8), [Name('contents', Load(), lineno=180, col_offset=17)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Assert(Compare(Call(Name('len', Load(), lineno=183, col_offset=15), [Attribute(Name('self', Load(), lineno=183, col_offset=19), 'type', Load(), lineno=183, col_offset=19)], [], None, None, lineno=183, col_offset=15), [Eq(), Eq()], [Call(Name('len', Load(), lineno=183, col_offset=33), [Attribute(Name('self', Load(), lineno=183, col_offset=37), 'creator', Load(), lineno=183, col_offset=37)], [], None, None, lineno=183, col_offset=33), Num(4, lineno=183, col_offset=54)], lineno=183, col_offset=15), Str('type and creator must be 4-byte strings.', lineno=184, col_offset=16), lineno=183, col_offset=8), Assign([Name('pkginfo', Store(), lineno=185, col_offset=8)], Call(Name('pathjoin', Load(), lineno=185, col_offset=18), [Name('contents', Load(), lineno=185, col_offset=27), Str('PkgInfo', lineno=185, col_offset=37)], [], None, None, lineno=185, col_offset=18), lineno=185, col_offset=8), Assign([Name('f', Store(), lineno=186, col_offset=8)], Call(Name('open', Load(), lineno=186, col_offset=12), [Name('pkginfo', Load(), lineno=186, col_offset=17), Str('wb', lineno=186, col_offset=26)], [], None, None, lineno=186, col_offset=12), lineno=186, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=187, col_offset=8), 'write', Load(), lineno=187, col_offset=8), [BinOp(Attribute(Name('self', Load(), lineno=187, col_offset=16), 'type', Load(), lineno=187, col_offset=16), Add(), Attribute(Name('self', Load(), lineno=187, col_offset=28), 'creator', Load(), lineno=187, col_offset=28), lineno=187, col_offset=16)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=188, col_offset=8), 'close', Load(), lineno=188, col_offset=8), [], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Assign([Name('infoplist', Store(), lineno=191, col_offset=8)], Call(Name('pathjoin', Load(), lineno=191, col_offset=20), [Name('contents', Load(), lineno=191, col_offset=29), Str('Info.plist', lineno=191, col_offset=39)], [], None, None, lineno=191, col_offset=20), lineno=191, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'plist', Load(), lineno=192, col_offset=8), 'write', Load(), lineno=192, col_offset=8), [Name('infoplist', Load(), lineno=192, col_offset=25)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('_copyFiles', arguments([Name('self', Param(), lineno=194, col_offset=19)], None, None, []), [Assign([Name('files', Store(), lineno=195, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=195, col_offset=16), 'files', Load(), lineno=195, col_offset=16), Slice(None, None, None), Load(), lineno=195, col_offset=16), lineno=195, col_offset=8), For(Name('path', Store(), lineno=196, col_offset=12), Attribute(Name('self', Load(), lineno=196, col_offset=20), 'resources', Load(), lineno=196, col_offset=20), [Expr(Call(Attribute(Name('files', Load(), lineno=197, col_offset=12), 'append', Load(), lineno=197, col_offset=12), [Tuple([Name('path', Load(), lineno=197, col_offset=26), Call(Name('pathjoin', Load(), lineno=197, col_offset=32), [Str('Contents', lineno=197, col_offset=41), Str('Resources', lineno=197, col_offset=53), Call(Attribute(Attribute(Name('os', Load(), lineno=198, col_offset=16), 'path', Load(), lineno=198, col_offset=16), 'basename', Load(), lineno=198, col_offset=16), [Name('path', Load(), lineno=198, col_offset=33)], [], None, None, lineno=198, col_offset=16)], [], None, None, lineno=197, col_offset=32)], Load(), lineno=197, col_offset=26)], [], None, None, lineno=197, col_offset=12), lineno=197, col_offset=12)], [], lineno=196, col_offset=8), For(Name('path', Store(), lineno=199, col_offset=12), Attribute(Name('self', Load(), lineno=199, col_offset=20), 'libs', Load(), lineno=199, col_offset=20), [Expr(Call(Attribute(Name('files', Load(), lineno=200, col_offset=12), 'append', Load(), lineno=200, col_offset=12), [Tuple([Name('path', Load(), lineno=200, col_offset=26), Call(Name('pathjoin', Load(), lineno=200, col_offset=32), [Str('Contents', lineno=200, col_offset=41), Str('Frameworks', lineno=200, col_offset=53), Call(Attribute(Attribute(Name('os', Load(), lineno=201, col_offset=16), 'path', Load(), lineno=201, col_offset=16), 'basename', Load(), lineno=201, col_offset=16), [Name('path', Load(), lineno=201, col_offset=33)], [], None, None, lineno=201, col_offset=16)], [], None, None, lineno=200, col_offset=32)], Load(), lineno=200, col_offset=26)], [], None, None, lineno=200, col_offset=12), lineno=200, col_offset=12)], [], lineno=199, col_offset=8), If(Attribute(Name('self', Load(), lineno=202, col_offset=11), 'symlink', Load(), lineno=202, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=12), 'message', Load(), lineno=203, col_offset=12), [Str('Making symbolic links', lineno=203, col_offset=25), Num(1, lineno=203, col_offset=50)], [], None, None, lineno=203, col_offset=12), lineno=203, col_offset=12), Assign([Name('msg', Store(), lineno=204, col_offset=12)], Str('Making symlink from', lineno=204, col_offset=18), lineno=204, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=12), 'message', Load(), lineno=206, col_offset=12), [Str('Copying files', lineno=206, col_offset=25), Num(1, lineno=206, col_offset=42)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12), Assign([Name('msg', Store(), lineno=207, col_offset=12)], Str('Copying', lineno=207, col_offset=18), lineno=207, col_offset=12)], lineno=202, col_offset=8), Expr(Call(Attribute(Name('files', Load(), lineno=208, col_offset=8), 'sort', Load(), lineno=208, col_offset=8), [], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), For(Tuple([Name('src', Store(), lineno=209, col_offset=12), Name('dst', Store(), lineno=209, col_offset=17)], Store(), lineno=209, col_offset=12), Name('files', Load(), lineno=209, col_offset=24), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=210, col_offset=15), 'path', Load(), lineno=210, col_offset=15), 'isdir', Load(), lineno=210, col_offset=15), [Name('src', Load(), lineno=210, col_offset=29)], [], None, None, lineno=210, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=16), 'message', Load(), lineno=211, col_offset=16), [BinOp(Str('%s %s/ to %s/', lineno=211, col_offset=29), Mod(), Tuple([Name('msg', Load(), lineno=211, col_offset=48), Name('src', Load(), lineno=211, col_offset=53), Name('dst', Load(), lineno=211, col_offset=58)], Load(), lineno=211, col_offset=48), lineno=211, col_offset=29), Num(2, lineno=211, col_offset=64)], [], None, None, lineno=211, col_offset=16), lineno=211, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=16), 'message', Load(), lineno=213, col_offset=16), [BinOp(Str('%s %s to %s', lineno=213, col_offset=29), Mod(), Tuple([Name('msg', Load(), lineno=213, col_offset=46), Name('src', Load(), lineno=213, col_offset=51), Name('dst', Load(), lineno=213, col_offset=56)], Load(), lineno=213, col_offset=46), lineno=213, col_offset=29), Num(2, lineno=213, col_offset=62)], [], None, None, lineno=213, col_offset=16), lineno=213, col_offset=16)], lineno=210, col_offset=12), Assign([Name('dst', Store(), lineno=214, col_offset=12)], Call(Name('pathjoin', Load(), lineno=214, col_offset=18), [Attribute(Name('self', Load(), lineno=214, col_offset=27), 'bundlepath', Load(), lineno=214, col_offset=27), Name('dst', Load(), lineno=214, col_offset=44)], [], None, None, lineno=214, col_offset=18), lineno=214, col_offset=12), If(Attribute(Name('self', Load(), lineno=215, col_offset=15), 'symlink', Load(), lineno=215, col_offset=15), [Expr(Call(Name('symlink', Load(), lineno=216, col_offset=16), [Name('src', Load(), lineno=216, col_offset=24), Name('dst', Load(), lineno=216, col_offset=29)], [keyword('mkdirs', Num(1, lineno=216, col_offset=41))], None, None, lineno=216, col_offset=16), lineno=216, col_offset=16)], [Expr(Call(Name('copy', Load(), lineno=218, col_offset=16), [Name('src', Load(), lineno=218, col_offset=21), Name('dst', Load(), lineno=218, col_offset=26)], [keyword('mkdirs', Num(1, lineno=218, col_offset=38))], None, None, lineno=218, col_offset=16), lineno=218, col_offset=16)], lineno=215, col_offset=12)], [], lineno=209, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('message', arguments([Name('self', Param(), lineno=220, col_offset=16), Name('msg', Param(), lineno=220, col_offset=22), Name('level', Param(), lineno=220, col_offset=27)], None, None, [Num(0, lineno=220, col_offset=33)]), [If(Compare(Name('level', Load(), lineno=221, col_offset=11), [LtE()], [Attribute(Name('self', Load(), lineno=221, col_offset=20), 'verbosity', Load(), lineno=221, col_offset=20)], lineno=221, col_offset=11), [Assign([Name('indent', Store(), lineno=222, col_offset=12)], Str('', lineno=222, col_offset=21), lineno=222, col_offset=12), If(Compare(Name('level', Load(), lineno=223, col_offset=15), [Gt()], [Num(1, lineno=223, col_offset=23)], lineno=223, col_offset=15), [Assign([Name('indent', Store(), lineno=224, col_offset=16)], BinOp(BinOp(Name('level', Load(), lineno=224, col_offset=26), Sub(), Num(1, lineno=224, col_offset=34), lineno=224, col_offset=26), Mult(), Str('  ', lineno=224, col_offset=39), lineno=224, col_offset=25), lineno=224, col_offset=16)], [], lineno=223, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=225, col_offset=12), 'stderr', Load(), lineno=225, col_offset=12), 'write', Load(), lineno=225, col_offset=12), [BinOp(BinOp(Name('indent', Load(), lineno=225, col_offset=29), Add(), Name('msg', Load(), lineno=225, col_offset=38), lineno=225, col_offset=29), Add(), Str('\n', lineno=225, col_offset=44), lineno=225, col_offset=42)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=12)], [], lineno=221, col_offset=8)], [], lineno=220, col_offset=4), FunctionDef('report', arguments([Name('self', Param(), lineno=227, col_offset=15)], None, None, []), [Pass( lineno=229, col_offset=8)], [], lineno=227, col_offset=4)], [], lineno=71, col_offset=0), If(Name('__debug__', Load(), lineno=232, col_offset=3), [Assign([Name('PYC_EXT', Store(), lineno=233, col_offset=4)], Str('.pyc', lineno=233, col_offset=14), lineno=233, col_offset=4)], [Assign([Name('PYC_EXT', Store(), lineno=235, col_offset=4)], Str('.pyo', lineno=235, col_offset=14), lineno=235, col_offset=4)], lineno=232, col_offset=0), Assign([Name('MAGIC', Store(), lineno=237, col_offset=0)], Call(Attribute(Name('imp', Load(), lineno=237, col_offset=8), 'get_magic', Load(), lineno=237, col_offset=8), [], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=0), Assign([Name('USE_ZIPIMPORT', Store(), lineno=238, col_offset=0)], Compare(Str('zipimport', lineno=238, col_offset=16), [In()], [Attribute(Name('sys', Load(), lineno=238, col_offset=31), 'builtin_module_names', Load(), lineno=238, col_offset=31)], lineno=238, col_offset=16), lineno=238, col_offset=0), Assign([Name('SITE_PY', Store(), lineno=242, col_offset=0)], Str('import sys\nif not %(semi_standalone)s:\n    del sys.path[1:]  # sys.path[0] is Contents/Resources/\n', lineno=246, col_offset=-1), lineno=242, col_offset=0), Assign([Name('ZIP_ARCHIVE', Store(), lineno=248, col_offset=0)], Str('Modules.zip', lineno=248, col_offset=14), lineno=248, col_offset=0), Assign([Name('SITE_PY_ZIP', Store(), lineno=249, col_offset=0)], BinOp(Name('SITE_PY', Load(), lineno=249, col_offset=14), Add(), BinOp(Str("sys.path.append(sys.path[0] + '/%s')\n", lineno=249, col_offset=25), Mod(), Name('ZIP_ARCHIVE', Load(), lineno=249, col_offset=68), lineno=249, col_offset=25), lineno=249, col_offset=14), lineno=249, col_offset=0), FunctionDef('getPycData', arguments([Name('fullname', Param(), lineno=251, col_offset=15), Name('code', Param(), lineno=251, col_offset=25), Name('ispkg', Param(), lineno=251, col_offset=31)], None, None, []), [If(Name('ispkg', Load(), lineno=252, col_offset=7), [AugAssign(Name('fullname', Store(), lineno=253, col_offset=8), Add(), Str('.__init__', lineno=253, col_offset=20), lineno=253, col_offset=8)], [], lineno=252, col_offset=4), Assign([Name('path', Store(), lineno=254, col_offset=4)], BinOp(Call(Attribute(Name('fullname', Load(), lineno=254, col_offset=11), 'replace', Load(), lineno=254, col_offset=11), [Str('.', lineno=254, col_offset=28), Attribute(Name('os', Load(), lineno=254, col_offset=33), 'sep', Load(), lineno=254, col_offset=33)], [], None, None, lineno=254, col_offset=11), Add(), Name('PYC_EXT', Load(), lineno=254, col_offset=43), lineno=254, col_offset=11), lineno=254, col_offset=4), Return(Tuple([Name('path', Load(), lineno=255, col_offset=11), BinOp(BinOp(Name('MAGIC', Load(), lineno=255, col_offset=17), Add(), Str('\x00\x00\x00\x00', lineno=255, col_offset=25), lineno=255, col_offset=17), Add(), Call(Attribute(Name('marshal', Load(), lineno=255, col_offset=38), 'dumps', Load(), lineno=255, col_offset=38), [Name('code', Load(), lineno=255, col_offset=52)], [], None, None, lineno=255, col_offset=38), lineno=255, col_offset=36)], Load(), lineno=255, col_offset=11), lineno=255, col_offset=4)], [], lineno=251, col_offset=0), Assign([Name('EXT_LOADER', Store(), lineno=261, col_offset=0)], Str('def __load():\n    import imp, sys, os\n    for p in sys.path:\n        path = os.path.join(p, "%(filename)s")\n        if os.path.exists(path):\n            break\n    else:\n        assert 0, "file not found: %(filename)s"\n    mod = imp.load_dynamic("%(name)s", path)\n\n__load()\ndel __load\n', lineno=274, col_offset=-1), lineno=261, col_offset=0), Assign([Name('MAYMISS_MODULES', Store(), lineno=276, col_offset=0)], List([Str('os2', lineno=276, col_offset=19), Str('nt', lineno=276, col_offset=26), Str('ntpath', lineno=276, col_offset=32), Str('dos', lineno=276, col_offset=42), Str('dospath', lineno=276, col_offset=49), Str('win32api', lineno=277, col_offset=4), Str('ce', lineno=277, col_offset=16), Str('_winreg', lineno=277, col_offset=22), Str('nturl2path', lineno=277, col_offset=33), Str('sitecustomize', lineno=277, col_offset=47), Str('org.python.core', lineno=278, col_offset=4), Str('riscos', lineno=278, col_offset=23), Str('riscosenviron', lineno=278, col_offset=33), Str('riscospath', lineno=278, col_offset=50)], Load(), lineno=276, col_offset=18), lineno=276, col_offset=0), Assign([Name('STRIP_EXEC', Store(), lineno=281, col_offset=0)], Str('/usr/bin/strip', lineno=281, col_offset=13), lineno=281, col_offset=0), Assign([Name('BOOTSTRAP_SCRIPT', Store(), lineno=294, col_offset=0)], Str('#!%(hashbang)s\n\nimport sys, os\nexecdir = os.path.dirname(sys.argv[0])\nexecutable = os.path.join(execdir, "%(executable)s")\nresdir = os.path.join(os.path.dirname(execdir), "Resources")\nlibdir = os.path.join(os.path.dirname(execdir), "Frameworks")\nmainprogram = os.path.join(resdir, "%(mainprogram)s")\n\nif %(optimize)s:\n    sys.argv.insert(1, \'-O\')\n\nsys.argv.insert(1, mainprogram)\nif %(standalone)s or %(semi_standalone)s:\n    os.environ["PYTHONPATH"] = resdir\n    if %(standalone)s:\n        os.environ["PYTHONHOME"] = resdir\nelse:\n    pypath = os.getenv("PYTHONPATH", "")\n    if pypath:\n        pypath = ":" + pypath\n    os.environ["PYTHONPATH"] = resdir + pypath\n\nos.environ["PYTHONEXECUTABLE"] = executable\nos.environ["DYLD_LIBRARY_PATH"] = libdir\nos.environ["DYLD_FRAMEWORK_PATH"] = libdir\nos.execve(executable, sys.argv, os.environ)\n', lineno=322, col_offset=-1), lineno=294, col_offset=0), Assign([Name('ARGV_EMULATOR', Store(), lineno=328, col_offset=0)], Str('import argvemulator, os\n\nargvemulator.ArgvCollector().mainloop()\nexecfile(os.path.join(os.path.split(__file__)[0], "%(realmainprogram)s"))\n', lineno=333, col_offset=-1), lineno=328, col_offset=0), Assign([Name('PYTHONFRAMEWORKGOODIES', Store(), lineno=340, col_offset=0)], List([Str('Python', lineno=341, col_offset=4), Str('Resources/English.lproj', lineno=342, col_offset=4), Str('Resources/Info.plist', lineno=343, col_offset=4)], Load(), lineno=340, col_offset=25), lineno=340, col_offset=0), FunctionDef('isFramework', arguments([], None, None, []), [Return(Compare(Call(Attribute(Attribute(Name('sys', Load(), lineno=347, col_offset=11), 'exec_prefix', Load(), lineno=347, col_offset=11), 'find', Load(), lineno=347, col_offset=11), [Str('Python.framework', lineno=347, col_offset=32)], [], None, None, lineno=347, col_offset=11), [Gt()], [Num(0, lineno=347, col_offset=54)], lineno=347, col_offset=11), lineno=347, col_offset=4)], [], lineno=346, col_offset=0), Assign([Name('LIB', Store(), lineno=350, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=350, col_offset=6), 'path', Load(), lineno=350, col_offset=6), 'join', Load(), lineno=350, col_offset=6), [Attribute(Name('sys', Load(), lineno=350, col_offset=19), 'prefix', Load(), lineno=350, col_offset=19), Str('lib', lineno=350, col_offset=31), BinOp(Str('python', lineno=350, col_offset=38), Add(), Subscript(Attribute(Name('sys', Load(), lineno=350, col_offset=49), 'version', Load(), lineno=350, col_offset=49), Slice(None, Num(3, lineno=350, col_offset=62), None), Load(), lineno=350, col_offset=49), lineno=350, col_offset=38)], [], None, None, lineno=350, col_offset=6), lineno=350, col_offset=0), Assign([Name('SITE_PACKAGES', Store(), lineno=351, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=351, col_offset=16), 'path', Load(), lineno=351, col_offset=16), 'join', Load(), lineno=351, col_offset=16), [Name('LIB', Load(), lineno=351, col_offset=29), Str('site-packages', lineno=351, col_offset=34)], [], None, None, lineno=351, col_offset=16), lineno=351, col_offset=0), ClassDef('AppBuilder', [Name('BundleBuilder', Load(), lineno=354, col_offset=17)], [Assign([Name('use_zipimport', Store(), lineno=356, col_offset=4)], Name('USE_ZIPIMPORT', Load(), lineno=356, col_offset=20), lineno=356, col_offset=4), Assign([Name('type', Store(), lineno=359, col_offset=4)], Str('APPL', lineno=359, col_offset=11), lineno=359, col_offset=4), Assign([Name('platform', Store(), lineno=362, col_offset=4)], Str('MacOS', lineno=362, col_offset=15), lineno=362, col_offset=4), Assign([Name('mainprogram', Store(), lineno=367, col_offset=4)], Name('None', Load(), lineno=367, col_offset=18), lineno=367, col_offset=4), Assign([Name('executable', Store(), lineno=373, col_offset=4)], Name('None', Load(), lineno=373, col_offset=17), lineno=373, col_offset=4), Assign([Name('nibname', Store(), lineno=377, col_offset=4)], Name('None', Load(), lineno=377, col_offset=14), lineno=377, col_offset=4), Assign([Name('iconfile', Store(), lineno=381, col_offset=4)], Name('None', Load(), lineno=381, col_offset=15), lineno=381, col_offset=4), Assign([Name('symlink_exec', Store(), lineno=384, col_offset=4)], Num(0, lineno=384, col_offset=19), lineno=384, col_offset=4), Assign([Name('standalone', Store(), lineno=387, col_offset=4)], Num(0, lineno=387, col_offset=17), lineno=387, col_offset=4), Assign([Name('semi_standalone', Store(), lineno=390, col_offset=4)], Num(0, lineno=390, col_offset=22), lineno=390, col_offset=4), Assign([Name('python', Store(), lineno=393, col_offset=4)], Name('None', Load(), lineno=393, col_offset=13), lineno=393, col_offset=4), Assign([Name('argv_emulation', Store(), lineno=397, col_offset=4)], Num(0, lineno=397, col_offset=21), lineno=397, col_offset=4), Assign([Name('excludeModules', Store(), lineno=402, col_offset=4)], List([], Load(), lineno=402, col_offset=21), lineno=402, col_offset=4), Assign([Name('includeModules', Store(), lineno=405, col_offset=4)], List([], Load(), lineno=405, col_offset=21), lineno=405, col_offset=4), Assign([Name('includePackages', Store(), lineno=408, col_offset=4)], List([], Load(), lineno=408, col_offset=22), lineno=408, col_offset=4), Assign([Name('strip', Store(), lineno=411, col_offset=4)], Num(0, lineno=411, col_offset=12), lineno=411, col_offset=4), Assign([Name('pymodules', Store(), lineno=414, col_offset=4)], List([], Load(), lineno=414, col_offset=16), lineno=414, col_offset=4), Assign([Name('missingModules', Store(), lineno=417, col_offset=4)], List([], Load(), lineno=417, col_offset=21), lineno=417, col_offset=4), Assign([Name('maybeMissingModules', Store(), lineno=418, col_offset=4)], List([], Load(), lineno=418, col_offset=26), lineno=418, col_offset=4), FunctionDef('setup', arguments([Name('self', Param(), lineno=420, col_offset=14)], None, None, []), [If(BoolOp(And(), [BoolOp(Or(), [Attribute(Name('self', Load(), lineno=421, col_offset=13), 'standalone', Load(), lineno=421, col_offset=13), Attribute(Name('self', Load(), lineno=421, col_offset=32), 'semi_standalone', Load(), lineno=421, col_offset=32)], lineno=421, col_offset=13), Compare(Attribute(Name('self', Load(), lineno=422, col_offset=16), 'mainprogram', Load(), lineno=422, col_offset=16), [Is()], [Name('None', Load(), lineno=422, col_offset=36)], lineno=422, col_offset=16)], lineno=421, col_offset=12), [Raise(Name('BundleBuilderError', Load(), lineno=423, col_offset=18), Str("must specify 'mainprogram' when building a standalone application.", lineno=423, col_offset=39), None, lineno=423, col_offset=12)], [], lineno=421, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=425, col_offset=11), 'mainprogram', Load(), lineno=425, col_offset=11), [Is()], [Name('None', Load(), lineno=425, col_offset=31)], lineno=425, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=425, col_offset=40), 'executable', Load(), lineno=425, col_offset=40), [Is()], [Name('None', Load(), lineno=425, col_offset=59)], lineno=425, col_offset=40)], lineno=425, col_offset=11), [Raise(Name('BundleBuilderError', Load(), lineno=426, col_offset=18), Str("must specify either or both of 'executable' and 'mainprogram'", lineno=426, col_offset=39), None, lineno=426, col_offset=12)], [], lineno=425, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=429, col_offset=8), 'execdir', Store(), lineno=429, col_offset=8)], Call(Name('pathjoin', Load(), lineno=429, col_offset=23), [Str('Contents', lineno=429, col_offset=32), Attribute(Name('self', Load(), lineno=429, col_offset=44), 'platform', Load(), lineno=429, col_offset=44)], [], None, None, lineno=429, col_offset=23), lineno=429, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=431, col_offset=11), 'name', Load(), lineno=431, col_offset=11), [IsNot()], [Name('None', Load(), lineno=431, col_offset=28)], lineno=431, col_offset=11), [Pass( lineno=432, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=433, col_offset=13), 'mainprogram', Load(), lineno=433, col_offset=13), [IsNot()], [Name('None', Load(), lineno=433, col_offset=37)], lineno=433, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=434, col_offset=12), 'name', Store(), lineno=434, col_offset=12)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=434, col_offset=24), 'path', Load(), lineno=434, col_offset=24), 'splitext', Load(), lineno=434, col_offset=24), [Call(Attribute(Attribute(Name('os', Load(), lineno=434, col_offset=41), 'path', Load(), lineno=434, col_offset=41), 'basename', Load(), lineno=434, col_offset=41), [Attribute(Name('self', Load(), lineno=434, col_offset=58), 'mainprogram', Load(), lineno=434, col_offset=58)], [], None, None, lineno=434, col_offset=41)], [], None, None, lineno=434, col_offset=24), Index(Num(0, lineno=434, col_offset=77)), Load(), lineno=434, col_offset=24), lineno=434, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=435, col_offset=13), 'executable', Load(), lineno=435, col_offset=13), [IsNot()], [Name('None', Load(), lineno=435, col_offset=36)], lineno=435, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=436, col_offset=12), 'name', Store(), lineno=436, col_offset=12)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=436, col_offset=24), 'path', Load(), lineno=436, col_offset=24), 'splitext', Load(), lineno=436, col_offset=24), [Call(Attribute(Attribute(Name('os', Load(), lineno=436, col_offset=41), 'path', Load(), lineno=436, col_offset=41), 'basename', Load(), lineno=436, col_offset=41), [Attribute(Name('self', Load(), lineno=436, col_offset=58), 'executable', Load(), lineno=436, col_offset=58)], [], None, None, lineno=436, col_offset=41)], [], None, None, lineno=436, col_offset=24), Index(Num(0, lineno=436, col_offset=76)), Load(), lineno=436, col_offset=24), lineno=436, col_offset=12)], [], lineno=435, col_offset=13)], lineno=433, col_offset=13)], lineno=431, col_offset=8), If(Compare(Subscript(Attribute(Name('self', Load(), lineno=437, col_offset=11), 'name', Load(), lineno=437, col_offset=11), Slice(Num(-4, lineno=437, col_offset=22), None, None), Load(), lineno=437, col_offset=11), [NotEq()], [Str('.app', lineno=437, col_offset=29)], lineno=437, col_offset=11), [AugAssign(Attribute(Name('self', Load(), lineno=438, col_offset=12), 'name', Store(), lineno=438, col_offset=12), Add(), Str('.app', lineno=438, col_offset=25), lineno=438, col_offset=12)], [], lineno=437, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=440, col_offset=11), 'executable', Load(), lineno=440, col_offset=11), [Is()], [Name('None', Load(), lineno=440, col_offset=30)], lineno=440, col_offset=11), [If(BoolOp(And(), [UnaryOp(Not(), Attribute(Name('self', Load(), lineno=441, col_offset=19), 'standalone', Load(), lineno=441, col_offset=19), lineno=441, col_offset=15), UnaryOp(Not(), Call(Name('isFramework', Load(), lineno=441, col_offset=43), [], [], None, None, lineno=441, col_offset=43), lineno=441, col_offset=39)], lineno=441, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=442, col_offset=16), 'symlink_exec', Store(), lineno=442, col_offset=16)], Num(1, lineno=442, col_offset=36), lineno=442, col_offset=16)], [], lineno=441, col_offset=12), If(Attribute(Name('self', Load(), lineno=443, col_offset=15), 'python', Load(), lineno=443, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=444, col_offset=16), 'executable', Store(), lineno=444, col_offset=16)], Attribute(Name('self', Load(), lineno=444, col_offset=34), 'python', Load(), lineno=444, col_offset=34), lineno=444, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=446, col_offset=16), 'executable', Store(), lineno=446, col_offset=16)], Attribute(Name('sys', Load(), lineno=446, col_offset=34), 'executable', Load(), lineno=446, col_offset=34), lineno=446, col_offset=16)], lineno=443, col_offset=12)], [], lineno=440, col_offset=8), If(Attribute(Name('self', Load(), lineno=448, col_offset=11), 'nibname', Load(), lineno=448, col_offset=11), [Assign([Attribute(Attribute(Name('self', Load(), lineno=449, col_offset=12), 'plist', Load(), lineno=449, col_offset=12), 'NSMainNibFile', Store(), lineno=449, col_offset=12)], Attribute(Name('self', Load(), lineno=449, col_offset=39), 'nibname', Load(), lineno=449, col_offset=39), lineno=449, col_offset=12), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=450, col_offset=19), [Attribute(Name('self', Load(), lineno=450, col_offset=27), 'plist', Load(), lineno=450, col_offset=27), Str('NSPrincipalClass', lineno=450, col_offset=39)], [], None, None, lineno=450, col_offset=19), lineno=450, col_offset=15), [Assign([Attribute(Attribute(Name('self', Load(), lineno=451, col_offset=16), 'plist', Load(), lineno=451, col_offset=16), 'NSPrincipalClass', Store(), lineno=451, col_offset=16)], Str('NSApplication', lineno=451, col_offset=46), lineno=451, col_offset=16)], [], lineno=450, col_offset=12)], [], lineno=448, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=453, col_offset=11), 'standalone', Load(), lineno=453, col_offset=11), Call(Name('isFramework', Load(), lineno=453, col_offset=31), [], [], None, None, lineno=453, col_offset=31)], lineno=453, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=454, col_offset=12), 'addPythonFramework', Load(), lineno=454, col_offset=12), [], [], None, None, lineno=454, col_offset=12), lineno=454, col_offset=12)], [], lineno=453, col_offset=8), Expr(Call(Attribute(Name('BundleBuilder', Load(), lineno=456, col_offset=8), 'setup', Load(), lineno=456, col_offset=8), [Name('self', Load(), lineno=456, col_offset=28)], [], None, None, lineno=456, col_offset=8), lineno=456, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=458, col_offset=8), 'plist', Load(), lineno=458, col_offset=8), 'CFBundleExecutable', Store(), lineno=458, col_offset=8)], Attribute(Name('self', Load(), lineno=458, col_offset=40), 'name', Load(), lineno=458, col_offset=40), lineno=458, col_offset=8), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=460, col_offset=11), 'standalone', Load(), lineno=460, col_offset=11), Attribute(Name('self', Load(), lineno=460, col_offset=30), 'semi_standalone', Load(), lineno=460, col_offset=30)], lineno=460, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=12), 'findDependencies', Load(), lineno=461, col_offset=12), [], [], None, None, lineno=461, col_offset=12), lineno=461, col_offset=12)], [], lineno=460, col_offset=8)], [], lineno=420, col_offset=4), FunctionDef('preProcess', arguments([Name('self', Param(), lineno=463, col_offset=19)], None, None, []), [Assign([Name('resdir', Store(), lineno=464, col_offset=8)], Str('Contents/Resources', lineno=464, col_offset=17), lineno=464, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=465, col_offset=11), 'executable', Load(), lineno=465, col_offset=11), [IsNot()], [Name('None', Load(), lineno=465, col_offset=34)], lineno=465, col_offset=11), [If(Compare(Attribute(Name('self', Load(), lineno=466, col_offset=15), 'mainprogram', Load(), lineno=466, col_offset=15), [Is()], [Name('None', Load(), lineno=466, col_offset=35)], lineno=466, col_offset=15), [Assign([Name('execname', Store(), lineno=467, col_offset=16)], Attribute(Name('self', Load(), lineno=467, col_offset=27), 'name', Load(), lineno=467, col_offset=27), lineno=467, col_offset=16)], [Assign([Name('execname', Store(), lineno=469, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=469, col_offset=27), 'path', Load(), lineno=469, col_offset=27), 'basename', Load(), lineno=469, col_offset=27), [Attribute(Name('self', Load(), lineno=469, col_offset=44), 'executable', Load(), lineno=469, col_offset=44)], [], None, None, lineno=469, col_offset=27), lineno=469, col_offset=16)], lineno=466, col_offset=12), Assign([Name('execpath', Store(), lineno=470, col_offset=12)], Call(Name('pathjoin', Load(), lineno=470, col_offset=23), [Attribute(Name('self', Load(), lineno=470, col_offset=32), 'execdir', Load(), lineno=470, col_offset=32), Name('execname', Load(), lineno=470, col_offset=46)], [], None, None, lineno=470, col_offset=23), lineno=470, col_offset=12), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=471, col_offset=19), 'symlink_exec', Load(), lineno=471, col_offset=19), lineno=471, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=472, col_offset=16), 'files', Load(), lineno=472, col_offset=16), 'append', Load(), lineno=472, col_offset=16), [Tuple([BinOp(Attribute(Name('self', Load(), lineno=472, col_offset=35), 'destroot', Load(), lineno=472, col_offset=35), Add(), Attribute(Name('self', Load(), lineno=472, col_offset=51), 'executable', Load(), lineno=472, col_offset=51), lineno=472, col_offset=35), Name('execpath', Load(), lineno=472, col_offset=68)], Load(), lineno=472, col_offset=35)], [], None, None, lineno=472, col_offset=16), lineno=472, col_offset=16)], [], lineno=471, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=473, col_offset=12), 'execpath', Store(), lineno=473, col_offset=12)], Name('execpath', Load(), lineno=473, col_offset=28), lineno=473, col_offset=12)], [], lineno=465, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=475, col_offset=11), 'mainprogram', Load(), lineno=475, col_offset=11), [IsNot()], [Name('None', Load(), lineno=475, col_offset=35)], lineno=475, col_offset=11), [Assign([Name('mainprogram', Store(), lineno=476, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=476, col_offset=26), 'path', Load(), lineno=476, col_offset=26), 'basename', Load(), lineno=476, col_offset=26), [Attribute(Name('self', Load(), lineno=476, col_offset=43), 'mainprogram', Load(), lineno=476, col_offset=43)], [], None, None, lineno=476, col_offset=26), lineno=476, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=477, col_offset=12), 'files', Load(), lineno=477, col_offset=12), 'append', Load(), lineno=477, col_offset=12), [Tuple([Attribute(Name('self', Load(), lineno=477, col_offset=31), 'mainprogram', Load(), lineno=477, col_offset=31), Call(Name('pathjoin', Load(), lineno=477, col_offset=49), [Name('resdir', Load(), lineno=477, col_offset=58), Name('mainprogram', Load(), lineno=477, col_offset=66)], [], None, None, lineno=477, col_offset=49)], Load(), lineno=477, col_offset=31)], [], None, None, lineno=477, col_offset=12), lineno=477, col_offset=12), If(Attribute(Name('self', Load(), lineno=478, col_offset=15), 'argv_emulation', Load(), lineno=478, col_offset=15), [Assign([Name('realmainprogram', Store(), lineno=483, col_offset=16)], Name('mainprogram', Load(), lineno=483, col_offset=34), lineno=483, col_offset=16), Assign([Name('mainprogram', Store(), lineno=484, col_offset=16)], BinOp(Str('__argvemulator_', lineno=484, col_offset=30), Add(), Name('mainprogram', Load(), lineno=484, col_offset=50), lineno=484, col_offset=30), lineno=484, col_offset=16), Assign([Name('resdirpath', Store(), lineno=485, col_offset=16)], Call(Name('pathjoin', Load(), lineno=485, col_offset=29), [Attribute(Name('self', Load(), lineno=485, col_offset=38), 'bundlepath', Load(), lineno=485, col_offset=38), Name('resdir', Load(), lineno=485, col_offset=55)], [], None, None, lineno=485, col_offset=29), lineno=485, col_offset=16), Assign([Name('mainprogrampath', Store(), lineno=486, col_offset=16)], Call(Name('pathjoin', Load(), lineno=486, col_offset=34), [Name('resdirpath', Load(), lineno=486, col_offset=43), Name('mainprogram', Load(), lineno=486, col_offset=55)], [], None, None, lineno=486, col_offset=34), lineno=486, col_offset=16), Expr(Call(Name('makedirs', Load(), lineno=487, col_offset=16), [Name('resdirpath', Load(), lineno=487, col_offset=25)], [], None, None, lineno=487, col_offset=16), lineno=487, col_offset=16), Expr(Call(Attribute(Call(Name('open', Load(), lineno=488, col_offset=16), [Name('mainprogrampath', Load(), lineno=488, col_offset=21), Str('w', lineno=488, col_offset=38)], [], None, None, lineno=488, col_offset=16), 'write', Load(), lineno=488, col_offset=16), [BinOp(Name('ARGV_EMULATOR', Load(), lineno=488, col_offset=49), Mod(), Call(Name('locals', Load(), lineno=488, col_offset=65), [], [], None, None, lineno=488, col_offset=65), lineno=488, col_offset=49)], [], None, None, lineno=488, col_offset=16), lineno=488, col_offset=16), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=489, col_offset=19), 'standalone', Load(), lineno=489, col_offset=19), Attribute(Name('self', Load(), lineno=489, col_offset=38), 'semi_standalone', Load(), lineno=489, col_offset=38)], lineno=489, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=490, col_offset=20), 'includeModules', Load(), lineno=490, col_offset=20), 'append', Load(), lineno=490, col_offset=20), [Str('argvemulator', lineno=490, col_offset=47)], [], None, None, lineno=490, col_offset=20), lineno=490, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=491, col_offset=20), 'includeModules', Load(), lineno=491, col_offset=20), 'append', Load(), lineno=491, col_offset=20), [Str('os', lineno=491, col_offset=47)], [], None, None, lineno=491, col_offset=20), lineno=491, col_offset=20)], [], lineno=489, col_offset=16), If(Compare(Str('CFBundleDocumentTypes', lineno=492, col_offset=19), [NotIn()], [Attribute(Name('self', Load(), lineno=492, col_offset=50), 'plist', Load(), lineno=492, col_offset=50)], lineno=492, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=493, col_offset=20), 'plist', Load(), lineno=493, col_offset=20), Index(Str('CFBundleDocumentTypes', lineno=493, col_offset=31)), Store(), lineno=493, col_offset=20)], List([Dict([Str('CFBundleTypeOSTypes', lineno=494, col_offset=26), Str('CFBundleTypeRole', lineno=498, col_offset=26)], [List([Str('****', lineno=495, col_offset=28), Str('fold', lineno=496, col_offset=28), Str('disk', lineno=497, col_offset=28)], Load(), lineno=494, col_offset=50), Str('Viewer', lineno=498, col_offset=46)], lineno=494, col_offset=24)], Load(), lineno=493, col_offset=58), lineno=493, col_offset=20)], [], lineno=492, col_offset=16)], [], lineno=478, col_offset=12), Assign([Name('executable', Store(), lineno=500, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=500, col_offset=25), 'path', Load(), lineno=500, col_offset=25), 'basename', Load(), lineno=500, col_offset=25), [Attribute(Name('self', Load(), lineno=500, col_offset=42), 'executable', Load(), lineno=500, col_offset=42)], [], None, None, lineno=500, col_offset=25), lineno=500, col_offset=12), Assign([Name('execdir', Store(), lineno=501, col_offset=12)], Call(Name('pathjoin', Load(), lineno=501, col_offset=22), [Attribute(Name('self', Load(), lineno=501, col_offset=31), 'bundlepath', Load(), lineno=501, col_offset=31), Attribute(Name('self', Load(), lineno=501, col_offset=48), 'execdir', Load(), lineno=501, col_offset=48)], [], None, None, lineno=501, col_offset=22), lineno=501, col_offset=12), Assign([Name('bootstrappath', Store(), lineno=502, col_offset=12)], Call(Name('pathjoin', Load(), lineno=502, col_offset=28), [Name('execdir', Load(), lineno=502, col_offset=37), Attribute(Name('self', Load(), lineno=502, col_offset=46), 'name', Load(), lineno=502, col_offset=46)], [], None, None, lineno=502, col_offset=28), lineno=502, col_offset=12), Expr(Call(Name('makedirs', Load(), lineno=503, col_offset=12), [Name('execdir', Load(), lineno=503, col_offset=21)], [], None, None, lineno=503, col_offset=12), lineno=503, col_offset=12), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=504, col_offset=15), 'standalone', Load(), lineno=504, col_offset=15), Attribute(Name('self', Load(), lineno=504, col_offset=34), 'semi_standalone', Load(), lineno=504, col_offset=34)], lineno=504, col_offset=15), [Assign([Name('hashbang', Store(), lineno=507, col_offset=16)], Str('/usr/bin/python', lineno=507, col_offset=27), lineno=507, col_offset=16)], [If(Attribute(Name('self', Load(), lineno=508, col_offset=17), 'python', Load(), lineno=508, col_offset=17), [Assign([Name('hashbang', Store(), lineno=509, col_offset=16)], Attribute(Name('self', Load(), lineno=509, col_offset=27), 'python', Load(), lineno=509, col_offset=27), lineno=509, col_offset=16)], [Assign([Name('hashbang', Store(), lineno=511, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=511, col_offset=27), 'path', Load(), lineno=511, col_offset=27), 'realpath', Load(), lineno=511, col_offset=27), [Attribute(Name('sys', Load(), lineno=511, col_offset=44), 'executable', Load(), lineno=511, col_offset=44)], [], None, None, lineno=511, col_offset=27), lineno=511, col_offset=16)], lineno=508, col_offset=17)], lineno=504, col_offset=12), Assign([Name('standalone', Store(), lineno=512, col_offset=12)], Attribute(Name('self', Load(), lineno=512, col_offset=25), 'standalone', Load(), lineno=512, col_offset=25), lineno=512, col_offset=12), Assign([Name('semi_standalone', Store(), lineno=513, col_offset=12)], Attribute(Name('self', Load(), lineno=513, col_offset=30), 'semi_standalone', Load(), lineno=513, col_offset=30), lineno=513, col_offset=12), Assign([Name('optimize', Store(), lineno=514, col_offset=12)], Attribute(Attribute(Name('sys', Load(), lineno=514, col_offset=23), 'flags', Load(), lineno=514, col_offset=23), 'optimize', Load(), lineno=514, col_offset=23), lineno=514, col_offset=12), Expr(Call(Attribute(Call(Name('open', Load(), lineno=515, col_offset=12), [Name('bootstrappath', Load(), lineno=515, col_offset=17), Str('w', lineno=515, col_offset=32)], [], None, None, lineno=515, col_offset=12), 'write', Load(), lineno=515, col_offset=12), [BinOp(Name('BOOTSTRAP_SCRIPT', Load(), lineno=515, col_offset=43), Mod(), Call(Name('locals', Load(), lineno=515, col_offset=62), [], [], None, None, lineno=515, col_offset=62), lineno=515, col_offset=43)], [], None, None, lineno=515, col_offset=12), lineno=515, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=516, col_offset=12), 'chmod', Load(), lineno=516, col_offset=12), [Name('bootstrappath', Load(), lineno=516, col_offset=21), Num(509, lineno=516, col_offset=36)], [], None, None, lineno=516, col_offset=12), lineno=516, col_offset=12)], [], lineno=475, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=518, col_offset=11), 'iconfile', Load(), lineno=518, col_offset=11), [IsNot()], [Name('None', Load(), lineno=518, col_offset=32)], lineno=518, col_offset=11), [Assign([Name('iconbase', Store(), lineno=519, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=519, col_offset=23), 'path', Load(), lineno=519, col_offset=23), 'basename', Load(), lineno=519, col_offset=23), [Attribute(Name('self', Load(), lineno=519, col_offset=40), 'iconfile', Load(), lineno=519, col_offset=40)], [], None, None, lineno=519, col_offset=23), lineno=519, col_offset=12), Assign([Attribute(Attribute(Name('self', Load(), lineno=520, col_offset=12), 'plist', Load(), lineno=520, col_offset=12), 'CFBundleIconFile', Store(), lineno=520, col_offset=12)], Name('iconbase', Load(), lineno=520, col_offset=42), lineno=520, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=521, col_offset=12), 'files', Load(), lineno=521, col_offset=12), 'append', Load(), lineno=521, col_offset=12), [Tuple([Attribute(Name('self', Load(), lineno=521, col_offset=31), 'iconfile', Load(), lineno=521, col_offset=31), Call(Name('pathjoin', Load(), lineno=521, col_offset=46), [Name('resdir', Load(), lineno=521, col_offset=55), Name('iconbase', Load(), lineno=521, col_offset=63)], [], None, None, lineno=521, col_offset=46)], Load(), lineno=521, col_offset=31)], [], None, None, lineno=521, col_offset=12), lineno=521, col_offset=12)], [], lineno=518, col_offset=8)], [], lineno=463, col_offset=4), FunctionDef('postProcess', arguments([Name('self', Param(), lineno=523, col_offset=20)], None, None, []), [If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=524, col_offset=11), 'standalone', Load(), lineno=524, col_offset=11), Attribute(Name('self', Load(), lineno=524, col_offset=30), 'semi_standalone', Load(), lineno=524, col_offset=30)], lineno=524, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=525, col_offset=12), 'addPythonModules', Load(), lineno=525, col_offset=12), [], [], None, None, lineno=525, col_offset=12), lineno=525, col_offset=12)], [], lineno=524, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=526, col_offset=11), 'strip', Load(), lineno=526, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=526, col_offset=30), 'symlink', Load(), lineno=526, col_offset=30), lineno=526, col_offset=26)], lineno=526, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=12), 'stripBinaries', Load(), lineno=527, col_offset=12), [], [], None, None, lineno=527, col_offset=12), lineno=527, col_offset=12)], [], lineno=526, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=529, col_offset=11), 'symlink_exec', Load(), lineno=529, col_offset=11), Attribute(Name('self', Load(), lineno=529, col_offset=33), 'executable', Load(), lineno=529, col_offset=33)], lineno=529, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=530, col_offset=12), 'message', Load(), lineno=530, col_offset=12), [BinOp(Str('Symlinking executable %s to %s', lineno=530, col_offset=25), Mod(), Tuple([Attribute(Name('self', Load(), lineno=530, col_offset=61), 'executable', Load(), lineno=530, col_offset=61), Attribute(Name('self', Load(), lineno=531, col_offset=20), 'execpath', Load(), lineno=531, col_offset=20)], Load(), lineno=530, col_offset=61), lineno=530, col_offset=25), Num(2, lineno=531, col_offset=36)], [], None, None, lineno=530, col_offset=12), lineno=530, col_offset=12), Assign([Name('dst', Store(), lineno=532, col_offset=12)], Call(Name('pathjoin', Load(), lineno=532, col_offset=18), [Attribute(Name('self', Load(), lineno=532, col_offset=27), 'bundlepath', Load(), lineno=532, col_offset=27), Attribute(Name('self', Load(), lineno=532, col_offset=44), 'execpath', Load(), lineno=532, col_offset=44)], [], None, None, lineno=532, col_offset=18), lineno=532, col_offset=12), Expr(Call(Name('makedirs', Load(), lineno=533, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=533, col_offset=21), 'path', Load(), lineno=533, col_offset=21), 'dirname', Load(), lineno=533, col_offset=21), [Name('dst', Load(), lineno=533, col_offset=37)], [], None, None, lineno=533, col_offset=21)], [], None, None, lineno=533, col_offset=12), lineno=533, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=534, col_offset=12), 'symlink', Load(), lineno=534, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=534, col_offset=23), 'path', Load(), lineno=534, col_offset=23), 'abspath', Load(), lineno=534, col_offset=23), [Attribute(Name('self', Load(), lineno=534, col_offset=39), 'executable', Load(), lineno=534, col_offset=39)], [], None, None, lineno=534, col_offset=23), Name('dst', Load(), lineno=534, col_offset=57)], [], None, None, lineno=534, col_offset=12), lineno=534, col_offset=12)], [], lineno=529, col_offset=8), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=536, col_offset=11), 'missingModules', Load(), lineno=536, col_offset=11), Attribute(Name('self', Load(), lineno=536, col_offset=34), 'maybeMissingModules', Load(), lineno=536, col_offset=34)], lineno=536, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=537, col_offset=12), 'reportMissing', Load(), lineno=537, col_offset=12), [], [], None, None, lineno=537, col_offset=12), lineno=537, col_offset=12)], [], lineno=536, col_offset=8)], [], lineno=523, col_offset=4), FunctionDef('addPythonFramework', arguments([Name('self', Param(), lineno=539, col_offset=27)], None, None, []), [For(Name('lib', Store(), lineno=543, col_offset=12), Attribute(Name('self', Load(), lineno=543, col_offset=19), 'libs', Load(), lineno=543, col_offset=19), [If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=544, col_offset=15), 'path', Load(), lineno=544, col_offset=15), 'basename', Load(), lineno=544, col_offset=15), [Name('lib', Load(), lineno=544, col_offset=32)], [], None, None, lineno=544, col_offset=15), [Eq()], [Str('Python.framework', lineno=544, col_offset=40)], lineno=544, col_offset=15), [Return(None, lineno=546, col_offset=16)], [], lineno=544, col_offset=12)], [], lineno=543, col_offset=8), Assign([Name('frameworkpath', Store(), lineno=548, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=548, col_offset=24), 'exec_prefix', Load(), lineno=548, col_offset=24), Slice(None, BinOp(Call(Attribute(Attribute(Name('sys', Load(), lineno=548, col_offset=41), 'exec_prefix', Load(), lineno=548, col_offset=41), 'find', Load(), lineno=548, col_offset=41), [Str('Python.framework', lineno=549, col_offset=12)], [], None, None, lineno=548, col_offset=41), Add(), Call(Name('len', Load(), lineno=549, col_offset=34), [Str('Python.framework', lineno=549, col_offset=38)], [], None, None, lineno=549, col_offset=34), lineno=548, col_offset=41), None), Load(), lineno=548, col_offset=24), lineno=548, col_offset=8), Assign([Name('version', Store(), lineno=551, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=551, col_offset=18), 'version', Load(), lineno=551, col_offset=18), Slice(None, Num(3, lineno=551, col_offset=31), None), Load(), lineno=551, col_offset=18), lineno=551, col_offset=8), Assign([Name('frameworkpath', Store(), lineno=552, col_offset=8)], Call(Name('pathjoin', Load(), lineno=552, col_offset=24), [Name('frameworkpath', Load(), lineno=552, col_offset=33), Str('Versions', lineno=552, col_offset=48), Name('version', Load(), lineno=552, col_offset=60)], [], None, None, lineno=552, col_offset=24), lineno=552, col_offset=8), Assign([Name('destbase', Store(), lineno=553, col_offset=8)], Call(Name('pathjoin', Load(), lineno=553, col_offset=19), [Str('Contents', lineno=553, col_offset=28), Str('Frameworks', lineno=553, col_offset=40), Str('Python.framework', lineno=553, col_offset=54), Str('Versions', lineno=554, col_offset=28), Name('version', Load(), lineno=554, col_offset=40)], [], None, None, lineno=553, col_offset=19), lineno=553, col_offset=8), For(Name('item', Store(), lineno=555, col_offset=12), Name('PYTHONFRAMEWORKGOODIES', Load(), lineno=555, col_offset=20), [Assign([Name('src', Store(), lineno=556, col_offset=12)], Call(Name('pathjoin', Load(), lineno=556, col_offset=18), [Name('frameworkpath', Load(), lineno=556, col_offset=27), Name('item', Load(), lineno=556, col_offset=42)], [], None, None, lineno=556, col_offset=18), lineno=556, col_offset=12), Assign([Name('dst', Store(), lineno=557, col_offset=12)], Call(Name('pathjoin', Load(), lineno=557, col_offset=18), [Name('destbase', Load(), lineno=557, col_offset=27), Name('item', Load(), lineno=557, col_offset=37)], [], None, None, lineno=557, col_offset=18), lineno=557, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=558, col_offset=12), 'files', Load(), lineno=558, col_offset=12), 'append', Load(), lineno=558, col_offset=12), [Tuple([Name('src', Load(), lineno=558, col_offset=31), Name('dst', Load(), lineno=558, col_offset=36)], Load(), lineno=558, col_offset=31)], [], None, None, lineno=558, col_offset=12), lineno=558, col_offset=12)], [], lineno=555, col_offset=8)], [], lineno=539, col_offset=4), FunctionDef('_getSiteCode', arguments([Name('self', Param(), lineno=560, col_offset=21)], None, None, []), [If(Attribute(Name('self', Load(), lineno=561, col_offset=11), 'use_zipimport', Load(), lineno=561, col_offset=11), [Return(Call(Name('compile', Load(), lineno=562, col_offset=19), [BinOp(Name('SITE_PY', Load(), lineno=562, col_offset=27), Mod(), Dict([Str('semi_standalone', lineno=562, col_offset=38)], [Attribute(Name('self', Load(), lineno=562, col_offset=57), 'semi_standalone', Load(), lineno=562, col_offset=57)], lineno=562, col_offset=37), lineno=562, col_offset=27), Str('<-bundlebuilder.py->', lineno=563, col_offset=21), Str('exec', lineno=563, col_offset=45)], [], None, None, lineno=562, col_offset=19), lineno=562, col_offset=12)], [], lineno=561, col_offset=8)], [], lineno=560, col_offset=4), FunctionDef('addPythonModules', arguments([Name('self', Param(), lineno=565, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=566, col_offset=8), 'message', Load(), lineno=566, col_offset=8), [Str('Adding Python modules', lineno=566, col_offset=21), Num(1, lineno=566, col_offset=46)], [], None, None, lineno=566, col_offset=8), lineno=566, col_offset=8), If(Attribute(Name('self', Load(), lineno=568, col_offset=11), 'use_zipimport', Load(), lineno=568, col_offset=11), [Import([alias('zipfile', None)], lineno=570, col_offset=12), Assign([Name('relpath', Store(), lineno=571, col_offset=12)], Call(Name('pathjoin', Load(), lineno=571, col_offset=22), [Str('Contents', lineno=571, col_offset=31), Str('Resources', lineno=571, col_offset=43), Name('ZIP_ARCHIVE', Load(), lineno=571, col_offset=56)], [], None, None, lineno=571, col_offset=22), lineno=571, col_offset=12), Assign([Name('abspath', Store(), lineno=572, col_offset=12)], Call(Name('pathjoin', Load(), lineno=572, col_offset=22), [Attribute(Name('self', Load(), lineno=572, col_offset=31), 'bundlepath', Load(), lineno=572, col_offset=31), Name('relpath', Load(), lineno=572, col_offset=48)], [], None, None, lineno=572, col_offset=22), lineno=572, col_offset=12), Assign([Name('zf', Store(), lineno=573, col_offset=12)], Call(Attribute(Name('zipfile', Load(), lineno=573, col_offset=17), 'ZipFile', Load(), lineno=573, col_offset=17), [Name('abspath', Load(), lineno=573, col_offset=33), Str('w', lineno=573, col_offset=42), Attribute(Name('zipfile', Load(), lineno=573, col_offset=47), 'ZIP_DEFLATED', Load(), lineno=573, col_offset=47)], [], None, None, lineno=573, col_offset=17), lineno=573, col_offset=12), For(Tuple([Name('name', Store(), lineno=574, col_offset=16), Name('code', Store(), lineno=574, col_offset=22), Name('ispkg', Store(), lineno=574, col_offset=28)], Store(), lineno=574, col_offset=16), Attribute(Name('self', Load(), lineno=574, col_offset=37), 'pymodules', Load(), lineno=574, col_offset=37), [Expr(Call(Attribute(Name('self', Load(), lineno=575, col_offset=16), 'message', Load(), lineno=575, col_offset=16), [BinOp(Str('Adding Python module %s', lineno=575, col_offset=29), Mod(), Name('name', Load(), lineno=575, col_offset=57), lineno=575, col_offset=29), Num(2, lineno=575, col_offset=63)], [], None, None, lineno=575, col_offset=16), lineno=575, col_offset=16), Assign([Tuple([Name('path', Store(), lineno=576, col_offset=16), Name('pyc', Store(), lineno=576, col_offset=22)], Store(), lineno=576, col_offset=16)], Call(Name('getPycData', Load(), lineno=576, col_offset=28), [Name('name', Load(), lineno=576, col_offset=39), Name('code', Load(), lineno=576, col_offset=45), Name('ispkg', Load(), lineno=576, col_offset=51)], [], None, None, lineno=576, col_offset=28), lineno=576, col_offset=16), Expr(Call(Attribute(Name('zf', Load(), lineno=577, col_offset=16), 'writestr', Load(), lineno=577, col_offset=16), [Name('path', Load(), lineno=577, col_offset=28), Name('pyc', Load(), lineno=577, col_offset=34)], [], None, None, lineno=577, col_offset=16), lineno=577, col_offset=16)], [], lineno=574, col_offset=12), Expr(Call(Attribute(Name('zf', Load(), lineno=578, col_offset=12), 'close', Load(), lineno=578, col_offset=12), [], [], None, None, lineno=578, col_offset=12), lineno=578, col_offset=12), Assign([Name('sitepath', Store(), lineno=580, col_offset=12)], Call(Name('pathjoin', Load(), lineno=580, col_offset=23), [Attribute(Name('self', Load(), lineno=580, col_offset=32), 'bundlepath', Load(), lineno=580, col_offset=32), Str('Contents', lineno=580, col_offset=49), Str('Resources', lineno=580, col_offset=61), BinOp(Str('site', lineno=581, col_offset=20), Add(), Name('PYC_EXT', Load(), lineno=581, col_offset=29), lineno=581, col_offset=20)], [], None, None, lineno=580, col_offset=23), lineno=580, col_offset=12), Expr(Call(Name('writePyc', Load(), lineno=582, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=582, col_offset=21), '_getSiteCode', Load(), lineno=582, col_offset=21), [], [], None, None, lineno=582, col_offset=21), Name('sitepath', Load(), lineno=582, col_offset=42)], [], None, None, lineno=582, col_offset=12), lineno=582, col_offset=12)], [For(Tuple([Name('name', Store(), lineno=585, col_offset=16), Name('code', Store(), lineno=585, col_offset=22), Name('ispkg', Store(), lineno=585, col_offset=28)], Store(), lineno=585, col_offset=16), Attribute(Name('self', Load(), lineno=585, col_offset=37), 'pymodules', Load(), lineno=585, col_offset=37), [If(Name('ispkg', Load(), lineno=586, col_offset=19), [AugAssign(Name('name', Store(), lineno=587, col_offset=20), Add(), Str('.__init__', lineno=587, col_offset=28), lineno=587, col_offset=20)], [], lineno=586, col_offset=16), Assign([Name('path', Store(), lineno=588, col_offset=16)], Call(Attribute(Name('name', Load(), lineno=588, col_offset=23), 'split', Load(), lineno=588, col_offset=23), [Str('.', lineno=588, col_offset=34)], [], None, None, lineno=588, col_offset=23), lineno=588, col_offset=16), Assign([Name('path', Store(), lineno=589, col_offset=16)], BinOp(Call(Name('pathjoin', Load(), lineno=589, col_offset=23), [Str('Contents', lineno=589, col_offset=32), Str('Resources', lineno=589, col_offset=44)], [], Name('path', Load(), lineno=589, col_offset=58), None, lineno=589, col_offset=23), Add(), Name('PYC_EXT', Load(), lineno=589, col_offset=66), lineno=589, col_offset=23), lineno=589, col_offset=16), If(Name('ispkg', Load(), lineno=591, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=20), 'message', Load(), lineno=592, col_offset=20), [BinOp(Str('Adding Python package %s', lineno=592, col_offset=33), Mod(), Name('path', Load(), lineno=592, col_offset=62), lineno=592, col_offset=33), Num(2, lineno=592, col_offset=68)], [], None, None, lineno=592, col_offset=20), lineno=592, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=594, col_offset=20), 'message', Load(), lineno=594, col_offset=20), [BinOp(Str('Adding Python module %s', lineno=594, col_offset=33), Mod(), Name('path', Load(), lineno=594, col_offset=61), lineno=594, col_offset=33), Num(2, lineno=594, col_offset=67)], [], None, None, lineno=594, col_offset=20), lineno=594, col_offset=20)], lineno=591, col_offset=16), Assign([Name('abspath', Store(), lineno=596, col_offset=16)], Call(Name('pathjoin', Load(), lineno=596, col_offset=26), [Attribute(Name('self', Load(), lineno=596, col_offset=35), 'bundlepath', Load(), lineno=596, col_offset=35), Name('path', Load(), lineno=596, col_offset=52)], [], None, None, lineno=596, col_offset=26), lineno=596, col_offset=16), Expr(Call(Name('makedirs', Load(), lineno=597, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=597, col_offset=25), 'path', Load(), lineno=597, col_offset=25), 'dirname', Load(), lineno=597, col_offset=25), [Name('abspath', Load(), lineno=597, col_offset=41)], [], None, None, lineno=597, col_offset=25)], [], None, None, lineno=597, col_offset=16), lineno=597, col_offset=16), Expr(Call(Name('writePyc', Load(), lineno=598, col_offset=16), [Name('code', Load(), lineno=598, col_offset=25), Name('abspath', Load(), lineno=598, col_offset=31)], [], None, None, lineno=598, col_offset=16), lineno=598, col_offset=16)], [], lineno=585, col_offset=12)], lineno=568, col_offset=8)], [], lineno=565, col_offset=4), FunctionDef('stripBinaries', arguments([Name('self', Param(), lineno=600, col_offset=22)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=601, col_offset=15), 'path', Load(), lineno=601, col_offset=15), 'exists', Load(), lineno=601, col_offset=15), [Name('STRIP_EXEC', Load(), lineno=601, col_offset=30)], [], None, None, lineno=601, col_offset=15), lineno=601, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=602, col_offset=12), 'message', Load(), lineno=602, col_offset=12), [BinOp(Str("Error: can't strip binaries: no strip program at %s", lineno=602, col_offset=25), Mod(), Name('STRIP_EXEC', Load(), lineno=603, col_offset=23), lineno=602, col_offset=25), Num(0, lineno=603, col_offset=35)], [], None, None, lineno=602, col_offset=12), lineno=602, col_offset=12)], [Import([alias('stat', None)], lineno=605, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=606, col_offset=12), 'message', Load(), lineno=606, col_offset=12), [Str('Stripping binaries', lineno=606, col_offset=25), Num(1, lineno=606, col_offset=47)], [], None, None, lineno=606, col_offset=12), lineno=606, col_offset=12), FunctionDef('walk', arguments([Name('top', Param(), lineno=607, col_offset=21)], None, None, []), [For(Name('name', Store(), lineno=608, col_offset=20), Call(Attribute(Name('os', Load(), lineno=608, col_offset=28), 'listdir', Load(), lineno=608, col_offset=28), [Name('top', Load(), lineno=608, col_offset=39)], [], None, None, lineno=608, col_offset=28), [Assign([Name('path', Store(), lineno=609, col_offset=20)], Call(Name('pathjoin', Load(), lineno=609, col_offset=27), [Name('top', Load(), lineno=609, col_offset=36), Name('name', Load(), lineno=609, col_offset=41)], [], None, None, lineno=609, col_offset=27), lineno=609, col_offset=20), If(Call(Attribute(Attribute(Name('os', Load(), lineno=610, col_offset=23), 'path', Load(), lineno=610, col_offset=23), 'islink', Load(), lineno=610, col_offset=23), [Name('path', Load(), lineno=610, col_offset=38)], [], None, None, lineno=610, col_offset=23), [Continue( lineno=611, col_offset=24)], [], lineno=610, col_offset=20), If(Call(Attribute(Attribute(Name('os', Load(), lineno=612, col_offset=23), 'path', Load(), lineno=612, col_offset=23), 'isdir', Load(), lineno=612, col_offset=23), [Name('path', Load(), lineno=612, col_offset=37)], [], None, None, lineno=612, col_offset=23), [Expr(Call(Name('walk', Load(), lineno=613, col_offset=24), [Name('path', Load(), lineno=613, col_offset=29)], [], None, None, lineno=613, col_offset=24), lineno=613, col_offset=24)], [Assign([Name('mod', Store(), lineno=615, col_offset=24)], Subscript(Call(Attribute(Name('os', Load(), lineno=615, col_offset=30), 'stat', Load(), lineno=615, col_offset=30), [Name('path', Load(), lineno=615, col_offset=38)], [], None, None, lineno=615, col_offset=30), Index(Attribute(Name('stat', Load(), lineno=615, col_offset=44), 'ST_MODE', Load(), lineno=615, col_offset=44)), Load(), lineno=615, col_offset=30), lineno=615, col_offset=24), If(UnaryOp(Not(), BinOp(Name('mod', Load(), lineno=616, col_offset=32), BitAnd(), Num(64, lineno=616, col_offset=38), lineno=616, col_offset=32), lineno=616, col_offset=27), [Continue( lineno=617, col_offset=28)], [], lineno=616, col_offset=24), Assign([Name('relpath', Store(), lineno=618, col_offset=24)], Subscript(Name('path', Load(), lineno=618, col_offset=34), Slice(Call(Name('len', Load(), lineno=618, col_offset=39), [Attribute(Name('self', Load(), lineno=618, col_offset=43), 'bundlepath', Load(), lineno=618, col_offset=43)], [], None, None, lineno=618, col_offset=39), None, None), Load(), lineno=618, col_offset=34), lineno=618, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=619, col_offset=24), 'message', Load(), lineno=619, col_offset=24), [BinOp(Str('Stripping %s', lineno=619, col_offset=37), Mod(), Name('relpath', Load(), lineno=619, col_offset=54), lineno=619, col_offset=37), Num(2, lineno=619, col_offset=63)], [], None, None, lineno=619, col_offset=24), lineno=619, col_offset=24), Assign([Tuple([Name('inf', Store(), lineno=620, col_offset=24), Name('outf', Store(), lineno=620, col_offset=29)], Store(), lineno=620, col_offset=24)], Call(Attribute(Name('os', Load(), lineno=620, col_offset=36), 'popen4', Load(), lineno=620, col_offset=36), [BinOp(Str('%s -S "%s"', lineno=620, col_offset=46), Mod(), Tuple([Name('STRIP_EXEC', Load(), lineno=621, col_offset=47), Name('path', Load(), lineno=621, col_offset=59)], Load(), lineno=621, col_offset=47), lineno=620, col_offset=46)], [], None, None, lineno=620, col_offset=36), lineno=620, col_offset=24), Assign([Name('output', Store(), lineno=622, col_offset=24)], Call(Attribute(Call(Attribute(Name('outf', Load(), lineno=622, col_offset=33), 'read', Load(), lineno=622, col_offset=33), [], [], None, None, lineno=622, col_offset=33), 'strip', Load(), lineno=622, col_offset=33), [], [], None, None, lineno=622, col_offset=33), lineno=622, col_offset=24), If(Name('output', Load(), lineno=623, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=626, col_offset=28), 'message', Load(), lineno=626, col_offset=28), [BinOp(Str('Problem stripping %s:', lineno=626, col_offset=41), Mod(), Name('relpath', Load(), lineno=626, col_offset=67), lineno=626, col_offset=41), Num(3, lineno=626, col_offset=76)], [], None, None, lineno=626, col_offset=28), lineno=626, col_offset=28), Expr(Call(Attribute(Name('self', Load(), lineno=627, col_offset=28), 'message', Load(), lineno=627, col_offset=28), [Name('output', Load(), lineno=627, col_offset=41), Num(3, lineno=627, col_offset=49)], [], None, None, lineno=627, col_offset=28), lineno=627, col_offset=28)], [], lineno=623, col_offset=24)], lineno=612, col_offset=20)], [], lineno=608, col_offset=16)], [], lineno=607, col_offset=12), Expr(Call(Name('walk', Load(), lineno=628, col_offset=12), [Attribute(Name('self', Load(), lineno=628, col_offset=17), 'bundlepath', Load(), lineno=628, col_offset=17)], [], None, None, lineno=628, col_offset=12), lineno=628, col_offset=12)], lineno=601, col_offset=8)], [], lineno=600, col_offset=4), FunctionDef('findDependencies', arguments([Name('self', Param(), lineno=630, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=631, col_offset=8), 'message', Load(), lineno=631, col_offset=8), [Str('Finding module dependencies', lineno=631, col_offset=21), Num(1, lineno=631, col_offset=52)], [], None, None, lineno=631, col_offset=8), lineno=631, col_offset=8), Import([alias('modulefinder', None)], lineno=632, col_offset=8), Assign([Name('mf', Store(), lineno=633, col_offset=8)], Call(Attribute(Name('modulefinder', Load(), lineno=633, col_offset=13), 'ModuleFinder', Load(), lineno=633, col_offset=13), [], [keyword('excludes', Attribute(Name('self', Load(), lineno=633, col_offset=48), 'excludeModules', Load(), lineno=633, col_offset=48))], None, None, lineno=633, col_offset=13), lineno=633, col_offset=8), If(Attribute(Name('self', Load(), lineno=634, col_offset=11), 'use_zipimport', Load(), lineno=634, col_offset=11), [Expr(Call(Attribute(Name('mf', Load(), lineno=636, col_offset=12), 'import_hook', Load(), lineno=636, col_offset=12), [Str('zlib', lineno=636, col_offset=27)], [], None, None, lineno=636, col_offset=12), lineno=636, col_offset=12)], [], lineno=634, col_offset=8), Assign([Name('site', Store(), lineno=638, col_offset=8)], Call(Attribute(Name('mf', Load(), lineno=638, col_offset=15), 'add_module', Load(), lineno=638, col_offset=15), [Str('site', lineno=638, col_offset=29)], [], None, None, lineno=638, col_offset=15), lineno=638, col_offset=8), Assign([Attribute(Name('site', Load(), lineno=639, col_offset=8), '__code__', Store(), lineno=639, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=639, col_offset=24), '_getSiteCode', Load(), lineno=639, col_offset=24), [], [], None, None, lineno=639, col_offset=24), lineno=639, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=640, col_offset=8), 'scan_code', Load(), lineno=640, col_offset=8), [Attribute(Name('site', Load(), lineno=640, col_offset=21), '__code__', Load(), lineno=640, col_offset=21), Name('site', Load(), lineno=640, col_offset=36)], [], None, None, lineno=640, col_offset=8), lineno=640, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=643, col_offset=8), 'import_hook', Load(), lineno=643, col_offset=8), [Str('warnings', lineno=643, col_offset=23)], [], None, None, lineno=643, col_offset=8), lineno=643, col_offset=8), Assign([Name('includeModules', Store(), lineno=645, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=645, col_offset=25), 'includeModules', Load(), lineno=645, col_offset=25), Slice(None, None, None), Load(), lineno=645, col_offset=25), lineno=645, col_offset=8), For(Name('name', Store(), lineno=646, col_offset=12), Attribute(Name('self', Load(), lineno=646, col_offset=20), 'includePackages', Load(), lineno=646, col_offset=20), [Expr(Call(Attribute(Name('includeModules', Load(), lineno=647, col_offset=12), 'extend', Load(), lineno=647, col_offset=12), [Call(Attribute(Call(Name('findPackageContents', Load(), lineno=647, col_offset=34), [Name('name', Load(), lineno=647, col_offset=54)], [], None, None, lineno=647, col_offset=34), 'keys', Load(), lineno=647, col_offset=34), [], [], None, None, lineno=647, col_offset=34)], [], None, None, lineno=647, col_offset=12), lineno=647, col_offset=12)], [], lineno=646, col_offset=8), For(Name('name', Store(), lineno=648, col_offset=12), Name('includeModules', Load(), lineno=648, col_offset=20), [TryExcept([Expr(Call(Attribute(Name('mf', Load(), lineno=650, col_offset=16), 'import_hook', Load(), lineno=650, col_offset=16), [Name('name', Load(), lineno=650, col_offset=31)], [], None, None, lineno=650, col_offset=16), lineno=650, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=651, col_offset=19), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=652, col_offset=16), 'missingModules', Load(), lineno=652, col_offset=16), 'append', Load(), lineno=652, col_offset=16), [Name('name', Load(), lineno=652, col_offset=43)], [], None, None, lineno=652, col_offset=16), lineno=652, col_offset=16)], lineno=651, col_offset=12)], [], lineno=649, col_offset=12)], [], lineno=648, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=654, col_offset=8), 'run_script', Load(), lineno=654, col_offset=8), [Attribute(Name('self', Load(), lineno=654, col_offset=22), 'mainprogram', Load(), lineno=654, col_offset=22)], [], None, None, lineno=654, col_offset=8), lineno=654, col_offset=8), Assign([Name('modules', Store(), lineno=655, col_offset=8)], Call(Attribute(Attribute(Name('mf', Load(), lineno=655, col_offset=18), 'modules', Load(), lineno=655, col_offset=18), 'items', Load(), lineno=655, col_offset=18), [], [], None, None, lineno=655, col_offset=18), lineno=655, col_offset=8), Expr(Call(Attribute(Name('modules', Load(), lineno=656, col_offset=8), 'sort', Load(), lineno=656, col_offset=8), [], [], None, None, lineno=656, col_offset=8), lineno=656, col_offset=8), For(Tuple([Name('name', Store(), lineno=657, col_offset=12), Name('mod', Store(), lineno=657, col_offset=18)], Store(), lineno=657, col_offset=12), Name('modules', Load(), lineno=657, col_offset=25), [Assign([Name('path', Store(), lineno=658, col_offset=12)], Attribute(Name('mod', Load(), lineno=658, col_offset=19), '__file__', Load(), lineno=658, col_offset=19), lineno=658, col_offset=12), If(BoolOp(And(), [Name('path', Load(), lineno=659, col_offset=15), Attribute(Name('self', Load(), lineno=659, col_offset=24), 'semi_standalone', Load(), lineno=659, col_offset=24)], lineno=659, col_offset=15), [If(BoolOp(And(), [Call(Attribute(Name('path', Load(), lineno=661, col_offset=19), 'startswith', Load(), lineno=661, col_offset=19), [Name('LIB', Load(), lineno=661, col_offset=35)], [], None, None, lineno=661, col_offset=19), UnaryOp(Not(), Call(Attribute(Name('path', Load(), lineno=661, col_offset=48), 'startswith', Load(), lineno=661, col_offset=48), [Name('SITE_PACKAGES', Load(), lineno=661, col_offset=64)], [], None, None, lineno=661, col_offset=48), lineno=661, col_offset=44)], lineno=661, col_offset=19), [Continue( lineno=662, col_offset=20)], [], lineno=661, col_offset=16)], [], lineno=659, col_offset=12), If(BoolOp(And(), [Name('path', Load(), lineno=663, col_offset=15), Compare(Attribute(Name('mod', Load(), lineno=663, col_offset=24), '__code__', Load(), lineno=663, col_offset=24), [Is()], [Name('None', Load(), lineno=663, col_offset=40)], lineno=663, col_offset=24)], lineno=663, col_offset=15), [Assign([Name('filename', Store(), lineno=665, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=665, col_offset=27), 'path', Load(), lineno=665, col_offset=27), 'basename', Load(), lineno=665, col_offset=27), [Name('path', Load(), lineno=665, col_offset=44)], [], None, None, lineno=665, col_offset=27), lineno=665, col_offset=16), Assign([Name('pathitems', Store(), lineno=666, col_offset=16)], BinOp(Subscript(Call(Attribute(Name('name', Load(), lineno=666, col_offset=28), 'split', Load(), lineno=666, col_offset=28), [Str('.', lineno=666, col_offset=39)], [], None, None, lineno=666, col_offset=28), Slice(None, Num(-1, lineno=666, col_offset=46), None), Load(), lineno=666, col_offset=28), Add(), List([Name('filename', Load(), lineno=666, col_offset=52)], Load(), lineno=666, col_offset=51), lineno=666, col_offset=28), lineno=666, col_offset=16), Assign([Name('dstpath', Store(), lineno=667, col_offset=16)], Call(Name('pathjoin', Load(), lineno=667, col_offset=26), [], [], Name('pathitems', Load(), lineno=667, col_offset=36), None, lineno=667, col_offset=26), lineno=667, col_offset=16), If(Attribute(Name('self', Load(), lineno=668, col_offset=19), 'use_zipimport', Load(), lineno=668, col_offset=19), [If(Compare(Name('name', Load(), lineno=669, col_offset=23), [NotEq()], [Str('zlib', lineno=669, col_offset=31)], lineno=669, col_offset=23), [Assign([Name('dstpath', Store(), lineno=672, col_offset=24)], Call(Name('pathjoin', Load(), lineno=672, col_offset=34), [Str('ExtensionModules', lineno=672, col_offset=43), Name('dstpath', Load(), lineno=672, col_offset=63)], [], None, None, lineno=672, col_offset=34), lineno=672, col_offset=24)], [], lineno=669, col_offset=20), Assign([Name('source', Store(), lineno=676, col_offset=20)], BinOp(Name('EXT_LOADER', Load(), lineno=676, col_offset=29), Mod(), Dict([Str('name', lineno=676, col_offset=43), Str('filename', lineno=676, col_offset=57)], [Name('name', Load(), lineno=676, col_offset=51), Name('dstpath', Load(), lineno=676, col_offset=69)], lineno=676, col_offset=42), lineno=676, col_offset=29), lineno=676, col_offset=20), Assign([Name('code', Store(), lineno=677, col_offset=20)], Call(Name('compile', Load(), lineno=677, col_offset=27), [Name('source', Load(), lineno=677, col_offset=35), BinOp(Str('<dynloader for %s>', lineno=677, col_offset=43), Mod(), Name('name', Load(), lineno=677, col_offset=66), lineno=677, col_offset=43), Str('exec', lineno=677, col_offset=72)], [], None, None, lineno=677, col_offset=27), lineno=677, col_offset=20), Assign([Attribute(Name('mod', Load(), lineno=678, col_offset=20), '__code__', Store(), lineno=678, col_offset=20)], Name('code', Load(), lineno=678, col_offset=35), lineno=678, col_offset=20)], [], lineno=668, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=679, col_offset=16), 'files', Load(), lineno=679, col_offset=16), 'append', Load(), lineno=679, col_offset=16), [Tuple([Name('path', Load(), lineno=679, col_offset=35), Call(Name('pathjoin', Load(), lineno=679, col_offset=41), [Str('Contents', lineno=679, col_offset=50), Str('Resources', lineno=679, col_offset=62), Name('dstpath', Load(), lineno=679, col_offset=75)], [], None, None, lineno=679, col_offset=41)], Load(), lineno=679, col_offset=35)], [], None, None, lineno=679, col_offset=16), lineno=679, col_offset=16)], [], lineno=663, col_offset=12), If(Compare(Attribute(Name('mod', Load(), lineno=680, col_offset=15), '__code__', Load(), lineno=680, col_offset=15), [IsNot()], [Name('None', Load(), lineno=680, col_offset=35)], lineno=680, col_offset=15), [Assign([Name('ispkg', Store(), lineno=681, col_offset=16)], Compare(Attribute(Name('mod', Load(), lineno=681, col_offset=24), '__path__', Load(), lineno=681, col_offset=24), [IsNot()], [Name('None', Load(), lineno=681, col_offset=44)], lineno=681, col_offset=24), lineno=681, col_offset=16), If(BoolOp(Or(), [UnaryOp(Not(), Attribute(Name('self', Load(), lineno=682, col_offset=23), 'use_zipimport', Load(), lineno=682, col_offset=23), lineno=682, col_offset=19), Compare(Name('name', Load(), lineno=682, col_offset=45), [NotEq()], [Str('site', lineno=682, col_offset=53)], lineno=682, col_offset=45)], lineno=682, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=685, col_offset=20), 'pymodules', Load(), lineno=685, col_offset=20), 'append', Load(), lineno=685, col_offset=20), [Tuple([Name('name', Load(), lineno=685, col_offset=43), Attribute(Name('mod', Load(), lineno=685, col_offset=49), '__code__', Load(), lineno=685, col_offset=49), Name('ispkg', Load(), lineno=685, col_offset=63)], Load(), lineno=685, col_offset=43)], [], None, None, lineno=685, col_offset=20), lineno=685, col_offset=20)], [], lineno=682, col_offset=16)], [], lineno=680, col_offset=12)], [], lineno=657, col_offset=8), If(Call(Name('hasattr', Load(), lineno=687, col_offset=11), [Name('mf', Load(), lineno=687, col_offset=19), Str('any_missing_maybe', lineno=687, col_offset=23)], [], None, None, lineno=687, col_offset=11), [Assign([Tuple([Name('missing', Store(), lineno=688, col_offset=12), Name('maybe', Store(), lineno=688, col_offset=21)], Store(), lineno=688, col_offset=12)], Call(Attribute(Name('mf', Load(), lineno=688, col_offset=29), 'any_missing_maybe', Load(), lineno=688, col_offset=29), [], [], None, None, lineno=688, col_offset=29), lineno=688, col_offset=12)], [Assign([Name('missing', Store(), lineno=690, col_offset=12)], Call(Attribute(Name('mf', Load(), lineno=690, col_offset=22), 'any_missing', Load(), lineno=690, col_offset=22), [], [], None, None, lineno=690, col_offset=22), lineno=690, col_offset=12), Assign([Name('maybe', Store(), lineno=691, col_offset=12)], List([], Load(), lineno=691, col_offset=20), lineno=691, col_offset=12)], lineno=687, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=692, col_offset=8), 'missingModules', Load(), lineno=692, col_offset=8), 'extend', Load(), lineno=692, col_offset=8), [Name('missing', Load(), lineno=692, col_offset=35)], [], None, None, lineno=692, col_offset=8), lineno=692, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=693, col_offset=8), 'maybeMissingModules', Load(), lineno=693, col_offset=8), 'extend', Load(), lineno=693, col_offset=8), [Name('maybe', Load(), lineno=693, col_offset=40)], [], None, None, lineno=693, col_offset=8), lineno=693, col_offset=8)], [], lineno=630, col_offset=4), FunctionDef('reportMissing', arguments([Name('self', Param(), lineno=695, col_offset=22)], None, None, []), [Assign([Name('missing', Store(), lineno=696, col_offset=8)], ListComp(Name('name', Load(), lineno=696, col_offset=19), [comprehension(Name('name', Store(), lineno=696, col_offset=28), Attribute(Name('self', Load(), lineno=696, col_offset=36), 'missingModules', Load(), lineno=696, col_offset=36), [Compare(Name('name', Load(), lineno=697, col_offset=19), [NotIn()], [Name('MAYMISS_MODULES', Load(), lineno=697, col_offset=31)], lineno=697, col_offset=19)])], lineno=696, col_offset=19), lineno=696, col_offset=8), If(Attribute(Name('self', Load(), lineno=698, col_offset=11), 'maybeMissingModules', Load(), lineno=698, col_offset=11), [Assign([Name('maybe', Store(), lineno=699, col_offset=12)], Attribute(Name('self', Load(), lineno=699, col_offset=20), 'maybeMissingModules', Load(), lineno=699, col_offset=20), lineno=699, col_offset=12)], [Assign([Name('maybe', Store(), lineno=701, col_offset=12)], ListComp(Name('name', Load(), lineno=701, col_offset=21), [comprehension(Name('name', Store(), lineno=701, col_offset=30), Name('missing', Load(), lineno=701, col_offset=38), [Compare(Str('.', lineno=701, col_offset=49), [In()], [Name('name', Load(), lineno=701, col_offset=56)], lineno=701, col_offset=49)])], lineno=701, col_offset=21), lineno=701, col_offset=12), Assign([Name('missing', Store(), lineno=702, col_offset=12)], ListComp(Name('name', Load(), lineno=702, col_offset=23), [comprehension(Name('name', Store(), lineno=702, col_offset=32), Name('missing', Load(), lineno=702, col_offset=40), [Compare(Str('.', lineno=702, col_offset=51), [NotIn()], [Name('name', Load(), lineno=702, col_offset=62)], lineno=702, col_offset=51)])], lineno=702, col_offset=23), lineno=702, col_offset=12)], lineno=698, col_offset=8), Expr(Call(Attribute(Name('missing', Load(), lineno=703, col_offset=8), 'sort', Load(), lineno=703, col_offset=8), [], [], None, None, lineno=703, col_offset=8), lineno=703, col_offset=8), Expr(Call(Attribute(Name('maybe', Load(), lineno=704, col_offset=8), 'sort', Load(), lineno=704, col_offset=8), [], [], None, None, lineno=704, col_offset=8), lineno=704, col_offset=8), If(Name('maybe', Load(), lineno=705, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=706, col_offset=12), 'message', Load(), lineno=706, col_offset=12), [Str("Warning: couldn't find the following submodules:", lineno=706, col_offset=25), Num(1, lineno=706, col_offset=77)], [], None, None, lineno=706, col_offset=12), lineno=706, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=707, col_offset=12), 'message', Load(), lineno=707, col_offset=12), [Str("    (Note that these could be false alarms -- it's not always", lineno=707, col_offset=25), Num(1, lineno=708, col_offset=44)], [], None, None, lineno=707, col_offset=12), lineno=707, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=709, col_offset=12), 'message', Load(), lineno=709, col_offset=12), [Str('    possible to distinguish between "from package import submodule" ', lineno=709, col_offset=25), Num(1, lineno=710, col_offset=48)], [], None, None, lineno=709, col_offset=12), lineno=709, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=711, col_offset=12), 'message', Load(), lineno=711, col_offset=12), [Str('    and "from package import name")', lineno=711, col_offset=25), Num(1, lineno=711, col_offset=66)], [], None, None, lineno=711, col_offset=12), lineno=711, col_offset=12), For(Name('name', Store(), lineno=712, col_offset=16), Name('maybe', Load(), lineno=712, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=713, col_offset=16), 'message', Load(), lineno=713, col_offset=16), [BinOp(Str('  ? ', lineno=713, col_offset=29), Add(), Name('name', Load(), lineno=713, col_offset=38), lineno=713, col_offset=29), Num(1, lineno=713, col_offset=44)], [], None, None, lineno=713, col_offset=16), lineno=713, col_offset=16)], [], lineno=712, col_offset=12)], [], lineno=705, col_offset=8), If(Name('missing', Load(), lineno=714, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=715, col_offset=12), 'message', Load(), lineno=715, col_offset=12), [Str("Warning: couldn't find the following modules:", lineno=715, col_offset=25), Num(1, lineno=715, col_offset=74)], [], None, None, lineno=715, col_offset=12), lineno=715, col_offset=12), For(Name('name', Store(), lineno=716, col_offset=16), Name('missing', Load(), lineno=716, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=717, col_offset=16), 'message', Load(), lineno=717, col_offset=16), [BinOp(Str('  ? ', lineno=717, col_offset=29), Add(), Name('name', Load(), lineno=717, col_offset=38), lineno=717, col_offset=29), Num(1, lineno=717, col_offset=44)], [], None, None, lineno=717, col_offset=16), lineno=717, col_offset=16)], [], lineno=716, col_offset=12)], [], lineno=714, col_offset=8)], [], lineno=695, col_offset=4), FunctionDef('report', arguments([Name('self', Param(), lineno=719, col_offset=15)], None, None, []), [Import([alias('pprint', None)], lineno=721, col_offset=8), Expr(Call(Attribute(Name('pprint', Load(), lineno=722, col_offset=8), 'pprint', Load(), lineno=722, col_offset=8), [Attribute(Name('self', Load(), lineno=722, col_offset=22), '__dict__', Load(), lineno=722, col_offset=22)], [], None, None, lineno=722, col_offset=8), lineno=722, col_offset=8), If(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=723, col_offset=11), 'standalone', Load(), lineno=723, col_offset=11), Attribute(Name('self', Load(), lineno=723, col_offset=30), 'semi_standalone', Load(), lineno=723, col_offset=30)], lineno=723, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=724, col_offset=12), 'reportMissing', Load(), lineno=724, col_offset=12), [], [], None, None, lineno=724, col_offset=12), lineno=724, col_offset=12)], [], lineno=723, col_offset=8)], [], lineno=719, col_offset=4)], [], lineno=354, col_offset=0), Assign([Name('SUFFIXES', Store(), lineno=730, col_offset=0)], ListComp(Name('_suf', Load(), lineno=730, col_offset=12), [comprehension(Tuple([Name('_suf', Store(), lineno=730, col_offset=21), Name('_mode', Store(), lineno=730, col_offset=27), Name('_tp', Store(), lineno=730, col_offset=34)], Store(), lineno=730, col_offset=21), Call(Attribute(Name('imp', Load(), lineno=730, col_offset=41), 'get_suffixes', Load(), lineno=730, col_offset=41), [], [], None, None, lineno=730, col_offset=41), [])], lineno=730, col_offset=12), lineno=730, col_offset=0), Assign([Name('identifierRE', Store(), lineno=731, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=731, col_offset=15), 'compile', Load(), lineno=731, col_offset=15), [Str('[_a-zA-z][_a-zA-Z0-9]*$', lineno=731, col_offset=26)], [], None, None, lineno=731, col_offset=15), lineno=731, col_offset=0), FunctionDef('findPackageContents', arguments([Name('name', Param(), lineno=733, col_offset=24), Name('searchpath', Param(), lineno=733, col_offset=30)], None, None, [Name('None', Load(), lineno=733, col_offset=41)]), [Assign([Name('head', Store(), lineno=734, col_offset=4)], Subscript(Call(Attribute(Name('name', Load(), lineno=734, col_offset=11), 'split', Load(), lineno=734, col_offset=11), [Str('.', lineno=734, col_offset=22)], [], None, None, lineno=734, col_offset=11), Index(Num(-1, lineno=734, col_offset=28)), Load(), lineno=734, col_offset=11), lineno=734, col_offset=4), If(Compare(Call(Attribute(Name('identifierRE', Load(), lineno=735, col_offset=7), 'match', Load(), lineno=735, col_offset=7), [Name('head', Load(), lineno=735, col_offset=26)], [], None, None, lineno=735, col_offset=7), [Is()], [Name('None', Load(), lineno=735, col_offset=35)], lineno=735, col_offset=7), [Return(Dict([], [], lineno=736, col_offset=15), lineno=736, col_offset=8)], [], lineno=735, col_offset=4), TryExcept([Assign([Tuple([Name('fp', Store(), lineno=738, col_offset=8), Name('path', Store(), lineno=738, col_offset=12), Tuple([Name('ext', Store(), lineno=738, col_offset=19), Name('mode', Store(), lineno=738, col_offset=24), Name('tp', Store(), lineno=738, col_offset=30)], Store(), lineno=738, col_offset=19)], Store(), lineno=738, col_offset=8)], Call(Attribute(Name('imp', Load(), lineno=738, col_offset=36), 'find_module', Load(), lineno=738, col_offset=36), [Name('head', Load(), lineno=738, col_offset=52), Name('searchpath', Load(), lineno=738, col_offset=58)], [], None, None, lineno=738, col_offset=36), lineno=738, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=739, col_offset=11), None, [Return(Dict([], [], lineno=740, col_offset=15), lineno=740, col_offset=8)], lineno=739, col_offset=4)], [], lineno=737, col_offset=4), Assign([Name('modules', Store(), lineno=741, col_offset=4)], Dict([Name('name', Load(), lineno=741, col_offset=15)], [Name('None', Load(), lineno=741, col_offset=21)], lineno=741, col_offset=14), lineno=741, col_offset=4), If(BoolOp(And(), [Compare(Name('tp', Load(), lineno=742, col_offset=7), [Eq()], [Attribute(Name('imp', Load(), lineno=742, col_offset=13), 'PKG_DIRECTORY', Load(), lineno=742, col_offset=13)], lineno=742, col_offset=7), Name('path', Load(), lineno=742, col_offset=35)], lineno=742, col_offset=7), [Assign([Name('files', Store(), lineno=743, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=743, col_offset=16), 'listdir', Load(), lineno=743, col_offset=16), [Name('path', Load(), lineno=743, col_offset=27)], [], None, None, lineno=743, col_offset=16), lineno=743, col_offset=8), For(Name('sub', Store(), lineno=744, col_offset=12), Name('files', Load(), lineno=744, col_offset=19), [Assign([Tuple([Name('sub', Store(), lineno=745, col_offset=12), Name('ext', Store(), lineno=745, col_offset=17)], Store(), lineno=745, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=745, col_offset=23), 'path', Load(), lineno=745, col_offset=23), 'splitext', Load(), lineno=745, col_offset=23), [Name('sub', Load(), lineno=745, col_offset=40)], [], None, None, lineno=745, col_offset=23), lineno=745, col_offset=12), Assign([Name('fullname', Store(), lineno=746, col_offset=12)], BinOp(BinOp(Name('name', Load(), lineno=746, col_offset=23), Add(), Str('.', lineno=746, col_offset=30), lineno=746, col_offset=23), Add(), Name('sub', Load(), lineno=746, col_offset=36), lineno=746, col_offset=34), lineno=746, col_offset=12), If(BoolOp(And(), [Compare(Name('sub', Load(), lineno=747, col_offset=15), [NotEq()], [Str('__init__', lineno=747, col_offset=22)], lineno=747, col_offset=15), Compare(Name('fullname', Load(), lineno=747, col_offset=37), [NotIn()], [Name('modules', Load(), lineno=747, col_offset=53)], lineno=747, col_offset=37)], lineno=747, col_offset=15), [Expr(Call(Attribute(Name('modules', Load(), lineno=748, col_offset=16), 'update', Load(), lineno=748, col_offset=16), [Call(Name('findPackageContents', Load(), lineno=748, col_offset=31), [Name('fullname', Load(), lineno=748, col_offset=51), List([Name('path', Load(), lineno=748, col_offset=62)], Load(), lineno=748, col_offset=61)], [], None, None, lineno=748, col_offset=31)], [], None, None, lineno=748, col_offset=16), lineno=748, col_offset=16)], [], lineno=747, col_offset=12)], [], lineno=744, col_offset=8)], [], lineno=742, col_offset=4), Return(Name('modules', Load(), lineno=749, col_offset=11), lineno=749, col_offset=4)], [], lineno=733, col_offset=0), FunctionDef('writePyc', arguments([Name('code', Param(), lineno=751, col_offset=13), Name('path', Param(), lineno=751, col_offset=19)], None, None, []), [Assign([Name('f', Store(), lineno=752, col_offset=4)], Call(Name('open', Load(), lineno=752, col_offset=8), [Name('path', Load(), lineno=752, col_offset=13), Str('wb', lineno=752, col_offset=19)], [], None, None, lineno=752, col_offset=8), lineno=752, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=753, col_offset=4), 'write', Load(), lineno=753, col_offset=4), [Name('MAGIC', Load(), lineno=753, col_offset=12)], [], None, None, lineno=753, col_offset=4), lineno=753, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=754, col_offset=4), 'write', Load(), lineno=754, col_offset=4), [BinOp(Str('\x00', lineno=754, col_offset=12), Mult(), Num(4, lineno=754, col_offset=19), lineno=754, col_offset=12)], [], None, None, lineno=754, col_offset=4), lineno=754, col_offset=4), Expr(Call(Attribute(Name('marshal', Load(), lineno=755, col_offset=4), 'dump', Load(), lineno=755, col_offset=4), [Name('code', Load(), lineno=755, col_offset=17), Name('f', Load(), lineno=755, col_offset=23)], [], None, None, lineno=755, col_offset=4), lineno=755, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=756, col_offset=4), 'close', Load(), lineno=756, col_offset=4), [], [], None, None, lineno=756, col_offset=4), lineno=756, col_offset=4)], [], lineno=751, col_offset=0), FunctionDef('copy', arguments([Name('src', Param(), lineno=758, col_offset=9), Name('dst', Param(), lineno=758, col_offset=14), Name('mkdirs', Param(), lineno=758, col_offset=19)], None, None, [Num(0, lineno=758, col_offset=26)]), [Expr(Str('Copy a file or a directory.', lineno=759, col_offset=4), lineno=759, col_offset=4), If(Name('mkdirs', Load(), lineno=760, col_offset=7), [Expr(Call(Name('makedirs', Load(), lineno=761, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=761, col_offset=17), 'path', Load(), lineno=761, col_offset=17), 'dirname', Load(), lineno=761, col_offset=17), [Name('dst', Load(), lineno=761, col_offset=33)], [], None, None, lineno=761, col_offset=17)], [], None, None, lineno=761, col_offset=8), lineno=761, col_offset=8)], [], lineno=760, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=762, col_offset=7), 'path', Load(), lineno=762, col_offset=7), 'isdir', Load(), lineno=762, col_offset=7), [Name('src', Load(), lineno=762, col_offset=21)], [], None, None, lineno=762, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=763, col_offset=8), 'copytree', Load(), lineno=763, col_offset=8), [Name('src', Load(), lineno=763, col_offset=24), Name('dst', Load(), lineno=763, col_offset=29)], [keyword('symlinks', Num(1, lineno=763, col_offset=43))], None, None, lineno=763, col_offset=8), lineno=763, col_offset=8)], [Expr(Call(Attribute(Name('shutil', Load(), lineno=765, col_offset=8), 'copy2', Load(), lineno=765, col_offset=8), [Name('src', Load(), lineno=765, col_offset=21), Name('dst', Load(), lineno=765, col_offset=26)], [], None, None, lineno=765, col_offset=8), lineno=765, col_offset=8)], lineno=762, col_offset=4)], [], lineno=758, col_offset=0), FunctionDef('copytodir', arguments([Name('src', Param(), lineno=767, col_offset=14), Name('dstdir', Param(), lineno=767, col_offset=19)], None, None, []), [Expr(Str('Copy a file or a directory to an existing directory.', lineno=768, col_offset=4), lineno=768, col_offset=4), Assign([Name('dst', Store(), lineno=769, col_offset=4)], Call(Name('pathjoin', Load(), lineno=769, col_offset=10), [Name('dstdir', Load(), lineno=769, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=769, col_offset=27), 'path', Load(), lineno=769, col_offset=27), 'basename', Load(), lineno=769, col_offset=27), [Name('src', Load(), lineno=769, col_offset=44)], [], None, None, lineno=769, col_offset=27)], [], None, None, lineno=769, col_offset=10), lineno=769, col_offset=4), Expr(Call(Name('copy', Load(), lineno=770, col_offset=4), [Name('src', Load(), lineno=770, col_offset=9), Name('dst', Load(), lineno=770, col_offset=14)], [], None, None, lineno=770, col_offset=4), lineno=770, col_offset=4)], [], lineno=767, col_offset=0), FunctionDef('makedirs', arguments([Name('dir', Param(), lineno=772, col_offset=13)], None, None, []), [Expr(Str("Make all directories leading up to 'dir' including the leaf\n    directory. Don't moan if any path element already exists.", lineno=774, col_offset=-1), lineno=774, col_offset=-1), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=776, col_offset=8), 'makedirs', Load(), lineno=776, col_offset=8), [Name('dir', Load(), lineno=776, col_offset=20)], [], None, None, lineno=776, col_offset=8), lineno=776, col_offset=8)], [ExceptHandler(Name('OSError', Load(), lineno=777, col_offset=11), Name('why', Store(), lineno=777, col_offset=20), [If(Compare(Attribute(Name('why', Load(), lineno=778, col_offset=11), 'errno', Load(), lineno=778, col_offset=11), [NotEq()], [Attribute(Name('errno', Load(), lineno=778, col_offset=24), 'EEXIST', Load(), lineno=778, col_offset=24)], lineno=778, col_offset=11), [Raise(None, None, None, lineno=779, col_offset=12)], [], lineno=778, col_offset=8)], lineno=777, col_offset=4)], [], lineno=775, col_offset=4)], [], lineno=772, col_offset=0), FunctionDef('symlink', arguments([Name('src', Param(), lineno=781, col_offset=12), Name('dst', Param(), lineno=781, col_offset=17), Name('mkdirs', Param(), lineno=781, col_offset=22)], None, None, [Num(0, lineno=781, col_offset=29)]), [Expr(Str('Copy a file or a directory.', lineno=782, col_offset=4), lineno=782, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=783, col_offset=11), 'path', Load(), lineno=783, col_offset=11), 'exists', Load(), lineno=783, col_offset=11), [Name('src', Load(), lineno=783, col_offset=26)], [], None, None, lineno=783, col_offset=11), lineno=783, col_offset=7), [Raise(Name('IOError', Load(), lineno=784, col_offset=14), BinOp(Str("No such file or directory: '%s'", lineno=784, col_offset=23), Mod(), Name('src', Load(), lineno=784, col_offset=59), lineno=784, col_offset=23), None, lineno=784, col_offset=8)], [], lineno=783, col_offset=4), If(Name('mkdirs', Load(), lineno=785, col_offset=7), [Expr(Call(Name('makedirs', Load(), lineno=786, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=786, col_offset=17), 'path', Load(), lineno=786, col_offset=17), 'dirname', Load(), lineno=786, col_offset=17), [Name('dst', Load(), lineno=786, col_offset=33)], [], None, None, lineno=786, col_offset=17)], [], None, None, lineno=786, col_offset=8), lineno=786, col_offset=8)], [], lineno=785, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=787, col_offset=4), 'symlink', Load(), lineno=787, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=787, col_offset=15), 'path', Load(), lineno=787, col_offset=15), 'abspath', Load(), lineno=787, col_offset=15), [Name('src', Load(), lineno=787, col_offset=31)], [], None, None, lineno=787, col_offset=15), Name('dst', Load(), lineno=787, col_offset=37)], [], None, None, lineno=787, col_offset=4), lineno=787, col_offset=4)], [], lineno=781, col_offset=0), FunctionDef('pathjoin', arguments([], 'args', None, []), [Expr(Str('Safe wrapper for os.path.join: asserts that all but the first\n    argument are relative paths.', lineno=791, col_offset=-1), lineno=791, col_offset=-1), For(Name('seg', Store(), lineno=792, col_offset=8), Subscript(Name('args', Load(), lineno=792, col_offset=15), Slice(Num(1, lineno=792, col_offset=20), None, None), Load(), lineno=792, col_offset=15), [Assert(Compare(Subscript(Name('seg', Load(), lineno=793, col_offset=15), Index(Num(0, lineno=793, col_offset=19)), Load(), lineno=793, col_offset=15), [NotEq()], [Str('/', lineno=793, col_offset=25)], lineno=793, col_offset=15), None, lineno=793, col_offset=8)], [], lineno=792, col_offset=4), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=794, col_offset=11), 'path', Load(), lineno=794, col_offset=11), 'join', Load(), lineno=794, col_offset=11), [], [], Name('args', Load(), lineno=794, col_offset=25), None, lineno=794, col_offset=11), lineno=794, col_offset=4)], [], lineno=789, col_offset=0), Assign([Name('cmdline_doc', Store(), lineno=797, col_offset=0)], Str('Usage:\n  python bundlebuilder.py [options] command\n  python mybuildscript.py [options] command\n\nCommands:\n  build      build the application\n  report     print a report\n\nOptions:\n  -b, --builddir=DIR     the build directory; defaults to "build"\n  -n, --name=NAME        application name\n  -r, --resource=FILE    extra file or folder to be copied to Resources\n  -f, --file=SRC:DST     extra file or folder to be copied into the bundle;\n                         DST must be a path relative to the bundle root\n  -e, --executable=FILE  the executable to be used\n  -m, --mainprogram=FILE the Python main program\n  -a, --argv             add a wrapper main program to create sys.argv\n  -p, --plist=FILE       .plist file (default: generate one)\n      --nib=NAME         main nib name\n  -c, --creator=CCCC     4-char creator code (default: \'????\')\n      --iconfile=FILE    filename of the icon (an .icns file) to be used\n                         as the Finder icon\n      --bundle-id=ID     the CFBundleIdentifier, in reverse-dns format\n                         (eg. org.python.BuildApplet; this is used for\n                         the preferences file name)\n  -l, --link             symlink files/folder instead of copying them\n      --link-exec        symlink the executable instead of copying it\n      --standalone       build a standalone application, which is fully\n                         independent of a Python installation\n      --semi-standalone  build a standalone application, which depends on\n                         an installed Python, yet includes all third-party\n                         modules.\n      --no-zipimport     Do not copy code into a zip file\n      --python=FILE      Python to use in #! line in stead of current Python\n      --lib=FILE         shared library or framework to be copied into\n                         the bundle\n  -x, --exclude=MODULE   exclude module (with --(semi-)standalone)\n  -i, --include=MODULE   include module (with --(semi-)standalone)\n      --package=PACKAGE  include a whole package (with --(semi-)standalone)\n      --strip            strip binaries (remove debug info)\n  -v, --verbose          increase verbosity level\n  -q, --quiet            decrease verbosity level\n  -h, --help             print this message\n', lineno=841, col_offset=-1), lineno=797, col_offset=0), FunctionDef('usage', arguments([Name('msg', Param(), lineno=843, col_offset=10)], None, None, [Name('None', Load(), lineno=843, col_offset=14)]), [If(Name('msg', Load(), lineno=844, col_offset=7), [Print(None, [Name('msg', Load(), lineno=845, col_offset=14)], True, lineno=845, col_offset=8)], [], lineno=844, col_offset=4), Print(None, [Name('cmdline_doc', Load(), lineno=846, col_offset=10)], True, lineno=846, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=847, col_offset=4), 'exit', Load(), lineno=847, col_offset=4), [Num(1, lineno=847, col_offset=13)], [], None, None, lineno=847, col_offset=4), lineno=847, col_offset=4)], [], lineno=843, col_offset=0), FunctionDef('main', arguments([Name('builder', Param(), lineno=849, col_offset=9)], None, None, [Name('None', Load(), lineno=849, col_offset=17)]), [If(Compare(Name('builder', Load(), lineno=850, col_offset=7), [Is()], [Name('None', Load(), lineno=850, col_offset=18)], lineno=850, col_offset=7), [Assign([Name('builder', Store(), lineno=851, col_offset=8)], Call(Name('AppBuilder', Load(), lineno=851, col_offset=18), [], [keyword('verbosity', Num(1, lineno=851, col_offset=39))], None, None, lineno=851, col_offset=18), lineno=851, col_offset=8)], [], lineno=850, col_offset=4), Assign([Name('shortopts', Store(), lineno=853, col_offset=4)], Str('b:n:r:f:e:m:c:p:lx:i:hvqa', lineno=853, col_offset=16), lineno=853, col_offset=4), Assign([Name('longopts', Store(), lineno=854, col_offset=4)], Tuple([Str('builddir=', lineno=854, col_offset=16), Str('name=', lineno=854, col_offset=29), Str('resource=', lineno=854, col_offset=38), Str('file=', lineno=854, col_offset=51), Str('executable=', lineno=854, col_offset=60), Str('mainprogram=', lineno=855, col_offset=8), Str('creator=', lineno=855, col_offset=24), Str('nib=', lineno=855, col_offset=36), Str('plist=', lineno=855, col_offset=44), Str('link', lineno=855, col_offset=54), Str('link-exec', lineno=856, col_offset=8), Str('help', lineno=856, col_offset=21), Str('verbose', lineno=856, col_offset=29), Str('quiet', lineno=856, col_offset=40), Str('argv', lineno=856, col_offset=49), Str('standalone', lineno=856, col_offset=57), Str('exclude=', lineno=857, col_offset=8), Str('include=', lineno=857, col_offset=20), Str('package=', lineno=857, col_offset=32), Str('strip', lineno=857, col_offset=44), Str('iconfile=', lineno=857, col_offset=53), Str('lib=', lineno=858, col_offset=8), Str('python=', lineno=858, col_offset=16), Str('semi-standalone', lineno=858, col_offset=27), Str('bundle-id=', lineno=858, col_offset=46), Str('destroot=no-zipimport', lineno=858, col_offset=60)], Load(), lineno=854, col_offset=16), lineno=854, col_offset=4), TryExcept([Assign([Tuple([Name('options', Store(), lineno=863, col_offset=8), Name('args', Store(), lineno=863, col_offset=17)], Store(), lineno=863, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=863, col_offset=24), 'getopt', Load(), lineno=863, col_offset=24), [Subscript(Attribute(Name('sys', Load(), lineno=863, col_offset=38), 'argv', Load(), lineno=863, col_offset=38), Slice(Num(1, lineno=863, col_offset=47), None, None), Load(), lineno=863, col_offset=38), Name('shortopts', Load(), lineno=863, col_offset=52), Name('longopts', Load(), lineno=863, col_offset=63)], [], None, None, lineno=863, col_offset=24), lineno=863, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=864, col_offset=11), 'error', Load(), lineno=864, col_offset=11), None, [Expr(Call(Name('usage', Load(), lineno=865, col_offset=8), [], [], None, None, lineno=865, col_offset=8), lineno=865, col_offset=8)], lineno=864, col_offset=4)], [], lineno=862, col_offset=4), For(Tuple([Name('opt', Store(), lineno=867, col_offset=8), Name('arg', Store(), lineno=867, col_offset=13)], Store(), lineno=867, col_offset=8), Name('options', Load(), lineno=867, col_offset=20), [If(Compare(Name('opt', Load(), lineno=868, col_offset=11), [In()], [Tuple([Str('-b', lineno=868, col_offset=19), Str('--builddir', lineno=868, col_offset=25)], Load(), lineno=868, col_offset=19)], lineno=868, col_offset=11), [Assign([Attribute(Name('builder', Load(), lineno=869, col_offset=12), 'builddir', Store(), lineno=869, col_offset=12)], Name('arg', Load(), lineno=869, col_offset=31), lineno=869, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=870, col_offset=13), [In()], [Tuple([Str('-n', lineno=870, col_offset=21), Str('--name', lineno=870, col_offset=27)], Load(), lineno=870, col_offset=21)], lineno=870, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=871, col_offset=12), 'name', Store(), lineno=871, col_offset=12)], Name('arg', Load(), lineno=871, col_offset=27), lineno=871, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=872, col_offset=13), [In()], [Tuple([Str('-r', lineno=872, col_offset=21), Str('--resource', lineno=872, col_offset=27)], Load(), lineno=872, col_offset=21)], lineno=872, col_offset=13), [Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=873, col_offset=12), 'resources', Load(), lineno=873, col_offset=12), 'append', Load(), lineno=873, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=873, col_offset=37), 'path', Load(), lineno=873, col_offset=37), 'normpath', Load(), lineno=873, col_offset=37), [Name('arg', Load(), lineno=873, col_offset=54)], [], None, None, lineno=873, col_offset=37)], [], None, None, lineno=873, col_offset=12), lineno=873, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=874, col_offset=13), [In()], [Tuple([Str('-f', lineno=874, col_offset=21), Str('--file', lineno=874, col_offset=27)], Load(), lineno=874, col_offset=21)], lineno=874, col_offset=13), [Assign([Name('srcdst', Store(), lineno=875, col_offset=12)], Call(Attribute(Name('arg', Load(), lineno=875, col_offset=21), 'split', Load(), lineno=875, col_offset=21), [Str(':', lineno=875, col_offset=31)], [], None, None, lineno=875, col_offset=21), lineno=875, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=876, col_offset=15), [Name('srcdst', Load(), lineno=876, col_offset=19)], [], None, None, lineno=876, col_offset=15), [NotEq()], [Num(2, lineno=876, col_offset=30)], lineno=876, col_offset=15), [Expr(Call(Name('usage', Load(), lineno=877, col_offset=16), [Str('-f or --file argument must be two paths, separated by a colon', lineno=877, col_offset=22)], [], None, None, lineno=877, col_offset=16), lineno=877, col_offset=16)], [], lineno=876, col_offset=12), Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=879, col_offset=12), 'files', Load(), lineno=879, col_offset=12), 'append', Load(), lineno=879, col_offset=12), [Name('srcdst', Load(), lineno=879, col_offset=33)], [], None, None, lineno=879, col_offset=12), lineno=879, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=880, col_offset=13), [In()], [Tuple([Str('-e', lineno=880, col_offset=21), Str('--executable', lineno=880, col_offset=27)], Load(), lineno=880, col_offset=21)], lineno=880, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=881, col_offset=12), 'executable', Store(), lineno=881, col_offset=12)], Name('arg', Load(), lineno=881, col_offset=33), lineno=881, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=882, col_offset=13), [In()], [Tuple([Str('-m', lineno=882, col_offset=21), Str('--mainprogram', lineno=882, col_offset=27)], Load(), lineno=882, col_offset=21)], lineno=882, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=883, col_offset=12), 'mainprogram', Store(), lineno=883, col_offset=12)], Name('arg', Load(), lineno=883, col_offset=34), lineno=883, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=884, col_offset=13), [In()], [Tuple([Str('-a', lineno=884, col_offset=21), Str('--argv', lineno=884, col_offset=27)], Load(), lineno=884, col_offset=21)], lineno=884, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=885, col_offset=12), 'argv_emulation', Store(), lineno=885, col_offset=12)], Num(1, lineno=885, col_offset=37), lineno=885, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=886, col_offset=13), [In()], [Tuple([Str('-c', lineno=886, col_offset=21), Str('--creator', lineno=886, col_offset=27)], Load(), lineno=886, col_offset=21)], lineno=886, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=887, col_offset=12), 'creator', Store(), lineno=887, col_offset=12)], Name('arg', Load(), lineno=887, col_offset=30), lineno=887, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=888, col_offset=13), [Eq()], [Str('--bundle-id', lineno=888, col_offset=20)], lineno=888, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=889, col_offset=12), 'bundle_id', Store(), lineno=889, col_offset=12)], Name('arg', Load(), lineno=889, col_offset=32), lineno=889, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=890, col_offset=13), [Eq()], [Str('--iconfile', lineno=890, col_offset=20)], lineno=890, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=891, col_offset=12), 'iconfile', Store(), lineno=891, col_offset=12)], Name('arg', Load(), lineno=891, col_offset=31), lineno=891, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=892, col_offset=13), [Eq()], [Str('--lib', lineno=892, col_offset=20)], lineno=892, col_offset=13), [Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=893, col_offset=12), 'libs', Load(), lineno=893, col_offset=12), 'append', Load(), lineno=893, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=893, col_offset=32), 'path', Load(), lineno=893, col_offset=32), 'normpath', Load(), lineno=893, col_offset=32), [Name('arg', Load(), lineno=893, col_offset=49)], [], None, None, lineno=893, col_offset=32)], [], None, None, lineno=893, col_offset=12), lineno=893, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=894, col_offset=13), [Eq()], [Str('--nib', lineno=894, col_offset=20)], lineno=894, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=895, col_offset=12), 'nibname', Store(), lineno=895, col_offset=12)], Name('arg', Load(), lineno=895, col_offset=30), lineno=895, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=896, col_offset=13), [In()], [Tuple([Str('-p', lineno=896, col_offset=21), Str('--plist', lineno=896, col_offset=27)], Load(), lineno=896, col_offset=21)], lineno=896, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=897, col_offset=12), 'plist', Store(), lineno=897, col_offset=12)], Call(Attribute(Name('Plist', Load(), lineno=897, col_offset=28), 'fromFile', Load(), lineno=897, col_offset=28), [Name('arg', Load(), lineno=897, col_offset=43)], [], None, None, lineno=897, col_offset=28), lineno=897, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=898, col_offset=13), [In()], [Tuple([Str('-l', lineno=898, col_offset=21), Str('--link', lineno=898, col_offset=27)], Load(), lineno=898, col_offset=21)], lineno=898, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=899, col_offset=12), 'symlink', Store(), lineno=899, col_offset=12)], Num(1, lineno=899, col_offset=30), lineno=899, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=900, col_offset=13), [Eq()], [Str('--link-exec', lineno=900, col_offset=20)], lineno=900, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=901, col_offset=12), 'symlink_exec', Store(), lineno=901, col_offset=12)], Num(1, lineno=901, col_offset=35), lineno=901, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=902, col_offset=13), [In()], [Tuple([Str('-h', lineno=902, col_offset=21), Str('--help', lineno=902, col_offset=27)], Load(), lineno=902, col_offset=21)], lineno=902, col_offset=13), [Expr(Call(Name('usage', Load(), lineno=903, col_offset=12), [], [], None, None, lineno=903, col_offset=12), lineno=903, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=904, col_offset=13), [In()], [Tuple([Str('-v', lineno=904, col_offset=21), Str('--verbose', lineno=904, col_offset=27)], Load(), lineno=904, col_offset=21)], lineno=904, col_offset=13), [AugAssign(Attribute(Name('builder', Load(), lineno=905, col_offset=12), 'verbosity', Store(), lineno=905, col_offset=12), Add(), Num(1, lineno=905, col_offset=33), lineno=905, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=906, col_offset=13), [In()], [Tuple([Str('-q', lineno=906, col_offset=21), Str('--quiet', lineno=906, col_offset=27)], Load(), lineno=906, col_offset=21)], lineno=906, col_offset=13), [AugAssign(Attribute(Name('builder', Load(), lineno=907, col_offset=12), 'verbosity', Store(), lineno=907, col_offset=12), Sub(), Num(1, lineno=907, col_offset=33), lineno=907, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=908, col_offset=13), [Eq()], [Str('--standalone', lineno=908, col_offset=20)], lineno=908, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=909, col_offset=12), 'standalone', Store(), lineno=909, col_offset=12)], Num(1, lineno=909, col_offset=33), lineno=909, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=910, col_offset=13), [Eq()], [Str('--semi-standalone', lineno=910, col_offset=20)], lineno=910, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=911, col_offset=12), 'semi_standalone', Store(), lineno=911, col_offset=12)], Num(1, lineno=911, col_offset=38), lineno=911, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=912, col_offset=13), [Eq()], [Str('--python', lineno=912, col_offset=20)], lineno=912, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=913, col_offset=12), 'python', Store(), lineno=913, col_offset=12)], Name('arg', Load(), lineno=913, col_offset=29), lineno=913, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=914, col_offset=13), [In()], [Tuple([Str('-x', lineno=914, col_offset=21), Str('--exclude', lineno=914, col_offset=27)], Load(), lineno=914, col_offset=21)], lineno=914, col_offset=13), [Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=915, col_offset=12), 'excludeModules', Load(), lineno=915, col_offset=12), 'append', Load(), lineno=915, col_offset=12), [Name('arg', Load(), lineno=915, col_offset=42)], [], None, None, lineno=915, col_offset=12), lineno=915, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=916, col_offset=13), [In()], [Tuple([Str('-i', lineno=916, col_offset=21), Str('--include', lineno=916, col_offset=27)], Load(), lineno=916, col_offset=21)], lineno=916, col_offset=13), [Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=917, col_offset=12), 'includeModules', Load(), lineno=917, col_offset=12), 'append', Load(), lineno=917, col_offset=12), [Name('arg', Load(), lineno=917, col_offset=42)], [], None, None, lineno=917, col_offset=12), lineno=917, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=918, col_offset=13), [Eq()], [Str('--package', lineno=918, col_offset=20)], lineno=918, col_offset=13), [Expr(Call(Attribute(Attribute(Name('builder', Load(), lineno=919, col_offset=12), 'includePackages', Load(), lineno=919, col_offset=12), 'append', Load(), lineno=919, col_offset=12), [Name('arg', Load(), lineno=919, col_offset=43)], [], None, None, lineno=919, col_offset=12), lineno=919, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=920, col_offset=13), [Eq()], [Str('--strip', lineno=920, col_offset=20)], lineno=920, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=921, col_offset=12), 'strip', Store(), lineno=921, col_offset=12)], Num(1, lineno=921, col_offset=28), lineno=921, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=922, col_offset=13), [Eq()], [Str('--destroot', lineno=922, col_offset=20)], lineno=922, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=923, col_offset=12), 'destroot', Store(), lineno=923, col_offset=12)], Name('arg', Load(), lineno=923, col_offset=31), lineno=923, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=924, col_offset=13), [Eq()], [Str('--no-zipimport', lineno=924, col_offset=20)], lineno=924, col_offset=13), [Assign([Attribute(Name('builder', Load(), lineno=925, col_offset=12), 'use_zipimport', Store(), lineno=925, col_offset=12)], Name('False', Load(), lineno=925, col_offset=36), lineno=925, col_offset=12)], [], lineno=924, col_offset=13)], lineno=922, col_offset=13)], lineno=920, col_offset=13)], lineno=918, col_offset=13)], lineno=916, col_offset=13)], lineno=914, col_offset=13)], lineno=912, col_offset=13)], lineno=910, col_offset=13)], lineno=908, col_offset=13)], lineno=906, col_offset=13)], lineno=904, col_offset=13)], lineno=902, col_offset=13)], lineno=900, col_offset=13)], lineno=898, col_offset=13)], lineno=896, col_offset=13)], lineno=894, col_offset=13)], lineno=892, col_offset=13)], lineno=890, col_offset=13)], lineno=888, col_offset=13)], lineno=886, col_offset=13)], lineno=884, col_offset=13)], lineno=882, col_offset=13)], lineno=880, col_offset=13)], lineno=874, col_offset=13)], lineno=872, col_offset=13)], lineno=870, col_offset=13)], lineno=868, col_offset=8)], [], lineno=867, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=927, col_offset=7), [Name('args', Load(), lineno=927, col_offset=11)], [], None, None, lineno=927, col_offset=7), [NotEq()], [Num(1, lineno=927, col_offset=20)], lineno=927, col_offset=7), [Expr(Call(Name('usage', Load(), lineno=928, col_offset=8), [Str("Must specify one command ('build', 'report' or 'help')", lineno=928, col_offset=14)], [], None, None, lineno=928, col_offset=8), lineno=928, col_offset=8)], [], lineno=927, col_offset=4), Assign([Name('command', Store(), lineno=929, col_offset=4)], Subscript(Name('args', Load(), lineno=929, col_offset=14), Index(Num(0, lineno=929, col_offset=19)), Load(), lineno=929, col_offset=14), lineno=929, col_offset=4), If(Compare(Name('command', Load(), lineno=931, col_offset=7), [Eq()], [Str('build', lineno=931, col_offset=18)], lineno=931, col_offset=7), [Expr(Call(Attribute(Name('builder', Load(), lineno=932, col_offset=8), 'setup', Load(), lineno=932, col_offset=8), [], [], None, None, lineno=932, col_offset=8), lineno=932, col_offset=8), Expr(Call(Attribute(Name('builder', Load(), lineno=933, col_offset=8), 'build', Load(), lineno=933, col_offset=8), [], [], None, None, lineno=933, col_offset=8), lineno=933, col_offset=8)], [If(Compare(Name('command', Load(), lineno=934, col_offset=9), [Eq()], [Str('report', lineno=934, col_offset=20)], lineno=934, col_offset=9), [Expr(Call(Attribute(Name('builder', Load(), lineno=935, col_offset=8), 'setup', Load(), lineno=935, col_offset=8), [], [], None, None, lineno=935, col_offset=8), lineno=935, col_offset=8), Expr(Call(Attribute(Name('builder', Load(), lineno=936, col_offset=8), 'report', Load(), lineno=936, col_offset=8), [], [], None, None, lineno=936, col_offset=8), lineno=936, col_offset=8)], [If(Compare(Name('command', Load(), lineno=937, col_offset=9), [Eq()], [Str('help', lineno=937, col_offset=20)], lineno=937, col_offset=9), [Expr(Call(Name('usage', Load(), lineno=938, col_offset=8), [], [], None, None, lineno=938, col_offset=8), lineno=938, col_offset=8)], [Expr(Call(Name('usage', Load(), lineno=940, col_offset=8), [BinOp(Str("Unknown command '%s'", lineno=940, col_offset=14), Mod(), Name('command', Load(), lineno=940, col_offset=39), lineno=940, col_offset=14)], [], None, None, lineno=940, col_offset=8), lineno=940, col_offset=8)], lineno=937, col_offset=9)], lineno=934, col_offset=9)], lineno=931, col_offset=4)], [], lineno=849, col_offset=0), FunctionDef('buildapp', arguments([], None, 'kwargs', []), [Assign([Name('builder', Store(), lineno=944, col_offset=4)], Call(Name('AppBuilder', Load(), lineno=944, col_offset=14), [], [], None, Name('kwargs', Load(), lineno=944, col_offset=27), lineno=944, col_offset=14), lineno=944, col_offset=4), Expr(Call(Name('main', Load(), lineno=945, col_offset=4), [Name('builder', Load(), lineno=945, col_offset=9)], [], None, None, lineno=945, col_offset=4), lineno=945, col_offset=4)], [], lineno=943, col_offset=0), If(Compare(Name('__name__', Load(), lineno=948, col_offset=3), [Eq()], [Str('__main__', lineno=948, col_offset=15)], lineno=948, col_offset=3), [Expr(Call(Name('main', Load(), lineno=949, col_offset=4), [], [], None, None, lineno=949, col_offset=4), lineno=949, col_offset=4)], [], lineno=948, col_offset=0)])
