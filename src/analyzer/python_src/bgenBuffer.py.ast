Module([Expr(Str('Buffers are character arrays that may contain null bytes.\n\nThere are a number of variants depending on:\n- how the buffer is allocated (for output buffers), and\n- whether and how the size is passed into and/or out of the called function.\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), ImportFrom('bgenType', [alias('Type', None), alias('InputOnlyMixIn', None), alias('OutputOnlyMixIn', None), alias('InputOnlyType', None), alias('OutputOnlyType', None)], 0, lineno=9, col_offset=0), ImportFrom('bgenOutput', [alias('*', None)], 0, lineno=10, col_offset=0), Assign([Name('type2format', Store(), lineno=14, col_offset=0)], Dict([Str('long', lineno=15, col_offset=4), Str('int', lineno=16, col_offset=4), Str('short', lineno=17, col_offset=4), Str('char', lineno=18, col_offset=4), Str('unsigned long', lineno=19, col_offset=4), Str('unsigned int', lineno=20, col_offset=4), Str('unsigned short', lineno=21, col_offset=4), Str('unsigned char', lineno=22, col_offset=4)], [Str('l', lineno=15, col_offset=12), Str('i', lineno=16, col_offset=11), Str('h', lineno=17, col_offset=13), Str('b', lineno=18, col_offset=12), Str('l', lineno=19, col_offset=21), Str('i', lineno=20, col_offset=20), Str('h', lineno=21, col_offset=22), Str('b', lineno=22, col_offset=21)], lineno=14, col_offset=14), lineno=14, col_offset=0), ClassDef('FixedInputOutputBufferType', [Name('InputOnlyType', Load(), lineno=29, col_offset=33)], [Expr(Str('Fixed buffer -- passed as (inbuffer, outbuffer).', lineno=31, col_offset=4), lineno=31, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=33, col_offset=17), Name('size', Param(), lineno=33, col_offset=23), Name('datatype', Param(), lineno=33, col_offset=29), Name('sizetype', Param(), lineno=33, col_offset=48), Name('sizeformat', Param(), lineno=33, col_offset=66)], None, None, [Str('char', lineno=33, col_offset=40), Str('int', lineno=33, col_offset=59), Name('None', Load(), lineno=33, col_offset=79)]), [Assign([Attribute(Name('self', Load(), lineno=34, col_offset=8), 'typeName', Store(), lineno=34, col_offset=8)], Str('Buffer', lineno=34, col_offset=24), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'size', Store(), lineno=35, col_offset=8)], Call(Name('str', Load(), lineno=35, col_offset=20), [Name('size', Load(), lineno=35, col_offset=24)], [], None, None, lineno=35, col_offset=20), lineno=35, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'datatype', Store(), lineno=36, col_offset=8)], Name('datatype', Load(), lineno=36, col_offset=24), lineno=36, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'sizetype', Store(), lineno=37, col_offset=8)], Name('sizetype', Load(), lineno=37, col_offset=24), lineno=37, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'sizeformat', Store(), lineno=38, col_offset=8)], BoolOp(Or(), [Name('sizeformat', Load(), lineno=38, col_offset=26), Subscript(Name('type2format', Load(), lineno=38, col_offset=40), Index(Name('sizetype', Load(), lineno=38, col_offset=52)), Load(), lineno=38, col_offset=40)], lineno=38, col_offset=26), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=8), 'label_needed', Store(), lineno=39, col_offset=8)], Num(0, lineno=39, col_offset=28), lineno=39, col_offset=8)], [], lineno=33, col_offset=4), FunctionDef('getArgDeclarations', arguments([Name('self', Param(), lineno=41, col_offset=27), Name('name', Param(), lineno=41, col_offset=33), Name('reference', Param(), lineno=41, col_offset=39), Name('constmode', Param(), lineno=41, col_offset=56), Name('outmode', Param(), lineno=41, col_offset=73)], None, None, [Name('False', Load(), lineno=41, col_offset=49), Name('False', Load(), lineno=41, col_offset=66), Name('False', Load(), lineno=41, col_offset=81)]), [If(Name('reference', Load(), lineno=42, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=43, col_offset=18), Str('Cannot pass buffer types by reference', lineno=43, col_offset=32), None, lineno=43, col_offset=12)], [], lineno=42, col_offset=8), Return(BinOp(Call(Attribute(Name('self', Load(), lineno=44, col_offset=16), 'getBufferDeclarations', Load(), lineno=44, col_offset=16), [Name('name', Load(), lineno=44, col_offset=43), Name('constmode', Load(), lineno=44, col_offset=49), Name('outmode', Load(), lineno=44, col_offset=60)], [], None, None, lineno=44, col_offset=16), Add(), Call(Attribute(Name('self', Load(), lineno=45, col_offset=16), 'getSizeDeclarations', Load(), lineno=45, col_offset=16), [Name('name', Load(), lineno=45, col_offset=41), Name('outmode', Load(), lineno=45, col_offset=47)], [], None, None, lineno=45, col_offset=16), lineno=44, col_offset=16), lineno=44, col_offset=8)], [], lineno=41, col_offset=4), FunctionDef('getBufferDeclarations', arguments([Name('self', Param(), lineno=47, col_offset=30), Name('name', Param(), lineno=47, col_offset=36), Name('constmode', Param(), lineno=47, col_offset=42), Name('outmode', Param(), lineno=47, col_offset=59)], None, None, [Name('False', Load(), lineno=47, col_offset=52), Name('False', Load(), lineno=47, col_offset=67)]), [Return(BinOp(Call(Attribute(Name('self', Load(), lineno=48, col_offset=15), 'getInputBufferDeclarations', Load(), lineno=48, col_offset=15), [Name('name', Load(), lineno=48, col_offset=47), Name('constmode', Load(), lineno=48, col_offset=53)], [], None, None, lineno=48, col_offset=15), Add(), Call(Attribute(Name('self', Load(), lineno=49, col_offset=16), 'getOutputBufferDeclarations', Load(), lineno=49, col_offset=16), [Name('name', Load(), lineno=49, col_offset=49), Name('constmode', Load(), lineno=49, col_offset=55), Name('outmode', Load(), lineno=49, col_offset=66)], [], None, None, lineno=49, col_offset=16), lineno=48, col_offset=15), lineno=48, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('getInputBufferDeclarations', arguments([Name('self', Param(), lineno=51, col_offset=35), Name('name', Param(), lineno=51, col_offset=41), Name('constmode', Param(), lineno=51, col_offset=47)], None, None, [Name('False', Load(), lineno=51, col_offset=57)]), [If(Name('constmode', Load(), lineno=52, col_offset=11), [Assign([Name('const', Store(), lineno=53, col_offset=12)], Str('const ', lineno=53, col_offset=20), lineno=53, col_offset=12)], [Assign([Name('const', Store(), lineno=55, col_offset=12)], Str('', lineno=55, col_offset=20), lineno=55, col_offset=12)], lineno=52, col_offset=8), Return(List([BinOp(Str('%s%s *%s__in__', lineno=56, col_offset=16), Mod(), Tuple([Name('const', Load(), lineno=56, col_offset=36), Attribute(Name('self', Load(), lineno=56, col_offset=43), 'datatype', Load(), lineno=56, col_offset=43), Name('name', Load(), lineno=56, col_offset=58)], Load(), lineno=56, col_offset=36), lineno=56, col_offset=16)], Load(), lineno=56, col_offset=15), lineno=56, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('getOutputBufferDeclarations', arguments([Name('self', Param(), lineno=58, col_offset=36), Name('name', Param(), lineno=58, col_offset=42), Name('constmode', Param(), lineno=58, col_offset=48), Name('outmode', Param(), lineno=58, col_offset=65)], None, None, [Name('False', Load(), lineno=58, col_offset=58), Name('False', Load(), lineno=58, col_offset=73)]), [If(Name('constmode', Load(), lineno=59, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=60, col_offset=18), Str('Cannot use const output buffer', lineno=60, col_offset=32), None, lineno=60, col_offset=12)], [], lineno=59, col_offset=8), If(Name('outmode', Load(), lineno=61, col_offset=11), [Assign([Name('out', Store(), lineno=62, col_offset=12)], Str('*', lineno=62, col_offset=18), lineno=62, col_offset=12)], [Assign([Name('out', Store(), lineno=64, col_offset=12)], Str('', lineno=64, col_offset=18), lineno=64, col_offset=12)], lineno=61, col_offset=8), Return(List([BinOp(Str('%s%s %s__out__[%s]', lineno=65, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=65, col_offset=40), 'datatype', Load(), lineno=65, col_offset=40), Name('out', Load(), lineno=65, col_offset=55), Name('name', Load(), lineno=65, col_offset=60), Attribute(Name('self', Load(), lineno=65, col_offset=66), 'size', Load(), lineno=65, col_offset=66)], Load(), lineno=65, col_offset=40), lineno=65, col_offset=16)], Load(), lineno=65, col_offset=15), lineno=65, col_offset=8)], [], lineno=58, col_offset=4), FunctionDef('getSizeDeclarations', arguments([Name('self', Param(), lineno=67, col_offset=28), Name('name', Param(), lineno=67, col_offset=34), Name('outmode', Param(), lineno=67, col_offset=40)], None, None, [Name('False', Load(), lineno=67, col_offset=48)]), [If(Name('outmode', Load(), lineno=68, col_offset=11), [Assign([Name('out', Store(), lineno=69, col_offset=12)], Str('*', lineno=69, col_offset=18), lineno=69, col_offset=12)], [Assign([Name('out', Store(), lineno=71, col_offset=12)], Str('', lineno=71, col_offset=18), lineno=71, col_offset=12)], lineno=68, col_offset=8), Return(List([BinOp(Str('%s%s %s__len__', lineno=72, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=72, col_offset=35), 'sizetype', Load(), lineno=72, col_offset=35), Name('out', Load(), lineno=72, col_offset=50), Name('name', Load(), lineno=72, col_offset=55)], Load(), lineno=72, col_offset=35), lineno=72, col_offset=16)], Load(), lineno=72, col_offset=15), lineno=72, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('getAuxDeclarations', arguments([Name('self', Param(), lineno=74, col_offset=27), Name('name', Param(), lineno=74, col_offset=33)], None, None, []), [Return(List([BinOp(Str('int %s__in_len__', lineno=75, col_offset=16), Mod(), Name('name', Load(), lineno=75, col_offset=37), lineno=75, col_offset=16)], Load(), lineno=75, col_offset=15), lineno=75, col_offset=8)], [], lineno=74, col_offset=4), FunctionDef('getargsFormat', arguments([Name('self', Param(), lineno=77, col_offset=22)], None, None, []), [Return(Str('s#', lineno=78, col_offset=15), lineno=78, col_offset=8)], [], lineno=77, col_offset=4), FunctionDef('getargsArgs', arguments([Name('self', Param(), lineno=80, col_offset=20), Name('name', Param(), lineno=80, col_offset=26)], None, None, []), [Return(BinOp(Str('&%s__in__, &%s__in_len__', lineno=81, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=81, col_offset=45), Name('name', Load(), lineno=81, col_offset=51)], Load(), lineno=81, col_offset=45), lineno=81, col_offset=15), lineno=81, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('getargsCheck', arguments([Name('self', Param(), lineno=83, col_offset=21), Name('name', Param(), lineno=83, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=84, col_offset=8), [Str('if (%s__in_len__ != %s)', lineno=84, col_offset=15), Name('name', Load(), lineno=84, col_offset=42), Attribute(Name('self', Load(), lineno=84, col_offset=48), 'size', Load(), lineno=84, col_offset=48)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8), Expr(Call(Name('OutLbrace', Load(), lineno=85, col_offset=8), [], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Expr(Call(Name('Output', Load(), lineno=86, col_offset=8), [Str('PyErr_SetString(PyExc_TypeError, "buffer length should be %s");', lineno=86, col_offset=15), Attribute(Name('self', Load(), lineno=87, col_offset=15), 'size', Load(), lineno=87, col_offset=15)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=8), Expr(Call(Name('Output', Load(), lineno=88, col_offset=8), [Str('goto %s__error__;', lineno=88, col_offset=15), Name('name', Load(), lineno=88, col_offset=36)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=8), 'label_needed', Store(), lineno=89, col_offset=8)], Num(1, lineno=89, col_offset=28), lineno=89, col_offset=8), Expr(Call(Name('OutRbrace', Load(), lineno=90, col_offset=8), [], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'transferSize', Load(), lineno=91, col_offset=8), [Name('name', Load(), lineno=91, col_offset=26)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('transferSize', arguments([Name('self', Param(), lineno=93, col_offset=21), Name('name', Param(), lineno=93, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=94, col_offset=8), [Str('%s__len__ = %s__in_len__;', lineno=94, col_offset=15), Name('name', Load(), lineno=94, col_offset=44), Name('name', Load(), lineno=94, col_offset=50)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=96, col_offset=19), Name('name', Param(), lineno=96, col_offset=25)], None, None, []), [Return(BinOp(Str('%s__in__, %s__out__', lineno=97, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=97, col_offset=40), Name('name', Load(), lineno=97, col_offset=46)], Load(), lineno=97, col_offset=40), lineno=97, col_offset=15), lineno=97, col_offset=8)], [], lineno=96, col_offset=4), FunctionDef('mkvalueFormat', arguments([Name('self', Param(), lineno=99, col_offset=22)], None, None, []), [Return(Str('s#', lineno=100, col_offset=15), lineno=100, col_offset=8)], [], lineno=99, col_offset=4), FunctionDef('mkvalueArgs', arguments([Name('self', Param(), lineno=102, col_offset=20), Name('name', Param(), lineno=102, col_offset=26)], None, None, []), [Return(BinOp(Str('%s__out__, (int)%s', lineno=103, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=103, col_offset=39), Attribute(Name('self', Load(), lineno=103, col_offset=45), 'size', Load(), lineno=103, col_offset=45)], Load(), lineno=103, col_offset=39), lineno=103, col_offset=15), lineno=103, col_offset=8)], [], lineno=102, col_offset=4), FunctionDef('cleanup', arguments([Name('self', Param(), lineno=105, col_offset=16), Name('name', Param(), lineno=105, col_offset=22)], None, None, []), [If(Attribute(Name('self', Load(), lineno=106, col_offset=11), 'label_needed', Load(), lineno=106, col_offset=11), [Expr(Call(Name('DedentLevel', Load(), lineno=107, col_offset=12), [], [], None, None, lineno=107, col_offset=12), lineno=107, col_offset=12), Expr(Call(Name('Output', Load(), lineno=108, col_offset=12), [Str(' %s__error__: ;', lineno=108, col_offset=19), Name('name', Load(), lineno=108, col_offset=38)], [], None, None, lineno=108, col_offset=12), lineno=108, col_offset=12), Expr(Call(Name('IndentLevel', Load(), lineno=109, col_offset=12), [], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12)], [], lineno=106, col_offset=8)], [], lineno=105, col_offset=4)], [], lineno=29, col_offset=0), ClassDef('FixedCombinedInputOutputBufferType', [Name('FixedInputOutputBufferType', Load(), lineno=112, col_offset=41)], [Expr(Str('Like fixed buffer -- but same parameter is input and output.', lineno=114, col_offset=4), lineno=114, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=116, col_offset=19), Name('name', Param(), lineno=116, col_offset=25)], None, None, []), [Return(BinOp(Str('(%s *)memcpy(%s__out__, %s__in__, %s)', lineno=117, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=118, col_offset=13), 'datatype', Load(), lineno=118, col_offset=13), Name('name', Load(), lineno=118, col_offset=28), Name('name', Load(), lineno=118, col_offset=36), Attribute(Name('self', Load(), lineno=118, col_offset=46), 'size', Load(), lineno=118, col_offset=46)], Load(), lineno=118, col_offset=13), lineno=117, col_offset=15), lineno=117, col_offset=8)], [], lineno=116, col_offset=4)], [], lineno=112, col_offset=0), ClassDef('InputOnlyBufferMixIn', [Name('InputOnlyMixIn', Load(), lineno=121, col_offset=27)], [FunctionDef('getOutputBufferDeclarations', arguments([Name('self', Param(), lineno=123, col_offset=36), Name('name', Param(), lineno=123, col_offset=42), Name('constmode', Param(), lineno=123, col_offset=48), Name('outmode', Param(), lineno=123, col_offset=65)], None, None, [Name('False', Load(), lineno=123, col_offset=58), Name('False', Load(), lineno=123, col_offset=73)]), [Return(List([], Load(), lineno=124, col_offset=15), lineno=124, col_offset=8)], [], lineno=123, col_offset=4)], [], lineno=121, col_offset=0), ClassDef('OutputOnlyBufferMixIn', [Name('OutputOnlyMixIn', Load(), lineno=127, col_offset=28)], [FunctionDef('getInputBufferDeclarations', arguments([Name('self', Param(), lineno=129, col_offset=35), Name('name', Param(), lineno=129, col_offset=41), Name('constmode', Param(), lineno=129, col_offset=47)], None, None, [Name('False', Load(), lineno=129, col_offset=57)]), [Return(List([], Load(), lineno=130, col_offset=15), lineno=130, col_offset=8)], [], lineno=129, col_offset=4)], [], lineno=127, col_offset=0), ClassDef('OptionalInputBufferMixIn', [], [Expr(Str('Add to input buffers if the buffer may be omitted: pass None in Python\n    and the C code will get a NULL pointer and zero size', lineno=135, col_offset=-1), lineno=135, col_offset=-1), FunctionDef('getargsFormat', arguments([Name('self', Param(), lineno=137, col_offset=22)], None, None, []), [Return(Str('z#', lineno=138, col_offset=15), lineno=138, col_offset=8)], [], lineno=137, col_offset=4)], [], lineno=132, col_offset=0), ClassDef('FixedInputBufferType', [Name('InputOnlyBufferMixIn', Load(), lineno=141, col_offset=27), Name('FixedInputOutputBufferType', Load(), lineno=141, col_offset=49)], [Expr(Str('Fixed size input buffer -- passed without size information.\n\n    Instantiate with the size as parameter.\n    ', lineno=146, col_offset=-1), lineno=146, col_offset=-1), FunctionDef('passInput', arguments([Name('self', Param(), lineno=148, col_offset=18), Name('name', Param(), lineno=148, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__in__', lineno=149, col_offset=15), Mod(), Name('name', Load(), lineno=149, col_offset=28), lineno=149, col_offset=15), lineno=149, col_offset=8)], [], lineno=148, col_offset=4)], [], lineno=141, col_offset=0), ClassDef('OptionalFixedInputBufferType', [Name('OptionalInputBufferMixIn', Load(), lineno=151, col_offset=35), Name('FixedInputBufferType', Load(), lineno=151, col_offset=61)], [Pass( lineno=152, col_offset=4)], [], lineno=151, col_offset=0), ClassDef('FixedOutputBufferType', [Name('OutputOnlyBufferMixIn', Load(), lineno=154, col_offset=28), Name('FixedInputOutputBufferType', Load(), lineno=154, col_offset=51)], [Expr(Str('Fixed size output buffer -- passed without size information.\n\n    Instantiate with the size as parameter.\n    ', lineno=159, col_offset=-1), lineno=159, col_offset=-1), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=161, col_offset=19), Name('name', Param(), lineno=161, col_offset=25)], None, None, []), [Return(BinOp(Str('%s__out__', lineno=162, col_offset=15), Mod(), Name('name', Load(), lineno=162, col_offset=29), lineno=162, col_offset=15), lineno=162, col_offset=8)], [], lineno=161, col_offset=4)], [], lineno=154, col_offset=0), ClassDef('VarInputBufferType', [Name('FixedInputBufferType', Load(), lineno=165, col_offset=25)], [Expr(Str('Variable size input buffer -- passed as (buffer, size).\n\n    Instantiate without size parameter.\n    ', lineno=170, col_offset=-1), lineno=170, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=172, col_offset=17), Name('datatype', Param(), lineno=172, col_offset=23), Name('sizetype', Param(), lineno=172, col_offset=42), Name('sizeformat', Param(), lineno=172, col_offset=60)], None, None, [Str('char', lineno=172, col_offset=34), Str('int', lineno=172, col_offset=53), Name('None', Load(), lineno=172, col_offset=73)]), [Expr(Call(Attribute(Name('FixedInputBufferType', Load(), lineno=173, col_offset=8), '__init__', Load(), lineno=173, col_offset=8), [Name('self', Load(), lineno=173, col_offset=38), Str('0', lineno=173, col_offset=44), Name('datatype', Load(), lineno=173, col_offset=49), Name('sizetype', Load(), lineno=173, col_offset=59), Name('sizeformat', Load(), lineno=173, col_offset=69)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8)], [], lineno=172, col_offset=4), FunctionDef('getargsCheck', arguments([Name('self', Param(), lineno=175, col_offset=21), Name('name', Param(), lineno=175, col_offset=27)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=176, col_offset=8), [Str('%s__len__ = %s__in_len__;', lineno=176, col_offset=15), Name('name', Load(), lineno=176, col_offset=44), Name('name', Load(), lineno=176, col_offset=50)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=175, col_offset=4), FunctionDef('passInput', arguments([Name('self', Param(), lineno=178, col_offset=18), Name('name', Param(), lineno=178, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__in__, %s__len__', lineno=179, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=179, col_offset=40), Name('name', Load(), lineno=179, col_offset=46)], Load(), lineno=179, col_offset=40), lineno=179, col_offset=15), lineno=179, col_offset=8)], [], lineno=178, col_offset=4)], [], lineno=165, col_offset=0), ClassDef('ReverseInputBufferMixin', [], [Expr(Str(' Mixin for input buffers that are passed as (size, buffer) ', lineno=182, col_offset=4), lineno=182, col_offset=4), FunctionDef('passInput', arguments([Name('self', Param(), lineno=184, col_offset=18), Name('name', Param(), lineno=184, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__len__, %s__in__', lineno=185, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=185, col_offset=40), Name('name', Load(), lineno=185, col_offset=46)], Load(), lineno=185, col_offset=40), lineno=185, col_offset=15), lineno=185, col_offset=8)], [], lineno=184, col_offset=4)], [], lineno=181, col_offset=0), ClassDef('OptionalVarInputBufferType', [Name('OptionalInputBufferMixIn', Load(), lineno=187, col_offset=33), Name('VarInputBufferType', Load(), lineno=187, col_offset=59)], [Pass( lineno=188, col_offset=4)], [], lineno=187, col_offset=0), ClassDef('StructInputOutputBufferType', [Name('FixedInputOutputBufferType', Load(), lineno=193, col_offset=34)], [Expr(Str('Structure buffer -- passed as a structure pointer.\n\n    Instantiate with the struct type as parameter.\n    ', lineno=198, col_offset=-1), lineno=198, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=200, col_offset=17), Name('type', Param(), lineno=200, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('FixedInputOutputBufferType', Load(), lineno=201, col_offset=8), '__init__', Load(), lineno=201, col_offset=8), [Name('self', Load(), lineno=201, col_offset=44), BinOp(Str('sizeof(%s)', lineno=201, col_offset=50), Mod(), Name('type', Load(), lineno=201, col_offset=65), lineno=201, col_offset=50)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=202, col_offset=8), 'typeName', Store(), lineno=202, col_offset=8), Attribute(Name('self', Load(), lineno=202, col_offset=24), 'type', Store(), lineno=202, col_offset=24)], Name('type', Load(), lineno=202, col_offset=36), lineno=202, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('getInputBufferDeclarations', arguments([Name('self', Param(), lineno=204, col_offset=35), Name('name', Param(), lineno=204, col_offset=41), Name('constmode', Param(), lineno=204, col_offset=47)], None, None, [Name('False', Load(), lineno=204, col_offset=57)]), [If(Name('constmode', Load(), lineno=205, col_offset=11), [Assign([Name('const', Store(), lineno=206, col_offset=12)], Str('const ', lineno=206, col_offset=20), lineno=206, col_offset=12)], [Assign([Name('const', Store(), lineno=208, col_offset=12)], Str('', lineno=208, col_offset=20), lineno=208, col_offset=12)], lineno=205, col_offset=8), Return(List([BinOp(Str('%s%s *%s__in__', lineno=209, col_offset=16), Mod(), Tuple([Name('const', Load(), lineno=209, col_offset=36), Attribute(Name('self', Load(), lineno=209, col_offset=43), 'type', Load(), lineno=209, col_offset=43), Name('name', Load(), lineno=209, col_offset=54)], Load(), lineno=209, col_offset=36), lineno=209, col_offset=16)], Load(), lineno=209, col_offset=15), lineno=209, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('getSizeDeclarations', arguments([Name('self', Param(), lineno=211, col_offset=28), Name('name', Param(), lineno=211, col_offset=34), Name('outmode', Param(), lineno=211, col_offset=40)], None, None, [Name('False', Load(), lineno=211, col_offset=48)]), [Return(List([], Load(), lineno=212, col_offset=15), lineno=212, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('getAuxDeclarations', arguments([Name('self', Param(), lineno=214, col_offset=27), Name('name', Param(), lineno=214, col_offset=33)], None, None, []), [Return(List([BinOp(Str('int %s__in_len__', lineno=215, col_offset=16), Mod(), Name('name', Load(), lineno=215, col_offset=38), lineno=215, col_offset=16)], Load(), lineno=215, col_offset=15), lineno=215, col_offset=8)], [], lineno=214, col_offset=4), FunctionDef('getOutputBufferDeclarations', arguments([Name('self', Param(), lineno=217, col_offset=36), Name('name', Param(), lineno=217, col_offset=42), Name('constmode', Param(), lineno=217, col_offset=48), Name('outmode', Param(), lineno=217, col_offset=65)], None, None, [Name('False', Load(), lineno=217, col_offset=58), Name('False', Load(), lineno=217, col_offset=73)]), [If(Name('constmode', Load(), lineno=218, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=219, col_offset=18), Str('Cannot use const output buffer', lineno=219, col_offset=32), None, lineno=219, col_offset=12)], [], lineno=218, col_offset=8), If(Name('outmode', Load(), lineno=220, col_offset=11), [Assign([Name('out', Store(), lineno=221, col_offset=12)], Str('*', lineno=221, col_offset=18), lineno=221, col_offset=12)], [Assign([Name('out', Store(), lineno=223, col_offset=12)], Str('', lineno=223, col_offset=18), lineno=223, col_offset=12)], lineno=220, col_offset=8), Return(List([BinOp(Str('%s%s %s__out__', lineno=224, col_offset=16), Mod(), Tuple([Attribute(Name('self', Load(), lineno=224, col_offset=36), 'type', Load(), lineno=224, col_offset=36), Name('out', Load(), lineno=224, col_offset=47), Name('name', Load(), lineno=224, col_offset=52)], Load(), lineno=224, col_offset=36), lineno=224, col_offset=16)], Load(), lineno=224, col_offset=15), lineno=224, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('getargsArgs', arguments([Name('self', Param(), lineno=226, col_offset=20), Name('name', Param(), lineno=226, col_offset=26)], None, None, []), [Return(BinOp(Str('(char **)&%s__in__, &%s__in_len__', lineno=227, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=227, col_offset=54), Name('name', Load(), lineno=227, col_offset=60)], Load(), lineno=227, col_offset=54), lineno=227, col_offset=15), lineno=227, col_offset=8)], [], lineno=226, col_offset=4), FunctionDef('transferSize', arguments([Name('self', Param(), lineno=229, col_offset=21), Name('name', Param(), lineno=229, col_offset=27)], None, None, []), [Pass( lineno=230, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('passInput', arguments([Name('self', Param(), lineno=232, col_offset=18), Name('name', Param(), lineno=232, col_offset=24)], None, None, []), [Return(BinOp(Str('%s__in__', lineno=233, col_offset=15), Mod(), Name('name', Load(), lineno=233, col_offset=28), lineno=233, col_offset=15), lineno=233, col_offset=8)], [], lineno=232, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=235, col_offset=19), Name('name', Param(), lineno=235, col_offset=25)], None, None, []), [Return(BinOp(Str('%s__in__, &%s__out__', lineno=236, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=236, col_offset=41), Name('name', Load(), lineno=236, col_offset=47)], Load(), lineno=236, col_offset=41), lineno=236, col_offset=15), lineno=236, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('mkvalueArgs', arguments([Name('self', Param(), lineno=238, col_offset=20), Name('name', Param(), lineno=238, col_offset=26)], None, None, []), [Return(BinOp(Str('(char *)&%s__out__, (int)%s', lineno=239, col_offset=15), Mod(), Tuple([Name('name', Load(), lineno=239, col_offset=48), Attribute(Name('self', Load(), lineno=239, col_offset=54), 'size', Load(), lineno=239, col_offset=54)], Load(), lineno=239, col_offset=48), lineno=239, col_offset=15), lineno=239, col_offset=8)], [], lineno=238, col_offset=4)], [], lineno=193, col_offset=0), ClassDef('StructCombinedInputOutputBufferType', [Name('StructInputOutputBufferType', Load(), lineno=242, col_offset=42)], [Expr(Str('Like structure buffer -- but same parameter is input and output.', lineno=244, col_offset=4), lineno=244, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=246, col_offset=19), Name('name', Param(), lineno=246, col_offset=25)], None, None, []), [Return(BinOp(Str('(%s *)memcpy((char *)%s__out__, (char *)%s__in__, %s)', lineno=247, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=248, col_offset=13), 'type', Load(), lineno=248, col_offset=13), Name('name', Load(), lineno=248, col_offset=33), Name('name', Load(), lineno=248, col_offset=52), Attribute(Name('self', Load(), lineno=248, col_offset=62), 'size', Load(), lineno=248, col_offset=62)], Load(), lineno=248, col_offset=13), lineno=247, col_offset=15), lineno=247, col_offset=8)], [], lineno=246, col_offset=4)], [], lineno=242, col_offset=0), ClassDef('StructInputBufferType', [Name('InputOnlyBufferMixIn', Load(), lineno=251, col_offset=28), Name('StructInputOutputBufferType', Load(), lineno=251, col_offset=50)], [Expr(Str('Fixed size input buffer -- passed as a pointer to a structure.\n\n    Instantiate with the struct type as parameter.\n    ', lineno=256, col_offset=-1), lineno=256, col_offset=-1)], [], lineno=251, col_offset=0), ClassDef('StructByValueBufferType', [Name('StructInputBufferType', Load(), lineno=259, col_offset=30)], [Expr(Str('Fixed size input buffer -- passed as a structure BY VALUE.\n\n    Instantiate with the struct type as parameter.\n    ', lineno=264, col_offset=-1), lineno=264, col_offset=-1), FunctionDef('passInput', arguments([Name('self', Param(), lineno=266, col_offset=18), Name('name', Param(), lineno=266, col_offset=24)], None, None, []), [Return(BinOp(Str('*%s__in__', lineno=267, col_offset=15), Mod(), Name('name', Load(), lineno=267, col_offset=29), lineno=267, col_offset=15), lineno=267, col_offset=8)], [], lineno=266, col_offset=4)], [], lineno=259, col_offset=0), ClassDef('StructOutputBufferType', [Name('OutputOnlyBufferMixIn', Load(), lineno=270, col_offset=29), Name('StructInputOutputBufferType', Load(), lineno=270, col_offset=52)], [Expr(Str('Fixed size output buffer -- passed as a pointer to a structure.\n\n    Instantiate with the struct type as parameter.\n    ', lineno=275, col_offset=-1), lineno=275, col_offset=-1), FunctionDef('getSizeDeclarations', arguments([Name('self', Param(), lineno=277, col_offset=28), Name('name', Param(), lineno=277, col_offset=34), Name('outmode', Param(), lineno=277, col_offset=40)], None, None, [Name('False', Load(), lineno=277, col_offset=48)]), [Return(List([], Load(), lineno=278, col_offset=15), lineno=278, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('getAuxDeclarations', arguments([Name('self', Param(), lineno=280, col_offset=27), Name('name', Param(), lineno=280, col_offset=33)], None, None, []), [Return(List([], Load(), lineno=281, col_offset=15), lineno=281, col_offset=8)], [], lineno=280, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=283, col_offset=19), Name('name', Param(), lineno=283, col_offset=25)], None, None, []), [Return(BinOp(Str('&%s__out__', lineno=284, col_offset=15), Mod(), Name('name', Load(), lineno=284, col_offset=30), lineno=284, col_offset=15), lineno=284, col_offset=8)], [], lineno=283, col_offset=4)], [], lineno=270, col_offset=0), ClassDef('ArrayOutputBufferType', [Name('OutputOnlyBufferMixIn', Load(), lineno=287, col_offset=28), Name('StructInputOutputBufferType', Load(), lineno=287, col_offset=51)], [Expr(Str('Fixed size output buffer -- declared as a typedef, passed as an array.\n\n    Instantiate with the struct type as parameter.\n    ', lineno=292, col_offset=-1), lineno=292, col_offset=-1), FunctionDef('getSizeDeclarations', arguments([Name('self', Param(), lineno=294, col_offset=28), Name('name', Param(), lineno=294, col_offset=34), Name('outmode', Param(), lineno=294, col_offset=40)], None, None, [Name('False', Load(), lineno=294, col_offset=48)]), [Return(List([], Load(), lineno=295, col_offset=15), lineno=295, col_offset=8)], [], lineno=294, col_offset=4), FunctionDef('getAuxDeclarations', arguments([Name('self', Param(), lineno=297, col_offset=27), Name('name', Param(), lineno=297, col_offset=33)], None, None, []), [Return(List([], Load(), lineno=298, col_offset=15), lineno=298, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('passOutput', arguments([Name('self', Param(), lineno=300, col_offset=19), Name('name', Param(), lineno=300, col_offset=25)], None, None, []), [Return(BinOp(Str('%s__out__', lineno=301, col_offset=15), Mod(), Name('name', Load(), lineno=301, col_offset=29), lineno=301, col_offset=15), lineno=301, col_offset=8)], [], lineno=300, col_offset=4)], [], lineno=287, col_offset=0)])
