Module([Import([alias('sys', None), alias('codecs', None)], lineno=7, col_offset=0), Import([alias('unittest', None), alias('re', None)], lineno=8, col_offset=0), ImportFrom('httplib', [alias('HTTPException', None)], 0, lineno=9, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=10, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=11, col_offset=0), ClassDef('TestBase', [], [Assign([Name('encoding', Store(), lineno=14, col_offset=4)], Str('', lineno=14, col_offset=22), lineno=14, col_offset=4), Assign([Name('codec', Store(), lineno=15, col_offset=4)], Name('None', Load(), lineno=15, col_offset=22), lineno=15, col_offset=4), Assign([Name('tstring', Store(), lineno=16, col_offset=4)], Str('', lineno=16, col_offset=22), lineno=16, col_offset=4), Assign([Name('codectests', Store(), lineno=18, col_offset=4)], Name('None', Load(), lineno=18, col_offset=22), lineno=18, col_offset=4), Assign([Name('roundtriptest', Store(), lineno=19, col_offset=4)], Num(1, lineno=19, col_offset=22), lineno=19, col_offset=4), Assign([Name('has_iso10646', Store(), lineno=20, col_offset=4)], Num(0, lineno=20, col_offset=22), lineno=20, col_offset=4), Assign([Name('xmlcharnametest', Store(), lineno=21, col_offset=4)], Name('None', Load(), lineno=21, col_offset=22), lineno=21, col_offset=4), Assign([Name('unmappedunicode', Store(), lineno=22, col_offset=4)], Str(u'\udeee', lineno=22, col_offset=22), lineno=22, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=24, col_offset=14)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=25, col_offset=11), 'codec', Load(), lineno=25, col_offset=11), [Is()], [Name('None', Load(), lineno=25, col_offset=25)], lineno=25, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=26, col_offset=12), 'codec', Store(), lineno=26, col_offset=12)], Call(Attribute(Name('codecs', Load(), lineno=26, col_offset=25), 'lookup', Load(), lineno=26, col_offset=25), [Attribute(Name('self', Load(), lineno=26, col_offset=39), 'encoding', Load(), lineno=26, col_offset=39)], [], None, None, lineno=26, col_offset=25), lineno=26, col_offset=12)], [], lineno=25, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'encode', Store(), lineno=27, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=27, col_offset=22), 'codec', Load(), lineno=27, col_offset=22), 'encode', Load(), lineno=27, col_offset=22), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'decode', Store(), lineno=28, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=28, col_offset=22), 'codec', Load(), lineno=28, col_offset=22), 'decode', Load(), lineno=28, col_offset=22), lineno=28, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'reader', Store(), lineno=29, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=29, col_offset=22), 'codec', Load(), lineno=29, col_offset=22), 'streamreader', Load(), lineno=29, col_offset=22), lineno=29, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=30, col_offset=8), 'writer', Store(), lineno=30, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=30, col_offset=22), 'codec', Load(), lineno=30, col_offset=22), 'streamwriter', Load(), lineno=30, col_offset=22), lineno=30, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=31, col_offset=8), 'incrementalencoder', Store(), lineno=31, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=31, col_offset=34), 'codec', Load(), lineno=31, col_offset=34), 'incrementalencoder', Load(), lineno=31, col_offset=34), lineno=31, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=32, col_offset=8), 'incrementaldecoder', Store(), lineno=32, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=32, col_offset=34), 'codec', Load(), lineno=32, col_offset=34), 'incrementaldecoder', Load(), lineno=32, col_offset=34), lineno=32, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('test_chunkcoding', arguments([Name('self', Param(), lineno=34, col_offset=25)], None, None, []), [For(Tuple([Name('native', Store(), lineno=35, col_offset=12), Name('utf8', Store(), lineno=35, col_offset=20)], Store(), lineno=35, col_offset=12), Call(Name('zip', Load(), lineno=35, col_offset=28), [], [], ListComp(Call(Attribute(Call(Name('StringIO', Load(), lineno=35, col_offset=34), [Name('f', Load(), lineno=35, col_offset=43)], [], None, None, lineno=35, col_offset=34), 'readlines', Load(), lineno=35, col_offset=34), [], [], None, None, lineno=35, col_offset=34), [comprehension(Name('f', Store(), lineno=36, col_offset=38), Attribute(Name('self', Load(), lineno=36, col_offset=43), 'tstring', Load(), lineno=36, col_offset=43), [])], lineno=35, col_offset=34), None, lineno=35, col_offset=28), [Assign([Name('u', Store(), lineno=37, col_offset=12)], Subscript(Call(Attribute(Name('self', Load(), lineno=37, col_offset=16), 'decode', Load(), lineno=37, col_offset=16), [Name('native', Load(), lineno=37, col_offset=28)], [], None, None, lineno=37, col_offset=16), Index(Num(0, lineno=37, col_offset=36)), Load(), lineno=37, col_offset=16), lineno=37, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=12), 'assertEqual', Load(), lineno=38, col_offset=12), [Name('u', Load(), lineno=38, col_offset=29), Call(Attribute(Name('utf8', Load(), lineno=38, col_offset=32), 'decode', Load(), lineno=38, col_offset=32), [Str('utf-8', lineno=38, col_offset=44)], [], None, None, lineno=38, col_offset=32)], [], None, None, lineno=38, col_offset=12), lineno=38, col_offset=12), If(Attribute(Name('self', Load(), lineno=39, col_offset=15), 'roundtriptest', Load(), lineno=39, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=16), 'assertEqual', Load(), lineno=40, col_offset=16), [Name('native', Load(), lineno=40, col_offset=33), Subscript(Call(Attribute(Name('self', Load(), lineno=40, col_offset=41), 'encode', Load(), lineno=40, col_offset=41), [Name('u', Load(), lineno=40, col_offset=53)], [], None, None, lineno=40, col_offset=41), Index(Num(0, lineno=40, col_offset=56)), Load(), lineno=40, col_offset=41)], [], None, None, lineno=40, col_offset=16), lineno=40, col_offset=16)], [], lineno=39, col_offset=12)], [], lineno=35, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('test_errorhandle', arguments([Name('self', Param(), lineno=42, col_offset=25)], None, None, []), [For(Tuple([Name('source', Store(), lineno=43, col_offset=12), Name('scheme', Store(), lineno=43, col_offset=20), Name('expected', Store(), lineno=43, col_offset=28)], Store(), lineno=43, col_offset=12), Attribute(Name('self', Load(), lineno=43, col_offset=40), 'codectests', Load(), lineno=43, col_offset=40), [If(Compare(Call(Name('type', Load(), lineno=44, col_offset=15), [Name('source', Load(), lineno=44, col_offset=20)], [], None, None, lineno=44, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=44, col_offset=31), [Str('', lineno=44, col_offset=36)], [], None, None, lineno=44, col_offset=31)], lineno=44, col_offset=15), [Assign([Name('func', Store(), lineno=45, col_offset=16)], Attribute(Name('self', Load(), lineno=45, col_offset=23), 'decode', Load(), lineno=45, col_offset=23), lineno=45, col_offset=16)], [Assign([Name('func', Store(), lineno=47, col_offset=16)], Attribute(Name('self', Load(), lineno=47, col_offset=23), 'encode', Load(), lineno=47, col_offset=23), lineno=47, col_offset=16)], lineno=44, col_offset=12), If(Name('expected', Load(), lineno=48, col_offset=15), [Assign([Name('result', Store(), lineno=49, col_offset=16)], Subscript(Call(Name('func', Load(), lineno=49, col_offset=25), [Name('source', Load(), lineno=49, col_offset=30), Name('scheme', Load(), lineno=49, col_offset=38)], [], None, None, lineno=49, col_offset=25), Index(Num(0, lineno=49, col_offset=46)), Load(), lineno=49, col_offset=25), lineno=49, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=16), 'assertEqual', Load(), lineno=50, col_offset=16), [Name('result', Load(), lineno=50, col_offset=33), Name('expected', Load(), lineno=50, col_offset=41)], [], None, None, lineno=50, col_offset=16), lineno=50, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=16), 'assertRaises', Load(), lineno=52, col_offset=16), [Name('UnicodeError', Load(), lineno=52, col_offset=34), Name('func', Load(), lineno=52, col_offset=48), Name('source', Load(), lineno=52, col_offset=54), Name('scheme', Load(), lineno=52, col_offset=62)], [], None, None, lineno=52, col_offset=16), lineno=52, col_offset=16)], lineno=48, col_offset=12)], [], lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('test_xmlcharrefreplace', arguments([Name('self', Param(), lineno=54, col_offset=31)], None, None, []), [If(Attribute(Name('self', Load(), lineno=55, col_offset=11), 'has_iso10646', Load(), lineno=55, col_offset=11), [Return(None, lineno=56, col_offset=12)], [], lineno=55, col_offset=8), Assign([Name('s', Store(), lineno=58, col_offset=8)], Str(u'\u0b13\u0b23\u0b60 nd eggs', lineno=58, col_offset=12), lineno=58, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertEqual', Load(), lineno=59, col_offset=8), [Subscript(Call(Attribute(Name('self', Load(), lineno=60, col_offset=12), 'encode', Load(), lineno=60, col_offset=12), [Name('s', Load(), lineno=60, col_offset=24), Str('xmlcharrefreplace', lineno=60, col_offset=27)], [], None, None, lineno=60, col_offset=12), Index(Num(0, lineno=60, col_offset=48)), Load(), lineno=60, col_offset=12), Str('&#2835;&#2851;&#2912; nd eggs', lineno=61, col_offset=12)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=54, col_offset=4), FunctionDef('test_customreplace_encode', arguments([Name('self', Param(), lineno=64, col_offset=34)], None, None, []), [If(Attribute(Name('self', Load(), lineno=65, col_offset=11), 'has_iso10646', Load(), lineno=65, col_offset=11), [Return(None, lineno=66, col_offset=12)], [], lineno=65, col_offset=8), ImportFrom('htmlentitydefs', [alias('codepoint2name', None)], 0, lineno=68, col_offset=8), FunctionDef('xmlcharnamereplace', arguments([Name('exc', Param(), lineno=70, col_offset=31)], None, None, []), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=71, col_offset=19), [Name('exc', Load(), lineno=71, col_offset=30), Name('UnicodeEncodeError', Load(), lineno=71, col_offset=35)], [], None, None, lineno=71, col_offset=19), lineno=71, col_offset=15), [Raise(Call(Name('TypeError', Load(), lineno=72, col_offset=22), [BinOp(Str("don't know how to handle %r", lineno=72, col_offset=32), Mod(), Name('exc', Load(), lineno=72, col_offset=64), lineno=72, col_offset=32)], [], None, None, lineno=72, col_offset=22), None, None, lineno=72, col_offset=16)], [], lineno=71, col_offset=12), Assign([Name('l', Store(), lineno=73, col_offset=12)], List([], Load(), lineno=73, col_offset=16), lineno=73, col_offset=12), For(Name('c', Store(), lineno=74, col_offset=16), Subscript(Attribute(Name('exc', Load(), lineno=74, col_offset=21), 'object', Load(), lineno=74, col_offset=21), Slice(Attribute(Name('exc', Load(), lineno=74, col_offset=32), 'start', Load(), lineno=74, col_offset=32), Attribute(Name('exc', Load(), lineno=74, col_offset=42), 'end', Load(), lineno=74, col_offset=42), None), Load(), lineno=74, col_offset=21), [If(Compare(Call(Name('ord', Load(), lineno=75, col_offset=19), [Name('c', Load(), lineno=75, col_offset=23)], [], None, None, lineno=75, col_offset=19), [In()], [Name('codepoint2name', Load(), lineno=75, col_offset=29)], lineno=75, col_offset=19), [Expr(Call(Attribute(Name('l', Load(), lineno=76, col_offset=20), 'append', Load(), lineno=76, col_offset=20), [BinOp(Str(u'&%s;', lineno=76, col_offset=29), Mod(), Subscript(Name('codepoint2name', Load(), lineno=76, col_offset=39), Index(Call(Name('ord', Load(), lineno=76, col_offset=54), [Name('c', Load(), lineno=76, col_offset=58)], [], None, None, lineno=76, col_offset=54)), Load(), lineno=76, col_offset=39), lineno=76, col_offset=29)], [], None, None, lineno=76, col_offset=20), lineno=76, col_offset=20)], [Expr(Call(Attribute(Name('l', Load(), lineno=78, col_offset=20), 'append', Load(), lineno=78, col_offset=20), [BinOp(Str(u'&#%d;', lineno=78, col_offset=29), Mod(), Call(Name('ord', Load(), lineno=78, col_offset=40), [Name('c', Load(), lineno=78, col_offset=44)], [], None, None, lineno=78, col_offset=40), lineno=78, col_offset=29)], [], None, None, lineno=78, col_offset=20), lineno=78, col_offset=20)], lineno=75, col_offset=16)], [], lineno=74, col_offset=12), Return(Tuple([Call(Attribute(Str(u'', lineno=79, col_offset=20), 'join', Load(), lineno=79, col_offset=20), [Name('l', Load(), lineno=79, col_offset=29)], [], None, None, lineno=79, col_offset=20), Attribute(Name('exc', Load(), lineno=79, col_offset=33), 'end', Load(), lineno=79, col_offset=33)], Load(), lineno=79, col_offset=20), lineno=79, col_offset=12)], [], lineno=70, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=81, col_offset=8), 'register_error', Load(), lineno=81, col_offset=8), [Str('test.xmlcharnamereplace', lineno=81, col_offset=30), Name('xmlcharnamereplace', Load(), lineno=81, col_offset=57)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), If(Attribute(Name('self', Load(), lineno=83, col_offset=11), 'xmlcharnametest', Load(), lineno=83, col_offset=11), [Assign([Tuple([Name('sin', Store(), lineno=84, col_offset=12), Name('sout', Store(), lineno=84, col_offset=17)], Store(), lineno=84, col_offset=12)], Attribute(Name('self', Load(), lineno=84, col_offset=24), 'xmlcharnametest', Load(), lineno=84, col_offset=24), lineno=84, col_offset=12)], [Assign([Name('sin', Store(), lineno=86, col_offset=12)], Str(u'\xab\u211c\xbb = \u2329\u1234\u232a', lineno=86, col_offset=18), lineno=86, col_offset=12), Assign([Name('sout', Store(), lineno=87, col_offset=12)], Str('&laquo;&real;&raquo; = &lang;&#4660;&rang;', lineno=87, col_offset=19), lineno=87, col_offset=12)], lineno=83, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=8), 'assertEqual', Load(), lineno=88, col_offset=8), [Subscript(Call(Attribute(Name('self', Load(), lineno=88, col_offset=25), 'encode', Load(), lineno=88, col_offset=25), [Name('sin', Load(), lineno=88, col_offset=37), Str('test.xmlcharnamereplace', lineno=89, col_offset=36)], [], None, None, lineno=88, col_offset=25), Index(Num(0, lineno=89, col_offset=63)), Load(), lineno=88, col_offset=25), Name('sout', Load(), lineno=89, col_offset=67)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('test_callback_wrong_objects', arguments([Name('self', Param(), lineno=91, col_offset=36)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=92, col_offset=22)], None, None, []), [Return(Tuple([Name('ret', Load(), lineno=93, col_offset=20), Attribute(Name('exc', Load(), lineno=93, col_offset=25), 'end', Load(), lineno=93, col_offset=25)], Load(), lineno=93, col_offset=20), lineno=93, col_offset=12)], [], lineno=92, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=94, col_offset=8), 'register_error', Load(), lineno=94, col_offset=8), [Str('test.cjktest', lineno=94, col_offset=30), Name('myreplace', Load(), lineno=94, col_offset=46)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), For(Name('ret', Store(), lineno=96, col_offset=12), Tuple([List([Num(1, lineno=96, col_offset=21), Num(2, lineno=96, col_offset=24), Num(3, lineno=96, col_offset=27)], Load(), lineno=96, col_offset=20), List([], Load(), lineno=96, col_offset=31), Name('None', Load(), lineno=96, col_offset=35), Call(Name('object', Load(), lineno=96, col_offset=41), [], [], None, None, lineno=96, col_offset=41), Str('string', lineno=96, col_offset=51), Str('', lineno=96, col_offset=61)], Load(), lineno=96, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'assertRaises', Load(), lineno=97, col_offset=12), [Name('TypeError', Load(), lineno=97, col_offset=30), Attribute(Name('self', Load(), lineno=97, col_offset=41), 'encode', Load(), lineno=97, col_offset=41), Attribute(Name('self', Load(), lineno=97, col_offset=54), 'unmappedunicode', Load(), lineno=97, col_offset=54), Str('test.cjktest', lineno=98, col_offset=30)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12)], [], lineno=96, col_offset=8)], [], lineno=91, col_offset=4), FunctionDef('test_callback_long_index', arguments([Name('self', Param(), lineno=100, col_offset=33)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=101, col_offset=22)], None, None, []), [Return(Tuple([Str(u'x', lineno=102, col_offset=20), Call(Name('long', Load(), lineno=102, col_offset=26), [Attribute(Name('exc', Load(), lineno=102, col_offset=31), 'end', Load(), lineno=102, col_offset=31)], [], None, None, lineno=102, col_offset=26)], Load(), lineno=102, col_offset=20), lineno=102, col_offset=12)], [], lineno=101, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=103, col_offset=8), 'register_error', Load(), lineno=103, col_offset=8), [Str('test.cjktest', lineno=103, col_offset=30), Name('myreplace', Load(), lineno=103, col_offset=46)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'assertEqual', Load(), lineno=104, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=104, col_offset=25), 'encode', Load(), lineno=104, col_offset=25), [BinOp(BinOp(Str(u'abcd', lineno=104, col_offset=37), Add(), Attribute(Name('self', Load(), lineno=104, col_offset=47), 'unmappedunicode', Load(), lineno=104, col_offset=47), lineno=104, col_offset=37), Add(), Str(u'efgh', lineno=104, col_offset=70), lineno=104, col_offset=68), Str('test.cjktest', lineno=105, col_offset=37)], [], None, None, lineno=104, col_offset=25), Tuple([Str('abcdxefgh', lineno=105, col_offset=55), Num(9, lineno=105, col_offset=68)], Load(), lineno=105, col_offset=55)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=107, col_offset=22)], None, None, []), [Return(Tuple([Str(u'x', lineno=108, col_offset=20), BinOp(Attribute(Name('sys', Load(), lineno=108, col_offset=26), 'maxint', Load(), lineno=108, col_offset=26), Add(), Num(1, lineno=108, col_offset=39), lineno=108, col_offset=26)], Load(), lineno=108, col_offset=20), lineno=108, col_offset=12)], [], lineno=107, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=109, col_offset=8), 'register_error', Load(), lineno=109, col_offset=8), [Str('test.cjktest', lineno=109, col_offset=30), Name('myreplace', Load(), lineno=109, col_offset=46)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertRaises', Load(), lineno=110, col_offset=8), [Name('IndexError', Load(), lineno=110, col_offset=26), Attribute(Name('self', Load(), lineno=110, col_offset=38), 'encode', Load(), lineno=110, col_offset=38), Attribute(Name('self', Load(), lineno=110, col_offset=51), 'unmappedunicode', Load(), lineno=110, col_offset=51), Str('test.cjktest', lineno=111, col_offset=26)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8)], [], lineno=100, col_offset=4), FunctionDef('test_callback_None_index', arguments([Name('self', Param(), lineno=113, col_offset=33)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=114, col_offset=22)], None, None, []), [Return(Tuple([Str(u'x', lineno=115, col_offset=20), Name('None', Load(), lineno=115, col_offset=26)], Load(), lineno=115, col_offset=20), lineno=115, col_offset=12)], [], lineno=114, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=116, col_offset=8), 'register_error', Load(), lineno=116, col_offset=8), [Str('test.cjktest', lineno=116, col_offset=30), Name('myreplace', Load(), lineno=116, col_offset=46)], [], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertRaises', Load(), lineno=117, col_offset=8), [Name('TypeError', Load(), lineno=117, col_offset=26), Attribute(Name('self', Load(), lineno=117, col_offset=37), 'encode', Load(), lineno=117, col_offset=37), Attribute(Name('self', Load(), lineno=117, col_offset=50), 'unmappedunicode', Load(), lineno=117, col_offset=50), Str('test.cjktest', lineno=118, col_offset=26)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('test_callback_backward_index', arguments([Name('self', Param(), lineno=120, col_offset=37)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=121, col_offset=22)], None, None, []), [If(Compare(Attribute(Name('myreplace', Load(), lineno=122, col_offset=15), 'limit', Load(), lineno=122, col_offset=15), [Gt()], [Num(0, lineno=122, col_offset=33)], lineno=122, col_offset=15), [AugAssign(Attribute(Name('myreplace', Load(), lineno=123, col_offset=16), 'limit', Store(), lineno=123, col_offset=16), Sub(), Num(1, lineno=123, col_offset=35), lineno=123, col_offset=16), Return(Tuple([Str(u'REPLACED', lineno=124, col_offset=24), Num(0, lineno=124, col_offset=37)], Load(), lineno=124, col_offset=24), lineno=124, col_offset=16)], [Return(Tuple([Str(u'TERMINAL', lineno=126, col_offset=24), Attribute(Name('exc', Load(), lineno=126, col_offset=37), 'end', Load(), lineno=126, col_offset=37)], Load(), lineno=126, col_offset=24), lineno=126, col_offset=16)], lineno=122, col_offset=12)], [], lineno=121, col_offset=8), Assign([Attribute(Name('myreplace', Load(), lineno=127, col_offset=8), 'limit', Store(), lineno=127, col_offset=8)], Num(3, lineno=127, col_offset=26), lineno=127, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=128, col_offset=8), 'register_error', Load(), lineno=128, col_offset=8), [Str('test.cjktest', lineno=128, col_offset=30), Name('myreplace', Load(), lineno=128, col_offset=46)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=129, col_offset=8), 'assertEqual', Load(), lineno=129, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=129, col_offset=25), 'encode', Load(), lineno=129, col_offset=25), [BinOp(BinOp(Str(u'abcd', lineno=129, col_offset=37), Add(), Attribute(Name('self', Load(), lineno=129, col_offset=47), 'unmappedunicode', Load(), lineno=129, col_offset=47), lineno=129, col_offset=37), Add(), Str(u'efgh', lineno=129, col_offset=70), lineno=129, col_offset=68), Str('test.cjktest', lineno=130, col_offset=37)], [], None, None, lineno=129, col_offset=25), Tuple([Str('abcdREPLACEDabcdREPLACEDabcdREPLACEDabcdTERMINALefgh', lineno=131, col_offset=17), Num(9, lineno=131, col_offset=73)], Load(), lineno=131, col_offset=17)], [], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('test_callback_forward_index', arguments([Name('self', Param(), lineno=133, col_offset=36)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=134, col_offset=22)], None, None, []), [Return(Tuple([Str(u'REPLACED', lineno=135, col_offset=20), BinOp(Attribute(Name('exc', Load(), lineno=135, col_offset=33), 'end', Load(), lineno=135, col_offset=33), Add(), Num(2, lineno=135, col_offset=43), lineno=135, col_offset=33)], Load(), lineno=135, col_offset=20), lineno=135, col_offset=12)], [], lineno=134, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=136, col_offset=8), 'register_error', Load(), lineno=136, col_offset=8), [Str('test.cjktest', lineno=136, col_offset=30), Name('myreplace', Load(), lineno=136, col_offset=46)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=8), 'assertEqual', Load(), lineno=137, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=137, col_offset=25), 'encode', Load(), lineno=137, col_offset=25), [BinOp(BinOp(Str(u'abcd', lineno=137, col_offset=37), Add(), Attribute(Name('self', Load(), lineno=137, col_offset=47), 'unmappedunicode', Load(), lineno=137, col_offset=47), lineno=137, col_offset=37), Add(), Str(u'efgh', lineno=137, col_offset=70), lineno=137, col_offset=68), Str('test.cjktest', lineno=138, col_offset=37)], [], None, None, lineno=137, col_offset=25), Tuple([Str('abcdREPLACEDgh', lineno=138, col_offset=55), Num(9, lineno=138, col_offset=73)], Load(), lineno=138, col_offset=55)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('test_callback_index_outofbound', arguments([Name('self', Param(), lineno=140, col_offset=39)], None, None, []), [FunctionDef('myreplace', arguments([Name('exc', Param(), lineno=141, col_offset=22)], None, None, []), [Return(Tuple([Str(u'TERM', lineno=142, col_offset=20), Num(100, lineno=142, col_offset=29)], Load(), lineno=142, col_offset=20), lineno=142, col_offset=12)], [], lineno=141, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=143, col_offset=8), 'register_error', Load(), lineno=143, col_offset=8), [Str('test.cjktest', lineno=143, col_offset=30), Name('myreplace', Load(), lineno=143, col_offset=46)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertRaises', Load(), lineno=144, col_offset=8), [Name('IndexError', Load(), lineno=144, col_offset=26), Attribute(Name('self', Load(), lineno=144, col_offset=38), 'encode', Load(), lineno=144, col_offset=38), Attribute(Name('self', Load(), lineno=144, col_offset=51), 'unmappedunicode', Load(), lineno=144, col_offset=51), Str('test.cjktest', lineno=145, col_offset=26)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('test_incrementalencoder', arguments([Name('self', Param(), lineno=147, col_offset=32)], None, None, []), [Assign([Name('UTF8Reader', Store(), lineno=148, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=148, col_offset=21), 'getreader', Load(), lineno=148, col_offset=21), [Str('utf-8', lineno=148, col_offset=38)], [], None, None, lineno=148, col_offset=21), lineno=148, col_offset=8), For(Name('sizehint', Store(), lineno=149, col_offset=12), BinOp(BinOp(List([Name('None', Load(), lineno=149, col_offset=25)], Load(), lineno=149, col_offset=24), Add(), Call(Name('range', Load(), lineno=149, col_offset=33), [Num(1, lineno=149, col_offset=39), Num(33, lineno=149, col_offset=42)], [], None, None, lineno=149, col_offset=33), lineno=149, col_offset=24), Add(), List([Num(64, lineno=150, col_offset=25), Num(128, lineno=150, col_offset=29), Num(256, lineno=150, col_offset=34), Num(512, lineno=150, col_offset=39), Num(1024, lineno=150, col_offset=44)], Load(), lineno=150, col_offset=24), lineno=149, col_offset=46), [Assign([Name('istream', Store(), lineno=151, col_offset=12)], Call(Name('UTF8Reader', Load(), lineno=151, col_offset=22), [Call(Name('StringIO', Load(), lineno=151, col_offset=33), [Subscript(Attribute(Name('self', Load(), lineno=151, col_offset=42), 'tstring', Load(), lineno=151, col_offset=42), Index(Num(1, lineno=151, col_offset=55)), Load(), lineno=151, col_offset=42)], [], None, None, lineno=151, col_offset=33)], [], None, None, lineno=151, col_offset=22), lineno=151, col_offset=12), Assign([Name('ostream', Store(), lineno=152, col_offset=12)], Call(Name('StringIO', Load(), lineno=152, col_offset=22), [], [], None, None, lineno=152, col_offset=22), lineno=152, col_offset=12), Assign([Name('encoder', Store(), lineno=153, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=153, col_offset=22), 'incrementalencoder', Load(), lineno=153, col_offset=22), [], [], None, None, lineno=153, col_offset=22), lineno=153, col_offset=12), While(Num(1, lineno=154, col_offset=18), [If(Compare(Name('sizehint', Load(), lineno=155, col_offset=19), [IsNot()], [Name('None', Load(), lineno=155, col_offset=35)], lineno=155, col_offset=19), [Assign([Name('data', Store(), lineno=156, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=156, col_offset=27), 'read', Load(), lineno=156, col_offset=27), [Name('sizehint', Load(), lineno=156, col_offset=40)], [], None, None, lineno=156, col_offset=27), lineno=156, col_offset=20)], [Assign([Name('data', Store(), lineno=158, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=158, col_offset=27), 'read', Load(), lineno=158, col_offset=27), [], [], None, None, lineno=158, col_offset=27), lineno=158, col_offset=20)], lineno=155, col_offset=16), If(UnaryOp(Not(), Name('data', Load(), lineno=160, col_offset=23), lineno=160, col_offset=19), [Break( lineno=161, col_offset=20)], [], lineno=160, col_offset=16), Assign([Name('e', Store(), lineno=162, col_offset=16)], Call(Attribute(Name('encoder', Load(), lineno=162, col_offset=20), 'encode', Load(), lineno=162, col_offset=20), [Name('data', Load(), lineno=162, col_offset=35)], [], None, None, lineno=162, col_offset=20), lineno=162, col_offset=16), Expr(Call(Attribute(Name('ostream', Load(), lineno=163, col_offset=16), 'write', Load(), lineno=163, col_offset=16), [Name('e', Load(), lineno=163, col_offset=30)], [], None, None, lineno=163, col_offset=16), lineno=163, col_offset=16)], [], lineno=154, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=12), 'assertEqual', Load(), lineno=165, col_offset=12), [Call(Attribute(Name('ostream', Load(), lineno=165, col_offset=29), 'getvalue', Load(), lineno=165, col_offset=29), [], [], None, None, lineno=165, col_offset=29), Subscript(Attribute(Name('self', Load(), lineno=165, col_offset=49), 'tstring', Load(), lineno=165, col_offset=49), Index(Num(0, lineno=165, col_offset=62)), Load(), lineno=165, col_offset=49)], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12)], [], lineno=149, col_offset=8)], [], lineno=147, col_offset=4), FunctionDef('test_incrementaldecoder', arguments([Name('self', Param(), lineno=167, col_offset=32)], None, None, []), [Assign([Name('UTF8Writer', Store(), lineno=168, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=168, col_offset=21), 'getwriter', Load(), lineno=168, col_offset=21), [Str('utf-8', lineno=168, col_offset=38)], [], None, None, lineno=168, col_offset=21), lineno=168, col_offset=8), For(Name('sizehint', Store(), lineno=169, col_offset=12), BinOp(BinOp(List([Name('None', Load(), lineno=169, col_offset=25), Num(-1, lineno=169, col_offset=32)], Load(), lineno=169, col_offset=24), Add(), Call(Name('range', Load(), lineno=169, col_offset=37), [Num(1, lineno=169, col_offset=43), Num(33, lineno=169, col_offset=46)], [], None, None, lineno=169, col_offset=37), lineno=169, col_offset=24), Add(), List([Num(64, lineno=170, col_offset=25), Num(128, lineno=170, col_offset=29), Num(256, lineno=170, col_offset=34), Num(512, lineno=170, col_offset=39), Num(1024, lineno=170, col_offset=44)], Load(), lineno=170, col_offset=24), lineno=169, col_offset=50), [Assign([Name('istream', Store(), lineno=171, col_offset=12)], Call(Name('StringIO', Load(), lineno=171, col_offset=22), [Subscript(Attribute(Name('self', Load(), lineno=171, col_offset=31), 'tstring', Load(), lineno=171, col_offset=31), Index(Num(0, lineno=171, col_offset=44)), Load(), lineno=171, col_offset=31)], [], None, None, lineno=171, col_offset=22), lineno=171, col_offset=12), Assign([Name('ostream', Store(), lineno=172, col_offset=12)], Call(Name('UTF8Writer', Load(), lineno=172, col_offset=22), [Call(Name('StringIO', Load(), lineno=172, col_offset=33), [], [], None, None, lineno=172, col_offset=33)], [], None, None, lineno=172, col_offset=22), lineno=172, col_offset=12), Assign([Name('decoder', Store(), lineno=173, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=173, col_offset=22), 'incrementaldecoder', Load(), lineno=173, col_offset=22), [], [], None, None, lineno=173, col_offset=22), lineno=173, col_offset=12), While(Num(1, lineno=174, col_offset=18), [Assign([Name('data', Store(), lineno=175, col_offset=16)], Call(Attribute(Name('istream', Load(), lineno=175, col_offset=23), 'read', Load(), lineno=175, col_offset=23), [Name('sizehint', Load(), lineno=175, col_offset=36)], [], None, None, lineno=175, col_offset=23), lineno=175, col_offset=16), If(UnaryOp(Not(), Name('data', Load(), lineno=176, col_offset=23), lineno=176, col_offset=19), [Break( lineno=177, col_offset=20)], [Assign([Name('u', Store(), lineno=179, col_offset=20)], Call(Attribute(Name('decoder', Load(), lineno=179, col_offset=24), 'decode', Load(), lineno=179, col_offset=24), [Name('data', Load(), lineno=179, col_offset=39)], [], None, None, lineno=179, col_offset=24), lineno=179, col_offset=20), Expr(Call(Attribute(Name('ostream', Load(), lineno=180, col_offset=20), 'write', Load(), lineno=180, col_offset=20), [Name('u', Load(), lineno=180, col_offset=34)], [], None, None, lineno=180, col_offset=20), lineno=180, col_offset=20)], lineno=176, col_offset=16)], [], lineno=174, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=182, col_offset=12), 'assertEqual', Load(), lineno=182, col_offset=12), [Call(Attribute(Name('ostream', Load(), lineno=182, col_offset=29), 'getvalue', Load(), lineno=182, col_offset=29), [], [], None, None, lineno=182, col_offset=29), Subscript(Attribute(Name('self', Load(), lineno=182, col_offset=49), 'tstring', Load(), lineno=182, col_offset=49), Index(Num(1, lineno=182, col_offset=62)), Load(), lineno=182, col_offset=49)], [], None, None, lineno=182, col_offset=12), lineno=182, col_offset=12)], [], lineno=169, col_offset=8)], [], lineno=167, col_offset=4), FunctionDef('test_incrementalencoder_error_callback', arguments([Name('self', Param(), lineno=184, col_offset=47)], None, None, []), [Assign([Name('inv', Store(), lineno=185, col_offset=8)], Attribute(Name('self', Load(), lineno=185, col_offset=14), 'unmappedunicode', Load(), lineno=185, col_offset=14), lineno=185, col_offset=8), Assign([Name('e', Store(), lineno=187, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'incrementalencoder', Load(), lineno=187, col_offset=12), [], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'assertRaises', Load(), lineno=188, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=188, col_offset=26), Attribute(Name('e', Load(), lineno=188, col_offset=46), 'encode', Load(), lineno=188, col_offset=46), Name('inv', Load(), lineno=188, col_offset=56), Name('True', Load(), lineno=188, col_offset=61)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Assign([Attribute(Name('e', Load(), lineno=190, col_offset=8), 'errors', Store(), lineno=190, col_offset=8)], Str('ignore', lineno=190, col_offset=19), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertEqual', Load(), lineno=191, col_offset=8), [Call(Attribute(Name('e', Load(), lineno=191, col_offset=25), 'encode', Load(), lineno=191, col_offset=25), [Name('inv', Load(), lineno=191, col_offset=34), Name('True', Load(), lineno=191, col_offset=39)], [], None, None, lineno=191, col_offset=25), Str('', lineno=191, col_offset=46)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Expr(Call(Attribute(Name('e', Load(), lineno=193, col_offset=8), 'reset', Load(), lineno=193, col_offset=8), [], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), FunctionDef('tempreplace', arguments([Name('exc', Param(), lineno=194, col_offset=24)], None, None, []), [Return(Tuple([Str(u'called', lineno=195, col_offset=20), Attribute(Name('exc', Load(), lineno=195, col_offset=31), 'end', Load(), lineno=195, col_offset=31)], Load(), lineno=195, col_offset=20), lineno=195, col_offset=12)], [], lineno=194, col_offset=8), Expr(Call(Attribute(Name('codecs', Load(), lineno=196, col_offset=8), 'register_error', Load(), lineno=196, col_offset=8), [Str('test.incremental_error_callback', lineno=196, col_offset=30), Name('tempreplace', Load(), lineno=196, col_offset=65)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Assign([Attribute(Name('e', Load(), lineno=197, col_offset=8), 'errors', Store(), lineno=197, col_offset=8)], Str('test.incremental_error_callback', lineno=197, col_offset=19), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Attribute(Name('e', Load(), lineno=198, col_offset=25), 'encode', Load(), lineno=198, col_offset=25), [Name('inv', Load(), lineno=198, col_offset=34), Name('True', Load(), lineno=198, col_offset=39)], [], None, None, lineno=198, col_offset=25), Str('called', lineno=198, col_offset=46)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Assign([Attribute(Name('e', Load(), lineno=201, col_offset=8), 'errors', Store(), lineno=201, col_offset=8)], Str('ignore', lineno=201, col_offset=19), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'assertEqual', Load(), lineno=202, col_offset=8), [Call(Attribute(Name('e', Load(), lineno=202, col_offset=25), 'encode', Load(), lineno=202, col_offset=25), [Name('inv', Load(), lineno=202, col_offset=34), Name('True', Load(), lineno=202, col_offset=39)], [], None, None, lineno=202, col_offset=25), Str('', lineno=202, col_offset=46)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=184, col_offset=4), FunctionDef('test_streamreader', arguments([Name('self', Param(), lineno=204, col_offset=26)], None, None, []), [Assign([Name('UTF8Writer', Store(), lineno=205, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=205, col_offset=21), 'getwriter', Load(), lineno=205, col_offset=21), [Str('utf-8', lineno=205, col_offset=38)], [], None, None, lineno=205, col_offset=21), lineno=205, col_offset=8), For(Name('name', Store(), lineno=206, col_offset=12), List([Str('read', lineno=206, col_offset=21), Str('readline', lineno=206, col_offset=29), Str('readlines', lineno=206, col_offset=41)], Load(), lineno=206, col_offset=20), [For(Name('sizehint', Store(), lineno=207, col_offset=16), BinOp(BinOp(List([Name('None', Load(), lineno=207, col_offset=29), Num(-1, lineno=207, col_offset=36)], Load(), lineno=207, col_offset=28), Add(), Call(Name('range', Load(), lineno=207, col_offset=41), [Num(1, lineno=207, col_offset=47), Num(33, lineno=207, col_offset=50)], [], None, None, lineno=207, col_offset=41), lineno=207, col_offset=28), Add(), List([Num(64, lineno=208, col_offset=29), Num(128, lineno=208, col_offset=33), Num(256, lineno=208, col_offset=38), Num(512, lineno=208, col_offset=43), Num(1024, lineno=208, col_offset=48)], Load(), lineno=208, col_offset=28), lineno=207, col_offset=54), [Assign([Name('istream', Store(), lineno=209, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=209, col_offset=26), 'reader', Load(), lineno=209, col_offset=26), [Call(Name('StringIO', Load(), lineno=209, col_offset=38), [Subscript(Attribute(Name('self', Load(), lineno=209, col_offset=47), 'tstring', Load(), lineno=209, col_offset=47), Index(Num(0, lineno=209, col_offset=60)), Load(), lineno=209, col_offset=47)], [], None, None, lineno=209, col_offset=38)], [], None, None, lineno=209, col_offset=26), lineno=209, col_offset=16), Assign([Name('ostream', Store(), lineno=210, col_offset=16)], Call(Name('UTF8Writer', Load(), lineno=210, col_offset=26), [Call(Name('StringIO', Load(), lineno=210, col_offset=37), [], [], None, None, lineno=210, col_offset=37)], [], None, None, lineno=210, col_offset=26), lineno=210, col_offset=16), Assign([Name('func', Store(), lineno=211, col_offset=16)], Call(Name('getattr', Load(), lineno=211, col_offset=23), [Name('istream', Load(), lineno=211, col_offset=31), Name('name', Load(), lineno=211, col_offset=40)], [], None, None, lineno=211, col_offset=23), lineno=211, col_offset=16), While(Num(1, lineno=212, col_offset=22), [Assign([Name('data', Store(), lineno=213, col_offset=20)], Call(Name('func', Load(), lineno=213, col_offset=27), [Name('sizehint', Load(), lineno=213, col_offset=32)], [], None, None, lineno=213, col_offset=27), lineno=213, col_offset=20), If(UnaryOp(Not(), Name('data', Load(), lineno=214, col_offset=27), lineno=214, col_offset=23), [Break( lineno=215, col_offset=24)], [], lineno=214, col_offset=20), If(Compare(Name('name', Load(), lineno=216, col_offset=23), [Eq()], [Str('readlines', lineno=216, col_offset=31)], lineno=216, col_offset=23), [Expr(Call(Attribute(Name('ostream', Load(), lineno=217, col_offset=24), 'writelines', Load(), lineno=217, col_offset=24), [Name('data', Load(), lineno=217, col_offset=43)], [], None, None, lineno=217, col_offset=24), lineno=217, col_offset=24)], [Expr(Call(Attribute(Name('ostream', Load(), lineno=219, col_offset=24), 'write', Load(), lineno=219, col_offset=24), [Name('data', Load(), lineno=219, col_offset=38)], [], None, None, lineno=219, col_offset=24), lineno=219, col_offset=24)], lineno=216, col_offset=20)], [], lineno=212, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=16), 'assertEqual', Load(), lineno=221, col_offset=16), [Call(Attribute(Name('ostream', Load(), lineno=221, col_offset=33), 'getvalue', Load(), lineno=221, col_offset=33), [], [], None, None, lineno=221, col_offset=33), Subscript(Attribute(Name('self', Load(), lineno=221, col_offset=53), 'tstring', Load(), lineno=221, col_offset=53), Index(Num(1, lineno=221, col_offset=66)), Load(), lineno=221, col_offset=53)], [], None, None, lineno=221, col_offset=16), lineno=221, col_offset=16)], [], lineno=207, col_offset=12)], [], lineno=206, col_offset=8)], [], lineno=204, col_offset=4), FunctionDef('test_streamwriter', arguments([Name('self', Param(), lineno=223, col_offset=26)], None, None, []), [Assign([Name('readfuncs', Store(), lineno=224, col_offset=8)], Tuple([Str('read', lineno=224, col_offset=21), Str('readline', lineno=224, col_offset=29), Str('readlines', lineno=224, col_offset=41)], Load(), lineno=224, col_offset=21), lineno=224, col_offset=8), Assign([Name('UTF8Reader', Store(), lineno=225, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=225, col_offset=21), 'getreader', Load(), lineno=225, col_offset=21), [Str('utf-8', lineno=225, col_offset=38)], [], None, None, lineno=225, col_offset=21), lineno=225, col_offset=8), For(Name('name', Store(), lineno=226, col_offset=12), Name('readfuncs', Load(), lineno=226, col_offset=20), [For(Name('sizehint', Store(), lineno=227, col_offset=16), BinOp(BinOp(List([Name('None', Load(), lineno=227, col_offset=29)], Load(), lineno=227, col_offset=28), Add(), Call(Name('range', Load(), lineno=227, col_offset=37), [Num(1, lineno=227, col_offset=43), Num(33, lineno=227, col_offset=46)], [], None, None, lineno=227, col_offset=37), lineno=227, col_offset=28), Add(), List([Num(64, lineno=228, col_offset=29), Num(128, lineno=228, col_offset=33), Num(256, lineno=228, col_offset=38), Num(512, lineno=228, col_offset=43), Num(1024, lineno=228, col_offset=48)], Load(), lineno=228, col_offset=28), lineno=227, col_offset=50), [Assign([Name('istream', Store(), lineno=229, col_offset=16)], Call(Name('UTF8Reader', Load(), lineno=229, col_offset=26), [Call(Name('StringIO', Load(), lineno=229, col_offset=37), [Subscript(Attribute(Name('self', Load(), lineno=229, col_offset=46), 'tstring', Load(), lineno=229, col_offset=46), Index(Num(1, lineno=229, col_offset=59)), Load(), lineno=229, col_offset=46)], [], None, None, lineno=229, col_offset=37)], [], None, None, lineno=229, col_offset=26), lineno=229, col_offset=16), Assign([Name('ostream', Store(), lineno=230, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=230, col_offset=26), 'writer', Load(), lineno=230, col_offset=26), [Call(Name('StringIO', Load(), lineno=230, col_offset=38), [], [], None, None, lineno=230, col_offset=38)], [], None, None, lineno=230, col_offset=26), lineno=230, col_offset=16), Assign([Name('func', Store(), lineno=231, col_offset=16)], Call(Name('getattr', Load(), lineno=231, col_offset=23), [Name('istream', Load(), lineno=231, col_offset=31), Name('name', Load(), lineno=231, col_offset=40)], [], None, None, lineno=231, col_offset=23), lineno=231, col_offset=16), While(Num(1, lineno=232, col_offset=22), [If(Compare(Name('sizehint', Load(), lineno=233, col_offset=23), [IsNot()], [Name('None', Load(), lineno=233, col_offset=39)], lineno=233, col_offset=23), [Assign([Name('data', Store(), lineno=234, col_offset=24)], Call(Name('func', Load(), lineno=234, col_offset=31), [Name('sizehint', Load(), lineno=234, col_offset=36)], [], None, None, lineno=234, col_offset=31), lineno=234, col_offset=24)], [Assign([Name('data', Store(), lineno=236, col_offset=24)], Call(Name('func', Load(), lineno=236, col_offset=31), [], [], None, None, lineno=236, col_offset=31), lineno=236, col_offset=24)], lineno=233, col_offset=20), If(UnaryOp(Not(), Name('data', Load(), lineno=238, col_offset=27), lineno=238, col_offset=23), [Break( lineno=239, col_offset=24)], [], lineno=238, col_offset=20), If(Compare(Name('name', Load(), lineno=240, col_offset=23), [Eq()], [Str('readlines', lineno=240, col_offset=31)], lineno=240, col_offset=23), [Expr(Call(Attribute(Name('ostream', Load(), lineno=241, col_offset=24), 'writelines', Load(), lineno=241, col_offset=24), [Name('data', Load(), lineno=241, col_offset=43)], [], None, None, lineno=241, col_offset=24), lineno=241, col_offset=24)], [Expr(Call(Attribute(Name('ostream', Load(), lineno=243, col_offset=24), 'write', Load(), lineno=243, col_offset=24), [Name('data', Load(), lineno=243, col_offset=38)], [], None, None, lineno=243, col_offset=24), lineno=243, col_offset=24)], lineno=240, col_offset=20)], [], lineno=232, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=16), 'assertEqual', Load(), lineno=245, col_offset=16), [Call(Attribute(Name('ostream', Load(), lineno=245, col_offset=33), 'getvalue', Load(), lineno=245, col_offset=33), [], [], None, None, lineno=245, col_offset=33), Subscript(Attribute(Name('self', Load(), lineno=245, col_offset=53), 'tstring', Load(), lineno=245, col_offset=53), Index(Num(0, lineno=245, col_offset=66)), Load(), lineno=245, col_offset=53)], [], None, None, lineno=245, col_offset=16), lineno=245, col_offset=16)], [], lineno=227, col_offset=12)], [], lineno=226, col_offset=8)], [], lineno=223, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('TestBase_Mapping', [Attribute(Name('unittest', Load(), lineno=247, col_offset=23), 'TestCase', Load(), lineno=247, col_offset=23)], [Assign([Name('pass_enctest', Store(), lineno=248, col_offset=4)], List([], Load(), lineno=248, col_offset=19), lineno=248, col_offset=4), Assign([Name('pass_dectest', Store(), lineno=249, col_offset=4)], List([], Load(), lineno=249, col_offset=19), lineno=249, col_offset=4), Assign([Name('supmaps', Store(), lineno=250, col_offset=4)], List([], Load(), lineno=250, col_offset=14), lineno=250, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=252, col_offset=17)], 'args', 'kw', []), [Expr(Call(Attribute(Attribute(Name('unittest', Load(), lineno=253, col_offset=8), 'TestCase', Load(), lineno=253, col_offset=8), '__init__', Load(), lineno=253, col_offset=8), [Name('self', Load(), lineno=253, col_offset=35)], [], Name('args', Load(), lineno=253, col_offset=42), Name('kw', Load(), lineno=253, col_offset=50), lineno=253, col_offset=8), lineno=253, col_offset=8), TryExcept([Expr(Call(Attribute(Call(Attribute(Name('self', Load(), lineno=255, col_offset=12), 'open_mapping_file', Load(), lineno=255, col_offset=12), [], [], None, None, lineno=255, col_offset=12), 'close', Load(), lineno=255, col_offset=12), [], [], None, None, lineno=255, col_offset=12), lineno=255, col_offset=12)], [ExceptHandler(Tuple([Name('IOError', Load(), lineno=256, col_offset=16), Name('HTTPException', Load(), lineno=256, col_offset=25)], Load(), lineno=256, col_offset=16), None, [Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=12), 'skipTest', Load(), lineno=257, col_offset=12), [BinOp(Str('Could not retrieve ', lineno=257, col_offset=26), Add(), Attribute(Name('self', Load(), lineno=257, col_offset=48), 'mapfileurl', Load(), lineno=257, col_offset=48), lineno=257, col_offset=26)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12)], lineno=256, col_offset=8)], [], lineno=254, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('open_mapping_file', arguments([Name('self', Param(), lineno=259, col_offset=26)], None, None, []), [Return(Call(Attribute(Name('test_support', Load(), lineno=260, col_offset=15), 'open_urlresource', Load(), lineno=260, col_offset=15), [Attribute(Name('self', Load(), lineno=260, col_offset=45), 'mapfileurl', Load(), lineno=260, col_offset=45)], [], None, None, lineno=260, col_offset=15), lineno=260, col_offset=8)], [], lineno=259, col_offset=4), FunctionDef('test_mapping_file', arguments([Name('self', Param(), lineno=262, col_offset=26)], None, None, []), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=263, col_offset=11), 'mapfileurl', Load(), lineno=263, col_offset=11), 'endswith', Load(), lineno=263, col_offset=11), [Str('.xml', lineno=263, col_offset=36)], [], None, None, lineno=263, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=12), '_test_mapping_file_ucm', Load(), lineno=264, col_offset=12), [], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=12), '_test_mapping_file_plain', Load(), lineno=266, col_offset=12), [], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=12)], lineno=263, col_offset=8)], [], lineno=262, col_offset=4), FunctionDef('_test_mapping_file_plain', arguments([Name('self', Param(), lineno=268, col_offset=33)], None, None, []), [Assign([Name('_unichr', Store(), lineno=269, col_offset=8)], Lambda(arguments([Name('c', Param(), lineno=269, col_offset=25)], None, None, []), Call(Name('eval', Load(), lineno=269, col_offset=28), [BinOp(Str("u'\\U%08x'", lineno=269, col_offset=33), Mod(), Call(Name('int', Load(), lineno=269, col_offset=48), [Name('c', Load(), lineno=269, col_offset=52), Num(16, lineno=269, col_offset=55)], [], None, None, lineno=269, col_offset=48), lineno=269, col_offset=33)], [], None, None, lineno=269, col_offset=28), lineno=269, col_offset=18), lineno=269, col_offset=8), Assign([Name('unichrs', Store(), lineno=270, col_offset=8)], Lambda(arguments([Name('s', Param(), lineno=270, col_offset=25)], None, None, []), Call(Attribute(Str(u'', lineno=270, col_offset=28), 'join', Load(), lineno=270, col_offset=28), [GeneratorExp(Call(Name('_unichr', Load(), lineno=270, col_offset=37), [Name('c', Load(), lineno=270, col_offset=45)], [], None, None, lineno=270, col_offset=37), [comprehension(Name('c', Store(), lineno=270, col_offset=52), Call(Attribute(Name('s', Load(), lineno=270, col_offset=57), 'split', Load(), lineno=270, col_offset=57), [Str('+', lineno=270, col_offset=65)], [], None, None, lineno=270, col_offset=57), [])], lineno=270, col_offset=37)], [], None, None, lineno=270, col_offset=28), lineno=270, col_offset=18), lineno=270, col_offset=8), Assign([Name('urt_wa', Store(), lineno=271, col_offset=8)], Dict([], [], lineno=271, col_offset=17), lineno=271, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=273, col_offset=13), 'open_mapping_file', Load(), lineno=273, col_offset=13), [], [], None, None, lineno=273, col_offset=13), Name('f', Store(), lineno=273, col_offset=41), [For(Name('line', Store(), lineno=274, col_offset=16), Name('f', Load(), lineno=274, col_offset=24), [If(UnaryOp(Not(), Name('line', Load(), lineno=275, col_offset=23), lineno=275, col_offset=19), [Break( lineno=276, col_offset=20)], [], lineno=275, col_offset=16), Assign([Name('data', Store(), lineno=277, col_offset=16)], Call(Attribute(Call(Attribute(Subscript(Call(Attribute(Name('line', Load(), lineno=277, col_offset=23), 'split', Load(), lineno=277, col_offset=23), [Str('#', lineno=277, col_offset=34)], [], None, None, lineno=277, col_offset=23), Index(Num(0, lineno=277, col_offset=39)), Load(), lineno=277, col_offset=23), 'strip', Load(), lineno=277, col_offset=23), [], [], None, None, lineno=277, col_offset=23), 'split', Load(), lineno=277, col_offset=23), [], [], None, None, lineno=277, col_offset=23), lineno=277, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=278, col_offset=19), [Name('data', Load(), lineno=278, col_offset=23)], [], None, None, lineno=278, col_offset=19), [NotEq()], [Num(2, lineno=278, col_offset=32)], lineno=278, col_offset=19), [Continue( lineno=279, col_offset=20)], [], lineno=278, col_offset=16), Assign([Name('csetval', Store(), lineno=281, col_offset=16)], Call(Name('eval', Load(), lineno=281, col_offset=26), [Subscript(Name('data', Load(), lineno=281, col_offset=31), Index(Num(0, lineno=281, col_offset=36)), Load(), lineno=281, col_offset=31)], [], None, None, lineno=281, col_offset=26), lineno=281, col_offset=16), If(Compare(Name('csetval', Load(), lineno=282, col_offset=19), [LtE()], [Num(127, lineno=282, col_offset=30)], lineno=282, col_offset=19), [Assign([Name('csetch', Store(), lineno=283, col_offset=20)], Call(Name('chr', Load(), lineno=283, col_offset=29), [BinOp(Name('csetval', Load(), lineno=283, col_offset=33), BitAnd(), Num(255, lineno=283, col_offset=43), lineno=283, col_offset=33)], [], None, None, lineno=283, col_offset=29), lineno=283, col_offset=20)], [If(Compare(Name('csetval', Load(), lineno=284, col_offset=21), [GtE()], [Num(16777216, lineno=284, col_offset=32)], lineno=284, col_offset=21), [Assign([Name('csetch', Store(), lineno=285, col_offset=20)], BinOp(BinOp(BinOp(Call(Name('chr', Load(), lineno=285, col_offset=29), [BinOp(Name('csetval', Load(), lineno=285, col_offset=33), RShift(), Num(24, lineno=285, col_offset=44), lineno=285, col_offset=33)], [], None, None, lineno=285, col_offset=29), Add(), Call(Name('chr', Load(), lineno=285, col_offset=50), [BinOp(BinOp(Name('csetval', Load(), lineno=285, col_offset=55), RShift(), Num(16, lineno=285, col_offset=66), lineno=285, col_offset=55), BitAnd(), Num(255, lineno=285, col_offset=72), lineno=285, col_offset=54)], [], None, None, lineno=285, col_offset=50), lineno=285, col_offset=29), Add(), Call(Name('chr', Load(), lineno=286, col_offset=29), [BinOp(BinOp(Name('csetval', Load(), lineno=286, col_offset=34), RShift(), Num(8, lineno=286, col_offset=45), lineno=286, col_offset=34), BitAnd(), Num(255, lineno=286, col_offset=50), lineno=286, col_offset=33)], [], None, None, lineno=286, col_offset=29), lineno=285, col_offset=78), Add(), Call(Name('chr', Load(), lineno=286, col_offset=58), [BinOp(Name('csetval', Load(), lineno=286, col_offset=62), BitAnd(), Num(255, lineno=286, col_offset=72), lineno=286, col_offset=62)], [], None, None, lineno=286, col_offset=58), lineno=286, col_offset=56), lineno=285, col_offset=20)], [If(Compare(Name('csetval', Load(), lineno=287, col_offset=21), [GtE()], [Num(65536, lineno=287, col_offset=32)], lineno=287, col_offset=21), [Assign([Name('csetch', Store(), lineno=288, col_offset=20)], BinOp(BinOp(Call(Name('chr', Load(), lineno=288, col_offset=29), [BinOp(Name('csetval', Load(), lineno=288, col_offset=33), RShift(), Num(16, lineno=288, col_offset=44), lineno=288, col_offset=33)], [], None, None, lineno=288, col_offset=29), Add(), Call(Name('chr', Load(), lineno=289, col_offset=29), [BinOp(BinOp(Name('csetval', Load(), lineno=289, col_offset=34), RShift(), Num(8, lineno=289, col_offset=45), lineno=289, col_offset=34), BitAnd(), Num(255, lineno=289, col_offset=50), lineno=289, col_offset=33)], [], None, None, lineno=289, col_offset=29), lineno=288, col_offset=29), Add(), Call(Name('chr', Load(), lineno=289, col_offset=58), [BinOp(Name('csetval', Load(), lineno=289, col_offset=62), BitAnd(), Num(255, lineno=289, col_offset=72), lineno=289, col_offset=62)], [], None, None, lineno=289, col_offset=58), lineno=289, col_offset=56), lineno=288, col_offset=20)], [If(Compare(Name('csetval', Load(), lineno=290, col_offset=21), [GtE()], [Num(256, lineno=290, col_offset=32)], lineno=290, col_offset=21), [Assign([Name('csetch', Store(), lineno=291, col_offset=20)], BinOp(Call(Name('chr', Load(), lineno=291, col_offset=29), [BinOp(Name('csetval', Load(), lineno=291, col_offset=33), RShift(), Num(8, lineno=291, col_offset=44), lineno=291, col_offset=33)], [], None, None, lineno=291, col_offset=29), Add(), Call(Name('chr', Load(), lineno=291, col_offset=49), [BinOp(Name('csetval', Load(), lineno=291, col_offset=53), BitAnd(), Num(255, lineno=291, col_offset=63), lineno=291, col_offset=53)], [], None, None, lineno=291, col_offset=49), lineno=291, col_offset=29), lineno=291, col_offset=20)], [Continue( lineno=293, col_offset=20)], lineno=290, col_offset=21)], lineno=287, col_offset=21)], lineno=284, col_offset=21)], lineno=282, col_offset=16), Assign([Name('unich', Store(), lineno=295, col_offset=16)], Call(Name('unichrs', Load(), lineno=295, col_offset=24), [Subscript(Name('data', Load(), lineno=295, col_offset=32), Index(Num(1, lineno=295, col_offset=37)), Load(), lineno=295, col_offset=32)], [], None, None, lineno=295, col_offset=24), lineno=295, col_offset=16), If(BoolOp(Or(), [Compare(Name('unich', Load(), lineno=296, col_offset=19), [Eq()], [Str(u'\ufffd', lineno=296, col_offset=28)], lineno=296, col_offset=19), Compare(Name('unich', Load(), lineno=296, col_offset=41), [In()], [Name('urt_wa', Load(), lineno=296, col_offset=50)], lineno=296, col_offset=41)], lineno=296, col_offset=19), [Continue( lineno=297, col_offset=20)], [], lineno=296, col_offset=16), Assign([Subscript(Name('urt_wa', Load(), lineno=298, col_offset=16), Index(Name('unich', Load(), lineno=298, col_offset=23)), Store(), lineno=298, col_offset=16)], Name('csetch', Load(), lineno=298, col_offset=32), lineno=298, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=16), '_testpoint', Load(), lineno=300, col_offset=16), [Name('csetch', Load(), lineno=300, col_offset=32), Name('unich', Load(), lineno=300, col_offset=40)], [], None, None, lineno=300, col_offset=16), lineno=300, col_offset=16)], [], lineno=274, col_offset=12)], lineno=273, col_offset=13)], [], lineno=268, col_offset=4), FunctionDef('_test_mapping_file_ucm', arguments([Name('self', Param(), lineno=302, col_offset=31)], None, None, []), [With(Call(Attribute(Name('self', Load(), lineno=303, col_offset=13), 'open_mapping_file', Load(), lineno=303, col_offset=13), [], [], None, None, lineno=303, col_offset=13), Name('f', Store(), lineno=303, col_offset=41), [Assign([Name('ucmdata', Store(), lineno=304, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=304, col_offset=22), 'read', Load(), lineno=304, col_offset=22), [], [], None, None, lineno=304, col_offset=22), lineno=304, col_offset=12)], lineno=303, col_offset=13), Assign([Name('uc', Store(), lineno=305, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=305, col_offset=13), 'findall', Load(), lineno=305, col_offset=13), [Str('<a u="([A-F0-9]{4})" b="([0-9A-F ]+)"/>', lineno=305, col_offset=24), Name('ucmdata', Load(), lineno=305, col_offset=67)], [], None, None, lineno=305, col_offset=13), lineno=305, col_offset=8), For(Tuple([Name('uni', Store(), lineno=306, col_offset=12), Name('coded', Store(), lineno=306, col_offset=17)], Store(), lineno=306, col_offset=12), Name('uc', Load(), lineno=306, col_offset=26), [Assign([Name('unich', Store(), lineno=307, col_offset=12)], Call(Name('unichr', Load(), lineno=307, col_offset=20), [Call(Name('int', Load(), lineno=307, col_offset=27), [Name('uni', Load(), lineno=307, col_offset=31), Num(16, lineno=307, col_offset=36)], [], None, None, lineno=307, col_offset=27)], [], None, None, lineno=307, col_offset=20), lineno=307, col_offset=12), Assign([Name('codech', Store(), lineno=308, col_offset=12)], Call(Attribute(Str('', lineno=308, col_offset=21), 'join', Load(), lineno=308, col_offset=21), [GeneratorExp(Call(Name('chr', Load(), lineno=308, col_offset=29), [Call(Name('int', Load(), lineno=308, col_offset=33), [Name('c', Load(), lineno=308, col_offset=37), Num(16, lineno=308, col_offset=40)], [], None, None, lineno=308, col_offset=33)], [], None, None, lineno=308, col_offset=29), [comprehension(Name('c', Store(), lineno=308, col_offset=49), Call(Attribute(Name('coded', Load(), lineno=308, col_offset=54), 'split', Load(), lineno=308, col_offset=54), [], [], None, None, lineno=308, col_offset=54), [])], lineno=308, col_offset=29)], [], None, None, lineno=308, col_offset=21), lineno=308, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=12), '_testpoint', Load(), lineno=309, col_offset=12), [Name('codech', Load(), lineno=309, col_offset=28), Name('unich', Load(), lineno=309, col_offset=36)], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12)], [], lineno=306, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('test_mapping_supplemental', arguments([Name('self', Param(), lineno=311, col_offset=34)], None, None, []), [For(Name('mapping', Store(), lineno=312, col_offset=12), Attribute(Name('self', Load(), lineno=312, col_offset=23), 'supmaps', Load(), lineno=312, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=12), '_testpoint', Load(), lineno=313, col_offset=12), [], [], Name('mapping', Load(), lineno=313, col_offset=29), None, lineno=313, col_offset=12), lineno=313, col_offset=12)], [], lineno=312, col_offset=8)], [], lineno=311, col_offset=4), FunctionDef('_testpoint', arguments([Name('self', Param(), lineno=315, col_offset=19), Name('csetch', Param(), lineno=315, col_offset=25), Name('unich', Param(), lineno=315, col_offset=33)], None, None, []), [If(Compare(Tuple([Name('csetch', Load(), lineno=316, col_offset=12), Name('unich', Load(), lineno=316, col_offset=20)], Load(), lineno=316, col_offset=12), [NotIn()], [Attribute(Name('self', Load(), lineno=316, col_offset=34), 'pass_enctest', Load(), lineno=316, col_offset=34)], lineno=316, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=318, col_offset=16), 'assertEqual', Load(), lineno=318, col_offset=16), [Call(Attribute(Name('unich', Load(), lineno=318, col_offset=33), 'encode', Load(), lineno=318, col_offset=33), [Attribute(Name('self', Load(), lineno=318, col_offset=46), 'encoding', Load(), lineno=318, col_offset=46)], [], None, None, lineno=318, col_offset=33), Name('csetch', Load(), lineno=318, col_offset=62)], [], None, None, lineno=318, col_offset=16), lineno=318, col_offset=16)], [ExceptHandler(Name('UnicodeError', Load(), lineno=319, col_offset=19), Name('exc', Store(), lineno=319, col_offset=33), [Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=16), 'fail', Load(), lineno=320, col_offset=16), [BinOp(Str('Encoding failed while testing %s -> %s: %s', lineno=320, col_offset=26), Mod(), Tuple([Call(Name('repr', Load(), lineno=321, col_offset=28), [Name('unich', Load(), lineno=321, col_offset=33)], [], None, None, lineno=321, col_offset=28), Call(Name('repr', Load(), lineno=321, col_offset=41), [Name('csetch', Load(), lineno=321, col_offset=46)], [], None, None, lineno=321, col_offset=41), Attribute(Name('exc', Load(), lineno=321, col_offset=55), 'reason', Load(), lineno=321, col_offset=55)], Load(), lineno=321, col_offset=28), lineno=320, col_offset=26)], [], None, None, lineno=320, col_offset=16), lineno=320, col_offset=16)], lineno=319, col_offset=12)], [], lineno=317, col_offset=12)], [], lineno=316, col_offset=8), If(Compare(Tuple([Name('csetch', Load(), lineno=322, col_offset=12), Name('unich', Load(), lineno=322, col_offset=20)], Load(), lineno=322, col_offset=12), [NotIn()], [Attribute(Name('self', Load(), lineno=322, col_offset=34), 'pass_dectest', Load(), lineno=322, col_offset=34)], lineno=322, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=16), 'assertEqual', Load(), lineno=324, col_offset=16), [Call(Attribute(Name('csetch', Load(), lineno=324, col_offset=33), 'decode', Load(), lineno=324, col_offset=33), [Attribute(Name('self', Load(), lineno=324, col_offset=47), 'encoding', Load(), lineno=324, col_offset=47)], [], None, None, lineno=324, col_offset=33), Name('unich', Load(), lineno=324, col_offset=63)], [], None, None, lineno=324, col_offset=16), lineno=324, col_offset=16)], [ExceptHandler(Name('UnicodeError', Load(), lineno=325, col_offset=19), Name('exc', Store(), lineno=325, col_offset=33), [Expr(Call(Attribute(Name('self', Load(), lineno=326, col_offset=16), 'fail', Load(), lineno=326, col_offset=16), [BinOp(Str('Decoding failed while testing %s -> %s: %s', lineno=326, col_offset=26), Mod(), Tuple([Call(Name('repr', Load(), lineno=327, col_offset=28), [Name('csetch', Load(), lineno=327, col_offset=33)], [], None, None, lineno=327, col_offset=28), Call(Name('repr', Load(), lineno=327, col_offset=42), [Name('unich', Load(), lineno=327, col_offset=47)], [], None, None, lineno=327, col_offset=42), Attribute(Name('exc', Load(), lineno=327, col_offset=55), 'reason', Load(), lineno=327, col_offset=55)], Load(), lineno=327, col_offset=28), lineno=326, col_offset=26)], [], None, None, lineno=326, col_offset=16), lineno=326, col_offset=16)], lineno=325, col_offset=12)], [], lineno=323, col_offset=12)], [], lineno=322, col_offset=8)], [], lineno=315, col_offset=4)], [], lineno=247, col_offset=0), FunctionDef('load_teststring', arguments([Name('encoding', Param(), lineno=329, col_offset=20)], None, None, []), [ImportFrom('test', [alias('cjkencodings_test', None)], 0, lineno=330, col_offset=4), Return(Subscript(Attribute(Name('cjkencodings_test', Load(), lineno=331, col_offset=11), 'teststring', Load(), lineno=331, col_offset=11), Index(Name('encoding', Load(), lineno=331, col_offset=40)), Load(), lineno=331, col_offset=11), lineno=331, col_offset=4)], [], lineno=329, col_offset=0)])
