Module([Import([alias('textwrap', None)], lineno=1, col_offset=0), ImportFrom('unittest', [alias('TestCase', None)], 0, lineno=2, col_offset=0), Import([alias('json', None)], lineno=4, col_offset=0), ClassDef('TestSeparators', [Name('TestCase', Load(), lineno=7, col_offset=21)], [FunctionDef('test_separators', arguments([Name('self', Param(), lineno=8, col_offset=24)], None, None, []), [Assign([Name('h', Store(), lineno=9, col_offset=8)], List([List([Str('blorpie', lineno=9, col_offset=14)], Load(), lineno=9, col_offset=13), List([Str('whoops', lineno=9, col_offset=27)], Load(), lineno=9, col_offset=26), List([], Load(), lineno=9, col_offset=38), Str('d-shtaeou', lineno=9, col_offset=42), Str('d-nthiouh', lineno=9, col_offset=55), Str('i-vhbjkhnth', lineno=9, col_offset=68), Dict([Str('nifty', lineno=10, col_offset=14)], [Num(87, lineno=10, col_offset=23)], lineno=10, col_offset=13), Dict([Str('field', lineno=10, col_offset=29), Str('morefield', lineno=10, col_offset=45)], [Str('yes', lineno=10, col_offset=38), Name('False', Load(), lineno=10, col_offset=58)], lineno=10, col_offset=28)], Load(), lineno=9, col_offset=12), lineno=9, col_offset=8), Assign([Name('expect', Store(), lineno=12, col_offset=8)], Call(Attribute(Name('textwrap', Load(), lineno=12, col_offset=17), 'dedent', Load(), lineno=12, col_offset=17), [Str('        [\n          [\n            "blorpie"\n          ] ,\n          [\n            "whoops"\n          ] ,\n          [] ,\n          "d-shtaeou" ,\n          "d-nthiouh" ,\n          "i-vhbjkhnth" ,\n          {\n            "nifty" : 87\n          } ,\n          {\n            "field" : "yes" ,\n            "morefield" : false\n          }\n        ]', lineno=31, col_offset=-1)], [], None, None, lineno=12, col_offset=17), lineno=12, col_offset=8), Assign([Name('d1', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=34, col_offset=13), 'dumps', Load(), lineno=34, col_offset=13), [Name('h', Load(), lineno=34, col_offset=24)], [], None, None, lineno=34, col_offset=13), lineno=34, col_offset=8), Assign([Name('d2', Store(), lineno=35, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=35, col_offset=13), 'dumps', Load(), lineno=35, col_offset=13), [Name('h', Load(), lineno=35, col_offset=24)], [keyword('indent', Num(2, lineno=35, col_offset=34)), keyword('sort_keys', Name('True', Load(), lineno=35, col_offset=47)), keyword('separators', Tuple([Str(' ,', lineno=35, col_offset=65), Str(' : ', lineno=35, col_offset=71)], Load(), lineno=35, col_offset=65))], None, None, lineno=35, col_offset=13), lineno=35, col_offset=8), Assign([Name('h1', Store(), lineno=37, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=37, col_offset=13), 'loads', Load(), lineno=37, col_offset=13), [Name('d1', Load(), lineno=37, col_offset=24)], [], None, None, lineno=37, col_offset=13), lineno=37, col_offset=8), Assign([Name('h2', Store(), lineno=38, col_offset=8)], Call(Attribute(Name('json', Load(), lineno=38, col_offset=13), 'loads', Load(), lineno=38, col_offset=13), [Name('d2', Load(), lineno=38, col_offset=24)], [], None, None, lineno=38, col_offset=13), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Name('h1', Load(), lineno=40, col_offset=25), Name('h', Load(), lineno=40, col_offset=29)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Name('h2', Load(), lineno=41, col_offset=25), Name('h', Load(), lineno=41, col_offset=29)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Name('d2', Load(), lineno=42, col_offset=25), Name('expect', Load(), lineno=42, col_offset=29)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8)], [], lineno=8, col_offset=4)], [], lineno=7, col_offset=0)])
