Module([ImportFrom('__future__', [alias('nested_scopes', None)], 0, lineno=1, col_offset=0), ImportFrom('unittest', [alias('TestCase', None)], 0, lineno=2, col_offset=0), ImportFrom('wsgiref.util', [alias('setup_testing_defaults', None)], 0, lineno=3, col_offset=0), ImportFrom('wsgiref.headers', [alias('Headers', None)], 0, lineno=4, col_offset=0), ImportFrom('wsgiref.handlers', [alias('BaseHandler', None), alias('BaseCGIHandler', None)], 0, lineno=5, col_offset=0), ImportFrom('wsgiref', [alias('util', None)], 0, lineno=6, col_offset=0), ImportFrom('wsgiref.validate', [alias('validator', None)], 0, lineno=7, col_offset=0), ImportFrom('wsgiref.simple_server', [alias('WSGIServer', None), alias('WSGIRequestHandler', None), alias('demo_app', None)], 0, lineno=8, col_offset=0), ImportFrom('wsgiref.simple_server', [alias('make_server', None)], 0, lineno=9, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=10, col_offset=0), ImportFrom('SocketServer', [alias('BaseServer', None)], 0, lineno=11, col_offset=0), Import([alias('os', None)], lineno=12, col_offset=0), Import([alias('re', None)], lineno=13, col_offset=0), Import([alias('sys', None)], lineno=14, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=16, col_offset=0), ClassDef('MockServer', [Name('WSGIServer', Load(), lineno=18, col_offset=17)], [Expr(Str('Non-socket HTTP server', lineno=19, col_offset=4), lineno=19, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=21, col_offset=17), Name('server_address', Param(), lineno=21, col_offset=23), Name('RequestHandlerClass', Param(), lineno=21, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('BaseServer', Load(), lineno=22, col_offset=8), '__init__', Load(), lineno=22, col_offset=8), [Name('self', Load(), lineno=22, col_offset=28), Name('server_address', Load(), lineno=22, col_offset=34), Name('RequestHandlerClass', Load(), lineno=22, col_offset=50)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'server_bind', Load(), lineno=23, col_offset=8), [], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8)], [], lineno=21, col_offset=4), FunctionDef('server_bind', arguments([Name('self', Param(), lineno=25, col_offset=20)], None, None, []), [Assign([Tuple([Name('host', Store(), lineno=26, col_offset=8), Name('port', Store(), lineno=26, col_offset=14)], Store(), lineno=26, col_offset=8)], Attribute(Name('self', Load(), lineno=26, col_offset=21), 'server_address', Load(), lineno=26, col_offset=21), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'server_name', Store(), lineno=27, col_offset=8)], Name('host', Load(), lineno=27, col_offset=27), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'server_port', Store(), lineno=28, col_offset=8)], Name('port', Load(), lineno=28, col_offset=27), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'setup_environ', Load(), lineno=29, col_offset=8), [], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=25, col_offset=4)], [], lineno=18, col_offset=0), ClassDef('MockHandler', [Name('WSGIRequestHandler', Load(), lineno=32, col_offset=18)], [Expr(Str('Non-socket HTTP handler', lineno=33, col_offset=4), lineno=33, col_offset=4), FunctionDef('setup', arguments([Name('self', Param(), lineno=34, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'connection', Store(), lineno=35, col_offset=8)], Attribute(Name('self', Load(), lineno=35, col_offset=26), 'request', Load(), lineno=35, col_offset=26), lineno=35, col_offset=8), Assign([Tuple([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'rfile', Store(), lineno=36, col_offset=8), Attribute(Name('self', Load(), lineno=36, col_offset=20), 'wfile', Store(), lineno=36, col_offset=20)], Store(), lineno=36, col_offset=8)], Attribute(Name('self', Load(), lineno=36, col_offset=33), 'connection', Load(), lineno=36, col_offset=33), lineno=36, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('finish', arguments([Name('self', Param(), lineno=38, col_offset=15)], None, None, []), [Pass( lineno=39, col_offset=8)], [], lineno=38, col_offset=4)], [], lineno=32, col_offset=0), FunctionDef('hello_app', arguments([Name('environ', Param(), lineno=45, col_offset=14), Name('start_response', Param(), lineno=45, col_offset=22)], None, None, []), [Expr(Call(Name('start_response', Load(), lineno=46, col_offset=4), [Str('200 OK', lineno=46, col_offset=19), List([Tuple([Str('Content-Type', lineno=47, col_offset=9), Str('text/plain', lineno=47, col_offset=24)], Load(), lineno=47, col_offset=9), Tuple([Str('Date', lineno=48, col_offset=9), Str('Mon, 05 Jun 2006 18:49:54 GMT', lineno=48, col_offset=16)], Load(), lineno=48, col_offset=9)], Load(), lineno=46, col_offset=29)], [], None, None, lineno=46, col_offset=4), lineno=46, col_offset=4), Return(List([Str('Hello, world!', lineno=50, col_offset=12)], Load(), lineno=50, col_offset=11), lineno=50, col_offset=4)], [], lineno=45, col_offset=0), FunctionDef('run_amock', arguments([Name('app', Param(), lineno=52, col_offset=14), Name('data', Param(), lineno=52, col_offset=29)], None, None, [Name('hello_app', Load(), lineno=52, col_offset=18), Str('GET / HTTP/1.0\n\n', lineno=52, col_offset=34)]), [Assign([Name('server', Store(), lineno=53, col_offset=4)], Call(Name('make_server', Load(), lineno=53, col_offset=13), [Str('', lineno=53, col_offset=25), Num(80, lineno=53, col_offset=29), Name('app', Load(), lineno=53, col_offset=33), Name('MockServer', Load(), lineno=53, col_offset=38), Name('MockHandler', Load(), lineno=53, col_offset=50)], [], None, None, lineno=53, col_offset=13), lineno=53, col_offset=4), Assign([Tuple([Name('inp', Store(), lineno=54, col_offset=4), Name('out', Store(), lineno=54, col_offset=9), Name('err', Store(), lineno=54, col_offset=14), Name('olderr', Store(), lineno=54, col_offset=19)], Store(), lineno=54, col_offset=4)], Tuple([Call(Name('StringIO', Load(), lineno=54, col_offset=28), [Name('data', Load(), lineno=54, col_offset=37)], [], None, None, lineno=54, col_offset=28), Call(Name('StringIO', Load(), lineno=54, col_offset=44), [], [], None, None, lineno=54, col_offset=44), Call(Name('StringIO', Load(), lineno=54, col_offset=56), [], [], None, None, lineno=54, col_offset=56), Attribute(Name('sys', Load(), lineno=54, col_offset=68), 'stderr', Load(), lineno=54, col_offset=68)], Load(), lineno=54, col_offset=28), lineno=54, col_offset=4), Assign([Attribute(Name('sys', Load(), lineno=55, col_offset=4), 'stderr', Store(), lineno=55, col_offset=4)], Name('err', Load(), lineno=55, col_offset=17), lineno=55, col_offset=4), TryFinally([Expr(Call(Attribute(Name('server', Load(), lineno=58, col_offset=8), 'finish_request', Load(), lineno=58, col_offset=8), [Tuple([Name('inp', Load(), lineno=58, col_offset=31), Name('out', Load(), lineno=58, col_offset=35)], Load(), lineno=58, col_offset=31), Tuple([Str('127.0.0.1', lineno=58, col_offset=42), Num(8888, lineno=58, col_offset=54)], Load(), lineno=58, col_offset=42)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8)], [Assign([Attribute(Name('sys', Load(), lineno=60, col_offset=8), 'stderr', Store(), lineno=60, col_offset=8)], Name('olderr', Load(), lineno=60, col_offset=21), lineno=60, col_offset=8)], lineno=57, col_offset=4), Return(Tuple([Call(Attribute(Name('out', Load(), lineno=62, col_offset=11), 'getvalue', Load(), lineno=62, col_offset=11), [], [], None, None, lineno=62, col_offset=11), Call(Attribute(Name('err', Load(), lineno=62, col_offset=27), 'getvalue', Load(), lineno=62, col_offset=27), [], [], None, None, lineno=62, col_offset=27)], Load(), lineno=62, col_offset=11), lineno=62, col_offset=4)], [], lineno=52, col_offset=0), FunctionDef('compare_generic_iter', arguments([Name('make_it', Param(), lineno=86, col_offset=25), Name('match', Param(), lineno=86, col_offset=33)], None, None, []), [Expr(Str("Utility to compare a generic 2.1/2.2+ iterator with an iterable\n\n    If running under Python 2.2+, this tests the iterator using iter()/next(),\n    as well as __getitem__.  'make_it' must be a function returning a fresh\n    iterator to be tested (since this may test the iterator twice).", lineno=91, col_offset=-1), lineno=91, col_offset=-1), Assign([Name('it', Store(), lineno=93, col_offset=4)], Call(Name('make_it', Load(), lineno=93, col_offset=9), [], [], None, None, lineno=93, col_offset=9), lineno=93, col_offset=4), Assign([Name('n', Store(), lineno=94, col_offset=4)], Num(0, lineno=94, col_offset=8), lineno=94, col_offset=4), For(Name('item', Store(), lineno=95, col_offset=8), Name('match', Load(), lineno=95, col_offset=16), [If(UnaryOp(Not(), Compare(Subscript(Name('it', Load(), lineno=96, col_offset=15), Index(Name('n', Load(), lineno=96, col_offset=18)), Load(), lineno=96, col_offset=15), [Eq()], [Name('item', Load(), lineno=96, col_offset=22)], lineno=96, col_offset=15), lineno=96, col_offset=11), [Raise(Name('AssertionError', Load(), lineno=96, col_offset=34), None, None, lineno=96, col_offset=28)], [], lineno=96, col_offset=8), AugAssign(Name('n', Store(), lineno=97, col_offset=8), Add(), Num(1, lineno=97, col_offset=11), lineno=97, col_offset=8)], [], lineno=95, col_offset=4), TryExcept([Expr(Subscript(Name('it', Load(), lineno=99, col_offset=8), Index(Name('n', Load(), lineno=99, col_offset=11)), Load(), lineno=99, col_offset=8), lineno=99, col_offset=8)], [ExceptHandler(Name('IndexError', Load(), lineno=100, col_offset=11), None, [Pass( lineno=101, col_offset=8)], lineno=100, col_offset=4)], [Raise(Call(Name('AssertionError', Load(), lineno=103, col_offset=14), [Str('Too many items from __getitem__', lineno=103, col_offset=29), Name('it', Load(), lineno=103, col_offset=63)], [], None, None, lineno=103, col_offset=14), None, None, lineno=103, col_offset=8)], lineno=98, col_offset=4), TryExcept([Expr(Tuple([Name('iter', Load(), lineno=106, col_offset=8), Name('StopIteration', Load(), lineno=106, col_offset=14)], Load(), lineno=106, col_offset=8), lineno=106, col_offset=8)], [ExceptHandler(Name('NameError', Load(), lineno=107, col_offset=11), None, [Pass( lineno=108, col_offset=8)], lineno=107, col_offset=4)], [Assign([Name('it', Store(), lineno=111, col_offset=8)], Call(Name('make_it', Load(), lineno=111, col_offset=13), [], [], None, None, lineno=111, col_offset=13), lineno=111, col_offset=8), If(UnaryOp(Not(), Compare(Call(Name('iter', Load(), lineno=112, col_offset=15), [Name('it', Load(), lineno=112, col_offset=20)], [], None, None, lineno=112, col_offset=15), [Is()], [Name('it', Load(), lineno=112, col_offset=27)], lineno=112, col_offset=15), lineno=112, col_offset=11), [Raise(Name('AssertionError', Load(), lineno=112, col_offset=37), None, None, lineno=112, col_offset=31)], [], lineno=112, col_offset=8), For(Name('item', Store(), lineno=113, col_offset=12), Name('match', Load(), lineno=113, col_offset=20), [If(UnaryOp(Not(), Compare(Call(Attribute(Name('it', Load(), lineno=114, col_offset=19), 'next', Load(), lineno=114, col_offset=19), [], [], None, None, lineno=114, col_offset=19), [Eq()], [Name('item', Load(), lineno=114, col_offset=30)], lineno=114, col_offset=19), lineno=114, col_offset=15), [Raise(Name('AssertionError', Load(), lineno=114, col_offset=42), None, None, lineno=114, col_offset=36)], [], lineno=114, col_offset=12)], [], lineno=113, col_offset=8), TryExcept([Expr(Call(Attribute(Name('it', Load(), lineno=116, col_offset=12), 'next', Load(), lineno=116, col_offset=12), [], [], None, None, lineno=116, col_offset=12), lineno=116, col_offset=12)], [ExceptHandler(Name('StopIteration', Load(), lineno=117, col_offset=15), None, [Pass( lineno=118, col_offset=12)], lineno=117, col_offset=8)], [Raise(Call(Name('AssertionError', Load(), lineno=120, col_offset=18), [Str('Too many items from .next()', lineno=120, col_offset=33), Name('it', Load(), lineno=120, col_offset=63)], [], None, None, lineno=120, col_offset=18), None, None, lineno=120, col_offset=12)], lineno=115, col_offset=8)], lineno=105, col_offset=4)], [], lineno=86, col_offset=0), ClassDef('IntegrationTests', [Name('TestCase', Load(), lineno=127, col_offset=23)], [FunctionDef('check_hello', arguments([Name('self', Param(), lineno=129, col_offset=20), Name('out', Param(), lineno=129, col_offset=26), Name('has_length', Param(), lineno=129, col_offset=31)], None, None, [Name('True', Load(), lineno=129, col_offset=42)]), [Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'assertEqual', Load(), lineno=130, col_offset=8), [Name('out', Load(), lineno=130, col_offset=25), BinOp(BinOp(BinOp(BinOp(Str('HTTP/1.0 200 OK\r\nServer: WSGIServer/0.1 Python/', lineno=131, col_offset=12), Add(), Subscript(Call(Attribute(Attribute(Name('sys', Load(), lineno=132, col_offset=45), 'version', Load(), lineno=132, col_offset=45), 'split', Load(), lineno=132, col_offset=45), [], [], None, None, lineno=132, col_offset=45), Index(Num(0, lineno=132, col_offset=65)), Load(), lineno=132, col_offset=45), lineno=131, col_offset=12), Add(), Str('\r\nContent-Type: text/plain\r\nDate: Mon, 05 Jun 2006 18:49:54 GMT\r\n', lineno=132, col_offset=68), lineno=132, col_offset=67), Add(), BoolOp(Or(), [BoolOp(And(), [Name('has_length', Load(), lineno=135, col_offset=13), Str('Content-Length: 13\r\n', lineno=135, col_offset=29)], lineno=135, col_offset=13), Str('', lineno=135, col_offset=57)], lineno=135, col_offset=13), lineno=134, col_offset=54), Add(), Str('\r\nHello, world!', lineno=136, col_offset=12), lineno=135, col_offset=61)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8)], [], lineno=129, col_offset=4), FunctionDef('test_plain_hello', arguments([Name('self', Param(), lineno=140, col_offset=25)], None, None, []), [Assign([Tuple([Name('out', Store(), lineno=141, col_offset=8), Name('err', Store(), lineno=141, col_offset=13)], Store(), lineno=141, col_offset=8)], Call(Name('run_amock', Load(), lineno=141, col_offset=19), [], [], None, None, lineno=141, col_offset=19), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'check_hello', Load(), lineno=142, col_offset=8), [Name('out', Load(), lineno=142, col_offset=25)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('test_validated_hello', arguments([Name('self', Param(), lineno=144, col_offset=29)], None, None, []), [Assign([Tuple([Name('out', Store(), lineno=145, col_offset=8), Name('err', Store(), lineno=145, col_offset=13)], Store(), lineno=145, col_offset=8)], Call(Name('run_amock', Load(), lineno=145, col_offset=19), [Call(Name('validator', Load(), lineno=145, col_offset=29), [Name('hello_app', Load(), lineno=145, col_offset=39)], [], None, None, lineno=145, col_offset=29)], [], None, None, lineno=145, col_offset=19), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=8), 'check_hello', Load(), lineno=147, col_offset=8), [Name('out', Load(), lineno=147, col_offset=25)], [keyword('has_length', Name('False', Load(), lineno=147, col_offset=41))], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('test_simple_validation_error', arguments([Name('self', Param(), lineno=149, col_offset=37)], None, None, []), [FunctionDef('bad_app', arguments([Name('environ', Param(), lineno=150, col_offset=20), Name('start_response', Param(), lineno=150, col_offset=28)], None, None, []), [Expr(Call(Name('start_response', Load(), lineno=151, col_offset=12), [Str('200 OK', lineno=151, col_offset=27), Tuple([Str('Content-Type', lineno=151, col_offset=38), Str('text/plain', lineno=151, col_offset=53)], Load(), lineno=151, col_offset=38)], [], None, None, lineno=151, col_offset=12), lineno=151, col_offset=12), Return(List([Str('Hello, world!', lineno=152, col_offset=20)], Load(), lineno=152, col_offset=19), lineno=152, col_offset=12)], [], lineno=150, col_offset=8), Assign([Tuple([Name('out', Store(), lineno=153, col_offset=8), Name('err', Store(), lineno=153, col_offset=13)], Store(), lineno=153, col_offset=8)], Call(Name('run_amock', Load(), lineno=153, col_offset=19), [Call(Name('validator', Load(), lineno=153, col_offset=29), [Name('bad_app', Load(), lineno=153, col_offset=39)], [], None, None, lineno=153, col_offset=29)], [], None, None, lineno=153, col_offset=19), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'assertTrue', Load(), lineno=154, col_offset=8), [Call(Attribute(Name('out', Load(), lineno=154, col_offset=24), 'endswith', Load(), lineno=154, col_offset=24), [Str('A server error occurred.  Please contact the administrator.', lineno=155, col_offset=12)], [], None, None, lineno=154, col_offset=24)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertEqual', Load(), lineno=157, col_offset=8), [Subscript(Call(Attribute(Name('err', Load(), lineno=158, col_offset=12), 'splitlines', Load(), lineno=158, col_offset=12), [], [], None, None, lineno=158, col_offset=12), Index(Num(-2, lineno=158, col_offset=30)), Load(), lineno=158, col_offset=12), Str("AssertionError: Headers (('Content-Type', 'text/plain')) must be of type list: <type 'tuple'>", lineno=159, col_offset=12)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=149, col_offset=4)], [], lineno=127, col_offset=0), ClassDef('UtilityTests', [Name('TestCase', Load(), lineno=168, col_offset=19)], [FunctionDef('checkShift', arguments([Name('self', Param(), lineno=170, col_offset=19), Name('sn_in', Param(), lineno=170, col_offset=24), Name('pi_in', Param(), lineno=170, col_offset=30), Name('part', Param(), lineno=170, col_offset=36), Name('sn_out', Param(), lineno=170, col_offset=41), Name('pi_out', Param(), lineno=170, col_offset=48)], None, None, []), [Assign([Name('env', Store(), lineno=171, col_offset=8)], Dict([Str('SCRIPT_NAME', lineno=171, col_offset=15), Str('PATH_INFO', lineno=171, col_offset=35)], [Name('sn_in', Load(), lineno=171, col_offset=29), Name('pi_in', Load(), lineno=171, col_offset=47)], lineno=171, col_offset=14), lineno=171, col_offset=8), Expr(Call(Attribute(Name('util', Load(), lineno=172, col_offset=8), 'setup_testing_defaults', Load(), lineno=172, col_offset=8), [Name('env', Load(), lineno=172, col_offset=36)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=8), 'assertEqual', Load(), lineno=173, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=173, col_offset=25), 'shift_path_info', Load(), lineno=173, col_offset=25), [Name('env', Load(), lineno=173, col_offset=46)], [], None, None, lineno=173, col_offset=25), Name('part', Load(), lineno=173, col_offset=51)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=8), 'assertEqual', Load(), lineno=174, col_offset=8), [Subscript(Name('env', Load(), lineno=174, col_offset=25), Index(Str('PATH_INFO', lineno=174, col_offset=29)), Load(), lineno=174, col_offset=25), Name('pi_out', Load(), lineno=174, col_offset=42)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertEqual', Load(), lineno=175, col_offset=8), [Subscript(Name('env', Load(), lineno=175, col_offset=25), Index(Str('SCRIPT_NAME', lineno=175, col_offset=29)), Load(), lineno=175, col_offset=25), Name('sn_out', Load(), lineno=175, col_offset=44)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), Return(Name('env', Load(), lineno=176, col_offset=15), lineno=176, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('checkDefault', arguments([Name('self', Param(), lineno=178, col_offset=21), Name('key', Param(), lineno=178, col_offset=27), Name('value', Param(), lineno=178, col_offset=32), Name('alt', Param(), lineno=178, col_offset=39)], None, None, [Name('None', Load(), lineno=178, col_offset=43)]), [Assign([Name('env', Store(), lineno=180, col_offset=8)], Dict([], [], lineno=180, col_offset=14), lineno=180, col_offset=8), Expr(Call(Attribute(Name('util', Load(), lineno=181, col_offset=8), 'setup_testing_defaults', Load(), lineno=181, col_offset=8), [Name('env', Load(), lineno=181, col_offset=36)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8), If(Call(Name('isinstance', Load(), lineno=182, col_offset=11), [Name('value', Load(), lineno=182, col_offset=22), Name('StringIO', Load(), lineno=182, col_offset=29)], [], None, None, lineno=182, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=12), 'assertIsInstance', Load(), lineno=183, col_offset=12), [Subscript(Name('env', Load(), lineno=183, col_offset=34), Index(Name('key', Load(), lineno=183, col_offset=38)), Load(), lineno=183, col_offset=34), Name('StringIO', Load(), lineno=183, col_offset=44)], [], None, None, lineno=183, col_offset=12), lineno=183, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=12), 'assertEqual', Load(), lineno=185, col_offset=12), [Subscript(Name('env', Load(), lineno=185, col_offset=29), Index(Name('key', Load(), lineno=185, col_offset=33)), Load(), lineno=185, col_offset=29), Name('value', Load(), lineno=185, col_offset=39)], [], None, None, lineno=185, col_offset=12), lineno=185, col_offset=12)], lineno=182, col_offset=8), Assign([Name('env', Store(), lineno=188, col_offset=8)], Dict([Name('key', Load(), lineno=188, col_offset=15)], [Name('alt', Load(), lineno=188, col_offset=19)], lineno=188, col_offset=14), lineno=188, col_offset=8), Expr(Call(Attribute(Name('util', Load(), lineno=189, col_offset=8), 'setup_testing_defaults', Load(), lineno=189, col_offset=8), [Name('env', Load(), lineno=189, col_offset=36)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertTrue', Load(), lineno=190, col_offset=8), [Compare(Subscript(Name('env', Load(), lineno=190, col_offset=24), Index(Name('key', Load(), lineno=190, col_offset=28)), Load(), lineno=190, col_offset=24), [Is()], [Name('alt', Load(), lineno=190, col_offset=36)], lineno=190, col_offset=24)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=178, col_offset=4), FunctionDef('checkCrossDefault', arguments([Name('self', Param(), lineno=192, col_offset=26), Name('key', Param(), lineno=192, col_offset=31), Name('value', Param(), lineno=192, col_offset=35)], None, 'kw', []), [Expr(Call(Attribute(Name('util', Load(), lineno=193, col_offset=8), 'setup_testing_defaults', Load(), lineno=193, col_offset=8), [Name('kw', Load(), lineno=193, col_offset=36)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=8), 'assertEqual', Load(), lineno=194, col_offset=8), [Subscript(Name('kw', Load(), lineno=194, col_offset=25), Index(Name('key', Load(), lineno=194, col_offset=28)), Load(), lineno=194, col_offset=25), Name('value', Load(), lineno=194, col_offset=33)], [], None, None, lineno=194, col_offset=8), lineno=194, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('checkAppURI', arguments([Name('self', Param(), lineno=196, col_offset=20), Name('uri', Param(), lineno=196, col_offset=25)], None, 'kw', []), [Expr(Call(Attribute(Name('util', Load(), lineno=197, col_offset=8), 'setup_testing_defaults', Load(), lineno=197, col_offset=8), [Name('kw', Load(), lineno=197, col_offset=36)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=198, col_offset=25), 'application_uri', Load(), lineno=198, col_offset=25), [Name('kw', Load(), lineno=198, col_offset=46)], [], None, None, lineno=198, col_offset=25), Name('uri', Load(), lineno=198, col_offset=50)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=196, col_offset=4), FunctionDef('checkReqURI', arguments([Name('self', Param(), lineno=200, col_offset=20), Name('uri', Param(), lineno=200, col_offset=25), Name('query', Param(), lineno=200, col_offset=29)], None, 'kw', [Num(1, lineno=200, col_offset=35)]), [Expr(Call(Attribute(Name('util', Load(), lineno=201, col_offset=8), 'setup_testing_defaults', Load(), lineno=201, col_offset=8), [Name('kw', Load(), lineno=201, col_offset=36)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'assertEqual', Load(), lineno=202, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=202, col_offset=25), 'request_uri', Load(), lineno=202, col_offset=25), [Name('kw', Load(), lineno=202, col_offset=42), Name('query', Load(), lineno=202, col_offset=45)], [], None, None, lineno=202, col_offset=25), Name('uri', Load(), lineno=202, col_offset=52)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('checkFW', arguments([Name('self', Param(), lineno=209, col_offset=16), Name('text', Param(), lineno=209, col_offset=21), Name('size', Param(), lineno=209, col_offset=26), Name('match', Param(), lineno=209, col_offset=31)], None, None, []), [FunctionDef('make_it', arguments([Name('text', Param(), lineno=211, col_offset=20), Name('size', Param(), lineno=211, col_offset=30)], None, None, [Name('text', Load(), lineno=211, col_offset=25), Name('size', Load(), lineno=211, col_offset=35)]), [Return(Call(Attribute(Name('util', Load(), lineno=212, col_offset=19), 'FileWrapper', Load(), lineno=212, col_offset=19), [Call(Name('StringIO', Load(), lineno=212, col_offset=36), [Name('text', Load(), lineno=212, col_offset=45)], [], None, None, lineno=212, col_offset=36), Name('size', Load(), lineno=212, col_offset=51)], [], None, None, lineno=212, col_offset=19), lineno=212, col_offset=12)], [], lineno=211, col_offset=8), Expr(Call(Name('compare_generic_iter', Load(), lineno=214, col_offset=8), [Name('make_it', Load(), lineno=214, col_offset=29), Name('match', Load(), lineno=214, col_offset=37)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Assign([Name('it', Store(), lineno=216, col_offset=8)], Call(Name('make_it', Load(), lineno=216, col_offset=13), [], [], None, None, lineno=216, col_offset=13), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertFalse', Load(), lineno=217, col_offset=8), [Attribute(Attribute(Name('it', Load(), lineno=217, col_offset=25), 'filelike', Load(), lineno=217, col_offset=25), 'closed', Load(), lineno=217, col_offset=25)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), For(Name('item', Store(), lineno=219, col_offset=12), Name('it', Load(), lineno=219, col_offset=20), [Pass( lineno=220, col_offset=12)], [], lineno=219, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'assertFalse', Load(), lineno=222, col_offset=8), [Attribute(Attribute(Name('it', Load(), lineno=222, col_offset=25), 'filelike', Load(), lineno=222, col_offset=25), 'closed', Load(), lineno=222, col_offset=25)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('it', Load(), lineno=224, col_offset=8), 'close', Load(), lineno=224, col_offset=8), [], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertTrue', Load(), lineno=225, col_offset=8), [Attribute(Attribute(Name('it', Load(), lineno=225, col_offset=24), 'filelike', Load(), lineno=225, col_offset=24), 'closed', Load(), lineno=225, col_offset=24)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('testSimpleShifts', arguments([Name('self', Param(), lineno=228, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'checkShift', Load(), lineno=229, col_offset=8), [Str('', lineno=229, col_offset=24), Str('/', lineno=229, col_offset=27), Str('', lineno=229, col_offset=32), Str('/', lineno=229, col_offset=36), Str('', lineno=229, col_offset=41)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=230, col_offset=8), 'checkShift', Load(), lineno=230, col_offset=8), [Str('', lineno=230, col_offset=24), Str('/x', lineno=230, col_offset=27), Str('x', lineno=230, col_offset=33), Str('/x', lineno=230, col_offset=38), Str('', lineno=230, col_offset=44)], [], None, None, lineno=230, col_offset=8), lineno=230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'checkShift', Load(), lineno=231, col_offset=8), [Str('/', lineno=231, col_offset=24), Str('', lineno=231, col_offset=28), Name('None', Load(), lineno=231, col_offset=32), Str('/', lineno=231, col_offset=38), Str('', lineno=231, col_offset=43)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'checkShift', Load(), lineno=232, col_offset=8), [Str('/a', lineno=232, col_offset=24), Str('/x/y', lineno=232, col_offset=29), Str('x', lineno=232, col_offset=37), Str('/a/x', lineno=232, col_offset=42), Str('/y', lineno=232, col_offset=50)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'checkShift', Load(), lineno=233, col_offset=8), [Str('/a', lineno=233, col_offset=24), Str('/x/', lineno=233, col_offset=29), Str('x', lineno=233, col_offset=37), Str('/a/x', lineno=233, col_offset=42), Str('/', lineno=233, col_offset=50)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('testNormalizedShifts', arguments([Name('self', Param(), lineno=236, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'checkShift', Load(), lineno=237, col_offset=8), [Str('/a/b', lineno=237, col_offset=24), Str('/../y', lineno=237, col_offset=32), Str('..', lineno=237, col_offset=41), Str('/a', lineno=237, col_offset=47), Str('/y', lineno=237, col_offset=53)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'checkShift', Load(), lineno=238, col_offset=8), [Str('', lineno=238, col_offset=24), Str('/../y', lineno=238, col_offset=28), Str('..', lineno=238, col_offset=37), Str('', lineno=238, col_offset=43), Str('/y', lineno=238, col_offset=47)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=8), 'checkShift', Load(), lineno=239, col_offset=8), [Str('/a/b', lineno=239, col_offset=24), Str('//y', lineno=239, col_offset=32), Str('y', lineno=239, col_offset=39), Str('/a/b/y', lineno=239, col_offset=44), Str('', lineno=239, col_offset=54)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'checkShift', Load(), lineno=240, col_offset=8), [Str('/a/b', lineno=240, col_offset=24), Str('//y/', lineno=240, col_offset=32), Str('y', lineno=240, col_offset=40), Str('/a/b/y', lineno=240, col_offset=45), Str('/', lineno=240, col_offset=55)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'checkShift', Load(), lineno=241, col_offset=8), [Str('/a/b', lineno=241, col_offset=24), Str('/./y', lineno=241, col_offset=32), Str('y', lineno=241, col_offset=40), Str('/a/b/y', lineno=241, col_offset=45), Str('', lineno=241, col_offset=55)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'checkShift', Load(), lineno=242, col_offset=8), [Str('/a/b', lineno=242, col_offset=24), Str('/./y/', lineno=242, col_offset=32), Str('y', lineno=242, col_offset=41), Str('/a/b/y', lineno=242, col_offset=46), Str('/', lineno=242, col_offset=56)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'checkShift', Load(), lineno=243, col_offset=8), [Str('/a/b', lineno=243, col_offset=24), Str('///./..//y/.//', lineno=243, col_offset=32), Str('..', lineno=243, col_offset=50), Str('/a', lineno=243, col_offset=56), Str('/y/', lineno=243, col_offset=62)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'checkShift', Load(), lineno=244, col_offset=8), [Str('/a/b', lineno=244, col_offset=24), Str('///', lineno=244, col_offset=32), Str('', lineno=244, col_offset=39), Str('/a/b/', lineno=244, col_offset=43), Str('', lineno=244, col_offset=52)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=8), 'checkShift', Load(), lineno=245, col_offset=8), [Str('/a/b', lineno=245, col_offset=24), Str('/.//', lineno=245, col_offset=32), Str('', lineno=245, col_offset=40), Str('/a/b/', lineno=245, col_offset=44), Str('', lineno=245, col_offset=53)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'checkShift', Load(), lineno=246, col_offset=8), [Str('/a/b', lineno=246, col_offset=24), Str('/x//', lineno=246, col_offset=32), Str('x', lineno=246, col_offset=40), Str('/a/b/x', lineno=246, col_offset=45), Str('/', lineno=246, col_offset=55)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'checkShift', Load(), lineno=247, col_offset=8), [Str('/a/b', lineno=247, col_offset=24), Str('/.', lineno=247, col_offset=32), Name('None', Load(), lineno=247, col_offset=38), Str('/a/b', lineno=247, col_offset=44), Str('', lineno=247, col_offset=52)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8)], [], lineno=236, col_offset=4), FunctionDef('testDefaults', arguments([Name('self', Param(), lineno=250, col_offset=21)], None, None, []), [For(Tuple([Name('key', Store(), lineno=251, col_offset=12), Name('value', Store(), lineno=251, col_offset=17)], Store(), lineno=251, col_offset=12), List([Tuple([Str('SERVER_NAME', lineno=252, col_offset=13), Str('127.0.0.1', lineno=252, col_offset=27)], Load(), lineno=252, col_offset=13), Tuple([Str('SERVER_PORT', lineno=253, col_offset=13), Str('80', lineno=253, col_offset=28)], Load(), lineno=253, col_offset=13), Tuple([Str('SERVER_PROTOCOL', lineno=254, col_offset=13), Str('HTTP/1.0', lineno=254, col_offset=31)], Load(), lineno=254, col_offset=13), Tuple([Str('HTTP_HOST', lineno=255, col_offset=13), Str('127.0.0.1', lineno=255, col_offset=25)], Load(), lineno=255, col_offset=13), Tuple([Str('REQUEST_METHOD', lineno=256, col_offset=13), Str('GET', lineno=256, col_offset=30)], Load(), lineno=256, col_offset=13), Tuple([Str('SCRIPT_NAME', lineno=257, col_offset=13), Str('', lineno=257, col_offset=27)], Load(), lineno=257, col_offset=13), Tuple([Str('PATH_INFO', lineno=258, col_offset=13), Str('/', lineno=258, col_offset=25)], Load(), lineno=258, col_offset=13), Tuple([Str('wsgi.version', lineno=259, col_offset=13), Tuple([Num(1, lineno=259, col_offset=30), Num(0, lineno=259, col_offset=32)], Load(), lineno=259, col_offset=30)], Load(), lineno=259, col_offset=13), Tuple([Str('wsgi.run_once', lineno=260, col_offset=13), Num(0, lineno=260, col_offset=30)], Load(), lineno=260, col_offset=13), Tuple([Str('wsgi.multithread', lineno=261, col_offset=13), Num(0, lineno=261, col_offset=33)], Load(), lineno=261, col_offset=13), Tuple([Str('wsgi.multiprocess', lineno=262, col_offset=13), Num(0, lineno=262, col_offset=34)], Load(), lineno=262, col_offset=13), Tuple([Str('wsgi.input', lineno=263, col_offset=13), Call(Name('StringIO', Load(), lineno=263, col_offset=27), [Str('', lineno=263, col_offset=36)], [], None, None, lineno=263, col_offset=27)], Load(), lineno=263, col_offset=13), Tuple([Str('wsgi.errors', lineno=264, col_offset=13), Call(Name('StringIO', Load(), lineno=264, col_offset=28), [], [], None, None, lineno=264, col_offset=28)], Load(), lineno=264, col_offset=13), Tuple([Str('wsgi.url_scheme', lineno=265, col_offset=13), Str('http', lineno=265, col_offset=31)], Load(), lineno=265, col_offset=13)], Load(), lineno=251, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=12), 'checkDefault', Load(), lineno=267, col_offset=12), [Name('key', Load(), lineno=267, col_offset=30), Name('value', Load(), lineno=267, col_offset=34)], [], None, None, lineno=267, col_offset=12), lineno=267, col_offset=12)], [], lineno=251, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('testCrossDefaults', arguments([Name('self', Param(), lineno=270, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=271, col_offset=8), 'checkCrossDefault', Load(), lineno=271, col_offset=8), [Str('HTTP_HOST', lineno=271, col_offset=31), Str('foo.bar', lineno=271, col_offset=43)], [keyword('SERVER_NAME', Str('foo.bar', lineno=271, col_offset=65))], None, None, lineno=271, col_offset=8), lineno=271, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=272, col_offset=8), 'checkCrossDefault', Load(), lineno=272, col_offset=8), [Str('wsgi.url_scheme', lineno=272, col_offset=31), Str('https', lineno=272, col_offset=49)], [keyword('HTTPS', Str('on', lineno=272, col_offset=63))], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'checkCrossDefault', Load(), lineno=273, col_offset=8), [Str('wsgi.url_scheme', lineno=273, col_offset=31), Str('https', lineno=273, col_offset=49)], [keyword('HTTPS', Str('1', lineno=273, col_offset=63))], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=274, col_offset=8), 'checkCrossDefault', Load(), lineno=274, col_offset=8), [Str('wsgi.url_scheme', lineno=274, col_offset=31), Str('https', lineno=274, col_offset=49)], [keyword('HTTPS', Str('yes', lineno=274, col_offset=63))], None, None, lineno=274, col_offset=8), lineno=274, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=8), 'checkCrossDefault', Load(), lineno=275, col_offset=8), [Str('wsgi.url_scheme', lineno=275, col_offset=31), Str('http', lineno=275, col_offset=49)], [keyword('HTTPS', Str('foo', lineno=275, col_offset=62))], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'checkCrossDefault', Load(), lineno=276, col_offset=8), [Str('SERVER_PORT', lineno=276, col_offset=31), Str('80', lineno=276, col_offset=45)], [keyword('HTTPS', Str('foo', lineno=276, col_offset=56))], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'checkCrossDefault', Load(), lineno=277, col_offset=8), [Str('SERVER_PORT', lineno=277, col_offset=31), Str('443', lineno=277, col_offset=45)], [keyword('HTTPS', Str('on', lineno=277, col_offset=57))], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=270, col_offset=4), FunctionDef('testGuessScheme', arguments([Name('self', Param(), lineno=280, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), 'assertEqual', Load(), lineno=281, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=281, col_offset=25), 'guess_scheme', Load(), lineno=281, col_offset=25), [Dict([], [], lineno=281, col_offset=43)], [], None, None, lineno=281, col_offset=25), Str('http', lineno=281, col_offset=48)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), 'assertEqual', Load(), lineno=282, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=282, col_offset=25), 'guess_scheme', Load(), lineno=282, col_offset=25), [Dict([Str('HTTPS', lineno=282, col_offset=44)], [Str('foo', lineno=282, col_offset=52)], lineno=282, col_offset=43)], [], None, None, lineno=282, col_offset=25), Str('http', lineno=282, col_offset=61)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=8), 'assertEqual', Load(), lineno=283, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=283, col_offset=25), 'guess_scheme', Load(), lineno=283, col_offset=25), [Dict([Str('HTTPS', lineno=283, col_offset=44)], [Str('on', lineno=283, col_offset=52)], lineno=283, col_offset=43)], [], None, None, lineno=283, col_offset=25), Str('https', lineno=283, col_offset=60)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'assertEqual', Load(), lineno=284, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=284, col_offset=25), 'guess_scheme', Load(), lineno=284, col_offset=25), [Dict([Str('HTTPS', lineno=284, col_offset=44)], [Str('yes', lineno=284, col_offset=52)], lineno=284, col_offset=43)], [], None, None, lineno=284, col_offset=25), Str('https', lineno=284, col_offset=61)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertEqual', Load(), lineno=285, col_offset=8), [Call(Attribute(Name('util', Load(), lineno=285, col_offset=25), 'guess_scheme', Load(), lineno=285, col_offset=25), [Dict([Str('HTTPS', lineno=285, col_offset=44)], [Str('1', lineno=285, col_offset=52)], lineno=285, col_offset=43)], [], None, None, lineno=285, col_offset=25), Str('https', lineno=285, col_offset=59)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=280, col_offset=4), FunctionDef('testAppURIs', arguments([Name('self', Param(), lineno=291, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'checkAppURI', Load(), lineno=292, col_offset=8), [Str('http://127.0.0.1/', lineno=292, col_offset=25)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=8), 'checkAppURI', Load(), lineno=293, col_offset=8), [Str('http://127.0.0.1/spam', lineno=293, col_offset=25)], [keyword('SCRIPT_NAME', Str('/spam', lineno=293, col_offset=62))], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=294, col_offset=8), 'checkAppURI', Load(), lineno=294, col_offset=8), [Str('http://spam.example.com:2071/', lineno=294, col_offset=25)], [keyword('HTTP_HOST', Str('spam.example.com:2071', lineno=295, col_offset=22)), keyword('SERVER_PORT', Str('2071', lineno=295, col_offset=59))], None, None, lineno=294, col_offset=8), lineno=294, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'checkAppURI', Load(), lineno=296, col_offset=8), [Str('http://spam.example.com/', lineno=296, col_offset=25)], [keyword('SERVER_NAME', Str('spam.example.com', lineno=297, col_offset=24))], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=8), 'checkAppURI', Load(), lineno=298, col_offset=8), [Str('http://127.0.0.1/', lineno=298, col_offset=25)], [keyword('HTTP_HOST', Str('127.0.0.1', lineno=299, col_offset=22)), keyword('SERVER_NAME', Str('spam.example.com', lineno=299, col_offset=47))], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'checkAppURI', Load(), lineno=300, col_offset=8), [Str('https://127.0.0.1/', lineno=300, col_offset=25)], [keyword('HTTPS', Str('on', lineno=300, col_offset=53))], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'checkAppURI', Load(), lineno=301, col_offset=8), [Str('http://127.0.0.1:8000/', lineno=301, col_offset=25)], [keyword('SERVER_PORT', Str('8000', lineno=301, col_offset=63)), keyword('HTTP_HOST', Name('None', Load(), lineno=302, col_offset=22))], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('testReqURIs', arguments([Name('self', Param(), lineno=304, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'checkReqURI', Load(), lineno=305, col_offset=8), [Str('http://127.0.0.1/', lineno=305, col_offset=25)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=8), 'checkReqURI', Load(), lineno=306, col_offset=8), [Str('http://127.0.0.1/spam', lineno=306, col_offset=25)], [keyword('SCRIPT_NAME', Str('/spam', lineno=306, col_offset=62))], None, None, lineno=306, col_offset=8), lineno=306, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=8), 'checkReqURI', Load(), lineno=307, col_offset=8), [Str('http://127.0.0.1/spammity/spam', lineno=307, col_offset=25)], [keyword('SCRIPT_NAME', Str('/spammity', lineno=308, col_offset=24)), keyword('PATH_INFO', Str('/spam', lineno=308, col_offset=47))], None, None, lineno=307, col_offset=8), lineno=307, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), 'checkReqURI', Load(), lineno=309, col_offset=8), [Str('http://127.0.0.1/spammity/spam?say=ni', lineno=309, col_offset=25)], [keyword('SCRIPT_NAME', Str('/spammity', lineno=310, col_offset=24)), keyword('PATH_INFO', Str('/spam', lineno=310, col_offset=47)), keyword('QUERY_STRING', Str('say=ni', lineno=310, col_offset=68))], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'checkReqURI', Load(), lineno=311, col_offset=8), [Str('http://127.0.0.1/spammity/spam', lineno=311, col_offset=25), Num(0, lineno=311, col_offset=59)], [keyword('SCRIPT_NAME', Str('/spammity', lineno=312, col_offset=24)), keyword('PATH_INFO', Str('/spam', lineno=312, col_offset=47)), keyword('QUERY_STRING', Str('say=ni', lineno=312, col_offset=68))], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8)], [], lineno=304, col_offset=4), FunctionDef('testFileWrapper', arguments([Name('self', Param(), lineno=314, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'checkFW', Load(), lineno=315, col_offset=8), [BinOp(Str('xyz', lineno=315, col_offset=21), Mult(), Num(50, lineno=315, col_offset=27), lineno=315, col_offset=21), Num(120, lineno=315, col_offset=31), List([BinOp(Str('xyz', lineno=315, col_offset=37), Mult(), Num(40, lineno=315, col_offset=43), lineno=315, col_offset=37), BinOp(Str('xyz', lineno=315, col_offset=46), Mult(), Num(10, lineno=315, col_offset=52), lineno=315, col_offset=46)], Load(), lineno=315, col_offset=36)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8)], [], lineno=314, col_offset=4), FunctionDef('testHopByHop', arguments([Name('self', Param(), lineno=317, col_offset=21)], None, None, []), [For(Name('hop', Store(), lineno=318, col_offset=12), Call(Attribute(Str('Connection Keep-Alive Proxy-Authenticate Proxy-Authorization TE Trailers Transfer-Encoding Upgrade', lineno=319, col_offset=12), 'split', Load(), lineno=319, col_offset=12), [], [], None, None, lineno=319, col_offset=12), [For(Name('alt', Store(), lineno=322, col_offset=16), Tuple([Name('hop', Load(), lineno=322, col_offset=23), Call(Attribute(Name('hop', Load(), lineno=322, col_offset=28), 'title', Load(), lineno=322, col_offset=28), [], [], None, None, lineno=322, col_offset=28), Call(Attribute(Name('hop', Load(), lineno=322, col_offset=41), 'upper', Load(), lineno=322, col_offset=41), [], [], None, None, lineno=322, col_offset=41), Call(Attribute(Name('hop', Load(), lineno=322, col_offset=54), 'lower', Load(), lineno=322, col_offset=54), [], [], None, None, lineno=322, col_offset=54)], Load(), lineno=322, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=16), 'assertTrue', Load(), lineno=323, col_offset=16), [Call(Attribute(Name('util', Load(), lineno=323, col_offset=32), 'is_hop_by_hop', Load(), lineno=323, col_offset=32), [Name('alt', Load(), lineno=323, col_offset=51)], [], None, None, lineno=323, col_offset=32)], [], None, None, lineno=323, col_offset=16), lineno=323, col_offset=16)], [], lineno=322, col_offset=12)], [], lineno=318, col_offset=8), For(Name('hop', Store(), lineno=326, col_offset=12), Call(Attribute(Str('Accept Cache-Control Date Pragma Trailer Via Warning', lineno=327, col_offset=12), 'split', Load(), lineno=327, col_offset=12), [], [], None, None, lineno=327, col_offset=12), [For(Name('alt', Store(), lineno=329, col_offset=16), Tuple([Name('hop', Load(), lineno=329, col_offset=23), Call(Attribute(Name('hop', Load(), lineno=329, col_offset=28), 'title', Load(), lineno=329, col_offset=28), [], [], None, None, lineno=329, col_offset=28), Call(Attribute(Name('hop', Load(), lineno=329, col_offset=41), 'upper', Load(), lineno=329, col_offset=41), [], [], None, None, lineno=329, col_offset=41), Call(Attribute(Name('hop', Load(), lineno=329, col_offset=54), 'lower', Load(), lineno=329, col_offset=54), [], [], None, None, lineno=329, col_offset=54)], Load(), lineno=329, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=330, col_offset=16), 'assertFalse', Load(), lineno=330, col_offset=16), [Call(Attribute(Name('util', Load(), lineno=330, col_offset=33), 'is_hop_by_hop', Load(), lineno=330, col_offset=33), [Name('alt', Load(), lineno=330, col_offset=52)], [], None, None, lineno=330, col_offset=33)], [], None, None, lineno=330, col_offset=16), lineno=330, col_offset=16)], [], lineno=329, col_offset=12)], [], lineno=326, col_offset=8)], [], lineno=317, col_offset=4)], [], lineno=168, col_offset=0), ClassDef('HeaderTests', [Name('TestCase', Load(), lineno=332, col_offset=18)], [FunctionDef('testMappingInterface', arguments([Name('self', Param(), lineno=334, col_offset=29)], None, None, []), [Assign([Name('test', Store(), lineno=335, col_offset=8)], List([Tuple([Str('x', lineno=335, col_offset=17), Str('y', lineno=335, col_offset=21)], Load(), lineno=335, col_offset=17)], Load(), lineno=335, col_offset=15), lineno=335, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=336, col_offset=8), 'assertEqual', Load(), lineno=336, col_offset=8), [Call(Name('len', Load(), lineno=336, col_offset=25), [Call(Name('Headers', Load(), lineno=336, col_offset=29), [List([], Load(), lineno=336, col_offset=37)], [], None, None, lineno=336, col_offset=29)], [], None, None, lineno=336, col_offset=25), Num(0, lineno=336, col_offset=42)], [], None, None, lineno=336, col_offset=8), lineno=336, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertEqual', Load(), lineno=337, col_offset=8), [Call(Name('len', Load(), lineno=337, col_offset=25), [Call(Name('Headers', Load(), lineno=337, col_offset=29), [Subscript(Name('test', Load(), lineno=337, col_offset=37), Slice(None, None, None), Load(), lineno=337, col_offset=37)], [], None, None, lineno=337, col_offset=29)], [], None, None, lineno=337, col_offset=25), Num(1, lineno=337, col_offset=47)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'assertEqual', Load(), lineno=338, col_offset=8), [Call(Attribute(Call(Name('Headers', Load(), lineno=338, col_offset=25), [Subscript(Name('test', Load(), lineno=338, col_offset=33), Slice(None, None, None), Load(), lineno=338, col_offset=33)], [], None, None, lineno=338, col_offset=25), 'keys', Load(), lineno=338, col_offset=25), [], [], None, None, lineno=338, col_offset=25), List([Str('x', lineno=338, col_offset=51)], Load(), lineno=338, col_offset=50)], [], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=339, col_offset=8), 'assertEqual', Load(), lineno=339, col_offset=8), [Call(Attribute(Call(Name('Headers', Load(), lineno=339, col_offset=25), [Subscript(Name('test', Load(), lineno=339, col_offset=33), Slice(None, None, None), Load(), lineno=339, col_offset=33)], [], None, None, lineno=339, col_offset=25), 'values', Load(), lineno=339, col_offset=25), [], [], None, None, lineno=339, col_offset=25), List([Str('y', lineno=339, col_offset=53)], Load(), lineno=339, col_offset=52)], [], None, None, lineno=339, col_offset=8), lineno=339, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=8), 'assertEqual', Load(), lineno=340, col_offset=8), [Call(Attribute(Call(Name('Headers', Load(), lineno=340, col_offset=25), [Subscript(Name('test', Load(), lineno=340, col_offset=33), Slice(None, None, None), Load(), lineno=340, col_offset=33)], [], None, None, lineno=340, col_offset=25), 'items', Load(), lineno=340, col_offset=25), [], [], None, None, lineno=340, col_offset=25), Name('test', Load(), lineno=340, col_offset=51)], [], None, None, lineno=340, col_offset=8), lineno=340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=8), 'assertFalse', Load(), lineno=341, col_offset=8), [Compare(Call(Attribute(Call(Name('Headers', Load(), lineno=341, col_offset=25), [Name('test', Load(), lineno=341, col_offset=33)], [], None, None, lineno=341, col_offset=25), 'items', Load(), lineno=341, col_offset=25), [], [], None, None, lineno=341, col_offset=25), [Is()], [Name('test', Load(), lineno=341, col_offset=50)], lineno=341, col_offset=25)], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8), Assign([Name('h', Store(), lineno=343, col_offset=8)], Call(Name('Headers', Load(), lineno=343, col_offset=10), [List([], Load(), lineno=343, col_offset=18)], [], None, None, lineno=343, col_offset=10), lineno=343, col_offset=8), Delete([Subscript(Name('h', Load(), lineno=344, col_offset=12), Index(Str('foo', lineno=344, col_offset=14)), Del(), lineno=344, col_offset=12)], lineno=344, col_offset=8), Assign([Subscript(Name('h', Load(), lineno=346, col_offset=8), Index(Str('Foo', lineno=346, col_offset=10)), Store(), lineno=346, col_offset=8)], Str('bar', lineno=346, col_offset=19), lineno=346, col_offset=8), For(Name('m', Store(), lineno=347, col_offset=12), Tuple([Attribute(Name('h', Load(), lineno=347, col_offset=17), 'has_key', Load(), lineno=347, col_offset=17), Attribute(Name('h', Load(), lineno=347, col_offset=28), '__contains__', Load(), lineno=347, col_offset=28), Attribute(Name('h', Load(), lineno=347, col_offset=44), 'get', Load(), lineno=347, col_offset=44), Attribute(Name('h', Load(), lineno=347, col_offset=51), 'get_all', Load(), lineno=347, col_offset=51), Attribute(Name('h', Load(), lineno=347, col_offset=62), '__getitem__', Load(), lineno=347, col_offset=62)], Load(), lineno=347, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=348, col_offset=12), 'assertTrue', Load(), lineno=348, col_offset=12), [Call(Name('m', Load(), lineno=348, col_offset=28), [Str('foo', lineno=348, col_offset=30)], [], None, None, lineno=348, col_offset=28)], [], None, None, lineno=348, col_offset=12), lineno=348, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=12), 'assertTrue', Load(), lineno=349, col_offset=12), [Call(Name('m', Load(), lineno=349, col_offset=28), [Str('Foo', lineno=349, col_offset=30)], [], None, None, lineno=349, col_offset=28)], [], None, None, lineno=349, col_offset=12), lineno=349, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=12), 'assertTrue', Load(), lineno=350, col_offset=12), [Call(Name('m', Load(), lineno=350, col_offset=28), [Str('FOO', lineno=350, col_offset=30)], [], None, None, lineno=350, col_offset=28)], [], None, None, lineno=350, col_offset=12), lineno=350, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=12), 'assertFalse', Load(), lineno=351, col_offset=12), [Call(Name('m', Load(), lineno=351, col_offset=29), [Str('bar', lineno=351, col_offset=31)], [], None, None, lineno=351, col_offset=29)], [], None, None, lineno=351, col_offset=12), lineno=351, col_offset=12)], [], lineno=347, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=8), 'assertEqual', Load(), lineno=353, col_offset=8), [Subscript(Name('h', Load(), lineno=353, col_offset=25), Index(Str('foo', lineno=353, col_offset=27)), Load(), lineno=353, col_offset=25), Str('bar', lineno=353, col_offset=34)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8), Assign([Subscript(Name('h', Load(), lineno=354, col_offset=8), Index(Str('foo', lineno=354, col_offset=10)), Store(), lineno=354, col_offset=8)], Str('baz', lineno=354, col_offset=19), lineno=354, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertEqual', Load(), lineno=355, col_offset=8), [Subscript(Name('h', Load(), lineno=355, col_offset=25), Index(Str('FOO', lineno=355, col_offset=27)), Load(), lineno=355, col_offset=25), Str('baz', lineno=355, col_offset=34)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'assertEqual', Load(), lineno=356, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=356, col_offset=25), 'get_all', Load(), lineno=356, col_offset=25), [Str('foo', lineno=356, col_offset=35)], [], None, None, lineno=356, col_offset=25), List([Str('baz', lineno=356, col_offset=43)], Load(), lineno=356, col_offset=42)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertEqual', Load(), lineno=358, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=358, col_offset=25), 'get', Load(), lineno=358, col_offset=25), [Str('foo', lineno=358, col_offset=31), Str('whee', lineno=358, col_offset=37)], [], None, None, lineno=358, col_offset=25), Str('baz', lineno=358, col_offset=46)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertEqual', Load(), lineno=359, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=359, col_offset=25), 'get', Load(), lineno=359, col_offset=25), [Str('zoo', lineno=359, col_offset=31), Str('whee', lineno=359, col_offset=37)], [], None, None, lineno=359, col_offset=25), Str('whee', lineno=359, col_offset=46)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=8), 'assertEqual', Load(), lineno=360, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=360, col_offset=25), 'setdefault', Load(), lineno=360, col_offset=25), [Str('foo', lineno=360, col_offset=38), Str('whee', lineno=360, col_offset=44)], [], None, None, lineno=360, col_offset=25), Str('baz', lineno=360, col_offset=53)], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertEqual', Load(), lineno=361, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=361, col_offset=25), 'setdefault', Load(), lineno=361, col_offset=25), [Str('zoo', lineno=361, col_offset=38), Str('whee', lineno=361, col_offset=44)], [], None, None, lineno=361, col_offset=25), Str('whee', lineno=361, col_offset=53)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertEqual', Load(), lineno=362, col_offset=8), [Subscript(Name('h', Load(), lineno=362, col_offset=25), Index(Str('foo', lineno=362, col_offset=27)), Load(), lineno=362, col_offset=25), Str('baz', lineno=362, col_offset=34)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'assertEqual', Load(), lineno=363, col_offset=8), [Subscript(Name('h', Load(), lineno=363, col_offset=25), Index(Str('zoo', lineno=363, col_offset=27)), Load(), lineno=363, col_offset=25), Str('whee', lineno=363, col_offset=34)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8)], [], lineno=334, col_offset=4), FunctionDef('testRequireList', arguments([Name('self', Param(), lineno=365, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'assertRaises', Load(), lineno=366, col_offset=8), [Name('TypeError', Load(), lineno=366, col_offset=26), Name('Headers', Load(), lineno=366, col_offset=37), Str('foo', lineno=366, col_offset=46)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('testExtras', arguments([Name('self', Param(), lineno=369, col_offset=19)], None, None, []), [Assign([Name('h', Store(), lineno=370, col_offset=8)], Call(Name('Headers', Load(), lineno=370, col_offset=12), [List([], Load(), lineno=370, col_offset=20)], [], None, None, lineno=370, col_offset=12), lineno=370, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertEqual', Load(), lineno=371, col_offset=8), [Call(Name('str', Load(), lineno=371, col_offset=25), [Name('h', Load(), lineno=371, col_offset=29)], [], None, None, lineno=371, col_offset=25), Str('\r\n', lineno=371, col_offset=32)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=373, col_offset=8), 'add_header', Load(), lineno=373, col_offset=8), [Str('foo', lineno=373, col_offset=21), Str('bar', lineno=373, col_offset=27)], [keyword('baz', Str('spam', lineno=373, col_offset=37))], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=374, col_offset=8), 'assertEqual', Load(), lineno=374, col_offset=8), [Subscript(Name('h', Load(), lineno=374, col_offset=25), Index(Str('foo', lineno=374, col_offset=27)), Load(), lineno=374, col_offset=25), Str('bar; baz="spam"', lineno=374, col_offset=35)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'assertEqual', Load(), lineno=375, col_offset=8), [Call(Name('str', Load(), lineno=375, col_offset=25), [Name('h', Load(), lineno=375, col_offset=29)], [], None, None, lineno=375, col_offset=25), Str('foo: bar; baz="spam"\r\n\r\n', lineno=375, col_offset=32)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=377, col_offset=8), 'add_header', Load(), lineno=377, col_offset=8), [Str('Foo', lineno=377, col_offset=21), Str('bar', lineno=377, col_offset=27)], [keyword('cheese', Name('None', Load(), lineno=377, col_offset=40))], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=8), 'assertEqual', Load(), lineno=378, col_offset=8), [Call(Attribute(Name('h', Load(), lineno=378, col_offset=25), 'get_all', Load(), lineno=378, col_offset=25), [Str('foo', lineno=378, col_offset=35)], [], None, None, lineno=378, col_offset=25), List([Str('bar; baz="spam"', lineno=379, col_offset=13), Str('bar; cheese', lineno=379, col_offset=32)], Load(), lineno=379, col_offset=12)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'assertEqual', Load(), lineno=381, col_offset=8), [Call(Name('str', Load(), lineno=381, col_offset=25), [Name('h', Load(), lineno=381, col_offset=29)], [], None, None, lineno=381, col_offset=25), Str('foo: bar; baz="spam"\r\nFoo: bar; cheese\r\n\r\n', lineno=382, col_offset=12)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8)], [], lineno=369, col_offset=4)], [], lineno=332, col_offset=0), ClassDef('ErrorHandler', [Name('BaseCGIHandler', Load(), lineno=388, col_offset=19)], [Expr(Str('Simple handler subclass for testing BaseHandler', lineno=389, col_offset=4), lineno=389, col_offset=4), Assign([Name('os_environ', Store(), lineno=394, col_offset=4)], Call(Name('dict', Load(), lineno=394, col_offset=17), [Call(Attribute(Attribute(Name('os', Load(), lineno=394, col_offset=22), 'environ', Load(), lineno=394, col_offset=22), 'items', Load(), lineno=394, col_offset=22), [], [], None, None, lineno=394, col_offset=22)], [], None, None, lineno=394, col_offset=17), lineno=394, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=396, col_offset=17)], None, 'kw', []), [Expr(Call(Name('setup_testing_defaults', Load(), lineno=397, col_offset=8), [Name('kw', Load(), lineno=397, col_offset=31)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8), Expr(Call(Attribute(Name('BaseCGIHandler', Load(), lineno=398, col_offset=8), '__init__', Load(), lineno=398, col_offset=8), [Name('self', Load(), lineno=399, col_offset=12), Call(Name('StringIO', Load(), lineno=399, col_offset=18), [Str('', lineno=399, col_offset=27)], [], None, None, lineno=399, col_offset=18), Call(Name('StringIO', Load(), lineno=399, col_offset=32), [], [], None, None, lineno=399, col_offset=32), Call(Name('StringIO', Load(), lineno=399, col_offset=44), [], [], None, None, lineno=399, col_offset=44), Name('kw', Load(), lineno=399, col_offset=56)], [keyword('multithread', Name('True', Load(), lineno=400, col_offset=24)), keyword('multiprocess', Name('True', Load(), lineno=400, col_offset=43))], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8)], [], lineno=396, col_offset=4)], [], lineno=388, col_offset=0), ClassDef('TestHandler', [Name('ErrorHandler', Load(), lineno=403, col_offset=18)], [Expr(Str('Simple handler subclass for testing BaseHandler, w/error passthru', lineno=404, col_offset=4), lineno=404, col_offset=4), FunctionDef('handle_error', arguments([Name('self', Param(), lineno=406, col_offset=21)], None, None, []), [Raise(None, None, None, lineno=407, col_offset=8)], [], lineno=406, col_offset=4)], [], lineno=403, col_offset=0), ClassDef('HandlerTests', [Name('TestCase', Load(), lineno=419, col_offset=19)], [FunctionDef('checkEnvironAttrs', arguments([Name('self', Param(), lineno=421, col_offset=26), Name('handler', Param(), lineno=421, col_offset=32)], None, None, []), [Assign([Name('env', Store(), lineno=422, col_offset=8)], Attribute(Name('handler', Load(), lineno=422, col_offset=14), 'environ', Load(), lineno=422, col_offset=14), lineno=422, col_offset=8), For(Name('attr', Store(), lineno=423, col_offset=12), List([Str('version', lineno=424, col_offset=12), Str('multithread', lineno=424, col_offset=22), Str('multiprocess', lineno=424, col_offset=36), Str('run_once', lineno=424, col_offset=51), Str('file_wrapper', lineno=424, col_offset=62)], Load(), lineno=423, col_offset=20), [If(BoolOp(And(), [Compare(Name('attr', Load(), lineno=426, col_offset=15), [Eq()], [Str('file_wrapper', lineno=426, col_offset=21)], lineno=426, col_offset=15), Compare(Attribute(Name('handler', Load(), lineno=426, col_offset=40), 'wsgi_file_wrapper', Load(), lineno=426, col_offset=40), [Is()], [Name('None', Load(), lineno=426, col_offset=69)], lineno=426, col_offset=40)], lineno=426, col_offset=15), [Continue( lineno=427, col_offset=16)], [], lineno=426, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=12), 'assertEqual', Load(), lineno=428, col_offset=12), [Call(Name('getattr', Load(), lineno=428, col_offset=29), [Name('handler', Load(), lineno=428, col_offset=37), BinOp(Str('wsgi_', lineno=428, col_offset=45), Add(), Name('attr', Load(), lineno=428, col_offset=53), lineno=428, col_offset=45)], [], None, None, lineno=428, col_offset=29), Subscript(Name('env', Load(), lineno=428, col_offset=59), Index(BinOp(Str('wsgi.', lineno=428, col_offset=63), Add(), Name('attr', Load(), lineno=428, col_offset=71), lineno=428, col_offset=63)), Load(), lineno=428, col_offset=59)], [], None, None, lineno=428, col_offset=12), lineno=428, col_offset=12)], [], lineno=423, col_offset=8)], [], lineno=421, col_offset=4), FunctionDef('checkOSEnviron', arguments([Name('self', Param(), lineno=430, col_offset=23), Name('handler', Param(), lineno=430, col_offset=28)], None, None, []), [Assign([Name('empty', Store(), lineno=431, col_offset=8)], Dict([], [], lineno=431, col_offset=16), lineno=431, col_offset=8), Expr(Call(Name('setup_testing_defaults', Load(), lineno=431, col_offset=20), [Name('empty', Load(), lineno=431, col_offset=43)], [], None, None, lineno=431, col_offset=20), lineno=431, col_offset=20), Assign([Name('env', Store(), lineno=432, col_offset=8)], Attribute(Name('handler', Load(), lineno=432, col_offset=14), 'environ', Load(), lineno=432, col_offset=14), lineno=432, col_offset=8), ImportFrom('os', [alias('environ', None)], 0, lineno=433, col_offset=8), For(Tuple([Name('k', Store(), lineno=434, col_offset=12), Name('v', Store(), lineno=434, col_offset=14)], Store(), lineno=434, col_offset=12), Call(Attribute(Name('environ', Load(), lineno=434, col_offset=19), 'items', Load(), lineno=434, col_offset=19), [], [], None, None, lineno=434, col_offset=19), [If(Compare(Name('k', Load(), lineno=435, col_offset=15), [NotIn()], [Name('empty', Load(), lineno=435, col_offset=24)], lineno=435, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=436, col_offset=16), 'assertEqual', Load(), lineno=436, col_offset=16), [Subscript(Name('env', Load(), lineno=436, col_offset=33), Index(Name('k', Load(), lineno=436, col_offset=37)), Load(), lineno=436, col_offset=33), Name('v', Load(), lineno=436, col_offset=40)], [], None, None, lineno=436, col_offset=16), lineno=436, col_offset=16)], [], lineno=435, col_offset=12)], [], lineno=434, col_offset=8), For(Tuple([Name('k', Store(), lineno=437, col_offset=12), Name('v', Store(), lineno=437, col_offset=14)], Store(), lineno=437, col_offset=12), Call(Attribute(Name('empty', Load(), lineno=437, col_offset=19), 'items', Load(), lineno=437, col_offset=19), [], [], None, None, lineno=437, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=438, col_offset=12), 'assertIn', Load(), lineno=438, col_offset=12), [Name('k', Load(), lineno=438, col_offset=26), Name('env', Load(), lineno=438, col_offset=29)], [], None, None, lineno=438, col_offset=12), lineno=438, col_offset=12)], [], lineno=437, col_offset=8)], [], lineno=430, col_offset=4), FunctionDef('testEnviron', arguments([Name('self', Param(), lineno=440, col_offset=20)], None, None, []), [Assign([Name('h', Store(), lineno=441, col_offset=8)], Call(Name('TestHandler', Load(), lineno=441, col_offset=12), [], [keyword('X', Str('Y', lineno=441, col_offset=26))], None, None, lineno=441, col_offset=12), lineno=441, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=442, col_offset=8), 'setup_environ', Load(), lineno=442, col_offset=8), [], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=443, col_offset=8), 'checkEnvironAttrs', Load(), lineno=443, col_offset=8), [Name('h', Load(), lineno=443, col_offset=31)], [], None, None, lineno=443, col_offset=8), lineno=443, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=8), 'checkOSEnviron', Load(), lineno=444, col_offset=8), [Name('h', Load(), lineno=444, col_offset=28)], [], None, None, lineno=444, col_offset=8), lineno=444, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=445, col_offset=8), 'assertEqual', Load(), lineno=445, col_offset=8), [Subscript(Attribute(Name('h', Load(), lineno=445, col_offset=25), 'environ', Load(), lineno=445, col_offset=25), Index(Str('X', lineno=445, col_offset=35)), Load(), lineno=445, col_offset=25), Str('Y', lineno=445, col_offset=40)], [], None, None, lineno=445, col_offset=8), lineno=445, col_offset=8)], [], lineno=440, col_offset=4), FunctionDef('testCGIEnviron', arguments([Name('self', Param(), lineno=447, col_offset=23)], None, None, []), [Assign([Name('h', Store(), lineno=448, col_offset=8)], Call(Name('BaseCGIHandler', Load(), lineno=448, col_offset=12), [Name('None', Load(), lineno=448, col_offset=27), Name('None', Load(), lineno=448, col_offset=32), Name('None', Load(), lineno=448, col_offset=37), Dict([], [], lineno=448, col_offset=42)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=449, col_offset=8), 'setup_environ', Load(), lineno=449, col_offset=8), [], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), For(Name('key', Store(), lineno=450, col_offset=12), Tuple([Str('wsgi.url_scheme', lineno=450, col_offset=19), Str('wsgi.input', lineno=450, col_offset=38), Str('wsgi.errors', lineno=450, col_offset=52)], Load(), lineno=450, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=12), 'assertIn', Load(), lineno=451, col_offset=12), [Name('key', Load(), lineno=451, col_offset=26), Attribute(Name('h', Load(), lineno=451, col_offset=31), 'environ', Load(), lineno=451, col_offset=31)], [], None, None, lineno=451, col_offset=12), lineno=451, col_offset=12)], [], lineno=450, col_offset=8)], [], lineno=447, col_offset=4), FunctionDef('testScheme', arguments([Name('self', Param(), lineno=453, col_offset=19)], None, None, []), [Assign([Name('h', Store(), lineno=454, col_offset=8)], Call(Name('TestHandler', Load(), lineno=454, col_offset=10), [], [keyword('HTTPS', Str('on', lineno=454, col_offset=28))], None, None, lineno=454, col_offset=10), lineno=454, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=454, col_offset=35), 'setup_environ', Load(), lineno=454, col_offset=35), [], [], None, None, lineno=454, col_offset=35), lineno=454, col_offset=35), Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=8), 'assertEqual', Load(), lineno=455, col_offset=8), [Subscript(Attribute(Name('h', Load(), lineno=455, col_offset=25), 'environ', Load(), lineno=455, col_offset=25), Index(Str('wsgi.url_scheme', lineno=455, col_offset=35)), Load(), lineno=455, col_offset=25), Str('https', lineno=455, col_offset=54)], [], None, None, lineno=455, col_offset=8), lineno=455, col_offset=8), Assign([Name('h', Store(), lineno=456, col_offset=8)], Call(Name('TestHandler', Load(), lineno=456, col_offset=10), [], [], None, None, lineno=456, col_offset=10), lineno=456, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=456, col_offset=25), 'setup_environ', Load(), lineno=456, col_offset=25), [], [], None, None, lineno=456, col_offset=25), lineno=456, col_offset=25), Expr(Call(Attribute(Name('self', Load(), lineno=457, col_offset=8), 'assertEqual', Load(), lineno=457, col_offset=8), [Subscript(Attribute(Name('h', Load(), lineno=457, col_offset=25), 'environ', Load(), lineno=457, col_offset=25), Index(Str('wsgi.url_scheme', lineno=457, col_offset=35)), Load(), lineno=457, col_offset=25), Str('http', lineno=457, col_offset=54)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8)], [], lineno=453, col_offset=4), FunctionDef('testAbstractMethods', arguments([Name('self', Param(), lineno=460, col_offset=28)], None, None, []), [Assign([Name('h', Store(), lineno=461, col_offset=8)], Call(Name('BaseHandler', Load(), lineno=461, col_offset=12), [], [], None, None, lineno=461, col_offset=12), lineno=461, col_offset=8), For(Name('name', Store(), lineno=462, col_offset=12), List([Str('_flush', lineno=463, col_offset=12), Str('get_stdin', lineno=463, col_offset=21), Str('get_stderr', lineno=463, col_offset=33), Str('add_cgi_vars', lineno=463, col_offset=46)], Load(), lineno=462, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=465, col_offset=12), 'assertRaises', Load(), lineno=465, col_offset=12), [Name('NotImplementedError', Load(), lineno=465, col_offset=30), Call(Name('getattr', Load(), lineno=465, col_offset=51), [Name('h', Load(), lineno=465, col_offset=59), Name('name', Load(), lineno=465, col_offset=61)], [], None, None, lineno=465, col_offset=51)], [], None, None, lineno=465, col_offset=12), lineno=465, col_offset=12)], [], lineno=462, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=466, col_offset=8), 'assertRaises', Load(), lineno=466, col_offset=8), [Name('NotImplementedError', Load(), lineno=466, col_offset=26), Attribute(Name('h', Load(), lineno=466, col_offset=47), '_write', Load(), lineno=466, col_offset=47), Str('test', lineno=466, col_offset=57)], [], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8)], [], lineno=460, col_offset=4), FunctionDef('testContentLength', arguments([Name('self', Param(), lineno=469, col_offset=26)], None, None, []), [FunctionDef('trivial_app1', arguments([Name('e', Param(), lineno=472, col_offset=25), Name('s', Param(), lineno=472, col_offset=27)], None, None, []), [Expr(Call(Name('s', Load(), lineno=473, col_offset=12), [Str('200 OK', lineno=473, col_offset=14), List([], Load(), lineno=473, col_offset=23)], [], None, None, lineno=473, col_offset=12), lineno=473, col_offset=12), Return(List([Subscript(Name('e', Load(), lineno=474, col_offset=20), Index(Str('wsgi.url_scheme', lineno=474, col_offset=22)), Load(), lineno=474, col_offset=20)], Load(), lineno=474, col_offset=19), lineno=474, col_offset=12)], [], lineno=472, col_offset=8), FunctionDef('trivial_app2', arguments([Name('e', Param(), lineno=476, col_offset=25), Name('s', Param(), lineno=476, col_offset=27)], None, None, []), [Expr(Call(Call(Name('s', Load(), lineno=477, col_offset=12), [Str('200 OK', lineno=477, col_offset=14), List([], Load(), lineno=477, col_offset=23)], [], None, None, lineno=477, col_offset=12), [Subscript(Name('e', Load(), lineno=477, col_offset=27), Index(Str('wsgi.url_scheme', lineno=477, col_offset=29)), Load(), lineno=477, col_offset=27)], [], None, None, lineno=477, col_offset=12), lineno=477, col_offset=12), Return(List([], Load(), lineno=478, col_offset=19), lineno=478, col_offset=12)], [], lineno=476, col_offset=8), Assign([Name('h', Store(), lineno=480, col_offset=8)], Call(Name('TestHandler', Load(), lineno=480, col_offset=12), [], [], None, None, lineno=480, col_offset=12), lineno=480, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=481, col_offset=8), 'run', Load(), lineno=481, col_offset=8), [Name('trivial_app1', Load(), lineno=481, col_offset=14)], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=482, col_offset=8), 'assertEqual', Load(), lineno=482, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=482, col_offset=25), 'stdout', Load(), lineno=482, col_offset=25), 'getvalue', Load(), lineno=482, col_offset=25), [], [], None, None, lineno=482, col_offset=25), Str('Status: 200 OK\r\nContent-Length: 4\r\n\r\nhttp', lineno=483, col_offset=12)], [], None, None, lineno=482, col_offset=8), lineno=482, col_offset=8), Assign([Name('h', Store(), lineno=488, col_offset=8)], Call(Name('TestHandler', Load(), lineno=488, col_offset=12), [], [], None, None, lineno=488, col_offset=12), lineno=488, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=489, col_offset=8), 'run', Load(), lineno=489, col_offset=8), [Name('trivial_app2', Load(), lineno=489, col_offset=14)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'assertEqual', Load(), lineno=490, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=490, col_offset=25), 'stdout', Load(), lineno=490, col_offset=25), 'getvalue', Load(), lineno=490, col_offset=25), [], [], None, None, lineno=490, col_offset=25), Str('Status: 200 OK\r\n\r\nhttp', lineno=491, col_offset=12)], [], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8)], [], lineno=469, col_offset=4), FunctionDef('testBasicErrorOutput', arguments([Name('self', Param(), lineno=501, col_offset=29)], None, None, []), [FunctionDef('non_error_app', arguments([Name('e', Param(), lineno=503, col_offset=26), Name('s', Param(), lineno=503, col_offset=28)], None, None, []), [Expr(Call(Name('s', Load(), lineno=504, col_offset=12), [Str('200 OK', lineno=504, col_offset=14), List([], Load(), lineno=504, col_offset=23)], [], None, None, lineno=504, col_offset=12), lineno=504, col_offset=12), Return(List([], Load(), lineno=505, col_offset=19), lineno=505, col_offset=12)], [], lineno=503, col_offset=8), FunctionDef('error_app', arguments([Name('e', Param(), lineno=507, col_offset=22), Name('s', Param(), lineno=507, col_offset=24)], None, None, []), [Raise(Call(Name('AssertionError', Load(), lineno=508, col_offset=18), [Str('This should be caught by handler', lineno=508, col_offset=33)], [], None, None, lineno=508, col_offset=18), None, None, lineno=508, col_offset=12)], [], lineno=507, col_offset=8), Assign([Name('h', Store(), lineno=510, col_offset=8)], Call(Name('ErrorHandler', Load(), lineno=510, col_offset=12), [], [], None, None, lineno=510, col_offset=12), lineno=510, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=511, col_offset=8), 'run', Load(), lineno=511, col_offset=8), [Name('non_error_app', Load(), lineno=511, col_offset=14)], [], None, None, lineno=511, col_offset=8), lineno=511, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=8), 'assertEqual', Load(), lineno=512, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=512, col_offset=25), 'stdout', Load(), lineno=512, col_offset=25), 'getvalue', Load(), lineno=512, col_offset=25), [], [], None, None, lineno=512, col_offset=25), Str('Status: 200 OK\r\nContent-Length: 0\r\n\r\n', lineno=513, col_offset=12)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertEqual', Load(), lineno=516, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=516, col_offset=25), 'stderr', Load(), lineno=516, col_offset=25), 'getvalue', Load(), lineno=516, col_offset=25), [], [], None, None, lineno=516, col_offset=25), Str('', lineno=516, col_offset=45)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), Assign([Name('h', Store(), lineno=518, col_offset=8)], Call(Name('ErrorHandler', Load(), lineno=518, col_offset=12), [], [], None, None, lineno=518, col_offset=12), lineno=518, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=519, col_offset=8), 'run', Load(), lineno=519, col_offset=8), [Name('error_app', Load(), lineno=519, col_offset=14)], [], None, None, lineno=519, col_offset=8), lineno=519, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=8), 'assertEqual', Load(), lineno=520, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=520, col_offset=25), 'stdout', Load(), lineno=520, col_offset=25), 'getvalue', Load(), lineno=520, col_offset=25), [], [], None, None, lineno=520, col_offset=25), BinOp(Str('Status: %s\r\nContent-Type: text/plain\r\nContent-Length: %d\r\n\r\n%s', lineno=521, col_offset=12), Mod(), Tuple([Attribute(Name('h', Load(), lineno=524, col_offset=24), 'error_status', Load(), lineno=524, col_offset=24), Call(Name('len', Load(), lineno=524, col_offset=39), [Attribute(Name('h', Load(), lineno=524, col_offset=43), 'error_body', Load(), lineno=524, col_offset=43)], [], None, None, lineno=524, col_offset=39), Attribute(Name('h', Load(), lineno=524, col_offset=57), 'error_body', Load(), lineno=524, col_offset=57)], Load(), lineno=524, col_offset=24), lineno=521, col_offset=12)], [], None, None, lineno=520, col_offset=8), lineno=520, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=8), 'assertNotEqual', Load(), lineno=526, col_offset=8), [Call(Attribute(Call(Attribute(Attribute(Name('h', Load(), lineno=526, col_offset=28), 'stderr', Load(), lineno=526, col_offset=28), 'getvalue', Load(), lineno=526, col_offset=28), [], [], None, None, lineno=526, col_offset=28), 'find', Load(), lineno=526, col_offset=28), [Str('AssertionError', lineno=526, col_offset=53)], [], None, None, lineno=526, col_offset=28), Num(-1, lineno=526, col_offset=73)], [], None, None, lineno=526, col_offset=8), lineno=526, col_offset=8)], [], lineno=501, col_offset=4), FunctionDef('testErrorAfterOutput', arguments([Name('self', Param(), lineno=528, col_offset=29)], None, None, []), [Assign([Name('MSG', Store(), lineno=529, col_offset=8)], Str('Some output has been sent', lineno=529, col_offset=14), lineno=529, col_offset=8), FunctionDef('error_app', arguments([Name('e', Param(), lineno=530, col_offset=22), Name('s', Param(), lineno=530, col_offset=24)], None, None, []), [Expr(Call(Call(Name('s', Load(), lineno=531, col_offset=12), [Str('200 OK', lineno=531, col_offset=14), List([], Load(), lineno=531, col_offset=23)], [], None, None, lineno=531, col_offset=12), [Name('MSG', Load(), lineno=531, col_offset=27)], [], None, None, lineno=531, col_offset=12), lineno=531, col_offset=12), Raise(Call(Name('AssertionError', Load(), lineno=532, col_offset=18), [Str('This should be caught by handler', lineno=532, col_offset=33)], [], None, None, lineno=532, col_offset=18), None, None, lineno=532, col_offset=12)], [], lineno=530, col_offset=8), Assign([Name('h', Store(), lineno=534, col_offset=8)], Call(Name('ErrorHandler', Load(), lineno=534, col_offset=12), [], [], None, None, lineno=534, col_offset=12), lineno=534, col_offset=8), Expr(Call(Attribute(Name('h', Load(), lineno=535, col_offset=8), 'run', Load(), lineno=535, col_offset=8), [Name('error_app', Load(), lineno=535, col_offset=14)], [], None, None, lineno=535, col_offset=8), lineno=535, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=536, col_offset=8), 'assertEqual', Load(), lineno=536, col_offset=8), [Call(Attribute(Attribute(Name('h', Load(), lineno=536, col_offset=25), 'stdout', Load(), lineno=536, col_offset=25), 'getvalue', Load(), lineno=536, col_offset=25), [], [], None, None, lineno=536, col_offset=25), BinOp(Str('Status: 200 OK\r\n\r\n', lineno=537, col_offset=12), Add(), Name('MSG', Load(), lineno=538, col_offset=19), lineno=537, col_offset=12)], [], None, None, lineno=536, col_offset=8), lineno=536, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=539, col_offset=8), 'assertNotEqual', Load(), lineno=539, col_offset=8), [Call(Attribute(Call(Attribute(Attribute(Name('h', Load(), lineno=539, col_offset=28), 'stderr', Load(), lineno=539, col_offset=28), 'getvalue', Load(), lineno=539, col_offset=28), [], [], None, None, lineno=539, col_offset=28), 'find', Load(), lineno=539, col_offset=28), [Str('AssertionError', lineno=539, col_offset=53)], [], None, None, lineno=539, col_offset=28), Num(-1, lineno=539, col_offset=73)], [], None, None, lineno=539, col_offset=8), lineno=539, col_offset=8)], [], lineno=528, col_offset=4), FunctionDef('testHeaderFormats', arguments([Name('self', Param(), lineno=542, col_offset=26)], None, None, []), [FunctionDef('non_error_app', arguments([Name('e', Param(), lineno=544, col_offset=26), Name('s', Param(), lineno=544, col_offset=28)], None, None, []), [Expr(Call(Name('s', Load(), lineno=545, col_offset=12), [Str('200 OK', lineno=545, col_offset=14), List([], Load(), lineno=545, col_offset=23)], [], None, None, lineno=545, col_offset=12), lineno=545, col_offset=12), Return(List([], Load(), lineno=546, col_offset=19), lineno=546, col_offset=12)], [], lineno=544, col_offset=8), Assign([Name('stdpat', Store(), lineno=548, col_offset=8)], Str('HTTP/%s 200 OK\\r\\nDate: \\w{3}, [ 0123]\\d \\w{3} \\d{4} \\d\\d:\\d\\d:\\d\\d GMT\\r\\n%sContent-Length: 0\\r\\n\\r\\n', lineno=549, col_offset=12), lineno=548, col_offset=8), Assign([Name('shortpat', Store(), lineno=553, col_offset=8)], Str('Status: 200 OK\r\nContent-Length: 0\r\n\r\n', lineno=554, col_offset=12), lineno=553, col_offset=8), For(Name('ssw', Store(), lineno=557, col_offset=12), Tuple([Str('FooBar/1.0', lineno=557, col_offset=19), Name('None', Load(), lineno=557, col_offset=33)], Load(), lineno=557, col_offset=19), [Assign([Name('sw', Store(), lineno=558, col_offset=12)], BoolOp(Or(), [BoolOp(And(), [Name('ssw', Load(), lineno=558, col_offset=17), BinOp(Str('Server: %s\r\n', lineno=558, col_offset=25), Mod(), Name('ssw', Load(), lineno=558, col_offset=44), lineno=558, col_offset=25)], lineno=558, col_offset=17), Str('', lineno=558, col_offset=51)], lineno=558, col_offset=17), lineno=558, col_offset=12), For(Name('version', Store(), lineno=560, col_offset=16), Tuple([Str('1.0', lineno=560, col_offset=27), Str('1.1', lineno=560, col_offset=34)], Load(), lineno=560, col_offset=27), [For(Name('proto', Store(), lineno=561, col_offset=20), Tuple([Str('HTTP/0.9', lineno=561, col_offset=29), Str('HTTP/1.0', lineno=561, col_offset=41), Str('HTTP/1.1', lineno=561, col_offset=53)], Load(), lineno=561, col_offset=29), [Assign([Name('h', Store(), lineno=563, col_offset=20)], Call(Name('TestHandler', Load(), lineno=563, col_offset=24), [], [keyword('SERVER_PROTOCOL', Name('proto', Load(), lineno=563, col_offset=52))], None, None, lineno=563, col_offset=24), lineno=563, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=564, col_offset=20), 'origin_server', Store(), lineno=564, col_offset=20)], Name('False', Load(), lineno=564, col_offset=38), lineno=564, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=565, col_offset=20), 'http_version', Store(), lineno=565, col_offset=20)], Name('version', Load(), lineno=565, col_offset=37), lineno=565, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=566, col_offset=20), 'server_software', Store(), lineno=566, col_offset=20)], Name('ssw', Load(), lineno=566, col_offset=40), lineno=566, col_offset=20), Expr(Call(Attribute(Name('h', Load(), lineno=567, col_offset=20), 'run', Load(), lineno=567, col_offset=20), [Name('non_error_app', Load(), lineno=567, col_offset=26)], [], None, None, lineno=567, col_offset=20), lineno=567, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=568, col_offset=20), 'assertEqual', Load(), lineno=568, col_offset=20), [Name('shortpat', Load(), lineno=568, col_offset=37), Call(Attribute(Attribute(Name('h', Load(), lineno=568, col_offset=46), 'stdout', Load(), lineno=568, col_offset=46), 'getvalue', Load(), lineno=568, col_offset=46), [], [], None, None, lineno=568, col_offset=46)], [], None, None, lineno=568, col_offset=20), lineno=568, col_offset=20), Assign([Name('h', Store(), lineno=570, col_offset=20)], Call(Name('TestHandler', Load(), lineno=570, col_offset=24), [], [keyword('SERVER_PROTOCOL', Name('proto', Load(), lineno=570, col_offset=52))], None, None, lineno=570, col_offset=24), lineno=570, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=571, col_offset=20), 'origin_server', Store(), lineno=571, col_offset=20)], Name('True', Load(), lineno=571, col_offset=38), lineno=571, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=572, col_offset=20), 'http_version', Store(), lineno=572, col_offset=20)], Name('version', Load(), lineno=572, col_offset=37), lineno=572, col_offset=20), Assign([Attribute(Name('h', Load(), lineno=573, col_offset=20), 'server_software', Store(), lineno=573, col_offset=20)], Name('ssw', Load(), lineno=573, col_offset=40), lineno=573, col_offset=20), Expr(Call(Attribute(Name('h', Load(), lineno=574, col_offset=20), 'run', Load(), lineno=574, col_offset=20), [Name('non_error_app', Load(), lineno=574, col_offset=26)], [], None, None, lineno=574, col_offset=20), lineno=574, col_offset=20), If(Compare(Name('proto', Load(), lineno=575, col_offset=23), [Eq()], [Str('HTTP/0.9', lineno=575, col_offset=30)], lineno=575, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=576, col_offset=24), 'assertEqual', Load(), lineno=576, col_offset=24), [Call(Attribute(Attribute(Name('h', Load(), lineno=576, col_offset=41), 'stdout', Load(), lineno=576, col_offset=41), 'getvalue', Load(), lineno=576, col_offset=41), [], [], None, None, lineno=576, col_offset=41), Str('', lineno=576, col_offset=61)], [], None, None, lineno=576, col_offset=24), lineno=576, col_offset=24)], [Expr(Call(Attribute(Name('self', Load(), lineno=578, col_offset=24), 'assertTrue', Load(), lineno=578, col_offset=24), [Call(Attribute(Name('re', Load(), lineno=579, col_offset=28), 'match', Load(), lineno=579, col_offset=28), [BinOp(Name('stdpat', Load(), lineno=579, col_offset=37), Mod(), Tuple([Name('version', Load(), lineno=579, col_offset=45), Name('sw', Load(), lineno=579, col_offset=53)], Load(), lineno=579, col_offset=45), lineno=579, col_offset=37), Call(Attribute(Attribute(Name('h', Load(), lineno=579, col_offset=58), 'stdout', Load(), lineno=579, col_offset=58), 'getvalue', Load(), lineno=579, col_offset=58), [], [], None, None, lineno=579, col_offset=58)], [], None, None, lineno=579, col_offset=28), Tuple([BinOp(Name('stdpat', Load(), lineno=580, col_offset=29), Mod(), Tuple([Name('version', Load(), lineno=580, col_offset=37), Name('sw', Load(), lineno=580, col_offset=45)], Load(), lineno=580, col_offset=37), lineno=580, col_offset=29), Call(Attribute(Attribute(Name('h', Load(), lineno=580, col_offset=50), 'stdout', Load(), lineno=580, col_offset=50), 'getvalue', Load(), lineno=580, col_offset=50), [], [], None, None, lineno=580, col_offset=50)], Load(), lineno=580, col_offset=29)], [], None, None, lineno=578, col_offset=24), lineno=578, col_offset=24)], lineno=575, col_offset=20)], [], lineno=561, col_offset=16)], [], lineno=560, col_offset=12)], [], lineno=557, col_offset=8)], [], lineno=542, col_offset=4)], [], lineno=419, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=586, col_offset=4), 'run_unittest', Load(), lineno=586, col_offset=4), [Name('__name__', Load(), lineno=586, col_offset=30)], [], None, None, lineno=586, col_offset=4), lineno=586, col_offset=4)], [], lineno=585, col_offset=0), If(Compare(Name('__name__', Load(), lineno=588, col_offset=3), [Eq()], [Str('__main__', lineno=588, col_offset=15)], lineno=588, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=589, col_offset=4), [], [], None, None, lineno=589, col_offset=4), lineno=589, col_offset=4)], [], lineno=588, col_offset=0)])
