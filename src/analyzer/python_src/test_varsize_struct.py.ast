Module([ImportFrom('ctypes', [alias('*', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ClassDef('VarSizeTest', [Attribute(Name('unittest', Load(), lineno=4, col_offset=18), 'TestCase', Load(), lineno=4, col_offset=18)], [FunctionDef('test_resize', arguments([Name('self', Param(), lineno=5, col_offset=20)], None, None, []), [ClassDef('X', [Name('Structure', Load(), lineno=6, col_offset=16)], [Assign([Name('_fields_', Store(), lineno=7, col_offset=12)], List([Tuple([Str('item', lineno=7, col_offset=25), Name('c_int', Load(), lineno=7, col_offset=33)], Load(), lineno=7, col_offset=25), Tuple([Str('array', lineno=8, col_offset=25), BinOp(Name('c_int', Load(), lineno=8, col_offset=34), Mult(), Num(1, lineno=8, col_offset=42), lineno=8, col_offset=34)], Load(), lineno=8, col_offset=25)], Load(), lineno=7, col_offset=23), lineno=7, col_offset=12)], [], lineno=6, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertEqual', Load(), lineno=10, col_offset=8), [Call(Name('sizeof', Load(), lineno=10, col_offset=25), [Name('X', Load(), lineno=10, col_offset=32)], [], None, None, lineno=10, col_offset=25), BinOp(Call(Name('sizeof', Load(), lineno=10, col_offset=36), [Name('c_int', Load(), lineno=10, col_offset=43)], [], None, None, lineno=10, col_offset=36), Mult(), Num(2, lineno=10, col_offset=52), lineno=10, col_offset=36)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Assign([Name('x', Store(), lineno=11, col_offset=8)], Call(Name('X', Load(), lineno=11, col_offset=12), [], [], None, None, lineno=11, col_offset=12), lineno=11, col_offset=8), Assign([Attribute(Name('x', Load(), lineno=12, col_offset=8), 'item', Store(), lineno=12, col_offset=8)], Num(42, lineno=12, col_offset=17), lineno=12, col_offset=8), Assign([Subscript(Attribute(Name('x', Load(), lineno=13, col_offset=8), 'array', Load(), lineno=13, col_offset=8), Index(Num(0, lineno=13, col_offset=16)), Store(), lineno=13, col_offset=8)], Num(100, lineno=13, col_offset=21), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertEqual', Load(), lineno=14, col_offset=8), [Call(Name('sizeof', Load(), lineno=14, col_offset=25), [Name('x', Load(), lineno=14, col_offset=32)], [], None, None, lineno=14, col_offset=25), BinOp(Call(Name('sizeof', Load(), lineno=14, col_offset=36), [Name('c_int', Load(), lineno=14, col_offset=43)], [], None, None, lineno=14, col_offset=36), Mult(), Num(2, lineno=14, col_offset=52), lineno=14, col_offset=36)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8), Assign([Name('new_size', Store(), lineno=17, col_offset=8)], BinOp(Call(Name('sizeof', Load(), lineno=17, col_offset=19), [Name('X', Load(), lineno=17, col_offset=26)], [], None, None, lineno=17, col_offset=19), Add(), BinOp(Call(Name('sizeof', Load(), lineno=17, col_offset=31), [Name('c_int', Load(), lineno=17, col_offset=38)], [], None, None, lineno=17, col_offset=31), Mult(), Num(1, lineno=17, col_offset=47), lineno=17, col_offset=31), lineno=17, col_offset=19), lineno=17, col_offset=8), Expr(Call(Name('resize', Load(), lineno=18, col_offset=8), [Name('x', Load(), lineno=18, col_offset=15), Name('new_size', Load(), lineno=18, col_offset=18)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertEqual', Load(), lineno=19, col_offset=8), [Call(Name('sizeof', Load(), lineno=19, col_offset=25), [Name('x', Load(), lineno=19, col_offset=32)], [], None, None, lineno=19, col_offset=25), Name('new_size', Load(), lineno=19, col_offset=36)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Tuple([Attribute(Name('x', Load(), lineno=20, col_offset=26), 'item', Load(), lineno=20, col_offset=26), Subscript(Attribute(Name('x', Load(), lineno=20, col_offset=34), 'array', Load(), lineno=20, col_offset=34), Index(Num(0, lineno=20, col_offset=42)), Load(), lineno=20, col_offset=34)], Load(), lineno=20, col_offset=26), Tuple([Num(42, lineno=20, col_offset=48), Num(100, lineno=20, col_offset=52)], Load(), lineno=20, col_offset=48)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Assign([Name('new_size', Store(), lineno=23, col_offset=8)], BinOp(Call(Name('sizeof', Load(), lineno=23, col_offset=19), [Name('X', Load(), lineno=23, col_offset=26)], [], None, None, lineno=23, col_offset=19), Add(), BinOp(Call(Name('sizeof', Load(), lineno=23, col_offset=31), [Name('c_int', Load(), lineno=23, col_offset=38)], [], None, None, lineno=23, col_offset=31), Mult(), Num(9, lineno=23, col_offset=47), lineno=23, col_offset=31), lineno=23, col_offset=19), lineno=23, col_offset=8), Expr(Call(Name('resize', Load(), lineno=24, col_offset=8), [Name('x', Load(), lineno=24, col_offset=15), Name('new_size', Load(), lineno=24, col_offset=18)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertEqual', Load(), lineno=25, col_offset=8), [Call(Name('sizeof', Load(), lineno=25, col_offset=25), [Name('x', Load(), lineno=25, col_offset=32)], [], None, None, lineno=25, col_offset=25), Name('new_size', Load(), lineno=25, col_offset=36)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Tuple([Attribute(Name('x', Load(), lineno=26, col_offset=26), 'item', Load(), lineno=26, col_offset=26), Subscript(Attribute(Name('x', Load(), lineno=26, col_offset=34), 'array', Load(), lineno=26, col_offset=34), Index(Num(0, lineno=26, col_offset=42)), Load(), lineno=26, col_offset=34)], Load(), lineno=26, col_offset=26), Tuple([Num(42, lineno=26, col_offset=48), Num(100, lineno=26, col_offset=52)], Load(), lineno=26, col_offset=48)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Assign([Name('new_size', Store(), lineno=29, col_offset=8)], BinOp(Call(Name('sizeof', Load(), lineno=29, col_offset=19), [Name('X', Load(), lineno=29, col_offset=26)], [], None, None, lineno=29, col_offset=19), Add(), BinOp(Call(Name('sizeof', Load(), lineno=29, col_offset=31), [Name('c_int', Load(), lineno=29, col_offset=38)], [], None, None, lineno=29, col_offset=31), Mult(), Num(1, lineno=29, col_offset=47), lineno=29, col_offset=31), lineno=29, col_offset=19), lineno=29, col_offset=8), Expr(Call(Name('resize', Load(), lineno=30, col_offset=8), [Name('x', Load(), lineno=30, col_offset=15), Name('new_size', Load(), lineno=30, col_offset=18)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertEqual', Load(), lineno=31, col_offset=8), [Call(Name('sizeof', Load(), lineno=31, col_offset=25), [Name('x', Load(), lineno=31, col_offset=32)], [], None, None, lineno=31, col_offset=25), Name('new_size', Load(), lineno=31, col_offset=36)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Tuple([Attribute(Name('x', Load(), lineno=32, col_offset=26), 'item', Load(), lineno=32, col_offset=26), Subscript(Attribute(Name('x', Load(), lineno=32, col_offset=34), 'array', Load(), lineno=32, col_offset=34), Index(Num(0, lineno=32, col_offset=42)), Load(), lineno=32, col_offset=34)], Load(), lineno=32, col_offset=26), Tuple([Num(42, lineno=32, col_offset=48), Num(100, lineno=32, col_offset=52)], Load(), lineno=32, col_offset=48)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8)], [], lineno=5, col_offset=4), FunctionDef('test_array_invalid_length', arguments([Name('self', Param(), lineno=34, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertRaises', Load(), lineno=36, col_offset=8), [Name('ValueError', Load(), lineno=36, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Name('c_int', Load(), lineno=36, col_offset=46), Mult(), Num(-1, lineno=36, col_offset=55), lineno=36, col_offset=46), lineno=36, col_offset=38)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertRaises', Load(), lineno=37, col_offset=8), [Name('ValueError', Load(), lineno=37, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Name('c_int', Load(), lineno=37, col_offset=46), Mult(), Num(-3, lineno=37, col_offset=55), lineno=37, col_offset=46), lineno=37, col_offset=38)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8)], [], lineno=34, col_offset=4), FunctionDef('test_zerosized_array', arguments([Name('self', Param(), lineno=39, col_offset=29)], None, None, []), [Assign([Name('array', Store(), lineno=40, col_offset=8)], Call(BinOp(Name('c_int', Load(), lineno=40, col_offset=17), Mult(), Num(0, lineno=40, col_offset=25), lineno=40, col_offset=17), [], [], None, None, lineno=40, col_offset=17), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertRaises', Load(), lineno=42, col_offset=8), [Name('IndexError', Load(), lineno=42, col_offset=26), Attribute(Name('array', Load(), lineno=42, col_offset=38), '__setitem__', Load(), lineno=42, col_offset=38), Num(0, lineno=42, col_offset=57), Name('None', Load(), lineno=42, col_offset=60)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=8), 'assertRaises', Load(), lineno=43, col_offset=8), [Name('IndexError', Load(), lineno=43, col_offset=26), Attribute(Name('array', Load(), lineno=43, col_offset=38), '__getitem__', Load(), lineno=43, col_offset=38), Num(0, lineno=43, col_offset=57)], [], None, None, lineno=43, col_offset=8), lineno=43, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertRaises', Load(), lineno=44, col_offset=8), [Name('IndexError', Load(), lineno=44, col_offset=26), Attribute(Name('array', Load(), lineno=44, col_offset=38), '__setitem__', Load(), lineno=44, col_offset=38), Num(1, lineno=44, col_offset=57), Name('None', Load(), lineno=44, col_offset=60)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertRaises', Load(), lineno=45, col_offset=8), [Name('IndexError', Load(), lineno=45, col_offset=26), Attribute(Name('array', Load(), lineno=45, col_offset=38), '__getitem__', Load(), lineno=45, col_offset=38), Num(1, lineno=45, col_offset=57)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertRaises', Load(), lineno=46, col_offset=8), [Name('IndexError', Load(), lineno=46, col_offset=26), Attribute(Name('array', Load(), lineno=46, col_offset=38), '__setitem__', Load(), lineno=46, col_offset=38), Num(-1, lineno=46, col_offset=58), Name('None', Load(), lineno=46, col_offset=61)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'assertRaises', Load(), lineno=47, col_offset=8), [Name('IndexError', Load(), lineno=47, col_offset=26), Attribute(Name('array', Load(), lineno=47, col_offset=38), '__getitem__', Load(), lineno=47, col_offset=38), Num(-1, lineno=47, col_offset=58)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=39, col_offset=4)], [], lineno=4, col_offset=0), If(Compare(Name('__name__', Load(), lineno=49, col_offset=3), [Eq()], [Str('__main__', lineno=49, col_offset=15)], lineno=49, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=50, col_offset=4), 'main', Load(), lineno=50, col_offset=4), [], [], None, None, lineno=50, col_offset=4), lineno=50, col_offset=4)], [], lineno=49, col_offset=0)])
