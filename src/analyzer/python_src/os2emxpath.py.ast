Module([Expr(Str('Common pathname manipulations, OS/2 EMX version.\n\nInstead of importing this module directly, import os and refer to this\nmodule as os.path.\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('os', None)], lineno=8, col_offset=0), Import([alias('stat', None)], lineno=9, col_offset=0), ImportFrom('genericpath', [alias('*', None)], 0, lineno=10, col_offset=0), ImportFrom('ntpath', [alias('expanduser', None), alias('expandvars', None), alias('isabs', None), alias('islink', None), alias('splitdrive', None), alias('splitext', None), alias('split', None), alias('walk', None)], 0, lineno=11, col_offset=0), Assign([Name('__all__', Store(), lineno=14, col_offset=0)], List([Str('normcase', lineno=14, col_offset=11), Str('isabs', lineno=14, col_offset=22), Str('join', lineno=14, col_offset=30), Str('splitdrive', lineno=14, col_offset=37), Str('split', lineno=14, col_offset=50), Str('splitext', lineno=14, col_offset=58), Str('basename', lineno=15, col_offset=11), Str('dirname', lineno=15, col_offset=22), Str('commonprefix', lineno=15, col_offset=32), Str('getsize', lineno=15, col_offset=47), Str('getmtime', lineno=15, col_offset=57), Str('getatime', lineno=16, col_offset=11), Str('getctime', lineno=16, col_offset=22), Str('islink', lineno=16, col_offset=34), Str('exists', lineno=16, col_offset=43), Str('lexists', lineno=16, col_offset=52), Str('isdir', lineno=16, col_offset=62), Str('isfile', lineno=16, col_offset=70), Str('ismount', lineno=17, col_offset=11), Str('walk', lineno=17, col_offset=21), Str('expanduser', lineno=17, col_offset=28), Str('expandvars', lineno=17, col_offset=41), Str('normpath', lineno=17, col_offset=54), Str('abspath', lineno=17, col_offset=65), Str('splitunc', lineno=18, col_offset=11), Str('curdir', lineno=18, col_offset=22), Str('pardir', lineno=18, col_offset=31), Str('sep', lineno=18, col_offset=40), Str('pathsep', lineno=18, col_offset=46), Str('defpath', lineno=18, col_offset=56), Str('altsep', lineno=18, col_offset=66), Str('extsep', lineno=19, col_offset=11), Str('devnull', lineno=19, col_offset=20), Str('realpath', lineno=19, col_offset=30), Str('supports_unicode_filenames', lineno=19, col_offset=41)], Load(), lineno=14, col_offset=10), lineno=14, col_offset=0), Assign([Name('curdir', Store(), lineno=22, col_offset=0)], Str('.', lineno=22, col_offset=9), lineno=22, col_offset=0), Assign([Name('pardir', Store(), lineno=23, col_offset=0)], Str('..', lineno=23, col_offset=9), lineno=23, col_offset=0), Assign([Name('extsep', Store(), lineno=24, col_offset=0)], Str('.', lineno=24, col_offset=9), lineno=24, col_offset=0), Assign([Name('sep', Store(), lineno=25, col_offset=0)], Str('/', lineno=25, col_offset=6), lineno=25, col_offset=0), Assign([Name('altsep', Store(), lineno=26, col_offset=0)], Str('\\', lineno=26, col_offset=9), lineno=26, col_offset=0), Assign([Name('pathsep', Store(), lineno=27, col_offset=0)], Str(';', lineno=27, col_offset=10), lineno=27, col_offset=0), Assign([Name('defpath', Store(), lineno=28, col_offset=0)], Str('.;C:\\bin', lineno=28, col_offset=10), lineno=28, col_offset=0), Assign([Name('devnull', Store(), lineno=29, col_offset=0)], Str('nul', lineno=29, col_offset=10), lineno=29, col_offset=0), FunctionDef('normcase', arguments([Name('s', Param(), lineno=35, col_offset=13)], None, None, []), [Expr(Str('Normalize case of pathname.\n\n    Makes all characters lowercase and all altseps into seps.', lineno=38, col_offset=-1), lineno=38, col_offset=-1), Return(Call(Attribute(Call(Attribute(Name('s', Load(), lineno=39, col_offset=11), 'replace', Load(), lineno=39, col_offset=11), [Str('\\', lineno=39, col_offset=21), Str('/', lineno=39, col_offset=27)], [], None, None, lineno=39, col_offset=11), 'lower', Load(), lineno=39, col_offset=11), [], [], None, None, lineno=39, col_offset=11), lineno=39, col_offset=4)], [], lineno=35, col_offset=0), FunctionDef('join', arguments([Name('a', Param(), lineno=44, col_offset=9)], 'p', None, []), [Expr(Str('Join two or more pathname components, inserting sep as needed', lineno=45, col_offset=4), lineno=45, col_offset=4), Assign([Name('path', Store(), lineno=46, col_offset=4)], Name('a', Load(), lineno=46, col_offset=11), lineno=46, col_offset=4), For(Name('b', Store(), lineno=47, col_offset=8), Name('p', Load(), lineno=47, col_offset=13), [If(Call(Name('isabs', Load(), lineno=48, col_offset=11), [Name('b', Load(), lineno=48, col_offset=17)], [], None, None, lineno=48, col_offset=11), [Assign([Name('path', Store(), lineno=49, col_offset=12)], Name('b', Load(), lineno=49, col_offset=19), lineno=49, col_offset=12)], [If(BoolOp(Or(), [Compare(Name('path', Load(), lineno=50, col_offset=13), [Eq()], [Str('', lineno=50, col_offset=21)], lineno=50, col_offset=13), Compare(Subscript(Name('path', Load(), lineno=50, col_offset=27), Slice(Num(-1, lineno=50, col_offset=33), None, None), Load(), lineno=50, col_offset=27), [In()], [Str('/\\:', lineno=50, col_offset=40)], lineno=50, col_offset=27)], lineno=50, col_offset=13), [Assign([Name('path', Store(), lineno=51, col_offset=12)], BinOp(Name('path', Load(), lineno=51, col_offset=19), Add(), Name('b', Load(), lineno=51, col_offset=26), lineno=51, col_offset=19), lineno=51, col_offset=12)], [Assign([Name('path', Store(), lineno=53, col_offset=12)], BinOp(BinOp(Name('path', Load(), lineno=53, col_offset=19), Add(), Str('/', lineno=53, col_offset=26), lineno=53, col_offset=19), Add(), Name('b', Load(), lineno=53, col_offset=32), lineno=53, col_offset=30), lineno=53, col_offset=12)], lineno=50, col_offset=13)], lineno=48, col_offset=8)], [], lineno=47, col_offset=4), Return(Name('path', Load(), lineno=54, col_offset=11), lineno=54, col_offset=4)], [], lineno=44, col_offset=0), FunctionDef('splitunc', arguments([Name('p', Param(), lineno=58, col_offset=13)], None, None, []), [Expr(Str("Split a pathname into UNC mount point and relative path specifiers.\n\n    Return a 2-tuple (unc, rest); either part may be empty.\n    If unc is not empty, it has the form '//host/mount' (or similar\n    using backslashes).  unc+rest is always the input path.\n    Paths containing drive letters never have an UNC part.\n    ", lineno=65, col_offset=-1), lineno=65, col_offset=-1), If(Compare(Subscript(Name('p', Load(), lineno=66, col_offset=7), Slice(Num(1, lineno=66, col_offset=9), Num(2, lineno=66, col_offset=11), None), Load(), lineno=66, col_offset=7), [Eq()], [Str(':', lineno=66, col_offset=17)], lineno=66, col_offset=7), [Return(Tuple([Str('', lineno=67, col_offset=15), Name('p', Load(), lineno=67, col_offset=19)], Load(), lineno=67, col_offset=15), lineno=67, col_offset=8)], [], lineno=66, col_offset=4), Assign([Name('firstTwo', Store(), lineno=68, col_offset=4)], Subscript(Name('p', Load(), lineno=68, col_offset=15), Slice(Num(0, lineno=68, col_offset=17), Num(2, lineno=68, col_offset=19), None), Load(), lineno=68, col_offset=15), lineno=68, col_offset=4), If(BoolOp(Or(), [Compare(Name('firstTwo', Load(), lineno=69, col_offset=7), [Eq()], [BinOp(Str('/', lineno=69, col_offset=19), Mult(), Num(2, lineno=69, col_offset=25), lineno=69, col_offset=19)], lineno=69, col_offset=7), Compare(Name('firstTwo', Load(), lineno=69, col_offset=30), [Eq()], [BinOp(Str('\\', lineno=69, col_offset=42), Mult(), Num(2, lineno=69, col_offset=49), lineno=69, col_offset=42)], lineno=69, col_offset=30)], lineno=69, col_offset=7), [Assign([Name('normp', Store(), lineno=74, col_offset=8)], Call(Name('normcase', Load(), lineno=74, col_offset=16), [Name('p', Load(), lineno=74, col_offset=25)], [], None, None, lineno=74, col_offset=16), lineno=74, col_offset=8), Assign([Name('index', Store(), lineno=75, col_offset=8)], Call(Attribute(Name('normp', Load(), lineno=75, col_offset=16), 'find', Load(), lineno=75, col_offset=16), [Str('/', lineno=75, col_offset=27), Num(2, lineno=75, col_offset=32)], [], None, None, lineno=75, col_offset=16), lineno=75, col_offset=8), If(Compare(Name('index', Load(), lineno=76, col_offset=11), [Eq()], [Num(-1, lineno=76, col_offset=21)], lineno=76, col_offset=11), [Return(Tuple([Str('', lineno=78, col_offset=20), Name('p', Load(), lineno=78, col_offset=24)], Load(), lineno=78, col_offset=20), lineno=78, col_offset=12)], [], lineno=76, col_offset=8), Assign([Name('index', Store(), lineno=79, col_offset=8)], Call(Attribute(Name('normp', Load(), lineno=79, col_offset=16), 'find', Load(), lineno=79, col_offset=16), [Str('/', lineno=79, col_offset=27), BinOp(Name('index', Load(), lineno=79, col_offset=32), Add(), Num(1, lineno=79, col_offset=40), lineno=79, col_offset=32)], [], None, None, lineno=79, col_offset=16), lineno=79, col_offset=8), If(Compare(Name('index', Load(), lineno=80, col_offset=11), [Eq()], [Num(-1, lineno=80, col_offset=21)], lineno=80, col_offset=11), [Assign([Name('index', Store(), lineno=81, col_offset=12)], Call(Name('len', Load(), lineno=81, col_offset=20), [Name('p', Load(), lineno=81, col_offset=24)], [], None, None, lineno=81, col_offset=20), lineno=81, col_offset=12)], [], lineno=80, col_offset=8), Return(Tuple([Subscript(Name('p', Load(), lineno=82, col_offset=15), Slice(None, Name('index', Load(), lineno=82, col_offset=18), None), Load(), lineno=82, col_offset=15), Subscript(Name('p', Load(), lineno=82, col_offset=26), Slice(Name('index', Load(), lineno=82, col_offset=28), None, None), Load(), lineno=82, col_offset=26)], Load(), lineno=82, col_offset=15), lineno=82, col_offset=8)], [], lineno=69, col_offset=4), Return(Tuple([Str('', lineno=83, col_offset=11), Name('p', Load(), lineno=83, col_offset=15)], Load(), lineno=83, col_offset=11), lineno=83, col_offset=4)], [], lineno=58, col_offset=0), FunctionDef('basename', arguments([Name('p', Param(), lineno=88, col_offset=13)], None, None, []), [Expr(Str('Returns the final component of a pathname', lineno=89, col_offset=4), lineno=89, col_offset=4), Return(Subscript(Call(Name('split', Load(), lineno=90, col_offset=11), [Name('p', Load(), lineno=90, col_offset=17)], [], None, None, lineno=90, col_offset=11), Index(Num(1, lineno=90, col_offset=20)), Load(), lineno=90, col_offset=11), lineno=90, col_offset=4)], [], lineno=88, col_offset=0), FunctionDef('dirname', arguments([Name('p', Param(), lineno=95, col_offset=12)], None, None, []), [Expr(Str('Returns the directory component of a pathname', lineno=96, col_offset=4), lineno=96, col_offset=4), Return(Subscript(Call(Name('split', Load(), lineno=97, col_offset=11), [Name('p', Load(), lineno=97, col_offset=17)], [], None, None, lineno=97, col_offset=11), Index(Num(0, lineno=97, col_offset=20)), Load(), lineno=97, col_offset=11), lineno=97, col_offset=4)], [], lineno=95, col_offset=0), Assign([Name('lexists', Store(), lineno=101, col_offset=0)], Name('exists', Load(), lineno=101, col_offset=10), lineno=101, col_offset=0), FunctionDef('ismount', arguments([Name('path', Param(), lineno=109, col_offset=12)], None, None, []), [Expr(Str('Test whether a path is a mount point (defined as root of drive)', lineno=110, col_offset=4), lineno=110, col_offset=4), Assign([Tuple([Name('unc', Store(), lineno=111, col_offset=4), Name('rest', Store(), lineno=111, col_offset=9)], Store(), lineno=111, col_offset=4)], Call(Name('splitunc', Load(), lineno=111, col_offset=16), [Name('path', Load(), lineno=111, col_offset=25)], [], None, None, lineno=111, col_offset=16), lineno=111, col_offset=4), If(Name('unc', Load(), lineno=112, col_offset=7), [Return(Compare(Name('rest', Load(), lineno=113, col_offset=15), [In()], [Tuple([Str('', lineno=113, col_offset=24), Str('/', lineno=113, col_offset=28), Str('\\', lineno=113, col_offset=33)], Load(), lineno=113, col_offset=24)], lineno=113, col_offset=15), lineno=113, col_offset=8)], [], lineno=112, col_offset=4), Assign([Name('p', Store(), lineno=114, col_offset=4)], Subscript(Call(Name('splitdrive', Load(), lineno=114, col_offset=8), [Name('path', Load(), lineno=114, col_offset=19)], [], None, None, lineno=114, col_offset=8), Index(Num(1, lineno=114, col_offset=25)), Load(), lineno=114, col_offset=8), lineno=114, col_offset=4), Return(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=115, col_offset=11), [Name('p', Load(), lineno=115, col_offset=15)], [], None, None, lineno=115, col_offset=11), [Eq()], [Num(1, lineno=115, col_offset=21)], lineno=115, col_offset=11), Compare(Subscript(Name('p', Load(), lineno=115, col_offset=27), Index(Num(0, lineno=115, col_offset=29)), Load(), lineno=115, col_offset=27), [In()], [Str('/\\', lineno=115, col_offset=35)], lineno=115, col_offset=27)], lineno=115, col_offset=11), lineno=115, col_offset=4)], [], lineno=109, col_offset=0), FunctionDef('normpath', arguments([Name('path', Param(), lineno=120, col_offset=13)], None, None, []), [Expr(Str('Normalize path, eliminating double slashes, etc.', lineno=121, col_offset=4), lineno=121, col_offset=4), Assign([Name('path', Store(), lineno=122, col_offset=4)], Call(Attribute(Name('path', Load(), lineno=122, col_offset=11), 'replace', Load(), lineno=122, col_offset=11), [Str('\\', lineno=122, col_offset=24), Str('/', lineno=122, col_offset=30)], [], None, None, lineno=122, col_offset=11), lineno=122, col_offset=4), Assign([Tuple([Name('prefix', Store(), lineno=123, col_offset=4), Name('path', Store(), lineno=123, col_offset=12)], Store(), lineno=123, col_offset=4)], Call(Name('splitdrive', Load(), lineno=123, col_offset=19), [Name('path', Load(), lineno=123, col_offset=30)], [], None, None, lineno=123, col_offset=19), lineno=123, col_offset=4), While(Compare(Subscript(Name('path', Load(), lineno=124, col_offset=10), Slice(None, Num(1, lineno=124, col_offset=16), None), Load(), lineno=124, col_offset=10), [Eq()], [Str('/', lineno=124, col_offset=22)], lineno=124, col_offset=10), [Assign([Name('prefix', Store(), lineno=125, col_offset=8)], BinOp(Name('prefix', Load(), lineno=125, col_offset=17), Add(), Str('/', lineno=125, col_offset=26), lineno=125, col_offset=17), lineno=125, col_offset=8), Assign([Name('path', Store(), lineno=126, col_offset=8)], Subscript(Name('path', Load(), lineno=126, col_offset=15), Slice(Num(1, lineno=126, col_offset=20), None, None), Load(), lineno=126, col_offset=15), lineno=126, col_offset=8)], [], lineno=124, col_offset=4), Assign([Name('comps', Store(), lineno=127, col_offset=4)], Call(Attribute(Name('path', Load(), lineno=127, col_offset=12), 'split', Load(), lineno=127, col_offset=12), [Str('/', lineno=127, col_offset=23)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=4), Assign([Name('i', Store(), lineno=128, col_offset=4)], Num(0, lineno=128, col_offset=8), lineno=128, col_offset=4), While(Compare(Name('i', Load(), lineno=129, col_offset=10), [Lt()], [Call(Name('len', Load(), lineno=129, col_offset=14), [Name('comps', Load(), lineno=129, col_offset=18)], [], None, None, lineno=129, col_offset=14)], lineno=129, col_offset=10), [If(Compare(Subscript(Name('comps', Load(), lineno=130, col_offset=11), Index(Name('i', Load(), lineno=130, col_offset=17)), Load(), lineno=130, col_offset=11), [Eq()], [Str('.', lineno=130, col_offset=23)], lineno=130, col_offset=11), [Delete([Subscript(Name('comps', Load(), lineno=131, col_offset=16), Index(Name('i', Load(), lineno=131, col_offset=22)), Del(), lineno=131, col_offset=16)], lineno=131, col_offset=12)], [If(BoolOp(And(), [Compare(Subscript(Name('comps', Load(), lineno=132, col_offset=13), Index(Name('i', Load(), lineno=132, col_offset=19)), Load(), lineno=132, col_offset=13), [Eq()], [Str('..', lineno=132, col_offset=25)], lineno=132, col_offset=13), Compare(Name('i', Load(), lineno=132, col_offset=34), [Gt()], [Num(0, lineno=132, col_offset=38)], lineno=132, col_offset=34), Compare(Subscript(Name('comps', Load(), lineno=132, col_offset=44), Index(BinOp(Name('i', Load(), lineno=132, col_offset=50), Sub(), Num(1, lineno=132, col_offset=52), lineno=132, col_offset=50)), Load(), lineno=132, col_offset=44), [NotIn()], [Tuple([Str('', lineno=132, col_offset=63), Str('..', lineno=132, col_offset=67)], Load(), lineno=132, col_offset=63)], lineno=132, col_offset=44)], lineno=132, col_offset=13), [Delete([Subscript(Name('comps', Load(), lineno=133, col_offset=16), Slice(BinOp(Name('i', Load(), lineno=133, col_offset=22), Sub(), Num(1, lineno=133, col_offset=24), lineno=133, col_offset=22), BinOp(Name('i', Load(), lineno=133, col_offset=26), Add(), Num(1, lineno=133, col_offset=28), lineno=133, col_offset=26), None), Del(), lineno=133, col_offset=16)], lineno=133, col_offset=12), Assign([Name('i', Store(), lineno=134, col_offset=12)], BinOp(Name('i', Load(), lineno=134, col_offset=16), Sub(), Num(1, lineno=134, col_offset=20), lineno=134, col_offset=16), lineno=134, col_offset=12)], [If(BoolOp(And(), [Compare(Subscript(Name('comps', Load(), lineno=135, col_offset=13), Index(Name('i', Load(), lineno=135, col_offset=19)), Load(), lineno=135, col_offset=13), [Eq()], [Str('', lineno=135, col_offset=25)], lineno=135, col_offset=13), Compare(Name('i', Load(), lineno=135, col_offset=32), [Gt()], [Num(0, lineno=135, col_offset=36)], lineno=135, col_offset=32), Compare(Subscript(Name('comps', Load(), lineno=135, col_offset=42), Index(BinOp(Name('i', Load(), lineno=135, col_offset=48), Sub(), Num(1, lineno=135, col_offset=50), lineno=135, col_offset=48)), Load(), lineno=135, col_offset=42), [NotEq()], [Str('', lineno=135, col_offset=56)], lineno=135, col_offset=42)], lineno=135, col_offset=13), [Delete([Subscript(Name('comps', Load(), lineno=136, col_offset=16), Index(Name('i', Load(), lineno=136, col_offset=22)), Del(), lineno=136, col_offset=16)], lineno=136, col_offset=12)], [Assign([Name('i', Store(), lineno=138, col_offset=12)], BinOp(Name('i', Load(), lineno=138, col_offset=16), Add(), Num(1, lineno=138, col_offset=20), lineno=138, col_offset=16), lineno=138, col_offset=12)], lineno=135, col_offset=13)], lineno=132, col_offset=13)], lineno=130, col_offset=8)], [], lineno=129, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Name('prefix', Load(), lineno=140, col_offset=11), lineno=140, col_offset=7), UnaryOp(Not(), Name('comps', Load(), lineno=140, col_offset=26), lineno=140, col_offset=22)], lineno=140, col_offset=7), [Expr(Call(Attribute(Name('comps', Load(), lineno=141, col_offset=8), 'append', Load(), lineno=141, col_offset=8), [Str('.', lineno=141, col_offset=21)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8)], [], lineno=140, col_offset=4), Return(BinOp(Name('prefix', Load(), lineno=142, col_offset=11), Add(), Call(Attribute(Str('/', lineno=142, col_offset=20), 'join', Load(), lineno=142, col_offset=20), [Name('comps', Load(), lineno=142, col_offset=29)], [], None, None, lineno=142, col_offset=20), lineno=142, col_offset=11), lineno=142, col_offset=4)], [], lineno=120, col_offset=0), FunctionDef('abspath', arguments([Name('path', Param(), lineno=146, col_offset=12)], None, None, []), [Expr(Str('Return the absolute version of a path', lineno=147, col_offset=4), lineno=147, col_offset=4), If(UnaryOp(Not(), Call(Name('isabs', Load(), lineno=148, col_offset=11), [Name('path', Load(), lineno=148, col_offset=17)], [], None, None, lineno=148, col_offset=11), lineno=148, col_offset=7), [If(Call(Name('isinstance', Load(), lineno=149, col_offset=11), [Name('path', Load(), lineno=149, col_offset=22), Name('unicode', Load(), lineno=149, col_offset=28)], [], None, None, lineno=149, col_offset=11), [Assign([Name('cwd', Store(), lineno=150, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=150, col_offset=18), 'getcwdu', Load(), lineno=150, col_offset=18), [], [], None, None, lineno=150, col_offset=18), lineno=150, col_offset=12)], [Assign([Name('cwd', Store(), lineno=152, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=152, col_offset=18), 'getcwd', Load(), lineno=152, col_offset=18), [], [], None, None, lineno=152, col_offset=18), lineno=152, col_offset=12)], lineno=149, col_offset=8), Assign([Name('path', Store(), lineno=153, col_offset=8)], Call(Name('join', Load(), lineno=153, col_offset=15), [Name('cwd', Load(), lineno=153, col_offset=20), Name('path', Load(), lineno=153, col_offset=25)], [], None, None, lineno=153, col_offset=15), lineno=153, col_offset=8)], [], lineno=148, col_offset=4), Return(Call(Name('normpath', Load(), lineno=154, col_offset=11), [Name('path', Load(), lineno=154, col_offset=20)], [], None, None, lineno=154, col_offset=11), lineno=154, col_offset=4)], [], lineno=146, col_offset=0), Assign([Name('realpath', Store(), lineno=157, col_offset=0)], Name('abspath', Load(), lineno=157, col_offset=11), lineno=157, col_offset=0), Assign([Name('supports_unicode_filenames', Store(), lineno=159, col_offset=0)], Name('False', Load(), lineno=159, col_offset=29), lineno=159, col_offset=0)])
