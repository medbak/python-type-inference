Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('dummy_threading', '_threading')], lineno=3, col_offset=0), Import([alias('time', None)], lineno=4, col_offset=0), ClassDef('DummyThreadingTestCase', [Attribute(Name('unittest', Load(), lineno=6, col_offset=29), 'TestCase', Load(), lineno=6, col_offset=29)], [ClassDef('TestThread', [Attribute(Name('_threading', Load(), lineno=8, col_offset=21), 'Thread', Load(), lineno=8, col_offset=21)], [FunctionDef('run', arguments([Name('self', Param(), lineno=10, col_offset=16)], None, None, []), [Global(['running'], lineno=11, col_offset=12), Global(['sema'], lineno=12, col_offset=12), Global(['mutex'], lineno=13, col_offset=12), Assign([Name('delay', Store(), lineno=17, col_offset=12)], Num(0, lineno=17, col_offset=20), lineno=17, col_offset=12), If(Attribute(Name('test_support', Load(), lineno=18, col_offset=15), 'verbose', Load(), lineno=18, col_offset=15), [Print(None, [Str('task', lineno=19, col_offset=22), Attribute(Name('self', Load(), lineno=19, col_offset=30), 'name', Load(), lineno=19, col_offset=30), Str('will run for', lineno=19, col_offset=41), Name('delay', Load(), lineno=19, col_offset=57), Str('sec', lineno=19, col_offset=64)], True, lineno=19, col_offset=16)], [], lineno=18, col_offset=12), Expr(Call(Attribute(Name('sema', Load(), lineno=20, col_offset=12), 'acquire', Load(), lineno=20, col_offset=12), [], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=12), Expr(Call(Attribute(Name('mutex', Load(), lineno=21, col_offset=12), 'acquire', Load(), lineno=21, col_offset=12), [], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=12), AugAssign(Name('running', Store(), lineno=22, col_offset=12), Add(), Num(1, lineno=22, col_offset=23), lineno=22, col_offset=12), If(Attribute(Name('test_support', Load(), lineno=23, col_offset=15), 'verbose', Load(), lineno=23, col_offset=15), [Print(None, [Name('running', Load(), lineno=24, col_offset=22), Str('tasks are running', lineno=24, col_offset=31)], True, lineno=24, col_offset=16)], [], lineno=23, col_offset=12), Expr(Call(Attribute(Name('mutex', Load(), lineno=25, col_offset=12), 'release', Load(), lineno=25, col_offset=12), [], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=12), Expr(Call(Attribute(Name('time', Load(), lineno=26, col_offset=12), 'sleep', Load(), lineno=26, col_offset=12), [Name('delay', Load(), lineno=26, col_offset=23)], [], None, None, lineno=26, col_offset=12), lineno=26, col_offset=12), If(Attribute(Name('test_support', Load(), lineno=27, col_offset=15), 'verbose', Load(), lineno=27, col_offset=15), [Print(None, [Str('task', lineno=28, col_offset=22), Attribute(Name('self', Load(), lineno=28, col_offset=30), 'name', Load(), lineno=28, col_offset=30), Str('done', lineno=28, col_offset=41)], True, lineno=28, col_offset=16)], [], lineno=27, col_offset=12), Expr(Call(Attribute(Name('mutex', Load(), lineno=29, col_offset=12), 'acquire', Load(), lineno=29, col_offset=12), [], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=12), AugAssign(Name('running', Store(), lineno=30, col_offset=12), Sub(), Num(1, lineno=30, col_offset=23), lineno=30, col_offset=12), If(Attribute(Name('test_support', Load(), lineno=31, col_offset=15), 'verbose', Load(), lineno=31, col_offset=15), [Print(None, [Attribute(Name('self', Load(), lineno=32, col_offset=22), 'name', Load(), lineno=32, col_offset=22), Str('is finished.', lineno=32, col_offset=33), Name('running', Load(), lineno=32, col_offset=49), Str('tasks are running', lineno=32, col_offset=58)], True, lineno=32, col_offset=16)], [], lineno=31, col_offset=12), Expr(Call(Attribute(Name('mutex', Load(), lineno=33, col_offset=12), 'release', Load(), lineno=33, col_offset=12), [], [], None, None, lineno=33, col_offset=12), lineno=33, col_offset=12), Expr(Call(Attribute(Name('sema', Load(), lineno=34, col_offset=12), 'release', Load(), lineno=34, col_offset=12), [], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=12)], [], lineno=10, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=36, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'numtasks', Store(), lineno=37, col_offset=8)], Num(10, lineno=37, col_offset=24), lineno=37, col_offset=8), Global(['sema'], lineno=38, col_offset=8), Assign([Name('sema', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('_threading', Load(), lineno=39, col_offset=15), 'BoundedSemaphore', Load(), lineno=39, col_offset=15), [], [keyword('value', Num(3, lineno=39, col_offset=49))], None, None, lineno=39, col_offset=15), lineno=39, col_offset=8), Global(['mutex'], lineno=40, col_offset=8), Assign([Name('mutex', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('_threading', Load(), lineno=41, col_offset=16), 'RLock', Load(), lineno=41, col_offset=16), [], [], None, None, lineno=41, col_offset=16), lineno=41, col_offset=8), Global(['running'], lineno=42, col_offset=8), Assign([Name('running', Store(), lineno=43, col_offset=8)], Num(0, lineno=43, col_offset=18), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'threads', Store(), lineno=44, col_offset=8)], List([], Load(), lineno=44, col_offset=23), lineno=44, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_tasks', arguments([Name('self', Param(), lineno=46, col_offset=19)], None, None, []), [For(Name('i', Store(), lineno=47, col_offset=12), Call(Name('range', Load(), lineno=47, col_offset=17), [Attribute(Name('self', Load(), lineno=47, col_offset=23), 'numtasks', Load(), lineno=47, col_offset=23)], [], None, None, lineno=47, col_offset=17), [Assign([Name('t', Store(), lineno=48, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=48, col_offset=16), 'TestThread', Load(), lineno=48, col_offset=16), [], [keyword('name', BinOp(Str('<thread %d>', lineno=48, col_offset=37), Mod(), Name('i', Load(), lineno=48, col_offset=51), lineno=48, col_offset=37))], None, None, lineno=48, col_offset=16), lineno=48, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=49, col_offset=12), 'threads', Load(), lineno=49, col_offset=12), 'append', Load(), lineno=49, col_offset=12), [Name('t', Load(), lineno=49, col_offset=32)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12), Expr(Call(Attribute(Name('t', Load(), lineno=50, col_offset=12), 'start', Load(), lineno=50, col_offset=12), [], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12)], [], lineno=47, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=52, col_offset=11), 'verbose', Load(), lineno=52, col_offset=11), [Print(None, [Str('waiting for all tasks to complete', lineno=53, col_offset=18)], True, lineno=53, col_offset=12)], [], lineno=52, col_offset=8), For(Name('t', Store(), lineno=54, col_offset=12), Attribute(Name('self', Load(), lineno=54, col_offset=17), 'threads', Load(), lineno=54, col_offset=17), [Expr(Call(Attribute(Name('t', Load(), lineno=55, col_offset=12), 'join', Load(), lineno=55, col_offset=12), [], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12)], [], lineno=54, col_offset=8), If(Attribute(Name('test_support', Load(), lineno=56, col_offset=11), 'verbose', Load(), lineno=56, col_offset=11), [Print(None, [Str('all tasks done', lineno=57, col_offset=18)], True, lineno=57, col_offset=12)], [], lineno=56, col_offset=8)], [], lineno=46, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=60, col_offset=4), 'run_unittest', Load(), lineno=60, col_offset=4), [Name('DummyThreadingTestCase', Load(), lineno=60, col_offset=30)], [], None, None, lineno=60, col_offset=4), lineno=60, col_offset=4)], [], lineno=59, col_offset=0), If(Compare(Name('__name__', Load(), lineno=62, col_offset=3), [Eq()], [Str('__main__', lineno=62, col_offset=15)], lineno=62, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=63, col_offset=4), [], [], None, None, lineno=63, col_offset=4), lineno=63, col_offset=4)], [], lineno=62, col_offset=0)])
