Module([Import([alias('sys', None), alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=2, col_offset=0), Assign([Name('structures', Store(), lineno=4, col_offset=0)], List([], Load(), lineno=4, col_offset=13), lineno=4, col_offset=0), Assign([Name('byteswapped_structures', Store(), lineno=5, col_offset=0)], List([], Load(), lineno=5, col_offset=25), lineno=5, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=8, col_offset=3), 'byteorder', Load(), lineno=8, col_offset=3), [Eq()], [Str('little', lineno=8, col_offset=20)], lineno=8, col_offset=3), [Assign([Name('SwappedStructure', Store(), lineno=9, col_offset=4)], Name('BigEndianStructure', Load(), lineno=9, col_offset=23), lineno=9, col_offset=4)], [Assign([Name('SwappedStructure', Store(), lineno=11, col_offset=4)], Name('LittleEndianStructure', Load(), lineno=11, col_offset=23), lineno=11, col_offset=4)], lineno=8, col_offset=0), For(Name('typ', Store(), lineno=13, col_offset=4), List([Name('c_short', Load(), lineno=13, col_offset=12), Name('c_int', Load(), lineno=13, col_offset=21), Name('c_long', Load(), lineno=13, col_offset=28), Name('c_longlong', Load(), lineno=13, col_offset=36), Name('c_float', Load(), lineno=14, col_offset=12), Name('c_double', Load(), lineno=14, col_offset=21), Name('c_ushort', Load(), lineno=15, col_offset=12), Name('c_uint', Load(), lineno=15, col_offset=22), Name('c_ulong', Load(), lineno=15, col_offset=30), Name('c_ulonglong', Load(), lineno=15, col_offset=39)], Load(), lineno=13, col_offset=11), [ClassDef('X', [Name('Structure', Load(), lineno=16, col_offset=12)], [Assign([Name('_pack_', Store(), lineno=17, col_offset=8)], Num(1, lineno=17, col_offset=17), lineno=17, col_offset=8), Assign([Name('_fields_', Store(), lineno=18, col_offset=8)], List([Tuple([Str('pad', lineno=18, col_offset=21), Name('c_byte', Load(), lineno=18, col_offset=28)], Load(), lineno=18, col_offset=21), Tuple([Str('value', lineno=19, col_offset=21), Name('typ', Load(), lineno=19, col_offset=30)], Load(), lineno=19, col_offset=21)], Load(), lineno=18, col_offset=19), lineno=18, col_offset=8)], [], lineno=16, col_offset=4), ClassDef('Y', [Name('SwappedStructure', Load(), lineno=20, col_offset=12)], [Assign([Name('_pack_', Store(), lineno=21, col_offset=8)], Num(1, lineno=21, col_offset=17), lineno=21, col_offset=8), Assign([Name('_fields_', Store(), lineno=22, col_offset=8)], List([Tuple([Str('pad', lineno=22, col_offset=21), Name('c_byte', Load(), lineno=22, col_offset=28)], Load(), lineno=22, col_offset=21), Tuple([Str('value', lineno=23, col_offset=21), Name('typ', Load(), lineno=23, col_offset=30)], Load(), lineno=23, col_offset=21)], Load(), lineno=22, col_offset=19), lineno=22, col_offset=8)], [], lineno=20, col_offset=4), Expr(Call(Attribute(Name('structures', Load(), lineno=24, col_offset=4), 'append', Load(), lineno=24, col_offset=4), [Name('X', Load(), lineno=24, col_offset=22)], [], None, None, lineno=24, col_offset=4), lineno=24, col_offset=4), Expr(Call(Attribute(Name('byteswapped_structures', Load(), lineno=25, col_offset=4), 'append', Load(), lineno=25, col_offset=4), [Name('Y', Load(), lineno=25, col_offset=34)], [], None, None, lineno=25, col_offset=4), lineno=25, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('TestStructures', [Attribute(Name('unittest', Load(), lineno=27, col_offset=21), 'TestCase', Load(), lineno=27, col_offset=21)], [FunctionDef('test_native', arguments([Name('self', Param(), lineno=28, col_offset=20)], None, None, []), [For(Name('typ', Store(), lineno=29, col_offset=12), Name('structures', Load(), lineno=29, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=12), 'assertEqual', Load(), lineno=31, col_offset=12), [Attribute(Attribute(Name('typ', Load(), lineno=31, col_offset=29), 'value', Load(), lineno=31, col_offset=29), 'offset', Load(), lineno=31, col_offset=29), Num(1, lineno=31, col_offset=47)], [], None, None, lineno=31, col_offset=12), lineno=31, col_offset=12), Assign([Name('o', Store(), lineno=32, col_offset=12)], Call(Name('typ', Load(), lineno=32, col_offset=16), [], [], None, None, lineno=32, col_offset=16), lineno=32, col_offset=12), Assign([Attribute(Name('o', Load(), lineno=33, col_offset=12), 'value', Store(), lineno=33, col_offset=12)], Num(4, lineno=33, col_offset=22), lineno=33, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=12), 'assertEqual', Load(), lineno=34, col_offset=12), [Attribute(Name('o', Load(), lineno=34, col_offset=29), 'value', Load(), lineno=34, col_offset=29), Num(4, lineno=34, col_offset=38)], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=12)], [], lineno=29, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_swapped', arguments([Name('self', Param(), lineno=36, col_offset=21)], None, None, []), [For(Name('typ', Store(), lineno=37, col_offset=12), Name('byteswapped_structures', Load(), lineno=37, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'assertEqual', Load(), lineno=39, col_offset=12), [Attribute(Attribute(Name('typ', Load(), lineno=39, col_offset=29), 'value', Load(), lineno=39, col_offset=29), 'offset', Load(), lineno=39, col_offset=29), Num(1, lineno=39, col_offset=47)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12), Assign([Name('o', Store(), lineno=40, col_offset=12)], Call(Name('typ', Load(), lineno=40, col_offset=16), [], [], None, None, lineno=40, col_offset=16), lineno=40, col_offset=12), Assign([Attribute(Name('o', Load(), lineno=41, col_offset=12), 'value', Store(), lineno=41, col_offset=12)], Num(4, lineno=41, col_offset=22), lineno=41, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'assertEqual', Load(), lineno=42, col_offset=12), [Attribute(Name('o', Load(), lineno=42, col_offset=29), 'value', Load(), lineno=42, col_offset=29), Num(4, lineno=42, col_offset=38)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12)], [], lineno=37, col_offset=8)], [], lineno=36, col_offset=4)], [], lineno=27, col_offset=0), If(Compare(Name('__name__', Load(), lineno=44, col_offset=3), [Eq()], [Str('__main__', lineno=44, col_offset=15)], lineno=44, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=45, col_offset=4), 'main', Load(), lineno=45, col_offset=4), [], [], None, None, lineno=45, col_offset=4), lineno=45, col_offset=4)], [], lineno=44, col_offset=0)])
