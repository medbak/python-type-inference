Module([Import([alias('sys', None)], lineno=3, col_offset=0), ImportFrom('bgenlocations', [alias('TOOLBOXDIR', None), alias('BGENDIR', None)], 0, lineno=4, col_offset=0), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=5, col_offset=0), 'path', Load(), lineno=5, col_offset=0), 'append', Load(), lineno=5, col_offset=0), [Name('BGENDIR', Load(), lineno=5, col_offset=16)], [], None, None, lineno=5, col_offset=0), lineno=5, col_offset=0), ImportFrom('scantools', [alias('Scanner', None)], 0, lineno=6, col_offset=0), Assign([Name('LONG', Store(), lineno=8, col_offset=0)], Str('Events', lineno=8, col_offset=7), lineno=8, col_offset=0), Assign([Name('SHORT', Store(), lineno=9, col_offset=0)], Str('evt', lineno=9, col_offset=8), lineno=9, col_offset=0), Assign([Name('OBJECT', Store(), lineno=10, col_offset=0)], Str('NOTUSED', lineno=10, col_offset=9), lineno=10, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('input', Store(), lineno=13, col_offset=4)], BinOp(Name('LONG', Load(), lineno=13, col_offset=12), Add(), Str('.h', lineno=13, col_offset=19), lineno=13, col_offset=12), lineno=13, col_offset=4), Assign([Name('output', Store(), lineno=14, col_offset=4)], BinOp(Name('SHORT', Load(), lineno=14, col_offset=13), Add(), Str('gen.py', lineno=14, col_offset=21), lineno=14, col_offset=13), lineno=14, col_offset=4), Assign([Name('defsoutput', Store(), lineno=15, col_offset=4)], BinOp(BinOp(Name('TOOLBOXDIR', Load(), lineno=15, col_offset=17), Add(), Name('LONG', Load(), lineno=15, col_offset=30), lineno=15, col_offset=17), Add(), Str('.py', lineno=15, col_offset=37), lineno=15, col_offset=35), lineno=15, col_offset=4), Assign([Name('scanner', Store(), lineno=16, col_offset=4)], Call(Name('MyScanner', Load(), lineno=16, col_offset=14), [Name('input', Load(), lineno=16, col_offset=24), Name('output', Load(), lineno=16, col_offset=31), Name('defsoutput', Load(), lineno=16, col_offset=39)], [], None, None, lineno=16, col_offset=14), lineno=16, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=17, col_offset=4), 'scan', Load(), lineno=17, col_offset=4), [], [], None, None, lineno=17, col_offset=4), lineno=17, col_offset=4), Expr(Call(Attribute(Name('scanner', Load(), lineno=18, col_offset=4), 'close', Load(), lineno=18, col_offset=4), [], [], None, None, lineno=18, col_offset=4), lineno=18, col_offset=4), Print(None, [Str('=== Testing definitions output code ===', lineno=19, col_offset=10)], True, lineno=19, col_offset=4), Expr(Call(Name('execfile', Load(), lineno=20, col_offset=4), [Name('defsoutput', Load(), lineno=20, col_offset=13), Dict([], [], lineno=20, col_offset=25), Dict([], [], lineno=20, col_offset=29)], [], None, None, lineno=20, col_offset=4), lineno=20, col_offset=4), Print(None, [Str('=== Done scanning and generating, now importing the generated code... ===', lineno=21, col_offset=10)], True, lineno=21, col_offset=4), Exec(BinOp(BinOp(Str('import ', lineno=22, col_offset=9), Add(), Name('SHORT', Load(), lineno=22, col_offset=21), lineno=22, col_offset=9), Add(), Str('support', lineno=22, col_offset=29), lineno=22, col_offset=27), None, None, lineno=22, col_offset=4), Print(None, [Str("=== Done.  It's up to you to compile it now! ===", lineno=23, col_offset=10)], True, lineno=23, col_offset=4)], [], lineno=12, col_offset=0), ClassDef('MyScanner', [Name('Scanner', Load(), lineno=25, col_offset=16)], [FunctionDef('destination', arguments([Name('self', Param(), lineno=27, col_offset=20), Name('type', Param(), lineno=27, col_offset=26), Name('name', Param(), lineno=27, col_offset=32), Name('arglist', Param(), lineno=27, col_offset=38)], None, None, []), [Assign([Name('classname', Store(), lineno=28, col_offset=8)], Str('Function', lineno=28, col_offset=20), lineno=28, col_offset=8), Assign([Name('listname', Store(), lineno=29, col_offset=8)], Str('functions', lineno=29, col_offset=19), lineno=29, col_offset=8), If(Name('arglist', Load(), lineno=30, col_offset=11), [Assign([Tuple([Name('t', Store(), lineno=31, col_offset=12), Name('n', Store(), lineno=31, col_offset=15), Name('m', Store(), lineno=31, col_offset=18)], Store(), lineno=31, col_offset=12)], Subscript(Name('arglist', Load(), lineno=31, col_offset=22), Index(Num(0, lineno=31, col_offset=30)), Load(), lineno=31, col_offset=22), lineno=31, col_offset=12), If(BoolOp(And(), [Compare(Name('t', Load(), lineno=33, col_offset=15), [Eq()], [Name('OBJECT', Load(), lineno=33, col_offset=20)], lineno=33, col_offset=15), Compare(Name('m', Load(), lineno=33, col_offset=31), [Eq()], [Str('InMode', lineno=33, col_offset=36)], lineno=33, col_offset=31)], lineno=33, col_offset=15), [Assign([Name('classname', Store(), lineno=34, col_offset=16)], Str('Method', lineno=34, col_offset=28), lineno=34, col_offset=16), Assign([Name('listname', Store(), lineno=35, col_offset=16)], Str('methods', lineno=35, col_offset=27), lineno=35, col_offset=16)], [], lineno=33, col_offset=12)], [], lineno=30, col_offset=8), Return(Tuple([Name('classname', Load(), lineno=36, col_offset=15), Name('listname', Load(), lineno=36, col_offset=26)], Load(), lineno=36, col_offset=15), lineno=36, col_offset=8)], [], lineno=27, col_offset=4), FunctionDef('makeblacklistnames', arguments([Name('self', Param(), lineno=38, col_offset=27)], None, None, []), [Return(List([Str('KeyTranslate', lineno=40, col_offset=16), Str('GetEventMask', lineno=41, col_offset=16), Str('WaitNextEvent', lineno=42, col_offset=16), Str('osEvtMessageMask', lineno=44, col_offset=16), Str('SystemEvent', lineno=46, col_offset=16), Str('SystemTask', lineno=47, col_offset=16), Str('SystemClick', lineno=48, col_offset=16), Str('GetOSEvent', lineno=49, col_offset=16), Str('OSEventAvail', lineno=50, col_offset=16)], Load(), lineno=39, col_offset=15), lineno=39, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('makeblacklisttypes', arguments([Name('self', Param(), lineno=53, col_offset=27)], None, None, []), [Return(List([Str('EvQElPtr', lineno=55, col_offset=16), Str('QHdrPtr', lineno=55, col_offset=28)], Load(), lineno=54, col_offset=15), lineno=54, col_offset=8)], [], lineno=53, col_offset=4), FunctionDef('makerepairinstructions', arguments([Name('self', Param(), lineno=58, col_offset=31)], None, None, []), [Return(List([Tuple([List([Tuple([Str('void_ptr', lineno=60, col_offset=19), Str('*', lineno=60, col_offset=31), Str('InMode', lineno=60, col_offset=36)], Load(), lineno=60, col_offset=19), Tuple([Str('long', lineno=60, col_offset=48), Str('*', lineno=60, col_offset=56), Str('InMode', lineno=60, col_offset=61)], Load(), lineno=60, col_offset=48)], Load(), lineno=60, col_offset=17), List([Tuple([Str('InBuffer', lineno=61, col_offset=19), Str('*', lineno=61, col_offset=31), Str('*', lineno=61, col_offset=36)], Load(), lineno=61, col_offset=19)], Load(), lineno=61, col_offset=17)], Load(), lineno=60, col_offset=17), Tuple([List([Tuple([Str('void', lineno=63, col_offset=19), Str('*', lineno=63, col_offset=27), Str('OutMode', lineno=63, col_offset=32)], Load(), lineno=63, col_offset=19), Tuple([Str('long', lineno=63, col_offset=45), Str('*', lineno=63, col_offset=53), Str('InMode', lineno=63, col_offset=58)], Load(), lineno=63, col_offset=45), Tuple([Str('long', lineno=64, col_offset=45), Str('*', lineno=64, col_offset=53), Str('OutMode', lineno=64, col_offset=58)], Load(), lineno=64, col_offset=45)], Load(), lineno=63, col_offset=17), List([Tuple([Str('VarVarOutBuffer', lineno=65, col_offset=19), Str('*', lineno=65, col_offset=38), Str('InOutMode', lineno=65, col_offset=43)], Load(), lineno=65, col_offset=19)], Load(), lineno=65, col_offset=17)], Load(), lineno=63, col_offset=17), Tuple([List([Tuple([Str('void', lineno=67, col_offset=19), Str('wStorage', lineno=67, col_offset=27), Str('OutMode', lineno=67, col_offset=39)], Load(), lineno=67, col_offset=19)], Load(), lineno=67, col_offset=17), List([Tuple([Str('NullStorage', lineno=68, col_offset=19), Str('*', lineno=68, col_offset=34), Str('InMode', lineno=68, col_offset=39)], Load(), lineno=68, col_offset=19)], Load(), lineno=68, col_offset=17)], Load(), lineno=67, col_offset=17), Tuple([List([Tuple([Str('KeyMap', lineno=71, col_offset=19), Str('theKeys', lineno=71, col_offset=29), Str('InMode', lineno=71, col_offset=40)], Load(), lineno=71, col_offset=19)], Load(), lineno=71, col_offset=17), List([Tuple([Str('*', lineno=72, col_offset=19), Str('*', lineno=72, col_offset=24), Str('OutMode', lineno=72, col_offset=29)], Load(), lineno=72, col_offset=19)], Load(), lineno=72, col_offset=17)], Load(), lineno=71, col_offset=17), Tuple([List([Tuple([Str('unsigned long', lineno=75, col_offset=19), Str('*', lineno=75, col_offset=36), Str('*', lineno=75, col_offset=41)], Load(), lineno=75, col_offset=19)], Load(), lineno=75, col_offset=17), List([Tuple([Str('unsigned_long', lineno=76, col_offset=19), Str('*', lineno=76, col_offset=36), Str('*', lineno=76, col_offset=41)], Load(), lineno=76, col_offset=19)], Load(), lineno=76, col_offset=17)], Load(), lineno=75, col_offset=17)], Load(), lineno=59, col_offset=15), lineno=59, col_offset=8)], [], lineno=58, col_offset=4)], [], lineno=25, col_offset=0), If(Compare(Name('__name__', Load(), lineno=79, col_offset=3), [Eq()], [Str('__main__', lineno=79, col_offset=15)], lineno=79, col_offset=3), [Expr(Call(Name('main', Load(), lineno=80, col_offset=4), [], [], None, None, lineno=80, col_offset=4), lineno=80, col_offset=4)], [], lineno=79, col_offset=0)])
