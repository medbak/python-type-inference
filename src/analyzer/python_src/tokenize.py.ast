Module([Expr(Str('Tokenization help for Python programs.\n\ngenerate_tokens(readline) is a generator that breaks a stream of\ntext into Python tokens.  It accepts a readline-like method which is called\nrepeatedly to get the next line of input (or "" for EOF).  It generates\n5-tuples with these members:\n\n    the token type (see token.py)\n    the token (a string)\n    the starting (row, column) indices of the token (a 2-tuple of ints)\n    the ending (row, column) indices of the token (a 2-tuple of ints)\n    the original line (string)\n\nIt is designed to match the working of the Python tokenizer exactly, except\nthat it produces COMMENT tokens for comments and gives type OP for all\noperators\n\nOlder entry points\n    tokenize_loop(readline, tokeneater)\n    tokenize(readline, tokeneater=printtoken)\nare the same, except instead of generating tokens, tokeneater is a callback\nfunction to which the 5 fields described above are passed as 5 arguments,\neach time a new token is found.', lineno=23, col_offset=-1), lineno=23, col_offset=-1), Assign([Name('__author__', Store(), lineno=25, col_offset=0)], Str('Ka-Ping Yee <ping@lfw.org>', lineno=25, col_offset=13), lineno=25, col_offset=0), Assign([Name('__credits__', Store(), lineno=26, col_offset=0)], Str('GvR, ESR, Tim Peters, Thomas Wouters, Fred Drake, Skip Montanaro, Raymond Hettinger', lineno=26, col_offset=15), lineno=26, col_offset=0), Import([alias('string', None), alias('re', None)], lineno=29, col_offset=0), ImportFrom('token', [alias('*', None)], 0, lineno=30, col_offset=0), Import([alias('token', None)], lineno=32, col_offset=0), Assign([Name('__all__', Store(), lineno=33, col_offset=0)], ListComp(Name('x', Load(), lineno=33, col_offset=11), [comprehension(Name('x', Store(), lineno=33, col_offset=17), Call(Name('dir', Load(), lineno=33, col_offset=22), [Name('token', Load(), lineno=33, col_offset=26)], [], None, None, lineno=33, col_offset=22), [UnaryOp(Not(), Call(Attribute(Name('x', Load(), lineno=33, col_offset=40), 'startswith', Load(), lineno=33, col_offset=40), [Str('_', lineno=33, col_offset=53)], [], None, None, lineno=33, col_offset=40), lineno=33, col_offset=36)])], lineno=33, col_offset=11), lineno=33, col_offset=0), AugAssign(Name('__all__', Store(), lineno=34, col_offset=0), Add(), List([Str('COMMENT', lineno=34, col_offset=12), Str('tokenize', lineno=34, col_offset=23), Str('generate_tokens', lineno=34, col_offset=35), Str('NL', lineno=34, col_offset=54), Str('untokenize', lineno=34, col_offset=60)], Load(), lineno=34, col_offset=11), lineno=34, col_offset=0), Delete([Name('x', Del(), lineno=35, col_offset=4)], lineno=35, col_offset=0), Delete([Name('token', Del(), lineno=36, col_offset=4)], lineno=36, col_offset=0), Assign([Name('COMMENT', Store(), lineno=38, col_offset=0)], Name('N_TOKENS', Load(), lineno=38, col_offset=10), lineno=38, col_offset=0), Assign([Subscript(Name('tok_name', Load(), lineno=39, col_offset=0), Index(Name('COMMENT', Load(), lineno=39, col_offset=9)), Store(), lineno=39, col_offset=0)], Str('COMMENT', lineno=39, col_offset=20), lineno=39, col_offset=0), Assign([Name('NL', Store(), lineno=40, col_offset=0)], BinOp(Name('N_TOKENS', Load(), lineno=40, col_offset=5), Add(), Num(1, lineno=40, col_offset=16), lineno=40, col_offset=5), lineno=40, col_offset=0), Assign([Subscript(Name('tok_name', Load(), lineno=41, col_offset=0), Index(Name('NL', Load(), lineno=41, col_offset=9)), Store(), lineno=41, col_offset=0)], Str('NL', lineno=41, col_offset=15), lineno=41, col_offset=0), AugAssign(Name('N_TOKENS', Store(), lineno=42, col_offset=0), Add(), Num(2, lineno=42, col_offset=12), lineno=42, col_offset=0), FunctionDef('group', arguments([], 'choices', None, []), [Return(BinOp(BinOp(Str('(', lineno=44, col_offset=28), Add(), Call(Attribute(Str('|', lineno=44, col_offset=34), 'join', Load(), lineno=44, col_offset=34), [Name('choices', Load(), lineno=44, col_offset=43)], [], None, None, lineno=44, col_offset=34), lineno=44, col_offset=28), Add(), Str(')', lineno=44, col_offset=54), lineno=44, col_offset=52), lineno=44, col_offset=21)], [], lineno=44, col_offset=0), FunctionDef('any', arguments([], 'choices', None, []), [Return(BinOp(Call(Name('group', Load(), lineno=45, col_offset=26), [], [], Name('choices', Load(), lineno=45, col_offset=33), None, lineno=45, col_offset=26), Add(), Str('*', lineno=45, col_offset=44), lineno=45, col_offset=26), lineno=45, col_offset=19)], [], lineno=45, col_offset=0), FunctionDef('maybe', arguments([], 'choices', None, []), [Return(BinOp(Call(Name('group', Load(), lineno=46, col_offset=28), [], [], Name('choices', Load(), lineno=46, col_offset=35), None, lineno=46, col_offset=28), Add(), Str('?', lineno=46, col_offset=46), lineno=46, col_offset=28), lineno=46, col_offset=21)], [], lineno=46, col_offset=0), Assign([Name('Whitespace', Store(), lineno=48, col_offset=0)], Str('[ \\f\\t]*', lineno=48, col_offset=13), lineno=48, col_offset=0), Assign([Name('Comment', Store(), lineno=49, col_offset=0)], Str('#[^\\r\\n]*', lineno=49, col_offset=10), lineno=49, col_offset=0), Assign([Name('Ignore', Store(), lineno=50, col_offset=0)], BinOp(BinOp(Name('Whitespace', Load(), lineno=50, col_offset=9), Add(), Call(Name('any', Load(), lineno=50, col_offset=22), [BinOp(Str('\\\\\\r?\\n', lineno=50, col_offset=26), Add(), Name('Whitespace', Load(), lineno=50, col_offset=39), lineno=50, col_offset=26)], [], None, None, lineno=50, col_offset=22), lineno=50, col_offset=9), Add(), Call(Name('maybe', Load(), lineno=50, col_offset=53), [Name('Comment', Load(), lineno=50, col_offset=59)], [], None, None, lineno=50, col_offset=53), lineno=50, col_offset=51), lineno=50, col_offset=0), Assign([Name('Name', Store(), lineno=51, col_offset=0)], Str('[a-zA-Z_]\\w*', lineno=51, col_offset=7), lineno=51, col_offset=0), Assign([Name('Hexnumber', Store(), lineno=53, col_offset=0)], Str('0[xX][\\da-fA-F]+[lL]?', lineno=53, col_offset=12), lineno=53, col_offset=0), Assign([Name('Octnumber', Store(), lineno=54, col_offset=0)], Str('(0[oO][0-7]+)|(0[0-7]*)[lL]?', lineno=54, col_offset=12), lineno=54, col_offset=0), Assign([Name('Binnumber', Store(), lineno=55, col_offset=0)], Str('0[bB][01]+[lL]?', lineno=55, col_offset=12), lineno=55, col_offset=0), Assign([Name('Decnumber', Store(), lineno=56, col_offset=0)], Str('[1-9]\\d*[lL]?', lineno=56, col_offset=12), lineno=56, col_offset=0), Assign([Name('Intnumber', Store(), lineno=57, col_offset=0)], Call(Name('group', Load(), lineno=57, col_offset=12), [Name('Hexnumber', Load(), lineno=57, col_offset=18), Name('Binnumber', Load(), lineno=57, col_offset=29), Name('Octnumber', Load(), lineno=57, col_offset=40), Name('Decnumber', Load(), lineno=57, col_offset=51)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=0), Assign([Name('Exponent', Store(), lineno=58, col_offset=0)], Str('[eE][-+]?\\d+', lineno=58, col_offset=11), lineno=58, col_offset=0), Assign([Name('Pointfloat', Store(), lineno=59, col_offset=0)], BinOp(Call(Name('group', Load(), lineno=59, col_offset=13), [Str('\\d+\\.\\d*', lineno=59, col_offset=19), Str('\\.\\d+', lineno=59, col_offset=32)], [], None, None, lineno=59, col_offset=13), Add(), Call(Name('maybe', Load(), lineno=59, col_offset=44), [Name('Exponent', Load(), lineno=59, col_offset=50)], [], None, None, lineno=59, col_offset=44), lineno=59, col_offset=13), lineno=59, col_offset=0), Assign([Name('Expfloat', Store(), lineno=60, col_offset=0)], BinOp(Str('\\d+', lineno=60, col_offset=11), Add(), Name('Exponent', Load(), lineno=60, col_offset=20), lineno=60, col_offset=11), lineno=60, col_offset=0), Assign([Name('Floatnumber', Store(), lineno=61, col_offset=0)], Call(Name('group', Load(), lineno=61, col_offset=14), [Name('Pointfloat', Load(), lineno=61, col_offset=20), Name('Expfloat', Load(), lineno=61, col_offset=32)], [], None, None, lineno=61, col_offset=14), lineno=61, col_offset=0), Assign([Name('Imagnumber', Store(), lineno=62, col_offset=0)], Call(Name('group', Load(), lineno=62, col_offset=13), [Str('\\d+[jJ]', lineno=62, col_offset=19), BinOp(Name('Floatnumber', Load(), lineno=62, col_offset=31), Add(), Str('[jJ]', lineno=62, col_offset=45), lineno=62, col_offset=31)], [], None, None, lineno=62, col_offset=13), lineno=62, col_offset=0), Assign([Name('Number', Store(), lineno=63, col_offset=0)], Call(Name('group', Load(), lineno=63, col_offset=9), [Name('Imagnumber', Load(), lineno=63, col_offset=15), Name('Floatnumber', Load(), lineno=63, col_offset=27), Name('Intnumber', Load(), lineno=63, col_offset=40)], [], None, None, lineno=63, col_offset=9), lineno=63, col_offset=0), Assign([Name('Single', Store(), lineno=66, col_offset=0)], Str("[^'\\\\]*(?:\\\\.[^'\\\\]*)*'", lineno=66, col_offset=9), lineno=66, col_offset=0), Assign([Name('Double', Store(), lineno=68, col_offset=0)], Str('[^"\\\\]*(?:\\\\.[^"\\\\]*)*"', lineno=68, col_offset=9), lineno=68, col_offset=0), Assign([Name('Single3', Store(), lineno=70, col_offset=0)], Str("[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*'''", lineno=70, col_offset=10), lineno=70, col_offset=0), Assign([Name('Double3', Store(), lineno=72, col_offset=0)], Str('[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*"""', lineno=72, col_offset=10), lineno=72, col_offset=0), Assign([Name('Triple', Store(), lineno=73, col_offset=0)], Call(Name('group', Load(), lineno=73, col_offset=9), [Str("[uU]?[rR]?'''", lineno=73, col_offset=15), Str('[uU]?[rR]?"""', lineno=73, col_offset=32)], [], None, None, lineno=73, col_offset=9), lineno=73, col_offset=0), Assign([Name('String', Store(), lineno=75, col_offset=0)], Call(Name('group', Load(), lineno=75, col_offset=9), [Str("[uU]?[rR]?'[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*'", lineno=75, col_offset=15), Str('[uU]?[rR]?"[^\\n"\\\\]*(?:\\\\.[^\\n"\\\\]*)*"', lineno=76, col_offset=15)], [], None, None, lineno=75, col_offset=9), lineno=75, col_offset=0), Assign([Name('Operator', Store(), lineno=81, col_offset=0)], Call(Name('group', Load(), lineno=81, col_offset=11), [Str('\\*\\*=?', lineno=81, col_offset=17), Str('>>=?', lineno=81, col_offset=28), Str('<<=?', lineno=81, col_offset=37), Str('<>', lineno=81, col_offset=46), Str('!=', lineno=81, col_offset=53), Str('//=?', lineno=82, col_offset=17), Str('[+\\-*/%&|^=<>]=?', lineno=83, col_offset=17), Str('~', lineno=84, col_offset=17)], [], None, None, lineno=81, col_offset=11), lineno=81, col_offset=0), Assign([Name('Bracket', Store(), lineno=86, col_offset=0)], Str('[][(){}]', lineno=86, col_offset=10), lineno=86, col_offset=0), Assign([Name('Special', Store(), lineno=87, col_offset=0)], Call(Name('group', Load(), lineno=87, col_offset=10), [Str('\\r?\\n', lineno=87, col_offset=16), Str('[:;.,`@]', lineno=87, col_offset=26)], [], None, None, lineno=87, col_offset=10), lineno=87, col_offset=0), Assign([Name('Funny', Store(), lineno=88, col_offset=0)], Call(Name('group', Load(), lineno=88, col_offset=8), [Name('Operator', Load(), lineno=88, col_offset=14), Name('Bracket', Load(), lineno=88, col_offset=24), Name('Special', Load(), lineno=88, col_offset=33)], [], None, None, lineno=88, col_offset=8), lineno=88, col_offset=0), Assign([Name('PlainToken', Store(), lineno=90, col_offset=0)], Call(Name('group', Load(), lineno=90, col_offset=13), [Name('Number', Load(), lineno=90, col_offset=19), Name('Funny', Load(), lineno=90, col_offset=27), Name('String', Load(), lineno=90, col_offset=34), Name('Name', Load(), lineno=90, col_offset=42)], [], None, None, lineno=90, col_offset=13), lineno=90, col_offset=0), Assign([Name('Token', Store(), lineno=91, col_offset=0)], BinOp(Name('Ignore', Load(), lineno=91, col_offset=8), Add(), Name('PlainToken', Load(), lineno=91, col_offset=17), lineno=91, col_offset=8), lineno=91, col_offset=0), Assign([Name('ContStr', Store(), lineno=94, col_offset=0)], Call(Name('group', Load(), lineno=94, col_offset=10), [BinOp(Str("[uU]?[rR]?'[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*", lineno=94, col_offset=16), Add(), Call(Name('group', Load(), lineno=95, col_offset=16), [Str("'", lineno=95, col_offset=22), Str('\\\\\\r?\\n', lineno=95, col_offset=27)], [], None, None, lineno=95, col_offset=16), lineno=94, col_offset=16), BinOp(Str('[uU]?[rR]?"[^\\n"\\\\]*(?:\\\\.[^\\n"\\\\]*)*', lineno=96, col_offset=16), Add(), Call(Name('group', Load(), lineno=97, col_offset=16), [Str('"', lineno=97, col_offset=22), Str('\\\\\\r?\\n', lineno=97, col_offset=27)], [], None, None, lineno=97, col_offset=16), lineno=96, col_offset=16)], [], None, None, lineno=94, col_offset=10), lineno=94, col_offset=0), Assign([Name('PseudoExtras', Store(), lineno=98, col_offset=0)], Call(Name('group', Load(), lineno=98, col_offset=15), [Str('\\\\\\r?\\n', lineno=98, col_offset=21), Name('Comment', Load(), lineno=98, col_offset=33), Name('Triple', Load(), lineno=98, col_offset=42)], [], None, None, lineno=98, col_offset=15), lineno=98, col_offset=0), Assign([Name('PseudoToken', Store(), lineno=99, col_offset=0)], BinOp(Name('Whitespace', Load(), lineno=99, col_offset=14), Add(), Call(Name('group', Load(), lineno=99, col_offset=27), [Name('PseudoExtras', Load(), lineno=99, col_offset=33), Name('Number', Load(), lineno=99, col_offset=47), Name('Funny', Load(), lineno=99, col_offset=55), Name('ContStr', Load(), lineno=99, col_offset=62), Name('Name', Load(), lineno=99, col_offset=71)], [], None, None, lineno=99, col_offset=27), lineno=99, col_offset=14), lineno=99, col_offset=0), Assign([Tuple([Name('tokenprog', Store(), lineno=101, col_offset=0), Name('pseudoprog', Store(), lineno=101, col_offset=11), Name('single3prog', Store(), lineno=101, col_offset=23), Name('double3prog', Store(), lineno=101, col_offset=36)], Store(), lineno=101, col_offset=0)], Call(Name('map', Load(), lineno=101, col_offset=50), [Attribute(Name('re', Load(), lineno=102, col_offset=4), 'compile', Load(), lineno=102, col_offset=4), Tuple([Name('Token', Load(), lineno=102, col_offset=17), Name('PseudoToken', Load(), lineno=102, col_offset=24), Name('Single3', Load(), lineno=102, col_offset=37), Name('Double3', Load(), lineno=102, col_offset=46)], Load(), lineno=102, col_offset=17)], [], None, None, lineno=101, col_offset=50), lineno=101, col_offset=0), Assign([Name('endprogs', Store(), lineno=103, col_offset=0)], Dict([Str("'", lineno=103, col_offset=12), Str('"', lineno=103, col_offset=37), Str("'''", lineno=104, col_offset=12), Str('"""', lineno=104, col_offset=32), Str("r'''", lineno=105, col_offset=12), Str('r"""', lineno=105, col_offset=33), Str("u'''", lineno=106, col_offset=12), Str('u"""', lineno=106, col_offset=33), Str("ur'''", lineno=107, col_offset=12), Str('ur"""', lineno=107, col_offset=34), Str("R'''", lineno=108, col_offset=12), Str('R"""', lineno=108, col_offset=33), Str("U'''", lineno=109, col_offset=12), Str('U"""', lineno=109, col_offset=33), Str("uR'''", lineno=110, col_offset=12), Str('uR"""', lineno=110, col_offset=34), Str("Ur'''", lineno=111, col_offset=12), Str('Ur"""', lineno=111, col_offset=34), Str("UR'''", lineno=112, col_offset=12), Str('UR"""', lineno=112, col_offset=34), Str("b'''", lineno=113, col_offset=12), Str('b"""', lineno=113, col_offset=33), Str("br'''", lineno=114, col_offset=12), Str('br"""', lineno=114, col_offset=34), Str("B'''", lineno=115, col_offset=12), Str('B"""', lineno=115, col_offset=33), Str("bR'''", lineno=116, col_offset=12), Str('bR"""', lineno=116, col_offset=34), Str("Br'''", lineno=117, col_offset=12), Str('Br"""', lineno=117, col_offset=34), Str("BR'''", lineno=118, col_offset=12), Str('BR"""', lineno=118, col_offset=34), Str('r', lineno=119, col_offset=12), Str('R', lineno=119, col_offset=23), Str('u', lineno=119, col_offset=34), Str('U', lineno=119, col_offset=45), Str('b', lineno=120, col_offset=12), Str('B', lineno=120, col_offset=23)], [Call(Attribute(Name('re', Load(), lineno=103, col_offset=17), 'compile', Load(), lineno=103, col_offset=17), [Name('Single', Load(), lineno=103, col_offset=28)], [], None, None, lineno=103, col_offset=17), Call(Attribute(Name('re', Load(), lineno=103, col_offset=42), 'compile', Load(), lineno=103, col_offset=42), [Name('Double', Load(), lineno=103, col_offset=53)], [], None, None, lineno=103, col_offset=42), Name('single3prog', Load(), lineno=104, col_offset=19), Name('double3prog', Load(), lineno=104, col_offset=39), Name('single3prog', Load(), lineno=105, col_offset=20), Name('double3prog', Load(), lineno=105, col_offset=41), Name('single3prog', Load(), lineno=106, col_offset=20), Name('double3prog', Load(), lineno=106, col_offset=41), Name('single3prog', Load(), lineno=107, col_offset=21), Name('double3prog', Load(), lineno=107, col_offset=43), Name('single3prog', Load(), lineno=108, col_offset=20), Name('double3prog', Load(), lineno=108, col_offset=41), Name('single3prog', Load(), lineno=109, col_offset=20), Name('double3prog', Load(), lineno=109, col_offset=41), Name('single3prog', Load(), lineno=110, col_offset=21), Name('double3prog', Load(), lineno=110, col_offset=43), Name('single3prog', Load(), lineno=111, col_offset=21), Name('double3prog', Load(), lineno=111, col_offset=43), Name('single3prog', Load(), lineno=112, col_offset=21), Name('double3prog', Load(), lineno=112, col_offset=43), Name('single3prog', Load(), lineno=113, col_offset=20), Name('double3prog', Load(), lineno=113, col_offset=41), Name('single3prog', Load(), lineno=114, col_offset=21), Name('double3prog', Load(), lineno=114, col_offset=43), Name('single3prog', Load(), lineno=115, col_offset=20), Name('double3prog', Load(), lineno=115, col_offset=41), Name('single3prog', Load(), lineno=116, col_offset=21), Name('double3prog', Load(), lineno=116, col_offset=43), Name('single3prog', Load(), lineno=117, col_offset=21), Name('double3prog', Load(), lineno=117, col_offset=43), Name('single3prog', Load(), lineno=118, col_offset=21), Name('double3prog', Load(), lineno=118, col_offset=43), Name('None', Load(), lineno=119, col_offset=17), Name('None', Load(), lineno=119, col_offset=28), Name('None', Load(), lineno=119, col_offset=39), Name('None', Load(), lineno=119, col_offset=50), Name('None', Load(), lineno=120, col_offset=17), Name('None', Load(), lineno=120, col_offset=28)], lineno=103, col_offset=11), lineno=103, col_offset=0), Assign([Name('triple_quoted', Store(), lineno=122, col_offset=0)], Dict([], [], lineno=122, col_offset=16), lineno=122, col_offset=0), For(Name('t', Store(), lineno=123, col_offset=4), Tuple([Str("'''", lineno=123, col_offset=10), Str('"""', lineno=123, col_offset=17), Str("r'''", lineno=124, col_offset=10), Str('r"""', lineno=124, col_offset=18), Str("R'''", lineno=124, col_offset=26), Str('R"""', lineno=124, col_offset=34), Str("u'''", lineno=125, col_offset=10), Str('u"""', lineno=125, col_offset=18), Str("U'''", lineno=125, col_offset=26), Str('U"""', lineno=125, col_offset=34), Str("ur'''", lineno=126, col_offset=10), Str('ur"""', lineno=126, col_offset=19), Str("Ur'''", lineno=126, col_offset=28), Str('Ur"""', lineno=126, col_offset=37), Str("uR'''", lineno=127, col_offset=10), Str('uR"""', lineno=127, col_offset=19), Str("UR'''", lineno=127, col_offset=28), Str('UR"""', lineno=127, col_offset=37), Str("b'''", lineno=128, col_offset=10), Str('b"""', lineno=128, col_offset=18), Str("B'''", lineno=128, col_offset=26), Str('B"""', lineno=128, col_offset=34), Str("br'''", lineno=129, col_offset=10), Str('br"""', lineno=129, col_offset=19), Str("Br'''", lineno=129, col_offset=28), Str('Br"""', lineno=129, col_offset=37), Str("bR'''", lineno=130, col_offset=10), Str('bR"""', lineno=130, col_offset=19), Str("BR'''", lineno=130, col_offset=28), Str('BR"""', lineno=130, col_offset=37)], Load(), lineno=123, col_offset=10), [Assign([Subscript(Name('triple_quoted', Load(), lineno=131, col_offset=4), Index(Name('t', Load(), lineno=131, col_offset=18)), Store(), lineno=131, col_offset=4)], Name('t', Load(), lineno=131, col_offset=23), lineno=131, col_offset=4)], [], lineno=123, col_offset=0), Assign([Name('single_quoted', Store(), lineno=132, col_offset=0)], Dict([], [], lineno=132, col_offset=16), lineno=132, col_offset=0), For(Name('t', Store(), lineno=133, col_offset=4), Tuple([Str("'", lineno=133, col_offset=10), Str('"', lineno=133, col_offset=15), Str("r'", lineno=134, col_offset=10), Str('r"', lineno=134, col_offset=16), Str("R'", lineno=134, col_offset=22), Str('R"', lineno=134, col_offset=28), Str("u'", lineno=135, col_offset=10), Str('u"', lineno=135, col_offset=16), Str("U'", lineno=135, col_offset=22), Str('U"', lineno=135, col_offset=28), Str("ur'", lineno=136, col_offset=10), Str('ur"', lineno=136, col_offset=17), Str("Ur'", lineno=136, col_offset=24), Str('Ur"', lineno=136, col_offset=31), Str("uR'", lineno=137, col_offset=10), Str('uR"', lineno=137, col_offset=17), Str("UR'", lineno=137, col_offset=24), Str('UR"', lineno=137, col_offset=31), Str("b'", lineno=138, col_offset=10), Str('b"', lineno=138, col_offset=16), Str("B'", lineno=138, col_offset=22), Str('B"', lineno=138, col_offset=28), Str("br'", lineno=139, col_offset=10), Str('br"', lineno=139, col_offset=17), Str("Br'", lineno=139, col_offset=24), Str('Br"', lineno=139, col_offset=31), Str("bR'", lineno=140, col_offset=10), Str('bR"', lineno=140, col_offset=17), Str("BR'", lineno=140, col_offset=24), Str('BR"', lineno=140, col_offset=31)], Load(), lineno=133, col_offset=10), [Assign([Subscript(Name('single_quoted', Load(), lineno=141, col_offset=4), Index(Name('t', Load(), lineno=141, col_offset=18)), Store(), lineno=141, col_offset=4)], Name('t', Load(), lineno=141, col_offset=23), lineno=141, col_offset=4)], [], lineno=133, col_offset=0), Assign([Name('tabsize', Store(), lineno=143, col_offset=0)], Num(8, lineno=143, col_offset=10), lineno=143, col_offset=0), ClassDef('TokenError', [Name('Exception', Load(), lineno=145, col_offset=17)], [Pass( lineno=145, col_offset=29)], [], lineno=145, col_offset=0), ClassDef('StopTokenizing', [Name('Exception', Load(), lineno=147, col_offset=21)], [Pass( lineno=147, col_offset=33)], [], lineno=147, col_offset=0), FunctionDef('printtoken', arguments([Name('type', Param(), lineno=149, col_offset=15), Name('token', Param(), lineno=149, col_offset=21), Name('srow_scol', Param(), lineno=149, col_offset=28), Name('erow_ecol', Param(), lineno=149, col_offset=39), Name('line', Param(), lineno=149, col_offset=50)], None, None, []), [Assign([Tuple([Name('srow', Store(), lineno=150, col_offset=4), Name('scol', Store(), lineno=150, col_offset=10)], Store(), lineno=150, col_offset=4)], Name('srow_scol', Load(), lineno=150, col_offset=17), lineno=150, col_offset=4), Assign([Tuple([Name('erow', Store(), lineno=151, col_offset=4), Name('ecol', Store(), lineno=151, col_offset=10)], Store(), lineno=151, col_offset=4)], Name('erow_ecol', Load(), lineno=151, col_offset=17), lineno=151, col_offset=4), Print(None, [BinOp(Str('%d,%d-%d,%d:\t%s\t%s', lineno=152, col_offset=10), Mod(), Tuple([Name('srow', Load(), lineno=153, col_offset=9), Name('scol', Load(), lineno=153, col_offset=15), Name('erow', Load(), lineno=153, col_offset=21), Name('ecol', Load(), lineno=153, col_offset=27), Subscript(Name('tok_name', Load(), lineno=153, col_offset=33), Index(Name('type', Load(), lineno=153, col_offset=42)), Load(), lineno=153, col_offset=33), Call(Name('repr', Load(), lineno=153, col_offset=49), [Name('token', Load(), lineno=153, col_offset=54)], [], None, None, lineno=153, col_offset=49)], Load(), lineno=153, col_offset=9), lineno=152, col_offset=10)], True, lineno=152, col_offset=4)], [], lineno=149, col_offset=0), FunctionDef('tokenize', arguments([Name('readline', Param(), lineno=155, col_offset=13), Name('tokeneater', Param(), lineno=155, col_offset=23)], None, None, [Name('printtoken', Load(), lineno=155, col_offset=34)]), [Expr(Str('\n    The tokenize() function accepts two parameters: one representing the\n    input stream, and one providing an output mechanism for tokenize().\n\n    The first parameter, readline, must be a callable object which provides\n    the same interface as the readline() method of built-in file objects.\n    Each call to the function should return one line of input as a string.\n\n    The second parameter, tokeneater, must also be a callable object. It is\n    called once for each token, with five arguments, corresponding to the\n    tuples generated by generate_tokens().\n    ', lineno=167, col_offset=-1), lineno=167, col_offset=-1), TryExcept([Expr(Call(Name('tokenize_loop', Load(), lineno=169, col_offset=8), [Name('readline', Load(), lineno=169, col_offset=22), Name('tokeneater', Load(), lineno=169, col_offset=32)], [], None, None, lineno=169, col_offset=8), lineno=169, col_offset=8)], [ExceptHandler(Name('StopTokenizing', Load(), lineno=170, col_offset=11), None, [Pass( lineno=171, col_offset=8)], lineno=170, col_offset=4)], [], lineno=168, col_offset=4)], [], lineno=155, col_offset=0), FunctionDef('tokenize_loop', arguments([Name('readline', Param(), lineno=174, col_offset=18), Name('tokeneater', Param(), lineno=174, col_offset=28)], None, None, []), [For(Name('token_info', Store(), lineno=175, col_offset=8), Call(Name('generate_tokens', Load(), lineno=175, col_offset=22), [Name('readline', Load(), lineno=175, col_offset=38)], [], None, None, lineno=175, col_offset=22), [Expr(Call(Name('tokeneater', Load(), lineno=176, col_offset=8), [], [], Name('token_info', Load(), lineno=176, col_offset=20), None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=175, col_offset=4)], [], lineno=174, col_offset=0), ClassDef('Untokenizer', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=180, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=181, col_offset=8), 'tokens', Store(), lineno=181, col_offset=8)], List([], Load(), lineno=181, col_offset=22), lineno=181, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=182, col_offset=8), 'prev_row', Store(), lineno=182, col_offset=8)], Num(1, lineno=182, col_offset=24), lineno=182, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=183, col_offset=8), 'prev_col', Store(), lineno=183, col_offset=8)], Num(0, lineno=183, col_offset=24), lineno=183, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('add_whitespace', arguments([Name('self', Param(), lineno=185, col_offset=23), Name('start', Param(), lineno=185, col_offset=29)], None, None, []), [Assign([Tuple([Name('row', Store(), lineno=186, col_offset=8), Name('col', Store(), lineno=186, col_offset=13)], Store(), lineno=186, col_offset=8)], Name('start', Load(), lineno=186, col_offset=19), lineno=186, col_offset=8), Assert(Compare(Name('row', Load(), lineno=187, col_offset=15), [LtE()], [Attribute(Name('self', Load(), lineno=187, col_offset=22), 'prev_row', Load(), lineno=187, col_offset=22)], lineno=187, col_offset=15), None, lineno=187, col_offset=8), Assign([Name('col_offset', Store(), lineno=188, col_offset=8)], BinOp(Name('col', Load(), lineno=188, col_offset=21), Sub(), Attribute(Name('self', Load(), lineno=188, col_offset=27), 'prev_col', Load(), lineno=188, col_offset=27), lineno=188, col_offset=21), lineno=188, col_offset=8), If(Name('col_offset', Load(), lineno=189, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=190, col_offset=12), 'tokens', Load(), lineno=190, col_offset=12), 'append', Load(), lineno=190, col_offset=12), [BinOp(Str(' ', lineno=190, col_offset=31), Mult(), Name('col_offset', Load(), lineno=190, col_offset=37), lineno=190, col_offset=31)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12)], [], lineno=189, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('untokenize', arguments([Name('self', Param(), lineno=192, col_offset=19), Name('iterable', Param(), lineno=192, col_offset=25)], None, None, []), [For(Name('t', Store(), lineno=193, col_offset=12), Name('iterable', Load(), lineno=193, col_offset=17), [If(Compare(Call(Name('len', Load(), lineno=194, col_offset=15), [Name('t', Load(), lineno=194, col_offset=19)], [], None, None, lineno=194, col_offset=15), [Eq()], [Num(2, lineno=194, col_offset=25)], lineno=194, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=16), 'compat', Load(), lineno=195, col_offset=16), [Name('t', Load(), lineno=195, col_offset=28), Name('iterable', Load(), lineno=195, col_offset=31)], [], None, None, lineno=195, col_offset=16), lineno=195, col_offset=16), Break( lineno=196, col_offset=16)], [], lineno=194, col_offset=12), Assign([Tuple([Name('tok_type', Store(), lineno=197, col_offset=12), Name('token', Store(), lineno=197, col_offset=22), Name('start', Store(), lineno=197, col_offset=29), Name('end', Store(), lineno=197, col_offset=36), Name('line', Store(), lineno=197, col_offset=41)], Store(), lineno=197, col_offset=12)], Name('t', Load(), lineno=197, col_offset=48), lineno=197, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=12), 'add_whitespace', Load(), lineno=198, col_offset=12), [Name('start', Load(), lineno=198, col_offset=32)], [], None, None, lineno=198, col_offset=12), lineno=198, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=199, col_offset=12), 'tokens', Load(), lineno=199, col_offset=12), 'append', Load(), lineno=199, col_offset=12), [Name('token', Load(), lineno=199, col_offset=31)], [], None, None, lineno=199, col_offset=12), lineno=199, col_offset=12), Assign([Tuple([Attribute(Name('self', Load(), lineno=200, col_offset=12), 'prev_row', Store(), lineno=200, col_offset=12), Attribute(Name('self', Load(), lineno=200, col_offset=27), 'prev_col', Store(), lineno=200, col_offset=27)], Store(), lineno=200, col_offset=12)], Name('end', Load(), lineno=200, col_offset=43), lineno=200, col_offset=12), If(Compare(Name('tok_type', Load(), lineno=201, col_offset=15), [In()], [Tuple([Name('NEWLINE', Load(), lineno=201, col_offset=28), Name('NL', Load(), lineno=201, col_offset=37)], Load(), lineno=201, col_offset=28)], lineno=201, col_offset=15), [AugAssign(Attribute(Name('self', Load(), lineno=202, col_offset=16), 'prev_row', Store(), lineno=202, col_offset=16), Add(), Num(1, lineno=202, col_offset=33), lineno=202, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=16), 'prev_col', Store(), lineno=203, col_offset=16)], Num(0, lineno=203, col_offset=32), lineno=203, col_offset=16)], [], lineno=201, col_offset=12)], [], lineno=193, col_offset=8), Return(Call(Attribute(Str('', lineno=204, col_offset=15), 'join', Load(), lineno=204, col_offset=15), [Attribute(Name('self', Load(), lineno=204, col_offset=23), 'tokens', Load(), lineno=204, col_offset=23)], [], None, None, lineno=204, col_offset=15), lineno=204, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('compat', arguments([Name('self', Param(), lineno=206, col_offset=15), Name('token', Param(), lineno=206, col_offset=21), Name('iterable', Param(), lineno=206, col_offset=28)], None, None, []), [Assign([Name('startline', Store(), lineno=207, col_offset=8)], Name('False', Load(), lineno=207, col_offset=20), lineno=207, col_offset=8), Assign([Name('indents', Store(), lineno=208, col_offset=8)], List([], Load(), lineno=208, col_offset=18), lineno=208, col_offset=8), Assign([Name('toks_append', Store(), lineno=209, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=209, col_offset=22), 'tokens', Load(), lineno=209, col_offset=22), 'append', Load(), lineno=209, col_offset=22), lineno=209, col_offset=8), Assign([Tuple([Name('toknum', Store(), lineno=210, col_offset=8), Name('tokval', Store(), lineno=210, col_offset=16)], Store(), lineno=210, col_offset=8)], Name('token', Load(), lineno=210, col_offset=25), lineno=210, col_offset=8), If(Compare(Name('toknum', Load(), lineno=211, col_offset=11), [In()], [Tuple([Name('NAME', Load(), lineno=211, col_offset=22), Name('NUMBER', Load(), lineno=211, col_offset=28)], Load(), lineno=211, col_offset=22)], lineno=211, col_offset=11), [AugAssign(Name('tokval', Store(), lineno=212, col_offset=12), Add(), Str(' ', lineno=212, col_offset=22), lineno=212, col_offset=12)], [], lineno=211, col_offset=8), If(Compare(Name('toknum', Load(), lineno=213, col_offset=11), [In()], [Tuple([Name('NEWLINE', Load(), lineno=213, col_offset=22), Name('NL', Load(), lineno=213, col_offset=31)], Load(), lineno=213, col_offset=22)], lineno=213, col_offset=11), [Assign([Name('startline', Store(), lineno=214, col_offset=12)], Name('True', Load(), lineno=214, col_offset=24), lineno=214, col_offset=12)], [], lineno=213, col_offset=8), Assign([Name('prevstring', Store(), lineno=215, col_offset=8)], Name('False', Load(), lineno=215, col_offset=21), lineno=215, col_offset=8), For(Name('tok', Store(), lineno=216, col_offset=12), Name('iterable', Load(), lineno=216, col_offset=19), [Assign([Tuple([Name('toknum', Store(), lineno=217, col_offset=12), Name('tokval', Store(), lineno=217, col_offset=20)], Store(), lineno=217, col_offset=12)], Subscript(Name('tok', Load(), lineno=217, col_offset=29), Slice(None, Num(2, lineno=217, col_offset=34), None), Load(), lineno=217, col_offset=29), lineno=217, col_offset=12), If(Compare(Name('toknum', Load(), lineno=219, col_offset=15), [In()], [Tuple([Name('NAME', Load(), lineno=219, col_offset=26), Name('NUMBER', Load(), lineno=219, col_offset=32)], Load(), lineno=219, col_offset=26)], lineno=219, col_offset=15), [AugAssign(Name('tokval', Store(), lineno=220, col_offset=16), Add(), Str(' ', lineno=220, col_offset=26), lineno=220, col_offset=16)], [], lineno=219, col_offset=12), If(Compare(Name('toknum', Load(), lineno=223, col_offset=15), [Eq()], [Name('STRING', Load(), lineno=223, col_offset=25)], lineno=223, col_offset=15), [If(Name('prevstring', Load(), lineno=224, col_offset=19), [Assign([Name('tokval', Store(), lineno=225, col_offset=20)], BinOp(Str(' ', lineno=225, col_offset=29), Add(), Name('tokval', Load(), lineno=225, col_offset=35), lineno=225, col_offset=29), lineno=225, col_offset=20)], [], lineno=224, col_offset=16), Assign([Name('prevstring', Store(), lineno=226, col_offset=16)], Name('True', Load(), lineno=226, col_offset=29), lineno=226, col_offset=16)], [Assign([Name('prevstring', Store(), lineno=228, col_offset=16)], Name('False', Load(), lineno=228, col_offset=29), lineno=228, col_offset=16)], lineno=223, col_offset=12), If(Compare(Name('toknum', Load(), lineno=230, col_offset=15), [Eq()], [Name('INDENT', Load(), lineno=230, col_offset=25)], lineno=230, col_offset=15), [Expr(Call(Attribute(Name('indents', Load(), lineno=231, col_offset=16), 'append', Load(), lineno=231, col_offset=16), [Name('tokval', Load(), lineno=231, col_offset=31)], [], None, None, lineno=231, col_offset=16), lineno=231, col_offset=16), Continue( lineno=232, col_offset=16)], [If(Compare(Name('toknum', Load(), lineno=233, col_offset=17), [Eq()], [Name('DEDENT', Load(), lineno=233, col_offset=27)], lineno=233, col_offset=17), [Expr(Call(Attribute(Name('indents', Load(), lineno=234, col_offset=16), 'pop', Load(), lineno=234, col_offset=16), [], [], None, None, lineno=234, col_offset=16), lineno=234, col_offset=16), Continue( lineno=235, col_offset=16)], [If(Compare(Name('toknum', Load(), lineno=236, col_offset=17), [In()], [Tuple([Name('NEWLINE', Load(), lineno=236, col_offset=28), Name('NL', Load(), lineno=236, col_offset=37)], Load(), lineno=236, col_offset=28)], lineno=236, col_offset=17), [Assign([Name('startline', Store(), lineno=237, col_offset=16)], Name('True', Load(), lineno=237, col_offset=28), lineno=237, col_offset=16)], [If(BoolOp(And(), [Name('startline', Load(), lineno=238, col_offset=17), Name('indents', Load(), lineno=238, col_offset=31)], lineno=238, col_offset=17), [Expr(Call(Name('toks_append', Load(), lineno=239, col_offset=16), [Subscript(Name('indents', Load(), lineno=239, col_offset=28), Index(Num(-1, lineno=239, col_offset=37)), Load(), lineno=239, col_offset=28)], [], None, None, lineno=239, col_offset=16), lineno=239, col_offset=16), Assign([Name('startline', Store(), lineno=240, col_offset=16)], Name('False', Load(), lineno=240, col_offset=28), lineno=240, col_offset=16)], [], lineno=238, col_offset=17)], lineno=236, col_offset=17)], lineno=233, col_offset=17)], lineno=230, col_offset=12), Expr(Call(Name('toks_append', Load(), lineno=241, col_offset=12), [Name('tokval', Load(), lineno=241, col_offset=24)], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=12)], [], lineno=216, col_offset=8)], [], lineno=206, col_offset=4)], [], lineno=178, col_offset=0), FunctionDef('untokenize', arguments([Name('iterable', Param(), lineno=243, col_offset=15)], None, None, []), [Expr(Str('Transform tokens back into Python source code.\n\n    Each element returned by the iterable must be a token sequence\n    with at least two elements, a token number and token value.  If\n    only two tokens are passed, the resulting output is poor.\n\n    Round-trip invariant for full input:\n        Untokenized source will match input source exactly\n\n    Round-trip invariant for limited intput:\n        # Output text will tokenize the back to the input\n        t1 = [tok[:2] for tok in generate_tokens(f.readline)]\n        newcode = untokenize(t1)\n        readline = iter(newcode.splitlines(1)).next\n        t2 = [tok[:2] for tok in generate_tokens(readline)]\n        assert t1 == t2\n    ', lineno=260, col_offset=-1), lineno=260, col_offset=-1), Assign([Name('ut', Store(), lineno=261, col_offset=4)], Call(Name('Untokenizer', Load(), lineno=261, col_offset=9), [], [], None, None, lineno=261, col_offset=9), lineno=261, col_offset=4), Return(Call(Attribute(Name('ut', Load(), lineno=262, col_offset=11), 'untokenize', Load(), lineno=262, col_offset=11), [Name('iterable', Load(), lineno=262, col_offset=25)], [], None, None, lineno=262, col_offset=11), lineno=262, col_offset=4)], [], lineno=243, col_offset=0), FunctionDef('generate_tokens', arguments([Name('readline', Param(), lineno=264, col_offset=20)], None, None, []), [Expr(Str('\n    The generate_tokens() generator requires one argment, readline, which\n    must be a callable object which provides the same interface as the\n    readline() method of built-in file objects. Each call to the function\n    should return one line of input as a string.  Alternately, readline\n    can be a callable function terminating with StopIteration:\n        readline = open(myfile).next    # Example of alternate readline\n\n    The generator produces 5-tuples with these members: the token type; the\n    token string; a 2-tuple (srow, scol) of ints specifying the row and\n    column where the token begins in the source; a 2-tuple (erow, ecol) of\n    ints specifying the row and column where the token ends in the source;\n    and the line on which the token was found. The line passed is the\n    logical line; continuation lines are included.\n    ', lineno=279, col_offset=-1), lineno=279, col_offset=-1), Assign([Name('lnum', Store(), lineno=280, col_offset=4), Name('parenlev', Store(), lineno=280, col_offset=11), Name('continued', Store(), lineno=280, col_offset=22)], Num(0, lineno=280, col_offset=34), lineno=280, col_offset=4), Assign([Tuple([Name('namechars', Store(), lineno=281, col_offset=4), Name('numchars', Store(), lineno=281, col_offset=15)], Store(), lineno=281, col_offset=4)], Tuple([BinOp(Attribute(Name('string', Load(), lineno=281, col_offset=26), 'ascii_letters', Load(), lineno=281, col_offset=26), Add(), Str('_', lineno=281, col_offset=49), lineno=281, col_offset=26), Str('0123456789', lineno=281, col_offset=54)], Load(), lineno=281, col_offset=26), lineno=281, col_offset=4), Assign([Tuple([Name('contstr', Store(), lineno=282, col_offset=4), Name('needcont', Store(), lineno=282, col_offset=13)], Store(), lineno=282, col_offset=4)], Tuple([Str('', lineno=282, col_offset=24), Num(0, lineno=282, col_offset=28)], Load(), lineno=282, col_offset=24), lineno=282, col_offset=4), Assign([Name('contline', Store(), lineno=283, col_offset=4)], Name('None', Load(), lineno=283, col_offset=15), lineno=283, col_offset=4), Assign([Name('indents', Store(), lineno=284, col_offset=4)], List([Num(0, lineno=284, col_offset=15)], Load(), lineno=284, col_offset=14), lineno=284, col_offset=4), While(Num(1, lineno=286, col_offset=10), [TryExcept([Assign([Name('line', Store(), lineno=288, col_offset=12)], Call(Name('readline', Load(), lineno=288, col_offset=19), [], [], None, None, lineno=288, col_offset=19), lineno=288, col_offset=12)], [ExceptHandler(Name('StopIteration', Load(), lineno=289, col_offset=15), None, [Assign([Name('line', Store(), lineno=290, col_offset=12)], Str('', lineno=290, col_offset=19), lineno=290, col_offset=12)], lineno=289, col_offset=8)], [], lineno=287, col_offset=8), AugAssign(Name('lnum', Store(), lineno=291, col_offset=8), Add(), Num(1, lineno=291, col_offset=16), lineno=291, col_offset=8), Assign([Tuple([Name('pos', Store(), lineno=292, col_offset=8), Name('max', Store(), lineno=292, col_offset=13)], Store(), lineno=292, col_offset=8)], Tuple([Num(0, lineno=292, col_offset=19), Call(Name('len', Load(), lineno=292, col_offset=22), [Name('line', Load(), lineno=292, col_offset=26)], [], None, None, lineno=292, col_offset=22)], Load(), lineno=292, col_offset=19), lineno=292, col_offset=8), If(Name('contstr', Load(), lineno=294, col_offset=11), [If(UnaryOp(Not(), Name('line', Load(), lineno=295, col_offset=19), lineno=295, col_offset=15), [Raise(Name('TokenError', Load(), lineno=296, col_offset=22), Tuple([Str('EOF in multi-line string', lineno=296, col_offset=35), Name('strstart', Load(), lineno=296, col_offset=63)], Load(), lineno=296, col_offset=35), None, lineno=296, col_offset=16)], [], lineno=295, col_offset=12), Assign([Name('endmatch', Store(), lineno=297, col_offset=12)], Call(Attribute(Name('endprog', Load(), lineno=297, col_offset=23), 'match', Load(), lineno=297, col_offset=23), [Name('line', Load(), lineno=297, col_offset=37)], [], None, None, lineno=297, col_offset=23), lineno=297, col_offset=12), If(Name('endmatch', Load(), lineno=298, col_offset=15), [Assign([Name('pos', Store(), lineno=299, col_offset=16), Name('end', Store(), lineno=299, col_offset=22)], Call(Attribute(Name('endmatch', Load(), lineno=299, col_offset=28), 'end', Load(), lineno=299, col_offset=28), [Num(0, lineno=299, col_offset=41)], [], None, None, lineno=299, col_offset=28), lineno=299, col_offset=16), Expr(Yield(Tuple([Name('STRING', Load(), lineno=300, col_offset=23), BinOp(Name('contstr', Load(), lineno=300, col_offset=31), Add(), Subscript(Name('line', Load(), lineno=300, col_offset=41), Slice(None, Name('end', Load(), lineno=300, col_offset=47), None), Load(), lineno=300, col_offset=41), lineno=300, col_offset=31), Name('strstart', Load(), lineno=301, col_offset=23), Tuple([Name('lnum', Load(), lineno=301, col_offset=34), Name('end', Load(), lineno=301, col_offset=40)], Load(), lineno=301, col_offset=34), BinOp(Name('contline', Load(), lineno=301, col_offset=46), Add(), Name('line', Load(), lineno=301, col_offset=57), lineno=301, col_offset=46)], Load(), lineno=300, col_offset=23), lineno=300, col_offset=16), lineno=300, col_offset=16), Assign([Tuple([Name('contstr', Store(), lineno=302, col_offset=16), Name('needcont', Store(), lineno=302, col_offset=25)], Store(), lineno=302, col_offset=16)], Tuple([Str('', lineno=302, col_offset=36), Num(0, lineno=302, col_offset=40)], Load(), lineno=302, col_offset=36), lineno=302, col_offset=16), Assign([Name('contline', Store(), lineno=303, col_offset=16)], Name('None', Load(), lineno=303, col_offset=27), lineno=303, col_offset=16)], [If(BoolOp(And(), [Name('needcont', Load(), lineno=304, col_offset=17), Compare(Subscript(Name('line', Load(), lineno=304, col_offset=30), Slice(Num(-2, lineno=304, col_offset=36), None, None), Load(), lineno=304, col_offset=30), [NotEq()], [Str('\\\n', lineno=304, col_offset=43)], lineno=304, col_offset=30), Compare(Subscript(Name('line', Load(), lineno=304, col_offset=54), Slice(Num(-3, lineno=304, col_offset=60), None, None), Load(), lineno=304, col_offset=54), [NotEq()], [Str('\\\r\n', lineno=304, col_offset=67)], lineno=304, col_offset=54)], lineno=304, col_offset=17), [Expr(Yield(Tuple([Name('ERRORTOKEN', Load(), lineno=305, col_offset=23), BinOp(Name('contstr', Load(), lineno=305, col_offset=35), Add(), Name('line', Load(), lineno=305, col_offset=45), lineno=305, col_offset=35), Name('strstart', Load(), lineno=306, col_offset=27), Tuple([Name('lnum', Load(), lineno=306, col_offset=38), Call(Name('len', Load(), lineno=306, col_offset=44), [Name('line', Load(), lineno=306, col_offset=48)], [], None, None, lineno=306, col_offset=44)], Load(), lineno=306, col_offset=38), Name('contline', Load(), lineno=306, col_offset=56)], Load(), lineno=305, col_offset=23), lineno=305, col_offset=16), lineno=305, col_offset=16), Assign([Name('contstr', Store(), lineno=307, col_offset=16)], Str('', lineno=307, col_offset=26), lineno=307, col_offset=16), Assign([Name('contline', Store(), lineno=308, col_offset=16)], Name('None', Load(), lineno=308, col_offset=27), lineno=308, col_offset=16), Continue( lineno=309, col_offset=16)], [Assign([Name('contstr', Store(), lineno=311, col_offset=16)], BinOp(Name('contstr', Load(), lineno=311, col_offset=26), Add(), Name('line', Load(), lineno=311, col_offset=36), lineno=311, col_offset=26), lineno=311, col_offset=16), Assign([Name('contline', Store(), lineno=312, col_offset=16)], BinOp(Name('contline', Load(), lineno=312, col_offset=27), Add(), Name('line', Load(), lineno=312, col_offset=38), lineno=312, col_offset=27), lineno=312, col_offset=16), Continue( lineno=313, col_offset=16)], lineno=304, col_offset=17)], lineno=298, col_offset=12)], [If(BoolOp(And(), [Compare(Name('parenlev', Load(), lineno=315, col_offset=13), [Eq()], [Num(0, lineno=315, col_offset=25)], lineno=315, col_offset=13), UnaryOp(Not(), Name('continued', Load(), lineno=315, col_offset=35), lineno=315, col_offset=31)], lineno=315, col_offset=13), [If(UnaryOp(Not(), Name('line', Load(), lineno=316, col_offset=19), lineno=316, col_offset=15), [Break( lineno=316, col_offset=25)], [], lineno=316, col_offset=12), Assign([Name('column', Store(), lineno=317, col_offset=12)], Num(0, lineno=317, col_offset=21), lineno=317, col_offset=12), While(Compare(Name('pos', Load(), lineno=318, col_offset=18), [Lt()], [Name('max', Load(), lineno=318, col_offset=24)], lineno=318, col_offset=18), [If(Compare(Subscript(Name('line', Load(), lineno=319, col_offset=19), Index(Name('pos', Load(), lineno=319, col_offset=24)), Load(), lineno=319, col_offset=19), [Eq()], [Str(' ', lineno=319, col_offset=32)], lineno=319, col_offset=19), [AugAssign(Name('column', Store(), lineno=320, col_offset=20), Add(), Num(1, lineno=320, col_offset=30), lineno=320, col_offset=20)], [If(Compare(Subscript(Name('line', Load(), lineno=321, col_offset=21), Index(Name('pos', Load(), lineno=321, col_offset=26)), Load(), lineno=321, col_offset=21), [Eq()], [Str('\t', lineno=321, col_offset=34)], lineno=321, col_offset=21), [Assign([Name('column', Store(), lineno=322, col_offset=20)], BinOp(BinOp(BinOp(Name('column', Load(), lineno=322, col_offset=30), FloorDiv(), Name('tabsize', Load(), lineno=322, col_offset=38), lineno=322, col_offset=30), Add(), Num(1, lineno=322, col_offset=48), lineno=322, col_offset=30), Mult(), Name('tabsize', Load(), lineno=322, col_offset=51), lineno=322, col_offset=29), lineno=322, col_offset=20)], [If(Compare(Subscript(Name('line', Load(), lineno=323, col_offset=21), Index(Name('pos', Load(), lineno=323, col_offset=26)), Load(), lineno=323, col_offset=21), [Eq()], [Str('\x0c', lineno=323, col_offset=34)], lineno=323, col_offset=21), [Assign([Name('column', Store(), lineno=324, col_offset=20)], Num(0, lineno=324, col_offset=29), lineno=324, col_offset=20)], [Break( lineno=326, col_offset=20)], lineno=323, col_offset=21)], lineno=321, col_offset=21)], lineno=319, col_offset=16), AugAssign(Name('pos', Store(), lineno=327, col_offset=16), Add(), Num(1, lineno=327, col_offset=23), lineno=327, col_offset=16)], [], lineno=318, col_offset=12), If(Compare(Name('pos', Load(), lineno=328, col_offset=15), [Eq()], [Name('max', Load(), lineno=328, col_offset=22)], lineno=328, col_offset=15), [Break( lineno=329, col_offset=16)], [], lineno=328, col_offset=12), If(Compare(Subscript(Name('line', Load(), lineno=331, col_offset=15), Index(Name('pos', Load(), lineno=331, col_offset=20)), Load(), lineno=331, col_offset=15), [In()], [Str('#\r\n', lineno=331, col_offset=28)], lineno=331, col_offset=15), [If(Compare(Subscript(Name('line', Load(), lineno=332, col_offset=19), Index(Name('pos', Load(), lineno=332, col_offset=24)), Load(), lineno=332, col_offset=19), [Eq()], [Str('#', lineno=332, col_offset=32)], lineno=332, col_offset=19), [Assign([Name('comment_token', Store(), lineno=333, col_offset=20)], Call(Attribute(Subscript(Name('line', Load(), lineno=333, col_offset=36), Slice(Name('pos', Load(), lineno=333, col_offset=41), None, None), Load(), lineno=333, col_offset=36), 'rstrip', Load(), lineno=333, col_offset=36), [Str('\r\n', lineno=333, col_offset=54)], [], None, None, lineno=333, col_offset=36), lineno=333, col_offset=20), Assign([Name('nl_pos', Store(), lineno=334, col_offset=20)], BinOp(Name('pos', Load(), lineno=334, col_offset=29), Add(), Call(Name('len', Load(), lineno=334, col_offset=35), [Name('comment_token', Load(), lineno=334, col_offset=39)], [], None, None, lineno=334, col_offset=35), lineno=334, col_offset=29), lineno=334, col_offset=20), Expr(Yield(Tuple([Name('COMMENT', Load(), lineno=335, col_offset=27), Name('comment_token', Load(), lineno=335, col_offset=36), Tuple([Name('lnum', Load(), lineno=336, col_offset=28), Name('pos', Load(), lineno=336, col_offset=34)], Load(), lineno=336, col_offset=28), Tuple([Name('lnum', Load(), lineno=336, col_offset=41), BinOp(Name('pos', Load(), lineno=336, col_offset=47), Add(), Call(Name('len', Load(), lineno=336, col_offset=53), [Name('comment_token', Load(), lineno=336, col_offset=57)], [], None, None, lineno=336, col_offset=53), lineno=336, col_offset=47)], Load(), lineno=336, col_offset=41), Name('line', Load(), lineno=336, col_offset=74)], Load(), lineno=335, col_offset=27), lineno=335, col_offset=20), lineno=335, col_offset=20), Expr(Yield(Tuple([Name('NL', Load(), lineno=337, col_offset=27), Subscript(Name('line', Load(), lineno=337, col_offset=31), Slice(Name('nl_pos', Load(), lineno=337, col_offset=36), None, None), Load(), lineno=337, col_offset=31), Tuple([Name('lnum', Load(), lineno=338, col_offset=28), Name('nl_pos', Load(), lineno=338, col_offset=34)], Load(), lineno=338, col_offset=28), Tuple([Name('lnum', Load(), lineno=338, col_offset=44), Call(Name('len', Load(), lineno=338, col_offset=50), [Name('line', Load(), lineno=338, col_offset=54)], [], None, None, lineno=338, col_offset=50)], Load(), lineno=338, col_offset=44), Name('line', Load(), lineno=338, col_offset=62)], Load(), lineno=337, col_offset=27), lineno=337, col_offset=20), lineno=337, col_offset=20)], [Expr(Yield(Tuple([Subscript(Tuple([Name('NL', Load(), lineno=340, col_offset=28), Name('COMMENT', Load(), lineno=340, col_offset=32)], Load(), lineno=340, col_offset=28), Index(Compare(Subscript(Name('line', Load(), lineno=340, col_offset=41), Index(Name('pos', Load(), lineno=340, col_offset=46)), Load(), lineno=340, col_offset=41), [Eq()], [Str('#', lineno=340, col_offset=54)], lineno=340, col_offset=41)), Load(), lineno=340, col_offset=28), Subscript(Name('line', Load(), lineno=340, col_offset=60), Slice(Name('pos', Load(), lineno=340, col_offset=65), None, None), Load(), lineno=340, col_offset=60), Tuple([Name('lnum', Load(), lineno=341, col_offset=28), Name('pos', Load(), lineno=341, col_offset=34)], Load(), lineno=341, col_offset=28), Tuple([Name('lnum', Load(), lineno=341, col_offset=41), Call(Name('len', Load(), lineno=341, col_offset=47), [Name('line', Load(), lineno=341, col_offset=51)], [], None, None, lineno=341, col_offset=47)], Load(), lineno=341, col_offset=41), Name('line', Load(), lineno=341, col_offset=59)], Load(), lineno=340, col_offset=27), lineno=340, col_offset=20), lineno=340, col_offset=20)], lineno=332, col_offset=16), Continue( lineno=342, col_offset=16)], [], lineno=331, col_offset=12), If(Compare(Name('column', Load(), lineno=344, col_offset=15), [Gt()], [Subscript(Name('indents', Load(), lineno=344, col_offset=24), Index(Num(-1, lineno=344, col_offset=33)), Load(), lineno=344, col_offset=24)], lineno=344, col_offset=15), [Expr(Call(Attribute(Name('indents', Load(), lineno=345, col_offset=16), 'append', Load(), lineno=345, col_offset=16), [Name('column', Load(), lineno=345, col_offset=31)], [], None, None, lineno=345, col_offset=16), lineno=345, col_offset=16), Expr(Yield(Tuple([Name('INDENT', Load(), lineno=346, col_offset=23), Subscript(Name('line', Load(), lineno=346, col_offset=31), Slice(None, Name('pos', Load(), lineno=346, col_offset=37), None), Load(), lineno=346, col_offset=31), Tuple([Name('lnum', Load(), lineno=346, col_offset=44), Num(0, lineno=346, col_offset=50)], Load(), lineno=346, col_offset=44), Tuple([Name('lnum', Load(), lineno=346, col_offset=55), Name('pos', Load(), lineno=346, col_offset=61)], Load(), lineno=346, col_offset=55), Name('line', Load(), lineno=346, col_offset=67)], Load(), lineno=346, col_offset=23), lineno=346, col_offset=16), lineno=346, col_offset=16)], [], lineno=344, col_offset=12), While(Compare(Name('column', Load(), lineno=347, col_offset=18), [Lt()], [Subscript(Name('indents', Load(), lineno=347, col_offset=27), Index(Num(-1, lineno=347, col_offset=36)), Load(), lineno=347, col_offset=27)], lineno=347, col_offset=18), [If(Compare(Name('column', Load(), lineno=348, col_offset=19), [NotIn()], [Name('indents', Load(), lineno=348, col_offset=33)], lineno=348, col_offset=19), [Raise(Call(Name('IndentationError', Load(), lineno=349, col_offset=26), [Str('unindent does not match any outer indentation level', lineno=350, col_offset=24), Tuple([Str('<tokenize>', lineno=351, col_offset=25), Name('lnum', Load(), lineno=351, col_offset=39), Name('pos', Load(), lineno=351, col_offset=45), Name('line', Load(), lineno=351, col_offset=50)], Load(), lineno=351, col_offset=25)], [], None, None, lineno=349, col_offset=26), None, None, lineno=349, col_offset=20)], [], lineno=348, col_offset=16), Assign([Name('indents', Store(), lineno=352, col_offset=16)], Subscript(Name('indents', Load(), lineno=352, col_offset=26), Slice(None, Num(-1, lineno=352, col_offset=36), None), Load(), lineno=352, col_offset=26), lineno=352, col_offset=16), Expr(Yield(Tuple([Name('DEDENT', Load(), lineno=353, col_offset=23), Str('', lineno=353, col_offset=31), Tuple([Name('lnum', Load(), lineno=353, col_offset=36), Name('pos', Load(), lineno=353, col_offset=42)], Load(), lineno=353, col_offset=36), Tuple([Name('lnum', Load(), lineno=353, col_offset=49), Name('pos', Load(), lineno=353, col_offset=55)], Load(), lineno=353, col_offset=49), Name('line', Load(), lineno=353, col_offset=61)], Load(), lineno=353, col_offset=23), lineno=353, col_offset=16), lineno=353, col_offset=16)], [], lineno=347, col_offset=12)], [If(UnaryOp(Not(), Name('line', Load(), lineno=356, col_offset=19), lineno=356, col_offset=15), [Raise(Name('TokenError', Load(), lineno=357, col_offset=22), Tuple([Str('EOF in multi-line statement', lineno=357, col_offset=35), Tuple([Name('lnum', Load(), lineno=357, col_offset=67), Num(0, lineno=357, col_offset=73)], Load(), lineno=357, col_offset=67)], Load(), lineno=357, col_offset=35), None, lineno=357, col_offset=16)], [], lineno=356, col_offset=12), Assign([Name('continued', Store(), lineno=358, col_offset=12)], Num(0, lineno=358, col_offset=24), lineno=358, col_offset=12)], lineno=315, col_offset=13)], lineno=294, col_offset=8), While(Compare(Name('pos', Load(), lineno=360, col_offset=14), [Lt()], [Name('max', Load(), lineno=360, col_offset=20)], lineno=360, col_offset=14), [Assign([Name('pseudomatch', Store(), lineno=361, col_offset=12)], Call(Attribute(Name('pseudoprog', Load(), lineno=361, col_offset=26), 'match', Load(), lineno=361, col_offset=26), [Name('line', Load(), lineno=361, col_offset=43), Name('pos', Load(), lineno=361, col_offset=49)], [], None, None, lineno=361, col_offset=26), lineno=361, col_offset=12), If(Name('pseudomatch', Load(), lineno=362, col_offset=15), [Assign([Tuple([Name('start', Store(), lineno=363, col_offset=16), Name('end', Store(), lineno=363, col_offset=23)], Store(), lineno=363, col_offset=16)], Call(Attribute(Name('pseudomatch', Load(), lineno=363, col_offset=29), 'span', Load(), lineno=363, col_offset=29), [Num(1, lineno=363, col_offset=46)], [], None, None, lineno=363, col_offset=29), lineno=363, col_offset=16), Assign([Tuple([Name('spos', Store(), lineno=364, col_offset=16), Name('epos', Store(), lineno=364, col_offset=22), Name('pos', Store(), lineno=364, col_offset=28)], Store(), lineno=364, col_offset=16)], Tuple([Tuple([Name('lnum', Load(), lineno=364, col_offset=35), Name('start', Load(), lineno=364, col_offset=41)], Load(), lineno=364, col_offset=35), Tuple([Name('lnum', Load(), lineno=364, col_offset=50), Name('end', Load(), lineno=364, col_offset=56)], Load(), lineno=364, col_offset=50), Name('end', Load(), lineno=364, col_offset=62)], Load(), lineno=364, col_offset=34), lineno=364, col_offset=16), Assign([Tuple([Name('token', Store(), lineno=365, col_offset=16), Name('initial', Store(), lineno=365, col_offset=23)], Store(), lineno=365, col_offset=16)], Tuple([Subscript(Name('line', Load(), lineno=365, col_offset=33), Slice(Name('start', Load(), lineno=365, col_offset=38), Name('end', Load(), lineno=365, col_offset=44), None), Load(), lineno=365, col_offset=33), Subscript(Name('line', Load(), lineno=365, col_offset=50), Index(Name('start', Load(), lineno=365, col_offset=55)), Load(), lineno=365, col_offset=50)], Load(), lineno=365, col_offset=33), lineno=365, col_offset=16), If(BoolOp(Or(), [Compare(Name('initial', Load(), lineno=367, col_offset=19), [In()], [Name('numchars', Load(), lineno=367, col_offset=30)], lineno=367, col_offset=19), BoolOp(And(), [Compare(Name('initial', Load(), lineno=368, col_offset=20), [Eq()], [Str('.', lineno=368, col_offset=31)], lineno=368, col_offset=20), Compare(Name('token', Load(), lineno=368, col_offset=39), [NotEq()], [Str('.', lineno=368, col_offset=48)], lineno=368, col_offset=39)], lineno=368, col_offset=20)], lineno=367, col_offset=19), [Expr(Yield(Tuple([Name('NUMBER', Load(), lineno=369, col_offset=27), Name('token', Load(), lineno=369, col_offset=35), Name('spos', Load(), lineno=369, col_offset=42), Name('epos', Load(), lineno=369, col_offset=48), Name('line', Load(), lineno=369, col_offset=54)], Load(), lineno=369, col_offset=27), lineno=369, col_offset=20), lineno=369, col_offset=20)], [If(Compare(Name('initial', Load(), lineno=370, col_offset=21), [In()], [Str('\r\n', lineno=370, col_offset=32)], lineno=370, col_offset=21), [Expr(Yield(Tuple([IfExp(Compare(Name('parenlev', Load(), lineno=371, col_offset=33), [Gt()], [Num(0, lineno=371, col_offset=44)], lineno=371, col_offset=33), Name('NL', Load(), lineno=371, col_offset=27), Name('NEWLINE', Load(), lineno=371, col_offset=51), lineno=371, col_offset=27), Name('token', Load(), lineno=372, col_offset=27), Name('spos', Load(), lineno=372, col_offset=34), Name('epos', Load(), lineno=372, col_offset=40), Name('line', Load(), lineno=372, col_offset=46)], Load(), lineno=371, col_offset=27), lineno=371, col_offset=20), lineno=371, col_offset=20)], [If(Compare(Name('initial', Load(), lineno=373, col_offset=21), [Eq()], [Str('#', lineno=373, col_offset=32)], lineno=373, col_offset=21), [Assert(UnaryOp(Not(), Call(Attribute(Name('token', Load(), lineno=374, col_offset=31), 'endswith', Load(), lineno=374, col_offset=31), [Str('\n', lineno=374, col_offset=46)], [], None, None, lineno=374, col_offset=31), lineno=374, col_offset=27), None, lineno=374, col_offset=20), Expr(Yield(Tuple([Name('COMMENT', Load(), lineno=375, col_offset=27), Name('token', Load(), lineno=375, col_offset=36), Name('spos', Load(), lineno=375, col_offset=43), Name('epos', Load(), lineno=375, col_offset=49), Name('line', Load(), lineno=375, col_offset=55)], Load(), lineno=375, col_offset=27), lineno=375, col_offset=20), lineno=375, col_offset=20)], [If(Compare(Name('token', Load(), lineno=376, col_offset=21), [In()], [Name('triple_quoted', Load(), lineno=376, col_offset=30)], lineno=376, col_offset=21), [Assign([Name('endprog', Store(), lineno=377, col_offset=20)], Subscript(Name('endprogs', Load(), lineno=377, col_offset=30), Index(Name('token', Load(), lineno=377, col_offset=39)), Load(), lineno=377, col_offset=30), lineno=377, col_offset=20), Assign([Name('endmatch', Store(), lineno=378, col_offset=20)], Call(Attribute(Name('endprog', Load(), lineno=378, col_offset=31), 'match', Load(), lineno=378, col_offset=31), [Name('line', Load(), lineno=378, col_offset=45), Name('pos', Load(), lineno=378, col_offset=51)], [], None, None, lineno=378, col_offset=31), lineno=378, col_offset=20), If(Name('endmatch', Load(), lineno=379, col_offset=23), [Assign([Name('pos', Store(), lineno=380, col_offset=24)], Call(Attribute(Name('endmatch', Load(), lineno=380, col_offset=30), 'end', Load(), lineno=380, col_offset=30), [Num(0, lineno=380, col_offset=43)], [], None, None, lineno=380, col_offset=30), lineno=380, col_offset=24), Assign([Name('token', Store(), lineno=381, col_offset=24)], Subscript(Name('line', Load(), lineno=381, col_offset=32), Slice(Name('start', Load(), lineno=381, col_offset=37), Name('pos', Load(), lineno=381, col_offset=43), None), Load(), lineno=381, col_offset=32), lineno=381, col_offset=24), Expr(Yield(Tuple([Name('STRING', Load(), lineno=382, col_offset=31), Name('token', Load(), lineno=382, col_offset=39), Name('spos', Load(), lineno=382, col_offset=46), Tuple([Name('lnum', Load(), lineno=382, col_offset=53), Name('pos', Load(), lineno=382, col_offset=59)], Load(), lineno=382, col_offset=53), Name('line', Load(), lineno=382, col_offset=65)], Load(), lineno=382, col_offset=31), lineno=382, col_offset=24), lineno=382, col_offset=24)], [Assign([Name('strstart', Store(), lineno=384, col_offset=24)], Tuple([Name('lnum', Load(), lineno=384, col_offset=36), Name('start', Load(), lineno=384, col_offset=42)], Load(), lineno=384, col_offset=36), lineno=384, col_offset=24), Assign([Name('contstr', Store(), lineno=385, col_offset=24)], Subscript(Name('line', Load(), lineno=385, col_offset=34), Slice(Name('start', Load(), lineno=385, col_offset=39), None, None), Load(), lineno=385, col_offset=34), lineno=385, col_offset=24), Assign([Name('contline', Store(), lineno=386, col_offset=24)], Name('line', Load(), lineno=386, col_offset=35), lineno=386, col_offset=24), Break( lineno=387, col_offset=24)], lineno=379, col_offset=20)], [If(BoolOp(Or(), [Compare(Name('initial', Load(), lineno=388, col_offset=21), [In()], [Name('single_quoted', Load(), lineno=388, col_offset=32)], lineno=388, col_offset=21), Compare(Subscript(Name('token', Load(), lineno=389, col_offset=20), Slice(None, Num(2, lineno=389, col_offset=27), None), Load(), lineno=389, col_offset=20), [In()], [Name('single_quoted', Load(), lineno=389, col_offset=33)], lineno=389, col_offset=20), Compare(Subscript(Name('token', Load(), lineno=390, col_offset=20), Slice(None, Num(3, lineno=390, col_offset=27), None), Load(), lineno=390, col_offset=20), [In()], [Name('single_quoted', Load(), lineno=390, col_offset=33)], lineno=390, col_offset=20)], lineno=388, col_offset=21), [If(Compare(Subscript(Name('token', Load(), lineno=391, col_offset=23), Index(Num(-1, lineno=391, col_offset=30)), Load(), lineno=391, col_offset=23), [Eq()], [Str('\n', lineno=391, col_offset=36)], lineno=391, col_offset=23), [Assign([Name('strstart', Store(), lineno=392, col_offset=24)], Tuple([Name('lnum', Load(), lineno=392, col_offset=36), Name('start', Load(), lineno=392, col_offset=42)], Load(), lineno=392, col_offset=36), lineno=392, col_offset=24), Assign([Name('endprog', Store(), lineno=393, col_offset=24)], BoolOp(Or(), [Subscript(Name('endprogs', Load(), lineno=393, col_offset=35), Index(Name('initial', Load(), lineno=393, col_offset=44)), Load(), lineno=393, col_offset=35), Subscript(Name('endprogs', Load(), lineno=393, col_offset=56), Index(Subscript(Name('token', Load(), lineno=393, col_offset=65), Index(Num(1, lineno=393, col_offset=71)), Load(), lineno=393, col_offset=65)), Load(), lineno=393, col_offset=56), Subscript(Name('endprogs', Load(), lineno=394, col_offset=35), Index(Subscript(Name('token', Load(), lineno=394, col_offset=44), Index(Num(2, lineno=394, col_offset=50)), Load(), lineno=394, col_offset=44)), Load(), lineno=394, col_offset=35)], lineno=393, col_offset=35), lineno=393, col_offset=24), Assign([Tuple([Name('contstr', Store(), lineno=395, col_offset=24), Name('needcont', Store(), lineno=395, col_offset=33)], Store(), lineno=395, col_offset=24)], Tuple([Subscript(Name('line', Load(), lineno=395, col_offset=44), Slice(Name('start', Load(), lineno=395, col_offset=49), None, None), Load(), lineno=395, col_offset=44), Num(1, lineno=395, col_offset=58)], Load(), lineno=395, col_offset=44), lineno=395, col_offset=24), Assign([Name('contline', Store(), lineno=396, col_offset=24)], Name('line', Load(), lineno=396, col_offset=35), lineno=396, col_offset=24), Break( lineno=397, col_offset=24)], [Expr(Yield(Tuple([Name('STRING', Load(), lineno=399, col_offset=31), Name('token', Load(), lineno=399, col_offset=39), Name('spos', Load(), lineno=399, col_offset=46), Name('epos', Load(), lineno=399, col_offset=52), Name('line', Load(), lineno=399, col_offset=58)], Load(), lineno=399, col_offset=31), lineno=399, col_offset=24), lineno=399, col_offset=24)], lineno=391, col_offset=20)], [If(Compare(Name('initial', Load(), lineno=400, col_offset=21), [In()], [Name('namechars', Load(), lineno=400, col_offset=32)], lineno=400, col_offset=21), [Expr(Yield(Tuple([Name('NAME', Load(), lineno=401, col_offset=27), Name('token', Load(), lineno=401, col_offset=33), Name('spos', Load(), lineno=401, col_offset=40), Name('epos', Load(), lineno=401, col_offset=46), Name('line', Load(), lineno=401, col_offset=52)], Load(), lineno=401, col_offset=27), lineno=401, col_offset=20), lineno=401, col_offset=20)], [If(Compare(Name('initial', Load(), lineno=402, col_offset=21), [Eq()], [Str('\\', lineno=402, col_offset=32)], lineno=402, col_offset=21), [Assign([Name('continued', Store(), lineno=403, col_offset=20)], Num(1, lineno=403, col_offset=32), lineno=403, col_offset=20)], [If(Compare(Name('initial', Load(), lineno=405, col_offset=23), [In()], [Str('([{', lineno=405, col_offset=34)], lineno=405, col_offset=23), [AugAssign(Name('parenlev', Store(), lineno=406, col_offset=24), Add(), Num(1, lineno=406, col_offset=36), lineno=406, col_offset=24)], [If(Compare(Name('initial', Load(), lineno=407, col_offset=25), [In()], [Str(')]}', lineno=407, col_offset=36)], lineno=407, col_offset=25), [AugAssign(Name('parenlev', Store(), lineno=408, col_offset=24), Sub(), Num(1, lineno=408, col_offset=36), lineno=408, col_offset=24)], [], lineno=407, col_offset=25)], lineno=405, col_offset=20), Expr(Yield(Tuple([Name('OP', Load(), lineno=409, col_offset=27), Name('token', Load(), lineno=409, col_offset=31), Name('spos', Load(), lineno=409, col_offset=38), Name('epos', Load(), lineno=409, col_offset=44), Name('line', Load(), lineno=409, col_offset=50)], Load(), lineno=409, col_offset=27), lineno=409, col_offset=20), lineno=409, col_offset=20)], lineno=402, col_offset=21)], lineno=400, col_offset=21)], lineno=388, col_offset=21)], lineno=376, col_offset=21)], lineno=373, col_offset=21)], lineno=370, col_offset=21)], lineno=367, col_offset=16)], [Expr(Yield(Tuple([Name('ERRORTOKEN', Load(), lineno=411, col_offset=23), Subscript(Name('line', Load(), lineno=411, col_offset=35), Index(Name('pos', Load(), lineno=411, col_offset=40)), Load(), lineno=411, col_offset=35), Tuple([Name('lnum', Load(), lineno=412, col_offset=28), Name('pos', Load(), lineno=412, col_offset=34)], Load(), lineno=412, col_offset=28), Tuple([Name('lnum', Load(), lineno=412, col_offset=41), BinOp(Name('pos', Load(), lineno=412, col_offset=47), Add(), Num(1, lineno=412, col_offset=51), lineno=412, col_offset=47)], Load(), lineno=412, col_offset=41), Name('line', Load(), lineno=412, col_offset=55)], Load(), lineno=411, col_offset=23), lineno=411, col_offset=16), lineno=411, col_offset=16), AugAssign(Name('pos', Store(), lineno=413, col_offset=16), Add(), Num(1, lineno=413, col_offset=23), lineno=413, col_offset=16)], lineno=362, col_offset=12)], [], lineno=360, col_offset=8)], [], lineno=286, col_offset=4), For(Name('indent', Store(), lineno=415, col_offset=8), Subscript(Name('indents', Load(), lineno=415, col_offset=18), Slice(Num(1, lineno=415, col_offset=26), None, None), Load(), lineno=415, col_offset=18), [Expr(Yield(Tuple([Name('DEDENT', Load(), lineno=416, col_offset=15), Str('', lineno=416, col_offset=23), Tuple([Name('lnum', Load(), lineno=416, col_offset=28), Num(0, lineno=416, col_offset=34)], Load(), lineno=416, col_offset=28), Tuple([Name('lnum', Load(), lineno=416, col_offset=39), Num(0, lineno=416, col_offset=45)], Load(), lineno=416, col_offset=39), Str('', lineno=416, col_offset=49)], Load(), lineno=416, col_offset=15), lineno=416, col_offset=8), lineno=416, col_offset=8)], [], lineno=415, col_offset=4), Expr(Yield(Tuple([Name('ENDMARKER', Load(), lineno=417, col_offset=11), Str('', lineno=417, col_offset=22), Tuple([Name('lnum', Load(), lineno=417, col_offset=27), Num(0, lineno=417, col_offset=33)], Load(), lineno=417, col_offset=27), Tuple([Name('lnum', Load(), lineno=417, col_offset=38), Num(0, lineno=417, col_offset=44)], Load(), lineno=417, col_offset=38), Str('', lineno=417, col_offset=48)], Load(), lineno=417, col_offset=11), lineno=417, col_offset=4), lineno=417, col_offset=4)], [], lineno=264, col_offset=0), If(Compare(Name('__name__', Load(), lineno=419, col_offset=3), [Eq()], [Str('__main__', lineno=419, col_offset=15)], lineno=419, col_offset=3), [Import([alias('sys', None)], lineno=420, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=421, col_offset=7), [Attribute(Name('sys', Load(), lineno=421, col_offset=11), 'argv', Load(), lineno=421, col_offset=11)], [], None, None, lineno=421, col_offset=7), [Gt()], [Num(1, lineno=421, col_offset=23)], lineno=421, col_offset=7), [Expr(Call(Name('tokenize', Load(), lineno=422, col_offset=8), [Attribute(Call(Name('open', Load(), lineno=422, col_offset=17), [Subscript(Attribute(Name('sys', Load(), lineno=422, col_offset=22), 'argv', Load(), lineno=422, col_offset=22), Index(Num(1, lineno=422, col_offset=31)), Load(), lineno=422, col_offset=22)], [], None, None, lineno=422, col_offset=17), 'readline', Load(), lineno=422, col_offset=17)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8)], [Expr(Call(Name('tokenize', Load(), lineno=424, col_offset=8), [Attribute(Attribute(Name('sys', Load(), lineno=424, col_offset=17), 'stdin', Load(), lineno=424, col_offset=17), 'readline', Load(), lineno=424, col_offset=17)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8)], lineno=421, col_offset=4)], [], lineno=419, col_offset=0)])
