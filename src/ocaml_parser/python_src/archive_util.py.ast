Module([Expr(Str('distutils.archive_util\n\nUtility functions for creating archive files (tarballs, zip files,\nthat sort of thing).', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=6, col_offset=0)], Str('$Id: archive_util.py 75659 2009-10-24 13:29:44Z tarek.ziade $', lineno=6, col_offset=15), lineno=6, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), ImportFrom('warnings', [alias('warn', None)], 0, lineno=9, col_offset=0), Import([alias('sys', None)], lineno=10, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsExecError', None)], 0, lineno=12, col_offset=0), ImportFrom('distutils.spawn', [alias('spawn', None)], 0, lineno=13, col_offset=0), ImportFrom('distutils.dir_util', [alias('mkpath', None)], 0, lineno=14, col_offset=0), ImportFrom('distutils', [alias('log', None)], 0, lineno=15, col_offset=0), TryExcept([ImportFrom('pwd', [alias('getpwnam', None)], 0, lineno=18, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=19, col_offset=7), None, [Assign([Name('getpwnam', Store(), lineno=20, col_offset=4)], Name('None', Load(), lineno=20, col_offset=15), lineno=20, col_offset=4)], lineno=19, col_offset=0)], [], lineno=17, col_offset=0), TryExcept([ImportFrom('grp', [alias('getgrnam', None)], 0, lineno=23, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=24, col_offset=7), None, [Assign([Name('getgrnam', Store(), lineno=25, col_offset=4)], Name('None', Load(), lineno=25, col_offset=15), lineno=25, col_offset=4)], lineno=24, col_offset=0)], [], lineno=22, col_offset=0), FunctionDef('_get_gid', arguments([Name('name', Param(), lineno=27, col_offset=13)], None, None, []), [Expr(Str('Returns a gid, given a group name.', lineno=28, col_offset=4), lineno=28, col_offset=4), If(BoolOp(Or(), [Compare(Name('getgrnam', Load(), lineno=29, col_offset=7), [Is()], [Name('None', Load(), lineno=29, col_offset=19)], lineno=29, col_offset=7), Compare(Name('name', Load(), lineno=29, col_offset=27), [Is()], [Name('None', Load(), lineno=29, col_offset=35)], lineno=29, col_offset=27)], lineno=29, col_offset=7), [Return(Name('None', Load(), lineno=30, col_offset=15), lineno=30, col_offset=8)], [], lineno=29, col_offset=4), TryExcept([Assign([Name('result', Store(), lineno=32, col_offset=8)], Call(Name('getgrnam', Load(), lineno=32, col_offset=17), [Name('name', Load(), lineno=32, col_offset=26)], [], None, None, lineno=32, col_offset=17), lineno=32, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=33, col_offset=11), None, [Assign([Name('result', Store(), lineno=34, col_offset=8)], Name('None', Load(), lineno=34, col_offset=17), lineno=34, col_offset=8)], lineno=33, col_offset=4)], [], lineno=31, col_offset=4), If(Compare(Name('result', Load(), lineno=35, col_offset=7), [IsNot()], [Name('None', Load(), lineno=35, col_offset=21)], lineno=35, col_offset=7), [Return(Subscript(Name('result', Load(), lineno=36, col_offset=15), Index(Num(2, lineno=36, col_offset=22)), Load(), lineno=36, col_offset=15), lineno=36, col_offset=8)], [], lineno=35, col_offset=4), Return(Name('None', Load(), lineno=37, col_offset=11), lineno=37, col_offset=4)], [], lineno=27, col_offset=0), FunctionDef('_get_uid', arguments([Name('name', Param(), lineno=39, col_offset=13)], None, None, []), [Expr(Str('Returns an uid, given a user name.', lineno=40, col_offset=4), lineno=40, col_offset=4), If(BoolOp(Or(), [Compare(Name('getpwnam', Load(), lineno=41, col_offset=7), [Is()], [Name('None', Load(), lineno=41, col_offset=19)], lineno=41, col_offset=7), Compare(Name('name', Load(), lineno=41, col_offset=27), [Is()], [Name('None', Load(), lineno=41, col_offset=35)], lineno=41, col_offset=27)], lineno=41, col_offset=7), [Return(Name('None', Load(), lineno=42, col_offset=15), lineno=42, col_offset=8)], [], lineno=41, col_offset=4), TryExcept([Assign([Name('result', Store(), lineno=44, col_offset=8)], Call(Name('getpwnam', Load(), lineno=44, col_offset=17), [Name('name', Load(), lineno=44, col_offset=26)], [], None, None, lineno=44, col_offset=17), lineno=44, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=45, col_offset=11), None, [Assign([Name('result', Store(), lineno=46, col_offset=8)], Name('None', Load(), lineno=46, col_offset=17), lineno=46, col_offset=8)], lineno=45, col_offset=4)], [], lineno=43, col_offset=4), If(Compare(Name('result', Load(), lineno=47, col_offset=7), [IsNot()], [Name('None', Load(), lineno=47, col_offset=21)], lineno=47, col_offset=7), [Return(Subscript(Name('result', Load(), lineno=48, col_offset=15), Index(Num(2, lineno=48, col_offset=22)), Load(), lineno=48, col_offset=15), lineno=48, col_offset=8)], [], lineno=47, col_offset=4), Return(Name('None', Load(), lineno=49, col_offset=11), lineno=49, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('make_tarball', arguments([Name('base_name', Param(), lineno=51, col_offset=17), Name('base_dir', Param(), lineno=51, col_offset=28), Name('compress', Param(), lineno=51, col_offset=38), Name('verbose', Param(), lineno=51, col_offset=55), Name('dry_run', Param(), lineno=51, col_offset=66), Name('owner', Param(), lineno=52, col_offset=17), Name('group', Param(), lineno=52, col_offset=29)], None, None, [Str('gzip', lineno=51, col_offset=47), Num(0, lineno=51, col_offset=63), Num(0, lineno=51, col_offset=74), Name('None', Load(), lineno=52, col_offset=23), Name('None', Load(), lineno=52, col_offset=35)]), [Expr(Str('Create a (possibly compressed) tar file from all the files under\n    \'base_dir\'.\n\n    \'compress\' must be "gzip" (the default), "compress", "bzip2", or None.\n    (compress will be deprecated in Python 3.2)\n\n    \'owner\' and \'group\' can be used to define an owner and a group for the\n    archive that is being built. If not provided, the current owner and group\n    will be used.\n\n    The output tar file will be named \'base_dir\' +  ".tar", possibly plus\n    the appropriate compression extension (".gz", ".bz2" or ".Z").\n\n    Returns the output filename.\n    ', lineno=67, col_offset=-1), lineno=67, col_offset=-1), Assign([Name('tar_compression', Store(), lineno=68, col_offset=4)], Dict([Str('gzip', lineno=68, col_offset=23), Str('bzip2', lineno=68, col_offset=37), Name('None', Load(), lineno=68, col_offset=53), Str('compress', lineno=68, col_offset=63)], [Str('gz', lineno=68, col_offset=31), Str('bz2', lineno=68, col_offset=46), Str('', lineno=68, col_offset=59), Str('', lineno=68, col_offset=75)], lineno=68, col_offset=22), lineno=68, col_offset=4), Assign([Name('compress_ext', Store(), lineno=69, col_offset=4)], Dict([Str('gzip', lineno=69, col_offset=20), Str('bzip2', lineno=69, col_offset=35), Str('compress', lineno=69, col_offset=52)], [Str('.gz', lineno=69, col_offset=28), Str('.bz2', lineno=69, col_offset=44), Str('.Z', lineno=69, col_offset=64)], lineno=69, col_offset=19), lineno=69, col_offset=4), If(BoolOp(And(), [Compare(Name('compress', Load(), lineno=72, col_offset=7), [IsNot()], [Name('None', Load(), lineno=72, col_offset=23)], lineno=72, col_offset=7), Compare(Name('compress', Load(), lineno=72, col_offset=32), [NotIn()], [Call(Attribute(Name('compress_ext', Load(), lineno=72, col_offset=48), 'keys', Load(), lineno=72, col_offset=48), [], [], None, None, lineno=72, col_offset=48)], lineno=72, col_offset=32)], lineno=72, col_offset=7), [Raise(Name('ValueError', Load(), lineno=73, col_offset=14), Str("bad value for 'compress': must be None, 'gzip', 'bzip2' or 'compress'", lineno=74, col_offset=15), None, lineno=73, col_offset=8)], [], lineno=72, col_offset=4), Assign([Name('archive_name', Store(), lineno=77, col_offset=4)], BinOp(Name('base_name', Load(), lineno=77, col_offset=19), Add(), Str('.tar', lineno=77, col_offset=31), lineno=77, col_offset=19), lineno=77, col_offset=4), If(Compare(Name('compress', Load(), lineno=78, col_offset=7), [NotEq()], [Str('compress', lineno=78, col_offset=19)], lineno=78, col_offset=7), [AugAssign(Name('archive_name', Store(), lineno=79, col_offset=8), Add(), Call(Attribute(Name('compress_ext', Load(), lineno=79, col_offset=24), 'get', Load(), lineno=79, col_offset=24), [Name('compress', Load(), lineno=79, col_offset=41), Str('', lineno=79, col_offset=51)], [], None, None, lineno=79, col_offset=24), lineno=79, col_offset=8)], [], lineno=78, col_offset=4), Expr(Call(Name('mkpath', Load(), lineno=81, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=81, col_offset=11), 'path', Load(), lineno=81, col_offset=11), 'dirname', Load(), lineno=81, col_offset=11), [Name('archive_name', Load(), lineno=81, col_offset=27)], [], None, None, lineno=81, col_offset=11)], [keyword('dry_run', Name('dry_run', Load(), lineno=81, col_offset=50))], None, None, lineno=81, col_offset=4), lineno=81, col_offset=4), Import([alias('tarfile', None)], lineno=84, col_offset=4), Expr(Call(Attribute(Name('log', Load(), lineno=86, col_offset=4), 'info', Load(), lineno=86, col_offset=4), [Str('Creating tar archive', lineno=86, col_offset=13)], [], None, None, lineno=86, col_offset=4), lineno=86, col_offset=4), Assign([Name('uid', Store(), lineno=88, col_offset=4)], Call(Name('_get_uid', Load(), lineno=88, col_offset=10), [Name('owner', Load(), lineno=88, col_offset=19)], [], None, None, lineno=88, col_offset=10), lineno=88, col_offset=4), Assign([Name('gid', Store(), lineno=89, col_offset=4)], Call(Name('_get_gid', Load(), lineno=89, col_offset=10), [Name('group', Load(), lineno=89, col_offset=19)], [], None, None, lineno=89, col_offset=10), lineno=89, col_offset=4), FunctionDef('_set_uid_gid', arguments([Name('tarinfo', Param(), lineno=91, col_offset=21)], None, None, []), [If(Compare(Name('gid', Load(), lineno=92, col_offset=11), [IsNot()], [Name('None', Load(), lineno=92, col_offset=22)], lineno=92, col_offset=11), [Assign([Attribute(Name('tarinfo', Load(), lineno=93, col_offset=12), 'gid', Store(), lineno=93, col_offset=12)], Name('gid', Load(), lineno=93, col_offset=26), lineno=93, col_offset=12), Assign([Attribute(Name('tarinfo', Load(), lineno=94, col_offset=12), 'gname', Store(), lineno=94, col_offset=12)], Name('group', Load(), lineno=94, col_offset=28), lineno=94, col_offset=12)], [], lineno=92, col_offset=8), If(Compare(Name('uid', Load(), lineno=95, col_offset=11), [IsNot()], [Name('None', Load(), lineno=95, col_offset=22)], lineno=95, col_offset=11), [Assign([Attribute(Name('tarinfo', Load(), lineno=96, col_offset=12), 'uid', Store(), lineno=96, col_offset=12)], Name('uid', Load(), lineno=96, col_offset=26), lineno=96, col_offset=12), Assign([Attribute(Name('tarinfo', Load(), lineno=97, col_offset=12), 'uname', Store(), lineno=97, col_offset=12)], Name('owner', Load(), lineno=97, col_offset=28), lineno=97, col_offset=12)], [], lineno=95, col_offset=8), Return(Name('tarinfo', Load(), lineno=98, col_offset=15), lineno=98, col_offset=8)], [], lineno=91, col_offset=4), If(UnaryOp(Not(), Name('dry_run', Load(), lineno=100, col_offset=11), lineno=100, col_offset=7), [Assign([Name('tar', Store(), lineno=101, col_offset=8)], Call(Attribute(Name('tarfile', Load(), lineno=101, col_offset=14), 'open', Load(), lineno=101, col_offset=14), [Name('archive_name', Load(), lineno=101, col_offset=27), BinOp(Str('w|%s', lineno=101, col_offset=41), Mod(), Subscript(Name('tar_compression', Load(), lineno=101, col_offset=50), Index(Name('compress', Load(), lineno=101, col_offset=66)), Load(), lineno=101, col_offset=50), lineno=101, col_offset=41)], [], None, None, lineno=101, col_offset=14), lineno=101, col_offset=8), TryFinally([Expr(Call(Attribute(Name('tar', Load(), lineno=103, col_offset=12), 'add', Load(), lineno=103, col_offset=12), [Name('base_dir', Load(), lineno=103, col_offset=20)], [keyword('filter', Name('_set_uid_gid', Load(), lineno=103, col_offset=37))], None, None, lineno=103, col_offset=12), lineno=103, col_offset=12)], [Expr(Call(Attribute(Name('tar', Load(), lineno=105, col_offset=12), 'close', Load(), lineno=105, col_offset=12), [], [], None, None, lineno=105, col_offset=12), lineno=105, col_offset=12)], lineno=102, col_offset=8)], [], lineno=100, col_offset=4), If(Compare(Name('compress', Load(), lineno=108, col_offset=7), [Eq()], [Str('compress', lineno=108, col_offset=19)], lineno=108, col_offset=7), [Expr(Call(Name('warn', Load(), lineno=109, col_offset=8), [Str("'compress' will be deprecated.", lineno=109, col_offset=13), Name('PendingDeprecationWarning', Load(), lineno=109, col_offset=47)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Assign([Name('compressed_name', Store(), lineno=111, col_offset=8)], BinOp(Name('archive_name', Load(), lineno=111, col_offset=26), Add(), Subscript(Name('compress_ext', Load(), lineno=111, col_offset=41), Index(Name('compress', Load(), lineno=111, col_offset=54)), Load(), lineno=111, col_offset=41), lineno=111, col_offset=26), lineno=111, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=112, col_offset=11), 'platform', Load(), lineno=112, col_offset=11), [Eq()], [Str('win32', lineno=112, col_offset=27)], lineno=112, col_offset=11), [Assign([Name('cmd', Store(), lineno=113, col_offset=12)], List([Name('compress', Load(), lineno=113, col_offset=19), Name('archive_name', Load(), lineno=113, col_offset=29), Name('compressed_name', Load(), lineno=113, col_offset=43)], Load(), lineno=113, col_offset=18), lineno=113, col_offset=12)], [Assign([Name('cmd', Store(), lineno=115, col_offset=12)], List([Name('compress', Load(), lineno=115, col_offset=19), Str('-f', lineno=115, col_offset=29), Name('archive_name', Load(), lineno=115, col_offset=35)], Load(), lineno=115, col_offset=18), lineno=115, col_offset=12)], lineno=112, col_offset=8), Expr(Call(Name('spawn', Load(), lineno=116, col_offset=8), [Name('cmd', Load(), lineno=116, col_offset=14)], [keyword('dry_run', Name('dry_run', Load(), lineno=116, col_offset=27))], None, None, lineno=116, col_offset=8), lineno=116, col_offset=8), Return(Name('compressed_name', Load(), lineno=117, col_offset=15), lineno=117, col_offset=8)], [], lineno=108, col_offset=4), Return(Name('archive_name', Load(), lineno=119, col_offset=11), lineno=119, col_offset=4)], [], lineno=51, col_offset=0), FunctionDef('make_zipfile', arguments([Name('base_name', Param(), lineno=121, col_offset=17), Name('base_dir', Param(), lineno=121, col_offset=28), Name('verbose', Param(), lineno=121, col_offset=38), Name('dry_run', Param(), lineno=121, col_offset=49)], None, None, [Num(0, lineno=121, col_offset=46), Num(0, lineno=121, col_offset=57)]), [Expr(Str('Create a zip file from all the files under \'base_dir\'.\n\n    The output zip file will be named \'base_dir\' + ".zip".  Uses either the\n    "zipfile" Python module (if available) or the InfoZIP "zip" utility\n    (if installed and found on the default search path).  If neither tool is\n    available, raises DistutilsExecError.  Returns the name of the output zip\n    file.\n    ', lineno=129, col_offset=-1), lineno=129, col_offset=-1), TryExcept([Import([alias('zipfile', None)], lineno=131, col_offset=8)], [ExceptHandler(Name('ImportError', Load(), lineno=132, col_offset=11), None, [Assign([Name('zipfile', Store(), lineno=133, col_offset=8)], Name('None', Load(), lineno=133, col_offset=18), lineno=133, col_offset=8)], lineno=132, col_offset=4)], [], lineno=130, col_offset=4), Assign([Name('zip_filename', Store(), lineno=135, col_offset=4)], BinOp(Name('base_name', Load(), lineno=135, col_offset=19), Add(), Str('.zip', lineno=135, col_offset=31), lineno=135, col_offset=19), lineno=135, col_offset=4), Expr(Call(Name('mkpath', Load(), lineno=136, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=136, col_offset=11), 'path', Load(), lineno=136, col_offset=11), 'dirname', Load(), lineno=136, col_offset=11), [Name('zip_filename', Load(), lineno=136, col_offset=27)], [], None, None, lineno=136, col_offset=11)], [keyword('dry_run', Name('dry_run', Load(), lineno=136, col_offset=50))], None, None, lineno=136, col_offset=4), lineno=136, col_offset=4), If(Compare(Name('zipfile', Load(), lineno=140, col_offset=7), [Is()], [Name('None', Load(), lineno=140, col_offset=18)], lineno=140, col_offset=7), [If(Name('verbose', Load(), lineno=141, col_offset=11), [Assign([Name('zipoptions', Store(), lineno=142, col_offset=12)], Str('-r', lineno=142, col_offset=25), lineno=142, col_offset=12)], [Assign([Name('zipoptions', Store(), lineno=144, col_offset=12)], Str('-rq', lineno=144, col_offset=25), lineno=144, col_offset=12)], lineno=141, col_offset=8), TryExcept([Expr(Call(Name('spawn', Load(), lineno=147, col_offset=12), [List([Str('zip', lineno=147, col_offset=19), Name('zipoptions', Load(), lineno=147, col_offset=26), Name('zip_filename', Load(), lineno=147, col_offset=38), Name('base_dir', Load(), lineno=147, col_offset=52)], Load(), lineno=147, col_offset=18)], [keyword('dry_run', Name('dry_run', Load(), lineno=148, col_offset=26))], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12)], [ExceptHandler(Name('DistutilsExecError', Load(), lineno=149, col_offset=15), None, [Raise(Name('DistutilsExecError', Load(), lineno=152, col_offset=18), BinOp(Str("unable to create zip file '%s': could neither import the 'zipfile' module nor find a standalone zip utility", lineno=153, col_offset=19), Mod(), Name('zip_filename', Load(), lineno=155, col_offset=54), lineno=153, col_offset=18), None, lineno=152, col_offset=12)], lineno=149, col_offset=8)], [], lineno=146, col_offset=8)], [Expr(Call(Attribute(Name('log', Load(), lineno=158, col_offset=8), 'info', Load(), lineno=158, col_offset=8), [Str("creating '%s' and adding '%s' to it", lineno=158, col_offset=17), Name('zip_filename', Load(), lineno=159, col_offset=17), Name('base_dir', Load(), lineno=159, col_offset=31)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), If(UnaryOp(Not(), Name('dry_run', Load(), lineno=161, col_offset=15), lineno=161, col_offset=11), [Assign([Name('zip', Store(), lineno=162, col_offset=12)], Call(Attribute(Name('zipfile', Load(), lineno=162, col_offset=18), 'ZipFile', Load(), lineno=162, col_offset=18), [Name('zip_filename', Load(), lineno=162, col_offset=34), Str('w', lineno=162, col_offset=48)], [keyword('compression', Attribute(Name('zipfile', Load(), lineno=163, col_offset=46), 'ZIP_DEFLATED', Load(), lineno=163, col_offset=46))], None, None, lineno=162, col_offset=18), lineno=162, col_offset=12), For(Tuple([Name('dirpath', Store(), lineno=165, col_offset=16), Name('dirnames', Store(), lineno=165, col_offset=25), Name('filenames', Store(), lineno=165, col_offset=35)], Store(), lineno=165, col_offset=16), Call(Attribute(Name('os', Load(), lineno=165, col_offset=48), 'walk', Load(), lineno=165, col_offset=48), [Name('base_dir', Load(), lineno=165, col_offset=56)], [], None, None, lineno=165, col_offset=48), [For(Name('name', Store(), lineno=166, col_offset=20), Name('filenames', Load(), lineno=166, col_offset=28), [Assign([Name('path', Store(), lineno=167, col_offset=20)], Call(Attribute(Attribute(Name('os', Load(), lineno=167, col_offset=27), 'path', Load(), lineno=167, col_offset=27), 'normpath', Load(), lineno=167, col_offset=27), [Call(Attribute(Attribute(Name('os', Load(), lineno=167, col_offset=44), 'path', Load(), lineno=167, col_offset=44), 'join', Load(), lineno=167, col_offset=44), [Name('dirpath', Load(), lineno=167, col_offset=57), Name('name', Load(), lineno=167, col_offset=66)], [], None, None, lineno=167, col_offset=44)], [], None, None, lineno=167, col_offset=27), lineno=167, col_offset=20), If(Call(Attribute(Attribute(Name('os', Load(), lineno=168, col_offset=23), 'path', Load(), lineno=168, col_offset=23), 'isfile', Load(), lineno=168, col_offset=23), [Name('path', Load(), lineno=168, col_offset=38)], [], None, None, lineno=168, col_offset=23), [Expr(Call(Attribute(Name('zip', Load(), lineno=169, col_offset=24), 'write', Load(), lineno=169, col_offset=24), [Name('path', Load(), lineno=169, col_offset=34), Name('path', Load(), lineno=169, col_offset=40)], [], None, None, lineno=169, col_offset=24), lineno=169, col_offset=24), Expr(Call(Attribute(Name('log', Load(), lineno=170, col_offset=24), 'info', Load(), lineno=170, col_offset=24), [BinOp(Str("adding '%s'", lineno=170, col_offset=33), Mod(), Name('path', Load(), lineno=170, col_offset=49), lineno=170, col_offset=33)], [], None, None, lineno=170, col_offset=24), lineno=170, col_offset=24)], [], lineno=168, col_offset=20)], [], lineno=166, col_offset=16)], [], lineno=165, col_offset=12), Expr(Call(Attribute(Name('zip', Load(), lineno=171, col_offset=12), 'close', Load(), lineno=171, col_offset=12), [], [], None, None, lineno=171, col_offset=12), lineno=171, col_offset=12)], [], lineno=161, col_offset=8)], lineno=140, col_offset=4), Return(Name('zip_filename', Load(), lineno=173, col_offset=11), lineno=173, col_offset=4)], [], lineno=121, col_offset=0), Assign([Name('ARCHIVE_FORMATS', Store(), lineno=175, col_offset=0)], Dict([Str('gztar', lineno=176, col_offset=4), Str('bztar', lineno=177, col_offset=4), Str('ztar', lineno=178, col_offset=4), Str('tar', lineno=179, col_offset=4), Str('zip', lineno=180, col_offset=4)], [Tuple([Name('make_tarball', Load(), lineno=176, col_offset=14), List([Tuple([Str('compress', lineno=176, col_offset=30), Str('gzip', lineno=176, col_offset=42)], Load(), lineno=176, col_offset=30)], Load(), lineno=176, col_offset=28), Str("gzip'ed tar-file", lineno=176, col_offset=52)], Load(), lineno=176, col_offset=14), Tuple([Name('make_tarball', Load(), lineno=177, col_offset=14), List([Tuple([Str('compress', lineno=177, col_offset=30), Str('bzip2', lineno=177, col_offset=42)], Load(), lineno=177, col_offset=30)], Load(), lineno=177, col_offset=28), Str("bzip2'ed tar-file", lineno=177, col_offset=53)], Load(), lineno=177, col_offset=14), Tuple([Name('make_tarball', Load(), lineno=178, col_offset=14), List([Tuple([Str('compress', lineno=178, col_offset=30), Str('compress', lineno=178, col_offset=42)], Load(), lineno=178, col_offset=30)], Load(), lineno=178, col_offset=28), Str('compressed tar file', lineno=178, col_offset=56)], Load(), lineno=178, col_offset=14), Tuple([Name('make_tarball', Load(), lineno=179, col_offset=14), List([Tuple([Str('compress', lineno=179, col_offset=30), Name('None', Load(), lineno=179, col_offset=42)], Load(), lineno=179, col_offset=30)], Load(), lineno=179, col_offset=28), Str('uncompressed tar file', lineno=179, col_offset=50)], Load(), lineno=179, col_offset=14), Tuple([Name('make_zipfile', Load(), lineno=180, col_offset=14), List([], Load(), lineno=180, col_offset=28), Str('ZIP file', lineno=180, col_offset=31)], Load(), lineno=180, col_offset=14)], lineno=175, col_offset=18), lineno=175, col_offset=0), FunctionDef('check_archive_formats', arguments([Name('formats', Param(), lineno=183, col_offset=26)], None, None, []), [Expr(Str("Returns the first format from the 'format' list that is unknown.\n\n    If all formats are known, returns None\n    ", lineno=187, col_offset=-1), lineno=187, col_offset=-1), For(Name('format', Store(), lineno=188, col_offset=8), Name('formats', Load(), lineno=188, col_offset=18), [If(Compare(Name('format', Load(), lineno=189, col_offset=11), [NotIn()], [Name('ARCHIVE_FORMATS', Load(), lineno=189, col_offset=25)], lineno=189, col_offset=11), [Return(Name('format', Load(), lineno=190, col_offset=19), lineno=190, col_offset=12)], [], lineno=189, col_offset=8)], [], lineno=188, col_offset=4), Return(Name('None', Load(), lineno=191, col_offset=11), lineno=191, col_offset=4)], [], lineno=183, col_offset=0), FunctionDef('make_archive', arguments([Name('base_name', Param(), lineno=193, col_offset=17), Name('format', Param(), lineno=193, col_offset=28), Name('root_dir', Param(), lineno=193, col_offset=36), Name('base_dir', Param(), lineno=193, col_offset=51), Name('verbose', Param(), lineno=193, col_offset=66), Name('dry_run', Param(), lineno=194, col_offset=17), Name('owner', Param(), lineno=194, col_offset=28), Name('group', Param(), lineno=194, col_offset=40)], None, None, [Name('None', Load(), lineno=193, col_offset=45), Name('None', Load(), lineno=193, col_offset=60), Num(0, lineno=193, col_offset=74), Num(0, lineno=194, col_offset=25), Name('None', Load(), lineno=194, col_offset=34), Name('None', Load(), lineno=194, col_offset=46)]), [Expr(Str('Create an archive file (eg. zip or tar).\n\n    \'base_name\' is the name of the file to create, minus any format-specific\n    extension; \'format\' is the archive format: one of "zip", "tar", "ztar",\n    or "gztar".\n\n    \'root_dir\' is a directory that will be the root directory of the\n    archive; ie. we typically chdir into \'root_dir\' before creating the\n    archive.  \'base_dir\' is the directory where we start archiving from;\n    ie. \'base_dir\' will be the common prefix of all files and\n    directories in the archive.  \'root_dir\' and \'base_dir\' both default\n    to the current directory.  Returns the name of the archive file.\n\n    \'owner\' and \'group\' are used when creating a tar archive. By default,\n    uses the current owner and group.\n    ', lineno=210, col_offset=-1), lineno=210, col_offset=-1), Assign([Name('save_cwd', Store(), lineno=211, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=211, col_offset=15), 'getcwd', Load(), lineno=211, col_offset=15), [], [], None, None, lineno=211, col_offset=15), lineno=211, col_offset=4), If(Compare(Name('root_dir', Load(), lineno=212, col_offset=7), [IsNot()], [Name('None', Load(), lineno=212, col_offset=23)], lineno=212, col_offset=7), [Expr(Call(Attribute(Name('log', Load(), lineno=213, col_offset=8), 'debug', Load(), lineno=213, col_offset=8), [Str("changing into '%s'", lineno=213, col_offset=18), Name('root_dir', Load(), lineno=213, col_offset=40)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), Assign([Name('base_name', Store(), lineno=214, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=214, col_offset=20), 'path', Load(), lineno=214, col_offset=20), 'abspath', Load(), lineno=214, col_offset=20), [Name('base_name', Load(), lineno=214, col_offset=36)], [], None, None, lineno=214, col_offset=20), lineno=214, col_offset=8), If(UnaryOp(Not(), Name('dry_run', Load(), lineno=215, col_offset=15), lineno=215, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=216, col_offset=12), 'chdir', Load(), lineno=216, col_offset=12), [Name('root_dir', Load(), lineno=216, col_offset=21)], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12)], [], lineno=215, col_offset=8)], [], lineno=212, col_offset=4), If(Compare(Name('base_dir', Load(), lineno=218, col_offset=7), [Is()], [Name('None', Load(), lineno=218, col_offset=19)], lineno=218, col_offset=7), [Assign([Name('base_dir', Store(), lineno=219, col_offset=8)], Attribute(Name('os', Load(), lineno=219, col_offset=19), 'curdir', Load(), lineno=219, col_offset=19), lineno=219, col_offset=8)], [], lineno=218, col_offset=4), Assign([Name('kwargs', Store(), lineno=221, col_offset=4)], Dict([Str('dry_run', lineno=221, col_offset=14)], [Name('dry_run', Load(), lineno=221, col_offset=25)], lineno=221, col_offset=13), lineno=221, col_offset=4), TryExcept([Assign([Name('format_info', Store(), lineno=224, col_offset=8)], Subscript(Name('ARCHIVE_FORMATS', Load(), lineno=224, col_offset=22), Index(Name('format', Load(), lineno=224, col_offset=38)), Load(), lineno=224, col_offset=22), lineno=224, col_offset=8)], [ExceptHandler(Name('KeyError', Load(), lineno=225, col_offset=11), None, [Raise(Name('ValueError', Load(), lineno=226, col_offset=14), BinOp(Str("unknown archive format '%s'", lineno=226, col_offset=26), Mod(), Name('format', Load(), lineno=226, col_offset=58), lineno=226, col_offset=26), None, lineno=226, col_offset=8)], lineno=225, col_offset=4)], [], lineno=223, col_offset=4), Assign([Name('func', Store(), lineno=228, col_offset=4)], Subscript(Name('format_info', Load(), lineno=228, col_offset=11), Index(Num(0, lineno=228, col_offset=23)), Load(), lineno=228, col_offset=11), lineno=228, col_offset=4), For(Tuple([Name('arg', Store(), lineno=229, col_offset=8), Name('val', Store(), lineno=229, col_offset=13)], Store(), lineno=229, col_offset=8), Subscript(Name('format_info', Load(), lineno=229, col_offset=20), Index(Num(1, lineno=229, col_offset=32)), Load(), lineno=229, col_offset=20), [Assign([Subscript(Name('kwargs', Load(), lineno=230, col_offset=8), Index(Name('arg', Load(), lineno=230, col_offset=15)), Store(), lineno=230, col_offset=8)], Name('val', Load(), lineno=230, col_offset=22), lineno=230, col_offset=8)], [], lineno=229, col_offset=4), If(Compare(Name('format', Load(), lineno=232, col_offset=7), [NotEq()], [Str('zip', lineno=232, col_offset=17)], lineno=232, col_offset=7), [Assign([Subscript(Name('kwargs', Load(), lineno=233, col_offset=8), Index(Str('owner', lineno=233, col_offset=15)), Store(), lineno=233, col_offset=8)], Name('owner', Load(), lineno=233, col_offset=26), lineno=233, col_offset=8), Assign([Subscript(Name('kwargs', Load(), lineno=234, col_offset=8), Index(Str('group', lineno=234, col_offset=15)), Store(), lineno=234, col_offset=8)], Name('group', Load(), lineno=234, col_offset=26), lineno=234, col_offset=8)], [], lineno=232, col_offset=4), TryFinally([Assign([Name('filename', Store(), lineno=237, col_offset=8)], Call(Name('func', Load(), lineno=237, col_offset=19), [Name('base_name', Load(), lineno=237, col_offset=24), Name('base_dir', Load(), lineno=237, col_offset=35)], [], None, Name('kwargs', Load(), lineno=237, col_offset=47), lineno=237, col_offset=19), lineno=237, col_offset=8)], [If(Compare(Name('root_dir', Load(), lineno=239, col_offset=11), [IsNot()], [Name('None', Load(), lineno=239, col_offset=27)], lineno=239, col_offset=11), [Expr(Call(Attribute(Name('log', Load(), lineno=240, col_offset=12), 'debug', Load(), lineno=240, col_offset=12), [Str("changing back to '%s'", lineno=240, col_offset=22), Name('save_cwd', Load(), lineno=240, col_offset=47)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=241, col_offset=12), 'chdir', Load(), lineno=241, col_offset=12), [Name('save_cwd', Load(), lineno=241, col_offset=21)], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=12)], [], lineno=239, col_offset=8)], lineno=236, col_offset=4), Return(Name('filename', Load(), lineno=243, col_offset=11), lineno=243, col_offset=4)], [], lineno=193, col_offset=0)])
