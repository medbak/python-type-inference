Module([Import([alias('sys', None)], lineno=1, col_offset=0), Import([alias('os', None)], lineno=2, col_offset=0), Import([alias('marshal', None)], lineno=3, col_offset=0), Import([alias('imp', None)], lineno=4, col_offset=0), Import([alias('struct', None)], lineno=5, col_offset=0), Import([alias('time', None)], lineno=6, col_offset=0), Import([alias('unittest', None)], lineno=7, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=9, col_offset=0), ImportFrom('test.test_importhooks', [alias('ImportHooksBaseTestCase', None), alias('test_src', None), alias('test_co', None)], 0, lineno=10, col_offset=0), TryExcept([Import([alias('zlib', None)], lineno=14, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=15, col_offset=7), None, [Assign([Name('zlib', Store(), lineno=16, col_offset=4)], Name('None', Load(), lineno=16, col_offset=11), lineno=16, col_offset=4)], lineno=15, col_offset=0)], [], lineno=13, col_offset=0), ImportFrom('zipfile', [alias('ZipFile', None), alias('ZipInfo', None), alias('ZIP_STORED', None), alias('ZIP_DEFLATED', None)], 0, lineno=18, col_offset=0), Import([alias('zipimport', None)], lineno=20, col_offset=0), Import([alias('linecache', None)], lineno=21, col_offset=0), Import([alias('doctest', None)], lineno=22, col_offset=0), Import([alias('inspect', None)], lineno=23, col_offset=0), Import([alias('StringIO', None)], lineno=24, col_offset=0), ImportFrom('traceback', [alias('extract_tb', None), alias('extract_stack', None), alias('print_tb', None)], 0, lineno=25, col_offset=0), Assign([Name('raise_src', Store(), lineno=26, col_offset=0)], Str('def do_raise(): raise TypeError\n', lineno=26, col_offset=12), lineno=26, col_offset=0), Assign([Name('test_imported', Store(), lineno=30, col_offset=0)], Name('False', Load(), lineno=30, col_offset=16), lineno=30, col_offset=0), FunctionDef('make_pyc', arguments([Name('co', Param(), lineno=33, col_offset=13), Name('mtime', Param(), lineno=33, col_offset=17)], None, None, []), [Assign([Name('data', Store(), lineno=34, col_offset=4)], Call(Attribute(Name('marshal', Load(), lineno=34, col_offset=11), 'dumps', Load(), lineno=34, col_offset=11), [Name('co', Load(), lineno=34, col_offset=25)], [], None, None, lineno=34, col_offset=11), lineno=34, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=35, col_offset=7), [Name('mtime', Load(), lineno=35, col_offset=12)], [], None, None, lineno=35, col_offset=7), [Is()], [Call(Name('type', Load(), lineno=35, col_offset=22), [Num(0.0, lineno=35, col_offset=27)], [], None, None, lineno=35, col_offset=22)], lineno=35, col_offset=7), [If(Compare(Name('mtime', Load(), lineno=37, col_offset=11), [Lt()], [Num(2147483647, lineno=37, col_offset=19)], lineno=37, col_offset=11), [Assign([Name('mtime', Store(), lineno=38, col_offset=12)], Call(Name('int', Load(), lineno=38, col_offset=20), [Name('mtime', Load(), lineno=38, col_offset=24)], [], None, None, lineno=38, col_offset=20), lineno=38, col_offset=12)], [Assign([Name('mtime', Store(), lineno=40, col_offset=12)], Call(Name('int', Load(), lineno=40, col_offset=20), [BinOp(Num(-4294967296L, lineno=40, col_offset=25), Add(), Call(Name('long', Load(), lineno=40, col_offset=40), [Name('mtime', Load(), lineno=40, col_offset=45)], [], None, None, lineno=40, col_offset=40), lineno=40, col_offset=24)], [], None, None, lineno=40, col_offset=20), lineno=40, col_offset=12)], lineno=37, col_offset=8)], [], lineno=35, col_offset=4), Assign([Name('pyc', Store(), lineno=41, col_offset=4)], BinOp(BinOp(Call(Attribute(Name('imp', Load(), lineno=41, col_offset=10), 'get_magic', Load(), lineno=41, col_offset=10), [], [], None, None, lineno=41, col_offset=10), Add(), Call(Attribute(Name('struct', Load(), lineno=41, col_offset=28), 'pack', Load(), lineno=41, col_offset=28), [Str('<i', lineno=41, col_offset=40), Call(Name('int', Load(), lineno=41, col_offset=46), [Name('mtime', Load(), lineno=41, col_offset=50)], [], None, None, lineno=41, col_offset=46)], [], None, None, lineno=41, col_offset=28), lineno=41, col_offset=10), Add(), Name('data', Load(), lineno=41, col_offset=60), lineno=41, col_offset=58), lineno=41, col_offset=4), Return(Name('pyc', Load(), lineno=42, col_offset=11), lineno=42, col_offset=4)], [], lineno=33, col_offset=0), FunctionDef('module_path_to_dotted_name', arguments([Name('path', Param(), lineno=44, col_offset=31)], None, None, []), [Return(Call(Attribute(Name('path', Load(), lineno=45, col_offset=11), 'replace', Load(), lineno=45, col_offset=11), [Attribute(Name('os', Load(), lineno=45, col_offset=24), 'sep', Load(), lineno=45, col_offset=24), Str('.', lineno=45, col_offset=32)], [], None, None, lineno=45, col_offset=11), lineno=45, col_offset=4)], [], lineno=44, col_offset=0), Assign([Name('NOW', Store(), lineno=47, col_offset=0)], Call(Attribute(Name('time', Load(), lineno=47, col_offset=6), 'time', Load(), lineno=47, col_offset=6), [], [], None, None, lineno=47, col_offset=6), lineno=47, col_offset=0), Assign([Name('test_pyc', Store(), lineno=48, col_offset=0)], Call(Name('make_pyc', Load(), lineno=48, col_offset=11), [Name('test_co', Load(), lineno=48, col_offset=20), Name('NOW', Load(), lineno=48, col_offset=29)], [], None, None, lineno=48, col_offset=11), lineno=48, col_offset=0), If(Name('__debug__', Load(), lineno=51, col_offset=3), [Assign([Name('pyc_ext', Store(), lineno=52, col_offset=4)], Str('.pyc', lineno=52, col_offset=14), lineno=52, col_offset=4)], [Assign([Name('pyc_ext', Store(), lineno=54, col_offset=4)], Str('.pyo', lineno=54, col_offset=14), lineno=54, col_offset=4)], lineno=51, col_offset=0), Assign([Name('TESTMOD', Store(), lineno=57, col_offset=0)], Str('ziptestmodule', lineno=57, col_offset=10), lineno=57, col_offset=0), Assign([Name('TESTPACK', Store(), lineno=58, col_offset=0)], Str('ziptestpackage', lineno=58, col_offset=11), lineno=58, col_offset=0), Assign([Name('TESTPACK2', Store(), lineno=59, col_offset=0)], Str('ziptestpackage2', lineno=59, col_offset=12), lineno=59, col_offset=0), Assign([Name('TEMP_ZIP', Store(), lineno=60, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=60, col_offset=11), 'path', Load(), lineno=60, col_offset=11), 'abspath', Load(), lineno=60, col_offset=11), [BinOp(BinOp(Str('junk95142', lineno=60, col_offset=27), Add(), Attribute(Name('os', Load(), lineno=60, col_offset=41), 'extsep', Load(), lineno=60, col_offset=41), lineno=60, col_offset=27), Add(), Str('zip', lineno=60, col_offset=53), lineno=60, col_offset=51)], [], None, None, lineno=60, col_offset=11), lineno=60, col_offset=0), ClassDef('UncompressedZipImportTestCase', [Name('ImportHooksBaseTestCase', Load(), lineno=63, col_offset=36)], [Assign([Name('compression', Store(), lineno=65, col_offset=4)], Name('ZIP_STORED', Load(), lineno=65, col_offset=18), lineno=65, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=67, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('linecache', Load(), lineno=70, col_offset=8), 'clearcache', Load(), lineno=70, col_offset=8), [], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Attribute(Name('zipimport', Load(), lineno=71, col_offset=8), '_zip_directory_cache', Load(), lineno=71, col_offset=8), 'clear', Load(), lineno=71, col_offset=8), [], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('ImportHooksBaseTestCase', Load(), lineno=72, col_offset=8), 'setUp', Load(), lineno=72, col_offset=8), [Name('self', Load(), lineno=72, col_offset=38)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('doTest', arguments([Name('self', Param(), lineno=74, col_offset=15), Name('expected_ext', Param(), lineno=74, col_offset=21), Name('files', Param(), lineno=74, col_offset=35)], 'modules', 'kw', []), [Assign([Name('z', Store(), lineno=75, col_offset=8)], Call(Name('ZipFile', Load(), lineno=75, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=75, col_offset=20), Str('w', lineno=75, col_offset=30)], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=8), TryFinally([For(Tuple([Name('name', Store(), lineno=77, col_offset=16), Tuple([Name('mtime', Store(), lineno=77, col_offset=23), Name('data', Store(), lineno=77, col_offset=30)], Store(), lineno=77, col_offset=23)], Store(), lineno=77, col_offset=16), Call(Attribute(Name('files', Load(), lineno=77, col_offset=39), 'items', Load(), lineno=77, col_offset=39), [], [], None, None, lineno=77, col_offset=39), [Assign([Name('zinfo', Store(), lineno=78, col_offset=16)], Call(Name('ZipInfo', Load(), lineno=78, col_offset=24), [Name('name', Load(), lineno=78, col_offset=32), Call(Attribute(Name('time', Load(), lineno=78, col_offset=38), 'localtime', Load(), lineno=78, col_offset=38), [Name('mtime', Load(), lineno=78, col_offset=53)], [], None, None, lineno=78, col_offset=38)], [], None, None, lineno=78, col_offset=24), lineno=78, col_offset=16), Assign([Attribute(Name('zinfo', Load(), lineno=79, col_offset=16), 'compress_type', Store(), lineno=79, col_offset=16)], Attribute(Name('self', Load(), lineno=79, col_offset=38), 'compression', Load(), lineno=79, col_offset=38), lineno=79, col_offset=16), Expr(Call(Attribute(Name('z', Load(), lineno=80, col_offset=16), 'writestr', Load(), lineno=80, col_offset=16), [Name('zinfo', Load(), lineno=80, col_offset=27), Name('data', Load(), lineno=80, col_offset=34)], [], None, None, lineno=80, col_offset=16), lineno=80, col_offset=16)], [], lineno=77, col_offset=12), Expr(Call(Attribute(Name('z', Load(), lineno=81, col_offset=12), 'close', Load(), lineno=81, col_offset=12), [], [], None, None, lineno=81, col_offset=12), lineno=81, col_offset=12), Assign([Name('stuff', Store(), lineno=83, col_offset=12)], Call(Attribute(Name('kw', Load(), lineno=83, col_offset=20), 'get', Load(), lineno=83, col_offset=20), [Str('stuff', lineno=83, col_offset=27), Name('None', Load(), lineno=83, col_offset=36)], [], None, None, lineno=83, col_offset=20), lineno=83, col_offset=12), If(Compare(Name('stuff', Load(), lineno=84, col_offset=15), [IsNot()], [Name('None', Load(), lineno=84, col_offset=28)], lineno=84, col_offset=15), [Assign([Name('f', Store(), lineno=86, col_offset=16)], Call(Name('open', Load(), lineno=86, col_offset=20), [Name('TEMP_ZIP', Load(), lineno=86, col_offset=25), Str('rb', lineno=86, col_offset=35)], [], None, None, lineno=86, col_offset=20), lineno=86, col_offset=16), Assign([Name('data', Store(), lineno=87, col_offset=16)], Call(Attribute(Name('f', Load(), lineno=87, col_offset=23), 'read', Load(), lineno=87, col_offset=23), [], [], None, None, lineno=87, col_offset=23), lineno=87, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=88, col_offset=16), 'close', Load(), lineno=88, col_offset=16), [], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16), Assign([Name('f', Store(), lineno=90, col_offset=16)], Call(Name('open', Load(), lineno=90, col_offset=20), [Name('TEMP_ZIP', Load(), lineno=90, col_offset=25), Str('wb', lineno=90, col_offset=35)], [], None, None, lineno=90, col_offset=20), lineno=90, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=91, col_offset=16), 'write', Load(), lineno=91, col_offset=16), [Name('stuff', Load(), lineno=91, col_offset=24)], [], None, None, lineno=91, col_offset=16), lineno=91, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=92, col_offset=16), 'write', Load(), lineno=92, col_offset=16), [Name('data', Load(), lineno=92, col_offset=24)], [], None, None, lineno=92, col_offset=16), lineno=92, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=93, col_offset=16), 'close', Load(), lineno=93, col_offset=16), [], [], None, None, lineno=93, col_offset=16), lineno=93, col_offset=16)], [], lineno=84, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=95, col_offset=12), 'path', Load(), lineno=95, col_offset=12), 'insert', Load(), lineno=95, col_offset=12), [Num(0, lineno=95, col_offset=28), Name('TEMP_ZIP', Load(), lineno=95, col_offset=31)], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12), Assign([Name('mod', Store(), lineno=97, col_offset=12)], Call(Name('__import__', Load(), lineno=97, col_offset=18), [Call(Attribute(Str('.', lineno=97, col_offset=29), 'join', Load(), lineno=97, col_offset=29), [Name('modules', Load(), lineno=97, col_offset=38)], [], None, None, lineno=97, col_offset=29), Call(Name('globals', Load(), lineno=97, col_offset=48), [], [], None, None, lineno=97, col_offset=48), Call(Name('locals', Load(), lineno=97, col_offset=59), [], [], None, None, lineno=97, col_offset=59), List([Str('__dummy__', lineno=98, col_offset=30)], Load(), lineno=98, col_offset=29)], [], None, None, lineno=97, col_offset=18), lineno=97, col_offset=12), Assign([Name('call', Store(), lineno=100, col_offset=12)], Call(Attribute(Name('kw', Load(), lineno=100, col_offset=19), 'get', Load(), lineno=100, col_offset=19), [Str('call', lineno=100, col_offset=26)], [], None, None, lineno=100, col_offset=19), lineno=100, col_offset=12), If(Compare(Name('call', Load(), lineno=101, col_offset=15), [IsNot()], [Name('None', Load(), lineno=101, col_offset=27)], lineno=101, col_offset=15), [Expr(Call(Name('call', Load(), lineno=102, col_offset=16), [Name('mod', Load(), lineno=102, col_offset=21)], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=16)], [], lineno=101, col_offset=12), If(Name('expected_ext', Load(), lineno=104, col_offset=15), [Assign([Name('file', Store(), lineno=105, col_offset=16)], Call(Attribute(Name('mod', Load(), lineno=105, col_offset=23), 'get_file', Load(), lineno=105, col_offset=23), [], [], None, None, lineno=105, col_offset=23), lineno=105, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=16), 'assertEqual', Load(), lineno=106, col_offset=16), [Name('file', Load(), lineno=106, col_offset=33), BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=106, col_offset=39), 'path', Load(), lineno=106, col_offset=39), 'join', Load(), lineno=106, col_offset=39), [Name('TEMP_ZIP', Load(), lineno=106, col_offset=52)], [], Name('modules', Load(), lineno=107, col_offset=34), None, lineno=106, col_offset=39), Add(), Name('expected_ext', Load(), lineno=107, col_offset=45), lineno=106, col_offset=39)], [], None, None, lineno=106, col_offset=16), lineno=106, col_offset=16)], [], lineno=104, col_offset=12)], [Expr(Call(Attribute(Name('z', Load(), lineno=109, col_offset=12), 'close', Load(), lineno=109, col_offset=12), [], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=110, col_offset=12), 'remove', Load(), lineno=110, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=110, col_offset=22)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12)], lineno=76, col_offset=8)], [], lineno=74, col_offset=4), FunctionDef('testAFakeZlib', arguments([Name('self', Param(), lineno=112, col_offset=22)], None, None, []), [If(Compare(Str('zlib', lineno=130, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=130, col_offset=21), 'builtin_module_names', Load(), lineno=130, col_offset=21)], lineno=130, col_offset=11), [Return(None, lineno=131, col_offset=12)], [], lineno=130, col_offset=8), If(Compare(Str('zlib', lineno=132, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=132, col_offset=21), 'modules', Load(), lineno=132, col_offset=21)], lineno=132, col_offset=11), [Delete([Subscript(Attribute(Name('sys', Load(), lineno=133, col_offset=16), 'modules', Load(), lineno=133, col_offset=16), Index(Str('zlib', lineno=133, col_offset=28)), Del(), lineno=133, col_offset=16)], lineno=133, col_offset=12)], [], lineno=132, col_offset=8), Assign([Name('files', Store(), lineno=134, col_offset=8)], Dict([Str('zlib.py', lineno=134, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=134, col_offset=29), Name('test_src', Load(), lineno=134, col_offset=34)], Load(), lineno=134, col_offset=29)], lineno=134, col_offset=16), lineno=134, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=12), 'doTest', Load(), lineno=136, col_offset=12), [Str('.py', lineno=136, col_offset=24), Name('files', Load(), lineno=136, col_offset=31), Str('zlib', lineno=136, col_offset=38)], [], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=137, col_offset=15), None, [If(Compare(Attribute(Name('self', Load(), lineno=138, col_offset=15), 'compression', Load(), lineno=138, col_offset=15), [NotEq()], [Name('ZIP_DEFLATED', Load(), lineno=138, col_offset=35)], lineno=138, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=139, col_offset=16), 'fail', Load(), lineno=139, col_offset=16), [Str('expected test to not raise ImportError', lineno=139, col_offset=26)], [], None, None, lineno=139, col_offset=16), lineno=139, col_offset=16)], [], lineno=138, col_offset=12)], lineno=137, col_offset=8)], [If(Compare(Attribute(Name('self', Load(), lineno=141, col_offset=15), 'compression', Load(), lineno=141, col_offset=15), [NotEq()], [Name('ZIP_STORED', Load(), lineno=141, col_offset=35)], lineno=141, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=16), 'fail', Load(), lineno=142, col_offset=16), [Str('expected test to raise ImportError', lineno=142, col_offset=26)], [], None, None, lineno=142, col_offset=16), lineno=142, col_offset=16)], [], lineno=141, col_offset=12)], lineno=135, col_offset=8)], [], lineno=112, col_offset=4), FunctionDef('testPy', arguments([Name('self', Param(), lineno=144, col_offset=15)], None, None, []), [Assign([Name('files', Store(), lineno=145, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=145, col_offset=17), Add(), Str('.py', lineno=145, col_offset=27), lineno=145, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=145, col_offset=35), Name('test_src', Load(), lineno=145, col_offset=40)], Load(), lineno=145, col_offset=35)], lineno=145, col_offset=16), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=8), 'doTest', Load(), lineno=146, col_offset=8), [Str('.py', lineno=146, col_offset=20), Name('files', Load(), lineno=146, col_offset=27), Name('TESTMOD', Load(), lineno=146, col_offset=34)], [], None, None, lineno=146, col_offset=8), lineno=146, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('testPyc', arguments([Name('self', Param(), lineno=148, col_offset=16)], None, None, []), [Assign([Name('files', Store(), lineno=149, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=149, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=149, col_offset=27), lineno=149, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=149, col_offset=37), Name('test_pyc', Load(), lineno=149, col_offset=42)], Load(), lineno=149, col_offset=37)], lineno=149, col_offset=16), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'doTest', Load(), lineno=150, col_offset=8), [Name('pyc_ext', Load(), lineno=150, col_offset=20), Name('files', Load(), lineno=150, col_offset=29), Name('TESTMOD', Load(), lineno=150, col_offset=36)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8)], [], lineno=148, col_offset=4), FunctionDef('testBoth', arguments([Name('self', Param(), lineno=152, col_offset=17)], None, None, []), [Assign([Name('files', Store(), lineno=153, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=153, col_offset=17), Add(), Str('.py', lineno=153, col_offset=27), lineno=153, col_offset=17), BinOp(Name('TESTMOD', Load(), lineno=154, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=154, col_offset=27), lineno=154, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=153, col_offset=35), Name('test_src', Load(), lineno=153, col_offset=40)], Load(), lineno=153, col_offset=35), Tuple([Name('NOW', Load(), lineno=154, col_offset=37), Name('test_pyc', Load(), lineno=154, col_offset=42)], Load(), lineno=154, col_offset=37)], lineno=153, col_offset=16), lineno=153, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=155, col_offset=8), 'doTest', Load(), lineno=155, col_offset=8), [Name('pyc_ext', Load(), lineno=155, col_offset=20), Name('files', Load(), lineno=155, col_offset=29), Name('TESTMOD', Load(), lineno=155, col_offset=36)], [], None, None, lineno=155, col_offset=8), lineno=155, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('testEmptyPy', arguments([Name('self', Param(), lineno=157, col_offset=20)], None, None, []), [Assign([Name('files', Store(), lineno=158, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=158, col_offset=17), Add(), Str('.py', lineno=158, col_offset=27), lineno=158, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=158, col_offset=35), Str('', lineno=158, col_offset=40)], Load(), lineno=158, col_offset=35)], lineno=158, col_offset=16), lineno=158, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=8), 'doTest', Load(), lineno=159, col_offset=8), [Name('None', Load(), lineno=159, col_offset=20), Name('files', Load(), lineno=159, col_offset=26), Name('TESTMOD', Load(), lineno=159, col_offset=33)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8)], [], lineno=157, col_offset=4), FunctionDef('testBadMagic', arguments([Name('self', Param(), lineno=161, col_offset=21)], None, None, []), [Assign([Name('m0', Store(), lineno=163, col_offset=8)], Call(Name('ord', Load(), lineno=163, col_offset=13), [Subscript(Name('test_pyc', Load(), lineno=163, col_offset=17), Index(Num(0, lineno=163, col_offset=26)), Load(), lineno=163, col_offset=17)], [], None, None, lineno=163, col_offset=13), lineno=163, col_offset=8), AugAssign(Name('m0', Store(), lineno=164, col_offset=8), BitXor(), Num(4, lineno=164, col_offset=14), lineno=164, col_offset=8), Assign([Name('badmagic_pyc', Store(), lineno=165, col_offset=8)], BinOp(Call(Name('chr', Load(), lineno=165, col_offset=23), [Name('m0', Load(), lineno=165, col_offset=27)], [], None, None, lineno=165, col_offset=23), Add(), Subscript(Name('test_pyc', Load(), lineno=165, col_offset=33), Slice(Num(1, lineno=165, col_offset=42), None, None), Load(), lineno=165, col_offset=33), lineno=165, col_offset=23), lineno=165, col_offset=8), Assign([Name('files', Store(), lineno=166, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=166, col_offset=17), Add(), Str('.py', lineno=166, col_offset=27), lineno=166, col_offset=17), BinOp(Name('TESTMOD', Load(), lineno=167, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=167, col_offset=27), lineno=167, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=166, col_offset=35), Name('test_src', Load(), lineno=166, col_offset=40)], Load(), lineno=166, col_offset=35), Tuple([Name('NOW', Load(), lineno=167, col_offset=37), Name('badmagic_pyc', Load(), lineno=167, col_offset=42)], Load(), lineno=167, col_offset=37)], lineno=166, col_offset=16), lineno=166, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=8), 'doTest', Load(), lineno=168, col_offset=8), [Str('.py', lineno=168, col_offset=20), Name('files', Load(), lineno=168, col_offset=27), Name('TESTMOD', Load(), lineno=168, col_offset=34)], [], None, None, lineno=168, col_offset=8), lineno=168, col_offset=8)], [], lineno=161, col_offset=4), FunctionDef('testBadMagic2', arguments([Name('self', Param(), lineno=170, col_offset=22)], None, None, []), [Assign([Name('m0', Store(), lineno=172, col_offset=8)], Call(Name('ord', Load(), lineno=172, col_offset=13), [Subscript(Name('test_pyc', Load(), lineno=172, col_offset=17), Index(Num(0, lineno=172, col_offset=26)), Load(), lineno=172, col_offset=17)], [], None, None, lineno=172, col_offset=13), lineno=172, col_offset=8), AugAssign(Name('m0', Store(), lineno=173, col_offset=8), BitXor(), Num(4, lineno=173, col_offset=14), lineno=173, col_offset=8), Assign([Name('badmagic_pyc', Store(), lineno=174, col_offset=8)], BinOp(Call(Name('chr', Load(), lineno=174, col_offset=23), [Name('m0', Load(), lineno=174, col_offset=27)], [], None, None, lineno=174, col_offset=23), Add(), Subscript(Name('test_pyc', Load(), lineno=174, col_offset=33), Slice(Num(1, lineno=174, col_offset=42), None, None), Load(), lineno=174, col_offset=33), lineno=174, col_offset=23), lineno=174, col_offset=8), Assign([Name('files', Store(), lineno=175, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=175, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=175, col_offset=27), lineno=175, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=175, col_offset=37), Name('badmagic_pyc', Load(), lineno=175, col_offset=42)], Load(), lineno=175, col_offset=37)], lineno=175, col_offset=16), lineno=175, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=12), 'doTest', Load(), lineno=177, col_offset=12), [Str('.py', lineno=177, col_offset=24), Name('files', Load(), lineno=177, col_offset=31), Name('TESTMOD', Load(), lineno=177, col_offset=38)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=178, col_offset=15), None, [Pass( lineno=179, col_offset=12)], lineno=178, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'fail', Load(), lineno=181, col_offset=12), [Str('expected ImportError; import from bad pyc', lineno=181, col_offset=22)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], lineno=176, col_offset=8)], [], lineno=170, col_offset=4), FunctionDef('testBadMTime', arguments([Name('self', Param(), lineno=183, col_offset=21)], None, None, []), [Assign([Name('t3', Store(), lineno=184, col_offset=8)], Call(Name('ord', Load(), lineno=184, col_offset=13), [Subscript(Name('test_pyc', Load(), lineno=184, col_offset=17), Index(Num(7, lineno=184, col_offset=26)), Load(), lineno=184, col_offset=17)], [], None, None, lineno=184, col_offset=13), lineno=184, col_offset=8), AugAssign(Name('t3', Store(), lineno=185, col_offset=8), BitXor(), Num(2, lineno=185, col_offset=14), lineno=185, col_offset=8), Assign([Name('badtime_pyc', Store(), lineno=187, col_offset=8)], BinOp(BinOp(Subscript(Name('test_pyc', Load(), lineno=187, col_offset=22), Slice(None, Num(7, lineno=187, col_offset=32), None), Load(), lineno=187, col_offset=22), Add(), Call(Name('chr', Load(), lineno=187, col_offset=37), [Name('t3', Load(), lineno=187, col_offset=41)], [], None, None, lineno=187, col_offset=37), lineno=187, col_offset=22), Add(), Subscript(Name('test_pyc', Load(), lineno=187, col_offset=47), Slice(Num(8, lineno=187, col_offset=56), None, None), Load(), lineno=187, col_offset=47), lineno=187, col_offset=45), lineno=187, col_offset=8), Assign([Name('files', Store(), lineno=188, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=188, col_offset=17), Add(), Str('.py', lineno=188, col_offset=27), lineno=188, col_offset=17), BinOp(Name('TESTMOD', Load(), lineno=189, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=189, col_offset=27), lineno=189, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=188, col_offset=35), Name('test_src', Load(), lineno=188, col_offset=40)], Load(), lineno=188, col_offset=35), Tuple([Name('NOW', Load(), lineno=189, col_offset=37), Name('badtime_pyc', Load(), lineno=189, col_offset=42)], Load(), lineno=189, col_offset=37)], lineno=188, col_offset=16), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'doTest', Load(), lineno=190, col_offset=8), [Str('.py', lineno=190, col_offset=20), Name('files', Load(), lineno=190, col_offset=27), Name('TESTMOD', Load(), lineno=190, col_offset=34)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('testPackage', arguments([Name('self', Param(), lineno=192, col_offset=20)], None, None, []), [Assign([Name('packdir', Store(), lineno=193, col_offset=8)], BinOp(Name('TESTPACK', Load(), lineno=193, col_offset=18), Add(), Attribute(Name('os', Load(), lineno=193, col_offset=29), 'sep', Load(), lineno=193, col_offset=29), lineno=193, col_offset=18), lineno=193, col_offset=8), Assign([Name('files', Store(), lineno=194, col_offset=8)], Dict([BinOp(BinOp(Name('packdir', Load(), lineno=194, col_offset=17), Add(), Str('__init__', lineno=194, col_offset=27), lineno=194, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=194, col_offset=40), lineno=194, col_offset=38), BinOp(BinOp(Name('packdir', Load(), lineno=195, col_offset=17), Add(), Name('TESTMOD', Load(), lineno=195, col_offset=27), lineno=195, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=195, col_offset=37), lineno=195, col_offset=35)], [Tuple([Name('NOW', Load(), lineno=194, col_offset=50), Name('test_pyc', Load(), lineno=194, col_offset=55)], Load(), lineno=194, col_offset=50), Tuple([Name('NOW', Load(), lineno=195, col_offset=47), Name('test_pyc', Load(), lineno=195, col_offset=52)], Load(), lineno=195, col_offset=47)], lineno=194, col_offset=16), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=8), 'doTest', Load(), lineno=196, col_offset=8), [Name('pyc_ext', Load(), lineno=196, col_offset=20), Name('files', Load(), lineno=196, col_offset=29), Name('TESTPACK', Load(), lineno=196, col_offset=36), Name('TESTMOD', Load(), lineno=196, col_offset=46)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('testDeepPackage', arguments([Name('self', Param(), lineno=198, col_offset=24)], None, None, []), [Assign([Name('packdir', Store(), lineno=199, col_offset=8)], BinOp(Name('TESTPACK', Load(), lineno=199, col_offset=18), Add(), Attribute(Name('os', Load(), lineno=199, col_offset=29), 'sep', Load(), lineno=199, col_offset=29), lineno=199, col_offset=18), lineno=199, col_offset=8), Assign([Name('packdir2', Store(), lineno=200, col_offset=8)], BinOp(BinOp(Name('packdir', Load(), lineno=200, col_offset=19), Add(), Name('TESTPACK2', Load(), lineno=200, col_offset=29), lineno=200, col_offset=19), Add(), Attribute(Name('os', Load(), lineno=200, col_offset=41), 'sep', Load(), lineno=200, col_offset=41), lineno=200, col_offset=39), lineno=200, col_offset=8), Assign([Name('files', Store(), lineno=201, col_offset=8)], Dict([BinOp(BinOp(Name('packdir', Load(), lineno=201, col_offset=17), Add(), Str('__init__', lineno=201, col_offset=27), lineno=201, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=201, col_offset=40), lineno=201, col_offset=38), BinOp(BinOp(Name('packdir2', Load(), lineno=202, col_offset=17), Add(), Str('__init__', lineno=202, col_offset=28), lineno=202, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=202, col_offset=41), lineno=202, col_offset=39), BinOp(BinOp(Name('packdir2', Load(), lineno=203, col_offset=17), Add(), Name('TESTMOD', Load(), lineno=203, col_offset=28), lineno=203, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=203, col_offset=38), lineno=203, col_offset=36)], [Tuple([Name('NOW', Load(), lineno=201, col_offset=50), Name('test_pyc', Load(), lineno=201, col_offset=55)], Load(), lineno=201, col_offset=50), Tuple([Name('NOW', Load(), lineno=202, col_offset=51), Name('test_pyc', Load(), lineno=202, col_offset=56)], Load(), lineno=202, col_offset=51), Tuple([Name('NOW', Load(), lineno=203, col_offset=48), Name('test_pyc', Load(), lineno=203, col_offset=53)], Load(), lineno=203, col_offset=48)], lineno=201, col_offset=16), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'doTest', Load(), lineno=204, col_offset=8), [Name('pyc_ext', Load(), lineno=204, col_offset=20), Name('files', Load(), lineno=204, col_offset=29), Name('TESTPACK', Load(), lineno=204, col_offset=36), Name('TESTPACK2', Load(), lineno=204, col_offset=46), Name('TESTMOD', Load(), lineno=204, col_offset=57)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8)], [], lineno=198, col_offset=4), FunctionDef('testZipImporterMethods', arguments([Name('self', Param(), lineno=206, col_offset=31)], None, None, []), [Assign([Name('packdir', Store(), lineno=207, col_offset=8)], BinOp(Name('TESTPACK', Load(), lineno=207, col_offset=18), Add(), Attribute(Name('os', Load(), lineno=207, col_offset=29), 'sep', Load(), lineno=207, col_offset=29), lineno=207, col_offset=18), lineno=207, col_offset=8), Assign([Name('packdir2', Store(), lineno=208, col_offset=8)], BinOp(BinOp(Name('packdir', Load(), lineno=208, col_offset=19), Add(), Name('TESTPACK2', Load(), lineno=208, col_offset=29), lineno=208, col_offset=19), Add(), Attribute(Name('os', Load(), lineno=208, col_offset=41), 'sep', Load(), lineno=208, col_offset=41), lineno=208, col_offset=39), lineno=208, col_offset=8), Assign([Name('files', Store(), lineno=209, col_offset=8)], Dict([BinOp(BinOp(Name('packdir', Load(), lineno=209, col_offset=17), Add(), Str('__init__', lineno=209, col_offset=27), lineno=209, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=209, col_offset=40), lineno=209, col_offset=38), BinOp(BinOp(Name('packdir2', Load(), lineno=210, col_offset=17), Add(), Str('__init__', lineno=210, col_offset=28), lineno=210, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=210, col_offset=41), lineno=210, col_offset=39), BinOp(BinOp(Name('packdir2', Load(), lineno=211, col_offset=17), Add(), Name('TESTMOD', Load(), lineno=211, col_offset=28), lineno=211, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=211, col_offset=38), lineno=211, col_offset=36)], [Tuple([Name('NOW', Load(), lineno=209, col_offset=50), Name('test_pyc', Load(), lineno=209, col_offset=55)], Load(), lineno=209, col_offset=50), Tuple([Name('NOW', Load(), lineno=210, col_offset=51), Name('test_pyc', Load(), lineno=210, col_offset=56)], Load(), lineno=210, col_offset=51), Tuple([Name('NOW', Load(), lineno=211, col_offset=48), Name('test_pyc', Load(), lineno=211, col_offset=53)], Load(), lineno=211, col_offset=48)], lineno=209, col_offset=16), lineno=209, col_offset=8), Assign([Name('z', Store(), lineno=213, col_offset=8)], Call(Name('ZipFile', Load(), lineno=213, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=213, col_offset=20), Str('w', lineno=213, col_offset=30)], [], None, None, lineno=213, col_offset=12), lineno=213, col_offset=8), TryFinally([For(Tuple([Name('name', Store(), lineno=215, col_offset=16), Tuple([Name('mtime', Store(), lineno=215, col_offset=23), Name('data', Store(), lineno=215, col_offset=30)], Store(), lineno=215, col_offset=23)], Store(), lineno=215, col_offset=16), Call(Attribute(Name('files', Load(), lineno=215, col_offset=39), 'items', Load(), lineno=215, col_offset=39), [], [], None, None, lineno=215, col_offset=39), [Assign([Name('zinfo', Store(), lineno=216, col_offset=16)], Call(Name('ZipInfo', Load(), lineno=216, col_offset=24), [Name('name', Load(), lineno=216, col_offset=32), Call(Attribute(Name('time', Load(), lineno=216, col_offset=38), 'localtime', Load(), lineno=216, col_offset=38), [Name('mtime', Load(), lineno=216, col_offset=53)], [], None, None, lineno=216, col_offset=38)], [], None, None, lineno=216, col_offset=24), lineno=216, col_offset=16), Assign([Attribute(Name('zinfo', Load(), lineno=217, col_offset=16), 'compress_type', Store(), lineno=217, col_offset=16)], Attribute(Name('self', Load(), lineno=217, col_offset=38), 'compression', Load(), lineno=217, col_offset=38), lineno=217, col_offset=16), Expr(Call(Attribute(Name('z', Load(), lineno=218, col_offset=16), 'writestr', Load(), lineno=218, col_offset=16), [Name('zinfo', Load(), lineno=218, col_offset=27), Name('data', Load(), lineno=218, col_offset=34)], [], None, None, lineno=218, col_offset=16), lineno=218, col_offset=16)], [], lineno=215, col_offset=12), Expr(Call(Attribute(Name('z', Load(), lineno=219, col_offset=12), 'close', Load(), lineno=219, col_offset=12), [], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=12), Assign([Name('zi', Store(), lineno=221, col_offset=12)], Call(Attribute(Name('zipimport', Load(), lineno=221, col_offset=17), 'zipimporter', Load(), lineno=221, col_offset=17), [Name('TEMP_ZIP', Load(), lineno=221, col_offset=39)], [], None, None, lineno=221, col_offset=17), lineno=221, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=12), 'assertEqual', Load(), lineno=222, col_offset=12), [Attribute(Name('zi', Load(), lineno=222, col_offset=29), 'archive', Load(), lineno=222, col_offset=29), Name('TEMP_ZIP', Load(), lineno=222, col_offset=41)], [], None, None, lineno=222, col_offset=12), lineno=222, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=12), 'assertEqual', Load(), lineno=223, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=223, col_offset=29), 'is_package', Load(), lineno=223, col_offset=29), [Name('TESTPACK', Load(), lineno=223, col_offset=43)], [], None, None, lineno=223, col_offset=29), Name('True', Load(), lineno=223, col_offset=54)], [], None, None, lineno=223, col_offset=12), lineno=223, col_offset=12), Assign([Name('mod', Store(), lineno=224, col_offset=12)], Call(Attribute(Name('zi', Load(), lineno=224, col_offset=18), 'load_module', Load(), lineno=224, col_offset=18), [Name('TESTPACK', Load(), lineno=224, col_offset=33)], [], None, None, lineno=224, col_offset=18), lineno=224, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=12), 'assertEqual', Load(), lineno=225, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=225, col_offset=29), 'get_filename', Load(), lineno=225, col_offset=29), [Name('TESTPACK', Load(), lineno=225, col_offset=45)], [], None, None, lineno=225, col_offset=29), Attribute(Name('mod', Load(), lineno=225, col_offset=56), '__file__', Load(), lineno=225, col_offset=56)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=12), 'assertEqual', Load(), lineno=227, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=227, col_offset=29), 'is_package', Load(), lineno=227, col_offset=29), [BinOp(Name('packdir', Load(), lineno=227, col_offset=43), Add(), Str('__init__', lineno=227, col_offset=53), lineno=227, col_offset=43)], [], None, None, lineno=227, col_offset=29), Name('False', Load(), lineno=227, col_offset=66)], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=12), 'assertEqual', Load(), lineno=228, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=228, col_offset=29), 'is_package', Load(), lineno=228, col_offset=29), [BinOp(Name('packdir', Load(), lineno=228, col_offset=43), Add(), Name('TESTPACK2', Load(), lineno=228, col_offset=53), lineno=228, col_offset=43)], [], None, None, lineno=228, col_offset=29), Name('True', Load(), lineno=228, col_offset=65)], [], None, None, lineno=228, col_offset=12), lineno=228, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=12), 'assertEqual', Load(), lineno=229, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=229, col_offset=29), 'is_package', Load(), lineno=229, col_offset=29), [BinOp(Name('packdir2', Load(), lineno=229, col_offset=43), Add(), Name('TESTMOD', Load(), lineno=229, col_offset=54), lineno=229, col_offset=43)], [], None, None, lineno=229, col_offset=29), Name('False', Load(), lineno=229, col_offset=64)], [], None, None, lineno=229, col_offset=12), lineno=229, col_offset=12), Assign([Name('mod_path', Store(), lineno=231, col_offset=12)], BinOp(Name('packdir2', Load(), lineno=231, col_offset=23), Add(), Name('TESTMOD', Load(), lineno=231, col_offset=34), lineno=231, col_offset=23), lineno=231, col_offset=12), Assign([Name('mod_name', Store(), lineno=232, col_offset=12)], Call(Name('module_path_to_dotted_name', Load(), lineno=232, col_offset=23), [Name('mod_path', Load(), lineno=232, col_offset=50)], [], None, None, lineno=232, col_offset=23), lineno=232, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=233, col_offset=12), [Name('mod_name', Load(), lineno=233, col_offset=23)], [], None, None, lineno=233, col_offset=12), lineno=233, col_offset=12), Assign([Name('mod', Store(), lineno=234, col_offset=12)], Subscript(Attribute(Name('sys', Load(), lineno=234, col_offset=18), 'modules', Load(), lineno=234, col_offset=18), Index(Name('mod_name', Load(), lineno=234, col_offset=30)), Load(), lineno=234, col_offset=18), lineno=234, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=12), 'assertEqual', Load(), lineno=235, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=235, col_offset=29), 'get_source', Load(), lineno=235, col_offset=29), [Name('TESTPACK', Load(), lineno=235, col_offset=43)], [], None, None, lineno=235, col_offset=29), Name('None', Load(), lineno=235, col_offset=54)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=12), 'assertEqual', Load(), lineno=236, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=236, col_offset=29), 'get_source', Load(), lineno=236, col_offset=29), [Name('mod_path', Load(), lineno=236, col_offset=43)], [], None, None, lineno=236, col_offset=29), Name('None', Load(), lineno=236, col_offset=54)], [], None, None, lineno=236, col_offset=12), lineno=236, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=12), 'assertEqual', Load(), lineno=237, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=237, col_offset=29), 'get_filename', Load(), lineno=237, col_offset=29), [Name('mod_path', Load(), lineno=237, col_offset=45)], [], None, None, lineno=237, col_offset=29), Attribute(Name('mod', Load(), lineno=237, col_offset=56), '__file__', Load(), lineno=237, col_offset=56)], [], None, None, lineno=237, col_offset=12), lineno=237, col_offset=12), Assign([Name('loader', Store(), lineno=239, col_offset=12)], Attribute(Name('mod', Load(), lineno=239, col_offset=21), '__loader__', Load(), lineno=239, col_offset=21), lineno=239, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=12), 'assertEqual', Load(), lineno=240, col_offset=12), [Call(Attribute(Name('loader', Load(), lineno=240, col_offset=29), 'get_source', Load(), lineno=240, col_offset=29), [Name('mod_name', Load(), lineno=240, col_offset=47)], [], None, None, lineno=240, col_offset=29), Name('None', Load(), lineno=240, col_offset=58)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=12), 'assertEqual', Load(), lineno=241, col_offset=12), [Call(Attribute(Name('loader', Load(), lineno=241, col_offset=29), 'get_filename', Load(), lineno=241, col_offset=29), [Name('mod_name', Load(), lineno=241, col_offset=49)], [], None, None, lineno=241, col_offset=29), Attribute(Name('mod', Load(), lineno=241, col_offset=60), '__file__', Load(), lineno=241, col_offset=60)], [], None, None, lineno=241, col_offset=12), lineno=241, col_offset=12), Assign([Name('zi2', Store(), lineno=244, col_offset=12)], Call(Attribute(Name('zipimport', Load(), lineno=244, col_offset=18), 'zipimporter', Load(), lineno=244, col_offset=18), [BinOp(BinOp(Name('TEMP_ZIP', Load(), lineno=244, col_offset=40), Add(), Attribute(Name('os', Load(), lineno=244, col_offset=51), 'sep', Load(), lineno=244, col_offset=51), lineno=244, col_offset=40), Add(), Name('TESTPACK', Load(), lineno=244, col_offset=60), lineno=244, col_offset=58)], [], None, None, lineno=244, col_offset=18), lineno=244, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=12), 'assertEqual', Load(), lineno=245, col_offset=12), [Attribute(Name('zi2', Load(), lineno=245, col_offset=29), 'archive', Load(), lineno=245, col_offset=29), Name('TEMP_ZIP', Load(), lineno=245, col_offset=42)], [], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=12), 'assertEqual', Load(), lineno=246, col_offset=12), [Attribute(Name('zi2', Load(), lineno=246, col_offset=29), 'prefix', Load(), lineno=246, col_offset=29), BinOp(Name('TESTPACK', Load(), lineno=246, col_offset=41), Add(), Attribute(Name('os', Load(), lineno=246, col_offset=52), 'sep', Load(), lineno=246, col_offset=52), lineno=246, col_offset=41)], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=12)], [Expr(Call(Attribute(Name('z', Load(), lineno=248, col_offset=12), 'close', Load(), lineno=248, col_offset=12), [], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=249, col_offset=12), 'remove', Load(), lineno=249, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=249, col_offset=22)], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12)], lineno=214, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('testZipImporterMethodsInSubDirectory', arguments([Name('self', Param(), lineno=251, col_offset=45)], None, None, []), [Assign([Name('packdir', Store(), lineno=252, col_offset=8)], BinOp(Name('TESTPACK', Load(), lineno=252, col_offset=18), Add(), Attribute(Name('os', Load(), lineno=252, col_offset=29), 'sep', Load(), lineno=252, col_offset=29), lineno=252, col_offset=18), lineno=252, col_offset=8), Assign([Name('packdir2', Store(), lineno=253, col_offset=8)], BinOp(BinOp(Name('packdir', Load(), lineno=253, col_offset=19), Add(), Name('TESTPACK2', Load(), lineno=253, col_offset=29), lineno=253, col_offset=19), Add(), Attribute(Name('os', Load(), lineno=253, col_offset=41), 'sep', Load(), lineno=253, col_offset=41), lineno=253, col_offset=39), lineno=253, col_offset=8), Assign([Name('files', Store(), lineno=254, col_offset=8)], Dict([BinOp(BinOp(Name('packdir2', Load(), lineno=254, col_offset=17), Add(), Str('__init__', lineno=254, col_offset=28), lineno=254, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=254, col_offset=41), lineno=254, col_offset=39), BinOp(BinOp(Name('packdir2', Load(), lineno=255, col_offset=17), Add(), Name('TESTMOD', Load(), lineno=255, col_offset=28), lineno=255, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=255, col_offset=38), lineno=255, col_offset=36)], [Tuple([Name('NOW', Load(), lineno=254, col_offset=51), Name('test_pyc', Load(), lineno=254, col_offset=56)], Load(), lineno=254, col_offset=51), Tuple([Name('NOW', Load(), lineno=255, col_offset=48), Name('test_pyc', Load(), lineno=255, col_offset=53)], Load(), lineno=255, col_offset=48)], lineno=254, col_offset=16), lineno=254, col_offset=8), Assign([Name('z', Store(), lineno=257, col_offset=8)], Call(Name('ZipFile', Load(), lineno=257, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=257, col_offset=20), Str('w', lineno=257, col_offset=30)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=8), TryFinally([For(Tuple([Name('name', Store(), lineno=259, col_offset=16), Tuple([Name('mtime', Store(), lineno=259, col_offset=23), Name('data', Store(), lineno=259, col_offset=30)], Store(), lineno=259, col_offset=23)], Store(), lineno=259, col_offset=16), Call(Attribute(Name('files', Load(), lineno=259, col_offset=39), 'items', Load(), lineno=259, col_offset=39), [], [], None, None, lineno=259, col_offset=39), [Assign([Name('zinfo', Store(), lineno=260, col_offset=16)], Call(Name('ZipInfo', Load(), lineno=260, col_offset=24), [Name('name', Load(), lineno=260, col_offset=32), Call(Attribute(Name('time', Load(), lineno=260, col_offset=38), 'localtime', Load(), lineno=260, col_offset=38), [Name('mtime', Load(), lineno=260, col_offset=53)], [], None, None, lineno=260, col_offset=38)], [], None, None, lineno=260, col_offset=24), lineno=260, col_offset=16), Assign([Attribute(Name('zinfo', Load(), lineno=261, col_offset=16), 'compress_type', Store(), lineno=261, col_offset=16)], Attribute(Name('self', Load(), lineno=261, col_offset=38), 'compression', Load(), lineno=261, col_offset=38), lineno=261, col_offset=16), Expr(Call(Attribute(Name('z', Load(), lineno=262, col_offset=16), 'writestr', Load(), lineno=262, col_offset=16), [Name('zinfo', Load(), lineno=262, col_offset=27), Name('data', Load(), lineno=262, col_offset=34)], [], None, None, lineno=262, col_offset=16), lineno=262, col_offset=16)], [], lineno=259, col_offset=12), Expr(Call(Attribute(Name('z', Load(), lineno=263, col_offset=12), 'close', Load(), lineno=263, col_offset=12), [], [], None, None, lineno=263, col_offset=12), lineno=263, col_offset=12), Assign([Name('zi', Store(), lineno=265, col_offset=12)], Call(Attribute(Name('zipimport', Load(), lineno=265, col_offset=17), 'zipimporter', Load(), lineno=265, col_offset=17), [BinOp(BinOp(Name('TEMP_ZIP', Load(), lineno=265, col_offset=39), Add(), Attribute(Name('os', Load(), lineno=265, col_offset=50), 'sep', Load(), lineno=265, col_offset=50), lineno=265, col_offset=39), Add(), Name('packdir', Load(), lineno=265, col_offset=59), lineno=265, col_offset=57)], [], None, None, lineno=265, col_offset=17), lineno=265, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=12), 'assertEqual', Load(), lineno=266, col_offset=12), [Attribute(Name('zi', Load(), lineno=266, col_offset=29), 'archive', Load(), lineno=266, col_offset=29), Name('TEMP_ZIP', Load(), lineno=266, col_offset=41)], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=12), 'assertEqual', Load(), lineno=267, col_offset=12), [Attribute(Name('zi', Load(), lineno=267, col_offset=29), 'prefix', Load(), lineno=267, col_offset=29), Name('packdir', Load(), lineno=267, col_offset=40)], [], None, None, lineno=267, col_offset=12), lineno=267, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=268, col_offset=12), 'assertEqual', Load(), lineno=268, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=268, col_offset=29), 'is_package', Load(), lineno=268, col_offset=29), [Name('TESTPACK2', Load(), lineno=268, col_offset=43)], [], None, None, lineno=268, col_offset=29), Name('True', Load(), lineno=268, col_offset=55)], [], None, None, lineno=268, col_offset=12), lineno=268, col_offset=12), Assign([Name('mod', Store(), lineno=269, col_offset=12)], Call(Attribute(Name('zi', Load(), lineno=269, col_offset=18), 'load_module', Load(), lineno=269, col_offset=18), [Name('TESTPACK2', Load(), lineno=269, col_offset=33)], [], None, None, lineno=269, col_offset=18), lineno=269, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=270, col_offset=12), 'assertEqual', Load(), lineno=270, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=270, col_offset=29), 'get_filename', Load(), lineno=270, col_offset=29), [Name('TESTPACK2', Load(), lineno=270, col_offset=45)], [], None, None, lineno=270, col_offset=29), Attribute(Name('mod', Load(), lineno=270, col_offset=57), '__file__', Load(), lineno=270, col_offset=57)], [], None, None, lineno=270, col_offset=12), lineno=270, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=272, col_offset=12), 'assertEqual', Load(), lineno=272, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=272, col_offset=29), 'is_package', Load(), lineno=272, col_offset=29), [BinOp(BinOp(Name('TESTPACK2', Load(), lineno=272, col_offset=43), Add(), Attribute(Name('os', Load(), lineno=272, col_offset=55), 'sep', Load(), lineno=272, col_offset=55), lineno=272, col_offset=43), Add(), Str('__init__', lineno=272, col_offset=64), lineno=272, col_offset=62)], [], None, None, lineno=272, col_offset=29), Name('False', Load(), lineno=272, col_offset=77)], [], None, None, lineno=272, col_offset=12), lineno=272, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=12), 'assertEqual', Load(), lineno=273, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=273, col_offset=29), 'is_package', Load(), lineno=273, col_offset=29), [BinOp(BinOp(Name('TESTPACK2', Load(), lineno=273, col_offset=43), Add(), Attribute(Name('os', Load(), lineno=273, col_offset=55), 'sep', Load(), lineno=273, col_offset=55), lineno=273, col_offset=43), Add(), Name('TESTMOD', Load(), lineno=273, col_offset=64), lineno=273, col_offset=62)], [], None, None, lineno=273, col_offset=29), Name('False', Load(), lineno=273, col_offset=74)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12), Assign([Name('mod_path', Store(), lineno=275, col_offset=12)], BinOp(BinOp(Name('TESTPACK2', Load(), lineno=275, col_offset=23), Add(), Attribute(Name('os', Load(), lineno=275, col_offset=35), 'sep', Load(), lineno=275, col_offset=35), lineno=275, col_offset=23), Add(), Name('TESTMOD', Load(), lineno=275, col_offset=44), lineno=275, col_offset=42), lineno=275, col_offset=12), Assign([Name('mod_name', Store(), lineno=276, col_offset=12)], Call(Name('module_path_to_dotted_name', Load(), lineno=276, col_offset=23), [Name('mod_path', Load(), lineno=276, col_offset=50)], [], None, None, lineno=276, col_offset=23), lineno=276, col_offset=12), Expr(Call(Name('__import__', Load(), lineno=277, col_offset=12), [Name('mod_name', Load(), lineno=277, col_offset=23)], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=12), Assign([Name('mod', Store(), lineno=278, col_offset=12)], Subscript(Attribute(Name('sys', Load(), lineno=278, col_offset=18), 'modules', Load(), lineno=278, col_offset=18), Index(Name('mod_name', Load(), lineno=278, col_offset=30)), Load(), lineno=278, col_offset=18), lineno=278, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=12), 'assertEqual', Load(), lineno=279, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=279, col_offset=29), 'get_source', Load(), lineno=279, col_offset=29), [Name('TESTPACK2', Load(), lineno=279, col_offset=43)], [], None, None, lineno=279, col_offset=29), Name('None', Load(), lineno=279, col_offset=55)], [], None, None, lineno=279, col_offset=12), lineno=279, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=12), 'assertEqual', Load(), lineno=280, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=280, col_offset=29), 'get_source', Load(), lineno=280, col_offset=29), [Name('mod_path', Load(), lineno=280, col_offset=43)], [], None, None, lineno=280, col_offset=29), Name('None', Load(), lineno=280, col_offset=54)], [], None, None, lineno=280, col_offset=12), lineno=280, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=12), 'assertEqual', Load(), lineno=281, col_offset=12), [Call(Attribute(Name('zi', Load(), lineno=281, col_offset=29), 'get_filename', Load(), lineno=281, col_offset=29), [Name('mod_path', Load(), lineno=281, col_offset=45)], [], None, None, lineno=281, col_offset=29), Attribute(Name('mod', Load(), lineno=281, col_offset=56), '__file__', Load(), lineno=281, col_offset=56)], [], None, None, lineno=281, col_offset=12), lineno=281, col_offset=12), Assign([Name('loader', Store(), lineno=283, col_offset=12)], Attribute(Name('mod', Load(), lineno=283, col_offset=21), '__loader__', Load(), lineno=283, col_offset=21), lineno=283, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=12), 'assertEqual', Load(), lineno=284, col_offset=12), [Call(Attribute(Name('loader', Load(), lineno=284, col_offset=29), 'get_source', Load(), lineno=284, col_offset=29), [Name('mod_name', Load(), lineno=284, col_offset=47)], [], None, None, lineno=284, col_offset=29), Name('None', Load(), lineno=284, col_offset=58)], [], None, None, lineno=284, col_offset=12), lineno=284, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=12), 'assertEqual', Load(), lineno=285, col_offset=12), [Call(Attribute(Name('loader', Load(), lineno=285, col_offset=29), 'get_filename', Load(), lineno=285, col_offset=29), [Name('mod_name', Load(), lineno=285, col_offset=49)], [], None, None, lineno=285, col_offset=29), Attribute(Name('mod', Load(), lineno=285, col_offset=60), '__file__', Load(), lineno=285, col_offset=60)], [], None, None, lineno=285, col_offset=12), lineno=285, col_offset=12)], [Expr(Call(Attribute(Name('z', Load(), lineno=287, col_offset=12), 'close', Load(), lineno=287, col_offset=12), [], [], None, None, lineno=287, col_offset=12), lineno=287, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=288, col_offset=12), 'remove', Load(), lineno=288, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=288, col_offset=22)], [], None, None, lineno=288, col_offset=12), lineno=288, col_offset=12)], lineno=258, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('testGetData', arguments([Name('self', Param(), lineno=290, col_offset=20)], None, None, []), [Assign([Name('z', Store(), lineno=291, col_offset=8)], Call(Name('ZipFile', Load(), lineno=291, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=291, col_offset=20), Str('w', lineno=291, col_offset=30)], [], None, None, lineno=291, col_offset=12), lineno=291, col_offset=8), Assign([Attribute(Name('z', Load(), lineno=292, col_offset=8), 'compression', Store(), lineno=292, col_offset=8)], Attribute(Name('self', Load(), lineno=292, col_offset=24), 'compression', Load(), lineno=292, col_offset=24), lineno=292, col_offset=8), TryFinally([Assign([Name('name', Store(), lineno=294, col_offset=12)], Str('testdata.dat', lineno=294, col_offset=19), lineno=294, col_offset=12), Assign([Name('data', Store(), lineno=295, col_offset=12)], BinOp(Call(Attribute(Str('', lineno=295, col_offset=19), 'join', Load(), lineno=295, col_offset=19), [ListComp(Call(Name('chr', Load(), lineno=295, col_offset=28), [Name('x', Load(), lineno=295, col_offset=32)], [], None, None, lineno=295, col_offset=28), [comprehension(Name('x', Store(), lineno=295, col_offset=39), Call(Name('range', Load(), lineno=295, col_offset=44), [Num(256, lineno=295, col_offset=50)], [], None, None, lineno=295, col_offset=44), [])], lineno=295, col_offset=28)], [], None, None, lineno=295, col_offset=19), Mult(), Num(500, lineno=295, col_offset=59), lineno=295, col_offset=19), lineno=295, col_offset=12), Expr(Call(Attribute(Name('z', Load(), lineno=296, col_offset=12), 'writestr', Load(), lineno=296, col_offset=12), [Name('name', Load(), lineno=296, col_offset=23), Name('data', Load(), lineno=296, col_offset=29)], [], None, None, lineno=296, col_offset=12), lineno=296, col_offset=12), Expr(Call(Attribute(Name('z', Load(), lineno=297, col_offset=12), 'close', Load(), lineno=297, col_offset=12), [], [], None, None, lineno=297, col_offset=12), lineno=297, col_offset=12), Assign([Name('zi', Store(), lineno=298, col_offset=12)], Call(Attribute(Name('zipimport', Load(), lineno=298, col_offset=17), 'zipimporter', Load(), lineno=298, col_offset=17), [Name('TEMP_ZIP', Load(), lineno=298, col_offset=39)], [], None, None, lineno=298, col_offset=17), lineno=298, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=299, col_offset=12), 'assertEqual', Load(), lineno=299, col_offset=12), [Name('data', Load(), lineno=299, col_offset=29), Call(Attribute(Name('zi', Load(), lineno=299, col_offset=35), 'get_data', Load(), lineno=299, col_offset=35), [Name('name', Load(), lineno=299, col_offset=47)], [], None, None, lineno=299, col_offset=35)], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=12), 'assertIn', Load(), lineno=300, col_offset=12), [Str('zipimporter object', lineno=300, col_offset=26), Call(Name('repr', Load(), lineno=300, col_offset=48), [Name('zi', Load(), lineno=300, col_offset=53)], [], None, None, lineno=300, col_offset=48)], [], None, None, lineno=300, col_offset=12), lineno=300, col_offset=12)], [Expr(Call(Attribute(Name('z', Load(), lineno=302, col_offset=12), 'close', Load(), lineno=302, col_offset=12), [], [], None, None, lineno=302, col_offset=12), lineno=302, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=303, col_offset=12), 'remove', Load(), lineno=303, col_offset=12), [Name('TEMP_ZIP', Load(), lineno=303, col_offset=22)], [], None, None, lineno=303, col_offset=12), lineno=303, col_offset=12)], lineno=293, col_offset=8)], [], lineno=290, col_offset=4), FunctionDef('testImporterAttr', arguments([Name('self', Param(), lineno=305, col_offset=25)], None, None, []), [Assign([Name('src', Store(), lineno=306, col_offset=8)], Str('if 1:  # indent hack\n        def get_file():\n            return __file__\n        if __loader__.get_data("some.data") != "some data":\n            raise AssertionError, "bad data"\n', lineno=310, col_offset=-1), lineno=306, col_offset=8), Assign([Name('pyc', Store(), lineno=311, col_offset=8)], Call(Name('make_pyc', Load(), lineno=311, col_offset=14), [Call(Name('compile', Load(), lineno=311, col_offset=23), [Name('src', Load(), lineno=311, col_offset=31), Str('<???>', lineno=311, col_offset=36), Str('exec', lineno=311, col_offset=45)], [], None, None, lineno=311, col_offset=23), Name('NOW', Load(), lineno=311, col_offset=54)], [], None, None, lineno=311, col_offset=14), lineno=311, col_offset=8), Assign([Name('files', Store(), lineno=312, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=312, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=312, col_offset=27), lineno=312, col_offset=17), Str('some.data', lineno=313, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=312, col_offset=37), Name('pyc', Load(), lineno=312, col_offset=42)], Load(), lineno=312, col_offset=37), Tuple([Name('NOW', Load(), lineno=313, col_offset=31), Str('some data', lineno=313, col_offset=36)], Load(), lineno=313, col_offset=31)], lineno=312, col_offset=16), lineno=312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'doTest', Load(), lineno=314, col_offset=8), [Name('pyc_ext', Load(), lineno=314, col_offset=20), Name('files', Load(), lineno=314, col_offset=29), Name('TESTMOD', Load(), lineno=314, col_offset=36)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8)], [], lineno=305, col_offset=4), FunctionDef('testImport_WithStuff', arguments([Name('self', Param(), lineno=316, col_offset=29)], None, None, []), [Assign([Name('files', Store(), lineno=319, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=319, col_offset=17), Add(), Str('.py', lineno=319, col_offset=27), lineno=319, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=319, col_offset=35), Name('test_src', Load(), lineno=319, col_offset=40)], Load(), lineno=319, col_offset=35)], lineno=319, col_offset=16), lineno=319, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=8), 'doTest', Load(), lineno=320, col_offset=8), [Str('.py', lineno=320, col_offset=20), Name('files', Load(), lineno=320, col_offset=27), Name('TESTMOD', Load(), lineno=320, col_offset=34)], [keyword('stuff', BinOp(Str('Some Stuff', lineno=321, col_offset=26), Mult(), Num(31, lineno=321, col_offset=39), lineno=321, col_offset=26))], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('assertModuleSource', arguments([Name('self', Param(), lineno=323, col_offset=27), Name('module', Param(), lineno=323, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'assertEqual', Load(), lineno=324, col_offset=8), [Call(Attribute(Name('inspect', Load(), lineno=324, col_offset=25), 'getsource', Load(), lineno=324, col_offset=25), [Name('module', Load(), lineno=324, col_offset=43)], [], None, None, lineno=324, col_offset=25), Name('test_src', Load(), lineno=324, col_offset=52)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8)], [], lineno=323, col_offset=4), FunctionDef('testGetSource', arguments([Name('self', Param(), lineno=326, col_offset=22)], None, None, []), [Assign([Name('files', Store(), lineno=327, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=327, col_offset=17), Add(), Str('.py', lineno=327, col_offset=27), lineno=327, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=327, col_offset=35), Name('test_src', Load(), lineno=327, col_offset=40)], Load(), lineno=327, col_offset=35)], lineno=327, col_offset=16), lineno=327, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=328, col_offset=8), 'doTest', Load(), lineno=328, col_offset=8), [Str('.py', lineno=328, col_offset=20), Name('files', Load(), lineno=328, col_offset=27), Name('TESTMOD', Load(), lineno=328, col_offset=34)], [keyword('call', Attribute(Name('self', Load(), lineno=328, col_offset=48), 'assertModuleSource', Load(), lineno=328, col_offset=48))], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('testGetCompiledSource', arguments([Name('self', Param(), lineno=330, col_offset=30)], None, None, []), [Assign([Name('pyc', Store(), lineno=331, col_offset=8)], Call(Name('make_pyc', Load(), lineno=331, col_offset=14), [Call(Name('compile', Load(), lineno=331, col_offset=23), [Name('test_src', Load(), lineno=331, col_offset=31), Str('<???>', lineno=331, col_offset=41), Str('exec', lineno=331, col_offset=50)], [], None, None, lineno=331, col_offset=23), Name('NOW', Load(), lineno=331, col_offset=59)], [], None, None, lineno=331, col_offset=14), lineno=331, col_offset=8), Assign([Name('files', Store(), lineno=332, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=332, col_offset=17), Add(), Str('.py', lineno=332, col_offset=27), lineno=332, col_offset=17), BinOp(Name('TESTMOD', Load(), lineno=333, col_offset=17), Add(), Name('pyc_ext', Load(), lineno=333, col_offset=27), lineno=333, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=332, col_offset=35), Name('test_src', Load(), lineno=332, col_offset=40)], Load(), lineno=332, col_offset=35), Tuple([Name('NOW', Load(), lineno=333, col_offset=37), Name('pyc', Load(), lineno=333, col_offset=42)], Load(), lineno=333, col_offset=37)], lineno=332, col_offset=16), lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=334, col_offset=8), 'doTest', Load(), lineno=334, col_offset=8), [Name('pyc_ext', Load(), lineno=334, col_offset=20), Name('files', Load(), lineno=334, col_offset=29), Name('TESTMOD', Load(), lineno=334, col_offset=36)], [keyword('call', Attribute(Name('self', Load(), lineno=334, col_offset=50), 'assertModuleSource', Load(), lineno=334, col_offset=50))], None, None, lineno=334, col_offset=8), lineno=334, col_offset=8)], [], lineno=330, col_offset=4), FunctionDef('runDoctest', arguments([Name('self', Param(), lineno=336, col_offset=19), Name('callback', Param(), lineno=336, col_offset=25)], None, None, []), [Assign([Name('files', Store(), lineno=337, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=337, col_offset=17), Add(), Str('.py', lineno=337, col_offset=27), lineno=337, col_offset=17), Str('xyz.txt', lineno=338, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=337, col_offset=35), Name('test_src', Load(), lineno=337, col_offset=40)], Load(), lineno=337, col_offset=35), Tuple([Name('NOW', Load(), lineno=338, col_offset=29), Str('>>> log.append(True)\n', lineno=338, col_offset=34)], Load(), lineno=338, col_offset=29)], lineno=337, col_offset=16), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=339, col_offset=8), 'doTest', Load(), lineno=339, col_offset=8), [Str('.py', lineno=339, col_offset=20), Name('files', Load(), lineno=339, col_offset=27), Name('TESTMOD', Load(), lineno=339, col_offset=34)], [keyword('call', Name('callback', Load(), lineno=339, col_offset=48))], None, None, lineno=339, col_offset=8), lineno=339, col_offset=8)], [], lineno=336, col_offset=4), FunctionDef('doDoctestFile', arguments([Name('self', Param(), lineno=341, col_offset=22), Name('module', Param(), lineno=341, col_offset=28)], None, None, []), [Assign([Name('log', Store(), lineno=342, col_offset=8)], List([], Load(), lineno=342, col_offset=14), lineno=342, col_offset=8), Assign([Tuple([Name('old_master', Store(), lineno=343, col_offset=8), Attribute(Name('doctest', Load(), lineno=343, col_offset=20), 'master', Store(), lineno=343, col_offset=20)], Store(), lineno=343, col_offset=8)], Tuple([Attribute(Name('doctest', Load(), lineno=343, col_offset=37), 'master', Load(), lineno=343, col_offset=37), Name('None', Load(), lineno=343, col_offset=53)], Load(), lineno=343, col_offset=37), lineno=343, col_offset=8), TryFinally([Expr(Call(Attribute(Name('doctest', Load(), lineno=345, col_offset=12), 'testfile', Load(), lineno=345, col_offset=12), [Str('xyz.txt', lineno=346, col_offset=16)], [keyword('package', Name('module', Load(), lineno=346, col_offset=35)), keyword('module_relative', Name('True', Load(), lineno=346, col_offset=59)), keyword('globs', Call(Name('locals', Load(), lineno=347, col_offset=22), [], [], None, None, lineno=347, col_offset=22))], None, None, lineno=345, col_offset=12), lineno=345, col_offset=12)], [Assign([Attribute(Name('doctest', Load(), lineno=350, col_offset=12), 'master', Store(), lineno=350, col_offset=12)], Name('old_master', Load(), lineno=350, col_offset=29), lineno=350, col_offset=12)], lineno=344, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=351, col_offset=8), 'assertEqual', Load(), lineno=351, col_offset=8), [Name('log', Load(), lineno=351, col_offset=25), List([Name('True', Load(), lineno=351, col_offset=30)], Load(), lineno=351, col_offset=29)], [], None, None, lineno=351, col_offset=8), lineno=351, col_offset=8)], [], lineno=341, col_offset=4), FunctionDef('testDoctestFile', arguments([Name('self', Param(), lineno=353, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=354, col_offset=8), 'runDoctest', Load(), lineno=354, col_offset=8), [Attribute(Name('self', Load(), lineno=354, col_offset=24), 'doDoctestFile', Load(), lineno=354, col_offset=24)], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8)], [], lineno=353, col_offset=4), FunctionDef('doDoctestSuite', arguments([Name('self', Param(), lineno=356, col_offset=23), Name('module', Param(), lineno=356, col_offset=29)], None, None, []), [Assign([Name('log', Store(), lineno=357, col_offset=8)], List([], Load(), lineno=357, col_offset=14), lineno=357, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('doctest', Load(), lineno=358, col_offset=8), 'DocFileTest', Load(), lineno=358, col_offset=8), [Str('xyz.txt', lineno=359, col_offset=12)], [keyword('package', Name('module', Load(), lineno=359, col_offset=31)), keyword('module_relative', Name('True', Load(), lineno=359, col_offset=55)), keyword('globs', Call(Name('locals', Load(), lineno=360, col_offset=18), [], [], None, None, lineno=360, col_offset=18))], None, None, lineno=358, col_offset=8), 'run', Load(), lineno=358, col_offset=8), [], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertEqual', Load(), lineno=362, col_offset=8), [Name('log', Load(), lineno=362, col_offset=25), List([Name('True', Load(), lineno=362, col_offset=30)], Load(), lineno=362, col_offset=29)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8)], [], lineno=356, col_offset=4), FunctionDef('testDoctestSuite', arguments([Name('self', Param(), lineno=364, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'runDoctest', Load(), lineno=365, col_offset=8), [Attribute(Name('self', Load(), lineno=365, col_offset=24), 'doDoctestSuite', Load(), lineno=365, col_offset=24)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8)], [], lineno=364, col_offset=4), FunctionDef('doTraceback', arguments([Name('self', Param(), lineno=367, col_offset=20), Name('module', Param(), lineno=367, col_offset=26)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('module', Load(), lineno=369, col_offset=12), 'do_raise', Load(), lineno=369, col_offset=12), [], [], None, None, lineno=369, col_offset=12), lineno=369, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('tb', Store(), lineno=371, col_offset=12)], Attribute(Subscript(Call(Attribute(Name('sys', Load(), lineno=371, col_offset=17), 'exc_info', Load(), lineno=371, col_offset=17), [], [], None, None, lineno=371, col_offset=17), Index(Num(2, lineno=371, col_offset=32)), Load(), lineno=371, col_offset=17), 'tb_next', Load(), lineno=371, col_offset=17), lineno=371, col_offset=12), Assign([Tuple([Name('f', Store(), lineno=373, col_offset=12), Name('lno', Store(), lineno=373, col_offset=14), Name('n', Store(), lineno=373, col_offset=18), Name('line', Store(), lineno=373, col_offset=20)], Store(), lineno=373, col_offset=12)], Subscript(Call(Name('extract_tb', Load(), lineno=373, col_offset=27), [Name('tb', Load(), lineno=373, col_offset=38), Num(1, lineno=373, col_offset=42)], [], None, None, lineno=373, col_offset=27), Index(Num(0, lineno=373, col_offset=45)), Load(), lineno=373, col_offset=27), lineno=373, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=374, col_offset=12), 'assertEqual', Load(), lineno=374, col_offset=12), [Name('line', Load(), lineno=374, col_offset=29), Call(Attribute(Name('raise_src', Load(), lineno=374, col_offset=35), 'strip', Load(), lineno=374, col_offset=35), [], [], None, None, lineno=374, col_offset=35)], [], None, None, lineno=374, col_offset=12), lineno=374, col_offset=12), Assign([Tuple([Name('f', Store(), lineno=376, col_offset=12), Name('lno', Store(), lineno=376, col_offset=14), Name('n', Store(), lineno=376, col_offset=18), Name('line', Store(), lineno=376, col_offset=20)], Store(), lineno=376, col_offset=12)], Subscript(Call(Name('extract_stack', Load(), lineno=376, col_offset=27), [Attribute(Name('tb', Load(), lineno=376, col_offset=41), 'tb_frame', Load(), lineno=376, col_offset=41), Num(1, lineno=376, col_offset=54)], [], None, None, lineno=376, col_offset=27), Index(Num(0, lineno=376, col_offset=57)), Load(), lineno=376, col_offset=27), lineno=376, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=12), 'assertEqual', Load(), lineno=377, col_offset=12), [Name('line', Load(), lineno=377, col_offset=29), Call(Attribute(Name('raise_src', Load(), lineno=377, col_offset=35), 'strip', Load(), lineno=377, col_offset=35), [], [], None, None, lineno=377, col_offset=35)], [], None, None, lineno=377, col_offset=12), lineno=377, col_offset=12), Assign([Name('s', Store(), lineno=379, col_offset=12)], Call(Attribute(Name('StringIO', Load(), lineno=379, col_offset=16), 'StringIO', Load(), lineno=379, col_offset=16), [], [], None, None, lineno=379, col_offset=16), lineno=379, col_offset=12), Expr(Call(Name('print_tb', Load(), lineno=380, col_offset=12), [Name('tb', Load(), lineno=380, col_offset=21), Num(1, lineno=380, col_offset=25), Name('s', Load(), lineno=380, col_offset=28)], [], None, None, lineno=380, col_offset=12), lineno=380, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=12), 'assertTrue', Load(), lineno=381, col_offset=12), [Call(Attribute(Call(Attribute(Name('s', Load(), lineno=381, col_offset=28), 'getvalue', Load(), lineno=381, col_offset=28), [], [], None, None, lineno=381, col_offset=28), 'endswith', Load(), lineno=381, col_offset=28), [Name('raise_src', Load(), lineno=381, col_offset=50)], [], None, None, lineno=381, col_offset=28)], [], None, None, lineno=381, col_offset=12), lineno=381, col_offset=12)], lineno=370, col_offset=8)], [Raise(Call(Name('AssertionError', Load(), lineno=383, col_offset=18), [Str('This ought to be impossible', lineno=383, col_offset=33)], [], None, None, lineno=383, col_offset=18), None, None, lineno=383, col_offset=12)], lineno=368, col_offset=8)], [], lineno=367, col_offset=4), FunctionDef('testTraceback', arguments([Name('self', Param(), lineno=385, col_offset=22)], None, None, []), [Assign([Name('files', Store(), lineno=386, col_offset=8)], Dict([BinOp(Name('TESTMOD', Load(), lineno=386, col_offset=17), Add(), Str('.py', lineno=386, col_offset=27), lineno=386, col_offset=17)], [Tuple([Name('NOW', Load(), lineno=386, col_offset=35), Name('raise_src', Load(), lineno=386, col_offset=40)], Load(), lineno=386, col_offset=35)], lineno=386, col_offset=16), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'doTest', Load(), lineno=387, col_offset=8), [Name('None', Load(), lineno=387, col_offset=20), Name('files', Load(), lineno=387, col_offset=26), Name('TESTMOD', Load(), lineno=387, col_offset=33)], [keyword('call', Attribute(Name('self', Load(), lineno=387, col_offset=47), 'doTraceback', Load(), lineno=387, col_offset=47))], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8)], [], lineno=385, col_offset=4)], [], lineno=63, col_offset=0), ClassDef('CompressedZipImportTestCase', [Name('UncompressedZipImportTestCase', Load(), lineno=391, col_offset=34)], [Assign([Name('compression', Store(), lineno=392, col_offset=4)], Name('ZIP_DEFLATED', Load(), lineno=392, col_offset=18), lineno=392, col_offset=4)], [Call(Attribute(Name('unittest', Load(), lineno=390, col_offset=1), 'skipUnless', Load(), lineno=390, col_offset=1), [Name('zlib', Load(), lineno=390, col_offset=21), Str('requires zlib', lineno=390, col_offset=27)], [], None, None, lineno=390, col_offset=1)], lineno=390, col_offset=0), ClassDef('BadFileZipImportTestCase', [Attribute(Name('unittest', Load(), lineno=395, col_offset=31), 'TestCase', Load(), lineno=395, col_offset=31)], [FunctionDef('assertZipFailure', arguments([Name('self', Param(), lineno=396, col_offset=25), Name('filename', Param(), lineno=396, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=397, col_offset=8), 'assertRaises', Load(), lineno=397, col_offset=8), [Attribute(Name('zipimport', Load(), lineno=397, col_offset=26), 'ZipImportError', Load(), lineno=397, col_offset=26), Attribute(Name('zipimport', Load(), lineno=398, col_offset=26), 'zipimporter', Load(), lineno=398, col_offset=26), Name('filename', Load(), lineno=398, col_offset=49)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8)], [], lineno=396, col_offset=4), FunctionDef('testNoFile', arguments([Name('self', Param(), lineno=400, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=401, col_offset=8), 'assertZipFailure', Load(), lineno=401, col_offset=8), [Str('AdfjdkFJKDFJjdklfjs', lineno=401, col_offset=30)], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8)], [], lineno=400, col_offset=4), FunctionDef('testEmptyFilename', arguments([Name('self', Param(), lineno=403, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertZipFailure', Load(), lineno=404, col_offset=8), [Str('', lineno=404, col_offset=30)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8)], [], lineno=403, col_offset=4), FunctionDef('testBadArgs', arguments([Name('self', Param(), lineno=406, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertRaises', Load(), lineno=407, col_offset=8), [Name('TypeError', Load(), lineno=407, col_offset=26), Attribute(Name('zipimport', Load(), lineno=407, col_offset=37), 'zipimporter', Load(), lineno=407, col_offset=37), Name('None', Load(), lineno=407, col_offset=60)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'assertRaises', Load(), lineno=408, col_offset=8), [Name('TypeError', Load(), lineno=408, col_offset=26), Attribute(Name('zipimport', Load(), lineno=408, col_offset=37), 'zipimporter', Load(), lineno=408, col_offset=37), Name('TESTMOD', Load(), lineno=408, col_offset=60)], [keyword('kwd', Name('None', Load(), lineno=408, col_offset=73))], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8)], [], lineno=406, col_offset=4), FunctionDef('testFilenameTooLong', arguments([Name('self', Param(), lineno=410, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertZipFailure', Load(), lineno=411, col_offset=8), [BinOp(Str('A', lineno=411, col_offset=30), Mult(), Num(33000, lineno=411, col_offset=36), lineno=411, col_offset=30)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8)], [], lineno=410, col_offset=4), FunctionDef('testEmptyFile', arguments([Name('self', Param(), lineno=413, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=414, col_offset=8), 'unlink', Load(), lineno=414, col_offset=8), [Name('TESTMOD', Load(), lineno=414, col_offset=28)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Call(Name('open', Load(), lineno=415, col_offset=8), [Name('TESTMOD', Load(), lineno=415, col_offset=13), Str('w+', lineno=415, col_offset=22)], [], None, None, lineno=415, col_offset=8), 'close', Load(), lineno=415, col_offset=8), [], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertZipFailure', Load(), lineno=416, col_offset=8), [Name('TESTMOD', Load(), lineno=416, col_offset=30)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8)], [], lineno=413, col_offset=4), FunctionDef('testFileUnreadable', arguments([Name('self', Param(), lineno=418, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=419, col_offset=8), 'unlink', Load(), lineno=419, col_offset=8), [Name('TESTMOD', Load(), lineno=419, col_offset=28)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8), Assign([Name('fd', Store(), lineno=420, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=420, col_offset=13), 'open', Load(), lineno=420, col_offset=13), [Name('TESTMOD', Load(), lineno=420, col_offset=21), Attribute(Name('os', Load(), lineno=420, col_offset=30), 'O_CREAT', Load(), lineno=420, col_offset=30), Num(0, lineno=420, col_offset=42)], [], None, None, lineno=420, col_offset=13), lineno=420, col_offset=8), TryFinally([Expr(Call(Attribute(Name('os', Load(), lineno=422, col_offset=12), 'close', Load(), lineno=422, col_offset=12), [Name('fd', Load(), lineno=422, col_offset=21)], [], None, None, lineno=422, col_offset=12), lineno=422, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=423, col_offset=12), 'assertZipFailure', Load(), lineno=423, col_offset=12), [Name('TESTMOD', Load(), lineno=423, col_offset=34)], [], None, None, lineno=423, col_offset=12), lineno=423, col_offset=12)], [Expr(Call(Attribute(Name('os', Load(), lineno=427, col_offset=12), 'chmod', Load(), lineno=427, col_offset=12), [Name('TESTMOD', Load(), lineno=427, col_offset=21), Num(438, lineno=427, col_offset=30)], [], None, None, lineno=427, col_offset=12), lineno=427, col_offset=12), Expr(Call(Attribute(Name('test_support', Load(), lineno=428, col_offset=12), 'unlink', Load(), lineno=428, col_offset=12), [Name('TESTMOD', Load(), lineno=428, col_offset=32)], [], None, None, lineno=428, col_offset=12), lineno=428, col_offset=12)], lineno=421, col_offset=8)], [], lineno=418, col_offset=4), FunctionDef('testNotZipFile', arguments([Name('self', Param(), lineno=430, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=431, col_offset=8), 'unlink', Load(), lineno=431, col_offset=8), [Name('TESTMOD', Load(), lineno=431, col_offset=28)], [], None, None, lineno=431, col_offset=8), lineno=431, col_offset=8), Assign([Name('fp', Store(), lineno=432, col_offset=8)], Call(Name('open', Load(), lineno=432, col_offset=13), [Name('TESTMOD', Load(), lineno=432, col_offset=18), Str('w+', lineno=432, col_offset=27)], [], None, None, lineno=432, col_offset=13), lineno=432, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=433, col_offset=8), 'write', Load(), lineno=433, col_offset=8), [BinOp(Str('a', lineno=433, col_offset=17), Mult(), Num(22, lineno=433, col_offset=23), lineno=433, col_offset=17)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=434, col_offset=8), 'close', Load(), lineno=434, col_offset=8), [], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'assertZipFailure', Load(), lineno=435, col_offset=8), [Name('TESTMOD', Load(), lineno=435, col_offset=30)], [], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8)], [], lineno=430, col_offset=4), FunctionDef('_testBogusZipFile', arguments([Name('self', Param(), lineno=438, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=439, col_offset=8), 'unlink', Load(), lineno=439, col_offset=8), [Name('TESTMOD', Load(), lineno=439, col_offset=28)], [], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8), Assign([Name('fp', Store(), lineno=440, col_offset=8)], Call(Name('open', Load(), lineno=440, col_offset=13), [Name('TESTMOD', Load(), lineno=440, col_offset=18), Str('w+', lineno=440, col_offset=27)], [], None, None, lineno=440, col_offset=13), lineno=440, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=441, col_offset=8), 'write', Load(), lineno=441, col_offset=8), [Call(Attribute(Name('struct', Load(), lineno=441, col_offset=17), 'pack', Load(), lineno=441, col_offset=17), [Str('=I', lineno=441, col_offset=29), Num(101010256, lineno=441, col_offset=35)], [], None, None, lineno=441, col_offset=17)], [], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=442, col_offset=8), 'write', Load(), lineno=442, col_offset=8), [BinOp(Str('a', lineno=442, col_offset=17), Mult(), Num(18, lineno=442, col_offset=23), lineno=442, col_offset=17)], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=443, col_offset=8), 'close', Load(), lineno=443, col_offset=8), [], [], None, None, lineno=443, col_offset=8), lineno=443, col_offset=8), Assign([Name('z', Store(), lineno=444, col_offset=8)], Call(Attribute(Name('zipimport', Load(), lineno=444, col_offset=12), 'zipimporter', Load(), lineno=444, col_offset=12), [Name('TESTMOD', Load(), lineno=444, col_offset=34)], [], None, None, lineno=444, col_offset=12), lineno=444, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=447, col_offset=12), 'assertRaises', Load(), lineno=447, col_offset=12), [Name('TypeError', Load(), lineno=447, col_offset=30), Attribute(Name('z', Load(), lineno=447, col_offset=41), 'find_module', Load(), lineno=447, col_offset=41), Name('None', Load(), lineno=447, col_offset=56)], [], None, None, lineno=447, col_offset=12), lineno=447, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=448, col_offset=12), 'assertRaises', Load(), lineno=448, col_offset=12), [Name('TypeError', Load(), lineno=448, col_offset=30), Attribute(Name('z', Load(), lineno=448, col_offset=41), 'load_module', Load(), lineno=448, col_offset=41), Name('None', Load(), lineno=448, col_offset=56)], [], None, None, lineno=448, col_offset=12), lineno=448, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=12), 'assertRaises', Load(), lineno=449, col_offset=12), [Name('TypeError', Load(), lineno=449, col_offset=30), Attribute(Name('z', Load(), lineno=449, col_offset=41), 'is_package', Load(), lineno=449, col_offset=41), Name('None', Load(), lineno=449, col_offset=55)], [], None, None, lineno=449, col_offset=12), lineno=449, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=450, col_offset=12), 'assertRaises', Load(), lineno=450, col_offset=12), [Name('TypeError', Load(), lineno=450, col_offset=30), Attribute(Name('z', Load(), lineno=450, col_offset=41), 'get_code', Load(), lineno=450, col_offset=41), Name('None', Load(), lineno=450, col_offset=53)], [], None, None, lineno=450, col_offset=12), lineno=450, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=451, col_offset=12), 'assertRaises', Load(), lineno=451, col_offset=12), [Name('TypeError', Load(), lineno=451, col_offset=30), Attribute(Name('z', Load(), lineno=451, col_offset=41), 'get_data', Load(), lineno=451, col_offset=41), Name('None', Load(), lineno=451, col_offset=53)], [], None, None, lineno=451, col_offset=12), lineno=451, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=452, col_offset=12), 'assertRaises', Load(), lineno=452, col_offset=12), [Name('TypeError', Load(), lineno=452, col_offset=30), Attribute(Name('z', Load(), lineno=452, col_offset=41), 'get_source', Load(), lineno=452, col_offset=41), Name('None', Load(), lineno=452, col_offset=55)], [], None, None, lineno=452, col_offset=12), lineno=452, col_offset=12), Assign([Name('error', Store(), lineno=454, col_offset=12)], Attribute(Name('zipimport', Load(), lineno=454, col_offset=20), 'ZipImportError', Load(), lineno=454, col_offset=20), lineno=454, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=12), 'assertEqual', Load(), lineno=455, col_offset=12), [Call(Attribute(Name('z', Load(), lineno=455, col_offset=29), 'find_module', Load(), lineno=455, col_offset=29), [Str('abc', lineno=455, col_offset=43)], [], None, None, lineno=455, col_offset=29), Name('None', Load(), lineno=455, col_offset=51)], [], None, None, lineno=455, col_offset=12), lineno=455, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=457, col_offset=12), 'assertRaises', Load(), lineno=457, col_offset=12), [Name('error', Load(), lineno=457, col_offset=30), Attribute(Name('z', Load(), lineno=457, col_offset=37), 'load_module', Load(), lineno=457, col_offset=37), Str('abc', lineno=457, col_offset=52)], [], None, None, lineno=457, col_offset=12), lineno=457, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=12), 'assertRaises', Load(), lineno=458, col_offset=12), [Name('error', Load(), lineno=458, col_offset=30), Attribute(Name('z', Load(), lineno=458, col_offset=37), 'get_code', Load(), lineno=458, col_offset=37), Str('abc', lineno=458, col_offset=49)], [], None, None, lineno=458, col_offset=12), lineno=458, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=12), 'assertRaises', Load(), lineno=459, col_offset=12), [Name('IOError', Load(), lineno=459, col_offset=30), Attribute(Name('z', Load(), lineno=459, col_offset=39), 'get_data', Load(), lineno=459, col_offset=39), Str('abc', lineno=459, col_offset=51)], [], None, None, lineno=459, col_offset=12), lineno=459, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=460, col_offset=12), 'assertRaises', Load(), lineno=460, col_offset=12), [Name('error', Load(), lineno=460, col_offset=30), Attribute(Name('z', Load(), lineno=460, col_offset=37), 'get_source', Load(), lineno=460, col_offset=37), Str('abc', lineno=460, col_offset=51)], [], None, None, lineno=460, col_offset=12), lineno=460, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=461, col_offset=12), 'assertRaises', Load(), lineno=461, col_offset=12), [Name('error', Load(), lineno=461, col_offset=30), Attribute(Name('z', Load(), lineno=461, col_offset=37), 'is_package', Load(), lineno=461, col_offset=37), Str('abc', lineno=461, col_offset=51)], [], None, None, lineno=461, col_offset=12), lineno=461, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('zipimport', Load(), lineno=463, col_offset=12), '_zip_directory_cache', Load(), lineno=463, col_offset=12), 'clear', Load(), lineno=463, col_offset=12), [], [], None, None, lineno=463, col_offset=12), lineno=463, col_offset=12)], lineno=446, col_offset=8)], [], lineno=438, col_offset=4)], [], lineno=395, col_offset=0), FunctionDef('cleanup', arguments([], None, None, []), [Global(['test_imported'], lineno=468, col_offset=4), If(Name('test_imported', Load(), lineno=469, col_offset=7), [Expr(Call(Attribute(Attribute(Name('zipimport', Load(), lineno=470, col_offset=8), '_zip_directory_cache', Load(), lineno=470, col_offset=8), 'clear', Load(), lineno=470, col_offset=8), [], [], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8), If(Call(Name('hasattr', Load(), lineno=471, col_offset=11), [Name('UncompressedZipImportTestCase', Load(), lineno=471, col_offset=19), Str('testAFakeZlib', lineno=471, col_offset=50)], [], None, None, lineno=471, col_offset=11), [Expr(Call(Name('delattr', Load(), lineno=472, col_offset=12), [Name('UncompressedZipImportTestCase', Load(), lineno=472, col_offset=20), Str('testAFakeZlib', lineno=472, col_offset=51)], [], None, None, lineno=472, col_offset=12), lineno=472, col_offset=12)], [], lineno=471, col_offset=8), If(Call(Name('hasattr', Load(), lineno=473, col_offset=11), [Name('CompressedZipImportTestCase', Load(), lineno=473, col_offset=19), Str('testAFakeZlib', lineno=473, col_offset=48)], [], None, None, lineno=473, col_offset=11), [Expr(Call(Name('delattr', Load(), lineno=474, col_offset=12), [Name('CompressedZipImportTestCase', Load(), lineno=474, col_offset=20), Str('testAFakeZlib', lineno=474, col_offset=49)], [], None, None, lineno=474, col_offset=12), lineno=474, col_offset=12)], [], lineno=473, col_offset=8)], [], lineno=469, col_offset=4), Assign([Name('test_imported', Store(), lineno=475, col_offset=4)], Name('True', Load(), lineno=475, col_offset=20), lineno=475, col_offset=4)], [], lineno=466, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('cleanup', Load(), lineno=478, col_offset=4), [], [], None, None, lineno=478, col_offset=4), lineno=478, col_offset=4), TryFinally([Expr(Call(Attribute(Name('test_support', Load(), lineno=480, col_offset=8), 'run_unittest', Load(), lineno=480, col_offset=8), [Name('UncompressedZipImportTestCase', Load(), lineno=481, col_offset=14), Name('CompressedZipImportTestCase', Load(), lineno=482, col_offset=14), Name('BadFileZipImportTestCase', Load(), lineno=483, col_offset=14)], [], None, None, lineno=480, col_offset=8), lineno=480, col_offset=8)], [Expr(Call(Attribute(Name('test_support', Load(), lineno=486, col_offset=8), 'unlink', Load(), lineno=486, col_offset=8), [Name('TESTMOD', Load(), lineno=486, col_offset=28)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8)], lineno=479, col_offset=4)], [], lineno=477, col_offset=0), If(Compare(Name('__name__', Load(), lineno=488, col_offset=3), [Eq()], [Str('__main__', lineno=488, col_offset=15)], lineno=488, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=489, col_offset=4), [], [], None, None, lineno=489, col_offset=4), lineno=489, col_offset=4)], [], lineno=488, col_offset=0)])
