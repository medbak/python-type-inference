Module([Import([alias('os', None)], lineno=3, col_offset=0), Import([alias('sys', None)], lineno=4, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), Import([alias('pickle', None), alias('cPickle', None)], lineno=6, col_offset=0), ImportFrom('test.test_support', [alias('TESTFN', None), alias('unlink', None), alias('run_unittest', None), alias('captured_output', None), alias('check_warnings', None), alias('cpython_only', None)], 0, lineno=8, col_offset=0), ImportFrom('test.test_pep352', [alias('ignore_deprecation_warnings', None)], 0, lineno=10, col_offset=0), ClassDef('ExceptionTests', [Attribute(Name('unittest', Load(), lineno=14, col_offset=21), 'TestCase', Load(), lineno=14, col_offset=21)], [FunctionDef('testReload', arguments([Name('self', Param(), lineno=16, col_offset=19)], None, None, []), [TryExcept([ImportFrom('imp', [alias('reload', None)], 0, lineno=20, col_offset=12), Import([alias('exceptions', None)], lineno=21, col_offset=12), Expr(Call(Name('reload', Load(), lineno=22, col_offset=12), [Name('exceptions', Load(), lineno=22, col_offset=19)], [], None, None, lineno=22, col_offset=12), lineno=22, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=23, col_offset=15), Name('e', Store(), lineno=23, col_offset=28), [Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=12), 'fail', Load(), lineno=24, col_offset=12), [BinOp(Str('reloading exceptions: %s', lineno=24, col_offset=22), Mod(), Name('e', Load(), lineno=24, col_offset=51), lineno=24, col_offset=22)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=12)], lineno=23, col_offset=8)], [], lineno=19, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('raise_catch', arguments([Name('self', Param(), lineno=26, col_offset=20), Name('exc', Param(), lineno=26, col_offset=26), Name('excname', Param(), lineno=26, col_offset=31)], None, None, []), [TryExcept([Raise(Name('exc', Load(), lineno=28, col_offset=18), Str('spam', lineno=28, col_offset=23), None, lineno=28, col_offset=12)], [ExceptHandler(Name('exc', Load(), lineno=29, col_offset=15), Name('err', Store(), lineno=29, col_offset=20), [Assign([Name('buf1', Store(), lineno=30, col_offset=12)], Call(Name('str', Load(), lineno=30, col_offset=19), [Name('err', Load(), lineno=30, col_offset=23)], [], None, None, lineno=30, col_offset=19), lineno=30, col_offset=12)], lineno=29, col_offset=8)], [], lineno=27, col_offset=8), TryExcept([Raise(Call(Name('exc', Load(), lineno=32, col_offset=18), [Str('spam', lineno=32, col_offset=22)], [], None, None, lineno=32, col_offset=18), None, None, lineno=32, col_offset=12)], [ExceptHandler(Name('exc', Load(), lineno=33, col_offset=15), Name('err', Store(), lineno=33, col_offset=20), [Assign([Name('buf2', Store(), lineno=34, col_offset=12)], Call(Name('str', Load(), lineno=34, col_offset=19), [Name('err', Load(), lineno=34, col_offset=23)], [], None, None, lineno=34, col_offset=19), lineno=34, col_offset=12)], lineno=33, col_offset=8)], [], lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=8), 'assertEqual', Load(), lineno=35, col_offset=8), [Name('buf1', Load(), lineno=35, col_offset=25), Name('buf2', Load(), lineno=35, col_offset=31)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Attribute(Name('exc', Load(), lineno=36, col_offset=25), '__name__', Load(), lineno=36, col_offset=25), Name('excname', Load(), lineno=36, col_offset=39)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=26, col_offset=4), FunctionDef('testRaising', arguments([Name('self', Param(), lineno=38, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'raise_catch', Load(), lineno=39, col_offset=8), [Name('AttributeError', Load(), lineno=39, col_offset=25), Str('AttributeError', lineno=39, col_offset=41)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertRaises', Load(), lineno=40, col_offset=8), [Name('AttributeError', Load(), lineno=40, col_offset=26), Name('getattr', Load(), lineno=40, col_offset=42), Name('sys', Load(), lineno=40, col_offset=51), Str('undefined_attribute', lineno=40, col_offset=56)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'raise_catch', Load(), lineno=42, col_offset=8), [Name('EOFError', Load(), lineno=42, col_offset=25), Str('EOFError', lineno=42, col_offset=35)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Assign([Name('fp', Store(), lineno=43, col_offset=8)], Call(Name('open', Load(), lineno=43, col_offset=13), [Name('TESTFN', Load(), lineno=43, col_offset=18), Str('w', lineno=43, col_offset=26)], [], None, None, lineno=43, col_offset=13), lineno=43, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=44, col_offset=8), 'close', Load(), lineno=44, col_offset=8), [], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Assign([Name('fp', Store(), lineno=45, col_offset=8)], Call(Name('open', Load(), lineno=45, col_offset=13), [Name('TESTFN', Load(), lineno=45, col_offset=18), Str('r', lineno=45, col_offset=26)], [], None, None, lineno=45, col_offset=13), lineno=45, col_offset=8), Assign([Name('savestdin', Store(), lineno=46, col_offset=8)], Attribute(Name('sys', Load(), lineno=46, col_offset=20), 'stdin', Load(), lineno=46, col_offset=20), lineno=46, col_offset=8), TryFinally([TryExcept([Assign([Attribute(Name('sys', Load(), lineno=49, col_offset=16), 'stdin', Store(), lineno=49, col_offset=16)], Name('fp', Load(), lineno=49, col_offset=28), lineno=49, col_offset=16), Assign([Name('x', Store(), lineno=50, col_offset=16)], Call(Name('raw_input', Load(), lineno=50, col_offset=20), [], [], None, None, lineno=50, col_offset=20), lineno=50, col_offset=16)], [ExceptHandler(Name('EOFError', Load(), lineno=51, col_offset=19), None, [Pass( lineno=52, col_offset=16)], lineno=51, col_offset=12)], [], lineno=48, col_offset=12)], [Assign([Attribute(Name('sys', Load(), lineno=54, col_offset=12), 'stdin', Store(), lineno=54, col_offset=12)], Name('savestdin', Load(), lineno=54, col_offset=24), lineno=54, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=55, col_offset=12), 'close', Load(), lineno=55, col_offset=12), [], [], None, None, lineno=55, col_offset=12), lineno=55, col_offset=12), Expr(Call(Name('unlink', Load(), lineno=56, col_offset=12), [Name('TESTFN', Load(), lineno=56, col_offset=19)], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=12)], lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=58, col_offset=8), 'raise_catch', Load(), lineno=58, col_offset=8), [Name('IOError', Load(), lineno=58, col_offset=25), Str('IOError', lineno=58, col_offset=34)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertRaises', Load(), lineno=59, col_offset=8), [Name('IOError', Load(), lineno=59, col_offset=26), Name('open', Load(), lineno=59, col_offset=35), Str('this file does not exist', lineno=59, col_offset=41), Str('r', lineno=59, col_offset=69)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'raise_catch', Load(), lineno=61, col_offset=8), [Name('ImportError', Load(), lineno=61, col_offset=25), Str('ImportError', lineno=61, col_offset=38)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertRaises', Load(), lineno=62, col_offset=8), [Name('ImportError', Load(), lineno=62, col_offset=26), Name('__import__', Load(), lineno=62, col_offset=39), Str('undefined_module', lineno=62, col_offset=51)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'raise_catch', Load(), lineno=64, col_offset=8), [Name('IndexError', Load(), lineno=64, col_offset=25), Str('IndexError', lineno=64, col_offset=37)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Assign([Name('x', Store(), lineno=65, col_offset=8)], List([], Load(), lineno=65, col_offset=12), lineno=65, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertRaises', Load(), lineno=66, col_offset=8), [Name('IndexError', Load(), lineno=66, col_offset=26), Attribute(Name('x', Load(), lineno=66, col_offset=38), '__getitem__', Load(), lineno=66, col_offset=38), Num(10, lineno=66, col_offset=53)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=68, col_offset=8), 'raise_catch', Load(), lineno=68, col_offset=8), [Name('KeyError', Load(), lineno=68, col_offset=25), Str('KeyError', lineno=68, col_offset=35)], [], None, None, lineno=68, col_offset=8), lineno=68, col_offset=8), Assign([Name('x', Store(), lineno=69, col_offset=8)], Dict([], [], lineno=69, col_offset=12), lineno=69, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertRaises', Load(), lineno=70, col_offset=8), [Name('KeyError', Load(), lineno=70, col_offset=26), Attribute(Name('x', Load(), lineno=70, col_offset=36), '__getitem__', Load(), lineno=70, col_offset=36), Str('key', lineno=70, col_offset=51)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'raise_catch', Load(), lineno=72, col_offset=8), [Name('KeyboardInterrupt', Load(), lineno=72, col_offset=25), Str('KeyboardInterrupt', lineno=72, col_offset=44)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'raise_catch', Load(), lineno=74, col_offset=8), [Name('MemoryError', Load(), lineno=74, col_offset=25), Str('MemoryError', lineno=74, col_offset=38)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=76, col_offset=8), 'raise_catch', Load(), lineno=76, col_offset=8), [Name('NameError', Load(), lineno=76, col_offset=25), Str('NameError', lineno=76, col_offset=36)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8), TryExcept([Assign([Name('x', Store(), lineno=77, col_offset=13)], Name('undefined_variable', Load(), lineno=77, col_offset=17), lineno=77, col_offset=13)], [ExceptHandler(Name('NameError', Load(), lineno=78, col_offset=15), None, [Pass( lineno=78, col_offset=26)], lineno=78, col_offset=8)], [], lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'raise_catch', Load(), lineno=80, col_offset=8), [Name('OverflowError', Load(), lineno=80, col_offset=25), Str('OverflowError', lineno=80, col_offset=40)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Assign([Name('x', Store(), lineno=81, col_offset=8)], Num(1, lineno=81, col_offset=12), lineno=81, col_offset=8), For(Name('dummy', Store(), lineno=82, col_offset=12), Call(Name('range', Load(), lineno=82, col_offset=21), [Num(128, lineno=82, col_offset=27)], [], None, None, lineno=82, col_offset=21), [AugAssign(Name('x', Store(), lineno=83, col_offset=12), Add(), Name('x', Load(), lineno=83, col_offset=17), lineno=83, col_offset=12)], [], lineno=82, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=85, col_offset=8), 'raise_catch', Load(), lineno=85, col_offset=8), [Name('RuntimeError', Load(), lineno=85, col_offset=25), Str('RuntimeError', lineno=85, col_offset=39)], [], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=8), 'raise_catch', Load(), lineno=87, col_offset=8), [Name('SyntaxError', Load(), lineno=87, col_offset=25), Str('SyntaxError', lineno=87, col_offset=38)], [], None, None, lineno=87, col_offset=8), lineno=87, col_offset=8), TryExcept([Exec(Str('/\n', lineno=88, col_offset=18), None, None, lineno=88, col_offset=13)], [ExceptHandler(Name('SyntaxError', Load(), lineno=89, col_offset=15), None, [Pass( lineno=89, col_offset=28)], lineno=89, col_offset=8)], [], lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'raise_catch', Load(), lineno=91, col_offset=8), [Name('IndentationError', Load(), lineno=91, col_offset=25), Str('IndentationError', lineno=91, col_offset=43)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=8), 'raise_catch', Load(), lineno=93, col_offset=8), [Name('TabError', Load(), lineno=93, col_offset=25), Str('TabError', lineno=93, col_offset=35)], [], None, None, lineno=93, col_offset=8), lineno=93, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=99, col_offset=8), 'raise_catch', Load(), lineno=99, col_offset=8), [Name('SystemError', Load(), lineno=99, col_offset=25), Str('SystemError', lineno=99, col_offset=38)], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'raise_catch', Load(), lineno=101, col_offset=8), [Name('SystemExit', Load(), lineno=101, col_offset=25), Str('SystemExit', lineno=101, col_offset=37)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=102, col_offset=8), 'assertRaises', Load(), lineno=102, col_offset=8), [Name('SystemExit', Load(), lineno=102, col_offset=26), Attribute(Name('sys', Load(), lineno=102, col_offset=38), 'exit', Load(), lineno=102, col_offset=38), Num(0, lineno=102, col_offset=48)], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=104, col_offset=8), 'raise_catch', Load(), lineno=104, col_offset=8), [Name('TypeError', Load(), lineno=104, col_offset=25), Str('TypeError', lineno=104, col_offset=36)], [], None, None, lineno=104, col_offset=8), lineno=104, col_offset=8), TryExcept([Expr(BinOp(List([], Load(), lineno=105, col_offset=13), Add(), Tuple([], Load(), lineno=105, col_offset=18), lineno=105, col_offset=13), lineno=105, col_offset=13)], [ExceptHandler(Name('TypeError', Load(), lineno=106, col_offset=15), None, [Pass( lineno=106, col_offset=26)], lineno=106, col_offset=8)], [], lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'raise_catch', Load(), lineno=108, col_offset=8), [Name('ValueError', Load(), lineno=108, col_offset=25), Str('ValueError', lineno=108, col_offset=37)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'assertRaises', Load(), lineno=109, col_offset=8), [Name('ValueError', Load(), lineno=109, col_offset=26), Name('chr', Load(), lineno=109, col_offset=38), Num(10000, lineno=109, col_offset=43)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'raise_catch', Load(), lineno=111, col_offset=8), [Name('ZeroDivisionError', Load(), lineno=111, col_offset=25), Str('ZeroDivisionError', lineno=111, col_offset=44)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8), TryExcept([Assign([Name('x', Store(), lineno=112, col_offset=13)], BinOp(Num(1, lineno=112, col_offset=17), FloorDiv(), Num(0, lineno=112, col_offset=22), lineno=112, col_offset=17), lineno=112, col_offset=13)], [ExceptHandler(Name('ZeroDivisionError', Load(), lineno=113, col_offset=15), None, [Pass( lineno=113, col_offset=34)], lineno=113, col_offset=8)], [], lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=115, col_offset=8), 'raise_catch', Load(), lineno=115, col_offset=8), [Name('Exception', Load(), lineno=115, col_offset=25), Str('Exception', lineno=115, col_offset=36)], [], None, None, lineno=115, col_offset=8), lineno=115, col_offset=8), TryExcept([Assign([Name('x', Store(), lineno=116, col_offset=13)], BinOp(Num(1, lineno=116, col_offset=17), FloorDiv(), Num(0, lineno=116, col_offset=22), lineno=116, col_offset=17), lineno=116, col_offset=13)], [ExceptHandler(Name('Exception', Load(), lineno=117, col_offset=15), Name('e', Store(), lineno=117, col_offset=26), [Pass( lineno=117, col_offset=29)], lineno=117, col_offset=8)], [], lineno=116, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('testSyntaxErrorMessage', arguments([Name('self', Param(), lineno=119, col_offset=31)], None, None, []), [FunctionDef('ckmsg', arguments([Name('src', Param(), lineno=123, col_offset=18), Name('msg', Param(), lineno=123, col_offset=23)], None, None, []), [TryExcept([Expr(Call(Name('compile', Load(), lineno=125, col_offset=16), [Name('src', Load(), lineno=125, col_offset=24), Str('<fragment>', lineno=125, col_offset=29), Str('exec', lineno=125, col_offset=43)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=16)], [ExceptHandler(Name('SyntaxError', Load(), lineno=126, col_offset=19), Name('e', Store(), lineno=126, col_offset=32), [If(Compare(Attribute(Name('e', Load(), lineno=127, col_offset=19), 'msg', Load(), lineno=127, col_offset=19), [NotEq()], [Name('msg', Load(), lineno=127, col_offset=28)], lineno=127, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=20), 'fail', Load(), lineno=128, col_offset=20), [BinOp(Str('expected %s, got %s', lineno=128, col_offset=30), Mod(), Tuple([Name('msg', Load(), lineno=128, col_offset=55), Attribute(Name('e', Load(), lineno=128, col_offset=60), 'msg', Load(), lineno=128, col_offset=60)], Load(), lineno=128, col_offset=55), lineno=128, col_offset=30)], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=20)], [], lineno=127, col_offset=16)], lineno=126, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=16), 'fail', Load(), lineno=130, col_offset=16), [Str('failed to get expected SyntaxError', lineno=130, col_offset=26)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=16)], lineno=124, col_offset=12)], [], lineno=123, col_offset=8), Assign([Name('s', Store(), lineno=132, col_offset=8)], Str('while 1:\n            try:\n                pass\n            finally:\n                continue', lineno=136, col_offset=-1), lineno=132, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=138, col_offset=15), 'platform', Load(), lineno=138, col_offset=15), 'startswith', Load(), lineno=138, col_offset=15), [Str('java', lineno=138, col_offset=39)], [], None, None, lineno=138, col_offset=15), lineno=138, col_offset=11), [Expr(Call(Name('ckmsg', Load(), lineno=139, col_offset=12), [Name('s', Load(), lineno=139, col_offset=18), Str("'continue' not supported inside 'finally' clause", lineno=139, col_offset=21)], [], None, None, lineno=139, col_offset=12), lineno=139, col_offset=12)], [], lineno=138, col_offset=8), Assign([Name('s', Store(), lineno=141, col_offset=8)], Str('if 1:\n        try:\n            continue\n        except:\n            pass', lineno=145, col_offset=-1), lineno=141, col_offset=8), Expr(Call(Name('ckmsg', Load(), lineno=147, col_offset=8), [Name('s', Load(), lineno=147, col_offset=14), Str("'continue' not properly in loop", lineno=147, col_offset=17)], [], None, None, lineno=147, col_offset=8), lineno=147, col_offset=8), Expr(Call(Name('ckmsg', Load(), lineno=148, col_offset=8), [Str('continue\n', lineno=148, col_offset=14), Str("'continue' not properly in loop", lineno=148, col_offset=28)], [], None, None, lineno=148, col_offset=8), lineno=148, col_offset=8)], [], lineno=119, col_offset=4), FunctionDef('testSettingException', arguments([Name('self', Param(), lineno=151, col_offset=29)], None, None, []), [ClassDef('BadException', [], [FunctionDef('__init__', arguments([Name('self_', Param(), lineno=156, col_offset=25)], None, None, []), [Raise(Name('RuntimeError', Load(), lineno=157, col_offset=22), Str("can't instantiate BadException", lineno=157, col_offset=36), None, lineno=157, col_offset=16)], [], lineno=156, col_offset=12)], [], lineno=155, col_offset=8), FunctionDef('test_capi1', arguments([], None, None, []), [Import([alias('_testcapi', None)], lineno=160, col_offset=12), TryExcept([Expr(Call(Attribute(Name('_testcapi', Load(), lineno=162, col_offset=16), 'raise_exception', Load(), lineno=162, col_offset=16), [Name('BadException', Load(), lineno=162, col_offset=42), Num(1, lineno=162, col_offset=56)], [], None, None, lineno=162, col_offset=16), lineno=162, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=163, col_offset=19), Name('err', Store(), lineno=163, col_offset=30), [Assign([Tuple([Name('exc', Store(), lineno=164, col_offset=16), Name('err', Store(), lineno=164, col_offset=21), Name('tb', Store(), lineno=164, col_offset=26)], Store(), lineno=164, col_offset=16)], Call(Attribute(Name('sys', Load(), lineno=164, col_offset=31), 'exc_info', Load(), lineno=164, col_offset=31), [], [], None, None, lineno=164, col_offset=31), lineno=164, col_offset=16), Assign([Name('co', Store(), lineno=165, col_offset=16)], Attribute(Attribute(Name('tb', Load(), lineno=165, col_offset=21), 'tb_frame', Load(), lineno=165, col_offset=21), 'f_code', Load(), lineno=165, col_offset=21), lineno=165, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=16), 'assertEqual', Load(), lineno=166, col_offset=16), [Attribute(Name('co', Load(), lineno=166, col_offset=33), 'co_name', Load(), lineno=166, col_offset=33), Str('test_capi1', lineno=166, col_offset=45)], [], None, None, lineno=166, col_offset=16), lineno=166, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=16), 'assertTrue', Load(), lineno=167, col_offset=16), [Call(Attribute(Attribute(Name('co', Load(), lineno=167, col_offset=32), 'co_filename', Load(), lineno=167, col_offset=32), 'endswith', Load(), lineno=167, col_offset=32), [BinOp(BinOp(Str('test_exceptions', lineno=167, col_offset=56), Add(), Attribute(Name('os', Load(), lineno=167, col_offset=74), 'extsep', Load(), lineno=167, col_offset=74), lineno=167, col_offset=56), Add(), Str('py', lineno=167, col_offset=84), lineno=167, col_offset=83)], [], None, None, lineno=167, col_offset=32)], [], None, None, lineno=167, col_offset=16), lineno=167, col_offset=16)], lineno=163, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=169, col_offset=16), 'fail', Load(), lineno=169, col_offset=16), [Str('Expected exception', lineno=169, col_offset=26)], [], None, None, lineno=169, col_offset=16), lineno=169, col_offset=16)], lineno=161, col_offset=12)], [], lineno=159, col_offset=8), FunctionDef('test_capi2', arguments([], None, None, []), [Import([alias('_testcapi', None)], lineno=172, col_offset=12), TryExcept([Expr(Call(Attribute(Name('_testcapi', Load(), lineno=174, col_offset=16), 'raise_exception', Load(), lineno=174, col_offset=16), [Name('BadException', Load(), lineno=174, col_offset=42), Num(0, lineno=174, col_offset=56)], [], None, None, lineno=174, col_offset=16), lineno=174, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=175, col_offset=19), Name('err', Store(), lineno=175, col_offset=33), [Assign([Tuple([Name('exc', Store(), lineno=176, col_offset=16), Name('err', Store(), lineno=176, col_offset=21), Name('tb', Store(), lineno=176, col_offset=26)], Store(), lineno=176, col_offset=16)], Call(Attribute(Name('sys', Load(), lineno=176, col_offset=31), 'exc_info', Load(), lineno=176, col_offset=31), [], [], None, None, lineno=176, col_offset=31), lineno=176, col_offset=16), Assign([Name('co', Store(), lineno=177, col_offset=16)], Attribute(Attribute(Name('tb', Load(), lineno=177, col_offset=21), 'tb_frame', Load(), lineno=177, col_offset=21), 'f_code', Load(), lineno=177, col_offset=21), lineno=177, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=16), 'assertEqual', Load(), lineno=178, col_offset=16), [Attribute(Name('co', Load(), lineno=178, col_offset=33), 'co_name', Load(), lineno=178, col_offset=33), Str('__init__', lineno=178, col_offset=45)], [], None, None, lineno=178, col_offset=16), lineno=178, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=16), 'assertTrue', Load(), lineno=179, col_offset=16), [Call(Attribute(Attribute(Name('co', Load(), lineno=179, col_offset=32), 'co_filename', Load(), lineno=179, col_offset=32), 'endswith', Load(), lineno=179, col_offset=32), [BinOp(BinOp(Str('test_exceptions', lineno=179, col_offset=56), Add(), Attribute(Name('os', Load(), lineno=179, col_offset=74), 'extsep', Load(), lineno=179, col_offset=74), lineno=179, col_offset=56), Add(), Str('py', lineno=179, col_offset=84), lineno=179, col_offset=83)], [], None, None, lineno=179, col_offset=32)], [], None, None, lineno=179, col_offset=16), lineno=179, col_offset=16), Assign([Name('co2', Store(), lineno=180, col_offset=16)], Attribute(Attribute(Attribute(Name('tb', Load(), lineno=180, col_offset=22), 'tb_frame', Load(), lineno=180, col_offset=22), 'f_back', Load(), lineno=180, col_offset=22), 'f_code', Load(), lineno=180, col_offset=22), lineno=180, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=16), 'assertEqual', Load(), lineno=181, col_offset=16), [Attribute(Name('co2', Load(), lineno=181, col_offset=33), 'co_name', Load(), lineno=181, col_offset=33), Str('test_capi2', lineno=181, col_offset=46)], [], None, None, lineno=181, col_offset=16), lineno=181, col_offset=16)], lineno=175, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=183, col_offset=16), 'fail', Load(), lineno=183, col_offset=16), [Str('Expected exception', lineno=183, col_offset=26)], [], None, None, lineno=183, col_offset=16), lineno=183, col_offset=16)], lineno=173, col_offset=12)], [], lineno=171, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=185, col_offset=15), 'platform', Load(), lineno=185, col_offset=15), 'startswith', Load(), lineno=185, col_offset=15), [Str('java', lineno=185, col_offset=39)], [], None, None, lineno=185, col_offset=15), lineno=185, col_offset=11), [Expr(Call(Name('test_capi1', Load(), lineno=186, col_offset=12), [], [], None, None, lineno=186, col_offset=12), lineno=186, col_offset=12), Expr(Call(Name('test_capi2', Load(), lineno=187, col_offset=12), [], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=12)], [], lineno=185, col_offset=8)], [Name('cpython_only', Load(), lineno=150, col_offset=5)], lineno=150, col_offset=4), FunctionDef('test_WindowsError', arguments([Name('self', Param(), lineno=189, col_offset=26)], None, None, []), [TryExcept([Expr(Name('WindowsError', Load(), lineno=191, col_offset=12), lineno=191, col_offset=12)], [ExceptHandler(Name('NameError', Load(), lineno=192, col_offset=15), None, [Pass( lineno=193, col_offset=12)], lineno=192, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=12), 'assertEqual', Load(), lineno=195, col_offset=12), [Call(Name('str', Load(), lineno=195, col_offset=29), [Call(Name('WindowsError', Load(), lineno=195, col_offset=33), [Num(1001, lineno=195, col_offset=46)], [], None, None, lineno=195, col_offset=33)], [], None, None, lineno=195, col_offset=29), Str('1001', lineno=196, col_offset=33)], [], None, None, lineno=195, col_offset=12), lineno=195, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=12), 'assertEqual', Load(), lineno=197, col_offset=12), [Call(Name('str', Load(), lineno=197, col_offset=29), [Call(Name('WindowsError', Load(), lineno=197, col_offset=33), [Num(1001, lineno=197, col_offset=46), Str('message', lineno=197, col_offset=52)], [], None, None, lineno=197, col_offset=33)], [], None, None, lineno=197, col_offset=29), Str('[Error 1001] message', lineno=198, col_offset=33)], [], None, None, lineno=197, col_offset=12), lineno=197, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=12), 'assertEqual', Load(), lineno=199, col_offset=12), [Attribute(Call(Name('WindowsError', Load(), lineno=199, col_offset=29), [Num(1001, lineno=199, col_offset=42), Str('message', lineno=199, col_offset=48)], [], None, None, lineno=199, col_offset=29), 'errno', Load(), lineno=199, col_offset=29), Num(22, lineno=199, col_offset=66)], [], None, None, lineno=199, col_offset=12), lineno=199, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=12), 'assertEqual', Load(), lineno=200, col_offset=12), [Attribute(Call(Name('WindowsError', Load(), lineno=200, col_offset=29), [Num(1001, lineno=200, col_offset=42), Str('message', lineno=200, col_offset=48)], [], None, None, lineno=200, col_offset=29), 'winerror', Load(), lineno=200, col_offset=29), Num(1001, lineno=200, col_offset=69)], [], None, None, lineno=200, col_offset=12), lineno=200, col_offset=12)], lineno=190, col_offset=8)], [], lineno=189, col_offset=4), FunctionDef('testAttributes', arguments([Name('self', Param(), lineno=203, col_offset=23)], None, None, []), [Assign([Name('exceptionList', Store(), lineno=206, col_offset=8)], List([Tuple([Name('BaseException', Load(), lineno=207, col_offset=13), Tuple([], Load(), lineno=207, col_offset=28), Dict([Str('message', lineno=207, col_offset=33), Str('args', lineno=207, col_offset=49)], [Str('', lineno=207, col_offset=45), Tuple([], Load(), lineno=207, col_offset=58)], lineno=207, col_offset=32)], Load(), lineno=207, col_offset=13), Tuple([Name('BaseException', Load(), lineno=208, col_offset=13), Tuple([Num(1, lineno=208, col_offset=29)], Load(), lineno=208, col_offset=29), Dict([Str('message', lineno=208, col_offset=36), Str('args', lineno=208, col_offset=51)], [Num(1, lineno=208, col_offset=48), Tuple([Num(1, lineno=208, col_offset=61)], Load(), lineno=208, col_offset=61)], lineno=208, col_offset=35)], Load(), lineno=208, col_offset=13), Tuple([Name('BaseException', Load(), lineno=209, col_offset=13), Tuple([Str('foo', lineno=209, col_offset=29)], Load(), lineno=209, col_offset=29), Dict([Str('message', lineno=210, col_offset=17), Str('args', lineno=210, col_offset=36)], [Str('foo', lineno=210, col_offset=29), Tuple([Str('foo', lineno=210, col_offset=46)], Load(), lineno=210, col_offset=46)], lineno=210, col_offset=16)], Load(), lineno=209, col_offset=13), Tuple([Name('BaseException', Load(), lineno=211, col_offset=13), Tuple([Str('foo', lineno=211, col_offset=29), Num(1, lineno=211, col_offset=36)], Load(), lineno=211, col_offset=29), Dict([Str('message', lineno=212, col_offset=17), Str('args', lineno=212, col_offset=33)], [Str('', lineno=212, col_offset=29), Tuple([Str('foo', lineno=212, col_offset=43), Num(1, lineno=212, col_offset=50)], Load(), lineno=212, col_offset=43)], lineno=212, col_offset=16)], Load(), lineno=211, col_offset=13), Tuple([Name('SystemExit', Load(), lineno=213, col_offset=13), Tuple([Str('foo', lineno=213, col_offset=26)], Load(), lineno=213, col_offset=26), Dict([Str('message', lineno=214, col_offset=17), Str('args', lineno=214, col_offset=36), Str('code', lineno=214, col_offset=55)], [Str('foo', lineno=214, col_offset=29), Tuple([Str('foo', lineno=214, col_offset=46)], Load(), lineno=214, col_offset=46), Str('foo', lineno=214, col_offset=64)], lineno=214, col_offset=16)], Load(), lineno=213, col_offset=13), Tuple([Name('IOError', Load(), lineno=215, col_offset=13), Tuple([Str('foo', lineno=215, col_offset=23)], Load(), lineno=215, col_offset=23), Dict([Str('message', lineno=216, col_offset=17), Str('args', lineno=216, col_offset=36), Str('filename', lineno=216, col_offset=55), Str('errno', lineno=217, col_offset=17), Str('strerror', lineno=217, col_offset=33)], [Str('foo', lineno=216, col_offset=29), Tuple([Str('foo', lineno=216, col_offset=46)], Load(), lineno=216, col_offset=46), Name('None', Load(), lineno=216, col_offset=68), Name('None', Load(), lineno=217, col_offset=27), Name('None', Load(), lineno=217, col_offset=46)], lineno=216, col_offset=16)], Load(), lineno=215, col_offset=13), Tuple([Name('IOError', Load(), lineno=218, col_offset=13), Tuple([Str('foo', lineno=218, col_offset=23), Str('bar', lineno=218, col_offset=30)], Load(), lineno=218, col_offset=23), Dict([Str('message', lineno=219, col_offset=17), Str('args', lineno=219, col_offset=33), Str('filename', lineno=219, col_offset=58), Str('errno', lineno=220, col_offset=17), Str('strerror', lineno=220, col_offset=34)], [Str('', lineno=219, col_offset=29), Tuple([Str('foo', lineno=219, col_offset=43), Str('bar', lineno=219, col_offset=50)], Load(), lineno=219, col_offset=43), Name('None', Load(), lineno=219, col_offset=71), Str('foo', lineno=220, col_offset=27), Str('bar', lineno=220, col_offset=47)], lineno=219, col_offset=16)], Load(), lineno=218, col_offset=13), Tuple([Name('IOError', Load(), lineno=221, col_offset=13), Tuple([Str('foo', lineno=221, col_offset=23), Str('bar', lineno=221, col_offset=30), Str('baz', lineno=221, col_offset=37)], Load(), lineno=221, col_offset=23), Dict([Str('message', lineno=222, col_offset=17), Str('args', lineno=222, col_offset=33), Str('filename', lineno=222, col_offset=58), Str('errno', lineno=223, col_offset=17), Str('strerror', lineno=223, col_offset=34)], [Str('', lineno=222, col_offset=29), Tuple([Str('foo', lineno=222, col_offset=43), Str('bar', lineno=222, col_offset=50)], Load(), lineno=222, col_offset=43), Str('baz', lineno=222, col_offset=71), Str('foo', lineno=223, col_offset=27), Str('bar', lineno=223, col_offset=47)], lineno=222, col_offset=16)], Load(), lineno=221, col_offset=13), Tuple([Name('IOError', Load(), lineno=224, col_offset=13), Tuple([Str('foo', lineno=224, col_offset=23), Str('bar', lineno=224, col_offset=30), Str('baz', lineno=224, col_offset=37), Str('quux', lineno=224, col_offset=44)], Load(), lineno=224, col_offset=23), Dict([Str('message', lineno=225, col_offset=17), Str('args', lineno=225, col_offset=33)], [Str('', lineno=225, col_offset=29), Tuple([Str('foo', lineno=225, col_offset=43), Str('bar', lineno=225, col_offset=50), Str('baz', lineno=225, col_offset=57), Str('quux', lineno=225, col_offset=64)], Load(), lineno=225, col_offset=43)], lineno=225, col_offset=16)], Load(), lineno=224, col_offset=13), Tuple([Name('EnvironmentError', Load(), lineno=226, col_offset=13), Tuple([Str('errnoStr', lineno=226, col_offset=32), Str('strErrorStr', lineno=226, col_offset=44), Str('filenameStr', lineno=226, col_offset=59)], Load(), lineno=226, col_offset=32), Dict([Str('message', lineno=227, col_offset=17), Str('args', lineno=227, col_offset=33), Str('strerror', lineno=228, col_offset=17), Str('errno', lineno=228, col_offset=45), Str('filename', lineno=229, col_offset=17)], [Str('', lineno=227, col_offset=29), Tuple([Str('errnoStr', lineno=227, col_offset=43), Str('strErrorStr', lineno=227, col_offset=55)], Load(), lineno=227, col_offset=43), Str('strErrorStr', lineno=228, col_offset=30), Str('errnoStr', lineno=228, col_offset=55), Str('filenameStr', lineno=229, col_offset=30)], lineno=227, col_offset=16)], Load(), lineno=226, col_offset=13), Tuple([Name('EnvironmentError', Load(), lineno=230, col_offset=13), Tuple([Num(1, lineno=230, col_offset=32), Str('strErrorStr', lineno=230, col_offset=35), Str('filenameStr', lineno=230, col_offset=50)], Load(), lineno=230, col_offset=32), Dict([Str('message', lineno=231, col_offset=17), Str('args', lineno=231, col_offset=33), Str('errno', lineno=231, col_offset=62), Str('strerror', lineno=232, col_offset=17), Str('filename', lineno=232, col_offset=45)], [Str('', lineno=231, col_offset=29), Tuple([Num(1, lineno=231, col_offset=43), Str('strErrorStr', lineno=231, col_offset=46)], Load(), lineno=231, col_offset=43), Num(1, lineno=231, col_offset=72), Str('strErrorStr', lineno=232, col_offset=30), Str('filenameStr', lineno=232, col_offset=58)], lineno=231, col_offset=16)], Load(), lineno=230, col_offset=13), Tuple([Name('SyntaxError', Load(), lineno=233, col_offset=13), Tuple([], Load(), lineno=233, col_offset=26), Dict([Str('message', lineno=233, col_offset=31), Str('msg', lineno=233, col_offset=47), Str('text', lineno=233, col_offset=61), Str('filename', lineno=234, col_offset=16), Str('lineno', lineno=234, col_offset=35), Str('offset', lineno=234, col_offset=52), Str('print_file_and_line', lineno=235, col_offset=16)], [Str('', lineno=233, col_offset=43), Name('None', Load(), lineno=233, col_offset=55), Name('None', Load(), lineno=233, col_offset=70), Name('None', Load(), lineno=234, col_offset=29), Name('None', Load(), lineno=234, col_offset=46), Name('None', Load(), lineno=234, col_offset=63), Name('None', Load(), lineno=235, col_offset=40)], lineno=233, col_offset=30)], Load(), lineno=233, col_offset=13), Tuple([Name('SyntaxError', Load(), lineno=236, col_offset=13), Tuple([Str('msgStr', lineno=236, col_offset=27)], Load(), lineno=236, col_offset=27), Dict([Str('message', lineno=237, col_offset=17), Str('args', lineno=237, col_offset=39), Str('text', lineno=237, col_offset=61), Str('print_file_and_line', lineno=238, col_offset=17), Str('msg', lineno=238, col_offset=47), Str('filename', lineno=239, col_offset=17), Str('lineno', lineno=239, col_offset=36), Str('offset', lineno=239, col_offset=53)], [Str('msgStr', lineno=237, col_offset=29), Tuple([Str('msgStr', lineno=237, col_offset=49)], Load(), lineno=237, col_offset=49), Name('None', Load(), lineno=237, col_offset=70), Name('None', Load(), lineno=238, col_offset=41), Str('msgStr', lineno=238, col_offset=55), Name('None', Load(), lineno=239, col_offset=30), Name('None', Load(), lineno=239, col_offset=47), Name('None', Load(), lineno=239, col_offset=64)], lineno=237, col_offset=16)], Load(), lineno=236, col_offset=13), Tuple([Name('SyntaxError', Load(), lineno=240, col_offset=13), Tuple([Str('msgStr', lineno=240, col_offset=27), Tuple([Str('filenameStr', lineno=240, col_offset=38), Str('linenoStr', lineno=240, col_offset=53), Str('offsetStr', lineno=240, col_offset=66), Str('textStr', lineno=241, col_offset=27)], Load(), lineno=240, col_offset=38)], Load(), lineno=240, col_offset=27), Dict([Str('message', lineno=242, col_offset=17), Str('offset', lineno=242, col_offset=33), Str('text', lineno=242, col_offset=57), Str('args', lineno=243, col_offset=17), Str('print_file_and_line', lineno=245, col_offset=17), Str('msg', lineno=245, col_offset=47), Str('filename', lineno=246, col_offset=17), Str('lineno', lineno=246, col_offset=45)], [Str('', lineno=242, col_offset=29), Str('offsetStr', lineno=242, col_offset=44), Str('textStr', lineno=242, col_offset=66), Tuple([Str('msgStr', lineno=243, col_offset=27), Tuple([Str('filenameStr', lineno=243, col_offset=38), Str('linenoStr', lineno=243, col_offset=53), Str('offsetStr', lineno=244, col_offset=38), Str('textStr', lineno=244, col_offset=51)], Load(), lineno=243, col_offset=38)], Load(), lineno=243, col_offset=27), Name('None', Load(), lineno=245, col_offset=41), Str('msgStr', lineno=245, col_offset=55), Str('filenameStr', lineno=246, col_offset=30), Str('linenoStr', lineno=246, col_offset=56)], lineno=242, col_offset=16)], Load(), lineno=240, col_offset=13), Tuple([Name('SyntaxError', Load(), lineno=247, col_offset=13), Tuple([Str('msgStr', lineno=247, col_offset=27), Str('filenameStr', lineno=247, col_offset=37), Str('linenoStr', lineno=247, col_offset=52), Str('offsetStr', lineno=247, col_offset=65), Str('textStr', lineno=248, col_offset=27), Str('print_file_and_lineStr', lineno=248, col_offset=38)], Load(), lineno=247, col_offset=27), Dict([Str('message', lineno=249, col_offset=17), Str('text', lineno=249, col_offset=33), Str('args', lineno=250, col_offset=17), Str('print_file_and_line', lineno=252, col_offset=17), Str('msg', lineno=252, col_offset=47), Str('filename', lineno=253, col_offset=17), Str('lineno', lineno=253, col_offset=36), Str('offset', lineno=253, col_offset=53)], [Str('', lineno=249, col_offset=29), Name('None', Load(), lineno=249, col_offset=42), Tuple([Str('msgStr', lineno=250, col_offset=27), Str('filenameStr', lineno=250, col_offset=37), Str('linenoStr', lineno=250, col_offset=52), Str('offsetStr', lineno=250, col_offset=65), Str('textStr', lineno=251, col_offset=27), Str('print_file_and_lineStr', lineno=251, col_offset=38)], Load(), lineno=250, col_offset=27), Name('None', Load(), lineno=252, col_offset=41), Str('msgStr', lineno=252, col_offset=55), Name('None', Load(), lineno=253, col_offset=30), Name('None', Load(), lineno=253, col_offset=47), Name('None', Load(), lineno=253, col_offset=64)], lineno=249, col_offset=16)], Load(), lineno=247, col_offset=13), Tuple([Name('UnicodeError', Load(), lineno=254, col_offset=13), Tuple([], Load(), lineno=254, col_offset=27), Dict([Str('message', lineno=254, col_offset=32), Str('args', lineno=254, col_offset=48)], [Str('', lineno=254, col_offset=44), Tuple([], Load(), lineno=254, col_offset=57)], lineno=254, col_offset=31)], Load(), lineno=254, col_offset=13), Tuple([Name('UnicodeEncodeError', Load(), lineno=255, col_offset=13), Tuple([Str('ascii', lineno=255, col_offset=34), Str(u'a', lineno=255, col_offset=43), Num(0, lineno=255, col_offset=49), Num(1, lineno=255, col_offset=52), Str('ordinal not in range', lineno=255, col_offset=55)], Load(), lineno=255, col_offset=34), Dict([Str('message', lineno=256, col_offset=17), Str('args', lineno=256, col_offset=33), Str('encoding', lineno=258, col_offset=17), Str('object', lineno=258, col_offset=39), Str('start', lineno=259, col_offset=17), Str('reason', lineno=259, col_offset=30)], [Str('', lineno=256, col_offset=29), Tuple([Str('ascii', lineno=256, col_offset=43), Str(u'a', lineno=256, col_offset=52), Num(0, lineno=256, col_offset=58), Num(1, lineno=256, col_offset=61), Str('ordinal not in range', lineno=257, col_offset=43)], Load(), lineno=256, col_offset=43), Str('ascii', lineno=258, col_offset=30), Str(u'a', lineno=258, col_offset=50), Num(0, lineno=259, col_offset=27), Str('ordinal not in range', lineno=259, col_offset=41)], lineno=256, col_offset=16)], Load(), lineno=255, col_offset=13), Tuple([Name('UnicodeDecodeError', Load(), lineno=260, col_offset=13), Tuple([Str('ascii', lineno=260, col_offset=34), Str('\xff', lineno=260, col_offset=43), Num(0, lineno=260, col_offset=51), Num(1, lineno=260, col_offset=54), Str('ordinal not in range', lineno=260, col_offset=57)], Load(), lineno=260, col_offset=34), Dict([Str('message', lineno=261, col_offset=17), Str('args', lineno=261, col_offset=33), Str('encoding', lineno=263, col_offset=17), Str('object', lineno=263, col_offset=39), Str('start', lineno=264, col_offset=17), Str('reason', lineno=264, col_offset=30)], [Str('', lineno=261, col_offset=29), Tuple([Str('ascii', lineno=261, col_offset=43), Str('\xff', lineno=261, col_offset=52), Num(0, lineno=261, col_offset=60), Num(1, lineno=261, col_offset=63), Str('ordinal not in range', lineno=262, col_offset=43)], Load(), lineno=261, col_offset=43), Str('ascii', lineno=263, col_offset=30), Str('\xff', lineno=263, col_offset=50), Num(0, lineno=264, col_offset=27), Str('ordinal not in range', lineno=264, col_offset=41)], lineno=261, col_offset=16)], Load(), lineno=260, col_offset=13), Tuple([Name('UnicodeTranslateError', Load(), lineno=265, col_offset=13), Tuple([Str(u'\u3042', lineno=265, col_offset=37), Num(0, lineno=265, col_offset=48), Num(1, lineno=265, col_offset=51), Str('ouch', lineno=265, col_offset=54)], Load(), lineno=265, col_offset=37), Dict([Str('message', lineno=266, col_offset=17), Str('args', lineno=266, col_offset=33), Str('object', lineno=267, col_offset=17), Str('reason', lineno=267, col_offset=39), Str('start', lineno=268, col_offset=17), Str('end', lineno=268, col_offset=30)], [Str('', lineno=266, col_offset=29), Tuple([Str(u'\u3042', lineno=266, col_offset=43), Num(0, lineno=266, col_offset=54), Num(1, lineno=266, col_offset=57), Str('ouch', lineno=266, col_offset=60)], Load(), lineno=266, col_offset=43), Str(u'\u3042', lineno=267, col_offset=28), Str('ouch', lineno=267, col_offset=50), Num(0, lineno=268, col_offset=27), Num(1, lineno=268, col_offset=38)], lineno=266, col_offset=16)], Load(), lineno=265, col_offset=13)], Load(), lineno=206, col_offset=24), lineno=206, col_offset=8), TryExcept([Expr(Call(Attribute(Name('exceptionList', Load(), lineno=271, col_offset=12), 'append', Load(), lineno=271, col_offset=12), [Tuple([Name('WindowsError', Load(), lineno=272, col_offset=17), Tuple([Num(1, lineno=272, col_offset=32), Str('strErrorStr', lineno=272, col_offset=35), Str('filenameStr', lineno=272, col_offset=50)], Load(), lineno=272, col_offset=32), Dict([Str('message', lineno=273, col_offset=21), Str('args', lineno=273, col_offset=37), Str('strerror', lineno=274, col_offset=21), Str('winerror', lineno=274, col_offset=49), Str('errno', lineno=275, col_offset=21), Str('filename', lineno=275, col_offset=35)], [Str('', lineno=273, col_offset=33), Tuple([Num(1, lineno=273, col_offset=47), Str('strErrorStr', lineno=273, col_offset=50)], Load(), lineno=273, col_offset=47), Str('strErrorStr', lineno=274, col_offset=34), Num(1, lineno=274, col_offset=62), Num(22, lineno=275, col_offset=31), Str('filenameStr', lineno=275, col_offset=48)], lineno=273, col_offset=20)], Load(), lineno=272, col_offset=17)], [], None, None, lineno=271, col_offset=12), lineno=271, col_offset=12)], [ExceptHandler(Name('NameError', Load(), lineno=277, col_offset=15), None, [Pass( lineno=278, col_offset=12)], lineno=277, col_offset=8)], [], lineno=270, col_offset=8), For(Tuple([Name('exc', Store(), lineno=280, col_offset=12), Name('args', Store(), lineno=280, col_offset=17), Name('expected', Store(), lineno=280, col_offset=23)], Store(), lineno=280, col_offset=12), Name('exceptionList', Load(), lineno=280, col_offset=35), [TryExcept([Raise(Call(Name('exc', Load(), lineno=282, col_offset=22), [], [], Name('args', Load(), lineno=282, col_offset=27), None, lineno=282, col_offset=22), None, None, lineno=282, col_offset=16)], [ExceptHandler(Name('BaseException', Load(), lineno=283, col_offset=19), Name('e', Store(), lineno=283, col_offset=34), [If(Compare(Call(Name('type', Load(), lineno=284, col_offset=19), [Name('e', Load(), lineno=284, col_offset=24)], [], None, None, lineno=284, col_offset=19), [IsNot()], [Name('exc', Load(), lineno=284, col_offset=34)], lineno=284, col_offset=19), [Raise(None, None, None, lineno=285, col_offset=20)], [], lineno=284, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=287, col_offset=16), 'assertEqual', Load(), lineno=287, col_offset=16), [Attribute(Call(Name('type', Load(), lineno=287, col_offset=33), [Name('e', Load(), lineno=287, col_offset=38)], [], None, None, lineno=287, col_offset=33), '__module__', Load(), lineno=287, col_offset=33), Str('exceptions', lineno=287, col_offset=53)], [], None, None, lineno=287, col_offset=16), lineno=287, col_offset=16), Assign([Name('s', Store(), lineno=289, col_offset=16)], Call(Name('str', Load(), lineno=289, col_offset=20), [Name('e', Load(), lineno=289, col_offset=24)], [], None, None, lineno=289, col_offset=20), lineno=289, col_offset=16), For(Name('checkArgName', Store(), lineno=290, col_offset=20), Name('expected', Load(), lineno=290, col_offset=36), [Expr(Call(Attribute(Name('self', Load(), lineno=291, col_offset=20), 'assertEqual', Load(), lineno=291, col_offset=20), [Call(Name('repr', Load(), lineno=291, col_offset=37), [Call(Name('getattr', Load(), lineno=291, col_offset=42), [Name('e', Load(), lineno=291, col_offset=50), Name('checkArgName', Load(), lineno=291, col_offset=53)], [], None, None, lineno=291, col_offset=42)], [], None, None, lineno=291, col_offset=37), Call(Name('repr', Load(), lineno=292, col_offset=37), [Subscript(Name('expected', Load(), lineno=292, col_offset=42), Index(Name('checkArgName', Load(), lineno=292, col_offset=51)), Load(), lineno=292, col_offset=42)], [], None, None, lineno=292, col_offset=37), BinOp(Str('exception "%s", attribute "%s"', lineno=293, col_offset=37), Mod(), Tuple([Call(Name('repr', Load(), lineno=294, col_offset=39), [Name('e', Load(), lineno=294, col_offset=44)], [], None, None, lineno=294, col_offset=39), Name('checkArgName', Load(), lineno=294, col_offset=48)], Load(), lineno=294, col_offset=39), lineno=293, col_offset=37)], [], None, None, lineno=291, col_offset=20), lineno=291, col_offset=20)], [], lineno=290, col_offset=16), For(Name('p', Store(), lineno=297, col_offset=20), Tuple([Name('pickle', Load(), lineno=297, col_offset=25), Name('cPickle', Load(), lineno=297, col_offset=33)], Load(), lineno=297, col_offset=25), [For(Name('protocol', Store(), lineno=298, col_offset=24), Call(Name('range', Load(), lineno=298, col_offset=36), [BinOp(Attribute(Name('p', Load(), lineno=298, col_offset=42), 'HIGHEST_PROTOCOL', Load(), lineno=298, col_offset=42), Add(), Num(1, lineno=298, col_offset=63), lineno=298, col_offset=42)], [], None, None, lineno=298, col_offset=36), [Assign([Name('new', Store(), lineno=299, col_offset=24)], Call(Attribute(Name('p', Load(), lineno=299, col_offset=30), 'loads', Load(), lineno=299, col_offset=30), [Call(Attribute(Name('p', Load(), lineno=299, col_offset=38), 'dumps', Load(), lineno=299, col_offset=38), [Name('e', Load(), lineno=299, col_offset=46), Name('protocol', Load(), lineno=299, col_offset=49)], [], None, None, lineno=299, col_offset=38)], [], None, None, lineno=299, col_offset=30), lineno=299, col_offset=24), For(Name('checkArgName', Store(), lineno=300, col_offset=28), Name('expected', Load(), lineno=300, col_offset=44), [Assign([Name('got', Store(), lineno=301, col_offset=28)], Call(Name('repr', Load(), lineno=301, col_offset=34), [Call(Name('getattr', Load(), lineno=301, col_offset=39), [Name('new', Load(), lineno=301, col_offset=47), Name('checkArgName', Load(), lineno=301, col_offset=52)], [], None, None, lineno=301, col_offset=39)], [], None, None, lineno=301, col_offset=34), lineno=301, col_offset=28), Assign([Name('want', Store(), lineno=302, col_offset=28)], Call(Name('repr', Load(), lineno=302, col_offset=35), [Subscript(Name('expected', Load(), lineno=302, col_offset=40), Index(Name('checkArgName', Load(), lineno=302, col_offset=49)), Load(), lineno=302, col_offset=40)], [], None, None, lineno=302, col_offset=35), lineno=302, col_offset=28), Expr(Call(Attribute(Name('self', Load(), lineno=303, col_offset=28), 'assertEqual', Load(), lineno=303, col_offset=28), [Name('got', Load(), lineno=303, col_offset=45), Name('want', Load(), lineno=303, col_offset=50), BinOp(Str('pickled "%r", attribute "%s"', lineno=304, col_offset=45), Mod(), Tuple([Name('e', Load(), lineno=305, col_offset=46), Name('checkArgName', Load(), lineno=305, col_offset=49)], Load(), lineno=305, col_offset=46), lineno=304, col_offset=45)], [], None, None, lineno=303, col_offset=28), lineno=303, col_offset=28)], [], lineno=300, col_offset=24)], [], lineno=298, col_offset=20)], [], lineno=297, col_offset=16)], lineno=283, col_offset=12)], [], lineno=281, col_offset=12)], [], lineno=280, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=202, col_offset=5)], lineno=202, col_offset=4), FunctionDef('testDeprecatedMessageAttribute', arguments([Name('self', Param(), lineno=308, col_offset=39)], None, None, []), [Assign([Name('exc', Store(), lineno=311, col_offset=8)], Call(Name('BaseException', Load(), lineno=311, col_offset=14), [Str('foo', lineno=311, col_offset=28)], [], None, None, lineno=311, col_offset=14), lineno=311, col_offset=8), With(Call(Name('check_warnings', Load(), lineno=312, col_offset=13), [Tuple([Str('BaseException.message has been deprecated as of Python 2.6', lineno=312, col_offset=29), Name('DeprecationWarning', Load(), lineno=313, col_offset=49)], Load(), lineno=312, col_offset=29)], [], None, None, lineno=312, col_offset=13), Name('w', Store(), lineno=313, col_offset=73), [Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=12), 'assertEqual', Load(), lineno=314, col_offset=12), [Attribute(Name('exc', Load(), lineno=314, col_offset=29), 'message', Load(), lineno=314, col_offset=29), Str('foo', lineno=314, col_offset=42)], [], None, None, lineno=314, col_offset=12), lineno=314, col_offset=12)], lineno=312, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertEqual', Load(), lineno=315, col_offset=8), [Call(Name('len', Load(), lineno=315, col_offset=25), [Attribute(Name('w', Load(), lineno=315, col_offset=29), 'warnings', Load(), lineno=315, col_offset=29)], [], None, None, lineno=315, col_offset=25), Num(1, lineno=315, col_offset=42)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('testRegularMessageAttribute', arguments([Name('self', Param(), lineno=317, col_offset=36)], None, None, []), [Assign([Name('exc', Store(), lineno=320, col_offset=8)], Call(Name('BaseException', Load(), lineno=320, col_offset=14), [Str('foo', lineno=320, col_offset=28)], [], None, None, lineno=320, col_offset=14), lineno=320, col_offset=8), Assign([Attribute(Name('exc', Load(), lineno=321, col_offset=8), 'message', Store(), lineno=321, col_offset=8)], Str('bar', lineno=321, col_offset=22), lineno=321, col_offset=8), With(Call(Name('check_warnings', Load(), lineno=322, col_offset=13), [], [keyword('quiet', Name('True', Load(), lineno=322, col_offset=34))], None, None, lineno=322, col_offset=13), Name('w', Store(), lineno=322, col_offset=43), [Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=12), 'assertEqual', Load(), lineno=323, col_offset=12), [Attribute(Name('exc', Load(), lineno=323, col_offset=29), 'message', Load(), lineno=323, col_offset=29), Str('bar', lineno=323, col_offset=42)], [], None, None, lineno=323, col_offset=12), lineno=323, col_offset=12)], lineno=322, col_offset=13), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'assertEqual', Load(), lineno=324, col_offset=8), [Call(Name('len', Load(), lineno=324, col_offset=25), [Attribute(Name('w', Load(), lineno=324, col_offset=29), 'warnings', Load(), lineno=324, col_offset=29)], [], None, None, lineno=324, col_offset=25), Num(0, lineno=324, col_offset=42)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Delete([Attribute(Name('exc', Load(), lineno=326, col_offset=12), 'message', Del(), lineno=326, col_offset=12)], lineno=326, col_offset=8), With(Call(Attribute(Name('self', Load(), lineno=327, col_offset=13), 'assertRaises', Load(), lineno=327, col_offset=13), [Name('AttributeError', Load(), lineno=327, col_offset=31)], [], None, None, lineno=327, col_offset=13), None, [Expr(Attribute(Name('exc', Load(), lineno=328, col_offset=12), 'message', Load(), lineno=328, col_offset=12), lineno=328, col_offset=12)], lineno=327, col_offset=13)], [], lineno=317, col_offset=4), FunctionDef('testPickleMessageAttribute', arguments([Name('self', Param(), lineno=331, col_offset=35)], None, None, []), [Assign([Name('e', Store(), lineno=333, col_offset=8)], Call(Name('Exception', Load(), lineno=333, col_offset=12), [Str('foo', lineno=333, col_offset=22)], [], None, None, lineno=333, col_offset=12), lineno=333, col_offset=8), Assign([Name('f', Store(), lineno=334, col_offset=8)], Call(Name('Exception', Load(), lineno=334, col_offset=12), [Str('foo', lineno=334, col_offset=22)], [], None, None, lineno=334, col_offset=12), lineno=334, col_offset=8), Assign([Attribute(Name('f', Load(), lineno=335, col_offset=8), 'message', Store(), lineno=335, col_offset=8)], Str('bar', lineno=335, col_offset=20), lineno=335, col_offset=8), For(Name('p', Store(), lineno=336, col_offset=12), Tuple([Name('pickle', Load(), lineno=336, col_offset=17), Name('cPickle', Load(), lineno=336, col_offset=25)], Load(), lineno=336, col_offset=17), [Assign([Name('ep', Store(), lineno=337, col_offset=12)], Call(Attribute(Name('p', Load(), lineno=337, col_offset=17), 'loads', Load(), lineno=337, col_offset=17), [Call(Attribute(Name('p', Load(), lineno=337, col_offset=25), 'dumps', Load(), lineno=337, col_offset=25), [Name('e', Load(), lineno=337, col_offset=33)], [], None, None, lineno=337, col_offset=25)], [], None, None, lineno=337, col_offset=17), lineno=337, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=12), 'assertEqual', Load(), lineno=338, col_offset=12), [Attribute(Name('ep', Load(), lineno=338, col_offset=29), 'message', Load(), lineno=338, col_offset=29), Str('foo', lineno=338, col_offset=41)], [], None, None, lineno=338, col_offset=12), lineno=338, col_offset=12), Assign([Name('fp', Store(), lineno=339, col_offset=12)], Call(Attribute(Name('p', Load(), lineno=339, col_offset=17), 'loads', Load(), lineno=339, col_offset=17), [Call(Attribute(Name('p', Load(), lineno=339, col_offset=25), 'dumps', Load(), lineno=339, col_offset=25), [Name('f', Load(), lineno=339, col_offset=33)], [], None, None, lineno=339, col_offset=25)], [], None, None, lineno=339, col_offset=17), lineno=339, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=340, col_offset=12), 'assertEqual', Load(), lineno=340, col_offset=12), [Attribute(Name('fp', Load(), lineno=340, col_offset=29), 'message', Load(), lineno=340, col_offset=29), Str('bar', lineno=340, col_offset=41)], [], None, None, lineno=340, col_offset=12), lineno=340, col_offset=12)], [], lineno=336, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=330, col_offset=5)], lineno=330, col_offset=4), FunctionDef('testSlicing', arguments([Name('self', Param(), lineno=343, col_offset=20)], None, None, []), [Assign([Name('args', Store(), lineno=346, col_offset=8)], Tuple([Num(1, lineno=346, col_offset=16), Num(2, lineno=346, col_offset=19), Num(3, lineno=346, col_offset=22)], Load(), lineno=346, col_offset=16), lineno=346, col_offset=8), Assign([Name('exc', Store(), lineno=347, col_offset=8)], Call(Name('BaseException', Load(), lineno=347, col_offset=14), [], [], Name('args', Load(), lineno=347, col_offset=29), None, lineno=347, col_offset=14), lineno=347, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=348, col_offset=8), 'assertEqual', Load(), lineno=348, col_offset=8), [Subscript(Name('exc', Load(), lineno=348, col_offset=25), Slice(None, None, None), Load(), lineno=348, col_offset=25), Name('args', Load(), lineno=348, col_offset=33)], [], None, None, lineno=348, col_offset=8), lineno=348, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=349, col_offset=8), 'assertEqual', Load(), lineno=349, col_offset=8), [Subscript(Attribute(Name('exc', Load(), lineno=349, col_offset=25), 'args', Load(), lineno=349, col_offset=25), Slice(None, None, None), Load(), lineno=349, col_offset=25), Name('args', Load(), lineno=349, col_offset=38)], [], None, None, lineno=349, col_offset=8), lineno=349, col_offset=8)], [Name('ignore_deprecation_warnings', Load(), lineno=342, col_offset=5)], lineno=342, col_offset=4), FunctionDef('testKeywordArgs', arguments([Name('self', Param(), lineno=351, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=354, col_offset=8), 'assertRaises', Load(), lineno=354, col_offset=8), [Name('TypeError', Load(), lineno=354, col_offset=26), Name('BaseException', Load(), lineno=354, col_offset=37)], [keyword('a', Num(1, lineno=354, col_offset=54))], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8), ClassDef('DerivedException', [Name('BaseException', Load(), lineno=356, col_offset=31)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=357, col_offset=25), Name('fancy_arg', Param(), lineno=357, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('BaseException', Load(), lineno=358, col_offset=16), '__init__', Load(), lineno=358, col_offset=16), [Name('self', Load(), lineno=358, col_offset=39)], [], None, None, lineno=358, col_offset=16), lineno=358, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=359, col_offset=16), 'fancy_arg', Store(), lineno=359, col_offset=16)], Name('fancy_arg', Load(), lineno=359, col_offset=33), lineno=359, col_offset=16)], [], lineno=357, col_offset=12)], [], lineno=356, col_offset=8), Assign([Name('x', Store(), lineno=361, col_offset=8)], Call(Name('DerivedException', Load(), lineno=361, col_offset=12), [], [keyword('fancy_arg', Num(42, lineno=361, col_offset=39))], None, None, lineno=361, col_offset=12), lineno=361, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertEqual', Load(), lineno=362, col_offset=8), [Attribute(Name('x', Load(), lineno=362, col_offset=25), 'fancy_arg', Load(), lineno=362, col_offset=25), Num(42, lineno=362, col_offset=38)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8)], [], lineno=351, col_offset=4), FunctionDef('testInfiniteRecursion', arguments([Name('self', Param(), lineno=364, col_offset=30)], None, None, []), [FunctionDef('f', arguments([], None, None, []), [Return(Call(Name('f', Load(), lineno=366, col_offset=19), [], [], None, None, lineno=366, col_offset=19), lineno=366, col_offset=12)], [], lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertRaises', Load(), lineno=367, col_offset=8), [Name('RuntimeError', Load(), lineno=367, col_offset=26), Name('f', Load(), lineno=367, col_offset=40)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), FunctionDef('g', arguments([], None, None, []), [TryExcept([Return(Call(Name('g', Load(), lineno=371, col_offset=23), [], [], None, None, lineno=371, col_offset=23), lineno=371, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=372, col_offset=19), None, [Return(Num(-1, lineno=373, col_offset=24), lineno=373, col_offset=16)], lineno=372, col_offset=12)], [], lineno=370, col_offset=12)], [], lineno=369, col_offset=8), With(Call(Name('captured_output', Load(), lineno=378, col_offset=13), [Str('stderr', lineno=378, col_offset=29)], [], None, None, lineno=378, col_offset=13), None, [TryExcept([Expr(Call(Name('g', Load(), lineno=380, col_offset=16), [], [], None, None, lineno=380, col_offset=16), lineno=380, col_offset=16)], [ExceptHandler(Name('RuntimeError', Load(), lineno=381, col_offset=19), None, [Pass( lineno=382, col_offset=16)], lineno=381, col_offset=12), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=16), 'fail', Load(), lineno=384, col_offset=16), [Str('Should have raised KeyError', lineno=384, col_offset=26)], [], None, None, lineno=384, col_offset=16), lineno=384, col_offset=16)], lineno=383, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=16), 'fail', Load(), lineno=386, col_offset=16), [Str('Should have raised KeyError', lineno=386, col_offset=26)], [], None, None, lineno=386, col_offset=16), lineno=386, col_offset=16)], lineno=379, col_offset=12)], lineno=378, col_offset=13)], [], lineno=364, col_offset=4), FunctionDef('testUnicodeStrUsage', arguments([Name('self', Param(), lineno=388, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'assertTrue', Load(), lineno=391, col_offset=8), [Call(Name('str', Load(), lineno=391, col_offset=24), [Name('Exception', Load(), lineno=391, col_offset=28)], [], None, None, lineno=391, col_offset=24)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=392, col_offset=8), 'assertTrue', Load(), lineno=392, col_offset=8), [Call(Name('unicode', Load(), lineno=392, col_offset=24), [Name('Exception', Load(), lineno=392, col_offset=32)], [], None, None, lineno=392, col_offset=24)], [], None, None, lineno=392, col_offset=8), lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=8), 'assertTrue', Load(), lineno=393, col_offset=8), [Call(Name('str', Load(), lineno=393, col_offset=24), [Call(Name('Exception', Load(), lineno=393, col_offset=28), [Str('a', lineno=393, col_offset=38)], [], None, None, lineno=393, col_offset=28)], [], None, None, lineno=393, col_offset=24)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=8), 'assertTrue', Load(), lineno=394, col_offset=8), [Call(Name('unicode', Load(), lineno=394, col_offset=24), [Call(Name('Exception', Load(), lineno=394, col_offset=32), [Str(u'a', lineno=394, col_offset=42)], [], None, None, lineno=394, col_offset=32)], [], None, None, lineno=394, col_offset=24)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertTrue', Load(), lineno=395, col_offset=8), [Call(Name('unicode', Load(), lineno=395, col_offset=24), [Call(Name('Exception', Load(), lineno=395, col_offset=32), [Str(u'\xe1', lineno=395, col_offset=42)], [], None, None, lineno=395, col_offset=32)], [], None, None, lineno=395, col_offset=24)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8)], [], lineno=388, col_offset=4), FunctionDef('testUnicodeChangeAttributes', arguments([Name('self', Param(), lineno=397, col_offset=36)], None, None, []), [Assign([Name('u', Store(), lineno=400, col_offset=8)], Call(Name('UnicodeEncodeError', Load(), lineno=400, col_offset=12), [Str('baz', lineno=400, col_offset=31), Str(u'xxxxx', lineno=400, col_offset=38), Num(1, lineno=400, col_offset=48), Num(5, lineno=400, col_offset=51), Str('foo', lineno=400, col_offset=54)], [], None, None, lineno=400, col_offset=12), lineno=400, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=401, col_offset=8), 'assertEqual', Load(), lineno=401, col_offset=8), [Call(Name('str', Load(), lineno=401, col_offset=25), [Name('u', Load(), lineno=401, col_offset=29)], [], None, None, lineno=401, col_offset=25), Str("'baz' codec can't encode characters in position 1-4: foo", lineno=401, col_offset=33)], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=402, col_offset=8), 'end', Store(), lineno=402, col_offset=8)], Num(2, lineno=402, col_offset=16), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertEqual', Load(), lineno=403, col_offset=8), [Call(Name('str', Load(), lineno=403, col_offset=25), [Name('u', Load(), lineno=403, col_offset=29)], [], None, None, lineno=403, col_offset=25), Str("'baz' codec can't encode character u'\\x78' in position 1: foo", lineno=403, col_offset=33)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=404, col_offset=8), 'end', Store(), lineno=404, col_offset=8)], Num(5, lineno=404, col_offset=16), lineno=404, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=405, col_offset=8), 'reason', Store(), lineno=405, col_offset=8)], Num(965230951443685724997L, lineno=405, col_offset=19), lineno=405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertEqual', Load(), lineno=406, col_offset=8), [Call(Name('str', Load(), lineno=406, col_offset=25), [Name('u', Load(), lineno=406, col_offset=29)], [], None, None, lineno=406, col_offset=25), Str("'baz' codec can't encode characters in position 1-4: 965230951443685724997", lineno=406, col_offset=33)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=407, col_offset=8), 'encoding', Store(), lineno=407, col_offset=8)], Num(4000, lineno=407, col_offset=21), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'assertEqual', Load(), lineno=408, col_offset=8), [Call(Name('str', Load(), lineno=408, col_offset=25), [Name('u', Load(), lineno=408, col_offset=29)], [], None, None, lineno=408, col_offset=25), Str("'4000' codec can't encode characters in position 1-4: 965230951443685724997", lineno=408, col_offset=33)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=409, col_offset=8), 'start', Store(), lineno=409, col_offset=8)], Num(1000, lineno=409, col_offset=18), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Call(Name('str', Load(), lineno=410, col_offset=25), [Name('u', Load(), lineno=410, col_offset=29)], [], None, None, lineno=410, col_offset=25), Str("'4000' codec can't encode characters in position 1000-4: 965230951443685724997", lineno=410, col_offset=33)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Assign([Name('u', Store(), lineno=412, col_offset=8)], Call(Name('UnicodeDecodeError', Load(), lineno=412, col_offset=12), [Str('baz', lineno=412, col_offset=31), Str('xxxxx', lineno=412, col_offset=38), Num(1, lineno=412, col_offset=47), Num(5, lineno=412, col_offset=50), Str('foo', lineno=412, col_offset=53)], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'assertEqual', Load(), lineno=413, col_offset=8), [Call(Name('str', Load(), lineno=413, col_offset=25), [Name('u', Load(), lineno=413, col_offset=29)], [], None, None, lineno=413, col_offset=25), Str("'baz' codec can't decode bytes in position 1-4: foo", lineno=413, col_offset=33)], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=414, col_offset=8), 'end', Store(), lineno=414, col_offset=8)], Num(2, lineno=414, col_offset=16), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertEqual', Load(), lineno=415, col_offset=8), [Call(Name('str', Load(), lineno=415, col_offset=25), [Name('u', Load(), lineno=415, col_offset=29)], [], None, None, lineno=415, col_offset=25), Str("'baz' codec can't decode byte 0x78 in position 1: foo", lineno=415, col_offset=33)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=416, col_offset=8), 'end', Store(), lineno=416, col_offset=8)], Num(5, lineno=416, col_offset=16), lineno=416, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=417, col_offset=8), 'reason', Store(), lineno=417, col_offset=8)], Num(965230951443685724997L, lineno=417, col_offset=19), lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertEqual', Load(), lineno=418, col_offset=8), [Call(Name('str', Load(), lineno=418, col_offset=25), [Name('u', Load(), lineno=418, col_offset=29)], [], None, None, lineno=418, col_offset=25), Str("'baz' codec can't decode bytes in position 1-4: 965230951443685724997", lineno=418, col_offset=33)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=419, col_offset=8), 'encoding', Store(), lineno=419, col_offset=8)], Num(4000, lineno=419, col_offset=21), lineno=419, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=8), 'assertEqual', Load(), lineno=420, col_offset=8), [Call(Name('str', Load(), lineno=420, col_offset=25), [Name('u', Load(), lineno=420, col_offset=29)], [], None, None, lineno=420, col_offset=25), Str("'4000' codec can't decode bytes in position 1-4: 965230951443685724997", lineno=420, col_offset=33)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=421, col_offset=8), 'start', Store(), lineno=421, col_offset=8)], Num(1000, lineno=421, col_offset=18), lineno=421, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=8), 'assertEqual', Load(), lineno=422, col_offset=8), [Call(Name('str', Load(), lineno=422, col_offset=25), [Name('u', Load(), lineno=422, col_offset=29)], [], None, None, lineno=422, col_offset=25), Str("'4000' codec can't decode bytes in position 1000-4: 965230951443685724997", lineno=422, col_offset=33)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8), Assign([Name('u', Store(), lineno=424, col_offset=8)], Call(Name('UnicodeTranslateError', Load(), lineno=424, col_offset=12), [Str(u'xxxx', lineno=424, col_offset=34), Num(1, lineno=424, col_offset=43), Num(5, lineno=424, col_offset=46), Str('foo', lineno=424, col_offset=49)], [], None, None, lineno=424, col_offset=12), lineno=424, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=8), 'assertEqual', Load(), lineno=425, col_offset=8), [Call(Name('str', Load(), lineno=425, col_offset=25), [Name('u', Load(), lineno=425, col_offset=29)], [], None, None, lineno=425, col_offset=25), Str("can't translate characters in position 1-4: foo", lineno=425, col_offset=33)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=426, col_offset=8), 'end', Store(), lineno=426, col_offset=8)], Num(2, lineno=426, col_offset=16), lineno=426, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=427, col_offset=8), 'assertEqual', Load(), lineno=427, col_offset=8), [Call(Name('str', Load(), lineno=427, col_offset=25), [Name('u', Load(), lineno=427, col_offset=29)], [], None, None, lineno=427, col_offset=25), Str("can't translate character u'\\x78' in position 1: foo", lineno=427, col_offset=33)], [], None, None, lineno=427, col_offset=8), lineno=427, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=428, col_offset=8), 'end', Store(), lineno=428, col_offset=8)], Num(5, lineno=428, col_offset=16), lineno=428, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=429, col_offset=8), 'reason', Store(), lineno=429, col_offset=8)], Num(965230951443685724997L, lineno=429, col_offset=19), lineno=429, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertEqual', Load(), lineno=430, col_offset=8), [Call(Name('str', Load(), lineno=430, col_offset=25), [Name('u', Load(), lineno=430, col_offset=29)], [], None, None, lineno=430, col_offset=25), Str("can't translate characters in position 1-4: 965230951443685724997", lineno=430, col_offset=33)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8), Assign([Attribute(Name('u', Load(), lineno=431, col_offset=8), 'start', Store(), lineno=431, col_offset=8)], Num(1000, lineno=431, col_offset=18), lineno=431, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=8), 'assertEqual', Load(), lineno=432, col_offset=8), [Call(Name('str', Load(), lineno=432, col_offset=25), [Name('u', Load(), lineno=432, col_offset=29)], [], None, None, lineno=432, col_offset=25), Str("can't translate characters in position 1000-4: 965230951443685724997", lineno=432, col_offset=33)], [], None, None, lineno=432, col_offset=8), lineno=432, col_offset=8)], [], lineno=397, col_offset=4), FunctionDef('test_badisinstance', arguments([Name('self', Param(), lineno=434, col_offset=27)], None, None, []), [ClassDef('Meta', [Name('type', Load(), lineno=437, col_offset=19)], [FunctionDef('__subclasscheck__', arguments([Name('cls', Param(), lineno=438, col_offset=34), Name('subclass', Param(), lineno=438, col_offset=39)], None, None, []), [Raise(Call(Name('ValueError', Load(), lineno=439, col_offset=22), [], [], None, None, lineno=439, col_offset=22), None, None, lineno=439, col_offset=16)], [], lineno=438, col_offset=12)], [], lineno=437, col_offset=8), ClassDef('MyException', [Name('Exception', Load(), lineno=441, col_offset=26)], [Assign([Name('__metaclass__', Store(), lineno=442, col_offset=12)], Name('Meta', Load(), lineno=442, col_offset=28), lineno=442, col_offset=12), Pass( lineno=443, col_offset=12)], [], lineno=441, col_offset=8), With(Call(Name('captured_output', Load(), lineno=445, col_offset=13), [Str('stderr', lineno=445, col_offset=29)], [], None, None, lineno=445, col_offset=13), Name('stderr', Store(), lineno=445, col_offset=42), [TryExcept([Raise(Call(Name('KeyError', Load(), lineno=447, col_offset=22), [], [], None, None, lineno=447, col_offset=22), None, None, lineno=447, col_offset=16)], [ExceptHandler(Name('MyException', Load(), lineno=448, col_offset=19), Name('e', Store(), lineno=448, col_offset=32), [Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=16), 'fail', Load(), lineno=449, col_offset=16), [Str('exception should not be a MyException', lineno=449, col_offset=26)], [], None, None, lineno=449, col_offset=16), lineno=449, col_offset=16)], lineno=448, col_offset=12), ExceptHandler(Name('KeyError', Load(), lineno=450, col_offset=19), None, [Pass( lineno=451, col_offset=16)], lineno=450, col_offset=12), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=453, col_offset=16), 'fail', Load(), lineno=453, col_offset=16), [Str('Should have raised KeyError', lineno=453, col_offset=26)], [], None, None, lineno=453, col_offset=16), lineno=453, col_offset=16)], lineno=452, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=16), 'fail', Load(), lineno=455, col_offset=16), [Str('Should have raised KeyError', lineno=455, col_offset=26)], [], None, None, lineno=455, col_offset=16), lineno=455, col_offset=16)], lineno=446, col_offset=12)], lineno=445, col_offset=13), With(Call(Name('captured_output', Load(), lineno=457, col_offset=13), [Str('stderr', lineno=457, col_offset=29)], [], None, None, lineno=457, col_offset=13), Name('stderr', Store(), lineno=457, col_offset=42), [FunctionDef('g', arguments([], None, None, []), [TryExcept([Return(Call(Name('g', Load(), lineno=460, col_offset=27), [], [], None, None, lineno=460, col_offset=27), lineno=460, col_offset=20)], [ExceptHandler(Name('RuntimeError', Load(), lineno=461, col_offset=23), None, [Return(Call(Attribute(Name('sys', Load(), lineno=462, col_offset=27), 'exc_info', Load(), lineno=462, col_offset=27), [], [], None, None, lineno=462, col_offset=27), lineno=462, col_offset=20)], lineno=461, col_offset=16)], [], lineno=459, col_offset=16)], [], lineno=458, col_offset=12), Assign([Tuple([Name('e', Store(), lineno=463, col_offset=12), Name('v', Store(), lineno=463, col_offset=15), Name('tb', Store(), lineno=463, col_offset=18)], Store(), lineno=463, col_offset=12)], Call(Name('g', Load(), lineno=463, col_offset=23), [], [], None, None, lineno=463, col_offset=23), lineno=463, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=464, col_offset=12), 'assertTrue', Load(), lineno=464, col_offset=12), [Compare(Name('e', Load(), lineno=464, col_offset=28), [Is()], [Name('RuntimeError', Load(), lineno=464, col_offset=33)], lineno=464, col_offset=28), Name('e', Load(), lineno=464, col_offset=47)], [], None, None, lineno=464, col_offset=12), lineno=464, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=465, col_offset=12), 'assertIn', Load(), lineno=465, col_offset=12), [Str('maximum recursion depth exceeded', lineno=465, col_offset=26), Call(Name('str', Load(), lineno=465, col_offset=62), [Name('v', Load(), lineno=465, col_offset=66)], [], None, None, lineno=465, col_offset=62)], [], None, None, lineno=465, col_offset=12), lineno=465, col_offset=12)], lineno=457, col_offset=13)], [], lineno=434, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('ExcWithOverriddenStr', [Name('Exception', Load(), lineno=470, col_offset=27)], [Expr(Str("Subclass of Exception that accepts a keyword 'msg' arg that is\n    returned by __str__. 'msg' won't be included in self.args", lineno=472, col_offset=-1), lineno=472, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=473, col_offset=17)], 'args', 'kwargs', []), [Assign([Attribute(Name('self', Load(), lineno=474, col_offset=8), 'msg', Store(), lineno=474, col_offset=8)], Call(Attribute(Name('kwargs', Load(), lineno=474, col_offset=19), 'pop', Load(), lineno=474, col_offset=19), [Str('msg', lineno=474, col_offset=30)], [], None, None, lineno=474, col_offset=19), lineno=474, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=475, col_offset=8), [Name('ExcWithOverriddenStr', Load(), lineno=475, col_offset=14), Name('self', Load(), lineno=475, col_offset=36)], [], None, None, lineno=475, col_offset=8), '__init__', Load(), lineno=475, col_offset=8), [], [], Name('args', Load(), lineno=475, col_offset=52), Name('kwargs', Load(), lineno=475, col_offset=60), lineno=475, col_offset=8), lineno=475, col_offset=8)], [], lineno=473, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=476, col_offset=16)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=477, col_offset=15), 'msg', Load(), lineno=477, col_offset=15), lineno=477, col_offset=8)], [], lineno=476, col_offset=4)], [], lineno=470, col_offset=0), ClassDef('TestSameStrAndUnicodeMsg', [Attribute(Name('unittest', Load(), lineno=480, col_offset=31), 'TestCase', Load(), lineno=480, col_offset=31)], [Expr(Str('unicode(err) should return the same message of str(err). See #6108', lineno=481, col_offset=4), lineno=481, col_offset=4), FunctionDef('check_same_msg', arguments([Name('self', Param(), lineno=483, col_offset=23), Name('exc', Param(), lineno=483, col_offset=29), Name('msg', Param(), lineno=483, col_offset=34)], None, None, []), [Expr(Str('Helper function that checks if str(exc) == unicode(exc) == msg', lineno=484, col_offset=8), lineno=484, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=485, col_offset=8), 'assertEqual', Load(), lineno=485, col_offset=8), [Call(Name('str', Load(), lineno=485, col_offset=25), [Name('exc', Load(), lineno=485, col_offset=29)], [], None, None, lineno=485, col_offset=25), Name('msg', Load(), lineno=485, col_offset=35)], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertEqual', Load(), lineno=486, col_offset=8), [Call(Name('str', Load(), lineno=486, col_offset=25), [Name('exc', Load(), lineno=486, col_offset=29)], [], None, None, lineno=486, col_offset=25), Call(Name('unicode', Load(), lineno=486, col_offset=35), [Name('exc', Load(), lineno=486, col_offset=43)], [], None, None, lineno=486, col_offset=35)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8)], [], lineno=483, col_offset=4), FunctionDef('test_builtin_exceptions', arguments([Name('self', Param(), lineno=488, col_offset=32)], None, None, []), [Expr(Str('Check same msg for built-in exceptions', lineno=489, col_offset=8), lineno=489, col_offset=8), Assign([Name('exceptions', Store(), lineno=493, col_offset=8)], List([Call(Name('SyntaxError', Load(), lineno=494, col_offset=12), [Str('invalid syntax', lineno=494, col_offset=24), Tuple([Str('<string>', lineno=494, col_offset=43), Num(1, lineno=494, col_offset=55), Num(3, lineno=494, col_offset=58), Str('2+*3', lineno=494, col_offset=61)], Load(), lineno=494, col_offset=43)], [], None, None, lineno=494, col_offset=12), Call(Name('IOError', Load(), lineno=495, col_offset=12), [Num(2, lineno=495, col_offset=20), Str('No such file or directory', lineno=495, col_offset=23)], [], None, None, lineno=495, col_offset=12), Call(Name('KeyError', Load(), lineno=496, col_offset=12), [Str('both should have the same quotes', lineno=496, col_offset=21)], [], None, None, lineno=496, col_offset=12), Call(Name('UnicodeDecodeError', Load(), lineno=497, col_offset=12), [Str('ascii', lineno=497, col_offset=31), Str('\xc3\xa0', lineno=497, col_offset=40), Num(0, lineno=497, col_offset=52), Num(1, lineno=497, col_offset=55), Str('ordinal not in range(128)', lineno=498, col_offset=31)], [], None, None, lineno=497, col_offset=12), Call(Name('UnicodeEncodeError', Load(), lineno=499, col_offset=12), [Str('ascii', lineno=499, col_offset=31), Str(u'\u1234', lineno=499, col_offset=40), Num(0, lineno=499, col_offset=51), Num(1, lineno=499, col_offset=54), Str('ordinal not in range(128)', lineno=500, col_offset=31)], [], None, None, lineno=499, col_offset=12)], Load(), lineno=493, col_offset=21), lineno=493, col_offset=8), For(Name('exception', Store(), lineno=502, col_offset=12), Name('exceptions', Load(), lineno=502, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=503, col_offset=12), 'assertEqual', Load(), lineno=503, col_offset=12), [Call(Name('str', Load(), lineno=503, col_offset=29), [Name('exception', Load(), lineno=503, col_offset=33)], [], None, None, lineno=503, col_offset=29), Call(Name('unicode', Load(), lineno=503, col_offset=45), [Name('exception', Load(), lineno=503, col_offset=53)], [], None, None, lineno=503, col_offset=45)], [], None, None, lineno=503, col_offset=12), lineno=503, col_offset=12)], [], lineno=502, col_offset=8)], [], lineno=488, col_offset=4), FunctionDef('test_0_args', arguments([Name('self', Param(), lineno=505, col_offset=20)], None, None, []), [Expr(Str('Check same msg for Exception with 0 args', lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=509, col_offset=8), 'check_same_msg', Load(), lineno=509, col_offset=8), [Call(Name('Exception', Load(), lineno=509, col_offset=28), [], [], None, None, lineno=509, col_offset=28), Str('', lineno=509, col_offset=41)], [], None, None, lineno=509, col_offset=8), lineno=509, col_offset=8)], [], lineno=505, col_offset=4), FunctionDef('test_0_args_with_overridden___str__', arguments([Name('self', Param(), lineno=511, col_offset=44)], None, None, []), [Expr(Str('Check same msg for exceptions with 0 args and overridden __str__', lineno=512, col_offset=8), lineno=512, col_offset=8), For(Name('msg', Store(), lineno=515, col_offset=12), Tuple([Str('foo', lineno=515, col_offset=20), Str(u'foo', lineno=515, col_offset=27)], Load(), lineno=515, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=12), 'check_same_msg', Load(), lineno=516, col_offset=12), [Call(Name('ExcWithOverriddenStr', Load(), lineno=516, col_offset=32), [], [keyword('msg', Name('msg', Load(), lineno=516, col_offset=57))], None, None, lineno=516, col_offset=32), Name('msg', Load(), lineno=516, col_offset=63)], [], None, None, lineno=516, col_offset=12), lineno=516, col_offset=12)], [], lineno=515, col_offset=8), Assign([Name('e', Store(), lineno=520, col_offset=8)], Call(Name('ExcWithOverriddenStr', Load(), lineno=520, col_offset=12), [], [keyword('msg', Str(u'f\xf6\xf6', lineno=520, col_offset=37))], None, None, lineno=520, col_offset=12), lineno=520, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=521, col_offset=8), 'assertRaises', Load(), lineno=521, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=521, col_offset=26), Name('str', Load(), lineno=521, col_offset=46), Name('e', Load(), lineno=521, col_offset=51)], [], None, None, lineno=521, col_offset=8), lineno=521, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=522, col_offset=8), 'assertEqual', Load(), lineno=522, col_offset=8), [Call(Name('unicode', Load(), lineno=522, col_offset=25), [Name('e', Load(), lineno=522, col_offset=33)], [], None, None, lineno=522, col_offset=25), Str(u'f\xf6\xf6', lineno=522, col_offset=37)], [], None, None, lineno=522, col_offset=8), lineno=522, col_offset=8)], [], lineno=511, col_offset=4), FunctionDef('test_1_arg', arguments([Name('self', Param(), lineno=524, col_offset=19)], None, None, []), [Expr(Str('Check same msg for Exceptions with 1 arg', lineno=525, col_offset=8), lineno=525, col_offset=8), For(Name('arg', Store(), lineno=526, col_offset=12), Tuple([Str('foo', lineno=526, col_offset=20), Str(u'foo', lineno=526, col_offset=27)], Load(), lineno=526, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=12), 'check_same_msg', Load(), lineno=527, col_offset=12), [Call(Name('Exception', Load(), lineno=527, col_offset=32), [Name('arg', Load(), lineno=527, col_offset=42)], [], None, None, lineno=527, col_offset=32), Name('arg', Load(), lineno=527, col_offset=48)], [], None, None, lineno=527, col_offset=12), lineno=527, col_offset=12)], [], lineno=526, col_offset=8), Assign([Name('e', Store(), lineno=532, col_offset=8)], Call(Name('Exception', Load(), lineno=532, col_offset=12), [Str(u'f\xf6\xf6', lineno=532, col_offset=22)], [], None, None, lineno=532, col_offset=12), lineno=532, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=8), 'assertRaises', Load(), lineno=533, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=533, col_offset=26), Name('str', Load(), lineno=533, col_offset=46), Name('e', Load(), lineno=533, col_offset=51)], [], None, None, lineno=533, col_offset=8), lineno=533, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=8), 'assertEqual', Load(), lineno=534, col_offset=8), [Call(Name('unicode', Load(), lineno=534, col_offset=25), [Name('e', Load(), lineno=534, col_offset=33)], [], None, None, lineno=534, col_offset=25), Str(u'f\xf6\xf6', lineno=534, col_offset=37)], [], None, None, lineno=534, col_offset=8), lineno=534, col_offset=8)], [], lineno=524, col_offset=4), FunctionDef('test_1_arg_with_overridden___str__', arguments([Name('self', Param(), lineno=536, col_offset=43)], None, None, []), [Expr(Str('Check same msg for exceptions with overridden __str__ and 1 arg', lineno=537, col_offset=8), lineno=537, col_offset=8), For(Name('msg', Store(), lineno=540, col_offset=12), Tuple([Str('foo', lineno=540, col_offset=20), Str(u'foo', lineno=540, col_offset=27)], Load(), lineno=540, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=541, col_offset=12), 'check_same_msg', Load(), lineno=541, col_offset=12), [Call(Name('ExcWithOverriddenStr', Load(), lineno=541, col_offset=32), [Str('arg', lineno=541, col_offset=53)], [keyword('msg', Name('msg', Load(), lineno=541, col_offset=64))], None, None, lineno=541, col_offset=32), Name('msg', Load(), lineno=541, col_offset=70)], [], None, None, lineno=541, col_offset=12), lineno=541, col_offset=12)], [], lineno=540, col_offset=8), Assign([Name('e', Store(), lineno=545, col_offset=8)], Call(Name('ExcWithOverriddenStr', Load(), lineno=545, col_offset=12), [Str('arg', lineno=545, col_offset=33)], [keyword('msg', Str(u'f\xf6\xf6', lineno=545, col_offset=44))], None, None, lineno=545, col_offset=12), lineno=545, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=546, col_offset=8), 'assertRaises', Load(), lineno=546, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=546, col_offset=26), Name('str', Load(), lineno=546, col_offset=46), Name('e', Load(), lineno=546, col_offset=51)], [], None, None, lineno=546, col_offset=8), lineno=546, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=8), 'assertEqual', Load(), lineno=547, col_offset=8), [Call(Name('unicode', Load(), lineno=547, col_offset=25), [Name('e', Load(), lineno=547, col_offset=33)], [], None, None, lineno=547, col_offset=25), Str(u'f\xf6\xf6', lineno=547, col_offset=37)], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8)], [], lineno=536, col_offset=4), FunctionDef('test_many_args', arguments([Name('self', Param(), lineno=549, col_offset=23)], None, None, []), [Expr(Str('Check same msg for Exceptions with many args', lineno=550, col_offset=8), lineno=550, col_offset=8), Assign([Name('argslist', Store(), lineno=551, col_offset=8)], List([Tuple([Num(3, lineno=552, col_offset=13), Str('foo', lineno=552, col_offset=16)], Load(), lineno=552, col_offset=13), Tuple([Num(1, lineno=553, col_offset=13), Str(u'foo', lineno=553, col_offset=16), Str('bar', lineno=553, col_offset=24)], Load(), lineno=553, col_offset=13), Tuple([Num(4, lineno=554, col_offset=13), Str(u'f\xf6\xf6', lineno=554, col_offset=16), Str(u'bar', lineno=554, col_offset=30), Str('baz', lineno=554, col_offset=38)], Load(), lineno=554, col_offset=13)], Load(), lineno=551, col_offset=19), lineno=551, col_offset=8), For(Name('args', Store(), lineno=557, col_offset=12), Name('argslist', Load(), lineno=557, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=558, col_offset=12), 'check_same_msg', Load(), lineno=558, col_offset=12), [Call(Name('Exception', Load(), lineno=558, col_offset=32), [], [], Name('args', Load(), lineno=558, col_offset=43), None, lineno=558, col_offset=32), Call(Name('repr', Load(), lineno=558, col_offset=50), [Name('args', Load(), lineno=558, col_offset=55)], [], None, None, lineno=558, col_offset=50)], [], None, None, lineno=558, col_offset=12), lineno=558, col_offset=12)], [], lineno=557, col_offset=8)], [], lineno=549, col_offset=4), FunctionDef('test_many_args_with_overridden___str__', arguments([Name('self', Param(), lineno=560, col_offset=47)], None, None, []), [Expr(Str('Check same msg for exceptions with overridden __str__ and many args', lineno=561, col_offset=8), lineno=561, col_offset=8), For(Name('msg', Store(), lineno=564, col_offset=12), Tuple([Str('foo', lineno=564, col_offset=20), Str(u'foo', lineno=564, col_offset=27)], Load(), lineno=564, col_offset=20), [Assign([Name('e', Store(), lineno=565, col_offset=12)], Call(Name('ExcWithOverriddenStr', Load(), lineno=565, col_offset=16), [Str('arg1', lineno=565, col_offset=37), Str(u'arg2', lineno=565, col_offset=45), Str(u'f\xf6\xf6', lineno=565, col_offset=54)], [keyword('msg', Name('msg', Load(), lineno=565, col_offset=72))], None, None, lineno=565, col_offset=16), lineno=565, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=566, col_offset=12), 'check_same_msg', Load(), lineno=566, col_offset=12), [Name('e', Load(), lineno=566, col_offset=32), Name('msg', Load(), lineno=566, col_offset=35)], [], None, None, lineno=566, col_offset=12), lineno=566, col_offset=12)], [], lineno=564, col_offset=8), Assign([Name('e', Store(), lineno=570, col_offset=8)], Call(Name('ExcWithOverriddenStr', Load(), lineno=570, col_offset=12), [Str('arg1', lineno=570, col_offset=33), Str(u'f\xf6\xf6', lineno=570, col_offset=41), Str(u'arg3', lineno=570, col_offset=55)], [keyword('msg', Str(u'f\xf6\xf6', lineno=571, col_offset=37))], None, None, lineno=570, col_offset=12), lineno=570, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=572, col_offset=8), 'assertRaises', Load(), lineno=572, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=572, col_offset=26), Name('str', Load(), lineno=572, col_offset=46), Name('e', Load(), lineno=572, col_offset=51)], [], None, None, lineno=572, col_offset=8), lineno=572, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=8), 'assertEqual', Load(), lineno=573, col_offset=8), [Call(Name('unicode', Load(), lineno=573, col_offset=25), [Name('e', Load(), lineno=573, col_offset=33)], [], None, None, lineno=573, col_offset=25), Str(u'f\xf6\xf6', lineno=573, col_offset=37)], [], None, None, lineno=573, col_offset=8), lineno=573, col_offset=8)], [], lineno=560, col_offset=4), FunctionDef('test_exception_with_doc', arguments([Name('self', Param(), lineno=576, col_offset=32)], None, None, []), [Import([alias('_testcapi', None)], lineno=577, col_offset=8), Assign([Name('doc2', Store(), lineno=578, col_offset=8)], Str('This is a test docstring.', lineno=578, col_offset=15), lineno=578, col_offset=8), Assign([Name('doc4', Store(), lineno=579, col_offset=8)], Str('This is another test docstring.', lineno=579, col_offset=15), lineno=579, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'assertRaises', Load(), lineno=581, col_offset=8), [Name('SystemError', Load(), lineno=581, col_offset=26), Attribute(Name('_testcapi', Load(), lineno=581, col_offset=39), 'make_exception_with_doc', Load(), lineno=581, col_offset=39), Str('error1', lineno=582, col_offset=26)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8), Assign([Name('error1', Store(), lineno=585, col_offset=8)], Call(Attribute(Name('_testcapi', Load(), lineno=585, col_offset=17), 'make_exception_with_doc', Load(), lineno=585, col_offset=17), [Str('_testcapi.error1', lineno=585, col_offset=51)], [], None, None, lineno=585, col_offset=17), lineno=585, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=586, col_offset=8), 'assertIs', Load(), lineno=586, col_offset=8), [Call(Name('type', Load(), lineno=586, col_offset=22), [Name('error1', Load(), lineno=586, col_offset=27)], [], None, None, lineno=586, col_offset=22), Name('type', Load(), lineno=586, col_offset=36)], [], None, None, lineno=586, col_offset=8), lineno=586, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=8), 'assertTrue', Load(), lineno=587, col_offset=8), [Call(Name('issubclass', Load(), lineno=587, col_offset=24), [Name('error1', Load(), lineno=587, col_offset=35), Name('Exception', Load(), lineno=587, col_offset=43)], [], None, None, lineno=587, col_offset=24)], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=588, col_offset=8), 'assertIsNone', Load(), lineno=588, col_offset=8), [Attribute(Name('error1', Load(), lineno=588, col_offset=26), '__doc__', Load(), lineno=588, col_offset=26)], [], None, None, lineno=588, col_offset=8), lineno=588, col_offset=8), Assign([Name('error2', Store(), lineno=591, col_offset=8)], Call(Attribute(Name('_testcapi', Load(), lineno=591, col_offset=17), 'make_exception_with_doc', Load(), lineno=591, col_offset=17), [Str('_testcapi.error2', lineno=591, col_offset=51), Name('doc2', Load(), lineno=591, col_offset=71)], [], None, None, lineno=591, col_offset=17), lineno=591, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=8), 'assertEqual', Load(), lineno=592, col_offset=8), [Attribute(Name('error2', Load(), lineno=592, col_offset=25), '__doc__', Load(), lineno=592, col_offset=25), Name('doc2', Load(), lineno=592, col_offset=41)], [], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8), Assign([Name('error3', Store(), lineno=595, col_offset=8)], Call(Attribute(Name('_testcapi', Load(), lineno=595, col_offset=17), 'make_exception_with_doc', Load(), lineno=595, col_offset=17), [Str('_testcapi.error3', lineno=595, col_offset=51)], [keyword('base', Name('error2', Load(), lineno=596, col_offset=56))], None, None, lineno=595, col_offset=17), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=597, col_offset=8), 'assertTrue', Load(), lineno=597, col_offset=8), [Call(Name('issubclass', Load(), lineno=597, col_offset=24), [Name('error3', Load(), lineno=597, col_offset=35), Name('error2', Load(), lineno=597, col_offset=43)], [], None, None, lineno=597, col_offset=24)], [], None, None, lineno=597, col_offset=8), lineno=597, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=600, col_offset=16)], [Pass( lineno=601, col_offset=12)], [], lineno=600, col_offset=8), Assign([Name('error4', Store(), lineno=602, col_offset=8)], Call(Attribute(Name('_testcapi', Load(), lineno=602, col_offset=17), 'make_exception_with_doc', Load(), lineno=602, col_offset=17), [Str('_testcapi.error4', lineno=602, col_offset=51), Name('doc4', Load(), lineno=602, col_offset=71), Tuple([Name('error3', Load(), lineno=603, col_offset=52), Name('C', Load(), lineno=603, col_offset=60)], Load(), lineno=603, col_offset=52)], [], None, None, lineno=602, col_offset=17), lineno=602, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=604, col_offset=8), 'assertTrue', Load(), lineno=604, col_offset=8), [Call(Name('issubclass', Load(), lineno=604, col_offset=24), [Name('error4', Load(), lineno=604, col_offset=35), Name('error3', Load(), lineno=604, col_offset=43)], [], None, None, lineno=604, col_offset=24)], [], None, None, lineno=604, col_offset=8), lineno=604, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=8), 'assertTrue', Load(), lineno=605, col_offset=8), [Call(Name('issubclass', Load(), lineno=605, col_offset=24), [Name('error4', Load(), lineno=605, col_offset=35), Name('C', Load(), lineno=605, col_offset=43)], [], None, None, lineno=605, col_offset=24)], [], None, None, lineno=605, col_offset=8), lineno=605, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=606, col_offset=8), 'assertEqual', Load(), lineno=606, col_offset=8), [Attribute(Name('error4', Load(), lineno=606, col_offset=25), '__doc__', Load(), lineno=606, col_offset=25), Name('doc4', Load(), lineno=606, col_offset=41)], [], None, None, lineno=606, col_offset=8), lineno=606, col_offset=8), Assign([Name('error5', Store(), lineno=609, col_offset=8)], Call(Attribute(Name('_testcapi', Load(), lineno=609, col_offset=17), 'make_exception_with_doc', Load(), lineno=609, col_offset=17), [Str('_testcapi.error5', lineno=609, col_offset=51), Str('', lineno=609, col_offset=71), Name('error4', Load(), lineno=610, col_offset=51), Dict([Str('a', lineno=610, col_offset=60)], [Num(1, lineno=610, col_offset=65)], lineno=610, col_offset=59)], [], None, None, lineno=609, col_offset=17), lineno=609, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=611, col_offset=8), 'assertTrue', Load(), lineno=611, col_offset=8), [Call(Name('issubclass', Load(), lineno=611, col_offset=24), [Name('error5', Load(), lineno=611, col_offset=35), Name('error4', Load(), lineno=611, col_offset=43)], [], None, None, lineno=611, col_offset=24)], [], None, None, lineno=611, col_offset=8), lineno=611, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=612, col_offset=8), 'assertEqual', Load(), lineno=612, col_offset=8), [Attribute(Name('error5', Load(), lineno=612, col_offset=25), 'a', Load(), lineno=612, col_offset=25), Num(1, lineno=612, col_offset=35)], [], None, None, lineno=612, col_offset=8), lineno=612, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=613, col_offset=8), 'assertEqual', Load(), lineno=613, col_offset=8), [Attribute(Name('error5', Load(), lineno=613, col_offset=25), '__doc__', Load(), lineno=613, col_offset=25), Str('', lineno=613, col_offset=41)], [], None, None, lineno=613, col_offset=8), lineno=613, col_offset=8)], [Name('cpython_only', Load(), lineno=575, col_offset=5)], lineno=575, col_offset=4)], [], lineno=480, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=617, col_offset=4), [Name('ExceptionTests', Load(), lineno=617, col_offset=17), Name('TestSameStrAndUnicodeMsg', Load(), lineno=617, col_offset=33)], [], None, None, lineno=617, col_offset=4), lineno=617, col_offset=4)], [], lineno=616, col_offset=0), If(Compare(Name('__name__', Load(), lineno=619, col_offset=3), [Eq()], [Str('__main__', lineno=619, col_offset=15)], lineno=619, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=620, col_offset=4), [], [], None, None, lineno=620, col_offset=4), lineno=620, col_offset=4)], [], lineno=619, col_offset=0)])
