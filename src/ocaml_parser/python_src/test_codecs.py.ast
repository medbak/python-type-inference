Module([ImportFrom('test', [alias('test_support', None)], 0, lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), Import([alias('codecs', None)], lineno=3, col_offset=0), Import([alias('sys', None), alias('StringIO', None), alias('_testcapi', None)], lineno=4, col_offset=0), ClassDef('Queue', [Name('object', Load(), lineno=6, col_offset=12)], [Expr(Str('\n    queue: write bytes at one end, read bytes from the other end\n    ', lineno=9, col_offset=-1), lineno=9, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=10, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=11, col_offset=8), '_buffer', Store(), lineno=11, col_offset=8)], Str('', lineno=11, col_offset=23), lineno=11, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=13, col_offset=14), Name('chars', Param(), lineno=13, col_offset=20)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=14, col_offset=8), '_buffer', Store(), lineno=14, col_offset=8), Add(), Name('chars', Load(), lineno=14, col_offset=24), lineno=14, col_offset=8)], [], lineno=13, col_offset=4), FunctionDef('read', arguments([Name('self', Param(), lineno=16, col_offset=13), Name('size', Param(), lineno=16, col_offset=19)], None, None, [Num(-1, lineno=16, col_offset=25)]), [If(Compare(Name('size', Load(), lineno=17, col_offset=11), [Lt()], [Num(0, lineno=17, col_offset=16)], lineno=17, col_offset=11), [Assign([Name('s', Store(), lineno=18, col_offset=12)], Attribute(Name('self', Load(), lineno=18, col_offset=16), '_buffer', Load(), lineno=18, col_offset=16), lineno=18, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=19, col_offset=12), '_buffer', Store(), lineno=19, col_offset=12)], Str('', lineno=19, col_offset=27), lineno=19, col_offset=12), Return(Name('s', Load(), lineno=20, col_offset=19), lineno=20, col_offset=12)], [Assign([Name('s', Store(), lineno=22, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=22, col_offset=16), '_buffer', Load(), lineno=22, col_offset=16), Slice(None, Name('size', Load(), lineno=22, col_offset=30), None), Load(), lineno=22, col_offset=16), lineno=22, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=23, col_offset=12), '_buffer', Store(), lineno=23, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=23, col_offset=27), '_buffer', Load(), lineno=23, col_offset=27), Slice(Name('size', Load(), lineno=23, col_offset=40), None, None), Load(), lineno=23, col_offset=27), lineno=23, col_offset=12), Return(Name('s', Load(), lineno=24, col_offset=19), lineno=24, col_offset=12)], lineno=17, col_offset=8)], [], lineno=16, col_offset=4)], [], lineno=6, col_offset=0), ClassDef('ReadTest', [Attribute(Name('unittest', Load(), lineno=26, col_offset=15), 'TestCase', Load(), lineno=26, col_offset=15)], [FunctionDef('check_partial', arguments([Name('self', Param(), lineno=27, col_offset=22), Name('input', Param(), lineno=27, col_offset=28), Name('partialresults', Param(), lineno=27, col_offset=35)], None, None, []), [Assign([Name('q', Store(), lineno=32, col_offset=8)], Call(Name('Queue', Load(), lineno=32, col_offset=12), [], [], None, None, lineno=32, col_offset=12), lineno=32, col_offset=8), Assign([Name('r', Store(), lineno=33, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=33, col_offset=12), 'getreader', Load(), lineno=33, col_offset=12), [Attribute(Name('self', Load(), lineno=33, col_offset=29), 'encoding', Load(), lineno=33, col_offset=29)], [], None, None, lineno=33, col_offset=12), [Name('q', Load(), lineno=33, col_offset=44)], [], None, None, lineno=33, col_offset=12), lineno=33, col_offset=8), Assign([Name('result', Store(), lineno=34, col_offset=8)], Str(u'', lineno=34, col_offset=17), lineno=34, col_offset=8), For(Tuple([Name('c', Store(), lineno=35, col_offset=13), Name('partialresult', Store(), lineno=35, col_offset=16)], Store(), lineno=35, col_offset=13), Call(Name('zip', Load(), lineno=35, col_offset=34), [Call(Attribute(Name('input', Load(), lineno=35, col_offset=38), 'encode', Load(), lineno=35, col_offset=38), [Attribute(Name('self', Load(), lineno=35, col_offset=51), 'encoding', Load(), lineno=35, col_offset=51)], [], None, None, lineno=35, col_offset=38), Name('partialresults', Load(), lineno=35, col_offset=67)], [], None, None, lineno=35, col_offset=34), [Expr(Call(Attribute(Name('q', Load(), lineno=36, col_offset=12), 'write', Load(), lineno=36, col_offset=12), [Name('c', Load(), lineno=36, col_offset=20)], [], None, None, lineno=36, col_offset=12), lineno=36, col_offset=12), AugAssign(Name('result', Store(), lineno=37, col_offset=12), Add(), Call(Attribute(Name('r', Load(), lineno=37, col_offset=22), 'read', Load(), lineno=37, col_offset=22), [], [], None, None, lineno=37, col_offset=22), lineno=37, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=12), 'assertEqual', Load(), lineno=38, col_offset=12), [Name('result', Load(), lineno=38, col_offset=29), Name('partialresult', Load(), lineno=38, col_offset=37)], [], None, None, lineno=38, col_offset=12), lineno=38, col_offset=12)], [], lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Call(Attribute(Name('r', Load(), lineno=40, col_offset=25), 'read', Load(), lineno=40, col_offset=25), [], [], None, None, lineno=40, col_offset=25), Str(u'', lineno=40, col_offset=35)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Attribute(Name('r', Load(), lineno=41, col_offset=25), 'bytebuffer', Load(), lineno=41, col_offset=25), Str('', lineno=41, col_offset=39)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [Attribute(Name('r', Load(), lineno=42, col_offset=25), 'charbuffer', Load(), lineno=42, col_offset=25), Str(u'', lineno=42, col_offset=39)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8), Assign([Name('d', Store(), lineno=45, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=45, col_offset=12), 'getincrementaldecoder', Load(), lineno=45, col_offset=12), [Attribute(Name('self', Load(), lineno=45, col_offset=41), 'encoding', Load(), lineno=45, col_offset=41)], [], None, None, lineno=45, col_offset=12), [], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=8), Assign([Name('result', Store(), lineno=46, col_offset=8)], Str(u'', lineno=46, col_offset=17), lineno=46, col_offset=8), For(Tuple([Name('c', Store(), lineno=47, col_offset=13), Name('partialresult', Store(), lineno=47, col_offset=16)], Store(), lineno=47, col_offset=13), Call(Name('zip', Load(), lineno=47, col_offset=34), [Call(Attribute(Name('input', Load(), lineno=47, col_offset=38), 'encode', Load(), lineno=47, col_offset=38), [Attribute(Name('self', Load(), lineno=47, col_offset=51), 'encoding', Load(), lineno=47, col_offset=51)], [], None, None, lineno=47, col_offset=38), Name('partialresults', Load(), lineno=47, col_offset=67)], [], None, None, lineno=47, col_offset=34), [AugAssign(Name('result', Store(), lineno=48, col_offset=12), Add(), Call(Attribute(Name('d', Load(), lineno=48, col_offset=22), 'decode', Load(), lineno=48, col_offset=22), [Name('c', Load(), lineno=48, col_offset=31)], [], None, None, lineno=48, col_offset=22), lineno=48, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=12), 'assertEqual', Load(), lineno=49, col_offset=12), [Name('result', Load(), lineno=49, col_offset=29), Name('partialresult', Load(), lineno=49, col_offset=37)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12)], [], lineno=47, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertEqual', Load(), lineno=51, col_offset=8), [Call(Attribute(Name('d', Load(), lineno=51, col_offset=25), 'decode', Load(), lineno=51, col_offset=25), [Str('', lineno=51, col_offset=34), Name('True', Load(), lineno=51, col_offset=38)], [], None, None, lineno=51, col_offset=25), Str(u'', lineno=51, col_offset=45)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=8), 'assertEqual', Load(), lineno=52, col_offset=8), [Attribute(Name('d', Load(), lineno=52, col_offset=25), 'buffer', Load(), lineno=52, col_offset=25), Str('', lineno=52, col_offset=35)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=55, col_offset=8), 'reset', Load(), lineno=55, col_offset=8), [], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), Assign([Name('result', Store(), lineno=56, col_offset=8)], Str(u'', lineno=56, col_offset=17), lineno=56, col_offset=8), For(Tuple([Name('c', Store(), lineno=57, col_offset=13), Name('partialresult', Store(), lineno=57, col_offset=16)], Store(), lineno=57, col_offset=13), Call(Name('zip', Load(), lineno=57, col_offset=34), [Call(Attribute(Name('input', Load(), lineno=57, col_offset=38), 'encode', Load(), lineno=57, col_offset=38), [Attribute(Name('self', Load(), lineno=57, col_offset=51), 'encoding', Load(), lineno=57, col_offset=51)], [], None, None, lineno=57, col_offset=38), Name('partialresults', Load(), lineno=57, col_offset=67)], [], None, None, lineno=57, col_offset=34), [AugAssign(Name('result', Store(), lineno=58, col_offset=12), Add(), Call(Attribute(Name('d', Load(), lineno=58, col_offset=22), 'decode', Load(), lineno=58, col_offset=22), [Name('c', Load(), lineno=58, col_offset=31)], [], None, None, lineno=58, col_offset=22), lineno=58, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=12), 'assertEqual', Load(), lineno=59, col_offset=12), [Name('result', Load(), lineno=59, col_offset=29), Name('partialresult', Load(), lineno=59, col_offset=37)], [], None, None, lineno=59, col_offset=12), lineno=59, col_offset=12)], [], lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertEqual', Load(), lineno=61, col_offset=8), [Call(Attribute(Name('d', Load(), lineno=61, col_offset=25), 'decode', Load(), lineno=61, col_offset=25), [Str('', lineno=61, col_offset=34), Name('True', Load(), lineno=61, col_offset=38)], [], None, None, lineno=61, col_offset=25), Str(u'', lineno=61, col_offset=45)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'assertEqual', Load(), lineno=62, col_offset=8), [Attribute(Name('d', Load(), lineno=62, col_offset=25), 'buffer', Load(), lineno=62, col_offset=25), Str('', lineno=62, col_offset=35)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Assign([Name('encoded', Store(), lineno=65, col_offset=8)], Call(Attribute(Name('input', Load(), lineno=65, col_offset=18), 'encode', Load(), lineno=65, col_offset=18), [Attribute(Name('self', Load(), lineno=65, col_offset=31), 'encoding', Load(), lineno=65, col_offset=31)], [], None, None, lineno=65, col_offset=18), lineno=65, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertEqual', Load(), lineno=66, col_offset=8), [Name('input', Load(), lineno=67, col_offset=12), Call(Attribute(Str(u'', lineno=68, col_offset=12), 'join', Load(), lineno=68, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=68, col_offset=21), 'iterdecode', Load(), lineno=68, col_offset=21), [Name('encoded', Load(), lineno=68, col_offset=39), Attribute(Name('self', Load(), lineno=68, col_offset=48), 'encoding', Load(), lineno=68, col_offset=48)], [], None, None, lineno=68, col_offset=21)], [], None, None, lineno=68, col_offset=12)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=27, col_offset=4), FunctionDef('test_readline', arguments([Name('self', Param(), lineno=71, col_offset=22)], None, None, []), [FunctionDef('getreader', arguments([Name('input', Param(), lineno=72, col_offset=22)], None, None, []), [Assign([Name('stream', Store(), lineno=73, col_offset=12)], Call(Attribute(Name('StringIO', Load(), lineno=73, col_offset=21), 'StringIO', Load(), lineno=73, col_offset=21), [Call(Attribute(Name('input', Load(), lineno=73, col_offset=39), 'encode', Load(), lineno=73, col_offset=39), [Attribute(Name('self', Load(), lineno=73, col_offset=52), 'encoding', Load(), lineno=73, col_offset=52)], [], None, None, lineno=73, col_offset=39)], [], None, None, lineno=73, col_offset=21), lineno=73, col_offset=12), Return(Call(Call(Attribute(Name('codecs', Load(), lineno=74, col_offset=19), 'getreader', Load(), lineno=74, col_offset=19), [Attribute(Name('self', Load(), lineno=74, col_offset=36), 'encoding', Load(), lineno=74, col_offset=36)], [], None, None, lineno=74, col_offset=19), [Name('stream', Load(), lineno=74, col_offset=51)], [], None, None, lineno=74, col_offset=19), lineno=74, col_offset=12)], [], lineno=72, col_offset=8), FunctionDef('readalllines', arguments([Name('input', Param(), lineno=76, col_offset=25), Name('keepends', Param(), lineno=76, col_offset=32), Name('size', Param(), lineno=76, col_offset=47)], None, None, [Name('True', Load(), lineno=76, col_offset=41), Name('None', Load(), lineno=76, col_offset=52)]), [Assign([Name('reader', Store(), lineno=77, col_offset=12)], Call(Name('getreader', Load(), lineno=77, col_offset=21), [Name('input', Load(), lineno=77, col_offset=31)], [], None, None, lineno=77, col_offset=21), lineno=77, col_offset=12), Assign([Name('lines', Store(), lineno=78, col_offset=12)], List([], Load(), lineno=78, col_offset=20), lineno=78, col_offset=12), While(Name('True', Load(), lineno=79, col_offset=18), [Assign([Name('line', Store(), lineno=80, col_offset=16)], Call(Attribute(Name('reader', Load(), lineno=80, col_offset=23), 'readline', Load(), lineno=80, col_offset=23), [], [keyword('size', Name('size', Load(), lineno=80, col_offset=44)), keyword('keepends', Name('keepends', Load(), lineno=80, col_offset=59))], None, None, lineno=80, col_offset=23), lineno=80, col_offset=16), If(UnaryOp(Not(), Name('line', Load(), lineno=81, col_offset=23), lineno=81, col_offset=19), [Break( lineno=82, col_offset=20)], [], lineno=81, col_offset=16), Expr(Call(Attribute(Name('lines', Load(), lineno=83, col_offset=16), 'append', Load(), lineno=83, col_offset=16), [Name('line', Load(), lineno=83, col_offset=29)], [], None, None, lineno=83, col_offset=16), lineno=83, col_offset=16)], [], lineno=79, col_offset=12), Return(Call(Attribute(Str('|', lineno=84, col_offset=19), 'join', Load(), lineno=84, col_offset=19), [Name('lines', Load(), lineno=84, col_offset=28)], [], None, None, lineno=84, col_offset=19), lineno=84, col_offset=12)], [], lineno=76, col_offset=8), Assign([Name('s', Store(), lineno=86, col_offset=8)], Str(u'foo\nbar\r\nbaz\rspam\u2028eggs', lineno=86, col_offset=12), lineno=86, col_offset=8), Assign([Name('sexpected', Store(), lineno=87, col_offset=8)], Str(u'foo\n|bar\r\n|baz\r|spam\u2028|eggs', lineno=87, col_offset=20), lineno=87, col_offset=8), Assign([Name('sexpectednoends', Store(), lineno=88, col_offset=8)], Str(u'foo|bar|baz|spam|eggs', lineno=88, col_offset=26), lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=89, col_offset=8), 'assertEqual', Load(), lineno=89, col_offset=8), [Call(Name('readalllines', Load(), lineno=89, col_offset=25), [Name('s', Load(), lineno=89, col_offset=38), Name('True', Load(), lineno=89, col_offset=41)], [], None, None, lineno=89, col_offset=25), Name('sexpected', Load(), lineno=89, col_offset=48)], [], None, None, lineno=89, col_offset=8), lineno=89, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [Call(Name('readalllines', Load(), lineno=90, col_offset=25), [Name('s', Load(), lineno=90, col_offset=38), Name('False', Load(), lineno=90, col_offset=41)], [], None, None, lineno=90, col_offset=25), Name('sexpectednoends', Load(), lineno=90, col_offset=49)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertEqual', Load(), lineno=91, col_offset=8), [Call(Name('readalllines', Load(), lineno=91, col_offset=25), [Name('s', Load(), lineno=91, col_offset=38), Name('True', Load(), lineno=91, col_offset=41), Num(10, lineno=91, col_offset=47)], [], None, None, lineno=91, col_offset=25), Name('sexpected', Load(), lineno=91, col_offset=52)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'assertEqual', Load(), lineno=92, col_offset=8), [Call(Name('readalllines', Load(), lineno=92, col_offset=25), [Name('s', Load(), lineno=92, col_offset=38), Name('False', Load(), lineno=92, col_offset=41), Num(10, lineno=92, col_offset=48)], [], None, None, lineno=92, col_offset=25), Name('sexpectednoends', Load(), lineno=92, col_offset=53)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8), Assign([Name('vw', Store(), lineno=95, col_offset=8)], List([], Load(), lineno=95, col_offset=13), lineno=95, col_offset=8), Assign([Name('vwo', Store(), lineno=96, col_offset=8)], List([], Load(), lineno=96, col_offset=14), lineno=96, col_offset=8), For(Tuple([Name('i', Store(), lineno=97, col_offset=13), Name('lineend', Store(), lineno=97, col_offset=16)], Store(), lineno=97, col_offset=13), Call(Name('enumerate', Load(), lineno=97, col_offset=28), [Call(Attribute(Str(u'\n \r\n \r \u2028', lineno=97, col_offset=38), 'split', Load(), lineno=97, col_offset=38), [], [], None, None, lineno=97, col_offset=38)], [], None, None, lineno=97, col_offset=28), [Expr(Call(Attribute(Name('vw', Load(), lineno=98, col_offset=12), 'append', Load(), lineno=98, col_offset=12), [BinOp(BinOp(BinOp(Name('i', Load(), lineno=98, col_offset=23), Mult(), Num(200, lineno=98, col_offset=25), lineno=98, col_offset=23), Mult(), Str(u'\xc42', lineno=98, col_offset=30), lineno=98, col_offset=22), Add(), Name('lineend', Load(), lineno=98, col_offset=41), lineno=98, col_offset=22)], [], None, None, lineno=98, col_offset=12), lineno=98, col_offset=12), Expr(Call(Attribute(Name('vwo', Load(), lineno=99, col_offset=12), 'append', Load(), lineno=99, col_offset=12), [BinOp(BinOp(Name('i', Load(), lineno=99, col_offset=24), Mult(), Num(200, lineno=99, col_offset=26), lineno=99, col_offset=24), Mult(), Str(u'\xc42', lineno=99, col_offset=31), lineno=99, col_offset=23)], [], None, None, lineno=99, col_offset=12), lineno=99, col_offset=12)], [], lineno=97, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertEqual', Load(), lineno=100, col_offset=8), [Call(Name('readalllines', Load(), lineno=100, col_offset=25), [Call(Attribute(Str('', lineno=100, col_offset=38), 'join', Load(), lineno=100, col_offset=38), [Name('vw', Load(), lineno=100, col_offset=46)], [], None, None, lineno=100, col_offset=38), Name('True', Load(), lineno=100, col_offset=51)], [], None, None, lineno=100, col_offset=25), Call(Attribute(Str('', lineno=100, col_offset=58), 'join', Load(), lineno=100, col_offset=58), [Name('vw', Load(), lineno=100, col_offset=66)], [], None, None, lineno=100, col_offset=58)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=101, col_offset=8), 'assertEqual', Load(), lineno=101, col_offset=8), [Call(Name('readalllines', Load(), lineno=101, col_offset=25), [Call(Attribute(Str('', lineno=101, col_offset=38), 'join', Load(), lineno=101, col_offset=38), [Name('vw', Load(), lineno=101, col_offset=46)], [], None, None, lineno=101, col_offset=38), Name('False', Load(), lineno=101, col_offset=51)], [], None, None, lineno=101, col_offset=25), Call(Attribute(Str('', lineno=101, col_offset=58), 'join', Load(), lineno=101, col_offset=58), [Name('vwo', Load(), lineno=101, col_offset=66)], [], None, None, lineno=101, col_offset=58)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8), For(Name('size', Store(), lineno=105, col_offset=12), Call(Name('xrange', Load(), lineno=105, col_offset=20), [Num(80, lineno=105, col_offset=27)], [], None, None, lineno=105, col_offset=20), [For(Name('lineend', Store(), lineno=106, col_offset=16), Call(Attribute(Str(u'\n \r\n \r \u2028', lineno=106, col_offset=27), 'split', Load(), lineno=106, col_offset=27), [], [], None, None, lineno=106, col_offset=27), [Assign([Name('s', Store(), lineno=107, col_offset=16)], BinOp(Num(10, lineno=107, col_offset=20), Mult(), BinOp(BinOp(BinOp(Name('size', Load(), lineno=107, col_offset=24), Mult(), Str(u'a', lineno=107, col_offset=29), lineno=107, col_offset=24), Add(), Name('lineend', Load(), lineno=107, col_offset=36), lineno=107, col_offset=24), Add(), Str(u'xxx\n', lineno=107, col_offset=46), lineno=107, col_offset=44), lineno=107, col_offset=20), lineno=107, col_offset=16), Assign([Name('reader', Store(), lineno=108, col_offset=16)], Call(Name('getreader', Load(), lineno=108, col_offset=25), [Name('s', Load(), lineno=108, col_offset=35)], [], None, None, lineno=108, col_offset=25), lineno=108, col_offset=16), For(Name('i', Store(), lineno=109, col_offset=20), Call(Name('xrange', Load(), lineno=109, col_offset=25), [Num(10, lineno=109, col_offset=32)], [], None, None, lineno=109, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=20), 'assertEqual', Load(), lineno=110, col_offset=20), [Call(Attribute(Name('reader', Load(), lineno=111, col_offset=24), 'readline', Load(), lineno=111, col_offset=24), [], [keyword('keepends', Name('True', Load(), lineno=111, col_offset=49))], None, None, lineno=111, col_offset=24), BinOp(BinOp(Name('size', Load(), lineno=112, col_offset=24), Mult(), Str(u'a', lineno=112, col_offset=29), lineno=112, col_offset=24), Add(), Name('lineend', Load(), lineno=112, col_offset=36), lineno=112, col_offset=24)], [], None, None, lineno=110, col_offset=20), lineno=110, col_offset=20)], [], lineno=109, col_offset=16), Assign([Name('reader', Store(), lineno=114, col_offset=16)], Call(Name('getreader', Load(), lineno=114, col_offset=25), [Name('s', Load(), lineno=114, col_offset=35)], [], None, None, lineno=114, col_offset=25), lineno=114, col_offset=16), For(Name('i', Store(), lineno=115, col_offset=20), Call(Name('xrange', Load(), lineno=115, col_offset=25), [Num(10, lineno=115, col_offset=32)], [], None, None, lineno=115, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=116, col_offset=20), 'assertEqual', Load(), lineno=116, col_offset=20), [Call(Attribute(Name('reader', Load(), lineno=117, col_offset=24), 'readline', Load(), lineno=117, col_offset=24), [], [keyword('keepends', Name('False', Load(), lineno=117, col_offset=49))], None, None, lineno=117, col_offset=24), BinOp(Name('size', Load(), lineno=118, col_offset=24), Mult(), Str(u'a', lineno=118, col_offset=29), lineno=118, col_offset=24)], [], None, None, lineno=116, col_offset=20), lineno=116, col_offset=20)], [], lineno=115, col_offset=16)], [], lineno=106, col_offset=12)], [], lineno=105, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_bug1175396', arguments([Name('self', Param(), lineno=121, col_offset=24)], None, None, []), [Assign([Name('s', Store(), lineno=122, col_offset=8)], List([Str('<%!--===================================================\r\n', lineno=123, col_offset=12), Str('    BLOG index page: show recent articles,\r\n', lineno=124, col_offset=12), Str("    today's articles, or articles of a specific date.\r\n", lineno=125, col_offset=12), Str('========================================================--%>\r\n', lineno=126, col_offset=12), Str('<%@inputencoding="ISO-8859-1"%>\r\n', lineno=127, col_offset=12), Str('<%@pagetemplate=TEMPLATE.y%>\r\n', lineno=128, col_offset=12), Str('<%@import=import frog.util, frog%>\r\n', lineno=129, col_offset=12), Str('<%@import=import frog.objects%>\r\n', lineno=130, col_offset=12), Str('<%@import=from frog.storageerrors import StorageError%>\r\n', lineno=131, col_offset=12), Str('<%\r\n', lineno=132, col_offset=12), Str('\r\n', lineno=133, col_offset=12), Str('import logging\r\n', lineno=134, col_offset=12), Str('log=logging.getLogger("Snakelets.logger")\r\n', lineno=135, col_offset=12), Str('\r\n', lineno=136, col_offset=12), Str('\r\n', lineno=137, col_offset=12), Str('user=self.SessionCtx.user\r\n', lineno=138, col_offset=12), Str('storageEngine=self.SessionCtx.storageEngine\r\n', lineno=139, col_offset=12), Str('\r\n', lineno=140, col_offset=12), Str('\r\n', lineno=141, col_offset=12), Str('def readArticlesFromDate(date, count=None):\r\n', lineno=142, col_offset=12), Str('    entryids=storageEngine.listBlogEntries(date)\r\n', lineno=143, col_offset=12), Str('    entryids.reverse() # descending\r\n', lineno=144, col_offset=12), Str('    if count:\r\n', lineno=145, col_offset=12), Str('        entryids=entryids[:count]\r\n', lineno=146, col_offset=12), Str('    try:\r\n', lineno=147, col_offset=12), Str('        return [ frog.objects.BlogEntry.load(storageEngine, date, Id) for Id in entryids ]\r\n', lineno=148, col_offset=12), Str('    except StorageError,x:\r\n', lineno=149, col_offset=12), Str('        log.error("Error loading articles: "+str(x))\r\n', lineno=150, col_offset=12), Str('        self.abort("cannot load articles")\r\n', lineno=151, col_offset=12), Str('\r\n', lineno=152, col_offset=12), Str('showdate=None\r\n', lineno=153, col_offset=12), Str('\r\n', lineno=154, col_offset=12), Str('arg=self.Request.getArg()\r\n', lineno=155, col_offset=12), Str('if arg=="today":\r\n', lineno=156, col_offset=12), Str("    #-------------------- TODAY'S ARTICLES\r\n", lineno=157, col_offset=12), Str('    self.write("<h2>Today\'s articles</h2>")\r\n', lineno=158, col_offset=12), Str('    showdate = frog.util.isodatestr() \r\n', lineno=159, col_offset=12), Str('    entries = readArticlesFromDate(showdate)\r\n', lineno=160, col_offset=12), Str('elif arg=="active":\r\n', lineno=161, col_offset=12), Str('    #-------------------- ACTIVE ARTICLES redirect\r\n', lineno=162, col_offset=12), Str('    self.Yredirect("active.y")\r\n', lineno=163, col_offset=12), Str('elif arg=="login":\r\n', lineno=164, col_offset=12), Str('    #-------------------- LOGIN PAGE redirect\r\n', lineno=165, col_offset=12), Str('    self.Yredirect("login.y")\r\n', lineno=166, col_offset=12), Str('elif arg=="date":\r\n', lineno=167, col_offset=12), Str('    #-------------------- ARTICLES OF A SPECIFIC DATE\r\n', lineno=168, col_offset=12), Str('    showdate = self.Request.getParameter("date")\r\n', lineno=169, col_offset=12), Str('    self.write("<h2>Articles written on %s</h2>"% frog.util.mediumdatestr(showdate))\r\n', lineno=170, col_offset=12), Str('    entries = readArticlesFromDate(showdate)\r\n', lineno=171, col_offset=12), Str('else:\r\n', lineno=172, col_offset=12), Str('    #-------------------- RECENT ARTICLES\r\n', lineno=173, col_offset=12), Str('    self.write("<h2>Recent articles</h2>")\r\n', lineno=174, col_offset=12), Str('    dates=storageEngine.listBlogEntryDates()\r\n', lineno=175, col_offset=12), Str('    if dates:\r\n', lineno=176, col_offset=12), Str('        entries=[]\r\n', lineno=177, col_offset=12), Str('        SHOWAMOUNT=10\r\n', lineno=178, col_offset=12), Str('        for showdate in dates:\r\n', lineno=179, col_offset=12), Str('            entries.extend( readArticlesFromDate(showdate, SHOWAMOUNT-len(entries)) )\r\n', lineno=180, col_offset=12), Str('            if len(entries)>=SHOWAMOUNT:\r\n', lineno=181, col_offset=12), Str('                break\r\n', lineno=182, col_offset=12), Str('                \r\n', lineno=183, col_offset=12)], Load(), lineno=122, col_offset=12), lineno=122, col_offset=8), Assign([Name('stream', Store(), lineno=185, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=185, col_offset=17), 'StringIO', Load(), lineno=185, col_offset=17), [Call(Attribute(Call(Attribute(Str('', lineno=185, col_offset=35), 'join', Load(), lineno=185, col_offset=35), [Name('s', Load(), lineno=185, col_offset=43)], [], None, None, lineno=185, col_offset=35), 'encode', Load(), lineno=185, col_offset=35), [Attribute(Name('self', Load(), lineno=185, col_offset=53), 'encoding', Load(), lineno=185, col_offset=53)], [], None, None, lineno=185, col_offset=35)], [], None, None, lineno=185, col_offset=17), lineno=185, col_offset=8), Assign([Name('reader', Store(), lineno=186, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=186, col_offset=17), 'getreader', Load(), lineno=186, col_offset=17), [Attribute(Name('self', Load(), lineno=186, col_offset=34), 'encoding', Load(), lineno=186, col_offset=34)], [], None, None, lineno=186, col_offset=17), [Name('stream', Load(), lineno=186, col_offset=49)], [], None, None, lineno=186, col_offset=17), lineno=186, col_offset=8), For(Tuple([Name('i', Store(), lineno=187, col_offset=13), Name('line', Store(), lineno=187, col_offset=16)], Store(), lineno=187, col_offset=13), Call(Name('enumerate', Load(), lineno=187, col_offset=25), [Name('reader', Load(), lineno=187, col_offset=35)], [], None, None, lineno=187, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), 'assertEqual', Load(), lineno=188, col_offset=12), [Name('line', Load(), lineno=188, col_offset=29), Subscript(Name('s', Load(), lineno=188, col_offset=35), Index(Name('i', Load(), lineno=188, col_offset=37)), Load(), lineno=188, col_offset=35)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [], lineno=187, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('test_readlinequeue', arguments([Name('self', Param(), lineno=190, col_offset=27)], None, None, []), [Assign([Name('q', Store(), lineno=191, col_offset=8)], Call(Name('Queue', Load(), lineno=191, col_offset=12), [], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=8), Assign([Name('writer', Store(), lineno=192, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=192, col_offset=17), 'getwriter', Load(), lineno=192, col_offset=17), [Attribute(Name('self', Load(), lineno=192, col_offset=34), 'encoding', Load(), lineno=192, col_offset=34)], [], None, None, lineno=192, col_offset=17), [Name('q', Load(), lineno=192, col_offset=49)], [], None, None, lineno=192, col_offset=17), lineno=192, col_offset=8), Assign([Name('reader', Store(), lineno=193, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=193, col_offset=17), 'getreader', Load(), lineno=193, col_offset=17), [Attribute(Name('self', Load(), lineno=193, col_offset=34), 'encoding', Load(), lineno=193, col_offset=34)], [], None, None, lineno=193, col_offset=17), [Name('q', Load(), lineno=193, col_offset=49)], [], None, None, lineno=193, col_offset=17), lineno=193, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=196, col_offset=8), 'write', Load(), lineno=196, col_offset=8), [Str(u'foo\r', lineno=196, col_offset=21)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), 'assertEqual', Load(), lineno=197, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=197, col_offset=25), 'readline', Load(), lineno=197, col_offset=25), [], [keyword('keepends', Name('False', Load(), lineno=197, col_offset=50))], None, None, lineno=197, col_offset=25), Str(u'foo', lineno=197, col_offset=58)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=198, col_offset=8), 'write', Load(), lineno=198, col_offset=8), [Str(u'\nbar\r', lineno=198, col_offset=21)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=8), 'assertEqual', Load(), lineno=199, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=199, col_offset=25), 'readline', Load(), lineno=199, col_offset=25), [], [keyword('keepends', Name('False', Load(), lineno=199, col_offset=50))], None, None, lineno=199, col_offset=25), Str(u'', lineno=199, col_offset=58)], [], None, None, lineno=199, col_offset=8), lineno=199, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=200, col_offset=8), 'assertEqual', Load(), lineno=200, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=200, col_offset=25), 'readline', Load(), lineno=200, col_offset=25), [], [keyword('keepends', Name('False', Load(), lineno=200, col_offset=50))], None, None, lineno=200, col_offset=25), Str(u'bar', lineno=200, col_offset=58)], [], None, None, lineno=200, col_offset=8), lineno=200, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=201, col_offset=8), 'write', Load(), lineno=201, col_offset=8), [Str(u'baz', lineno=201, col_offset=21)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=202, col_offset=8), 'assertEqual', Load(), lineno=202, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=202, col_offset=25), 'readline', Load(), lineno=202, col_offset=25), [], [keyword('keepends', Name('False', Load(), lineno=202, col_offset=50))], None, None, lineno=202, col_offset=25), Str(u'baz', lineno=202, col_offset=58)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'assertEqual', Load(), lineno=203, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=203, col_offset=25), 'readline', Load(), lineno=203, col_offset=25), [], [keyword('keepends', Name('False', Load(), lineno=203, col_offset=50))], None, None, lineno=203, col_offset=25), Str(u'', lineno=203, col_offset=58)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=206, col_offset=8), 'write', Load(), lineno=206, col_offset=8), [Str(u'foo\r', lineno=206, col_offset=21)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'assertEqual', Load(), lineno=207, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=207, col_offset=25), 'readline', Load(), lineno=207, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=207, col_offset=50))], None, None, lineno=207, col_offset=25), Str(u'foo\r', lineno=207, col_offset=57)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=208, col_offset=8), 'write', Load(), lineno=208, col_offset=8), [Str(u'\nbar\r', lineno=208, col_offset=21)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=209, col_offset=25), 'readline', Load(), lineno=209, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=209, col_offset=50))], None, None, lineno=209, col_offset=25), Str(u'\n', lineno=209, col_offset=57)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertEqual', Load(), lineno=210, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=210, col_offset=25), 'readline', Load(), lineno=210, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=210, col_offset=50))], None, None, lineno=210, col_offset=25), Str(u'bar\r', lineno=210, col_offset=57)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=211, col_offset=8), 'write', Load(), lineno=211, col_offset=8), [Str(u'baz', lineno=211, col_offset=21)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertEqual', Load(), lineno=212, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=212, col_offset=25), 'readline', Load(), lineno=212, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=212, col_offset=50))], None, None, lineno=212, col_offset=25), Str(u'baz', lineno=212, col_offset=57)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=8), 'assertEqual', Load(), lineno=213, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=213, col_offset=25), 'readline', Load(), lineno=213, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=213, col_offset=50))], None, None, lineno=213, col_offset=25), Str(u'', lineno=213, col_offset=57)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8), Expr(Call(Attribute(Name('writer', Load(), lineno=214, col_offset=8), 'write', Load(), lineno=214, col_offset=8), [Str(u'foo\r\n', lineno=214, col_offset=21)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=215, col_offset=8), 'assertEqual', Load(), lineno=215, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=215, col_offset=25), 'readline', Load(), lineno=215, col_offset=25), [], [keyword('keepends', Name('True', Load(), lineno=215, col_offset=50))], None, None, lineno=215, col_offset=25), Str(u'foo\r\n', lineno=215, col_offset=57)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8)], [], lineno=190, col_offset=4), FunctionDef('test_bug1098990_a', arguments([Name('self', Param(), lineno=217, col_offset=26)], None, None, []), [Assign([Name('s1', Store(), lineno=218, col_offset=8)], Str(u'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r\n', lineno=218, col_offset=13), lineno=218, col_offset=8), Assign([Name('s2', Store(), lineno=219, col_offset=8)], Str(u'offending line: ladfj askldfj klasdj fskla dfzaskdj fasklfj laskd fjasklfzzzzaa%whereisthis!!!\r\n', lineno=219, col_offset=13), lineno=219, col_offset=8), Assign([Name('s3', Store(), lineno=220, col_offset=8)], Str(u'next line.\r\n', lineno=220, col_offset=13), lineno=220, col_offset=8), Assign([Name('s', Store(), lineno=222, col_offset=8)], Call(Attribute(BinOp(BinOp(Name('s1', Load(), lineno=222, col_offset=13), Add(), Name('s2', Load(), lineno=222, col_offset=16), lineno=222, col_offset=13), Add(), Name('s3', Load(), lineno=222, col_offset=19), lineno=222, col_offset=18), 'encode', Load(), lineno=222, col_offset=18), [Attribute(Name('self', Load(), lineno=222, col_offset=30), 'encoding', Load(), lineno=222, col_offset=30)], [], None, None, lineno=222, col_offset=18), lineno=222, col_offset=8), Assign([Name('stream', Store(), lineno=223, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=223, col_offset=17), 'StringIO', Load(), lineno=223, col_offset=17), [Name('s', Load(), lineno=223, col_offset=35)], [], None, None, lineno=223, col_offset=17), lineno=223, col_offset=8), Assign([Name('reader', Store(), lineno=224, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=224, col_offset=17), 'getreader', Load(), lineno=224, col_offset=17), [Attribute(Name('self', Load(), lineno=224, col_offset=34), 'encoding', Load(), lineno=224, col_offset=34)], [], None, None, lineno=224, col_offset=17), [Name('stream', Load(), lineno=224, col_offset=49)], [], None, None, lineno=224, col_offset=17), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertEqual', Load(), lineno=225, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=225, col_offset=25), 'readline', Load(), lineno=225, col_offset=25), [], [], None, None, lineno=225, col_offset=25), Name('s1', Load(), lineno=225, col_offset=44)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), 'assertEqual', Load(), lineno=226, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=226, col_offset=25), 'readline', Load(), lineno=226, col_offset=25), [], [], None, None, lineno=226, col_offset=25), Name('s2', Load(), lineno=226, col_offset=44)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=8), 'assertEqual', Load(), lineno=227, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=227, col_offset=25), 'readline', Load(), lineno=227, col_offset=25), [], [], None, None, lineno=227, col_offset=25), Name('s3', Load(), lineno=227, col_offset=44)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertEqual', Load(), lineno=228, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=228, col_offset=25), 'readline', Load(), lineno=228, col_offset=25), [], [], None, None, lineno=228, col_offset=25), Str(u'', lineno=228, col_offset=44)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8)], [], lineno=217, col_offset=4), FunctionDef('test_bug1098990_b', arguments([Name('self', Param(), lineno=230, col_offset=26)], None, None, []), [Assign([Name('s1', Store(), lineno=231, col_offset=8)], Str(u'aaaaaaaaaaaaaaaaaaaaaaaa\r\n', lineno=231, col_offset=13), lineno=231, col_offset=8), Assign([Name('s2', Store(), lineno=232, col_offset=8)], Str(u'bbbbbbbbbbbbbbbbbbbbbbbb\r\n', lineno=232, col_offset=13), lineno=232, col_offset=8), Assign([Name('s3', Store(), lineno=233, col_offset=8)], Str(u'stillokay:bbbbxx\r\n', lineno=233, col_offset=13), lineno=233, col_offset=8), Assign([Name('s4', Store(), lineno=234, col_offset=8)], Str(u'broken!!!!badbad\r\n', lineno=234, col_offset=13), lineno=234, col_offset=8), Assign([Name('s5', Store(), lineno=235, col_offset=8)], Str(u'againokay.\r\n', lineno=235, col_offset=13), lineno=235, col_offset=8), Assign([Name('s', Store(), lineno=237, col_offset=8)], Call(Attribute(BinOp(BinOp(BinOp(BinOp(Name('s1', Load(), lineno=237, col_offset=13), Add(), Name('s2', Load(), lineno=237, col_offset=16), lineno=237, col_offset=13), Add(), Name('s3', Load(), lineno=237, col_offset=19), lineno=237, col_offset=18), Add(), Name('s4', Load(), lineno=237, col_offset=22), lineno=237, col_offset=21), Add(), Name('s5', Load(), lineno=237, col_offset=25), lineno=237, col_offset=24), 'encode', Load(), lineno=237, col_offset=24), [Attribute(Name('self', Load(), lineno=237, col_offset=36), 'encoding', Load(), lineno=237, col_offset=36)], [], None, None, lineno=237, col_offset=24), lineno=237, col_offset=8), Assign([Name('stream', Store(), lineno=238, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=238, col_offset=17), 'StringIO', Load(), lineno=238, col_offset=17), [Name('s', Load(), lineno=238, col_offset=35)], [], None, None, lineno=238, col_offset=17), lineno=238, col_offset=8), Assign([Name('reader', Store(), lineno=239, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=239, col_offset=17), 'getreader', Load(), lineno=239, col_offset=17), [Attribute(Name('self', Load(), lineno=239, col_offset=34), 'encoding', Load(), lineno=239, col_offset=34)], [], None, None, lineno=239, col_offset=17), [Name('stream', Load(), lineno=239, col_offset=49)], [], None, None, lineno=239, col_offset=17), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertEqual', Load(), lineno=240, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=240, col_offset=25), 'readline', Load(), lineno=240, col_offset=25), [], [], None, None, lineno=240, col_offset=25), Name('s1', Load(), lineno=240, col_offset=44)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertEqual', Load(), lineno=241, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=241, col_offset=25), 'readline', Load(), lineno=241, col_offset=25), [], [], None, None, lineno=241, col_offset=25), Name('s2', Load(), lineno=241, col_offset=44)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'assertEqual', Load(), lineno=242, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=242, col_offset=25), 'readline', Load(), lineno=242, col_offset=25), [], [], None, None, lineno=242, col_offset=25), Name('s3', Load(), lineno=242, col_offset=44)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertEqual', Load(), lineno=243, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=243, col_offset=25), 'readline', Load(), lineno=243, col_offset=25), [], [], None, None, lineno=243, col_offset=25), Name('s4', Load(), lineno=243, col_offset=44)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertEqual', Load(), lineno=244, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=244, col_offset=25), 'readline', Load(), lineno=244, col_offset=25), [], [], None, None, lineno=244, col_offset=25), Name('s5', Load(), lineno=244, col_offset=44)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=8), 'assertEqual', Load(), lineno=245, col_offset=8), [Call(Attribute(Name('reader', Load(), lineno=245, col_offset=25), 'readline', Load(), lineno=245, col_offset=25), [], [], None, None, lineno=245, col_offset=25), Str(u'', lineno=245, col_offset=44)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8)], [], lineno=230, col_offset=4)], [], lineno=26, col_offset=0), ClassDef('UTF32Test', [Name('ReadTest', Load(), lineno=247, col_offset=16)], [Assign([Name('encoding', Store(), lineno=248, col_offset=4)], Str('utf-32', lineno=248, col_offset=15), lineno=248, col_offset=4), Assign([Name('spamle', Store(), lineno=250, col_offset=4)], Str('\xff\xfe\x00\x00s\x00\x00\x00p\x00\x00\x00a\x00\x00\x00m\x00\x00\x00s\x00\x00\x00p\x00\x00\x00a\x00\x00\x00m\x00\x00\x00', lineno=250, col_offset=14), lineno=250, col_offset=4), Assign([Name('spambe', Store(), lineno=253, col_offset=4)], Str('\x00\x00\xfe\xff\x00\x00\x00s\x00\x00\x00p\x00\x00\x00a\x00\x00\x00m\x00\x00\x00s\x00\x00\x00p\x00\x00\x00a\x00\x00\x00m', lineno=253, col_offset=14), lineno=253, col_offset=4), FunctionDef('test_only_one_bom', arguments([Name('self', Param(), lineno=257, col_offset=26)], None, None, []), [Assign([Tuple([Name('_', Store(), lineno=258, col_offset=8), Name('_', Store(), lineno=258, col_offset=10), Name('reader', Store(), lineno=258, col_offset=12), Name('writer', Store(), lineno=258, col_offset=19)], Store(), lineno=258, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=258, col_offset=28), 'lookup', Load(), lineno=258, col_offset=28), [Attribute(Name('self', Load(), lineno=258, col_offset=42), 'encoding', Load(), lineno=258, col_offset=42)], [], None, None, lineno=258, col_offset=28), lineno=258, col_offset=8), Assign([Name('s', Store(), lineno=260, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=260, col_offset=12), 'StringIO', Load(), lineno=260, col_offset=12), [], [], None, None, lineno=260, col_offset=12), lineno=260, col_offset=8), Assign([Name('f', Store(), lineno=261, col_offset=8)], Call(Name('writer', Load(), lineno=261, col_offset=12), [Name('s', Load(), lineno=261, col_offset=19)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=262, col_offset=8), 'write', Load(), lineno=262, col_offset=8), [Str(u'spam', lineno=262, col_offset=16)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=263, col_offset=8), 'write', Load(), lineno=263, col_offset=8), [Str(u'spam', lineno=263, col_offset=16)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), Assign([Name('d', Store(), lineno=264, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=264, col_offset=12), 'getvalue', Load(), lineno=264, col_offset=12), [], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=8), 'assertTrue', Load(), lineno=266, col_offset=8), [BoolOp(Or(), [Compare(Name('d', Load(), lineno=266, col_offset=24), [Eq()], [Attribute(Name('self', Load(), lineno=266, col_offset=29), 'spamle', Load(), lineno=266, col_offset=29)], lineno=266, col_offset=24), Compare(Name('d', Load(), lineno=266, col_offset=44), [Eq()], [Attribute(Name('self', Load(), lineno=266, col_offset=49), 'spambe', Load(), lineno=266, col_offset=49)], lineno=266, col_offset=44)], lineno=266, col_offset=24)], [], None, None, lineno=266, col_offset=8), lineno=266, col_offset=8), Assign([Name('s', Store(), lineno=268, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=268, col_offset=12), 'StringIO', Load(), lineno=268, col_offset=12), [Name('d', Load(), lineno=268, col_offset=30)], [], None, None, lineno=268, col_offset=12), lineno=268, col_offset=8), Assign([Name('f', Store(), lineno=269, col_offset=8)], Call(Name('reader', Load(), lineno=269, col_offset=12), [Name('s', Load(), lineno=269, col_offset=19)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=270, col_offset=8), 'assertEqual', Load(), lineno=270, col_offset=8), [Call(Attribute(Name('f', Load(), lineno=270, col_offset=25), 'read', Load(), lineno=270, col_offset=25), [], [], None, None, lineno=270, col_offset=25), Str(u'spamspam', lineno=270, col_offset=35)], [], None, None, lineno=270, col_offset=8), lineno=270, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_badbom', arguments([Name('self', Param(), lineno=272, col_offset=20)], None, None, []), [Assign([Name('s', Store(), lineno=273, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=273, col_offset=12), 'StringIO', Load(), lineno=273, col_offset=12), [BinOp(Num(4, lineno=273, col_offset=30), Mult(), Str('\xff', lineno=273, col_offset=32), lineno=273, col_offset=30)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=8), Assign([Name('f', Store(), lineno=274, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=274, col_offset=12), 'getreader', Load(), lineno=274, col_offset=12), [Attribute(Name('self', Load(), lineno=274, col_offset=29), 'encoding', Load(), lineno=274, col_offset=29)], [], None, None, lineno=274, col_offset=12), [Name('s', Load(), lineno=274, col_offset=44)], [], None, None, lineno=274, col_offset=12), lineno=274, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=275, col_offset=8), 'assertRaises', Load(), lineno=275, col_offset=8), [Name('UnicodeError', Load(), lineno=275, col_offset=26), Attribute(Name('f', Load(), lineno=275, col_offset=40), 'read', Load(), lineno=275, col_offset=40)], [], None, None, lineno=275, col_offset=8), lineno=275, col_offset=8), Assign([Name('s', Store(), lineno=277, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=277, col_offset=12), 'StringIO', Load(), lineno=277, col_offset=12), [BinOp(Num(8, lineno=277, col_offset=30), Mult(), Str('\xff', lineno=277, col_offset=32), lineno=277, col_offset=30)], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=8), Assign([Name('f', Store(), lineno=278, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=278, col_offset=12), 'getreader', Load(), lineno=278, col_offset=12), [Attribute(Name('self', Load(), lineno=278, col_offset=29), 'encoding', Load(), lineno=278, col_offset=29)], [], None, None, lineno=278, col_offset=12), [Name('s', Load(), lineno=278, col_offset=44)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertRaises', Load(), lineno=279, col_offset=8), [Name('UnicodeError', Load(), lineno=279, col_offset=26), Attribute(Name('f', Load(), lineno=279, col_offset=40), 'read', Load(), lineno=279, col_offset=40)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=281, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=282, col_offset=8), 'check_partial', Load(), lineno=282, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=283, col_offset=12), List([Str(u'', lineno=285, col_offset=16), Str(u'', lineno=286, col_offset=16), Str(u'', lineno=287, col_offset=16), Str(u'', lineno=288, col_offset=16), Str(u'', lineno=289, col_offset=16), Str(u'', lineno=290, col_offset=16), Str(u'', lineno=291, col_offset=16), Str(u'\x00', lineno=292, col_offset=16), Str(u'\x00', lineno=293, col_offset=16), Str(u'\x00', lineno=294, col_offset=16), Str(u'\x00', lineno=295, col_offset=16), Str(u'\x00\xff', lineno=296, col_offset=16), Str(u'\x00\xff', lineno=297, col_offset=16), Str(u'\x00\xff', lineno=298, col_offset=16), Str(u'\x00\xff', lineno=299, col_offset=16), Str(u'\x00\xff\u0100', lineno=300, col_offset=16), Str(u'\x00\xff\u0100', lineno=301, col_offset=16), Str(u'\x00\xff\u0100', lineno=302, col_offset=16), Str(u'\x00\xff\u0100', lineno=303, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=304, col_offset=16)], Load(), lineno=284, col_offset=12)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('test_handlers', arguments([Name('self', Param(), lineno=308, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), 'assertEqual', Load(), lineno=309, col_offset=8), [Tuple([Str(u'\ufffd', lineno=309, col_offset=26), Num(1, lineno=309, col_offset=37)], Load(), lineno=309, col_offset=26), Call(Attribute(Name('codecs', Load(), lineno=310, col_offset=25), 'utf_32_decode', Load(), lineno=310, col_offset=25), [Str('\x01', lineno=310, col_offset=46), Str('replace', lineno=310, col_offset=54), Name('True', Load(), lineno=310, col_offset=65)], [], None, None, lineno=310, col_offset=25)], [], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'assertEqual', Load(), lineno=311, col_offset=8), [Tuple([Str(u'', lineno=311, col_offset=26), Num(1, lineno=311, col_offset=31)], Load(), lineno=311, col_offset=26), Call(Attribute(Name('codecs', Load(), lineno=312, col_offset=25), 'utf_32_decode', Load(), lineno=312, col_offset=25), [Str('\x01', lineno=312, col_offset=46), Str('ignore', lineno=312, col_offset=54), Name('True', Load(), lineno=312, col_offset=64)], [], None, None, lineno=312, col_offset=25)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=314, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=315, col_offset=8), 'assertRaises', Load(), lineno=315, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=315, col_offset=26), Attribute(Name('codecs', Load(), lineno=315, col_offset=46), 'utf_32_decode', Load(), lineno=315, col_offset=46), Str('\xff', lineno=316, col_offset=26), Str('strict', lineno=316, col_offset=34), Name('True', Load(), lineno=316, col_offset=44)], [], None, None, lineno=315, col_offset=8), lineno=315, col_offset=8)], [], lineno=314, col_offset=4), FunctionDef('test_issue8941', arguments([Name('self', Param(), lineno=318, col_offset=23)], None, None, []), [Assign([Name('encoded_le', Store(), lineno=321, col_offset=8)], BinOp(Str('\xff\xfe\x00\x00', lineno=321, col_offset=21), Add(), BinOp(Str('\x00\x00\x01\x00', lineno=321, col_offset=42), Mult(), Num(1024, lineno=321, col_offset=63), lineno=321, col_offset=42), lineno=321, col_offset=21), lineno=321, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=322, col_offset=8), 'assertEqual', Load(), lineno=322, col_offset=8), [BinOp(Str(u'\U00010000', lineno=322, col_offset=25), Mult(), Num(1024, lineno=322, col_offset=41), lineno=322, col_offset=25), Subscript(Call(Attribute(Name('codecs', Load(), lineno=323, col_offset=25), 'utf_32_decode', Load(), lineno=323, col_offset=25), [Name('encoded_le', Load(), lineno=323, col_offset=46)], [], None, None, lineno=323, col_offset=25), Index(Num(0, lineno=323, col_offset=58)), Load(), lineno=323, col_offset=25)], [], None, None, lineno=322, col_offset=8), lineno=322, col_offset=8), Assign([Name('encoded_be', Store(), lineno=324, col_offset=8)], BinOp(Str('\x00\x00\xfe\xff', lineno=324, col_offset=21), Add(), BinOp(Str('\x00\x01\x00\x00', lineno=324, col_offset=42), Mult(), Num(1024, lineno=324, col_offset=63), lineno=324, col_offset=42), lineno=324, col_offset=21), lineno=324, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'assertEqual', Load(), lineno=325, col_offset=8), [BinOp(Str(u'\U00010000', lineno=325, col_offset=25), Mult(), Num(1024, lineno=325, col_offset=41), lineno=325, col_offset=25), Subscript(Call(Attribute(Name('codecs', Load(), lineno=326, col_offset=25), 'utf_32_decode', Load(), lineno=326, col_offset=25), [Name('encoded_be', Load(), lineno=326, col_offset=46)], [], None, None, lineno=326, col_offset=25), Index(Num(0, lineno=326, col_offset=58)), Load(), lineno=326, col_offset=25)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8)], [], lineno=318, col_offset=4)], [], lineno=247, col_offset=0), ClassDef('UTF32LETest', [Name('ReadTest', Load(), lineno=328, col_offset=18)], [Assign([Name('encoding', Store(), lineno=329, col_offset=4)], Str('utf-32-le', lineno=329, col_offset=15), lineno=329, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=331, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=332, col_offset=8), 'check_partial', Load(), lineno=332, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=333, col_offset=12), List([Str(u'', lineno=335, col_offset=16), Str(u'', lineno=336, col_offset=16), Str(u'', lineno=337, col_offset=16), Str(u'\x00', lineno=338, col_offset=16), Str(u'\x00', lineno=339, col_offset=16), Str(u'\x00', lineno=340, col_offset=16), Str(u'\x00', lineno=341, col_offset=16), Str(u'\x00\xff', lineno=342, col_offset=16), Str(u'\x00\xff', lineno=343, col_offset=16), Str(u'\x00\xff', lineno=344, col_offset=16), Str(u'\x00\xff', lineno=345, col_offset=16), Str(u'\x00\xff\u0100', lineno=346, col_offset=16), Str(u'\x00\xff\u0100', lineno=347, col_offset=16), Str(u'\x00\xff\u0100', lineno=348, col_offset=16), Str(u'\x00\xff\u0100', lineno=349, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=350, col_offset=16)], Load(), lineno=334, col_offset=12)], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8)], [], lineno=331, col_offset=4), FunctionDef('test_simple', arguments([Name('self', Param(), lineno=354, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertEqual', Load(), lineno=355, col_offset=8), [Call(Attribute(Str(u'\U00010203', lineno=355, col_offset=25), 'encode', Load(), lineno=355, col_offset=25), [Attribute(Name('self', Load(), lineno=355, col_offset=46), 'encoding', Load(), lineno=355, col_offset=46)], [], None, None, lineno=355, col_offset=25), Str('\x03\x02\x01\x00', lineno=355, col_offset=62)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=357, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertRaises', Load(), lineno=358, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=358, col_offset=26), Attribute(Name('codecs', Load(), lineno=358, col_offset=46), 'utf_32_le_decode', Load(), lineno=358, col_offset=46), Str('\xff', lineno=359, col_offset=26), Str('strict', lineno=359, col_offset=34), Name('True', Load(), lineno=359, col_offset=44)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8)], [], lineno=357, col_offset=4), FunctionDef('test_issue8941', arguments([Name('self', Param(), lineno=361, col_offset=23)], None, None, []), [Assign([Name('encoded', Store(), lineno=364, col_offset=8)], BinOp(Str('\x00\x00\x01\x00', lineno=364, col_offset=18), Mult(), Num(1024, lineno=364, col_offset=39), lineno=364, col_offset=18), lineno=364, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=365, col_offset=8), 'assertEqual', Load(), lineno=365, col_offset=8), [BinOp(Str(u'\U00010000', lineno=365, col_offset=25), Mult(), Num(1024, lineno=365, col_offset=41), lineno=365, col_offset=25), Subscript(Call(Attribute(Name('codecs', Load(), lineno=366, col_offset=25), 'utf_32_le_decode', Load(), lineno=366, col_offset=25), [Name('encoded', Load(), lineno=366, col_offset=49)], [], None, None, lineno=366, col_offset=25), Index(Num(0, lineno=366, col_offset=58)), Load(), lineno=366, col_offset=25)], [], None, None, lineno=365, col_offset=8), lineno=365, col_offset=8)], [], lineno=361, col_offset=4)], [], lineno=328, col_offset=0), ClassDef('UTF32BETest', [Name('ReadTest', Load(), lineno=368, col_offset=18)], [Assign([Name('encoding', Store(), lineno=369, col_offset=4)], Str('utf-32-be', lineno=369, col_offset=15), lineno=369, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=371, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'check_partial', Load(), lineno=372, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=373, col_offset=12), List([Str(u'', lineno=375, col_offset=16), Str(u'', lineno=376, col_offset=16), Str(u'', lineno=377, col_offset=16), Str(u'\x00', lineno=378, col_offset=16), Str(u'\x00', lineno=379, col_offset=16), Str(u'\x00', lineno=380, col_offset=16), Str(u'\x00', lineno=381, col_offset=16), Str(u'\x00\xff', lineno=382, col_offset=16), Str(u'\x00\xff', lineno=383, col_offset=16), Str(u'\x00\xff', lineno=384, col_offset=16), Str(u'\x00\xff', lineno=385, col_offset=16), Str(u'\x00\xff\u0100', lineno=386, col_offset=16), Str(u'\x00\xff\u0100', lineno=387, col_offset=16), Str(u'\x00\xff\u0100', lineno=388, col_offset=16), Str(u'\x00\xff\u0100', lineno=389, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=390, col_offset=16)], Load(), lineno=374, col_offset=12)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8)], [], lineno=371, col_offset=4), FunctionDef('test_simple', arguments([Name('self', Param(), lineno=394, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertEqual', Load(), lineno=395, col_offset=8), [Call(Attribute(Str(u'\U00010203', lineno=395, col_offset=25), 'encode', Load(), lineno=395, col_offset=25), [Attribute(Name('self', Load(), lineno=395, col_offset=46), 'encoding', Load(), lineno=395, col_offset=46)], [], None, None, lineno=395, col_offset=25), Str('\x00\x01\x02\x03', lineno=395, col_offset=62)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8)], [], lineno=394, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=397, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'assertRaises', Load(), lineno=398, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=398, col_offset=26), Attribute(Name('codecs', Load(), lineno=398, col_offset=46), 'utf_32_be_decode', Load(), lineno=398, col_offset=46), Str('\xff', lineno=399, col_offset=26), Str('strict', lineno=399, col_offset=34), Name('True', Load(), lineno=399, col_offset=44)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8)], [], lineno=397, col_offset=4), FunctionDef('test_issue8941', arguments([Name('self', Param(), lineno=401, col_offset=23)], None, None, []), [Assign([Name('encoded', Store(), lineno=404, col_offset=8)], BinOp(Str('\x00\x01\x00\x00', lineno=404, col_offset=18), Mult(), Num(1024, lineno=404, col_offset=39), lineno=404, col_offset=18), lineno=404, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'assertEqual', Load(), lineno=405, col_offset=8), [BinOp(Str(u'\U00010000', lineno=405, col_offset=25), Mult(), Num(1024, lineno=405, col_offset=41), lineno=405, col_offset=25), Subscript(Call(Attribute(Name('codecs', Load(), lineno=406, col_offset=25), 'utf_32_be_decode', Load(), lineno=406, col_offset=25), [Name('encoded', Load(), lineno=406, col_offset=49)], [], None, None, lineno=406, col_offset=25), Index(Num(0, lineno=406, col_offset=58)), Load(), lineno=406, col_offset=25)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8)], [], lineno=401, col_offset=4)], [], lineno=368, col_offset=0), ClassDef('UTF16Test', [Name('ReadTest', Load(), lineno=409, col_offset=16)], [Assign([Name('encoding', Store(), lineno=410, col_offset=4)], Str('utf-16', lineno=410, col_offset=15), lineno=410, col_offset=4), Assign([Name('spamle', Store(), lineno=412, col_offset=4)], Str('\xff\xfes\x00p\x00a\x00m\x00s\x00p\x00a\x00m\x00', lineno=412, col_offset=13), lineno=412, col_offset=4), Assign([Name('spambe', Store(), lineno=413, col_offset=4)], Str('\xfe\xff\x00s\x00p\x00a\x00m\x00s\x00p\x00a\x00m', lineno=413, col_offset=13), lineno=413, col_offset=4), FunctionDef('test_only_one_bom', arguments([Name('self', Param(), lineno=415, col_offset=26)], None, None, []), [Assign([Tuple([Name('_', Store(), lineno=416, col_offset=8), Name('_', Store(), lineno=416, col_offset=10), Name('reader', Store(), lineno=416, col_offset=12), Name('writer', Store(), lineno=416, col_offset=19)], Store(), lineno=416, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=416, col_offset=28), 'lookup', Load(), lineno=416, col_offset=28), [Attribute(Name('self', Load(), lineno=416, col_offset=42), 'encoding', Load(), lineno=416, col_offset=42)], [], None, None, lineno=416, col_offset=28), lineno=416, col_offset=8), Assign([Name('s', Store(), lineno=418, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=418, col_offset=12), 'StringIO', Load(), lineno=418, col_offset=12), [], [], None, None, lineno=418, col_offset=12), lineno=418, col_offset=8), Assign([Name('f', Store(), lineno=419, col_offset=8)], Call(Name('writer', Load(), lineno=419, col_offset=12), [Name('s', Load(), lineno=419, col_offset=19)], [], None, None, lineno=419, col_offset=12), lineno=419, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=420, col_offset=8), 'write', Load(), lineno=420, col_offset=8), [Str(u'spam', lineno=420, col_offset=16)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=421, col_offset=8), 'write', Load(), lineno=421, col_offset=8), [Str(u'spam', lineno=421, col_offset=16)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8), Assign([Name('d', Store(), lineno=422, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=422, col_offset=12), 'getvalue', Load(), lineno=422, col_offset=12), [], [], None, None, lineno=422, col_offset=12), lineno=422, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=424, col_offset=8), 'assertTrue', Load(), lineno=424, col_offset=8), [BoolOp(Or(), [Compare(Name('d', Load(), lineno=424, col_offset=24), [Eq()], [Attribute(Name('self', Load(), lineno=424, col_offset=29), 'spamle', Load(), lineno=424, col_offset=29)], lineno=424, col_offset=24), Compare(Name('d', Load(), lineno=424, col_offset=44), [Eq()], [Attribute(Name('self', Load(), lineno=424, col_offset=49), 'spambe', Load(), lineno=424, col_offset=49)], lineno=424, col_offset=44)], lineno=424, col_offset=24)], [], None, None, lineno=424, col_offset=8), lineno=424, col_offset=8), Assign([Name('s', Store(), lineno=426, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=426, col_offset=12), 'StringIO', Load(), lineno=426, col_offset=12), [Name('d', Load(), lineno=426, col_offset=30)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=8), Assign([Name('f', Store(), lineno=427, col_offset=8)], Call(Name('reader', Load(), lineno=427, col_offset=12), [Name('s', Load(), lineno=427, col_offset=19)], [], None, None, lineno=427, col_offset=12), lineno=427, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=428, col_offset=8), 'assertEqual', Load(), lineno=428, col_offset=8), [Call(Attribute(Name('f', Load(), lineno=428, col_offset=25), 'read', Load(), lineno=428, col_offset=25), [], [], None, None, lineno=428, col_offset=25), Str(u'spamspam', lineno=428, col_offset=35)], [], None, None, lineno=428, col_offset=8), lineno=428, col_offset=8)], [], lineno=415, col_offset=4), FunctionDef('test_badbom', arguments([Name('self', Param(), lineno=430, col_offset=20)], None, None, []), [Assign([Name('s', Store(), lineno=431, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=431, col_offset=12), 'StringIO', Load(), lineno=431, col_offset=12), [Str('\xff\xff', lineno=431, col_offset=30)], [], None, None, lineno=431, col_offset=12), lineno=431, col_offset=8), Assign([Name('f', Store(), lineno=432, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=432, col_offset=12), 'getreader', Load(), lineno=432, col_offset=12), [Attribute(Name('self', Load(), lineno=432, col_offset=29), 'encoding', Load(), lineno=432, col_offset=29)], [], None, None, lineno=432, col_offset=12), [Name('s', Load(), lineno=432, col_offset=44)], [], None, None, lineno=432, col_offset=12), lineno=432, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'assertRaises', Load(), lineno=433, col_offset=8), [Name('UnicodeError', Load(), lineno=433, col_offset=26), Attribute(Name('f', Load(), lineno=433, col_offset=40), 'read', Load(), lineno=433, col_offset=40)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), Assign([Name('s', Store(), lineno=435, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=435, col_offset=12), 'StringIO', Load(), lineno=435, col_offset=12), [Str('\xff\xff\xff\xff', lineno=435, col_offset=30)], [], None, None, lineno=435, col_offset=12), lineno=435, col_offset=8), Assign([Name('f', Store(), lineno=436, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=436, col_offset=12), 'getreader', Load(), lineno=436, col_offset=12), [Attribute(Name('self', Load(), lineno=436, col_offset=29), 'encoding', Load(), lineno=436, col_offset=29)], [], None, None, lineno=436, col_offset=12), [Name('s', Load(), lineno=436, col_offset=44)], [], None, None, lineno=436, col_offset=12), lineno=436, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'assertRaises', Load(), lineno=437, col_offset=8), [Name('UnicodeError', Load(), lineno=437, col_offset=26), Attribute(Name('f', Load(), lineno=437, col_offset=40), 'read', Load(), lineno=437, col_offset=40)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8)], [], lineno=430, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=439, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=440, col_offset=8), 'check_partial', Load(), lineno=440, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=441, col_offset=12), List([Str(u'', lineno=443, col_offset=16), Str(u'', lineno=444, col_offset=16), Str(u'', lineno=445, col_offset=16), Str(u'\x00', lineno=446, col_offset=16), Str(u'\x00', lineno=447, col_offset=16), Str(u'\x00\xff', lineno=448, col_offset=16), Str(u'\x00\xff', lineno=449, col_offset=16), Str(u'\x00\xff\u0100', lineno=450, col_offset=16), Str(u'\x00\xff\u0100', lineno=451, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=452, col_offset=16)], Load(), lineno=442, col_offset=12)], [], None, None, lineno=440, col_offset=8), lineno=440, col_offset=8)], [], lineno=439, col_offset=4), FunctionDef('test_handlers', arguments([Name('self', Param(), lineno=456, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=457, col_offset=8), 'assertEqual', Load(), lineno=457, col_offset=8), [Tuple([Str(u'\ufffd', lineno=457, col_offset=26), Num(1, lineno=457, col_offset=37)], Load(), lineno=457, col_offset=26), Call(Attribute(Name('codecs', Load(), lineno=458, col_offset=25), 'utf_16_decode', Load(), lineno=458, col_offset=25), [Str('\x01', lineno=458, col_offset=46), Str('replace', lineno=458, col_offset=54), Name('True', Load(), lineno=458, col_offset=65)], [], None, None, lineno=458, col_offset=25)], [], None, None, lineno=457, col_offset=8), lineno=457, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=8), 'assertEqual', Load(), lineno=459, col_offset=8), [Tuple([Str(u'', lineno=459, col_offset=26), Num(1, lineno=459, col_offset=31)], Load(), lineno=459, col_offset=26), Call(Attribute(Name('codecs', Load(), lineno=460, col_offset=25), 'utf_16_decode', Load(), lineno=460, col_offset=25), [Str('\x01', lineno=460, col_offset=46), Str('ignore', lineno=460, col_offset=54), Name('True', Load(), lineno=460, col_offset=64)], [], None, None, lineno=460, col_offset=25)], [], None, None, lineno=459, col_offset=8), lineno=459, col_offset=8)], [], lineno=456, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=462, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=463, col_offset=8), 'assertRaises', Load(), lineno=463, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=463, col_offset=26), Attribute(Name('codecs', Load(), lineno=463, col_offset=46), 'utf_16_decode', Load(), lineno=463, col_offset=46), Str('\xff', lineno=463, col_offset=68), Str('strict', lineno=463, col_offset=76), Name('True', Load(), lineno=463, col_offset=86)], [], None, None, lineno=463, col_offset=8), lineno=463, col_offset=8)], [], lineno=462, col_offset=4), FunctionDef('test_bug691291', arguments([Name('self', Param(), lineno=465, col_offset=23)], None, None, []), [Assign([Name('s1', Store(), lineno=469, col_offset=8)], Str(u'Hello\r\nworld\r\n', lineno=469, col_offset=13), lineno=469, col_offset=8), Assign([Name('s', Store(), lineno=471, col_offset=8)], Call(Attribute(Name('s1', Load(), lineno=471, col_offset=12), 'encode', Load(), lineno=471, col_offset=12), [Attribute(Name('self', Load(), lineno=471, col_offset=22), 'encoding', Load(), lineno=471, col_offset=22)], [], None, None, lineno=471, col_offset=12), lineno=471, col_offset=8), TryFinally([With(Call(Name('open', Load(), lineno=473, col_offset=17), [Attribute(Name('test_support', Load(), lineno=473, col_offset=22), 'TESTFN', Load(), lineno=473, col_offset=22), Str('wb', lineno=473, col_offset=43)], [], None, None, lineno=473, col_offset=17), Name('fp', Store(), lineno=473, col_offset=52), [Expr(Call(Attribute(Name('fp', Load(), lineno=474, col_offset=16), 'write', Load(), lineno=474, col_offset=16), [Name('s', Load(), lineno=474, col_offset=25)], [], None, None, lineno=474, col_offset=16), lineno=474, col_offset=16)], lineno=473, col_offset=17), With(Call(Attribute(Name('codecs', Load(), lineno=475, col_offset=17), 'open', Load(), lineno=475, col_offset=17), [Attribute(Name('test_support', Load(), lineno=475, col_offset=29), 'TESTFN', Load(), lineno=475, col_offset=29), Str('U', lineno=475, col_offset=50)], [keyword('encoding', Attribute(Name('self', Load(), lineno=475, col_offset=64), 'encoding', Load(), lineno=475, col_offset=64))], None, None, lineno=475, col_offset=17), Name('reader', Store(), lineno=475, col_offset=82), [Expr(Call(Attribute(Name('self', Load(), lineno=476, col_offset=16), 'assertEqual', Load(), lineno=476, col_offset=16), [Call(Attribute(Name('reader', Load(), lineno=476, col_offset=33), 'read', Load(), lineno=476, col_offset=33), [], [], None, None, lineno=476, col_offset=33), Name('s1', Load(), lineno=476, col_offset=48)], [], None, None, lineno=476, col_offset=16), lineno=476, col_offset=16)], lineno=475, col_offset=17)], [Expr(Call(Attribute(Name('test_support', Load(), lineno=478, col_offset=12), 'unlink', Load(), lineno=478, col_offset=12), [Attribute(Name('test_support', Load(), lineno=478, col_offset=32), 'TESTFN', Load(), lineno=478, col_offset=32)], [], None, None, lineno=478, col_offset=12), lineno=478, col_offset=12)], lineno=472, col_offset=8)], [], lineno=465, col_offset=4)], [], lineno=409, col_offset=0), ClassDef('UTF16LETest', [Name('ReadTest', Load(), lineno=480, col_offset=18)], [Assign([Name('encoding', Store(), lineno=481, col_offset=4)], Str('utf-16-le', lineno=481, col_offset=15), lineno=481, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=483, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=484, col_offset=8), 'check_partial', Load(), lineno=484, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=485, col_offset=12), List([Str(u'', lineno=487, col_offset=16), Str(u'\x00', lineno=488, col_offset=16), Str(u'\x00', lineno=489, col_offset=16), Str(u'\x00\xff', lineno=490, col_offset=16), Str(u'\x00\xff', lineno=491, col_offset=16), Str(u'\x00\xff\u0100', lineno=492, col_offset=16), Str(u'\x00\xff\u0100', lineno=493, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=494, col_offset=16)], Load(), lineno=486, col_offset=12)], [], None, None, lineno=484, col_offset=8), lineno=484, col_offset=8)], [], lineno=483, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=498, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=8), 'assertRaises', Load(), lineno=499, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=499, col_offset=26), Attribute(Name('codecs', Load(), lineno=499, col_offset=46), 'utf_16_le_decode', Load(), lineno=499, col_offset=46), Str('\xff', lineno=499, col_offset=71), Str('strict', lineno=499, col_offset=79), Name('True', Load(), lineno=499, col_offset=89)], [], None, None, lineno=499, col_offset=8), lineno=499, col_offset=8)], [], lineno=498, col_offset=4)], [], lineno=480, col_offset=0), ClassDef('UTF16BETest', [Name('ReadTest', Load(), lineno=501, col_offset=18)], [Assign([Name('encoding', Store(), lineno=502, col_offset=4)], Str('utf-16-be', lineno=502, col_offset=15), lineno=502, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=504, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=8), 'check_partial', Load(), lineno=505, col_offset=8), [Str(u'\x00\xff\u0100\uffff', lineno=506, col_offset=12), List([Str(u'', lineno=508, col_offset=16), Str(u'\x00', lineno=509, col_offset=16), Str(u'\x00', lineno=510, col_offset=16), Str(u'\x00\xff', lineno=511, col_offset=16), Str(u'\x00\xff', lineno=512, col_offset=16), Str(u'\x00\xff\u0100', lineno=513, col_offset=16), Str(u'\x00\xff\u0100', lineno=514, col_offset=16), Str(u'\x00\xff\u0100\uffff', lineno=515, col_offset=16)], Load(), lineno=507, col_offset=12)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8)], [], lineno=504, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=519, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=520, col_offset=8), 'assertRaises', Load(), lineno=520, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=520, col_offset=26), Attribute(Name('codecs', Load(), lineno=520, col_offset=46), 'utf_16_be_decode', Load(), lineno=520, col_offset=46), Str('\xff', lineno=520, col_offset=71), Str('strict', lineno=520, col_offset=79), Name('True', Load(), lineno=520, col_offset=89)], [], None, None, lineno=520, col_offset=8), lineno=520, col_offset=8)], [], lineno=519, col_offset=4)], [], lineno=501, col_offset=0), ClassDef('UTF8Test', [Name('ReadTest', Load(), lineno=522, col_offset=15)], [Assign([Name('encoding', Store(), lineno=523, col_offset=4)], Str('utf-8', lineno=523, col_offset=15), lineno=523, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=525, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=526, col_offset=8), 'check_partial', Load(), lineno=526, col_offset=8), [Str(u'\x00\xff\u07ff\u0800\uffff', lineno=527, col_offset=12), List([Str(u'\x00', lineno=529, col_offset=16), Str(u'\x00', lineno=530, col_offset=16), Str(u'\x00\xff', lineno=531, col_offset=16), Str(u'\x00\xff', lineno=532, col_offset=16), Str(u'\x00\xff\u07ff', lineno=533, col_offset=16), Str(u'\x00\xff\u07ff', lineno=534, col_offset=16), Str(u'\x00\xff\u07ff', lineno=535, col_offset=16), Str(u'\x00\xff\u07ff\u0800', lineno=536, col_offset=16), Str(u'\x00\xff\u07ff\u0800', lineno=537, col_offset=16), Str(u'\x00\xff\u07ff\u0800', lineno=538, col_offset=16), Str(u'\x00\xff\u07ff\u0800\uffff', lineno=539, col_offset=16)], Load(), lineno=528, col_offset=12)], [], None, None, lineno=526, col_offset=8), lineno=526, col_offset=8)], [], lineno=525, col_offset=4)], [], lineno=522, col_offset=0), ClassDef('UTF7Test', [Name('ReadTest', Load(), lineno=543, col_offset=15)], [Assign([Name('encoding', Store(), lineno=544, col_offset=4)], Str('utf-7', lineno=544, col_offset=15), lineno=544, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=546, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=547, col_offset=8), 'check_partial', Load(), lineno=547, col_offset=8), [Str(u'a+-b', lineno=548, col_offset=12), List([Str(u'a', lineno=550, col_offset=16), Str(u'a', lineno=551, col_offset=16), Str(u'a+', lineno=552, col_offset=16), Str(u'a+-', lineno=553, col_offset=16), Str(u'a+-b', lineno=554, col_offset=16)], Load(), lineno=549, col_offset=12)], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8)], [], lineno=546, col_offset=4)], [], lineno=543, col_offset=0), ClassDef('UTF16ExTest', [Attribute(Name('unittest', Load(), lineno=558, col_offset=18), 'TestCase', Load(), lineno=558, col_offset=18)], [FunctionDef('test_errors', arguments([Name('self', Param(), lineno=560, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=561, col_offset=8), 'assertRaises', Load(), lineno=561, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=561, col_offset=26), Attribute(Name('codecs', Load(), lineno=561, col_offset=46), 'utf_16_ex_decode', Load(), lineno=561, col_offset=46), Str('\xff', lineno=561, col_offset=71), Str('strict', lineno=561, col_offset=79), Num(0, lineno=561, col_offset=89), Name('True', Load(), lineno=561, col_offset=92)], [], None, None, lineno=561, col_offset=8), lineno=561, col_offset=8)], [], lineno=560, col_offset=4), FunctionDef('test_bad_args', arguments([Name('self', Param(), lineno=563, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=564, col_offset=8), 'assertRaises', Load(), lineno=564, col_offset=8), [Name('TypeError', Load(), lineno=564, col_offset=26), Attribute(Name('codecs', Load(), lineno=564, col_offset=37), 'utf_16_ex_decode', Load(), lineno=564, col_offset=37)], [], None, None, lineno=564, col_offset=8), lineno=564, col_offset=8)], [], lineno=563, col_offset=4)], [], lineno=558, col_offset=0), ClassDef('ReadBufferTest', [Attribute(Name('unittest', Load(), lineno=566, col_offset=21), 'TestCase', Load(), lineno=566, col_offset=21)], [FunctionDef('test_array', arguments([Name('self', Param(), lineno=568, col_offset=19)], None, None, []), [Import([alias('array', None)], lineno=569, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=570, col_offset=8), 'assertEqual', Load(), lineno=570, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=571, col_offset=12), 'readbuffer_encode', Load(), lineno=571, col_offset=12), [Call(Attribute(Name('array', Load(), lineno=571, col_offset=37), 'array', Load(), lineno=571, col_offset=37), [Str('c', lineno=571, col_offset=49), Str('spam', lineno=571, col_offset=54)], [], None, None, lineno=571, col_offset=37)], [], None, None, lineno=571, col_offset=12), Tuple([Str('spam', lineno=572, col_offset=13), Num(4, lineno=572, col_offset=21)], Load(), lineno=572, col_offset=13)], [], None, None, lineno=570, col_offset=8), lineno=570, col_offset=8)], [], lineno=568, col_offset=4), FunctionDef('test_empty', arguments([Name('self', Param(), lineno=575, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=576, col_offset=8), 'assertEqual', Load(), lineno=576, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=576, col_offset=25), 'readbuffer_encode', Load(), lineno=576, col_offset=25), [Str('', lineno=576, col_offset=50)], [], None, None, lineno=576, col_offset=25), Tuple([Str('', lineno=576, col_offset=56), Num(0, lineno=576, col_offset=60)], Load(), lineno=576, col_offset=56)], [], None, None, lineno=576, col_offset=8), lineno=576, col_offset=8)], [], lineno=575, col_offset=4), FunctionDef('test_bad_args', arguments([Name('self', Param(), lineno=578, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=579, col_offset=8), 'assertRaises', Load(), lineno=579, col_offset=8), [Name('TypeError', Load(), lineno=579, col_offset=26), Attribute(Name('codecs', Load(), lineno=579, col_offset=37), 'readbuffer_encode', Load(), lineno=579, col_offset=37)], [], None, None, lineno=579, col_offset=8), lineno=579, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=580, col_offset=8), 'assertRaises', Load(), lineno=580, col_offset=8), [Name('TypeError', Load(), lineno=580, col_offset=26), Attribute(Name('codecs', Load(), lineno=580, col_offset=37), 'readbuffer_encode', Load(), lineno=580, col_offset=37), Num(42, lineno=580, col_offset=63)], [], None, None, lineno=580, col_offset=8), lineno=580, col_offset=8)], [], lineno=578, col_offset=4)], [], lineno=566, col_offset=0), ClassDef('CharBufferTest', [Attribute(Name('unittest', Load(), lineno=582, col_offset=21), 'TestCase', Load(), lineno=582, col_offset=21)], [FunctionDef('test_string', arguments([Name('self', Param(), lineno=584, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=585, col_offset=8), 'assertEqual', Load(), lineno=585, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=585, col_offset=25), 'charbuffer_encode', Load(), lineno=585, col_offset=25), [Str('spam', lineno=585, col_offset=50)], [], None, None, lineno=585, col_offset=25), Tuple([Str('spam', lineno=585, col_offset=60), Num(4, lineno=585, col_offset=68)], Load(), lineno=585, col_offset=60)], [], None, None, lineno=585, col_offset=8), lineno=585, col_offset=8)], [], lineno=584, col_offset=4), FunctionDef('test_empty', arguments([Name('self', Param(), lineno=587, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=588, col_offset=8), 'assertEqual', Load(), lineno=588, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=588, col_offset=25), 'charbuffer_encode', Load(), lineno=588, col_offset=25), [Str('', lineno=588, col_offset=50)], [], None, None, lineno=588, col_offset=25), Tuple([Str('', lineno=588, col_offset=56), Num(0, lineno=588, col_offset=60)], Load(), lineno=588, col_offset=56)], [], None, None, lineno=588, col_offset=8), lineno=588, col_offset=8)], [], lineno=587, col_offset=4), FunctionDef('test_bad_args', arguments([Name('self', Param(), lineno=590, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=591, col_offset=8), 'assertRaises', Load(), lineno=591, col_offset=8), [Name('TypeError', Load(), lineno=591, col_offset=26), Attribute(Name('codecs', Load(), lineno=591, col_offset=37), 'charbuffer_encode', Load(), lineno=591, col_offset=37)], [], None, None, lineno=591, col_offset=8), lineno=591, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=8), 'assertRaises', Load(), lineno=592, col_offset=8), [Name('TypeError', Load(), lineno=592, col_offset=26), Attribute(Name('codecs', Load(), lineno=592, col_offset=37), 'charbuffer_encode', Load(), lineno=592, col_offset=37), Num(42, lineno=592, col_offset=63)], [], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8)], [], lineno=590, col_offset=4)], [], lineno=582, col_offset=0), ClassDef('UTF8SigTest', [Name('ReadTest', Load(), lineno=594, col_offset=18)], [Assign([Name('encoding', Store(), lineno=595, col_offset=4)], Str('utf-8-sig', lineno=595, col_offset=15), lineno=595, col_offset=4), FunctionDef('test_partial', arguments([Name('self', Param(), lineno=597, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=598, col_offset=8), 'check_partial', Load(), lineno=598, col_offset=8), [Str(u'\ufeff\x00\xff\u07ff\u0800\uffff', lineno=599, col_offset=12), List([Str(u'', lineno=601, col_offset=16), Str(u'', lineno=602, col_offset=16), Str(u'', lineno=603, col_offset=16), Str(u'', lineno=604, col_offset=16), Str(u'', lineno=605, col_offset=16), Str(u'\ufeff', lineno=606, col_offset=16), Str(u'\ufeff\x00', lineno=607, col_offset=16), Str(u'\ufeff\x00', lineno=608, col_offset=16), Str(u'\ufeff\x00\xff', lineno=609, col_offset=16), Str(u'\ufeff\x00\xff', lineno=610, col_offset=16), Str(u'\ufeff\x00\xff\u07ff', lineno=611, col_offset=16), Str(u'\ufeff\x00\xff\u07ff', lineno=612, col_offset=16), Str(u'\ufeff\x00\xff\u07ff', lineno=613, col_offset=16), Str(u'\ufeff\x00\xff\u07ff\u0800', lineno=614, col_offset=16), Str(u'\ufeff\x00\xff\u07ff\u0800', lineno=615, col_offset=16), Str(u'\ufeff\x00\xff\u07ff\u0800', lineno=616, col_offset=16), Str(u'\ufeff\x00\xff\u07ff\u0800\uffff', lineno=617, col_offset=16)], Load(), lineno=600, col_offset=12)], [], None, None, lineno=598, col_offset=8), lineno=598, col_offset=8)], [], lineno=597, col_offset=4), FunctionDef('test_bug1601501', arguments([Name('self', Param(), lineno=621, col_offset=24)], None, None, []), [Expr(Call(Name('unicode', Load(), lineno=623, col_offset=8), [Str('\xef\xbb\xbf', lineno=623, col_offset=16), Str('utf-8-sig', lineno=623, col_offset=32)], [], None, None, lineno=623, col_offset=8), lineno=623, col_offset=8)], [], lineno=621, col_offset=4), FunctionDef('test_bom', arguments([Name('self', Param(), lineno=625, col_offset=17)], None, None, []), [Assign([Name('d', Store(), lineno=626, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=626, col_offset=12), 'getincrementaldecoder', Load(), lineno=626, col_offset=12), [Str('utf-8-sig', lineno=626, col_offset=41)], [], None, None, lineno=626, col_offset=12), [], [], None, None, lineno=626, col_offset=12), lineno=626, col_offset=8), Assign([Name('s', Store(), lineno=627, col_offset=8)], Str(u'spam', lineno=627, col_offset=12), lineno=627, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=628, col_offset=8), 'assertEqual', Load(), lineno=628, col_offset=8), [Call(Attribute(Name('d', Load(), lineno=628, col_offset=25), 'decode', Load(), lineno=628, col_offset=25), [Call(Attribute(Name('s', Load(), lineno=628, col_offset=34), 'encode', Load(), lineno=628, col_offset=34), [Str('utf-8-sig', lineno=628, col_offset=43)], [], None, None, lineno=628, col_offset=34)], [], None, None, lineno=628, col_offset=25), Name('s', Load(), lineno=628, col_offset=58)], [], None, None, lineno=628, col_offset=8), lineno=628, col_offset=8)], [], lineno=625, col_offset=4), FunctionDef('test_stream_bom', arguments([Name('self', Param(), lineno=630, col_offset=24)], None, None, []), [Assign([Name('unistring', Store(), lineno=631, col_offset=8)], Str(u'ABC\xa1\u2200XYZ', lineno=631, col_offset=20), lineno=631, col_offset=8), Assign([Name('bytestring', Store(), lineno=632, col_offset=8)], BinOp(Attribute(Name('codecs', Load(), lineno=632, col_offset=21), 'BOM_UTF8', Load(), lineno=632, col_offset=21), Add(), Str('ABC\xc2\xa1\xe2\x88\x80XYZ', lineno=632, col_offset=39), lineno=632, col_offset=21), lineno=632, col_offset=8), Assign([Name('reader', Store(), lineno=634, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=634, col_offset=17), 'getreader', Load(), lineno=634, col_offset=17), [Str('utf-8-sig', lineno=634, col_offset=34)], [], None, None, lineno=634, col_offset=17), lineno=634, col_offset=8), For(Name('sizehint', Store(), lineno=635, col_offset=12), BinOp(BinOp(List([Name('None', Load(), lineno=635, col_offset=25)], Load(), lineno=635, col_offset=24), Add(), Call(Name('range', Load(), lineno=635, col_offset=33), [Num(1, lineno=635, col_offset=39), Num(11, lineno=635, col_offset=42)], [], None, None, lineno=635, col_offset=33), lineno=635, col_offset=24), Add(), List([Num(64, lineno=636, col_offset=25), Num(128, lineno=636, col_offset=29), Num(256, lineno=636, col_offset=34), Num(512, lineno=636, col_offset=39), Num(1024, lineno=636, col_offset=44)], Load(), lineno=636, col_offset=24), lineno=635, col_offset=46), [Assign([Name('istream', Store(), lineno=637, col_offset=12)], Call(Name('reader', Load(), lineno=637, col_offset=22), [Call(Attribute(Name('StringIO', Load(), lineno=637, col_offset=29), 'StringIO', Load(), lineno=637, col_offset=29), [Name('bytestring', Load(), lineno=637, col_offset=47)], [], None, None, lineno=637, col_offset=29)], [], None, None, lineno=637, col_offset=22), lineno=637, col_offset=12), Assign([Name('ostream', Store(), lineno=638, col_offset=12)], Call(Attribute(Name('StringIO', Load(), lineno=638, col_offset=22), 'StringIO', Load(), lineno=638, col_offset=22), [], [], None, None, lineno=638, col_offset=22), lineno=638, col_offset=12), While(Num(1, lineno=639, col_offset=18), [If(Compare(Name('sizehint', Load(), lineno=640, col_offset=19), [IsNot()], [Name('None', Load(), lineno=640, col_offset=35)], lineno=640, col_offset=19), [Assign([Name('data', Store(), lineno=641, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=641, col_offset=27), 'read', Load(), lineno=641, col_offset=27), [Name('sizehint', Load(), lineno=641, col_offset=40)], [], None, None, lineno=641, col_offset=27), lineno=641, col_offset=20)], [Assign([Name('data', Store(), lineno=643, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=643, col_offset=27), 'read', Load(), lineno=643, col_offset=27), [], [], None, None, lineno=643, col_offset=27), lineno=643, col_offset=20)], lineno=640, col_offset=16), If(UnaryOp(Not(), Name('data', Load(), lineno=645, col_offset=23), lineno=645, col_offset=19), [Break( lineno=646, col_offset=20)], [], lineno=645, col_offset=16), Expr(Call(Attribute(Name('ostream', Load(), lineno=647, col_offset=16), 'write', Load(), lineno=647, col_offset=16), [Name('data', Load(), lineno=647, col_offset=30)], [], None, None, lineno=647, col_offset=16), lineno=647, col_offset=16)], [], lineno=639, col_offset=12), Assign([Name('got', Store(), lineno=649, col_offset=12)], Call(Attribute(Name('ostream', Load(), lineno=649, col_offset=18), 'getvalue', Load(), lineno=649, col_offset=18), [], [], None, None, lineno=649, col_offset=18), lineno=649, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=650, col_offset=12), 'assertEqual', Load(), lineno=650, col_offset=12), [Name('got', Load(), lineno=650, col_offset=29), Name('unistring', Load(), lineno=650, col_offset=34)], [], None, None, lineno=650, col_offset=12), lineno=650, col_offset=12)], [], lineno=635, col_offset=8)], [], lineno=630, col_offset=4), FunctionDef('test_stream_bare', arguments([Name('self', Param(), lineno=652, col_offset=25)], None, None, []), [Assign([Name('unistring', Store(), lineno=653, col_offset=8)], Str(u'ABC\xa1\u2200XYZ', lineno=653, col_offset=20), lineno=653, col_offset=8), Assign([Name('bytestring', Store(), lineno=654, col_offset=8)], Str('ABC\xc2\xa1\xe2\x88\x80XYZ', lineno=654, col_offset=21), lineno=654, col_offset=8), Assign([Name('reader', Store(), lineno=656, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=656, col_offset=17), 'getreader', Load(), lineno=656, col_offset=17), [Str('utf-8-sig', lineno=656, col_offset=34)], [], None, None, lineno=656, col_offset=17), lineno=656, col_offset=8), For(Name('sizehint', Store(), lineno=657, col_offset=12), BinOp(BinOp(List([Name('None', Load(), lineno=657, col_offset=25)], Load(), lineno=657, col_offset=24), Add(), Call(Name('range', Load(), lineno=657, col_offset=33), [Num(1, lineno=657, col_offset=39), Num(11, lineno=657, col_offset=42)], [], None, None, lineno=657, col_offset=33), lineno=657, col_offset=24), Add(), List([Num(64, lineno=658, col_offset=25), Num(128, lineno=658, col_offset=29), Num(256, lineno=658, col_offset=34), Num(512, lineno=658, col_offset=39), Num(1024, lineno=658, col_offset=44)], Load(), lineno=658, col_offset=24), lineno=657, col_offset=46), [Assign([Name('istream', Store(), lineno=659, col_offset=12)], Call(Name('reader', Load(), lineno=659, col_offset=22), [Call(Attribute(Name('StringIO', Load(), lineno=659, col_offset=29), 'StringIO', Load(), lineno=659, col_offset=29), [Name('bytestring', Load(), lineno=659, col_offset=47)], [], None, None, lineno=659, col_offset=29)], [], None, None, lineno=659, col_offset=22), lineno=659, col_offset=12), Assign([Name('ostream', Store(), lineno=660, col_offset=12)], Call(Attribute(Name('StringIO', Load(), lineno=660, col_offset=22), 'StringIO', Load(), lineno=660, col_offset=22), [], [], None, None, lineno=660, col_offset=22), lineno=660, col_offset=12), While(Num(1, lineno=661, col_offset=18), [If(Compare(Name('sizehint', Load(), lineno=662, col_offset=19), [IsNot()], [Name('None', Load(), lineno=662, col_offset=35)], lineno=662, col_offset=19), [Assign([Name('data', Store(), lineno=663, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=663, col_offset=27), 'read', Load(), lineno=663, col_offset=27), [Name('sizehint', Load(), lineno=663, col_offset=40)], [], None, None, lineno=663, col_offset=27), lineno=663, col_offset=20)], [Assign([Name('data', Store(), lineno=665, col_offset=20)], Call(Attribute(Name('istream', Load(), lineno=665, col_offset=27), 'read', Load(), lineno=665, col_offset=27), [], [], None, None, lineno=665, col_offset=27), lineno=665, col_offset=20)], lineno=662, col_offset=16), If(UnaryOp(Not(), Name('data', Load(), lineno=667, col_offset=23), lineno=667, col_offset=19), [Break( lineno=668, col_offset=20)], [], lineno=667, col_offset=16), Expr(Call(Attribute(Name('ostream', Load(), lineno=669, col_offset=16), 'write', Load(), lineno=669, col_offset=16), [Name('data', Load(), lineno=669, col_offset=30)], [], None, None, lineno=669, col_offset=16), lineno=669, col_offset=16)], [], lineno=661, col_offset=12), Assign([Name('got', Store(), lineno=671, col_offset=12)], Call(Attribute(Name('ostream', Load(), lineno=671, col_offset=18), 'getvalue', Load(), lineno=671, col_offset=18), [], [], None, None, lineno=671, col_offset=18), lineno=671, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=672, col_offset=12), 'assertEqual', Load(), lineno=672, col_offset=12), [Name('got', Load(), lineno=672, col_offset=29), Name('unistring', Load(), lineno=672, col_offset=34)], [], None, None, lineno=672, col_offset=12), lineno=672, col_offset=12)], [], lineno=657, col_offset=8)], [], lineno=652, col_offset=4)], [], lineno=594, col_offset=0), ClassDef('EscapeDecodeTest', [Attribute(Name('unittest', Load(), lineno=674, col_offset=23), 'TestCase', Load(), lineno=674, col_offset=23)], [FunctionDef('test_empty', arguments([Name('self', Param(), lineno=675, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=676, col_offset=8), 'assertEqual', Load(), lineno=676, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=676, col_offset=25), 'escape_decode', Load(), lineno=676, col_offset=25), [Str('', lineno=676, col_offset=46)], [], None, None, lineno=676, col_offset=25), Tuple([Str('', lineno=676, col_offset=52), Num(0, lineno=676, col_offset=56)], Load(), lineno=676, col_offset=52)], [], None, None, lineno=676, col_offset=8), lineno=676, col_offset=8)], [], lineno=675, col_offset=4)], [], lineno=674, col_offset=0), ClassDef('RecodingTest', [Attribute(Name('unittest', Load(), lineno=678, col_offset=19), 'TestCase', Load(), lineno=678, col_offset=19)], [FunctionDef('test_recoding', arguments([Name('self', Param(), lineno=679, col_offset=22)], None, None, []), [Assign([Name('f', Store(), lineno=680, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=680, col_offset=12), 'StringIO', Load(), lineno=680, col_offset=12), [], [], None, None, lineno=680, col_offset=12), lineno=680, col_offset=8), Assign([Name('f2', Store(), lineno=681, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=681, col_offset=13), 'EncodedFile', Load(), lineno=681, col_offset=13), [Name('f', Load(), lineno=681, col_offset=32), Str('unicode_internal', lineno=681, col_offset=35), Str('utf-8', lineno=681, col_offset=55)], [], None, None, lineno=681, col_offset=13), lineno=681, col_offset=8), Expr(Call(Attribute(Name('f2', Load(), lineno=682, col_offset=8), 'write', Load(), lineno=682, col_offset=8), [Str(u'a', lineno=682, col_offset=17)], [], None, None, lineno=682, col_offset=8), lineno=682, col_offset=8), Expr(Call(Attribute(Name('f2', Load(), lineno=683, col_offset=8), 'close', Load(), lineno=683, col_offset=8), [], [], None, None, lineno=683, col_offset=8), lineno=683, col_offset=8)], [], lineno=679, col_offset=4)], [], lineno=678, col_offset=0), Assign([Name('punycode_testcases', Store(), lineno=688, col_offset=0)], List([Tuple([Str(u'\u0644\u064a\u0647\u0645\u0627\u0628\u062a\u0643\u0644\u0645\u0648\u0634\u0639\u0631\u0628\u064a\u061f', lineno=690, col_offset=5), Str('egbpdaj6bu4bxfgehfvwxn', lineno=692, col_offset=5)], Load(), lineno=690, col_offset=5), Tuple([Str(u'\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8bf4\u4e2d\u6587', lineno=694, col_offset=5), Str('ihqwcrb4cv8a8dqg056pqjye', lineno=695, col_offset=5)], Load(), lineno=694, col_offset=5), Tuple([Str(u'\u4ed6\u5011\u7232\u4ec0\u9ebd\u4e0d\u8aaa\u4e2d\u6587', lineno=697, col_offset=5), Str('ihqwctvzc91f659drss3x8bo0yb', lineno=698, col_offset=5)], Load(), lineno=697, col_offset=5), Tuple([Str(u'Pro\u010dprost\u011bnemluv\xed\u010desky', lineno=700, col_offset=5), Str('Proprostnemluvesky-uyb24dma41a', lineno=703, col_offset=5)], Load(), lineno=700, col_offset=5), Tuple([Str(u'\u05dc\u05de\u05d4\u05d4\u05dd\u05e4\u05e9\u05d5\u05d8\u05dc\u05d0\u05de\u05d3\u05d1\u05e8\u05d9\u05dd\u05e2\u05d1\u05e8\u05d9\u05ea', lineno=705, col_offset=5), Str('4dbcagdahymbxekheh6e0a7fei0b', lineno=708, col_offset=5)], Load(), lineno=705, col_offset=5), Tuple([Str(u'\u092f\u0939\u0932\u094b\u0917\u0939\u093f\u0928\u094d\u0926\u0940\u0915\u094d\u092f\u094b\u0902\u0928\u0939\u0940\u0902\u092c\u094b\u0932\u0938\u0915\u0924\u0947\u0939\u0948\u0902', lineno=710, col_offset=5), Str('i1baa7eci9glrd9b2ae1bj0hfcgg6iyaf8o0a1dig0cd', lineno=714, col_offset=4)], Load(), lineno=710, col_offset=5), Tuple([Str(u'\u306a\u305c\u307f\u3093\u306a\u65e5\u672c\u8a9e\u3092\u8a71\u3057\u3066\u304f\u308c\u306a\u3044\u306e\u304b', lineno=717, col_offset=5), Str('n8jok5ay5dzabd5bym9f0cm5685rrjetr6pdxa', lineno=719, col_offset=5)], Load(), lineno=717, col_offset=5), Tuple([Str(u'\uc138\uacc4\uc758\ubaa8\ub4e0\uc0ac\ub78c\ub4e4\uc774\ud55c\uad6d\uc5b4\ub97c\uc774\ud574\ud55c\ub2e4\uba74\uc5bc\ub9c8\ub098\uc88b\uc744\uae4c', lineno=722, col_offset=5), Str('989aomsvi5e83db1d2a355cv1e0vak1dwrv93d5xbh15a0dt30a5jpsd879ccm6fea98c', lineno=725, col_offset=5)], Load(), lineno=722, col_offset=5), Tuple([Str(u'\u043f\u043e\u0447\u0435\u043c\u0443\u0436\u0435\u043e\u043d\u0438\u043d\u0435\u0433\u043e\u0432\u043e\u0440\u044f\u0442\u043f\u043e\u0440\u0443\u0441\u0441\u043a\u0438', lineno=729, col_offset=5), Str('b1abfaaepdrnnbgefbaDotcwatmq2g4l', lineno=733, col_offset=5)], Load(), lineno=729, col_offset=5), Tuple([Str(u'Porqu\xe9nopuedensimplementehablarenEspa\xf1ol', lineno=736, col_offset=5), Str('PorqunopuedensimplementehablarenEspaol-fmd56a', lineno=741, col_offset=5)], Load(), lineno=736, col_offset=5), Tuple([Str(u'T\u1ea1isaoh\u1ecdkh\xf4ngth\u1ec3ch\u1ec9n\xf3iti\u1ebfngVi\u1ec7t', lineno=746, col_offset=5), Str('TisaohkhngthchnitingVit-kjcr8268qyxafd2f1b9g', lineno=750, col_offset=5)], Load(), lineno=746, col_offset=5), Tuple([Str(u'3\u5e74B\u7d44\u91d1\u516b\u5148\u751f', lineno=753, col_offset=5), Str('3B-ww4c5e180e575a65lsy2b', lineno=754, col_offset=5)], Load(), lineno=753, col_offset=5), Tuple([Str(u'\u5b89\u5ba4\u5948\u7f8e\u6075-with-SUPER-MONKEYS', lineno=757, col_offset=5), Str('-with-SUPER-MONKEYS-pc58ag80a8qai00g7n9n', lineno=760, col_offset=5)], Load(), lineno=757, col_offset=5), Tuple([Str(u'Hello-Another-Way-\u305d\u308c\u305e\u308c\u306e\u5834\u6240', lineno=763, col_offset=5), Str('Hello-Another-Way--fc4qua05auwb3674vfr0b', lineno=766, col_offset=5)], Load(), lineno=763, col_offset=5), Tuple([Str(u'\u3072\u3068\u3064\u5c4b\u6839\u306e\u4e0b2', lineno=769, col_offset=5), Str('2-u9tlzr9756bt3uc0v', lineno=770, col_offset=5)], Load(), lineno=769, col_offset=5), Tuple([Str(u'Maji\u3067Koi\u3059\u308b5\u79d2\u524d', lineno=773, col_offset=5), Str('MajiKoi5-783gue6qz075azm5e', lineno=775, col_offset=5)], Load(), lineno=773, col_offset=5), Tuple([Str(u'\u30d1\u30d5\u30a3\u30fcde\u30eb\u30f3\u30d0', lineno=778, col_offset=5), Str('de-jg4avhby1noc0d', lineno=779, col_offset=5)], Load(), lineno=778, col_offset=5), Tuple([Str(u'\u305d\u306e\u30b9\u30d4\u30fc\u30c9\u3067', lineno=782, col_offset=5), Str('d9juau41awczczp', lineno=783, col_offset=5)], Load(), lineno=782, col_offset=5), Tuple([Str(u'-> $1.00 <-', lineno=786, col_offset=5), Str('-> $1.00 <--', lineno=788, col_offset=5)], Load(), lineno=786, col_offset=5)], Load(), lineno=688, col_offset=21), lineno=688, col_offset=0), For(Name('i', Store(), lineno=791, col_offset=4), Name('punycode_testcases', Load(), lineno=791, col_offset=9), [If(Compare(Call(Name('len', Load(), lineno=792, col_offset=7), [Name('i', Load(), lineno=792, col_offset=11)], [], None, None, lineno=792, col_offset=7), [NotEq()], [Num(2, lineno=792, col_offset=15)], lineno=792, col_offset=7), [Print(None, [Call(Name('repr', Load(), lineno=793, col_offset=14), [Name('i', Load(), lineno=793, col_offset=19)], [], None, None, lineno=793, col_offset=14)], True, lineno=793, col_offset=8)], [], lineno=792, col_offset=4)], [], lineno=791, col_offset=0), ClassDef('PunycodeTest', [Attribute(Name('unittest', Load(), lineno=795, col_offset=19), 'TestCase', Load(), lineno=795, col_offset=19)], [FunctionDef('test_encode', arguments([Name('self', Param(), lineno=796, col_offset=20)], None, None, []), [For(Tuple([Name('uni', Store(), lineno=797, col_offset=12), Name('puny', Store(), lineno=797, col_offset=17)], Store(), lineno=797, col_offset=12), Name('punycode_testcases', Load(), lineno=797, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=803, col_offset=12), 'assertEqual', Load(), lineno=803, col_offset=12), [Call(Attribute(Call(Attribute(Name('uni', Load(), lineno=803, col_offset=29), 'encode', Load(), lineno=803, col_offset=29), [Str('punycode', lineno=803, col_offset=40)], [], None, None, lineno=803, col_offset=29), 'lower', Load(), lineno=803, col_offset=29), [], [], None, None, lineno=803, col_offset=29), Call(Attribute(Name('puny', Load(), lineno=803, col_offset=61), 'lower', Load(), lineno=803, col_offset=61), [], [], None, None, lineno=803, col_offset=61)], [], None, None, lineno=803, col_offset=12), lineno=803, col_offset=12)], [], lineno=797, col_offset=8)], [], lineno=796, col_offset=4), FunctionDef('test_decode', arguments([Name('self', Param(), lineno=805, col_offset=20)], None, None, []), [For(Tuple([Name('uni', Store(), lineno=806, col_offset=12), Name('puny', Store(), lineno=806, col_offset=17)], Store(), lineno=806, col_offset=12), Name('punycode_testcases', Load(), lineno=806, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=807, col_offset=12), 'assertEqual', Load(), lineno=807, col_offset=12), [Name('uni', Load(), lineno=807, col_offset=29), Call(Attribute(Name('puny', Load(), lineno=807, col_offset=34), 'decode', Load(), lineno=807, col_offset=34), [Str('punycode', lineno=807, col_offset=46)], [], None, None, lineno=807, col_offset=34)], [], None, None, lineno=807, col_offset=12), lineno=807, col_offset=12)], [], lineno=806, col_offset=8)], [], lineno=805, col_offset=4)], [], lineno=795, col_offset=0), ClassDef('UnicodeInternalTest', [Attribute(Name('unittest', Load(), lineno=809, col_offset=26), 'TestCase', Load(), lineno=809, col_offset=26)], [FunctionDef('test_bug1251300', arguments([Name('self', Param(), lineno=810, col_offset=24)], None, None, []), [If(Compare(Attribute(Name('sys', Load(), lineno=813, col_offset=11), 'maxunicode', Load(), lineno=813, col_offset=11), [Gt()], [Num(65535, lineno=813, col_offset=28)], lineno=813, col_offset=11), [Assign([Name('ok', Store(), lineno=814, col_offset=12)], List([Tuple([Str('\x00\x10\xff\xff', lineno=815, col_offset=17), Str(u'\U0010ffff', lineno=815, col_offset=37)], Load(), lineno=815, col_offset=17), Tuple([Str('\x00\x00\x01\x01', lineno=816, col_offset=17), Str(u'\u0101', lineno=816, col_offset=37)], Load(), lineno=816, col_offset=17), Tuple([Str('', lineno=817, col_offset=17), Str(u'', lineno=817, col_offset=21)], Load(), lineno=817, col_offset=17)], Load(), lineno=814, col_offset=17), lineno=814, col_offset=12), Assign([Name('not_ok', Store(), lineno=819, col_offset=12)], List([Str('\x7f\xff\xff\xff', lineno=820, col_offset=16), Str('\x80\x00\x00\x00', lineno=821, col_offset=16), Str('\x81\x00\x00\x00', lineno=822, col_offset=16), Str('\x00', lineno=823, col_offset=16), Str('\x00\x00\x00\x00\x00', lineno=824, col_offset=16)], Load(), lineno=819, col_offset=21), lineno=819, col_offset=12), For(Tuple([Name('internal', Store(), lineno=826, col_offset=16), Name('uni', Store(), lineno=826, col_offset=26)], Store(), lineno=826, col_offset=16), Name('ok', Load(), lineno=826, col_offset=33), [If(Compare(Attribute(Name('sys', Load(), lineno=827, col_offset=19), 'byteorder', Load(), lineno=827, col_offset=19), [Eq()], [Str('little', lineno=827, col_offset=36)], lineno=827, col_offset=19), [Assign([Name('internal', Store(), lineno=828, col_offset=20)], Call(Attribute(Str('', lineno=828, col_offset=31), 'join', Load(), lineno=828, col_offset=31), [Call(Name('reversed', Load(), lineno=828, col_offset=39), [Name('internal', Load(), lineno=828, col_offset=48)], [], None, None, lineno=828, col_offset=39)], [], None, None, lineno=828, col_offset=31), lineno=828, col_offset=20)], [], lineno=827, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=829, col_offset=16), 'assertEqual', Load(), lineno=829, col_offset=16), [Name('uni', Load(), lineno=829, col_offset=33), Call(Attribute(Name('internal', Load(), lineno=829, col_offset=38), 'decode', Load(), lineno=829, col_offset=38), [Str('unicode_internal', lineno=829, col_offset=54)], [], None, None, lineno=829, col_offset=38)], [], None, None, lineno=829, col_offset=16), lineno=829, col_offset=16)], [], lineno=826, col_offset=12), For(Name('internal', Store(), lineno=830, col_offset=16), Name('not_ok', Load(), lineno=830, col_offset=28), [If(Compare(Attribute(Name('sys', Load(), lineno=831, col_offset=19), 'byteorder', Load(), lineno=831, col_offset=19), [Eq()], [Str('little', lineno=831, col_offset=36)], lineno=831, col_offset=19), [Assign([Name('internal', Store(), lineno=832, col_offset=20)], Call(Attribute(Str('', lineno=832, col_offset=31), 'join', Load(), lineno=832, col_offset=31), [Call(Name('reversed', Load(), lineno=832, col_offset=39), [Name('internal', Load(), lineno=832, col_offset=48)], [], None, None, lineno=832, col_offset=39)], [], None, None, lineno=832, col_offset=31), lineno=832, col_offset=20)], [], lineno=831, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=833, col_offset=16), 'assertRaises', Load(), lineno=833, col_offset=16), [Name('UnicodeDecodeError', Load(), lineno=833, col_offset=34), Attribute(Name('internal', Load(), lineno=833, col_offset=54), 'decode', Load(), lineno=833, col_offset=54), Str('unicode_internal', lineno=834, col_offset=20)], [], None, None, lineno=833, col_offset=16), lineno=833, col_offset=16)], [], lineno=830, col_offset=12)], [], lineno=813, col_offset=8)], [], lineno=810, col_offset=4), FunctionDef('test_decode_error_attributes', arguments([Name('self', Param(), lineno=836, col_offset=37)], None, None, []), [If(Compare(Attribute(Name('sys', Load(), lineno=837, col_offset=11), 'maxunicode', Load(), lineno=837, col_offset=11), [Gt()], [Num(65535, lineno=837, col_offset=28)], lineno=837, col_offset=11), [TryExcept([Expr(Call(Attribute(Str('\x00\x00\x00\x00\x00\x11\x11\x00', lineno=839, col_offset=16), 'decode', Load(), lineno=839, col_offset=16), [Str('unicode_internal', lineno=839, col_offset=58)], [], None, None, lineno=839, col_offset=16), lineno=839, col_offset=16)], [ExceptHandler(Name('UnicodeDecodeError', Load(), lineno=840, col_offset=19), Name('ex', Store(), lineno=840, col_offset=39), [Expr(Call(Attribute(Name('self', Load(), lineno=841, col_offset=16), 'assertEqual', Load(), lineno=841, col_offset=16), [Str('unicode_internal', lineno=841, col_offset=33), Attribute(Name('ex', Load(), lineno=841, col_offset=53), 'encoding', Load(), lineno=841, col_offset=53)], [], None, None, lineno=841, col_offset=16), lineno=841, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=842, col_offset=16), 'assertEqual', Load(), lineno=842, col_offset=16), [Str('\x00\x00\x00\x00\x00\x11\x11\x00', lineno=842, col_offset=33), Attribute(Name('ex', Load(), lineno=842, col_offset=69), 'object', Load(), lineno=842, col_offset=69)], [], None, None, lineno=842, col_offset=16), lineno=842, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=843, col_offset=16), 'assertEqual', Load(), lineno=843, col_offset=16), [Num(4, lineno=843, col_offset=33), Attribute(Name('ex', Load(), lineno=843, col_offset=36), 'start', Load(), lineno=843, col_offset=36)], [], None, None, lineno=843, col_offset=16), lineno=843, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=844, col_offset=16), 'assertEqual', Load(), lineno=844, col_offset=16), [Num(8, lineno=844, col_offset=33), Attribute(Name('ex', Load(), lineno=844, col_offset=36), 'end', Load(), lineno=844, col_offset=36)], [], None, None, lineno=844, col_offset=16), lineno=844, col_offset=16)], lineno=840, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=846, col_offset=16), 'fail', Load(), lineno=846, col_offset=16), [], [], None, None, lineno=846, col_offset=16), lineno=846, col_offset=16)], lineno=838, col_offset=12)], [], lineno=837, col_offset=8)], [], lineno=836, col_offset=4), FunctionDef('test_decode_callback', arguments([Name('self', Param(), lineno=848, col_offset=29)], None, None, []), [If(Compare(Attribute(Name('sys', Load(), lineno=849, col_offset=11), 'maxunicode', Load(), lineno=849, col_offset=11), [Gt()], [Num(65535, lineno=849, col_offset=28)], lineno=849, col_offset=11), [Expr(Call(Attribute(Name('codecs', Load(), lineno=850, col_offset=12), 'register_error', Load(), lineno=850, col_offset=12), [Str('UnicodeInternalTest', lineno=850, col_offset=34), Attribute(Name('codecs', Load(), lineno=850, col_offset=57), 'ignore_errors', Load(), lineno=850, col_offset=57)], [], None, None, lineno=850, col_offset=12), lineno=850, col_offset=12), Assign([Name('decoder', Store(), lineno=851, col_offset=12)], Call(Attribute(Name('codecs', Load(), lineno=851, col_offset=22), 'getdecoder', Load(), lineno=851, col_offset=22), [Str('unicode_internal', lineno=851, col_offset=40)], [], None, None, lineno=851, col_offset=22), lineno=851, col_offset=12), Assign([Name('ab', Store(), lineno=852, col_offset=12)], Call(Attribute(Str(u'ab', lineno=852, col_offset=17), 'encode', Load(), lineno=852, col_offset=17), [Str('unicode_internal', lineno=852, col_offset=30)], [], None, None, lineno=852, col_offset=17), lineno=852, col_offset=12), Assign([Name('ignored', Store(), lineno=853, col_offset=12)], Call(Name('decoder', Load(), lineno=853, col_offset=22), [BinOp(Str('%s""""%s', lineno=853, col_offset=30), Mod(), Tuple([Subscript(Name('ab', Load(), lineno=853, col_offset=56), Slice(None, Num(4, lineno=853, col_offset=60), None), Load(), lineno=853, col_offset=56), Subscript(Name('ab', Load(), lineno=853, col_offset=64), Slice(Num(4, lineno=853, col_offset=67), None, None), Load(), lineno=853, col_offset=64)], Load(), lineno=853, col_offset=56), lineno=853, col_offset=30), Str('UnicodeInternalTest', lineno=854, col_offset=16)], [], None, None, lineno=853, col_offset=22), lineno=853, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=855, col_offset=12), 'assertEqual', Load(), lineno=855, col_offset=12), [Tuple([Str(u'ab', lineno=855, col_offset=30), Num(12, lineno=855, col_offset=37)], Load(), lineno=855, col_offset=30), Name('ignored', Load(), lineno=855, col_offset=42)], [], None, None, lineno=855, col_offset=12), lineno=855, col_offset=12)], [], lineno=849, col_offset=8)], [], lineno=848, col_offset=4), FunctionDef('test_encode_length', arguments([Name('self', Param(), lineno=857, col_offset=27)], None, None, []), [Assign([Name('encoder', Store(), lineno=859, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=859, col_offset=18), 'getencoder', Load(), lineno=859, col_offset=18), [Str('unicode_internal', lineno=859, col_offset=36)], [], None, None, lineno=859, col_offset=18), lineno=859, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=860, col_offset=8), 'assertEqual', Load(), lineno=860, col_offset=8), [Subscript(Call(Name('encoder', Load(), lineno=860, col_offset=25), [Str(u'a', lineno=860, col_offset=33)], [], None, None, lineno=860, col_offset=25), Index(Num(1, lineno=860, col_offset=39)), Load(), lineno=860, col_offset=25), Num(1, lineno=860, col_offset=43)], [], None, None, lineno=860, col_offset=8), lineno=860, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=861, col_offset=8), 'assertEqual', Load(), lineno=861, col_offset=8), [Subscript(Call(Name('encoder', Load(), lineno=861, col_offset=25), [Str(u'\xe9\u0142', lineno=861, col_offset=33)], [], None, None, lineno=861, col_offset=25), Index(Num(1, lineno=861, col_offset=48)), Load(), lineno=861, col_offset=25), Num(2, lineno=861, col_offset=52)], [], None, None, lineno=861, col_offset=8), lineno=861, col_offset=8), Assign([Name('encoder', Store(), lineno=863, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=863, col_offset=18), 'getencoder', Load(), lineno=863, col_offset=18), [Str('string-escape', lineno=863, col_offset=36)], [], None, None, lineno=863, col_offset=18), lineno=863, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=864, col_offset=8), 'assertEqual', Load(), lineno=864, col_offset=8), [Subscript(Call(Name('encoder', Load(), lineno=864, col_offset=25), [Str('\\x00', lineno=864, col_offset=33)], [], None, None, lineno=864, col_offset=25), Index(Num(1, lineno=864, col_offset=42)), Load(), lineno=864, col_offset=25), Num(4, lineno=864, col_offset=46)], [], None, None, lineno=864, col_offset=8), lineno=864, col_offset=8)], [], lineno=857, col_offset=4)], [], lineno=809, col_offset=0), Assign([Name('nameprep_tests', Store(), lineno=867, col_offset=0)], List([Tuple([Str('foo\xc2\xad\xcd\x8f\xe1\xa0\x86\xe1\xa0\x8bbar\xe2\x80\x8b\xe2\x81\xa0baz\xef\xb8\x80\xef\xb8\x88\xef\xb8\x8f\xef\xbb\xbf', lineno=869, col_offset=5), Str('foobarbaz', lineno=872, col_offset=5)], Load(), lineno=869, col_offset=5), Tuple([Str('CAFE', lineno=874, col_offset=5), Str('cafe', lineno=875, col_offset=5)], Load(), lineno=874, col_offset=5), Tuple([Str('\xc3\x9f', lineno=878, col_offset=5), Str('ss', lineno=879, col_offset=5)], Load(), lineno=878, col_offset=5), Tuple([Str('\xc4\xb0', lineno=881, col_offset=5), Str('i\xcc\x87', lineno=882, col_offset=5)], Load(), lineno=881, col_offset=5), Tuple([Str('\xc5\x83\xcd\xba', lineno=884, col_offset=5), Str('\xc5\x84 \xce\xb9', lineno=885, col_offset=5)], Load(), lineno=884, col_offset=5), Tuple([Name('None', Load(), lineno=890, col_offset=5), Name('None', Load(), lineno=890, col_offset=11)], Load(), lineno=890, col_offset=5), Tuple([Str('j\xcc\x8c\xc2\xa0\xc2\xaa', lineno=892, col_offset=5), Str('\xc7\xb0 a', lineno=893, col_offset=5)], Load(), lineno=892, col_offset=5), Tuple([Str('\xe1\xbe\xb7', lineno=895, col_offset=5), Str('\xe1\xbe\xb6\xce\xb9', lineno=896, col_offset=5)], Load(), lineno=895, col_offset=5), Tuple([Str('\xc7\xb0', lineno=899, col_offset=5), Str('\xc7\xb0', lineno=900, col_offset=5)], Load(), lineno=899, col_offset=5), Tuple([Str('\xce\x90', lineno=902, col_offset=5), Str('\xce\x90', lineno=903, col_offset=5)], Load(), lineno=902, col_offset=5), Tuple([Str('\xce\xb0', lineno=905, col_offset=5), Str('\xce\xb0', lineno=906, col_offset=5)], Load(), lineno=905, col_offset=5), Tuple([Str('\xe1\xba\x96', lineno=908, col_offset=5), Str('\xe1\xba\x96', lineno=909, col_offset=5)], Load(), lineno=908, col_offset=5), Tuple([Str('\xe1\xbd\x96', lineno=911, col_offset=5), Str('\xe1\xbd\x96', lineno=912, col_offset=5)], Load(), lineno=911, col_offset=5), Tuple([Str(' ', lineno=914, col_offset=5), Str(' ', lineno=915, col_offset=5)], Load(), lineno=914, col_offset=5), Tuple([Str('\xc2\xa0', lineno=917, col_offset=5), Str(' ', lineno=918, col_offset=5)], Load(), lineno=917, col_offset=5), Tuple([Str('\xe1\x9a\x80', lineno=920, col_offset=5), Name('None', Load(), lineno=921, col_offset=5)], Load(), lineno=920, col_offset=5), Tuple([Str('\xe2\x80\x80', lineno=923, col_offset=5), Str(' ', lineno=924, col_offset=5)], Load(), lineno=923, col_offset=5), Tuple([Str('\xe2\x80\x8b', lineno=926, col_offset=5), Str('', lineno=927, col_offset=5)], Load(), lineno=926, col_offset=5), Tuple([Str('\xe3\x80\x80', lineno=929, col_offset=5), Str(' ', lineno=930, col_offset=5)], Load(), lineno=929, col_offset=5), Tuple([Str('\x10\x7f', lineno=932, col_offset=5), Str('\x10\x7f', lineno=933, col_offset=5)], Load(), lineno=932, col_offset=5), Tuple([Str('\xc2\x85', lineno=935, col_offset=5), Name('None', Load(), lineno=936, col_offset=5)], Load(), lineno=935, col_offset=5), Tuple([Str('\xe1\xa0\x8e', lineno=938, col_offset=5), Name('None', Load(), lineno=939, col_offset=5)], Load(), lineno=938, col_offset=5), Tuple([Str('\xef\xbb\xbf', lineno=941, col_offset=5), Str('', lineno=942, col_offset=5)], Load(), lineno=941, col_offset=5), Tuple([Str('\xf0\x9d\x85\xb5', lineno=944, col_offset=5), Name('None', Load(), lineno=945, col_offset=5)], Load(), lineno=944, col_offset=5), Tuple([Str('\xef\x84\xa3', lineno=947, col_offset=5), Name('None', Load(), lineno=948, col_offset=5)], Load(), lineno=947, col_offset=5), Tuple([Str('\xf3\xb1\x88\xb4', lineno=950, col_offset=5), Name('None', Load(), lineno=951, col_offset=5)], Load(), lineno=950, col_offset=5), Tuple([Str('\xf4\x8f\x88\xb4', lineno=953, col_offset=5), Name('None', Load(), lineno=954, col_offset=5)], Load(), lineno=953, col_offset=5), Tuple([Str('\xf2\x8f\xbf\xbe', lineno=956, col_offset=5), Name('None', Load(), lineno=957, col_offset=5)], Load(), lineno=956, col_offset=5), Tuple([Str('\xf4\x8f\xbf\xbf', lineno=959, col_offset=5), Name('None', Load(), lineno=960, col_offset=5)], Load(), lineno=959, col_offset=5), Tuple([Str('\xed\xbd\x82', lineno=962, col_offset=5), Name('None', Load(), lineno=963, col_offset=5)], Load(), lineno=962, col_offset=5), Tuple([Str('\xef\xbf\xbd', lineno=965, col_offset=5), Name('None', Load(), lineno=966, col_offset=5)], Load(), lineno=965, col_offset=5), Tuple([Str('\xe2\xbf\xb5', lineno=968, col_offset=5), Name('None', Load(), lineno=969, col_offset=5)], Load(), lineno=968, col_offset=5), Tuple([Str('\xcd\x81', lineno=971, col_offset=5), Str('\xcc\x81', lineno=972, col_offset=5)], Load(), lineno=971, col_offset=5), Tuple([Str('\xe2\x80\x8e', lineno=974, col_offset=5), Name('None', Load(), lineno=975, col_offset=5)], Load(), lineno=974, col_offset=5), Tuple([Str('\xe2\x80\xaa', lineno=977, col_offset=5), Name('None', Load(), lineno=978, col_offset=5)], Load(), lineno=977, col_offset=5), Tuple([Str('\xf3\xa0\x80\x81', lineno=980, col_offset=5), Name('None', Load(), lineno=981, col_offset=5)], Load(), lineno=980, col_offset=5), Tuple([Str('\xf3\xa0\x81\x82', lineno=983, col_offset=5), Name('None', Load(), lineno=984, col_offset=5)], Load(), lineno=983, col_offset=5), Tuple([Str('foo\xd6\xbebar', lineno=986, col_offset=5), Name('None', Load(), lineno=987, col_offset=5)], Load(), lineno=986, col_offset=5), Tuple([Str('foo\xef\xb5\x90bar', lineno=989, col_offset=5), Name('None', Load(), lineno=990, col_offset=5)], Load(), lineno=989, col_offset=5), Tuple([Str('foo\xef\xb9\xb6bar', lineno=992, col_offset=5), Str('foo \xd9\x8ebar', lineno=993, col_offset=5)], Load(), lineno=992, col_offset=5), Tuple([Str('\xd8\xa71', lineno=995, col_offset=5), Name('None', Load(), lineno=996, col_offset=5)], Load(), lineno=995, col_offset=5), Tuple([Str('\xd8\xa71\xd8\xa8', lineno=998, col_offset=5), Str('\xd8\xa71\xd8\xa8', lineno=999, col_offset=5)], Load(), lineno=998, col_offset=5), Tuple([Name('None', Load(), lineno=1004, col_offset=5), Name('None', Load(), lineno=1004, col_offset=11)], Load(), lineno=1004, col_offset=5), Tuple([Str('X\xc2\xad\xc3\x9f\xc4\xb0\xe2\x84\xa1j\xcc\x8c\xc2\xa0\xc2\xaa\xce\xb0\xe2\x80\x80', lineno=1007, col_offset=5), Str('xssi\xcc\x87tel\xc7\xb0 a\xce\xb0 ', lineno=1009, col_offset=5)], Load(), lineno=1007, col_offset=5), Tuple([Str('X\xc3\x9f\xe3\x8c\x96\xc4\xb0\xe2\x84\xa1\xe2\x92\x9f\xe3\x8c\x80', lineno=1012, col_offset=5), Str('xss\xe3\x82\xad\xe3\x83\xad\xe3\x83\xa1\xe3\x83\xbc\xe3\x83\x88\xe3\x83\xabi\xcc\x87tel(d)\xe3\x82\xa2\xe3\x83\x91\xe3\x83\xbc\xe3\x83\x88', lineno=1014, col_offset=5)], Load(), lineno=1012, col_offset=5)], Load(), lineno=867, col_offset=17), lineno=867, col_offset=0), ClassDef('NameprepTest', [Attribute(Name('unittest', Load(), lineno=1020, col_offset=19), 'TestCase', Load(), lineno=1020, col_offset=19)], [FunctionDef('test_nameprep', arguments([Name('self', Param(), lineno=1021, col_offset=22)], None, None, []), [ImportFrom('encodings.idna', [alias('nameprep', None)], 0, lineno=1022, col_offset=8), For(Tuple([Name('pos', Store(), lineno=1023, col_offset=12), Tuple([Name('orig', Store(), lineno=1023, col_offset=18), Name('prepped', Store(), lineno=1023, col_offset=24)], Store(), lineno=1023, col_offset=18)], Store(), lineno=1023, col_offset=12), Call(Name('enumerate', Load(), lineno=1023, col_offset=36), [Name('nameprep_tests', Load(), lineno=1023, col_offset=46)], [], None, None, lineno=1023, col_offset=36), [If(Compare(Name('orig', Load(), lineno=1024, col_offset=15), [Is()], [Name('None', Load(), lineno=1024, col_offset=23)], lineno=1024, col_offset=15), [Continue( lineno=1026, col_offset=16)], [], lineno=1024, col_offset=12), Assign([Name('orig', Store(), lineno=1028, col_offset=12)], Call(Name('unicode', Load(), lineno=1028, col_offset=19), [Name('orig', Load(), lineno=1028, col_offset=27), Str('utf-8', lineno=1028, col_offset=33)], [], None, None, lineno=1028, col_offset=19), lineno=1028, col_offset=12), If(Compare(Name('prepped', Load(), lineno=1029, col_offset=15), [Is()], [Name('None', Load(), lineno=1029, col_offset=26)], lineno=1029, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1031, col_offset=16), 'assertRaises', Load(), lineno=1031, col_offset=16), [Name('UnicodeError', Load(), lineno=1031, col_offset=34), Name('nameprep', Load(), lineno=1031, col_offset=48), Name('orig', Load(), lineno=1031, col_offset=58)], [], None, None, lineno=1031, col_offset=16), lineno=1031, col_offset=16)], [Assign([Name('prepped', Store(), lineno=1033, col_offset=16)], Call(Name('unicode', Load(), lineno=1033, col_offset=26), [Name('prepped', Load(), lineno=1033, col_offset=34), Str('utf-8', lineno=1033, col_offset=43)], [], None, None, lineno=1033, col_offset=26), lineno=1033, col_offset=16), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=1035, col_offset=20), 'assertEqual', Load(), lineno=1035, col_offset=20), [Call(Name('nameprep', Load(), lineno=1035, col_offset=37), [Name('orig', Load(), lineno=1035, col_offset=46)], [], None, None, lineno=1035, col_offset=37), Name('prepped', Load(), lineno=1035, col_offset=53)], [], None, None, lineno=1035, col_offset=20), lineno=1035, col_offset=20)], [ExceptHandler(Name('Exception', Load(), lineno=1036, col_offset=23), Name('e', Store(), lineno=1036, col_offset=33), [Raise(Call(Attribute(Name('test_support', Load(), lineno=1037, col_offset=26), 'TestFailed', Load(), lineno=1037, col_offset=26), [BinOp(Str('Test 3.%d: %s', lineno=1037, col_offset=50), Mod(), Tuple([BinOp(Name('pos', Load(), lineno=1037, col_offset=69), Add(), Num(1, lineno=1037, col_offset=73), lineno=1037, col_offset=69), Call(Name('str', Load(), lineno=1037, col_offset=76), [Name('e', Load(), lineno=1037, col_offset=80)], [], None, None, lineno=1037, col_offset=76)], Load(), lineno=1037, col_offset=69), lineno=1037, col_offset=50)], [], None, None, lineno=1037, col_offset=26), None, None, lineno=1037, col_offset=20)], lineno=1036, col_offset=16)], [], lineno=1034, col_offset=16)], lineno=1029, col_offset=12)], [], lineno=1023, col_offset=8)], [], lineno=1021, col_offset=4)], [], lineno=1020, col_offset=0), ClassDef('IDNACodecTest', [Attribute(Name('unittest', Load(), lineno=1039, col_offset=20), 'TestCase', Load(), lineno=1039, col_offset=20)], [FunctionDef('test_builtin_decode', arguments([Name('self', Param(), lineno=1040, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1041, col_offset=8), 'assertEqual', Load(), lineno=1041, col_offset=8), [Call(Name('unicode', Load(), lineno=1041, col_offset=25), [Str('python.org', lineno=1041, col_offset=33), Str('idna', lineno=1041, col_offset=47)], [], None, None, lineno=1041, col_offset=25), Str(u'python.org', lineno=1041, col_offset=56)], [], None, None, lineno=1041, col_offset=8), lineno=1041, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1042, col_offset=8), 'assertEqual', Load(), lineno=1042, col_offset=8), [Call(Name('unicode', Load(), lineno=1042, col_offset=25), [Str('python.org.', lineno=1042, col_offset=33), Str('idna', lineno=1042, col_offset=48)], [], None, None, lineno=1042, col_offset=25), Str(u'python.org.', lineno=1042, col_offset=57)], [], None, None, lineno=1042, col_offset=8), lineno=1042, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1043, col_offset=8), 'assertEqual', Load(), lineno=1043, col_offset=8), [Call(Name('unicode', Load(), lineno=1043, col_offset=25), [Str('xn--pythn-mua.org', lineno=1043, col_offset=33), Str('idna', lineno=1043, col_offset=54)], [], None, None, lineno=1043, col_offset=25), Str(u'pyth\xf6n.org', lineno=1043, col_offset=63)], [], None, None, lineno=1043, col_offset=8), lineno=1043, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1044, col_offset=8), 'assertEqual', Load(), lineno=1044, col_offset=8), [Call(Name('unicode', Load(), lineno=1044, col_offset=25), [Str('xn--pythn-mua.org.', lineno=1044, col_offset=33), Str('idna', lineno=1044, col_offset=55)], [], None, None, lineno=1044, col_offset=25), Str(u'pyth\xf6n.org.', lineno=1044, col_offset=64)], [], None, None, lineno=1044, col_offset=8), lineno=1044, col_offset=8)], [], lineno=1040, col_offset=4), FunctionDef('test_builtin_encode', arguments([Name('self', Param(), lineno=1046, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1047, col_offset=8), 'assertEqual', Load(), lineno=1047, col_offset=8), [Call(Attribute(Str(u'python.org', lineno=1047, col_offset=25), 'encode', Load(), lineno=1047, col_offset=25), [Str('idna', lineno=1047, col_offset=46)], [], None, None, lineno=1047, col_offset=25), Str('python.org', lineno=1047, col_offset=55)], [], None, None, lineno=1047, col_offset=8), lineno=1047, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1048, col_offset=8), 'assertEqual', Load(), lineno=1048, col_offset=8), [Call(Attribute(Str('python.org.', lineno=1048, col_offset=25), 'encode', Load(), lineno=1048, col_offset=25), [Str('idna', lineno=1048, col_offset=46)], [], None, None, lineno=1048, col_offset=25), Str('python.org.', lineno=1048, col_offset=55)], [], None, None, lineno=1048, col_offset=8), lineno=1048, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1049, col_offset=8), 'assertEqual', Load(), lineno=1049, col_offset=8), [Call(Attribute(Str(u'pyth\xf6n.org', lineno=1049, col_offset=25), 'encode', Load(), lineno=1049, col_offset=25), [Str('idna', lineno=1049, col_offset=49)], [], None, None, lineno=1049, col_offset=25), Str('xn--pythn-mua.org', lineno=1049, col_offset=58)], [], None, None, lineno=1049, col_offset=8), lineno=1049, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1050, col_offset=8), 'assertEqual', Load(), lineno=1050, col_offset=8), [Call(Attribute(Str(u'pyth\xf6n.org.', lineno=1050, col_offset=25), 'encode', Load(), lineno=1050, col_offset=25), [Str('idna', lineno=1050, col_offset=50)], [], None, None, lineno=1050, col_offset=25), Str('xn--pythn-mua.org.', lineno=1050, col_offset=59)], [], None, None, lineno=1050, col_offset=8), lineno=1050, col_offset=8)], [], lineno=1046, col_offset=4), FunctionDef('test_stream', arguments([Name('self', Param(), lineno=1052, col_offset=20)], None, None, []), [Import([alias('StringIO', None)], lineno=1053, col_offset=8), Assign([Name('r', Store(), lineno=1054, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=1054, col_offset=12), 'getreader', Load(), lineno=1054, col_offset=12), [Str('idna', lineno=1054, col_offset=29)], [], None, None, lineno=1054, col_offset=12), [Call(Attribute(Name('StringIO', Load(), lineno=1054, col_offset=37), 'StringIO', Load(), lineno=1054, col_offset=37), [Str('abc', lineno=1054, col_offset=55)], [], None, None, lineno=1054, col_offset=37)], [], None, None, lineno=1054, col_offset=12), lineno=1054, col_offset=8), Expr(Call(Attribute(Name('r', Load(), lineno=1055, col_offset=8), 'read', Load(), lineno=1055, col_offset=8), [Num(3, lineno=1055, col_offset=15)], [], None, None, lineno=1055, col_offset=8), lineno=1055, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1056, col_offset=8), 'assertEqual', Load(), lineno=1056, col_offset=8), [Call(Attribute(Name('r', Load(), lineno=1056, col_offset=25), 'read', Load(), lineno=1056, col_offset=25), [], [], None, None, lineno=1056, col_offset=25), Str(u'', lineno=1056, col_offset=35)], [], None, None, lineno=1056, col_offset=8), lineno=1056, col_offset=8)], [], lineno=1052, col_offset=4), FunctionDef('test_incremental_decode', arguments([Name('self', Param(), lineno=1058, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1059, col_offset=8), 'assertEqual', Load(), lineno=1059, col_offset=8), [Call(Attribute(Str('', lineno=1060, col_offset=12), 'join', Load(), lineno=1060, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1060, col_offset=20), 'iterdecode', Load(), lineno=1060, col_offset=20), [Str('python.org', lineno=1060, col_offset=38), Str('idna', lineno=1060, col_offset=52)], [], None, None, lineno=1060, col_offset=20)], [], None, None, lineno=1060, col_offset=12), Str(u'python.org', lineno=1061, col_offset=12)], [], None, None, lineno=1059, col_offset=8), lineno=1059, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1063, col_offset=8), 'assertEqual', Load(), lineno=1063, col_offset=8), [Call(Attribute(Str('', lineno=1064, col_offset=12), 'join', Load(), lineno=1064, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1064, col_offset=20), 'iterdecode', Load(), lineno=1064, col_offset=20), [Str('python.org.', lineno=1064, col_offset=38), Str('idna', lineno=1064, col_offset=53)], [], None, None, lineno=1064, col_offset=20)], [], None, None, lineno=1064, col_offset=12), Str(u'python.org.', lineno=1065, col_offset=12)], [], None, None, lineno=1063, col_offset=8), lineno=1063, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1067, col_offset=8), 'assertEqual', Load(), lineno=1067, col_offset=8), [Call(Attribute(Str('', lineno=1068, col_offset=12), 'join', Load(), lineno=1068, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1068, col_offset=20), 'iterdecode', Load(), lineno=1068, col_offset=20), [Str('xn--pythn-mua.org.', lineno=1068, col_offset=38), Str('idna', lineno=1068, col_offset=60)], [], None, None, lineno=1068, col_offset=20)], [], None, None, lineno=1068, col_offset=12), Str(u'pyth\xf6n.org.', lineno=1069, col_offset=12)], [], None, None, lineno=1067, col_offset=8), lineno=1067, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1071, col_offset=8), 'assertEqual', Load(), lineno=1071, col_offset=8), [Call(Attribute(Str('', lineno=1072, col_offset=12), 'join', Load(), lineno=1072, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1072, col_offset=20), 'iterdecode', Load(), lineno=1072, col_offset=20), [Str('xn--pythn-mua.org.', lineno=1072, col_offset=38), Str('idna', lineno=1072, col_offset=60)], [], None, None, lineno=1072, col_offset=20)], [], None, None, lineno=1072, col_offset=12), Str(u'pyth\xf6n.org.', lineno=1073, col_offset=12)], [], None, None, lineno=1071, col_offset=8), lineno=1071, col_offset=8), Assign([Name('decoder', Store(), lineno=1076, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=1076, col_offset=18), 'getincrementaldecoder', Load(), lineno=1076, col_offset=18), [Str('idna', lineno=1076, col_offset=47)], [], None, None, lineno=1076, col_offset=18), [], [], None, None, lineno=1076, col_offset=18), lineno=1076, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1077, col_offset=8), 'assertEqual', Load(), lineno=1077, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1077, col_offset=25), 'decode', Load(), lineno=1077, col_offset=25), [Str('xn--xam', lineno=1077, col_offset=40)], [], None, None, lineno=1077, col_offset=25), Str(u'', lineno=1077, col_offset=54)], [], None, None, lineno=1077, col_offset=8), lineno=1077, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1078, col_offset=8), 'assertEqual', Load(), lineno=1078, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1078, col_offset=25), 'decode', Load(), lineno=1078, col_offset=25), [Str('ple-9ta.o', lineno=1078, col_offset=40)], [], None, None, lineno=1078, col_offset=25), Str(u'\xe4xample.', lineno=1078, col_offset=56)], [], None, None, lineno=1078, col_offset=8), lineno=1078, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1079, col_offset=8), 'assertEqual', Load(), lineno=1079, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1079, col_offset=25), 'decode', Load(), lineno=1079, col_offset=25), [Str(u'rg', lineno=1079, col_offset=40)], [], None, None, lineno=1079, col_offset=25), Str(u'', lineno=1079, col_offset=48)], [], None, None, lineno=1079, col_offset=8), lineno=1079, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1080, col_offset=8), 'assertEqual', Load(), lineno=1080, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1080, col_offset=25), 'decode', Load(), lineno=1080, col_offset=25), [Str(u'', lineno=1080, col_offset=40), Name('True', Load(), lineno=1080, col_offset=45)], [], None, None, lineno=1080, col_offset=25), Str(u'org', lineno=1080, col_offset=52)], [], None, None, lineno=1080, col_offset=8), lineno=1080, col_offset=8), Expr(Call(Attribute(Name('decoder', Load(), lineno=1082, col_offset=8), 'reset', Load(), lineno=1082, col_offset=8), [], [], None, None, lineno=1082, col_offset=8), lineno=1082, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1083, col_offset=8), 'assertEqual', Load(), lineno=1083, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1083, col_offset=25), 'decode', Load(), lineno=1083, col_offset=25), [Str('xn--xam', lineno=1083, col_offset=40)], [], None, None, lineno=1083, col_offset=25), Str(u'', lineno=1083, col_offset=54)], [], None, None, lineno=1083, col_offset=8), lineno=1083, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1084, col_offset=8), 'assertEqual', Load(), lineno=1084, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1084, col_offset=25), 'decode', Load(), lineno=1084, col_offset=25), [Str('ple-9ta.o', lineno=1084, col_offset=40)], [], None, None, lineno=1084, col_offset=25), Str(u'\xe4xample.', lineno=1084, col_offset=56)], [], None, None, lineno=1084, col_offset=8), lineno=1084, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1085, col_offset=8), 'assertEqual', Load(), lineno=1085, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1085, col_offset=25), 'decode', Load(), lineno=1085, col_offset=25), [Str('rg.', lineno=1085, col_offset=40)], [], None, None, lineno=1085, col_offset=25), Str(u'org.', lineno=1085, col_offset=48)], [], None, None, lineno=1085, col_offset=8), lineno=1085, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1086, col_offset=8), 'assertEqual', Load(), lineno=1086, col_offset=8), [Call(Attribute(Name('decoder', Load(), lineno=1086, col_offset=25), 'decode', Load(), lineno=1086, col_offset=25), [Str('', lineno=1086, col_offset=40), Name('True', Load(), lineno=1086, col_offset=44)], [], None, None, lineno=1086, col_offset=25), Str(u'', lineno=1086, col_offset=51)], [], None, None, lineno=1086, col_offset=8), lineno=1086, col_offset=8)], [], lineno=1058, col_offset=4), FunctionDef('test_incremental_encode', arguments([Name('self', Param(), lineno=1088, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1089, col_offset=8), 'assertEqual', Load(), lineno=1089, col_offset=8), [Call(Attribute(Str('', lineno=1090, col_offset=12), 'join', Load(), lineno=1090, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1090, col_offset=20), 'iterencode', Load(), lineno=1090, col_offset=20), [Str(u'python.org', lineno=1090, col_offset=38), Str('idna', lineno=1090, col_offset=53)], [], None, None, lineno=1090, col_offset=20)], [], None, None, lineno=1090, col_offset=12), Str('python.org', lineno=1091, col_offset=12)], [], None, None, lineno=1089, col_offset=8), lineno=1089, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1093, col_offset=8), 'assertEqual', Load(), lineno=1093, col_offset=8), [Call(Attribute(Str('', lineno=1094, col_offset=12), 'join', Load(), lineno=1094, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1094, col_offset=20), 'iterencode', Load(), lineno=1094, col_offset=20), [Str(u'python.org.', lineno=1094, col_offset=38), Str('idna', lineno=1094, col_offset=54)], [], None, None, lineno=1094, col_offset=20)], [], None, None, lineno=1094, col_offset=12), Str('python.org.', lineno=1095, col_offset=12)], [], None, None, lineno=1093, col_offset=8), lineno=1093, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1097, col_offset=8), 'assertEqual', Load(), lineno=1097, col_offset=8), [Call(Attribute(Str('', lineno=1098, col_offset=12), 'join', Load(), lineno=1098, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1098, col_offset=20), 'iterencode', Load(), lineno=1098, col_offset=20), [Str(u'pyth\xf6n.org.', lineno=1098, col_offset=38), Str('idna', lineno=1098, col_offset=57)], [], None, None, lineno=1098, col_offset=20)], [], None, None, lineno=1098, col_offset=12), Str('xn--pythn-mua.org.', lineno=1099, col_offset=12)], [], None, None, lineno=1097, col_offset=8), lineno=1097, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1101, col_offset=8), 'assertEqual', Load(), lineno=1101, col_offset=8), [Call(Attribute(Str('', lineno=1102, col_offset=12), 'join', Load(), lineno=1102, col_offset=12), [Call(Attribute(Name('codecs', Load(), lineno=1102, col_offset=20), 'iterencode', Load(), lineno=1102, col_offset=20), [Str(u'pyth\xf6n.org.', lineno=1102, col_offset=38), Str('idna', lineno=1102, col_offset=57)], [], None, None, lineno=1102, col_offset=20)], [], None, None, lineno=1102, col_offset=12), Str('xn--pythn-mua.org.', lineno=1103, col_offset=12)], [], None, None, lineno=1101, col_offset=8), lineno=1101, col_offset=8), Assign([Name('encoder', Store(), lineno=1106, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=1106, col_offset=18), 'getincrementalencoder', Load(), lineno=1106, col_offset=18), [Str('idna', lineno=1106, col_offset=47)], [], None, None, lineno=1106, col_offset=18), [], [], None, None, lineno=1106, col_offset=18), lineno=1106, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1107, col_offset=8), 'assertEqual', Load(), lineno=1107, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1107, col_offset=25), 'encode', Load(), lineno=1107, col_offset=25), [Str(u'\xe4x', lineno=1107, col_offset=40)], [], None, None, lineno=1107, col_offset=25), Str('', lineno=1107, col_offset=51)], [], None, None, lineno=1107, col_offset=8), lineno=1107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1108, col_offset=8), 'assertEqual', Load(), lineno=1108, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1108, col_offset=25), 'encode', Load(), lineno=1108, col_offset=25), [Str(u'ample.org', lineno=1108, col_offset=40)], [], None, None, lineno=1108, col_offset=25), Str('xn--xample-9ta.', lineno=1108, col_offset=55)], [], None, None, lineno=1108, col_offset=8), lineno=1108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1109, col_offset=8), 'assertEqual', Load(), lineno=1109, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1109, col_offset=25), 'encode', Load(), lineno=1109, col_offset=25), [Str(u'', lineno=1109, col_offset=40), Name('True', Load(), lineno=1109, col_offset=45)], [], None, None, lineno=1109, col_offset=25), Str('org', lineno=1109, col_offset=52)], [], None, None, lineno=1109, col_offset=8), lineno=1109, col_offset=8), Expr(Call(Attribute(Name('encoder', Load(), lineno=1111, col_offset=8), 'reset', Load(), lineno=1111, col_offset=8), [], [], None, None, lineno=1111, col_offset=8), lineno=1111, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1112, col_offset=8), 'assertEqual', Load(), lineno=1112, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1112, col_offset=25), 'encode', Load(), lineno=1112, col_offset=25), [Str(u'\xe4x', lineno=1112, col_offset=40)], [], None, None, lineno=1112, col_offset=25), Str('', lineno=1112, col_offset=51)], [], None, None, lineno=1112, col_offset=8), lineno=1112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1113, col_offset=8), 'assertEqual', Load(), lineno=1113, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1113, col_offset=25), 'encode', Load(), lineno=1113, col_offset=25), [Str(u'ample.org.', lineno=1113, col_offset=40)], [], None, None, lineno=1113, col_offset=25), Str('xn--xample-9ta.org.', lineno=1113, col_offset=56)], [], None, None, lineno=1113, col_offset=8), lineno=1113, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1114, col_offset=8), 'assertEqual', Load(), lineno=1114, col_offset=8), [Call(Attribute(Name('encoder', Load(), lineno=1114, col_offset=25), 'encode', Load(), lineno=1114, col_offset=25), [Str(u'', lineno=1114, col_offset=40), Name('True', Load(), lineno=1114, col_offset=45)], [], None, None, lineno=1114, col_offset=25), Str('', lineno=1114, col_offset=52)], [], None, None, lineno=1114, col_offset=8), lineno=1114, col_offset=8)], [], lineno=1088, col_offset=4)], [], lineno=1039, col_offset=0), ClassDef('CodecsModuleTest', [Attribute(Name('unittest', Load(), lineno=1116, col_offset=23), 'TestCase', Load(), lineno=1116, col_offset=23)], [FunctionDef('test_decode', arguments([Name('self', Param(), lineno=1118, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1119, col_offset=8), 'assertEqual', Load(), lineno=1119, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1119, col_offset=25), 'decode', Load(), lineno=1119, col_offset=25), [Str('\xe4\xf6\xfc', lineno=1119, col_offset=39), Str('latin-1', lineno=1119, col_offset=55)], [], None, None, lineno=1119, col_offset=25), Str(u'\xe4\xf6\xfc', lineno=1120, col_offset=26)], [], None, None, lineno=1119, col_offset=8), lineno=1119, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1121, col_offset=8), 'assertRaises', Load(), lineno=1121, col_offset=8), [Name('TypeError', Load(), lineno=1121, col_offset=26), Attribute(Name('codecs', Load(), lineno=1121, col_offset=37), 'decode', Load(), lineno=1121, col_offset=37)], [], None, None, lineno=1121, col_offset=8), lineno=1121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1122, col_offset=8), 'assertEqual', Load(), lineno=1122, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1122, col_offset=25), 'decode', Load(), lineno=1122, col_offset=25), [Str('abc', lineno=1122, col_offset=39)], [], None, None, lineno=1122, col_offset=25), Str(u'abc', lineno=1122, col_offset=47)], [], None, None, lineno=1122, col_offset=8), lineno=1122, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1123, col_offset=8), 'assertRaises', Load(), lineno=1123, col_offset=8), [Name('UnicodeDecodeError', Load(), lineno=1123, col_offset=26), Attribute(Name('codecs', Load(), lineno=1123, col_offset=46), 'decode', Load(), lineno=1123, col_offset=46), Str('\xff', lineno=1123, col_offset=61), Str('ascii', lineno=1123, col_offset=69)], [], None, None, lineno=1123, col_offset=8), lineno=1123, col_offset=8)], [], lineno=1118, col_offset=4), FunctionDef('test_encode', arguments([Name('self', Param(), lineno=1125, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1126, col_offset=8), 'assertEqual', Load(), lineno=1126, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1126, col_offset=25), 'encode', Load(), lineno=1126, col_offset=25), [Str(u'\xe4\xf6\xfc', lineno=1126, col_offset=39), Str('latin-1', lineno=1126, col_offset=56)], [], None, None, lineno=1126, col_offset=25), Str('\xe4\xf6\xfc', lineno=1127, col_offset=26)], [], None, None, lineno=1126, col_offset=8), lineno=1126, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1128, col_offset=8), 'assertRaises', Load(), lineno=1128, col_offset=8), [Name('TypeError', Load(), lineno=1128, col_offset=26), Attribute(Name('codecs', Load(), lineno=1128, col_offset=37), 'encode', Load(), lineno=1128, col_offset=37)], [], None, None, lineno=1128, col_offset=8), lineno=1128, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1129, col_offset=8), 'assertRaises', Load(), lineno=1129, col_offset=8), [Name('LookupError', Load(), lineno=1129, col_offset=26), Attribute(Name('codecs', Load(), lineno=1129, col_offset=39), 'encode', Load(), lineno=1129, col_offset=39), Str('foo', lineno=1129, col_offset=54), Str('__spam__', lineno=1129, col_offset=61)], [], None, None, lineno=1129, col_offset=8), lineno=1129, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1130, col_offset=8), 'assertEqual', Load(), lineno=1130, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1130, col_offset=25), 'encode', Load(), lineno=1130, col_offset=25), [Str(u'abc', lineno=1130, col_offset=39)], [], None, None, lineno=1130, col_offset=25), Str('abc', lineno=1130, col_offset=48)], [], None, None, lineno=1130, col_offset=8), lineno=1130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1131, col_offset=8), 'assertRaises', Load(), lineno=1131, col_offset=8), [Name('UnicodeEncodeError', Load(), lineno=1131, col_offset=26), Attribute(Name('codecs', Load(), lineno=1131, col_offset=46), 'encode', Load(), lineno=1131, col_offset=46), Str(u'\xffff', lineno=1131, col_offset=61), Str('ascii', lineno=1131, col_offset=72)], [], None, None, lineno=1131, col_offset=8), lineno=1131, col_offset=8)], [], lineno=1125, col_offset=4), FunctionDef('test_register', arguments([Name('self', Param(), lineno=1133, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1134, col_offset=8), 'assertRaises', Load(), lineno=1134, col_offset=8), [Name('TypeError', Load(), lineno=1134, col_offset=26), Attribute(Name('codecs', Load(), lineno=1134, col_offset=37), 'register', Load(), lineno=1134, col_offset=37)], [], None, None, lineno=1134, col_offset=8), lineno=1134, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1135, col_offset=8), 'assertRaises', Load(), lineno=1135, col_offset=8), [Name('TypeError', Load(), lineno=1135, col_offset=26), Attribute(Name('codecs', Load(), lineno=1135, col_offset=37), 'register', Load(), lineno=1135, col_offset=37), Num(42, lineno=1135, col_offset=54)], [], None, None, lineno=1135, col_offset=8), lineno=1135, col_offset=8)], [], lineno=1133, col_offset=4), FunctionDef('test_lookup', arguments([Name('self', Param(), lineno=1137, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1138, col_offset=8), 'assertRaises', Load(), lineno=1138, col_offset=8), [Name('TypeError', Load(), lineno=1138, col_offset=26), Attribute(Name('codecs', Load(), lineno=1138, col_offset=37), 'lookup', Load(), lineno=1138, col_offset=37)], [], None, None, lineno=1138, col_offset=8), lineno=1138, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1139, col_offset=8), 'assertRaises', Load(), lineno=1139, col_offset=8), [Name('LookupError', Load(), lineno=1139, col_offset=26), Attribute(Name('codecs', Load(), lineno=1139, col_offset=39), 'lookup', Load(), lineno=1139, col_offset=39), Str('__spam__', lineno=1139, col_offset=54)], [], None, None, lineno=1139, col_offset=8), lineno=1139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1140, col_offset=8), 'assertRaises', Load(), lineno=1140, col_offset=8), [Name('LookupError', Load(), lineno=1140, col_offset=26), Attribute(Name('codecs', Load(), lineno=1140, col_offset=39), 'lookup', Load(), lineno=1140, col_offset=39), Str(' ', lineno=1140, col_offset=54)], [], None, None, lineno=1140, col_offset=8), lineno=1140, col_offset=8)], [], lineno=1137, col_offset=4), FunctionDef('test_getencoder', arguments([Name('self', Param(), lineno=1142, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1143, col_offset=8), 'assertRaises', Load(), lineno=1143, col_offset=8), [Name('TypeError', Load(), lineno=1143, col_offset=26), Attribute(Name('codecs', Load(), lineno=1143, col_offset=37), 'getencoder', Load(), lineno=1143, col_offset=37)], [], None, None, lineno=1143, col_offset=8), lineno=1143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1144, col_offset=8), 'assertRaises', Load(), lineno=1144, col_offset=8), [Name('LookupError', Load(), lineno=1144, col_offset=26), Attribute(Name('codecs', Load(), lineno=1144, col_offset=39), 'getencoder', Load(), lineno=1144, col_offset=39), Str('__spam__', lineno=1144, col_offset=58)], [], None, None, lineno=1144, col_offset=8), lineno=1144, col_offset=8)], [], lineno=1142, col_offset=4), FunctionDef('test_getdecoder', arguments([Name('self', Param(), lineno=1146, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1147, col_offset=8), 'assertRaises', Load(), lineno=1147, col_offset=8), [Name('TypeError', Load(), lineno=1147, col_offset=26), Attribute(Name('codecs', Load(), lineno=1147, col_offset=37), 'getdecoder', Load(), lineno=1147, col_offset=37)], [], None, None, lineno=1147, col_offset=8), lineno=1147, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1148, col_offset=8), 'assertRaises', Load(), lineno=1148, col_offset=8), [Name('LookupError', Load(), lineno=1148, col_offset=26), Attribute(Name('codecs', Load(), lineno=1148, col_offset=39), 'getdecoder', Load(), lineno=1148, col_offset=39), Str('__spam__', lineno=1148, col_offset=58)], [], None, None, lineno=1148, col_offset=8), lineno=1148, col_offset=8)], [], lineno=1146, col_offset=4), FunctionDef('test_getreader', arguments([Name('self', Param(), lineno=1150, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1151, col_offset=8), 'assertRaises', Load(), lineno=1151, col_offset=8), [Name('TypeError', Load(), lineno=1151, col_offset=26), Attribute(Name('codecs', Load(), lineno=1151, col_offset=37), 'getreader', Load(), lineno=1151, col_offset=37)], [], None, None, lineno=1151, col_offset=8), lineno=1151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1152, col_offset=8), 'assertRaises', Load(), lineno=1152, col_offset=8), [Name('LookupError', Load(), lineno=1152, col_offset=26), Attribute(Name('codecs', Load(), lineno=1152, col_offset=39), 'getreader', Load(), lineno=1152, col_offset=39), Str('__spam__', lineno=1152, col_offset=57)], [], None, None, lineno=1152, col_offset=8), lineno=1152, col_offset=8)], [], lineno=1150, col_offset=4), FunctionDef('test_getwriter', arguments([Name('self', Param(), lineno=1154, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1155, col_offset=8), 'assertRaises', Load(), lineno=1155, col_offset=8), [Name('TypeError', Load(), lineno=1155, col_offset=26), Attribute(Name('codecs', Load(), lineno=1155, col_offset=37), 'getwriter', Load(), lineno=1155, col_offset=37)], [], None, None, lineno=1155, col_offset=8), lineno=1155, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1156, col_offset=8), 'assertRaises', Load(), lineno=1156, col_offset=8), [Name('LookupError', Load(), lineno=1156, col_offset=26), Attribute(Name('codecs', Load(), lineno=1156, col_offset=39), 'getwriter', Load(), lineno=1156, col_offset=39), Str('__spam__', lineno=1156, col_offset=57)], [], None, None, lineno=1156, col_offset=8), lineno=1156, col_offset=8)], [], lineno=1154, col_offset=4)], [], lineno=1116, col_offset=0), ClassDef('StreamReaderTest', [Attribute(Name('unittest', Load(), lineno=1158, col_offset=23), 'TestCase', Load(), lineno=1158, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1160, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1161, col_offset=8), 'reader', Store(), lineno=1161, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=1161, col_offset=22), 'getreader', Load(), lineno=1161, col_offset=22), [Str('utf-8', lineno=1161, col_offset=39)], [], None, None, lineno=1161, col_offset=22), lineno=1161, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1162, col_offset=8), 'stream', Store(), lineno=1162, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1162, col_offset=22), 'StringIO', Load(), lineno=1162, col_offset=22), [Str('\xed\x95\x9c\n\xea\xb8\x80', lineno=1162, col_offset=40)], [], None, None, lineno=1162, col_offset=22), lineno=1162, col_offset=8)], [], lineno=1160, col_offset=4), FunctionDef('test_readlines', arguments([Name('self', Param(), lineno=1164, col_offset=23)], None, None, []), [Assign([Name('f', Store(), lineno=1165, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1165, col_offset=12), 'reader', Load(), lineno=1165, col_offset=12), [Attribute(Name('self', Load(), lineno=1165, col_offset=24), 'stream', Load(), lineno=1165, col_offset=24)], [], None, None, lineno=1165, col_offset=12), lineno=1165, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1166, col_offset=8), 'assertEqual', Load(), lineno=1166, col_offset=8), [Call(Attribute(Name('f', Load(), lineno=1166, col_offset=25), 'readlines', Load(), lineno=1166, col_offset=25), [], [], None, None, lineno=1166, col_offset=25), List([Str(u'\ud55c\n', lineno=1166, col_offset=41), Str(u'\uae00', lineno=1166, col_offset=54)], Load(), lineno=1166, col_offset=40)], [], None, None, lineno=1166, col_offset=8), lineno=1166, col_offset=8)], [], lineno=1164, col_offset=4)], [], lineno=1158, col_offset=0), ClassDef('EncodedFileTest', [Attribute(Name('unittest', Load(), lineno=1168, col_offset=22), 'TestCase', Load(), lineno=1168, col_offset=22)], [FunctionDef('test_basic', arguments([Name('self', Param(), lineno=1170, col_offset=19)], None, None, []), [Assign([Name('f', Store(), lineno=1171, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1171, col_offset=12), 'StringIO', Load(), lineno=1171, col_offset=12), [Str('\xed\x95\x9c\n\xea\xb8\x80', lineno=1171, col_offset=30)], [], None, None, lineno=1171, col_offset=12), lineno=1171, col_offset=8), Assign([Name('ef', Store(), lineno=1172, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=1172, col_offset=13), 'EncodedFile', Load(), lineno=1172, col_offset=13), [Name('f', Load(), lineno=1172, col_offset=32), Str('utf-16-le', lineno=1172, col_offset=35), Str('utf-8', lineno=1172, col_offset=48)], [], None, None, lineno=1172, col_offset=13), lineno=1172, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1173, col_offset=8), 'assertEqual', Load(), lineno=1173, col_offset=8), [Call(Attribute(Name('ef', Load(), lineno=1173, col_offset=25), 'read', Load(), lineno=1173, col_offset=25), [], [], None, None, lineno=1173, col_offset=25), Str('\\\xd5\n\x00\x00\xae', lineno=1173, col_offset=36)], [], None, None, lineno=1173, col_offset=8), lineno=1173, col_offset=8), Assign([Name('f', Store(), lineno=1175, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1175, col_offset=12), 'StringIO', Load(), lineno=1175, col_offset=12), [], [], None, None, lineno=1175, col_offset=12), lineno=1175, col_offset=8), Assign([Name('ef', Store(), lineno=1176, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=1176, col_offset=13), 'EncodedFile', Load(), lineno=1176, col_offset=13), [Name('f', Load(), lineno=1176, col_offset=32), Str('utf-8', lineno=1176, col_offset=35), Str('latin1', lineno=1176, col_offset=44)], [], None, None, lineno=1176, col_offset=13), lineno=1176, col_offset=8), Expr(Call(Attribute(Name('ef', Load(), lineno=1177, col_offset=8), 'write', Load(), lineno=1177, col_offset=8), [Str('\xc3\xbc', lineno=1177, col_offset=17)], [], None, None, lineno=1177, col_offset=8), lineno=1177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1178, col_offset=8), 'assertEqual', Load(), lineno=1178, col_offset=8), [Call(Attribute(Name('f', Load(), lineno=1178, col_offset=25), 'getvalue', Load(), lineno=1178, col_offset=25), [], [], None, None, lineno=1178, col_offset=25), Str('\xfc', lineno=1178, col_offset=39)], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=8)], [], lineno=1170, col_offset=4)], [], lineno=1168, col_offset=0), ClassDef('Str2StrTest', [Attribute(Name('unittest', Load(), lineno=1180, col_offset=18), 'TestCase', Load(), lineno=1180, col_offset=18)], [FunctionDef('test_read', arguments([Name('self', Param(), lineno=1182, col_offset=18)], None, None, []), [Assign([Name('sin', Store(), lineno=1183, col_offset=8)], Call(Attribute(Str('\x80', lineno=1183, col_offset=14), 'encode', Load(), lineno=1183, col_offset=14), [Str('base64_codec', lineno=1183, col_offset=28)], [], None, None, lineno=1183, col_offset=14), lineno=1183, col_offset=8), Assign([Name('reader', Store(), lineno=1184, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=1184, col_offset=17), 'getreader', Load(), lineno=1184, col_offset=17), [Str('base64_codec', lineno=1184, col_offset=34)], [], None, None, lineno=1184, col_offset=17), [Call(Attribute(Name('StringIO', Load(), lineno=1184, col_offset=50), 'StringIO', Load(), lineno=1184, col_offset=50), [Name('sin', Load(), lineno=1184, col_offset=68)], [], None, None, lineno=1184, col_offset=50)], [], None, None, lineno=1184, col_offset=17), lineno=1184, col_offset=8), Assign([Name('sout', Store(), lineno=1185, col_offset=8)], Call(Attribute(Name('reader', Load(), lineno=1185, col_offset=15), 'read', Load(), lineno=1185, col_offset=15), [], [], None, None, lineno=1185, col_offset=15), lineno=1185, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1186, col_offset=8), 'assertEqual', Load(), lineno=1186, col_offset=8), [Name('sout', Load(), lineno=1186, col_offset=25), Str('\x80', lineno=1186, col_offset=31)], [], None, None, lineno=1186, col_offset=8), lineno=1186, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1187, col_offset=8), 'assertIsInstance', Load(), lineno=1187, col_offset=8), [Name('sout', Load(), lineno=1187, col_offset=30), Name('str', Load(), lineno=1187, col_offset=36)], [], None, None, lineno=1187, col_offset=8), lineno=1187, col_offset=8)], [], lineno=1182, col_offset=4), FunctionDef('test_readline', arguments([Name('self', Param(), lineno=1189, col_offset=22)], None, None, []), [Assign([Name('sin', Store(), lineno=1190, col_offset=8)], Call(Attribute(Str('\x80', lineno=1190, col_offset=14), 'encode', Load(), lineno=1190, col_offset=14), [Str('base64_codec', lineno=1190, col_offset=28)], [], None, None, lineno=1190, col_offset=14), lineno=1190, col_offset=8), Assign([Name('reader', Store(), lineno=1191, col_offset=8)], Call(Call(Attribute(Name('codecs', Load(), lineno=1191, col_offset=17), 'getreader', Load(), lineno=1191, col_offset=17), [Str('base64_codec', lineno=1191, col_offset=34)], [], None, None, lineno=1191, col_offset=17), [Call(Attribute(Name('StringIO', Load(), lineno=1191, col_offset=50), 'StringIO', Load(), lineno=1191, col_offset=50), [Name('sin', Load(), lineno=1191, col_offset=68)], [], None, None, lineno=1191, col_offset=50)], [], None, None, lineno=1191, col_offset=17), lineno=1191, col_offset=8), Assign([Name('sout', Store(), lineno=1192, col_offset=8)], Call(Attribute(Name('reader', Load(), lineno=1192, col_offset=15), 'readline', Load(), lineno=1192, col_offset=15), [], [], None, None, lineno=1192, col_offset=15), lineno=1192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1193, col_offset=8), 'assertEqual', Load(), lineno=1193, col_offset=8), [Name('sout', Load(), lineno=1193, col_offset=25), Str('\x80', lineno=1193, col_offset=31)], [], None, None, lineno=1193, col_offset=8), lineno=1193, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1194, col_offset=8), 'assertIsInstance', Load(), lineno=1194, col_offset=8), [Name('sout', Load(), lineno=1194, col_offset=30), Name('str', Load(), lineno=1194, col_offset=36)], [], None, None, lineno=1194, col_offset=8), lineno=1194, col_offset=8)], [], lineno=1189, col_offset=4)], [], lineno=1180, col_offset=0), Assign([Name('all_unicode_encodings', Store(), lineno=1196, col_offset=0)], List([Str('ascii', lineno=1197, col_offset=4), Str('base64_codec', lineno=1198, col_offset=4), Str('big5', lineno=1199, col_offset=4), Str('big5hkscs', lineno=1200, col_offset=4), Str('charmap', lineno=1201, col_offset=4), Str('cp037', lineno=1202, col_offset=4), Str('cp1006', lineno=1203, col_offset=4), Str('cp1026', lineno=1204, col_offset=4), Str('cp1140', lineno=1205, col_offset=4), Str('cp1250', lineno=1206, col_offset=4), Str('cp1251', lineno=1207, col_offset=4), Str('cp1252', lineno=1208, col_offset=4), Str('cp1253', lineno=1209, col_offset=4), Str('cp1254', lineno=1210, col_offset=4), Str('cp1255', lineno=1211, col_offset=4), Str('cp1256', lineno=1212, col_offset=4), Str('cp1257', lineno=1213, col_offset=4), Str('cp1258', lineno=1214, col_offset=4), Str('cp424', lineno=1215, col_offset=4), Str('cp437', lineno=1216, col_offset=4), Str('cp500', lineno=1217, col_offset=4), Str('cp720', lineno=1218, col_offset=4), Str('cp737', lineno=1219, col_offset=4), Str('cp775', lineno=1220, col_offset=4), Str('cp850', lineno=1221, col_offset=4), Str('cp852', lineno=1222, col_offset=4), Str('cp855', lineno=1223, col_offset=4), Str('cp856', lineno=1224, col_offset=4), Str('cp857', lineno=1225, col_offset=4), Str('cp858', lineno=1226, col_offset=4), Str('cp860', lineno=1227, col_offset=4), Str('cp861', lineno=1228, col_offset=4), Str('cp862', lineno=1229, col_offset=4), Str('cp863', lineno=1230, col_offset=4), Str('cp864', lineno=1231, col_offset=4), Str('cp865', lineno=1232, col_offset=4), Str('cp866', lineno=1233, col_offset=4), Str('cp869', lineno=1234, col_offset=4), Str('cp874', lineno=1235, col_offset=4), Str('cp875', lineno=1236, col_offset=4), Str('cp932', lineno=1237, col_offset=4), Str('cp949', lineno=1238, col_offset=4), Str('cp950', lineno=1239, col_offset=4), Str('euc_jis_2004', lineno=1240, col_offset=4), Str('euc_jisx0213', lineno=1241, col_offset=4), Str('euc_jp', lineno=1242, col_offset=4), Str('euc_kr', lineno=1243, col_offset=4), Str('gb18030', lineno=1244, col_offset=4), Str('gb2312', lineno=1245, col_offset=4), Str('gbk', lineno=1246, col_offset=4), Str('hex_codec', lineno=1247, col_offset=4), Str('hp_roman8', lineno=1248, col_offset=4), Str('hz', lineno=1249, col_offset=4), Str('idna', lineno=1250, col_offset=4), Str('iso2022_jp', lineno=1251, col_offset=4), Str('iso2022_jp_1', lineno=1252, col_offset=4), Str('iso2022_jp_2', lineno=1253, col_offset=4), Str('iso2022_jp_2004', lineno=1254, col_offset=4), Str('iso2022_jp_3', lineno=1255, col_offset=4), Str('iso2022_jp_ext', lineno=1256, col_offset=4), Str('iso2022_kr', lineno=1257, col_offset=4), Str('iso8859_1', lineno=1258, col_offset=4), Str('iso8859_10', lineno=1259, col_offset=4), Str('iso8859_11', lineno=1260, col_offset=4), Str('iso8859_13', lineno=1261, col_offset=4), Str('iso8859_14', lineno=1262, col_offset=4), Str('iso8859_15', lineno=1263, col_offset=4), Str('iso8859_16', lineno=1264, col_offset=4), Str('iso8859_2', lineno=1265, col_offset=4), Str('iso8859_3', lineno=1266, col_offset=4), Str('iso8859_4', lineno=1267, col_offset=4), Str('iso8859_5', lineno=1268, col_offset=4), Str('iso8859_6', lineno=1269, col_offset=4), Str('iso8859_7', lineno=1270, col_offset=4), Str('iso8859_8', lineno=1271, col_offset=4), Str('iso8859_9', lineno=1272, col_offset=4), Str('johab', lineno=1273, col_offset=4), Str('koi8_r', lineno=1274, col_offset=4), Str('koi8_u', lineno=1275, col_offset=4), Str('latin_1', lineno=1276, col_offset=4), Str('mac_cyrillic', lineno=1277, col_offset=4), Str('mac_greek', lineno=1278, col_offset=4), Str('mac_iceland', lineno=1279, col_offset=4), Str('mac_latin2', lineno=1280, col_offset=4), Str('mac_roman', lineno=1281, col_offset=4), Str('mac_turkish', lineno=1282, col_offset=4), Str('palmos', lineno=1283, col_offset=4), Str('ptcp154', lineno=1284, col_offset=4), Str('punycode', lineno=1285, col_offset=4), Str('raw_unicode_escape', lineno=1286, col_offset=4), Str('rot_13', lineno=1287, col_offset=4), Str('shift_jis', lineno=1288, col_offset=4), Str('shift_jis_2004', lineno=1289, col_offset=4), Str('shift_jisx0213', lineno=1290, col_offset=4), Str('tis_620', lineno=1291, col_offset=4), Str('unicode_escape', lineno=1292, col_offset=4), Str('unicode_internal', lineno=1293, col_offset=4), Str('utf_16', lineno=1294, col_offset=4), Str('utf_16_be', lineno=1295, col_offset=4), Str('utf_16_le', lineno=1296, col_offset=4), Str('utf_7', lineno=1297, col_offset=4), Str('utf_8', lineno=1298, col_offset=4)], Load(), lineno=1196, col_offset=24), lineno=1196, col_offset=0), If(Call(Name('hasattr', Load(), lineno=1301, col_offset=3), [Name('codecs', Load(), lineno=1301, col_offset=11), Str('mbcs_encode', lineno=1301, col_offset=19)], [], None, None, lineno=1301, col_offset=3), [Expr(Call(Attribute(Name('all_unicode_encodings', Load(), lineno=1302, col_offset=4), 'append', Load(), lineno=1302, col_offset=4), [Str('mbcs', lineno=1302, col_offset=33)], [], None, None, lineno=1302, col_offset=4), lineno=1302, col_offset=4)], [], lineno=1301, col_offset=0), Assign([Name('all_string_encodings', Store(), lineno=1305, col_offset=0)], List([Str('quopri_codec', lineno=1306, col_offset=4), Str('string_escape', lineno=1307, col_offset=4), Str('uu_codec', lineno=1308, col_offset=4)], Load(), lineno=1305, col_offset=23), lineno=1305, col_offset=0), Assign([Name('broken_unicode_with_streams', Store(), lineno=1316, col_offset=0)], List([Str('base64_codec', lineno=1317, col_offset=4), Str('hex_codec', lineno=1318, col_offset=4), Str('punycode', lineno=1319, col_offset=4), Str('unicode_internal', lineno=1320, col_offset=4)], Load(), lineno=1316, col_offset=30), lineno=1316, col_offset=0), Assign([Name('broken_incremental_coders', Store(), lineno=1322, col_offset=0)], Subscript(Name('broken_unicode_with_streams', Load(), lineno=1322, col_offset=28), Slice(None, None, None), Load(), lineno=1322, col_offset=28), lineno=1322, col_offset=0), Assign([Name('only_strict_mode', Store(), lineno=1325, col_offset=0)], List([Str('idna', lineno=1326, col_offset=4), Str('zlib_codec', lineno=1327, col_offset=4), Str('bz2_codec', lineno=1328, col_offset=4)], Load(), lineno=1325, col_offset=19), lineno=1325, col_offset=0), TryExcept([Import([alias('bz2', None)], lineno=1332, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=1333, col_offset=7), None, [Pass( lineno=1334, col_offset=4)], lineno=1333, col_offset=0)], [Expr(Call(Attribute(Name('all_unicode_encodings', Load(), lineno=1336, col_offset=4), 'append', Load(), lineno=1336, col_offset=4), [Str('bz2_codec', lineno=1336, col_offset=33)], [], None, None, lineno=1336, col_offset=4), lineno=1336, col_offset=4), Expr(Call(Attribute(Name('broken_unicode_with_streams', Load(), lineno=1337, col_offset=4), 'append', Load(), lineno=1337, col_offset=4), [Str('bz2_codec', lineno=1337, col_offset=39)], [], None, None, lineno=1337, col_offset=4), lineno=1337, col_offset=4)], lineno=1331, col_offset=0), TryExcept([Import([alias('zlib', None)], lineno=1340, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=1341, col_offset=7), None, [Pass( lineno=1342, col_offset=4)], lineno=1341, col_offset=0)], [Expr(Call(Attribute(Name('all_unicode_encodings', Load(), lineno=1344, col_offset=4), 'append', Load(), lineno=1344, col_offset=4), [Str('zlib_codec', lineno=1344, col_offset=33)], [], None, None, lineno=1344, col_offset=4), lineno=1344, col_offset=4), Expr(Call(Attribute(Name('broken_unicode_with_streams', Load(), lineno=1345, col_offset=4), 'append', Load(), lineno=1345, col_offset=4), [Str('zlib_codec', lineno=1345, col_offset=39)], [], None, None, lineno=1345, col_offset=4), lineno=1345, col_offset=4)], lineno=1339, col_offset=0), ClassDef('BasicUnicodeTest', [Attribute(Name('unittest', Load(), lineno=1347, col_offset=23), 'TestCase', Load(), lineno=1347, col_offset=23)], [FunctionDef('test_basics', arguments([Name('self', Param(), lineno=1348, col_offset=20)], None, None, []), [Assign([Name('s', Store(), lineno=1349, col_offset=8)], Str(u'abc123', lineno=1349, col_offset=12), lineno=1349, col_offset=8), For(Name('encoding', Store(), lineno=1350, col_offset=12), Name('all_unicode_encodings', Load(), lineno=1350, col_offset=24), [Assign([Name('name', Store(), lineno=1351, col_offset=12)], Attribute(Call(Attribute(Name('codecs', Load(), lineno=1351, col_offset=19), 'lookup', Load(), lineno=1351, col_offset=19), [Name('encoding', Load(), lineno=1351, col_offset=33)], [], None, None, lineno=1351, col_offset=19), 'name', Load(), lineno=1351, col_offset=19), lineno=1351, col_offset=12), If(Call(Attribute(Name('encoding', Load(), lineno=1352, col_offset=15), 'endswith', Load(), lineno=1352, col_offset=15), [Str('_codec', lineno=1352, col_offset=33)], [], None, None, lineno=1352, col_offset=15), [AugAssign(Name('name', Store(), lineno=1353, col_offset=16), Add(), Str('_codec', lineno=1353, col_offset=24), lineno=1353, col_offset=16)], [If(Compare(Name('encoding', Load(), lineno=1354, col_offset=17), [Eq()], [Str('latin_1', lineno=1354, col_offset=29)], lineno=1354, col_offset=17), [Assign([Name('name', Store(), lineno=1355, col_offset=16)], Str('latin_1', lineno=1355, col_offset=23), lineno=1355, col_offset=16)], [], lineno=1354, col_offset=17)], lineno=1352, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1356, col_offset=12), 'assertEqual', Load(), lineno=1356, col_offset=12), [Call(Attribute(Name('encoding', Load(), lineno=1356, col_offset=29), 'replace', Load(), lineno=1356, col_offset=29), [Str('_', lineno=1356, col_offset=46), Str('-', lineno=1356, col_offset=51)], [], None, None, lineno=1356, col_offset=29), Call(Attribute(Name('name', Load(), lineno=1356, col_offset=57), 'replace', Load(), lineno=1356, col_offset=57), [Str('_', lineno=1356, col_offset=70), Str('-', lineno=1356, col_offset=75)], [], None, None, lineno=1356, col_offset=57)], [], None, None, lineno=1356, col_offset=12), lineno=1356, col_offset=12), Assign([Tuple([Name('bytes', Store(), lineno=1357, col_offset=13), Name('size', Store(), lineno=1357, col_offset=20)], Store(), lineno=1357, col_offset=13)], Call(Call(Attribute(Name('codecs', Load(), lineno=1357, col_offset=28), 'getencoder', Load(), lineno=1357, col_offset=28), [Name('encoding', Load(), lineno=1357, col_offset=46)], [], None, None, lineno=1357, col_offset=28), [Name('s', Load(), lineno=1357, col_offset=56)], [], None, None, lineno=1357, col_offset=28), lineno=1357, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1358, col_offset=12), 'assertEqual', Load(), lineno=1358, col_offset=12), [Name('size', Load(), lineno=1358, col_offset=29), Call(Name('len', Load(), lineno=1358, col_offset=35), [Name('s', Load(), lineno=1358, col_offset=39)], [], None, None, lineno=1358, col_offset=35), BinOp(Str('%r != %r (encoding=%r)', lineno=1358, col_offset=43), Mod(), Tuple([Name('size', Load(), lineno=1358, col_offset=71), Call(Name('len', Load(), lineno=1358, col_offset=77), [Name('s', Load(), lineno=1358, col_offset=81)], [], None, None, lineno=1358, col_offset=77), Name('encoding', Load(), lineno=1358, col_offset=85)], Load(), lineno=1358, col_offset=71), lineno=1358, col_offset=43)], [], None, None, lineno=1358, col_offset=12), lineno=1358, col_offset=12), Assign([Tuple([Name('chars', Store(), lineno=1359, col_offset=13), Name('size', Store(), lineno=1359, col_offset=20)], Store(), lineno=1359, col_offset=13)], Call(Call(Attribute(Name('codecs', Load(), lineno=1359, col_offset=28), 'getdecoder', Load(), lineno=1359, col_offset=28), [Name('encoding', Load(), lineno=1359, col_offset=46)], [], None, None, lineno=1359, col_offset=28), [Name('bytes', Load(), lineno=1359, col_offset=56)], [], None, None, lineno=1359, col_offset=28), lineno=1359, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1360, col_offset=12), 'assertEqual', Load(), lineno=1360, col_offset=12), [Name('chars', Load(), lineno=1360, col_offset=29), Name('s', Load(), lineno=1360, col_offset=36), BinOp(Str('%r != %r (encoding=%r)', lineno=1360, col_offset=39), Mod(), Tuple([Name('chars', Load(), lineno=1360, col_offset=67), Name('s', Load(), lineno=1360, col_offset=74), Name('encoding', Load(), lineno=1360, col_offset=77)], Load(), lineno=1360, col_offset=67), lineno=1360, col_offset=39)], [], None, None, lineno=1360, col_offset=12), lineno=1360, col_offset=12), If(Compare(Name('encoding', Load(), lineno=1362, col_offset=15), [NotIn()], [Name('broken_unicode_with_streams', Load(), lineno=1362, col_offset=31)], lineno=1362, col_offset=15), [Assign([Name('q', Store(), lineno=1364, col_offset=16)], Call(Name('Queue', Load(), lineno=1364, col_offset=20), [], [], None, None, lineno=1364, col_offset=20), lineno=1364, col_offset=16), Assign([Name('writer', Store(), lineno=1365, col_offset=16)], Call(Call(Attribute(Name('codecs', Load(), lineno=1365, col_offset=25), 'getwriter', Load(), lineno=1365, col_offset=25), [Name('encoding', Load(), lineno=1365, col_offset=42)], [], None, None, lineno=1365, col_offset=25), [Name('q', Load(), lineno=1365, col_offset=52)], [], None, None, lineno=1365, col_offset=25), lineno=1365, col_offset=16), Assign([Name('encodedresult', Store(), lineno=1366, col_offset=16)], Str('', lineno=1366, col_offset=32), lineno=1366, col_offset=16), For(Name('c', Store(), lineno=1367, col_offset=20), Name('s', Load(), lineno=1367, col_offset=25), [Expr(Call(Attribute(Name('writer', Load(), lineno=1368, col_offset=20), 'write', Load(), lineno=1368, col_offset=20), [Name('c', Load(), lineno=1368, col_offset=33)], [], None, None, lineno=1368, col_offset=20), lineno=1368, col_offset=20), AugAssign(Name('encodedresult', Store(), lineno=1369, col_offset=20), Add(), Call(Attribute(Name('q', Load(), lineno=1369, col_offset=37), 'read', Load(), lineno=1369, col_offset=37), [], [], None, None, lineno=1369, col_offset=37), lineno=1369, col_offset=20)], [], lineno=1367, col_offset=16), Assign([Name('q', Store(), lineno=1370, col_offset=16)], Call(Name('Queue', Load(), lineno=1370, col_offset=20), [], [], None, None, lineno=1370, col_offset=20), lineno=1370, col_offset=16), Assign([Name('reader', Store(), lineno=1371, col_offset=16)], Call(Call(Attribute(Name('codecs', Load(), lineno=1371, col_offset=25), 'getreader', Load(), lineno=1371, col_offset=25), [Name('encoding', Load(), lineno=1371, col_offset=42)], [], None, None, lineno=1371, col_offset=25), [Name('q', Load(), lineno=1371, col_offset=52)], [], None, None, lineno=1371, col_offset=25), lineno=1371, col_offset=16), Assign([Name('decodedresult', Store(), lineno=1372, col_offset=16)], Str(u'', lineno=1372, col_offset=32), lineno=1372, col_offset=16), For(Name('c', Store(), lineno=1373, col_offset=20), Name('encodedresult', Load(), lineno=1373, col_offset=25), [Expr(Call(Attribute(Name('q', Load(), lineno=1374, col_offset=20), 'write', Load(), lineno=1374, col_offset=20), [Name('c', Load(), lineno=1374, col_offset=28)], [], None, None, lineno=1374, col_offset=20), lineno=1374, col_offset=20), AugAssign(Name('decodedresult', Store(), lineno=1375, col_offset=20), Add(), Call(Attribute(Name('reader', Load(), lineno=1375, col_offset=37), 'read', Load(), lineno=1375, col_offset=37), [], [], None, None, lineno=1375, col_offset=37), lineno=1375, col_offset=20)], [], lineno=1373, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1376, col_offset=16), 'assertEqual', Load(), lineno=1376, col_offset=16), [Name('decodedresult', Load(), lineno=1376, col_offset=33), Name('s', Load(), lineno=1376, col_offset=48), BinOp(Str('%r != %r (encoding=%r)', lineno=1376, col_offset=51), Mod(), Tuple([Name('decodedresult', Load(), lineno=1376, col_offset=79), Name('s', Load(), lineno=1376, col_offset=94), Name('encoding', Load(), lineno=1376, col_offset=97)], Load(), lineno=1376, col_offset=79), lineno=1376, col_offset=51)], [], None, None, lineno=1376, col_offset=16), lineno=1376, col_offset=16)], [], lineno=1362, col_offset=12), If(Compare(Name('encoding', Load(), lineno=1378, col_offset=15), [NotIn()], [Name('broken_incremental_coders', Load(), lineno=1378, col_offset=31)], lineno=1378, col_offset=15), [TryExcept([Assign([Name('encoder', Store(), lineno=1382, col_offset=20)], Call(Call(Attribute(Name('codecs', Load(), lineno=1382, col_offset=30), 'getincrementalencoder', Load(), lineno=1382, col_offset=30), [Name('encoding', Load(), lineno=1382, col_offset=59)], [], None, None, lineno=1382, col_offset=30), [], [], None, None, lineno=1382, col_offset=30), lineno=1382, col_offset=20), Assign([Name('cencoder', Store(), lineno=1383, col_offset=20)], Call(Attribute(Name('_testcapi', Load(), lineno=1383, col_offset=31), 'codec_incrementalencoder', Load(), lineno=1383, col_offset=31), [Name('encoding', Load(), lineno=1383, col_offset=66)], [], None, None, lineno=1383, col_offset=31), lineno=1383, col_offset=20)], [ExceptHandler(Name('LookupError', Load(), lineno=1384, col_offset=23), None, [Pass( lineno=1385, col_offset=20)], lineno=1384, col_offset=16)], [Assign([Name('encodedresult', Store(), lineno=1388, col_offset=20)], Str('', lineno=1388, col_offset=36), lineno=1388, col_offset=20), For(Name('c', Store(), lineno=1389, col_offset=24), Name('s', Load(), lineno=1389, col_offset=29), [AugAssign(Name('encodedresult', Store(), lineno=1390, col_offset=24), Add(), Call(Attribute(Name('encoder', Load(), lineno=1390, col_offset=41), 'encode', Load(), lineno=1390, col_offset=41), [Name('c', Load(), lineno=1390, col_offset=56)], [], None, None, lineno=1390, col_offset=41), lineno=1390, col_offset=24)], [], lineno=1389, col_offset=20), AugAssign(Name('encodedresult', Store(), lineno=1391, col_offset=20), Add(), Call(Attribute(Name('encoder', Load(), lineno=1391, col_offset=37), 'encode', Load(), lineno=1391, col_offset=37), [Str(u'', lineno=1391, col_offset=52), Name('True', Load(), lineno=1391, col_offset=57)], [], None, None, lineno=1391, col_offset=37), lineno=1391, col_offset=20), Assign([Name('decoder', Store(), lineno=1392, col_offset=20)], Call(Call(Attribute(Name('codecs', Load(), lineno=1392, col_offset=30), 'getincrementaldecoder', Load(), lineno=1392, col_offset=30), [Name('encoding', Load(), lineno=1392, col_offset=59)], [], None, None, lineno=1392, col_offset=30), [], [], None, None, lineno=1392, col_offset=30), lineno=1392, col_offset=20), Assign([Name('decodedresult', Store(), lineno=1393, col_offset=20)], Str(u'', lineno=1393, col_offset=36), lineno=1393, col_offset=20), For(Name('c', Store(), lineno=1394, col_offset=24), Name('encodedresult', Load(), lineno=1394, col_offset=29), [AugAssign(Name('decodedresult', Store(), lineno=1395, col_offset=24), Add(), Call(Attribute(Name('decoder', Load(), lineno=1395, col_offset=41), 'decode', Load(), lineno=1395, col_offset=41), [Name('c', Load(), lineno=1395, col_offset=56)], [], None, None, lineno=1395, col_offset=41), lineno=1395, col_offset=24)], [], lineno=1394, col_offset=20), AugAssign(Name('decodedresult', Store(), lineno=1396, col_offset=20), Add(), Call(Attribute(Name('decoder', Load(), lineno=1396, col_offset=37), 'decode', Load(), lineno=1396, col_offset=37), [Str('', lineno=1396, col_offset=52), Name('True', Load(), lineno=1396, col_offset=56)], [], None, None, lineno=1396, col_offset=37), lineno=1396, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=1397, col_offset=20), 'assertEqual', Load(), lineno=1397, col_offset=20), [Name('decodedresult', Load(), lineno=1397, col_offset=37), Name('s', Load(), lineno=1397, col_offset=52), BinOp(Str('%r != %r (encoding=%r)', lineno=1397, col_offset=55), Mod(), Tuple([Name('decodedresult', Load(), lineno=1397, col_offset=83), Name('s', Load(), lineno=1397, col_offset=98), Name('encoding', Load(), lineno=1397, col_offset=101)], Load(), lineno=1397, col_offset=83), lineno=1397, col_offset=55)], [], None, None, lineno=1397, col_offset=20), lineno=1397, col_offset=20), Assign([Name('encodedresult', Store(), lineno=1400, col_offset=20)], Str('', lineno=1400, col_offset=36), lineno=1400, col_offset=20), For(Name('c', Store(), lineno=1401, col_offset=24), Name('s', Load(), lineno=1401, col_offset=29), [AugAssign(Name('encodedresult', Store(), lineno=1402, col_offset=24), Add(), Call(Attribute(Name('cencoder', Load(), lineno=1402, col_offset=41), 'encode', Load(), lineno=1402, col_offset=41), [Name('c', Load(), lineno=1402, col_offset=57)], [], None, None, lineno=1402, col_offset=41), lineno=1402, col_offset=24)], [], lineno=1401, col_offset=20), AugAssign(Name('encodedresult', Store(), lineno=1403, col_offset=20), Add(), Call(Attribute(Name('cencoder', Load(), lineno=1403, col_offset=37), 'encode', Load(), lineno=1403, col_offset=37), [Str(u'', lineno=1403, col_offset=53), Name('True', Load(), lineno=1403, col_offset=58)], [], None, None, lineno=1403, col_offset=37), lineno=1403, col_offset=20), Assign([Name('cdecoder', Store(), lineno=1404, col_offset=20)], Call(Attribute(Name('_testcapi', Load(), lineno=1404, col_offset=31), 'codec_incrementaldecoder', Load(), lineno=1404, col_offset=31), [Name('encoding', Load(), lineno=1404, col_offset=66)], [], None, None, lineno=1404, col_offset=31), lineno=1404, col_offset=20), Assign([Name('decodedresult', Store(), lineno=1405, col_offset=20)], Str(u'', lineno=1405, col_offset=36), lineno=1405, col_offset=20), For(Name('c', Store(), lineno=1406, col_offset=24), Name('encodedresult', Load(), lineno=1406, col_offset=29), [AugAssign(Name('decodedresult', Store(), lineno=1407, col_offset=24), Add(), Call(Attribute(Name('cdecoder', Load(), lineno=1407, col_offset=41), 'decode', Load(), lineno=1407, col_offset=41), [Name('c', Load(), lineno=1407, col_offset=57)], [], None, None, lineno=1407, col_offset=41), lineno=1407, col_offset=24)], [], lineno=1406, col_offset=20), AugAssign(Name('decodedresult', Store(), lineno=1408, col_offset=20), Add(), Call(Attribute(Name('cdecoder', Load(), lineno=1408, col_offset=37), 'decode', Load(), lineno=1408, col_offset=37), [Str('', lineno=1408, col_offset=53), Name('True', Load(), lineno=1408, col_offset=57)], [], None, None, lineno=1408, col_offset=37), lineno=1408, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=1409, col_offset=20), 'assertEqual', Load(), lineno=1409, col_offset=20), [Name('decodedresult', Load(), lineno=1409, col_offset=37), Name('s', Load(), lineno=1409, col_offset=52), BinOp(Str('%r != %r (encoding=%r)', lineno=1409, col_offset=55), Mod(), Tuple([Name('decodedresult', Load(), lineno=1409, col_offset=83), Name('s', Load(), lineno=1409, col_offset=98), Name('encoding', Load(), lineno=1409, col_offset=101)], Load(), lineno=1409, col_offset=83), lineno=1409, col_offset=55)], [], None, None, lineno=1409, col_offset=20), lineno=1409, col_offset=20), Assign([Name('result', Store(), lineno=1412, col_offset=20)], Call(Attribute(Str(u'', lineno=1412, col_offset=29), 'join', Load(), lineno=1412, col_offset=29), [Call(Attribute(Name('codecs', Load(), lineno=1412, col_offset=38), 'iterdecode', Load(), lineno=1412, col_offset=38), [Call(Attribute(Name('codecs', Load(), lineno=1412, col_offset=56), 'iterencode', Load(), lineno=1412, col_offset=56), [Name('s', Load(), lineno=1412, col_offset=74), Name('encoding', Load(), lineno=1412, col_offset=77)], [], None, None, lineno=1412, col_offset=56), Name('encoding', Load(), lineno=1412, col_offset=88)], [], None, None, lineno=1412, col_offset=38)], [], None, None, lineno=1412, col_offset=29), lineno=1412, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=1413, col_offset=20), 'assertEqual', Load(), lineno=1413, col_offset=20), [Name('result', Load(), lineno=1413, col_offset=37), Name('s', Load(), lineno=1413, col_offset=45), BinOp(Str('%r != %r (encoding=%r)', lineno=1413, col_offset=48), Mod(), Tuple([Name('result', Load(), lineno=1413, col_offset=76), Name('s', Load(), lineno=1413, col_offset=84), Name('encoding', Load(), lineno=1413, col_offset=87)], Load(), lineno=1413, col_offset=76), lineno=1413, col_offset=48)], [], None, None, lineno=1413, col_offset=20), lineno=1413, col_offset=20), Assign([Name('result', Store(), lineno=1416, col_offset=20)], Call(Attribute(Str(u'', lineno=1416, col_offset=29), 'join', Load(), lineno=1416, col_offset=29), [Call(Attribute(Name('codecs', Load(), lineno=1416, col_offset=38), 'iterdecode', Load(), lineno=1416, col_offset=38), [Call(Attribute(Name('codecs', Load(), lineno=1416, col_offset=56), 'iterencode', Load(), lineno=1416, col_offset=56), [Str(u'', lineno=1416, col_offset=74), Name('encoding', Load(), lineno=1416, col_offset=79)], [], None, None, lineno=1416, col_offset=56), Name('encoding', Load(), lineno=1416, col_offset=90)], [], None, None, lineno=1416, col_offset=38)], [], None, None, lineno=1416, col_offset=29), lineno=1416, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=1417, col_offset=20), 'assertEqual', Load(), lineno=1417, col_offset=20), [Name('result', Load(), lineno=1417, col_offset=37), Str(u'', lineno=1417, col_offset=45)], [], None, None, lineno=1417, col_offset=20), lineno=1417, col_offset=20)], lineno=1381, col_offset=16), If(Compare(Name('encoding', Load(), lineno=1419, col_offset=19), [NotIn()], [Name('only_strict_mode', Load(), lineno=1419, col_offset=35)], lineno=1419, col_offset=19), [TryExcept([Assign([Name('encoder', Store(), lineno=1422, col_offset=24)], Call(Call(Attribute(Name('codecs', Load(), lineno=1422, col_offset=34), 'getincrementalencoder', Load(), lineno=1422, col_offset=34), [Name('encoding', Load(), lineno=1422, col_offset=63)], [], None, None, lineno=1422, col_offset=34), [Str('ignore', lineno=1422, col_offset=73)], [], None, None, lineno=1422, col_offset=34), lineno=1422, col_offset=24), Assign([Name('cencoder', Store(), lineno=1423, col_offset=24)], Call(Attribute(Name('_testcapi', Load(), lineno=1423, col_offset=35), 'codec_incrementalencoder', Load(), lineno=1423, col_offset=35), [Name('encoding', Load(), lineno=1423, col_offset=70), Str('ignore', lineno=1423, col_offset=80)], [], None, None, lineno=1423, col_offset=35), lineno=1423, col_offset=24)], [ExceptHandler(Name('LookupError', Load(), lineno=1424, col_offset=27), None, [Pass( lineno=1425, col_offset=24)], lineno=1424, col_offset=20)], [Assign([Name('encodedresult', Store(), lineno=1427, col_offset=24)], Call(Attribute(Str('', lineno=1427, col_offset=40), 'join', Load(), lineno=1427, col_offset=40), [GeneratorExp(Call(Attribute(Name('encoder', Load(), lineno=1427, col_offset=48), 'encode', Load(), lineno=1427, col_offset=48), [Name('c', Load(), lineno=1427, col_offset=63)], [], None, None, lineno=1427, col_offset=48), [comprehension(Name('c', Store(), lineno=1427, col_offset=70), Name('s', Load(), lineno=1427, col_offset=75), [])], lineno=1427, col_offset=48)], [], None, None, lineno=1427, col_offset=40), lineno=1427, col_offset=24), Assign([Name('decoder', Store(), lineno=1428, col_offset=24)], Call(Call(Attribute(Name('codecs', Load(), lineno=1428, col_offset=34), 'getincrementaldecoder', Load(), lineno=1428, col_offset=34), [Name('encoding', Load(), lineno=1428, col_offset=63)], [], None, None, lineno=1428, col_offset=34), [Str('ignore', lineno=1428, col_offset=73)], [], None, None, lineno=1428, col_offset=34), lineno=1428, col_offset=24), Assign([Name('decodedresult', Store(), lineno=1429, col_offset=24)], Call(Attribute(Str(u'', lineno=1429, col_offset=40), 'join', Load(), lineno=1429, col_offset=40), [GeneratorExp(Call(Attribute(Name('decoder', Load(), lineno=1429, col_offset=49), 'decode', Load(), lineno=1429, col_offset=49), [Name('c', Load(), lineno=1429, col_offset=64)], [], None, None, lineno=1429, col_offset=49), [comprehension(Name('c', Store(), lineno=1429, col_offset=71), Name('encodedresult', Load(), lineno=1429, col_offset=76), [])], lineno=1429, col_offset=49)], [], None, None, lineno=1429, col_offset=40), lineno=1429, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=1430, col_offset=24), 'assertEqual', Load(), lineno=1430, col_offset=24), [Name('decodedresult', Load(), lineno=1430, col_offset=41), Name('s', Load(), lineno=1430, col_offset=56), BinOp(Str('%r != %r (encoding=%r)', lineno=1430, col_offset=59), Mod(), Tuple([Name('decodedresult', Load(), lineno=1430, col_offset=87), Name('s', Load(), lineno=1430, col_offset=102), Name('encoding', Load(), lineno=1430, col_offset=105)], Load(), lineno=1430, col_offset=87), lineno=1430, col_offset=59)], [], None, None, lineno=1430, col_offset=24), lineno=1430, col_offset=24), Assign([Name('encodedresult', Store(), lineno=1432, col_offset=24)], Call(Attribute(Str('', lineno=1432, col_offset=40), 'join', Load(), lineno=1432, col_offset=40), [GeneratorExp(Call(Attribute(Name('cencoder', Load(), lineno=1432, col_offset=48), 'encode', Load(), lineno=1432, col_offset=48), [Name('c', Load(), lineno=1432, col_offset=64)], [], None, None, lineno=1432, col_offset=48), [comprehension(Name('c', Store(), lineno=1432, col_offset=71), Name('s', Load(), lineno=1432, col_offset=76), [])], lineno=1432, col_offset=48)], [], None, None, lineno=1432, col_offset=40), lineno=1432, col_offset=24), Assign([Name('cdecoder', Store(), lineno=1433, col_offset=24)], Call(Attribute(Name('_testcapi', Load(), lineno=1433, col_offset=35), 'codec_incrementaldecoder', Load(), lineno=1433, col_offset=35), [Name('encoding', Load(), lineno=1433, col_offset=70), Str('ignore', lineno=1433, col_offset=80)], [], None, None, lineno=1433, col_offset=35), lineno=1433, col_offset=24), Assign([Name('decodedresult', Store(), lineno=1434, col_offset=24)], Call(Attribute(Str(u'', lineno=1434, col_offset=40), 'join', Load(), lineno=1434, col_offset=40), [GeneratorExp(Call(Attribute(Name('cdecoder', Load(), lineno=1434, col_offset=49), 'decode', Load(), lineno=1434, col_offset=49), [Name('c', Load(), lineno=1434, col_offset=65)], [], None, None, lineno=1434, col_offset=49), [comprehension(Name('c', Store(), lineno=1434, col_offset=72), Name('encodedresult', Load(), lineno=1434, col_offset=77), [])], lineno=1434, col_offset=49)], [], None, None, lineno=1434, col_offset=40), lineno=1434, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=1435, col_offset=24), 'assertEqual', Load(), lineno=1435, col_offset=24), [Name('decodedresult', Load(), lineno=1435, col_offset=41), Name('s', Load(), lineno=1435, col_offset=56), BinOp(Str('%r != %r (encoding=%r)', lineno=1435, col_offset=59), Mod(), Tuple([Name('decodedresult', Load(), lineno=1435, col_offset=87), Name('s', Load(), lineno=1435, col_offset=102), Name('encoding', Load(), lineno=1435, col_offset=105)], Load(), lineno=1435, col_offset=87), lineno=1435, col_offset=59)], [], None, None, lineno=1435, col_offset=24), lineno=1435, col_offset=24)], lineno=1421, col_offset=20)], [], lineno=1419, col_offset=16)], [], lineno=1378, col_offset=12)], [], lineno=1350, col_offset=8)], [], lineno=1348, col_offset=4), FunctionDef('test_seek', arguments([Name('self', Param(), lineno=1437, col_offset=18)], None, None, []), [Assign([Name('s', Store(), lineno=1439, col_offset=8)], BinOp(Str(u'%s\n%s\n', lineno=1439, col_offset=12), Mod(), Tuple([BinOp(Num(100, lineno=1439, col_offset=27), Mult(), Str(u'abc123', lineno=1439, col_offset=31), lineno=1439, col_offset=27), BinOp(Num(100, lineno=1439, col_offset=42), Mult(), Str(u'def456', lineno=1439, col_offset=46), lineno=1439, col_offset=42)], Load(), lineno=1439, col_offset=27), lineno=1439, col_offset=12), lineno=1439, col_offset=8), For(Name('encoding', Store(), lineno=1440, col_offset=12), Name('all_unicode_encodings', Load(), lineno=1440, col_offset=24), [If(Compare(Name('encoding', Load(), lineno=1441, col_offset=15), [Eq()], [Str('idna', lineno=1441, col_offset=27)], lineno=1441, col_offset=15), [Continue( lineno=1442, col_offset=16)], [], lineno=1441, col_offset=12), If(Compare(Name('encoding', Load(), lineno=1443, col_offset=15), [In()], [Name('broken_unicode_with_streams', Load(), lineno=1443, col_offset=27)], lineno=1443, col_offset=15), [Continue( lineno=1444, col_offset=16)], [], lineno=1443, col_offset=12), Assign([Name('reader', Store(), lineno=1445, col_offset=12)], Call(Call(Attribute(Name('codecs', Load(), lineno=1445, col_offset=21), 'getreader', Load(), lineno=1445, col_offset=21), [Name('encoding', Load(), lineno=1445, col_offset=38)], [], None, None, lineno=1445, col_offset=21), [Call(Attribute(Name('StringIO', Load(), lineno=1445, col_offset=48), 'StringIO', Load(), lineno=1445, col_offset=48), [Call(Attribute(Name('s', Load(), lineno=1445, col_offset=66), 'encode', Load(), lineno=1445, col_offset=66), [Name('encoding', Load(), lineno=1445, col_offset=75)], [], None, None, lineno=1445, col_offset=66)], [], None, None, lineno=1445, col_offset=48)], [], None, None, lineno=1445, col_offset=21), lineno=1445, col_offset=12), For(Name('t', Store(), lineno=1446, col_offset=16), Call(Name('xrange', Load(), lineno=1446, col_offset=21), [Num(5, lineno=1446, col_offset=28)], [], None, None, lineno=1446, col_offset=21), [Expr(Call(Attribute(Name('reader', Load(), lineno=1448, col_offset=16), 'seek', Load(), lineno=1448, col_offset=16), [Num(0, lineno=1448, col_offset=28), Num(0, lineno=1448, col_offset=31)], [], None, None, lineno=1448, col_offset=16), lineno=1448, col_offset=16), Assign([Name('line', Store(), lineno=1449, col_offset=16)], Call(Attribute(Name('reader', Load(), lineno=1449, col_offset=23), 'readline', Load(), lineno=1449, col_offset=23), [], [], None, None, lineno=1449, col_offset=23), lineno=1449, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1450, col_offset=16), 'assertEqual', Load(), lineno=1450, col_offset=16), [Subscript(Name('s', Load(), lineno=1450, col_offset=33), Slice(None, Call(Name('len', Load(), lineno=1450, col_offset=36), [Name('line', Load(), lineno=1450, col_offset=40)], [], None, None, lineno=1450, col_offset=36), None), Load(), lineno=1450, col_offset=33), Name('line', Load(), lineno=1450, col_offset=48)], [], None, None, lineno=1450, col_offset=16), lineno=1450, col_offset=16)], [], lineno=1446, col_offset=12)], [], lineno=1440, col_offset=8)], [], lineno=1437, col_offset=4), FunctionDef('test_bad_decode_args', arguments([Name('self', Param(), lineno=1452, col_offset=29)], None, None, []), [For(Name('encoding', Store(), lineno=1453, col_offset=12), Name('all_unicode_encodings', Load(), lineno=1453, col_offset=24), [Assign([Name('decoder', Store(), lineno=1454, col_offset=12)], Call(Attribute(Name('codecs', Load(), lineno=1454, col_offset=22), 'getdecoder', Load(), lineno=1454, col_offset=22), [Name('encoding', Load(), lineno=1454, col_offset=40)], [], None, None, lineno=1454, col_offset=22), lineno=1454, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1455, col_offset=12), 'assertRaises', Load(), lineno=1455, col_offset=12), [Name('TypeError', Load(), lineno=1455, col_offset=30), Name('decoder', Load(), lineno=1455, col_offset=41)], [], None, None, lineno=1455, col_offset=12), lineno=1455, col_offset=12), If(Compare(Name('encoding', Load(), lineno=1456, col_offset=15), [NotIn()], [Tuple([Str('idna', lineno=1456, col_offset=32), Str('punycode', lineno=1456, col_offset=40)], Load(), lineno=1456, col_offset=32)], lineno=1456, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1457, col_offset=16), 'assertRaises', Load(), lineno=1457, col_offset=16), [Name('TypeError', Load(), lineno=1457, col_offset=34), Name('decoder', Load(), lineno=1457, col_offset=45), Num(42, lineno=1457, col_offset=54)], [], None, None, lineno=1457, col_offset=16), lineno=1457, col_offset=16)], [], lineno=1456, col_offset=12)], [], lineno=1453, col_offset=8)], [], lineno=1452, col_offset=4), FunctionDef('test_bad_encode_args', arguments([Name('self', Param(), lineno=1459, col_offset=29)], None, None, []), [For(Name('encoding', Store(), lineno=1460, col_offset=12), Name('all_unicode_encodings', Load(), lineno=1460, col_offset=24), [Assign([Name('encoder', Store(), lineno=1461, col_offset=12)], Call(Attribute(Name('codecs', Load(), lineno=1461, col_offset=22), 'getencoder', Load(), lineno=1461, col_offset=22), [Name('encoding', Load(), lineno=1461, col_offset=40)], [], None, None, lineno=1461, col_offset=22), lineno=1461, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1462, col_offset=12), 'assertRaises', Load(), lineno=1462, col_offset=12), [Name('TypeError', Load(), lineno=1462, col_offset=30), Name('encoder', Load(), lineno=1462, col_offset=41)], [], None, None, lineno=1462, col_offset=12), lineno=1462, col_offset=12)], [], lineno=1460, col_offset=8)], [], lineno=1459, col_offset=4), FunctionDef('test_encoding_map_type_initialized', arguments([Name('self', Param(), lineno=1464, col_offset=43)], None, None, []), [ImportFrom('encodings', [alias('cp1140', None)], 0, lineno=1465, col_offset=8), Assign([Name('table_type', Store(), lineno=1467, col_offset=8)], Call(Name('type', Load(), lineno=1467, col_offset=21), [Attribute(Name('cp1140', Load(), lineno=1467, col_offset=26), 'encoding_table', Load(), lineno=1467, col_offset=26)], [], None, None, lineno=1467, col_offset=21), lineno=1467, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1468, col_offset=8), 'assertEqual', Load(), lineno=1468, col_offset=8), [Name('table_type', Load(), lineno=1468, col_offset=25), Name('table_type', Load(), lineno=1468, col_offset=37)], [], None, None, lineno=1468, col_offset=8), lineno=1468, col_offset=8)], [], lineno=1464, col_offset=4)], [], lineno=1347, col_offset=0), ClassDef('BasicStrTest', [Attribute(Name('unittest', Load(), lineno=1470, col_offset=19), 'TestCase', Load(), lineno=1470, col_offset=19)], [FunctionDef('test_basics', arguments([Name('self', Param(), lineno=1471, col_offset=20)], None, None, []), [Assign([Name('s', Store(), lineno=1472, col_offset=8)], Str('abc123', lineno=1472, col_offset=12), lineno=1472, col_offset=8), For(Name('encoding', Store(), lineno=1473, col_offset=12), Name('all_string_encodings', Load(), lineno=1473, col_offset=24), [Assign([Tuple([Name('bytes', Store(), lineno=1474, col_offset=13), Name('size', Store(), lineno=1474, col_offset=20)], Store(), lineno=1474, col_offset=13)], Call(Call(Attribute(Name('codecs', Load(), lineno=1474, col_offset=28), 'getencoder', Load(), lineno=1474, col_offset=28), [Name('encoding', Load(), lineno=1474, col_offset=46)], [], None, None, lineno=1474, col_offset=28), [Name('s', Load(), lineno=1474, col_offset=56)], [], None, None, lineno=1474, col_offset=28), lineno=1474, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1475, col_offset=12), 'assertEqual', Load(), lineno=1475, col_offset=12), [Name('size', Load(), lineno=1475, col_offset=29), Call(Name('len', Load(), lineno=1475, col_offset=35), [Name('s', Load(), lineno=1475, col_offset=39)], [], None, None, lineno=1475, col_offset=35)], [], None, None, lineno=1475, col_offset=12), lineno=1475, col_offset=12), Assign([Tuple([Name('chars', Store(), lineno=1476, col_offset=13), Name('size', Store(), lineno=1476, col_offset=20)], Store(), lineno=1476, col_offset=13)], Call(Call(Attribute(Name('codecs', Load(), lineno=1476, col_offset=28), 'getdecoder', Load(), lineno=1476, col_offset=28), [Name('encoding', Load(), lineno=1476, col_offset=46)], [], None, None, lineno=1476, col_offset=28), [Name('bytes', Load(), lineno=1476, col_offset=56)], [], None, None, lineno=1476, col_offset=28), lineno=1476, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1477, col_offset=12), 'assertEqual', Load(), lineno=1477, col_offset=12), [Name('chars', Load(), lineno=1477, col_offset=29), Name('s', Load(), lineno=1477, col_offset=36), BinOp(Str('%r != %r (encoding=%r)', lineno=1477, col_offset=39), Mod(), Tuple([Name('chars', Load(), lineno=1477, col_offset=67), Name('s', Load(), lineno=1477, col_offset=74), Name('encoding', Load(), lineno=1477, col_offset=77)], Load(), lineno=1477, col_offset=67), lineno=1477, col_offset=39)], [], None, None, lineno=1477, col_offset=12), lineno=1477, col_offset=12)], [], lineno=1473, col_offset=8)], [], lineno=1471, col_offset=4)], [], lineno=1470, col_offset=0), ClassDef('CharmapTest', [Attribute(Name('unittest', Load(), lineno=1479, col_offset=18), 'TestCase', Load(), lineno=1479, col_offset=18)], [FunctionDef('test_decode_with_string_map', arguments([Name('self', Param(), lineno=1480, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1481, col_offset=8), 'assertEqual', Load(), lineno=1481, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1482, col_offset=12), 'charmap_decode', Load(), lineno=1482, col_offset=12), [Str('\x00\x01\x02', lineno=1482, col_offset=34), Str('strict', lineno=1482, col_offset=50), Str(u'abc', lineno=1482, col_offset=60)], [], None, None, lineno=1482, col_offset=12), Tuple([Str(u'abc', lineno=1483, col_offset=13), Num(3, lineno=1483, col_offset=21)], Load(), lineno=1483, col_offset=13)], [], None, None, lineno=1481, col_offset=8), lineno=1481, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1486, col_offset=8), 'assertEqual', Load(), lineno=1486, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1487, col_offset=12), 'charmap_decode', Load(), lineno=1487, col_offset=12), [Str('\x00\x01\x02', lineno=1487, col_offset=34), Str('replace', lineno=1487, col_offset=50), Str(u'ab', lineno=1487, col_offset=61)], [], None, None, lineno=1487, col_offset=12), Tuple([Str(u'ab\ufffd', lineno=1488, col_offset=13), Num(3, lineno=1488, col_offset=26)], Load(), lineno=1488, col_offset=13)], [], None, None, lineno=1486, col_offset=8), lineno=1486, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1491, col_offset=8), 'assertEqual', Load(), lineno=1491, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1492, col_offset=12), 'charmap_decode', Load(), lineno=1492, col_offset=12), [Str('\x00\x01\x02', lineno=1492, col_offset=34), Str('replace', lineno=1492, col_offset=50), Str(u'ab\ufffe', lineno=1492, col_offset=61)], [], None, None, lineno=1492, col_offset=12), Tuple([Str(u'ab\ufffd', lineno=1493, col_offset=13), Num(3, lineno=1493, col_offset=26)], Load(), lineno=1493, col_offset=13)], [], None, None, lineno=1491, col_offset=8), lineno=1491, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1496, col_offset=8), 'assertEqual', Load(), lineno=1496, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1497, col_offset=12), 'charmap_decode', Load(), lineno=1497, col_offset=12), [Str('\x00\x01\x02', lineno=1497, col_offset=34), Str('ignore', lineno=1497, col_offset=50), Str(u'ab', lineno=1497, col_offset=60)], [], None, None, lineno=1497, col_offset=12), Tuple([Str(u'ab', lineno=1498, col_offset=13), Num(3, lineno=1498, col_offset=20)], Load(), lineno=1498, col_offset=13)], [], None, None, lineno=1496, col_offset=8), lineno=1496, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1501, col_offset=8), 'assertEqual', Load(), lineno=1501, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1502, col_offset=12), 'charmap_decode', Load(), lineno=1502, col_offset=12), [Str('\x00\x01\x02', lineno=1502, col_offset=34), Str('ignore', lineno=1502, col_offset=50), Str(u'ab\ufffe', lineno=1502, col_offset=60)], [], None, None, lineno=1502, col_offset=12), Tuple([Str(u'ab', lineno=1503, col_offset=13), Num(3, lineno=1503, col_offset=20)], Load(), lineno=1503, col_offset=13)], [], None, None, lineno=1501, col_offset=8), lineno=1501, col_offset=8), Assign([Name('allbytes', Store(), lineno=1506, col_offset=8)], Call(Attribute(Str('', lineno=1506, col_offset=19), 'join', Load(), lineno=1506, col_offset=19), [GeneratorExp(Call(Name('chr', Load(), lineno=1506, col_offset=27), [Name('i', Load(), lineno=1506, col_offset=31)], [], None, None, lineno=1506, col_offset=27), [comprehension(Name('i', Store(), lineno=1506, col_offset=38), Call(Name('xrange', Load(), lineno=1506, col_offset=43), [Num(256, lineno=1506, col_offset=50)], [], None, None, lineno=1506, col_offset=43), [])], lineno=1506, col_offset=27)], [], None, None, lineno=1506, col_offset=19), lineno=1506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1507, col_offset=8), 'assertEqual', Load(), lineno=1507, col_offset=8), [Call(Attribute(Name('codecs', Load(), lineno=1508, col_offset=12), 'charmap_decode', Load(), lineno=1508, col_offset=12), [Name('allbytes', Load(), lineno=1508, col_offset=34), Str('ignore', lineno=1508, col_offset=44), Str(u'', lineno=1508, col_offset=54)], [], None, None, lineno=1508, col_offset=12), Tuple([Str(u'', lineno=1509, col_offset=13), Call(Name('len', Load(), lineno=1509, col_offset=18), [Name('allbytes', Load(), lineno=1509, col_offset=22)], [], None, None, lineno=1509, col_offset=18)], Load(), lineno=1509, col_offset=13)], [], None, None, lineno=1507, col_offset=8), lineno=1507, col_offset=8)], [], lineno=1480, col_offset=4)], [], lineno=1479, col_offset=0), ClassDef('WithStmtTest', [Attribute(Name('unittest', Load(), lineno=1512, col_offset=19), 'TestCase', Load(), lineno=1512, col_offset=19)], [FunctionDef('test_encodedfile', arguments([Name('self', Param(), lineno=1513, col_offset=25)], None, None, []), [Assign([Name('f', Store(), lineno=1514, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1514, col_offset=12), 'StringIO', Load(), lineno=1514, col_offset=12), [Str('\xc3\xbc', lineno=1514, col_offset=30)], [], None, None, lineno=1514, col_offset=12), lineno=1514, col_offset=8), With(Call(Attribute(Name('codecs', Load(), lineno=1515, col_offset=13), 'EncodedFile', Load(), lineno=1515, col_offset=13), [Name('f', Load(), lineno=1515, col_offset=32), Str('latin-1', lineno=1515, col_offset=35), Str('utf-8', lineno=1515, col_offset=46)], [], None, None, lineno=1515, col_offset=13), Name('ef', Store(), lineno=1515, col_offset=58), [Expr(Call(Attribute(Name('self', Load(), lineno=1516, col_offset=12), 'assertEqual', Load(), lineno=1516, col_offset=12), [Call(Attribute(Name('ef', Load(), lineno=1516, col_offset=29), 'read', Load(), lineno=1516, col_offset=29), [], [], None, None, lineno=1516, col_offset=29), Str('\xfc', lineno=1516, col_offset=40)], [], None, None, lineno=1516, col_offset=12), lineno=1516, col_offset=12)], lineno=1515, col_offset=13)], [], lineno=1513, col_offset=4), FunctionDef('test_streamreaderwriter', arguments([Name('self', Param(), lineno=1518, col_offset=32)], None, None, []), [Assign([Name('f', Store(), lineno=1519, col_offset=8)], Call(Attribute(Name('StringIO', Load(), lineno=1519, col_offset=12), 'StringIO', Load(), lineno=1519, col_offset=12), [Str('\xc3\xbc', lineno=1519, col_offset=30)], [], None, None, lineno=1519, col_offset=12), lineno=1519, col_offset=8), Assign([Name('info', Store(), lineno=1520, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=1520, col_offset=15), 'lookup', Load(), lineno=1520, col_offset=15), [Str('utf-8', lineno=1520, col_offset=29)], [], None, None, lineno=1520, col_offset=15), lineno=1520, col_offset=8), With(Call(Attribute(Name('codecs', Load(), lineno=1521, col_offset=13), 'StreamReaderWriter', Load(), lineno=1521, col_offset=13), [Name('f', Load(), lineno=1521, col_offset=39), Attribute(Name('info', Load(), lineno=1521, col_offset=42), 'streamreader', Load(), lineno=1521, col_offset=42), Attribute(Name('info', Load(), lineno=1522, col_offset=39), 'streamwriter', Load(), lineno=1522, col_offset=39), Str('strict', lineno=1522, col_offset=58)], [], None, None, lineno=1521, col_offset=13), Name('srw', Store(), lineno=1522, col_offset=71), [Expr(Call(Attribute(Name('self', Load(), lineno=1523, col_offset=12), 'assertEqual', Load(), lineno=1523, col_offset=12), [Call(Attribute(Name('srw', Load(), lineno=1523, col_offset=29), 'read', Load(), lineno=1523, col_offset=29), [], [], None, None, lineno=1523, col_offset=29), Str(u'\xfc', lineno=1523, col_offset=41)], [], None, None, lineno=1523, col_offset=12), lineno=1523, col_offset=12)], lineno=1521, col_offset=13)], [], lineno=1518, col_offset=4)], [], lineno=1512, col_offset=0), ClassDef('BomTest', [Attribute(Name('unittest', Load(), lineno=1526, col_offset=14), 'TestCase', Load(), lineno=1526, col_offset=14)], [FunctionDef('test_seek0', arguments([Name('self', Param(), lineno=1527, col_offset=19)], None, None, []), [Assign([Name('data', Store(), lineno=1528, col_offset=8)], Str(u'1234567890', lineno=1528, col_offset=15), lineno=1528, col_offset=8), Assign([Name('tests', Store(), lineno=1529, col_offset=8)], Tuple([Str('utf-16', lineno=1529, col_offset=17), Str('utf-16-le', lineno=1530, col_offset=17), Str('utf-16-be', lineno=1531, col_offset=17), Str('utf-32', lineno=1532, col_offset=17), Str('utf-32-le', lineno=1533, col_offset=17), Str('utf-32-be', lineno=1534, col_offset=17)], Load(), lineno=1529, col_offset=17), lineno=1529, col_offset=8), For(Name('encoding', Store(), lineno=1535, col_offset=12), Name('tests', Load(), lineno=1535, col_offset=24), [With(Call(Attribute(Name('codecs', Load(), lineno=1537, col_offset=17), 'open', Load(), lineno=1537, col_offset=17), [Attribute(Name('test_support', Load(), lineno=1537, col_offset=29), 'TESTFN', Load(), lineno=1537, col_offset=29), Str('w+', lineno=1537, col_offset=50)], [keyword('encoding', Name('encoding', Load(), lineno=1537, col_offset=65))], None, None, lineno=1537, col_offset=17), Name('f', Store(), lineno=1537, col_offset=78), [Expr(Call(Attribute(Name('f', Load(), lineno=1538, col_offset=16), 'write', Load(), lineno=1538, col_offset=16), [Name('data', Load(), lineno=1538, col_offset=24)], [], None, None, lineno=1538, col_offset=16), lineno=1538, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1539, col_offset=16), 'write', Load(), lineno=1539, col_offset=16), [Name('data', Load(), lineno=1539, col_offset=24)], [], None, None, lineno=1539, col_offset=16), lineno=1539, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1540, col_offset=16), 'seek', Load(), lineno=1540, col_offset=16), [Num(0, lineno=1540, col_offset=23)], [], None, None, lineno=1540, col_offset=16), lineno=1540, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1541, col_offset=16), 'assertEqual', Load(), lineno=1541, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1541, col_offset=33), 'read', Load(), lineno=1541, col_offset=33), [], [], None, None, lineno=1541, col_offset=33), BinOp(Name('data', Load(), lineno=1541, col_offset=43), Mult(), Num(2, lineno=1541, col_offset=50), lineno=1541, col_offset=43)], [], None, None, lineno=1541, col_offset=16), lineno=1541, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1542, col_offset=16), 'seek', Load(), lineno=1542, col_offset=16), [Num(0, lineno=1542, col_offset=23)], [], None, None, lineno=1542, col_offset=16), lineno=1542, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1543, col_offset=16), 'assertEqual', Load(), lineno=1543, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1543, col_offset=33), 'read', Load(), lineno=1543, col_offset=33), [], [], None, None, lineno=1543, col_offset=33), BinOp(Name('data', Load(), lineno=1543, col_offset=43), Mult(), Num(2, lineno=1543, col_offset=50), lineno=1543, col_offset=43)], [], None, None, lineno=1543, col_offset=16), lineno=1543, col_offset=16)], lineno=1537, col_offset=17), With(Call(Attribute(Name('codecs', Load(), lineno=1546, col_offset=17), 'open', Load(), lineno=1546, col_offset=17), [Attribute(Name('test_support', Load(), lineno=1546, col_offset=29), 'TESTFN', Load(), lineno=1546, col_offset=29), Str('w+', lineno=1546, col_offset=50)], [keyword('encoding', Name('encoding', Load(), lineno=1546, col_offset=65))], None, None, lineno=1546, col_offset=17), Name('f', Store(), lineno=1546, col_offset=78), [Expr(Call(Attribute(Name('f', Load(), lineno=1547, col_offset=16), 'write', Load(), lineno=1547, col_offset=16), [Subscript(Name('data', Load(), lineno=1547, col_offset=24), Index(Num(0, lineno=1547, col_offset=29)), Load(), lineno=1547, col_offset=24)], [], None, None, lineno=1547, col_offset=16), lineno=1547, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1548, col_offset=16), 'assertNotEqual', Load(), lineno=1548, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1548, col_offset=36), 'tell', Load(), lineno=1548, col_offset=36), [], [], None, None, lineno=1548, col_offset=36), Num(0, lineno=1548, col_offset=46)], [], None, None, lineno=1548, col_offset=16), lineno=1548, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1549, col_offset=16), 'seek', Load(), lineno=1549, col_offset=16), [Num(0, lineno=1549, col_offset=23)], [], None, None, lineno=1549, col_offset=16), lineno=1549, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1550, col_offset=16), 'write', Load(), lineno=1550, col_offset=16), [Name('data', Load(), lineno=1550, col_offset=24)], [], None, None, lineno=1550, col_offset=16), lineno=1550, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1551, col_offset=16), 'seek', Load(), lineno=1551, col_offset=16), [Num(0, lineno=1551, col_offset=23)], [], None, None, lineno=1551, col_offset=16), lineno=1551, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1552, col_offset=16), 'assertEqual', Load(), lineno=1552, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1552, col_offset=33), 'read', Load(), lineno=1552, col_offset=33), [], [], None, None, lineno=1552, col_offset=33), Name('data', Load(), lineno=1552, col_offset=43)], [], None, None, lineno=1552, col_offset=16), lineno=1552, col_offset=16)], lineno=1546, col_offset=17), With(Call(Attribute(Name('codecs', Load(), lineno=1555, col_offset=17), 'open', Load(), lineno=1555, col_offset=17), [Attribute(Name('test_support', Load(), lineno=1555, col_offset=29), 'TESTFN', Load(), lineno=1555, col_offset=29), Str('w+', lineno=1555, col_offset=50)], [keyword('encoding', Name('encoding', Load(), lineno=1555, col_offset=65))], None, None, lineno=1555, col_offset=17), Name('f', Store(), lineno=1555, col_offset=78), [Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1556, col_offset=16), 'writer', Load(), lineno=1556, col_offset=16), 'write', Load(), lineno=1556, col_offset=16), [Subscript(Name('data', Load(), lineno=1556, col_offset=31), Index(Num(0, lineno=1556, col_offset=36)), Load(), lineno=1556, col_offset=31)], [], None, None, lineno=1556, col_offset=16), lineno=1556, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1557, col_offset=16), 'assertNotEqual', Load(), lineno=1557, col_offset=16), [Call(Attribute(Attribute(Name('f', Load(), lineno=1557, col_offset=36), 'writer', Load(), lineno=1557, col_offset=36), 'tell', Load(), lineno=1557, col_offset=36), [], [], None, None, lineno=1557, col_offset=36), Num(0, lineno=1557, col_offset=53)], [], None, None, lineno=1557, col_offset=16), lineno=1557, col_offset=16), Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1558, col_offset=16), 'writer', Load(), lineno=1558, col_offset=16), 'seek', Load(), lineno=1558, col_offset=16), [Num(0, lineno=1558, col_offset=30)], [], None, None, lineno=1558, col_offset=16), lineno=1558, col_offset=16), Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1559, col_offset=16), 'writer', Load(), lineno=1559, col_offset=16), 'write', Load(), lineno=1559, col_offset=16), [Name('data', Load(), lineno=1559, col_offset=31)], [], None, None, lineno=1559, col_offset=16), lineno=1559, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1560, col_offset=16), 'seek', Load(), lineno=1560, col_offset=16), [Num(0, lineno=1560, col_offset=23)], [], None, None, lineno=1560, col_offset=16), lineno=1560, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1561, col_offset=16), 'assertEqual', Load(), lineno=1561, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1561, col_offset=33), 'read', Load(), lineno=1561, col_offset=33), [], [], None, None, lineno=1561, col_offset=33), Name('data', Load(), lineno=1561, col_offset=43)], [], None, None, lineno=1561, col_offset=16), lineno=1561, col_offset=16)], lineno=1555, col_offset=17), With(Call(Attribute(Name('codecs', Load(), lineno=1565, col_offset=17), 'open', Load(), lineno=1565, col_offset=17), [Attribute(Name('test_support', Load(), lineno=1565, col_offset=29), 'TESTFN', Load(), lineno=1565, col_offset=29), Str('w+', lineno=1565, col_offset=50)], [keyword('encoding', Name('encoding', Load(), lineno=1565, col_offset=65))], None, None, lineno=1565, col_offset=17), Name('f', Store(), lineno=1565, col_offset=78), [Expr(Call(Attribute(Name('f', Load(), lineno=1566, col_offset=16), 'write', Load(), lineno=1566, col_offset=16), [Name('data', Load(), lineno=1566, col_offset=24)], [], None, None, lineno=1566, col_offset=16), lineno=1566, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1567, col_offset=16), 'seek', Load(), lineno=1567, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1567, col_offset=23), 'tell', Load(), lineno=1567, col_offset=23), [], [], None, None, lineno=1567, col_offset=23)], [], None, None, lineno=1567, col_offset=16), lineno=1567, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1568, col_offset=16), 'write', Load(), lineno=1568, col_offset=16), [Name('data', Load(), lineno=1568, col_offset=24)], [], None, None, lineno=1568, col_offset=16), lineno=1568, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1569, col_offset=16), 'seek', Load(), lineno=1569, col_offset=16), [Num(0, lineno=1569, col_offset=23)], [], None, None, lineno=1569, col_offset=16), lineno=1569, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1570, col_offset=16), 'assertEqual', Load(), lineno=1570, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1570, col_offset=33), 'read', Load(), lineno=1570, col_offset=33), [], [], None, None, lineno=1570, col_offset=33), BinOp(Name('data', Load(), lineno=1570, col_offset=43), Mult(), Num(2, lineno=1570, col_offset=50), lineno=1570, col_offset=43)], [], None, None, lineno=1570, col_offset=16), lineno=1570, col_offset=16)], lineno=1565, col_offset=17), With(Call(Attribute(Name('codecs', Load(), lineno=1574, col_offset=17), 'open', Load(), lineno=1574, col_offset=17), [Attribute(Name('test_support', Load(), lineno=1574, col_offset=29), 'TESTFN', Load(), lineno=1574, col_offset=29), Str('w+', lineno=1574, col_offset=50)], [keyword('encoding', Name('encoding', Load(), lineno=1574, col_offset=65))], None, None, lineno=1574, col_offset=17), Name('f', Store(), lineno=1574, col_offset=78), [Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1575, col_offset=16), 'writer', Load(), lineno=1575, col_offset=16), 'write', Load(), lineno=1575, col_offset=16), [Name('data', Load(), lineno=1575, col_offset=31)], [], None, None, lineno=1575, col_offset=16), lineno=1575, col_offset=16), Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1576, col_offset=16), 'writer', Load(), lineno=1576, col_offset=16), 'seek', Load(), lineno=1576, col_offset=16), [Call(Attribute(Attribute(Name('f', Load(), lineno=1576, col_offset=30), 'writer', Load(), lineno=1576, col_offset=30), 'tell', Load(), lineno=1576, col_offset=30), [], [], None, None, lineno=1576, col_offset=30)], [], None, None, lineno=1576, col_offset=16), lineno=1576, col_offset=16), Expr(Call(Attribute(Attribute(Name('f', Load(), lineno=1577, col_offset=16), 'writer', Load(), lineno=1577, col_offset=16), 'write', Load(), lineno=1577, col_offset=16), [Name('data', Load(), lineno=1577, col_offset=31)], [], None, None, lineno=1577, col_offset=16), lineno=1577, col_offset=16), Expr(Call(Attribute(Name('f', Load(), lineno=1578, col_offset=16), 'seek', Load(), lineno=1578, col_offset=16), [Num(0, lineno=1578, col_offset=23)], [], None, None, lineno=1578, col_offset=16), lineno=1578, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1579, col_offset=16), 'assertEqual', Load(), lineno=1579, col_offset=16), [Call(Attribute(Name('f', Load(), lineno=1579, col_offset=33), 'read', Load(), lineno=1579, col_offset=33), [], [], None, None, lineno=1579, col_offset=33), BinOp(Name('data', Load(), lineno=1579, col_offset=43), Mult(), Num(2, lineno=1579, col_offset=50), lineno=1579, col_offset=43)], [], None, None, lineno=1579, col_offset=16), lineno=1579, col_offset=16)], lineno=1574, col_offset=17)], [], lineno=1535, col_offset=8)], [], lineno=1527, col_offset=4)], [], lineno=1526, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=1583, col_offset=4), 'run_unittest', Load(), lineno=1583, col_offset=4), [Name('UTF32Test', Load(), lineno=1584, col_offset=8), Name('UTF32LETest', Load(), lineno=1585, col_offset=8), Name('UTF32BETest', Load(), lineno=1586, col_offset=8), Name('UTF16Test', Load(), lineno=1587, col_offset=8), Name('UTF16LETest', Load(), lineno=1588, col_offset=8), Name('UTF16BETest', Load(), lineno=1589, col_offset=8), Name('UTF8Test', Load(), lineno=1590, col_offset=8), Name('UTF8SigTest', Load(), lineno=1591, col_offset=8), Name('UTF7Test', Load(), lineno=1592, col_offset=8), Name('UTF16ExTest', Load(), lineno=1593, col_offset=8), Name('ReadBufferTest', Load(), lineno=1594, col_offset=8), Name('CharBufferTest', Load(), lineno=1595, col_offset=8), Name('EscapeDecodeTest', Load(), lineno=1596, col_offset=8), Name('RecodingTest', Load(), lineno=1597, col_offset=8), Name('PunycodeTest', Load(), lineno=1598, col_offset=8), Name('UnicodeInternalTest', Load(), lineno=1599, col_offset=8), Name('NameprepTest', Load(), lineno=1600, col_offset=8), Name('IDNACodecTest', Load(), lineno=1601, col_offset=8), Name('CodecsModuleTest', Load(), lineno=1602, col_offset=8), Name('StreamReaderTest', Load(), lineno=1603, col_offset=8), Name('EncodedFileTest', Load(), lineno=1604, col_offset=8), Name('Str2StrTest', Load(), lineno=1605, col_offset=8), Name('BasicUnicodeTest', Load(), lineno=1606, col_offset=8), Name('BasicStrTest', Load(), lineno=1607, col_offset=8), Name('CharmapTest', Load(), lineno=1608, col_offset=8), Name('WithStmtTest', Load(), lineno=1609, col_offset=8), Name('BomTest', Load(), lineno=1610, col_offset=8)], [], None, None, lineno=1583, col_offset=4), lineno=1583, col_offset=4)], [], lineno=1582, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1614, col_offset=3), [Eq()], [Str('__main__', lineno=1614, col_offset=15)], lineno=1614, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=1615, col_offset=4), [], [], None, None, lineno=1615, col_offset=4), lineno=1615, col_offset=4)], [], lineno=1614, col_offset=0)])
