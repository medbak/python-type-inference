Module([Import([alias('os', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), ImportFrom('Tkinter', [alias('Tcl', None), alias('TclError', None)], 0, lineno=5, col_offset=0), Expr(Call(Attribute(Name('test_support', Load(), lineno=7, col_offset=0), 'requires', Load(), lineno=7, col_offset=0), [Str('gui', lineno=7, col_offset=22)], [], None, None, lineno=7, col_offset=0), lineno=7, col_offset=0), ClassDef('TkLoadTest', [Attribute(Name('unittest', Load(), lineno=9, col_offset=17), 'TestCase', Load(), lineno=9, col_offset=17)], [FunctionDef('testLoadTk', arguments([Name('self', Param(), lineno=12, col_offset=19)], None, None, []), [Assign([Name('tcl', Store(), lineno=13, col_offset=8)], Call(Name('Tcl', Load(), lineno=13, col_offset=14), [], [], None, None, lineno=13, col_offset=14), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertRaises', Load(), lineno=14, col_offset=8), [Name('TclError', Load(), lineno=14, col_offset=26), Attribute(Name('tcl', Load(), lineno=14, col_offset=35), 'winfo_geometry', Load(), lineno=14, col_offset=35)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8), Expr(Call(Attribute(Name('tcl', Load(), lineno=15, col_offset=8), 'loadtk', Load(), lineno=15, col_offset=8), [], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertEqual', Load(), lineno=16, col_offset=8), [Str('1x1+0+0', lineno=16, col_offset=25), Call(Attribute(Name('tcl', Load(), lineno=16, col_offset=36), 'winfo_geometry', Load(), lineno=16, col_offset=36), [], [], None, None, lineno=16, col_offset=36)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Attribute(Name('tcl', Load(), lineno=17, col_offset=8), 'destroy', Load(), lineno=17, col_offset=8), [], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=11, col_offset=5), 'skipIf', Load(), lineno=11, col_offset=5), [Compare(Str('DISPLAY', lineno=11, col_offset=21), [NotIn()], [Attribute(Name('os', Load(), lineno=11, col_offset=38), 'environ', Load(), lineno=11, col_offset=38)], lineno=11, col_offset=21), Str('No $DISPLAY set.', lineno=11, col_offset=50)], [], None, None, lineno=11, col_offset=5)], lineno=11, col_offset=4), FunctionDef('testLoadTkFailure', arguments([Name('self', Param(), lineno=19, col_offset=26)], None, None, []), [Assign([Name('old_display', Store(), lineno=20, col_offset=8)], Name('None', Load(), lineno=20, col_offset=22), lineno=20, col_offset=8), If(Call(Attribute(Attribute(Name('sys', Load(), lineno=21, col_offset=11), 'platform', Load(), lineno=21, col_offset=11), 'startswith', Load(), lineno=21, col_offset=11), [Tuple([Str('win', lineno=21, col_offset=36), Str('darwin', lineno=21, col_offset=43), Str('cygwin', lineno=21, col_offset=53)], Load(), lineno=21, col_offset=36)], [], None, None, lineno=21, col_offset=11), [Return(None, lineno=26, col_offset=12)], [], lineno=21, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=27, col_offset=13), 'EnvironmentVarGuard', Load(), lineno=27, col_offset=13), [], [], None, None, lineno=27, col_offset=13), Name('env', Store(), lineno=27, col_offset=51), [If(Compare(Str('DISPLAY', lineno=28, col_offset=15), [In()], [Attribute(Name('os', Load(), lineno=28, col_offset=28), 'environ', Load(), lineno=28, col_offset=28)], lineno=28, col_offset=15), [Delete([Subscript(Name('env', Load(), lineno=29, col_offset=20), Index(Str('DISPLAY', lineno=29, col_offset=24)), Del(), lineno=29, col_offset=20)], lineno=29, col_offset=16), Assign([Name('display', Store(), lineno=34, col_offset=16)], Call(Attribute(Call(Attribute(Call(Attribute(Name('os', Load(), lineno=34, col_offset=26), 'popen', Load(), lineno=34, col_offset=26), [Str('echo $DISPLAY', lineno=34, col_offset=35)], [], None, None, lineno=34, col_offset=26), 'read', Load(), lineno=34, col_offset=26), [], [], None, None, lineno=34, col_offset=26), 'strip', Load(), lineno=34, col_offset=26), [], [], None, None, lineno=34, col_offset=26), lineno=34, col_offset=16), If(Name('display', Load(), lineno=35, col_offset=19), [Return(None, lineno=36, col_offset=20)], [], lineno=35, col_offset=16)], [], lineno=28, col_offset=12), Assign([Name('tcl', Store(), lineno=38, col_offset=12)], Call(Name('Tcl', Load(), lineno=38, col_offset=18), [], [], None, None, lineno=38, col_offset=18), lineno=38, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'assertRaises', Load(), lineno=39, col_offset=12), [Name('TclError', Load(), lineno=39, col_offset=30), Attribute(Name('tcl', Load(), lineno=39, col_offset=40), 'winfo_geometry', Load(), lineno=39, col_offset=40)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=12), 'assertRaises', Load(), lineno=40, col_offset=12), [Name('TclError', Load(), lineno=40, col_offset=30), Attribute(Name('tcl', Load(), lineno=40, col_offset=40), 'loadtk', Load(), lineno=40, col_offset=40)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=12)], lineno=27, col_offset=13)], [], lineno=19, col_offset=4)], [], lineno=9, col_offset=0), Assign([Name('tests_gui', Store(), lineno=42, col_offset=0)], Tuple([Name('TkLoadTest', Load(), lineno=42, col_offset=13)], Load(), lineno=42, col_offset=13), lineno=42, col_offset=0), If(Compare(Name('__name__', Load(), lineno=44, col_offset=3), [Eq()], [Str('__main__', lineno=44, col_offset=15)], lineno=44, col_offset=3), [Expr(Call(Attribute(Name('test_support', Load(), lineno=45, col_offset=4), 'run_unittest', Load(), lineno=45, col_offset=4), [], [], Name('tests_gui', Load(), lineno=45, col_offset=31), None, lineno=45, col_offset=4), lineno=45, col_offset=4)], [], lineno=44, col_offset=0)])
