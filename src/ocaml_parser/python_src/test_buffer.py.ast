Module([Expr(Str('Unit tests for buffer objects.\n\nFor now, tests just new or changed functionality.\n\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('unittest', None)], lineno=7, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=8, col_offset=0), ClassDef('BufferTests', [Attribute(Name('unittest', Load(), lineno=10, col_offset=18), 'TestCase', Load(), lineno=10, col_offset=18)], [FunctionDef('test_extended_getslice', arguments([Name('self', Param(), lineno=12, col_offset=31)], None, None, []), [Assign([Name('s', Store(), lineno=14, col_offset=8)], Call(Attribute(Str('', lineno=14, col_offset=12), 'join', Load(), lineno=14, col_offset=12), [GeneratorExp(Call(Name('chr', Load(), lineno=14, col_offset=20), [Name('c', Load(), lineno=14, col_offset=24)], [], None, None, lineno=14, col_offset=20), [comprehension(Name('c', Store(), lineno=14, col_offset=31), Call(Name('list', Load(), lineno=14, col_offset=36), [Call(Name('range', Load(), lineno=14, col_offset=41), [Num(255, lineno=14, col_offset=47), Num(-1, lineno=14, col_offset=53), Num(-1, lineno=14, col_offset=57)], [], None, None, lineno=14, col_offset=41)], [], None, None, lineno=14, col_offset=36), [])], lineno=14, col_offset=20)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=8), Assign([Name('b', Store(), lineno=15, col_offset=8)], Call(Name('buffer', Load(), lineno=15, col_offset=12), [Name('s', Load(), lineno=15, col_offset=19)], [], None, None, lineno=15, col_offset=12), lineno=15, col_offset=8), Assign([Name('indices', Store(), lineno=16, col_offset=8)], Tuple([Num(0, lineno=16, col_offset=19), Name('None', Load(), lineno=16, col_offset=22), Num(1, lineno=16, col_offset=28), Num(3, lineno=16, col_offset=31), Num(19, lineno=16, col_offset=34), Num(300, lineno=16, col_offset=38), Num(-1, lineno=16, col_offset=44), Num(-2, lineno=16, col_offset=48), Num(-31, lineno=16, col_offset=52), Num(-300, lineno=16, col_offset=57)], Load(), lineno=16, col_offset=19), lineno=16, col_offset=8), For(Name('start', Store(), lineno=17, col_offset=12), Name('indices', Load(), lineno=17, col_offset=21), [For(Name('stop', Store(), lineno=18, col_offset=16), Name('indices', Load(), lineno=18, col_offset=24), [For(Name('step', Store(), lineno=20, col_offset=20), Subscript(Name('indices', Load(), lineno=20, col_offset=28), Slice(Num(1, lineno=20, col_offset=36), None, None), Load(), lineno=20, col_offset=28), [Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=20), 'assertEqual', Load(), lineno=21, col_offset=20), [Subscript(Name('b', Load(), lineno=21, col_offset=37), Slice(Name('start', Load(), lineno=21, col_offset=39), Name('stop', Load(), lineno=21, col_offset=45), Name('step', Load(), lineno=21, col_offset=50)), Load(), lineno=21, col_offset=37), Subscript(Name('s', Load(), lineno=22, col_offset=37), Slice(Name('start', Load(), lineno=22, col_offset=39), Name('stop', Load(), lineno=22, col_offset=45), Name('step', Load(), lineno=22, col_offset=50)), Load(), lineno=22, col_offset=37)], [], None, None, lineno=21, col_offset=20), lineno=21, col_offset=20)], [], lineno=20, col_offset=16)], [], lineno=18, col_offset=12)], [], lineno=17, col_offset=8)], [], lineno=12, col_offset=4)], [], lineno=10, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=26, col_offset=9), 'check_py3k_warnings', Load(), lineno=26, col_offset=9), [Tuple([Str('buffer.. not supported', lineno=26, col_offset=43), Name('DeprecationWarning', Load(), lineno=27, col_offset=43)], Load(), lineno=26, col_offset=43)], [], None, None, lineno=26, col_offset=9), None, [Expr(Call(Attribute(Name('test_support', Load(), lineno=28, col_offset=8), 'run_unittest', Load(), lineno=28, col_offset=8), [Name('BufferTests', Load(), lineno=28, col_offset=34)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], lineno=26, col_offset=9)], [], lineno=25, col_offset=0), If(Compare(Name('__name__', Load(), lineno=30, col_offset=3), [Eq()], [Str('__main__', lineno=30, col_offset=15)], lineno=30, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=31, col_offset=4), [], [], None, None, lineno=31, col_offset=4), lineno=31, col_offset=4)], [], lineno=30, col_offset=0)])
