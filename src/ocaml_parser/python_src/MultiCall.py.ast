Module([Expr(Str('\nMultiCall - a class which inherits its methods from a Tkinter widget (Text, for\nexample), but enables multiple calls of functions per virtual event - all\nmatching events will be called, not only the most specific one. This is done\nby wrapping the event functions - event_add, event_delete and event_info.\nMultiCall recognizes only a subset of legal event sequences. Sequences which\nare not recognized are treated by the original Tk handling mechanism. A\nmore-specific event will be called before a less-specific event.\n\nThe recognized sequences are complete one-event sequences (no emacs-style\nCtrl-X Ctrl-C, no shortcuts like <3>), for all types of events.\nKey/Button Press/Release events can have modifiers.\nThe recognized modifiers are Shift, Control, Option and Command for Mac, and\nControl, Alt, Shift, Meta/M for other platforms.\n\nFor all events which were handled by MultiCall, a new member is added to the\nevent instance passed to the binded functions - mc_type. This is one of the\nevent type constants defined in this module (such as MC_KEYPRESS).\nFor Key/Button events (which are handled by MultiCall and may receive\nmodifiers), another member is added - mc_state. This member gives the state\nof the recognized modifiers, as a combination of the modifier constants\nalso defined in this module (for example, MC_SHIFT).\nUsing these members is absolutely portable.\n\nThe order by which events are called is defined by these rules:\n1. A more-specific event will be called before a less-specific event.\n2. A recently-binded event will be called before a previously-binded event,\n   unless this conflicts with the first rule.\nEach function will be called at most once for each event.\n', lineno=30, col_offset=-1), lineno=30, col_offset=-1), Import([alias('sys', None)], lineno=32, col_offset=0), Import([alias('string', None)], lineno=33, col_offset=0), Import([alias('re', None)], lineno=34, col_offset=0), Import([alias('Tkinter', None)], lineno=35, col_offset=0), ImportFrom('idlelib', [alias('macosxSupport', None)], 0, lineno=36, col_offset=0), Assign([Name('MC_KEYPRESS', Store(), lineno=39, col_offset=0)], Num(0, lineno=39, col_offset=12), lineno=39, col_offset=0), Assign([Name('MC_KEYRELEASE', Store(), lineno=39, col_offset=15)], Num(1, lineno=39, col_offset=29), lineno=39, col_offset=15), Assign([Name('MC_BUTTONPRESS', Store(), lineno=39, col_offset=32)], Num(2, lineno=39, col_offset=47), lineno=39, col_offset=32), Assign([Name('MC_BUTTONRELEASE', Store(), lineno=39, col_offset=50)], Num(3, lineno=39, col_offset=67), lineno=39, col_offset=50), Assign([Name('MC_ACTIVATE', Store(), lineno=40, col_offset=0)], Num(4, lineno=40, col_offset=12), lineno=40, col_offset=0), Assign([Name('MC_CIRCULATE', Store(), lineno=40, col_offset=15)], Num(5, lineno=40, col_offset=28), lineno=40, col_offset=15), Assign([Name('MC_COLORMAP', Store(), lineno=40, col_offset=31)], Num(6, lineno=40, col_offset=43), lineno=40, col_offset=31), Assign([Name('MC_CONFIGURE', Store(), lineno=40, col_offset=46)], Num(7, lineno=40, col_offset=59), lineno=40, col_offset=46), Assign([Name('MC_DEACTIVATE', Store(), lineno=41, col_offset=0)], Num(8, lineno=41, col_offset=14), lineno=41, col_offset=0), Assign([Name('MC_DESTROY', Store(), lineno=41, col_offset=17)], Num(9, lineno=41, col_offset=28), lineno=41, col_offset=17), Assign([Name('MC_ENTER', Store(), lineno=41, col_offset=31)], Num(10, lineno=41, col_offset=40), lineno=41, col_offset=31), Assign([Name('MC_EXPOSE', Store(), lineno=41, col_offset=44)], Num(11, lineno=41, col_offset=54), lineno=41, col_offset=44), Assign([Name('MC_FOCUSIN', Store(), lineno=41, col_offset=58)], Num(12, lineno=41, col_offset=69), lineno=41, col_offset=58), Assign([Name('MC_FOCUSOUT', Store(), lineno=42, col_offset=0)], Num(13, lineno=42, col_offset=12), lineno=42, col_offset=0), Assign([Name('MC_GRAVITY', Store(), lineno=42, col_offset=16)], Num(14, lineno=42, col_offset=27), lineno=42, col_offset=16), Assign([Name('MC_LEAVE', Store(), lineno=42, col_offset=31)], Num(15, lineno=42, col_offset=40), lineno=42, col_offset=31), Assign([Name('MC_MAP', Store(), lineno=42, col_offset=44)], Num(16, lineno=42, col_offset=51), lineno=42, col_offset=44), Assign([Name('MC_MOTION', Store(), lineno=42, col_offset=55)], Num(17, lineno=42, col_offset=65), lineno=42, col_offset=55), Assign([Name('MC_MOUSEWHEEL', Store(), lineno=43, col_offset=0)], Num(18, lineno=43, col_offset=14), lineno=43, col_offset=0), Assign([Name('MC_PROPERTY', Store(), lineno=43, col_offset=18)], Num(19, lineno=43, col_offset=30), lineno=43, col_offset=18), Assign([Name('MC_REPARENT', Store(), lineno=43, col_offset=34)], Num(20, lineno=43, col_offset=46), lineno=43, col_offset=34), Assign([Name('MC_UNMAP', Store(), lineno=43, col_offset=50)], Num(21, lineno=43, col_offset=59), lineno=43, col_offset=50), Assign([Name('MC_VISIBILITY', Store(), lineno=43, col_offset=63)], Num(22, lineno=43, col_offset=77), lineno=43, col_offset=63), Assign([Name('MC_SHIFT', Store(), lineno=45, col_offset=0)], BinOp(Num(1, lineno=45, col_offset=11), LShift(), Num(0, lineno=45, col_offset=14), lineno=45, col_offset=11), lineno=45, col_offset=0), Assign([Name('MC_CONTROL', Store(), lineno=45, col_offset=17)], BinOp(Num(1, lineno=45, col_offset=30), LShift(), Num(2, lineno=45, col_offset=33), lineno=45, col_offset=30), lineno=45, col_offset=17), Assign([Name('MC_ALT', Store(), lineno=45, col_offset=36)], BinOp(Num(1, lineno=45, col_offset=45), LShift(), Num(3, lineno=45, col_offset=48), lineno=45, col_offset=45), lineno=45, col_offset=36), Assign([Name('MC_META', Store(), lineno=45, col_offset=51)], BinOp(Num(1, lineno=45, col_offset=61), LShift(), Num(5, lineno=45, col_offset=64), lineno=45, col_offset=61), lineno=45, col_offset=51), Assign([Name('MC_OPTION', Store(), lineno=46, col_offset=0)], BinOp(Num(1, lineno=46, col_offset=12), LShift(), Num(6, lineno=46, col_offset=15), lineno=46, col_offset=12), lineno=46, col_offset=0), Assign([Name('MC_COMMAND', Store(), lineno=46, col_offset=18)], BinOp(Num(1, lineno=46, col_offset=31), LShift(), Num(7, lineno=46, col_offset=34), lineno=46, col_offset=31), lineno=46, col_offset=18), If(Call(Attribute(Name('macosxSupport', Load(), lineno=49, col_offset=3), 'runningAsOSXApp', Load(), lineno=49, col_offset=3), [], [], None, None, lineno=49, col_offset=3), [Assign([Name('_modifiers', Store(), lineno=50, col_offset=4)], Tuple([Tuple([Str('Shift', lineno=50, col_offset=19)], Load(), lineno=50, col_offset=19), Tuple([Str('Control', lineno=50, col_offset=31)], Load(), lineno=50, col_offset=31), Tuple([Str('Option', lineno=50, col_offset=45)], Load(), lineno=50, col_offset=45), Tuple([Str('Command', lineno=50, col_offset=58)], Load(), lineno=50, col_offset=58)], Load(), lineno=50, col_offset=18), lineno=50, col_offset=4), Assign([Name('_modifier_masks', Store(), lineno=51, col_offset=4)], Tuple([Name('MC_SHIFT', Load(), lineno=51, col_offset=23), Name('MC_CONTROL', Load(), lineno=51, col_offset=33), Name('MC_OPTION', Load(), lineno=51, col_offset=45), Name('MC_COMMAND', Load(), lineno=51, col_offset=56)], Load(), lineno=51, col_offset=23), lineno=51, col_offset=4)], [Assign([Name('_modifiers', Store(), lineno=53, col_offset=4)], Tuple([Tuple([Str('Control', lineno=53, col_offset=19)], Load(), lineno=53, col_offset=19), Tuple([Str('Alt', lineno=53, col_offset=33)], Load(), lineno=53, col_offset=33), Tuple([Str('Shift', lineno=53, col_offset=43)], Load(), lineno=53, col_offset=43), Tuple([Str('Meta', lineno=53, col_offset=55), Str('M', lineno=53, col_offset=63)], Load(), lineno=53, col_offset=55)], Load(), lineno=53, col_offset=18), lineno=53, col_offset=4), Assign([Name('_modifier_masks', Store(), lineno=54, col_offset=4)], Tuple([Name('MC_CONTROL', Load(), lineno=54, col_offset=23), Name('MC_ALT', Load(), lineno=54, col_offset=35), Name('MC_SHIFT', Load(), lineno=54, col_offset=43), Name('MC_META', Load(), lineno=54, col_offset=53)], Load(), lineno=54, col_offset=23), lineno=54, col_offset=4)], lineno=49, col_offset=0), Assign([Name('_modifier_names', Store(), lineno=57, col_offset=0)], Call(Name('dict', Load(), lineno=57, col_offset=18), [ListComp(Tuple([Name('name', Load(), lineno=57, col_offset=25), Name('number', Load(), lineno=57, col_offset=31)], Load(), lineno=57, col_offset=25), [comprehension(Name('number', Store(), lineno=58, col_offset=29), Call(Name('range', Load(), lineno=58, col_offset=39), [Call(Name('len', Load(), lineno=58, col_offset=45), [Name('_modifiers', Load(), lineno=58, col_offset=49)], [], None, None, lineno=58, col_offset=45)], [], None, None, lineno=58, col_offset=39), []), comprehension(Name('name', Store(), lineno=59, col_offset=29), Subscript(Name('_modifiers', Load(), lineno=59, col_offset=37), Index(Name('number', Load(), lineno=59, col_offset=48)), Load(), lineno=59, col_offset=37), [])], lineno=57, col_offset=24)], [], None, None, lineno=57, col_offset=18), lineno=57, col_offset=0), ClassDef('_SimpleBinder', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=70, col_offset=17), Name('type', Param(), lineno=70, col_offset=23), Name('widget', Param(), lineno=70, col_offset=29), Name('widgetinst', Param(), lineno=70, col_offset=37)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=71, col_offset=8), 'type', Store(), lineno=71, col_offset=8)], Name('type', Load(), lineno=71, col_offset=20), lineno=71, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=72, col_offset=8), 'sequence', Store(), lineno=72, col_offset=8)], BinOp(BinOp(Str('<', lineno=72, col_offset=24), Add(), Subscript(Subscript(Name('_types', Load(), lineno=72, col_offset=28), Index(Name('type', Load(), lineno=72, col_offset=35)), Load(), lineno=72, col_offset=28), Index(Num(0, lineno=72, col_offset=41)), Load(), lineno=72, col_offset=28), lineno=72, col_offset=24), Add(), Str('>', lineno=72, col_offset=44), lineno=72, col_offset=43), lineno=72, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=73, col_offset=8), 'widget', Store(), lineno=73, col_offset=8)], Name('widget', Load(), lineno=73, col_offset=22), lineno=73, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=74, col_offset=8), 'widgetinst', Store(), lineno=74, col_offset=8)], Name('widgetinst', Load(), lineno=74, col_offset=26), lineno=74, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=75, col_offset=8), 'bindedfuncs', Store(), lineno=75, col_offset=8)], List([], Load(), lineno=75, col_offset=27), lineno=75, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=76, col_offset=8), 'handlerid', Store(), lineno=76, col_offset=8)], Name('None', Load(), lineno=76, col_offset=25), lineno=76, col_offset=8)], [], lineno=70, col_offset=4), FunctionDef('bind', arguments([Name('self', Param(), lineno=78, col_offset=13), Name('triplet', Param(), lineno=78, col_offset=19), Name('func', Param(), lineno=78, col_offset=28)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=79, col_offset=15), 'handlerid', Load(), lineno=79, col_offset=15), lineno=79, col_offset=11), [FunctionDef('handler', arguments([Name('event', Param(), lineno=80, col_offset=24), Name('l', Param(), lineno=80, col_offset=31), Name('mc_type', Param(), lineno=80, col_offset=53)], None, None, [Attribute(Name('self', Load(), lineno=80, col_offset=35), 'bindedfuncs', Load(), lineno=80, col_offset=35), Attribute(Name('self', Load(), lineno=80, col_offset=63), 'type', Load(), lineno=80, col_offset=63)]), [Assign([Attribute(Name('event', Load(), lineno=81, col_offset=16), 'mc_type', Store(), lineno=81, col_offset=16)], Name('mc_type', Load(), lineno=81, col_offset=32), lineno=81, col_offset=16), Assign([Name('wascalled', Store(), lineno=82, col_offset=16)], Dict([], [], lineno=82, col_offset=28), lineno=82, col_offset=16), For(Name('i', Store(), lineno=83, col_offset=20), Call(Name('range', Load(), lineno=83, col_offset=25), [BinOp(Call(Name('len', Load(), lineno=83, col_offset=31), [Name('l', Load(), lineno=83, col_offset=35)], [], None, None, lineno=83, col_offset=31), Sub(), Num(1, lineno=83, col_offset=38), lineno=83, col_offset=31), Num(-1, lineno=83, col_offset=42), Num(-1, lineno=83, col_offset=46)], [], None, None, lineno=83, col_offset=25), [Assign([Name('func', Store(), lineno=84, col_offset=20)], Subscript(Name('l', Load(), lineno=84, col_offset=27), Index(Name('i', Load(), lineno=84, col_offset=29)), Load(), lineno=84, col_offset=27), lineno=84, col_offset=20), If(Compare(Name('func', Load(), lineno=85, col_offset=23), [NotIn()], [Name('wascalled', Load(), lineno=85, col_offset=35)], lineno=85, col_offset=23), [Assign([Subscript(Name('wascalled', Load(), lineno=86, col_offset=24), Index(Name('func', Load(), lineno=86, col_offset=34)), Store(), lineno=86, col_offset=24)], Name('True', Load(), lineno=86, col_offset=42), lineno=86, col_offset=24), Assign([Name('r', Store(), lineno=87, col_offset=24)], Call(Name('func', Load(), lineno=87, col_offset=28), [Name('event', Load(), lineno=87, col_offset=33)], [], None, None, lineno=87, col_offset=28), lineno=87, col_offset=24), If(Name('r', Load(), lineno=88, col_offset=27), [Return(Name('r', Load(), lineno=89, col_offset=35), lineno=89, col_offset=28)], [], lineno=88, col_offset=24)], [], lineno=85, col_offset=20)], [], lineno=83, col_offset=16)], [], lineno=80, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=12), 'handlerid', Store(), lineno=90, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=90, col_offset=29), 'widget', Load(), lineno=90, col_offset=29), 'bind', Load(), lineno=90, col_offset=29), [Attribute(Name('self', Load(), lineno=90, col_offset=46), 'widgetinst', Load(), lineno=90, col_offset=46), Attribute(Name('self', Load(), lineno=91, col_offset=46), 'sequence', Load(), lineno=91, col_offset=46), Name('handler', Load(), lineno=91, col_offset=61)], [], None, None, lineno=90, col_offset=29), lineno=90, col_offset=12)], [], lineno=79, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=92, col_offset=8), 'bindedfuncs', Load(), lineno=92, col_offset=8), 'append', Load(), lineno=92, col_offset=8), [Name('func', Load(), lineno=92, col_offset=32)], [], None, None, lineno=92, col_offset=8), lineno=92, col_offset=8)], [], lineno=78, col_offset=4), FunctionDef('unbind', arguments([Name('self', Param(), lineno=94, col_offset=15), Name('triplet', Param(), lineno=94, col_offset=21), Name('func', Param(), lineno=94, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'bindedfuncs', Load(), lineno=95, col_offset=8), 'remove', Load(), lineno=95, col_offset=8), [Name('func', Load(), lineno=95, col_offset=32)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=96, col_offset=15), 'bindedfuncs', Load(), lineno=96, col_offset=15), lineno=96, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=97, col_offset=12), 'widget', Load(), lineno=97, col_offset=12), 'unbind', Load(), lineno=97, col_offset=12), [Attribute(Name('self', Load(), lineno=97, col_offset=31), 'widgetinst', Load(), lineno=97, col_offset=31), Attribute(Name('self', Load(), lineno=97, col_offset=48), 'sequence', Load(), lineno=97, col_offset=48), Attribute(Name('self', Load(), lineno=97, col_offset=63), 'handlerid', Load(), lineno=97, col_offset=63)], [], None, None, lineno=97, col_offset=12), lineno=97, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=98, col_offset=12), 'handlerid', Store(), lineno=98, col_offset=12)], Name('None', Load(), lineno=98, col_offset=29), lineno=98, col_offset=12)], [], lineno=96, col_offset=8)], [], lineno=94, col_offset=4), FunctionDef('__del__', arguments([Name('self', Param(), lineno=100, col_offset=16)], None, None, []), [If(Attribute(Name('self', Load(), lineno=101, col_offset=11), 'handlerid', Load(), lineno=101, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=102, col_offset=12), 'widget', Load(), lineno=102, col_offset=12), 'unbind', Load(), lineno=102, col_offset=12), [Attribute(Name('self', Load(), lineno=102, col_offset=31), 'widgetinst', Load(), lineno=102, col_offset=31), Attribute(Name('self', Load(), lineno=102, col_offset=48), 'sequence', Load(), lineno=102, col_offset=48), Attribute(Name('self', Load(), lineno=102, col_offset=63), 'handlerid', Load(), lineno=102, col_offset=63)], [], None, None, lineno=102, col_offset=12), lineno=102, col_offset=12)], [], lineno=101, col_offset=8)], [], lineno=100, col_offset=4)], [], lineno=69, col_offset=0), Assign([Name('_states', Store(), lineno=109, col_offset=0)], Call(Name('range', Load(), lineno=109, col_offset=10), [BinOp(Num(1, lineno=109, col_offset=16), LShift(), Call(Name('len', Load(), lineno=109, col_offset=21), [Name('_modifiers', Load(), lineno=109, col_offset=25)], [], None, None, lineno=109, col_offset=21), lineno=109, col_offset=16)], [], None, None, lineno=109, col_offset=10), lineno=109, col_offset=0), Assign([Name('_state_names', Store(), lineno=110, col_offset=0)], ListComp(Call(Attribute(Str('', lineno=110, col_offset=16), 'join', Load(), lineno=110, col_offset=16), [GeneratorExp(BinOp(Subscript(Name('m', Load(), lineno=110, col_offset=24), Index(Num(0, lineno=110, col_offset=26)), Load(), lineno=110, col_offset=24), Add(), Str('-', lineno=110, col_offset=29), lineno=110, col_offset=24), [comprehension(Tuple([Name('i', Store(), lineno=111, col_offset=28), Name('m', Store(), lineno=111, col_offset=31)], Store(), lineno=111, col_offset=28), Call(Name('enumerate', Load(), lineno=111, col_offset=36), [Name('_modifiers', Load(), lineno=111, col_offset=46)], [], None, None, lineno=111, col_offset=36), [BinOp(BinOp(Num(1, lineno=112, col_offset=28), LShift(), Name('i', Load(), lineno=112, col_offset=33), lineno=112, col_offset=28), BitAnd(), Name('s', Load(), lineno=112, col_offset=38), lineno=112, col_offset=27)])], lineno=110, col_offset=24)], [], None, None, lineno=110, col_offset=16), [comprehension(Name('s', Store(), lineno=113, col_offset=20), Name('_states', Load(), lineno=113, col_offset=25), [])], lineno=110, col_offset=16), lineno=110, col_offset=0), FunctionDef('expand_substates', arguments([Name('states', Param(), lineno=115, col_offset=21)], None, None, []), [Expr(Str('For each item of states return a list containing all combinations of\n    that item with individual bits reset, sorted by the number of set bits.\n    ', lineno=118, col_offset=-1), lineno=118, col_offset=-1), FunctionDef('nbits', arguments([Name('n', Param(), lineno=119, col_offset=14)], None, None, []), [Expr(Str('number of bits set in n base 2', lineno=120, col_offset=8), lineno=120, col_offset=8), Assign([Name('nb', Store(), lineno=121, col_offset=8)], Num(0, lineno=121, col_offset=13), lineno=121, col_offset=8), While(Name('n', Load(), lineno=122, col_offset=14), [Assign([Tuple([Name('n', Store(), lineno=123, col_offset=12), Name('rem', Store(), lineno=123, col_offset=15)], Store(), lineno=123, col_offset=12)], Call(Name('divmod', Load(), lineno=123, col_offset=21), [Name('n', Load(), lineno=123, col_offset=28), Num(2, lineno=123, col_offset=31)], [], None, None, lineno=123, col_offset=21), lineno=123, col_offset=12), AugAssign(Name('nb', Store(), lineno=124, col_offset=12), Add(), Name('rem', Load(), lineno=124, col_offset=18), lineno=124, col_offset=12)], [], lineno=122, col_offset=8), Return(Name('nb', Load(), lineno=125, col_offset=15), lineno=125, col_offset=8)], [], lineno=119, col_offset=4), Assign([Name('statelist', Store(), lineno=126, col_offset=4)], List([], Load(), lineno=126, col_offset=16), lineno=126, col_offset=4), For(Name('state', Store(), lineno=127, col_offset=8), Name('states', Load(), lineno=127, col_offset=17), [Assign([Name('substates', Store(), lineno=128, col_offset=8)], Call(Name('list', Load(), lineno=128, col_offset=20), [Call(Name('set', Load(), lineno=128, col_offset=25), [GeneratorExp(BinOp(Name('state', Load(), lineno=128, col_offset=29), BitAnd(), Name('x', Load(), lineno=128, col_offset=37), lineno=128, col_offset=29), [comprehension(Name('x', Store(), lineno=128, col_offset=43), Name('states', Load(), lineno=128, col_offset=48), [])], lineno=128, col_offset=29)], [], None, None, lineno=128, col_offset=25)], [], None, None, lineno=128, col_offset=20), lineno=128, col_offset=8), Expr(Call(Attribute(Name('substates', Load(), lineno=129, col_offset=8), 'sort', Load(), lineno=129, col_offset=8), [], [keyword('key', Name('nbits', Load(), lineno=129, col_offset=27)), keyword('reverse', Name('True', Load(), lineno=129, col_offset=42))], None, None, lineno=129, col_offset=8), lineno=129, col_offset=8), Expr(Call(Attribute(Name('statelist', Load(), lineno=130, col_offset=8), 'append', Load(), lineno=130, col_offset=8), [Name('substates', Load(), lineno=130, col_offset=25)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8)], [], lineno=127, col_offset=4), Return(Name('statelist', Load(), lineno=131, col_offset=11), lineno=131, col_offset=4)], [], lineno=115, col_offset=0), Assign([Name('_state_subsets', Store(), lineno=133, col_offset=0)], Call(Name('expand_substates', Load(), lineno=133, col_offset=17), [Name('_states', Load(), lineno=133, col_offset=34)], [], None, None, lineno=133, col_offset=17), lineno=133, col_offset=0), Assign([Name('_state_codes', Store(), lineno=136, col_offset=0)], List([], Load(), lineno=136, col_offset=15), lineno=136, col_offset=0), For(Name('s', Store(), lineno=137, col_offset=4), Name('_states', Load(), lineno=137, col_offset=9), [Assign([Name('r', Store(), lineno=138, col_offset=4)], Num(0, lineno=138, col_offset=8), lineno=138, col_offset=4), For(Name('i', Store(), lineno=139, col_offset=8), Call(Name('range', Load(), lineno=139, col_offset=13), [Call(Name('len', Load(), lineno=139, col_offset=19), [Name('_modifiers', Load(), lineno=139, col_offset=23)], [], None, None, lineno=139, col_offset=19)], [], None, None, lineno=139, col_offset=13), [If(BinOp(BinOp(Num(1, lineno=140, col_offset=12), LShift(), Name('i', Load(), lineno=140, col_offset=17), lineno=140, col_offset=12), BitAnd(), Name('s', Load(), lineno=140, col_offset=22), lineno=140, col_offset=11), [AugAssign(Name('r', Store(), lineno=141, col_offset=12), BitOr(), Subscript(Name('_modifier_masks', Load(), lineno=141, col_offset=17), Index(Name('i', Load(), lineno=141, col_offset=33)), Load(), lineno=141, col_offset=17), lineno=141, col_offset=12)], [], lineno=140, col_offset=8)], [], lineno=139, col_offset=4), Expr(Call(Attribute(Name('_state_codes', Load(), lineno=142, col_offset=4), 'append', Load(), lineno=142, col_offset=4), [Name('r', Load(), lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=4), lineno=142, col_offset=4)], [], lineno=137, col_offset=0), ClassDef('_ComplexBinder', [], [FunctionDef('__create_handler', arguments([Name('self', Param(), lineno=152, col_offset=25), Name('lists', Param(), lineno=152, col_offset=31), Name('mc_type', Param(), lineno=152, col_offset=38), Name('mc_state', Param(), lineno=152, col_offset=47)], None, None, []), [FunctionDef('handler', arguments([Name('event', Param(), lineno=153, col_offset=20), Name('lists', Param(), lineno=153, col_offset=27), Name('mc_type', Param(), lineno=154, col_offset=20), Name('mc_state', Param(), lineno=154, col_offset=39), Name('ishandlerrunning', Param(), lineno=155, col_offset=20), Name('doafterhandler', Param(), lineno=156, col_offset=20)], None, None, [Name('lists', Load(), lineno=153, col_offset=35), Name('mc_type', Load(), lineno=154, col_offset=30), Name('mc_state', Load(), lineno=154, col_offset=50), Attribute(Name('self', Load(), lineno=155, col_offset=39), 'ishandlerrunning', Load(), lineno=155, col_offset=39), Attribute(Name('self', Load(), lineno=156, col_offset=37), 'doafterhandler', Load(), lineno=156, col_offset=37)]), [Assign([Subscript(Name('ishandlerrunning', Load(), lineno=157, col_offset=12), Slice(None, None, None), Store(), lineno=157, col_offset=12)], List([Name('True', Load(), lineno=157, col_offset=35)], Load(), lineno=157, col_offset=34), lineno=157, col_offset=12), Assign([Attribute(Name('event', Load(), lineno=158, col_offset=12), 'mc_type', Store(), lineno=158, col_offset=12)], Name('mc_type', Load(), lineno=158, col_offset=28), lineno=158, col_offset=12), Assign([Attribute(Name('event', Load(), lineno=159, col_offset=12), 'mc_state', Store(), lineno=159, col_offset=12)], Name('mc_state', Load(), lineno=159, col_offset=29), lineno=159, col_offset=12), Assign([Name('wascalled', Store(), lineno=160, col_offset=12)], Dict([], [], lineno=160, col_offset=24), lineno=160, col_offset=12), Assign([Name('r', Store(), lineno=161, col_offset=12)], Name('None', Load(), lineno=161, col_offset=16), lineno=161, col_offset=12), For(Name('l', Store(), lineno=162, col_offset=16), Name('lists', Load(), lineno=162, col_offset=21), [For(Name('i', Store(), lineno=163, col_offset=20), Call(Name('range', Load(), lineno=163, col_offset=25), [BinOp(Call(Name('len', Load(), lineno=163, col_offset=31), [Name('l', Load(), lineno=163, col_offset=35)], [], None, None, lineno=163, col_offset=31), Sub(), Num(1, lineno=163, col_offset=38), lineno=163, col_offset=31), Num(-1, lineno=163, col_offset=42), Num(-1, lineno=163, col_offset=46)], [], None, None, lineno=163, col_offset=25), [Assign([Name('func', Store(), lineno=164, col_offset=20)], Subscript(Name('l', Load(), lineno=164, col_offset=27), Index(Name('i', Load(), lineno=164, col_offset=29)), Load(), lineno=164, col_offset=27), lineno=164, col_offset=20), If(Compare(Name('func', Load(), lineno=165, col_offset=23), [NotIn()], [Name('wascalled', Load(), lineno=165, col_offset=35)], lineno=165, col_offset=23), [Assign([Subscript(Name('wascalled', Load(), lineno=166, col_offset=24), Index(Name('func', Load(), lineno=166, col_offset=34)), Store(), lineno=166, col_offset=24)], Name('True', Load(), lineno=166, col_offset=42), lineno=166, col_offset=24), Assign([Name('r', Store(), lineno=167, col_offset=24)], Call(Subscript(Name('l', Load(), lineno=167, col_offset=28), Index(Name('i', Load(), lineno=167, col_offset=30)), Load(), lineno=167, col_offset=28), [Name('event', Load(), lineno=167, col_offset=33)], [], None, None, lineno=167, col_offset=28), lineno=167, col_offset=24), If(Name('r', Load(), lineno=168, col_offset=27), [Break( lineno=169, col_offset=28)], [], lineno=168, col_offset=24)], [], lineno=165, col_offset=20)], [], lineno=163, col_offset=16), If(Name('r', Load(), lineno=170, col_offset=19), [Break( lineno=171, col_offset=20)], [], lineno=170, col_offset=16)], [], lineno=162, col_offset=12), Assign([Subscript(Name('ishandlerrunning', Load(), lineno=172, col_offset=12), Slice(None, None, None), Store(), lineno=172, col_offset=12)], List([], Load(), lineno=172, col_offset=34), lineno=172, col_offset=12), While(Name('doafterhandler', Load(), lineno=174, col_offset=18), [Expr(Call(Call(Attribute(Name('doafterhandler', Load(), lineno=175, col_offset=16), 'pop', Load(), lineno=175, col_offset=16), [], [], None, None, lineno=175, col_offset=16), [], [], None, None, lineno=175, col_offset=16), lineno=175, col_offset=16)], [], lineno=174, col_offset=12), If(Name('r', Load(), lineno=176, col_offset=15), [Return(Name('r', Load(), lineno=177, col_offset=23), lineno=177, col_offset=16)], [], lineno=176, col_offset=12)], [], lineno=153, col_offset=8), Return(Name('handler', Load(), lineno=178, col_offset=15), lineno=178, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=180, col_offset=17), Name('type', Param(), lineno=180, col_offset=23), Name('widget', Param(), lineno=180, col_offset=29), Name('widgetinst', Param(), lineno=180, col_offset=37)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=181, col_offset=8), 'type', Store(), lineno=181, col_offset=8)], Name('type', Load(), lineno=181, col_offset=20), lineno=181, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=182, col_offset=8), 'typename', Store(), lineno=182, col_offset=8)], Subscript(Subscript(Name('_types', Load(), lineno=182, col_offset=24), Index(Name('type', Load(), lineno=182, col_offset=31)), Load(), lineno=182, col_offset=24), Index(Num(0, lineno=182, col_offset=37)), Load(), lineno=182, col_offset=24), lineno=182, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=183, col_offset=8), 'widget', Store(), lineno=183, col_offset=8)], Name('widget', Load(), lineno=183, col_offset=22), lineno=183, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=184, col_offset=8), 'widgetinst', Store(), lineno=184, col_offset=8)], Name('widgetinst', Load(), lineno=184, col_offset=26), lineno=184, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=185, col_offset=8), 'bindedfuncs', Store(), lineno=185, col_offset=8)], Dict([Name('None', Load(), lineno=185, col_offset=28)], [ListComp(List([], Load(), lineno=185, col_offset=35), [comprehension(Name('s', Store(), lineno=185, col_offset=42), Name('_states', Load(), lineno=185, col_offset=47), [])], lineno=185, col_offset=35)], lineno=185, col_offset=27), lineno=185, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=186, col_offset=8), 'handlerids', Store(), lineno=186, col_offset=8)], List([], Load(), lineno=186, col_offset=26), lineno=186, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=194, col_offset=8), 'ishandlerrunning', Store(), lineno=194, col_offset=8)], List([], Load(), lineno=194, col_offset=32), lineno=194, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=195, col_offset=8), 'doafterhandler', Store(), lineno=195, col_offset=8)], List([], Load(), lineno=195, col_offset=30), lineno=195, col_offset=8), For(Name('s', Store(), lineno=196, col_offset=12), Name('_states', Load(), lineno=196, col_offset=17), [Assign([Name('lists', Store(), lineno=197, col_offset=12)], ListComp(Subscript(Subscript(Attribute(Name('self', Load(), lineno=197, col_offset=21), 'bindedfuncs', Load(), lineno=197, col_offset=21), Index(Name('None', Load(), lineno=197, col_offset=38)), Load(), lineno=197, col_offset=21), Index(Name('i', Load(), lineno=197, col_offset=44)), Load(), lineno=197, col_offset=21), [comprehension(Name('i', Store(), lineno=197, col_offset=51), Subscript(Name('_state_subsets', Load(), lineno=197, col_offset=56), Index(Name('s', Load(), lineno=197, col_offset=71)), Load(), lineno=197, col_offset=56), [])], lineno=197, col_offset=21), lineno=197, col_offset=12), Assign([Name('handler', Store(), lineno=198, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=198, col_offset=22), '__create_handler', Load(), lineno=198, col_offset=22), [Name('lists', Load(), lineno=198, col_offset=44), Name('type', Load(), lineno=198, col_offset=51), Subscript(Name('_state_codes', Load(), lineno=198, col_offset=57), Index(Name('s', Load(), lineno=198, col_offset=70)), Load(), lineno=198, col_offset=57)], [], None, None, lineno=198, col_offset=22), lineno=198, col_offset=12), Assign([Name('seq', Store(), lineno=199, col_offset=12)], BinOp(BinOp(BinOp(Str('<', lineno=199, col_offset=18), Add(), Subscript(Name('_state_names', Load(), lineno=199, col_offset=22), Index(Name('s', Load(), lineno=199, col_offset=35)), Load(), lineno=199, col_offset=22), lineno=199, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=199, col_offset=38), 'typename', Load(), lineno=199, col_offset=38), lineno=199, col_offset=37), Add(), Str('>', lineno=199, col_offset=52), lineno=199, col_offset=51), lineno=199, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=200, col_offset=12), 'handlerids', Load(), lineno=200, col_offset=12), 'append', Load(), lineno=200, col_offset=12), [Tuple([Name('seq', Load(), lineno=200, col_offset=36), Call(Attribute(Attribute(Name('self', Load(), lineno=200, col_offset=41), 'widget', Load(), lineno=200, col_offset=41), 'bind', Load(), lineno=200, col_offset=41), [Attribute(Name('self', Load(), lineno=200, col_offset=58), 'widgetinst', Load(), lineno=200, col_offset=58), Name('seq', Load(), lineno=201, col_offset=58), Name('handler', Load(), lineno=201, col_offset=63)], [], None, None, lineno=200, col_offset=41)], Load(), lineno=200, col_offset=36)], [], None, None, lineno=200, col_offset=12), lineno=200, col_offset=12)], [], lineno=196, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('bind', arguments([Name('self', Param(), lineno=203, col_offset=13), Name('triplet', Param(), lineno=203, col_offset=19), Name('func', Param(), lineno=203, col_offset=28)], None, None, []), [If(Compare(Subscript(Name('triplet', Load(), lineno=204, col_offset=11), Index(Num(2, lineno=204, col_offset=19)), Load(), lineno=204, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=204, col_offset=29), 'bindedfuncs', Load(), lineno=204, col_offset=29)], lineno=204, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=205, col_offset=12), 'bindedfuncs', Load(), lineno=205, col_offset=12), Index(Subscript(Name('triplet', Load(), lineno=205, col_offset=29), Index(Num(2, lineno=205, col_offset=37)), Load(), lineno=205, col_offset=29)), Store(), lineno=205, col_offset=12)], ListComp(List([], Load(), lineno=205, col_offset=44), [comprehension(Name('s', Store(), lineno=205, col_offset=51), Name('_states', Load(), lineno=205, col_offset=56), [])], lineno=205, col_offset=44), lineno=205, col_offset=12), For(Name('s', Store(), lineno=206, col_offset=16), Name('_states', Load(), lineno=206, col_offset=21), [Assign([Name('lists', Store(), lineno=207, col_offset=16)], ListComp(Subscript(Subscript(Attribute(Name('self', Load(), lineno=207, col_offset=26), 'bindedfuncs', Load(), lineno=207, col_offset=26), Index(Name('detail', Load(), lineno=207, col_offset=43)), Load(), lineno=207, col_offset=26), Index(Name('i', Load(), lineno=207, col_offset=51)), Load(), lineno=207, col_offset=26), [comprehension(Name('detail', Store(), lineno=208, col_offset=30), Tuple([Subscript(Name('triplet', Load(), lineno=208, col_offset=41), Index(Num(2, lineno=208, col_offset=49)), Load(), lineno=208, col_offset=41), Name('None', Load(), lineno=208, col_offset=53)], Load(), lineno=208, col_offset=41), []), comprehension(Name('i', Store(), lineno=209, col_offset=30), Subscript(Name('_state_subsets', Load(), lineno=209, col_offset=35), Index(Name('s', Load(), lineno=209, col_offset=50)), Load(), lineno=209, col_offset=35), [])], lineno=207, col_offset=26), lineno=207, col_offset=16), Assign([Name('handler', Store(), lineno=210, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=210, col_offset=26), '__create_handler', Load(), lineno=210, col_offset=26), [Name('lists', Load(), lineno=210, col_offset=48), Attribute(Name('self', Load(), lineno=210, col_offset=55), 'type', Load(), lineno=210, col_offset=55), Subscript(Name('_state_codes', Load(), lineno=211, col_offset=48), Index(Name('s', Load(), lineno=211, col_offset=61)), Load(), lineno=211, col_offset=48)], [], None, None, lineno=210, col_offset=26), lineno=210, col_offset=16), Assign([Name('seq', Store(), lineno=212, col_offset=16)], BinOp(Str('<%s%s-%s>', lineno=212, col_offset=22), Mod(), Tuple([Subscript(Name('_state_names', Load(), lineno=212, col_offset=36), Index(Name('s', Load(), lineno=212, col_offset=49)), Load(), lineno=212, col_offset=36), Attribute(Name('self', Load(), lineno=212, col_offset=53), 'typename', Load(), lineno=212, col_offset=53), Subscript(Name('triplet', Load(), lineno=212, col_offset=68), Index(Num(2, lineno=212, col_offset=76)), Load(), lineno=212, col_offset=68)], Load(), lineno=212, col_offset=36), lineno=212, col_offset=22), lineno=212, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=213, col_offset=16), 'handlerids', Load(), lineno=213, col_offset=16), 'append', Load(), lineno=213, col_offset=16), [Tuple([Name('seq', Load(), lineno=213, col_offset=40), Call(Attribute(Attribute(Name('self', Load(), lineno=213, col_offset=45), 'widget', Load(), lineno=213, col_offset=45), 'bind', Load(), lineno=213, col_offset=45), [Attribute(Name('self', Load(), lineno=213, col_offset=62), 'widgetinst', Load(), lineno=213, col_offset=62), Name('seq', Load(), lineno=214, col_offset=62), Name('handler', Load(), lineno=214, col_offset=67)], [], None, None, lineno=213, col_offset=45)], Load(), lineno=213, col_offset=40)], [], None, None, lineno=213, col_offset=16), lineno=213, col_offset=16)], [], lineno=206, col_offset=12)], [], lineno=204, col_offset=8), Assign([Name('doit', Store(), lineno=215, col_offset=8)], Lambda(arguments([], None, None, []), Call(Attribute(Subscript(Subscript(Attribute(Name('self', Load(), lineno=215, col_offset=23), 'bindedfuncs', Load(), lineno=215, col_offset=23), Index(Subscript(Name('triplet', Load(), lineno=215, col_offset=40), Index(Num(2, lineno=215, col_offset=48)), Load(), lineno=215, col_offset=40)), Load(), lineno=215, col_offset=23), Index(Subscript(Name('triplet', Load(), lineno=215, col_offset=52), Index(Num(0, lineno=215, col_offset=60)), Load(), lineno=215, col_offset=52)), Load(), lineno=215, col_offset=23), 'append', Load(), lineno=215, col_offset=23), [Name('func', Load(), lineno=215, col_offset=71)], [], None, None, lineno=215, col_offset=23), lineno=215, col_offset=15), lineno=215, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=216, col_offset=15), 'ishandlerrunning', Load(), lineno=216, col_offset=15), lineno=216, col_offset=11), [Expr(Call(Name('doit', Load(), lineno=217, col_offset=12), [], [], None, None, lineno=217, col_offset=12), lineno=217, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=219, col_offset=12), 'doafterhandler', Load(), lineno=219, col_offset=12), 'append', Load(), lineno=219, col_offset=12), [Name('doit', Load(), lineno=219, col_offset=39)], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=12)], lineno=216, col_offset=8)], [], lineno=203, col_offset=4), FunctionDef('unbind', arguments([Name('self', Param(), lineno=221, col_offset=15), Name('triplet', Param(), lineno=221, col_offset=21), Name('func', Param(), lineno=221, col_offset=30)], None, None, []), [Assign([Name('doit', Store(), lineno=222, col_offset=8)], Lambda(arguments([], None, None, []), Call(Attribute(Subscript(Subscript(Attribute(Name('self', Load(), lineno=222, col_offset=23), 'bindedfuncs', Load(), lineno=222, col_offset=23), Index(Subscript(Name('triplet', Load(), lineno=222, col_offset=40), Index(Num(2, lineno=222, col_offset=48)), Load(), lineno=222, col_offset=40)), Load(), lineno=222, col_offset=23), Index(Subscript(Name('triplet', Load(), lineno=222, col_offset=52), Index(Num(0, lineno=222, col_offset=60)), Load(), lineno=222, col_offset=52)), Load(), lineno=222, col_offset=23), 'remove', Load(), lineno=222, col_offset=23), [Name('func', Load(), lineno=222, col_offset=71)], [], None, None, lineno=222, col_offset=23), lineno=222, col_offset=15), lineno=222, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=223, col_offset=15), 'ishandlerrunning', Load(), lineno=223, col_offset=15), lineno=223, col_offset=11), [Expr(Call(Name('doit', Load(), lineno=224, col_offset=12), [], [], None, None, lineno=224, col_offset=12), lineno=224, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=226, col_offset=12), 'doafterhandler', Load(), lineno=226, col_offset=12), 'append', Load(), lineno=226, col_offset=12), [Name('doit', Load(), lineno=226, col_offset=39)], [], None, None, lineno=226, col_offset=12), lineno=226, col_offset=12)], lineno=223, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('__del__', arguments([Name('self', Param(), lineno=228, col_offset=16)], None, None, []), [For(Tuple([Name('seq', Store(), lineno=229, col_offset=12), Name('id', Store(), lineno=229, col_offset=17)], Store(), lineno=229, col_offset=12), Attribute(Name('self', Load(), lineno=229, col_offset=23), 'handlerids', Load(), lineno=229, col_offset=23), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=230, col_offset=12), 'widget', Load(), lineno=230, col_offset=12), 'unbind', Load(), lineno=230, col_offset=12), [Attribute(Name('self', Load(), lineno=230, col_offset=31), 'widgetinst', Load(), lineno=230, col_offset=31), Name('seq', Load(), lineno=230, col_offset=48), Name('id', Load(), lineno=230, col_offset=53)], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=12)], [], lineno=229, col_offset=8)], [], lineno=228, col_offset=4)], [], lineno=144, col_offset=0), Assign([Name('_types', Store(), lineno=234, col_offset=0)], Tuple([Tuple([Str('KeyPress', lineno=235, col_offset=5), Str('Key', lineno=235, col_offset=17)], Load(), lineno=235, col_offset=5), Tuple([Str('KeyRelease', lineno=235, col_offset=26)], Load(), lineno=235, col_offset=26), Tuple([Str('ButtonPress', lineno=235, col_offset=43), Str('Button', lineno=235, col_offset=58)], Load(), lineno=235, col_offset=43), Tuple([Str('ButtonRelease', lineno=236, col_offset=5)], Load(), lineno=236, col_offset=5), Tuple([Str('Activate', lineno=236, col_offset=25)], Load(), lineno=236, col_offset=25), Tuple([Str('Circulate', lineno=236, col_offset=40)], Load(), lineno=236, col_offset=40), Tuple([Str('Colormap', lineno=236, col_offset=56)], Load(), lineno=236, col_offset=56), Tuple([Str('Configure', lineno=237, col_offset=5)], Load(), lineno=237, col_offset=5), Tuple([Str('Deactivate', lineno=237, col_offset=21)], Load(), lineno=237, col_offset=21), Tuple([Str('Destroy', lineno=237, col_offset=38)], Load(), lineno=237, col_offset=38), Tuple([Str('Enter', lineno=237, col_offset=52)], Load(), lineno=237, col_offset=52), Tuple([Str('Expose', lineno=237, col_offset=64)], Load(), lineno=237, col_offset=64), Tuple([Str('FocusIn', lineno=238, col_offset=5)], Load(), lineno=238, col_offset=5), Tuple([Str('FocusOut', lineno=238, col_offset=19)], Load(), lineno=238, col_offset=19), Tuple([Str('Gravity', lineno=238, col_offset=34)], Load(), lineno=238, col_offset=34), Tuple([Str('Leave', lineno=238, col_offset=48)], Load(), lineno=238, col_offset=48), Tuple([Str('Map', lineno=238, col_offset=60)], Load(), lineno=238, col_offset=60), Tuple([Str('Motion', lineno=239, col_offset=5)], Load(), lineno=239, col_offset=5), Tuple([Str('MouseWheel', lineno=239, col_offset=18)], Load(), lineno=239, col_offset=18), Tuple([Str('Property', lineno=239, col_offset=35)], Load(), lineno=239, col_offset=35), Tuple([Str('Reparent', lineno=239, col_offset=50)], Load(), lineno=239, col_offset=50), Tuple([Str('Unmap', lineno=239, col_offset=65)], Load(), lineno=239, col_offset=65), Tuple([Str('Visibility', lineno=240, col_offset=5)], Load(), lineno=240, col_offset=5)], Load(), lineno=235, col_offset=4), lineno=234, col_offset=0), Assign([Name('_binder_classes', Store(), lineno=244, col_offset=0)], BinOp(BinOp(Tuple([Name('_ComplexBinder', Load(), lineno=244, col_offset=19)], Load(), lineno=244, col_offset=19), Mult(), Num(4, lineno=244, col_offset=38), lineno=244, col_offset=18), Add(), BinOp(Tuple([Name('_SimpleBinder', Load(), lineno=244, col_offset=43)], Load(), lineno=244, col_offset=43), Mult(), BinOp(Call(Name('len', Load(), lineno=244, col_offset=62), [Name('_types', Load(), lineno=244, col_offset=66)], [], None, None, lineno=244, col_offset=62), Sub(), Num(4, lineno=244, col_offset=74), lineno=244, col_offset=62), lineno=244, col_offset=42), lineno=244, col_offset=18), lineno=244, col_offset=0), Assign([Name('_type_names', Store(), lineno=247, col_offset=0)], Call(Name('dict', Load(), lineno=247, col_offset=14), [ListComp(Tuple([Name('name', Load(), lineno=247, col_offset=21), Name('number', Load(), lineno=247, col_offset=27)], Load(), lineno=247, col_offset=21), [comprehension(Name('number', Store(), lineno=248, col_offset=25), Call(Name('range', Load(), lineno=248, col_offset=35), [Call(Name('len', Load(), lineno=248, col_offset=41), [Name('_types', Load(), lineno=248, col_offset=45)], [], None, None, lineno=248, col_offset=41)], [], None, None, lineno=248, col_offset=35), []), comprehension(Name('name', Store(), lineno=249, col_offset=25), Subscript(Name('_types', Load(), lineno=249, col_offset=33), Index(Name('number', Load(), lineno=249, col_offset=40)), Load(), lineno=249, col_offset=33), [])], lineno=247, col_offset=20)], [], None, None, lineno=247, col_offset=14), lineno=247, col_offset=0), Assign([Name('_keysym_re', Store(), lineno=251, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=251, col_offset=13), 'compile', Load(), lineno=251, col_offset=13), [Str('^\\w+$', lineno=251, col_offset=24)], [], None, None, lineno=251, col_offset=13), lineno=251, col_offset=0), Assign([Name('_button_re', Store(), lineno=252, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=252, col_offset=13), 'compile', Load(), lineno=252, col_offset=13), [Str('^[1-5]$', lineno=252, col_offset=24)], [], None, None, lineno=252, col_offset=13), lineno=252, col_offset=0), FunctionDef('_parse_sequence', arguments([Name('sequence', Param(), lineno=253, col_offset=20)], None, None, []), [Expr(Str('Get a string which should describe an event sequence. If it is\n    successfully parsed as one, return a tuple containing the state (as an int),\n    the event type (as an index of _types), and the detail - None if none, or a\n    string if there is one. If the parsing is unsuccessful, return None.\n    ', lineno=258, col_offset=-1), lineno=258, col_offset=-1), If(BoolOp(Or(), [UnaryOp(Not(), Name('sequence', Load(), lineno=259, col_offset=11), lineno=259, col_offset=7), Compare(Subscript(Name('sequence', Load(), lineno=259, col_offset=23), Index(Num(0, lineno=259, col_offset=32)), Load(), lineno=259, col_offset=23), [NotEq()], [Str('<', lineno=259, col_offset=38)], lineno=259, col_offset=23), Compare(Subscript(Name('sequence', Load(), lineno=259, col_offset=45), Index(Num(-1, lineno=259, col_offset=55)), Load(), lineno=259, col_offset=45), [NotEq()], [Str('>', lineno=259, col_offset=61)], lineno=259, col_offset=45)], lineno=259, col_offset=7), [Return(Name('None', Load(), lineno=260, col_offset=15), lineno=260, col_offset=8)], [], lineno=259, col_offset=4), Assign([Name('words', Store(), lineno=261, col_offset=4)], Call(Attribute(Name('string', Load(), lineno=261, col_offset=12), 'split', Load(), lineno=261, col_offset=12), [Subscript(Name('sequence', Load(), lineno=261, col_offset=25), Slice(Num(1, lineno=261, col_offset=34), Num(-1, lineno=261, col_offset=37), None), Load(), lineno=261, col_offset=25), Str('-', lineno=261, col_offset=41)], [], None, None, lineno=261, col_offset=12), lineno=261, col_offset=4), Assign([Name('modifiers', Store(), lineno=263, col_offset=4)], Num(0, lineno=263, col_offset=16), lineno=263, col_offset=4), While(BoolOp(And(), [Name('words', Load(), lineno=264, col_offset=10), Compare(Subscript(Name('words', Load(), lineno=264, col_offset=20), Index(Num(0, lineno=264, col_offset=26)), Load(), lineno=264, col_offset=20), [In()], [Name('_modifier_names', Load(), lineno=264, col_offset=32)], lineno=264, col_offset=20)], lineno=264, col_offset=10), [AugAssign(Name('modifiers', Store(), lineno=265, col_offset=8), BitOr(), BinOp(Num(1, lineno=265, col_offset=21), LShift(), Subscript(Name('_modifier_names', Load(), lineno=265, col_offset=26), Index(Subscript(Name('words', Load(), lineno=265, col_offset=42), Index(Num(0, lineno=265, col_offset=48)), Load(), lineno=265, col_offset=42)), Load(), lineno=265, col_offset=26), lineno=265, col_offset=21), lineno=265, col_offset=8), Delete([Subscript(Name('words', Load(), lineno=266, col_offset=12), Index(Num(0, lineno=266, col_offset=18)), Del(), lineno=266, col_offset=12)], lineno=266, col_offset=8)], [], lineno=264, col_offset=4), If(BoolOp(And(), [Name('words', Load(), lineno=268, col_offset=7), Compare(Subscript(Name('words', Load(), lineno=268, col_offset=17), Index(Num(0, lineno=268, col_offset=23)), Load(), lineno=268, col_offset=17), [In()], [Name('_type_names', Load(), lineno=268, col_offset=29)], lineno=268, col_offset=17)], lineno=268, col_offset=7), [Assign([Name('type', Store(), lineno=269, col_offset=8)], Subscript(Name('_type_names', Load(), lineno=269, col_offset=15), Index(Subscript(Name('words', Load(), lineno=269, col_offset=27), Index(Num(0, lineno=269, col_offset=33)), Load(), lineno=269, col_offset=27)), Load(), lineno=269, col_offset=15), lineno=269, col_offset=8), Delete([Subscript(Name('words', Load(), lineno=270, col_offset=12), Index(Num(0, lineno=270, col_offset=18)), Del(), lineno=270, col_offset=12)], lineno=270, col_offset=8)], [Return(Name('None', Load(), lineno=272, col_offset=15), lineno=272, col_offset=8)], lineno=268, col_offset=4), If(Compare(Subscript(Name('_binder_classes', Load(), lineno=274, col_offset=7), Index(Name('type', Load(), lineno=274, col_offset=23)), Load(), lineno=274, col_offset=7), [Is()], [Name('_SimpleBinder', Load(), lineno=274, col_offset=32)], lineno=274, col_offset=7), [If(BoolOp(Or(), [Name('modifiers', Load(), lineno=275, col_offset=11), Name('words', Load(), lineno=275, col_offset=24)], lineno=275, col_offset=11), [Return(Name('None', Load(), lineno=276, col_offset=19), lineno=276, col_offset=12)], [Assign([Name('detail', Store(), lineno=278, col_offset=12)], Name('None', Load(), lineno=278, col_offset=21), lineno=278, col_offset=12)], lineno=275, col_offset=8)], [If(Compare(Name('type', Load(), lineno=281, col_offset=11), [In()], [ListComp(Subscript(Name('_type_names', Load(), lineno=281, col_offset=20), Index(Name('s', Load(), lineno=281, col_offset=32)), Load(), lineno=281, col_offset=20), [comprehension(Name('s', Store(), lineno=281, col_offset=39), Tuple([Str('KeyPress', lineno=281, col_offset=45), Str('KeyRelease', lineno=281, col_offset=57)], Load(), lineno=281, col_offset=45), [])], lineno=281, col_offset=20)], lineno=281, col_offset=11), [Assign([Name('type_re', Store(), lineno=282, col_offset=12)], Name('_keysym_re', Load(), lineno=282, col_offset=22), lineno=282, col_offset=12)], [Assign([Name('type_re', Store(), lineno=284, col_offset=12)], Name('_button_re', Load(), lineno=284, col_offset=22), lineno=284, col_offset=12)], lineno=281, col_offset=8), If(UnaryOp(Not(), Name('words', Load(), lineno=286, col_offset=15), lineno=286, col_offset=11), [Assign([Name('detail', Store(), lineno=287, col_offset=12)], Name('None', Load(), lineno=287, col_offset=21), lineno=287, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=288, col_offset=13), [Name('words', Load(), lineno=288, col_offset=17)], [], None, None, lineno=288, col_offset=13), [Eq()], [Num(1, lineno=288, col_offset=27)], lineno=288, col_offset=13), Call(Attribute(Name('type_re', Load(), lineno=288, col_offset=33), 'match', Load(), lineno=288, col_offset=33), [Subscript(Name('words', Load(), lineno=288, col_offset=47), Index(Num(0, lineno=288, col_offset=53)), Load(), lineno=288, col_offset=47)], [], None, None, lineno=288, col_offset=33)], lineno=288, col_offset=13), [Assign([Name('detail', Store(), lineno=289, col_offset=12)], Subscript(Name('words', Load(), lineno=289, col_offset=21), Index(Num(0, lineno=289, col_offset=27)), Load(), lineno=289, col_offset=21), lineno=289, col_offset=12)], [Return(Name('None', Load(), lineno=291, col_offset=19), lineno=291, col_offset=12)], lineno=288, col_offset=13)], lineno=286, col_offset=8)], lineno=274, col_offset=4), Return(Tuple([Name('modifiers', Load(), lineno=293, col_offset=11), Name('type', Load(), lineno=293, col_offset=22), Name('detail', Load(), lineno=293, col_offset=28)], Load(), lineno=293, col_offset=11), lineno=293, col_offset=4)], [], lineno=253, col_offset=0), FunctionDef('_triplet_to_sequence', arguments([Name('triplet', Param(), lineno=295, col_offset=25)], None, None, []), [If(Subscript(Name('triplet', Load(), lineno=296, col_offset=7), Index(Num(2, lineno=296, col_offset=15)), Load(), lineno=296, col_offset=7), [Return(BinOp(BinOp(BinOp(BinOp(BinOp(Str('<', lineno=297, col_offset=15), Add(), Subscript(Name('_state_names', Load(), lineno=297, col_offset=19), Index(Subscript(Name('triplet', Load(), lineno=297, col_offset=32), Index(Num(0, lineno=297, col_offset=40)), Load(), lineno=297, col_offset=32)), Load(), lineno=297, col_offset=19), lineno=297, col_offset=15), Add(), Subscript(Subscript(Name('_types', Load(), lineno=297, col_offset=44), Index(Subscript(Name('triplet', Load(), lineno=297, col_offset=51), Index(Num(1, lineno=297, col_offset=59)), Load(), lineno=297, col_offset=51)), Load(), lineno=297, col_offset=44), Index(Num(0, lineno=297, col_offset=63)), Load(), lineno=297, col_offset=44), lineno=297, col_offset=43), Add(), Str('-', lineno=297, col_offset=66), lineno=297, col_offset=65), Add(), Subscript(Name('triplet', Load(), lineno=298, col_offset=15), Index(Num(2, lineno=298, col_offset=23)), Load(), lineno=298, col_offset=15), lineno=297, col_offset=69), Add(), Str('>', lineno=298, col_offset=26), lineno=298, col_offset=25), lineno=297, col_offset=8)], [Return(BinOp(BinOp(BinOp(Str('<', lineno=300, col_offset=15), Add(), Subscript(Name('_state_names', Load(), lineno=300, col_offset=19), Index(Subscript(Name('triplet', Load(), lineno=300, col_offset=32), Index(Num(0, lineno=300, col_offset=40)), Load(), lineno=300, col_offset=32)), Load(), lineno=300, col_offset=19), lineno=300, col_offset=15), Add(), Subscript(Subscript(Name('_types', Load(), lineno=300, col_offset=44), Index(Subscript(Name('triplet', Load(), lineno=300, col_offset=51), Index(Num(1, lineno=300, col_offset=59)), Load(), lineno=300, col_offset=51)), Load(), lineno=300, col_offset=44), Index(Num(0, lineno=300, col_offset=63)), Load(), lineno=300, col_offset=44), lineno=300, col_offset=43), Add(), Str('>', lineno=300, col_offset=66), lineno=300, col_offset=65), lineno=300, col_offset=8)], lineno=296, col_offset=4)], [], lineno=295, col_offset=0), Assign([Name('_multicall_dict', Store(), lineno=302, col_offset=0)], Dict([], [], lineno=302, col_offset=18), lineno=302, col_offset=0), FunctionDef('MultiCallCreator', arguments([Name('widget', Param(), lineno=303, col_offset=21)], None, None, []), [Expr(Str('Return a MultiCall class which inherits its methods from the\n    given widget class (for example, Tkinter.Text). This is used\n    instead of a templating mechanism.\n    ', lineno=307, col_offset=-1), lineno=307, col_offset=-1), If(Compare(Name('widget', Load(), lineno=308, col_offset=7), [In()], [Name('_multicall_dict', Load(), lineno=308, col_offset=17)], lineno=308, col_offset=7), [Return(Subscript(Name('_multicall_dict', Load(), lineno=309, col_offset=15), Index(Name('widget', Load(), lineno=309, col_offset=31)), Load(), lineno=309, col_offset=15), lineno=309, col_offset=8)], [], lineno=308, col_offset=4), ClassDef('MultiCall', [Name('widget', Load(), lineno=311, col_offset=21)], [Assert(Call(Name('issubclass', Load(), lineno=312, col_offset=15), [Name('widget', Load(), lineno=312, col_offset=26), Attribute(Name('Tkinter', Load(), lineno=312, col_offset=34), 'Misc', Load(), lineno=312, col_offset=34)], [], None, None, lineno=312, col_offset=15), None, lineno=312, col_offset=8), FunctionDef('__init__', arguments([Name('self', Param(), lineno=314, col_offset=21)], 'args', 'kwargs', []), [Expr(Call(Attribute(Name('widget', Load(), lineno=315, col_offset=12), '__init__', Load(), lineno=315, col_offset=12), [Name('self', Load(), lineno=315, col_offset=28)], [], Name('args', Load(), lineno=315, col_offset=35), Name('kwargs', Load(), lineno=315, col_offset=43), lineno=315, col_offset=12), lineno=315, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=319, col_offset=12), '__eventinfo', Store(), lineno=319, col_offset=12)], Dict([], [], lineno=319, col_offset=31), lineno=319, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=320, col_offset=12), '__binders', Store(), lineno=320, col_offset=12)], ListComp(Call(Subscript(Name('_binder_classes', Load(), lineno=320, col_offset=30), Index(Name('i', Load(), lineno=320, col_offset=46)), Load(), lineno=320, col_offset=30), [Name('i', Load(), lineno=320, col_offset=49), Name('widget', Load(), lineno=320, col_offset=52), Name('self', Load(), lineno=320, col_offset=60)], [], None, None, lineno=320, col_offset=30), [comprehension(Name('i', Store(), lineno=321, col_offset=34), Call(Name('range', Load(), lineno=321, col_offset=39), [Call(Name('len', Load(), lineno=321, col_offset=45), [Name('_types', Load(), lineno=321, col_offset=49)], [], None, None, lineno=321, col_offset=45)], [], None, None, lineno=321, col_offset=39), [])], lineno=320, col_offset=30), lineno=320, col_offset=12)], [], lineno=314, col_offset=8), FunctionDef('bind', arguments([Name('self', Param(), lineno=323, col_offset=17), Name('sequence', Param(), lineno=323, col_offset=23), Name('func', Param(), lineno=323, col_offset=38), Name('add', Param(), lineno=323, col_offset=49)], None, None, [Name('None', Load(), lineno=323, col_offset=32), Name('None', Load(), lineno=323, col_offset=43), Name('None', Load(), lineno=323, col_offset=53)]), [If(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=325, col_offset=15), [Name('sequence', Load(), lineno=325, col_offset=20)], [], None, None, lineno=325, col_offset=15), [Is()], [Name('str', Load(), lineno=325, col_offset=33)], lineno=325, col_offset=15), Compare(Call(Name('len', Load(), lineno=325, col_offset=41), [Name('sequence', Load(), lineno=325, col_offset=45)], [], None, None, lineno=325, col_offset=41), [Gt()], [Num(2, lineno=325, col_offset=57)], lineno=325, col_offset=41), Compare(Subscript(Name('sequence', Load(), lineno=326, col_offset=15), Slice(None, Num(2, lineno=326, col_offset=25), None), Load(), lineno=326, col_offset=15), [Eq()], [Str('<<', lineno=326, col_offset=31)], lineno=326, col_offset=15), Compare(Subscript(Name('sequence', Load(), lineno=326, col_offset=40), Slice(Num(-2, lineno=326, col_offset=50), None, None), Load(), lineno=326, col_offset=40), [Eq()], [Str('>>', lineno=326, col_offset=57)], lineno=326, col_offset=40)], lineno=325, col_offset=15), [If(Compare(Name('sequence', Load(), lineno=327, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=327, col_offset=31), '__eventinfo', Load(), lineno=327, col_offset=31)], lineno=327, col_offset=19), [Assign([Name('ei', Store(), lineno=328, col_offset=20)], Subscript(Attribute(Name('self', Load(), lineno=328, col_offset=25), '__eventinfo', Load(), lineno=328, col_offset=25), Index(Name('sequence', Load(), lineno=328, col_offset=42)), Load(), lineno=328, col_offset=25), lineno=328, col_offset=20), If(Compare(Subscript(Name('ei', Load(), lineno=329, col_offset=23), Index(Num(0, lineno=329, col_offset=26)), Load(), lineno=329, col_offset=23), [IsNot()], [Name('None', Load(), lineno=329, col_offset=36)], lineno=329, col_offset=23), [For(Name('triplet', Store(), lineno=330, col_offset=28), Subscript(Name('ei', Load(), lineno=330, col_offset=39), Index(Num(1, lineno=330, col_offset=42)), Load(), lineno=330, col_offset=39), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=331, col_offset=28), '__binders', Load(), lineno=331, col_offset=28), Index(Subscript(Name('triplet', Load(), lineno=331, col_offset=43), Index(Num(1, lineno=331, col_offset=51)), Load(), lineno=331, col_offset=43)), Load(), lineno=331, col_offset=28), 'unbind', Load(), lineno=331, col_offset=28), [Name('triplet', Load(), lineno=331, col_offset=62), Subscript(Name('ei', Load(), lineno=331, col_offset=71), Index(Num(0, lineno=331, col_offset=74)), Load(), lineno=331, col_offset=71)], [], None, None, lineno=331, col_offset=28), lineno=331, col_offset=28)], [], lineno=330, col_offset=24)], [], lineno=329, col_offset=20), Assign([Subscript(Name('ei', Load(), lineno=332, col_offset=20), Index(Num(0, lineno=332, col_offset=23)), Store(), lineno=332, col_offset=20)], Name('func', Load(), lineno=332, col_offset=28), lineno=332, col_offset=20), If(Compare(Subscript(Name('ei', Load(), lineno=333, col_offset=23), Index(Num(0, lineno=333, col_offset=26)), Load(), lineno=333, col_offset=23), [IsNot()], [Name('None', Load(), lineno=333, col_offset=36)], lineno=333, col_offset=23), [For(Name('triplet', Store(), lineno=334, col_offset=28), Subscript(Name('ei', Load(), lineno=334, col_offset=39), Index(Num(1, lineno=334, col_offset=42)), Load(), lineno=334, col_offset=39), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=335, col_offset=28), '__binders', Load(), lineno=335, col_offset=28), Index(Subscript(Name('triplet', Load(), lineno=335, col_offset=43), Index(Num(1, lineno=335, col_offset=51)), Load(), lineno=335, col_offset=43)), Load(), lineno=335, col_offset=28), 'bind', Load(), lineno=335, col_offset=28), [Name('triplet', Load(), lineno=335, col_offset=60), Name('func', Load(), lineno=335, col_offset=69)], [], None, None, lineno=335, col_offset=28), lineno=335, col_offset=28)], [], lineno=334, col_offset=24)], [], lineno=333, col_offset=20)], [Assign([Subscript(Attribute(Name('self', Load(), lineno=337, col_offset=20), '__eventinfo', Load(), lineno=337, col_offset=20), Index(Name('sequence', Load(), lineno=337, col_offset=37)), Store(), lineno=337, col_offset=20)], List([Name('func', Load(), lineno=337, col_offset=50), List([], Load(), lineno=337, col_offset=56)], Load(), lineno=337, col_offset=49), lineno=337, col_offset=20)], lineno=327, col_offset=16)], [], lineno=325, col_offset=12), Return(Call(Attribute(Name('widget', Load(), lineno=338, col_offset=19), 'bind', Load(), lineno=338, col_offset=19), [Name('self', Load(), lineno=338, col_offset=31), Name('sequence', Load(), lineno=338, col_offset=37), Name('func', Load(), lineno=338, col_offset=47), Name('add', Load(), lineno=338, col_offset=53)], [], None, None, lineno=338, col_offset=19), lineno=338, col_offset=12)], [], lineno=323, col_offset=8), FunctionDef('unbind', arguments([Name('self', Param(), lineno=340, col_offset=19), Name('sequence', Param(), lineno=340, col_offset=25), Name('funcid', Param(), lineno=340, col_offset=35)], None, None, [Name('None', Load(), lineno=340, col_offset=42)]), [If(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=341, col_offset=15), [Name('sequence', Load(), lineno=341, col_offset=20)], [], None, None, lineno=341, col_offset=15), [Is()], [Name('str', Load(), lineno=341, col_offset=33)], lineno=341, col_offset=15), Compare(Call(Name('len', Load(), lineno=341, col_offset=41), [Name('sequence', Load(), lineno=341, col_offset=45)], [], None, None, lineno=341, col_offset=41), [Gt()], [Num(2, lineno=341, col_offset=57)], lineno=341, col_offset=41), Compare(Subscript(Name('sequence', Load(), lineno=342, col_offset=15), Slice(None, Num(2, lineno=342, col_offset=25), None), Load(), lineno=342, col_offset=15), [Eq()], [Str('<<', lineno=342, col_offset=31)], lineno=342, col_offset=15), Compare(Subscript(Name('sequence', Load(), lineno=342, col_offset=40), Slice(Num(-2, lineno=342, col_offset=50), None, None), Load(), lineno=342, col_offset=40), [Eq()], [Str('>>', lineno=342, col_offset=57)], lineno=342, col_offset=40), Compare(Name('sequence', Load(), lineno=343, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=343, col_offset=27), '__eventinfo', Load(), lineno=343, col_offset=27)], lineno=343, col_offset=15)], lineno=341, col_offset=15), [Assign([Tuple([Name('func', Store(), lineno=344, col_offset=16), Name('triplets', Store(), lineno=344, col_offset=22)], Store(), lineno=344, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=344, col_offset=33), '__eventinfo', Load(), lineno=344, col_offset=33), Index(Name('sequence', Load(), lineno=344, col_offset=50)), Load(), lineno=344, col_offset=33), lineno=344, col_offset=16), If(Compare(Name('func', Load(), lineno=345, col_offset=19), [IsNot()], [Name('None', Load(), lineno=345, col_offset=31)], lineno=345, col_offset=19), [For(Name('triplet', Store(), lineno=346, col_offset=24), Name('triplets', Load(), lineno=346, col_offset=35), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=347, col_offset=24), '__binders', Load(), lineno=347, col_offset=24), Index(Subscript(Name('triplet', Load(), lineno=347, col_offset=39), Index(Num(1, lineno=347, col_offset=47)), Load(), lineno=347, col_offset=39)), Load(), lineno=347, col_offset=24), 'unbind', Load(), lineno=347, col_offset=24), [Name('triplet', Load(), lineno=347, col_offset=58), Name('func', Load(), lineno=347, col_offset=67)], [], None, None, lineno=347, col_offset=24), lineno=347, col_offset=24)], [], lineno=346, col_offset=20), Assign([Subscript(Subscript(Attribute(Name('self', Load(), lineno=348, col_offset=20), '__eventinfo', Load(), lineno=348, col_offset=20), Index(Name('sequence', Load(), lineno=348, col_offset=37)), Load(), lineno=348, col_offset=20), Index(Num(0, lineno=348, col_offset=47)), Store(), lineno=348, col_offset=20)], Name('None', Load(), lineno=348, col_offset=52), lineno=348, col_offset=20)], [], lineno=345, col_offset=16)], [], lineno=341, col_offset=12), Return(Call(Attribute(Name('widget', Load(), lineno=349, col_offset=19), 'unbind', Load(), lineno=349, col_offset=19), [Name('self', Load(), lineno=349, col_offset=33), Name('sequence', Load(), lineno=349, col_offset=39), Name('funcid', Load(), lineno=349, col_offset=49)], [], None, None, lineno=349, col_offset=19), lineno=349, col_offset=12)], [], lineno=340, col_offset=8), FunctionDef('event_add', arguments([Name('self', Param(), lineno=351, col_offset=22), Name('virtual', Param(), lineno=351, col_offset=28)], 'sequences', None, []), [If(Compare(Name('virtual', Load(), lineno=353, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=353, col_offset=30), '__eventinfo', Load(), lineno=353, col_offset=30)], lineno=353, col_offset=15), [Assign([Subscript(Attribute(Name('self', Load(), lineno=354, col_offset=16), '__eventinfo', Load(), lineno=354, col_offset=16), Index(Name('virtual', Load(), lineno=354, col_offset=33)), Store(), lineno=354, col_offset=16)], List([Name('None', Load(), lineno=354, col_offset=45), List([], Load(), lineno=354, col_offset=51)], Load(), lineno=354, col_offset=44), lineno=354, col_offset=16)], [], lineno=353, col_offset=12), Assign([Tuple([Name('func', Store(), lineno=356, col_offset=12), Name('triplets', Store(), lineno=356, col_offset=18)], Store(), lineno=356, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=356, col_offset=29), '__eventinfo', Load(), lineno=356, col_offset=29), Index(Name('virtual', Load(), lineno=356, col_offset=46)), Load(), lineno=356, col_offset=29), lineno=356, col_offset=12), For(Name('seq', Store(), lineno=357, col_offset=16), Name('sequences', Load(), lineno=357, col_offset=23), [Assign([Name('triplet', Store(), lineno=358, col_offset=16)], Call(Name('_parse_sequence', Load(), lineno=358, col_offset=26), [Name('seq', Load(), lineno=358, col_offset=42)], [], None, None, lineno=358, col_offset=26), lineno=358, col_offset=16), If(Compare(Name('triplet', Load(), lineno=359, col_offset=19), [Is()], [Name('None', Load(), lineno=359, col_offset=30)], lineno=359, col_offset=19), [Expr(Call(Attribute(Name('widget', Load(), lineno=361, col_offset=20), 'event_add', Load(), lineno=361, col_offset=20), [Name('self', Load(), lineno=361, col_offset=37), Name('virtual', Load(), lineno=361, col_offset=43), Name('seq', Load(), lineno=361, col_offset=52)], [], None, None, lineno=361, col_offset=20), lineno=361, col_offset=20)], [If(Compare(Name('func', Load(), lineno=363, col_offset=23), [IsNot()], [Name('None', Load(), lineno=363, col_offset=35)], lineno=363, col_offset=23), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=364, col_offset=24), '__binders', Load(), lineno=364, col_offset=24), Index(Subscript(Name('triplet', Load(), lineno=364, col_offset=39), Index(Num(1, lineno=364, col_offset=47)), Load(), lineno=364, col_offset=39)), Load(), lineno=364, col_offset=24), 'bind', Load(), lineno=364, col_offset=24), [Name('triplet', Load(), lineno=364, col_offset=56), Name('func', Load(), lineno=364, col_offset=65)], [], None, None, lineno=364, col_offset=24), lineno=364, col_offset=24)], [], lineno=363, col_offset=20), Expr(Call(Attribute(Name('triplets', Load(), lineno=365, col_offset=20), 'append', Load(), lineno=365, col_offset=20), [Name('triplet', Load(), lineno=365, col_offset=36)], [], None, None, lineno=365, col_offset=20), lineno=365, col_offset=20)], lineno=359, col_offset=16)], [], lineno=357, col_offset=12)], [], lineno=351, col_offset=8), FunctionDef('event_delete', arguments([Name('self', Param(), lineno=367, col_offset=25), Name('virtual', Param(), lineno=367, col_offset=31)], 'sequences', None, []), [If(Compare(Name('virtual', Load(), lineno=368, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=368, col_offset=30), '__eventinfo', Load(), lineno=368, col_offset=30)], lineno=368, col_offset=15), [Return(None, lineno=369, col_offset=16)], [], lineno=368, col_offset=12), Assign([Tuple([Name('func', Store(), lineno=370, col_offset=12), Name('triplets', Store(), lineno=370, col_offset=18)], Store(), lineno=370, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=370, col_offset=29), '__eventinfo', Load(), lineno=370, col_offset=29), Index(Name('virtual', Load(), lineno=370, col_offset=46)), Load(), lineno=370, col_offset=29), lineno=370, col_offset=12), For(Name('seq', Store(), lineno=371, col_offset=16), Name('sequences', Load(), lineno=371, col_offset=23), [Assign([Name('triplet', Store(), lineno=372, col_offset=16)], Call(Name('_parse_sequence', Load(), lineno=372, col_offset=26), [Name('seq', Load(), lineno=372, col_offset=42)], [], None, None, lineno=372, col_offset=26), lineno=372, col_offset=16), If(Compare(Name('triplet', Load(), lineno=373, col_offset=19), [Is()], [Name('None', Load(), lineno=373, col_offset=30)], lineno=373, col_offset=19), [Expr(Call(Attribute(Name('widget', Load(), lineno=375, col_offset=20), 'event_delete', Load(), lineno=375, col_offset=20), [Name('self', Load(), lineno=375, col_offset=40), Name('virtual', Load(), lineno=375, col_offset=46), Name('seq', Load(), lineno=375, col_offset=55)], [], None, None, lineno=375, col_offset=20), lineno=375, col_offset=20)], [If(Compare(Name('func', Load(), lineno=377, col_offset=23), [IsNot()], [Name('None', Load(), lineno=377, col_offset=35)], lineno=377, col_offset=23), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=378, col_offset=24), '__binders', Load(), lineno=378, col_offset=24), Index(Subscript(Name('triplet', Load(), lineno=378, col_offset=39), Index(Num(1, lineno=378, col_offset=47)), Load(), lineno=378, col_offset=39)), Load(), lineno=378, col_offset=24), 'unbind', Load(), lineno=378, col_offset=24), [Name('triplet', Load(), lineno=378, col_offset=58), Name('func', Load(), lineno=378, col_offset=67)], [], None, None, lineno=378, col_offset=24), lineno=378, col_offset=24)], [], lineno=377, col_offset=20), Expr(Call(Attribute(Name('triplets', Load(), lineno=379, col_offset=20), 'remove', Load(), lineno=379, col_offset=20), [Name('triplet', Load(), lineno=379, col_offset=36)], [], None, None, lineno=379, col_offset=20), lineno=379, col_offset=20)], lineno=373, col_offset=16)], [], lineno=371, col_offset=12)], [], lineno=367, col_offset=8), FunctionDef('event_info', arguments([Name('self', Param(), lineno=381, col_offset=23), Name('virtual', Param(), lineno=381, col_offset=29)], None, None, [Name('None', Load(), lineno=381, col_offset=37)]), [If(BoolOp(Or(), [Compare(Name('virtual', Load(), lineno=382, col_offset=15), [Is()], [Name('None', Load(), lineno=382, col_offset=26)], lineno=382, col_offset=15), Compare(Name('virtual', Load(), lineno=382, col_offset=34), [NotIn()], [Attribute(Name('self', Load(), lineno=382, col_offset=49), '__eventinfo', Load(), lineno=382, col_offset=49)], lineno=382, col_offset=34)], lineno=382, col_offset=15), [Return(Call(Attribute(Name('widget', Load(), lineno=383, col_offset=23), 'event_info', Load(), lineno=383, col_offset=23), [Name('self', Load(), lineno=383, col_offset=41), Name('virtual', Load(), lineno=383, col_offset=47)], [], None, None, lineno=383, col_offset=23), lineno=383, col_offset=16)], [Return(BinOp(Call(Name('tuple', Load(), lineno=385, col_offset=23), [Call(Name('map', Load(), lineno=385, col_offset=29), [Name('_triplet_to_sequence', Load(), lineno=385, col_offset=33), Subscript(Subscript(Attribute(Name('self', Load(), lineno=386, col_offset=33), '__eventinfo', Load(), lineno=386, col_offset=33), Index(Name('virtual', Load(), lineno=386, col_offset=50)), Load(), lineno=386, col_offset=33), Index(Num(1, lineno=386, col_offset=59)), Load(), lineno=386, col_offset=33)], [], None, None, lineno=385, col_offset=29)], [], None, None, lineno=385, col_offset=23), Add(), Call(Attribute(Name('widget', Load(), lineno=387, col_offset=23), 'event_info', Load(), lineno=387, col_offset=23), [Name('self', Load(), lineno=387, col_offset=41), Name('virtual', Load(), lineno=387, col_offset=47)], [], None, None, lineno=387, col_offset=23), lineno=385, col_offset=23), lineno=385, col_offset=16)], lineno=382, col_offset=12)], [], lineno=381, col_offset=8), FunctionDef('__del__', arguments([Name('self', Param(), lineno=389, col_offset=20)], None, None, []), [For(Name('virtual', Store(), lineno=390, col_offset=16), Attribute(Name('self', Load(), lineno=390, col_offset=27), '__eventinfo', Load(), lineno=390, col_offset=27), [Assign([Tuple([Name('func', Store(), lineno=391, col_offset=16), Name('triplets', Store(), lineno=391, col_offset=22)], Store(), lineno=391, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=391, col_offset=33), '__eventinfo', Load(), lineno=391, col_offset=33), Index(Name('virtual', Load(), lineno=391, col_offset=50)), Load(), lineno=391, col_offset=33), lineno=391, col_offset=16), If(Name('func', Load(), lineno=392, col_offset=19), [For(Name('triplet', Store(), lineno=393, col_offset=24), Name('triplets', Load(), lineno=393, col_offset=35), [Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=394, col_offset=24), '__binders', Load(), lineno=394, col_offset=24), Index(Subscript(Name('triplet', Load(), lineno=394, col_offset=39), Index(Num(1, lineno=394, col_offset=47)), Load(), lineno=394, col_offset=39)), Load(), lineno=394, col_offset=24), 'unbind', Load(), lineno=394, col_offset=24), [Name('triplet', Load(), lineno=394, col_offset=58), Name('func', Load(), lineno=394, col_offset=67)], [], None, None, lineno=394, col_offset=24), lineno=394, col_offset=24)], [], lineno=393, col_offset=20)], [], lineno=392, col_offset=16)], [], lineno=390, col_offset=12)], [], lineno=389, col_offset=8)], [], lineno=311, col_offset=4), Assign([Subscript(Name('_multicall_dict', Load(), lineno=397, col_offset=4), Index(Name('widget', Load(), lineno=397, col_offset=20)), Store(), lineno=397, col_offset=4)], Name('MultiCall', Load(), lineno=397, col_offset=30), lineno=397, col_offset=4), Return(Name('MultiCall', Load(), lineno=398, col_offset=11), lineno=398, col_offset=4)], [], lineno=303, col_offset=0), If(Compare(Name('__name__', Load(), lineno=400, col_offset=3), [Eq()], [Str('__main__', lineno=400, col_offset=15)], lineno=400, col_offset=3), [Assign([Name('root', Store(), lineno=402, col_offset=4)], Call(Attribute(Name('Tkinter', Load(), lineno=402, col_offset=11), 'Tk', Load(), lineno=402, col_offset=11), [], [], None, None, lineno=402, col_offset=11), lineno=402, col_offset=4), Assign([Name('text', Store(), lineno=403, col_offset=4)], Call(Call(Name('MultiCallCreator', Load(), lineno=403, col_offset=11), [Attribute(Name('Tkinter', Load(), lineno=403, col_offset=28), 'Text', Load(), lineno=403, col_offset=28)], [], None, None, lineno=403, col_offset=11), [Name('root', Load(), lineno=403, col_offset=42)], [], None, None, lineno=403, col_offset=11), lineno=403, col_offset=4), Expr(Call(Attribute(Name('text', Load(), lineno=404, col_offset=4), 'pack', Load(), lineno=404, col_offset=4), [], [], None, None, lineno=404, col_offset=4), lineno=404, col_offset=4), FunctionDef('bindseq', arguments([Name('seq', Param(), lineno=405, col_offset=16), Name('n', Param(), lineno=405, col_offset=21)], None, None, [List([Num(0, lineno=405, col_offset=24)], Load(), lineno=405, col_offset=23)]), [FunctionDef('handler', arguments([Name('event', Param(), lineno=406, col_offset=20)], None, None, []), [Print(None, [Name('seq', Load(), lineno=407, col_offset=18)], True, lineno=407, col_offset=12)], [], lineno=406, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=408, col_offset=8), 'bind', Load(), lineno=408, col_offset=8), [BinOp(Str('<<handler%d>>', lineno=408, col_offset=18), Mod(), Subscript(Name('n', Load(), lineno=408, col_offset=34), Index(Num(0, lineno=408, col_offset=36)), Load(), lineno=408, col_offset=34), lineno=408, col_offset=18), Name('handler', Load(), lineno=408, col_offset=40)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Expr(Call(Attribute(Name('text', Load(), lineno=409, col_offset=8), 'event_add', Load(), lineno=409, col_offset=8), [BinOp(Str('<<handler%d>>', lineno=409, col_offset=23), Mod(), Subscript(Name('n', Load(), lineno=409, col_offset=39), Index(Num(0, lineno=409, col_offset=41)), Load(), lineno=409, col_offset=39), lineno=409, col_offset=23), Name('seq', Load(), lineno=409, col_offset=45)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), AugAssign(Subscript(Name('n', Load(), lineno=410, col_offset=8), Index(Num(0, lineno=410, col_offset=10)), Store(), lineno=410, col_offset=8), Add(), Num(1, lineno=410, col_offset=16), lineno=410, col_offset=8)], [], lineno=405, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=411, col_offset=4), [Str('<Key>', lineno=411, col_offset=12)], [], None, None, lineno=411, col_offset=4), lineno=411, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=412, col_offset=4), [Str('<Control-Key>', lineno=412, col_offset=12)], [], None, None, lineno=412, col_offset=4), lineno=412, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=413, col_offset=4), [Str('<Alt-Key-a>', lineno=413, col_offset=12)], [], None, None, lineno=413, col_offset=4), lineno=413, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=414, col_offset=4), [Str('<Control-Key-a>', lineno=414, col_offset=12)], [], None, None, lineno=414, col_offset=4), lineno=414, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=415, col_offset=4), [Str('<Alt-Control-Key-a>', lineno=415, col_offset=12)], [], None, None, lineno=415, col_offset=4), lineno=415, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=416, col_offset=4), [Str('<Key-b>', lineno=416, col_offset=12)], [], None, None, lineno=416, col_offset=4), lineno=416, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=417, col_offset=4), [Str('<Control-Button-1>', lineno=417, col_offset=12)], [], None, None, lineno=417, col_offset=4), lineno=417, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=418, col_offset=4), [Str('<Alt-Button-1>', lineno=418, col_offset=12)], [], None, None, lineno=418, col_offset=4), lineno=418, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=419, col_offset=4), [Str('<FocusOut>', lineno=419, col_offset=12)], [], None, None, lineno=419, col_offset=4), lineno=419, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=420, col_offset=4), [Str('<Enter>', lineno=420, col_offset=12)], [], None, None, lineno=420, col_offset=4), lineno=420, col_offset=4), Expr(Call(Name('bindseq', Load(), lineno=421, col_offset=4), [Str('<Leave>', lineno=421, col_offset=12)], [], None, None, lineno=421, col_offset=4), lineno=421, col_offset=4), Expr(Call(Attribute(Name('root', Load(), lineno=422, col_offset=4), 'mainloop', Load(), lineno=422, col_offset=4), [], [], None, None, lineno=422, col_offset=4), lineno=422, col_offset=4)], [], lineno=400, col_offset=0)])
