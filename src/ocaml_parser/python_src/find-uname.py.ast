Module([Expr(Str("\nFor each argument on the command line, look for it in the set of all Unicode\nnames.  Arguments are treated as case-insensitive regular expressions, e.g.:\n\n    % find-uname 'small letter a$' 'horizontal line'\n    *** small letter a$ matches ***\n    LATIN SMALL LETTER A (97)\n    COMBINING LATIN SMALL LETTER A (867)\n    CYRILLIC SMALL LETTER A (1072)\n    PARENTHESIZED LATIN SMALL LETTER A (9372)\n    CIRCLED LATIN SMALL LETTER A (9424)\n    FULLWIDTH LATIN SMALL LETTER A (65345)\n    *** horizontal line matches ***\n    HORIZONTAL LINE EXTENSION (9135)\n", lineno=17, col_offset=-1), lineno=17, col_offset=-1), Import([alias('unicodedata', None)], lineno=19, col_offset=0), Import([alias('sys', None)], lineno=20, col_offset=0), Import([alias('re', None)], lineno=21, col_offset=0), FunctionDef('main', arguments([Name('args', Param(), lineno=23, col_offset=9)], None, None, []), [Assign([Name('unicode_names', Store(), lineno=24, col_offset=4)], List([], Load(), lineno=24, col_offset=20), lineno=24, col_offset=4), For(Name('ix', Store(), lineno=25, col_offset=8), Call(Name('range', Load(), lineno=25, col_offset=14), [BinOp(Attribute(Name('sys', Load(), lineno=25, col_offset=20), 'maxunicode', Load(), lineno=25, col_offset=20), Add(), Num(1, lineno=25, col_offset=35), lineno=25, col_offset=20)], [], None, None, lineno=25, col_offset=14), [TryExcept([Expr(Call(Attribute(Name('unicode_names', Load(), lineno=27, col_offset=12), 'append', Load(), lineno=27, col_offset=12), [Tuple([Name('ix', Load(), lineno=27, col_offset=34), Call(Attribute(Name('unicodedata', Load(), lineno=27, col_offset=38), 'name', Load(), lineno=27, col_offset=38), [Call(Name('unichr', Load(), lineno=27, col_offset=55), [Name('ix', Load(), lineno=27, col_offset=62)], [], None, None, lineno=27, col_offset=55)], [], None, None, lineno=27, col_offset=38)], Load(), lineno=27, col_offset=34)], [], None, None, lineno=27, col_offset=12), lineno=27, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=28, col_offset=15), None, [Pass( lineno=29, col_offset=12)], lineno=28, col_offset=8)], [], lineno=26, col_offset=8)], [], lineno=25, col_offset=4), For(Name('arg', Store(), lineno=30, col_offset=8), Name('args', Load(), lineno=30, col_offset=15), [Assign([Name('pat', Store(), lineno=31, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=31, col_offset=14), 'compile', Load(), lineno=31, col_offset=14), [Name('arg', Load(), lineno=31, col_offset=25), Attribute(Name('re', Load(), lineno=31, col_offset=30), 'I', Load(), lineno=31, col_offset=30)], [], None, None, lineno=31, col_offset=14), lineno=31, col_offset=8), Assign([Name('matches', Store(), lineno=32, col_offset=8)], ListComp(Tuple([Name('y', Load(), lineno=32, col_offset=20), Name('x', Load(), lineno=32, col_offset=22)], Load(), lineno=32, col_offset=20), [comprehension(Tuple([Name('x', Store(), lineno=32, col_offset=30), Name('y', Store(), lineno=32, col_offset=32)], Store(), lineno=32, col_offset=30), Name('unicode_names', Load(), lineno=32, col_offset=38), [Compare(Call(Attribute(Name('pat', Load(), lineno=33, col_offset=22), 'search', Load(), lineno=33, col_offset=22), [Name('y', Load(), lineno=33, col_offset=33)], [], None, None, lineno=33, col_offset=22), [IsNot()], [Name('None', Load(), lineno=33, col_offset=43)], lineno=33, col_offset=22)])], lineno=32, col_offset=19), lineno=32, col_offset=8), If(Name('matches', Load(), lineno=34, col_offset=11), [Print(None, [Str('***', lineno=35, col_offset=18), Name('arg', Load(), lineno=35, col_offset=25), Str('matches', lineno=35, col_offset=30), Str('***', lineno=35, col_offset=41)], True, lineno=35, col_offset=12), For(Name('match', Store(), lineno=36, col_offset=16), Name('matches', Load(), lineno=36, col_offset=25), [Print(None, [BinOp(Str('%s (%d)', lineno=37, col_offset=22), Mod(), Name('match', Load(), lineno=37, col_offset=34), lineno=37, col_offset=22)], True, lineno=37, col_offset=16)], [], lineno=36, col_offset=12)], [], lineno=34, col_offset=8)], [], lineno=30, col_offset=4)], [], lineno=23, col_offset=0), If(Compare(Name('__name__', Load(), lineno=39, col_offset=3), [Eq()], [Str('__main__', lineno=39, col_offset=15)], lineno=39, col_offset=3), [Expr(Call(Name('main', Load(), lineno=40, col_offset=4), [Subscript(Attribute(Name('sys', Load(), lineno=40, col_offset=9), 'argv', Load(), lineno=40, col_offset=9), Slice(Num(1, lineno=40, col_offset=18), None, None), Load(), lineno=40, col_offset=9)], [], None, None, lineno=40, col_offset=4), lineno=40, col_offset=4)], [], lineno=39, col_offset=0)])
