Module([Expr(Str('Test compiler changes for unary ops (+, -, ~) introduced in Python 2.2', lineno=1, col_offset=0), lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('have_unicode', None)], 0, lineno=4, col_offset=0), ClassDef('UnaryOpTestCase', [Attribute(Name('unittest', Load(), lineno=6, col_offset=22), 'TestCase', Load(), lineno=6, col_offset=22)], [FunctionDef('test_negative', arguments([Name('self', Param(), lineno=8, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=8), 'assertTrue', Load(), lineno=9, col_offset=8), [Compare(Num(-2, lineno=9, col_offset=25), [Eq()], [BinOp(Num(0, lineno=9, col_offset=30), Sub(), Num(2, lineno=9, col_offset=34), lineno=9, col_offset=30)], lineno=9, col_offset=24)], [], None, None, lineno=9, col_offset=8), lineno=9, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=8), 'assertTrue', Load(), lineno=10, col_offset=8), [Compare(Num(0, lineno=10, col_offset=25), [Eq()], [Num(0, lineno=10, col_offset=30)], lineno=10, col_offset=24)], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=8), 'assertTrue', Load(), lineno=11, col_offset=8), [Compare(UnaryOp(USub(), Num(-2, lineno=11, col_offset=26), lineno=11, col_offset=24), [Eq()], [Num(2, lineno=11, col_offset=31)], lineno=11, col_offset=24)], [], None, None, lineno=11, col_offset=8), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertTrue', Load(), lineno=12, col_offset=8), [Compare(Num(-2L, lineno=12, col_offset=25), [Eq()], [BinOp(Num(0, lineno=12, col_offset=31), Sub(), Num(2L, lineno=12, col_offset=35), lineno=12, col_offset=31)], lineno=12, col_offset=24)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertTrue', Load(), lineno=13, col_offset=8), [Compare(Num(-2.0, lineno=13, col_offset=25), [Eq()], [BinOp(Num(0, lineno=13, col_offset=32), Sub(), Num(2.0, lineno=13, col_offset=36), lineno=13, col_offset=32)], lineno=13, col_offset=24)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertTrue', Load(), lineno=14, col_offset=8), [Compare(Num(-2j, lineno=14, col_offset=25), [Eq()], [BinOp(Num(0, lineno=14, col_offset=31), Sub(), Num(2j, lineno=14, col_offset=35), lineno=14, col_offset=31)], lineno=14, col_offset=24)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=8, col_offset=4), FunctionDef('test_positive', arguments([Name('self', Param(), lineno=16, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=8), 'assertTrue', Load(), lineno=17, col_offset=8), [Compare(UnaryOp(UAdd(), Num(2, lineno=17, col_offset=25), lineno=17, col_offset=24), [Eq()], [Num(2, lineno=17, col_offset=30)], lineno=17, col_offset=24)], [], None, None, lineno=17, col_offset=8), lineno=17, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertTrue', Load(), lineno=18, col_offset=8), [Compare(UnaryOp(UAdd(), Num(0, lineno=18, col_offset=25), lineno=18, col_offset=24), [Eq()], [Num(0, lineno=18, col_offset=30)], lineno=18, col_offset=24)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=19, col_offset=8), 'assertTrue', Load(), lineno=19, col_offset=8), [Compare(UnaryOp(UAdd(), UnaryOp(UAdd(), Num(2, lineno=19, col_offset=26), lineno=19, col_offset=25), lineno=19, col_offset=24), [Eq()], [Num(2, lineno=19, col_offset=31)], lineno=19, col_offset=24)], [], None, None, lineno=19, col_offset=8), lineno=19, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertTrue', Load(), lineno=20, col_offset=8), [Compare(UnaryOp(UAdd(), Num(2L, lineno=20, col_offset=25), lineno=20, col_offset=24), [Eq()], [Num(2L, lineno=20, col_offset=31)], lineno=20, col_offset=24)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertTrue', Load(), lineno=21, col_offset=8), [Compare(UnaryOp(UAdd(), Num(2.0, lineno=21, col_offset=25), lineno=21, col_offset=24), [Eq()], [Num(2.0, lineno=21, col_offset=32)], lineno=21, col_offset=24)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=22, col_offset=8), 'assertTrue', Load(), lineno=22, col_offset=8), [Compare(UnaryOp(UAdd(), Num(2j, lineno=22, col_offset=25), lineno=22, col_offset=24), [Eq()], [Num(2j, lineno=22, col_offset=31)], lineno=22, col_offset=24)], [], None, None, lineno=22, col_offset=8), lineno=22, col_offset=8)], [], lineno=16, col_offset=4), FunctionDef('test_invert', arguments([Name('self', Param(), lineno=24, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertTrue', Load(), lineno=25, col_offset=8), [Compare(Num(-2, lineno=25, col_offset=25), [Eq()], [BinOp(Num(0, lineno=25, col_offset=30), Sub(), Num(2, lineno=25, col_offset=34), lineno=25, col_offset=30)], lineno=25, col_offset=24)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertTrue', Load(), lineno=26, col_offset=8), [Compare(Num(0, lineno=26, col_offset=25), [Eq()], [Num(0, lineno=26, col_offset=30)], lineno=26, col_offset=24)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=27, col_offset=8), 'assertTrue', Load(), lineno=27, col_offset=8), [Compare(UnaryOp(USub(), Num(-2, lineno=27, col_offset=26), lineno=27, col_offset=24), [Eq()], [Num(2, lineno=27, col_offset=31)], lineno=27, col_offset=24)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertTrue', Load(), lineno=28, col_offset=8), [Compare(Num(-2L, lineno=28, col_offset=25), [Eq()], [BinOp(Num(0, lineno=28, col_offset=31), Sub(), Num(2L, lineno=28, col_offset=35), lineno=28, col_offset=31)], lineno=28, col_offset=24)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('test_no_overflow', arguments([Name('self', Param(), lineno=30, col_offset=25)], None, None, []), [Assign([Name('nines', Store(), lineno=31, col_offset=8)], BinOp(Str('9', lineno=31, col_offset=16), Mult(), Num(32, lineno=31, col_offset=22), lineno=31, col_offset=16), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertTrue', Load(), lineno=32, col_offset=8), [Compare(Call(Name('eval', Load(), lineno=32, col_offset=24), [BinOp(Str('+', lineno=32, col_offset=29), Add(), Name('nines', Load(), lineno=32, col_offset=35), lineno=32, col_offset=29)], [], None, None, lineno=32, col_offset=24), [Eq()], [Call(Name('eval', Load(), lineno=32, col_offset=45), [BinOp(BinOp(Str('+', lineno=32, col_offset=50), Add(), Name('nines', Load(), lineno=32, col_offset=56), lineno=32, col_offset=50), Add(), Str('L', lineno=32, col_offset=64), lineno=32, col_offset=62)], [], None, None, lineno=32, col_offset=45)], lineno=32, col_offset=24)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertTrue', Load(), lineno=33, col_offset=8), [Compare(Call(Name('eval', Load(), lineno=33, col_offset=24), [BinOp(Str('-', lineno=33, col_offset=29), Add(), Name('nines', Load(), lineno=33, col_offset=35), lineno=33, col_offset=29)], [], None, None, lineno=33, col_offset=24), [Eq()], [Call(Name('eval', Load(), lineno=33, col_offset=45), [BinOp(BinOp(Str('-', lineno=33, col_offset=50), Add(), Name('nines', Load(), lineno=33, col_offset=56), lineno=33, col_offset=50), Add(), Str('L', lineno=33, col_offset=64), lineno=33, col_offset=62)], [], None, None, lineno=33, col_offset=45)], lineno=33, col_offset=24)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertTrue', Load(), lineno=34, col_offset=8), [Compare(Call(Name('eval', Load(), lineno=34, col_offset=24), [BinOp(Str('~', lineno=34, col_offset=29), Add(), Name('nines', Load(), lineno=34, col_offset=35), lineno=34, col_offset=29)], [], None, None, lineno=34, col_offset=24), [Eq()], [Call(Name('eval', Load(), lineno=34, col_offset=45), [BinOp(BinOp(Str('~', lineno=34, col_offset=50), Add(), Name('nines', Load(), lineno=34, col_offset=56), lineno=34, col_offset=50), Add(), Str('L', lineno=34, col_offset=64), lineno=34, col_offset=62)], [], None, None, lineno=34, col_offset=45)], lineno=34, col_offset=24)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('test_negation_of_exponentiation', arguments([Name('self', Param(), lineno=36, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [UnaryOp(USub(), BinOp(Num(2, lineno=39, col_offset=26), Pow(), Num(3, lineno=39, col_offset=31), lineno=39, col_offset=26), lineno=39, col_offset=25), Num(-8, lineno=39, col_offset=35)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [BinOp(Num(-2, lineno=40, col_offset=27), Pow(), Num(3, lineno=40, col_offset=33), lineno=40, col_offset=25), Num(-8, lineno=40, col_offset=37)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [UnaryOp(USub(), BinOp(Num(2, lineno=41, col_offset=26), Pow(), Num(4, lineno=41, col_offset=31), lineno=41, col_offset=26), lineno=41, col_offset=25), Num(-16, lineno=41, col_offset=35)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=8), 'assertEqual', Load(), lineno=42, col_offset=8), [BinOp(Num(-2, lineno=42, col_offset=27), Pow(), Num(4, lineno=42, col_offset=33), lineno=42, col_offset=25), Num(16, lineno=42, col_offset=36)], [], None, None, lineno=42, col_offset=8), lineno=42, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_bad_types', arguments([Name('self', Param(), lineno=44, col_offset=23)], None, None, []), [For(Name('op', Store(), lineno=45, col_offset=12), Tuple([Str('+', lineno=45, col_offset=18), Str('-', lineno=45, col_offset=23), Str('~', lineno=45, col_offset=28)], Load(), lineno=45, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=12), 'assertRaises', Load(), lineno=46, col_offset=12), [Name('TypeError', Load(), lineno=46, col_offset=30), Name('eval', Load(), lineno=46, col_offset=41), BinOp(Name('op', Load(), lineno=46, col_offset=47), Add(), Str("'a'", lineno=46, col_offset=52), lineno=46, col_offset=47)], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=12), If(Name('have_unicode', Load(), lineno=47, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=16), 'assertRaises', Load(), lineno=48, col_offset=16), [Name('TypeError', Load(), lineno=48, col_offset=34), Name('eval', Load(), lineno=48, col_offset=45), BinOp(Name('op', Load(), lineno=48, col_offset=51), Add(), Str("u'a'", lineno=48, col_offset=56), lineno=48, col_offset=51)], [], None, None, lineno=48, col_offset=16), lineno=48, col_offset=16)], [], lineno=47, col_offset=12)], [], lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertRaises', Load(), lineno=50, col_offset=8), [Name('TypeError', Load(), lineno=50, col_offset=26), Name('eval', Load(), lineno=50, col_offset=37), Str('~2j', lineno=50, col_offset=43)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=8), 'assertRaises', Load(), lineno=51, col_offset=8), [Name('TypeError', Load(), lineno=51, col_offset=26), Name('eval', Load(), lineno=51, col_offset=37), Str('~2.0', lineno=51, col_offset=43)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=8)], [], lineno=44, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=55, col_offset=4), [Name('UnaryOpTestCase', Load(), lineno=55, col_offset=17)], [], None, None, lineno=55, col_offset=4), lineno=55, col_offset=4)], [], lineno=54, col_offset=0), If(Compare(Name('__name__', Load(), lineno=58, col_offset=3), [Eq()], [Str('__main__', lineno=58, col_offset=15)], lineno=58, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=59, col_offset=4), [], [], None, None, lineno=59, col_offset=4), lineno=59, col_offset=4)], [], lineno=58, col_offset=0)])
