Module([Import([alias('re', None), alias('unicodedata', None), alias('sys', None)], lineno=1, col_offset=0), If(Compare(Attribute(Name('sys', Load(), lineno=3, col_offset=3), 'maxunicode', Load(), lineno=3, col_offset=3), [Eq()], [Num(65535, lineno=3, col_offset=21)], lineno=3, col_offset=3), [Raise(Call(Name('RuntimeError', Load(), lineno=4, col_offset=10), [Str('need UCS-4 Python', lineno=4, col_offset=23)], [], None, None, lineno=4, col_offset=10), None, None, lineno=4, col_offset=4)], [], lineno=3, col_offset=0), FunctionDef('gen_category', arguments([Name('cats', Param(), lineno=6, col_offset=17)], None, None, []), [For(Name('i', Store(), lineno=7, col_offset=8), Call(Name('range', Load(), lineno=7, col_offset=13), [Num(0, lineno=7, col_offset=19), Num(1114112, lineno=7, col_offset=22)], [], None, None, lineno=7, col_offset=13), [If(Compare(Call(Attribute(Name('unicodedata', Load(), lineno=8, col_offset=11), 'category', Load(), lineno=8, col_offset=11), [Call(Name('unichr', Load(), lineno=8, col_offset=32), [Name('i', Load(), lineno=8, col_offset=39)], [], None, None, lineno=8, col_offset=32)], [], None, None, lineno=8, col_offset=11), [In()], [Name('cats', Load(), lineno=8, col_offset=46)], lineno=8, col_offset=11), [Expr(Yield(Name('i', Load(), lineno=9, col_offset=18), lineno=9, col_offset=12), lineno=9, col_offset=12)], [], lineno=8, col_offset=8)], [], lineno=7, col_offset=4)], [], lineno=6, col_offset=0), FunctionDef('gen_bidirectional', arguments([Name('cats', Param(), lineno=11, col_offset=22)], None, None, []), [For(Name('i', Store(), lineno=12, col_offset=8), Call(Name('range', Load(), lineno=12, col_offset=13), [Num(0, lineno=12, col_offset=19), Num(1114112, lineno=12, col_offset=22)], [], None, None, lineno=12, col_offset=13), [If(Compare(Call(Attribute(Name('unicodedata', Load(), lineno=13, col_offset=11), 'bidirectional', Load(), lineno=13, col_offset=11), [Call(Name('unichr', Load(), lineno=13, col_offset=37), [Name('i', Load(), lineno=13, col_offset=44)], [], None, None, lineno=13, col_offset=37)], [], None, None, lineno=13, col_offset=11), [In()], [Name('cats', Load(), lineno=13, col_offset=51)], lineno=13, col_offset=11), [Expr(Yield(Name('i', Load(), lineno=14, col_offset=18), lineno=14, col_offset=12), lineno=14, col_offset=12)], [], lineno=13, col_offset=8)], [], lineno=12, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('compact_set', arguments([Name('l', Param(), lineno=16, col_offset=16)], None, None, []), [Assign([Name('single', Store(), lineno=17, col_offset=4)], List([], Load(), lineno=17, col_offset=13), lineno=17, col_offset=4), Assign([Name('tuple', Store(), lineno=18, col_offset=4)], List([], Load(), lineno=18, col_offset=12), lineno=18, col_offset=4), Assign([Name('prev', Store(), lineno=19, col_offset=4)], Name('None', Load(), lineno=19, col_offset=11), lineno=19, col_offset=4), Assign([Name('span', Store(), lineno=20, col_offset=4)], Num(0, lineno=20, col_offset=11), lineno=20, col_offset=4), For(Name('e', Store(), lineno=21, col_offset=8), Name('l', Load(), lineno=21, col_offset=13), [If(Compare(Name('prev', Load(), lineno=22, col_offset=11), [Is()], [Name('None', Load(), lineno=22, col_offset=19)], lineno=22, col_offset=11), [Assign([Name('prev', Store(), lineno=23, col_offset=12)], Name('e', Load(), lineno=23, col_offset=19), lineno=23, col_offset=12), Assign([Name('span', Store(), lineno=24, col_offset=12)], Num(0, lineno=24, col_offset=19), lineno=24, col_offset=12), Continue( lineno=25, col_offset=12)], [], lineno=22, col_offset=8), If(Compare(BinOp(BinOp(Name('prev', Load(), lineno=26, col_offset=11), Add(), Name('span', Load(), lineno=26, col_offset=16), lineno=26, col_offset=11), Add(), Num(1, lineno=26, col_offset=21), lineno=26, col_offset=20), [NotEq()], [Name('e', Load(), lineno=26, col_offset=26)], lineno=26, col_offset=11), [If(Compare(Name('span', Load(), lineno=27, col_offset=15), [Gt()], [Num(2, lineno=27, col_offset=22)], lineno=27, col_offset=15), [Expr(Call(Attribute(Name('tuple', Load(), lineno=28, col_offset=16), 'append', Load(), lineno=28, col_offset=16), [Tuple([Name('prev', Load(), lineno=28, col_offset=30), BinOp(BinOp(Name('prev', Load(), lineno=28, col_offset=35), Add(), Name('span', Load(), lineno=28, col_offset=40), lineno=28, col_offset=35), Add(), Num(1, lineno=28, col_offset=45), lineno=28, col_offset=44)], Load(), lineno=28, col_offset=30)], [], None, None, lineno=28, col_offset=16), lineno=28, col_offset=16)], [For(Name('i', Store(), lineno=30, col_offset=20), Call(Name('range', Load(), lineno=30, col_offset=25), [Name('prev', Load(), lineno=30, col_offset=31), BinOp(BinOp(Name('prev', Load(), lineno=30, col_offset=37), Add(), Name('span', Load(), lineno=30, col_offset=42), lineno=30, col_offset=37), Add(), Num(1, lineno=30, col_offset=47), lineno=30, col_offset=46)], [], None, None, lineno=30, col_offset=25), [Expr(Call(Attribute(Name('single', Load(), lineno=31, col_offset=20), 'append', Load(), lineno=31, col_offset=20), [Name('i', Load(), lineno=31, col_offset=34)], [], None, None, lineno=31, col_offset=20), lineno=31, col_offset=20)], [], lineno=30, col_offset=16)], lineno=27, col_offset=12), Assign([Name('prev', Store(), lineno=32, col_offset=12)], Name('e', Load(), lineno=32, col_offset=19), lineno=32, col_offset=12), Assign([Name('span', Store(), lineno=33, col_offset=12)], Num(0, lineno=33, col_offset=19), lineno=33, col_offset=12)], [AugAssign(Name('span', Store(), lineno=35, col_offset=12), Add(), Num(1, lineno=35, col_offset=20), lineno=35, col_offset=12)], lineno=26, col_offset=8)], [], lineno=21, col_offset=4), If(Name('span', Load(), lineno=36, col_offset=7), [Expr(Call(Attribute(Name('tuple', Load(), lineno=37, col_offset=8), 'append', Load(), lineno=37, col_offset=8), [Tuple([Name('prev', Load(), lineno=37, col_offset=22), BinOp(BinOp(Name('prev', Load(), lineno=37, col_offset=27), Add(), Name('span', Load(), lineno=37, col_offset=32), lineno=37, col_offset=27), Add(), Num(1, lineno=37, col_offset=37), lineno=37, col_offset=36)], Load(), lineno=37, col_offset=22)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8)], [Expr(Call(Attribute(Name('single', Load(), lineno=39, col_offset=8), 'append', Load(), lineno=39, col_offset=8), [Name('prev', Load(), lineno=39, col_offset=22)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8)], lineno=36, col_offset=4), Assign([Name('tuple', Store(), lineno=40, col_offset=4)], Call(Attribute(Str(' + ', lineno=40, col_offset=12), 'join', Load(), lineno=40, col_offset=12), [ListComp(BinOp(Str('range(%d,%d)', lineno=40, col_offset=24), Mod(), Name('t', Load(), lineno=40, col_offset=41), lineno=40, col_offset=24), [comprehension(Name('t', Store(), lineno=40, col_offset=47), Name('tuple', Load(), lineno=40, col_offset=52), [])], lineno=40, col_offset=24)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=4), If(UnaryOp(Not(), Name('single', Load(), lineno=41, col_offset=11), lineno=41, col_offset=7), [Return(BinOp(Str('set(%s)', lineno=42, col_offset=15), Mod(), Name('tuple', Load(), lineno=42, col_offset=27), lineno=42, col_offset=15), lineno=42, col_offset=8)], [], lineno=41, col_offset=4), If(UnaryOp(Not(), Name('tuple', Load(), lineno=43, col_offset=11), lineno=43, col_offset=7), [Return(BinOp(Str('set(%s)', lineno=44, col_offset=15), Mod(), Call(Name('repr', Load(), lineno=44, col_offset=27), [Name('single', Load(), lineno=44, col_offset=32)], [], None, None, lineno=44, col_offset=27), lineno=44, col_offset=15), lineno=44, col_offset=8)], [], lineno=43, col_offset=4), Return(BinOp(Str('set(%s + %s)', lineno=45, col_offset=11), Mod(), Tuple([Call(Name('repr', Load(), lineno=45, col_offset=29), [Name('single', Load(), lineno=45, col_offset=34)], [], None, None, lineno=45, col_offset=29), Name('tuple', Load(), lineno=45, col_offset=42)], Load(), lineno=45, col_offset=29), lineno=45, col_offset=11), lineno=45, col_offset=4)], [], lineno=16, col_offset=0), Assign([Name('data', Store(), lineno=49, col_offset=0)], Call(Attribute(Call(Name('open', Load(), lineno=49, col_offset=7), [Str('rfc3454.txt', lineno=49, col_offset=12)], [], None, None, lineno=49, col_offset=7), 'readlines', Load(), lineno=49, col_offset=7), [], [], None, None, lineno=49, col_offset=7), lineno=49, col_offset=0), Assign([Name('tables', Store(), lineno=51, col_offset=0)], List([], Load(), lineno=51, col_offset=9), lineno=51, col_offset=0), Assign([Name('curname', Store(), lineno=52, col_offset=0)], Name('None', Load(), lineno=52, col_offset=10), lineno=52, col_offset=0), For(Name('l', Store(), lineno=53, col_offset=4), Name('data', Load(), lineno=53, col_offset=9), [Assign([Name('l', Store(), lineno=54, col_offset=4)], Call(Attribute(Name('l', Load(), lineno=54, col_offset=8), 'strip', Load(), lineno=54, col_offset=8), [], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=4), If(UnaryOp(Not(), Name('l', Load(), lineno=55, col_offset=11), lineno=55, col_offset=7), [Continue( lineno=56, col_offset=8)], [], lineno=55, col_offset=4), If(BoolOp(Or(), [Call(Attribute(Name('l', Load(), lineno=58, col_offset=7), 'startswith', Load(), lineno=58, col_offset=7), [Str('Hoffman & Blanchet', lineno=58, col_offset=20)], [], None, None, lineno=58, col_offset=7), Call(Attribute(Name('l', Load(), lineno=59, col_offset=7), 'startswith', Load(), lineno=59, col_offset=7), [Str('RFC 3454', lineno=59, col_offset=20)], [], None, None, lineno=59, col_offset=7)], lineno=58, col_offset=7), [Continue( lineno=60, col_offset=8)], [], lineno=58, col_offset=4), Assign([Name('m', Store(), lineno=62, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=62, col_offset=8), 'match', Load(), lineno=62, col_offset=8), [Str('----- (Start|End) Table ([A-Z](.[0-9])+) -----', lineno=62, col_offset=17), Name('l', Load(), lineno=62, col_offset=67)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=4), If(Name('m', Load(), lineno=63, col_offset=7), [If(Compare(Call(Attribute(Name('m', Load(), lineno=64, col_offset=11), 'group', Load(), lineno=64, col_offset=11), [Num(1, lineno=64, col_offset=19)], [], None, None, lineno=64, col_offset=11), [Eq()], [Str('Start', lineno=64, col_offset=25)], lineno=64, col_offset=11), [If(Name('curname', Load(), lineno=65, col_offset=15), [Raise(Call(Name('RuntimeError', Load(), lineno=66, col_offset=22), [Str('Double Start', lineno=66, col_offset=35), Tuple([Name('curname', Load(), lineno=66, col_offset=52), Name('l', Load(), lineno=66, col_offset=61)], Load(), lineno=66, col_offset=52)], [], None, None, lineno=66, col_offset=22), None, None, lineno=66, col_offset=16)], [], lineno=65, col_offset=12), Assign([Name('curname', Store(), lineno=67, col_offset=12)], Call(Attribute(Name('m', Load(), lineno=67, col_offset=22), 'group', Load(), lineno=67, col_offset=22), [Num(2, lineno=67, col_offset=30)], [], None, None, lineno=67, col_offset=22), lineno=67, col_offset=12), Assign([Name('table', Store(), lineno=68, col_offset=12)], Dict([], [], lineno=68, col_offset=20), lineno=68, col_offset=12), Expr(Call(Attribute(Name('tables', Load(), lineno=69, col_offset=12), 'append', Load(), lineno=69, col_offset=12), [Tuple([Name('curname', Load(), lineno=69, col_offset=27), Name('table', Load(), lineno=69, col_offset=36)], Load(), lineno=69, col_offset=27)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12), Continue( lineno=70, col_offset=12)], [If(UnaryOp(Not(), Name('curname', Load(), lineno=72, col_offset=19), lineno=72, col_offset=15), [Raise(Call(Name('RuntimeError', Load(), lineno=73, col_offset=22), [Str('End without start', lineno=73, col_offset=35), Name('l', Load(), lineno=73, col_offset=56)], [], None, None, lineno=73, col_offset=22), None, None, lineno=73, col_offset=16)], [], lineno=72, col_offset=12), Assign([Name('curname', Store(), lineno=74, col_offset=12)], Name('None', Load(), lineno=74, col_offset=22), lineno=74, col_offset=12), Continue( lineno=75, col_offset=12)], lineno=64, col_offset=8)], [], lineno=63, col_offset=4), If(UnaryOp(Not(), Name('curname', Load(), lineno=76, col_offset=11), lineno=76, col_offset=7), [Continue( lineno=77, col_offset=8)], [], lineno=76, col_offset=4), Assign([Name('fields', Store(), lineno=79, col_offset=4)], Call(Attribute(Name('l', Load(), lineno=79, col_offset=13), 'split', Load(), lineno=79, col_offset=13), [Str(';', lineno=79, col_offset=21)], [], None, None, lineno=79, col_offset=13), lineno=79, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=80, col_offset=7), [Name('fields', Load(), lineno=80, col_offset=11)], [], None, None, lineno=80, col_offset=7), [Gt()], [Num(1, lineno=80, col_offset=21)], lineno=80, col_offset=7), [Assign([Name('fields', Store(), lineno=82, col_offset=8)], Subscript(Name('fields', Load(), lineno=82, col_offset=17), Slice(None, Num(-1, lineno=82, col_offset=26), None), Load(), lineno=82, col_offset=17), lineno=82, col_offset=8)], [], lineno=80, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=83, col_offset=7), [Name('fields', Load(), lineno=83, col_offset=11)], [], None, None, lineno=83, col_offset=7), [Eq()], [Num(1, lineno=83, col_offset=22)], lineno=83, col_offset=7), [Assign([Name('fields', Store(), lineno=84, col_offset=8)], Call(Attribute(Subscript(Name('fields', Load(), lineno=84, col_offset=17), Index(Num(0, lineno=84, col_offset=24)), Load(), lineno=84, col_offset=17), 'split', Load(), lineno=84, col_offset=17), [Str('-', lineno=84, col_offset=33)], [], None, None, lineno=84, col_offset=17), lineno=84, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=85, col_offset=11), [Name('fields', Load(), lineno=85, col_offset=15)], [], None, None, lineno=85, col_offset=11), [Gt()], [Num(1, lineno=85, col_offset=25)], lineno=85, col_offset=11), [TryExcept([Assign([Tuple([Name('start', Store(), lineno=88, col_offset=16), Name('end', Store(), lineno=88, col_offset=23)], Store(), lineno=88, col_offset=16)], Name('fields', Load(), lineno=88, col_offset=29), lineno=88, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=89, col_offset=19), None, [Raise(Call(Name('RuntimeError', Load(), lineno=90, col_offset=22), [Str('Unpacking problem', lineno=90, col_offset=35), Name('l', Load(), lineno=90, col_offset=56)], [], None, None, lineno=90, col_offset=22), None, None, lineno=90, col_offset=16)], lineno=89, col_offset=12)], [], lineno=87, col_offset=12)], [Assign([Name('start', Store(), lineno=92, col_offset=12), Name('end', Store(), lineno=92, col_offset=20)], Subscript(Name('fields', Load(), lineno=92, col_offset=26), Index(Num(0, lineno=92, col_offset=33)), Load(), lineno=92, col_offset=26), lineno=92, col_offset=12)], lineno=85, col_offset=8), Assign([Name('start', Store(), lineno=93, col_offset=8)], Call(Name('int', Load(), lineno=93, col_offset=16), [Name('start', Load(), lineno=93, col_offset=20), Num(16, lineno=93, col_offset=27)], [], None, None, lineno=93, col_offset=16), lineno=93, col_offset=8), Assign([Name('end', Store(), lineno=94, col_offset=8)], Call(Name('int', Load(), lineno=94, col_offset=14), [Name('end', Load(), lineno=94, col_offset=18), Num(16, lineno=94, col_offset=23)], [], None, None, lineno=94, col_offset=14), lineno=94, col_offset=8), For(Name('i', Store(), lineno=95, col_offset=12), Call(Name('range', Load(), lineno=95, col_offset=17), [Name('start', Load(), lineno=95, col_offset=23), BinOp(Name('end', Load(), lineno=95, col_offset=30), Add(), Num(1, lineno=95, col_offset=34), lineno=95, col_offset=30)], [], None, None, lineno=95, col_offset=17), [Assign([Subscript(Name('table', Load(), lineno=96, col_offset=12), Index(Name('i', Load(), lineno=96, col_offset=18)), Store(), lineno=96, col_offset=12)], Name('i', Load(), lineno=96, col_offset=23), lineno=96, col_offset=12)], [], lineno=95, col_offset=8)], [Assign([Tuple([Name('code', Store(), lineno=98, col_offset=8), Name('value', Store(), lineno=98, col_offset=14)], Store(), lineno=98, col_offset=8)], Name('fields', Load(), lineno=98, col_offset=22), lineno=98, col_offset=8), Assign([Name('value', Store(), lineno=99, col_offset=8)], Call(Attribute(Name('value', Load(), lineno=99, col_offset=16), 'strip', Load(), lineno=99, col_offset=16), [], [], None, None, lineno=99, col_offset=16), lineno=99, col_offset=8), If(Name('value', Load(), lineno=100, col_offset=11), [Assign([Name('value', Store(), lineno=101, col_offset=12)], ListComp(Call(Name('int', Load(), lineno=101, col_offset=21), [Name('v', Load(), lineno=101, col_offset=25), Num(16, lineno=101, col_offset=28)], [], None, None, lineno=101, col_offset=21), [comprehension(Name('v', Store(), lineno=101, col_offset=36), Call(Attribute(Name('value', Load(), lineno=101, col_offset=41), 'split', Load(), lineno=101, col_offset=41), [Str(' ', lineno=101, col_offset=53)], [], None, None, lineno=101, col_offset=41), [])], lineno=101, col_offset=21), lineno=101, col_offset=12)], [Assign([Name('value', Store(), lineno=104, col_offset=12)], Name('None', Load(), lineno=104, col_offset=20), lineno=104, col_offset=12)], lineno=100, col_offset=8), Assign([Subscript(Name('table', Load(), lineno=105, col_offset=8), Index(Call(Name('int', Load(), lineno=105, col_offset=14), [Name('code', Load(), lineno=105, col_offset=18), Num(16, lineno=105, col_offset=24)], [], None, None, lineno=105, col_offset=14)), Store(), lineno=105, col_offset=8)], Name('value', Load(), lineno=105, col_offset=31), lineno=105, col_offset=8)], lineno=83, col_offset=4)], [], lineno=53, col_offset=0), Print(None, [Str('# This file is generated by mkstringprep.py. DO NOT EDIT.\n"""Library that exposes various tables found in the StringPrep RFC 3454.\n\nThere are two kinds of tables: sets, for which a member test is provided,\nand mappings, for which a mapping function is provided.\n"""\n\nimport unicodedata\n', lineno=117, col_offset=-1)], True, lineno=109, col_offset=0), Print(None, [BinOp(Str('assert unicodedata.unidata_version == %s', lineno=119, col_offset=6), Mod(), Call(Name('repr', Load(), lineno=119, col_offset=51), [Attribute(Name('unicodedata', Load(), lineno=119, col_offset=56), 'unidata_version', Load(), lineno=119, col_offset=56)], [], None, None, lineno=119, col_offset=51), lineno=119, col_offset=6)], True, lineno=119, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=123, col_offset=0), Name('table', Store(), lineno=123, col_offset=6)], Store(), lineno=123, col_offset=0)], Subscript(Name('tables', Load(), lineno=123, col_offset=14), Index(Num(0, lineno=123, col_offset=21)), Load(), lineno=123, col_offset=14), lineno=123, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=124, col_offset=4), Index(Num(0, lineno=124, col_offset=11)), Del(), lineno=124, col_offset=4)], lineno=124, col_offset=0), Assert(Compare(Name('name', Load(), lineno=125, col_offset=7), [Eq()], [Str('A.1', lineno=125, col_offset=15)], lineno=125, col_offset=7), None, lineno=125, col_offset=0), Assign([Name('table', Store(), lineno=126, col_offset=0)], Call(Name('set', Load(), lineno=126, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=126, col_offset=12), 'keys', Load(), lineno=126, col_offset=12), [], [], None, None, lineno=126, col_offset=12)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=0), Assign([Name('Cn', Store(), lineno=127, col_offset=0)], Call(Name('set', Load(), lineno=127, col_offset=5), [Call(Name('gen_category', Load(), lineno=127, col_offset=9), [List([Str('Cn', lineno=127, col_offset=23)], Load(), lineno=127, col_offset=22)], [], None, None, lineno=127, col_offset=9)], [], None, None, lineno=127, col_offset=5), lineno=127, col_offset=0), AugAssign(Name('Cn', Store(), lineno=130, col_offset=0), Sub(), Call(Name('set', Load(), lineno=130, col_offset=6), [Call(Name('range', Load(), lineno=130, col_offset=10), [Num(64976, lineno=130, col_offset=16), Num(65008, lineno=130, col_offset=24)], [], None, None, lineno=130, col_offset=10)], [], None, None, lineno=130, col_offset=6), lineno=130, col_offset=0), AugAssign(Name('Cn', Store(), lineno=132, col_offset=0), Sub(), Call(Name('set', Load(), lineno=132, col_offset=6), [Call(Name('range', Load(), lineno=132, col_offset=10), [Num(65534, lineno=132, col_offset=16), Num(1114112, lineno=132, col_offset=24), Num(65536, lineno=132, col_offset=34)], [], None, None, lineno=132, col_offset=10)], [], None, None, lineno=132, col_offset=6), lineno=132, col_offset=0), AugAssign(Name('Cn', Store(), lineno=133, col_offset=0), Sub(), Call(Name('set', Load(), lineno=133, col_offset=6), [Call(Name('range', Load(), lineno=133, col_offset=10), [Num(65535, lineno=133, col_offset=16), Num(1114112, lineno=133, col_offset=24), Num(65536, lineno=133, col_offset=34)], [], None, None, lineno=133, col_offset=10)], [], None, None, lineno=133, col_offset=6), lineno=133, col_offset=0), Print(None, [Str("\ndef in_table_a1(code):\n    if unicodedata.category(code) != 'Cn': return False\n    c = ord(code)\n    if 0xFDD0 <= c < 0xFDF0: return False\n    return (c & 0xFFFF) not in (0xFFFE, 0xFFFF)\n", lineno=143, col_offset=-1)], True, lineno=137, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=146, col_offset=0), Name('table', Store(), lineno=146, col_offset=6)], Store(), lineno=146, col_offset=0)], Subscript(Name('tables', Load(), lineno=146, col_offset=14), Index(Num(0, lineno=146, col_offset=21)), Load(), lineno=146, col_offset=14), lineno=146, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=147, col_offset=4), Index(Num(0, lineno=147, col_offset=11)), Del(), lineno=147, col_offset=4)], lineno=147, col_offset=0), Assert(Compare(Name('name', Load(), lineno=148, col_offset=7), [Eq()], [Str('B.1', lineno=148, col_offset=15)], lineno=148, col_offset=7), None, lineno=148, col_offset=0), Assign([Name('table', Store(), lineno=149, col_offset=0)], Call(Name('sorted', Load(), lineno=149, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=149, col_offset=15), 'keys', Load(), lineno=149, col_offset=15), [], [], None, None, lineno=149, col_offset=15)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=0), Print(None, [BinOp(BinOp(Str('\nb1_set = ', lineno=151, col_offset=-1), Add(), Call(Name('compact_set', Load(), lineno=151, col_offset=15), [Name('table', Load(), lineno=151, col_offset=27)], [], None, None, lineno=151, col_offset=15), lineno=151, col_offset=-1), Add(), Str('\ndef in_table_b1(code):\n    return ord(code) in b1_set\n', lineno=154, col_offset=-1), lineno=151, col_offset=34)], True, lineno=150, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=162, col_offset=0), Name('table_b2', Store(), lineno=162, col_offset=6)], Store(), lineno=162, col_offset=0)], Subscript(Name('tables', Load(), lineno=162, col_offset=17), Index(Num(0, lineno=162, col_offset=24)), Load(), lineno=162, col_offset=17), lineno=162, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=163, col_offset=4), Index(Num(0, lineno=163, col_offset=11)), Del(), lineno=163, col_offset=4)], lineno=163, col_offset=0), Assert(Compare(Name('name', Load(), lineno=164, col_offset=7), [Eq()], [Str('B.2', lineno=164, col_offset=15)], lineno=164, col_offset=7), None, lineno=164, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=166, col_offset=0), Name('table_b3', Store(), lineno=166, col_offset=6)], Store(), lineno=166, col_offset=0)], Subscript(Name('tables', Load(), lineno=166, col_offset=17), Index(Num(0, lineno=166, col_offset=24)), Load(), lineno=166, col_offset=17), lineno=166, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=167, col_offset=4), Index(Num(0, lineno=167, col_offset=11)), Del(), lineno=167, col_offset=4)], lineno=167, col_offset=0), Assert(Compare(Name('name', Load(), lineno=168, col_offset=7), [Eq()], [Str('B.3', lineno=168, col_offset=15)], lineno=168, col_offset=7), None, lineno=168, col_offset=0), Assign([Name('b3_exceptions', Store(), lineno=173, col_offset=0)], Dict([], [], lineno=173, col_offset=16), lineno=173, col_offset=0), For(Tuple([Name('k', Store(), lineno=175, col_offset=4), Name('v', Store(), lineno=175, col_offset=6)], Store(), lineno=175, col_offset=4), Call(Attribute(Name('table_b2', Load(), lineno=175, col_offset=11), 'items', Load(), lineno=175, col_offset=11), [], [], None, None, lineno=175, col_offset=11), [If(Compare(Call(Name('map', Load(), lineno=176, col_offset=7), [Name('ord', Load(), lineno=176, col_offset=11), Call(Attribute(Call(Name('unichr', Load(), lineno=176, col_offset=16), [Name('k', Load(), lineno=176, col_offset=23)], [], None, None, lineno=176, col_offset=16), 'lower', Load(), lineno=176, col_offset=16), [], [], None, None, lineno=176, col_offset=16)], [], None, None, lineno=176, col_offset=7), [NotEq()], [Name('v', Load(), lineno=176, col_offset=38)], lineno=176, col_offset=7), [Assign([Subscript(Name('b3_exceptions', Load(), lineno=177, col_offset=8), Index(Name('k', Load(), lineno=177, col_offset=22)), Store(), lineno=177, col_offset=8)], Call(Attribute(Str(u'', lineno=177, col_offset=27), 'join', Load(), lineno=177, col_offset=27), [Call(Name('map', Load(), lineno=177, col_offset=36), [Name('unichr', Load(), lineno=177, col_offset=40), Name('v', Load(), lineno=177, col_offset=47)], [], None, None, lineno=177, col_offset=36)], [], None, None, lineno=177, col_offset=27), lineno=177, col_offset=8)], [], lineno=176, col_offset=4)], [], lineno=175, col_offset=0), Assign([Name('b3', Store(), lineno=179, col_offset=0)], Call(Name('sorted', Load(), lineno=179, col_offset=5), [Call(Attribute(Name('b3_exceptions', Load(), lineno=179, col_offset=12), 'items', Load(), lineno=179, col_offset=12), [], [], None, None, lineno=179, col_offset=12)], [], None, None, lineno=179, col_offset=5), lineno=179, col_offset=0), Print(None, [Str('\nb3_exceptions = {', lineno=182, col_offset=-1)], True, lineno=181, col_offset=0), For(Tuple([Name('i', Store(), lineno=183, col_offset=4), Tuple([Name('k', Store(), lineno=183, col_offset=7), Name('v', Store(), lineno=183, col_offset=9)], Store(), lineno=183, col_offset=7)], Store(), lineno=183, col_offset=4), Call(Name('enumerate', Load(), lineno=183, col_offset=15), [Name('b3', Load(), lineno=183, col_offset=25)], [], None, None, lineno=183, col_offset=15), [Print(None, [BinOp(Str('0x%x:%s,', lineno=184, col_offset=10), Mod(), Tuple([Name('k', Load(), lineno=184, col_offset=24), Call(Name('repr', Load(), lineno=184, col_offset=27), [Name('v', Load(), lineno=184, col_offset=32)], [], None, None, lineno=184, col_offset=27)], Load(), lineno=184, col_offset=24), lineno=184, col_offset=10)], False, lineno=184, col_offset=4), If(Compare(BinOp(Name('i', Load(), lineno=185, col_offset=7), Mod(), Num(4, lineno=185, col_offset=11), lineno=185, col_offset=7), [Eq()], [Num(3, lineno=185, col_offset=16)], lineno=185, col_offset=7), [Print(None, [], True, lineno=186, col_offset=8)], [], lineno=185, col_offset=4)], [], lineno=183, col_offset=0), Print(None, [Str('}', lineno=187, col_offset=6)], True, lineno=187, col_offset=0), Print(None, [Str('\ndef map_table_b3(code):\n    r = b3_exceptions.get(ord(code))\n    if r is not None: return r\n    return code.lower()\n', lineno=194, col_offset=-1)], True, lineno=189, col_offset=0), FunctionDef('map_table_b3', arguments([Name('code', Param(), lineno=196, col_offset=17)], None, None, []), [Assign([Name('r', Store(), lineno=197, col_offset=4)], Call(Attribute(Name('b3_exceptions', Load(), lineno=197, col_offset=8), 'get', Load(), lineno=197, col_offset=8), [Call(Name('ord', Load(), lineno=197, col_offset=26), [Name('code', Load(), lineno=197, col_offset=30)], [], None, None, lineno=197, col_offset=26)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=4), If(Compare(Name('r', Load(), lineno=198, col_offset=7), [IsNot()], [Name('None', Load(), lineno=198, col_offset=16)], lineno=198, col_offset=7), [Return(Name('r', Load(), lineno=198, col_offset=29), lineno=198, col_offset=22)], [], lineno=198, col_offset=4), Return(Call(Attribute(Name('code', Load(), lineno=199, col_offset=11), 'lower', Load(), lineno=199, col_offset=11), [], [], None, None, lineno=199, col_offset=11), lineno=199, col_offset=4)], [], lineno=196, col_offset=0), FunctionDef('map_table_b2', arguments([Name('a', Param(), lineno=205, col_offset=17)], None, None, []), [Assign([Name('al', Store(), lineno=206, col_offset=4)], Call(Name('map_table_b3', Load(), lineno=206, col_offset=9), [Name('a', Load(), lineno=206, col_offset=22)], [], None, None, lineno=206, col_offset=9), lineno=206, col_offset=4), Assign([Name('b', Store(), lineno=207, col_offset=4)], Call(Attribute(Name('unicodedata', Load(), lineno=207, col_offset=8), 'normalize', Load(), lineno=207, col_offset=8), [Str('NFKC', lineno=207, col_offset=30), Name('al', Load(), lineno=207, col_offset=38)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=4), Assign([Name('bl', Store(), lineno=208, col_offset=4)], Call(Attribute(Str(u'', lineno=208, col_offset=9), 'join', Load(), lineno=208, col_offset=9), [ListComp(Call(Name('map_table_b3', Load(), lineno=208, col_offset=19), [Name('ch', Load(), lineno=208, col_offset=32)], [], None, None, lineno=208, col_offset=19), [comprehension(Name('ch', Store(), lineno=208, col_offset=40), Name('b', Load(), lineno=208, col_offset=46), [])], lineno=208, col_offset=19)], [], None, None, lineno=208, col_offset=9), lineno=208, col_offset=4), Assign([Name('c', Store(), lineno=209, col_offset=4)], Call(Attribute(Name('unicodedata', Load(), lineno=209, col_offset=8), 'normalize', Load(), lineno=209, col_offset=8), [Str('NFKC', lineno=209, col_offset=30), Name('bl', Load(), lineno=209, col_offset=38)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=4), If(Compare(Name('b', Load(), lineno=210, col_offset=7), [NotEq()], [Name('c', Load(), lineno=210, col_offset=12)], lineno=210, col_offset=7), [Return(Name('c', Load(), lineno=211, col_offset=15), lineno=211, col_offset=8)], [Return(Name('al', Load(), lineno=213, col_offset=15), lineno=213, col_offset=8)], lineno=210, col_offset=4)], [], lineno=205, col_offset=0), Assign([Name('specials', Store(), lineno=215, col_offset=0)], Dict([], [], lineno=215, col_offset=11), lineno=215, col_offset=0), For(Tuple([Name('k', Store(), lineno=216, col_offset=4), Name('v', Store(), lineno=216, col_offset=6)], Store(), lineno=216, col_offset=4), Call(Attribute(Name('table_b2', Load(), lineno=216, col_offset=11), 'items', Load(), lineno=216, col_offset=11), [], [], None, None, lineno=216, col_offset=11), [If(Compare(Call(Name('map', Load(), lineno=217, col_offset=7), [Name('ord', Load(), lineno=217, col_offset=11), Call(Name('map_table_b2', Load(), lineno=217, col_offset=16), [Call(Name('unichr', Load(), lineno=217, col_offset=29), [Name('k', Load(), lineno=217, col_offset=36)], [], None, None, lineno=217, col_offset=29)], [], None, None, lineno=217, col_offset=16)], [], None, None, lineno=217, col_offset=7), [NotEq()], [Name('v', Load(), lineno=217, col_offset=44)], lineno=217, col_offset=7), [Assign([Subscript(Name('specials', Load(), lineno=218, col_offset=8), Index(Name('k', Load(), lineno=218, col_offset=17)), Store(), lineno=218, col_offset=8)], Name('v', Load(), lineno=218, col_offset=22), lineno=218, col_offset=8)], [], lineno=217, col_offset=4)], [], lineno=216, col_offset=0), Assert(Compare(Name('specials', Load(), lineno=221, col_offset=7), [Eq()], [Dict([], [], lineno=221, col_offset=19)], lineno=221, col_offset=7), None, lineno=221, col_offset=0), Print(None, [Str('\ndef map_table_b2(a):\n    al = map_table_b3(a)\n    b = unicodedata.normalize("NFKC", al)\n    bl = u"".join([map_table_b3(ch) for ch in b])\n    c = unicodedata.normalize("NFKC", bl)\n    if b != c:\n        return c\n    else:\n        return al\n', lineno=233, col_offset=-1)], True, lineno=223, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=236, col_offset=0), Name('table', Store(), lineno=236, col_offset=6)], Store(), lineno=236, col_offset=0)], Subscript(Name('tables', Load(), lineno=236, col_offset=14), Index(Num(0, lineno=236, col_offset=21)), Load(), lineno=236, col_offset=14), lineno=236, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=237, col_offset=4), Index(Num(0, lineno=237, col_offset=11)), Del(), lineno=237, col_offset=4)], lineno=237, col_offset=0), Assert(Compare(Name('name', Load(), lineno=238, col_offset=7), [Eq()], [Str('C.1.1', lineno=238, col_offset=15)], lineno=238, col_offset=7), None, lineno=238, col_offset=0), Assert(Compare(Name('table', Load(), lineno=239, col_offset=7), [Eq()], [Dict([Num(32, lineno=239, col_offset=17)], [Num(32, lineno=239, col_offset=22)], lineno=239, col_offset=16)], lineno=239, col_offset=7), None, lineno=239, col_offset=0), Print(None, [Str('\ndef in_table_c11(code):\n    return code == u" "\n', lineno=244, col_offset=-1)], True, lineno=241, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=247, col_offset=0), Name('table', Store(), lineno=247, col_offset=6)], Store(), lineno=247, col_offset=0)], Subscript(Name('tables', Load(), lineno=247, col_offset=14), Index(Num(0, lineno=247, col_offset=21)), Load(), lineno=247, col_offset=14), lineno=247, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=248, col_offset=4), Index(Num(0, lineno=248, col_offset=11)), Del(), lineno=248, col_offset=4)], lineno=248, col_offset=0), Assert(Compare(Name('name', Load(), lineno=249, col_offset=7), [Eq()], [Str('C.1.2', lineno=249, col_offset=15)], lineno=249, col_offset=7), None, lineno=249, col_offset=0), Print(None, [Str('\ndef in_table_c12(code):\n    return unicodedata.category(code) == "Zs" and code != u" "\n\ndef in_table_c11_c12(code):\n    return unicodedata.category(code) == "Zs"\n', lineno=261, col_offset=-1)], True, lineno=255, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=264, col_offset=0), Name('table_c21', Store(), lineno=264, col_offset=6)], Store(), lineno=264, col_offset=0)], Subscript(Name('tables', Load(), lineno=264, col_offset=18), Index(Num(0, lineno=264, col_offset=25)), Load(), lineno=264, col_offset=18), lineno=264, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=265, col_offset=4), Index(Num(0, lineno=265, col_offset=11)), Del(), lineno=265, col_offset=4)], lineno=265, col_offset=0), Assert(Compare(Name('name', Load(), lineno=266, col_offset=7), [Eq()], [Str('C.2.1', lineno=266, col_offset=15)], lineno=266, col_offset=7), None, lineno=266, col_offset=0), Assign([Name('Cc', Store(), lineno=268, col_offset=0)], Call(Name('set', Load(), lineno=268, col_offset=5), [Call(Name('gen_category', Load(), lineno=268, col_offset=9), [List([Str('Cc', lineno=268, col_offset=23)], Load(), lineno=268, col_offset=22)], [], None, None, lineno=268, col_offset=9)], [], None, None, lineno=268, col_offset=5), lineno=268, col_offset=0), Assign([Name('Cc_ascii', Store(), lineno=269, col_offset=0)], BinOp(Name('Cc', Load(), lineno=269, col_offset=11), BitAnd(), Call(Name('set', Load(), lineno=269, col_offset=16), [Call(Name('range', Load(), lineno=269, col_offset=20), [Num(128, lineno=269, col_offset=26)], [], None, None, lineno=269, col_offset=20)], [], None, None, lineno=269, col_offset=16), lineno=269, col_offset=11), lineno=269, col_offset=0), Assign([Name('table_c21', Store(), lineno=270, col_offset=0)], Call(Name('set', Load(), lineno=270, col_offset=12), [Call(Attribute(Name('table_c21', Load(), lineno=270, col_offset=16), 'keys', Load(), lineno=270, col_offset=16), [], [], None, None, lineno=270, col_offset=16)], [], None, None, lineno=270, col_offset=12), lineno=270, col_offset=0), Assert(Compare(Name('Cc_ascii', Load(), lineno=271, col_offset=7), [Eq()], [Name('table_c21', Load(), lineno=271, col_offset=19)], lineno=271, col_offset=7), None, lineno=271, col_offset=0), Print(None, [Str('\ndef in_table_c21(code):\n    return ord(code) < 128 and unicodedata.category(code) == "Cc"\n', lineno=276, col_offset=-1)], True, lineno=273, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=280, col_offset=0), Name('table_c22', Store(), lineno=280, col_offset=6)], Store(), lineno=280, col_offset=0)], Subscript(Name('tables', Load(), lineno=280, col_offset=18), Index(Num(0, lineno=280, col_offset=25)), Load(), lineno=280, col_offset=18), lineno=280, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=281, col_offset=4), Index(Num(0, lineno=281, col_offset=11)), Del(), lineno=281, col_offset=4)], lineno=281, col_offset=0), Assert(Compare(Name('name', Load(), lineno=282, col_offset=7), [Eq()], [Str('C.2.2', lineno=282, col_offset=15)], lineno=282, col_offset=7), None, lineno=282, col_offset=0), Assign([Name('Cc_nonascii', Store(), lineno=284, col_offset=0)], BinOp(Name('Cc', Load(), lineno=284, col_offset=14), Sub(), Name('Cc_ascii', Load(), lineno=284, col_offset=19), lineno=284, col_offset=14), lineno=284, col_offset=0), Assign([Name('table_c22', Store(), lineno=285, col_offset=0)], Call(Name('set', Load(), lineno=285, col_offset=12), [Call(Attribute(Name('table_c22', Load(), lineno=285, col_offset=16), 'keys', Load(), lineno=285, col_offset=16), [], [], None, None, lineno=285, col_offset=16)], [], None, None, lineno=285, col_offset=12), lineno=285, col_offset=0), Assert(Compare(Call(Name('len', Load(), lineno=286, col_offset=7), [BinOp(Name('Cc_nonascii', Load(), lineno=286, col_offset=11), Sub(), Name('table_c22', Load(), lineno=286, col_offset=25), lineno=286, col_offset=11)], [], None, None, lineno=286, col_offset=7), [Eq()], [Num(0, lineno=286, col_offset=39)], lineno=286, col_offset=7), None, lineno=286, col_offset=0), Assign([Name('specials', Store(), lineno=288, col_offset=0)], Call(Name('list', Load(), lineno=288, col_offset=11), [BinOp(Name('table_c22', Load(), lineno=288, col_offset=16), Sub(), Name('Cc_nonascii', Load(), lineno=288, col_offset=28), lineno=288, col_offset=16)], [], None, None, lineno=288, col_offset=11), lineno=288, col_offset=0), Expr(Call(Attribute(Name('specials', Load(), lineno=289, col_offset=0), 'sort', Load(), lineno=289, col_offset=0), [], [], None, None, lineno=289, col_offset=0), lineno=289, col_offset=0), Print(None, [BinOp(BinOp(Str('c22_specials = ', lineno=291, col_offset=6), Add(), Call(Name('compact_set', Load(), lineno=291, col_offset=30), [Name('specials', Load(), lineno=291, col_offset=42)], [], None, None, lineno=291, col_offset=30), lineno=291, col_offset=6), Add(), Str('\ndef in_table_c22(code):\n    c = ord(code)\n    if c < 128: return False\n    if unicodedata.category(code) == "Cc": return True\n    return c in c22_specials\n\ndef in_table_c21_c22(code):\n    return unicodedata.category(code) == "Cc" or \\\n           ord(code) in c22_specials\n', lineno=301, col_offset=-1), lineno=291, col_offset=52)], True, lineno=291, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=304, col_offset=0), Name('table', Store(), lineno=304, col_offset=6)], Store(), lineno=304, col_offset=0)], Subscript(Name('tables', Load(), lineno=304, col_offset=14), Index(Num(0, lineno=304, col_offset=21)), Load(), lineno=304, col_offset=14), lineno=304, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=305, col_offset=4), Index(Num(0, lineno=305, col_offset=11)), Del(), lineno=305, col_offset=4)], lineno=305, col_offset=0), Assert(Compare(Name('name', Load(), lineno=306, col_offset=7), [Eq()], [Str('C.3', lineno=306, col_offset=15)], lineno=306, col_offset=7), None, lineno=306, col_offset=0), Assign([Name('Co', Store(), lineno=308, col_offset=0)], Call(Name('set', Load(), lineno=308, col_offset=5), [Call(Name('gen_category', Load(), lineno=308, col_offset=9), [List([Str('Co', lineno=308, col_offset=23)], Load(), lineno=308, col_offset=22)], [], None, None, lineno=308, col_offset=9)], [], None, None, lineno=308, col_offset=5), lineno=308, col_offset=0), Assert(Compare(Call(Name('set', Load(), lineno=309, col_offset=7), [Call(Attribute(Name('table', Load(), lineno=309, col_offset=11), 'keys', Load(), lineno=309, col_offset=11), [], [], None, None, lineno=309, col_offset=11)], [], None, None, lineno=309, col_offset=7), [Eq()], [Name('Co', Load(), lineno=309, col_offset=28)], lineno=309, col_offset=7), None, lineno=309, col_offset=0), Print(None, [Str('\ndef in_table_c3(code):\n    return unicodedata.category(code) == "Co"\n', lineno=314, col_offset=-1)], True, lineno=311, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=318, col_offset=0), Name('table', Store(), lineno=318, col_offset=6)], Store(), lineno=318, col_offset=0)], Subscript(Name('tables', Load(), lineno=318, col_offset=14), Index(Num(0, lineno=318, col_offset=21)), Load(), lineno=318, col_offset=14), lineno=318, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=319, col_offset=4), Index(Num(0, lineno=319, col_offset=11)), Del(), lineno=319, col_offset=4)], lineno=319, col_offset=0), Assert(Compare(Name('name', Load(), lineno=320, col_offset=7), [Eq()], [Str('C.4', lineno=320, col_offset=15)], lineno=320, col_offset=7), None, lineno=320, col_offset=0), Assign([Name('nonchar', Store(), lineno=322, col_offset=0)], Call(Name('set', Load(), lineno=322, col_offset=10), [BinOp(BinOp(Call(Name('range', Load(), lineno=322, col_offset=14), [Num(64976, lineno=322, col_offset=20), Num(65008, lineno=322, col_offset=27)], [], None, None, lineno=322, col_offset=14), Add(), Call(Name('range', Load(), lineno=323, col_offset=14), [Num(65534, lineno=323, col_offset=20), Num(1114112, lineno=323, col_offset=27), Num(65536, lineno=323, col_offset=36)], [], None, None, lineno=323, col_offset=14), lineno=322, col_offset=14), Add(), Call(Name('range', Load(), lineno=324, col_offset=14), [Num(65535, lineno=324, col_offset=20), Num(1114112, lineno=324, col_offset=27), Num(65536, lineno=324, col_offset=36)], [], None, None, lineno=324, col_offset=14), lineno=323, col_offset=45)], [], None, None, lineno=322, col_offset=10), lineno=322, col_offset=0), Assign([Name('table', Store(), lineno=325, col_offset=0)], Call(Name('set', Load(), lineno=325, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=325, col_offset=12), 'keys', Load(), lineno=325, col_offset=12), [], [], None, None, lineno=325, col_offset=12)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=0), Assert(Compare(Name('table', Load(), lineno=326, col_offset=7), [Eq()], [Name('nonchar', Load(), lineno=326, col_offset=16)], lineno=326, col_offset=7), None, lineno=326, col_offset=0), Print(None, [Str('\ndef in_table_c4(code):\n    c = ord(code)\n    if c < 0xFDD0: return False\n    if c < 0xFDF0: return True\n    return (ord(code) & 0xFFFF) in (0xFFFE, 0xFFFF)\n', lineno=334, col_offset=-1)], True, lineno=328, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=337, col_offset=0), Name('table', Store(), lineno=337, col_offset=6)], Store(), lineno=337, col_offset=0)], Subscript(Name('tables', Load(), lineno=337, col_offset=14), Index(Num(0, lineno=337, col_offset=21)), Load(), lineno=337, col_offset=14), lineno=337, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=338, col_offset=4), Index(Num(0, lineno=338, col_offset=11)), Del(), lineno=338, col_offset=4)], lineno=338, col_offset=0), Assert(Compare(Name('name', Load(), lineno=339, col_offset=7), [Eq()], [Str('C.5', lineno=339, col_offset=15)], lineno=339, col_offset=7), None, lineno=339, col_offset=0), Assign([Name('Cs', Store(), lineno=341, col_offset=0)], Call(Name('set', Load(), lineno=341, col_offset=5), [Call(Name('gen_category', Load(), lineno=341, col_offset=9), [List([Str('Cs', lineno=341, col_offset=23)], Load(), lineno=341, col_offset=22)], [], None, None, lineno=341, col_offset=9)], [], None, None, lineno=341, col_offset=5), lineno=341, col_offset=0), Assert(Compare(Call(Name('set', Load(), lineno=342, col_offset=7), [Call(Attribute(Name('table', Load(), lineno=342, col_offset=11), 'keys', Load(), lineno=342, col_offset=11), [], [], None, None, lineno=342, col_offset=11)], [], None, None, lineno=342, col_offset=7), [Eq()], [Name('Cs', Load(), lineno=342, col_offset=28)], lineno=342, col_offset=7), None, lineno=342, col_offset=0), Print(None, [Str('\ndef in_table_c5(code):\n    return unicodedata.category(code) == "Cs"\n', lineno=347, col_offset=-1)], True, lineno=344, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=350, col_offset=0), Name('table', Store(), lineno=350, col_offset=6)], Store(), lineno=350, col_offset=0)], Subscript(Name('tables', Load(), lineno=350, col_offset=14), Index(Num(0, lineno=350, col_offset=21)), Load(), lineno=350, col_offset=14), lineno=350, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=351, col_offset=4), Index(Num(0, lineno=351, col_offset=11)), Del(), lineno=351, col_offset=4)], lineno=351, col_offset=0), Assert(Compare(Name('name', Load(), lineno=352, col_offset=7), [Eq()], [Str('C.6', lineno=352, col_offset=15)], lineno=352, col_offset=7), None, lineno=352, col_offset=0), Assign([Name('table', Store(), lineno=354, col_offset=0)], Call(Name('sorted', Load(), lineno=354, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=354, col_offset=15), 'keys', Load(), lineno=354, col_offset=15), [], [], None, None, lineno=354, col_offset=15)], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=0), Print(None, [BinOp(BinOp(Str('\nc6_set = ', lineno=357, col_offset=-1), Add(), Call(Name('compact_set', Load(), lineno=357, col_offset=15), [Name('table', Load(), lineno=357, col_offset=27)], [], None, None, lineno=357, col_offset=15), lineno=357, col_offset=-1), Add(), Str('\ndef in_table_c6(code):\n    return ord(code) in c6_set\n', lineno=360, col_offset=-1), lineno=357, col_offset=34)], True, lineno=356, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=363, col_offset=0), Name('table', Store(), lineno=363, col_offset=6)], Store(), lineno=363, col_offset=0)], Subscript(Name('tables', Load(), lineno=363, col_offset=14), Index(Num(0, lineno=363, col_offset=21)), Load(), lineno=363, col_offset=14), lineno=363, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=364, col_offset=4), Index(Num(0, lineno=364, col_offset=11)), Del(), lineno=364, col_offset=4)], lineno=364, col_offset=0), Assert(Compare(Name('name', Load(), lineno=365, col_offset=7), [Eq()], [Str('C.7', lineno=365, col_offset=15)], lineno=365, col_offset=7), None, lineno=365, col_offset=0), Assign([Name('table', Store(), lineno=367, col_offset=0)], Call(Name('sorted', Load(), lineno=367, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=367, col_offset=15), 'keys', Load(), lineno=367, col_offset=15), [], [], None, None, lineno=367, col_offset=15)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=0), Print(None, [BinOp(BinOp(Str('\nc7_set = ', lineno=370, col_offset=-1), Add(), Call(Name('compact_set', Load(), lineno=370, col_offset=15), [Name('table', Load(), lineno=370, col_offset=27)], [], None, None, lineno=370, col_offset=15), lineno=370, col_offset=-1), Add(), Str('\ndef in_table_c7(code):\n    return ord(code) in c7_set\n', lineno=373, col_offset=-1), lineno=370, col_offset=34)], True, lineno=369, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=376, col_offset=0), Name('table', Store(), lineno=376, col_offset=6)], Store(), lineno=376, col_offset=0)], Subscript(Name('tables', Load(), lineno=376, col_offset=14), Index(Num(0, lineno=376, col_offset=21)), Load(), lineno=376, col_offset=14), lineno=376, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=377, col_offset=4), Index(Num(0, lineno=377, col_offset=11)), Del(), lineno=377, col_offset=4)], lineno=377, col_offset=0), Assert(Compare(Name('name', Load(), lineno=378, col_offset=7), [Eq()], [Str('C.8', lineno=378, col_offset=15)], lineno=378, col_offset=7), None, lineno=378, col_offset=0), Assign([Name('table', Store(), lineno=380, col_offset=0)], Call(Name('sorted', Load(), lineno=380, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=380, col_offset=15), 'keys', Load(), lineno=380, col_offset=15), [], [], None, None, lineno=380, col_offset=15)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=0), Print(None, [BinOp(BinOp(Str('\nc8_set = ', lineno=383, col_offset=-1), Add(), Call(Name('compact_set', Load(), lineno=383, col_offset=15), [Name('table', Load(), lineno=383, col_offset=27)], [], None, None, lineno=383, col_offset=15), lineno=383, col_offset=-1), Add(), Str('\ndef in_table_c8(code):\n    return ord(code) in c8_set\n', lineno=386, col_offset=-1), lineno=383, col_offset=34)], True, lineno=382, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=389, col_offset=0), Name('table', Store(), lineno=389, col_offset=6)], Store(), lineno=389, col_offset=0)], Subscript(Name('tables', Load(), lineno=389, col_offset=14), Index(Num(0, lineno=389, col_offset=21)), Load(), lineno=389, col_offset=14), lineno=389, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=390, col_offset=4), Index(Num(0, lineno=390, col_offset=11)), Del(), lineno=390, col_offset=4)], lineno=390, col_offset=0), Assert(Compare(Name('name', Load(), lineno=391, col_offset=7), [Eq()], [Str('C.9', lineno=391, col_offset=15)], lineno=391, col_offset=7), None, lineno=391, col_offset=0), Assign([Name('table', Store(), lineno=393, col_offset=0)], Call(Name('sorted', Load(), lineno=393, col_offset=8), [Call(Attribute(Name('table', Load(), lineno=393, col_offset=15), 'keys', Load(), lineno=393, col_offset=15), [], [], None, None, lineno=393, col_offset=15)], [], None, None, lineno=393, col_offset=8), lineno=393, col_offset=0), Print(None, [BinOp(BinOp(Str('\nc9_set = ', lineno=396, col_offset=-1), Add(), Call(Name('compact_set', Load(), lineno=396, col_offset=15), [Name('table', Load(), lineno=396, col_offset=27)], [], None, None, lineno=396, col_offset=15), lineno=396, col_offset=-1), Add(), Str('\ndef in_table_c9(code):\n    return ord(code) in c9_set\n', lineno=399, col_offset=-1), lineno=396, col_offset=34)], True, lineno=395, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=402, col_offset=0), Name('table', Store(), lineno=402, col_offset=6)], Store(), lineno=402, col_offset=0)], Subscript(Name('tables', Load(), lineno=402, col_offset=14), Index(Num(0, lineno=402, col_offset=21)), Load(), lineno=402, col_offset=14), lineno=402, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=403, col_offset=4), Index(Num(0, lineno=403, col_offset=11)), Del(), lineno=403, col_offset=4)], lineno=403, col_offset=0), Assert(Compare(Name('name', Load(), lineno=404, col_offset=7), [Eq()], [Str('D.1', lineno=404, col_offset=15)], lineno=404, col_offset=7), None, lineno=404, col_offset=0), Assign([Name('RandAL', Store(), lineno=406, col_offset=0)], Call(Name('set', Load(), lineno=406, col_offset=9), [Call(Name('gen_bidirectional', Load(), lineno=406, col_offset=13), [List([Str('R', lineno=406, col_offset=32), Str('AL', lineno=406, col_offset=36)], Load(), lineno=406, col_offset=31)], [], None, None, lineno=406, col_offset=13)], [], None, None, lineno=406, col_offset=9), lineno=406, col_offset=0), Assert(Compare(Call(Name('set', Load(), lineno=407, col_offset=7), [Call(Attribute(Name('table', Load(), lineno=407, col_offset=11), 'keys', Load(), lineno=407, col_offset=11), [], [], None, None, lineno=407, col_offset=11)], [], None, None, lineno=407, col_offset=7), [Eq()], [Name('RandAL', Load(), lineno=407, col_offset=28)], lineno=407, col_offset=7), None, lineno=407, col_offset=0), Print(None, [Str('\ndef in_table_d1(code):\n    return unicodedata.bidirectional(code) in ("R","AL")\n', lineno=412, col_offset=-1)], True, lineno=409, col_offset=0), Assign([Tuple([Name('name', Store(), lineno=415, col_offset=0), Name('table', Store(), lineno=415, col_offset=6)], Store(), lineno=415, col_offset=0)], Subscript(Name('tables', Load(), lineno=415, col_offset=14), Index(Num(0, lineno=415, col_offset=21)), Load(), lineno=415, col_offset=14), lineno=415, col_offset=0), Delete([Subscript(Name('tables', Load(), lineno=416, col_offset=4), Index(Num(0, lineno=416, col_offset=11)), Del(), lineno=416, col_offset=4)], lineno=416, col_offset=0), Assert(Compare(Name('name', Load(), lineno=417, col_offset=7), [Eq()], [Str('D.2', lineno=417, col_offset=15)], lineno=417, col_offset=7), None, lineno=417, col_offset=0), Assign([Name('L', Store(), lineno=419, col_offset=0)], Call(Name('set', Load(), lineno=419, col_offset=4), [Call(Name('gen_bidirectional', Load(), lineno=419, col_offset=8), [List([Str('L', lineno=419, col_offset=27)], Load(), lineno=419, col_offset=26)], [], None, None, lineno=419, col_offset=8)], [], None, None, lineno=419, col_offset=4), lineno=419, col_offset=0), Assert(Compare(Call(Name('set', Load(), lineno=420, col_offset=7), [Call(Attribute(Name('table', Load(), lineno=420, col_offset=11), 'keys', Load(), lineno=420, col_offset=11), [], [], None, None, lineno=420, col_offset=11)], [], None, None, lineno=420, col_offset=7), [Eq()], [Name('L', Load(), lineno=420, col_offset=28)], lineno=420, col_offset=7), None, lineno=420, col_offset=0), Print(None, [Str('\ndef in_table_d2(code):\n    return unicodedata.bidirectional(code) == "L"\n', lineno=425, col_offset=-1)], True, lineno=422, col_offset=0)])
