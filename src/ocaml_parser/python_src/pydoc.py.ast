Module([Expr(Str('Generate Python documentation in HTML or text for interactive use.\n\nIn the Python interpreter, do "from pydoc import help" to provide online\nhelp.  Calling help(thing) on a Python object documents the object.\n\nOr, at the shell command line outside of Python:\n\nRun "pydoc <name>" to show documentation on something.  <name> may be\nthe name of a function, module, package, or a dotted reference to a\nclass or function within a module or module in a package.  If the\nargument contains a path segment delimiter (e.g. slash on Unix,\nbackslash on Windows) it is treated as the path to a Python source file.\n\nRun "pydoc -k <keyword>" to search for a keyword in the synopsis lines\nof all available modules.\n\nRun "pydoc -p <port>" to start an HTTP server on a given port on the\nlocal machine to generate documentation web pages.\n\nFor platforms without a command line, "pydoc -g" starts the HTTP server\nand also pops up a little window for controlling it.\n\nRun "pydoc -w <name>" to write out the HTML documentation for a module\nto a file named "<name>.html".\n\nModule docs for core modules are assumed to be in\n\n    http://docs.python.org/library/\n\nThis can be overridden by setting the PYTHONDOCS environment variable\nto a different URL or to a local directory containing the Library\nReference Manual pages.\n', lineno=35, col_offset=-1), lineno=35, col_offset=-1), Assign([Name('__author__', Store(), lineno=37, col_offset=0)], Str('Ka-Ping Yee <ping@lfw.org>', lineno=37, col_offset=13), lineno=37, col_offset=0), Assign([Name('__date__', Store(), lineno=38, col_offset=0)], Str('26 February 2001', lineno=38, col_offset=11), lineno=38, col_offset=0), Assign([Name('__version__', Store(), lineno=40, col_offset=0)], Str('$Revision: 84174 $', lineno=40, col_offset=14), lineno=40, col_offset=0), Assign([Name('__credits__', Store(), lineno=41, col_offset=0)], Str('Guido van Rossum, for an excellent programming language.\nTommy Burnette, the original creator of manpy.\nPaul Prescod, for all his work on onlinehelp.\nRichard Chamberlain, for the first implementation of textdoc.\n', lineno=45, col_offset=-1), lineno=41, col_offset=0), Import([alias('sys', None), alias('imp', None), alias('os', None), alias('re', None), alias('types', None), alias('inspect', None), alias('__builtin__', None), alias('pkgutil', None)], lineno=55, col_offset=0), ImportFrom('repr', [alias('Repr', None)], 0, lineno=56, col_offset=0), ImportFrom('string', [alias('expandtabs', None), alias('find', None), alias('join', None), alias('lower', None), alias('split', None), alias('strip', None), alias('rfind', None), alias('rstrip', None)], 0, lineno=57, col_offset=0), ImportFrom('traceback', [alias('extract_tb', None)], 0, lineno=58, col_offset=0), TryExcept([ImportFrom('collections', [alias('deque', None)], 0, lineno=60, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=61, col_offset=7), None, [ClassDef('deque', [Name('list', Load(), lineno=63, col_offset=16)], [FunctionDef('popleft', arguments([Name('self', Param(), lineno=64, col_offset=20)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=65, col_offset=19), 'pop', Load(), lineno=65, col_offset=19), [Num(0, lineno=65, col_offset=28)], [], None, None, lineno=65, col_offset=19), lineno=65, col_offset=12)], [], lineno=64, col_offset=8)], [], lineno=63, col_offset=4)], lineno=61, col_offset=0)], [], lineno=59, col_offset=0), FunctionDef('pathdirs', arguments([], None, None, []), [Expr(Str('Convert sys.path into a list of absolute, existing, unique paths.', lineno=70, col_offset=4), lineno=70, col_offset=4), Assign([Name('dirs', Store(), lineno=71, col_offset=4)], List([], Load(), lineno=71, col_offset=11), lineno=71, col_offset=4), Assign([Name('normdirs', Store(), lineno=72, col_offset=4)], List([], Load(), lineno=72, col_offset=15), lineno=72, col_offset=4), For(Name('dir', Store(), lineno=73, col_offset=8), Attribute(Name('sys', Load(), lineno=73, col_offset=15), 'path', Load(), lineno=73, col_offset=15), [Assign([Name('dir', Store(), lineno=74, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=74, col_offset=14), 'path', Load(), lineno=74, col_offset=14), 'abspath', Load(), lineno=74, col_offset=14), [BoolOp(Or(), [Name('dir', Load(), lineno=74, col_offset=30), Str('.', lineno=74, col_offset=37)], lineno=74, col_offset=30)], [], None, None, lineno=74, col_offset=14), lineno=74, col_offset=8), Assign([Name('normdir', Store(), lineno=75, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=75, col_offset=18), 'path', Load(), lineno=75, col_offset=18), 'normcase', Load(), lineno=75, col_offset=18), [Name('dir', Load(), lineno=75, col_offset=35)], [], None, None, lineno=75, col_offset=18), lineno=75, col_offset=8), If(BoolOp(And(), [Compare(Name('normdir', Load(), lineno=76, col_offset=11), [NotIn()], [Name('normdirs', Load(), lineno=76, col_offset=26)], lineno=76, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=76, col_offset=39), 'path', Load(), lineno=76, col_offset=39), 'isdir', Load(), lineno=76, col_offset=39), [Name('dir', Load(), lineno=76, col_offset=53)], [], None, None, lineno=76, col_offset=39)], lineno=76, col_offset=11), [Expr(Call(Attribute(Name('dirs', Load(), lineno=77, col_offset=12), 'append', Load(), lineno=77, col_offset=12), [Name('dir', Load(), lineno=77, col_offset=24)], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=12), Expr(Call(Attribute(Name('normdirs', Load(), lineno=78, col_offset=12), 'append', Load(), lineno=78, col_offset=12), [Name('normdir', Load(), lineno=78, col_offset=28)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12)], [], lineno=76, col_offset=8)], [], lineno=73, col_offset=4), Return(Name('dirs', Load(), lineno=79, col_offset=11), lineno=79, col_offset=4)], [], lineno=69, col_offset=0), FunctionDef('getdoc', arguments([Name('object', Param(), lineno=81, col_offset=11)], None, None, []), [Expr(Str('Get the doc string or comments for an object.', lineno=82, col_offset=4), lineno=82, col_offset=4), Assign([Name('result', Store(), lineno=83, col_offset=4)], BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=83, col_offset=13), 'getdoc', Load(), lineno=83, col_offset=13), [Name('object', Load(), lineno=83, col_offset=28)], [], None, None, lineno=83, col_offset=13), Call(Attribute(Name('inspect', Load(), lineno=83, col_offset=39), 'getcomments', Load(), lineno=83, col_offset=39), [Name('object', Load(), lineno=83, col_offset=59)], [], None, None, lineno=83, col_offset=39)], lineno=83, col_offset=13), lineno=83, col_offset=4), Return(BoolOp(Or(), [BoolOp(And(), [Name('result', Load(), lineno=84, col_offset=11), Call(Attribute(Name('re', Load(), lineno=84, col_offset=22), 'sub', Load(), lineno=84, col_offset=22), [Str('^ *\n', lineno=84, col_offset=29), Str('', lineno=84, col_offset=38), Call(Name('rstrip', Load(), lineno=84, col_offset=42), [Name('result', Load(), lineno=84, col_offset=49)], [], None, None, lineno=84, col_offset=42)], [], None, None, lineno=84, col_offset=22)], lineno=84, col_offset=11), Str('', lineno=84, col_offset=61)], lineno=84, col_offset=11), lineno=84, col_offset=4)], [], lineno=81, col_offset=0), FunctionDef('splitdoc', arguments([Name('doc', Param(), lineno=86, col_offset=13)], None, None, []), [Expr(Str('Split a doc string into a synopsis line (if any) and the rest.', lineno=87, col_offset=4), lineno=87, col_offset=4), Assign([Name('lines', Store(), lineno=88, col_offset=4)], Call(Name('split', Load(), lineno=88, col_offset=12), [Call(Name('strip', Load(), lineno=88, col_offset=18), [Name('doc', Load(), lineno=88, col_offset=24)], [], None, None, lineno=88, col_offset=18), Str('\n', lineno=88, col_offset=30)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=89, col_offset=7), [Name('lines', Load(), lineno=89, col_offset=11)], [], None, None, lineno=89, col_offset=7), [Eq()], [Num(1, lineno=89, col_offset=21)], lineno=89, col_offset=7), [Return(Tuple([Subscript(Name('lines', Load(), lineno=90, col_offset=15), Index(Num(0, lineno=90, col_offset=21)), Load(), lineno=90, col_offset=15), Str('', lineno=90, col_offset=25)], Load(), lineno=90, col_offset=15), lineno=90, col_offset=8)], [If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=91, col_offset=9), [Name('lines', Load(), lineno=91, col_offset=13)], [], None, None, lineno=91, col_offset=9), [GtE()], [Num(2, lineno=91, col_offset=23)], lineno=91, col_offset=9), UnaryOp(Not(), Call(Name('rstrip', Load(), lineno=91, col_offset=33), [Subscript(Name('lines', Load(), lineno=91, col_offset=40), Index(Num(1, lineno=91, col_offset=46)), Load(), lineno=91, col_offset=40)], [], None, None, lineno=91, col_offset=33), lineno=91, col_offset=29)], lineno=91, col_offset=9), [Return(Tuple([Subscript(Name('lines', Load(), lineno=92, col_offset=15), Index(Num(0, lineno=92, col_offset=21)), Load(), lineno=92, col_offset=15), Call(Name('join', Load(), lineno=92, col_offset=25), [Subscript(Name('lines', Load(), lineno=92, col_offset=30), Slice(Num(2, lineno=92, col_offset=36), None, None), Load(), lineno=92, col_offset=30), Str('\n', lineno=92, col_offset=41)], [], None, None, lineno=92, col_offset=25)], Load(), lineno=92, col_offset=15), lineno=92, col_offset=8)], [], lineno=91, col_offset=9)], lineno=89, col_offset=4), Return(Tuple([Str('', lineno=93, col_offset=11), Call(Name('join', Load(), lineno=93, col_offset=15), [Name('lines', Load(), lineno=93, col_offset=20), Str('\n', lineno=93, col_offset=27)], [], None, None, lineno=93, col_offset=15)], Load(), lineno=93, col_offset=11), lineno=93, col_offset=4)], [], lineno=86, col_offset=0), FunctionDef('classname', arguments([Name('object', Param(), lineno=95, col_offset=14), Name('modname', Param(), lineno=95, col_offset=22)], None, None, []), [Expr(Str('Get a class name and qualify it with a module name if necessary.', lineno=96, col_offset=4), lineno=96, col_offset=4), Assign([Name('name', Store(), lineno=97, col_offset=4)], Attribute(Name('object', Load(), lineno=97, col_offset=11), '__name__', Load(), lineno=97, col_offset=11), lineno=97, col_offset=4), If(Compare(Attribute(Name('object', Load(), lineno=98, col_offset=7), '__module__', Load(), lineno=98, col_offset=7), [NotEq()], [Name('modname', Load(), lineno=98, col_offset=28)], lineno=98, col_offset=7), [Assign([Name('name', Store(), lineno=99, col_offset=8)], BinOp(BinOp(Attribute(Name('object', Load(), lineno=99, col_offset=15), '__module__', Load(), lineno=99, col_offset=15), Add(), Str('.', lineno=99, col_offset=35), lineno=99, col_offset=15), Add(), Name('name', Load(), lineno=99, col_offset=41), lineno=99, col_offset=39), lineno=99, col_offset=8)], [], lineno=98, col_offset=4), Return(Name('name', Load(), lineno=100, col_offset=11), lineno=100, col_offset=4)], [], lineno=95, col_offset=0), FunctionDef('isdata', arguments([Name('object', Param(), lineno=102, col_offset=11)], None, None, []), [Expr(Str("Check if an object is of a type that probably means it's data.", lineno=103, col_offset=4), lineno=103, col_offset=4), Return(UnaryOp(Not(), BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=104, col_offset=16), 'ismodule', Load(), lineno=104, col_offset=16), [Name('object', Load(), lineno=104, col_offset=33)], [], None, None, lineno=104, col_offset=16), Call(Attribute(Name('inspect', Load(), lineno=104, col_offset=44), 'isclass', Load(), lineno=104, col_offset=44), [Name('object', Load(), lineno=104, col_offset=60)], [], None, None, lineno=104, col_offset=44), Call(Attribute(Name('inspect', Load(), lineno=105, col_offset=16), 'isroutine', Load(), lineno=105, col_offset=16), [Name('object', Load(), lineno=105, col_offset=34)], [], None, None, lineno=105, col_offset=16), Call(Attribute(Name('inspect', Load(), lineno=105, col_offset=45), 'isframe', Load(), lineno=105, col_offset=45), [Name('object', Load(), lineno=105, col_offset=61)], [], None, None, lineno=105, col_offset=45), Call(Attribute(Name('inspect', Load(), lineno=106, col_offset=16), 'istraceback', Load(), lineno=106, col_offset=16), [Name('object', Load(), lineno=106, col_offset=36)], [], None, None, lineno=106, col_offset=16), Call(Attribute(Name('inspect', Load(), lineno=106, col_offset=47), 'iscode', Load(), lineno=106, col_offset=47), [Name('object', Load(), lineno=106, col_offset=62)], [], None, None, lineno=106, col_offset=47)], lineno=104, col_offset=16), lineno=104, col_offset=11), lineno=104, col_offset=4)], [], lineno=102, col_offset=0), FunctionDef('replace', arguments([Name('text', Param(), lineno=108, col_offset=12)], 'pairs', None, []), [Expr(Str('Do a series of global replacements on a string.', lineno=109, col_offset=4), lineno=109, col_offset=4), While(Name('pairs', Load(), lineno=110, col_offset=10), [Assign([Name('text', Store(), lineno=111, col_offset=8)], Call(Name('join', Load(), lineno=111, col_offset=15), [Call(Name('split', Load(), lineno=111, col_offset=20), [Name('text', Load(), lineno=111, col_offset=26), Subscript(Name('pairs', Load(), lineno=111, col_offset=32), Index(Num(0, lineno=111, col_offset=38)), Load(), lineno=111, col_offset=32)], [], None, None, lineno=111, col_offset=20), Subscript(Name('pairs', Load(), lineno=111, col_offset=43), Index(Num(1, lineno=111, col_offset=49)), Load(), lineno=111, col_offset=43)], [], None, None, lineno=111, col_offset=15), lineno=111, col_offset=8), Assign([Name('pairs', Store(), lineno=112, col_offset=8)], Subscript(Name('pairs', Load(), lineno=112, col_offset=16), Slice(Num(2, lineno=112, col_offset=22), None, None), Load(), lineno=112, col_offset=16), lineno=112, col_offset=8)], [], lineno=110, col_offset=4), Return(Name('text', Load(), lineno=113, col_offset=11), lineno=113, col_offset=4)], [], lineno=108, col_offset=0), FunctionDef('cram', arguments([Name('text', Param(), lineno=115, col_offset=9), Name('maxlen', Param(), lineno=115, col_offset=15)], None, None, []), [Expr(Str('Omit part of a string if needed to make it fit in a maximum length.', lineno=116, col_offset=4), lineno=116, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=117, col_offset=7), [Name('text', Load(), lineno=117, col_offset=11)], [], None, None, lineno=117, col_offset=7), [Gt()], [Name('maxlen', Load(), lineno=117, col_offset=19)], lineno=117, col_offset=7), [Assign([Name('pre', Store(), lineno=118, col_offset=8)], Call(Name('max', Load(), lineno=118, col_offset=14), [Num(0, lineno=118, col_offset=18), BinOp(BinOp(Name('maxlen', Load(), lineno=118, col_offset=22), Sub(), Num(3, lineno=118, col_offset=29), lineno=118, col_offset=22), FloorDiv(), Num(2, lineno=118, col_offset=33), lineno=118, col_offset=21)], [], None, None, lineno=118, col_offset=14), lineno=118, col_offset=8), Assign([Name('post', Store(), lineno=119, col_offset=8)], Call(Name('max', Load(), lineno=119, col_offset=15), [Num(0, lineno=119, col_offset=19), BinOp(BinOp(Name('maxlen', Load(), lineno=119, col_offset=22), Sub(), Num(3, lineno=119, col_offset=29), lineno=119, col_offset=22), Sub(), Name('pre', Load(), lineno=119, col_offset=31), lineno=119, col_offset=30)], [], None, None, lineno=119, col_offset=15), lineno=119, col_offset=8), Return(BinOp(BinOp(Subscript(Name('text', Load(), lineno=120, col_offset=15), Slice(None, Name('pre', Load(), lineno=120, col_offset=21), None), Load(), lineno=120, col_offset=15), Add(), Str('...', lineno=120, col_offset=28), lineno=120, col_offset=15), Add(), Subscript(Name('text', Load(), lineno=120, col_offset=36), Slice(BinOp(Call(Name('len', Load(), lineno=120, col_offset=41), [Name('text', Load(), lineno=120, col_offset=45)], [], None, None, lineno=120, col_offset=41), Sub(), Name('post', Load(), lineno=120, col_offset=51), lineno=120, col_offset=41), None, None), Load(), lineno=120, col_offset=36), lineno=120, col_offset=34), lineno=120, col_offset=8)], [], lineno=117, col_offset=4), Return(Name('text', Load(), lineno=121, col_offset=11), lineno=121, col_offset=4)], [], lineno=115, col_offset=0), Assign([Name('_re_stripid', Store(), lineno=123, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=123, col_offset=14), 'compile', Load(), lineno=123, col_offset=14), [Str(' at 0x[0-9a-f]{6,16}(>+)$', lineno=123, col_offset=25), Attribute(Name('re', Load(), lineno=123, col_offset=55), 'IGNORECASE', Load(), lineno=123, col_offset=55)], [], None, None, lineno=123, col_offset=14), lineno=123, col_offset=0), FunctionDef('stripid', arguments([Name('text', Param(), lineno=124, col_offset=12)], None, None, []), [Expr(Str('Remove the hexadecimal id from a Python object representation.', lineno=125, col_offset=4), lineno=125, col_offset=4), Return(Call(Attribute(Name('_re_stripid', Load(), lineno=127, col_offset=11), 'sub', Load(), lineno=127, col_offset=11), [Str('\\1', lineno=127, col_offset=27), Name('text', Load(), lineno=127, col_offset=34)], [], None, None, lineno=127, col_offset=11), lineno=127, col_offset=4)], [], lineno=124, col_offset=0), FunctionDef('_is_some_method', arguments([Name('obj', Param(), lineno=129, col_offset=20)], None, None, []), [Return(BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=130, col_offset=11), 'ismethod', Load(), lineno=130, col_offset=11), [Name('obj', Load(), lineno=130, col_offset=28)], [], None, None, lineno=130, col_offset=11), Call(Attribute(Name('inspect', Load(), lineno=130, col_offset=36), 'ismethoddescriptor', Load(), lineno=130, col_offset=36), [Name('obj', Load(), lineno=130, col_offset=63)], [], None, None, lineno=130, col_offset=36)], lineno=130, col_offset=11), lineno=130, col_offset=4)], [], lineno=129, col_offset=0), FunctionDef('allmethods', arguments([Name('cl', Param(), lineno=132, col_offset=15)], None, None, []), [Assign([Name('methods', Store(), lineno=133, col_offset=4)], Dict([], [], lineno=133, col_offset=14), lineno=133, col_offset=4), For(Tuple([Name('key', Store(), lineno=134, col_offset=8), Name('value', Store(), lineno=134, col_offset=13)], Store(), lineno=134, col_offset=8), Call(Attribute(Name('inspect', Load(), lineno=134, col_offset=22), 'getmembers', Load(), lineno=134, col_offset=22), [Name('cl', Load(), lineno=134, col_offset=41), Name('_is_some_method', Load(), lineno=134, col_offset=45)], [], None, None, lineno=134, col_offset=22), [Assign([Subscript(Name('methods', Load(), lineno=135, col_offset=8), Index(Name('key', Load(), lineno=135, col_offset=16)), Store(), lineno=135, col_offset=8)], Num(1, lineno=135, col_offset=23), lineno=135, col_offset=8)], [], lineno=134, col_offset=4), For(Name('base', Store(), lineno=136, col_offset=8), Attribute(Name('cl', Load(), lineno=136, col_offset=16), '__bases__', Load(), lineno=136, col_offset=16), [Expr(Call(Attribute(Name('methods', Load(), lineno=137, col_offset=8), 'update', Load(), lineno=137, col_offset=8), [Call(Name('allmethods', Load(), lineno=137, col_offset=23), [Name('base', Load(), lineno=137, col_offset=34)], [], None, None, lineno=137, col_offset=23)], [], None, None, lineno=137, col_offset=8), lineno=137, col_offset=8)], [], lineno=136, col_offset=4), For(Name('key', Store(), lineno=138, col_offset=8), Call(Attribute(Name('methods', Load(), lineno=138, col_offset=15), 'keys', Load(), lineno=138, col_offset=15), [], [], None, None, lineno=138, col_offset=15), [Assign([Subscript(Name('methods', Load(), lineno=139, col_offset=8), Index(Name('key', Load(), lineno=139, col_offset=16)), Store(), lineno=139, col_offset=8)], Call(Name('getattr', Load(), lineno=139, col_offset=23), [Name('cl', Load(), lineno=139, col_offset=31), Name('key', Load(), lineno=139, col_offset=35)], [], None, None, lineno=139, col_offset=23), lineno=139, col_offset=8)], [], lineno=138, col_offset=4), Return(Name('methods', Load(), lineno=140, col_offset=11), lineno=140, col_offset=4)], [], lineno=132, col_offset=0), FunctionDef('_split_list', arguments([Name('s', Param(), lineno=142, col_offset=16), Name('predicate', Param(), lineno=142, col_offset=19)], None, None, []), [Expr(Str('Split sequence s via predicate, and return pair ([true], [false]).\n\n    The return value is a 2-tuple of lists,\n        ([x for x in s if predicate(x)],\n         [x for x in s if not predicate(x)])\n    ', lineno=148, col_offset=-1), lineno=148, col_offset=-1), Assign([Name('yes', Store(), lineno=150, col_offset=4)], List([], Load(), lineno=150, col_offset=10), lineno=150, col_offset=4), Assign([Name('no', Store(), lineno=151, col_offset=4)], List([], Load(), lineno=151, col_offset=9), lineno=151, col_offset=4), For(Name('x', Store(), lineno=152, col_offset=8), Name('s', Load(), lineno=152, col_offset=13), [If(Call(Name('predicate', Load(), lineno=153, col_offset=11), [Name('x', Load(), lineno=153, col_offset=21)], [], None, None, lineno=153, col_offset=11), [Expr(Call(Attribute(Name('yes', Load(), lineno=154, col_offset=12), 'append', Load(), lineno=154, col_offset=12), [Name('x', Load(), lineno=154, col_offset=23)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], [Expr(Call(Attribute(Name('no', Load(), lineno=156, col_offset=12), 'append', Load(), lineno=156, col_offset=12), [Name('x', Load(), lineno=156, col_offset=22)], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12)], lineno=153, col_offset=8)], [], lineno=152, col_offset=4), Return(Tuple([Name('yes', Load(), lineno=157, col_offset=11), Name('no', Load(), lineno=157, col_offset=16)], Load(), lineno=157, col_offset=11), lineno=157, col_offset=4)], [], lineno=142, col_offset=0), FunctionDef('visiblename', arguments([Name('name', Param(), lineno=159, col_offset=16), Name('all', Param(), lineno=159, col_offset=22)], None, None, [Name('None', Load(), lineno=159, col_offset=26)]), [Expr(Str('Decide whether to show documentation on a variable.', lineno=160, col_offset=4), lineno=160, col_offset=4), Assign([Name('_hidden_names', Store(), lineno=162, col_offset=4)], Tuple([Str('__builtins__', lineno=162, col_offset=21), Str('__doc__', lineno=162, col_offset=37), Str('__file__', lineno=162, col_offset=48), Str('__path__', lineno=162, col_offset=60), Str('__module__', lineno=163, col_offset=21), Str('__name__', lineno=163, col_offset=35), Str('__slots__', lineno=163, col_offset=47), Str('__package__', lineno=163, col_offset=60)], Load(), lineno=162, col_offset=21), lineno=162, col_offset=4), If(Compare(Name('name', Load(), lineno=164, col_offset=7), [In()], [Name('_hidden_names', Load(), lineno=164, col_offset=15)], lineno=164, col_offset=7), [Return(Num(0, lineno=164, col_offset=37), lineno=164, col_offset=30)], [], lineno=164, col_offset=4), If(BoolOp(And(), [Call(Attribute(Name('name', Load(), lineno=166, col_offset=7), 'startswith', Load(), lineno=166, col_offset=7), [Str('__', lineno=166, col_offset=23)], [], None, None, lineno=166, col_offset=7), Call(Attribute(Name('name', Load(), lineno=166, col_offset=33), 'endswith', Load(), lineno=166, col_offset=33), [Str('__', lineno=166, col_offset=47)], [], None, None, lineno=166, col_offset=33)], lineno=166, col_offset=7), [Return(Num(1, lineno=166, col_offset=61), lineno=166, col_offset=54)], [], lineno=166, col_offset=4), If(Compare(Name('all', Load(), lineno=167, col_offset=7), [IsNot()], [Name('None', Load(), lineno=167, col_offset=18)], lineno=167, col_offset=7), [Return(Compare(Name('name', Load(), lineno=169, col_offset=15), [In()], [Name('all', Load(), lineno=169, col_offset=23)], lineno=169, col_offset=15), lineno=169, col_offset=8)], [Return(UnaryOp(Not(), Call(Attribute(Name('name', Load(), lineno=171, col_offset=19), 'startswith', Load(), lineno=171, col_offset=19), [Str('_', lineno=171, col_offset=35)], [], None, None, lineno=171, col_offset=19), lineno=171, col_offset=15), lineno=171, col_offset=8)], lineno=167, col_offset=4)], [], lineno=159, col_offset=0), FunctionDef('classify_class_attrs', arguments([Name('object', Param(), lineno=173, col_offset=25)], None, None, []), [Expr(Str('Wrap inspect.classify_class_attrs, with fixup for data descriptors.', lineno=174, col_offset=4), lineno=174, col_offset=4), FunctionDef('fixup', arguments([Name('data', Param(), lineno=175, col_offset=14)], None, None, []), [Assign([Tuple([Name('name', Store(), lineno=176, col_offset=8), Name('kind', Store(), lineno=176, col_offset=14), Name('cls', Store(), lineno=176, col_offset=20), Name('value', Store(), lineno=176, col_offset=25)], Store(), lineno=176, col_offset=8)], Name('data', Load(), lineno=176, col_offset=33), lineno=176, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=177, col_offset=11), 'isdatadescriptor', Load(), lineno=177, col_offset=11), [Name('value', Load(), lineno=177, col_offset=36)], [], None, None, lineno=177, col_offset=11), [Assign([Name('kind', Store(), lineno=178, col_offset=12)], Str('data descriptor', lineno=178, col_offset=19), lineno=178, col_offset=12)], [], lineno=177, col_offset=8), Return(Tuple([Name('name', Load(), lineno=179, col_offset=15), Name('kind', Load(), lineno=179, col_offset=21), Name('cls', Load(), lineno=179, col_offset=27), Name('value', Load(), lineno=179, col_offset=32)], Load(), lineno=179, col_offset=15), lineno=179, col_offset=8)], [], lineno=175, col_offset=4), Return(Call(Name('map', Load(), lineno=180, col_offset=11), [Name('fixup', Load(), lineno=180, col_offset=15), Call(Attribute(Name('inspect', Load(), lineno=180, col_offset=22), 'classify_class_attrs', Load(), lineno=180, col_offset=22), [Name('object', Load(), lineno=180, col_offset=51)], [], None, None, lineno=180, col_offset=22)], [], None, None, lineno=180, col_offset=11), lineno=180, col_offset=4)], [], lineno=173, col_offset=0), FunctionDef('ispackage', arguments([Name('path', Param(), lineno=184, col_offset=14)], None, None, []), [Expr(Str('Guess whether a path refers to a package directory.', lineno=185, col_offset=4), lineno=185, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=186, col_offset=7), 'path', Load(), lineno=186, col_offset=7), 'isdir', Load(), lineno=186, col_offset=7), [Name('path', Load(), lineno=186, col_offset=21)], [], None, None, lineno=186, col_offset=7), [For(Name('ext', Store(), lineno=187, col_offset=12), Tuple([Str('.py', lineno=187, col_offset=20), Str('.pyc', lineno=187, col_offset=27), Str('.pyo', lineno=187, col_offset=35)], Load(), lineno=187, col_offset=20), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=188, col_offset=15), 'path', Load(), lineno=188, col_offset=15), 'isfile', Load(), lineno=188, col_offset=15), [Call(Attribute(Attribute(Name('os', Load(), lineno=188, col_offset=30), 'path', Load(), lineno=188, col_offset=30), 'join', Load(), lineno=188, col_offset=30), [Name('path', Load(), lineno=188, col_offset=43), BinOp(Str('__init__', lineno=188, col_offset=49), Add(), Name('ext', Load(), lineno=188, col_offset=62), lineno=188, col_offset=49)], [], None, None, lineno=188, col_offset=30)], [], None, None, lineno=188, col_offset=15), [Return(Name('True', Load(), lineno=189, col_offset=23), lineno=189, col_offset=16)], [], lineno=188, col_offset=12)], [], lineno=187, col_offset=8)], [], lineno=186, col_offset=4), Return(Name('False', Load(), lineno=190, col_offset=11), lineno=190, col_offset=4)], [], lineno=184, col_offset=0), FunctionDef('source_synopsis', arguments([Name('file', Param(), lineno=192, col_offset=20)], None, None, []), [Assign([Name('line', Store(), lineno=193, col_offset=4)], Call(Attribute(Name('file', Load(), lineno=193, col_offset=11), 'readline', Load(), lineno=193, col_offset=11), [], [], None, None, lineno=193, col_offset=11), lineno=193, col_offset=4), While(BoolOp(Or(), [Compare(Subscript(Name('line', Load(), lineno=194, col_offset=10), Slice(None, Num(1, lineno=194, col_offset=16), None), Load(), lineno=194, col_offset=10), [Eq()], [Str('#', lineno=194, col_offset=22)], lineno=194, col_offset=10), UnaryOp(Not(), Call(Name('strip', Load(), lineno=194, col_offset=33), [Name('line', Load(), lineno=194, col_offset=39)], [], None, None, lineno=194, col_offset=33), lineno=194, col_offset=29)], lineno=194, col_offset=10), [Assign([Name('line', Store(), lineno=195, col_offset=8)], Call(Attribute(Name('file', Load(), lineno=195, col_offset=15), 'readline', Load(), lineno=195, col_offset=15), [], [], None, None, lineno=195, col_offset=15), lineno=195, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=196, col_offset=15), lineno=196, col_offset=11), [Break( lineno=196, col_offset=21)], [], lineno=196, col_offset=8)], [], lineno=194, col_offset=4), Assign([Name('line', Store(), lineno=197, col_offset=4)], Call(Name('strip', Load(), lineno=197, col_offset=11), [Name('line', Load(), lineno=197, col_offset=17)], [], None, None, lineno=197, col_offset=11), lineno=197, col_offset=4), If(Compare(Subscript(Name('line', Load(), lineno=198, col_offset=7), Slice(None, Num(4, lineno=198, col_offset=13), None), Load(), lineno=198, col_offset=7), [Eq()], [Str('r"""', lineno=198, col_offset=19)], lineno=198, col_offset=7), [Assign([Name('line', Store(), lineno=198, col_offset=27)], Subscript(Name('line', Load(), lineno=198, col_offset=34), Slice(Num(1, lineno=198, col_offset=39), None, None), Load(), lineno=198, col_offset=34), lineno=198, col_offset=27)], [], lineno=198, col_offset=4), If(Compare(Subscript(Name('line', Load(), lineno=199, col_offset=7), Slice(None, Num(3, lineno=199, col_offset=13), None), Load(), lineno=199, col_offset=7), [Eq()], [Str('"""', lineno=199, col_offset=19)], lineno=199, col_offset=7), [Assign([Name('line', Store(), lineno=200, col_offset=8)], Subscript(Name('line', Load(), lineno=200, col_offset=15), Slice(Num(3, lineno=200, col_offset=20), None, None), Load(), lineno=200, col_offset=15), lineno=200, col_offset=8), If(Compare(Subscript(Name('line', Load(), lineno=201, col_offset=11), Slice(Num(-1, lineno=201, col_offset=17), None, None), Load(), lineno=201, col_offset=11), [Eq()], [Str('\\', lineno=201, col_offset=24)], lineno=201, col_offset=11), [Assign([Name('line', Store(), lineno=201, col_offset=30)], Subscript(Name('line', Load(), lineno=201, col_offset=37), Slice(None, Num(-1, lineno=201, col_offset=44), None), Load(), lineno=201, col_offset=37), lineno=201, col_offset=30)], [], lineno=201, col_offset=8), While(UnaryOp(Not(), Call(Name('strip', Load(), lineno=202, col_offset=18), [Name('line', Load(), lineno=202, col_offset=24)], [], None, None, lineno=202, col_offset=18), lineno=202, col_offset=14), [Assign([Name('line', Store(), lineno=203, col_offset=12)], Call(Attribute(Name('file', Load(), lineno=203, col_offset=19), 'readline', Load(), lineno=203, col_offset=19), [], [], None, None, lineno=203, col_offset=19), lineno=203, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=204, col_offset=19), lineno=204, col_offset=15), [Break( lineno=204, col_offset=25)], [], lineno=204, col_offset=12)], [], lineno=202, col_offset=8), Assign([Name('result', Store(), lineno=205, col_offset=8)], Call(Name('strip', Load(), lineno=205, col_offset=17), [Subscript(Call(Name('split', Load(), lineno=205, col_offset=23), [Name('line', Load(), lineno=205, col_offset=29), Str('"""', lineno=205, col_offset=35)], [], None, None, lineno=205, col_offset=23), Index(Num(0, lineno=205, col_offset=42)), Load(), lineno=205, col_offset=23)], [], None, None, lineno=205, col_offset=17), lineno=205, col_offset=8)], [Assign([Name('result', Store(), lineno=206, col_offset=10)], Name('None', Load(), lineno=206, col_offset=19), lineno=206, col_offset=10)], lineno=199, col_offset=4), Return(Name('result', Load(), lineno=207, col_offset=11), lineno=207, col_offset=4)], [], lineno=192, col_offset=0), FunctionDef('synopsis', arguments([Name('filename', Param(), lineno=209, col_offset=13), Name('cache', Param(), lineno=209, col_offset=23)], None, None, [Dict([], [], lineno=209, col_offset=29)]), [Expr(Str('Get the one-line summary out of a module file.', lineno=210, col_offset=4), lineno=210, col_offset=4), Assign([Name('mtime', Store(), lineno=211, col_offset=4)], Attribute(Call(Attribute(Name('os', Load(), lineno=211, col_offset=12), 'stat', Load(), lineno=211, col_offset=12), [Name('filename', Load(), lineno=211, col_offset=20)], [], None, None, lineno=211, col_offset=12), 'st_mtime', Load(), lineno=211, col_offset=12), lineno=211, col_offset=4), Assign([Tuple([Name('lastupdate', Store(), lineno=212, col_offset=4), Name('result', Store(), lineno=212, col_offset=16)], Store(), lineno=212, col_offset=4)], Call(Attribute(Name('cache', Load(), lineno=212, col_offset=25), 'get', Load(), lineno=212, col_offset=25), [Name('filename', Load(), lineno=212, col_offset=35), Tuple([Num(0, lineno=212, col_offset=46), Name('None', Load(), lineno=212, col_offset=49)], Load(), lineno=212, col_offset=46)], [], None, None, lineno=212, col_offset=25), lineno=212, col_offset=4), If(Compare(Name('lastupdate', Load(), lineno=213, col_offset=7), [Lt()], [Name('mtime', Load(), lineno=213, col_offset=20)], lineno=213, col_offset=7), [Assign([Name('info', Store(), lineno=214, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=214, col_offset=15), 'getmoduleinfo', Load(), lineno=214, col_offset=15), [Name('filename', Load(), lineno=214, col_offset=37)], [], None, None, lineno=214, col_offset=15), lineno=214, col_offset=8), TryExcept([Assign([Name('file', Store(), lineno=216, col_offset=12)], Call(Name('open', Load(), lineno=216, col_offset=19), [Name('filename', Load(), lineno=216, col_offset=24)], [], None, None, lineno=216, col_offset=19), lineno=216, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=217, col_offset=15), None, [Return(Name('None', Load(), lineno=219, col_offset=19), lineno=219, col_offset=12)], lineno=217, col_offset=8)], [], lineno=215, col_offset=8), If(BoolOp(And(), [Name('info', Load(), lineno=220, col_offset=11), Compare(Str('b', lineno=220, col_offset=20), [In()], [Subscript(Name('info', Load(), lineno=220, col_offset=27), Index(Num(2, lineno=220, col_offset=32)), Load(), lineno=220, col_offset=27)], lineno=220, col_offset=20)], lineno=220, col_offset=11), [TryExcept([Assign([Name('module', Store(), lineno=221, col_offset=17)], Call(Attribute(Name('imp', Load(), lineno=221, col_offset=26), 'load_module', Load(), lineno=221, col_offset=26), [Str('__temp__', lineno=221, col_offset=42), Name('file', Load(), lineno=221, col_offset=54), Name('filename', Load(), lineno=221, col_offset=60), Subscript(Name('info', Load(), lineno=221, col_offset=70), Slice(Num(1, lineno=221, col_offset=75), None, None), Load(), lineno=221, col_offset=70)], [], None, None, lineno=221, col_offset=26), lineno=221, col_offset=17)], [ExceptHandler(None, None, [Return(Name('None', Load(), lineno=222, col_offset=27), lineno=222, col_offset=20)], lineno=222, col_offset=12)], [], lineno=221, col_offset=12), Assign([Name('result', Store(), lineno=223, col_offset=12)], Subscript(Call(Attribute(BoolOp(Or(), [Attribute(Name('module', Load(), lineno=223, col_offset=22), '__doc__', Load(), lineno=223, col_offset=22), Str('', lineno=223, col_offset=40)], lineno=223, col_offset=22), 'splitlines', Load(), lineno=223, col_offset=22), [], [], None, None, lineno=223, col_offset=22), Index(Num(0, lineno=223, col_offset=57)), Load(), lineno=223, col_offset=22), lineno=223, col_offset=12), Delete([Subscript(Attribute(Name('sys', Load(), lineno=224, col_offset=16), 'modules', Load(), lineno=224, col_offset=16), Index(Str('__temp__', lineno=224, col_offset=28)), Del(), lineno=224, col_offset=16)], lineno=224, col_offset=12)], [Assign([Name('result', Store(), lineno=226, col_offset=12)], Call(Name('source_synopsis', Load(), lineno=226, col_offset=21), [Name('file', Load(), lineno=226, col_offset=37)], [], None, None, lineno=226, col_offset=21), lineno=226, col_offset=12), Expr(Call(Attribute(Name('file', Load(), lineno=227, col_offset=12), 'close', Load(), lineno=227, col_offset=12), [], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12)], lineno=220, col_offset=8), Assign([Subscript(Name('cache', Load(), lineno=228, col_offset=8), Index(Name('filename', Load(), lineno=228, col_offset=14)), Store(), lineno=228, col_offset=8)], Tuple([Name('mtime', Load(), lineno=228, col_offset=27), Name('result', Load(), lineno=228, col_offset=34)], Load(), lineno=228, col_offset=27), lineno=228, col_offset=8)], [], lineno=213, col_offset=4), Return(Name('result', Load(), lineno=229, col_offset=11), lineno=229, col_offset=4)], [], lineno=209, col_offset=0), ClassDef('ErrorDuringImport', [Name('Exception', Load(), lineno=231, col_offset=24)], [Expr(Str('Errors that occurred while trying to import something to document it.', lineno=232, col_offset=4), lineno=232, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=233, col_offset=17), Name('filename', Param(), lineno=233, col_offset=23), Name('exc_info', Param(), lineno=233, col_offset=33)], None, None, []), [Assign([Tuple([Name('exc', Store(), lineno=234, col_offset=8), Name('value', Store(), lineno=234, col_offset=13), Name('tb', Store(), lineno=234, col_offset=20)], Store(), lineno=234, col_offset=8)], Name('exc_info', Load(), lineno=234, col_offset=25), lineno=234, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=235, col_offset=8), 'filename', Store(), lineno=235, col_offset=8)], Name('filename', Load(), lineno=235, col_offset=24), lineno=235, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=236, col_offset=8), 'exc', Store(), lineno=236, col_offset=8)], Name('exc', Load(), lineno=236, col_offset=19), lineno=236, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=237, col_offset=8), 'value', Store(), lineno=237, col_offset=8)], Name('value', Load(), lineno=237, col_offset=21), lineno=237, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=238, col_offset=8), 'tb', Store(), lineno=238, col_offset=8)], Name('tb', Load(), lineno=238, col_offset=18), lineno=238, col_offset=8)], [], lineno=233, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=240, col_offset=16)], None, None, []), [Assign([Name('exc', Store(), lineno=241, col_offset=8)], Attribute(Name('self', Load(), lineno=241, col_offset=14), 'exc', Load(), lineno=241, col_offset=14), lineno=241, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=242, col_offset=11), [Name('exc', Load(), lineno=242, col_offset=16)], [], None, None, lineno=242, col_offset=11), [Is()], [Attribute(Name('types', Load(), lineno=242, col_offset=24), 'ClassType', Load(), lineno=242, col_offset=24)], lineno=242, col_offset=11), [Assign([Name('exc', Store(), lineno=243, col_offset=12)], Attribute(Name('exc', Load(), lineno=243, col_offset=18), '__name__', Load(), lineno=243, col_offset=18), lineno=243, col_offset=12)], [], lineno=242, col_offset=8), Return(BinOp(Str('problem in %s - %s: %s', lineno=244, col_offset=15), Mod(), Tuple([Attribute(Name('self', Load(), lineno=244, col_offset=43), 'filename', Load(), lineno=244, col_offset=43), Name('exc', Load(), lineno=244, col_offset=58), Attribute(Name('self', Load(), lineno=244, col_offset=63), 'value', Load(), lineno=244, col_offset=63)], Load(), lineno=244, col_offset=43), lineno=244, col_offset=15), lineno=244, col_offset=8)], [], lineno=240, col_offset=4)], [], lineno=231, col_offset=0), FunctionDef('importfile', arguments([Name('path', Param(), lineno=246, col_offset=15)], None, None, []), [Expr(Str('Import a Python source file or compiled file given its path.', lineno=247, col_offset=4), lineno=247, col_offset=4), Assign([Name('magic', Store(), lineno=248, col_offset=4)], Call(Attribute(Name('imp', Load(), lineno=248, col_offset=12), 'get_magic', Load(), lineno=248, col_offset=12), [], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=4), Assign([Name('file', Store(), lineno=249, col_offset=4)], Call(Name('open', Load(), lineno=249, col_offset=11), [Name('path', Load(), lineno=249, col_offset=16), Str('r', lineno=249, col_offset=22)], [], None, None, lineno=249, col_offset=11), lineno=249, col_offset=4), If(Compare(Call(Attribute(Name('file', Load(), lineno=250, col_offset=7), 'read', Load(), lineno=250, col_offset=7), [Call(Name('len', Load(), lineno=250, col_offset=17), [Name('magic', Load(), lineno=250, col_offset=21)], [], None, None, lineno=250, col_offset=17)], [], None, None, lineno=250, col_offset=7), [Eq()], [Name('magic', Load(), lineno=250, col_offset=32)], lineno=250, col_offset=7), [Assign([Name('kind', Store(), lineno=251, col_offset=8)], Attribute(Name('imp', Load(), lineno=251, col_offset=15), 'PY_COMPILED', Load(), lineno=251, col_offset=15), lineno=251, col_offset=8)], [Assign([Name('kind', Store(), lineno=253, col_offset=8)], Attribute(Name('imp', Load(), lineno=253, col_offset=15), 'PY_SOURCE', Load(), lineno=253, col_offset=15), lineno=253, col_offset=8)], lineno=250, col_offset=4), Expr(Call(Attribute(Name('file', Load(), lineno=254, col_offset=4), 'close', Load(), lineno=254, col_offset=4), [], [], None, None, lineno=254, col_offset=4), lineno=254, col_offset=4), Assign([Name('filename', Store(), lineno=255, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=255, col_offset=15), 'path', Load(), lineno=255, col_offset=15), 'basename', Load(), lineno=255, col_offset=15), [Name('path', Load(), lineno=255, col_offset=32)], [], None, None, lineno=255, col_offset=15), lineno=255, col_offset=4), Assign([Tuple([Name('name', Store(), lineno=256, col_offset=4), Name('ext', Store(), lineno=256, col_offset=10)], Store(), lineno=256, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=256, col_offset=16), 'path', Load(), lineno=256, col_offset=16), 'splitext', Load(), lineno=256, col_offset=16), [Name('filename', Load(), lineno=256, col_offset=33)], [], None, None, lineno=256, col_offset=16), lineno=256, col_offset=4), Assign([Name('file', Store(), lineno=257, col_offset=4)], Call(Name('open', Load(), lineno=257, col_offset=11), [Name('path', Load(), lineno=257, col_offset=16), Str('r', lineno=257, col_offset=22)], [], None, None, lineno=257, col_offset=11), lineno=257, col_offset=4), TryExcept([Assign([Name('module', Store(), lineno=259, col_offset=8)], Call(Attribute(Name('imp', Load(), lineno=259, col_offset=17), 'load_module', Load(), lineno=259, col_offset=17), [Name('name', Load(), lineno=259, col_offset=33), Name('file', Load(), lineno=259, col_offset=39), Name('path', Load(), lineno=259, col_offset=45), Tuple([Name('ext', Load(), lineno=259, col_offset=52), Str('r', lineno=259, col_offset=57), Name('kind', Load(), lineno=259, col_offset=62)], Load(), lineno=259, col_offset=52)], [], None, None, lineno=259, col_offset=17), lineno=259, col_offset=8)], [ExceptHandler(None, None, [Raise(Call(Name('ErrorDuringImport', Load(), lineno=261, col_offset=14), [Name('path', Load(), lineno=261, col_offset=32), Call(Attribute(Name('sys', Load(), lineno=261, col_offset=38), 'exc_info', Load(), lineno=261, col_offset=38), [], [], None, None, lineno=261, col_offset=38)], [], None, None, lineno=261, col_offset=14), None, None, lineno=261, col_offset=8)], lineno=260, col_offset=4)], [], lineno=258, col_offset=4), Expr(Call(Attribute(Name('file', Load(), lineno=262, col_offset=4), 'close', Load(), lineno=262, col_offset=4), [], [], None, None, lineno=262, col_offset=4), lineno=262, col_offset=4), Return(Name('module', Load(), lineno=263, col_offset=11), lineno=263, col_offset=4)], [], lineno=246, col_offset=0), FunctionDef('safeimport', arguments([Name('path', Param(), lineno=265, col_offset=15), Name('forceload', Param(), lineno=265, col_offset=21), Name('cache', Param(), lineno=265, col_offset=34)], None, None, [Num(0, lineno=265, col_offset=31), Dict([], [], lineno=265, col_offset=40)]), [Expr(Str("Import a module; handle errors; return None if the module isn't found.\n\n    If the module *is* found but an exception occurs, it's wrapped in an\n    ErrorDuringImport exception and reraised.  Unlike __import__, if a\n    package path is specified, the module at the end of the path is returned,\n    not the package at the beginning.  If the optional 'forceload' argument\n    is 1, we reload the module from disk (unless it's a dynamic extension).", lineno=272, col_offset=-1), lineno=272, col_offset=-1), TryExcept([If(BoolOp(And(), [Name('forceload', Load(), lineno=278, col_offset=11), Compare(Name('path', Load(), lineno=278, col_offset=25), [In()], [Attribute(Name('sys', Load(), lineno=278, col_offset=33), 'modules', Load(), lineno=278, col_offset=33)], lineno=278, col_offset=25)], lineno=278, col_offset=11), [If(Compare(Name('path', Load(), lineno=279, col_offset=15), [NotIn()], [Attribute(Name('sys', Load(), lineno=279, col_offset=27), 'builtin_module_names', Load(), lineno=279, col_offset=27)], lineno=279, col_offset=15), [Assign([Name('subs', Store(), lineno=286, col_offset=16)], ListComp(Name('m', Load(), lineno=286, col_offset=24), [comprehension(Name('m', Store(), lineno=286, col_offset=30), Attribute(Name('sys', Load(), lineno=286, col_offset=35), 'modules', Load(), lineno=286, col_offset=35), [Call(Attribute(Name('m', Load(), lineno=286, col_offset=50), 'startswith', Load(), lineno=286, col_offset=50), [BinOp(Name('path', Load(), lineno=286, col_offset=63), Add(), Str('.', lineno=286, col_offset=70), lineno=286, col_offset=63)], [], None, None, lineno=286, col_offset=50)])], lineno=286, col_offset=24), lineno=286, col_offset=16), For(Name('key', Store(), lineno=287, col_offset=20), BinOp(List([Name('path', Load(), lineno=287, col_offset=28)], Load(), lineno=287, col_offset=27), Add(), Name('subs', Load(), lineno=287, col_offset=36), lineno=287, col_offset=27), [Assign([Subscript(Name('cache', Load(), lineno=289, col_offset=20), Index(Name('key', Load(), lineno=289, col_offset=26)), Store(), lineno=289, col_offset=20)], Subscript(Attribute(Name('sys', Load(), lineno=289, col_offset=33), 'modules', Load(), lineno=289, col_offset=33), Index(Name('key', Load(), lineno=289, col_offset=45)), Load(), lineno=289, col_offset=33), lineno=289, col_offset=20), Delete([Subscript(Attribute(Name('sys', Load(), lineno=290, col_offset=24), 'modules', Load(), lineno=290, col_offset=24), Index(Name('key', Load(), lineno=290, col_offset=36)), Del(), lineno=290, col_offset=24)], lineno=290, col_offset=20)], [], lineno=287, col_offset=16)], [], lineno=279, col_offset=12)], [], lineno=278, col_offset=8), Assign([Name('module', Store(), lineno=291, col_offset=8)], Call(Name('__import__', Load(), lineno=291, col_offset=17), [Name('path', Load(), lineno=291, col_offset=28)], [], None, None, lineno=291, col_offset=17), lineno=291, col_offset=8)], [ExceptHandler(None, None, [Assign([Tuple([Name('exc', Store(), lineno=294, col_offset=9), Name('value', Store(), lineno=294, col_offset=14), Name('tb', Store(), lineno=294, col_offset=21)], Store(), lineno=294, col_offset=9), Name('info', Store(), lineno=294, col_offset=27)], Call(Attribute(Name('sys', Load(), lineno=294, col_offset=34), 'exc_info', Load(), lineno=294, col_offset=34), [], [], None, None, lineno=294, col_offset=34), lineno=294, col_offset=8), If(Compare(Name('path', Load(), lineno=295, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=295, col_offset=19), 'modules', Load(), lineno=295, col_offset=19)], lineno=295, col_offset=11), [Raise(Call(Name('ErrorDuringImport', Load(), lineno=297, col_offset=18), [Attribute(Subscript(Attribute(Name('sys', Load(), lineno=297, col_offset=36), 'modules', Load(), lineno=297, col_offset=36), Index(Name('path', Load(), lineno=297, col_offset=48)), Load(), lineno=297, col_offset=36), '__file__', Load(), lineno=297, col_offset=36), Name('info', Load(), lineno=297, col_offset=64)], [], None, None, lineno=297, col_offset=18), None, None, lineno=297, col_offset=12)], [If(Compare(Name('exc', Load(), lineno=298, col_offset=13), [Is()], [Name('SyntaxError', Load(), lineno=298, col_offset=20)], lineno=298, col_offset=13), [Raise(Call(Name('ErrorDuringImport', Load(), lineno=300, col_offset=18), [Attribute(Name('value', Load(), lineno=300, col_offset=36), 'filename', Load(), lineno=300, col_offset=36), Name('info', Load(), lineno=300, col_offset=52)], [], None, None, lineno=300, col_offset=18), None, None, lineno=300, col_offset=12)], [If(BoolOp(And(), [Compare(Name('exc', Load(), lineno=301, col_offset=13), [Is()], [Name('ImportError', Load(), lineno=301, col_offset=20)], lineno=301, col_offset=13), Compare(Subscript(Subscript(Call(Name('extract_tb', Load(), lineno=301, col_offset=36), [Name('tb', Load(), lineno=301, col_offset=47)], [], None, None, lineno=301, col_offset=36), Index(Num(-1, lineno=301, col_offset=52)), Load(), lineno=301, col_offset=36), Index(Num(2, lineno=301, col_offset=55)), Load(), lineno=301, col_offset=36), [Eq()], [Str('safeimport', lineno=301, col_offset=59)], lineno=301, col_offset=36)], lineno=301, col_offset=13), [Return(Name('None', Load(), lineno=304, col_offset=19), lineno=304, col_offset=12)], [Raise(Call(Name('ErrorDuringImport', Load(), lineno=307, col_offset=18), [Name('path', Load(), lineno=307, col_offset=36), Call(Attribute(Name('sys', Load(), lineno=307, col_offset=42), 'exc_info', Load(), lineno=307, col_offset=42), [], [], None, None, lineno=307, col_offset=42)], [], None, None, lineno=307, col_offset=18), None, None, lineno=307, col_offset=12)], lineno=301, col_offset=13)], lineno=298, col_offset=13)], lineno=295, col_offset=8)], lineno=292, col_offset=4)], [], lineno=273, col_offset=4), For(Name('part', Store(), lineno=308, col_offset=8), Subscript(Call(Name('split', Load(), lineno=308, col_offset=16), [Name('path', Load(), lineno=308, col_offset=22), Str('.', lineno=308, col_offset=28)], [], None, None, lineno=308, col_offset=16), Slice(Num(1, lineno=308, col_offset=33), None, None), Load(), lineno=308, col_offset=16), [TryExcept([Assign([Name('module', Store(), lineno=309, col_offset=13)], Call(Name('getattr', Load(), lineno=309, col_offset=22), [Name('module', Load(), lineno=309, col_offset=30), Name('part', Load(), lineno=309, col_offset=38)], [], None, None, lineno=309, col_offset=22), lineno=309, col_offset=13)], [ExceptHandler(Name('AttributeError', Load(), lineno=310, col_offset=15), None, [Return(Name('None', Load(), lineno=310, col_offset=38), lineno=310, col_offset=31)], lineno=310, col_offset=8)], [], lineno=309, col_offset=8)], [], lineno=308, col_offset=4), Return(Name('module', Load(), lineno=311, col_offset=11), lineno=311, col_offset=4)], [], lineno=265, col_offset=0), ClassDef('Doc', [], [FunctionDef('document', arguments([Name('self', Param(), lineno=316, col_offset=17), Name('object', Param(), lineno=316, col_offset=23), Name('name', Param(), lineno=316, col_offset=31)], 'args', None, [Name('None', Load(), lineno=316, col_offset=36)]), [Expr(Str('Generate documentation for an object.', lineno=317, col_offset=8), lineno=317, col_offset=8), Assign([Name('args', Store(), lineno=318, col_offset=8)], BinOp(Tuple([Name('object', Load(), lineno=318, col_offset=16), Name('name', Load(), lineno=318, col_offset=24)], Load(), lineno=318, col_offset=16), Add(), Name('args', Load(), lineno=318, col_offset=32), lineno=318, col_offset=15), lineno=318, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=323, col_offset=11), 'isgetsetdescriptor', Load(), lineno=323, col_offset=11), [Name('object', Load(), lineno=323, col_offset=38)], [], None, None, lineno=323, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=323, col_offset=54), 'docdata', Load(), lineno=323, col_offset=54), [], [], Name('args', Load(), lineno=323, col_offset=68), None, lineno=323, col_offset=54), lineno=323, col_offset=47)], [], lineno=323, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=324, col_offset=11), 'ismemberdescriptor', Load(), lineno=324, col_offset=11), [Name('object', Load(), lineno=324, col_offset=38)], [], None, None, lineno=324, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=324, col_offset=54), 'docdata', Load(), lineno=324, col_offset=54), [], [], Name('args', Load(), lineno=324, col_offset=68), None, lineno=324, col_offset=54), lineno=324, col_offset=47)], [], lineno=324, col_offset=8), TryExcept([If(Call(Attribute(Name('inspect', Load(), lineno=326, col_offset=15), 'ismodule', Load(), lineno=326, col_offset=15), [Name('object', Load(), lineno=326, col_offset=32)], [], None, None, lineno=326, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=326, col_offset=48), 'docmodule', Load(), lineno=326, col_offset=48), [], [], Name('args', Load(), lineno=326, col_offset=64), None, lineno=326, col_offset=48), lineno=326, col_offset=41)], [], lineno=326, col_offset=12), If(Call(Attribute(Name('inspect', Load(), lineno=327, col_offset=15), 'isclass', Load(), lineno=327, col_offset=15), [Name('object', Load(), lineno=327, col_offset=31)], [], None, None, lineno=327, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=327, col_offset=47), 'docclass', Load(), lineno=327, col_offset=47), [], [], Name('args', Load(), lineno=327, col_offset=62), None, lineno=327, col_offset=47), lineno=327, col_offset=40)], [], lineno=327, col_offset=12), If(Call(Attribute(Name('inspect', Load(), lineno=328, col_offset=15), 'isroutine', Load(), lineno=328, col_offset=15), [Name('object', Load(), lineno=328, col_offset=33)], [], None, None, lineno=328, col_offset=15), [Return(Call(Attribute(Name('self', Load(), lineno=328, col_offset=49), 'docroutine', Load(), lineno=328, col_offset=49), [], [], Name('args', Load(), lineno=328, col_offset=66), None, lineno=328, col_offset=49), lineno=328, col_offset=42)], [], lineno=328, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=329, col_offset=15), None, [Pass( lineno=330, col_offset=12)], lineno=329, col_offset=8)], [], lineno=325, col_offset=8), If(Call(Name('isinstance', Load(), lineno=331, col_offset=11), [Name('object', Load(), lineno=331, col_offset=22), Name('property', Load(), lineno=331, col_offset=30)], [], None, None, lineno=331, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=331, col_offset=48), 'docproperty', Load(), lineno=331, col_offset=48), [], [], Name('args', Load(), lineno=331, col_offset=66), None, lineno=331, col_offset=48), lineno=331, col_offset=41)], [], lineno=331, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=332, col_offset=15), 'docother', Load(), lineno=332, col_offset=15), [], [], Name('args', Load(), lineno=332, col_offset=30), None, lineno=332, col_offset=15), lineno=332, col_offset=8)], [], lineno=316, col_offset=4), FunctionDef('fail', arguments([Name('self', Param(), lineno=334, col_offset=13), Name('object', Param(), lineno=334, col_offset=19), Name('name', Param(), lineno=334, col_offset=27)], 'args', None, [Name('None', Load(), lineno=334, col_offset=32)]), [Expr(Str('Raise an exception for unimplemented types.', lineno=335, col_offset=8), lineno=335, col_offset=8), Assign([Name('message', Store(), lineno=336, col_offset=8)], BinOp(Str("don't know how to document object%s of type %s", lineno=336, col_offset=18), Mod(), Tuple([BoolOp(And(), [Name('name', Load(), lineno=337, col_offset=12), BinOp(Str(' ', lineno=337, col_offset=21), Add(), Call(Name('repr', Load(), lineno=337, col_offset=27), [Name('name', Load(), lineno=337, col_offset=32)], [], None, None, lineno=337, col_offset=27), lineno=337, col_offset=21)], lineno=337, col_offset=12), Attribute(Call(Name('type', Load(), lineno=337, col_offset=39), [Name('object', Load(), lineno=337, col_offset=44)], [], None, None, lineno=337, col_offset=39), '__name__', Load(), lineno=337, col_offset=39)], Load(), lineno=337, col_offset=12), lineno=336, col_offset=18), lineno=336, col_offset=8), Raise(Name('TypeError', Load(), lineno=338, col_offset=14), Name('message', Load(), lineno=338, col_offset=25), None, lineno=338, col_offset=8)], [], lineno=334, col_offset=4), Assign([Name('docmodule', Store(), lineno=340, col_offset=4), Name('docclass', Store(), lineno=340, col_offset=16), Name('docroutine', Store(), lineno=340, col_offset=27), Name('docother', Store(), lineno=340, col_offset=40), Name('docproperty', Store(), lineno=340, col_offset=51), Name('docdata', Store(), lineno=340, col_offset=65)], Name('fail', Load(), lineno=340, col_offset=75), lineno=340, col_offset=4), FunctionDef('getdocloc', arguments([Name('self', Param(), lineno=342, col_offset=18), Name('object', Param(), lineno=342, col_offset=24)], None, None, []), [Expr(Str('Return the location of module docs or None', lineno=343, col_offset=8), lineno=343, col_offset=8), TryExcept([Assign([Name('file', Store(), lineno=346, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=346, col_offset=19), 'getabsfile', Load(), lineno=346, col_offset=19), [Name('object', Load(), lineno=346, col_offset=38)], [], None, None, lineno=346, col_offset=19), lineno=346, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=347, col_offset=15), None, [Assign([Name('file', Store(), lineno=348, col_offset=12)], Str('(built-in)', lineno=348, col_offset=19), lineno=348, col_offset=12)], lineno=347, col_offset=8)], [], lineno=345, col_offset=8), Assign([Name('docloc', Store(), lineno=350, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=350, col_offset=17), 'environ', Load(), lineno=350, col_offset=17), 'get', Load(), lineno=350, col_offset=17), [Str('PYTHONDOCS', lineno=350, col_offset=32), Str('http://docs.python.org/library', lineno=351, col_offset=32)], [], None, None, lineno=350, col_offset=17), lineno=350, col_offset=8), Assign([Name('basedir', Store(), lineno=352, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=352, col_offset=18), 'path', Load(), lineno=352, col_offset=18), 'join', Load(), lineno=352, col_offset=18), [Attribute(Name('sys', Load(), lineno=352, col_offset=31), 'exec_prefix', Load(), lineno=352, col_offset=31), Str('lib', lineno=352, col_offset=48), BinOp(Str('python', lineno=353, col_offset=31), Add(), Subscript(Attribute(Name('sys', Load(), lineno=353, col_offset=40), 'version', Load(), lineno=353, col_offset=40), Slice(Num(0, lineno=353, col_offset=52), Num(3, lineno=353, col_offset=54), None), Load(), lineno=353, col_offset=40), lineno=353, col_offset=31)], [], None, None, lineno=352, col_offset=18), lineno=352, col_offset=8), If(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=354, col_offset=12), [Name('object', Load(), lineno=354, col_offset=23), Call(Name('type', Load(), lineno=354, col_offset=31), [Name('os', Load(), lineno=354, col_offset=36)], [], None, None, lineno=354, col_offset=31)], [], None, None, lineno=354, col_offset=12), BoolOp(Or(), [Compare(Attribute(Name('object', Load(), lineno=355, col_offset=13), '__name__', Load(), lineno=355, col_offset=13), [In()], [Tuple([Str('errno', lineno=355, col_offset=33), Str('exceptions', lineno=355, col_offset=42), Str('gc', lineno=355, col_offset=56), Str('imp', lineno=355, col_offset=62), Str('marshal', lineno=356, col_offset=33), Str('posix', lineno=356, col_offset=44), Str('signal', lineno=356, col_offset=53), Str('sys', lineno=356, col_offset=63), Str('thread', lineno=357, col_offset=33), Str('zipimport', lineno=357, col_offset=43)], Load(), lineno=355, col_offset=33)], lineno=355, col_offset=13), BoolOp(And(), [Call(Attribute(Name('file', Load(), lineno=358, col_offset=14), 'startswith', Load(), lineno=358, col_offset=14), [Name('basedir', Load(), lineno=358, col_offset=30)], [], None, None, lineno=358, col_offset=14), UnaryOp(Not(), Call(Attribute(Name('file', Load(), lineno=359, col_offset=18), 'startswith', Load(), lineno=359, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=359, col_offset=34), 'path', Load(), lineno=359, col_offset=34), 'join', Load(), lineno=359, col_offset=34), [Name('basedir', Load(), lineno=359, col_offset=47), Str('site-packages', lineno=359, col_offset=56)], [], None, None, lineno=359, col_offset=34)], [], None, None, lineno=359, col_offset=18), lineno=359, col_offset=14)], lineno=358, col_offset=14)], lineno=355, col_offset=13), Compare(Attribute(Name('object', Load(), lineno=360, col_offset=12), '__name__', Load(), lineno=360, col_offset=12), [NotIn()], [Tuple([Str('xml.etree', lineno=360, col_offset=36), Str('test.pydoc_mod', lineno=360, col_offset=49)], Load(), lineno=360, col_offset=36)], lineno=360, col_offset=12)], lineno=354, col_offset=12), [If(Call(Attribute(Name('docloc', Load(), lineno=361, col_offset=15), 'startswith', Load(), lineno=361, col_offset=15), [Str('http://', lineno=361, col_offset=33)], [], None, None, lineno=361, col_offset=15), [Assign([Name('docloc', Store(), lineno=362, col_offset=16)], BinOp(Str('%s/%s', lineno=362, col_offset=25), Mod(), Tuple([Call(Attribute(Name('docloc', Load(), lineno=362, col_offset=36), 'rstrip', Load(), lineno=362, col_offset=36), [Str('/', lineno=362, col_offset=50)], [], None, None, lineno=362, col_offset=36), Attribute(Name('object', Load(), lineno=362, col_offset=56), '__name__', Load(), lineno=362, col_offset=56)], Load(), lineno=362, col_offset=36), lineno=362, col_offset=25), lineno=362, col_offset=16)], [Assign([Name('docloc', Store(), lineno=364, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=364, col_offset=25), 'path', Load(), lineno=364, col_offset=25), 'join', Load(), lineno=364, col_offset=25), [Name('docloc', Load(), lineno=364, col_offset=38), BinOp(Attribute(Name('object', Load(), lineno=364, col_offset=46), '__name__', Load(), lineno=364, col_offset=46), Add(), Str('.html', lineno=364, col_offset=64), lineno=364, col_offset=46)], [], None, None, lineno=364, col_offset=25), lineno=364, col_offset=16)], lineno=361, col_offset=12)], [Assign([Name('docloc', Store(), lineno=366, col_offset=12)], Name('None', Load(), lineno=366, col_offset=21), lineno=366, col_offset=12)], lineno=354, col_offset=8), Return(Name('docloc', Load(), lineno=367, col_offset=15), lineno=367, col_offset=8)], [], lineno=342, col_offset=4)], [], lineno=315, col_offset=0), ClassDef('HTMLRepr', [Name('Repr', Load(), lineno=371, col_offset=15)], [Expr(Str('Class for safely making an HTML representation of a Python object.', lineno=372, col_offset=4), lineno=372, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=373, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('Repr', Load(), lineno=374, col_offset=8), '__init__', Load(), lineno=374, col_offset=8), [Name('self', Load(), lineno=374, col_offset=22)], [], None, None, lineno=374, col_offset=8), lineno=374, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=375, col_offset=8), 'maxlist', Store(), lineno=375, col_offset=8), Attribute(Name('self', Load(), lineno=375, col_offset=23), 'maxtuple', Store(), lineno=375, col_offset=23)], Num(20, lineno=375, col_offset=39), lineno=375, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=376, col_offset=8), 'maxdict', Store(), lineno=376, col_offset=8)], Num(10, lineno=376, col_offset=23), lineno=376, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=377, col_offset=8), 'maxstring', Store(), lineno=377, col_offset=8), Attribute(Name('self', Load(), lineno=377, col_offset=25), 'maxother', Store(), lineno=377, col_offset=25)], Num(100, lineno=377, col_offset=41), lineno=377, col_offset=8)], [], lineno=373, col_offset=4), FunctionDef('escape', arguments([Name('self', Param(), lineno=379, col_offset=15), Name('text', Param(), lineno=379, col_offset=21)], None, None, []), [Return(Call(Name('replace', Load(), lineno=380, col_offset=15), [Name('text', Load(), lineno=380, col_offset=23), Str('&', lineno=380, col_offset=29), Str('&amp;', lineno=380, col_offset=34), Str('<', lineno=380, col_offset=43), Str('&lt;', lineno=380, col_offset=48), Str('>', lineno=380, col_offset=56), Str('&gt;', lineno=380, col_offset=61)], [], None, None, lineno=380, col_offset=15), lineno=380, col_offset=8)], [], lineno=379, col_offset=4), FunctionDef('repr', arguments([Name('self', Param(), lineno=382, col_offset=13), Name('object', Param(), lineno=382, col_offset=19)], None, None, []), [Return(Call(Attribute(Name('Repr', Load(), lineno=383, col_offset=15), 'repr', Load(), lineno=383, col_offset=15), [Name('self', Load(), lineno=383, col_offset=25), Name('object', Load(), lineno=383, col_offset=31)], [], None, None, lineno=383, col_offset=15), lineno=383, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('repr1', arguments([Name('self', Param(), lineno=385, col_offset=14), Name('x', Param(), lineno=385, col_offset=20), Name('level', Param(), lineno=385, col_offset=23)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=386, col_offset=11), [Call(Name('type', Load(), lineno=386, col_offset=19), [Name('x', Load(), lineno=386, col_offset=24)], [], None, None, lineno=386, col_offset=19), Str('__name__', lineno=386, col_offset=28)], [], None, None, lineno=386, col_offset=11), [Assign([Name('methodname', Store(), lineno=387, col_offset=12)], BinOp(Str('repr_', lineno=387, col_offset=25), Add(), Call(Name('join', Load(), lineno=387, col_offset=35), [Call(Name('split', Load(), lineno=387, col_offset=40), [Attribute(Call(Name('type', Load(), lineno=387, col_offset=46), [Name('x', Load(), lineno=387, col_offset=51)], [], None, None, lineno=387, col_offset=46), '__name__', Load(), lineno=387, col_offset=46)], [], None, None, lineno=387, col_offset=40), Str('_', lineno=387, col_offset=65)], [], None, None, lineno=387, col_offset=35), lineno=387, col_offset=25), lineno=387, col_offset=12), If(Call(Name('hasattr', Load(), lineno=388, col_offset=15), [Name('self', Load(), lineno=388, col_offset=23), Name('methodname', Load(), lineno=388, col_offset=29)], [], None, None, lineno=388, col_offset=15), [Return(Call(Call(Name('getattr', Load(), lineno=389, col_offset=23), [Name('self', Load(), lineno=389, col_offset=31), Name('methodname', Load(), lineno=389, col_offset=37)], [], None, None, lineno=389, col_offset=23), [Name('x', Load(), lineno=389, col_offset=49), Name('level', Load(), lineno=389, col_offset=52)], [], None, None, lineno=389, col_offset=23), lineno=389, col_offset=16)], [], lineno=388, col_offset=12)], [], lineno=386, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=390, col_offset=15), 'escape', Load(), lineno=390, col_offset=15), [Call(Name('cram', Load(), lineno=390, col_offset=27), [Call(Name('stripid', Load(), lineno=390, col_offset=32), [Call(Name('repr', Load(), lineno=390, col_offset=40), [Name('x', Load(), lineno=390, col_offset=45)], [], None, None, lineno=390, col_offset=40)], [], None, None, lineno=390, col_offset=32), Attribute(Name('self', Load(), lineno=390, col_offset=50), 'maxother', Load(), lineno=390, col_offset=50)], [], None, None, lineno=390, col_offset=27)], [], None, None, lineno=390, col_offset=15), lineno=390, col_offset=8)], [], lineno=385, col_offset=4), FunctionDef('repr_string', arguments([Name('self', Param(), lineno=392, col_offset=20), Name('x', Param(), lineno=392, col_offset=26), Name('level', Param(), lineno=392, col_offset=29)], None, None, []), [Assign([Name('test', Store(), lineno=393, col_offset=8)], Call(Name('cram', Load(), lineno=393, col_offset=15), [Name('x', Load(), lineno=393, col_offset=20), Attribute(Name('self', Load(), lineno=393, col_offset=23), 'maxstring', Load(), lineno=393, col_offset=23)], [], None, None, lineno=393, col_offset=15), lineno=393, col_offset=8), Assign([Name('testrepr', Store(), lineno=394, col_offset=8)], Call(Name('repr', Load(), lineno=394, col_offset=19), [Name('test', Load(), lineno=394, col_offset=24)], [], None, None, lineno=394, col_offset=19), lineno=394, col_offset=8), If(BoolOp(And(), [Compare(Str('\\', lineno=395, col_offset=11), [In()], [Name('test', Load(), lineno=395, col_offset=19)], lineno=395, col_offset=11), Compare(Str('\\', lineno=395, col_offset=28), [NotIn()], [Call(Name('replace', Load(), lineno=395, col_offset=40), [Name('testrepr', Load(), lineno=395, col_offset=48), Str('\\\\', lineno=395, col_offset=58), Str('', lineno=395, col_offset=65)], [], None, None, lineno=395, col_offset=40)], lineno=395, col_offset=28)], lineno=395, col_offset=11), [Return(BinOp(BinOp(BinOp(Str('r', lineno=398, col_offset=19), Add(), Subscript(Name('testrepr', Load(), lineno=398, col_offset=25), Index(Num(0, lineno=398, col_offset=34)), Load(), lineno=398, col_offset=25), lineno=398, col_offset=19), Add(), Call(Attribute(Name('self', Load(), lineno=398, col_offset=39), 'escape', Load(), lineno=398, col_offset=39), [Name('test', Load(), lineno=398, col_offset=51)], [], None, None, lineno=398, col_offset=39), lineno=398, col_offset=37), Add(), Subscript(Name('testrepr', Load(), lineno=398, col_offset=59), Index(Num(0, lineno=398, col_offset=68)), Load(), lineno=398, col_offset=59), lineno=398, col_offset=57), lineno=398, col_offset=12)], [], lineno=395, col_offset=8), Return(Call(Attribute(Name('re', Load(), lineno=399, col_offset=15), 'sub', Load(), lineno=399, col_offset=15), [Str('((\\\\[\\\\abfnrtv\\\'"]|\\\\[0-9]..|\\\\x..|\\\\u....)+)', lineno=399, col_offset=22), Str('<font color="#c040c0">\\1</font>', lineno=400, col_offset=22), Call(Attribute(Name('self', Load(), lineno=401, col_offset=22), 'escape', Load(), lineno=401, col_offset=22), [Name('testrepr', Load(), lineno=401, col_offset=34)], [], None, None, lineno=401, col_offset=22)], [], None, None, lineno=399, col_offset=15), lineno=399, col_offset=8)], [], lineno=392, col_offset=4), Assign([Name('repr_str', Store(), lineno=403, col_offset=4)], Name('repr_string', Load(), lineno=403, col_offset=15), lineno=403, col_offset=4), FunctionDef('repr_instance', arguments([Name('self', Param(), lineno=405, col_offset=22), Name('x', Param(), lineno=405, col_offset=28), Name('level', Param(), lineno=405, col_offset=31)], None, None, []), [TryExcept([Return(Call(Attribute(Name('self', Load(), lineno=407, col_offset=19), 'escape', Load(), lineno=407, col_offset=19), [Call(Name('cram', Load(), lineno=407, col_offset=31), [Call(Name('stripid', Load(), lineno=407, col_offset=36), [Call(Name('repr', Load(), lineno=407, col_offset=44), [Name('x', Load(), lineno=407, col_offset=49)], [], None, None, lineno=407, col_offset=44)], [], None, None, lineno=407, col_offset=36), Attribute(Name('self', Load(), lineno=407, col_offset=54), 'maxstring', Load(), lineno=407, col_offset=54)], [], None, None, lineno=407, col_offset=31)], [], None, None, lineno=407, col_offset=19), lineno=407, col_offset=12)], [ExceptHandler(None, None, [Return(Call(Attribute(Name('self', Load(), lineno=409, col_offset=19), 'escape', Load(), lineno=409, col_offset=19), [BinOp(Str('<%s instance>', lineno=409, col_offset=31), Mod(), Attribute(Attribute(Name('x', Load(), lineno=409, col_offset=49), '__class__', Load(), lineno=409, col_offset=49), '__name__', Load(), lineno=409, col_offset=49), lineno=409, col_offset=31)], [], None, None, lineno=409, col_offset=19), lineno=409, col_offset=12)], lineno=408, col_offset=8)], [], lineno=406, col_offset=8)], [], lineno=405, col_offset=4), Assign([Name('repr_unicode', Store(), lineno=411, col_offset=4)], Name('repr_string', Load(), lineno=411, col_offset=19), lineno=411, col_offset=4)], [], lineno=371, col_offset=0), ClassDef('HTMLDoc', [Name('Doc', Load(), lineno=413, col_offset=14)], [Expr(Str('Formatter class for HTML documentation.', lineno=414, col_offset=4), lineno=414, col_offset=4), Assign([Name('_repr_instance', Store(), lineno=418, col_offset=4)], Call(Name('HTMLRepr', Load(), lineno=418, col_offset=21), [], [], None, None, lineno=418, col_offset=21), lineno=418, col_offset=4), Assign([Name('repr', Store(), lineno=419, col_offset=4)], Attribute(Name('_repr_instance', Load(), lineno=419, col_offset=11), 'repr', Load(), lineno=419, col_offset=11), lineno=419, col_offset=4), Assign([Name('escape', Store(), lineno=420, col_offset=4)], Attribute(Name('_repr_instance', Load(), lineno=420, col_offset=13), 'escape', Load(), lineno=420, col_offset=13), lineno=420, col_offset=4), FunctionDef('page', arguments([Name('self', Param(), lineno=422, col_offset=13), Name('title', Param(), lineno=422, col_offset=19), Name('contents', Param(), lineno=422, col_offset=26)], None, None, []), [Expr(Str('Format an HTML page.', lineno=423, col_offset=8), lineno=423, col_offset=8), Return(BinOp(Str('\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">\n<html><head><title>Python: %s</title>\n</head><body bgcolor="#f0f0f8">\n%s\n</body></html>', lineno=429, col_offset=-1), Mod(), Tuple([Name('title', Load(), lineno=429, col_offset=21), Name('contents', Load(), lineno=429, col_offset=28)], Load(), lineno=429, col_offset=21), lineno=429, col_offset=-1), lineno=424, col_offset=8)], [], lineno=422, col_offset=4), FunctionDef('heading', arguments([Name('self', Param(), lineno=431, col_offset=16), Name('title', Param(), lineno=431, col_offset=22), Name('fgcol', Param(), lineno=431, col_offset=29), Name('bgcol', Param(), lineno=431, col_offset=36), Name('extras', Param(), lineno=431, col_offset=43)], None, None, [Str('', lineno=431, col_offset=50)]), [Expr(Str('Format a page heading.', lineno=432, col_offset=8), lineno=432, col_offset=8), Return(BinOp(Str('\n<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="heading">\n<tr bgcolor="%s">\n<td valign=bottom>&nbsp;<br>\n<font color="%s" face="helvetica, arial">&nbsp;<br>%s</font></td\n><td align=right valign=bottom\n><font color="%s" face="helvetica, arial">%s</font></td></tr></table>\n    ', lineno=440, col_offset=-1), Mod(), Tuple([Name('bgcol', Load(), lineno=440, col_offset=11), Name('fgcol', Load(), lineno=440, col_offset=18), Name('title', Load(), lineno=440, col_offset=25), Name('fgcol', Load(), lineno=440, col_offset=32), BoolOp(Or(), [Name('extras', Load(), lineno=440, col_offset=39), Str('&nbsp;', lineno=440, col_offset=49)], lineno=440, col_offset=39)], Load(), lineno=440, col_offset=11), lineno=440, col_offset=-1), lineno=433, col_offset=8)], [], lineno=431, col_offset=4), FunctionDef('section', arguments([Name('self', Param(), lineno=442, col_offset=16), Name('title', Param(), lineno=442, col_offset=22), Name('fgcol', Param(), lineno=442, col_offset=29), Name('bgcol', Param(), lineno=442, col_offset=36), Name('contents', Param(), lineno=442, col_offset=43), Name('width', Param(), lineno=442, col_offset=53), Name('prelude', Param(), lineno=443, col_offset=16), Name('marginalia', Param(), lineno=443, col_offset=28), Name('gap', Param(), lineno=443, col_offset=45)], None, None, [Num(6, lineno=442, col_offset=59), Str('', lineno=443, col_offset=24), Name('None', Load(), lineno=443, col_offset=39), Str('&nbsp;', lineno=443, col_offset=49)]), [Expr(Str('Format a section with a heading.', lineno=444, col_offset=8), lineno=444, col_offset=8), If(Compare(Name('marginalia', Load(), lineno=445, col_offset=11), [Is()], [Name('None', Load(), lineno=445, col_offset=25)], lineno=445, col_offset=11), [Assign([Name('marginalia', Store(), lineno=446, col_offset=12)], BinOp(BinOp(Str('<tt>', lineno=446, col_offset=25), Add(), BinOp(Str('&nbsp;', lineno=446, col_offset=34), Mult(), Name('width', Load(), lineno=446, col_offset=45), lineno=446, col_offset=34), lineno=446, col_offset=25), Add(), Str('</tt>', lineno=446, col_offset=53), lineno=446, col_offset=51), lineno=446, col_offset=12)], [], lineno=445, col_offset=8), Assign([Name('result', Store(), lineno=447, col_offset=8)], BinOp(Str('<p>\n<table width="100%%" cellspacing=0 cellpadding=2 border=0 summary="section">\n<tr bgcolor="%s">\n<td colspan=3 valign=bottom>&nbsp;<br>\n<font color="%s" face="helvetica, arial">%s</font></td></tr>\n    ', lineno=452, col_offset=-1), Mod(), Tuple([Name('bgcol', Load(), lineno=452, col_offset=11), Name('fgcol', Load(), lineno=452, col_offset=18), Name('title', Load(), lineno=452, col_offset=25)], Load(), lineno=452, col_offset=11), lineno=452, col_offset=-1), lineno=447, col_offset=8), If(Name('prelude', Load(), lineno=453, col_offset=11), [Assign([Name('result', Store(), lineno=454, col_offset=12)], BinOp(Name('result', Load(), lineno=454, col_offset=21), Add(), BinOp(Str('\n<tr bgcolor="%s"><td rowspan=2>%s</td>\n<td colspan=2>%s</td></tr>\n<tr><td>%s</td>', lineno=457, col_offset=-1), Mod(), Tuple([Name('bgcol', Load(), lineno=457, col_offset=22), Name('marginalia', Load(), lineno=457, col_offset=29), Name('prelude', Load(), lineno=457, col_offset=41), Name('gap', Load(), lineno=457, col_offset=50)], Load(), lineno=457, col_offset=22), lineno=457, col_offset=-1), lineno=454, col_offset=21), lineno=454, col_offset=12)], [Assign([Name('result', Store(), lineno=459, col_offset=12)], BinOp(Name('result', Load(), lineno=459, col_offset=21), Add(), BinOp(Str('\n<tr><td bgcolor="%s">%s</td><td>%s</td>', lineno=460, col_offset=-1), Mod(), Tuple([Name('bgcol', Load(), lineno=460, col_offset=46), Name('marginalia', Load(), lineno=460, col_offset=53), Name('gap', Load(), lineno=460, col_offset=65)], Load(), lineno=460, col_offset=46), lineno=460, col_offset=-1), lineno=459, col_offset=21), lineno=459, col_offset=12)], lineno=453, col_offset=8), Return(BinOp(Name('result', Load(), lineno=462, col_offset=15), Add(), BinOp(Str('\n<td width="100%%">%s</td></tr></table>', lineno=462, col_offset=24), Mod(), Name('contents', Load(), lineno=462, col_offset=69), lineno=462, col_offset=24), lineno=462, col_offset=15), lineno=462, col_offset=8)], [], lineno=442, col_offset=4), FunctionDef('bigsection', arguments([Name('self', Param(), lineno=464, col_offset=19), Name('title', Param(), lineno=464, col_offset=25)], 'args', None, []), [Expr(Str('Format a section with a big heading.', lineno=465, col_offset=8), lineno=465, col_offset=8), Assign([Name('title', Store(), lineno=466, col_offset=8)], BinOp(Str('<big><strong>%s</strong></big>', lineno=466, col_offset=16), Mod(), Name('title', Load(), lineno=466, col_offset=51), lineno=466, col_offset=16), lineno=466, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=467, col_offset=15), 'section', Load(), lineno=467, col_offset=15), [Name('title', Load(), lineno=467, col_offset=28)], [], Name('args', Load(), lineno=467, col_offset=36), None, lineno=467, col_offset=15), lineno=467, col_offset=8)], [], lineno=464, col_offset=4), FunctionDef('preformat', arguments([Name('self', Param(), lineno=469, col_offset=18), Name('text', Param(), lineno=469, col_offset=24)], None, None, []), [Expr(Str('Format literal preformatted text.', lineno=470, col_offset=8), lineno=470, col_offset=8), Assign([Name('text', Store(), lineno=471, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=471, col_offset=15), 'escape', Load(), lineno=471, col_offset=15), [Call(Name('expandtabs', Load(), lineno=471, col_offset=27), [Name('text', Load(), lineno=471, col_offset=38)], [], None, None, lineno=471, col_offset=27)], [], None, None, lineno=471, col_offset=15), lineno=471, col_offset=8), Return(Call(Name('replace', Load(), lineno=472, col_offset=15), [Name('text', Load(), lineno=472, col_offset=23), Str('\n\n', lineno=472, col_offset=29), Str('\n \n', lineno=472, col_offset=37), Str('\n\n', lineno=472, col_offset=46), Str('\n \n', lineno=472, col_offset=54), Str(' ', lineno=473, col_offset=29), Str('&nbsp;', lineno=473, col_offset=34), Str('\n', lineno=473, col_offset=44), Str('<br>\n', lineno=473, col_offset=50)], [], None, None, lineno=472, col_offset=15), lineno=472, col_offset=8)], [], lineno=469, col_offset=4), FunctionDef('multicolumn', arguments([Name('self', Param(), lineno=475, col_offset=20), Name('list', Param(), lineno=475, col_offset=26), Name('format', Param(), lineno=475, col_offset=32), Name('cols', Param(), lineno=475, col_offset=40)], None, None, [Num(4, lineno=475, col_offset=45)]), [Expr(Str('Format a list of items into a multi-column list.', lineno=476, col_offset=8), lineno=476, col_offset=8), Assign([Name('result', Store(), lineno=477, col_offset=8)], Str('', lineno=477, col_offset=17), lineno=477, col_offset=8), Assign([Name('rows', Store(), lineno=478, col_offset=8)], BinOp(BinOp(BinOp(Call(Name('len', Load(), lineno=478, col_offset=16), [Name('list', Load(), lineno=478, col_offset=20)], [], None, None, lineno=478, col_offset=16), Add(), Name('cols', Load(), lineno=478, col_offset=26), lineno=478, col_offset=16), Sub(), Num(1, lineno=478, col_offset=31), lineno=478, col_offset=30), Div(), Name('cols', Load(), lineno=478, col_offset=34), lineno=478, col_offset=15), lineno=478, col_offset=8), For(Name('col', Store(), lineno=479, col_offset=12), Call(Name('range', Load(), lineno=479, col_offset=19), [Name('cols', Load(), lineno=479, col_offset=25)], [], None, None, lineno=479, col_offset=19), [Assign([Name('result', Store(), lineno=480, col_offset=12)], BinOp(Name('result', Load(), lineno=480, col_offset=21), Add(), BinOp(Str('<td width="%d%%" valign=top>', lineno=480, col_offset=30), Mod(), BinOp(Num(100, lineno=480, col_offset=64), Div(), Name('cols', Load(), lineno=480, col_offset=68), lineno=480, col_offset=64), lineno=480, col_offset=30), lineno=480, col_offset=21), lineno=480, col_offset=12), For(Name('i', Store(), lineno=481, col_offset=16), Call(Name('range', Load(), lineno=481, col_offset=21), [BinOp(Name('rows', Load(), lineno=481, col_offset=27), Mult(), Name('col', Load(), lineno=481, col_offset=32), lineno=481, col_offset=27), BinOp(BinOp(Name('rows', Load(), lineno=481, col_offset=37), Mult(), Name('col', Load(), lineno=481, col_offset=42), lineno=481, col_offset=37), Add(), Name('rows', Load(), lineno=481, col_offset=46), lineno=481, col_offset=37)], [], None, None, lineno=481, col_offset=21), [If(Compare(Name('i', Load(), lineno=482, col_offset=19), [Lt()], [Call(Name('len', Load(), lineno=482, col_offset=23), [Name('list', Load(), lineno=482, col_offset=27)], [], None, None, lineno=482, col_offset=23)], lineno=482, col_offset=19), [Assign([Name('result', Store(), lineno=483, col_offset=20)], BinOp(BinOp(Name('result', Load(), lineno=483, col_offset=29), Add(), Call(Name('format', Load(), lineno=483, col_offset=38), [Subscript(Name('list', Load(), lineno=483, col_offset=45), Index(Name('i', Load(), lineno=483, col_offset=50)), Load(), lineno=483, col_offset=45)], [], None, None, lineno=483, col_offset=38), lineno=483, col_offset=29), Add(), Str('<br>\n', lineno=483, col_offset=56), lineno=483, col_offset=54), lineno=483, col_offset=20)], [], lineno=482, col_offset=16)], [], lineno=481, col_offset=12), Assign([Name('result', Store(), lineno=484, col_offset=12)], BinOp(Name('result', Load(), lineno=484, col_offset=21), Add(), Str('</td>', lineno=484, col_offset=30), lineno=484, col_offset=21), lineno=484, col_offset=12)], [], lineno=479, col_offset=8), Return(BinOp(Str('<table width="100%%" summary="list"><tr>%s</tr></table>', lineno=485, col_offset=15), Mod(), Name('result', Load(), lineno=485, col_offset=75), lineno=485, col_offset=15), lineno=485, col_offset=8)], [], lineno=475, col_offset=4), FunctionDef('grey', arguments([Name('self', Param(), lineno=487, col_offset=13), Name('text', Param(), lineno=487, col_offset=19)], None, None, []), [Return(BinOp(Str('<font color="#909090">%s</font>', lineno=487, col_offset=33), Mod(), Name('text', Load(), lineno=487, col_offset=69), lineno=487, col_offset=33), lineno=487, col_offset=26)], [], lineno=487, col_offset=4), FunctionDef('namelink', arguments([Name('self', Param(), lineno=489, col_offset=17), Name('name', Param(), lineno=489, col_offset=23)], 'dicts', None, []), [Expr(Str('Make a link for an identifier, given name-to-URL mappings.', lineno=490, col_offset=8), lineno=490, col_offset=8), For(Name('dict', Store(), lineno=491, col_offset=12), Name('dicts', Load(), lineno=491, col_offset=20), [If(Compare(Name('name', Load(), lineno=492, col_offset=15), [In()], [Name('dict', Load(), lineno=492, col_offset=23)], lineno=492, col_offset=15), [Return(BinOp(Str('<a href="%s">%s</a>', lineno=493, col_offset=23), Mod(), Tuple([Subscript(Name('dict', Load(), lineno=493, col_offset=48), Index(Name('name', Load(), lineno=493, col_offset=53)), Load(), lineno=493, col_offset=48), Name('name', Load(), lineno=493, col_offset=60)], Load(), lineno=493, col_offset=48), lineno=493, col_offset=23), lineno=493, col_offset=16)], [], lineno=492, col_offset=12)], [], lineno=491, col_offset=8), Return(Name('name', Load(), lineno=494, col_offset=15), lineno=494, col_offset=8)], [], lineno=489, col_offset=4), FunctionDef('classlink', arguments([Name('self', Param(), lineno=496, col_offset=18), Name('object', Param(), lineno=496, col_offset=24), Name('modname', Param(), lineno=496, col_offset=32)], None, None, []), [Expr(Str('Make a link for a class.', lineno=497, col_offset=8), lineno=497, col_offset=8), Assign([Tuple([Name('name', Store(), lineno=498, col_offset=8), Name('module', Store(), lineno=498, col_offset=14)], Store(), lineno=498, col_offset=8)], Tuple([Attribute(Name('object', Load(), lineno=498, col_offset=23), '__name__', Load(), lineno=498, col_offset=23), Call(Attribute(Attribute(Name('sys', Load(), lineno=498, col_offset=40), 'modules', Load(), lineno=498, col_offset=40), 'get', Load(), lineno=498, col_offset=40), [Attribute(Name('object', Load(), lineno=498, col_offset=56), '__module__', Load(), lineno=498, col_offset=56)], [], None, None, lineno=498, col_offset=40)], Load(), lineno=498, col_offset=23), lineno=498, col_offset=8), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=499, col_offset=11), [Name('module', Load(), lineno=499, col_offset=19), Name('name', Load(), lineno=499, col_offset=27)], [], None, None, lineno=499, col_offset=11), Compare(Call(Name('getattr', Load(), lineno=499, col_offset=37), [Name('module', Load(), lineno=499, col_offset=45), Name('name', Load(), lineno=499, col_offset=53)], [], None, None, lineno=499, col_offset=37), [Is()], [Name('object', Load(), lineno=499, col_offset=62)], lineno=499, col_offset=37)], lineno=499, col_offset=11), [Return(BinOp(Str('<a href="%s.html#%s">%s</a>', lineno=500, col_offset=19), Mod(), Tuple([Attribute(Name('module', Load(), lineno=501, col_offset=16), '__name__', Load(), lineno=501, col_offset=16), Name('name', Load(), lineno=501, col_offset=33), Call(Name('classname', Load(), lineno=501, col_offset=39), [Name('object', Load(), lineno=501, col_offset=49), Name('modname', Load(), lineno=501, col_offset=57)], [], None, None, lineno=501, col_offset=39)], Load(), lineno=501, col_offset=16), lineno=500, col_offset=19), lineno=500, col_offset=12)], [], lineno=499, col_offset=8), Return(Call(Name('classname', Load(), lineno=502, col_offset=15), [Name('object', Load(), lineno=502, col_offset=25), Name('modname', Load(), lineno=502, col_offset=33)], [], None, None, lineno=502, col_offset=15), lineno=502, col_offset=8)], [], lineno=496, col_offset=4), FunctionDef('modulelink', arguments([Name('self', Param(), lineno=504, col_offset=19), Name('object', Param(), lineno=504, col_offset=25)], None, None, []), [Expr(Str('Make a link for a module.', lineno=505, col_offset=8), lineno=505, col_offset=8), Return(BinOp(Str('<a href="%s.html">%s</a>', lineno=506, col_offset=15), Mod(), Tuple([Attribute(Name('object', Load(), lineno=506, col_offset=45), '__name__', Load(), lineno=506, col_offset=45), Attribute(Name('object', Load(), lineno=506, col_offset=62), '__name__', Load(), lineno=506, col_offset=62)], Load(), lineno=506, col_offset=45), lineno=506, col_offset=15), lineno=506, col_offset=8)], [], lineno=504, col_offset=4), FunctionDef('modpkglink', arguments([Name('self', Param(), lineno=508, col_offset=19), Name('data', Param(), lineno=508, col_offset=25)], None, None, []), [Expr(Str('Make a link for a module or package to display in an index.', lineno=509, col_offset=8), lineno=509, col_offset=8), Assign([Tuple([Name('name', Store(), lineno=510, col_offset=8), Name('path', Store(), lineno=510, col_offset=14), Name('ispackage', Store(), lineno=510, col_offset=20), Name('shadowed', Store(), lineno=510, col_offset=31)], Store(), lineno=510, col_offset=8)], Name('data', Load(), lineno=510, col_offset=42), lineno=510, col_offset=8), If(Name('shadowed', Load(), lineno=511, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=512, col_offset=19), 'grey', Load(), lineno=512, col_offset=19), [Name('name', Load(), lineno=512, col_offset=29)], [], None, None, lineno=512, col_offset=19), lineno=512, col_offset=12)], [], lineno=511, col_offset=8), If(Name('path', Load(), lineno=513, col_offset=11), [Assign([Name('url', Store(), lineno=514, col_offset=12)], BinOp(Str('%s.%s.html', lineno=514, col_offset=18), Mod(), Tuple([Name('path', Load(), lineno=514, col_offset=34), Name('name', Load(), lineno=514, col_offset=40)], Load(), lineno=514, col_offset=34), lineno=514, col_offset=18), lineno=514, col_offset=12)], [Assign([Name('url', Store(), lineno=516, col_offset=12)], BinOp(Str('%s.html', lineno=516, col_offset=18), Mod(), Name('name', Load(), lineno=516, col_offset=30), lineno=516, col_offset=18), lineno=516, col_offset=12)], lineno=513, col_offset=8), If(Name('ispackage', Load(), lineno=517, col_offset=11), [Assign([Name('text', Store(), lineno=518, col_offset=12)], BinOp(Str('<strong>%s</strong>&nbsp;(package)', lineno=518, col_offset=19), Mod(), Name('name', Load(), lineno=518, col_offset=58), lineno=518, col_offset=19), lineno=518, col_offset=12)], [Assign([Name('text', Store(), lineno=520, col_offset=12)], Name('name', Load(), lineno=520, col_offset=19), lineno=520, col_offset=12)], lineno=517, col_offset=8), Return(BinOp(Str('<a href="%s">%s</a>', lineno=521, col_offset=15), Mod(), Tuple([Name('url', Load(), lineno=521, col_offset=40), Name('text', Load(), lineno=521, col_offset=45)], Load(), lineno=521, col_offset=40), lineno=521, col_offset=15), lineno=521, col_offset=8)], [], lineno=508, col_offset=4), FunctionDef('markup', arguments([Name('self', Param(), lineno=523, col_offset=15), Name('text', Param(), lineno=523, col_offset=21), Name('escape', Param(), lineno=523, col_offset=27), Name('funcs', Param(), lineno=523, col_offset=40), Name('classes', Param(), lineno=523, col_offset=50), Name('methods', Param(), lineno=523, col_offset=62)], None, None, [Name('None', Load(), lineno=523, col_offset=34), Dict([], [], lineno=523, col_offset=46), Dict([], [], lineno=523, col_offset=58), Dict([], [], lineno=523, col_offset=70)]), [Expr(Str('Mark up some plain text, given a context of symbols to look for.\n        Each context dictionary maps object names to anchor names.', lineno=525, col_offset=-1), lineno=525, col_offset=-1), Assign([Name('escape', Store(), lineno=526, col_offset=8)], BoolOp(Or(), [Name('escape', Load(), lineno=526, col_offset=17), Attribute(Name('self', Load(), lineno=526, col_offset=27), 'escape', Load(), lineno=526, col_offset=27)], lineno=526, col_offset=17), lineno=526, col_offset=8), Assign([Name('results', Store(), lineno=527, col_offset=8)], List([], Load(), lineno=527, col_offset=18), lineno=527, col_offset=8), Assign([Name('here', Store(), lineno=528, col_offset=8)], Num(0, lineno=528, col_offset=15), lineno=528, col_offset=8), Assign([Name('pattern', Store(), lineno=529, col_offset=8)], Call(Attribute(Name('re', Load(), lineno=529, col_offset=18), 'compile', Load(), lineno=529, col_offset=18), [Str('\\b((http|ftp)://\\S+[\\w/]|RFC[- ]?(\\d+)|PEP[- ]?(\\d+)|(self\\.)?(\\w+))', lineno=529, col_offset=29)], [], None, None, lineno=529, col_offset=18), lineno=529, col_offset=8), While(Name('True', Load(), lineno=533, col_offset=14), [Assign([Name('match', Store(), lineno=534, col_offset=12)], Call(Attribute(Name('pattern', Load(), lineno=534, col_offset=20), 'search', Load(), lineno=534, col_offset=20), [Name('text', Load(), lineno=534, col_offset=35), Name('here', Load(), lineno=534, col_offset=41)], [], None, None, lineno=534, col_offset=20), lineno=534, col_offset=12), If(UnaryOp(Not(), Name('match', Load(), lineno=535, col_offset=19), lineno=535, col_offset=15), [Break( lineno=535, col_offset=26)], [], lineno=535, col_offset=12), Assign([Tuple([Name('start', Store(), lineno=536, col_offset=12), Name('end', Store(), lineno=536, col_offset=19)], Store(), lineno=536, col_offset=12)], Call(Attribute(Name('match', Load(), lineno=536, col_offset=25), 'span', Load(), lineno=536, col_offset=25), [], [], None, None, lineno=536, col_offset=25), lineno=536, col_offset=12), Expr(Call(Attribute(Name('results', Load(), lineno=537, col_offset=12), 'append', Load(), lineno=537, col_offset=12), [Call(Name('escape', Load(), lineno=537, col_offset=27), [Subscript(Name('text', Load(), lineno=537, col_offset=34), Slice(Name('here', Load(), lineno=537, col_offset=39), Name('start', Load(), lineno=537, col_offset=44), None), Load(), lineno=537, col_offset=34)], [], None, None, lineno=537, col_offset=27)], [], None, None, lineno=537, col_offset=12), lineno=537, col_offset=12), Assign([Tuple([Name('all', Store(), lineno=539, col_offset=12), Name('scheme', Store(), lineno=539, col_offset=17), Name('rfc', Store(), lineno=539, col_offset=25), Name('pep', Store(), lineno=539, col_offset=30), Name('selfdot', Store(), lineno=539, col_offset=35), Name('name', Store(), lineno=539, col_offset=44)], Store(), lineno=539, col_offset=12)], Call(Attribute(Name('match', Load(), lineno=539, col_offset=51), 'groups', Load(), lineno=539, col_offset=51), [], [], None, None, lineno=539, col_offset=51), lineno=539, col_offset=12), If(Name('scheme', Load(), lineno=540, col_offset=15), [Assign([Name('url', Store(), lineno=541, col_offset=16)], Call(Attribute(Call(Name('escape', Load(), lineno=541, col_offset=22), [Name('all', Load(), lineno=541, col_offset=29)], [], None, None, lineno=541, col_offset=22), 'replace', Load(), lineno=541, col_offset=22), [Str('"', lineno=541, col_offset=42), Str('&quot;', lineno=541, col_offset=47)], [], None, None, lineno=541, col_offset=22), lineno=541, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=542, col_offset=16), 'append', Load(), lineno=542, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=542, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=542, col_offset=56), Name('url', Load(), lineno=542, col_offset=61)], Load(), lineno=542, col_offset=56), lineno=542, col_offset=31)], [], None, None, lineno=542, col_offset=16), lineno=542, col_offset=16)], [If(Name('rfc', Load(), lineno=543, col_offset=17), [Assign([Name('url', Store(), lineno=544, col_offset=16)], BinOp(Str('http://www.rfc-editor.org/rfc/rfc%d.txt', lineno=544, col_offset=22), Mod(), Call(Name('int', Load(), lineno=544, col_offset=66), [Name('rfc', Load(), lineno=544, col_offset=70)], [], None, None, lineno=544, col_offset=66), lineno=544, col_offset=22), lineno=544, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=545, col_offset=16), 'append', Load(), lineno=545, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=545, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=545, col_offset=56), Call(Name('escape', Load(), lineno=545, col_offset=61), [Name('all', Load(), lineno=545, col_offset=68)], [], None, None, lineno=545, col_offset=61)], Load(), lineno=545, col_offset=56), lineno=545, col_offset=31)], [], None, None, lineno=545, col_offset=16), lineno=545, col_offset=16)], [If(Name('pep', Load(), lineno=546, col_offset=17), [Assign([Name('url', Store(), lineno=547, col_offset=16)], BinOp(Str('http://www.python.org/dev/peps/pep-%04d/', lineno=547, col_offset=22), Mod(), Call(Name('int', Load(), lineno=547, col_offset=67), [Name('pep', Load(), lineno=547, col_offset=71)], [], None, None, lineno=547, col_offset=67), lineno=547, col_offset=22), lineno=547, col_offset=16), Expr(Call(Attribute(Name('results', Load(), lineno=548, col_offset=16), 'append', Load(), lineno=548, col_offset=16), [BinOp(Str('<a href="%s">%s</a>', lineno=548, col_offset=31), Mod(), Tuple([Name('url', Load(), lineno=548, col_offset=56), Call(Name('escape', Load(), lineno=548, col_offset=61), [Name('all', Load(), lineno=548, col_offset=68)], [], None, None, lineno=548, col_offset=61)], Load(), lineno=548, col_offset=56), lineno=548, col_offset=31)], [], None, None, lineno=548, col_offset=16), lineno=548, col_offset=16)], [If(Compare(Subscript(Name('text', Load(), lineno=549, col_offset=17), Slice(Name('end', Load(), lineno=549, col_offset=22), BinOp(Name('end', Load(), lineno=549, col_offset=26), Add(), Num(1, lineno=549, col_offset=30), lineno=549, col_offset=26), None), Load(), lineno=549, col_offset=17), [Eq()], [Str('(', lineno=549, col_offset=36)], lineno=549, col_offset=17), [Expr(Call(Attribute(Name('results', Load(), lineno=550, col_offset=16), 'append', Load(), lineno=550, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=550, col_offset=31), 'namelink', Load(), lineno=550, col_offset=31), [Name('name', Load(), lineno=550, col_offset=45), Name('methods', Load(), lineno=550, col_offset=51), Name('funcs', Load(), lineno=550, col_offset=60), Name('classes', Load(), lineno=550, col_offset=67)], [], None, None, lineno=550, col_offset=31)], [], None, None, lineno=550, col_offset=16), lineno=550, col_offset=16)], [If(Name('selfdot', Load(), lineno=551, col_offset=17), [Expr(Call(Attribute(Name('results', Load(), lineno=552, col_offset=16), 'append', Load(), lineno=552, col_offset=16), [BinOp(Str('self.<strong>%s</strong>', lineno=552, col_offset=31), Mod(), Name('name', Load(), lineno=552, col_offset=60), lineno=552, col_offset=31)], [], None, None, lineno=552, col_offset=16), lineno=552, col_offset=16)], [Expr(Call(Attribute(Name('results', Load(), lineno=554, col_offset=16), 'append', Load(), lineno=554, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=554, col_offset=31), 'namelink', Load(), lineno=554, col_offset=31), [Name('name', Load(), lineno=554, col_offset=45), Name('classes', Load(), lineno=554, col_offset=51)], [], None, None, lineno=554, col_offset=31)], [], None, None, lineno=554, col_offset=16), lineno=554, col_offset=16)], lineno=551, col_offset=17)], lineno=549, col_offset=17)], lineno=546, col_offset=17)], lineno=543, col_offset=17)], lineno=540, col_offset=12), Assign([Name('here', Store(), lineno=555, col_offset=12)], Name('end', Load(), lineno=555, col_offset=19), lineno=555, col_offset=12)], [], lineno=533, col_offset=8), Expr(Call(Attribute(Name('results', Load(), lineno=556, col_offset=8), 'append', Load(), lineno=556, col_offset=8), [Call(Name('escape', Load(), lineno=556, col_offset=23), [Subscript(Name('text', Load(), lineno=556, col_offset=30), Slice(Name('here', Load(), lineno=556, col_offset=35), None, None), Load(), lineno=556, col_offset=30)], [], None, None, lineno=556, col_offset=23)], [], None, None, lineno=556, col_offset=8), lineno=556, col_offset=8), Return(Call(Name('join', Load(), lineno=557, col_offset=15), [Name('results', Load(), lineno=557, col_offset=20), Str('', lineno=557, col_offset=29)], [], None, None, lineno=557, col_offset=15), lineno=557, col_offset=8)], [], lineno=523, col_offset=4), FunctionDef('formattree', arguments([Name('self', Param(), lineno=561, col_offset=19), Name('tree', Param(), lineno=561, col_offset=25), Name('modname', Param(), lineno=561, col_offset=31), Name('parent', Param(), lineno=561, col_offset=40)], None, None, [Name('None', Load(), lineno=561, col_offset=47)]), [Expr(Str('Produce HTML for a class tree as given by inspect.getclasstree().', lineno=562, col_offset=8), lineno=562, col_offset=8), Assign([Name('result', Store(), lineno=563, col_offset=8)], Str('', lineno=563, col_offset=17), lineno=563, col_offset=8), For(Name('entry', Store(), lineno=564, col_offset=12), Name('tree', Load(), lineno=564, col_offset=21), [If(Compare(Call(Name('type', Load(), lineno=565, col_offset=15), [Name('entry', Load(), lineno=565, col_offset=20)], [], None, None, lineno=565, col_offset=15), [Is()], [Call(Name('type', Load(), lineno=565, col_offset=30), [Tuple([], Load(), lineno=565, col_offset=35)], [], None, None, lineno=565, col_offset=30)], lineno=565, col_offset=15), [Assign([Tuple([Name('c', Store(), lineno=566, col_offset=16), Name('bases', Store(), lineno=566, col_offset=19)], Store(), lineno=566, col_offset=16)], Name('entry', Load(), lineno=566, col_offset=27), lineno=566, col_offset=16), Assign([Name('result', Store(), lineno=567, col_offset=16)], BinOp(Name('result', Load(), lineno=567, col_offset=25), Add(), Str('<dt><font face="helvetica, arial">', lineno=567, col_offset=34), lineno=567, col_offset=25), lineno=567, col_offset=16), Assign([Name('result', Store(), lineno=568, col_offset=16)], BinOp(Name('result', Load(), lineno=568, col_offset=25), Add(), Call(Attribute(Name('self', Load(), lineno=568, col_offset=34), 'classlink', Load(), lineno=568, col_offset=34), [Name('c', Load(), lineno=568, col_offset=49), Name('modname', Load(), lineno=568, col_offset=52)], [], None, None, lineno=568, col_offset=34), lineno=568, col_offset=25), lineno=568, col_offset=16), If(BoolOp(And(), [Name('bases', Load(), lineno=569, col_offset=19), Compare(Name('bases', Load(), lineno=569, col_offset=29), [NotEq()], [Tuple([Name('parent', Load(), lineno=569, col_offset=39)], Load(), lineno=569, col_offset=39)], lineno=569, col_offset=29)], lineno=569, col_offset=19), [Assign([Name('parents', Store(), lineno=570, col_offset=20)], List([], Load(), lineno=570, col_offset=30), lineno=570, col_offset=20), For(Name('base', Store(), lineno=571, col_offset=24), Name('bases', Load(), lineno=571, col_offset=32), [Expr(Call(Attribute(Name('parents', Load(), lineno=572, col_offset=24), 'append', Load(), lineno=572, col_offset=24), [Call(Attribute(Name('self', Load(), lineno=572, col_offset=39), 'classlink', Load(), lineno=572, col_offset=39), [Name('base', Load(), lineno=572, col_offset=54), Name('modname', Load(), lineno=572, col_offset=60)], [], None, None, lineno=572, col_offset=39)], [], None, None, lineno=572, col_offset=24), lineno=572, col_offset=24)], [], lineno=571, col_offset=20), Assign([Name('result', Store(), lineno=573, col_offset=20)], BinOp(BinOp(BinOp(Name('result', Load(), lineno=573, col_offset=29), Add(), Str('(', lineno=573, col_offset=38), lineno=573, col_offset=29), Add(), Call(Name('join', Load(), lineno=573, col_offset=44), [Name('parents', Load(), lineno=573, col_offset=49), Str(', ', lineno=573, col_offset=58)], [], None, None, lineno=573, col_offset=44), lineno=573, col_offset=42), Add(), Str(')', lineno=573, col_offset=66), lineno=573, col_offset=64), lineno=573, col_offset=20)], [], lineno=569, col_offset=16), Assign([Name('result', Store(), lineno=574, col_offset=16)], BinOp(Name('result', Load(), lineno=574, col_offset=25), Add(), Str('\n</font></dt>', lineno=574, col_offset=34), lineno=574, col_offset=25), lineno=574, col_offset=16)], [If(Compare(Call(Name('type', Load(), lineno=575, col_offset=17), [Name('entry', Load(), lineno=575, col_offset=22)], [], None, None, lineno=575, col_offset=17), [Is()], [Call(Name('type', Load(), lineno=575, col_offset=32), [List([], Load(), lineno=575, col_offset=37)], [], None, None, lineno=575, col_offset=32)], lineno=575, col_offset=17), [Assign([Name('result', Store(), lineno=576, col_offset=16)], BinOp(Name('result', Load(), lineno=576, col_offset=25), Add(), BinOp(Str('<dd>\n%s</dd>\n', lineno=576, col_offset=34), Mod(), Call(Attribute(Name('self', Load(), lineno=576, col_offset=54), 'formattree', Load(), lineno=576, col_offset=54), [Name('entry', Load(), lineno=577, col_offset=20), Name('modname', Load(), lineno=577, col_offset=27), Name('c', Load(), lineno=577, col_offset=36)], [], None, None, lineno=576, col_offset=54), lineno=576, col_offset=34), lineno=576, col_offset=25), lineno=576, col_offset=16)], [], lineno=575, col_offset=17)], lineno=565, col_offset=12)], [], lineno=564, col_offset=8), Return(BinOp(Str('<dl>\n%s</dl>\n', lineno=578, col_offset=15), Mod(), Name('result', Load(), lineno=578, col_offset=35), lineno=578, col_offset=15), lineno=578, col_offset=8)], [], lineno=561, col_offset=4), FunctionDef('docmodule', arguments([Name('self', Param(), lineno=580, col_offset=18), Name('object', Param(), lineno=580, col_offset=24), Name('name', Param(), lineno=580, col_offset=32), Name('mod', Param(), lineno=580, col_offset=43)], 'ignored', None, [Name('None', Load(), lineno=580, col_offset=37), Name('None', Load(), lineno=580, col_offset=47)]), [Expr(Str('Produce HTML documentation for a module object.', lineno=581, col_offset=8), lineno=581, col_offset=8), Assign([Name('name', Store(), lineno=582, col_offset=8)], Attribute(Name('object', Load(), lineno=582, col_offset=15), '__name__', Load(), lineno=582, col_offset=15), lineno=582, col_offset=8), TryExcept([Assign([Name('all', Store(), lineno=584, col_offset=12)], Attribute(Name('object', Load(), lineno=584, col_offset=18), '__all__', Load(), lineno=584, col_offset=18), lineno=584, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=585, col_offset=15), None, [Assign([Name('all', Store(), lineno=586, col_offset=12)], Name('None', Load(), lineno=586, col_offset=18), lineno=586, col_offset=12)], lineno=585, col_offset=8)], [], lineno=583, col_offset=8), Assign([Name('parts', Store(), lineno=587, col_offset=8)], Call(Name('split', Load(), lineno=587, col_offset=16), [Name('name', Load(), lineno=587, col_offset=22), Str('.', lineno=587, col_offset=28)], [], None, None, lineno=587, col_offset=16), lineno=587, col_offset=8), Assign([Name('links', Store(), lineno=588, col_offset=8)], List([], Load(), lineno=588, col_offset=16), lineno=588, col_offset=8), For(Name('i', Store(), lineno=589, col_offset=12), Call(Name('range', Load(), lineno=589, col_offset=17), [BinOp(Call(Name('len', Load(), lineno=589, col_offset=23), [Name('parts', Load(), lineno=589, col_offset=27)], [], None, None, lineno=589, col_offset=23), Sub(), Num(1, lineno=589, col_offset=34), lineno=589, col_offset=23)], [], None, None, lineno=589, col_offset=17), [Expr(Call(Attribute(Name('links', Load(), lineno=590, col_offset=12), 'append', Load(), lineno=590, col_offset=12), [BinOp(Str('<a href="%s.html"><font color="#ffffff">%s</font></a>', lineno=591, col_offset=16), Mod(), Tuple([Call(Name('join', Load(), lineno=592, col_offset=17), [Subscript(Name('parts', Load(), lineno=592, col_offset=22), Slice(None, BinOp(Name('i', Load(), lineno=592, col_offset=29), Add(), Num(1, lineno=592, col_offset=31), lineno=592, col_offset=29), None), Load(), lineno=592, col_offset=22), Str('.', lineno=592, col_offset=35)], [], None, None, lineno=592, col_offset=17), Subscript(Name('parts', Load(), lineno=592, col_offset=41), Index(Name('i', Load(), lineno=592, col_offset=47)), Load(), lineno=592, col_offset=41)], Load(), lineno=592, col_offset=17), lineno=591, col_offset=16)], [], None, None, lineno=590, col_offset=12), lineno=590, col_offset=12)], [], lineno=589, col_offset=8), Assign([Name('linkedname', Store(), lineno=593, col_offset=8)], Call(Name('join', Load(), lineno=593, col_offset=21), [BinOp(Name('links', Load(), lineno=593, col_offset=26), Add(), Subscript(Name('parts', Load(), lineno=593, col_offset=34), Slice(Num(-1, lineno=593, col_offset=41), None, None), Load(), lineno=593, col_offset=34), lineno=593, col_offset=26), Str('.', lineno=593, col_offset=46)], [], None, None, lineno=593, col_offset=21), lineno=593, col_offset=8), Assign([Name('head', Store(), lineno=594, col_offset=8)], BinOp(Str('<big><big><strong>%s</strong></big></big>', lineno=594, col_offset=15), Mod(), Name('linkedname', Load(), lineno=594, col_offset=61), lineno=594, col_offset=15), lineno=594, col_offset=8), TryExcept([Assign([Name('path', Store(), lineno=596, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=596, col_offset=19), 'getabsfile', Load(), lineno=596, col_offset=19), [Name('object', Load(), lineno=596, col_offset=38)], [], None, None, lineno=596, col_offset=19), lineno=596, col_offset=12), Assign([Name('url', Store(), lineno=597, col_offset=12)], Name('path', Load(), lineno=597, col_offset=18), lineno=597, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=598, col_offset=15), 'platform', Load(), lineno=598, col_offset=15), [Eq()], [Str('win32', lineno=598, col_offset=31)], lineno=598, col_offset=15), [Import([alias('nturl2path', None)], lineno=599, col_offset=16), Assign([Name('url', Store(), lineno=600, col_offset=16)], Call(Attribute(Name('nturl2path', Load(), lineno=600, col_offset=22), 'pathname2url', Load(), lineno=600, col_offset=22), [Name('path', Load(), lineno=600, col_offset=46)], [], None, None, lineno=600, col_offset=22), lineno=600, col_offset=16)], [], lineno=598, col_offset=12), Assign([Name('filelink', Store(), lineno=601, col_offset=12)], BinOp(Str('<a href="file:%s">%s</a>', lineno=601, col_offset=23), Mod(), Tuple([Name('url', Load(), lineno=601, col_offset=53), Name('path', Load(), lineno=601, col_offset=58)], Load(), lineno=601, col_offset=53), lineno=601, col_offset=23), lineno=601, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=602, col_offset=15), None, [Assign([Name('filelink', Store(), lineno=603, col_offset=12)], Str('(built-in)', lineno=603, col_offset=23), lineno=603, col_offset=12)], lineno=602, col_offset=8)], [], lineno=595, col_offset=8), Assign([Name('info', Store(), lineno=604, col_offset=8)], List([], Load(), lineno=604, col_offset=15), lineno=604, col_offset=8), If(Call(Name('hasattr', Load(), lineno=605, col_offset=11), [Name('object', Load(), lineno=605, col_offset=19), Str('__version__', lineno=605, col_offset=27)], [], None, None, lineno=605, col_offset=11), [Assign([Name('version', Store(), lineno=606, col_offset=12)], Call(Name('str', Load(), lineno=606, col_offset=22), [Attribute(Name('object', Load(), lineno=606, col_offset=26), '__version__', Load(), lineno=606, col_offset=26)], [], None, None, lineno=606, col_offset=22), lineno=606, col_offset=12), If(BoolOp(And(), [Compare(Subscript(Name('version', Load(), lineno=607, col_offset=15), Slice(None, Num(11, lineno=607, col_offset=24), None), Load(), lineno=607, col_offset=15), [Eq()], [BinOp(Str('$', lineno=607, col_offset=31), Add(), Str('Revision: ', lineno=607, col_offset=37), lineno=607, col_offset=31)], lineno=607, col_offset=15), Compare(Subscript(Name('version', Load(), lineno=607, col_offset=54), Slice(Num(-1, lineno=607, col_offset=63), None, None), Load(), lineno=607, col_offset=54), [Eq()], [Str('$', lineno=607, col_offset=70)], lineno=607, col_offset=54)], lineno=607, col_offset=15), [Assign([Name('version', Store(), lineno=608, col_offset=16)], Call(Name('strip', Load(), lineno=608, col_offset=26), [Subscript(Name('version', Load(), lineno=608, col_offset=32), Slice(Num(11, lineno=608, col_offset=40), Num(-1, lineno=608, col_offset=44), None), Load(), lineno=608, col_offset=32)], [], None, None, lineno=608, col_offset=26), lineno=608, col_offset=16)], [], lineno=607, col_offset=12), Expr(Call(Attribute(Name('info', Load(), lineno=609, col_offset=12), 'append', Load(), lineno=609, col_offset=12), [BinOp(Str('version %s', lineno=609, col_offset=24), Mod(), Call(Attribute(Name('self', Load(), lineno=609, col_offset=39), 'escape', Load(), lineno=609, col_offset=39), [Name('version', Load(), lineno=609, col_offset=51)], [], None, None, lineno=609, col_offset=39), lineno=609, col_offset=24)], [], None, None, lineno=609, col_offset=12), lineno=609, col_offset=12)], [], lineno=605, col_offset=8), If(Call(Name('hasattr', Load(), lineno=610, col_offset=11), [Name('object', Load(), lineno=610, col_offset=19), Str('__date__', lineno=610, col_offset=27)], [], None, None, lineno=610, col_offset=11), [Expr(Call(Attribute(Name('info', Load(), lineno=611, col_offset=12), 'append', Load(), lineno=611, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=611, col_offset=24), 'escape', Load(), lineno=611, col_offset=24), [Call(Name('str', Load(), lineno=611, col_offset=36), [Attribute(Name('object', Load(), lineno=611, col_offset=40), '__date__', Load(), lineno=611, col_offset=40)], [], None, None, lineno=611, col_offset=36)], [], None, None, lineno=611, col_offset=24)], [], None, None, lineno=611, col_offset=12), lineno=611, col_offset=12)], [], lineno=610, col_offset=8), If(Name('info', Load(), lineno=612, col_offset=11), [Assign([Name('head', Store(), lineno=613, col_offset=12)], BinOp(Name('head', Load(), lineno=613, col_offset=19), Add(), BinOp(Str(' (%s)', lineno=613, col_offset=26), Mod(), Call(Name('join', Load(), lineno=613, col_offset=36), [Name('info', Load(), lineno=613, col_offset=41), Str(', ', lineno=613, col_offset=47)], [], None, None, lineno=613, col_offset=36), lineno=613, col_offset=26), lineno=613, col_offset=19), lineno=613, col_offset=12)], [], lineno=612, col_offset=8), Assign([Name('docloc', Store(), lineno=614, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=614, col_offset=17), 'getdocloc', Load(), lineno=614, col_offset=17), [Name('object', Load(), lineno=614, col_offset=32)], [], None, None, lineno=614, col_offset=17), lineno=614, col_offset=8), If(Compare(Name('docloc', Load(), lineno=615, col_offset=11), [IsNot()], [Name('None', Load(), lineno=615, col_offset=25)], lineno=615, col_offset=11), [Assign([Name('docloc', Store(), lineno=616, col_offset=12)], BinOp(Str('<br><a href="%(docloc)s">Module Docs</a>', lineno=616, col_offset=21), Mod(), Call(Name('locals', Load(), lineno=616, col_offset=66), [], [], None, None, lineno=616, col_offset=66), lineno=616, col_offset=21), lineno=616, col_offset=12)], [Assign([Name('docloc', Store(), lineno=618, col_offset=12)], Str('', lineno=618, col_offset=21), lineno=618, col_offset=12)], lineno=615, col_offset=8), Assign([Name('result', Store(), lineno=619, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=619, col_offset=17), 'heading', Load(), lineno=619, col_offset=17), [Name('head', Load(), lineno=620, col_offset=12), Str('#ffffff', lineno=620, col_offset=18), Str('#7799ee', lineno=620, col_offset=29), BinOp(BinOp(Str('<a href=".">index</a><br>', lineno=621, col_offset=12), Add(), Name('filelink', Load(), lineno=621, col_offset=42), lineno=621, col_offset=12), Add(), Name('docloc', Load(), lineno=621, col_offset=53), lineno=621, col_offset=51)], [], None, None, lineno=619, col_offset=17), lineno=619, col_offset=8), Assign([Name('modules', Store(), lineno=623, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=623, col_offset=18), 'getmembers', Load(), lineno=623, col_offset=18), [Name('object', Load(), lineno=623, col_offset=37), Attribute(Name('inspect', Load(), lineno=623, col_offset=45), 'ismodule', Load(), lineno=623, col_offset=45)], [], None, None, lineno=623, col_offset=18), lineno=623, col_offset=8), Assign([Tuple([Name('classes', Store(), lineno=625, col_offset=8), Name('cdict', Store(), lineno=625, col_offset=17)], Store(), lineno=625, col_offset=8)], Tuple([List([], Load(), lineno=625, col_offset=25), Dict([], [], lineno=625, col_offset=29)], Load(), lineno=625, col_offset=25), lineno=625, col_offset=8), For(Tuple([Name('key', Store(), lineno=626, col_offset=12), Name('value', Store(), lineno=626, col_offset=17)], Store(), lineno=626, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=626, col_offset=26), 'getmembers', Load(), lineno=626, col_offset=26), [Name('object', Load(), lineno=626, col_offset=45), Attribute(Name('inspect', Load(), lineno=626, col_offset=53), 'isclass', Load(), lineno=626, col_offset=53)], [], None, None, lineno=626, col_offset=26), [If(BoolOp(Or(), [Compare(Name('all', Load(), lineno=628, col_offset=16), [IsNot()], [Name('None', Load(), lineno=628, col_offset=27)], lineno=628, col_offset=16), Compare(BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=629, col_offset=17), 'getmodule', Load(), lineno=629, col_offset=17), [Name('value', Load(), lineno=629, col_offset=35)], [], None, None, lineno=629, col_offset=17), Name('object', Load(), lineno=629, col_offset=45)], lineno=629, col_offset=17), [Is()], [Name('object', Load(), lineno=629, col_offset=56)], lineno=629, col_offset=16)], lineno=628, col_offset=16), [If(Call(Name('visiblename', Load(), lineno=630, col_offset=19), [Name('key', Load(), lineno=630, col_offset=31), Name('all', Load(), lineno=630, col_offset=36)], [], None, None, lineno=630, col_offset=19), [Expr(Call(Attribute(Name('classes', Load(), lineno=631, col_offset=20), 'append', Load(), lineno=631, col_offset=20), [Tuple([Name('key', Load(), lineno=631, col_offset=36), Name('value', Load(), lineno=631, col_offset=41)], Load(), lineno=631, col_offset=36)], [], None, None, lineno=631, col_offset=20), lineno=631, col_offset=20), Assign([Subscript(Name('cdict', Load(), lineno=632, col_offset=20), Index(Name('key', Load(), lineno=632, col_offset=26)), Store(), lineno=632, col_offset=20), Subscript(Name('cdict', Load(), lineno=632, col_offset=33), Index(Name('value', Load(), lineno=632, col_offset=39)), Store(), lineno=632, col_offset=33)], BinOp(Str('#', lineno=632, col_offset=48), Add(), Name('key', Load(), lineno=632, col_offset=54), lineno=632, col_offset=48), lineno=632, col_offset=20)], [], lineno=630, col_offset=16)], [], lineno=628, col_offset=12)], [], lineno=626, col_offset=8), For(Tuple([Name('key', Store(), lineno=633, col_offset=12), Name('value', Store(), lineno=633, col_offset=17)], Store(), lineno=633, col_offset=12), Name('classes', Load(), lineno=633, col_offset=26), [For(Name('base', Store(), lineno=634, col_offset=16), Attribute(Name('value', Load(), lineno=634, col_offset=24), '__bases__', Load(), lineno=634, col_offset=24), [Assign([Tuple([Name('key', Store(), lineno=635, col_offset=16), Name('modname', Store(), lineno=635, col_offset=21)], Store(), lineno=635, col_offset=16)], Tuple([Attribute(Name('base', Load(), lineno=635, col_offset=31), '__name__', Load(), lineno=635, col_offset=31), Attribute(Name('base', Load(), lineno=635, col_offset=46), '__module__', Load(), lineno=635, col_offset=46)], Load(), lineno=635, col_offset=31), lineno=635, col_offset=16), Assign([Name('module', Store(), lineno=636, col_offset=16)], Call(Attribute(Attribute(Name('sys', Load(), lineno=636, col_offset=25), 'modules', Load(), lineno=636, col_offset=25), 'get', Load(), lineno=636, col_offset=25), [Name('modname', Load(), lineno=636, col_offset=41)], [], None, None, lineno=636, col_offset=25), lineno=636, col_offset=16), If(BoolOp(And(), [Compare(Name('modname', Load(), lineno=637, col_offset=19), [NotEq()], [Name('name', Load(), lineno=637, col_offset=30)], lineno=637, col_offset=19), Name('module', Load(), lineno=637, col_offset=39), Call(Name('hasattr', Load(), lineno=637, col_offset=50), [Name('module', Load(), lineno=637, col_offset=58), Name('key', Load(), lineno=637, col_offset=66)], [], None, None, lineno=637, col_offset=50)], lineno=637, col_offset=19), [If(Compare(Call(Name('getattr', Load(), lineno=638, col_offset=23), [Name('module', Load(), lineno=638, col_offset=31), Name('key', Load(), lineno=638, col_offset=39)], [], None, None, lineno=638, col_offset=23), [Is()], [Name('base', Load(), lineno=638, col_offset=47)], lineno=638, col_offset=23), [If(UnaryOp(Not(), Compare(Name('key', Load(), lineno=639, col_offset=31), [In()], [Name('cdict', Load(), lineno=639, col_offset=38)], lineno=639, col_offset=31), lineno=639, col_offset=27), [Assign([Subscript(Name('cdict', Load(), lineno=640, col_offset=28), Index(Name('key', Load(), lineno=640, col_offset=34)), Store(), lineno=640, col_offset=28), Subscript(Name('cdict', Load(), lineno=640, col_offset=41), Index(Name('base', Load(), lineno=640, col_offset=47)), Store(), lineno=640, col_offset=41)], BinOp(BinOp(Name('modname', Load(), lineno=640, col_offset=55), Add(), Str('.html#', lineno=640, col_offset=65), lineno=640, col_offset=55), Add(), Name('key', Load(), lineno=640, col_offset=76), lineno=640, col_offset=74), lineno=640, col_offset=28)], [], lineno=639, col_offset=24)], [], lineno=638, col_offset=20)], [], lineno=637, col_offset=16)], [], lineno=634, col_offset=12)], [], lineno=633, col_offset=8), Assign([Tuple([Name('funcs', Store(), lineno=641, col_offset=8), Name('fdict', Store(), lineno=641, col_offset=15)], Store(), lineno=641, col_offset=8)], Tuple([List([], Load(), lineno=641, col_offset=23), Dict([], [], lineno=641, col_offset=27)], Load(), lineno=641, col_offset=23), lineno=641, col_offset=8), For(Tuple([Name('key', Store(), lineno=642, col_offset=12), Name('value', Store(), lineno=642, col_offset=17)], Store(), lineno=642, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=642, col_offset=26), 'getmembers', Load(), lineno=642, col_offset=26), [Name('object', Load(), lineno=642, col_offset=45), Attribute(Name('inspect', Load(), lineno=642, col_offset=53), 'isroutine', Load(), lineno=642, col_offset=53)], [], None, None, lineno=642, col_offset=26), [If(BoolOp(Or(), [Compare(Name('all', Load(), lineno=644, col_offset=16), [IsNot()], [Name('None', Load(), lineno=644, col_offset=27)], lineno=644, col_offset=16), Call(Attribute(Name('inspect', Load(), lineno=645, col_offset=16), 'isbuiltin', Load(), lineno=645, col_offset=16), [Name('value', Load(), lineno=645, col_offset=34)], [], None, None, lineno=645, col_offset=16), Compare(Call(Attribute(Name('inspect', Load(), lineno=645, col_offset=44), 'getmodule', Load(), lineno=645, col_offset=44), [Name('value', Load(), lineno=645, col_offset=62)], [], None, None, lineno=645, col_offset=44), [Is()], [Name('object', Load(), lineno=645, col_offset=72)], lineno=645, col_offset=44)], lineno=644, col_offset=16), [If(Call(Name('visiblename', Load(), lineno=646, col_offset=19), [Name('key', Load(), lineno=646, col_offset=31), Name('all', Load(), lineno=646, col_offset=36)], [], None, None, lineno=646, col_offset=19), [Expr(Call(Attribute(Name('funcs', Load(), lineno=647, col_offset=20), 'append', Load(), lineno=647, col_offset=20), [Tuple([Name('key', Load(), lineno=647, col_offset=34), Name('value', Load(), lineno=647, col_offset=39)], Load(), lineno=647, col_offset=34)], [], None, None, lineno=647, col_offset=20), lineno=647, col_offset=20), Assign([Subscript(Name('fdict', Load(), lineno=648, col_offset=20), Index(Name('key', Load(), lineno=648, col_offset=26)), Store(), lineno=648, col_offset=20)], BinOp(Str('#-', lineno=648, col_offset=33), Add(), Name('key', Load(), lineno=648, col_offset=40), lineno=648, col_offset=33), lineno=648, col_offset=20), If(Call(Attribute(Name('inspect', Load(), lineno=649, col_offset=23), 'isfunction', Load(), lineno=649, col_offset=23), [Name('value', Load(), lineno=649, col_offset=42)], [], None, None, lineno=649, col_offset=23), [Assign([Subscript(Name('fdict', Load(), lineno=649, col_offset=50), Index(Name('value', Load(), lineno=649, col_offset=56)), Store(), lineno=649, col_offset=50)], Subscript(Name('fdict', Load(), lineno=649, col_offset=65), Index(Name('key', Load(), lineno=649, col_offset=71)), Load(), lineno=649, col_offset=65), lineno=649, col_offset=50)], [], lineno=649, col_offset=20)], [], lineno=646, col_offset=16)], [], lineno=644, col_offset=12)], [], lineno=642, col_offset=8), Assign([Name('data', Store(), lineno=650, col_offset=8)], List([], Load(), lineno=650, col_offset=15), lineno=650, col_offset=8), For(Tuple([Name('key', Store(), lineno=651, col_offset=12), Name('value', Store(), lineno=651, col_offset=17)], Store(), lineno=651, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=651, col_offset=26), 'getmembers', Load(), lineno=651, col_offset=26), [Name('object', Load(), lineno=651, col_offset=45), Name('isdata', Load(), lineno=651, col_offset=53)], [], None, None, lineno=651, col_offset=26), [If(Call(Name('visiblename', Load(), lineno=652, col_offset=15), [Name('key', Load(), lineno=652, col_offset=27), Name('all', Load(), lineno=652, col_offset=32)], [], None, None, lineno=652, col_offset=15), [Expr(Call(Attribute(Name('data', Load(), lineno=653, col_offset=16), 'append', Load(), lineno=653, col_offset=16), [Tuple([Name('key', Load(), lineno=653, col_offset=29), Name('value', Load(), lineno=653, col_offset=34)], Load(), lineno=653, col_offset=29)], [], None, None, lineno=653, col_offset=16), lineno=653, col_offset=16)], [], lineno=652, col_offset=12)], [], lineno=651, col_offset=8), Assign([Name('doc', Store(), lineno=655, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=655, col_offset=14), 'markup', Load(), lineno=655, col_offset=14), [Call(Name('getdoc', Load(), lineno=655, col_offset=26), [Name('object', Load(), lineno=655, col_offset=33)], [], None, None, lineno=655, col_offset=26), Attribute(Name('self', Load(), lineno=655, col_offset=42), 'preformat', Load(), lineno=655, col_offset=42), Name('fdict', Load(), lineno=655, col_offset=58), Name('cdict', Load(), lineno=655, col_offset=65)], [], None, None, lineno=655, col_offset=14), lineno=655, col_offset=8), Assign([Name('doc', Store(), lineno=656, col_offset=8)], BoolOp(And(), [Name('doc', Load(), lineno=656, col_offset=14), BinOp(Str('<tt>%s</tt>', lineno=656, col_offset=22), Mod(), Name('doc', Load(), lineno=656, col_offset=38), lineno=656, col_offset=22)], lineno=656, col_offset=14), lineno=656, col_offset=8), Assign([Name('result', Store(), lineno=657, col_offset=8)], BinOp(Name('result', Load(), lineno=657, col_offset=17), Add(), BinOp(Str('<p>%s</p>\n', lineno=657, col_offset=26), Mod(), Name('doc', Load(), lineno=657, col_offset=42), lineno=657, col_offset=26), lineno=657, col_offset=17), lineno=657, col_offset=8), If(Call(Name('hasattr', Load(), lineno=659, col_offset=11), [Name('object', Load(), lineno=659, col_offset=19), Str('__path__', lineno=659, col_offset=27)], [], None, None, lineno=659, col_offset=11), [Assign([Name('modpkgs', Store(), lineno=660, col_offset=12)], List([], Load(), lineno=660, col_offset=22), lineno=660, col_offset=12), For(Tuple([Name('importer', Store(), lineno=661, col_offset=16), Name('modname', Store(), lineno=661, col_offset=26), Name('ispkg', Store(), lineno=661, col_offset=35)], Store(), lineno=661, col_offset=16), Call(Attribute(Name('pkgutil', Load(), lineno=661, col_offset=44), 'iter_modules', Load(), lineno=661, col_offset=44), [Attribute(Name('object', Load(), lineno=661, col_offset=65), '__path__', Load(), lineno=661, col_offset=65)], [], None, None, lineno=661, col_offset=44), [Expr(Call(Attribute(Name('modpkgs', Load(), lineno=662, col_offset=16), 'append', Load(), lineno=662, col_offset=16), [Tuple([Name('modname', Load(), lineno=662, col_offset=32), Name('name', Load(), lineno=662, col_offset=41), Name('ispkg', Load(), lineno=662, col_offset=47), Num(0, lineno=662, col_offset=54)], Load(), lineno=662, col_offset=32)], [], None, None, lineno=662, col_offset=16), lineno=662, col_offset=16)], [], lineno=661, col_offset=12), Expr(Call(Attribute(Name('modpkgs', Load(), lineno=663, col_offset=12), 'sort', Load(), lineno=663, col_offset=12), [], [], None, None, lineno=663, col_offset=12), lineno=663, col_offset=12), Assign([Name('contents', Store(), lineno=664, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=664, col_offset=23), 'multicolumn', Load(), lineno=664, col_offset=23), [Name('modpkgs', Load(), lineno=664, col_offset=40), Attribute(Name('self', Load(), lineno=664, col_offset=49), 'modpkglink', Load(), lineno=664, col_offset=49)], [], None, None, lineno=664, col_offset=23), lineno=664, col_offset=12), Assign([Name('result', Store(), lineno=665, col_offset=12)], BinOp(Name('result', Load(), lineno=665, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=665, col_offset=30), 'bigsection', Load(), lineno=665, col_offset=30), [Str('Package Contents', lineno=666, col_offset=16), Str('#ffffff', lineno=666, col_offset=36), Str('#aa55cc', lineno=666, col_offset=47), Name('contents', Load(), lineno=666, col_offset=58)], [], None, None, lineno=665, col_offset=30), lineno=665, col_offset=21), lineno=665, col_offset=12)], [If(Name('modules', Load(), lineno=667, col_offset=13), [Assign([Name('contents', Store(), lineno=668, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=668, col_offset=23), 'multicolumn', Load(), lineno=668, col_offset=23), [Name('modules', Load(), lineno=669, col_offset=16), Lambda(arguments([Name('key_value', Param(), lineno=669, col_offset=32), Name('s', Param(), lineno=669, col_offset=43)], None, None, [Name('self', Load(), lineno=669, col_offset=45)]), Call(Attribute(Name('s', Load(), lineno=669, col_offset=51), 'modulelink', Load(), lineno=669, col_offset=51), [Subscript(Name('key_value', Load(), lineno=669, col_offset=64), Index(Num(1, lineno=669, col_offset=74)), Load(), lineno=669, col_offset=64)], [], None, None, lineno=669, col_offset=51), lineno=669, col_offset=25)], [], None, None, lineno=668, col_offset=23), lineno=668, col_offset=12), Assign([Name('result', Store(), lineno=670, col_offset=12)], BinOp(Name('result', Load(), lineno=670, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=670, col_offset=30), 'bigsection', Load(), lineno=670, col_offset=30), [Str('Modules', lineno=671, col_offset=16), Str('#ffffff', lineno=671, col_offset=27), Str('#aa55cc', lineno=671, col_offset=38), Name('contents', Load(), lineno=671, col_offset=49)], [], None, None, lineno=670, col_offset=30), lineno=670, col_offset=21), lineno=670, col_offset=12)], [], lineno=667, col_offset=13)], lineno=659, col_offset=8), If(Name('classes', Load(), lineno=673, col_offset=11), [Assign([Name('classlist', Store(), lineno=674, col_offset=12)], Call(Name('map', Load(), lineno=674, col_offset=24), [Lambda(arguments([Name('key_value', Param(), lineno=674, col_offset=35)], None, None, []), Subscript(Name('key_value', Load(), lineno=674, col_offset=46), Index(Num(1, lineno=674, col_offset=56)), Load(), lineno=674, col_offset=46), lineno=674, col_offset=28), Name('classes', Load(), lineno=674, col_offset=60)], [], None, None, lineno=674, col_offset=24), lineno=674, col_offset=12), Assign([Name('contents', Store(), lineno=675, col_offset=12)], List([Call(Attribute(Name('self', Load(), lineno=676, col_offset=16), 'formattree', Load(), lineno=676, col_offset=16), [Call(Attribute(Name('inspect', Load(), lineno=676, col_offset=32), 'getclasstree', Load(), lineno=676, col_offset=32), [Name('classlist', Load(), lineno=676, col_offset=53), Num(1, lineno=676, col_offset=64)], [], None, None, lineno=676, col_offset=32), Name('name', Load(), lineno=676, col_offset=68)], [], None, None, lineno=676, col_offset=16)], Load(), lineno=675, col_offset=23), lineno=675, col_offset=12), For(Tuple([Name('key', Store(), lineno=677, col_offset=16), Name('value', Store(), lineno=677, col_offset=21)], Store(), lineno=677, col_offset=16), Name('classes', Load(), lineno=677, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=678, col_offset=16), 'append', Load(), lineno=678, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=678, col_offset=32), 'document', Load(), lineno=678, col_offset=32), [Name('value', Load(), lineno=678, col_offset=46), Name('key', Load(), lineno=678, col_offset=53), Name('name', Load(), lineno=678, col_offset=58), Name('fdict', Load(), lineno=678, col_offset=64), Name('cdict', Load(), lineno=678, col_offset=71)], [], None, None, lineno=678, col_offset=32)], [], None, None, lineno=678, col_offset=16), lineno=678, col_offset=16)], [], lineno=677, col_offset=12), Assign([Name('result', Store(), lineno=679, col_offset=12)], BinOp(Name('result', Load(), lineno=679, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=679, col_offset=30), 'bigsection', Load(), lineno=679, col_offset=30), [Str('Classes', lineno=680, col_offset=16), Str('#ffffff', lineno=680, col_offset=27), Str('#ee77aa', lineno=680, col_offset=38), Call(Name('join', Load(), lineno=680, col_offset=49), [Name('contents', Load(), lineno=680, col_offset=54)], [], None, None, lineno=680, col_offset=49)], [], None, None, lineno=679, col_offset=30), lineno=679, col_offset=21), lineno=679, col_offset=12)], [], lineno=673, col_offset=8), If(Name('funcs', Load(), lineno=681, col_offset=11), [Assign([Name('contents', Store(), lineno=682, col_offset=12)], List([], Load(), lineno=682, col_offset=23), lineno=682, col_offset=12), For(Tuple([Name('key', Store(), lineno=683, col_offset=16), Name('value', Store(), lineno=683, col_offset=21)], Store(), lineno=683, col_offset=16), Name('funcs', Load(), lineno=683, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=684, col_offset=16), 'append', Load(), lineno=684, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=684, col_offset=32), 'document', Load(), lineno=684, col_offset=32), [Name('value', Load(), lineno=684, col_offset=46), Name('key', Load(), lineno=684, col_offset=53), Name('name', Load(), lineno=684, col_offset=58), Name('fdict', Load(), lineno=684, col_offset=64), Name('cdict', Load(), lineno=684, col_offset=71)], [], None, None, lineno=684, col_offset=32)], [], None, None, lineno=684, col_offset=16), lineno=684, col_offset=16)], [], lineno=683, col_offset=12), Assign([Name('result', Store(), lineno=685, col_offset=12)], BinOp(Name('result', Load(), lineno=685, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=685, col_offset=30), 'bigsection', Load(), lineno=685, col_offset=30), [Str('Functions', lineno=686, col_offset=16), Str('#ffffff', lineno=686, col_offset=29), Str('#eeaa77', lineno=686, col_offset=40), Call(Name('join', Load(), lineno=686, col_offset=51), [Name('contents', Load(), lineno=686, col_offset=56)], [], None, None, lineno=686, col_offset=51)], [], None, None, lineno=685, col_offset=30), lineno=685, col_offset=21), lineno=685, col_offset=12)], [], lineno=681, col_offset=8), If(Name('data', Load(), lineno=687, col_offset=11), [Assign([Name('contents', Store(), lineno=688, col_offset=12)], List([], Load(), lineno=688, col_offset=23), lineno=688, col_offset=12), For(Tuple([Name('key', Store(), lineno=689, col_offset=16), Name('value', Store(), lineno=689, col_offset=21)], Store(), lineno=689, col_offset=16), Name('data', Load(), lineno=689, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=690, col_offset=16), 'append', Load(), lineno=690, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=690, col_offset=32), 'document', Load(), lineno=690, col_offset=32), [Name('value', Load(), lineno=690, col_offset=46), Name('key', Load(), lineno=690, col_offset=53)], [], None, None, lineno=690, col_offset=32)], [], None, None, lineno=690, col_offset=16), lineno=690, col_offset=16)], [], lineno=689, col_offset=12), Assign([Name('result', Store(), lineno=691, col_offset=12)], BinOp(Name('result', Load(), lineno=691, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=691, col_offset=30), 'bigsection', Load(), lineno=691, col_offset=30), [Str('Data', lineno=692, col_offset=16), Str('#ffffff', lineno=692, col_offset=24), Str('#55aa55', lineno=692, col_offset=35), Call(Name('join', Load(), lineno=692, col_offset=46), [Name('contents', Load(), lineno=692, col_offset=51), Str('<br>\n', lineno=692, col_offset=61)], [], None, None, lineno=692, col_offset=46)], [], None, None, lineno=691, col_offset=30), lineno=691, col_offset=21), lineno=691, col_offset=12)], [], lineno=687, col_offset=8), If(Call(Name('hasattr', Load(), lineno=693, col_offset=11), [Name('object', Load(), lineno=693, col_offset=19), Str('__author__', lineno=693, col_offset=27)], [], None, None, lineno=693, col_offset=11), [Assign([Name('contents', Store(), lineno=694, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=694, col_offset=23), 'markup', Load(), lineno=694, col_offset=23), [Call(Name('str', Load(), lineno=694, col_offset=35), [Attribute(Name('object', Load(), lineno=694, col_offset=39), '__author__', Load(), lineno=694, col_offset=39)], [], None, None, lineno=694, col_offset=35), Attribute(Name('self', Load(), lineno=694, col_offset=59), 'preformat', Load(), lineno=694, col_offset=59)], [], None, None, lineno=694, col_offset=23), lineno=694, col_offset=12), Assign([Name('result', Store(), lineno=695, col_offset=12)], BinOp(Name('result', Load(), lineno=695, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=695, col_offset=30), 'bigsection', Load(), lineno=695, col_offset=30), [Str('Author', lineno=696, col_offset=16), Str('#ffffff', lineno=696, col_offset=26), Str('#7799ee', lineno=696, col_offset=37), Name('contents', Load(), lineno=696, col_offset=48)], [], None, None, lineno=695, col_offset=30), lineno=695, col_offset=21), lineno=695, col_offset=12)], [], lineno=693, col_offset=8), If(Call(Name('hasattr', Load(), lineno=697, col_offset=11), [Name('object', Load(), lineno=697, col_offset=19), Str('__credits__', lineno=697, col_offset=27)], [], None, None, lineno=697, col_offset=11), [Assign([Name('contents', Store(), lineno=698, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=698, col_offset=23), 'markup', Load(), lineno=698, col_offset=23), [Call(Name('str', Load(), lineno=698, col_offset=35), [Attribute(Name('object', Load(), lineno=698, col_offset=39), '__credits__', Load(), lineno=698, col_offset=39)], [], None, None, lineno=698, col_offset=35), Attribute(Name('self', Load(), lineno=698, col_offset=60), 'preformat', Load(), lineno=698, col_offset=60)], [], None, None, lineno=698, col_offset=23), lineno=698, col_offset=12), Assign([Name('result', Store(), lineno=699, col_offset=12)], BinOp(Name('result', Load(), lineno=699, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=699, col_offset=30), 'bigsection', Load(), lineno=699, col_offset=30), [Str('Credits', lineno=700, col_offset=16), Str('#ffffff', lineno=700, col_offset=27), Str('#7799ee', lineno=700, col_offset=38), Name('contents', Load(), lineno=700, col_offset=49)], [], None, None, lineno=699, col_offset=30), lineno=699, col_offset=21), lineno=699, col_offset=12)], [], lineno=697, col_offset=8), Return(Name('result', Load(), lineno=702, col_offset=15), lineno=702, col_offset=8)], [], lineno=580, col_offset=4), FunctionDef('docclass', arguments([Name('self', Param(), lineno=704, col_offset=17), Name('object', Param(), lineno=704, col_offset=23), Name('name', Param(), lineno=704, col_offset=31), Name('mod', Param(), lineno=704, col_offset=42), Name('funcs', Param(), lineno=704, col_offset=52), Name('classes', Param(), lineno=704, col_offset=62)], 'ignored', None, [Name('None', Load(), lineno=704, col_offset=36), Name('None', Load(), lineno=704, col_offset=46), Dict([], [], lineno=704, col_offset=58), Dict([], [], lineno=704, col_offset=70)]), [Expr(Str('Produce HTML documentation for a class object.', lineno=706, col_offset=8), lineno=706, col_offset=8), Assign([Name('realname', Store(), lineno=707, col_offset=8)], Attribute(Name('object', Load(), lineno=707, col_offset=19), '__name__', Load(), lineno=707, col_offset=19), lineno=707, col_offset=8), Assign([Name('name', Store(), lineno=708, col_offset=8)], BoolOp(Or(), [Name('name', Load(), lineno=708, col_offset=15), Name('realname', Load(), lineno=708, col_offset=23)], lineno=708, col_offset=15), lineno=708, col_offset=8), Assign([Name('bases', Store(), lineno=709, col_offset=8)], Attribute(Name('object', Load(), lineno=709, col_offset=16), '__bases__', Load(), lineno=709, col_offset=16), lineno=709, col_offset=8), Assign([Name('contents', Store(), lineno=711, col_offset=8)], List([], Load(), lineno=711, col_offset=19), lineno=711, col_offset=8), Assign([Name('push', Store(), lineno=712, col_offset=8)], Attribute(Name('contents', Load(), lineno=712, col_offset=15), 'append', Load(), lineno=712, col_offset=15), lineno=712, col_offset=8), ClassDef('HorizontalRule', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=716, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=717, col_offset=16), 'needone', Store(), lineno=717, col_offset=16)], Num(0, lineno=717, col_offset=31), lineno=717, col_offset=16)], [], lineno=716, col_offset=12), FunctionDef('maybe', arguments([Name('self', Param(), lineno=718, col_offset=22)], None, None, []), [If(Attribute(Name('self', Load(), lineno=719, col_offset=19), 'needone', Load(), lineno=719, col_offset=19), [Expr(Call(Name('push', Load(), lineno=720, col_offset=20), [Str('<hr>\n', lineno=720, col_offset=25)], [], None, None, lineno=720, col_offset=20), lineno=720, col_offset=20)], [], lineno=719, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=721, col_offset=16), 'needone', Store(), lineno=721, col_offset=16)], Num(1, lineno=721, col_offset=31), lineno=721, col_offset=16)], [], lineno=718, col_offset=12)], [], lineno=715, col_offset=8), Assign([Name('hr', Store(), lineno=722, col_offset=8)], Call(Name('HorizontalRule', Load(), lineno=722, col_offset=13), [], [], None, None, lineno=722, col_offset=13), lineno=722, col_offset=8), Assign([Name('mro', Store(), lineno=725, col_offset=8)], Call(Name('deque', Load(), lineno=725, col_offset=14), [Call(Attribute(Name('inspect', Load(), lineno=725, col_offset=20), 'getmro', Load(), lineno=725, col_offset=20), [Name('object', Load(), lineno=725, col_offset=35)], [], None, None, lineno=725, col_offset=20)], [], None, None, lineno=725, col_offset=14), lineno=725, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=726, col_offset=11), [Name('mro', Load(), lineno=726, col_offset=15)], [], None, None, lineno=726, col_offset=11), [Gt()], [Num(2, lineno=726, col_offset=22)], lineno=726, col_offset=11), [Expr(Call(Attribute(Name('hr', Load(), lineno=727, col_offset=12), 'maybe', Load(), lineno=727, col_offset=12), [], [], None, None, lineno=727, col_offset=12), lineno=727, col_offset=12), Expr(Call(Name('push', Load(), lineno=728, col_offset=12), [Str('<dl><dt>Method resolution order:</dt>\n', lineno=728, col_offset=17)], [], None, None, lineno=728, col_offset=12), lineno=728, col_offset=12), For(Name('base', Store(), lineno=729, col_offset=16), Name('mro', Load(), lineno=729, col_offset=24), [Expr(Call(Name('push', Load(), lineno=730, col_offset=16), [BinOp(Str('<dd>%s</dd>\n', lineno=730, col_offset=21), Mod(), Call(Attribute(Name('self', Load(), lineno=730, col_offset=39), 'classlink', Load(), lineno=730, col_offset=39), [Name('base', Load(), lineno=730, col_offset=54), Attribute(Name('object', Load(), lineno=731, col_offset=54), '__module__', Load(), lineno=731, col_offset=54)], [], None, None, lineno=730, col_offset=39), lineno=730, col_offset=21)], [], None, None, lineno=730, col_offset=16), lineno=730, col_offset=16)], [], lineno=729, col_offset=12), Expr(Call(Name('push', Load(), lineno=732, col_offset=12), [Str('</dl>\n', lineno=732, col_offset=17)], [], None, None, lineno=732, col_offset=12), lineno=732, col_offset=12)], [], lineno=726, col_offset=8), FunctionDef('spill', arguments([Name('msg', Param(), lineno=734, col_offset=18), Name('attrs', Param(), lineno=734, col_offset=23), Name('predicate', Param(), lineno=734, col_offset=30)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=735, col_offset=12), Name('attrs', Store(), lineno=735, col_offset=16)], Store(), lineno=735, col_offset=12)], Call(Name('_split_list', Load(), lineno=735, col_offset=24), [Name('attrs', Load(), lineno=735, col_offset=36), Name('predicate', Load(), lineno=735, col_offset=43)], [], None, None, lineno=735, col_offset=24), lineno=735, col_offset=12), If(Name('ok', Load(), lineno=736, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=737, col_offset=16), 'maybe', Load(), lineno=737, col_offset=16), [], [], None, None, lineno=737, col_offset=16), lineno=737, col_offset=16), Expr(Call(Name('push', Load(), lineno=738, col_offset=16), [Name('msg', Load(), lineno=738, col_offset=21)], [], None, None, lineno=738, col_offset=16), lineno=738, col_offset=16), For(Tuple([Name('name', Store(), lineno=739, col_offset=20), Name('kind', Store(), lineno=739, col_offset=26), Name('homecls', Store(), lineno=739, col_offset=32), Name('value', Store(), lineno=739, col_offset=41)], Store(), lineno=739, col_offset=20), Name('ok', Load(), lineno=739, col_offset=50), [Expr(Call(Name('push', Load(), lineno=740, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=740, col_offset=25), 'document', Load(), lineno=740, col_offset=25), [Call(Name('getattr', Load(), lineno=740, col_offset=39), [Name('object', Load(), lineno=740, col_offset=47), Name('name', Load(), lineno=740, col_offset=55)], [], None, None, lineno=740, col_offset=39), Name('name', Load(), lineno=740, col_offset=62), Name('mod', Load(), lineno=740, col_offset=68), Name('funcs', Load(), lineno=741, col_offset=39), Name('classes', Load(), lineno=741, col_offset=46), Name('mdict', Load(), lineno=741, col_offset=55), Name('object', Load(), lineno=741, col_offset=62)], [], None, None, lineno=740, col_offset=25)], [], None, None, lineno=740, col_offset=20), lineno=740, col_offset=20), Expr(Call(Name('push', Load(), lineno=742, col_offset=20), [Str('\n', lineno=742, col_offset=25)], [], None, None, lineno=742, col_offset=20), lineno=742, col_offset=20)], [], lineno=739, col_offset=16)], [], lineno=736, col_offset=12), Return(Name('attrs', Load(), lineno=743, col_offset=19), lineno=743, col_offset=12)], [], lineno=734, col_offset=8), FunctionDef('spilldescriptors', arguments([Name('msg', Param(), lineno=745, col_offset=29), Name('attrs', Param(), lineno=745, col_offset=34), Name('predicate', Param(), lineno=745, col_offset=41)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=746, col_offset=12), Name('attrs', Store(), lineno=746, col_offset=16)], Store(), lineno=746, col_offset=12)], Call(Name('_split_list', Load(), lineno=746, col_offset=24), [Name('attrs', Load(), lineno=746, col_offset=36), Name('predicate', Load(), lineno=746, col_offset=43)], [], None, None, lineno=746, col_offset=24), lineno=746, col_offset=12), If(Name('ok', Load(), lineno=747, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=748, col_offset=16), 'maybe', Load(), lineno=748, col_offset=16), [], [], None, None, lineno=748, col_offset=16), lineno=748, col_offset=16), Expr(Call(Name('push', Load(), lineno=749, col_offset=16), [Name('msg', Load(), lineno=749, col_offset=21)], [], None, None, lineno=749, col_offset=16), lineno=749, col_offset=16), For(Tuple([Name('name', Store(), lineno=750, col_offset=20), Name('kind', Store(), lineno=750, col_offset=26), Name('homecls', Store(), lineno=750, col_offset=32), Name('value', Store(), lineno=750, col_offset=41)], Store(), lineno=750, col_offset=20), Name('ok', Load(), lineno=750, col_offset=50), [Expr(Call(Name('push', Load(), lineno=751, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=751, col_offset=25), '_docdescriptor', Load(), lineno=751, col_offset=25), [Name('name', Load(), lineno=751, col_offset=45), Name('value', Load(), lineno=751, col_offset=51), Name('mod', Load(), lineno=751, col_offset=58)], [], None, None, lineno=751, col_offset=25)], [], None, None, lineno=751, col_offset=20), lineno=751, col_offset=20)], [], lineno=750, col_offset=16)], [], lineno=747, col_offset=12), Return(Name('attrs', Load(), lineno=752, col_offset=19), lineno=752, col_offset=12)], [], lineno=745, col_offset=8), FunctionDef('spilldata', arguments([Name('msg', Param(), lineno=754, col_offset=22), Name('attrs', Param(), lineno=754, col_offset=27), Name('predicate', Param(), lineno=754, col_offset=34)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=755, col_offset=12), Name('attrs', Store(), lineno=755, col_offset=16)], Store(), lineno=755, col_offset=12)], Call(Name('_split_list', Load(), lineno=755, col_offset=24), [Name('attrs', Load(), lineno=755, col_offset=36), Name('predicate', Load(), lineno=755, col_offset=43)], [], None, None, lineno=755, col_offset=24), lineno=755, col_offset=12), If(Name('ok', Load(), lineno=756, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=757, col_offset=16), 'maybe', Load(), lineno=757, col_offset=16), [], [], None, None, lineno=757, col_offset=16), lineno=757, col_offset=16), Expr(Call(Name('push', Load(), lineno=758, col_offset=16), [Name('msg', Load(), lineno=758, col_offset=21)], [], None, None, lineno=758, col_offset=16), lineno=758, col_offset=16), For(Tuple([Name('name', Store(), lineno=759, col_offset=20), Name('kind', Store(), lineno=759, col_offset=26), Name('homecls', Store(), lineno=759, col_offset=32), Name('value', Store(), lineno=759, col_offset=41)], Store(), lineno=759, col_offset=20), Name('ok', Load(), lineno=759, col_offset=50), [Assign([Name('base', Store(), lineno=760, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=760, col_offset=27), 'docother', Load(), lineno=760, col_offset=27), [Call(Name('getattr', Load(), lineno=760, col_offset=41), [Name('object', Load(), lineno=760, col_offset=49), Name('name', Load(), lineno=760, col_offset=57)], [], None, None, lineno=760, col_offset=41), Name('name', Load(), lineno=760, col_offset=64), Name('mod', Load(), lineno=760, col_offset=70)], [], None, None, lineno=760, col_offset=27), lineno=760, col_offset=20), If(BoolOp(Or(), [Call(Name('hasattr', Load(), lineno=761, col_offset=24), [Name('value', Load(), lineno=761, col_offset=32), Str('__call__', lineno=761, col_offset=39)], [], None, None, lineno=761, col_offset=24), Call(Attribute(Name('inspect', Load(), lineno=762, col_offset=28), 'isdatadescriptor', Load(), lineno=762, col_offset=28), [Name('value', Load(), lineno=762, col_offset=53)], [], None, None, lineno=762, col_offset=28)], lineno=761, col_offset=24), [Assign([Name('doc', Store(), lineno=763, col_offset=24)], Call(Name('getattr', Load(), lineno=763, col_offset=30), [Name('value', Load(), lineno=763, col_offset=38), Str('__doc__', lineno=763, col_offset=45), Name('None', Load(), lineno=763, col_offset=56)], [], None, None, lineno=763, col_offset=30), lineno=763, col_offset=24)], [Assign([Name('doc', Store(), lineno=765, col_offset=24)], Name('None', Load(), lineno=765, col_offset=30), lineno=765, col_offset=24)], lineno=761, col_offset=20), If(Compare(Name('doc', Load(), lineno=766, col_offset=23), [Is()], [Name('None', Load(), lineno=766, col_offset=30)], lineno=766, col_offset=23), [Expr(Call(Name('push', Load(), lineno=767, col_offset=24), [BinOp(Str('<dl><dt>%s</dl>\n', lineno=767, col_offset=29), Mod(), Name('base', Load(), lineno=767, col_offset=51), lineno=767, col_offset=29)], [], None, None, lineno=767, col_offset=24), lineno=767, col_offset=24)], [Assign([Name('doc', Store(), lineno=769, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=769, col_offset=30), 'markup', Load(), lineno=769, col_offset=30), [Call(Name('getdoc', Load(), lineno=769, col_offset=42), [Name('value', Load(), lineno=769, col_offset=49)], [], None, None, lineno=769, col_offset=42), Attribute(Name('self', Load(), lineno=769, col_offset=57), 'preformat', Load(), lineno=769, col_offset=57), Name('funcs', Load(), lineno=770, col_offset=42), Name('classes', Load(), lineno=770, col_offset=49), Name('mdict', Load(), lineno=770, col_offset=58)], [], None, None, lineno=769, col_offset=30), lineno=769, col_offset=24), Assign([Name('doc', Store(), lineno=771, col_offset=24)], BinOp(Str('<dd><tt>%s</tt>', lineno=771, col_offset=30), Mod(), Name('doc', Load(), lineno=771, col_offset=50), lineno=771, col_offset=30), lineno=771, col_offset=24), Expr(Call(Name('push', Load(), lineno=772, col_offset=24), [BinOp(Str('<dl><dt>%s%s</dl>\n', lineno=772, col_offset=29), Mod(), Tuple([Name('base', Load(), lineno=772, col_offset=54), Name('doc', Load(), lineno=772, col_offset=60)], Load(), lineno=772, col_offset=54), lineno=772, col_offset=29)], [], None, None, lineno=772, col_offset=24), lineno=772, col_offset=24)], lineno=766, col_offset=20), Expr(Call(Name('push', Load(), lineno=773, col_offset=20), [Str('\n', lineno=773, col_offset=25)], [], None, None, lineno=773, col_offset=20), lineno=773, col_offset=20)], [], lineno=759, col_offset=16)], [], lineno=756, col_offset=12), Return(Name('attrs', Load(), lineno=774, col_offset=19), lineno=774, col_offset=12)], [], lineno=754, col_offset=8), Assign([Name('attrs', Store(), lineno=776, col_offset=8)], Call(Name('filter', Load(), lineno=776, col_offset=16), [Lambda(arguments([Name('data', Param(), lineno=776, col_offset=30)], None, None, []), Call(Name('visiblename', Load(), lineno=776, col_offset=36), [Subscript(Name('data', Load(), lineno=776, col_offset=48), Index(Num(0, lineno=776, col_offset=53)), Load(), lineno=776, col_offset=48)], [], None, None, lineno=776, col_offset=36), lineno=776, col_offset=23), Call(Name('classify_class_attrs', Load(), lineno=777, col_offset=23), [Name('object', Load(), lineno=777, col_offset=44)], [], None, None, lineno=777, col_offset=23)], [], None, None, lineno=776, col_offset=16), lineno=776, col_offset=8), Assign([Name('mdict', Store(), lineno=778, col_offset=8)], Dict([], [], lineno=778, col_offset=16), lineno=778, col_offset=8), For(Tuple([Name('key', Store(), lineno=779, col_offset=12), Name('kind', Store(), lineno=779, col_offset=17), Name('homecls', Store(), lineno=779, col_offset=23), Name('value', Store(), lineno=779, col_offset=32)], Store(), lineno=779, col_offset=12), Name('attrs', Load(), lineno=779, col_offset=41), [Assign([Subscript(Name('mdict', Load(), lineno=780, col_offset=12), Index(Name('key', Load(), lineno=780, col_offset=18)), Store(), lineno=780, col_offset=12), Name('anchor', Store(), lineno=780, col_offset=25)], BinOp(BinOp(BinOp(Str('#', lineno=780, col_offset=34), Add(), Name('name', Load(), lineno=780, col_offset=40), lineno=780, col_offset=34), Add(), Str('-', lineno=780, col_offset=47), lineno=780, col_offset=45), Add(), Name('key', Load(), lineno=780, col_offset=53), lineno=780, col_offset=51), lineno=780, col_offset=12), Assign([Name('value', Store(), lineno=781, col_offset=12)], Call(Name('getattr', Load(), lineno=781, col_offset=20), [Name('object', Load(), lineno=781, col_offset=28), Name('key', Load(), lineno=781, col_offset=36)], [], None, None, lineno=781, col_offset=20), lineno=781, col_offset=12), TryExcept([Assign([Subscript(Name('mdict', Load(), lineno=785, col_offset=16), Index(Name('value', Load(), lineno=785, col_offset=22)), Store(), lineno=785, col_offset=16)], Name('anchor', Load(), lineno=785, col_offset=31), lineno=785, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=786, col_offset=19), None, [Pass( lineno=787, col_offset=16)], lineno=786, col_offset=12)], [], lineno=782, col_offset=12)], [], lineno=779, col_offset=8), While(Name('attrs', Load(), lineno=789, col_offset=14), [If(Name('mro', Load(), lineno=790, col_offset=15), [Assign([Name('thisclass', Store(), lineno=791, col_offset=16)], Call(Attribute(Name('mro', Load(), lineno=791, col_offset=28), 'popleft', Load(), lineno=791, col_offset=28), [], [], None, None, lineno=791, col_offset=28), lineno=791, col_offset=16)], [Assign([Name('thisclass', Store(), lineno=793, col_offset=16)], Subscript(Subscript(Name('attrs', Load(), lineno=793, col_offset=28), Index(Num(0, lineno=793, col_offset=34)), Load(), lineno=793, col_offset=28), Index(Num(2, lineno=793, col_offset=37)), Load(), lineno=793, col_offset=28), lineno=793, col_offset=16)], lineno=790, col_offset=12), Assign([Tuple([Name('attrs', Store(), lineno=794, col_offset=12), Name('inherited', Store(), lineno=794, col_offset=19)], Store(), lineno=794, col_offset=12)], Call(Name('_split_list', Load(), lineno=794, col_offset=31), [Name('attrs', Load(), lineno=794, col_offset=43), Lambda(arguments([Name('t', Param(), lineno=794, col_offset=57)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=794, col_offset=60), Index(Num(2, lineno=794, col_offset=62)), Load(), lineno=794, col_offset=60), [Is()], [Name('thisclass', Load(), lineno=794, col_offset=68)], lineno=794, col_offset=60), lineno=794, col_offset=50)], [], None, None, lineno=794, col_offset=31), lineno=794, col_offset=12), If(Compare(Name('thisclass', Load(), lineno=796, col_offset=15), [Is()], [Attribute(Name('__builtin__', Load(), lineno=796, col_offset=28), 'object', Load(), lineno=796, col_offset=28)], lineno=796, col_offset=15), [Assign([Name('attrs', Store(), lineno=797, col_offset=16)], Name('inherited', Load(), lineno=797, col_offset=24), lineno=797, col_offset=16), Continue( lineno=798, col_offset=16)], [If(Compare(Name('thisclass', Load(), lineno=799, col_offset=17), [Is()], [Name('object', Load(), lineno=799, col_offset=30)], lineno=799, col_offset=17), [Assign([Name('tag', Store(), lineno=800, col_offset=16)], Str('defined here', lineno=800, col_offset=22), lineno=800, col_offset=16)], [Assign([Name('tag', Store(), lineno=802, col_offset=16)], BinOp(Str('inherited from %s', lineno=802, col_offset=22), Mod(), Call(Attribute(Name('self', Load(), lineno=802, col_offset=44), 'classlink', Load(), lineno=802, col_offset=44), [Name('thisclass', Load(), lineno=802, col_offset=59), Attribute(Name('object', Load(), lineno=803, col_offset=59), '__module__', Load(), lineno=803, col_offset=59)], [], None, None, lineno=802, col_offset=44), lineno=802, col_offset=22), lineno=802, col_offset=16)], lineno=799, col_offset=17)], lineno=796, col_offset=12), AugAssign(Name('tag', Store(), lineno=804, col_offset=12), Add(), Str(':<br>\n', lineno=804, col_offset=19), lineno=804, col_offset=12), TryExcept([Expr(Call(Attribute(Name('attrs', Load(), lineno=808, col_offset=16), 'sort', Load(), lineno=808, col_offset=16), [], [keyword('key', Lambda(arguments([Name('t', Param(), lineno=808, col_offset=38)], None, None, []), Subscript(Name('t', Load(), lineno=808, col_offset=41), Index(Num(0, lineno=808, col_offset=43)), Load(), lineno=808, col_offset=41), lineno=808, col_offset=31))], None, None, lineno=808, col_offset=16), lineno=808, col_offset=16)], [ExceptHandler(Name('TypeError', Load(), lineno=809, col_offset=19), None, [Expr(Call(Attribute(Name('attrs', Load(), lineno=810, col_offset=16), 'sort', Load(), lineno=810, col_offset=16), [Lambda(arguments([Name('t1', Param(), lineno=810, col_offset=34), Name('t2', Param(), lineno=810, col_offset=38)], None, None, []), Call(Name('cmp', Load(), lineno=810, col_offset=42), [Subscript(Name('t1', Load(), lineno=810, col_offset=46), Index(Num(0, lineno=810, col_offset=49)), Load(), lineno=810, col_offset=46), Subscript(Name('t2', Load(), lineno=810, col_offset=53), Index(Num(0, lineno=810, col_offset=56)), Load(), lineno=810, col_offset=53)], [], None, None, lineno=810, col_offset=42), lineno=810, col_offset=27)], [], None, None, lineno=810, col_offset=16), lineno=810, col_offset=16)], lineno=809, col_offset=12)], [], lineno=807, col_offset=12), Assign([Name('attrs', Store(), lineno=813, col_offset=12)], Call(Name('spill', Load(), lineno=813, col_offset=20), [BinOp(Str('Methods %s', lineno=813, col_offset=26), Mod(), Name('tag', Load(), lineno=813, col_offset=41), lineno=813, col_offset=26), Name('attrs', Load(), lineno=813, col_offset=46), Lambda(arguments([Name('t', Param(), lineno=814, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=814, col_offset=36), Index(Num(1, lineno=814, col_offset=38)), Load(), lineno=814, col_offset=36), [Eq()], [Str('method', lineno=814, col_offset=44)], lineno=814, col_offset=36), lineno=814, col_offset=26)], [], None, None, lineno=813, col_offset=20), lineno=813, col_offset=12), Assign([Name('attrs', Store(), lineno=815, col_offset=12)], Call(Name('spill', Load(), lineno=815, col_offset=20), [BinOp(Str('Class methods %s', lineno=815, col_offset=26), Mod(), Name('tag', Load(), lineno=815, col_offset=47), lineno=815, col_offset=26), Name('attrs', Load(), lineno=815, col_offset=52), Lambda(arguments([Name('t', Param(), lineno=816, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=816, col_offset=36), Index(Num(1, lineno=816, col_offset=38)), Load(), lineno=816, col_offset=36), [Eq()], [Str('class method', lineno=816, col_offset=44)], lineno=816, col_offset=36), lineno=816, col_offset=26)], [], None, None, lineno=815, col_offset=20), lineno=815, col_offset=12), Assign([Name('attrs', Store(), lineno=817, col_offset=12)], Call(Name('spill', Load(), lineno=817, col_offset=20), [BinOp(Str('Static methods %s', lineno=817, col_offset=26), Mod(), Name('tag', Load(), lineno=817, col_offset=48), lineno=817, col_offset=26), Name('attrs', Load(), lineno=817, col_offset=53), Lambda(arguments([Name('t', Param(), lineno=818, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=818, col_offset=36), Index(Num(1, lineno=818, col_offset=38)), Load(), lineno=818, col_offset=36), [Eq()], [Str('static method', lineno=818, col_offset=44)], lineno=818, col_offset=36), lineno=818, col_offset=26)], [], None, None, lineno=817, col_offset=20), lineno=817, col_offset=12), Assign([Name('attrs', Store(), lineno=819, col_offset=12)], Call(Name('spilldescriptors', Load(), lineno=819, col_offset=20), [BinOp(Str('Data descriptors %s', lineno=819, col_offset=37), Mod(), Name('tag', Load(), lineno=819, col_offset=61), lineno=819, col_offset=37), Name('attrs', Load(), lineno=819, col_offset=66), Lambda(arguments([Name('t', Param(), lineno=820, col_offset=44)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=820, col_offset=47), Index(Num(1, lineno=820, col_offset=49)), Load(), lineno=820, col_offset=47), [Eq()], [Str('data descriptor', lineno=820, col_offset=55)], lineno=820, col_offset=47), lineno=820, col_offset=37)], [], None, None, lineno=819, col_offset=20), lineno=819, col_offset=12), Assign([Name('attrs', Store(), lineno=821, col_offset=12)], Call(Name('spilldata', Load(), lineno=821, col_offset=20), [BinOp(Str('Data and other attributes %s', lineno=821, col_offset=30), Mod(), Name('tag', Load(), lineno=821, col_offset=63), lineno=821, col_offset=30), Name('attrs', Load(), lineno=821, col_offset=68), Lambda(arguments([Name('t', Param(), lineno=822, col_offset=37)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=822, col_offset=40), Index(Num(1, lineno=822, col_offset=42)), Load(), lineno=822, col_offset=40), [Eq()], [Str('data', lineno=822, col_offset=48)], lineno=822, col_offset=40), lineno=822, col_offset=30)], [], None, None, lineno=821, col_offset=20), lineno=821, col_offset=12), Assert(Compare(Name('attrs', Load(), lineno=823, col_offset=19), [Eq()], [List([], Load(), lineno=823, col_offset=28)], lineno=823, col_offset=19), None, lineno=823, col_offset=12), Assign([Name('attrs', Store(), lineno=824, col_offset=12)], Name('inherited', Load(), lineno=824, col_offset=20), lineno=824, col_offset=12)], [], lineno=789, col_offset=8), Assign([Name('contents', Store(), lineno=826, col_offset=8)], Call(Attribute(Str('', lineno=826, col_offset=19), 'join', Load(), lineno=826, col_offset=19), [Name('contents', Load(), lineno=826, col_offset=27)], [], None, None, lineno=826, col_offset=19), lineno=826, col_offset=8), If(Compare(Name('name', Load(), lineno=828, col_offset=11), [Eq()], [Name('realname', Load(), lineno=828, col_offset=19)], lineno=828, col_offset=11), [Assign([Name('title', Store(), lineno=829, col_offset=12)], BinOp(Str('<a name="%s">class <strong>%s</strong></a>', lineno=829, col_offset=20), Mod(), Tuple([Name('name', Load(), lineno=830, col_offset=16), Name('realname', Load(), lineno=830, col_offset=22)], Load(), lineno=830, col_offset=16), lineno=829, col_offset=20), lineno=829, col_offset=12)], [Assign([Name('title', Store(), lineno=832, col_offset=12)], BinOp(Str('<strong>%s</strong> = <a name="%s">class %s</a>', lineno=832, col_offset=20), Mod(), Tuple([Name('name', Load(), lineno=833, col_offset=16), Name('name', Load(), lineno=833, col_offset=22), Name('realname', Load(), lineno=833, col_offset=28)], Load(), lineno=833, col_offset=16), lineno=832, col_offset=20), lineno=832, col_offset=12)], lineno=828, col_offset=8), If(Name('bases', Load(), lineno=834, col_offset=11), [Assign([Name('parents', Store(), lineno=835, col_offset=12)], List([], Load(), lineno=835, col_offset=22), lineno=835, col_offset=12), For(Name('base', Store(), lineno=836, col_offset=16), Name('bases', Load(), lineno=836, col_offset=24), [Expr(Call(Attribute(Name('parents', Load(), lineno=837, col_offset=16), 'append', Load(), lineno=837, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=837, col_offset=31), 'classlink', Load(), lineno=837, col_offset=31), [Name('base', Load(), lineno=837, col_offset=46), Attribute(Name('object', Load(), lineno=837, col_offset=52), '__module__', Load(), lineno=837, col_offset=52)], [], None, None, lineno=837, col_offset=31)], [], None, None, lineno=837, col_offset=16), lineno=837, col_offset=16)], [], lineno=836, col_offset=12), Assign([Name('title', Store(), lineno=838, col_offset=12)], BinOp(Name('title', Load(), lineno=838, col_offset=20), Add(), BinOp(Str('(%s)', lineno=838, col_offset=28), Mod(), Call(Name('join', Load(), lineno=838, col_offset=37), [Name('parents', Load(), lineno=838, col_offset=42), Str(', ', lineno=838, col_offset=51)], [], None, None, lineno=838, col_offset=37), lineno=838, col_offset=28), lineno=838, col_offset=20), lineno=838, col_offset=12)], [], lineno=834, col_offset=8), Assign([Name('doc', Store(), lineno=839, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=839, col_offset=14), 'markup', Load(), lineno=839, col_offset=14), [Call(Name('getdoc', Load(), lineno=839, col_offset=26), [Name('object', Load(), lineno=839, col_offset=33)], [], None, None, lineno=839, col_offset=26), Attribute(Name('self', Load(), lineno=839, col_offset=42), 'preformat', Load(), lineno=839, col_offset=42), Name('funcs', Load(), lineno=839, col_offset=58), Name('classes', Load(), lineno=839, col_offset=65), Name('mdict', Load(), lineno=839, col_offset=74)], [], None, None, lineno=839, col_offset=14), lineno=839, col_offset=8), Assign([Name('doc', Store(), lineno=840, col_offset=8)], BoolOp(And(), [Name('doc', Load(), lineno=840, col_offset=14), BinOp(Str('<tt>%s<br>&nbsp;</tt>', lineno=840, col_offset=22), Mod(), Name('doc', Load(), lineno=840, col_offset=48), lineno=840, col_offset=22)], lineno=840, col_offset=14), lineno=840, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=842, col_offset=15), 'section', Load(), lineno=842, col_offset=15), [Name('title', Load(), lineno=842, col_offset=28), Str('#000000', lineno=842, col_offset=35), Str('#ffc8d8', lineno=842, col_offset=46), Name('contents', Load(), lineno=842, col_offset=57), Num(3, lineno=842, col_offset=67), Name('doc', Load(), lineno=842, col_offset=70)], [], None, None, lineno=842, col_offset=15), lineno=842, col_offset=8)], [], lineno=704, col_offset=4), FunctionDef('formatvalue', arguments([Name('self', Param(), lineno=844, col_offset=20), Name('object', Param(), lineno=844, col_offset=26)], None, None, []), [Expr(Str('Format an argument default value as text.', lineno=845, col_offset=8), lineno=845, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=846, col_offset=15), 'grey', Load(), lineno=846, col_offset=15), [BinOp(Str('=', lineno=846, col_offset=25), Add(), Call(Attribute(Name('self', Load(), lineno=846, col_offset=31), 'repr', Load(), lineno=846, col_offset=31), [Name('object', Load(), lineno=846, col_offset=41)], [], None, None, lineno=846, col_offset=31), lineno=846, col_offset=25)], [], None, None, lineno=846, col_offset=15), lineno=846, col_offset=8)], [], lineno=844, col_offset=4), FunctionDef('docroutine', arguments([Name('self', Param(), lineno=848, col_offset=19), Name('object', Param(), lineno=848, col_offset=25), Name('name', Param(), lineno=848, col_offset=33), Name('mod', Param(), lineno=848, col_offset=44), Name('funcs', Param(), lineno=849, col_offset=19), Name('classes', Param(), lineno=849, col_offset=29), Name('methods', Param(), lineno=849, col_offset=41), Name('cl', Param(), lineno=849, col_offset=53)], None, None, [Name('None', Load(), lineno=848, col_offset=38), Name('None', Load(), lineno=848, col_offset=48), Dict([], [], lineno=849, col_offset=25), Dict([], [], lineno=849, col_offset=37), Dict([], [], lineno=849, col_offset=49), Name('None', Load(), lineno=849, col_offset=56)]), [Expr(Str('Produce HTML documentation for a function or method object.', lineno=850, col_offset=8), lineno=850, col_offset=8), Assign([Name('realname', Store(), lineno=851, col_offset=8)], Attribute(Name('object', Load(), lineno=851, col_offset=19), '__name__', Load(), lineno=851, col_offset=19), lineno=851, col_offset=8), Assign([Name('name', Store(), lineno=852, col_offset=8)], BoolOp(Or(), [Name('name', Load(), lineno=852, col_offset=15), Name('realname', Load(), lineno=852, col_offset=23)], lineno=852, col_offset=15), lineno=852, col_offset=8), Assign([Name('anchor', Store(), lineno=853, col_offset=8)], BinOp(BinOp(BoolOp(Or(), [BoolOp(And(), [Name('cl', Load(), lineno=853, col_offset=18), Attribute(Name('cl', Load(), lineno=853, col_offset=25), '__name__', Load(), lineno=853, col_offset=25)], lineno=853, col_offset=18), Str('', lineno=853, col_offset=40)], lineno=853, col_offset=18), Add(), Str('-', lineno=853, col_offset=46), lineno=853, col_offset=17), Add(), Name('name', Load(), lineno=853, col_offset=52), lineno=853, col_offset=50), lineno=853, col_offset=8), Assign([Name('note', Store(), lineno=854, col_offset=8)], Str('', lineno=854, col_offset=15), lineno=854, col_offset=8), Assign([Name('skipdocs', Store(), lineno=855, col_offset=8)], Num(0, lineno=855, col_offset=19), lineno=855, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=856, col_offset=11), 'ismethod', Load(), lineno=856, col_offset=11), [Name('object', Load(), lineno=856, col_offset=28)], [], None, None, lineno=856, col_offset=11), [Assign([Name('imclass', Store(), lineno=857, col_offset=12)], Attribute(Name('object', Load(), lineno=857, col_offset=22), 'im_class', Load(), lineno=857, col_offset=22), lineno=857, col_offset=12), If(Name('cl', Load(), lineno=858, col_offset=15), [If(Compare(Name('imclass', Load(), lineno=859, col_offset=19), [IsNot()], [Name('cl', Load(), lineno=859, col_offset=34)], lineno=859, col_offset=19), [Assign([Name('note', Store(), lineno=860, col_offset=20)], BinOp(Str(' from ', lineno=860, col_offset=27), Add(), Call(Attribute(Name('self', Load(), lineno=860, col_offset=38), 'classlink', Load(), lineno=860, col_offset=38), [Name('imclass', Load(), lineno=860, col_offset=53), Name('mod', Load(), lineno=860, col_offset=62)], [], None, None, lineno=860, col_offset=38), lineno=860, col_offset=27), lineno=860, col_offset=20)], [], lineno=859, col_offset=16)], [If(Compare(Attribute(Name('object', Load(), lineno=862, col_offset=19), 'im_self', Load(), lineno=862, col_offset=19), [IsNot()], [Name('None', Load(), lineno=862, col_offset=41)], lineno=862, col_offset=19), [Assign([Name('note', Store(), lineno=863, col_offset=20)], BinOp(Str(' method of %s instance', lineno=863, col_offset=27), Mod(), Call(Attribute(Name('self', Load(), lineno=863, col_offset=54), 'classlink', Load(), lineno=863, col_offset=54), [Attribute(Attribute(Name('object', Load(), lineno=864, col_offset=24), 'im_self', Load(), lineno=864, col_offset=24), '__class__', Load(), lineno=864, col_offset=24), Name('mod', Load(), lineno=864, col_offset=50)], [], None, None, lineno=863, col_offset=54), lineno=863, col_offset=27), lineno=863, col_offset=20)], [Assign([Name('note', Store(), lineno=866, col_offset=20)], BinOp(Str(' unbound %s method', lineno=866, col_offset=27), Mod(), Call(Attribute(Name('self', Load(), lineno=866, col_offset=50), 'classlink', Load(), lineno=866, col_offset=50), [Name('imclass', Load(), lineno=866, col_offset=65), Name('mod', Load(), lineno=866, col_offset=73)], [], None, None, lineno=866, col_offset=50), lineno=866, col_offset=27), lineno=866, col_offset=20)], lineno=862, col_offset=16)], lineno=858, col_offset=12), Assign([Name('object', Store(), lineno=867, col_offset=12)], Attribute(Name('object', Load(), lineno=867, col_offset=21), 'im_func', Load(), lineno=867, col_offset=21), lineno=867, col_offset=12)], [], lineno=856, col_offset=8), If(Compare(Name('name', Load(), lineno=869, col_offset=11), [Eq()], [Name('realname', Load(), lineno=869, col_offset=19)], lineno=869, col_offset=11), [Assign([Name('title', Store(), lineno=870, col_offset=12)], BinOp(Str('<a name="%s"><strong>%s</strong></a>', lineno=870, col_offset=20), Mod(), Tuple([Name('anchor', Load(), lineno=870, col_offset=62), Name('realname', Load(), lineno=870, col_offset=70)], Load(), lineno=870, col_offset=62), lineno=870, col_offset=20), lineno=870, col_offset=12)], [If(BoolOp(And(), [Name('cl', Load(), lineno=872, col_offset=16), Compare(Name('realname', Load(), lineno=872, col_offset=23), [In()], [Attribute(Name('cl', Load(), lineno=872, col_offset=35), '__dict__', Load(), lineno=872, col_offset=35)], lineno=872, col_offset=23), Compare(Subscript(Attribute(Name('cl', Load(), lineno=873, col_offset=16), '__dict__', Load(), lineno=873, col_offset=16), Index(Name('realname', Load(), lineno=873, col_offset=28)), Load(), lineno=873, col_offset=16), [Is()], [Name('object', Load(), lineno=873, col_offset=41)], lineno=873, col_offset=16)], lineno=872, col_offset=16), [Assign([Name('reallink', Store(), lineno=874, col_offset=16)], BinOp(Str('<a href="#%s">%s</a>', lineno=874, col_offset=27), Mod(), Tuple([BinOp(BinOp(Attribute(Name('cl', Load(), lineno=875, col_offset=20), '__name__', Load(), lineno=875, col_offset=20), Add(), Str('-', lineno=875, col_offset=34), lineno=875, col_offset=20), Add(), Name('realname', Load(), lineno=875, col_offset=40), lineno=875, col_offset=38), Name('realname', Load(), lineno=875, col_offset=50)], Load(), lineno=875, col_offset=20), lineno=874, col_offset=27), lineno=874, col_offset=16), Assign([Name('skipdocs', Store(), lineno=876, col_offset=16)], Num(1, lineno=876, col_offset=27), lineno=876, col_offset=16)], [Assign([Name('reallink', Store(), lineno=878, col_offset=16)], Name('realname', Load(), lineno=878, col_offset=27), lineno=878, col_offset=16)], lineno=872, col_offset=12), Assign([Name('title', Store(), lineno=879, col_offset=12)], BinOp(Str('<a name="%s"><strong>%s</strong></a> = %s', lineno=879, col_offset=20), Mod(), Tuple([Name('anchor', Load(), lineno=880, col_offset=16), Name('name', Load(), lineno=880, col_offset=24), Name('reallink', Load(), lineno=880, col_offset=30)], Load(), lineno=880, col_offset=16), lineno=879, col_offset=20), lineno=879, col_offset=12)], lineno=869, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=881, col_offset=11), 'isfunction', Load(), lineno=881, col_offset=11), [Name('object', Load(), lineno=881, col_offset=30)], [], None, None, lineno=881, col_offset=11), [Assign([Tuple([Name('args', Store(), lineno=882, col_offset=12), Name('varargs', Store(), lineno=882, col_offset=18), Name('varkw', Store(), lineno=882, col_offset=27), Name('defaults', Store(), lineno=882, col_offset=34)], Store(), lineno=882, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=882, col_offset=45), 'getargspec', Load(), lineno=882, col_offset=45), [Name('object', Load(), lineno=882, col_offset=64)], [], None, None, lineno=882, col_offset=45), lineno=882, col_offset=12), Assign([Name('argspec', Store(), lineno=883, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=883, col_offset=22), 'formatargspec', Load(), lineno=883, col_offset=22), [Name('args', Load(), lineno=884, col_offset=16), Name('varargs', Load(), lineno=884, col_offset=22), Name('varkw', Load(), lineno=884, col_offset=31), Name('defaults', Load(), lineno=884, col_offset=38)], [keyword('formatvalue', Attribute(Name('self', Load(), lineno=884, col_offset=60), 'formatvalue', Load(), lineno=884, col_offset=60))], None, None, lineno=883, col_offset=22), lineno=883, col_offset=12), If(Compare(Name('realname', Load(), lineno=885, col_offset=15), [Eq()], [Str('<lambda>', lineno=885, col_offset=27)], lineno=885, col_offset=15), [Assign([Name('title', Store(), lineno=886, col_offset=16)], BinOp(Str('<strong>%s</strong> <em>lambda</em> ', lineno=886, col_offset=24), Mod(), Name('name', Load(), lineno=886, col_offset=65), lineno=886, col_offset=24), lineno=886, col_offset=16), Assign([Name('argspec', Store(), lineno=887, col_offset=16)], Subscript(Name('argspec', Load(), lineno=887, col_offset=26), Slice(Num(1, lineno=887, col_offset=34), Num(-1, lineno=887, col_offset=37), None), Load(), lineno=887, col_offset=26), lineno=887, col_offset=16)], [], lineno=885, col_offset=12)], [Assign([Name('argspec', Store(), lineno=889, col_offset=12)], Str('(...)', lineno=889, col_offset=22), lineno=889, col_offset=12)], lineno=881, col_offset=8), Assign([Name('decl', Store(), lineno=891, col_offset=8)], BinOp(BinOp(Name('title', Load(), lineno=891, col_offset=15), Add(), Name('argspec', Load(), lineno=891, col_offset=23), lineno=891, col_offset=15), Add(), BoolOp(And(), [Name('note', Load(), lineno=891, col_offset=34), Call(Attribute(Name('self', Load(), lineno=891, col_offset=43), 'grey', Load(), lineno=891, col_offset=43), [BinOp(Str('<font face="helvetica, arial">%s</font>', lineno=892, col_offset=15), Mod(), Name('note', Load(), lineno=892, col_offset=59), lineno=892, col_offset=15)], [], None, None, lineno=891, col_offset=43)], lineno=891, col_offset=34), lineno=891, col_offset=31), lineno=891, col_offset=8), If(Name('skipdocs', Load(), lineno=894, col_offset=11), [Return(BinOp(Str('<dl><dt>%s</dt></dl>\n', lineno=895, col_offset=19), Mod(), Name('decl', Load(), lineno=895, col_offset=46), lineno=895, col_offset=19), lineno=895, col_offset=12)], [Assign([Name('doc', Store(), lineno=897, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=897, col_offset=18), 'markup', Load(), lineno=897, col_offset=18), [Call(Name('getdoc', Load(), lineno=898, col_offset=16), [Name('object', Load(), lineno=898, col_offset=23)], [], None, None, lineno=898, col_offset=16), Attribute(Name('self', Load(), lineno=898, col_offset=32), 'preformat', Load(), lineno=898, col_offset=32), Name('funcs', Load(), lineno=898, col_offset=48), Name('classes', Load(), lineno=898, col_offset=55), Name('methods', Load(), lineno=898, col_offset=64)], [], None, None, lineno=897, col_offset=18), lineno=897, col_offset=12), Assign([Name('doc', Store(), lineno=899, col_offset=12)], BoolOp(And(), [Name('doc', Load(), lineno=899, col_offset=18), BinOp(Str('<dd><tt>%s</tt></dd>', lineno=899, col_offset=26), Mod(), Name('doc', Load(), lineno=899, col_offset=51), lineno=899, col_offset=26)], lineno=899, col_offset=18), lineno=899, col_offset=12), Return(BinOp(Str('<dl><dt>%s</dt>%s</dl>\n', lineno=900, col_offset=19), Mod(), Tuple([Name('decl', Load(), lineno=900, col_offset=49), Name('doc', Load(), lineno=900, col_offset=55)], Load(), lineno=900, col_offset=49), lineno=900, col_offset=19), lineno=900, col_offset=12)], lineno=894, col_offset=8)], [], lineno=848, col_offset=4), FunctionDef('_docdescriptor', arguments([Name('self', Param(), lineno=902, col_offset=23), Name('name', Param(), lineno=902, col_offset=29), Name('value', Param(), lineno=902, col_offset=35), Name('mod', Param(), lineno=902, col_offset=42)], None, None, []), [Assign([Name('results', Store(), lineno=903, col_offset=8)], List([], Load(), lineno=903, col_offset=18), lineno=903, col_offset=8), Assign([Name('push', Store(), lineno=904, col_offset=8)], Attribute(Name('results', Load(), lineno=904, col_offset=15), 'append', Load(), lineno=904, col_offset=15), lineno=904, col_offset=8), If(Name('name', Load(), lineno=906, col_offset=11), [Expr(Call(Name('push', Load(), lineno=907, col_offset=12), [BinOp(Str('<dl><dt><strong>%s</strong></dt>\n', lineno=907, col_offset=17), Mod(), Name('name', Load(), lineno=907, col_offset=56), lineno=907, col_offset=17)], [], None, None, lineno=907, col_offset=12), lineno=907, col_offset=12)], [], lineno=906, col_offset=8), If(Compare(Attribute(Name('value', Load(), lineno=908, col_offset=11), '__doc__', Load(), lineno=908, col_offset=11), [IsNot()], [Name('None', Load(), lineno=908, col_offset=32)], lineno=908, col_offset=11), [Assign([Name('doc', Store(), lineno=909, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=909, col_offset=18), 'markup', Load(), lineno=909, col_offset=18), [Call(Name('getdoc', Load(), lineno=909, col_offset=30), [Name('value', Load(), lineno=909, col_offset=37)], [], None, None, lineno=909, col_offset=30), Attribute(Name('self', Load(), lineno=909, col_offset=45), 'preformat', Load(), lineno=909, col_offset=45)], [], None, None, lineno=909, col_offset=18), lineno=909, col_offset=12), Expr(Call(Name('push', Load(), lineno=910, col_offset=12), [BinOp(Str('<dd><tt>%s</tt></dd>\n', lineno=910, col_offset=17), Mod(), Name('doc', Load(), lineno=910, col_offset=44), lineno=910, col_offset=17)], [], None, None, lineno=910, col_offset=12), lineno=910, col_offset=12)], [], lineno=908, col_offset=8), Expr(Call(Name('push', Load(), lineno=911, col_offset=8), [Str('</dl>\n', lineno=911, col_offset=13)], [], None, None, lineno=911, col_offset=8), lineno=911, col_offset=8), Return(Call(Attribute(Str('', lineno=913, col_offset=15), 'join', Load(), lineno=913, col_offset=15), [Name('results', Load(), lineno=913, col_offset=23)], [], None, None, lineno=913, col_offset=15), lineno=913, col_offset=8)], [], lineno=902, col_offset=4), FunctionDef('docproperty', arguments([Name('self', Param(), lineno=915, col_offset=20), Name('object', Param(), lineno=915, col_offset=26), Name('name', Param(), lineno=915, col_offset=34), Name('mod', Param(), lineno=915, col_offset=45), Name('cl', Param(), lineno=915, col_offset=55)], None, None, [Name('None', Load(), lineno=915, col_offset=39), Name('None', Load(), lineno=915, col_offset=49), Name('None', Load(), lineno=915, col_offset=58)]), [Expr(Str('Produce html documentation for a property.', lineno=916, col_offset=8), lineno=916, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=917, col_offset=15), '_docdescriptor', Load(), lineno=917, col_offset=15), [Name('name', Load(), lineno=917, col_offset=35), Name('object', Load(), lineno=917, col_offset=41), Name('mod', Load(), lineno=917, col_offset=49)], [], None, None, lineno=917, col_offset=15), lineno=917, col_offset=8)], [], lineno=915, col_offset=4), FunctionDef('docother', arguments([Name('self', Param(), lineno=919, col_offset=17), Name('object', Param(), lineno=919, col_offset=23), Name('name', Param(), lineno=919, col_offset=31), Name('mod', Param(), lineno=919, col_offset=42)], 'ignored', None, [Name('None', Load(), lineno=919, col_offset=36), Name('None', Load(), lineno=919, col_offset=46)]), [Expr(Str('Produce HTML documentation for a data object.', lineno=920, col_offset=8), lineno=920, col_offset=8), Assign([Name('lhs', Store(), lineno=921, col_offset=8)], BoolOp(Or(), [BoolOp(And(), [Name('name', Load(), lineno=921, col_offset=14), BinOp(Str('<strong>%s</strong> = ', lineno=921, col_offset=23), Mod(), Name('name', Load(), lineno=921, col_offset=50), lineno=921, col_offset=23)], lineno=921, col_offset=14), Str('', lineno=921, col_offset=58)], lineno=921, col_offset=14), lineno=921, col_offset=8), Return(BinOp(Name('lhs', Load(), lineno=922, col_offset=15), Add(), Call(Attribute(Name('self', Load(), lineno=922, col_offset=21), 'repr', Load(), lineno=922, col_offset=21), [Name('object', Load(), lineno=922, col_offset=31)], [], None, None, lineno=922, col_offset=21), lineno=922, col_offset=15), lineno=922, col_offset=8)], [], lineno=919, col_offset=4), FunctionDef('docdata', arguments([Name('self', Param(), lineno=924, col_offset=16), Name('object', Param(), lineno=924, col_offset=22), Name('name', Param(), lineno=924, col_offset=30), Name('mod', Param(), lineno=924, col_offset=41), Name('cl', Param(), lineno=924, col_offset=51)], None, None, [Name('None', Load(), lineno=924, col_offset=35), Name('None', Load(), lineno=924, col_offset=45), Name('None', Load(), lineno=924, col_offset=54)]), [Expr(Str('Produce html documentation for a data descriptor.', lineno=925, col_offset=8), lineno=925, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=926, col_offset=15), '_docdescriptor', Load(), lineno=926, col_offset=15), [Name('name', Load(), lineno=926, col_offset=35), Name('object', Load(), lineno=926, col_offset=41), Name('mod', Load(), lineno=926, col_offset=49)], [], None, None, lineno=926, col_offset=15), lineno=926, col_offset=8)], [], lineno=924, col_offset=4), FunctionDef('index', arguments([Name('self', Param(), lineno=928, col_offset=14), Name('dir', Param(), lineno=928, col_offset=20), Name('shadowed', Param(), lineno=928, col_offset=25)], None, None, [Name('None', Load(), lineno=928, col_offset=34)]), [Expr(Str('Generate an HTML index for a directory of modules.', lineno=929, col_offset=8), lineno=929, col_offset=8), Assign([Name('modpkgs', Store(), lineno=930, col_offset=8)], List([], Load(), lineno=930, col_offset=18), lineno=930, col_offset=8), If(Compare(Name('shadowed', Load(), lineno=931, col_offset=11), [Is()], [Name('None', Load(), lineno=931, col_offset=23)], lineno=931, col_offset=11), [Assign([Name('shadowed', Store(), lineno=931, col_offset=29)], Dict([], [], lineno=931, col_offset=40), lineno=931, col_offset=29)], [], lineno=931, col_offset=8), For(Tuple([Name('importer', Store(), lineno=932, col_offset=12), Name('name', Store(), lineno=932, col_offset=22), Name('ispkg', Store(), lineno=932, col_offset=28)], Store(), lineno=932, col_offset=12), Call(Attribute(Name('pkgutil', Load(), lineno=932, col_offset=37), 'iter_modules', Load(), lineno=932, col_offset=37), [List([Name('dir', Load(), lineno=932, col_offset=59)], Load(), lineno=932, col_offset=58)], [], None, None, lineno=932, col_offset=37), [Expr(Call(Attribute(Name('modpkgs', Load(), lineno=933, col_offset=12), 'append', Load(), lineno=933, col_offset=12), [Tuple([Name('name', Load(), lineno=933, col_offset=28), Str('', lineno=933, col_offset=34), Name('ispkg', Load(), lineno=933, col_offset=38), Compare(Name('name', Load(), lineno=933, col_offset=45), [In()], [Name('shadowed', Load(), lineno=933, col_offset=53)], lineno=933, col_offset=45)], Load(), lineno=933, col_offset=28)], [], None, None, lineno=933, col_offset=12), lineno=933, col_offset=12), Assign([Subscript(Name('shadowed', Load(), lineno=934, col_offset=12), Index(Name('name', Load(), lineno=934, col_offset=21)), Store(), lineno=934, col_offset=12)], Num(1, lineno=934, col_offset=29), lineno=934, col_offset=12)], [], lineno=932, col_offset=8), Expr(Call(Attribute(Name('modpkgs', Load(), lineno=936, col_offset=8), 'sort', Load(), lineno=936, col_offset=8), [], [], None, None, lineno=936, col_offset=8), lineno=936, col_offset=8), Assign([Name('contents', Store(), lineno=937, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=937, col_offset=19), 'multicolumn', Load(), lineno=937, col_offset=19), [Name('modpkgs', Load(), lineno=937, col_offset=36), Attribute(Name('self', Load(), lineno=937, col_offset=45), 'modpkglink', Load(), lineno=937, col_offset=45)], [], None, None, lineno=937, col_offset=19), lineno=937, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=938, col_offset=15), 'bigsection', Load(), lineno=938, col_offset=15), [Name('dir', Load(), lineno=938, col_offset=31), Str('#ffffff', lineno=938, col_offset=36), Str('#ee77aa', lineno=938, col_offset=47), Name('contents', Load(), lineno=938, col_offset=58)], [], None, None, lineno=938, col_offset=15), lineno=938, col_offset=8)], [], lineno=928, col_offset=4)], [], lineno=413, col_offset=0), ClassDef('TextRepr', [Name('Repr', Load(), lineno=942, col_offset=15)], [Expr(Str('Class for safely making a text representation of a Python object.', lineno=943, col_offset=4), lineno=943, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=944, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('Repr', Load(), lineno=945, col_offset=8), '__init__', Load(), lineno=945, col_offset=8), [Name('self', Load(), lineno=945, col_offset=22)], [], None, None, lineno=945, col_offset=8), lineno=945, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=946, col_offset=8), 'maxlist', Store(), lineno=946, col_offset=8), Attribute(Name('self', Load(), lineno=946, col_offset=23), 'maxtuple', Store(), lineno=946, col_offset=23)], Num(20, lineno=946, col_offset=39), lineno=946, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=947, col_offset=8), 'maxdict', Store(), lineno=947, col_offset=8)], Num(10, lineno=947, col_offset=23), lineno=947, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=948, col_offset=8), 'maxstring', Store(), lineno=948, col_offset=8), Attribute(Name('self', Load(), lineno=948, col_offset=25), 'maxother', Store(), lineno=948, col_offset=25)], Num(100, lineno=948, col_offset=41), lineno=948, col_offset=8)], [], lineno=944, col_offset=4), FunctionDef('repr1', arguments([Name('self', Param(), lineno=950, col_offset=14), Name('x', Param(), lineno=950, col_offset=20), Name('level', Param(), lineno=950, col_offset=23)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=951, col_offset=11), [Call(Name('type', Load(), lineno=951, col_offset=19), [Name('x', Load(), lineno=951, col_offset=24)], [], None, None, lineno=951, col_offset=19), Str('__name__', lineno=951, col_offset=28)], [], None, None, lineno=951, col_offset=11), [Assign([Name('methodname', Store(), lineno=952, col_offset=12)], BinOp(Str('repr_', lineno=952, col_offset=25), Add(), Call(Name('join', Load(), lineno=952, col_offset=35), [Call(Name('split', Load(), lineno=952, col_offset=40), [Attribute(Call(Name('type', Load(), lineno=952, col_offset=46), [Name('x', Load(), lineno=952, col_offset=51)], [], None, None, lineno=952, col_offset=46), '__name__', Load(), lineno=952, col_offset=46)], [], None, None, lineno=952, col_offset=40), Str('_', lineno=952, col_offset=65)], [], None, None, lineno=952, col_offset=35), lineno=952, col_offset=25), lineno=952, col_offset=12), If(Call(Name('hasattr', Load(), lineno=953, col_offset=15), [Name('self', Load(), lineno=953, col_offset=23), Name('methodname', Load(), lineno=953, col_offset=29)], [], None, None, lineno=953, col_offset=15), [Return(Call(Call(Name('getattr', Load(), lineno=954, col_offset=23), [Name('self', Load(), lineno=954, col_offset=31), Name('methodname', Load(), lineno=954, col_offset=37)], [], None, None, lineno=954, col_offset=23), [Name('x', Load(), lineno=954, col_offset=49), Name('level', Load(), lineno=954, col_offset=52)], [], None, None, lineno=954, col_offset=23), lineno=954, col_offset=16)], [], lineno=953, col_offset=12)], [], lineno=951, col_offset=8), Return(Call(Name('cram', Load(), lineno=955, col_offset=15), [Call(Name('stripid', Load(), lineno=955, col_offset=20), [Call(Name('repr', Load(), lineno=955, col_offset=28), [Name('x', Load(), lineno=955, col_offset=33)], [], None, None, lineno=955, col_offset=28)], [], None, None, lineno=955, col_offset=20), Attribute(Name('self', Load(), lineno=955, col_offset=38), 'maxother', Load(), lineno=955, col_offset=38)], [], None, None, lineno=955, col_offset=15), lineno=955, col_offset=8)], [], lineno=950, col_offset=4), FunctionDef('repr_string', arguments([Name('self', Param(), lineno=957, col_offset=20), Name('x', Param(), lineno=957, col_offset=26), Name('level', Param(), lineno=957, col_offset=29)], None, None, []), [Assign([Name('test', Store(), lineno=958, col_offset=8)], Call(Name('cram', Load(), lineno=958, col_offset=15), [Name('x', Load(), lineno=958, col_offset=20), Attribute(Name('self', Load(), lineno=958, col_offset=23), 'maxstring', Load(), lineno=958, col_offset=23)], [], None, None, lineno=958, col_offset=15), lineno=958, col_offset=8), Assign([Name('testrepr', Store(), lineno=959, col_offset=8)], Call(Name('repr', Load(), lineno=959, col_offset=19), [Name('test', Load(), lineno=959, col_offset=24)], [], None, None, lineno=959, col_offset=19), lineno=959, col_offset=8), If(BoolOp(And(), [Compare(Str('\\', lineno=960, col_offset=11), [In()], [Name('test', Load(), lineno=960, col_offset=19)], lineno=960, col_offset=11), Compare(Str('\\', lineno=960, col_offset=28), [NotIn()], [Call(Name('replace', Load(), lineno=960, col_offset=40), [Name('testrepr', Load(), lineno=960, col_offset=48), Str('\\\\', lineno=960, col_offset=58), Str('', lineno=960, col_offset=65)], [], None, None, lineno=960, col_offset=40)], lineno=960, col_offset=28)], lineno=960, col_offset=11), [Return(BinOp(BinOp(BinOp(Str('r', lineno=963, col_offset=19), Add(), Subscript(Name('testrepr', Load(), lineno=963, col_offset=25), Index(Num(0, lineno=963, col_offset=34)), Load(), lineno=963, col_offset=25), lineno=963, col_offset=19), Add(), Name('test', Load(), lineno=963, col_offset=39), lineno=963, col_offset=37), Add(), Subscript(Name('testrepr', Load(), lineno=963, col_offset=46), Index(Num(0, lineno=963, col_offset=55)), Load(), lineno=963, col_offset=46), lineno=963, col_offset=44), lineno=963, col_offset=12)], [], lineno=960, col_offset=8), Return(Name('testrepr', Load(), lineno=964, col_offset=15), lineno=964, col_offset=8)], [], lineno=957, col_offset=4), Assign([Name('repr_str', Store(), lineno=966, col_offset=4)], Name('repr_string', Load(), lineno=966, col_offset=15), lineno=966, col_offset=4), FunctionDef('repr_instance', arguments([Name('self', Param(), lineno=968, col_offset=22), Name('x', Param(), lineno=968, col_offset=28), Name('level', Param(), lineno=968, col_offset=31)], None, None, []), [TryExcept([Return(Call(Name('cram', Load(), lineno=970, col_offset=19), [Call(Name('stripid', Load(), lineno=970, col_offset=24), [Call(Name('repr', Load(), lineno=970, col_offset=32), [Name('x', Load(), lineno=970, col_offset=37)], [], None, None, lineno=970, col_offset=32)], [], None, None, lineno=970, col_offset=24), Attribute(Name('self', Load(), lineno=970, col_offset=42), 'maxstring', Load(), lineno=970, col_offset=42)], [], None, None, lineno=970, col_offset=19), lineno=970, col_offset=12)], [ExceptHandler(None, None, [Return(BinOp(Str('<%s instance>', lineno=972, col_offset=19), Mod(), Attribute(Attribute(Name('x', Load(), lineno=972, col_offset=37), '__class__', Load(), lineno=972, col_offset=37), '__name__', Load(), lineno=972, col_offset=37), lineno=972, col_offset=19), lineno=972, col_offset=12)], lineno=971, col_offset=8)], [], lineno=969, col_offset=8)], [], lineno=968, col_offset=4)], [], lineno=942, col_offset=0), ClassDef('TextDoc', [Name('Doc', Load(), lineno=974, col_offset=14)], [Expr(Str('Formatter class for text documentation.', lineno=975, col_offset=4), lineno=975, col_offset=4), Assign([Name('_repr_instance', Store(), lineno=979, col_offset=4)], Call(Name('TextRepr', Load(), lineno=979, col_offset=21), [], [], None, None, lineno=979, col_offset=21), lineno=979, col_offset=4), Assign([Name('repr', Store(), lineno=980, col_offset=4)], Attribute(Name('_repr_instance', Load(), lineno=980, col_offset=11), 'repr', Load(), lineno=980, col_offset=11), lineno=980, col_offset=4), FunctionDef('bold', arguments([Name('self', Param(), lineno=982, col_offset=13), Name('text', Param(), lineno=982, col_offset=19)], None, None, []), [Expr(Str('Format a string in bold by overstriking.', lineno=983, col_offset=8), lineno=983, col_offset=8), Return(Call(Name('join', Load(), lineno=984, col_offset=15), [Call(Name('map', Load(), lineno=984, col_offset=20), [Lambda(arguments([Name('ch', Param(), lineno=984, col_offset=31)], None, None, []), BinOp(BinOp(Name('ch', Load(), lineno=984, col_offset=35), Add(), Str('\x08', lineno=984, col_offset=40), lineno=984, col_offset=35), Add(), Name('ch', Load(), lineno=984, col_offset=47), lineno=984, col_offset=45), lineno=984, col_offset=24), Name('text', Load(), lineno=984, col_offset=51)], [], None, None, lineno=984, col_offset=20), Str('', lineno=984, col_offset=58)], [], None, None, lineno=984, col_offset=15), lineno=984, col_offset=8)], [], lineno=982, col_offset=4), FunctionDef('indent', arguments([Name('self', Param(), lineno=986, col_offset=15), Name('text', Param(), lineno=986, col_offset=21), Name('prefix', Param(), lineno=986, col_offset=27)], None, None, [Str('    ', lineno=986, col_offset=34)]), [Expr(Str('Indent text by prepending a given prefix to each line.', lineno=987, col_offset=8), lineno=987, col_offset=8), If(UnaryOp(Not(), Name('text', Load(), lineno=988, col_offset=15), lineno=988, col_offset=11), [Return(Str('', lineno=988, col_offset=28), lineno=988, col_offset=21)], [], lineno=988, col_offset=8), Assign([Name('lines', Store(), lineno=989, col_offset=8)], Call(Name('split', Load(), lineno=989, col_offset=16), [Name('text', Load(), lineno=989, col_offset=22), Str('\n', lineno=989, col_offset=28)], [], None, None, lineno=989, col_offset=16), lineno=989, col_offset=8), Assign([Name('lines', Store(), lineno=990, col_offset=8)], Call(Name('map', Load(), lineno=990, col_offset=16), [Lambda(arguments([Name('line', Param(), lineno=990, col_offset=27), Name('prefix', Param(), lineno=990, col_offset=33)], None, None, [Name('prefix', Load(), lineno=990, col_offset=40)]), BinOp(Name('prefix', Load(), lineno=990, col_offset=48), Add(), Name('line', Load(), lineno=990, col_offset=57), lineno=990, col_offset=48), lineno=990, col_offset=20), Name('lines', Load(), lineno=990, col_offset=63)], [], None, None, lineno=990, col_offset=16), lineno=990, col_offset=8), If(Name('lines', Load(), lineno=991, col_offset=11), [Assign([Subscript(Name('lines', Load(), lineno=991, col_offset=18), Index(Num(-1, lineno=991, col_offset=25)), Store(), lineno=991, col_offset=18)], Call(Name('rstrip', Load(), lineno=991, col_offset=30), [Subscript(Name('lines', Load(), lineno=991, col_offset=37), Index(Num(-1, lineno=991, col_offset=44)), Load(), lineno=991, col_offset=37)], [], None, None, lineno=991, col_offset=30), lineno=991, col_offset=18)], [], lineno=991, col_offset=8), Return(Call(Name('join', Load(), lineno=992, col_offset=15), [Name('lines', Load(), lineno=992, col_offset=20), Str('\n', lineno=992, col_offset=27)], [], None, None, lineno=992, col_offset=15), lineno=992, col_offset=8)], [], lineno=986, col_offset=4), FunctionDef('section', arguments([Name('self', Param(), lineno=994, col_offset=16), Name('title', Param(), lineno=994, col_offset=22), Name('contents', Param(), lineno=994, col_offset=29)], None, None, []), [Expr(Str('Format a section with a given heading.', lineno=995, col_offset=8), lineno=995, col_offset=8), Return(BinOp(BinOp(BinOp(Call(Attribute(Name('self', Load(), lineno=996, col_offset=15), 'bold', Load(), lineno=996, col_offset=15), [Name('title', Load(), lineno=996, col_offset=25)], [], None, None, lineno=996, col_offset=15), Add(), Str('\n', lineno=996, col_offset=34), lineno=996, col_offset=15), Add(), Call(Name('rstrip', Load(), lineno=996, col_offset=41), [Call(Attribute(Name('self', Load(), lineno=996, col_offset=48), 'indent', Load(), lineno=996, col_offset=48), [Name('contents', Load(), lineno=996, col_offset=60)], [], None, None, lineno=996, col_offset=48)], [], None, None, lineno=996, col_offset=41), lineno=996, col_offset=39), Add(), Str('\n\n', lineno=996, col_offset=73), lineno=996, col_offset=71), lineno=996, col_offset=8)], [], lineno=994, col_offset=4), FunctionDef('formattree', arguments([Name('self', Param(), lineno=1000, col_offset=19), Name('tree', Param(), lineno=1000, col_offset=25), Name('modname', Param(), lineno=1000, col_offset=31), Name('parent', Param(), lineno=1000, col_offset=40), Name('prefix', Param(), lineno=1000, col_offset=53)], None, None, [Name('None', Load(), lineno=1000, col_offset=47), Str('', lineno=1000, col_offset=60)]), [Expr(Str('Render in text a class tree as returned by inspect.getclasstree().', lineno=1001, col_offset=8), lineno=1001, col_offset=8), Assign([Name('result', Store(), lineno=1002, col_offset=8)], Str('', lineno=1002, col_offset=17), lineno=1002, col_offset=8), For(Name('entry', Store(), lineno=1003, col_offset=12), Name('tree', Load(), lineno=1003, col_offset=21), [If(Compare(Call(Name('type', Load(), lineno=1004, col_offset=15), [Name('entry', Load(), lineno=1004, col_offset=20)], [], None, None, lineno=1004, col_offset=15), [Is()], [Call(Name('type', Load(), lineno=1004, col_offset=30), [Tuple([], Load(), lineno=1004, col_offset=35)], [], None, None, lineno=1004, col_offset=30)], lineno=1004, col_offset=15), [Assign([Tuple([Name('c', Store(), lineno=1005, col_offset=16), Name('bases', Store(), lineno=1005, col_offset=19)], Store(), lineno=1005, col_offset=16)], Name('entry', Load(), lineno=1005, col_offset=27), lineno=1005, col_offset=16), Assign([Name('result', Store(), lineno=1006, col_offset=16)], BinOp(BinOp(Name('result', Load(), lineno=1006, col_offset=25), Add(), Name('prefix', Load(), lineno=1006, col_offset=34), lineno=1006, col_offset=25), Add(), Call(Name('classname', Load(), lineno=1006, col_offset=43), [Name('c', Load(), lineno=1006, col_offset=53), Name('modname', Load(), lineno=1006, col_offset=56)], [], None, None, lineno=1006, col_offset=43), lineno=1006, col_offset=41), lineno=1006, col_offset=16), If(BoolOp(And(), [Name('bases', Load(), lineno=1007, col_offset=19), Compare(Name('bases', Load(), lineno=1007, col_offset=29), [NotEq()], [Tuple([Name('parent', Load(), lineno=1007, col_offset=39)], Load(), lineno=1007, col_offset=39)], lineno=1007, col_offset=29)], lineno=1007, col_offset=19), [Assign([Name('parents', Store(), lineno=1008, col_offset=20)], Call(Name('map', Load(), lineno=1008, col_offset=30), [Lambda(arguments([Name('c', Param(), lineno=1008, col_offset=41), Name('m', Param(), lineno=1008, col_offset=44)], None, None, [Name('modname', Load(), lineno=1008, col_offset=46)]), Call(Name('classname', Load(), lineno=1008, col_offset=55), [Name('c', Load(), lineno=1008, col_offset=65), Name('m', Load(), lineno=1008, col_offset=68)], [], None, None, lineno=1008, col_offset=55), lineno=1008, col_offset=34), Name('bases', Load(), lineno=1008, col_offset=72)], [], None, None, lineno=1008, col_offset=30), lineno=1008, col_offset=20), Assign([Name('result', Store(), lineno=1009, col_offset=20)], BinOp(Name('result', Load(), lineno=1009, col_offset=29), Add(), BinOp(Str('(%s)', lineno=1009, col_offset=38), Mod(), Call(Name('join', Load(), lineno=1009, col_offset=47), [Name('parents', Load(), lineno=1009, col_offset=52), Str(', ', lineno=1009, col_offset=61)], [], None, None, lineno=1009, col_offset=47), lineno=1009, col_offset=38), lineno=1009, col_offset=29), lineno=1009, col_offset=20)], [], lineno=1007, col_offset=16), Assign([Name('result', Store(), lineno=1010, col_offset=16)], BinOp(Name('result', Load(), lineno=1010, col_offset=25), Add(), Str('\n', lineno=1010, col_offset=34), lineno=1010, col_offset=25), lineno=1010, col_offset=16)], [If(Compare(Call(Name('type', Load(), lineno=1011, col_offset=17), [Name('entry', Load(), lineno=1011, col_offset=22)], [], None, None, lineno=1011, col_offset=17), [Is()], [Call(Name('type', Load(), lineno=1011, col_offset=32), [List([], Load(), lineno=1011, col_offset=37)], [], None, None, lineno=1011, col_offset=32)], lineno=1011, col_offset=17), [Assign([Name('result', Store(), lineno=1012, col_offset=16)], BinOp(Name('result', Load(), lineno=1012, col_offset=25), Add(), Call(Attribute(Name('self', Load(), lineno=1012, col_offset=34), 'formattree', Load(), lineno=1012, col_offset=34), [Name('entry', Load(), lineno=1013, col_offset=20), Name('modname', Load(), lineno=1013, col_offset=27), Name('c', Load(), lineno=1013, col_offset=36), BinOp(Name('prefix', Load(), lineno=1013, col_offset=39), Add(), Str('    ', lineno=1013, col_offset=48), lineno=1013, col_offset=39)], [], None, None, lineno=1012, col_offset=34), lineno=1012, col_offset=25), lineno=1012, col_offset=16)], [], lineno=1011, col_offset=17)], lineno=1004, col_offset=12)], [], lineno=1003, col_offset=8), Return(Name('result', Load(), lineno=1014, col_offset=15), lineno=1014, col_offset=8)], [], lineno=1000, col_offset=4), FunctionDef('docmodule', arguments([Name('self', Param(), lineno=1016, col_offset=18), Name('object', Param(), lineno=1016, col_offset=24), Name('name', Param(), lineno=1016, col_offset=32), Name('mod', Param(), lineno=1016, col_offset=43)], None, None, [Name('None', Load(), lineno=1016, col_offset=37), Name('None', Load(), lineno=1016, col_offset=47)]), [Expr(Str('Produce text documentation for a given module object.', lineno=1017, col_offset=8), lineno=1017, col_offset=8), Assign([Name('name', Store(), lineno=1018, col_offset=8)], Attribute(Name('object', Load(), lineno=1018, col_offset=15), '__name__', Load(), lineno=1018, col_offset=15), lineno=1018, col_offset=8), Assign([Tuple([Name('synop', Store(), lineno=1019, col_offset=8), Name('desc', Store(), lineno=1019, col_offset=15)], Store(), lineno=1019, col_offset=8)], Call(Name('splitdoc', Load(), lineno=1019, col_offset=22), [Call(Name('getdoc', Load(), lineno=1019, col_offset=31), [Name('object', Load(), lineno=1019, col_offset=38)], [], None, None, lineno=1019, col_offset=31)], [], None, None, lineno=1019, col_offset=22), lineno=1019, col_offset=8), Assign([Name('result', Store(), lineno=1020, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1020, col_offset=17), 'section', Load(), lineno=1020, col_offset=17), [Str('NAME', lineno=1020, col_offset=30), BinOp(Name('name', Load(), lineno=1020, col_offset=38), Add(), BoolOp(And(), [Name('synop', Load(), lineno=1020, col_offset=46), BinOp(Str(' - ', lineno=1020, col_offset=56), Add(), Name('synop', Load(), lineno=1020, col_offset=64), lineno=1020, col_offset=56)], lineno=1020, col_offset=46), lineno=1020, col_offset=38)], [], None, None, lineno=1020, col_offset=17), lineno=1020, col_offset=8), TryExcept([Assign([Name('all', Store(), lineno=1023, col_offset=12)], Attribute(Name('object', Load(), lineno=1023, col_offset=18), '__all__', Load(), lineno=1023, col_offset=18), lineno=1023, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=1024, col_offset=15), None, [Assign([Name('all', Store(), lineno=1025, col_offset=12)], Name('None', Load(), lineno=1025, col_offset=18), lineno=1025, col_offset=12)], lineno=1024, col_offset=8)], [], lineno=1022, col_offset=8), TryExcept([Assign([Name('file', Store(), lineno=1028, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=1028, col_offset=19), 'getabsfile', Load(), lineno=1028, col_offset=19), [Name('object', Load(), lineno=1028, col_offset=38)], [], None, None, lineno=1028, col_offset=19), lineno=1028, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=1029, col_offset=15), None, [Assign([Name('file', Store(), lineno=1030, col_offset=12)], Str('(built-in)', lineno=1030, col_offset=19), lineno=1030, col_offset=12)], lineno=1029, col_offset=8)], [], lineno=1027, col_offset=8), Assign([Name('result', Store(), lineno=1031, col_offset=8)], BinOp(Name('result', Load(), lineno=1031, col_offset=17), Add(), Call(Attribute(Name('self', Load(), lineno=1031, col_offset=26), 'section', Load(), lineno=1031, col_offset=26), [Str('FILE', lineno=1031, col_offset=39), Name('file', Load(), lineno=1031, col_offset=47)], [], None, None, lineno=1031, col_offset=26), lineno=1031, col_offset=17), lineno=1031, col_offset=8), Assign([Name('docloc', Store(), lineno=1033, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1033, col_offset=17), 'getdocloc', Load(), lineno=1033, col_offset=17), [Name('object', Load(), lineno=1033, col_offset=32)], [], None, None, lineno=1033, col_offset=17), lineno=1033, col_offset=8), If(Compare(Name('docloc', Load(), lineno=1034, col_offset=11), [IsNot()], [Name('None', Load(), lineno=1034, col_offset=25)], lineno=1034, col_offset=11), [Assign([Name('result', Store(), lineno=1035, col_offset=12)], BinOp(Name('result', Load(), lineno=1035, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1035, col_offset=30), 'section', Load(), lineno=1035, col_offset=30), [Str('MODULE DOCS', lineno=1035, col_offset=43), Name('docloc', Load(), lineno=1035, col_offset=58)], [], None, None, lineno=1035, col_offset=30), lineno=1035, col_offset=21), lineno=1035, col_offset=12)], [], lineno=1034, col_offset=8), If(Name('desc', Load(), lineno=1037, col_offset=11), [Assign([Name('result', Store(), lineno=1038, col_offset=12)], BinOp(Name('result', Load(), lineno=1038, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1038, col_offset=30), 'section', Load(), lineno=1038, col_offset=30), [Str('DESCRIPTION', lineno=1038, col_offset=43), Name('desc', Load(), lineno=1038, col_offset=58)], [], None, None, lineno=1038, col_offset=30), lineno=1038, col_offset=21), lineno=1038, col_offset=12)], [], lineno=1037, col_offset=8), Assign([Name('classes', Store(), lineno=1040, col_offset=8)], List([], Load(), lineno=1040, col_offset=18), lineno=1040, col_offset=8), For(Tuple([Name('key', Store(), lineno=1041, col_offset=12), Name('value', Store(), lineno=1041, col_offset=17)], Store(), lineno=1041, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=1041, col_offset=26), 'getmembers', Load(), lineno=1041, col_offset=26), [Name('object', Load(), lineno=1041, col_offset=45), Attribute(Name('inspect', Load(), lineno=1041, col_offset=53), 'isclass', Load(), lineno=1041, col_offset=53)], [], None, None, lineno=1041, col_offset=26), [If(BoolOp(Or(), [Compare(Name('all', Load(), lineno=1043, col_offset=16), [IsNot()], [Name('None', Load(), lineno=1043, col_offset=27)], lineno=1043, col_offset=16), Compare(BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=1044, col_offset=20), 'getmodule', Load(), lineno=1044, col_offset=20), [Name('value', Load(), lineno=1044, col_offset=38)], [], None, None, lineno=1044, col_offset=20), Name('object', Load(), lineno=1044, col_offset=48)], lineno=1044, col_offset=20), [Is()], [Name('object', Load(), lineno=1044, col_offset=59)], lineno=1044, col_offset=19)], lineno=1043, col_offset=16), [If(Call(Name('visiblename', Load(), lineno=1045, col_offset=19), [Name('key', Load(), lineno=1045, col_offset=31), Name('all', Load(), lineno=1045, col_offset=36)], [], None, None, lineno=1045, col_offset=19), [Expr(Call(Attribute(Name('classes', Load(), lineno=1046, col_offset=20), 'append', Load(), lineno=1046, col_offset=20), [Tuple([Name('key', Load(), lineno=1046, col_offset=36), Name('value', Load(), lineno=1046, col_offset=41)], Load(), lineno=1046, col_offset=36)], [], None, None, lineno=1046, col_offset=20), lineno=1046, col_offset=20)], [], lineno=1045, col_offset=16)], [], lineno=1043, col_offset=12)], [], lineno=1041, col_offset=8), Assign([Name('funcs', Store(), lineno=1047, col_offset=8)], List([], Load(), lineno=1047, col_offset=16), lineno=1047, col_offset=8), For(Tuple([Name('key', Store(), lineno=1048, col_offset=12), Name('value', Store(), lineno=1048, col_offset=17)], Store(), lineno=1048, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=1048, col_offset=26), 'getmembers', Load(), lineno=1048, col_offset=26), [Name('object', Load(), lineno=1048, col_offset=45), Attribute(Name('inspect', Load(), lineno=1048, col_offset=53), 'isroutine', Load(), lineno=1048, col_offset=53)], [], None, None, lineno=1048, col_offset=26), [If(BoolOp(Or(), [Compare(Name('all', Load(), lineno=1050, col_offset=16), [IsNot()], [Name('None', Load(), lineno=1050, col_offset=27)], lineno=1050, col_offset=16), Call(Attribute(Name('inspect', Load(), lineno=1051, col_offset=16), 'isbuiltin', Load(), lineno=1051, col_offset=16), [Name('value', Load(), lineno=1051, col_offset=34)], [], None, None, lineno=1051, col_offset=16), Compare(Call(Attribute(Name('inspect', Load(), lineno=1051, col_offset=44), 'getmodule', Load(), lineno=1051, col_offset=44), [Name('value', Load(), lineno=1051, col_offset=62)], [], None, None, lineno=1051, col_offset=44), [Is()], [Name('object', Load(), lineno=1051, col_offset=72)], lineno=1051, col_offset=44)], lineno=1050, col_offset=16), [If(Call(Name('visiblename', Load(), lineno=1052, col_offset=19), [Name('key', Load(), lineno=1052, col_offset=31), Name('all', Load(), lineno=1052, col_offset=36)], [], None, None, lineno=1052, col_offset=19), [Expr(Call(Attribute(Name('funcs', Load(), lineno=1053, col_offset=20), 'append', Load(), lineno=1053, col_offset=20), [Tuple([Name('key', Load(), lineno=1053, col_offset=34), Name('value', Load(), lineno=1053, col_offset=39)], Load(), lineno=1053, col_offset=34)], [], None, None, lineno=1053, col_offset=20), lineno=1053, col_offset=20)], [], lineno=1052, col_offset=16)], [], lineno=1050, col_offset=12)], [], lineno=1048, col_offset=8), Assign([Name('data', Store(), lineno=1054, col_offset=8)], List([], Load(), lineno=1054, col_offset=15), lineno=1054, col_offset=8), For(Tuple([Name('key', Store(), lineno=1055, col_offset=12), Name('value', Store(), lineno=1055, col_offset=17)], Store(), lineno=1055, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=1055, col_offset=26), 'getmembers', Load(), lineno=1055, col_offset=26), [Name('object', Load(), lineno=1055, col_offset=45), Name('isdata', Load(), lineno=1055, col_offset=53)], [], None, None, lineno=1055, col_offset=26), [If(Call(Name('visiblename', Load(), lineno=1056, col_offset=15), [Name('key', Load(), lineno=1056, col_offset=27), Name('all', Load(), lineno=1056, col_offset=32)], [], None, None, lineno=1056, col_offset=15), [Expr(Call(Attribute(Name('data', Load(), lineno=1057, col_offset=16), 'append', Load(), lineno=1057, col_offset=16), [Tuple([Name('key', Load(), lineno=1057, col_offset=29), Name('value', Load(), lineno=1057, col_offset=34)], Load(), lineno=1057, col_offset=29)], [], None, None, lineno=1057, col_offset=16), lineno=1057, col_offset=16)], [], lineno=1056, col_offset=12)], [], lineno=1055, col_offset=8), Assign([Name('modpkgs', Store(), lineno=1059, col_offset=8)], List([], Load(), lineno=1059, col_offset=18), lineno=1059, col_offset=8), Assign([Name('modpkgs_names', Store(), lineno=1060, col_offset=8)], Call(Name('set', Load(), lineno=1060, col_offset=24), [], [], None, None, lineno=1060, col_offset=24), lineno=1060, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1061, col_offset=11), [Name('object', Load(), lineno=1061, col_offset=19), Str('__path__', lineno=1061, col_offset=27)], [], None, None, lineno=1061, col_offset=11), [For(Tuple([Name('importer', Store(), lineno=1062, col_offset=16), Name('modname', Store(), lineno=1062, col_offset=26), Name('ispkg', Store(), lineno=1062, col_offset=35)], Store(), lineno=1062, col_offset=16), Call(Attribute(Name('pkgutil', Load(), lineno=1062, col_offset=44), 'iter_modules', Load(), lineno=1062, col_offset=44), [Attribute(Name('object', Load(), lineno=1062, col_offset=65), '__path__', Load(), lineno=1062, col_offset=65)], [], None, None, lineno=1062, col_offset=44), [Expr(Call(Attribute(Name('modpkgs_names', Load(), lineno=1063, col_offset=16), 'add', Load(), lineno=1063, col_offset=16), [Name('modname', Load(), lineno=1063, col_offset=34)], [], None, None, lineno=1063, col_offset=16), lineno=1063, col_offset=16), If(Name('ispkg', Load(), lineno=1064, col_offset=19), [Expr(Call(Attribute(Name('modpkgs', Load(), lineno=1065, col_offset=20), 'append', Load(), lineno=1065, col_offset=20), [BinOp(Name('modname', Load(), lineno=1065, col_offset=35), Add(), Str(' (package)', lineno=1065, col_offset=45), lineno=1065, col_offset=35)], [], None, None, lineno=1065, col_offset=20), lineno=1065, col_offset=20)], [Expr(Call(Attribute(Name('modpkgs', Load(), lineno=1067, col_offset=20), 'append', Load(), lineno=1067, col_offset=20), [Name('modname', Load(), lineno=1067, col_offset=35)], [], None, None, lineno=1067, col_offset=20), lineno=1067, col_offset=20)], lineno=1064, col_offset=16)], [], lineno=1062, col_offset=12), Expr(Call(Attribute(Name('modpkgs', Load(), lineno=1069, col_offset=12), 'sort', Load(), lineno=1069, col_offset=12), [], [], None, None, lineno=1069, col_offset=12), lineno=1069, col_offset=12), Assign([Name('result', Store(), lineno=1070, col_offset=12)], BinOp(Name('result', Load(), lineno=1070, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1070, col_offset=30), 'section', Load(), lineno=1070, col_offset=30), [Str('PACKAGE CONTENTS', lineno=1071, col_offset=16), Call(Name('join', Load(), lineno=1071, col_offset=36), [Name('modpkgs', Load(), lineno=1071, col_offset=41), Str('\n', lineno=1071, col_offset=50)], [], None, None, lineno=1071, col_offset=36)], [], None, None, lineno=1070, col_offset=30), lineno=1070, col_offset=21), lineno=1070, col_offset=12)], [], lineno=1061, col_offset=8), Assign([Name('submodules', Store(), lineno=1074, col_offset=8)], List([], Load(), lineno=1074, col_offset=21), lineno=1074, col_offset=8), For(Tuple([Name('key', Store(), lineno=1075, col_offset=12), Name('value', Store(), lineno=1075, col_offset=17)], Store(), lineno=1075, col_offset=12), Call(Attribute(Name('inspect', Load(), lineno=1075, col_offset=26), 'getmembers', Load(), lineno=1075, col_offset=26), [Name('object', Load(), lineno=1075, col_offset=45), Attribute(Name('inspect', Load(), lineno=1075, col_offset=53), 'ismodule', Load(), lineno=1075, col_offset=53)], [], None, None, lineno=1075, col_offset=26), [If(BoolOp(And(), [Call(Attribute(Attribute(Name('value', Load(), lineno=1076, col_offset=15), '__name__', Load(), lineno=1076, col_offset=15), 'startswith', Load(), lineno=1076, col_offset=15), [BinOp(Name('name', Load(), lineno=1076, col_offset=41), Add(), Str('.', lineno=1076, col_offset=48), lineno=1076, col_offset=41)], [], None, None, lineno=1076, col_offset=15), Compare(Name('key', Load(), lineno=1076, col_offset=57), [NotIn()], [Name('modpkgs_names', Load(), lineno=1076, col_offset=68)], lineno=1076, col_offset=57)], lineno=1076, col_offset=15), [Expr(Call(Attribute(Name('submodules', Load(), lineno=1077, col_offset=16), 'append', Load(), lineno=1077, col_offset=16), [Name('key', Load(), lineno=1077, col_offset=34)], [], None, None, lineno=1077, col_offset=16), lineno=1077, col_offset=16)], [], lineno=1076, col_offset=12)], [], lineno=1075, col_offset=8), If(Name('submodules', Load(), lineno=1078, col_offset=11), [Expr(Call(Attribute(Name('submodules', Load(), lineno=1079, col_offset=12), 'sort', Load(), lineno=1079, col_offset=12), [], [], None, None, lineno=1079, col_offset=12), lineno=1079, col_offset=12), Assign([Name('result', Store(), lineno=1080, col_offset=12)], BinOp(Name('result', Load(), lineno=1080, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1080, col_offset=30), 'section', Load(), lineno=1080, col_offset=30), [Str('SUBMODULES', lineno=1081, col_offset=16), Call(Name('join', Load(), lineno=1081, col_offset=30), [Name('submodules', Load(), lineno=1081, col_offset=35), Str('\n', lineno=1081, col_offset=47)], [], None, None, lineno=1081, col_offset=30)], [], None, None, lineno=1080, col_offset=30), lineno=1080, col_offset=21), lineno=1080, col_offset=12)], [], lineno=1078, col_offset=8), If(Name('classes', Load(), lineno=1083, col_offset=11), [Assign([Name('classlist', Store(), lineno=1084, col_offset=12)], Call(Name('map', Load(), lineno=1084, col_offset=24), [Lambda(arguments([Name('key_value', Param(), lineno=1084, col_offset=35)], None, None, []), Subscript(Name('key_value', Load(), lineno=1084, col_offset=46), Index(Num(1, lineno=1084, col_offset=56)), Load(), lineno=1084, col_offset=46), lineno=1084, col_offset=28), Name('classes', Load(), lineno=1084, col_offset=60)], [], None, None, lineno=1084, col_offset=24), lineno=1084, col_offset=12), Assign([Name('contents', Store(), lineno=1085, col_offset=12)], List([Call(Attribute(Name('self', Load(), lineno=1085, col_offset=24), 'formattree', Load(), lineno=1085, col_offset=24), [Call(Attribute(Name('inspect', Load(), lineno=1086, col_offset=16), 'getclasstree', Load(), lineno=1086, col_offset=16), [Name('classlist', Load(), lineno=1086, col_offset=37), Num(1, lineno=1086, col_offset=48)], [], None, None, lineno=1086, col_offset=16), Name('name', Load(), lineno=1086, col_offset=52)], [], None, None, lineno=1085, col_offset=24)], Load(), lineno=1085, col_offset=23), lineno=1085, col_offset=12), For(Tuple([Name('key', Store(), lineno=1087, col_offset=16), Name('value', Store(), lineno=1087, col_offset=21)], Store(), lineno=1087, col_offset=16), Name('classes', Load(), lineno=1087, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=1088, col_offset=16), 'append', Load(), lineno=1088, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=1088, col_offset=32), 'document', Load(), lineno=1088, col_offset=32), [Name('value', Load(), lineno=1088, col_offset=46), Name('key', Load(), lineno=1088, col_offset=53), Name('name', Load(), lineno=1088, col_offset=58)], [], None, None, lineno=1088, col_offset=32)], [], None, None, lineno=1088, col_offset=16), lineno=1088, col_offset=16)], [], lineno=1087, col_offset=12), Assign([Name('result', Store(), lineno=1089, col_offset=12)], BinOp(Name('result', Load(), lineno=1089, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1089, col_offset=30), 'section', Load(), lineno=1089, col_offset=30), [Str('CLASSES', lineno=1089, col_offset=43), Call(Name('join', Load(), lineno=1089, col_offset=54), [Name('contents', Load(), lineno=1089, col_offset=59), Str('\n', lineno=1089, col_offset=69)], [], None, None, lineno=1089, col_offset=54)], [], None, None, lineno=1089, col_offset=30), lineno=1089, col_offset=21), lineno=1089, col_offset=12)], [], lineno=1083, col_offset=8), If(Name('funcs', Load(), lineno=1091, col_offset=11), [Assign([Name('contents', Store(), lineno=1092, col_offset=12)], List([], Load(), lineno=1092, col_offset=23), lineno=1092, col_offset=12), For(Tuple([Name('key', Store(), lineno=1093, col_offset=16), Name('value', Store(), lineno=1093, col_offset=21)], Store(), lineno=1093, col_offset=16), Name('funcs', Load(), lineno=1093, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=1094, col_offset=16), 'append', Load(), lineno=1094, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=1094, col_offset=32), 'document', Load(), lineno=1094, col_offset=32), [Name('value', Load(), lineno=1094, col_offset=46), Name('key', Load(), lineno=1094, col_offset=53), Name('name', Load(), lineno=1094, col_offset=58)], [], None, None, lineno=1094, col_offset=32)], [], None, None, lineno=1094, col_offset=16), lineno=1094, col_offset=16)], [], lineno=1093, col_offset=12), Assign([Name('result', Store(), lineno=1095, col_offset=12)], BinOp(Name('result', Load(), lineno=1095, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1095, col_offset=30), 'section', Load(), lineno=1095, col_offset=30), [Str('FUNCTIONS', lineno=1095, col_offset=43), Call(Name('join', Load(), lineno=1095, col_offset=56), [Name('contents', Load(), lineno=1095, col_offset=61), Str('\n', lineno=1095, col_offset=71)], [], None, None, lineno=1095, col_offset=56)], [], None, None, lineno=1095, col_offset=30), lineno=1095, col_offset=21), lineno=1095, col_offset=12)], [], lineno=1091, col_offset=8), If(Name('data', Load(), lineno=1097, col_offset=11), [Assign([Name('contents', Store(), lineno=1098, col_offset=12)], List([], Load(), lineno=1098, col_offset=23), lineno=1098, col_offset=12), For(Tuple([Name('key', Store(), lineno=1099, col_offset=16), Name('value', Store(), lineno=1099, col_offset=21)], Store(), lineno=1099, col_offset=16), Name('data', Load(), lineno=1099, col_offset=30), [Expr(Call(Attribute(Name('contents', Load(), lineno=1100, col_offset=16), 'append', Load(), lineno=1100, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=1100, col_offset=32), 'docother', Load(), lineno=1100, col_offset=32), [Name('value', Load(), lineno=1100, col_offset=46), Name('key', Load(), lineno=1100, col_offset=53), Name('name', Load(), lineno=1100, col_offset=58)], [keyword('maxlen', Num(70, lineno=1100, col_offset=71))], None, None, lineno=1100, col_offset=32)], [], None, None, lineno=1100, col_offset=16), lineno=1100, col_offset=16)], [], lineno=1099, col_offset=12), Assign([Name('result', Store(), lineno=1101, col_offset=12)], BinOp(Name('result', Load(), lineno=1101, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1101, col_offset=30), 'section', Load(), lineno=1101, col_offset=30), [Str('DATA', lineno=1101, col_offset=43), Call(Name('join', Load(), lineno=1101, col_offset=51), [Name('contents', Load(), lineno=1101, col_offset=56), Str('\n', lineno=1101, col_offset=66)], [], None, None, lineno=1101, col_offset=51)], [], None, None, lineno=1101, col_offset=30), lineno=1101, col_offset=21), lineno=1101, col_offset=12)], [], lineno=1097, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1103, col_offset=11), [Name('object', Load(), lineno=1103, col_offset=19), Str('__version__', lineno=1103, col_offset=27)], [], None, None, lineno=1103, col_offset=11), [Assign([Name('version', Store(), lineno=1104, col_offset=12)], Call(Name('str', Load(), lineno=1104, col_offset=22), [Attribute(Name('object', Load(), lineno=1104, col_offset=26), '__version__', Load(), lineno=1104, col_offset=26)], [], None, None, lineno=1104, col_offset=22), lineno=1104, col_offset=12), If(BoolOp(And(), [Compare(Subscript(Name('version', Load(), lineno=1105, col_offset=15), Slice(None, Num(11, lineno=1105, col_offset=24), None), Load(), lineno=1105, col_offset=15), [Eq()], [BinOp(Str('$', lineno=1105, col_offset=31), Add(), Str('Revision: ', lineno=1105, col_offset=37), lineno=1105, col_offset=31)], lineno=1105, col_offset=15), Compare(Subscript(Name('version', Load(), lineno=1105, col_offset=54), Slice(Num(-1, lineno=1105, col_offset=63), None, None), Load(), lineno=1105, col_offset=54), [Eq()], [Str('$', lineno=1105, col_offset=70)], lineno=1105, col_offset=54)], lineno=1105, col_offset=15), [Assign([Name('version', Store(), lineno=1106, col_offset=16)], Call(Name('strip', Load(), lineno=1106, col_offset=26), [Subscript(Name('version', Load(), lineno=1106, col_offset=32), Slice(Num(11, lineno=1106, col_offset=40), Num(-1, lineno=1106, col_offset=44), None), Load(), lineno=1106, col_offset=32)], [], None, None, lineno=1106, col_offset=26), lineno=1106, col_offset=16)], [], lineno=1105, col_offset=12), Assign([Name('result', Store(), lineno=1107, col_offset=12)], BinOp(Name('result', Load(), lineno=1107, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1107, col_offset=30), 'section', Load(), lineno=1107, col_offset=30), [Str('VERSION', lineno=1107, col_offset=43), Name('version', Load(), lineno=1107, col_offset=54)], [], None, None, lineno=1107, col_offset=30), lineno=1107, col_offset=21), lineno=1107, col_offset=12)], [], lineno=1103, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1108, col_offset=11), [Name('object', Load(), lineno=1108, col_offset=19), Str('__date__', lineno=1108, col_offset=27)], [], None, None, lineno=1108, col_offset=11), [Assign([Name('result', Store(), lineno=1109, col_offset=12)], BinOp(Name('result', Load(), lineno=1109, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1109, col_offset=30), 'section', Load(), lineno=1109, col_offset=30), [Str('DATE', lineno=1109, col_offset=43), Call(Name('str', Load(), lineno=1109, col_offset=51), [Attribute(Name('object', Load(), lineno=1109, col_offset=55), '__date__', Load(), lineno=1109, col_offset=55)], [], None, None, lineno=1109, col_offset=51)], [], None, None, lineno=1109, col_offset=30), lineno=1109, col_offset=21), lineno=1109, col_offset=12)], [], lineno=1108, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1110, col_offset=11), [Name('object', Load(), lineno=1110, col_offset=19), Str('__author__', lineno=1110, col_offset=27)], [], None, None, lineno=1110, col_offset=11), [Assign([Name('result', Store(), lineno=1111, col_offset=12)], BinOp(Name('result', Load(), lineno=1111, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1111, col_offset=30), 'section', Load(), lineno=1111, col_offset=30), [Str('AUTHOR', lineno=1111, col_offset=43), Call(Name('str', Load(), lineno=1111, col_offset=53), [Attribute(Name('object', Load(), lineno=1111, col_offset=57), '__author__', Load(), lineno=1111, col_offset=57)], [], None, None, lineno=1111, col_offset=53)], [], None, None, lineno=1111, col_offset=30), lineno=1111, col_offset=21), lineno=1111, col_offset=12)], [], lineno=1110, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1112, col_offset=11), [Name('object', Load(), lineno=1112, col_offset=19), Str('__credits__', lineno=1112, col_offset=27)], [], None, None, lineno=1112, col_offset=11), [Assign([Name('result', Store(), lineno=1113, col_offset=12)], BinOp(Name('result', Load(), lineno=1113, col_offset=21), Add(), Call(Attribute(Name('self', Load(), lineno=1113, col_offset=30), 'section', Load(), lineno=1113, col_offset=30), [Str('CREDITS', lineno=1113, col_offset=43), Call(Name('str', Load(), lineno=1113, col_offset=54), [Attribute(Name('object', Load(), lineno=1113, col_offset=58), '__credits__', Load(), lineno=1113, col_offset=58)], [], None, None, lineno=1113, col_offset=54)], [], None, None, lineno=1113, col_offset=30), lineno=1113, col_offset=21), lineno=1113, col_offset=12)], [], lineno=1112, col_offset=8), Return(Name('result', Load(), lineno=1114, col_offset=15), lineno=1114, col_offset=8)], [], lineno=1016, col_offset=4), FunctionDef('docclass', arguments([Name('self', Param(), lineno=1116, col_offset=17), Name('object', Param(), lineno=1116, col_offset=23), Name('name', Param(), lineno=1116, col_offset=31), Name('mod', Param(), lineno=1116, col_offset=42)], None, None, [Name('None', Load(), lineno=1116, col_offset=36), Name('None', Load(), lineno=1116, col_offset=46)]), [Expr(Str('Produce text documentation for a given class object.', lineno=1117, col_offset=8), lineno=1117, col_offset=8), Assign([Name('realname', Store(), lineno=1118, col_offset=8)], Attribute(Name('object', Load(), lineno=1118, col_offset=19), '__name__', Load(), lineno=1118, col_offset=19), lineno=1118, col_offset=8), Assign([Name('name', Store(), lineno=1119, col_offset=8)], BoolOp(Or(), [Name('name', Load(), lineno=1119, col_offset=15), Name('realname', Load(), lineno=1119, col_offset=23)], lineno=1119, col_offset=15), lineno=1119, col_offset=8), Assign([Name('bases', Store(), lineno=1120, col_offset=8)], Attribute(Name('object', Load(), lineno=1120, col_offset=16), '__bases__', Load(), lineno=1120, col_offset=16), lineno=1120, col_offset=8), FunctionDef('makename', arguments([Name('c', Param(), lineno=1122, col_offset=21), Name('m', Param(), lineno=1122, col_offset=24)], None, None, [Attribute(Name('object', Load(), lineno=1122, col_offset=26), '__module__', Load(), lineno=1122, col_offset=26)]), [Return(Call(Name('classname', Load(), lineno=1123, col_offset=19), [Name('c', Load(), lineno=1123, col_offset=29), Name('m', Load(), lineno=1123, col_offset=32)], [], None, None, lineno=1123, col_offset=19), lineno=1123, col_offset=12)], [], lineno=1122, col_offset=8), If(Compare(Name('name', Load(), lineno=1125, col_offset=11), [Eq()], [Name('realname', Load(), lineno=1125, col_offset=19)], lineno=1125, col_offset=11), [Assign([Name('title', Store(), lineno=1126, col_offset=12)], BinOp(Str('class ', lineno=1126, col_offset=20), Add(), Call(Attribute(Name('self', Load(), lineno=1126, col_offset=31), 'bold', Load(), lineno=1126, col_offset=31), [Name('realname', Load(), lineno=1126, col_offset=41)], [], None, None, lineno=1126, col_offset=31), lineno=1126, col_offset=20), lineno=1126, col_offset=12)], [Assign([Name('title', Store(), lineno=1128, col_offset=12)], BinOp(BinOp(Call(Attribute(Name('self', Load(), lineno=1128, col_offset=20), 'bold', Load(), lineno=1128, col_offset=20), [Name('name', Load(), lineno=1128, col_offset=30)], [], None, None, lineno=1128, col_offset=20), Add(), Str(' = class ', lineno=1128, col_offset=38), lineno=1128, col_offset=20), Add(), Name('realname', Load(), lineno=1128, col_offset=52), lineno=1128, col_offset=50), lineno=1128, col_offset=12)], lineno=1125, col_offset=8), If(Name('bases', Load(), lineno=1129, col_offset=11), [Assign([Name('parents', Store(), lineno=1130, col_offset=12)], Call(Name('map', Load(), lineno=1130, col_offset=22), [Name('makename', Load(), lineno=1130, col_offset=26), Name('bases', Load(), lineno=1130, col_offset=36)], [], None, None, lineno=1130, col_offset=22), lineno=1130, col_offset=12), Assign([Name('title', Store(), lineno=1131, col_offset=12)], BinOp(Name('title', Load(), lineno=1131, col_offset=20), Add(), BinOp(Str('(%s)', lineno=1131, col_offset=28), Mod(), Call(Name('join', Load(), lineno=1131, col_offset=37), [Name('parents', Load(), lineno=1131, col_offset=42), Str(', ', lineno=1131, col_offset=51)], [], None, None, lineno=1131, col_offset=37), lineno=1131, col_offset=28), lineno=1131, col_offset=20), lineno=1131, col_offset=12)], [], lineno=1129, col_offset=8), Assign([Name('doc', Store(), lineno=1133, col_offset=8)], Call(Name('getdoc', Load(), lineno=1133, col_offset=14), [Name('object', Load(), lineno=1133, col_offset=21)], [], None, None, lineno=1133, col_offset=14), lineno=1133, col_offset=8), Assign([Name('contents', Store(), lineno=1134, col_offset=8)], BoolOp(Or(), [BoolOp(And(), [Name('doc', Load(), lineno=1134, col_offset=19), List([BinOp(Name('doc', Load(), lineno=1134, col_offset=28), Add(), Str('\n', lineno=1134, col_offset=34), lineno=1134, col_offset=28)], Load(), lineno=1134, col_offset=27)], lineno=1134, col_offset=19), List([], Load(), lineno=1134, col_offset=43)], lineno=1134, col_offset=19), lineno=1134, col_offset=8), Assign([Name('push', Store(), lineno=1135, col_offset=8)], Attribute(Name('contents', Load(), lineno=1135, col_offset=15), 'append', Load(), lineno=1135, col_offset=15), lineno=1135, col_offset=8), Assign([Name('mro', Store(), lineno=1138, col_offset=8)], Call(Name('deque', Load(), lineno=1138, col_offset=14), [Call(Attribute(Name('inspect', Load(), lineno=1138, col_offset=20), 'getmro', Load(), lineno=1138, col_offset=20), [Name('object', Load(), lineno=1138, col_offset=35)], [], None, None, lineno=1138, col_offset=20)], [], None, None, lineno=1138, col_offset=14), lineno=1138, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=1139, col_offset=11), [Name('mro', Load(), lineno=1139, col_offset=15)], [], None, None, lineno=1139, col_offset=11), [Gt()], [Num(2, lineno=1139, col_offset=22)], lineno=1139, col_offset=11), [Expr(Call(Name('push', Load(), lineno=1140, col_offset=12), [Str('Method resolution order:', lineno=1140, col_offset=17)], [], None, None, lineno=1140, col_offset=12), lineno=1140, col_offset=12), For(Name('base', Store(), lineno=1141, col_offset=16), Name('mro', Load(), lineno=1141, col_offset=24), [Expr(Call(Name('push', Load(), lineno=1142, col_offset=16), [BinOp(Str('    ', lineno=1142, col_offset=21), Add(), Call(Name('makename', Load(), lineno=1142, col_offset=30), [Name('base', Load(), lineno=1142, col_offset=39)], [], None, None, lineno=1142, col_offset=30), lineno=1142, col_offset=21)], [], None, None, lineno=1142, col_offset=16), lineno=1142, col_offset=16)], [], lineno=1141, col_offset=12), Expr(Call(Name('push', Load(), lineno=1143, col_offset=12), [Str('', lineno=1143, col_offset=17)], [], None, None, lineno=1143, col_offset=12), lineno=1143, col_offset=12)], [], lineno=1139, col_offset=8), ClassDef('HorizontalRule', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1147, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1148, col_offset=16), 'needone', Store(), lineno=1148, col_offset=16)], Num(0, lineno=1148, col_offset=31), lineno=1148, col_offset=16)], [], lineno=1147, col_offset=12), FunctionDef('maybe', arguments([Name('self', Param(), lineno=1149, col_offset=22)], None, None, []), [If(Attribute(Name('self', Load(), lineno=1150, col_offset=19), 'needone', Load(), lineno=1150, col_offset=19), [Expr(Call(Name('push', Load(), lineno=1151, col_offset=20), [BinOp(Str('-', lineno=1151, col_offset=25), Mult(), Num(70, lineno=1151, col_offset=31), lineno=1151, col_offset=25)], [], None, None, lineno=1151, col_offset=20), lineno=1151, col_offset=20)], [], lineno=1150, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=1152, col_offset=16), 'needone', Store(), lineno=1152, col_offset=16)], Num(1, lineno=1152, col_offset=31), lineno=1152, col_offset=16)], [], lineno=1149, col_offset=12)], [], lineno=1146, col_offset=8), Assign([Name('hr', Store(), lineno=1153, col_offset=8)], Call(Name('HorizontalRule', Load(), lineno=1153, col_offset=13), [], [], None, None, lineno=1153, col_offset=13), lineno=1153, col_offset=8), FunctionDef('spill', arguments([Name('msg', Param(), lineno=1155, col_offset=18), Name('attrs', Param(), lineno=1155, col_offset=23), Name('predicate', Param(), lineno=1155, col_offset=30)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=1156, col_offset=12), Name('attrs', Store(), lineno=1156, col_offset=16)], Store(), lineno=1156, col_offset=12)], Call(Name('_split_list', Load(), lineno=1156, col_offset=24), [Name('attrs', Load(), lineno=1156, col_offset=36), Name('predicate', Load(), lineno=1156, col_offset=43)], [], None, None, lineno=1156, col_offset=24), lineno=1156, col_offset=12), If(Name('ok', Load(), lineno=1157, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=1158, col_offset=16), 'maybe', Load(), lineno=1158, col_offset=16), [], [], None, None, lineno=1158, col_offset=16), lineno=1158, col_offset=16), Expr(Call(Name('push', Load(), lineno=1159, col_offset=16), [Name('msg', Load(), lineno=1159, col_offset=21)], [], None, None, lineno=1159, col_offset=16), lineno=1159, col_offset=16), For(Tuple([Name('name', Store(), lineno=1160, col_offset=20), Name('kind', Store(), lineno=1160, col_offset=26), Name('homecls', Store(), lineno=1160, col_offset=32), Name('value', Store(), lineno=1160, col_offset=41)], Store(), lineno=1160, col_offset=20), Name('ok', Load(), lineno=1160, col_offset=50), [Expr(Call(Name('push', Load(), lineno=1161, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=1161, col_offset=25), 'document', Load(), lineno=1161, col_offset=25), [Call(Name('getattr', Load(), lineno=1161, col_offset=39), [Name('object', Load(), lineno=1161, col_offset=47), Name('name', Load(), lineno=1161, col_offset=55)], [], None, None, lineno=1161, col_offset=39), Name('name', Load(), lineno=1162, col_offset=39), Name('mod', Load(), lineno=1162, col_offset=45), Name('object', Load(), lineno=1162, col_offset=50)], [], None, None, lineno=1161, col_offset=25)], [], None, None, lineno=1161, col_offset=20), lineno=1161, col_offset=20)], [], lineno=1160, col_offset=16)], [], lineno=1157, col_offset=12), Return(Name('attrs', Load(), lineno=1163, col_offset=19), lineno=1163, col_offset=12)], [], lineno=1155, col_offset=8), FunctionDef('spilldescriptors', arguments([Name('msg', Param(), lineno=1165, col_offset=29), Name('attrs', Param(), lineno=1165, col_offset=34), Name('predicate', Param(), lineno=1165, col_offset=41)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=1166, col_offset=12), Name('attrs', Store(), lineno=1166, col_offset=16)], Store(), lineno=1166, col_offset=12)], Call(Name('_split_list', Load(), lineno=1166, col_offset=24), [Name('attrs', Load(), lineno=1166, col_offset=36), Name('predicate', Load(), lineno=1166, col_offset=43)], [], None, None, lineno=1166, col_offset=24), lineno=1166, col_offset=12), If(Name('ok', Load(), lineno=1167, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=1168, col_offset=16), 'maybe', Load(), lineno=1168, col_offset=16), [], [], None, None, lineno=1168, col_offset=16), lineno=1168, col_offset=16), Expr(Call(Name('push', Load(), lineno=1169, col_offset=16), [Name('msg', Load(), lineno=1169, col_offset=21)], [], None, None, lineno=1169, col_offset=16), lineno=1169, col_offset=16), For(Tuple([Name('name', Store(), lineno=1170, col_offset=20), Name('kind', Store(), lineno=1170, col_offset=26), Name('homecls', Store(), lineno=1170, col_offset=32), Name('value', Store(), lineno=1170, col_offset=41)], Store(), lineno=1170, col_offset=20), Name('ok', Load(), lineno=1170, col_offset=50), [Expr(Call(Name('push', Load(), lineno=1171, col_offset=20), [Call(Attribute(Name('self', Load(), lineno=1171, col_offset=25), '_docdescriptor', Load(), lineno=1171, col_offset=25), [Name('name', Load(), lineno=1171, col_offset=45), Name('value', Load(), lineno=1171, col_offset=51), Name('mod', Load(), lineno=1171, col_offset=58)], [], None, None, lineno=1171, col_offset=25)], [], None, None, lineno=1171, col_offset=20), lineno=1171, col_offset=20)], [], lineno=1170, col_offset=16)], [], lineno=1167, col_offset=12), Return(Name('attrs', Load(), lineno=1172, col_offset=19), lineno=1172, col_offset=12)], [], lineno=1165, col_offset=8), FunctionDef('spilldata', arguments([Name('msg', Param(), lineno=1174, col_offset=22), Name('attrs', Param(), lineno=1174, col_offset=27), Name('predicate', Param(), lineno=1174, col_offset=34)], None, None, []), [Assign([Tuple([Name('ok', Store(), lineno=1175, col_offset=12), Name('attrs', Store(), lineno=1175, col_offset=16)], Store(), lineno=1175, col_offset=12)], Call(Name('_split_list', Load(), lineno=1175, col_offset=24), [Name('attrs', Load(), lineno=1175, col_offset=36), Name('predicate', Load(), lineno=1175, col_offset=43)], [], None, None, lineno=1175, col_offset=24), lineno=1175, col_offset=12), If(Name('ok', Load(), lineno=1176, col_offset=15), [Expr(Call(Attribute(Name('hr', Load(), lineno=1177, col_offset=16), 'maybe', Load(), lineno=1177, col_offset=16), [], [], None, None, lineno=1177, col_offset=16), lineno=1177, col_offset=16), Expr(Call(Name('push', Load(), lineno=1178, col_offset=16), [Name('msg', Load(), lineno=1178, col_offset=21)], [], None, None, lineno=1178, col_offset=16), lineno=1178, col_offset=16), For(Tuple([Name('name', Store(), lineno=1179, col_offset=20), Name('kind', Store(), lineno=1179, col_offset=26), Name('homecls', Store(), lineno=1179, col_offset=32), Name('value', Store(), lineno=1179, col_offset=41)], Store(), lineno=1179, col_offset=20), Name('ok', Load(), lineno=1179, col_offset=50), [If(BoolOp(Or(), [Call(Name('hasattr', Load(), lineno=1180, col_offset=24), [Name('value', Load(), lineno=1180, col_offset=32), Str('__call__', lineno=1180, col_offset=39)], [], None, None, lineno=1180, col_offset=24), Call(Attribute(Name('inspect', Load(), lineno=1181, col_offset=28), 'isdatadescriptor', Load(), lineno=1181, col_offset=28), [Name('value', Load(), lineno=1181, col_offset=53)], [], None, None, lineno=1181, col_offset=28)], lineno=1180, col_offset=24), [Assign([Name('doc', Store(), lineno=1182, col_offset=24)], Call(Name('getdoc', Load(), lineno=1182, col_offset=30), [Name('value', Load(), lineno=1182, col_offset=37)], [], None, None, lineno=1182, col_offset=30), lineno=1182, col_offset=24)], [Assign([Name('doc', Store(), lineno=1184, col_offset=24)], Name('None', Load(), lineno=1184, col_offset=30), lineno=1184, col_offset=24)], lineno=1180, col_offset=20), Expr(Call(Name('push', Load(), lineno=1185, col_offset=20), [BinOp(Call(Attribute(Name('self', Load(), lineno=1185, col_offset=25), 'docother', Load(), lineno=1185, col_offset=25), [Call(Name('getattr', Load(), lineno=1185, col_offset=39), [Name('object', Load(), lineno=1185, col_offset=47), Name('name', Load(), lineno=1185, col_offset=55)], [], None, None, lineno=1185, col_offset=39), Name('name', Load(), lineno=1186, col_offset=39), Name('mod', Load(), lineno=1186, col_offset=45)], [keyword('maxlen', Num(70, lineno=1186, col_offset=57)), keyword('doc', Name('doc', Load(), lineno=1186, col_offset=65))], None, None, lineno=1185, col_offset=25), Add(), Str('\n', lineno=1186, col_offset=72), lineno=1185, col_offset=25)], [], None, None, lineno=1185, col_offset=20), lineno=1185, col_offset=20)], [], lineno=1179, col_offset=16)], [], lineno=1176, col_offset=12), Return(Name('attrs', Load(), lineno=1187, col_offset=19), lineno=1187, col_offset=12)], [], lineno=1174, col_offset=8), Assign([Name('attrs', Store(), lineno=1189, col_offset=8)], Call(Name('filter', Load(), lineno=1189, col_offset=16), [Lambda(arguments([Name('data', Param(), lineno=1189, col_offset=30)], None, None, []), Call(Name('visiblename', Load(), lineno=1189, col_offset=36), [Subscript(Name('data', Load(), lineno=1189, col_offset=48), Index(Num(0, lineno=1189, col_offset=53)), Load(), lineno=1189, col_offset=48)], [], None, None, lineno=1189, col_offset=36), lineno=1189, col_offset=23), Call(Name('classify_class_attrs', Load(), lineno=1190, col_offset=23), [Name('object', Load(), lineno=1190, col_offset=44)], [], None, None, lineno=1190, col_offset=23)], [], None, None, lineno=1189, col_offset=16), lineno=1189, col_offset=8), While(Name('attrs', Load(), lineno=1191, col_offset=14), [If(Name('mro', Load(), lineno=1192, col_offset=15), [Assign([Name('thisclass', Store(), lineno=1193, col_offset=16)], Call(Attribute(Name('mro', Load(), lineno=1193, col_offset=28), 'popleft', Load(), lineno=1193, col_offset=28), [], [], None, None, lineno=1193, col_offset=28), lineno=1193, col_offset=16)], [Assign([Name('thisclass', Store(), lineno=1195, col_offset=16)], Subscript(Subscript(Name('attrs', Load(), lineno=1195, col_offset=28), Index(Num(0, lineno=1195, col_offset=34)), Load(), lineno=1195, col_offset=28), Index(Num(2, lineno=1195, col_offset=37)), Load(), lineno=1195, col_offset=28), lineno=1195, col_offset=16)], lineno=1192, col_offset=12), Assign([Tuple([Name('attrs', Store(), lineno=1196, col_offset=12), Name('inherited', Store(), lineno=1196, col_offset=19)], Store(), lineno=1196, col_offset=12)], Call(Name('_split_list', Load(), lineno=1196, col_offset=31), [Name('attrs', Load(), lineno=1196, col_offset=43), Lambda(arguments([Name('t', Param(), lineno=1196, col_offset=57)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1196, col_offset=60), Index(Num(2, lineno=1196, col_offset=62)), Load(), lineno=1196, col_offset=60), [Is()], [Name('thisclass', Load(), lineno=1196, col_offset=68)], lineno=1196, col_offset=60), lineno=1196, col_offset=50)], [], None, None, lineno=1196, col_offset=31), lineno=1196, col_offset=12), If(Compare(Name('thisclass', Load(), lineno=1198, col_offset=15), [Is()], [Attribute(Name('__builtin__', Load(), lineno=1198, col_offset=28), 'object', Load(), lineno=1198, col_offset=28)], lineno=1198, col_offset=15), [Assign([Name('attrs', Store(), lineno=1199, col_offset=16)], Name('inherited', Load(), lineno=1199, col_offset=24), lineno=1199, col_offset=16), Continue( lineno=1200, col_offset=16)], [If(Compare(Name('thisclass', Load(), lineno=1201, col_offset=17), [Is()], [Name('object', Load(), lineno=1201, col_offset=30)], lineno=1201, col_offset=17), [Assign([Name('tag', Store(), lineno=1202, col_offset=16)], Str('defined here', lineno=1202, col_offset=22), lineno=1202, col_offset=16)], [Assign([Name('tag', Store(), lineno=1204, col_offset=16)], BinOp(Str('inherited from %s', lineno=1204, col_offset=22), Mod(), Call(Name('classname', Load(), lineno=1204, col_offset=44), [Name('thisclass', Load(), lineno=1204, col_offset=54), Attribute(Name('object', Load(), lineno=1205, col_offset=54), '__module__', Load(), lineno=1205, col_offset=54)], [], None, None, lineno=1204, col_offset=44), lineno=1204, col_offset=22), lineno=1204, col_offset=16)], lineno=1201, col_offset=17)], lineno=1198, col_offset=12), Expr(Call(Attribute(Name('attrs', Load(), lineno=1208, col_offset=12), 'sort', Load(), lineno=1208, col_offset=12), [], [], None, None, lineno=1208, col_offset=12), lineno=1208, col_offset=12), Assign([Name('attrs', Store(), lineno=1211, col_offset=12)], Call(Name('spill', Load(), lineno=1211, col_offset=20), [BinOp(Str('Methods %s:\n', lineno=1211, col_offset=26), Mod(), Name('tag', Load(), lineno=1211, col_offset=44), lineno=1211, col_offset=26), Name('attrs', Load(), lineno=1211, col_offset=49), Lambda(arguments([Name('t', Param(), lineno=1212, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1212, col_offset=36), Index(Num(1, lineno=1212, col_offset=38)), Load(), lineno=1212, col_offset=36), [Eq()], [Str('method', lineno=1212, col_offset=44)], lineno=1212, col_offset=36), lineno=1212, col_offset=26)], [], None, None, lineno=1211, col_offset=20), lineno=1211, col_offset=12), Assign([Name('attrs', Store(), lineno=1213, col_offset=12)], Call(Name('spill', Load(), lineno=1213, col_offset=20), [BinOp(Str('Class methods %s:\n', lineno=1213, col_offset=26), Mod(), Name('tag', Load(), lineno=1213, col_offset=50), lineno=1213, col_offset=26), Name('attrs', Load(), lineno=1213, col_offset=55), Lambda(arguments([Name('t', Param(), lineno=1214, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1214, col_offset=36), Index(Num(1, lineno=1214, col_offset=38)), Load(), lineno=1214, col_offset=36), [Eq()], [Str('class method', lineno=1214, col_offset=44)], lineno=1214, col_offset=36), lineno=1214, col_offset=26)], [], None, None, lineno=1213, col_offset=20), lineno=1213, col_offset=12), Assign([Name('attrs', Store(), lineno=1215, col_offset=12)], Call(Name('spill', Load(), lineno=1215, col_offset=20), [BinOp(Str('Static methods %s:\n', lineno=1215, col_offset=26), Mod(), Name('tag', Load(), lineno=1215, col_offset=51), lineno=1215, col_offset=26), Name('attrs', Load(), lineno=1215, col_offset=56), Lambda(arguments([Name('t', Param(), lineno=1216, col_offset=33)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1216, col_offset=36), Index(Num(1, lineno=1216, col_offset=38)), Load(), lineno=1216, col_offset=36), [Eq()], [Str('static method', lineno=1216, col_offset=44)], lineno=1216, col_offset=36), lineno=1216, col_offset=26)], [], None, None, lineno=1215, col_offset=20), lineno=1215, col_offset=12), Assign([Name('attrs', Store(), lineno=1217, col_offset=12)], Call(Name('spilldescriptors', Load(), lineno=1217, col_offset=20), [BinOp(Str('Data descriptors %s:\n', lineno=1217, col_offset=37), Mod(), Name('tag', Load(), lineno=1217, col_offset=64), lineno=1217, col_offset=37), Name('attrs', Load(), lineno=1217, col_offset=69), Lambda(arguments([Name('t', Param(), lineno=1218, col_offset=44)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1218, col_offset=47), Index(Num(1, lineno=1218, col_offset=49)), Load(), lineno=1218, col_offset=47), [Eq()], [Str('data descriptor', lineno=1218, col_offset=55)], lineno=1218, col_offset=47), lineno=1218, col_offset=37)], [], None, None, lineno=1217, col_offset=20), lineno=1217, col_offset=12), Assign([Name('attrs', Store(), lineno=1219, col_offset=12)], Call(Name('spilldata', Load(), lineno=1219, col_offset=20), [BinOp(Str('Data and other attributes %s:\n', lineno=1219, col_offset=30), Mod(), Name('tag', Load(), lineno=1219, col_offset=66), lineno=1219, col_offset=30), Name('attrs', Load(), lineno=1219, col_offset=71), Lambda(arguments([Name('t', Param(), lineno=1220, col_offset=37)], None, None, []), Compare(Subscript(Name('t', Load(), lineno=1220, col_offset=40), Index(Num(1, lineno=1220, col_offset=42)), Load(), lineno=1220, col_offset=40), [Eq()], [Str('data', lineno=1220, col_offset=48)], lineno=1220, col_offset=40), lineno=1220, col_offset=30)], [], None, None, lineno=1219, col_offset=20), lineno=1219, col_offset=12), Assert(Compare(Name('attrs', Load(), lineno=1221, col_offset=19), [Eq()], [List([], Load(), lineno=1221, col_offset=28)], lineno=1221, col_offset=19), None, lineno=1221, col_offset=12), Assign([Name('attrs', Store(), lineno=1222, col_offset=12)], Name('inherited', Load(), lineno=1222, col_offset=20), lineno=1222, col_offset=12)], [], lineno=1191, col_offset=8), Assign([Name('contents', Store(), lineno=1224, col_offset=8)], Call(Attribute(Str('\n', lineno=1224, col_offset=19), 'join', Load(), lineno=1224, col_offset=19), [Name('contents', Load(), lineno=1224, col_offset=29)], [], None, None, lineno=1224, col_offset=19), lineno=1224, col_offset=8), If(UnaryOp(Not(), Name('contents', Load(), lineno=1225, col_offset=15), lineno=1225, col_offset=11), [Return(BinOp(Name('title', Load(), lineno=1226, col_offset=19), Add(), Str('\n', lineno=1226, col_offset=27), lineno=1226, col_offset=19), lineno=1226, col_offset=12)], [], lineno=1225, col_offset=8), Return(BinOp(BinOp(BinOp(Name('title', Load(), lineno=1227, col_offset=15), Add(), Str('\n', lineno=1227, col_offset=23), lineno=1227, col_offset=15), Add(), Call(Attribute(Name('self', Load(), lineno=1227, col_offset=30), 'indent', Load(), lineno=1227, col_offset=30), [Call(Name('rstrip', Load(), lineno=1227, col_offset=42), [Name('contents', Load(), lineno=1227, col_offset=49)], [], None, None, lineno=1227, col_offset=42), Str(' |  ', lineno=1227, col_offset=60)], [], None, None, lineno=1227, col_offset=30), lineno=1227, col_offset=28), Add(), Str('\n', lineno=1227, col_offset=70), lineno=1227, col_offset=68), lineno=1227, col_offset=8)], [], lineno=1116, col_offset=4), FunctionDef('formatvalue', arguments([Name('self', Param(), lineno=1229, col_offset=20), Name('object', Param(), lineno=1229, col_offset=26)], None, None, []), [Expr(Str('Format an argument default value as text.', lineno=1230, col_offset=8), lineno=1230, col_offset=8), Return(BinOp(Str('=', lineno=1231, col_offset=15), Add(), Call(Attribute(Name('self', Load(), lineno=1231, col_offset=21), 'repr', Load(), lineno=1231, col_offset=21), [Name('object', Load(), lineno=1231, col_offset=31)], [], None, None, lineno=1231, col_offset=21), lineno=1231, col_offset=15), lineno=1231, col_offset=8)], [], lineno=1229, col_offset=4), FunctionDef('docroutine', arguments([Name('self', Param(), lineno=1233, col_offset=19), Name('object', Param(), lineno=1233, col_offset=25), Name('name', Param(), lineno=1233, col_offset=33), Name('mod', Param(), lineno=1233, col_offset=44), Name('cl', Param(), lineno=1233, col_offset=54)], None, None, [Name('None', Load(), lineno=1233, col_offset=38), Name('None', Load(), lineno=1233, col_offset=48), Name('None', Load(), lineno=1233, col_offset=57)]), [Expr(Str('Produce text documentation for a function or method object.', lineno=1234, col_offset=8), lineno=1234, col_offset=8), Assign([Name('realname', Store(), lineno=1235, col_offset=8)], Attribute(Name('object', Load(), lineno=1235, col_offset=19), '__name__', Load(), lineno=1235, col_offset=19), lineno=1235, col_offset=8), Assign([Name('name', Store(), lineno=1236, col_offset=8)], BoolOp(Or(), [Name('name', Load(), lineno=1236, col_offset=15), Name('realname', Load(), lineno=1236, col_offset=23)], lineno=1236, col_offset=15), lineno=1236, col_offset=8), Assign([Name('note', Store(), lineno=1237, col_offset=8)], Str('', lineno=1237, col_offset=15), lineno=1237, col_offset=8), Assign([Name('skipdocs', Store(), lineno=1238, col_offset=8)], Num(0, lineno=1238, col_offset=19), lineno=1238, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=1239, col_offset=11), 'ismethod', Load(), lineno=1239, col_offset=11), [Name('object', Load(), lineno=1239, col_offset=28)], [], None, None, lineno=1239, col_offset=11), [Assign([Name('imclass', Store(), lineno=1240, col_offset=12)], Attribute(Name('object', Load(), lineno=1240, col_offset=22), 'im_class', Load(), lineno=1240, col_offset=22), lineno=1240, col_offset=12), If(Name('cl', Load(), lineno=1241, col_offset=15), [If(Compare(Name('imclass', Load(), lineno=1242, col_offset=19), [IsNot()], [Name('cl', Load(), lineno=1242, col_offset=34)], lineno=1242, col_offset=19), [Assign([Name('note', Store(), lineno=1243, col_offset=20)], BinOp(Str(' from ', lineno=1243, col_offset=27), Add(), Call(Name('classname', Load(), lineno=1243, col_offset=38), [Name('imclass', Load(), lineno=1243, col_offset=48), Name('mod', Load(), lineno=1243, col_offset=57)], [], None, None, lineno=1243, col_offset=38), lineno=1243, col_offset=27), lineno=1243, col_offset=20)], [], lineno=1242, col_offset=16)], [If(Compare(Attribute(Name('object', Load(), lineno=1245, col_offset=19), 'im_self', Load(), lineno=1245, col_offset=19), [IsNot()], [Name('None', Load(), lineno=1245, col_offset=41)], lineno=1245, col_offset=19), [Assign([Name('note', Store(), lineno=1246, col_offset=20)], BinOp(Str(' method of %s instance', lineno=1246, col_offset=27), Mod(), Call(Name('classname', Load(), lineno=1246, col_offset=54), [Attribute(Attribute(Name('object', Load(), lineno=1247, col_offset=24), 'im_self', Load(), lineno=1247, col_offset=24), '__class__', Load(), lineno=1247, col_offset=24), Name('mod', Load(), lineno=1247, col_offset=50)], [], None, None, lineno=1246, col_offset=54), lineno=1246, col_offset=27), lineno=1246, col_offset=20)], [Assign([Name('note', Store(), lineno=1249, col_offset=20)], BinOp(Str(' unbound %s method', lineno=1249, col_offset=27), Mod(), Call(Name('classname', Load(), lineno=1249, col_offset=50), [Name('imclass', Load(), lineno=1249, col_offset=60), Name('mod', Load(), lineno=1249, col_offset=68)], [], None, None, lineno=1249, col_offset=50), lineno=1249, col_offset=27), lineno=1249, col_offset=20)], lineno=1245, col_offset=16)], lineno=1241, col_offset=12), Assign([Name('object', Store(), lineno=1250, col_offset=12)], Attribute(Name('object', Load(), lineno=1250, col_offset=21), 'im_func', Load(), lineno=1250, col_offset=21), lineno=1250, col_offset=12)], [], lineno=1239, col_offset=8), If(Compare(Name('name', Load(), lineno=1252, col_offset=11), [Eq()], [Name('realname', Load(), lineno=1252, col_offset=19)], lineno=1252, col_offset=11), [Assign([Name('title', Store(), lineno=1253, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1253, col_offset=20), 'bold', Load(), lineno=1253, col_offset=20), [Name('realname', Load(), lineno=1253, col_offset=30)], [], None, None, lineno=1253, col_offset=20), lineno=1253, col_offset=12)], [If(BoolOp(And(), [Name('cl', Load(), lineno=1255, col_offset=16), Compare(Name('realname', Load(), lineno=1255, col_offset=23), [In()], [Attribute(Name('cl', Load(), lineno=1255, col_offset=35), '__dict__', Load(), lineno=1255, col_offset=35)], lineno=1255, col_offset=23), Compare(Subscript(Attribute(Name('cl', Load(), lineno=1256, col_offset=16), '__dict__', Load(), lineno=1256, col_offset=16), Index(Name('realname', Load(), lineno=1256, col_offset=28)), Load(), lineno=1256, col_offset=16), [Is()], [Name('object', Load(), lineno=1256, col_offset=41)], lineno=1256, col_offset=16)], lineno=1255, col_offset=16), [Assign([Name('skipdocs', Store(), lineno=1257, col_offset=16)], Num(1, lineno=1257, col_offset=27), lineno=1257, col_offset=16)], [], lineno=1255, col_offset=12), Assign([Name('title', Store(), lineno=1258, col_offset=12)], BinOp(BinOp(Call(Attribute(Name('self', Load(), lineno=1258, col_offset=20), 'bold', Load(), lineno=1258, col_offset=20), [Name('name', Load(), lineno=1258, col_offset=30)], [], None, None, lineno=1258, col_offset=20), Add(), Str(' = ', lineno=1258, col_offset=38), lineno=1258, col_offset=20), Add(), Name('realname', Load(), lineno=1258, col_offset=46), lineno=1258, col_offset=44), lineno=1258, col_offset=12)], lineno=1252, col_offset=8), If(Call(Attribute(Name('inspect', Load(), lineno=1259, col_offset=11), 'isfunction', Load(), lineno=1259, col_offset=11), [Name('object', Load(), lineno=1259, col_offset=30)], [], None, None, lineno=1259, col_offset=11), [Assign([Tuple([Name('args', Store(), lineno=1260, col_offset=12), Name('varargs', Store(), lineno=1260, col_offset=18), Name('varkw', Store(), lineno=1260, col_offset=27), Name('defaults', Store(), lineno=1260, col_offset=34)], Store(), lineno=1260, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=1260, col_offset=45), 'getargspec', Load(), lineno=1260, col_offset=45), [Name('object', Load(), lineno=1260, col_offset=64)], [], None, None, lineno=1260, col_offset=45), lineno=1260, col_offset=12), Assign([Name('argspec', Store(), lineno=1261, col_offset=12)], Call(Attribute(Name('inspect', Load(), lineno=1261, col_offset=22), 'formatargspec', Load(), lineno=1261, col_offset=22), [Name('args', Load(), lineno=1262, col_offset=16), Name('varargs', Load(), lineno=1262, col_offset=22), Name('varkw', Load(), lineno=1262, col_offset=31), Name('defaults', Load(), lineno=1262, col_offset=38)], [keyword('formatvalue', Attribute(Name('self', Load(), lineno=1262, col_offset=60), 'formatvalue', Load(), lineno=1262, col_offset=60))], None, None, lineno=1261, col_offset=22), lineno=1261, col_offset=12), If(Compare(Name('realname', Load(), lineno=1263, col_offset=15), [Eq()], [Str('<lambda>', lineno=1263, col_offset=27)], lineno=1263, col_offset=15), [Assign([Name('title', Store(), lineno=1264, col_offset=16)], BinOp(Call(Attribute(Name('self', Load(), lineno=1264, col_offset=24), 'bold', Load(), lineno=1264, col_offset=24), [Name('name', Load(), lineno=1264, col_offset=34)], [], None, None, lineno=1264, col_offset=24), Add(), Str(' lambda ', lineno=1264, col_offset=42), lineno=1264, col_offset=24), lineno=1264, col_offset=16), Assign([Name('argspec', Store(), lineno=1265, col_offset=16)], Subscript(Name('argspec', Load(), lineno=1265, col_offset=26), Slice(Num(1, lineno=1265, col_offset=34), Num(-1, lineno=1265, col_offset=37), None), Load(), lineno=1265, col_offset=26), lineno=1265, col_offset=16)], [], lineno=1263, col_offset=12)], [Assign([Name('argspec', Store(), lineno=1267, col_offset=12)], Str('(...)', lineno=1267, col_offset=22), lineno=1267, col_offset=12)], lineno=1259, col_offset=8), Assign([Name('decl', Store(), lineno=1268, col_offset=8)], BinOp(BinOp(Name('title', Load(), lineno=1268, col_offset=15), Add(), Name('argspec', Load(), lineno=1268, col_offset=23), lineno=1268, col_offset=15), Add(), Name('note', Load(), lineno=1268, col_offset=33), lineno=1268, col_offset=31), lineno=1268, col_offset=8), If(Name('skipdocs', Load(), lineno=1270, col_offset=11), [Return(BinOp(Name('decl', Load(), lineno=1271, col_offset=19), Add(), Str('\n', lineno=1271, col_offset=26), lineno=1271, col_offset=19), lineno=1271, col_offset=12)], [Assign([Name('doc', Store(), lineno=1273, col_offset=12)], BoolOp(Or(), [Call(Name('getdoc', Load(), lineno=1273, col_offset=18), [Name('object', Load(), lineno=1273, col_offset=25)], [], None, None, lineno=1273, col_offset=18), Str('', lineno=1273, col_offset=36)], lineno=1273, col_offset=18), lineno=1273, col_offset=12), Return(BinOp(BinOp(Name('decl', Load(), lineno=1274, col_offset=19), Add(), Str('\n', lineno=1274, col_offset=26), lineno=1274, col_offset=19), Add(), BoolOp(And(), [Name('doc', Load(), lineno=1274, col_offset=34), BinOp(Call(Name('rstrip', Load(), lineno=1274, col_offset=42), [Call(Attribute(Name('self', Load(), lineno=1274, col_offset=49), 'indent', Load(), lineno=1274, col_offset=49), [Name('doc', Load(), lineno=1274, col_offset=61)], [], None, None, lineno=1274, col_offset=49)], [], None, None, lineno=1274, col_offset=42), Add(), Str('\n', lineno=1274, col_offset=69), lineno=1274, col_offset=42)], lineno=1274, col_offset=34), lineno=1274, col_offset=31), lineno=1274, col_offset=12)], lineno=1270, col_offset=8)], [], lineno=1233, col_offset=4), FunctionDef('_docdescriptor', arguments([Name('self', Param(), lineno=1276, col_offset=23), Name('name', Param(), lineno=1276, col_offset=29), Name('value', Param(), lineno=1276, col_offset=35), Name('mod', Param(), lineno=1276, col_offset=42)], None, None, []), [Assign([Name('results', Store(), lineno=1277, col_offset=8)], List([], Load(), lineno=1277, col_offset=18), lineno=1277, col_offset=8), Assign([Name('push', Store(), lineno=1278, col_offset=8)], Attribute(Name('results', Load(), lineno=1278, col_offset=15), 'append', Load(), lineno=1278, col_offset=15), lineno=1278, col_offset=8), If(Name('name', Load(), lineno=1280, col_offset=11), [Expr(Call(Name('push', Load(), lineno=1281, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1281, col_offset=17), 'bold', Load(), lineno=1281, col_offset=17), [Name('name', Load(), lineno=1281, col_offset=27)], [], None, None, lineno=1281, col_offset=17)], [], None, None, lineno=1281, col_offset=12), lineno=1281, col_offset=12), Expr(Call(Name('push', Load(), lineno=1282, col_offset=12), [Str('\n', lineno=1282, col_offset=17)], [], None, None, lineno=1282, col_offset=12), lineno=1282, col_offset=12)], [], lineno=1280, col_offset=8), Assign([Name('doc', Store(), lineno=1283, col_offset=8)], BoolOp(Or(), [Call(Name('getdoc', Load(), lineno=1283, col_offset=14), [Name('value', Load(), lineno=1283, col_offset=21)], [], None, None, lineno=1283, col_offset=14), Str('', lineno=1283, col_offset=31)], lineno=1283, col_offset=14), lineno=1283, col_offset=8), If(Name('doc', Load(), lineno=1284, col_offset=11), [Expr(Call(Name('push', Load(), lineno=1285, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=1285, col_offset=17), 'indent', Load(), lineno=1285, col_offset=17), [Name('doc', Load(), lineno=1285, col_offset=29)], [], None, None, lineno=1285, col_offset=17)], [], None, None, lineno=1285, col_offset=12), lineno=1285, col_offset=12), Expr(Call(Name('push', Load(), lineno=1286, col_offset=12), [Str('\n', lineno=1286, col_offset=17)], [], None, None, lineno=1286, col_offset=12), lineno=1286, col_offset=12)], [], lineno=1284, col_offset=8), Return(Call(Attribute(Str('', lineno=1287, col_offset=15), 'join', Load(), lineno=1287, col_offset=15), [Name('results', Load(), lineno=1287, col_offset=23)], [], None, None, lineno=1287, col_offset=15), lineno=1287, col_offset=8)], [], lineno=1276, col_offset=4), FunctionDef('docproperty', arguments([Name('self', Param(), lineno=1289, col_offset=20), Name('object', Param(), lineno=1289, col_offset=26), Name('name', Param(), lineno=1289, col_offset=34), Name('mod', Param(), lineno=1289, col_offset=45), Name('cl', Param(), lineno=1289, col_offset=55)], None, None, [Name('None', Load(), lineno=1289, col_offset=39), Name('None', Load(), lineno=1289, col_offset=49), Name('None', Load(), lineno=1289, col_offset=58)]), [Expr(Str('Produce text documentation for a property.', lineno=1290, col_offset=8), lineno=1290, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=1291, col_offset=15), '_docdescriptor', Load(), lineno=1291, col_offset=15), [Name('name', Load(), lineno=1291, col_offset=35), Name('object', Load(), lineno=1291, col_offset=41), Name('mod', Load(), lineno=1291, col_offset=49)], [], None, None, lineno=1291, col_offset=15), lineno=1291, col_offset=8)], [], lineno=1289, col_offset=4), FunctionDef('docdata', arguments([Name('self', Param(), lineno=1293, col_offset=16), Name('object', Param(), lineno=1293, col_offset=22), Name('name', Param(), lineno=1293, col_offset=30), Name('mod', Param(), lineno=1293, col_offset=41), Name('cl', Param(), lineno=1293, col_offset=51)], None, None, [Name('None', Load(), lineno=1293, col_offset=35), Name('None', Load(), lineno=1293, col_offset=45), Name('None', Load(), lineno=1293, col_offset=54)]), [Expr(Str('Produce text documentation for a data descriptor.', lineno=1294, col_offset=8), lineno=1294, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=1295, col_offset=15), '_docdescriptor', Load(), lineno=1295, col_offset=15), [Name('name', Load(), lineno=1295, col_offset=35), Name('object', Load(), lineno=1295, col_offset=41), Name('mod', Load(), lineno=1295, col_offset=49)], [], None, None, lineno=1295, col_offset=15), lineno=1295, col_offset=8)], [], lineno=1293, col_offset=4), FunctionDef('docother', arguments([Name('self', Param(), lineno=1297, col_offset=17), Name('object', Param(), lineno=1297, col_offset=23), Name('name', Param(), lineno=1297, col_offset=31), Name('mod', Param(), lineno=1297, col_offset=42), Name('parent', Param(), lineno=1297, col_offset=52), Name('maxlen', Param(), lineno=1297, col_offset=65), Name('doc', Param(), lineno=1297, col_offset=78)], None, None, [Name('None', Load(), lineno=1297, col_offset=36), Name('None', Load(), lineno=1297, col_offset=46), Name('None', Load(), lineno=1297, col_offset=59), Name('None', Load(), lineno=1297, col_offset=72), Name('None', Load(), lineno=1297, col_offset=82)]), [Expr(Str('Produce text documentation for a data object.', lineno=1298, col_offset=8), lineno=1298, col_offset=8), Assign([Name('repr', Store(), lineno=1299, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1299, col_offset=15), 'repr', Load(), lineno=1299, col_offset=15), [Name('object', Load(), lineno=1299, col_offset=25)], [], None, None, lineno=1299, col_offset=15), lineno=1299, col_offset=8), If(Name('maxlen', Load(), lineno=1300, col_offset=11), [Assign([Name('line', Store(), lineno=1301, col_offset=12)], BinOp(BoolOp(Or(), [BoolOp(And(), [Name('name', Load(), lineno=1301, col_offset=20), BinOp(Name('name', Load(), lineno=1301, col_offset=29), Add(), Str(' = ', lineno=1301, col_offset=36), lineno=1301, col_offset=29)], lineno=1301, col_offset=20), Str('', lineno=1301, col_offset=45)], lineno=1301, col_offset=20), Add(), Name('repr', Load(), lineno=1301, col_offset=51), lineno=1301, col_offset=19), lineno=1301, col_offset=12), Assign([Name('chop', Store(), lineno=1302, col_offset=12)], BinOp(Name('maxlen', Load(), lineno=1302, col_offset=19), Sub(), Call(Name('len', Load(), lineno=1302, col_offset=28), [Name('line', Load(), lineno=1302, col_offset=32)], [], None, None, lineno=1302, col_offset=28), lineno=1302, col_offset=19), lineno=1302, col_offset=12), If(Compare(Name('chop', Load(), lineno=1303, col_offset=15), [Lt()], [Num(0, lineno=1303, col_offset=22)], lineno=1303, col_offset=15), [Assign([Name('repr', Store(), lineno=1303, col_offset=25)], BinOp(Subscript(Name('repr', Load(), lineno=1303, col_offset=32), Slice(None, Name('chop', Load(), lineno=1303, col_offset=38), None), Load(), lineno=1303, col_offset=32), Add(), Str('...', lineno=1303, col_offset=46), lineno=1303, col_offset=32), lineno=1303, col_offset=25)], [], lineno=1303, col_offset=12)], [], lineno=1300, col_offset=8), Assign([Name('line', Store(), lineno=1304, col_offset=8)], BinOp(BoolOp(Or(), [BoolOp(And(), [Name('name', Load(), lineno=1304, col_offset=16), BinOp(Call(Attribute(Name('self', Load(), lineno=1304, col_offset=25), 'bold', Load(), lineno=1304, col_offset=25), [Name('name', Load(), lineno=1304, col_offset=35)], [], None, None, lineno=1304, col_offset=25), Add(), Str(' = ', lineno=1304, col_offset=43), lineno=1304, col_offset=25)], lineno=1304, col_offset=16), Str('', lineno=1304, col_offset=52)], lineno=1304, col_offset=16), Add(), Name('repr', Load(), lineno=1304, col_offset=58), lineno=1304, col_offset=15), lineno=1304, col_offset=8), If(Compare(Name('doc', Load(), lineno=1305, col_offset=11), [IsNot()], [Name('None', Load(), lineno=1305, col_offset=22)], lineno=1305, col_offset=11), [AugAssign(Name('line', Store(), lineno=1306, col_offset=12), Add(), BinOp(Str('\n', lineno=1306, col_offset=20), Add(), Call(Attribute(Name('self', Load(), lineno=1306, col_offset=27), 'indent', Load(), lineno=1306, col_offset=27), [Call(Name('str', Load(), lineno=1306, col_offset=39), [Name('doc', Load(), lineno=1306, col_offset=43)], [], None, None, lineno=1306, col_offset=39)], [], None, None, lineno=1306, col_offset=27), lineno=1306, col_offset=20), lineno=1306, col_offset=12)], [], lineno=1305, col_offset=8), Return(Name('line', Load(), lineno=1307, col_offset=15), lineno=1307, col_offset=8)], [], lineno=1297, col_offset=4)], [], lineno=974, col_offset=0), FunctionDef('pager', arguments([Name('text', Param(), lineno=1311, col_offset=10)], None, None, []), [Expr(Str('The first time this is called, determine what kind of pager to use.', lineno=1312, col_offset=4), lineno=1312, col_offset=4), Global(['pager'], lineno=1313, col_offset=4), Assign([Name('pager', Store(), lineno=1314, col_offset=4)], Call(Name('getpager', Load(), lineno=1314, col_offset=12), [], [], None, None, lineno=1314, col_offset=12), lineno=1314, col_offset=4), Expr(Call(Name('pager', Load(), lineno=1315, col_offset=4), [Name('text', Load(), lineno=1315, col_offset=10)], [], None, None, lineno=1315, col_offset=4), lineno=1315, col_offset=4)], [], lineno=1311, col_offset=0), FunctionDef('getpager', arguments([], None, None, []), [Expr(Str('Decide what method to use for paging through text.', lineno=1318, col_offset=4), lineno=1318, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=1319, col_offset=7), [Attribute(Name('sys', Load(), lineno=1319, col_offset=12), 'stdout', Load(), lineno=1319, col_offset=12)], [], None, None, lineno=1319, col_offset=7), [IsNot()], [Attribute(Name('types', Load(), lineno=1319, col_offset=31), 'FileType', Load(), lineno=1319, col_offset=31)], lineno=1319, col_offset=7), [Return(Name('plainpager', Load(), lineno=1320, col_offset=15), lineno=1320, col_offset=8)], [], lineno=1319, col_offset=4), If(BoolOp(Or(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=1321, col_offset=11), 'stdin', Load(), lineno=1321, col_offset=11), 'isatty', Load(), lineno=1321, col_offset=11), [], [], None, None, lineno=1321, col_offset=11), lineno=1321, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=1321, col_offset=37), 'stdout', Load(), lineno=1321, col_offset=37), 'isatty', Load(), lineno=1321, col_offset=37), [], [], None, None, lineno=1321, col_offset=37), lineno=1321, col_offset=33)], lineno=1321, col_offset=7), [Return(Name('plainpager', Load(), lineno=1322, col_offset=15), lineno=1322, col_offset=8)], [], lineno=1321, col_offset=4), If(Compare(Str('PAGER', lineno=1323, col_offset=7), [In()], [Attribute(Name('os', Load(), lineno=1323, col_offset=18), 'environ', Load(), lineno=1323, col_offset=18)], lineno=1323, col_offset=7), [If(Compare(Attribute(Name('sys', Load(), lineno=1324, col_offset=11), 'platform', Load(), lineno=1324, col_offset=11), [Eq()], [Str('win32', lineno=1324, col_offset=27)], lineno=1324, col_offset=11), [Return(Lambda(arguments([Name('text', Param(), lineno=1325, col_offset=26)], None, None, []), Call(Name('tempfilepager', Load(), lineno=1325, col_offset=32), [Call(Name('plain', Load(), lineno=1325, col_offset=46), [Name('text', Load(), lineno=1325, col_offset=52)], [], None, None, lineno=1325, col_offset=46), Subscript(Attribute(Name('os', Load(), lineno=1325, col_offset=59), 'environ', Load(), lineno=1325, col_offset=59), Index(Str('PAGER', lineno=1325, col_offset=70)), Load(), lineno=1325, col_offset=59)], [], None, None, lineno=1325, col_offset=32), lineno=1325, col_offset=19), lineno=1325, col_offset=12)], [If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=1326, col_offset=13), 'environ', Load(), lineno=1326, col_offset=13), 'get', Load(), lineno=1326, col_offset=13), [Str('TERM', lineno=1326, col_offset=28)], [], None, None, lineno=1326, col_offset=13), [In()], [Tuple([Str('dumb', lineno=1326, col_offset=40), Str('emacs', lineno=1326, col_offset=48)], Load(), lineno=1326, col_offset=40)], lineno=1326, col_offset=13), [Return(Lambda(arguments([Name('text', Param(), lineno=1327, col_offset=26)], None, None, []), Call(Name('pipepager', Load(), lineno=1327, col_offset=32), [Call(Name('plain', Load(), lineno=1327, col_offset=42), [Name('text', Load(), lineno=1327, col_offset=48)], [], None, None, lineno=1327, col_offset=42), Subscript(Attribute(Name('os', Load(), lineno=1327, col_offset=55), 'environ', Load(), lineno=1327, col_offset=55), Index(Str('PAGER', lineno=1327, col_offset=66)), Load(), lineno=1327, col_offset=55)], [], None, None, lineno=1327, col_offset=32), lineno=1327, col_offset=19), lineno=1327, col_offset=12)], [Return(Lambda(arguments([Name('text', Param(), lineno=1329, col_offset=26)], None, None, []), Call(Name('pipepager', Load(), lineno=1329, col_offset=32), [Name('text', Load(), lineno=1329, col_offset=42), Subscript(Attribute(Name('os', Load(), lineno=1329, col_offset=48), 'environ', Load(), lineno=1329, col_offset=48), Index(Str('PAGER', lineno=1329, col_offset=59)), Load(), lineno=1329, col_offset=48)], [], None, None, lineno=1329, col_offset=32), lineno=1329, col_offset=19), lineno=1329, col_offset=12)], lineno=1326, col_offset=13)], lineno=1324, col_offset=8)], [], lineno=1323, col_offset=4), If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=1330, col_offset=7), 'environ', Load(), lineno=1330, col_offset=7), 'get', Load(), lineno=1330, col_offset=7), [Str('TERM', lineno=1330, col_offset=22)], [], None, None, lineno=1330, col_offset=7), [In()], [Tuple([Str('dumb', lineno=1330, col_offset=34), Str('emacs', lineno=1330, col_offset=42)], Load(), lineno=1330, col_offset=34)], lineno=1330, col_offset=7), [Return(Name('plainpager', Load(), lineno=1331, col_offset=15), lineno=1331, col_offset=8)], [], lineno=1330, col_offset=4), If(BoolOp(Or(), [Compare(Attribute(Name('sys', Load(), lineno=1332, col_offset=7), 'platform', Load(), lineno=1332, col_offset=7), [Eq()], [Str('win32', lineno=1332, col_offset=23)], lineno=1332, col_offset=7), Call(Attribute(Attribute(Name('sys', Load(), lineno=1332, col_offset=34), 'platform', Load(), lineno=1332, col_offset=34), 'startswith', Load(), lineno=1332, col_offset=34), [Str('os2', lineno=1332, col_offset=58)], [], None, None, lineno=1332, col_offset=34)], lineno=1332, col_offset=7), [Return(Lambda(arguments([Name('text', Param(), lineno=1333, col_offset=22)], None, None, []), Call(Name('tempfilepager', Load(), lineno=1333, col_offset=28), [Call(Name('plain', Load(), lineno=1333, col_offset=42), [Name('text', Load(), lineno=1333, col_offset=48)], [], None, None, lineno=1333, col_offset=42), Str('more <', lineno=1333, col_offset=55)], [], None, None, lineno=1333, col_offset=28), lineno=1333, col_offset=15), lineno=1333, col_offset=8)], [], lineno=1332, col_offset=4), If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=1334, col_offset=7), [Name('os', Load(), lineno=1334, col_offset=15), Str('system', lineno=1334, col_offset=19)], [], None, None, lineno=1334, col_offset=7), Compare(Call(Attribute(Name('os', Load(), lineno=1334, col_offset=33), 'system', Load(), lineno=1334, col_offset=33), [Str('(less) 2>/dev/null', lineno=1334, col_offset=43)], [], None, None, lineno=1334, col_offset=33), [Eq()], [Num(0, lineno=1334, col_offset=68)], lineno=1334, col_offset=33)], lineno=1334, col_offset=7), [Return(Lambda(arguments([Name('text', Param(), lineno=1335, col_offset=22)], None, None, []), Call(Name('pipepager', Load(), lineno=1335, col_offset=28), [Name('text', Load(), lineno=1335, col_offset=38), Str('less', lineno=1335, col_offset=44)], [], None, None, lineno=1335, col_offset=28), lineno=1335, col_offset=15), lineno=1335, col_offset=8)], [], lineno=1334, col_offset=4), Import([alias('tempfile', None)], lineno=1337, col_offset=4), Assign([Tuple([Name('fd', Store(), lineno=1338, col_offset=5), Name('filename', Store(), lineno=1338, col_offset=9)], Store(), lineno=1338, col_offset=5)], Call(Attribute(Name('tempfile', Load(), lineno=1338, col_offset=21), 'mkstemp', Load(), lineno=1338, col_offset=21), [], [], None, None, lineno=1338, col_offset=21), lineno=1338, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1339, col_offset=4), 'close', Load(), lineno=1339, col_offset=4), [Name('fd', Load(), lineno=1339, col_offset=13)], [], None, None, lineno=1339, col_offset=4), lineno=1339, col_offset=4), TryFinally([If(BoolOp(And(), [Call(Name('hasattr', Load(), lineno=1341, col_offset=11), [Name('os', Load(), lineno=1341, col_offset=19), Str('system', lineno=1341, col_offset=23)], [], None, None, lineno=1341, col_offset=11), Compare(Call(Attribute(Name('os', Load(), lineno=1341, col_offset=37), 'system', Load(), lineno=1341, col_offset=37), [BinOp(Str('more "%s"', lineno=1341, col_offset=47), Mod(), Name('filename', Load(), lineno=1341, col_offset=61), lineno=1341, col_offset=47)], [], None, None, lineno=1341, col_offset=37), [Eq()], [Num(0, lineno=1341, col_offset=74)], lineno=1341, col_offset=37)], lineno=1341, col_offset=11), [Return(Lambda(arguments([Name('text', Param(), lineno=1342, col_offset=26)], None, None, []), Call(Name('pipepager', Load(), lineno=1342, col_offset=32), [Name('text', Load(), lineno=1342, col_offset=42), Str('more', lineno=1342, col_offset=48)], [], None, None, lineno=1342, col_offset=32), lineno=1342, col_offset=19), lineno=1342, col_offset=12)], [Return(Name('ttypager', Load(), lineno=1344, col_offset=19), lineno=1344, col_offset=12)], lineno=1341, col_offset=8)], [Expr(Call(Attribute(Name('os', Load(), lineno=1346, col_offset=8), 'unlink', Load(), lineno=1346, col_offset=8), [Name('filename', Load(), lineno=1346, col_offset=18)], [], None, None, lineno=1346, col_offset=8), lineno=1346, col_offset=8)], lineno=1340, col_offset=4)], [], lineno=1317, col_offset=0), FunctionDef('plain', arguments([Name('text', Param(), lineno=1348, col_offset=10)], None, None, []), [Expr(Str('Remove boldface formatting from text.', lineno=1349, col_offset=4), lineno=1349, col_offset=4), Return(Call(Attribute(Name('re', Load(), lineno=1350, col_offset=11), 'sub', Load(), lineno=1350, col_offset=11), [Str('.\x08', lineno=1350, col_offset=18), Str('', lineno=1350, col_offset=25), Name('text', Load(), lineno=1350, col_offset=29)], [], None, None, lineno=1350, col_offset=11), lineno=1350, col_offset=4)], [], lineno=1348, col_offset=0), FunctionDef('pipepager', arguments([Name('text', Param(), lineno=1352, col_offset=14), Name('cmd', Param(), lineno=1352, col_offset=20)], None, None, []), [Expr(Str('Page through text by feeding it to another program.', lineno=1353, col_offset=4), lineno=1353, col_offset=4), Assign([Name('pipe', Store(), lineno=1354, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=1354, col_offset=11), 'popen', Load(), lineno=1354, col_offset=11), [Name('cmd', Load(), lineno=1354, col_offset=20), Str('w', lineno=1354, col_offset=25)], [], None, None, lineno=1354, col_offset=11), lineno=1354, col_offset=4), TryExcept([Expr(Call(Attribute(Name('pipe', Load(), lineno=1356, col_offset=8), 'write', Load(), lineno=1356, col_offset=8), [Name('text', Load(), lineno=1356, col_offset=19)], [], None, None, lineno=1356, col_offset=8), lineno=1356, col_offset=8), Expr(Call(Attribute(Name('pipe', Load(), lineno=1357, col_offset=8), 'close', Load(), lineno=1357, col_offset=8), [], [], None, None, lineno=1357, col_offset=8), lineno=1357, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=1358, col_offset=11), None, [Pass( lineno=1359, col_offset=8)], lineno=1358, col_offset=4)], [], lineno=1355, col_offset=4)], [], lineno=1352, col_offset=0), FunctionDef('tempfilepager', arguments([Name('text', Param(), lineno=1361, col_offset=18), Name('cmd', Param(), lineno=1361, col_offset=24)], None, None, []), [Expr(Str('Page through text by invoking a program on a temporary file.', lineno=1362, col_offset=4), lineno=1362, col_offset=4), Import([alias('tempfile', None)], lineno=1363, col_offset=4), Assign([Name('filename', Store(), lineno=1364, col_offset=4)], Call(Attribute(Name('tempfile', Load(), lineno=1364, col_offset=15), 'mktemp', Load(), lineno=1364, col_offset=15), [], [], None, None, lineno=1364, col_offset=15), lineno=1364, col_offset=4), Assign([Name('file', Store(), lineno=1365, col_offset=4)], Call(Name('open', Load(), lineno=1365, col_offset=11), [Name('filename', Load(), lineno=1365, col_offset=16), Str('w', lineno=1365, col_offset=26)], [], None, None, lineno=1365, col_offset=11), lineno=1365, col_offset=4), Expr(Call(Attribute(Name('file', Load(), lineno=1366, col_offset=4), 'write', Load(), lineno=1366, col_offset=4), [Name('text', Load(), lineno=1366, col_offset=15)], [], None, None, lineno=1366, col_offset=4), lineno=1366, col_offset=4), Expr(Call(Attribute(Name('file', Load(), lineno=1367, col_offset=4), 'close', Load(), lineno=1367, col_offset=4), [], [], None, None, lineno=1367, col_offset=4), lineno=1367, col_offset=4), TryFinally([Expr(Call(Attribute(Name('os', Load(), lineno=1369, col_offset=8), 'system', Load(), lineno=1369, col_offset=8), [BinOp(BinOp(BinOp(Name('cmd', Load(), lineno=1369, col_offset=18), Add(), Str(' "', lineno=1369, col_offset=24), lineno=1369, col_offset=18), Add(), Name('filename', Load(), lineno=1369, col_offset=31), lineno=1369, col_offset=29), Add(), Str('"', lineno=1369, col_offset=42), lineno=1369, col_offset=40)], [], None, None, lineno=1369, col_offset=8), lineno=1369, col_offset=8)], [Expr(Call(Attribute(Name('os', Load(), lineno=1371, col_offset=8), 'unlink', Load(), lineno=1371, col_offset=8), [Name('filename', Load(), lineno=1371, col_offset=18)], [], None, None, lineno=1371, col_offset=8), lineno=1371, col_offset=8)], lineno=1368, col_offset=4)], [], lineno=1361, col_offset=0), FunctionDef('ttypager', arguments([Name('text', Param(), lineno=1373, col_offset=13)], None, None, []), [Expr(Str('Page through text on a text terminal.', lineno=1374, col_offset=4), lineno=1374, col_offset=4), Assign([Name('lines', Store(), lineno=1375, col_offset=4)], Call(Name('split', Load(), lineno=1375, col_offset=12), [Call(Name('plain', Load(), lineno=1375, col_offset=18), [Name('text', Load(), lineno=1375, col_offset=24)], [], None, None, lineno=1375, col_offset=18), Str('\n', lineno=1375, col_offset=31)], [], None, None, lineno=1375, col_offset=12), lineno=1375, col_offset=4), TryExcept([Import([alias('tty', None)], lineno=1377, col_offset=8), Assign([Name('fd', Store(), lineno=1378, col_offset=8)], Call(Attribute(Attribute(Name('sys', Load(), lineno=1378, col_offset=13), 'stdin', Load(), lineno=1378, col_offset=13), 'fileno', Load(), lineno=1378, col_offset=13), [], [], None, None, lineno=1378, col_offset=13), lineno=1378, col_offset=8), Assign([Name('old', Store(), lineno=1379, col_offset=8)], Call(Attribute(Name('tty', Load(), lineno=1379, col_offset=14), 'tcgetattr', Load(), lineno=1379, col_offset=14), [Name('fd', Load(), lineno=1379, col_offset=28)], [], None, None, lineno=1379, col_offset=14), lineno=1379, col_offset=8), Expr(Call(Attribute(Name('tty', Load(), lineno=1380, col_offset=8), 'setcbreak', Load(), lineno=1380, col_offset=8), [Name('fd', Load(), lineno=1380, col_offset=22)], [], None, None, lineno=1380, col_offset=8), lineno=1380, col_offset=8), Assign([Name('getchar', Store(), lineno=1381, col_offset=8)], Lambda(arguments([], None, None, []), Call(Attribute(Attribute(Name('sys', Load(), lineno=1381, col_offset=26), 'stdin', Load(), lineno=1381, col_offset=26), 'read', Load(), lineno=1381, col_offset=26), [Num(1, lineno=1381, col_offset=41)], [], None, None, lineno=1381, col_offset=26), lineno=1381, col_offset=18), lineno=1381, col_offset=8)], [ExceptHandler(Tuple([Name('ImportError', Load(), lineno=1382, col_offset=12), Name('AttributeError', Load(), lineno=1382, col_offset=25)], Load(), lineno=1382, col_offset=12), None, [Assign([Name('tty', Store(), lineno=1383, col_offset=8)], Name('None', Load(), lineno=1383, col_offset=14), lineno=1383, col_offset=8), Assign([Name('getchar', Store(), lineno=1384, col_offset=8)], Lambda(arguments([], None, None, []), Subscript(Subscript(Call(Attribute(Attribute(Name('sys', Load(), lineno=1384, col_offset=26), 'stdin', Load(), lineno=1384, col_offset=26), 'readline', Load(), lineno=1384, col_offset=26), [], [], None, None, lineno=1384, col_offset=26), Slice(None, Num(-1, lineno=1384, col_offset=49), None), Load(), lineno=1384, col_offset=26), Slice(None, Num(1, lineno=1384, col_offset=53), None), Load(), lineno=1384, col_offset=26), lineno=1384, col_offset=18), lineno=1384, col_offset=8)], lineno=1382, col_offset=4)], [], lineno=1376, col_offset=4), TryFinally([Assign([Name('r', Store(), lineno=1387, col_offset=8), Name('inc', Store(), lineno=1387, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=1387, col_offset=18), 'environ', Load(), lineno=1387, col_offset=18), 'get', Load(), lineno=1387, col_offset=18), [Str('LINES', lineno=1387, col_offset=33), Num(25, lineno=1387, col_offset=42)], [], None, None, lineno=1387, col_offset=18), Sub(), Num(1, lineno=1387, col_offset=48), lineno=1387, col_offset=18), lineno=1387, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1388, col_offset=8), 'stdout', Load(), lineno=1388, col_offset=8), 'write', Load(), lineno=1388, col_offset=8), [BinOp(Call(Name('join', Load(), lineno=1388, col_offset=25), [Subscript(Name('lines', Load(), lineno=1388, col_offset=30), Slice(None, Name('inc', Load(), lineno=1388, col_offset=37), None), Load(), lineno=1388, col_offset=30), Str('\n', lineno=1388, col_offset=43)], [], None, None, lineno=1388, col_offset=25), Add(), Str('\n', lineno=1388, col_offset=51), lineno=1388, col_offset=25)], [], None, None, lineno=1388, col_offset=8), lineno=1388, col_offset=8), While(Subscript(Name('lines', Load(), lineno=1389, col_offset=14), Slice(Name('r', Load(), lineno=1389, col_offset=20), None, None), Load(), lineno=1389, col_offset=14), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1390, col_offset=12), 'stdout', Load(), lineno=1390, col_offset=12), 'write', Load(), lineno=1390, col_offset=12), [Str('-- more --', lineno=1390, col_offset=29)], [], None, None, lineno=1390, col_offset=12), lineno=1390, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1391, col_offset=12), 'stdout', Load(), lineno=1391, col_offset=12), 'flush', Load(), lineno=1391, col_offset=12), [], [], None, None, lineno=1391, col_offset=12), lineno=1391, col_offset=12), Assign([Name('c', Store(), lineno=1392, col_offset=12)], Call(Name('getchar', Load(), lineno=1392, col_offset=16), [], [], None, None, lineno=1392, col_offset=16), lineno=1392, col_offset=12), If(Compare(Name('c', Load(), lineno=1394, col_offset=15), [In()], [Tuple([Str('q', lineno=1394, col_offset=21), Str('Q', lineno=1394, col_offset=26)], Load(), lineno=1394, col_offset=21)], lineno=1394, col_offset=15), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1395, col_offset=16), 'stdout', Load(), lineno=1395, col_offset=16), 'write', Load(), lineno=1395, col_offset=16), [Str('\r          \r', lineno=1395, col_offset=33)], [], None, None, lineno=1395, col_offset=16), lineno=1395, col_offset=16), Break( lineno=1396, col_offset=16)], [If(Compare(Name('c', Load(), lineno=1397, col_offset=17), [In()], [Tuple([Str('\r', lineno=1397, col_offset=23), Str('\n', lineno=1397, col_offset=29)], Load(), lineno=1397, col_offset=23)], lineno=1397, col_offset=17), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1398, col_offset=16), 'stdout', Load(), lineno=1398, col_offset=16), 'write', Load(), lineno=1398, col_offset=16), [BinOp(BinOp(Str('\r          \r', lineno=1398, col_offset=33), Add(), Subscript(Name('lines', Load(), lineno=1398, col_offset=52), Index(Name('r', Load(), lineno=1398, col_offset=58)), Load(), lineno=1398, col_offset=52), lineno=1398, col_offset=33), Add(), Str('\n', lineno=1398, col_offset=63), lineno=1398, col_offset=61)], [], None, None, lineno=1398, col_offset=16), lineno=1398, col_offset=16), Assign([Name('r', Store(), lineno=1399, col_offset=16)], BinOp(Name('r', Load(), lineno=1399, col_offset=20), Add(), Num(1, lineno=1399, col_offset=24), lineno=1399, col_offset=20), lineno=1399, col_offset=16), Continue( lineno=1400, col_offset=16)], [], lineno=1397, col_offset=17)], lineno=1394, col_offset=12), If(Compare(Name('c', Load(), lineno=1401, col_offset=15), [In()], [Tuple([Str('b', lineno=1401, col_offset=21), Str('B', lineno=1401, col_offset=26), Str('\x1b', lineno=1401, col_offset=31)], Load(), lineno=1401, col_offset=21)], lineno=1401, col_offset=15), [Assign([Name('r', Store(), lineno=1402, col_offset=16)], BinOp(BinOp(Name('r', Load(), lineno=1402, col_offset=20), Sub(), Name('inc', Load(), lineno=1402, col_offset=24), lineno=1402, col_offset=20), Sub(), Name('inc', Load(), lineno=1402, col_offset=30), lineno=1402, col_offset=28), lineno=1402, col_offset=16), If(Compare(Name('r', Load(), lineno=1403, col_offset=19), [Lt()], [Num(0, lineno=1403, col_offset=23)], lineno=1403, col_offset=19), [Assign([Name('r', Store(), lineno=1403, col_offset=26)], Num(0, lineno=1403, col_offset=30), lineno=1403, col_offset=26)], [], lineno=1403, col_offset=16)], [], lineno=1401, col_offset=12), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1404, col_offset=12), 'stdout', Load(), lineno=1404, col_offset=12), 'write', Load(), lineno=1404, col_offset=12), [BinOp(BinOp(Str('\n', lineno=1404, col_offset=29), Add(), Call(Name('join', Load(), lineno=1404, col_offset=36), [Subscript(Name('lines', Load(), lineno=1404, col_offset=41), Slice(Name('r', Load(), lineno=1404, col_offset=47), BinOp(Name('r', Load(), lineno=1404, col_offset=49), Add(), Name('inc', Load(), lineno=1404, col_offset=51), lineno=1404, col_offset=49), None), Load(), lineno=1404, col_offset=41), Str('\n', lineno=1404, col_offset=57)], [], None, None, lineno=1404, col_offset=36), lineno=1404, col_offset=29), Add(), Str('\n', lineno=1404, col_offset=65), lineno=1404, col_offset=63)], [], None, None, lineno=1404, col_offset=12), lineno=1404, col_offset=12), Assign([Name('r', Store(), lineno=1405, col_offset=12)], BinOp(Name('r', Load(), lineno=1405, col_offset=16), Add(), Name('inc', Load(), lineno=1405, col_offset=20), lineno=1405, col_offset=16), lineno=1405, col_offset=12)], [], lineno=1389, col_offset=8)], [If(Name('tty', Load(), lineno=1408, col_offset=11), [Expr(Call(Attribute(Name('tty', Load(), lineno=1409, col_offset=12), 'tcsetattr', Load(), lineno=1409, col_offset=12), [Name('fd', Load(), lineno=1409, col_offset=26), Attribute(Name('tty', Load(), lineno=1409, col_offset=30), 'TCSAFLUSH', Load(), lineno=1409, col_offset=30), Name('old', Load(), lineno=1409, col_offset=45)], [], None, None, lineno=1409, col_offset=12), lineno=1409, col_offset=12)], [], lineno=1408, col_offset=8)], lineno=1386, col_offset=4)], [], lineno=1373, col_offset=0), FunctionDef('plainpager', arguments([Name('text', Param(), lineno=1411, col_offset=15)], None, None, []), [Expr(Str('Simply print unformatted text.  This is the ultimate fallback.', lineno=1412, col_offset=4), lineno=1412, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=1413, col_offset=4), 'stdout', Load(), lineno=1413, col_offset=4), 'write', Load(), lineno=1413, col_offset=4), [Call(Name('plain', Load(), lineno=1413, col_offset=21), [Name('text', Load(), lineno=1413, col_offset=27)], [], None, None, lineno=1413, col_offset=21)], [], None, None, lineno=1413, col_offset=4), lineno=1413, col_offset=4)], [], lineno=1411, col_offset=0), FunctionDef('describe', arguments([Name('thing', Param(), lineno=1415, col_offset=13)], None, None, []), [Expr(Str('Produce a short description of the given thing.', lineno=1416, col_offset=4), lineno=1416, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1417, col_offset=7), 'ismodule', Load(), lineno=1417, col_offset=7), [Name('thing', Load(), lineno=1417, col_offset=24)], [], None, None, lineno=1417, col_offset=7), [If(Compare(Attribute(Name('thing', Load(), lineno=1418, col_offset=11), '__name__', Load(), lineno=1418, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=1418, col_offset=29), 'builtin_module_names', Load(), lineno=1418, col_offset=29)], lineno=1418, col_offset=11), [Return(BinOp(Str('built-in module ', lineno=1419, col_offset=19), Add(), Attribute(Name('thing', Load(), lineno=1419, col_offset=40), '__name__', Load(), lineno=1419, col_offset=40), lineno=1419, col_offset=19), lineno=1419, col_offset=12)], [], lineno=1418, col_offset=8), If(Call(Name('hasattr', Load(), lineno=1420, col_offset=11), [Name('thing', Load(), lineno=1420, col_offset=19), Str('__path__', lineno=1420, col_offset=26)], [], None, None, lineno=1420, col_offset=11), [Return(BinOp(Str('package ', lineno=1421, col_offset=19), Add(), Attribute(Name('thing', Load(), lineno=1421, col_offset=32), '__name__', Load(), lineno=1421, col_offset=32), lineno=1421, col_offset=19), lineno=1421, col_offset=12)], [Return(BinOp(Str('module ', lineno=1423, col_offset=19), Add(), Attribute(Name('thing', Load(), lineno=1423, col_offset=31), '__name__', Load(), lineno=1423, col_offset=31), lineno=1423, col_offset=19), lineno=1423, col_offset=12)], lineno=1420, col_offset=8)], [], lineno=1417, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1424, col_offset=7), 'isbuiltin', Load(), lineno=1424, col_offset=7), [Name('thing', Load(), lineno=1424, col_offset=25)], [], None, None, lineno=1424, col_offset=7), [Return(BinOp(Str('built-in function ', lineno=1425, col_offset=15), Add(), Attribute(Name('thing', Load(), lineno=1425, col_offset=38), '__name__', Load(), lineno=1425, col_offset=38), lineno=1425, col_offset=15), lineno=1425, col_offset=8)], [], lineno=1424, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1426, col_offset=7), 'isgetsetdescriptor', Load(), lineno=1426, col_offset=7), [Name('thing', Load(), lineno=1426, col_offset=34)], [], None, None, lineno=1426, col_offset=7), [Return(BinOp(Str('getset descriptor %s.%s.%s', lineno=1427, col_offset=15), Mod(), Tuple([Attribute(Attribute(Name('thing', Load(), lineno=1428, col_offset=12), '__objclass__', Load(), lineno=1428, col_offset=12), '__module__', Load(), lineno=1428, col_offset=12), Attribute(Attribute(Name('thing', Load(), lineno=1428, col_offset=43), '__objclass__', Load(), lineno=1428, col_offset=43), '__name__', Load(), lineno=1428, col_offset=43), Attribute(Name('thing', Load(), lineno=1429, col_offset=12), '__name__', Load(), lineno=1429, col_offset=12)], Load(), lineno=1428, col_offset=12), lineno=1427, col_offset=15), lineno=1427, col_offset=8)], [], lineno=1426, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1430, col_offset=7), 'ismemberdescriptor', Load(), lineno=1430, col_offset=7), [Name('thing', Load(), lineno=1430, col_offset=34)], [], None, None, lineno=1430, col_offset=7), [Return(BinOp(Str('member descriptor %s.%s.%s', lineno=1431, col_offset=15), Mod(), Tuple([Attribute(Attribute(Name('thing', Load(), lineno=1432, col_offset=12), '__objclass__', Load(), lineno=1432, col_offset=12), '__module__', Load(), lineno=1432, col_offset=12), Attribute(Attribute(Name('thing', Load(), lineno=1432, col_offset=43), '__objclass__', Load(), lineno=1432, col_offset=43), '__name__', Load(), lineno=1432, col_offset=43), Attribute(Name('thing', Load(), lineno=1433, col_offset=12), '__name__', Load(), lineno=1433, col_offset=12)], Load(), lineno=1432, col_offset=12), lineno=1431, col_offset=15), lineno=1431, col_offset=8)], [], lineno=1430, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1434, col_offset=7), 'isclass', Load(), lineno=1434, col_offset=7), [Name('thing', Load(), lineno=1434, col_offset=23)], [], None, None, lineno=1434, col_offset=7), [Return(BinOp(Str('class ', lineno=1435, col_offset=15), Add(), Attribute(Name('thing', Load(), lineno=1435, col_offset=26), '__name__', Load(), lineno=1435, col_offset=26), lineno=1435, col_offset=15), lineno=1435, col_offset=8)], [], lineno=1434, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1436, col_offset=7), 'isfunction', Load(), lineno=1436, col_offset=7), [Name('thing', Load(), lineno=1436, col_offset=26)], [], None, None, lineno=1436, col_offset=7), [Return(BinOp(Str('function ', lineno=1437, col_offset=15), Add(), Attribute(Name('thing', Load(), lineno=1437, col_offset=29), '__name__', Load(), lineno=1437, col_offset=29), lineno=1437, col_offset=15), lineno=1437, col_offset=8)], [], lineno=1436, col_offset=4), If(Call(Attribute(Name('inspect', Load(), lineno=1438, col_offset=7), 'ismethod', Load(), lineno=1438, col_offset=7), [Name('thing', Load(), lineno=1438, col_offset=24)], [], None, None, lineno=1438, col_offset=7), [Return(BinOp(Str('method ', lineno=1439, col_offset=15), Add(), Attribute(Name('thing', Load(), lineno=1439, col_offset=27), '__name__', Load(), lineno=1439, col_offset=27), lineno=1439, col_offset=15), lineno=1439, col_offset=8)], [], lineno=1438, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=1440, col_offset=7), [Name('thing', Load(), lineno=1440, col_offset=12)], [], None, None, lineno=1440, col_offset=7), [Is()], [Attribute(Name('types', Load(), lineno=1440, col_offset=22), 'InstanceType', Load(), lineno=1440, col_offset=22)], lineno=1440, col_offset=7), [Return(BinOp(Str('instance of ', lineno=1441, col_offset=15), Add(), Attribute(Attribute(Name('thing', Load(), lineno=1441, col_offset=32), '__class__', Load(), lineno=1441, col_offset=32), '__name__', Load(), lineno=1441, col_offset=32), lineno=1441, col_offset=15), lineno=1441, col_offset=8)], [], lineno=1440, col_offset=4), Return(Attribute(Call(Name('type', Load(), lineno=1442, col_offset=11), [Name('thing', Load(), lineno=1442, col_offset=16)], [], None, None, lineno=1442, col_offset=11), '__name__', Load(), lineno=1442, col_offset=11), lineno=1442, col_offset=4)], [], lineno=1415, col_offset=0), FunctionDef('locate', arguments([Name('path', Param(), lineno=1444, col_offset=11), Name('forceload', Param(), lineno=1444, col_offset=17)], None, None, [Num(0, lineno=1444, col_offset=27)]), [Expr(Str('Locate an object by name or dotted path, importing as necessary.', lineno=1445, col_offset=4), lineno=1445, col_offset=4), Assign([Name('parts', Store(), lineno=1446, col_offset=4)], ListComp(Name('part', Load(), lineno=1446, col_offset=13), [comprehension(Name('part', Store(), lineno=1446, col_offset=22), Call(Name('split', Load(), lineno=1446, col_offset=30), [Name('path', Load(), lineno=1446, col_offset=36), Str('.', lineno=1446, col_offset=42)], [], None, None, lineno=1446, col_offset=30), [Name('part', Load(), lineno=1446, col_offset=50)])], lineno=1446, col_offset=13), lineno=1446, col_offset=4), Assign([Tuple([Name('module', Store(), lineno=1447, col_offset=4), Name('n', Store(), lineno=1447, col_offset=12)], Store(), lineno=1447, col_offset=4)], Tuple([Name('None', Load(), lineno=1447, col_offset=16), Num(0, lineno=1447, col_offset=22)], Load(), lineno=1447, col_offset=16), lineno=1447, col_offset=4), While(Compare(Name('n', Load(), lineno=1448, col_offset=10), [Lt()], [Call(Name('len', Load(), lineno=1448, col_offset=14), [Name('parts', Load(), lineno=1448, col_offset=18)], [], None, None, lineno=1448, col_offset=14)], lineno=1448, col_offset=10), [Assign([Name('nextmodule', Store(), lineno=1449, col_offset=8)], Call(Name('safeimport', Load(), lineno=1449, col_offset=21), [Call(Name('join', Load(), lineno=1449, col_offset=32), [Subscript(Name('parts', Load(), lineno=1449, col_offset=37), Slice(None, BinOp(Name('n', Load(), lineno=1449, col_offset=44), Add(), Num(1, lineno=1449, col_offset=46), lineno=1449, col_offset=44), None), Load(), lineno=1449, col_offset=37), Str('.', lineno=1449, col_offset=50)], [], None, None, lineno=1449, col_offset=32), Name('forceload', Load(), lineno=1449, col_offset=56)], [], None, None, lineno=1449, col_offset=21), lineno=1449, col_offset=8), If(Name('nextmodule', Load(), lineno=1450, col_offset=11), [Assign([Tuple([Name('module', Store(), lineno=1450, col_offset=23), Name('n', Store(), lineno=1450, col_offset=31)], Store(), lineno=1450, col_offset=23)], Tuple([Name('nextmodule', Load(), lineno=1450, col_offset=35), BinOp(Name('n', Load(), lineno=1450, col_offset=47), Add(), Num(1, lineno=1450, col_offset=51), lineno=1450, col_offset=47)], Load(), lineno=1450, col_offset=35), lineno=1450, col_offset=23)], [Break( lineno=1451, col_offset=14)], lineno=1450, col_offset=8)], [], lineno=1448, col_offset=4), If(Name('module', Load(), lineno=1452, col_offset=7), [Assign([Name('object', Store(), lineno=1453, col_offset=8)], Name('module', Load(), lineno=1453, col_offset=17), lineno=1453, col_offset=8), For(Name('part', Store(), lineno=1454, col_offset=12), Subscript(Name('parts', Load(), lineno=1454, col_offset=20), Slice(Name('n', Load(), lineno=1454, col_offset=26), None, None), Load(), lineno=1454, col_offset=20), [TryExcept([Assign([Name('object', Store(), lineno=1455, col_offset=17)], Call(Name('getattr', Load(), lineno=1455, col_offset=26), [Name('object', Load(), lineno=1455, col_offset=34), Name('part', Load(), lineno=1455, col_offset=42)], [], None, None, lineno=1455, col_offset=26), lineno=1455, col_offset=17)], [ExceptHandler(Name('AttributeError', Load(), lineno=1456, col_offset=19), None, [Return(Name('None', Load(), lineno=1456, col_offset=42), lineno=1456, col_offset=35)], lineno=1456, col_offset=12)], [], lineno=1455, col_offset=12)], [], lineno=1454, col_offset=8), Return(Name('object', Load(), lineno=1457, col_offset=15), lineno=1457, col_offset=8)], [If(Call(Name('hasattr', Load(), lineno=1459, col_offset=11), [Name('__builtin__', Load(), lineno=1459, col_offset=19), Name('path', Load(), lineno=1459, col_offset=32)], [], None, None, lineno=1459, col_offset=11), [Return(Call(Name('getattr', Load(), lineno=1460, col_offset=19), [Name('__builtin__', Load(), lineno=1460, col_offset=27), Name('path', Load(), lineno=1460, col_offset=40)], [], None, None, lineno=1460, col_offset=19), lineno=1460, col_offset=12)], [], lineno=1459, col_offset=8)], lineno=1452, col_offset=4)], [], lineno=1444, col_offset=0), Assign([Name('text', Store(), lineno=1464, col_offset=0)], Call(Name('TextDoc', Load(), lineno=1464, col_offset=7), [], [], None, None, lineno=1464, col_offset=7), lineno=1464, col_offset=0), Assign([Name('html', Store(), lineno=1465, col_offset=0)], Call(Name('HTMLDoc', Load(), lineno=1465, col_offset=7), [], [], None, None, lineno=1465, col_offset=7), lineno=1465, col_offset=0), ClassDef('_OldStyleClass', [], [Pass( lineno=1467, col_offset=22)], [], lineno=1467, col_offset=0), Assign([Name('_OLD_INSTANCE_TYPE', Store(), lineno=1468, col_offset=0)], Call(Name('type', Load(), lineno=1468, col_offset=21), [Call(Name('_OldStyleClass', Load(), lineno=1468, col_offset=26), [], [], None, None, lineno=1468, col_offset=26)], [], None, None, lineno=1468, col_offset=21), lineno=1468, col_offset=0), FunctionDef('resolve', arguments([Name('thing', Param(), lineno=1470, col_offset=12), Name('forceload', Param(), lineno=1470, col_offset=19)], None, None, [Num(0, lineno=1470, col_offset=29)]), [Expr(Str('Given an object or a path to an object, get the object and its name.', lineno=1471, col_offset=4), lineno=1471, col_offset=4), If(Call(Name('isinstance', Load(), lineno=1472, col_offset=7), [Name('thing', Load(), lineno=1472, col_offset=18), Name('str', Load(), lineno=1472, col_offset=25)], [], None, None, lineno=1472, col_offset=7), [Assign([Name('object', Store(), lineno=1473, col_offset=8)], Call(Name('locate', Load(), lineno=1473, col_offset=17), [Name('thing', Load(), lineno=1473, col_offset=24), Name('forceload', Load(), lineno=1473, col_offset=31)], [], None, None, lineno=1473, col_offset=17), lineno=1473, col_offset=8), If(UnaryOp(Not(), Name('object', Load(), lineno=1474, col_offset=15), lineno=1474, col_offset=11), [Raise(Name('ImportError', Load(), lineno=1475, col_offset=18), BinOp(Str('no Python documentation found for %r', lineno=1475, col_offset=31), Mod(), Name('thing', Load(), lineno=1475, col_offset=72), lineno=1475, col_offset=31), None, lineno=1475, col_offset=12)], [], lineno=1474, col_offset=8), Return(Tuple([Name('object', Load(), lineno=1476, col_offset=15), Name('thing', Load(), lineno=1476, col_offset=23)], Load(), lineno=1476, col_offset=15), lineno=1476, col_offset=8)], [Return(Tuple([Name('thing', Load(), lineno=1478, col_offset=15), Call(Name('getattr', Load(), lineno=1478, col_offset=22), [Name('thing', Load(), lineno=1478, col_offset=30), Str('__name__', lineno=1478, col_offset=37), Name('None', Load(), lineno=1478, col_offset=49)], [], None, None, lineno=1478, col_offset=22)], Load(), lineno=1478, col_offset=15), lineno=1478, col_offset=8)], lineno=1472, col_offset=4)], [], lineno=1470, col_offset=0), FunctionDef('render_doc', arguments([Name('thing', Param(), lineno=1480, col_offset=15), Name('title', Param(), lineno=1480, col_offset=22), Name('forceload', Param(), lineno=1480, col_offset=64)], None, None, [Str('Python Library Documentation: %s', lineno=1480, col_offset=28), Num(0, lineno=1480, col_offset=74)]), [Expr(Str('Render text documentation, given an object or a path to an object.', lineno=1481, col_offset=4), lineno=1481, col_offset=4), Assign([Tuple([Name('object', Store(), lineno=1482, col_offset=4), Name('name', Store(), lineno=1482, col_offset=12)], Store(), lineno=1482, col_offset=4)], Call(Name('resolve', Load(), lineno=1482, col_offset=19), [Name('thing', Load(), lineno=1482, col_offset=27), Name('forceload', Load(), lineno=1482, col_offset=34)], [], None, None, lineno=1482, col_offset=19), lineno=1482, col_offset=4), Assign([Name('desc', Store(), lineno=1483, col_offset=4)], Call(Name('describe', Load(), lineno=1483, col_offset=11), [Name('object', Load(), lineno=1483, col_offset=20)], [], None, None, lineno=1483, col_offset=11), lineno=1483, col_offset=4), Assign([Name('module', Store(), lineno=1484, col_offset=4)], Call(Attribute(Name('inspect', Load(), lineno=1484, col_offset=13), 'getmodule', Load(), lineno=1484, col_offset=13), [Name('object', Load(), lineno=1484, col_offset=31)], [], None, None, lineno=1484, col_offset=13), lineno=1484, col_offset=4), If(BoolOp(And(), [Name('name', Load(), lineno=1485, col_offset=7), Compare(Str('.', lineno=1485, col_offset=16), [In()], [Name('name', Load(), lineno=1485, col_offset=23)], lineno=1485, col_offset=16)], lineno=1485, col_offset=7), [AugAssign(Name('desc', Store(), lineno=1486, col_offset=8), Add(), BinOp(Str(' in ', lineno=1486, col_offset=16), Add(), Subscript(Name('name', Load(), lineno=1486, col_offset=25), Slice(None, Call(Attribute(Name('name', Load(), lineno=1486, col_offset=31), 'rfind', Load(), lineno=1486, col_offset=31), [Str('.', lineno=1486, col_offset=42)], [], None, None, lineno=1486, col_offset=31), None), Load(), lineno=1486, col_offset=25), lineno=1486, col_offset=16), lineno=1486, col_offset=8)], [If(BoolOp(And(), [Name('module', Load(), lineno=1487, col_offset=9), Compare(Name('module', Load(), lineno=1487, col_offset=20), [IsNot()], [Name('object', Load(), lineno=1487, col_offset=34)], lineno=1487, col_offset=20)], lineno=1487, col_offset=9), [AugAssign(Name('desc', Store(), lineno=1488, col_offset=8), Add(), BinOp(Str(' in module ', lineno=1488, col_offset=16), Add(), Attribute(Name('module', Load(), lineno=1488, col_offset=32), '__name__', Load(), lineno=1488, col_offset=32), lineno=1488, col_offset=16), lineno=1488, col_offset=8)], [], lineno=1487, col_offset=9)], lineno=1485, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=1489, col_offset=7), [Name('object', Load(), lineno=1489, col_offset=12)], [], None, None, lineno=1489, col_offset=7), [Is()], [Name('_OLD_INSTANCE_TYPE', Load(), lineno=1489, col_offset=23)], lineno=1489, col_offset=7), [Assign([Name('object', Store(), lineno=1492, col_offset=8)], Attribute(Name('object', Load(), lineno=1492, col_offset=17), '__class__', Load(), lineno=1492, col_offset=17), lineno=1492, col_offset=8)], [If(UnaryOp(Not(), BoolOp(Or(), [Call(Attribute(Name('inspect', Load(), lineno=1493, col_offset=14), 'ismodule', Load(), lineno=1493, col_offset=14), [Name('object', Load(), lineno=1493, col_offset=31)], [], None, None, lineno=1493, col_offset=14), Call(Attribute(Name('inspect', Load(), lineno=1494, col_offset=14), 'isclass', Load(), lineno=1494, col_offset=14), [Name('object', Load(), lineno=1494, col_offset=30)], [], None, None, lineno=1494, col_offset=14), Call(Attribute(Name('inspect', Load(), lineno=1495, col_offset=14), 'isroutine', Load(), lineno=1495, col_offset=14), [Name('object', Load(), lineno=1495, col_offset=32)], [], None, None, lineno=1495, col_offset=14), Call(Attribute(Name('inspect', Load(), lineno=1496, col_offset=14), 'isgetsetdescriptor', Load(), lineno=1496, col_offset=14), [Name('object', Load(), lineno=1496, col_offset=41)], [], None, None, lineno=1496, col_offset=14), Call(Attribute(Name('inspect', Load(), lineno=1497, col_offset=14), 'ismemberdescriptor', Load(), lineno=1497, col_offset=14), [Name('object', Load(), lineno=1497, col_offset=41)], [], None, None, lineno=1497, col_offset=14), Call(Name('isinstance', Load(), lineno=1498, col_offset=14), [Name('object', Load(), lineno=1498, col_offset=25), Name('property', Load(), lineno=1498, col_offset=33)], [], None, None, lineno=1498, col_offset=14)], lineno=1493, col_offset=14), lineno=1493, col_offset=9), [Assign([Name('object', Store(), lineno=1501, col_offset=8)], Call(Name('type', Load(), lineno=1501, col_offset=17), [Name('object', Load(), lineno=1501, col_offset=22)], [], None, None, lineno=1501, col_offset=17), lineno=1501, col_offset=8), AugAssign(Name('desc', Store(), lineno=1502, col_offset=8), Add(), Str(' object', lineno=1502, col_offset=16), lineno=1502, col_offset=8)], [], lineno=1493, col_offset=9)], lineno=1489, col_offset=4), Return(BinOp(BinOp(BinOp(Name('title', Load(), lineno=1503, col_offset=11), Mod(), Name('desc', Load(), lineno=1503, col_offset=19), lineno=1503, col_offset=11), Add(), Str('\n\n', lineno=1503, col_offset=26), lineno=1503, col_offset=11), Add(), Call(Attribute(Name('text', Load(), lineno=1503, col_offset=35), 'document', Load(), lineno=1503, col_offset=35), [Name('object', Load(), lineno=1503, col_offset=49), Name('name', Load(), lineno=1503, col_offset=57)], [], None, None, lineno=1503, col_offset=35), lineno=1503, col_offset=33), lineno=1503, col_offset=4)], [], lineno=1480, col_offset=0), FunctionDef('doc', arguments([Name('thing', Param(), lineno=1505, col_offset=8), Name('title', Param(), lineno=1505, col_offset=15), Name('forceload', Param(), lineno=1505, col_offset=57)], None, None, [Str('Python Library Documentation: %s', lineno=1505, col_offset=21), Num(0, lineno=1505, col_offset=67)]), [Expr(Str('Display text documentation, given an object or a path to an object.', lineno=1506, col_offset=4), lineno=1506, col_offset=4), TryExcept([Expr(Call(Name('pager', Load(), lineno=1508, col_offset=8), [Call(Name('render_doc', Load(), lineno=1508, col_offset=14), [Name('thing', Load(), lineno=1508, col_offset=25), Name('title', Load(), lineno=1508, col_offset=32), Name('forceload', Load(), lineno=1508, col_offset=39)], [], None, None, lineno=1508, col_offset=14)], [], None, None, lineno=1508, col_offset=8), lineno=1508, col_offset=8)], [ExceptHandler(Tuple([Name('ImportError', Load(), lineno=1509, col_offset=12), Name('ErrorDuringImport', Load(), lineno=1509, col_offset=25)], Load(), lineno=1509, col_offset=12), Name('value', Store(), lineno=1509, col_offset=45), [Print(None, [Name('value', Load(), lineno=1510, col_offset=14)], True, lineno=1510, col_offset=8)], lineno=1509, col_offset=4)], [], lineno=1507, col_offset=4)], [], lineno=1505, col_offset=0), FunctionDef('writedoc', arguments([Name('thing', Param(), lineno=1512, col_offset=13), Name('forceload', Param(), lineno=1512, col_offset=20)], None, None, [Num(0, lineno=1512, col_offset=30)]), [Expr(Str('Write HTML documentation to a file in the current directory.', lineno=1513, col_offset=4), lineno=1513, col_offset=4), TryExcept([Assign([Tuple([Name('object', Store(), lineno=1515, col_offset=8), Name('name', Store(), lineno=1515, col_offset=16)], Store(), lineno=1515, col_offset=8)], Call(Name('resolve', Load(), lineno=1515, col_offset=23), [Name('thing', Load(), lineno=1515, col_offset=31), Name('forceload', Load(), lineno=1515, col_offset=38)], [], None, None, lineno=1515, col_offset=23), lineno=1515, col_offset=8), Assign([Name('page', Store(), lineno=1516, col_offset=8)], Call(Attribute(Name('html', Load(), lineno=1516, col_offset=15), 'page', Load(), lineno=1516, col_offset=15), [Call(Name('describe', Load(), lineno=1516, col_offset=25), [Name('object', Load(), lineno=1516, col_offset=34)], [], None, None, lineno=1516, col_offset=25), Call(Attribute(Name('html', Load(), lineno=1516, col_offset=43), 'document', Load(), lineno=1516, col_offset=43), [Name('object', Load(), lineno=1516, col_offset=57), Name('name', Load(), lineno=1516, col_offset=65)], [], None, None, lineno=1516, col_offset=43)], [], None, None, lineno=1516, col_offset=15), lineno=1516, col_offset=8), Assign([Name('file', Store(), lineno=1517, col_offset=8)], Call(Name('open', Load(), lineno=1517, col_offset=15), [BinOp(Name('name', Load(), lineno=1517, col_offset=20), Add(), Str('.html', lineno=1517, col_offset=27), lineno=1517, col_offset=20), Str('w', lineno=1517, col_offset=36)], [], None, None, lineno=1517, col_offset=15), lineno=1517, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1518, col_offset=8), 'write', Load(), lineno=1518, col_offset=8), [Name('page', Load(), lineno=1518, col_offset=19)], [], None, None, lineno=1518, col_offset=8), lineno=1518, col_offset=8), Expr(Call(Attribute(Name('file', Load(), lineno=1519, col_offset=8), 'close', Load(), lineno=1519, col_offset=8), [], [], None, None, lineno=1519, col_offset=8), lineno=1519, col_offset=8), Print(None, [Str('wrote', lineno=1520, col_offset=14), BinOp(Name('name', Load(), lineno=1520, col_offset=23), Add(), Str('.html', lineno=1520, col_offset=30), lineno=1520, col_offset=23)], True, lineno=1520, col_offset=8)], [ExceptHandler(Tuple([Name('ImportError', Load(), lineno=1521, col_offset=12), Name('ErrorDuringImport', Load(), lineno=1521, col_offset=25)], Load(), lineno=1521, col_offset=12), Name('value', Store(), lineno=1521, col_offset=45), [Print(None, [Name('value', Load(), lineno=1522, col_offset=14)], True, lineno=1522, col_offset=8)], lineno=1521, col_offset=4)], [], lineno=1514, col_offset=4)], [], lineno=1512, col_offset=0), FunctionDef('writedocs', arguments([Name('dir', Param(), lineno=1524, col_offset=14), Name('pkgpath', Param(), lineno=1524, col_offset=19), Name('done', Param(), lineno=1524, col_offset=31)], None, None, [Str('', lineno=1524, col_offset=27), Name('None', Load(), lineno=1524, col_offset=36)]), [Expr(Str('Write out HTML documentation for all modules in a directory tree.', lineno=1525, col_offset=4), lineno=1525, col_offset=4), If(Compare(Name('done', Load(), lineno=1526, col_offset=7), [Is()], [Name('None', Load(), lineno=1526, col_offset=15)], lineno=1526, col_offset=7), [Assign([Name('done', Store(), lineno=1526, col_offset=21)], Dict([], [], lineno=1526, col_offset=28), lineno=1526, col_offset=21)], [], lineno=1526, col_offset=4), For(Tuple([Name('importer', Store(), lineno=1527, col_offset=8), Name('modname', Store(), lineno=1527, col_offset=18), Name('ispkg', Store(), lineno=1527, col_offset=27)], Store(), lineno=1527, col_offset=8), Call(Attribute(Name('pkgutil', Load(), lineno=1527, col_offset=36), 'walk_packages', Load(), lineno=1527, col_offset=36), [List([Name('dir', Load(), lineno=1527, col_offset=59)], Load(), lineno=1527, col_offset=58), Name('pkgpath', Load(), lineno=1527, col_offset=65)], [], None, None, lineno=1527, col_offset=36), [Expr(Call(Name('writedoc', Load(), lineno=1528, col_offset=8), [Name('modname', Load(), lineno=1528, col_offset=17)], [], None, None, lineno=1528, col_offset=8), lineno=1528, col_offset=8)], [], lineno=1527, col_offset=4), Return(None, lineno=1529, col_offset=4)], [], lineno=1524, col_offset=0), ClassDef('Helper', [], [Assign([Name('keywords', Store(), lineno=1544, col_offset=4)], Dict([Str('and', lineno=1545, col_offset=8), Str('as', lineno=1546, col_offset=8), Str('assert', lineno=1547, col_offset=8), Str('break', lineno=1548, col_offset=8), Str('class', lineno=1549, col_offset=8), Str('continue', lineno=1550, col_offset=8), Str('def', lineno=1551, col_offset=8), Str('del', lineno=1552, col_offset=8), Str('elif', lineno=1553, col_offset=8), Str('else', lineno=1554, col_offset=8), Str('except', lineno=1555, col_offset=8), Str('exec', lineno=1556, col_offset=8), Str('finally', lineno=1557, col_offset=8), Str('for', lineno=1558, col_offset=8), Str('from', lineno=1559, col_offset=8), Str('global', lineno=1560, col_offset=8), Str('if', lineno=1561, col_offset=8), Str('import', lineno=1562, col_offset=8), Str('in', lineno=1563, col_offset=8), Str('is', lineno=1564, col_offset=8), Str('lambda', lineno=1565, col_offset=8), Str('not', lineno=1566, col_offset=8), Str('or', lineno=1567, col_offset=8), Str('pass', lineno=1568, col_offset=8), Str('print', lineno=1569, col_offset=8), Str('raise', lineno=1570, col_offset=8), Str('return', lineno=1571, col_offset=8), Str('try', lineno=1572, col_offset=8), Str('while', lineno=1573, col_offset=8), Str('with', lineno=1574, col_offset=8), Str('yield', lineno=1575, col_offset=8)], [Str('BOOLEAN', lineno=1545, col_offset=15), Str('with', lineno=1546, col_offset=14), Tuple([Str('assert', lineno=1547, col_offset=19), Str('', lineno=1547, col_offset=29)], Load(), lineno=1547, col_offset=19), Tuple([Str('break', lineno=1548, col_offset=18), Str('while for', lineno=1548, col_offset=27)], Load(), lineno=1548, col_offset=18), Tuple([Str('class', lineno=1549, col_offset=18), Str('CLASSES SPECIALMETHODS', lineno=1549, col_offset=27)], Load(), lineno=1549, col_offset=18), Tuple([Str('continue', lineno=1550, col_offset=21), Str('while for', lineno=1550, col_offset=33)], Load(), lineno=1550, col_offset=21), Tuple([Str('function', lineno=1551, col_offset=16), Str('', lineno=1551, col_offset=28)], Load(), lineno=1551, col_offset=16), Tuple([Str('del', lineno=1552, col_offset=16), Str('BASICMETHODS', lineno=1552, col_offset=23)], Load(), lineno=1552, col_offset=16), Str('if', lineno=1553, col_offset=16), Tuple([Str('else', lineno=1554, col_offset=17), Str('while for', lineno=1554, col_offset=25)], Load(), lineno=1554, col_offset=17), Str('try', lineno=1555, col_offset=18), Tuple([Str('exec', lineno=1556, col_offset=17), Str('', lineno=1556, col_offset=25)], Load(), lineno=1556, col_offset=17), Str('try', lineno=1557, col_offset=19), Tuple([Str('for', lineno=1558, col_offset=16), Str('break continue while', lineno=1558, col_offset=23)], Load(), lineno=1558, col_offset=16), Str('import', lineno=1559, col_offset=16), Tuple([Str('global', lineno=1560, col_offset=19), Str('NAMESPACES', lineno=1560, col_offset=29)], Load(), lineno=1560, col_offset=19), Tuple([Str('if', lineno=1561, col_offset=15), Str('TRUTHVALUE', lineno=1561, col_offset=21)], Load(), lineno=1561, col_offset=15), Tuple([Str('import', lineno=1562, col_offset=19), Str('MODULES', lineno=1562, col_offset=29)], Load(), lineno=1562, col_offset=19), Tuple([Str('in', lineno=1563, col_offset=15), Str('SEQUENCEMETHODS2', lineno=1563, col_offset=21)], Load(), lineno=1563, col_offset=15), Str('COMPARISON', lineno=1564, col_offset=14), Tuple([Str('lambda', lineno=1565, col_offset=19), Str('FUNCTIONS', lineno=1565, col_offset=29)], Load(), lineno=1565, col_offset=19), Str('BOOLEAN', lineno=1566, col_offset=15), Str('BOOLEAN', lineno=1567, col_offset=14), Tuple([Str('pass', lineno=1568, col_offset=17), Str('', lineno=1568, col_offset=25)], Load(), lineno=1568, col_offset=17), Tuple([Str('print', lineno=1569, col_offset=18), Str('', lineno=1569, col_offset=27)], Load(), lineno=1569, col_offset=18), Tuple([Str('raise', lineno=1570, col_offset=18), Str('EXCEPTIONS', lineno=1570, col_offset=27)], Load(), lineno=1570, col_offset=18), Tuple([Str('return', lineno=1571, col_offset=19), Str('FUNCTIONS', lineno=1571, col_offset=29)], Load(), lineno=1571, col_offset=19), Tuple([Str('try', lineno=1572, col_offset=16), Str('EXCEPTIONS', lineno=1572, col_offset=23)], Load(), lineno=1572, col_offset=16), Tuple([Str('while', lineno=1573, col_offset=18), Str('break continue if TRUTHVALUE', lineno=1573, col_offset=27)], Load(), lineno=1573, col_offset=18), Tuple([Str('with', lineno=1574, col_offset=17), Str('CONTEXTMANAGERS EXCEPTIONS yield', lineno=1574, col_offset=25)], Load(), lineno=1574, col_offset=17), Tuple([Str('yield', lineno=1575, col_offset=18), Str('', lineno=1575, col_offset=27)], Load(), lineno=1575, col_offset=18)], lineno=1544, col_offset=15), lineno=1544, col_offset=4), Assign([Name('_symbols_inverse', Store(), lineno=1579, col_offset=4)], Dict([Str('STRINGS', lineno=1580, col_offset=8), Str('OPERATORS', lineno=1581, col_offset=8), Str('COMPARISON', lineno=1583, col_offset=8), Str('UNARY', lineno=1584, col_offset=8), Str('AUGMENTEDASSIGNMENT', lineno=1585, col_offset=8), Str('BITWISE', lineno=1587, col_offset=8), Str('COMPLEX', lineno=1588, col_offset=8)], [Tuple([Str("'", lineno=1580, col_offset=21), Str("'''", lineno=1580, col_offset=26), Str("r'", lineno=1580, col_offset=33), Str("u'", lineno=1580, col_offset=39), Str('"""', lineno=1580, col_offset=45), Str('"', lineno=1580, col_offset=52), Str('r"', lineno=1580, col_offset=57), Str('u"', lineno=1580, col_offset=63)], Load(), lineno=1580, col_offset=21), Tuple([Str('+', lineno=1581, col_offset=23), Str('-', lineno=1581, col_offset=28), Str('*', lineno=1581, col_offset=33), Str('**', lineno=1581, col_offset=38), Str('/', lineno=1581, col_offset=44), Str('//', lineno=1581, col_offset=49), Str('%', lineno=1581, col_offset=55), Str('<<', lineno=1581, col_offset=60), Str('>>', lineno=1581, col_offset=66), Str('&', lineno=1581, col_offset=72), Str('|', lineno=1582, col_offset=23), Str('^', lineno=1582, col_offset=28), Str('~', lineno=1582, col_offset=33), Str('<', lineno=1582, col_offset=38), Str('>', lineno=1582, col_offset=43), Str('<=', lineno=1582, col_offset=48), Str('>=', lineno=1582, col_offset=54), Str('==', lineno=1582, col_offset=60), Str('!=', lineno=1582, col_offset=66), Str('<>', lineno=1582, col_offset=72)], Load(), lineno=1581, col_offset=23), Tuple([Str('<', lineno=1583, col_offset=24), Str('>', lineno=1583, col_offset=29), Str('<=', lineno=1583, col_offset=34), Str('>=', lineno=1583, col_offset=40), Str('==', lineno=1583, col_offset=46), Str('!=', lineno=1583, col_offset=52), Str('<>', lineno=1583, col_offset=58)], Load(), lineno=1583, col_offset=24), Tuple([Str('-', lineno=1584, col_offset=19), Str('~', lineno=1584, col_offset=24)], Load(), lineno=1584, col_offset=19), Tuple([Str('+=', lineno=1585, col_offset=33), Str('-=', lineno=1585, col_offset=39), Str('*=', lineno=1585, col_offset=45), Str('/=', lineno=1585, col_offset=51), Str('%=', lineno=1585, col_offset=57), Str('&=', lineno=1585, col_offset=63), Str('|=', lineno=1585, col_offset=69), Str('^=', lineno=1586, col_offset=32), Str('<<=', lineno=1586, col_offset=38), Str('>>=', lineno=1586, col_offset=45), Str('**=', lineno=1586, col_offset=52), Str('//=', lineno=1586, col_offset=59)], Load(), lineno=1585, col_offset=33), Tuple([Str('<<', lineno=1587, col_offset=21), Str('>>', lineno=1587, col_offset=27), Str('&', lineno=1587, col_offset=33), Str('|', lineno=1587, col_offset=38), Str('^', lineno=1587, col_offset=43), Str('~', lineno=1587, col_offset=48)], Load(), lineno=1587, col_offset=21), Tuple([Str('j', lineno=1588, col_offset=21), Str('J', lineno=1588, col_offset=26)], Load(), lineno=1588, col_offset=21)], lineno=1579, col_offset=23), lineno=1579, col_offset=4), Assign([Name('symbols', Store(), lineno=1590, col_offset=4)], Dict([Str('%', lineno=1591, col_offset=8), Str('**', lineno=1592, col_offset=8), Str(',', lineno=1593, col_offset=8), Str('.', lineno=1594, col_offset=8), Str('...', lineno=1595, col_offset=8), Str(':', lineno=1596, col_offset=8), Str('@', lineno=1597, col_offset=8), Str('\\', lineno=1598, col_offset=8), Str('_', lineno=1599, col_offset=8), Str('__', lineno=1600, col_offset=8), Str('`', lineno=1601, col_offset=8), Str('(', lineno=1602, col_offset=8), Str(')', lineno=1603, col_offset=8), Str('[', lineno=1604, col_offset=8), Str(']', lineno=1605, col_offset=8)], [Str('OPERATORS FORMATTING', lineno=1591, col_offset=13), Str('POWER', lineno=1592, col_offset=14), Str('TUPLES LISTS FUNCTIONS', lineno=1593, col_offset=13), Str('ATTRIBUTES FLOAT MODULES OBJECTS', lineno=1594, col_offset=13), Str('ELLIPSIS', lineno=1595, col_offset=15), Str('SLICINGS DICTIONARYLITERALS', lineno=1596, col_offset=13), Str('def class', lineno=1597, col_offset=13), Str('STRINGS', lineno=1598, col_offset=14), Str('PRIVATENAMES', lineno=1599, col_offset=13), Str('PRIVATENAMES SPECIALMETHODS', lineno=1600, col_offset=14), Str('BACKQUOTES', lineno=1601, col_offset=13), Str('TUPLES FUNCTIONS CALLS', lineno=1602, col_offset=13), Str('TUPLES FUNCTIONS CALLS', lineno=1603, col_offset=13), Str('LISTS SUBSCRIPTS SLICINGS', lineno=1604, col_offset=13), Str('LISTS SUBSCRIPTS SLICINGS', lineno=1605, col_offset=13)], lineno=1590, col_offset=14), lineno=1590, col_offset=4), For(Tuple([Name('topic', Store(), lineno=1607, col_offset=8), Name('symbols_', Store(), lineno=1607, col_offset=15)], Store(), lineno=1607, col_offset=8), Call(Attribute(Name('_symbols_inverse', Load(), lineno=1607, col_offset=27), 'iteritems', Load(), lineno=1607, col_offset=27), [], [], None, None, lineno=1607, col_offset=27), [For(Name('symbol', Store(), lineno=1608, col_offset=12), Name('symbols_', Load(), lineno=1608, col_offset=22), [Assign([Name('topics', Store(), lineno=1609, col_offset=12)], Call(Attribute(Name('symbols', Load(), lineno=1609, col_offset=21), 'get', Load(), lineno=1609, col_offset=21), [Name('symbol', Load(), lineno=1609, col_offset=33), Name('topic', Load(), lineno=1609, col_offset=41)], [], None, None, lineno=1609, col_offset=21), lineno=1609, col_offset=12), If(Compare(Name('topic', Load(), lineno=1610, col_offset=15), [NotIn()], [Name('topics', Load(), lineno=1610, col_offset=28)], lineno=1610, col_offset=15), [Assign([Name('topics', Store(), lineno=1611, col_offset=16)], BinOp(BinOp(Name('topics', Load(), lineno=1611, col_offset=25), Add(), Str(' ', lineno=1611, col_offset=34), lineno=1611, col_offset=25), Add(), Name('topic', Load(), lineno=1611, col_offset=40), lineno=1611, col_offset=38), lineno=1611, col_offset=16)], [], lineno=1610, col_offset=12), Assign([Subscript(Name('symbols', Load(), lineno=1612, col_offset=12), Index(Name('symbol', Load(), lineno=1612, col_offset=20)), Store(), lineno=1612, col_offset=12)], Name('topics', Load(), lineno=1612, col_offset=30), lineno=1612, col_offset=12)], [], lineno=1608, col_offset=8)], [], lineno=1607, col_offset=4), Assign([Name('topics', Store(), lineno=1614, col_offset=4)], Dict([Str('TYPES', lineno=1615, col_offset=8), Str('STRINGS', lineno=1617, col_offset=8), Str('STRINGMETHODS', lineno=1619, col_offset=8), Str('FORMATTING', lineno=1620, col_offset=8), Str('UNICODE', lineno=1621, col_offset=8), Str('NUMBERS', lineno=1623, col_offset=8), Str('INTEGER', lineno=1624, col_offset=8), Str('FLOAT', lineno=1625, col_offset=8), Str('COMPLEX', lineno=1626, col_offset=8), Str('SEQUENCES', lineno=1627, col_offset=8), Str('MAPPINGS', lineno=1628, col_offset=8), Str('FUNCTIONS', lineno=1629, col_offset=8), Str('METHODS', lineno=1630, col_offset=8), Str('CODEOBJECTS', lineno=1631, col_offset=8), Str('TYPEOBJECTS', lineno=1632, col_offset=8), Str('FRAMEOBJECTS', lineno=1633, col_offset=8), Str('TRACEBACKS', lineno=1634, col_offset=8), Str('NONE', lineno=1635, col_offset=8), Str('ELLIPSIS', lineno=1636, col_offset=8), Str('FILES', lineno=1637, col_offset=8), Str('SPECIALATTRIBUTES', lineno=1638, col_offset=8), Str('CLASSES', lineno=1639, col_offset=8), Str('MODULES', lineno=1640, col_offset=8), Str('PACKAGES', lineno=1641, col_offset=8), Str('EXPRESSIONS', lineno=1642, col_offset=8), Str('OPERATORS', lineno=1646, col_offset=8), Str('PRECEDENCE', lineno=1647, col_offset=8), Str('OBJECTS', lineno=1648, col_offset=8), Str('SPECIALMETHODS', lineno=1649, col_offset=8), Str('BASICMETHODS', lineno=1652, col_offset=8), Str('ATTRIBUTEMETHODS', lineno=1653, col_offset=8), Str('CALLABLEMETHODS', lineno=1654, col_offset=8), Str('SEQUENCEMETHODS1', lineno=1655, col_offset=8), Str('SEQUENCEMETHODS2', lineno=1657, col_offset=8), Str('MAPPINGMETHODS', lineno=1659, col_offset=8), Str('NUMBERMETHODS', lineno=1660, col_offset=8), Str('EXECUTION', lineno=1662, col_offset=8), Str('NAMESPACES', lineno=1663, col_offset=8), Str('DYNAMICFEATURES', lineno=1664, col_offset=8), Str('SCOPING', lineno=1665, col_offset=8), Str('FRAMES', lineno=1666, col_offset=8), Str('EXCEPTIONS', lineno=1667, col_offset=8), Str('COERCIONS', lineno=1668, col_offset=8), Str('CONVERSIONS', lineno=1669, col_offset=8), Str('IDENTIFIERS', lineno=1670, col_offset=8), Str('SPECIALIDENTIFIERS', lineno=1671, col_offset=8), Str('PRIVATENAMES', lineno=1672, col_offset=8), Str('LITERALS', lineno=1673, col_offset=8), Str('TUPLES', lineno=1675, col_offset=8), Str('TUPLELITERALS', lineno=1676, col_offset=8), Str('LISTS', lineno=1677, col_offset=8), Str('LISTLITERALS', lineno=1678, col_offset=8), Str('DICTIONARIES', lineno=1679, col_offset=8), Str('DICTIONARYLITERALS', lineno=1680, col_offset=8), Str('BACKQUOTES', lineno=1681, col_offset=8), Str('ATTRIBUTES', lineno=1682, col_offset=8), Str('SUBSCRIPTS', lineno=1684, col_offset=8), Str('SLICINGS', lineno=1685, col_offset=8), Str('CALLS', lineno=1686, col_offset=8), Str('POWER', lineno=1687, col_offset=8), Str('UNARY', lineno=1688, col_offset=8), Str('BINARY', lineno=1689, col_offset=8), Str('SHIFTING', lineno=1690, col_offset=8), Str('BITWISE', lineno=1691, col_offset=8), Str('COMPARISON', lineno=1692, col_offset=8), Str('BOOLEAN', lineno=1693, col_offset=8), Str('ASSERTION', lineno=1694, col_offset=8), Str('ASSIGNMENT', lineno=1695, col_offset=8), Str('AUGMENTEDASSIGNMENT', lineno=1696, col_offset=8), Str('DELETION', lineno=1697, col_offset=8), Str('PRINTING', lineno=1698, col_offset=8), Str('RETURNING', lineno=1699, col_offset=8), Str('IMPORTING', lineno=1700, col_offset=8), Str('CONDITIONAL', lineno=1701, col_offset=8), Str('LOOPING', lineno=1702, col_offset=8), Str('TRUTHVALUE', lineno=1703, col_offset=8), Str('DEBUGGING', lineno=1704, col_offset=8), Str('CONTEXTMANAGERS', lineno=1705, col_offset=8)], [Tuple([Str('types', lineno=1615, col_offset=18), Str('STRINGS UNICODE NUMBERS SEQUENCES MAPPINGS FUNCTIONS CLASSES MODULES FILES inspect', lineno=1615, col_offset=27)], Load(), lineno=1615, col_offset=18), Tuple([Str('strings', lineno=1617, col_offset=20), Str('str UNICODE SEQUENCES STRINGMETHODS FORMATTING TYPES', lineno=1617, col_offset=31)], Load(), lineno=1617, col_offset=20), Tuple([Str('string-methods', lineno=1619, col_offset=26), Str('STRINGS FORMATTING', lineno=1619, col_offset=44)], Load(), lineno=1619, col_offset=26), Tuple([Str('formatstrings', lineno=1620, col_offset=23), Str('OPERATORS', lineno=1620, col_offset=40)], Load(), lineno=1620, col_offset=23), Tuple([Str('strings', lineno=1621, col_offset=20), Str('encodings unicode SEQUENCES STRINGMETHODS FORMATTING TYPES', lineno=1621, col_offset=31)], Load(), lineno=1621, col_offset=20), Tuple([Str('numbers', lineno=1623, col_offset=20), Str('INTEGER FLOAT COMPLEX TYPES', lineno=1623, col_offset=31)], Load(), lineno=1623, col_offset=20), Tuple([Str('integers', lineno=1624, col_offset=20), Str('int range', lineno=1624, col_offset=32)], Load(), lineno=1624, col_offset=20), Tuple([Str('floating', lineno=1625, col_offset=18), Str('float math', lineno=1625, col_offset=30)], Load(), lineno=1625, col_offset=18), Tuple([Str('imaginary', lineno=1626, col_offset=20), Str('complex cmath', lineno=1626, col_offset=33)], Load(), lineno=1626, col_offset=20), Tuple([Str('typesseq', lineno=1627, col_offset=22), Str('STRINGMETHODS FORMATTING xrange LISTS', lineno=1627, col_offset=34)], Load(), lineno=1627, col_offset=22), Str('DICTIONARIES', lineno=1628, col_offset=20), Tuple([Str('typesfunctions', lineno=1629, col_offset=22), Str('def TYPES', lineno=1629, col_offset=40)], Load(), lineno=1629, col_offset=22), Tuple([Str('typesmethods', lineno=1630, col_offset=20), Str('class def CLASSES TYPES', lineno=1630, col_offset=36)], Load(), lineno=1630, col_offset=20), Tuple([Str('bltin-code-objects', lineno=1631, col_offset=24), Str('compile FUNCTIONS TYPES', lineno=1631, col_offset=46)], Load(), lineno=1631, col_offset=24), Tuple([Str('bltin-type-objects', lineno=1632, col_offset=24), Str('types TYPES', lineno=1632, col_offset=46)], Load(), lineno=1632, col_offset=24), Str('TYPES', lineno=1633, col_offset=24), Str('TYPES', lineno=1634, col_offset=22), Tuple([Str('bltin-null-object', lineno=1635, col_offset=17), Str('', lineno=1635, col_offset=38)], Load(), lineno=1635, col_offset=17), Tuple([Str('bltin-ellipsis-object', lineno=1636, col_offset=21), Str('SLICINGS', lineno=1636, col_offset=46)], Load(), lineno=1636, col_offset=21), Tuple([Str('bltin-file-objects', lineno=1637, col_offset=18), Str('', lineno=1637, col_offset=40)], Load(), lineno=1637, col_offset=18), Tuple([Str('specialattrs', lineno=1638, col_offset=30), Str('', lineno=1638, col_offset=46)], Load(), lineno=1638, col_offset=30), Tuple([Str('types', lineno=1639, col_offset=20), Str('class SPECIALMETHODS PRIVATENAMES', lineno=1639, col_offset=29)], Load(), lineno=1639, col_offset=20), Tuple([Str('typesmodules', lineno=1640, col_offset=20), Str('import', lineno=1640, col_offset=36)], Load(), lineno=1640, col_offset=20), Str('import', lineno=1641, col_offset=20), Tuple([Str('operator-summary', lineno=1642, col_offset=24), Str('lambda or and not in is BOOLEAN COMPARISON BITWISE SHIFTING BINARY FORMATTING POWER UNARY ATTRIBUTES SUBSCRIPTS SLICINGS CALLS TUPLES LISTS DICTIONARIES BACKQUOTES', lineno=1642, col_offset=44)], Load(), lineno=1642, col_offset=24), Str('EXPRESSIONS', lineno=1646, col_offset=21), Str('EXPRESSIONS', lineno=1647, col_offset=22), Tuple([Str('objects', lineno=1648, col_offset=20), Str('TYPES', lineno=1648, col_offset=31)], Load(), lineno=1648, col_offset=20), Tuple([Str('specialnames', lineno=1649, col_offset=27), Str('BASICMETHODS ATTRIBUTEMETHODS CALLABLEMETHODS SEQUENCEMETHODS1 MAPPINGMETHODS SEQUENCEMETHODS2 NUMBERMETHODS CLASSES', lineno=1649, col_offset=43)], Load(), lineno=1649, col_offset=27), Tuple([Str('customization', lineno=1652, col_offset=25), Str('cmp hash repr str SPECIALMETHODS', lineno=1652, col_offset=42)], Load(), lineno=1652, col_offset=25), Tuple([Str('attribute-access', lineno=1653, col_offset=29), Str('ATTRIBUTES SPECIALMETHODS', lineno=1653, col_offset=49)], Load(), lineno=1653, col_offset=29), Tuple([Str('callable-types', lineno=1654, col_offset=28), Str('CALLS SPECIALMETHODS', lineno=1654, col_offset=46)], Load(), lineno=1654, col_offset=28), Tuple([Str('sequence-types', lineno=1655, col_offset=29), Str('SEQUENCES SEQUENCEMETHODS2 SPECIALMETHODS', lineno=1655, col_offset=47)], Load(), lineno=1655, col_offset=29), Tuple([Str('sequence-methods', lineno=1657, col_offset=29), Str('SEQUENCES SEQUENCEMETHODS1 SPECIALMETHODS', lineno=1657, col_offset=49)], Load(), lineno=1657, col_offset=29), Tuple([Str('sequence-types', lineno=1659, col_offset=27), Str('MAPPINGS SPECIALMETHODS', lineno=1659, col_offset=45)], Load(), lineno=1659, col_offset=27), Tuple([Str('numeric-types', lineno=1660, col_offset=26), Str('NUMBERS AUGMENTEDASSIGNMENT SPECIALMETHODS', lineno=1660, col_offset=43)], Load(), lineno=1660, col_offset=26), Tuple([Str('execmodel', lineno=1662, col_offset=22), Str('NAMESPACES DYNAMICFEATURES EXCEPTIONS', lineno=1662, col_offset=35)], Load(), lineno=1662, col_offset=22), Tuple([Str('naming', lineno=1663, col_offset=23), Str('global ASSIGNMENT DELETION DYNAMICFEATURES', lineno=1663, col_offset=33)], Load(), lineno=1663, col_offset=23), Tuple([Str('dynamic-features', lineno=1664, col_offset=28), Str('', lineno=1664, col_offset=48)], Load(), lineno=1664, col_offset=28), Str('NAMESPACES', lineno=1665, col_offset=19), Str('NAMESPACES', lineno=1666, col_offset=18), Tuple([Str('exceptions', lineno=1667, col_offset=23), Str('try except finally raise', lineno=1667, col_offset=37)], Load(), lineno=1667, col_offset=23), Tuple([Str('coercion-rules', lineno=1668, col_offset=22), Str('CONVERSIONS', lineno=1668, col_offset=39)], Load(), lineno=1668, col_offset=22), Tuple([Str('conversions', lineno=1669, col_offset=24), Str('COERCIONS', lineno=1669, col_offset=39)], Load(), lineno=1669, col_offset=24), Tuple([Str('identifiers', lineno=1670, col_offset=24), Str('keywords SPECIALIDENTIFIERS', lineno=1670, col_offset=39)], Load(), lineno=1670, col_offset=24), Tuple([Str('id-classes', lineno=1671, col_offset=31), Str('', lineno=1671, col_offset=45)], Load(), lineno=1671, col_offset=31), Tuple([Str('atom-identifiers', lineno=1672, col_offset=25), Str('', lineno=1672, col_offset=45)], Load(), lineno=1672, col_offset=25), Tuple([Str('atom-literals', lineno=1673, col_offset=21), Str('STRINGS BACKQUOTES NUMBERS TUPLELITERALS LISTLITERALS DICTIONARYLITERALS', lineno=1673, col_offset=38)], Load(), lineno=1673, col_offset=21), Str('SEQUENCES', lineno=1675, col_offset=18), Tuple([Str('exprlists', lineno=1676, col_offset=26), Str('TUPLES LITERALS', lineno=1676, col_offset=39)], Load(), lineno=1676, col_offset=26), Tuple([Str('typesseq-mutable', lineno=1677, col_offset=18), Str('LISTLITERALS', lineno=1677, col_offset=38)], Load(), lineno=1677, col_offset=18), Tuple([Str('lists', lineno=1678, col_offset=25), Str('LISTS LITERALS', lineno=1678, col_offset=34)], Load(), lineno=1678, col_offset=25), Tuple([Str('typesmapping', lineno=1679, col_offset=25), Str('DICTIONARYLITERALS', lineno=1679, col_offset=41)], Load(), lineno=1679, col_offset=25), Tuple([Str('dict', lineno=1680, col_offset=31), Str('DICTIONARIES LITERALS', lineno=1680, col_offset=39)], Load(), lineno=1680, col_offset=31), Tuple([Str('string-conversions', lineno=1681, col_offset=23), Str('repr str STRINGS LITERALS', lineno=1681, col_offset=45)], Load(), lineno=1681, col_offset=23), Tuple([Str('attribute-references', lineno=1682, col_offset=23), Str('getattr hasattr setattr ATTRIBUTEMETHODS', lineno=1682, col_offset=47)], Load(), lineno=1682, col_offset=23), Tuple([Str('subscriptions', lineno=1684, col_offset=23), Str('SEQUENCEMETHODS1', lineno=1684, col_offset=40)], Load(), lineno=1684, col_offset=23), Tuple([Str('slicings', lineno=1685, col_offset=21), Str('SEQUENCEMETHODS2', lineno=1685, col_offset=33)], Load(), lineno=1685, col_offset=21), Tuple([Str('calls', lineno=1686, col_offset=18), Str('EXPRESSIONS', lineno=1686, col_offset=27)], Load(), lineno=1686, col_offset=18), Tuple([Str('power', lineno=1687, col_offset=18), Str('EXPRESSIONS', lineno=1687, col_offset=27)], Load(), lineno=1687, col_offset=18), Tuple([Str('unary', lineno=1688, col_offset=18), Str('EXPRESSIONS', lineno=1688, col_offset=27)], Load(), lineno=1688, col_offset=18), Tuple([Str('binary', lineno=1689, col_offset=19), Str('EXPRESSIONS', lineno=1689, col_offset=29)], Load(), lineno=1689, col_offset=19), Tuple([Str('shifting', lineno=1690, col_offset=21), Str('EXPRESSIONS', lineno=1690, col_offset=33)], Load(), lineno=1690, col_offset=21), Tuple([Str('bitwise', lineno=1691, col_offset=20), Str('EXPRESSIONS', lineno=1691, col_offset=31)], Load(), lineno=1691, col_offset=20), Tuple([Str('comparisons', lineno=1692, col_offset=23), Str('EXPRESSIONS BASICMETHODS', lineno=1692, col_offset=38)], Load(), lineno=1692, col_offset=23), Tuple([Str('booleans', lineno=1693, col_offset=20), Str('EXPRESSIONS TRUTHVALUE', lineno=1693, col_offset=32)], Load(), lineno=1693, col_offset=20), Str('assert', lineno=1694, col_offset=21), Tuple([Str('assignment', lineno=1695, col_offset=23), Str('AUGMENTEDASSIGNMENT', lineno=1695, col_offset=37)], Load(), lineno=1695, col_offset=23), Tuple([Str('augassign', lineno=1696, col_offset=32), Str('NUMBERMETHODS', lineno=1696, col_offset=45)], Load(), lineno=1696, col_offset=32), Str('del', lineno=1697, col_offset=20), Str('print', lineno=1698, col_offset=20), Str('return', lineno=1699, col_offset=21), Str('import', lineno=1700, col_offset=21), Str('if', lineno=1701, col_offset=23), Tuple([Str('compound', lineno=1702, col_offset=20), Str('for while break continue', lineno=1702, col_offset=32)], Load(), lineno=1702, col_offset=20), Tuple([Str('truth', lineno=1703, col_offset=23), Str('if while and or not BASICMETHODS', lineno=1703, col_offset=32)], Load(), lineno=1703, col_offset=23), Tuple([Str('debugger', lineno=1704, col_offset=22), Str('pdb', lineno=1704, col_offset=34)], Load(), lineno=1704, col_offset=22), Tuple([Str('context-managers', lineno=1705, col_offset=28), Str('with', lineno=1705, col_offset=48)], Load(), lineno=1705, col_offset=28)], lineno=1614, col_offset=13), lineno=1614, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1708, col_offset=17), Name('input', Param(), lineno=1708, col_offset=23), Name('output', Param(), lineno=1708, col_offset=35)], None, None, [Name('None', Load(), lineno=1708, col_offset=29), Name('None', Load(), lineno=1708, col_offset=42)]), [Assign([Attribute(Name('self', Load(), lineno=1709, col_offset=8), '_input', Store(), lineno=1709, col_offset=8)], Name('input', Load(), lineno=1709, col_offset=22), lineno=1709, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1710, col_offset=8), '_output', Store(), lineno=1710, col_offset=8)], Name('output', Load(), lineno=1710, col_offset=23), lineno=1710, col_offset=8)], [], lineno=1708, col_offset=4), Assign([Name('input', Store(), lineno=1712, col_offset=4)], Call(Name('property', Load(), lineno=1712, col_offset=13), [Lambda(arguments([Name('self', Param(), lineno=1712, col_offset=29)], None, None, []), BoolOp(Or(), [Attribute(Name('self', Load(), lineno=1712, col_offset=35), '_input', Load(), lineno=1712, col_offset=35), Attribute(Name('sys', Load(), lineno=1712, col_offset=50), 'stdin', Load(), lineno=1712, col_offset=50)], lineno=1712, col_offset=35), lineno=1712, col_offset=22)], [], None, None, lineno=1712, col_offset=13), lineno=1712, col_offset=4), Assign([Name('output', Store(), lineno=1713, col_offset=4)], Call(Name('property', Load(), lineno=1713, col_offset=13), [Lambda(arguments([Name('self', Param(), lineno=1713, col_offset=29)], None, None, []), BoolOp(Or(), [Attribute(Name('self', Load(), lineno=1713, col_offset=35), '_output', Load(), lineno=1713, col_offset=35), Attribute(Name('sys', Load(), lineno=1713, col_offset=51), 'stdout', Load(), lineno=1713, col_offset=51)], lineno=1713, col_offset=35), lineno=1713, col_offset=22)], [], None, None, lineno=1713, col_offset=13), lineno=1713, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=1715, col_offset=17)], None, None, []), [If(Compare(Subscript(Subscript(Call(Attribute(Name('inspect', Load(), lineno=1716, col_offset=11), 'stack', Load(), lineno=1716, col_offset=11), [], [], None, None, lineno=1716, col_offset=11), Index(Num(1, lineno=1716, col_offset=27)), Load(), lineno=1716, col_offset=11), Index(Num(3, lineno=1716, col_offset=30)), Load(), lineno=1716, col_offset=11), [Eq()], [Str('?', lineno=1716, col_offset=36)], lineno=1716, col_offset=11), [Expr(Call(Name('self', Load(), lineno=1717, col_offset=12), [], [], None, None, lineno=1717, col_offset=12), lineno=1717, col_offset=12), Return(Str('', lineno=1718, col_offset=19), lineno=1718, col_offset=12)], [], lineno=1716, col_offset=8), Return(Str('<pydoc.Helper instance>', lineno=1719, col_offset=15), lineno=1719, col_offset=8)], [], lineno=1715, col_offset=4), FunctionDef('__call__', arguments([Name('self', Param(), lineno=1721, col_offset=17), Name('request', Param(), lineno=1721, col_offset=23)], None, None, [Name('None', Load(), lineno=1721, col_offset=31)]), [If(Compare(Name('request', Load(), lineno=1722, col_offset=11), [IsNot()], [Name('None', Load(), lineno=1722, col_offset=26)], lineno=1722, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1723, col_offset=12), 'help', Load(), lineno=1723, col_offset=12), [Name('request', Load(), lineno=1723, col_offset=22)], [], None, None, lineno=1723, col_offset=12), lineno=1723, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1725, col_offset=12), 'intro', Load(), lineno=1725, col_offset=12), [], [], None, None, lineno=1725, col_offset=12), lineno=1725, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1726, col_offset=12), 'interact', Load(), lineno=1726, col_offset=12), [], [], None, None, lineno=1726, col_offset=12), lineno=1726, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1727, col_offset=12), 'output', Load(), lineno=1727, col_offset=12), 'write', Load(), lineno=1727, col_offset=12), [Str('\nYou are now leaving help and returning to the Python interpreter.\nIf you want to ask for help on a particular object directly from the\ninterpreter, you can type "help(object)".  Executing "help(\'string\')"\nhas the same effect as typing a particular string at the help> prompt.\n', lineno=1732, col_offset=-1)], [], None, None, lineno=1727, col_offset=12), lineno=1727, col_offset=12)], lineno=1722, col_offset=8)], [], lineno=1721, col_offset=4), FunctionDef('interact', arguments([Name('self', Param(), lineno=1734, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1735, col_offset=8), 'output', Load(), lineno=1735, col_offset=8), 'write', Load(), lineno=1735, col_offset=8), [Str('\n', lineno=1735, col_offset=26)], [], None, None, lineno=1735, col_offset=8), lineno=1735, col_offset=8), While(Name('True', Load(), lineno=1736, col_offset=14), [TryExcept([Assign([Name('request', Store(), lineno=1738, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=1738, col_offset=26), 'getline', Load(), lineno=1738, col_offset=26), [Str('help> ', lineno=1738, col_offset=39)], [], None, None, lineno=1738, col_offset=26), lineno=1738, col_offset=16), If(UnaryOp(Not(), Name('request', Load(), lineno=1739, col_offset=23), lineno=1739, col_offset=19), [Break( lineno=1739, col_offset=32)], [], lineno=1739, col_offset=16)], [ExceptHandler(Tuple([Name('KeyboardInterrupt', Load(), lineno=1740, col_offset=20), Name('EOFError', Load(), lineno=1740, col_offset=39)], Load(), lineno=1740, col_offset=20), None, [Break( lineno=1741, col_offset=16)], lineno=1740, col_offset=12)], [], lineno=1737, col_offset=12), Assign([Name('request', Store(), lineno=1742, col_offset=12)], Call(Name('strip', Load(), lineno=1742, col_offset=22), [Call(Name('replace', Load(), lineno=1742, col_offset=28), [Name('request', Load(), lineno=1742, col_offset=36), Str('"', lineno=1742, col_offset=45), Str('', lineno=1742, col_offset=50), Str("'", lineno=1742, col_offset=54), Str('', lineno=1742, col_offset=59)], [], None, None, lineno=1742, col_offset=28)], [], None, None, lineno=1742, col_offset=22), lineno=1742, col_offset=12), If(Compare(Call(Name('lower', Load(), lineno=1743, col_offset=15), [Name('request', Load(), lineno=1743, col_offset=21)], [], None, None, lineno=1743, col_offset=15), [In()], [Tuple([Str('q', lineno=1743, col_offset=34), Str('quit', lineno=1743, col_offset=39)], Load(), lineno=1743, col_offset=34)], lineno=1743, col_offset=15), [Break( lineno=1743, col_offset=48)], [], lineno=1743, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1744, col_offset=12), 'help', Load(), lineno=1744, col_offset=12), [Name('request', Load(), lineno=1744, col_offset=22)], [], None, None, lineno=1744, col_offset=12), lineno=1744, col_offset=12)], [], lineno=1736, col_offset=8)], [], lineno=1734, col_offset=4), FunctionDef('getline', arguments([Name('self', Param(), lineno=1746, col_offset=16), Name('prompt', Param(), lineno=1746, col_offset=22)], None, None, []), [Expr(Str('Read one line, using raw_input when available.', lineno=1747, col_offset=8), lineno=1747, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=1748, col_offset=11), 'input', Load(), lineno=1748, col_offset=11), [Is()], [Attribute(Name('sys', Load(), lineno=1748, col_offset=25), 'stdin', Load(), lineno=1748, col_offset=25)], lineno=1748, col_offset=11), [Return(Call(Name('raw_input', Load(), lineno=1749, col_offset=19), [Name('prompt', Load(), lineno=1749, col_offset=29)], [], None, None, lineno=1749, col_offset=19), lineno=1749, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1751, col_offset=12), 'output', Load(), lineno=1751, col_offset=12), 'write', Load(), lineno=1751, col_offset=12), [Name('prompt', Load(), lineno=1751, col_offset=30)], [], None, None, lineno=1751, col_offset=12), lineno=1751, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1752, col_offset=12), 'output', Load(), lineno=1752, col_offset=12), 'flush', Load(), lineno=1752, col_offset=12), [], [], None, None, lineno=1752, col_offset=12), lineno=1752, col_offset=12), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=1753, col_offset=19), 'input', Load(), lineno=1753, col_offset=19), 'readline', Load(), lineno=1753, col_offset=19), [], [], None, None, lineno=1753, col_offset=19), lineno=1753, col_offset=12)], lineno=1748, col_offset=8)], [], lineno=1746, col_offset=4), FunctionDef('help', arguments([Name('self', Param(), lineno=1755, col_offset=13), Name('request', Param(), lineno=1755, col_offset=19)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=1756, col_offset=11), [Name('request', Load(), lineno=1756, col_offset=16)], [], None, None, lineno=1756, col_offset=11), [Is()], [Call(Name('type', Load(), lineno=1756, col_offset=28), [Str('', lineno=1756, col_offset=33)], [], None, None, lineno=1756, col_offset=28)], lineno=1756, col_offset=11), [Assign([Name('request', Store(), lineno=1757, col_offset=12)], Call(Attribute(Name('request', Load(), lineno=1757, col_offset=22), 'strip', Load(), lineno=1757, col_offset=22), [], [], None, None, lineno=1757, col_offset=22), lineno=1757, col_offset=12), If(Compare(Name('request', Load(), lineno=1758, col_offset=15), [Eq()], [Str('help', lineno=1758, col_offset=26)], lineno=1758, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=1758, col_offset=34), 'intro', Load(), lineno=1758, col_offset=34), [], [], None, None, lineno=1758, col_offset=34), lineno=1758, col_offset=34)], [If(Compare(Name('request', Load(), lineno=1759, col_offset=17), [Eq()], [Str('keywords', lineno=1759, col_offset=28)], lineno=1759, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1759, col_offset=40), 'listkeywords', Load(), lineno=1759, col_offset=40), [], [], None, None, lineno=1759, col_offset=40), lineno=1759, col_offset=40)], [If(Compare(Name('request', Load(), lineno=1760, col_offset=17), [Eq()], [Str('symbols', lineno=1760, col_offset=28)], lineno=1760, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1760, col_offset=39), 'listsymbols', Load(), lineno=1760, col_offset=39), [], [], None, None, lineno=1760, col_offset=39), lineno=1760, col_offset=39)], [If(Compare(Name('request', Load(), lineno=1761, col_offset=17), [Eq()], [Str('topics', lineno=1761, col_offset=28)], lineno=1761, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1761, col_offset=38), 'listtopics', Load(), lineno=1761, col_offset=38), [], [], None, None, lineno=1761, col_offset=38), lineno=1761, col_offset=38)], [If(Compare(Name('request', Load(), lineno=1762, col_offset=17), [Eq()], [Str('modules', lineno=1762, col_offset=28)], lineno=1762, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1762, col_offset=39), 'listmodules', Load(), lineno=1762, col_offset=39), [], [], None, None, lineno=1762, col_offset=39), lineno=1762, col_offset=39)], [If(Compare(Subscript(Name('request', Load(), lineno=1763, col_offset=17), Slice(None, Num(8, lineno=1763, col_offset=26), None), Load(), lineno=1763, col_offset=17), [Eq()], [Str('modules ', lineno=1763, col_offset=32)], lineno=1763, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1764, col_offset=16), 'listmodules', Load(), lineno=1764, col_offset=16), [Subscript(Call(Name('split', Load(), lineno=1764, col_offset=33), [Name('request', Load(), lineno=1764, col_offset=39)], [], None, None, lineno=1764, col_offset=33), Index(Num(1, lineno=1764, col_offset=48)), Load(), lineno=1764, col_offset=33)], [], None, None, lineno=1764, col_offset=16), lineno=1764, col_offset=16)], [If(Compare(Name('request', Load(), lineno=1765, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=1765, col_offset=28), 'symbols', Load(), lineno=1765, col_offset=28)], lineno=1765, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1765, col_offset=42), 'showsymbol', Load(), lineno=1765, col_offset=42), [Name('request', Load(), lineno=1765, col_offset=58)], [], None, None, lineno=1765, col_offset=42), lineno=1765, col_offset=42)], [If(Compare(Name('request', Load(), lineno=1766, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=1766, col_offset=28), 'keywords', Load(), lineno=1766, col_offset=28)], lineno=1766, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1766, col_offset=43), 'showtopic', Load(), lineno=1766, col_offset=43), [Name('request', Load(), lineno=1766, col_offset=58)], [], None, None, lineno=1766, col_offset=43), lineno=1766, col_offset=43)], [If(Compare(Name('request', Load(), lineno=1767, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=1767, col_offset=28), 'topics', Load(), lineno=1767, col_offset=28)], lineno=1767, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=1767, col_offset=41), 'showtopic', Load(), lineno=1767, col_offset=41), [Name('request', Load(), lineno=1767, col_offset=56)], [], None, None, lineno=1767, col_offset=41), lineno=1767, col_offset=41)], [If(Name('request', Load(), lineno=1768, col_offset=17), [Expr(Call(Name('doc', Load(), lineno=1768, col_offset=26), [Name('request', Load(), lineno=1768, col_offset=30), Str('Help on %s:', lineno=1768, col_offset=39)], [], None, None, lineno=1768, col_offset=26), lineno=1768, col_offset=26)], [], lineno=1768, col_offset=17)], lineno=1767, col_offset=17)], lineno=1766, col_offset=17)], lineno=1765, col_offset=17)], lineno=1763, col_offset=17)], lineno=1762, col_offset=17)], lineno=1761, col_offset=17)], lineno=1760, col_offset=17)], lineno=1759, col_offset=17)], lineno=1758, col_offset=12)], [If(Call(Name('isinstance', Load(), lineno=1769, col_offset=13), [Name('request', Load(), lineno=1769, col_offset=24), Name('Helper', Load(), lineno=1769, col_offset=33)], [], None, None, lineno=1769, col_offset=13), [Expr(Call(Name('self', Load(), lineno=1769, col_offset=42), [], [], None, None, lineno=1769, col_offset=42), lineno=1769, col_offset=42)], [Expr(Call(Name('doc', Load(), lineno=1770, col_offset=14), [Name('request', Load(), lineno=1770, col_offset=18), Str('Help on %s:', lineno=1770, col_offset=27)], [], None, None, lineno=1770, col_offset=14), lineno=1770, col_offset=14)], lineno=1769, col_offset=13)], lineno=1756, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1771, col_offset=8), 'output', Load(), lineno=1771, col_offset=8), 'write', Load(), lineno=1771, col_offset=8), [Str('\n', lineno=1771, col_offset=26)], [], None, None, lineno=1771, col_offset=8), lineno=1771, col_offset=8)], [], lineno=1755, col_offset=4), FunctionDef('intro', arguments([Name('self', Param(), lineno=1773, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1774, col_offset=8), 'output', Load(), lineno=1774, col_offset=8), 'write', Load(), lineno=1774, col_offset=8), [BinOp(Str('\nWelcome to Python %s!  This is the online help utility.\n\nIf this is your first time using Python, you should definitely check out\nthe tutorial on the Internet at http://docs.python.org/tutorial/.\n\nEnter the name of any module, keyword, or topic to get help on writing\nPython programs and using Python modules.  To quit this help utility and\nreturn to the interpreter, just type "quit".\n\nTo get a list of available modules, keywords, or topics, type "modules",\n"keywords", or "topics".  Each module also comes with a one-line summary\nof what it does; to list the modules whose summaries contain a given word\nsuch as "spam", type "modules spam".\n', lineno=1788, col_offset=-1), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=1788, col_offset=6), 'version', Load(), lineno=1788, col_offset=6), Slice(None, Num(3, lineno=1788, col_offset=19), None), Load(), lineno=1788, col_offset=6), lineno=1788, col_offset=-1)], [], None, None, lineno=1774, col_offset=8), lineno=1774, col_offset=8)], [], lineno=1773, col_offset=4), FunctionDef('list', arguments([Name('self', Param(), lineno=1790, col_offset=13), Name('items', Param(), lineno=1790, col_offset=19), Name('columns', Param(), lineno=1790, col_offset=26), Name('width', Param(), lineno=1790, col_offset=37)], None, None, [Num(4, lineno=1790, col_offset=34), Num(80, lineno=1790, col_offset=43)]), [Assign([Name('items', Store(), lineno=1791, col_offset=8)], Subscript(Name('items', Load(), lineno=1791, col_offset=16), Slice(None, None, None), Load(), lineno=1791, col_offset=16), lineno=1791, col_offset=8), Expr(Call(Attribute(Name('items', Load(), lineno=1792, col_offset=8), 'sort', Load(), lineno=1792, col_offset=8), [], [], None, None, lineno=1792, col_offset=8), lineno=1792, col_offset=8), Assign([Name('colw', Store(), lineno=1793, col_offset=8)], BinOp(Name('width', Load(), lineno=1793, col_offset=15), Div(), Name('columns', Load(), lineno=1793, col_offset=23), lineno=1793, col_offset=15), lineno=1793, col_offset=8), Assign([Name('rows', Store(), lineno=1794, col_offset=8)], BinOp(BinOp(BinOp(Call(Name('len', Load(), lineno=1794, col_offset=16), [Name('items', Load(), lineno=1794, col_offset=20)], [], None, None, lineno=1794, col_offset=16), Add(), Name('columns', Load(), lineno=1794, col_offset=29), lineno=1794, col_offset=16), Sub(), Num(1, lineno=1794, col_offset=39), lineno=1794, col_offset=37), Div(), Name('columns', Load(), lineno=1794, col_offset=44), lineno=1794, col_offset=15), lineno=1794, col_offset=8), For(Name('row', Store(), lineno=1795, col_offset=12), Call(Name('range', Load(), lineno=1795, col_offset=19), [Name('rows', Load(), lineno=1795, col_offset=25)], [], None, None, lineno=1795, col_offset=19), [For(Name('col', Store(), lineno=1796, col_offset=16), Call(Name('range', Load(), lineno=1796, col_offset=23), [Name('columns', Load(), lineno=1796, col_offset=29)], [], None, None, lineno=1796, col_offset=23), [Assign([Name('i', Store(), lineno=1797, col_offset=16)], BinOp(BinOp(Name('col', Load(), lineno=1797, col_offset=20), Mult(), Name('rows', Load(), lineno=1797, col_offset=26), lineno=1797, col_offset=20), Add(), Name('row', Load(), lineno=1797, col_offset=33), lineno=1797, col_offset=20), lineno=1797, col_offset=16), If(Compare(Name('i', Load(), lineno=1798, col_offset=19), [Lt()], [Call(Name('len', Load(), lineno=1798, col_offset=23), [Name('items', Load(), lineno=1798, col_offset=27)], [], None, None, lineno=1798, col_offset=23)], lineno=1798, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1799, col_offset=20), 'output', Load(), lineno=1799, col_offset=20), 'write', Load(), lineno=1799, col_offset=20), [Subscript(Name('items', Load(), lineno=1799, col_offset=38), Index(Name('i', Load(), lineno=1799, col_offset=44)), Load(), lineno=1799, col_offset=38)], [], None, None, lineno=1799, col_offset=20), lineno=1799, col_offset=20), If(Compare(Name('col', Load(), lineno=1800, col_offset=23), [Lt()], [BinOp(Name('columns', Load(), lineno=1800, col_offset=29), Sub(), Num(1, lineno=1800, col_offset=39), lineno=1800, col_offset=29)], lineno=1800, col_offset=23), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1801, col_offset=24), 'output', Load(), lineno=1801, col_offset=24), 'write', Load(), lineno=1801, col_offset=24), [BinOp(Str(' ', lineno=1801, col_offset=42), Add(), BinOp(Str(' ', lineno=1801, col_offset=48), Mult(), BinOp(BinOp(Name('colw', Load(), lineno=1801, col_offset=55), Sub(), Num(1, lineno=1801, col_offset=60), lineno=1801, col_offset=55), Sub(), Call(Name('len', Load(), lineno=1801, col_offset=64), [Subscript(Name('items', Load(), lineno=1801, col_offset=68), Index(Name('i', Load(), lineno=1801, col_offset=74)), Load(), lineno=1801, col_offset=68)], [], None, None, lineno=1801, col_offset=64), lineno=1801, col_offset=62), lineno=1801, col_offset=48), lineno=1801, col_offset=42)], [], None, None, lineno=1801, col_offset=24), lineno=1801, col_offset=24)], [], lineno=1800, col_offset=20)], [], lineno=1798, col_offset=16)], [], lineno=1796, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1802, col_offset=12), 'output', Load(), lineno=1802, col_offset=12), 'write', Load(), lineno=1802, col_offset=12), [Str('\n', lineno=1802, col_offset=30)], [], None, None, lineno=1802, col_offset=12), lineno=1802, col_offset=12)], [], lineno=1795, col_offset=8)], [], lineno=1790, col_offset=4), FunctionDef('listkeywords', arguments([Name('self', Param(), lineno=1804, col_offset=21)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1805, col_offset=8), 'output', Load(), lineno=1805, col_offset=8), 'write', Load(), lineno=1805, col_offset=8), [Str('\nHere is a list of the Python keywords.  Enter any keyword to get more help.\n\n', lineno=1808, col_offset=-1)], [], None, None, lineno=1805, col_offset=8), lineno=1805, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1809, col_offset=8), 'list', Load(), lineno=1809, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1809, col_offset=18), 'keywords', Load(), lineno=1809, col_offset=18), 'keys', Load(), lineno=1809, col_offset=18), [], [], None, None, lineno=1809, col_offset=18)], [], None, None, lineno=1809, col_offset=8), lineno=1809, col_offset=8)], [], lineno=1804, col_offset=4), FunctionDef('listsymbols', arguments([Name('self', Param(), lineno=1811, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1812, col_offset=8), 'output', Load(), lineno=1812, col_offset=8), 'write', Load(), lineno=1812, col_offset=8), [Str('\nHere is a list of the punctuation symbols which Python assigns special meaning\nto. Enter any symbol to get more help.\n\n', lineno=1816, col_offset=-1)], [], None, None, lineno=1812, col_offset=8), lineno=1812, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1817, col_offset=8), 'list', Load(), lineno=1817, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1817, col_offset=18), 'symbols', Load(), lineno=1817, col_offset=18), 'keys', Load(), lineno=1817, col_offset=18), [], [], None, None, lineno=1817, col_offset=18)], [], None, None, lineno=1817, col_offset=8), lineno=1817, col_offset=8)], [], lineno=1811, col_offset=4), FunctionDef('listtopics', arguments([Name('self', Param(), lineno=1819, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1820, col_offset=8), 'output', Load(), lineno=1820, col_offset=8), 'write', Load(), lineno=1820, col_offset=8), [Str('\nHere is a list of available topics.  Enter any topic name to get more help.\n\n', lineno=1823, col_offset=-1)], [], None, None, lineno=1820, col_offset=8), lineno=1820, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1824, col_offset=8), 'list', Load(), lineno=1824, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1824, col_offset=18), 'topics', Load(), lineno=1824, col_offset=18), 'keys', Load(), lineno=1824, col_offset=18), [], [], None, None, lineno=1824, col_offset=18)], [], None, None, lineno=1824, col_offset=8), lineno=1824, col_offset=8)], [], lineno=1819, col_offset=4), FunctionDef('showtopic', arguments([Name('self', Param(), lineno=1826, col_offset=18), Name('topic', Param(), lineno=1826, col_offset=24), Name('more_xrefs', Param(), lineno=1826, col_offset=31)], None, None, [Str('', lineno=1826, col_offset=42)]), [TryExcept([Import([alias('pydoc_data.topics', None)], lineno=1828, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=1829, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1830, col_offset=12), 'output', Load(), lineno=1830, col_offset=12), 'write', Load(), lineno=1830, col_offset=12), [Str('\nSorry, topic and keyword documentation is not available because the\nmodule "pydoc_data.topics" could not be found.\n', lineno=1833, col_offset=-1)], [], None, None, lineno=1830, col_offset=12), lineno=1830, col_offset=12), Return(None, lineno=1834, col_offset=12)], lineno=1829, col_offset=8)], [], lineno=1827, col_offset=8), Assign([Name('target', Store(), lineno=1835, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1835, col_offset=17), 'topics', Load(), lineno=1835, col_offset=17), 'get', Load(), lineno=1835, col_offset=17), [Name('topic', Load(), lineno=1835, col_offset=33), Call(Attribute(Attribute(Name('self', Load(), lineno=1835, col_offset=40), 'keywords', Load(), lineno=1835, col_offset=40), 'get', Load(), lineno=1835, col_offset=40), [Name('topic', Load(), lineno=1835, col_offset=58)], [], None, None, lineno=1835, col_offset=40)], [], None, None, lineno=1835, col_offset=17), lineno=1835, col_offset=8), If(UnaryOp(Not(), Name('target', Load(), lineno=1836, col_offset=15), lineno=1836, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1837, col_offset=12), 'output', Load(), lineno=1837, col_offset=12), 'write', Load(), lineno=1837, col_offset=12), [BinOp(Str('no documentation found for %s\n', lineno=1837, col_offset=30), Mod(), Call(Name('repr', Load(), lineno=1837, col_offset=66), [Name('topic', Load(), lineno=1837, col_offset=71)], [], None, None, lineno=1837, col_offset=66), lineno=1837, col_offset=30)], [], None, None, lineno=1837, col_offset=12), lineno=1837, col_offset=12), Return(None, lineno=1838, col_offset=12)], [], lineno=1836, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=1839, col_offset=11), [Name('target', Load(), lineno=1839, col_offset=16)], [], None, None, lineno=1839, col_offset=11), [Is()], [Call(Name('type', Load(), lineno=1839, col_offset=27), [Str('', lineno=1839, col_offset=32)], [], None, None, lineno=1839, col_offset=27)], lineno=1839, col_offset=11), [Return(Call(Attribute(Name('self', Load(), lineno=1840, col_offset=19), 'showtopic', Load(), lineno=1840, col_offset=19), [Name('target', Load(), lineno=1840, col_offset=34), Name('more_xrefs', Load(), lineno=1840, col_offset=42)], [], None, None, lineno=1840, col_offset=19), lineno=1840, col_offset=12)], [], lineno=1839, col_offset=8), Assign([Tuple([Name('label', Store(), lineno=1842, col_offset=8), Name('xrefs', Store(), lineno=1842, col_offset=15)], Store(), lineno=1842, col_offset=8)], Name('target', Load(), lineno=1842, col_offset=23), lineno=1842, col_offset=8), TryExcept([Assign([Name('doc', Store(), lineno=1844, col_offset=12)], Subscript(Attribute(Attribute(Name('pydoc_data', Load(), lineno=1844, col_offset=18), 'topics', Load(), lineno=1844, col_offset=18), 'topics', Load(), lineno=1844, col_offset=18), Index(Name('label', Load(), lineno=1844, col_offset=43)), Load(), lineno=1844, col_offset=18), lineno=1844, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=1845, col_offset=15), None, [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1846, col_offset=12), 'output', Load(), lineno=1846, col_offset=12), 'write', Load(), lineno=1846, col_offset=12), [BinOp(Str('no documentation found for %s\n', lineno=1846, col_offset=30), Mod(), Call(Name('repr', Load(), lineno=1846, col_offset=66), [Name('topic', Load(), lineno=1846, col_offset=71)], [], None, None, lineno=1846, col_offset=66), lineno=1846, col_offset=30)], [], None, None, lineno=1846, col_offset=12), lineno=1846, col_offset=12), Return(None, lineno=1847, col_offset=12)], lineno=1845, col_offset=8)], [], lineno=1843, col_offset=8), Expr(Call(Name('pager', Load(), lineno=1848, col_offset=8), [BinOp(Call(Name('strip', Load(), lineno=1848, col_offset=14), [Name('doc', Load(), lineno=1848, col_offset=20)], [], None, None, lineno=1848, col_offset=14), Add(), Str('\n', lineno=1848, col_offset=27), lineno=1848, col_offset=14)], [], None, None, lineno=1848, col_offset=8), lineno=1848, col_offset=8), If(Name('more_xrefs', Load(), lineno=1849, col_offset=11), [Assign([Name('xrefs', Store(), lineno=1850, col_offset=12)], BinOp(BinOp(BoolOp(Or(), [Name('xrefs', Load(), lineno=1850, col_offset=21), Str('', lineno=1850, col_offset=30)], lineno=1850, col_offset=21), Add(), Str(' ', lineno=1850, col_offset=36), lineno=1850, col_offset=20), Add(), Name('more_xrefs', Load(), lineno=1850, col_offset=42), lineno=1850, col_offset=40), lineno=1850, col_offset=12)], [], lineno=1849, col_offset=8), If(Name('xrefs', Load(), lineno=1851, col_offset=11), [Import([alias('StringIO', None), alias('formatter', None)], lineno=1852, col_offset=12), Assign([Name('buffer', Store(), lineno=1853, col_offset=12)], Call(Attribute(Name('StringIO', Load(), lineno=1853, col_offset=21), 'StringIO', Load(), lineno=1853, col_offset=21), [], [], None, None, lineno=1853, col_offset=21), lineno=1853, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('formatter', Load(), lineno=1854, col_offset=12), 'DumbWriter', Load(), lineno=1854, col_offset=12), [Name('buffer', Load(), lineno=1854, col_offset=33)], [], None, None, lineno=1854, col_offset=12), 'send_flowing_data', Load(), lineno=1854, col_offset=12), [BinOp(BinOp(Str('Related help topics: ', lineno=1855, col_offset=16), Add(), Call(Name('join', Load(), lineno=1855, col_offset=42), [Call(Name('split', Load(), lineno=1855, col_offset=47), [Name('xrefs', Load(), lineno=1855, col_offset=53)], [], None, None, lineno=1855, col_offset=47), Str(', ', lineno=1855, col_offset=61)], [], None, None, lineno=1855, col_offset=42), lineno=1855, col_offset=16), Add(), Str('\n', lineno=1855, col_offset=69), lineno=1855, col_offset=67)], [], None, None, lineno=1854, col_offset=12), lineno=1854, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1856, col_offset=12), 'output', Load(), lineno=1856, col_offset=12), 'write', Load(), lineno=1856, col_offset=12), [BinOp(Str('\n%s\n', lineno=1856, col_offset=30), Mod(), Call(Attribute(Name('buffer', Load(), lineno=1856, col_offset=41), 'getvalue', Load(), lineno=1856, col_offset=41), [], [], None, None, lineno=1856, col_offset=41), lineno=1856, col_offset=30)], [], None, None, lineno=1856, col_offset=12), lineno=1856, col_offset=12)], [], lineno=1851, col_offset=8)], [], lineno=1826, col_offset=4), FunctionDef('showsymbol', arguments([Name('self', Param(), lineno=1858, col_offset=19), Name('symbol', Param(), lineno=1858, col_offset=25)], None, None, []), [Assign([Name('target', Store(), lineno=1859, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1859, col_offset=17), 'symbols', Load(), lineno=1859, col_offset=17), Index(Name('symbol', Load(), lineno=1859, col_offset=30)), Load(), lineno=1859, col_offset=17), lineno=1859, col_offset=8), Assign([Tuple([Name('topic', Store(), lineno=1860, col_offset=8), Name('_', Store(), lineno=1860, col_offset=15), Name('xrefs', Store(), lineno=1860, col_offset=18)], Store(), lineno=1860, col_offset=8)], Call(Attribute(Name('target', Load(), lineno=1860, col_offset=26), 'partition', Load(), lineno=1860, col_offset=26), [Str(' ', lineno=1860, col_offset=43)], [], None, None, lineno=1860, col_offset=26), lineno=1860, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1861, col_offset=8), 'showtopic', Load(), lineno=1861, col_offset=8), [Name('topic', Load(), lineno=1861, col_offset=23), Name('xrefs', Load(), lineno=1861, col_offset=30)], [], None, None, lineno=1861, col_offset=8), lineno=1861, col_offset=8)], [], lineno=1858, col_offset=4), FunctionDef('listmodules', arguments([Name('self', Param(), lineno=1863, col_offset=20), Name('key', Param(), lineno=1863, col_offset=26)], None, None, [Str('', lineno=1863, col_offset=30)]), [If(Name('key', Load(), lineno=1864, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1865, col_offset=12), 'output', Load(), lineno=1865, col_offset=12), 'write', Load(), lineno=1865, col_offset=12), [Str('\nHere is a list of matching modules.  Enter any module name to get more help.\n\n', lineno=1868, col_offset=-1)], [], None, None, lineno=1865, col_offset=12), lineno=1865, col_offset=12), Expr(Call(Name('apropos', Load(), lineno=1869, col_offset=12), [Name('key', Load(), lineno=1869, col_offset=20)], [], None, None, lineno=1869, col_offset=12), lineno=1869, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1871, col_offset=12), 'output', Load(), lineno=1871, col_offset=12), 'write', Load(), lineno=1871, col_offset=12), [Str('\nPlease wait a moment while I gather a list of all available modules...\n\n', lineno=1874, col_offset=-1)], [], None, None, lineno=1871, col_offset=12), lineno=1871, col_offset=12), Assign([Name('modules', Store(), lineno=1875, col_offset=12)], Dict([], [], lineno=1875, col_offset=22), lineno=1875, col_offset=12), FunctionDef('callback', arguments([Name('path', Param(), lineno=1876, col_offset=25), Name('modname', Param(), lineno=1876, col_offset=31), Name('desc', Param(), lineno=1876, col_offset=40), Name('modules', Param(), lineno=1876, col_offset=46)], None, None, [Name('modules', Load(), lineno=1876, col_offset=54)]), [If(BoolOp(And(), [Name('modname', Load(), lineno=1877, col_offset=19), Compare(Subscript(Name('modname', Load(), lineno=1877, col_offset=31), Slice(Num(-9, lineno=1877, col_offset=40), None, None), Load(), lineno=1877, col_offset=31), [Eq()], [Str('.__init__', lineno=1877, col_offset=47)], lineno=1877, col_offset=31)], lineno=1877, col_offset=19), [Assign([Name('modname', Store(), lineno=1878, col_offset=20)], BinOp(Subscript(Name('modname', Load(), lineno=1878, col_offset=30), Slice(None, Num(-9, lineno=1878, col_offset=40), None), Load(), lineno=1878, col_offset=30), Add(), Str(' (package)', lineno=1878, col_offset=45), lineno=1878, col_offset=30), lineno=1878, col_offset=20)], [], lineno=1877, col_offset=16), If(Compare(Call(Name('find', Load(), lineno=1879, col_offset=19), [Name('modname', Load(), lineno=1879, col_offset=24), Str('.', lineno=1879, col_offset=33)], [], None, None, lineno=1879, col_offset=19), [Lt()], [Num(0, lineno=1879, col_offset=40)], lineno=1879, col_offset=19), [Assign([Subscript(Name('modules', Load(), lineno=1880, col_offset=20), Index(Name('modname', Load(), lineno=1880, col_offset=28)), Store(), lineno=1880, col_offset=20)], Num(1, lineno=1880, col_offset=39), lineno=1880, col_offset=20)], [], lineno=1879, col_offset=16)], [], lineno=1876, col_offset=12), FunctionDef('onerror', arguments([Name('modname', Param(), lineno=1881, col_offset=24)], None, None, []), [Expr(Call(Name('callback', Load(), lineno=1882, col_offset=16), [Name('None', Load(), lineno=1882, col_offset=25), Name('modname', Load(), lineno=1882, col_offset=31), Name('None', Load(), lineno=1882, col_offset=40)], [], None, None, lineno=1882, col_offset=16), lineno=1882, col_offset=16)], [], lineno=1881, col_offset=12), Expr(Call(Attribute(Call(Name('ModuleScanner', Load(), lineno=1883, col_offset=12), [], [], None, None, lineno=1883, col_offset=12), 'run', Load(), lineno=1883, col_offset=12), [Name('callback', Load(), lineno=1883, col_offset=32)], [keyword('onerror', Name('onerror', Load(), lineno=1883, col_offset=50))], None, None, lineno=1883, col_offset=12), lineno=1883, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1884, col_offset=12), 'list', Load(), lineno=1884, col_offset=12), [Call(Attribute(Name('modules', Load(), lineno=1884, col_offset=22), 'keys', Load(), lineno=1884, col_offset=22), [], [], None, None, lineno=1884, col_offset=22)], [], None, None, lineno=1884, col_offset=12), lineno=1884, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1885, col_offset=12), 'output', Load(), lineno=1885, col_offset=12), 'write', Load(), lineno=1885, col_offset=12), [Str('\nEnter any module name to get more help.  Or, type "modules spam" to search\nfor modules whose descriptions contain the word "spam".\n', lineno=1888, col_offset=-1)], [], None, None, lineno=1885, col_offset=12), lineno=1885, col_offset=12)], lineno=1864, col_offset=8)], [], lineno=1863, col_offset=4)], [], lineno=1531, col_offset=0), Assign([Name('help', Store(), lineno=1890, col_offset=0)], Call(Name('Helper', Load(), lineno=1890, col_offset=7), [], [], None, None, lineno=1890, col_offset=7), lineno=1890, col_offset=0), ClassDef('Scanner', [], [Expr(Str('A generic tree iterator.', lineno=1893, col_offset=4), lineno=1893, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=1894, col_offset=17), Name('roots', Param(), lineno=1894, col_offset=23), Name('children', Param(), lineno=1894, col_offset=30), Name('descendp', Param(), lineno=1894, col_offset=40)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1895, col_offset=8), 'roots', Store(), lineno=1895, col_offset=8)], Subscript(Name('roots', Load(), lineno=1895, col_offset=21), Slice(None, None, None), Load(), lineno=1895, col_offset=21), lineno=1895, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1896, col_offset=8), 'state', Store(), lineno=1896, col_offset=8)], List([], Load(), lineno=1896, col_offset=21), lineno=1896, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1897, col_offset=8), 'children', Store(), lineno=1897, col_offset=8)], Name('children', Load(), lineno=1897, col_offset=24), lineno=1897, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1898, col_offset=8), 'descendp', Store(), lineno=1898, col_offset=8)], Name('descendp', Load(), lineno=1898, col_offset=24), lineno=1898, col_offset=8)], [], lineno=1894, col_offset=4), FunctionDef('next', arguments([Name('self', Param(), lineno=1900, col_offset=13)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1901, col_offset=15), 'state', Load(), lineno=1901, col_offset=15), lineno=1901, col_offset=11), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1902, col_offset=19), 'roots', Load(), lineno=1902, col_offset=19), lineno=1902, col_offset=15), [Return(Name('None', Load(), lineno=1903, col_offset=23), lineno=1903, col_offset=16)], [], lineno=1902, col_offset=12), Assign([Name('root', Store(), lineno=1904, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1904, col_offset=19), 'roots', Load(), lineno=1904, col_offset=19), 'pop', Load(), lineno=1904, col_offset=19), [Num(0, lineno=1904, col_offset=34)], [], None, None, lineno=1904, col_offset=19), lineno=1904, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1905, col_offset=12), 'state', Store(), lineno=1905, col_offset=12)], List([Tuple([Name('root', Load(), lineno=1905, col_offset=27), Call(Attribute(Name('self', Load(), lineno=1905, col_offset=33), 'children', Load(), lineno=1905, col_offset=33), [Name('root', Load(), lineno=1905, col_offset=47)], [], None, None, lineno=1905, col_offset=33)], Load(), lineno=1905, col_offset=27)], Load(), lineno=1905, col_offset=25), lineno=1905, col_offset=12)], [], lineno=1901, col_offset=8), Assign([Tuple([Name('node', Store(), lineno=1906, col_offset=8), Name('children', Store(), lineno=1906, col_offset=14)], Store(), lineno=1906, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=1906, col_offset=25), 'state', Load(), lineno=1906, col_offset=25), Index(Num(-1, lineno=1906, col_offset=37)), Load(), lineno=1906, col_offset=25), lineno=1906, col_offset=8), If(UnaryOp(Not(), Name('children', Load(), lineno=1907, col_offset=15), lineno=1907, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1908, col_offset=12), 'state', Load(), lineno=1908, col_offset=12), 'pop', Load(), lineno=1908, col_offset=12), [], [], None, None, lineno=1908, col_offset=12), lineno=1908, col_offset=12), Return(Call(Attribute(Name('self', Load(), lineno=1909, col_offset=19), 'next', Load(), lineno=1909, col_offset=19), [], [], None, None, lineno=1909, col_offset=19), lineno=1909, col_offset=12)], [], lineno=1907, col_offset=8), Assign([Name('child', Store(), lineno=1910, col_offset=8)], Call(Attribute(Name('children', Load(), lineno=1910, col_offset=16), 'pop', Load(), lineno=1910, col_offset=16), [Num(0, lineno=1910, col_offset=29)], [], None, None, lineno=1910, col_offset=16), lineno=1910, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=1911, col_offset=11), 'descendp', Load(), lineno=1911, col_offset=11), [Name('child', Load(), lineno=1911, col_offset=25)], [], None, None, lineno=1911, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1912, col_offset=12), 'state', Load(), lineno=1912, col_offset=12), 'append', Load(), lineno=1912, col_offset=12), [Tuple([Name('child', Load(), lineno=1912, col_offset=31), Call(Attribute(Name('self', Load(), lineno=1912, col_offset=38), 'children', Load(), lineno=1912, col_offset=38), [Name('child', Load(), lineno=1912, col_offset=52)], [], None, None, lineno=1912, col_offset=38)], Load(), lineno=1912, col_offset=31)], [], None, None, lineno=1912, col_offset=12), lineno=1912, col_offset=12)], [], lineno=1911, col_offset=8), Return(Name('child', Load(), lineno=1913, col_offset=15), lineno=1913, col_offset=8)], [], lineno=1900, col_offset=4)], [], lineno=1892, col_offset=0), ClassDef('ModuleScanner', [], [Expr(Str('An interruptible scanner that searches module synopses.', lineno=1917, col_offset=4), lineno=1917, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=1919, col_offset=12), Name('callback', Param(), lineno=1919, col_offset=18), Name('key', Param(), lineno=1919, col_offset=28), Name('completer', Param(), lineno=1919, col_offset=38), Name('onerror', Param(), lineno=1919, col_offset=54)], None, None, [Name('None', Load(), lineno=1919, col_offset=32), Name('None', Load(), lineno=1919, col_offset=48), Name('None', Load(), lineno=1919, col_offset=62)]), [If(Name('key', Load(), lineno=1920, col_offset=11), [Assign([Name('key', Store(), lineno=1920, col_offset=16)], Call(Name('lower', Load(), lineno=1920, col_offset=22), [Name('key', Load(), lineno=1920, col_offset=28)], [], None, None, lineno=1920, col_offset=22), lineno=1920, col_offset=16)], [], lineno=1920, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1921, col_offset=8), 'quit', Store(), lineno=1921, col_offset=8)], Name('False', Load(), lineno=1921, col_offset=20), lineno=1921, col_offset=8), Assign([Name('seen', Store(), lineno=1922, col_offset=8)], Dict([], [], lineno=1922, col_offset=15), lineno=1922, col_offset=8), For(Name('modname', Store(), lineno=1924, col_offset=12), Attribute(Name('sys', Load(), lineno=1924, col_offset=23), 'builtin_module_names', Load(), lineno=1924, col_offset=23), [If(Compare(Name('modname', Load(), lineno=1925, col_offset=15), [NotEq()], [Str('__main__', lineno=1925, col_offset=26)], lineno=1925, col_offset=15), [Assign([Subscript(Name('seen', Load(), lineno=1926, col_offset=16), Index(Name('modname', Load(), lineno=1926, col_offset=21)), Store(), lineno=1926, col_offset=16)], Num(1, lineno=1926, col_offset=32), lineno=1926, col_offset=16), If(Compare(Name('key', Load(), lineno=1927, col_offset=19), [Is()], [Name('None', Load(), lineno=1927, col_offset=26)], lineno=1927, col_offset=19), [Expr(Call(Name('callback', Load(), lineno=1928, col_offset=20), [Name('None', Load(), lineno=1928, col_offset=29), Name('modname', Load(), lineno=1928, col_offset=35), Str('', lineno=1928, col_offset=44)], [], None, None, lineno=1928, col_offset=20), lineno=1928, col_offset=20)], [Assign([Name('desc', Store(), lineno=1930, col_offset=20)], Subscript(Call(Name('split', Load(), lineno=1930, col_offset=27), [BoolOp(Or(), [Attribute(Call(Name('__import__', Load(), lineno=1930, col_offset=33), [Name('modname', Load(), lineno=1930, col_offset=44)], [], None, None, lineno=1930, col_offset=33), '__doc__', Load(), lineno=1930, col_offset=33), Str('', lineno=1930, col_offset=64)], lineno=1930, col_offset=33), Str('\n', lineno=1930, col_offset=68)], [], None, None, lineno=1930, col_offset=27), Index(Num(0, lineno=1930, col_offset=74)), Load(), lineno=1930, col_offset=27), lineno=1930, col_offset=20), If(Compare(Call(Name('find', Load(), lineno=1931, col_offset=23), [Call(Name('lower', Load(), lineno=1931, col_offset=28), [BinOp(BinOp(Name('modname', Load(), lineno=1931, col_offset=34), Add(), Str(' - ', lineno=1931, col_offset=44), lineno=1931, col_offset=34), Add(), Name('desc', Load(), lineno=1931, col_offset=52), lineno=1931, col_offset=50)], [], None, None, lineno=1931, col_offset=28), Name('key', Load(), lineno=1931, col_offset=59)], [], None, None, lineno=1931, col_offset=23), [GtE()], [Num(0, lineno=1931, col_offset=67)], lineno=1931, col_offset=23), [Expr(Call(Name('callback', Load(), lineno=1932, col_offset=24), [Name('None', Load(), lineno=1932, col_offset=33), Name('modname', Load(), lineno=1932, col_offset=39), Name('desc', Load(), lineno=1932, col_offset=48)], [], None, None, lineno=1932, col_offset=24), lineno=1932, col_offset=24)], [], lineno=1931, col_offset=20)], lineno=1927, col_offset=16)], [], lineno=1925, col_offset=12)], [], lineno=1924, col_offset=8), For(Tuple([Name('importer', Store(), lineno=1934, col_offset=12), Name('modname', Store(), lineno=1934, col_offset=22), Name('ispkg', Store(), lineno=1934, col_offset=31)], Store(), lineno=1934, col_offset=12), Call(Attribute(Name('pkgutil', Load(), lineno=1934, col_offset=40), 'walk_packages', Load(), lineno=1934, col_offset=40), [], [keyword('onerror', Name('onerror', Load(), lineno=1934, col_offset=70))], None, None, lineno=1934, col_offset=40), [If(Attribute(Name('self', Load(), lineno=1935, col_offset=15), 'quit', Load(), lineno=1935, col_offset=15), [Break( lineno=1936, col_offset=16)], [], lineno=1935, col_offset=12), If(Compare(Name('key', Load(), lineno=1937, col_offset=15), [Is()], [Name('None', Load(), lineno=1937, col_offset=22)], lineno=1937, col_offset=15), [Expr(Call(Name('callback', Load(), lineno=1938, col_offset=16), [Name('None', Load(), lineno=1938, col_offset=25), Name('modname', Load(), lineno=1938, col_offset=31), Str('', lineno=1938, col_offset=40)], [], None, None, lineno=1938, col_offset=16), lineno=1938, col_offset=16)], [Assign([Name('loader', Store(), lineno=1940, col_offset=16)], Call(Attribute(Name('importer', Load(), lineno=1940, col_offset=25), 'find_module', Load(), lineno=1940, col_offset=25), [Name('modname', Load(), lineno=1940, col_offset=46)], [], None, None, lineno=1940, col_offset=25), lineno=1940, col_offset=16), If(Call(Name('hasattr', Load(), lineno=1941, col_offset=19), [Name('loader', Load(), lineno=1941, col_offset=27), Str('get_source', lineno=1941, col_offset=34)], [], None, None, lineno=1941, col_offset=19), [Import([alias('StringIO', None)], lineno=1942, col_offset=20), Assign([Name('desc', Store(), lineno=1943, col_offset=20)], BoolOp(Or(), [Call(Name('source_synopsis', Load(), lineno=1943, col_offset=27), [Call(Attribute(Name('StringIO', Load(), lineno=1944, col_offset=24), 'StringIO', Load(), lineno=1944, col_offset=24), [Call(Attribute(Name('loader', Load(), lineno=1944, col_offset=42), 'get_source', Load(), lineno=1944, col_offset=42), [Name('modname', Load(), lineno=1944, col_offset=60)], [], None, None, lineno=1944, col_offset=42)], [], None, None, lineno=1944, col_offset=24)], [], None, None, lineno=1943, col_offset=27), Str('', lineno=1945, col_offset=25)], lineno=1943, col_offset=27), lineno=1943, col_offset=20), If(Call(Name('hasattr', Load(), lineno=1946, col_offset=23), [Name('loader', Load(), lineno=1946, col_offset=31), Str('get_filename', lineno=1946, col_offset=38)], [], None, None, lineno=1946, col_offset=23), [Assign([Name('path', Store(), lineno=1947, col_offset=24)], Call(Attribute(Name('loader', Load(), lineno=1947, col_offset=31), 'get_filename', Load(), lineno=1947, col_offset=31), [Name('modname', Load(), lineno=1947, col_offset=51)], [], None, None, lineno=1947, col_offset=31), lineno=1947, col_offset=24)], [Assign([Name('path', Store(), lineno=1949, col_offset=24)], Name('None', Load(), lineno=1949, col_offset=31), lineno=1949, col_offset=24)], lineno=1946, col_offset=20)], [Assign([Name('module', Store(), lineno=1951, col_offset=20)], Call(Attribute(Name('loader', Load(), lineno=1951, col_offset=29), 'load_module', Load(), lineno=1951, col_offset=29), [Name('modname', Load(), lineno=1951, col_offset=48)], [], None, None, lineno=1951, col_offset=29), lineno=1951, col_offset=20), Assign([Name('desc', Store(), lineno=1952, col_offset=20)], Subscript(Call(Attribute(BoolOp(Or(), [Attribute(Name('module', Load(), lineno=1952, col_offset=28), '__doc__', Load(), lineno=1952, col_offset=28), Str('', lineno=1952, col_offset=46)], lineno=1952, col_offset=28), 'splitlines', Load(), lineno=1952, col_offset=28), [], [], None, None, lineno=1952, col_offset=28), Index(Num(0, lineno=1952, col_offset=63)), Load(), lineno=1952, col_offset=28), lineno=1952, col_offset=20), Assign([Name('path', Store(), lineno=1953, col_offset=20)], Call(Name('getattr', Load(), lineno=1953, col_offset=27), [Name('module', Load(), lineno=1953, col_offset=35), Str('__file__', lineno=1953, col_offset=42), Name('None', Load(), lineno=1953, col_offset=53)], [], None, None, lineno=1953, col_offset=27), lineno=1953, col_offset=20)], lineno=1941, col_offset=16), If(Compare(Call(Name('find', Load(), lineno=1954, col_offset=19), [Call(Name('lower', Load(), lineno=1954, col_offset=24), [BinOp(BinOp(Name('modname', Load(), lineno=1954, col_offset=30), Add(), Str(' - ', lineno=1954, col_offset=40), lineno=1954, col_offset=30), Add(), Name('desc', Load(), lineno=1954, col_offset=48), lineno=1954, col_offset=46)], [], None, None, lineno=1954, col_offset=24), Name('key', Load(), lineno=1954, col_offset=55)], [], None, None, lineno=1954, col_offset=19), [GtE()], [Num(0, lineno=1954, col_offset=63)], lineno=1954, col_offset=19), [Expr(Call(Name('callback', Load(), lineno=1955, col_offset=20), [Name('path', Load(), lineno=1955, col_offset=29), Name('modname', Load(), lineno=1955, col_offset=35), Name('desc', Load(), lineno=1955, col_offset=44)], [], None, None, lineno=1955, col_offset=20), lineno=1955, col_offset=20)], [], lineno=1954, col_offset=16)], lineno=1937, col_offset=12)], [], lineno=1934, col_offset=8), If(Name('completer', Load(), lineno=1957, col_offset=11), [Expr(Call(Name('completer', Load(), lineno=1958, col_offset=12), [], [], None, None, lineno=1958, col_offset=12), lineno=1958, col_offset=12)], [], lineno=1957, col_offset=8)], [], lineno=1919, col_offset=4)], [], lineno=1916, col_offset=0), FunctionDef('apropos', arguments([Name('key', Param(), lineno=1960, col_offset=12)], None, None, []), [Expr(Str('Print all the one-line module summaries that contain a substring.', lineno=1961, col_offset=4), lineno=1961, col_offset=4), FunctionDef('callback', arguments([Name('path', Param(), lineno=1962, col_offset=17), Name('modname', Param(), lineno=1962, col_offset=23), Name('desc', Param(), lineno=1962, col_offset=32)], None, None, []), [If(Compare(Subscript(Name('modname', Load(), lineno=1963, col_offset=11), Slice(Num(-9, lineno=1963, col_offset=20), None, None), Load(), lineno=1963, col_offset=11), [Eq()], [Str('.__init__', lineno=1963, col_offset=27)], lineno=1963, col_offset=11), [Assign([Name('modname', Store(), lineno=1964, col_offset=12)], BinOp(Subscript(Name('modname', Load(), lineno=1964, col_offset=22), Slice(None, Num(-9, lineno=1964, col_offset=32), None), Load(), lineno=1964, col_offset=22), Add(), Str(' (package)', lineno=1964, col_offset=37), lineno=1964, col_offset=22), lineno=1964, col_offset=12)], [], lineno=1963, col_offset=8), Print(None, [Name('modname', Load(), lineno=1965, col_offset=14), BoolOp(And(), [Name('desc', Load(), lineno=1965, col_offset=23), BinOp(Str('- ', lineno=1965, col_offset=32), Add(), Name('desc', Load(), lineno=1965, col_offset=39), lineno=1965, col_offset=32)], lineno=1965, col_offset=23)], True, lineno=1965, col_offset=8)], [], lineno=1962, col_offset=4), TryExcept([Import([alias('warnings', None)], lineno=1966, col_offset=9)], [ExceptHandler(Name('ImportError', Load(), lineno=1967, col_offset=11), None, [Pass( lineno=1967, col_offset=24)], lineno=1967, col_offset=4)], [Expr(Call(Attribute(Name('warnings', Load(), lineno=1968, col_offset=10), 'filterwarnings', Load(), lineno=1968, col_offset=10), [Str('ignore', lineno=1968, col_offset=34)], [], None, None, lineno=1968, col_offset=10), lineno=1968, col_offset=10)], lineno=1966, col_offset=4), Expr(Call(Attribute(Call(Name('ModuleScanner', Load(), lineno=1969, col_offset=4), [], [], None, None, lineno=1969, col_offset=4), 'run', Load(), lineno=1969, col_offset=4), [Name('callback', Load(), lineno=1969, col_offset=24), Name('key', Load(), lineno=1969, col_offset=34)], [], None, None, lineno=1969, col_offset=4), lineno=1969, col_offset=4)], [], lineno=1960, col_offset=0), FunctionDef('serve', arguments([Name('port', Param(), lineno=1973, col_offset=10), Name('callback', Param(), lineno=1973, col_offset=16), Name('completer', Param(), lineno=1973, col_offset=31)], None, None, [Name('None', Load(), lineno=1973, col_offset=25), Name('None', Load(), lineno=1973, col_offset=41)]), [Import([alias('BaseHTTPServer', None), alias('mimetools', None), alias('select', None)], lineno=1974, col_offset=4), ClassDef('Message', [Attribute(Name('mimetools', Load(), lineno=1977, col_offset=18), 'Message', Load(), lineno=1977, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=1978, col_offset=21), Name('fp', Param(), lineno=1978, col_offset=27), Name('seekable', Param(), lineno=1978, col_offset=31)], None, None, [Num(1, lineno=1978, col_offset=40)]), [Assign([Name('Message', Store(), lineno=1979, col_offset=12)], Attribute(Name('self', Load(), lineno=1979, col_offset=22), '__class__', Load(), lineno=1979, col_offset=22), lineno=1979, col_offset=12), Expr(Call(Attribute(Subscript(Attribute(Subscript(Attribute(Name('Message', Load(), lineno=1980, col_offset=12), '__bases__', Load(), lineno=1980, col_offset=12), Index(Num(0, lineno=1980, col_offset=30)), Load(), lineno=1980, col_offset=12), '__bases__', Load(), lineno=1980, col_offset=12), Index(Num(0, lineno=1980, col_offset=43)), Load(), lineno=1980, col_offset=12), '__init__', Load(), lineno=1980, col_offset=12), [Name('self', Load(), lineno=1980, col_offset=55), Name('fp', Load(), lineno=1980, col_offset=61), Name('seekable', Load(), lineno=1980, col_offset=65)], [], None, None, lineno=1980, col_offset=12), lineno=1980, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1981, col_offset=12), 'encodingheader', Store(), lineno=1981, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1981, col_offset=34), 'getheader', Load(), lineno=1981, col_offset=34), [Str('content-transfer-encoding', lineno=1981, col_offset=49)], [], None, None, lineno=1981, col_offset=34), lineno=1981, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=1982, col_offset=12), 'typeheader', Store(), lineno=1982, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1982, col_offset=30), 'getheader', Load(), lineno=1982, col_offset=30), [Str('content-type', lineno=1982, col_offset=45)], [], None, None, lineno=1982, col_offset=30), lineno=1982, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1983, col_offset=12), 'parsetype', Load(), lineno=1983, col_offset=12), [], [], None, None, lineno=1983, col_offset=12), lineno=1983, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1984, col_offset=12), 'parseplist', Load(), lineno=1984, col_offset=12), [], [], None, None, lineno=1984, col_offset=12), lineno=1984, col_offset=12)], [], lineno=1978, col_offset=8)], [], lineno=1977, col_offset=4), ClassDef('DocHandler', [Attribute(Name('BaseHTTPServer', Load(), lineno=1986, col_offset=21), 'BaseHTTPRequestHandler', Load(), lineno=1986, col_offset=21)], [FunctionDef('send_document', arguments([Name('self', Param(), lineno=1987, col_offset=26), Name('title', Param(), lineno=1987, col_offset=32), Name('contents', Param(), lineno=1987, col_offset=39)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=1989, col_offset=16), 'send_response', Load(), lineno=1989, col_offset=16), [Num(200, lineno=1989, col_offset=35)], [], None, None, lineno=1989, col_offset=16), lineno=1989, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1990, col_offset=16), 'send_header', Load(), lineno=1990, col_offset=16), [Str('Content-Type', lineno=1990, col_offset=33), Str('text/html', lineno=1990, col_offset=49)], [], None, None, lineno=1990, col_offset=16), lineno=1990, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=1991, col_offset=16), 'end_headers', Load(), lineno=1991, col_offset=16), [], [], None, None, lineno=1991, col_offset=16), lineno=1991, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1992, col_offset=16), 'wfile', Load(), lineno=1992, col_offset=16), 'write', Load(), lineno=1992, col_offset=16), [Call(Attribute(Name('html', Load(), lineno=1992, col_offset=33), 'page', Load(), lineno=1992, col_offset=33), [Name('title', Load(), lineno=1992, col_offset=43), Name('contents', Load(), lineno=1992, col_offset=50)], [], None, None, lineno=1992, col_offset=33)], [], None, None, lineno=1992, col_offset=16), lineno=1992, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=1993, col_offset=19), None, [Pass( lineno=1993, col_offset=28)], lineno=1993, col_offset=12)], [], lineno=1988, col_offset=12)], [], lineno=1987, col_offset=8), FunctionDef('do_GET', arguments([Name('self', Param(), lineno=1995, col_offset=19)], None, None, []), [Assign([Name('path', Store(), lineno=1996, col_offset=12)], Attribute(Name('self', Load(), lineno=1996, col_offset=19), 'path', Load(), lineno=1996, col_offset=19), lineno=1996, col_offset=12), If(Compare(Subscript(Name('path', Load(), lineno=1997, col_offset=15), Slice(Num(-5, lineno=1997, col_offset=21), None, None), Load(), lineno=1997, col_offset=15), [Eq()], [Str('.html', lineno=1997, col_offset=28)], lineno=1997, col_offset=15), [Assign([Name('path', Store(), lineno=1997, col_offset=37)], Subscript(Name('path', Load(), lineno=1997, col_offset=44), Slice(None, Num(-5, lineno=1997, col_offset=51), None), Load(), lineno=1997, col_offset=44), lineno=1997, col_offset=37)], [], lineno=1997, col_offset=12), If(Compare(Subscript(Name('path', Load(), lineno=1998, col_offset=15), Slice(None, Num(1, lineno=1998, col_offset=21), None), Load(), lineno=1998, col_offset=15), [Eq()], [Str('/', lineno=1998, col_offset=27)], lineno=1998, col_offset=15), [Assign([Name('path', Store(), lineno=1998, col_offset=32)], Subscript(Name('path', Load(), lineno=1998, col_offset=39), Slice(Num(1, lineno=1998, col_offset=44), None, None), Load(), lineno=1998, col_offset=39), lineno=1998, col_offset=32)], [], lineno=1998, col_offset=12), If(BoolOp(And(), [Name('path', Load(), lineno=1999, col_offset=15), Compare(Name('path', Load(), lineno=1999, col_offset=24), [NotEq()], [Str('.', lineno=1999, col_offset=32)], lineno=1999, col_offset=24)], lineno=1999, col_offset=15), [TryExcept([Assign([Name('obj', Store(), lineno=2001, col_offset=20)], Call(Name('locate', Load(), lineno=2001, col_offset=26), [Name('path', Load(), lineno=2001, col_offset=33)], [keyword('forceload', Num(1, lineno=2001, col_offset=49))], None, None, lineno=2001, col_offset=26), lineno=2001, col_offset=20)], [ExceptHandler(Name('ErrorDuringImport', Load(), lineno=2002, col_offset=23), Name('value', Store(), lineno=2002, col_offset=42), [Expr(Call(Attribute(Name('self', Load(), lineno=2003, col_offset=20), 'send_document', Load(), lineno=2003, col_offset=20), [Name('path', Load(), lineno=2003, col_offset=39), Call(Attribute(Name('html', Load(), lineno=2003, col_offset=45), 'escape', Load(), lineno=2003, col_offset=45), [Call(Name('str', Load(), lineno=2003, col_offset=57), [Name('value', Load(), lineno=2003, col_offset=61)], [], None, None, lineno=2003, col_offset=57)], [], None, None, lineno=2003, col_offset=45)], [], None, None, lineno=2003, col_offset=20), lineno=2003, col_offset=20), Return(None, lineno=2004, col_offset=20)], lineno=2002, col_offset=16)], [], lineno=2000, col_offset=16), If(Name('obj', Load(), lineno=2005, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=2006, col_offset=20), 'send_document', Load(), lineno=2006, col_offset=20), [Call(Name('describe', Load(), lineno=2006, col_offset=39), [Name('obj', Load(), lineno=2006, col_offset=48)], [], None, None, lineno=2006, col_offset=39), Call(Attribute(Name('html', Load(), lineno=2006, col_offset=54), 'document', Load(), lineno=2006, col_offset=54), [Name('obj', Load(), lineno=2006, col_offset=68), Name('path', Load(), lineno=2006, col_offset=73)], [], None, None, lineno=2006, col_offset=54)], [], None, None, lineno=2006, col_offset=20), lineno=2006, col_offset=20)], [Expr(Call(Attribute(Name('self', Load(), lineno=2008, col_offset=20), 'send_document', Load(), lineno=2008, col_offset=20), [Name('path', Load(), lineno=2008, col_offset=39), BinOp(Str('no Python documentation found for %s', lineno=2009, col_offset=0), Mod(), Call(Name('repr', Load(), lineno=2009, col_offset=41), [Name('path', Load(), lineno=2009, col_offset=46)], [], None, None, lineno=2009, col_offset=41), lineno=2009, col_offset=0)], [], None, None, lineno=2008, col_offset=20), lineno=2008, col_offset=20)], lineno=2005, col_offset=16)], [Assign([Name('heading', Store(), lineno=2011, col_offset=16)], Call(Attribute(Name('html', Load(), lineno=2011, col_offset=26), 'heading', Load(), lineno=2011, col_offset=26), [Str('<big><big><strong>Python: Index of Modules</strong></big></big>', lineno=2012, col_offset=0), Str('#ffffff', lineno=2013, col_offset=0), Str('#7799ee', lineno=2013, col_offset=11)], [], None, None, lineno=2011, col_offset=26), lineno=2011, col_offset=16), FunctionDef('bltinlink', arguments([Name('name', Param(), lineno=2014, col_offset=30)], None, None, []), [Return(BinOp(Str('<a href="%s.html">%s</a>', lineno=2015, col_offset=27), Mod(), Tuple([Name('name', Load(), lineno=2015, col_offset=57), Name('name', Load(), lineno=2015, col_offset=63)], Load(), lineno=2015, col_offset=57), lineno=2015, col_offset=27), lineno=2015, col_offset=20)], [], lineno=2014, col_offset=16), Assign([Name('names', Store(), lineno=2016, col_offset=16)], Call(Name('filter', Load(), lineno=2016, col_offset=24), [Lambda(arguments([Name('x', Param(), lineno=2016, col_offset=38)], None, None, []), Compare(Name('x', Load(), lineno=2016, col_offset=41), [NotEq()], [Str('__main__', lineno=2016, col_offset=46)], lineno=2016, col_offset=41), lineno=2016, col_offset=31), Attribute(Name('sys', Load(), lineno=2017, col_offset=31), 'builtin_module_names', Load(), lineno=2017, col_offset=31)], [], None, None, lineno=2016, col_offset=24), lineno=2016, col_offset=16), Assign([Name('contents', Store(), lineno=2018, col_offset=16)], Call(Attribute(Name('html', Load(), lineno=2018, col_offset=27), 'multicolumn', Load(), lineno=2018, col_offset=27), [Name('names', Load(), lineno=2018, col_offset=44), Name('bltinlink', Load(), lineno=2018, col_offset=51)], [], None, None, lineno=2018, col_offset=27), lineno=2018, col_offset=16), Assign([Name('indices', Store(), lineno=2019, col_offset=16)], List([BinOp(Str('<p>', lineno=2019, col_offset=27), Add(), Call(Attribute(Name('html', Load(), lineno=2019, col_offset=35), 'bigsection', Load(), lineno=2019, col_offset=35), [Str('Built-in Modules', lineno=2020, col_offset=20), Str('#ffffff', lineno=2020, col_offset=40), Str('#ee77aa', lineno=2020, col_offset=51), Name('contents', Load(), lineno=2020, col_offset=62)], [], None, None, lineno=2019, col_offset=35), lineno=2019, col_offset=27)], Load(), lineno=2019, col_offset=26), lineno=2019, col_offset=16), Assign([Name('seen', Store(), lineno=2022, col_offset=16)], Dict([], [], lineno=2022, col_offset=23), lineno=2022, col_offset=16), For(Name('dir', Store(), lineno=2023, col_offset=20), Attribute(Name('sys', Load(), lineno=2023, col_offset=27), 'path', Load(), lineno=2023, col_offset=27), [Expr(Call(Attribute(Name('indices', Load(), lineno=2024, col_offset=20), 'append', Load(), lineno=2024, col_offset=20), [Call(Attribute(Name('html', Load(), lineno=2024, col_offset=35), 'index', Load(), lineno=2024, col_offset=35), [Name('dir', Load(), lineno=2024, col_offset=46), Name('seen', Load(), lineno=2024, col_offset=51)], [], None, None, lineno=2024, col_offset=35)], [], None, None, lineno=2024, col_offset=20), lineno=2024, col_offset=20)], [], lineno=2023, col_offset=16), Assign([Name('contents', Store(), lineno=2025, col_offset=16)], BinOp(BinOp(Name('heading', Load(), lineno=2025, col_offset=27), Add(), Call(Name('join', Load(), lineno=2025, col_offset=37), [Name('indices', Load(), lineno=2025, col_offset=42)], [], None, None, lineno=2025, col_offset=37), lineno=2025, col_offset=27), Add(), Str('<p align=right>\n<font color="#909090" face="helvetica, arial"><strong>\npydoc</strong> by Ka-Ping Yee &lt;ping@lfw.org&gt;</font>', lineno=2027, col_offset=-1), lineno=2025, col_offset=51), lineno=2025, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=2028, col_offset=16), 'send_document', Load(), lineno=2028, col_offset=16), [Str('Index of Modules', lineno=2028, col_offset=35), Name('contents', Load(), lineno=2028, col_offset=55)], [], None, None, lineno=2028, col_offset=16), lineno=2028, col_offset=16)], lineno=1999, col_offset=12)], [], lineno=1995, col_offset=8), FunctionDef('log_message', arguments([Name('self', Param(), lineno=2030, col_offset=24)], 'args', None, []), [Pass( lineno=2030, col_offset=38)], [], lineno=2030, col_offset=8)], [], lineno=1986, col_offset=4), ClassDef('DocServer', [Attribute(Name('BaseHTTPServer', Load(), lineno=2032, col_offset=20), 'HTTPServer', Load(), lineno=2032, col_offset=20)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=2033, col_offset=21), Name('port', Param(), lineno=2033, col_offset=27), Name('callback', Param(), lineno=2033, col_offset=33)], None, None, []), [Assign([Name('host', Store(), lineno=2034, col_offset=12)], Str('localhost', lineno=2034, col_offset=19), lineno=2034, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2035, col_offset=12), 'address', Store(), lineno=2035, col_offset=12)], Tuple([Name('host', Load(), lineno=2035, col_offset=28), Name('port', Load(), lineno=2035, col_offset=34)], Load(), lineno=2035, col_offset=28), lineno=2035, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2036, col_offset=12), 'url', Store(), lineno=2036, col_offset=12)], BinOp(Str('http://%s:%d/', lineno=2036, col_offset=23), Mod(), Tuple([Name('host', Load(), lineno=2036, col_offset=42), Name('port', Load(), lineno=2036, col_offset=48)], Load(), lineno=2036, col_offset=42), lineno=2036, col_offset=23), lineno=2036, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2037, col_offset=12), 'callback', Store(), lineno=2037, col_offset=12)], Name('callback', Load(), lineno=2037, col_offset=28), lineno=2037, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2038, col_offset=12), 'base', Load(), lineno=2038, col_offset=12), '__init__', Load(), lineno=2038, col_offset=12), [Name('self', Load(), lineno=2038, col_offset=31), Attribute(Name('self', Load(), lineno=2038, col_offset=37), 'address', Load(), lineno=2038, col_offset=37), Attribute(Name('self', Load(), lineno=2038, col_offset=51), 'handler', Load(), lineno=2038, col_offset=51)], [], None, None, lineno=2038, col_offset=12), lineno=2038, col_offset=12)], [], lineno=2033, col_offset=8), FunctionDef('serve_until_quit', arguments([Name('self', Param(), lineno=2040, col_offset=29)], None, None, []), [Import([alias('select', None)], lineno=2041, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2042, col_offset=12), 'quit', Store(), lineno=2042, col_offset=12)], Name('False', Load(), lineno=2042, col_offset=24), lineno=2042, col_offset=12), While(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=2043, col_offset=22), 'quit', Load(), lineno=2043, col_offset=22), lineno=2043, col_offset=18), [Assign([Tuple([Name('rd', Store(), lineno=2044, col_offset=16), Name('wr', Store(), lineno=2044, col_offset=20), Name('ex', Store(), lineno=2044, col_offset=24)], Store(), lineno=2044, col_offset=16)], Call(Attribute(Name('select', Load(), lineno=2044, col_offset=29), 'select', Load(), lineno=2044, col_offset=29), [List([Call(Attribute(Attribute(Name('self', Load(), lineno=2044, col_offset=44), 'socket', Load(), lineno=2044, col_offset=44), 'fileno', Load(), lineno=2044, col_offset=44), [], [], None, None, lineno=2044, col_offset=44)], Load(), lineno=2044, col_offset=43), List([], Load(), lineno=2044, col_offset=67), List([], Load(), lineno=2044, col_offset=71), Num(1, lineno=2044, col_offset=75)], [], None, None, lineno=2044, col_offset=29), lineno=2044, col_offset=16), If(Name('rd', Load(), lineno=2045, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=2045, col_offset=23), 'handle_request', Load(), lineno=2045, col_offset=23), [], [], None, None, lineno=2045, col_offset=23), lineno=2045, col_offset=23)], [], lineno=2045, col_offset=16)], [], lineno=2043, col_offset=12)], [], lineno=2040, col_offset=8), FunctionDef('server_activate', arguments([Name('self', Param(), lineno=2047, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2048, col_offset=12), 'base', Load(), lineno=2048, col_offset=12), 'server_activate', Load(), lineno=2048, col_offset=12), [Name('self', Load(), lineno=2048, col_offset=38)], [], None, None, lineno=2048, col_offset=12), lineno=2048, col_offset=12), If(Attribute(Name('self', Load(), lineno=2049, col_offset=15), 'callback', Load(), lineno=2049, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=2049, col_offset=30), 'callback', Load(), lineno=2049, col_offset=30), [Name('self', Load(), lineno=2049, col_offset=44)], [], None, None, lineno=2049, col_offset=30), lineno=2049, col_offset=30)], [], lineno=2049, col_offset=12)], [], lineno=2047, col_offset=8)], [], lineno=2032, col_offset=4), Assign([Attribute(Name('DocServer', Load(), lineno=2051, col_offset=4), 'base', Store(), lineno=2051, col_offset=4)], Attribute(Name('BaseHTTPServer', Load(), lineno=2051, col_offset=21), 'HTTPServer', Load(), lineno=2051, col_offset=21), lineno=2051, col_offset=4), Assign([Attribute(Name('DocServer', Load(), lineno=2052, col_offset=4), 'handler', Store(), lineno=2052, col_offset=4)], Name('DocHandler', Load(), lineno=2052, col_offset=24), lineno=2052, col_offset=4), Assign([Attribute(Name('DocHandler', Load(), lineno=2053, col_offset=4), 'MessageClass', Store(), lineno=2053, col_offset=4)], Name('Message', Load(), lineno=2053, col_offset=30), lineno=2053, col_offset=4), TryFinally([TryExcept([Expr(Call(Attribute(Call(Name('DocServer', Load(), lineno=2056, col_offset=12), [Name('port', Load(), lineno=2056, col_offset=22), Name('callback', Load(), lineno=2056, col_offset=28)], [], None, None, lineno=2056, col_offset=12), 'serve_until_quit', Load(), lineno=2056, col_offset=12), [], [], None, None, lineno=2056, col_offset=12), lineno=2056, col_offset=12)], [ExceptHandler(Tuple([Name('KeyboardInterrupt', Load(), lineno=2057, col_offset=16), Attribute(Name('select', Load(), lineno=2057, col_offset=35), 'error', Load(), lineno=2057, col_offset=35)], Load(), lineno=2057, col_offset=16), None, [Pass( lineno=2058, col_offset=12)], lineno=2057, col_offset=8)], [], lineno=2055, col_offset=8)], [If(Name('completer', Load(), lineno=2060, col_offset=11), [Expr(Call(Name('completer', Load(), lineno=2060, col_offset=22), [], [], None, None, lineno=2060, col_offset=22), lineno=2060, col_offset=22)], [], lineno=2060, col_offset=8)], lineno=2054, col_offset=4)], [], lineno=1973, col_offset=0), FunctionDef('gui', arguments([], None, None, []), [Expr(Str('Graphical interface (starts web server and pops up a control window).', lineno=2065, col_offset=4), lineno=2065, col_offset=4), ClassDef('GUI', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=2067, col_offset=21), Name('window', Param(), lineno=2067, col_offset=27), Name('port', Param(), lineno=2067, col_offset=35)], None, None, [Num(7464, lineno=2067, col_offset=40)]), [Assign([Attribute(Name('self', Load(), lineno=2068, col_offset=12), 'window', Store(), lineno=2068, col_offset=12)], Name('window', Load(), lineno=2068, col_offset=26), lineno=2068, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2069, col_offset=12), 'server', Store(), lineno=2069, col_offset=12)], Name('None', Load(), lineno=2069, col_offset=26), lineno=2069, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2070, col_offset=12), 'scanner', Store(), lineno=2070, col_offset=12)], Name('None', Load(), lineno=2070, col_offset=27), lineno=2070, col_offset=12), Import([alias('Tkinter', None)], lineno=2072, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2073, col_offset=12), 'server_frm', Store(), lineno=2073, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2073, col_offset=30), 'Frame', Load(), lineno=2073, col_offset=30), [Name('window', Load(), lineno=2073, col_offset=44)], [], None, None, lineno=2073, col_offset=30), lineno=2073, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2074, col_offset=12), 'title_lbl', Store(), lineno=2074, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2074, col_offset=29), 'Label', Load(), lineno=2074, col_offset=29), [Attribute(Name('self', Load(), lineno=2074, col_offset=43), 'server_frm', Load(), lineno=2074, col_offset=43)], [keyword('text', Str('Starting server...\n ', lineno=2075, col_offset=21))], None, None, lineno=2074, col_offset=29), lineno=2074, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2076, col_offset=12), 'open_btn', Store(), lineno=2076, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2076, col_offset=28), 'Button', Load(), lineno=2076, col_offset=28), [Attribute(Name('self', Load(), lineno=2076, col_offset=43), 'server_frm', Load(), lineno=2076, col_offset=43)], [keyword('text', Str('open browser', lineno=2077, col_offset=21)), keyword('command', Attribute(Name('self', Load(), lineno=2077, col_offset=45), 'open', Load(), lineno=2077, col_offset=45)), keyword('state', Str('disabled', lineno=2077, col_offset=62))], None, None, lineno=2076, col_offset=28), lineno=2076, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2078, col_offset=12), 'quit_btn', Store(), lineno=2078, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2078, col_offset=28), 'Button', Load(), lineno=2078, col_offset=28), [Attribute(Name('self', Load(), lineno=2078, col_offset=43), 'server_frm', Load(), lineno=2078, col_offset=43)], [keyword('text', Str('quit serving', lineno=2079, col_offset=21)), keyword('command', Attribute(Name('self', Load(), lineno=2079, col_offset=45), 'quit', Load(), lineno=2079, col_offset=45)), keyword('state', Str('disabled', lineno=2079, col_offset=62))], None, None, lineno=2078, col_offset=28), lineno=2078, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2081, col_offset=12), 'search_frm', Store(), lineno=2081, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2081, col_offset=30), 'Frame', Load(), lineno=2081, col_offset=30), [Name('window', Load(), lineno=2081, col_offset=44)], [], None, None, lineno=2081, col_offset=30), lineno=2081, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2082, col_offset=12), 'search_lbl', Store(), lineno=2082, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2082, col_offset=30), 'Label', Load(), lineno=2082, col_offset=30), [Attribute(Name('self', Load(), lineno=2082, col_offset=44), 'search_frm', Load(), lineno=2082, col_offset=44)], [keyword('text', Str('Search for', lineno=2082, col_offset=66))], None, None, lineno=2082, col_offset=30), lineno=2082, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2083, col_offset=12), 'search_ent', Store(), lineno=2083, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2083, col_offset=30), 'Entry', Load(), lineno=2083, col_offset=30), [Attribute(Name('self', Load(), lineno=2083, col_offset=44), 'search_frm', Load(), lineno=2083, col_offset=44)], [], None, None, lineno=2083, col_offset=30), lineno=2083, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2084, col_offset=12), 'search_ent', Load(), lineno=2084, col_offset=12), 'bind', Load(), lineno=2084, col_offset=12), [Str('<Return>', lineno=2084, col_offset=33), Attribute(Name('self', Load(), lineno=2084, col_offset=45), 'search', Load(), lineno=2084, col_offset=45)], [], None, None, lineno=2084, col_offset=12), lineno=2084, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2085, col_offset=12), 'stop_btn', Store(), lineno=2085, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2085, col_offset=28), 'Button', Load(), lineno=2085, col_offset=28), [Attribute(Name('self', Load(), lineno=2085, col_offset=43), 'search_frm', Load(), lineno=2085, col_offset=43)], [keyword('text', Str('stop', lineno=2086, col_offset=21)), keyword('pady', Num(0, lineno=2086, col_offset=34)), keyword('command', Attribute(Name('self', Load(), lineno=2086, col_offset=45), 'stop', Load(), lineno=2086, col_offset=45)), keyword('state', Str('disabled', lineno=2086, col_offset=62))], None, None, lineno=2085, col_offset=28), lineno=2085, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=2087, col_offset=15), 'platform', Load(), lineno=2087, col_offset=15), [Eq()], [Str('win32', lineno=2087, col_offset=31)], lineno=2087, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2089, col_offset=16), 'stop_btn', Load(), lineno=2089, col_offset=16), 'pack', Load(), lineno=2089, col_offset=16), [], [keyword('side', Str('right', lineno=2089, col_offset=40))], None, None, lineno=2089, col_offset=16), lineno=2089, col_offset=16)], [], lineno=2087, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2091, col_offset=12), 'window', Load(), lineno=2091, col_offset=12), 'title', Load(), lineno=2091, col_offset=12), [Str('pydoc', lineno=2091, col_offset=30)], [], None, None, lineno=2091, col_offset=12), lineno=2091, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2092, col_offset=12), 'window', Load(), lineno=2092, col_offset=12), 'protocol', Load(), lineno=2092, col_offset=12), [Str('WM_DELETE_WINDOW', lineno=2092, col_offset=33), Attribute(Name('self', Load(), lineno=2092, col_offset=53), 'quit', Load(), lineno=2092, col_offset=53)], [], None, None, lineno=2092, col_offset=12), lineno=2092, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2093, col_offset=12), 'title_lbl', Load(), lineno=2093, col_offset=12), 'pack', Load(), lineno=2093, col_offset=12), [], [keyword('side', Str('top', lineno=2093, col_offset=37)), keyword('fill', Str('x', lineno=2093, col_offset=49))], None, None, lineno=2093, col_offset=12), lineno=2093, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2094, col_offset=12), 'open_btn', Load(), lineno=2094, col_offset=12), 'pack', Load(), lineno=2094, col_offset=12), [], [keyword('side', Str('left', lineno=2094, col_offset=36)), keyword('fill', Str('x', lineno=2094, col_offset=49)), keyword('expand', Num(1, lineno=2094, col_offset=61))], None, None, lineno=2094, col_offset=12), lineno=2094, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2095, col_offset=12), 'quit_btn', Load(), lineno=2095, col_offset=12), 'pack', Load(), lineno=2095, col_offset=12), [], [keyword('side', Str('right', lineno=2095, col_offset=36)), keyword('fill', Str('x', lineno=2095, col_offset=50)), keyword('expand', Num(1, lineno=2095, col_offset=62))], None, None, lineno=2095, col_offset=12), lineno=2095, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2096, col_offset=12), 'server_frm', Load(), lineno=2096, col_offset=12), 'pack', Load(), lineno=2096, col_offset=12), [], [keyword('side', Str('top', lineno=2096, col_offset=38)), keyword('fill', Str('x', lineno=2096, col_offset=50))], None, None, lineno=2096, col_offset=12), lineno=2096, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2098, col_offset=12), 'search_lbl', Load(), lineno=2098, col_offset=12), 'pack', Load(), lineno=2098, col_offset=12), [], [keyword('side', Str('left', lineno=2098, col_offset=38))], None, None, lineno=2098, col_offset=12), lineno=2098, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2099, col_offset=12), 'search_ent', Load(), lineno=2099, col_offset=12), 'pack', Load(), lineno=2099, col_offset=12), [], [keyword('side', Str('right', lineno=2099, col_offset=38)), keyword('fill', Str('x', lineno=2099, col_offset=52)), keyword('expand', Num(1, lineno=2099, col_offset=64))], None, None, lineno=2099, col_offset=12), lineno=2099, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2100, col_offset=12), 'search_frm', Load(), lineno=2100, col_offset=12), 'pack', Load(), lineno=2100, col_offset=12), [], [keyword('side', Str('top', lineno=2100, col_offset=38)), keyword('fill', Str('x', lineno=2100, col_offset=50))], None, None, lineno=2100, col_offset=12), lineno=2100, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2101, col_offset=12), 'search_ent', Load(), lineno=2101, col_offset=12), 'focus_set', Load(), lineno=2101, col_offset=12), [], [], None, None, lineno=2101, col_offset=12), lineno=2101, col_offset=12), Assign([Name('font', Store(), lineno=2103, col_offset=12)], Tuple([Str('helvetica', lineno=2103, col_offset=20), BoolOp(Or(), [BoolOp(And(), [Compare(Attribute(Name('sys', Load(), lineno=2103, col_offset=33), 'platform', Load(), lineno=2103, col_offset=33), [Eq()], [Str('win32', lineno=2103, col_offset=49)], lineno=2103, col_offset=33), Num(8, lineno=2103, col_offset=61)], lineno=2103, col_offset=33), Num(10, lineno=2103, col_offset=66)], lineno=2103, col_offset=33)], Load(), lineno=2103, col_offset=20), lineno=2103, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2104, col_offset=12), 'result_lst', Store(), lineno=2104, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2104, col_offset=30), 'Listbox', Load(), lineno=2104, col_offset=30), [Name('window', Load(), lineno=2104, col_offset=46)], [keyword('font', Name('font', Load(), lineno=2104, col_offset=59)), keyword('height', Num(6, lineno=2104, col_offset=72))], None, None, lineno=2104, col_offset=30), lineno=2104, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2105, col_offset=12), 'result_lst', Load(), lineno=2105, col_offset=12), 'bind', Load(), lineno=2105, col_offset=12), [Str('<Button-1>', lineno=2105, col_offset=33), Attribute(Name('self', Load(), lineno=2105, col_offset=47), 'select', Load(), lineno=2105, col_offset=47)], [], None, None, lineno=2105, col_offset=12), lineno=2105, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2106, col_offset=12), 'result_lst', Load(), lineno=2106, col_offset=12), 'bind', Load(), lineno=2106, col_offset=12), [Str('<Double-Button-1>', lineno=2106, col_offset=33), Attribute(Name('self', Load(), lineno=2106, col_offset=54), 'goto', Load(), lineno=2106, col_offset=54)], [], None, None, lineno=2106, col_offset=12), lineno=2106, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2107, col_offset=12), 'result_scr', Store(), lineno=2107, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2107, col_offset=30), 'Scrollbar', Load(), lineno=2107, col_offset=30), [Name('window', Load(), lineno=2107, col_offset=48)], [keyword('orient', Str('vertical', lineno=2108, col_offset=23)), keyword('command', Attribute(Attribute(Name('self', Load(), lineno=2108, col_offset=43), 'result_lst', Load(), lineno=2108, col_offset=43), 'yview', Load(), lineno=2108, col_offset=43))], None, None, lineno=2107, col_offset=30), lineno=2107, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2109, col_offset=12), 'result_lst', Load(), lineno=2109, col_offset=12), 'config', Load(), lineno=2109, col_offset=12), [], [keyword('yscrollcommand', Attribute(Attribute(Name('self', Load(), lineno=2109, col_offset=50), 'result_scr', Load(), lineno=2109, col_offset=50), 'set', Load(), lineno=2109, col_offset=50))], None, None, lineno=2109, col_offset=12), lineno=2109, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2111, col_offset=12), 'result_frm', Store(), lineno=2111, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2111, col_offset=30), 'Frame', Load(), lineno=2111, col_offset=30), [Name('window', Load(), lineno=2111, col_offset=44)], [], None, None, lineno=2111, col_offset=30), lineno=2111, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2112, col_offset=12), 'goto_btn', Store(), lineno=2112, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2112, col_offset=28), 'Button', Load(), lineno=2112, col_offset=28), [Attribute(Name('self', Load(), lineno=2112, col_offset=43), 'result_frm', Load(), lineno=2112, col_offset=43)], [keyword('text', Str('go to selected', lineno=2113, col_offset=21)), keyword('command', Attribute(Name('self', Load(), lineno=2113, col_offset=47), 'goto', Load(), lineno=2113, col_offset=47))], None, None, lineno=2112, col_offset=28), lineno=2112, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2114, col_offset=12), 'hide_btn', Store(), lineno=2114, col_offset=12)], Call(Attribute(Name('Tkinter', Load(), lineno=2114, col_offset=28), 'Button', Load(), lineno=2114, col_offset=28), [Attribute(Name('self', Load(), lineno=2114, col_offset=43), 'result_frm', Load(), lineno=2114, col_offset=43)], [keyword('text', Str('hide results', lineno=2115, col_offset=21)), keyword('command', Attribute(Name('self', Load(), lineno=2115, col_offset=45), 'hide', Load(), lineno=2115, col_offset=45))], None, None, lineno=2114, col_offset=28), lineno=2114, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2116, col_offset=12), 'goto_btn', Load(), lineno=2116, col_offset=12), 'pack', Load(), lineno=2116, col_offset=12), [], [keyword('side', Str('left', lineno=2116, col_offset=36)), keyword('fill', Str('x', lineno=2116, col_offset=49)), keyword('expand', Num(1, lineno=2116, col_offset=61))], None, None, lineno=2116, col_offset=12), lineno=2116, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2117, col_offset=12), 'hide_btn', Load(), lineno=2117, col_offset=12), 'pack', Load(), lineno=2117, col_offset=12), [], [keyword('side', Str('right', lineno=2117, col_offset=36)), keyword('fill', Str('x', lineno=2117, col_offset=50)), keyword('expand', Num(1, lineno=2117, col_offset=62))], None, None, lineno=2117, col_offset=12), lineno=2117, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2119, col_offset=12), 'window', Load(), lineno=2119, col_offset=12), 'update', Load(), lineno=2119, col_offset=12), [], [], None, None, lineno=2119, col_offset=12), lineno=2119, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2120, col_offset=12), 'minwidth', Store(), lineno=2120, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2120, col_offset=28), 'window', Load(), lineno=2120, col_offset=28), 'winfo_width', Load(), lineno=2120, col_offset=28), [], [], None, None, lineno=2120, col_offset=28), lineno=2120, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2121, col_offset=12), 'minheight', Store(), lineno=2121, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2121, col_offset=29), 'window', Load(), lineno=2121, col_offset=29), 'winfo_height', Load(), lineno=2121, col_offset=29), [], [], None, None, lineno=2121, col_offset=29), lineno=2121, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2122, col_offset=12), 'bigminheight', Store(), lineno=2122, col_offset=12)], BinOp(BinOp(BinOp(Call(Attribute(Attribute(Name('self', Load(), lineno=2122, col_offset=33), 'server_frm', Load(), lineno=2122, col_offset=33), 'winfo_reqheight', Load(), lineno=2122, col_offset=33), [], [], None, None, lineno=2122, col_offset=33), Add(), Call(Attribute(Attribute(Name('self', Load(), lineno=2123, col_offset=33), 'search_frm', Load(), lineno=2123, col_offset=33), 'winfo_reqheight', Load(), lineno=2123, col_offset=33), [], [], None, None, lineno=2123, col_offset=33), lineno=2122, col_offset=33), Add(), Call(Attribute(Attribute(Name('self', Load(), lineno=2124, col_offset=33), 'result_lst', Load(), lineno=2124, col_offset=33), 'winfo_reqheight', Load(), lineno=2124, col_offset=33), [], [], None, None, lineno=2124, col_offset=33), lineno=2123, col_offset=67), Add(), Call(Attribute(Attribute(Name('self', Load(), lineno=2125, col_offset=33), 'result_frm', Load(), lineno=2125, col_offset=33), 'winfo_reqheight', Load(), lineno=2125, col_offset=33), [], [], None, None, lineno=2125, col_offset=33), lineno=2124, col_offset=67), lineno=2122, col_offset=12), Assign([Tuple([Attribute(Name('self', Load(), lineno=2126, col_offset=12), 'bigwidth', Store(), lineno=2126, col_offset=12), Attribute(Name('self', Load(), lineno=2126, col_offset=27), 'bigheight', Store(), lineno=2126, col_offset=27)], Store(), lineno=2126, col_offset=12)], Tuple([Attribute(Name('self', Load(), lineno=2126, col_offset=44), 'minwidth', Load(), lineno=2126, col_offset=44), Attribute(Name('self', Load(), lineno=2126, col_offset=59), 'bigminheight', Load(), lineno=2126, col_offset=59)], Load(), lineno=2126, col_offset=44), lineno=2126, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2127, col_offset=12), 'expanded', Store(), lineno=2127, col_offset=12)], Num(0, lineno=2127, col_offset=28), lineno=2127, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2128, col_offset=12), 'window', Load(), lineno=2128, col_offset=12), 'wm_geometry', Load(), lineno=2128, col_offset=12), [BinOp(Str('%dx%d', lineno=2128, col_offset=36), Mod(), Tuple([Attribute(Name('self', Load(), lineno=2128, col_offset=47), 'minwidth', Load(), lineno=2128, col_offset=47), Attribute(Name('self', Load(), lineno=2128, col_offset=62), 'minheight', Load(), lineno=2128, col_offset=62)], Load(), lineno=2128, col_offset=47), lineno=2128, col_offset=36)], [], None, None, lineno=2128, col_offset=12), lineno=2128, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2129, col_offset=12), 'window', Load(), lineno=2129, col_offset=12), 'wm_minsize', Load(), lineno=2129, col_offset=12), [Attribute(Name('self', Load(), lineno=2129, col_offset=35), 'minwidth', Load(), lineno=2129, col_offset=35), Attribute(Name('self', Load(), lineno=2129, col_offset=50), 'minheight', Load(), lineno=2129, col_offset=50)], [], None, None, lineno=2129, col_offset=12), lineno=2129, col_offset=12), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=2130, col_offset=12), 'window', Load(), lineno=2130, col_offset=12), 'tk', Load(), lineno=2130, col_offset=12), 'willdispatch', Load(), lineno=2130, col_offset=12), [], [], None, None, lineno=2130, col_offset=12), lineno=2130, col_offset=12), Import([alias('threading', None)], lineno=2132, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=2133, col_offset=12), 'Thread', Load(), lineno=2133, col_offset=12), [], [keyword('target', Name('serve', Load(), lineno=2134, col_offset=23)), keyword('args', Tuple([Name('port', Load(), lineno=2134, col_offset=36), Attribute(Name('self', Load(), lineno=2134, col_offset=42), 'ready', Load(), lineno=2134, col_offset=42), Attribute(Name('self', Load(), lineno=2134, col_offset=54), 'quit', Load(), lineno=2134, col_offset=54)], Load(), lineno=2134, col_offset=36))], None, None, lineno=2133, col_offset=12), 'start', Load(), lineno=2133, col_offset=12), [], [], None, None, lineno=2133, col_offset=12), lineno=2133, col_offset=12)], [], lineno=2067, col_offset=8), FunctionDef('ready', arguments([Name('self', Param(), lineno=2136, col_offset=18), Name('server', Param(), lineno=2136, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=2137, col_offset=12), 'server', Store(), lineno=2137, col_offset=12)], Name('server', Load(), lineno=2137, col_offset=26), lineno=2137, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2138, col_offset=12), 'title_lbl', Load(), lineno=2138, col_offset=12), 'config', Load(), lineno=2138, col_offset=12), [], [keyword('text', BinOp(Str('Python documentation server at\n', lineno=2139, col_offset=21), Add(), Attribute(Name('server', Load(), lineno=2139, col_offset=58), 'url', Load(), lineno=2139, col_offset=58), lineno=2139, col_offset=21))], None, None, lineno=2138, col_offset=12), lineno=2138, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2140, col_offset=12), 'open_btn', Load(), lineno=2140, col_offset=12), 'config', Load(), lineno=2140, col_offset=12), [], [keyword('state', Str('normal', lineno=2140, col_offset=39))], None, None, lineno=2140, col_offset=12), lineno=2140, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2141, col_offset=12), 'quit_btn', Load(), lineno=2141, col_offset=12), 'config', Load(), lineno=2141, col_offset=12), [], [keyword('state', Str('normal', lineno=2141, col_offset=39))], None, None, lineno=2141, col_offset=12), lineno=2141, col_offset=12)], [], lineno=2136, col_offset=8), FunctionDef('open', arguments([Name('self', Param(), lineno=2143, col_offset=17), Name('event', Param(), lineno=2143, col_offset=23), Name('url', Param(), lineno=2143, col_offset=35)], None, None, [Name('None', Load(), lineno=2143, col_offset=29), Name('None', Load(), lineno=2143, col_offset=39)]), [Assign([Name('url', Store(), lineno=2144, col_offset=12)], BoolOp(Or(), [Name('url', Load(), lineno=2144, col_offset=18), Attribute(Attribute(Name('self', Load(), lineno=2144, col_offset=25), 'server', Load(), lineno=2144, col_offset=25), 'url', Load(), lineno=2144, col_offset=25)], lineno=2144, col_offset=18), lineno=2144, col_offset=12), TryExcept([Import([alias('webbrowser', None)], lineno=2146, col_offset=16), Expr(Call(Attribute(Name('webbrowser', Load(), lineno=2147, col_offset=16), 'open', Load(), lineno=2147, col_offset=16), [Name('url', Load(), lineno=2147, col_offset=32)], [], None, None, lineno=2147, col_offset=16), lineno=2147, col_offset=16)], [ExceptHandler(Name('ImportError', Load(), lineno=2148, col_offset=19), None, [If(Compare(Attribute(Name('sys', Load(), lineno=2149, col_offset=19), 'platform', Load(), lineno=2149, col_offset=19), [Eq()], [Str('win32', lineno=2149, col_offset=35)], lineno=2149, col_offset=19), [Expr(Call(Attribute(Name('os', Load(), lineno=2150, col_offset=20), 'system', Load(), lineno=2150, col_offset=20), [BinOp(Str('start "%s"', lineno=2150, col_offset=30), Mod(), Name('url', Load(), lineno=2150, col_offset=45), lineno=2150, col_offset=30)], [], None, None, lineno=2150, col_offset=20), lineno=2150, col_offset=20)], [Assign([Name('rc', Store(), lineno=2152, col_offset=20)], Call(Attribute(Name('os', Load(), lineno=2152, col_offset=25), 'system', Load(), lineno=2152, col_offset=25), [BinOp(Str('netscape -remote "openURL(%s)" &', lineno=2152, col_offset=35), Mod(), Name('url', Load(), lineno=2152, col_offset=72), lineno=2152, col_offset=35)], [], None, None, lineno=2152, col_offset=25), lineno=2152, col_offset=20), If(Name('rc', Load(), lineno=2153, col_offset=23), [Expr(Call(Attribute(Name('os', Load(), lineno=2153, col_offset=27), 'system', Load(), lineno=2153, col_offset=27), [BinOp(Str('netscape "%s" &', lineno=2153, col_offset=37), Mod(), Name('url', Load(), lineno=2153, col_offset=57), lineno=2153, col_offset=37)], [], None, None, lineno=2153, col_offset=27), lineno=2153, col_offset=27)], [], lineno=2153, col_offset=20)], lineno=2149, col_offset=16)], lineno=2148, col_offset=12)], [], lineno=2145, col_offset=12)], [], lineno=2143, col_offset=8), FunctionDef('quit', arguments([Name('self', Param(), lineno=2155, col_offset=17), Name('event', Param(), lineno=2155, col_offset=23)], None, None, [Name('None', Load(), lineno=2155, col_offset=29)]), [If(Attribute(Name('self', Load(), lineno=2156, col_offset=15), 'server', Load(), lineno=2156, col_offset=15), [Assign([Attribute(Attribute(Name('self', Load(), lineno=2157, col_offset=16), 'server', Load(), lineno=2157, col_offset=16), 'quit', Store(), lineno=2157, col_offset=16)], Num(1, lineno=2157, col_offset=35), lineno=2157, col_offset=16)], [], lineno=2156, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2158, col_offset=12), 'window', Load(), lineno=2158, col_offset=12), 'quit', Load(), lineno=2158, col_offset=12), [], [], None, None, lineno=2158, col_offset=12), lineno=2158, col_offset=12)], [], lineno=2155, col_offset=8), FunctionDef('search', arguments([Name('self', Param(), lineno=2160, col_offset=19), Name('event', Param(), lineno=2160, col_offset=25)], None, None, [Name('None', Load(), lineno=2160, col_offset=31)]), [Assign([Name('key', Store(), lineno=2161, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2161, col_offset=18), 'search_ent', Load(), lineno=2161, col_offset=18), 'get', Load(), lineno=2161, col_offset=18), [], [], None, None, lineno=2161, col_offset=18), lineno=2161, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2162, col_offset=12), 'stop_btn', Load(), lineno=2162, col_offset=12), 'pack', Load(), lineno=2162, col_offset=12), [], [keyword('side', Str('right', lineno=2162, col_offset=36))], None, None, lineno=2162, col_offset=12), lineno=2162, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2163, col_offset=12), 'stop_btn', Load(), lineno=2163, col_offset=12), 'config', Load(), lineno=2163, col_offset=12), [], [keyword('state', Str('normal', lineno=2163, col_offset=39))], None, None, lineno=2163, col_offset=12), lineno=2163, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2164, col_offset=12), 'search_lbl', Load(), lineno=2164, col_offset=12), 'config', Load(), lineno=2164, col_offset=12), [], [keyword('text', BinOp(Str('Searching for "%s"...', lineno=2164, col_offset=40), Mod(), Name('key', Load(), lineno=2164, col_offset=66), lineno=2164, col_offset=40))], None, None, lineno=2164, col_offset=12), lineno=2164, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2165, col_offset=12), 'search_ent', Load(), lineno=2165, col_offset=12), 'forget', Load(), lineno=2165, col_offset=12), [], [], None, None, lineno=2165, col_offset=12), lineno=2165, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2166, col_offset=12), 'search_lbl', Load(), lineno=2166, col_offset=12), 'pack', Load(), lineno=2166, col_offset=12), [], [keyword('side', Str('left', lineno=2166, col_offset=38))], None, None, lineno=2166, col_offset=12), lineno=2166, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2167, col_offset=12), 'result_lst', Load(), lineno=2167, col_offset=12), 'delete', Load(), lineno=2167, col_offset=12), [Num(0, lineno=2167, col_offset=35), Str('end', lineno=2167, col_offset=38)], [], None, None, lineno=2167, col_offset=12), lineno=2167, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2168, col_offset=12), 'goto_btn', Load(), lineno=2168, col_offset=12), 'config', Load(), lineno=2168, col_offset=12), [], [keyword('state', Str('disabled', lineno=2168, col_offset=39))], None, None, lineno=2168, col_offset=12), lineno=2168, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=2169, col_offset=12), 'expand', Load(), lineno=2169, col_offset=12), [], [], None, None, lineno=2169, col_offset=12), lineno=2169, col_offset=12), Import([alias('threading', None)], lineno=2171, col_offset=12), If(Attribute(Name('self', Load(), lineno=2172, col_offset=15), 'scanner', Load(), lineno=2172, col_offset=15), [Assign([Attribute(Attribute(Name('self', Load(), lineno=2173, col_offset=16), 'scanner', Load(), lineno=2173, col_offset=16), 'quit', Store(), lineno=2173, col_offset=16)], Num(1, lineno=2173, col_offset=36), lineno=2173, col_offset=16)], [], lineno=2172, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2174, col_offset=12), 'scanner', Store(), lineno=2174, col_offset=12)], Call(Name('ModuleScanner', Load(), lineno=2174, col_offset=27), [], [], None, None, lineno=2174, col_offset=27), lineno=2174, col_offset=12), Expr(Call(Attribute(Call(Attribute(Name('threading', Load(), lineno=2175, col_offset=12), 'Thread', Load(), lineno=2175, col_offset=12), [], [keyword('target', Attribute(Attribute(Name('self', Load(), lineno=2175, col_offset=36), 'scanner', Load(), lineno=2175, col_offset=36), 'run', Load(), lineno=2175, col_offset=36)), keyword('args', Tuple([Attribute(Name('self', Load(), lineno=2176, col_offset=35), 'update', Load(), lineno=2176, col_offset=35), Name('key', Load(), lineno=2176, col_offset=48), Attribute(Name('self', Load(), lineno=2176, col_offset=53), 'done', Load(), lineno=2176, col_offset=53)], Load(), lineno=2176, col_offset=35))], None, None, lineno=2175, col_offset=12), 'start', Load(), lineno=2175, col_offset=12), [], [], None, None, lineno=2175, col_offset=12), lineno=2175, col_offset=12)], [], lineno=2160, col_offset=8), FunctionDef('update', arguments([Name('self', Param(), lineno=2178, col_offset=19), Name('path', Param(), lineno=2178, col_offset=25), Name('modname', Param(), lineno=2178, col_offset=31), Name('desc', Param(), lineno=2178, col_offset=40)], None, None, []), [If(Compare(Subscript(Name('modname', Load(), lineno=2179, col_offset=15), Slice(Num(-9, lineno=2179, col_offset=24), None, None), Load(), lineno=2179, col_offset=15), [Eq()], [Str('.__init__', lineno=2179, col_offset=31)], lineno=2179, col_offset=15), [Assign([Name('modname', Store(), lineno=2180, col_offset=16)], BinOp(Subscript(Name('modname', Load(), lineno=2180, col_offset=26), Slice(None, Num(-9, lineno=2180, col_offset=36), None), Load(), lineno=2180, col_offset=26), Add(), Str(' (package)', lineno=2180, col_offset=41), lineno=2180, col_offset=26), lineno=2180, col_offset=16)], [], lineno=2179, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2181, col_offset=12), 'result_lst', Load(), lineno=2181, col_offset=12), 'insert', Load(), lineno=2181, col_offset=12), [Str('end', lineno=2181, col_offset=35), BinOp(BinOp(Name('modname', Load(), lineno=2182, col_offset=16), Add(), Str(' - ', lineno=2182, col_offset=26), lineno=2182, col_offset=16), Add(), BoolOp(Or(), [Name('desc', Load(), lineno=2182, col_offset=35), Str('(no description)', lineno=2182, col_offset=43)], lineno=2182, col_offset=35), lineno=2182, col_offset=32)], [], None, None, lineno=2181, col_offset=12), lineno=2181, col_offset=12)], [], lineno=2178, col_offset=8), FunctionDef('stop', arguments([Name('self', Param(), lineno=2184, col_offset=17), Name('event', Param(), lineno=2184, col_offset=23)], None, None, [Name('None', Load(), lineno=2184, col_offset=29)]), [If(Attribute(Name('self', Load(), lineno=2185, col_offset=15), 'scanner', Load(), lineno=2185, col_offset=15), [Assign([Attribute(Attribute(Name('self', Load(), lineno=2186, col_offset=16), 'scanner', Load(), lineno=2186, col_offset=16), 'quit', Store(), lineno=2186, col_offset=16)], Num(1, lineno=2186, col_offset=36), lineno=2186, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=2187, col_offset=16), 'scanner', Store(), lineno=2187, col_offset=16)], Name('None', Load(), lineno=2187, col_offset=31), lineno=2187, col_offset=16)], [], lineno=2185, col_offset=12)], [], lineno=2184, col_offset=8), FunctionDef('done', arguments([Name('self', Param(), lineno=2189, col_offset=17)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=2190, col_offset=12), 'scanner', Store(), lineno=2190, col_offset=12)], Name('None', Load(), lineno=2190, col_offset=27), lineno=2190, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2191, col_offset=12), 'search_lbl', Load(), lineno=2191, col_offset=12), 'config', Load(), lineno=2191, col_offset=12), [], [keyword('text', Str('Search for', lineno=2191, col_offset=40))], None, None, lineno=2191, col_offset=12), lineno=2191, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2192, col_offset=12), 'search_lbl', Load(), lineno=2192, col_offset=12), 'pack', Load(), lineno=2192, col_offset=12), [], [keyword('side', Str('left', lineno=2192, col_offset=38))], None, None, lineno=2192, col_offset=12), lineno=2192, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2193, col_offset=12), 'search_ent', Load(), lineno=2193, col_offset=12), 'pack', Load(), lineno=2193, col_offset=12), [], [keyword('side', Str('right', lineno=2193, col_offset=38)), keyword('fill', Str('x', lineno=2193, col_offset=52)), keyword('expand', Num(1, lineno=2193, col_offset=64))], None, None, lineno=2193, col_offset=12), lineno=2193, col_offset=12), If(Compare(Attribute(Name('sys', Load(), lineno=2194, col_offset=15), 'platform', Load(), lineno=2194, col_offset=15), [NotEq()], [Str('win32', lineno=2194, col_offset=31)], lineno=2194, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2194, col_offset=40), 'stop_btn', Load(), lineno=2194, col_offset=40), 'forget', Load(), lineno=2194, col_offset=40), [], [], None, None, lineno=2194, col_offset=40), lineno=2194, col_offset=40)], [], lineno=2194, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2195, col_offset=12), 'stop_btn', Load(), lineno=2195, col_offset=12), 'config', Load(), lineno=2195, col_offset=12), [], [keyword('state', Str('disabled', lineno=2195, col_offset=39))], None, None, lineno=2195, col_offset=12), lineno=2195, col_offset=12)], [], lineno=2189, col_offset=8), FunctionDef('select', arguments([Name('self', Param(), lineno=2197, col_offset=19), Name('event', Param(), lineno=2197, col_offset=25)], None, None, [Name('None', Load(), lineno=2197, col_offset=31)]), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2198, col_offset=12), 'goto_btn', Load(), lineno=2198, col_offset=12), 'config', Load(), lineno=2198, col_offset=12), [], [keyword('state', Str('normal', lineno=2198, col_offset=39))], None, None, lineno=2198, col_offset=12), lineno=2198, col_offset=12)], [], lineno=2197, col_offset=8), FunctionDef('goto', arguments([Name('self', Param(), lineno=2200, col_offset=17), Name('event', Param(), lineno=2200, col_offset=23)], None, None, [Name('None', Load(), lineno=2200, col_offset=29)]), [Assign([Name('selection', Store(), lineno=2201, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2201, col_offset=24), 'result_lst', Load(), lineno=2201, col_offset=24), 'curselection', Load(), lineno=2201, col_offset=24), [], [], None, None, lineno=2201, col_offset=24), lineno=2201, col_offset=12), If(Name('selection', Load(), lineno=2202, col_offset=15), [Assign([Name('modname', Store(), lineno=2203, col_offset=16)], Subscript(Call(Name('split', Load(), lineno=2203, col_offset=26), [Call(Attribute(Attribute(Name('self', Load(), lineno=2203, col_offset=32), 'result_lst', Load(), lineno=2203, col_offset=32), 'get', Load(), lineno=2203, col_offset=32), [Subscript(Name('selection', Load(), lineno=2203, col_offset=52), Index(Num(0, lineno=2203, col_offset=62)), Load(), lineno=2203, col_offset=52)], [], None, None, lineno=2203, col_offset=32)], [], None, None, lineno=2203, col_offset=26), Index(Num(0, lineno=2203, col_offset=67)), Load(), lineno=2203, col_offset=26), lineno=2203, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=2204, col_offset=16), 'open', Load(), lineno=2204, col_offset=16), [], [keyword('url', BinOp(BinOp(Attribute(Attribute(Name('self', Load(), lineno=2204, col_offset=30), 'server', Load(), lineno=2204, col_offset=30), 'url', Load(), lineno=2204, col_offset=30), Add(), Name('modname', Load(), lineno=2204, col_offset=48), lineno=2204, col_offset=30), Add(), Str('.html', lineno=2204, col_offset=58), lineno=2204, col_offset=56))], None, None, lineno=2204, col_offset=16), lineno=2204, col_offset=16)], [], lineno=2202, col_offset=12)], [], lineno=2200, col_offset=8), FunctionDef('collapse', arguments([Name('self', Param(), lineno=2206, col_offset=21)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=2207, col_offset=19), 'expanded', Load(), lineno=2207, col_offset=19), lineno=2207, col_offset=15), [Return(None, lineno=2207, col_offset=34)], [], lineno=2207, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2208, col_offset=12), 'result_frm', Load(), lineno=2208, col_offset=12), 'forget', Load(), lineno=2208, col_offset=12), [], [], None, None, lineno=2208, col_offset=12), lineno=2208, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2209, col_offset=12), 'result_scr', Load(), lineno=2209, col_offset=12), 'forget', Load(), lineno=2209, col_offset=12), [], [], None, None, lineno=2209, col_offset=12), lineno=2209, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2210, col_offset=12), 'result_lst', Load(), lineno=2210, col_offset=12), 'forget', Load(), lineno=2210, col_offset=12), [], [], None, None, lineno=2210, col_offset=12), lineno=2210, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2211, col_offset=12), 'bigwidth', Store(), lineno=2211, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2211, col_offset=28), 'window', Load(), lineno=2211, col_offset=28), 'winfo_width', Load(), lineno=2211, col_offset=28), [], [], None, None, lineno=2211, col_offset=28), lineno=2211, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2212, col_offset=12), 'bigheight', Store(), lineno=2212, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=2212, col_offset=29), 'window', Load(), lineno=2212, col_offset=29), 'winfo_height', Load(), lineno=2212, col_offset=29), [], [], None, None, lineno=2212, col_offset=29), lineno=2212, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2213, col_offset=12), 'window', Load(), lineno=2213, col_offset=12), 'wm_geometry', Load(), lineno=2213, col_offset=12), [BinOp(Str('%dx%d', lineno=2213, col_offset=36), Mod(), Tuple([Attribute(Name('self', Load(), lineno=2213, col_offset=47), 'minwidth', Load(), lineno=2213, col_offset=47), Attribute(Name('self', Load(), lineno=2213, col_offset=62), 'minheight', Load(), lineno=2213, col_offset=62)], Load(), lineno=2213, col_offset=47), lineno=2213, col_offset=36)], [], None, None, lineno=2213, col_offset=12), lineno=2213, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2214, col_offset=12), 'window', Load(), lineno=2214, col_offset=12), 'wm_minsize', Load(), lineno=2214, col_offset=12), [Attribute(Name('self', Load(), lineno=2214, col_offset=35), 'minwidth', Load(), lineno=2214, col_offset=35), Attribute(Name('self', Load(), lineno=2214, col_offset=50), 'minheight', Load(), lineno=2214, col_offset=50)], [], None, None, lineno=2214, col_offset=12), lineno=2214, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2215, col_offset=12), 'expanded', Store(), lineno=2215, col_offset=12)], Num(0, lineno=2215, col_offset=28), lineno=2215, col_offset=12)], [], lineno=2206, col_offset=8), FunctionDef('expand', arguments([Name('self', Param(), lineno=2217, col_offset=19)], None, None, []), [If(Attribute(Name('self', Load(), lineno=2218, col_offset=15), 'expanded', Load(), lineno=2218, col_offset=15), [Return(None, lineno=2218, col_offset=30)], [], lineno=2218, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2219, col_offset=12), 'result_frm', Load(), lineno=2219, col_offset=12), 'pack', Load(), lineno=2219, col_offset=12), [], [keyword('side', Str('bottom', lineno=2219, col_offset=38)), keyword('fill', Str('x', lineno=2219, col_offset=53))], None, None, lineno=2219, col_offset=12), lineno=2219, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2220, col_offset=12), 'result_scr', Load(), lineno=2220, col_offset=12), 'pack', Load(), lineno=2220, col_offset=12), [], [keyword('side', Str('right', lineno=2220, col_offset=38)), keyword('fill', Str('y', lineno=2220, col_offset=52))], None, None, lineno=2220, col_offset=12), lineno=2220, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2221, col_offset=12), 'result_lst', Load(), lineno=2221, col_offset=12), 'pack', Load(), lineno=2221, col_offset=12), [], [keyword('side', Str('top', lineno=2221, col_offset=38)), keyword('fill', Str('both', lineno=2221, col_offset=50)), keyword('expand', Num(1, lineno=2221, col_offset=65))], None, None, lineno=2221, col_offset=12), lineno=2221, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2222, col_offset=12), 'window', Load(), lineno=2222, col_offset=12), 'wm_geometry', Load(), lineno=2222, col_offset=12), [BinOp(Str('%dx%d', lineno=2222, col_offset=36), Mod(), Tuple([Attribute(Name('self', Load(), lineno=2222, col_offset=47), 'bigwidth', Load(), lineno=2222, col_offset=47), Attribute(Name('self', Load(), lineno=2222, col_offset=62), 'bigheight', Load(), lineno=2222, col_offset=62)], Load(), lineno=2222, col_offset=47), lineno=2222, col_offset=36)], [], None, None, lineno=2222, col_offset=12), lineno=2222, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=2223, col_offset=12), 'window', Load(), lineno=2223, col_offset=12), 'wm_minsize', Load(), lineno=2223, col_offset=12), [Attribute(Name('self', Load(), lineno=2223, col_offset=35), 'minwidth', Load(), lineno=2223, col_offset=35), Attribute(Name('self', Load(), lineno=2223, col_offset=50), 'bigminheight', Load(), lineno=2223, col_offset=50)], [], None, None, lineno=2223, col_offset=12), lineno=2223, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=2224, col_offset=12), 'expanded', Store(), lineno=2224, col_offset=12)], Num(1, lineno=2224, col_offset=28), lineno=2224, col_offset=12)], [], lineno=2217, col_offset=8), FunctionDef('hide', arguments([Name('self', Param(), lineno=2226, col_offset=17), Name('event', Param(), lineno=2226, col_offset=23)], None, None, [Name('None', Load(), lineno=2226, col_offset=29)]), [Expr(Call(Attribute(Name('self', Load(), lineno=2227, col_offset=12), 'stop', Load(), lineno=2227, col_offset=12), [], [], None, None, lineno=2227, col_offset=12), lineno=2227, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=2228, col_offset=12), 'collapse', Load(), lineno=2228, col_offset=12), [], [], None, None, lineno=2228, col_offset=12), lineno=2228, col_offset=12)], [], lineno=2226, col_offset=8)], [], lineno=2066, col_offset=4), Import([alias('Tkinter', None)], lineno=2230, col_offset=4), TryExcept([Assign([Name('root', Store(), lineno=2232, col_offset=8)], Call(Attribute(Name('Tkinter', Load(), lineno=2232, col_offset=15), 'Tk', Load(), lineno=2232, col_offset=15), [], [], None, None, lineno=2232, col_offset=15), lineno=2232, col_offset=8), TryFinally([Assign([Name('gui', Store(), lineno=2238, col_offset=12)], Call(Name('GUI', Load(), lineno=2238, col_offset=18), [Name('root', Load(), lineno=2238, col_offset=22)], [], None, None, lineno=2238, col_offset=18), lineno=2238, col_offset=12), Expr(Call(Attribute(Name('root', Load(), lineno=2239, col_offset=12), 'mainloop', Load(), lineno=2239, col_offset=12), [], [], None, None, lineno=2239, col_offset=12), lineno=2239, col_offset=12)], [Expr(Call(Attribute(Name('root', Load(), lineno=2241, col_offset=12), 'destroy', Load(), lineno=2241, col_offset=12), [], [], None, None, lineno=2241, col_offset=12), lineno=2241, col_offset=12)], lineno=2237, col_offset=8)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=2242, col_offset=11), None, [Pass( lineno=2243, col_offset=8)], lineno=2242, col_offset=4)], [], lineno=2231, col_offset=4)], [], lineno=2064, col_offset=0), FunctionDef('ispath', arguments([Name('x', Param(), lineno=2247, col_offset=11)], None, None, []), [Return(BoolOp(And(), [Call(Name('isinstance', Load(), lineno=2248, col_offset=11), [Name('x', Load(), lineno=2248, col_offset=22), Name('str', Load(), lineno=2248, col_offset=25)], [], None, None, lineno=2248, col_offset=11), Compare(Call(Name('find', Load(), lineno=2248, col_offset=34), [Name('x', Load(), lineno=2248, col_offset=39), Attribute(Name('os', Load(), lineno=2248, col_offset=42), 'sep', Load(), lineno=2248, col_offset=42)], [], None, None, lineno=2248, col_offset=34), [GtE()], [Num(0, lineno=2248, col_offset=53)], lineno=2248, col_offset=34)], lineno=2248, col_offset=11), lineno=2248, col_offset=4)], [], lineno=2247, col_offset=0), FunctionDef('cli', arguments([], None, None, []), [Expr(Str('Command-line interface (looks at sys.argv to decide what to do).', lineno=2251, col_offset=4), lineno=2251, col_offset=4), Import([alias('getopt', None)], lineno=2252, col_offset=4), ClassDef('BadUsage', [], [Pass( lineno=2253, col_offset=20)], [], lineno=2253, col_offset=4), If(Compare(Str('', lineno=2257, col_offset=7), [NotIn()], [Attribute(Name('sys', Load(), lineno=2257, col_offset=17), 'path', Load(), lineno=2257, col_offset=17)], lineno=2257, col_offset=7), [Assign([Name('scriptdir', Store(), lineno=2258, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=2258, col_offset=20), 'path', Load(), lineno=2258, col_offset=20), 'dirname', Load(), lineno=2258, col_offset=20), [Subscript(Attribute(Name('sys', Load(), lineno=2258, col_offset=36), 'argv', Load(), lineno=2258, col_offset=36), Index(Num(0, lineno=2258, col_offset=45)), Load(), lineno=2258, col_offset=36)], [], None, None, lineno=2258, col_offset=20), lineno=2258, col_offset=8), If(Compare(Name('scriptdir', Load(), lineno=2259, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=2259, col_offset=24), 'path', Load(), lineno=2259, col_offset=24)], lineno=2259, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=2260, col_offset=12), 'path', Load(), lineno=2260, col_offset=12), 'remove', Load(), lineno=2260, col_offset=12), [Name('scriptdir', Load(), lineno=2260, col_offset=28)], [], None, None, lineno=2260, col_offset=12), lineno=2260, col_offset=12)], [], lineno=2259, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=2261, col_offset=8), 'path', Load(), lineno=2261, col_offset=8), 'insert', Load(), lineno=2261, col_offset=8), [Num(0, lineno=2261, col_offset=24), Str('.', lineno=2261, col_offset=27)], [], None, None, lineno=2261, col_offset=8), lineno=2261, col_offset=8)], [], lineno=2257, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=2264, col_offset=8), Name('args', Store(), lineno=2264, col_offset=14)], Store(), lineno=2264, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=2264, col_offset=21), 'getopt', Load(), lineno=2264, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=2264, col_offset=35), 'argv', Load(), lineno=2264, col_offset=35), Slice(Num(1, lineno=2264, col_offset=44), None, None), Load(), lineno=2264, col_offset=35), Str('gk:p:w', lineno=2264, col_offset=49)], [], None, None, lineno=2264, col_offset=21), lineno=2264, col_offset=8), Assign([Name('writing', Store(), lineno=2265, col_offset=8)], Num(0, lineno=2265, col_offset=18), lineno=2265, col_offset=8), For(Tuple([Name('opt', Store(), lineno=2267, col_offset=12), Name('val', Store(), lineno=2267, col_offset=17)], Store(), lineno=2267, col_offset=12), Name('opts', Load(), lineno=2267, col_offset=24), [If(Compare(Name('opt', Load(), lineno=2268, col_offset=15), [Eq()], [Str('-g', lineno=2268, col_offset=22)], lineno=2268, col_offset=15), [Expr(Call(Name('gui', Load(), lineno=2269, col_offset=16), [], [], None, None, lineno=2269, col_offset=16), lineno=2269, col_offset=16), Return(None, lineno=2270, col_offset=16)], [], lineno=2268, col_offset=12), If(Compare(Name('opt', Load(), lineno=2271, col_offset=15), [Eq()], [Str('-k', lineno=2271, col_offset=22)], lineno=2271, col_offset=15), [Expr(Call(Name('apropos', Load(), lineno=2272, col_offset=16), [Name('val', Load(), lineno=2272, col_offset=24)], [], None, None, lineno=2272, col_offset=16), lineno=2272, col_offset=16), Return(None, lineno=2273, col_offset=16)], [], lineno=2271, col_offset=12), If(Compare(Name('opt', Load(), lineno=2274, col_offset=15), [Eq()], [Str('-p', lineno=2274, col_offset=22)], lineno=2274, col_offset=15), [TryExcept([Assign([Name('port', Store(), lineno=2276, col_offset=20)], Call(Name('int', Load(), lineno=2276, col_offset=27), [Name('val', Load(), lineno=2276, col_offset=31)], [], None, None, lineno=2276, col_offset=27), lineno=2276, col_offset=20)], [ExceptHandler(Name('ValueError', Load(), lineno=2277, col_offset=23), None, [Raise(Name('BadUsage', Load(), lineno=2278, col_offset=26), None, None, lineno=2278, col_offset=20)], lineno=2277, col_offset=16)], [], lineno=2275, col_offset=16), FunctionDef('ready', arguments([Name('server', Param(), lineno=2279, col_offset=26)], None, None, []), [Print(None, [BinOp(Str('pydoc server ready at %s', lineno=2280, col_offset=26), Mod(), Attribute(Name('server', Load(), lineno=2280, col_offset=55), 'url', Load(), lineno=2280, col_offset=55), lineno=2280, col_offset=26)], True, lineno=2280, col_offset=20)], [], lineno=2279, col_offset=16), FunctionDef('stopped', arguments([], None, None, []), [Print(None, [Str('pydoc server stopped', lineno=2282, col_offset=26)], True, lineno=2282, col_offset=20)], [], lineno=2281, col_offset=16), Expr(Call(Name('serve', Load(), lineno=2283, col_offset=16), [Name('port', Load(), lineno=2283, col_offset=22), Name('ready', Load(), lineno=2283, col_offset=28), Name('stopped', Load(), lineno=2283, col_offset=35)], [], None, None, lineno=2283, col_offset=16), lineno=2283, col_offset=16), Return(None, lineno=2284, col_offset=16)], [], lineno=2274, col_offset=12), If(Compare(Name('opt', Load(), lineno=2285, col_offset=15), [Eq()], [Str('-w', lineno=2285, col_offset=22)], lineno=2285, col_offset=15), [Assign([Name('writing', Store(), lineno=2286, col_offset=16)], Num(1, lineno=2286, col_offset=26), lineno=2286, col_offset=16)], [], lineno=2285, col_offset=12)], [], lineno=2267, col_offset=8), If(UnaryOp(Not(), Name('args', Load(), lineno=2288, col_offset=15), lineno=2288, col_offset=11), [Raise(Name('BadUsage', Load(), lineno=2288, col_offset=27), None, None, lineno=2288, col_offset=21)], [], lineno=2288, col_offset=8), For(Name('arg', Store(), lineno=2289, col_offset=12), Name('args', Load(), lineno=2289, col_offset=19), [If(BoolOp(And(), [Call(Name('ispath', Load(), lineno=2290, col_offset=15), [Name('arg', Load(), lineno=2290, col_offset=22)], [], None, None, lineno=2290, col_offset=15), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=2290, col_offset=35), 'path', Load(), lineno=2290, col_offset=35), 'exists', Load(), lineno=2290, col_offset=35), [Name('arg', Load(), lineno=2290, col_offset=50)], [], None, None, lineno=2290, col_offset=35), lineno=2290, col_offset=31)], lineno=2290, col_offset=15), [Print(None, [BinOp(Str('file %r does not exist', lineno=2291, col_offset=22), Mod(), Name('arg', Load(), lineno=2291, col_offset=49), lineno=2291, col_offset=22)], True, lineno=2291, col_offset=16), Break( lineno=2292, col_offset=16)], [], lineno=2290, col_offset=12), TryExcept([If(BoolOp(And(), [Call(Name('ispath', Load(), lineno=2294, col_offset=19), [Name('arg', Load(), lineno=2294, col_offset=26)], [], None, None, lineno=2294, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=2294, col_offset=35), 'path', Load(), lineno=2294, col_offset=35), 'isfile', Load(), lineno=2294, col_offset=35), [Name('arg', Load(), lineno=2294, col_offset=50)], [], None, None, lineno=2294, col_offset=35)], lineno=2294, col_offset=19), [Assign([Name('arg', Store(), lineno=2295, col_offset=20)], Call(Name('importfile', Load(), lineno=2295, col_offset=26), [Name('arg', Load(), lineno=2295, col_offset=37)], [], None, None, lineno=2295, col_offset=26), lineno=2295, col_offset=20)], [], lineno=2294, col_offset=16), If(Name('writing', Load(), lineno=2296, col_offset=19), [If(BoolOp(And(), [Call(Name('ispath', Load(), lineno=2297, col_offset=23), [Name('arg', Load(), lineno=2297, col_offset=30)], [], None, None, lineno=2297, col_offset=23), Call(Attribute(Attribute(Name('os', Load(), lineno=2297, col_offset=39), 'path', Load(), lineno=2297, col_offset=39), 'isdir', Load(), lineno=2297, col_offset=39), [Name('arg', Load(), lineno=2297, col_offset=53)], [], None, None, lineno=2297, col_offset=39)], lineno=2297, col_offset=23), [Expr(Call(Name('writedocs', Load(), lineno=2298, col_offset=24), [Name('arg', Load(), lineno=2298, col_offset=34)], [], None, None, lineno=2298, col_offset=24), lineno=2298, col_offset=24)], [Expr(Call(Name('writedoc', Load(), lineno=2300, col_offset=24), [Name('arg', Load(), lineno=2300, col_offset=33)], [], None, None, lineno=2300, col_offset=24), lineno=2300, col_offset=24)], lineno=2297, col_offset=20)], [Expr(Call(Attribute(Name('help', Load(), lineno=2302, col_offset=20), 'help', Load(), lineno=2302, col_offset=20), [Name('arg', Load(), lineno=2302, col_offset=30)], [], None, None, lineno=2302, col_offset=20), lineno=2302, col_offset=20)], lineno=2296, col_offset=16)], [ExceptHandler(Name('ErrorDuringImport', Load(), lineno=2303, col_offset=19), Name('value', Store(), lineno=2303, col_offset=38), [Print(None, [Name('value', Load(), lineno=2304, col_offset=22)], True, lineno=2304, col_offset=16)], lineno=2303, col_offset=12)], [], lineno=2293, col_offset=12)], [], lineno=2289, col_offset=8)], [ExceptHandler(Tuple([Attribute(Name('getopt', Load(), lineno=2306, col_offset=12), 'error', Load(), lineno=2306, col_offset=12), Name('BadUsage', Load(), lineno=2306, col_offset=26)], Load(), lineno=2306, col_offset=12), None, [Assign([Name('cmd', Store(), lineno=2307, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=2307, col_offset=14), 'path', Load(), lineno=2307, col_offset=14), 'basename', Load(), lineno=2307, col_offset=14), [Subscript(Attribute(Name('sys', Load(), lineno=2307, col_offset=31), 'argv', Load(), lineno=2307, col_offset=31), Index(Num(0, lineno=2307, col_offset=40)), Load(), lineno=2307, col_offset=31)], [], None, None, lineno=2307, col_offset=14), lineno=2307, col_offset=8), Print(None, [BinOp(Str("pydoc - the Python documentation tool\n\n%s <name> ...\n    Show text documentation on something.  <name> may be the name of a\n    Python keyword, topic, function, module, or package, or a dotted\n    reference to a class or function within a module or module in a\n    package.  If <name> contains a '%s', it is used as the path to a\n    Python source file to document. If name is 'keywords', 'topics',\n    or 'modules', a listing of these things is displayed.\n\n%s -k <keyword>\n    Search for a keyword in the synopsis lines of all available modules.\n\n%s -p <port>\n    Start an HTTP server on the given port on the local machine.\n\n%s -g\n    Pop up a graphical interface for finding and serving documentation.\n\n%s -w <name> ...\n    Write out the HTML documentation for a module to a file in the current\n    directory.  If <name> contains a '%s', it is treated as a filename; if\n    it names a directory, documentation is written for all the contents.\n", lineno=2331, col_offset=-1), Mod(), Tuple([Name('cmd', Load(), lineno=2331, col_offset=7), Attribute(Name('os', Load(), lineno=2331, col_offset=12), 'sep', Load(), lineno=2331, col_offset=12), Name('cmd', Load(), lineno=2331, col_offset=20), Name('cmd', Load(), lineno=2331, col_offset=25), Name('cmd', Load(), lineno=2331, col_offset=30), Name('cmd', Load(), lineno=2331, col_offset=35), Attribute(Name('os', Load(), lineno=2331, col_offset=40), 'sep', Load(), lineno=2331, col_offset=40)], Load(), lineno=2331, col_offset=7), lineno=2331, col_offset=-1)], True, lineno=2308, col_offset=8)], lineno=2306, col_offset=4)], [], lineno=2263, col_offset=4)], [], lineno=2250, col_offset=0), If(Compare(Name('__name__', Load(), lineno=2333, col_offset=3), [Eq()], [Str('__main__', lineno=2333, col_offset=15)], lineno=2333, col_offset=3), [Expr(Call(Name('cli', Load(), lineno=2333, col_offset=27), [], [], None, None, lineno=2333, col_offset=27), lineno=2333, col_offset=27)], [], lineno=2333, col_offset=0)])
