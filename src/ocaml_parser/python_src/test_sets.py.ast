Module([Import([alias('unittest', None), alias('operator', None), alias('copy', None), alias('pickle', None), alias('random', None)], lineno=3, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Expr(Call(Attribute(Name('test_support', Load(), lineno=6, col_offset=0), 'import_module', Load(), lineno=6, col_offset=0), [Str('sets', lineno=6, col_offset=27)], [keyword('deprecated', Name('True', Load(), lineno=6, col_offset=46))], None, None, lineno=6, col_offset=0), lineno=6, col_offset=0), ImportFrom('sets', [alias('Set', None), alias('ImmutableSet', None)], 0, lineno=7, col_offset=0), Assign([Name('empty_set', Store(), lineno=9, col_offset=0)], Call(Name('Set', Load(), lineno=9, col_offset=12), [], [], None, None, lineno=9, col_offset=12), lineno=9, col_offset=0), ClassDef('TestBasicOps', [Attribute(Name('unittest', Load(), lineno=13, col_offset=19), 'TestCase', Load(), lineno=13, col_offset=19)], [FunctionDef('test_repr', arguments([Name('self', Param(), lineno=15, col_offset=18)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=16, col_offset=11), 'repr', Load(), lineno=16, col_offset=11), [IsNot()], [Name('None', Load(), lineno=16, col_offset=28)], lineno=16, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=12), 'assertEqual', Load(), lineno=17, col_offset=12), [Call(Name('repr', Load(), lineno=17, col_offset=29), [Attribute(Name('self', Load(), lineno=17, col_offset=34), 'set', Load(), lineno=17, col_offset=34)], [], None, None, lineno=17, col_offset=29), Attribute(Name('self', Load(), lineno=17, col_offset=45), 'repr', Load(), lineno=17, col_offset=45)], [], None, None, lineno=17, col_offset=12), lineno=17, col_offset=12)], [], lineno=16, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('test_length', arguments([Name('self', Param(), lineno=19, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertEqual', Load(), lineno=20, col_offset=8), [Call(Name('len', Load(), lineno=20, col_offset=25), [Attribute(Name('self', Load(), lineno=20, col_offset=29), 'set', Load(), lineno=20, col_offset=29)], [], None, None, lineno=20, col_offset=25), Attribute(Name('self', Load(), lineno=20, col_offset=40), 'length', Load(), lineno=20, col_offset=40)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('test_self_equality', arguments([Name('self', Param(), lineno=22, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'assertEqual', Load(), lineno=23, col_offset=8), [Attribute(Name('self', Load(), lineno=23, col_offset=25), 'set', Load(), lineno=23, col_offset=25), Attribute(Name('self', Load(), lineno=23, col_offset=35), 'set', Load(), lineno=23, col_offset=35)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('test_equivalent_equality', arguments([Name('self', Param(), lineno=25, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Attribute(Name('self', Load(), lineno=26, col_offset=25), 'set', Load(), lineno=26, col_offset=25), Attribute(Name('self', Load(), lineno=26, col_offset=35), 'dup', Load(), lineno=26, col_offset=35)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8)], [], lineno=25, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=28, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=29, col_offset=25), 'set', Load(), lineno=29, col_offset=25), 'copy', Load(), lineno=29, col_offset=25), [], [], None, None, lineno=29, col_offset=25), Attribute(Name('self', Load(), lineno=29, col_offset=42), 'dup', Load(), lineno=29, col_offset=42)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_self_union', arguments([Name('self', Param(), lineno=31, col_offset=24)], None, None, []), [Assign([Name('result', Store(), lineno=32, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=32, col_offset=17), 'set', Load(), lineno=32, col_offset=17), BitOr(), Attribute(Name('self', Load(), lineno=32, col_offset=28), 'set', Load(), lineno=32, col_offset=28), lineno=32, col_offset=17), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [Name('result', Load(), lineno=33, col_offset=25), Attribute(Name('self', Load(), lineno=33, col_offset=33), 'dup', Load(), lineno=33, col_offset=33)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8)], [], lineno=31, col_offset=4), FunctionDef('test_empty_union', arguments([Name('self', Param(), lineno=35, col_offset=25)], None, None, []), [Assign([Name('result', Store(), lineno=36, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=36, col_offset=17), 'set', Load(), lineno=36, col_offset=17), BitOr(), Name('empty_set', Load(), lineno=36, col_offset=28), lineno=36, col_offset=17), lineno=36, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertEqual', Load(), lineno=37, col_offset=8), [Name('result', Load(), lineno=37, col_offset=25), Attribute(Name('self', Load(), lineno=37, col_offset=33), 'dup', Load(), lineno=37, col_offset=33)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8)], [], lineno=35, col_offset=4), FunctionDef('test_union_empty', arguments([Name('self', Param(), lineno=39, col_offset=25)], None, None, []), [Assign([Name('result', Store(), lineno=40, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=40, col_offset=17), BitOr(), Attribute(Name('self', Load(), lineno=40, col_offset=29), 'set', Load(), lineno=40, col_offset=29), lineno=40, col_offset=17), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Name('result', Load(), lineno=41, col_offset=25), Attribute(Name('self', Load(), lineno=41, col_offset=33), 'dup', Load(), lineno=41, col_offset=33)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=39, col_offset=4), FunctionDef('test_self_intersection', arguments([Name('self', Param(), lineno=43, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=44, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=44, col_offset=17), 'set', Load(), lineno=44, col_offset=17), BitAnd(), Attribute(Name('self', Load(), lineno=44, col_offset=28), 'set', Load(), lineno=44, col_offset=28), lineno=44, col_offset=17), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Name('result', Load(), lineno=45, col_offset=25), Attribute(Name('self', Load(), lineno=45, col_offset=33), 'dup', Load(), lineno=45, col_offset=33)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_empty_intersection', arguments([Name('self', Param(), lineno=47, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=48, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=48, col_offset=17), 'set', Load(), lineno=48, col_offset=17), BitAnd(), Name('empty_set', Load(), lineno=48, col_offset=28), lineno=48, col_offset=17), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertEqual', Load(), lineno=49, col_offset=8), [Name('result', Load(), lineno=49, col_offset=25), Name('empty_set', Load(), lineno=49, col_offset=33)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('test_intersection_empty', arguments([Name('self', Param(), lineno=51, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=52, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=52, col_offset=17), BitAnd(), Attribute(Name('self', Load(), lineno=52, col_offset=29), 'set', Load(), lineno=52, col_offset=29), lineno=52, col_offset=17), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Name('result', Load(), lineno=53, col_offset=25), Name('empty_set', Load(), lineno=53, col_offset=33)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=51, col_offset=4), FunctionDef('test_self_symmetric_difference', arguments([Name('self', Param(), lineno=55, col_offset=39)], None, None, []), [Assign([Name('result', Store(), lineno=56, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=56, col_offset=17), 'set', Load(), lineno=56, col_offset=17), BitXor(), Attribute(Name('self', Load(), lineno=56, col_offset=28), 'set', Load(), lineno=56, col_offset=28), lineno=56, col_offset=17), lineno=56, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), 'assertEqual', Load(), lineno=57, col_offset=8), [Name('result', Load(), lineno=57, col_offset=25), Name('empty_set', Load(), lineno=57, col_offset=33)], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('checkempty_symmetric_difference', arguments([Name('self', Param(), lineno=59, col_offset=40)], None, None, []), [Assign([Name('result', Store(), lineno=60, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=60, col_offset=17), 'set', Load(), lineno=60, col_offset=17), BitXor(), Name('empty_set', Load(), lineno=60, col_offset=28), lineno=60, col_offset=17), lineno=60, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertEqual', Load(), lineno=61, col_offset=8), [Name('result', Load(), lineno=61, col_offset=25), Attribute(Name('self', Load(), lineno=61, col_offset=33), 'set', Load(), lineno=61, col_offset=33)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('test_self_difference', arguments([Name('self', Param(), lineno=63, col_offset=29)], None, None, []), [Assign([Name('result', Store(), lineno=64, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=64, col_offset=17), 'set', Load(), lineno=64, col_offset=17), Sub(), Attribute(Name('self', Load(), lineno=64, col_offset=28), 'set', Load(), lineno=64, col_offset=28), lineno=64, col_offset=17), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=65, col_offset=8), 'assertEqual', Load(), lineno=65, col_offset=8), [Name('result', Load(), lineno=65, col_offset=25), Name('empty_set', Load(), lineno=65, col_offset=33)], [], None, None, lineno=65, col_offset=8), lineno=65, col_offset=8)], [], lineno=63, col_offset=4), FunctionDef('test_empty_difference', arguments([Name('self', Param(), lineno=67, col_offset=30)], None, None, []), [Assign([Name('result', Store(), lineno=68, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=68, col_offset=17), 'set', Load(), lineno=68, col_offset=17), Sub(), Name('empty_set', Load(), lineno=68, col_offset=28), lineno=68, col_offset=17), lineno=68, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=8), 'assertEqual', Load(), lineno=69, col_offset=8), [Name('result', Load(), lineno=69, col_offset=25), Attribute(Name('self', Load(), lineno=69, col_offset=33), 'dup', Load(), lineno=69, col_offset=33)], [], None, None, lineno=69, col_offset=8), lineno=69, col_offset=8)], [], lineno=67, col_offset=4), FunctionDef('test_empty_difference_rev', arguments([Name('self', Param(), lineno=71, col_offset=34)], None, None, []), [Assign([Name('result', Store(), lineno=72, col_offset=8)], BinOp(Name('empty_set', Load(), lineno=72, col_offset=17), Sub(), Attribute(Name('self', Load(), lineno=72, col_offset=29), 'set', Load(), lineno=72, col_offset=29), lineno=72, col_offset=17), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertEqual', Load(), lineno=73, col_offset=8), [Name('result', Load(), lineno=73, col_offset=25), Name('empty_set', Load(), lineno=73, col_offset=33)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_iteration', arguments([Name('self', Param(), lineno=75, col_offset=23)], None, None, []), [For(Name('v', Store(), lineno=76, col_offset=12), Attribute(Name('self', Load(), lineno=76, col_offset=17), 'set', Load(), lineno=76, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=12), 'assertIn', Load(), lineno=77, col_offset=12), [Name('v', Load(), lineno=77, col_offset=26), Attribute(Name('self', Load(), lineno=77, col_offset=29), 'values', Load(), lineno=77, col_offset=29)], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=12)], [], lineno=76, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('test_pickling', arguments([Name('self', Param(), lineno=79, col_offset=22)], None, None, []), [Assign([Name('p', Store(), lineno=80, col_offset=8)], Call(Attribute(Name('pickle', Load(), lineno=80, col_offset=12), 'dumps', Load(), lineno=80, col_offset=12), [Attribute(Name('self', Load(), lineno=80, col_offset=25), 'set', Load(), lineno=80, col_offset=25)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=8), Assign([Name('copy', Store(), lineno=81, col_offset=8)], Call(Attribute(Name('pickle', Load(), lineno=81, col_offset=15), 'loads', Load(), lineno=81, col_offset=15), [Name('p', Load(), lineno=81, col_offset=28)], [], None, None, lineno=81, col_offset=15), lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertEqual', Load(), lineno=82, col_offset=8), [Attribute(Name('self', Load(), lineno=82, col_offset=25), 'set', Load(), lineno=82, col_offset=25), Name('copy', Load(), lineno=82, col_offset=35), BinOp(Str('%s != %s', lineno=83, col_offset=25), Mod(), Tuple([Attribute(Name('self', Load(), lineno=83, col_offset=39), 'set', Load(), lineno=83, col_offset=39), Name('copy', Load(), lineno=83, col_offset=49)], Load(), lineno=83, col_offset=39), lineno=83, col_offset=25)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8)], [], lineno=79, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('TestBasicOpsEmpty', [Name('TestBasicOps', Load(), lineno=87, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=88, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=89, col_offset=8), 'case', Store(), lineno=89, col_offset=8)], Str('empty set', lineno=89, col_offset=22), lineno=89, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), 'values', Store(), lineno=90, col_offset=8)], List([], Load(), lineno=90, col_offset=22), lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), 'set', Store(), lineno=91, col_offset=8)], Call(Name('Set', Load(), lineno=91, col_offset=22), [Attribute(Name('self', Load(), lineno=91, col_offset=26), 'values', Load(), lineno=91, col_offset=26)], [], None, None, lineno=91, col_offset=22), lineno=91, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=92, col_offset=8), 'dup', Store(), lineno=92, col_offset=8)], Call(Name('Set', Load(), lineno=92, col_offset=22), [Attribute(Name('self', Load(), lineno=92, col_offset=26), 'values', Load(), lineno=92, col_offset=26)], [], None, None, lineno=92, col_offset=22), lineno=92, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=93, col_offset=8), 'length', Store(), lineno=93, col_offset=8)], Num(0, lineno=93, col_offset=22), lineno=93, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=94, col_offset=8), 'repr', Store(), lineno=94, col_offset=8)], Str('Set([])', lineno=94, col_offset=22), lineno=94, col_offset=8)], [], lineno=88, col_offset=4)], [], lineno=87, col_offset=0), ClassDef('TestBasicOpsSingleton', [Name('TestBasicOps', Load(), lineno=98, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=99, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=100, col_offset=8), 'case', Store(), lineno=100, col_offset=8)], Str('unit set (number)', lineno=100, col_offset=22), lineno=100, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=101, col_offset=8), 'values', Store(), lineno=101, col_offset=8)], List([Num(3, lineno=101, col_offset=23)], Load(), lineno=101, col_offset=22), lineno=101, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=102, col_offset=8), 'set', Store(), lineno=102, col_offset=8)], Call(Name('Set', Load(), lineno=102, col_offset=22), [Attribute(Name('self', Load(), lineno=102, col_offset=26), 'values', Load(), lineno=102, col_offset=26)], [], None, None, lineno=102, col_offset=22), lineno=102, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=103, col_offset=8), 'dup', Store(), lineno=103, col_offset=8)], Call(Name('Set', Load(), lineno=103, col_offset=22), [Attribute(Name('self', Load(), lineno=103, col_offset=26), 'values', Load(), lineno=103, col_offset=26)], [], None, None, lineno=103, col_offset=22), lineno=103, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=104, col_offset=8), 'length', Store(), lineno=104, col_offset=8)], Num(1, lineno=104, col_offset=22), lineno=104, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=105, col_offset=8), 'repr', Store(), lineno=105, col_offset=8)], Str('Set([3])', lineno=105, col_offset=22), lineno=105, col_offset=8)], [], lineno=99, col_offset=4), FunctionDef('test_in', arguments([Name('self', Param(), lineno=107, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertTrue', Load(), lineno=108, col_offset=8), [Compare(Num(3, lineno=108, col_offset=24), [In()], [Attribute(Name('self', Load(), lineno=108, col_offset=29), 'set', Load(), lineno=108, col_offset=29)], lineno=108, col_offset=24)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('test_not_in', arguments([Name('self', Param(), lineno=110, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertTrue', Load(), lineno=111, col_offset=8), [Compare(Num(2, lineno=111, col_offset=24), [NotIn()], [Attribute(Name('self', Load(), lineno=111, col_offset=33), 'set', Load(), lineno=111, col_offset=33)], lineno=111, col_offset=24)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=110, col_offset=4)], [], lineno=98, col_offset=0), ClassDef('TestBasicOpsTuple', [Name('TestBasicOps', Load(), lineno=115, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=116, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=117, col_offset=8), 'case', Store(), lineno=117, col_offset=8)], Str('unit set (tuple)', lineno=117, col_offset=22), lineno=117, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=118, col_offset=8), 'values', Store(), lineno=118, col_offset=8)], List([Tuple([Num(0, lineno=118, col_offset=24), Str('zero', lineno=118, col_offset=27)], Load(), lineno=118, col_offset=24)], Load(), lineno=118, col_offset=22), lineno=118, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=119, col_offset=8), 'set', Store(), lineno=119, col_offset=8)], Call(Name('Set', Load(), lineno=119, col_offset=22), [Attribute(Name('self', Load(), lineno=119, col_offset=26), 'values', Load(), lineno=119, col_offset=26)], [], None, None, lineno=119, col_offset=22), lineno=119, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'dup', Store(), lineno=120, col_offset=8)], Call(Name('Set', Load(), lineno=120, col_offset=22), [Attribute(Name('self', Load(), lineno=120, col_offset=26), 'values', Load(), lineno=120, col_offset=26)], [], None, None, lineno=120, col_offset=22), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=8), 'length', Store(), lineno=121, col_offset=8)], Num(1, lineno=121, col_offset=22), lineno=121, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'repr', Store(), lineno=122, col_offset=8)], Str("Set([(0, 'zero')])", lineno=122, col_offset=22), lineno=122, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('test_in', arguments([Name('self', Param(), lineno=124, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=8), 'assertTrue', Load(), lineno=125, col_offset=8), [Compare(Tuple([Num(0, lineno=125, col_offset=25), Str('zero', lineno=125, col_offset=28)], Load(), lineno=125, col_offset=25), [In()], [Attribute(Name('self', Load(), lineno=125, col_offset=39), 'set', Load(), lineno=125, col_offset=39)], lineno=125, col_offset=24)], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8)], [], lineno=124, col_offset=4), FunctionDef('test_not_in', arguments([Name('self', Param(), lineno=127, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=128, col_offset=8), 'assertTrue', Load(), lineno=128, col_offset=8), [Compare(Num(9, lineno=128, col_offset=24), [NotIn()], [Attribute(Name('self', Load(), lineno=128, col_offset=33), 'set', Load(), lineno=128, col_offset=33)], lineno=128, col_offset=24)], [], None, None, lineno=128, col_offset=8), lineno=128, col_offset=8)], [], lineno=127, col_offset=4)], [], lineno=115, col_offset=0), ClassDef('TestBasicOpsTriple', [Name('TestBasicOps', Load(), lineno=132, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=133, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=134, col_offset=8), 'case', Store(), lineno=134, col_offset=8)], Str('triple set', lineno=134, col_offset=22), lineno=134, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=135, col_offset=8), 'values', Store(), lineno=135, col_offset=8)], List([Num(0, lineno=135, col_offset=23), Str('zero', lineno=135, col_offset=26), Attribute(Name('operator', Load(), lineno=135, col_offset=34), 'add', Load(), lineno=135, col_offset=34)], Load(), lineno=135, col_offset=22), lineno=135, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=136, col_offset=8), 'set', Store(), lineno=136, col_offset=8)], Call(Name('Set', Load(), lineno=136, col_offset=22), [Attribute(Name('self', Load(), lineno=136, col_offset=26), 'values', Load(), lineno=136, col_offset=26)], [], None, None, lineno=136, col_offset=22), lineno=136, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=137, col_offset=8), 'dup', Store(), lineno=137, col_offset=8)], Call(Name('Set', Load(), lineno=137, col_offset=22), [Attribute(Name('self', Load(), lineno=137, col_offset=26), 'values', Load(), lineno=137, col_offset=26)], [], None, None, lineno=137, col_offset=22), lineno=137, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), 'length', Store(), lineno=138, col_offset=8)], Num(3, lineno=138, col_offset=22), lineno=138, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=139, col_offset=8), 'repr', Store(), lineno=139, col_offset=8)], Name('None', Load(), lineno=139, col_offset=22), lineno=139, col_offset=8)], [], lineno=133, col_offset=4)], [], lineno=132, col_offset=0), FunctionDef('baditer', arguments([], None, None, []), [Raise(Name('TypeError', Load(), lineno=144, col_offset=10), None, None, lineno=144, col_offset=4), Expr(Yield(Name('True', Load(), lineno=145, col_offset=10), lineno=145, col_offset=4), lineno=145, col_offset=4)], [], lineno=143, col_offset=0), FunctionDef('gooditer', arguments([], None, None, []), [Expr(Yield(Name('True', Load(), lineno=148, col_offset=10), lineno=148, col_offset=4), lineno=148, col_offset=4)], [], lineno=147, col_offset=0), ClassDef('TestExceptionPropagation', [Attribute(Name('unittest', Load(), lineno=150, col_offset=31), 'TestCase', Load(), lineno=150, col_offset=31)], [Expr(Str('SF 628246:  Set constructor should not trap iterator TypeErrors', lineno=151, col_offset=4), lineno=151, col_offset=4), FunctionDef('test_instanceWithException', arguments([Name('self', Param(), lineno=153, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=8), 'assertRaises', Load(), lineno=154, col_offset=8), [Name('TypeError', Load(), lineno=154, col_offset=26), Name('Set', Load(), lineno=154, col_offset=37), Call(Name('baditer', Load(), lineno=154, col_offset=42), [], [], None, None, lineno=154, col_offset=42)], [], None, None, lineno=154, col_offset=8), lineno=154, col_offset=8)], [], lineno=153, col_offset=4), FunctionDef('test_instancesWithoutException', arguments([Name('self', Param(), lineno=156, col_offset=39)], None, None, []), [Expr(Call(Name('Set', Load(), lineno=158, col_offset=8), [List([Num(1, lineno=158, col_offset=13), Num(2, lineno=158, col_offset=15), Num(3, lineno=158, col_offset=17)], Load(), lineno=158, col_offset=12)], [], None, None, lineno=158, col_offset=8), lineno=158, col_offset=8), Expr(Call(Name('Set', Load(), lineno=159, col_offset=8), [Tuple([Num(1, lineno=159, col_offset=13), Num(2, lineno=159, col_offset=15), Num(3, lineno=159, col_offset=17)], Load(), lineno=159, col_offset=13)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Expr(Call(Name('Set', Load(), lineno=160, col_offset=8), [Dict([Str('one', lineno=160, col_offset=13), Str('two', lineno=160, col_offset=22), Str('three', lineno=160, col_offset=31)], [Num(1, lineno=160, col_offset=19), Num(2, lineno=160, col_offset=28), Num(3, lineno=160, col_offset=39)], lineno=160, col_offset=12)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8), Expr(Call(Name('Set', Load(), lineno=161, col_offset=8), [Call(Name('xrange', Load(), lineno=161, col_offset=12), [Num(3, lineno=161, col_offset=19)], [], None, None, lineno=161, col_offset=12)], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8), Expr(Call(Name('Set', Load(), lineno=162, col_offset=8), [Str('abc', lineno=162, col_offset=12)], [], None, None, lineno=162, col_offset=8), lineno=162, col_offset=8), Expr(Call(Name('Set', Load(), lineno=163, col_offset=8), [Call(Name('gooditer', Load(), lineno=163, col_offset=12), [], [], None, None, lineno=163, col_offset=12)], [], None, None, lineno=163, col_offset=8), lineno=163, col_offset=8)], [], lineno=156, col_offset=4)], [], lineno=150, col_offset=0), ClassDef('TestSetOfSets', [Attribute(Name('unittest', Load(), lineno=167, col_offset=20), 'TestCase', Load(), lineno=167, col_offset=20)], [FunctionDef('test_constructor', arguments([Name('self', Param(), lineno=168, col_offset=25)], None, None, []), [Assign([Name('inner', Store(), lineno=169, col_offset=8)], Call(Name('Set', Load(), lineno=169, col_offset=16), [List([Num(1, lineno=169, col_offset=21)], Load(), lineno=169, col_offset=20)], [], None, None, lineno=169, col_offset=16), lineno=169, col_offset=8), Assign([Name('outer', Store(), lineno=170, col_offset=8)], Call(Name('Set', Load(), lineno=170, col_offset=16), [List([Name('inner', Load(), lineno=170, col_offset=21)], Load(), lineno=170, col_offset=20)], [], None, None, lineno=170, col_offset=16), lineno=170, col_offset=8), Assign([Name('element', Store(), lineno=171, col_offset=8)], Call(Attribute(Name('outer', Load(), lineno=171, col_offset=18), 'pop', Load(), lineno=171, col_offset=18), [], [], None, None, lineno=171, col_offset=18), lineno=171, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=8), 'assertEqual', Load(), lineno=172, col_offset=8), [Call(Name('type', Load(), lineno=172, col_offset=25), [Name('element', Load(), lineno=172, col_offset=30)], [], None, None, lineno=172, col_offset=25), Name('ImmutableSet', Load(), lineno=172, col_offset=40)], [], None, None, lineno=172, col_offset=8), lineno=172, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=173, col_offset=8), 'add', Load(), lineno=173, col_offset=8), [Name('inner', Load(), lineno=173, col_offset=18)], [], None, None, lineno=173, col_offset=8), lineno=173, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=174, col_offset=8), 'remove', Load(), lineno=174, col_offset=8), [Name('inner', Load(), lineno=174, col_offset=21)], [], None, None, lineno=174, col_offset=8), lineno=174, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertEqual', Load(), lineno=175, col_offset=8), [Name('outer', Load(), lineno=175, col_offset=25), Call(Name('Set', Load(), lineno=175, col_offset=32), [], [], None, None, lineno=175, col_offset=32)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), Expr(Call(Attribute(Name('outer', Load(), lineno=176, col_offset=8), 'discard', Load(), lineno=176, col_offset=8), [Name('inner', Load(), lineno=176, col_offset=22)], [], None, None, lineno=176, col_offset=8), lineno=176, col_offset=8)], [], lineno=168, col_offset=4)], [], lineno=167, col_offset=0), ClassDef('TestBinaryOps', [Attribute(Name('unittest', Load(), lineno=180, col_offset=20), 'TestCase', Load(), lineno=180, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=181, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=182, col_offset=8), 'set', Store(), lineno=182, col_offset=8)], Call(Name('Set', Load(), lineno=182, col_offset=19), [Tuple([Num(2, lineno=182, col_offset=24), Num(4, lineno=182, col_offset=27), Num(6, lineno=182, col_offset=30)], Load(), lineno=182, col_offset=24)], [], None, None, lineno=182, col_offset=19), lineno=182, col_offset=8)], [], lineno=181, col_offset=4), FunctionDef('test_eq', arguments([Name('self', Param(), lineno=184, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertEqual', Load(), lineno=185, col_offset=8), [Attribute(Name('self', Load(), lineno=185, col_offset=25), 'set', Load(), lineno=185, col_offset=25), Call(Name('Set', Load(), lineno=185, col_offset=35), [Dict([Num(2, lineno=185, col_offset=40), Num(4, lineno=185, col_offset=44), Num(6, lineno=185, col_offset=48)], [Num(1, lineno=185, col_offset=42), Num(3, lineno=185, col_offset=46), Num(5, lineno=185, col_offset=50)], lineno=185, col_offset=39)], [], None, None, lineno=185, col_offset=35)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8)], [], lineno=184, col_offset=4), FunctionDef('test_union_subset', arguments([Name('self', Param(), lineno=187, col_offset=26)], None, None, []), [Assign([Name('result', Store(), lineno=188, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=188, col_offset=17), 'set', Load(), lineno=188, col_offset=17), BitOr(), Call(Name('Set', Load(), lineno=188, col_offset=28), [List([Num(2, lineno=188, col_offset=33)], Load(), lineno=188, col_offset=32)], [], None, None, lineno=188, col_offset=28), lineno=188, col_offset=17), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [Name('result', Load(), lineno=189, col_offset=25), Call(Name('Set', Load(), lineno=189, col_offset=33), [Tuple([Num(2, lineno=189, col_offset=38), Num(4, lineno=189, col_offset=41), Num(6, lineno=189, col_offset=44)], Load(), lineno=189, col_offset=38)], [], None, None, lineno=189, col_offset=33)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8)], [], lineno=187, col_offset=4), FunctionDef('test_union_superset', arguments([Name('self', Param(), lineno=191, col_offset=28)], None, None, []), [Assign([Name('result', Store(), lineno=192, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=192, col_offset=17), 'set', Load(), lineno=192, col_offset=17), BitOr(), Call(Name('Set', Load(), lineno=192, col_offset=28), [List([Num(2, lineno=192, col_offset=33), Num(4, lineno=192, col_offset=36), Num(6, lineno=192, col_offset=39), Num(8, lineno=192, col_offset=42)], Load(), lineno=192, col_offset=32)], [], None, None, lineno=192, col_offset=28), lineno=192, col_offset=17), lineno=192, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=193, col_offset=8), 'assertEqual', Load(), lineno=193, col_offset=8), [Name('result', Load(), lineno=193, col_offset=25), Call(Name('Set', Load(), lineno=193, col_offset=33), [List([Num(2, lineno=193, col_offset=38), Num(4, lineno=193, col_offset=41), Num(6, lineno=193, col_offset=44), Num(8, lineno=193, col_offset=47)], Load(), lineno=193, col_offset=37)], [], None, None, lineno=193, col_offset=33)], [], None, None, lineno=193, col_offset=8), lineno=193, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_union_overlap', arguments([Name('self', Param(), lineno=195, col_offset=27)], None, None, []), [Assign([Name('result', Store(), lineno=196, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=196, col_offset=17), 'set', Load(), lineno=196, col_offset=17), BitOr(), Call(Name('Set', Load(), lineno=196, col_offset=28), [List([Num(3, lineno=196, col_offset=33), Num(4, lineno=196, col_offset=36), Num(5, lineno=196, col_offset=39)], Load(), lineno=196, col_offset=32)], [], None, None, lineno=196, col_offset=28), lineno=196, col_offset=17), lineno=196, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=197, col_offset=8), 'assertEqual', Load(), lineno=197, col_offset=8), [Name('result', Load(), lineno=197, col_offset=25), Call(Name('Set', Load(), lineno=197, col_offset=33), [List([Num(2, lineno=197, col_offset=38), Num(3, lineno=197, col_offset=41), Num(4, lineno=197, col_offset=44), Num(5, lineno=197, col_offset=47), Num(6, lineno=197, col_offset=50)], Load(), lineno=197, col_offset=37)], [], None, None, lineno=197, col_offset=33)], [], None, None, lineno=197, col_offset=8), lineno=197, col_offset=8)], [], lineno=195, col_offset=4), FunctionDef('test_union_non_overlap', arguments([Name('self', Param(), lineno=199, col_offset=31)], None, None, []), [Assign([Name('result', Store(), lineno=200, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=200, col_offset=17), 'set', Load(), lineno=200, col_offset=17), BitOr(), Call(Name('Set', Load(), lineno=200, col_offset=28), [List([Num(8, lineno=200, col_offset=33)], Load(), lineno=200, col_offset=32)], [], None, None, lineno=200, col_offset=28), lineno=200, col_offset=17), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), 'assertEqual', Load(), lineno=201, col_offset=8), [Name('result', Load(), lineno=201, col_offset=25), Call(Name('Set', Load(), lineno=201, col_offset=33), [List([Num(2, lineno=201, col_offset=38), Num(4, lineno=201, col_offset=41), Num(6, lineno=201, col_offset=44), Num(8, lineno=201, col_offset=47)], Load(), lineno=201, col_offset=37)], [], None, None, lineno=201, col_offset=33)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8)], [], lineno=199, col_offset=4), FunctionDef('test_intersection_subset', arguments([Name('self', Param(), lineno=203, col_offset=33)], None, None, []), [Assign([Name('result', Store(), lineno=204, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=204, col_offset=17), 'set', Load(), lineno=204, col_offset=17), BitAnd(), Call(Name('Set', Load(), lineno=204, col_offset=28), [Tuple([Num(2, lineno=204, col_offset=33), Num(4, lineno=204, col_offset=36)], Load(), lineno=204, col_offset=33)], [], None, None, lineno=204, col_offset=28), lineno=204, col_offset=17), lineno=204, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertEqual', Load(), lineno=205, col_offset=8), [Name('result', Load(), lineno=205, col_offset=25), Call(Name('Set', Load(), lineno=205, col_offset=33), [Tuple([Num(2, lineno=205, col_offset=38), Num(4, lineno=205, col_offset=41)], Load(), lineno=205, col_offset=38)], [], None, None, lineno=205, col_offset=33)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=203, col_offset=4), FunctionDef('test_intersection_superset', arguments([Name('self', Param(), lineno=207, col_offset=35)], None, None, []), [Assign([Name('result', Store(), lineno=208, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=208, col_offset=17), 'set', Load(), lineno=208, col_offset=17), BitAnd(), Call(Name('Set', Load(), lineno=208, col_offset=28), [List([Num(2, lineno=208, col_offset=33), Num(4, lineno=208, col_offset=36), Num(6, lineno=208, col_offset=39), Num(8, lineno=208, col_offset=42)], Load(), lineno=208, col_offset=32)], [], None, None, lineno=208, col_offset=28), lineno=208, col_offset=17), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'assertEqual', Load(), lineno=209, col_offset=8), [Name('result', Load(), lineno=209, col_offset=25), Call(Name('Set', Load(), lineno=209, col_offset=33), [List([Num(2, lineno=209, col_offset=38), Num(4, lineno=209, col_offset=41), Num(6, lineno=209, col_offset=44)], Load(), lineno=209, col_offset=37)], [], None, None, lineno=209, col_offset=33)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('test_intersection_overlap', arguments([Name('self', Param(), lineno=211, col_offset=34)], None, None, []), [Assign([Name('result', Store(), lineno=212, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=212, col_offset=17), 'set', Load(), lineno=212, col_offset=17), BitAnd(), Call(Name('Set', Load(), lineno=212, col_offset=28), [List([Num(3, lineno=212, col_offset=33), Num(4, lineno=212, col_offset=36), Num(5, lineno=212, col_offset=39)], Load(), lineno=212, col_offset=32)], [], None, None, lineno=212, col_offset=28), lineno=212, col_offset=17), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=8), 'assertEqual', Load(), lineno=213, col_offset=8), [Name('result', Load(), lineno=213, col_offset=25), Call(Name('Set', Load(), lineno=213, col_offset=33), [List([Num(4, lineno=213, col_offset=38)], Load(), lineno=213, col_offset=37)], [], None, None, lineno=213, col_offset=33)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('test_intersection_non_overlap', arguments([Name('self', Param(), lineno=215, col_offset=38)], None, None, []), [Assign([Name('result', Store(), lineno=216, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=216, col_offset=17), 'set', Load(), lineno=216, col_offset=17), BitAnd(), Call(Name('Set', Load(), lineno=216, col_offset=28), [List([Num(8, lineno=216, col_offset=33)], Load(), lineno=216, col_offset=32)], [], None, None, lineno=216, col_offset=28), lineno=216, col_offset=17), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertEqual', Load(), lineno=217, col_offset=8), [Name('result', Load(), lineno=217, col_offset=25), Name('empty_set', Load(), lineno=217, col_offset=33)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8)], [], lineno=215, col_offset=4), FunctionDef('test_sym_difference_subset', arguments([Name('self', Param(), lineno=219, col_offset=35)], None, None, []), [Assign([Name('result', Store(), lineno=220, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=220, col_offset=17), 'set', Load(), lineno=220, col_offset=17), BitXor(), Call(Name('Set', Load(), lineno=220, col_offset=28), [Tuple([Num(2, lineno=220, col_offset=33), Num(4, lineno=220, col_offset=36)], Load(), lineno=220, col_offset=33)], [], None, None, lineno=220, col_offset=28), lineno=220, col_offset=17), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertEqual', Load(), lineno=221, col_offset=8), [Name('result', Load(), lineno=221, col_offset=25), Call(Name('Set', Load(), lineno=221, col_offset=33), [List([Num(6, lineno=221, col_offset=38)], Load(), lineno=221, col_offset=37)], [], None, None, lineno=221, col_offset=33)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('test_sym_difference_superset', arguments([Name('self', Param(), lineno=223, col_offset=37)], None, None, []), [Assign([Name('result', Store(), lineno=224, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=224, col_offset=17), 'set', Load(), lineno=224, col_offset=17), BitXor(), Call(Name('Set', Load(), lineno=224, col_offset=28), [Tuple([Num(2, lineno=224, col_offset=33), Num(4, lineno=224, col_offset=36), Num(6, lineno=224, col_offset=39), Num(8, lineno=224, col_offset=42)], Load(), lineno=224, col_offset=33)], [], None, None, lineno=224, col_offset=28), lineno=224, col_offset=17), lineno=224, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertEqual', Load(), lineno=225, col_offset=8), [Name('result', Load(), lineno=225, col_offset=25), Call(Name('Set', Load(), lineno=225, col_offset=33), [List([Num(8, lineno=225, col_offset=38)], Load(), lineno=225, col_offset=37)], [], None, None, lineno=225, col_offset=33)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('test_sym_difference_overlap', arguments([Name('self', Param(), lineno=227, col_offset=36)], None, None, []), [Assign([Name('result', Store(), lineno=228, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=228, col_offset=17), 'set', Load(), lineno=228, col_offset=17), BitXor(), Call(Name('Set', Load(), lineno=228, col_offset=28), [Tuple([Num(3, lineno=228, col_offset=33), Num(4, lineno=228, col_offset=36), Num(5, lineno=228, col_offset=39)], Load(), lineno=228, col_offset=33)], [], None, None, lineno=228, col_offset=28), lineno=228, col_offset=17), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Name('result', Load(), lineno=229, col_offset=25), Call(Name('Set', Load(), lineno=229, col_offset=33), [List([Num(2, lineno=229, col_offset=38), Num(3, lineno=229, col_offset=41), Num(5, lineno=229, col_offset=44), Num(6, lineno=229, col_offset=47)], Load(), lineno=229, col_offset=37)], [], None, None, lineno=229, col_offset=33)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('test_sym_difference_non_overlap', arguments([Name('self', Param(), lineno=231, col_offset=40)], None, None, []), [Assign([Name('result', Store(), lineno=232, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=232, col_offset=17), 'set', Load(), lineno=232, col_offset=17), BitXor(), Call(Name('Set', Load(), lineno=232, col_offset=28), [List([Num(8, lineno=232, col_offset=33)], Load(), lineno=232, col_offset=32)], [], None, None, lineno=232, col_offset=28), lineno=232, col_offset=17), lineno=232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'assertEqual', Load(), lineno=233, col_offset=8), [Name('result', Load(), lineno=233, col_offset=25), Call(Name('Set', Load(), lineno=233, col_offset=33), [List([Num(2, lineno=233, col_offset=38), Num(4, lineno=233, col_offset=41), Num(6, lineno=233, col_offset=44), Num(8, lineno=233, col_offset=47)], Load(), lineno=233, col_offset=37)], [], None, None, lineno=233, col_offset=33)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('test_cmp', arguments([Name('self', Param(), lineno=235, col_offset=17)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=236, col_offset=8), Name('b', Store(), lineno=236, col_offset=11)], Store(), lineno=236, col_offset=8)], Tuple([Call(Name('Set', Load(), lineno=236, col_offset=15), [Str('a', lineno=236, col_offset=19)], [], None, None, lineno=236, col_offset=15), Call(Name('Set', Load(), lineno=236, col_offset=25), [Str('b', lineno=236, col_offset=29)], [], None, None, lineno=236, col_offset=25)], Load(), lineno=236, col_offset=15), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Name('TypeError', Load(), lineno=237, col_offset=26), Name('cmp', Load(), lineno=237, col_offset=37), Name('a', Load(), lineno=237, col_offset=42), Name('b', Load(), lineno=237, col_offset=45)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertEqual', Load(), lineno=243, col_offset=8), [Call(Name('cmp', Load(), lineno=243, col_offset=25), [Name('a', Load(), lineno=243, col_offset=29), Name('a', Load(), lineno=243, col_offset=32)], [], None, None, lineno=243, col_offset=25), Num(0, lineno=243, col_offset=36)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=8), 'assertRaises', Load(), lineno=245, col_offset=8), [Name('TypeError', Load(), lineno=245, col_offset=26), Name('cmp', Load(), lineno=245, col_offset=37), Name('a', Load(), lineno=245, col_offset=42), Num(12, lineno=245, col_offset=45)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'assertRaises', Load(), lineno=246, col_offset=8), [Name('TypeError', Load(), lineno=246, col_offset=26), Name('cmp', Load(), lineno=246, col_offset=37), Str('abc', lineno=246, col_offset=42), Name('a', Load(), lineno=246, col_offset=49)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('test_inplace_on_self', arguments([Name('self', Param(), lineno=248, col_offset=29)], None, None, []), [Assign([Name('t', Store(), lineno=249, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=249, col_offset=12), 'set', Load(), lineno=249, col_offset=12), 'copy', Load(), lineno=249, col_offset=12), [], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=8), AugAssign(Name('t', Store(), lineno=250, col_offset=8), BitOr(), Name('t', Load(), lineno=250, col_offset=13), lineno=250, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=8), 'assertEqual', Load(), lineno=251, col_offset=8), [Name('t', Load(), lineno=251, col_offset=25), Attribute(Name('self', Load(), lineno=251, col_offset=28), 'set', Load(), lineno=251, col_offset=28)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), AugAssign(Name('t', Store(), lineno=252, col_offset=8), BitAnd(), Name('t', Load(), lineno=252, col_offset=13), lineno=252, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=253, col_offset=8), 'assertEqual', Load(), lineno=253, col_offset=8), [Name('t', Load(), lineno=253, col_offset=25), Attribute(Name('self', Load(), lineno=253, col_offset=28), 'set', Load(), lineno=253, col_offset=28)], [], None, None, lineno=253, col_offset=8), lineno=253, col_offset=8), AugAssign(Name('t', Store(), lineno=254, col_offset=8), Sub(), Name('t', Load(), lineno=254, col_offset=13), lineno=254, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=255, col_offset=8), 'assertEqual', Load(), lineno=255, col_offset=8), [Call(Name('len', Load(), lineno=255, col_offset=25), [Name('t', Load(), lineno=255, col_offset=29)], [], None, None, lineno=255, col_offset=25), Num(0, lineno=255, col_offset=33)], [], None, None, lineno=255, col_offset=8), lineno=255, col_offset=8), Assign([Name('t', Store(), lineno=256, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=256, col_offset=12), 'set', Load(), lineno=256, col_offset=12), 'copy', Load(), lineno=256, col_offset=12), [], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=8), AugAssign(Name('t', Store(), lineno=257, col_offset=8), BitXor(), Name('t', Load(), lineno=257, col_offset=13), lineno=257, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=258, col_offset=8), 'assertEqual', Load(), lineno=258, col_offset=8), [Call(Name('len', Load(), lineno=258, col_offset=25), [Name('t', Load(), lineno=258, col_offset=29)], [], None, None, lineno=258, col_offset=25), Num(0, lineno=258, col_offset=33)], [], None, None, lineno=258, col_offset=8), lineno=258, col_offset=8)], [], lineno=248, col_offset=4)], [], lineno=180, col_offset=0), ClassDef('TestUpdateOps', [Attribute(Name('unittest', Load(), lineno=263, col_offset=20), 'TestCase', Load(), lineno=263, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=264, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=265, col_offset=8), 'set', Store(), lineno=265, col_offset=8)], Call(Name('Set', Load(), lineno=265, col_offset=19), [Tuple([Num(2, lineno=265, col_offset=24), Num(4, lineno=265, col_offset=27), Num(6, lineno=265, col_offset=30)], Load(), lineno=265, col_offset=24)], [], None, None, lineno=265, col_offset=19), lineno=265, col_offset=8)], [], lineno=264, col_offset=4), FunctionDef('test_union_subset', arguments([Name('self', Param(), lineno=267, col_offset=26)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=268, col_offset=8), 'set', Store(), lineno=268, col_offset=8), BitOr(), Call(Name('Set', Load(), lineno=268, col_offset=20), [List([Num(2, lineno=268, col_offset=25)], Load(), lineno=268, col_offset=24)], [], None, None, lineno=268, col_offset=20), lineno=268, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=8), 'assertEqual', Load(), lineno=269, col_offset=8), [Attribute(Name('self', Load(), lineno=269, col_offset=25), 'set', Load(), lineno=269, col_offset=25), Call(Name('Set', Load(), lineno=269, col_offset=35), [Tuple([Num(2, lineno=269, col_offset=40), Num(4, lineno=269, col_offset=43), Num(6, lineno=269, col_offset=46)], Load(), lineno=269, col_offset=40)], [], None, None, lineno=269, col_offset=35)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_union_superset', arguments([Name('self', Param(), lineno=271, col_offset=28)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=272, col_offset=8), 'set', Store(), lineno=272, col_offset=8), BitOr(), Call(Name('Set', Load(), lineno=272, col_offset=20), [List([Num(2, lineno=272, col_offset=25), Num(4, lineno=272, col_offset=28), Num(6, lineno=272, col_offset=31), Num(8, lineno=272, col_offset=34)], Load(), lineno=272, col_offset=24)], [], None, None, lineno=272, col_offset=20), lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertEqual', Load(), lineno=273, col_offset=8), [Attribute(Name('self', Load(), lineno=273, col_offset=25), 'set', Load(), lineno=273, col_offset=25), Call(Name('Set', Load(), lineno=273, col_offset=35), [List([Num(2, lineno=273, col_offset=40), Num(4, lineno=273, col_offset=43), Num(6, lineno=273, col_offset=46), Num(8, lineno=273, col_offset=49)], Load(), lineno=273, col_offset=39)], [], None, None, lineno=273, col_offset=35)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('test_union_overlap', arguments([Name('self', Param(), lineno=275, col_offset=27)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'set', Store(), lineno=276, col_offset=8), BitOr(), Call(Name('Set', Load(), lineno=276, col_offset=20), [List([Num(3, lineno=276, col_offset=25), Num(4, lineno=276, col_offset=28), Num(5, lineno=276, col_offset=31)], Load(), lineno=276, col_offset=24)], [], None, None, lineno=276, col_offset=20), lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertEqual', Load(), lineno=277, col_offset=8), [Attribute(Name('self', Load(), lineno=277, col_offset=25), 'set', Load(), lineno=277, col_offset=25), Call(Name('Set', Load(), lineno=277, col_offset=35), [List([Num(2, lineno=277, col_offset=40), Num(3, lineno=277, col_offset=43), Num(4, lineno=277, col_offset=46), Num(5, lineno=277, col_offset=49), Num(6, lineno=277, col_offset=52)], Load(), lineno=277, col_offset=39)], [], None, None, lineno=277, col_offset=35)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_union_non_overlap', arguments([Name('self', Param(), lineno=279, col_offset=31)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=280, col_offset=8), 'set', Store(), lineno=280, col_offset=8), BitOr(), Call(Name('Set', Load(), lineno=280, col_offset=20), [List([Num(8, lineno=280, col_offset=25)], Load(), lineno=280, col_offset=24)], [], None, None, lineno=280, col_offset=20), lineno=280, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), 'assertEqual', Load(), lineno=281, col_offset=8), [Attribute(Name('self', Load(), lineno=281, col_offset=25), 'set', Load(), lineno=281, col_offset=25), Call(Name('Set', Load(), lineno=281, col_offset=35), [List([Num(2, lineno=281, col_offset=40), Num(4, lineno=281, col_offset=43), Num(6, lineno=281, col_offset=46), Num(8, lineno=281, col_offset=49)], Load(), lineno=281, col_offset=39)], [], None, None, lineno=281, col_offset=35)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('test_union_method_call', arguments([Name('self', Param(), lineno=283, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'set', Load(), lineno=284, col_offset=8), 'union_update', Load(), lineno=284, col_offset=8), [Call(Name('Set', Load(), lineno=284, col_offset=30), [List([Num(3, lineno=284, col_offset=35), Num(4, lineno=284, col_offset=38), Num(5, lineno=284, col_offset=41)], Load(), lineno=284, col_offset=34)], [], None, None, lineno=284, col_offset=30)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertEqual', Load(), lineno=285, col_offset=8), [Attribute(Name('self', Load(), lineno=285, col_offset=25), 'set', Load(), lineno=285, col_offset=25), Call(Name('Set', Load(), lineno=285, col_offset=35), [List([Num(2, lineno=285, col_offset=40), Num(3, lineno=285, col_offset=43), Num(4, lineno=285, col_offset=46), Num(5, lineno=285, col_offset=49), Num(6, lineno=285, col_offset=52)], Load(), lineno=285, col_offset=39)], [], None, None, lineno=285, col_offset=35)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=283, col_offset=4), FunctionDef('test_intersection_subset', arguments([Name('self', Param(), lineno=287, col_offset=33)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=288, col_offset=8), 'set', Store(), lineno=288, col_offset=8), BitAnd(), Call(Name('Set', Load(), lineno=288, col_offset=20), [Tuple([Num(2, lineno=288, col_offset=25), Num(4, lineno=288, col_offset=28)], Load(), lineno=288, col_offset=25)], [], None, None, lineno=288, col_offset=20), lineno=288, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=8), 'assertEqual', Load(), lineno=289, col_offset=8), [Attribute(Name('self', Load(), lineno=289, col_offset=25), 'set', Load(), lineno=289, col_offset=25), Call(Name('Set', Load(), lineno=289, col_offset=35), [Tuple([Num(2, lineno=289, col_offset=40), Num(4, lineno=289, col_offset=43)], Load(), lineno=289, col_offset=40)], [], None, None, lineno=289, col_offset=35)], [], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8)], [], lineno=287, col_offset=4), FunctionDef('test_intersection_superset', arguments([Name('self', Param(), lineno=291, col_offset=35)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'set', Store(), lineno=292, col_offset=8), BitAnd(), Call(Name('Set', Load(), lineno=292, col_offset=20), [List([Num(2, lineno=292, col_offset=25), Num(4, lineno=292, col_offset=28), Num(6, lineno=292, col_offset=31), Num(8, lineno=292, col_offset=34)], Load(), lineno=292, col_offset=24)], [], None, None, lineno=292, col_offset=20), lineno=292, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=8), 'assertEqual', Load(), lineno=293, col_offset=8), [Attribute(Name('self', Load(), lineno=293, col_offset=25), 'set', Load(), lineno=293, col_offset=25), Call(Name('Set', Load(), lineno=293, col_offset=35), [List([Num(2, lineno=293, col_offset=40), Num(4, lineno=293, col_offset=43), Num(6, lineno=293, col_offset=46)], Load(), lineno=293, col_offset=39)], [], None, None, lineno=293, col_offset=35)], [], None, None, lineno=293, col_offset=8), lineno=293, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('test_intersection_overlap', arguments([Name('self', Param(), lineno=295, col_offset=34)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'set', Store(), lineno=296, col_offset=8), BitAnd(), Call(Name('Set', Load(), lineno=296, col_offset=20), [List([Num(3, lineno=296, col_offset=25), Num(4, lineno=296, col_offset=28), Num(5, lineno=296, col_offset=31)], Load(), lineno=296, col_offset=24)], [], None, None, lineno=296, col_offset=20), lineno=296, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=297, col_offset=8), 'assertEqual', Load(), lineno=297, col_offset=8), [Attribute(Name('self', Load(), lineno=297, col_offset=25), 'set', Load(), lineno=297, col_offset=25), Call(Name('Set', Load(), lineno=297, col_offset=35), [List([Num(4, lineno=297, col_offset=40)], Load(), lineno=297, col_offset=39)], [], None, None, lineno=297, col_offset=35)], [], None, None, lineno=297, col_offset=8), lineno=297, col_offset=8)], [], lineno=295, col_offset=4), FunctionDef('test_intersection_non_overlap', arguments([Name('self', Param(), lineno=299, col_offset=38)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'set', Store(), lineno=300, col_offset=8), BitAnd(), Call(Name('Set', Load(), lineno=300, col_offset=20), [List([Num(8, lineno=300, col_offset=25)], Load(), lineno=300, col_offset=24)], [], None, None, lineno=300, col_offset=20), lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'assertEqual', Load(), lineno=301, col_offset=8), [Attribute(Name('self', Load(), lineno=301, col_offset=25), 'set', Load(), lineno=301, col_offset=25), Name('empty_set', Load(), lineno=301, col_offset=35)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('test_intersection_method_call', arguments([Name('self', Param(), lineno=303, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=304, col_offset=8), 'set', Load(), lineno=304, col_offset=8), 'intersection_update', Load(), lineno=304, col_offset=8), [Call(Name('Set', Load(), lineno=304, col_offset=37), [List([Num(3, lineno=304, col_offset=42), Num(4, lineno=304, col_offset=45), Num(5, lineno=304, col_offset=48)], Load(), lineno=304, col_offset=41)], [], None, None, lineno=304, col_offset=37)], [], None, None, lineno=304, col_offset=8), lineno=304, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'assertEqual', Load(), lineno=305, col_offset=8), [Attribute(Name('self', Load(), lineno=305, col_offset=25), 'set', Load(), lineno=305, col_offset=25), Call(Name('Set', Load(), lineno=305, col_offset=35), [List([Num(4, lineno=305, col_offset=40)], Load(), lineno=305, col_offset=39)], [], None, None, lineno=305, col_offset=35)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8)], [], lineno=303, col_offset=4), FunctionDef('test_sym_difference_subset', arguments([Name('self', Param(), lineno=307, col_offset=35)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'set', Store(), lineno=308, col_offset=8), BitXor(), Call(Name('Set', Load(), lineno=308, col_offset=20), [Tuple([Num(2, lineno=308, col_offset=25), Num(4, lineno=308, col_offset=28)], Load(), lineno=308, col_offset=25)], [], None, None, lineno=308, col_offset=20), lineno=308, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=8), 'assertEqual', Load(), lineno=309, col_offset=8), [Attribute(Name('self', Load(), lineno=309, col_offset=25), 'set', Load(), lineno=309, col_offset=25), Call(Name('Set', Load(), lineno=309, col_offset=35), [List([Num(6, lineno=309, col_offset=40)], Load(), lineno=309, col_offset=39)], [], None, None, lineno=309, col_offset=35)], [], None, None, lineno=309, col_offset=8), lineno=309, col_offset=8)], [], lineno=307, col_offset=4), FunctionDef('test_sym_difference_superset', arguments([Name('self', Param(), lineno=311, col_offset=37)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=312, col_offset=8), 'set', Store(), lineno=312, col_offset=8), BitXor(), Call(Name('Set', Load(), lineno=312, col_offset=20), [Tuple([Num(2, lineno=312, col_offset=25), Num(4, lineno=312, col_offset=28), Num(6, lineno=312, col_offset=31), Num(8, lineno=312, col_offset=34)], Load(), lineno=312, col_offset=25)], [], None, None, lineno=312, col_offset=20), lineno=312, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=313, col_offset=8), 'assertEqual', Load(), lineno=313, col_offset=8), [Attribute(Name('self', Load(), lineno=313, col_offset=25), 'set', Load(), lineno=313, col_offset=25), Call(Name('Set', Load(), lineno=313, col_offset=35), [List([Num(8, lineno=313, col_offset=40)], Load(), lineno=313, col_offset=39)], [], None, None, lineno=313, col_offset=35)], [], None, None, lineno=313, col_offset=8), lineno=313, col_offset=8)], [], lineno=311, col_offset=4), FunctionDef('test_sym_difference_overlap', arguments([Name('self', Param(), lineno=315, col_offset=36)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=316, col_offset=8), 'set', Store(), lineno=316, col_offset=8), BitXor(), Call(Name('Set', Load(), lineno=316, col_offset=20), [Tuple([Num(3, lineno=316, col_offset=25), Num(4, lineno=316, col_offset=28), Num(5, lineno=316, col_offset=31)], Load(), lineno=316, col_offset=25)], [], None, None, lineno=316, col_offset=20), lineno=316, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'assertEqual', Load(), lineno=317, col_offset=8), [Attribute(Name('self', Load(), lineno=317, col_offset=25), 'set', Load(), lineno=317, col_offset=25), Call(Name('Set', Load(), lineno=317, col_offset=35), [List([Num(2, lineno=317, col_offset=40), Num(3, lineno=317, col_offset=43), Num(5, lineno=317, col_offset=46), Num(6, lineno=317, col_offset=49)], Load(), lineno=317, col_offset=39)], [], None, None, lineno=317, col_offset=35)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8)], [], lineno=315, col_offset=4), FunctionDef('test_sym_difference_non_overlap', arguments([Name('self', Param(), lineno=319, col_offset=40)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=320, col_offset=8), 'set', Store(), lineno=320, col_offset=8), BitXor(), Call(Name('Set', Load(), lineno=320, col_offset=20), [List([Num(8, lineno=320, col_offset=25)], Load(), lineno=320, col_offset=24)], [], None, None, lineno=320, col_offset=20), lineno=320, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=321, col_offset=8), 'assertEqual', Load(), lineno=321, col_offset=8), [Attribute(Name('self', Load(), lineno=321, col_offset=25), 'set', Load(), lineno=321, col_offset=25), Call(Name('Set', Load(), lineno=321, col_offset=35), [List([Num(2, lineno=321, col_offset=40), Num(4, lineno=321, col_offset=43), Num(6, lineno=321, col_offset=46), Num(8, lineno=321, col_offset=49)], Load(), lineno=321, col_offset=39)], [], None, None, lineno=321, col_offset=35)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8)], [], lineno=319, col_offset=4), FunctionDef('test_sym_difference_method_call', arguments([Name('self', Param(), lineno=323, col_offset=40)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'set', Load(), lineno=324, col_offset=8), 'symmetric_difference_update', Load(), lineno=324, col_offset=8), [Call(Name('Set', Load(), lineno=324, col_offset=45), [List([Num(3, lineno=324, col_offset=50), Num(4, lineno=324, col_offset=53), Num(5, lineno=324, col_offset=56)], Load(), lineno=324, col_offset=49)], [], None, None, lineno=324, col_offset=45)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=325, col_offset=8), 'assertEqual', Load(), lineno=325, col_offset=8), [Attribute(Name('self', Load(), lineno=325, col_offset=25), 'set', Load(), lineno=325, col_offset=25), Call(Name('Set', Load(), lineno=325, col_offset=35), [List([Num(2, lineno=325, col_offset=40), Num(3, lineno=325, col_offset=43), Num(5, lineno=325, col_offset=46), Num(6, lineno=325, col_offset=49)], Load(), lineno=325, col_offset=39)], [], None, None, lineno=325, col_offset=35)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8)], [], lineno=323, col_offset=4), FunctionDef('test_difference_subset', arguments([Name('self', Param(), lineno=327, col_offset=31)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=328, col_offset=8), 'set', Store(), lineno=328, col_offset=8), Sub(), Call(Name('Set', Load(), lineno=328, col_offset=20), [Tuple([Num(2, lineno=328, col_offset=25), Num(4, lineno=328, col_offset=28)], Load(), lineno=328, col_offset=25)], [], None, None, lineno=328, col_offset=20), lineno=328, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=329, col_offset=8), 'assertEqual', Load(), lineno=329, col_offset=8), [Attribute(Name('self', Load(), lineno=329, col_offset=25), 'set', Load(), lineno=329, col_offset=25), Call(Name('Set', Load(), lineno=329, col_offset=35), [List([Num(6, lineno=329, col_offset=40)], Load(), lineno=329, col_offset=39)], [], None, None, lineno=329, col_offset=35)], [], None, None, lineno=329, col_offset=8), lineno=329, col_offset=8)], [], lineno=327, col_offset=4), FunctionDef('test_difference_superset', arguments([Name('self', Param(), lineno=331, col_offset=33)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=332, col_offset=8), 'set', Store(), lineno=332, col_offset=8), Sub(), Call(Name('Set', Load(), lineno=332, col_offset=20), [Tuple([Num(2, lineno=332, col_offset=25), Num(4, lineno=332, col_offset=28), Num(6, lineno=332, col_offset=31), Num(8, lineno=332, col_offset=34)], Load(), lineno=332, col_offset=25)], [], None, None, lineno=332, col_offset=20), lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=8), 'assertEqual', Load(), lineno=333, col_offset=8), [Attribute(Name('self', Load(), lineno=333, col_offset=25), 'set', Load(), lineno=333, col_offset=25), Call(Name('Set', Load(), lineno=333, col_offset=35), [List([], Load(), lineno=333, col_offset=39)], [], None, None, lineno=333, col_offset=35)], [], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8)], [], lineno=331, col_offset=4), FunctionDef('test_difference_overlap', arguments([Name('self', Param(), lineno=335, col_offset=32)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=336, col_offset=8), 'set', Store(), lineno=336, col_offset=8), Sub(), Call(Name('Set', Load(), lineno=336, col_offset=20), [Tuple([Num(3, lineno=336, col_offset=25), Num(4, lineno=336, col_offset=28), Num(5, lineno=336, col_offset=31)], Load(), lineno=336, col_offset=25)], [], None, None, lineno=336, col_offset=20), lineno=336, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertEqual', Load(), lineno=337, col_offset=8), [Attribute(Name('self', Load(), lineno=337, col_offset=25), 'set', Load(), lineno=337, col_offset=25), Call(Name('Set', Load(), lineno=337, col_offset=35), [List([Num(2, lineno=337, col_offset=40), Num(6, lineno=337, col_offset=43)], Load(), lineno=337, col_offset=39)], [], None, None, lineno=337, col_offset=35)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8)], [], lineno=335, col_offset=4), FunctionDef('test_difference_non_overlap', arguments([Name('self', Param(), lineno=339, col_offset=36)], None, None, []), [AugAssign(Attribute(Name('self', Load(), lineno=340, col_offset=8), 'set', Store(), lineno=340, col_offset=8), Sub(), Call(Name('Set', Load(), lineno=340, col_offset=20), [List([Num(8, lineno=340, col_offset=25)], Load(), lineno=340, col_offset=24)], [], None, None, lineno=340, col_offset=20), lineno=340, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=341, col_offset=8), 'assertEqual', Load(), lineno=341, col_offset=8), [Attribute(Name('self', Load(), lineno=341, col_offset=25), 'set', Load(), lineno=341, col_offset=25), Call(Name('Set', Load(), lineno=341, col_offset=35), [List([Num(2, lineno=341, col_offset=40), Num(4, lineno=341, col_offset=43), Num(6, lineno=341, col_offset=46)], Load(), lineno=341, col_offset=39)], [], None, None, lineno=341, col_offset=35)], [], None, None, lineno=341, col_offset=8), lineno=341, col_offset=8)], [], lineno=339, col_offset=4), FunctionDef('test_difference_method_call', arguments([Name('self', Param(), lineno=343, col_offset=36)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=344, col_offset=8), 'set', Load(), lineno=344, col_offset=8), 'difference_update', Load(), lineno=344, col_offset=8), [Call(Name('Set', Load(), lineno=344, col_offset=35), [List([Num(3, lineno=344, col_offset=40), Num(4, lineno=344, col_offset=43), Num(5, lineno=344, col_offset=46)], Load(), lineno=344, col_offset=39)], [], None, None, lineno=344, col_offset=35)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=345, col_offset=8), 'assertEqual', Load(), lineno=345, col_offset=8), [Attribute(Name('self', Load(), lineno=345, col_offset=25), 'set', Load(), lineno=345, col_offset=25), Call(Name('Set', Load(), lineno=345, col_offset=35), [List([Num(2, lineno=345, col_offset=40), Num(6, lineno=345, col_offset=43)], Load(), lineno=345, col_offset=39)], [], None, None, lineno=345, col_offset=35)], [], None, None, lineno=345, col_offset=8), lineno=345, col_offset=8)], [], lineno=343, col_offset=4)], [], lineno=263, col_offset=0), ClassDef('TestMutate', [Attribute(Name('unittest', Load(), lineno=349, col_offset=17), 'TestCase', Load(), lineno=349, col_offset=17)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=350, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=351, col_offset=8), 'values', Store(), lineno=351, col_offset=8)], List([Str('a', lineno=351, col_offset=23), Str('b', lineno=351, col_offset=28), Str('c', lineno=351, col_offset=33)], Load(), lineno=351, col_offset=22), lineno=351, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=352, col_offset=8), 'set', Store(), lineno=352, col_offset=8)], Call(Name('Set', Load(), lineno=352, col_offset=19), [Attribute(Name('self', Load(), lineno=352, col_offset=23), 'values', Load(), lineno=352, col_offset=23)], [], None, None, lineno=352, col_offset=19), lineno=352, col_offset=8)], [], lineno=350, col_offset=4), FunctionDef('test_add_present', arguments([Name('self', Param(), lineno=354, col_offset=25)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'set', Load(), lineno=355, col_offset=8), 'add', Load(), lineno=355, col_offset=8), [Str('c', lineno=355, col_offset=21)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'assertEqual', Load(), lineno=356, col_offset=8), [Attribute(Name('self', Load(), lineno=356, col_offset=25), 'set', Load(), lineno=356, col_offset=25), Call(Name('Set', Load(), lineno=356, col_offset=35), [Str('abc', lineno=356, col_offset=39)], [], None, None, lineno=356, col_offset=35)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8)], [], lineno=354, col_offset=4), FunctionDef('test_add_absent', arguments([Name('self', Param(), lineno=358, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'set', Load(), lineno=359, col_offset=8), 'add', Load(), lineno=359, col_offset=8), [Str('d', lineno=359, col_offset=21)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=8), 'assertEqual', Load(), lineno=360, col_offset=8), [Attribute(Name('self', Load(), lineno=360, col_offset=25), 'set', Load(), lineno=360, col_offset=25), Call(Name('Set', Load(), lineno=360, col_offset=35), [Str('abcd', lineno=360, col_offset=39)], [], None, None, lineno=360, col_offset=35)], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8)], [], lineno=358, col_offset=4), FunctionDef('test_add_until_full', arguments([Name('self', Param(), lineno=362, col_offset=28)], None, None, []), [Assign([Name('tmp', Store(), lineno=363, col_offset=8)], Call(Name('Set', Load(), lineno=363, col_offset=14), [], [], None, None, lineno=363, col_offset=14), lineno=363, col_offset=8), Assign([Name('expected_len', Store(), lineno=364, col_offset=8)], Num(0, lineno=364, col_offset=23), lineno=364, col_offset=8), For(Name('v', Store(), lineno=365, col_offset=12), Attribute(Name('self', Load(), lineno=365, col_offset=17), 'values', Load(), lineno=365, col_offset=17), [Expr(Call(Attribute(Name('tmp', Load(), lineno=366, col_offset=12), 'add', Load(), lineno=366, col_offset=12), [Name('v', Load(), lineno=366, col_offset=20)], [], None, None, lineno=366, col_offset=12), lineno=366, col_offset=12), AugAssign(Name('expected_len', Store(), lineno=367, col_offset=12), Add(), Num(1, lineno=367, col_offset=28), lineno=367, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=12), 'assertEqual', Load(), lineno=368, col_offset=12), [Call(Name('len', Load(), lineno=368, col_offset=29), [Name('tmp', Load(), lineno=368, col_offset=33)], [], None, None, lineno=368, col_offset=29), Name('expected_len', Load(), lineno=368, col_offset=39)], [], None, None, lineno=368, col_offset=12), lineno=368, col_offset=12)], [], lineno=365, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'assertEqual', Load(), lineno=369, col_offset=8), [Name('tmp', Load(), lineno=369, col_offset=25), Attribute(Name('self', Load(), lineno=369, col_offset=30), 'set', Load(), lineno=369, col_offset=30)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8)], [], lineno=362, col_offset=4), FunctionDef('test_remove_present', arguments([Name('self', Param(), lineno=371, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'set', Load(), lineno=372, col_offset=8), 'remove', Load(), lineno=372, col_offset=8), [Str('b', lineno=372, col_offset=24)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=373, col_offset=8), 'assertEqual', Load(), lineno=373, col_offset=8), [Attribute(Name('self', Load(), lineno=373, col_offset=25), 'set', Load(), lineno=373, col_offset=25), Call(Name('Set', Load(), lineno=373, col_offset=35), [Str('ac', lineno=373, col_offset=39)], [], None, None, lineno=373, col_offset=35)], [], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8)], [], lineno=371, col_offset=4), FunctionDef('test_remove_absent', arguments([Name('self', Param(), lineno=375, col_offset=27)], None, None, []), [TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=377, col_offset=12), 'set', Load(), lineno=377, col_offset=12), 'remove', Load(), lineno=377, col_offset=12), [Str('d', lineno=377, col_offset=28)], [], None, None, lineno=377, col_offset=12), lineno=377, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=12), 'fail', Load(), lineno=378, col_offset=12), [Str('Removing missing element should have raised LookupError', lineno=378, col_offset=22)], [], None, None, lineno=378, col_offset=12), lineno=378, col_offset=12)], [ExceptHandler(Name('LookupError', Load(), lineno=379, col_offset=15), None, [Pass( lineno=380, col_offset=12)], lineno=379, col_offset=8)], [], lineno=376, col_offset=8)], [], lineno=375, col_offset=4), FunctionDef('test_remove_until_empty', arguments([Name('self', Param(), lineno=382, col_offset=32)], None, None, []), [Assign([Name('expected_len', Store(), lineno=383, col_offset=8)], Call(Name('len', Load(), lineno=383, col_offset=23), [Attribute(Name('self', Load(), lineno=383, col_offset=27), 'set', Load(), lineno=383, col_offset=27)], [], None, None, lineno=383, col_offset=23), lineno=383, col_offset=8), For(Name('v', Store(), lineno=384, col_offset=12), Attribute(Name('self', Load(), lineno=384, col_offset=17), 'values', Load(), lineno=384, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=385, col_offset=12), 'set', Load(), lineno=385, col_offset=12), 'remove', Load(), lineno=385, col_offset=12), [Name('v', Load(), lineno=385, col_offset=28)], [], None, None, lineno=385, col_offset=12), lineno=385, col_offset=12), AugAssign(Name('expected_len', Store(), lineno=386, col_offset=12), Sub(), Num(1, lineno=386, col_offset=28), lineno=386, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=12), 'assertEqual', Load(), lineno=387, col_offset=12), [Call(Name('len', Load(), lineno=387, col_offset=29), [Attribute(Name('self', Load(), lineno=387, col_offset=33), 'set', Load(), lineno=387, col_offset=33)], [], None, None, lineno=387, col_offset=29), Name('expected_len', Load(), lineno=387, col_offset=44)], [], None, None, lineno=387, col_offset=12), lineno=387, col_offset=12)], [], lineno=384, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('test_discard_present', arguments([Name('self', Param(), lineno=389, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'set', Load(), lineno=390, col_offset=8), 'discard', Load(), lineno=390, col_offset=8), [Str('c', lineno=390, col_offset=25)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'assertEqual', Load(), lineno=391, col_offset=8), [Attribute(Name('self', Load(), lineno=391, col_offset=25), 'set', Load(), lineno=391, col_offset=25), Call(Name('Set', Load(), lineno=391, col_offset=35), [Str('ab', lineno=391, col_offset=39)], [], None, None, lineno=391, col_offset=35)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8)], [], lineno=389, col_offset=4), FunctionDef('test_discard_absent', arguments([Name('self', Param(), lineno=393, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=394, col_offset=8), 'set', Load(), lineno=394, col_offset=8), 'discard', Load(), lineno=394, col_offset=8), [Str('d', lineno=394, col_offset=25)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertEqual', Load(), lineno=395, col_offset=8), [Attribute(Name('self', Load(), lineno=395, col_offset=25), 'set', Load(), lineno=395, col_offset=25), Call(Name('Set', Load(), lineno=395, col_offset=35), [Str('abc', lineno=395, col_offset=39)], [], None, None, lineno=395, col_offset=35)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8)], [], lineno=393, col_offset=4), FunctionDef('test_clear', arguments([Name('self', Param(), lineno=397, col_offset=19)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'set', Load(), lineno=398, col_offset=8), 'clear', Load(), lineno=398, col_offset=8), [], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=8), 'assertEqual', Load(), lineno=399, col_offset=8), [Call(Name('len', Load(), lineno=399, col_offset=25), [Attribute(Name('self', Load(), lineno=399, col_offset=29), 'set', Load(), lineno=399, col_offset=29)], [], None, None, lineno=399, col_offset=25), Num(0, lineno=399, col_offset=40)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8)], [], lineno=397, col_offset=4), FunctionDef('test_pop', arguments([Name('self', Param(), lineno=401, col_offset=17)], None, None, []), [Assign([Name('popped', Store(), lineno=402, col_offset=8)], Dict([], [], lineno=402, col_offset=17), lineno=402, col_offset=8), While(Attribute(Name('self', Load(), lineno=403, col_offset=14), 'set', Load(), lineno=403, col_offset=14), [Assign([Subscript(Name('popped', Load(), lineno=404, col_offset=12), Index(Call(Attribute(Attribute(Name('self', Load(), lineno=404, col_offset=19), 'set', Load(), lineno=404, col_offset=19), 'pop', Load(), lineno=404, col_offset=19), [], [], None, None, lineno=404, col_offset=19)), Store(), lineno=404, col_offset=12)], Name('None', Load(), lineno=404, col_offset=37), lineno=404, col_offset=12)], [], lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'assertEqual', Load(), lineno=405, col_offset=8), [Call(Name('len', Load(), lineno=405, col_offset=25), [Name('popped', Load(), lineno=405, col_offset=29)], [], None, None, lineno=405, col_offset=25), Call(Name('len', Load(), lineno=405, col_offset=38), [Attribute(Name('self', Load(), lineno=405, col_offset=42), 'values', Load(), lineno=405, col_offset=42)], [], None, None, lineno=405, col_offset=38)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), For(Name('v', Store(), lineno=406, col_offset=12), Attribute(Name('self', Load(), lineno=406, col_offset=17), 'values', Load(), lineno=406, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=12), 'assertIn', Load(), lineno=407, col_offset=12), [Name('v', Load(), lineno=407, col_offset=26), Name('popped', Load(), lineno=407, col_offset=29)], [], None, None, lineno=407, col_offset=12), lineno=407, col_offset=12)], [], lineno=406, col_offset=8)], [], lineno=401, col_offset=4), FunctionDef('test_update_empty_tuple', arguments([Name('self', Param(), lineno=409, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'set', Load(), lineno=410, col_offset=8), 'union_update', Load(), lineno=410, col_offset=8), [Tuple([], Load(), lineno=410, col_offset=30)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertEqual', Load(), lineno=411, col_offset=8), [Attribute(Name('self', Load(), lineno=411, col_offset=25), 'set', Load(), lineno=411, col_offset=25), Call(Name('Set', Load(), lineno=411, col_offset=35), [Attribute(Name('self', Load(), lineno=411, col_offset=39), 'values', Load(), lineno=411, col_offset=39)], [], None, None, lineno=411, col_offset=35)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8)], [], lineno=409, col_offset=4), FunctionDef('test_update_unit_tuple_overlap', arguments([Name('self', Param(), lineno=413, col_offset=39)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'set', Load(), lineno=414, col_offset=8), 'union_update', Load(), lineno=414, col_offset=8), [Tuple([Str('a', lineno=414, col_offset=31)], Load(), lineno=414, col_offset=31)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertEqual', Load(), lineno=415, col_offset=8), [Attribute(Name('self', Load(), lineno=415, col_offset=25), 'set', Load(), lineno=415, col_offset=25), Call(Name('Set', Load(), lineno=415, col_offset=35), [Attribute(Name('self', Load(), lineno=415, col_offset=39), 'values', Load(), lineno=415, col_offset=39)], [], None, None, lineno=415, col_offset=35)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8)], [], lineno=413, col_offset=4), FunctionDef('test_update_unit_tuple_non_overlap', arguments([Name('self', Param(), lineno=417, col_offset=43)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'set', Load(), lineno=418, col_offset=8), 'union_update', Load(), lineno=418, col_offset=8), [Tuple([Str('a', lineno=418, col_offset=31), Str('z', lineno=418, col_offset=36)], Load(), lineno=418, col_offset=31)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=8), 'assertEqual', Load(), lineno=419, col_offset=8), [Attribute(Name('self', Load(), lineno=419, col_offset=25), 'set', Load(), lineno=419, col_offset=25), Call(Name('Set', Load(), lineno=419, col_offset=35), [BinOp(Attribute(Name('self', Load(), lineno=419, col_offset=39), 'values', Load(), lineno=419, col_offset=39), Add(), List([Str('z', lineno=419, col_offset=54)], Load(), lineno=419, col_offset=53), lineno=419, col_offset=39)], [], None, None, lineno=419, col_offset=35)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8)], [], lineno=417, col_offset=4)], [], lineno=349, col_offset=0), ClassDef('TestSubsets', [Attribute(Name('unittest', Load(), lineno=423, col_offset=18), 'TestCase', Load(), lineno=423, col_offset=18)], [Assign([Name('case2method', Store(), lineno=425, col_offset=4)], Dict([Str('<=', lineno=425, col_offset=19), Str('>=', lineno=426, col_offset=19)], [Str('issubset', lineno=425, col_offset=25), Str('issuperset', lineno=426, col_offset=25)], lineno=425, col_offset=18), lineno=425, col_offset=4), Assign([Name('reverse', Store(), lineno=429, col_offset=4)], Dict([Str('==', lineno=429, col_offset=15), Str('!=', lineno=430, col_offset=15), Str('<', lineno=431, col_offset=15), Str('>', lineno=432, col_offset=15), Str('<=', lineno=433, col_offset=15), Str('>=', lineno=434, col_offset=15)], [Str('==', lineno=429, col_offset=21), Str('!=', lineno=430, col_offset=21), Str('>', lineno=431, col_offset=21), Str('<', lineno=432, col_offset=21), Str('>=', lineno=433, col_offset=21), Str('<=', lineno=434, col_offset=21)], lineno=429, col_offset=14), lineno=429, col_offset=4), FunctionDef('test_issubset', arguments([Name('self', Param(), lineno=437, col_offset=22)], None, None, []), [Assign([Name('x', Store(), lineno=438, col_offset=8)], Attribute(Name('self', Load(), lineno=438, col_offset=12), 'left', Load(), lineno=438, col_offset=12), lineno=438, col_offset=8), Assign([Name('y', Store(), lineno=439, col_offset=8)], Attribute(Name('self', Load(), lineno=439, col_offset=12), 'right', Load(), lineno=439, col_offset=12), lineno=439, col_offset=8), For(Name('case', Store(), lineno=440, col_offset=12), Tuple([Str('!=', lineno=440, col_offset=20), Str('==', lineno=440, col_offset=26), Str('<', lineno=440, col_offset=32), Str('<=', lineno=440, col_offset=37), Str('>', lineno=440, col_offset=43), Str('>=', lineno=440, col_offset=48)], Load(), lineno=440, col_offset=20), [Assign([Name('expected', Store(), lineno=441, col_offset=12)], Compare(Name('case', Load(), lineno=441, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=441, col_offset=31), 'cases', Load(), lineno=441, col_offset=31)], lineno=441, col_offset=23), lineno=441, col_offset=12), Assign([Name('result', Store(), lineno=443, col_offset=12)], Call(Name('eval', Load(), lineno=443, col_offset=21), [BinOp(BinOp(Str('x', lineno=443, col_offset=26), Add(), Name('case', Load(), lineno=443, col_offset=32), lineno=443, col_offset=26), Add(), Str('y', lineno=443, col_offset=39), lineno=443, col_offset=37), Call(Name('locals', Load(), lineno=443, col_offset=44), [], [], None, None, lineno=443, col_offset=44)], [], None, None, lineno=443, col_offset=21), lineno=443, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=444, col_offset=12), 'assertEqual', Load(), lineno=444, col_offset=12), [Name('result', Load(), lineno=444, col_offset=29), Name('expected', Load(), lineno=444, col_offset=37)], [], None, None, lineno=444, col_offset=12), lineno=444, col_offset=12), If(Compare(Name('case', Load(), lineno=446, col_offset=15), [In()], [Attribute(Name('TestSubsets', Load(), lineno=446, col_offset=23), 'case2method', Load(), lineno=446, col_offset=23)], lineno=446, col_offset=15), [Assign([Name('method', Store(), lineno=447, col_offset=16)], Call(Name('getattr', Load(), lineno=447, col_offset=25), [Name('x', Load(), lineno=447, col_offset=33), Subscript(Attribute(Name('TestSubsets', Load(), lineno=447, col_offset=36), 'case2method', Load(), lineno=447, col_offset=36), Index(Name('case', Load(), lineno=447, col_offset=60)), Load(), lineno=447, col_offset=36)], [], None, None, lineno=447, col_offset=25), lineno=447, col_offset=16), Assign([Name('result', Store(), lineno=448, col_offset=16)], Call(Name('method', Load(), lineno=448, col_offset=25), [Name('y', Load(), lineno=448, col_offset=32)], [], None, None, lineno=448, col_offset=25), lineno=448, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=16), 'assertEqual', Load(), lineno=449, col_offset=16), [Name('result', Load(), lineno=449, col_offset=33), Name('expected', Load(), lineno=449, col_offset=41)], [], None, None, lineno=449, col_offset=16), lineno=449, col_offset=16)], [], lineno=446, col_offset=12), Assign([Name('rcase', Store(), lineno=452, col_offset=12)], Subscript(Attribute(Name('TestSubsets', Load(), lineno=452, col_offset=20), 'reverse', Load(), lineno=452, col_offset=20), Index(Name('case', Load(), lineno=452, col_offset=40)), Load(), lineno=452, col_offset=20), lineno=452, col_offset=12), Assign([Name('result', Store(), lineno=453, col_offset=12)], Call(Name('eval', Load(), lineno=453, col_offset=21), [BinOp(BinOp(Str('y', lineno=453, col_offset=26), Add(), Name('rcase', Load(), lineno=453, col_offset=32), lineno=453, col_offset=26), Add(), Str('x', lineno=453, col_offset=40), lineno=453, col_offset=38), Call(Name('locals', Load(), lineno=453, col_offset=45), [], [], None, None, lineno=453, col_offset=45)], [], None, None, lineno=453, col_offset=21), lineno=453, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=454, col_offset=12), 'assertEqual', Load(), lineno=454, col_offset=12), [Name('result', Load(), lineno=454, col_offset=29), Name('expected', Load(), lineno=454, col_offset=37)], [], None, None, lineno=454, col_offset=12), lineno=454, col_offset=12), If(Compare(Name('rcase', Load(), lineno=455, col_offset=15), [In()], [Attribute(Name('TestSubsets', Load(), lineno=455, col_offset=24), 'case2method', Load(), lineno=455, col_offset=24)], lineno=455, col_offset=15), [Assign([Name('method', Store(), lineno=456, col_offset=16)], Call(Name('getattr', Load(), lineno=456, col_offset=25), [Name('y', Load(), lineno=456, col_offset=33), Subscript(Attribute(Name('TestSubsets', Load(), lineno=456, col_offset=36), 'case2method', Load(), lineno=456, col_offset=36), Index(Name('rcase', Load(), lineno=456, col_offset=60)), Load(), lineno=456, col_offset=36)], [], None, None, lineno=456, col_offset=25), lineno=456, col_offset=16), Assign([Name('result', Store(), lineno=457, col_offset=16)], Call(Name('method', Load(), lineno=457, col_offset=25), [Name('x', Load(), lineno=457, col_offset=32)], [], None, None, lineno=457, col_offset=25), lineno=457, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=16), 'assertEqual', Load(), lineno=458, col_offset=16), [Name('result', Load(), lineno=458, col_offset=33), Name('expected', Load(), lineno=458, col_offset=41)], [], None, None, lineno=458, col_offset=16), lineno=458, col_offset=16)], [], lineno=455, col_offset=12)], [], lineno=440, col_offset=8)], [], lineno=437, col_offset=4)], [], lineno=423, col_offset=0), ClassDef('TestSubsetEqualEmpty', [Name('TestSubsets', Load(), lineno=461, col_offset=27)], [Assign([Name('left', Store(), lineno=462, col_offset=4)], Call(Name('Set', Load(), lineno=462, col_offset=12), [], [], None, None, lineno=462, col_offset=12), lineno=462, col_offset=4), Assign([Name('right', Store(), lineno=463, col_offset=4)], Call(Name('Set', Load(), lineno=463, col_offset=12), [], [], None, None, lineno=463, col_offset=12), lineno=463, col_offset=4), Assign([Name('name', Store(), lineno=464, col_offset=4)], Str('both empty', lineno=464, col_offset=12), lineno=464, col_offset=4), Assign([Name('cases', Store(), lineno=465, col_offset=4)], Tuple([Str('==', lineno=465, col_offset=12), Str('<=', lineno=465, col_offset=18), Str('>=', lineno=465, col_offset=24)], Load(), lineno=465, col_offset=12), lineno=465, col_offset=4)], [], lineno=461, col_offset=0), ClassDef('TestSubsetEqualNonEmpty', [Name('TestSubsets', Load(), lineno=469, col_offset=30)], [Assign([Name('left', Store(), lineno=470, col_offset=4)], Call(Name('Set', Load(), lineno=470, col_offset=12), [List([Num(1, lineno=470, col_offset=17), Num(2, lineno=470, col_offset=20)], Load(), lineno=470, col_offset=16)], [], None, None, lineno=470, col_offset=12), lineno=470, col_offset=4), Assign([Name('right', Store(), lineno=471, col_offset=4)], Call(Name('Set', Load(), lineno=471, col_offset=12), [List([Num(1, lineno=471, col_offset=17), Num(2, lineno=471, col_offset=20)], Load(), lineno=471, col_offset=16)], [], None, None, lineno=471, col_offset=12), lineno=471, col_offset=4), Assign([Name('name', Store(), lineno=472, col_offset=4)], Str('equal pair', lineno=472, col_offset=12), lineno=472, col_offset=4), Assign([Name('cases', Store(), lineno=473, col_offset=4)], Tuple([Str('==', lineno=473, col_offset=12), Str('<=', lineno=473, col_offset=18), Str('>=', lineno=473, col_offset=24)], Load(), lineno=473, col_offset=12), lineno=473, col_offset=4)], [], lineno=469, col_offset=0), ClassDef('TestSubsetEmptyNonEmpty', [Name('TestSubsets', Load(), lineno=477, col_offset=30)], [Assign([Name('left', Store(), lineno=478, col_offset=4)], Call(Name('Set', Load(), lineno=478, col_offset=12), [], [], None, None, lineno=478, col_offset=12), lineno=478, col_offset=4), Assign([Name('right', Store(), lineno=479, col_offset=4)], Call(Name('Set', Load(), lineno=479, col_offset=12), [List([Num(1, lineno=479, col_offset=17), Num(2, lineno=479, col_offset=20)], Load(), lineno=479, col_offset=16)], [], None, None, lineno=479, col_offset=12), lineno=479, col_offset=4), Assign([Name('name', Store(), lineno=480, col_offset=4)], Str('one empty, one non-empty', lineno=480, col_offset=12), lineno=480, col_offset=4), Assign([Name('cases', Store(), lineno=481, col_offset=4)], Tuple([Str('!=', lineno=481, col_offset=12), Str('<', lineno=481, col_offset=18), Str('<=', lineno=481, col_offset=23)], Load(), lineno=481, col_offset=12), lineno=481, col_offset=4)], [], lineno=477, col_offset=0), ClassDef('TestSubsetPartial', [Name('TestSubsets', Load(), lineno=485, col_offset=24)], [Assign([Name('left', Store(), lineno=486, col_offset=4)], Call(Name('Set', Load(), lineno=486, col_offset=12), [List([Num(1, lineno=486, col_offset=17)], Load(), lineno=486, col_offset=16)], [], None, None, lineno=486, col_offset=12), lineno=486, col_offset=4), Assign([Name('right', Store(), lineno=487, col_offset=4)], Call(Name('Set', Load(), lineno=487, col_offset=12), [List([Num(1, lineno=487, col_offset=17), Num(2, lineno=487, col_offset=20)], Load(), lineno=487, col_offset=16)], [], None, None, lineno=487, col_offset=12), lineno=487, col_offset=4), Assign([Name('name', Store(), lineno=488, col_offset=4)], Str('one a non-empty proper subset of other', lineno=488, col_offset=12), lineno=488, col_offset=4), Assign([Name('cases', Store(), lineno=489, col_offset=4)], Tuple([Str('!=', lineno=489, col_offset=12), Str('<', lineno=489, col_offset=18), Str('<=', lineno=489, col_offset=23)], Load(), lineno=489, col_offset=12), lineno=489, col_offset=4)], [], lineno=485, col_offset=0), ClassDef('TestSubsetNonOverlap', [Name('TestSubsets', Load(), lineno=493, col_offset=27)], [Assign([Name('left', Store(), lineno=494, col_offset=4)], Call(Name('Set', Load(), lineno=494, col_offset=12), [List([Num(1, lineno=494, col_offset=17)], Load(), lineno=494, col_offset=16)], [], None, None, lineno=494, col_offset=12), lineno=494, col_offset=4), Assign([Name('right', Store(), lineno=495, col_offset=4)], Call(Name('Set', Load(), lineno=495, col_offset=12), [List([Num(2, lineno=495, col_offset=17)], Load(), lineno=495, col_offset=16)], [], None, None, lineno=495, col_offset=12), lineno=495, col_offset=4), Assign([Name('name', Store(), lineno=496, col_offset=4)], Str('neither empty, neither contains', lineno=496, col_offset=12), lineno=496, col_offset=4), Assign([Name('cases', Store(), lineno=497, col_offset=4)], Str('!=', lineno=497, col_offset=12), lineno=497, col_offset=4)], [], lineno=493, col_offset=0), ClassDef('TestOnlySetsInBinaryOps', [Attribute(Name('unittest', Load(), lineno=501, col_offset=30), 'TestCase', Load(), lineno=501, col_offset=30)], [FunctionDef('test_eq_ne', arguments([Name('self', Param(), lineno=503, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=505, col_offset=8), 'assertEqual', Load(), lineno=505, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=505, col_offset=25), 'other', Load(), lineno=505, col_offset=25), [Eq()], [Attribute(Name('self', Load(), lineno=505, col_offset=39), 'set', Load(), lineno=505, col_offset=39)], lineno=505, col_offset=25), Name('False', Load(), lineno=505, col_offset=49)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=506, col_offset=8), 'assertEqual', Load(), lineno=506, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=506, col_offset=25), 'set', Load(), lineno=506, col_offset=25), [Eq()], [Attribute(Name('self', Load(), lineno=506, col_offset=37), 'other', Load(), lineno=506, col_offset=37)], lineno=506, col_offset=25), Name('False', Load(), lineno=506, col_offset=49)], [], None, None, lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=8), 'assertEqual', Load(), lineno=507, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=507, col_offset=25), 'other', Load(), lineno=507, col_offset=25), [NotEq()], [Attribute(Name('self', Load(), lineno=507, col_offset=39), 'set', Load(), lineno=507, col_offset=39)], lineno=507, col_offset=25), Name('True', Load(), lineno=507, col_offset=49)], [], None, None, lineno=507, col_offset=8), lineno=507, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=508, col_offset=8), 'assertEqual', Load(), lineno=508, col_offset=8), [Compare(Attribute(Name('self', Load(), lineno=508, col_offset=25), 'set', Load(), lineno=508, col_offset=25), [NotEq()], [Attribute(Name('self', Load(), lineno=508, col_offset=37), 'other', Load(), lineno=508, col_offset=37)], lineno=508, col_offset=25), Name('True', Load(), lineno=508, col_offset=49)], [], None, None, lineno=508, col_offset=8), lineno=508, col_offset=8)], [], lineno=503, col_offset=4), FunctionDef('test_ge_gt_le_lt', arguments([Name('self', Param(), lineno=510, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=8), 'assertRaises', Load(), lineno=511, col_offset=8), [Name('TypeError', Load(), lineno=511, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=511, col_offset=45), 'set', Load(), lineno=511, col_offset=45), [Lt()], [Attribute(Name('self', Load(), lineno=511, col_offset=56), 'other', Load(), lineno=511, col_offset=56)], lineno=511, col_offset=45), lineno=511, col_offset=37)], [], None, None, lineno=511, col_offset=8), lineno=511, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=512, col_offset=8), 'assertRaises', Load(), lineno=512, col_offset=8), [Name('TypeError', Load(), lineno=512, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=512, col_offset=45), 'set', Load(), lineno=512, col_offset=45), [LtE()], [Attribute(Name('self', Load(), lineno=512, col_offset=57), 'other', Load(), lineno=512, col_offset=57)], lineno=512, col_offset=45), lineno=512, col_offset=37)], [], None, None, lineno=512, col_offset=8), lineno=512, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=513, col_offset=8), 'assertRaises', Load(), lineno=513, col_offset=8), [Name('TypeError', Load(), lineno=513, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=513, col_offset=45), 'set', Load(), lineno=513, col_offset=45), [Gt()], [Attribute(Name('self', Load(), lineno=513, col_offset=56), 'other', Load(), lineno=513, col_offset=56)], lineno=513, col_offset=45), lineno=513, col_offset=37)], [], None, None, lineno=513, col_offset=8), lineno=513, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=514, col_offset=8), 'assertRaises', Load(), lineno=514, col_offset=8), [Name('TypeError', Load(), lineno=514, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=514, col_offset=45), 'set', Load(), lineno=514, col_offset=45), [GtE()], [Attribute(Name('self', Load(), lineno=514, col_offset=57), 'other', Load(), lineno=514, col_offset=57)], lineno=514, col_offset=45), lineno=514, col_offset=37)], [], None, None, lineno=514, col_offset=8), lineno=514, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=516, col_offset=8), 'assertRaises', Load(), lineno=516, col_offset=8), [Name('TypeError', Load(), lineno=516, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=516, col_offset=45), 'other', Load(), lineno=516, col_offset=45), [Lt()], [Attribute(Name('self', Load(), lineno=516, col_offset=58), 'set', Load(), lineno=516, col_offset=58)], lineno=516, col_offset=45), lineno=516, col_offset=37)], [], None, None, lineno=516, col_offset=8), lineno=516, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=517, col_offset=8), 'assertRaises', Load(), lineno=517, col_offset=8), [Name('TypeError', Load(), lineno=517, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=517, col_offset=45), 'other', Load(), lineno=517, col_offset=45), [LtE()], [Attribute(Name('self', Load(), lineno=517, col_offset=59), 'set', Load(), lineno=517, col_offset=59)], lineno=517, col_offset=45), lineno=517, col_offset=37)], [], None, None, lineno=517, col_offset=8), lineno=517, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=518, col_offset=8), 'assertRaises', Load(), lineno=518, col_offset=8), [Name('TypeError', Load(), lineno=518, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=518, col_offset=45), 'other', Load(), lineno=518, col_offset=45), [Gt()], [Attribute(Name('self', Load(), lineno=518, col_offset=58), 'set', Load(), lineno=518, col_offset=58)], lineno=518, col_offset=45), lineno=518, col_offset=37)], [], None, None, lineno=518, col_offset=8), lineno=518, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=519, col_offset=8), 'assertRaises', Load(), lineno=519, col_offset=8), [Name('TypeError', Load(), lineno=519, col_offset=26), Lambda(arguments([], None, None, []), Compare(Attribute(Name('self', Load(), lineno=519, col_offset=45), 'other', Load(), lineno=519, col_offset=45), [GtE()], [Attribute(Name('self', Load(), lineno=519, col_offset=59), 'set', Load(), lineno=519, col_offset=59)], lineno=519, col_offset=45), lineno=519, col_offset=37)], [], None, None, lineno=519, col_offset=8), lineno=519, col_offset=8)], [], lineno=510, col_offset=4), FunctionDef('test_union_update_operator', arguments([Name('self', Param(), lineno=521, col_offset=35)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=523, col_offset=12), 'set', Store(), lineno=523, col_offset=12), BitOr(), Attribute(Name('self', Load(), lineno=523, col_offset=24), 'other', Load(), lineno=523, col_offset=24), lineno=523, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=524, col_offset=15), None, [Pass( lineno=525, col_offset=12)], lineno=524, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=12), 'fail', Load(), lineno=527, col_offset=12), [Str('expected TypeError', lineno=527, col_offset=22)], [], None, None, lineno=527, col_offset=12), lineno=527, col_offset=12)], lineno=522, col_offset=8)], [], lineno=521, col_offset=4), FunctionDef('test_union_update', arguments([Name('self', Param(), lineno=529, col_offset=26)], None, None, []), [If(Attribute(Name('self', Load(), lineno=530, col_offset=11), 'otherIsIterable', Load(), lineno=530, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=531, col_offset=12), 'set', Load(), lineno=531, col_offset=12), 'union_update', Load(), lineno=531, col_offset=12), [Attribute(Name('self', Load(), lineno=531, col_offset=34), 'other', Load(), lineno=531, col_offset=34)], [], None, None, lineno=531, col_offset=12), lineno=531, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=533, col_offset=12), 'assertRaises', Load(), lineno=533, col_offset=12), [Name('TypeError', Load(), lineno=533, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=533, col_offset=41), 'set', Load(), lineno=533, col_offset=41), 'union_update', Load(), lineno=533, col_offset=41), Attribute(Name('self', Load(), lineno=533, col_offset=64), 'other', Load(), lineno=533, col_offset=64)], [], None, None, lineno=533, col_offset=12), lineno=533, col_offset=12)], lineno=530, col_offset=8)], [], lineno=529, col_offset=4), FunctionDef('test_union', arguments([Name('self', Param(), lineno=535, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=536, col_offset=8), 'assertRaises', Load(), lineno=536, col_offset=8), [Name('TypeError', Load(), lineno=536, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=536, col_offset=45), 'set', Load(), lineno=536, col_offset=45), BitOr(), Attribute(Name('self', Load(), lineno=536, col_offset=56), 'other', Load(), lineno=536, col_offset=56), lineno=536, col_offset=45), lineno=536, col_offset=37)], [], None, None, lineno=536, col_offset=8), lineno=536, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=537, col_offset=8), 'assertRaises', Load(), lineno=537, col_offset=8), [Name('TypeError', Load(), lineno=537, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=537, col_offset=45), 'other', Load(), lineno=537, col_offset=45), BitOr(), Attribute(Name('self', Load(), lineno=537, col_offset=58), 'set', Load(), lineno=537, col_offset=58), lineno=537, col_offset=45), lineno=537, col_offset=37)], [], None, None, lineno=537, col_offset=8), lineno=537, col_offset=8), If(Attribute(Name('self', Load(), lineno=538, col_offset=11), 'otherIsIterable', Load(), lineno=538, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=539, col_offset=12), 'set', Load(), lineno=539, col_offset=12), 'union', Load(), lineno=539, col_offset=12), [Attribute(Name('self', Load(), lineno=539, col_offset=27), 'other', Load(), lineno=539, col_offset=27)], [], None, None, lineno=539, col_offset=12), lineno=539, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=541, col_offset=12), 'assertRaises', Load(), lineno=541, col_offset=12), [Name('TypeError', Load(), lineno=541, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=541, col_offset=41), 'set', Load(), lineno=541, col_offset=41), 'union', Load(), lineno=541, col_offset=41), Attribute(Name('self', Load(), lineno=541, col_offset=57), 'other', Load(), lineno=541, col_offset=57)], [], None, None, lineno=541, col_offset=12), lineno=541, col_offset=12)], lineno=538, col_offset=8)], [], lineno=535, col_offset=4), FunctionDef('test_intersection_update_operator', arguments([Name('self', Param(), lineno=543, col_offset=42)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=545, col_offset=12), 'set', Store(), lineno=545, col_offset=12), BitAnd(), Attribute(Name('self', Load(), lineno=545, col_offset=24), 'other', Load(), lineno=545, col_offset=24), lineno=545, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=546, col_offset=15), None, [Pass( lineno=547, col_offset=12)], lineno=546, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=549, col_offset=12), 'fail', Load(), lineno=549, col_offset=12), [Str('expected TypeError', lineno=549, col_offset=22)], [], None, None, lineno=549, col_offset=12), lineno=549, col_offset=12)], lineno=544, col_offset=8)], [], lineno=543, col_offset=4), FunctionDef('test_intersection_update', arguments([Name('self', Param(), lineno=551, col_offset=33)], None, None, []), [If(Attribute(Name('self', Load(), lineno=552, col_offset=11), 'otherIsIterable', Load(), lineno=552, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=553, col_offset=12), 'set', Load(), lineno=553, col_offset=12), 'intersection_update', Load(), lineno=553, col_offset=12), [Attribute(Name('self', Load(), lineno=553, col_offset=41), 'other', Load(), lineno=553, col_offset=41)], [], None, None, lineno=553, col_offset=12), lineno=553, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=555, col_offset=12), 'assertRaises', Load(), lineno=555, col_offset=12), [Name('TypeError', Load(), lineno=555, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=556, col_offset=30), 'set', Load(), lineno=556, col_offset=30), 'intersection_update', Load(), lineno=556, col_offset=30), Attribute(Name('self', Load(), lineno=557, col_offset=30), 'other', Load(), lineno=557, col_offset=30)], [], None, None, lineno=555, col_offset=12), lineno=555, col_offset=12)], lineno=552, col_offset=8)], [], lineno=551, col_offset=4), FunctionDef('test_intersection', arguments([Name('self', Param(), lineno=559, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=560, col_offset=8), 'assertRaises', Load(), lineno=560, col_offset=8), [Name('TypeError', Load(), lineno=560, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=560, col_offset=45), 'set', Load(), lineno=560, col_offset=45), BitAnd(), Attribute(Name('self', Load(), lineno=560, col_offset=56), 'other', Load(), lineno=560, col_offset=56), lineno=560, col_offset=45), lineno=560, col_offset=37)], [], None, None, lineno=560, col_offset=8), lineno=560, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=561, col_offset=8), 'assertRaises', Load(), lineno=561, col_offset=8), [Name('TypeError', Load(), lineno=561, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=561, col_offset=45), 'other', Load(), lineno=561, col_offset=45), BitAnd(), Attribute(Name('self', Load(), lineno=561, col_offset=58), 'set', Load(), lineno=561, col_offset=58), lineno=561, col_offset=45), lineno=561, col_offset=37)], [], None, None, lineno=561, col_offset=8), lineno=561, col_offset=8), If(Attribute(Name('self', Load(), lineno=562, col_offset=11), 'otherIsIterable', Load(), lineno=562, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=563, col_offset=12), 'set', Load(), lineno=563, col_offset=12), 'intersection', Load(), lineno=563, col_offset=12), [Attribute(Name('self', Load(), lineno=563, col_offset=34), 'other', Load(), lineno=563, col_offset=34)], [], None, None, lineno=563, col_offset=12), lineno=563, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=565, col_offset=12), 'assertRaises', Load(), lineno=565, col_offset=12), [Name('TypeError', Load(), lineno=565, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=565, col_offset=41), 'set', Load(), lineno=565, col_offset=41), 'intersection', Load(), lineno=565, col_offset=41), Attribute(Name('self', Load(), lineno=565, col_offset=64), 'other', Load(), lineno=565, col_offset=64)], [], None, None, lineno=565, col_offset=12), lineno=565, col_offset=12)], lineno=562, col_offset=8)], [], lineno=559, col_offset=4), FunctionDef('test_sym_difference_update_operator', arguments([Name('self', Param(), lineno=567, col_offset=44)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=569, col_offset=12), 'set', Store(), lineno=569, col_offset=12), BitXor(), Attribute(Name('self', Load(), lineno=569, col_offset=24), 'other', Load(), lineno=569, col_offset=24), lineno=569, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=570, col_offset=15), None, [Pass( lineno=571, col_offset=12)], lineno=570, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=573, col_offset=12), 'fail', Load(), lineno=573, col_offset=12), [Str('expected TypeError', lineno=573, col_offset=22)], [], None, None, lineno=573, col_offset=12), lineno=573, col_offset=12)], lineno=568, col_offset=8)], [], lineno=567, col_offset=4), FunctionDef('test_sym_difference_update', arguments([Name('self', Param(), lineno=575, col_offset=35)], None, None, []), [If(Attribute(Name('self', Load(), lineno=576, col_offset=11), 'otherIsIterable', Load(), lineno=576, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=577, col_offset=12), 'set', Load(), lineno=577, col_offset=12), 'symmetric_difference_update', Load(), lineno=577, col_offset=12), [Attribute(Name('self', Load(), lineno=577, col_offset=49), 'other', Load(), lineno=577, col_offset=49)], [], None, None, lineno=577, col_offset=12), lineno=577, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=579, col_offset=12), 'assertRaises', Load(), lineno=579, col_offset=12), [Name('TypeError', Load(), lineno=579, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=580, col_offset=30), 'set', Load(), lineno=580, col_offset=30), 'symmetric_difference_update', Load(), lineno=580, col_offset=30), Attribute(Name('self', Load(), lineno=581, col_offset=30), 'other', Load(), lineno=581, col_offset=30)], [], None, None, lineno=579, col_offset=12), lineno=579, col_offset=12)], lineno=576, col_offset=8)], [], lineno=575, col_offset=4), FunctionDef('test_sym_difference', arguments([Name('self', Param(), lineno=583, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'assertRaises', Load(), lineno=584, col_offset=8), [Name('TypeError', Load(), lineno=584, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=584, col_offset=45), 'set', Load(), lineno=584, col_offset=45), BitXor(), Attribute(Name('self', Load(), lineno=584, col_offset=56), 'other', Load(), lineno=584, col_offset=56), lineno=584, col_offset=45), lineno=584, col_offset=37)], [], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=585, col_offset=8), 'assertRaises', Load(), lineno=585, col_offset=8), [Name('TypeError', Load(), lineno=585, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=585, col_offset=45), 'other', Load(), lineno=585, col_offset=45), BitXor(), Attribute(Name('self', Load(), lineno=585, col_offset=58), 'set', Load(), lineno=585, col_offset=58), lineno=585, col_offset=45), lineno=585, col_offset=37)], [], None, None, lineno=585, col_offset=8), lineno=585, col_offset=8), If(Attribute(Name('self', Load(), lineno=586, col_offset=11), 'otherIsIterable', Load(), lineno=586, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=587, col_offset=12), 'set', Load(), lineno=587, col_offset=12), 'symmetric_difference', Load(), lineno=587, col_offset=12), [Attribute(Name('self', Load(), lineno=587, col_offset=42), 'other', Load(), lineno=587, col_offset=42)], [], None, None, lineno=587, col_offset=12), lineno=587, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=589, col_offset=12), 'assertRaises', Load(), lineno=589, col_offset=12), [Name('TypeError', Load(), lineno=589, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=589, col_offset=41), 'set', Load(), lineno=589, col_offset=41), 'symmetric_difference', Load(), lineno=589, col_offset=41), Attribute(Name('self', Load(), lineno=589, col_offset=72), 'other', Load(), lineno=589, col_offset=72)], [], None, None, lineno=589, col_offset=12), lineno=589, col_offset=12)], lineno=586, col_offset=8)], [], lineno=583, col_offset=4), FunctionDef('test_difference_update_operator', arguments([Name('self', Param(), lineno=591, col_offset=40)], None, None, []), [TryExcept([AugAssign(Attribute(Name('self', Load(), lineno=593, col_offset=12), 'set', Store(), lineno=593, col_offset=12), Sub(), Attribute(Name('self', Load(), lineno=593, col_offset=24), 'other', Load(), lineno=593, col_offset=24), lineno=593, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=594, col_offset=15), None, [Pass( lineno=595, col_offset=12)], lineno=594, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=597, col_offset=12), 'fail', Load(), lineno=597, col_offset=12), [Str('expected TypeError', lineno=597, col_offset=22)], [], None, None, lineno=597, col_offset=12), lineno=597, col_offset=12)], lineno=592, col_offset=8)], [], lineno=591, col_offset=4), FunctionDef('test_difference_update', arguments([Name('self', Param(), lineno=599, col_offset=31)], None, None, []), [If(Attribute(Name('self', Load(), lineno=600, col_offset=11), 'otherIsIterable', Load(), lineno=600, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=601, col_offset=12), 'set', Load(), lineno=601, col_offset=12), 'difference_update', Load(), lineno=601, col_offset=12), [Attribute(Name('self', Load(), lineno=601, col_offset=39), 'other', Load(), lineno=601, col_offset=39)], [], None, None, lineno=601, col_offset=12), lineno=601, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=603, col_offset=12), 'assertRaises', Load(), lineno=603, col_offset=12), [Name('TypeError', Load(), lineno=603, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=604, col_offset=30), 'set', Load(), lineno=604, col_offset=30), 'difference_update', Load(), lineno=604, col_offset=30), Attribute(Name('self', Load(), lineno=605, col_offset=30), 'other', Load(), lineno=605, col_offset=30)], [], None, None, lineno=603, col_offset=12), lineno=603, col_offset=12)], lineno=600, col_offset=8)], [], lineno=599, col_offset=4), FunctionDef('test_difference', arguments([Name('self', Param(), lineno=607, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=608, col_offset=8), 'assertRaises', Load(), lineno=608, col_offset=8), [Name('TypeError', Load(), lineno=608, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=608, col_offset=45), 'set', Load(), lineno=608, col_offset=45), Sub(), Attribute(Name('self', Load(), lineno=608, col_offset=56), 'other', Load(), lineno=608, col_offset=56), lineno=608, col_offset=45), lineno=608, col_offset=37)], [], None, None, lineno=608, col_offset=8), lineno=608, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=609, col_offset=8), 'assertRaises', Load(), lineno=609, col_offset=8), [Name('TypeError', Load(), lineno=609, col_offset=26), Lambda(arguments([], None, None, []), BinOp(Attribute(Name('self', Load(), lineno=609, col_offset=45), 'other', Load(), lineno=609, col_offset=45), Sub(), Attribute(Name('self', Load(), lineno=609, col_offset=58), 'set', Load(), lineno=609, col_offset=58), lineno=609, col_offset=45), lineno=609, col_offset=37)], [], None, None, lineno=609, col_offset=8), lineno=609, col_offset=8), If(Attribute(Name('self', Load(), lineno=610, col_offset=11), 'otherIsIterable', Load(), lineno=610, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=611, col_offset=12), 'set', Load(), lineno=611, col_offset=12), 'difference', Load(), lineno=611, col_offset=12), [Attribute(Name('self', Load(), lineno=611, col_offset=32), 'other', Load(), lineno=611, col_offset=32)], [], None, None, lineno=611, col_offset=12), lineno=611, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=613, col_offset=12), 'assertRaises', Load(), lineno=613, col_offset=12), [Name('TypeError', Load(), lineno=613, col_offset=30), Attribute(Attribute(Name('self', Load(), lineno=613, col_offset=41), 'set', Load(), lineno=613, col_offset=41), 'difference', Load(), lineno=613, col_offset=41), Attribute(Name('self', Load(), lineno=613, col_offset=62), 'other', Load(), lineno=613, col_offset=62)], [], None, None, lineno=613, col_offset=12), lineno=613, col_offset=12)], lineno=610, col_offset=8)], [], lineno=607, col_offset=4)], [], lineno=501, col_offset=0), ClassDef('TestOnlySetsNumeric', [Name('TestOnlySetsInBinaryOps', Load(), lineno=617, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=618, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=619, col_offset=8), 'set', Store(), lineno=619, col_offset=8)], Call(Name('Set', Load(), lineno=619, col_offset=21), [Tuple([Num(1, lineno=619, col_offset=26), Num(2, lineno=619, col_offset=29), Num(3, lineno=619, col_offset=32)], Load(), lineno=619, col_offset=26)], [], None, None, lineno=619, col_offset=21), lineno=619, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=620, col_offset=8), 'other', Store(), lineno=620, col_offset=8)], Num(19, lineno=620, col_offset=21), lineno=620, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=621, col_offset=8), 'otherIsIterable', Store(), lineno=621, col_offset=8)], Name('False', Load(), lineno=621, col_offset=31), lineno=621, col_offset=8)], [], lineno=618, col_offset=4)], [], lineno=617, col_offset=0), ClassDef('TestOnlySetsDict', [Name('TestOnlySetsInBinaryOps', Load(), lineno=625, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=626, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=627, col_offset=8), 'set', Store(), lineno=627, col_offset=8)], Call(Name('Set', Load(), lineno=627, col_offset=21), [Tuple([Num(1, lineno=627, col_offset=26), Num(2, lineno=627, col_offset=29), Num(3, lineno=627, col_offset=32)], Load(), lineno=627, col_offset=26)], [], None, None, lineno=627, col_offset=21), lineno=627, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=628, col_offset=8), 'other', Store(), lineno=628, col_offset=8)], Dict([Num(1, lineno=628, col_offset=22), Num(3, lineno=628, col_offset=27)], [Num(2, lineno=628, col_offset=24), Num(4, lineno=628, col_offset=29)], lineno=628, col_offset=21), lineno=628, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=629, col_offset=8), 'otherIsIterable', Store(), lineno=629, col_offset=8)], Name('True', Load(), lineno=629, col_offset=31), lineno=629, col_offset=8)], [], lineno=626, col_offset=4)], [], lineno=625, col_offset=0), ClassDef('TestOnlySetsOperator', [Name('TestOnlySetsInBinaryOps', Load(), lineno=633, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=634, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=635, col_offset=8), 'set', Store(), lineno=635, col_offset=8)], Call(Name('Set', Load(), lineno=635, col_offset=21), [Tuple([Num(1, lineno=635, col_offset=26), Num(2, lineno=635, col_offset=29), Num(3, lineno=635, col_offset=32)], Load(), lineno=635, col_offset=26)], [], None, None, lineno=635, col_offset=21), lineno=635, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=636, col_offset=8), 'other', Store(), lineno=636, col_offset=8)], Attribute(Name('operator', Load(), lineno=636, col_offset=21), 'add', Load(), lineno=636, col_offset=21), lineno=636, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=637, col_offset=8), 'otherIsIterable', Store(), lineno=637, col_offset=8)], Name('False', Load(), lineno=637, col_offset=31), lineno=637, col_offset=8)], [], lineno=634, col_offset=4), FunctionDef('test_ge_gt_le_lt', arguments([Name('self', Param(), lineno=639, col_offset=25)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=640, col_offset=13), 'check_py3k_warnings', Load(), lineno=640, col_offset=13), [], [], None, None, lineno=640, col_offset=13), None, [Expr(Call(Attribute(Call(Name('super', Load(), lineno=641, col_offset=12), [Name('TestOnlySetsOperator', Load(), lineno=641, col_offset=18), Name('self', Load(), lineno=641, col_offset=40)], [], None, None, lineno=641, col_offset=12), 'test_ge_gt_le_lt', Load(), lineno=641, col_offset=12), [], [], None, None, lineno=641, col_offset=12), lineno=641, col_offset=12)], lineno=640, col_offset=13)], [], lineno=639, col_offset=4)], [], lineno=633, col_offset=0), ClassDef('TestOnlySetsTuple', [Name('TestOnlySetsInBinaryOps', Load(), lineno=645, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=646, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=647, col_offset=8), 'set', Store(), lineno=647, col_offset=8)], Call(Name('Set', Load(), lineno=647, col_offset=21), [Tuple([Num(1, lineno=647, col_offset=26), Num(2, lineno=647, col_offset=29), Num(3, lineno=647, col_offset=32)], Load(), lineno=647, col_offset=26)], [], None, None, lineno=647, col_offset=21), lineno=647, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=648, col_offset=8), 'other', Store(), lineno=648, col_offset=8)], Tuple([Num(2, lineno=648, col_offset=22), Num(4, lineno=648, col_offset=25), Num(6, lineno=648, col_offset=28)], Load(), lineno=648, col_offset=22), lineno=648, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=649, col_offset=8), 'otherIsIterable', Store(), lineno=649, col_offset=8)], Name('True', Load(), lineno=649, col_offset=31), lineno=649, col_offset=8)], [], lineno=646, col_offset=4)], [], lineno=645, col_offset=0), ClassDef('TestOnlySetsString', [Name('TestOnlySetsInBinaryOps', Load(), lineno=653, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=654, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=655, col_offset=8), 'set', Store(), lineno=655, col_offset=8)], Call(Name('Set', Load(), lineno=655, col_offset=21), [Tuple([Num(1, lineno=655, col_offset=26), Num(2, lineno=655, col_offset=29), Num(3, lineno=655, col_offset=32)], Load(), lineno=655, col_offset=26)], [], None, None, lineno=655, col_offset=21), lineno=655, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=656, col_offset=8), 'other', Store(), lineno=656, col_offset=8)], Str('abc', lineno=656, col_offset=21), lineno=656, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=657, col_offset=8), 'otherIsIterable', Store(), lineno=657, col_offset=8)], Name('True', Load(), lineno=657, col_offset=31), lineno=657, col_offset=8)], [], lineno=654, col_offset=4)], [], lineno=653, col_offset=0), ClassDef('TestOnlySetsGenerator', [Name('TestOnlySetsInBinaryOps', Load(), lineno=661, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=662, col_offset=14)], None, None, []), [FunctionDef('gen', arguments([], None, None, []), [For(Name('i', Store(), lineno=664, col_offset=16), Call(Name('xrange', Load(), lineno=664, col_offset=21), [Num(0, lineno=664, col_offset=28), Num(10, lineno=664, col_offset=31), Num(2, lineno=664, col_offset=35)], [], None, None, lineno=664, col_offset=21), [Expr(Yield(Name('i', Load(), lineno=665, col_offset=22), lineno=665, col_offset=16), lineno=665, col_offset=16)], [], lineno=664, col_offset=12)], [], lineno=663, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=666, col_offset=8), 'set', Store(), lineno=666, col_offset=8)], Call(Name('Set', Load(), lineno=666, col_offset=21), [Tuple([Num(1, lineno=666, col_offset=26), Num(2, lineno=666, col_offset=29), Num(3, lineno=666, col_offset=32)], Load(), lineno=666, col_offset=26)], [], None, None, lineno=666, col_offset=21), lineno=666, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=667, col_offset=8), 'other', Store(), lineno=667, col_offset=8)], Call(Name('gen', Load(), lineno=667, col_offset=21), [], [], None, None, lineno=667, col_offset=21), lineno=667, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=668, col_offset=8), 'otherIsIterable', Store(), lineno=668, col_offset=8)], Name('True', Load(), lineno=668, col_offset=31), lineno=668, col_offset=8)], [], lineno=662, col_offset=4)], [], lineno=661, col_offset=0), ClassDef('TestOnlySetsofSets', [Name('TestOnlySetsInBinaryOps', Load(), lineno=672, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=673, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=674, col_offset=8), 'set', Store(), lineno=674, col_offset=8)], Call(Name('Set', Load(), lineno=674, col_offset=21), [Tuple([Num(1, lineno=674, col_offset=26), Num(2, lineno=674, col_offset=29), Num(3, lineno=674, col_offset=32)], Load(), lineno=674, col_offset=26)], [], None, None, lineno=674, col_offset=21), lineno=674, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=675, col_offset=8), 'other', Store(), lineno=675, col_offset=8)], List([Call(Name('Set', Load(), lineno=675, col_offset=22), [Str('ab', lineno=675, col_offset=26)], [], None, None, lineno=675, col_offset=22), Call(Name('ImmutableSet', Load(), lineno=675, col_offset=33), [Str('cd', lineno=675, col_offset=46)], [], None, None, lineno=675, col_offset=33)], Load(), lineno=675, col_offset=21), lineno=675, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=676, col_offset=8), 'otherIsIterable', Store(), lineno=676, col_offset=8)], Name('True', Load(), lineno=676, col_offset=31), lineno=676, col_offset=8)], [], lineno=673, col_offset=4)], [], lineno=672, col_offset=0), ClassDef('TestCopying', [Attribute(Name('unittest', Load(), lineno=680, col_offset=18), 'TestCase', Load(), lineno=680, col_offset=18)], [FunctionDef('test_copy', arguments([Name('self', Param(), lineno=682, col_offset=18)], None, None, []), [Assign([Name('dup', Store(), lineno=683, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=683, col_offset=14), 'set', Load(), lineno=683, col_offset=14), 'copy', Load(), lineno=683, col_offset=14), [], [], None, None, lineno=683, col_offset=14), lineno=683, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=684, col_offset=8), 'assertEqual', Load(), lineno=684, col_offset=8), [Call(Name('len', Load(), lineno=684, col_offset=25), [Name('dup', Load(), lineno=684, col_offset=29)], [], None, None, lineno=684, col_offset=25), Call(Name('len', Load(), lineno=684, col_offset=35), [Attribute(Name('self', Load(), lineno=684, col_offset=39), 'set', Load(), lineno=684, col_offset=39)], [], None, None, lineno=684, col_offset=35)], [], None, None, lineno=684, col_offset=8), lineno=684, col_offset=8), Assign([Name('dup_list', Store(), lineno=685, col_offset=8)], Call(Name('sorted', Load(), lineno=685, col_offset=19), [Name('dup', Load(), lineno=685, col_offset=26)], [], None, None, lineno=685, col_offset=19), lineno=685, col_offset=8), Assign([Name('set_list', Store(), lineno=686, col_offset=8)], Call(Name('sorted', Load(), lineno=686, col_offset=19), [Attribute(Name('self', Load(), lineno=686, col_offset=26), 'set', Load(), lineno=686, col_offset=26)], [], None, None, lineno=686, col_offset=19), lineno=686, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=687, col_offset=8), 'assertEqual', Load(), lineno=687, col_offset=8), [Call(Name('len', Load(), lineno=687, col_offset=25), [Name('dup_list', Load(), lineno=687, col_offset=29)], [], None, None, lineno=687, col_offset=25), Call(Name('len', Load(), lineno=687, col_offset=40), [Name('set_list', Load(), lineno=687, col_offset=44)], [], None, None, lineno=687, col_offset=40)], [], None, None, lineno=687, col_offset=8), lineno=687, col_offset=8), For(Tuple([Name('i', Store(), lineno=688, col_offset=12), Name('el', Store(), lineno=688, col_offset=15)], Store(), lineno=688, col_offset=12), Call(Name('enumerate', Load(), lineno=688, col_offset=21), [Name('dup_list', Load(), lineno=688, col_offset=31)], [], None, None, lineno=688, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=689, col_offset=12), 'assertIs', Load(), lineno=689, col_offset=12), [Name('el', Load(), lineno=689, col_offset=26), Subscript(Name('set_list', Load(), lineno=689, col_offset=30), Index(Name('i', Load(), lineno=689, col_offset=39)), Load(), lineno=689, col_offset=30)], [], None, None, lineno=689, col_offset=12), lineno=689, col_offset=12)], [], lineno=688, col_offset=8)], [], lineno=682, col_offset=4), FunctionDef('test_deep_copy', arguments([Name('self', Param(), lineno=691, col_offset=23)], None, None, []), [Assign([Name('dup', Store(), lineno=692, col_offset=8)], Call(Attribute(Name('copy', Load(), lineno=692, col_offset=14), 'deepcopy', Load(), lineno=692, col_offset=14), [Attribute(Name('self', Load(), lineno=692, col_offset=28), 'set', Load(), lineno=692, col_offset=28)], [], None, None, lineno=692, col_offset=14), lineno=692, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=693, col_offset=8), 'assertSetEqual', Load(), lineno=693, col_offset=8), [Name('dup', Load(), lineno=693, col_offset=28), Attribute(Name('self', Load(), lineno=693, col_offset=33), 'set', Load(), lineno=693, col_offset=33)], [], None, None, lineno=693, col_offset=8), lineno=693, col_offset=8)], [], lineno=691, col_offset=4)], [], lineno=680, col_offset=0), ClassDef('TestCopyingEmpty', [Name('TestCopying', Load(), lineno=697, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=698, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=699, col_offset=8), 'set', Store(), lineno=699, col_offset=8)], Call(Name('Set', Load(), lineno=699, col_offset=19), [], [], None, None, lineno=699, col_offset=19), lineno=699, col_offset=8)], [], lineno=698, col_offset=4)], [], lineno=697, col_offset=0), ClassDef('TestCopyingSingleton', [Name('TestCopying', Load(), lineno=703, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=704, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=705, col_offset=8), 'set', Store(), lineno=705, col_offset=8)], Call(Name('Set', Load(), lineno=705, col_offset=19), [List([Str('hello', lineno=705, col_offset=24)], Load(), lineno=705, col_offset=23)], [], None, None, lineno=705, col_offset=19), lineno=705, col_offset=8)], [], lineno=704, col_offset=4)], [], lineno=703, col_offset=0), ClassDef('TestCopyingTriple', [Name('TestCopying', Load(), lineno=709, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=710, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=711, col_offset=8), 'set', Store(), lineno=711, col_offset=8)], Call(Name('Set', Load(), lineno=711, col_offset=19), [List([Str('zero', lineno=711, col_offset=24), Num(0, lineno=711, col_offset=32), Name('None', Load(), lineno=711, col_offset=35)], Load(), lineno=711, col_offset=23)], [], None, None, lineno=711, col_offset=19), lineno=711, col_offset=8)], [], lineno=710, col_offset=4), FunctionDef('test_copy', arguments([Name('self', Param(), lineno=713, col_offset=18)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=714, col_offset=13), 'check_py3k_warnings', Load(), lineno=714, col_offset=13), [], [], None, None, lineno=714, col_offset=13), None, [Expr(Call(Attribute(Call(Name('super', Load(), lineno=715, col_offset=12), [Name('TestCopyingTriple', Load(), lineno=715, col_offset=18), Name('self', Load(), lineno=715, col_offset=37)], [], None, None, lineno=715, col_offset=12), 'test_copy', Load(), lineno=715, col_offset=12), [], [], None, None, lineno=715, col_offset=12), lineno=715, col_offset=12)], lineno=714, col_offset=13)], [], lineno=713, col_offset=4)], [], lineno=709, col_offset=0), ClassDef('TestCopyingTuple', [Name('TestCopying', Load(), lineno=719, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=720, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=721, col_offset=8), 'set', Store(), lineno=721, col_offset=8)], Call(Name('Set', Load(), lineno=721, col_offset=19), [List([Tuple([Num(1, lineno=721, col_offset=25), Num(2, lineno=721, col_offset=28)], Load(), lineno=721, col_offset=25)], Load(), lineno=721, col_offset=23)], [], None, None, lineno=721, col_offset=19), lineno=721, col_offset=8)], [], lineno=720, col_offset=4)], [], lineno=719, col_offset=0), ClassDef('TestCopyingNested', [Name('TestCopying', Load(), lineno=725, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=726, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=727, col_offset=8), 'set', Store(), lineno=727, col_offset=8)], Call(Name('Set', Load(), lineno=727, col_offset=19), [List([Tuple([Tuple([Num(1, lineno=727, col_offset=26), Num(2, lineno=727, col_offset=29)], Load(), lineno=727, col_offset=26), Tuple([Num(3, lineno=727, col_offset=34), Num(4, lineno=727, col_offset=37)], Load(), lineno=727, col_offset=34)], Load(), lineno=727, col_offset=25)], Load(), lineno=727, col_offset=23)], [], None, None, lineno=727, col_offset=19), lineno=727, col_offset=8)], [], lineno=726, col_offset=4)], [], lineno=725, col_offset=0), ClassDef('TestIdentities', [Attribute(Name('unittest', Load(), lineno=731, col_offset=21), 'TestCase', Load(), lineno=731, col_offset=21)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=732, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=733, col_offset=8), 'a', Store(), lineno=733, col_offset=8)], Call(Name('Set', Load(), lineno=733, col_offset=17), [ListComp(Call(Attribute(Name('random', Load(), lineno=733, col_offset=22), 'randrange', Load(), lineno=733, col_offset=22), [Num(100, lineno=733, col_offset=39)], [], None, None, lineno=733, col_offset=22), [comprehension(Name('i', Store(), lineno=733, col_offset=48), Call(Name('xrange', Load(), lineno=733, col_offset=53), [Num(50, lineno=733, col_offset=60)], [], None, None, lineno=733, col_offset=53), [])], lineno=733, col_offset=22)], [], None, None, lineno=733, col_offset=17), lineno=733, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=734, col_offset=8), 'b', Store(), lineno=734, col_offset=8)], Call(Name('Set', Load(), lineno=734, col_offset=17), [ListComp(Call(Attribute(Name('random', Load(), lineno=734, col_offset=22), 'randrange', Load(), lineno=734, col_offset=22), [Num(100, lineno=734, col_offset=39)], [], None, None, lineno=734, col_offset=22), [comprehension(Name('i', Store(), lineno=734, col_offset=48), Call(Name('xrange', Load(), lineno=734, col_offset=53), [Num(50, lineno=734, col_offset=60)], [], None, None, lineno=734, col_offset=53), [])], lineno=734, col_offset=22)], [], None, None, lineno=734, col_offset=17), lineno=734, col_offset=8)], [], lineno=732, col_offset=4), FunctionDef('test_binopsVsSubsets', arguments([Name('self', Param(), lineno=736, col_offset=29)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=737, col_offset=8), Name('b', Store(), lineno=737, col_offset=11)], Store(), lineno=737, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=737, col_offset=15), 'a', Load(), lineno=737, col_offset=15), Attribute(Name('self', Load(), lineno=737, col_offset=23), 'b', Load(), lineno=737, col_offset=23)], Load(), lineno=737, col_offset=15), lineno=737, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=738, col_offset=8), 'assertTrue', Load(), lineno=738, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=738, col_offset=24), Sub(), Name('b', Load(), lineno=738, col_offset=28), lineno=738, col_offset=24), [LtE()], [Name('a', Load(), lineno=738, col_offset=33)], lineno=738, col_offset=24)], [], None, None, lineno=738, col_offset=8), lineno=738, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=739, col_offset=8), 'assertTrue', Load(), lineno=739, col_offset=8), [Compare(BinOp(Name('b', Load(), lineno=739, col_offset=24), Sub(), Name('a', Load(), lineno=739, col_offset=28), lineno=739, col_offset=24), [LtE()], [Name('b', Load(), lineno=739, col_offset=33)], lineno=739, col_offset=24)], [], None, None, lineno=739, col_offset=8), lineno=739, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=740, col_offset=8), 'assertTrue', Load(), lineno=740, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=740, col_offset=24), BitAnd(), Name('b', Load(), lineno=740, col_offset=28), lineno=740, col_offset=24), [LtE()], [Name('a', Load(), lineno=740, col_offset=33)], lineno=740, col_offset=24)], [], None, None, lineno=740, col_offset=8), lineno=740, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=741, col_offset=8), 'assertTrue', Load(), lineno=741, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=741, col_offset=24), BitAnd(), Name('b', Load(), lineno=741, col_offset=28), lineno=741, col_offset=24), [LtE()], [Name('b', Load(), lineno=741, col_offset=33)], lineno=741, col_offset=24)], [], None, None, lineno=741, col_offset=8), lineno=741, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=742, col_offset=8), 'assertTrue', Load(), lineno=742, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=742, col_offset=24), BitOr(), Name('b', Load(), lineno=742, col_offset=28), lineno=742, col_offset=24), [GtE()], [Name('a', Load(), lineno=742, col_offset=33)], lineno=742, col_offset=24)], [], None, None, lineno=742, col_offset=8), lineno=742, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=743, col_offset=8), 'assertTrue', Load(), lineno=743, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=743, col_offset=24), BitOr(), Name('b', Load(), lineno=743, col_offset=28), lineno=743, col_offset=24), [GtE()], [Name('b', Load(), lineno=743, col_offset=33)], lineno=743, col_offset=24)], [], None, None, lineno=743, col_offset=8), lineno=743, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=744, col_offset=8), 'assertTrue', Load(), lineno=744, col_offset=8), [Compare(BinOp(Name('a', Load(), lineno=744, col_offset=24), BitXor(), Name('b', Load(), lineno=744, col_offset=28), lineno=744, col_offset=24), [LtE()], [BinOp(Name('a', Load(), lineno=744, col_offset=33), BitOr(), Name('b', Load(), lineno=744, col_offset=37), lineno=744, col_offset=33)], lineno=744, col_offset=24)], [], None, None, lineno=744, col_offset=8), lineno=744, col_offset=8)], [], lineno=736, col_offset=4), FunctionDef('test_commutativity', arguments([Name('self', Param(), lineno=746, col_offset=27)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=747, col_offset=8), Name('b', Store(), lineno=747, col_offset=11)], Store(), lineno=747, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=747, col_offset=15), 'a', Load(), lineno=747, col_offset=15), Attribute(Name('self', Load(), lineno=747, col_offset=23), 'b', Load(), lineno=747, col_offset=23)], Load(), lineno=747, col_offset=15), lineno=747, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=748, col_offset=8), 'assertEqual', Load(), lineno=748, col_offset=8), [BinOp(Name('a', Load(), lineno=748, col_offset=25), BitAnd(), Name('b', Load(), lineno=748, col_offset=27), lineno=748, col_offset=25), BinOp(Name('b', Load(), lineno=748, col_offset=30), BitAnd(), Name('a', Load(), lineno=748, col_offset=32), lineno=748, col_offset=30)], [], None, None, lineno=748, col_offset=8), lineno=748, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=749, col_offset=8), 'assertEqual', Load(), lineno=749, col_offset=8), [BinOp(Name('a', Load(), lineno=749, col_offset=25), BitOr(), Name('b', Load(), lineno=749, col_offset=27), lineno=749, col_offset=25), BinOp(Name('b', Load(), lineno=749, col_offset=30), BitOr(), Name('a', Load(), lineno=749, col_offset=32), lineno=749, col_offset=30)], [], None, None, lineno=749, col_offset=8), lineno=749, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=750, col_offset=8), 'assertEqual', Load(), lineno=750, col_offset=8), [BinOp(Name('a', Load(), lineno=750, col_offset=25), BitXor(), Name('b', Load(), lineno=750, col_offset=27), lineno=750, col_offset=25), BinOp(Name('b', Load(), lineno=750, col_offset=30), BitXor(), Name('a', Load(), lineno=750, col_offset=32), lineno=750, col_offset=30)], [], None, None, lineno=750, col_offset=8), lineno=750, col_offset=8), If(Compare(Name('a', Load(), lineno=751, col_offset=11), [NotEq()], [Name('b', Load(), lineno=751, col_offset=16)], lineno=751, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=752, col_offset=12), 'assertNotEqual', Load(), lineno=752, col_offset=12), [BinOp(Name('a', Load(), lineno=752, col_offset=32), Sub(), Name('b', Load(), lineno=752, col_offset=34), lineno=752, col_offset=32), BinOp(Name('b', Load(), lineno=752, col_offset=37), Sub(), Name('a', Load(), lineno=752, col_offset=39), lineno=752, col_offset=37)], [], None, None, lineno=752, col_offset=12), lineno=752, col_offset=12)], [], lineno=751, col_offset=8)], [], lineno=746, col_offset=4), FunctionDef('test_reflexsive_relations', arguments([Name('self', Param(), lineno=754, col_offset=34)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=755, col_offset=8), Name('zero', Store(), lineno=755, col_offset=11)], Store(), lineno=755, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=755, col_offset=18), 'a', Load(), lineno=755, col_offset=18), Call(Name('Set', Load(), lineno=755, col_offset=26), [], [], None, None, lineno=755, col_offset=26)], Load(), lineno=755, col_offset=18), lineno=755, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=756, col_offset=8), 'assertEqual', Load(), lineno=756, col_offset=8), [BinOp(Name('a', Load(), lineno=756, col_offset=25), BitXor(), Name('a', Load(), lineno=756, col_offset=29), lineno=756, col_offset=25), Name('zero', Load(), lineno=756, col_offset=32)], [], None, None, lineno=756, col_offset=8), lineno=756, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=757, col_offset=8), 'assertEqual', Load(), lineno=757, col_offset=8), [BinOp(Name('a', Load(), lineno=757, col_offset=25), Sub(), Name('a', Load(), lineno=757, col_offset=29), lineno=757, col_offset=25), Name('zero', Load(), lineno=757, col_offset=32)], [], None, None, lineno=757, col_offset=8), lineno=757, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=758, col_offset=8), 'assertEqual', Load(), lineno=758, col_offset=8), [BinOp(Name('a', Load(), lineno=758, col_offset=25), BitOr(), Name('a', Load(), lineno=758, col_offset=29), lineno=758, col_offset=25), Name('a', Load(), lineno=758, col_offset=32)], [], None, None, lineno=758, col_offset=8), lineno=758, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=759, col_offset=8), 'assertEqual', Load(), lineno=759, col_offset=8), [BinOp(Name('a', Load(), lineno=759, col_offset=25), BitAnd(), Name('a', Load(), lineno=759, col_offset=29), lineno=759, col_offset=25), Name('a', Load(), lineno=759, col_offset=32)], [], None, None, lineno=759, col_offset=8), lineno=759, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=760, col_offset=8), 'assertTrue', Load(), lineno=760, col_offset=8), [Compare(Name('a', Load(), lineno=760, col_offset=24), [LtE()], [Name('a', Load(), lineno=760, col_offset=29)], lineno=760, col_offset=24)], [], None, None, lineno=760, col_offset=8), lineno=760, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=761, col_offset=8), 'assertTrue', Load(), lineno=761, col_offset=8), [Compare(Name('a', Load(), lineno=761, col_offset=24), [GtE()], [Name('a', Load(), lineno=761, col_offset=29)], lineno=761, col_offset=24)], [], None, None, lineno=761, col_offset=8), lineno=761, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=762, col_offset=8), 'assertTrue', Load(), lineno=762, col_offset=8), [Compare(Name('a', Load(), lineno=762, col_offset=24), [Eq()], [Name('a', Load(), lineno=762, col_offset=29)], lineno=762, col_offset=24)], [], None, None, lineno=762, col_offset=8), lineno=762, col_offset=8)], [], lineno=754, col_offset=4), FunctionDef('test_summations', arguments([Name('self', Param(), lineno=764, col_offset=24)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=766, col_offset=8), Name('b', Store(), lineno=766, col_offset=11)], Store(), lineno=766, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=766, col_offset=15), 'a', Load(), lineno=766, col_offset=15), Attribute(Name('self', Load(), lineno=766, col_offset=23), 'b', Load(), lineno=766, col_offset=23)], Load(), lineno=766, col_offset=15), lineno=766, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=767, col_offset=8), 'assertEqual', Load(), lineno=767, col_offset=8), [BinOp(BinOp(BinOp(Name('a', Load(), lineno=767, col_offset=26), Sub(), Name('b', Load(), lineno=767, col_offset=28), lineno=767, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=767, col_offset=32), BitAnd(), Name('b', Load(), lineno=767, col_offset=34), lineno=767, col_offset=32), lineno=767, col_offset=25), BitOr(), BinOp(Name('b', Load(), lineno=767, col_offset=38), Sub(), Name('a', Load(), lineno=767, col_offset=40), lineno=767, col_offset=38), lineno=767, col_offset=36), BinOp(Name('a', Load(), lineno=767, col_offset=44), BitOr(), Name('b', Load(), lineno=767, col_offset=46), lineno=767, col_offset=44)], [], None, None, lineno=767, col_offset=8), lineno=767, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=768, col_offset=8), 'assertEqual', Load(), lineno=768, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=768, col_offset=26), BitAnd(), Name('b', Load(), lineno=768, col_offset=28), lineno=768, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=768, col_offset=32), BitXor(), Name('b', Load(), lineno=768, col_offset=34), lineno=768, col_offset=32), lineno=768, col_offset=25), BinOp(Name('a', Load(), lineno=768, col_offset=38), BitOr(), Name('b', Load(), lineno=768, col_offset=40), lineno=768, col_offset=38)], [], None, None, lineno=768, col_offset=8), lineno=768, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=769, col_offset=8), 'assertEqual', Load(), lineno=769, col_offset=8), [BinOp(Name('a', Load(), lineno=769, col_offset=25), BitOr(), BinOp(Name('b', Load(), lineno=769, col_offset=28), Sub(), Name('a', Load(), lineno=769, col_offset=30), lineno=769, col_offset=28), lineno=769, col_offset=25), BinOp(Name('a', Load(), lineno=769, col_offset=34), BitOr(), Name('b', Load(), lineno=769, col_offset=36), lineno=769, col_offset=34)], [], None, None, lineno=769, col_offset=8), lineno=769, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=770, col_offset=8), 'assertEqual', Load(), lineno=770, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=770, col_offset=26), Sub(), Name('b', Load(), lineno=770, col_offset=28), lineno=770, col_offset=26), BitOr(), Name('b', Load(), lineno=770, col_offset=31), lineno=770, col_offset=25), BinOp(Name('a', Load(), lineno=770, col_offset=34), BitOr(), Name('b', Load(), lineno=770, col_offset=36), lineno=770, col_offset=34)], [], None, None, lineno=770, col_offset=8), lineno=770, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=771, col_offset=8), 'assertEqual', Load(), lineno=771, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=771, col_offset=26), Sub(), Name('b', Load(), lineno=771, col_offset=28), lineno=771, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=771, col_offset=32), BitAnd(), Name('b', Load(), lineno=771, col_offset=34), lineno=771, col_offset=32), lineno=771, col_offset=25), Name('a', Load(), lineno=771, col_offset=38)], [], None, None, lineno=771, col_offset=8), lineno=771, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=772, col_offset=8), 'assertEqual', Load(), lineno=772, col_offset=8), [BinOp(BinOp(Name('b', Load(), lineno=772, col_offset=26), Sub(), Name('a', Load(), lineno=772, col_offset=28), lineno=772, col_offset=26), BitOr(), BinOp(Name('a', Load(), lineno=772, col_offset=32), BitAnd(), Name('b', Load(), lineno=772, col_offset=34), lineno=772, col_offset=32), lineno=772, col_offset=25), Name('b', Load(), lineno=772, col_offset=38)], [], None, None, lineno=772, col_offset=8), lineno=772, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=773, col_offset=8), 'assertEqual', Load(), lineno=773, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=773, col_offset=26), Sub(), Name('b', Load(), lineno=773, col_offset=28), lineno=773, col_offset=26), BitOr(), BinOp(Name('b', Load(), lineno=773, col_offset=32), Sub(), Name('a', Load(), lineno=773, col_offset=34), lineno=773, col_offset=32), lineno=773, col_offset=25), BinOp(Name('a', Load(), lineno=773, col_offset=38), BitXor(), Name('b', Load(), lineno=773, col_offset=40), lineno=773, col_offset=38)], [], None, None, lineno=773, col_offset=8), lineno=773, col_offset=8)], [], lineno=764, col_offset=4), FunctionDef('test_exclusion', arguments([Name('self', Param(), lineno=775, col_offset=23)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=777, col_offset=8), Name('b', Store(), lineno=777, col_offset=11), Name('zero', Store(), lineno=777, col_offset=14)], Store(), lineno=777, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=777, col_offset=21), 'a', Load(), lineno=777, col_offset=21), Attribute(Name('self', Load(), lineno=777, col_offset=29), 'b', Load(), lineno=777, col_offset=29), Call(Name('Set', Load(), lineno=777, col_offset=37), [], [], None, None, lineno=777, col_offset=37)], Load(), lineno=777, col_offset=21), lineno=777, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=778, col_offset=8), 'assertEqual', Load(), lineno=778, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=778, col_offset=26), Sub(), Name('b', Load(), lineno=778, col_offset=28), lineno=778, col_offset=26), BitAnd(), Name('b', Load(), lineno=778, col_offset=31), lineno=778, col_offset=25), Name('zero', Load(), lineno=778, col_offset=34)], [], None, None, lineno=778, col_offset=8), lineno=778, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=779, col_offset=8), 'assertEqual', Load(), lineno=779, col_offset=8), [BinOp(BinOp(Name('b', Load(), lineno=779, col_offset=26), Sub(), Name('a', Load(), lineno=779, col_offset=28), lineno=779, col_offset=26), BitAnd(), Name('a', Load(), lineno=779, col_offset=31), lineno=779, col_offset=25), Name('zero', Load(), lineno=779, col_offset=34)], [], None, None, lineno=779, col_offset=8), lineno=779, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=780, col_offset=8), 'assertEqual', Load(), lineno=780, col_offset=8), [BinOp(BinOp(Name('a', Load(), lineno=780, col_offset=26), BitAnd(), Name('b', Load(), lineno=780, col_offset=28), lineno=780, col_offset=26), BitAnd(), BinOp(Name('a', Load(), lineno=780, col_offset=32), BitXor(), Name('b', Load(), lineno=780, col_offset=34), lineno=780, col_offset=32), lineno=780, col_offset=25), Name('zero', Load(), lineno=780, col_offset=38)], [], None, None, lineno=780, col_offset=8), lineno=780, col_offset=8)], [], lineno=775, col_offset=4), FunctionDef('test_cardinality_relations', arguments([Name('self', Param(), lineno=782, col_offset=35)], None, None, []), [Assign([Tuple([Name('a', Store(), lineno=783, col_offset=8), Name('b', Store(), lineno=783, col_offset=11)], Store(), lineno=783, col_offset=8)], Tuple([Attribute(Name('self', Load(), lineno=783, col_offset=15), 'a', Load(), lineno=783, col_offset=15), Attribute(Name('self', Load(), lineno=783, col_offset=23), 'b', Load(), lineno=783, col_offset=23)], Load(), lineno=783, col_offset=15), lineno=783, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=784, col_offset=8), 'assertEqual', Load(), lineno=784, col_offset=8), [Call(Name('len', Load(), lineno=784, col_offset=25), [Name('a', Load(), lineno=784, col_offset=29)], [], None, None, lineno=784, col_offset=25), BinOp(Call(Name('len', Load(), lineno=784, col_offset=33), [BinOp(Name('a', Load(), lineno=784, col_offset=37), Sub(), Name('b', Load(), lineno=784, col_offset=39), lineno=784, col_offset=37)], [], None, None, lineno=784, col_offset=33), Add(), Call(Name('len', Load(), lineno=784, col_offset=44), [BinOp(Name('a', Load(), lineno=784, col_offset=48), BitAnd(), Name('b', Load(), lineno=784, col_offset=50), lineno=784, col_offset=48)], [], None, None, lineno=784, col_offset=44), lineno=784, col_offset=33)], [], None, None, lineno=784, col_offset=8), lineno=784, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=785, col_offset=8), 'assertEqual', Load(), lineno=785, col_offset=8), [Call(Name('len', Load(), lineno=785, col_offset=25), [Name('b', Load(), lineno=785, col_offset=29)], [], None, None, lineno=785, col_offset=25), BinOp(Call(Name('len', Load(), lineno=785, col_offset=33), [BinOp(Name('b', Load(), lineno=785, col_offset=37), Sub(), Name('a', Load(), lineno=785, col_offset=39), lineno=785, col_offset=37)], [], None, None, lineno=785, col_offset=33), Add(), Call(Name('len', Load(), lineno=785, col_offset=44), [BinOp(Name('a', Load(), lineno=785, col_offset=48), BitAnd(), Name('b', Load(), lineno=785, col_offset=50), lineno=785, col_offset=48)], [], None, None, lineno=785, col_offset=44), lineno=785, col_offset=33)], [], None, None, lineno=785, col_offset=8), lineno=785, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=786, col_offset=8), 'assertEqual', Load(), lineno=786, col_offset=8), [Call(Name('len', Load(), lineno=786, col_offset=25), [BinOp(Name('a', Load(), lineno=786, col_offset=29), BitXor(), Name('b', Load(), lineno=786, col_offset=31), lineno=786, col_offset=29)], [], None, None, lineno=786, col_offset=25), BinOp(Call(Name('len', Load(), lineno=786, col_offset=35), [BinOp(Name('a', Load(), lineno=786, col_offset=39), Sub(), Name('b', Load(), lineno=786, col_offset=41), lineno=786, col_offset=39)], [], None, None, lineno=786, col_offset=35), Add(), Call(Name('len', Load(), lineno=786, col_offset=46), [BinOp(Name('b', Load(), lineno=786, col_offset=50), Sub(), Name('a', Load(), lineno=786, col_offset=52), lineno=786, col_offset=50)], [], None, None, lineno=786, col_offset=46), lineno=786, col_offset=35)], [], None, None, lineno=786, col_offset=8), lineno=786, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=787, col_offset=8), 'assertEqual', Load(), lineno=787, col_offset=8), [Call(Name('len', Load(), lineno=787, col_offset=25), [BinOp(Name('a', Load(), lineno=787, col_offset=29), BitOr(), Name('b', Load(), lineno=787, col_offset=31), lineno=787, col_offset=29)], [], None, None, lineno=787, col_offset=25), BinOp(BinOp(Call(Name('len', Load(), lineno=787, col_offset=35), [BinOp(Name('a', Load(), lineno=787, col_offset=39), Sub(), Name('b', Load(), lineno=787, col_offset=41), lineno=787, col_offset=39)], [], None, None, lineno=787, col_offset=35), Add(), Call(Name('len', Load(), lineno=787, col_offset=46), [BinOp(Name('a', Load(), lineno=787, col_offset=50), BitAnd(), Name('b', Load(), lineno=787, col_offset=52), lineno=787, col_offset=50)], [], None, None, lineno=787, col_offset=46), lineno=787, col_offset=35), Add(), Call(Name('len', Load(), lineno=787, col_offset=57), [BinOp(Name('b', Load(), lineno=787, col_offset=61), Sub(), Name('a', Load(), lineno=787, col_offset=63), lineno=787, col_offset=61)], [], None, None, lineno=787, col_offset=57), lineno=787, col_offset=55)], [], None, None, lineno=787, col_offset=8), lineno=787, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=788, col_offset=8), 'assertEqual', Load(), lineno=788, col_offset=8), [BinOp(Call(Name('len', Load(), lineno=788, col_offset=25), [BinOp(Name('a', Load(), lineno=788, col_offset=29), BitXor(), Name('b', Load(), lineno=788, col_offset=31), lineno=788, col_offset=29)], [], None, None, lineno=788, col_offset=25), Add(), Call(Name('len', Load(), lineno=788, col_offset=36), [BinOp(Name('a', Load(), lineno=788, col_offset=40), BitAnd(), Name('b', Load(), lineno=788, col_offset=42), lineno=788, col_offset=40)], [], None, None, lineno=788, col_offset=36), lineno=788, col_offset=25), Call(Name('len', Load(), lineno=788, col_offset=46), [BinOp(Name('a', Load(), lineno=788, col_offset=50), BitOr(), Name('b', Load(), lineno=788, col_offset=52), lineno=788, col_offset=50)], [], None, None, lineno=788, col_offset=46)], [], None, None, lineno=788, col_offset=8), lineno=788, col_offset=8)], [], lineno=782, col_offset=4)], [], lineno=731, col_offset=0), Assign([Name('libreftest', Store(), lineno=792, col_offset=0)], Str("\nExample from the Library Reference:  Doc/lib/libsets.tex\n\n>>> from sets import Set as Base  # override _repr to get sorted output\n>>> class Set(Base):\n...     def _repr(self):\n...         return Base._repr(self, sorted=True)\n>>> engineers = Set(['John', 'Jane', 'Jack', 'Janice'])\n>>> programmers = Set(['Jack', 'Sam', 'Susan', 'Janice'])\n>>> managers = Set(['Jane', 'Jack', 'Susan', 'Zack'])\n>>> employees = engineers | programmers | managers           # union\n>>> engineering_management = engineers & managers            # intersection\n>>> fulltime_management = managers - engineers - programmers # difference\n>>> engineers.add('Marvin')\n>>> print engineers\nSet(['Jack', 'Jane', 'Janice', 'John', 'Marvin'])\n>>> employees.issuperset(engineers)           # superset test\nFalse\n>>> employees.union_update(engineers)         # update from another set\n>>> employees.issuperset(engineers)\nTrue\n>>> for group in [engineers, programmers, managers, employees]:\n...     group.discard('Susan')                # unconditionally remove element\n...     print group\n...\nSet(['Jack', 'Jane', 'Janice', 'John', 'Marvin'])\nSet(['Jack', 'Janice', 'Sam'])\nSet(['Jack', 'Jane', 'Zack'])\nSet(['Jack', 'Jane', 'Janice', 'John', 'Marvin', 'Sam', 'Zack'])\n", lineno=821, col_offset=-1), lineno=792, col_offset=0), Assign([Name('__test__', Store(), lineno=825, col_offset=0)], Dict([Str('libreftest', lineno=825, col_offset=12)], [Name('libreftest', Load(), lineno=825, col_offset=27)], lineno=825, col_offset=11), lineno=825, col_offset=0), FunctionDef('test_main', arguments([Name('verbose', Param(), lineno=827, col_offset=14)], None, None, [Name('None', Load(), lineno=827, col_offset=22)]), [Import([alias('doctest', None)], lineno=828, col_offset=4), ImportFrom('test', [alias('test_sets', None)], 0, lineno=829, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=830, col_offset=4), 'run_unittest', Load(), lineno=830, col_offset=4), [Name('TestSetOfSets', Load(), lineno=831, col_offset=8), Name('TestExceptionPropagation', Load(), lineno=832, col_offset=8), Name('TestBasicOpsEmpty', Load(), lineno=833, col_offset=8), Name('TestBasicOpsSingleton', Load(), lineno=834, col_offset=8), Name('TestBasicOpsTuple', Load(), lineno=835, col_offset=8), Name('TestBasicOpsTriple', Load(), lineno=836, col_offset=8), Name('TestBinaryOps', Load(), lineno=837, col_offset=8), Name('TestUpdateOps', Load(), lineno=838, col_offset=8), Name('TestMutate', Load(), lineno=839, col_offset=8), Name('TestSubsetEqualEmpty', Load(), lineno=840, col_offset=8), Name('TestSubsetEqualNonEmpty', Load(), lineno=841, col_offset=8), Name('TestSubsetEmptyNonEmpty', Load(), lineno=842, col_offset=8), Name('TestSubsetPartial', Load(), lineno=843, col_offset=8), Name('TestSubsetNonOverlap', Load(), lineno=844, col_offset=8), Name('TestOnlySetsNumeric', Load(), lineno=845, col_offset=8), Name('TestOnlySetsDict', Load(), lineno=846, col_offset=8), Name('TestOnlySetsOperator', Load(), lineno=847, col_offset=8), Name('TestOnlySetsTuple', Load(), lineno=848, col_offset=8), Name('TestOnlySetsString', Load(), lineno=849, col_offset=8), Name('TestOnlySetsGenerator', Load(), lineno=850, col_offset=8), Name('TestOnlySetsofSets', Load(), lineno=851, col_offset=8), Name('TestCopyingEmpty', Load(), lineno=852, col_offset=8), Name('TestCopyingSingleton', Load(), lineno=853, col_offset=8), Name('TestCopyingTriple', Load(), lineno=854, col_offset=8), Name('TestCopyingTuple', Load(), lineno=855, col_offset=8), Name('TestCopyingNested', Load(), lineno=856, col_offset=8), Name('TestIdentities', Load(), lineno=857, col_offset=8), Call(Attribute(Name('doctest', Load(), lineno=858, col_offset=8), 'DocTestSuite', Load(), lineno=858, col_offset=8), [Name('test_sets', Load(), lineno=858, col_offset=29)], [], None, None, lineno=858, col_offset=8)], [], None, None, lineno=830, col_offset=4), lineno=830, col_offset=4)], [], lineno=827, col_offset=0), If(Compare(Name('__name__', Load(), lineno=861, col_offset=3), [Eq()], [Str('__main__', lineno=861, col_offset=15)], lineno=861, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=862, col_offset=4), [], [keyword('verbose', Name('True', Load(), lineno=862, col_offset=22))], None, None, lineno=862, col_offset=4), lineno=862, col_offset=4)], [], lineno=861, col_offset=0)])
