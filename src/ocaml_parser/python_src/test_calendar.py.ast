Module([Import([alias('calendar', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=4, col_offset=0), Import([alias('locale', None)], lineno=5, col_offset=0), Assign([Name('result_2004_text', Store(), lineno=8, col_offset=0)], Str('\n                                  2004\n\n      January                   February                   March\nMo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n          1  2  3  4                         1       1  2  3  4  5  6  7\n 5  6  7  8  9 10 11       2  3  4  5  6  7  8       8  9 10 11 12 13 14\n12 13 14 15 16 17 18       9 10 11 12 13 14 15      15 16 17 18 19 20 21\n19 20 21 22 23 24 25      16 17 18 19 20 21 22      22 23 24 25 26 27 28\n26 27 28 29 30 31         23 24 25 26 27 28 29      29 30 31\n\n       April                      May                       June\nMo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n          1  2  3  4                      1  2          1  2  3  4  5  6\n 5  6  7  8  9 10 11       3  4  5  6  7  8  9       7  8  9 10 11 12 13\n12 13 14 15 16 17 18      10 11 12 13 14 15 16      14 15 16 17 18 19 20\n19 20 21 22 23 24 25      17 18 19 20 21 22 23      21 22 23 24 25 26 27\n26 27 28 29 30            24 25 26 27 28 29 30      28 29 30\n                          31\n\n        July                     August                  September\nMo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n          1  2  3  4                         1             1  2  3  4  5\n 5  6  7  8  9 10 11       2  3  4  5  6  7  8       6  7  8  9 10 11 12\n12 13 14 15 16 17 18       9 10 11 12 13 14 15      13 14 15 16 17 18 19\n19 20 21 22 23 24 25      16 17 18 19 20 21 22      20 21 22 23 24 25 26\n26 27 28 29 30 31         23 24 25 26 27 28 29      27 28 29 30\n                          30 31\n\n      October                   November                  December\nMo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n             1  2  3       1  2  3  4  5  6  7             1  2  3  4  5\n 4  5  6  7  8  9 10       8  9 10 11 12 13 14       6  7  8  9 10 11 12\n11 12 13 14 15 16 17      15 16 17 18 19 20 21      13 14 15 16 17 18 19\n18 19 20 21 22 23 24      22 23 24 25 26 27 28      20 21 22 23 24 25 26\n25 26 27 28 29 30 31      29 30                     27 28 29 30 31\n', lineno=44, col_offset=-1), lineno=8, col_offset=0), Assign([Name('result_2004_html', Store(), lineno=46, col_offset=0)], Str('\n<?xml version="1.0" encoding="ascii"?>\n<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=ascii" />\n<link rel="stylesheet" type="text/css" href="calendar.css" />\n<title>Calendar for 2004</title>\n</head>\n<body>\n<table border="0" cellpadding="0" cellspacing="0" class="year">\n<tr><th colspan="3" class="year">2004</th></tr><tr><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">January</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="thu">1</td><td class="fri">2</td><td class="sat">3</td><td class="sun">4</td></tr>\n<tr><td class="mon">5</td><td class="tue">6</td><td class="wed">7</td><td class="thu">8</td><td class="fri">9</td><td class="sat">10</td><td class="sun">11</td></tr>\n<tr><td class="mon">12</td><td class="tue">13</td><td class="wed">14</td><td class="thu">15</td><td class="fri">16</td><td class="sat">17</td><td class="sun">18</td></tr>\n<tr><td class="mon">19</td><td class="tue">20</td><td class="wed">21</td><td class="thu">22</td><td class="fri">23</td><td class="sat">24</td><td class="sun">25</td></tr>\n<tr><td class="mon">26</td><td class="tue">27</td><td class="wed">28</td><td class="thu">29</td><td class="fri">30</td><td class="sat">31</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">February</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="sun">1</td></tr>\n<tr><td class="mon">2</td><td class="tue">3</td><td class="wed">4</td><td class="thu">5</td><td class="fri">6</td><td class="sat">7</td><td class="sun">8</td></tr>\n<tr><td class="mon">9</td><td class="tue">10</td><td class="wed">11</td><td class="thu">12</td><td class="fri">13</td><td class="sat">14</td><td class="sun">15</td></tr>\n<tr><td class="mon">16</td><td class="tue">17</td><td class="wed">18</td><td class="thu">19</td><td class="fri">20</td><td class="sat">21</td><td class="sun">22</td></tr>\n<tr><td class="mon">23</td><td class="tue">24</td><td class="wed">25</td><td class="thu">26</td><td class="fri">27</td><td class="sat">28</td><td class="sun">29</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">March</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="mon">1</td><td class="tue">2</td><td class="wed">3</td><td class="thu">4</td><td class="fri">5</td><td class="sat">6</td><td class="sun">7</td></tr>\n<tr><td class="mon">8</td><td class="tue">9</td><td class="wed">10</td><td class="thu">11</td><td class="fri">12</td><td class="sat">13</td><td class="sun">14</td></tr>\n<tr><td class="mon">15</td><td class="tue">16</td><td class="wed">17</td><td class="thu">18</td><td class="fri">19</td><td class="sat">20</td><td class="sun">21</td></tr>\n<tr><td class="mon">22</td><td class="tue">23</td><td class="wed">24</td><td class="thu">25</td><td class="fri">26</td><td class="sat">27</td><td class="sun">28</td></tr>\n<tr><td class="mon">29</td><td class="tue">30</td><td class="wed">31</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td></tr><tr><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">April</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="thu">1</td><td class="fri">2</td><td class="sat">3</td><td class="sun">4</td></tr>\n<tr><td class="mon">5</td><td class="tue">6</td><td class="wed">7</td><td class="thu">8</td><td class="fri">9</td><td class="sat">10</td><td class="sun">11</td></tr>\n<tr><td class="mon">12</td><td class="tue">13</td><td class="wed">14</td><td class="thu">15</td><td class="fri">16</td><td class="sat">17</td><td class="sun">18</td></tr>\n<tr><td class="mon">19</td><td class="tue">20</td><td class="wed">21</td><td class="thu">22</td><td class="fri">23</td><td class="sat">24</td><td class="sun">25</td></tr>\n<tr><td class="mon">26</td><td class="tue">27</td><td class="wed">28</td><td class="thu">29</td><td class="fri">30</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">May</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="sat">1</td><td class="sun">2</td></tr>\n<tr><td class="mon">3</td><td class="tue">4</td><td class="wed">5</td><td class="thu">6</td><td class="fri">7</td><td class="sat">8</td><td class="sun">9</td></tr>\n<tr><td class="mon">10</td><td class="tue">11</td><td class="wed">12</td><td class="thu">13</td><td class="fri">14</td><td class="sat">15</td><td class="sun">16</td></tr>\n<tr><td class="mon">17</td><td class="tue">18</td><td class="wed">19</td><td class="thu">20</td><td class="fri">21</td><td class="sat">22</td><td class="sun">23</td></tr>\n<tr><td class="mon">24</td><td class="tue">25</td><td class="wed">26</td><td class="thu">27</td><td class="fri">28</td><td class="sat">29</td><td class="sun">30</td></tr>\n<tr><td class="mon">31</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">June</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="tue">1</td><td class="wed">2</td><td class="thu">3</td><td class="fri">4</td><td class="sat">5</td><td class="sun">6</td></tr>\n<tr><td class="mon">7</td><td class="tue">8</td><td class="wed">9</td><td class="thu">10</td><td class="fri">11</td><td class="sat">12</td><td class="sun">13</td></tr>\n<tr><td class="mon">14</td><td class="tue">15</td><td class="wed">16</td><td class="thu">17</td><td class="fri">18</td><td class="sat">19</td><td class="sun">20</td></tr>\n<tr><td class="mon">21</td><td class="tue">22</td><td class="wed">23</td><td class="thu">24</td><td class="fri">25</td><td class="sat">26</td><td class="sun">27</td></tr>\n<tr><td class="mon">28</td><td class="tue">29</td><td class="wed">30</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td></tr><tr><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">July</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="thu">1</td><td class="fri">2</td><td class="sat">3</td><td class="sun">4</td></tr>\n<tr><td class="mon">5</td><td class="tue">6</td><td class="wed">7</td><td class="thu">8</td><td class="fri">9</td><td class="sat">10</td><td class="sun">11</td></tr>\n<tr><td class="mon">12</td><td class="tue">13</td><td class="wed">14</td><td class="thu">15</td><td class="fri">16</td><td class="sat">17</td><td class="sun">18</td></tr>\n<tr><td class="mon">19</td><td class="tue">20</td><td class="wed">21</td><td class="thu">22</td><td class="fri">23</td><td class="sat">24</td><td class="sun">25</td></tr>\n<tr><td class="mon">26</td><td class="tue">27</td><td class="wed">28</td><td class="thu">29</td><td class="fri">30</td><td class="sat">31</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">August</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="sun">1</td></tr>\n<tr><td class="mon">2</td><td class="tue">3</td><td class="wed">4</td><td class="thu">5</td><td class="fri">6</td><td class="sat">7</td><td class="sun">8</td></tr>\n<tr><td class="mon">9</td><td class="tue">10</td><td class="wed">11</td><td class="thu">12</td><td class="fri">13</td><td class="sat">14</td><td class="sun">15</td></tr>\n<tr><td class="mon">16</td><td class="tue">17</td><td class="wed">18</td><td class="thu">19</td><td class="fri">20</td><td class="sat">21</td><td class="sun">22</td></tr>\n<tr><td class="mon">23</td><td class="tue">24</td><td class="wed">25</td><td class="thu">26</td><td class="fri">27</td><td class="sat">28</td><td class="sun">29</td></tr>\n<tr><td class="mon">30</td><td class="tue">31</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">September</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="wed">1</td><td class="thu">2</td><td class="fri">3</td><td class="sat">4</td><td class="sun">5</td></tr>\n<tr><td class="mon">6</td><td class="tue">7</td><td class="wed">8</td><td class="thu">9</td><td class="fri">10</td><td class="sat">11</td><td class="sun">12</td></tr>\n<tr><td class="mon">13</td><td class="tue">14</td><td class="wed">15</td><td class="thu">16</td><td class="fri">17</td><td class="sat">18</td><td class="sun">19</td></tr>\n<tr><td class="mon">20</td><td class="tue">21</td><td class="wed">22</td><td class="thu">23</td><td class="fri">24</td><td class="sat">25</td><td class="sun">26</td></tr>\n<tr><td class="mon">27</td><td class="tue">28</td><td class="wed">29</td><td class="thu">30</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td></tr><tr><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">October</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="fri">1</td><td class="sat">2</td><td class="sun">3</td></tr>\n<tr><td class="mon">4</td><td class="tue">5</td><td class="wed">6</td><td class="thu">7</td><td class="fri">8</td><td class="sat">9</td><td class="sun">10</td></tr>\n<tr><td class="mon">11</td><td class="tue">12</td><td class="wed">13</td><td class="thu">14</td><td class="fri">15</td><td class="sat">16</td><td class="sun">17</td></tr>\n<tr><td class="mon">18</td><td class="tue">19</td><td class="wed">20</td><td class="thu">21</td><td class="fri">22</td><td class="sat">23</td><td class="sun">24</td></tr>\n<tr><td class="mon">25</td><td class="tue">26</td><td class="wed">27</td><td class="thu">28</td><td class="fri">29</td><td class="sat">30</td><td class="sun">31</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">November</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="mon">1</td><td class="tue">2</td><td class="wed">3</td><td class="thu">4</td><td class="fri">5</td><td class="sat">6</td><td class="sun">7</td></tr>\n<tr><td class="mon">8</td><td class="tue">9</td><td class="wed">10</td><td class="thu">11</td><td class="fri">12</td><td class="sat">13</td><td class="sun">14</td></tr>\n<tr><td class="mon">15</td><td class="tue">16</td><td class="wed">17</td><td class="thu">18</td><td class="fri">19</td><td class="sat">20</td><td class="sun">21</td></tr>\n<tr><td class="mon">22</td><td class="tue">23</td><td class="wed">24</td><td class="thu">25</td><td class="fri">26</td><td class="sat">27</td><td class="sun">28</td></tr>\n<tr><td class="mon">29</td><td class="tue">30</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td><td><table border="0" cellpadding="0" cellspacing="0" class="month">\n<tr><th colspan="7" class="month">December</th></tr>\n<tr><th class="mon">Mon</th><th class="tue">Tue</th><th class="wed">Wed</th><th class="thu">Thu</th><th class="fri">Fri</th><th class="sat">Sat</th><th class="sun">Sun</th></tr>\n<tr><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td><td class="wed">1</td><td class="thu">2</td><td class="fri">3</td><td class="sat">4</td><td class="sun">5</td></tr>\n<tr><td class="mon">6</td><td class="tue">7</td><td class="wed">8</td><td class="thu">9</td><td class="fri">10</td><td class="sat">11</td><td class="sun">12</td></tr>\n<tr><td class="mon">13</td><td class="tue">14</td><td class="wed">15</td><td class="thu">16</td><td class="fri">17</td><td class="sat">18</td><td class="sun">19</td></tr>\n<tr><td class="mon">20</td><td class="tue">21</td><td class="wed">22</td><td class="thu">23</td><td class="fri">24</td><td class="sat">25</td><td class="sun">26</td></tr>\n<tr><td class="mon">27</td><td class="tue">28</td><td class="wed">29</td><td class="thu">30</td><td class="fri">31</td><td class="noday">&nbsp;</td><td class="noday">&nbsp;</td></tr>\n</table>\n</td></tr></table></body>\n</html>\n', lineno=169, col_offset=-1), lineno=46, col_offset=0), ClassDef('OutputTestCase', [Attribute(Name('unittest', Load(), lineno=172, col_offset=21), 'TestCase', Load(), lineno=172, col_offset=21)], [FunctionDef('normalize_calendar', arguments([Name('self', Param(), lineno=173, col_offset=27), Name('s', Param(), lineno=173, col_offset=33)], None, None, []), [FunctionDef('neitherspacenordigit', arguments([Name('c', Param(), lineno=175, col_offset=33)], None, None, []), [Return(BoolOp(And(), [UnaryOp(Not(), Call(Attribute(Name('c', Load(), lineno=176, col_offset=23), 'isspace', Load(), lineno=176, col_offset=23), [], [], None, None, lineno=176, col_offset=23), lineno=176, col_offset=19), UnaryOp(Not(), Call(Attribute(Name('c', Load(), lineno=176, col_offset=43), 'isdigit', Load(), lineno=176, col_offset=43), [], [], None, None, lineno=176, col_offset=43), lineno=176, col_offset=39)], lineno=176, col_offset=19), lineno=176, col_offset=12)], [], lineno=175, col_offset=8), Assign([Name('lines', Store(), lineno=178, col_offset=8)], List([], Load(), lineno=178, col_offset=16), lineno=178, col_offset=8), For(Name('line', Store(), lineno=179, col_offset=12), Call(Attribute(Name('s', Load(), lineno=179, col_offset=20), 'splitlines', Load(), lineno=179, col_offset=20), [Name('False', Load(), lineno=179, col_offset=33)], [], None, None, lineno=179, col_offset=20), [If(BoolOp(And(), [Name('line', Load(), lineno=181, col_offset=15), UnaryOp(Not(), Call(Name('filter', Load(), lineno=181, col_offset=28), [Name('neitherspacenordigit', Load(), lineno=181, col_offset=35), Name('line', Load(), lineno=181, col_offset=57)], [], None, None, lineno=181, col_offset=28), lineno=181, col_offset=24)], lineno=181, col_offset=15), [Expr(Call(Attribute(Name('lines', Load(), lineno=182, col_offset=16), 'append', Load(), lineno=182, col_offset=16), [Name('line', Load(), lineno=182, col_offset=29)], [], None, None, lineno=182, col_offset=16), lineno=182, col_offset=16)], [], lineno=181, col_offset=12)], [], lineno=179, col_offset=8), Return(Name('lines', Load(), lineno=183, col_offset=15), lineno=183, col_offset=8)], [], lineno=173, col_offset=4), FunctionDef('test_output', arguments([Name('self', Param(), lineno=185, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=8), 'assertEqual', Load(), lineno=186, col_offset=8), [Call(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'normalize_calendar', Load(), lineno=187, col_offset=12), [Call(Attribute(Name('calendar', Load(), lineno=187, col_offset=36), 'calendar', Load(), lineno=187, col_offset=36), [Num(2004, lineno=187, col_offset=54)], [], None, None, lineno=187, col_offset=36)], [], None, None, lineno=187, col_offset=12), Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), 'normalize_calendar', Load(), lineno=188, col_offset=12), [Name('result_2004_text', Load(), lineno=188, col_offset=36)], [], None, None, lineno=188, col_offset=12)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=185, col_offset=4), FunctionDef('test_output_textcalendar', arguments([Name('self', Param(), lineno=191, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Call(Attribute(Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=193, col_offset=12), 'TextCalendar', Load(), lineno=193, col_offset=12), [], [], None, None, lineno=193, col_offset=12), 'formatyear', Load(), lineno=193, col_offset=12), [Num(2004, lineno=193, col_offset=47)], [], None, None, lineno=193, col_offset=12), 'strip', Load(), lineno=193, col_offset=12), [], [], None, None, lineno=193, col_offset=12), Call(Attribute(Name('result_2004_text', Load(), lineno=194, col_offset=12), 'strip', Load(), lineno=194, col_offset=12), [], [], None, None, lineno=194, col_offset=12)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_output_htmlcalendar', arguments([Name('self', Param(), lineno=197, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Attribute(Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=199, col_offset=12), 'HTMLCalendar', Load(), lineno=199, col_offset=12), [], [], None, None, lineno=199, col_offset=12), 'formatyearpage', Load(), lineno=199, col_offset=12), [Num(2004, lineno=199, col_offset=51)], [], None, None, lineno=199, col_offset=12), 'strip', Load(), lineno=199, col_offset=12), [], [], None, None, lineno=199, col_offset=12), Call(Attribute(Name('result_2004_html', Load(), lineno=200, col_offset=12), 'strip', Load(), lineno=200, col_offset=12), [], [], None, None, lineno=200, col_offset=12)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=197, col_offset=4)], [], lineno=172, col_offset=0), ClassDef('CalendarTestCase', [Attribute(Name('unittest', Load(), lineno=204, col_offset=23), 'TestCase', Load(), lineno=204, col_offset=23)], [FunctionDef('test_isleap', arguments([Name('self', Param(), lineno=205, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertEqual', Load(), lineno=210, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=210, col_offset=25), 'isleap', Load(), lineno=210, col_offset=25), [Num(2000, lineno=210, col_offset=41)], [], None, None, lineno=210, col_offset=25), Num(1, lineno=210, col_offset=48)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=211, col_offset=25), 'isleap', Load(), lineno=211, col_offset=25), [Num(2001, lineno=211, col_offset=41)], [], None, None, lineno=211, col_offset=25), Num(0, lineno=211, col_offset=48)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertEqual', Load(), lineno=212, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=212, col_offset=25), 'isleap', Load(), lineno=212, col_offset=25), [Num(2002, lineno=212, col_offset=41)], [], None, None, lineno=212, col_offset=25), Num(0, lineno=212, col_offset=48)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=8), 'assertEqual', Load(), lineno=213, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=213, col_offset=25), 'isleap', Load(), lineno=213, col_offset=25), [Num(2003, lineno=213, col_offset=41)], [], None, None, lineno=213, col_offset=25), Num(0, lineno=213, col_offset=48)], [], None, None, lineno=213, col_offset=8), lineno=213, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('test_setfirstweekday', arguments([Name('self', Param(), lineno=215, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=8), 'assertRaises', Load(), lineno=216, col_offset=8), [Name('ValueError', Load(), lineno=216, col_offset=26), Attribute(Name('calendar', Load(), lineno=216, col_offset=38), 'setfirstweekday', Load(), lineno=216, col_offset=38), Str('flabber', lineno=216, col_offset=64)], [], None, None, lineno=216, col_offset=8), lineno=216, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=217, col_offset=8), 'assertRaises', Load(), lineno=217, col_offset=8), [Name('ValueError', Load(), lineno=217, col_offset=26), Attribute(Name('calendar', Load(), lineno=217, col_offset=38), 'setfirstweekday', Load(), lineno=217, col_offset=38), Num(-1, lineno=217, col_offset=65)], [], None, None, lineno=217, col_offset=8), lineno=217, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=8), 'assertRaises', Load(), lineno=218, col_offset=8), [Name('ValueError', Load(), lineno=218, col_offset=26), Attribute(Name('calendar', Load(), lineno=218, col_offset=38), 'setfirstweekday', Load(), lineno=218, col_offset=38), Num(200, lineno=218, col_offset=64)], [], None, None, lineno=218, col_offset=8), lineno=218, col_offset=8), Assign([Name('orig', Store(), lineno=219, col_offset=8)], Call(Attribute(Name('calendar', Load(), lineno=219, col_offset=15), 'firstweekday', Load(), lineno=219, col_offset=15), [], [], None, None, lineno=219, col_offset=15), lineno=219, col_offset=8), Expr(Call(Attribute(Name('calendar', Load(), lineno=220, col_offset=8), 'setfirstweekday', Load(), lineno=220, col_offset=8), [Attribute(Name('calendar', Load(), lineno=220, col_offset=33), 'SUNDAY', Load(), lineno=220, col_offset=33)], [], None, None, lineno=220, col_offset=8), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertEqual', Load(), lineno=221, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=221, col_offset=25), 'firstweekday', Load(), lineno=221, col_offset=25), [], [], None, None, lineno=221, col_offset=25), Attribute(Name('calendar', Load(), lineno=221, col_offset=50), 'SUNDAY', Load(), lineno=221, col_offset=50)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('calendar', Load(), lineno=222, col_offset=8), 'setfirstweekday', Load(), lineno=222, col_offset=8), [Attribute(Name('calendar', Load(), lineno=222, col_offset=33), 'MONDAY', Load(), lineno=222, col_offset=33)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'assertEqual', Load(), lineno=223, col_offset=8), [Call(Attribute(Name('calendar', Load(), lineno=223, col_offset=25), 'firstweekday', Load(), lineno=223, col_offset=25), [], [], None, None, lineno=223, col_offset=25), Attribute(Name('calendar', Load(), lineno=223, col_offset=50), 'MONDAY', Load(), lineno=223, col_offset=50)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('calendar', Load(), lineno=224, col_offset=8), 'setfirstweekday', Load(), lineno=224, col_offset=8), [Name('orig', Load(), lineno=224, col_offset=33)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8)], [], lineno=215, col_offset=4), FunctionDef('test_enumerateweekdays', arguments([Name('self', Param(), lineno=226, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=8), 'assertRaises', Load(), lineno=227, col_offset=8), [Name('IndexError', Load(), lineno=227, col_offset=26), Attribute(Attribute(Name('calendar', Load(), lineno=227, col_offset=38), 'day_abbr', Load(), lineno=227, col_offset=38), '__getitem__', Load(), lineno=227, col_offset=38), Num(-10, lineno=227, col_offset=70)], [], None, None, lineno=227, col_offset=8), lineno=227, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=228, col_offset=8), 'assertRaises', Load(), lineno=228, col_offset=8), [Name('IndexError', Load(), lineno=228, col_offset=26), Attribute(Attribute(Name('calendar', Load(), lineno=228, col_offset=38), 'day_name', Load(), lineno=228, col_offset=38), '__getitem__', Load(), lineno=228, col_offset=38), Num(10, lineno=228, col_offset=69)], [], None, None, lineno=228, col_offset=8), lineno=228, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Call(Name('len', Load(), lineno=229, col_offset=25), [ListComp(Name('d', Load(), lineno=229, col_offset=30), [comprehension(Name('d', Store(), lineno=229, col_offset=36), Attribute(Name('calendar', Load(), lineno=229, col_offset=41), 'day_abbr', Load(), lineno=229, col_offset=41), [])], lineno=229, col_offset=30)], [], None, None, lineno=229, col_offset=25), Num(7, lineno=229, col_offset=62)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=226, col_offset=4), FunctionDef('test_days', arguments([Name('self', Param(), lineno=231, col_offset=18)], None, None, []), [For(Name('attr', Store(), lineno=232, col_offset=12), Tuple([Str('day_name', lineno=232, col_offset=20), Str('day_abbr', lineno=232, col_offset=32)], Load(), lineno=232, col_offset=20), [Assign([Name('value', Store(), lineno=233, col_offset=12)], Call(Name('getattr', Load(), lineno=233, col_offset=20), [Name('calendar', Load(), lineno=233, col_offset=28), Name('attr', Load(), lineno=233, col_offset=38)], [], None, None, lineno=233, col_offset=20), lineno=233, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=12), 'assertEqual', Load(), lineno=234, col_offset=12), [Call(Name('len', Load(), lineno=234, col_offset=29), [Name('value', Load(), lineno=234, col_offset=33)], [], None, None, lineno=234, col_offset=29), Num(7, lineno=234, col_offset=41)], [], None, None, lineno=234, col_offset=12), lineno=234, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=12), 'assertEqual', Load(), lineno=235, col_offset=12), [Call(Name('len', Load(), lineno=235, col_offset=29), [Subscript(Name('value', Load(), lineno=235, col_offset=33), Slice(None, None, None), Load(), lineno=235, col_offset=33)], [], None, None, lineno=235, col_offset=29), Num(7, lineno=235, col_offset=44)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=12), 'assertEqual', Load(), lineno=237, col_offset=12), [Call(Name('len', Load(), lineno=237, col_offset=29), [Call(Name('set', Load(), lineno=237, col_offset=33), [Name('value', Load(), lineno=237, col_offset=37)], [], None, None, lineno=237, col_offset=33)], [], None, None, lineno=237, col_offset=29), Num(7, lineno=237, col_offset=46)], [], None, None, lineno=237, col_offset=12), lineno=237, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=12), 'assertEqual', Load(), lineno=239, col_offset=12), [Subscript(Name('value', Load(), lineno=239, col_offset=29), Slice(None, None, Num(-1, lineno=239, col_offset=38)), Load(), lineno=239, col_offset=29), Call(Name('list', Load(), lineno=239, col_offset=42), [Call(Name('reversed', Load(), lineno=239, col_offset=47), [Name('value', Load(), lineno=239, col_offset=56)], [], None, None, lineno=239, col_offset=47)], [], None, None, lineno=239, col_offset=42)], [], None, None, lineno=239, col_offset=12), lineno=239, col_offset=12)], [], lineno=232, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('test_months', arguments([Name('self', Param(), lineno=241, col_offset=20)], None, None, []), [For(Name('attr', Store(), lineno=242, col_offset=12), Tuple([Str('month_name', lineno=242, col_offset=20), Str('month_abbr', lineno=242, col_offset=34)], Load(), lineno=242, col_offset=20), [Assign([Name('value', Store(), lineno=243, col_offset=12)], Call(Name('getattr', Load(), lineno=243, col_offset=20), [Name('calendar', Load(), lineno=243, col_offset=28), Name('attr', Load(), lineno=243, col_offset=38)], [], None, None, lineno=243, col_offset=20), lineno=243, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=12), 'assertEqual', Load(), lineno=244, col_offset=12), [Call(Name('len', Load(), lineno=244, col_offset=29), [Name('value', Load(), lineno=244, col_offset=33)], [], None, None, lineno=244, col_offset=29), Num(13, lineno=244, col_offset=41)], [], None, None, lineno=244, col_offset=12), lineno=244, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=12), 'assertEqual', Load(), lineno=245, col_offset=12), [Call(Name('len', Load(), lineno=245, col_offset=29), [Subscript(Name('value', Load(), lineno=245, col_offset=33), Slice(None, None, None), Load(), lineno=245, col_offset=33)], [], None, None, lineno=245, col_offset=29), Num(13, lineno=245, col_offset=44)], [], None, None, lineno=245, col_offset=12), lineno=245, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=12), 'assertEqual', Load(), lineno=246, col_offset=12), [Subscript(Name('value', Load(), lineno=246, col_offset=29), Index(Num(0, lineno=246, col_offset=35)), Load(), lineno=246, col_offset=29), Str('', lineno=246, col_offset=39)], [], None, None, lineno=246, col_offset=12), lineno=246, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=12), 'assertEqual', Load(), lineno=248, col_offset=12), [Call(Name('len', Load(), lineno=248, col_offset=29), [Call(Name('set', Load(), lineno=248, col_offset=33), [Name('value', Load(), lineno=248, col_offset=37)], [], None, None, lineno=248, col_offset=33)], [], None, None, lineno=248, col_offset=29), Num(13, lineno=248, col_offset=46)], [], None, None, lineno=248, col_offset=12), lineno=248, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=12), 'assertEqual', Load(), lineno=250, col_offset=12), [Subscript(Name('value', Load(), lineno=250, col_offset=29), Slice(None, None, Num(-1, lineno=250, col_offset=38)), Load(), lineno=250, col_offset=29), Call(Name('list', Load(), lineno=250, col_offset=42), [Call(Name('reversed', Load(), lineno=250, col_offset=47), [Name('value', Load(), lineno=250, col_offset=56)], [], None, None, lineno=250, col_offset=47)], [], None, None, lineno=250, col_offset=42)], [], None, None, lineno=250, col_offset=12), lineno=250, col_offset=12)], [], lineno=242, col_offset=8)], [], lineno=241, col_offset=4), FunctionDef('test_localecalendars', arguments([Name('self', Param(), lineno=252, col_offset=29)], None, None, []), [Assign([Name('old_october', Store(), lineno=255, col_offset=8)], Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=255, col_offset=22), 'TextCalendar', Load(), lineno=255, col_offset=22), [], [], None, None, lineno=255, col_offset=22), 'formatmonthname', Load(), lineno=255, col_offset=22), [Num(2010, lineno=255, col_offset=62), Num(10, lineno=255, col_offset=68), Num(10, lineno=255, col_offset=72)], [], None, None, lineno=255, col_offset=22), lineno=255, col_offset=8), TryExcept([Expr(Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=257, col_offset=12), 'LocaleTextCalendar', Load(), lineno=257, col_offset=12), [], [keyword('locale', Str('', lineno=257, col_offset=47))], None, None, lineno=257, col_offset=12), 'formatmonthname', Load(), lineno=257, col_offset=12), [Num(2010, lineno=257, col_offset=67), Num(10, lineno=257, col_offset=73), Num(10, lineno=257, col_offset=77)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=12)], [ExceptHandler(Attribute(Name('locale', Load(), lineno=258, col_offset=15), 'Error', Load(), lineno=258, col_offset=15), None, [Return(None, lineno=260, col_offset=12)], lineno=258, col_offset=8)], [], lineno=256, col_offset=8), Expr(Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=261, col_offset=8), 'LocaleHTMLCalendar', Load(), lineno=261, col_offset=8), [], [keyword('locale', Str('', lineno=261, col_offset=43))], None, None, lineno=261, col_offset=8), 'formatmonthname', Load(), lineno=261, col_offset=8), [Num(2010, lineno=261, col_offset=63), Num(10, lineno=261, col_offset=69)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8), Assign([Name('new_october', Store(), lineno=262, col_offset=8)], Call(Attribute(Call(Attribute(Name('calendar', Load(), lineno=262, col_offset=22), 'TextCalendar', Load(), lineno=262, col_offset=22), [], [], None, None, lineno=262, col_offset=22), 'formatmonthname', Load(), lineno=262, col_offset=22), [Num(2010, lineno=262, col_offset=62), Num(10, lineno=262, col_offset=68), Num(10, lineno=262, col_offset=72)], [], None, None, lineno=262, col_offset=22), lineno=262, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=263, col_offset=8), 'assertEquals', Load(), lineno=263, col_offset=8), [Name('old_october', Load(), lineno=263, col_offset=26), Name('new_october', Load(), lineno=263, col_offset=39)], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8)], [], lineno=252, col_offset=4)], [], lineno=204, col_offset=0), ClassDef('MonthCalendarTestCase', [Attribute(Name('unittest', Load(), lineno=266, col_offset=28), 'TestCase', Load(), lineno=266, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=267, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=268, col_offset=8), 'oldfirstweekday', Store(), lineno=268, col_offset=8)], Call(Attribute(Name('calendar', Load(), lineno=268, col_offset=31), 'firstweekday', Load(), lineno=268, col_offset=31), [], [], None, None, lineno=268, col_offset=31), lineno=268, col_offset=8), Expr(Call(Attribute(Name('calendar', Load(), lineno=269, col_offset=8), 'setfirstweekday', Load(), lineno=269, col_offset=8), [Attribute(Name('self', Load(), lineno=269, col_offset=33), 'firstweekday', Load(), lineno=269, col_offset=33)], [], None, None, lineno=269, col_offset=8), lineno=269, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=271, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('calendar', Load(), lineno=272, col_offset=8), 'setfirstweekday', Load(), lineno=272, col_offset=8), [Attribute(Name('self', Load(), lineno=272, col_offset=33), 'oldfirstweekday', Load(), lineno=272, col_offset=33)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('check_weeks', arguments([Name('self', Param(), lineno=274, col_offset=20), Name('year', Param(), lineno=274, col_offset=26), Name('month', Param(), lineno=274, col_offset=32), Name('weeks', Param(), lineno=274, col_offset=39)], None, None, []), [Assign([Name('cal', Store(), lineno=275, col_offset=8)], Call(Attribute(Name('calendar', Load(), lineno=275, col_offset=14), 'monthcalendar', Load(), lineno=275, col_offset=14), [Name('year', Load(), lineno=275, col_offset=37), Name('month', Load(), lineno=275, col_offset=43)], [], None, None, lineno=275, col_offset=14), lineno=275, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'assertEqual', Load(), lineno=276, col_offset=8), [Call(Name('len', Load(), lineno=276, col_offset=25), [Name('cal', Load(), lineno=276, col_offset=29)], [], None, None, lineno=276, col_offset=25), Call(Name('len', Load(), lineno=276, col_offset=35), [Name('weeks', Load(), lineno=276, col_offset=39)], [], None, None, lineno=276, col_offset=35)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), For(Name('i', Store(), lineno=277, col_offset=12), Call(Name('xrange', Load(), lineno=277, col_offset=17), [Call(Name('len', Load(), lineno=277, col_offset=24), [Name('weeks', Load(), lineno=277, col_offset=28)], [], None, None, lineno=277, col_offset=24)], [], None, None, lineno=277, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=12), 'assertEqual', Load(), lineno=278, col_offset=12), [Subscript(Name('weeks', Load(), lineno=278, col_offset=29), Index(Name('i', Load(), lineno=278, col_offset=35)), Load(), lineno=278, col_offset=29), Call(Name('sum', Load(), lineno=278, col_offset=39), [GeneratorExp(Compare(Name('day', Load(), lineno=278, col_offset=43), [NotEq()], [Num(0, lineno=278, col_offset=50)], lineno=278, col_offset=43), [comprehension(Name('day', Store(), lineno=278, col_offset=56), Subscript(Name('cal', Load(), lineno=278, col_offset=63), Index(Name('i', Load(), lineno=278, col_offset=67)), Load(), lineno=278, col_offset=63), [])], lineno=278, col_offset=43)], [], None, None, lineno=278, col_offset=39)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=12)], [], lineno=277, col_offset=8)], [], lineno=274, col_offset=4)], [], lineno=266, col_offset=0), ClassDef('MondayTestCase', [Name('MonthCalendarTestCase', Load(), lineno=281, col_offset=21)], [Assign([Name('firstweekday', Store(), lineno=282, col_offset=4)], Attribute(Name('calendar', Load(), lineno=282, col_offset=19), 'MONDAY', Load(), lineno=282, col_offset=19), lineno=282, col_offset=4), FunctionDef('test_february', arguments([Name('self', Param(), lineno=284, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=286, col_offset=8), 'check_weeks', Load(), lineno=286, col_offset=8), [Num(1999, lineno=286, col_offset=25), Num(2, lineno=286, col_offset=31), Tuple([Num(7, lineno=286, col_offset=35), Num(7, lineno=286, col_offset=38), Num(7, lineno=286, col_offset=41), Num(7, lineno=286, col_offset=44)], Load(), lineno=286, col_offset=35)], [], None, None, lineno=286, col_offset=8), lineno=286, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=8), 'check_weeks', Load(), lineno=289, col_offset=8), [Num(2005, lineno=289, col_offset=25), Num(2, lineno=289, col_offset=31), Tuple([Num(6, lineno=289, col_offset=35), Num(7, lineno=289, col_offset=38), Num(7, lineno=289, col_offset=41), Num(7, lineno=289, col_offset=44), Num(1, lineno=289, col_offset=47)], Load(), lineno=289, col_offset=35)], [], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'check_weeks', Load(), lineno=292, col_offset=8), [Num(1987, lineno=292, col_offset=25), Num(2, lineno=292, col_offset=31), Tuple([Num(1, lineno=292, col_offset=35), Num(7, lineno=292, col_offset=38), Num(7, lineno=292, col_offset=41), Num(7, lineno=292, col_offset=44), Num(6, lineno=292, col_offset=47)], Load(), lineno=292, col_offset=35)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=295, col_offset=8), 'check_weeks', Load(), lineno=295, col_offset=8), [Num(1988, lineno=295, col_offset=25), Num(2, lineno=295, col_offset=31), Tuple([Num(7, lineno=295, col_offset=35), Num(7, lineno=295, col_offset=38), Num(7, lineno=295, col_offset=41), Num(7, lineno=295, col_offset=44), Num(1, lineno=295, col_offset=47)], Load(), lineno=295, col_offset=35)], [], None, None, lineno=295, col_offset=8), lineno=295, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=298, col_offset=8), 'check_weeks', Load(), lineno=298, col_offset=8), [Num(1972, lineno=298, col_offset=25), Num(2, lineno=298, col_offset=31), Tuple([Num(6, lineno=298, col_offset=35), Num(7, lineno=298, col_offset=38), Num(7, lineno=298, col_offset=41), Num(7, lineno=298, col_offset=44), Num(2, lineno=298, col_offset=47)], Load(), lineno=298, col_offset=35)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=8), 'check_weeks', Load(), lineno=301, col_offset=8), [Num(2004, lineno=301, col_offset=25), Num(2, lineno=301, col_offset=31), Tuple([Num(1, lineno=301, col_offset=35), Num(7, lineno=301, col_offset=38), Num(7, lineno=301, col_offset=41), Num(7, lineno=301, col_offset=44), Num(7, lineno=301, col_offset=47)], Load(), lineno=301, col_offset=35)], [], None, None, lineno=301, col_offset=8), lineno=301, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('test_april', arguments([Name('self', Param(), lineno=303, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=305, col_offset=8), 'check_weeks', Load(), lineno=305, col_offset=8), [Num(1935, lineno=305, col_offset=25), Num(4, lineno=305, col_offset=31), Tuple([Num(7, lineno=305, col_offset=35), Num(7, lineno=305, col_offset=38), Num(7, lineno=305, col_offset=41), Num(7, lineno=305, col_offset=44), Num(2, lineno=305, col_offset=47)], Load(), lineno=305, col_offset=35)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'check_weeks', Load(), lineno=308, col_offset=8), [Num(1975, lineno=308, col_offset=25), Num(4, lineno=308, col_offset=31), Tuple([Num(6, lineno=308, col_offset=35), Num(7, lineno=308, col_offset=38), Num(7, lineno=308, col_offset=41), Num(7, lineno=308, col_offset=44), Num(3, lineno=308, col_offset=47)], Load(), lineno=308, col_offset=35)], [], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=311, col_offset=8), 'check_weeks', Load(), lineno=311, col_offset=8), [Num(1945, lineno=311, col_offset=25), Num(4, lineno=311, col_offset=31), Tuple([Num(1, lineno=311, col_offset=35), Num(7, lineno=311, col_offset=38), Num(7, lineno=311, col_offset=41), Num(7, lineno=311, col_offset=44), Num(7, lineno=311, col_offset=47), Num(1, lineno=311, col_offset=50)], Load(), lineno=311, col_offset=35)], [], None, None, lineno=311, col_offset=8), lineno=311, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'check_weeks', Load(), lineno=314, col_offset=8), [Num(1995, lineno=314, col_offset=25), Num(4, lineno=314, col_offset=31), Tuple([Num(2, lineno=314, col_offset=35), Num(7, lineno=314, col_offset=38), Num(7, lineno=314, col_offset=41), Num(7, lineno=314, col_offset=44), Num(7, lineno=314, col_offset=47)], Load(), lineno=314, col_offset=35)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=317, col_offset=8), 'check_weeks', Load(), lineno=317, col_offset=8), [Num(1994, lineno=317, col_offset=25), Num(4, lineno=317, col_offset=31), Tuple([Num(3, lineno=317, col_offset=35), Num(7, lineno=317, col_offset=38), Num(7, lineno=317, col_offset=41), Num(7, lineno=317, col_offset=44), Num(6, lineno=317, col_offset=47)], Load(), lineno=317, col_offset=35)], [], None, None, lineno=317, col_offset=8), lineno=317, col_offset=8)], [], lineno=303, col_offset=4), FunctionDef('test_december', arguments([Name('self', Param(), lineno=319, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=321, col_offset=8), 'check_weeks', Load(), lineno=321, col_offset=8), [Num(1980, lineno=321, col_offset=25), Num(12, lineno=321, col_offset=31), Tuple([Num(7, lineno=321, col_offset=36), Num(7, lineno=321, col_offset=39), Num(7, lineno=321, col_offset=42), Num(7, lineno=321, col_offset=45), Num(3, lineno=321, col_offset=48)], Load(), lineno=321, col_offset=36)], [], None, None, lineno=321, col_offset=8), lineno=321, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=324, col_offset=8), 'check_weeks', Load(), lineno=324, col_offset=8), [Num(1987, lineno=324, col_offset=25), Num(12, lineno=324, col_offset=31), Tuple([Num(6, lineno=324, col_offset=36), Num(7, lineno=324, col_offset=39), Num(7, lineno=324, col_offset=42), Num(7, lineno=324, col_offset=45), Num(4, lineno=324, col_offset=48)], Load(), lineno=324, col_offset=36)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=327, col_offset=8), 'check_weeks', Load(), lineno=327, col_offset=8), [Num(1968, lineno=327, col_offset=25), Num(12, lineno=327, col_offset=31), Tuple([Num(1, lineno=327, col_offset=36), Num(7, lineno=327, col_offset=39), Num(7, lineno=327, col_offset=42), Num(7, lineno=327, col_offset=45), Num(7, lineno=327, col_offset=48), Num(2, lineno=327, col_offset=51)], Load(), lineno=327, col_offset=36)], [], None, None, lineno=327, col_offset=8), lineno=327, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=330, col_offset=8), 'check_weeks', Load(), lineno=330, col_offset=8), [Num(1988, lineno=330, col_offset=25), Num(12, lineno=330, col_offset=31), Tuple([Num(4, lineno=330, col_offset=36), Num(7, lineno=330, col_offset=39), Num(7, lineno=330, col_offset=42), Num(7, lineno=330, col_offset=45), Num(6, lineno=330, col_offset=48)], Load(), lineno=330, col_offset=36)], [], None, None, lineno=330, col_offset=8), lineno=330, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=8), 'check_weeks', Load(), lineno=333, col_offset=8), [Num(2017, lineno=333, col_offset=25), Num(12, lineno=333, col_offset=31), Tuple([Num(3, lineno=333, col_offset=36), Num(7, lineno=333, col_offset=39), Num(7, lineno=333, col_offset=42), Num(7, lineno=333, col_offset=45), Num(7, lineno=333, col_offset=48)], Load(), lineno=333, col_offset=36)], [], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=336, col_offset=8), 'check_weeks', Load(), lineno=336, col_offset=8), [Num(2068, lineno=336, col_offset=25), Num(12, lineno=336, col_offset=31), Tuple([Num(2, lineno=336, col_offset=36), Num(7, lineno=336, col_offset=39), Num(7, lineno=336, col_offset=42), Num(7, lineno=336, col_offset=45), Num(7, lineno=336, col_offset=48), Num(1, lineno=336, col_offset=51)], Load(), lineno=336, col_offset=36)], [], None, None, lineno=336, col_offset=8), lineno=336, col_offset=8)], [], lineno=319, col_offset=4)], [], lineno=281, col_offset=0), ClassDef('SundayTestCase', [Name('MonthCalendarTestCase', Load(), lineno=339, col_offset=21)], [Assign([Name('firstweekday', Store(), lineno=340, col_offset=4)], Attribute(Name('calendar', Load(), lineno=340, col_offset=19), 'SUNDAY', Load(), lineno=340, col_offset=19), lineno=340, col_offset=4), FunctionDef('test_february', arguments([Name('self', Param(), lineno=342, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=344, col_offset=8), 'check_weeks', Load(), lineno=344, col_offset=8), [Num(2009, lineno=344, col_offset=25), Num(2, lineno=344, col_offset=31), Tuple([Num(7, lineno=344, col_offset=35), Num(7, lineno=344, col_offset=38), Num(7, lineno=344, col_offset=41), Num(7, lineno=344, col_offset=44)], Load(), lineno=344, col_offset=35)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=347, col_offset=8), 'check_weeks', Load(), lineno=347, col_offset=8), [Num(1999, lineno=347, col_offset=25), Num(2, lineno=347, col_offset=31), Tuple([Num(6, lineno=347, col_offset=35), Num(7, lineno=347, col_offset=38), Num(7, lineno=347, col_offset=41), Num(7, lineno=347, col_offset=44), Num(1, lineno=347, col_offset=47)], Load(), lineno=347, col_offset=35)], [], None, None, lineno=347, col_offset=8), lineno=347, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=350, col_offset=8), 'check_weeks', Load(), lineno=350, col_offset=8), [Num(1997, lineno=350, col_offset=25), Num(2, lineno=350, col_offset=31), Tuple([Num(1, lineno=350, col_offset=35), Num(7, lineno=350, col_offset=38), Num(7, lineno=350, col_offset=41), Num(7, lineno=350, col_offset=44), Num(6, lineno=350, col_offset=47)], Load(), lineno=350, col_offset=35)], [], None, None, lineno=350, col_offset=8), lineno=350, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=8), 'check_weeks', Load(), lineno=353, col_offset=8), [Num(2004, lineno=353, col_offset=25), Num(2, lineno=353, col_offset=31), Tuple([Num(7, lineno=353, col_offset=35), Num(7, lineno=353, col_offset=38), Num(7, lineno=353, col_offset=41), Num(7, lineno=353, col_offset=44), Num(1, lineno=353, col_offset=47)], Load(), lineno=353, col_offset=35)], [], None, None, lineno=353, col_offset=8), lineno=353, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=8), 'check_weeks', Load(), lineno=356, col_offset=8), [Num(1960, lineno=356, col_offset=25), Num(2, lineno=356, col_offset=31), Tuple([Num(6, lineno=356, col_offset=35), Num(7, lineno=356, col_offset=38), Num(7, lineno=356, col_offset=41), Num(7, lineno=356, col_offset=44), Num(2, lineno=356, col_offset=47)], Load(), lineno=356, col_offset=35)], [], None, None, lineno=356, col_offset=8), lineno=356, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'check_weeks', Load(), lineno=359, col_offset=8), [Num(1964, lineno=359, col_offset=25), Num(2, lineno=359, col_offset=31), Tuple([Num(1, lineno=359, col_offset=35), Num(7, lineno=359, col_offset=38), Num(7, lineno=359, col_offset=41), Num(7, lineno=359, col_offset=44), Num(7, lineno=359, col_offset=47)], Load(), lineno=359, col_offset=35)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8)], [], lineno=342, col_offset=4), FunctionDef('test_april', arguments([Name('self', Param(), lineno=361, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'check_weeks', Load(), lineno=363, col_offset=8), [Num(1923, lineno=363, col_offset=25), Num(4, lineno=363, col_offset=31), Tuple([Num(7, lineno=363, col_offset=35), Num(7, lineno=363, col_offset=38), Num(7, lineno=363, col_offset=41), Num(7, lineno=363, col_offset=44), Num(2, lineno=363, col_offset=47)], Load(), lineno=363, col_offset=35)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'check_weeks', Load(), lineno=366, col_offset=8), [Num(1918, lineno=366, col_offset=25), Num(4, lineno=366, col_offset=31), Tuple([Num(6, lineno=366, col_offset=35), Num(7, lineno=366, col_offset=38), Num(7, lineno=366, col_offset=41), Num(7, lineno=366, col_offset=44), Num(3, lineno=366, col_offset=47)], Load(), lineno=366, col_offset=35)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'check_weeks', Load(), lineno=369, col_offset=8), [Num(1950, lineno=369, col_offset=25), Num(4, lineno=369, col_offset=31), Tuple([Num(1, lineno=369, col_offset=35), Num(7, lineno=369, col_offset=38), Num(7, lineno=369, col_offset=41), Num(7, lineno=369, col_offset=44), Num(7, lineno=369, col_offset=47), Num(1, lineno=369, col_offset=50)], Load(), lineno=369, col_offset=35)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'check_weeks', Load(), lineno=372, col_offset=8), [Num(1960, lineno=372, col_offset=25), Num(4, lineno=372, col_offset=31), Tuple([Num(2, lineno=372, col_offset=35), Num(7, lineno=372, col_offset=38), Num(7, lineno=372, col_offset=41), Num(7, lineno=372, col_offset=44), Num(7, lineno=372, col_offset=47)], Load(), lineno=372, col_offset=35)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'check_weeks', Load(), lineno=375, col_offset=8), [Num(1909, lineno=375, col_offset=25), Num(4, lineno=375, col_offset=31), Tuple([Num(3, lineno=375, col_offset=35), Num(7, lineno=375, col_offset=38), Num(7, lineno=375, col_offset=41), Num(7, lineno=375, col_offset=44), Num(6, lineno=375, col_offset=47)], Load(), lineno=375, col_offset=35)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8)], [], lineno=361, col_offset=4), FunctionDef('test_december', arguments([Name('self', Param(), lineno=377, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'check_weeks', Load(), lineno=379, col_offset=8), [Num(2080, lineno=379, col_offset=25), Num(12, lineno=379, col_offset=31), Tuple([Num(7, lineno=379, col_offset=36), Num(7, lineno=379, col_offset=39), Num(7, lineno=379, col_offset=42), Num(7, lineno=379, col_offset=45), Num(3, lineno=379, col_offset=48)], Load(), lineno=379, col_offset=36)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'check_weeks', Load(), lineno=382, col_offset=8), [Num(1941, lineno=382, col_offset=25), Num(12, lineno=382, col_offset=31), Tuple([Num(6, lineno=382, col_offset=36), Num(7, lineno=382, col_offset=39), Num(7, lineno=382, col_offset=42), Num(7, lineno=382, col_offset=45), Num(4, lineno=382, col_offset=48)], Load(), lineno=382, col_offset=36)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'check_weeks', Load(), lineno=385, col_offset=8), [Num(1923, lineno=385, col_offset=25), Num(12, lineno=385, col_offset=31), Tuple([Num(1, lineno=385, col_offset=36), Num(7, lineno=385, col_offset=39), Num(7, lineno=385, col_offset=42), Num(7, lineno=385, col_offset=45), Num(7, lineno=385, col_offset=48), Num(2, lineno=385, col_offset=51)], Load(), lineno=385, col_offset=36)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'check_weeks', Load(), lineno=388, col_offset=8), [Num(1948, lineno=388, col_offset=25), Num(12, lineno=388, col_offset=31), Tuple([Num(4, lineno=388, col_offset=36), Num(7, lineno=388, col_offset=39), Num(7, lineno=388, col_offset=42), Num(7, lineno=388, col_offset=45), Num(6, lineno=388, col_offset=48)], Load(), lineno=388, col_offset=36)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'check_weeks', Load(), lineno=391, col_offset=8), [Num(1927, lineno=391, col_offset=25), Num(12, lineno=391, col_offset=31), Tuple([Num(3, lineno=391, col_offset=36), Num(7, lineno=391, col_offset=39), Num(7, lineno=391, col_offset=42), Num(7, lineno=391, col_offset=45), Num(7, lineno=391, col_offset=48)], Load(), lineno=391, col_offset=36)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=8), 'check_weeks', Load(), lineno=394, col_offset=8), [Num(1995, lineno=394, col_offset=25), Num(12, lineno=394, col_offset=31), Tuple([Num(2, lineno=394, col_offset=36), Num(7, lineno=394, col_offset=39), Num(7, lineno=394, col_offset=42), Num(7, lineno=394, col_offset=45), Num(7, lineno=394, col_offset=48), Num(1, lineno=394, col_offset=51)], Load(), lineno=394, col_offset=36)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8)], [], lineno=377, col_offset=4)], [], lineno=339, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=398, col_offset=4), 'run_unittest', Load(), lineno=398, col_offset=4), [Name('OutputTestCase', Load(), lineno=399, col_offset=8), Name('CalendarTestCase', Load(), lineno=400, col_offset=8), Name('MondayTestCase', Load(), lineno=401, col_offset=8), Name('SundayTestCase', Load(), lineno=402, col_offset=8)], [], None, None, lineno=398, col_offset=4), lineno=398, col_offset=4)], [], lineno=397, col_offset=0), If(Compare(Name('__name__', Load(), lineno=406, col_offset=3), [Eq()], [Str('__main__', lineno=406, col_offset=15)], lineno=406, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=407, col_offset=4), [], [], None, None, lineno=407, col_offset=4), lineno=407, col_offset=4)], [], lineno=406, col_offset=0)])
