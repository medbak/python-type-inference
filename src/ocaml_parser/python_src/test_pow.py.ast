Module([Import([alias('test.test_support', None), alias('unittest', None)], lineno=1, col_offset=0), ClassDef('PowTest', [Attribute(Name('unittest', Load(), lineno=3, col_offset=14), 'TestCase', Load(), lineno=3, col_offset=14)], [FunctionDef('powtest', arguments([Name('self', Param(), lineno=5, col_offset=16), Name('type', Param(), lineno=5, col_offset=22)], None, None, []), [If(Compare(Name('type', Load(), lineno=6, col_offset=11), [NotEq()], [Name('float', Load(), lineno=6, col_offset=19)], lineno=6, col_offset=11), [For(Name('i', Store(), lineno=7, col_offset=16), Call(Name('range', Load(), lineno=7, col_offset=21), [Num(-1000, lineno=7, col_offset=28), Num(1000, lineno=7, col_offset=34)], [], None, None, lineno=7, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=8, col_offset=16), 'assertEqual', Load(), lineno=8, col_offset=16), [Call(Name('pow', Load(), lineno=8, col_offset=33), [Call(Name('type', Load(), lineno=8, col_offset=37), [Name('i', Load(), lineno=8, col_offset=42)], [], None, None, lineno=8, col_offset=37), Num(0, lineno=8, col_offset=46)], [], None, None, lineno=8, col_offset=33), Num(1, lineno=8, col_offset=50)], [], None, None, lineno=8, col_offset=16), lineno=8, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=9, col_offset=16), 'assertEqual', Load(), lineno=9, col_offset=16), [Call(Name('pow', Load(), lineno=9, col_offset=33), [Call(Name('type', Load(), lineno=9, col_offset=37), [Name('i', Load(), lineno=9, col_offset=42)], [], None, None, lineno=9, col_offset=37), Num(1, lineno=9, col_offset=46)], [], None, None, lineno=9, col_offset=33), Call(Name('type', Load(), lineno=9, col_offset=50), [Name('i', Load(), lineno=9, col_offset=55)], [], None, None, lineno=9, col_offset=50)], [], None, None, lineno=9, col_offset=16), lineno=9, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=10, col_offset=16), 'assertEqual', Load(), lineno=10, col_offset=16), [Call(Name('pow', Load(), lineno=10, col_offset=33), [Call(Name('type', Load(), lineno=10, col_offset=37), [Num(0, lineno=10, col_offset=42)], [], None, None, lineno=10, col_offset=37), Num(1, lineno=10, col_offset=46)], [], None, None, lineno=10, col_offset=33), Call(Name('type', Load(), lineno=10, col_offset=50), [Num(0, lineno=10, col_offset=55)], [], None, None, lineno=10, col_offset=50)], [], None, None, lineno=10, col_offset=16), lineno=10, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=11, col_offset=16), 'assertEqual', Load(), lineno=11, col_offset=16), [Call(Name('pow', Load(), lineno=11, col_offset=33), [Call(Name('type', Load(), lineno=11, col_offset=37), [Num(1, lineno=11, col_offset=42)], [], None, None, lineno=11, col_offset=37), Num(1, lineno=11, col_offset=46)], [], None, None, lineno=11, col_offset=33), Call(Name('type', Load(), lineno=11, col_offset=50), [Num(1, lineno=11, col_offset=55)], [], None, None, lineno=11, col_offset=50)], [], None, None, lineno=11, col_offset=16), lineno=11, col_offset=16)], [], lineno=7, col_offset=12), For(Name('i', Store(), lineno=13, col_offset=16), Call(Name('range', Load(), lineno=13, col_offset=21), [Num(-100, lineno=13, col_offset=28), Num(100, lineno=13, col_offset=33)], [], None, None, lineno=13, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=16), 'assertEqual', Load(), lineno=14, col_offset=16), [Call(Name('pow', Load(), lineno=14, col_offset=33), [Call(Name('type', Load(), lineno=14, col_offset=37), [Name('i', Load(), lineno=14, col_offset=42)], [], None, None, lineno=14, col_offset=37), Num(3, lineno=14, col_offset=46)], [], None, None, lineno=14, col_offset=33), BinOp(BinOp(Name('i', Load(), lineno=14, col_offset=50), Mult(), Name('i', Load(), lineno=14, col_offset=52), lineno=14, col_offset=50), Mult(), Name('i', Load(), lineno=14, col_offset=54), lineno=14, col_offset=53)], [], None, None, lineno=14, col_offset=16), lineno=14, col_offset=16)], [], lineno=13, col_offset=12), Assign([Name('pow2', Store(), lineno=16, col_offset=12)], Num(1, lineno=16, col_offset=19), lineno=16, col_offset=12), For(Name('i', Store(), lineno=17, col_offset=16), Call(Name('range', Load(), lineno=17, col_offset=21), [Num(0, lineno=17, col_offset=27), Num(31, lineno=17, col_offset=29)], [], None, None, lineno=17, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=16), 'assertEqual', Load(), lineno=18, col_offset=16), [Call(Name('pow', Load(), lineno=18, col_offset=33), [Num(2, lineno=18, col_offset=37), Name('i', Load(), lineno=18, col_offset=40)], [], None, None, lineno=18, col_offset=33), Name('pow2', Load(), lineno=18, col_offset=44)], [], None, None, lineno=18, col_offset=16), lineno=18, col_offset=16), If(Compare(Name('i', Load(), lineno=19, col_offset=19), [NotEq()], [Num(30, lineno=19, col_offset=24)], lineno=19, col_offset=19), [Assign([Name('pow2', Store(), lineno=19, col_offset=29)], BinOp(Name('pow2', Load(), lineno=19, col_offset=36), Mult(), Num(2, lineno=19, col_offset=41), lineno=19, col_offset=36), lineno=19, col_offset=29)], [], lineno=19, col_offset=16)], [], lineno=17, col_offset=12), For(Name('othertype', Store(), lineno=21, col_offset=16), Tuple([Name('int', Load(), lineno=21, col_offset=29), Name('long', Load(), lineno=21, col_offset=34)], Load(), lineno=21, col_offset=29), [For(Name('i', Store(), lineno=22, col_offset=20), BinOp(Call(Name('range', Load(), lineno=22, col_offset=25), [Num(-10, lineno=22, col_offset=32), Num(0, lineno=22, col_offset=36)], [], None, None, lineno=22, col_offset=25), Add(), Call(Name('range', Load(), lineno=22, col_offset=41), [Num(1, lineno=22, col_offset=47), Num(10, lineno=22, col_offset=50)], [], None, None, lineno=22, col_offset=41), lineno=22, col_offset=25), [Assign([Name('ii', Store(), lineno=23, col_offset=20)], Call(Name('type', Load(), lineno=23, col_offset=25), [Name('i', Load(), lineno=23, col_offset=30)], [], None, None, lineno=23, col_offset=25), lineno=23, col_offset=20), For(Name('j', Store(), lineno=24, col_offset=24), Call(Name('range', Load(), lineno=24, col_offset=29), [Num(1, lineno=24, col_offset=35), Num(11, lineno=24, col_offset=38)], [], None, None, lineno=24, col_offset=29), [Assign([Name('jj', Store(), lineno=25, col_offset=24)], UnaryOp(USub(), Call(Name('othertype', Load(), lineno=25, col_offset=30), [Name('j', Load(), lineno=25, col_offset=40)], [], None, None, lineno=25, col_offset=30), lineno=25, col_offset=29), lineno=25, col_offset=24), Expr(Call(Name('pow', Load(), lineno=26, col_offset=24), [Name('ii', Load(), lineno=26, col_offset=28), Name('jj', Load(), lineno=26, col_offset=32)], [], None, None, lineno=26, col_offset=24), lineno=26, col_offset=24)], [], lineno=24, col_offset=20)], [], lineno=22, col_offset=16)], [], lineno=21, col_offset=12)], [], lineno=6, col_offset=8), For(Name('othertype', Store(), lineno=28, col_offset=12), Tuple([Name('int', Load(), lineno=28, col_offset=25), Name('long', Load(), lineno=28, col_offset=30), Name('float', Load(), lineno=28, col_offset=36)], Load(), lineno=28, col_offset=25), [For(Name('i', Store(), lineno=29, col_offset=16), Call(Name('range', Load(), lineno=29, col_offset=21), [Num(1, lineno=29, col_offset=27), Num(100, lineno=29, col_offset=30)], [], None, None, lineno=29, col_offset=21), [Assign([Name('zero', Store(), lineno=30, col_offset=16)], Call(Name('type', Load(), lineno=30, col_offset=23), [Num(0, lineno=30, col_offset=28)], [], None, None, lineno=30, col_offset=23), lineno=30, col_offset=16), Assign([Name('exp', Store(), lineno=31, col_offset=16)], UnaryOp(USub(), Call(Name('othertype', Load(), lineno=31, col_offset=23), [BinOp(Name('i', Load(), lineno=31, col_offset=33), Div(), Num(10.0, lineno=31, col_offset=35), lineno=31, col_offset=33)], [], None, None, lineno=31, col_offset=23), lineno=31, col_offset=22), lineno=31, col_offset=16), If(Compare(Name('exp', Load(), lineno=32, col_offset=19), [Eq()], [Num(0, lineno=32, col_offset=26)], lineno=32, col_offset=19), [Continue( lineno=33, col_offset=20)], [], lineno=32, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=16), 'assertRaises', Load(), lineno=34, col_offset=16), [Name('ZeroDivisionError', Load(), lineno=34, col_offset=34), Name('pow', Load(), lineno=34, col_offset=53), Name('zero', Load(), lineno=34, col_offset=58), Name('exp', Load(), lineno=34, col_offset=64)], [], None, None, lineno=34, col_offset=16), lineno=34, col_offset=16)], [], lineno=29, col_offset=12)], [], lineno=28, col_offset=8), Assign([Tuple([Name('il', Store(), lineno=36, col_offset=8), Name('ih', Store(), lineno=36, col_offset=12)], Store(), lineno=36, col_offset=8)], Tuple([Num(-20, lineno=36, col_offset=18), Num(20, lineno=36, col_offset=22)], Load(), lineno=36, col_offset=17), lineno=36, col_offset=8), Assign([Tuple([Name('jl', Store(), lineno=37, col_offset=8), Name('jh', Store(), lineno=37, col_offset=12)], Store(), lineno=37, col_offset=8)], Tuple([Num(-5, lineno=37, col_offset=18), Num(5, lineno=37, col_offset=23)], Load(), lineno=37, col_offset=17), lineno=37, col_offset=8), Assign([Tuple([Name('kl', Store(), lineno=38, col_offset=8), Name('kh', Store(), lineno=38, col_offset=12)], Store(), lineno=38, col_offset=8)], Tuple([Num(-10, lineno=38, col_offset=18), Num(10, lineno=38, col_offset=22)], Load(), lineno=38, col_offset=17), lineno=38, col_offset=8), Assign([Name('asseq', Store(), lineno=39, col_offset=8)], Attribute(Name('self', Load(), lineno=39, col_offset=16), 'assertEqual', Load(), lineno=39, col_offset=16), lineno=39, col_offset=8), If(Compare(Name('type', Load(), lineno=40, col_offset=11), [Eq()], [Name('float', Load(), lineno=40, col_offset=19)], lineno=40, col_offset=11), [Assign([Name('il', Store(), lineno=41, col_offset=12)], Num(1, lineno=41, col_offset=17), lineno=41, col_offset=12), Assign([Name('asseq', Store(), lineno=42, col_offset=12)], Attribute(Name('self', Load(), lineno=42, col_offset=20), 'assertAlmostEqual', Load(), lineno=42, col_offset=20), lineno=42, col_offset=12)], [If(Compare(Name('type', Load(), lineno=43, col_offset=13), [Eq()], [Name('int', Load(), lineno=43, col_offset=21)], lineno=43, col_offset=13), [Assign([Name('jl', Store(), lineno=44, col_offset=12)], Num(0, lineno=44, col_offset=17), lineno=44, col_offset=12)], [If(Compare(Name('type', Load(), lineno=45, col_offset=13), [Eq()], [Name('long', Load(), lineno=45, col_offset=21)], lineno=45, col_offset=13), [Assign([Tuple([Name('jl', Store(), lineno=46, col_offset=12), Name('jh', Store(), lineno=46, col_offset=16)], Store(), lineno=46, col_offset=12)], Tuple([Num(0, lineno=46, col_offset=21), Num(15, lineno=46, col_offset=24)], Load(), lineno=46, col_offset=21), lineno=46, col_offset=12)], [], lineno=45, col_offset=13)], lineno=43, col_offset=13)], lineno=40, col_offset=8), For(Name('i', Store(), lineno=47, col_offset=12), Call(Name('range', Load(), lineno=47, col_offset=17), [Name('il', Load(), lineno=47, col_offset=23), BinOp(Name('ih', Load(), lineno=47, col_offset=27), Add(), Num(1, lineno=47, col_offset=30), lineno=47, col_offset=27)], [], None, None, lineno=47, col_offset=17), [For(Name('j', Store(), lineno=48, col_offset=16), Call(Name('range', Load(), lineno=48, col_offset=21), [Name('jl', Load(), lineno=48, col_offset=27), BinOp(Name('jh', Load(), lineno=48, col_offset=31), Add(), Num(1, lineno=48, col_offset=34), lineno=48, col_offset=31)], [], None, None, lineno=48, col_offset=21), [For(Name('k', Store(), lineno=49, col_offset=20), Call(Name('range', Load(), lineno=49, col_offset=25), [Name('kl', Load(), lineno=49, col_offset=31), BinOp(Name('kh', Load(), lineno=49, col_offset=35), Add(), Num(1, lineno=49, col_offset=38), lineno=49, col_offset=35)], [], None, None, lineno=49, col_offset=25), [If(Compare(Name('k', Load(), lineno=50, col_offset=23), [NotEq()], [Num(0, lineno=50, col_offset=28)], lineno=50, col_offset=23), [If(BoolOp(Or(), [Compare(Name('type', Load(), lineno=51, col_offset=27), [Eq()], [Name('float', Load(), lineno=51, col_offset=35)], lineno=51, col_offset=27), Compare(Name('j', Load(), lineno=51, col_offset=44), [Lt()], [Num(0, lineno=51, col_offset=48)], lineno=51, col_offset=44)], lineno=51, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=28), 'assertRaises', Load(), lineno=52, col_offset=28), [Name('TypeError', Load(), lineno=52, col_offset=46), Name('pow', Load(), lineno=52, col_offset=57), Call(Name('type', Load(), lineno=52, col_offset=62), [Name('i', Load(), lineno=52, col_offset=67)], [], None, None, lineno=52, col_offset=62), Name('j', Load(), lineno=52, col_offset=71), Name('k', Load(), lineno=52, col_offset=74)], [], None, None, lineno=52, col_offset=28), lineno=52, col_offset=28), Continue( lineno=53, col_offset=28)], [], lineno=51, col_offset=24), Expr(Call(Name('asseq', Load(), lineno=54, col_offset=24), [Call(Name('pow', Load(), lineno=55, col_offset=28), [Call(Name('type', Load(), lineno=55, col_offset=32), [Name('i', Load(), lineno=55, col_offset=37)], [], None, None, lineno=55, col_offset=32), Name('j', Load(), lineno=55, col_offset=40), Name('k', Load(), lineno=55, col_offset=42)], [], None, None, lineno=55, col_offset=28), BinOp(Call(Name('pow', Load(), lineno=56, col_offset=28), [Call(Name('type', Load(), lineno=56, col_offset=32), [Name('i', Load(), lineno=56, col_offset=37)], [], None, None, lineno=56, col_offset=32), Name('j', Load(), lineno=56, col_offset=40)], [], None, None, lineno=56, col_offset=28), Mod(), Call(Name('type', Load(), lineno=56, col_offset=44), [Name('k', Load(), lineno=56, col_offset=49)], [], None, None, lineno=56, col_offset=44), lineno=56, col_offset=28)], [], None, None, lineno=54, col_offset=24), lineno=54, col_offset=24)], [], lineno=50, col_offset=20)], [], lineno=49, col_offset=16)], [], lineno=48, col_offset=12)], [], lineno=47, col_offset=8)], [], lineno=5, col_offset=4), FunctionDef('test_powint', arguments([Name('self', Param(), lineno=59, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'powtest', Load(), lineno=60, col_offset=8), [Name('int', Load(), lineno=60, col_offset=21)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('test_powlong', arguments([Name('self', Param(), lineno=62, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=63, col_offset=8), 'powtest', Load(), lineno=63, col_offset=8), [Name('long', Load(), lineno=63, col_offset=21)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('test_powfloat', arguments([Name('self', Param(), lineno=65, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'powtest', Load(), lineno=66, col_offset=8), [Name('float', Load(), lineno=66, col_offset=21)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=65, col_offset=4), FunctionDef('test_other', arguments([Name('self', Param(), lineno=68, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=8), 'assertEqual', Load(), lineno=70, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=70, col_offset=25), [Num(3, lineno=70, col_offset=29), Num(3, lineno=70, col_offset=31)], [], None, None, lineno=70, col_offset=25), Mod(), Num(8, lineno=70, col_offset=36), lineno=70, col_offset=25), Call(Name('pow', Load(), lineno=70, col_offset=39), [Num(3, lineno=70, col_offset=43), Num(3, lineno=70, col_offset=45), Num(8, lineno=70, col_offset=47)], [], None, None, lineno=70, col_offset=39)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=71, col_offset=8), 'assertEqual', Load(), lineno=71, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=71, col_offset=25), [Num(3, lineno=71, col_offset=29), Num(3, lineno=71, col_offset=31)], [], None, None, lineno=71, col_offset=25), Mod(), Num(-8, lineno=71, col_offset=37), lineno=71, col_offset=25), Call(Name('pow', Load(), lineno=71, col_offset=40), [Num(3, lineno=71, col_offset=44), Num(3, lineno=71, col_offset=46), Num(-8, lineno=71, col_offset=49)], [], None, None, lineno=71, col_offset=40)], [], None, None, lineno=71, col_offset=8), lineno=71, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=72, col_offset=25), [Num(3, lineno=72, col_offset=29), Num(2, lineno=72, col_offset=31)], [], None, None, lineno=72, col_offset=25), Mod(), Num(-2, lineno=72, col_offset=37), lineno=72, col_offset=25), Call(Name('pow', Load(), lineno=72, col_offset=40), [Num(3, lineno=72, col_offset=44), Num(2, lineno=72, col_offset=46), Num(-2, lineno=72, col_offset=49)], [], None, None, lineno=72, col_offset=40)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=8), 'assertEqual', Load(), lineno=73, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=73, col_offset=25), [Num(-3, lineno=73, col_offset=30), Num(3, lineno=73, col_offset=32)], [], None, None, lineno=73, col_offset=25), Mod(), Num(8, lineno=73, col_offset=37), lineno=73, col_offset=25), Call(Name('pow', Load(), lineno=73, col_offset=40), [Num(-3, lineno=73, col_offset=45), Num(3, lineno=73, col_offset=47), Num(8, lineno=73, col_offset=49)], [], None, None, lineno=73, col_offset=40)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=74, col_offset=8), 'assertEqual', Load(), lineno=74, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=74, col_offset=25), [Num(-3, lineno=74, col_offset=30), Num(3, lineno=74, col_offset=32)], [], None, None, lineno=74, col_offset=25), Mod(), Num(-8, lineno=74, col_offset=38), lineno=74, col_offset=25), Call(Name('pow', Load(), lineno=74, col_offset=41), [Num(-3, lineno=74, col_offset=46), Num(3, lineno=74, col_offset=48), Num(-8, lineno=74, col_offset=51)], [], None, None, lineno=74, col_offset=41)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=75, col_offset=8), 'assertEqual', Load(), lineno=75, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=75, col_offset=25), [Num(5, lineno=75, col_offset=29), Num(2, lineno=75, col_offset=31)], [], None, None, lineno=75, col_offset=25), Mod(), Num(-8, lineno=75, col_offset=37), lineno=75, col_offset=25), Call(Name('pow', Load(), lineno=75, col_offset=40), [Num(5, lineno=75, col_offset=44), Num(2, lineno=75, col_offset=46), Num(-8, lineno=75, col_offset=49)], [], None, None, lineno=75, col_offset=40)], [], None, None, lineno=75, col_offset=8), lineno=75, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'assertEqual', Load(), lineno=77, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=77, col_offset=25), [Num(3L, lineno=77, col_offset=29), Num(3L, lineno=77, col_offset=32)], [], None, None, lineno=77, col_offset=25), Mod(), Num(8, lineno=77, col_offset=38), lineno=77, col_offset=25), Call(Name('pow', Load(), lineno=77, col_offset=41), [Num(3L, lineno=77, col_offset=45), Num(3L, lineno=77, col_offset=48), Num(8, lineno=77, col_offset=51)], [], None, None, lineno=77, col_offset=41)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertEqual', Load(), lineno=78, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=78, col_offset=25), [Num(3L, lineno=78, col_offset=29), Num(3L, lineno=78, col_offset=32)], [], None, None, lineno=78, col_offset=25), Mod(), Num(-8, lineno=78, col_offset=39), lineno=78, col_offset=25), Call(Name('pow', Load(), lineno=78, col_offset=42), [Num(3L, lineno=78, col_offset=46), Num(3L, lineno=78, col_offset=49), Num(-8, lineno=78, col_offset=53)], [], None, None, lineno=78, col_offset=42)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertEqual', Load(), lineno=79, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=79, col_offset=25), [Num(3L, lineno=79, col_offset=29), Num(2, lineno=79, col_offset=32)], [], None, None, lineno=79, col_offset=25), Mod(), Num(-2, lineno=79, col_offset=38), lineno=79, col_offset=25), Call(Name('pow', Load(), lineno=79, col_offset=41), [Num(3L, lineno=79, col_offset=45), Num(2, lineno=79, col_offset=48), Num(-2, lineno=79, col_offset=51)], [], None, None, lineno=79, col_offset=41)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=80, col_offset=25), [Num(-3L, lineno=80, col_offset=30), Num(3L, lineno=80, col_offset=33)], [], None, None, lineno=80, col_offset=25), Mod(), Num(8, lineno=80, col_offset=39), lineno=80, col_offset=25), Call(Name('pow', Load(), lineno=80, col_offset=42), [Num(-3L, lineno=80, col_offset=47), Num(3L, lineno=80, col_offset=50), Num(8, lineno=80, col_offset=53)], [], None, None, lineno=80, col_offset=42)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=81, col_offset=8), 'assertEqual', Load(), lineno=81, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=81, col_offset=25), [Num(-3L, lineno=81, col_offset=30), Num(3L, lineno=81, col_offset=33)], [], None, None, lineno=81, col_offset=25), Mod(), Num(-8, lineno=81, col_offset=40), lineno=81, col_offset=25), Call(Name('pow', Load(), lineno=81, col_offset=43), [Num(-3L, lineno=81, col_offset=48), Num(3L, lineno=81, col_offset=51), Num(-8, lineno=81, col_offset=55)], [], None, None, lineno=81, col_offset=43)], [], None, None, lineno=81, col_offset=8), lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=8), 'assertEqual', Load(), lineno=82, col_offset=8), [BinOp(Call(Name('pow', Load(), lineno=82, col_offset=25), [Num(5L, lineno=82, col_offset=29), Num(2, lineno=82, col_offset=32)], [], None, None, lineno=82, col_offset=25), Mod(), Num(-8, lineno=82, col_offset=38), lineno=82, col_offset=25), Call(Name('pow', Load(), lineno=82, col_offset=41), [Num(5L, lineno=82, col_offset=45), Num(2, lineno=82, col_offset=48), Num(-8, lineno=82, col_offset=51)], [], None, None, lineno=82, col_offset=41)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), For(Name('i', Store(), lineno=84, col_offset=12), Call(Name('range', Load(), lineno=84, col_offset=17), [Num(-10, lineno=84, col_offset=24), Num(11, lineno=84, col_offset=28)], [], None, None, lineno=84, col_offset=17), [For(Name('j', Store(), lineno=85, col_offset=16), Call(Name('range', Load(), lineno=85, col_offset=21), [Num(0, lineno=85, col_offset=27), Num(6, lineno=85, col_offset=30)], [], None, None, lineno=85, col_offset=21), [For(Name('k', Store(), lineno=86, col_offset=20), Call(Name('range', Load(), lineno=86, col_offset=25), [Num(-7, lineno=86, col_offset=32), Num(11, lineno=86, col_offset=35)], [], None, None, lineno=86, col_offset=25), [If(BoolOp(And(), [Compare(Name('j', Load(), lineno=87, col_offset=23), [GtE()], [Num(0, lineno=87, col_offset=28)], lineno=87, col_offset=23), Compare(Name('k', Load(), lineno=87, col_offset=34), [NotEq()], [Num(0, lineno=87, col_offset=39)], lineno=87, col_offset=34)], lineno=87, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=24), 'assertEqual', Load(), lineno=88, col_offset=24), [BinOp(Call(Name('pow', Load(), lineno=89, col_offset=28), [Name('i', Load(), lineno=89, col_offset=32), Name('j', Load(), lineno=89, col_offset=34)], [], None, None, lineno=89, col_offset=28), Mod(), Name('k', Load(), lineno=89, col_offset=39), lineno=89, col_offset=28), Call(Name('pow', Load(), lineno=90, col_offset=28), [Name('i', Load(), lineno=90, col_offset=32), Name('j', Load(), lineno=90, col_offset=34), Name('k', Load(), lineno=90, col_offset=36)], [], None, None, lineno=90, col_offset=28)], [], None, None, lineno=88, col_offset=24), lineno=88, col_offset=24)], [], lineno=87, col_offset=20), If(BoolOp(And(), [Compare(Name('j', Load(), lineno=92, col_offset=23), [GtE()], [Num(0, lineno=92, col_offset=28)], lineno=92, col_offset=23), Compare(Name('k', Load(), lineno=92, col_offset=34), [NotEq()], [Num(0, lineno=92, col_offset=39)], lineno=92, col_offset=34)], lineno=92, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=93, col_offset=24), 'assertEqual', Load(), lineno=93, col_offset=24), [BinOp(Call(Name('pow', Load(), lineno=94, col_offset=28), [Call(Name('long', Load(), lineno=94, col_offset=32), [Name('i', Load(), lineno=94, col_offset=37)], [], None, None, lineno=94, col_offset=32), Name('j', Load(), lineno=94, col_offset=40)], [], None, None, lineno=94, col_offset=28), Mod(), Name('k', Load(), lineno=94, col_offset=45), lineno=94, col_offset=28), Call(Name('pow', Load(), lineno=95, col_offset=28), [Call(Name('long', Load(), lineno=95, col_offset=32), [Name('i', Load(), lineno=95, col_offset=37)], [], None, None, lineno=95, col_offset=32), Name('j', Load(), lineno=95, col_offset=40), Name('k', Load(), lineno=95, col_offset=42)], [], None, None, lineno=95, col_offset=28)], [], None, None, lineno=93, col_offset=24), lineno=93, col_offset=24)], [], lineno=92, col_offset=20)], [], lineno=86, col_offset=16)], [], lineno=85, col_offset=12)], [], lineno=84, col_offset=8)], [], lineno=68, col_offset=4), FunctionDef('test_bug643260', arguments([Name('self', Param(), lineno=98, col_offset=23)], None, None, []), [ClassDef('TestRpow', [], [FunctionDef('__rpow__', arguments([Name('self', Param(), lineno=100, col_offset=25), Name('other', Param(), lineno=100, col_offset=31)], None, None, []), [Return(Name('None', Load(), lineno=101, col_offset=23), lineno=101, col_offset=16)], [], lineno=100, col_offset=12)], [], lineno=99, col_offset=8), Expr(BinOp(Name('None', Load(), lineno=102, col_offset=8), Pow(), Call(Name('TestRpow', Load(), lineno=102, col_offset=16), [], [], None, None, lineno=102, col_offset=16), lineno=102, col_offset=8), lineno=102, col_offset=8)], [], lineno=98, col_offset=4), FunctionDef('test_bug705231', arguments([Name('self', Param(), lineno=104, col_offset=23)], None, None, []), [Assign([Name('eq', Store(), lineno=107, col_offset=8)], Attribute(Name('self', Load(), lineno=107, col_offset=13), 'assertEqual', Load(), lineno=107, col_offset=13), lineno=107, col_offset=8), Assign([Name('a', Store(), lineno=108, col_offset=8)], Num(-1.0, lineno=108, col_offset=13), lineno=108, col_offset=8), Expr(Call(Name('eq', Load(), lineno=112, col_offset=8), [Call(Name('pow', Load(), lineno=112, col_offset=11), [Name('a', Load(), lineno=112, col_offset=15), Num(1.23e+167, lineno=112, col_offset=18)], [], None, None, lineno=112, col_offset=11), Num(1.0, lineno=112, col_offset=29)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Name('eq', Load(), lineno=113, col_offset=8), [Call(Name('pow', Load(), lineno=113, col_offset=11), [Name('a', Load(), lineno=113, col_offset=15), Num(-1.23e+167, lineno=113, col_offset=19)], [], None, None, lineno=113, col_offset=11), Num(1.0, lineno=113, col_offset=30)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), For(Name('b', Store(), lineno=114, col_offset=12), Call(Name('range', Load(), lineno=114, col_offset=17), [Num(-10, lineno=114, col_offset=24), Num(11, lineno=114, col_offset=28)], [], None, None, lineno=114, col_offset=17), [Expr(Call(Name('eq', Load(), lineno=115, col_offset=12), [Call(Name('pow', Load(), lineno=115, col_offset=15), [Name('a', Load(), lineno=115, col_offset=19), Call(Name('float', Load(), lineno=115, col_offset=22), [Name('b', Load(), lineno=115, col_offset=28)], [], None, None, lineno=115, col_offset=22)], [], None, None, lineno=115, col_offset=15), BoolOp(Or(), [BoolOp(And(), [BinOp(Name('b', Load(), lineno=115, col_offset=33), BitAnd(), Num(1, lineno=115, col_offset=37), lineno=115, col_offset=33), Num(-1.0, lineno=115, col_offset=44)], lineno=115, col_offset=33), Num(1.0, lineno=115, col_offset=51)], lineno=115, col_offset=33)], [], None, None, lineno=115, col_offset=12), lineno=115, col_offset=12)], [], lineno=114, col_offset=8), For(Name('n', Store(), lineno=116, col_offset=12), Call(Name('range', Load(), lineno=116, col_offset=17), [Num(0, lineno=116, col_offset=23), Num(100, lineno=116, col_offset=26)], [], None, None, lineno=116, col_offset=17), [Assign([Name('fiveto', Store(), lineno=117, col_offset=12)], Call(Name('float', Load(), lineno=117, col_offset=21), [BinOp(Num(5, lineno=117, col_offset=27), Pow(), Name('n', Load(), lineno=117, col_offset=32), lineno=117, col_offset=27)], [], None, None, lineno=117, col_offset=21), lineno=117, col_offset=12), Assign([Name('expected', Store(), lineno=120, col_offset=12)], BoolOp(Or(), [BoolOp(And(), [BinOp(Name('fiveto', Load(), lineno=120, col_offset=23), Mod(), Num(2.0, lineno=120, col_offset=32), lineno=120, col_offset=23), Num(-1.0, lineno=120, col_offset=41)], lineno=120, col_offset=23), Num(1.0, lineno=120, col_offset=48)], lineno=120, col_offset=23), lineno=120, col_offset=12), Expr(Call(Name('eq', Load(), lineno=121, col_offset=12), [Call(Name('pow', Load(), lineno=121, col_offset=15), [Name('a', Load(), lineno=121, col_offset=19), Name('fiveto', Load(), lineno=121, col_offset=22)], [], None, None, lineno=121, col_offset=15), Name('expected', Load(), lineno=121, col_offset=31)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12), Expr(Call(Name('eq', Load(), lineno=122, col_offset=12), [Call(Name('pow', Load(), lineno=122, col_offset=15), [Name('a', Load(), lineno=122, col_offset=19), UnaryOp(USub(), Name('fiveto', Load(), lineno=122, col_offset=23), lineno=122, col_offset=22)], [], None, None, lineno=122, col_offset=15), Name('expected', Load(), lineno=122, col_offset=32)], [], None, None, lineno=122, col_offset=12), lineno=122, col_offset=12)], [], lineno=116, col_offset=8), Expr(Call(Name('eq', Load(), lineno=123, col_offset=8), [Name('expected', Load(), lineno=123, col_offset=11), Num(1.0, lineno=123, col_offset=21)], [], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], [], lineno=104, col_offset=4)], [], lineno=3, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=126, col_offset=4), 'test_support', Load(), lineno=126, col_offset=4), 'run_unittest', Load(), lineno=126, col_offset=4), [Name('PowTest', Load(), lineno=126, col_offset=35)], [], None, None, lineno=126, col_offset=4), lineno=126, col_offset=4)], [], lineno=125, col_offset=0), If(Compare(Name('__name__', Load(), lineno=128, col_offset=3), [Eq()], [Str('__main__', lineno=128, col_offset=15)], lineno=128, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=129, col_offset=4), [], [], None, None, lineno=129, col_offset=4), lineno=129, col_offset=4)], [], lineno=128, col_offset=0)])
