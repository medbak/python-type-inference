Module([Expr(Str(" Python 'raw-unicode-escape' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n", lineno=8, col_offset=-1), lineno=8, col_offset=-1), Import([alias('codecs', None)], lineno=9, col_offset=0), ClassDef('Codec', [Attribute(Name('codecs', Load(), lineno=13, col_offset=12), 'Codec', Load(), lineno=13, col_offset=12)], [Assign([Name('encode', Store(), lineno=17, col_offset=4)], Attribute(Name('codecs', Load(), lineno=17, col_offset=13), 'raw_unicode_escape_encode', Load(), lineno=17, col_offset=13), lineno=17, col_offset=4), Assign([Name('decode', Store(), lineno=18, col_offset=4)], Attribute(Name('codecs', Load(), lineno=18, col_offset=13), 'raw_unicode_escape_decode', Load(), lineno=18, col_offset=13), lineno=18, col_offset=4)], [], lineno=13, col_offset=0), ClassDef('IncrementalEncoder', [Attribute(Name('codecs', Load(), lineno=20, col_offset=25), 'IncrementalEncoder', Load(), lineno=20, col_offset=25)], [FunctionDef('encode', arguments([Name('self', Param(), lineno=21, col_offset=15), Name('input', Param(), lineno=21, col_offset=21), Name('final', Param(), lineno=21, col_offset=28)], None, None, [Name('False', Load(), lineno=21, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=22, col_offset=15), 'raw_unicode_escape_encode', Load(), lineno=22, col_offset=15), [Name('input', Load(), lineno=22, col_offset=48), Attribute(Name('self', Load(), lineno=22, col_offset=55), 'errors', Load(), lineno=22, col_offset=55)], [], None, None, lineno=22, col_offset=15), Index(Num(0, lineno=22, col_offset=68)), Load(), lineno=22, col_offset=15), lineno=22, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=20, col_offset=0), ClassDef('IncrementalDecoder', [Attribute(Name('codecs', Load(), lineno=24, col_offset=25), 'IncrementalDecoder', Load(), lineno=24, col_offset=25)], [FunctionDef('decode', arguments([Name('self', Param(), lineno=25, col_offset=15), Name('input', Param(), lineno=25, col_offset=21), Name('final', Param(), lineno=25, col_offset=28)], None, None, [Name('False', Load(), lineno=25, col_offset=34)]), [Return(Subscript(Call(Attribute(Name('codecs', Load(), lineno=26, col_offset=15), 'raw_unicode_escape_decode', Load(), lineno=26, col_offset=15), [Name('input', Load(), lineno=26, col_offset=48), Attribute(Name('self', Load(), lineno=26, col_offset=55), 'errors', Load(), lineno=26, col_offset=55)], [], None, None, lineno=26, col_offset=15), Index(Num(0, lineno=26, col_offset=68)), Load(), lineno=26, col_offset=15), lineno=26, col_offset=8)], [], lineno=25, col_offset=4)], [], lineno=24, col_offset=0), ClassDef('StreamWriter', [Name('Codec', Load(), lineno=28, col_offset=19), Attribute(Name('codecs', Load(), lineno=28, col_offset=25), 'StreamWriter', Load(), lineno=28, col_offset=25)], [Pass( lineno=29, col_offset=4)], [], lineno=28, col_offset=0), ClassDef('StreamReader', [Name('Codec', Load(), lineno=31, col_offset=19), Attribute(Name('codecs', Load(), lineno=31, col_offset=25), 'StreamReader', Load(), lineno=31, col_offset=25)], [Pass( lineno=32, col_offset=4)], [], lineno=31, col_offset=0), FunctionDef('getregentry', arguments([], None, None, []), [Return(Call(Attribute(Name('codecs', Load(), lineno=37, col_offset=11), 'CodecInfo', Load(), lineno=37, col_offset=11), [], [keyword('name', Str('raw-unicode-escape', lineno=38, col_offset=13)), keyword('encode', Attribute(Name('Codec', Load(), lineno=39, col_offset=15), 'encode', Load(), lineno=39, col_offset=15)), keyword('decode', Attribute(Name('Codec', Load(), lineno=40, col_offset=15), 'decode', Load(), lineno=40, col_offset=15)), keyword('incrementalencoder', Name('IncrementalEncoder', Load(), lineno=41, col_offset=27)), keyword('incrementaldecoder', Name('IncrementalDecoder', Load(), lineno=42, col_offset=27)), keyword('streamwriter', Name('StreamWriter', Load(), lineno=43, col_offset=21)), keyword('streamreader', Name('StreamReader', Load(), lineno=44, col_offset=21))], None, None, lineno=37, col_offset=11), lineno=37, col_offset=4)], [], lineno=36, col_offset=0)])
