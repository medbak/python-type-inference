Module([Import([alias('unittest', None), alias('test.test_support', None)], lineno=1, col_offset=0), Import([alias('colorsys', None)], lineno=2, col_offset=0), FunctionDef('frange', arguments([Name('start', Param(), lineno=4, col_offset=11), Name('stop', Param(), lineno=4, col_offset=18), Name('step', Param(), lineno=4, col_offset=24)], None, None, []), [While(Compare(Name('start', Load(), lineno=5, col_offset=10), [LtE()], [Name('stop', Load(), lineno=5, col_offset=19)], lineno=5, col_offset=10), [Expr(Yield(Name('start', Load(), lineno=6, col_offset=14), lineno=6, col_offset=8), lineno=6, col_offset=8), AugAssign(Name('start', Store(), lineno=7, col_offset=8), Add(), Name('step', Load(), lineno=7, col_offset=17), lineno=7, col_offset=8)], [], lineno=5, col_offset=4)], [], lineno=4, col_offset=0), ClassDef('ColorsysTest', [Attribute(Name('unittest', Load(), lineno=9, col_offset=19), 'TestCase', Load(), lineno=9, col_offset=19)], [FunctionDef('assertTripleEqual', arguments([Name('self', Param(), lineno=11, col_offset=26), Name('tr1', Param(), lineno=11, col_offset=32), Name('tr2', Param(), lineno=11, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Call(Name('len', Load(), lineno=12, col_offset=25), [Name('tr1', Load(), lineno=12, col_offset=29)], [], None, None, lineno=12, col_offset=25), Num(3, lineno=12, col_offset=35)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=13, col_offset=8), 'assertEqual', Load(), lineno=13, col_offset=8), [Call(Name('len', Load(), lineno=13, col_offset=25), [Name('tr2', Load(), lineno=13, col_offset=29)], [], None, None, lineno=13, col_offset=25), Num(3, lineno=13, col_offset=35)], [], None, None, lineno=13, col_offset=8), lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertAlmostEqual', Load(), lineno=14, col_offset=8), [Subscript(Name('tr1', Load(), lineno=14, col_offset=31), Index(Num(0, lineno=14, col_offset=35)), Load(), lineno=14, col_offset=31), Subscript(Name('tr2', Load(), lineno=14, col_offset=39), Index(Num(0, lineno=14, col_offset=43)), Load(), lineno=14, col_offset=39)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=15, col_offset=8), 'assertAlmostEqual', Load(), lineno=15, col_offset=8), [Subscript(Name('tr1', Load(), lineno=15, col_offset=31), Index(Num(1, lineno=15, col_offset=35)), Load(), lineno=15, col_offset=31), Subscript(Name('tr2', Load(), lineno=15, col_offset=39), Index(Num(1, lineno=15, col_offset=43)), Load(), lineno=15, col_offset=39)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=16, col_offset=8), 'assertAlmostEqual', Load(), lineno=16, col_offset=8), [Subscript(Name('tr1', Load(), lineno=16, col_offset=31), Index(Num(2, lineno=16, col_offset=35)), Load(), lineno=16, col_offset=31), Subscript(Name('tr2', Load(), lineno=16, col_offset=39), Index(Num(2, lineno=16, col_offset=43)), Load(), lineno=16, col_offset=39)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8)], [], lineno=11, col_offset=4), FunctionDef('test_hsv_roundtrip', arguments([Name('self', Param(), lineno=18, col_offset=27)], None, None, []), [For(Name('r', Store(), lineno=19, col_offset=12), Call(Name('frange', Load(), lineno=19, col_offset=17), [Num(0.0, lineno=19, col_offset=24), Num(1.0, lineno=19, col_offset=29), Num(0.2, lineno=19, col_offset=34)], [], None, None, lineno=19, col_offset=17), [For(Name('g', Store(), lineno=20, col_offset=16), Call(Name('frange', Load(), lineno=20, col_offset=21), [Num(0.0, lineno=20, col_offset=28), Num(1.0, lineno=20, col_offset=33), Num(0.2, lineno=20, col_offset=38)], [], None, None, lineno=20, col_offset=21), [For(Name('b', Store(), lineno=21, col_offset=20), Call(Name('frange', Load(), lineno=21, col_offset=25), [Num(0.0, lineno=21, col_offset=32), Num(1.0, lineno=21, col_offset=37), Num(0.2, lineno=21, col_offset=42)], [], None, None, lineno=21, col_offset=25), [Assign([Name('rgb', Store(), lineno=22, col_offset=20)], Tuple([Name('r', Load(), lineno=22, col_offset=27), Name('g', Load(), lineno=22, col_offset=30), Name('b', Load(), lineno=22, col_offset=33)], Load(), lineno=22, col_offset=27), lineno=22, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=20), 'assertTripleEqual', Load(), lineno=23, col_offset=20), [Name('rgb', Load(), lineno=24, col_offset=24), Call(Attribute(Name('colorsys', Load(), lineno=25, col_offset=24), 'hsv_to_rgb', Load(), lineno=25, col_offset=24), [], [], Call(Attribute(Name('colorsys', Load(), lineno=25, col_offset=45), 'rgb_to_hsv', Load(), lineno=25, col_offset=45), [], [], Name('rgb', Load(), lineno=25, col_offset=66), None, lineno=25, col_offset=45), None, lineno=25, col_offset=24)], [], None, None, lineno=23, col_offset=20), lineno=23, col_offset=20)], [], lineno=21, col_offset=16)], [], lineno=20, col_offset=12)], [], lineno=19, col_offset=8)], [], lineno=18, col_offset=4), FunctionDef('test_hsv_values', arguments([Name('self', Param(), lineno=28, col_offset=24)], None, None, []), [Assign([Name('values', Store(), lineno=29, col_offset=8)], List([Tuple([Tuple([Num(0.0, lineno=31, col_offset=14), Num(0.0, lineno=31, col_offset=19), Num(0.0, lineno=31, col_offset=24)], Load(), lineno=31, col_offset=14), Tuple([Num(0, lineno=31, col_offset=33), Num(0.0, lineno=31, col_offset=38), Num(0.0, lineno=31, col_offset=43)], Load(), lineno=31, col_offset=33)], Load(), lineno=31, col_offset=13), Tuple([Tuple([Num(0.0, lineno=32, col_offset=14), Num(0.0, lineno=32, col_offset=19), Num(1.0, lineno=32, col_offset=24)], Load(), lineno=32, col_offset=14), Tuple([BinOp(Num(4.0, lineno=32, col_offset=31), Div(), Num(6.0, lineno=32, col_offset=34), lineno=32, col_offset=31), Num(1.0, lineno=32, col_offset=38), Num(1.0, lineno=32, col_offset=43)], Load(), lineno=32, col_offset=31)], Load(), lineno=32, col_offset=13), Tuple([Tuple([Num(0.0, lineno=33, col_offset=14), Num(1.0, lineno=33, col_offset=19), Num(0.0, lineno=33, col_offset=24)], Load(), lineno=33, col_offset=14), Tuple([BinOp(Num(2.0, lineno=33, col_offset=31), Div(), Num(6.0, lineno=33, col_offset=34), lineno=33, col_offset=31), Num(1.0, lineno=33, col_offset=38), Num(1.0, lineno=33, col_offset=43)], Load(), lineno=33, col_offset=31)], Load(), lineno=33, col_offset=13), Tuple([Tuple([Num(0.0, lineno=34, col_offset=14), Num(1.0, lineno=34, col_offset=19), Num(1.0, lineno=34, col_offset=24)], Load(), lineno=34, col_offset=14), Tuple([BinOp(Num(3.0, lineno=34, col_offset=31), Div(), Num(6.0, lineno=34, col_offset=34), lineno=34, col_offset=31), Num(1.0, lineno=34, col_offset=38), Num(1.0, lineno=34, col_offset=43)], Load(), lineno=34, col_offset=31)], Load(), lineno=34, col_offset=13), Tuple([Tuple([Num(1.0, lineno=35, col_offset=14), Num(0.0, lineno=35, col_offset=19), Num(0.0, lineno=35, col_offset=24)], Load(), lineno=35, col_offset=14), Tuple([Num(0, lineno=35, col_offset=33), Num(1.0, lineno=35, col_offset=38), Num(1.0, lineno=35, col_offset=43)], Load(), lineno=35, col_offset=33)], Load(), lineno=35, col_offset=13), Tuple([Tuple([Num(1.0, lineno=36, col_offset=14), Num(0.0, lineno=36, col_offset=19), Num(1.0, lineno=36, col_offset=24)], Load(), lineno=36, col_offset=14), Tuple([BinOp(Num(5.0, lineno=36, col_offset=31), Div(), Num(6.0, lineno=36, col_offset=34), lineno=36, col_offset=31), Num(1.0, lineno=36, col_offset=38), Num(1.0, lineno=36, col_offset=43)], Load(), lineno=36, col_offset=31)], Load(), lineno=36, col_offset=13), Tuple([Tuple([Num(1.0, lineno=37, col_offset=14), Num(1.0, lineno=37, col_offset=19), Num(0.0, lineno=37, col_offset=24)], Load(), lineno=37, col_offset=14), Tuple([BinOp(Num(1.0, lineno=37, col_offset=31), Div(), Num(6.0, lineno=37, col_offset=34), lineno=37, col_offset=31), Num(1.0, lineno=37, col_offset=38), Num(1.0, lineno=37, col_offset=43)], Load(), lineno=37, col_offset=31)], Load(), lineno=37, col_offset=13), Tuple([Tuple([Num(1.0, lineno=38, col_offset=14), Num(1.0, lineno=38, col_offset=19), Num(1.0, lineno=38, col_offset=24)], Load(), lineno=38, col_offset=14), Tuple([Num(0, lineno=38, col_offset=33), Num(0.0, lineno=38, col_offset=38), Num(1.0, lineno=38, col_offset=43)], Load(), lineno=38, col_offset=33)], Load(), lineno=38, col_offset=13), Tuple([Tuple([Num(0.5, lineno=39, col_offset=14), Num(0.5, lineno=39, col_offset=19), Num(0.5, lineno=39, col_offset=24)], Load(), lineno=39, col_offset=14), Tuple([Num(0, lineno=39, col_offset=33), Num(0.0, lineno=39, col_offset=38), Num(0.5, lineno=39, col_offset=43)], Load(), lineno=39, col_offset=33)], Load(), lineno=39, col_offset=13)], Load(), lineno=29, col_offset=17), lineno=29, col_offset=8), For(Tuple([Name('rgb', Store(), lineno=41, col_offset=13), Name('hsv', Store(), lineno=41, col_offset=18)], Store(), lineno=41, col_offset=13), Name('values', Load(), lineno=41, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=42, col_offset=12), 'assertTripleEqual', Load(), lineno=42, col_offset=12), [Name('hsv', Load(), lineno=42, col_offset=35), Call(Attribute(Name('colorsys', Load(), lineno=42, col_offset=40), 'rgb_to_hsv', Load(), lineno=42, col_offset=40), [], [], Name('rgb', Load(), lineno=42, col_offset=61), None, lineno=42, col_offset=40)], [], None, None, lineno=42, col_offset=12), lineno=42, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=43, col_offset=12), 'assertTripleEqual', Load(), lineno=43, col_offset=12), [Name('rgb', Load(), lineno=43, col_offset=35), Call(Attribute(Name('colorsys', Load(), lineno=43, col_offset=40), 'hsv_to_rgb', Load(), lineno=43, col_offset=40), [], [], Name('hsv', Load(), lineno=43, col_offset=61), None, lineno=43, col_offset=40)], [], None, None, lineno=43, col_offset=12), lineno=43, col_offset=12)], [], lineno=41, col_offset=8)], [], lineno=28, col_offset=4), FunctionDef('test_hls_roundtrip', arguments([Name('self', Param(), lineno=45, col_offset=27)], None, None, []), [For(Name('r', Store(), lineno=46, col_offset=12), Call(Name('frange', Load(), lineno=46, col_offset=17), [Num(0.0, lineno=46, col_offset=24), Num(1.0, lineno=46, col_offset=29), Num(0.2, lineno=46, col_offset=34)], [], None, None, lineno=46, col_offset=17), [For(Name('g', Store(), lineno=47, col_offset=16), Call(Name('frange', Load(), lineno=47, col_offset=21), [Num(0.0, lineno=47, col_offset=28), Num(1.0, lineno=47, col_offset=33), Num(0.2, lineno=47, col_offset=38)], [], None, None, lineno=47, col_offset=21), [For(Name('b', Store(), lineno=48, col_offset=20), Call(Name('frange', Load(), lineno=48, col_offset=25), [Num(0.0, lineno=48, col_offset=32), Num(1.0, lineno=48, col_offset=37), Num(0.2, lineno=48, col_offset=42)], [], None, None, lineno=48, col_offset=25), [Assign([Name('rgb', Store(), lineno=49, col_offset=20)], Tuple([Name('r', Load(), lineno=49, col_offset=27), Name('g', Load(), lineno=49, col_offset=30), Name('b', Load(), lineno=49, col_offset=33)], Load(), lineno=49, col_offset=27), lineno=49, col_offset=20), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=20), 'assertTripleEqual', Load(), lineno=50, col_offset=20), [Name('rgb', Load(), lineno=51, col_offset=24), Call(Attribute(Name('colorsys', Load(), lineno=52, col_offset=24), 'hls_to_rgb', Load(), lineno=52, col_offset=24), [], [], Call(Attribute(Name('colorsys', Load(), lineno=52, col_offset=45), 'rgb_to_hls', Load(), lineno=52, col_offset=45), [], [], Name('rgb', Load(), lineno=52, col_offset=66), None, lineno=52, col_offset=45), None, lineno=52, col_offset=24)], [], None, None, lineno=50, col_offset=20), lineno=50, col_offset=20)], [], lineno=48, col_offset=16)], [], lineno=47, col_offset=12)], [], lineno=46, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('test_hls_values', arguments([Name('self', Param(), lineno=55, col_offset=24)], None, None, []), [Assign([Name('values', Store(), lineno=56, col_offset=8)], List([Tuple([Tuple([Num(0.0, lineno=58, col_offset=14), Num(0.0, lineno=58, col_offset=19), Num(0.0, lineno=58, col_offset=24)], Load(), lineno=58, col_offset=14), Tuple([Num(0, lineno=58, col_offset=33), Num(0.0, lineno=58, col_offset=38), Num(0.0, lineno=58, col_offset=43)], Load(), lineno=58, col_offset=33)], Load(), lineno=58, col_offset=13), Tuple([Tuple([Num(0.0, lineno=59, col_offset=14), Num(0.0, lineno=59, col_offset=19), Num(1.0, lineno=59, col_offset=24)], Load(), lineno=59, col_offset=14), Tuple([BinOp(Num(4.0, lineno=59, col_offset=31), Div(), Num(6.0, lineno=59, col_offset=34), lineno=59, col_offset=31), Num(0.5, lineno=59, col_offset=38), Num(1.0, lineno=59, col_offset=43)], Load(), lineno=59, col_offset=31)], Load(), lineno=59, col_offset=13), Tuple([Tuple([Num(0.0, lineno=60, col_offset=14), Num(1.0, lineno=60, col_offset=19), Num(0.0, lineno=60, col_offset=24)], Load(), lineno=60, col_offset=14), Tuple([BinOp(Num(2.0, lineno=60, col_offset=31), Div(), Num(6.0, lineno=60, col_offset=34), lineno=60, col_offset=31), Num(0.5, lineno=60, col_offset=38), Num(1.0, lineno=60, col_offset=43)], Load(), lineno=60, col_offset=31)], Load(), lineno=60, col_offset=13), Tuple([Tuple([Num(0.0, lineno=61, col_offset=14), Num(1.0, lineno=61, col_offset=19), Num(1.0, lineno=61, col_offset=24)], Load(), lineno=61, col_offset=14), Tuple([BinOp(Num(3.0, lineno=61, col_offset=31), Div(), Num(6.0, lineno=61, col_offset=34), lineno=61, col_offset=31), Num(0.5, lineno=61, col_offset=38), Num(1.0, lineno=61, col_offset=43)], Load(), lineno=61, col_offset=31)], Load(), lineno=61, col_offset=13), Tuple([Tuple([Num(1.0, lineno=62, col_offset=14), Num(0.0, lineno=62, col_offset=19), Num(0.0, lineno=62, col_offset=24)], Load(), lineno=62, col_offset=14), Tuple([Num(0, lineno=62, col_offset=33), Num(0.5, lineno=62, col_offset=38), Num(1.0, lineno=62, col_offset=43)], Load(), lineno=62, col_offset=33)], Load(), lineno=62, col_offset=13), Tuple([Tuple([Num(1.0, lineno=63, col_offset=14), Num(0.0, lineno=63, col_offset=19), Num(1.0, lineno=63, col_offset=24)], Load(), lineno=63, col_offset=14), Tuple([BinOp(Num(5.0, lineno=63, col_offset=31), Div(), Num(6.0, lineno=63, col_offset=34), lineno=63, col_offset=31), Num(0.5, lineno=63, col_offset=38), Num(1.0, lineno=63, col_offset=43)], Load(), lineno=63, col_offset=31)], Load(), lineno=63, col_offset=13), Tuple([Tuple([Num(1.0, lineno=64, col_offset=14), Num(1.0, lineno=64, col_offset=19), Num(0.0, lineno=64, col_offset=24)], Load(), lineno=64, col_offset=14), Tuple([BinOp(Num(1.0, lineno=64, col_offset=31), Div(), Num(6.0, lineno=64, col_offset=34), lineno=64, col_offset=31), Num(0.5, lineno=64, col_offset=38), Num(1.0, lineno=64, col_offset=43)], Load(), lineno=64, col_offset=31)], Load(), lineno=64, col_offset=13), Tuple([Tuple([Num(1.0, lineno=65, col_offset=14), Num(1.0, lineno=65, col_offset=19), Num(1.0, lineno=65, col_offset=24)], Load(), lineno=65, col_offset=14), Tuple([Num(0, lineno=65, col_offset=33), Num(1.0, lineno=65, col_offset=38), Num(0.0, lineno=65, col_offset=43)], Load(), lineno=65, col_offset=33)], Load(), lineno=65, col_offset=13), Tuple([Tuple([Num(0.5, lineno=66, col_offset=14), Num(0.5, lineno=66, col_offset=19), Num(0.5, lineno=66, col_offset=24)], Load(), lineno=66, col_offset=14), Tuple([Num(0, lineno=66, col_offset=33), Num(0.5, lineno=66, col_offset=38), Num(0.0, lineno=66, col_offset=43)], Load(), lineno=66, col_offset=33)], Load(), lineno=66, col_offset=13)], Load(), lineno=56, col_offset=17), lineno=56, col_offset=8), For(Tuple([Name('rgb', Store(), lineno=68, col_offset=13), Name('hls', Store(), lineno=68, col_offset=18)], Store(), lineno=68, col_offset=13), Name('values', Load(), lineno=68, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=69, col_offset=12), 'assertTripleEqual', Load(), lineno=69, col_offset=12), [Name('hls', Load(), lineno=69, col_offset=35), Call(Attribute(Name('colorsys', Load(), lineno=69, col_offset=40), 'rgb_to_hls', Load(), lineno=69, col_offset=40), [], [], Name('rgb', Load(), lineno=69, col_offset=61), None, lineno=69, col_offset=40)], [], None, None, lineno=69, col_offset=12), lineno=69, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=70, col_offset=12), 'assertTripleEqual', Load(), lineno=70, col_offset=12), [Name('rgb', Load(), lineno=70, col_offset=35), Call(Attribute(Name('colorsys', Load(), lineno=70, col_offset=40), 'hls_to_rgb', Load(), lineno=70, col_offset=40), [], [], Name('hls', Load(), lineno=70, col_offset=61), None, lineno=70, col_offset=40)], [], None, None, lineno=70, col_offset=12), lineno=70, col_offset=12)], [], lineno=68, col_offset=8)], [], lineno=55, col_offset=4)], [], lineno=9, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=73, col_offset=4), 'test_support', Load(), lineno=73, col_offset=4), 'run_unittest', Load(), lineno=73, col_offset=4), [Name('ColorsysTest', Load(), lineno=73, col_offset=35)], [], None, None, lineno=73, col_offset=4), lineno=73, col_offset=4)], [], lineno=72, col_offset=0), If(Compare(Name('__name__', Load(), lineno=75, col_offset=3), [Eq()], [Str('__main__', lineno=75, col_offset=15)], lineno=75, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=76, col_offset=4), [], [], None, None, lineno=76, col_offset=4), lineno=76, col_offset=4)], [], lineno=75, col_offset=0)])
