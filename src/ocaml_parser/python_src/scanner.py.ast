Module([Expr(Str('JSON token scanner\n', lineno=2, col_offset=-1), lineno=2, col_offset=-1), Import([alias('re', None)], lineno=3, col_offset=0), TryExcept([ImportFrom('_json', [alias('make_scanner', 'c_make_scanner')], 0, lineno=5, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=6, col_offset=7), None, [Assign([Name('c_make_scanner', Store(), lineno=7, col_offset=4)], Name('None', Load(), lineno=7, col_offset=21), lineno=7, col_offset=4)], lineno=6, col_offset=0)], [], lineno=4, col_offset=0), Assign([Name('__all__', Store(), lineno=9, col_offset=0)], List([Str('make_scanner', lineno=9, col_offset=11)], Load(), lineno=9, col_offset=10), lineno=9, col_offset=0), Assign([Name('NUMBER_RE', Store(), lineno=11, col_offset=0)], Call(Attribute(Name('re', Load(), lineno=11, col_offset=12), 'compile', Load(), lineno=11, col_offset=12), [Str('(-?(?:0|[1-9]\\d*))(\\.\\d+)?([eE][-+]?\\d+)?', lineno=12, col_offset=4), BinOp(BinOp(Attribute(Name('re', Load(), lineno=13, col_offset=5), 'VERBOSE', Load(), lineno=13, col_offset=5), BitOr(), Attribute(Name('re', Load(), lineno=13, col_offset=18), 'MULTILINE', Load(), lineno=13, col_offset=18), lineno=13, col_offset=5), BitOr(), Attribute(Name('re', Load(), lineno=13, col_offset=33), 'DOTALL', Load(), lineno=13, col_offset=33), lineno=13, col_offset=31)], [], None, None, lineno=11, col_offset=12), lineno=11, col_offset=0), FunctionDef('py_make_scanner', arguments([Name('context', Param(), lineno=15, col_offset=20)], None, None, []), [Assign([Name('parse_object', Store(), lineno=16, col_offset=4)], Attribute(Name('context', Load(), lineno=16, col_offset=19), 'parse_object', Load(), lineno=16, col_offset=19), lineno=16, col_offset=4), Assign([Name('parse_array', Store(), lineno=17, col_offset=4)], Attribute(Name('context', Load(), lineno=17, col_offset=18), 'parse_array', Load(), lineno=17, col_offset=18), lineno=17, col_offset=4), Assign([Name('parse_string', Store(), lineno=18, col_offset=4)], Attribute(Name('context', Load(), lineno=18, col_offset=19), 'parse_string', Load(), lineno=18, col_offset=19), lineno=18, col_offset=4), Assign([Name('match_number', Store(), lineno=19, col_offset=4)], Attribute(Name('NUMBER_RE', Load(), lineno=19, col_offset=19), 'match', Load(), lineno=19, col_offset=19), lineno=19, col_offset=4), Assign([Name('encoding', Store(), lineno=20, col_offset=4)], Attribute(Name('context', Load(), lineno=20, col_offset=15), 'encoding', Load(), lineno=20, col_offset=15), lineno=20, col_offset=4), Assign([Name('strict', Store(), lineno=21, col_offset=4)], Attribute(Name('context', Load(), lineno=21, col_offset=13), 'strict', Load(), lineno=21, col_offset=13), lineno=21, col_offset=4), Assign([Name('parse_float', Store(), lineno=22, col_offset=4)], Attribute(Name('context', Load(), lineno=22, col_offset=18), 'parse_float', Load(), lineno=22, col_offset=18), lineno=22, col_offset=4), Assign([Name('parse_int', Store(), lineno=23, col_offset=4)], Attribute(Name('context', Load(), lineno=23, col_offset=16), 'parse_int', Load(), lineno=23, col_offset=16), lineno=23, col_offset=4), Assign([Name('parse_constant', Store(), lineno=24, col_offset=4)], Attribute(Name('context', Load(), lineno=24, col_offset=21), 'parse_constant', Load(), lineno=24, col_offset=21), lineno=24, col_offset=4), Assign([Name('object_hook', Store(), lineno=25, col_offset=4)], Attribute(Name('context', Load(), lineno=25, col_offset=18), 'object_hook', Load(), lineno=25, col_offset=18), lineno=25, col_offset=4), Assign([Name('object_pairs_hook', Store(), lineno=26, col_offset=4)], Attribute(Name('context', Load(), lineno=26, col_offset=24), 'object_pairs_hook', Load(), lineno=26, col_offset=24), lineno=26, col_offset=4), FunctionDef('_scan_once', arguments([Name('string', Param(), lineno=28, col_offset=19), Name('idx', Param(), lineno=28, col_offset=27)], None, None, []), [TryExcept([Assign([Name('nextchar', Store(), lineno=30, col_offset=12)], Subscript(Name('string', Load(), lineno=30, col_offset=23), Index(Name('idx', Load(), lineno=30, col_offset=30)), Load(), lineno=30, col_offset=23), lineno=30, col_offset=12)], [ExceptHandler(Name('IndexError', Load(), lineno=31, col_offset=15), None, [Raise(Name('StopIteration', Load(), lineno=32, col_offset=18), None, None, lineno=32, col_offset=12)], lineno=31, col_offset=8)], [], lineno=29, col_offset=8), If(Compare(Name('nextchar', Load(), lineno=34, col_offset=11), [Eq()], [Str('"', lineno=34, col_offset=23)], lineno=34, col_offset=11), [Return(Call(Name('parse_string', Load(), lineno=35, col_offset=19), [Name('string', Load(), lineno=35, col_offset=32), BinOp(Name('idx', Load(), lineno=35, col_offset=40), Add(), Num(1, lineno=35, col_offset=46), lineno=35, col_offset=40), Name('encoding', Load(), lineno=35, col_offset=49), Name('strict', Load(), lineno=35, col_offset=59)], [], None, None, lineno=35, col_offset=19), lineno=35, col_offset=12)], [If(Compare(Name('nextchar', Load(), lineno=36, col_offset=13), [Eq()], [Str('{', lineno=36, col_offset=25)], lineno=36, col_offset=13), [Return(Call(Name('parse_object', Load(), lineno=37, col_offset=19), [Tuple([Name('string', Load(), lineno=37, col_offset=33), BinOp(Name('idx', Load(), lineno=37, col_offset=41), Add(), Num(1, lineno=37, col_offset=47), lineno=37, col_offset=41)], Load(), lineno=37, col_offset=33), Name('encoding', Load(), lineno=37, col_offset=51), Name('strict', Load(), lineno=37, col_offset=61), Name('_scan_once', Load(), lineno=38, col_offset=16), Name('object_hook', Load(), lineno=38, col_offset=28), Name('object_pairs_hook', Load(), lineno=38, col_offset=41)], [], None, None, lineno=37, col_offset=19), lineno=37, col_offset=12)], [If(Compare(Name('nextchar', Load(), lineno=39, col_offset=13), [Eq()], [Str('[', lineno=39, col_offset=25)], lineno=39, col_offset=13), [Return(Call(Name('parse_array', Load(), lineno=40, col_offset=19), [Tuple([Name('string', Load(), lineno=40, col_offset=32), BinOp(Name('idx', Load(), lineno=40, col_offset=40), Add(), Num(1, lineno=40, col_offset=46), lineno=40, col_offset=40)], Load(), lineno=40, col_offset=32), Name('_scan_once', Load(), lineno=40, col_offset=50)], [], None, None, lineno=40, col_offset=19), lineno=40, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=41, col_offset=13), [Eq()], [Str('n', lineno=41, col_offset=25)], lineno=41, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=41, col_offset=33), Slice(Name('idx', Load(), lineno=41, col_offset=40), BinOp(Name('idx', Load(), lineno=41, col_offset=44), Add(), Num(4, lineno=41, col_offset=50), lineno=41, col_offset=44), None), Load(), lineno=41, col_offset=33), [Eq()], [Str('null', lineno=41, col_offset=56)], lineno=41, col_offset=33)], lineno=41, col_offset=13), [Return(Tuple([Name('None', Load(), lineno=42, col_offset=19), BinOp(Name('idx', Load(), lineno=42, col_offset=25), Add(), Num(4, lineno=42, col_offset=31), lineno=42, col_offset=25)], Load(), lineno=42, col_offset=19), lineno=42, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=43, col_offset=13), [Eq()], [Str('t', lineno=43, col_offset=25)], lineno=43, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=43, col_offset=33), Slice(Name('idx', Load(), lineno=43, col_offset=40), BinOp(Name('idx', Load(), lineno=43, col_offset=44), Add(), Num(4, lineno=43, col_offset=50), lineno=43, col_offset=44), None), Load(), lineno=43, col_offset=33), [Eq()], [Str('true', lineno=43, col_offset=56)], lineno=43, col_offset=33)], lineno=43, col_offset=13), [Return(Tuple([Name('True', Load(), lineno=44, col_offset=19), BinOp(Name('idx', Load(), lineno=44, col_offset=25), Add(), Num(4, lineno=44, col_offset=31), lineno=44, col_offset=25)], Load(), lineno=44, col_offset=19), lineno=44, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=45, col_offset=13), [Eq()], [Str('f', lineno=45, col_offset=25)], lineno=45, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=45, col_offset=33), Slice(Name('idx', Load(), lineno=45, col_offset=40), BinOp(Name('idx', Load(), lineno=45, col_offset=44), Add(), Num(5, lineno=45, col_offset=50), lineno=45, col_offset=44), None), Load(), lineno=45, col_offset=33), [Eq()], [Str('false', lineno=45, col_offset=56)], lineno=45, col_offset=33)], lineno=45, col_offset=13), [Return(Tuple([Name('False', Load(), lineno=46, col_offset=19), BinOp(Name('idx', Load(), lineno=46, col_offset=26), Add(), Num(5, lineno=46, col_offset=32), lineno=46, col_offset=26)], Load(), lineno=46, col_offset=19), lineno=46, col_offset=12)], [], lineno=45, col_offset=13)], lineno=43, col_offset=13)], lineno=41, col_offset=13)], lineno=39, col_offset=13)], lineno=36, col_offset=13)], lineno=34, col_offset=8), Assign([Name('m', Store(), lineno=48, col_offset=8)], Call(Name('match_number', Load(), lineno=48, col_offset=12), [Name('string', Load(), lineno=48, col_offset=25), Name('idx', Load(), lineno=48, col_offset=33)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=8), If(Compare(Name('m', Load(), lineno=49, col_offset=11), [IsNot()], [Name('None', Load(), lineno=49, col_offset=20)], lineno=49, col_offset=11), [Assign([Tuple([Name('integer', Store(), lineno=50, col_offset=12), Name('frac', Store(), lineno=50, col_offset=21), Name('exp', Store(), lineno=50, col_offset=27)], Store(), lineno=50, col_offset=12)], Call(Attribute(Name('m', Load(), lineno=50, col_offset=33), 'groups', Load(), lineno=50, col_offset=33), [], [], None, None, lineno=50, col_offset=33), lineno=50, col_offset=12), If(BoolOp(Or(), [Name('frac', Load(), lineno=51, col_offset=15), Name('exp', Load(), lineno=51, col_offset=23)], lineno=51, col_offset=15), [Assign([Name('res', Store(), lineno=52, col_offset=16)], Call(Name('parse_float', Load(), lineno=52, col_offset=22), [BinOp(BinOp(Name('integer', Load(), lineno=52, col_offset=34), Add(), BoolOp(Or(), [Name('frac', Load(), lineno=52, col_offset=45), Str('', lineno=52, col_offset=53)], lineno=52, col_offset=45), lineno=52, col_offset=34), Add(), BoolOp(Or(), [Name('exp', Load(), lineno=52, col_offset=60), Str('', lineno=52, col_offset=67)], lineno=52, col_offset=60), lineno=52, col_offset=57)], [], None, None, lineno=52, col_offset=22), lineno=52, col_offset=16)], [Assign([Name('res', Store(), lineno=54, col_offset=16)], Call(Name('parse_int', Load(), lineno=54, col_offset=22), [Name('integer', Load(), lineno=54, col_offset=32)], [], None, None, lineno=54, col_offset=22), lineno=54, col_offset=16)], lineno=51, col_offset=12), Return(Tuple([Name('res', Load(), lineno=55, col_offset=19), Call(Attribute(Name('m', Load(), lineno=55, col_offset=24), 'end', Load(), lineno=55, col_offset=24), [], [], None, None, lineno=55, col_offset=24)], Load(), lineno=55, col_offset=19), lineno=55, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=56, col_offset=13), [Eq()], [Str('N', lineno=56, col_offset=25)], lineno=56, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=56, col_offset=33), Slice(Name('idx', Load(), lineno=56, col_offset=40), BinOp(Name('idx', Load(), lineno=56, col_offset=44), Add(), Num(3, lineno=56, col_offset=50), lineno=56, col_offset=44), None), Load(), lineno=56, col_offset=33), [Eq()], [Str('NaN', lineno=56, col_offset=56)], lineno=56, col_offset=33)], lineno=56, col_offset=13), [Return(Tuple([Call(Name('parse_constant', Load(), lineno=57, col_offset=19), [Str('NaN', lineno=57, col_offset=34)], [], None, None, lineno=57, col_offset=19), BinOp(Name('idx', Load(), lineno=57, col_offset=42), Add(), Num(3, lineno=57, col_offset=48), lineno=57, col_offset=42)], Load(), lineno=57, col_offset=19), lineno=57, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=58, col_offset=13), [Eq()], [Str('I', lineno=58, col_offset=25)], lineno=58, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=58, col_offset=33), Slice(Name('idx', Load(), lineno=58, col_offset=40), BinOp(Name('idx', Load(), lineno=58, col_offset=44), Add(), Num(8, lineno=58, col_offset=50), lineno=58, col_offset=44), None), Load(), lineno=58, col_offset=33), [Eq()], [Str('Infinity', lineno=58, col_offset=56)], lineno=58, col_offset=33)], lineno=58, col_offset=13), [Return(Tuple([Call(Name('parse_constant', Load(), lineno=59, col_offset=19), [Str('Infinity', lineno=59, col_offset=34)], [], None, None, lineno=59, col_offset=19), BinOp(Name('idx', Load(), lineno=59, col_offset=47), Add(), Num(8, lineno=59, col_offset=53), lineno=59, col_offset=47)], Load(), lineno=59, col_offset=19), lineno=59, col_offset=12)], [If(BoolOp(And(), [Compare(Name('nextchar', Load(), lineno=60, col_offset=13), [Eq()], [Str('-', lineno=60, col_offset=25)], lineno=60, col_offset=13), Compare(Subscript(Name('string', Load(), lineno=60, col_offset=33), Slice(Name('idx', Load(), lineno=60, col_offset=40), BinOp(Name('idx', Load(), lineno=60, col_offset=44), Add(), Num(9, lineno=60, col_offset=50), lineno=60, col_offset=44), None), Load(), lineno=60, col_offset=33), [Eq()], [Str('-Infinity', lineno=60, col_offset=56)], lineno=60, col_offset=33)], lineno=60, col_offset=13), [Return(Tuple([Call(Name('parse_constant', Load(), lineno=61, col_offset=19), [Str('-Infinity', lineno=61, col_offset=34)], [], None, None, lineno=61, col_offset=19), BinOp(Name('idx', Load(), lineno=61, col_offset=48), Add(), Num(9, lineno=61, col_offset=54), lineno=61, col_offset=48)], Load(), lineno=61, col_offset=19), lineno=61, col_offset=12)], [Raise(Name('StopIteration', Load(), lineno=63, col_offset=18), None, None, lineno=63, col_offset=12)], lineno=60, col_offset=13)], lineno=58, col_offset=13)], lineno=56, col_offset=13)], lineno=49, col_offset=8)], [], lineno=28, col_offset=4), Return(Name('_scan_once', Load(), lineno=65, col_offset=11), lineno=65, col_offset=4)], [], lineno=15, col_offset=0), Assign([Name('make_scanner', Store(), lineno=67, col_offset=0)], BoolOp(Or(), [Name('c_make_scanner', Load(), lineno=67, col_offset=15), Name('py_make_scanner', Load(), lineno=67, col_offset=33)], lineno=67, col_offset=15), lineno=67, col_offset=0)])
