Module([Expr(Str("Tests for 'site'.\n\nTests assume the initial paths in sys.path once the interpreter has begun\nexecuting have not been removed.\n\n", lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('unittest', None)], lineno=7, col_offset=0), Import([alias('sys', None)], lineno=8, col_offset=0), Import([alias('os', None)], lineno=9, col_offset=0), Import([alias('shutil', None)], lineno=10, col_offset=0), Import([alias('subprocess', None)], lineno=11, col_offset=0), ImportFrom('copy', [alias('copy', None), alias('deepcopy', None)], 0, lineno=12, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('TESTFN', None), alias('unlink', None), alias('get_attribute', None)], 0, lineno=14, col_offset=0), Import([alias('sysconfig', None)], lineno=16, col_offset=0), ImportFrom('sysconfig', [alias('get_paths', None), alias('get_platform', None), alias('get_config_vars', None), alias('get_path', None), alias('get_path_names', None), alias('_INSTALL_SCHEMES', None), alias('_get_default_scheme', None), alias('_expand_vars', None), alias('get_scheme_names', None), alias('get_config_var', None)], 0, lineno=17, col_offset=0), ClassDef('TestSysConfig', [Attribute(Name('unittest', Load(), lineno=22, col_offset=20), 'TestCase', Load(), lineno=22, col_offset=20)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=24, col_offset=14)], None, None, []), [Expr(Str('Make a copy of sys.path', lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=26, col_offset=8), [Name('TestSysConfig', Load(), lineno=26, col_offset=14), Name('self', Load(), lineno=26, col_offset=29)], [], None, None, lineno=26, col_offset=8), 'setUp', Load(), lineno=26, col_offset=8), [], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=27, col_offset=8), 'sys_path', Store(), lineno=27, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=27, col_offset=24), 'path', Load(), lineno=27, col_offset=24), Slice(None, None, None), Load(), lineno=27, col_offset=24), lineno=27, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=28, col_offset=8), 'makefile', Store(), lineno=28, col_offset=8)], Name('None', Load(), lineno=28, col_offset=24), lineno=28, col_offset=8), If(Call(Name('hasattr', Load(), lineno=30, col_offset=11), [Name('os', Load(), lineno=30, col_offset=19), Str('uname', lineno=30, col_offset=23)], [], None, None, lineno=30, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=31, col_offset=12), 'uname', Store(), lineno=31, col_offset=12)], Attribute(Name('os', Load(), lineno=31, col_offset=25), 'uname', Load(), lineno=31, col_offset=25), lineno=31, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=32, col_offset=12), '_uname', Store(), lineno=32, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=32, col_offset=26), 'uname', Load(), lineno=32, col_offset=26), [], [], None, None, lineno=32, col_offset=26), lineno=32, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=34, col_offset=12), 'uname', Store(), lineno=34, col_offset=12)], Name('None', Load(), lineno=34, col_offset=25), lineno=34, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=12), '_uname', Store(), lineno=35, col_offset=12)], Name('None', Load(), lineno=35, col_offset=26), lineno=35, col_offset=12)], lineno=30, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=36, col_offset=8), 'uname', Store(), lineno=36, col_offset=8)], Attribute(Name('self', Load(), lineno=36, col_offset=19), '_get_uname', Load(), lineno=36, col_offset=19), lineno=36, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'name', Store(), lineno=38, col_offset=8)], Attribute(Name('os', Load(), lineno=38, col_offset=20), 'name', Load(), lineno=38, col_offset=20), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=8), 'platform', Store(), lineno=39, col_offset=8)], Attribute(Name('sys', Load(), lineno=39, col_offset=24), 'platform', Load(), lineno=39, col_offset=24), lineno=39, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=40, col_offset=8), 'version', Store(), lineno=40, col_offset=8)], Attribute(Name('sys', Load(), lineno=40, col_offset=23), 'version', Load(), lineno=40, col_offset=23), lineno=40, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=41, col_offset=8), 'sep', Store(), lineno=41, col_offset=8)], Attribute(Name('os', Load(), lineno=41, col_offset=19), 'sep', Load(), lineno=41, col_offset=19), lineno=41, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=42, col_offset=8), 'join', Store(), lineno=42, col_offset=8)], Attribute(Attribute(Name('os', Load(), lineno=42, col_offset=20), 'path', Load(), lineno=42, col_offset=20), 'join', Load(), lineno=42, col_offset=20), lineno=42, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=43, col_offset=8), 'isabs', Store(), lineno=43, col_offset=8)], Attribute(Attribute(Name('os', Load(), lineno=43, col_offset=21), 'path', Load(), lineno=43, col_offset=21), 'isabs', Load(), lineno=43, col_offset=21), lineno=43, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=44, col_offset=8), 'splitdrive', Store(), lineno=44, col_offset=8)], Attribute(Attribute(Name('os', Load(), lineno=44, col_offset=26), 'path', Load(), lineno=44, col_offset=26), 'splitdrive', Load(), lineno=44, col_offset=26), lineno=44, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), '_config_vars', Store(), lineno=45, col_offset=8)], Call(Name('copy', Load(), lineno=45, col_offset=28), [Attribute(Name('sysconfig', Load(), lineno=45, col_offset=33), '_CONFIG_VARS', Load(), lineno=45, col_offset=33)], [], None, None, lineno=45, col_offset=28), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 'old_environ', Store(), lineno=46, col_offset=8)], Call(Name('deepcopy', Load(), lineno=46, col_offset=27), [Attribute(Name('os', Load(), lineno=46, col_offset=36), 'environ', Load(), lineno=46, col_offset=36)], [], None, None, lineno=46, col_offset=27), lineno=46, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=48, col_offset=17)], None, None, []), [Expr(Str('Restore sys.path', lineno=49, col_offset=8), lineno=49, col_offset=8), Assign([Subscript(Attribute(Name('sys', Load(), lineno=50, col_offset=8), 'path', Load(), lineno=50, col_offset=8), Slice(None, None, None), Store(), lineno=50, col_offset=8)], Attribute(Name('self', Load(), lineno=50, col_offset=22), 'sys_path', Load(), lineno=50, col_offset=22), lineno=50, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=51, col_offset=11), 'makefile', Load(), lineno=51, col_offset=11), [IsNot()], [Name('None', Load(), lineno=51, col_offset=32)], lineno=51, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=52, col_offset=12), 'unlink', Load(), lineno=52, col_offset=12), [Attribute(Name('self', Load(), lineno=52, col_offset=22), 'makefile', Load(), lineno=52, col_offset=22)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12)], [], lineno=51, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), '_cleanup_testfn', Load(), lineno=53, col_offset=8), [], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=54, col_offset=11), 'uname', Load(), lineno=54, col_offset=11), [IsNot()], [Name('None', Load(), lineno=54, col_offset=29)], lineno=54, col_offset=11), [Assign([Attribute(Name('os', Load(), lineno=55, col_offset=12), 'uname', Store(), lineno=55, col_offset=12)], Attribute(Name('self', Load(), lineno=55, col_offset=23), 'uname', Load(), lineno=55, col_offset=23), lineno=55, col_offset=12)], [Delete([Attribute(Name('os', Load(), lineno=57, col_offset=16), 'uname', Del(), lineno=57, col_offset=16)], lineno=57, col_offset=12)], lineno=54, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=58, col_offset=8), 'name', Store(), lineno=58, col_offset=8)], Attribute(Name('self', Load(), lineno=58, col_offset=18), 'name', Load(), lineno=58, col_offset=18), lineno=58, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=59, col_offset=8), 'platform', Store(), lineno=59, col_offset=8)], Attribute(Name('self', Load(), lineno=59, col_offset=23), 'platform', Load(), lineno=59, col_offset=23), lineno=59, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=60, col_offset=8), 'version', Store(), lineno=60, col_offset=8)], Attribute(Name('self', Load(), lineno=60, col_offset=22), 'version', Load(), lineno=60, col_offset=22), lineno=60, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=61, col_offset=8), 'sep', Store(), lineno=61, col_offset=8)], Attribute(Name('self', Load(), lineno=61, col_offset=17), 'sep', Load(), lineno=61, col_offset=17), lineno=61, col_offset=8), Assign([Attribute(Attribute(Name('os', Load(), lineno=62, col_offset=8), 'path', Load(), lineno=62, col_offset=8), 'join', Store(), lineno=62, col_offset=8)], Attribute(Name('self', Load(), lineno=62, col_offset=23), 'join', Load(), lineno=62, col_offset=23), lineno=62, col_offset=8), Assign([Attribute(Attribute(Name('os', Load(), lineno=63, col_offset=8), 'path', Load(), lineno=63, col_offset=8), 'isabs', Store(), lineno=63, col_offset=8)], Attribute(Name('self', Load(), lineno=63, col_offset=24), 'isabs', Load(), lineno=63, col_offset=24), lineno=63, col_offset=8), Assign([Attribute(Attribute(Name('os', Load(), lineno=64, col_offset=8), 'path', Load(), lineno=64, col_offset=8), 'splitdrive', Store(), lineno=64, col_offset=8)], Attribute(Name('self', Load(), lineno=64, col_offset=29), 'splitdrive', Load(), lineno=64, col_offset=29), lineno=64, col_offset=8), Assign([Attribute(Name('sysconfig', Load(), lineno=65, col_offset=8), '_CONFIG_VARS', Store(), lineno=65, col_offset=8)], Call(Name('copy', Load(), lineno=65, col_offset=33), [Attribute(Name('self', Load(), lineno=65, col_offset=38), '_config_vars', Load(), lineno=65, col_offset=38)], [], None, None, lineno=65, col_offset=33), lineno=65, col_offset=8), For(Tuple([Name('key', Store(), lineno=66, col_offset=12), Name('value', Store(), lineno=66, col_offset=17)], Store(), lineno=66, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=66, col_offset=26), 'old_environ', Load(), lineno=66, col_offset=26), 'items', Load(), lineno=66, col_offset=26), [], [], None, None, lineno=66, col_offset=26), [If(Compare(Call(Attribute(Attribute(Name('os', Load(), lineno=67, col_offset=15), 'environ', Load(), lineno=67, col_offset=15), 'get', Load(), lineno=67, col_offset=15), [Name('key', Load(), lineno=67, col_offset=30)], [], None, None, lineno=67, col_offset=15), [NotEq()], [Name('value', Load(), lineno=67, col_offset=38)], lineno=67, col_offset=15), [Assign([Subscript(Attribute(Name('os', Load(), lineno=68, col_offset=16), 'environ', Load(), lineno=68, col_offset=16), Index(Name('key', Load(), lineno=68, col_offset=27)), Store(), lineno=68, col_offset=16)], Name('value', Load(), lineno=68, col_offset=34), lineno=68, col_offset=16)], [], lineno=67, col_offset=12)], [], lineno=66, col_offset=8), For(Name('key', Store(), lineno=70, col_offset=12), Call(Attribute(Attribute(Name('os', Load(), lineno=70, col_offset=19), 'environ', Load(), lineno=70, col_offset=19), 'keys', Load(), lineno=70, col_offset=19), [], [], None, None, lineno=70, col_offset=19), [If(Compare(Name('key', Load(), lineno=71, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=71, col_offset=26), 'old_environ', Load(), lineno=71, col_offset=26)], lineno=71, col_offset=15), [Delete([Subscript(Attribute(Name('os', Load(), lineno=72, col_offset=20), 'environ', Load(), lineno=72, col_offset=20), Index(Name('key', Load(), lineno=72, col_offset=31)), Del(), lineno=72, col_offset=20)], lineno=72, col_offset=16)], [], lineno=71, col_offset=12)], [], lineno=70, col_offset=8), Expr(Call(Attribute(Call(Name('super', Load(), lineno=74, col_offset=8), [Name('TestSysConfig', Load(), lineno=74, col_offset=14), Name('self', Load(), lineno=74, col_offset=29)], [], None, None, lineno=74, col_offset=8), 'tearDown', Load(), lineno=74, col_offset=8), [], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8)], [], lineno=48, col_offset=4), FunctionDef('_set_uname', arguments([Name('self', Param(), lineno=76, col_offset=19), Name('uname', Param(), lineno=76, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=77, col_offset=8), '_uname', Store(), lineno=77, col_offset=8)], Name('uname', Load(), lineno=77, col_offset=22), lineno=77, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('_get_uname', arguments([Name('self', Param(), lineno=79, col_offset=19)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=80, col_offset=15), '_uname', Load(), lineno=80, col_offset=15), lineno=80, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('_cleanup_testfn', arguments([Name('self', Param(), lineno=82, col_offset=24)], None, None, []), [Assign([Name('path', Store(), lineno=83, col_offset=8)], Name('TESTFN', Load(), lineno=83, col_offset=15), lineno=83, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=84, col_offset=11), 'path', Load(), lineno=84, col_offset=11), 'isfile', Load(), lineno=84, col_offset=11), [Name('path', Load(), lineno=84, col_offset=26)], [], None, None, lineno=84, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=85, col_offset=12), 'remove', Load(), lineno=85, col_offset=12), [Name('path', Load(), lineno=85, col_offset=22)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=86, col_offset=13), 'path', Load(), lineno=86, col_offset=13), 'isdir', Load(), lineno=86, col_offset=13), [Name('path', Load(), lineno=86, col_offset=27)], [], None, None, lineno=86, col_offset=13), [Expr(Call(Attribute(Name('shutil', Load(), lineno=87, col_offset=12), 'rmtree', Load(), lineno=87, col_offset=12), [Name('path', Load(), lineno=87, col_offset=26)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12)], [], lineno=86, col_offset=13)], lineno=84, col_offset=8)], [], lineno=82, col_offset=4), FunctionDef('test_get_path_names', arguments([Name('self', Param(), lineno=89, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [Call(Name('get_path_names', Load(), lineno=90, col_offset=25), [], [], None, None, lineno=90, col_offset=25), Attribute(Name('sysconfig', Load(), lineno=90, col_offset=43), '_SCHEME_KEYS', Load(), lineno=90, col_offset=43)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8)], [], lineno=89, col_offset=4), FunctionDef('test_get_paths', arguments([Name('self', Param(), lineno=92, col_offset=23)], None, None, []), [Assign([Name('scheme', Store(), lineno=93, col_offset=8)], Call(Name('get_paths', Load(), lineno=93, col_offset=17), [], [], None, None, lineno=93, col_offset=17), lineno=93, col_offset=8), Assign([Name('default_scheme', Store(), lineno=94, col_offset=8)], Call(Name('_get_default_scheme', Load(), lineno=94, col_offset=25), [], [], None, None, lineno=94, col_offset=25), lineno=94, col_offset=8), Assign([Name('wanted', Store(), lineno=95, col_offset=8)], Call(Name('_expand_vars', Load(), lineno=95, col_offset=17), [Name('default_scheme', Load(), lineno=95, col_offset=30), Name('None', Load(), lineno=95, col_offset=46)], [], None, None, lineno=95, col_offset=17), lineno=95, col_offset=8), Assign([Name('wanted', Store(), lineno=96, col_offset=8)], Call(Attribute(Name('wanted', Load(), lineno=96, col_offset=17), 'items', Load(), lineno=96, col_offset=17), [], [], None, None, lineno=96, col_offset=17), lineno=96, col_offset=8), Expr(Call(Attribute(Name('wanted', Load(), lineno=97, col_offset=8), 'sort', Load(), lineno=97, col_offset=8), [], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), Assign([Name('scheme', Store(), lineno=98, col_offset=8)], Call(Attribute(Name('scheme', Load(), lineno=98, col_offset=17), 'items', Load(), lineno=98, col_offset=17), [], [], None, None, lineno=98, col_offset=17), lineno=98, col_offset=8), Expr(Call(Attribute(Name('scheme', Load(), lineno=99, col_offset=8), 'sort', Load(), lineno=99, col_offset=8), [], [], None, None, lineno=99, col_offset=8), lineno=99, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=100, col_offset=8), 'assertEqual', Load(), lineno=100, col_offset=8), [Name('scheme', Load(), lineno=100, col_offset=25), Name('wanted', Load(), lineno=100, col_offset=33)], [], None, None, lineno=100, col_offset=8), lineno=100, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('test_get_path', arguments([Name('self', Param(), lineno=102, col_offset=22)], None, None, []), [For(Name('scheme', Store(), lineno=104, col_offset=12), Name('_INSTALL_SCHEMES', Load(), lineno=104, col_offset=22), [For(Name('name', Store(), lineno=105, col_offset=16), Subscript(Name('_INSTALL_SCHEMES', Load(), lineno=105, col_offset=24), Index(Name('scheme', Load(), lineno=105, col_offset=41)), Load(), lineno=105, col_offset=24), [Assign([Name('res', Store(), lineno=106, col_offset=16)], Call(Name('get_path', Load(), lineno=106, col_offset=22), [Name('name', Load(), lineno=106, col_offset=31), Name('scheme', Load(), lineno=106, col_offset=37)], [], None, None, lineno=106, col_offset=22), lineno=106, col_offset=16)], [], lineno=105, col_offset=12)], [], lineno=104, col_offset=8)], [], lineno=102, col_offset=4), FunctionDef('test_get_config_vars', arguments([Name('self', Param(), lineno=108, col_offset=29)], None, None, []), [Assign([Name('cvars', Store(), lineno=109, col_offset=8)], Call(Name('get_config_vars', Load(), lineno=109, col_offset=16), [], [], None, None, lineno=109, col_offset=16), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertIsInstance', Load(), lineno=110, col_offset=8), [Name('cvars', Load(), lineno=110, col_offset=30), Name('dict', Load(), lineno=110, col_offset=37)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=8), 'assertTrue', Load(), lineno=111, col_offset=8), [Name('cvars', Load(), lineno=111, col_offset=24)], [], None, None, lineno=111, col_offset=8), lineno=111, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('test_get_platform', arguments([Name('self', Param(), lineno=113, col_offset=26)], None, None, []), [Assign([Attribute(Name('os', Load(), lineno=115, col_offset=8), 'name', Store(), lineno=115, col_offset=8)], Str('nt', lineno=115, col_offset=18), lineno=115, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=116, col_offset=8), 'version', Store(), lineno=116, col_offset=8)], Str('2.4.4 (#71, Oct 18 2006, 08:34:43) [MSC v.1310 32 bit (Intel)]', lineno=116, col_offset=23), lineno=116, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=118, col_offset=8), 'platform', Store(), lineno=118, col_offset=8)], Str('win32', lineno=118, col_offset=23), lineno=118, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=8), 'assertEqual', Load(), lineno=119, col_offset=8), [Call(Name('get_platform', Load(), lineno=119, col_offset=25), [], [], None, None, lineno=119, col_offset=25), Str('win32', lineno=119, col_offset=41)], [], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=122, col_offset=8), 'name', Store(), lineno=122, col_offset=8)], Str('nt', lineno=122, col_offset=18), lineno=122, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=123, col_offset=8), 'version', Store(), lineno=123, col_offset=8)], Str('2.4.4 (#71, Oct 18 2006, 08:34:43) [MSC v.1310 32 bit (Amd64)]', lineno=123, col_offset=23), lineno=123, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=125, col_offset=8), 'platform', Store(), lineno=125, col_offset=8)], Str('win32', lineno=125, col_offset=23), lineno=125, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=126, col_offset=8), 'assertEqual', Load(), lineno=126, col_offset=8), [Call(Name('get_platform', Load(), lineno=126, col_offset=25), [], [], None, None, lineno=126, col_offset=25), Str('win-amd64', lineno=126, col_offset=41)], [], None, None, lineno=126, col_offset=8), lineno=126, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=129, col_offset=8), 'name', Store(), lineno=129, col_offset=8)], Str('nt', lineno=129, col_offset=18), lineno=129, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=130, col_offset=8), 'version', Store(), lineno=130, col_offset=8)], Str('2.4.4 (#71, Oct 18 2006, 08:34:43) [MSC v.1310 32 bit (Itanium)]', lineno=130, col_offset=23), lineno=130, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=132, col_offset=8), 'platform', Store(), lineno=132, col_offset=8)], Str('win32', lineno=132, col_offset=23), lineno=132, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'assertEqual', Load(), lineno=133, col_offset=8), [Call(Name('get_platform', Load(), lineno=133, col_offset=25), [], [], None, None, lineno=133, col_offset=25), Str('win-ia64', lineno=133, col_offset=41)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=136, col_offset=8), 'name', Store(), lineno=136, col_offset=8)], Str('posix', lineno=136, col_offset=18), lineno=136, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=137, col_offset=8), 'version', Store(), lineno=137, col_offset=8)], Str('2.5 (r25:51918, Sep 19 2006, 08:49:13) \n[GCC 4.0.1 (Apple Computer, Inc. build 5341)]', lineno=137, col_offset=23), lineno=137, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=139, col_offset=8), 'platform', Store(), lineno=139, col_offset=8)], Str('darwin', lineno=139, col_offset=23), lineno=139, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), '_set_uname', Load(), lineno=140, col_offset=8), [Tuple([Str('Darwin', lineno=140, col_offset=25), Str('macziade', lineno=140, col_offset=35), Str('8.11.1', lineno=140, col_offset=47), Str('Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386', lineno=141, col_offset=20), Str('PowerPC', lineno=143, col_offset=58)], Load(), lineno=140, col_offset=25)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Assign([Subscript(Attribute(Name('os', Load(), lineno=144, col_offset=8), 'environ', Load(), lineno=144, col_offset=8), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=144, col_offset=19)), Store(), lineno=144, col_offset=8)], Str('10.3', lineno=144, col_offset=49), lineno=144, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=146, col_offset=8), [], [], None, None, lineno=146, col_offset=8), Index(Str('CFLAGS', lineno=146, col_offset=26)), Store(), lineno=146, col_offset=8)], Str('-fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes', lineno=146, col_offset=39), lineno=146, col_offset=8), Assign([Name('maxint', Store(), lineno=149, col_offset=8)], Attribute(Name('sys', Load(), lineno=149, col_offset=17), 'maxint', Load(), lineno=149, col_offset=17), lineno=149, col_offset=8), TryFinally([Assign([Attribute(Name('sys', Load(), lineno=151, col_offset=12), 'maxint', Store(), lineno=151, col_offset=12)], Num(2147483647, lineno=151, col_offset=25), lineno=151, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=12), 'assertEqual', Load(), lineno=152, col_offset=12), [Call(Name('get_platform', Load(), lineno=152, col_offset=29), [], [], None, None, lineno=152, col_offset=29), Str('macosx-10.3-ppc', lineno=152, col_offset=45)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=153, col_offset=12), 'maxint', Store(), lineno=153, col_offset=12)], Num(9223372036854775807, lineno=153, col_offset=25), lineno=153, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'assertEqual', Load(), lineno=154, col_offset=12), [Call(Name('get_platform', Load(), lineno=154, col_offset=29), [], [], None, None, lineno=154, col_offset=29), Str('macosx-10.3-ppc64', lineno=154, col_offset=45)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], [Assign([Attribute(Name('sys', Load(), lineno=156, col_offset=12), 'maxint', Store(), lineno=156, col_offset=12)], Name('maxint', Load(), lineno=156, col_offset=25), lineno=156, col_offset=12)], lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=159, col_offset=8), '_set_uname', Load(), lineno=159, col_offset=8), [Tuple([Str('Darwin', lineno=159, col_offset=25), Str('macziade', lineno=159, col_offset=35), Str('8.11.1', lineno=159, col_offset=47), Str('Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386', lineno=160, col_offset=20), Str('i386', lineno=162, col_offset=58)], Load(), lineno=159, col_offset=25)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=163, col_offset=8), [], [], None, None, lineno=163, col_offset=8), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=163, col_offset=26)), Store(), lineno=163, col_offset=8)], Str('10.3', lineno=163, col_offset=56), lineno=163, col_offset=8), Assign([Subscript(Attribute(Name('os', Load(), lineno=164, col_offset=8), 'environ', Load(), lineno=164, col_offset=8), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=164, col_offset=19)), Store(), lineno=164, col_offset=8)], Str('10.3', lineno=164, col_offset=49), lineno=164, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=166, col_offset=8), [], [], None, None, lineno=166, col_offset=8), Index(Str('CFLAGS', lineno=166, col_offset=26)), Store(), lineno=166, col_offset=8)], Str('-fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes', lineno=166, col_offset=39), lineno=166, col_offset=8), Assign([Name('maxint', Store(), lineno=169, col_offset=8)], Attribute(Name('sys', Load(), lineno=169, col_offset=17), 'maxint', Load(), lineno=169, col_offset=17), lineno=169, col_offset=8), TryFinally([Assign([Attribute(Name('sys', Load(), lineno=171, col_offset=12), 'maxint', Store(), lineno=171, col_offset=12)], Num(2147483647, lineno=171, col_offset=25), lineno=171, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=12), 'assertEqual', Load(), lineno=172, col_offset=12), [Call(Name('get_platform', Load(), lineno=172, col_offset=29), [], [], None, None, lineno=172, col_offset=29), Str('macosx-10.3-i386', lineno=172, col_offset=45)], [], None, None, lineno=172, col_offset=12), lineno=172, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=173, col_offset=12), 'maxint', Store(), lineno=173, col_offset=12)], Num(9223372036854775807, lineno=173, col_offset=25), lineno=173, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=12), 'assertEqual', Load(), lineno=174, col_offset=12), [Call(Name('get_platform', Load(), lineno=174, col_offset=29), [], [], None, None, lineno=174, col_offset=29), Str('macosx-10.3-x86_64', lineno=174, col_offset=45)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=12)], [Assign([Attribute(Name('sys', Load(), lineno=176, col_offset=12), 'maxint', Store(), lineno=176, col_offset=12)], Name('maxint', Load(), lineno=176, col_offset=25), lineno=176, col_offset=12)], lineno=170, col_offset=8), Assign([Subscript(Attribute(Name('os', Load(), lineno=179, col_offset=8), 'environ', Load(), lineno=179, col_offset=8), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=179, col_offset=19)), Store(), lineno=179, col_offset=8)], Str('10.4', lineno=179, col_offset=49), lineno=179, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=180, col_offset=8), [], [], None, None, lineno=180, col_offset=8), Index(Str('CFLAGS', lineno=180, col_offset=26)), Store(), lineno=180, col_offset=8)], Str('-arch ppc -arch i386 -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=180, col_offset=39), lineno=180, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertEqual', Load(), lineno=185, col_offset=8), [Call(Name('get_platform', Load(), lineno=185, col_offset=25), [], [], None, None, lineno=185, col_offset=25), Str('macosx-10.4-fat', lineno=185, col_offset=41)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=187, col_offset=8), [], [], None, None, lineno=187, col_offset=8), Index(Str('CFLAGS', lineno=187, col_offset=26)), Store(), lineno=187, col_offset=8)], Str('-arch x86_64 -arch i386 -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=187, col_offset=39), lineno=187, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), 'assertEqual', Load(), lineno=192, col_offset=8), [Call(Name('get_platform', Load(), lineno=192, col_offset=25), [], [], None, None, lineno=192, col_offset=25), Str('macosx-10.4-intel', lineno=192, col_offset=41)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=194, col_offset=8), [], [], None, None, lineno=194, col_offset=8), Index(Str('CFLAGS', lineno=194, col_offset=26)), Store(), lineno=194, col_offset=8)], Str('-arch x86_64 -arch ppc -arch i386 -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=194, col_offset=39), lineno=194, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'assertEqual', Load(), lineno=198, col_offset=8), [Call(Name('get_platform', Load(), lineno=198, col_offset=25), [], [], None, None, lineno=198, col_offset=25), Str('macosx-10.4-fat3', lineno=198, col_offset=41)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=200, col_offset=8), [], [], None, None, lineno=200, col_offset=8), Index(Str('CFLAGS', lineno=200, col_offset=26)), Store(), lineno=200, col_offset=8)], Str('-arch ppc64 -arch x86_64 -arch ppc -arch i386 -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=200, col_offset=39), lineno=200, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=8), 'assertEqual', Load(), lineno=204, col_offset=8), [Call(Name('get_platform', Load(), lineno=204, col_offset=25), [], [], None, None, lineno=204, col_offset=25), Str('macosx-10.4-universal', lineno=204, col_offset=41)], [], None, None, lineno=204, col_offset=8), lineno=204, col_offset=8), Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=206, col_offset=8), [], [], None, None, lineno=206, col_offset=8), Index(Str('CFLAGS', lineno=206, col_offset=26)), Store(), lineno=206, col_offset=8)], Str('-arch x86_64 -arch ppc64 -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=206, col_offset=39), lineno=206, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'assertEqual', Load(), lineno=211, col_offset=8), [Call(Name('get_platform', Load(), lineno=211, col_offset=25), [], [], None, None, lineno=211, col_offset=25), Str('macosx-10.4-fat64', lineno=211, col_offset=41)], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8), For(Name('arch', Store(), lineno=213, col_offset=12), Tuple([Str('ppc', lineno=213, col_offset=21), Str('i386', lineno=213, col_offset=28), Str('x86_64', lineno=213, col_offset=36), Str('ppc64', lineno=213, col_offset=46)], Load(), lineno=213, col_offset=21), [Assign([Subscript(Call(Name('get_config_vars', Load(), lineno=214, col_offset=12), [], [], None, None, lineno=214, col_offset=12), Index(Str('CFLAGS', lineno=214, col_offset=30)), Store(), lineno=214, col_offset=12)], BinOp(Str('-arch %s -isysroot /Developer/SDKs/MacOSX10.4u.sdk  -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -O3', lineno=214, col_offset=43), Mod(), Tuple([Name('arch', Load(), lineno=217, col_offset=71)], Load(), lineno=217, col_offset=71), lineno=214, col_offset=43), lineno=214, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=12), 'assertEqual', Load(), lineno=219, col_offset=12), [Call(Name('get_platform', Load(), lineno=219, col_offset=29), [], [], None, None, lineno=219, col_offset=29), BinOp(Str('macosx-10.4-%s', lineno=219, col_offset=45), Mod(), Tuple([Name('arch', Load(), lineno=219, col_offset=63)], Load(), lineno=219, col_offset=63), lineno=219, col_offset=45)], [], None, None, lineno=219, col_offset=12), lineno=219, col_offset=12)], [], lineno=213, col_offset=8), Assign([Attribute(Name('os', Load(), lineno=222, col_offset=8), 'name', Store(), lineno=222, col_offset=8)], Str('posix', lineno=222, col_offset=18), lineno=222, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=223, col_offset=8), 'version', Store(), lineno=223, col_offset=8)], Str('2.3.5 (#1, Jul  4 2007, 17:28:59) \n[GCC 4.1.2 20061115 (prerelease) (Debian 4.1.1-21)]', lineno=223, col_offset=23), lineno=223, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=225, col_offset=8), 'platform', Store(), lineno=225, col_offset=8)], Str('linux2', lineno=225, col_offset=23), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=226, col_offset=8), '_set_uname', Load(), lineno=226, col_offset=8), [Tuple([Str('Linux', lineno=226, col_offset=25), Str('aglae', lineno=226, col_offset=34), Str('2.6.21.1dedibox-r7', lineno=226, col_offset=43), Str('#1 Mon Apr 30 17:25:38 CEST 2007', lineno=227, col_offset=20), Str('i686', lineno=227, col_offset=56)], Load(), lineno=226, col_offset=25)], [], None, None, lineno=226, col_offset=8), lineno=226, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Call(Name('get_platform', Load(), lineno=229, col_offset=25), [], [], None, None, lineno=229, col_offset=25), Str('linux-i686', lineno=229, col_offset=41)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=113, col_offset=4), FunctionDef('test_get_config_h_filename', arguments([Name('self', Param(), lineno=233, col_offset=35)], None, None, []), [Assign([Name('config_h', Store(), lineno=234, col_offset=8)], Call(Attribute(Name('sysconfig', Load(), lineno=234, col_offset=19), 'get_config_h_filename', Load(), lineno=234, col_offset=19), [], [], None, None, lineno=234, col_offset=19), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertTrue', Load(), lineno=235, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=235, col_offset=24), 'path', Load(), lineno=235, col_offset=24), 'isfile', Load(), lineno=235, col_offset=24), [Name('config_h', Load(), lineno=235, col_offset=39)], [], None, None, lineno=235, col_offset=24), Name('config_h', Load(), lineno=235, col_offset=50)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8)], [], lineno=233, col_offset=4), FunctionDef('test_get_scheme_names', arguments([Name('self', Param(), lineno=237, col_offset=30)], None, None, []), [Assign([Name('wanted', Store(), lineno=238, col_offset=8)], Tuple([Str('nt', lineno=238, col_offset=18), Str('nt_user', lineno=238, col_offset=24), Str('os2', lineno=238, col_offset=35), Str('os2_home', lineno=238, col_offset=42), Str('osx_framework_user', lineno=238, col_offset=54), Str('posix_home', lineno=239, col_offset=18), Str('posix_prefix', lineno=239, col_offset=32), Str('posix_user', lineno=239, col_offset=48)], Load(), lineno=238, col_offset=18), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertEqual', Load(), lineno=240, col_offset=8), [Call(Name('get_scheme_names', Load(), lineno=240, col_offset=25), [], [], None, None, lineno=240, col_offset=25), Name('wanted', Load(), lineno=240, col_offset=45)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('test_symlink', arguments([Name('self', Param(), lineno=242, col_offset=21)], None, None, []), [Assign([Name('symlink', Store(), lineno=244, col_offset=8)], Call(Name('get_attribute', Load(), lineno=244, col_offset=18), [Name('os', Load(), lineno=244, col_offset=32), Str('symlink', lineno=244, col_offset=36)], [], None, None, lineno=244, col_offset=18), lineno=244, col_offset=8), FunctionDef('get', arguments([Name('python', Param(), lineno=245, col_offset=16)], None, None, []), [Assign([Name('cmd', Store(), lineno=246, col_offset=12)], List([Name('python', Load(), lineno=246, col_offset=19), Str('-c', lineno=246, col_offset=27), Str('import sysconfig; print sysconfig.get_platform()', lineno=247, col_offset=19)], Load(), lineno=246, col_offset=18), lineno=246, col_offset=12), Assign([Name('p', Store(), lineno=248, col_offset=12)], Call(Attribute(Name('subprocess', Load(), lineno=248, col_offset=16), 'Popen', Load(), lineno=248, col_offset=16), [Name('cmd', Load(), lineno=248, col_offset=33)], [keyword('stdout', Attribute(Name('subprocess', Load(), lineno=248, col_offset=45), 'PIPE', Load(), lineno=248, col_offset=45))], None, None, lineno=248, col_offset=16), lineno=248, col_offset=12), Return(Call(Attribute(Name('p', Load(), lineno=249, col_offset=19), 'communicate', Load(), lineno=249, col_offset=19), [], [], None, None, lineno=249, col_offset=19), lineno=249, col_offset=12)], [], lineno=245, col_offset=8), Assign([Name('real', Store(), lineno=250, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=250, col_offset=15), 'path', Load(), lineno=250, col_offset=15), 'realpath', Load(), lineno=250, col_offset=15), [Attribute(Name('sys', Load(), lineno=250, col_offset=32), 'executable', Load(), lineno=250, col_offset=32)], [], None, None, lineno=250, col_offset=15), lineno=250, col_offset=8), Assign([Name('link', Store(), lineno=251, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=251, col_offset=15), 'path', Load(), lineno=251, col_offset=15), 'abspath', Load(), lineno=251, col_offset=15), [Name('TESTFN', Load(), lineno=251, col_offset=31)], [], None, None, lineno=251, col_offset=15), lineno=251, col_offset=8), Expr(Call(Name('symlink', Load(), lineno=252, col_offset=8), [Name('real', Load(), lineno=252, col_offset=16), Name('link', Load(), lineno=252, col_offset=22)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=12), 'assertEqual', Load(), lineno=254, col_offset=12), [Call(Name('get', Load(), lineno=254, col_offset=29), [Name('real', Load(), lineno=254, col_offset=33)], [], None, None, lineno=254, col_offset=29), Call(Name('get', Load(), lineno=254, col_offset=40), [Name('link', Load(), lineno=254, col_offset=44)], [], None, None, lineno=254, col_offset=40)], [], None, None, lineno=254, col_offset=12), lineno=254, col_offset=12)], [Expr(Call(Name('unlink', Load(), lineno=256, col_offset=12), [Name('link', Load(), lineno=256, col_offset=19)], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=12)], lineno=253, col_offset=8)], [], lineno=242, col_offset=4), FunctionDef('test_user_similar', arguments([Name('self', Param(), lineno=258, col_offset=26)], None, None, []), [Assign([Name('base', Store(), lineno=261, col_offset=8)], Call(Name('get_config_var', Load(), lineno=261, col_offset=15), [Str('base', lineno=261, col_offset=30)], [], None, None, lineno=261, col_offset=15), lineno=261, col_offset=8), Assign([Name('user', Store(), lineno=262, col_offset=8)], Call(Name('get_config_var', Load(), lineno=262, col_offset=15), [Str('userbase', lineno=262, col_offset=30)], [], None, None, lineno=262, col_offset=15), lineno=262, col_offset=8), For(Name('name', Store(), lineno=263, col_offset=12), Tuple([Str('stdlib', lineno=263, col_offset=21), Str('platstdlib', lineno=263, col_offset=31), Str('purelib', lineno=263, col_offset=45), Str('platlib', lineno=263, col_offset=56)], Load(), lineno=263, col_offset=21), [Assign([Name('global_path', Store(), lineno=264, col_offset=12)], Call(Name('get_path', Load(), lineno=264, col_offset=26), [Name('name', Load(), lineno=264, col_offset=35), Str('posix_prefix', lineno=264, col_offset=41)], [], None, None, lineno=264, col_offset=26), lineno=264, col_offset=12), Assign([Name('user_path', Store(), lineno=265, col_offset=12)], Call(Name('get_path', Load(), lineno=265, col_offset=24), [Name('name', Load(), lineno=265, col_offset=33), Str('posix_user', lineno=265, col_offset=39)], [], None, None, lineno=265, col_offset=24), lineno=265, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=12), 'assertEqual', Load(), lineno=266, col_offset=12), [Name('user_path', Load(), lineno=266, col_offset=29), Call(Attribute(Name('global_path', Load(), lineno=266, col_offset=40), 'replace', Load(), lineno=266, col_offset=40), [Name('base', Load(), lineno=266, col_offset=60), Name('user', Load(), lineno=266, col_offset=66)], [], None, None, lineno=266, col_offset=40)], [], None, None, lineno=266, col_offset=12), lineno=266, col_offset=12)], [], lineno=263, col_offset=8)], [], lineno=258, col_offset=4)], [], lineno=22, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=269, col_offset=4), [Name('TestSysConfig', Load(), lineno=269, col_offset=17)], [], None, None, lineno=269, col_offset=4), lineno=269, col_offset=4)], [], lineno=268, col_offset=0), If(Compare(Name('__name__', Load(), lineno=271, col_offset=3), [Eq()], [Str('__main__', lineno=271, col_offset=15)], lineno=271, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=272, col_offset=4), [], [], None, None, lineno=272, col_offset=4), lineno=272, col_offset=4)], [], lineno=271, col_offset=0)])
