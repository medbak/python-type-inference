Module([Expr(Str('A Python debugger.', lineno=3, col_offset=0), lineno=3, col_offset=0), Import([alias('sys', None)], lineno=7, col_offset=0), Import([alias('linecache', None)], lineno=8, col_offset=0), Import([alias('cmd', None)], lineno=9, col_offset=0), Import([alias('bdb', None)], lineno=10, col_offset=0), ImportFrom('repr', [alias('Repr', None)], 0, lineno=11, col_offset=0), Import([alias('os', None)], lineno=12, col_offset=0), Import([alias('re', None)], lineno=13, col_offset=0), Import([alias('pprint', None)], lineno=14, col_offset=0), Import([alias('traceback', None)], lineno=15, col_offset=0), ClassDef('Restart', [Name('Exception', Load(), lineno=18, col_offset=14)], [Expr(Str('Causes a debugger to be restarted for the debugged python program.', lineno=19, col_offset=4), lineno=19, col_offset=4), Pass( lineno=20, col_offset=4)], [], lineno=18, col_offset=0), Assign([Name('_repr', Store(), lineno=24, col_offset=0)], Call(Name('Repr', Load(), lineno=24, col_offset=8), [], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=0), Assign([Attribute(Name('_repr', Load(), lineno=25, col_offset=0), 'maxstring', Store(), lineno=25, col_offset=0)], Num(200, lineno=25, col_offset=18), lineno=25, col_offset=0), Assign([Name('_saferepr', Store(), lineno=26, col_offset=0)], Attribute(Name('_repr', Load(), lineno=26, col_offset=12), 'repr', Load(), lineno=26, col_offset=12), lineno=26, col_offset=0), Assign([Name('__all__', Store(), lineno=28, col_offset=0)], List([Str('run', lineno=28, col_offset=11), Str('pm', lineno=28, col_offset=18), Str('Pdb', lineno=28, col_offset=24), Str('runeval', lineno=28, col_offset=31), Str('runctx', lineno=28, col_offset=42), Str('runcall', lineno=28, col_offset=52), Str('set_trace', lineno=28, col_offset=63), Str('post_mortem', lineno=29, col_offset=11), Str('help', lineno=29, col_offset=26)], Load(), lineno=28, col_offset=10), lineno=28, col_offset=0), FunctionDef('find_function', arguments([Name('funcname', Param(), lineno=31, col_offset=18), Name('filename', Param(), lineno=31, col_offset=28)], None, None, []), [Assign([Name('cre', Store(), lineno=32, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=32, col_offset=10), 'compile', Load(), lineno=32, col_offset=10), [BinOp(Str('def\\s+%s\\s*[(]', lineno=32, col_offset=21), Mod(), Call(Attribute(Name('re', Load(), lineno=32, col_offset=41), 'escape', Load(), lineno=32, col_offset=41), [Name('funcname', Load(), lineno=32, col_offset=51)], [], None, None, lineno=32, col_offset=41), lineno=32, col_offset=21)], [], None, None, lineno=32, col_offset=10), lineno=32, col_offset=4), TryExcept([Assign([Name('fp', Store(), lineno=34, col_offset=8)], Call(Name('open', Load(), lineno=34, col_offset=13), [Name('filename', Load(), lineno=34, col_offset=18)], [], None, None, lineno=34, col_offset=13), lineno=34, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=35, col_offset=11), None, [Return(Name('None', Load(), lineno=36, col_offset=15), lineno=36, col_offset=8)], lineno=35, col_offset=4)], [], lineno=33, col_offset=4), Assign([Name('lineno', Store(), lineno=38, col_offset=4)], Num(1, lineno=38, col_offset=13), lineno=38, col_offset=4), Assign([Name('answer', Store(), lineno=39, col_offset=4)], Name('None', Load(), lineno=39, col_offset=13), lineno=39, col_offset=4), While(Num(1, lineno=40, col_offset=10), [Assign([Name('line', Store(), lineno=41, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=41, col_offset=15), 'readline', Load(), lineno=41, col_offset=15), [], [], None, None, lineno=41, col_offset=15), lineno=41, col_offset=8), If(Compare(Name('line', Load(), lineno=42, col_offset=11), [Eq()], [Str('', lineno=42, col_offset=19)], lineno=42, col_offset=11), [Break( lineno=43, col_offset=12)], [], lineno=42, col_offset=8), If(Call(Attribute(Name('cre', Load(), lineno=44, col_offset=11), 'match', Load(), lineno=44, col_offset=11), [Name('line', Load(), lineno=44, col_offset=21)], [], None, None, lineno=44, col_offset=11), [Assign([Name('answer', Store(), lineno=45, col_offset=12)], Tuple([Name('funcname', Load(), lineno=45, col_offset=21), Name('filename', Load(), lineno=45, col_offset=31), Name('lineno', Load(), lineno=45, col_offset=41)], Load(), lineno=45, col_offset=21), lineno=45, col_offset=12), Break( lineno=46, col_offset=12)], [], lineno=44, col_offset=8), Assign([Name('lineno', Store(), lineno=47, col_offset=8)], BinOp(Name('lineno', Load(), lineno=47, col_offset=17), Add(), Num(1, lineno=47, col_offset=26), lineno=47, col_offset=17), lineno=47, col_offset=8)], [], lineno=40, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=48, col_offset=4), 'close', Load(), lineno=48, col_offset=4), [], [], None, None, lineno=48, col_offset=4), lineno=48, col_offset=4), Return(Name('answer', Load(), lineno=49, col_offset=11), lineno=49, col_offset=4)], [], lineno=31, col_offset=0), Assign([Name('line_prefix', Store(), lineno=57, col_offset=0)], Str('\n-> ', lineno=57, col_offset=14), lineno=57, col_offset=0), ClassDef('Pdb', [Attribute(Name('bdb', Load(), lineno=59, col_offset=10), 'Bdb', Load(), lineno=59, col_offset=10), Attribute(Name('cmd', Load(), lineno=59, col_offset=19), 'Cmd', Load(), lineno=59, col_offset=19)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=61, col_offset=17), Name('completekey', Param(), lineno=61, col_offset=23), Name('stdin', Param(), lineno=61, col_offset=42), Name('stdout', Param(), lineno=61, col_offset=54), Name('skip', Param(), lineno=61, col_offset=67)], None, None, [Str('tab', lineno=61, col_offset=35), Name('None', Load(), lineno=61, col_offset=48), Name('None', Load(), lineno=61, col_offset=61), Name('None', Load(), lineno=61, col_offset=72)]), [Expr(Call(Attribute(Attribute(Name('bdb', Load(), lineno=62, col_offset=8), 'Bdb', Load(), lineno=62, col_offset=8), '__init__', Load(), lineno=62, col_offset=8), [Name('self', Load(), lineno=62, col_offset=25)], [keyword('skip', Name('skip', Load(), lineno=62, col_offset=36))], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Attribute(Attribute(Name('cmd', Load(), lineno=63, col_offset=8), 'Cmd', Load(), lineno=63, col_offset=8), '__init__', Load(), lineno=63, col_offset=8), [Name('self', Load(), lineno=63, col_offset=25), Name('completekey', Load(), lineno=63, col_offset=31), Name('stdin', Load(), lineno=63, col_offset=44), Name('stdout', Load(), lineno=63, col_offset=51)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), If(Name('stdout', Load(), lineno=64, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=65, col_offset=12), 'use_rawinput', Store(), lineno=65, col_offset=12)], Num(0, lineno=65, col_offset=32), lineno=65, col_offset=12)], [], lineno=64, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=66, col_offset=8), 'prompt', Store(), lineno=66, col_offset=8)], Str('(Pdb) ', lineno=66, col_offset=22), lineno=66, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=67, col_offset=8), 'aliases', Store(), lineno=67, col_offset=8)], Dict([], [], lineno=67, col_offset=23), lineno=67, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=68, col_offset=8), 'mainpyfile', Store(), lineno=68, col_offset=8)], Str('', lineno=68, col_offset=26), lineno=68, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=69, col_offset=8), '_wait_for_mainpyfile', Store(), lineno=69, col_offset=8)], Num(0, lineno=69, col_offset=36), lineno=69, col_offset=8), TryExcept([Import([alias('readline', None)], lineno=72, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=73, col_offset=15), None, [Pass( lineno=74, col_offset=12)], lineno=73, col_offset=8)], [], lineno=71, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=77, col_offset=8), 'rcLines', Store(), lineno=77, col_offset=8)], List([], Load(), lineno=77, col_offset=23), lineno=77, col_offset=8), If(Compare(Str('HOME', lineno=78, col_offset=11), [In()], [Attribute(Name('os', Load(), lineno=78, col_offset=21), 'environ', Load(), lineno=78, col_offset=21)], lineno=78, col_offset=11), [Assign([Name('envHome', Store(), lineno=79, col_offset=12)], Subscript(Attribute(Name('os', Load(), lineno=79, col_offset=22), 'environ', Load(), lineno=79, col_offset=22), Index(Str('HOME', lineno=79, col_offset=33)), Load(), lineno=79, col_offset=22), lineno=79, col_offset=12), TryExcept([Assign([Name('rcFile', Store(), lineno=81, col_offset=16)], Call(Name('open', Load(), lineno=81, col_offset=25), [Call(Attribute(Attribute(Name('os', Load(), lineno=81, col_offset=30), 'path', Load(), lineno=81, col_offset=30), 'join', Load(), lineno=81, col_offset=30), [Name('envHome', Load(), lineno=81, col_offset=43), Str('.pdbrc', lineno=81, col_offset=52)], [], None, None, lineno=81, col_offset=30)], [], None, None, lineno=81, col_offset=25), lineno=81, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=82, col_offset=19), None, [Pass( lineno=83, col_offset=16)], lineno=82, col_offset=12)], [For(Name('line', Store(), lineno=85, col_offset=20), Call(Attribute(Name('rcFile', Load(), lineno=85, col_offset=28), 'readlines', Load(), lineno=85, col_offset=28), [], [], None, None, lineno=85, col_offset=28), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=86, col_offset=20), 'rcLines', Load(), lineno=86, col_offset=20), 'append', Load(), lineno=86, col_offset=20), [Name('line', Load(), lineno=86, col_offset=40)], [], None, None, lineno=86, col_offset=20), lineno=86, col_offset=20)], [], lineno=85, col_offset=16), Expr(Call(Attribute(Name('rcFile', Load(), lineno=87, col_offset=16), 'close', Load(), lineno=87, col_offset=16), [], [], None, None, lineno=87, col_offset=16), lineno=87, col_offset=16)], lineno=80, col_offset=12)], [], lineno=78, col_offset=8), TryExcept([Assign([Name('rcFile', Store(), lineno=89, col_offset=12)], Call(Name('open', Load(), lineno=89, col_offset=21), [Str('.pdbrc', lineno=89, col_offset=26)], [], None, None, lineno=89, col_offset=21), lineno=89, col_offset=12)], [ExceptHandler(Name('IOError', Load(), lineno=90, col_offset=15), None, [Pass( lineno=91, col_offset=12)], lineno=90, col_offset=8)], [For(Name('line', Store(), lineno=93, col_offset=16), Call(Attribute(Name('rcFile', Load(), lineno=93, col_offset=24), 'readlines', Load(), lineno=93, col_offset=24), [], [], None, None, lineno=93, col_offset=24), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=94, col_offset=16), 'rcLines', Load(), lineno=94, col_offset=16), 'append', Load(), lineno=94, col_offset=16), [Name('line', Load(), lineno=94, col_offset=36)], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=16)], [], lineno=93, col_offset=12), Expr(Call(Attribute(Name('rcFile', Load(), lineno=95, col_offset=12), 'close', Load(), lineno=95, col_offset=12), [], [], None, None, lineno=95, col_offset=12), lineno=95, col_offset=12)], lineno=88, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=97, col_offset=8), 'commands', Store(), lineno=97, col_offset=8)], Dict([], [], lineno=97, col_offset=24), lineno=97, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=98, col_offset=8), 'commands_doprompt', Store(), lineno=98, col_offset=8)], Dict([], [], lineno=98, col_offset=33), lineno=98, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=100, col_offset=8), 'commands_silent', Store(), lineno=100, col_offset=8)], Dict([], [], lineno=100, col_offset=31), lineno=100, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=102, col_offset=8), 'commands_defining', Store(), lineno=102, col_offset=8)], Name('False', Load(), lineno=102, col_offset=33), lineno=102, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=104, col_offset=8), 'commands_bnum', Store(), lineno=104, col_offset=8)], Name('None', Load(), lineno=104, col_offset=29), lineno=104, col_offset=8)], [], lineno=61, col_offset=4), FunctionDef('reset', arguments([Name('self', Param(), lineno=107, col_offset=14)], None, None, []), [Expr(Call(Attribute(Attribute(Name('bdb', Load(), lineno=108, col_offset=8), 'Bdb', Load(), lineno=108, col_offset=8), 'reset', Load(), lineno=108, col_offset=8), [Name('self', Load(), lineno=108, col_offset=22)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'forget', Load(), lineno=109, col_offset=8), [], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8)], [], lineno=107, col_offset=4), FunctionDef('forget', arguments([Name('self', Param(), lineno=111, col_offset=15)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=112, col_offset=8), 'lineno', Store(), lineno=112, col_offset=8)], Name('None', Load(), lineno=112, col_offset=22), lineno=112, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=113, col_offset=8), 'stack', Store(), lineno=113, col_offset=8)], List([], Load(), lineno=113, col_offset=21), lineno=113, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=114, col_offset=8), 'curindex', Store(), lineno=114, col_offset=8)], Num(0, lineno=114, col_offset=24), lineno=114, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=115, col_offset=8), 'curframe', Store(), lineno=115, col_offset=8)], Name('None', Load(), lineno=115, col_offset=24), lineno=115, col_offset=8)], [], lineno=111, col_offset=4), FunctionDef('setup', arguments([Name('self', Param(), lineno=117, col_offset=14), Name('f', Param(), lineno=117, col_offset=20), Name('t', Param(), lineno=117, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'forget', Load(), lineno=118, col_offset=8), [], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8), Assign([Tuple([Attribute(Name('self', Load(), lineno=119, col_offset=8), 'stack', Store(), lineno=119, col_offset=8), Attribute(Name('self', Load(), lineno=119, col_offset=20), 'curindex', Store(), lineno=119, col_offset=20)], Store(), lineno=119, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=119, col_offset=36), 'get_stack', Load(), lineno=119, col_offset=36), [Name('f', Load(), lineno=119, col_offset=51), Name('t', Load(), lineno=119, col_offset=54)], [], None, None, lineno=119, col_offset=36), lineno=119, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'curframe', Store(), lineno=120, col_offset=8)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=120, col_offset=24), 'stack', Load(), lineno=120, col_offset=24), Index(Attribute(Name('self', Load(), lineno=120, col_offset=35), 'curindex', Load(), lineno=120, col_offset=35)), Load(), lineno=120, col_offset=24), Index(Num(0, lineno=120, col_offset=50)), Load(), lineno=120, col_offset=24), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=124, col_offset=8), 'curframe_locals', Store(), lineno=124, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=124, col_offset=31), 'curframe', Load(), lineno=124, col_offset=31), 'f_locals', Load(), lineno=124, col_offset=31), lineno=124, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=8), 'execRcLines', Load(), lineno=125, col_offset=8), [], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8)], [], lineno=117, col_offset=4), FunctionDef('execRcLines', arguments([Name('self', Param(), lineno=128, col_offset=20)], None, None, []), [If(Attribute(Name('self', Load(), lineno=129, col_offset=11), 'rcLines', Load(), lineno=129, col_offset=11), [Assign([Name('rcLines', Store(), lineno=131, col_offset=12)], Attribute(Name('self', Load(), lineno=131, col_offset=22), 'rcLines', Load(), lineno=131, col_offset=22), lineno=131, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=133, col_offset=12), 'rcLines', Store(), lineno=133, col_offset=12)], List([], Load(), lineno=133, col_offset=27), lineno=133, col_offset=12), For(Name('line', Store(), lineno=134, col_offset=16), Name('rcLines', Load(), lineno=134, col_offset=24), [Assign([Name('line', Store(), lineno=135, col_offset=16)], Subscript(Name('line', Load(), lineno=135, col_offset=23), Slice(None, Num(-1, lineno=135, col_offset=30), None), Load(), lineno=135, col_offset=23), lineno=135, col_offset=16), If(BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=136, col_offset=19), [Name('line', Load(), lineno=136, col_offset=23)], [], None, None, lineno=136, col_offset=19), [Gt()], [Num(0, lineno=136, col_offset=31)], lineno=136, col_offset=19), Compare(Subscript(Name('line', Load(), lineno=136, col_offset=37), Index(Num(0, lineno=136, col_offset=42)), Load(), lineno=136, col_offset=37), [NotEq()], [Str('#', lineno=136, col_offset=48)], lineno=136, col_offset=37)], lineno=136, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=137, col_offset=20), 'onecmd', Load(), lineno=137, col_offset=20), [Name('line', Load(), lineno=137, col_offset=32)], [], None, None, lineno=137, col_offset=20), lineno=137, col_offset=20)], [], lineno=136, col_offset=16)], [], lineno=134, col_offset=12)], [], lineno=129, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('user_call', arguments([Name('self', Param(), lineno=141, col_offset=18), Name('frame', Param(), lineno=141, col_offset=24), Name('argument_list', Param(), lineno=141, col_offset=31)], None, None, []), [Expr(Str('This method is called when there is the remote possibility\n        that we ever need to stop in this function.', lineno=143, col_offset=-1), lineno=143, col_offset=-1), If(Attribute(Name('self', Load(), lineno=144, col_offset=11), '_wait_for_mainpyfile', Load(), lineno=144, col_offset=11), [Return(None, lineno=145, col_offset=12)], [], lineno=144, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=146, col_offset=11), 'stop_here', Load(), lineno=146, col_offset=11), [Name('frame', Load(), lineno=146, col_offset=26)], [], None, None, lineno=146, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=147, col_offset=20), 'stdout', Load(), lineno=147, col_offset=20), [Str('--Call--', lineno=147, col_offset=33)], True, lineno=147, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=12), 'interaction', Load(), lineno=148, col_offset=12), [Name('frame', Load(), lineno=148, col_offset=29), Name('None', Load(), lineno=148, col_offset=36)], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=12)], [], lineno=146, col_offset=8)], [], lineno=141, col_offset=4), FunctionDef('user_line', arguments([Name('self', Param(), lineno=150, col_offset=18), Name('frame', Param(), lineno=150, col_offset=24)], None, None, []), [Expr(Str('This function is called when we stop or break at this line.', lineno=151, col_offset=8), lineno=151, col_offset=8), If(Attribute(Name('self', Load(), lineno=152, col_offset=11), '_wait_for_mainpyfile', Load(), lineno=152, col_offset=11), [If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=153, col_offset=16), 'mainpyfile', Load(), lineno=153, col_offset=16), [NotEq()], [Call(Attribute(Name('self', Load(), lineno=153, col_offset=35), 'canonic', Load(), lineno=153, col_offset=35), [Attribute(Attribute(Name('frame', Load(), lineno=153, col_offset=48), 'f_code', Load(), lineno=153, col_offset=48), 'co_filename', Load(), lineno=153, col_offset=48)], [], None, None, lineno=153, col_offset=35)], lineno=153, col_offset=16), Compare(Attribute(Name('frame', Load(), lineno=154, col_offset=19), 'f_lineno', Load(), lineno=154, col_offset=19), [LtE()], [Num(0, lineno=154, col_offset=36)], lineno=154, col_offset=19)], lineno=153, col_offset=16), [Return(None, lineno=155, col_offset=16)], [], lineno=153, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=156, col_offset=12), '_wait_for_mainpyfile', Store(), lineno=156, col_offset=12)], Num(0, lineno=156, col_offset=40), lineno=156, col_offset=12)], [], lineno=152, col_offset=8), If(Call(Attribute(Name('self', Load(), lineno=157, col_offset=11), 'bp_commands', Load(), lineno=157, col_offset=11), [Name('frame', Load(), lineno=157, col_offset=28)], [], None, None, lineno=157, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=12), 'interaction', Load(), lineno=158, col_offset=12), [Name('frame', Load(), lineno=158, col_offset=29), Name('None', Load(), lineno=158, col_offset=36)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], [], lineno=157, col_offset=8)], [], lineno=150, col_offset=4), FunctionDef('bp_commands', arguments([Name('self', Param(), lineno=160, col_offset=20), Name('frame', Param(), lineno=160, col_offset=25)], None, None, []), [Expr(Str('Call every command that was set for the current active breakpoint\n        (if there is one).\n\n        Returns True if the normal interaction function must be called,\n        False otherwise.', lineno=165, col_offset=-1), lineno=165, col_offset=-1), If(BoolOp(And(), [Call(Name('getattr', Load(), lineno=167, col_offset=11), [Name('self', Load(), lineno=167, col_offset=19), Str('currentbp', lineno=167, col_offset=25), Name('False', Load(), lineno=167, col_offset=38)], [], None, None, lineno=167, col_offset=11), Compare(Attribute(Name('self', Load(), lineno=168, col_offset=15), 'currentbp', Load(), lineno=168, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=168, col_offset=33), 'commands', Load(), lineno=168, col_offset=33)], lineno=168, col_offset=15)], lineno=167, col_offset=11), [Assign([Name('currentbp', Store(), lineno=169, col_offset=12)], Attribute(Name('self', Load(), lineno=169, col_offset=24), 'currentbp', Load(), lineno=169, col_offset=24), lineno=169, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=170, col_offset=12), 'currentbp', Store(), lineno=170, col_offset=12)], Num(0, lineno=170, col_offset=29), lineno=170, col_offset=12), Assign([Name('lastcmd_back', Store(), lineno=171, col_offset=12)], Attribute(Name('self', Load(), lineno=171, col_offset=27), 'lastcmd', Load(), lineno=171, col_offset=27), lineno=171, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=172, col_offset=12), 'setup', Load(), lineno=172, col_offset=12), [Name('frame', Load(), lineno=172, col_offset=23), Name('None', Load(), lineno=172, col_offset=30)], [], None, None, lineno=172, col_offset=12), lineno=172, col_offset=12), For(Name('line', Store(), lineno=173, col_offset=16), Subscript(Attribute(Name('self', Load(), lineno=173, col_offset=24), 'commands', Load(), lineno=173, col_offset=24), Index(Name('currentbp', Load(), lineno=173, col_offset=38)), Load(), lineno=173, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=174, col_offset=16), 'onecmd', Load(), lineno=174, col_offset=16), [Name('line', Load(), lineno=174, col_offset=28)], [], None, None, lineno=174, col_offset=16), lineno=174, col_offset=16)], [], lineno=173, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=175, col_offset=12), 'lastcmd', Store(), lineno=175, col_offset=12)], Name('lastcmd_back', Load(), lineno=175, col_offset=27), lineno=175, col_offset=12), If(UnaryOp(Not(), Subscript(Attribute(Name('self', Load(), lineno=176, col_offset=19), 'commands_silent', Load(), lineno=176, col_offset=19), Index(Name('currentbp', Load(), lineno=176, col_offset=40)), Load(), lineno=176, col_offset=19), lineno=176, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=177, col_offset=16), 'print_stack_entry', Load(), lineno=177, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=177, col_offset=39), 'stack', Load(), lineno=177, col_offset=39), Index(Attribute(Name('self', Load(), lineno=177, col_offset=50), 'curindex', Load(), lineno=177, col_offset=50)), Load(), lineno=177, col_offset=39)], [], None, None, lineno=177, col_offset=16), lineno=177, col_offset=16)], [], lineno=176, col_offset=12), If(Subscript(Attribute(Name('self', Load(), lineno=178, col_offset=15), 'commands_doprompt', Load(), lineno=178, col_offset=15), Index(Name('currentbp', Load(), lineno=178, col_offset=38)), Load(), lineno=178, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=16), 'cmdloop', Load(), lineno=179, col_offset=16), [], [], None, None, lineno=179, col_offset=16), lineno=179, col_offset=16)], [], lineno=178, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=12), 'forget', Load(), lineno=180, col_offset=12), [], [], None, None, lineno=180, col_offset=12), lineno=180, col_offset=12), Return(None, lineno=181, col_offset=12)], [], lineno=167, col_offset=8), Return(Num(1, lineno=182, col_offset=15), lineno=182, col_offset=8)], [], lineno=160, col_offset=4), FunctionDef('user_return', arguments([Name('self', Param(), lineno=184, col_offset=20), Name('frame', Param(), lineno=184, col_offset=26), Name('return_value', Param(), lineno=184, col_offset=33)], None, None, []), [Expr(Str('This function is called when a return trap is set here.', lineno=185, col_offset=8), lineno=185, col_offset=8), If(Attribute(Name('self', Load(), lineno=186, col_offset=11), '_wait_for_mainpyfile', Load(), lineno=186, col_offset=11), [Return(None, lineno=187, col_offset=12)], [], lineno=186, col_offset=8), Assign([Subscript(Attribute(Name('frame', Load(), lineno=188, col_offset=8), 'f_locals', Load(), lineno=188, col_offset=8), Index(Str('__return__', lineno=188, col_offset=23)), Store(), lineno=188, col_offset=8)], Name('return_value', Load(), lineno=188, col_offset=39), lineno=188, col_offset=8), Print(Attribute(Name('self', Load(), lineno=189, col_offset=16), 'stdout', Load(), lineno=189, col_offset=16), [Str('--Return--', lineno=189, col_offset=29)], True, lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'interaction', Load(), lineno=190, col_offset=8), [Name('frame', Load(), lineno=190, col_offset=25), Name('None', Load(), lineno=190, col_offset=32)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8)], [], lineno=184, col_offset=4), FunctionDef('user_exception', arguments([Name('self', Param(), lineno=192, col_offset=23), Name('frame', Param(), lineno=192, col_offset=29), Name('exc_info', Param(), lineno=192, col_offset=36)], None, None, []), [Expr(Str('This function is called if an exception occurs,\n        but only if we are to stop at or just below this level.', lineno=194, col_offset=-1), lineno=194, col_offset=-1), If(Attribute(Name('self', Load(), lineno=195, col_offset=11), '_wait_for_mainpyfile', Load(), lineno=195, col_offset=11), [Return(None, lineno=196, col_offset=12)], [], lineno=195, col_offset=8), Assign([Tuple([Name('exc_type', Store(), lineno=197, col_offset=8), Name('exc_value', Store(), lineno=197, col_offset=18), Name('exc_traceback', Store(), lineno=197, col_offset=29)], Store(), lineno=197, col_offset=8)], Name('exc_info', Load(), lineno=197, col_offset=45), lineno=197, col_offset=8), Assign([Subscript(Attribute(Name('frame', Load(), lineno=198, col_offset=8), 'f_locals', Load(), lineno=198, col_offset=8), Index(Str('__exception__', lineno=198, col_offset=23)), Store(), lineno=198, col_offset=8)], Tuple([Name('exc_type', Load(), lineno=198, col_offset=42), Name('exc_value', Load(), lineno=198, col_offset=52)], Load(), lineno=198, col_offset=42), lineno=198, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=199, col_offset=11), [Name('exc_type', Load(), lineno=199, col_offset=16)], [], None, None, lineno=199, col_offset=11), [Eq()], [Call(Name('type', Load(), lineno=199, col_offset=29), [Str('', lineno=199, col_offset=34)], [], None, None, lineno=199, col_offset=29)], lineno=199, col_offset=11), [Assign([Name('exc_type_name', Store(), lineno=200, col_offset=12)], Name('exc_type', Load(), lineno=200, col_offset=28), lineno=200, col_offset=12)], [Assign([Name('exc_type_name', Store(), lineno=201, col_offset=14)], Attribute(Name('exc_type', Load(), lineno=201, col_offset=30), '__name__', Load(), lineno=201, col_offset=30), lineno=201, col_offset=14)], lineno=199, col_offset=8), Print(Attribute(Name('self', Load(), lineno=202, col_offset=16), 'stdout', Load(), lineno=202, col_offset=16), [BinOp(Name('exc_type_name', Load(), lineno=202, col_offset=29), Add(), Str(':', lineno=202, col_offset=45), lineno=202, col_offset=29), Call(Name('_saferepr', Load(), lineno=202, col_offset=50), [Name('exc_value', Load(), lineno=202, col_offset=60)], [], None, None, lineno=202, col_offset=50)], True, lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=203, col_offset=8), 'interaction', Load(), lineno=203, col_offset=8), [Name('frame', Load(), lineno=203, col_offset=25), Name('exc_traceback', Load(), lineno=203, col_offset=32)], [], None, None, lineno=203, col_offset=8), lineno=203, col_offset=8)], [], lineno=192, col_offset=4), FunctionDef('interaction', arguments([Name('self', Param(), lineno=207, col_offset=20), Name('frame', Param(), lineno=207, col_offset=26), Name('traceback', Param(), lineno=207, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'setup', Load(), lineno=208, col_offset=8), [Name('frame', Load(), lineno=208, col_offset=19), Name('traceback', Load(), lineno=208, col_offset=26)], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=209, col_offset=8), 'print_stack_entry', Load(), lineno=209, col_offset=8), [Subscript(Attribute(Name('self', Load(), lineno=209, col_offset=31), 'stack', Load(), lineno=209, col_offset=31), Index(Attribute(Name('self', Load(), lineno=209, col_offset=42), 'curindex', Load(), lineno=209, col_offset=42)), Load(), lineno=209, col_offset=31)], [], None, None, lineno=209, col_offset=8), lineno=209, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'cmdloop', Load(), lineno=210, col_offset=8), [], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=211, col_offset=8), 'forget', Load(), lineno=211, col_offset=8), [], [], None, None, lineno=211, col_offset=8), lineno=211, col_offset=8)], [], lineno=207, col_offset=4), FunctionDef('displayhook', arguments([Name('self', Param(), lineno=213, col_offset=20), Name('obj', Param(), lineno=213, col_offset=26)], None, None, []), [Expr(Str('Custom displayhook for the exec in default(), which prevents\n        assignment of the _ variable in the builtins.\n        ', lineno=216, col_offset=-1), lineno=216, col_offset=-1), If(Compare(Name('obj', Load(), lineno=218, col_offset=11), [IsNot()], [Name('None', Load(), lineno=218, col_offset=22)], lineno=218, col_offset=11), [Print(None, [Call(Name('repr', Load(), lineno=219, col_offset=18), [Name('obj', Load(), lineno=219, col_offset=23)], [], None, None, lineno=219, col_offset=18)], True, lineno=219, col_offset=12)], [], lineno=218, col_offset=8)], [], lineno=213, col_offset=4), FunctionDef('default', arguments([Name('self', Param(), lineno=221, col_offset=16), Name('line', Param(), lineno=221, col_offset=22)], None, None, []), [If(Compare(Subscript(Name('line', Load(), lineno=222, col_offset=11), Slice(None, Num(1, lineno=222, col_offset=17), None), Load(), lineno=222, col_offset=11), [Eq()], [Str('!', lineno=222, col_offset=23)], lineno=222, col_offset=11), [Assign([Name('line', Store(), lineno=222, col_offset=28)], Subscript(Name('line', Load(), lineno=222, col_offset=35), Slice(Num(1, lineno=222, col_offset=40), None, None), Load(), lineno=222, col_offset=35), lineno=222, col_offset=28)], [], lineno=222, col_offset=8), Assign([Name('locals', Store(), lineno=223, col_offset=8)], Attribute(Name('self', Load(), lineno=223, col_offset=17), 'curframe_locals', Load(), lineno=223, col_offset=17), lineno=223, col_offset=8), Assign([Name('globals', Store(), lineno=224, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=224, col_offset=18), 'curframe', Load(), lineno=224, col_offset=18), 'f_globals', Load(), lineno=224, col_offset=18), lineno=224, col_offset=8), TryExcept([Assign([Name('code', Store(), lineno=226, col_offset=12)], Call(Name('compile', Load(), lineno=226, col_offset=19), [BinOp(Name('line', Load(), lineno=226, col_offset=27), Add(), Str('\n', lineno=226, col_offset=34), lineno=226, col_offset=27), Str('<stdin>', lineno=226, col_offset=40), Str('single', lineno=226, col_offset=51)], [], None, None, lineno=226, col_offset=19), lineno=226, col_offset=12), Assign([Name('save_stdout', Store(), lineno=227, col_offset=12)], Attribute(Name('sys', Load(), lineno=227, col_offset=26), 'stdout', Load(), lineno=227, col_offset=26), lineno=227, col_offset=12), Assign([Name('save_stdin', Store(), lineno=228, col_offset=12)], Attribute(Name('sys', Load(), lineno=228, col_offset=25), 'stdin', Load(), lineno=228, col_offset=25), lineno=228, col_offset=12), Assign([Name('save_displayhook', Store(), lineno=229, col_offset=12)], Attribute(Name('sys', Load(), lineno=229, col_offset=31), 'displayhook', Load(), lineno=229, col_offset=31), lineno=229, col_offset=12), TryFinally([Assign([Attribute(Name('sys', Load(), lineno=231, col_offset=16), 'stdin', Store(), lineno=231, col_offset=16)], Attribute(Name('self', Load(), lineno=231, col_offset=28), 'stdin', Load(), lineno=231, col_offset=28), lineno=231, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=232, col_offset=16), 'stdout', Store(), lineno=232, col_offset=16)], Attribute(Name('self', Load(), lineno=232, col_offset=29), 'stdout', Load(), lineno=232, col_offset=29), lineno=232, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=233, col_offset=16), 'displayhook', Store(), lineno=233, col_offset=16)], Attribute(Name('self', Load(), lineno=233, col_offset=34), 'displayhook', Load(), lineno=233, col_offset=34), lineno=233, col_offset=16), Exec(Name('code', Load(), lineno=234, col_offset=21), Name('globals', Load(), lineno=234, col_offset=29), Name('locals', Load(), lineno=234, col_offset=38), lineno=234, col_offset=16)], [Assign([Attribute(Name('sys', Load(), lineno=236, col_offset=16), 'stdout', Store(), lineno=236, col_offset=16)], Name('save_stdout', Load(), lineno=236, col_offset=29), lineno=236, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=237, col_offset=16), 'stdin', Store(), lineno=237, col_offset=16)], Name('save_stdin', Load(), lineno=237, col_offset=28), lineno=237, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=238, col_offset=16), 'displayhook', Store(), lineno=238, col_offset=16)], Name('save_displayhook', Load(), lineno=238, col_offset=34), lineno=238, col_offset=16)], lineno=230, col_offset=12)], [ExceptHandler(None, None, [Assign([Tuple([Name('t', Store(), lineno=240, col_offset=12), Name('v', Store(), lineno=240, col_offset=15)], Store(), lineno=240, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=240, col_offset=19), 'exc_info', Load(), lineno=240, col_offset=19), [], [], None, None, lineno=240, col_offset=19), Slice(None, Num(2, lineno=240, col_offset=35), None), Load(), lineno=240, col_offset=19), lineno=240, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=241, col_offset=15), [Name('t', Load(), lineno=241, col_offset=20)], [], None, None, lineno=241, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=241, col_offset=26), [Str('', lineno=241, col_offset=31)], [], None, None, lineno=241, col_offset=26)], lineno=241, col_offset=15), [Assign([Name('exc_type_name', Store(), lineno=242, col_offset=16)], Name('t', Load(), lineno=242, col_offset=32), lineno=242, col_offset=16)], [Assign([Name('exc_type_name', Store(), lineno=243, col_offset=18)], Attribute(Name('t', Load(), lineno=243, col_offset=34), '__name__', Load(), lineno=243, col_offset=34), lineno=243, col_offset=18)], lineno=241, col_offset=12), Print(Attribute(Name('self', Load(), lineno=244, col_offset=20), 'stdout', Load(), lineno=244, col_offset=20), [Str('***', lineno=244, col_offset=33), BinOp(Name('exc_type_name', Load(), lineno=244, col_offset=40), Add(), Str(':', lineno=244, col_offset=56), lineno=244, col_offset=40), Name('v', Load(), lineno=244, col_offset=61)], True, lineno=244, col_offset=12)], lineno=239, col_offset=8)], [], lineno=225, col_offset=8)], [], lineno=221, col_offset=4), FunctionDef('precmd', arguments([Name('self', Param(), lineno=246, col_offset=15), Name('line', Param(), lineno=246, col_offset=21)], None, None, []), [Expr(Str("Handle alias expansion and ';;' separator.", lineno=247, col_offset=8), lineno=247, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('line', Load(), lineno=248, col_offset=15), 'strip', Load(), lineno=248, col_offset=15), [], [], None, None, lineno=248, col_offset=15), lineno=248, col_offset=11), [Return(Name('line', Load(), lineno=249, col_offset=19), lineno=249, col_offset=12)], [], lineno=248, col_offset=8), Assign([Name('args', Store(), lineno=250, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=250, col_offset=15), 'split', Load(), lineno=250, col_offset=15), [], [], None, None, lineno=250, col_offset=15), lineno=250, col_offset=8), While(Compare(Subscript(Name('args', Load(), lineno=251, col_offset=14), Index(Num(0, lineno=251, col_offset=19)), Load(), lineno=251, col_offset=14), [In()], [Attribute(Name('self', Load(), lineno=251, col_offset=25), 'aliases', Load(), lineno=251, col_offset=25)], lineno=251, col_offset=14), [Assign([Name('line', Store(), lineno=252, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=252, col_offset=19), 'aliases', Load(), lineno=252, col_offset=19), Index(Subscript(Name('args', Load(), lineno=252, col_offset=32), Index(Num(0, lineno=252, col_offset=37)), Load(), lineno=252, col_offset=32)), Load(), lineno=252, col_offset=19), lineno=252, col_offset=12), Assign([Name('ii', Store(), lineno=253, col_offset=12)], Num(1, lineno=253, col_offset=17), lineno=253, col_offset=12), For(Name('tmpArg', Store(), lineno=254, col_offset=16), Subscript(Name('args', Load(), lineno=254, col_offset=26), Slice(Num(1, lineno=254, col_offset=31), None, None), Load(), lineno=254, col_offset=26), [Assign([Name('line', Store(), lineno=255, col_offset=16)], Call(Attribute(Name('line', Load(), lineno=255, col_offset=23), 'replace', Load(), lineno=255, col_offset=23), [BinOp(Str('%', lineno=255, col_offset=36), Add(), Call(Name('str', Load(), lineno=255, col_offset=42), [Name('ii', Load(), lineno=255, col_offset=46)], [], None, None, lineno=255, col_offset=42), lineno=255, col_offset=36), Name('tmpArg', Load(), lineno=256, col_offset=38)], [], None, None, lineno=255, col_offset=23), lineno=255, col_offset=16), Assign([Name('ii', Store(), lineno=257, col_offset=16)], BinOp(Name('ii', Load(), lineno=257, col_offset=21), Add(), Num(1, lineno=257, col_offset=26), lineno=257, col_offset=21), lineno=257, col_offset=16)], [], lineno=254, col_offset=12), Assign([Name('line', Store(), lineno=258, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=258, col_offset=19), 'replace', Load(), lineno=258, col_offset=19), [Str('%*', lineno=258, col_offset=32), Call(Attribute(Str(' ', lineno=258, col_offset=38), 'join', Load(), lineno=258, col_offset=38), [Subscript(Name('args', Load(), lineno=258, col_offset=47), Slice(Num(1, lineno=258, col_offset=52), None, None), Load(), lineno=258, col_offset=47)], [], None, None, lineno=258, col_offset=38)], [], None, None, lineno=258, col_offset=19), lineno=258, col_offset=12), Assign([Name('args', Store(), lineno=259, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=259, col_offset=19), 'split', Load(), lineno=259, col_offset=19), [], [], None, None, lineno=259, col_offset=19), lineno=259, col_offset=12)], [], lineno=251, col_offset=8), If(Compare(Subscript(Name('args', Load(), lineno=262, col_offset=11), Index(Num(0, lineno=262, col_offset=16)), Load(), lineno=262, col_offset=11), [NotEq()], [Str('alias', lineno=262, col_offset=22)], lineno=262, col_offset=11), [Assign([Name('marker', Store(), lineno=263, col_offset=12)], Call(Attribute(Name('line', Load(), lineno=263, col_offset=21), 'find', Load(), lineno=263, col_offset=21), [Str(';;', lineno=263, col_offset=31)], [], None, None, lineno=263, col_offset=21), lineno=263, col_offset=12), If(Compare(Name('marker', Load(), lineno=264, col_offset=15), [GtE()], [Num(0, lineno=264, col_offset=25)], lineno=264, col_offset=15), [Assign([Name('next', Store(), lineno=266, col_offset=16)], Call(Attribute(Subscript(Name('line', Load(), lineno=266, col_offset=23), Slice(BinOp(Name('marker', Load(), lineno=266, col_offset=28), Add(), Num(2, lineno=266, col_offset=35), lineno=266, col_offset=28), None, None), Load(), lineno=266, col_offset=23), 'lstrip', Load(), lineno=266, col_offset=23), [], [], None, None, lineno=266, col_offset=23), lineno=266, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=267, col_offset=16), 'cmdqueue', Load(), lineno=267, col_offset=16), 'append', Load(), lineno=267, col_offset=16), [Name('next', Load(), lineno=267, col_offset=37)], [], None, None, lineno=267, col_offset=16), lineno=267, col_offset=16), Assign([Name('line', Store(), lineno=268, col_offset=16)], Call(Attribute(Subscript(Name('line', Load(), lineno=268, col_offset=23), Slice(None, Name('marker', Load(), lineno=268, col_offset=29), None), Load(), lineno=268, col_offset=23), 'rstrip', Load(), lineno=268, col_offset=23), [], [], None, None, lineno=268, col_offset=23), lineno=268, col_offset=16)], [], lineno=264, col_offset=12)], [], lineno=262, col_offset=8), Return(Name('line', Load(), lineno=269, col_offset=15), lineno=269, col_offset=8)], [], lineno=246, col_offset=4), FunctionDef('onecmd', arguments([Name('self', Param(), lineno=271, col_offset=15), Name('line', Param(), lineno=271, col_offset=21)], None, None, []), [Expr(Str('Interpret the argument as though it had been typed in response\n        to the prompt.\n\n        Checks whether this line is typed at the normal prompt or in\n        a breakpoint command list definition.\n        ', lineno=277, col_offset=-1), lineno=277, col_offset=-1), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=278, col_offset=15), 'commands_defining', Load(), lineno=278, col_offset=15), lineno=278, col_offset=11), [Return(Call(Attribute(Attribute(Name('cmd', Load(), lineno=279, col_offset=19), 'Cmd', Load(), lineno=279, col_offset=19), 'onecmd', Load(), lineno=279, col_offset=19), [Name('self', Load(), lineno=279, col_offset=34), Name('line', Load(), lineno=279, col_offset=40)], [], None, None, lineno=279, col_offset=19), lineno=279, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=281, col_offset=19), 'handle_command_def', Load(), lineno=281, col_offset=19), [Name('line', Load(), lineno=281, col_offset=43)], [], None, None, lineno=281, col_offset=19), lineno=281, col_offset=12)], lineno=278, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('handle_command_def', arguments([Name('self', Param(), lineno=283, col_offset=27), Name('line', Param(), lineno=283, col_offset=32)], None, None, []), [Expr(Str('Handles one command line during command list definition.', lineno=284, col_offset=8), lineno=284, col_offset=8), Assign([Tuple([Name('cmd', Store(), lineno=285, col_offset=8), Name('arg', Store(), lineno=285, col_offset=13), Name('line', Store(), lineno=285, col_offset=18)], Store(), lineno=285, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=285, col_offset=25), 'parseline', Load(), lineno=285, col_offset=25), [Name('line', Load(), lineno=285, col_offset=40)], [], None, None, lineno=285, col_offset=25), lineno=285, col_offset=8), If(UnaryOp(Not(), Name('cmd', Load(), lineno=286, col_offset=15), lineno=286, col_offset=11), [Return(None, lineno=287, col_offset=12)], [], lineno=286, col_offset=8), If(Compare(Name('cmd', Load(), lineno=288, col_offset=11), [Eq()], [Str('silent', lineno=288, col_offset=18)], lineno=288, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=289, col_offset=12), 'commands_silent', Load(), lineno=289, col_offset=12), Index(Attribute(Name('self', Load(), lineno=289, col_offset=33), 'commands_bnum', Load(), lineno=289, col_offset=33)), Store(), lineno=289, col_offset=12)], Name('True', Load(), lineno=289, col_offset=55), lineno=289, col_offset=12), Return(None, lineno=290, col_offset=12)], [If(Compare(Name('cmd', Load(), lineno=291, col_offset=13), [Eq()], [Str('end', lineno=291, col_offset=20)], lineno=291, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=292, col_offset=12), 'cmdqueue', Store(), lineno=292, col_offset=12)], List([], Load(), lineno=292, col_offset=28), lineno=292, col_offset=12), Return(Num(1, lineno=293, col_offset=19), lineno=293, col_offset=12)], [], lineno=291, col_offset=13)], lineno=288, col_offset=8), Assign([Name('cmdlist', Store(), lineno=294, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=294, col_offset=18), 'commands', Load(), lineno=294, col_offset=18), Index(Attribute(Name('self', Load(), lineno=294, col_offset=32), 'commands_bnum', Load(), lineno=294, col_offset=32)), Load(), lineno=294, col_offset=18), lineno=294, col_offset=8), If(Name('arg', Load(), lineno=295, col_offset=11), [Expr(Call(Attribute(Name('cmdlist', Load(), lineno=296, col_offset=12), 'append', Load(), lineno=296, col_offset=12), [BinOp(BinOp(Name('cmd', Load(), lineno=296, col_offset=27), Add(), Str(' ', lineno=296, col_offset=31), lineno=296, col_offset=27), Add(), Name('arg', Load(), lineno=296, col_offset=35), lineno=296, col_offset=34)], [], None, None, lineno=296, col_offset=12), lineno=296, col_offset=12)], [Expr(Call(Attribute(Name('cmdlist', Load(), lineno=298, col_offset=12), 'append', Load(), lineno=298, col_offset=12), [Name('cmd', Load(), lineno=298, col_offset=27)], [], None, None, lineno=298, col_offset=12), lineno=298, col_offset=12)], lineno=295, col_offset=8), TryExcept([Assign([Name('func', Store(), lineno=301, col_offset=12)], Call(Name('getattr', Load(), lineno=301, col_offset=19), [Name('self', Load(), lineno=301, col_offset=27), BinOp(Str('do_', lineno=301, col_offset=33), Add(), Name('cmd', Load(), lineno=301, col_offset=41), lineno=301, col_offset=33)], [], None, None, lineno=301, col_offset=19), lineno=301, col_offset=12)], [ExceptHandler(Name('AttributeError', Load(), lineno=302, col_offset=15), None, [Assign([Name('func', Store(), lineno=303, col_offset=12)], Attribute(Name('self', Load(), lineno=303, col_offset=19), 'default', Load(), lineno=303, col_offset=19), lineno=303, col_offset=12)], lineno=302, col_offset=8)], [], lineno=300, col_offset=8), If(Compare(Attribute(Name('func', Load(), lineno=305, col_offset=11), 'func_name', Load(), lineno=305, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=305, col_offset=29), 'commands_resuming', Load(), lineno=305, col_offset=29)], lineno=305, col_offset=11), [Assign([Subscript(Attribute(Name('self', Load(), lineno=306, col_offset=12), 'commands_doprompt', Load(), lineno=306, col_offset=12), Index(Attribute(Name('self', Load(), lineno=306, col_offset=35), 'commands_bnum', Load(), lineno=306, col_offset=35)), Store(), lineno=306, col_offset=12)], Name('False', Load(), lineno=306, col_offset=57), lineno=306, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=307, col_offset=12), 'cmdqueue', Store(), lineno=307, col_offset=12)], List([], Load(), lineno=307, col_offset=28), lineno=307, col_offset=12), Return(Num(1, lineno=308, col_offset=19), lineno=308, col_offset=12)], [], lineno=305, col_offset=8), Return(None, lineno=309, col_offset=8)], [], lineno=283, col_offset=4), Assign([Name('do_h', Store(), lineno=315, col_offset=4)], Attribute(Attribute(Name('cmd', Load(), lineno=315, col_offset=11), 'Cmd', Load(), lineno=315, col_offset=11), 'do_help', Load(), lineno=315, col_offset=11), lineno=315, col_offset=4), FunctionDef('do_commands', arguments([Name('self', Param(), lineno=317, col_offset=20), Name('arg', Param(), lineno=317, col_offset=26)], None, None, []), [Expr(Str('Defines a list of commands associated to a breakpoint.\n\n        Those commands will be executed whenever the breakpoint causes\n        the program to stop execution.', lineno=321, col_offset=-1), lineno=321, col_offset=-1), If(UnaryOp(Not(), Name('arg', Load(), lineno=322, col_offset=15), lineno=322, col_offset=11), [Assign([Name('bnum', Store(), lineno=323, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=323, col_offset=19), [Attribute(Attribute(Name('bdb', Load(), lineno=323, col_offset=23), 'Breakpoint', Load(), lineno=323, col_offset=23), 'bpbynumber', Load(), lineno=323, col_offset=23)], [], None, None, lineno=323, col_offset=19), Sub(), Num(1, lineno=323, col_offset=50), lineno=323, col_offset=19), lineno=323, col_offset=12)], [TryExcept([Assign([Name('bnum', Store(), lineno=326, col_offset=16)], Call(Name('int', Load(), lineno=326, col_offset=23), [Name('arg', Load(), lineno=326, col_offset=27)], [], None, None, lineno=326, col_offset=23), lineno=326, col_offset=16)], [ExceptHandler(None, None, [Print(Attribute(Name('self', Load(), lineno=328, col_offset=24), 'stdout', Load(), lineno=328, col_offset=24), [Str('Usage : commands [bnum]\n        ...\n        end', lineno=328, col_offset=37)], True, lineno=328, col_offset=16), Return(None, lineno=330, col_offset=16)], lineno=327, col_offset=12)], [], lineno=325, col_offset=12)], lineno=322, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=331, col_offset=8), 'commands_bnum', Store(), lineno=331, col_offset=8)], Name('bnum', Load(), lineno=331, col_offset=29), lineno=331, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=332, col_offset=8), 'commands', Load(), lineno=332, col_offset=8), Index(Name('bnum', Load(), lineno=332, col_offset=22)), Store(), lineno=332, col_offset=8)], List([], Load(), lineno=332, col_offset=30), lineno=332, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=333, col_offset=8), 'commands_doprompt', Load(), lineno=333, col_offset=8), Index(Name('bnum', Load(), lineno=333, col_offset=31)), Store(), lineno=333, col_offset=8)], Name('True', Load(), lineno=333, col_offset=39), lineno=333, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=334, col_offset=8), 'commands_silent', Load(), lineno=334, col_offset=8), Index(Name('bnum', Load(), lineno=334, col_offset=29)), Store(), lineno=334, col_offset=8)], Name('False', Load(), lineno=334, col_offset=37), lineno=334, col_offset=8), Assign([Name('prompt_back', Store(), lineno=335, col_offset=8)], Attribute(Name('self', Load(), lineno=335, col_offset=22), 'prompt', Load(), lineno=335, col_offset=22), lineno=335, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=336, col_offset=8), 'prompt', Store(), lineno=336, col_offset=8)], Str('(com) ', lineno=336, col_offset=22), lineno=336, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=337, col_offset=8), 'commands_defining', Store(), lineno=337, col_offset=8)], Name('True', Load(), lineno=337, col_offset=33), lineno=337, col_offset=8), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=339, col_offset=12), 'cmdloop', Load(), lineno=339, col_offset=12), [], [], None, None, lineno=339, col_offset=12), lineno=339, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=341, col_offset=12), 'commands_defining', Store(), lineno=341, col_offset=12)], Name('False', Load(), lineno=341, col_offset=37), lineno=341, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=342, col_offset=12), 'prompt', Store(), lineno=342, col_offset=12)], Name('prompt_back', Load(), lineno=342, col_offset=26), lineno=342, col_offset=12)], lineno=338, col_offset=8)], [], lineno=317, col_offset=4), FunctionDef('do_break', arguments([Name('self', Param(), lineno=344, col_offset=17), Name('arg', Param(), lineno=344, col_offset=23), Name('temporary', Param(), lineno=344, col_offset=28)], None, None, [Num(0, lineno=344, col_offset=40)]), [If(UnaryOp(Not(), Name('arg', Load(), lineno=346, col_offset=15), lineno=346, col_offset=11), [If(Attribute(Name('self', Load(), lineno=347, col_offset=15), 'breaks', Load(), lineno=347, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=348, col_offset=24), 'stdout', Load(), lineno=348, col_offset=24), [Str('Num Type         Disp Enb   Where', lineno=348, col_offset=37)], True, lineno=348, col_offset=16), For(Name('bp', Store(), lineno=349, col_offset=20), Attribute(Attribute(Name('bdb', Load(), lineno=349, col_offset=26), 'Breakpoint', Load(), lineno=349, col_offset=26), 'bpbynumber', Load(), lineno=349, col_offset=26), [If(Name('bp', Load(), lineno=350, col_offset=23), [Expr(Call(Attribute(Name('bp', Load(), lineno=351, col_offset=24), 'bpprint', Load(), lineno=351, col_offset=24), [Attribute(Name('self', Load(), lineno=351, col_offset=35), 'stdout', Load(), lineno=351, col_offset=35)], [], None, None, lineno=351, col_offset=24), lineno=351, col_offset=24)], [], lineno=350, col_offset=20)], [], lineno=349, col_offset=16)], [], lineno=347, col_offset=12), Return(None, lineno=352, col_offset=12)], [], lineno=346, col_offset=8), Assign([Name('filename', Store(), lineno=355, col_offset=8)], Name('None', Load(), lineno=355, col_offset=19), lineno=355, col_offset=8), Assign([Name('lineno', Store(), lineno=356, col_offset=8)], Name('None', Load(), lineno=356, col_offset=17), lineno=356, col_offset=8), Assign([Name('cond', Store(), lineno=357, col_offset=8)], Name('None', Load(), lineno=357, col_offset=15), lineno=357, col_offset=8), Assign([Name('comma', Store(), lineno=358, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=358, col_offset=16), 'find', Load(), lineno=358, col_offset=16), [Str(',', lineno=358, col_offset=25)], [], None, None, lineno=358, col_offset=16), lineno=358, col_offset=8), If(Compare(Name('comma', Load(), lineno=359, col_offset=11), [Gt()], [Num(0, lineno=359, col_offset=19)], lineno=359, col_offset=11), [Assign([Name('cond', Store(), lineno=361, col_offset=12)], Call(Attribute(Subscript(Name('arg', Load(), lineno=361, col_offset=19), Slice(BinOp(Name('comma', Load(), lineno=361, col_offset=23), Add(), Num(1, lineno=361, col_offset=29), lineno=361, col_offset=23), None, None), Load(), lineno=361, col_offset=19), 'lstrip', Load(), lineno=361, col_offset=19), [], [], None, None, lineno=361, col_offset=19), lineno=361, col_offset=12), Assign([Name('arg', Store(), lineno=362, col_offset=12)], Call(Attribute(Subscript(Name('arg', Load(), lineno=362, col_offset=18), Slice(None, Name('comma', Load(), lineno=362, col_offset=23), None), Load(), lineno=362, col_offset=18), 'rstrip', Load(), lineno=362, col_offset=18), [], [], None, None, lineno=362, col_offset=18), lineno=362, col_offset=12)], [], lineno=359, col_offset=8), Assign([Name('colon', Store(), lineno=364, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=364, col_offset=16), 'rfind', Load(), lineno=364, col_offset=16), [Str(':', lineno=364, col_offset=26)], [], None, None, lineno=364, col_offset=16), lineno=364, col_offset=8), Assign([Name('funcname', Store(), lineno=365, col_offset=8)], Name('None', Load(), lineno=365, col_offset=19), lineno=365, col_offset=8), If(Compare(Name('colon', Load(), lineno=366, col_offset=11), [GtE()], [Num(0, lineno=366, col_offset=20)], lineno=366, col_offset=11), [Assign([Name('filename', Store(), lineno=367, col_offset=12)], Call(Attribute(Subscript(Name('arg', Load(), lineno=367, col_offset=23), Slice(None, Name('colon', Load(), lineno=367, col_offset=28), None), Load(), lineno=367, col_offset=23), 'rstrip', Load(), lineno=367, col_offset=23), [], [], None, None, lineno=367, col_offset=23), lineno=367, col_offset=12), Assign([Name('f', Store(), lineno=368, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=368, col_offset=16), 'lookupmodule', Load(), lineno=368, col_offset=16), [Name('filename', Load(), lineno=368, col_offset=34)], [], None, None, lineno=368, col_offset=16), lineno=368, col_offset=12), If(UnaryOp(Not(), Name('f', Load(), lineno=369, col_offset=19), lineno=369, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=370, col_offset=24), 'stdout', Load(), lineno=370, col_offset=24), [Str('*** ', lineno=370, col_offset=37), Call(Name('repr', Load(), lineno=370, col_offset=45), [Name('filename', Load(), lineno=370, col_offset=50)], [], None, None, lineno=370, col_offset=45)], False, lineno=370, col_offset=16), Print(Attribute(Name('self', Load(), lineno=371, col_offset=24), 'stdout', Load(), lineno=371, col_offset=24), [Str('not found from sys.path', lineno=371, col_offset=37)], True, lineno=371, col_offset=16), Return(None, lineno=372, col_offset=16)], [Assign([Name('filename', Store(), lineno=374, col_offset=16)], Name('f', Load(), lineno=374, col_offset=27), lineno=374, col_offset=16)], lineno=369, col_offset=12), Assign([Name('arg', Store(), lineno=375, col_offset=12)], Call(Attribute(Subscript(Name('arg', Load(), lineno=375, col_offset=18), Slice(BinOp(Name('colon', Load(), lineno=375, col_offset=22), Add(), Num(1, lineno=375, col_offset=28), lineno=375, col_offset=22), None, None), Load(), lineno=375, col_offset=18), 'lstrip', Load(), lineno=375, col_offset=18), [], [], None, None, lineno=375, col_offset=18), lineno=375, col_offset=12), TryExcept([Assign([Name('lineno', Store(), lineno=377, col_offset=16)], Call(Name('int', Load(), lineno=377, col_offset=25), [Name('arg', Load(), lineno=377, col_offset=29)], [], None, None, lineno=377, col_offset=25), lineno=377, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=378, col_offset=19), Name('msg', Store(), lineno=378, col_offset=31), [Print(Attribute(Name('self', Load(), lineno=379, col_offset=24), 'stdout', Load(), lineno=379, col_offset=24), [Str('*** Bad lineno:', lineno=379, col_offset=37), Name('arg', Load(), lineno=379, col_offset=56)], True, lineno=379, col_offset=16), Return(None, lineno=380, col_offset=16)], lineno=378, col_offset=12)], [], lineno=376, col_offset=12)], [TryExcept([Assign([Name('lineno', Store(), lineno=384, col_offset=16)], Call(Name('int', Load(), lineno=384, col_offset=25), [Name('arg', Load(), lineno=384, col_offset=29)], [], None, None, lineno=384, col_offset=25), lineno=384, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=385, col_offset=19), None, [TryExcept([Assign([Name('func', Store(), lineno=387, col_offset=20)], Call(Name('eval', Load(), lineno=387, col_offset=27), [Name('arg', Load(), lineno=387, col_offset=32), Attribute(Attribute(Name('self', Load(), lineno=388, col_offset=32), 'curframe', Load(), lineno=388, col_offset=32), 'f_globals', Load(), lineno=388, col_offset=32), Attribute(Name('self', Load(), lineno=389, col_offset=32), 'curframe_locals', Load(), lineno=389, col_offset=32)], [], None, None, lineno=387, col_offset=27), lineno=387, col_offset=20)], [ExceptHandler(None, None, [Assign([Name('func', Store(), lineno=391, col_offset=20)], Name('arg', Load(), lineno=391, col_offset=27), lineno=391, col_offset=20)], lineno=390, col_offset=16)], [], lineno=386, col_offset=16), TryExcept([If(Call(Name('hasattr', Load(), lineno=393, col_offset=23), [Name('func', Load(), lineno=393, col_offset=31), Str('im_func', lineno=393, col_offset=37)], [], None, None, lineno=393, col_offset=23), [Assign([Name('func', Store(), lineno=394, col_offset=24)], Attribute(Name('func', Load(), lineno=394, col_offset=31), 'im_func', Load(), lineno=394, col_offset=31), lineno=394, col_offset=24)], [], lineno=393, col_offset=20), Assign([Name('code', Store(), lineno=395, col_offset=20)], Attribute(Name('func', Load(), lineno=395, col_offset=27), 'func_code', Load(), lineno=395, col_offset=27), lineno=395, col_offset=20), Assign([Name('funcname', Store(), lineno=398, col_offset=20)], Attribute(Name('code', Load(), lineno=398, col_offset=31), 'co_name', Load(), lineno=398, col_offset=31), lineno=398, col_offset=20), Assign([Name('lineno', Store(), lineno=399, col_offset=20)], Attribute(Name('code', Load(), lineno=399, col_offset=29), 'co_firstlineno', Load(), lineno=399, col_offset=29), lineno=399, col_offset=20), Assign([Name('filename', Store(), lineno=400, col_offset=20)], Attribute(Name('code', Load(), lineno=400, col_offset=31), 'co_filename', Load(), lineno=400, col_offset=31), lineno=400, col_offset=20)], [ExceptHandler(None, None, [Assign([Tuple([Name('ok', Store(), lineno=403, col_offset=21), Name('filename', Store(), lineno=403, col_offset=25), Name('ln', Store(), lineno=403, col_offset=35)], Store(), lineno=403, col_offset=21)], Call(Attribute(Name('self', Load(), lineno=403, col_offset=41), 'lineinfo', Load(), lineno=403, col_offset=41), [Name('arg', Load(), lineno=403, col_offset=55)], [], None, None, lineno=403, col_offset=41), lineno=403, col_offset=20), If(UnaryOp(Not(), Name('ok', Load(), lineno=404, col_offset=27), lineno=404, col_offset=23), [Print(Attribute(Name('self', Load(), lineno=405, col_offset=32), 'stdout', Load(), lineno=405, col_offset=32), [Str('*** The specified object', lineno=405, col_offset=45)], False, lineno=405, col_offset=24), Print(Attribute(Name('self', Load(), lineno=406, col_offset=32), 'stdout', Load(), lineno=406, col_offset=32), [Call(Name('repr', Load(), lineno=406, col_offset=45), [Name('arg', Load(), lineno=406, col_offset=50)], [], None, None, lineno=406, col_offset=45)], False, lineno=406, col_offset=24), Print(Attribute(Name('self', Load(), lineno=407, col_offset=32), 'stdout', Load(), lineno=407, col_offset=32), [Str('is not a function', lineno=407, col_offset=45)], True, lineno=407, col_offset=24), Print(Attribute(Name('self', Load(), lineno=408, col_offset=32), 'stdout', Load(), lineno=408, col_offset=32), [Str('or was not found along sys.path.', lineno=408, col_offset=45)], True, lineno=408, col_offset=24), Return(None, lineno=409, col_offset=24)], [], lineno=404, col_offset=20), Assign([Name('funcname', Store(), lineno=410, col_offset=20)], Name('ok', Load(), lineno=410, col_offset=31), lineno=410, col_offset=20), Assign([Name('lineno', Store(), lineno=411, col_offset=20)], Call(Name('int', Load(), lineno=411, col_offset=29), [Name('ln', Load(), lineno=411, col_offset=33)], [], None, None, lineno=411, col_offset=29), lineno=411, col_offset=20)], lineno=401, col_offset=16)], [], lineno=392, col_offset=16)], lineno=385, col_offset=12)], [], lineno=383, col_offset=12)], lineno=366, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=412, col_offset=15), lineno=412, col_offset=11), [Assign([Name('filename', Store(), lineno=413, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=413, col_offset=23), 'defaultFile', Load(), lineno=413, col_offset=23), [], [], None, None, lineno=413, col_offset=23), lineno=413, col_offset=12)], [], lineno=412, col_offset=8), Assign([Name('line', Store(), lineno=415, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=415, col_offset=15), 'checkline', Load(), lineno=415, col_offset=15), [Name('filename', Load(), lineno=415, col_offset=30), Name('lineno', Load(), lineno=415, col_offset=40)], [], None, None, lineno=415, col_offset=15), lineno=415, col_offset=8), If(Name('line', Load(), lineno=416, col_offset=11), [Assign([Name('err', Store(), lineno=418, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=418, col_offset=18), 'set_break', Load(), lineno=418, col_offset=18), [Name('filename', Load(), lineno=418, col_offset=33), Name('line', Load(), lineno=418, col_offset=43), Name('temporary', Load(), lineno=418, col_offset=49), Name('cond', Load(), lineno=418, col_offset=60), Name('funcname', Load(), lineno=418, col_offset=66)], [], None, None, lineno=418, col_offset=18), lineno=418, col_offset=12), If(Name('err', Load(), lineno=419, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=419, col_offset=28), 'stdout', Load(), lineno=419, col_offset=28), [Str('***', lineno=419, col_offset=41), Name('err', Load(), lineno=419, col_offset=48)], True, lineno=419, col_offset=20)], [Assign([Name('bp', Store(), lineno=421, col_offset=16)], Subscript(Call(Attribute(Name('self', Load(), lineno=421, col_offset=21), 'get_breaks', Load(), lineno=421, col_offset=21), [Name('filename', Load(), lineno=421, col_offset=37), Name('line', Load(), lineno=421, col_offset=47)], [], None, None, lineno=421, col_offset=21), Index(Num(-1, lineno=421, col_offset=54)), Load(), lineno=421, col_offset=21), lineno=421, col_offset=16), Print(Attribute(Name('self', Load(), lineno=422, col_offset=24), 'stdout', Load(), lineno=422, col_offset=24), [BinOp(Str('Breakpoint %d at %s:%d', lineno=422, col_offset=37), Mod(), Tuple([Attribute(Name('bp', Load(), lineno=422, col_offset=65), 'number', Load(), lineno=422, col_offset=65), Attribute(Name('bp', Load(), lineno=423, col_offset=65), 'file', Load(), lineno=423, col_offset=65), Attribute(Name('bp', Load(), lineno=424, col_offset=65), 'line', Load(), lineno=424, col_offset=65)], Load(), lineno=422, col_offset=65), lineno=422, col_offset=37)], True, lineno=422, col_offset=16)], lineno=419, col_offset=12)], [], lineno=416, col_offset=8)], [], lineno=344, col_offset=4), FunctionDef('defaultFile', arguments([Name('self', Param(), lineno=427, col_offset=20)], None, None, []), [Expr(Str('Produce a reasonable default.', lineno=428, col_offset=8), lineno=428, col_offset=8), Assign([Name('filename', Store(), lineno=429, col_offset=8)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=429, col_offset=19), 'curframe', Load(), lineno=429, col_offset=19), 'f_code', Load(), lineno=429, col_offset=19), 'co_filename', Load(), lineno=429, col_offset=19), lineno=429, col_offset=8), If(BoolOp(And(), [Compare(Name('filename', Load(), lineno=430, col_offset=11), [Eq()], [Str('<string>', lineno=430, col_offset=23)], lineno=430, col_offset=11), Attribute(Name('self', Load(), lineno=430, col_offset=38), 'mainpyfile', Load(), lineno=430, col_offset=38)], lineno=430, col_offset=11), [Assign([Name('filename', Store(), lineno=431, col_offset=12)], Attribute(Name('self', Load(), lineno=431, col_offset=23), 'mainpyfile', Load(), lineno=431, col_offset=23), lineno=431, col_offset=12)], [], lineno=430, col_offset=8), Return(Name('filename', Load(), lineno=432, col_offset=15), lineno=432, col_offset=8)], [], lineno=427, col_offset=4), Assign([Name('do_b', Store(), lineno=434, col_offset=4)], Name('do_break', Load(), lineno=434, col_offset=11), lineno=434, col_offset=4), FunctionDef('do_tbreak', arguments([Name('self', Param(), lineno=436, col_offset=18), Name('arg', Param(), lineno=436, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=437, col_offset=8), 'do_break', Load(), lineno=437, col_offset=8), [Name('arg', Load(), lineno=437, col_offset=22), Num(1, lineno=437, col_offset=27)], [], None, None, lineno=437, col_offset=8), lineno=437, col_offset=8)], [], lineno=436, col_offset=4), FunctionDef('lineinfo', arguments([Name('self', Param(), lineno=439, col_offset=17), Name('identifier', Param(), lineno=439, col_offset=23)], None, None, []), [Assign([Name('failed', Store(), lineno=440, col_offset=8)], Tuple([Name('None', Load(), lineno=440, col_offset=18), Name('None', Load(), lineno=440, col_offset=24), Name('None', Load(), lineno=440, col_offset=30)], Load(), lineno=440, col_offset=18), lineno=440, col_offset=8), Assign([Name('idstring', Store(), lineno=442, col_offset=8)], Call(Attribute(Name('identifier', Load(), lineno=442, col_offset=19), 'split', Load(), lineno=442, col_offset=19), [Str("'", lineno=442, col_offset=36)], [], None, None, lineno=442, col_offset=19), lineno=442, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=443, col_offset=11), [Name('idstring', Load(), lineno=443, col_offset=15)], [], None, None, lineno=443, col_offset=11), [Eq()], [Num(1, lineno=443, col_offset=28)], lineno=443, col_offset=11), [Assign([Name('id', Store(), lineno=445, col_offset=12)], Call(Attribute(Subscript(Name('idstring', Load(), lineno=445, col_offset=17), Index(Num(0, lineno=445, col_offset=26)), Load(), lineno=445, col_offset=17), 'strip', Load(), lineno=445, col_offset=17), [], [], None, None, lineno=445, col_offset=17), lineno=445, col_offset=12)], [If(Compare(Call(Name('len', Load(), lineno=446, col_offset=13), [Name('idstring', Load(), lineno=446, col_offset=17)], [], None, None, lineno=446, col_offset=13), [Eq()], [Num(3, lineno=446, col_offset=30)], lineno=446, col_offset=13), [Assign([Name('id', Store(), lineno=448, col_offset=12)], Call(Attribute(Subscript(Name('idstring', Load(), lineno=448, col_offset=17), Index(Num(1, lineno=448, col_offset=26)), Load(), lineno=448, col_offset=17), 'strip', Load(), lineno=448, col_offset=17), [], [], None, None, lineno=448, col_offset=17), lineno=448, col_offset=12)], [Return(Name('failed', Load(), lineno=450, col_offset=19), lineno=450, col_offset=12)], lineno=446, col_offset=13)], lineno=443, col_offset=8), If(Compare(Name('id', Load(), lineno=451, col_offset=11), [Eq()], [Str('', lineno=451, col_offset=17)], lineno=451, col_offset=11), [Return(Name('failed', Load(), lineno=451, col_offset=28), lineno=451, col_offset=21)], [], lineno=451, col_offset=8), Assign([Name('parts', Store(), lineno=452, col_offset=8)], Call(Attribute(Name('id', Load(), lineno=452, col_offset=16), 'split', Load(), lineno=452, col_offset=16), [Str('.', lineno=452, col_offset=25)], [], None, None, lineno=452, col_offset=16), lineno=452, col_offset=8), If(Compare(Subscript(Name('parts', Load(), lineno=454, col_offset=11), Index(Num(0, lineno=454, col_offset=17)), Load(), lineno=454, col_offset=11), [Eq()], [Str('self', lineno=454, col_offset=23)], lineno=454, col_offset=11), [Delete([Subscript(Name('parts', Load(), lineno=455, col_offset=16), Index(Num(0, lineno=455, col_offset=22)), Del(), lineno=455, col_offset=16)], lineno=455, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=456, col_offset=15), [Name('parts', Load(), lineno=456, col_offset=19)], [], None, None, lineno=456, col_offset=15), [Eq()], [Num(0, lineno=456, col_offset=29)], lineno=456, col_offset=15), [Return(Name('failed', Load(), lineno=457, col_offset=23), lineno=457, col_offset=16)], [], lineno=456, col_offset=12)], [], lineno=454, col_offset=8), Assign([Name('fname', Store(), lineno=459, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=459, col_offset=16), 'defaultFile', Load(), lineno=459, col_offset=16), [], [], None, None, lineno=459, col_offset=16), lineno=459, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=460, col_offset=11), [Name('parts', Load(), lineno=460, col_offset=15)], [], None, None, lineno=460, col_offset=11), [Eq()], [Num(1, lineno=460, col_offset=25)], lineno=460, col_offset=11), [Assign([Name('item', Store(), lineno=461, col_offset=12)], Subscript(Name('parts', Load(), lineno=461, col_offset=19), Index(Num(0, lineno=461, col_offset=25)), Load(), lineno=461, col_offset=19), lineno=461, col_offset=12)], [Assign([Name('f', Store(), lineno=465, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=465, col_offset=16), 'lookupmodule', Load(), lineno=465, col_offset=16), [Subscript(Name('parts', Load(), lineno=465, col_offset=34), Index(Num(0, lineno=465, col_offset=40)), Load(), lineno=465, col_offset=34)], [], None, None, lineno=465, col_offset=16), lineno=465, col_offset=12), If(Name('f', Load(), lineno=466, col_offset=15), [Assign([Name('fname', Store(), lineno=467, col_offset=16)], Name('f', Load(), lineno=467, col_offset=24), lineno=467, col_offset=16)], [], lineno=466, col_offset=12), Assign([Name('item', Store(), lineno=468, col_offset=12)], Subscript(Name('parts', Load(), lineno=468, col_offset=19), Index(Num(1, lineno=468, col_offset=25)), Load(), lineno=468, col_offset=19), lineno=468, col_offset=12)], lineno=460, col_offset=8), Assign([Name('answer', Store(), lineno=469, col_offset=8)], Call(Name('find_function', Load(), lineno=469, col_offset=17), [Name('item', Load(), lineno=469, col_offset=31), Name('fname', Load(), lineno=469, col_offset=37)], [], None, None, lineno=469, col_offset=17), lineno=469, col_offset=8), Return(BoolOp(Or(), [Name('answer', Load(), lineno=470, col_offset=15), Name('failed', Load(), lineno=470, col_offset=25)], lineno=470, col_offset=15), lineno=470, col_offset=8)], [], lineno=439, col_offset=4), FunctionDef('checkline', arguments([Name('self', Param(), lineno=472, col_offset=18), Name('filename', Param(), lineno=472, col_offset=24), Name('lineno', Param(), lineno=472, col_offset=34)], None, None, []), [Expr(Str('Check whether specified line seems to be executable.\n\n        Return `lineno` if it is, 0 if not (e.g. a docstring, comment, blank\n        line or EOF). Warning: testing is not comprehensive.\n        ', lineno=477, col_offset=-1), lineno=477, col_offset=-1), Assign([Name('globs', Store(), lineno=480, col_offset=8)], IfExp(Call(Name('hasattr', Load(), lineno=480, col_offset=43), [Name('self', Load(), lineno=480, col_offset=51), Str('curframe', lineno=480, col_offset=57)], [], None, None, lineno=480, col_offset=43), Attribute(Attribute(Name('self', Load(), lineno=480, col_offset=16), 'curframe', Load(), lineno=480, col_offset=16), 'f_globals', Load(), lineno=480, col_offset=16), Name('None', Load(), lineno=480, col_offset=74), lineno=480, col_offset=16), lineno=480, col_offset=8), Assign([Name('line', Store(), lineno=481, col_offset=8)], Call(Attribute(Name('linecache', Load(), lineno=481, col_offset=15), 'getline', Load(), lineno=481, col_offset=15), [Name('filename', Load(), lineno=481, col_offset=33), Name('lineno', Load(), lineno=481, col_offset=43), Name('globs', Load(), lineno=481, col_offset=51)], [], None, None, lineno=481, col_offset=15), lineno=481, col_offset=8), If(UnaryOp(Not(), Name('line', Load(), lineno=482, col_offset=15), lineno=482, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=483, col_offset=20), 'stdout', Load(), lineno=483, col_offset=20), [Str('End of file', lineno=483, col_offset=33)], True, lineno=483, col_offset=12), Return(Num(0, lineno=484, col_offset=19), lineno=484, col_offset=12)], [], lineno=482, col_offset=8), Assign([Name('line', Store(), lineno=485, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=485, col_offset=15), 'strip', Load(), lineno=485, col_offset=15), [], [], None, None, lineno=485, col_offset=15), lineno=485, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('line', Load(), lineno=487, col_offset=16), lineno=487, col_offset=12), Compare(Subscript(Name('line', Load(), lineno=487, col_offset=25), Index(Num(0, lineno=487, col_offset=30)), Load(), lineno=487, col_offset=25), [Eq()], [Str('#', lineno=487, col_offset=36)], lineno=487, col_offset=25), Compare(Subscript(Name('line', Load(), lineno=488, col_offset=14), Slice(None, Num(3, lineno=488, col_offset=20), None), Load(), lineno=488, col_offset=14), [Eq()], [Str('"""', lineno=488, col_offset=26)], lineno=488, col_offset=14), Compare(Subscript(Name('line', Load(), lineno=488, col_offset=36), Slice(None, Num(3, lineno=488, col_offset=42), None), Load(), lineno=488, col_offset=36), [Eq()], [Str("'''", lineno=488, col_offset=48)], lineno=488, col_offset=36)], lineno=487, col_offset=12), [Print(Attribute(Name('self', Load(), lineno=489, col_offset=20), 'stdout', Load(), lineno=489, col_offset=20), [Str('*** Blank or comment', lineno=489, col_offset=33)], True, lineno=489, col_offset=12), Return(Num(0, lineno=490, col_offset=19), lineno=490, col_offset=12)], [], lineno=487, col_offset=8), Return(Name('lineno', Load(), lineno=491, col_offset=15), lineno=491, col_offset=8)], [], lineno=472, col_offset=4), FunctionDef('do_enable', arguments([Name('self', Param(), lineno=493, col_offset=18), Name('arg', Param(), lineno=493, col_offset=24)], None, None, []), [Assign([Name('args', Store(), lineno=494, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=494, col_offset=15), 'split', Load(), lineno=494, col_offset=15), [], [], None, None, lineno=494, col_offset=15), lineno=494, col_offset=8), For(Name('i', Store(), lineno=495, col_offset=12), Name('args', Load(), lineno=495, col_offset=17), [TryExcept([Assign([Name('i', Store(), lineno=497, col_offset=16)], Call(Name('int', Load(), lineno=497, col_offset=20), [Name('i', Load(), lineno=497, col_offset=24)], [], None, None, lineno=497, col_offset=20), lineno=497, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=498, col_offset=19), None, [Print(Attribute(Name('self', Load(), lineno=499, col_offset=24), 'stdout', Load(), lineno=499, col_offset=24), [BinOp(Str('Breakpoint index %r is not a number', lineno=499, col_offset=37), Mod(), Name('i', Load(), lineno=499, col_offset=77), lineno=499, col_offset=37)], True, lineno=499, col_offset=16), Continue( lineno=500, col_offset=16)], lineno=498, col_offset=12)], [], lineno=496, col_offset=12), If(UnaryOp(Not(), Compare(Num(0, lineno=502, col_offset=20), [LtE(), Lt()], [Name('i', Load(), lineno=502, col_offset=25), Call(Name('len', Load(), lineno=502, col_offset=29), [Attribute(Attribute(Name('bdb', Load(), lineno=502, col_offset=33), 'Breakpoint', Load(), lineno=502, col_offset=33), 'bpbynumber', Load(), lineno=502, col_offset=33)], [], None, None, lineno=502, col_offset=29)], lineno=502, col_offset=20), lineno=502, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=503, col_offset=24), 'stdout', Load(), lineno=503, col_offset=24), [Str('No breakpoint numbered', lineno=503, col_offset=37), Name('i', Load(), lineno=503, col_offset=63)], True, lineno=503, col_offset=16), Continue( lineno=504, col_offset=16)], [], lineno=502, col_offset=12), Assign([Name('bp', Store(), lineno=506, col_offset=12)], Subscript(Attribute(Attribute(Name('bdb', Load(), lineno=506, col_offset=17), 'Breakpoint', Load(), lineno=506, col_offset=17), 'bpbynumber', Load(), lineno=506, col_offset=17), Index(Name('i', Load(), lineno=506, col_offset=43)), Load(), lineno=506, col_offset=17), lineno=506, col_offset=12), If(Name('bp', Load(), lineno=507, col_offset=15), [Expr(Call(Attribute(Name('bp', Load(), lineno=508, col_offset=16), 'enable', Load(), lineno=508, col_offset=16), [], [], None, None, lineno=508, col_offset=16), lineno=508, col_offset=16)], [], lineno=507, col_offset=12)], [], lineno=495, col_offset=8)], [], lineno=493, col_offset=4), FunctionDef('do_disable', arguments([Name('self', Param(), lineno=510, col_offset=19), Name('arg', Param(), lineno=510, col_offset=25)], None, None, []), [Assign([Name('args', Store(), lineno=511, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=511, col_offset=15), 'split', Load(), lineno=511, col_offset=15), [], [], None, None, lineno=511, col_offset=15), lineno=511, col_offset=8), For(Name('i', Store(), lineno=512, col_offset=12), Name('args', Load(), lineno=512, col_offset=17), [TryExcept([Assign([Name('i', Store(), lineno=514, col_offset=16)], Call(Name('int', Load(), lineno=514, col_offset=20), [Name('i', Load(), lineno=514, col_offset=24)], [], None, None, lineno=514, col_offset=20), lineno=514, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=515, col_offset=19), None, [Print(Attribute(Name('self', Load(), lineno=516, col_offset=24), 'stdout', Load(), lineno=516, col_offset=24), [BinOp(Str('Breakpoint index %r is not a number', lineno=516, col_offset=37), Mod(), Name('i', Load(), lineno=516, col_offset=77), lineno=516, col_offset=37)], True, lineno=516, col_offset=16), Continue( lineno=517, col_offset=16)], lineno=515, col_offset=12)], [], lineno=513, col_offset=12), If(UnaryOp(Not(), Compare(Num(0, lineno=519, col_offset=20), [LtE(), Lt()], [Name('i', Load(), lineno=519, col_offset=25), Call(Name('len', Load(), lineno=519, col_offset=29), [Attribute(Attribute(Name('bdb', Load(), lineno=519, col_offset=33), 'Breakpoint', Load(), lineno=519, col_offset=33), 'bpbynumber', Load(), lineno=519, col_offset=33)], [], None, None, lineno=519, col_offset=29)], lineno=519, col_offset=20), lineno=519, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=520, col_offset=24), 'stdout', Load(), lineno=520, col_offset=24), [Str('No breakpoint numbered', lineno=520, col_offset=37), Name('i', Load(), lineno=520, col_offset=63)], True, lineno=520, col_offset=16), Continue( lineno=521, col_offset=16)], [], lineno=519, col_offset=12), Assign([Name('bp', Store(), lineno=523, col_offset=12)], Subscript(Attribute(Attribute(Name('bdb', Load(), lineno=523, col_offset=17), 'Breakpoint', Load(), lineno=523, col_offset=17), 'bpbynumber', Load(), lineno=523, col_offset=17), Index(Name('i', Load(), lineno=523, col_offset=43)), Load(), lineno=523, col_offset=17), lineno=523, col_offset=12), If(Name('bp', Load(), lineno=524, col_offset=15), [Expr(Call(Attribute(Name('bp', Load(), lineno=525, col_offset=16), 'disable', Load(), lineno=525, col_offset=16), [], [], None, None, lineno=525, col_offset=16), lineno=525, col_offset=16)], [], lineno=524, col_offset=12)], [], lineno=512, col_offset=8)], [], lineno=510, col_offset=4), FunctionDef('do_condition', arguments([Name('self', Param(), lineno=527, col_offset=21), Name('arg', Param(), lineno=527, col_offset=27)], None, None, []), [Assign([Name('args', Store(), lineno=529, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=529, col_offset=15), 'split', Load(), lineno=529, col_offset=15), [Str(' ', lineno=529, col_offset=25), Num(1, lineno=529, col_offset=30)], [], None, None, lineno=529, col_offset=15), lineno=529, col_offset=8), TryExcept([Assign([Name('bpnum', Store(), lineno=531, col_offset=12)], Call(Name('int', Load(), lineno=531, col_offset=20), [Call(Attribute(Subscript(Name('args', Load(), lineno=531, col_offset=24), Index(Num(0, lineno=531, col_offset=29)), Load(), lineno=531, col_offset=24), 'strip', Load(), lineno=531, col_offset=24), [], [], None, None, lineno=531, col_offset=24)], [], None, None, lineno=531, col_offset=20), lineno=531, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=532, col_offset=15), None, [Print(Attribute(Name('self', Load(), lineno=534, col_offset=20), 'stdout', Load(), lineno=534, col_offset=20), [BinOp(Str('Breakpoint index %r is not a number', lineno=535, col_offset=16), Mod(), Subscript(Name('args', Load(), lineno=535, col_offset=56), Index(Num(0, lineno=535, col_offset=61)), Load(), lineno=535, col_offset=56), lineno=535, col_offset=16)], True, lineno=534, col_offset=12), Return(None, lineno=536, col_offset=12)], lineno=532, col_offset=8)], [], lineno=530, col_offset=8), TryExcept([Assign([Name('cond', Store(), lineno=538, col_offset=12)], Subscript(Name('args', Load(), lineno=538, col_offset=19), Index(Num(1, lineno=538, col_offset=24)), Load(), lineno=538, col_offset=19), lineno=538, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('cond', Store(), lineno=540, col_offset=12)], Name('None', Load(), lineno=540, col_offset=19), lineno=540, col_offset=12)], lineno=539, col_offset=8)], [], lineno=537, col_offset=8), TryExcept([Assign([Name('bp', Store(), lineno=542, col_offset=12)], Subscript(Attribute(Attribute(Name('bdb', Load(), lineno=542, col_offset=17), 'Breakpoint', Load(), lineno=542, col_offset=17), 'bpbynumber', Load(), lineno=542, col_offset=17), Index(Name('bpnum', Load(), lineno=542, col_offset=43)), Load(), lineno=542, col_offset=17), lineno=542, col_offset=12)], [ExceptHandler(Name('IndexError', Load(), lineno=543, col_offset=15), None, [Print(Attribute(Name('self', Load(), lineno=544, col_offset=20), 'stdout', Load(), lineno=544, col_offset=20), [BinOp(Str('Breakpoint index %r is not valid', lineno=544, col_offset=33), Mod(), Subscript(Name('args', Load(), lineno=544, col_offset=70), Index(Num(0, lineno=544, col_offset=75)), Load(), lineno=544, col_offset=70), lineno=544, col_offset=33)], True, lineno=544, col_offset=12), Return(None, lineno=545, col_offset=12)], lineno=543, col_offset=8)], [], lineno=541, col_offset=8), If(Name('bp', Load(), lineno=546, col_offset=11), [Assign([Attribute(Name('bp', Load(), lineno=547, col_offset=12), 'cond', Store(), lineno=547, col_offset=12)], Name('cond', Load(), lineno=547, col_offset=22), lineno=547, col_offset=12), If(UnaryOp(Not(), Name('cond', Load(), lineno=548, col_offset=19), lineno=548, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=549, col_offset=24), 'stdout', Load(), lineno=549, col_offset=24), [Str('Breakpoint', lineno=549, col_offset=37), Name('bpnum', Load(), lineno=549, col_offset=51)], False, lineno=549, col_offset=16), Print(Attribute(Name('self', Load(), lineno=550, col_offset=24), 'stdout', Load(), lineno=550, col_offset=24), [Str('is now unconditional.', lineno=550, col_offset=37)], True, lineno=550, col_offset=16)], [], lineno=548, col_offset=12)], [], lineno=546, col_offset=8)], [], lineno=527, col_offset=4), FunctionDef('do_ignore', arguments([Name('self', Param(), lineno=552, col_offset=18), Name('arg', Param(), lineno=552, col_offset=23)], None, None, []), [Expr(Str('arg is bp number followed by ignore count.', lineno=553, col_offset=8), lineno=553, col_offset=8), Assign([Name('args', Store(), lineno=554, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=554, col_offset=15), 'split', Load(), lineno=554, col_offset=15), [], [], None, None, lineno=554, col_offset=15), lineno=554, col_offset=8), TryExcept([Assign([Name('bpnum', Store(), lineno=556, col_offset=12)], Call(Name('int', Load(), lineno=556, col_offset=20), [Call(Attribute(Subscript(Name('args', Load(), lineno=556, col_offset=24), Index(Num(0, lineno=556, col_offset=29)), Load(), lineno=556, col_offset=24), 'strip', Load(), lineno=556, col_offset=24), [], [], None, None, lineno=556, col_offset=24)], [], None, None, lineno=556, col_offset=20), lineno=556, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=557, col_offset=15), None, [Print(Attribute(Name('self', Load(), lineno=559, col_offset=20), 'stdout', Load(), lineno=559, col_offset=20), [BinOp(Str('Breakpoint index %r is not a number', lineno=560, col_offset=16), Mod(), Subscript(Name('args', Load(), lineno=560, col_offset=56), Index(Num(0, lineno=560, col_offset=61)), Load(), lineno=560, col_offset=56), lineno=560, col_offset=16)], True, lineno=559, col_offset=12), Return(None, lineno=561, col_offset=12)], lineno=557, col_offset=8)], [], lineno=555, col_offset=8), TryExcept([Assign([Name('count', Store(), lineno=563, col_offset=12)], Call(Name('int', Load(), lineno=563, col_offset=20), [Call(Attribute(Subscript(Name('args', Load(), lineno=563, col_offset=24), Index(Num(1, lineno=563, col_offset=29)), Load(), lineno=563, col_offset=24), 'strip', Load(), lineno=563, col_offset=24), [], [], None, None, lineno=563, col_offset=24)], [], None, None, lineno=563, col_offset=20), lineno=563, col_offset=12)], [ExceptHandler(None, None, [Assign([Name('count', Store(), lineno=565, col_offset=12)], Num(0, lineno=565, col_offset=20), lineno=565, col_offset=12)], lineno=564, col_offset=8)], [], lineno=562, col_offset=8), TryExcept([Assign([Name('bp', Store(), lineno=567, col_offset=12)], Subscript(Attribute(Attribute(Name('bdb', Load(), lineno=567, col_offset=17), 'Breakpoint', Load(), lineno=567, col_offset=17), 'bpbynumber', Load(), lineno=567, col_offset=17), Index(Name('bpnum', Load(), lineno=567, col_offset=43)), Load(), lineno=567, col_offset=17), lineno=567, col_offset=12)], [ExceptHandler(Name('IndexError', Load(), lineno=568, col_offset=15), None, [Print(Attribute(Name('self', Load(), lineno=569, col_offset=20), 'stdout', Load(), lineno=569, col_offset=20), [BinOp(Str('Breakpoint index %r is not valid', lineno=569, col_offset=33), Mod(), Subscript(Name('args', Load(), lineno=569, col_offset=70), Index(Num(0, lineno=569, col_offset=75)), Load(), lineno=569, col_offset=70), lineno=569, col_offset=33)], True, lineno=569, col_offset=12), Return(None, lineno=570, col_offset=12)], lineno=568, col_offset=8)], [], lineno=566, col_offset=8), If(Name('bp', Load(), lineno=571, col_offset=11), [Assign([Attribute(Name('bp', Load(), lineno=572, col_offset=12), 'ignore', Store(), lineno=572, col_offset=12)], Name('count', Load(), lineno=572, col_offset=24), lineno=572, col_offset=12), If(Compare(Name('count', Load(), lineno=573, col_offset=15), [Gt()], [Num(0, lineno=573, col_offset=23)], lineno=573, col_offset=15), [Assign([Name('reply', Store(), lineno=574, col_offset=16)], Str('Will ignore next ', lineno=574, col_offset=24), lineno=574, col_offset=16), If(Compare(Name('count', Load(), lineno=575, col_offset=19), [Gt()], [Num(1, lineno=575, col_offset=27)], lineno=575, col_offset=19), [Assign([Name('reply', Store(), lineno=576, col_offset=20)], BinOp(Name('reply', Load(), lineno=576, col_offset=28), Add(), BinOp(Str('%d crossings', lineno=576, col_offset=36), Mod(), Name('count', Load(), lineno=576, col_offset=53), lineno=576, col_offset=36), lineno=576, col_offset=28), lineno=576, col_offset=20)], [Assign([Name('reply', Store(), lineno=578, col_offset=20)], BinOp(Name('reply', Load(), lineno=578, col_offset=28), Add(), Str('1 crossing', lineno=578, col_offset=36), lineno=578, col_offset=28), lineno=578, col_offset=20)], lineno=575, col_offset=16), Print(Attribute(Name('self', Load(), lineno=579, col_offset=24), 'stdout', Load(), lineno=579, col_offset=24), [BinOp(Name('reply', Load(), lineno=579, col_offset=37), Add(), BinOp(Str(' of breakpoint %d.', lineno=579, col_offset=45), Mod(), Name('bpnum', Load(), lineno=579, col_offset=68), lineno=579, col_offset=45), lineno=579, col_offset=37)], True, lineno=579, col_offset=16)], [Print(Attribute(Name('self', Load(), lineno=581, col_offset=24), 'stdout', Load(), lineno=581, col_offset=24), [Str('Will stop next time breakpoint', lineno=581, col_offset=37)], False, lineno=581, col_offset=16), Print(Attribute(Name('self', Load(), lineno=582, col_offset=24), 'stdout', Load(), lineno=582, col_offset=24), [Name('bpnum', Load(), lineno=582, col_offset=37), Str('is reached.', lineno=582, col_offset=44)], True, lineno=582, col_offset=16)], lineno=573, col_offset=12)], [], lineno=571, col_offset=8)], [], lineno=552, col_offset=4), FunctionDef('do_clear', arguments([Name('self', Param(), lineno=584, col_offset=17), Name('arg', Param(), lineno=584, col_offset=23)], None, None, []), [Expr(Str('Three possibilities, tried in this order:\n        clear -> clear all breaks, ask for confirmation\n        clear file:lineno -> clear all breaks at file:lineno\n        clear bpno bpno ... -> clear breakpoints by number', lineno=588, col_offset=-1), lineno=588, col_offset=-1), If(UnaryOp(Not(), Name('arg', Load(), lineno=589, col_offset=15), lineno=589, col_offset=11), [TryExcept([Assign([Name('reply', Store(), lineno=591, col_offset=16)], Call(Name('raw_input', Load(), lineno=591, col_offset=24), [Str('Clear all breaks? ', lineno=591, col_offset=34)], [], None, None, lineno=591, col_offset=24), lineno=591, col_offset=16)], [ExceptHandler(Name('EOFError', Load(), lineno=592, col_offset=19), None, [Assign([Name('reply', Store(), lineno=593, col_offset=16)], Str('no', lineno=593, col_offset=24), lineno=593, col_offset=16)], lineno=592, col_offset=12)], [], lineno=590, col_offset=12), Assign([Name('reply', Store(), lineno=594, col_offset=12)], Call(Attribute(Call(Attribute(Name('reply', Load(), lineno=594, col_offset=20), 'strip', Load(), lineno=594, col_offset=20), [], [], None, None, lineno=594, col_offset=20), 'lower', Load(), lineno=594, col_offset=20), [], [], None, None, lineno=594, col_offset=20), lineno=594, col_offset=12), If(Compare(Name('reply', Load(), lineno=595, col_offset=15), [In()], [Tuple([Str('y', lineno=595, col_offset=25), Str('yes', lineno=595, col_offset=30)], Load(), lineno=595, col_offset=25)], lineno=595, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=596, col_offset=16), 'clear_all_breaks', Load(), lineno=596, col_offset=16), [], [], None, None, lineno=596, col_offset=16), lineno=596, col_offset=16)], [], lineno=595, col_offset=12), Return(None, lineno=597, col_offset=12)], [], lineno=589, col_offset=8), If(Compare(Str(':', lineno=598, col_offset=11), [In()], [Name('arg', Load(), lineno=598, col_offset=18)], lineno=598, col_offset=11), [Assign([Name('i', Store(), lineno=600, col_offset=12)], Call(Attribute(Name('arg', Load(), lineno=600, col_offset=16), 'rfind', Load(), lineno=600, col_offset=16), [Str(':', lineno=600, col_offset=26)], [], None, None, lineno=600, col_offset=16), lineno=600, col_offset=12), Assign([Name('filename', Store(), lineno=601, col_offset=12)], Subscript(Name('arg', Load(), lineno=601, col_offset=23), Slice(None, Name('i', Load(), lineno=601, col_offset=28), None), Load(), lineno=601, col_offset=23), lineno=601, col_offset=12), Assign([Name('arg', Store(), lineno=602, col_offset=12)], Subscript(Name('arg', Load(), lineno=602, col_offset=18), Slice(BinOp(Name('i', Load(), lineno=602, col_offset=22), Add(), Num(1, lineno=602, col_offset=24), lineno=602, col_offset=22), None, None), Load(), lineno=602, col_offset=18), lineno=602, col_offset=12), TryExcept([Assign([Name('lineno', Store(), lineno=604, col_offset=16)], Call(Name('int', Load(), lineno=604, col_offset=25), [Name('arg', Load(), lineno=604, col_offset=29)], [], None, None, lineno=604, col_offset=25), lineno=604, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=605, col_offset=19), None, [Assign([Name('err', Store(), lineno=606, col_offset=16)], BinOp(Str('Invalid line number (%s)', lineno=606, col_offset=22), Mod(), Name('arg', Load(), lineno=606, col_offset=51), lineno=606, col_offset=22), lineno=606, col_offset=16)], lineno=605, col_offset=12)], [Assign([Name('err', Store(), lineno=608, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=608, col_offset=22), 'clear_break', Load(), lineno=608, col_offset=22), [Name('filename', Load(), lineno=608, col_offset=39), Name('lineno', Load(), lineno=608, col_offset=49)], [], None, None, lineno=608, col_offset=22), lineno=608, col_offset=16)], lineno=603, col_offset=12), If(Name('err', Load(), lineno=609, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=609, col_offset=28), 'stdout', Load(), lineno=609, col_offset=28), [Str('***', lineno=609, col_offset=41), Name('err', Load(), lineno=609, col_offset=48)], True, lineno=609, col_offset=20)], [], lineno=609, col_offset=12), Return(None, lineno=610, col_offset=12)], [], lineno=598, col_offset=8), Assign([Name('numberlist', Store(), lineno=611, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=611, col_offset=21), 'split', Load(), lineno=611, col_offset=21), [], [], None, None, lineno=611, col_offset=21), lineno=611, col_offset=8), For(Name('i', Store(), lineno=612, col_offset=12), Name('numberlist', Load(), lineno=612, col_offset=17), [TryExcept([Assign([Name('i', Store(), lineno=614, col_offset=16)], Call(Name('int', Load(), lineno=614, col_offset=20), [Name('i', Load(), lineno=614, col_offset=24)], [], None, None, lineno=614, col_offset=20), lineno=614, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=615, col_offset=19), None, [Print(Attribute(Name('self', Load(), lineno=616, col_offset=24), 'stdout', Load(), lineno=616, col_offset=24), [BinOp(Str('Breakpoint index %r is not a number', lineno=616, col_offset=37), Mod(), Name('i', Load(), lineno=616, col_offset=77), lineno=616, col_offset=37)], True, lineno=616, col_offset=16), Continue( lineno=617, col_offset=16)], lineno=615, col_offset=12)], [], lineno=613, col_offset=12), If(UnaryOp(Not(), Compare(Num(0, lineno=619, col_offset=20), [LtE(), Lt()], [Name('i', Load(), lineno=619, col_offset=25), Call(Name('len', Load(), lineno=619, col_offset=29), [Attribute(Attribute(Name('bdb', Load(), lineno=619, col_offset=33), 'Breakpoint', Load(), lineno=619, col_offset=33), 'bpbynumber', Load(), lineno=619, col_offset=33)], [], None, None, lineno=619, col_offset=29)], lineno=619, col_offset=20), lineno=619, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=620, col_offset=24), 'stdout', Load(), lineno=620, col_offset=24), [Str('No breakpoint numbered', lineno=620, col_offset=37), Name('i', Load(), lineno=620, col_offset=63)], True, lineno=620, col_offset=16), Continue( lineno=621, col_offset=16)], [], lineno=619, col_offset=12), Assign([Name('err', Store(), lineno=622, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=622, col_offset=18), 'clear_bpbynumber', Load(), lineno=622, col_offset=18), [Name('i', Load(), lineno=622, col_offset=40)], [], None, None, lineno=622, col_offset=18), lineno=622, col_offset=12), If(Name('err', Load(), lineno=623, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=624, col_offset=24), 'stdout', Load(), lineno=624, col_offset=24), [Str('***', lineno=624, col_offset=37), Name('err', Load(), lineno=624, col_offset=44)], True, lineno=624, col_offset=16)], [Print(Attribute(Name('self', Load(), lineno=626, col_offset=24), 'stdout', Load(), lineno=626, col_offset=24), [Str('Deleted breakpoint', lineno=626, col_offset=37), Name('i', Load(), lineno=626, col_offset=59)], True, lineno=626, col_offset=16)], lineno=623, col_offset=12)], [], lineno=612, col_offset=8)], [], lineno=584, col_offset=4), Assign([Name('do_cl', Store(), lineno=627, col_offset=4)], Name('do_clear', Load(), lineno=627, col_offset=12), lineno=627, col_offset=4), FunctionDef('do_where', arguments([Name('self', Param(), lineno=629, col_offset=17), Name('arg', Param(), lineno=629, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=630, col_offset=8), 'print_stack_trace', Load(), lineno=630, col_offset=8), [], [], None, None, lineno=630, col_offset=8), lineno=630, col_offset=8)], [], lineno=629, col_offset=4), Assign([Name('do_w', Store(), lineno=631, col_offset=4)], Name('do_where', Load(), lineno=631, col_offset=11), lineno=631, col_offset=4), Assign([Name('do_bt', Store(), lineno=632, col_offset=4)], Name('do_where', Load(), lineno=632, col_offset=12), lineno=632, col_offset=4), FunctionDef('do_up', arguments([Name('self', Param(), lineno=634, col_offset=14), Name('arg', Param(), lineno=634, col_offset=20)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=635, col_offset=11), 'curindex', Load(), lineno=635, col_offset=11), [Eq()], [Num(0, lineno=635, col_offset=28)], lineno=635, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=636, col_offset=20), 'stdout', Load(), lineno=636, col_offset=20), [Str('*** Oldest frame', lineno=636, col_offset=33)], True, lineno=636, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=638, col_offset=12), 'curindex', Store(), lineno=638, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=638, col_offset=28), 'curindex', Load(), lineno=638, col_offset=28), Sub(), Num(1, lineno=638, col_offset=44), lineno=638, col_offset=28), lineno=638, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=639, col_offset=12), 'curframe', Store(), lineno=639, col_offset=12)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=639, col_offset=28), 'stack', Load(), lineno=639, col_offset=28), Index(Attribute(Name('self', Load(), lineno=639, col_offset=39), 'curindex', Load(), lineno=639, col_offset=39)), Load(), lineno=639, col_offset=28), Index(Num(0, lineno=639, col_offset=54)), Load(), lineno=639, col_offset=28), lineno=639, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=640, col_offset=12), 'curframe_locals', Store(), lineno=640, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=640, col_offset=35), 'curframe', Load(), lineno=640, col_offset=35), 'f_locals', Load(), lineno=640, col_offset=35), lineno=640, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=641, col_offset=12), 'print_stack_entry', Load(), lineno=641, col_offset=12), [Subscript(Attribute(Name('self', Load(), lineno=641, col_offset=35), 'stack', Load(), lineno=641, col_offset=35), Index(Attribute(Name('self', Load(), lineno=641, col_offset=46), 'curindex', Load(), lineno=641, col_offset=46)), Load(), lineno=641, col_offset=35)], [], None, None, lineno=641, col_offset=12), lineno=641, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=642, col_offset=12), 'lineno', Store(), lineno=642, col_offset=12)], Name('None', Load(), lineno=642, col_offset=26), lineno=642, col_offset=12)], lineno=635, col_offset=8)], [], lineno=634, col_offset=4), Assign([Name('do_u', Store(), lineno=643, col_offset=4)], Name('do_up', Load(), lineno=643, col_offset=11), lineno=643, col_offset=4), FunctionDef('do_down', arguments([Name('self', Param(), lineno=645, col_offset=16), Name('arg', Param(), lineno=645, col_offset=22)], None, None, []), [If(Compare(BinOp(Attribute(Name('self', Load(), lineno=646, col_offset=11), 'curindex', Load(), lineno=646, col_offset=11), Add(), Num(1, lineno=646, col_offset=27), lineno=646, col_offset=11), [Eq()], [Call(Name('len', Load(), lineno=646, col_offset=32), [Attribute(Name('self', Load(), lineno=646, col_offset=36), 'stack', Load(), lineno=646, col_offset=36)], [], None, None, lineno=646, col_offset=32)], lineno=646, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=647, col_offset=20), 'stdout', Load(), lineno=647, col_offset=20), [Str('*** Newest frame', lineno=647, col_offset=33)], True, lineno=647, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=649, col_offset=12), 'curindex', Store(), lineno=649, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=649, col_offset=28), 'curindex', Load(), lineno=649, col_offset=28), Add(), Num(1, lineno=649, col_offset=44), lineno=649, col_offset=28), lineno=649, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=650, col_offset=12), 'curframe', Store(), lineno=650, col_offset=12)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=650, col_offset=28), 'stack', Load(), lineno=650, col_offset=28), Index(Attribute(Name('self', Load(), lineno=650, col_offset=39), 'curindex', Load(), lineno=650, col_offset=39)), Load(), lineno=650, col_offset=28), Index(Num(0, lineno=650, col_offset=54)), Load(), lineno=650, col_offset=28), lineno=650, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=651, col_offset=12), 'curframe_locals', Store(), lineno=651, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=651, col_offset=35), 'curframe', Load(), lineno=651, col_offset=35), 'f_locals', Load(), lineno=651, col_offset=35), lineno=651, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=652, col_offset=12), 'print_stack_entry', Load(), lineno=652, col_offset=12), [Subscript(Attribute(Name('self', Load(), lineno=652, col_offset=35), 'stack', Load(), lineno=652, col_offset=35), Index(Attribute(Name('self', Load(), lineno=652, col_offset=46), 'curindex', Load(), lineno=652, col_offset=46)), Load(), lineno=652, col_offset=35)], [], None, None, lineno=652, col_offset=12), lineno=652, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=653, col_offset=12), 'lineno', Store(), lineno=653, col_offset=12)], Name('None', Load(), lineno=653, col_offset=26), lineno=653, col_offset=12)], lineno=646, col_offset=8)], [], lineno=645, col_offset=4), Assign([Name('do_d', Store(), lineno=654, col_offset=4)], Name('do_down', Load(), lineno=654, col_offset=11), lineno=654, col_offset=4), FunctionDef('do_until', arguments([Name('self', Param(), lineno=656, col_offset=17), Name('arg', Param(), lineno=656, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=657, col_offset=8), 'set_until', Load(), lineno=657, col_offset=8), [Attribute(Name('self', Load(), lineno=657, col_offset=23), 'curframe', Load(), lineno=657, col_offset=23)], [], None, None, lineno=657, col_offset=8), lineno=657, col_offset=8), Return(Num(1, lineno=658, col_offset=15), lineno=658, col_offset=8)], [], lineno=656, col_offset=4), Assign([Name('do_unt', Store(), lineno=659, col_offset=4)], Name('do_until', Load(), lineno=659, col_offset=13), lineno=659, col_offset=4), FunctionDef('do_step', arguments([Name('self', Param(), lineno=661, col_offset=16), Name('arg', Param(), lineno=661, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=662, col_offset=8), 'set_step', Load(), lineno=662, col_offset=8), [], [], None, None, lineno=662, col_offset=8), lineno=662, col_offset=8), Return(Num(1, lineno=663, col_offset=15), lineno=663, col_offset=8)], [], lineno=661, col_offset=4), Assign([Name('do_s', Store(), lineno=664, col_offset=4)], Name('do_step', Load(), lineno=664, col_offset=11), lineno=664, col_offset=4), FunctionDef('do_next', arguments([Name('self', Param(), lineno=666, col_offset=16), Name('arg', Param(), lineno=666, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=667, col_offset=8), 'set_next', Load(), lineno=667, col_offset=8), [Attribute(Name('self', Load(), lineno=667, col_offset=22), 'curframe', Load(), lineno=667, col_offset=22)], [], None, None, lineno=667, col_offset=8), lineno=667, col_offset=8), Return(Num(1, lineno=668, col_offset=15), lineno=668, col_offset=8)], [], lineno=666, col_offset=4), Assign([Name('do_n', Store(), lineno=669, col_offset=4)], Name('do_next', Load(), lineno=669, col_offset=11), lineno=669, col_offset=4), FunctionDef('do_run', arguments([Name('self', Param(), lineno=671, col_offset=15), Name('arg', Param(), lineno=671, col_offset=21)], None, None, []), [Expr(Str('Restart program by raising an exception to be caught in the main\n        debugger loop.  If arguments were given, set them in sys.argv.', lineno=673, col_offset=-1), lineno=673, col_offset=-1), If(Name('arg', Load(), lineno=674, col_offset=11), [Import([alias('shlex', None)], lineno=675, col_offset=12), Assign([Name('argv0', Store(), lineno=676, col_offset=12)], Subscript(Attribute(Name('sys', Load(), lineno=676, col_offset=20), 'argv', Load(), lineno=676, col_offset=20), Slice(Num(0, lineno=676, col_offset=29), Num(1, lineno=676, col_offset=31), None), Load(), lineno=676, col_offset=20), lineno=676, col_offset=12), Assign([Attribute(Name('sys', Load(), lineno=677, col_offset=12), 'argv', Store(), lineno=677, col_offset=12)], Call(Attribute(Name('shlex', Load(), lineno=677, col_offset=23), 'split', Load(), lineno=677, col_offset=23), [Name('arg', Load(), lineno=677, col_offset=35)], [], None, None, lineno=677, col_offset=23), lineno=677, col_offset=12), Assign([Subscript(Attribute(Name('sys', Load(), lineno=678, col_offset=12), 'argv', Load(), lineno=678, col_offset=12), Slice(None, Num(0, lineno=678, col_offset=22), None), Store(), lineno=678, col_offset=12)], Name('argv0', Load(), lineno=678, col_offset=27), lineno=678, col_offset=12)], [], lineno=674, col_offset=8), Raise(Name('Restart', Load(), lineno=679, col_offset=14), None, None, lineno=679, col_offset=8)], [], lineno=671, col_offset=4), Assign([Name('do_restart', Store(), lineno=681, col_offset=4)], Name('do_run', Load(), lineno=681, col_offset=17), lineno=681, col_offset=4), FunctionDef('do_return', arguments([Name('self', Param(), lineno=683, col_offset=18), Name('arg', Param(), lineno=683, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=684, col_offset=8), 'set_return', Load(), lineno=684, col_offset=8), [Attribute(Name('self', Load(), lineno=684, col_offset=24), 'curframe', Load(), lineno=684, col_offset=24)], [], None, None, lineno=684, col_offset=8), lineno=684, col_offset=8), Return(Num(1, lineno=685, col_offset=15), lineno=685, col_offset=8)], [], lineno=683, col_offset=4), Assign([Name('do_r', Store(), lineno=686, col_offset=4)], Name('do_return', Load(), lineno=686, col_offset=11), lineno=686, col_offset=4), FunctionDef('do_continue', arguments([Name('self', Param(), lineno=688, col_offset=20), Name('arg', Param(), lineno=688, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=689, col_offset=8), 'set_continue', Load(), lineno=689, col_offset=8), [], [], None, None, lineno=689, col_offset=8), lineno=689, col_offset=8), Return(Num(1, lineno=690, col_offset=15), lineno=690, col_offset=8)], [], lineno=688, col_offset=4), Assign([Name('do_c', Store(), lineno=691, col_offset=4), Name('do_cont', Store(), lineno=691, col_offset=11)], Name('do_continue', Load(), lineno=691, col_offset=21), lineno=691, col_offset=4), FunctionDef('do_jump', arguments([Name('self', Param(), lineno=693, col_offset=16), Name('arg', Param(), lineno=693, col_offset=22)], None, None, []), [If(Compare(BinOp(Attribute(Name('self', Load(), lineno=694, col_offset=11), 'curindex', Load(), lineno=694, col_offset=11), Add(), Num(1, lineno=694, col_offset=27), lineno=694, col_offset=11), [NotEq()], [Call(Name('len', Load(), lineno=694, col_offset=32), [Attribute(Name('self', Load(), lineno=694, col_offset=36), 'stack', Load(), lineno=694, col_offset=36)], [], None, None, lineno=694, col_offset=32)], lineno=694, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=695, col_offset=20), 'stdout', Load(), lineno=695, col_offset=20), [Str('*** You can only jump within the bottom frame', lineno=695, col_offset=33)], True, lineno=695, col_offset=12), Return(None, lineno=696, col_offset=12)], [], lineno=694, col_offset=8), TryExcept([Assign([Name('arg', Store(), lineno=698, col_offset=12)], Call(Name('int', Load(), lineno=698, col_offset=18), [Name('arg', Load(), lineno=698, col_offset=22)], [], None, None, lineno=698, col_offset=18), lineno=698, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=699, col_offset=15), None, [Print(Attribute(Name('self', Load(), lineno=700, col_offset=20), 'stdout', Load(), lineno=700, col_offset=20), [Str("*** The 'jump' command requires a line number.", lineno=700, col_offset=33)], True, lineno=700, col_offset=12)], lineno=699, col_offset=8)], [TryExcept([Assign([Attribute(Attribute(Name('self', Load(), lineno=705, col_offset=16), 'curframe', Load(), lineno=705, col_offset=16), 'f_lineno', Store(), lineno=705, col_offset=16)], Name('arg', Load(), lineno=705, col_offset=41), lineno=705, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=706, col_offset=16), 'stack', Load(), lineno=706, col_offset=16), Index(Attribute(Name('self', Load(), lineno=706, col_offset=27), 'curindex', Load(), lineno=706, col_offset=27)), Store(), lineno=706, col_offset=16)], Tuple([Subscript(Subscript(Attribute(Name('self', Load(), lineno=706, col_offset=44), 'stack', Load(), lineno=706, col_offset=44), Index(Attribute(Name('self', Load(), lineno=706, col_offset=55), 'curindex', Load(), lineno=706, col_offset=55)), Load(), lineno=706, col_offset=44), Index(Num(0, lineno=706, col_offset=70)), Load(), lineno=706, col_offset=44), Name('arg', Load(), lineno=706, col_offset=74)], Load(), lineno=706, col_offset=44), lineno=706, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=707, col_offset=16), 'print_stack_entry', Load(), lineno=707, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=707, col_offset=39), 'stack', Load(), lineno=707, col_offset=39), Index(Attribute(Name('self', Load(), lineno=707, col_offset=50), 'curindex', Load(), lineno=707, col_offset=50)), Load(), lineno=707, col_offset=39)], [], None, None, lineno=707, col_offset=16), lineno=707, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=708, col_offset=19), Name('e', Store(), lineno=708, col_offset=31), [Print(Attribute(Name('self', Load(), lineno=709, col_offset=24), 'stdout', Load(), lineno=709, col_offset=24), [Str('*** Jump failed:', lineno=709, col_offset=37), Name('e', Load(), lineno=709, col_offset=57)], True, lineno=709, col_offset=16)], lineno=708, col_offset=12)], [], lineno=702, col_offset=12)], lineno=697, col_offset=8)], [], lineno=693, col_offset=4), Assign([Name('do_j', Store(), lineno=710, col_offset=4)], Name('do_jump', Load(), lineno=710, col_offset=11), lineno=710, col_offset=4), FunctionDef('do_debug', arguments([Name('self', Param(), lineno=712, col_offset=17), Name('arg', Param(), lineno=712, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('sys', Load(), lineno=713, col_offset=8), 'settrace', Load(), lineno=713, col_offset=8), [Name('None', Load(), lineno=713, col_offset=21)], [], None, None, lineno=713, col_offset=8), lineno=713, col_offset=8), Assign([Name('globals', Store(), lineno=714, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=714, col_offset=18), 'curframe', Load(), lineno=714, col_offset=18), 'f_globals', Load(), lineno=714, col_offset=18), lineno=714, col_offset=8), Assign([Name('locals', Store(), lineno=715, col_offset=8)], Attribute(Name('self', Load(), lineno=715, col_offset=17), 'curframe_locals', Load(), lineno=715, col_offset=17), lineno=715, col_offset=8), Assign([Name('p', Store(), lineno=716, col_offset=8)], Call(Name('Pdb', Load(), lineno=716, col_offset=12), [Attribute(Name('self', Load(), lineno=716, col_offset=16), 'completekey', Load(), lineno=716, col_offset=16), Attribute(Name('self', Load(), lineno=716, col_offset=34), 'stdin', Load(), lineno=716, col_offset=34), Attribute(Name('self', Load(), lineno=716, col_offset=46), 'stdout', Load(), lineno=716, col_offset=46)], [], None, None, lineno=716, col_offset=12), lineno=716, col_offset=8), Assign([Attribute(Name('p', Load(), lineno=717, col_offset=8), 'prompt', Store(), lineno=717, col_offset=8)], BinOp(Str('(%s) ', lineno=717, col_offset=19), Mod(), Call(Attribute(Attribute(Name('self', Load(), lineno=717, col_offset=29), 'prompt', Load(), lineno=717, col_offset=29), 'strip', Load(), lineno=717, col_offset=29), [], [], None, None, lineno=717, col_offset=29), lineno=717, col_offset=19), lineno=717, col_offset=8), Print(Attribute(Name('self', Load(), lineno=718, col_offset=16), 'stdout', Load(), lineno=718, col_offset=16), [Str('ENTERING RECURSIVE DEBUGGER', lineno=718, col_offset=29)], True, lineno=718, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=719, col_offset=8), 'call_tracing', Load(), lineno=719, col_offset=8), [Attribute(Name('p', Load(), lineno=719, col_offset=25), 'run', Load(), lineno=719, col_offset=25), Tuple([Name('arg', Load(), lineno=719, col_offset=33), Name('globals', Load(), lineno=719, col_offset=38), Name('locals', Load(), lineno=719, col_offset=47)], Load(), lineno=719, col_offset=33)], [], None, None, lineno=719, col_offset=8), lineno=719, col_offset=8), Print(Attribute(Name('self', Load(), lineno=720, col_offset=16), 'stdout', Load(), lineno=720, col_offset=16), [Str('LEAVING RECURSIVE DEBUGGER', lineno=720, col_offset=29)], True, lineno=720, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=721, col_offset=8), 'settrace', Load(), lineno=721, col_offset=8), [Attribute(Name('self', Load(), lineno=721, col_offset=21), 'trace_dispatch', Load(), lineno=721, col_offset=21)], [], None, None, lineno=721, col_offset=8), lineno=721, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=722, col_offset=8), 'lastcmd', Store(), lineno=722, col_offset=8)], Attribute(Name('p', Load(), lineno=722, col_offset=23), 'lastcmd', Load(), lineno=722, col_offset=23), lineno=722, col_offset=8)], [], lineno=712, col_offset=4), FunctionDef('do_quit', arguments([Name('self', Param(), lineno=724, col_offset=16), Name('arg', Param(), lineno=724, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=725, col_offset=8), '_user_requested_quit', Store(), lineno=725, col_offset=8)], Num(1, lineno=725, col_offset=36), lineno=725, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=726, col_offset=8), 'set_quit', Load(), lineno=726, col_offset=8), [], [], None, None, lineno=726, col_offset=8), lineno=726, col_offset=8), Return(Num(1, lineno=727, col_offset=15), lineno=727, col_offset=8)], [], lineno=724, col_offset=4), Assign([Name('do_q', Store(), lineno=729, col_offset=4)], Name('do_quit', Load(), lineno=729, col_offset=11), lineno=729, col_offset=4), Assign([Name('do_exit', Store(), lineno=730, col_offset=4)], Name('do_quit', Load(), lineno=730, col_offset=14), lineno=730, col_offset=4), FunctionDef('do_EOF', arguments([Name('self', Param(), lineno=732, col_offset=15), Name('arg', Param(), lineno=732, col_offset=21)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=733, col_offset=16), 'stdout', Load(), lineno=733, col_offset=16), [], True, lineno=733, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=734, col_offset=8), '_user_requested_quit', Store(), lineno=734, col_offset=8)], Num(1, lineno=734, col_offset=36), lineno=734, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=735, col_offset=8), 'set_quit', Load(), lineno=735, col_offset=8), [], [], None, None, lineno=735, col_offset=8), lineno=735, col_offset=8), Return(Num(1, lineno=736, col_offset=15), lineno=736, col_offset=8)], [], lineno=732, col_offset=4), FunctionDef('do_args', arguments([Name('self', Param(), lineno=738, col_offset=16), Name('arg', Param(), lineno=738, col_offset=22)], None, None, []), [Assign([Name('co', Store(), lineno=739, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=739, col_offset=13), 'curframe', Load(), lineno=739, col_offset=13), 'f_code', Load(), lineno=739, col_offset=13), lineno=739, col_offset=8), Assign([Name('dict', Store(), lineno=740, col_offset=8)], Attribute(Name('self', Load(), lineno=740, col_offset=15), 'curframe_locals', Load(), lineno=740, col_offset=15), lineno=740, col_offset=8), Assign([Name('n', Store(), lineno=741, col_offset=8)], Attribute(Name('co', Load(), lineno=741, col_offset=12), 'co_argcount', Load(), lineno=741, col_offset=12), lineno=741, col_offset=8), If(BinOp(Attribute(Name('co', Load(), lineno=742, col_offset=11), 'co_flags', Load(), lineno=742, col_offset=11), BitAnd(), Num(4, lineno=742, col_offset=25), lineno=742, col_offset=11), [Assign([Name('n', Store(), lineno=742, col_offset=28)], BinOp(Name('n', Load(), lineno=742, col_offset=32), Add(), Num(1, lineno=742, col_offset=34), lineno=742, col_offset=32), lineno=742, col_offset=28)], [], lineno=742, col_offset=8), If(BinOp(Attribute(Name('co', Load(), lineno=743, col_offset=11), 'co_flags', Load(), lineno=743, col_offset=11), BitAnd(), Num(8, lineno=743, col_offset=25), lineno=743, col_offset=11), [Assign([Name('n', Store(), lineno=743, col_offset=28)], BinOp(Name('n', Load(), lineno=743, col_offset=32), Add(), Num(1, lineno=743, col_offset=34), lineno=743, col_offset=32), lineno=743, col_offset=28)], [], lineno=743, col_offset=8), For(Name('i', Store(), lineno=744, col_offset=12), Call(Name('range', Load(), lineno=744, col_offset=17), [Name('n', Load(), lineno=744, col_offset=23)], [], None, None, lineno=744, col_offset=17), [Assign([Name('name', Store(), lineno=745, col_offset=12)], Subscript(Attribute(Name('co', Load(), lineno=745, col_offset=19), 'co_varnames', Load(), lineno=745, col_offset=19), Index(Name('i', Load(), lineno=745, col_offset=34)), Load(), lineno=745, col_offset=19), lineno=745, col_offset=12), Print(Attribute(Name('self', Load(), lineno=746, col_offset=20), 'stdout', Load(), lineno=746, col_offset=20), [Name('name', Load(), lineno=746, col_offset=33), Str('=', lineno=746, col_offset=39)], False, lineno=746, col_offset=12), If(Compare(Name('name', Load(), lineno=747, col_offset=15), [In()], [Name('dict', Load(), lineno=747, col_offset=23)], lineno=747, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=747, col_offset=37), 'stdout', Load(), lineno=747, col_offset=37), [Subscript(Name('dict', Load(), lineno=747, col_offset=50), Index(Name('name', Load(), lineno=747, col_offset=55)), Load(), lineno=747, col_offset=50)], True, lineno=747, col_offset=29)], [Print(Attribute(Name('self', Load(), lineno=748, col_offset=26), 'stdout', Load(), lineno=748, col_offset=26), [Str('*** undefined ***', lineno=748, col_offset=39)], True, lineno=748, col_offset=18)], lineno=747, col_offset=12)], [], lineno=744, col_offset=8)], [], lineno=738, col_offset=4), Assign([Name('do_a', Store(), lineno=749, col_offset=4)], Name('do_args', Load(), lineno=749, col_offset=11), lineno=749, col_offset=4), FunctionDef('do_retval', arguments([Name('self', Param(), lineno=751, col_offset=18), Name('arg', Param(), lineno=751, col_offset=24)], None, None, []), [If(Compare(Str('__return__', lineno=752, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=752, col_offset=27), 'curframe_locals', Load(), lineno=752, col_offset=27)], lineno=752, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=753, col_offset=20), 'stdout', Load(), lineno=753, col_offset=20), [Subscript(Attribute(Name('self', Load(), lineno=753, col_offset=33), 'curframe_locals', Load(), lineno=753, col_offset=33), Index(Str('__return__', lineno=753, col_offset=54)), Load(), lineno=753, col_offset=33)], True, lineno=753, col_offset=12)], [Print(Attribute(Name('self', Load(), lineno=755, col_offset=20), 'stdout', Load(), lineno=755, col_offset=20), [Str('*** Not yet returned!', lineno=755, col_offset=33)], True, lineno=755, col_offset=12)], lineno=752, col_offset=8)], [], lineno=751, col_offset=4), Assign([Name('do_rv', Store(), lineno=756, col_offset=4)], Name('do_retval', Load(), lineno=756, col_offset=12), lineno=756, col_offset=4), FunctionDef('_getval', arguments([Name('self', Param(), lineno=758, col_offset=16), Name('arg', Param(), lineno=758, col_offset=22)], None, None, []), [TryExcept([Return(Call(Name('eval', Load(), lineno=760, col_offset=19), [Name('arg', Load(), lineno=760, col_offset=24), Attribute(Attribute(Name('self', Load(), lineno=760, col_offset=29), 'curframe', Load(), lineno=760, col_offset=29), 'f_globals', Load(), lineno=760, col_offset=29), Attribute(Name('self', Load(), lineno=761, col_offset=24), 'curframe_locals', Load(), lineno=761, col_offset=24)], [], None, None, lineno=760, col_offset=19), lineno=760, col_offset=12)], [ExceptHandler(None, None, [Assign([Tuple([Name('t', Store(), lineno=763, col_offset=12), Name('v', Store(), lineno=763, col_offset=15)], Store(), lineno=763, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=763, col_offset=19), 'exc_info', Load(), lineno=763, col_offset=19), [], [], None, None, lineno=763, col_offset=19), Slice(None, Num(2, lineno=763, col_offset=35), None), Load(), lineno=763, col_offset=19), lineno=763, col_offset=12), If(Call(Name('isinstance', Load(), lineno=764, col_offset=15), [Name('t', Load(), lineno=764, col_offset=26), Name('str', Load(), lineno=764, col_offset=29)], [], None, None, lineno=764, col_offset=15), [Assign([Name('exc_type_name', Store(), lineno=765, col_offset=16)], Name('t', Load(), lineno=765, col_offset=32), lineno=765, col_offset=16)], [Assign([Name('exc_type_name', Store(), lineno=766, col_offset=18)], Attribute(Name('t', Load(), lineno=766, col_offset=34), '__name__', Load(), lineno=766, col_offset=34), lineno=766, col_offset=18)], lineno=764, col_offset=12), Print(Attribute(Name('self', Load(), lineno=767, col_offset=20), 'stdout', Load(), lineno=767, col_offset=20), [Str('***', lineno=767, col_offset=33), BinOp(Name('exc_type_name', Load(), lineno=767, col_offset=40), Add(), Str(':', lineno=767, col_offset=56), lineno=767, col_offset=40), Call(Name('repr', Load(), lineno=767, col_offset=61), [Name('v', Load(), lineno=767, col_offset=66)], [], None, None, lineno=767, col_offset=61)], True, lineno=767, col_offset=12), Raise(None, None, None, lineno=768, col_offset=12)], lineno=762, col_offset=8)], [], lineno=759, col_offset=8)], [], lineno=758, col_offset=4), FunctionDef('do_p', arguments([Name('self', Param(), lineno=770, col_offset=13), Name('arg', Param(), lineno=770, col_offset=19)], None, None, []), [TryExcept([Print(Attribute(Name('self', Load(), lineno=772, col_offset=20), 'stdout', Load(), lineno=772, col_offset=20), [Call(Name('repr', Load(), lineno=772, col_offset=33), [Call(Attribute(Name('self', Load(), lineno=772, col_offset=38), '_getval', Load(), lineno=772, col_offset=38), [Name('arg', Load(), lineno=772, col_offset=51)], [], None, None, lineno=772, col_offset=38)], [], None, None, lineno=772, col_offset=33)], True, lineno=772, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=774, col_offset=12)], lineno=773, col_offset=8)], [], lineno=771, col_offset=8)], [], lineno=770, col_offset=4), FunctionDef('do_pp', arguments([Name('self', Param(), lineno=776, col_offset=14), Name('arg', Param(), lineno=776, col_offset=20)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('pprint', Load(), lineno=778, col_offset=12), 'pprint', Load(), lineno=778, col_offset=12), [Call(Attribute(Name('self', Load(), lineno=778, col_offset=26), '_getval', Load(), lineno=778, col_offset=26), [Name('arg', Load(), lineno=778, col_offset=39)], [], None, None, lineno=778, col_offset=26), Attribute(Name('self', Load(), lineno=778, col_offset=45), 'stdout', Load(), lineno=778, col_offset=45)], [], None, None, lineno=778, col_offset=12), lineno=778, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=780, col_offset=12)], lineno=779, col_offset=8)], [], lineno=777, col_offset=8)], [], lineno=776, col_offset=4), FunctionDef('do_list', arguments([Name('self', Param(), lineno=782, col_offset=16), Name('arg', Param(), lineno=782, col_offset=22)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=783, col_offset=8), 'lastcmd', Store(), lineno=783, col_offset=8)], Str('list', lineno=783, col_offset=23), lineno=783, col_offset=8), Assign([Name('last', Store(), lineno=784, col_offset=8)], Name('None', Load(), lineno=784, col_offset=15), lineno=784, col_offset=8), If(Name('arg', Load(), lineno=785, col_offset=11), [TryExcept([Assign([Name('x', Store(), lineno=787, col_offset=16)], Call(Name('eval', Load(), lineno=787, col_offset=20), [Name('arg', Load(), lineno=787, col_offset=25), Dict([], [], lineno=787, col_offset=30), Dict([], [], lineno=787, col_offset=34)], [], None, None, lineno=787, col_offset=20), lineno=787, col_offset=16), If(Compare(Call(Name('type', Load(), lineno=788, col_offset=19), [Name('x', Load(), lineno=788, col_offset=24)], [], None, None, lineno=788, col_offset=19), [Eq()], [Call(Name('type', Load(), lineno=788, col_offset=30), [Tuple([], Load(), lineno=788, col_offset=35)], [], None, None, lineno=788, col_offset=30)], lineno=788, col_offset=19), [Assign([Tuple([Name('first', Store(), lineno=789, col_offset=20), Name('last', Store(), lineno=789, col_offset=27)], Store(), lineno=789, col_offset=20)], Name('x', Load(), lineno=789, col_offset=34), lineno=789, col_offset=20), Assign([Name('first', Store(), lineno=790, col_offset=20)], Call(Name('int', Load(), lineno=790, col_offset=28), [Name('first', Load(), lineno=790, col_offset=32)], [], None, None, lineno=790, col_offset=28), lineno=790, col_offset=20), Assign([Name('last', Store(), lineno=791, col_offset=20)], Call(Name('int', Load(), lineno=791, col_offset=27), [Name('last', Load(), lineno=791, col_offset=31)], [], None, None, lineno=791, col_offset=27), lineno=791, col_offset=20), If(Compare(Name('last', Load(), lineno=792, col_offset=23), [Lt()], [Name('first', Load(), lineno=792, col_offset=30)], lineno=792, col_offset=23), [Assign([Name('last', Store(), lineno=794, col_offset=24)], BinOp(Name('first', Load(), lineno=794, col_offset=31), Add(), Name('last', Load(), lineno=794, col_offset=39), lineno=794, col_offset=31), lineno=794, col_offset=24)], [], lineno=792, col_offset=20)], [Assign([Name('first', Store(), lineno=796, col_offset=20)], Call(Name('max', Load(), lineno=796, col_offset=28), [Num(1, lineno=796, col_offset=32), BinOp(Call(Name('int', Load(), lineno=796, col_offset=35), [Name('x', Load(), lineno=796, col_offset=39)], [], None, None, lineno=796, col_offset=35), Sub(), Num(5, lineno=796, col_offset=44), lineno=796, col_offset=35)], [], None, None, lineno=796, col_offset=28), lineno=796, col_offset=20)], lineno=788, col_offset=16)], [ExceptHandler(None, None, [Print(Attribute(Name('self', Load(), lineno=798, col_offset=24), 'stdout', Load(), lineno=798, col_offset=24), [Str('*** Error in argument:', lineno=798, col_offset=37), Call(Name('repr', Load(), lineno=798, col_offset=63), [Name('arg', Load(), lineno=798, col_offset=68)], [], None, None, lineno=798, col_offset=63)], True, lineno=798, col_offset=16), Return(None, lineno=799, col_offset=16)], lineno=797, col_offset=12)], [], lineno=786, col_offset=12)], [If(Compare(Attribute(Name('self', Load(), lineno=800, col_offset=13), 'lineno', Load(), lineno=800, col_offset=13), [Is()], [Name('None', Load(), lineno=800, col_offset=28)], lineno=800, col_offset=13), [Assign([Name('first', Store(), lineno=801, col_offset=12)], Call(Name('max', Load(), lineno=801, col_offset=20), [Num(1, lineno=801, col_offset=24), BinOp(Attribute(Attribute(Name('self', Load(), lineno=801, col_offset=27), 'curframe', Load(), lineno=801, col_offset=27), 'f_lineno', Load(), lineno=801, col_offset=27), Sub(), Num(5, lineno=801, col_offset=52), lineno=801, col_offset=27)], [], None, None, lineno=801, col_offset=20), lineno=801, col_offset=12)], [Assign([Name('first', Store(), lineno=803, col_offset=12)], BinOp(Attribute(Name('self', Load(), lineno=803, col_offset=20), 'lineno', Load(), lineno=803, col_offset=20), Add(), Num(1, lineno=803, col_offset=34), lineno=803, col_offset=20), lineno=803, col_offset=12)], lineno=800, col_offset=13)], lineno=785, col_offset=8), If(Compare(Name('last', Load(), lineno=804, col_offset=11), [Is()], [Name('None', Load(), lineno=804, col_offset=19)], lineno=804, col_offset=11), [Assign([Name('last', Store(), lineno=805, col_offset=12)], BinOp(Name('first', Load(), lineno=805, col_offset=19), Add(), Num(10, lineno=805, col_offset=27), lineno=805, col_offset=19), lineno=805, col_offset=12)], [], lineno=804, col_offset=8), Assign([Name('filename', Store(), lineno=806, col_offset=8)], Attribute(Attribute(Attribute(Name('self', Load(), lineno=806, col_offset=19), 'curframe', Load(), lineno=806, col_offset=19), 'f_code', Load(), lineno=806, col_offset=19), 'co_filename', Load(), lineno=806, col_offset=19), lineno=806, col_offset=8), Assign([Name('breaklist', Store(), lineno=807, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=807, col_offset=20), 'get_file_breaks', Load(), lineno=807, col_offset=20), [Name('filename', Load(), lineno=807, col_offset=41)], [], None, None, lineno=807, col_offset=20), lineno=807, col_offset=8), TryExcept([For(Name('lineno', Store(), lineno=809, col_offset=16), Call(Name('range', Load(), lineno=809, col_offset=26), [Name('first', Load(), lineno=809, col_offset=32), BinOp(Name('last', Load(), lineno=809, col_offset=39), Add(), Num(1, lineno=809, col_offset=44), lineno=809, col_offset=39)], [], None, None, lineno=809, col_offset=26), [Assign([Name('line', Store(), lineno=810, col_offset=16)], Call(Attribute(Name('linecache', Load(), lineno=810, col_offset=23), 'getline', Load(), lineno=810, col_offset=23), [Name('filename', Load(), lineno=810, col_offset=41), Name('lineno', Load(), lineno=810, col_offset=51), Attribute(Attribute(Name('self', Load(), lineno=811, col_offset=41), 'curframe', Load(), lineno=811, col_offset=41), 'f_globals', Load(), lineno=811, col_offset=41)], [], None, None, lineno=810, col_offset=23), lineno=810, col_offset=16), If(UnaryOp(Not(), Name('line', Load(), lineno=812, col_offset=23), lineno=812, col_offset=19), [Print(Attribute(Name('self', Load(), lineno=813, col_offset=28), 'stdout', Load(), lineno=813, col_offset=28), [Str('[EOF]', lineno=813, col_offset=41)], True, lineno=813, col_offset=20), Break( lineno=814, col_offset=20)], [Assign([Name('s', Store(), lineno=816, col_offset=20)], Call(Attribute(Call(Name('repr', Load(), lineno=816, col_offset=24), [Name('lineno', Load(), lineno=816, col_offset=29)], [], None, None, lineno=816, col_offset=24), 'rjust', Load(), lineno=816, col_offset=24), [Num(3, lineno=816, col_offset=43)], [], None, None, lineno=816, col_offset=24), lineno=816, col_offset=20), If(Compare(Call(Name('len', Load(), lineno=817, col_offset=23), [Name('s', Load(), lineno=817, col_offset=27)], [], None, None, lineno=817, col_offset=23), [Lt()], [Num(4, lineno=817, col_offset=32)], lineno=817, col_offset=23), [Assign([Name('s', Store(), lineno=817, col_offset=35)], BinOp(Name('s', Load(), lineno=817, col_offset=39), Add(), Str(' ', lineno=817, col_offset=43), lineno=817, col_offset=39), lineno=817, col_offset=35)], [], lineno=817, col_offset=20), If(Compare(Name('lineno', Load(), lineno=818, col_offset=23), [In()], [Name('breaklist', Load(), lineno=818, col_offset=33)], lineno=818, col_offset=23), [Assign([Name('s', Store(), lineno=818, col_offset=44)], BinOp(Name('s', Load(), lineno=818, col_offset=48), Add(), Str('B', lineno=818, col_offset=52), lineno=818, col_offset=48), lineno=818, col_offset=44)], [Assign([Name('s', Store(), lineno=819, col_offset=26)], BinOp(Name('s', Load(), lineno=819, col_offset=30), Add(), Str(' ', lineno=819, col_offset=34), lineno=819, col_offset=30), lineno=819, col_offset=26)], lineno=818, col_offset=20), If(Compare(Name('lineno', Load(), lineno=820, col_offset=23), [Eq()], [Attribute(Attribute(Name('self', Load(), lineno=820, col_offset=33), 'curframe', Load(), lineno=820, col_offset=33), 'f_lineno', Load(), lineno=820, col_offset=33)], lineno=820, col_offset=23), [Assign([Name('s', Store(), lineno=821, col_offset=24)], BinOp(Name('s', Load(), lineno=821, col_offset=28), Add(), Str('->', lineno=821, col_offset=32), lineno=821, col_offset=28), lineno=821, col_offset=24)], [], lineno=820, col_offset=20), Print(Attribute(Name('self', Load(), lineno=822, col_offset=28), 'stdout', Load(), lineno=822, col_offset=28), [BinOp(BinOp(Name('s', Load(), lineno=822, col_offset=41), Add(), Str('\t', lineno=822, col_offset=45), lineno=822, col_offset=41), Add(), Name('line', Load(), lineno=822, col_offset=52), lineno=822, col_offset=50)], False, lineno=822, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=823, col_offset=20), 'lineno', Store(), lineno=823, col_offset=20)], Name('lineno', Load(), lineno=823, col_offset=34), lineno=823, col_offset=20)], lineno=812, col_offset=16)], [], lineno=809, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=824, col_offset=15), None, [Pass( lineno=825, col_offset=12)], lineno=824, col_offset=8)], [], lineno=808, col_offset=8)], [], lineno=782, col_offset=4), Assign([Name('do_l', Store(), lineno=826, col_offset=4)], Name('do_list', Load(), lineno=826, col_offset=11), lineno=826, col_offset=4), FunctionDef('do_whatis', arguments([Name('self', Param(), lineno=828, col_offset=18), Name('arg', Param(), lineno=828, col_offset=24)], None, None, []), [TryExcept([Assign([Name('value', Store(), lineno=830, col_offset=12)], Call(Name('eval', Load(), lineno=830, col_offset=20), [Name('arg', Load(), lineno=830, col_offset=25), Attribute(Attribute(Name('self', Load(), lineno=830, col_offset=30), 'curframe', Load(), lineno=830, col_offset=30), 'f_globals', Load(), lineno=830, col_offset=30), Attribute(Name('self', Load(), lineno=831, col_offset=28), 'curframe_locals', Load(), lineno=831, col_offset=28)], [], None, None, lineno=830, col_offset=20), lineno=830, col_offset=12)], [ExceptHandler(None, None, [Assign([Tuple([Name('t', Store(), lineno=833, col_offset=12), Name('v', Store(), lineno=833, col_offset=15)], Store(), lineno=833, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=833, col_offset=19), 'exc_info', Load(), lineno=833, col_offset=19), [], [], None, None, lineno=833, col_offset=19), Slice(None, Num(2, lineno=833, col_offset=35), None), Load(), lineno=833, col_offset=19), lineno=833, col_offset=12), If(Compare(Call(Name('type', Load(), lineno=834, col_offset=15), [Name('t', Load(), lineno=834, col_offset=20)], [], None, None, lineno=834, col_offset=15), [Eq()], [Call(Name('type', Load(), lineno=834, col_offset=26), [Str('', lineno=834, col_offset=31)], [], None, None, lineno=834, col_offset=26)], lineno=834, col_offset=15), [Assign([Name('exc_type_name', Store(), lineno=835, col_offset=16)], Name('t', Load(), lineno=835, col_offset=32), lineno=835, col_offset=16)], [Assign([Name('exc_type_name', Store(), lineno=836, col_offset=18)], Attribute(Name('t', Load(), lineno=836, col_offset=34), '__name__', Load(), lineno=836, col_offset=34), lineno=836, col_offset=18)], lineno=834, col_offset=12), Print(Attribute(Name('self', Load(), lineno=837, col_offset=20), 'stdout', Load(), lineno=837, col_offset=20), [Str('***', lineno=837, col_offset=33), BinOp(Name('exc_type_name', Load(), lineno=837, col_offset=40), Add(), Str(':', lineno=837, col_offset=56), lineno=837, col_offset=40), Call(Name('repr', Load(), lineno=837, col_offset=61), [Name('v', Load(), lineno=837, col_offset=66)], [], None, None, lineno=837, col_offset=61)], True, lineno=837, col_offset=12), Return(None, lineno=838, col_offset=12)], lineno=832, col_offset=8)], [], lineno=829, col_offset=8), Assign([Name('code', Store(), lineno=839, col_offset=8)], Name('None', Load(), lineno=839, col_offset=15), lineno=839, col_offset=8), TryExcept([Assign([Name('code', Store(), lineno=841, col_offset=13)], Attribute(Name('value', Load(), lineno=841, col_offset=20), 'func_code', Load(), lineno=841, col_offset=20), lineno=841, col_offset=13)], [ExceptHandler(None, None, [Pass( lineno=842, col_offset=16)], lineno=842, col_offset=8)], [], lineno=841, col_offset=8), If(Name('code', Load(), lineno=843, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=844, col_offset=20), 'stdout', Load(), lineno=844, col_offset=20), [Str('Function', lineno=844, col_offset=33), Attribute(Name('code', Load(), lineno=844, col_offset=45), 'co_name', Load(), lineno=844, col_offset=45)], True, lineno=844, col_offset=12), Return(None, lineno=845, col_offset=12)], [], lineno=843, col_offset=8), TryExcept([Assign([Name('code', Store(), lineno=847, col_offset=13)], Attribute(Attribute(Name('value', Load(), lineno=847, col_offset=20), 'im_func', Load(), lineno=847, col_offset=20), 'func_code', Load(), lineno=847, col_offset=20), lineno=847, col_offset=13)], [ExceptHandler(None, None, [Pass( lineno=848, col_offset=16)], lineno=848, col_offset=8)], [], lineno=847, col_offset=8), If(Name('code', Load(), lineno=849, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=850, col_offset=20), 'stdout', Load(), lineno=850, col_offset=20), [Str('Method', lineno=850, col_offset=33), Attribute(Name('code', Load(), lineno=850, col_offset=43), 'co_name', Load(), lineno=850, col_offset=43)], True, lineno=850, col_offset=12), Return(None, lineno=851, col_offset=12)], [], lineno=849, col_offset=8), Print(Attribute(Name('self', Load(), lineno=853, col_offset=16), 'stdout', Load(), lineno=853, col_offset=16), [Call(Name('type', Load(), lineno=853, col_offset=29), [Name('value', Load(), lineno=853, col_offset=34)], [], None, None, lineno=853, col_offset=29)], True, lineno=853, col_offset=8)], [], lineno=828, col_offset=4), FunctionDef('do_alias', arguments([Name('self', Param(), lineno=855, col_offset=17), Name('arg', Param(), lineno=855, col_offset=23)], None, None, []), [Assign([Name('args', Store(), lineno=856, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=856, col_offset=15), 'split', Load(), lineno=856, col_offset=15), [], [], None, None, lineno=856, col_offset=15), lineno=856, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=857, col_offset=11), [Name('args', Load(), lineno=857, col_offset=15)], [], None, None, lineno=857, col_offset=11), [Eq()], [Num(0, lineno=857, col_offset=24)], lineno=857, col_offset=11), [Assign([Name('keys', Store(), lineno=858, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=858, col_offset=19), 'aliases', Load(), lineno=858, col_offset=19), 'keys', Load(), lineno=858, col_offset=19), [], [], None, None, lineno=858, col_offset=19), lineno=858, col_offset=12), Expr(Call(Attribute(Name('keys', Load(), lineno=859, col_offset=12), 'sort', Load(), lineno=859, col_offset=12), [], [], None, None, lineno=859, col_offset=12), lineno=859, col_offset=12), For(Name('alias', Store(), lineno=860, col_offset=16), Name('keys', Load(), lineno=860, col_offset=25), [Print(Attribute(Name('self', Load(), lineno=861, col_offset=24), 'stdout', Load(), lineno=861, col_offset=24), [BinOp(Str('%s = %s', lineno=861, col_offset=37), Mod(), Tuple([Name('alias', Load(), lineno=861, col_offset=50), Subscript(Attribute(Name('self', Load(), lineno=861, col_offset=57), 'aliases', Load(), lineno=861, col_offset=57), Index(Name('alias', Load(), lineno=861, col_offset=70)), Load(), lineno=861, col_offset=57)], Load(), lineno=861, col_offset=50), lineno=861, col_offset=37)], True, lineno=861, col_offset=16)], [], lineno=860, col_offset=12), Return(None, lineno=862, col_offset=12)], [], lineno=857, col_offset=8), If(BoolOp(And(), [Compare(Subscript(Name('args', Load(), lineno=863, col_offset=11), Index(Num(0, lineno=863, col_offset=16)), Load(), lineno=863, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=863, col_offset=22), 'aliases', Load(), lineno=863, col_offset=22)], lineno=863, col_offset=11), Compare(Call(Name('len', Load(), lineno=863, col_offset=39), [Name('args', Load(), lineno=863, col_offset=43)], [], None, None, lineno=863, col_offset=39), [Eq()], [Num(1, lineno=863, col_offset=52)], lineno=863, col_offset=39)], lineno=863, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=864, col_offset=20), 'stdout', Load(), lineno=864, col_offset=20), [BinOp(Str('%s = %s', lineno=864, col_offset=33), Mod(), Tuple([Subscript(Name('args', Load(), lineno=864, col_offset=46), Index(Num(0, lineno=864, col_offset=51)), Load(), lineno=864, col_offset=46), Subscript(Attribute(Name('self', Load(), lineno=864, col_offset=55), 'aliases', Load(), lineno=864, col_offset=55), Index(Subscript(Name('args', Load(), lineno=864, col_offset=68), Index(Num(0, lineno=864, col_offset=73)), Load(), lineno=864, col_offset=68)), Load(), lineno=864, col_offset=55)], Load(), lineno=864, col_offset=46), lineno=864, col_offset=33)], True, lineno=864, col_offset=12)], [Assign([Subscript(Attribute(Name('self', Load(), lineno=866, col_offset=12), 'aliases', Load(), lineno=866, col_offset=12), Index(Subscript(Name('args', Load(), lineno=866, col_offset=25), Index(Num(0, lineno=866, col_offset=30)), Load(), lineno=866, col_offset=25)), Store(), lineno=866, col_offset=12)], Call(Attribute(Str(' ', lineno=866, col_offset=36), 'join', Load(), lineno=866, col_offset=36), [Subscript(Name('args', Load(), lineno=866, col_offset=45), Slice(Num(1, lineno=866, col_offset=50), None, None), Load(), lineno=866, col_offset=45)], [], None, None, lineno=866, col_offset=36), lineno=866, col_offset=12)], lineno=863, col_offset=8)], [], lineno=855, col_offset=4), FunctionDef('do_unalias', arguments([Name('self', Param(), lineno=868, col_offset=19), Name('arg', Param(), lineno=868, col_offset=25)], None, None, []), [Assign([Name('args', Store(), lineno=869, col_offset=8)], Call(Attribute(Name('arg', Load(), lineno=869, col_offset=15), 'split', Load(), lineno=869, col_offset=15), [], [], None, None, lineno=869, col_offset=15), lineno=869, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=870, col_offset=11), [Name('args', Load(), lineno=870, col_offset=15)], [], None, None, lineno=870, col_offset=11), [Eq()], [Num(0, lineno=870, col_offset=24)], lineno=870, col_offset=11), [Return(None, lineno=870, col_offset=27)], [], lineno=870, col_offset=8), If(Compare(Subscript(Name('args', Load(), lineno=871, col_offset=11), Index(Num(0, lineno=871, col_offset=16)), Load(), lineno=871, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=871, col_offset=22), 'aliases', Load(), lineno=871, col_offset=22)], lineno=871, col_offset=11), [Delete([Subscript(Attribute(Name('self', Load(), lineno=872, col_offset=16), 'aliases', Load(), lineno=872, col_offset=16), Index(Subscript(Name('args', Load(), lineno=872, col_offset=29), Index(Num(0, lineno=872, col_offset=34)), Load(), lineno=872, col_offset=29)), Del(), lineno=872, col_offset=16)], lineno=872, col_offset=12)], [], lineno=871, col_offset=8)], [], lineno=868, col_offset=4), Assign([Name('commands_resuming', Store(), lineno=875, col_offset=4)], List([Str('do_continue', lineno=875, col_offset=25), Str('do_step', lineno=875, col_offset=40), Str('do_next', lineno=875, col_offset=51), Str('do_return', lineno=875, col_offset=62), Str('do_quit', lineno=876, col_offset=25), Str('do_jump', lineno=876, col_offset=36)], Load(), lineno=875, col_offset=24), lineno=875, col_offset=4), FunctionDef('print_stack_trace', arguments([Name('self', Param(), lineno=886, col_offset=26)], None, None, []), [TryExcept([For(Name('frame_lineno', Store(), lineno=888, col_offset=16), Attribute(Name('self', Load(), lineno=888, col_offset=32), 'stack', Load(), lineno=888, col_offset=32), [Expr(Call(Attribute(Name('self', Load(), lineno=889, col_offset=16), 'print_stack_entry', Load(), lineno=889, col_offset=16), [Name('frame_lineno', Load(), lineno=889, col_offset=39)], [], None, None, lineno=889, col_offset=16), lineno=889, col_offset=16)], [], lineno=888, col_offset=12)], [ExceptHandler(Name('KeyboardInterrupt', Load(), lineno=890, col_offset=15), None, [Pass( lineno=891, col_offset=12)], lineno=890, col_offset=8)], [], lineno=887, col_offset=8)], [], lineno=886, col_offset=4), FunctionDef('print_stack_entry', arguments([Name('self', Param(), lineno=893, col_offset=26), Name('frame_lineno', Param(), lineno=893, col_offset=32), Name('prompt_prefix', Param(), lineno=893, col_offset=46)], None, None, [Name('line_prefix', Load(), lineno=893, col_offset=60)]), [Assign([Tuple([Name('frame', Store(), lineno=894, col_offset=8), Name('lineno', Store(), lineno=894, col_offset=15)], Store(), lineno=894, col_offset=8)], Name('frame_lineno', Load(), lineno=894, col_offset=24), lineno=894, col_offset=8), If(Compare(Name('frame', Load(), lineno=895, col_offset=11), [Is()], [Attribute(Name('self', Load(), lineno=895, col_offset=20), 'curframe', Load(), lineno=895, col_offset=20)], lineno=895, col_offset=11), [Print(Attribute(Name('self', Load(), lineno=896, col_offset=20), 'stdout', Load(), lineno=896, col_offset=20), [Str('>', lineno=896, col_offset=33)], False, lineno=896, col_offset=12)], [Print(Attribute(Name('self', Load(), lineno=898, col_offset=20), 'stdout', Load(), lineno=898, col_offset=20), [Str(' ', lineno=898, col_offset=33)], False, lineno=898, col_offset=12)], lineno=895, col_offset=8), Print(Attribute(Name('self', Load(), lineno=899, col_offset=16), 'stdout', Load(), lineno=899, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=899, col_offset=29), 'format_stack_entry', Load(), lineno=899, col_offset=29), [Name('frame_lineno', Load(), lineno=899, col_offset=53), Name('prompt_prefix', Load(), lineno=900, col_offset=53)], [], None, None, lineno=899, col_offset=29)], True, lineno=899, col_offset=8)], [], lineno=893, col_offset=4), FunctionDef('help_help', arguments([Name('self', Param(), lineno=905, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=906, col_offset=8), 'help_h', Load(), lineno=906, col_offset=8), [], [], None, None, lineno=906, col_offset=8), lineno=906, col_offset=8)], [], lineno=905, col_offset=4), FunctionDef('help_h', arguments([Name('self', Param(), lineno=908, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=909, col_offset=16), 'stdout', Load(), lineno=909, col_offset=16), [Str('h(elp)\nWithout argument, print the list of available commands.\nWith a command name as argument, print help about that command\n"help pdb" pipes the full documentation file to the $PAGER\n"help exec" gives help on the ! command', lineno=913, col_offset=-1)], True, lineno=909, col_offset=8)], [], lineno=908, col_offset=4), FunctionDef('help_where', arguments([Name('self', Param(), lineno=915, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=916, col_offset=8), 'help_w', Load(), lineno=916, col_offset=8), [], [], None, None, lineno=916, col_offset=8), lineno=916, col_offset=8)], [], lineno=915, col_offset=4), FunctionDef('help_w', arguments([Name('self', Param(), lineno=918, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=919, col_offset=16), 'stdout', Load(), lineno=919, col_offset=16), [Str('w(here)\nPrint a stack trace, with the most recent frame at the bottom.\nAn arrow indicates the "current frame", which determines the\ncontext of most commands.  \'bt\' is an alias for this command.', lineno=922, col_offset=-1)], True, lineno=919, col_offset=8)], [], lineno=918, col_offset=4), Assign([Name('help_bt', Store(), lineno=924, col_offset=4)], Name('help_w', Load(), lineno=924, col_offset=14), lineno=924, col_offset=4), FunctionDef('help_down', arguments([Name('self', Param(), lineno=926, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=927, col_offset=8), 'help_d', Load(), lineno=927, col_offset=8), [], [], None, None, lineno=927, col_offset=8), lineno=927, col_offset=8)], [], lineno=926, col_offset=4), FunctionDef('help_d', arguments([Name('self', Param(), lineno=929, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=930, col_offset=16), 'stdout', Load(), lineno=930, col_offset=16), [Str('d(own)\nMove the current frame one level down in the stack trace\n(to a newer frame).', lineno=932, col_offset=-1)], True, lineno=930, col_offset=8)], [], lineno=929, col_offset=4), FunctionDef('help_up', arguments([Name('self', Param(), lineno=934, col_offset=16)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=935, col_offset=8), 'help_u', Load(), lineno=935, col_offset=8), [], [], None, None, lineno=935, col_offset=8), lineno=935, col_offset=8)], [], lineno=934, col_offset=4), FunctionDef('help_u', arguments([Name('self', Param(), lineno=937, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=938, col_offset=16), 'stdout', Load(), lineno=938, col_offset=16), [Str('u(p)\nMove the current frame one level up in the stack trace\n(to an older frame).', lineno=940, col_offset=-1)], True, lineno=938, col_offset=8)], [], lineno=937, col_offset=4), FunctionDef('help_break', arguments([Name('self', Param(), lineno=942, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=943, col_offset=8), 'help_b', Load(), lineno=943, col_offset=8), [], [], None, None, lineno=943, col_offset=8), lineno=943, col_offset=8)], [], lineno=942, col_offset=4), FunctionDef('help_b', arguments([Name('self', Param(), lineno=945, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=946, col_offset=16), 'stdout', Load(), lineno=946, col_offset=16), [Str("b(reak) ([file:]lineno | function) [, condition]\nWith a line number argument, set a break there in the current\nfile.  With a function name, set a break at first executable line\nof that function.  Without argument, list all breaks.  If a second\nargument is present, it is a string specifying an expression\nwhich must evaluate to true before the breakpoint is honored.\n\nThe line number may be prefixed with a filename and a colon,\nto specify a breakpoint in another file (probably one that\nhasn't been loaded yet).  The file is searched for on sys.path;\nthe .py suffix may be omitted.", lineno=956, col_offset=-1)], True, lineno=946, col_offset=8)], [], lineno=945, col_offset=4), FunctionDef('help_clear', arguments([Name('self', Param(), lineno=958, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=959, col_offset=8), 'help_cl', Load(), lineno=959, col_offset=8), [], [], None, None, lineno=959, col_offset=8), lineno=959, col_offset=8)], [], lineno=958, col_offset=4), FunctionDef('help_cl', arguments([Name('self', Param(), lineno=961, col_offset=16)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=962, col_offset=16), 'stdout', Load(), lineno=962, col_offset=16), [Str('cl(ear) filename:lineno', lineno=962, col_offset=29)], True, lineno=962, col_offset=8), Print(Attribute(Name('self', Load(), lineno=963, col_offset=16), 'stdout', Load(), lineno=963, col_offset=16), [Str('cl(ear) [bpnumber [bpnumber...]]\nWith a space separated list of breakpoint numbers, clear\nthose breakpoints.  Without argument, clear all breaks (but\nfirst ask confirmation).  With a filename:lineno argument,\nclear all breaks at that line in that file.\n\nNote that the argument is different from previous versions of\nthe debugger (in python distributions 1.5.1 and before) where\na linenumber was used instead of either filename:lineno or\nbreakpoint numbers.', lineno=972, col_offset=-1)], True, lineno=963, col_offset=8)], [], lineno=961, col_offset=4), FunctionDef('help_tbreak', arguments([Name('self', Param(), lineno=974, col_offset=20)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=975, col_offset=16), 'stdout', Load(), lineno=975, col_offset=16), [Str('tbreak  same arguments as break, but breakpoint\nis removed when first hit.', lineno=976, col_offset=-1)], True, lineno=975, col_offset=8)], [], lineno=974, col_offset=4), FunctionDef('help_enable', arguments([Name('self', Param(), lineno=978, col_offset=20)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=979, col_offset=16), 'stdout', Load(), lineno=979, col_offset=16), [Str('enable bpnumber [bpnumber ...]\nEnables the breakpoints given as a space separated list of\nbp numbers.', lineno=981, col_offset=-1)], True, lineno=979, col_offset=8)], [], lineno=978, col_offset=4), FunctionDef('help_disable', arguments([Name('self', Param(), lineno=983, col_offset=21)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=984, col_offset=16), 'stdout', Load(), lineno=984, col_offset=16), [Str('disable bpnumber [bpnumber ...]\nDisables the breakpoints given as a space separated list of\nbp numbers.', lineno=986, col_offset=-1)], True, lineno=984, col_offset=8)], [], lineno=983, col_offset=4), FunctionDef('help_ignore', arguments([Name('self', Param(), lineno=988, col_offset=20)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=989, col_offset=16), 'stdout', Load(), lineno=989, col_offset=16), [Str('ignore bpnumber count\nSets the ignore count for the given breakpoint number.  A breakpoint\nbecomes active when the ignore count is zero.  When non-zero, the\ncount is decremented each time the breakpoint is reached and the\nbreakpoint is not disabled and any associated condition evaluates\nto true.', lineno=994, col_offset=-1)], True, lineno=989, col_offset=8)], [], lineno=988, col_offset=4), FunctionDef('help_condition', arguments([Name('self', Param(), lineno=996, col_offset=23)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=997, col_offset=16), 'stdout', Load(), lineno=997, col_offset=16), [Str('condition bpnumber str_condition\nstr_condition is a string specifying an expression which\nmust evaluate to true before the breakpoint is honored.\nIf str_condition is absent, any existing condition is removed;\ni.e., the breakpoint is made unconditional.', lineno=1001, col_offset=-1)], True, lineno=997, col_offset=8)], [], lineno=996, col_offset=4), FunctionDef('help_step', arguments([Name('self', Param(), lineno=1003, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1004, col_offset=8), 'help_s', Load(), lineno=1004, col_offset=8), [], [], None, None, lineno=1004, col_offset=8), lineno=1004, col_offset=8)], [], lineno=1003, col_offset=4), FunctionDef('help_s', arguments([Name('self', Param(), lineno=1006, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1007, col_offset=16), 'stdout', Load(), lineno=1007, col_offset=16), [Str('s(tep)\nExecute the current line, stop at the first possible occasion\n(either in a function that is called or in the current function).', lineno=1009, col_offset=-1)], True, lineno=1007, col_offset=8)], [], lineno=1006, col_offset=4), FunctionDef('help_until', arguments([Name('self', Param(), lineno=1011, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1012, col_offset=8), 'help_unt', Load(), lineno=1012, col_offset=8), [], [], None, None, lineno=1012, col_offset=8), lineno=1012, col_offset=8)], [], lineno=1011, col_offset=4), FunctionDef('help_unt', arguments([Name('self', Param(), lineno=1014, col_offset=17)], None, None, []), [Print(None, [Str('unt(il)\nContinue execution until the line with a number greater than the current\none is reached or until the current frame returns', lineno=1017, col_offset=-1)], True, lineno=1015, col_offset=8)], [], lineno=1014, col_offset=4), FunctionDef('help_next', arguments([Name('self', Param(), lineno=1019, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1020, col_offset=8), 'help_n', Load(), lineno=1020, col_offset=8), [], [], None, None, lineno=1020, col_offset=8), lineno=1020, col_offset=8)], [], lineno=1019, col_offset=4), FunctionDef('help_n', arguments([Name('self', Param(), lineno=1022, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1023, col_offset=16), 'stdout', Load(), lineno=1023, col_offset=16), [Str('n(ext)\nContinue execution until the next line in the current function\nis reached or it returns.', lineno=1025, col_offset=-1)], True, lineno=1023, col_offset=8)], [], lineno=1022, col_offset=4), FunctionDef('help_return', arguments([Name('self', Param(), lineno=1027, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1028, col_offset=8), 'help_r', Load(), lineno=1028, col_offset=8), [], [], None, None, lineno=1028, col_offset=8), lineno=1028, col_offset=8)], [], lineno=1027, col_offset=4), FunctionDef('help_r', arguments([Name('self', Param(), lineno=1030, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1031, col_offset=16), 'stdout', Load(), lineno=1031, col_offset=16), [Str('r(eturn)\nContinue execution until the current function returns.', lineno=1032, col_offset=-1)], True, lineno=1031, col_offset=8)], [], lineno=1030, col_offset=4), FunctionDef('help_continue', arguments([Name('self', Param(), lineno=1034, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1035, col_offset=8), 'help_c', Load(), lineno=1035, col_offset=8), [], [], None, None, lineno=1035, col_offset=8), lineno=1035, col_offset=8)], [], lineno=1034, col_offset=4), FunctionDef('help_cont', arguments([Name('self', Param(), lineno=1037, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1038, col_offset=8), 'help_c', Load(), lineno=1038, col_offset=8), [], [], None, None, lineno=1038, col_offset=8), lineno=1038, col_offset=8)], [], lineno=1037, col_offset=4), FunctionDef('help_c', arguments([Name('self', Param(), lineno=1040, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1041, col_offset=16), 'stdout', Load(), lineno=1041, col_offset=16), [Str('c(ont(inue))\nContinue execution, only stop when a breakpoint is encountered.', lineno=1042, col_offset=-1)], True, lineno=1041, col_offset=8)], [], lineno=1040, col_offset=4), FunctionDef('help_jump', arguments([Name('self', Param(), lineno=1044, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1045, col_offset=8), 'help_j', Load(), lineno=1045, col_offset=8), [], [], None, None, lineno=1045, col_offset=8), lineno=1045, col_offset=8)], [], lineno=1044, col_offset=4), FunctionDef('help_j', arguments([Name('self', Param(), lineno=1047, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1048, col_offset=16), 'stdout', Load(), lineno=1048, col_offset=16), [Str('j(ump) lineno\nSet the next line that will be executed.', lineno=1049, col_offset=-1)], True, lineno=1048, col_offset=8)], [], lineno=1047, col_offset=4), FunctionDef('help_debug', arguments([Name('self', Param(), lineno=1051, col_offset=19)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1052, col_offset=16), 'stdout', Load(), lineno=1052, col_offset=16), [Str('debug code\nEnter a recursive debugger that steps through the code argument\n(which is an arbitrary expression or statement to be executed\nin the current environment).', lineno=1055, col_offset=-1)], True, lineno=1052, col_offset=8)], [], lineno=1051, col_offset=4), FunctionDef('help_list', arguments([Name('self', Param(), lineno=1057, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1058, col_offset=8), 'help_l', Load(), lineno=1058, col_offset=8), [], [], None, None, lineno=1058, col_offset=8), lineno=1058, col_offset=8)], [], lineno=1057, col_offset=4), FunctionDef('help_l', arguments([Name('self', Param(), lineno=1060, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1061, col_offset=16), 'stdout', Load(), lineno=1061, col_offset=16), [Str('l(ist) [first [,last]]\nList source code for the current file.\nWithout arguments, list 11 lines around the current line\nor continue the previous listing.\nWith one argument, list 11 lines starting at that line.\nWith two arguments, list the given range;\nif the second argument is less than the first, it is a count.', lineno=1067, col_offset=-1)], True, lineno=1061, col_offset=8)], [], lineno=1060, col_offset=4), FunctionDef('help_args', arguments([Name('self', Param(), lineno=1069, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1070, col_offset=8), 'help_a', Load(), lineno=1070, col_offset=8), [], [], None, None, lineno=1070, col_offset=8), lineno=1070, col_offset=8)], [], lineno=1069, col_offset=4), FunctionDef('help_a', arguments([Name('self', Param(), lineno=1072, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1073, col_offset=16), 'stdout', Load(), lineno=1073, col_offset=16), [Str('a(rgs)\nPrint the arguments of the current function.', lineno=1074, col_offset=-1)], True, lineno=1073, col_offset=8)], [], lineno=1072, col_offset=4), FunctionDef('help_p', arguments([Name('self', Param(), lineno=1076, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1077, col_offset=16), 'stdout', Load(), lineno=1077, col_offset=16), [Str('p expression\nPrint the value of the expression.', lineno=1078, col_offset=-1)], True, lineno=1077, col_offset=8)], [], lineno=1076, col_offset=4), FunctionDef('help_pp', arguments([Name('self', Param(), lineno=1080, col_offset=16)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1081, col_offset=16), 'stdout', Load(), lineno=1081, col_offset=16), [Str('pp expression\nPretty-print the value of the expression.', lineno=1082, col_offset=-1)], True, lineno=1081, col_offset=8)], [], lineno=1080, col_offset=4), FunctionDef('help_exec', arguments([Name('self', Param(), lineno=1084, col_offset=18)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1085, col_offset=16), 'stdout', Load(), lineno=1085, col_offset=16), [Str("(!) statement\nExecute the (one-line) statement in the context of\nthe current stack frame.\nThe exclamation point can be omitted unless the first word\nof the statement resembles a debugger command.\nTo assign to a global variable you must always prefix the\ncommand with a 'global' command, e.g.:\n(Pdb) global list_options; list_options = ['-l']\n(Pdb)", lineno=1093, col_offset=-1)], True, lineno=1085, col_offset=8)], [], lineno=1084, col_offset=4), FunctionDef('help_run', arguments([Name('self', Param(), lineno=1095, col_offset=17)], None, None, []), [Print(None, [Str('run [args...]\nRestart the debugged python program. If a string is supplied, it is\nsplitted with "shlex" and the result is used as the new sys.argv.\nHistory, breakpoints, actions and debugger options are preserved.\n"restart" is an alias for "run".', lineno=1100, col_offset=-1)], True, lineno=1096, col_offset=8)], [], lineno=1095, col_offset=4), Assign([Name('help_restart', Store(), lineno=1102, col_offset=4)], Name('help_run', Load(), lineno=1102, col_offset=19), lineno=1102, col_offset=4), FunctionDef('help_quit', arguments([Name('self', Param(), lineno=1104, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1105, col_offset=8), 'help_q', Load(), lineno=1105, col_offset=8), [], [], None, None, lineno=1105, col_offset=8), lineno=1105, col_offset=8)], [], lineno=1104, col_offset=4), FunctionDef('help_q', arguments([Name('self', Param(), lineno=1107, col_offset=15)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1108, col_offset=16), 'stdout', Load(), lineno=1108, col_offset=16), [Str('q(uit) or exit - Quit from the debugger.\nThe program being executed is aborted.', lineno=1109, col_offset=-1)], True, lineno=1108, col_offset=8)], [], lineno=1107, col_offset=4), Assign([Name('help_exit', Store(), lineno=1111, col_offset=4)], Name('help_q', Load(), lineno=1111, col_offset=16), lineno=1111, col_offset=4), FunctionDef('help_whatis', arguments([Name('self', Param(), lineno=1113, col_offset=20)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1114, col_offset=16), 'stdout', Load(), lineno=1114, col_offset=16), [Str('whatis arg\nPrints the type of the argument.', lineno=1115, col_offset=-1)], True, lineno=1114, col_offset=8)], [], lineno=1113, col_offset=4), FunctionDef('help_EOF', arguments([Name('self', Param(), lineno=1117, col_offset=17)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1118, col_offset=16), 'stdout', Load(), lineno=1118, col_offset=16), [Str('EOF\nHandles the receipt of EOF as a command.', lineno=1119, col_offset=-1)], True, lineno=1118, col_offset=8)], [], lineno=1117, col_offset=4), FunctionDef('help_alias', arguments([Name('self', Param(), lineno=1121, col_offset=19)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1122, col_offset=16), 'stdout', Load(), lineno=1122, col_offset=16), [Str('alias [name [command [parameter parameter ...]]]\nCreates an alias called \'name\' the executes \'command\'.  The command\nmust *not* be enclosed in quotes.  Replaceable parameters are\nindicated by %1, %2, and so on, while %* is replaced by all the\nparameters.  If no command is given, the current alias for name\nis shown. If no name is given, all aliases are listed.\n\nAliases may be nested and can contain anything that can be\nlegally typed at the pdb prompt.  Note!  You *can* override\ninternal pdb commands with aliases!  Those internal commands\nare then hidden until the alias is removed.  Aliasing is recursively\napplied to the first word of the command line; all other words\nin the line are left alone.\n\nSome useful aliases (especially when placed in the .pdbrc file) are:\n\n#Print instance variables (usage "pi classInst")\nalias pi for k in %1.__dict__.keys(): print "%1.",k,"=",%1.__dict__[k]\n\n#Print instance variables in self\nalias ps pi self\n', lineno=1143, col_offset=-1)], True, lineno=1122, col_offset=8)], [], lineno=1121, col_offset=4), FunctionDef('help_unalias', arguments([Name('self', Param(), lineno=1145, col_offset=21)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1146, col_offset=16), 'stdout', Load(), lineno=1146, col_offset=16), [Str('unalias name\nDeletes the specified alias.', lineno=1147, col_offset=-1)], True, lineno=1146, col_offset=8)], [], lineno=1145, col_offset=4), FunctionDef('help_commands', arguments([Name('self', Param(), lineno=1149, col_offset=22)], None, None, []), [Print(Attribute(Name('self', Load(), lineno=1150, col_offset=16), 'stdout', Load(), lineno=1150, col_offset=16), [Str("commands [bpnumber]\n(com) ...\n(com) end\n(Pdb)\n\nSpecify a list of commands for breakpoint number bpnumber.  The\ncommands themselves appear on the following lines.  Type a line\ncontaining just 'end' to terminate the commands.\n\nTo remove all commands from a breakpoint, type commands and\nfollow it immediately with  end; that is, give no commands.\n\nWith no bpnumber argument, commands refers to the last\nbreakpoint set.\n\nYou can use breakpoint commands to start your program up again.\nSimply use the continue command, or step, or any other\ncommand that resumes execution.\n\nSpecifying any command resuming execution (currently continue,\nstep, next, return, jump, quit and their abbreviations) terminates\nthe command list (as if that command was immediately followed by end).\nThis is because any time you resume execution\n(even with a simple next or step), you may encounter\nanother breakpoint--which could have its own command list, leading to\nambiguities about which list to execute.\n\n   If you use the 'silent' command in the command list, the\nusual message about stopping at a breakpoint is not printed.  This may\nbe desirable for breakpoints that are to print a specific message and\nthen continue.  If none of the other commands print anything, you\nsee no sign that the breakpoint was reached.\n", lineno=1182, col_offset=-1)], True, lineno=1150, col_offset=8)], [], lineno=1149, col_offset=4), FunctionDef('help_pdb', arguments([Name('self', Param(), lineno=1184, col_offset=17)], None, None, []), [Expr(Call(Name('help', Load(), lineno=1185, col_offset=8), [], [], None, None, lineno=1185, col_offset=8), lineno=1185, col_offset=8)], [], lineno=1184, col_offset=4), FunctionDef('lookupmodule', arguments([Name('self', Param(), lineno=1187, col_offset=21), Name('filename', Param(), lineno=1187, col_offset=27)], None, None, []), [Expr(Str('Helper function for break/clear parsing -- may be overridden.\n\n        lookupmodule() translates (possibly incomplete) file or module name\n        into an absolute file name.\n        ', lineno=1192, col_offset=-1), lineno=1192, col_offset=-1), If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=1193, col_offset=11), 'path', Load(), lineno=1193, col_offset=11), 'isabs', Load(), lineno=1193, col_offset=11), [Name('filename', Load(), lineno=1193, col_offset=25)], [], None, None, lineno=1193, col_offset=11), Call(Attribute(Attribute(Name('os', Load(), lineno=1193, col_offset=40), 'path', Load(), lineno=1193, col_offset=40), 'exists', Load(), lineno=1193, col_offset=40), [Name('filename', Load(), lineno=1193, col_offset=55)], [], None, None, lineno=1193, col_offset=40)], lineno=1193, col_offset=11), [Return(Name('filename', Load(), lineno=1194, col_offset=19), lineno=1194, col_offset=12)], [], lineno=1193, col_offset=8), Assign([Name('f', Store(), lineno=1195, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1195, col_offset=12), 'path', Load(), lineno=1195, col_offset=12), 'join', Load(), lineno=1195, col_offset=12), [Subscript(Attribute(Name('sys', Load(), lineno=1195, col_offset=25), 'path', Load(), lineno=1195, col_offset=25), Index(Num(0, lineno=1195, col_offset=34)), Load(), lineno=1195, col_offset=25), Name('filename', Load(), lineno=1195, col_offset=38)], [], None, None, lineno=1195, col_offset=12), lineno=1195, col_offset=8), If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=1196, col_offset=12), 'path', Load(), lineno=1196, col_offset=12), 'exists', Load(), lineno=1196, col_offset=12), [Name('f', Load(), lineno=1196, col_offset=27)], [], None, None, lineno=1196, col_offset=12), Compare(Call(Attribute(Name('self', Load(), lineno=1196, col_offset=34), 'canonic', Load(), lineno=1196, col_offset=34), [Name('f', Load(), lineno=1196, col_offset=47)], [], None, None, lineno=1196, col_offset=34), [Eq()], [Attribute(Name('self', Load(), lineno=1196, col_offset=53), 'mainpyfile', Load(), lineno=1196, col_offset=53)], lineno=1196, col_offset=34)], lineno=1196, col_offset=12), [Return(Name('f', Load(), lineno=1197, col_offset=19), lineno=1197, col_offset=12)], [], lineno=1196, col_offset=8), Assign([Tuple([Name('root', Store(), lineno=1198, col_offset=8), Name('ext', Store(), lineno=1198, col_offset=14)], Store(), lineno=1198, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1198, col_offset=20), 'path', Load(), lineno=1198, col_offset=20), 'splitext', Load(), lineno=1198, col_offset=20), [Name('filename', Load(), lineno=1198, col_offset=37)], [], None, None, lineno=1198, col_offset=20), lineno=1198, col_offset=8), If(Compare(Name('ext', Load(), lineno=1199, col_offset=11), [Eq()], [Str('', lineno=1199, col_offset=18)], lineno=1199, col_offset=11), [Assign([Name('filename', Store(), lineno=1200, col_offset=12)], BinOp(Name('filename', Load(), lineno=1200, col_offset=23), Add(), Str('.py', lineno=1200, col_offset=34), lineno=1200, col_offset=23), lineno=1200, col_offset=12)], [], lineno=1199, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1201, col_offset=11), 'path', Load(), lineno=1201, col_offset=11), 'isabs', Load(), lineno=1201, col_offset=11), [Name('filename', Load(), lineno=1201, col_offset=25)], [], None, None, lineno=1201, col_offset=11), [Return(Name('filename', Load(), lineno=1202, col_offset=19), lineno=1202, col_offset=12)], [], lineno=1201, col_offset=8), For(Name('dirname', Store(), lineno=1203, col_offset=12), Attribute(Name('sys', Load(), lineno=1203, col_offset=23), 'path', Load(), lineno=1203, col_offset=23), [While(Call(Attribute(Attribute(Name('os', Load(), lineno=1204, col_offset=18), 'path', Load(), lineno=1204, col_offset=18), 'islink', Load(), lineno=1204, col_offset=18), [Name('dirname', Load(), lineno=1204, col_offset=33)], [], None, None, lineno=1204, col_offset=18), [Assign([Name('dirname', Store(), lineno=1205, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=1205, col_offset=26), 'readlink', Load(), lineno=1205, col_offset=26), [Name('dirname', Load(), lineno=1205, col_offset=38)], [], None, None, lineno=1205, col_offset=26), lineno=1205, col_offset=16)], [], lineno=1204, col_offset=12), Assign([Name('fullname', Store(), lineno=1206, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=1206, col_offset=23), 'path', Load(), lineno=1206, col_offset=23), 'join', Load(), lineno=1206, col_offset=23), [Name('dirname', Load(), lineno=1206, col_offset=36), Name('filename', Load(), lineno=1206, col_offset=45)], [], None, None, lineno=1206, col_offset=23), lineno=1206, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1207, col_offset=15), 'path', Load(), lineno=1207, col_offset=15), 'exists', Load(), lineno=1207, col_offset=15), [Name('fullname', Load(), lineno=1207, col_offset=30)], [], None, None, lineno=1207, col_offset=15), [Return(Name('fullname', Load(), lineno=1208, col_offset=23), lineno=1208, col_offset=16)], [], lineno=1207, col_offset=12)], [], lineno=1203, col_offset=8), Return(Name('None', Load(), lineno=1209, col_offset=15), lineno=1209, col_offset=8)], [], lineno=1187, col_offset=4), FunctionDef('_runscript', arguments([Name('self', Param(), lineno=1211, col_offset=19), Name('filename', Param(), lineno=1211, col_offset=25)], None, None, []), [Import([alias('__main__', None)], lineno=1217, col_offset=8), Expr(Call(Attribute(Attribute(Name('__main__', Load(), lineno=1218, col_offset=8), '__dict__', Load(), lineno=1218, col_offset=8), 'clear', Load(), lineno=1218, col_offset=8), [], [], None, None, lineno=1218, col_offset=8), lineno=1218, col_offset=8), Expr(Call(Attribute(Attribute(Name('__main__', Load(), lineno=1219, col_offset=8), '__dict__', Load(), lineno=1219, col_offset=8), 'update', Load(), lineno=1219, col_offset=8), [Dict([Str('__name__', lineno=1219, col_offset=34), Str('__file__', lineno=1220, col_offset=34), Str('__builtins__', lineno=1221, col_offset=34)], [Str('__main__', lineno=1219, col_offset=50), Name('filename', Load(), lineno=1220, col_offset=50), Name('__builtins__', Load(), lineno=1221, col_offset=50)], lineno=1219, col_offset=33)], [], None, None, lineno=1219, col_offset=8), lineno=1219, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1229, col_offset=8), '_wait_for_mainpyfile', Store(), lineno=1229, col_offset=8)], Num(1, lineno=1229, col_offset=36), lineno=1229, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1230, col_offset=8), 'mainpyfile', Store(), lineno=1230, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1230, col_offset=26), 'canonic', Load(), lineno=1230, col_offset=26), [Name('filename', Load(), lineno=1230, col_offset=39)], [], None, None, lineno=1230, col_offset=26), lineno=1230, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1231, col_offset=8), '_user_requested_quit', Store(), lineno=1231, col_offset=8)], Num(0, lineno=1231, col_offset=36), lineno=1231, col_offset=8), Assign([Name('statement', Store(), lineno=1232, col_offset=8)], BinOp(Str('execfile( "%s")', lineno=1232, col_offset=20), Mod(), Name('filename', Load(), lineno=1232, col_offset=40), lineno=1232, col_offset=20), lineno=1232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1233, col_offset=8), 'run', Load(), lineno=1233, col_offset=8), [Name('statement', Load(), lineno=1233, col_offset=17)], [], None, None, lineno=1233, col_offset=8), lineno=1233, col_offset=8)], [], lineno=1211, col_offset=4)], [], lineno=59, col_offset=0), FunctionDef('run', arguments([Name('statement', Param(), lineno=1237, col_offset=8), Name('globals', Param(), lineno=1237, col_offset=19), Name('locals', Param(), lineno=1237, col_offset=33)], None, None, [Name('None', Load(), lineno=1237, col_offset=27), Name('None', Load(), lineno=1237, col_offset=40)]), [Expr(Call(Attribute(Call(Name('Pdb', Load(), lineno=1238, col_offset=4), [], [], None, None, lineno=1238, col_offset=4), 'run', Load(), lineno=1238, col_offset=4), [Name('statement', Load(), lineno=1238, col_offset=14), Name('globals', Load(), lineno=1238, col_offset=25), Name('locals', Load(), lineno=1238, col_offset=34)], [], None, None, lineno=1238, col_offset=4), lineno=1238, col_offset=4)], [], lineno=1237, col_offset=0), FunctionDef('runeval', arguments([Name('expression', Param(), lineno=1240, col_offset=12), Name('globals', Param(), lineno=1240, col_offset=24), Name('locals', Param(), lineno=1240, col_offset=38)], None, None, [Name('None', Load(), lineno=1240, col_offset=32), Name('None', Load(), lineno=1240, col_offset=45)]), [Return(Call(Attribute(Call(Name('Pdb', Load(), lineno=1241, col_offset=11), [], [], None, None, lineno=1241, col_offset=11), 'runeval', Load(), lineno=1241, col_offset=11), [Name('expression', Load(), lineno=1241, col_offset=25), Name('globals', Load(), lineno=1241, col_offset=37), Name('locals', Load(), lineno=1241, col_offset=46)], [], None, None, lineno=1241, col_offset=11), lineno=1241, col_offset=4)], [], lineno=1240, col_offset=0), FunctionDef('runctx', arguments([Name('statement', Param(), lineno=1243, col_offset=11), Name('globals', Param(), lineno=1243, col_offset=22), Name('locals', Param(), lineno=1243, col_offset=31)], None, None, []), [Expr(Call(Name('run', Load(), lineno=1245, col_offset=4), [Name('statement', Load(), lineno=1245, col_offset=8), Name('globals', Load(), lineno=1245, col_offset=19), Name('locals', Load(), lineno=1245, col_offset=28)], [], None, None, lineno=1245, col_offset=4), lineno=1245, col_offset=4)], [], lineno=1243, col_offset=0), FunctionDef('runcall', arguments([], 'args', 'kwds', []), [Return(Call(Attribute(Call(Name('Pdb', Load(), lineno=1248, col_offset=11), [], [], None, None, lineno=1248, col_offset=11), 'runcall', Load(), lineno=1248, col_offset=11), [], [], Name('args', Load(), lineno=1248, col_offset=26), Name('kwds', Load(), lineno=1248, col_offset=34), lineno=1248, col_offset=11), lineno=1248, col_offset=4)], [], lineno=1247, col_offset=0), FunctionDef('set_trace', arguments([], None, None, []), [Expr(Call(Attribute(Call(Name('Pdb', Load(), lineno=1251, col_offset=4), [], [], None, None, lineno=1251, col_offset=4), 'set_trace', Load(), lineno=1251, col_offset=4), [Attribute(Call(Attribute(Name('sys', Load(), lineno=1251, col_offset=20), '_getframe', Load(), lineno=1251, col_offset=20), [], [], None, None, lineno=1251, col_offset=20), 'f_back', Load(), lineno=1251, col_offset=20)], [], None, None, lineno=1251, col_offset=4), lineno=1251, col_offset=4)], [], lineno=1250, col_offset=0), FunctionDef('post_mortem', arguments([Name('t', Param(), lineno=1255, col_offset=16)], None, None, [Name('None', Load(), lineno=1255, col_offset=18)]), [If(Compare(Name('t', Load(), lineno=1257, col_offset=7), [Is()], [Name('None', Load(), lineno=1257, col_offset=12)], lineno=1257, col_offset=7), [Assign([Name('t', Store(), lineno=1260, col_offset=8)], Subscript(Call(Attribute(Name('sys', Load(), lineno=1260, col_offset=12), 'exc_info', Load(), lineno=1260, col_offset=12), [], [], None, None, lineno=1260, col_offset=12), Index(Num(2, lineno=1260, col_offset=27)), Load(), lineno=1260, col_offset=12), lineno=1260, col_offset=8), If(Compare(Name('t', Load(), lineno=1261, col_offset=11), [Is()], [Name('None', Load(), lineno=1261, col_offset=16)], lineno=1261, col_offset=11), [Raise(Call(Name('ValueError', Load(), lineno=1262, col_offset=18), [Str('A valid traceback must be passed if no exception is being handled', lineno=1262, col_offset=29)], [], None, None, lineno=1262, col_offset=18), None, None, lineno=1262, col_offset=12)], [], lineno=1261, col_offset=8)], [], lineno=1257, col_offset=4), Assign([Name('p', Store(), lineno=1265, col_offset=4)], Call(Name('Pdb', Load(), lineno=1265, col_offset=8), [], [], None, None, lineno=1265, col_offset=8), lineno=1265, col_offset=4), Expr(Call(Attribute(Name('p', Load(), lineno=1266, col_offset=4), 'reset', Load(), lineno=1266, col_offset=4), [], [], None, None, lineno=1266, col_offset=4), lineno=1266, col_offset=4), Expr(Call(Attribute(Name('p', Load(), lineno=1267, col_offset=4), 'interaction', Load(), lineno=1267, col_offset=4), [Name('None', Load(), lineno=1267, col_offset=18), Name('t', Load(), lineno=1267, col_offset=24)], [], None, None, lineno=1267, col_offset=4), lineno=1267, col_offset=4)], [], lineno=1255, col_offset=0), FunctionDef('pm', arguments([], None, None, []), [Expr(Call(Name('post_mortem', Load(), lineno=1270, col_offset=4), [Attribute(Name('sys', Load(), lineno=1270, col_offset=16), 'last_traceback', Load(), lineno=1270, col_offset=16)], [], None, None, lineno=1270, col_offset=4), lineno=1270, col_offset=4)], [], lineno=1269, col_offset=0), Assign([Name('TESTCMD', Store(), lineno=1275, col_offset=0)], Str('import x; x.main()', lineno=1275, col_offset=10), lineno=1275, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Expr(Call(Name('run', Load(), lineno=1278, col_offset=4), [Name('TESTCMD', Load(), lineno=1278, col_offset=8)], [], None, None, lineno=1278, col_offset=4), lineno=1278, col_offset=4)], [], lineno=1277, col_offset=0), FunctionDef('help', arguments([], None, None, []), [For(Name('dirname', Store(), lineno=1282, col_offset=8), Attribute(Name('sys', Load(), lineno=1282, col_offset=19), 'path', Load(), lineno=1282, col_offset=19), [Assign([Name('fullname', Store(), lineno=1283, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1283, col_offset=19), 'path', Load(), lineno=1283, col_offset=19), 'join', Load(), lineno=1283, col_offset=19), [Name('dirname', Load(), lineno=1283, col_offset=32), Str('pdb.doc', lineno=1283, col_offset=41)], [], None, None, lineno=1283, col_offset=19), lineno=1283, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1284, col_offset=11), 'path', Load(), lineno=1284, col_offset=11), 'exists', Load(), lineno=1284, col_offset=11), [Name('fullname', Load(), lineno=1284, col_offset=26)], [], None, None, lineno=1284, col_offset=11), [Assign([Name('sts', Store(), lineno=1285, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=1285, col_offset=18), 'system', Load(), lineno=1285, col_offset=18), [BinOp(Str('${PAGER-more} ', lineno=1285, col_offset=28), Add(), Name('fullname', Load(), lineno=1285, col_offset=45), lineno=1285, col_offset=28)], [], None, None, lineno=1285, col_offset=18), lineno=1285, col_offset=12), If(Name('sts', Load(), lineno=1286, col_offset=15), [Print(None, [Str('*** Pager exit status:', lineno=1286, col_offset=26), Name('sts', Load(), lineno=1286, col_offset=52)], True, lineno=1286, col_offset=20)], [], lineno=1286, col_offset=12), Break( lineno=1287, col_offset=12)], [], lineno=1284, col_offset=8)], [Print(None, [Str('Sorry, can\'t find the help file "pdb.doc"', lineno=1289, col_offset=14)], False, lineno=1289, col_offset=8), Print(None, [Str('along the Python search path', lineno=1290, col_offset=14)], True, lineno=1290, col_offset=8)], lineno=1282, col_offset=4)], [], lineno=1281, col_offset=0), FunctionDef('main', arguments([], None, None, []), [If(BoolOp(Or(), [UnaryOp(Not(), Subscript(Attribute(Name('sys', Load(), lineno=1293, col_offset=11), 'argv', Load(), lineno=1293, col_offset=11), Slice(Num(1, lineno=1293, col_offset=20), None, None), Load(), lineno=1293, col_offset=11), lineno=1293, col_offset=7), Compare(Subscript(Attribute(Name('sys', Load(), lineno=1293, col_offset=27), 'argv', Load(), lineno=1293, col_offset=27), Index(Num(1, lineno=1293, col_offset=36)), Load(), lineno=1293, col_offset=27), [In()], [Tuple([Str('--help', lineno=1293, col_offset=43), Str('-h', lineno=1293, col_offset=53)], Load(), lineno=1293, col_offset=43)], lineno=1293, col_offset=27)], lineno=1293, col_offset=7), [Print(None, [Str('usage: pdb.py scriptfile [arg] ...', lineno=1294, col_offset=14)], True, lineno=1294, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1295, col_offset=8), 'exit', Load(), lineno=1295, col_offset=8), [Num(2, lineno=1295, col_offset=17)], [], None, None, lineno=1295, col_offset=8), lineno=1295, col_offset=8)], [], lineno=1293, col_offset=4), Assign([Name('mainpyfile', Store(), lineno=1297, col_offset=4)], Subscript(Attribute(Name('sys', Load(), lineno=1297, col_offset=18), 'argv', Load(), lineno=1297, col_offset=18), Index(Num(1, lineno=1297, col_offset=27)), Load(), lineno=1297, col_offset=18), lineno=1297, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1298, col_offset=11), 'path', Load(), lineno=1298, col_offset=11), 'exists', Load(), lineno=1298, col_offset=11), [Name('mainpyfile', Load(), lineno=1298, col_offset=26)], [], None, None, lineno=1298, col_offset=11), lineno=1298, col_offset=7), [Print(None, [Str('Error:', lineno=1299, col_offset=14), Name('mainpyfile', Load(), lineno=1299, col_offset=24), Str('does not exist', lineno=1299, col_offset=36)], True, lineno=1299, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=1300, col_offset=8), 'exit', Load(), lineno=1300, col_offset=8), [Num(1, lineno=1300, col_offset=17)], [], None, None, lineno=1300, col_offset=8), lineno=1300, col_offset=8)], [], lineno=1298, col_offset=4), Delete([Subscript(Attribute(Name('sys', Load(), lineno=1302, col_offset=8), 'argv', Load(), lineno=1302, col_offset=8), Index(Num(0, lineno=1302, col_offset=17)), Del(), lineno=1302, col_offset=8)], lineno=1302, col_offset=4), Assign([Subscript(Attribute(Name('sys', Load(), lineno=1305, col_offset=4), 'path', Load(), lineno=1305, col_offset=4), Index(Num(0, lineno=1305, col_offset=13)), Store(), lineno=1305, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1305, col_offset=18), 'path', Load(), lineno=1305, col_offset=18), 'dirname', Load(), lineno=1305, col_offset=18), [Name('mainpyfile', Load(), lineno=1305, col_offset=34)], [], None, None, lineno=1305, col_offset=18), lineno=1305, col_offset=4), Assign([Name('pdb', Store(), lineno=1311, col_offset=4)], Call(Name('Pdb', Load(), lineno=1311, col_offset=10), [], [], None, None, lineno=1311, col_offset=10), lineno=1311, col_offset=4), While(Name('True', Load(), lineno=1312, col_offset=10), [TryExcept([Expr(Call(Attribute(Name('pdb', Load(), lineno=1314, col_offset=12), '_runscript', Load(), lineno=1314, col_offset=12), [Name('mainpyfile', Load(), lineno=1314, col_offset=27)], [], None, None, lineno=1314, col_offset=12), lineno=1314, col_offset=12), If(Attribute(Name('pdb', Load(), lineno=1315, col_offset=15), '_user_requested_quit', Load(), lineno=1315, col_offset=15), [Break( lineno=1316, col_offset=16)], [], lineno=1315, col_offset=12), Print(None, [Str('The program finished and will be restarted', lineno=1317, col_offset=18)], True, lineno=1317, col_offset=12)], [ExceptHandler(Name('Restart', Load(), lineno=1318, col_offset=15), None, [Print(None, [Str('Restarting', lineno=1319, col_offset=18), Name('mainpyfile', Load(), lineno=1319, col_offset=32), Str('with arguments:', lineno=1319, col_offset=44)], True, lineno=1319, col_offset=12), Print(None, [BinOp(Str('\t', lineno=1320, col_offset=18), Add(), Call(Attribute(Str(' ', lineno=1320, col_offset=25), 'join', Load(), lineno=1320, col_offset=25), [Subscript(Attribute(Name('sys', Load(), lineno=1320, col_offset=34), 'argv', Load(), lineno=1320, col_offset=34), Slice(Num(1, lineno=1320, col_offset=43), None, None), Load(), lineno=1320, col_offset=34)], [], None, None, lineno=1320, col_offset=25), lineno=1320, col_offset=18)], True, lineno=1320, col_offset=12)], lineno=1318, col_offset=8), ExceptHandler(Name('SystemExit', Load(), lineno=1321, col_offset=15), None, [Print(None, [Str('The program exited via sys.exit(). Exit status: ', lineno=1323, col_offset=18)], False, lineno=1323, col_offset=12), Print(None, [Subscript(Call(Attribute(Name('sys', Load(), lineno=1324, col_offset=18), 'exc_info', Load(), lineno=1324, col_offset=18), [], [], None, None, lineno=1324, col_offset=18), Index(Num(1, lineno=1324, col_offset=33)), Load(), lineno=1324, col_offset=18)], True, lineno=1324, col_offset=12)], lineno=1321, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('traceback', Load(), lineno=1326, col_offset=12), 'print_exc', Load(), lineno=1326, col_offset=12), [], [], None, None, lineno=1326, col_offset=12), lineno=1326, col_offset=12), Print(None, [Str('Uncaught exception. Entering post mortem debugging', lineno=1327, col_offset=18)], True, lineno=1327, col_offset=12), Print(None, [Str("Running 'cont' or 'step' will restart the program", lineno=1328, col_offset=18)], True, lineno=1328, col_offset=12), Assign([Name('t', Store(), lineno=1329, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=1329, col_offset=16), 'exc_info', Load(), lineno=1329, col_offset=16), [], [], None, None, lineno=1329, col_offset=16), Index(Num(2, lineno=1329, col_offset=31)), Load(), lineno=1329, col_offset=16), lineno=1329, col_offset=12), Expr(Call(Attribute(Name('pdb', Load(), lineno=1330, col_offset=12), 'interaction', Load(), lineno=1330, col_offset=12), [Name('None', Load(), lineno=1330, col_offset=28), Name('t', Load(), lineno=1330, col_offset=34)], [], None, None, lineno=1330, col_offset=12), lineno=1330, col_offset=12), Print(None, [BinOp(BinOp(Str('Post mortem debugger finished. The ', lineno=1331, col_offset=18), Add(), Name('mainpyfile', Load(), lineno=1331, col_offset=58), lineno=1331, col_offset=18), Add(), Str(' will be restarted', lineno=1332, col_offset=18), lineno=1331, col_offset=69)], True, lineno=1331, col_offset=12)], lineno=1325, col_offset=8)], [], lineno=1313, col_offset=8)], [], lineno=1312, col_offset=4)], [], lineno=1292, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1336, col_offset=3), [Eq()], [Str('__main__', lineno=1336, col_offset=15)], lineno=1336, col_offset=3), [Import([alias('pdb', None)], lineno=1337, col_offset=4), Expr(Call(Attribute(Name('pdb', Load(), lineno=1338, col_offset=4), 'main', Load(), lineno=1338, col_offset=4), [], [], None, None, lineno=1338, col_offset=4), lineno=1338, col_offset=4)], [], lineno=1336, col_offset=0)])
