Module([Expr(Str(' Python character mapping codec test\n\nThis uses the test codec in testcodec.py and thus also tests the\nencodings package lookup scheme.\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright 2000 Guido van Rossum.\n\n', lineno=10, col_offset=-1), lineno=10, col_offset=-1), Import([alias('test.test_support', None), alias('unittest', None)], lineno=12, col_offset=0), Import([alias('codecs', None)], lineno=14, col_offset=0), FunctionDef('codec_search_function', arguments([Name('encoding', Param(), lineno=17, col_offset=26)], None, None, []), [If(Compare(Name('encoding', Load(), lineno=18, col_offset=7), [Eq()], [Str('testcodec', lineno=18, col_offset=19)], lineno=18, col_offset=7), [ImportFrom('test', [alias('testcodec', None)], 0, lineno=19, col_offset=8), Return(Call(Name('tuple', Load(), lineno=20, col_offset=15), [Call(Attribute(Name('testcodec', Load(), lineno=20, col_offset=21), 'getregentry', Load(), lineno=20, col_offset=21), [], [], None, None, lineno=20, col_offset=21)], [], None, None, lineno=20, col_offset=15), lineno=20, col_offset=8)], [], lineno=18, col_offset=4), Return(Name('None', Load(), lineno=21, col_offset=11), lineno=21, col_offset=4)], [], lineno=17, col_offset=0), Expr(Call(Attribute(Name('codecs', Load(), lineno=23, col_offset=0), 'register', Load(), lineno=23, col_offset=0), [Name('codec_search_function', Load(), lineno=23, col_offset=16)], [], None, None, lineno=23, col_offset=0), lineno=23, col_offset=0), Assign([Name('codecname', Store(), lineno=26, col_offset=0)], Str('testcodec', lineno=26, col_offset=12), lineno=26, col_offset=0), ClassDef('CharmapCodecTest', [Attribute(Name('unittest', Load(), lineno=28, col_offset=23), 'TestCase', Load(), lineno=28, col_offset=23)], [FunctionDef('test_constructorx', arguments([Name('self', Param(), lineno=29, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=30, col_offset=8), 'assertEqual', Load(), lineno=30, col_offset=8), [Call(Name('unicode', Load(), lineno=30, col_offset=25), [Str('abc', lineno=30, col_offset=33), Name('codecname', Load(), lineno=30, col_offset=40)], [], None, None, lineno=30, col_offset=25), Str(u'abc', lineno=30, col_offset=52)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=8), 'assertEqual', Load(), lineno=31, col_offset=8), [Call(Name('unicode', Load(), lineno=31, col_offset=25), [Str('xdef', lineno=31, col_offset=33), Name('codecname', Load(), lineno=31, col_offset=41)], [], None, None, lineno=31, col_offset=25), Str(u'abcdef', lineno=31, col_offset=53)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertEqual', Load(), lineno=32, col_offset=8), [Call(Name('unicode', Load(), lineno=32, col_offset=25), [Str('defx', lineno=32, col_offset=33), Name('codecname', Load(), lineno=32, col_offset=41)], [], None, None, lineno=32, col_offset=25), Str(u'defabc', lineno=32, col_offset=53)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [Call(Name('unicode', Load(), lineno=33, col_offset=25), [Str('dxf', lineno=33, col_offset=33), Name('codecname', Load(), lineno=33, col_offset=40)], [], None, None, lineno=33, col_offset=25), Str(u'dabcf', lineno=33, col_offset=52)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=34, col_offset=8), 'assertEqual', Load(), lineno=34, col_offset=8), [Call(Name('unicode', Load(), lineno=34, col_offset=25), [Str('dxfx', lineno=34, col_offset=33), Name('codecname', Load(), lineno=34, col_offset=41)], [], None, None, lineno=34, col_offset=25), Str(u'dabcfabc', lineno=34, col_offset=53)], [], None, None, lineno=34, col_offset=8), lineno=34, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('test_encodex', arguments([Name('self', Param(), lineno=36, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=8), 'assertEqual', Load(), lineno=37, col_offset=8), [Call(Attribute(Str(u'abc', lineno=37, col_offset=25), 'encode', Load(), lineno=37, col_offset=25), [Name('codecname', Load(), lineno=37, col_offset=39)], [], None, None, lineno=37, col_offset=25), Str('abc', lineno=37, col_offset=51)], [], None, None, lineno=37, col_offset=8), lineno=37, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=38, col_offset=8), 'assertEqual', Load(), lineno=38, col_offset=8), [Call(Attribute(Str(u'xdef', lineno=38, col_offset=25), 'encode', Load(), lineno=38, col_offset=25), [Name('codecname', Load(), lineno=38, col_offset=40)], [], None, None, lineno=38, col_offset=25), Str('abcdef', lineno=38, col_offset=52)], [], None, None, lineno=38, col_offset=8), lineno=38, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=8), 'assertEqual', Load(), lineno=39, col_offset=8), [Call(Attribute(Str(u'defx', lineno=39, col_offset=25), 'encode', Load(), lineno=39, col_offset=25), [Name('codecname', Load(), lineno=39, col_offset=40)], [], None, None, lineno=39, col_offset=25), Str('defabc', lineno=39, col_offset=52)], [], None, None, lineno=39, col_offset=8), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertEqual', Load(), lineno=40, col_offset=8), [Call(Attribute(Str(u'dxf', lineno=40, col_offset=25), 'encode', Load(), lineno=40, col_offset=25), [Name('codecname', Load(), lineno=40, col_offset=39)], [], None, None, lineno=40, col_offset=25), Str('dabcf', lineno=40, col_offset=51)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=41, col_offset=8), 'assertEqual', Load(), lineno=41, col_offset=8), [Call(Attribute(Str(u'dxfx', lineno=41, col_offset=25), 'encode', Load(), lineno=41, col_offset=25), [Name('codecname', Load(), lineno=41, col_offset=40)], [], None, None, lineno=41, col_offset=25), Str('dabcfabc', lineno=41, col_offset=52)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_constructory', arguments([Name('self', Param(), lineno=43, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=44, col_offset=8), 'assertEqual', Load(), lineno=44, col_offset=8), [Call(Name('unicode', Load(), lineno=44, col_offset=25), [Str('ydef', lineno=44, col_offset=33), Name('codecname', Load(), lineno=44, col_offset=41)], [], None, None, lineno=44, col_offset=25), Str(u'def', lineno=44, col_offset=53)], [], None, None, lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Call(Name('unicode', Load(), lineno=45, col_offset=25), [Str('defy', lineno=45, col_offset=33), Name('codecname', Load(), lineno=45, col_offset=41)], [], None, None, lineno=45, col_offset=25), Str(u'def', lineno=45, col_offset=53)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Call(Name('unicode', Load(), lineno=46, col_offset=25), [Str('dyf', lineno=46, col_offset=33), Name('codecname', Load(), lineno=46, col_offset=40)], [], None, None, lineno=46, col_offset=25), Str(u'df', lineno=46, col_offset=52)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'assertEqual', Load(), lineno=47, col_offset=8), [Call(Name('unicode', Load(), lineno=47, col_offset=25), [Str('dyfy', lineno=47, col_offset=33), Name('codecname', Load(), lineno=47, col_offset=41)], [], None, None, lineno=47, col_offset=25), Str(u'df', lineno=47, col_offset=53)], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_maptoundefined', arguments([Name('self', Param(), lineno=49, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=8), 'assertRaises', Load(), lineno=50, col_offset=8), [Name('UnicodeError', Load(), lineno=50, col_offset=26), Name('unicode', Load(), lineno=50, col_offset=40), Str('abc\x01', lineno=50, col_offset=49), Name('codecname', Load(), lineno=50, col_offset=60)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8)], [], lineno=49, col_offset=4)], [], lineno=28, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=53, col_offset=4), 'test_support', Load(), lineno=53, col_offset=4), 'run_unittest', Load(), lineno=53, col_offset=4), [Name('CharmapCodecTest', Load(), lineno=53, col_offset=35)], [], None, None, lineno=53, col_offset=4), lineno=53, col_offset=4)], [], lineno=52, col_offset=0), If(Compare(Name('__name__', Load(), lineno=55, col_offset=3), [Eq()], [Str('__main__', lineno=55, col_offset=15)], lineno=55, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=56, col_offset=4), [], [], None, None, lineno=56, col_offset=4), lineno=56, col_offset=4)], [], lineno=55, col_offset=0)])
