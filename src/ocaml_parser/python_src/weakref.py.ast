Module([Expr(Str('Weak reference support for Python.\n\nThis module is an implementation of PEP 205:\n\nhttp://www.python.org/dev/peps/pep-0205/\n', lineno=6, col_offset=-1), lineno=6, col_offset=-1), Import([alias('UserDict', None)], lineno=12, col_offset=0), ImportFrom('_weakref', [alias('getweakrefcount', None), alias('getweakrefs', None), alias('ref', None), alias('proxy', None), alias('CallableProxyType', None), alias('ProxyType', None), alias('ReferenceType', None)], 0, lineno=14, col_offset=0), ImportFrom('_weakrefset', [alias('WeakSet', None)], 0, lineno=23, col_offset=0), ImportFrom('exceptions', [alias('ReferenceError', None)], 0, lineno=25, col_offset=0), Assign([Name('ProxyTypes', Store(), lineno=28, col_offset=0)], Tuple([Name('ProxyType', Load(), lineno=28, col_offset=14), Name('CallableProxyType', Load(), lineno=28, col_offset=25)], Load(), lineno=28, col_offset=14), lineno=28, col_offset=0), Assign([Name('__all__', Store(), lineno=30, col_offset=0)], List([Str('ref', lineno=30, col_offset=11), Str('proxy', lineno=30, col_offset=18), Str('getweakrefcount', lineno=30, col_offset=27), Str('getweakrefs', lineno=30, col_offset=46), Str('WeakKeyDictionary', lineno=31, col_offset=11), Str('ReferenceError', lineno=31, col_offset=32), Str('ReferenceType', lineno=31, col_offset=50), Str('ProxyType', lineno=31, col_offset=67), Str('CallableProxyType', lineno=32, col_offset=11), Str('ProxyTypes', lineno=32, col_offset=32), Str('WeakValueDictionary', lineno=32, col_offset=46), Str('WeakSet', lineno=32, col_offset=69)], Load(), lineno=30, col_offset=10), lineno=30, col_offset=0), ClassDef('WeakValueDictionary', [Attribute(Name('UserDict', Load(), lineno=35, col_offset=26), 'UserDict', Load(), lineno=35, col_offset=26)], [Expr(Str('Mapping class that references values weakly.\n\n    Entries in the dictionary will be discarded when no strong\n    reference to the value exists anymore\n    ', lineno=40, col_offset=-1), lineno=40, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=47, col_offset=17)], 'args', 'kw', []), [FunctionDef('remove', arguments([Name('wr', Param(), lineno=48, col_offset=19), Name('selfref', Param(), lineno=48, col_offset=23)], None, None, [Call(Name('ref', Load(), lineno=48, col_offset=31), [Name('self', Load(), lineno=48, col_offset=35)], [], None, None, lineno=48, col_offset=31)]), [Assign([Name('self', Store(), lineno=49, col_offset=12)], Call(Name('selfref', Load(), lineno=49, col_offset=19), [], [], None, None, lineno=49, col_offset=19), lineno=49, col_offset=12), If(Compare(Name('self', Load(), lineno=50, col_offset=15), [IsNot()], [Name('None', Load(), lineno=50, col_offset=27)], lineno=50, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=51, col_offset=20), 'data', Load(), lineno=51, col_offset=20), Index(Attribute(Name('wr', Load(), lineno=51, col_offset=30), 'key', Load(), lineno=51, col_offset=30)), Del(), lineno=51, col_offset=20)], lineno=51, col_offset=16)], [], lineno=50, col_offset=12)], [], lineno=48, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=52, col_offset=8), '_remove', Store(), lineno=52, col_offset=8)], Name('remove', Load(), lineno=52, col_offset=23), lineno=52, col_offset=8), Expr(Call(Attribute(Attribute(Name('UserDict', Load(), lineno=53, col_offset=8), 'UserDict', Load(), lineno=53, col_offset=8), '__init__', Load(), lineno=53, col_offset=8), [Name('self', Load(), lineno=53, col_offset=35)], [], Name('args', Load(), lineno=53, col_offset=42), Name('kw', Load(), lineno=53, col_offset=50), lineno=53, col_offset=8), lineno=53, col_offset=8)], [], lineno=47, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=55, col_offset=20), Name('key', Param(), lineno=55, col_offset=26)], None, None, []), [Assign([Name('o', Store(), lineno=56, col_offset=8)], Call(Subscript(Attribute(Name('self', Load(), lineno=56, col_offset=12), 'data', Load(), lineno=56, col_offset=12), Index(Name('key', Load(), lineno=56, col_offset=22)), Load(), lineno=56, col_offset=12), [], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=8), If(Compare(Name('o', Load(), lineno=57, col_offset=11), [Is()], [Name('None', Load(), lineno=57, col_offset=16)], lineno=57, col_offset=11), [Raise(Name('KeyError', Load(), lineno=58, col_offset=18), Name('key', Load(), lineno=58, col_offset=28), None, lineno=58, col_offset=12)], [Return(Name('o', Load(), lineno=60, col_offset=19), lineno=60, col_offset=12)], lineno=57, col_offset=8)], [], lineno=55, col_offset=4), FunctionDef('__contains__', arguments([Name('self', Param(), lineno=62, col_offset=21), Name('key', Param(), lineno=62, col_offset=27)], None, None, []), [TryExcept([Assign([Name('o', Store(), lineno=64, col_offset=12)], Call(Subscript(Attribute(Name('self', Load(), lineno=64, col_offset=16), 'data', Load(), lineno=64, col_offset=16), Index(Name('key', Load(), lineno=64, col_offset=26)), Load(), lineno=64, col_offset=16), [], [], None, None, lineno=64, col_offset=16), lineno=64, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=65, col_offset=15), None, [Return(Name('False', Load(), lineno=66, col_offset=19), lineno=66, col_offset=12)], lineno=65, col_offset=8)], [], lineno=63, col_offset=8), Return(Compare(Name('o', Load(), lineno=67, col_offset=15), [IsNot()], [Name('None', Load(), lineno=67, col_offset=24)], lineno=67, col_offset=15), lineno=67, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('has_key', arguments([Name('self', Param(), lineno=69, col_offset=16), Name('key', Param(), lineno=69, col_offset=22)], None, None, []), [TryExcept([Assign([Name('o', Store(), lineno=71, col_offset=12)], Call(Subscript(Attribute(Name('self', Load(), lineno=71, col_offset=16), 'data', Load(), lineno=71, col_offset=16), Index(Name('key', Load(), lineno=71, col_offset=26)), Load(), lineno=71, col_offset=16), [], [], None, None, lineno=71, col_offset=16), lineno=71, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=72, col_offset=15), None, [Return(Name('False', Load(), lineno=73, col_offset=19), lineno=73, col_offset=12)], lineno=72, col_offset=8)], [], lineno=70, col_offset=8), Return(Compare(Name('o', Load(), lineno=74, col_offset=15), [IsNot()], [Name('None', Load(), lineno=74, col_offset=24)], lineno=74, col_offset=15), lineno=74, col_offset=8)], [], lineno=69, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=76, col_offset=17)], None, None, []), [Return(BinOp(Str('<WeakValueDictionary at %s>', lineno=77, col_offset=15), Mod(), Call(Name('id', Load(), lineno=77, col_offset=47), [Name('self', Load(), lineno=77, col_offset=50)], [], None, None, lineno=77, col_offset=47), lineno=77, col_offset=15), lineno=77, col_offset=8)], [], lineno=76, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=79, col_offset=20), Name('key', Param(), lineno=79, col_offset=26), Name('value', Param(), lineno=79, col_offset=31)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'data', Load(), lineno=80, col_offset=8), Index(Name('key', Load(), lineno=80, col_offset=18)), Store(), lineno=80, col_offset=8)], Call(Name('KeyedRef', Load(), lineno=80, col_offset=25), [Name('value', Load(), lineno=80, col_offset=34), Attribute(Name('self', Load(), lineno=80, col_offset=41), '_remove', Load(), lineno=80, col_offset=41), Name('key', Load(), lineno=80, col_offset=55)], [], None, None, lineno=80, col_offset=25), lineno=80, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('copy', arguments([Name('self', Param(), lineno=82, col_offset=13)], None, None, []), [Assign([Name('new', Store(), lineno=83, col_offset=8)], Call(Name('WeakValueDictionary', Load(), lineno=83, col_offset=14), [], [], None, None, lineno=83, col_offset=14), lineno=83, col_offset=8), For(Tuple([Name('key', Store(), lineno=84, col_offset=12), Name('wr', Store(), lineno=84, col_offset=17)], Store(), lineno=84, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=84, col_offset=23), 'data', Load(), lineno=84, col_offset=23), 'items', Load(), lineno=84, col_offset=23), [], [], None, None, lineno=84, col_offset=23), [Assign([Name('o', Store(), lineno=85, col_offset=12)], Call(Name('wr', Load(), lineno=85, col_offset=16), [], [], None, None, lineno=85, col_offset=16), lineno=85, col_offset=12), If(Compare(Name('o', Load(), lineno=86, col_offset=15), [IsNot()], [Name('None', Load(), lineno=86, col_offset=24)], lineno=86, col_offset=15), [Assign([Subscript(Name('new', Load(), lineno=87, col_offset=16), Index(Name('key', Load(), lineno=87, col_offset=20)), Store(), lineno=87, col_offset=16)], Name('o', Load(), lineno=87, col_offset=27), lineno=87, col_offset=16)], [], lineno=86, col_offset=12)], [], lineno=84, col_offset=8), Return(Name('new', Load(), lineno=88, col_offset=15), lineno=88, col_offset=8)], [], lineno=82, col_offset=4), Assign([Name('__copy__', Store(), lineno=90, col_offset=4)], Name('copy', Load(), lineno=90, col_offset=15), lineno=90, col_offset=4), FunctionDef('__deepcopy__', arguments([Name('self', Param(), lineno=92, col_offset=21), Name('memo', Param(), lineno=92, col_offset=27)], None, None, []), [ImportFrom('copy', [alias('deepcopy', None)], 0, lineno=93, col_offset=8), Assign([Name('new', Store(), lineno=94, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=94, col_offset=14), '__class__', Load(), lineno=94, col_offset=14), [], [], None, None, lineno=94, col_offset=14), lineno=94, col_offset=8), For(Tuple([Name('key', Store(), lineno=95, col_offset=12), Name('wr', Store(), lineno=95, col_offset=17)], Store(), lineno=95, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=95, col_offset=23), 'data', Load(), lineno=95, col_offset=23), 'items', Load(), lineno=95, col_offset=23), [], [], None, None, lineno=95, col_offset=23), [Assign([Name('o', Store(), lineno=96, col_offset=12)], Call(Name('wr', Load(), lineno=96, col_offset=16), [], [], None, None, lineno=96, col_offset=16), lineno=96, col_offset=12), If(Compare(Name('o', Load(), lineno=97, col_offset=15), [IsNot()], [Name('None', Load(), lineno=97, col_offset=24)], lineno=97, col_offset=15), [Assign([Subscript(Name('new', Load(), lineno=98, col_offset=16), Index(Call(Name('deepcopy', Load(), lineno=98, col_offset=20), [Name('key', Load(), lineno=98, col_offset=29), Name('memo', Load(), lineno=98, col_offset=34)], [], None, None, lineno=98, col_offset=20)), Store(), lineno=98, col_offset=16)], Name('o', Load(), lineno=98, col_offset=43), lineno=98, col_offset=16)], [], lineno=97, col_offset=12)], [], lineno=95, col_offset=8), Return(Name('new', Load(), lineno=99, col_offset=15), lineno=99, col_offset=8)], [], lineno=92, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=101, col_offset=12), Name('key', Param(), lineno=101, col_offset=18), Name('default', Param(), lineno=101, col_offset=23)], None, None, [Name('None', Load(), lineno=101, col_offset=31)]), [TryExcept([Assign([Name('wr', Store(), lineno=103, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=103, col_offset=17), 'data', Load(), lineno=103, col_offset=17), Index(Name('key', Load(), lineno=103, col_offset=27)), Load(), lineno=103, col_offset=17), lineno=103, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=104, col_offset=15), None, [Return(Name('default', Load(), lineno=105, col_offset=19), lineno=105, col_offset=12)], lineno=104, col_offset=8)], [Assign([Name('o', Store(), lineno=107, col_offset=12)], Call(Name('wr', Load(), lineno=107, col_offset=16), [], [], None, None, lineno=107, col_offset=16), lineno=107, col_offset=12), If(Compare(Name('o', Load(), lineno=108, col_offset=15), [Is()], [Name('None', Load(), lineno=108, col_offset=20)], lineno=108, col_offset=15), [Return(Name('default', Load(), lineno=110, col_offset=23), lineno=110, col_offset=16)], [Return(Name('o', Load(), lineno=112, col_offset=23), lineno=112, col_offset=16)], lineno=108, col_offset=12)], lineno=102, col_offset=8)], [], lineno=101, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=114, col_offset=14)], None, None, []), [Assign([Name('L', Store(), lineno=115, col_offset=8)], List([], Load(), lineno=115, col_offset=12), lineno=115, col_offset=8), For(Tuple([Name('key', Store(), lineno=116, col_offset=12), Name('wr', Store(), lineno=116, col_offset=17)], Store(), lineno=116, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=116, col_offset=23), 'data', Load(), lineno=116, col_offset=23), 'items', Load(), lineno=116, col_offset=23), [], [], None, None, lineno=116, col_offset=23), [Assign([Name('o', Store(), lineno=117, col_offset=12)], Call(Name('wr', Load(), lineno=117, col_offset=16), [], [], None, None, lineno=117, col_offset=16), lineno=117, col_offset=12), If(Compare(Name('o', Load(), lineno=118, col_offset=15), [IsNot()], [Name('None', Load(), lineno=118, col_offset=24)], lineno=118, col_offset=15), [Expr(Call(Attribute(Name('L', Load(), lineno=119, col_offset=16), 'append', Load(), lineno=119, col_offset=16), [Tuple([Name('key', Load(), lineno=119, col_offset=26), Name('o', Load(), lineno=119, col_offset=31)], Load(), lineno=119, col_offset=26)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=16)], [], lineno=118, col_offset=12)], [], lineno=116, col_offset=8), Return(Name('L', Load(), lineno=120, col_offset=15), lineno=120, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('iteritems', arguments([Name('self', Param(), lineno=122, col_offset=18)], None, None, []), [For(Name('wr', Store(), lineno=123, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=123, col_offset=18), 'data', Load(), lineno=123, col_offset=18), 'itervalues', Load(), lineno=123, col_offset=18), [], [], None, None, lineno=123, col_offset=18), [Assign([Name('value', Store(), lineno=124, col_offset=12)], Call(Name('wr', Load(), lineno=124, col_offset=20), [], [], None, None, lineno=124, col_offset=20), lineno=124, col_offset=12), If(Compare(Name('value', Load(), lineno=125, col_offset=15), [IsNot()], [Name('None', Load(), lineno=125, col_offset=28)], lineno=125, col_offset=15), [Expr(Yield(Tuple([Attribute(Name('wr', Load(), lineno=126, col_offset=22), 'key', Load(), lineno=126, col_offset=22), Name('value', Load(), lineno=126, col_offset=30)], Load(), lineno=126, col_offset=22), lineno=126, col_offset=16), lineno=126, col_offset=16)], [], lineno=125, col_offset=12)], [], lineno=123, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('iterkeys', arguments([Name('self', Param(), lineno=128, col_offset=17)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=129, col_offset=15), 'data', Load(), lineno=129, col_offset=15), 'iterkeys', Load(), lineno=129, col_offset=15), [], [], None, None, lineno=129, col_offset=15), lineno=129, col_offset=8)], [], lineno=128, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=131, col_offset=17)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=15), 'data', Load(), lineno=132, col_offset=15), 'iterkeys', Load(), lineno=132, col_offset=15), [], [], None, None, lineno=132, col_offset=15), lineno=132, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('itervaluerefs', arguments([Name('self', Param(), lineno=134, col_offset=22)], None, None, []), [Expr(Str("Return an iterator that yields the weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        ", lineno=143, col_offset=-1), lineno=143, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=144, col_offset=15), 'data', Load(), lineno=144, col_offset=15), 'itervalues', Load(), lineno=144, col_offset=15), [], [], None, None, lineno=144, col_offset=15), lineno=144, col_offset=8)], [], lineno=134, col_offset=4), FunctionDef('itervalues', arguments([Name('self', Param(), lineno=146, col_offset=19)], None, None, []), [For(Name('wr', Store(), lineno=147, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=147, col_offset=18), 'data', Load(), lineno=147, col_offset=18), 'itervalues', Load(), lineno=147, col_offset=18), [], [], None, None, lineno=147, col_offset=18), [Assign([Name('obj', Store(), lineno=148, col_offset=12)], Call(Name('wr', Load(), lineno=148, col_offset=18), [], [], None, None, lineno=148, col_offset=18), lineno=148, col_offset=12), If(Compare(Name('obj', Load(), lineno=149, col_offset=15), [IsNot()], [Name('None', Load(), lineno=149, col_offset=26)], lineno=149, col_offset=15), [Expr(Yield(Name('obj', Load(), lineno=150, col_offset=22), lineno=150, col_offset=16), lineno=150, col_offset=16)], [], lineno=149, col_offset=12)], [], lineno=147, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('popitem', arguments([Name('self', Param(), lineno=152, col_offset=16)], None, None, []), [While(Num(1, lineno=153, col_offset=14), [Assign([Tuple([Name('key', Store(), lineno=154, col_offset=12), Name('wr', Store(), lineno=154, col_offset=17)], Store(), lineno=154, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=154, col_offset=22), 'data', Load(), lineno=154, col_offset=22), 'popitem', Load(), lineno=154, col_offset=22), [], [], None, None, lineno=154, col_offset=22), lineno=154, col_offset=12), Assign([Name('o', Store(), lineno=155, col_offset=12)], Call(Name('wr', Load(), lineno=155, col_offset=16), [], [], None, None, lineno=155, col_offset=16), lineno=155, col_offset=12), If(Compare(Name('o', Load(), lineno=156, col_offset=15), [IsNot()], [Name('None', Load(), lineno=156, col_offset=24)], lineno=156, col_offset=15), [Return(Tuple([Name('key', Load(), lineno=157, col_offset=23), Name('o', Load(), lineno=157, col_offset=28)], Load(), lineno=157, col_offset=23), lineno=157, col_offset=16)], [], lineno=156, col_offset=12)], [], lineno=153, col_offset=8)], [], lineno=152, col_offset=4), FunctionDef('pop', arguments([Name('self', Param(), lineno=159, col_offset=12), Name('key', Param(), lineno=159, col_offset=18)], 'args', None, []), [TryExcept([Assign([Name('o', Store(), lineno=161, col_offset=12)], Call(Call(Attribute(Attribute(Name('self', Load(), lineno=161, col_offset=16), 'data', Load(), lineno=161, col_offset=16), 'pop', Load(), lineno=161, col_offset=16), [Name('key', Load(), lineno=161, col_offset=30)], [], None, None, lineno=161, col_offset=16), [], [], None, None, lineno=161, col_offset=16), lineno=161, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=162, col_offset=15), None, [If(Name('args', Load(), lineno=163, col_offset=15), [Return(Subscript(Name('args', Load(), lineno=164, col_offset=23), Index(Num(0, lineno=164, col_offset=28)), Load(), lineno=164, col_offset=23), lineno=164, col_offset=16)], [], lineno=163, col_offset=12), Raise(None, None, None, lineno=165, col_offset=12)], lineno=162, col_offset=8)], [], lineno=160, col_offset=8), If(Compare(Name('o', Load(), lineno=166, col_offset=11), [Is()], [Name('None', Load(), lineno=166, col_offset=16)], lineno=166, col_offset=11), [Raise(Name('KeyError', Load(), lineno=167, col_offset=18), Name('key', Load(), lineno=167, col_offset=28), None, lineno=167, col_offset=12)], [Return(Name('o', Load(), lineno=169, col_offset=19), lineno=169, col_offset=12)], lineno=166, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('setdefault', arguments([Name('self', Param(), lineno=171, col_offset=19), Name('key', Param(), lineno=171, col_offset=25), Name('default', Param(), lineno=171, col_offset=30)], None, None, [Name('None', Load(), lineno=171, col_offset=38)]), [TryExcept([Assign([Name('wr', Store(), lineno=173, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=173, col_offset=17), 'data', Load(), lineno=173, col_offset=17), Index(Name('key', Load(), lineno=173, col_offset=27)), Load(), lineno=173, col_offset=17), lineno=173, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=174, col_offset=15), None, [Assign([Subscript(Attribute(Name('self', Load(), lineno=175, col_offset=12), 'data', Load(), lineno=175, col_offset=12), Index(Name('key', Load(), lineno=175, col_offset=22)), Store(), lineno=175, col_offset=12)], Call(Name('KeyedRef', Load(), lineno=175, col_offset=29), [Name('default', Load(), lineno=175, col_offset=38), Attribute(Name('self', Load(), lineno=175, col_offset=47), '_remove', Load(), lineno=175, col_offset=47), Name('key', Load(), lineno=175, col_offset=61)], [], None, None, lineno=175, col_offset=29), lineno=175, col_offset=12), Return(Name('default', Load(), lineno=176, col_offset=19), lineno=176, col_offset=12)], lineno=174, col_offset=8)], [Return(Call(Name('wr', Load(), lineno=178, col_offset=19), [], [], None, None, lineno=178, col_offset=19), lineno=178, col_offset=12)], lineno=172, col_offset=8)], [], lineno=171, col_offset=4), FunctionDef('update', arguments([Name('self', Param(), lineno=180, col_offset=15), Name('dict', Param(), lineno=180, col_offset=21)], None, 'kwargs', [Name('None', Load(), lineno=180, col_offset=26)]), [Assign([Name('d', Store(), lineno=181, col_offset=8)], Attribute(Name('self', Load(), lineno=181, col_offset=12), 'data', Load(), lineno=181, col_offset=12), lineno=181, col_offset=8), If(Compare(Name('dict', Load(), lineno=182, col_offset=11), [IsNot()], [Name('None', Load(), lineno=182, col_offset=23)], lineno=182, col_offset=11), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=183, col_offset=19), [Name('dict', Load(), lineno=183, col_offset=27), Str('items', lineno=183, col_offset=33)], [], None, None, lineno=183, col_offset=19), lineno=183, col_offset=15), [Assign([Name('dict', Store(), lineno=184, col_offset=16)], Call(Call(Name('type', Load(), lineno=184, col_offset=23), [Dict([], [], lineno=184, col_offset=28)], [], None, None, lineno=184, col_offset=23), [Name('dict', Load(), lineno=184, col_offset=32)], [], None, None, lineno=184, col_offset=23), lineno=184, col_offset=16)], [], lineno=183, col_offset=12), For(Tuple([Name('key', Store(), lineno=185, col_offset=16), Name('o', Store(), lineno=185, col_offset=21)], Store(), lineno=185, col_offset=16), Call(Attribute(Name('dict', Load(), lineno=185, col_offset=26), 'items', Load(), lineno=185, col_offset=26), [], [], None, None, lineno=185, col_offset=26), [Assign([Subscript(Name('d', Load(), lineno=186, col_offset=16), Index(Name('key', Load(), lineno=186, col_offset=18)), Store(), lineno=186, col_offset=16)], Call(Name('KeyedRef', Load(), lineno=186, col_offset=25), [Name('o', Load(), lineno=186, col_offset=34), Attribute(Name('self', Load(), lineno=186, col_offset=37), '_remove', Load(), lineno=186, col_offset=37), Name('key', Load(), lineno=186, col_offset=51)], [], None, None, lineno=186, col_offset=25), lineno=186, col_offset=16)], [], lineno=185, col_offset=12)], [], lineno=182, col_offset=8), If(Call(Name('len', Load(), lineno=187, col_offset=11), [Name('kwargs', Load(), lineno=187, col_offset=15)], [], None, None, lineno=187, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=12), 'update', Load(), lineno=188, col_offset=12), [Name('kwargs', Load(), lineno=188, col_offset=24)], [], None, None, lineno=188, col_offset=12), lineno=188, col_offset=12)], [], lineno=187, col_offset=8)], [], lineno=180, col_offset=4), FunctionDef('valuerefs', arguments([Name('self', Param(), lineno=190, col_offset=18)], None, None, []), [Expr(Str("Return a list of weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        ", lineno=199, col_offset=-1), lineno=199, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=200, col_offset=15), 'data', Load(), lineno=200, col_offset=15), 'values', Load(), lineno=200, col_offset=15), [], [], None, None, lineno=200, col_offset=15), lineno=200, col_offset=8)], [], lineno=190, col_offset=4), FunctionDef('values', arguments([Name('self', Param(), lineno=202, col_offset=15)], None, None, []), [Assign([Name('L', Store(), lineno=203, col_offset=8)], List([], Load(), lineno=203, col_offset=12), lineno=203, col_offset=8), For(Name('wr', Store(), lineno=204, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=204, col_offset=18), 'data', Load(), lineno=204, col_offset=18), 'values', Load(), lineno=204, col_offset=18), [], [], None, None, lineno=204, col_offset=18), [Assign([Name('o', Store(), lineno=205, col_offset=12)], Call(Name('wr', Load(), lineno=205, col_offset=16), [], [], None, None, lineno=205, col_offset=16), lineno=205, col_offset=12), If(Compare(Name('o', Load(), lineno=206, col_offset=15), [IsNot()], [Name('None', Load(), lineno=206, col_offset=24)], lineno=206, col_offset=15), [Expr(Call(Attribute(Name('L', Load(), lineno=207, col_offset=16), 'append', Load(), lineno=207, col_offset=16), [Name('o', Load(), lineno=207, col_offset=25)], [], None, None, lineno=207, col_offset=16), lineno=207, col_offset=16)], [], lineno=206, col_offset=12)], [], lineno=204, col_offset=8), Return(Name('L', Load(), lineno=208, col_offset=15), lineno=208, col_offset=8)], [], lineno=202, col_offset=4)], [], lineno=35, col_offset=0), ClassDef('KeyedRef', [Name('ref', Load(), lineno=211, col_offset=15)], [Expr(Str("Specialized reference that includes a key corresponding to the value.\n\n    This is used in the WeakValueDictionary to avoid having to create\n    a function object for each key stored in the mapping.  A shared\n    callback object can use the 'key' attribute of a KeyedRef instead\n    of getting a reference to the key from an enclosing scope.\n\n    ", lineno=219, col_offset=-1), lineno=219, col_offset=-1), Assign([Name('__slots__', Store(), lineno=221, col_offset=4)], Tuple([Str('key', lineno=221, col_offset=16)], Load(), lineno=221, col_offset=16), lineno=221, col_offset=4), FunctionDef('__new__', arguments([Name('type', Param(), lineno=223, col_offset=16), Name('ob', Param(), lineno=223, col_offset=22), Name('callback', Param(), lineno=223, col_offset=26), Name('key', Param(), lineno=223, col_offset=36)], None, None, []), [Assign([Name('self', Store(), lineno=224, col_offset=8)], Call(Attribute(Name('ref', Load(), lineno=224, col_offset=15), '__new__', Load(), lineno=224, col_offset=15), [Name('type', Load(), lineno=224, col_offset=27), Name('ob', Load(), lineno=224, col_offset=33), Name('callback', Load(), lineno=224, col_offset=37)], [], None, None, lineno=224, col_offset=15), lineno=224, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=225, col_offset=8), 'key', Store(), lineno=225, col_offset=8)], Name('key', Load(), lineno=225, col_offset=19), lineno=225, col_offset=8), Return(Name('self', Load(), lineno=226, col_offset=15), lineno=226, col_offset=8)], [], lineno=223, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=228, col_offset=17), Name('ob', Param(), lineno=228, col_offset=23), Name('callback', Param(), lineno=228, col_offset=27), Name('key', Param(), lineno=228, col_offset=37)], None, None, []), [Expr(Call(Attribute(Call(Name('super', Load(), lineno=229, col_offset=8), [Name('KeyedRef', Load(), lineno=229, col_offset=14), Name('self', Load(), lineno=229, col_offset=25)], [], None, None, lineno=229, col_offset=8), '__init__', Load(), lineno=229, col_offset=8), [Name('ob', Load(), lineno=229, col_offset=40), Name('callback', Load(), lineno=229, col_offset=44)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=228, col_offset=4)], [], lineno=211, col_offset=0), ClassDef('WeakKeyDictionary', [Attribute(Name('UserDict', Load(), lineno=232, col_offset=24), 'UserDict', Load(), lineno=232, col_offset=24)], [Expr(Str(' Mapping class that references keys weakly.\n\n    Entries in the dictionary will be discarded when there is no\n    longer a strong reference to the key. This can be used to\n    associate additional data with an object owned by other parts of\n    an application without adding attributes to those objects. This\n    can be especially useful with objects that override attribute\n    accesses.\n    ', lineno=241, col_offset=-1), lineno=241, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=243, col_offset=17), Name('dict', Param(), lineno=243, col_offset=23)], None, None, [Name('None', Load(), lineno=243, col_offset=28)]), [Assign([Attribute(Name('self', Load(), lineno=244, col_offset=8), 'data', Store(), lineno=244, col_offset=8)], Dict([], [], lineno=244, col_offset=20), lineno=244, col_offset=8), FunctionDef('remove', arguments([Name('k', Param(), lineno=245, col_offset=19), Name('selfref', Param(), lineno=245, col_offset=22)], None, None, [Call(Name('ref', Load(), lineno=245, col_offset=30), [Name('self', Load(), lineno=245, col_offset=34)], [], None, None, lineno=245, col_offset=30)]), [Assign([Name('self', Store(), lineno=246, col_offset=12)], Call(Name('selfref', Load(), lineno=246, col_offset=19), [], [], None, None, lineno=246, col_offset=19), lineno=246, col_offset=12), If(Compare(Name('self', Load(), lineno=247, col_offset=15), [IsNot()], [Name('None', Load(), lineno=247, col_offset=27)], lineno=247, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=248, col_offset=20), 'data', Load(), lineno=248, col_offset=20), Index(Name('k', Load(), lineno=248, col_offset=30)), Del(), lineno=248, col_offset=20)], lineno=248, col_offset=16)], [], lineno=247, col_offset=12)], [], lineno=245, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=249, col_offset=8), '_remove', Store(), lineno=249, col_offset=8)], Name('remove', Load(), lineno=249, col_offset=23), lineno=249, col_offset=8), If(Compare(Name('dict', Load(), lineno=250, col_offset=11), [IsNot()], [Name('None', Load(), lineno=250, col_offset=23)], lineno=250, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=29), 'update', Load(), lineno=250, col_offset=29), [Name('dict', Load(), lineno=250, col_offset=41)], [], None, None, lineno=250, col_offset=29), lineno=250, col_offset=29)], [], lineno=250, col_offset=8)], [], lineno=243, col_offset=4), FunctionDef('__delitem__', arguments([Name('self', Param(), lineno=252, col_offset=20), Name('key', Param(), lineno=252, col_offset=26)], None, None, []), [Delete([Subscript(Attribute(Name('self', Load(), lineno=253, col_offset=12), 'data', Load(), lineno=253, col_offset=12), Index(Call(Name('ref', Load(), lineno=253, col_offset=22), [Name('key', Load(), lineno=253, col_offset=26)], [], None, None, lineno=253, col_offset=22)), Del(), lineno=253, col_offset=12)], lineno=253, col_offset=8)], [], lineno=252, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=255, col_offset=20), Name('key', Param(), lineno=255, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=256, col_offset=15), 'data', Load(), lineno=256, col_offset=15), Index(Call(Name('ref', Load(), lineno=256, col_offset=25), [Name('key', Load(), lineno=256, col_offset=29)], [], None, None, lineno=256, col_offset=25)), Load(), lineno=256, col_offset=15), lineno=256, col_offset=8)], [], lineno=255, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=258, col_offset=17)], None, None, []), [Return(BinOp(Str('<WeakKeyDictionary at %s>', lineno=259, col_offset=15), Mod(), Call(Name('id', Load(), lineno=259, col_offset=45), [Name('self', Load(), lineno=259, col_offset=48)], [], None, None, lineno=259, col_offset=45), lineno=259, col_offset=15), lineno=259, col_offset=8)], [], lineno=258, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=261, col_offset=20), Name('key', Param(), lineno=261, col_offset=26), Name('value', Param(), lineno=261, col_offset=31)], None, None, []), [Assign([Subscript(Attribute(Name('self', Load(), lineno=262, col_offset=8), 'data', Load(), lineno=262, col_offset=8), Index(Call(Name('ref', Load(), lineno=262, col_offset=18), [Name('key', Load(), lineno=262, col_offset=22), Attribute(Name('self', Load(), lineno=262, col_offset=27), '_remove', Load(), lineno=262, col_offset=27)], [], None, None, lineno=262, col_offset=18)), Store(), lineno=262, col_offset=8)], Name('value', Load(), lineno=262, col_offset=44), lineno=262, col_offset=8)], [], lineno=261, col_offset=4), FunctionDef('copy', arguments([Name('self', Param(), lineno=264, col_offset=13)], None, None, []), [Assign([Name('new', Store(), lineno=265, col_offset=8)], Call(Name('WeakKeyDictionary', Load(), lineno=265, col_offset=14), [], [], None, None, lineno=265, col_offset=14), lineno=265, col_offset=8), For(Tuple([Name('key', Store(), lineno=266, col_offset=12), Name('value', Store(), lineno=266, col_offset=17)], Store(), lineno=266, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=266, col_offset=26), 'data', Load(), lineno=266, col_offset=26), 'items', Load(), lineno=266, col_offset=26), [], [], None, None, lineno=266, col_offset=26), [Assign([Name('o', Store(), lineno=267, col_offset=12)], Call(Name('key', Load(), lineno=267, col_offset=16), [], [], None, None, lineno=267, col_offset=16), lineno=267, col_offset=12), If(Compare(Name('o', Load(), lineno=268, col_offset=15), [IsNot()], [Name('None', Load(), lineno=268, col_offset=24)], lineno=268, col_offset=15), [Assign([Subscript(Name('new', Load(), lineno=269, col_offset=16), Index(Name('o', Load(), lineno=269, col_offset=20)), Store(), lineno=269, col_offset=16)], Name('value', Load(), lineno=269, col_offset=25), lineno=269, col_offset=16)], [], lineno=268, col_offset=12)], [], lineno=266, col_offset=8), Return(Name('new', Load(), lineno=270, col_offset=15), lineno=270, col_offset=8)], [], lineno=264, col_offset=4), Assign([Name('__copy__', Store(), lineno=272, col_offset=4)], Name('copy', Load(), lineno=272, col_offset=15), lineno=272, col_offset=4), FunctionDef('__deepcopy__', arguments([Name('self', Param(), lineno=274, col_offset=21), Name('memo', Param(), lineno=274, col_offset=27)], None, None, []), [ImportFrom('copy', [alias('deepcopy', None)], 0, lineno=275, col_offset=8), Assign([Name('new', Store(), lineno=276, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=276, col_offset=14), '__class__', Load(), lineno=276, col_offset=14), [], [], None, None, lineno=276, col_offset=14), lineno=276, col_offset=8), For(Tuple([Name('key', Store(), lineno=277, col_offset=12), Name('value', Store(), lineno=277, col_offset=17)], Store(), lineno=277, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=277, col_offset=26), 'data', Load(), lineno=277, col_offset=26), 'items', Load(), lineno=277, col_offset=26), [], [], None, None, lineno=277, col_offset=26), [Assign([Name('o', Store(), lineno=278, col_offset=12)], Call(Name('key', Load(), lineno=278, col_offset=16), [], [], None, None, lineno=278, col_offset=16), lineno=278, col_offset=12), If(Compare(Name('o', Load(), lineno=279, col_offset=15), [IsNot()], [Name('None', Load(), lineno=279, col_offset=24)], lineno=279, col_offset=15), [Assign([Subscript(Name('new', Load(), lineno=280, col_offset=16), Index(Name('o', Load(), lineno=280, col_offset=20)), Store(), lineno=280, col_offset=16)], Call(Name('deepcopy', Load(), lineno=280, col_offset=25), [Name('value', Load(), lineno=280, col_offset=34), Name('memo', Load(), lineno=280, col_offset=41)], [], None, None, lineno=280, col_offset=25), lineno=280, col_offset=16)], [], lineno=279, col_offset=12)], [], lineno=277, col_offset=8), Return(Name('new', Load(), lineno=281, col_offset=15), lineno=281, col_offset=8)], [], lineno=274, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=283, col_offset=12), Name('key', Param(), lineno=283, col_offset=18), Name('default', Param(), lineno=283, col_offset=23)], None, None, [Name('None', Load(), lineno=283, col_offset=31)]), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=284, col_offset=15), 'data', Load(), lineno=284, col_offset=15), 'get', Load(), lineno=284, col_offset=15), [Call(Name('ref', Load(), lineno=284, col_offset=29), [Name('key', Load(), lineno=284, col_offset=33)], [], None, None, lineno=284, col_offset=29), Name('default', Load(), lineno=284, col_offset=38)], [], None, None, lineno=284, col_offset=15), lineno=284, col_offset=8)], [], lineno=283, col_offset=4), FunctionDef('has_key', arguments([Name('self', Param(), lineno=286, col_offset=16), Name('key', Param(), lineno=286, col_offset=22)], None, None, []), [TryExcept([Assign([Name('wr', Store(), lineno=288, col_offset=12)], Call(Name('ref', Load(), lineno=288, col_offset=17), [Name('key', Load(), lineno=288, col_offset=21)], [], None, None, lineno=288, col_offset=17), lineno=288, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=289, col_offset=15), None, [Return(Num(0, lineno=290, col_offset=19), lineno=290, col_offset=12)], lineno=289, col_offset=8)], [], lineno=287, col_offset=8), Return(Compare(Name('wr', Load(), lineno=291, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=291, col_offset=21), 'data', Load(), lineno=291, col_offset=21)], lineno=291, col_offset=15), lineno=291, col_offset=8)], [], lineno=286, col_offset=4), FunctionDef('__contains__', arguments([Name('self', Param(), lineno=293, col_offset=21), Name('key', Param(), lineno=293, col_offset=27)], None, None, []), [TryExcept([Assign([Name('wr', Store(), lineno=295, col_offset=12)], Call(Name('ref', Load(), lineno=295, col_offset=17), [Name('key', Load(), lineno=295, col_offset=21)], [], None, None, lineno=295, col_offset=17), lineno=295, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=296, col_offset=15), None, [Return(Num(0, lineno=297, col_offset=19), lineno=297, col_offset=12)], lineno=296, col_offset=8)], [], lineno=294, col_offset=8), Return(Compare(Name('wr', Load(), lineno=298, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=298, col_offset=21), 'data', Load(), lineno=298, col_offset=21)], lineno=298, col_offset=15), lineno=298, col_offset=8)], [], lineno=293, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=300, col_offset=14)], None, None, []), [Assign([Name('L', Store(), lineno=301, col_offset=8)], List([], Load(), lineno=301, col_offset=12), lineno=301, col_offset=8), For(Tuple([Name('key', Store(), lineno=302, col_offset=12), Name('value', Store(), lineno=302, col_offset=17)], Store(), lineno=302, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=302, col_offset=26), 'data', Load(), lineno=302, col_offset=26), 'items', Load(), lineno=302, col_offset=26), [], [], None, None, lineno=302, col_offset=26), [Assign([Name('o', Store(), lineno=303, col_offset=12)], Call(Name('key', Load(), lineno=303, col_offset=16), [], [], None, None, lineno=303, col_offset=16), lineno=303, col_offset=12), If(Compare(Name('o', Load(), lineno=304, col_offset=15), [IsNot()], [Name('None', Load(), lineno=304, col_offset=24)], lineno=304, col_offset=15), [Expr(Call(Attribute(Name('L', Load(), lineno=305, col_offset=16), 'append', Load(), lineno=305, col_offset=16), [Tuple([Name('o', Load(), lineno=305, col_offset=26), Name('value', Load(), lineno=305, col_offset=29)], Load(), lineno=305, col_offset=26)], [], None, None, lineno=305, col_offset=16), lineno=305, col_offset=16)], [], lineno=304, col_offset=12)], [], lineno=302, col_offset=8), Return(Name('L', Load(), lineno=306, col_offset=15), lineno=306, col_offset=8)], [], lineno=300, col_offset=4), FunctionDef('iteritems', arguments([Name('self', Param(), lineno=308, col_offset=18)], None, None, []), [For(Tuple([Name('wr', Store(), lineno=309, col_offset=12), Name('value', Store(), lineno=309, col_offset=16)], Store(), lineno=309, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=309, col_offset=25), 'data', Load(), lineno=309, col_offset=25), 'iteritems', Load(), lineno=309, col_offset=25), [], [], None, None, lineno=309, col_offset=25), [Assign([Name('key', Store(), lineno=310, col_offset=12)], Call(Name('wr', Load(), lineno=310, col_offset=18), [], [], None, None, lineno=310, col_offset=18), lineno=310, col_offset=12), If(Compare(Name('key', Load(), lineno=311, col_offset=15), [IsNot()], [Name('None', Load(), lineno=311, col_offset=26)], lineno=311, col_offset=15), [Expr(Yield(Tuple([Name('key', Load(), lineno=312, col_offset=22), Name('value', Load(), lineno=312, col_offset=27)], Load(), lineno=312, col_offset=22), lineno=312, col_offset=16), lineno=312, col_offset=16)], [], lineno=311, col_offset=12)], [], lineno=309, col_offset=8)], [], lineno=308, col_offset=4), FunctionDef('iterkeyrefs', arguments([Name('self', Param(), lineno=314, col_offset=20)], None, None, []), [Expr(Str("Return an iterator that yields the weak references to the keys.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the keys around longer than needed.\n\n        ", lineno=323, col_offset=-1), lineno=323, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=324, col_offset=15), 'data', Load(), lineno=324, col_offset=15), 'iterkeys', Load(), lineno=324, col_offset=15), [], [], None, None, lineno=324, col_offset=15), lineno=324, col_offset=8)], [], lineno=314, col_offset=4), FunctionDef('iterkeys', arguments([Name('self', Param(), lineno=326, col_offset=17)], None, None, []), [For(Name('wr', Store(), lineno=327, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=327, col_offset=18), 'data', Load(), lineno=327, col_offset=18), 'iterkeys', Load(), lineno=327, col_offset=18), [], [], None, None, lineno=327, col_offset=18), [Assign([Name('obj', Store(), lineno=328, col_offset=12)], Call(Name('wr', Load(), lineno=328, col_offset=18), [], [], None, None, lineno=328, col_offset=18), lineno=328, col_offset=12), If(Compare(Name('obj', Load(), lineno=329, col_offset=15), [IsNot()], [Name('None', Load(), lineno=329, col_offset=26)], lineno=329, col_offset=15), [Expr(Yield(Name('obj', Load(), lineno=330, col_offset=22), lineno=330, col_offset=16), lineno=330, col_offset=16)], [], lineno=329, col_offset=12)], [], lineno=327, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=332, col_offset=17)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=333, col_offset=15), 'iterkeys', Load(), lineno=333, col_offset=15), [], [], None, None, lineno=333, col_offset=15), lineno=333, col_offset=8)], [], lineno=332, col_offset=4), FunctionDef('itervalues', arguments([Name('self', Param(), lineno=335, col_offset=19)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=336, col_offset=15), 'data', Load(), lineno=336, col_offset=15), 'itervalues', Load(), lineno=336, col_offset=15), [], [], None, None, lineno=336, col_offset=15), lineno=336, col_offset=8)], [], lineno=335, col_offset=4), FunctionDef('keyrefs', arguments([Name('self', Param(), lineno=338, col_offset=16)], None, None, []), [Expr(Str("Return a list of weak references to the keys.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the keys around longer than needed.\n\n        ", lineno=347, col_offset=-1), lineno=347, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=348, col_offset=15), 'data', Load(), lineno=348, col_offset=15), 'keys', Load(), lineno=348, col_offset=15), [], [], None, None, lineno=348, col_offset=15), lineno=348, col_offset=8)], [], lineno=338, col_offset=4), FunctionDef('keys', arguments([Name('self', Param(), lineno=350, col_offset=13)], None, None, []), [Assign([Name('L', Store(), lineno=351, col_offset=8)], List([], Load(), lineno=351, col_offset=12), lineno=351, col_offset=8), For(Name('wr', Store(), lineno=352, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=352, col_offset=18), 'data', Load(), lineno=352, col_offset=18), 'keys', Load(), lineno=352, col_offset=18), [], [], None, None, lineno=352, col_offset=18), [Assign([Name('o', Store(), lineno=353, col_offset=12)], Call(Name('wr', Load(), lineno=353, col_offset=16), [], [], None, None, lineno=353, col_offset=16), lineno=353, col_offset=12), If(Compare(Name('o', Load(), lineno=354, col_offset=15), [IsNot()], [Name('None', Load(), lineno=354, col_offset=24)], lineno=354, col_offset=15), [Expr(Call(Attribute(Name('L', Load(), lineno=355, col_offset=16), 'append', Load(), lineno=355, col_offset=16), [Name('o', Load(), lineno=355, col_offset=25)], [], None, None, lineno=355, col_offset=16), lineno=355, col_offset=16)], [], lineno=354, col_offset=12)], [], lineno=352, col_offset=8), Return(Name('L', Load(), lineno=356, col_offset=15), lineno=356, col_offset=8)], [], lineno=350, col_offset=4), FunctionDef('popitem', arguments([Name('self', Param(), lineno=358, col_offset=16)], None, None, []), [While(Num(1, lineno=359, col_offset=14), [Assign([Tuple([Name('key', Store(), lineno=360, col_offset=12), Name('value', Store(), lineno=360, col_offset=17)], Store(), lineno=360, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=360, col_offset=25), 'data', Load(), lineno=360, col_offset=25), 'popitem', Load(), lineno=360, col_offset=25), [], [], None, None, lineno=360, col_offset=25), lineno=360, col_offset=12), Assign([Name('o', Store(), lineno=361, col_offset=12)], Call(Name('key', Load(), lineno=361, col_offset=16), [], [], None, None, lineno=361, col_offset=16), lineno=361, col_offset=12), If(Compare(Name('o', Load(), lineno=362, col_offset=15), [IsNot()], [Name('None', Load(), lineno=362, col_offset=24)], lineno=362, col_offset=15), [Return(Tuple([Name('o', Load(), lineno=363, col_offset=23), Name('value', Load(), lineno=363, col_offset=26)], Load(), lineno=363, col_offset=23), lineno=363, col_offset=16)], [], lineno=362, col_offset=12)], [], lineno=359, col_offset=8)], [], lineno=358, col_offset=4), FunctionDef('pop', arguments([Name('self', Param(), lineno=365, col_offset=12), Name('key', Param(), lineno=365, col_offset=18)], 'args', None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=366, col_offset=15), 'data', Load(), lineno=366, col_offset=15), 'pop', Load(), lineno=366, col_offset=15), [Call(Name('ref', Load(), lineno=366, col_offset=29), [Name('key', Load(), lineno=366, col_offset=33)], [], None, None, lineno=366, col_offset=29)], [], Name('args', Load(), lineno=366, col_offset=40), None, lineno=366, col_offset=15), lineno=366, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('setdefault', arguments([Name('self', Param(), lineno=368, col_offset=19), Name('key', Param(), lineno=368, col_offset=25), Name('default', Param(), lineno=368, col_offset=30)], None, None, [Name('None', Load(), lineno=368, col_offset=38)]), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=15), 'data', Load(), lineno=369, col_offset=15), 'setdefault', Load(), lineno=369, col_offset=15), [Call(Name('ref', Load(), lineno=369, col_offset=36), [Name('key', Load(), lineno=369, col_offset=40), Attribute(Name('self', Load(), lineno=369, col_offset=45), '_remove', Load(), lineno=369, col_offset=45)], [], None, None, lineno=369, col_offset=36), Name('default', Load(), lineno=369, col_offset=59)], [], None, None, lineno=369, col_offset=15), lineno=369, col_offset=8)], [], lineno=368, col_offset=4), FunctionDef('update', arguments([Name('self', Param(), lineno=371, col_offset=15), Name('dict', Param(), lineno=371, col_offset=21)], None, 'kwargs', [Name('None', Load(), lineno=371, col_offset=26)]), [Assign([Name('d', Store(), lineno=372, col_offset=8)], Attribute(Name('self', Load(), lineno=372, col_offset=12), 'data', Load(), lineno=372, col_offset=12), lineno=372, col_offset=8), If(Compare(Name('dict', Load(), lineno=373, col_offset=11), [IsNot()], [Name('None', Load(), lineno=373, col_offset=23)], lineno=373, col_offset=11), [If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=374, col_offset=19), [Name('dict', Load(), lineno=374, col_offset=27), Str('items', lineno=374, col_offset=33)], [], None, None, lineno=374, col_offset=19), lineno=374, col_offset=15), [Assign([Name('dict', Store(), lineno=375, col_offset=16)], Call(Call(Name('type', Load(), lineno=375, col_offset=23), [Dict([], [], lineno=375, col_offset=28)], [], None, None, lineno=375, col_offset=23), [Name('dict', Load(), lineno=375, col_offset=32)], [], None, None, lineno=375, col_offset=23), lineno=375, col_offset=16)], [], lineno=374, col_offset=12), For(Tuple([Name('key', Store(), lineno=376, col_offset=16), Name('value', Store(), lineno=376, col_offset=21)], Store(), lineno=376, col_offset=16), Call(Attribute(Name('dict', Load(), lineno=376, col_offset=30), 'items', Load(), lineno=376, col_offset=30), [], [], None, None, lineno=376, col_offset=30), [Assign([Subscript(Name('d', Load(), lineno=377, col_offset=16), Index(Call(Name('ref', Load(), lineno=377, col_offset=18), [Name('key', Load(), lineno=377, col_offset=22), Attribute(Name('self', Load(), lineno=377, col_offset=27), '_remove', Load(), lineno=377, col_offset=27)], [], None, None, lineno=377, col_offset=18)), Store(), lineno=377, col_offset=16)], Name('value', Load(), lineno=377, col_offset=44), lineno=377, col_offset=16)], [], lineno=376, col_offset=12)], [], lineno=373, col_offset=8), If(Call(Name('len', Load(), lineno=378, col_offset=11), [Name('kwargs', Load(), lineno=378, col_offset=15)], [], None, None, lineno=378, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=12), 'update', Load(), lineno=379, col_offset=12), [Name('kwargs', Load(), lineno=379, col_offset=24)], [], None, None, lineno=379, col_offset=12), lineno=379, col_offset=12)], [], lineno=378, col_offset=8)], [], lineno=371, col_offset=4)], [], lineno=232, col_offset=0)])
