Module([Expr(Str('\nThis script is used to build the "official unofficial" universal build on\nMac OS X. It requires Mac OS X 10.4, Xcode 2.2 and the 10.4u SDK to do its\nwork.  64-bit or four-way universal builds require at least OS X 10.5 and\nthe 10.5 SDK.\n\nPlease ensure that this script keeps working with Python 2.3, to avoid\nbootstrap issues (/usr/bin/python is Python 2.3 on OSX 10.4)\n\nUsage: see USAGE variable in the script.\n', lineno=12, col_offset=-1), lineno=12, col_offset=-1), Import([alias('platform', None), alias('os', None), alias('sys', None), alias('getopt', None), alias('textwrap', None), alias('shutil', None), alias('urllib2', None), alias('stat', None), alias('time', None), alias('pwd', None)], lineno=13, col_offset=0), Import([alias('grp', None)], lineno=14, col_offset=0), Assign([Name('INCLUDE_TIMESTAMP', Store(), lineno=16, col_offset=0)], Num(1, lineno=16, col_offset=20), lineno=16, col_offset=0), Assign([Name('VERBOSE', Store(), lineno=17, col_offset=0)], Num(1, lineno=17, col_offset=10), lineno=17, col_offset=0), ImportFrom('plistlib', [alias('Plist', None)], 0, lineno=19, col_offset=0), Import([alias('MacOS', None)], lineno=21, col_offset=0), TryExcept([ImportFrom('plistlib', [alias('writePlist', None)], 0, lineno=24, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=25, col_offset=7), None, [FunctionDef('writePlist', arguments([Name('plist', Param(), lineno=27, col_offset=19), Name('path', Param(), lineno=27, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('plist', Load(), lineno=28, col_offset=8), 'write', Load(), lineno=28, col_offset=8), [Name('path', Load(), lineno=28, col_offset=20)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8)], [], lineno=27, col_offset=4)], lineno=25, col_offset=0)], [], lineno=23, col_offset=0), FunctionDef('shellQuote', arguments([Name('value', Param(), lineno=30, col_offset=15)], None, None, []), [Expr(Str('\n    Return the string value in a form that can safely be inserted into\n    a shell command.\n    ', lineno=34, col_offset=-1), lineno=34, col_offset=-1), Return(BinOp(Str("'%s'", lineno=35, col_offset=11), Mod(), Call(Attribute(Name('value', Load(), lineno=35, col_offset=19), 'replace', Load(), lineno=35, col_offset=19), [Str("'", lineno=35, col_offset=33), Str('\'"\'"\'', lineno=35, col_offset=38)], [], None, None, lineno=35, col_offset=19), lineno=35, col_offset=11), lineno=35, col_offset=4)], [], lineno=30, col_offset=0), FunctionDef('grepValue', arguments([Name('fn', Param(), lineno=37, col_offset=14), Name('variable', Param(), lineno=37, col_offset=18)], None, None, []), [Assign([Name('variable', Store(), lineno=38, col_offset=4)], BinOp(Name('variable', Load(), lineno=38, col_offset=15), Add(), Str('=', lineno=38, col_offset=26), lineno=38, col_offset=15), lineno=38, col_offset=4), For(Name('ln', Store(), lineno=39, col_offset=8), Call(Name('open', Load(), lineno=39, col_offset=14), [Name('fn', Load(), lineno=39, col_offset=19), Str('r', lineno=39, col_offset=23)], [], None, None, lineno=39, col_offset=14), [If(Call(Attribute(Name('ln', Load(), lineno=40, col_offset=11), 'startswith', Load(), lineno=40, col_offset=11), [Name('variable', Load(), lineno=40, col_offset=25)], [], None, None, lineno=40, col_offset=11), [Assign([Name('value', Store(), lineno=41, col_offset=12)], Call(Attribute(Subscript(Name('ln', Load(), lineno=41, col_offset=20), Slice(Call(Name('len', Load(), lineno=41, col_offset=23), [Name('variable', Load(), lineno=41, col_offset=27)], [], None, None, lineno=41, col_offset=23), None, None), Load(), lineno=41, col_offset=20), 'strip', Load(), lineno=41, col_offset=20), [], [], None, None, lineno=41, col_offset=20), lineno=41, col_offset=12), Return(Subscript(Name('value', Load(), lineno=42, col_offset=19), Slice(Num(1, lineno=42, col_offset=25), Num(-1, lineno=42, col_offset=28), None), Load(), lineno=42, col_offset=19), lineno=42, col_offset=12)], [], lineno=40, col_offset=8)], [], lineno=39, col_offset=4)], [], lineno=37, col_offset=0), FunctionDef('getVersion', arguments([], None, None, []), [Return(Call(Name('grepValue', Load(), lineno=45, col_offset=11), [Call(Attribute(Attribute(Name('os', Load(), lineno=45, col_offset=21), 'path', Load(), lineno=45, col_offset=21), 'join', Load(), lineno=45, col_offset=21), [Name('SRCDIR', Load(), lineno=45, col_offset=34), Str('configure', lineno=45, col_offset=42)], [], None, None, lineno=45, col_offset=21), Str('PACKAGE_VERSION', lineno=45, col_offset=56)], [], None, None, lineno=45, col_offset=11), lineno=45, col_offset=4)], [], lineno=44, col_offset=0), FunctionDef('getFullVersion', arguments([], None, None, []), [Assign([Name('fn', Store(), lineno=48, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=48, col_offset=9), 'path', Load(), lineno=48, col_offset=9), 'join', Load(), lineno=48, col_offset=9), [Name('SRCDIR', Load(), lineno=48, col_offset=22), Str('Include', lineno=48, col_offset=30), Str('patchlevel.h', lineno=48, col_offset=41)], [], None, None, lineno=48, col_offset=9), lineno=48, col_offset=4), For(Name('ln', Store(), lineno=49, col_offset=8), Call(Name('open', Load(), lineno=49, col_offset=14), [Name('fn', Load(), lineno=49, col_offset=19)], [], None, None, lineno=49, col_offset=14), [If(Compare(Str('PY_VERSION', lineno=50, col_offset=11), [In()], [Name('ln', Load(), lineno=50, col_offset=27)], lineno=50, col_offset=11), [Return(Subscript(Subscript(Call(Attribute(Name('ln', Load(), lineno=51, col_offset=19), 'split', Load(), lineno=51, col_offset=19), [], [], None, None, lineno=51, col_offset=19), Index(Num(-1, lineno=51, col_offset=31)), Load(), lineno=51, col_offset=19), Slice(Num(1, lineno=51, col_offset=34), Num(-1, lineno=51, col_offset=37), None), Load(), lineno=51, col_offset=19), lineno=51, col_offset=12)], [], lineno=50, col_offset=8)], [], lineno=49, col_offset=4), Raise(Name('RuntimeError', Load(), lineno=53, col_offset=10), Str('Cannot find full version??', lineno=53, col_offset=24), None, lineno=53, col_offset=4)], [], lineno=47, col_offset=0), Assign([Name('WORKDIR', Store(), lineno=56, col_offset=0)], Str('/tmp/_py', lineno=56, col_offset=10), lineno=56, col_offset=0), Assign([Name('DEPSRC', Store(), lineno=60, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=60, col_offset=9), 'path', Load(), lineno=60, col_offset=9), 'join', Load(), lineno=60, col_offset=9), [Name('WORKDIR', Load(), lineno=60, col_offset=22), Str('third-party', lineno=60, col_offset=31)], [], None, None, lineno=60, col_offset=9), lineno=60, col_offset=0), Assign([Name('DEPSRC', Store(), lineno=61, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=61, col_offset=9), 'path', Load(), lineno=61, col_offset=9), 'expanduser', Load(), lineno=61, col_offset=9), [Str('~/Universal/other-sources', lineno=61, col_offset=28)], [], None, None, lineno=61, col_offset=9), lineno=61, col_offset=0), Assign([Name('SDKPATH', Store(), lineno=78, col_offset=0)], Str('/Developer/SDKs/MacOSX10.4u.sdk', lineno=78, col_offset=10), lineno=78, col_offset=0), Assign([Name('universal_opts_map', Store(), lineno=80, col_offset=0)], Dict([Str('32-bit', lineno=80, col_offset=23), Str('64-bit', lineno=81, col_offset=23), Str('intel', lineno=82, col_offset=23), Str('3-way', lineno=83, col_offset=23), Str('all', lineno=84, col_offset=23)], [Tuple([Str('i386', lineno=80, col_offset=34), Str('ppc', lineno=80, col_offset=42)], Load(), lineno=80, col_offset=34), Tuple([Str('x86_64', lineno=81, col_offset=34), Str('ppc64', lineno=81, col_offset=44)], Load(), lineno=81, col_offset=34), Tuple([Str('i386', lineno=82, col_offset=34), Str('x86_64', lineno=82, col_offset=42)], Load(), lineno=82, col_offset=34), Tuple([Str('ppc', lineno=83, col_offset=34), Str('i386', lineno=83, col_offset=41), Str('x86_64', lineno=83, col_offset=49)], Load(), lineno=83, col_offset=34), Tuple([Str('i386', lineno=84, col_offset=34), Str('ppc', lineno=84, col_offset=42), Str('x86_64', lineno=84, col_offset=49), Str('ppc64', lineno=84, col_offset=59)], Load(), lineno=84, col_offset=34)], lineno=80, col_offset=21), lineno=80, col_offset=0), Assign([Name('default_target_map', Store(), lineno=85, col_offset=0)], Dict([Str('64-bit', lineno=86, col_offset=8), Str('3-way', lineno=87, col_offset=8), Str('intel', lineno=88, col_offset=8), Str('all', lineno=89, col_offset=8)], [Str('10.5', lineno=86, col_offset=18), Str('10.5', lineno=87, col_offset=17), Str('10.5', lineno=88, col_offset=17), Str('10.5', lineno=89, col_offset=15)], lineno=85, col_offset=21), lineno=85, col_offset=0), Assign([Name('UNIVERSALOPTS', Store(), lineno=92, col_offset=0)], Call(Name('tuple', Load(), lineno=92, col_offset=16), [Call(Attribute(Name('universal_opts_map', Load(), lineno=92, col_offset=22), 'keys', Load(), lineno=92, col_offset=22), [], [], None, None, lineno=92, col_offset=22)], [], None, None, lineno=92, col_offset=16), lineno=92, col_offset=0), Assign([Name('UNIVERSALARCHS', Store(), lineno=94, col_offset=0)], Str('32-bit', lineno=94, col_offset=17), lineno=94, col_offset=0), Assign([Name('ARCHLIST', Store(), lineno=96, col_offset=0)], Subscript(Name('universal_opts_map', Load(), lineno=96, col_offset=11), Index(Name('UNIVERSALARCHS', Load(), lineno=96, col_offset=30)), Load(), lineno=96, col_offset=11), lineno=96, col_offset=0), Assign([Name('SRCDIR', Store(), lineno=99, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=99, col_offset=9), 'path', Load(), lineno=99, col_offset=9), 'dirname', Load(), lineno=99, col_offset=9), [Call(Attribute(Attribute(Name('os', Load(), lineno=100, col_offset=8), 'path', Load(), lineno=100, col_offset=8), 'dirname', Load(), lineno=100, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=101, col_offset=12), 'path', Load(), lineno=101, col_offset=12), 'dirname', Load(), lineno=101, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=102, col_offset=16), 'path', Load(), lineno=102, col_offset=16), 'abspath', Load(), lineno=102, col_offset=16), [Name('__file__', Load(), lineno=102, col_offset=32)], [], None, None, lineno=102, col_offset=16)], [], None, None, lineno=101, col_offset=12)], [], None, None, lineno=100, col_offset=8)], [], None, None, lineno=99, col_offset=9), lineno=99, col_offset=0), Assign([Name('DEPTARGET', Store(), lineno=106, col_offset=0)], Str('10.3', lineno=106, col_offset=12), lineno=106, col_offset=0), Assign([Name('target_cc_map', Store(), lineno=108, col_offset=0)], Dict([Str('10.3', lineno=109, col_offset=8), Str('10.4', lineno=110, col_offset=8), Str('10.5', lineno=111, col_offset=8), Str('10.6', lineno=112, col_offset=8)], [Str('gcc-4.0', lineno=109, col_offset=16), Str('gcc-4.0', lineno=110, col_offset=16), Str('gcc-4.0', lineno=111, col_offset=16), Str('gcc-4.2', lineno=112, col_offset=16)], lineno=108, col_offset=16), lineno=108, col_offset=0), Assign([Name('CC', Store(), lineno=115, col_offset=0)], Subscript(Name('target_cc_map', Load(), lineno=115, col_offset=5), Index(Name('DEPTARGET', Load(), lineno=115, col_offset=19)), Load(), lineno=115, col_offset=5), lineno=115, col_offset=0), Assign([Name('USAGE', Store(), lineno=117, col_offset=0)], BinOp(Call(Attribute(Name('textwrap', Load(), lineno=117, col_offset=8), 'dedent', Load(), lineno=117, col_offset=8), [Str('    Usage: build_python [options]\n\n    Options:\n    -? or -h:            Show this message\n    -b DIR\n    --build-dir=DIR:     Create build here (default: %(WORKDIR)r)\n    --third-party=DIR:   Store third-party sources here (default: %(DEPSRC)r)\n    --sdk-path=DIR:      Location of the SDK (default: %(SDKPATH)r)\n    --src-dir=DIR:       Location of the Python sources (default: %(SRCDIR)r)\n    --dep-target=10.n    OS X deployment target (default: %(DEPTARGET)r)\n    --universal-archs=x  universal architectures (options: %(UNIVERSALOPTS)r, default: %(UNIVERSALARCHS)r)\n', lineno=129, col_offset=-1)], [], None, None, lineno=117, col_offset=8), Mod(), Call(Name('globals', Load(), lineno=129, col_offset=6), [], [], None, None, lineno=129, col_offset=6), lineno=117, col_offset=8), lineno=117, col_offset=0), FunctionDef('library_recipes', arguments([], None, None, []), [Assign([Name('result', Store(), lineno=137, col_offset=4)], List([], Load(), lineno=137, col_offset=13), lineno=137, col_offset=4), If(Compare(Name('DEPTARGET', Load(), lineno=139, col_offset=7), [Lt()], [Str('10.5', lineno=139, col_offset=19)], lineno=139, col_offset=7), [Expr(Call(Attribute(Name('result', Load(), lineno=140, col_offset=8), 'extend', Load(), lineno=140, col_offset=8), [List([Call(Name('dict', Load(), lineno=141, col_offset=10), [], [keyword('name', Str('Bzip2 1.0.5', lineno=142, col_offset=19)), keyword('url', Str('http://www.bzip.org/1.0.5/bzip2-1.0.5.tar.gz', lineno=143, col_offset=18)), keyword('checksum', Str('3c15a0c8d1d3ee1c46a1634d00617b1a', lineno=144, col_offset=23)), keyword('configure', Name('None', Load(), lineno=145, col_offset=24)), keyword('install', BinOp(Str('make install CC=%s PREFIX=%s/usr/local/ CFLAGS="-arch %s -isysroot %s"', lineno=146, col_offset=22), Mod(), Tuple([Name('CC', Load(), lineno=147, col_offset=18), Call(Name('shellQuote', Load(), lineno=148, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=148, col_offset=29), 'path', Load(), lineno=148, col_offset=29), 'join', Load(), lineno=148, col_offset=29), [Name('WORKDIR', Load(), lineno=148, col_offset=42), Str('libraries', lineno=148, col_offset=51)], [], None, None, lineno=148, col_offset=29)], [], None, None, lineno=148, col_offset=18), Call(Attribute(Str(' -arch ', lineno=149, col_offset=18), 'join', Load(), lineno=149, col_offset=18), [Name('ARCHLIST', Load(), lineno=149, col_offset=33)], [], None, None, lineno=149, col_offset=18), Name('SDKPATH', Load(), lineno=150, col_offset=18)], Load(), lineno=147, col_offset=18), lineno=146, col_offset=22))], None, None, lineno=141, col_offset=10), Call(Name('dict', Load(), lineno=153, col_offset=10), [], [keyword('name', Str('ZLib 1.2.3', lineno=154, col_offset=19)), keyword('url', Str('http://www.gzip.org/zlib/zlib-1.2.3.tar.gz', lineno=155, col_offset=18)), keyword('checksum', Str('debc62758716a169df9f62e6ab2bc634', lineno=156, col_offset=23)), keyword('configure', Name('None', Load(), lineno=157, col_offset=24)), keyword('install', BinOp(Str('make install CC=%s prefix=%s/usr/local/ CFLAGS="-arch %s -isysroot %s"', lineno=158, col_offset=22), Mod(), Tuple([Name('CC', Load(), lineno=159, col_offset=18), Call(Name('shellQuote', Load(), lineno=160, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=160, col_offset=29), 'path', Load(), lineno=160, col_offset=29), 'join', Load(), lineno=160, col_offset=29), [Name('WORKDIR', Load(), lineno=160, col_offset=42), Str('libraries', lineno=160, col_offset=51)], [], None, None, lineno=160, col_offset=29)], [], None, None, lineno=160, col_offset=18), Call(Attribute(Str(' -arch ', lineno=161, col_offset=18), 'join', Load(), lineno=161, col_offset=18), [Name('ARCHLIST', Load(), lineno=161, col_offset=33)], [], None, None, lineno=161, col_offset=18), Name('SDKPATH', Load(), lineno=162, col_offset=18)], Load(), lineno=159, col_offset=18), lineno=158, col_offset=22))], None, None, lineno=153, col_offset=10), Call(Name('dict', Load(), lineno=165, col_offset=10), [], [keyword('name', Str('GNU Readline 5.1.4', lineno=167, col_offset=19)), keyword('url', Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1.tar.gz', lineno=168, col_offset=18)), keyword('checksum', Str('7ee5a692db88b30ca48927a13fd60e46', lineno=169, col_offset=23)), keyword('patchlevel', Str('0', lineno=170, col_offset=25)), keyword('patches', List([Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1-patches/readline51-001', lineno=174, col_offset=18), Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1-patches/readline51-002', lineno=175, col_offset=18), Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1-patches/readline51-003', lineno=176, col_offset=18), Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1-patches/readline51-004', lineno=177, col_offset=18)], Load(), lineno=171, col_offset=22))], None, None, lineno=165, col_offset=10), Call(Name('dict', Load(), lineno=180, col_offset=10), [], [keyword('name', Str('SQLite 3.6.11', lineno=181, col_offset=19)), keyword('url', Str('http://www.sqlite.org/sqlite-3.6.11.tar.gz', lineno=182, col_offset=18)), keyword('checksum', Str('7ebb099696ab76cc6ff65dd496d17858', lineno=183, col_offset=23)), keyword('configure_pre', List([Str('--enable-threadsafe', lineno=185, col_offset=18), Str('--enable-tempstore', lineno=186, col_offset=18), Str('--enable-shared=no', lineno=187, col_offset=18), Str('--enable-static=yes', lineno=188, col_offset=18), Str('--disable-tcl', lineno=189, col_offset=18)], Load(), lineno=184, col_offset=28))], None, None, lineno=180, col_offset=10), Call(Name('dict', Load(), lineno=192, col_offset=10), [], [keyword('name', Str('NCurses 5.5', lineno=193, col_offset=19)), keyword('url', Str('http://ftp.gnu.org/pub/gnu/ncurses/ncurses-5.5.tar.gz', lineno=194, col_offset=18)), keyword('checksum', Str('e73c1ac10b4bfc46db43b2ddfd6244ef', lineno=195, col_offset=23)), keyword('configure_pre', List([Str('--without-cxx', lineno=197, col_offset=18), Str('--without-ada', lineno=198, col_offset=18), Str('--without-progs', lineno=199, col_offset=18), Str('--without-curses-h', lineno=200, col_offset=18), Str('--enable-shared', lineno=201, col_offset=18), Str('--with-shared', lineno=202, col_offset=18), Str('--datadir=/usr/share', lineno=203, col_offset=18), Str('--sysconfdir=/etc', lineno=204, col_offset=18), Str('--sharedstatedir=/usr/com', lineno=205, col_offset=18), Str('--with-terminfo-dirs=/usr/share/terminfo', lineno=206, col_offset=18), Str('--with-default-terminfo-dir=/usr/share/terminfo', lineno=207, col_offset=18), BinOp(Str('--libdir=/Library/Frameworks/Python.framework/Versions/%s/lib', lineno=208, col_offset=18), Mod(), Tuple([Call(Name('getVersion', Load(), lineno=208, col_offset=83), [], [], None, None, lineno=208, col_offset=83)], Load(), lineno=208, col_offset=83), lineno=208, col_offset=18), Str('--enable-termcap', lineno=209, col_offset=18)], Load(), lineno=196, col_offset=28)), keyword('patches', List([Str('ncurses-5.5.patch', lineno=212, col_offset=18)], Load(), lineno=211, col_offset=22)), keyword('useLDFlags', Name('False', Load(), lineno=214, col_offset=25)), keyword('install', BinOp(Str('make && make install DESTDIR=%s && cd %s/usr/local/lib && ln -fs ../../../Library/Frameworks/Python.framework/Versions/%s/lib/lib* .', lineno=215, col_offset=22), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=216, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=216, col_offset=29), 'path', Load(), lineno=216, col_offset=29), 'join', Load(), lineno=216, col_offset=29), [Name('WORKDIR', Load(), lineno=216, col_offset=42), Str('libraries', lineno=216, col_offset=51)], [], None, None, lineno=216, col_offset=29)], [], None, None, lineno=216, col_offset=18), Call(Name('shellQuote', Load(), lineno=217, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=217, col_offset=29), 'path', Load(), lineno=217, col_offset=29), 'join', Load(), lineno=217, col_offset=29), [Name('WORKDIR', Load(), lineno=217, col_offset=42), Str('libraries', lineno=217, col_offset=51)], [], None, None, lineno=217, col_offset=29)], [], None, None, lineno=217, col_offset=18), Call(Name('getVersion', Load(), lineno=218, col_offset=18), [], [], None, None, lineno=218, col_offset=18)], Load(), lineno=216, col_offset=18), lineno=215, col_offset=22))], None, None, lineno=192, col_offset=10)], Load(), lineno=140, col_offset=22)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8)], [], lineno=139, col_offset=4), Expr(Call(Attribute(Name('result', Load(), lineno=223, col_offset=4), 'extend', Load(), lineno=223, col_offset=4), [List([Call(Name('dict', Load(), lineno=224, col_offset=6), [], [keyword('name', Str('Sleepycat DB 4.7.25', lineno=225, col_offset=15)), keyword('url', Str('http://download.oracle.com/berkeley-db/db-4.7.25.tar.gz', lineno=226, col_offset=14)), keyword('checksum', Str('ec2b87e833779681a0c3a814aa71359e', lineno=227, col_offset=19)), keyword('buildDir', Str('build_unix', lineno=228, col_offset=19)), keyword('configure', Str('../dist/configure', lineno=229, col_offset=20)), keyword('configure_pre', List([Str('--includedir=/usr/local/include/db4', lineno=231, col_offset=14)], Load(), lineno=230, col_offset=24))], None, None, lineno=224, col_offset=6)], Load(), lineno=223, col_offset=18)], [], None, None, lineno=223, col_offset=4), lineno=223, col_offset=4), Return(Name('result', Load(), lineno=236, col_offset=11), lineno=236, col_offset=4)], [], lineno=136, col_offset=0), FunctionDef('pkg_recipes', arguments([], None, None, []), [Assign([Name('result', Store(), lineno=241, col_offset=4)], List([Call(Name('dict', Load(), lineno=242, col_offset=8), [], [keyword('name', Str('PythonFramework', lineno=243, col_offset=17)), keyword('long_name', Str('Python Framework', lineno=244, col_offset=22)), keyword('source', Str('/Library/Frameworks/Python.framework', lineno=245, col_offset=19)), keyword('readme', Str("                This package installs Python.framework, that is the python\n                interpreter and the standard library. This also includes Python\n                wrappers for lots of Mac OS X API's.\n            ", lineno=250, col_offset=-1)), keyword('postflight', Str('scripts/postflight.framework', lineno=251, col_offset=23)), keyword('selected', Str('selected', lineno=252, col_offset=21))], None, None, lineno=242, col_offset=8), Call(Name('dict', Load(), lineno=254, col_offset=8), [], [keyword('name', Str('PythonApplications', lineno=255, col_offset=17)), keyword('long_name', Str('GUI Applications', lineno=256, col_offset=22)), keyword('source', Str('/Applications/Python %(VER)s', lineno=257, col_offset=19)), keyword('readme', Str('                This package installs IDLE (an interactive Python IDE),\n                Python Launcher and Build Applet (create application bundles\n                from python scripts).\n\n                It also installs a number of examples and demos.\n                ', lineno=264, col_offset=-1)), keyword('required', Name('False', Load(), lineno=265, col_offset=21)), keyword('selected', Str('selected', lineno=266, col_offset=21))], None, None, lineno=254, col_offset=8), Call(Name('dict', Load(), lineno=268, col_offset=8), [], [keyword('name', Str('PythonUnixTools', lineno=269, col_offset=17)), keyword('long_name', Str('UNIX command-line tools', lineno=270, col_offset=22)), keyword('source', Str('/usr/local/bin', lineno=271, col_offset=19)), keyword('readme', Str('                This package installs the unix tools in /usr/local/bin for\n                compatibility with older releases of Python. This package\n                is not necessary to use Python.\n                ', lineno=276, col_offset=-1)), keyword('required', Name('False', Load(), lineno=277, col_offset=21)), keyword('selected', Str('selected', lineno=278, col_offset=21))], None, None, lineno=268, col_offset=8), Call(Name('dict', Load(), lineno=280, col_offset=8), [], [keyword('name', Str('PythonDocumentation', lineno=281, col_offset=17)), keyword('long_name', Str('Python Documentation', lineno=282, col_offset=22)), keyword('topdir', Str('/Library/Frameworks/Python.framework/Versions/%(VER)s/Resources/English.lproj/Documentation', lineno=283, col_offset=19)), keyword('source', Str('/pydocs', lineno=284, col_offset=19)), keyword('readme', Str('                This package installs the python documentation at a location\n                that is useable for pydoc and IDLE. If you have installed Xcode\n                it will also install a link to the documentation in\n                /Developer/Documentation/Python\n                ', lineno=290, col_offset=-1)), keyword('postflight', Str('scripts/postflight.documentation', lineno=291, col_offset=23)), keyword('required', Name('False', Load(), lineno=292, col_offset=21)), keyword('selected', Str('selected', lineno=293, col_offset=21))], None, None, lineno=280, col_offset=8), Call(Name('dict', Load(), lineno=295, col_offset=8), [], [keyword('name', Str('PythonProfileChanges', lineno=296, col_offset=17)), keyword('long_name', Str('Shell profile updater', lineno=297, col_offset=22)), keyword('readme', Str('                This packages updates your shell profile to make sure that\n                the Python tools are found by your shell in preference of\n                the system provided Python tools.\n\n                If you don\'t install this package you\'ll have to add\n                "/Library/Frameworks/Python.framework/Versions/%(VER)s/bin"\n                to your PATH by hand.\n                ', lineno=306, col_offset=-1)), keyword('postflight', Str('scripts/postflight.patch-profile', lineno=307, col_offset=23)), keyword('topdir', Str('/Library/Frameworks/Python.framework', lineno=308, col_offset=19)), keyword('source', Str('/empty-dir', lineno=309, col_offset=19)), keyword('required', Name('False', Load(), lineno=310, col_offset=21)), keyword('selected', Str('selected', lineno=311, col_offset=21))], None, None, lineno=295, col_offset=8)], Load(), lineno=241, col_offset=13), lineno=241, col_offset=4), If(Compare(Name('DEPTARGET', Load(), lineno=315, col_offset=7), [Lt()], [Str('10.4', lineno=315, col_offset=19)], lineno=315, col_offset=7), [Expr(Call(Attribute(Name('result', Load(), lineno=316, col_offset=8), 'append', Load(), lineno=316, col_offset=8), [Call(Name('dict', Load(), lineno=317, col_offset=12), [], [keyword('name', Str('PythonSystemFixes', lineno=318, col_offset=21)), keyword('long_name', Str('Fix system Python', lineno=319, col_offset=26)), keyword('readme', Str('                    This package updates the system python installation on\n                    Mac OS X 10.3 to ensure that you can build new python extensions\n                    using that copy of python after installing this version.\n                    ', lineno=324, col_offset=-1)), keyword('postflight', Str('../Tools/fixapplepython23.py', lineno=325, col_offset=27)), keyword('topdir', Str('/Library/Frameworks/Python.framework', lineno=326, col_offset=23)), keyword('source', Str('/empty-dir', lineno=327, col_offset=23)), keyword('required', Name('False', Load(), lineno=328, col_offset=25)), keyword('selected', Str('selected', lineno=329, col_offset=25))], None, None, lineno=317, col_offset=12)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=315, col_offset=4), Return(Name('result', Load(), lineno=332, col_offset=11), lineno=332, col_offset=4)], [], lineno=240, col_offset=0), FunctionDef('fatal', arguments([Name('msg', Param(), lineno=334, col_offset=10)], None, None, []), [Expr(Str('\n    A fatal error, bail out.\n    ', lineno=337, col_offset=-1), lineno=337, col_offset=-1), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=338, col_offset=4), 'stderr', Load(), lineno=338, col_offset=4), 'write', Load(), lineno=338, col_offset=4), [Str('FATAL: ', lineno=338, col_offset=21)], [], None, None, lineno=338, col_offset=4), lineno=338, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=339, col_offset=4), 'stderr', Load(), lineno=339, col_offset=4), 'write', Load(), lineno=339, col_offset=4), [Name('msg', Load(), lineno=339, col_offset=21)], [], None, None, lineno=339, col_offset=4), lineno=339, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=340, col_offset=4), 'stderr', Load(), lineno=340, col_offset=4), 'write', Load(), lineno=340, col_offset=4), [Str('\n', lineno=340, col_offset=21)], [], None, None, lineno=340, col_offset=4), lineno=340, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=341, col_offset=4), 'exit', Load(), lineno=341, col_offset=4), [Num(1, lineno=341, col_offset=13)], [], None, None, lineno=341, col_offset=4), lineno=341, col_offset=4)], [], lineno=334, col_offset=0), FunctionDef('fileContents', arguments([Name('fn', Param(), lineno=343, col_offset=17)], None, None, []), [Expr(Str('\n    Return the contents of the named file\n    ', lineno=346, col_offset=-1), lineno=346, col_offset=-1), Return(Call(Attribute(Call(Name('open', Load(), lineno=347, col_offset=11), [Name('fn', Load(), lineno=347, col_offset=16), Str('rb', lineno=347, col_offset=20)], [], None, None, lineno=347, col_offset=11), 'read', Load(), lineno=347, col_offset=11), [], [], None, None, lineno=347, col_offset=11), lineno=347, col_offset=4)], [], lineno=343, col_offset=0), FunctionDef('runCommand', arguments([Name('commandline', Param(), lineno=349, col_offset=15)], None, None, []), [Expr(Str('\n    Run a command and raise RuntimeError if it fails. Output is surpressed\n    unless the command fails.\n    ', lineno=353, col_offset=-1), lineno=353, col_offset=-1), Assign([Name('fd', Store(), lineno=354, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=354, col_offset=9), 'popen', Load(), lineno=354, col_offset=9), [Name('commandline', Load(), lineno=354, col_offset=18), Str('r', lineno=354, col_offset=31)], [], None, None, lineno=354, col_offset=9), lineno=354, col_offset=4), Assign([Name('data', Store(), lineno=355, col_offset=4)], Call(Attribute(Name('fd', Load(), lineno=355, col_offset=11), 'read', Load(), lineno=355, col_offset=11), [], [], None, None, lineno=355, col_offset=11), lineno=355, col_offset=4), Assign([Name('xit', Store(), lineno=356, col_offset=4)], Call(Attribute(Name('fd', Load(), lineno=356, col_offset=10), 'close', Load(), lineno=356, col_offset=10), [], [], None, None, lineno=356, col_offset=10), lineno=356, col_offset=4), If(Compare(Name('xit', Load(), lineno=357, col_offset=7), [IsNot()], [Name('None', Load(), lineno=357, col_offset=18)], lineno=357, col_offset=7), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=358, col_offset=8), 'stdout', Load(), lineno=358, col_offset=8), 'write', Load(), lineno=358, col_offset=8), [Name('data', Load(), lineno=358, col_offset=25)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8), Raise(Name('RuntimeError', Load(), lineno=359, col_offset=14), BinOp(Str('command failed: %s', lineno=359, col_offset=28), Mod(), Tuple([Name('commandline', Load(), lineno=359, col_offset=50)], Load(), lineno=359, col_offset=50), lineno=359, col_offset=28), None, lineno=359, col_offset=8)], [], lineno=357, col_offset=4), If(Name('VERBOSE', Load(), lineno=361, col_offset=7), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=362, col_offset=8), 'stdout', Load(), lineno=362, col_offset=8), 'write', Load(), lineno=362, col_offset=8), [Name('data', Load(), lineno=362, col_offset=25)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=362, col_offset=32), 'stdout', Load(), lineno=362, col_offset=32), 'flush', Load(), lineno=362, col_offset=32), [], [], None, None, lineno=362, col_offset=32), lineno=362, col_offset=32)], [], lineno=361, col_offset=4)], [], lineno=349, col_offset=0), FunctionDef('captureCommand', arguments([Name('commandline', Param(), lineno=364, col_offset=19)], None, None, []), [Assign([Name('fd', Store(), lineno=365, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=365, col_offset=9), 'popen', Load(), lineno=365, col_offset=9), [Name('commandline', Load(), lineno=365, col_offset=18), Str('r', lineno=365, col_offset=31)], [], None, None, lineno=365, col_offset=9), lineno=365, col_offset=4), Assign([Name('data', Store(), lineno=366, col_offset=4)], Call(Attribute(Name('fd', Load(), lineno=366, col_offset=11), 'read', Load(), lineno=366, col_offset=11), [], [], None, None, lineno=366, col_offset=11), lineno=366, col_offset=4), Assign([Name('xit', Store(), lineno=367, col_offset=4)], Call(Attribute(Name('fd', Load(), lineno=367, col_offset=10), 'close', Load(), lineno=367, col_offset=10), [], [], None, None, lineno=367, col_offset=10), lineno=367, col_offset=4), If(Compare(Name('xit', Load(), lineno=368, col_offset=7), [IsNot()], [Name('None', Load(), lineno=368, col_offset=18)], lineno=368, col_offset=7), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=369, col_offset=8), 'stdout', Load(), lineno=369, col_offset=8), 'write', Load(), lineno=369, col_offset=8), [Name('data', Load(), lineno=369, col_offset=25)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Raise(Name('RuntimeError', Load(), lineno=370, col_offset=14), BinOp(Str('command failed: %s', lineno=370, col_offset=28), Mod(), Tuple([Name('commandline', Load(), lineno=370, col_offset=50)], Load(), lineno=370, col_offset=50), lineno=370, col_offset=28), None, lineno=370, col_offset=8)], [], lineno=368, col_offset=4), Return(Name('data', Load(), lineno=372, col_offset=11), lineno=372, col_offset=4)], [], lineno=364, col_offset=0), FunctionDef('getTclTkVersion', arguments([Name('configfile', Param(), lineno=374, col_offset=20), Name('versionline', Param(), lineno=374, col_offset=32)], None, None, []), [Expr(Str('\n    search Tcl or Tk configuration file for version line\n    ', lineno=377, col_offset=-1), lineno=377, col_offset=-1), TryExcept([Assign([Name('f', Store(), lineno=379, col_offset=8)], Call(Name('open', Load(), lineno=379, col_offset=12), [Name('configfile', Load(), lineno=379, col_offset=17), Str('r', lineno=379, col_offset=29)], [], None, None, lineno=379, col_offset=12), lineno=379, col_offset=8)], [ExceptHandler(None, None, [Expr(Call(Name('fatal', Load(), lineno=381, col_offset=8), [BinOp(Str('Framework configuration file not found: %s', lineno=381, col_offset=14), Mod(), Name('configfile', Load(), lineno=381, col_offset=61), lineno=381, col_offset=14)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8)], lineno=380, col_offset=4)], [], lineno=378, col_offset=4), For(Name('l', Store(), lineno=383, col_offset=8), Name('f', Load(), lineno=383, col_offset=13), [If(Call(Attribute(Name('l', Load(), lineno=384, col_offset=11), 'startswith', Load(), lineno=384, col_offset=11), [Name('versionline', Load(), lineno=384, col_offset=24)], [], None, None, lineno=384, col_offset=11), [Expr(Call(Attribute(Name('f', Load(), lineno=385, col_offset=12), 'close', Load(), lineno=385, col_offset=12), [], [], None, None, lineno=385, col_offset=12), lineno=385, col_offset=12), Return(Name('l', Load(), lineno=386, col_offset=19), lineno=386, col_offset=12)], [], lineno=384, col_offset=8)], [], lineno=383, col_offset=4), Expr(Call(Name('fatal', Load(), lineno=388, col_offset=4), [BinOp(Str('Version variable %s not found in framework configuration file: %s', lineno=388, col_offset=10), Mod(), Tuple([Name('versionline', Load(), lineno=389, col_offset=15), Name('configfile', Load(), lineno=389, col_offset=28)], Load(), lineno=389, col_offset=15), lineno=388, col_offset=10)], [], None, None, lineno=388, col_offset=4), lineno=388, col_offset=4)], [], lineno=374, col_offset=0), FunctionDef('checkEnvironment', arguments([], None, None, []), [Expr(Str("\n    Check that we're running on a supported system.\n    ", lineno=394, col_offset=-1), lineno=394, col_offset=-1), If(Compare(Call(Attribute(Name('platform', Load(), lineno=396, col_offset=7), 'system', Load(), lineno=396, col_offset=7), [], [], None, None, lineno=396, col_offset=7), [NotEq()], [Str('Darwin', lineno=396, col_offset=28)], lineno=396, col_offset=7), [Expr(Call(Name('fatal', Load(), lineno=397, col_offset=8), [Str('This script should be run on a Mac OS X 10.4 (or later) system', lineno=397, col_offset=14)], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8)], [], lineno=396, col_offset=4), If(Compare(Call(Name('int', Load(), lineno=399, col_offset=7), [Subscript(Call(Attribute(Call(Attribute(Name('platform', Load(), lineno=399, col_offset=11), 'release', Load(), lineno=399, col_offset=11), [], [], None, None, lineno=399, col_offset=11), 'split', Load(), lineno=399, col_offset=11), [Str('.', lineno=399, col_offset=36)], [], None, None, lineno=399, col_offset=11), Index(Num(0, lineno=399, col_offset=41)), Load(), lineno=399, col_offset=11)], [], None, None, lineno=399, col_offset=7), [Lt()], [Num(8, lineno=399, col_offset=47)], lineno=399, col_offset=7), [Expr(Call(Name('fatal', Load(), lineno=400, col_offset=8), [Str('This script should be run on a Mac OS X 10.4 (or later) system', lineno=400, col_offset=14)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8)], [], lineno=399, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=402, col_offset=11), 'path', Load(), lineno=402, col_offset=11), 'exists', Load(), lineno=402, col_offset=11), [Name('SDKPATH', Load(), lineno=402, col_offset=26)], [], None, None, lineno=402, col_offset=11), lineno=402, col_offset=7), [Expr(Call(Name('fatal', Load(), lineno=403, col_offset=8), [BinOp(Str('Please install the latest version of Xcode and the %s SDK', lineno=403, col_offset=14), Mod(), Call(Attribute(Attribute(Name('os', Load(), lineno=404, col_offset=12), 'path', Load(), lineno=404, col_offset=12), 'basename', Load(), lineno=404, col_offset=12), [Subscript(Name('SDKPATH', Load(), lineno=404, col_offset=29), Slice(None, Num(-4, lineno=404, col_offset=39), None), Load(), lineno=404, col_offset=29)], [], None, None, lineno=404, col_offset=12), lineno=403, col_offset=14)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8)], [], lineno=402, col_offset=4), For(Name('framework', Store(), lineno=414, col_offset=8), List([Str('Tcl', lineno=414, col_offset=22), Str('Tk', lineno=414, col_offset=29)], Load(), lineno=414, col_offset=21), [Assign([Name('fw', Store(), lineno=415, col_offset=8)], Call(Name('dict', Load(), lineno=415, col_offset=13), [], [keyword('lower', Call(Attribute(Name('framework', Load(), lineno=415, col_offset=24), 'lower', Load(), lineno=415, col_offset=24), [], [], None, None, lineno=415, col_offset=24)), keyword('upper', Call(Attribute(Name('framework', Load(), lineno=416, col_offset=26), 'upper', Load(), lineno=416, col_offset=26), [], [], None, None, lineno=416, col_offset=26)), keyword('cap', Call(Attribute(Name('framework', Load(), lineno=417, col_offset=24), 'capitalize', Load(), lineno=417, col_offset=24), [], [], None, None, lineno=417, col_offset=24))], None, None, lineno=415, col_offset=13), lineno=415, col_offset=8), Assign([Name('fwpth', Store(), lineno=418, col_offset=8)], BinOp(Str('Library/Frameworks/%(cap)s.framework/%(lower)sConfig.sh', lineno=418, col_offset=16), Mod(), Name('fw', Load(), lineno=418, col_offset=76), lineno=418, col_offset=16), lineno=418, col_offset=8), Assign([Name('sysfw', Store(), lineno=419, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=419, col_offset=16), 'path', Load(), lineno=419, col_offset=16), 'join', Load(), lineno=419, col_offset=16), [Str('/System', lineno=419, col_offset=29), Name('fwpth', Load(), lineno=419, col_offset=40)], [], None, None, lineno=419, col_offset=16), lineno=419, col_offset=8), Assign([Name('libfw', Store(), lineno=420, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=420, col_offset=16), 'path', Load(), lineno=420, col_offset=16), 'join', Load(), lineno=420, col_offset=16), [Str('/', lineno=420, col_offset=29), Name('fwpth', Load(), lineno=420, col_offset=34)], [], None, None, lineno=420, col_offset=16), lineno=420, col_offset=8), Assign([Name('usrfw', Store(), lineno=421, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=421, col_offset=16), 'path', Load(), lineno=421, col_offset=16), 'join', Load(), lineno=421, col_offset=16), [Call(Attribute(Name('os', Load(), lineno=421, col_offset=29), 'getenv', Load(), lineno=421, col_offset=29), [Str('HOME', lineno=421, col_offset=39)], [], None, None, lineno=421, col_offset=29), Name('fwpth', Load(), lineno=421, col_offset=48)], [], None, None, lineno=421, col_offset=16), lineno=421, col_offset=8), Assign([Name('version', Store(), lineno=422, col_offset=8)], BinOp(Str('%(upper)s_VERSION', lineno=422, col_offset=18), Mod(), Name('fw', Load(), lineno=422, col_offset=40), lineno=422, col_offset=18), lineno=422, col_offset=8), If(Compare(Call(Name('getTclTkVersion', Load(), lineno=423, col_offset=11), [Name('libfw', Load(), lineno=423, col_offset=27), Name('version', Load(), lineno=423, col_offset=34)], [], None, None, lineno=423, col_offset=11), [NotEq()], [Call(Name('getTclTkVersion', Load(), lineno=423, col_offset=46), [Name('sysfw', Load(), lineno=423, col_offset=62), Name('version', Load(), lineno=423, col_offset=69)], [], None, None, lineno=423, col_offset=46)], lineno=423, col_offset=11), [Expr(Call(Name('fatal', Load(), lineno=424, col_offset=12), [BinOp(Str('Version of %s must match %s', lineno=424, col_offset=18), Mod(), Tuple([Name('libfw', Load(), lineno=424, col_offset=51), Name('sysfw', Load(), lineno=424, col_offset=58)], Load(), lineno=424, col_offset=51), lineno=424, col_offset=18)], [], None, None, lineno=424, col_offset=12), lineno=424, col_offset=12)], [], lineno=423, col_offset=8), If(Call(Attribute(Attribute(Name('os', Load(), lineno=425, col_offset=11), 'path', Load(), lineno=425, col_offset=11), 'exists', Load(), lineno=425, col_offset=11), [Name('usrfw', Load(), lineno=425, col_offset=26)], [], None, None, lineno=425, col_offset=11), [Expr(Call(Name('fatal', Load(), lineno=426, col_offset=12), [BinOp(Str('Please rename %s to avoid possible dynamic load issues.', lineno=426, col_offset=18), Mod(), Name('usrfw', Load(), lineno=427, col_offset=22), lineno=426, col_offset=18)], [], None, None, lineno=426, col_offset=12), lineno=426, col_offset=12)], [], lineno=425, col_offset=8)], [], lineno=414, col_offset=4), Assign([Name('environ_var_prefixes', Store(), lineno=430, col_offset=4)], List([Str('CPATH', lineno=430, col_offset=28), Str('C_INCLUDE_', lineno=430, col_offset=37), Str('DYLD_', lineno=430, col_offset=51), Str('LANG', lineno=430, col_offset=60), Str('LC_', lineno=430, col_offset=68), Str('LD_', lineno=431, col_offset=28), Str('LIBRARY_', lineno=431, col_offset=35), Str('PATH', lineno=431, col_offset=47), Str('PYTHON', lineno=431, col_offset=55)], Load(), lineno=430, col_offset=27), lineno=430, col_offset=4), For(Name('ev', Store(), lineno=432, col_offset=8), Call(Name('list', Load(), lineno=432, col_offset=14), [Attribute(Name('os', Load(), lineno=432, col_offset=19), 'environ', Load(), lineno=432, col_offset=19)], [], None, None, lineno=432, col_offset=14), [For(Name('prefix', Store(), lineno=433, col_offset=12), Name('environ_var_prefixes', Load(), lineno=433, col_offset=22), [If(Call(Attribute(Name('ev', Load(), lineno=434, col_offset=15), 'startswith', Load(), lineno=434, col_offset=15), [Name('prefix', Load(), lineno=434, col_offset=29)], [], None, None, lineno=434, col_offset=15), [Print(None, [BinOp(Str('INFO: deleting environment variable %s=%s', lineno=435, col_offset=22), Mod(), Tuple([Name('ev', Load(), lineno=436, col_offset=52), Subscript(Attribute(Name('os', Load(), lineno=436, col_offset=56), 'environ', Load(), lineno=436, col_offset=56), Index(Name('ev', Load(), lineno=436, col_offset=67)), Load(), lineno=436, col_offset=56)], Load(), lineno=436, col_offset=52), lineno=435, col_offset=22)], True, lineno=435, col_offset=16), Delete([Subscript(Attribute(Name('os', Load(), lineno=437, col_offset=20), 'environ', Load(), lineno=437, col_offset=20), Index(Name('ev', Load(), lineno=437, col_offset=31)), Del(), lineno=437, col_offset=20)], lineno=437, col_offset=16)], [], lineno=434, col_offset=12)], [], lineno=433, col_offset=8)], [], lineno=432, col_offset=4), Assign([Subscript(Attribute(Name('os', Load(), lineno=439, col_offset=4), 'environ', Load(), lineno=439, col_offset=4), Index(Str('PATH', lineno=439, col_offset=15)), Store(), lineno=439, col_offset=4)], Str('/bin:/sbin:/usr/bin:/usr/sbin', lineno=439, col_offset=25), lineno=439, col_offset=4), Print(None, [BinOp(Str('Setting default PATH: %s', lineno=440, col_offset=10), Mod(), Subscript(Attribute(Name('os', Load(), lineno=440, col_offset=38), 'environ', Load(), lineno=440, col_offset=38), Index(Str('PATH', lineno=440, col_offset=49)), Load(), lineno=440, col_offset=38), lineno=440, col_offset=10)], True, lineno=440, col_offset=4)], [], lineno=391, col_offset=0), FunctionDef('parseOptions', arguments([Name('args', Param(), lineno=443, col_offset=17)], None, None, [Name('None', Load(), lineno=443, col_offset=22)]), [Expr(Str('\n    Parse arguments and update global settings.\n    ', lineno=446, col_offset=-1), lineno=446, col_offset=-1), Global(['WORKDIR', 'DEPSRC', 'SDKPATH', 'SRCDIR', 'DEPTARGET'], lineno=447, col_offset=4), Global(['UNIVERSALOPTS', 'UNIVERSALARCHS', 'ARCHLIST', 'CC'], lineno=448, col_offset=4), If(Compare(Name('args', Load(), lineno=450, col_offset=7), [Is()], [Name('None', Load(), lineno=450, col_offset=15)], lineno=450, col_offset=7), [Assign([Name('args', Store(), lineno=451, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=451, col_offset=15), 'argv', Load(), lineno=451, col_offset=15), Slice(Num(1, lineno=451, col_offset=24), None, None), Load(), lineno=451, col_offset=15), lineno=451, col_offset=8)], [], lineno=450, col_offset=4), TryExcept([Assign([Tuple([Name('options', Store(), lineno=454, col_offset=8), Name('args', Store(), lineno=454, col_offset=17)], Store(), lineno=454, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=454, col_offset=24), 'getopt', Load(), lineno=454, col_offset=24), [Name('args', Load(), lineno=454, col_offset=38), Str('?hb', lineno=454, col_offset=44), List([Str('build-dir=', lineno=455, col_offset=18), Str('third-party=', lineno=455, col_offset=32), Str('sdk-path=', lineno=455, col_offset=48), Str('src-dir=', lineno=455, col_offset=62), Str('dep-target=', lineno=456, col_offset=18), Str('universal-archs=', lineno=456, col_offset=33), Str('help', lineno=456, col_offset=53)], Load(), lineno=455, col_offset=16)], [], None, None, lineno=454, col_offset=24), lineno=454, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=457, col_offset=11), 'error', Load(), lineno=457, col_offset=11), Name('msg', Store(), lineno=457, col_offset=25), [Print(None, [Name('msg', Load(), lineno=458, col_offset=14)], True, lineno=458, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=459, col_offset=8), 'exit', Load(), lineno=459, col_offset=8), [Num(1, lineno=459, col_offset=17)], [], None, None, lineno=459, col_offset=8), lineno=459, col_offset=8)], lineno=457, col_offset=4)], [], lineno=453, col_offset=4), If(Name('args', Load(), lineno=461, col_offset=7), [Print(None, [Str('Additional arguments', lineno=462, col_offset=14)], True, lineno=462, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=463, col_offset=8), 'exit', Load(), lineno=463, col_offset=8), [Num(1, lineno=463, col_offset=17)], [], None, None, lineno=463, col_offset=8), lineno=463, col_offset=8)], [], lineno=461, col_offset=4), Assign([Name('deptarget', Store(), lineno=465, col_offset=4)], Name('None', Load(), lineno=465, col_offset=16), lineno=465, col_offset=4), For(Tuple([Name('k', Store(), lineno=466, col_offset=8), Name('v', Store(), lineno=466, col_offset=11)], Store(), lineno=466, col_offset=8), Name('options', Load(), lineno=466, col_offset=16), [If(Compare(Name('k', Load(), lineno=467, col_offset=11), [In()], [Tuple([Str('-h', lineno=467, col_offset=17), Str('-?', lineno=467, col_offset=23), Str('--help', lineno=467, col_offset=29)], Load(), lineno=467, col_offset=17)], lineno=467, col_offset=11), [Print(None, [Name('USAGE', Load(), lineno=468, col_offset=18)], True, lineno=468, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=469, col_offset=12), 'exit', Load(), lineno=469, col_offset=12), [Num(0, lineno=469, col_offset=21)], [], None, None, lineno=469, col_offset=12), lineno=469, col_offset=12)], [If(Compare(Name('k', Load(), lineno=471, col_offset=13), [In()], [Tuple([Str('-d', lineno=471, col_offset=19), Str('--build-dir', lineno=471, col_offset=25)], Load(), lineno=471, col_offset=19)], lineno=471, col_offset=13), [Assign([Name('WORKDIR', Store(), lineno=472, col_offset=12)], Name('v', Load(), lineno=472, col_offset=20), lineno=472, col_offset=12)], [If(Compare(Name('k', Load(), lineno=474, col_offset=13), [In()], [Tuple([Str('--third-party', lineno=474, col_offset=19)], Load(), lineno=474, col_offset=19)], lineno=474, col_offset=13), [Assign([Name('DEPSRC', Store(), lineno=475, col_offset=12)], Name('v', Load(), lineno=475, col_offset=19), lineno=475, col_offset=12)], [If(Compare(Name('k', Load(), lineno=477, col_offset=13), [In()], [Tuple([Str('--sdk-path', lineno=477, col_offset=19)], Load(), lineno=477, col_offset=19)], lineno=477, col_offset=13), [Assign([Name('SDKPATH', Store(), lineno=478, col_offset=12)], Name('v', Load(), lineno=478, col_offset=20), lineno=478, col_offset=12)], [If(Compare(Name('k', Load(), lineno=480, col_offset=13), [In()], [Tuple([Str('--src-dir', lineno=480, col_offset=19)], Load(), lineno=480, col_offset=19)], lineno=480, col_offset=13), [Assign([Name('SRCDIR', Store(), lineno=481, col_offset=12)], Name('v', Load(), lineno=481, col_offset=19), lineno=481, col_offset=12)], [If(Compare(Name('k', Load(), lineno=483, col_offset=13), [In()], [Tuple([Str('--dep-target', lineno=483, col_offset=19)], Load(), lineno=483, col_offset=19)], lineno=483, col_offset=13), [Assign([Name('DEPTARGET', Store(), lineno=484, col_offset=12)], Name('v', Load(), lineno=484, col_offset=22), lineno=484, col_offset=12), Assign([Name('deptarget', Store(), lineno=485, col_offset=12)], Name('v', Load(), lineno=485, col_offset=22), lineno=485, col_offset=12)], [If(Compare(Name('k', Load(), lineno=487, col_offset=13), [In()], [Tuple([Str('--universal-archs', lineno=487, col_offset=19)], Load(), lineno=487, col_offset=19)], lineno=487, col_offset=13), [If(Compare(Name('v', Load(), lineno=488, col_offset=15), [In()], [Name('UNIVERSALOPTS', Load(), lineno=488, col_offset=20)], lineno=488, col_offset=15), [Assign([Name('UNIVERSALARCHS', Store(), lineno=489, col_offset=16)], Name('v', Load(), lineno=489, col_offset=33), lineno=489, col_offset=16), Assign([Name('ARCHLIST', Store(), lineno=490, col_offset=16)], Subscript(Name('universal_opts_map', Load(), lineno=490, col_offset=27), Index(Name('UNIVERSALARCHS', Load(), lineno=490, col_offset=46)), Load(), lineno=490, col_offset=27), lineno=490, col_offset=16), If(Compare(Name('deptarget', Load(), lineno=491, col_offset=19), [Is()], [Name('None', Load(), lineno=491, col_offset=32)], lineno=491, col_offset=19), [Assign([Name('DEPTARGET', Store(), lineno=494, col_offset=20)], Call(Attribute(Name('default_target_map', Load(), lineno=494, col_offset=32), 'get', Load(), lineno=494, col_offset=32), [Name('v', Load(), lineno=494, col_offset=55), Str('10.3', lineno=494, col_offset=58)], [], None, None, lineno=494, col_offset=32), lineno=494, col_offset=20)], [], lineno=491, col_offset=16)], [Raise(Name('NotImplementedError', Load(), lineno=496, col_offset=22), Name('v', Load(), lineno=496, col_offset=43), None, lineno=496, col_offset=16)], lineno=488, col_offset=12)], [Raise(Name('NotImplementedError', Load(), lineno=499, col_offset=18), Name('k', Load(), lineno=499, col_offset=39), None, lineno=499, col_offset=12)], lineno=487, col_offset=13)], lineno=483, col_offset=13)], lineno=480, col_offset=13)], lineno=477, col_offset=13)], lineno=474, col_offset=13)], lineno=471, col_offset=13)], lineno=467, col_offset=8)], [], lineno=466, col_offset=4), Assign([Name('SRCDIR', Store(), lineno=501, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=501, col_offset=11), 'path', Load(), lineno=501, col_offset=11), 'abspath', Load(), lineno=501, col_offset=11), [Name('SRCDIR', Load(), lineno=501, col_offset=27)], [], None, None, lineno=501, col_offset=11), lineno=501, col_offset=4), Assign([Name('WORKDIR', Store(), lineno=502, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=502, col_offset=12), 'path', Load(), lineno=502, col_offset=12), 'abspath', Load(), lineno=502, col_offset=12), [Name('WORKDIR', Load(), lineno=502, col_offset=28)], [], None, None, lineno=502, col_offset=12), lineno=502, col_offset=4), Assign([Name('SDKPATH', Store(), lineno=503, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=503, col_offset=12), 'path', Load(), lineno=503, col_offset=12), 'abspath', Load(), lineno=503, col_offset=12), [Name('SDKPATH', Load(), lineno=503, col_offset=28)], [], None, None, lineno=503, col_offset=12), lineno=503, col_offset=4), Assign([Name('DEPSRC', Store(), lineno=504, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=504, col_offset=11), 'path', Load(), lineno=504, col_offset=11), 'abspath', Load(), lineno=504, col_offset=11), [Name('DEPSRC', Load(), lineno=504, col_offset=27)], [], None, None, lineno=504, col_offset=11), lineno=504, col_offset=4), Assign([Name('CC', Store(), lineno=506, col_offset=4)], Subscript(Name('target_cc_map', Load(), lineno=506, col_offset=7), Index(Name('DEPTARGET', Load(), lineno=506, col_offset=21)), Load(), lineno=506, col_offset=7), lineno=506, col_offset=4), Print(None, [Str('Settings:', lineno=508, col_offset=10)], True, lineno=508, col_offset=4), Print(None, [Str(' * Source directory:', lineno=509, col_offset=10), Name('SRCDIR', Load(), lineno=509, col_offset=34)], True, lineno=509, col_offset=4), Print(None, [Str(' * Build directory: ', lineno=510, col_offset=10), Name('WORKDIR', Load(), lineno=510, col_offset=34)], True, lineno=510, col_offset=4), Print(None, [Str(' * SDK location:    ', lineno=511, col_offset=10), Name('SDKPATH', Load(), lineno=511, col_offset=34)], True, lineno=511, col_offset=4), Print(None, [Str(' * Third-party source:', lineno=512, col_offset=10), Name('DEPSRC', Load(), lineno=512, col_offset=36)], True, lineno=512, col_offset=4), Print(None, [Str(' * Deployment target:', lineno=513, col_offset=10), Name('DEPTARGET', Load(), lineno=513, col_offset=35)], True, lineno=513, col_offset=4), Print(None, [Str(' * Universal architectures:', lineno=514, col_offset=10), Name('ARCHLIST', Load(), lineno=514, col_offset=41)], True, lineno=514, col_offset=4), Print(None, [Str(' * C compiler:', lineno=515, col_offset=10), Name('CC', Load(), lineno=515, col_offset=28)], True, lineno=515, col_offset=4), Print(None, [Str('', lineno=516, col_offset=10)], True, lineno=516, col_offset=4)], [], lineno=443, col_offset=0), FunctionDef('extractArchive', arguments([Name('builddir', Param(), lineno=521, col_offset=19), Name('archiveName', Param(), lineno=521, col_offset=29)], None, None, []), [Expr(Str("\n    Extract a source archive into 'builddir'. Returns the path of the\n    extracted archive.\n\n    XXX: This function assumes that archives contain a toplevel directory\n    that is has the same name as the basename of the archive. This is\n    save enough for anything we use.\n    ", lineno=529, col_offset=-1), lineno=529, col_offset=-1), Assign([Name('curdir', Store(), lineno=530, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=530, col_offset=13), 'getcwd', Load(), lineno=530, col_offset=13), [], [], None, None, lineno=530, col_offset=13), lineno=530, col_offset=4), TryFinally([Expr(Call(Attribute(Name('os', Load(), lineno=532, col_offset=8), 'chdir', Load(), lineno=532, col_offset=8), [Name('builddir', Load(), lineno=532, col_offset=17)], [], None, None, lineno=532, col_offset=8), lineno=532, col_offset=8), If(Call(Attribute(Name('archiveName', Load(), lineno=533, col_offset=11), 'endswith', Load(), lineno=533, col_offset=11), [Str('.tar.gz', lineno=533, col_offset=32)], [], None, None, lineno=533, col_offset=11), [Assign([Name('retval', Store(), lineno=534, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=534, col_offset=21), 'path', Load(), lineno=534, col_offset=21), 'basename', Load(), lineno=534, col_offset=21), [Subscript(Name('archiveName', Load(), lineno=534, col_offset=38), Slice(None, Num(-7, lineno=534, col_offset=52), None), Load(), lineno=534, col_offset=38)], [], None, None, lineno=534, col_offset=21), lineno=534, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=535, col_offset=15), 'path', Load(), lineno=535, col_offset=15), 'exists', Load(), lineno=535, col_offset=15), [Name('retval', Load(), lineno=535, col_offset=30)], [], None, None, lineno=535, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=536, col_offset=16), 'rmtree', Load(), lineno=536, col_offset=16), [Name('retval', Load(), lineno=536, col_offset=30)], [], None, None, lineno=536, col_offset=16), lineno=536, col_offset=16)], [], lineno=535, col_offset=12), Assign([Name('fp', Store(), lineno=537, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=537, col_offset=17), 'popen', Load(), lineno=537, col_offset=17), [BinOp(Str('tar zxf %s 2>&1', lineno=537, col_offset=26), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=537, col_offset=45), [Name('archiveName', Load(), lineno=537, col_offset=56)], [], None, None, lineno=537, col_offset=45)], Load(), lineno=537, col_offset=45), lineno=537, col_offset=26), Str('r', lineno=537, col_offset=72)], [], None, None, lineno=537, col_offset=17), lineno=537, col_offset=12)], [If(Call(Attribute(Name('archiveName', Load(), lineno=539, col_offset=13), 'endswith', Load(), lineno=539, col_offset=13), [Str('.tar.bz2', lineno=539, col_offset=34)], [], None, None, lineno=539, col_offset=13), [Assign([Name('retval', Store(), lineno=540, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=540, col_offset=21), 'path', Load(), lineno=540, col_offset=21), 'basename', Load(), lineno=540, col_offset=21), [Subscript(Name('archiveName', Load(), lineno=540, col_offset=38), Slice(None, Num(-8, lineno=540, col_offset=52), None), Load(), lineno=540, col_offset=38)], [], None, None, lineno=540, col_offset=21), lineno=540, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=541, col_offset=15), 'path', Load(), lineno=541, col_offset=15), 'exists', Load(), lineno=541, col_offset=15), [Name('retval', Load(), lineno=541, col_offset=30)], [], None, None, lineno=541, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=542, col_offset=16), 'rmtree', Load(), lineno=542, col_offset=16), [Name('retval', Load(), lineno=542, col_offset=30)], [], None, None, lineno=542, col_offset=16), lineno=542, col_offset=16)], [], lineno=541, col_offset=12), Assign([Name('fp', Store(), lineno=543, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=543, col_offset=17), 'popen', Load(), lineno=543, col_offset=17), [BinOp(Str('tar jxf %s 2>&1', lineno=543, col_offset=26), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=543, col_offset=45), [Name('archiveName', Load(), lineno=543, col_offset=56)], [], None, None, lineno=543, col_offset=45)], Load(), lineno=543, col_offset=45), lineno=543, col_offset=26), Str('r', lineno=543, col_offset=72)], [], None, None, lineno=543, col_offset=17), lineno=543, col_offset=12)], [If(Call(Attribute(Name('archiveName', Load(), lineno=545, col_offset=13), 'endswith', Load(), lineno=545, col_offset=13), [Str('.tar', lineno=545, col_offset=34)], [], None, None, lineno=545, col_offset=13), [Assign([Name('retval', Store(), lineno=546, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=546, col_offset=21), 'path', Load(), lineno=546, col_offset=21), 'basename', Load(), lineno=546, col_offset=21), [Subscript(Name('archiveName', Load(), lineno=546, col_offset=38), Slice(None, Num(-4, lineno=546, col_offset=52), None), Load(), lineno=546, col_offset=38)], [], None, None, lineno=546, col_offset=21), lineno=546, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=547, col_offset=15), 'path', Load(), lineno=547, col_offset=15), 'exists', Load(), lineno=547, col_offset=15), [Name('retval', Load(), lineno=547, col_offset=30)], [], None, None, lineno=547, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=548, col_offset=16), 'rmtree', Load(), lineno=548, col_offset=16), [Name('retval', Load(), lineno=548, col_offset=30)], [], None, None, lineno=548, col_offset=16), lineno=548, col_offset=16)], [], lineno=547, col_offset=12), Assign([Name('fp', Store(), lineno=549, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=549, col_offset=17), 'popen', Load(), lineno=549, col_offset=17), [BinOp(Str('tar xf %s 2>&1', lineno=549, col_offset=26), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=549, col_offset=44), [Name('archiveName', Load(), lineno=549, col_offset=55)], [], None, None, lineno=549, col_offset=44)], Load(), lineno=549, col_offset=44), lineno=549, col_offset=26), Str('r', lineno=549, col_offset=71)], [], None, None, lineno=549, col_offset=17), lineno=549, col_offset=12)], [If(Call(Attribute(Name('archiveName', Load(), lineno=551, col_offset=13), 'endswith', Load(), lineno=551, col_offset=13), [Str('.zip', lineno=551, col_offset=34)], [], None, None, lineno=551, col_offset=13), [Assign([Name('retval', Store(), lineno=552, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=552, col_offset=21), 'path', Load(), lineno=552, col_offset=21), 'basename', Load(), lineno=552, col_offset=21), [Subscript(Name('archiveName', Load(), lineno=552, col_offset=38), Slice(None, Num(-4, lineno=552, col_offset=52), None), Load(), lineno=552, col_offset=38)], [], None, None, lineno=552, col_offset=21), lineno=552, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=553, col_offset=15), 'path', Load(), lineno=553, col_offset=15), 'exists', Load(), lineno=553, col_offset=15), [Name('retval', Load(), lineno=553, col_offset=30)], [], None, None, lineno=553, col_offset=15), [Expr(Call(Attribute(Name('shutil', Load(), lineno=554, col_offset=16), 'rmtree', Load(), lineno=554, col_offset=16), [Name('retval', Load(), lineno=554, col_offset=30)], [], None, None, lineno=554, col_offset=16), lineno=554, col_offset=16)], [], lineno=553, col_offset=12), Assign([Name('fp', Store(), lineno=555, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=555, col_offset=17), 'popen', Load(), lineno=555, col_offset=17), [BinOp(Str('unzip %s 2>&1', lineno=555, col_offset=26), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=555, col_offset=43), [Name('archiveName', Load(), lineno=555, col_offset=54)], [], None, None, lineno=555, col_offset=43)], Load(), lineno=555, col_offset=43), lineno=555, col_offset=26), Str('r', lineno=555, col_offset=70)], [], None, None, lineno=555, col_offset=17), lineno=555, col_offset=12)], [], lineno=551, col_offset=13)], lineno=545, col_offset=13)], lineno=539, col_offset=13)], lineno=533, col_offset=8), Assign([Name('data', Store(), lineno=557, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=557, col_offset=15), 'read', Load(), lineno=557, col_offset=15), [], [], None, None, lineno=557, col_offset=15), lineno=557, col_offset=8), Assign([Name('xit', Store(), lineno=558, col_offset=8)], Call(Attribute(Name('fp', Load(), lineno=558, col_offset=14), 'close', Load(), lineno=558, col_offset=14), [], [], None, None, lineno=558, col_offset=14), lineno=558, col_offset=8), If(Compare(Name('xit', Load(), lineno=559, col_offset=11), [IsNot()], [Name('None', Load(), lineno=559, col_offset=22)], lineno=559, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=560, col_offset=12), 'stdout', Load(), lineno=560, col_offset=12), 'write', Load(), lineno=560, col_offset=12), [Name('data', Load(), lineno=560, col_offset=29)], [], None, None, lineno=560, col_offset=12), lineno=560, col_offset=12), Raise(Name('RuntimeError', Load(), lineno=561, col_offset=18), BinOp(Str('Cannot extract %s', lineno=561, col_offset=32), Mod(), Tuple([Name('archiveName', Load(), lineno=561, col_offset=53)], Load(), lineno=561, col_offset=53), lineno=561, col_offset=32), None, lineno=561, col_offset=12)], [], lineno=559, col_offset=8), Return(Call(Attribute(Attribute(Name('os', Load(), lineno=563, col_offset=15), 'path', Load(), lineno=563, col_offset=15), 'join', Load(), lineno=563, col_offset=15), [Name('builddir', Load(), lineno=563, col_offset=28), Name('retval', Load(), lineno=563, col_offset=38)], [], None, None, lineno=563, col_offset=15), lineno=563, col_offset=8)], [Expr(Call(Attribute(Name('os', Load(), lineno=566, col_offset=8), 'chdir', Load(), lineno=566, col_offset=8), [Name('curdir', Load(), lineno=566, col_offset=17)], [], None, None, lineno=566, col_offset=8), lineno=566, col_offset=8)], lineno=531, col_offset=4)], [], lineno=521, col_offset=0), Assign([Name('KNOWNSIZES', Store(), lineno=568, col_offset=0)], Dict([Str('http://ftp.gnu.org/pub/gnu/readline/readline-5.1.tar.gz', lineno=569, col_offset=4), Str('http://downloads.sleepycat.com/db-4.4.20.tar.gz', lineno=570, col_offset=4)], [Num(7952742, lineno=569, col_offset=63), Num(2030276, lineno=570, col_offset=55)], lineno=568, col_offset=13), lineno=568, col_offset=0), FunctionDef('downloadURL', arguments([Name('url', Param(), lineno=573, col_offset=16), Name('fname', Param(), lineno=573, col_offset=21)], None, None, []), [Expr(Str('\n    Download the contents of the url into the file.\n    ', lineno=576, col_offset=-1), lineno=576, col_offset=-1), TryExcept([Assign([Name('size', Store(), lineno=578, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=578, col_offset=15), 'path', Load(), lineno=578, col_offset=15), 'getsize', Load(), lineno=578, col_offset=15), [Name('fname', Load(), lineno=578, col_offset=31)], [], None, None, lineno=578, col_offset=15), lineno=578, col_offset=8)], [ExceptHandler(Name('OSError', Load(), lineno=579, col_offset=11), None, [Pass( lineno=580, col_offset=8)], lineno=579, col_offset=4)], [If(Compare(Call(Attribute(Name('KNOWNSIZES', Load(), lineno=582, col_offset=11), 'get', Load(), lineno=582, col_offset=11), [Name('url', Load(), lineno=582, col_offset=26)], [], None, None, lineno=582, col_offset=11), [Eq()], [Name('size', Load(), lineno=582, col_offset=34)], lineno=582, col_offset=11), [Print(None, [Str('Using existing file for', lineno=583, col_offset=18), Name('url', Load(), lineno=583, col_offset=45)], True, lineno=583, col_offset=12), Return(None, lineno=584, col_offset=12)], [], lineno=582, col_offset=8)], lineno=577, col_offset=4), Assign([Name('fpIn', Store(), lineno=585, col_offset=4)], Call(Attribute(Name('urllib2', Load(), lineno=585, col_offset=11), 'urlopen', Load(), lineno=585, col_offset=11), [Name('url', Load(), lineno=585, col_offset=27)], [], None, None, lineno=585, col_offset=11), lineno=585, col_offset=4), Assign([Name('fpOut', Store(), lineno=586, col_offset=4)], Call(Name('open', Load(), lineno=586, col_offset=12), [Name('fname', Load(), lineno=586, col_offset=17), Str('wb', lineno=586, col_offset=24)], [], None, None, lineno=586, col_offset=12), lineno=586, col_offset=4), Assign([Name('block', Store(), lineno=587, col_offset=4)], Call(Attribute(Name('fpIn', Load(), lineno=587, col_offset=12), 'read', Load(), lineno=587, col_offset=12), [Num(10240, lineno=587, col_offset=22)], [], None, None, lineno=587, col_offset=12), lineno=587, col_offset=4), TryExcept([While(Name('block', Load(), lineno=589, col_offset=14), [Expr(Call(Attribute(Name('fpOut', Load(), lineno=590, col_offset=12), 'write', Load(), lineno=590, col_offset=12), [Name('block', Load(), lineno=590, col_offset=24)], [], None, None, lineno=590, col_offset=12), lineno=590, col_offset=12), Assign([Name('block', Store(), lineno=591, col_offset=12)], Call(Attribute(Name('fpIn', Load(), lineno=591, col_offset=20), 'read', Load(), lineno=591, col_offset=20), [Num(10240, lineno=591, col_offset=30)], [], None, None, lineno=591, col_offset=20), lineno=591, col_offset=12)], [], lineno=589, col_offset=8), Expr(Call(Attribute(Name('fpIn', Load(), lineno=592, col_offset=8), 'close', Load(), lineno=592, col_offset=8), [], [], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8), Expr(Call(Attribute(Name('fpOut', Load(), lineno=593, col_offset=8), 'close', Load(), lineno=593, col_offset=8), [], [], None, None, lineno=593, col_offset=8), lineno=593, col_offset=8)], [ExceptHandler(None, None, [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=596, col_offset=12), 'unlink', Load(), lineno=596, col_offset=12), [Name('fname', Load(), lineno=596, col_offset=22)], [], None, None, lineno=596, col_offset=12), lineno=596, col_offset=12)], [ExceptHandler(None, None, [Pass( lineno=598, col_offset=12)], lineno=597, col_offset=8)], [], lineno=595, col_offset=8)], lineno=594, col_offset=4)], [], lineno=588, col_offset=4)], [], lineno=573, col_offset=0), FunctionDef('buildRecipe', arguments([Name('recipe', Param(), lineno=600, col_offset=16), Name('basedir', Param(), lineno=600, col_offset=24), Name('archList', Param(), lineno=600, col_offset=33)], None, None, []), [Expr(Str("\n    Build software using a recipe. This function does the\n    'configure;make;make install' dance for C software, with a possibility\n    to customize this process, basically a poor-mans DarwinPorts.\n    ", lineno=605, col_offset=-1), lineno=605, col_offset=-1), Assign([Name('curdir', Store(), lineno=606, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=606, col_offset=13), 'getcwd', Load(), lineno=606, col_offset=13), [], [], None, None, lineno=606, col_offset=13), lineno=606, col_offset=4), Assign([Name('name', Store(), lineno=608, col_offset=4)], Subscript(Name('recipe', Load(), lineno=608, col_offset=11), Index(Str('name', lineno=608, col_offset=18)), Load(), lineno=608, col_offset=11), lineno=608, col_offset=4), Assign([Name('url', Store(), lineno=609, col_offset=4)], Subscript(Name('recipe', Load(), lineno=609, col_offset=10), Index(Str('url', lineno=609, col_offset=17)), Load(), lineno=609, col_offset=10), lineno=609, col_offset=4), Assign([Name('configure', Store(), lineno=610, col_offset=4)], Call(Attribute(Name('recipe', Load(), lineno=610, col_offset=16), 'get', Load(), lineno=610, col_offset=16), [Str('configure', lineno=610, col_offset=27), Str('./configure', lineno=610, col_offset=40)], [], None, None, lineno=610, col_offset=16), lineno=610, col_offset=4), Assign([Name('install', Store(), lineno=611, col_offset=4)], Call(Attribute(Name('recipe', Load(), lineno=611, col_offset=14), 'get', Load(), lineno=611, col_offset=14), [Str('install', lineno=611, col_offset=25), BinOp(Str('make && make install DESTDIR=%s', lineno=611, col_offset=36), Mod(), Call(Name('shellQuote', Load(), lineno=612, col_offset=8), [Name('basedir', Load(), lineno=612, col_offset=19)], [], None, None, lineno=612, col_offset=8), lineno=611, col_offset=36)], [], None, None, lineno=611, col_offset=14), lineno=611, col_offset=4), Assign([Name('archiveName', Store(), lineno=614, col_offset=4)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=614, col_offset=18), 'path', Load(), lineno=614, col_offset=18), 'split', Load(), lineno=614, col_offset=18), [Name('url', Load(), lineno=614, col_offset=32)], [], None, None, lineno=614, col_offset=18), Index(Num(-1, lineno=614, col_offset=38)), Load(), lineno=614, col_offset=18), lineno=614, col_offset=4), Assign([Name('sourceArchive', Store(), lineno=615, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=615, col_offset=20), 'path', Load(), lineno=615, col_offset=20), 'join', Load(), lineno=615, col_offset=20), [Name('DEPSRC', Load(), lineno=615, col_offset=33), Name('archiveName', Load(), lineno=615, col_offset=41)], [], None, None, lineno=615, col_offset=20), lineno=615, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=617, col_offset=11), 'path', Load(), lineno=617, col_offset=11), 'exists', Load(), lineno=617, col_offset=11), [Name('DEPSRC', Load(), lineno=617, col_offset=26)], [], None, None, lineno=617, col_offset=11), lineno=617, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=618, col_offset=8), 'mkdir', Load(), lineno=618, col_offset=8), [Name('DEPSRC', Load(), lineno=618, col_offset=17)], [], None, None, lineno=618, col_offset=8), lineno=618, col_offset=8)], [], lineno=617, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=621, col_offset=7), 'path', Load(), lineno=621, col_offset=7), 'exists', Load(), lineno=621, col_offset=7), [Name('sourceArchive', Load(), lineno=621, col_offset=22)], [], None, None, lineno=621, col_offset=7), [Print(None, [BinOp(Str('Using local copy of %s', lineno=622, col_offset=14), Mod(), Tuple([Name('name', Load(), lineno=622, col_offset=40)], Load(), lineno=622, col_offset=40), lineno=622, col_offset=14)], True, lineno=622, col_offset=8)], [Print(None, [BinOp(Str('Did not find local copy of %s', lineno=625, col_offset=14), Mod(), Tuple([Name('name', Load(), lineno=625, col_offset=47)], Load(), lineno=625, col_offset=47), lineno=625, col_offset=14)], True, lineno=625, col_offset=8), Print(None, [BinOp(Str('Downloading %s', lineno=626, col_offset=14), Mod(), Tuple([Name('name', Load(), lineno=626, col_offset=32)], Load(), lineno=626, col_offset=32), lineno=626, col_offset=14)], True, lineno=626, col_offset=8), Expr(Call(Name('downloadURL', Load(), lineno=627, col_offset=8), [Name('url', Load(), lineno=627, col_offset=20), Name('sourceArchive', Load(), lineno=627, col_offset=25)], [], None, None, lineno=627, col_offset=8), lineno=627, col_offset=8), Print(None, [BinOp(Str('Archive for %s stored as %s', lineno=628, col_offset=14), Mod(), Tuple([Name('name', Load(), lineno=628, col_offset=45), Name('sourceArchive', Load(), lineno=628, col_offset=51)], Load(), lineno=628, col_offset=45), lineno=628, col_offset=14)], True, lineno=628, col_offset=8)], lineno=621, col_offset=4), Print(None, [BinOp(Str('Extracting archive for %s', lineno=630, col_offset=10), Mod(), Tuple([Name('name', Load(), lineno=630, col_offset=39)], Load(), lineno=630, col_offset=39), lineno=630, col_offset=10)], True, lineno=630, col_offset=4), Assign([Name('buildDir', Store(), lineno=631, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=631, col_offset=13), 'path', Load(), lineno=631, col_offset=13), 'join', Load(), lineno=631, col_offset=13), [Name('WORKDIR', Load(), lineno=631, col_offset=26), Str('_bld', lineno=631, col_offset=35)], [], None, None, lineno=631, col_offset=13), lineno=631, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=632, col_offset=11), 'path', Load(), lineno=632, col_offset=11), 'exists', Load(), lineno=632, col_offset=11), [Name('buildDir', Load(), lineno=632, col_offset=26)], [], None, None, lineno=632, col_offset=11), lineno=632, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=633, col_offset=8), 'mkdir', Load(), lineno=633, col_offset=8), [Name('buildDir', Load(), lineno=633, col_offset=17)], [], None, None, lineno=633, col_offset=8), lineno=633, col_offset=8)], [], lineno=632, col_offset=4), Assign([Name('workDir', Store(), lineno=635, col_offset=4)], Call(Name('extractArchive', Load(), lineno=635, col_offset=14), [Name('buildDir', Load(), lineno=635, col_offset=29), Name('sourceArchive', Load(), lineno=635, col_offset=39)], [], None, None, lineno=635, col_offset=14), lineno=635, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=636, col_offset=4), 'chdir', Load(), lineno=636, col_offset=4), [Name('workDir', Load(), lineno=636, col_offset=13)], [], None, None, lineno=636, col_offset=4), lineno=636, col_offset=4), If(Compare(Str('buildDir', lineno=637, col_offset=7), [In()], [Name('recipe', Load(), lineno=637, col_offset=21)], lineno=637, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=638, col_offset=8), 'chdir', Load(), lineno=638, col_offset=8), [Subscript(Name('recipe', Load(), lineno=638, col_offset=17), Index(Str('buildDir', lineno=638, col_offset=24)), Load(), lineno=638, col_offset=17)], [], None, None, lineno=638, col_offset=8), lineno=638, col_offset=8)], [], lineno=637, col_offset=4), For(Name('fn', Store(), lineno=641, col_offset=8), Call(Attribute(Name('recipe', Load(), lineno=641, col_offset=14), 'get', Load(), lineno=641, col_offset=14), [Str('patches', lineno=641, col_offset=25), Tuple([], Load(), lineno=641, col_offset=36)], [], None, None, lineno=641, col_offset=14), [If(Call(Attribute(Name('fn', Load(), lineno=642, col_offset=11), 'startswith', Load(), lineno=642, col_offset=11), [Str('http://', lineno=642, col_offset=25)], [], None, None, lineno=642, col_offset=11), [Assign([Name('path', Store(), lineno=644, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=644, col_offset=19), 'path', Load(), lineno=644, col_offset=19), 'join', Load(), lineno=644, col_offset=19), [Name('DEPSRC', Load(), lineno=644, col_offset=32), Call(Attribute(Attribute(Name('os', Load(), lineno=644, col_offset=40), 'path', Load(), lineno=644, col_offset=40), 'basename', Load(), lineno=644, col_offset=40), [Name('fn', Load(), lineno=644, col_offset=57)], [], None, None, lineno=644, col_offset=40)], [], None, None, lineno=644, col_offset=19), lineno=644, col_offset=12), Expr(Call(Name('downloadURL', Load(), lineno=645, col_offset=12), [Name('fn', Load(), lineno=645, col_offset=24), Name('path', Load(), lineno=645, col_offset=28)], [], None, None, lineno=645, col_offset=12), lineno=645, col_offset=12), Assign([Name('fn', Store(), lineno=646, col_offset=12)], Name('path', Load(), lineno=646, col_offset=17), lineno=646, col_offset=12)], [], lineno=642, col_offset=8), Assign([Name('fn', Store(), lineno=648, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=648, col_offset=13), 'path', Load(), lineno=648, col_offset=13), 'join', Load(), lineno=648, col_offset=13), [Name('curdir', Load(), lineno=648, col_offset=26), Name('fn', Load(), lineno=648, col_offset=34)], [], None, None, lineno=648, col_offset=13), lineno=648, col_offset=8), Expr(Call(Name('runCommand', Load(), lineno=649, col_offset=8), [BinOp(Str('patch -p%s < %s', lineno=649, col_offset=19), Mod(), Tuple([Call(Attribute(Name('recipe', Load(), lineno=649, col_offset=38), 'get', Load(), lineno=649, col_offset=38), [Str('patchlevel', lineno=649, col_offset=49), Num(1, lineno=649, col_offset=63)], [], None, None, lineno=649, col_offset=38), Call(Name('shellQuote', Load(), lineno=650, col_offset=12), [Name('fn', Load(), lineno=650, col_offset=23)], [], None, None, lineno=650, col_offset=12)], Load(), lineno=649, col_offset=38), lineno=649, col_offset=19)], [], None, None, lineno=649, col_offset=8), lineno=649, col_offset=8)], [], lineno=641, col_offset=4), If(Compare(Name('configure', Load(), lineno=652, col_offset=7), [IsNot()], [Name('None', Load(), lineno=652, col_offset=24)], lineno=652, col_offset=7), [Assign([Name('configure_args', Store(), lineno=653, col_offset=8)], List([Str('--prefix=/usr/local', lineno=654, col_offset=12), Str('--enable-static', lineno=655, col_offset=12), Str('--disable-shared', lineno=656, col_offset=12)], Load(), lineno=653, col_offset=25), lineno=653, col_offset=8), If(Compare(Str('configure_pre', lineno=660, col_offset=11), [In()], [Name('recipe', Load(), lineno=660, col_offset=30)], lineno=660, col_offset=11), [Assign([Name('args', Store(), lineno=661, col_offset=12)], Call(Name('list', Load(), lineno=661, col_offset=19), [Subscript(Name('recipe', Load(), lineno=661, col_offset=24), Index(Str('configure_pre', lineno=661, col_offset=31)), Load(), lineno=661, col_offset=24)], [], None, None, lineno=661, col_offset=19), lineno=661, col_offset=12), If(Compare(Str('--disable-static', lineno=662, col_offset=15), [In()], [Name('args', Load(), lineno=662, col_offset=37)], lineno=662, col_offset=15), [Expr(Call(Attribute(Name('configure_args', Load(), lineno=663, col_offset=16), 'remove', Load(), lineno=663, col_offset=16), [Str('--enable-static', lineno=663, col_offset=38)], [], None, None, lineno=663, col_offset=16), lineno=663, col_offset=16)], [], lineno=662, col_offset=12), If(Compare(Str('--enable-shared', lineno=664, col_offset=15), [In()], [Name('args', Load(), lineno=664, col_offset=36)], lineno=664, col_offset=15), [Expr(Call(Attribute(Name('configure_args', Load(), lineno=665, col_offset=16), 'remove', Load(), lineno=665, col_offset=16), [Str('--disable-shared', lineno=665, col_offset=38)], [], None, None, lineno=665, col_offset=16), lineno=665, col_offset=16)], [], lineno=664, col_offset=12), Expr(Call(Attribute(Name('configure_args', Load(), lineno=666, col_offset=12), 'extend', Load(), lineno=666, col_offset=12), [Name('args', Load(), lineno=666, col_offset=34)], [], None, None, lineno=666, col_offset=12), lineno=666, col_offset=12)], [], lineno=660, col_offset=8), If(Call(Attribute(Name('recipe', Load(), lineno=668, col_offset=11), 'get', Load(), lineno=668, col_offset=11), [Str('useLDFlags', lineno=668, col_offset=22), Num(1, lineno=668, col_offset=36)], [], None, None, lineno=668, col_offset=11), [Expr(Call(Attribute(Name('configure_args', Load(), lineno=669, col_offset=12), 'extend', Load(), lineno=669, col_offset=12), [List([BinOp(Str('CFLAGS=-arch %s -isysroot %s -I%s/usr/local/include', lineno=670, col_offset=16), Mod(), Tuple([Call(Attribute(Str(' -arch ', lineno=671, col_offset=24), 'join', Load(), lineno=671, col_offset=24), [Name('archList', Load(), lineno=671, col_offset=39)], [], None, None, lineno=671, col_offset=24), Subscript(Call(Name('shellQuote', Load(), lineno=672, col_offset=24), [Name('SDKPATH', Load(), lineno=672, col_offset=35)], [], None, None, lineno=672, col_offset=24), Slice(Num(1, lineno=672, col_offset=44), Num(-1, lineno=672, col_offset=47), None), Load(), lineno=672, col_offset=24), Subscript(Call(Name('shellQuote', Load(), lineno=673, col_offset=24), [Name('basedir', Load(), lineno=673, col_offset=35)], [], None, None, lineno=673, col_offset=24), Slice(Num(1, lineno=673, col_offset=44), Num(-1, lineno=673, col_offset=47), None), Load(), lineno=673, col_offset=24)], Load(), lineno=671, col_offset=24), lineno=670, col_offset=16), BinOp(Str('LDFLAGS=-syslibroot,%s -L%s/usr/local/lib -arch %s', lineno=674, col_offset=16), Mod(), Tuple([Subscript(Call(Name('shellQuote', Load(), lineno=675, col_offset=20), [Name('SDKPATH', Load(), lineno=675, col_offset=31)], [], None, None, lineno=675, col_offset=20), Slice(Num(1, lineno=675, col_offset=40), Num(-1, lineno=675, col_offset=43), None), Load(), lineno=675, col_offset=20), Subscript(Call(Name('shellQuote', Load(), lineno=676, col_offset=20), [Name('basedir', Load(), lineno=676, col_offset=31)], [], None, None, lineno=676, col_offset=20), Slice(Num(1, lineno=676, col_offset=40), Num(-1, lineno=676, col_offset=43), None), Load(), lineno=676, col_offset=20), Call(Attribute(Str(' -arch ', lineno=677, col_offset=20), 'join', Load(), lineno=677, col_offset=20), [Name('archList', Load(), lineno=677, col_offset=35)], [], None, None, lineno=677, col_offset=20)], Load(), lineno=675, col_offset=20), lineno=674, col_offset=16)], Load(), lineno=669, col_offset=34)], [], None, None, lineno=669, col_offset=12), lineno=669, col_offset=12)], [Expr(Call(Attribute(Name('configure_args', Load(), lineno=680, col_offset=12), 'extend', Load(), lineno=680, col_offset=12), [List([BinOp(Str('CFLAGS=-arch %s -isysroot %s -I%s/usr/local/include', lineno=681, col_offset=16), Mod(), Tuple([Call(Attribute(Str(' -arch ', lineno=682, col_offset=24), 'join', Load(), lineno=682, col_offset=24), [Name('archList', Load(), lineno=682, col_offset=39)], [], None, None, lineno=682, col_offset=24), Subscript(Call(Name('shellQuote', Load(), lineno=683, col_offset=24), [Name('SDKPATH', Load(), lineno=683, col_offset=35)], [], None, None, lineno=683, col_offset=24), Slice(Num(1, lineno=683, col_offset=44), Num(-1, lineno=683, col_offset=47), None), Load(), lineno=683, col_offset=24), Subscript(Call(Name('shellQuote', Load(), lineno=684, col_offset=24), [Name('basedir', Load(), lineno=684, col_offset=35)], [], None, None, lineno=684, col_offset=24), Slice(Num(1, lineno=684, col_offset=44), Num(-1, lineno=684, col_offset=47), None), Load(), lineno=684, col_offset=24)], Load(), lineno=682, col_offset=24), lineno=681, col_offset=16)], Load(), lineno=680, col_offset=34)], [], None, None, lineno=680, col_offset=12), lineno=680, col_offset=12)], lineno=668, col_offset=8), If(Compare(Str('configure_post', lineno=687, col_offset=11), [In()], [Name('recipe', Load(), lineno=687, col_offset=31)], lineno=687, col_offset=11), [Assign([Name('configure_args', Store(), lineno=688, col_offset=12), Name('configure_args', Store(), lineno=688, col_offset=29)], Call(Name('list', Load(), lineno=688, col_offset=46), [Subscript(Name('recipe', Load(), lineno=688, col_offset=51), Index(Str('configure_post', lineno=688, col_offset=58)), Load(), lineno=688, col_offset=51)], [], None, None, lineno=688, col_offset=46), lineno=688, col_offset=12)], [], lineno=687, col_offset=8), Expr(Call(Attribute(Name('configure_args', Load(), lineno=690, col_offset=8), 'insert', Load(), lineno=690, col_offset=8), [Num(0, lineno=690, col_offset=30), Name('configure', Load(), lineno=690, col_offset=33)], [], None, None, lineno=690, col_offset=8), lineno=690, col_offset=8), Assign([Name('configure_args', Store(), lineno=691, col_offset=8)], ListComp(Call(Name('shellQuote', Load(), lineno=691, col_offset=27), [Name('a', Load(), lineno=691, col_offset=38)], [], None, None, lineno=691, col_offset=27), [comprehension(Name('a', Store(), lineno=691, col_offset=45), Name('configure_args', Load(), lineno=691, col_offset=50), [])], lineno=691, col_offset=27), lineno=691, col_offset=8), Print(None, [BinOp(Str('Running configure for %s', lineno=693, col_offset=14), Mod(), Tuple([Name('name', Load(), lineno=693, col_offset=42)], Load(), lineno=693, col_offset=42), lineno=693, col_offset=14)], True, lineno=693, col_offset=8), Expr(Call(Name('runCommand', Load(), lineno=694, col_offset=8), [BinOp(Call(Attribute(Str(' ', lineno=694, col_offset=19), 'join', Load(), lineno=694, col_offset=19), [Name('configure_args', Load(), lineno=694, col_offset=28)], [], None, None, lineno=694, col_offset=19), Add(), Str(' 2>&1', lineno=694, col_offset=46), lineno=694, col_offset=19)], [], None, None, lineno=694, col_offset=8), lineno=694, col_offset=8)], [], lineno=652, col_offset=4), Print(None, [BinOp(Str('Running install for %s', lineno=696, col_offset=10), Mod(), Tuple([Name('name', Load(), lineno=696, col_offset=36)], Load(), lineno=696, col_offset=36), lineno=696, col_offset=10)], True, lineno=696, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=697, col_offset=4), [BinOp(BinOp(Str('{ ', lineno=697, col_offset=15), Add(), Name('install', Load(), lineno=697, col_offset=22), lineno=697, col_offset=15), Add(), Str(' ;} 2>&1', lineno=697, col_offset=32), lineno=697, col_offset=30)], [], None, None, lineno=697, col_offset=4), lineno=697, col_offset=4), Print(None, [BinOp(Str('Done %s', lineno=699, col_offset=10), Mod(), Tuple([Name('name', Load(), lineno=699, col_offset=21)], Load(), lineno=699, col_offset=21), lineno=699, col_offset=10)], True, lineno=699, col_offset=4), Print(None, [Str('', lineno=700, col_offset=10)], True, lineno=700, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=702, col_offset=4), 'chdir', Load(), lineno=702, col_offset=4), [Name('curdir', Load(), lineno=702, col_offset=13)], [], None, None, lineno=702, col_offset=4), lineno=702, col_offset=4)], [], lineno=600, col_offset=0), FunctionDef('buildLibraries', arguments([], None, None, []), [Expr(Str('\n    Build our dependencies into $WORKDIR/libraries/usr/local\n    ', lineno=707, col_offset=-1), lineno=707, col_offset=-1), Print(None, [Str('', lineno=708, col_offset=10)], True, lineno=708, col_offset=4), Print(None, [Str('Building required libraries', lineno=709, col_offset=10)], True, lineno=709, col_offset=4), Print(None, [Str('', lineno=710, col_offset=10)], True, lineno=710, col_offset=4), Assign([Name('universal', Store(), lineno=711, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=711, col_offset=16), 'path', Load(), lineno=711, col_offset=16), 'join', Load(), lineno=711, col_offset=16), [Name('WORKDIR', Load(), lineno=711, col_offset=29), Str('libraries', lineno=711, col_offset=38)], [], None, None, lineno=711, col_offset=16), lineno=711, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=712, col_offset=4), 'mkdir', Load(), lineno=712, col_offset=4), [Name('universal', Load(), lineno=712, col_offset=13)], [], None, None, lineno=712, col_offset=4), lineno=712, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=713, col_offset=4), 'makedirs', Load(), lineno=713, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=713, col_offset=16), 'path', Load(), lineno=713, col_offset=16), 'join', Load(), lineno=713, col_offset=16), [Name('universal', Load(), lineno=713, col_offset=29), Str('usr', lineno=713, col_offset=40), Str('local', lineno=713, col_offset=47), Str('lib', lineno=713, col_offset=56)], [], None, None, lineno=713, col_offset=16)], [], None, None, lineno=713, col_offset=4), lineno=713, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=714, col_offset=4), 'makedirs', Load(), lineno=714, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=714, col_offset=16), 'path', Load(), lineno=714, col_offset=16), 'join', Load(), lineno=714, col_offset=16), [Name('universal', Load(), lineno=714, col_offset=29), Str('usr', lineno=714, col_offset=40), Str('local', lineno=714, col_offset=47), Str('include', lineno=714, col_offset=56)], [], None, None, lineno=714, col_offset=16)], [], None, None, lineno=714, col_offset=4), lineno=714, col_offset=4), For(Name('recipe', Store(), lineno=716, col_offset=8), Call(Name('library_recipes', Load(), lineno=716, col_offset=18), [], [], None, None, lineno=716, col_offset=18), [Expr(Call(Name('buildRecipe', Load(), lineno=717, col_offset=8), [Name('recipe', Load(), lineno=717, col_offset=20), Name('universal', Load(), lineno=717, col_offset=28), Name('ARCHLIST', Load(), lineno=717, col_offset=39)], [], None, None, lineno=717, col_offset=8), lineno=717, col_offset=8)], [], lineno=716, col_offset=4)], [], lineno=704, col_offset=0), FunctionDef('buildPythonDocs', arguments([], None, None, []), [Print(None, [Str('Install python documentation', lineno=724, col_offset=10)], True, lineno=724, col_offset=4), Assign([Name('rootDir', Store(), lineno=725, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=725, col_offset=14), 'path', Load(), lineno=725, col_offset=14), 'join', Load(), lineno=725, col_offset=14), [Name('WORKDIR', Load(), lineno=725, col_offset=27), Str('_root', lineno=725, col_offset=36)], [], None, None, lineno=725, col_offset=14), lineno=725, col_offset=4), Assign([Name('buildDir', Store(), lineno=726, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=726, col_offset=15), 'path', Load(), lineno=726, col_offset=15), 'join', Load(), lineno=726, col_offset=15), [Str('../../Doc', lineno=726, col_offset=28)], [], None, None, lineno=726, col_offset=15), lineno=726, col_offset=4), Assign([Name('docdir', Store(), lineno=727, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=727, col_offset=13), 'path', Load(), lineno=727, col_offset=13), 'join', Load(), lineno=727, col_offset=13), [Name('rootDir', Load(), lineno=727, col_offset=26), Str('pydocs', lineno=727, col_offset=35)], [], None, None, lineno=727, col_offset=13), lineno=727, col_offset=4), Assign([Name('curDir', Store(), lineno=728, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=728, col_offset=13), 'getcwd', Load(), lineno=728, col_offset=13), [], [], None, None, lineno=728, col_offset=13), lineno=728, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=729, col_offset=4), 'chdir', Load(), lineno=729, col_offset=4), [Name('buildDir', Load(), lineno=729, col_offset=13)], [], None, None, lineno=729, col_offset=4), lineno=729, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=730, col_offset=4), [Str('make update', lineno=730, col_offset=15)], [], None, None, lineno=730, col_offset=4), lineno=730, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=731, col_offset=4), [BinOp(Str("make html PYTHON='%s'", lineno=731, col_offset=15), Mod(), Call(Attribute(Attribute(Name('os', Load(), lineno=731, col_offset=41), 'path', Load(), lineno=731, col_offset=41), 'abspath', Load(), lineno=731, col_offset=41), [Attribute(Name('sys', Load(), lineno=731, col_offset=57), 'executable', Load(), lineno=731, col_offset=57)], [], None, None, lineno=731, col_offset=41), lineno=731, col_offset=15)], [], None, None, lineno=731, col_offset=4), lineno=731, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=732, col_offset=4), 'chdir', Load(), lineno=732, col_offset=4), [Name('curDir', Load(), lineno=732, col_offset=13)], [], None, None, lineno=732, col_offset=4), lineno=732, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=733, col_offset=11), 'path', Load(), lineno=733, col_offset=11), 'exists', Load(), lineno=733, col_offset=11), [Name('docdir', Load(), lineno=733, col_offset=26)], [], None, None, lineno=733, col_offset=11), lineno=733, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=734, col_offset=8), 'mkdir', Load(), lineno=734, col_offset=8), [Name('docdir', Load(), lineno=734, col_offset=17)], [], None, None, lineno=734, col_offset=8), lineno=734, col_offset=8)], [], lineno=733, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=735, col_offset=4), 'rename', Load(), lineno=735, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=735, col_offset=14), 'path', Load(), lineno=735, col_offset=14), 'join', Load(), lineno=735, col_offset=14), [Name('buildDir', Load(), lineno=735, col_offset=27), Str('build', lineno=735, col_offset=37), Str('html', lineno=735, col_offset=46)], [], None, None, lineno=735, col_offset=14), Name('docdir', Load(), lineno=735, col_offset=55)], [], None, None, lineno=735, col_offset=4), lineno=735, col_offset=4)], [], lineno=721, col_offset=0), FunctionDef('buildPython', arguments([], None, None, []), [Print(None, [BinOp(Str('Building a universal python for %s architectures', lineno=739, col_offset=10), Mod(), Name('UNIVERSALARCHS', Load(), lineno=739, col_offset=63), lineno=739, col_offset=10)], True, lineno=739, col_offset=4), Assign([Name('buildDir', Store(), lineno=741, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=741, col_offset=15), 'path', Load(), lineno=741, col_offset=15), 'join', Load(), lineno=741, col_offset=15), [Name('WORKDIR', Load(), lineno=741, col_offset=28), Str('_bld', lineno=741, col_offset=37), Str('python', lineno=741, col_offset=45)], [], None, None, lineno=741, col_offset=15), lineno=741, col_offset=4), Assign([Name('rootDir', Store(), lineno=742, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=742, col_offset=14), 'path', Load(), lineno=742, col_offset=14), 'join', Load(), lineno=742, col_offset=14), [Name('WORKDIR', Load(), lineno=742, col_offset=27), Str('_root', lineno=742, col_offset=36)], [], None, None, lineno=742, col_offset=14), lineno=742, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=744, col_offset=7), 'path', Load(), lineno=744, col_offset=7), 'exists', Load(), lineno=744, col_offset=7), [Name('buildDir', Load(), lineno=744, col_offset=22)], [], None, None, lineno=744, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=745, col_offset=8), 'rmtree', Load(), lineno=745, col_offset=8), [Name('buildDir', Load(), lineno=745, col_offset=22)], [], None, None, lineno=745, col_offset=8), lineno=745, col_offset=8)], [], lineno=744, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=746, col_offset=7), 'path', Load(), lineno=746, col_offset=7), 'exists', Load(), lineno=746, col_offset=7), [Name('rootDir', Load(), lineno=746, col_offset=22)], [], None, None, lineno=746, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=747, col_offset=8), 'rmtree', Load(), lineno=747, col_offset=8), [Name('rootDir', Load(), lineno=747, col_offset=22)], [], None, None, lineno=747, col_offset=8), lineno=747, col_offset=8)], [], lineno=746, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=748, col_offset=4), 'mkdir', Load(), lineno=748, col_offset=4), [Name('buildDir', Load(), lineno=748, col_offset=13)], [], None, None, lineno=748, col_offset=4), lineno=748, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=749, col_offset=4), 'mkdir', Load(), lineno=749, col_offset=4), [Name('rootDir', Load(), lineno=749, col_offset=13)], [], None, None, lineno=749, col_offset=4), lineno=749, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=750, col_offset=4), 'mkdir', Load(), lineno=750, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=750, col_offset=13), 'path', Load(), lineno=750, col_offset=13), 'join', Load(), lineno=750, col_offset=13), [Name('rootDir', Load(), lineno=750, col_offset=26), Str('empty-dir', lineno=750, col_offset=35)], [], None, None, lineno=750, col_offset=13)], [], None, None, lineno=750, col_offset=4), lineno=750, col_offset=4), Assign([Name('curdir', Store(), lineno=751, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=751, col_offset=13), 'getcwd', Load(), lineno=751, col_offset=13), [], [], None, None, lineno=751, col_offset=13), lineno=751, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=752, col_offset=4), 'chdir', Load(), lineno=752, col_offset=4), [Name('buildDir', Load(), lineno=752, col_offset=13)], [], None, None, lineno=752, col_offset=4), lineno=752, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=756, col_offset=4), 'symlink', Load(), lineno=756, col_offset=4), [Str('python', lineno=756, col_offset=15), Call(Attribute(Attribute(Name('os', Load(), lineno=756, col_offset=25), 'path', Load(), lineno=756, col_offset=25), 'join', Load(), lineno=756, col_offset=25), [Name('buildDir', Load(), lineno=756, col_offset=38), Str('python.exe', lineno=756, col_offset=48)], [], None, None, lineno=756, col_offset=25)], [], None, None, lineno=756, col_offset=4), lineno=756, col_offset=4), Assign([Name('version', Store(), lineno=760, col_offset=4)], Call(Name('getVersion', Load(), lineno=760, col_offset=14), [], [], None, None, lineno=760, col_offset=14), lineno=760, col_offset=4), Assign([Subscript(Attribute(Name('os', Load(), lineno=765, col_offset=4), 'environ', Load(), lineno=765, col_offset=4), Index(Str('DYLD_LIBRARY_PATH', lineno=765, col_offset=15)), Store(), lineno=765, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=765, col_offset=38), 'path', Load(), lineno=765, col_offset=38), 'join', Load(), lineno=765, col_offset=38), [Name('WORKDIR', Load(), lineno=765, col_offset=51), Str('libraries', lineno=766, col_offset=40), Str('usr', lineno=766, col_offset=53), Str('local', lineno=766, col_offset=60), Str('lib', lineno=766, col_offset=69)], [], None, None, lineno=765, col_offset=38), lineno=765, col_offset=4), Print(None, [Str('Running configure...', lineno=767, col_offset=10)], True, lineno=767, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=768, col_offset=4), [BinOp(Str("%s -C --enable-framework --enable-universalsdk=%s --with-universal-archs=%s LDFLAGS='-g -L%s/libraries/usr/local/lib' OPT='-g -O3 -I%s/libraries/usr/local/include' 2>&1", lineno=768, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=772, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=772, col_offset=19), 'path', Load(), lineno=772, col_offset=19), 'join', Load(), lineno=772, col_offset=19), [Name('SRCDIR', Load(), lineno=772, col_offset=32), Str('configure', lineno=772, col_offset=40)], [], None, None, lineno=772, col_offset=19)], [], None, None, lineno=772, col_offset=8), Call(Name('shellQuote', Load(), lineno=772, col_offset=55), [Name('SDKPATH', Load(), lineno=772, col_offset=66)], [], None, None, lineno=772, col_offset=55), Name('UNIVERSALARCHS', Load(), lineno=773, col_offset=8), Subscript(Call(Name('shellQuote', Load(), lineno=774, col_offset=8), [Name('WORKDIR', Load(), lineno=774, col_offset=19)], [], None, None, lineno=774, col_offset=8), Slice(Num(1, lineno=774, col_offset=28), Num(-1, lineno=774, col_offset=31), None), Load(), lineno=774, col_offset=8), Subscript(Call(Name('shellQuote', Load(), lineno=775, col_offset=8), [Name('WORKDIR', Load(), lineno=775, col_offset=19)], [], None, None, lineno=775, col_offset=8), Slice(Num(1, lineno=775, col_offset=28), Num(-1, lineno=775, col_offset=31), None), Load(), lineno=775, col_offset=8)], Load(), lineno=772, col_offset=8), lineno=768, col_offset=15)], [], None, None, lineno=768, col_offset=4), lineno=768, col_offset=4), Print(None, [Str('Running make', lineno=777, col_offset=10)], True, lineno=777, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=778, col_offset=4), [Str('make', lineno=778, col_offset=15)], [], None, None, lineno=778, col_offset=4), lineno=778, col_offset=4), Print(None, [Str('Running make frameworkinstall', lineno=780, col_offset=10)], True, lineno=780, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=781, col_offset=4), [BinOp(Str('make frameworkinstall DESTDIR=%s', lineno=781, col_offset=15), Mod(), Call(Name('shellQuote', Load(), lineno=782, col_offset=8), [Name('rootDir', Load(), lineno=782, col_offset=19)], [], None, None, lineno=782, col_offset=8), lineno=781, col_offset=15)], [], None, None, lineno=781, col_offset=4), lineno=781, col_offset=4), Print(None, [Str('Running make frameworkinstallextras', lineno=784, col_offset=10)], True, lineno=784, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=785, col_offset=4), [BinOp(Str('make frameworkinstallextras DESTDIR=%s', lineno=785, col_offset=15), Mod(), Call(Name('shellQuote', Load(), lineno=786, col_offset=8), [Name('rootDir', Load(), lineno=786, col_offset=19)], [], None, None, lineno=786, col_offset=8), lineno=785, col_offset=15)], [], None, None, lineno=785, col_offset=4), lineno=785, col_offset=4), Delete([Subscript(Attribute(Name('os', Load(), lineno=788, col_offset=8), 'environ', Load(), lineno=788, col_offset=8), Index(Str('DYLD_LIBRARY_PATH', lineno=788, col_offset=19)), Del(), lineno=788, col_offset=8)], lineno=788, col_offset=4), Print(None, [Str('Copying required shared libraries', lineno=789, col_offset=10)], True, lineno=789, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=790, col_offset=7), 'path', Load(), lineno=790, col_offset=7), 'exists', Load(), lineno=790, col_offset=7), [Call(Attribute(Attribute(Name('os', Load(), lineno=790, col_offset=22), 'path', Load(), lineno=790, col_offset=22), 'join', Load(), lineno=790, col_offset=22), [Name('WORKDIR', Load(), lineno=790, col_offset=35), Str('libraries', lineno=790, col_offset=44), Str('Library', lineno=790, col_offset=57)], [], None, None, lineno=790, col_offset=22)], [], None, None, lineno=790, col_offset=7), [Expr(Call(Name('runCommand', Load(), lineno=791, col_offset=8), [BinOp(Str('mv %s/* %s', lineno=791, col_offset=19), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=792, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=792, col_offset=23), 'path', Load(), lineno=792, col_offset=23), 'join', Load(), lineno=792, col_offset=23), [Name('WORKDIR', Load(), lineno=793, col_offset=16), Str('libraries', lineno=793, col_offset=25), Str('Library', lineno=793, col_offset=38), Str('Frameworks', lineno=793, col_offset=49), Str('Python.framework', lineno=794, col_offset=16), Str('Versions', lineno=794, col_offset=36), Call(Name('getVersion', Load(), lineno=794, col_offset=48), [], [], None, None, lineno=794, col_offset=48), Str('lib', lineno=795, col_offset=16)], [], None, None, lineno=792, col_offset=23)], [], None, None, lineno=792, col_offset=12), Call(Name('shellQuote', Load(), lineno=796, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=796, col_offset=23), 'path', Load(), lineno=796, col_offset=23), 'join', Load(), lineno=796, col_offset=23), [Name('WORKDIR', Load(), lineno=796, col_offset=36), Str('_root', lineno=796, col_offset=45), Str('Library', lineno=796, col_offset=54), Str('Frameworks', lineno=796, col_offset=65), Str('Python.framework', lineno=797, col_offset=16), Str('Versions', lineno=797, col_offset=36), Call(Name('getVersion', Load(), lineno=797, col_offset=48), [], [], None, None, lineno=797, col_offset=48), Str('lib', lineno=798, col_offset=16)], [], None, None, lineno=796, col_offset=23)], [], None, None, lineno=796, col_offset=12)], Load(), lineno=792, col_offset=12), lineno=791, col_offset=19)], [], None, None, lineno=791, col_offset=8), lineno=791, col_offset=8)], [], lineno=790, col_offset=4), Print(None, [Str('Fix file modes', lineno=800, col_offset=10)], True, lineno=800, col_offset=4), Assign([Name('frmDir', Store(), lineno=801, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=801, col_offset=13), 'path', Load(), lineno=801, col_offset=13), 'join', Load(), lineno=801, col_offset=13), [Name('rootDir', Load(), lineno=801, col_offset=26), Str('Library', lineno=801, col_offset=35), Str('Frameworks', lineno=801, col_offset=46), Str('Python.framework', lineno=801, col_offset=60)], [], None, None, lineno=801, col_offset=13), lineno=801, col_offset=4), Assign([Name('gid', Store(), lineno=802, col_offset=4)], Attribute(Call(Attribute(Name('grp', Load(), lineno=802, col_offset=10), 'getgrnam', Load(), lineno=802, col_offset=10), [Str('admin', lineno=802, col_offset=23)], [], None, None, lineno=802, col_offset=10), 'gr_gid', Load(), lineno=802, col_offset=10), lineno=802, col_offset=4), For(Tuple([Name('dirpath', Store(), lineno=804, col_offset=8), Name('dirnames', Store(), lineno=804, col_offset=17), Name('filenames', Store(), lineno=804, col_offset=27)], Store(), lineno=804, col_offset=8), Call(Attribute(Name('os', Load(), lineno=804, col_offset=40), 'walk', Load(), lineno=804, col_offset=40), [Name('frmDir', Load(), lineno=804, col_offset=48)], [], None, None, lineno=804, col_offset=40), [For(Name('dn', Store(), lineno=805, col_offset=12), Name('dirnames', Load(), lineno=805, col_offset=18), [Expr(Call(Attribute(Name('os', Load(), lineno=806, col_offset=12), 'chmod', Load(), lineno=806, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=806, col_offset=21), 'path', Load(), lineno=806, col_offset=21), 'join', Load(), lineno=806, col_offset=21), [Name('dirpath', Load(), lineno=806, col_offset=34), Name('dn', Load(), lineno=806, col_offset=43)], [], None, None, lineno=806, col_offset=21), Num(509, lineno=806, col_offset=48)], [], None, None, lineno=806, col_offset=12), lineno=806, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=807, col_offset=12), 'chown', Load(), lineno=807, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=807, col_offset=21), 'path', Load(), lineno=807, col_offset=21), 'join', Load(), lineno=807, col_offset=21), [Name('dirpath', Load(), lineno=807, col_offset=34), Name('dn', Load(), lineno=807, col_offset=43)], [], None, None, lineno=807, col_offset=21), Num(-1, lineno=807, col_offset=49), Name('gid', Load(), lineno=807, col_offset=52)], [], None, None, lineno=807, col_offset=12), lineno=807, col_offset=12)], [], lineno=805, col_offset=8), For(Name('fn', Store(), lineno=810, col_offset=12), Name('filenames', Load(), lineno=810, col_offset=18), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=811, col_offset=15), 'path', Load(), lineno=811, col_offset=15), 'islink', Load(), lineno=811, col_offset=15), [Name('fn', Load(), lineno=811, col_offset=30)], [], None, None, lineno=811, col_offset=15), [Continue( lineno=812, col_offset=16)], [], lineno=811, col_offset=12), Assign([Name('p', Store(), lineno=815, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=815, col_offset=16), 'path', Load(), lineno=815, col_offset=16), 'join', Load(), lineno=815, col_offset=16), [Name('dirpath', Load(), lineno=815, col_offset=29), Name('fn', Load(), lineno=815, col_offset=38)], [], None, None, lineno=815, col_offset=16), lineno=815, col_offset=12), Assign([Name('st', Store(), lineno=816, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=816, col_offset=17), 'stat', Load(), lineno=816, col_offset=17), [Name('p', Load(), lineno=816, col_offset=25)], [], None, None, lineno=816, col_offset=17), lineno=816, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=817, col_offset=12), 'chmod', Load(), lineno=817, col_offset=12), [Name('p', Load(), lineno=817, col_offset=21), BinOp(Call(Attribute(Name('stat', Load(), lineno=817, col_offset=24), 'S_IMODE', Load(), lineno=817, col_offset=24), [Attribute(Name('st', Load(), lineno=817, col_offset=37), 'st_mode', Load(), lineno=817, col_offset=37)], [], None, None, lineno=817, col_offset=24), BitOr(), Attribute(Name('stat', Load(), lineno=817, col_offset=51), 'S_IWGRP', Load(), lineno=817, col_offset=51), lineno=817, col_offset=24)], [], None, None, lineno=817, col_offset=12), lineno=817, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=818, col_offset=12), 'chown', Load(), lineno=818, col_offset=12), [Name('p', Load(), lineno=818, col_offset=21), Num(-1, lineno=818, col_offset=25), Name('gid', Load(), lineno=818, col_offset=28)], [], None, None, lineno=818, col_offset=12), lineno=818, col_offset=12)], [], lineno=810, col_offset=8)], [], lineno=804, col_offset=4), Assign([Name('path', Store(), lineno=823, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=823, col_offset=10), 'path', Load(), lineno=823, col_offset=10), 'join', Load(), lineno=823, col_offset=10), [Name('rootDir', Load(), lineno=823, col_offset=23), Str('Library', lineno=823, col_offset=32), Str('Frameworks', lineno=823, col_offset=43), Str('Python.framework', lineno=823, col_offset=57), Str('Versions', lineno=824, col_offset=16), Name('version', Load(), lineno=824, col_offset=28), Str('lib', lineno=824, col_offset=37), BinOp(Str('python%s', lineno=824, col_offset=44), Mod(), Tuple([Name('version', Load(), lineno=824, col_offset=56)], Load(), lineno=824, col_offset=56), lineno=824, col_offset=44), Str('config', lineno=825, col_offset=16), Str('Makefile', lineno=825, col_offset=26)], [], None, None, lineno=823, col_offset=10), lineno=823, col_offset=4), Assign([Name('fp', Store(), lineno=826, col_offset=4)], Call(Name('open', Load(), lineno=826, col_offset=9), [Name('path', Load(), lineno=826, col_offset=14), Str('r', lineno=826, col_offset=20)], [], None, None, lineno=826, col_offset=9), lineno=826, col_offset=4), Assign([Name('data', Store(), lineno=827, col_offset=4)], Call(Attribute(Name('fp', Load(), lineno=827, col_offset=11), 'read', Load(), lineno=827, col_offset=11), [], [], None, None, lineno=827, col_offset=11), lineno=827, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=828, col_offset=4), 'close', Load(), lineno=828, col_offset=4), [], [], None, None, lineno=828, col_offset=4), lineno=828, col_offset=4), Assign([Name('data', Store(), lineno=830, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=830, col_offset=11), 'replace', Load(), lineno=830, col_offset=11), [BinOp(Str('-L%s/libraries/usr/local/lib', lineno=830, col_offset=24), Mod(), Tuple([Name('WORKDIR', Load(), lineno=830, col_offset=56)], Load(), lineno=830, col_offset=56), lineno=830, col_offset=24), Str('', lineno=830, col_offset=67)], [], None, None, lineno=830, col_offset=11), lineno=830, col_offset=4), Assign([Name('data', Store(), lineno=831, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=831, col_offset=11), 'replace', Load(), lineno=831, col_offset=11), [BinOp(Str('-I%s/libraries/usr/local/include', lineno=831, col_offset=24), Mod(), Tuple([Name('WORKDIR', Load(), lineno=831, col_offset=60)], Load(), lineno=831, col_offset=60), lineno=831, col_offset=24), Str('', lineno=831, col_offset=71)], [], None, None, lineno=831, col_offset=11), lineno=831, col_offset=4), Assign([Name('fp', Store(), lineno=832, col_offset=4)], Call(Name('open', Load(), lineno=832, col_offset=9), [Name('path', Load(), lineno=832, col_offset=14), Str('w', lineno=832, col_offset=20)], [], None, None, lineno=832, col_offset=9), lineno=832, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=833, col_offset=4), 'write', Load(), lineno=833, col_offset=4), [Name('data', Load(), lineno=833, col_offset=13)], [], None, None, lineno=833, col_offset=4), lineno=833, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=834, col_offset=4), 'close', Load(), lineno=834, col_offset=4), [], [], None, None, lineno=834, col_offset=4), lineno=834, col_offset=4), Assign([Name('usr_local_bin', Store(), lineno=837, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=837, col_offset=20), 'path', Load(), lineno=837, col_offset=20), 'join', Load(), lineno=837, col_offset=20), [Name('rootDir', Load(), lineno=837, col_offset=33), Str('usr', lineno=837, col_offset=42), Str('local', lineno=837, col_offset=49), Str('bin', lineno=837, col_offset=58)], [], None, None, lineno=837, col_offset=20), lineno=837, col_offset=4), Assign([Name('to_framework', Store(), lineno=838, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=838, col_offset=19), 'path', Load(), lineno=838, col_offset=19), 'join', Load(), lineno=838, col_offset=19), [Str('..', lineno=838, col_offset=32), Str('..', lineno=838, col_offset=38), Str('..', lineno=838, col_offset=44), Str('Library', lineno=838, col_offset=50), Str('Frameworks', lineno=838, col_offset=61), Str('Python.framework', lineno=839, col_offset=12), Str('Versions', lineno=839, col_offset=32), Name('version', Load(), lineno=839, col_offset=44), Str('bin', lineno=839, col_offset=53)], [], None, None, lineno=838, col_offset=19), lineno=838, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=840, col_offset=7), 'path', Load(), lineno=840, col_offset=7), 'exists', Load(), lineno=840, col_offset=7), [Name('usr_local_bin', Load(), lineno=840, col_offset=22)], [], None, None, lineno=840, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=841, col_offset=8), 'rmtree', Load(), lineno=841, col_offset=8), [Name('usr_local_bin', Load(), lineno=841, col_offset=22)], [], None, None, lineno=841, col_offset=8), lineno=841, col_offset=8)], [], lineno=840, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=842, col_offset=4), 'makedirs', Load(), lineno=842, col_offset=4), [Name('usr_local_bin', Load(), lineno=842, col_offset=16)], [], None, None, lineno=842, col_offset=4), lineno=842, col_offset=4), For(Name('fn', Store(), lineno=843, col_offset=8), Call(Attribute(Name('os', Load(), lineno=843, col_offset=14), 'listdir', Load(), lineno=843, col_offset=14), [Call(Attribute(Attribute(Name('os', Load(), lineno=844, col_offset=16), 'path', Load(), lineno=844, col_offset=16), 'join', Load(), lineno=844, col_offset=16), [Name('frmDir', Load(), lineno=844, col_offset=29), Str('Versions', lineno=844, col_offset=37), Name('version', Load(), lineno=844, col_offset=49), Str('bin', lineno=844, col_offset=58)], [], None, None, lineno=844, col_offset=16)], [], None, None, lineno=843, col_offset=14), [Expr(Call(Attribute(Name('os', Load(), lineno=845, col_offset=8), 'symlink', Load(), lineno=845, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=845, col_offset=19), 'path', Load(), lineno=845, col_offset=19), 'join', Load(), lineno=845, col_offset=19), [Name('to_framework', Load(), lineno=845, col_offset=32), Name('fn', Load(), lineno=845, col_offset=46)], [], None, None, lineno=845, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=846, col_offset=19), 'path', Load(), lineno=846, col_offset=19), 'join', Load(), lineno=846, col_offset=19), [Name('usr_local_bin', Load(), lineno=846, col_offset=32), Name('fn', Load(), lineno=846, col_offset=47)], [], None, None, lineno=846, col_offset=19)], [], None, None, lineno=845, col_offset=8), lineno=845, col_offset=8)], [], lineno=843, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=848, col_offset=4), 'chdir', Load(), lineno=848, col_offset=4), [Name('curdir', Load(), lineno=848, col_offset=13)], [], None, None, lineno=848, col_offset=4), lineno=848, col_offset=4)], [], lineno=738, col_offset=0), FunctionDef('patchFile', arguments([Name('inPath', Param(), lineno=852, col_offset=14), Name('outPath', Param(), lineno=852, col_offset=22)], None, None, []), [Assign([Name('data', Store(), lineno=853, col_offset=4)], Call(Name('fileContents', Load(), lineno=853, col_offset=11), [Name('inPath', Load(), lineno=853, col_offset=24)], [], None, None, lineno=853, col_offset=11), lineno=853, col_offset=4), Assign([Name('data', Store(), lineno=854, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=854, col_offset=11), 'replace', Load(), lineno=854, col_offset=11), [Str('$FULL_VERSION', lineno=854, col_offset=24), Call(Name('getFullVersion', Load(), lineno=854, col_offset=41), [], [], None, None, lineno=854, col_offset=41)], [], None, None, lineno=854, col_offset=11), lineno=854, col_offset=4), Assign([Name('data', Store(), lineno=855, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=855, col_offset=11), 'replace', Load(), lineno=855, col_offset=11), [Str('$VERSION', lineno=855, col_offset=24), Call(Name('getVersion', Load(), lineno=855, col_offset=36), [], [], None, None, lineno=855, col_offset=36)], [], None, None, lineno=855, col_offset=11), lineno=855, col_offset=4), Assign([Name('data', Store(), lineno=856, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=856, col_offset=11), 'replace', Load(), lineno=856, col_offset=11), [Str('$MACOSX_DEPLOYMENT_TARGET', lineno=856, col_offset=24), Call(Attribute(Str('', lineno=856, col_offset=53), 'join', Load(), lineno=856, col_offset=53), [Tuple([Name('DEPTARGET', Load(), lineno=856, col_offset=62), Str(' or later', lineno=856, col_offset=73)], Load(), lineno=856, col_offset=62)], [], None, None, lineno=856, col_offset=53)], [], None, None, lineno=856, col_offset=11), lineno=856, col_offset=4), Assign([Name('data', Store(), lineno=857, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=857, col_offset=11), 'replace', Load(), lineno=857, col_offset=11), [Str('$ARCHITECTURES', lineno=857, col_offset=24), Call(Attribute(Str(', ', lineno=857, col_offset=42), 'join', Load(), lineno=857, col_offset=42), [Subscript(Name('universal_opts_map', Load(), lineno=857, col_offset=52), Index(Name('UNIVERSALARCHS', Load(), lineno=857, col_offset=71)), Load(), lineno=857, col_offset=52)], [], None, None, lineno=857, col_offset=42)], [], None, None, lineno=857, col_offset=11), lineno=857, col_offset=4), Assign([Name('data', Store(), lineno=858, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=858, col_offset=11), 'replace', Load(), lineno=858, col_offset=11), [Str('$INSTALL_SIZE', lineno=858, col_offset=24), Call(Name('installSize', Load(), lineno=858, col_offset=41), [], [], None, None, lineno=858, col_offset=41)], [], None, None, lineno=858, col_offset=11), lineno=858, col_offset=4), Assign([Name('data', Store(), lineno=861, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=861, col_offset=11), 'replace', Load(), lineno=861, col_offset=11), [Str('$PYTHONFRAMEWORKINSTALLDIR', lineno=861, col_offset=24), Str('/Library/Frameworks/Python.framework', lineno=861, col_offset=54)], [], None, None, lineno=861, col_offset=11), lineno=861, col_offset=4), Assign([Name('fp', Store(), lineno=862, col_offset=4)], Call(Name('open', Load(), lineno=862, col_offset=9), [Name('outPath', Load(), lineno=862, col_offset=14), Str('wb', lineno=862, col_offset=23)], [], None, None, lineno=862, col_offset=9), lineno=862, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=863, col_offset=4), 'write', Load(), lineno=863, col_offset=4), [Name('data', Load(), lineno=863, col_offset=13)], [], None, None, lineno=863, col_offset=4), lineno=863, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=864, col_offset=4), 'close', Load(), lineno=864, col_offset=4), [], [], None, None, lineno=864, col_offset=4), lineno=864, col_offset=4)], [], lineno=852, col_offset=0), FunctionDef('patchScript', arguments([Name('inPath', Param(), lineno=866, col_offset=16), Name('outPath', Param(), lineno=866, col_offset=24)], None, None, []), [Assign([Name('data', Store(), lineno=867, col_offset=4)], Call(Name('fileContents', Load(), lineno=867, col_offset=11), [Name('inPath', Load(), lineno=867, col_offset=24)], [], None, None, lineno=867, col_offset=11), lineno=867, col_offset=4), Assign([Name('data', Store(), lineno=868, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=868, col_offset=11), 'replace', Load(), lineno=868, col_offset=11), [Str('@PYVER@', lineno=868, col_offset=24), Call(Name('getVersion', Load(), lineno=868, col_offset=35), [], [], None, None, lineno=868, col_offset=35)], [], None, None, lineno=868, col_offset=11), lineno=868, col_offset=4), Assign([Name('fp', Store(), lineno=869, col_offset=4)], Call(Name('open', Load(), lineno=869, col_offset=9), [Name('outPath', Load(), lineno=869, col_offset=14), Str('wb', lineno=869, col_offset=23)], [], None, None, lineno=869, col_offset=9), lineno=869, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=870, col_offset=4), 'write', Load(), lineno=870, col_offset=4), [Name('data', Load(), lineno=870, col_offset=13)], [], None, None, lineno=870, col_offset=4), lineno=870, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=871, col_offset=4), 'close', Load(), lineno=871, col_offset=4), [], [], None, None, lineno=871, col_offset=4), lineno=871, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=872, col_offset=4), 'chmod', Load(), lineno=872, col_offset=4), [Name('outPath', Load(), lineno=872, col_offset=13), Num(493, lineno=872, col_offset=22)], [], None, None, lineno=872, col_offset=4), lineno=872, col_offset=4)], [], lineno=866, col_offset=0), FunctionDef('packageFromRecipe', arguments([Name('targetDir', Param(), lineno=876, col_offset=22), Name('recipe', Param(), lineno=876, col_offset=33)], None, None, []), [Assign([Name('curdir', Store(), lineno=877, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=877, col_offset=13), 'getcwd', Load(), lineno=877, col_offset=13), [], [], None, None, lineno=877, col_offset=13), lineno=877, col_offset=4), TryFinally([Assign([Name('pkgname', Store(), lineno=882, col_offset=8)], BinOp(Str('%s-%s', lineno=882, col_offset=18), Mod(), Tuple([Subscript(Name('recipe', Load(), lineno=882, col_offset=27), Index(Str('name', lineno=882, col_offset=34)), Load(), lineno=882, col_offset=27), Call(Name('getVersion', Load(), lineno=882, col_offset=43), [], [], None, None, lineno=882, col_offset=43)], Load(), lineno=882, col_offset=27), lineno=882, col_offset=18), lineno=882, col_offset=8), Assign([Name('srcdir', Store(), lineno=883, col_offset=8)], Call(Attribute(Name('recipe', Load(), lineno=883, col_offset=18), 'get', Load(), lineno=883, col_offset=18), [Str('source', lineno=883, col_offset=29)], [], None, None, lineno=883, col_offset=18), lineno=883, col_offset=8), Assign([Name('pkgroot', Store(), lineno=884, col_offset=8)], Call(Attribute(Name('recipe', Load(), lineno=884, col_offset=18), 'get', Load(), lineno=884, col_offset=18), [Str('topdir', lineno=884, col_offset=29), Name('srcdir', Load(), lineno=884, col_offset=39)], [], None, None, lineno=884, col_offset=18), lineno=884, col_offset=8), Assign([Name('postflight', Store(), lineno=885, col_offset=8)], Call(Attribute(Name('recipe', Load(), lineno=885, col_offset=21), 'get', Load(), lineno=885, col_offset=21), [Str('postflight', lineno=885, col_offset=32)], [], None, None, lineno=885, col_offset=21), lineno=885, col_offset=8), Assign([Name('readme', Store(), lineno=886, col_offset=8)], Call(Attribute(Name('textwrap', Load(), lineno=886, col_offset=17), 'dedent', Load(), lineno=886, col_offset=17), [Subscript(Name('recipe', Load(), lineno=886, col_offset=33), Index(Str('readme', lineno=886, col_offset=40)), Load(), lineno=886, col_offset=33)], [], None, None, lineno=886, col_offset=17), lineno=886, col_offset=8), Assign([Name('isRequired', Store(), lineno=887, col_offset=8)], Call(Attribute(Name('recipe', Load(), lineno=887, col_offset=21), 'get', Load(), lineno=887, col_offset=21), [Str('required', lineno=887, col_offset=32), Name('True', Load(), lineno=887, col_offset=44)], [], None, None, lineno=887, col_offset=21), lineno=887, col_offset=8), Print(None, [BinOp(Str('- building package %s', lineno=889, col_offset=14), Mod(), Tuple([Name('pkgname', Load(), lineno=889, col_offset=39)], Load(), lineno=889, col_offset=39), lineno=889, col_offset=14)], True, lineno=889, col_offset=8), Assign([Name('textvars', Store(), lineno=892, col_offset=8)], Call(Name('dict', Load(), lineno=892, col_offset=19), [], [keyword('VER', Call(Name('getVersion', Load(), lineno=893, col_offset=16), [], [], None, None, lineno=893, col_offset=16)), keyword('FULLVER', Call(Name('getFullVersion', Load(), lineno=894, col_offset=20), [], [], None, None, lineno=894, col_offset=20))], None, None, lineno=892, col_offset=19), lineno=892, col_offset=8), Assign([Name('readme', Store(), lineno=896, col_offset=8)], BinOp(Name('readme', Load(), lineno=896, col_offset=17), Mod(), Name('textvars', Load(), lineno=896, col_offset=26), lineno=896, col_offset=17), lineno=896, col_offset=8), If(Compare(Name('pkgroot', Load(), lineno=898, col_offset=11), [IsNot()], [Name('None', Load(), lineno=898, col_offset=26)], lineno=898, col_offset=11), [Assign([Name('pkgroot', Store(), lineno=899, col_offset=12)], BinOp(Name('pkgroot', Load(), lineno=899, col_offset=22), Mod(), Name('textvars', Load(), lineno=899, col_offset=32), lineno=899, col_offset=22), lineno=899, col_offset=12)], [Assign([Name('pkgroot', Store(), lineno=901, col_offset=12)], Str('/', lineno=901, col_offset=22), lineno=901, col_offset=12)], lineno=898, col_offset=8), If(Compare(Name('srcdir', Load(), lineno=903, col_offset=11), [IsNot()], [Name('None', Load(), lineno=903, col_offset=25)], lineno=903, col_offset=11), [Assign([Name('srcdir', Store(), lineno=904, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=904, col_offset=21), 'path', Load(), lineno=904, col_offset=21), 'join', Load(), lineno=904, col_offset=21), [Name('WORKDIR', Load(), lineno=904, col_offset=34), Str('_root', lineno=904, col_offset=43), Subscript(Name('srcdir', Load(), lineno=904, col_offset=52), Slice(Num(1, lineno=904, col_offset=59), None, None), Load(), lineno=904, col_offset=52)], [], None, None, lineno=904, col_offset=21), lineno=904, col_offset=12), Assign([Name('srcdir', Store(), lineno=905, col_offset=12)], BinOp(Name('srcdir', Load(), lineno=905, col_offset=21), Mod(), Name('textvars', Load(), lineno=905, col_offset=30), lineno=905, col_offset=21), lineno=905, col_offset=12)], [], lineno=903, col_offset=8), If(Compare(Name('postflight', Load(), lineno=907, col_offset=11), [IsNot()], [Name('None', Load(), lineno=907, col_offset=29)], lineno=907, col_offset=11), [Assign([Name('postflight', Store(), lineno=908, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=908, col_offset=25), 'path', Load(), lineno=908, col_offset=25), 'abspath', Load(), lineno=908, col_offset=25), [Name('postflight', Load(), lineno=908, col_offset=41)], [], None, None, lineno=908, col_offset=25), lineno=908, col_offset=12)], [], lineno=907, col_offset=8), Assign([Name('packageContents', Store(), lineno=910, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=910, col_offset=26), 'path', Load(), lineno=910, col_offset=26), 'join', Load(), lineno=910, col_offset=26), [Name('targetDir', Load(), lineno=910, col_offset=39), BinOp(Name('pkgname', Load(), lineno=910, col_offset=50), Add(), Str('.pkg', lineno=910, col_offset=60), lineno=910, col_offset=50), Str('Contents', lineno=910, col_offset=68)], [], None, None, lineno=910, col_offset=26), lineno=910, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=911, col_offset=8), 'makedirs', Load(), lineno=911, col_offset=8), [Name('packageContents', Load(), lineno=911, col_offset=20)], [], None, None, lineno=911, col_offset=8), lineno=911, col_offset=8), If(Compare(Name('srcdir', Load(), lineno=913, col_offset=11), [IsNot()], [Name('None', Load(), lineno=913, col_offset=25)], lineno=913, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=914, col_offset=12), 'chdir', Load(), lineno=914, col_offset=12), [Name('srcdir', Load(), lineno=914, col_offset=21)], [], None, None, lineno=914, col_offset=12), lineno=914, col_offset=12), Expr(Call(Name('runCommand', Load(), lineno=915, col_offset=12), [BinOp(Str('pax -wf %s . 2>&1', lineno=915, col_offset=23), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=915, col_offset=44), [Call(Attribute(Attribute(Name('os', Load(), lineno=915, col_offset=55), 'path', Load(), lineno=915, col_offset=55), 'join', Load(), lineno=915, col_offset=55), [Name('packageContents', Load(), lineno=915, col_offset=68), Str('Archive.pax', lineno=915, col_offset=85)], [], None, None, lineno=915, col_offset=55)], [], None, None, lineno=915, col_offset=44)], Load(), lineno=915, col_offset=44), lineno=915, col_offset=23)], [], None, None, lineno=915, col_offset=12), lineno=915, col_offset=12), Expr(Call(Name('runCommand', Load(), lineno=916, col_offset=12), [BinOp(Str('gzip -9 %s 2>&1', lineno=916, col_offset=23), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=916, col_offset=42), [Call(Attribute(Attribute(Name('os', Load(), lineno=916, col_offset=53), 'path', Load(), lineno=916, col_offset=53), 'join', Load(), lineno=916, col_offset=53), [Name('packageContents', Load(), lineno=916, col_offset=66), Str('Archive.pax', lineno=916, col_offset=83)], [], None, None, lineno=916, col_offset=53)], [], None, None, lineno=916, col_offset=42)], Load(), lineno=916, col_offset=42), lineno=916, col_offset=23)], [], None, None, lineno=916, col_offset=12), lineno=916, col_offset=12), Expr(Call(Name('runCommand', Load(), lineno=917, col_offset=12), [BinOp(Str('mkbom . %s 2>&1', lineno=917, col_offset=23), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=917, col_offset=42), [Call(Attribute(Attribute(Name('os', Load(), lineno=917, col_offset=53), 'path', Load(), lineno=917, col_offset=53), 'join', Load(), lineno=917, col_offset=53), [Name('packageContents', Load(), lineno=917, col_offset=66), Str('Archive.bom', lineno=917, col_offset=83)], [], None, None, lineno=917, col_offset=53)], [], None, None, lineno=917, col_offset=42)], Load(), lineno=917, col_offset=42), lineno=917, col_offset=23)], [], None, None, lineno=917, col_offset=12), lineno=917, col_offset=12)], [], lineno=913, col_offset=8), Assign([Name('fn', Store(), lineno=919, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=919, col_offset=13), 'path', Load(), lineno=919, col_offset=13), 'join', Load(), lineno=919, col_offset=13), [Name('packageContents', Load(), lineno=919, col_offset=26), Str('PkgInfo', lineno=919, col_offset=43)], [], None, None, lineno=919, col_offset=13), lineno=919, col_offset=8), Assign([Name('fp', Store(), lineno=920, col_offset=8)], Call(Name('open', Load(), lineno=920, col_offset=13), [Name('fn', Load(), lineno=920, col_offset=18), Str('w', lineno=920, col_offset=22)], [], None, None, lineno=920, col_offset=13), lineno=920, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=921, col_offset=8), 'write', Load(), lineno=921, col_offset=8), [Str('pmkrpkg1', lineno=921, col_offset=17)], [], None, None, lineno=921, col_offset=8), lineno=921, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=922, col_offset=8), 'close', Load(), lineno=922, col_offset=8), [], [], None, None, lineno=922, col_offset=8), lineno=922, col_offset=8), Assign([Name('rsrcDir', Store(), lineno=924, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=924, col_offset=18), 'path', Load(), lineno=924, col_offset=18), 'join', Load(), lineno=924, col_offset=18), [Name('packageContents', Load(), lineno=924, col_offset=31), Str('Resources', lineno=924, col_offset=48)], [], None, None, lineno=924, col_offset=18), lineno=924, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=925, col_offset=8), 'mkdir', Load(), lineno=925, col_offset=8), [Name('rsrcDir', Load(), lineno=925, col_offset=17)], [], None, None, lineno=925, col_offset=8), lineno=925, col_offset=8), Assign([Name('fp', Store(), lineno=926, col_offset=8)], Call(Name('open', Load(), lineno=926, col_offset=13), [Call(Attribute(Attribute(Name('os', Load(), lineno=926, col_offset=18), 'path', Load(), lineno=926, col_offset=18), 'join', Load(), lineno=926, col_offset=18), [Name('rsrcDir', Load(), lineno=926, col_offset=31), Str('ReadMe.txt', lineno=926, col_offset=40)], [], None, None, lineno=926, col_offset=18), Str('w', lineno=926, col_offset=55)], [], None, None, lineno=926, col_offset=13), lineno=926, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=927, col_offset=8), 'write', Load(), lineno=927, col_offset=8), [Name('readme', Load(), lineno=927, col_offset=17)], [], None, None, lineno=927, col_offset=8), lineno=927, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=928, col_offset=8), 'close', Load(), lineno=928, col_offset=8), [], [], None, None, lineno=928, col_offset=8), lineno=928, col_offset=8), If(Compare(Name('postflight', Load(), lineno=930, col_offset=11), [IsNot()], [Name('None', Load(), lineno=930, col_offset=29)], lineno=930, col_offset=11), [Expr(Call(Name('patchScript', Load(), lineno=931, col_offset=12), [Name('postflight', Load(), lineno=931, col_offset=24), Call(Attribute(Attribute(Name('os', Load(), lineno=931, col_offset=36), 'path', Load(), lineno=931, col_offset=36), 'join', Load(), lineno=931, col_offset=36), [Name('rsrcDir', Load(), lineno=931, col_offset=49), Str('postflight', lineno=931, col_offset=58)], [], None, None, lineno=931, col_offset=36)], [], None, None, lineno=931, col_offset=12), lineno=931, col_offset=12)], [], lineno=930, col_offset=8), Assign([Name('vers', Store(), lineno=933, col_offset=8)], Call(Name('getFullVersion', Load(), lineno=933, col_offset=15), [], [], None, None, lineno=933, col_offset=15), lineno=933, col_offset=8), Assign([Tuple([Name('major', Store(), lineno=934, col_offset=8), Name('minor', Store(), lineno=934, col_offset=15)], Store(), lineno=934, col_offset=8)], Call(Name('map', Load(), lineno=934, col_offset=23), [Name('int', Load(), lineno=934, col_offset=27), Call(Attribute(Call(Name('getVersion', Load(), lineno=934, col_offset=32), [], [], None, None, lineno=934, col_offset=32), 'split', Load(), lineno=934, col_offset=32), [Str('.', lineno=934, col_offset=51), Num(2, lineno=934, col_offset=56)], [], None, None, lineno=934, col_offset=32)], [], None, None, lineno=934, col_offset=23), lineno=934, col_offset=8), Assign([Name('pl', Store(), lineno=935, col_offset=8)], Call(Name('Plist', Load(), lineno=935, col_offset=13), [], [keyword('CFBundleGetInfoString', BinOp(Str('Python.%s %s', lineno=936, col_offset=38), Mod(), Tuple([Name('pkgname', Load(), lineno=936, col_offset=54), Name('vers', Load(), lineno=936, col_offset=63)], Load(), lineno=936, col_offset=54), lineno=936, col_offset=38)), keyword('CFBundleIdentifier', BinOp(Str('org.python.Python.%s', lineno=937, col_offset=35), Mod(), Tuple([Name('pkgname', Load(), lineno=937, col_offset=59)], Load(), lineno=937, col_offset=59), lineno=937, col_offset=35)), keyword('CFBundleName', BinOp(Str('Python.%s', lineno=938, col_offset=29), Mod(), Tuple([Name('pkgname', Load(), lineno=938, col_offset=42)], Load(), lineno=938, col_offset=42), lineno=938, col_offset=29)), keyword('CFBundleShortVersionString', Name('vers', Load(), lineno=939, col_offset=43)), keyword('IFMajorVersion', Name('major', Load(), lineno=940, col_offset=31)), keyword('IFMinorVersion', Name('minor', Load(), lineno=941, col_offset=31)), keyword('IFPkgFormatVersion', Num(0.10000000149011612, lineno=942, col_offset=35)), keyword('IFPkgFlagAllowBackRev', Name('False', Load(), lineno=943, col_offset=38)), keyword('IFPkgFlagAuthorizationAction', Str('RootAuthorization', lineno=944, col_offset=45)), keyword('IFPkgFlagDefaultLocation', Name('pkgroot', Load(), lineno=945, col_offset=41)), keyword('IFPkgFlagFollowLinks', Name('True', Load(), lineno=946, col_offset=37)), keyword('IFPkgFlagInstallFat', Name('True', Load(), lineno=947, col_offset=36)), keyword('IFPkgFlagIsRequired', Name('isRequired', Load(), lineno=948, col_offset=36)), keyword('IFPkgFlagOverwritePermissions', Name('False', Load(), lineno=949, col_offset=46)), keyword('IFPkgFlagRelocatable', Name('False', Load(), lineno=950, col_offset=37)), keyword('IFPkgFlagRestartAction', Str('NoRestart', lineno=951, col_offset=39)), keyword('IFPkgFlagRootVolumeOnly', Name('True', Load(), lineno=952, col_offset=40)), keyword('IFPkgFlagUpdateInstalledLangauges', Name('False', Load(), lineno=953, col_offset=50))], None, None, lineno=935, col_offset=13), lineno=935, col_offset=8), Expr(Call(Name('writePlist', Load(), lineno=955, col_offset=8), [Name('pl', Load(), lineno=955, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=955, col_offset=23), 'path', Load(), lineno=955, col_offset=23), 'join', Load(), lineno=955, col_offset=23), [Name('packageContents', Load(), lineno=955, col_offset=36), Str('Info.plist', lineno=955, col_offset=53)], [], None, None, lineno=955, col_offset=23)], [], None, None, lineno=955, col_offset=8), lineno=955, col_offset=8), Assign([Name('pl', Store(), lineno=957, col_offset=8)], Call(Name('Plist', Load(), lineno=957, col_offset=13), [], [keyword('IFPkgDescriptionDescription', Name('readme', Load(), lineno=958, col_offset=48)), keyword('IFPkgDescriptionTitle', Call(Attribute(Name('recipe', Load(), lineno=959, col_offset=42), 'get', Load(), lineno=959, col_offset=42), [Str('long_name', lineno=959, col_offset=53), BinOp(Str('Python.%s', lineno=959, col_offset=66), Mod(), Tuple([Name('pkgname', Load(), lineno=959, col_offset=79)], Load(), lineno=959, col_offset=79), lineno=959, col_offset=66)], [], None, None, lineno=959, col_offset=42)), keyword('IFPkgDescriptionVersion', Name('vers', Load(), lineno=960, col_offset=44))], None, None, lineno=957, col_offset=13), lineno=957, col_offset=8), Expr(Call(Name('writePlist', Load(), lineno=962, col_offset=8), [Name('pl', Load(), lineno=962, col_offset=19), Call(Attribute(Attribute(Name('os', Load(), lineno=962, col_offset=23), 'path', Load(), lineno=962, col_offset=23), 'join', Load(), lineno=962, col_offset=23), [Name('packageContents', Load(), lineno=962, col_offset=36), Str('Resources', lineno=962, col_offset=53), Str('Description.plist', lineno=962, col_offset=66)], [], None, None, lineno=962, col_offset=23)], [], None, None, lineno=962, col_offset=8), lineno=962, col_offset=8)], [Expr(Call(Attribute(Name('os', Load(), lineno=965, col_offset=8), 'chdir', Load(), lineno=965, col_offset=8), [Name('curdir', Load(), lineno=965, col_offset=17)], [], None, None, lineno=965, col_offset=8), lineno=965, col_offset=8)], lineno=878, col_offset=4)], [], lineno=876, col_offset=0), FunctionDef('makeMpkgPlist', arguments([Name('path', Param(), lineno=968, col_offset=18)], None, None, []), [Assign([Name('vers', Store(), lineno=970, col_offset=4)], Call(Name('getFullVersion', Load(), lineno=970, col_offset=11), [], [], None, None, lineno=970, col_offset=11), lineno=970, col_offset=4), Assign([Tuple([Name('major', Store(), lineno=971, col_offset=4), Name('minor', Store(), lineno=971, col_offset=11)], Store(), lineno=971, col_offset=4)], Call(Name('map', Load(), lineno=971, col_offset=19), [Name('int', Load(), lineno=971, col_offset=23), Call(Attribute(Call(Name('getVersion', Load(), lineno=971, col_offset=28), [], [], None, None, lineno=971, col_offset=28), 'split', Load(), lineno=971, col_offset=28), [Str('.', lineno=971, col_offset=47), Num(2, lineno=971, col_offset=52)], [], None, None, lineno=971, col_offset=28)], [], None, None, lineno=971, col_offset=19), lineno=971, col_offset=4), Assign([Name('pl', Store(), lineno=973, col_offset=4)], Call(Name('Plist', Load(), lineno=973, col_offset=9), [], [keyword('CFBundleGetInfoString', BinOp(Str('Python %s', lineno=974, col_offset=34), Mod(), Tuple([Name('vers', Load(), lineno=974, col_offset=47)], Load(), lineno=974, col_offset=47), lineno=974, col_offset=34)), keyword('CFBundleIdentifier', Str('org.python.Python', lineno=975, col_offset=31)), keyword('CFBundleName', Str('Python', lineno=976, col_offset=25)), keyword('CFBundleShortVersionString', Name('vers', Load(), lineno=977, col_offset=39)), keyword('IFMajorVersion', Name('major', Load(), lineno=978, col_offset=27)), keyword('IFMinorVersion', Name('minor', Load(), lineno=979, col_offset=27)), keyword('IFPkgFlagComponentDirectory', Str('Contents/Packages', lineno=980, col_offset=40)), keyword('IFPkgFlagPackageList', ListComp(Call(Name('dict', Load(), lineno=982, col_offset=16), [], [keyword('IFPkgFlagPackageLocation', BinOp(Str('%s-%s.pkg', lineno=983, col_offset=45), Mod(), Tuple([Subscript(Name('item', Load(), lineno=983, col_offset=58), Index(Str('name', lineno=983, col_offset=63)), Load(), lineno=983, col_offset=58), Call(Name('getVersion', Load(), lineno=983, col_offset=72), [], [], None, None, lineno=983, col_offset=72)], Load(), lineno=983, col_offset=58), lineno=983, col_offset=45)), keyword('IFPkgFlagPackageSelection', Call(Attribute(Name('item', Load(), lineno=984, col_offset=46), 'get', Load(), lineno=984, col_offset=46), [Str('selected', lineno=984, col_offset=55), Str('selected', lineno=984, col_offset=67)], [], None, None, lineno=984, col_offset=46))], None, None, lineno=982, col_offset=16), [comprehension(Name('item', Store(), lineno=986, col_offset=20), Call(Name('pkg_recipes', Load(), lineno=986, col_offset=28), [], [], None, None, lineno=986, col_offset=28), [])], lineno=982, col_offset=16)), keyword('IFPkgFormatVersion', Num(0.10000000149011612, lineno=988, col_offset=31)), keyword('IFPkgFlagBackgroundScaling', Str('proportional', lineno=989, col_offset=39)), keyword('IFPkgFlagBackgroundAlignment', Str('left', lineno=990, col_offset=41)), keyword('IFPkgFlagAuthorizationAction', Str('RootAuthorization', lineno=991, col_offset=41))], None, None, lineno=973, col_offset=9), lineno=973, col_offset=4), Expr(Call(Name('writePlist', Load(), lineno=994, col_offset=4), [Name('pl', Load(), lineno=994, col_offset=15), Name('path', Load(), lineno=994, col_offset=19)], [], None, None, lineno=994, col_offset=4), lineno=994, col_offset=4)], [], lineno=968, col_offset=0), FunctionDef('buildInstaller', arguments([], None, None, []), [For(Tuple([Name('dirpath', Store(), lineno=1000, col_offset=8), Name('_', Store(), lineno=1000, col_offset=17), Name('filenames', Store(), lineno=1000, col_offset=20)], Store(), lineno=1000, col_offset=8), Call(Attribute(Name('os', Load(), lineno=1000, col_offset=33), 'walk', Load(), lineno=1000, col_offset=33), [Call(Attribute(Attribute(Name('os', Load(), lineno=1000, col_offset=41), 'path', Load(), lineno=1000, col_offset=41), 'join', Load(), lineno=1000, col_offset=41), [Name('WORKDIR', Load(), lineno=1000, col_offset=54), Str('_root', lineno=1000, col_offset=63)], [], None, None, lineno=1000, col_offset=41)], [], None, None, lineno=1000, col_offset=33), [For(Name('fn', Store(), lineno=1001, col_offset=12), Name('filenames', Load(), lineno=1001, col_offset=18), [If(BoolOp(Or(), [Call(Attribute(Name('fn', Load(), lineno=1002, col_offset=15), 'endswith', Load(), lineno=1002, col_offset=15), [Str('.pyc', lineno=1002, col_offset=27)], [], None, None, lineno=1002, col_offset=15), Call(Attribute(Name('fn', Load(), lineno=1002, col_offset=38), 'endswith', Load(), lineno=1002, col_offset=38), [Str('.pyo', lineno=1002, col_offset=50)], [], None, None, lineno=1002, col_offset=38)], lineno=1002, col_offset=15), [Expr(Call(Attribute(Name('os', Load(), lineno=1003, col_offset=16), 'unlink', Load(), lineno=1003, col_offset=16), [Call(Attribute(Attribute(Name('os', Load(), lineno=1003, col_offset=26), 'path', Load(), lineno=1003, col_offset=26), 'join', Load(), lineno=1003, col_offset=26), [Name('dirpath', Load(), lineno=1003, col_offset=39), Name('fn', Load(), lineno=1003, col_offset=48)], [], None, None, lineno=1003, col_offset=26)], [], None, None, lineno=1003, col_offset=16), lineno=1003, col_offset=16)], [], lineno=1002, col_offset=12)], [], lineno=1001, col_offset=8)], [], lineno=1000, col_offset=4), Assign([Name('outdir', Store(), lineno=1005, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1005, col_offset=13), 'path', Load(), lineno=1005, col_offset=13), 'join', Load(), lineno=1005, col_offset=13), [Name('WORKDIR', Load(), lineno=1005, col_offset=26), Str('installer', lineno=1005, col_offset=35)], [], None, None, lineno=1005, col_offset=13), lineno=1005, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1006, col_offset=7), 'path', Load(), lineno=1006, col_offset=7), 'exists', Load(), lineno=1006, col_offset=7), [Name('outdir', Load(), lineno=1006, col_offset=22)], [], None, None, lineno=1006, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=1007, col_offset=8), 'rmtree', Load(), lineno=1007, col_offset=8), [Name('outdir', Load(), lineno=1007, col_offset=22)], [], None, None, lineno=1007, col_offset=8), lineno=1007, col_offset=8)], [], lineno=1006, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1008, col_offset=4), 'mkdir', Load(), lineno=1008, col_offset=4), [Name('outdir', Load(), lineno=1008, col_offset=13)], [], None, None, lineno=1008, col_offset=4), lineno=1008, col_offset=4), Assign([Name('pkgroot', Store(), lineno=1010, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1010, col_offset=14), 'path', Load(), lineno=1010, col_offset=14), 'join', Load(), lineno=1010, col_offset=14), [Name('outdir', Load(), lineno=1010, col_offset=27), Str('Python.mpkg', lineno=1010, col_offset=35), Str('Contents', lineno=1010, col_offset=50)], [], None, None, lineno=1010, col_offset=14), lineno=1010, col_offset=4), Assign([Name('pkgcontents', Store(), lineno=1011, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1011, col_offset=18), 'path', Load(), lineno=1011, col_offset=18), 'join', Load(), lineno=1011, col_offset=18), [Name('pkgroot', Load(), lineno=1011, col_offset=31), Str('Packages', lineno=1011, col_offset=40)], [], None, None, lineno=1011, col_offset=18), lineno=1011, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1012, col_offset=4), 'makedirs', Load(), lineno=1012, col_offset=4), [Name('pkgcontents', Load(), lineno=1012, col_offset=16)], [], None, None, lineno=1012, col_offset=4), lineno=1012, col_offset=4), For(Name('recipe', Store(), lineno=1013, col_offset=8), Call(Name('pkg_recipes', Load(), lineno=1013, col_offset=18), [], [], None, None, lineno=1013, col_offset=18), [Expr(Call(Name('packageFromRecipe', Load(), lineno=1014, col_offset=8), [Name('pkgcontents', Load(), lineno=1014, col_offset=26), Name('recipe', Load(), lineno=1014, col_offset=39)], [], None, None, lineno=1014, col_offset=8), lineno=1014, col_offset=8)], [], lineno=1013, col_offset=4), Assign([Name('rsrcDir', Store(), lineno=1016, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1016, col_offset=14), 'path', Load(), lineno=1016, col_offset=14), 'join', Load(), lineno=1016, col_offset=14), [Name('pkgroot', Load(), lineno=1016, col_offset=27), Str('Resources', lineno=1016, col_offset=36)], [], None, None, lineno=1016, col_offset=14), lineno=1016, col_offset=4), Assign([Name('fn', Store(), lineno=1018, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1018, col_offset=9), 'path', Load(), lineno=1018, col_offset=9), 'join', Load(), lineno=1018, col_offset=9), [Name('pkgroot', Load(), lineno=1018, col_offset=22), Str('PkgInfo', lineno=1018, col_offset=31)], [], None, None, lineno=1018, col_offset=9), lineno=1018, col_offset=4), Assign([Name('fp', Store(), lineno=1019, col_offset=4)], Call(Name('open', Load(), lineno=1019, col_offset=9), [Name('fn', Load(), lineno=1019, col_offset=14), Str('w', lineno=1019, col_offset=18)], [], None, None, lineno=1019, col_offset=9), lineno=1019, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=1020, col_offset=4), 'write', Load(), lineno=1020, col_offset=4), [Str('pmkrpkg1', lineno=1020, col_offset=13)], [], None, None, lineno=1020, col_offset=4), lineno=1020, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=1021, col_offset=4), 'close', Load(), lineno=1021, col_offset=4), [], [], None, None, lineno=1021, col_offset=4), lineno=1021, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1023, col_offset=4), 'mkdir', Load(), lineno=1023, col_offset=4), [Name('rsrcDir', Load(), lineno=1023, col_offset=13)], [], None, None, lineno=1023, col_offset=4), lineno=1023, col_offset=4), Expr(Call(Name('makeMpkgPlist', Load(), lineno=1025, col_offset=4), [Call(Attribute(Attribute(Name('os', Load(), lineno=1025, col_offset=18), 'path', Load(), lineno=1025, col_offset=18), 'join', Load(), lineno=1025, col_offset=18), [Name('pkgroot', Load(), lineno=1025, col_offset=31), Str('Info.plist', lineno=1025, col_offset=40)], [], None, None, lineno=1025, col_offset=18)], [], None, None, lineno=1025, col_offset=4), lineno=1025, col_offset=4), Assign([Name('pl', Store(), lineno=1026, col_offset=4)], Call(Name('Plist', Load(), lineno=1026, col_offset=9), [], [keyword('IFPkgDescriptionTitle', Str('Python', lineno=1027, col_offset=38)), keyword('IFPkgDescriptionVersion', Call(Name('getVersion', Load(), lineno=1028, col_offset=40), [], [], None, None, lineno=1028, col_offset=40))], None, None, lineno=1026, col_offset=9), lineno=1026, col_offset=4), Expr(Call(Name('writePlist', Load(), lineno=1031, col_offset=4), [Name('pl', Load(), lineno=1031, col_offset=15), Call(Attribute(Attribute(Name('os', Load(), lineno=1031, col_offset=19), 'path', Load(), lineno=1031, col_offset=19), 'join', Load(), lineno=1031, col_offset=19), [Name('pkgroot', Load(), lineno=1031, col_offset=32), Str('Resources', lineno=1031, col_offset=41), Str('Description.plist', lineno=1031, col_offset=54)], [], None, None, lineno=1031, col_offset=19)], [], None, None, lineno=1031, col_offset=4), lineno=1031, col_offset=4), For(Name('fn', Store(), lineno=1032, col_offset=8), Call(Attribute(Name('os', Load(), lineno=1032, col_offset=14), 'listdir', Load(), lineno=1032, col_offset=14), [Str('resources', lineno=1032, col_offset=25)], [], None, None, lineno=1032, col_offset=14), [If(Compare(Name('fn', Load(), lineno=1033, col_offset=11), [Eq()], [Str('.svn', lineno=1033, col_offset=17)], lineno=1033, col_offset=11), [Continue( lineno=1033, col_offset=25)], [], lineno=1033, col_offset=8), If(Call(Attribute(Name('fn', Load(), lineno=1034, col_offset=11), 'endswith', Load(), lineno=1034, col_offset=11), [Str('.jpg', lineno=1034, col_offset=23)], [], None, None, lineno=1034, col_offset=11), [Expr(Call(Attribute(Name('shutil', Load(), lineno=1035, col_offset=12), 'copy', Load(), lineno=1035, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=1035, col_offset=24), 'path', Load(), lineno=1035, col_offset=24), 'join', Load(), lineno=1035, col_offset=24), [Str('resources', lineno=1035, col_offset=37), Name('fn', Load(), lineno=1035, col_offset=50)], [], None, None, lineno=1035, col_offset=24), Call(Attribute(Attribute(Name('os', Load(), lineno=1035, col_offset=55), 'path', Load(), lineno=1035, col_offset=55), 'join', Load(), lineno=1035, col_offset=55), [Name('rsrcDir', Load(), lineno=1035, col_offset=68), Name('fn', Load(), lineno=1035, col_offset=77)], [], None, None, lineno=1035, col_offset=55)], [], None, None, lineno=1035, col_offset=12), lineno=1035, col_offset=12)], [Expr(Call(Name('patchFile', Load(), lineno=1037, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=1037, col_offset=22), 'path', Load(), lineno=1037, col_offset=22), 'join', Load(), lineno=1037, col_offset=22), [Str('resources', lineno=1037, col_offset=35), Name('fn', Load(), lineno=1037, col_offset=48)], [], None, None, lineno=1037, col_offset=22), Call(Attribute(Attribute(Name('os', Load(), lineno=1037, col_offset=53), 'path', Load(), lineno=1037, col_offset=53), 'join', Load(), lineno=1037, col_offset=53), [Name('rsrcDir', Load(), lineno=1037, col_offset=66), Name('fn', Load(), lineno=1037, col_offset=75)], [], None, None, lineno=1037, col_offset=53)], [], None, None, lineno=1037, col_offset=12), lineno=1037, col_offset=12)], lineno=1034, col_offset=8)], [], lineno=1032, col_offset=4), Expr(Call(Attribute(Name('shutil', Load(), lineno=1039, col_offset=4), 'copy', Load(), lineno=1039, col_offset=4), [Str('../../LICENSE', lineno=1039, col_offset=16), Call(Attribute(Attribute(Name('os', Load(), lineno=1039, col_offset=33), 'path', Load(), lineno=1039, col_offset=33), 'join', Load(), lineno=1039, col_offset=33), [Name('rsrcDir', Load(), lineno=1039, col_offset=46), Str('License.txt', lineno=1039, col_offset=55)], [], None, None, lineno=1039, col_offset=33)], [], None, None, lineno=1039, col_offset=4), lineno=1039, col_offset=4)], [], lineno=997, col_offset=0), FunctionDef('installSize', arguments([Name('clear', Param(), lineno=1042, col_offset=16), Name('_saved', Param(), lineno=1042, col_offset=29)], None, None, [Name('False', Load(), lineno=1042, col_offset=22), List([], Load(), lineno=1042, col_offset=36)]), [If(Name('clear', Load(), lineno=1043, col_offset=7), [Delete([Subscript(Name('_saved', Load(), lineno=1044, col_offset=12), Slice(None, None, None), Del(), lineno=1044, col_offset=12)], lineno=1044, col_offset=8)], [], lineno=1043, col_offset=4), If(UnaryOp(Not(), Name('_saved', Load(), lineno=1045, col_offset=11), lineno=1045, col_offset=7), [Assign([Name('data', Store(), lineno=1046, col_offset=8)], Call(Name('captureCommand', Load(), lineno=1046, col_offset=15), [BinOp(Str('du -ks %s', lineno=1046, col_offset=30), Mod(), Call(Name('shellQuote', Load(), lineno=1047, col_offset=20), [Call(Attribute(Attribute(Name('os', Load(), lineno=1047, col_offset=31), 'path', Load(), lineno=1047, col_offset=31), 'join', Load(), lineno=1047, col_offset=31), [Name('WORKDIR', Load(), lineno=1047, col_offset=44), Str('_root', lineno=1047, col_offset=53)], [], None, None, lineno=1047, col_offset=31)], [], None, None, lineno=1047, col_offset=20), lineno=1046, col_offset=30)], [], None, None, lineno=1046, col_offset=15), lineno=1046, col_offset=8), Expr(Call(Attribute(Name('_saved', Load(), lineno=1048, col_offset=8), 'append', Load(), lineno=1048, col_offset=8), [BinOp(Str('%d', lineno=1048, col_offset=22), Mod(), Tuple([BinOp(Num(0.5, lineno=1048, col_offset=29), Add(), BinOp(Call(Name('int', Load(), lineno=1048, col_offset=36), [Subscript(Call(Attribute(Name('data', Load(), lineno=1048, col_offset=40), 'split', Load(), lineno=1048, col_offset=40), [], [], None, None, lineno=1048, col_offset=40), Index(Num(0, lineno=1048, col_offset=53)), Load(), lineno=1048, col_offset=40)], [], None, None, lineno=1048, col_offset=36), Div(), Num(1024.0, lineno=1048, col_offset=59), lineno=1048, col_offset=36), lineno=1048, col_offset=29)], Load(), lineno=1048, col_offset=28), lineno=1048, col_offset=22)], [], None, None, lineno=1048, col_offset=8), lineno=1048, col_offset=8)], [], lineno=1045, col_offset=4), Return(Subscript(Name('_saved', Load(), lineno=1049, col_offset=11), Index(Num(0, lineno=1049, col_offset=18)), Load(), lineno=1049, col_offset=11), lineno=1049, col_offset=4)], [], lineno=1042, col_offset=0), FunctionDef('buildDMG', arguments([], None, None, []), [Expr(Str('\n    Create DMG containing the rootDir.\n    ', lineno=1055, col_offset=-1), lineno=1055, col_offset=-1), Assign([Name('outdir', Store(), lineno=1056, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1056, col_offset=13), 'path', Load(), lineno=1056, col_offset=13), 'join', Load(), lineno=1056, col_offset=13), [Name('WORKDIR', Load(), lineno=1056, col_offset=26), Str('diskimage', lineno=1056, col_offset=35)], [], None, None, lineno=1056, col_offset=13), lineno=1056, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1057, col_offset=7), 'path', Load(), lineno=1057, col_offset=7), 'exists', Load(), lineno=1057, col_offset=7), [Name('outdir', Load(), lineno=1057, col_offset=22)], [], None, None, lineno=1057, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=1058, col_offset=8), 'rmtree', Load(), lineno=1058, col_offset=8), [Name('outdir', Load(), lineno=1058, col_offset=22)], [], None, None, lineno=1058, col_offset=8), lineno=1058, col_offset=8)], [], lineno=1057, col_offset=4), Assign([Name('imagepath', Store(), lineno=1060, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1060, col_offset=16), 'path', Load(), lineno=1060, col_offset=16), 'join', Load(), lineno=1060, col_offset=16), [Name('outdir', Load(), lineno=1060, col_offset=29), BinOp(Str('python-%s-macosx%s', lineno=1061, col_offset=20), Mod(), Tuple([Call(Name('getFullVersion', Load(), lineno=1061, col_offset=42), [], [], None, None, lineno=1061, col_offset=42), Name('DEPTARGET', Load(), lineno=1061, col_offset=59)], Load(), lineno=1061, col_offset=42), lineno=1061, col_offset=20)], [], None, None, lineno=1060, col_offset=16), lineno=1060, col_offset=4), If(Name('INCLUDE_TIMESTAMP', Load(), lineno=1062, col_offset=7), [Assign([Name('imagepath', Store(), lineno=1063, col_offset=8)], BinOp(Name('imagepath', Load(), lineno=1063, col_offset=20), Add(), BinOp(Str('-%04d-%02d-%02d', lineno=1063, col_offset=32), Mod(), Subscript(Call(Attribute(Name('time', Load(), lineno=1063, col_offset=51), 'localtime', Load(), lineno=1063, col_offset=51), [], [], None, None, lineno=1063, col_offset=51), Slice(None, Num(3, lineno=1063, col_offset=69), None), Load(), lineno=1063, col_offset=51), lineno=1063, col_offset=32), lineno=1063, col_offset=20), lineno=1063, col_offset=8)], [], lineno=1062, col_offset=4), Assign([Name('imagepath', Store(), lineno=1064, col_offset=4)], BinOp(Name('imagepath', Load(), lineno=1064, col_offset=16), Add(), Str('.dmg', lineno=1064, col_offset=28), lineno=1064, col_offset=16), lineno=1064, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1066, col_offset=4), 'mkdir', Load(), lineno=1066, col_offset=4), [Name('outdir', Load(), lineno=1066, col_offset=13)], [], None, None, lineno=1066, col_offset=4), lineno=1066, col_offset=4), Assign([Name('volname', Store(), lineno=1067, col_offset=4)], BinOp(Str('Python %s', lineno=1067, col_offset=12), Mod(), Call(Name('getFullVersion', Load(), lineno=1067, col_offset=25), [], [], None, None, lineno=1067, col_offset=25), lineno=1067, col_offset=12), lineno=1067, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1068, col_offset=4), [BinOp(Str('hdiutil create -format UDRW -volname %s -srcfolder %s %s', lineno=1068, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1069, col_offset=12), [Name('volname', Load(), lineno=1069, col_offset=23)], [], None, None, lineno=1069, col_offset=12), Call(Name('shellQuote', Load(), lineno=1070, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=1070, col_offset=23), 'path', Load(), lineno=1070, col_offset=23), 'join', Load(), lineno=1070, col_offset=23), [Name('WORKDIR', Load(), lineno=1070, col_offset=36), Str('installer', lineno=1070, col_offset=45)], [], None, None, lineno=1070, col_offset=23)], [], None, None, lineno=1070, col_offset=12), Call(Name('shellQuote', Load(), lineno=1071, col_offset=12), [BinOp(Name('imagepath', Load(), lineno=1071, col_offset=23), Add(), Str('.tmp.dmg', lineno=1071, col_offset=35), lineno=1071, col_offset=23)], [], None, None, lineno=1071, col_offset=12)], Load(), lineno=1069, col_offset=12), lineno=1068, col_offset=15)], [], None, None, lineno=1068, col_offset=4), lineno=1068, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1074, col_offset=11), 'path', Load(), lineno=1074, col_offset=11), 'exists', Load(), lineno=1074, col_offset=11), [Call(Attribute(Attribute(Name('os', Load(), lineno=1074, col_offset=26), 'path', Load(), lineno=1074, col_offset=26), 'join', Load(), lineno=1074, col_offset=26), [Name('WORKDIR', Load(), lineno=1074, col_offset=39), Str('mnt', lineno=1074, col_offset=48)], [], None, None, lineno=1074, col_offset=26)], [], None, None, lineno=1074, col_offset=11), lineno=1074, col_offset=7), [Expr(Call(Attribute(Name('os', Load(), lineno=1075, col_offset=8), 'mkdir', Load(), lineno=1075, col_offset=8), [Call(Attribute(Attribute(Name('os', Load(), lineno=1075, col_offset=17), 'path', Load(), lineno=1075, col_offset=17), 'join', Load(), lineno=1075, col_offset=17), [Name('WORKDIR', Load(), lineno=1075, col_offset=30), Str('mnt', lineno=1075, col_offset=39)], [], None, None, lineno=1075, col_offset=17)], [], None, None, lineno=1075, col_offset=8), lineno=1075, col_offset=8)], [], lineno=1074, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1076, col_offset=4), [BinOp(Str('hdiutil attach %s -mountroot %s', lineno=1076, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1077, col_offset=8), [BinOp(Name('imagepath', Load(), lineno=1077, col_offset=19), Add(), Str('.tmp.dmg', lineno=1077, col_offset=31), lineno=1077, col_offset=19)], [], None, None, lineno=1077, col_offset=8), Call(Name('shellQuote', Load(), lineno=1077, col_offset=44), [Call(Attribute(Attribute(Name('os', Load(), lineno=1077, col_offset=55), 'path', Load(), lineno=1077, col_offset=55), 'join', Load(), lineno=1077, col_offset=55), [Name('WORKDIR', Load(), lineno=1077, col_offset=68), Str('mnt', lineno=1077, col_offset=77)], [], None, None, lineno=1077, col_offset=55)], [], None, None, lineno=1077, col_offset=44)], Load(), lineno=1077, col_offset=8), lineno=1076, col_offset=15)], [], None, None, lineno=1076, col_offset=4), lineno=1076, col_offset=4), Expr(Call(Attribute(Name('shutil', Load(), lineno=1080, col_offset=4), 'copy', Load(), lineno=1080, col_offset=4), [Str('../Icons/Disk Image.icns', lineno=1080, col_offset=16), Call(Attribute(Attribute(Name('os', Load(), lineno=1081, col_offset=12), 'path', Load(), lineno=1081, col_offset=12), 'join', Load(), lineno=1081, col_offset=12), [Name('WORKDIR', Load(), lineno=1081, col_offset=25), Str('mnt', lineno=1081, col_offset=34), Name('volname', Load(), lineno=1081, col_offset=41), Str('.VolumeIcon.icns', lineno=1081, col_offset=50)], [], None, None, lineno=1081, col_offset=12)], [], None, None, lineno=1080, col_offset=4), lineno=1080, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1082, col_offset=4), [BinOp(Str('/Developer/Tools/SetFile -a C %s/', lineno=1082, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1083, col_offset=12), [Call(Attribute(Attribute(Name('os', Load(), lineno=1083, col_offset=23), 'path', Load(), lineno=1083, col_offset=23), 'join', Load(), lineno=1083, col_offset=23), [Name('WORKDIR', Load(), lineno=1083, col_offset=36), Str('mnt', lineno=1083, col_offset=45), Name('volname', Load(), lineno=1083, col_offset=52)], [], None, None, lineno=1083, col_offset=23)], [], None, None, lineno=1083, col_offset=12)], Load(), lineno=1083, col_offset=12), lineno=1082, col_offset=15)], [], None, None, lineno=1082, col_offset=4), lineno=1082, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1085, col_offset=4), [BinOp(Str('hdiutil detach %s', lineno=1085, col_offset=15), Mod(), Call(Name('shellQuote', Load(), lineno=1085, col_offset=36), [Call(Attribute(Attribute(Name('os', Load(), lineno=1085, col_offset=47), 'path', Load(), lineno=1085, col_offset=47), 'join', Load(), lineno=1085, col_offset=47), [Name('WORKDIR', Load(), lineno=1085, col_offset=60), Str('mnt', lineno=1085, col_offset=69), Name('volname', Load(), lineno=1085, col_offset=76)], [], None, None, lineno=1085, col_offset=47)], [], None, None, lineno=1085, col_offset=36), lineno=1085, col_offset=15)], [], None, None, lineno=1085, col_offset=4), lineno=1085, col_offset=4), Expr(Call(Name('setIcon', Load(), lineno=1087, col_offset=4), [BinOp(Name('imagepath', Load(), lineno=1087, col_offset=12), Add(), Str('.tmp.dmg', lineno=1087, col_offset=24), lineno=1087, col_offset=12), Str('../Icons/Disk Image.icns', lineno=1087, col_offset=36)], [], None, None, lineno=1087, col_offset=4), lineno=1087, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1088, col_offset=4), [BinOp(Str('hdiutil convert %s -format UDZO -o %s', lineno=1088, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1089, col_offset=12), [BinOp(Name('imagepath', Load(), lineno=1089, col_offset=23), Add(), Str('.tmp.dmg', lineno=1089, col_offset=35), lineno=1089, col_offset=23)], [], None, None, lineno=1089, col_offset=12), Call(Name('shellQuote', Load(), lineno=1089, col_offset=48), [Name('imagepath', Load(), lineno=1089, col_offset=59)], [], None, None, lineno=1089, col_offset=48)], Load(), lineno=1089, col_offset=12), lineno=1088, col_offset=15)], [], None, None, lineno=1088, col_offset=4), lineno=1088, col_offset=4), Expr(Call(Name('setIcon', Load(), lineno=1090, col_offset=4), [Name('imagepath', Load(), lineno=1090, col_offset=12), Str('../Icons/Disk Image.icns', lineno=1090, col_offset=23)], [], None, None, lineno=1090, col_offset=4), lineno=1090, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1092, col_offset=4), 'unlink', Load(), lineno=1092, col_offset=4), [BinOp(Name('imagepath', Load(), lineno=1092, col_offset=14), Add(), Str('.tmp.dmg', lineno=1092, col_offset=26), lineno=1092, col_offset=14)], [], None, None, lineno=1092, col_offset=4), lineno=1092, col_offset=4), Return(Name('imagepath', Load(), lineno=1094, col_offset=11), lineno=1094, col_offset=4)], [], lineno=1052, col_offset=0), FunctionDef('setIcon', arguments([Name('filePath', Param(), lineno=1097, col_offset=12), Name('icnsPath', Param(), lineno=1097, col_offset=22)], None, None, []), [Expr(Str('\n    Set the custom icon for the specified file or directory.\n    ', lineno=1100, col_offset=-1), lineno=1100, col_offset=-1), Assign([Name('dirPath', Store(), lineno=1102, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1102, col_offset=14), 'path', Load(), lineno=1102, col_offset=14), 'normpath', Load(), lineno=1102, col_offset=14), [Call(Attribute(Attribute(Name('os', Load(), lineno=1102, col_offset=31), 'path', Load(), lineno=1102, col_offset=31), 'dirname', Load(), lineno=1102, col_offset=31), [Name('__file__', Load(), lineno=1102, col_offset=47)], [], None, None, lineno=1102, col_offset=31)], [], None, None, lineno=1102, col_offset=14), lineno=1102, col_offset=4), Assign([Name('toolPath', Store(), lineno=1103, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1103, col_offset=15), 'path', Load(), lineno=1103, col_offset=15), 'join', Load(), lineno=1103, col_offset=15), [Name('dirPath', Load(), lineno=1103, col_offset=28), Str('seticon.app/Contents/MacOS/seticon', lineno=1103, col_offset=37)], [], None, None, lineno=1103, col_offset=15), lineno=1103, col_offset=4), If(BoolOp(Or(), [UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1104, col_offset=11), 'path', Load(), lineno=1104, col_offset=11), 'exists', Load(), lineno=1104, col_offset=11), [Name('toolPath', Load(), lineno=1104, col_offset=26)], [], None, None, lineno=1104, col_offset=11), lineno=1104, col_offset=7), Compare(Attribute(Call(Attribute(Name('os', Load(), lineno=1104, col_offset=39), 'stat', Load(), lineno=1104, col_offset=39), [Name('toolPath', Load(), lineno=1104, col_offset=47)], [], None, None, lineno=1104, col_offset=39), 'st_mtime', Load(), lineno=1104, col_offset=39), [Lt()], [Attribute(Call(Attribute(Name('os', Load(), lineno=1104, col_offset=68), 'stat', Load(), lineno=1104, col_offset=68), [BinOp(Name('dirPath', Load(), lineno=1104, col_offset=76), Add(), Str('/seticon.m', lineno=1104, col_offset=86), lineno=1104, col_offset=76)], [], None, None, lineno=1104, col_offset=68), 'st_mtime', Load(), lineno=1104, col_offset=68)], lineno=1104, col_offset=39)], lineno=1104, col_offset=7), [Assign([Name('appPath', Store(), lineno=1107, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=1107, col_offset=18), 'path', Load(), lineno=1107, col_offset=18), 'join', Load(), lineno=1107, col_offset=18), [Name('dirPath', Load(), lineno=1107, col_offset=31), Str('seticon.app/Contents/MacOS', lineno=1107, col_offset=40)], [], None, None, lineno=1107, col_offset=18), lineno=1107, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1108, col_offset=15), 'path', Load(), lineno=1108, col_offset=15), 'exists', Load(), lineno=1108, col_offset=15), [Name('appPath', Load(), lineno=1108, col_offset=30)], [], None, None, lineno=1108, col_offset=15), lineno=1108, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=1109, col_offset=12), 'makedirs', Load(), lineno=1109, col_offset=12), [Name('appPath', Load(), lineno=1109, col_offset=24)], [], None, None, lineno=1109, col_offset=12), lineno=1109, col_offset=12)], [], lineno=1108, col_offset=8), Expr(Call(Name('runCommand', Load(), lineno=1110, col_offset=8), [BinOp(Str('cc -o %s %s/seticon.m -framework Cocoa', lineno=1110, col_offset=19), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1111, col_offset=12), [Name('toolPath', Load(), lineno=1111, col_offset=23)], [], None, None, lineno=1111, col_offset=12), Call(Name('shellQuote', Load(), lineno=1111, col_offset=34), [Name('dirPath', Load(), lineno=1111, col_offset=45)], [], None, None, lineno=1111, col_offset=34)], Load(), lineno=1111, col_offset=12), lineno=1110, col_offset=19)], [], None, None, lineno=1110, col_offset=8), lineno=1110, col_offset=8)], [], lineno=1104, col_offset=4), Expr(Call(Name('runCommand', Load(), lineno=1113, col_offset=4), [BinOp(Str('%s %s %s', lineno=1113, col_offset=15), Mod(), Tuple([Call(Name('shellQuote', Load(), lineno=1113, col_offset=27), [Call(Attribute(Attribute(Name('os', Load(), lineno=1113, col_offset=38), 'path', Load(), lineno=1113, col_offset=38), 'abspath', Load(), lineno=1113, col_offset=38), [Name('toolPath', Load(), lineno=1113, col_offset=54)], [], None, None, lineno=1113, col_offset=38)], [], None, None, lineno=1113, col_offset=27), Call(Name('shellQuote', Load(), lineno=1113, col_offset=66), [Name('icnsPath', Load(), lineno=1113, col_offset=77)], [], None, None, lineno=1113, col_offset=66), Call(Name('shellQuote', Load(), lineno=1114, col_offset=8), [Name('filePath', Load(), lineno=1114, col_offset=19)], [], None, None, lineno=1114, col_offset=8)], Load(), lineno=1113, col_offset=27), lineno=1113, col_offset=15)], [], None, None, lineno=1113, col_offset=4), lineno=1113, col_offset=4)], [], lineno=1097, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Expr(Call(Name('parseOptions', Load(), lineno=1118, col_offset=4), [], [], None, None, lineno=1118, col_offset=4), lineno=1118, col_offset=4), Expr(Call(Name('checkEnvironment', Load(), lineno=1119, col_offset=4), [], [], None, None, lineno=1119, col_offset=4), lineno=1119, col_offset=4), Assign([Subscript(Attribute(Name('os', Load(), lineno=1121, col_offset=4), 'environ', Load(), lineno=1121, col_offset=4), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=1121, col_offset=15)), Store(), lineno=1121, col_offset=4)], Name('DEPTARGET', Load(), lineno=1121, col_offset=45), lineno=1121, col_offset=4), Assign([Subscript(Attribute(Name('os', Load(), lineno=1122, col_offset=4), 'environ', Load(), lineno=1122, col_offset=4), Index(Str('CC', lineno=1122, col_offset=15)), Store(), lineno=1122, col_offset=4)], Name('CC', Load(), lineno=1122, col_offset=23), lineno=1122, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=1124, col_offset=7), 'path', Load(), lineno=1124, col_offset=7), 'exists', Load(), lineno=1124, col_offset=7), [Name('WORKDIR', Load(), lineno=1124, col_offset=22)], [], None, None, lineno=1124, col_offset=7), [Expr(Call(Attribute(Name('shutil', Load(), lineno=1125, col_offset=8), 'rmtree', Load(), lineno=1125, col_offset=8), [Name('WORKDIR', Load(), lineno=1125, col_offset=22)], [], None, None, lineno=1125, col_offset=8), lineno=1125, col_offset=8)], [], lineno=1124, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1126, col_offset=4), 'mkdir', Load(), lineno=1126, col_offset=4), [Name('WORKDIR', Load(), lineno=1126, col_offset=13)], [], None, None, lineno=1126, col_offset=4), lineno=1126, col_offset=4), Assign([Subscript(Attribute(Name('os', Load(), lineno=1128, col_offset=4), 'environ', Load(), lineno=1128, col_offset=4), Index(Str('LC_ALL', lineno=1128, col_offset=15)), Store(), lineno=1128, col_offset=4)], Str('C', lineno=1128, col_offset=27), lineno=1128, col_offset=4), Expr(Call(Name('buildLibraries', Load(), lineno=1131, col_offset=4), [], [], None, None, lineno=1131, col_offset=4), lineno=1131, col_offset=4), Expr(Call(Name('buildPython', Load(), lineno=1134, col_offset=4), [], [], None, None, lineno=1134, col_offset=4), lineno=1134, col_offset=4), Delete([Subscript(Attribute(Name('os', Load(), lineno=1142, col_offset=8), 'environ', Load(), lineno=1142, col_offset=8), Index(Str('MACOSX_DEPLOYMENT_TARGET', lineno=1142, col_offset=19)), Del(), lineno=1142, col_offset=8)], lineno=1142, col_offset=4), Expr(Call(Name('buildPythonDocs', Load(), lineno=1143, col_offset=4), [], [], None, None, lineno=1143, col_offset=4), lineno=1143, col_offset=4), Assign([Name('fn', Store(), lineno=1147, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1147, col_offset=9), 'path', Load(), lineno=1147, col_offset=9), 'join', Load(), lineno=1147, col_offset=9), [Name('WORKDIR', Load(), lineno=1147, col_offset=22), Str('_root', lineno=1147, col_offset=31), Str('Applications', lineno=1147, col_offset=40), BinOp(Str('Python %s', lineno=1148, col_offset=16), Mod(), Tuple([Call(Name('getVersion', Load(), lineno=1148, col_offset=29), [], [], None, None, lineno=1148, col_offset=29)], Load(), lineno=1148, col_offset=29), lineno=1148, col_offset=16), Str('Update Shell Profile.command', lineno=1148, col_offset=45)], [], None, None, lineno=1147, col_offset=9), lineno=1147, col_offset=4), Expr(Call(Name('patchScript', Load(), lineno=1149, col_offset=4), [Str('scripts/postflight.patch-profile', lineno=1149, col_offset=16), Name('fn', Load(), lineno=1149, col_offset=53)], [], None, None, lineno=1149, col_offset=4), lineno=1149, col_offset=4), Assign([Name('folder', Store(), lineno=1151, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=1151, col_offset=13), 'path', Load(), lineno=1151, col_offset=13), 'join', Load(), lineno=1151, col_offset=13), [Name('WORKDIR', Load(), lineno=1151, col_offset=26), Str('_root', lineno=1151, col_offset=35), Str('Applications', lineno=1151, col_offset=44), BinOp(Str('Python %s', lineno=1151, col_offset=60), Mod(), Tuple([Call(Name('getVersion', Load(), lineno=1152, col_offset=8), [], [], None, None, lineno=1152, col_offset=8)], Load(), lineno=1152, col_offset=8), lineno=1151, col_offset=60)], [], None, None, lineno=1151, col_offset=13), lineno=1151, col_offset=4), Expr(Call(Attribute(Name('os', Load(), lineno=1153, col_offset=4), 'chmod', Load(), lineno=1153, col_offset=4), [Name('folder', Load(), lineno=1153, col_offset=13), Num(493, lineno=1153, col_offset=21)], [], None, None, lineno=1153, col_offset=4), lineno=1153, col_offset=4), Expr(Call(Name('setIcon', Load(), lineno=1154, col_offset=4), [Name('folder', Load(), lineno=1154, col_offset=12), Str('../Icons/Python Folder.icns', lineno=1154, col_offset=20)], [], None, None, lineno=1154, col_offset=4), lineno=1154, col_offset=4), Expr(Call(Name('buildInstaller', Load(), lineno=1157, col_offset=4), [], [], None, None, lineno=1157, col_offset=4), lineno=1157, col_offset=4), Expr(Call(Name('patchFile', Load(), lineno=1160, col_offset=4), [Str('resources/ReadMe.txt', lineno=1160, col_offset=14), Call(Attribute(Attribute(Name('os', Load(), lineno=1160, col_offset=38), 'path', Load(), lineno=1160, col_offset=38), 'join', Load(), lineno=1160, col_offset=38), [Name('WORKDIR', Load(), lineno=1160, col_offset=51), Str('installer', lineno=1160, col_offset=60), Str('ReadMe.txt', lineno=1160, col_offset=73)], [], None, None, lineno=1160, col_offset=38)], [], None, None, lineno=1160, col_offset=4), lineno=1160, col_offset=4), Expr(Call(Attribute(Name('shutil', Load(), lineno=1163, col_offset=4), 'copy', Load(), lineno=1163, col_offset=4), [Str('../../LICENSE', lineno=1163, col_offset=16), Call(Attribute(Attribute(Name('os', Load(), lineno=1163, col_offset=33), 'path', Load(), lineno=1163, col_offset=33), 'join', Load(), lineno=1163, col_offset=33), [Name('WORKDIR', Load(), lineno=1163, col_offset=46), Str('installer', lineno=1163, col_offset=55), Str('License.txt', lineno=1163, col_offset=68)], [], None, None, lineno=1163, col_offset=33)], [], None, None, lineno=1163, col_offset=4), lineno=1163, col_offset=4), Assign([Name('fp', Store(), lineno=1165, col_offset=4)], Call(Name('open', Load(), lineno=1165, col_offset=9), [Call(Attribute(Attribute(Name('os', Load(), lineno=1165, col_offset=14), 'path', Load(), lineno=1165, col_offset=14), 'join', Load(), lineno=1165, col_offset=14), [Name('WORKDIR', Load(), lineno=1165, col_offset=27), Str('installer', lineno=1165, col_offset=36), Str('Build.txt', lineno=1165, col_offset=49)], [], None, None, lineno=1165, col_offset=14), Str('w', lineno=1165, col_offset=63)], [], None, None, lineno=1165, col_offset=9), lineno=1165, col_offset=4), Print(Name('fp', Load(), lineno=1166, col_offset=13), [Str('# BUILD INFO', lineno=1166, col_offset=17)], True, lineno=1166, col_offset=4), Print(Name('fp', Load(), lineno=1167, col_offset=13), [Str('# Date:', lineno=1167, col_offset=17), Call(Attribute(Name('time', Load(), lineno=1167, col_offset=28), 'ctime', Load(), lineno=1167, col_offset=28), [], [], None, None, lineno=1167, col_offset=28)], True, lineno=1167, col_offset=4), Print(Name('fp', Load(), lineno=1168, col_offset=13), [Str('# By:', lineno=1168, col_offset=17), Attribute(Call(Attribute(Name('pwd', Load(), lineno=1168, col_offset=26), 'getpwuid', Load(), lineno=1168, col_offset=26), [Call(Attribute(Name('os', Load(), lineno=1168, col_offset=39), 'getuid', Load(), lineno=1168, col_offset=39), [], [], None, None, lineno=1168, col_offset=39)], [], None, None, lineno=1168, col_offset=26), 'pw_gecos', Load(), lineno=1168, col_offset=26)], True, lineno=1168, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=1169, col_offset=4), 'close', Load(), lineno=1169, col_offset=4), [], [], None, None, lineno=1169, col_offset=4), lineno=1169, col_offset=4), Expr(Call(Name('buildDMG', Load(), lineno=1172, col_offset=4), [], [], None, None, lineno=1172, col_offset=4), lineno=1172, col_offset=4)], [], lineno=1116, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1174, col_offset=3), [Eq()], [Str('__main__', lineno=1174, col_offset=15)], lineno=1174, col_offset=3), [Expr(Call(Name('main', Load(), lineno=1175, col_offset=4), [], [], None, None, lineno=1175, col_offset=4), lineno=1175, col_offset=4)], [], lineno=1174, col_offset=0)])
