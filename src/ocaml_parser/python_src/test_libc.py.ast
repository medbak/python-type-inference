Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('ctypes', [alias('*', None)], 0, lineno=3, col_offset=0), Import([alias('_ctypes_test', None)], lineno=4, col_offset=0), Assign([Name('lib', Store(), lineno=6, col_offset=0)], Call(Name('CDLL', Load(), lineno=6, col_offset=6), [Attribute(Name('_ctypes_test', Load(), lineno=6, col_offset=11), '__file__', Load(), lineno=6, col_offset=11)], [], None, None, lineno=6, col_offset=6), lineno=6, col_offset=0), ClassDef('LibTest', [Attribute(Name('unittest', Load(), lineno=8, col_offset=14), 'TestCase', Load(), lineno=8, col_offset=14)], [FunctionDef('test_sqrt', arguments([Name('self', Param(), lineno=9, col_offset=18)], None, None, []), [Assign([Attribute(Attribute(Name('lib', Load(), lineno=10, col_offset=8), 'my_sqrt', Load(), lineno=10, col_offset=8), 'argtypes', Store(), lineno=10, col_offset=8)], Tuple([Name('c_double', Load(), lineno=10, col_offset=31)], Load(), lineno=10, col_offset=31), lineno=10, col_offset=8), Assign([Attribute(Attribute(Name('lib', Load(), lineno=11, col_offset=8), 'my_sqrt', Load(), lineno=11, col_offset=8), 'restype', Store(), lineno=11, col_offset=8)], Name('c_double', Load(), lineno=11, col_offset=30), lineno=11, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=12, col_offset=8), 'assertEqual', Load(), lineno=12, col_offset=8), [Call(Attribute(Name('lib', Load(), lineno=12, col_offset=25), 'my_sqrt', Load(), lineno=12, col_offset=25), [Num(4.0, lineno=12, col_offset=37)], [], None, None, lineno=12, col_offset=25), Num(2.0, lineno=12, col_offset=43)], [], None, None, lineno=12, col_offset=8), lineno=12, col_offset=8), Import([alias('math', None)], lineno=13, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=8), 'assertEqual', Load(), lineno=14, col_offset=8), [Call(Attribute(Name('lib', Load(), lineno=14, col_offset=25), 'my_sqrt', Load(), lineno=14, col_offset=25), [Num(2.0, lineno=14, col_offset=37)], [], None, None, lineno=14, col_offset=25), Call(Attribute(Name('math', Load(), lineno=14, col_offset=43), 'sqrt', Load(), lineno=14, col_offset=43), [Num(2.0, lineno=14, col_offset=53)], [], None, None, lineno=14, col_offset=43)], [], None, None, lineno=14, col_offset=8), lineno=14, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_qsort', arguments([Name('self', Param(), lineno=16, col_offset=19)], None, None, []), [Assign([Name('comparefunc', Store(), lineno=17, col_offset=8)], Call(Name('CFUNCTYPE', Load(), lineno=17, col_offset=22), [Name('c_int', Load(), lineno=17, col_offset=32), Call(Name('POINTER', Load(), lineno=17, col_offset=39), [Name('c_char', Load(), lineno=17, col_offset=47)], [], None, None, lineno=17, col_offset=39), Call(Name('POINTER', Load(), lineno=17, col_offset=56), [Name('c_char', Load(), lineno=17, col_offset=64)], [], None, None, lineno=17, col_offset=56)], [], None, None, lineno=17, col_offset=22), lineno=17, col_offset=8), Assign([Attribute(Attribute(Name('lib', Load(), lineno=18, col_offset=8), 'my_qsort', Load(), lineno=18, col_offset=8), 'argtypes', Store(), lineno=18, col_offset=8)], Tuple([Name('c_void_p', Load(), lineno=18, col_offset=32), Name('c_size_t', Load(), lineno=18, col_offset=42), Name('c_size_t', Load(), lineno=18, col_offset=52), Name('comparefunc', Load(), lineno=18, col_offset=62)], Load(), lineno=18, col_offset=32), lineno=18, col_offset=8), Assign([Attribute(Attribute(Name('lib', Load(), lineno=19, col_offset=8), 'my_qsort', Load(), lineno=19, col_offset=8), 'restype', Store(), lineno=19, col_offset=8)], Name('None', Load(), lineno=19, col_offset=31), lineno=19, col_offset=8), FunctionDef('sort', arguments([Name('a', Param(), lineno=21, col_offset=17), Name('b', Param(), lineno=21, col_offset=20)], None, None, []), [Return(Call(Name('cmp', Load(), lineno=22, col_offset=19), [Subscript(Name('a', Load(), lineno=22, col_offset=23), Index(Num(0, lineno=22, col_offset=25)), Load(), lineno=22, col_offset=23), Subscript(Name('b', Load(), lineno=22, col_offset=29), Index(Num(0, lineno=22, col_offset=31)), Load(), lineno=22, col_offset=29)], [], None, None, lineno=22, col_offset=19), lineno=22, col_offset=12)], [], lineno=21, col_offset=8), Assign([Name('chars', Store(), lineno=24, col_offset=8)], Call(Name('create_string_buffer', Load(), lineno=24, col_offset=16), [Str('spam, spam, and spam', lineno=24, col_offset=37)], [], None, None, lineno=24, col_offset=16), lineno=24, col_offset=8), Expr(Call(Attribute(Name('lib', Load(), lineno=25, col_offset=8), 'my_qsort', Load(), lineno=25, col_offset=8), [Name('chars', Load(), lineno=25, col_offset=21), BinOp(Call(Name('len', Load(), lineno=25, col_offset=28), [Name('chars', Load(), lineno=25, col_offset=32)], [], None, None, lineno=25, col_offset=28), Sub(), Num(1, lineno=25, col_offset=39), lineno=25, col_offset=28), Call(Name('sizeof', Load(), lineno=25, col_offset=42), [Name('c_char', Load(), lineno=25, col_offset=49)], [], None, None, lineno=25, col_offset=42), Call(Name('comparefunc', Load(), lineno=25, col_offset=58), [Name('sort', Load(), lineno=25, col_offset=70)], [], None, None, lineno=25, col_offset=58)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertEqual', Load(), lineno=26, col_offset=8), [Attribute(Name('chars', Load(), lineno=26, col_offset=25), 'raw', Load(), lineno=26, col_offset=25), Str('   ,,aaaadmmmnpppsss\x00', lineno=26, col_offset=36)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8)], [], lineno=16, col_offset=4)], [], lineno=8, col_offset=0), If(Compare(Name('__name__', Load(), lineno=28, col_offset=3), [Eq()], [Str('__main__', lineno=28, col_offset=15)], lineno=28, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=29, col_offset=4), 'main', Load(), lineno=29, col_offset=4), [], [], None, None, lineno=29, col_offset=4), lineno=29, col_offset=4)], [], lineno=28, col_offset=0)])
