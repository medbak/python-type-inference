Module([Expr(Str('Class representing image/* type MIME documents.', lineno=5, col_offset=0), lineno=5, col_offset=0), Assign([Name('__all__', Store(), lineno=7, col_offset=0)], List([Str('MIMEImage', lineno=7, col_offset=11)], Load(), lineno=7, col_offset=10), lineno=7, col_offset=0), Import([alias('imghdr', None)], lineno=9, col_offset=0), ImportFrom('email', [alias('encoders', None)], 0, lineno=11, col_offset=0), ImportFrom('email.mime.nonmultipart', [alias('MIMENonMultipart', None)], 0, lineno=12, col_offset=0), ClassDef('MIMEImage', [Name('MIMENonMultipart', Load(), lineno=16, col_offset=16)], [Expr(Str('Class for generating image/* type MIME documents.', lineno=17, col_offset=4), lineno=17, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=19, col_offset=17), Name('_imagedata', Param(), lineno=19, col_offset=23), Name('_subtype', Param(), lineno=19, col_offset=35), Name('_encoder', Param(), lineno=20, col_offset=17)], None, '_params', [Name('None', Load(), lineno=19, col_offset=44), Attribute(Name('encoders', Load(), lineno=20, col_offset=26), 'encode_base64', Load(), lineno=20, col_offset=26)]), [Expr(Str("Create an image/* type MIME document.\n\n        _imagedata is a string containing the raw image data.  If this data\n        can be decoded by the standard Python `imghdr' module, then the\n        subtype will be automatically included in the Content-Type header.\n        Otherwise, you can specify the specific image subtype via the _subtype\n        parameter.\n\n        _encoder is a function which will perform the actual encoding for\n        transport of the image data.  It takes one argument, which is this\n        Image instance.  It should use get_payload() and set_payload() to\n        change the payload to the encoded form.  It should also add any\n        Content-Transfer-Encoding or other headers to the message as\n        necessary.  The default encoding is Base64.\n\n        Any additional keyword arguments are passed to the base class\n        constructor, which turns them into parameters on the Content-Type\n        header.\n        ", lineno=39, col_offset=-1), lineno=39, col_offset=-1), If(Compare(Name('_subtype', Load(), lineno=40, col_offset=11), [Is()], [Name('None', Load(), lineno=40, col_offset=23)], lineno=40, col_offset=11), [Assign([Name('_subtype', Store(), lineno=41, col_offset=12)], Call(Attribute(Name('imghdr', Load(), lineno=41, col_offset=23), 'what', Load(), lineno=41, col_offset=23), [Name('None', Load(), lineno=41, col_offset=35), Name('_imagedata', Load(), lineno=41, col_offset=41)], [], None, None, lineno=41, col_offset=23), lineno=41, col_offset=12)], [], lineno=40, col_offset=8), If(Compare(Name('_subtype', Load(), lineno=42, col_offset=11), [Is()], [Name('None', Load(), lineno=42, col_offset=23)], lineno=42, col_offset=11), [Raise(Call(Name('TypeError', Load(), lineno=43, col_offset=18), [Str('Could not guess image MIME subtype', lineno=43, col_offset=28)], [], None, None, lineno=43, col_offset=18), None, None, lineno=43, col_offset=12)], [], lineno=42, col_offset=8), Expr(Call(Attribute(Name('MIMENonMultipart', Load(), lineno=44, col_offset=8), '__init__', Load(), lineno=44, col_offset=8), [Name('self', Load(), lineno=44, col_offset=34), Str('image', lineno=44, col_offset=40), Name('_subtype', Load(), lineno=44, col_offset=49)], [], None, Name('_params', Load(), lineno=44, col_offset=61), lineno=44, col_offset=8), lineno=44, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'set_payload', Load(), lineno=45, col_offset=8), [Name('_imagedata', Load(), lineno=45, col_offset=25)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Name('_encoder', Load(), lineno=46, col_offset=8), [Name('self', Load(), lineno=46, col_offset=17)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8)], [], lineno=19, col_offset=4)], [], lineno=16, col_offset=0)])
