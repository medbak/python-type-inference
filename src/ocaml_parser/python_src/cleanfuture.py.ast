Module([Expr(Str('cleanfuture [-d][-r][-v] path ...\n\n-d  Dry run.  Analyze, but don\'t make any changes to, files.\n-r  Recurse.  Search for all .py files in subdirectories too.\n-v  Verbose.  Print informative msgs.\n\nSearch Python (.py) files for future statements, and remove the features\nfrom such statements that are already mandatory in the version of Python\nyou\'re using.\n\nPass one or more file and/or directory paths.  When a directory path, all\n.py files within the directory will be examined, and, if the -r option is\ngiven, likewise recursively for subdirectories.\n\nOverwrites files in place, renaming the originals with a .bak extension. If\ncleanfuture finds nothing to change, the file is left alone.  If cleanfuture\ndoes change a file, the changed file is a fixed-point (i.e., running\ncleanfuture on the resulting .py file won\'t change it again, at least not\nuntil you try it again with a later Python release).\n\nLimitations:  You can do these things, but this tool won\'t help you then:\n\n+ A future statement cannot be mixed with any other statement on the same\n  physical line (separated by semicolon).\n\n+ A future statement cannot contain an "as" clause.\n\nExample:  Assuming you\'re using Python 2.2, if a file containing\n\nfrom __future__ import nested_scopes, generators\n\nis analyzed by cleanfuture, the line is rewritten to\n\nfrom __future__ import generators\n\nbecause nested_scopes is no longer optional in 2.2 but generators is.\n', lineno=39, col_offset=-1), lineno=39, col_offset=-1), Import([alias('__future__', None)], lineno=41, col_offset=0), Import([alias('tokenize', None)], lineno=42, col_offset=0), Import([alias('os', None)], lineno=43, col_offset=0), Import([alias('sys', None)], lineno=44, col_offset=0), Assign([Name('dryrun', Store(), lineno=46, col_offset=0)], Num(0, lineno=46, col_offset=10), lineno=46, col_offset=0), Assign([Name('recurse', Store(), lineno=47, col_offset=0)], Num(0, lineno=47, col_offset=10), lineno=47, col_offset=0), Assign([Name('verbose', Store(), lineno=48, col_offset=0)], Num(0, lineno=48, col_offset=10), lineno=48, col_offset=0), FunctionDef('errprint', arguments([], 'args', None, []), [Assign([Name('strings', Store(), lineno=51, col_offset=4)], Call(Name('map', Load(), lineno=51, col_offset=14), [Name('str', Load(), lineno=51, col_offset=18), Name('args', Load(), lineno=51, col_offset=23)], [], None, None, lineno=51, col_offset=14), lineno=51, col_offset=4), Assign([Name('msg', Store(), lineno=52, col_offset=4)], Call(Attribute(Str(' ', lineno=52, col_offset=10), 'join', Load(), lineno=52, col_offset=10), [Name('strings', Load(), lineno=52, col_offset=19)], [], None, None, lineno=52, col_offset=10), lineno=52, col_offset=4), If(Compare(Subscript(Name('msg', Load(), lineno=53, col_offset=7), Slice(Num(-1, lineno=53, col_offset=12), None, None), Load(), lineno=53, col_offset=7), [NotEq()], [Str('\n', lineno=53, col_offset=19)], lineno=53, col_offset=7), [AugAssign(Name('msg', Store(), lineno=54, col_offset=8), Add(), Str('\n', lineno=54, col_offset=15), lineno=54, col_offset=8)], [], lineno=53, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=55, col_offset=4), 'stderr', Load(), lineno=55, col_offset=4), 'write', Load(), lineno=55, col_offset=4), [Name('msg', Load(), lineno=55, col_offset=21)], [], None, None, lineno=55, col_offset=4), lineno=55, col_offset=4)], [], lineno=50, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Import([alias('getopt', None)], lineno=58, col_offset=4), Global(['verbose', 'recurse', 'dryrun'], lineno=59, col_offset=4), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=61, col_offset=8), Name('args', Store(), lineno=61, col_offset=14)], Store(), lineno=61, col_offset=8)], Call(Attribute(Name('getopt', Load(), lineno=61, col_offset=21), 'getopt', Load(), lineno=61, col_offset=21), [Subscript(Attribute(Name('sys', Load(), lineno=61, col_offset=35), 'argv', Load(), lineno=61, col_offset=35), Slice(Num(1, lineno=61, col_offset=44), None, None), Load(), lineno=61, col_offset=35), Str('drv', lineno=61, col_offset=49)], [], None, None, lineno=61, col_offset=21), lineno=61, col_offset=8)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=62, col_offset=11), 'error', Load(), lineno=62, col_offset=11), Name('msg', Store(), lineno=62, col_offset=25), [Expr(Call(Name('errprint', Load(), lineno=63, col_offset=8), [Name('msg', Load(), lineno=63, col_offset=17)], [], None, None, lineno=63, col_offset=8), lineno=63, col_offset=8), Return(None, lineno=64, col_offset=8)], lineno=62, col_offset=4)], [], lineno=60, col_offset=4), For(Tuple([Name('o', Store(), lineno=65, col_offset=8), Name('a', Store(), lineno=65, col_offset=11)], Store(), lineno=65, col_offset=8), Name('opts', Load(), lineno=65, col_offset=16), [If(Compare(Name('o', Load(), lineno=66, col_offset=11), [Eq()], [Str('-d', lineno=66, col_offset=16)], lineno=66, col_offset=11), [AugAssign(Name('dryrun', Store(), lineno=67, col_offset=12), Add(), Num(1, lineno=67, col_offset=22), lineno=67, col_offset=12)], [If(Compare(Name('o', Load(), lineno=68, col_offset=13), [Eq()], [Str('-r', lineno=68, col_offset=18)], lineno=68, col_offset=13), [AugAssign(Name('recurse', Store(), lineno=69, col_offset=12), Add(), Num(1, lineno=69, col_offset=23), lineno=69, col_offset=12)], [If(Compare(Name('o', Load(), lineno=70, col_offset=13), [Eq()], [Str('-v', lineno=70, col_offset=18)], lineno=70, col_offset=13), [AugAssign(Name('verbose', Store(), lineno=71, col_offset=12), Add(), Num(1, lineno=71, col_offset=23), lineno=71, col_offset=12)], [], lineno=70, col_offset=13)], lineno=68, col_offset=13)], lineno=66, col_offset=8)], [], lineno=65, col_offset=4), If(UnaryOp(Not(), Name('args', Load(), lineno=72, col_offset=11), lineno=72, col_offset=7), [Expr(Call(Name('errprint', Load(), lineno=73, col_offset=8), [Str('Usage:', lineno=73, col_offset=17), Name('__doc__', Load(), lineno=73, col_offset=27)], [], None, None, lineno=73, col_offset=8), lineno=73, col_offset=8), Return(None, lineno=74, col_offset=8)], [], lineno=72, col_offset=4), For(Name('arg', Store(), lineno=75, col_offset=8), Name('args', Load(), lineno=75, col_offset=15), [Expr(Call(Name('check', Load(), lineno=76, col_offset=8), [Name('arg', Load(), lineno=76, col_offset=14)], [], None, None, lineno=76, col_offset=8), lineno=76, col_offset=8)], [], lineno=75, col_offset=4)], [], lineno=57, col_offset=0), FunctionDef('check', arguments([Name('file', Param(), lineno=78, col_offset=10)], None, None, []), [If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=79, col_offset=7), 'path', Load(), lineno=79, col_offset=7), 'isdir', Load(), lineno=79, col_offset=7), [Name('file', Load(), lineno=79, col_offset=21)], [], None, None, lineno=79, col_offset=7), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=79, col_offset=35), 'path', Load(), lineno=79, col_offset=35), 'islink', Load(), lineno=79, col_offset=35), [Name('file', Load(), lineno=79, col_offset=50)], [], None, None, lineno=79, col_offset=35), lineno=79, col_offset=31)], lineno=79, col_offset=7), [If(Name('verbose', Load(), lineno=80, col_offset=11), [Print(None, [Str('listing directory', lineno=81, col_offset=18), Name('file', Load(), lineno=81, col_offset=39)], True, lineno=81, col_offset=12)], [], lineno=80, col_offset=8), Assign([Name('names', Store(), lineno=82, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=82, col_offset=16), 'listdir', Load(), lineno=82, col_offset=16), [Name('file', Load(), lineno=82, col_offset=27)], [], None, None, lineno=82, col_offset=16), lineno=82, col_offset=8), For(Name('name', Store(), lineno=83, col_offset=12), Name('names', Load(), lineno=83, col_offset=20), [Assign([Name('fullname', Store(), lineno=84, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=84, col_offset=23), 'path', Load(), lineno=84, col_offset=23), 'join', Load(), lineno=84, col_offset=23), [Name('file', Load(), lineno=84, col_offset=36), Name('name', Load(), lineno=84, col_offset=42)], [], None, None, lineno=84, col_offset=23), lineno=84, col_offset=12), If(BoolOp(Or(), [BoolOp(And(), [Name('recurse', Load(), lineno=85, col_offset=17), Call(Attribute(Attribute(Name('os', Load(), lineno=85, col_offset=29), 'path', Load(), lineno=85, col_offset=29), 'isdir', Load(), lineno=85, col_offset=29), [Name('fullname', Load(), lineno=85, col_offset=43)], [], None, None, lineno=85, col_offset=29), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=86, col_offset=21), 'path', Load(), lineno=86, col_offset=21), 'islink', Load(), lineno=86, col_offset=21), [Name('fullname', Load(), lineno=86, col_offset=36)], [], None, None, lineno=86, col_offset=21), lineno=86, col_offset=17)], lineno=85, col_offset=17), Call(Attribute(Call(Attribute(Name('name', Load(), lineno=87, col_offset=19), 'lower', Load(), lineno=87, col_offset=19), [], [], None, None, lineno=87, col_offset=19), 'endswith', Load(), lineno=87, col_offset=19), [Str('.py', lineno=87, col_offset=41)], [], None, None, lineno=87, col_offset=19)], lineno=85, col_offset=16), [Expr(Call(Name('check', Load(), lineno=88, col_offset=16), [Name('fullname', Load(), lineno=88, col_offset=22)], [], None, None, lineno=88, col_offset=16), lineno=88, col_offset=16)], [], lineno=85, col_offset=12)], [], lineno=83, col_offset=8), Return(None, lineno=89, col_offset=8)], [], lineno=79, col_offset=4), If(Name('verbose', Load(), lineno=91, col_offset=7), [Print(None, [Str('checking', lineno=92, col_offset=14), Name('file', Load(), lineno=92, col_offset=26), Str('...', lineno=92, col_offset=32)], False, lineno=92, col_offset=8)], [], lineno=91, col_offset=4), TryExcept([Assign([Name('f', Store(), lineno=94, col_offset=8)], Call(Name('open', Load(), lineno=94, col_offset=12), [Name('file', Load(), lineno=94, col_offset=17)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=95, col_offset=11), Name('msg', Store(), lineno=95, col_offset=20), [Expr(Call(Name('errprint', Load(), lineno=96, col_offset=8), [BinOp(Str('%r: I/O Error: %s', lineno=96, col_offset=17), Mod(), Tuple([Name('file', Load(), lineno=96, col_offset=40), Call(Name('str', Load(), lineno=96, col_offset=46), [Name('msg', Load(), lineno=96, col_offset=50)], [], None, None, lineno=96, col_offset=46)], Load(), lineno=96, col_offset=40), lineno=96, col_offset=17)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Return(None, lineno=97, col_offset=8)], lineno=95, col_offset=4)], [], lineno=93, col_offset=4), Assign([Name('ff', Store(), lineno=99, col_offset=4)], Call(Name('FutureFinder', Load(), lineno=99, col_offset=9), [Name('f', Load(), lineno=99, col_offset=22), Name('file', Load(), lineno=99, col_offset=25)], [], None, None, lineno=99, col_offset=9), lineno=99, col_offset=4), Assign([Name('changed', Store(), lineno=100, col_offset=4)], Call(Attribute(Name('ff', Load(), lineno=100, col_offset=14), 'run', Load(), lineno=100, col_offset=14), [], [], None, None, lineno=100, col_offset=14), lineno=100, col_offset=4), If(Name('changed', Load(), lineno=101, col_offset=7), [Expr(Call(Attribute(Name('ff', Load(), lineno=102, col_offset=8), 'gettherest', Load(), lineno=102, col_offset=8), [], [], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8)], [], lineno=101, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=103, col_offset=4), 'close', Load(), lineno=103, col_offset=4), [], [], None, None, lineno=103, col_offset=4), lineno=103, col_offset=4), If(Name('changed', Load(), lineno=104, col_offset=7), [If(Name('verbose', Load(), lineno=105, col_offset=11), [Print(None, [Str('changed.', lineno=106, col_offset=18)], True, lineno=106, col_offset=12), If(Name('dryrun', Load(), lineno=107, col_offset=15), [Print(None, [Str('But this is a dry run, so leaving it alone.', lineno=108, col_offset=22)], True, lineno=108, col_offset=16)], [], lineno=107, col_offset=12)], [], lineno=105, col_offset=8), For(Tuple([Name('s', Store(), lineno=109, col_offset=12), Name('e', Store(), lineno=109, col_offset=15), Name('line', Store(), lineno=109, col_offset=18)], Store(), lineno=109, col_offset=12), Name('changed', Load(), lineno=109, col_offset=26), [Print(None, [BinOp(Str('%r lines %d-%d', lineno=110, col_offset=18), Mod(), Tuple([Name('file', Load(), lineno=110, col_offset=38), BinOp(Name('s', Load(), lineno=110, col_offset=44), Add(), Num(1, lineno=110, col_offset=46), lineno=110, col_offset=44), BinOp(Name('e', Load(), lineno=110, col_offset=49), Add(), Num(1, lineno=110, col_offset=51), lineno=110, col_offset=49)], Load(), lineno=110, col_offset=38), lineno=110, col_offset=18)], True, lineno=110, col_offset=12), For(Name('i', Store(), lineno=111, col_offset=16), Call(Name('range', Load(), lineno=111, col_offset=21), [Name('s', Load(), lineno=111, col_offset=27), BinOp(Name('e', Load(), lineno=111, col_offset=30), Add(), Num(1, lineno=111, col_offset=32), lineno=111, col_offset=30)], [], None, None, lineno=111, col_offset=21), [Print(None, [Subscript(Attribute(Name('ff', Load(), lineno=112, col_offset=22), 'lines', Load(), lineno=112, col_offset=22), Index(Name('i', Load(), lineno=112, col_offset=31)), Load(), lineno=112, col_offset=22)], False, lineno=112, col_offset=16)], [], lineno=111, col_offset=12), If(Compare(Name('line', Load(), lineno=113, col_offset=15), [Is()], [Name('None', Load(), lineno=113, col_offset=23)], lineno=113, col_offset=15), [Print(None, [Str('-- deleted', lineno=114, col_offset=22)], True, lineno=114, col_offset=16)], [Print(None, [Str('-- change to:', lineno=116, col_offset=22)], True, lineno=116, col_offset=16), Print(None, [Name('line', Load(), lineno=117, col_offset=22)], False, lineno=117, col_offset=16)], lineno=113, col_offset=12)], [], lineno=109, col_offset=8), If(UnaryOp(Not(), Name('dryrun', Load(), lineno=118, col_offset=15), lineno=118, col_offset=11), [Assign([Name('bak', Store(), lineno=119, col_offset=12)], BinOp(Name('file', Load(), lineno=119, col_offset=18), Add(), Str('.bak', lineno=119, col_offset=25), lineno=119, col_offset=18), lineno=119, col_offset=12), If(Call(Attribute(Attribute(Name('os', Load(), lineno=120, col_offset=15), 'path', Load(), lineno=120, col_offset=15), 'exists', Load(), lineno=120, col_offset=15), [Name('bak', Load(), lineno=120, col_offset=30)], [], None, None, lineno=120, col_offset=15), [Expr(Call(Attribute(Name('os', Load(), lineno=121, col_offset=16), 'remove', Load(), lineno=121, col_offset=16), [Name('bak', Load(), lineno=121, col_offset=26)], [], None, None, lineno=121, col_offset=16), lineno=121, col_offset=16)], [], lineno=120, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=122, col_offset=12), 'rename', Load(), lineno=122, col_offset=12), [Name('file', Load(), lineno=122, col_offset=22), Name('bak', Load(), lineno=122, col_offset=28)], [], None, None, lineno=122, col_offset=12), lineno=122, col_offset=12), If(Name('verbose', Load(), lineno=123, col_offset=15), [Print(None, [Str('renamed', lineno=124, col_offset=22), Name('file', Load(), lineno=124, col_offset=33), Str('to', lineno=124, col_offset=39), Name('bak', Load(), lineno=124, col_offset=45)], True, lineno=124, col_offset=16)], [], lineno=123, col_offset=12), Assign([Name('g', Store(), lineno=125, col_offset=12)], Call(Name('open', Load(), lineno=125, col_offset=16), [Name('file', Load(), lineno=125, col_offset=21), Str('w', lineno=125, col_offset=27)], [], None, None, lineno=125, col_offset=16), lineno=125, col_offset=12), Expr(Call(Attribute(Name('ff', Load(), lineno=126, col_offset=12), 'write', Load(), lineno=126, col_offset=12), [Name('g', Load(), lineno=126, col_offset=21)], [], None, None, lineno=126, col_offset=12), lineno=126, col_offset=12), Expr(Call(Attribute(Name('g', Load(), lineno=127, col_offset=12), 'close', Load(), lineno=127, col_offset=12), [], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12), If(Name('verbose', Load(), lineno=128, col_offset=15), [Print(None, [Str('wrote new', lineno=129, col_offset=22), Name('file', Load(), lineno=129, col_offset=35)], True, lineno=129, col_offset=16)], [], lineno=128, col_offset=12)], [], lineno=118, col_offset=8)], [If(Name('verbose', Load(), lineno=131, col_offset=11), [Print(None, [Str('unchanged.', lineno=132, col_offset=18)], True, lineno=132, col_offset=12)], [], lineno=131, col_offset=8)], lineno=104, col_offset=4)], [], lineno=78, col_offset=0), ClassDef('FutureFinder', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=136, col_offset=17), Name('f', Param(), lineno=136, col_offset=23), Name('fname', Param(), lineno=136, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=137, col_offset=8), 'f', Store(), lineno=137, col_offset=8)], Name('f', Load(), lineno=137, col_offset=17), lineno=137, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), 'fname', Store(), lineno=138, col_offset=8)], Name('fname', Load(), lineno=138, col_offset=21), lineno=138, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=139, col_offset=8), 'ateof', Store(), lineno=139, col_offset=8)], Num(0, lineno=139, col_offset=21), lineno=139, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=140, col_offset=8), 'lines', Store(), lineno=140, col_offset=8)], List([], Load(), lineno=140, col_offset=21), lineno=140, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=143, col_offset=8), 'changed', Store(), lineno=143, col_offset=8)], List([], Load(), lineno=143, col_offset=23), lineno=143, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('getline', arguments([Name('self', Param(), lineno=146, col_offset=16)], None, None, []), [If(Attribute(Name('self', Load(), lineno=147, col_offset=11), 'ateof', Load(), lineno=147, col_offset=11), [Return(Str('', lineno=148, col_offset=19), lineno=148, col_offset=12)], [], lineno=147, col_offset=8), Assign([Name('line', Store(), lineno=149, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=149, col_offset=15), 'f', Load(), lineno=149, col_offset=15), 'readline', Load(), lineno=149, col_offset=15), [], [], None, None, lineno=149, col_offset=15), lineno=149, col_offset=8), If(Compare(Name('line', Load(), lineno=150, col_offset=11), [Eq()], [Str('', lineno=150, col_offset=19)], lineno=150, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=151, col_offset=12), 'ateof', Store(), lineno=151, col_offset=12)], Num(1, lineno=151, col_offset=25), lineno=151, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=153, col_offset=12), 'lines', Load(), lineno=153, col_offset=12), 'append', Load(), lineno=153, col_offset=12), [Name('line', Load(), lineno=153, col_offset=30)], [], None, None, lineno=153, col_offset=12), lineno=153, col_offset=12)], lineno=150, col_offset=8), Return(Name('line', Load(), lineno=154, col_offset=15), lineno=154, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=156, col_offset=12)], None, None, []), [Assign([Name('STRING', Store(), lineno=157, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=157, col_offset=17), 'STRING', Load(), lineno=157, col_offset=17), lineno=157, col_offset=8), Assign([Name('NL', Store(), lineno=158, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=158, col_offset=13), 'NL', Load(), lineno=158, col_offset=13), lineno=158, col_offset=8), Assign([Name('NEWLINE', Store(), lineno=159, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=159, col_offset=18), 'NEWLINE', Load(), lineno=159, col_offset=18), lineno=159, col_offset=8), Assign([Name('COMMENT', Store(), lineno=160, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=160, col_offset=18), 'COMMENT', Load(), lineno=160, col_offset=18), lineno=160, col_offset=8), Assign([Name('NAME', Store(), lineno=161, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=161, col_offset=15), 'NAME', Load(), lineno=161, col_offset=15), lineno=161, col_offset=8), Assign([Name('OP', Store(), lineno=162, col_offset=8)], Attribute(Name('tokenize', Load(), lineno=162, col_offset=13), 'OP', Load(), lineno=162, col_offset=13), lineno=162, col_offset=8), Assign([Name('changed', Store(), lineno=164, col_offset=8)], Attribute(Name('self', Load(), lineno=164, col_offset=18), 'changed', Load(), lineno=164, col_offset=18), lineno=164, col_offset=8), Assign([Name('get', Store(), lineno=165, col_offset=8)], Attribute(Call(Attribute(Name('tokenize', Load(), lineno=165, col_offset=14), 'generate_tokens', Load(), lineno=165, col_offset=14), [Attribute(Name('self', Load(), lineno=165, col_offset=39), 'getline', Load(), lineno=165, col_offset=39)], [], None, None, lineno=165, col_offset=14), 'next', Load(), lineno=165, col_offset=14), lineno=165, col_offset=8), Assign([Tuple([Name('type', Store(), lineno=166, col_offset=8), Name('token', Store(), lineno=166, col_offset=14), Tuple([Name('srow', Store(), lineno=166, col_offset=22), Name('scol', Store(), lineno=166, col_offset=28)], Store(), lineno=166, col_offset=22), Tuple([Name('erow', Store(), lineno=166, col_offset=36), Name('ecol', Store(), lineno=166, col_offset=42)], Store(), lineno=166, col_offset=36), Name('line', Store(), lineno=166, col_offset=49)], Store(), lineno=166, col_offset=8)], Call(Name('get', Load(), lineno=166, col_offset=56), [], [], None, None, lineno=166, col_offset=56), lineno=166, col_offset=8), While(Compare(Name('type', Load(), lineno=169, col_offset=14), [In()], [Tuple([Name('COMMENT', Load(), lineno=169, col_offset=23), Name('NL', Load(), lineno=169, col_offset=32), Name('NEWLINE', Load(), lineno=169, col_offset=36)], Load(), lineno=169, col_offset=23)], lineno=169, col_offset=14), [Assign([Tuple([Name('type', Store(), lineno=170, col_offset=12), Name('token', Store(), lineno=170, col_offset=18), Tuple([Name('srow', Store(), lineno=170, col_offset=26), Name('scol', Store(), lineno=170, col_offset=32)], Store(), lineno=170, col_offset=26), Tuple([Name('erow', Store(), lineno=170, col_offset=40), Name('ecol', Store(), lineno=170, col_offset=46)], Store(), lineno=170, col_offset=40), Name('line', Store(), lineno=170, col_offset=53)], Store(), lineno=170, col_offset=12)], Call(Name('get', Load(), lineno=170, col_offset=60), [], [], None, None, lineno=170, col_offset=60), lineno=170, col_offset=12)], [], lineno=169, col_offset=8), While(Compare(Name('type', Load(), lineno=173, col_offset=14), [Is()], [Name('STRING', Load(), lineno=173, col_offset=22)], lineno=173, col_offset=14), [Assign([Tuple([Name('type', Store(), lineno=174, col_offset=12), Name('token', Store(), lineno=174, col_offset=18), Tuple([Name('srow', Store(), lineno=174, col_offset=26), Name('scol', Store(), lineno=174, col_offset=32)], Store(), lineno=174, col_offset=26), Tuple([Name('erow', Store(), lineno=174, col_offset=40), Name('ecol', Store(), lineno=174, col_offset=46)], Store(), lineno=174, col_offset=40), Name('line', Store(), lineno=174, col_offset=53)], Store(), lineno=174, col_offset=12)], Call(Name('get', Load(), lineno=174, col_offset=60), [], [], None, None, lineno=174, col_offset=60), lineno=174, col_offset=12)], [], lineno=173, col_offset=8), While(Num(1, lineno=177, col_offset=14), [While(Compare(Name('type', Load(), lineno=179, col_offset=18), [In()], [Tuple([Name('COMMENT', Load(), lineno=179, col_offset=27), Name('NL', Load(), lineno=179, col_offset=36), Name('NEWLINE', Load(), lineno=179, col_offset=40)], Load(), lineno=179, col_offset=27)], lineno=179, col_offset=18), [Assign([Tuple([Name('type', Store(), lineno=180, col_offset=16), Name('token', Store(), lineno=180, col_offset=22), Tuple([Name('srow', Store(), lineno=180, col_offset=30), Name('scol', Store(), lineno=180, col_offset=36)], Store(), lineno=180, col_offset=30), Tuple([Name('erow', Store(), lineno=180, col_offset=44), Name('ecol', Store(), lineno=180, col_offset=50)], Store(), lineno=180, col_offset=44), Name('line', Store(), lineno=180, col_offset=57)], Store(), lineno=180, col_offset=16)], Call(Name('get', Load(), lineno=180, col_offset=64), [], [], None, None, lineno=180, col_offset=64), lineno=180, col_offset=16)], [], lineno=179, col_offset=12), If(UnaryOp(Not(), BoolOp(And(), [Compare(Name('type', Load(), lineno=182, col_offset=20), [Is()], [Name('NAME', Load(), lineno=182, col_offset=28)], lineno=182, col_offset=20), Compare(Name('token', Load(), lineno=182, col_offset=37), [Eq()], [Str('from', lineno=182, col_offset=46)], lineno=182, col_offset=37)], lineno=182, col_offset=20), lineno=182, col_offset=15), [Break( lineno=183, col_offset=16)], [], lineno=182, col_offset=12), Assign([Name('startline', Store(), lineno=184, col_offset=12)], BinOp(Name('srow', Load(), lineno=184, col_offset=24), Sub(), Num(1, lineno=184, col_offset=31), lineno=184, col_offset=24), lineno=184, col_offset=12), Assign([Tuple([Name('type', Store(), lineno=185, col_offset=12), Name('token', Store(), lineno=185, col_offset=18), Tuple([Name('srow', Store(), lineno=185, col_offset=26), Name('scol', Store(), lineno=185, col_offset=32)], Store(), lineno=185, col_offset=26), Tuple([Name('erow', Store(), lineno=185, col_offset=40), Name('ecol', Store(), lineno=185, col_offset=46)], Store(), lineno=185, col_offset=40), Name('line', Store(), lineno=185, col_offset=53)], Store(), lineno=185, col_offset=12)], Call(Name('get', Load(), lineno=185, col_offset=60), [], [], None, None, lineno=185, col_offset=60), lineno=185, col_offset=12), If(UnaryOp(Not(), BoolOp(And(), [Compare(Name('type', Load(), lineno=187, col_offset=20), [Is()], [Name('NAME', Load(), lineno=187, col_offset=28)], lineno=187, col_offset=20), Compare(Name('token', Load(), lineno=187, col_offset=37), [Eq()], [Str('__future__', lineno=187, col_offset=46)], lineno=187, col_offset=37)], lineno=187, col_offset=20), lineno=187, col_offset=15), [Break( lineno=188, col_offset=16)], [], lineno=187, col_offset=12), Assign([Tuple([Name('type', Store(), lineno=189, col_offset=12), Name('token', Store(), lineno=189, col_offset=18), Tuple([Name('srow', Store(), lineno=189, col_offset=26), Name('scol', Store(), lineno=189, col_offset=32)], Store(), lineno=189, col_offset=26), Tuple([Name('erow', Store(), lineno=189, col_offset=40), Name('ecol', Store(), lineno=189, col_offset=46)], Store(), lineno=189, col_offset=40), Name('line', Store(), lineno=189, col_offset=53)], Store(), lineno=189, col_offset=12)], Call(Name('get', Load(), lineno=189, col_offset=60), [], [], None, None, lineno=189, col_offset=60), lineno=189, col_offset=12), If(UnaryOp(Not(), BoolOp(And(), [Compare(Name('type', Load(), lineno=191, col_offset=20), [Is()], [Name('NAME', Load(), lineno=191, col_offset=28)], lineno=191, col_offset=20), Compare(Name('token', Load(), lineno=191, col_offset=37), [Eq()], [Str('import', lineno=191, col_offset=46)], lineno=191, col_offset=37)], lineno=191, col_offset=20), lineno=191, col_offset=15), [Break( lineno=192, col_offset=16)], [], lineno=191, col_offset=12), Assign([Tuple([Name('type', Store(), lineno=193, col_offset=12), Name('token', Store(), lineno=193, col_offset=18), Tuple([Name('srow', Store(), lineno=193, col_offset=26), Name('scol', Store(), lineno=193, col_offset=32)], Store(), lineno=193, col_offset=26), Tuple([Name('erow', Store(), lineno=193, col_offset=40), Name('ecol', Store(), lineno=193, col_offset=46)], Store(), lineno=193, col_offset=40), Name('line', Store(), lineno=193, col_offset=53)], Store(), lineno=193, col_offset=12)], Call(Name('get', Load(), lineno=193, col_offset=60), [], [], None, None, lineno=193, col_offset=60), lineno=193, col_offset=12), Assign([Name('features', Store(), lineno=196, col_offset=12)], List([], Load(), lineno=196, col_offset=23), lineno=196, col_offset=12), While(Compare(Name('type', Load(), lineno=197, col_offset=18), [Is()], [Name('NAME', Load(), lineno=197, col_offset=26)], lineno=197, col_offset=18), [Expr(Call(Attribute(Name('features', Load(), lineno=198, col_offset=16), 'append', Load(), lineno=198, col_offset=16), [Name('token', Load(), lineno=198, col_offset=32)], [], None, None, lineno=198, col_offset=16), lineno=198, col_offset=16), Assign([Tuple([Name('type', Store(), lineno=199, col_offset=16), Name('token', Store(), lineno=199, col_offset=22), Tuple([Name('srow', Store(), lineno=199, col_offset=30), Name('scol', Store(), lineno=199, col_offset=36)], Store(), lineno=199, col_offset=30), Tuple([Name('erow', Store(), lineno=199, col_offset=44), Name('ecol', Store(), lineno=199, col_offset=50)], Store(), lineno=199, col_offset=44), Name('line', Store(), lineno=199, col_offset=57)], Store(), lineno=199, col_offset=16)], Call(Name('get', Load(), lineno=199, col_offset=64), [], [], None, None, lineno=199, col_offset=64), lineno=199, col_offset=16), If(UnaryOp(Not(), BoolOp(And(), [Compare(Name('type', Load(), lineno=201, col_offset=24), [Is()], [Name('OP', Load(), lineno=201, col_offset=32)], lineno=201, col_offset=24), Compare(Name('token', Load(), lineno=201, col_offset=39), [Eq()], [Str(',', lineno=201, col_offset=48)], lineno=201, col_offset=39)], lineno=201, col_offset=24), lineno=201, col_offset=19), [Break( lineno=202, col_offset=20)], [], lineno=201, col_offset=16), Assign([Tuple([Name('type', Store(), lineno=203, col_offset=16), Name('token', Store(), lineno=203, col_offset=22), Tuple([Name('srow', Store(), lineno=203, col_offset=30), Name('scol', Store(), lineno=203, col_offset=36)], Store(), lineno=203, col_offset=30), Tuple([Name('erow', Store(), lineno=203, col_offset=44), Name('ecol', Store(), lineno=203, col_offset=50)], Store(), lineno=203, col_offset=44), Name('line', Store(), lineno=203, col_offset=57)], Store(), lineno=203, col_offset=16)], Call(Name('get', Load(), lineno=203, col_offset=64), [], [], None, None, lineno=203, col_offset=64), lineno=203, col_offset=16)], [], lineno=197, col_offset=12), Assign([Name('comment', Store(), lineno=206, col_offset=12)], Name('None', Load(), lineno=206, col_offset=22), lineno=206, col_offset=12), If(Compare(Name('type', Load(), lineno=207, col_offset=15), [Is()], [Name('COMMENT', Load(), lineno=207, col_offset=23)], lineno=207, col_offset=15), [Assign([Name('comment', Store(), lineno=208, col_offset=16)], Name('token', Load(), lineno=208, col_offset=26), lineno=208, col_offset=16), Assign([Tuple([Name('type', Store(), lineno=209, col_offset=16), Name('token', Store(), lineno=209, col_offset=22), Tuple([Name('srow', Store(), lineno=209, col_offset=30), Name('scol', Store(), lineno=209, col_offset=36)], Store(), lineno=209, col_offset=30), Tuple([Name('erow', Store(), lineno=209, col_offset=44), Name('ecol', Store(), lineno=209, col_offset=50)], Store(), lineno=209, col_offset=44), Name('line', Store(), lineno=209, col_offset=57)], Store(), lineno=209, col_offset=16)], Call(Name('get', Load(), lineno=209, col_offset=64), [], [], None, None, lineno=209, col_offset=64), lineno=209, col_offset=16)], [], lineno=207, col_offset=12), If(Compare(Name('type', Load(), lineno=211, col_offset=15), [IsNot()], [Name('NEWLINE', Load(), lineno=211, col_offset=27)], lineno=211, col_offset=15), [Expr(Call(Name('errprint', Load(), lineno=212, col_offset=16), [BinOp(Str("Skipping file %r; can't parse line %d:\n%s", lineno=212, col_offset=25), Mod(), Tuple([Attribute(Name('self', Load(), lineno=213, col_offset=26), 'fname', Load(), lineno=213, col_offset=26), Name('srow', Load(), lineno=213, col_offset=38), Name('line', Load(), lineno=213, col_offset=44)], Load(), lineno=213, col_offset=26), lineno=212, col_offset=25)], [], None, None, lineno=212, col_offset=16), lineno=212, col_offset=16), Return(List([], Load(), lineno=214, col_offset=23), lineno=214, col_offset=16)], [], lineno=211, col_offset=12), Assign([Name('endline', Store(), lineno=216, col_offset=12)], BinOp(Name('srow', Load(), lineno=216, col_offset=22), Sub(), Num(1, lineno=216, col_offset=29), lineno=216, col_offset=22), lineno=216, col_offset=12), Assign([Name('okfeatures', Store(), lineno=219, col_offset=12)], List([], Load(), lineno=219, col_offset=25), lineno=219, col_offset=12), For(Name('f', Store(), lineno=220, col_offset=16), Name('features', Load(), lineno=220, col_offset=21), [Assign([Name('object', Store(), lineno=221, col_offset=16)], Call(Name('getattr', Load(), lineno=221, col_offset=25), [Name('__future__', Load(), lineno=221, col_offset=33), Name('f', Load(), lineno=221, col_offset=45), Name('None', Load(), lineno=221, col_offset=48)], [], None, None, lineno=221, col_offset=25), lineno=221, col_offset=16), If(Compare(Name('object', Load(), lineno=222, col_offset=19), [Is()], [Name('None', Load(), lineno=222, col_offset=29)], lineno=222, col_offset=19), [Expr(Call(Attribute(Name('okfeatures', Load(), lineno=226, col_offset=20), 'append', Load(), lineno=226, col_offset=20), [Name('f', Load(), lineno=226, col_offset=38)], [], None, None, lineno=226, col_offset=20), lineno=226, col_offset=20)], [Assign([Name('released', Store(), lineno=228, col_offset=20)], Call(Attribute(Name('object', Load(), lineno=228, col_offset=31), 'getMandatoryRelease', Load(), lineno=228, col_offset=31), [], [], None, None, lineno=228, col_offset=31), lineno=228, col_offset=20), If(BoolOp(Or(), [Compare(Name('released', Load(), lineno=229, col_offset=23), [Is()], [Name('None', Load(), lineno=229, col_offset=35)], lineno=229, col_offset=23), Compare(Name('released', Load(), lineno=229, col_offset=43), [LtE()], [Attribute(Name('sys', Load(), lineno=229, col_offset=55), 'version_info', Load(), lineno=229, col_offset=55)], lineno=229, col_offset=43)], lineno=229, col_offset=23), [Pass( lineno=231, col_offset=24)], [Expr(Call(Attribute(Name('okfeatures', Load(), lineno=233, col_offset=24), 'append', Load(), lineno=233, col_offset=24), [Name('f', Load(), lineno=233, col_offset=42)], [], None, None, lineno=233, col_offset=24), lineno=233, col_offset=24)], lineno=229, col_offset=20)], lineno=222, col_offset=16)], [], lineno=220, col_offset=12), If(Compare(Call(Name('len', Load(), lineno=236, col_offset=15), [Name('okfeatures', Load(), lineno=236, col_offset=19)], [], None, None, lineno=236, col_offset=15), [Lt()], [Call(Name('len', Load(), lineno=236, col_offset=33), [Name('features', Load(), lineno=236, col_offset=37)], [], None, None, lineno=236, col_offset=33)], lineno=236, col_offset=15), [If(Compare(Call(Name('len', Load(), lineno=237, col_offset=19), [Name('okfeatures', Load(), lineno=237, col_offset=23)], [], None, None, lineno=237, col_offset=19), [Eq()], [Num(0, lineno=237, col_offset=38)], lineno=237, col_offset=19), [Assign([Name('line', Store(), lineno=238, col_offset=20)], Name('None', Load(), lineno=238, col_offset=27), lineno=238, col_offset=20)], [Assign([Name('line', Store(), lineno=240, col_offset=20)], Str('from __future__ import ', lineno=240, col_offset=27), lineno=240, col_offset=20), AugAssign(Name('line', Store(), lineno=241, col_offset=20), Add(), Call(Attribute(Str(', ', lineno=241, col_offset=28), 'join', Load(), lineno=241, col_offset=28), [Name('okfeatures', Load(), lineno=241, col_offset=38)], [], None, None, lineno=241, col_offset=28), lineno=241, col_offset=20), If(Compare(Name('comment', Load(), lineno=242, col_offset=23), [IsNot()], [Name('None', Load(), lineno=242, col_offset=38)], lineno=242, col_offset=23), [AugAssign(Name('line', Store(), lineno=243, col_offset=24), Add(), BinOp(Str(' ', lineno=243, col_offset=32), Add(), Name('comment', Load(), lineno=243, col_offset=38), lineno=243, col_offset=32), lineno=243, col_offset=24)], [], lineno=242, col_offset=20), AugAssign(Name('line', Store(), lineno=244, col_offset=20), Add(), Str('\n', lineno=244, col_offset=28), lineno=244, col_offset=20)], lineno=237, col_offset=16), Expr(Call(Attribute(Name('changed', Load(), lineno=245, col_offset=16), 'append', Load(), lineno=245, col_offset=16), [Tuple([Name('startline', Load(), lineno=245, col_offset=32), Name('endline', Load(), lineno=245, col_offset=43), Name('line', Load(), lineno=245, col_offset=52)], Load(), lineno=245, col_offset=32)], [], None, None, lineno=245, col_offset=16), lineno=245, col_offset=16)], [], lineno=236, col_offset=12)], [], lineno=177, col_offset=8), Return(Name('changed', Load(), lineno=249, col_offset=15), lineno=249, col_offset=8)], [], lineno=156, col_offset=4), FunctionDef('gettherest', arguments([Name('self', Param(), lineno=251, col_offset=19)], None, None, []), [If(Attribute(Name('self', Load(), lineno=252, col_offset=11), 'ateof', Load(), lineno=252, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=253, col_offset=12), 'therest', Store(), lineno=253, col_offset=12)], Str('', lineno=253, col_offset=27), lineno=253, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=255, col_offset=12), 'therest', Store(), lineno=255, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=255, col_offset=27), 'f', Load(), lineno=255, col_offset=27), 'read', Load(), lineno=255, col_offset=27), [], [], None, None, lineno=255, col_offset=27), lineno=255, col_offset=12)], lineno=252, col_offset=8)], [], lineno=251, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=257, col_offset=14), Name('f', Param(), lineno=257, col_offset=20)], None, None, []), [Assign([Name('changed', Store(), lineno=258, col_offset=8)], Attribute(Name('self', Load(), lineno=258, col_offset=18), 'changed', Load(), lineno=258, col_offset=18), lineno=258, col_offset=8), Assert(Name('changed', Load(), lineno=259, col_offset=15), None, lineno=259, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=261, col_offset=8), 'changed', Store(), lineno=261, col_offset=8)], List([], Load(), lineno=261, col_offset=23), lineno=261, col_offset=8), Expr(Call(Attribute(Name('changed', Load(), lineno=263, col_offset=8), 'reverse', Load(), lineno=263, col_offset=8), [], [], None, None, lineno=263, col_offset=8), lineno=263, col_offset=8), For(Tuple([Name('s', Store(), lineno=264, col_offset=12), Name('e', Store(), lineno=264, col_offset=15), Name('line', Store(), lineno=264, col_offset=18)], Store(), lineno=264, col_offset=12), Name('changed', Load(), lineno=264, col_offset=26), [If(Compare(Name('line', Load(), lineno=265, col_offset=15), [Is()], [Name('None', Load(), lineno=265, col_offset=23)], lineno=265, col_offset=15), [Delete([Subscript(Attribute(Name('self', Load(), lineno=267, col_offset=20), 'lines', Load(), lineno=267, col_offset=20), Slice(Name('s', Load(), lineno=267, col_offset=31), BinOp(Name('e', Load(), lineno=267, col_offset=33), Add(), Num(1, lineno=267, col_offset=35), lineno=267, col_offset=33), None), Del(), lineno=267, col_offset=20)], lineno=267, col_offset=16)], [Assign([Subscript(Attribute(Name('self', Load(), lineno=269, col_offset=16), 'lines', Load(), lineno=269, col_offset=16), Slice(Name('s', Load(), lineno=269, col_offset=27), BinOp(Name('e', Load(), lineno=269, col_offset=29), Add(), Num(1, lineno=269, col_offset=31), lineno=269, col_offset=29), None), Store(), lineno=269, col_offset=16)], List([Name('line', Load(), lineno=269, col_offset=37)], Load(), lineno=269, col_offset=36), lineno=269, col_offset=16)], lineno=265, col_offset=12)], [], lineno=264, col_offset=8), Expr(Call(Attribute(Name('f', Load(), lineno=270, col_offset=8), 'writelines', Load(), lineno=270, col_offset=8), [Attribute(Name('self', Load(), lineno=270, col_offset=21), 'lines', Load(), lineno=270, col_offset=21)], [], None, None, lineno=270, col_offset=8), lineno=270, col_offset=8), If(Attribute(Name('self', Load(), lineno=272, col_offset=11), 'therest', Load(), lineno=272, col_offset=11), [Expr(Call(Attribute(Name('f', Load(), lineno=273, col_offset=12), 'write', Load(), lineno=273, col_offset=12), [Attribute(Name('self', Load(), lineno=273, col_offset=20), 'therest', Load(), lineno=273, col_offset=20)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12)], [], lineno=272, col_offset=8)], [], lineno=257, col_offset=4)], [], lineno=134, col_offset=0), If(Compare(Name('__name__', Load(), lineno=275, col_offset=3), [Eq()], [Str('__main__', lineno=275, col_offset=15)], lineno=275, col_offset=3), [Expr(Call(Name('main', Load(), lineno=276, col_offset=4), [], [], None, None, lineno=276, col_offset=4), lineno=276, col_offset=4)], [], lineno=275, col_offset=0)])
