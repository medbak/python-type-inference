Module([Expr(Str('Test posix functions', lineno=1, col_offset=0), lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=3, col_offset=0), Assign([Name('posix', Store(), lineno=6, col_offset=0)], Call(Attribute(Name('test_support', Load(), lineno=6, col_offset=8), 'import_module', Load(), lineno=6, col_offset=8), [Str('posix', lineno=6, col_offset=35)], [], None, None, lineno=6, col_offset=8), lineno=6, col_offset=0), Import([alias('errno', None)], lineno=8, col_offset=0), Import([alias('sys', None)], lineno=9, col_offset=0), Import([alias('time', None)], lineno=10, col_offset=0), Import([alias('os', None)], lineno=11, col_offset=0), Import([alias('pwd', None)], lineno=12, col_offset=0), Import([alias('shutil', None)], lineno=13, col_offset=0), Import([alias('sys', None)], lineno=14, col_offset=0), Import([alias('unittest', None)], lineno=15, col_offset=0), Import([alias('warnings', None)], lineno=16, col_offset=0), Expr(Call(Attribute(Name('warnings', Load(), lineno=19, col_offset=0), 'filterwarnings', Load(), lineno=19, col_offset=0), [Str('ignore', lineno=19, col_offset=24), Str('.* potential security risk .*', lineno=19, col_offset=34), Name('RuntimeWarning', Load(), lineno=20, col_offset=24)], [], None, None, lineno=19, col_offset=0), lineno=19, col_offset=0), ClassDef('PosixTester', [Attribute(Name('unittest', Load(), lineno=22, col_offset=18), 'TestCase', Load(), lineno=22, col_offset=18)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=24, col_offset=14)], None, None, []), [Assign([Name('fp', Store(), lineno=26, col_offset=8)], Call(Name('open', Load(), lineno=26, col_offset=13), [Attribute(Name('test_support', Load(), lineno=26, col_offset=18), 'TESTFN', Load(), lineno=26, col_offset=18), Str('w+', lineno=26, col_offset=39)], [], None, None, lineno=26, col_offset=13), lineno=26, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=27, col_offset=8), 'close', Load(), lineno=27, col_offset=8), [], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=29, col_offset=17)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=30, col_offset=8), 'unlink', Load(), lineno=30, col_offset=8), [Attribute(Name('test_support', Load(), lineno=30, col_offset=18), 'TESTFN', Load(), lineno=30, col_offset=18)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('testNoArgFunctions', arguments([Name('self', Param(), lineno=32, col_offset=27)], None, None, []), [Assign([Name('NO_ARG_FUNCTIONS', Store(), lineno=35, col_offset=8)], List([Str('ctermid', lineno=35, col_offset=29), Str('getcwd', lineno=35, col_offset=40), Str('getcwdu', lineno=35, col_offset=50), Str('uname', lineno=35, col_offset=61), Str('times', lineno=36, col_offset=29), Str('getloadavg', lineno=36, col_offset=38), Str('tmpnam', lineno=36, col_offset=52), Str('getegid', lineno=37, col_offset=29), Str('geteuid', lineno=37, col_offset=40), Str('getgid', lineno=37, col_offset=51), Str('getgroups', lineno=37, col_offset=61), Str('getpid', lineno=38, col_offset=29), Str('getpgrp', lineno=38, col_offset=39), Str('getppid', lineno=38, col_offset=50), Str('getuid', lineno=38, col_offset=61)], Load(), lineno=35, col_offset=27), lineno=35, col_offset=8), For(Name('name', Store(), lineno=41, col_offset=12), Name('NO_ARG_FUNCTIONS', Load(), lineno=41, col_offset=20), [Assign([Name('posix_func', Store(), lineno=42, col_offset=12)], Call(Name('getattr', Load(), lineno=42, col_offset=25), [Name('posix', Load(), lineno=42, col_offset=33), Name('name', Load(), lineno=42, col_offset=40), Name('None', Load(), lineno=42, col_offset=46)], [], None, None, lineno=42, col_offset=25), lineno=42, col_offset=12), If(Compare(Name('posix_func', Load(), lineno=43, col_offset=15), [IsNot()], [Name('None', Load(), lineno=43, col_offset=33)], lineno=43, col_offset=15), [Expr(Call(Name('posix_func', Load(), lineno=44, col_offset=16), [], [], None, None, lineno=44, col_offset=16), lineno=44, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=16), 'assertRaises', Load(), lineno=45, col_offset=16), [Name('TypeError', Load(), lineno=45, col_offset=34), Name('posix_func', Load(), lineno=45, col_offset=45), Num(1, lineno=45, col_offset=57)], [], None, None, lineno=45, col_offset=16), lineno=45, col_offset=16)], [], lineno=43, col_offset=12)], [], lineno=41, col_offset=8)], [], lineno=32, col_offset=4), If(Call(Name('hasattr', Load(), lineno=47, col_offset=7), [Name('posix', Load(), lineno=47, col_offset=15), Str('getresuid', lineno=47, col_offset=22)], [], None, None, lineno=47, col_offset=7), [FunctionDef('test_getresuid', arguments([Name('self', Param(), lineno=48, col_offset=27)], None, None, []), [Assign([Name('user_ids', Store(), lineno=49, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=49, col_offset=23), 'getresuid', Load(), lineno=49, col_offset=23), [], [], None, None, lineno=49, col_offset=23), lineno=49, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=50, col_offset=12), 'assertEqual', Load(), lineno=50, col_offset=12), [Call(Name('len', Load(), lineno=50, col_offset=29), [Name('user_ids', Load(), lineno=50, col_offset=33)], [], None, None, lineno=50, col_offset=29), Num(3, lineno=50, col_offset=44)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=12), For(Name('val', Store(), lineno=51, col_offset=16), Name('user_ids', Load(), lineno=51, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=16), 'assertGreaterEqual', Load(), lineno=52, col_offset=16), [Name('val', Load(), lineno=52, col_offset=40), Num(0, lineno=52, col_offset=45)], [], None, None, lineno=52, col_offset=16), lineno=52, col_offset=16)], [], lineno=51, col_offset=12)], [], lineno=48, col_offset=8)], [], lineno=47, col_offset=4), If(Call(Name('hasattr', Load(), lineno=54, col_offset=7), [Name('posix', Load(), lineno=54, col_offset=15), Str('getresgid', lineno=54, col_offset=22)], [], None, None, lineno=54, col_offset=7), [FunctionDef('test_getresgid', arguments([Name('self', Param(), lineno=55, col_offset=27)], None, None, []), [Assign([Name('group_ids', Store(), lineno=56, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=56, col_offset=24), 'getresgid', Load(), lineno=56, col_offset=24), [], [], None, None, lineno=56, col_offset=24), lineno=56, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=12), 'assertEqual', Load(), lineno=57, col_offset=12), [Call(Name('len', Load(), lineno=57, col_offset=29), [Name('group_ids', Load(), lineno=57, col_offset=33)], [], None, None, lineno=57, col_offset=29), Num(3, lineno=57, col_offset=45)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12), For(Name('val', Store(), lineno=58, col_offset=16), Name('group_ids', Load(), lineno=58, col_offset=23), [Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=16), 'assertGreaterEqual', Load(), lineno=59, col_offset=16), [Name('val', Load(), lineno=59, col_offset=40), Num(0, lineno=59, col_offset=45)], [], None, None, lineno=59, col_offset=16), lineno=59, col_offset=16)], [], lineno=58, col_offset=12)], [], lineno=55, col_offset=8)], [], lineno=54, col_offset=4), If(Call(Name('hasattr', Load(), lineno=61, col_offset=7), [Name('posix', Load(), lineno=61, col_offset=15), Str('setresuid', lineno=61, col_offset=22)], [], None, None, lineno=61, col_offset=7), [FunctionDef('test_setresuid', arguments([Name('self', Param(), lineno=62, col_offset=27)], None, None, []), [Assign([Name('current_user_ids', Store(), lineno=63, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=63, col_offset=31), 'getresuid', Load(), lineno=63, col_offset=31), [], [], None, None, lineno=63, col_offset=31), lineno=63, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=12), 'assertIsNone', Load(), lineno=64, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=64, col_offset=30), 'setresuid', Load(), lineno=64, col_offset=30), [], [], Name('current_user_ids', Load(), lineno=64, col_offset=47), None, lineno=64, col_offset=30)], [], None, None, lineno=64, col_offset=12), lineno=64, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=12), 'assertIsNone', Load(), lineno=66, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=66, col_offset=30), 'setresuid', Load(), lineno=66, col_offset=30), [Num(-1, lineno=66, col_offset=47), Num(-1, lineno=66, col_offset=51), Num(-1, lineno=66, col_offset=55)], [], None, None, lineno=66, col_offset=30)], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=12)], [], lineno=62, col_offset=8), FunctionDef('test_setresuid_exception', arguments([Name('self', Param(), lineno=68, col_offset=37)], None, None, []), [Assign([Name('current_user_ids', Store(), lineno=70, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=70, col_offset=31), 'getresuid', Load(), lineno=70, col_offset=31), [], [], None, None, lineno=70, col_offset=31), lineno=70, col_offset=12), If(Compare(Num(0, lineno=71, col_offset=15), [NotIn()], [Name('current_user_ids', Load(), lineno=71, col_offset=24)], lineno=71, col_offset=15), [Assign([Name('new_user_ids', Store(), lineno=72, col_offset=16)], Tuple([BinOp(Subscript(Name('current_user_ids', Load(), lineno=72, col_offset=32), Index(Num(0, lineno=72, col_offset=49)), Load(), lineno=72, col_offset=32), Add(), Num(1, lineno=72, col_offset=52), lineno=72, col_offset=32), Num(-1, lineno=72, col_offset=56), Num(-1, lineno=72, col_offset=60)], Load(), lineno=72, col_offset=32), lineno=72, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=73, col_offset=16), 'assertRaises', Load(), lineno=73, col_offset=16), [Name('OSError', Load(), lineno=73, col_offset=34), Attribute(Name('posix', Load(), lineno=73, col_offset=43), 'setresuid', Load(), lineno=73, col_offset=43)], [], Name('new_user_ids', Load(), lineno=73, col_offset=61), None, lineno=73, col_offset=16), lineno=73, col_offset=16)], [], lineno=71, col_offset=12)], [], lineno=68, col_offset=8)], [], lineno=61, col_offset=4), If(Call(Name('hasattr', Load(), lineno=75, col_offset=7), [Name('posix', Load(), lineno=75, col_offset=15), Str('setresgid', lineno=75, col_offset=22)], [], None, None, lineno=75, col_offset=7), [FunctionDef('test_setresgid', arguments([Name('self', Param(), lineno=76, col_offset=27)], None, None, []), [Assign([Name('current_group_ids', Store(), lineno=77, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=77, col_offset=32), 'getresgid', Load(), lineno=77, col_offset=32), [], [], None, None, lineno=77, col_offset=32), lineno=77, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), 'assertIsNone', Load(), lineno=78, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=78, col_offset=30), 'setresgid', Load(), lineno=78, col_offset=30), [], [], Name('current_group_ids', Load(), lineno=78, col_offset=47), None, lineno=78, col_offset=30)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=12), 'assertIsNone', Load(), lineno=80, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=80, col_offset=30), 'setresgid', Load(), lineno=80, col_offset=30), [Num(-1, lineno=80, col_offset=47), Num(-1, lineno=80, col_offset=51), Num(-1, lineno=80, col_offset=55)], [], None, None, lineno=80, col_offset=30)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12)], [], lineno=76, col_offset=8), FunctionDef('test_setresgid_exception', arguments([Name('self', Param(), lineno=82, col_offset=37)], None, None, []), [Assign([Name('current_group_ids', Store(), lineno=84, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=84, col_offset=32), 'getresgid', Load(), lineno=84, col_offset=32), [], [], None, None, lineno=84, col_offset=32), lineno=84, col_offset=12), If(Compare(Num(0, lineno=85, col_offset=15), [NotIn()], [Name('current_group_ids', Load(), lineno=85, col_offset=24)], lineno=85, col_offset=15), [Assign([Name('new_group_ids', Store(), lineno=86, col_offset=16)], Tuple([BinOp(Subscript(Name('current_group_ids', Load(), lineno=86, col_offset=33), Index(Num(0, lineno=86, col_offset=51)), Load(), lineno=86, col_offset=33), Add(), Num(1, lineno=86, col_offset=54), lineno=86, col_offset=33), Num(-1, lineno=86, col_offset=58), Num(-1, lineno=86, col_offset=62)], Load(), lineno=86, col_offset=33), lineno=86, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=16), 'assertRaises', Load(), lineno=87, col_offset=16), [Name('OSError', Load(), lineno=87, col_offset=34), Attribute(Name('posix', Load(), lineno=87, col_offset=43), 'setresgid', Load(), lineno=87, col_offset=43)], [], Name('new_group_ids', Load(), lineno=87, col_offset=61), None, lineno=87, col_offset=16), lineno=87, col_offset=16)], [], lineno=85, col_offset=12)], [], lineno=82, col_offset=8)], [], lineno=75, col_offset=4), FunctionDef('test_initgroups', arguments([Name('self', Param(), lineno=91, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=94, col_offset=8), 'assertRaises', Load(), lineno=94, col_offset=8), [Name('TypeError', Load(), lineno=94, col_offset=26), Attribute(Name('posix', Load(), lineno=94, col_offset=37), 'initgroups', Load(), lineno=94, col_offset=37)], [], None, None, lineno=94, col_offset=8), lineno=94, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=95, col_offset=8), 'assertRaises', Load(), lineno=95, col_offset=8), [Name('TypeError', Load(), lineno=95, col_offset=26), Attribute(Name('posix', Load(), lineno=95, col_offset=37), 'initgroups', Load(), lineno=95, col_offset=37), Name('None', Load(), lineno=95, col_offset=55)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=96, col_offset=8), 'assertRaises', Load(), lineno=96, col_offset=8), [Name('TypeError', Load(), lineno=96, col_offset=26), Attribute(Name('posix', Load(), lineno=96, col_offset=37), 'initgroups', Load(), lineno=96, col_offset=37), Num(3, lineno=96, col_offset=55), Str('foo', lineno=96, col_offset=58)], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=97, col_offset=8), 'assertRaises', Load(), lineno=97, col_offset=8), [Name('TypeError', Load(), lineno=97, col_offset=26), Attribute(Name('posix', Load(), lineno=97, col_offset=37), 'initgroups', Load(), lineno=97, col_offset=37), Str('foo', lineno=97, col_offset=55), Num(3, lineno=97, col_offset=62), Call(Name('object', Load(), lineno=97, col_offset=65), [], [], None, None, lineno=97, col_offset=65)], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), If(Compare(Call(Attribute(Name('os', Load(), lineno=101, col_offset=11), 'getuid', Load(), lineno=101, col_offset=11), [], [], None, None, lineno=101, col_offset=11), [NotEq()], [Num(0, lineno=101, col_offset=26)], lineno=101, col_offset=11), [Assign([Name('name', Store(), lineno=102, col_offset=12)], Attribute(Call(Attribute(Name('pwd', Load(), lineno=102, col_offset=19), 'getpwuid', Load(), lineno=102, col_offset=19), [Call(Attribute(Name('posix', Load(), lineno=102, col_offset=32), 'getuid', Load(), lineno=102, col_offset=32), [], [], None, None, lineno=102, col_offset=32)], [], None, None, lineno=102, col_offset=19), 'pw_name', Load(), lineno=102, col_offset=19), lineno=102, col_offset=12), TryExcept([Expr(Call(Attribute(Name('posix', Load(), lineno=104, col_offset=16), 'initgroups', Load(), lineno=104, col_offset=16), [Name('name', Load(), lineno=104, col_offset=33), Num(13, lineno=104, col_offset=39)], [], None, None, lineno=104, col_offset=16), lineno=104, col_offset=16)], [ExceptHandler(Name('OSError', Load(), lineno=105, col_offset=19), Name('e', Store(), lineno=105, col_offset=30), [Expr(Call(Attribute(Name('self', Load(), lineno=106, col_offset=16), 'assertEqual', Load(), lineno=106, col_offset=16), [Attribute(Name('e', Load(), lineno=106, col_offset=33), 'errno', Load(), lineno=106, col_offset=33), Attribute(Name('errno', Load(), lineno=106, col_offset=42), 'EPERM', Load(), lineno=106, col_offset=42)], [], None, None, lineno=106, col_offset=16), lineno=106, col_offset=16)], lineno=105, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=16), 'fail', Load(), lineno=108, col_offset=16), [Str('Expected OSError to be raised by initgroups', lineno=108, col_offset=26)], [], None, None, lineno=108, col_offset=16), lineno=108, col_offset=16)], lineno=103, col_offset=12)], [], lineno=101, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=89, col_offset=5), 'skipUnless', Load(), lineno=89, col_offset=5), [Call(Name('hasattr', Load(), lineno=89, col_offset=25), [Name('posix', Load(), lineno=89, col_offset=33), Str('initgroups', lineno=89, col_offset=40)], [], None, None, lineno=89, col_offset=25), Str('test needs os.initgroups()', lineno=90, col_offset=25)], [], None, None, lineno=89, col_offset=5)], lineno=89, col_offset=4), FunctionDef('test_statvfs', arguments([Name('self', Param(), lineno=110, col_offset=21)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=111, col_offset=11), [Name('posix', Load(), lineno=111, col_offset=19), Str('statvfs', lineno=111, col_offset=26)], [], None, None, lineno=111, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=12), 'assertTrue', Load(), lineno=112, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=112, col_offset=28), 'statvfs', Load(), lineno=112, col_offset=28), [Attribute(Name('os', Load(), lineno=112, col_offset=42), 'curdir', Load(), lineno=112, col_offset=42)], [], None, None, lineno=112, col_offset=28)], [], None, None, lineno=112, col_offset=12), lineno=112, col_offset=12)], [], lineno=111, col_offset=8)], [], lineno=110, col_offset=4), FunctionDef('test_fstatvfs', arguments([Name('self', Param(), lineno=114, col_offset=22)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=115, col_offset=11), [Name('posix', Load(), lineno=115, col_offset=19), Str('fstatvfs', lineno=115, col_offset=26)], [], None, None, lineno=115, col_offset=11), [Assign([Name('fp', Store(), lineno=116, col_offset=12)], Call(Name('open', Load(), lineno=116, col_offset=17), [Attribute(Name('test_support', Load(), lineno=116, col_offset=22), 'TESTFN', Load(), lineno=116, col_offset=22)], [], None, None, lineno=116, col_offset=17), lineno=116, col_offset=12), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=16), 'assertTrue', Load(), lineno=118, col_offset=16), [Call(Attribute(Name('posix', Load(), lineno=118, col_offset=32), 'fstatvfs', Load(), lineno=118, col_offset=32), [Call(Attribute(Name('fp', Load(), lineno=118, col_offset=47), 'fileno', Load(), lineno=118, col_offset=47), [], [], None, None, lineno=118, col_offset=47)], [], None, None, lineno=118, col_offset=32)], [], None, None, lineno=118, col_offset=16), lineno=118, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=120, col_offset=16), 'close', Load(), lineno=120, col_offset=16), [], [], None, None, lineno=120, col_offset=16), lineno=120, col_offset=16)], lineno=117, col_offset=12)], [], lineno=115, col_offset=8)], [], lineno=114, col_offset=4), FunctionDef('test_ftruncate', arguments([Name('self', Param(), lineno=122, col_offset=23)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=123, col_offset=11), [Name('posix', Load(), lineno=123, col_offset=19), Str('ftruncate', lineno=123, col_offset=26)], [], None, None, lineno=123, col_offset=11), [Assign([Name('fp', Store(), lineno=124, col_offset=12)], Call(Name('open', Load(), lineno=124, col_offset=17), [Attribute(Name('test_support', Load(), lineno=124, col_offset=22), 'TESTFN', Load(), lineno=124, col_offset=22), Str('w+', lineno=124, col_offset=43)], [], None, None, lineno=124, col_offset=17), lineno=124, col_offset=12), TryFinally([Expr(Call(Attribute(Name('fp', Load(), lineno=127, col_offset=16), 'write', Load(), lineno=127, col_offset=16), [Str('test', lineno=127, col_offset=25)], [], None, None, lineno=127, col_offset=16), lineno=127, col_offset=16), Expr(Call(Attribute(Name('fp', Load(), lineno=128, col_offset=16), 'flush', Load(), lineno=128, col_offset=16), [], [], None, None, lineno=128, col_offset=16), lineno=128, col_offset=16), Expr(Call(Attribute(Name('posix', Load(), lineno=129, col_offset=16), 'ftruncate', Load(), lineno=129, col_offset=16), [Call(Attribute(Name('fp', Load(), lineno=129, col_offset=32), 'fileno', Load(), lineno=129, col_offset=32), [], [], None, None, lineno=129, col_offset=32), Num(0, lineno=129, col_offset=45)], [], None, None, lineno=129, col_offset=16), lineno=129, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=131, col_offset=16), 'close', Load(), lineno=131, col_offset=16), [], [], None, None, lineno=131, col_offset=16), lineno=131, col_offset=16)], lineno=125, col_offset=12)], [], lineno=123, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('test_dup', arguments([Name('self', Param(), lineno=133, col_offset=17)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=134, col_offset=11), [Name('posix', Load(), lineno=134, col_offset=19), Str('dup', lineno=134, col_offset=26)], [], None, None, lineno=134, col_offset=11), [Assign([Name('fp', Store(), lineno=135, col_offset=12)], Call(Name('open', Load(), lineno=135, col_offset=17), [Attribute(Name('test_support', Load(), lineno=135, col_offset=22), 'TESTFN', Load(), lineno=135, col_offset=22)], [], None, None, lineno=135, col_offset=17), lineno=135, col_offset=12), TryFinally([Assign([Name('fd', Store(), lineno=137, col_offset=16)], Call(Attribute(Name('posix', Load(), lineno=137, col_offset=21), 'dup', Load(), lineno=137, col_offset=21), [Call(Attribute(Name('fp', Load(), lineno=137, col_offset=31), 'fileno', Load(), lineno=137, col_offset=31), [], [], None, None, lineno=137, col_offset=31)], [], None, None, lineno=137, col_offset=21), lineno=137, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=16), 'assertIsInstance', Load(), lineno=138, col_offset=16), [Name('fd', Load(), lineno=138, col_offset=38), Name('int', Load(), lineno=138, col_offset=42)], [], None, None, lineno=138, col_offset=16), lineno=138, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=139, col_offset=16), 'close', Load(), lineno=139, col_offset=16), [Name('fd', Load(), lineno=139, col_offset=25)], [], None, None, lineno=139, col_offset=16), lineno=139, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=141, col_offset=16), 'close', Load(), lineno=141, col_offset=16), [], [], None, None, lineno=141, col_offset=16), lineno=141, col_offset=16)], lineno=136, col_offset=12)], [], lineno=134, col_offset=8)], [], lineno=133, col_offset=4), FunctionDef('test_confstr', arguments([Name('self', Param(), lineno=143, col_offset=21)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=144, col_offset=11), [Name('posix', Load(), lineno=144, col_offset=19), Str('confstr', lineno=144, col_offset=26)], [], None, None, lineno=144, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=12), 'assertRaises', Load(), lineno=145, col_offset=12), [Name('ValueError', Load(), lineno=145, col_offset=30), Attribute(Name('posix', Load(), lineno=145, col_offset=42), 'confstr', Load(), lineno=145, col_offset=42), Str('CS_garbage', lineno=145, col_offset=57)], [], None, None, lineno=145, col_offset=12), lineno=145, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=12), 'assertEqual', Load(), lineno=146, col_offset=12), [Compare(Call(Name('len', Load(), lineno=146, col_offset=29), [Call(Attribute(Name('posix', Load(), lineno=146, col_offset=33), 'confstr', Load(), lineno=146, col_offset=33), [Str('CS_PATH', lineno=146, col_offset=47)], [], None, None, lineno=146, col_offset=33)], [], None, None, lineno=146, col_offset=29), [Gt()], [Num(0, lineno=146, col_offset=61)], lineno=146, col_offset=29), Name('True', Load(), lineno=146, col_offset=64)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=12)], [], lineno=144, col_offset=8)], [], lineno=143, col_offset=4), FunctionDef('test_dup2', arguments([Name('self', Param(), lineno=148, col_offset=18)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=149, col_offset=11), [Name('posix', Load(), lineno=149, col_offset=19), Str('dup2', lineno=149, col_offset=26)], [], None, None, lineno=149, col_offset=11), [Assign([Name('fp1', Store(), lineno=150, col_offset=12)], Call(Name('open', Load(), lineno=150, col_offset=18), [Attribute(Name('test_support', Load(), lineno=150, col_offset=23), 'TESTFN', Load(), lineno=150, col_offset=23)], [], None, None, lineno=150, col_offset=18), lineno=150, col_offset=12), Assign([Name('fp2', Store(), lineno=151, col_offset=12)], Call(Name('open', Load(), lineno=151, col_offset=18), [Attribute(Name('test_support', Load(), lineno=151, col_offset=23), 'TESTFN', Load(), lineno=151, col_offset=23)], [], None, None, lineno=151, col_offset=18), lineno=151, col_offset=12), TryFinally([Expr(Call(Attribute(Name('posix', Load(), lineno=153, col_offset=16), 'dup2', Load(), lineno=153, col_offset=16), [Call(Attribute(Name('fp1', Load(), lineno=153, col_offset=27), 'fileno', Load(), lineno=153, col_offset=27), [], [], None, None, lineno=153, col_offset=27), Call(Attribute(Name('fp2', Load(), lineno=153, col_offset=41), 'fileno', Load(), lineno=153, col_offset=41), [], [], None, None, lineno=153, col_offset=41)], [], None, None, lineno=153, col_offset=16), lineno=153, col_offset=16)], [Expr(Call(Attribute(Name('fp1', Load(), lineno=155, col_offset=16), 'close', Load(), lineno=155, col_offset=16), [], [], None, None, lineno=155, col_offset=16), lineno=155, col_offset=16), Expr(Call(Attribute(Name('fp2', Load(), lineno=156, col_offset=16), 'close', Load(), lineno=156, col_offset=16), [], [], None, None, lineno=156, col_offset=16), lineno=156, col_offset=16)], lineno=152, col_offset=12)], [], lineno=149, col_offset=8)], [], lineno=148, col_offset=4), FunctionDef('fdopen_helper', arguments([Name('self', Param(), lineno=158, col_offset=22)], 'args', None, []), [Assign([Name('fd', Store(), lineno=159, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=159, col_offset=13), 'open', Load(), lineno=159, col_offset=13), [Attribute(Name('test_support', Load(), lineno=159, col_offset=21), 'TESTFN', Load(), lineno=159, col_offset=21), Attribute(Name('os', Load(), lineno=159, col_offset=42), 'O_RDONLY', Load(), lineno=159, col_offset=42)], [], None, None, lineno=159, col_offset=13), lineno=159, col_offset=8), Assign([Name('fp2', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('posix', Load(), lineno=160, col_offset=14), 'fdopen', Load(), lineno=160, col_offset=14), [Name('fd', Load(), lineno=160, col_offset=27)], [], Name('args', Load(), lineno=160, col_offset=32), None, lineno=160, col_offset=14), lineno=160, col_offset=8), Expr(Call(Attribute(Name('fp2', Load(), lineno=161, col_offset=8), 'close', Load(), lineno=161, col_offset=8), [], [], None, None, lineno=161, col_offset=8), lineno=161, col_offset=8)], [], lineno=158, col_offset=4), FunctionDef('test_fdopen', arguments([Name('self', Param(), lineno=163, col_offset=20)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=164, col_offset=11), [Name('posix', Load(), lineno=164, col_offset=19), Str('fdopen', lineno=164, col_offset=26)], [], None, None, lineno=164, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=165, col_offset=12), 'fdopen_helper', Load(), lineno=165, col_offset=12), [], [], None, None, lineno=165, col_offset=12), lineno=165, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=12), 'fdopen_helper', Load(), lineno=166, col_offset=12), [Str('r', lineno=166, col_offset=31)], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=167, col_offset=12), 'fdopen_helper', Load(), lineno=167, col_offset=12), [Str('r', lineno=167, col_offset=31), Num(100, lineno=167, col_offset=36)], [], None, None, lineno=167, col_offset=12), lineno=167, col_offset=12)], [], lineno=164, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('test_osexlock', arguments([Name('self', Param(), lineno=169, col_offset=22)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=170, col_offset=11), [Name('posix', Load(), lineno=170, col_offset=19), Str('O_EXLOCK', lineno=170, col_offset=26)], [], None, None, lineno=170, col_offset=11), [Assign([Name('fd', Store(), lineno=171, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=171, col_offset=17), 'open', Load(), lineno=171, col_offset=17), [Attribute(Name('test_support', Load(), lineno=171, col_offset=25), 'TESTFN', Load(), lineno=171, col_offset=25), BinOp(BinOp(Attribute(Name('os', Load(), lineno=172, col_offset=25), 'O_WRONLY', Load(), lineno=172, col_offset=25), BitOr(), Attribute(Name('os', Load(), lineno=172, col_offset=37), 'O_EXLOCK', Load(), lineno=172, col_offset=37), lineno=172, col_offset=25), BitOr(), Attribute(Name('os', Load(), lineno=172, col_offset=49), 'O_CREAT', Load(), lineno=172, col_offset=49), lineno=172, col_offset=48)], [], None, None, lineno=171, col_offset=17), lineno=171, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=173, col_offset=12), 'assertRaises', Load(), lineno=173, col_offset=12), [Name('OSError', Load(), lineno=173, col_offset=30), Attribute(Name('os', Load(), lineno=173, col_offset=39), 'open', Load(), lineno=173, col_offset=39), Attribute(Name('test_support', Load(), lineno=173, col_offset=48), 'TESTFN', Load(), lineno=173, col_offset=48), BinOp(BinOp(Attribute(Name('os', Load(), lineno=174, col_offset=30), 'O_WRONLY', Load(), lineno=174, col_offset=30), BitOr(), Attribute(Name('os', Load(), lineno=174, col_offset=42), 'O_EXLOCK', Load(), lineno=174, col_offset=42), lineno=174, col_offset=30), BitOr(), Attribute(Name('os', Load(), lineno=174, col_offset=54), 'O_NONBLOCK', Load(), lineno=174, col_offset=54), lineno=174, col_offset=53)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=175, col_offset=12), 'close', Load(), lineno=175, col_offset=12), [Name('fd', Load(), lineno=175, col_offset=21)], [], None, None, lineno=175, col_offset=12), lineno=175, col_offset=12), If(Call(Name('hasattr', Load(), lineno=177, col_offset=15), [Name('posix', Load(), lineno=177, col_offset=23), Str('O_SHLOCK', lineno=177, col_offset=30)], [], None, None, lineno=177, col_offset=15), [Assign([Name('fd', Store(), lineno=178, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=178, col_offset=21), 'open', Load(), lineno=178, col_offset=21), [Attribute(Name('test_support', Load(), lineno=178, col_offset=29), 'TESTFN', Load(), lineno=178, col_offset=29), BinOp(BinOp(Attribute(Name('os', Load(), lineno=179, col_offset=29), 'O_WRONLY', Load(), lineno=179, col_offset=29), BitOr(), Attribute(Name('os', Load(), lineno=179, col_offset=41), 'O_SHLOCK', Load(), lineno=179, col_offset=41), lineno=179, col_offset=29), BitOr(), Attribute(Name('os', Load(), lineno=179, col_offset=53), 'O_CREAT', Load(), lineno=179, col_offset=53), lineno=179, col_offset=52)], [], None, None, lineno=178, col_offset=21), lineno=178, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=180, col_offset=16), 'assertRaises', Load(), lineno=180, col_offset=16), [Name('OSError', Load(), lineno=180, col_offset=34), Attribute(Name('os', Load(), lineno=180, col_offset=43), 'open', Load(), lineno=180, col_offset=43), Attribute(Name('test_support', Load(), lineno=180, col_offset=52), 'TESTFN', Load(), lineno=180, col_offset=52), BinOp(BinOp(Attribute(Name('os', Load(), lineno=181, col_offset=34), 'O_WRONLY', Load(), lineno=181, col_offset=34), BitOr(), Attribute(Name('os', Load(), lineno=181, col_offset=46), 'O_EXLOCK', Load(), lineno=181, col_offset=46), lineno=181, col_offset=34), BitOr(), Attribute(Name('os', Load(), lineno=181, col_offset=58), 'O_NONBLOCK', Load(), lineno=181, col_offset=58), lineno=181, col_offset=57)], [], None, None, lineno=180, col_offset=16), lineno=180, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=182, col_offset=16), 'close', Load(), lineno=182, col_offset=16), [Name('fd', Load(), lineno=182, col_offset=25)], [], None, None, lineno=182, col_offset=16), lineno=182, col_offset=16)], [], lineno=177, col_offset=12)], [], lineno=170, col_offset=8)], [], lineno=169, col_offset=4), FunctionDef('test_osshlock', arguments([Name('self', Param(), lineno=184, col_offset=22)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=185, col_offset=11), [Name('posix', Load(), lineno=185, col_offset=19), Str('O_SHLOCK', lineno=185, col_offset=26)], [], None, None, lineno=185, col_offset=11), [Assign([Name('fd1', Store(), lineno=186, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=186, col_offset=18), 'open', Load(), lineno=186, col_offset=18), [Attribute(Name('test_support', Load(), lineno=186, col_offset=26), 'TESTFN', Load(), lineno=186, col_offset=26), BinOp(BinOp(Attribute(Name('os', Load(), lineno=187, col_offset=25), 'O_WRONLY', Load(), lineno=187, col_offset=25), BitOr(), Attribute(Name('os', Load(), lineno=187, col_offset=37), 'O_SHLOCK', Load(), lineno=187, col_offset=37), lineno=187, col_offset=25), BitOr(), Attribute(Name('os', Load(), lineno=187, col_offset=49), 'O_CREAT', Load(), lineno=187, col_offset=49), lineno=187, col_offset=48)], [], None, None, lineno=186, col_offset=18), lineno=186, col_offset=12), Assign([Name('fd2', Store(), lineno=188, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=188, col_offset=18), 'open', Load(), lineno=188, col_offset=18), [Attribute(Name('test_support', Load(), lineno=188, col_offset=26), 'TESTFN', Load(), lineno=188, col_offset=26), BinOp(BinOp(Attribute(Name('os', Load(), lineno=189, col_offset=26), 'O_WRONLY', Load(), lineno=189, col_offset=26), BitOr(), Attribute(Name('os', Load(), lineno=189, col_offset=38), 'O_SHLOCK', Load(), lineno=189, col_offset=38), lineno=189, col_offset=26), BitOr(), Attribute(Name('os', Load(), lineno=189, col_offset=50), 'O_CREAT', Load(), lineno=189, col_offset=50), lineno=189, col_offset=49)], [], None, None, lineno=188, col_offset=18), lineno=188, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=190, col_offset=12), 'close', Load(), lineno=190, col_offset=12), [Name('fd2', Load(), lineno=190, col_offset=21)], [], None, None, lineno=190, col_offset=12), lineno=190, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=191, col_offset=12), 'close', Load(), lineno=191, col_offset=12), [Name('fd1', Load(), lineno=191, col_offset=21)], [], None, None, lineno=191, col_offset=12), lineno=191, col_offset=12), If(Call(Name('hasattr', Load(), lineno=193, col_offset=15), [Name('posix', Load(), lineno=193, col_offset=23), Str('O_EXLOCK', lineno=193, col_offset=30)], [], None, None, lineno=193, col_offset=15), [Assign([Name('fd', Store(), lineno=194, col_offset=16)], Call(Attribute(Name('os', Load(), lineno=194, col_offset=21), 'open', Load(), lineno=194, col_offset=21), [Attribute(Name('test_support', Load(), lineno=194, col_offset=29), 'TESTFN', Load(), lineno=194, col_offset=29), BinOp(BinOp(Attribute(Name('os', Load(), lineno=195, col_offset=29), 'O_WRONLY', Load(), lineno=195, col_offset=29), BitOr(), Attribute(Name('os', Load(), lineno=195, col_offset=41), 'O_SHLOCK', Load(), lineno=195, col_offset=41), lineno=195, col_offset=29), BitOr(), Attribute(Name('os', Load(), lineno=195, col_offset=53), 'O_CREAT', Load(), lineno=195, col_offset=53), lineno=195, col_offset=52)], [], None, None, lineno=194, col_offset=21), lineno=194, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=196, col_offset=16), 'assertRaises', Load(), lineno=196, col_offset=16), [Name('OSError', Load(), lineno=196, col_offset=34), Attribute(Name('os', Load(), lineno=196, col_offset=43), 'open', Load(), lineno=196, col_offset=43), Attribute(Name('test_support', Load(), lineno=196, col_offset=52), 'TESTFN', Load(), lineno=196, col_offset=52), BinOp(BinOp(Attribute(Name('os', Load(), lineno=197, col_offset=34), 'O_RDONLY', Load(), lineno=197, col_offset=34), BitOr(), Attribute(Name('os', Load(), lineno=197, col_offset=46), 'O_EXLOCK', Load(), lineno=197, col_offset=46), lineno=197, col_offset=34), BitOr(), Attribute(Name('os', Load(), lineno=197, col_offset=58), 'O_NONBLOCK', Load(), lineno=197, col_offset=58), lineno=197, col_offset=57)], [], None, None, lineno=196, col_offset=16), lineno=196, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=198, col_offset=16), 'close', Load(), lineno=198, col_offset=16), [Name('fd', Load(), lineno=198, col_offset=25)], [], None, None, lineno=198, col_offset=16), lineno=198, col_offset=16)], [], lineno=193, col_offset=12)], [], lineno=185, col_offset=8)], [], lineno=184, col_offset=4), FunctionDef('test_fstat', arguments([Name('self', Param(), lineno=200, col_offset=19)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=201, col_offset=11), [Name('posix', Load(), lineno=201, col_offset=19), Str('fstat', lineno=201, col_offset=26)], [], None, None, lineno=201, col_offset=11), [Assign([Name('fp', Store(), lineno=202, col_offset=12)], Call(Name('open', Load(), lineno=202, col_offset=17), [Attribute(Name('test_support', Load(), lineno=202, col_offset=22), 'TESTFN', Load(), lineno=202, col_offset=22)], [], None, None, lineno=202, col_offset=17), lineno=202, col_offset=12), TryFinally([Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=16), 'assertTrue', Load(), lineno=204, col_offset=16), [Call(Attribute(Name('posix', Load(), lineno=204, col_offset=32), 'fstat', Load(), lineno=204, col_offset=32), [Call(Attribute(Name('fp', Load(), lineno=204, col_offset=44), 'fileno', Load(), lineno=204, col_offset=44), [], [], None, None, lineno=204, col_offset=44)], [], None, None, lineno=204, col_offset=32)], [], None, None, lineno=204, col_offset=16), lineno=204, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=206, col_offset=16), 'close', Load(), lineno=206, col_offset=16), [], [], None, None, lineno=206, col_offset=16), lineno=206, col_offset=16)], lineno=203, col_offset=12)], [], lineno=201, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_stat', arguments([Name('self', Param(), lineno=208, col_offset=18)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=209, col_offset=11), [Name('posix', Load(), lineno=209, col_offset=19), Str('stat', lineno=209, col_offset=26)], [], None, None, lineno=209, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=12), 'assertTrue', Load(), lineno=210, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=210, col_offset=28), 'stat', Load(), lineno=210, col_offset=28), [Attribute(Name('test_support', Load(), lineno=210, col_offset=39), 'TESTFN', Load(), lineno=210, col_offset=39)], [], None, None, lineno=210, col_offset=28)], [], None, None, lineno=210, col_offset=12), lineno=210, col_offset=12)], [], lineno=209, col_offset=8)], [], lineno=208, col_offset=4), FunctionDef('_test_all_chown_common', arguments([Name('self', Param(), lineno=212, col_offset=31), Name('chown_func', Param(), lineno=212, col_offset=37), Name('first_param', Param(), lineno=212, col_offset=49)], None, None, []), [Expr(Str('Common code for chown, fchown and lchown tests.', lineno=213, col_offset=8), lineno=213, col_offset=8), If(Compare(Call(Attribute(Name('os', Load(), lineno=214, col_offset=11), 'getuid', Load(), lineno=214, col_offset=11), [], [], None, None, lineno=214, col_offset=11), [Eq()], [Num(0, lineno=214, col_offset=26)], lineno=214, col_offset=11), [TryExcept([Assign([Name('ent', Store(), lineno=221, col_offset=16)], Call(Attribute(Name('pwd', Load(), lineno=221, col_offset=22), 'getpwnam', Load(), lineno=221, col_offset=22), [Str('nfsnobody', lineno=221, col_offset=35)], [], None, None, lineno=221, col_offset=22), lineno=221, col_offset=16), Expr(Call(Name('chown_func', Load(), lineno=222, col_offset=16), [Name('first_param', Load(), lineno=222, col_offset=27), Attribute(Name('ent', Load(), lineno=222, col_offset=40), 'pw_uid', Load(), lineno=222, col_offset=40), Attribute(Name('ent', Load(), lineno=222, col_offset=52), 'pw_gid', Load(), lineno=222, col_offset=52)], [], None, None, lineno=222, col_offset=16), lineno=222, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=223, col_offset=19), None, [Pass( lineno=224, col_offset=16)], lineno=223, col_offset=12)], [], lineno=215, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=227, col_offset=12), 'assertRaises', Load(), lineno=227, col_offset=12), [Name('OSError', Load(), lineno=227, col_offset=30), Name('chown_func', Load(), lineno=227, col_offset=39), Name('first_param', Load(), lineno=228, col_offset=30), Num(0, lineno=228, col_offset=43), Num(0, lineno=228, col_offset=46)], [], None, None, lineno=227, col_offset=12), lineno=227, col_offset=12)], lineno=214, col_offset=8), Expr(Call(Name('chown_func', Load(), lineno=231, col_offset=8), [Name('first_param', Load(), lineno=231, col_offset=19), Call(Attribute(Name('os', Load(), lineno=231, col_offset=32), 'getuid', Load(), lineno=231, col_offset=32), [], [], None, None, lineno=231, col_offset=32), Call(Attribute(Name('os', Load(), lineno=231, col_offset=45), 'getgid', Load(), lineno=231, col_offset=45), [], [], None, None, lineno=231, col_offset=45)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8)], [], lineno=212, col_offset=4), FunctionDef('test_chown', arguments([Name('self', Param(), lineno=234, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=236, col_offset=8), 'unlink', Load(), lineno=236, col_offset=8), [Attribute(Name('test_support', Load(), lineno=236, col_offset=18), 'TESTFN', Load(), lineno=236, col_offset=18)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Name('OSError', Load(), lineno=237, col_offset=26), Attribute(Name('posix', Load(), lineno=237, col_offset=35), 'chown', Load(), lineno=237, col_offset=35), Attribute(Name('test_support', Load(), lineno=237, col_offset=48), 'TESTFN', Load(), lineno=237, col_offset=48), Num(-1, lineno=237, col_offset=70), Num(-1, lineno=237, col_offset=74)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Call(Name('open', Load(), lineno=240, col_offset=8), [Attribute(Name('test_support', Load(), lineno=240, col_offset=13), 'TESTFN', Load(), lineno=240, col_offset=13), Str('w', lineno=240, col_offset=34)], [], None, None, lineno=240, col_offset=8), 'close', Load(), lineno=240, col_offset=8), [], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), '_test_all_chown_common', Load(), lineno=241, col_offset=8), [Attribute(Name('posix', Load(), lineno=241, col_offset=36), 'chown', Load(), lineno=241, col_offset=36), Attribute(Name('test_support', Load(), lineno=241, col_offset=49), 'TESTFN', Load(), lineno=241, col_offset=49)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=233, col_offset=5), 'skipUnless', Load(), lineno=233, col_offset=5), [Call(Name('hasattr', Load(), lineno=233, col_offset=25), [Name('posix', Load(), lineno=233, col_offset=33), Str('chown', lineno=233, col_offset=40)], [], None, None, lineno=233, col_offset=25), Str('test needs os.chown()', lineno=233, col_offset=50)], [], None, None, lineno=233, col_offset=5)], lineno=233, col_offset=4), FunctionDef('test_fchown', arguments([Name('self', Param(), lineno=244, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=245, col_offset=8), 'unlink', Load(), lineno=245, col_offset=8), [Attribute(Name('test_support', Load(), lineno=245, col_offset=18), 'TESTFN', Load(), lineno=245, col_offset=18)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Assign([Name('test_file', Store(), lineno=248, col_offset=8)], Call(Name('open', Load(), lineno=248, col_offset=20), [Attribute(Name('test_support', Load(), lineno=248, col_offset=25), 'TESTFN', Load(), lineno=248, col_offset=25), Str('w', lineno=248, col_offset=46)], [], None, None, lineno=248, col_offset=20), lineno=248, col_offset=8), TryFinally([Assign([Name('fd', Store(), lineno=250, col_offset=12)], Call(Attribute(Name('test_file', Load(), lineno=250, col_offset=17), 'fileno', Load(), lineno=250, col_offset=17), [], [], None, None, lineno=250, col_offset=17), lineno=250, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=12), '_test_all_chown_common', Load(), lineno=251, col_offset=12), [Attribute(Name('posix', Load(), lineno=251, col_offset=40), 'fchown', Load(), lineno=251, col_offset=40), Name('fd', Load(), lineno=251, col_offset=54)], [], None, None, lineno=251, col_offset=12), lineno=251, col_offset=12)], [Expr(Call(Attribute(Name('test_file', Load(), lineno=253, col_offset=12), 'close', Load(), lineno=253, col_offset=12), [], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=12)], lineno=249, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=243, col_offset=5), 'skipUnless', Load(), lineno=243, col_offset=5), [Call(Name('hasattr', Load(), lineno=243, col_offset=25), [Name('posix', Load(), lineno=243, col_offset=33), Str('fchown', lineno=243, col_offset=40)], [], None, None, lineno=243, col_offset=25), Str('test needs os.fchown()', lineno=243, col_offset=51)], [], None, None, lineno=243, col_offset=5)], lineno=243, col_offset=4), FunctionDef('test_lchown', arguments([Name('self', Param(), lineno=256, col_offset=20)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=257, col_offset=8), 'unlink', Load(), lineno=257, col_offset=8), [Attribute(Name('test_support', Load(), lineno=257, col_offset=18), 'TESTFN', Load(), lineno=257, col_offset=18)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Attribute(Name('os', Load(), lineno=259, col_offset=8), 'symlink', Load(), lineno=259, col_offset=8), [Str('/tmp/dummy-symlink-target', lineno=259, col_offset=19), Attribute(Name('test_support', Load(), lineno=259, col_offset=48), 'TESTFN', Load(), lineno=259, col_offset=48)], [], None, None, lineno=259, col_offset=8), lineno=259, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=260, col_offset=8), '_test_all_chown_common', Load(), lineno=260, col_offset=8), [Attribute(Name('posix', Load(), lineno=260, col_offset=36), 'lchown', Load(), lineno=260, col_offset=36), Attribute(Name('test_support', Load(), lineno=260, col_offset=50), 'TESTFN', Load(), lineno=260, col_offset=50)], [], None, None, lineno=260, col_offset=8), lineno=260, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=255, col_offset=5), 'skipUnless', Load(), lineno=255, col_offset=5), [Call(Name('hasattr', Load(), lineno=255, col_offset=25), [Name('posix', Load(), lineno=255, col_offset=33), Str('lchown', lineno=255, col_offset=40)], [], None, None, lineno=255, col_offset=25), Str('test needs os.lchown()', lineno=255, col_offset=51)], [], None, None, lineno=255, col_offset=5)], lineno=255, col_offset=4), FunctionDef('test_chdir', arguments([Name('self', Param(), lineno=262, col_offset=19)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=263, col_offset=11), [Name('posix', Load(), lineno=263, col_offset=19), Str('chdir', lineno=263, col_offset=26)], [], None, None, lineno=263, col_offset=11), [Expr(Call(Attribute(Name('posix', Load(), lineno=264, col_offset=12), 'chdir', Load(), lineno=264, col_offset=12), [Attribute(Name('os', Load(), lineno=264, col_offset=24), 'curdir', Load(), lineno=264, col_offset=24)], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=265, col_offset=12), 'assertRaises', Load(), lineno=265, col_offset=12), [Name('OSError', Load(), lineno=265, col_offset=30), Attribute(Name('posix', Load(), lineno=265, col_offset=39), 'chdir', Load(), lineno=265, col_offset=39), Attribute(Name('test_support', Load(), lineno=265, col_offset=52), 'TESTFN', Load(), lineno=265, col_offset=52)], [], None, None, lineno=265, col_offset=12), lineno=265, col_offset=12)], [], lineno=263, col_offset=8)], [], lineno=262, col_offset=4), FunctionDef('test_lsdir', arguments([Name('self', Param(), lineno=267, col_offset=19)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=268, col_offset=11), [Name('posix', Load(), lineno=268, col_offset=19), Str('lsdir', lineno=268, col_offset=26)], [], None, None, lineno=268, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=12), 'assertIn', Load(), lineno=269, col_offset=12), [Attribute(Name('test_support', Load(), lineno=269, col_offset=26), 'TESTFN', Load(), lineno=269, col_offset=26), Call(Attribute(Name('posix', Load(), lineno=269, col_offset=47), 'lsdir', Load(), lineno=269, col_offset=47), [Attribute(Name('os', Load(), lineno=269, col_offset=59), 'curdir', Load(), lineno=269, col_offset=59)], [], None, None, lineno=269, col_offset=47)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=12)], [], lineno=268, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_access', arguments([Name('self', Param(), lineno=271, col_offset=20)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=272, col_offset=11), [Name('posix', Load(), lineno=272, col_offset=19), Str('access', lineno=272, col_offset=26)], [], None, None, lineno=272, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=12), 'assertTrue', Load(), lineno=273, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=273, col_offset=28), 'access', Load(), lineno=273, col_offset=28), [Attribute(Name('test_support', Load(), lineno=273, col_offset=41), 'TESTFN', Load(), lineno=273, col_offset=41), Attribute(Name('os', Load(), lineno=273, col_offset=62), 'R_OK', Load(), lineno=273, col_offset=62)], [], None, None, lineno=273, col_offset=28)], [], None, None, lineno=273, col_offset=12), lineno=273, col_offset=12)], [], lineno=272, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('test_umask', arguments([Name('self', Param(), lineno=275, col_offset=19)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=276, col_offset=11), [Name('posix', Load(), lineno=276, col_offset=19), Str('umask', lineno=276, col_offset=26)], [], None, None, lineno=276, col_offset=11), [Assign([Name('old_mask', Store(), lineno=277, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=277, col_offset=23), 'umask', Load(), lineno=277, col_offset=23), [Num(0, lineno=277, col_offset=35)], [], None, None, lineno=277, col_offset=23), lineno=277, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=12), 'assertIsInstance', Load(), lineno=278, col_offset=12), [Name('old_mask', Load(), lineno=278, col_offset=34), Name('int', Load(), lineno=278, col_offset=44)], [], None, None, lineno=278, col_offset=12), lineno=278, col_offset=12), Expr(Call(Attribute(Name('posix', Load(), lineno=279, col_offset=12), 'umask', Load(), lineno=279, col_offset=12), [Name('old_mask', Load(), lineno=279, col_offset=24)], [], None, None, lineno=279, col_offset=12), lineno=279, col_offset=12)], [], lineno=276, col_offset=8)], [], lineno=275, col_offset=4), FunctionDef('test_strerror', arguments([Name('self', Param(), lineno=281, col_offset=22)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=282, col_offset=11), [Name('posix', Load(), lineno=282, col_offset=19), Str('strerror', lineno=282, col_offset=26)], [], None, None, lineno=282, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=12), 'assertTrue', Load(), lineno=283, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=283, col_offset=28), 'strerror', Load(), lineno=283, col_offset=28), [Num(0, lineno=283, col_offset=43)], [], None, None, lineno=283, col_offset=28)], [], None, None, lineno=283, col_offset=12), lineno=283, col_offset=12)], [], lineno=282, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('test_pipe', arguments([Name('self', Param(), lineno=285, col_offset=18)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=286, col_offset=11), [Name('posix', Load(), lineno=286, col_offset=19), Str('pipe', lineno=286, col_offset=26)], [], None, None, lineno=286, col_offset=11), [Assign([Tuple([Name('reader', Store(), lineno=287, col_offset=12), Name('writer', Store(), lineno=287, col_offset=20)], Store(), lineno=287, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=287, col_offset=29), 'pipe', Load(), lineno=287, col_offset=29), [], [], None, None, lineno=287, col_offset=29), lineno=287, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=288, col_offset=12), 'close', Load(), lineno=288, col_offset=12), [Name('reader', Load(), lineno=288, col_offset=21)], [], None, None, lineno=288, col_offset=12), lineno=288, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=289, col_offset=12), 'close', Load(), lineno=289, col_offset=12), [Name('writer', Load(), lineno=289, col_offset=21)], [], None, None, lineno=289, col_offset=12), lineno=289, col_offset=12)], [], lineno=286, col_offset=8)], [], lineno=285, col_offset=4), FunctionDef('test_tempnam', arguments([Name('self', Param(), lineno=291, col_offset=21)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=292, col_offset=11), [Name('posix', Load(), lineno=292, col_offset=19), Str('tempnam', lineno=292, col_offset=26)], [], None, None, lineno=292, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=293, col_offset=12), 'assertTrue', Load(), lineno=293, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=293, col_offset=28), 'tempnam', Load(), lineno=293, col_offset=28), [], [], None, None, lineno=293, col_offset=28)], [], None, None, lineno=293, col_offset=12), lineno=293, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=294, col_offset=12), 'assertTrue', Load(), lineno=294, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=294, col_offset=28), 'tempnam', Load(), lineno=294, col_offset=28), [Attribute(Name('os', Load(), lineno=294, col_offset=42), 'curdir', Load(), lineno=294, col_offset=42)], [], None, None, lineno=294, col_offset=28)], [], None, None, lineno=294, col_offset=12), lineno=294, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=295, col_offset=12), 'assertTrue', Load(), lineno=295, col_offset=12), [Call(Attribute(Name('posix', Load(), lineno=295, col_offset=28), 'tempnam', Load(), lineno=295, col_offset=28), [Attribute(Name('os', Load(), lineno=295, col_offset=42), 'curdir', Load(), lineno=295, col_offset=42), Str('blah', lineno=295, col_offset=53)], [], None, None, lineno=295, col_offset=28)], [], None, None, lineno=295, col_offset=12), lineno=295, col_offset=12)], [], lineno=292, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('test_tmpfile', arguments([Name('self', Param(), lineno=297, col_offset=21)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=298, col_offset=11), [Name('posix', Load(), lineno=298, col_offset=19), Str('tmpfile', lineno=298, col_offset=26)], [], None, None, lineno=298, col_offset=11), [Assign([Name('fp', Store(), lineno=299, col_offset=12)], Call(Attribute(Name('posix', Load(), lineno=299, col_offset=17), 'tmpfile', Load(), lineno=299, col_offset=17), [], [], None, None, lineno=299, col_offset=17), lineno=299, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=300, col_offset=12), 'close', Load(), lineno=300, col_offset=12), [], [], None, None, lineno=300, col_offset=12), lineno=300, col_offset=12)], [], lineno=298, col_offset=8)], [], lineno=297, col_offset=4), FunctionDef('test_utime', arguments([Name('self', Param(), lineno=302, col_offset=19)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=303, col_offset=11), [Name('posix', Load(), lineno=303, col_offset=19), Str('utime', lineno=303, col_offset=26)], [], None, None, lineno=303, col_offset=11), [Assign([Name('now', Store(), lineno=304, col_offset=12)], Call(Attribute(Name('time', Load(), lineno=304, col_offset=18), 'time', Load(), lineno=304, col_offset=18), [], [], None, None, lineno=304, col_offset=18), lineno=304, col_offset=12), Expr(Call(Attribute(Name('posix', Load(), lineno=305, col_offset=12), 'utime', Load(), lineno=305, col_offset=12), [Attribute(Name('test_support', Load(), lineno=305, col_offset=24), 'TESTFN', Load(), lineno=305, col_offset=24), Name('None', Load(), lineno=305, col_offset=45)], [], None, None, lineno=305, col_offset=12), lineno=305, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=306, col_offset=12), 'assertRaises', Load(), lineno=306, col_offset=12), [Name('TypeError', Load(), lineno=306, col_offset=30), Attribute(Name('posix', Load(), lineno=306, col_offset=41), 'utime', Load(), lineno=306, col_offset=41), Attribute(Name('test_support', Load(), lineno=306, col_offset=54), 'TESTFN', Load(), lineno=306, col_offset=54), Tuple([Name('None', Load(), lineno=306, col_offset=76), Name('None', Load(), lineno=306, col_offset=82)], Load(), lineno=306, col_offset=76)], [], None, None, lineno=306, col_offset=12), lineno=306, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=307, col_offset=12), 'assertRaises', Load(), lineno=307, col_offset=12), [Name('TypeError', Load(), lineno=307, col_offset=30), Attribute(Name('posix', Load(), lineno=307, col_offset=41), 'utime', Load(), lineno=307, col_offset=41), Attribute(Name('test_support', Load(), lineno=307, col_offset=54), 'TESTFN', Load(), lineno=307, col_offset=54), Tuple([Name('now', Load(), lineno=307, col_offset=76), Name('None', Load(), lineno=307, col_offset=81)], Load(), lineno=307, col_offset=76)], [], None, None, lineno=307, col_offset=12), lineno=307, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=12), 'assertRaises', Load(), lineno=308, col_offset=12), [Name('TypeError', Load(), lineno=308, col_offset=30), Attribute(Name('posix', Load(), lineno=308, col_offset=41), 'utime', Load(), lineno=308, col_offset=41), Attribute(Name('test_support', Load(), lineno=308, col_offset=54), 'TESTFN', Load(), lineno=308, col_offset=54), Tuple([Name('None', Load(), lineno=308, col_offset=76), Name('now', Load(), lineno=308, col_offset=82)], Load(), lineno=308, col_offset=76)], [], None, None, lineno=308, col_offset=12), lineno=308, col_offset=12), Expr(Call(Attribute(Name('posix', Load(), lineno=309, col_offset=12), 'utime', Load(), lineno=309, col_offset=12), [Attribute(Name('test_support', Load(), lineno=309, col_offset=24), 'TESTFN', Load(), lineno=309, col_offset=24), Tuple([Call(Name('int', Load(), lineno=309, col_offset=46), [Name('now', Load(), lineno=309, col_offset=50)], [], None, None, lineno=309, col_offset=46), Call(Name('int', Load(), lineno=309, col_offset=56), [Name('now', Load(), lineno=309, col_offset=60)], [], None, None, lineno=309, col_offset=56)], Load(), lineno=309, col_offset=46)], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12), Expr(Call(Attribute(Name('posix', Load(), lineno=310, col_offset=12), 'utime', Load(), lineno=310, col_offset=12), [Attribute(Name('test_support', Load(), lineno=310, col_offset=24), 'TESTFN', Load(), lineno=310, col_offset=24), Tuple([Name('now', Load(), lineno=310, col_offset=46), Name('now', Load(), lineno=310, col_offset=51)], Load(), lineno=310, col_offset=46)], [], None, None, lineno=310, col_offset=12), lineno=310, col_offset=12)], [], lineno=303, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('test_chflags', arguments([Name('self', Param(), lineno=312, col_offset=21)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=313, col_offset=11), [Name('posix', Load(), lineno=313, col_offset=19), Str('chflags', lineno=313, col_offset=26)], [], None, None, lineno=313, col_offset=11), [Assign([Name('st', Store(), lineno=314, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=314, col_offset=17), 'stat', Load(), lineno=314, col_offset=17), [Attribute(Name('test_support', Load(), lineno=314, col_offset=25), 'TESTFN', Load(), lineno=314, col_offset=25)], [], None, None, lineno=314, col_offset=17), lineno=314, col_offset=12), If(Call(Name('hasattr', Load(), lineno=315, col_offset=15), [Name('st', Load(), lineno=315, col_offset=23), Str('st_flags', lineno=315, col_offset=27)], [], None, None, lineno=315, col_offset=15), [Expr(Call(Attribute(Name('posix', Load(), lineno=316, col_offset=16), 'chflags', Load(), lineno=316, col_offset=16), [Attribute(Name('test_support', Load(), lineno=316, col_offset=30), 'TESTFN', Load(), lineno=316, col_offset=30), Attribute(Name('st', Load(), lineno=316, col_offset=51), 'st_flags', Load(), lineno=316, col_offset=51)], [], None, None, lineno=316, col_offset=16), lineno=316, col_offset=16)], [], lineno=315, col_offset=12)], [], lineno=313, col_offset=8)], [], lineno=312, col_offset=4), FunctionDef('test_lchflags', arguments([Name('self', Param(), lineno=318, col_offset=22)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=319, col_offset=11), [Name('posix', Load(), lineno=319, col_offset=19), Str('lchflags', lineno=319, col_offset=26)], [], None, None, lineno=319, col_offset=11), [Assign([Name('st', Store(), lineno=320, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=320, col_offset=17), 'stat', Load(), lineno=320, col_offset=17), [Attribute(Name('test_support', Load(), lineno=320, col_offset=25), 'TESTFN', Load(), lineno=320, col_offset=25)], [], None, None, lineno=320, col_offset=17), lineno=320, col_offset=12), If(Call(Name('hasattr', Load(), lineno=321, col_offset=15), [Name('st', Load(), lineno=321, col_offset=23), Str('st_flags', lineno=321, col_offset=27)], [], None, None, lineno=321, col_offset=15), [Expr(Call(Attribute(Name('posix', Load(), lineno=322, col_offset=16), 'lchflags', Load(), lineno=322, col_offset=16), [Attribute(Name('test_support', Load(), lineno=322, col_offset=31), 'TESTFN', Load(), lineno=322, col_offset=31), Attribute(Name('st', Load(), lineno=322, col_offset=52), 'st_flags', Load(), lineno=322, col_offset=52)], [], None, None, lineno=322, col_offset=16), lineno=322, col_offset=16)], [], lineno=321, col_offset=12)], [], lineno=319, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('test_getcwd_long_pathnames', arguments([Name('self', Param(), lineno=324, col_offset=35)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=325, col_offset=11), [Name('posix', Load(), lineno=325, col_offset=19), Str('getcwd', lineno=325, col_offset=26)], [], None, None, lineno=325, col_offset=11), [Assign([Name('dirname', Store(), lineno=326, col_offset=12)], Str('getcwd-test-directory-0123456789abcdef-01234567890abcdef', lineno=326, col_offset=22), lineno=326, col_offset=12), Assign([Name('curdir', Store(), lineno=327, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=327, col_offset=21), 'getcwd', Load(), lineno=327, col_offset=21), [], [], None, None, lineno=327, col_offset=21), lineno=327, col_offset=12), Assign([Name('base_path', Store(), lineno=328, col_offset=12)], BinOp(Call(Attribute(Attribute(Name('os', Load(), lineno=328, col_offset=24), 'path', Load(), lineno=328, col_offset=24), 'abspath', Load(), lineno=328, col_offset=24), [Attribute(Name('test_support', Load(), lineno=328, col_offset=40), 'TESTFN', Load(), lineno=328, col_offset=40)], [], None, None, lineno=328, col_offset=24), Add(), Str('.getcwd', lineno=328, col_offset=63), lineno=328, col_offset=24), lineno=328, col_offset=12), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=331, col_offset=16), 'mkdir', Load(), lineno=331, col_offset=16), [Name('base_path', Load(), lineno=331, col_offset=25)], [], None, None, lineno=331, col_offset=16), lineno=331, col_offset=16), Expr(Call(Attribute(Name('os', Load(), lineno=332, col_offset=16), 'chdir', Load(), lineno=332, col_offset=16), [Name('base_path', Load(), lineno=332, col_offset=25)], [], None, None, lineno=332, col_offset=16), lineno=332, col_offset=16)], [ExceptHandler(None, None, [Return(None, lineno=338, col_offset=16)], lineno=333, col_offset=12)], [], lineno=330, col_offset=12), TryFinally([FunctionDef('_create_and_do_getcwd', arguments([Name('dirname', Param(), lineno=341, col_offset=42), Name('current_path_length', Param(), lineno=341, col_offset=51)], None, None, [Num(0, lineno=341, col_offset=73)]), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=343, col_offset=24), 'mkdir', Load(), lineno=343, col_offset=24), [Name('dirname', Load(), lineno=343, col_offset=33)], [], None, None, lineno=343, col_offset=24), lineno=343, col_offset=24)], [ExceptHandler(None, None, [Raise(Attribute(Name('unittest', Load(), lineno=345, col_offset=30), 'SkipTest', Load(), lineno=345, col_offset=30), Str('mkdir cannot create directory sufficiently deep for getcwd test', lineno=345, col_offset=49), None, lineno=345, col_offset=24)], lineno=344, col_offset=20)], [], lineno=342, col_offset=20), Expr(Call(Attribute(Name('os', Load(), lineno=347, col_offset=20), 'chdir', Load(), lineno=347, col_offset=20), [Name('dirname', Load(), lineno=347, col_offset=29)], [], None, None, lineno=347, col_offset=20), lineno=347, col_offset=20), TryFinally([TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=349, col_offset=24), 'getcwd', Load(), lineno=349, col_offset=24), [], [], None, None, lineno=349, col_offset=24), lineno=349, col_offset=24), If(Compare(Name('current_path_length', Load(), lineno=350, col_offset=27), [Lt()], [Num(4099, lineno=350, col_offset=49)], lineno=350, col_offset=27), [Expr(Call(Name('_create_and_do_getcwd', Load(), lineno=351, col_offset=28), [Name('dirname', Load(), lineno=351, col_offset=50), BinOp(BinOp(Name('current_path_length', Load(), lineno=351, col_offset=59), Add(), Call(Name('len', Load(), lineno=351, col_offset=81), [Name('dirname', Load(), lineno=351, col_offset=85)], [], None, None, lineno=351, col_offset=81), lineno=351, col_offset=59), Add(), Num(1, lineno=351, col_offset=96), lineno=351, col_offset=94)], [], None, None, lineno=351, col_offset=28), lineno=351, col_offset=28)], [], lineno=350, col_offset=24)], [ExceptHandler(Name('OSError', Load(), lineno=352, col_offset=27), Name('e', Store(), lineno=352, col_offset=38), [Assign([Name('expected_errno', Store(), lineno=353, col_offset=24)], Attribute(Name('errno', Load(), lineno=353, col_offset=41), 'ENAMETOOLONG', Load(), lineno=353, col_offset=41), lineno=353, col_offset=24), If(BoolOp(Or(), [Compare(Str('sunos', lineno=354, col_offset=27), [In()], [Attribute(Name('sys', Load(), lineno=354, col_offset=38), 'platform', Load(), lineno=354, col_offset=38)], lineno=354, col_offset=27), Compare(Str('openbsd', lineno=354, col_offset=54), [In()], [Attribute(Name('sys', Load(), lineno=354, col_offset=67), 'platform', Load(), lineno=354, col_offset=67)], lineno=354, col_offset=54)], lineno=354, col_offset=27), [Assign([Name('expected_errno', Store(), lineno=355, col_offset=28)], Attribute(Name('errno', Load(), lineno=355, col_offset=45), 'ERANGE', Load(), lineno=355, col_offset=45), lineno=355, col_offset=28)], [], lineno=354, col_offset=24), Expr(Call(Attribute(Name('self', Load(), lineno=356, col_offset=24), 'assertEqual', Load(), lineno=356, col_offset=24), [Attribute(Name('e', Load(), lineno=356, col_offset=41), 'errno', Load(), lineno=356, col_offset=41), Name('expected_errno', Load(), lineno=356, col_offset=50)], [], None, None, lineno=356, col_offset=24), lineno=356, col_offset=24)], lineno=352, col_offset=20)], [], lineno=348, col_offset=20)], [Expr(Call(Attribute(Name('os', Load(), lineno=358, col_offset=24), 'chdir', Load(), lineno=358, col_offset=24), [Str('..', lineno=358, col_offset=33)], [], None, None, lineno=358, col_offset=24), lineno=358, col_offset=24), Expr(Call(Attribute(Name('os', Load(), lineno=359, col_offset=24), 'rmdir', Load(), lineno=359, col_offset=24), [Name('dirname', Load(), lineno=359, col_offset=33)], [], None, None, lineno=359, col_offset=24), lineno=359, col_offset=24)], lineno=348, col_offset=20)], [], lineno=341, col_offset=16), Expr(Call(Name('_create_and_do_getcwd', Load(), lineno=361, col_offset=16), [Name('dirname', Load(), lineno=361, col_offset=38)], [], None, None, lineno=361, col_offset=16), lineno=361, col_offset=16)], [Expr(Call(Attribute(Name('os', Load(), lineno=364, col_offset=16), 'chdir', Load(), lineno=364, col_offset=16), [Name('curdir', Load(), lineno=364, col_offset=25)], [], None, None, lineno=364, col_offset=16), lineno=364, col_offset=16), Expr(Call(Attribute(Name('shutil', Load(), lineno=365, col_offset=16), 'rmtree', Load(), lineno=365, col_offset=16), [Name('base_path', Load(), lineno=365, col_offset=30)], [], None, None, lineno=365, col_offset=16), lineno=365, col_offset=16)], lineno=340, col_offset=12)], [], lineno=325, col_offset=8)], [], lineno=324, col_offset=4), FunctionDef('test_getgroups', arguments([Name('self', Param(), lineno=367, col_offset=23)], None, None, []), [With(Call(Attribute(Name('os', Load(), lineno=368, col_offset=13), 'popen', Load(), lineno=368, col_offset=13), [Str('id -G', lineno=368, col_offset=22)], [], None, None, lineno=368, col_offset=13), Name('idg', Store(), lineno=368, col_offset=34), [Assign([Name('groups', Store(), lineno=369, col_offset=12)], Call(Attribute(Call(Attribute(Name('idg', Load(), lineno=369, col_offset=21), 'read', Load(), lineno=369, col_offset=21), [], [], None, None, lineno=369, col_offset=21), 'strip', Load(), lineno=369, col_offset=21), [], [], None, None, lineno=369, col_offset=21), lineno=369, col_offset=12)], lineno=368, col_offset=13), If(UnaryOp(Not(), Name('groups', Load(), lineno=371, col_offset=15), lineno=371, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=372, col_offset=18), 'SkipTest', Load(), lineno=372, col_offset=18), [Str("need working 'id -G'", lineno=372, col_offset=36)], [], None, None, lineno=372, col_offset=18), None, None, lineno=372, col_offset=12)], [], lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertEqual', Load(), lineno=376, col_offset=8), [Call(Name('set', Load(), lineno=377, col_offset=16), [ListComp(Call(Name('int', Load(), lineno=377, col_offset=21), [Name('x', Load(), lineno=377, col_offset=25)], [], None, None, lineno=377, col_offset=21), [comprehension(Name('x', Store(), lineno=377, col_offset=32), Call(Attribute(Name('groups', Load(), lineno=377, col_offset=37), 'split', Load(), lineno=377, col_offset=37), [], [], None, None, lineno=377, col_offset=37), [])], lineno=377, col_offset=21)], [], None, None, lineno=377, col_offset=16), Call(Name('set', Load(), lineno=378, col_offset=16), [Call(Attribute(Name('posix', Load(), lineno=378, col_offset=20), 'getgroups', Load(), lineno=378, col_offset=20), [], [], None, None, lineno=378, col_offset=20)], [], None, None, lineno=378, col_offset=16)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8)], [], lineno=367, col_offset=4)], [], lineno=22, col_offset=0), ClassDef('PosixGroupsTester', [Attribute(Name('unittest', Load(), lineno=380, col_offset=24), 'TestCase', Load(), lineno=380, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=382, col_offset=14)], None, None, []), [If(Compare(Call(Attribute(Name('posix', Load(), lineno=383, col_offset=11), 'getuid', Load(), lineno=383, col_offset=11), [], [], None, None, lineno=383, col_offset=11), [NotEq()], [Num(0, lineno=383, col_offset=29)], lineno=383, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=384, col_offset=18), 'SkipTest', Load(), lineno=384, col_offset=18), [Str('not enough privileges', lineno=384, col_offset=36)], [], None, None, lineno=384, col_offset=18), None, None, lineno=384, col_offset=12)], [], lineno=383, col_offset=8), If(UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=385, col_offset=15), [Name('posix', Load(), lineno=385, col_offset=23), Str('getgroups', lineno=385, col_offset=30)], [], None, None, lineno=385, col_offset=15), lineno=385, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=386, col_offset=18), 'SkipTest', Load(), lineno=386, col_offset=18), [Str('need posix.getgroups', lineno=386, col_offset=36)], [], None, None, lineno=386, col_offset=18), None, None, lineno=386, col_offset=12)], [], lineno=385, col_offset=8), If(Compare(Attribute(Name('sys', Load(), lineno=387, col_offset=11), 'platform', Load(), lineno=387, col_offset=11), [Eq()], [Str('darwin', lineno=387, col_offset=27)], lineno=387, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=388, col_offset=18), 'SkipTest', Load(), lineno=388, col_offset=18), [Str('getgroups(2) is broken on OSX', lineno=388, col_offset=36)], [], None, None, lineno=388, col_offset=18), None, None, lineno=388, col_offset=12)], [], lineno=387, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=389, col_offset=8), 'saved_groups', Store(), lineno=389, col_offset=8)], Call(Attribute(Name('posix', Load(), lineno=389, col_offset=28), 'getgroups', Load(), lineno=389, col_offset=28), [], [], None, None, lineno=389, col_offset=28), lineno=389, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=391, col_offset=17)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=392, col_offset=11), [Name('posix', Load(), lineno=392, col_offset=19), Str('setgroups', lineno=392, col_offset=26)], [], None, None, lineno=392, col_offset=11), [Expr(Call(Attribute(Name('posix', Load(), lineno=393, col_offset=12), 'setgroups', Load(), lineno=393, col_offset=12), [Attribute(Name('self', Load(), lineno=393, col_offset=28), 'saved_groups', Load(), lineno=393, col_offset=28)], [], None, None, lineno=393, col_offset=12), lineno=393, col_offset=12)], [If(Call(Name('hasattr', Load(), lineno=394, col_offset=13), [Name('posix', Load(), lineno=394, col_offset=21), Str('initgroups', lineno=394, col_offset=28)], [], None, None, lineno=394, col_offset=13), [Assign([Name('name', Store(), lineno=395, col_offset=12)], Attribute(Call(Attribute(Name('pwd', Load(), lineno=395, col_offset=19), 'getpwuid', Load(), lineno=395, col_offset=19), [Call(Attribute(Name('posix', Load(), lineno=395, col_offset=32), 'getuid', Load(), lineno=395, col_offset=32), [], [], None, None, lineno=395, col_offset=32)], [], None, None, lineno=395, col_offset=19), 'pw_name', Load(), lineno=395, col_offset=19), lineno=395, col_offset=12), Expr(Call(Attribute(Name('posix', Load(), lineno=396, col_offset=12), 'initgroups', Load(), lineno=396, col_offset=12), [Name('name', Load(), lineno=396, col_offset=29), Subscript(Attribute(Name('self', Load(), lineno=396, col_offset=35), 'saved_groups', Load(), lineno=396, col_offset=35), Index(Num(0, lineno=396, col_offset=53)), Load(), lineno=396, col_offset=35)], [], None, None, lineno=396, col_offset=12), lineno=396, col_offset=12)], [], lineno=394, col_offset=13)], lineno=392, col_offset=8)], [], lineno=391, col_offset=4), FunctionDef('test_initgroups', arguments([Name('self', Param(), lineno=400, col_offset=24)], None, None, []), [Assign([Name('g', Store(), lineno=403, col_offset=8)], BinOp(Call(Name('max', Load(), lineno=403, col_offset=12), [Attribute(Name('self', Load(), lineno=403, col_offset=16), 'saved_groups', Load(), lineno=403, col_offset=16)], [], None, None, lineno=403, col_offset=12), Add(), Num(1, lineno=403, col_offset=37), lineno=403, col_offset=12), lineno=403, col_offset=8), Assign([Name('name', Store(), lineno=404, col_offset=8)], Attribute(Call(Attribute(Name('pwd', Load(), lineno=404, col_offset=15), 'getpwuid', Load(), lineno=404, col_offset=15), [Call(Attribute(Name('posix', Load(), lineno=404, col_offset=28), 'getuid', Load(), lineno=404, col_offset=28), [], [], None, None, lineno=404, col_offset=28)], [], None, None, lineno=404, col_offset=15), 'pw_name', Load(), lineno=404, col_offset=15), lineno=404, col_offset=8), Expr(Call(Attribute(Name('posix', Load(), lineno=405, col_offset=8), 'initgroups', Load(), lineno=405, col_offset=8), [Name('name', Load(), lineno=405, col_offset=25), Name('g', Load(), lineno=405, col_offset=31)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertIn', Load(), lineno=406, col_offset=8), [Name('g', Load(), lineno=406, col_offset=22), Call(Attribute(Name('posix', Load(), lineno=406, col_offset=25), 'getgroups', Load(), lineno=406, col_offset=25), [], [], None, None, lineno=406, col_offset=25)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=398, col_offset=5), 'skipUnless', Load(), lineno=398, col_offset=5), [Call(Name('hasattr', Load(), lineno=398, col_offset=25), [Name('posix', Load(), lineno=398, col_offset=33), Str('initgroups', lineno=398, col_offset=40)], [], None, None, lineno=398, col_offset=25), Str('test needs posix.initgroups()', lineno=399, col_offset=25)], [], None, None, lineno=398, col_offset=5)], lineno=398, col_offset=4), FunctionDef('test_setgroups', arguments([Name('self', Param(), lineno=410, col_offset=23)], None, None, []), [For(Name('groups', Store(), lineno=411, col_offset=12), List([List([Num(0, lineno=411, col_offset=24)], Load(), lineno=411, col_offset=23), Call(Name('range', Load(), lineno=411, col_offset=28), [Num(16, lineno=411, col_offset=34)], [], None, None, lineno=411, col_offset=28)], Load(), lineno=411, col_offset=22), [Expr(Call(Attribute(Name('posix', Load(), lineno=412, col_offset=12), 'setgroups', Load(), lineno=412, col_offset=12), [Name('groups', Load(), lineno=412, col_offset=28)], [], None, None, lineno=412, col_offset=12), lineno=412, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=12), 'assertListEqual', Load(), lineno=413, col_offset=12), [Name('groups', Load(), lineno=413, col_offset=33), Call(Attribute(Name('posix', Load(), lineno=413, col_offset=41), 'getgroups', Load(), lineno=413, col_offset=41), [], [], None, None, lineno=413, col_offset=41)], [], None, None, lineno=413, col_offset=12), lineno=413, col_offset=12)], [], lineno=411, col_offset=8)], [Call(Attribute(Name('unittest', Load(), lineno=408, col_offset=5), 'skipUnless', Load(), lineno=408, col_offset=5), [Call(Name('hasattr', Load(), lineno=408, col_offset=25), [Name('posix', Load(), lineno=408, col_offset=33), Str('setgroups', lineno=408, col_offset=40)], [], None, None, lineno=408, col_offset=25), Str('test needs posix.setgroups()', lineno=409, col_offset=25)], [], None, None, lineno=408, col_offset=5)], lineno=408, col_offset=4)], [], lineno=380, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=417, col_offset=4), 'run_unittest', Load(), lineno=417, col_offset=4), [Name('PosixTester', Load(), lineno=417, col_offset=30), Name('PosixGroupsTester', Load(), lineno=417, col_offset=43)], [], None, None, lineno=417, col_offset=4), lineno=417, col_offset=4)], [], lineno=416, col_offset=0), If(Compare(Name('__name__', Load(), lineno=419, col_offset=3), [Eq()], [Str('__main__', lineno=419, col_offset=15)], lineno=419, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=420, col_offset=4), [], [], None, None, lineno=420, col_offset=4), lineno=420, col_offset=4)], [], lineno=419, col_offset=0)])
