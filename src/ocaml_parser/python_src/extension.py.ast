Module([Expr(Str('distutils.extension\n\nProvides the Extension class, used to describe C/C++ extension\nmodules in setup scripts.', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=6, col_offset=0)], Str('$Id: extension.py 86238 2010-11-06 04:06:18Z eric.araujo $', lineno=6, col_offset=15), lineno=6, col_offset=0), Import([alias('os', None), alias('string', None), alias('sys', None)], lineno=8, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=9, col_offset=0), TryExcept([Import([alias('warnings', None)], lineno=12, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=13, col_offset=7), None, [Assign([Name('warnings', Store(), lineno=14, col_offset=4)], Name('None', Load(), lineno=14, col_offset=15), lineno=14, col_offset=4)], lineno=13, col_offset=0)], [], lineno=11, col_offset=0), ClassDef('Extension', [], [Expr(Str('Just a collection of attributes that describes an extension\n    module and everything needed to build it (hopefully in a portable\n    way, but there are hooks that let you be as unportable as you need).\n\n    Instance attributes:\n      name : string\n        the full name of the extension, including any packages -- ie.\n        *not* a filename or pathname, but Python dotted name\n      sources : [string]\n        list of source filenames, relative to the distribution root\n        (where the setup script lives), in Unix form (slash-separated)\n        for portability.  Source files may be C, C++, SWIG (.i),\n        platform-specific resource files, or whatever else is recognized\n        by the "build_ext" command as source for a Python extension.\n      include_dirs : [string]\n        list of directories to search for C/C++ header files (in Unix\n        form for portability)\n      define_macros : [(name : string, value : string|None)]\n        list of macros to define; each macro is defined using a 2-tuple,\n        where \'value\' is either the string to define it to or None to\n        define it without a particular value (equivalent of "#define\n        FOO" in source or -DFOO on Unix C compiler command line)\n      undef_macros : [string]\n        list of macros to undefine explicitly\n      library_dirs : [string]\n        list of directories to search for C/C++ libraries at link time\n      libraries : [string]\n        list of library names (not filenames or paths) to link against\n      runtime_library_dirs : [string]\n        list of directories to search for C/C++ libraries at run time\n        (for shared extensions, this is when the extension is loaded)\n      extra_objects : [string]\n        list of extra files to link with (eg. object files not implied\n        by \'sources\', static library that must be explicitly specified,\n        binary resource files, etc.)\n      extra_compile_args : [string]\n        any extra platform- and compiler-specific information to use\n        when compiling the source files in \'sources\'.  For platforms and\n        compilers where "command line" makes sense, this is typically a\n        list of command-line arguments, but for other platforms it could\n        be anything.\n      extra_link_args : [string]\n        any extra platform- and compiler-specific information to use\n        when linking object files together to create the extension (or\n        to create a new static Python interpreter).  Similar\n        interpretation as for \'extra_compile_args\'.\n      export_symbols : [string]\n        list of symbols to be exported from a shared extension.  Not\n        used on all platforms, and not generally necessary for Python\n        extensions, which typically export exactly one symbol: "init" +\n        extension_name.\n      swig_opts : [string]\n        any extra options to pass to SWIG if a source file has the .i\n        extension.\n      depends : [string]\n        list of files that the extension depends on\n      language : string\n        extension language (i.e. "c", "c++", "objc"). Will be detected\n        from the source extensions if not provided.\n    ', lineno=86, col_offset=-1), lineno=86, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=90, col_offset=18), Name('name', Param(), lineno=90, col_offset=24), Name('sources', Param(), lineno=90, col_offset=30), Name('include_dirs', Param(), lineno=91, col_offset=18), Name('define_macros', Param(), lineno=92, col_offset=18), Name('undef_macros', Param(), lineno=93, col_offset=18), Name('library_dirs', Param(), lineno=94, col_offset=18), Name('libraries', Param(), lineno=95, col_offset=18), Name('runtime_library_dirs', Param(), lineno=96, col_offset=18), Name('extra_objects', Param(), lineno=97, col_offset=18), Name('extra_compile_args', Param(), lineno=98, col_offset=18), Name('extra_link_args', Param(), lineno=99, col_offset=18), Name('export_symbols', Param(), lineno=100, col_offset=18), Name('swig_opts', Param(), lineno=101, col_offset=18), Name('depends', Param(), lineno=102, col_offset=18), Name('language', Param(), lineno=103, col_offset=18)], None, 'kw', [Name('None', Load(), lineno=91, col_offset=31), Name('None', Load(), lineno=92, col_offset=32), Name('None', Load(), lineno=93, col_offset=31), Name('None', Load(), lineno=94, col_offset=31), Name('None', Load(), lineno=95, col_offset=28), Name('None', Load(), lineno=96, col_offset=39), Name('None', Load(), lineno=97, col_offset=32), Name('None', Load(), lineno=98, col_offset=37), Name('None', Load(), lineno=99, col_offset=34), Name('None', Load(), lineno=100, col_offset=33), Name('None', Load(), lineno=101, col_offset=30), Name('None', Load(), lineno=102, col_offset=26), Name('None', Load(), lineno=103, col_offset=27)]), [Assert(Compare(Call(Name('type', Load(), lineno=106, col_offset=15), [Name('name', Load(), lineno=106, col_offset=20)], [], None, None, lineno=106, col_offset=15), [Is()], [Name('StringType', Load(), lineno=106, col_offset=29)], lineno=106, col_offset=15), Str("'name' must be a string", lineno=106, col_offset=41), lineno=106, col_offset=8), Assert(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=107, col_offset=16), [Name('sources', Load(), lineno=107, col_offset=21)], [], None, None, lineno=107, col_offset=16), [Is()], [Name('ListType', Load(), lineno=107, col_offset=33)], lineno=107, col_offset=16), Compare(Call(Name('map', Load(), lineno=108, col_offset=16), [Name('type', Load(), lineno=108, col_offset=20), Name('sources', Load(), lineno=108, col_offset=26)], [], None, None, lineno=108, col_offset=16), [Eq()], [BinOp(List([Name('StringType', Load(), lineno=108, col_offset=39)], Load(), lineno=108, col_offset=38), Mult(), Call(Name('len', Load(), lineno=108, col_offset=51), [Name('sources', Load(), lineno=108, col_offset=55)], [], None, None, lineno=108, col_offset=51), lineno=108, col_offset=38)], lineno=108, col_offset=16)], lineno=107, col_offset=16), Str("'sources' must be a list of strings", lineno=109, col_offset=16), lineno=107, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=111, col_offset=8), 'name', Store(), lineno=111, col_offset=8)], Name('name', Load(), lineno=111, col_offset=20), lineno=111, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=112, col_offset=8), 'sources', Store(), lineno=112, col_offset=8)], Name('sources', Load(), lineno=112, col_offset=23), lineno=112, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=113, col_offset=8), 'include_dirs', Store(), lineno=113, col_offset=8)], BoolOp(Or(), [Name('include_dirs', Load(), lineno=113, col_offset=28), List([], Load(), lineno=113, col_offset=44)], lineno=113, col_offset=28), lineno=113, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=114, col_offset=8), 'define_macros', Store(), lineno=114, col_offset=8)], BoolOp(Or(), [Name('define_macros', Load(), lineno=114, col_offset=29), List([], Load(), lineno=114, col_offset=46)], lineno=114, col_offset=29), lineno=114, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=115, col_offset=8), 'undef_macros', Store(), lineno=115, col_offset=8)], BoolOp(Or(), [Name('undef_macros', Load(), lineno=115, col_offset=28), List([], Load(), lineno=115, col_offset=44)], lineno=115, col_offset=28), lineno=115, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=116, col_offset=8), 'library_dirs', Store(), lineno=116, col_offset=8)], BoolOp(Or(), [Name('library_dirs', Load(), lineno=116, col_offset=28), List([], Load(), lineno=116, col_offset=44)], lineno=116, col_offset=28), lineno=116, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=117, col_offset=8), 'libraries', Store(), lineno=117, col_offset=8)], BoolOp(Or(), [Name('libraries', Load(), lineno=117, col_offset=25), List([], Load(), lineno=117, col_offset=38)], lineno=117, col_offset=25), lineno=117, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=118, col_offset=8), 'runtime_library_dirs', Store(), lineno=118, col_offset=8)], BoolOp(Or(), [Name('runtime_library_dirs', Load(), lineno=118, col_offset=36), List([], Load(), lineno=118, col_offset=60)], lineno=118, col_offset=36), lineno=118, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=119, col_offset=8), 'extra_objects', Store(), lineno=119, col_offset=8)], BoolOp(Or(), [Name('extra_objects', Load(), lineno=119, col_offset=29), List([], Load(), lineno=119, col_offset=46)], lineno=119, col_offset=29), lineno=119, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=120, col_offset=8), 'extra_compile_args', Store(), lineno=120, col_offset=8)], BoolOp(Or(), [Name('extra_compile_args', Load(), lineno=120, col_offset=34), List([], Load(), lineno=120, col_offset=56)], lineno=120, col_offset=34), lineno=120, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=121, col_offset=8), 'extra_link_args', Store(), lineno=121, col_offset=8)], BoolOp(Or(), [Name('extra_link_args', Load(), lineno=121, col_offset=31), List([], Load(), lineno=121, col_offset=50)], lineno=121, col_offset=31), lineno=121, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=122, col_offset=8), 'export_symbols', Store(), lineno=122, col_offset=8)], BoolOp(Or(), [Name('export_symbols', Load(), lineno=122, col_offset=30), List([], Load(), lineno=122, col_offset=48)], lineno=122, col_offset=30), lineno=122, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=123, col_offset=8), 'swig_opts', Store(), lineno=123, col_offset=8)], BoolOp(Or(), [Name('swig_opts', Load(), lineno=123, col_offset=25), List([], Load(), lineno=123, col_offset=38)], lineno=123, col_offset=25), lineno=123, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=124, col_offset=8), 'depends', Store(), lineno=124, col_offset=8)], BoolOp(Or(), [Name('depends', Load(), lineno=124, col_offset=23), List([], Load(), lineno=124, col_offset=34)], lineno=124, col_offset=23), lineno=124, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=125, col_offset=8), 'language', Store(), lineno=125, col_offset=8)], Name('language', Load(), lineno=125, col_offset=24), lineno=125, col_offset=8), If(Call(Name('len', Load(), lineno=128, col_offset=11), [Name('kw', Load(), lineno=128, col_offset=15)], [], None, None, lineno=128, col_offset=11), [Assign([Name('L', Store(), lineno=129, col_offset=12)], Call(Attribute(Name('kw', Load(), lineno=129, col_offset=16), 'keys', Load(), lineno=129, col_offset=16), [], [], None, None, lineno=129, col_offset=16), lineno=129, col_offset=12), Expr(Call(Attribute(Name('L', Load(), lineno=129, col_offset=28), 'sort', Load(), lineno=129, col_offset=28), [], [], None, None, lineno=129, col_offset=28), lineno=129, col_offset=28), Assign([Name('L', Store(), lineno=130, col_offset=12)], Call(Name('map', Load(), lineno=130, col_offset=16), [Name('repr', Load(), lineno=130, col_offset=20), Name('L', Load(), lineno=130, col_offset=26)], [], None, None, lineno=130, col_offset=16), lineno=130, col_offset=12), Assign([Name('msg', Store(), lineno=131, col_offset=12)], BinOp(Str('Unknown Extension options: ', lineno=131, col_offset=18), Add(), Call(Attribute(Name('string', Load(), lineno=131, col_offset=50), 'join', Load(), lineno=131, col_offset=50), [Name('L', Load(), lineno=131, col_offset=62), Str(', ', lineno=131, col_offset=65)], [], None, None, lineno=131, col_offset=50), lineno=131, col_offset=18), lineno=131, col_offset=12), If(Compare(Name('warnings', Load(), lineno=132, col_offset=15), [IsNot()], [Name('None', Load(), lineno=132, col_offset=31)], lineno=132, col_offset=15), [Expr(Call(Attribute(Name('warnings', Load(), lineno=133, col_offset=16), 'warn', Load(), lineno=133, col_offset=16), [Name('msg', Load(), lineno=133, col_offset=30)], [], None, None, lineno=133, col_offset=16), lineno=133, col_offset=16)], [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=135, col_offset=16), 'stderr', Load(), lineno=135, col_offset=16), 'write', Load(), lineno=135, col_offset=16), [BinOp(Name('msg', Load(), lineno=135, col_offset=33), Add(), Str('\n', lineno=135, col_offset=39), lineno=135, col_offset=33)], [], None, None, lineno=135, col_offset=16), lineno=135, col_offset=16)], lineno=132, col_offset=12)], [], lineno=128, col_offset=8)], [], lineno=90, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('read_setup_file', arguments([Name('filename', Param(), lineno=139, col_offset=21)], None, None, []), [ImportFrom('distutils.sysconfig', [alias('parse_makefile', None), alias('expand_makefile_vars', None), alias('_variable_rx', None)], 0, lineno=140, col_offset=4), ImportFrom('distutils.text_file', [alias('TextFile', None)], 0, lineno=142, col_offset=4), ImportFrom('distutils.util', [alias('split_quoted', None)], 0, lineno=143, col_offset=4), Assign([Name('vars', Store(), lineno=146, col_offset=4)], Call(Name('parse_makefile', Load(), lineno=146, col_offset=11), [Name('filename', Load(), lineno=146, col_offset=26)], [], None, None, lineno=146, col_offset=11), lineno=146, col_offset=4), Assign([Name('file', Store(), lineno=150, col_offset=4)], Call(Name('TextFile', Load(), lineno=150, col_offset=11), [Name('filename', Load(), lineno=150, col_offset=20)], [keyword('strip_comments', Num(1, lineno=151, col_offset=35)), keyword('skip_blanks', Num(1, lineno=151, col_offset=50)), keyword('join_lines', Num(1, lineno=151, col_offset=64)), keyword('lstrip_ws', Num(1, lineno=152, col_offset=30)), keyword('rstrip_ws', Num(1, lineno=152, col_offset=43))], None, None, lineno=150, col_offset=11), lineno=150, col_offset=4), TryFinally([Assign([Name('extensions', Store(), lineno=154, col_offset=8)], List([], Load(), lineno=154, col_offset=21), lineno=154, col_offset=8), While(Num(1, lineno=156, col_offset=14), [Assign([Name('line', Store(), lineno=157, col_offset=12)], Call(Attribute(Name('file', Load(), lineno=157, col_offset=19), 'readline', Load(), lineno=157, col_offset=19), [], [], None, None, lineno=157, col_offset=19), lineno=157, col_offset=12), If(Compare(Name('line', Load(), lineno=158, col_offset=15), [Is()], [Name('None', Load(), lineno=158, col_offset=23)], lineno=158, col_offset=15), [Break( lineno=159, col_offset=16)], [], lineno=158, col_offset=12), If(Call(Attribute(Name('_variable_rx', Load(), lineno=160, col_offset=15), 'match', Load(), lineno=160, col_offset=15), [Name('line', Load(), lineno=160, col_offset=34)], [], None, None, lineno=160, col_offset=15), [Continue( lineno=161, col_offset=16), If(Compare(Subscript(Name('line', Load(), lineno=163, col_offset=19), Index(Num(0, lineno=163, col_offset=24)), Load(), lineno=163, col_offset=19), [Eq(), Eq()], [Subscript(Name('line', Load(), lineno=163, col_offset=30), Index(Num(-1, lineno=163, col_offset=36)), Load(), lineno=163, col_offset=30), Str('*', lineno=163, col_offset=42)], lineno=163, col_offset=19), [Expr(Call(Attribute(Name('file', Load(), lineno=164, col_offset=20), 'warn', Load(), lineno=164, col_offset=20), [BinOp(Str("'%s' lines not handled yet", lineno=164, col_offset=30), Mod(), Name('line', Load(), lineno=164, col_offset=61), lineno=164, col_offset=30)], [], None, None, lineno=164, col_offset=20), lineno=164, col_offset=20), Continue( lineno=165, col_offset=20)], [], lineno=163, col_offset=16)], [], lineno=160, col_offset=12), Assign([Name('line', Store(), lineno=168, col_offset=12)], Call(Name('expand_makefile_vars', Load(), lineno=168, col_offset=19), [Name('line', Load(), lineno=168, col_offset=40), Name('vars', Load(), lineno=168, col_offset=46)], [], None, None, lineno=168, col_offset=19), lineno=168, col_offset=12), Assign([Name('words', Store(), lineno=169, col_offset=12)], Call(Name('split_quoted', Load(), lineno=169, col_offset=20), [Name('line', Load(), lineno=169, col_offset=33)], [], None, None, lineno=169, col_offset=20), lineno=169, col_offset=12), Assign([Name('module', Store(), lineno=178, col_offset=12)], Subscript(Name('words', Load(), lineno=178, col_offset=21), Index(Num(0, lineno=178, col_offset=27)), Load(), lineno=178, col_offset=21), lineno=178, col_offset=12), Assign([Name('ext', Store(), lineno=179, col_offset=12)], Call(Name('Extension', Load(), lineno=179, col_offset=18), [Name('module', Load(), lineno=179, col_offset=28), List([], Load(), lineno=179, col_offset=36)], [], None, None, lineno=179, col_offset=18), lineno=179, col_offset=12), Assign([Name('append_next_word', Store(), lineno=180, col_offset=12)], Name('None', Load(), lineno=180, col_offset=31), lineno=180, col_offset=12), For(Name('word', Store(), lineno=182, col_offset=16), Subscript(Name('words', Load(), lineno=182, col_offset=24), Slice(Num(1, lineno=182, col_offset=30), None, None), Load(), lineno=182, col_offset=24), [If(Compare(Name('append_next_word', Load(), lineno=183, col_offset=19), [IsNot()], [Name('None', Load(), lineno=183, col_offset=43)], lineno=183, col_offset=19), [Expr(Call(Attribute(Name('append_next_word', Load(), lineno=184, col_offset=20), 'append', Load(), lineno=184, col_offset=20), [Name('word', Load(), lineno=184, col_offset=44)], [], None, None, lineno=184, col_offset=20), lineno=184, col_offset=20), Assign([Name('append_next_word', Store(), lineno=185, col_offset=20)], Name('None', Load(), lineno=185, col_offset=39), lineno=185, col_offset=20), Continue( lineno=186, col_offset=20)], [], lineno=183, col_offset=16), Assign([Name('suffix', Store(), lineno=188, col_offset=16)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=188, col_offset=25), 'path', Load(), lineno=188, col_offset=25), 'splitext', Load(), lineno=188, col_offset=25), [Name('word', Load(), lineno=188, col_offset=42)], [], None, None, lineno=188, col_offset=25), Index(Num(1, lineno=188, col_offset=48)), Load(), lineno=188, col_offset=25), lineno=188, col_offset=16), Assign([Name('switch', Store(), lineno=189, col_offset=16)], Subscript(Name('word', Load(), lineno=189, col_offset=25), Slice(Num(0, lineno=189, col_offset=30), Num(2, lineno=189, col_offset=32), None), Load(), lineno=189, col_offset=25), lineno=189, col_offset=16), Assign([Name('value', Store(), lineno=189, col_offset=37)], Subscript(Name('word', Load(), lineno=189, col_offset=45), Slice(Num(2, lineno=189, col_offset=50), None, None), Load(), lineno=189, col_offset=45), lineno=189, col_offset=37), If(Compare(Name('suffix', Load(), lineno=191, col_offset=19), [In()], [Tuple([Str('.c', lineno=191, col_offset=30), Str('.cc', lineno=191, col_offset=36), Str('.cpp', lineno=191, col_offset=43), Str('.cxx', lineno=191, col_offset=51), Str('.c++', lineno=191, col_offset=59), Str('.m', lineno=191, col_offset=67), Str('.mm', lineno=191, col_offset=73)], Load(), lineno=191, col_offset=30)], lineno=191, col_offset=19), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=195, col_offset=20), 'sources', Load(), lineno=195, col_offset=20), 'append', Load(), lineno=195, col_offset=20), [Name('word', Load(), lineno=195, col_offset=39)], [], None, None, lineno=195, col_offset=20), lineno=195, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=196, col_offset=21), [Eq()], [Str('-I', lineno=196, col_offset=31)], lineno=196, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=197, col_offset=20), 'include_dirs', Load(), lineno=197, col_offset=20), 'append', Load(), lineno=197, col_offset=20), [Name('value', Load(), lineno=197, col_offset=44)], [], None, None, lineno=197, col_offset=20), lineno=197, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=198, col_offset=21), [Eq()], [Str('-D', lineno=198, col_offset=31)], lineno=198, col_offset=21), [Assign([Name('equals', Store(), lineno=199, col_offset=20)], Call(Attribute(Name('string', Load(), lineno=199, col_offset=29), 'find', Load(), lineno=199, col_offset=29), [Name('value', Load(), lineno=199, col_offset=41), Str('=', lineno=199, col_offset=48)], [], None, None, lineno=199, col_offset=29), lineno=199, col_offset=20), If(Compare(Name('equals', Load(), lineno=200, col_offset=23), [Eq()], [Num(-1, lineno=200, col_offset=34)], lineno=200, col_offset=23), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=201, col_offset=24), 'define_macros', Load(), lineno=201, col_offset=24), 'append', Load(), lineno=201, col_offset=24), [Tuple([Name('value', Load(), lineno=201, col_offset=50), Name('None', Load(), lineno=201, col_offset=57)], Load(), lineno=201, col_offset=50)], [], None, None, lineno=201, col_offset=24), lineno=201, col_offset=24)], [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=203, col_offset=24), 'define_macros', Load(), lineno=203, col_offset=24), 'append', Load(), lineno=203, col_offset=24), [Tuple([Subscript(Name('value', Load(), lineno=203, col_offset=50), Slice(Num(0, lineno=203, col_offset=56), Name('equals', Load(), lineno=203, col_offset=58), None), Load(), lineno=203, col_offset=50), Subscript(Name('value', Load(), lineno=204, col_offset=50), Slice(BinOp(Name('equals', Load(), lineno=204, col_offset=56), Add(), Num(2, lineno=204, col_offset=63), lineno=204, col_offset=56), None, None), Load(), lineno=204, col_offset=50)], Load(), lineno=203, col_offset=50)], [], None, None, lineno=203, col_offset=24), lineno=203, col_offset=24)], lineno=200, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=205, col_offset=21), [Eq()], [Str('-U', lineno=205, col_offset=31)], lineno=205, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=206, col_offset=20), 'undef_macros', Load(), lineno=206, col_offset=20), 'append', Load(), lineno=206, col_offset=20), [Name('value', Load(), lineno=206, col_offset=44)], [], None, None, lineno=206, col_offset=20), lineno=206, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=207, col_offset=21), [Eq()], [Str('-C', lineno=207, col_offset=31)], lineno=207, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=208, col_offset=20), 'extra_compile_args', Load(), lineno=208, col_offset=20), 'append', Load(), lineno=208, col_offset=20), [Name('word', Load(), lineno=208, col_offset=50)], [], None, None, lineno=208, col_offset=20), lineno=208, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=209, col_offset=21), [Eq()], [Str('-l', lineno=209, col_offset=31)], lineno=209, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=210, col_offset=20), 'libraries', Load(), lineno=210, col_offset=20), 'append', Load(), lineno=210, col_offset=20), [Name('value', Load(), lineno=210, col_offset=41)], [], None, None, lineno=210, col_offset=20), lineno=210, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=211, col_offset=21), [Eq()], [Str('-L', lineno=211, col_offset=31)], lineno=211, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=212, col_offset=20), 'library_dirs', Load(), lineno=212, col_offset=20), 'append', Load(), lineno=212, col_offset=20), [Name('value', Load(), lineno=212, col_offset=44)], [], None, None, lineno=212, col_offset=20), lineno=212, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=213, col_offset=21), [Eq()], [Str('-R', lineno=213, col_offset=31)], lineno=213, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=214, col_offset=20), 'runtime_library_dirs', Load(), lineno=214, col_offset=20), 'append', Load(), lineno=214, col_offset=20), [Name('value', Load(), lineno=214, col_offset=52)], [], None, None, lineno=214, col_offset=20), lineno=214, col_offset=20)], [If(Compare(Name('word', Load(), lineno=215, col_offset=21), [Eq()], [Str('-rpath', lineno=215, col_offset=29)], lineno=215, col_offset=21), [Assign([Name('append_next_word', Store(), lineno=216, col_offset=20)], Attribute(Name('ext', Load(), lineno=216, col_offset=39), 'runtime_library_dirs', Load(), lineno=216, col_offset=39), lineno=216, col_offset=20)], [If(Compare(Name('word', Load(), lineno=217, col_offset=21), [Eq()], [Str('-Xlinker', lineno=217, col_offset=29)], lineno=217, col_offset=21), [Assign([Name('append_next_word', Store(), lineno=218, col_offset=20)], Attribute(Name('ext', Load(), lineno=218, col_offset=39), 'extra_link_args', Load(), lineno=218, col_offset=39), lineno=218, col_offset=20)], [If(Compare(Name('word', Load(), lineno=219, col_offset=21), [Eq()], [Str('-Xcompiler', lineno=219, col_offset=29)], lineno=219, col_offset=21), [Assign([Name('append_next_word', Store(), lineno=220, col_offset=20)], Attribute(Name('ext', Load(), lineno=220, col_offset=39), 'extra_compile_args', Load(), lineno=220, col_offset=39), lineno=220, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=221, col_offset=21), [Eq()], [Str('-u', lineno=221, col_offset=31)], lineno=221, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=222, col_offset=20), 'extra_link_args', Load(), lineno=222, col_offset=20), 'append', Load(), lineno=222, col_offset=20), [Name('word', Load(), lineno=222, col_offset=47)], [], None, None, lineno=222, col_offset=20), lineno=222, col_offset=20), If(UnaryOp(Not(), Name('value', Load(), lineno=223, col_offset=27), lineno=223, col_offset=23), [Assign([Name('append_next_word', Store(), lineno=224, col_offset=24)], Attribute(Name('ext', Load(), lineno=224, col_offset=43), 'extra_link_args', Load(), lineno=224, col_offset=43), lineno=224, col_offset=24)], [], lineno=223, col_offset=20)], [If(Compare(Name('word', Load(), lineno=225, col_offset=21), [Eq()], [Str('-Xcompiler', lineno=225, col_offset=29)], lineno=225, col_offset=21), [Assign([Name('append_next_word', Store(), lineno=226, col_offset=20)], Attribute(Name('ext', Load(), lineno=226, col_offset=39), 'extra_compile_args', Load(), lineno=226, col_offset=39), lineno=226, col_offset=20)], [If(Compare(Name('switch', Load(), lineno=227, col_offset=21), [Eq()], [Str('-u', lineno=227, col_offset=31)], lineno=227, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=228, col_offset=20), 'extra_link_args', Load(), lineno=228, col_offset=20), 'append', Load(), lineno=228, col_offset=20), [Name('word', Load(), lineno=228, col_offset=47)], [], None, None, lineno=228, col_offset=20), lineno=228, col_offset=20), If(UnaryOp(Not(), Name('value', Load(), lineno=229, col_offset=27), lineno=229, col_offset=23), [Assign([Name('append_next_word', Store(), lineno=230, col_offset=24)], Attribute(Name('ext', Load(), lineno=230, col_offset=43), 'extra_link_args', Load(), lineno=230, col_offset=43), lineno=230, col_offset=24)], [], lineno=229, col_offset=20)], [If(Compare(Name('suffix', Load(), lineno=231, col_offset=21), [In()], [Tuple([Str('.a', lineno=231, col_offset=32), Str('.so', lineno=231, col_offset=38), Str('.sl', lineno=231, col_offset=45), Str('.o', lineno=231, col_offset=52), Str('.dylib', lineno=231, col_offset=58)], Load(), lineno=231, col_offset=32)], lineno=231, col_offset=21), [Expr(Call(Attribute(Attribute(Name('ext', Load(), lineno=236, col_offset=20), 'extra_objects', Load(), lineno=236, col_offset=20), 'append', Load(), lineno=236, col_offset=20), [Name('word', Load(), lineno=236, col_offset=45)], [], None, None, lineno=236, col_offset=20), lineno=236, col_offset=20)], [Expr(Call(Attribute(Name('file', Load(), lineno=238, col_offset=20), 'warn', Load(), lineno=238, col_offset=20), [BinOp(Str("unrecognized argument '%s'", lineno=238, col_offset=30), Mod(), Name('word', Load(), lineno=238, col_offset=61), lineno=238, col_offset=30)], [], None, None, lineno=238, col_offset=20), lineno=238, col_offset=20)], lineno=231, col_offset=21)], lineno=227, col_offset=21)], lineno=225, col_offset=21)], lineno=221, col_offset=21)], lineno=219, col_offset=21)], lineno=217, col_offset=21)], lineno=215, col_offset=21)], lineno=213, col_offset=21)], lineno=211, col_offset=21)], lineno=209, col_offset=21)], lineno=207, col_offset=21)], lineno=205, col_offset=21)], lineno=198, col_offset=21)], lineno=196, col_offset=21)], lineno=191, col_offset=16)], [], lineno=182, col_offset=12), Expr(Call(Attribute(Name('extensions', Load(), lineno=240, col_offset=12), 'append', Load(), lineno=240, col_offset=12), [Name('ext', Load(), lineno=240, col_offset=30)], [], None, None, lineno=240, col_offset=12), lineno=240, col_offset=12)], [], lineno=156, col_offset=8)], [Expr(Call(Attribute(Name('file', Load(), lineno=242, col_offset=8), 'close', Load(), lineno=242, col_offset=8), [], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8)], lineno=153, col_offset=4), Return(Name('extensions', Load(), lineno=253, col_offset=11), lineno=253, col_offset=4)], [], lineno=139, col_offset=0)])
