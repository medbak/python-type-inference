Module([ImportFrom('framer', [alias('template', None)], 0, lineno=1, col_offset=0), ImportFrom('framer.util', [alias('cstring', None), alias('unindent', None)], 0, lineno=2, col_offset=0), Assign([Name('T_SHORT', Store(), lineno=4, col_offset=0)], Str('T_SHORT', lineno=4, col_offset=10), lineno=4, col_offset=0), Assign([Name('T_INT', Store(), lineno=5, col_offset=0)], Str('T_INT', lineno=5, col_offset=8), lineno=5, col_offset=0), Assign([Name('T_LONG', Store(), lineno=6, col_offset=0)], Str('T_LONG', lineno=6, col_offset=9), lineno=6, col_offset=0), Assign([Name('T_FLOAT', Store(), lineno=7, col_offset=0)], Str('T_FLOAT', lineno=7, col_offset=10), lineno=7, col_offset=0), Assign([Name('T_DOUBLE', Store(), lineno=8, col_offset=0)], Str('T_DOUBLE', lineno=8, col_offset=11), lineno=8, col_offset=0), Assign([Name('T_STRING', Store(), lineno=9, col_offset=0)], Str('T_STRING', lineno=9, col_offset=11), lineno=9, col_offset=0), Assign([Name('T_OBJECT', Store(), lineno=10, col_offset=0)], Str('T_OBJECT', lineno=10, col_offset=11), lineno=10, col_offset=0), Assign([Name('T_CHAR', Store(), lineno=11, col_offset=0)], Str('T_CHAR', lineno=11, col_offset=9), lineno=11, col_offset=0), Assign([Name('T_BYTE', Store(), lineno=12, col_offset=0)], Str('T_BYTE', lineno=12, col_offset=9), lineno=12, col_offset=0), Assign([Name('T_UBYTE', Store(), lineno=13, col_offset=0)], Str('T_UBYTE', lineno=13, col_offset=10), lineno=13, col_offset=0), Assign([Name('T_UINT', Store(), lineno=14, col_offset=0)], Str('T_UINT', lineno=14, col_offset=9), lineno=14, col_offset=0), Assign([Name('T_ULONG', Store(), lineno=15, col_offset=0)], Str('T_ULONG', lineno=15, col_offset=10), lineno=15, col_offset=0), Assign([Name('T_STRING_INPLACE', Store(), lineno=16, col_offset=0)], Str('T_STRING_INPLACE', lineno=16, col_offset=19), lineno=16, col_offset=0), Assign([Name('T_OBJECT_EX', Store(), lineno=17, col_offset=0)], Str('T_OBJECT_EX', lineno=17, col_offset=14), lineno=17, col_offset=0), Assign([Name('RO', Store(), lineno=19, col_offset=0), Name('READONLY', Store(), lineno=19, col_offset=5)], Str('READONLY', lineno=19, col_offset=16), lineno=19, col_offset=0), Assign([Name('READ_RESTRICTED', Store(), lineno=20, col_offset=0)], Str('READ_RESTRICTED', lineno=20, col_offset=18), lineno=20, col_offset=0), Assign([Name('WRITE_RESTRICTED', Store(), lineno=21, col_offset=0)], Str('WRITE_RESTRICTED', lineno=21, col_offset=19), lineno=21, col_offset=0), Assign([Name('RESTRICT', Store(), lineno=22, col_offset=0)], Str('RESTRICTED', lineno=22, col_offset=11), lineno=22, col_offset=0), Assign([Name('c2t', Store(), lineno=24, col_offset=0)], Dict([Str('int', lineno=24, col_offset=7), Str('unsigned int', lineno=25, col_offset=7), Str('long', lineno=26, col_offset=7), Str('unsigned long', lineno=27, col_offset=7), Str('float', lineno=28, col_offset=7), Str('double', lineno=29, col_offset=7), Str('char *', lineno=30, col_offset=7), Str('PyObject *', lineno=31, col_offset=7)], [Name('T_INT', Load(), lineno=24, col_offset=15), Name('T_UINT', Load(), lineno=25, col_offset=24), Name('T_LONG', Load(), lineno=26, col_offset=16), Name('T_LONG', Load(), lineno=27, col_offset=25), Name('T_FLOAT', Load(), lineno=28, col_offset=17), Name('T_DOUBLE', Load(), lineno=29, col_offset=18), Name('T_CHAR', Load(), lineno=30, col_offset=18), Name('T_OBJECT', Load(), lineno=31, col_offset=22)], lineno=24, col_offset=6), lineno=24, col_offset=0), ClassDef('member', [Name('object', Load(), lineno=34, col_offset=13)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=36, col_offset=17), Name('cname', Param(), lineno=36, col_offset=23), Name('type', Param(), lineno=36, col_offset=35), Name('flags', Param(), lineno=36, col_offset=46), Name('doc', Param(), lineno=36, col_offset=58)], None, None, [Name('None', Load(), lineno=36, col_offset=29), Name('None', Load(), lineno=36, col_offset=40), Name('None', Load(), lineno=36, col_offset=52), Name('None', Load(), lineno=36, col_offset=62)]), [Assign([Attribute(Name('self', Load(), lineno=37, col_offset=8), 'type', Store(), lineno=37, col_offset=8)], Name('type', Load(), lineno=37, col_offset=20), lineno=37, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=38, col_offset=8), 'flags', Store(), lineno=38, col_offset=8)], Name('flags', Load(), lineno=38, col_offset=21), lineno=38, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=39, col_offset=8), 'cname', Store(), lineno=39, col_offset=8)], Name('cname', Load(), lineno=39, col_offset=21), lineno=39, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=40, col_offset=8), 'doc', Store(), lineno=40, col_offset=8)], Name('doc', Load(), lineno=40, col_offset=19), lineno=40, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=41, col_offset=8), 'name', Store(), lineno=41, col_offset=8)], Name('None', Load(), lineno=41, col_offset=20), lineno=41, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=42, col_offset=8), 'struct', Store(), lineno=42, col_offset=8)], Name('None', Load(), lineno=42, col_offset=22), lineno=42, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('register', arguments([Name('self', Param(), lineno=44, col_offset=17), Name('name', Param(), lineno=44, col_offset=23), Name('struct', Param(), lineno=44, col_offset=29)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=45, col_offset=8), 'name', Store(), lineno=45, col_offset=8)], Name('name', Load(), lineno=45, col_offset=20), lineno=45, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=46, col_offset=8), 'struct', Store(), lineno=46, col_offset=8)], Name('struct', Load(), lineno=46, col_offset=22), lineno=46, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=8), 'initvars', Load(), lineno=47, col_offset=8), [], [], None, None, lineno=47, col_offset=8), lineno=47, col_offset=8)], [], lineno=44, col_offset=4), FunctionDef('initvars', arguments([Name('self', Param(), lineno=49, col_offset=17)], None, None, []), [Assign([Name('v', Store(), lineno=50, col_offset=8), Attribute(Name('self', Load(), lineno=50, col_offset=12), 'vars', Store(), lineno=50, col_offset=12)], Dict([], [], lineno=50, col_offset=24), lineno=50, col_offset=8), Assign([Subscript(Name('v', Load(), lineno=51, col_offset=8), Index(Str('PythonName', lineno=51, col_offset=10)), Store(), lineno=51, col_offset=8)], Attribute(Name('self', Load(), lineno=51, col_offset=26), 'name', Load(), lineno=51, col_offset=26), lineno=51, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=52, col_offset=11), 'cname', Load(), lineno=52, col_offset=11), [IsNot()], [Name('None', Load(), lineno=52, col_offset=29)], lineno=52, col_offset=11), [Assign([Subscript(Name('v', Load(), lineno=53, col_offset=12), Index(Str('CName', lineno=53, col_offset=14)), Store(), lineno=53, col_offset=12)], Attribute(Name('self', Load(), lineno=53, col_offset=25), 'cname', Load(), lineno=53, col_offset=25), lineno=53, col_offset=12)], [Assign([Subscript(Name('v', Load(), lineno=55, col_offset=12), Index(Str('CName', lineno=55, col_offset=14)), Store(), lineno=55, col_offset=12)], Attribute(Name('self', Load(), lineno=55, col_offset=25), 'name', Load(), lineno=55, col_offset=25), lineno=55, col_offset=12)], lineno=52, col_offset=8), Assign([Subscript(Name('v', Load(), lineno=56, col_offset=8), Index(Str('Flags', lineno=56, col_offset=10)), Store(), lineno=56, col_offset=8)], BoolOp(Or(), [Attribute(Name('self', Load(), lineno=56, col_offset=21), 'flags', Load(), lineno=56, col_offset=21), Str('0', lineno=56, col_offset=35)], lineno=56, col_offset=21), lineno=56, col_offset=8), Assign([Subscript(Name('v', Load(), lineno=57, col_offset=8), Index(Str('Type', lineno=57, col_offset=10)), Store(), lineno=57, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=57, col_offset=20), 'get_type', Load(), lineno=57, col_offset=20), [], [], None, None, lineno=57, col_offset=20), lineno=57, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=58, col_offset=11), 'doc', Load(), lineno=58, col_offset=11), [IsNot()], [Name('None', Load(), lineno=58, col_offset=27)], lineno=58, col_offset=11), [Assign([Subscript(Name('v', Load(), lineno=59, col_offset=12), Index(Str('Docstring', lineno=59, col_offset=14)), Store(), lineno=59, col_offset=12)], Call(Name('cstring', Load(), lineno=59, col_offset=29), [Call(Name('unindent', Load(), lineno=59, col_offset=37), [Attribute(Name('self', Load(), lineno=59, col_offset=46), 'doc', Load(), lineno=59, col_offset=46)], [], None, None, lineno=59, col_offset=37)], [], None, None, lineno=59, col_offset=29), lineno=59, col_offset=12)], [], lineno=58, col_offset=8), Assign([Subscript(Name('v', Load(), lineno=60, col_offset=8), Index(Str('StructName', lineno=60, col_offset=10)), Store(), lineno=60, col_offset=8)], Attribute(Attribute(Name('self', Load(), lineno=60, col_offset=26), 'struct', Load(), lineno=60, col_offset=26), 'name', Load(), lineno=60, col_offset=26), lineno=60, col_offset=8)], [], lineno=49, col_offset=4), FunctionDef('get_type', arguments([Name('self', Param(), lineno=62, col_offset=17)], None, None, []), [Expr(Str('Deduce type code from struct specification if not defined', lineno=63, col_offset=8), lineno=63, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=64, col_offset=11), 'type', Load(), lineno=64, col_offset=11), [IsNot()], [Name('None', Load(), lineno=64, col_offset=28)], lineno=64, col_offset=11), [Return(Attribute(Name('self', Load(), lineno=65, col_offset=19), 'type', Load(), lineno=65, col_offset=19), lineno=65, col_offset=12)], [], lineno=64, col_offset=8), Assign([Name('ctype', Store(), lineno=66, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=66, col_offset=16), 'struct', Load(), lineno=66, col_offset=16), 'get_type', Load(), lineno=66, col_offset=16), [Attribute(Name('self', Load(), lineno=66, col_offset=37), 'name', Load(), lineno=66, col_offset=37)], [], None, None, lineno=66, col_offset=16), lineno=66, col_offset=8), Return(Subscript(Name('c2t', Load(), lineno=67, col_offset=15), Index(Name('ctype', Load(), lineno=67, col_offset=19)), Load(), lineno=67, col_offset=15), lineno=67, col_offset=8)], [], lineno=62, col_offset=4), FunctionDef('dump', arguments([Name('self', Param(), lineno=69, col_offset=13), Name('f', Param(), lineno=69, col_offset=19)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=70, col_offset=11), 'doc', Load(), lineno=70, col_offset=11), [Is()], [Name('None', Load(), lineno=70, col_offset=23)], lineno=70, col_offset=11), [Print(Name('f', Load(), lineno=71, col_offset=21), [BinOp(Attribute(Name('template', Load(), lineno=71, col_offset=24), 'memberdef_def', Load(), lineno=71, col_offset=24), Mod(), Attribute(Name('self', Load(), lineno=71, col_offset=49), 'vars', Load(), lineno=71, col_offset=49), lineno=71, col_offset=24)], True, lineno=71, col_offset=12)], [Print(Name('f', Load(), lineno=73, col_offset=21), [BinOp(Attribute(Name('template', Load(), lineno=73, col_offset=24), 'memberdef_def_doc', Load(), lineno=73, col_offset=24), Mod(), Attribute(Name('self', Load(), lineno=73, col_offset=53), 'vars', Load(), lineno=73, col_offset=53), lineno=73, col_offset=24)], True, lineno=73, col_offset=12)], lineno=70, col_offset=8)], [], lineno=69, col_offset=4)], [], lineno=34, col_offset=0)])
