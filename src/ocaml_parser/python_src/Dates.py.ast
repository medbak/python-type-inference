Module([Assign([Name('_MONTH_NAMES', Store(), lineno=44, col_offset=0)], List([Str('January', lineno=44, col_offset=17), Str('February', lineno=44, col_offset=28), Str('March', lineno=44, col_offset=40), Str('April', lineno=44, col_offset=49), Str('May', lineno=44, col_offset=58), Str('June', lineno=45, col_offset=17), Str('July', lineno=45, col_offset=25), Str('August', lineno=45, col_offset=33), Str('September', lineno=45, col_offset=43), Str('October', lineno=45, col_offset=56), Str('November', lineno=46, col_offset=17), Str('December', lineno=46, col_offset=29)], Load(), lineno=44, col_offset=15), lineno=44, col_offset=0), Assign([Name('_DAY_NAMES', Store(), lineno=48, col_offset=0)], List([Str('Friday', lineno=48, col_offset=15), Str('Saturday', lineno=48, col_offset=25), Str('Sunday', lineno=48, col_offset=37), Str('Monday', lineno=48, col_offset=47), Str('Tuesday', lineno=49, col_offset=15), Str('Wednesday', lineno=49, col_offset=26), Str('Thursday', lineno=49, col_offset=39)], Load(), lineno=48, col_offset=13), lineno=48, col_offset=0), Assign([Name('_DAYS_IN_MONTH', Store(), lineno=51, col_offset=0)], List([Num(31, lineno=51, col_offset=19), Num(28, lineno=51, col_offset=23), Num(31, lineno=51, col_offset=27), Num(30, lineno=51, col_offset=31), Num(31, lineno=51, col_offset=35), Num(30, lineno=51, col_offset=39), Num(31, lineno=51, col_offset=43), Num(31, lineno=51, col_offset=47), Num(30, lineno=51, col_offset=51), Num(31, lineno=51, col_offset=55), Num(30, lineno=51, col_offset=59), Num(31, lineno=51, col_offset=63)], Load(), lineno=51, col_offset=17), lineno=51, col_offset=0), Assign([Name('_DAYS_BEFORE_MONTH', Store(), lineno=53, col_offset=0)], List([], Load(), lineno=53, col_offset=21), lineno=53, col_offset=0), Assign([Name('dbm', Store(), lineno=54, col_offset=0)], Num(0, lineno=54, col_offset=6), lineno=54, col_offset=0), For(Name('dim', Store(), lineno=55, col_offset=4), Name('_DAYS_IN_MONTH', Load(), lineno=55, col_offset=11), [Expr(Call(Attribute(Name('_DAYS_BEFORE_MONTH', Load(), lineno=56, col_offset=4), 'append', Load(), lineno=56, col_offset=4), [Name('dbm', Load(), lineno=56, col_offset=30)], [], None, None, lineno=56, col_offset=4), lineno=56, col_offset=4), Assign([Name('dbm', Store(), lineno=57, col_offset=4)], BinOp(Name('dbm', Load(), lineno=57, col_offset=10), Add(), Name('dim', Load(), lineno=57, col_offset=16), lineno=57, col_offset=10), lineno=57, col_offset=4)], [], lineno=55, col_offset=0), Delete([Name('dbm', Del(), lineno=58, col_offset=4), Name('dim', Del(), lineno=58, col_offset=9)], lineno=58, col_offset=0), Assign([Name('_INT_TYPES', Store(), lineno=60, col_offset=0)], Tuple([Call(Name('type', Load(), lineno=60, col_offset=13), [Num(1, lineno=60, col_offset=18)], [], None, None, lineno=60, col_offset=13), Call(Name('type', Load(), lineno=60, col_offset=22), [Num(1L, lineno=60, col_offset=27)], [], None, None, lineno=60, col_offset=22)], Load(), lineno=60, col_offset=13), lineno=60, col_offset=0), FunctionDef('_is_leap', arguments([Name('year', Param(), lineno=62, col_offset=13)], None, None, []), [If(Compare(BinOp(Name('year', Load(), lineno=63, col_offset=7), Mod(), Num(4, lineno=63, col_offset=14), lineno=63, col_offset=7), [NotEq()], [Num(0, lineno=63, col_offset=19)], lineno=63, col_offset=7), [Return(Num(0, lineno=63, col_offset=29), lineno=63, col_offset=22)], [], lineno=63, col_offset=4), If(Compare(BinOp(Name('year', Load(), lineno=64, col_offset=7), Mod(), Num(400, lineno=64, col_offset=14), lineno=64, col_offset=7), [Eq()], [Num(0, lineno=64, col_offset=21)], lineno=64, col_offset=7), [Return(Num(1, lineno=64, col_offset=31), lineno=64, col_offset=24)], [], lineno=64, col_offset=4), Return(Compare(BinOp(Name('year', Load(), lineno=65, col_offset=11), Mod(), Num(100, lineno=65, col_offset=18), lineno=65, col_offset=11), [NotEq()], [Num(0, lineno=65, col_offset=25)], lineno=65, col_offset=11), lineno=65, col_offset=4)], [], lineno=62, col_offset=0), FunctionDef('_days_in_year', arguments([Name('year', Param(), lineno=67, col_offset=18)], None, None, []), [Return(BinOp(Num(365, lineno=68, col_offset=11), Add(), Call(Name('_is_leap', Load(), lineno=68, col_offset=17), [Name('year', Load(), lineno=68, col_offset=26)], [], None, None, lineno=68, col_offset=17), lineno=68, col_offset=11), lineno=68, col_offset=4)], [], lineno=67, col_offset=0), FunctionDef('_days_before_year', arguments([Name('year', Param(), lineno=70, col_offset=22)], None, None, []), [Return(BinOp(BinOp(BinOp(BinOp(Name('year', Load(), lineno=71, col_offset=11), Mult(), Num(365L, lineno=71, col_offset=16), lineno=71, col_offset=11), Add(), BinOp(BinOp(Name('year', Load(), lineno=71, col_offset=24), Add(), Num(3, lineno=71, col_offset=29), lineno=71, col_offset=24), FloorDiv(), Num(4, lineno=71, col_offset=33), lineno=71, col_offset=23), lineno=71, col_offset=11), Sub(), BinOp(BinOp(Name('year', Load(), lineno=71, col_offset=38), Add(), Num(99, lineno=71, col_offset=43), lineno=71, col_offset=38), FloorDiv(), Num(100, lineno=71, col_offset=48), lineno=71, col_offset=37), lineno=71, col_offset=35), Add(), BinOp(BinOp(Name('year', Load(), lineno=71, col_offset=55), Add(), Num(399, lineno=71, col_offset=60), lineno=71, col_offset=55), FloorDiv(), Num(400, lineno=71, col_offset=66), lineno=71, col_offset=54), lineno=71, col_offset=52), lineno=71, col_offset=4)], [], lineno=70, col_offset=0), FunctionDef('_days_in_month', arguments([Name('month', Param(), lineno=73, col_offset=19), Name('year', Param(), lineno=73, col_offset=26)], None, None, []), [If(BoolOp(And(), [Compare(Name('month', Load(), lineno=74, col_offset=7), [Eq()], [Num(2, lineno=74, col_offset=16)], lineno=74, col_offset=7), Call(Name('_is_leap', Load(), lineno=74, col_offset=22), [Name('year', Load(), lineno=74, col_offset=31)], [], None, None, lineno=74, col_offset=22)], lineno=74, col_offset=7), [Return(Num(29, lineno=74, col_offset=45), lineno=74, col_offset=38)], [], lineno=74, col_offset=4), Return(Subscript(Name('_DAYS_IN_MONTH', Load(), lineno=75, col_offset=11), Index(BinOp(Name('month', Load(), lineno=75, col_offset=26), Sub(), Num(1, lineno=75, col_offset=32), lineno=75, col_offset=26)), Load(), lineno=75, col_offset=11), lineno=75, col_offset=4)], [], lineno=73, col_offset=0), FunctionDef('_days_before_month', arguments([Name('month', Param(), lineno=77, col_offset=23), Name('year', Param(), lineno=77, col_offset=30)], None, None, []), [Return(BinOp(Subscript(Name('_DAYS_BEFORE_MONTH', Load(), lineno=78, col_offset=11), Index(BinOp(Name('month', Load(), lineno=78, col_offset=30), Sub(), Num(1, lineno=78, col_offset=36), lineno=78, col_offset=30)), Load(), lineno=78, col_offset=11), Add(), BoolOp(And(), [Compare(Name('month', Load(), lineno=78, col_offset=42), [Gt()], [Num(2, lineno=78, col_offset=50)], lineno=78, col_offset=42), Call(Name('_is_leap', Load(), lineno=78, col_offset=56), [Name('year', Load(), lineno=78, col_offset=65)], [], None, None, lineno=78, col_offset=56)], lineno=78, col_offset=42), lineno=78, col_offset=11), lineno=78, col_offset=4)], [], lineno=77, col_offset=0), FunctionDef('_date2num', arguments([Name('date', Param(), lineno=80, col_offset=14)], None, None, []), [Return(BinOp(BinOp(Call(Name('_days_before_year', Load(), lineno=81, col_offset=11), [Attribute(Name('date', Load(), lineno=81, col_offset=29), 'year', Load(), lineno=81, col_offset=29)], [], None, None, lineno=81, col_offset=11), Add(), Call(Name('_days_before_month', Load(), lineno=82, col_offset=11), [Attribute(Name('date', Load(), lineno=82, col_offset=30), 'month', Load(), lineno=82, col_offset=30), Attribute(Name('date', Load(), lineno=82, col_offset=42), 'year', Load(), lineno=82, col_offset=42)], [], None, None, lineno=82, col_offset=11), lineno=81, col_offset=11), Add(), Attribute(Name('date', Load(), lineno=83, col_offset=11), 'day', Load(), lineno=83, col_offset=11), lineno=82, col_offset=53), lineno=81, col_offset=4)], [], lineno=80, col_offset=0), Assign([Name('_DI400Y', Store(), lineno=85, col_offset=0)], Call(Name('_days_before_year', Load(), lineno=85, col_offset=10), [Num(400, lineno=85, col_offset=28)], [], None, None, lineno=85, col_offset=10), lineno=85, col_offset=0), FunctionDef('_num2date', arguments([Name('n', Param(), lineno=87, col_offset=14)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=88, col_offset=7), [Name('n', Load(), lineno=88, col_offset=12)], [], None, None, lineno=88, col_offset=7), [NotIn()], [Name('_INT_TYPES', Load(), lineno=88, col_offset=22)], lineno=88, col_offset=7), [Raise(Name('TypeError', Load(), lineno=89, col_offset=14), BinOp(Str('argument must be integer: %r', lineno=89, col_offset=25), Mod(), Call(Name('type', Load(), lineno=89, col_offset=58), [Name('n', Load(), lineno=89, col_offset=63)], [], None, None, lineno=89, col_offset=58), lineno=89, col_offset=25), None, lineno=89, col_offset=8)], [], lineno=88, col_offset=4), Assign([Name('ans', Store(), lineno=91, col_offset=4)], Call(Name('Date', Load(), lineno=91, col_offset=10), [Num(1, lineno=91, col_offset=15), Num(1, lineno=91, col_offset=17), Num(1, lineno=91, col_offset=19)], [], None, None, lineno=91, col_offset=10), lineno=91, col_offset=4), Delete([Attribute(Name('ans', Load(), lineno=92, col_offset=8), 'ord', Del(), lineno=92, col_offset=8), Attribute(Name('ans', Load(), lineno=92, col_offset=17), 'month', Del(), lineno=92, col_offset=17), Attribute(Name('ans', Load(), lineno=92, col_offset=28), 'day', Del(), lineno=92, col_offset=28), Attribute(Name('ans', Load(), lineno=92, col_offset=37), 'year', Del(), lineno=92, col_offset=37)], lineno=92, col_offset=4), Assign([Attribute(Name('ans', Load(), lineno=93, col_offset=4), 'ord', Store(), lineno=93, col_offset=4)], Name('n', Load(), lineno=93, col_offset=14), lineno=93, col_offset=4), Assign([Name('n400', Store(), lineno=95, col_offset=4)], BinOp(BinOp(Name('n', Load(), lineno=95, col_offset=12), Sub(), Num(1, lineno=95, col_offset=14), lineno=95, col_offset=12), FloorDiv(), Name('_DI400Y', Load(), lineno=95, col_offset=18), lineno=95, col_offset=11), lineno=95, col_offset=4), Assign([Tuple([Name('year', Store(), lineno=96, col_offset=4), Name('n', Store(), lineno=96, col_offset=10)], Store(), lineno=96, col_offset=4)], Tuple([BinOp(Num(400, lineno=96, col_offset=14), Mult(), Name('n400', Load(), lineno=96, col_offset=20), lineno=96, col_offset=14), BinOp(Name('n', Load(), lineno=96, col_offset=26), Sub(), BinOp(Name('_DI400Y', Load(), lineno=96, col_offset=30), Mult(), Name('n400', Load(), lineno=96, col_offset=40), lineno=96, col_offset=30), lineno=96, col_offset=26)], Load(), lineno=96, col_offset=14), lineno=96, col_offset=4), Assign([Name('more', Store(), lineno=97, col_offset=4)], BinOp(Name('n', Load(), lineno=97, col_offset=11), FloorDiv(), Num(365, lineno=97, col_offset=16), lineno=97, col_offset=11), lineno=97, col_offset=4), Assign([Name('dby', Store(), lineno=98, col_offset=4)], Call(Name('_days_before_year', Load(), lineno=98, col_offset=10), [Name('more', Load(), lineno=98, col_offset=28)], [], None, None, lineno=98, col_offset=10), lineno=98, col_offset=4), If(Compare(Name('dby', Load(), lineno=99, col_offset=7), [GtE()], [Name('n', Load(), lineno=99, col_offset=14)], lineno=99, col_offset=7), [Assign([Name('more', Store(), lineno=100, col_offset=8)], BinOp(Name('more', Load(), lineno=100, col_offset=15), Sub(), Num(1, lineno=100, col_offset=22), lineno=100, col_offset=15), lineno=100, col_offset=8), Assign([Name('dby', Store(), lineno=101, col_offset=8)], BinOp(Name('dby', Load(), lineno=101, col_offset=14), Sub(), Call(Name('_days_in_year', Load(), lineno=101, col_offset=20), [Name('more', Load(), lineno=101, col_offset=34)], [], None, None, lineno=101, col_offset=20), lineno=101, col_offset=14), lineno=101, col_offset=8)], [], lineno=99, col_offset=4), Assign([Tuple([Name('year', Store(), lineno=102, col_offset=4), Name('n', Store(), lineno=102, col_offset=10)], Store(), lineno=102, col_offset=4)], Tuple([BinOp(Name('year', Load(), lineno=102, col_offset=14), Add(), Name('more', Load(), lineno=102, col_offset=21), lineno=102, col_offset=14), Call(Name('int', Load(), lineno=102, col_offset=27), [BinOp(Name('n', Load(), lineno=102, col_offset=31), Sub(), Name('dby', Load(), lineno=102, col_offset=35), lineno=102, col_offset=31)], [], None, None, lineno=102, col_offset=27)], Load(), lineno=102, col_offset=14), lineno=102, col_offset=4), TryExcept([Assign([Name('year', Store(), lineno=104, col_offset=9)], Call(Name('int', Load(), lineno=104, col_offset=16), [Name('year', Load(), lineno=104, col_offset=20)], [], None, None, lineno=104, col_offset=16), lineno=104, col_offset=9)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=105, col_offset=12), Name('OverflowError', Load(), lineno=105, col_offset=24)], Load(), lineno=105, col_offset=12), None, [Pass( lineno=105, col_offset=40)], lineno=105, col_offset=4)], [], lineno=104, col_offset=4), Assign([Name('month', Store(), lineno=107, col_offset=4)], Call(Name('min', Load(), lineno=107, col_offset=12), [BinOp(BinOp(Name('n', Load(), lineno=107, col_offset=16), FloorDiv(), Num(29, lineno=107, col_offset=19), lineno=107, col_offset=16), Add(), Num(1, lineno=107, col_offset=24), lineno=107, col_offset=16), Num(12, lineno=107, col_offset=27)], [], None, None, lineno=107, col_offset=12), lineno=107, col_offset=4), Assign([Name('dbm', Store(), lineno=108, col_offset=4)], Call(Name('_days_before_month', Load(), lineno=108, col_offset=10), [Name('month', Load(), lineno=108, col_offset=29), Name('year', Load(), lineno=108, col_offset=36)], [], None, None, lineno=108, col_offset=10), lineno=108, col_offset=4), If(Compare(Name('dbm', Load(), lineno=109, col_offset=7), [GtE()], [Name('n', Load(), lineno=109, col_offset=14)], lineno=109, col_offset=7), [Assign([Name('month', Store(), lineno=110, col_offset=8)], BinOp(Name('month', Load(), lineno=110, col_offset=16), Sub(), Num(1, lineno=110, col_offset=24), lineno=110, col_offset=16), lineno=110, col_offset=8), Assign([Name('dbm', Store(), lineno=111, col_offset=8)], BinOp(Name('dbm', Load(), lineno=111, col_offset=14), Sub(), Call(Name('_days_in_month', Load(), lineno=111, col_offset=20), [Name('month', Load(), lineno=111, col_offset=35), Name('year', Load(), lineno=111, col_offset=42)], [], None, None, lineno=111, col_offset=20), lineno=111, col_offset=14), lineno=111, col_offset=8)], [], lineno=109, col_offset=4), Assign([Tuple([Attribute(Name('ans', Load(), lineno=113, col_offset=4), 'month', Store(), lineno=113, col_offset=4), Attribute(Name('ans', Load(), lineno=113, col_offset=15), 'day', Store(), lineno=113, col_offset=15), Attribute(Name('ans', Load(), lineno=113, col_offset=24), 'year', Store(), lineno=113, col_offset=24)], Store(), lineno=113, col_offset=4)], Tuple([Name('month', Load(), lineno=113, col_offset=35), BinOp(Name('n', Load(), lineno=113, col_offset=42), Sub(), Name('dbm', Load(), lineno=113, col_offset=44), lineno=113, col_offset=42), Name('year', Load(), lineno=113, col_offset=49)], Load(), lineno=113, col_offset=35), lineno=113, col_offset=4), Return(Name('ans', Load(), lineno=114, col_offset=11), lineno=114, col_offset=4)], [], lineno=87, col_offset=0), FunctionDef('_num2day', arguments([Name('n', Param(), lineno=116, col_offset=13)], None, None, []), [Return(Subscript(Name('_DAY_NAMES', Load(), lineno=117, col_offset=11), Index(Call(Name('int', Load(), lineno=117, col_offset=23), [BinOp(Name('n', Load(), lineno=117, col_offset=27), Mod(), Num(7, lineno=117, col_offset=31), lineno=117, col_offset=27)], [], None, None, lineno=117, col_offset=23)), Load(), lineno=117, col_offset=11), lineno=117, col_offset=4)], [], lineno=116, col_offset=0), ClassDef('Date', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=121, col_offset=17), Name('month', Param(), lineno=121, col_offset=23), Name('day', Param(), lineno=121, col_offset=30), Name('year', Param(), lineno=121, col_offset=35)], None, None, []), [If(UnaryOp(Not(), Compare(Num(1, lineno=122, col_offset=15), [LtE(), LtE()], [Name('month', Load(), lineno=122, col_offset=20), Num(12, lineno=122, col_offset=29)], lineno=122, col_offset=15), lineno=122, col_offset=11), [Raise(Name('ValueError', Load(), lineno=123, col_offset=18), BinOp(Str('month must be in 1..12: %r', lineno=123, col_offset=30), Mod(), Tuple([Name('month', Load(), lineno=123, col_offset=62)], Load(), lineno=123, col_offset=62), lineno=123, col_offset=30), None, lineno=123, col_offset=12)], [], lineno=122, col_offset=8), Assign([Name('dim', Store(), lineno=124, col_offset=8)], Call(Name('_days_in_month', Load(), lineno=124, col_offset=14), [Name('month', Load(), lineno=124, col_offset=29), Name('year', Load(), lineno=124, col_offset=36)], [], None, None, lineno=124, col_offset=14), lineno=124, col_offset=8), If(UnaryOp(Not(), Compare(Num(1, lineno=125, col_offset=15), [LtE(), LtE()], [Name('day', Load(), lineno=125, col_offset=20), Name('dim', Load(), lineno=125, col_offset=27)], lineno=125, col_offset=15), lineno=125, col_offset=11), [Raise(Name('ValueError', Load(), lineno=126, col_offset=18), BinOp(Str('day must be in 1..%r: %r', lineno=126, col_offset=30), Mod(), Tuple([Name('dim', Load(), lineno=126, col_offset=60), Name('day', Load(), lineno=126, col_offset=65)], Load(), lineno=126, col_offset=60), lineno=126, col_offset=30), None, lineno=126, col_offset=12)], [], lineno=125, col_offset=8), Assign([Tuple([Attribute(Name('self', Load(), lineno=127, col_offset=8), 'month', Store(), lineno=127, col_offset=8), Attribute(Name('self', Load(), lineno=127, col_offset=20), 'day', Store(), lineno=127, col_offset=20), Attribute(Name('self', Load(), lineno=127, col_offset=30), 'year', Store(), lineno=127, col_offset=30)], Store(), lineno=127, col_offset=8)], Tuple([Name('month', Load(), lineno=127, col_offset=42), Name('day', Load(), lineno=127, col_offset=49), Name('year', Load(), lineno=127, col_offset=54)], Load(), lineno=127, col_offset=42), lineno=127, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=128, col_offset=8), 'ord', Store(), lineno=128, col_offset=8)], Call(Name('_date2num', Load(), lineno=128, col_offset=19), [Name('self', Load(), lineno=128, col_offset=29)], [], None, None, lineno=128, col_offset=19), lineno=128, col_offset=8)], [], lineno=121, col_offset=4), FunctionDef('__setattr__', arguments([Name('self', Param(), lineno=131, col_offset=20), Name('name', Param(), lineno=131, col_offset=26), Name('value', Param(), lineno=131, col_offset=32)], None, None, []), [If(Call(Attribute(Attribute(Name('self', Load(), lineno=132, col_offset=11), '__dict__', Load(), lineno=132, col_offset=11), 'has_key', Load(), lineno=132, col_offset=11), [Name('name', Load(), lineno=132, col_offset=33)], [], None, None, lineno=132, col_offset=11), [Raise(Name('AttributeError', Load(), lineno=133, col_offset=18), BinOp(Str('read-only attribute ', lineno=133, col_offset=34), Add(), Name('name', Load(), lineno=133, col_offset=59), lineno=133, col_offset=34), None, lineno=133, col_offset=12)], [], lineno=132, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=134, col_offset=8), '__dict__', Load(), lineno=134, col_offset=8), Index(Name('name', Load(), lineno=134, col_offset=22)), Store(), lineno=134, col_offset=8)], Name('value', Load(), lineno=134, col_offset=30), lineno=134, col_offset=8)], [], lineno=131, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=136, col_offset=16), Name('other', Param(), lineno=136, col_offset=22)], None, None, []), [Return(Call(Name('cmp', Load(), lineno=137, col_offset=15), [Attribute(Name('self', Load(), lineno=137, col_offset=19), 'ord', Load(), lineno=137, col_offset=19), Attribute(Name('other', Load(), lineno=137, col_offset=29), 'ord', Load(), lineno=137, col_offset=29)], [], None, None, lineno=137, col_offset=15), lineno=137, col_offset=8)], [], lineno=136, col_offset=4), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=140, col_offset=17)], None, None, []), [Return(Call(Name('hash', Load(), lineno=141, col_offset=15), [Attribute(Name('self', Load(), lineno=141, col_offset=20), 'ord', Load(), lineno=141, col_offset=20)], [], None, None, lineno=141, col_offset=15), lineno=141, col_offset=8)], [], lineno=140, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=144, col_offset=17)], None, None, []), [Return(BinOp(Str('%.3s %2d %.3s %r', lineno=145, col_offset=15), Mod(), Tuple([Call(Attribute(Name('self', Load(), lineno=146, col_offset=14), 'weekday', Load(), lineno=146, col_offset=14), [], [], None, None, lineno=146, col_offset=14), Attribute(Name('self', Load(), lineno=147, col_offset=14), 'day', Load(), lineno=147, col_offset=14), Subscript(Name('_MONTH_NAMES', Load(), lineno=148, col_offset=14), Index(BinOp(Attribute(Name('self', Load(), lineno=148, col_offset=27), 'month', Load(), lineno=148, col_offset=27), Sub(), Num(1, lineno=148, col_offset=38), lineno=148, col_offset=27)), Load(), lineno=148, col_offset=14), Attribute(Name('self', Load(), lineno=149, col_offset=14), 'year', Load(), lineno=149, col_offset=14)], Load(), lineno=146, col_offset=14), lineno=145, col_offset=15), lineno=145, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('__add__', arguments([Name('self', Param(), lineno=152, col_offset=16), Name('n', Param(), lineno=152, col_offset=22)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=153, col_offset=11), [Name('n', Load(), lineno=153, col_offset=16)], [], None, None, lineno=153, col_offset=11), [NotIn()], [Name('_INT_TYPES', Load(), lineno=153, col_offset=26)], lineno=153, col_offset=11), [Raise(Name('TypeError', Load(), lineno=154, col_offset=18), BinOp(Str("can't add %r to date", lineno=154, col_offset=29), Mod(), Call(Name('type', Load(), lineno=154, col_offset=55), [Name('n', Load(), lineno=154, col_offset=60)], [], None, None, lineno=154, col_offset=55), lineno=154, col_offset=29), None, lineno=154, col_offset=12)], [], lineno=153, col_offset=8), Return(Call(Name('_num2date', Load(), lineno=155, col_offset=15), [BinOp(Attribute(Name('self', Load(), lineno=155, col_offset=25), 'ord', Load(), lineno=155, col_offset=25), Add(), Name('n', Load(), lineno=155, col_offset=36), lineno=155, col_offset=25)], [], None, None, lineno=155, col_offset=15), lineno=155, col_offset=8)], [], lineno=152, col_offset=4), Assign([Name('__radd__', Store(), lineno=156, col_offset=4)], Name('__add__', Load(), lineno=156, col_offset=15), lineno=156, col_offset=4), FunctionDef('__sub__', arguments([Name('self', Param(), lineno=159, col_offset=16), Name('other', Param(), lineno=159, col_offset=22)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=160, col_offset=11), [Name('other', Load(), lineno=160, col_offset=16)], [], None, None, lineno=160, col_offset=11), [In()], [Name('_INT_TYPES', Load(), lineno=160, col_offset=26)], lineno=160, col_offset=11), [Return(Call(Name('_num2date', Load(), lineno=161, col_offset=19), [BinOp(Attribute(Name('self', Load(), lineno=161, col_offset=29), 'ord', Load(), lineno=161, col_offset=29), Sub(), Name('other', Load(), lineno=161, col_offset=40), lineno=161, col_offset=29)], [], None, None, lineno=161, col_offset=19), lineno=161, col_offset=12)], [Return(BinOp(Attribute(Name('self', Load(), lineno=163, col_offset=19), 'ord', Load(), lineno=163, col_offset=19), Sub(), Attribute(Name('other', Load(), lineno=163, col_offset=30), 'ord', Load(), lineno=163, col_offset=30), lineno=163, col_offset=19), lineno=163, col_offset=12)], lineno=160, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('__rsub__', arguments([Name('self', Param(), lineno=166, col_offset=17), Name('other', Param(), lineno=166, col_offset=23)], None, None, []), [Raise(Name('TypeError', Load(), lineno=167, col_offset=14), Str("Can't subtract date from integer", lineno=167, col_offset=25), None, lineno=167, col_offset=8)], [], lineno=166, col_offset=4), FunctionDef('weekday', arguments([Name('self', Param(), lineno=169, col_offset=16)], None, None, []), [Return(Call(Name('_num2day', Load(), lineno=170, col_offset=15), [Attribute(Name('self', Load(), lineno=170, col_offset=24), 'ord', Load(), lineno=170, col_offset=24)], [], None, None, lineno=170, col_offset=15), lineno=170, col_offset=8)], [], lineno=169, col_offset=4)], [], lineno=120, col_offset=0), FunctionDef('today', arguments([], None, None, []), [Import([alias('time', None)], lineno=173, col_offset=4), Assign([Name('local', Store(), lineno=174, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=174, col_offset=12), 'localtime', Load(), lineno=174, col_offset=12), [Call(Attribute(Name('time', Load(), lineno=174, col_offset=27), 'time', Load(), lineno=174, col_offset=27), [], [], None, None, lineno=174, col_offset=27)], [], None, None, lineno=174, col_offset=12), lineno=174, col_offset=4), Return(Call(Name('Date', Load(), lineno=175, col_offset=11), [Subscript(Name('local', Load(), lineno=175, col_offset=16), Index(Num(1, lineno=175, col_offset=22)), Load(), lineno=175, col_offset=16), Subscript(Name('local', Load(), lineno=175, col_offset=26), Index(Num(2, lineno=175, col_offset=32)), Load(), lineno=175, col_offset=26), Subscript(Name('local', Load(), lineno=175, col_offset=36), Index(Num(0, lineno=175, col_offset=42)), Load(), lineno=175, col_offset=36)], [], None, None, lineno=175, col_offset=11), lineno=175, col_offset=4)], [], lineno=172, col_offset=0), ClassDef('DateTestError', [Name('Exception', Load(), lineno=177, col_offset=20)], [Pass( lineno=178, col_offset=4)], [], lineno=177, col_offset=0), FunctionDef('test', arguments([Name('firstyear', Param(), lineno=180, col_offset=9), Name('lastyear', Param(), lineno=180, col_offset=20)], None, None, []), [Assign([Name('a', Store(), lineno=181, col_offset=4)], Call(Name('Date', Load(), lineno=181, col_offset=8), [Num(9, lineno=181, col_offset=13), Num(30, lineno=181, col_offset=15), Num(1913, lineno=181, col_offset=18)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=4), Assign([Name('b', Store(), lineno=182, col_offset=4)], Call(Name('Date', Load(), lineno=182, col_offset=8), [Num(9, lineno=182, col_offset=13), Num(30, lineno=182, col_offset=15), Num(1914, lineno=182, col_offset=18)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=4), If(Compare(Call(Name('repr', Load(), lineno=183, col_offset=7), [Name('a', Load(), lineno=183, col_offset=12)], [], None, None, lineno=183, col_offset=7), [NotEq()], [Str('Tue 30 Sep 1913', lineno=183, col_offset=18)], lineno=183, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=184, col_offset=14), Str('__repr__ failure', lineno=184, col_offset=29), None, lineno=184, col_offset=8)], [], lineno=183, col_offset=4), If(BoolOp(Or(), [UnaryOp(Not(), Compare(Name('a', Load(), lineno=185, col_offset=12), [Lt()], [Name('b', Load(), lineno=185, col_offset=16)], lineno=185, col_offset=12), lineno=185, col_offset=8), Compare(Name('a', Load(), lineno=185, col_offset=22), [Eq()], [Name('b', Load(), lineno=185, col_offset=27)], lineno=185, col_offset=22), Compare(Name('a', Load(), lineno=185, col_offset=32), [Gt()], [Name('b', Load(), lineno=185, col_offset=36)], lineno=185, col_offset=32), Compare(Name('b', Load(), lineno=185, col_offset=41), [NotEq()], [Name('b', Load(), lineno=185, col_offset=46)], lineno=185, col_offset=41)], lineno=185, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=186, col_offset=14), Str('__cmp__ failure', lineno=186, col_offset=29), None, lineno=186, col_offset=8)], [], lineno=185, col_offset=4), If(BoolOp(Or(), [Compare(BinOp(Name('a', Load(), lineno=187, col_offset=7), Add(), Num(365, lineno=187, col_offset=9), lineno=187, col_offset=7), [NotEq()], [Name('b', Load(), lineno=187, col_offset=16)], lineno=187, col_offset=7), Compare(BinOp(Num(365, lineno=187, col_offset=21), Add(), Name('a', Load(), lineno=187, col_offset=25), lineno=187, col_offset=21), [NotEq()], [Name('b', Load(), lineno=187, col_offset=30)], lineno=187, col_offset=21)], lineno=187, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=188, col_offset=14), Str('__add__ failure', lineno=188, col_offset=29), None, lineno=188, col_offset=8)], [], lineno=187, col_offset=4), If(BoolOp(Or(), [Compare(BinOp(Name('b', Load(), lineno=189, col_offset=7), Sub(), Name('a', Load(), lineno=189, col_offset=9), lineno=189, col_offset=7), [NotEq()], [Num(365, lineno=189, col_offset=14)], lineno=189, col_offset=7), Compare(BinOp(Name('b', Load(), lineno=189, col_offset=21), Sub(), Num(365, lineno=189, col_offset=23), lineno=189, col_offset=21), [NotEq()], [Name('a', Load(), lineno=189, col_offset=30)], lineno=189, col_offset=21)], lineno=189, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=190, col_offset=14), Str('__sub__ failure', lineno=190, col_offset=29), None, lineno=190, col_offset=8)], [], lineno=189, col_offset=4), TryExcept([Assign([Name('x', Store(), lineno=192, col_offset=8)], BinOp(Num(1, lineno=192, col_offset=12), Sub(), Name('a', Load(), lineno=192, col_offset=16), lineno=192, col_offset=12), lineno=192, col_offset=8), Raise(Name('DateTestError', Load(), lineno=193, col_offset=14), Str('int-date should have failed', lineno=193, col_offset=29), None, lineno=193, col_offset=8)], [ExceptHandler(Name('TypeError', Load(), lineno=194, col_offset=11), None, [Pass( lineno=195, col_offset=8)], lineno=194, col_offset=4)], [], lineno=191, col_offset=4), TryExcept([Assign([Name('x', Store(), lineno=197, col_offset=8)], BinOp(Name('a', Load(), lineno=197, col_offset=12), Add(), Name('b', Load(), lineno=197, col_offset=16), lineno=197, col_offset=12), lineno=197, col_offset=8), Raise(Name('DateTestError', Load(), lineno=198, col_offset=14), Str('date+date should have failed', lineno=198, col_offset=29), None, lineno=198, col_offset=8)], [ExceptHandler(Name('TypeError', Load(), lineno=199, col_offset=11), None, [Pass( lineno=200, col_offset=8)], lineno=199, col_offset=4)], [], lineno=196, col_offset=4), If(Compare(Call(Attribute(Name('a', Load(), lineno=201, col_offset=7), 'weekday', Load(), lineno=201, col_offset=7), [], [], None, None, lineno=201, col_offset=7), [NotEq()], [Str('Tuesday', lineno=201, col_offset=22)], lineno=201, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=202, col_offset=14), Str('weekday() failure', lineno=202, col_offset=29), None, lineno=202, col_offset=8)], [], lineno=201, col_offset=4), If(BoolOp(Or(), [Compare(Call(Name('max', Load(), lineno=203, col_offset=7), [Name('a', Load(), lineno=203, col_offset=11), Name('b', Load(), lineno=203, col_offset=13)], [], None, None, lineno=203, col_offset=7), [IsNot()], [Name('b', Load(), lineno=203, col_offset=23)], lineno=203, col_offset=7), Compare(Call(Name('min', Load(), lineno=203, col_offset=28), [Name('a', Load(), lineno=203, col_offset=32), Name('b', Load(), lineno=203, col_offset=34)], [], None, None, lineno=203, col_offset=28), [IsNot()], [Name('a', Load(), lineno=203, col_offset=44)], lineno=203, col_offset=28)], lineno=203, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=204, col_offset=14), Str('min/max failure', lineno=204, col_offset=29), None, lineno=204, col_offset=8)], [], lineno=203, col_offset=4), Assign([Name('d', Store(), lineno=205, col_offset=4)], Dict([BinOp(Name('a', Load(), lineno=205, col_offset=9), Sub(), Num(1, lineno=205, col_offset=11), lineno=205, col_offset=9), Name('b', Load(), lineno=205, col_offset=16)], [Name('b', Load(), lineno=205, col_offset=13), BinOp(Name('a', Load(), lineno=205, col_offset=18), Add(), Num(1, lineno=205, col_offset=20), lineno=205, col_offset=18)], lineno=205, col_offset=8), lineno=205, col_offset=4), If(BoolOp(Or(), [Compare(Subscript(Name('d', Load(), lineno=206, col_offset=7), Index(BinOp(Name('b', Load(), lineno=206, col_offset=9), Sub(), Num(366, lineno=206, col_offset=11), lineno=206, col_offset=9)), Load(), lineno=206, col_offset=7), [NotEq()], [Name('b', Load(), lineno=206, col_offset=19)], lineno=206, col_offset=7), Compare(Subscript(Name('d', Load(), lineno=206, col_offset=24), Index(BinOp(Name('a', Load(), lineno=206, col_offset=26), Add(), BinOp(Name('b', Load(), lineno=206, col_offset=29), Sub(), Name('a', Load(), lineno=206, col_offset=31), lineno=206, col_offset=29), lineno=206, col_offset=26)), Load(), lineno=206, col_offset=24), [NotEq()], [Call(Name('Date', Load(), lineno=206, col_offset=38), [Num(10, lineno=206, col_offset=43), Num(1, lineno=206, col_offset=46), Num(1913, lineno=206, col_offset=48)], [], None, None, lineno=206, col_offset=38)], lineno=206, col_offset=24)], lineno=206, col_offset=7), [Raise(Name('DateTestError', Load(), lineno=207, col_offset=14), Str('dictionary failure', lineno=207, col_offset=29), None, lineno=207, col_offset=8)], [], lineno=206, col_offset=4), Assign([Name('lord', Store(), lineno=212, col_offset=4)], Call(Name('_days_before_year', Load(), lineno=212, col_offset=11), [Name('firstyear', Load(), lineno=212, col_offset=29)], [], None, None, lineno=212, col_offset=11), lineno=212, col_offset=4), Assign([Name('y', Store(), lineno=213, col_offset=4)], Name('firstyear', Load(), lineno=213, col_offset=8), lineno=213, col_offset=4), While(Compare(Name('y', Load(), lineno=214, col_offset=10), [LtE()], [Name('lastyear', Load(), lineno=214, col_offset=15)], lineno=214, col_offset=10), [Assign([Name('ford', Store(), lineno=215, col_offset=8)], BinOp(Name('lord', Load(), lineno=215, col_offset=15), Add(), Num(1, lineno=215, col_offset=22), lineno=215, col_offset=15), lineno=215, col_offset=8), Assign([Name('lord', Store(), lineno=216, col_offset=8)], BinOp(BinOp(Name('ford', Load(), lineno=216, col_offset=15), Add(), Call(Name('_days_in_year', Load(), lineno=216, col_offset=22), [Name('y', Load(), lineno=216, col_offset=36)], [], None, None, lineno=216, col_offset=22), lineno=216, col_offset=15), Sub(), Num(1, lineno=216, col_offset=41), lineno=216, col_offset=39), lineno=216, col_offset=8), Assign([Tuple([Name('fd', Store(), lineno=217, col_offset=8), Name('ld', Store(), lineno=217, col_offset=12)], Store(), lineno=217, col_offset=8)], Tuple([Call(Name('Date', Load(), lineno=217, col_offset=17), [Num(1, lineno=217, col_offset=22), Num(1, lineno=217, col_offset=24), Name('y', Load(), lineno=217, col_offset=26)], [], None, None, lineno=217, col_offset=17), Call(Name('Date', Load(), lineno=217, col_offset=30), [Num(12, lineno=217, col_offset=35), Num(31, lineno=217, col_offset=38), Name('y', Load(), lineno=217, col_offset=41)], [], None, None, lineno=217, col_offset=30)], Load(), lineno=217, col_offset=17), lineno=217, col_offset=8), If(Compare(Tuple([Attribute(Name('fd', Load(), lineno=218, col_offset=12), 'ord', Load(), lineno=218, col_offset=12), Attribute(Name('ld', Load(), lineno=218, col_offset=19), 'ord', Load(), lineno=218, col_offset=19)], Load(), lineno=218, col_offset=12), [NotEq()], [Tuple([Name('ford', Load(), lineno=218, col_offset=31), Name('lord', Load(), lineno=218, col_offset=36)], Load(), lineno=218, col_offset=31)], lineno=218, col_offset=11), [Raise(Name('DateTestError', Load(), lineno=219, col_offset=18), Tuple([Str('date->num failed', lineno=219, col_offset=34), Name('y', Load(), lineno=219, col_offset=54)], Load(), lineno=219, col_offset=34), None, lineno=219, col_offset=12)], [], lineno=218, col_offset=8), Assign([Tuple([Name('fd', Store(), lineno=220, col_offset=8), Name('ld', Store(), lineno=220, col_offset=12)], Store(), lineno=220, col_offset=8)], Tuple([Call(Name('_num2date', Load(), lineno=220, col_offset=17), [Name('ford', Load(), lineno=220, col_offset=27)], [], None, None, lineno=220, col_offset=17), Call(Name('_num2date', Load(), lineno=220, col_offset=34), [Name('lord', Load(), lineno=220, col_offset=44)], [], None, None, lineno=220, col_offset=34)], Load(), lineno=220, col_offset=17), lineno=220, col_offset=8), If(Compare(Tuple([Num(1, lineno=221, col_offset=12), Num(1, lineno=221, col_offset=14), Name('y', Load(), lineno=221, col_offset=16), Num(12, lineno=221, col_offset=18), Num(31, lineno=221, col_offset=21), Name('y', Load(), lineno=221, col_offset=24)], Load(), lineno=221, col_offset=12), [NotEq()], [Tuple([Attribute(Name('fd', Load(), lineno=222, col_offset=12), 'month', Load(), lineno=222, col_offset=12), Attribute(Name('fd', Load(), lineno=222, col_offset=21), 'day', Load(), lineno=222, col_offset=21), Attribute(Name('fd', Load(), lineno=222, col_offset=28), 'year', Load(), lineno=222, col_offset=28), Attribute(Name('ld', Load(), lineno=222, col_offset=36), 'month', Load(), lineno=222, col_offset=36), Attribute(Name('ld', Load(), lineno=222, col_offset=45), 'day', Load(), lineno=222, col_offset=45), Attribute(Name('ld', Load(), lineno=222, col_offset=52), 'year', Load(), lineno=222, col_offset=52)], Load(), lineno=222, col_offset=12)], lineno=221, col_offset=11), [Raise(Name('DateTestError', Load(), lineno=223, col_offset=18), Tuple([Str('num->date failed', lineno=223, col_offset=34), Name('y', Load(), lineno=223, col_offset=54)], Load(), lineno=223, col_offset=34), None, lineno=223, col_offset=12)], [], lineno=221, col_offset=8), Assign([Name('y', Store(), lineno=224, col_offset=8)], BinOp(Name('y', Load(), lineno=224, col_offset=12), Add(), Num(1, lineno=224, col_offset=16), lineno=224, col_offset=12), lineno=224, col_offset=8)], [], lineno=214, col_offset=4)], [], lineno=180, col_offset=0), If(Compare(Name('__name__', Load(), lineno=226, col_offset=3), [Eq()], [Str('__main__', lineno=226, col_offset=15)], lineno=226, col_offset=3), [Expr(Call(Name('test', Load(), lineno=227, col_offset=4), [Num(1850, lineno=227, col_offset=9), Num(2150, lineno=227, col_offset=15)], [], None, None, lineno=227, col_offset=4), lineno=227, col_offset=4)], [], lineno=226, col_offset=0)])
