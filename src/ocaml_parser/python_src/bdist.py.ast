Module([Expr(Str("distutils.command.bdist\n\nImplements the Distutils 'bdist' command (create a built [binary]\ndistribution).", lineno=4, col_offset=-1), lineno=4, col_offset=-1), Assign([Name('__revision__', Store(), lineno=6, col_offset=0)], Str('$Id: bdist.py 77761 2010-01-26 22:46:15Z tarek.ziade $', lineno=6, col_offset=15), lineno=6, col_offset=0), Import([alias('os', None)], lineno=8, col_offset=0), ImportFrom('distutils.util', [alias('get_platform', None)], 0, lineno=10, col_offset=0), ImportFrom('distutils.core', [alias('Command', None)], 0, lineno=11, col_offset=0), ImportFrom('distutils.errors', [alias('DistutilsPlatformError', None), alias('DistutilsOptionError', None)], 0, lineno=12, col_offset=0), FunctionDef('show_formats', arguments([], None, None, []), [Expr(Str('Print list of available formats (arguments to "--format" option).\n    ', lineno=17, col_offset=-1), lineno=17, col_offset=-1), ImportFrom('distutils.fancy_getopt', [alias('FancyGetopt', None)], 0, lineno=18, col_offset=4), Assign([Name('formats', Store(), lineno=19, col_offset=4)], List([], Load(), lineno=19, col_offset=14), lineno=19, col_offset=4), For(Name('format', Store(), lineno=20, col_offset=8), Attribute(Name('bdist', Load(), lineno=20, col_offset=18), 'format_commands', Load(), lineno=20, col_offset=18), [Expr(Call(Attribute(Name('formats', Load(), lineno=21, col_offset=8), 'append', Load(), lineno=21, col_offset=8), [Tuple([BinOp(Str('formats=', lineno=21, col_offset=24), Add(), Name('format', Load(), lineno=21, col_offset=37), lineno=21, col_offset=24), Name('None', Load(), lineno=21, col_offset=45), Subscript(Subscript(Attribute(Name('bdist', Load(), lineno=22, col_offset=24), 'format_command', Load(), lineno=22, col_offset=24), Index(Name('format', Load(), lineno=22, col_offset=45)), Load(), lineno=22, col_offset=24), Index(Num(1, lineno=22, col_offset=53)), Load(), lineno=22, col_offset=24)], Load(), lineno=21, col_offset=24)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=20, col_offset=4), Assign([Name('pretty_printer', Store(), lineno=23, col_offset=4)], Call(Name('FancyGetopt', Load(), lineno=23, col_offset=21), [Name('formats', Load(), lineno=23, col_offset=33)], [], None, None, lineno=23, col_offset=21), lineno=23, col_offset=4), Expr(Call(Attribute(Name('pretty_printer', Load(), lineno=24, col_offset=4), 'print_help', Load(), lineno=24, col_offset=4), [Str('List of available distribution formats:', lineno=24, col_offset=30)], [], None, None, lineno=24, col_offset=4), lineno=24, col_offset=4)], [], lineno=15, col_offset=0), ClassDef('bdist', [Name('Command', Load(), lineno=27, col_offset=12)], [Assign([Name('description', Store(), lineno=29, col_offset=4)], Str('create a built (binary) distribution', lineno=29, col_offset=18), lineno=29, col_offset=4), Assign([Name('user_options', Store(), lineno=31, col_offset=4)], List([Tuple([Str('bdist-base=', lineno=31, col_offset=21), Str('b', lineno=31, col_offset=36), Str('temporary directory for creating built distributions', lineno=32, col_offset=21)], Load(), lineno=31, col_offset=21), Tuple([Str('plat-name=', lineno=33, col_offset=21), Str('p', lineno=33, col_offset=35), BinOp(Str('platform name to embed in generated filenames (default: %s)', lineno=34, col_offset=21), Mod(), Call(Name('get_platform', Load(), lineno=35, col_offset=39), [], [], None, None, lineno=35, col_offset=39), lineno=34, col_offset=21)], Load(), lineno=33, col_offset=21), Tuple([Str('formats=', lineno=36, col_offset=21), Name('None', Load(), lineno=36, col_offset=33), Str('formats for distribution (comma-separated list)', lineno=37, col_offset=21)], Load(), lineno=36, col_offset=21), Tuple([Str('dist-dir=', lineno=38, col_offset=21), Str('d', lineno=38, col_offset=34), Str('directory to put final built distributions in [default: dist]', lineno=39, col_offset=21)], Load(), lineno=38, col_offset=21), Tuple([Str('skip-build', lineno=41, col_offset=21), Name('None', Load(), lineno=41, col_offset=35), Str('skip rebuilding everything (for testing/debugging)', lineno=42, col_offset=21)], Load(), lineno=41, col_offset=21), Tuple([Str('owner=', lineno=43, col_offset=21), Str('u', lineno=43, col_offset=31), Str('Owner name used when creating a tar file [default: current user]', lineno=44, col_offset=21)], Load(), lineno=43, col_offset=21), Tuple([Str('group=', lineno=46, col_offset=21), Str('g', lineno=46, col_offset=31), Str('Group name used when creating a tar file [default: current group]', lineno=47, col_offset=21)], Load(), lineno=46, col_offset=21)], Load(), lineno=31, col_offset=19), lineno=31, col_offset=4), Assign([Name('boolean_options', Store(), lineno=51, col_offset=4)], List([Str('skip-build', lineno=51, col_offset=23)], Load(), lineno=51, col_offset=22), lineno=51, col_offset=4), Assign([Name('help_options', Store(), lineno=53, col_offset=4)], List([Tuple([Str('help-formats', lineno=54, col_offset=9), Name('None', Load(), lineno=54, col_offset=25), Str('lists available distribution formats', lineno=55, col_offset=9), Name('show_formats', Load(), lineno=55, col_offset=49)], Load(), lineno=54, col_offset=9)], Load(), lineno=53, col_offset=19), lineno=53, col_offset=4), Assign([Name('no_format_option', Store(), lineno=59, col_offset=4)], Tuple([Str('bdist_rpm', lineno=59, col_offset=24)], Load(), lineno=59, col_offset=24), lineno=59, col_offset=4), Assign([Name('default_format', Store(), lineno=63, col_offset=4)], Dict([Str('posix', lineno=63, col_offset=22), Str('nt', lineno=64, col_offset=22), Str('os2', lineno=65, col_offset=22)], [Str('gztar', lineno=63, col_offset=31), Str('zip', lineno=64, col_offset=28), Str('zip', lineno=65, col_offset=29)], lineno=63, col_offset=21), lineno=63, col_offset=4), Assign([Name('format_commands', Store(), lineno=68, col_offset=4)], List([Str('rpm', lineno=68, col_offset=23), Str('gztar', lineno=68, col_offset=30), Str('bztar', lineno=68, col_offset=39), Str('ztar', lineno=68, col_offset=48), Str('tar', lineno=68, col_offset=56), Str('wininst', lineno=69, col_offset=23), Str('zip', lineno=69, col_offset=34), Str('msi', lineno=69, col_offset=41)], Load(), lineno=68, col_offset=22), lineno=68, col_offset=4), Assign([Name('format_command', Store(), lineno=72, col_offset=4)], Dict([Str('rpm', lineno=72, col_offset=22), Str('gztar', lineno=73, col_offset=22), Str('bztar', lineno=74, col_offset=22), Str('ztar', lineno=75, col_offset=22), Str('tar', lineno=76, col_offset=22), Str('wininst', lineno=77, col_offset=22), Str('zip', lineno=79, col_offset=22), Str('msi', lineno=80, col_offset=22)], [Tuple([Str('bdist_rpm', lineno=72, col_offset=32), Str('RPM distribution', lineno=72, col_offset=46)], Load(), lineno=72, col_offset=32), Tuple([Str('bdist_dumb', lineno=73, col_offset=32), Str("gzip'ed tar file", lineno=73, col_offset=46)], Load(), lineno=73, col_offset=32), Tuple([Str('bdist_dumb', lineno=74, col_offset=32), Str("bzip2'ed tar file", lineno=74, col_offset=46)], Load(), lineno=74, col_offset=32), Tuple([Str('bdist_dumb', lineno=75, col_offset=32), Str('compressed tar file', lineno=75, col_offset=46)], Load(), lineno=75, col_offset=32), Tuple([Str('bdist_dumb', lineno=76, col_offset=32), Str('tar file', lineno=76, col_offset=46)], Load(), lineno=76, col_offset=32), Tuple([Str('bdist_wininst', lineno=77, col_offset=34), Str('Windows executable installer', lineno=78, col_offset=34)], Load(), lineno=77, col_offset=34), Tuple([Str('bdist_dumb', lineno=79, col_offset=32), Str('ZIP file', lineno=79, col_offset=46)], Load(), lineno=79, col_offset=32), Tuple([Str('bdist_msi', lineno=80, col_offset=32), Str('Microsoft Installer', lineno=80, col_offset=46)], Load(), lineno=80, col_offset=32)], lineno=72, col_offset=21), lineno=72, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=84, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=85, col_offset=8), 'bdist_base', Store(), lineno=85, col_offset=8)], Name('None', Load(), lineno=85, col_offset=26), lineno=85, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=86, col_offset=8), 'plat_name', Store(), lineno=86, col_offset=8)], Name('None', Load(), lineno=86, col_offset=25), lineno=86, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=87, col_offset=8), 'formats', Store(), lineno=87, col_offset=8)], Name('None', Load(), lineno=87, col_offset=23), lineno=87, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=88, col_offset=8), 'dist_dir', Store(), lineno=88, col_offset=8)], Name('None', Load(), lineno=88, col_offset=24), lineno=88, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=89, col_offset=8), 'skip_build', Store(), lineno=89, col_offset=8)], Num(0, lineno=89, col_offset=26), lineno=89, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=90, col_offset=8), 'group', Store(), lineno=90, col_offset=8)], Name('None', Load(), lineno=90, col_offset=21), lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=91, col_offset=8), 'owner', Store(), lineno=91, col_offset=8)], Name('None', Load(), lineno=91, col_offset=21), lineno=91, col_offset=8)], [], lineno=84, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=93, col_offset=25)], None, None, []), [If(Compare(Attribute(Name('self', Load(), lineno=95, col_offset=11), 'plat_name', Load(), lineno=95, col_offset=11), [Is()], [Name('None', Load(), lineno=95, col_offset=29)], lineno=95, col_offset=11), [If(Attribute(Name('self', Load(), lineno=96, col_offset=15), 'skip_build', Load(), lineno=96, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=97, col_offset=16), 'plat_name', Store(), lineno=97, col_offset=16)], Call(Name('get_platform', Load(), lineno=97, col_offset=33), [], [], None, None, lineno=97, col_offset=33), lineno=97, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=99, col_offset=16), 'plat_name', Store(), lineno=99, col_offset=16)], Attribute(Call(Attribute(Name('self', Load(), lineno=99, col_offset=33), 'get_finalized_command', Load(), lineno=99, col_offset=33), [Str('build', lineno=99, col_offset=60)], [], None, None, lineno=99, col_offset=33), 'plat_name', Load(), lineno=99, col_offset=33), lineno=99, col_offset=16)], lineno=96, col_offset=12)], [], lineno=95, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=104, col_offset=11), 'bdist_base', Load(), lineno=104, col_offset=11), [Is()], [Name('None', Load(), lineno=104, col_offset=30)], lineno=104, col_offset=11), [Assign([Name('build_base', Store(), lineno=105, col_offset=12)], Attribute(Call(Attribute(Name('self', Load(), lineno=105, col_offset=25), 'get_finalized_command', Load(), lineno=105, col_offset=25), [Str('build', lineno=105, col_offset=52)], [], None, None, lineno=105, col_offset=25), 'build_base', Load(), lineno=105, col_offset=25), lineno=105, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=106, col_offset=12), 'bdist_base', Store(), lineno=106, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=106, col_offset=30), 'path', Load(), lineno=106, col_offset=30), 'join', Load(), lineno=106, col_offset=30), [Name('build_base', Load(), lineno=106, col_offset=43), BinOp(Str('bdist.', lineno=107, col_offset=43), Add(), Attribute(Name('self', Load(), lineno=107, col_offset=54), 'plat_name', Load(), lineno=107, col_offset=54), lineno=107, col_offset=43)], [], None, None, lineno=106, col_offset=30), lineno=106, col_offset=12)], [], lineno=104, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=8), 'ensure_string_list', Load(), lineno=109, col_offset=8), [Str('formats', lineno=109, col_offset=32)], [], None, None, lineno=109, col_offset=8), lineno=109, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=110, col_offset=11), 'formats', Load(), lineno=110, col_offset=11), [Is()], [Name('None', Load(), lineno=110, col_offset=27)], lineno=110, col_offset=11), [TryExcept([Assign([Attribute(Name('self', Load(), lineno=112, col_offset=16), 'formats', Store(), lineno=112, col_offset=16)], List([Subscript(Attribute(Name('self', Load(), lineno=112, col_offset=32), 'default_format', Load(), lineno=112, col_offset=32), Index(Attribute(Name('os', Load(), lineno=112, col_offset=52), 'name', Load(), lineno=112, col_offset=52)), Load(), lineno=112, col_offset=32)], Load(), lineno=112, col_offset=31), lineno=112, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=113, col_offset=19), None, [Raise(Name('DistutilsPlatformError', Load(), lineno=114, col_offset=22), BinOp(Str("don't know how to create built distributions ", lineno=115, col_offset=22), Add(), BinOp(Str('on platform %s', lineno=116, col_offset=22), Mod(), Attribute(Name('os', Load(), lineno=116, col_offset=41), 'name', Load(), lineno=116, col_offset=41), lineno=116, col_offset=22), lineno=115, col_offset=22), None, lineno=114, col_offset=16)], lineno=113, col_offset=12)], [], lineno=111, col_offset=12)], [], lineno=110, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=118, col_offset=11), 'dist_dir', Load(), lineno=118, col_offset=11), [Is()], [Name('None', Load(), lineno=118, col_offset=28)], lineno=118, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=119, col_offset=12), 'dist_dir', Store(), lineno=119, col_offset=12)], Str('dist', lineno=119, col_offset=28), lineno=119, col_offset=12)], [], lineno=118, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=121, col_offset=12)], None, None, []), [Assign([Name('commands', Store(), lineno=123, col_offset=8)], List([], Load(), lineno=123, col_offset=19), lineno=123, col_offset=8), For(Name('format', Store(), lineno=124, col_offset=12), Attribute(Name('self', Load(), lineno=124, col_offset=22), 'formats', Load(), lineno=124, col_offset=22), [TryExcept([Expr(Call(Attribute(Name('commands', Load(), lineno=126, col_offset=16), 'append', Load(), lineno=126, col_offset=16), [Subscript(Subscript(Attribute(Name('self', Load(), lineno=126, col_offset=32), 'format_command', Load(), lineno=126, col_offset=32), Index(Name('format', Load(), lineno=126, col_offset=52)), Load(), lineno=126, col_offset=32), Index(Num(0, lineno=126, col_offset=60)), Load(), lineno=126, col_offset=32)], [], None, None, lineno=126, col_offset=16), lineno=126, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=127, col_offset=19), None, [Raise(Name('DistutilsOptionError', Load(), lineno=128, col_offset=22), BinOp(Str("invalid format '%s'", lineno=128, col_offset=44), Mod(), Name('format', Load(), lineno=128, col_offset=68), lineno=128, col_offset=44), None, lineno=128, col_offset=16)], lineno=127, col_offset=12)], [], lineno=125, col_offset=12)], [], lineno=124, col_offset=8), For(Name('i', Store(), lineno=131, col_offset=12), Call(Name('range', Load(), lineno=131, col_offset=17), [Call(Name('len', Load(), lineno=131, col_offset=23), [Attribute(Name('self', Load(), lineno=131, col_offset=27), 'formats', Load(), lineno=131, col_offset=27)], [], None, None, lineno=131, col_offset=23)], [], None, None, lineno=131, col_offset=17), [Assign([Name('cmd_name', Store(), lineno=132, col_offset=12)], Subscript(Name('commands', Load(), lineno=132, col_offset=23), Index(Name('i', Load(), lineno=132, col_offset=32)), Load(), lineno=132, col_offset=23), lineno=132, col_offset=12), Assign([Name('sub_cmd', Store(), lineno=133, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=133, col_offset=22), 'reinitialize_command', Load(), lineno=133, col_offset=22), [Name('cmd_name', Load(), lineno=133, col_offset=48)], [], None, None, lineno=133, col_offset=22), lineno=133, col_offset=12), If(Compare(Name('cmd_name', Load(), lineno=134, col_offset=15), [NotIn()], [Attribute(Name('self', Load(), lineno=134, col_offset=31), 'no_format_option', Load(), lineno=134, col_offset=31)], lineno=134, col_offset=15), [Assign([Attribute(Name('sub_cmd', Load(), lineno=135, col_offset=16), 'format', Store(), lineno=135, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=135, col_offset=33), 'formats', Load(), lineno=135, col_offset=33), Index(Name('i', Load(), lineno=135, col_offset=46)), Load(), lineno=135, col_offset=33), lineno=135, col_offset=16)], [], lineno=134, col_offset=12), If(Compare(Name('cmd_name', Load(), lineno=138, col_offset=15), [Eq()], [Str('bdist_dumb', lineno=138, col_offset=27)], lineno=138, col_offset=15), [Assign([Attribute(Name('sub_cmd', Load(), lineno=139, col_offset=16), 'owner', Store(), lineno=139, col_offset=16)], Attribute(Name('self', Load(), lineno=139, col_offset=32), 'owner', Load(), lineno=139, col_offset=32), lineno=139, col_offset=16), Assign([Attribute(Name('sub_cmd', Load(), lineno=140, col_offset=16), 'group', Store(), lineno=140, col_offset=16)], Attribute(Name('self', Load(), lineno=140, col_offset=32), 'group', Load(), lineno=140, col_offset=32), lineno=140, col_offset=16)], [], lineno=138, col_offset=12), If(Compare(Name('cmd_name', Load(), lineno=144, col_offset=15), [In()], [Subscript(Name('commands', Load(), lineno=144, col_offset=27), Slice(BinOp(Name('i', Load(), lineno=144, col_offset=36), Add(), Num(1, lineno=144, col_offset=38), lineno=144, col_offset=36), None, None), Load(), lineno=144, col_offset=27)], lineno=144, col_offset=15), [Assign([Attribute(Name('sub_cmd', Load(), lineno=145, col_offset=16), 'keep_temp', Store(), lineno=145, col_offset=16)], Num(1, lineno=145, col_offset=36), lineno=145, col_offset=16)], [], lineno=144, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=12), 'run_command', Load(), lineno=146, col_offset=12), [Name('cmd_name', Load(), lineno=146, col_offset=29)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=12)], [], lineno=131, col_offset=8)], [], lineno=121, col_offset=4)], [], lineno=27, col_offset=0)])
