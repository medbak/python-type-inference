Module([Expr(Str("\nThere is a way to put keys of any type in a type's dictionary.\nI think this allows various kinds of crashes, but so far I have only\nfound a convoluted attack of _PyType_Lookup(), which uses the mro of the\ntype without holding a strong reference to it.  Probably works with\nsuper.__getattribute__() too, which uses the same kind of code.\n", lineno=7, col_offset=-1), lineno=7, col_offset=-1), ClassDef('MyKey', [Name('object', Load(), lineno=9, col_offset=12)], [FunctionDef('__hash__', arguments([Name('self', Param(), lineno=10, col_offset=17)], None, None, []), [Return(Call(Name('hash', Load(), lineno=11, col_offset=15), [Str('mykey', lineno=11, col_offset=20)], [], None, None, lineno=11, col_offset=15), lineno=11, col_offset=8)], [], lineno=10, col_offset=4), FunctionDef('__cmp__', arguments([Name('self', Param(), lineno=13, col_offset=16), Name('other', Param(), lineno=13, col_offset=22)], None, None, []), [Assign([Attribute(Name('X', Load(), lineno=15, col_offset=8), '__bases__', Store(), lineno=15, col_offset=8)], Tuple([Name('Base2', Load(), lineno=15, col_offset=23)], Load(), lineno=15, col_offset=23), lineno=15, col_offset=8), Assign([Name('z', Store(), lineno=18, col_offset=8)], List([], Load(), lineno=18, col_offset=12), lineno=18, col_offset=8), For(Name('i', Store(), lineno=19, col_offset=12), Call(Name('range', Load(), lineno=19, col_offset=17), [Num(1000, lineno=19, col_offset=23)], [], None, None, lineno=19, col_offset=17), [Expr(Call(Attribute(Name('z', Load(), lineno=20, col_offset=12), 'append', Load(), lineno=20, col_offset=12), [Tuple([Name('i', Load(), lineno=20, col_offset=22), Name('None', Load(), lineno=20, col_offset=25), Name('None', Load(), lineno=20, col_offset=31)], Load(), lineno=20, col_offset=22)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=12)], [], lineno=19, col_offset=8), Return(Num(-1, lineno=21, col_offset=16), lineno=21, col_offset=8)], [], lineno=13, col_offset=4)], [], lineno=9, col_offset=0), ClassDef('Base', [Name('object', Load(), lineno=24, col_offset=11)], [Assign([Name('mykey', Store(), lineno=25, col_offset=4)], Str('from Base', lineno=25, col_offset=12), lineno=25, col_offset=4)], [], lineno=24, col_offset=0), ClassDef('Base2', [Name('object', Load(), lineno=27, col_offset=12)], [Assign([Name('mykey', Store(), lineno=28, col_offset=4)], Str('from Base2', lineno=28, col_offset=12), lineno=28, col_offset=4)], [], lineno=27, col_offset=0), Assign([Name('X', Store(), lineno=32, col_offset=0)], Call(Name('type', Load(), lineno=32, col_offset=4), [Str('X', lineno=32, col_offset=9), Tuple([Name('Base', Load(), lineno=32, col_offset=15)], Load(), lineno=32, col_offset=15), Dict([Call(Name('MyKey', Load(), lineno=32, col_offset=24), [], [], None, None, lineno=32, col_offset=24)], [Num(5, lineno=32, col_offset=33)], lineno=32, col_offset=23)], [], None, None, lineno=32, col_offset=4), lineno=32, col_offset=0), Print(None, [Attribute(Name('X', Load(), lineno=34, col_offset=6), 'mykey', Load(), lineno=34, col_offset=6)], True, lineno=34, col_offset=0)])
