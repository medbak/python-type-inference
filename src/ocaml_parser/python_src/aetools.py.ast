Module([Expr(Str('Tools for use in AppleEvent clients and servers.\n\npack(x) converts a Python object to an AEDesc object\nunpack(desc) does the reverse\n\npackevent(event, parameters, attributes) sets params and attrs in an AEAppleEvent record\nunpackevent(event) returns the parameters and attributes from an AEAppleEvent record\n\nPlus...  Lots of classes and routines that help representing AE objects,\nranges, conditionals, logicals, etc., so you can write, e.g.:\n\n    x = Character(1, Document("foobar"))\n\nand pack(x) will create an AE object reference equivalent to AppleScript\'s\n\n    character 1 of document "foobar"\n\nSome of the stuff that appears to be exported from this module comes from other\nfiles: the pack stuff from aepack, the objects from aetypes.\n\n', lineno=21, col_offset=-1), lineno=21, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=24, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=25, col_offset=0), [Str('In 3.x, the aetools module is removed.', lineno=25, col_offset=9)], [keyword('stacklevel', Num(2, lineno=25, col_offset=62))], None, None, lineno=25, col_offset=0), lineno=25, col_offset=0), ImportFrom('types', [alias('*', None)], 0, lineno=27, col_offset=0), ImportFrom('Carbon', [alias('AE', None)], 0, lineno=28, col_offset=0), ImportFrom('Carbon', [alias('Evt', None)], 0, lineno=29, col_offset=0), ImportFrom('Carbon', [alias('AppleEvents', None)], 0, lineno=30, col_offset=0), Import([alias('MacOS', None)], lineno=31, col_offset=0), Import([alias('sys', None)], lineno=32, col_offset=0), Import([alias('time', None)], lineno=33, col_offset=0), ImportFrom('aetypes', [alias('*', None)], 0, lineno=35, col_offset=0), ImportFrom('aepack', [alias('packkey', None), alias('pack', None), alias('unpack', None), alias('coerce', None), alias('AEDescType', None)], 0, lineno=36, col_offset=0), Assign([Name('Error', Store(), lineno=38, col_offset=0)], Str('aetools.Error', lineno=38, col_offset=8), lineno=38, col_offset=0), Assign([Name('LAUNCH_MAX_WAIT_TIME', Store(), lineno=41, col_offset=0)], Num(10, lineno=41, col_offset=21), lineno=41, col_offset=0), Assign([Name('aekeywords', Store(), lineno=46, col_offset=0)], List([Str('tran', lineno=47, col_offset=4), Str('rtid', lineno=48, col_offset=4), Str('evcl', lineno=49, col_offset=4), Str('evid', lineno=50, col_offset=4), Str('addr', lineno=51, col_offset=4), Str('optk', lineno=52, col_offset=4), Str('timo', lineno=53, col_offset=4), Str('inte', lineno=54, col_offset=4), Str('esrc', lineno=55, col_offset=4), Str('miss', lineno=56, col_offset=4), Str('from', lineno=57, col_offset=4)], Load(), lineno=46, col_offset=13), lineno=46, col_offset=0), FunctionDef('missed', arguments([Name('ae', Param(), lineno=60, col_offset=11)], None, None, []), [TryExcept([Assign([Name('desc', Store(), lineno=62, col_offset=8)], Call(Attribute(Name('ae', Load(), lineno=62, col_offset=15), 'AEGetAttributeDesc', Load(), lineno=62, col_offset=15), [Str('miss', lineno=62, col_offset=37), Str('keyw', lineno=62, col_offset=45)], [], None, None, lineno=62, col_offset=15), lineno=62, col_offset=8)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=63, col_offset=11), 'Error', Load(), lineno=63, col_offset=11), Name('msg', Store(), lineno=63, col_offset=21), [Return(Name('None', Load(), lineno=64, col_offset=15), lineno=64, col_offset=8)], lineno=63, col_offset=4)], [], lineno=61, col_offset=4), Return(Attribute(Name('desc', Load(), lineno=65, col_offset=11), 'data', Load(), lineno=65, col_offset=11), lineno=65, col_offset=4)], [], lineno=60, col_offset=0), FunctionDef('unpackevent', arguments([Name('ae', Param(), lineno=67, col_offset=16), Name('formodulename', Param(), lineno=67, col_offset=20)], None, None, [Str('', lineno=67, col_offset=34)]), [Assign([Name('parameters', Store(), lineno=68, col_offset=4)], Dict([], [], lineno=68, col_offset=17), lineno=68, col_offset=4), TryExcept([Assign([Name('dirobj', Store(), lineno=70, col_offset=8)], Call(Attribute(Name('ae', Load(), lineno=70, col_offset=17), 'AEGetParamDesc', Load(), lineno=70, col_offset=17), [Str('----', lineno=70, col_offset=35), Str('****', lineno=70, col_offset=43)], [], None, None, lineno=70, col_offset=17), lineno=70, col_offset=8)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=71, col_offset=11), 'Error', Load(), lineno=71, col_offset=11), None, [Pass( lineno=72, col_offset=8)], lineno=71, col_offset=4)], [Assign([Subscript(Name('parameters', Load(), lineno=74, col_offset=8), Index(Str('----', lineno=74, col_offset=19)), Store(), lineno=74, col_offset=8)], Call(Name('unpack', Load(), lineno=74, col_offset=29), [Name('dirobj', Load(), lineno=74, col_offset=36), Name('formodulename', Load(), lineno=74, col_offset=44)], [], None, None, lineno=74, col_offset=29), lineno=74, col_offset=8), Delete([Name('dirobj', Del(), lineno=75, col_offset=12)], lineno=75, col_offset=8)], lineno=69, col_offset=4), TryExcept([Assign([Name('dirobj', Store(), lineno=78, col_offset=8)], Call(Attribute(Name('ae', Load(), lineno=78, col_offset=17), 'AEGetParamDesc', Load(), lineno=78, col_offset=17), [Str('errn', lineno=78, col_offset=35), Str('****', lineno=78, col_offset=43)], [], None, None, lineno=78, col_offset=17), lineno=78, col_offset=8)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=79, col_offset=11), 'Error', Load(), lineno=79, col_offset=11), None, [Pass( lineno=80, col_offset=8)], lineno=79, col_offset=4)], [Assign([Subscript(Name('parameters', Load(), lineno=82, col_offset=8), Index(Str('errn', lineno=82, col_offset=19)), Store(), lineno=82, col_offset=8)], Call(Name('unpack', Load(), lineno=82, col_offset=29), [Name('dirobj', Load(), lineno=82, col_offset=36), Name('formodulename', Load(), lineno=82, col_offset=44)], [], None, None, lineno=82, col_offset=29), lineno=82, col_offset=8), Delete([Name('dirobj', Del(), lineno=83, col_offset=12)], lineno=83, col_offset=8)], lineno=77, col_offset=4), While(Num(1, lineno=84, col_offset=10), [Assign([Name('key', Store(), lineno=85, col_offset=8)], Call(Name('missed', Load(), lineno=85, col_offset=14), [Name('ae', Load(), lineno=85, col_offset=21)], [], None, None, lineno=85, col_offset=14), lineno=85, col_offset=8), If(UnaryOp(Not(), Name('key', Load(), lineno=86, col_offset=15), lineno=86, col_offset=11), [Break( lineno=86, col_offset=20)], [], lineno=86, col_offset=8), Assign([Subscript(Name('parameters', Load(), lineno=87, col_offset=8), Index(Name('key', Load(), lineno=87, col_offset=19)), Store(), lineno=87, col_offset=8)], Call(Name('unpack', Load(), lineno=87, col_offset=26), [Call(Attribute(Name('ae', Load(), lineno=87, col_offset=33), 'AEGetParamDesc', Load(), lineno=87, col_offset=33), [Name('key', Load(), lineno=87, col_offset=51), Str('****', lineno=87, col_offset=56)], [], None, None, lineno=87, col_offset=33), Name('formodulename', Load(), lineno=87, col_offset=65)], [], None, None, lineno=87, col_offset=26), lineno=87, col_offset=8)], [], lineno=84, col_offset=4), Assign([Name('attributes', Store(), lineno=88, col_offset=4)], Dict([], [], lineno=88, col_offset=17), lineno=88, col_offset=4), For(Name('key', Store(), lineno=89, col_offset=8), Name('aekeywords', Load(), lineno=89, col_offset=15), [TryExcept([Assign([Name('desc', Store(), lineno=91, col_offset=12)], Call(Attribute(Name('ae', Load(), lineno=91, col_offset=19), 'AEGetAttributeDesc', Load(), lineno=91, col_offset=19), [Name('key', Load(), lineno=91, col_offset=41), Str('****', lineno=91, col_offset=46)], [], None, None, lineno=91, col_offset=19), lineno=91, col_offset=12)], [ExceptHandler(Tuple([Attribute(Name('AE', Load(), lineno=92, col_offset=16), 'Error', Load(), lineno=92, col_offset=16), Attribute(Name('MacOS', Load(), lineno=92, col_offset=26), 'Error', Load(), lineno=92, col_offset=26)], Load(), lineno=92, col_offset=16), Name('msg', Store(), lineno=92, col_offset=40), [If(BoolOp(And(), [Compare(Subscript(Name('msg', Load(), lineno=93, col_offset=15), Index(Num(0, lineno=93, col_offset=19)), Load(), lineno=93, col_offset=15), [NotEq()], [Num(-1701, lineno=93, col_offset=26)], lineno=93, col_offset=15), Compare(Subscript(Name('msg', Load(), lineno=93, col_offset=35), Index(Num(0, lineno=93, col_offset=39)), Load(), lineno=93, col_offset=35), [NotEq()], [Num(-1704, lineno=93, col_offset=46)], lineno=93, col_offset=35)], lineno=93, col_offset=15), [Raise(None, None, None, lineno=94, col_offset=16)], [], lineno=93, col_offset=12), Continue( lineno=95, col_offset=12)], lineno=92, col_offset=8)], [], lineno=90, col_offset=8), Assign([Subscript(Name('attributes', Load(), lineno=96, col_offset=8), Index(Name('key', Load(), lineno=96, col_offset=19)), Store(), lineno=96, col_offset=8)], Call(Name('unpack', Load(), lineno=96, col_offset=26), [Name('desc', Load(), lineno=96, col_offset=33), Name('formodulename', Load(), lineno=96, col_offset=39)], [], None, None, lineno=96, col_offset=26), lineno=96, col_offset=8)], [], lineno=89, col_offset=4), Return(Tuple([Name('parameters', Load(), lineno=97, col_offset=11), Name('attributes', Load(), lineno=97, col_offset=23)], Load(), lineno=97, col_offset=11), lineno=97, col_offset=4)], [], lineno=67, col_offset=0), FunctionDef('packevent', arguments([Name('ae', Param(), lineno=99, col_offset=14), Name('parameters', Param(), lineno=99, col_offset=18), Name('attributes', Param(), lineno=99, col_offset=35)], None, None, [Dict([], [], lineno=99, col_offset=31), Dict([], [], lineno=99, col_offset=48)]), [For(Tuple([Name('key', Store(), lineno=100, col_offset=8), Name('value', Store(), lineno=100, col_offset=13)], Store(), lineno=100, col_offset=8), Call(Attribute(Name('parameters', Load(), lineno=100, col_offset=22), 'items', Load(), lineno=100, col_offset=22), [], [], None, None, lineno=100, col_offset=22), [Expr(Call(Name('packkey', Load(), lineno=101, col_offset=8), [Name('ae', Load(), lineno=101, col_offset=16), Name('key', Load(), lineno=101, col_offset=20), Name('value', Load(), lineno=101, col_offset=25)], [], None, None, lineno=101, col_offset=8), lineno=101, col_offset=8)], [], lineno=100, col_offset=4), For(Tuple([Name('key', Store(), lineno=102, col_offset=8), Name('value', Store(), lineno=102, col_offset=13)], Store(), lineno=102, col_offset=8), Call(Attribute(Name('attributes', Load(), lineno=102, col_offset=22), 'items', Load(), lineno=102, col_offset=22), [], [], None, None, lineno=102, col_offset=22), [Expr(Call(Attribute(Name('ae', Load(), lineno=103, col_offset=8), 'AEPutAttributeDesc', Load(), lineno=103, col_offset=8), [Name('key', Load(), lineno=103, col_offset=30), Call(Name('pack', Load(), lineno=103, col_offset=35), [Name('value', Load(), lineno=103, col_offset=40)], [], None, None, lineno=103, col_offset=35)], [], None, None, lineno=103, col_offset=8), lineno=103, col_offset=8)], [], lineno=102, col_offset=4)], [], lineno=99, col_offset=0), FunctionDef('keysubst', arguments([Name('arguments', Param(), lineno=109, col_offset=13), Name('keydict', Param(), lineno=109, col_offset=24)], None, None, []), [Expr(Str('Replace long name keys by their 4-char counterparts, and check', lineno=110, col_offset=4), lineno=110, col_offset=4), Assign([Name('ok', Store(), lineno=111, col_offset=4)], Call(Attribute(Name('keydict', Load(), lineno=111, col_offset=9), 'values', Load(), lineno=111, col_offset=9), [], [], None, None, lineno=111, col_offset=9), lineno=111, col_offset=4), For(Name('k', Store(), lineno=112, col_offset=8), Call(Attribute(Name('arguments', Load(), lineno=112, col_offset=13), 'keys', Load(), lineno=112, col_offset=13), [], [], None, None, lineno=112, col_offset=13), [If(Compare(Name('k', Load(), lineno=113, col_offset=11), [In()], [Name('keydict', Load(), lineno=113, col_offset=16)], lineno=113, col_offset=11), [Assign([Name('v', Store(), lineno=114, col_offset=12)], Subscript(Name('arguments', Load(), lineno=114, col_offset=16), Index(Name('k', Load(), lineno=114, col_offset=26)), Load(), lineno=114, col_offset=16), lineno=114, col_offset=12), Delete([Subscript(Name('arguments', Load(), lineno=115, col_offset=16), Index(Name('k', Load(), lineno=115, col_offset=26)), Del(), lineno=115, col_offset=16)], lineno=115, col_offset=12), Assign([Subscript(Name('arguments', Load(), lineno=116, col_offset=12), Index(Subscript(Name('keydict', Load(), lineno=116, col_offset=22), Index(Name('k', Load(), lineno=116, col_offset=30)), Load(), lineno=116, col_offset=22)), Store(), lineno=116, col_offset=12)], Name('v', Load(), lineno=116, col_offset=36), lineno=116, col_offset=12)], [If(BoolOp(And(), [Compare(Name('k', Load(), lineno=117, col_offset=13), [NotEq()], [Str('----', lineno=117, col_offset=18)], lineno=117, col_offset=13), Compare(Name('k', Load(), lineno=117, col_offset=29), [NotIn()], [Name('ok', Load(), lineno=117, col_offset=38)], lineno=117, col_offset=29)], lineno=117, col_offset=13), [Raise(Name('TypeError', Load(), lineno=118, col_offset=18), BinOp(Str('Unknown keyword argument: %s', lineno=118, col_offset=29), Mod(), Name('k', Load(), lineno=118, col_offset=60), lineno=118, col_offset=29), None, lineno=118, col_offset=12)], [], lineno=117, col_offset=13)], lineno=113, col_offset=8)], [], lineno=112, col_offset=4)], [], lineno=109, col_offset=0), FunctionDef('enumsubst', arguments([Name('arguments', Param(), lineno=120, col_offset=14), Name('key', Param(), lineno=120, col_offset=25), Name('edict', Param(), lineno=120, col_offset=30)], None, None, []), [Expr(Str('Substitute a single enum keyword argument, if it occurs', lineno=121, col_offset=4), lineno=121, col_offset=4), If(BoolOp(Or(), [Compare(Name('key', Load(), lineno=122, col_offset=7), [NotIn()], [Name('arguments', Load(), lineno=122, col_offset=18)], lineno=122, col_offset=7), Compare(Name('edict', Load(), lineno=122, col_offset=31), [Is()], [Name('None', Load(), lineno=122, col_offset=40)], lineno=122, col_offset=31)], lineno=122, col_offset=7), [Return(None, lineno=123, col_offset=8)], [], lineno=122, col_offset=4), Assign([Name('v', Store(), lineno=124, col_offset=4)], Subscript(Name('arguments', Load(), lineno=124, col_offset=8), Index(Name('key', Load(), lineno=124, col_offset=18)), Load(), lineno=124, col_offset=8), lineno=124, col_offset=4), Assign([Name('ok', Store(), lineno=125, col_offset=4)], Call(Attribute(Name('edict', Load(), lineno=125, col_offset=9), 'values', Load(), lineno=125, col_offset=9), [], [], None, None, lineno=125, col_offset=9), lineno=125, col_offset=4), If(Compare(Name('v', Load(), lineno=126, col_offset=7), [In()], [Name('edict', Load(), lineno=126, col_offset=12)], lineno=126, col_offset=7), [Assign([Subscript(Name('arguments', Load(), lineno=127, col_offset=8), Index(Name('key', Load(), lineno=127, col_offset=18)), Store(), lineno=127, col_offset=8)], Call(Name('Enum', Load(), lineno=127, col_offset=25), [Subscript(Name('edict', Load(), lineno=127, col_offset=30), Index(Name('v', Load(), lineno=127, col_offset=36)), Load(), lineno=127, col_offset=30)], [], None, None, lineno=127, col_offset=25), lineno=127, col_offset=8)], [If(UnaryOp(Not(), Compare(Name('v', Load(), lineno=128, col_offset=13), [In()], [Name('ok', Load(), lineno=128, col_offset=18)], lineno=128, col_offset=13), lineno=128, col_offset=9), [Raise(Name('TypeError', Load(), lineno=129, col_offset=14), BinOp(Str('Unknown enumerator: %s', lineno=129, col_offset=25), Mod(), Name('v', Load(), lineno=129, col_offset=50), lineno=129, col_offset=25), None, lineno=129, col_offset=8)], [], lineno=128, col_offset=9)], lineno=126, col_offset=4)], [], lineno=120, col_offset=0), FunctionDef('decodeerror', arguments([Name('arguments', Param(), lineno=131, col_offset=16)], None, None, []), [Expr(Str("Create the 'best' argument for a raise MacOS.Error", lineno=132, col_offset=4), lineno=132, col_offset=4), Assign([Name('errn', Store(), lineno=133, col_offset=4)], Subscript(Name('arguments', Load(), lineno=133, col_offset=11), Index(Str('errn', lineno=133, col_offset=21)), Load(), lineno=133, col_offset=11), lineno=133, col_offset=4), Assign([Name('err_a1', Store(), lineno=134, col_offset=4)], Name('errn', Load(), lineno=134, col_offset=13), lineno=134, col_offset=4), If(Compare(Str('errs', lineno=135, col_offset=7), [In()], [Name('arguments', Load(), lineno=135, col_offset=17)], lineno=135, col_offset=7), [Assign([Name('err_a2', Store(), lineno=136, col_offset=8)], Subscript(Name('arguments', Load(), lineno=136, col_offset=17), Index(Str('errs', lineno=136, col_offset=27)), Load(), lineno=136, col_offset=17), lineno=136, col_offset=8)], [Assign([Name('err_a2', Store(), lineno=138, col_offset=8)], Call(Attribute(Name('MacOS', Load(), lineno=138, col_offset=17), 'GetErrorString', Load(), lineno=138, col_offset=17), [Name('errn', Load(), lineno=138, col_offset=38)], [], None, None, lineno=138, col_offset=17), lineno=138, col_offset=8)], lineno=135, col_offset=4), If(Compare(Str('erob', lineno=139, col_offset=7), [In()], [Name('arguments', Load(), lineno=139, col_offset=17)], lineno=139, col_offset=7), [Assign([Name('err_a3', Store(), lineno=140, col_offset=8)], Subscript(Name('arguments', Load(), lineno=140, col_offset=17), Index(Str('erob', lineno=140, col_offset=27)), Load(), lineno=140, col_offset=17), lineno=140, col_offset=8)], [Assign([Name('err_a3', Store(), lineno=142, col_offset=8)], Name('None', Load(), lineno=142, col_offset=17), lineno=142, col_offset=8)], lineno=139, col_offset=4), Return(Tuple([Name('err_a1', Load(), lineno=144, col_offset=12), Name('err_a2', Load(), lineno=144, col_offset=20), Name('err_a3', Load(), lineno=144, col_offset=28)], Load(), lineno=144, col_offset=12), lineno=144, col_offset=4)], [], lineno=131, col_offset=0), ClassDef('TalkTo', [], [Expr(Str('An AE connection to an application', lineno=147, col_offset=4), lineno=147, col_offset=4), Assign([Name('_signature', Store(), lineno=148, col_offset=4)], Name('None', Load(), lineno=148, col_offset=17), lineno=148, col_offset=4), Assign([Name('_moduleName', Store(), lineno=149, col_offset=4)], Name('None', Load(), lineno=149, col_offset=18), lineno=149, col_offset=4), Assign([Name('_elemdict', Store(), lineno=150, col_offset=4)], Dict([], [], lineno=150, col_offset=16), lineno=150, col_offset=4), Assign([Name('_propdict', Store(), lineno=151, col_offset=4)], Dict([], [], lineno=151, col_offset=16), lineno=151, col_offset=4), Assign([Name('__eventloop_initialized', Store(), lineno=153, col_offset=4)], Num(0, lineno=153, col_offset=30), lineno=153, col_offset=4), FunctionDef('__ensure_WMAvailable', arguments([Name('klass', Param(), lineno=154, col_offset=29)], None, None, []), [If(Attribute(Name('klass', Load(), lineno=155, col_offset=11), '__eventloop_initialized', Load(), lineno=155, col_offset=11), [Return(Num(1, lineno=155, col_offset=49), lineno=155, col_offset=42)], [], lineno=155, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('MacOS', Load(), lineno=156, col_offset=15), 'WMAvailable', Load(), lineno=156, col_offset=15), [], [], None, None, lineno=156, col_offset=15), lineno=156, col_offset=11), [Return(Num(0, lineno=156, col_offset=43), lineno=156, col_offset=36)], [], lineno=156, col_offset=8), Expr(Call(Attribute(Name('Evt', Load(), lineno=159, col_offset=8), 'WaitNextEvent', Load(), lineno=159, col_offset=8), [Num(0, lineno=159, col_offset=26), Num(0, lineno=159, col_offset=28)], [], None, None, lineno=159, col_offset=8), lineno=159, col_offset=8), Return(Num(1, lineno=160, col_offset=15), lineno=160, col_offset=8)], [], lineno=154, col_offset=4), Assign([Name('__ensure_WMAvailable', Store(), lineno=161, col_offset=4)], Call(Name('classmethod', Load(), lineno=161, col_offset=27), [Name('__ensure_WMAvailable', Load(), lineno=161, col_offset=39)], [], None, None, lineno=161, col_offset=27), lineno=161, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=163, col_offset=17), Name('signature', Param(), lineno=163, col_offset=23), Name('start', Param(), lineno=163, col_offset=39), Name('timeout', Param(), lineno=163, col_offset=48)], None, None, [Name('None', Load(), lineno=163, col_offset=33), Num(0, lineno=163, col_offset=45), Num(0, lineno=163, col_offset=56)]), [Expr(Str('Create a communication channel with a particular application.\n\n        Addressing the application is done by specifying either a\n        4-byte signature, an AEDesc or an object that will __aepack__\n        to an AEDesc.\n        ', lineno=169, col_offset=-1), lineno=169, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=170, col_offset=8), 'target_signature', Store(), lineno=170, col_offset=8)], Name('None', Load(), lineno=170, col_offset=32), lineno=170, col_offset=8), If(Compare(Name('signature', Load(), lineno=171, col_offset=11), [Is()], [Name('None', Load(), lineno=171, col_offset=24)], lineno=171, col_offset=11), [Assign([Name('signature', Store(), lineno=172, col_offset=12)], Attribute(Name('self', Load(), lineno=172, col_offset=24), '_signature', Load(), lineno=172, col_offset=24), lineno=172, col_offset=12)], [], lineno=171, col_offset=8), If(Compare(Call(Name('type', Load(), lineno=173, col_offset=11), [Name('signature', Load(), lineno=173, col_offset=16)], [], None, None, lineno=173, col_offset=11), [Eq()], [Name('AEDescType', Load(), lineno=173, col_offset=30)], lineno=173, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=174, col_offset=12), 'target', Store(), lineno=174, col_offset=12)], Name('signature', Load(), lineno=174, col_offset=26), lineno=174, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=175, col_offset=13), [Name('signature', Load(), lineno=175, col_offset=18)], [], None, None, lineno=175, col_offset=13), [Eq()], [Name('InstanceType', Load(), lineno=175, col_offset=32)], lineno=175, col_offset=13), Call(Name('hasattr', Load(), lineno=175, col_offset=49), [Name('signature', Load(), lineno=175, col_offset=57), Str('__aepack__', lineno=175, col_offset=68)], [], None, None, lineno=175, col_offset=49)], lineno=175, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=176, col_offset=12), 'target', Store(), lineno=176, col_offset=12)], Call(Attribute(Name('signature', Load(), lineno=176, col_offset=26), '__aepack__', Load(), lineno=176, col_offset=26), [], [], None, None, lineno=176, col_offset=26), lineno=176, col_offset=12)], [If(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=177, col_offset=13), [Name('signature', Load(), lineno=177, col_offset=18)], [], None, None, lineno=177, col_offset=13), [Eq()], [Name('StringType', Load(), lineno=177, col_offset=32)], lineno=177, col_offset=13), Compare(Call(Name('len', Load(), lineno=177, col_offset=47), [Name('signature', Load(), lineno=177, col_offset=51)], [], None, None, lineno=177, col_offset=47), [Eq()], [Num(4, lineno=177, col_offset=65)], lineno=177, col_offset=47)], lineno=177, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=178, col_offset=12), 'target', Store(), lineno=178, col_offset=12)], Call(Attribute(Name('AE', Load(), lineno=178, col_offset=26), 'AECreateDesc', Load(), lineno=178, col_offset=26), [Attribute(Name('AppleEvents', Load(), lineno=178, col_offset=42), 'typeApplSignature', Load(), lineno=178, col_offset=42), Name('signature', Load(), lineno=178, col_offset=73)], [], None, None, lineno=178, col_offset=26), lineno=178, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=179, col_offset=12), 'target_signature', Store(), lineno=179, col_offset=12)], Name('signature', Load(), lineno=179, col_offset=36), lineno=179, col_offset=12)], [Raise(Name('TypeError', Load(), lineno=181, col_offset=18), Str('signature should be 4-char string or AEDesc', lineno=181, col_offset=29), None, lineno=181, col_offset=12)], lineno=177, col_offset=13)], lineno=175, col_offset=13)], lineno=173, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=182, col_offset=8), 'send_flags', Store(), lineno=182, col_offset=8)], Attribute(Name('AppleEvents', Load(), lineno=182, col_offset=26), 'kAEWaitReply', Load(), lineno=182, col_offset=26), lineno=182, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=183, col_offset=8), 'send_priority', Store(), lineno=183, col_offset=8)], Attribute(Name('AppleEvents', Load(), lineno=183, col_offset=29), 'kAENormalPriority', Load(), lineno=183, col_offset=29), lineno=183, col_offset=8), If(Name('timeout', Load(), lineno=184, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=185, col_offset=12), 'send_timeout', Store(), lineno=185, col_offset=12)], Name('timeout', Load(), lineno=185, col_offset=32), lineno=185, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=187, col_offset=12), 'send_timeout', Store(), lineno=187, col_offset=12)], Attribute(Name('AppleEvents', Load(), lineno=187, col_offset=32), 'kAEDefaultTimeout', Load(), lineno=187, col_offset=32), lineno=187, col_offset=12)], lineno=184, col_offset=8), If(Name('start', Load(), lineno=188, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=12), '_start', Load(), lineno=189, col_offset=12), [], [], None, None, lineno=189, col_offset=12), lineno=189, col_offset=12)], [], lineno=188, col_offset=8)], [], lineno=163, col_offset=4), FunctionDef('_start', arguments([Name('self', Param(), lineno=191, col_offset=15)], None, None, []), [Expr(Str('Start the application, if it is not running yet', lineno=192, col_offset=8), lineno=192, col_offset=8), TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=194, col_offset=12), 'send', Load(), lineno=194, col_offset=12), [Str('ascr', lineno=194, col_offset=22), Str('noop', lineno=194, col_offset=30)], [], None, None, lineno=194, col_offset=12), lineno=194, col_offset=12)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=195, col_offset=15), 'Error', Load(), lineno=195, col_offset=15), None, [Expr(Call(Name('_launch', Load(), lineno=196, col_offset=12), [Attribute(Name('self', Load(), lineno=196, col_offset=20), 'target_signature', Load(), lineno=196, col_offset=20)], [], None, None, lineno=196, col_offset=12), lineno=196, col_offset=12), For(Name('i', Store(), lineno=197, col_offset=16), Call(Name('range', Load(), lineno=197, col_offset=21), [Name('LAUNCH_MAX_WAIT_TIME', Load(), lineno=197, col_offset=27)], [], None, None, lineno=197, col_offset=21), [TryExcept([Expr(Call(Attribute(Name('self', Load(), lineno=199, col_offset=20), 'send', Load(), lineno=199, col_offset=20), [Str('ascr', lineno=199, col_offset=30), Str('noop', lineno=199, col_offset=38)], [], None, None, lineno=199, col_offset=20), lineno=199, col_offset=20)], [ExceptHandler(Attribute(Name('AE', Load(), lineno=200, col_offset=23), 'Error', Load(), lineno=200, col_offset=23), None, [Pass( lineno=201, col_offset=20)], lineno=200, col_offset=16)], [Break( lineno=203, col_offset=20)], lineno=198, col_offset=16), Expr(Call(Attribute(Name('time', Load(), lineno=204, col_offset=16), 'sleep', Load(), lineno=204, col_offset=16), [Num(1, lineno=204, col_offset=27)], [], None, None, lineno=204, col_offset=16), lineno=204, col_offset=16)], [], lineno=197, col_offset=12)], lineno=195, col_offset=8)], [], lineno=193, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('start', arguments([Name('self', Param(), lineno=206, col_offset=14)], None, None, []), [Expr(Str('Deprecated, used _start()', lineno=207, col_offset=8), lineno=207, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=208, col_offset=8), '_start', Load(), lineno=208, col_offset=8), [], [], None, None, lineno=208, col_offset=8), lineno=208, col_offset=8)], [], lineno=206, col_offset=4), FunctionDef('newevent', arguments([Name('self', Param(), lineno=210, col_offset=17), Name('code', Param(), lineno=210, col_offset=23), Name('subcode', Param(), lineno=210, col_offset=29), Name('parameters', Param(), lineno=210, col_offset=38), Name('attributes', Param(), lineno=210, col_offset=55)], None, None, [Dict([], [], lineno=210, col_offset=51), Dict([], [], lineno=210, col_offset=68)]), [Expr(Str('Create a complete structure for an apple event', lineno=211, col_offset=8), lineno=211, col_offset=8), Assign([Name('event', Store(), lineno=213, col_offset=8)], Call(Attribute(Name('AE', Load(), lineno=213, col_offset=16), 'AECreateAppleEvent', Load(), lineno=213, col_offset=16), [Name('code', Load(), lineno=213, col_offset=38), Name('subcode', Load(), lineno=213, col_offset=44), Attribute(Name('self', Load(), lineno=213, col_offset=53), 'target', Load(), lineno=213, col_offset=53), Attribute(Name('AppleEvents', Load(), lineno=214, col_offset=18), 'kAutoGenerateReturnID', Load(), lineno=214, col_offset=18), Attribute(Name('AppleEvents', Load(), lineno=214, col_offset=53), 'kAnyTransactionID', Load(), lineno=214, col_offset=53)], [], None, None, lineno=213, col_offset=16), lineno=213, col_offset=8), Expr(Call(Name('packevent', Load(), lineno=215, col_offset=8), [Name('event', Load(), lineno=215, col_offset=18), Name('parameters', Load(), lineno=215, col_offset=25), Name('attributes', Load(), lineno=215, col_offset=37)], [], None, None, lineno=215, col_offset=8), lineno=215, col_offset=8), Return(Name('event', Load(), lineno=216, col_offset=15), lineno=216, col_offset=8)], [], lineno=210, col_offset=4), FunctionDef('sendevent', arguments([Name('self', Param(), lineno=218, col_offset=18), Name('event', Param(), lineno=218, col_offset=24)], None, None, []), [Expr(Str('Send a pre-created appleevent, await the reply and unpack it', lineno=219, col_offset=8), lineno=219, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=220, col_offset=15), '__ensure_WMAvailable', Load(), lineno=220, col_offset=15), [], [], None, None, lineno=220, col_offset=15), lineno=220, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=221, col_offset=18), Str('No window manager access, cannot send AppleEvent', lineno=221, col_offset=32), None, lineno=221, col_offset=12)], [], lineno=220, col_offset=8), Assign([Name('reply', Store(), lineno=222, col_offset=8)], Call(Attribute(Name('event', Load(), lineno=222, col_offset=16), 'AESend', Load(), lineno=222, col_offset=16), [Attribute(Name('self', Load(), lineno=222, col_offset=29), 'send_flags', Load(), lineno=222, col_offset=29), Attribute(Name('self', Load(), lineno=222, col_offset=46), 'send_priority', Load(), lineno=222, col_offset=46), Attribute(Name('self', Load(), lineno=223, col_offset=34), 'send_timeout', Load(), lineno=223, col_offset=34)], [], None, None, lineno=222, col_offset=16), lineno=222, col_offset=8), Assign([Tuple([Name('parameters', Store(), lineno=224, col_offset=8), Name('attributes', Store(), lineno=224, col_offset=20)], Store(), lineno=224, col_offset=8)], Call(Name('unpackevent', Load(), lineno=224, col_offset=33), [Name('reply', Load(), lineno=224, col_offset=45), Attribute(Name('self', Load(), lineno=224, col_offset=52), '_moduleName', Load(), lineno=224, col_offset=52)], [], None, None, lineno=224, col_offset=33), lineno=224, col_offset=8), Return(Tuple([Name('reply', Load(), lineno=225, col_offset=15), Name('parameters', Load(), lineno=225, col_offset=22), Name('attributes', Load(), lineno=225, col_offset=34)], Load(), lineno=225, col_offset=15), lineno=225, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('send', arguments([Name('self', Param(), lineno=227, col_offset=13), Name('code', Param(), lineno=227, col_offset=19), Name('subcode', Param(), lineno=227, col_offset=25), Name('parameters', Param(), lineno=227, col_offset=34), Name('attributes', Param(), lineno=227, col_offset=51)], None, None, [Dict([], [], lineno=227, col_offset=47), Dict([], [], lineno=227, col_offset=64)]), [Expr(Str('Send an appleevent given code/subcode/pars/attrs and unpack the reply', lineno=228, col_offset=8), lineno=228, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=229, col_offset=15), 'sendevent', Load(), lineno=229, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=229, col_offset=30), 'newevent', Load(), lineno=229, col_offset=30), [Name('code', Load(), lineno=229, col_offset=44), Name('subcode', Load(), lineno=229, col_offset=50), Name('parameters', Load(), lineno=229, col_offset=59), Name('attributes', Load(), lineno=229, col_offset=71)], [], None, None, lineno=229, col_offset=30)], [], None, None, lineno=229, col_offset=15), lineno=229, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('activate', arguments([Name('self', Param(), lineno=235, col_offset=17)], None, None, []), [Expr(Str("Send 'activate' command", lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'send', Load(), lineno=237, col_offset=8), [Str('misc', lineno=237, col_offset=18), Str('actv', lineno=237, col_offset=26)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('_get', arguments([Name('self', Param(), lineno=239, col_offset=13), Name('_object', Param(), lineno=239, col_offset=19), Name('asfile', Param(), lineno=239, col_offset=28), Name('_attributes', Param(), lineno=239, col_offset=41)], None, None, [Name('None', Load(), lineno=239, col_offset=35), Dict([], [], lineno=239, col_offset=53)]), [Expr(Str('_get: get data from an object\n        Required argument: the object\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        Returns: the data\n        ', lineno=244, col_offset=-1), lineno=244, col_offset=-1), Assign([Name('_code', Store(), lineno=245, col_offset=8)], Str('core', lineno=245, col_offset=16), lineno=245, col_offset=8), Assign([Name('_subcode', Store(), lineno=246, col_offset=8)], Str('getd', lineno=246, col_offset=19), lineno=246, col_offset=8), Assign([Name('_arguments', Store(), lineno=248, col_offset=8)], Dict([Str('----', lineno=248, col_offset=22)], [Name('_object', Load(), lineno=248, col_offset=29)], lineno=248, col_offset=21), lineno=248, col_offset=8), If(Name('asfile', Load(), lineno=249, col_offset=11), [Assign([Subscript(Name('_arguments', Load(), lineno=250, col_offset=12), Index(Str('rtyp', lineno=250, col_offset=23)), Store(), lineno=250, col_offset=12)], Call(Name('mktype', Load(), lineno=250, col_offset=33), [Name('asfile', Load(), lineno=250, col_offset=40)], [], None, None, lineno=250, col_offset=33), lineno=250, col_offset=12)], [], lineno=249, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=252, col_offset=8), Name('_arguments', Store(), lineno=252, col_offset=16), Name('_attributes', Store(), lineno=252, col_offset=28)], Store(), lineno=252, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=252, col_offset=42), 'send', Load(), lineno=252, col_offset=42), [Name('_code', Load(), lineno=252, col_offset=52), Name('_subcode', Load(), lineno=252, col_offset=59), Name('_arguments', Load(), lineno=253, col_offset=16), Name('_attributes', Load(), lineno=253, col_offset=28)], [], None, None, lineno=252, col_offset=42), lineno=252, col_offset=8), If(Compare(Str('errn', lineno=254, col_offset=11), [In()], [Name('_arguments', Load(), lineno=254, col_offset=21)], lineno=254, col_offset=11), [Raise(Name('Error', Load(), lineno=255, col_offset=18), Call(Name('decodeerror', Load(), lineno=255, col_offset=25), [Name('_arguments', Load(), lineno=255, col_offset=37)], [], None, None, lineno=255, col_offset=25), None, lineno=255, col_offset=12)], [], lineno=254, col_offset=8), If(Compare(Str('----', lineno=257, col_offset=11), [In()], [Name('_arguments', Load(), lineno=257, col_offset=21)], lineno=257, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=258, col_offset=19), Index(Str('----', lineno=258, col_offset=30)), Load(), lineno=258, col_offset=19), lineno=258, col_offset=12), If(Name('asfile', Load(), lineno=259, col_offset=15), [Assign([Attribute(Name('item', Load(), lineno=260, col_offset=16), '__class__', Store(), lineno=260, col_offset=16)], Name('asfile', Load(), lineno=260, col_offset=33), lineno=260, col_offset=16)], [], lineno=259, col_offset=12), Return(Name('item', Load(), lineno=261, col_offset=19), lineno=261, col_offset=12)], [], lineno=257, col_offset=8)], [], lineno=239, col_offset=4), Assign([Name('get', Store(), lineno=263, col_offset=4)], Name('_get', Load(), lineno=263, col_offset=10), lineno=263, col_offset=4), Assign([Name('_argmap_set', Store(), lineno=265, col_offset=4)], Dict([Str('to', lineno=266, col_offset=8)], [Str('data', lineno=266, col_offset=15)], lineno=265, col_offset=18), lineno=265, col_offset=4), FunctionDef('_set', arguments([Name('self', Param(), lineno=269, col_offset=13), Name('_object', Param(), lineno=269, col_offset=19), Name('_attributes', Param(), lineno=269, col_offset=28)], None, '_arguments', [Dict([], [], lineno=269, col_offset=40)]), [Expr(Str("set: Set an object's data.\n        Required argument: the object for the command\n        Keyword argument to: The new value.\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ", lineno=274, col_offset=-1), lineno=274, col_offset=-1), Assign([Name('_code', Store(), lineno=275, col_offset=8)], Str('core', lineno=275, col_offset=16), lineno=275, col_offset=8), Assign([Name('_subcode', Store(), lineno=276, col_offset=8)], Str('setd', lineno=276, col_offset=19), lineno=276, col_offset=8), Expr(Call(Name('keysubst', Load(), lineno=278, col_offset=8), [Name('_arguments', Load(), lineno=278, col_offset=17), Attribute(Name('self', Load(), lineno=278, col_offset=29), '_argmap_set', Load(), lineno=278, col_offset=29)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=279, col_offset=8), Index(Str('----', lineno=279, col_offset=19)), Store(), lineno=279, col_offset=8)], Name('_object', Load(), lineno=279, col_offset=29), lineno=279, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=282, col_offset=8), Name('_arguments', Store(), lineno=282, col_offset=16), Name('_attributes', Store(), lineno=282, col_offset=28)], Store(), lineno=282, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=282, col_offset=42), 'send', Load(), lineno=282, col_offset=42), [Name('_code', Load(), lineno=282, col_offset=52), Name('_subcode', Load(), lineno=282, col_offset=59), Name('_arguments', Load(), lineno=283, col_offset=16), Name('_attributes', Load(), lineno=283, col_offset=28)], [], None, None, lineno=282, col_offset=42), lineno=282, col_offset=8), If(Call(Attribute(Name('_arguments', Load(), lineno=284, col_offset=11), 'get', Load(), lineno=284, col_offset=11), [Str('errn', lineno=284, col_offset=26), Num(0, lineno=284, col_offset=34)], [], None, None, lineno=284, col_offset=11), [Raise(Name('Error', Load(), lineno=285, col_offset=18), Call(Name('decodeerror', Load(), lineno=285, col_offset=25), [Name('_arguments', Load(), lineno=285, col_offset=37)], [], None, None, lineno=285, col_offset=25), None, lineno=285, col_offset=12)], [], lineno=284, col_offset=8), If(Compare(Str('----', lineno=287, col_offset=11), [In()], [Name('_arguments', Load(), lineno=287, col_offset=21)], lineno=287, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=288, col_offset=19), Index(Str('----', lineno=288, col_offset=30)), Load(), lineno=288, col_offset=19), lineno=288, col_offset=12)], [], lineno=287, col_offset=8)], [], lineno=269, col_offset=4), Assign([Name('set', Store(), lineno=290, col_offset=4)], Name('_set', Load(), lineno=290, col_offset=10), lineno=290, col_offset=4), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=295, col_offset=20), Name('name', Param(), lineno=295, col_offset=26)], None, None, []), [If(Compare(Name('name', Load(), lineno=296, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=296, col_offset=19), '_elemdict', Load(), lineno=296, col_offset=19)], lineno=296, col_offset=11), [Assign([Name('cls', Store(), lineno=297, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=297, col_offset=18), '_elemdict', Load(), lineno=297, col_offset=18), Index(Name('name', Load(), lineno=297, col_offset=33)), Load(), lineno=297, col_offset=18), lineno=297, col_offset=12), Return(Call(Name('DelayedComponentItem', Load(), lineno=298, col_offset=19), [Name('cls', Load(), lineno=298, col_offset=40), Name('None', Load(), lineno=298, col_offset=45)], [], None, None, lineno=298, col_offset=19), lineno=298, col_offset=12)], [], lineno=296, col_offset=8), If(Compare(Name('name', Load(), lineno=299, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=299, col_offset=19), '_propdict', Load(), lineno=299, col_offset=19)], lineno=299, col_offset=11), [Assign([Name('cls', Store(), lineno=300, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=300, col_offset=18), '_propdict', Load(), lineno=300, col_offset=18), Index(Name('name', Load(), lineno=300, col_offset=33)), Load(), lineno=300, col_offset=18), lineno=300, col_offset=12), Return(Call(Name('cls', Load(), lineno=301, col_offset=19), [], [], None, None, lineno=301, col_offset=19), lineno=301, col_offset=12)], [], lineno=299, col_offset=8), Raise(Name('AttributeError', Load(), lineno=302, col_offset=14), Name('name', Load(), lineno=302, col_offset=30), None, lineno=302, col_offset=8)], [], lineno=295, col_offset=4)], [], lineno=146, col_offset=0), ClassDef('_miniFinder', [Name('TalkTo', Load(), lineno=306, col_offset=18)], [FunctionDef('open', arguments([Name('self', Param(), lineno=307, col_offset=13), Name('_object', Param(), lineno=307, col_offset=19), Name('_attributes', Param(), lineno=307, col_offset=28)], None, '_arguments', [Dict([], [], lineno=307, col_offset=40)]), [Expr(Str('open: Open the specified object(s)\n        Required argument: list of objects to open\n        Keyword argument _attributes: AppleEvent attribute dictionary\n        ', lineno=311, col_offset=-1), lineno=311, col_offset=-1), Assign([Name('_code', Store(), lineno=312, col_offset=8)], Str('aevt', lineno=312, col_offset=16), lineno=312, col_offset=8), Assign([Name('_subcode', Store(), lineno=313, col_offset=8)], Str('odoc', lineno=313, col_offset=19), lineno=313, col_offset=8), If(Name('_arguments', Load(), lineno=315, col_offset=11), [Raise(Name('TypeError', Load(), lineno=315, col_offset=29), Str('No optional args expected', lineno=315, col_offset=40), None, lineno=315, col_offset=23)], [], lineno=315, col_offset=8), Assign([Subscript(Name('_arguments', Load(), lineno=316, col_offset=8), Index(Str('----', lineno=316, col_offset=19)), Store(), lineno=316, col_offset=8)], Name('_object', Load(), lineno=316, col_offset=29), lineno=316, col_offset=8), Assign([Tuple([Name('_reply', Store(), lineno=319, col_offset=8), Name('_arguments', Store(), lineno=319, col_offset=16), Name('_attributes', Store(), lineno=319, col_offset=28)], Store(), lineno=319, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=319, col_offset=42), 'send', Load(), lineno=319, col_offset=42), [Name('_code', Load(), lineno=319, col_offset=52), Name('_subcode', Load(), lineno=319, col_offset=59), Name('_arguments', Load(), lineno=320, col_offset=16), Name('_attributes', Load(), lineno=320, col_offset=28)], [], None, None, lineno=319, col_offset=42), lineno=319, col_offset=8), If(Compare(Str('errn', lineno=321, col_offset=11), [In()], [Name('_arguments', Load(), lineno=321, col_offset=21)], lineno=321, col_offset=11), [Raise(Name('Error', Load(), lineno=322, col_offset=18), Call(Name('decodeerror', Load(), lineno=322, col_offset=25), [Name('_arguments', Load(), lineno=322, col_offset=37)], [], None, None, lineno=322, col_offset=25), None, lineno=322, col_offset=12)], [], lineno=321, col_offset=8), If(Compare(Str('----', lineno=324, col_offset=11), [In()], [Name('_arguments', Load(), lineno=324, col_offset=21)], lineno=324, col_offset=11), [Return(Subscript(Name('_arguments', Load(), lineno=325, col_offset=19), Index(Str('----', lineno=325, col_offset=30)), Load(), lineno=325, col_offset=19), lineno=325, col_offset=12)], [], lineno=324, col_offset=8)], [], lineno=307, col_offset=4)], [], lineno=306, col_offset=0), Assign([Name('_finder', Store(), lineno=328, col_offset=0)], Call(Name('_miniFinder', Load(), lineno=328, col_offset=10), [Str('MACS', lineno=328, col_offset=22)], [], None, None, lineno=328, col_offset=10), lineno=328, col_offset=0), FunctionDef('_launch', arguments([Name('appfile', Param(), lineno=330, col_offset=12)], None, None, []), [Expr(Str('Open a file thru the finder. Specify file by name or fsspec', lineno=331, col_offset=4), lineno=331, col_offset=4), Expr(Call(Attribute(Name('_finder', Load(), lineno=332, col_offset=4), 'open', Load(), lineno=332, col_offset=4), [Call(Name('_application_file', Load(), lineno=332, col_offset=17), [Tuple([Str('ID  ', lineno=332, col_offset=36), Name('appfile', Load(), lineno=332, col_offset=44)], Load(), lineno=332, col_offset=36)], [], None, None, lineno=332, col_offset=17)], [], None, None, lineno=332, col_offset=4), lineno=332, col_offset=4)], [], lineno=330, col_offset=0), ClassDef('_application_file', [Name('ComponentItem', Load(), lineno=335, col_offset=24)], [Expr(Str("application file - An application's file on disk", lineno=336, col_offset=4), lineno=336, col_offset=4), Assign([Name('want', Store(), lineno=337, col_offset=4)], Str('appf', lineno=337, col_offset=11), lineno=337, col_offset=4)], [], lineno=335, col_offset=0), Assign([Attribute(Name('_application_file', Load(), lineno=339, col_offset=0), '_propdict', Store(), lineno=339, col_offset=0)], Dict([], [], lineno=339, col_offset=30), lineno=339, col_offset=0), Assign([Attribute(Name('_application_file', Load(), lineno=341, col_offset=0), '_elemdict', Store(), lineno=341, col_offset=0)], Dict([], [], lineno=341, col_offset=30), lineno=341, col_offset=0), FunctionDef('test', arguments([], None, None, []), [Assign([Name('target', Store(), lineno=348, col_offset=4)], Call(Attribute(Name('AE', Load(), lineno=348, col_offset=13), 'AECreateDesc', Load(), lineno=348, col_offset=13), [Str('sign', lineno=348, col_offset=29), Str('quil', lineno=348, col_offset=37)], [], None, None, lineno=348, col_offset=13), lineno=348, col_offset=4), Assign([Name('ae', Store(), lineno=349, col_offset=4)], Call(Attribute(Name('AE', Load(), lineno=349, col_offset=9), 'AECreateAppleEvent', Load(), lineno=349, col_offset=9), [Str('aevt', lineno=349, col_offset=31), Str('oapp', lineno=349, col_offset=39), Name('target', Load(), lineno=349, col_offset=47), Num(-1, lineno=349, col_offset=56), Num(0, lineno=349, col_offset=59)], [], None, None, lineno=349, col_offset=9), lineno=349, col_offset=4), Print(None, [Call(Name('unpackevent', Load(), lineno=350, col_offset=10), [Name('ae', Load(), lineno=350, col_offset=22)], [], None, None, lineno=350, col_offset=10)], True, lineno=350, col_offset=4), Expr(Call(Name('raw_input', Load(), lineno=351, col_offset=4), [Str(':', lineno=351, col_offset=14)], [], None, None, lineno=351, col_offset=4), lineno=351, col_offset=4), Assign([Name('ae', Store(), lineno=352, col_offset=4)], Call(Attribute(Name('AE', Load(), lineno=352, col_offset=9), 'AECreateAppleEvent', Load(), lineno=352, col_offset=9), [Str('core', lineno=352, col_offset=31), Str('getd', lineno=352, col_offset=39), Name('target', Load(), lineno=352, col_offset=47), Num(-1, lineno=352, col_offset=56), Num(0, lineno=352, col_offset=59)], [], None, None, lineno=352, col_offset=9), lineno=352, col_offset=4), Assign([Name('obj', Store(), lineno=353, col_offset=4)], Call(Name('Character', Load(), lineno=353, col_offset=10), [Num(2, lineno=353, col_offset=20), Call(Name('Word', Load(), lineno=353, col_offset=23), [Num(1, lineno=353, col_offset=28), Call(Name('Document', Load(), lineno=353, col_offset=31), [Num(1, lineno=353, col_offset=40)], [], None, None, lineno=353, col_offset=31)], [], None, None, lineno=353, col_offset=23)], [], None, None, lineno=353, col_offset=10), lineno=353, col_offset=4), Print(None, [Name('obj', Load(), lineno=354, col_offset=10)], True, lineno=354, col_offset=4), Print(None, [Call(Name('repr', Load(), lineno=355, col_offset=10), [Name('obj', Load(), lineno=355, col_offset=15)], [], None, None, lineno=355, col_offset=10)], True, lineno=355, col_offset=4), Expr(Call(Name('packevent', Load(), lineno=356, col_offset=4), [Name('ae', Load(), lineno=356, col_offset=14), Dict([Str('----', lineno=356, col_offset=19)], [Name('obj', Load(), lineno=356, col_offset=27)], lineno=356, col_offset=18)], [], None, None, lineno=356, col_offset=4), lineno=356, col_offset=4), Assign([Tuple([Name('params', Store(), lineno=357, col_offset=4), Name('attrs', Store(), lineno=357, col_offset=12)], Store(), lineno=357, col_offset=4)], Call(Name('unpackevent', Load(), lineno=357, col_offset=20), [Name('ae', Load(), lineno=357, col_offset=32)], [], None, None, lineno=357, col_offset=20), lineno=357, col_offset=4), Print(None, [Subscript(Name('params', Load(), lineno=358, col_offset=10), Index(Str('----', lineno=358, col_offset=17)), Load(), lineno=358, col_offset=10)], True, lineno=358, col_offset=4), Expr(Call(Name('raw_input', Load(), lineno=359, col_offset=4), [Str(':', lineno=359, col_offset=14)], [], None, None, lineno=359, col_offset=4), lineno=359, col_offset=4)], [], lineno=347, col_offset=0), If(Compare(Name('__name__', Load(), lineno=361, col_offset=3), [Eq()], [Str('__main__', lineno=361, col_offset=15)], lineno=361, col_offset=3), [Expr(Call(Name('test', Load(), lineno=362, col_offset=4), [], [], None, None, lineno=362, col_offset=4), lineno=362, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=363, col_offset=4), 'exit', Load(), lineno=363, col_offset=4), [Num(1, lineno=363, col_offset=13)], [], None, None, lineno=363, col_offset=4), lineno=363, col_offset=4)], [], lineno=361, col_offset=0)])
