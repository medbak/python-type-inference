Module([Import([alias('sys', None)], lineno=9, col_offset=0), Import([alias('os', None)], lineno=10, col_offset=0), Import([alias('re', None)], lineno=11, col_offset=0), Import([alias('copy', None)], lineno=12, col_offset=0), Import([alias('types', None)], lineno=13, col_offset=0), Import([alias('unittest', None)], lineno=14, col_offset=0), ImportFrom('StringIO', [alias('StringIO', None)], 0, lineno=16, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=17, col_offset=0), ImportFrom('optparse', [alias('make_option', None), alias('Option', None), alias('TitledHelpFormatter', None), alias('OptionParser', None), alias('OptionGroup', None), alias('SUPPRESS_USAGE', None), alias('OptionError', None), alias('OptionConflictError', None), alias('BadOptionError', None), alias('OptionValueError', None), alias('Values', None)], 0, lineno=20, col_offset=0), ImportFrom('optparse', [alias('_match_abbrev', None)], 0, lineno=24, col_offset=0), ImportFrom('optparse', [alias('_parse_num', None)], 0, lineno=25, col_offset=0), Assign([Name('retype', Store(), lineno=27, col_offset=0)], Call(Name('type', Load(), lineno=27, col_offset=9), [Call(Attribute(Name('re', Load(), lineno=27, col_offset=14), 'compile', Load(), lineno=27, col_offset=14), [Str('', lineno=27, col_offset=25)], [], None, None, lineno=27, col_offset=14)], [], None, None, lineno=27, col_offset=9), lineno=27, col_offset=0), ClassDef('InterceptedError', [Name('Exception', Load(), lineno=29, col_offset=23)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=30, col_offset=17), Name('error_message', Param(), lineno=31, col_offset=17), Name('exit_status', Param(), lineno=32, col_offset=17), Name('exit_message', Param(), lineno=33, col_offset=17)], None, None, [Name('None', Load(), lineno=31, col_offset=31), Name('None', Load(), lineno=32, col_offset=29), Name('None', Load(), lineno=33, col_offset=30)]), [Assign([Attribute(Name('self', Load(), lineno=34, col_offset=8), 'error_message', Store(), lineno=34, col_offset=8)], Name('error_message', Load(), lineno=34, col_offset=29), lineno=34, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=35, col_offset=8), 'exit_status', Store(), lineno=35, col_offset=8)], Name('exit_status', Load(), lineno=35, col_offset=27), lineno=35, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=36, col_offset=8), 'exit_message', Store(), lineno=36, col_offset=8)], Name('exit_message', Load(), lineno=36, col_offset=28), lineno=36, col_offset=8)], [], lineno=30, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=38, col_offset=16)], None, None, []), [Return(BoolOp(Or(), [Attribute(Name('self', Load(), lineno=39, col_offset=15), 'error_message', Load(), lineno=39, col_offset=15), Attribute(Name('self', Load(), lineno=39, col_offset=37), 'exit_message', Load(), lineno=39, col_offset=37), Str('intercepted error', lineno=39, col_offset=58)], lineno=39, col_offset=15), lineno=39, col_offset=8)], [], lineno=38, col_offset=4)], [], lineno=29, col_offset=0), ClassDef('InterceptingOptionParser', [Name('OptionParser', Load(), lineno=41, col_offset=31)], [FunctionDef('exit', arguments([Name('self', Param(), lineno=42, col_offset=13), Name('status', Param(), lineno=42, col_offset=19), Name('msg', Param(), lineno=42, col_offset=29)], None, None, [Num(0, lineno=42, col_offset=26), Name('None', Load(), lineno=42, col_offset=33)]), [Raise(Call(Name('InterceptedError', Load(), lineno=43, col_offset=14), [], [keyword('exit_status', Name('status', Load(), lineno=43, col_offset=43)), keyword('exit_message', Name('msg', Load(), lineno=43, col_offset=64))], None, None, lineno=43, col_offset=14), None, None, lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('error', arguments([Name('self', Param(), lineno=45, col_offset=14), Name('msg', Param(), lineno=45, col_offset=20)], None, None, []), [Raise(Call(Name('InterceptedError', Load(), lineno=46, col_offset=14), [], [keyword('error_message', Name('msg', Load(), lineno=46, col_offset=45))], None, None, lineno=46, col_offset=14), None, None, lineno=46, col_offset=8)], [], lineno=45, col_offset=4)], [], lineno=41, col_offset=0), ClassDef('BaseTest', [Attribute(Name('unittest', Load(), lineno=49, col_offset=15), 'TestCase', Load(), lineno=49, col_offset=15)], [FunctionDef('assertParseOK', arguments([Name('self', Param(), lineno=50, col_offset=22), Name('args', Param(), lineno=50, col_offset=28), Name('expected_opts', Param(), lineno=50, col_offset=34), Name('expected_positional_args', Param(), lineno=50, col_offset=49)], None, None, []), [Expr(Str('Assert the options are what we expected when parsing arguments.\n\n        Otherwise, fail with a nicely formatted message.\n\n        Keyword arguments:\n        args -- A list of arguments to parse with OptionParser.\n        expected_opts -- The options expected.\n        expected_positional_args -- The positional arguments expected.\n\n        Returns the options and positional args for further testing.\n        ', lineno=61, col_offset=-1), lineno=61, col_offset=-1), Assign([Tuple([Name('options', Store(), lineno=63, col_offset=9), Name('positional_args', Store(), lineno=63, col_offset=18)], Store(), lineno=63, col_offset=9)], Call(Attribute(Attribute(Name('self', Load(), lineno=63, col_offset=37), 'parser', Load(), lineno=63, col_offset=37), 'parse_args', Load(), lineno=63, col_offset=37), [Name('args', Load(), lineno=63, col_offset=60)], [], None, None, lineno=63, col_offset=37), lineno=63, col_offset=8), Assign([Name('optdict', Store(), lineno=64, col_offset=8)], Call(Name('vars', Load(), lineno=64, col_offset=18), [Name('options', Load(), lineno=64, col_offset=23)], [], None, None, lineno=64, col_offset=18), lineno=64, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertEqual', Load(), lineno=66, col_offset=8), [Name('optdict', Load(), lineno=66, col_offset=25), Name('expected_opts', Load(), lineno=66, col_offset=34), BinOp(Str('\nOptions are %(optdict)s.\nShould be %(expected_opts)s.\nArgs were %(args)s.', lineno=70, col_offset=-1), Mod(), Call(Name('locals', Load(), lineno=70, col_offset=25), [], [], None, None, lineno=70, col_offset=25), lineno=70, col_offset=-1)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertEqual', Load(), lineno=72, col_offset=8), [Name('positional_args', Load(), lineno=72, col_offset=25), Name('expected_positional_args', Load(), lineno=72, col_offset=42), BinOp(Str('\nPositional arguments are %(positional_args)s.\nShould be %(expected_positional_args)s.\nArgs were %(args)s.', lineno=76, col_offset=-1), Mod(), Call(Name('locals', Load(), lineno=76, col_offset=25), [], [], None, None, lineno=76, col_offset=25), lineno=76, col_offset=-1)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), Return(Tuple([Name('options', Load(), lineno=78, col_offset=16), Name('positional_args', Load(), lineno=78, col_offset=25)], Load(), lineno=78, col_offset=16), lineno=78, col_offset=8)], [], lineno=50, col_offset=4), FunctionDef('assertRaises', arguments([Name('self', Param(), lineno=80, col_offset=21), Name('func', Param(), lineno=81, col_offset=21), Name('args', Param(), lineno=82, col_offset=21), Name('kwargs', Param(), lineno=83, col_offset=21), Name('expected_exception', Param(), lineno=84, col_offset=21), Name('expected_message', Param(), lineno=85, col_offset=21)], None, None, []), [Expr(Str('\n        Assert that the expected exception is raised when calling a\n        function, and that the right error message is included with\n        that exception.\n\n        Arguments:\n          func -- the function to call\n          args -- positional arguments to `func`\n          kwargs -- keyword arguments to `func`\n          expected_exception -- exception that should be raised\n          expected_message -- expected exception message (or pattern\n            if a compiled regex object)\n\n        Returns the exception raised for further testing.\n        ', lineno=100, col_offset=-1), lineno=100, col_offset=-1), If(Compare(Name('args', Load(), lineno=101, col_offset=11), [Is()], [Name('None', Load(), lineno=101, col_offset=19)], lineno=101, col_offset=11), [Assign([Name('args', Store(), lineno=102, col_offset=12)], Tuple([], Load(), lineno=102, col_offset=19), lineno=102, col_offset=12)], [], lineno=101, col_offset=8), If(Compare(Name('kwargs', Load(), lineno=103, col_offset=11), [Is()], [Name('None', Load(), lineno=103, col_offset=21)], lineno=103, col_offset=11), [Assign([Name('kwargs', Store(), lineno=104, col_offset=12)], Dict([], [], lineno=104, col_offset=21), lineno=104, col_offset=12)], [], lineno=103, col_offset=8), TryExcept([Expr(Call(Name('func', Load(), lineno=107, col_offset=12), [], [], Name('args', Load(), lineno=107, col_offset=18), Name('kwargs', Load(), lineno=107, col_offset=26), lineno=107, col_offset=12), lineno=107, col_offset=12)], [ExceptHandler(Name('expected_exception', Load(), lineno=108, col_offset=15), Name('err', Store(), lineno=108, col_offset=35), [Assign([Name('actual_message', Store(), lineno=109, col_offset=12)], Call(Name('str', Load(), lineno=109, col_offset=29), [Name('err', Load(), lineno=109, col_offset=33)], [], None, None, lineno=109, col_offset=29), lineno=109, col_offset=12), If(Call(Name('isinstance', Load(), lineno=110, col_offset=15), [Name('expected_message', Load(), lineno=110, col_offset=26), Name('retype', Load(), lineno=110, col_offset=44)], [], None, None, lineno=110, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=16), 'assertTrue', Load(), lineno=111, col_offset=16), [Call(Attribute(Name('expected_message', Load(), lineno=111, col_offset=32), 'search', Load(), lineno=111, col_offset=32), [Name('actual_message', Load(), lineno=111, col_offset=56)], [], None, None, lineno=111, col_offset=32), BinOp(Str("expected exception message pattern:\n/%s/\nactual exception message:\n'''%s'''\n", lineno=117, col_offset=-1), Mod(), Tuple([Attribute(Name('expected_message', Load(), lineno=117, col_offset=7), 'pattern', Load(), lineno=117, col_offset=7), Name('actual_message', Load(), lineno=117, col_offset=33)], Load(), lineno=117, col_offset=7), lineno=117, col_offset=-1)], [], None, None, lineno=111, col_offset=16), lineno=111, col_offset=16)], [Expr(Call(Attribute(Name('self', Load(), lineno=119, col_offset=16), 'assertEqual', Load(), lineno=119, col_offset=16), [Name('actual_message', Load(), lineno=119, col_offset=33), Name('expected_message', Load(), lineno=120, col_offset=33), BinOp(Str("expected exception message:\n'''%s'''\nactual exception message:\n'''%s'''\n", lineno=126, col_offset=-1), Mod(), Tuple([Name('expected_message', Load(), lineno=126, col_offset=7), Name('actual_message', Load(), lineno=126, col_offset=25)], Load(), lineno=126, col_offset=7), lineno=126, col_offset=-1)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=16)], lineno=110, col_offset=12), Return(Name('err', Load(), lineno=128, col_offset=19), lineno=128, col_offset=12)], lineno=108, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=12), 'fail', Load(), lineno=130, col_offset=12), [BinOp(Str('expected exception %(expected_exception)s not raised\ncalled %(func)r\nwith args %(args)r\nand kwargs %(kwargs)r\n', lineno=134, col_offset=-1), Mod(), Call(Name('locals', Load(), lineno=134, col_offset=6), [], [], None, None, lineno=134, col_offset=6), lineno=134, col_offset=-1)], [], None, None, lineno=130, col_offset=12), lineno=130, col_offset=12)], lineno=106, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('assertParseFail', arguments([Name('self', Param(), lineno=139, col_offset=24), Name('cmdline_args', Param(), lineno=139, col_offset=30), Name('expected_output', Param(), lineno=139, col_offset=44)], None, None, []), [Expr(Str('\n        Assert the parser fails with the expected message.  Caller\n        must ensure that self.parser is an InterceptingOptionParser.\n        ', lineno=143, col_offset=-1), lineno=143, col_offset=-1), TryExcept([Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=145, col_offset=12), 'parser', Load(), lineno=145, col_offset=12), 'parse_args', Load(), lineno=145, col_offset=12), [Name('cmdline_args', Load(), lineno=145, col_offset=35)], [], None, None, lineno=145, col_offset=12), lineno=145, col_offset=12)], [ExceptHandler(Name('InterceptedError', Load(), lineno=146, col_offset=15), Name('err', Store(), lineno=146, col_offset=33), [Expr(Call(Attribute(Name('self', Load(), lineno=147, col_offset=12), 'assertEqual', Load(), lineno=147, col_offset=12), [Attribute(Name('err', Load(), lineno=147, col_offset=29), 'error_message', Load(), lineno=147, col_offset=29), Name('expected_output', Load(), lineno=147, col_offset=48)], [], None, None, lineno=147, col_offset=12), lineno=147, col_offset=12)], lineno=146, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=12), 'assertFalse', Load(), lineno=149, col_offset=12), [Str('expected parse failure', lineno=149, col_offset=29)], [], None, None, lineno=149, col_offset=12), lineno=149, col_offset=12)], lineno=144, col_offset=8)], [], lineno=139, col_offset=4), FunctionDef('assertOutput', arguments([Name('self', Param(), lineno=151, col_offset=21), Name('cmdline_args', Param(), lineno=152, col_offset=21), Name('expected_output', Param(), lineno=153, col_offset=21), Name('expected_status', Param(), lineno=154, col_offset=21), Name('expected_error', Param(), lineno=155, col_offset=21)], None, None, [Num(0, lineno=154, col_offset=37), Name('None', Load(), lineno=155, col_offset=36)]), [Expr(Str('Assert the parser prints the expected output on stdout.', lineno=156, col_offset=8), lineno=156, col_offset=8), Assign([Name('save_stdout', Store(), lineno=157, col_offset=8)], Attribute(Name('sys', Load(), lineno=157, col_offset=22), 'stdout', Load(), lineno=157, col_offset=22), lineno=157, col_offset=8), Assign([Name('encoding', Store(), lineno=158, col_offset=8)], Call(Name('getattr', Load(), lineno=158, col_offset=19), [Name('save_stdout', Load(), lineno=158, col_offset=27), Str('encoding', lineno=158, col_offset=40), Name('None', Load(), lineno=158, col_offset=52)], [], None, None, lineno=158, col_offset=19), lineno=158, col_offset=8), TryExcept([TryFinally([Assign([Attribute(Name('sys', Load(), lineno=161, col_offset=16), 'stdout', Store(), lineno=161, col_offset=16)], Call(Name('StringIO', Load(), lineno=161, col_offset=29), [], [], None, None, lineno=161, col_offset=29), lineno=161, col_offset=16), If(Name('encoding', Load(), lineno=162, col_offset=19), [Assign([Attribute(Attribute(Name('sys', Load(), lineno=163, col_offset=20), 'stdout', Load(), lineno=163, col_offset=20), 'encoding', Store(), lineno=163, col_offset=20)], Name('encoding', Load(), lineno=163, col_offset=42), lineno=163, col_offset=20)], [], lineno=162, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=164, col_offset=16), 'parser', Load(), lineno=164, col_offset=16), 'parse_args', Load(), lineno=164, col_offset=16), [Name('cmdline_args', Load(), lineno=164, col_offset=39)], [], None, None, lineno=164, col_offset=16), lineno=164, col_offset=16)], [Assign([Name('output', Store(), lineno=166, col_offset=16)], Call(Attribute(Attribute(Name('sys', Load(), lineno=166, col_offset=25), 'stdout', Load(), lineno=166, col_offset=25), 'getvalue', Load(), lineno=166, col_offset=25), [], [], None, None, lineno=166, col_offset=25), lineno=166, col_offset=16), Assign([Attribute(Name('sys', Load(), lineno=167, col_offset=16), 'stdout', Store(), lineno=167, col_offset=16)], Name('save_stdout', Load(), lineno=167, col_offset=29), lineno=167, col_offset=16)], lineno=160, col_offset=12)], [ExceptHandler(Name('InterceptedError', Load(), lineno=169, col_offset=15), Name('err', Store(), lineno=169, col_offset=33), [Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=12), 'assertTrue', Load(), lineno=170, col_offset=12), [Compare(Call(Name('type', Load(), lineno=171, col_offset=16), [Name('output', Load(), lineno=171, col_offset=21)], [], None, None, lineno=171, col_offset=16), [Is()], [Attribute(Name('types', Load(), lineno=171, col_offset=32), 'StringType', Load(), lineno=171, col_offset=32)], lineno=171, col_offset=16), BinOp(Str('expected output to be an ordinary string, not %r', lineno=172, col_offset=16), Mod(), Call(Name('type', Load(), lineno=173, col_offset=18), [Name('output', Load(), lineno=173, col_offset=23)], [], None, None, lineno=173, col_offset=18), lineno=172, col_offset=16)], [], None, None, lineno=170, col_offset=12), lineno=170, col_offset=12), If(Compare(Name('output', Load(), lineno=175, col_offset=15), [NotEq()], [Name('expected_output', Load(), lineno=175, col_offset=25)], lineno=175, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=176, col_offset=16), 'fail', Load(), lineno=176, col_offset=16), [BinOp(BinOp(BinOp(BinOp(Str("expected: \n'''\n", lineno=176, col_offset=26), Add(), Name('expected_output', Load(), lineno=176, col_offset=48), lineno=176, col_offset=26), Add(), Str("'''\nbut got \n'''\n", lineno=177, col_offset=26), lineno=176, col_offset=64), Add(), Name('output', Load(), lineno=177, col_offset=51), lineno=177, col_offset=49), Add(), Str("'''", lineno=177, col_offset=60), lineno=177, col_offset=58)], [], None, None, lineno=176, col_offset=16), lineno=176, col_offset=16)], [], lineno=175, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=178, col_offset=12), 'assertEqual', Load(), lineno=178, col_offset=12), [Attribute(Name('err', Load(), lineno=178, col_offset=29), 'exit_status', Load(), lineno=178, col_offset=29), Name('expected_status', Load(), lineno=178, col_offset=46)], [], None, None, lineno=178, col_offset=12), lineno=178, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=12), 'assertEqual', Load(), lineno=179, col_offset=12), [Attribute(Name('err', Load(), lineno=179, col_offset=29), 'exit_message', Load(), lineno=179, col_offset=29), Name('expected_error', Load(), lineno=179, col_offset=47)], [], None, None, lineno=179, col_offset=12), lineno=179, col_offset=12)], lineno=169, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'assertFalse', Load(), lineno=181, col_offset=12), [Str('expected parser.exit()', lineno=181, col_offset=29)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], lineno=159, col_offset=8)], [], lineno=151, col_offset=4), FunctionDef('assertTypeError', arguments([Name('self', Param(), lineno=183, col_offset=24), Name('func', Param(), lineno=183, col_offset=30), Name('expected_message', Param(), lineno=183, col_offset=36)], 'args', None, []), [Expr(Str('Assert that TypeError is raised when executing func.', lineno=184, col_offset=8), lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=8), 'assertRaises', Load(), lineno=185, col_offset=8), [Name('func', Load(), lineno=185, col_offset=26), Name('args', Load(), lineno=185, col_offset=32), Name('None', Load(), lineno=185, col_offset=38), Name('TypeError', Load(), lineno=185, col_offset=44), Name('expected_message', Load(), lineno=185, col_offset=55)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('assertHelp', arguments([Name('self', Param(), lineno=187, col_offset=19), Name('parser', Param(), lineno=187, col_offset=25), Name('expected_help', Param(), lineno=187, col_offset=33)], None, None, []), [Assign([Name('actual_help', Store(), lineno=188, col_offset=8)], Call(Attribute(Name('parser', Load(), lineno=188, col_offset=22), 'format_help', Load(), lineno=188, col_offset=22), [], [], None, None, lineno=188, col_offset=22), lineno=188, col_offset=8), If(Compare(Name('actual_help', Load(), lineno=189, col_offset=11), [NotEq()], [Name('expected_help', Load(), lineno=189, col_offset=26)], lineno=189, col_offset=11), [Raise(Call(Attribute(Name('self', Load(), lineno=190, col_offset=18), 'failureException', Load(), lineno=190, col_offset=18), [BinOp(BinOp(BinOp(BinOp(Str('help text failure; expected:\n"', lineno=191, col_offset=16), Add(), Name('expected_help', Load(), lineno=192, col_offset=16), lineno=191, col_offset=16), Add(), Str('"; got:\n"', lineno=192, col_offset=32), lineno=192, col_offset=30), Add(), Name('actual_help', Load(), lineno=193, col_offset=16), lineno=192, col_offset=45), Add(), Str('"\n', lineno=193, col_offset=30), lineno=193, col_offset=28)], [], None, None, lineno=190, col_offset=18), None, None, lineno=190, col_offset=12)], [], lineno=189, col_offset=8)], [], lineno=187, col_offset=4)], [], lineno=49, col_offset=0), ClassDef('TestOptionChecks', [Name('BaseTest', Load(), lineno=201, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=202, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=203, col_offset=8), 'parser', Store(), lineno=203, col_offset=8)], Call(Name('OptionParser', Load(), lineno=203, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=203, col_offset=41))], None, None, lineno=203, col_offset=22), lineno=203, col_offset=8)], [], lineno=202, col_offset=4), FunctionDef('assertOptionError', arguments([Name('self', Param(), lineno=205, col_offset=26), Name('expected_message', Param(), lineno=205, col_offset=32), Name('args', Param(), lineno=205, col_offset=50), Name('kwargs', Param(), lineno=205, col_offset=59)], None, None, [List([], Load(), lineno=205, col_offset=55), Dict([], [], lineno=205, col_offset=66)]), [Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=8), 'assertRaises', Load(), lineno=206, col_offset=8), [Name('make_option', Load(), lineno=206, col_offset=26), Name('args', Load(), lineno=206, col_offset=39), Name('kwargs', Load(), lineno=206, col_offset=45), Name('OptionError', Load(), lineno=207, col_offset=26), Name('expected_message', Load(), lineno=207, col_offset=39)], [], None, None, lineno=206, col_offset=8), lineno=206, col_offset=8)], [], lineno=205, col_offset=4), FunctionDef('test_opt_string_empty', arguments([Name('self', Param(), lineno=209, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=210, col_offset=8), 'assertTypeError', Load(), lineno=210, col_offset=8), [Name('make_option', Load(), lineno=210, col_offset=29), Str('at least one option string must be supplied', lineno=211, col_offset=29)], [], None, None, lineno=210, col_offset=8), lineno=210, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('test_opt_string_too_short', arguments([Name('self', Param(), lineno=213, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=214, col_offset=8), 'assertOptionError', Load(), lineno=214, col_offset=8), [Str("invalid option string 'b': must be at least two characters long", lineno=215, col_offset=12), List([Str('b', lineno=216, col_offset=13)], Load(), lineno=216, col_offset=12)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8)], [], lineno=213, col_offset=4), FunctionDef('test_opt_string_short_invalid', arguments([Name('self', Param(), lineno=218, col_offset=38)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertOptionError', Load(), lineno=219, col_offset=8), [Str("invalid short option string '--': must be of the form -x, (x any non-dash char)", lineno=220, col_offset=12), List([Str('--', lineno=222, col_offset=13)], Load(), lineno=222, col_offset=12)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('test_opt_string_long_invalid', arguments([Name('self', Param(), lineno=224, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=225, col_offset=8), 'assertOptionError', Load(), lineno=225, col_offset=8), [Str("invalid long option string '---': must start with --, followed by non-dash", lineno=226, col_offset=12), List([Str('---', lineno=228, col_offset=13)], Load(), lineno=228, col_offset=12)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('test_attr_invalid', arguments([Name('self', Param(), lineno=230, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertOptionError', Load(), lineno=231, col_offset=8), [Str('option -b: invalid keyword arguments: bar, foo', lineno=232, col_offset=12), List([Str('-b', lineno=233, col_offset=13)], Load(), lineno=233, col_offset=12), Dict([Str('foo', lineno=233, col_offset=21), Str('bar', lineno=233, col_offset=34)], [Name('None', Load(), lineno=233, col_offset=28), Name('None', Load(), lineno=233, col_offset=41)], lineno=233, col_offset=20)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8)], [], lineno=230, col_offset=4), FunctionDef('test_action_invalid', arguments([Name('self', Param(), lineno=235, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertOptionError', Load(), lineno=236, col_offset=8), [Str("option -b: invalid action: 'foo'", lineno=237, col_offset=12), List([Str('-b', lineno=238, col_offset=13)], Load(), lineno=238, col_offset=12), Dict([Str('action', lineno=238, col_offset=21)], [Str('foo', lineno=238, col_offset=31)], lineno=238, col_offset=20)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8)], [], lineno=235, col_offset=4), FunctionDef('test_type_invalid', arguments([Name('self', Param(), lineno=240, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertOptionError', Load(), lineno=241, col_offset=8), [Str("option -b: invalid option type: 'foo'", lineno=242, col_offset=12), List([Str('-b', lineno=243, col_offset=13)], Load(), lineno=243, col_offset=12), Dict([Str('type', lineno=243, col_offset=21)], [Str('foo', lineno=243, col_offset=29)], lineno=243, col_offset=20)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertOptionError', Load(), lineno=244, col_offset=8), [Str("option -b: invalid option type: 'tuple'", lineno=245, col_offset=12), List([Str('-b', lineno=246, col_offset=13)], Load(), lineno=246, col_offset=12), Dict([Str('type', lineno=246, col_offset=21)], [Name('tuple', Load(), lineno=246, col_offset=29)], lineno=246, col_offset=20)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('test_no_type_for_action', arguments([Name('self', Param(), lineno=248, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertOptionError', Load(), lineno=249, col_offset=8), [Str("option -b: must not supply a type for action 'count'", lineno=250, col_offset=12), List([Str('-b', lineno=251, col_offset=13)], Load(), lineno=251, col_offset=12), Dict([Str('action', lineno=251, col_offset=21), Str('type', lineno=251, col_offset=40)], [Str('count', lineno=251, col_offset=31), Str('int', lineno=251, col_offset=48)], lineno=251, col_offset=20)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8)], [], lineno=248, col_offset=4), FunctionDef('test_no_choices_list', arguments([Name('self', Param(), lineno=253, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=254, col_offset=8), 'assertOptionError', Load(), lineno=254, col_offset=8), [Str("option -b/--bad: must supply a list of choices for type 'choice'", lineno=255, col_offset=12), List([Str('-b', lineno=257, col_offset=13), Str('--bad', lineno=257, col_offset=19)], Load(), lineno=257, col_offset=12), Dict([Str('type', lineno=257, col_offset=30)], [Str('choice', lineno=257, col_offset=38)], lineno=257, col_offset=29)], [], None, None, lineno=254, col_offset=8), lineno=254, col_offset=8)], [], lineno=253, col_offset=4), FunctionDef('test_bad_choices_list', arguments([Name('self', Param(), lineno=259, col_offset=30)], None, None, []), [Assign([Name('typename', Store(), lineno=260, col_offset=8)], Attribute(Call(Name('type', Load(), lineno=260, col_offset=19), [Str('', lineno=260, col_offset=24)], [], None, None, lineno=260, col_offset=19), '__name__', Load(), lineno=260, col_offset=19), lineno=260, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=261, col_offset=8), 'assertOptionError', Load(), lineno=261, col_offset=8), [BinOp(Str("option -b/--bad: choices must be a list of strings ('%s' supplied)", lineno=262, col_offset=12), Mod(), Name('typename', Load(), lineno=263, col_offset=40), lineno=262, col_offset=12), List([Str('-b', lineno=264, col_offset=13), Str('--bad', lineno=264, col_offset=19)], Load(), lineno=264, col_offset=12), Dict([Str('type', lineno=265, col_offset=13), Str('choices', lineno=265, col_offset=31)], [Str('choice', lineno=265, col_offset=21), Str('bad choices', lineno=265, col_offset=41)], lineno=265, col_offset=12)], [], None, None, lineno=261, col_offset=8), lineno=261, col_offset=8)], [], lineno=259, col_offset=4), FunctionDef('test_no_choices_for_type', arguments([Name('self', Param(), lineno=267, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=268, col_offset=8), 'assertOptionError', Load(), lineno=268, col_offset=8), [Str("option -b: must not supply choices for type 'int'", lineno=269, col_offset=12), List([Str('-b', lineno=270, col_offset=13)], Load(), lineno=270, col_offset=12), Dict([Str('type', lineno=270, col_offset=21), Str('choices', lineno=270, col_offset=36)], [Str('int', lineno=270, col_offset=29), Str('bad', lineno=270, col_offset=46)], lineno=270, col_offset=20)], [], None, None, lineno=268, col_offset=8), lineno=268, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_no_const_for_action', arguments([Name('self', Param(), lineno=272, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertOptionError', Load(), lineno=273, col_offset=8), [Str("option -b: 'const' must not be supplied for action 'store'", lineno=274, col_offset=12), List([Str('-b', lineno=275, col_offset=13)], Load(), lineno=275, col_offset=12), Dict([Str('action', lineno=275, col_offset=21), Str('const', lineno=275, col_offset=40)], [Str('store', lineno=275, col_offset=31), Num(1, lineno=275, col_offset=49)], lineno=275, col_offset=20)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8)], [], lineno=272, col_offset=4), FunctionDef('test_no_nargs_for_action', arguments([Name('self', Param(), lineno=277, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=8), 'assertOptionError', Load(), lineno=278, col_offset=8), [Str("option -b: 'nargs' must not be supplied for action 'count'", lineno=279, col_offset=12), List([Str('-b', lineno=280, col_offset=13)], Load(), lineno=280, col_offset=12), Dict([Str('action', lineno=280, col_offset=21), Str('nargs', lineno=280, col_offset=40)], [Str('count', lineno=280, col_offset=31), Num(2, lineno=280, col_offset=49)], lineno=280, col_offset=20)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('test_callback_not_callable', arguments([Name('self', Param(), lineno=282, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=8), 'assertOptionError', Load(), lineno=283, col_offset=8), [Str("option -b: callback not callable: 'foo'", lineno=284, col_offset=12), List([Str('-b', lineno=285, col_offset=13)], Load(), lineno=285, col_offset=12), Dict([Str('action', lineno=285, col_offset=21), Str('callback', lineno=286, col_offset=21)], [Str('callback', lineno=285, col_offset=31), Str('foo', lineno=286, col_offset=33)], lineno=285, col_offset=20)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8)], [], lineno=282, col_offset=4), FunctionDef('dummy', arguments([Name('self', Param(), lineno=288, col_offset=14)], None, None, []), [Pass( lineno=289, col_offset=8)], [], lineno=288, col_offset=4), FunctionDef('test_callback_args_no_tuple', arguments([Name('self', Param(), lineno=291, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'assertOptionError', Load(), lineno=292, col_offset=8), [Str("option -b: callback_args, if supplied, must be a tuple: not 'foo'", lineno=293, col_offset=12), List([Str('-b', lineno=295, col_offset=13)], Load(), lineno=295, col_offset=12), Dict([Str('action', lineno=295, col_offset=21), Str('callback', lineno=296, col_offset=21), Str('callback_args', lineno=297, col_offset=21)], [Str('callback', lineno=295, col_offset=31), Attribute(Name('self', Load(), lineno=296, col_offset=33), 'dummy', Load(), lineno=296, col_offset=33), Str('foo', lineno=297, col_offset=38)], lineno=295, col_offset=20)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('test_callback_kwargs_no_dict', arguments([Name('self', Param(), lineno=299, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'assertOptionError', Load(), lineno=300, col_offset=8), [Str("option -b: callback_kwargs, if supplied, must be a dict: not 'foo'", lineno=301, col_offset=12), List([Str('-b', lineno=303, col_offset=13)], Load(), lineno=303, col_offset=12), Dict([Str('action', lineno=303, col_offset=21), Str('callback', lineno=304, col_offset=21), Str('callback_kwargs', lineno=305, col_offset=21)], [Str('callback', lineno=303, col_offset=31), Attribute(Name('self', Load(), lineno=304, col_offset=33), 'dummy', Load(), lineno=304, col_offset=33), Str('foo', lineno=305, col_offset=40)], lineno=303, col_offset=20)], [], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8)], [], lineno=299, col_offset=4), FunctionDef('test_no_callback_for_action', arguments([Name('self', Param(), lineno=307, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=308, col_offset=8), 'assertOptionError', Load(), lineno=308, col_offset=8), [Str("option -b: callback supplied ('foo') for non-callback option", lineno=309, col_offset=12), List([Str('-b', lineno=310, col_offset=13)], Load(), lineno=310, col_offset=12), Dict([Str('action', lineno=310, col_offset=21), Str('callback', lineno=311, col_offset=21)], [Str('store', lineno=310, col_offset=31), Str('foo', lineno=311, col_offset=33)], lineno=310, col_offset=20)], [], None, None, lineno=308, col_offset=8), lineno=308, col_offset=8)], [], lineno=307, col_offset=4), FunctionDef('test_no_callback_args_for_action', arguments([Name('self', Param(), lineno=313, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=314, col_offset=8), 'assertOptionError', Load(), lineno=314, col_offset=8), [Str('option -b: callback_args supplied for non-callback option', lineno=315, col_offset=12), List([Str('-b', lineno=316, col_offset=13)], Load(), lineno=316, col_offset=12), Dict([Str('action', lineno=316, col_offset=21), Str('callback_args', lineno=317, col_offset=21)], [Str('store', lineno=316, col_offset=31), Str('foo', lineno=317, col_offset=38)], lineno=316, col_offset=20)], [], None, None, lineno=314, col_offset=8), lineno=314, col_offset=8)], [], lineno=313, col_offset=4), FunctionDef('test_no_callback_kwargs_for_action', arguments([Name('self', Param(), lineno=319, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=320, col_offset=8), 'assertOptionError', Load(), lineno=320, col_offset=8), [Str('option -b: callback_kwargs supplied for non-callback option', lineno=321, col_offset=12), List([Str('-b', lineno=322, col_offset=13)], Load(), lineno=322, col_offset=12), Dict([Str('action', lineno=322, col_offset=21), Str('callback_kwargs', lineno=323, col_offset=21)], [Str('store', lineno=322, col_offset=31), Str('foo', lineno=323, col_offset=40)], lineno=322, col_offset=20)], [], None, None, lineno=320, col_offset=8), lineno=320, col_offset=8)], [], lineno=319, col_offset=4)], [], lineno=201, col_offset=0), ClassDef('TestOptionParser', [Name('BaseTest', Load(), lineno=325, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=326, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=327, col_offset=8), 'parser', Store(), lineno=327, col_offset=8)], Call(Name('OptionParser', Load(), lineno=327, col_offset=22), [], [], None, None, lineno=327, col_offset=22), lineno=327, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=328, col_offset=8), 'parser', Load(), lineno=328, col_offset=8), 'add_option', Load(), lineno=328, col_offset=8), [Str('-v', lineno=328, col_offset=31), Str('--verbose', lineno=328, col_offset=37), Str('-n', lineno=328, col_offset=50), Str('--noisy', lineno=328, col_offset=56)], [keyword('action', Str('store_true', lineno=329, col_offset=33)), keyword('dest', Str('verbose', lineno=329, col_offset=52))], None, None, lineno=328, col_offset=8), lineno=328, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=330, col_offset=8), 'parser', Load(), lineno=330, col_offset=8), 'add_option', Load(), lineno=330, col_offset=8), [Str('-q', lineno=330, col_offset=31), Str('--quiet', lineno=330, col_offset=37), Str('--silent', lineno=330, col_offset=48)], [keyword('action', Str('store_false', lineno=331, col_offset=33)), keyword('dest', Str('verbose', lineno=331, col_offset=53))], None, None, lineno=330, col_offset=8), lineno=330, col_offset=8)], [], lineno=326, col_offset=4), FunctionDef('test_add_option_no_Option', arguments([Name('self', Param(), lineno=333, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=334, col_offset=8), 'assertTypeError', Load(), lineno=334, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=334, col_offset=29), 'parser', Load(), lineno=334, col_offset=29), 'add_option', Load(), lineno=334, col_offset=29), Str('not an Option instance: None', lineno=335, col_offset=29), Name('None', Load(), lineno=335, col_offset=61)], [], None, None, lineno=334, col_offset=8), lineno=334, col_offset=8)], [], lineno=333, col_offset=4), FunctionDef('test_add_option_invalid_arguments', arguments([Name('self', Param(), lineno=337, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'assertTypeError', Load(), lineno=338, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=338, col_offset=29), 'parser', Load(), lineno=338, col_offset=29), 'add_option', Load(), lineno=338, col_offset=29), Str('invalid arguments', lineno=339, col_offset=29), Name('None', Load(), lineno=339, col_offset=50), Name('None', Load(), lineno=339, col_offset=56)], [], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8)], [], lineno=337, col_offset=4), FunctionDef('test_get_option', arguments([Name('self', Param(), lineno=341, col_offset=24)], None, None, []), [Assign([Name('opt1', Store(), lineno=342, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=342, col_offset=15), 'parser', Load(), lineno=342, col_offset=15), 'get_option', Load(), lineno=342, col_offset=15), [Str('-v', lineno=342, col_offset=38)], [], None, None, lineno=342, col_offset=15), lineno=342, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=343, col_offset=8), 'assertIsInstance', Load(), lineno=343, col_offset=8), [Name('opt1', Load(), lineno=343, col_offset=30), Name('Option', Load(), lineno=343, col_offset=36)], [], None, None, lineno=343, col_offset=8), lineno=343, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=344, col_offset=8), 'assertEqual', Load(), lineno=344, col_offset=8), [Attribute(Name('opt1', Load(), lineno=344, col_offset=25), '_short_opts', Load(), lineno=344, col_offset=25), List([Str('-v', lineno=344, col_offset=44), Str('-n', lineno=344, col_offset=50)], Load(), lineno=344, col_offset=43)], [], None, None, lineno=344, col_offset=8), lineno=344, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=345, col_offset=8), 'assertEqual', Load(), lineno=345, col_offset=8), [Attribute(Name('opt1', Load(), lineno=345, col_offset=25), '_long_opts', Load(), lineno=345, col_offset=25), List([Str('--verbose', lineno=345, col_offset=43), Str('--noisy', lineno=345, col_offset=56)], Load(), lineno=345, col_offset=42)], [], None, None, lineno=345, col_offset=8), lineno=345, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=346, col_offset=8), 'assertEqual', Load(), lineno=346, col_offset=8), [Attribute(Name('opt1', Load(), lineno=346, col_offset=25), 'action', Load(), lineno=346, col_offset=25), Str('store_true', lineno=346, col_offset=38)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=347, col_offset=8), 'assertEqual', Load(), lineno=347, col_offset=8), [Attribute(Name('opt1', Load(), lineno=347, col_offset=25), 'dest', Load(), lineno=347, col_offset=25), Str('verbose', lineno=347, col_offset=36)], [], None, None, lineno=347, col_offset=8), lineno=347, col_offset=8)], [], lineno=341, col_offset=4), FunctionDef('test_get_option_equals', arguments([Name('self', Param(), lineno=349, col_offset=31)], None, None, []), [Assign([Name('opt1', Store(), lineno=350, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=350, col_offset=15), 'parser', Load(), lineno=350, col_offset=15), 'get_option', Load(), lineno=350, col_offset=15), [Str('-v', lineno=350, col_offset=38)], [], None, None, lineno=350, col_offset=15), lineno=350, col_offset=8), Assign([Name('opt2', Store(), lineno=351, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=351, col_offset=15), 'parser', Load(), lineno=351, col_offset=15), 'get_option', Load(), lineno=351, col_offset=15), [Str('--verbose', lineno=351, col_offset=38)], [], None, None, lineno=351, col_offset=15), lineno=351, col_offset=8), Assign([Name('opt3', Store(), lineno=352, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=352, col_offset=15), 'parser', Load(), lineno=352, col_offset=15), 'get_option', Load(), lineno=352, col_offset=15), [Str('-n', lineno=352, col_offset=38)], [], None, None, lineno=352, col_offset=15), lineno=352, col_offset=8), Assign([Name('opt4', Store(), lineno=353, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=353, col_offset=15), 'parser', Load(), lineno=353, col_offset=15), 'get_option', Load(), lineno=353, col_offset=15), [Str('--noisy', lineno=353, col_offset=38)], [], None, None, lineno=353, col_offset=15), lineno=353, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=354, col_offset=8), 'assertTrue', Load(), lineno=354, col_offset=8), [Compare(Name('opt1', Load(), lineno=354, col_offset=24), [Is(), Is(), Is()], [Name('opt2', Load(), lineno=354, col_offset=32), Name('opt3', Load(), lineno=354, col_offset=40), Name('opt4', Load(), lineno=354, col_offset=48)], lineno=354, col_offset=24)], [], None, None, lineno=354, col_offset=8), lineno=354, col_offset=8)], [], lineno=349, col_offset=4), FunctionDef('test_has_option', arguments([Name('self', Param(), lineno=356, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=357, col_offset=8), 'assertTrue', Load(), lineno=357, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=357, col_offset=24), 'parser', Load(), lineno=357, col_offset=24), 'has_option', Load(), lineno=357, col_offset=24), [Str('-v', lineno=357, col_offset=47)], [], None, None, lineno=357, col_offset=24)], [], None, None, lineno=357, col_offset=8), lineno=357, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=358, col_offset=8), 'assertTrue', Load(), lineno=358, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=358, col_offset=24), 'parser', Load(), lineno=358, col_offset=24), 'has_option', Load(), lineno=358, col_offset=24), [Str('--verbose', lineno=358, col_offset=47)], [], None, None, lineno=358, col_offset=24)], [], None, None, lineno=358, col_offset=8), lineno=358, col_offset=8)], [], lineno=356, col_offset=4), FunctionDef('assertTrueremoved', arguments([Name('self', Param(), lineno=360, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=361, col_offset=8), 'assertTrue', Load(), lineno=361, col_offset=8), [Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=361, col_offset=24), 'parser', Load(), lineno=361, col_offset=24), 'get_option', Load(), lineno=361, col_offset=24), [Str('-v', lineno=361, col_offset=47)], [], None, None, lineno=361, col_offset=24), [Is()], [Name('None', Load(), lineno=361, col_offset=56)], lineno=361, col_offset=24)], [], None, None, lineno=361, col_offset=8), lineno=361, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=362, col_offset=8), 'assertTrue', Load(), lineno=362, col_offset=8), [Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=362, col_offset=24), 'parser', Load(), lineno=362, col_offset=24), 'get_option', Load(), lineno=362, col_offset=24), [Str('--verbose', lineno=362, col_offset=47)], [], None, None, lineno=362, col_offset=24), [Is()], [Name('None', Load(), lineno=362, col_offset=63)], lineno=362, col_offset=24)], [], None, None, lineno=362, col_offset=8), lineno=362, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=363, col_offset=8), 'assertTrue', Load(), lineno=363, col_offset=8), [Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=363, col_offset=24), 'parser', Load(), lineno=363, col_offset=24), 'get_option', Load(), lineno=363, col_offset=24), [Str('-n', lineno=363, col_offset=47)], [], None, None, lineno=363, col_offset=24), [Is()], [Name('None', Load(), lineno=363, col_offset=56)], lineno=363, col_offset=24)], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=364, col_offset=8), 'assertTrue', Load(), lineno=364, col_offset=8), [Compare(Call(Attribute(Attribute(Name('self', Load(), lineno=364, col_offset=24), 'parser', Load(), lineno=364, col_offset=24), 'get_option', Load(), lineno=364, col_offset=24), [Str('--noisy', lineno=364, col_offset=47)], [], None, None, lineno=364, col_offset=24), [Is()], [Name('None', Load(), lineno=364, col_offset=61)], lineno=364, col_offset=24)], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=366, col_offset=8), 'assertFalse', Load(), lineno=366, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=366, col_offset=25), 'parser', Load(), lineno=366, col_offset=25), 'has_option', Load(), lineno=366, col_offset=25), [Str('-v', lineno=366, col_offset=48)], [], None, None, lineno=366, col_offset=25)], [], None, None, lineno=366, col_offset=8), lineno=366, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=367, col_offset=8), 'assertFalse', Load(), lineno=367, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=367, col_offset=25), 'parser', Load(), lineno=367, col_offset=25), 'has_option', Load(), lineno=367, col_offset=25), [Str('--verbose', lineno=367, col_offset=48)], [], None, None, lineno=367, col_offset=25)], [], None, None, lineno=367, col_offset=8), lineno=367, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=368, col_offset=8), 'assertFalse', Load(), lineno=368, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=368, col_offset=25), 'parser', Load(), lineno=368, col_offset=25), 'has_option', Load(), lineno=368, col_offset=25), [Str('-n', lineno=368, col_offset=48)], [], None, None, lineno=368, col_offset=25)], [], None, None, lineno=368, col_offset=8), lineno=368, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=369, col_offset=8), 'assertFalse', Load(), lineno=369, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=369, col_offset=25), 'parser', Load(), lineno=369, col_offset=25), 'has_option', Load(), lineno=369, col_offset=25), [Str('--noisy', lineno=369, col_offset=48)], [], None, None, lineno=369, col_offset=25)], [], None, None, lineno=369, col_offset=8), lineno=369, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertTrue', Load(), lineno=371, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=371, col_offset=24), 'parser', Load(), lineno=371, col_offset=24), 'has_option', Load(), lineno=371, col_offset=24), [Str('-q', lineno=371, col_offset=47)], [], None, None, lineno=371, col_offset=24)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'assertTrue', Load(), lineno=372, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=372, col_offset=24), 'parser', Load(), lineno=372, col_offset=24), 'has_option', Load(), lineno=372, col_offset=24), [Str('--silent', lineno=372, col_offset=47)], [], None, None, lineno=372, col_offset=24)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8)], [], lineno=360, col_offset=4), FunctionDef('test_remove_short_opt', arguments([Name('self', Param(), lineno=374, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=375, col_offset=8), 'parser', Load(), lineno=375, col_offset=8), 'remove_option', Load(), lineno=375, col_offset=8), [Str('-n', lineno=375, col_offset=34)], [], None, None, lineno=375, col_offset=8), lineno=375, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertTrueremoved', Load(), lineno=376, col_offset=8), [], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8)], [], lineno=374, col_offset=4), FunctionDef('test_remove_long_opt', arguments([Name('self', Param(), lineno=378, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'parser', Load(), lineno=379, col_offset=8), 'remove_option', Load(), lineno=379, col_offset=8), [Str('--verbose', lineno=379, col_offset=34)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=380, col_offset=8), 'assertTrueremoved', Load(), lineno=380, col_offset=8), [], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8)], [], lineno=378, col_offset=4), FunctionDef('test_remove_nonexistent', arguments([Name('self', Param(), lineno=382, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'assertRaises', Load(), lineno=383, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=383, col_offset=26), 'parser', Load(), lineno=383, col_offset=26), 'remove_option', Load(), lineno=383, col_offset=26), Tuple([Str('foo', lineno=383, col_offset=54)], Load(), lineno=383, col_offset=54), Name('None', Load(), lineno=383, col_offset=63), Name('ValueError', Load(), lineno=384, col_offset=26), Str("no such option 'foo'", lineno=384, col_offset=38)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('test_refleak', arguments([Name('self', Param(), lineno=386, col_offset=21)], None, None, []), [Assign([Name('big_thing', Store(), lineno=391, col_offset=8)], List([Num(42, lineno=391, col_offset=21)], Load(), lineno=391, col_offset=20), lineno=391, col_offset=8), Assign([Name('refcount', Store(), lineno=392, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=392, col_offset=19), 'getrefcount', Load(), lineno=392, col_offset=19), [Name('big_thing', Load(), lineno=392, col_offset=35)], [], None, None, lineno=392, col_offset=19), lineno=392, col_offset=8), Assign([Name('parser', Store(), lineno=393, col_offset=8)], Call(Name('OptionParser', Load(), lineno=393, col_offset=17), [], [], None, None, lineno=393, col_offset=17), lineno=393, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=394, col_offset=8), 'add_option', Load(), lineno=394, col_offset=8), [Str('-a', lineno=394, col_offset=26), Str('--aaarggh', lineno=394, col_offset=32)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Assign([Attribute(Name('parser', Load(), lineno=395, col_offset=8), 'big_thing', Store(), lineno=395, col_offset=8)], Name('big_thing', Load(), lineno=395, col_offset=27), lineno=395, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=397, col_offset=8), 'destroy', Load(), lineno=397, col_offset=8), [], [], None, None, lineno=397, col_offset=8), lineno=397, col_offset=8), Delete([Name('parser', Del(), lineno=399, col_offset=12)], lineno=399, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'assertEqual', Load(), lineno=400, col_offset=8), [Name('refcount', Load(), lineno=400, col_offset=25), Call(Attribute(Name('sys', Load(), lineno=400, col_offset=35), 'getrefcount', Load(), lineno=400, col_offset=35), [Name('big_thing', Load(), lineno=400, col_offset=51)], [], None, None, lineno=400, col_offset=35)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8)], [], lineno=386, col_offset=4)], [], lineno=325, col_offset=0), ClassDef('TestOptionValues', [Name('BaseTest', Load(), lineno=403, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=404, col_offset=14)], None, None, []), [Pass( lineno=405, col_offset=8)], [], lineno=404, col_offset=4), FunctionDef('test_basics', arguments([Name('self', Param(), lineno=407, col_offset=20)], None, None, []), [Assign([Name('values', Store(), lineno=408, col_offset=8)], Call(Name('Values', Load(), lineno=408, col_offset=17), [], [], None, None, lineno=408, col_offset=17), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertEqual', Load(), lineno=409, col_offset=8), [Call(Name('vars', Load(), lineno=409, col_offset=25), [Name('values', Load(), lineno=409, col_offset=30)], [], None, None, lineno=409, col_offset=25), Dict([], [], lineno=409, col_offset=39)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Name('values', Load(), lineno=410, col_offset=25), Dict([], [], lineno=410, col_offset=33)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertNotEqual', Load(), lineno=411, col_offset=8), [Name('values', Load(), lineno=411, col_offset=28), Dict([Str('foo', lineno=411, col_offset=37)], [Str('bar', lineno=411, col_offset=44)], lineno=411, col_offset=36)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertNotEqual', Load(), lineno=412, col_offset=8), [Name('values', Load(), lineno=412, col_offset=28), Str('', lineno=412, col_offset=36)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Assign([Name('dict', Store(), lineno=414, col_offset=8)], Dict([Str('foo', lineno=414, col_offset=16), Str('baz', lineno=414, col_offset=30)], [Str('bar', lineno=414, col_offset=23), Num(42, lineno=414, col_offset=37)], lineno=414, col_offset=15), lineno=414, col_offset=8), Assign([Name('values', Store(), lineno=415, col_offset=8)], Call(Name('Values', Load(), lineno=415, col_offset=17), [], [keyword('defaults', Name('dict', Load(), lineno=415, col_offset=33))], None, None, lineno=415, col_offset=17), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertEqual', Load(), lineno=416, col_offset=8), [Call(Name('vars', Load(), lineno=416, col_offset=25), [Name('values', Load(), lineno=416, col_offset=30)], [], None, None, lineno=416, col_offset=25), Name('dict', Load(), lineno=416, col_offset=39)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=417, col_offset=8), 'assertEqual', Load(), lineno=417, col_offset=8), [Name('values', Load(), lineno=417, col_offset=25), Name('dict', Load(), lineno=417, col_offset=33)], [], None, None, lineno=417, col_offset=8), lineno=417, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=418, col_offset=8), 'assertNotEqual', Load(), lineno=418, col_offset=8), [Name('values', Load(), lineno=418, col_offset=28), Dict([Str('foo', lineno=418, col_offset=37)], [Str('bar', lineno=418, col_offset=44)], lineno=418, col_offset=36)], [], None, None, lineno=418, col_offset=8), lineno=418, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=419, col_offset=8), 'assertNotEqual', Load(), lineno=419, col_offset=8), [Name('values', Load(), lineno=419, col_offset=28), Dict([], [], lineno=419, col_offset=36)], [], None, None, lineno=419, col_offset=8), lineno=419, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=420, col_offset=8), 'assertNotEqual', Load(), lineno=420, col_offset=8), [Name('values', Load(), lineno=420, col_offset=28), Str('', lineno=420, col_offset=36)], [], None, None, lineno=420, col_offset=8), lineno=420, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=421, col_offset=8), 'assertNotEqual', Load(), lineno=421, col_offset=8), [Name('values', Load(), lineno=421, col_offset=28), List([], Load(), lineno=421, col_offset=36)], [], None, None, lineno=421, col_offset=8), lineno=421, col_offset=8)], [], lineno=407, col_offset=4)], [], lineno=403, col_offset=0), ClassDef('TestTypeAliases', [Name('BaseTest', Load(), lineno=424, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=425, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=426, col_offset=8), 'parser', Store(), lineno=426, col_offset=8)], Call(Name('OptionParser', Load(), lineno=426, col_offset=22), [], [], None, None, lineno=426, col_offset=22), lineno=426, col_offset=8)], [], lineno=425, col_offset=4), FunctionDef('test_str_aliases_string', arguments([Name('self', Param(), lineno=428, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=429, col_offset=8), 'parser', Load(), lineno=429, col_offset=8), 'add_option', Load(), lineno=429, col_offset=8), [Str('-s', lineno=429, col_offset=31)], [keyword('type', Str('str', lineno=429, col_offset=42))], None, None, lineno=429, col_offset=8), lineno=429, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=430, col_offset=8), 'assertEqual', Load(), lineno=430, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=430, col_offset=25), 'parser', Load(), lineno=430, col_offset=25), 'get_option', Load(), lineno=430, col_offset=25), [Str('-s', lineno=430, col_offset=48)], [], None, None, lineno=430, col_offset=25), 'type', Load(), lineno=430, col_offset=25), Str('string', lineno=430, col_offset=60)], [], None, None, lineno=430, col_offset=8), lineno=430, col_offset=8)], [], lineno=428, col_offset=4), FunctionDef('test_new_type_object', arguments([Name('self', Param(), lineno=432, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'parser', Load(), lineno=433, col_offset=8), 'add_option', Load(), lineno=433, col_offset=8), [Str('-s', lineno=433, col_offset=31)], [keyword('type', Name('str', Load(), lineno=433, col_offset=42))], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=434, col_offset=8), 'assertEqual', Load(), lineno=434, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=434, col_offset=25), 'parser', Load(), lineno=434, col_offset=25), 'get_option', Load(), lineno=434, col_offset=25), [Str('-s', lineno=434, col_offset=48)], [], None, None, lineno=434, col_offset=25), 'type', Load(), lineno=434, col_offset=25), Str('string', lineno=434, col_offset=60)], [], None, None, lineno=434, col_offset=8), lineno=434, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=435, col_offset=8), 'parser', Load(), lineno=435, col_offset=8), 'add_option', Load(), lineno=435, col_offset=8), [Str('-x', lineno=435, col_offset=31)], [keyword('type', Name('int', Load(), lineno=435, col_offset=42))], None, None, lineno=435, col_offset=8), lineno=435, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=436, col_offset=8), 'assertEqual', Load(), lineno=436, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=436, col_offset=25), 'parser', Load(), lineno=436, col_offset=25), 'get_option', Load(), lineno=436, col_offset=25), [Str('-x', lineno=436, col_offset=48)], [], None, None, lineno=436, col_offset=25), 'type', Load(), lineno=436, col_offset=25), Str('int', lineno=436, col_offset=60)], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8)], [], lineno=432, col_offset=4), FunctionDef('test_old_type_object', arguments([Name('self', Param(), lineno=438, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=439, col_offset=8), 'parser', Load(), lineno=439, col_offset=8), 'add_option', Load(), lineno=439, col_offset=8), [Str('-s', lineno=439, col_offset=31)], [keyword('type', Attribute(Name('types', Load(), lineno=439, col_offset=42), 'StringType', Load(), lineno=439, col_offset=42))], None, None, lineno=439, col_offset=8), lineno=439, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=440, col_offset=8), 'assertEqual', Load(), lineno=440, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=440, col_offset=25), 'parser', Load(), lineno=440, col_offset=25), 'get_option', Load(), lineno=440, col_offset=25), [Str('-s', lineno=440, col_offset=48)], [], None, None, lineno=440, col_offset=25), 'type', Load(), lineno=440, col_offset=25), Str('string', lineno=440, col_offset=60)], [], None, None, lineno=440, col_offset=8), lineno=440, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=441, col_offset=8), 'parser', Load(), lineno=441, col_offset=8), 'add_option', Load(), lineno=441, col_offset=8), [Str('-x', lineno=441, col_offset=31)], [keyword('type', Attribute(Name('types', Load(), lineno=441, col_offset=42), 'IntType', Load(), lineno=441, col_offset=42))], None, None, lineno=441, col_offset=8), lineno=441, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=442, col_offset=8), 'assertEqual', Load(), lineno=442, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=442, col_offset=25), 'parser', Load(), lineno=442, col_offset=25), 'get_option', Load(), lineno=442, col_offset=25), [Str('-x', lineno=442, col_offset=48)], [], None, None, lineno=442, col_offset=25), 'type', Load(), lineno=442, col_offset=25), Str('int', lineno=442, col_offset=60)], [], None, None, lineno=442, col_offset=8), lineno=442, col_offset=8)], [], lineno=438, col_offset=4)], [], lineno=424, col_offset=0), Assign([Name('_time_units', Store(), lineno=446, col_offset=0)], Dict([Str('s', lineno=446, col_offset=16), Str('m', lineno=446, col_offset=25), Str('h', lineno=446, col_offset=35), Str('d', lineno=446, col_offset=48)], [Num(1, lineno=446, col_offset=22), Num(60, lineno=446, col_offset=31), BinOp(Num(60, lineno=446, col_offset=41), Mult(), Num(60, lineno=446, col_offset=44), lineno=446, col_offset=41), BinOp(BinOp(Num(60, lineno=446, col_offset=54), Mult(), Num(60, lineno=446, col_offset=57), lineno=446, col_offset=54), Mult(), Num(24, lineno=446, col_offset=60), lineno=446, col_offset=59)], lineno=446, col_offset=14), lineno=446, col_offset=0), FunctionDef('_check_duration', arguments([Name('option', Param(), lineno=448, col_offset=20), Name('opt', Param(), lineno=448, col_offset=28), Name('value', Param(), lineno=448, col_offset=33)], None, None, []), [TryExcept([If(Call(Attribute(Subscript(Name('value', Load(), lineno=450, col_offset=11), Index(Num(-1, lineno=450, col_offset=18)), Load(), lineno=450, col_offset=11), 'isdigit', Load(), lineno=450, col_offset=11), [], [], None, None, lineno=450, col_offset=11), [Return(Call(Name('int', Load(), lineno=451, col_offset=19), [Name('value', Load(), lineno=451, col_offset=23)], [], None, None, lineno=451, col_offset=19), lineno=451, col_offset=12)], [Return(BinOp(Call(Name('int', Load(), lineno=453, col_offset=19), [Subscript(Name('value', Load(), lineno=453, col_offset=23), Slice(None, Num(-1, lineno=453, col_offset=31), None), Load(), lineno=453, col_offset=23)], [], None, None, lineno=453, col_offset=19), Mult(), Subscript(Name('_time_units', Load(), lineno=453, col_offset=37), Index(Subscript(Name('value', Load(), lineno=453, col_offset=49), Index(Num(-1, lineno=453, col_offset=56)), Load(), lineno=453, col_offset=49)), Load(), lineno=453, col_offset=37), lineno=453, col_offset=19), lineno=453, col_offset=12)], lineno=450, col_offset=8)], [ExceptHandler(Tuple([Name('ValueError', Load(), lineno=454, col_offset=12), Name('IndexError', Load(), lineno=454, col_offset=24)], Load(), lineno=454, col_offset=12), None, [Raise(Call(Name('OptionValueError', Load(), lineno=455, col_offset=14), [BinOp(Str('option %s: invalid duration: %r', lineno=456, col_offset=12), Mod(), Tuple([Name('opt', Load(), lineno=456, col_offset=49), Name('value', Load(), lineno=456, col_offset=54)], Load(), lineno=456, col_offset=49), lineno=456, col_offset=12)], [], None, None, lineno=455, col_offset=14), None, None, lineno=455, col_offset=8)], lineno=454, col_offset=4)], [], lineno=449, col_offset=4)], [], lineno=448, col_offset=0), ClassDef('DurationOption', [Name('Option', Load(), lineno=458, col_offset=21)], [Assign([Name('TYPES', Store(), lineno=459, col_offset=4)], BinOp(Attribute(Name('Option', Load(), lineno=459, col_offset=12), 'TYPES', Load(), lineno=459, col_offset=12), Add(), Tuple([Str('duration', lineno=459, col_offset=28)], Load(), lineno=459, col_offset=28), lineno=459, col_offset=12), lineno=459, col_offset=4), Assign([Name('TYPE_CHECKER', Store(), lineno=460, col_offset=4)], Call(Attribute(Name('copy', Load(), lineno=460, col_offset=19), 'copy', Load(), lineno=460, col_offset=19), [Attribute(Name('Option', Load(), lineno=460, col_offset=29), 'TYPE_CHECKER', Load(), lineno=460, col_offset=29)], [], None, None, lineno=460, col_offset=19), lineno=460, col_offset=4), Assign([Subscript(Name('TYPE_CHECKER', Load(), lineno=461, col_offset=4), Index(Str('duration', lineno=461, col_offset=17)), Store(), lineno=461, col_offset=4)], Name('_check_duration', Load(), lineno=461, col_offset=31), lineno=461, col_offset=4)], [], lineno=458, col_offset=0), ClassDef('TestDefaultValues', [Name('BaseTest', Load(), lineno=463, col_offset=24)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=464, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=465, col_offset=8), 'parser', Store(), lineno=465, col_offset=8)], Call(Name('OptionParser', Load(), lineno=465, col_offset=22), [], [], None, None, lineno=465, col_offset=22), lineno=465, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=466, col_offset=8), 'parser', Load(), lineno=466, col_offset=8), 'add_option', Load(), lineno=466, col_offset=8), [Str('-v', lineno=466, col_offset=31), Str('--verbose', lineno=466, col_offset=37)], [keyword('default', Name('True', Load(), lineno=466, col_offset=58))], None, None, lineno=466, col_offset=8), lineno=466, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=467, col_offset=8), 'parser', Load(), lineno=467, col_offset=8), 'add_option', Load(), lineno=467, col_offset=8), [Str('-q', lineno=467, col_offset=31), Str('--quiet', lineno=467, col_offset=37)], [keyword('dest', Str('verbose', lineno=467, col_offset=53))], None, None, lineno=467, col_offset=8), lineno=467, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=468, col_offset=8), 'parser', Load(), lineno=468, col_offset=8), 'add_option', Load(), lineno=468, col_offset=8), [Str('-n', lineno=468, col_offset=31)], [keyword('type', Str('int', lineno=468, col_offset=42)), keyword('default', Num(37, lineno=468, col_offset=57))], None, None, lineno=468, col_offset=8), lineno=468, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=469, col_offset=8), 'parser', Load(), lineno=469, col_offset=8), 'add_option', Load(), lineno=469, col_offset=8), [Str('-m', lineno=469, col_offset=31)], [keyword('type', Str('int', lineno=469, col_offset=42))], None, None, lineno=469, col_offset=8), lineno=469, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=470, col_offset=8), 'parser', Load(), lineno=470, col_offset=8), 'add_option', Load(), lineno=470, col_offset=8), [Str('-s', lineno=470, col_offset=31)], [keyword('default', Str('foo', lineno=470, col_offset=45))], None, None, lineno=470, col_offset=8), lineno=470, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=471, col_offset=8), 'parser', Load(), lineno=471, col_offset=8), 'add_option', Load(), lineno=471, col_offset=8), [Str('-t', lineno=471, col_offset=31)], [], None, None, lineno=471, col_offset=8), lineno=471, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=472, col_offset=8), 'parser', Load(), lineno=472, col_offset=8), 'add_option', Load(), lineno=472, col_offset=8), [Str('-u', lineno=472, col_offset=31)], [keyword('default', Name('None', Load(), lineno=472, col_offset=45))], None, None, lineno=472, col_offset=8), lineno=472, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=473, col_offset=8), 'expected', Store(), lineno=473, col_offset=8)], Dict([Str('verbose', lineno=473, col_offset=26), Str('n', lineno=474, col_offset=26), Str('m', lineno=475, col_offset=26), Str('s', lineno=476, col_offset=26), Str('t', lineno=477, col_offset=26), Str('u', lineno=478, col_offset=26)], [Name('True', Load(), lineno=473, col_offset=37), Num(37, lineno=474, col_offset=31), Name('None', Load(), lineno=475, col_offset=31), Str('foo', lineno=476, col_offset=31), Name('None', Load(), lineno=477, col_offset=31), Name('None', Load(), lineno=478, col_offset=31)], lineno=473, col_offset=24), lineno=473, col_offset=8)], [], lineno=464, col_offset=4), FunctionDef('test_basic_defaults', arguments([Name('self', Param(), lineno=480, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=481, col_offset=8), 'assertEqual', Load(), lineno=481, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=481, col_offset=25), 'parser', Load(), lineno=481, col_offset=25), 'get_default_values', Load(), lineno=481, col_offset=25), [], [], None, None, lineno=481, col_offset=25), Attribute(Name('self', Load(), lineno=481, col_offset=59), 'expected', Load(), lineno=481, col_offset=59)], [], None, None, lineno=481, col_offset=8), lineno=481, col_offset=8)], [], lineno=480, col_offset=4), FunctionDef('test_mixed_defaults_post', arguments([Name('self', Param(), lineno=483, col_offset=33)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=484, col_offset=8), 'parser', Load(), lineno=484, col_offset=8), 'set_defaults', Load(), lineno=484, col_offset=8), [], [keyword('n', Num(42, lineno=484, col_offset=35)), keyword('m', Num(-100, lineno=484, col_offset=42))], None, None, lineno=484, col_offset=8), lineno=484, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=485, col_offset=8), 'expected', Load(), lineno=485, col_offset=8), 'update', Load(), lineno=485, col_offset=8), [Dict([Str('n', lineno=485, col_offset=30), Str('m', lineno=485, col_offset=39)], [Num(42, lineno=485, col_offset=35), Num(-100, lineno=485, col_offset=45)], lineno=485, col_offset=29)], [], None, None, lineno=485, col_offset=8), lineno=485, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=486, col_offset=8), 'assertEqual', Load(), lineno=486, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=486, col_offset=25), 'parser', Load(), lineno=486, col_offset=25), 'get_default_values', Load(), lineno=486, col_offset=25), [], [], None, None, lineno=486, col_offset=25), Attribute(Name('self', Load(), lineno=486, col_offset=59), 'expected', Load(), lineno=486, col_offset=59)], [], None, None, lineno=486, col_offset=8), lineno=486, col_offset=8)], [], lineno=483, col_offset=4), FunctionDef('test_mixed_defaults_pre', arguments([Name('self', Param(), lineno=488, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=489, col_offset=8), 'parser', Load(), lineno=489, col_offset=8), 'set_defaults', Load(), lineno=489, col_offset=8), [], [keyword('x', Str('barf', lineno=489, col_offset=35)), keyword('y', Str('blah', lineno=489, col_offset=45))], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=490, col_offset=8), 'parser', Load(), lineno=490, col_offset=8), 'add_option', Load(), lineno=490, col_offset=8), [Str('-x', lineno=490, col_offset=31)], [keyword('default', Str('frob', lineno=490, col_offset=45))], None, None, lineno=490, col_offset=8), lineno=490, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=491, col_offset=8), 'parser', Load(), lineno=491, col_offset=8), 'add_option', Load(), lineno=491, col_offset=8), [Str('-y', lineno=491, col_offset=31)], [], None, None, lineno=491, col_offset=8), lineno=491, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=493, col_offset=8), 'expected', Load(), lineno=493, col_offset=8), 'update', Load(), lineno=493, col_offset=8), [Dict([Str('x', lineno=493, col_offset=30), Str('y', lineno=493, col_offset=43)], [Str('frob', lineno=493, col_offset=35), Str('blah', lineno=493, col_offset=48)], lineno=493, col_offset=29)], [], None, None, lineno=493, col_offset=8), lineno=493, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=494, col_offset=8), 'assertEqual', Load(), lineno=494, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=494, col_offset=25), 'parser', Load(), lineno=494, col_offset=25), 'get_default_values', Load(), lineno=494, col_offset=25), [], [], None, None, lineno=494, col_offset=25), Attribute(Name('self', Load(), lineno=494, col_offset=59), 'expected', Load(), lineno=494, col_offset=59)], [], None, None, lineno=494, col_offset=8), lineno=494, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=496, col_offset=8), 'parser', Load(), lineno=496, col_offset=8), 'remove_option', Load(), lineno=496, col_offset=8), [Str('-y', lineno=496, col_offset=34)], [], None, None, lineno=496, col_offset=8), lineno=496, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=497, col_offset=8), 'parser', Load(), lineno=497, col_offset=8), 'add_option', Load(), lineno=497, col_offset=8), [Str('-y', lineno=497, col_offset=31)], [keyword('default', Name('None', Load(), lineno=497, col_offset=45))], None, None, lineno=497, col_offset=8), lineno=497, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=498, col_offset=8), 'expected', Load(), lineno=498, col_offset=8), 'update', Load(), lineno=498, col_offset=8), [Dict([Str('y', lineno=498, col_offset=30)], [Name('None', Load(), lineno=498, col_offset=35)], lineno=498, col_offset=29)], [], None, None, lineno=498, col_offset=8), lineno=498, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=499, col_offset=8), 'assertEqual', Load(), lineno=499, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=499, col_offset=25), 'parser', Load(), lineno=499, col_offset=25), 'get_default_values', Load(), lineno=499, col_offset=25), [], [], None, None, lineno=499, col_offset=25), Attribute(Name('self', Load(), lineno=499, col_offset=59), 'expected', Load(), lineno=499, col_offset=59)], [], None, None, lineno=499, col_offset=8), lineno=499, col_offset=8)], [], lineno=488, col_offset=4), FunctionDef('test_process_default', arguments([Name('self', Param(), lineno=501, col_offset=29)], None, None, []), [Assign([Attribute(Attribute(Name('self', Load(), lineno=502, col_offset=8), 'parser', Load(), lineno=502, col_offset=8), 'option_class', Store(), lineno=502, col_offset=8)], Name('DurationOption', Load(), lineno=502, col_offset=35), lineno=502, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=503, col_offset=8), 'parser', Load(), lineno=503, col_offset=8), 'add_option', Load(), lineno=503, col_offset=8), [Str('-d', lineno=503, col_offset=31)], [keyword('type', Str('duration', lineno=503, col_offset=42)), keyword('default', Num(300, lineno=503, col_offset=62))], None, None, lineno=503, col_offset=8), lineno=503, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=504, col_offset=8), 'parser', Load(), lineno=504, col_offset=8), 'add_option', Load(), lineno=504, col_offset=8), [Str('-e', lineno=504, col_offset=31)], [keyword('type', Str('duration', lineno=504, col_offset=42)), keyword('default', Str('6m', lineno=504, col_offset=62))], None, None, lineno=504, col_offset=8), lineno=504, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=505, col_offset=8), 'parser', Load(), lineno=505, col_offset=8), 'set_defaults', Load(), lineno=505, col_offset=8), [], [keyword('n', Str('42', lineno=505, col_offset=35))], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=506, col_offset=8), 'expected', Load(), lineno=506, col_offset=8), 'update', Load(), lineno=506, col_offset=8), [Dict([Str('d', lineno=506, col_offset=30), Str('e', lineno=506, col_offset=40), Str('n', lineno=506, col_offset=50)], [Num(300, lineno=506, col_offset=35), Num(360, lineno=506, col_offset=45), Num(42, lineno=506, col_offset=55)], lineno=506, col_offset=29)], [], None, None, lineno=506, col_offset=8), lineno=506, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=507, col_offset=8), 'assertEqual', Load(), lineno=507, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=507, col_offset=25), 'parser', Load(), lineno=507, col_offset=25), 'get_default_values', Load(), lineno=507, col_offset=25), [], [], None, None, lineno=507, col_offset=25), Attribute(Name('self', Load(), lineno=507, col_offset=59), 'expected', Load(), lineno=507, col_offset=59)], [], None, None, lineno=507, col_offset=8), lineno=507, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=509, col_offset=8), 'parser', Load(), lineno=509, col_offset=8), 'set_process_default_values', Load(), lineno=509, col_offset=8), [Name('False', Load(), lineno=509, col_offset=47)], [], None, None, lineno=509, col_offset=8), lineno=509, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=510, col_offset=8), 'expected', Load(), lineno=510, col_offset=8), 'update', Load(), lineno=510, col_offset=8), [Dict([Str('d', lineno=510, col_offset=30), Str('e', lineno=510, col_offset=40), Str('n', lineno=510, col_offset=51)], [Num(300, lineno=510, col_offset=35), Str('6m', lineno=510, col_offset=45), Str('42', lineno=510, col_offset=56)], lineno=510, col_offset=29)], [], None, None, lineno=510, col_offset=8), lineno=510, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=511, col_offset=8), 'assertEqual', Load(), lineno=511, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=511, col_offset=25), 'parser', Load(), lineno=511, col_offset=25), 'get_default_values', Load(), lineno=511, col_offset=25), [], [], None, None, lineno=511, col_offset=25), Attribute(Name('self', Load(), lineno=511, col_offset=59), 'expected', Load(), lineno=511, col_offset=59)], [], None, None, lineno=511, col_offset=8), lineno=511, col_offset=8)], [], lineno=501, col_offset=4)], [], lineno=463, col_offset=0), ClassDef('TestProgName', [Name('BaseTest', Load(), lineno=514, col_offset=19)], [Expr(Str('\n    Test that %prog expands to the right thing in usage, version,\n    and help strings.\n    ', lineno=518, col_offset=-1), lineno=518, col_offset=-1), FunctionDef('assertUsage', arguments([Name('self', Param(), lineno=520, col_offset=20), Name('parser', Param(), lineno=520, col_offset=26), Name('expected_usage', Param(), lineno=520, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=521, col_offset=8), 'assertEqual', Load(), lineno=521, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=521, col_offset=25), 'get_usage', Load(), lineno=521, col_offset=25), [], [], None, None, lineno=521, col_offset=25), Name('expected_usage', Load(), lineno=521, col_offset=45)], [], None, None, lineno=521, col_offset=8), lineno=521, col_offset=8)], [], lineno=520, col_offset=4), FunctionDef('assertVersion', arguments([Name('self', Param(), lineno=523, col_offset=22), Name('parser', Param(), lineno=523, col_offset=28), Name('expected_version', Param(), lineno=523, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=524, col_offset=8), 'assertEqual', Load(), lineno=524, col_offset=8), [Call(Attribute(Name('parser', Load(), lineno=524, col_offset=25), 'get_version', Load(), lineno=524, col_offset=25), [], [], None, None, lineno=524, col_offset=25), Name('expected_version', Load(), lineno=524, col_offset=47)], [], None, None, lineno=524, col_offset=8), lineno=524, col_offset=8)], [], lineno=523, col_offset=4), FunctionDef('test_default_progname', arguments([Name('self', Param(), lineno=527, col_offset=30)], None, None, []), [Assign([Name('save_argv', Store(), lineno=529, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=529, col_offset=20), 'argv', Load(), lineno=529, col_offset=20), Slice(None, None, None), Load(), lineno=529, col_offset=20), lineno=529, col_offset=8), TryFinally([Assign([Subscript(Attribute(Name('sys', Load(), lineno=531, col_offset=12), 'argv', Load(), lineno=531, col_offset=12), Index(Num(0, lineno=531, col_offset=21)), Store(), lineno=531, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=531, col_offset=26), 'path', Load(), lineno=531, col_offset=26), 'join', Load(), lineno=531, col_offset=26), [Str('foo', lineno=531, col_offset=39), Str('bar', lineno=531, col_offset=46), Str('baz.py', lineno=531, col_offset=53)], [], None, None, lineno=531, col_offset=26), lineno=531, col_offset=12), Assign([Name('parser', Store(), lineno=532, col_offset=12)], Call(Name('OptionParser', Load(), lineno=532, col_offset=21), [Str('%prog ...', lineno=532, col_offset=34)], [keyword('version', Str('%prog 1.2', lineno=532, col_offset=55))], None, None, lineno=532, col_offset=21), lineno=532, col_offset=12), Assign([Name('expected_usage', Store(), lineno=533, col_offset=12)], Str('Usage: baz.py ...\n', lineno=533, col_offset=29), lineno=533, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=12), 'assertUsage', Load(), lineno=534, col_offset=12), [Name('parser', Load(), lineno=534, col_offset=29), Name('expected_usage', Load(), lineno=534, col_offset=37)], [], None, None, lineno=534, col_offset=12), lineno=534, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=535, col_offset=12), 'assertVersion', Load(), lineno=535, col_offset=12), [Name('parser', Load(), lineno=535, col_offset=31), Str('baz.py 1.2', lineno=535, col_offset=39)], [], None, None, lineno=535, col_offset=12), lineno=535, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=536, col_offset=12), 'assertHelp', Load(), lineno=536, col_offset=12), [Name('parser', Load(), lineno=536, col_offset=28), BinOp(BinOp(Name('expected_usage', Load(), lineno=537, col_offset=28), Add(), Str('\n', lineno=537, col_offset=45), lineno=537, col_offset=28), Add(), Str("Options:\n  --version   show program's version number and exit\n  -h, --help  show this help message and exit\n", lineno=538, col_offset=28), lineno=537, col_offset=50)], [], None, None, lineno=536, col_offset=12), lineno=536, col_offset=12)], [Assign([Subscript(Attribute(Name('sys', Load(), lineno=542, col_offset=12), 'argv', Load(), lineno=542, col_offset=12), Slice(None, None, None), Store(), lineno=542, col_offset=12)], Name('save_argv', Load(), lineno=542, col_offset=26), lineno=542, col_offset=12)], lineno=530, col_offset=8)], [], lineno=527, col_offset=4), FunctionDef('test_custom_progname', arguments([Name('self', Param(), lineno=544, col_offset=29)], None, None, []), [Assign([Name('parser', Store(), lineno=545, col_offset=8)], Call(Name('OptionParser', Load(), lineno=545, col_offset=17), [], [keyword('prog', Str('thingy', lineno=545, col_offset=35)), keyword('version', Str('%prog 0.1', lineno=546, col_offset=38)), keyword('usage', Str('%prog arg arg', lineno=547, col_offset=36))], None, None, lineno=545, col_offset=17), lineno=545, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=548, col_offset=8), 'remove_option', Load(), lineno=548, col_offset=8), [Str('-h', lineno=548, col_offset=29)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=549, col_offset=8), 'remove_option', Load(), lineno=549, col_offset=8), [Str('--version', lineno=549, col_offset=29)], [], None, None, lineno=549, col_offset=8), lineno=549, col_offset=8), Assign([Name('expected_usage', Store(), lineno=550, col_offset=8)], Str('Usage: thingy arg arg\n', lineno=550, col_offset=25), lineno=550, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=551, col_offset=8), 'assertUsage', Load(), lineno=551, col_offset=8), [Name('parser', Load(), lineno=551, col_offset=25), Name('expected_usage', Load(), lineno=551, col_offset=33)], [], None, None, lineno=551, col_offset=8), lineno=551, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=552, col_offset=8), 'assertVersion', Load(), lineno=552, col_offset=8), [Name('parser', Load(), lineno=552, col_offset=27), Str('thingy 0.1', lineno=552, col_offset=35)], [], None, None, lineno=552, col_offset=8), lineno=552, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=553, col_offset=8), 'assertHelp', Load(), lineno=553, col_offset=8), [Name('parser', Load(), lineno=553, col_offset=24), BinOp(Name('expected_usage', Load(), lineno=553, col_offset=32), Add(), Str('\n', lineno=553, col_offset=49), lineno=553, col_offset=32)], [], None, None, lineno=553, col_offset=8), lineno=553, col_offset=8)], [], lineno=544, col_offset=4)], [], lineno=514, col_offset=0), ClassDef('TestExpandDefaults', [Name('BaseTest', Load(), lineno=556, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=557, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=558, col_offset=8), 'parser', Store(), lineno=558, col_offset=8)], Call(Name('OptionParser', Load(), lineno=558, col_offset=22), [], [keyword('prog', Str('test', lineno=558, col_offset=40))], None, None, lineno=558, col_offset=22), lineno=558, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=559, col_offset=8), 'help_prefix', Store(), lineno=559, col_offset=8)], Str('Usage: test [options]\n\nOptions:\n  -h, --help            show this help message and exit\n', lineno=564, col_offset=-1), lineno=559, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=565, col_offset=8), 'file_help', Store(), lineno=565, col_offset=8)], Str('read from FILE [default: %default]', lineno=565, col_offset=25), lineno=565, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=566, col_offset=8), 'expected_help_file', Store(), lineno=566, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=566, col_offset=34), 'help_prefix', Load(), lineno=566, col_offset=34), Add(), Str('  -f FILE, --file=FILE  read from FILE [default: foo.txt]\n', lineno=567, col_offset=12), lineno=566, col_offset=34), lineno=566, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=568, col_offset=8), 'expected_help_none', Store(), lineno=568, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=568, col_offset=34), 'help_prefix', Load(), lineno=568, col_offset=34), Add(), Str('  -f FILE, --file=FILE  read from FILE [default: none]\n', lineno=569, col_offset=12), lineno=568, col_offset=34), lineno=568, col_offset=8)], [], lineno=557, col_offset=4), FunctionDef('test_option_default', arguments([Name('self', Param(), lineno=571, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=572, col_offset=8), 'parser', Load(), lineno=572, col_offset=8), 'add_option', Load(), lineno=572, col_offset=8), [Str('-f', lineno=572, col_offset=31), Str('--file', lineno=572, col_offset=37)], [keyword('default', Str('foo.txt', lineno=573, col_offset=39)), keyword('help', Attribute(Name('self', Load(), lineno=574, col_offset=36), 'file_help', Load(), lineno=574, col_offset=36))], None, None, lineno=572, col_offset=8), lineno=572, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=575, col_offset=8), 'assertHelp', Load(), lineno=575, col_offset=8), [Attribute(Name('self', Load(), lineno=575, col_offset=24), 'parser', Load(), lineno=575, col_offset=24), Attribute(Name('self', Load(), lineno=575, col_offset=37), 'expected_help_file', Load(), lineno=575, col_offset=37)], [], None, None, lineno=575, col_offset=8), lineno=575, col_offset=8)], [], lineno=571, col_offset=4), FunctionDef('test_parser_default_1', arguments([Name('self', Param(), lineno=577, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=578, col_offset=8), 'parser', Load(), lineno=578, col_offset=8), 'add_option', Load(), lineno=578, col_offset=8), [Str('-f', lineno=578, col_offset=31), Str('--file', lineno=578, col_offset=37)], [keyword('help', Attribute(Name('self', Load(), lineno=579, col_offset=36), 'file_help', Load(), lineno=579, col_offset=36))], None, None, lineno=578, col_offset=8), lineno=578, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=580, col_offset=8), 'parser', Load(), lineno=580, col_offset=8), 'set_default', Load(), lineno=580, col_offset=8), [Str('file', lineno=580, col_offset=32), Str('foo.txt', lineno=580, col_offset=40)], [], None, None, lineno=580, col_offset=8), lineno=580, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=581, col_offset=8), 'assertHelp', Load(), lineno=581, col_offset=8), [Attribute(Name('self', Load(), lineno=581, col_offset=24), 'parser', Load(), lineno=581, col_offset=24), Attribute(Name('self', Load(), lineno=581, col_offset=37), 'expected_help_file', Load(), lineno=581, col_offset=37)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8)], [], lineno=577, col_offset=4), FunctionDef('test_parser_default_2', arguments([Name('self', Param(), lineno=583, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=584, col_offset=8), 'parser', Load(), lineno=584, col_offset=8), 'add_option', Load(), lineno=584, col_offset=8), [Str('-f', lineno=584, col_offset=31), Str('--file', lineno=584, col_offset=37)], [keyword('help', Attribute(Name('self', Load(), lineno=585, col_offset=36), 'file_help', Load(), lineno=585, col_offset=36))], None, None, lineno=584, col_offset=8), lineno=584, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=586, col_offset=8), 'parser', Load(), lineno=586, col_offset=8), 'set_defaults', Load(), lineno=586, col_offset=8), [], [keyword('file', Str('foo.txt', lineno=586, col_offset=38))], None, None, lineno=586, col_offset=8), lineno=586, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=587, col_offset=8), 'assertHelp', Load(), lineno=587, col_offset=8), [Attribute(Name('self', Load(), lineno=587, col_offset=24), 'parser', Load(), lineno=587, col_offset=24), Attribute(Name('self', Load(), lineno=587, col_offset=37), 'expected_help_file', Load(), lineno=587, col_offset=37)], [], None, None, lineno=587, col_offset=8), lineno=587, col_offset=8)], [], lineno=583, col_offset=4), FunctionDef('test_no_default', arguments([Name('self', Param(), lineno=589, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=590, col_offset=8), 'parser', Load(), lineno=590, col_offset=8), 'add_option', Load(), lineno=590, col_offset=8), [Str('-f', lineno=590, col_offset=31), Str('--file', lineno=590, col_offset=37)], [keyword('help', Attribute(Name('self', Load(), lineno=591, col_offset=36), 'file_help', Load(), lineno=591, col_offset=36))], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=592, col_offset=8), 'assertHelp', Load(), lineno=592, col_offset=8), [Attribute(Name('self', Load(), lineno=592, col_offset=24), 'parser', Load(), lineno=592, col_offset=24), Attribute(Name('self', Load(), lineno=592, col_offset=37), 'expected_help_none', Load(), lineno=592, col_offset=37)], [], None, None, lineno=592, col_offset=8), lineno=592, col_offset=8)], [], lineno=589, col_offset=4), FunctionDef('test_default_none_1', arguments([Name('self', Param(), lineno=594, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=595, col_offset=8), 'parser', Load(), lineno=595, col_offset=8), 'add_option', Load(), lineno=595, col_offset=8), [Str('-f', lineno=595, col_offset=31), Str('--file', lineno=595, col_offset=37)], [keyword('default', Name('None', Load(), lineno=596, col_offset=39)), keyword('help', Attribute(Name('self', Load(), lineno=597, col_offset=36), 'file_help', Load(), lineno=597, col_offset=36))], None, None, lineno=595, col_offset=8), lineno=595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=598, col_offset=8), 'assertHelp', Load(), lineno=598, col_offset=8), [Attribute(Name('self', Load(), lineno=598, col_offset=24), 'parser', Load(), lineno=598, col_offset=24), Attribute(Name('self', Load(), lineno=598, col_offset=37), 'expected_help_none', Load(), lineno=598, col_offset=37)], [], None, None, lineno=598, col_offset=8), lineno=598, col_offset=8)], [], lineno=594, col_offset=4), FunctionDef('test_default_none_2', arguments([Name('self', Param(), lineno=600, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=601, col_offset=8), 'parser', Load(), lineno=601, col_offset=8), 'add_option', Load(), lineno=601, col_offset=8), [Str('-f', lineno=601, col_offset=31), Str('--file', lineno=601, col_offset=37)], [keyword('help', Attribute(Name('self', Load(), lineno=602, col_offset=36), 'file_help', Load(), lineno=602, col_offset=36))], None, None, lineno=601, col_offset=8), lineno=601, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=603, col_offset=8), 'parser', Load(), lineno=603, col_offset=8), 'set_defaults', Load(), lineno=603, col_offset=8), [], [keyword('file', Name('None', Load(), lineno=603, col_offset=38))], None, None, lineno=603, col_offset=8), lineno=603, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=604, col_offset=8), 'assertHelp', Load(), lineno=604, col_offset=8), [Attribute(Name('self', Load(), lineno=604, col_offset=24), 'parser', Load(), lineno=604, col_offset=24), Attribute(Name('self', Load(), lineno=604, col_offset=37), 'expected_help_none', Load(), lineno=604, col_offset=37)], [], None, None, lineno=604, col_offset=8), lineno=604, col_offset=8)], [], lineno=600, col_offset=4), FunctionDef('test_float_default', arguments([Name('self', Param(), lineno=606, col_offset=27)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=607, col_offset=8), 'parser', Load(), lineno=607, col_offset=8), 'add_option', Load(), lineno=607, col_offset=8), [Str('-p', lineno=608, col_offset=12), Str('--prob', lineno=608, col_offset=18)], [keyword('help', Str('blow up with probability PROB [default: %default]', lineno=609, col_offset=17))], None, None, lineno=607, col_offset=8), lineno=607, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=610, col_offset=8), 'parser', Load(), lineno=610, col_offset=8), 'set_defaults', Load(), lineno=610, col_offset=8), [], [keyword('prob', Num(0.43, lineno=610, col_offset=38))], None, None, lineno=610, col_offset=8), lineno=610, col_offset=8), Assign([Name('expected_help', Store(), lineno=611, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=611, col_offset=24), 'help_prefix', Load(), lineno=611, col_offset=24), Add(), Str('  -p PROB, --prob=PROB  blow up with probability PROB [default: 0.43]\n', lineno=612, col_offset=12), lineno=611, col_offset=24), lineno=611, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=613, col_offset=8), 'assertHelp', Load(), lineno=613, col_offset=8), [Attribute(Name('self', Load(), lineno=613, col_offset=24), 'parser', Load(), lineno=613, col_offset=24), Name('expected_help', Load(), lineno=613, col_offset=37)], [], None, None, lineno=613, col_offset=8), lineno=613, col_offset=8)], [], lineno=606, col_offset=4), FunctionDef('test_alt_expand', arguments([Name('self', Param(), lineno=615, col_offset=24)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=616, col_offset=8), 'parser', Load(), lineno=616, col_offset=8), 'add_option', Load(), lineno=616, col_offset=8), [Str('-f', lineno=616, col_offset=31), Str('--file', lineno=616, col_offset=37)], [keyword('default', Str('foo.txt', lineno=617, col_offset=39)), keyword('help', Str('read from FILE [default: *DEFAULT*]', lineno=618, col_offset=36))], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8), Assign([Attribute(Attribute(Attribute(Name('self', Load(), lineno=619, col_offset=8), 'parser', Load(), lineno=619, col_offset=8), 'formatter', Load(), lineno=619, col_offset=8), 'default_tag', Store(), lineno=619, col_offset=8)], Str('*DEFAULT*', lineno=619, col_offset=44), lineno=619, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=620, col_offset=8), 'assertHelp', Load(), lineno=620, col_offset=8), [Attribute(Name('self', Load(), lineno=620, col_offset=24), 'parser', Load(), lineno=620, col_offset=24), Attribute(Name('self', Load(), lineno=620, col_offset=37), 'expected_help_file', Load(), lineno=620, col_offset=37)], [], None, None, lineno=620, col_offset=8), lineno=620, col_offset=8)], [], lineno=615, col_offset=4), FunctionDef('test_no_expand', arguments([Name('self', Param(), lineno=622, col_offset=23)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=623, col_offset=8), 'parser', Load(), lineno=623, col_offset=8), 'add_option', Load(), lineno=623, col_offset=8), [Str('-f', lineno=623, col_offset=31), Str('--file', lineno=623, col_offset=37)], [keyword('default', Str('foo.txt', lineno=624, col_offset=39)), keyword('help', Str('read from %default file', lineno=625, col_offset=36))], None, None, lineno=623, col_offset=8), lineno=623, col_offset=8), Assign([Attribute(Attribute(Attribute(Name('self', Load(), lineno=626, col_offset=8), 'parser', Load(), lineno=626, col_offset=8), 'formatter', Load(), lineno=626, col_offset=8), 'default_tag', Store(), lineno=626, col_offset=8)], Name('None', Load(), lineno=626, col_offset=44), lineno=626, col_offset=8), Assign([Name('expected_help', Store(), lineno=627, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=627, col_offset=24), 'help_prefix', Load(), lineno=627, col_offset=24), Add(), Str('  -f FILE, --file=FILE  read from %default file\n', lineno=628, col_offset=12), lineno=627, col_offset=24), lineno=627, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=629, col_offset=8), 'assertHelp', Load(), lineno=629, col_offset=8), [Attribute(Name('self', Load(), lineno=629, col_offset=24), 'parser', Load(), lineno=629, col_offset=24), Name('expected_help', Load(), lineno=629, col_offset=37)], [], None, None, lineno=629, col_offset=8), lineno=629, col_offset=8)], [], lineno=622, col_offset=4)], [], lineno=556, col_offset=0), ClassDef('TestStandard', [Name('BaseTest', Load(), lineno=634, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=635, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=636, col_offset=8)], List([Call(Name('make_option', Load(), lineno=636, col_offset=19), [Str('-a', lineno=636, col_offset=31)], [keyword('type', Str('string', lineno=636, col_offset=42))], None, None, lineno=636, col_offset=19), Call(Name('make_option', Load(), lineno=637, col_offset=19), [Str('-b', lineno=637, col_offset=31), Str('--boo', lineno=637, col_offset=37)], [keyword('type', Str('int', lineno=637, col_offset=51)), keyword('dest', Str('boo', lineno=637, col_offset=63))], None, None, lineno=637, col_offset=19), Call(Name('make_option', Load(), lineno=638, col_offset=19), [Str('--foo', lineno=638, col_offset=31)], [keyword('action', Str('append', lineno=638, col_offset=47))], None, None, lineno=638, col_offset=19)], Load(), lineno=636, col_offset=18), lineno=636, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=640, col_offset=8), 'parser', Store(), lineno=640, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=640, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=640, col_offset=53)), keyword('option_list', Name('options', Load(), lineno=641, col_offset=59))], None, None, lineno=640, col_offset=22), lineno=640, col_offset=8)], [], lineno=635, col_offset=4), FunctionDef('test_required_value', arguments([Name('self', Param(), lineno=643, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=644, col_offset=8), 'assertParseFail', Load(), lineno=644, col_offset=8), [List([Str('-a', lineno=644, col_offset=30)], Load(), lineno=644, col_offset=29), Str('-a option requires an argument', lineno=644, col_offset=37)], [], None, None, lineno=644, col_offset=8), lineno=644, col_offset=8)], [], lineno=643, col_offset=4), FunctionDef('test_invalid_integer', arguments([Name('self', Param(), lineno=646, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=647, col_offset=8), 'assertParseFail', Load(), lineno=647, col_offset=8), [List([Str('-b', lineno=647, col_offset=30), Str('5x', lineno=647, col_offset=36)], Load(), lineno=647, col_offset=29), Str("option -b: invalid integer value: '5x'", lineno=648, col_offset=29)], [], None, None, lineno=647, col_offset=8), lineno=647, col_offset=8)], [], lineno=646, col_offset=4), FunctionDef('test_no_such_option', arguments([Name('self', Param(), lineno=650, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=8), 'assertParseFail', Load(), lineno=651, col_offset=8), [List([Str('--boo13', lineno=651, col_offset=30)], Load(), lineno=651, col_offset=29), Str('no such option: --boo13', lineno=651, col_offset=42)], [], None, None, lineno=651, col_offset=8), lineno=651, col_offset=8)], [], lineno=650, col_offset=4), FunctionDef('test_long_invalid_integer', arguments([Name('self', Param(), lineno=653, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=654, col_offset=8), 'assertParseFail', Load(), lineno=654, col_offset=8), [List([Str('--boo=x5', lineno=654, col_offset=30)], Load(), lineno=654, col_offset=29), Str("option --boo: invalid integer value: 'x5'", lineno=655, col_offset=29)], [], None, None, lineno=654, col_offset=8), lineno=654, col_offset=8)], [], lineno=653, col_offset=4), FunctionDef('test_empty', arguments([Name('self', Param(), lineno=657, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=658, col_offset=8), 'assertParseOK', Load(), lineno=658, col_offset=8), [List([], Load(), lineno=658, col_offset=27), Dict([Str('a', lineno=658, col_offset=32), Str('boo', lineno=658, col_offset=43), Str('foo', lineno=658, col_offset=56)], [Name('None', Load(), lineno=658, col_offset=37), Name('None', Load(), lineno=658, col_offset=50), Name('None', Load(), lineno=658, col_offset=63)], lineno=658, col_offset=31), List([], Load(), lineno=658, col_offset=70)], [], None, None, lineno=658, col_offset=8), lineno=658, col_offset=8)], [], lineno=657, col_offset=4), FunctionDef('test_shortopt_empty_longopt_append', arguments([Name('self', Param(), lineno=660, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=661, col_offset=8), 'assertParseOK', Load(), lineno=661, col_offset=8), [List([Str('-a', lineno=661, col_offset=28), Str('', lineno=661, col_offset=34), Str('--foo=blah', lineno=661, col_offset=38), Str('--foo=', lineno=661, col_offset=52)], Load(), lineno=661, col_offset=27), Dict([Str('a', lineno=662, col_offset=28), Str('boo', lineno=662, col_offset=37), Str('foo', lineno=662, col_offset=50)], [Str('', lineno=662, col_offset=33), Name('None', Load(), lineno=662, col_offset=44), List([Str('blah', lineno=662, col_offset=58), Str('', lineno=662, col_offset=66)], Load(), lineno=662, col_offset=57)], lineno=662, col_offset=27), List([], Load(), lineno=663, col_offset=27)], [], None, None, lineno=661, col_offset=8), lineno=661, col_offset=8)], [], lineno=660, col_offset=4), FunctionDef('test_long_option_append', arguments([Name('self', Param(), lineno=665, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=666, col_offset=8), 'assertParseOK', Load(), lineno=666, col_offset=8), [List([Str('--foo', lineno=666, col_offset=28), Str('bar', lineno=666, col_offset=37), Str('--foo', lineno=666, col_offset=44), Str('', lineno=666, col_offset=53), Str('--foo=x', lineno=666, col_offset=57)], Load(), lineno=666, col_offset=27), Dict([Str('a', lineno=667, col_offset=28), Str('boo', lineno=668, col_offset=28), Str('foo', lineno=669, col_offset=28)], [Name('None', Load(), lineno=667, col_offset=33), Name('None', Load(), lineno=668, col_offset=35), List([Str('bar', lineno=669, col_offset=36), Str('', lineno=669, col_offset=43), Str('x', lineno=669, col_offset=47)], Load(), lineno=669, col_offset=35)], lineno=667, col_offset=27), List([], Load(), lineno=670, col_offset=27)], [], None, None, lineno=666, col_offset=8), lineno=666, col_offset=8)], [], lineno=665, col_offset=4), FunctionDef('test_option_argument_joined', arguments([Name('self', Param(), lineno=672, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=673, col_offset=8), 'assertParseOK', Load(), lineno=673, col_offset=8), [List([Str('-abc', lineno=673, col_offset=28)], Load(), lineno=673, col_offset=27), Dict([Str('a', lineno=674, col_offset=28), Str('boo', lineno=674, col_offset=39), Str('foo', lineno=674, col_offset=52)], [Str('bc', lineno=674, col_offset=33), Name('None', Load(), lineno=674, col_offset=46), Name('None', Load(), lineno=674, col_offset=59)], lineno=674, col_offset=27), List([], Load(), lineno=675, col_offset=27)], [], None, None, lineno=673, col_offset=8), lineno=673, col_offset=8)], [], lineno=672, col_offset=4), FunctionDef('test_option_argument_split', arguments([Name('self', Param(), lineno=677, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=678, col_offset=8), 'assertParseOK', Load(), lineno=678, col_offset=8), [List([Str('-a', lineno=678, col_offset=28), Str('34', lineno=678, col_offset=34)], Load(), lineno=678, col_offset=27), Dict([Str('a', lineno=679, col_offset=28), Str('boo', lineno=679, col_offset=39), Str('foo', lineno=679, col_offset=52)], [Str('34', lineno=679, col_offset=33), Name('None', Load(), lineno=679, col_offset=46), Name('None', Load(), lineno=679, col_offset=59)], lineno=679, col_offset=27), List([], Load(), lineno=680, col_offset=27)], [], None, None, lineno=678, col_offset=8), lineno=678, col_offset=8)], [], lineno=677, col_offset=4), FunctionDef('test_option_argument_joined_integer', arguments([Name('self', Param(), lineno=682, col_offset=44)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=683, col_offset=8), 'assertParseOK', Load(), lineno=683, col_offset=8), [List([Str('-b34', lineno=683, col_offset=28)], Load(), lineno=683, col_offset=27), Dict([Str('a', lineno=684, col_offset=28), Str('boo', lineno=684, col_offset=39), Str('foo', lineno=684, col_offset=50)], [Name('None', Load(), lineno=684, col_offset=33), Num(34, lineno=684, col_offset=46), Name('None', Load(), lineno=684, col_offset=57)], lineno=684, col_offset=27), List([], Load(), lineno=685, col_offset=27)], [], None, None, lineno=683, col_offset=8), lineno=683, col_offset=8)], [], lineno=682, col_offset=4), FunctionDef('test_option_argument_split_negative_integer', arguments([Name('self', Param(), lineno=687, col_offset=52)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=688, col_offset=8), 'assertParseOK', Load(), lineno=688, col_offset=8), [List([Str('-b', lineno=688, col_offset=28), Str('-5', lineno=688, col_offset=34)], Load(), lineno=688, col_offset=27), Dict([Str('a', lineno=689, col_offset=28), Str('boo', lineno=689, col_offset=39), Str('foo', lineno=689, col_offset=50)], [Name('None', Load(), lineno=689, col_offset=33), Num(-5, lineno=689, col_offset=47), Name('None', Load(), lineno=689, col_offset=57)], lineno=689, col_offset=27), List([], Load(), lineno=690, col_offset=27)], [], None, None, lineno=688, col_offset=8), lineno=688, col_offset=8)], [], lineno=687, col_offset=4), FunctionDef('test_long_option_argument_joined', arguments([Name('self', Param(), lineno=692, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=693, col_offset=8), 'assertParseOK', Load(), lineno=693, col_offset=8), [List([Str('--boo=13', lineno=693, col_offset=28)], Load(), lineno=693, col_offset=27), Dict([Str('a', lineno=694, col_offset=28), Str('boo', lineno=694, col_offset=39), Str('foo', lineno=694, col_offset=50)], [Name('None', Load(), lineno=694, col_offset=33), Num(13, lineno=694, col_offset=46), Name('None', Load(), lineno=694, col_offset=57)], lineno=694, col_offset=27), List([], Load(), lineno=695, col_offset=27)], [], None, None, lineno=693, col_offset=8), lineno=693, col_offset=8)], [], lineno=692, col_offset=4), FunctionDef('test_long_option_argument_split', arguments([Name('self', Param(), lineno=697, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=698, col_offset=8), 'assertParseOK', Load(), lineno=698, col_offset=8), [List([Str('--boo', lineno=698, col_offset=28), Str('111', lineno=698, col_offset=37)], Load(), lineno=698, col_offset=27), Dict([Str('a', lineno=699, col_offset=28), Str('boo', lineno=699, col_offset=39), Str('foo', lineno=699, col_offset=51)], [Name('None', Load(), lineno=699, col_offset=33), Num(111, lineno=699, col_offset=46), Name('None', Load(), lineno=699, col_offset=58)], lineno=699, col_offset=27), List([], Load(), lineno=700, col_offset=27)], [], None, None, lineno=698, col_offset=8), lineno=698, col_offset=8)], [], lineno=697, col_offset=4), FunctionDef('test_long_option_short_option', arguments([Name('self', Param(), lineno=702, col_offset=38)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=703, col_offset=8), 'assertParseOK', Load(), lineno=703, col_offset=8), [List([Str('--foo=bar', lineno=703, col_offset=28), Str('-axyz', lineno=703, col_offset=41)], Load(), lineno=703, col_offset=27), Dict([Str('a', lineno=704, col_offset=28), Str('boo', lineno=704, col_offset=40), Str('foo', lineno=704, col_offset=53)], [Str('xyz', lineno=704, col_offset=33), Name('None', Load(), lineno=704, col_offset=47), List([Str('bar', lineno=704, col_offset=61)], Load(), lineno=704, col_offset=60)], lineno=704, col_offset=27), List([], Load(), lineno=705, col_offset=27)], [], None, None, lineno=703, col_offset=8), lineno=703, col_offset=8)], [], lineno=702, col_offset=4), FunctionDef('test_abbrev_long_option', arguments([Name('self', Param(), lineno=707, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=708, col_offset=8), 'assertParseOK', Load(), lineno=708, col_offset=8), [List([Str('--f=bar', lineno=708, col_offset=28), Str('-axyz', lineno=708, col_offset=39)], Load(), lineno=708, col_offset=27), Dict([Str('a', lineno=709, col_offset=28), Str('boo', lineno=709, col_offset=40), Str('foo', lineno=709, col_offset=53)], [Str('xyz', lineno=709, col_offset=33), Name('None', Load(), lineno=709, col_offset=47), List([Str('bar', lineno=709, col_offset=61)], Load(), lineno=709, col_offset=60)], lineno=709, col_offset=27), List([], Load(), lineno=710, col_offset=27)], [], None, None, lineno=708, col_offset=8), lineno=708, col_offset=8)], [], lineno=707, col_offset=4), FunctionDef('test_defaults', arguments([Name('self', Param(), lineno=712, col_offset=22)], None, None, []), [Assign([Tuple([Name('options', Store(), lineno=713, col_offset=9), Name('args', Store(), lineno=713, col_offset=18)], Store(), lineno=713, col_offset=9)], Call(Attribute(Attribute(Name('self', Load(), lineno=713, col_offset=26), 'parser', Load(), lineno=713, col_offset=26), 'parse_args', Load(), lineno=713, col_offset=26), [List([], Load(), lineno=713, col_offset=49)], [], None, None, lineno=713, col_offset=26), lineno=713, col_offset=8), Assign([Name('defaults', Store(), lineno=714, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=714, col_offset=19), 'parser', Load(), lineno=714, col_offset=19), 'get_default_values', Load(), lineno=714, col_offset=19), [], [], None, None, lineno=714, col_offset=19), lineno=714, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=715, col_offset=8), 'assertEqual', Load(), lineno=715, col_offset=8), [Call(Name('vars', Load(), lineno=715, col_offset=25), [Name('defaults', Load(), lineno=715, col_offset=30)], [], None, None, lineno=715, col_offset=25), Call(Name('vars', Load(), lineno=715, col_offset=41), [Name('options', Load(), lineno=715, col_offset=46)], [], None, None, lineno=715, col_offset=41)], [], None, None, lineno=715, col_offset=8), lineno=715, col_offset=8)], [], lineno=712, col_offset=4), FunctionDef('test_ambiguous_option', arguments([Name('self', Param(), lineno=717, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=718, col_offset=8), 'parser', Load(), lineno=718, col_offset=8), 'add_option', Load(), lineno=718, col_offset=8), [Str('--foz', lineno=718, col_offset=31)], [keyword('action', Str('store', lineno=718, col_offset=47)), keyword('type', Str('string', lineno=719, col_offset=36)), keyword('dest', Str('foo', lineno=719, col_offset=51))], None, None, lineno=718, col_offset=8), lineno=718, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=720, col_offset=8), 'assertParseFail', Load(), lineno=720, col_offset=8), [List([Str('--f=bar', lineno=720, col_offset=30)], Load(), lineno=720, col_offset=29), Str('ambiguous option: --f (--foo, --foz?)', lineno=721, col_offset=29)], [], None, None, lineno=720, col_offset=8), lineno=720, col_offset=8)], [], lineno=717, col_offset=4), FunctionDef('test_short_and_long_option_split', arguments([Name('self', Param(), lineno=724, col_offset=41)], None, None, []), [Expr(Tuple([Call(Attribute(Name('self', Load(), lineno=725, col_offset=8), 'assertParseOK', Load(), lineno=725, col_offset=8), [List([Str('-a', lineno=725, col_offset=28), Str('xyz', lineno=725, col_offset=34), Str('--foo', lineno=725, col_offset=41), Str('bar', lineno=725, col_offset=50)], Load(), lineno=725, col_offset=27), Dict([Str('a', lineno=726, col_offset=28), Str('boo', lineno=726, col_offset=40), Str('foo', lineno=726, col_offset=53)], [Str('xyz', lineno=726, col_offset=33), Name('None', Load(), lineno=726, col_offset=47), List([Str('bar', lineno=726, col_offset=61)], Load(), lineno=726, col_offset=60)], lineno=726, col_offset=27), List([], Load(), lineno=727, col_offset=27)], [], None, None, lineno=725, col_offset=8)], Load(), lineno=725, col_offset=8), lineno=725, col_offset=8)], [], lineno=724, col_offset=4), FunctionDef('test_short_option_split_long_option_append', arguments([Name('self', Param(), lineno=729, col_offset=51)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=730, col_offset=8), 'assertParseOK', Load(), lineno=730, col_offset=8), [List([Str('--foo=bar', lineno=730, col_offset=28), Str('-b', lineno=730, col_offset=41), Str('123', lineno=730, col_offset=47), Str('--foo', lineno=730, col_offset=54), Str('baz', lineno=730, col_offset=63)], Load(), lineno=730, col_offset=27), Dict([Str('a', lineno=731, col_offset=28), Str('boo', lineno=731, col_offset=39), Str('foo', lineno=731, col_offset=51)], [Name('None', Load(), lineno=731, col_offset=33), Num(123, lineno=731, col_offset=46), List([Str('bar', lineno=731, col_offset=59), Str('baz', lineno=731, col_offset=66)], Load(), lineno=731, col_offset=58)], lineno=731, col_offset=27), List([], Load(), lineno=732, col_offset=27)], [], None, None, lineno=730, col_offset=8), lineno=730, col_offset=8)], [], lineno=729, col_offset=4), FunctionDef('test_short_option_split_one_positional_arg', arguments([Name('self', Param(), lineno=734, col_offset=51)], None, None, []), [Expr(Tuple([Call(Attribute(Name('self', Load(), lineno=735, col_offset=8), 'assertParseOK', Load(), lineno=735, col_offset=8), [List([Str('-a', lineno=735, col_offset=28), Str('foo', lineno=735, col_offset=34), Str('bar', lineno=735, col_offset=41)], Load(), lineno=735, col_offset=27), Dict([Str('a', lineno=736, col_offset=28), Str('boo', lineno=736, col_offset=40), Str('foo', lineno=736, col_offset=53)], [Str('foo', lineno=736, col_offset=33), Name('None', Load(), lineno=736, col_offset=47), Name('None', Load(), lineno=736, col_offset=60)], lineno=736, col_offset=27), List([Str('bar', lineno=737, col_offset=28)], Load(), lineno=737, col_offset=27)], [], None, None, lineno=735, col_offset=8)], Load(), lineno=735, col_offset=8), lineno=735, col_offset=8)], [], lineno=734, col_offset=4), FunctionDef('test_short_option_consumes_separator', arguments([Name('self', Param(), lineno=739, col_offset=45)], None, None, []), [Expr(Tuple([Call(Attribute(Name('self', Load(), lineno=740, col_offset=8), 'assertParseOK', Load(), lineno=740, col_offset=8), [List([Str('-a', lineno=740, col_offset=28), Str('--', lineno=740, col_offset=34), Str('foo', lineno=740, col_offset=40), Str('bar', lineno=740, col_offset=47)], Load(), lineno=740, col_offset=27), Dict([Str('a', lineno=741, col_offset=28), Str('boo', lineno=741, col_offset=39), Str('foo', lineno=741, col_offset=52)], [Str('--', lineno=741, col_offset=33), Name('None', Load(), lineno=741, col_offset=46), Name('None', Load(), lineno=741, col_offset=59)], lineno=741, col_offset=27), List([Str('foo', lineno=742, col_offset=28), Str('bar', lineno=742, col_offset=35)], Load(), lineno=742, col_offset=27)], [], None, None, lineno=740, col_offset=8)], Load(), lineno=740, col_offset=8), lineno=740, col_offset=8), Expr(Tuple([Call(Attribute(Name('self', Load(), lineno=743, col_offset=8), 'assertParseOK', Load(), lineno=743, col_offset=8), [List([Str('-a', lineno=743, col_offset=28), Str('--', lineno=743, col_offset=34), Str('--foo', lineno=743, col_offset=40), Str('bar', lineno=743, col_offset=49)], Load(), lineno=743, col_offset=27), Dict([Str('a', lineno=744, col_offset=28), Str('boo', lineno=744, col_offset=39), Str('foo', lineno=744, col_offset=52)], [Str('--', lineno=744, col_offset=33), Name('None', Load(), lineno=744, col_offset=46), List([Str('bar', lineno=744, col_offset=60)], Load(), lineno=744, col_offset=59)], lineno=744, col_offset=27), List([], Load(), lineno=745, col_offset=27)], [], None, None, lineno=743, col_offset=8)], Load(), lineno=743, col_offset=8), lineno=743, col_offset=8)], [], lineno=739, col_offset=4), FunctionDef('test_short_option_joined_and_separator', arguments([Name('self', Param(), lineno=747, col_offset=47)], None, None, []), [Expr(Tuple([Call(Attribute(Name('self', Load(), lineno=748, col_offset=8), 'assertParseOK', Load(), lineno=748, col_offset=8), [List([Str('-ab', lineno=748, col_offset=28), Str('--', lineno=748, col_offset=35), Str('--foo', lineno=748, col_offset=41), Str('bar', lineno=748, col_offset=50)], Load(), lineno=748, col_offset=27), Dict([Str('a', lineno=749, col_offset=28), Str('boo', lineno=749, col_offset=38), Str('foo', lineno=749, col_offset=51)], [Str('b', lineno=749, col_offset=33), Name('None', Load(), lineno=749, col_offset=45), Name('None', Load(), lineno=749, col_offset=58)], lineno=749, col_offset=27), List([Str('--foo', lineno=750, col_offset=28), Str('bar', lineno=750, col_offset=37)], Load(), lineno=750, col_offset=27)], [], None, None, lineno=748, col_offset=8)], Load(), lineno=748, col_offset=8), lineno=748, col_offset=8)], [], lineno=747, col_offset=4), FunctionDef('test_hyphen_becomes_positional_arg', arguments([Name('self', Param(), lineno=752, col_offset=43)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=753, col_offset=8), 'assertParseOK', Load(), lineno=753, col_offset=8), [List([Str('-ab', lineno=753, col_offset=28), Str('-', lineno=753, col_offset=35), Str('--foo', lineno=753, col_offset=40), Str('bar', lineno=753, col_offset=49)], Load(), lineno=753, col_offset=27), Dict([Str('a', lineno=754, col_offset=28), Str('boo', lineno=754, col_offset=38), Str('foo', lineno=754, col_offset=51)], [Str('b', lineno=754, col_offset=33), Name('None', Load(), lineno=754, col_offset=45), List([Str('bar', lineno=754, col_offset=59)], Load(), lineno=754, col_offset=58)], lineno=754, col_offset=27), List([Str('-', lineno=755, col_offset=28)], Load(), lineno=755, col_offset=27)], [], None, None, lineno=753, col_offset=8), lineno=753, col_offset=8)], [], lineno=752, col_offset=4), FunctionDef('test_no_append_versus_append', arguments([Name('self', Param(), lineno=757, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=758, col_offset=8), 'assertParseOK', Load(), lineno=758, col_offset=8), [List([Str('-b3', lineno=758, col_offset=28), Str('-b', lineno=758, col_offset=35), Str('5', lineno=758, col_offset=41), Str('--foo=bar', lineno=758, col_offset=46), Str('--foo', lineno=758, col_offset=59), Str('baz', lineno=758, col_offset=68)], Load(), lineno=758, col_offset=27), Dict([Str('a', lineno=759, col_offset=28), Str('boo', lineno=759, col_offset=39), Str('foo', lineno=759, col_offset=49)], [Name('None', Load(), lineno=759, col_offset=33), Num(5, lineno=759, col_offset=46), List([Str('bar', lineno=759, col_offset=57), Str('baz', lineno=759, col_offset=64)], Load(), lineno=759, col_offset=56)], lineno=759, col_offset=27), List([], Load(), lineno=760, col_offset=27)], [], None, None, lineno=758, col_offset=8), lineno=758, col_offset=8)], [], lineno=757, col_offset=4), FunctionDef('test_option_consumes_optionlike_string', arguments([Name('self', Param(), lineno=762, col_offset=47)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=763, col_offset=8), 'assertParseOK', Load(), lineno=763, col_offset=8), [List([Str('-a', lineno=763, col_offset=28), Str('-b3', lineno=763, col_offset=34)], Load(), lineno=763, col_offset=27), Dict([Str('a', lineno=764, col_offset=28), Str('boo', lineno=764, col_offset=40), Str('foo', lineno=764, col_offset=53)], [Str('-b3', lineno=764, col_offset=33), Name('None', Load(), lineno=764, col_offset=47), Name('None', Load(), lineno=764, col_offset=60)], lineno=764, col_offset=27), List([], Load(), lineno=765, col_offset=27)], [], None, None, lineno=763, col_offset=8), lineno=763, col_offset=8)], [], lineno=762, col_offset=4), FunctionDef('test_combined_single_invalid_option', arguments([Name('self', Param(), lineno=767, col_offset=44)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=768, col_offset=8), 'parser', Load(), lineno=768, col_offset=8), 'add_option', Load(), lineno=768, col_offset=8), [Str('-t', lineno=768, col_offset=31)], [keyword('action', Str('store_true', lineno=768, col_offset=44))], None, None, lineno=768, col_offset=8), lineno=768, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=769, col_offset=8), 'assertParseFail', Load(), lineno=769, col_offset=8), [List([Str('-test', lineno=769, col_offset=30)], Load(), lineno=769, col_offset=29), Str('no such option: -e', lineno=770, col_offset=29)], [], None, None, lineno=769, col_offset=8), lineno=769, col_offset=8)], [], lineno=767, col_offset=4)], [], lineno=634, col_offset=0), ClassDef('TestBool', [Name('BaseTest', Load(), lineno=772, col_offset=15)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=773, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=774, col_offset=8)], List([Call(Name('make_option', Load(), lineno=774, col_offset=19), [Str('-v', lineno=774, col_offset=31), Str('--verbose', lineno=775, col_offset=31)], [keyword('action', Str('store_true', lineno=776, col_offset=38)), keyword('dest', Str('verbose', lineno=777, col_offset=36)), keyword('default', Str('', lineno=778, col_offset=39))], None, None, lineno=774, col_offset=19), Call(Name('make_option', Load(), lineno=779, col_offset=19), [Str('-q', lineno=779, col_offset=31), Str('--quiet', lineno=780, col_offset=31)], [keyword('action', Str('store_false', lineno=781, col_offset=38)), keyword('dest', Str('verbose', lineno=782, col_offset=36))], None, None, lineno=779, col_offset=19)], Load(), lineno=774, col_offset=18), lineno=774, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=783, col_offset=8), 'parser', Store(), lineno=783, col_offset=8)], Call(Name('OptionParser', Load(), lineno=783, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=783, col_offset=49))], None, None, lineno=783, col_offset=22), lineno=783, col_offset=8)], [], lineno=773, col_offset=4), FunctionDef('test_bool_default', arguments([Name('self', Param(), lineno=785, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=786, col_offset=8), 'assertParseOK', Load(), lineno=786, col_offset=8), [List([], Load(), lineno=786, col_offset=27), Dict([Str('verbose', lineno=787, col_offset=28)], [Str('', lineno=787, col_offset=39)], lineno=787, col_offset=27), List([], Load(), lineno=788, col_offset=27)], [], None, None, lineno=786, col_offset=8), lineno=786, col_offset=8)], [], lineno=785, col_offset=4), FunctionDef('test_bool_false', arguments([Name('self', Param(), lineno=790, col_offset=24)], None, None, []), [Assign([Tuple([Name('options', Store(), lineno=791, col_offset=9), Name('args', Store(), lineno=791, col_offset=18)], Store(), lineno=791, col_offset=9)], Call(Attribute(Name('self', Load(), lineno=791, col_offset=26), 'assertParseOK', Load(), lineno=791, col_offset=26), [List([Str('-q', lineno=791, col_offset=46)], Load(), lineno=791, col_offset=45), Dict([Str('verbose', lineno=792, col_offset=46)], [Num(0, lineno=792, col_offset=57)], lineno=792, col_offset=45), List([], Load(), lineno=793, col_offset=45)], [], None, None, lineno=791, col_offset=26), lineno=791, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=794, col_offset=8), 'assertTrue', Load(), lineno=794, col_offset=8), [Compare(Attribute(Name('options', Load(), lineno=794, col_offset=24), 'verbose', Load(), lineno=794, col_offset=24), [Is()], [Name('False', Load(), lineno=794, col_offset=43)], lineno=794, col_offset=24)], [], None, None, lineno=794, col_offset=8), lineno=794, col_offset=8)], [], lineno=790, col_offset=4), FunctionDef('test_bool_true', arguments([Name('self', Param(), lineno=796, col_offset=23)], None, None, []), [Assign([Tuple([Name('options', Store(), lineno=797, col_offset=9), Name('args', Store(), lineno=797, col_offset=18)], Store(), lineno=797, col_offset=9)], Call(Attribute(Name('self', Load(), lineno=797, col_offset=26), 'assertParseOK', Load(), lineno=797, col_offset=26), [List([Str('-v', lineno=797, col_offset=46)], Load(), lineno=797, col_offset=45), Dict([Str('verbose', lineno=798, col_offset=46)], [Num(1, lineno=798, col_offset=57)], lineno=798, col_offset=45), List([], Load(), lineno=799, col_offset=45)], [], None, None, lineno=797, col_offset=26), lineno=797, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=800, col_offset=8), 'assertTrue', Load(), lineno=800, col_offset=8), [Compare(Attribute(Name('options', Load(), lineno=800, col_offset=24), 'verbose', Load(), lineno=800, col_offset=24), [Is()], [Name('True', Load(), lineno=800, col_offset=43)], lineno=800, col_offset=24)], [], None, None, lineno=800, col_offset=8), lineno=800, col_offset=8)], [], lineno=796, col_offset=4), FunctionDef('test_bool_flicker_on_and_off', arguments([Name('self', Param(), lineno=802, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=803, col_offset=8), 'assertParseOK', Load(), lineno=803, col_offset=8), [List([Str('-qvq', lineno=803, col_offset=28), Str('-q', lineno=803, col_offset=36), Str('-v', lineno=803, col_offset=42)], Load(), lineno=803, col_offset=27), Dict([Str('verbose', lineno=804, col_offset=28)], [Num(1, lineno=804, col_offset=39)], lineno=804, col_offset=27), List([], Load(), lineno=805, col_offset=27)], [], None, None, lineno=803, col_offset=8), lineno=803, col_offset=8)], [], lineno=802, col_offset=4)], [], lineno=772, col_offset=0), ClassDef('TestChoice', [Name('BaseTest', Load(), lineno=807, col_offset=17)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=808, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=809, col_offset=8), 'parser', Store(), lineno=809, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=809, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=809, col_offset=53))], None, None, lineno=809, col_offset=22), lineno=809, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=810, col_offset=8), 'parser', Load(), lineno=810, col_offset=8), 'add_option', Load(), lineno=810, col_offset=8), [Str('-c', lineno=810, col_offset=31)], [keyword('action', Str('store', lineno=810, col_offset=44)), keyword('type', Str('choice', lineno=810, col_offset=58)), keyword('dest', Str('choice', lineno=811, col_offset=36)), keyword('choices', List([Str('one', lineno=811, col_offset=55), Str('two', lineno=811, col_offset=62), Str('three', lineno=811, col_offset=69)], Load(), lineno=811, col_offset=54))], None, None, lineno=810, col_offset=8), lineno=810, col_offset=8)], [], lineno=808, col_offset=4), FunctionDef('test_valid_choice', arguments([Name('self', Param(), lineno=813, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=814, col_offset=8), 'assertParseOK', Load(), lineno=814, col_offset=8), [List([Str('-c', lineno=814, col_offset=28), Str('one', lineno=814, col_offset=34), Str('xyz', lineno=814, col_offset=41)], Load(), lineno=814, col_offset=27), Dict([Str('choice', lineno=815, col_offset=28)], [Str('one', lineno=815, col_offset=38)], lineno=815, col_offset=27), List([Str('xyz', lineno=816, col_offset=28)], Load(), lineno=816, col_offset=27)], [], None, None, lineno=814, col_offset=8), lineno=814, col_offset=8)], [], lineno=813, col_offset=4), FunctionDef('test_invalid_choice', arguments([Name('self', Param(), lineno=818, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=819, col_offset=8), 'assertParseFail', Load(), lineno=819, col_offset=8), [List([Str('-c', lineno=819, col_offset=30), Str('four', lineno=819, col_offset=36), Str('abc', lineno=819, col_offset=44)], Load(), lineno=819, col_offset=29), Str("option -c: invalid choice: 'four' (choose from 'one', 'two', 'three')", lineno=820, col_offset=29)], [], None, None, lineno=819, col_offset=8), lineno=819, col_offset=8)], [], lineno=818, col_offset=4), FunctionDef('test_add_choice_option', arguments([Name('self', Param(), lineno=823, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=824, col_offset=8), 'parser', Load(), lineno=824, col_offset=8), 'add_option', Load(), lineno=824, col_offset=8), [Str('-d', lineno=824, col_offset=31), Str('--default', lineno=824, col_offset=37)], [keyword('choices', List([Str('four', lineno=825, col_offset=40), Str('five', lineno=825, col_offset=48), Str('six', lineno=825, col_offset=56)], Load(), lineno=825, col_offset=39))], None, None, lineno=824, col_offset=8), lineno=824, col_offset=8), Assign([Name('opt', Store(), lineno=826, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=826, col_offset=14), 'parser', Load(), lineno=826, col_offset=14), 'get_option', Load(), lineno=826, col_offset=14), [Str('-d', lineno=826, col_offset=37)], [], None, None, lineno=826, col_offset=14), lineno=826, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=827, col_offset=8), 'assertEqual', Load(), lineno=827, col_offset=8), [Attribute(Name('opt', Load(), lineno=827, col_offset=25), 'type', Load(), lineno=827, col_offset=25), Str('choice', lineno=827, col_offset=35)], [], None, None, lineno=827, col_offset=8), lineno=827, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=828, col_offset=8), 'assertEqual', Load(), lineno=828, col_offset=8), [Attribute(Name('opt', Load(), lineno=828, col_offset=25), 'action', Load(), lineno=828, col_offset=25), Str('store', lineno=828, col_offset=37)], [], None, None, lineno=828, col_offset=8), lineno=828, col_offset=8)], [], lineno=823, col_offset=4)], [], lineno=807, col_offset=0), ClassDef('TestCount', [Name('BaseTest', Load(), lineno=830, col_offset=16)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=831, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=832, col_offset=8), 'parser', Store(), lineno=832, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=832, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=832, col_offset=53))], None, None, lineno=832, col_offset=22), lineno=832, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=833, col_offset=8), 'v_opt', Store(), lineno=833, col_offset=8)], Call(Name('make_option', Load(), lineno=833, col_offset=21), [Str('-v', lineno=833, col_offset=33)], [keyword('action', Str('count', lineno=833, col_offset=46)), keyword('dest', Str('verbose', lineno=833, col_offset=60))], None, None, lineno=833, col_offset=21), lineno=833, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=834, col_offset=8), 'parser', Load(), lineno=834, col_offset=8), 'add_option', Load(), lineno=834, col_offset=8), [Attribute(Name('self', Load(), lineno=834, col_offset=31), 'v_opt', Load(), lineno=834, col_offset=31)], [], None, None, lineno=834, col_offset=8), lineno=834, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=835, col_offset=8), 'parser', Load(), lineno=835, col_offset=8), 'add_option', Load(), lineno=835, col_offset=8), [Str('--verbose', lineno=835, col_offset=31)], [keyword('type', Str('int', lineno=835, col_offset=49)), keyword('dest', Str('verbose', lineno=835, col_offset=61))], None, None, lineno=835, col_offset=8), lineno=835, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=836, col_offset=8), 'parser', Load(), lineno=836, col_offset=8), 'add_option', Load(), lineno=836, col_offset=8), [Str('-q', lineno=836, col_offset=31), Str('--quiet', lineno=836, col_offset=37)], [keyword('action', Str('store_const', lineno=837, col_offset=38)), keyword('dest', Str('verbose', lineno=837, col_offset=58)), keyword('const', Num(0, lineno=837, col_offset=75))], None, None, lineno=836, col_offset=8), lineno=836, col_offset=8)], [], lineno=831, col_offset=4), FunctionDef('test_empty', arguments([Name('self', Param(), lineno=839, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=840, col_offset=8), 'assertParseOK', Load(), lineno=840, col_offset=8), [List([], Load(), lineno=840, col_offset=27), Dict([Str('verbose', lineno=840, col_offset=32)], [Name('None', Load(), lineno=840, col_offset=43)], lineno=840, col_offset=31), List([], Load(), lineno=840, col_offset=50)], [], None, None, lineno=840, col_offset=8), lineno=840, col_offset=8)], [], lineno=839, col_offset=4), FunctionDef('test_count_one', arguments([Name('self', Param(), lineno=842, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=843, col_offset=8), 'assertParseOK', Load(), lineno=843, col_offset=8), [List([Str('-v', lineno=843, col_offset=28)], Load(), lineno=843, col_offset=27), Dict([Str('verbose', lineno=843, col_offset=36)], [Num(1, lineno=843, col_offset=47)], lineno=843, col_offset=35), List([], Load(), lineno=843, col_offset=51)], [], None, None, lineno=843, col_offset=8), lineno=843, col_offset=8)], [], lineno=842, col_offset=4), FunctionDef('test_count_three', arguments([Name('self', Param(), lineno=845, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=846, col_offset=8), 'assertParseOK', Load(), lineno=846, col_offset=8), [List([Str('-vvv', lineno=846, col_offset=28)], Load(), lineno=846, col_offset=27), Dict([Str('verbose', lineno=846, col_offset=38)], [Num(3, lineno=846, col_offset=49)], lineno=846, col_offset=37), List([], Load(), lineno=846, col_offset=53)], [], None, None, lineno=846, col_offset=8), lineno=846, col_offset=8)], [], lineno=845, col_offset=4), FunctionDef('test_count_three_apart', arguments([Name('self', Param(), lineno=848, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=849, col_offset=8), 'assertParseOK', Load(), lineno=849, col_offset=8), [List([Str('-v', lineno=849, col_offset=28), Str('-v', lineno=849, col_offset=34), Str('-v', lineno=849, col_offset=40)], Load(), lineno=849, col_offset=27), Dict([Str('verbose', lineno=849, col_offset=48)], [Num(3, lineno=849, col_offset=59)], lineno=849, col_offset=47), List([], Load(), lineno=849, col_offset=63)], [], None, None, lineno=849, col_offset=8), lineno=849, col_offset=8)], [], lineno=848, col_offset=4), FunctionDef('test_count_override_amount', arguments([Name('self', Param(), lineno=851, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=852, col_offset=8), 'assertParseOK', Load(), lineno=852, col_offset=8), [List([Str('-vvv', lineno=852, col_offset=28), Str('--verbose=2', lineno=852, col_offset=36)], Load(), lineno=852, col_offset=27), Dict([Str('verbose', lineno=852, col_offset=53)], [Num(2, lineno=852, col_offset=64)], lineno=852, col_offset=52), List([], Load(), lineno=852, col_offset=68)], [], None, None, lineno=852, col_offset=8), lineno=852, col_offset=8)], [], lineno=851, col_offset=4), FunctionDef('test_count_override_quiet', arguments([Name('self', Param(), lineno=854, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=855, col_offset=8), 'assertParseOK', Load(), lineno=855, col_offset=8), [List([Str('-vvv', lineno=855, col_offset=28), Str('--verbose=2', lineno=855, col_offset=36), Str('-q', lineno=855, col_offset=51)], Load(), lineno=855, col_offset=27), Dict([Str('verbose', lineno=855, col_offset=59)], [Num(0, lineno=855, col_offset=70)], lineno=855, col_offset=58), List([], Load(), lineno=855, col_offset=74)], [], None, None, lineno=855, col_offset=8), lineno=855, col_offset=8)], [], lineno=854, col_offset=4), FunctionDef('test_count_overriding', arguments([Name('self', Param(), lineno=857, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=858, col_offset=8), 'assertParseOK', Load(), lineno=858, col_offset=8), [List([Str('-vvv', lineno=858, col_offset=28), Str('--verbose=2', lineno=858, col_offset=36), Str('-q', lineno=858, col_offset=51), Str('-v', lineno=858, col_offset=57)], Load(), lineno=858, col_offset=27), Dict([Str('verbose', lineno=859, col_offset=28)], [Num(1, lineno=859, col_offset=39)], lineno=859, col_offset=27), List([], Load(), lineno=859, col_offset=43)], [], None, None, lineno=858, col_offset=8), lineno=858, col_offset=8)], [], lineno=857, col_offset=4), FunctionDef('test_count_interspersed_args', arguments([Name('self', Param(), lineno=861, col_offset=37)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=862, col_offset=8), 'assertParseOK', Load(), lineno=862, col_offset=8), [List([Str('--quiet', lineno=862, col_offset=28), Str('3', lineno=862, col_offset=39), Str('-v', lineno=862, col_offset=44)], Load(), lineno=862, col_offset=27), Dict([Str('verbose', lineno=863, col_offset=28)], [Num(1, lineno=863, col_offset=39)], lineno=863, col_offset=27), List([Str('3', lineno=864, col_offset=28)], Load(), lineno=864, col_offset=27)], [], None, None, lineno=862, col_offset=8), lineno=862, col_offset=8)], [], lineno=861, col_offset=4), FunctionDef('test_count_no_interspersed_args', arguments([Name('self', Param(), lineno=866, col_offset=40)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=867, col_offset=8), 'parser', Load(), lineno=867, col_offset=8), 'disable_interspersed_args', Load(), lineno=867, col_offset=8), [], [], None, None, lineno=867, col_offset=8), lineno=867, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=868, col_offset=8), 'assertParseOK', Load(), lineno=868, col_offset=8), [List([Str('--quiet', lineno=868, col_offset=28), Str('3', lineno=868, col_offset=39), Str('-v', lineno=868, col_offset=44)], Load(), lineno=868, col_offset=27), Dict([Str('verbose', lineno=869, col_offset=28)], [Num(0, lineno=869, col_offset=39)], lineno=869, col_offset=27), List([Str('3', lineno=870, col_offset=28), Str('-v', lineno=870, col_offset=33)], Load(), lineno=870, col_offset=27)], [], None, None, lineno=868, col_offset=8), lineno=868, col_offset=8)], [], lineno=866, col_offset=4), FunctionDef('test_count_no_such_option', arguments([Name('self', Param(), lineno=872, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=873, col_offset=8), 'assertParseFail', Load(), lineno=873, col_offset=8), [List([Str('-q3', lineno=873, col_offset=30), Str('-v', lineno=873, col_offset=37)], Load(), lineno=873, col_offset=29), Str('no such option: -3', lineno=873, col_offset=44)], [], None, None, lineno=873, col_offset=8), lineno=873, col_offset=8)], [], lineno=872, col_offset=4), FunctionDef('test_count_option_no_value', arguments([Name('self', Param(), lineno=875, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=876, col_offset=8), 'assertParseFail', Load(), lineno=876, col_offset=8), [List([Str('--quiet=3', lineno=876, col_offset=30), Str('-v', lineno=876, col_offset=43)], Load(), lineno=876, col_offset=29), Str('--quiet option does not take a value', lineno=877, col_offset=29)], [], None, None, lineno=876, col_offset=8), lineno=876, col_offset=8)], [], lineno=875, col_offset=4), FunctionDef('test_count_with_default', arguments([Name('self', Param(), lineno=879, col_offset=32)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=880, col_offset=8), 'parser', Load(), lineno=880, col_offset=8), 'set_default', Load(), lineno=880, col_offset=8), [Str('verbose', lineno=880, col_offset=32), Num(0, lineno=880, col_offset=43)], [], None, None, lineno=880, col_offset=8), lineno=880, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=881, col_offset=8), 'assertParseOK', Load(), lineno=881, col_offset=8), [List([], Load(), lineno=881, col_offset=27), Dict([Str('verbose', lineno=881, col_offset=32)], [Num(0, lineno=881, col_offset=42)], lineno=881, col_offset=31), List([], Load(), lineno=881, col_offset=46)], [], None, None, lineno=881, col_offset=8), lineno=881, col_offset=8)], [], lineno=879, col_offset=4), FunctionDef('test_count_overriding_default', arguments([Name('self', Param(), lineno=883, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=884, col_offset=8), 'parser', Load(), lineno=884, col_offset=8), 'set_default', Load(), lineno=884, col_offset=8), [Str('verbose', lineno=884, col_offset=32), Num(0, lineno=884, col_offset=43)], [], None, None, lineno=884, col_offset=8), lineno=884, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=885, col_offset=8), 'assertParseOK', Load(), lineno=885, col_offset=8), [List([Str('-vvv', lineno=885, col_offset=28), Str('--verbose=2', lineno=885, col_offset=36), Str('-q', lineno=885, col_offset=51), Str('-v', lineno=885, col_offset=57)], Load(), lineno=885, col_offset=27), Dict([Str('verbose', lineno=886, col_offset=28)], [Num(1, lineno=886, col_offset=39)], lineno=886, col_offset=27), List([], Load(), lineno=886, col_offset=43)], [], None, None, lineno=885, col_offset=8), lineno=885, col_offset=8)], [], lineno=883, col_offset=4)], [], lineno=830, col_offset=0), ClassDef('TestMultipleArgs', [Name('BaseTest', Load(), lineno=888, col_offset=23)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=889, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=890, col_offset=8), 'parser', Store(), lineno=890, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=890, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=890, col_offset=53))], None, None, lineno=890, col_offset=22), lineno=890, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=891, col_offset=8), 'parser', Load(), lineno=891, col_offset=8), 'add_option', Load(), lineno=891, col_offset=8), [Str('-p', lineno=891, col_offset=31), Str('--point', lineno=891, col_offset=37)], [keyword('action', Str('store', lineno=892, col_offset=38)), keyword('nargs', Num(3, lineno=892, col_offset=53)), keyword('type', Str('float', lineno=892, col_offset=61)), keyword('dest', Str('point', lineno=892, col_offset=75))], None, None, lineno=891, col_offset=8), lineno=891, col_offset=8)], [], lineno=889, col_offset=4), FunctionDef('test_nargs_with_positional_args', arguments([Name('self', Param(), lineno=894, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=895, col_offset=8), 'assertParseOK', Load(), lineno=895, col_offset=8), [List([Str('foo', lineno=895, col_offset=28), Str('-p', lineno=895, col_offset=35), Str('1', lineno=895, col_offset=41), Str('2.5', lineno=895, col_offset=46), Str('-4.3', lineno=895, col_offset=53), Str('xyz', lineno=895, col_offset=61)], Load(), lineno=895, col_offset=27), Dict([Str('point', lineno=896, col_offset=28)], [Tuple([Num(1.0, lineno=896, col_offset=38), Num(2.5, lineno=896, col_offset=43), Num(-4.3, lineno=896, col_offset=49)], Load(), lineno=896, col_offset=38)], lineno=896, col_offset=27), List([Str('foo', lineno=897, col_offset=28), Str('xyz', lineno=897, col_offset=35)], Load(), lineno=897, col_offset=27)], [], None, None, lineno=895, col_offset=8), lineno=895, col_offset=8)], [], lineno=894, col_offset=4), FunctionDef('test_nargs_long_opt', arguments([Name('self', Param(), lineno=899, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=900, col_offset=8), 'assertParseOK', Load(), lineno=900, col_offset=8), [List([Str('--point', lineno=900, col_offset=28), Str('-1', lineno=900, col_offset=39), Str('2.5', lineno=900, col_offset=45), Str('-0', lineno=900, col_offset=52), Str('xyz', lineno=900, col_offset=58)], Load(), lineno=900, col_offset=27), Dict([Str('point', lineno=901, col_offset=28)], [Tuple([Num(-1.0, lineno=901, col_offset=39), Num(2.5, lineno=901, col_offset=44), Num(-0.0, lineno=901, col_offset=50)], Load(), lineno=901, col_offset=38)], lineno=901, col_offset=27), List([Str('xyz', lineno=902, col_offset=28)], Load(), lineno=902, col_offset=27)], [], None, None, lineno=900, col_offset=8), lineno=900, col_offset=8)], [], lineno=899, col_offset=4), FunctionDef('test_nargs_invalid_float_value', arguments([Name('self', Param(), lineno=904, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=905, col_offset=8), 'assertParseFail', Load(), lineno=905, col_offset=8), [List([Str('-p', lineno=905, col_offset=30), Str('1.0', lineno=905, col_offset=36), Str('2x', lineno=905, col_offset=43), Str('3.5', lineno=905, col_offset=49)], Load(), lineno=905, col_offset=29), Str("option -p: invalid floating-point value: '2x'", lineno=906, col_offset=29)], [], None, None, lineno=905, col_offset=8), lineno=905, col_offset=8)], [], lineno=904, col_offset=4), FunctionDef('test_nargs_required_values', arguments([Name('self', Param(), lineno=909, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=910, col_offset=8), 'assertParseFail', Load(), lineno=910, col_offset=8), [List([Str('--point', lineno=910, col_offset=30), Str('1.0', lineno=910, col_offset=41), Str('3.5', lineno=910, col_offset=48)], Load(), lineno=910, col_offset=29), Str('--point option requires 3 arguments', lineno=911, col_offset=29)], [], None, None, lineno=910, col_offset=8), lineno=910, col_offset=8)], [], lineno=909, col_offset=4)], [], lineno=888, col_offset=0), ClassDef('TestMultipleArgsAppend', [Name('BaseTest', Load(), lineno=913, col_offset=29)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=914, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=915, col_offset=8), 'parser', Store(), lineno=915, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=915, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=915, col_offset=53))], None, None, lineno=915, col_offset=22), lineno=915, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=916, col_offset=8), 'parser', Load(), lineno=916, col_offset=8), 'add_option', Load(), lineno=916, col_offset=8), [Str('-p', lineno=916, col_offset=31), Str('--point', lineno=916, col_offset=37)], [keyword('action', Str('store', lineno=916, col_offset=55)), keyword('nargs', Num(3, lineno=916, col_offset=70)), keyword('type', Str('float', lineno=917, col_offset=36)), keyword('dest', Str('point', lineno=917, col_offset=50))], None, None, lineno=916, col_offset=8), lineno=916, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=918, col_offset=8), 'parser', Load(), lineno=918, col_offset=8), 'add_option', Load(), lineno=918, col_offset=8), [Str('-f', lineno=918, col_offset=31), Str('--foo', lineno=918, col_offset=37)], [keyword('action', Str('append', lineno=918, col_offset=53)), keyword('nargs', Num(2, lineno=918, col_offset=69)), keyword('type', Str('int', lineno=919, col_offset=36)), keyword('dest', Str('foo', lineno=919, col_offset=48))], None, None, lineno=918, col_offset=8), lineno=918, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=920, col_offset=8), 'parser', Load(), lineno=920, col_offset=8), 'add_option', Load(), lineno=920, col_offset=8), [Str('-z', lineno=920, col_offset=31), Str('--zero', lineno=920, col_offset=37)], [keyword('action', Str('append_const', lineno=920, col_offset=54)), keyword('dest', Str('foo', lineno=921, col_offset=36)), keyword('const', Tuple([Num(0, lineno=921, col_offset=50), Num(0, lineno=921, col_offset=53)], Load(), lineno=921, col_offset=50))], None, None, lineno=920, col_offset=8), lineno=920, col_offset=8)], [], lineno=914, col_offset=4), FunctionDef('test_nargs_append', arguments([Name('self', Param(), lineno=923, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=924, col_offset=8), 'assertParseOK', Load(), lineno=924, col_offset=8), [List([Str('-f', lineno=924, col_offset=28), Str('4', lineno=924, col_offset=34), Str('-3', lineno=924, col_offset=39), Str('blah', lineno=924, col_offset=45), Str('--foo', lineno=924, col_offset=53), Str('1', lineno=924, col_offset=62), Str('666', lineno=924, col_offset=67)], Load(), lineno=924, col_offset=27), Dict([Str('point', lineno=925, col_offset=28), Str('foo', lineno=925, col_offset=43)], [Name('None', Load(), lineno=925, col_offset=37), List([Tuple([Num(4, lineno=925, col_offset=52), Num(-3, lineno=925, col_offset=56)], Load(), lineno=925, col_offset=52), Tuple([Num(1, lineno=925, col_offset=61), Num(666, lineno=925, col_offset=64)], Load(), lineno=925, col_offset=61)], Load(), lineno=925, col_offset=50)], lineno=925, col_offset=27), List([Str('blah', lineno=926, col_offset=28)], Load(), lineno=926, col_offset=27)], [], None, None, lineno=924, col_offset=8), lineno=924, col_offset=8)], [], lineno=923, col_offset=4), FunctionDef('test_nargs_append_required_values', arguments([Name('self', Param(), lineno=928, col_offset=42)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=929, col_offset=8), 'assertParseFail', Load(), lineno=929, col_offset=8), [List([Str('-f4,3', lineno=929, col_offset=30)], Load(), lineno=929, col_offset=29), Str('-f option requires 2 arguments', lineno=930, col_offset=29)], [], None, None, lineno=929, col_offset=8), lineno=929, col_offset=8)], [], lineno=928, col_offset=4), FunctionDef('test_nargs_append_simple', arguments([Name('self', Param(), lineno=932, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=933, col_offset=8), 'assertParseOK', Load(), lineno=933, col_offset=8), [List([Str('--foo=3', lineno=933, col_offset=28), Str('4', lineno=933, col_offset=39)], Load(), lineno=933, col_offset=27), Dict([Str('point', lineno=934, col_offset=28), Str('foo', lineno=934, col_offset=43)], [Name('None', Load(), lineno=934, col_offset=37), List([Tuple([Num(3, lineno=934, col_offset=51), Num(4, lineno=934, col_offset=54)], Load(), lineno=934, col_offset=51)], Load(), lineno=934, col_offset=49)], lineno=934, col_offset=27), List([], Load(), lineno=935, col_offset=27)], [], None, None, lineno=933, col_offset=8), lineno=933, col_offset=8)], [], lineno=932, col_offset=4), FunctionDef('test_nargs_append_const', arguments([Name('self', Param(), lineno=937, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=938, col_offset=8), 'assertParseOK', Load(), lineno=938, col_offset=8), [List([Str('--zero', lineno=938, col_offset=28), Str('--foo', lineno=938, col_offset=38), Str('3', lineno=938, col_offset=47), Str('4', lineno=938, col_offset=52), Str('-z', lineno=938, col_offset=57)], Load(), lineno=938, col_offset=27), Dict([Str('point', lineno=939, col_offset=28), Str('foo', lineno=939, col_offset=43)], [Name('None', Load(), lineno=939, col_offset=37), List([Tuple([Num(0, lineno=939, col_offset=51), Num(0, lineno=939, col_offset=54)], Load(), lineno=939, col_offset=51), Tuple([Num(3, lineno=939, col_offset=59), Num(4, lineno=939, col_offset=62)], Load(), lineno=939, col_offset=59), Tuple([Num(0, lineno=939, col_offset=67), Num(0, lineno=939, col_offset=70)], Load(), lineno=939, col_offset=67)], Load(), lineno=939, col_offset=49)], lineno=939, col_offset=27), List([], Load(), lineno=940, col_offset=27)], [], None, None, lineno=938, col_offset=8), lineno=938, col_offset=8)], [], lineno=937, col_offset=4)], [], lineno=913, col_offset=0), ClassDef('TestVersion', [Name('BaseTest', Load(), lineno=942, col_offset=18)], [FunctionDef('test_version', arguments([Name('self', Param(), lineno=943, col_offset=21)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=944, col_offset=8), 'parser', Store(), lineno=944, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=944, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=944, col_offset=53)), keyword('version', Str('%prog 0.1', lineno=945, col_offset=55))], None, None, lineno=944, col_offset=22), lineno=944, col_offset=8), Assign([Name('save_argv', Store(), lineno=946, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=946, col_offset=20), 'argv', Load(), lineno=946, col_offset=20), Slice(None, None, None), Load(), lineno=946, col_offset=20), lineno=946, col_offset=8), TryFinally([Assign([Subscript(Attribute(Name('sys', Load(), lineno=948, col_offset=12), 'argv', Load(), lineno=948, col_offset=12), Index(Num(0, lineno=948, col_offset=21)), Store(), lineno=948, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=948, col_offset=26), 'path', Load(), lineno=948, col_offset=26), 'join', Load(), lineno=948, col_offset=26), [Attribute(Name('os', Load(), lineno=948, col_offset=39), 'curdir', Load(), lineno=948, col_offset=39), Str('foo', lineno=948, col_offset=50), Str('bar', lineno=948, col_offset=57)], [], None, None, lineno=948, col_offset=26), lineno=948, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=949, col_offset=12), 'assertOutput', Load(), lineno=949, col_offset=12), [List([Str('--version', lineno=949, col_offset=31)], Load(), lineno=949, col_offset=30), Str('bar 0.1\n', lineno=949, col_offset=45)], [], None, None, lineno=949, col_offset=12), lineno=949, col_offset=12)], [Assign([Subscript(Attribute(Name('sys', Load(), lineno=951, col_offset=12), 'argv', Load(), lineno=951, col_offset=12), Slice(None, None, None), Store(), lineno=951, col_offset=12)], Name('save_argv', Load(), lineno=951, col_offset=26), lineno=951, col_offset=12)], lineno=947, col_offset=8)], [], lineno=943, col_offset=4), FunctionDef('test_no_version', arguments([Name('self', Param(), lineno=953, col_offset=24)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=954, col_offset=8), 'parser', Store(), lineno=954, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=954, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=954, col_offset=53))], None, None, lineno=954, col_offset=22), lineno=954, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=955, col_offset=8), 'assertParseFail', Load(), lineno=955, col_offset=8), [List([Str('--version', lineno=955, col_offset=30)], Load(), lineno=955, col_offset=29), Str('no such option: --version', lineno=956, col_offset=29)], [], None, None, lineno=955, col_offset=8), lineno=955, col_offset=8)], [], lineno=953, col_offset=4)], [], lineno=942, col_offset=0), ClassDef('TestConflictingDefaults', [Name('BaseTest', Load(), lineno=960, col_offset=30)], [Expr(Str('Conflicting default values: the last one should win.', lineno=961, col_offset=4), lineno=961, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=962, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=963, col_offset=8), 'parser', Store(), lineno=963, col_offset=8)], Call(Name('OptionParser', Load(), lineno=963, col_offset=22), [], [keyword('option_list', List([Call(Name('make_option', Load(), lineno=964, col_offset=12), [Str('-v', lineno=964, col_offset=24)], [keyword('action', Str('store_true', lineno=964, col_offset=37)), keyword('dest', Str('verbose', lineno=964, col_offset=56)), keyword('default', Num(1, lineno=964, col_offset=75))], None, None, lineno=964, col_offset=12)], Load(), lineno=963, col_offset=47))], None, None, lineno=963, col_offset=22), lineno=963, col_offset=8)], [], lineno=962, col_offset=4), FunctionDef('test_conflict_default', arguments([Name('self', Param(), lineno=966, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=967, col_offset=8), 'parser', Load(), lineno=967, col_offset=8), 'add_option', Load(), lineno=967, col_offset=8), [Str('-q', lineno=967, col_offset=31)], [keyword('action', Str('store_false', lineno=967, col_offset=44)), keyword('dest', Str('verbose', lineno=967, col_offset=64)), keyword('default', Num(0, lineno=968, col_offset=39))], None, None, lineno=967, col_offset=8), lineno=967, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=969, col_offset=8), 'assertParseOK', Load(), lineno=969, col_offset=8), [List([], Load(), lineno=969, col_offset=27), Dict([Str('verbose', lineno=969, col_offset=32)], [Num(0, lineno=969, col_offset=43)], lineno=969, col_offset=31), List([], Load(), lineno=969, col_offset=47)], [], None, None, lineno=969, col_offset=8), lineno=969, col_offset=8)], [], lineno=966, col_offset=4), FunctionDef('test_conflict_default_none', arguments([Name('self', Param(), lineno=971, col_offset=35)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=972, col_offset=8), 'parser', Load(), lineno=972, col_offset=8), 'add_option', Load(), lineno=972, col_offset=8), [Str('-q', lineno=972, col_offset=31)], [keyword('action', Str('store_false', lineno=972, col_offset=44)), keyword('dest', Str('verbose', lineno=972, col_offset=64)), keyword('default', Name('None', Load(), lineno=973, col_offset=39))], None, None, lineno=972, col_offset=8), lineno=972, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=974, col_offset=8), 'assertParseOK', Load(), lineno=974, col_offset=8), [List([], Load(), lineno=974, col_offset=27), Dict([Str('verbose', lineno=974, col_offset=32)], [Name('None', Load(), lineno=974, col_offset=43)], lineno=974, col_offset=31), List([], Load(), lineno=974, col_offset=50)], [], None, None, lineno=974, col_offset=8), lineno=974, col_offset=8)], [], lineno=971, col_offset=4)], [], lineno=960, col_offset=0), ClassDef('TestOptionGroup', [Name('BaseTest', Load(), lineno=976, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=977, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=978, col_offset=8), 'parser', Store(), lineno=978, col_offset=8)], Call(Name('OptionParser', Load(), lineno=978, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=978, col_offset=41))], None, None, lineno=978, col_offset=22), lineno=978, col_offset=8)], [], lineno=977, col_offset=4), FunctionDef('test_option_group_create_instance', arguments([Name('self', Param(), lineno=980, col_offset=42)], None, None, []), [Assign([Name('group', Store(), lineno=981, col_offset=8)], Call(Name('OptionGroup', Load(), lineno=981, col_offset=16), [Attribute(Name('self', Load(), lineno=981, col_offset=28), 'parser', Load(), lineno=981, col_offset=28), Str('Spam', lineno=981, col_offset=41)], [], None, None, lineno=981, col_offset=16), lineno=981, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=982, col_offset=8), 'parser', Load(), lineno=982, col_offset=8), 'add_option_group', Load(), lineno=982, col_offset=8), [Name('group', Load(), lineno=982, col_offset=37)], [], None, None, lineno=982, col_offset=8), lineno=982, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=983, col_offset=8), 'add_option', Load(), lineno=983, col_offset=8), [Str('--spam', lineno=983, col_offset=25)], [keyword('action', Str('store_true', lineno=983, col_offset=42)), keyword('help', Str('spam spam spam spam', lineno=984, col_offset=30))], None, None, lineno=983, col_offset=8), lineno=983, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=985, col_offset=8), 'assertParseOK', Load(), lineno=985, col_offset=8), [List([Str('--spam', lineno=985, col_offset=28)], Load(), lineno=985, col_offset=27), Dict([Str('spam', lineno=985, col_offset=40)], [Num(1, lineno=985, col_offset=48)], lineno=985, col_offset=39), List([], Load(), lineno=985, col_offset=52)], [], None, None, lineno=985, col_offset=8), lineno=985, col_offset=8)], [], lineno=980, col_offset=4), FunctionDef('test_add_group_no_group', arguments([Name('self', Param(), lineno=987, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=988, col_offset=8), 'assertTypeError', Load(), lineno=988, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=988, col_offset=29), 'parser', Load(), lineno=988, col_offset=29), 'add_option_group', Load(), lineno=988, col_offset=29), Str('not an OptionGroup instance: None', lineno=989, col_offset=29), Name('None', Load(), lineno=989, col_offset=66)], [], None, None, lineno=988, col_offset=8), lineno=988, col_offset=8)], [], lineno=987, col_offset=4), FunctionDef('test_add_group_invalid_arguments', arguments([Name('self', Param(), lineno=991, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=992, col_offset=8), 'assertTypeError', Load(), lineno=992, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=992, col_offset=29), 'parser', Load(), lineno=992, col_offset=29), 'add_option_group', Load(), lineno=992, col_offset=29), Str('invalid arguments', lineno=993, col_offset=29), Name('None', Load(), lineno=993, col_offset=50), Name('None', Load(), lineno=993, col_offset=56)], [], None, None, lineno=992, col_offset=8), lineno=992, col_offset=8)], [], lineno=991, col_offset=4), FunctionDef('test_add_group_wrong_parser', arguments([Name('self', Param(), lineno=995, col_offset=36)], None, None, []), [Assign([Name('group', Store(), lineno=996, col_offset=8)], Call(Name('OptionGroup', Load(), lineno=996, col_offset=16), [Attribute(Name('self', Load(), lineno=996, col_offset=28), 'parser', Load(), lineno=996, col_offset=28), Str('Spam', lineno=996, col_offset=41)], [], None, None, lineno=996, col_offset=16), lineno=996, col_offset=8), Assign([Attribute(Name('group', Load(), lineno=997, col_offset=8), 'parser', Store(), lineno=997, col_offset=8)], Call(Name('OptionParser', Load(), lineno=997, col_offset=23), [], [], None, None, lineno=997, col_offset=23), lineno=997, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=998, col_offset=8), 'assertRaises', Load(), lineno=998, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=998, col_offset=26), 'parser', Load(), lineno=998, col_offset=26), 'add_option_group', Load(), lineno=998, col_offset=26), Tuple([Name('group', Load(), lineno=998, col_offset=57)], Load(), lineno=998, col_offset=57), Name('None', Load(), lineno=998, col_offset=66), Name('ValueError', Load(), lineno=999, col_offset=26), Str('invalid OptionGroup (wrong parser)', lineno=999, col_offset=38)], [], None, None, lineno=998, col_offset=8), lineno=998, col_offset=8)], [], lineno=995, col_offset=4), FunctionDef('test_group_manipulate', arguments([Name('self', Param(), lineno=1001, col_offset=30)], None, None, []), [Assign([Name('group', Store(), lineno=1002, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1002, col_offset=16), 'parser', Load(), lineno=1002, col_offset=16), 'add_option_group', Load(), lineno=1002, col_offset=16), [Str('Group 2', lineno=1002, col_offset=45)], [keyword('description', Str('Some more options', lineno=1003, col_offset=57))], None, None, lineno=1002, col_offset=16), lineno=1002, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1004, col_offset=8), 'set_title', Load(), lineno=1004, col_offset=8), [Str('Bacon', lineno=1004, col_offset=24)], [], None, None, lineno=1004, col_offset=8), lineno=1004, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1005, col_offset=8), 'add_option', Load(), lineno=1005, col_offset=8), [Str('--bacon', lineno=1005, col_offset=25)], [keyword('type', Str('int', lineno=1005, col_offset=41))], None, None, lineno=1005, col_offset=8), lineno=1005, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1006, col_offset=8), 'assertTrue', Load(), lineno=1006, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=1006, col_offset=24), 'parser', Load(), lineno=1006, col_offset=24), 'get_option_group', Load(), lineno=1006, col_offset=24), [Str('--bacon', lineno=1006, col_offset=53)], [], None, None, lineno=1006, col_offset=24), Name('group', Load(), lineno=1006, col_offset=65)], [], None, None, lineno=1006, col_offset=8), lineno=1006, col_offset=8)], [], lineno=1001, col_offset=4)], [], lineno=976, col_offset=0), ClassDef('TestExtendAddTypes', [Name('BaseTest', Load(), lineno=1010, col_offset=25)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1011, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1012, col_offset=8), 'parser', Store(), lineno=1012, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1012, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1012, col_offset=53)), keyword('option_class', Attribute(Name('self', Load(), lineno=1013, col_offset=60), 'MyOption', Load(), lineno=1013, col_offset=60))], None, None, lineno=1012, col_offset=22), lineno=1012, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1014, col_offset=8), 'parser', Load(), lineno=1014, col_offset=8), 'add_option', Load(), lineno=1014, col_offset=8), [Str('-a', lineno=1014, col_offset=31), Name('None', Load(), lineno=1014, col_offset=37)], [keyword('type', Str('string', lineno=1014, col_offset=48)), keyword('dest', Str('a', lineno=1014, col_offset=63))], None, None, lineno=1014, col_offset=8), lineno=1014, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1015, col_offset=8), 'parser', Load(), lineno=1015, col_offset=8), 'add_option', Load(), lineno=1015, col_offset=8), [Str('-f', lineno=1015, col_offset=31), Str('--file', lineno=1015, col_offset=37)], [keyword('type', Str('file', lineno=1015, col_offset=52)), keyword('dest', Str('file', lineno=1015, col_offset=65))], None, None, lineno=1015, col_offset=8), lineno=1015, col_offset=8)], [], lineno=1011, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=1017, col_offset=17)], None, None, []), [If(Call(Attribute(Attribute(Name('os', Load(), lineno=1018, col_offset=11), 'path', Load(), lineno=1018, col_offset=11), 'isdir', Load(), lineno=1018, col_offset=11), [Attribute(Name('test_support', Load(), lineno=1018, col_offset=25), 'TESTFN', Load(), lineno=1018, col_offset=25)], [], None, None, lineno=1018, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=1019, col_offset=12), 'rmdir', Load(), lineno=1019, col_offset=12), [Attribute(Name('test_support', Load(), lineno=1019, col_offset=21), 'TESTFN', Load(), lineno=1019, col_offset=21)], [], None, None, lineno=1019, col_offset=12), lineno=1019, col_offset=12)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=1020, col_offset=13), 'path', Load(), lineno=1020, col_offset=13), 'isfile', Load(), lineno=1020, col_offset=13), [Attribute(Name('test_support', Load(), lineno=1020, col_offset=28), 'TESTFN', Load(), lineno=1020, col_offset=28)], [], None, None, lineno=1020, col_offset=13), [Expr(Call(Attribute(Name('os', Load(), lineno=1021, col_offset=12), 'unlink', Load(), lineno=1021, col_offset=12), [Attribute(Name('test_support', Load(), lineno=1021, col_offset=22), 'TESTFN', Load(), lineno=1021, col_offset=22)], [], None, None, lineno=1021, col_offset=12), lineno=1021, col_offset=12)], [], lineno=1020, col_offset=13)], lineno=1018, col_offset=8)], [], lineno=1017, col_offset=4), ClassDef('MyOption', [Name('Option', Load(), lineno=1023, col_offset=20)], [FunctionDef('check_file', arguments([Name('option', Param(), lineno=1024, col_offset=23), Name('opt', Param(), lineno=1024, col_offset=31), Name('value', Param(), lineno=1024, col_offset=36)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1025, col_offset=19), 'path', Load(), lineno=1025, col_offset=19), 'exists', Load(), lineno=1025, col_offset=19), [Name('value', Load(), lineno=1025, col_offset=34)], [], None, None, lineno=1025, col_offset=19), lineno=1025, col_offset=15), [Raise(Call(Name('OptionValueError', Load(), lineno=1026, col_offset=22), [BinOp(Str('%s: file does not exist', lineno=1026, col_offset=39), Mod(), Name('value', Load(), lineno=1026, col_offset=67), lineno=1026, col_offset=39)], [], None, None, lineno=1026, col_offset=22), None, None, lineno=1026, col_offset=16)], [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=1027, col_offset=21), 'path', Load(), lineno=1027, col_offset=21), 'isfile', Load(), lineno=1027, col_offset=21), [Name('value', Load(), lineno=1027, col_offset=36)], [], None, None, lineno=1027, col_offset=21), lineno=1027, col_offset=17), [Raise(Call(Name('OptionValueError', Load(), lineno=1028, col_offset=22), [BinOp(Str('%s: not a regular file', lineno=1028, col_offset=39), Mod(), Name('value', Load(), lineno=1028, col_offset=66), lineno=1028, col_offset=39)], [], None, None, lineno=1028, col_offset=22), None, None, lineno=1028, col_offset=16)], [], lineno=1027, col_offset=17)], lineno=1025, col_offset=12), Return(Name('value', Load(), lineno=1029, col_offset=19), lineno=1029, col_offset=12)], [], lineno=1024, col_offset=8), Assign([Name('TYPES', Store(), lineno=1031, col_offset=8)], BinOp(Attribute(Name('Option', Load(), lineno=1031, col_offset=16), 'TYPES', Load(), lineno=1031, col_offset=16), Add(), Tuple([Str('file', lineno=1031, col_offset=32)], Load(), lineno=1031, col_offset=32), lineno=1031, col_offset=16), lineno=1031, col_offset=8), Assign([Name('TYPE_CHECKER', Store(), lineno=1032, col_offset=8)], Call(Attribute(Name('copy', Load(), lineno=1032, col_offset=23), 'copy', Load(), lineno=1032, col_offset=23), [Attribute(Name('Option', Load(), lineno=1032, col_offset=33), 'TYPE_CHECKER', Load(), lineno=1032, col_offset=33)], [], None, None, lineno=1032, col_offset=23), lineno=1032, col_offset=8), Assign([Subscript(Name('TYPE_CHECKER', Load(), lineno=1033, col_offset=8), Index(Str('file', lineno=1033, col_offset=21)), Store(), lineno=1033, col_offset=8)], Name('check_file', Load(), lineno=1033, col_offset=31), lineno=1033, col_offset=8)], [], lineno=1023, col_offset=4), FunctionDef('test_filetype_ok', arguments([Name('self', Param(), lineno=1035, col_offset=25)], None, None, []), [Expr(Call(Attribute(Call(Name('open', Load(), lineno=1036, col_offset=8), [Attribute(Name('test_support', Load(), lineno=1036, col_offset=13), 'TESTFN', Load(), lineno=1036, col_offset=13), Str('w', lineno=1036, col_offset=34)], [], None, None, lineno=1036, col_offset=8), 'close', Load(), lineno=1036, col_offset=8), [], [], None, None, lineno=1036, col_offset=8), lineno=1036, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1037, col_offset=8), 'assertParseOK', Load(), lineno=1037, col_offset=8), [List([Str('--file', lineno=1037, col_offset=28), Attribute(Name('test_support', Load(), lineno=1037, col_offset=38), 'TESTFN', Load(), lineno=1037, col_offset=38), Str('-afoo', lineno=1037, col_offset=59)], Load(), lineno=1037, col_offset=27), Dict([Str('file', lineno=1038, col_offset=28), Str('a', lineno=1038, col_offset=57)], [Attribute(Name('test_support', Load(), lineno=1038, col_offset=36), 'TESTFN', Load(), lineno=1038, col_offset=36), Str('foo', lineno=1038, col_offset=62)], lineno=1038, col_offset=27), List([], Load(), lineno=1039, col_offset=27)], [], None, None, lineno=1037, col_offset=8), lineno=1037, col_offset=8)], [], lineno=1035, col_offset=4), FunctionDef('test_filetype_noexist', arguments([Name('self', Param(), lineno=1041, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1042, col_offset=8), 'assertParseFail', Load(), lineno=1042, col_offset=8), [List([Str('--file', lineno=1042, col_offset=30), Attribute(Name('test_support', Load(), lineno=1042, col_offset=40), 'TESTFN', Load(), lineno=1042, col_offset=40), Str('-afoo', lineno=1042, col_offset=61)], Load(), lineno=1042, col_offset=29), BinOp(Str('%s: file does not exist', lineno=1043, col_offset=29), Mod(), Attribute(Name('test_support', Load(), lineno=1044, col_offset=29), 'TESTFN', Load(), lineno=1044, col_offset=29), lineno=1043, col_offset=29)], [], None, None, lineno=1042, col_offset=8), lineno=1042, col_offset=8)], [], lineno=1041, col_offset=4), FunctionDef('test_filetype_notfile', arguments([Name('self', Param(), lineno=1046, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('os', Load(), lineno=1047, col_offset=8), 'mkdir', Load(), lineno=1047, col_offset=8), [Attribute(Name('test_support', Load(), lineno=1047, col_offset=17), 'TESTFN', Load(), lineno=1047, col_offset=17)], [], None, None, lineno=1047, col_offset=8), lineno=1047, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1048, col_offset=8), 'assertParseFail', Load(), lineno=1048, col_offset=8), [List([Str('--file', lineno=1048, col_offset=30), Attribute(Name('test_support', Load(), lineno=1048, col_offset=40), 'TESTFN', Load(), lineno=1048, col_offset=40), Str('-afoo', lineno=1048, col_offset=61)], Load(), lineno=1048, col_offset=29), BinOp(Str('%s: not a regular file', lineno=1049, col_offset=29), Mod(), Attribute(Name('test_support', Load(), lineno=1050, col_offset=29), 'TESTFN', Load(), lineno=1050, col_offset=29), lineno=1049, col_offset=29)], [], None, None, lineno=1048, col_offset=8), lineno=1048, col_offset=8)], [], lineno=1046, col_offset=4)], [], lineno=1010, col_offset=0), ClassDef('TestExtendAddActions', [Name('BaseTest', Load(), lineno=1053, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1054, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1055, col_offset=8)], List([Call(Attribute(Name('self', Load(), lineno=1055, col_offset=19), 'MyOption', Load(), lineno=1055, col_offset=19), [Str('-a', lineno=1055, col_offset=33), Str('--apple', lineno=1055, col_offset=39)], [keyword('action', Str('extend', lineno=1055, col_offset=57)), keyword('type', Str('string', lineno=1056, col_offset=38)), keyword('dest', Str('apple', lineno=1056, col_offset=53))], None, None, lineno=1055, col_offset=19)], Load(), lineno=1055, col_offset=18), lineno=1055, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1057, col_offset=8), 'parser', Store(), lineno=1057, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1057, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=1057, col_offset=47))], None, None, lineno=1057, col_offset=22), lineno=1057, col_offset=8)], [], lineno=1054, col_offset=4), ClassDef('MyOption', [Name('Option', Load(), lineno=1059, col_offset=20)], [Assign([Name('ACTIONS', Store(), lineno=1060, col_offset=8)], BinOp(Attribute(Name('Option', Load(), lineno=1060, col_offset=18), 'ACTIONS', Load(), lineno=1060, col_offset=18), Add(), Tuple([Str('extend', lineno=1060, col_offset=36)], Load(), lineno=1060, col_offset=36), lineno=1060, col_offset=18), lineno=1060, col_offset=8), Assign([Name('STORE_ACTIONS', Store(), lineno=1061, col_offset=8)], BinOp(Attribute(Name('Option', Load(), lineno=1061, col_offset=24), 'STORE_ACTIONS', Load(), lineno=1061, col_offset=24), Add(), Tuple([Str('extend', lineno=1061, col_offset=48)], Load(), lineno=1061, col_offset=48), lineno=1061, col_offset=24), lineno=1061, col_offset=8), Assign([Name('TYPED_ACTIONS', Store(), lineno=1062, col_offset=8)], BinOp(Attribute(Name('Option', Load(), lineno=1062, col_offset=24), 'TYPED_ACTIONS', Load(), lineno=1062, col_offset=24), Add(), Tuple([Str('extend', lineno=1062, col_offset=48)], Load(), lineno=1062, col_offset=48), lineno=1062, col_offset=24), lineno=1062, col_offset=8), FunctionDef('take_action', arguments([Name('self', Param(), lineno=1064, col_offset=24), Name('action', Param(), lineno=1064, col_offset=30), Name('dest', Param(), lineno=1064, col_offset=38), Name('opt', Param(), lineno=1064, col_offset=44), Name('value', Param(), lineno=1064, col_offset=49), Name('values', Param(), lineno=1064, col_offset=56), Name('parser', Param(), lineno=1064, col_offset=64)], None, None, []), [If(Compare(Name('action', Load(), lineno=1065, col_offset=15), [Eq()], [Str('extend', lineno=1065, col_offset=25)], lineno=1065, col_offset=15), [Assign([Name('lvalue', Store(), lineno=1066, col_offset=16)], Call(Attribute(Name('value', Load(), lineno=1066, col_offset=25), 'split', Load(), lineno=1066, col_offset=25), [Str(',', lineno=1066, col_offset=37)], [], None, None, lineno=1066, col_offset=25), lineno=1066, col_offset=16), Expr(Call(Attribute(Call(Attribute(Name('values', Load(), lineno=1067, col_offset=16), 'ensure_value', Load(), lineno=1067, col_offset=16), [Name('dest', Load(), lineno=1067, col_offset=36), List([], Load(), lineno=1067, col_offset=42)], [], None, None, lineno=1067, col_offset=16), 'extend', Load(), lineno=1067, col_offset=16), [Name('lvalue', Load(), lineno=1067, col_offset=53)], [], None, None, lineno=1067, col_offset=16), lineno=1067, col_offset=16)], [Expr(Call(Attribute(Name('Option', Load(), lineno=1069, col_offset=16), 'take_action', Load(), lineno=1069, col_offset=16), [Name('self', Load(), lineno=1069, col_offset=35), Name('action', Load(), lineno=1069, col_offset=41), Name('dest', Load(), lineno=1069, col_offset=49), Name('opt', Load(), lineno=1069, col_offset=55), Name('parser', Load(), lineno=1069, col_offset=60), Name('value', Load(), lineno=1069, col_offset=68), Name('values', Load(), lineno=1070, col_offset=35)], [], None, None, lineno=1069, col_offset=16), lineno=1069, col_offset=16)], lineno=1065, col_offset=12)], [], lineno=1064, col_offset=8)], [], lineno=1059, col_offset=4), FunctionDef('test_extend_add_action', arguments([Name('self', Param(), lineno=1072, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1073, col_offset=8), 'assertParseOK', Load(), lineno=1073, col_offset=8), [List([Str('-afoo,bar', lineno=1073, col_offset=28), Str('--apple=blah', lineno=1073, col_offset=41)], Load(), lineno=1073, col_offset=27), Dict([Str('apple', lineno=1074, col_offset=28)], [List([Str('foo', lineno=1074, col_offset=38), Str('bar', lineno=1074, col_offset=45), Str('blah', lineno=1074, col_offset=52)], Load(), lineno=1074, col_offset=37)], lineno=1074, col_offset=27), List([], Load(), lineno=1075, col_offset=27)], [], None, None, lineno=1073, col_offset=8), lineno=1073, col_offset=8)], [], lineno=1072, col_offset=4), FunctionDef('test_extend_add_action_normal', arguments([Name('self', Param(), lineno=1077, col_offset=38)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1078, col_offset=8), 'assertParseOK', Load(), lineno=1078, col_offset=8), [List([Str('-a', lineno=1078, col_offset=28), Str('foo', lineno=1078, col_offset=34), Str('-abar', lineno=1078, col_offset=41), Str('--apple=x,y', lineno=1078, col_offset=50)], Load(), lineno=1078, col_offset=27), Dict([Str('apple', lineno=1079, col_offset=28)], [List([Str('foo', lineno=1079, col_offset=38), Str('bar', lineno=1079, col_offset=45), Str('x', lineno=1079, col_offset=52), Str('y', lineno=1079, col_offset=57)], Load(), lineno=1079, col_offset=37)], lineno=1079, col_offset=27), List([], Load(), lineno=1080, col_offset=27)], [], None, None, lineno=1078, col_offset=8), lineno=1078, col_offset=8)], [], lineno=1077, col_offset=4)], [], lineno=1053, col_offset=0), ClassDef('TestCallback', [Name('BaseTest', Load(), lineno=1084, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1085, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1086, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1086, col_offset=19), [Str('-x', lineno=1086, col_offset=31), Name('None', Load(), lineno=1087, col_offset=31)], [keyword('action', Str('callback', lineno=1088, col_offset=38)), keyword('callback', Attribute(Name('self', Load(), lineno=1089, col_offset=40), 'process_opt', Load(), lineno=1089, col_offset=40))], None, None, lineno=1086, col_offset=19), Call(Name('make_option', Load(), lineno=1090, col_offset=19), [Str('-f', lineno=1090, col_offset=31), Str('--file', lineno=1091, col_offset=31)], [keyword('action', Str('callback', lineno=1092, col_offset=38)), keyword('callback', Attribute(Name('self', Load(), lineno=1093, col_offset=40), 'process_opt', Load(), lineno=1093, col_offset=40)), keyword('type', Str('string', lineno=1094, col_offset=36)), keyword('dest', Str('filename', lineno=1095, col_offset=36))], None, None, lineno=1090, col_offset=19)], Load(), lineno=1086, col_offset=18), lineno=1086, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1096, col_offset=8), 'parser', Store(), lineno=1096, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1096, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=1096, col_offset=47))], None, None, lineno=1096, col_offset=22), lineno=1096, col_offset=8)], [], lineno=1085, col_offset=4), FunctionDef('process_opt', arguments([Name('self', Param(), lineno=1098, col_offset=20), Name('option', Param(), lineno=1098, col_offset=26), Name('opt', Param(), lineno=1098, col_offset=34), Name('value', Param(), lineno=1098, col_offset=39), Name('parser_', Param(), lineno=1098, col_offset=46)], None, None, []), [If(Compare(Name('opt', Load(), lineno=1099, col_offset=11), [Eq()], [Str('-x', lineno=1099, col_offset=18)], lineno=1099, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1100, col_offset=12), 'assertEqual', Load(), lineno=1100, col_offset=12), [Attribute(Name('option', Load(), lineno=1100, col_offset=29), '_short_opts', Load(), lineno=1100, col_offset=29), List([Str('-x', lineno=1100, col_offset=50)], Load(), lineno=1100, col_offset=49)], [], None, None, lineno=1100, col_offset=12), lineno=1100, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1101, col_offset=12), 'assertEqual', Load(), lineno=1101, col_offset=12), [Attribute(Name('option', Load(), lineno=1101, col_offset=29), '_long_opts', Load(), lineno=1101, col_offset=29), List([], Load(), lineno=1101, col_offset=48)], [], None, None, lineno=1101, col_offset=12), lineno=1101, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1102, col_offset=12), 'assertTrue', Load(), lineno=1102, col_offset=12), [Compare(Name('parser_', Load(), lineno=1102, col_offset=28), [Is()], [Attribute(Name('self', Load(), lineno=1102, col_offset=39), 'parser', Load(), lineno=1102, col_offset=39)], lineno=1102, col_offset=28)], [], None, None, lineno=1102, col_offset=12), lineno=1102, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1103, col_offset=12), 'assertTrue', Load(), lineno=1103, col_offset=12), [Compare(Name('value', Load(), lineno=1103, col_offset=28), [Is()], [Name('None', Load(), lineno=1103, col_offset=37)], lineno=1103, col_offset=28)], [], None, None, lineno=1103, col_offset=12), lineno=1103, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1104, col_offset=12), 'assertEqual', Load(), lineno=1104, col_offset=12), [Call(Name('vars', Load(), lineno=1104, col_offset=29), [Attribute(Name('parser_', Load(), lineno=1104, col_offset=34), 'values', Load(), lineno=1104, col_offset=34)], [], None, None, lineno=1104, col_offset=29), Dict([Str('filename', lineno=1104, col_offset=52)], [Name('None', Load(), lineno=1104, col_offset=64)], lineno=1104, col_offset=51)], [], None, None, lineno=1104, col_offset=12), lineno=1104, col_offset=12), Assign([Attribute(Attribute(Name('parser_', Load(), lineno=1106, col_offset=12), 'values', Load(), lineno=1106, col_offset=12), 'x', Store(), lineno=1106, col_offset=12)], Num(42, lineno=1106, col_offset=31), lineno=1106, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=1107, col_offset=13), [Eq()], [Str('--file', lineno=1107, col_offset=20)], lineno=1107, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1108, col_offset=12), 'assertEqual', Load(), lineno=1108, col_offset=12), [Attribute(Name('option', Load(), lineno=1108, col_offset=29), '_short_opts', Load(), lineno=1108, col_offset=29), List([Str('-f', lineno=1108, col_offset=50)], Load(), lineno=1108, col_offset=49)], [], None, None, lineno=1108, col_offset=12), lineno=1108, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1109, col_offset=12), 'assertEqual', Load(), lineno=1109, col_offset=12), [Attribute(Name('option', Load(), lineno=1109, col_offset=29), '_long_opts', Load(), lineno=1109, col_offset=29), List([Str('--file', lineno=1109, col_offset=49)], Load(), lineno=1109, col_offset=48)], [], None, None, lineno=1109, col_offset=12), lineno=1109, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1110, col_offset=12), 'assertTrue', Load(), lineno=1110, col_offset=12), [Compare(Name('parser_', Load(), lineno=1110, col_offset=28), [Is()], [Attribute(Name('self', Load(), lineno=1110, col_offset=39), 'parser', Load(), lineno=1110, col_offset=39)], lineno=1110, col_offset=28)], [], None, None, lineno=1110, col_offset=12), lineno=1110, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1111, col_offset=12), 'assertEqual', Load(), lineno=1111, col_offset=12), [Name('value', Load(), lineno=1111, col_offset=29), Str('foo', lineno=1111, col_offset=36)], [], None, None, lineno=1111, col_offset=12), lineno=1111, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1112, col_offset=12), 'assertEqual', Load(), lineno=1112, col_offset=12), [Call(Name('vars', Load(), lineno=1112, col_offset=29), [Attribute(Name('parser_', Load(), lineno=1112, col_offset=34), 'values', Load(), lineno=1112, col_offset=34)], [], None, None, lineno=1112, col_offset=29), Dict([Str('filename', lineno=1112, col_offset=52), Str('x', lineno=1112, col_offset=70)], [Name('None', Load(), lineno=1112, col_offset=64), Num(42, lineno=1112, col_offset=75)], lineno=1112, col_offset=51)], [], None, None, lineno=1112, col_offset=12), lineno=1112, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=1114, col_offset=12), [Attribute(Name('parser_', Load(), lineno=1114, col_offset=20), 'values', Load(), lineno=1114, col_offset=20), Attribute(Name('option', Load(), lineno=1114, col_offset=36), 'dest', Load(), lineno=1114, col_offset=36), Name('value', Load(), lineno=1114, col_offset=49)], [], None, None, lineno=1114, col_offset=12), lineno=1114, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=1116, col_offset=12), 'fail', Load(), lineno=1116, col_offset=12), [BinOp(Str('Unknown option %r in process_opt.', lineno=1116, col_offset=22), Mod(), Name('opt', Load(), lineno=1116, col_offset=60), lineno=1116, col_offset=22)], [], None, None, lineno=1116, col_offset=12), lineno=1116, col_offset=12)], lineno=1107, col_offset=13)], lineno=1099, col_offset=8)], [], lineno=1098, col_offset=4), FunctionDef('test_callback', arguments([Name('self', Param(), lineno=1118, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1119, col_offset=8), 'assertParseOK', Load(), lineno=1119, col_offset=8), [List([Str('-x', lineno=1119, col_offset=28), Str('--file=foo', lineno=1119, col_offset=34)], Load(), lineno=1119, col_offset=27), Dict([Str('filename', lineno=1120, col_offset=28), Str('x', lineno=1120, col_offset=47)], [Str('foo', lineno=1120, col_offset=40), Num(42, lineno=1120, col_offset=52)], lineno=1120, col_offset=27), List([], Load(), lineno=1121, col_offset=27)], [], None, None, lineno=1119, col_offset=8), lineno=1119, col_offset=8)], [], lineno=1118, col_offset=4), FunctionDef('test_callback_help', arguments([Name('self', Param(), lineno=1123, col_offset=27)], None, None, []), [Assign([Name('parser', Store(), lineno=1127, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1127, col_offset=17), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1127, col_offset=36))], None, None, lineno=1127, col_offset=17), lineno=1127, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1128, col_offset=8), 'remove_option', Load(), lineno=1128, col_offset=8), [Str('-h', lineno=1128, col_offset=29)], [], None, None, lineno=1128, col_offset=8), lineno=1128, col_offset=8), Expr(Call(Attribute(Name('parser', Load(), lineno=1129, col_offset=8), 'add_option', Load(), lineno=1129, col_offset=8), [Str('-t', lineno=1129, col_offset=26), Str('--test', lineno=1129, col_offset=32)], [keyword('action', Str('callback', lineno=1129, col_offset=49)), keyword('callback', Lambda(arguments([], None, None, []), Name('None', Load(), lineno=1130, col_offset=43), lineno=1130, col_offset=35)), keyword('type', Str('string', lineno=1130, col_offset=54)), keyword('help', Str('foo', lineno=1131, col_offset=31))], None, None, lineno=1129, col_offset=8), lineno=1129, col_offset=8), Assign([Name('expected_help', Store(), lineno=1133, col_offset=8)], Str('Options:\n  -t TEST, --test=TEST  foo\n', lineno=1133, col_offset=25), lineno=1133, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1135, col_offset=8), 'assertHelp', Load(), lineno=1135, col_offset=8), [Name('parser', Load(), lineno=1135, col_offset=24), Name('expected_help', Load(), lineno=1135, col_offset=32)], [], None, None, lineno=1135, col_offset=8), lineno=1135, col_offset=8)], [], lineno=1123, col_offset=4)], [], lineno=1084, col_offset=0), ClassDef('TestCallbackExtraArgs', [Name('BaseTest', Load(), lineno=1138, col_offset=28)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1139, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1140, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1140, col_offset=19), [Str('-p', lineno=1140, col_offset=31), Str('--point', lineno=1140, col_offset=37)], [keyword('action', Str('callback', lineno=1140, col_offset=55)), keyword('callback', Attribute(Name('self', Load(), lineno=1141, col_offset=40), 'process_tuple', Load(), lineno=1141, col_offset=40)), keyword('callback_args', Tuple([Num(3, lineno=1142, col_offset=46), Name('int', Load(), lineno=1142, col_offset=49)], Load(), lineno=1142, col_offset=46)), keyword('type', Str('string', lineno=1142, col_offset=60)), keyword('dest', Str('points', lineno=1143, col_offset=36)), keyword('default', List([], Load(), lineno=1143, col_offset=54))], None, None, lineno=1140, col_offset=19)], Load(), lineno=1140, col_offset=18), lineno=1140, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1144, col_offset=8), 'parser', Store(), lineno=1144, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1144, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=1144, col_offset=47))], None, None, lineno=1144, col_offset=22), lineno=1144, col_offset=8)], [], lineno=1139, col_offset=4), FunctionDef('process_tuple', arguments([Name('self', Param(), lineno=1146, col_offset=22), Name('option', Param(), lineno=1146, col_offset=28), Name('opt', Param(), lineno=1146, col_offset=36), Name('value', Param(), lineno=1146, col_offset=41), Name('parser_', Param(), lineno=1146, col_offset=48), Name('len', Param(), lineno=1146, col_offset=57), Name('type', Param(), lineno=1146, col_offset=62)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1147, col_offset=8), 'assertEqual', Load(), lineno=1147, col_offset=8), [Name('len', Load(), lineno=1147, col_offset=25), Num(3, lineno=1147, col_offset=30)], [], None, None, lineno=1147, col_offset=8), lineno=1147, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1148, col_offset=8), 'assertTrue', Load(), lineno=1148, col_offset=8), [Compare(Name('type', Load(), lineno=1148, col_offset=24), [Is()], [Name('int', Load(), lineno=1148, col_offset=32)], lineno=1148, col_offset=24)], [], None, None, lineno=1148, col_offset=8), lineno=1148, col_offset=8), If(Compare(Name('opt', Load(), lineno=1150, col_offset=11), [Eq()], [Str('-p', lineno=1150, col_offset=18)], lineno=1150, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1151, col_offset=12), 'assertEqual', Load(), lineno=1151, col_offset=12), [Name('value', Load(), lineno=1151, col_offset=29), Str('1,2,3', lineno=1151, col_offset=36)], [], None, None, lineno=1151, col_offset=12), lineno=1151, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=1152, col_offset=13), [Eq()], [Str('--point', lineno=1152, col_offset=20)], lineno=1152, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1153, col_offset=12), 'assertEqual', Load(), lineno=1153, col_offset=12), [Name('value', Load(), lineno=1153, col_offset=29), Str('4,5,6', lineno=1153, col_offset=36)], [], None, None, lineno=1153, col_offset=12), lineno=1153, col_offset=12)], [], lineno=1152, col_offset=13)], lineno=1150, col_offset=8), Assign([Name('value', Store(), lineno=1155, col_offset=8)], Call(Name('tuple', Load(), lineno=1155, col_offset=16), [Call(Name('map', Load(), lineno=1155, col_offset=22), [Name('type', Load(), lineno=1155, col_offset=26), Call(Attribute(Name('value', Load(), lineno=1155, col_offset=32), 'split', Load(), lineno=1155, col_offset=32), [Str(',', lineno=1155, col_offset=44)], [], None, None, lineno=1155, col_offset=32)], [], None, None, lineno=1155, col_offset=22)], [], None, None, lineno=1155, col_offset=16), lineno=1155, col_offset=8), Expr(Call(Attribute(Call(Name('getattr', Load(), lineno=1156, col_offset=8), [Attribute(Name('parser_', Load(), lineno=1156, col_offset=16), 'values', Load(), lineno=1156, col_offset=16), Attribute(Name('option', Load(), lineno=1156, col_offset=32), 'dest', Load(), lineno=1156, col_offset=32)], [], None, None, lineno=1156, col_offset=8), 'append', Load(), lineno=1156, col_offset=8), [Name('value', Load(), lineno=1156, col_offset=52)], [], None, None, lineno=1156, col_offset=8), lineno=1156, col_offset=8)], [], lineno=1146, col_offset=4), FunctionDef('test_callback_extra_args', arguments([Name('self', Param(), lineno=1158, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1159, col_offset=8), 'assertParseOK', Load(), lineno=1159, col_offset=8), [List([Str('-p1,2,3', lineno=1159, col_offset=28), Str('--point', lineno=1159, col_offset=39), Str('4,5,6', lineno=1159, col_offset=50)], Load(), lineno=1159, col_offset=27), Dict([Str('points', lineno=1160, col_offset=28)], [List([Tuple([Num(1, lineno=1160, col_offset=40), Num(2, lineno=1160, col_offset=42), Num(3, lineno=1160, col_offset=44)], Load(), lineno=1160, col_offset=40), Tuple([Num(4, lineno=1160, col_offset=49), Num(5, lineno=1160, col_offset=51), Num(6, lineno=1160, col_offset=53)], Load(), lineno=1160, col_offset=49)], Load(), lineno=1160, col_offset=38)], lineno=1160, col_offset=27), List([], Load(), lineno=1161, col_offset=27)], [], None, None, lineno=1159, col_offset=8), lineno=1159, col_offset=8)], [], lineno=1158, col_offset=4)], [], lineno=1138, col_offset=0), ClassDef('TestCallbackMeddleArgs', [Name('BaseTest', Load(), lineno=1163, col_offset=29)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1164, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1165, col_offset=8)], ListComp(Call(Name('make_option', Load(), lineno=1165, col_offset=19), [Call(Name('str', Load(), lineno=1165, col_offset=31), [Name('x', Load(), lineno=1165, col_offset=35)], [], None, None, lineno=1165, col_offset=31)], [keyword('action', Str('callback', lineno=1165, col_offset=46)), keyword('callback', Attribute(Name('self', Load(), lineno=1166, col_offset=40), 'process_n', Load(), lineno=1166, col_offset=40)), keyword('dest', Str('things', lineno=1166, col_offset=61))], None, None, lineno=1165, col_offset=19), [comprehension(Name('x', Store(), lineno=1167, col_offset=23), Call(Name('range', Load(), lineno=1167, col_offset=28), [Num(-1, lineno=1167, col_offset=35), Num(-6, lineno=1167, col_offset=39), Num(-1, lineno=1167, col_offset=43)], [], None, None, lineno=1167, col_offset=28), [])], lineno=1165, col_offset=19), lineno=1165, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1168, col_offset=8), 'parser', Store(), lineno=1168, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1168, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=1168, col_offset=47))], None, None, lineno=1168, col_offset=22), lineno=1168, col_offset=8)], [], lineno=1164, col_offset=4), FunctionDef('process_n', arguments([Name('self', Param(), lineno=1171, col_offset=18), Name('option', Param(), lineno=1171, col_offset=24), Name('opt', Param(), lineno=1171, col_offset=32), Name('value', Param(), lineno=1171, col_offset=37), Name('parser_', Param(), lineno=1171, col_offset=44)], None, None, []), [Assign([Name('nargs', Store(), lineno=1173, col_offset=8)], Call(Name('int', Load(), lineno=1173, col_offset=16), [Subscript(Name('opt', Load(), lineno=1173, col_offset=20), Slice(Num(1, lineno=1173, col_offset=24), None, None), Load(), lineno=1173, col_offset=20)], [], None, None, lineno=1173, col_offset=16), lineno=1173, col_offset=8), Assign([Name('rargs', Store(), lineno=1174, col_offset=8)], Attribute(Name('parser_', Load(), lineno=1174, col_offset=16), 'rargs', Load(), lineno=1174, col_offset=16), lineno=1174, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=1175, col_offset=11), [Name('rargs', Load(), lineno=1175, col_offset=15)], [], None, None, lineno=1175, col_offset=11), [Lt()], [Name('nargs', Load(), lineno=1175, col_offset=24)], lineno=1175, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1176, col_offset=12), 'fail', Load(), lineno=1176, col_offset=12), [BinOp(Str('Expected %d arguments for %s option.', lineno=1176, col_offset=22), Mod(), Tuple([Name('nargs', Load(), lineno=1176, col_offset=64), Name('opt', Load(), lineno=1176, col_offset=71)], Load(), lineno=1176, col_offset=64), lineno=1176, col_offset=22)], [], None, None, lineno=1176, col_offset=12), lineno=1176, col_offset=12)], [], lineno=1175, col_offset=8), Assign([Name('dest', Store(), lineno=1177, col_offset=8)], Call(Attribute(Attribute(Name('parser_', Load(), lineno=1177, col_offset=15), 'values', Load(), lineno=1177, col_offset=15), 'ensure_value', Load(), lineno=1177, col_offset=15), [Attribute(Name('option', Load(), lineno=1177, col_offset=43), 'dest', Load(), lineno=1177, col_offset=43), List([], Load(), lineno=1177, col_offset=56)], [], None, None, lineno=1177, col_offset=15), lineno=1177, col_offset=8), Expr(Call(Attribute(Name('dest', Load(), lineno=1178, col_offset=8), 'append', Load(), lineno=1178, col_offset=8), [Call(Name('tuple', Load(), lineno=1178, col_offset=20), [Subscript(Name('rargs', Load(), lineno=1178, col_offset=26), Slice(Num(0, lineno=1178, col_offset=32), Name('nargs', Load(), lineno=1178, col_offset=34), None), Load(), lineno=1178, col_offset=26)], [], None, None, lineno=1178, col_offset=20)], [], None, None, lineno=1178, col_offset=8), lineno=1178, col_offset=8), Expr(Call(Attribute(Attribute(Name('parser_', Load(), lineno=1179, col_offset=8), 'largs', Load(), lineno=1179, col_offset=8), 'append', Load(), lineno=1179, col_offset=8), [Name('nargs', Load(), lineno=1179, col_offset=29)], [], None, None, lineno=1179, col_offset=8), lineno=1179, col_offset=8), Delete([Subscript(Name('rargs', Load(), lineno=1180, col_offset=12), Slice(Num(0, lineno=1180, col_offset=18), Name('nargs', Load(), lineno=1180, col_offset=20), None), Del(), lineno=1180, col_offset=12)], lineno=1180, col_offset=8)], [], lineno=1171, col_offset=4), FunctionDef('test_callback_meddle_args', arguments([Name('self', Param(), lineno=1182, col_offset=34)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1183, col_offset=8), 'assertParseOK', Load(), lineno=1183, col_offset=8), [List([Str('-1', lineno=1183, col_offset=28), Str('foo', lineno=1183, col_offset=34), Str('-3', lineno=1183, col_offset=41), Str('bar', lineno=1183, col_offset=47), Str('baz', lineno=1183, col_offset=54), Str('qux', lineno=1183, col_offset=61)], Load(), lineno=1183, col_offset=27), Dict([Str('things', lineno=1184, col_offset=28)], [List([Tuple([Str('foo', lineno=1184, col_offset=40)], Load(), lineno=1184, col_offset=40), Tuple([Str('bar', lineno=1184, col_offset=50), Str('baz', lineno=1184, col_offset=57), Str('qux', lineno=1184, col_offset=64)], Load(), lineno=1184, col_offset=50)], Load(), lineno=1184, col_offset=38)], lineno=1184, col_offset=27), List([Num(1, lineno=1185, col_offset=28), Num(3, lineno=1185, col_offset=31)], Load(), lineno=1185, col_offset=27)], [], None, None, lineno=1183, col_offset=8), lineno=1183, col_offset=8)], [], lineno=1182, col_offset=4), FunctionDef('test_callback_meddle_args_separator', arguments([Name('self', Param(), lineno=1187, col_offset=44)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1188, col_offset=8), 'assertParseOK', Load(), lineno=1188, col_offset=8), [List([Str('-2', lineno=1188, col_offset=28), Str('foo', lineno=1188, col_offset=34), Str('--', lineno=1188, col_offset=41)], Load(), lineno=1188, col_offset=27), Dict([Str('things', lineno=1189, col_offset=28)], [List([Tuple([Str('foo', lineno=1189, col_offset=40), Str('--', lineno=1189, col_offset=47)], Load(), lineno=1189, col_offset=40)], Load(), lineno=1189, col_offset=38)], lineno=1189, col_offset=27), List([Num(2, lineno=1190, col_offset=28)], Load(), lineno=1190, col_offset=27)], [], None, None, lineno=1188, col_offset=8), lineno=1188, col_offset=8)], [], lineno=1187, col_offset=4)], [], lineno=1163, col_offset=0), ClassDef('TestCallbackManyArgs', [Name('BaseTest', Load(), lineno=1192, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1193, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1194, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1194, col_offset=19), [Str('-a', lineno=1194, col_offset=31), Str('--apple', lineno=1194, col_offset=37)], [keyword('action', Str('callback', lineno=1194, col_offset=55)), keyword('nargs', Num(2, lineno=1194, col_offset=73)), keyword('callback', Attribute(Name('self', Load(), lineno=1195, col_offset=40), 'process_many', Load(), lineno=1195, col_offset=40)), keyword('type', Str('string', lineno=1195, col_offset=64))], None, None, lineno=1194, col_offset=19), Call(Name('make_option', Load(), lineno=1196, col_offset=19), [Str('-b', lineno=1196, col_offset=31), Str('--bob', lineno=1196, col_offset=37)], [keyword('action', Str('callback', lineno=1196, col_offset=53)), keyword('nargs', Num(3, lineno=1196, col_offset=71)), keyword('callback', Attribute(Name('self', Load(), lineno=1197, col_offset=40), 'process_many', Load(), lineno=1197, col_offset=40)), keyword('type', Str('int', lineno=1197, col_offset=64))], None, None, lineno=1196, col_offset=19)], Load(), lineno=1194, col_offset=18), lineno=1194, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1198, col_offset=8), 'parser', Store(), lineno=1198, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1198, col_offset=22), [], [keyword('option_list', Name('options', Load(), lineno=1198, col_offset=47))], None, None, lineno=1198, col_offset=22), lineno=1198, col_offset=8)], [], lineno=1193, col_offset=4), FunctionDef('process_many', arguments([Name('self', Param(), lineno=1200, col_offset=21), Name('option', Param(), lineno=1200, col_offset=27), Name('opt', Param(), lineno=1200, col_offset=35), Name('value', Param(), lineno=1200, col_offset=40), Name('parser_', Param(), lineno=1200, col_offset=47)], None, None, []), [If(Compare(Name('opt', Load(), lineno=1201, col_offset=11), [Eq()], [Str('-a', lineno=1201, col_offset=18)], lineno=1201, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=1202, col_offset=12), 'assertEqual', Load(), lineno=1202, col_offset=12), [Name('value', Load(), lineno=1202, col_offset=29), Tuple([Str('foo', lineno=1202, col_offset=37), Str('bar', lineno=1202, col_offset=44)], Load(), lineno=1202, col_offset=37)], [], None, None, lineno=1202, col_offset=12), lineno=1202, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=1203, col_offset=13), [Eq()], [Str('--apple', lineno=1203, col_offset=20)], lineno=1203, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1204, col_offset=12), 'assertEqual', Load(), lineno=1204, col_offset=12), [Name('value', Load(), lineno=1204, col_offset=29), Tuple([Str('ding', lineno=1204, col_offset=37), Str('dong', lineno=1204, col_offset=45)], Load(), lineno=1204, col_offset=37)], [], None, None, lineno=1204, col_offset=12), lineno=1204, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=1205, col_offset=13), [Eq()], [Str('-b', lineno=1205, col_offset=20)], lineno=1205, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1206, col_offset=12), 'assertEqual', Load(), lineno=1206, col_offset=12), [Name('value', Load(), lineno=1206, col_offset=29), Tuple([Num(1, lineno=1206, col_offset=37), Num(2, lineno=1206, col_offset=40), Num(3, lineno=1206, col_offset=43)], Load(), lineno=1206, col_offset=37)], [], None, None, lineno=1206, col_offset=12), lineno=1206, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=1207, col_offset=13), [Eq()], [Str('--bob', lineno=1207, col_offset=20)], lineno=1207, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=1208, col_offset=12), 'assertEqual', Load(), lineno=1208, col_offset=12), [Name('value', Load(), lineno=1208, col_offset=29), Tuple([Num(-666, lineno=1208, col_offset=38), Num(42, lineno=1208, col_offset=43), Num(0, lineno=1208, col_offset=47)], Load(), lineno=1208, col_offset=37)], [], None, None, lineno=1208, col_offset=12), lineno=1208, col_offset=12)], [], lineno=1207, col_offset=13)], lineno=1205, col_offset=13)], lineno=1203, col_offset=13)], lineno=1201, col_offset=8)], [], lineno=1200, col_offset=4), FunctionDef('test_many_args', arguments([Name('self', Param(), lineno=1210, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1211, col_offset=8), 'assertParseOK', Load(), lineno=1211, col_offset=8), [List([Str('-a', lineno=1211, col_offset=28), Str('foo', lineno=1211, col_offset=34), Str('bar', lineno=1211, col_offset=41), Str('--apple', lineno=1211, col_offset=48), Str('ding', lineno=1211, col_offset=59), Str('dong', lineno=1211, col_offset=67), Str('-b', lineno=1212, col_offset=28), Str('1', lineno=1212, col_offset=34), Str('2', lineno=1212, col_offset=39), Str('3', lineno=1212, col_offset=44), Str('--bob', lineno=1212, col_offset=49), Str('-666', lineno=1212, col_offset=58), Str('42', lineno=1212, col_offset=66), Str('0', lineno=1213, col_offset=28)], Load(), lineno=1211, col_offset=27), Dict([Str('apple', lineno=1214, col_offset=28), Str('bob', lineno=1214, col_offset=43)], [Name('None', Load(), lineno=1214, col_offset=37), Name('None', Load(), lineno=1214, col_offset=50)], lineno=1214, col_offset=27), List([], Load(), lineno=1215, col_offset=27)], [], None, None, lineno=1211, col_offset=8), lineno=1211, col_offset=8)], [], lineno=1210, col_offset=4)], [], lineno=1192, col_offset=0), ClassDef('TestCallbackCheckAbbrev', [Name('BaseTest', Load(), lineno=1217, col_offset=30)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1218, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1219, col_offset=8), 'parser', Store(), lineno=1219, col_offset=8)], Call(Name('OptionParser', Load(), lineno=1219, col_offset=22), [], [], None, None, lineno=1219, col_offset=22), lineno=1219, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1220, col_offset=8), 'parser', Load(), lineno=1220, col_offset=8), 'add_option', Load(), lineno=1220, col_offset=8), [Str('--foo-bar', lineno=1220, col_offset=31)], [keyword('action', Str('callback', lineno=1220, col_offset=51)), keyword('callback', Attribute(Name('self', Load(), lineno=1221, col_offset=40), 'check_abbrev', Load(), lineno=1221, col_offset=40))], None, None, lineno=1220, col_offset=8), lineno=1220, col_offset=8)], [], lineno=1218, col_offset=4), FunctionDef('check_abbrev', arguments([Name('self', Param(), lineno=1223, col_offset=21), Name('option', Param(), lineno=1223, col_offset=27), Name('opt', Param(), lineno=1223, col_offset=35), Name('value', Param(), lineno=1223, col_offset=40), Name('parser', Param(), lineno=1223, col_offset=47)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1224, col_offset=8), 'assertEqual', Load(), lineno=1224, col_offset=8), [Name('opt', Load(), lineno=1224, col_offset=25), Str('--foo-bar', lineno=1224, col_offset=30)], [], None, None, lineno=1224, col_offset=8), lineno=1224, col_offset=8)], [], lineno=1223, col_offset=4), FunctionDef('test_abbrev_callback_expansion', arguments([Name('self', Param(), lineno=1226, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1227, col_offset=8), 'assertParseOK', Load(), lineno=1227, col_offset=8), [List([Str('--foo', lineno=1227, col_offset=28)], Load(), lineno=1227, col_offset=27), Dict([], [], lineno=1227, col_offset=38), List([], Load(), lineno=1227, col_offset=42)], [], None, None, lineno=1227, col_offset=8), lineno=1227, col_offset=8)], [], lineno=1226, col_offset=4)], [], lineno=1217, col_offset=0), ClassDef('TestCallbackVarArgs', [Name('BaseTest', Load(), lineno=1229, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1230, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1231, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1231, col_offset=19), [Str('-a', lineno=1231, col_offset=31)], [keyword('type', Str('int', lineno=1231, col_offset=42)), keyword('nargs', Num(2, lineno=1231, col_offset=55)), keyword('dest', Str('a', lineno=1231, col_offset=63))], None, None, lineno=1231, col_offset=19), Call(Name('make_option', Load(), lineno=1232, col_offset=19), [Str('-b', lineno=1232, col_offset=31)], [keyword('action', Str('store_true', lineno=1232, col_offset=44)), keyword('dest', Str('b', lineno=1232, col_offset=63))], None, None, lineno=1232, col_offset=19), Call(Name('make_option', Load(), lineno=1233, col_offset=19), [Str('-c', lineno=1233, col_offset=31), Str('--callback', lineno=1233, col_offset=37)], [keyword('action', Str('callback', lineno=1233, col_offset=58)), keyword('callback', Attribute(Name('self', Load(), lineno=1234, col_offset=40), 'variable_args', Load(), lineno=1234, col_offset=40)), keyword('dest', Str('c', lineno=1234, col_offset=65))], None, None, lineno=1233, col_offset=19)], Load(), lineno=1231, col_offset=18), lineno=1231, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1235, col_offset=8), 'parser', Store(), lineno=1235, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1235, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1235, col_offset=53)), keyword('option_list', Name('options', Load(), lineno=1236, col_offset=59))], None, None, lineno=1235, col_offset=22), lineno=1235, col_offset=8)], [], lineno=1230, col_offset=4), FunctionDef('variable_args', arguments([Name('self', Param(), lineno=1238, col_offset=22), Name('option', Param(), lineno=1238, col_offset=28), Name('opt', Param(), lineno=1238, col_offset=36), Name('value', Param(), lineno=1238, col_offset=41), Name('parser', Param(), lineno=1238, col_offset=48)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1239, col_offset=8), 'assertTrue', Load(), lineno=1239, col_offset=8), [Compare(Name('value', Load(), lineno=1239, col_offset=24), [Is()], [Name('None', Load(), lineno=1239, col_offset=33)], lineno=1239, col_offset=24)], [], None, None, lineno=1239, col_offset=8), lineno=1239, col_offset=8), Assign([Name('value', Store(), lineno=1240, col_offset=8)], List([], Load(), lineno=1240, col_offset=16), lineno=1240, col_offset=8), Assign([Name('rargs', Store(), lineno=1241, col_offset=8)], Attribute(Name('parser', Load(), lineno=1241, col_offset=16), 'rargs', Load(), lineno=1241, col_offset=16), lineno=1241, col_offset=8), While(Name('rargs', Load(), lineno=1242, col_offset=14), [Assign([Name('arg', Store(), lineno=1243, col_offset=12)], Subscript(Name('rargs', Load(), lineno=1243, col_offset=18), Index(Num(0, lineno=1243, col_offset=24)), Load(), lineno=1243, col_offset=18), lineno=1243, col_offset=12), If(BoolOp(Or(), [BoolOp(And(), [Compare(Subscript(Name('arg', Load(), lineno=1244, col_offset=17), Slice(None, Num(2, lineno=1244, col_offset=22), None), Load(), lineno=1244, col_offset=17), [Eq()], [Str('--', lineno=1244, col_offset=28)], lineno=1244, col_offset=17), Compare(Call(Name('len', Load(), lineno=1244, col_offset=37), [Name('arg', Load(), lineno=1244, col_offset=41)], [], None, None, lineno=1244, col_offset=37), [Gt()], [Num(2, lineno=1244, col_offset=48)], lineno=1244, col_offset=37)], lineno=1244, col_offset=17), BoolOp(And(), [Compare(Subscript(Name('arg', Load(), lineno=1245, col_offset=17), Slice(None, Num(1, lineno=1245, col_offset=22), None), Load(), lineno=1245, col_offset=17), [Eq()], [Str('-', lineno=1245, col_offset=28)], lineno=1245, col_offset=17), Compare(Call(Name('len', Load(), lineno=1245, col_offset=36), [Name('arg', Load(), lineno=1245, col_offset=40)], [], None, None, lineno=1245, col_offset=36), [Gt()], [Num(1, lineno=1245, col_offset=47)], lineno=1245, col_offset=36), Compare(Subscript(Name('arg', Load(), lineno=1245, col_offset=53), Index(Num(1, lineno=1245, col_offset=57)), Load(), lineno=1245, col_offset=53), [NotEq()], [Str('-', lineno=1245, col_offset=63)], lineno=1245, col_offset=53)], lineno=1245, col_offset=17)], lineno=1244, col_offset=16), [Break( lineno=1246, col_offset=16)], [Expr(Call(Attribute(Name('value', Load(), lineno=1248, col_offset=16), 'append', Load(), lineno=1248, col_offset=16), [Name('arg', Load(), lineno=1248, col_offset=29)], [], None, None, lineno=1248, col_offset=16), lineno=1248, col_offset=16), Delete([Subscript(Name('rargs', Load(), lineno=1249, col_offset=20), Index(Num(0, lineno=1249, col_offset=26)), Del(), lineno=1249, col_offset=20)], lineno=1249, col_offset=16)], lineno=1244, col_offset=12)], [], lineno=1242, col_offset=8), Expr(Call(Name('setattr', Load(), lineno=1250, col_offset=8), [Attribute(Name('parser', Load(), lineno=1250, col_offset=16), 'values', Load(), lineno=1250, col_offset=16), Attribute(Name('option', Load(), lineno=1250, col_offset=31), 'dest', Load(), lineno=1250, col_offset=31), Name('value', Load(), lineno=1250, col_offset=44)], [], None, None, lineno=1250, col_offset=8), lineno=1250, col_offset=8)], [], lineno=1238, col_offset=4), FunctionDef('test_variable_args', arguments([Name('self', Param(), lineno=1252, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1253, col_offset=8), 'assertParseOK', Load(), lineno=1253, col_offset=8), [List([Str('-a3', lineno=1253, col_offset=28), Str('-5', lineno=1253, col_offset=35), Str('--callback', lineno=1253, col_offset=41), Str('foo', lineno=1253, col_offset=55), Str('bar', lineno=1253, col_offset=62)], Load(), lineno=1253, col_offset=27), Dict([Str('a', lineno=1254, col_offset=28), Str('b', lineno=1254, col_offset=42), Str('c', lineno=1254, col_offset=53)], [Tuple([Num(3, lineno=1254, col_offset=34), Num(-5, lineno=1254, col_offset=38)], Load(), lineno=1254, col_offset=34), Name('None', Load(), lineno=1254, col_offset=47), List([Str('foo', lineno=1254, col_offset=59), Str('bar', lineno=1254, col_offset=66)], Load(), lineno=1254, col_offset=58)], lineno=1254, col_offset=27), List([], Load(), lineno=1255, col_offset=27)], [], None, None, lineno=1253, col_offset=8), lineno=1253, col_offset=8)], [], lineno=1252, col_offset=4), FunctionDef('test_consume_separator_stop_at_option', arguments([Name('self', Param(), lineno=1257, col_offset=46)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1258, col_offset=8), 'assertParseOK', Load(), lineno=1258, col_offset=8), [List([Str('-c', lineno=1258, col_offset=28), Str('37', lineno=1258, col_offset=34), Str('--', lineno=1258, col_offset=40), Str('xxx', lineno=1258, col_offset=46), Str('-b', lineno=1258, col_offset=53), Str('hello', lineno=1258, col_offset=59)], Load(), lineno=1258, col_offset=27), Dict([Str('a', lineno=1259, col_offset=28), Str('b', lineno=1260, col_offset=28), Str('c', lineno=1261, col_offset=28)], [Name('None', Load(), lineno=1259, col_offset=33), Name('True', Load(), lineno=1260, col_offset=33), List([Str('37', lineno=1261, col_offset=34), Str('--', lineno=1261, col_offset=40), Str('xxx', lineno=1261, col_offset=46)], Load(), lineno=1261, col_offset=33)], lineno=1259, col_offset=27), List([Str('hello', lineno=1262, col_offset=28)], Load(), lineno=1262, col_offset=27)], [], None, None, lineno=1258, col_offset=8), lineno=1258, col_offset=8)], [], lineno=1257, col_offset=4), FunctionDef('test_positional_arg_and_variable_args', arguments([Name('self', Param(), lineno=1264, col_offset=46)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1265, col_offset=8), 'assertParseOK', Load(), lineno=1265, col_offset=8), [List([Str('hello', lineno=1265, col_offset=28), Str('-c', lineno=1265, col_offset=37), Str('foo', lineno=1265, col_offset=43), Str('-', lineno=1265, col_offset=50), Str('bar', lineno=1265, col_offset=55)], Load(), lineno=1265, col_offset=27), Dict([Str('a', lineno=1266, col_offset=28), Str('b', lineno=1267, col_offset=28), Str('c', lineno=1268, col_offset=28)], [Name('None', Load(), lineno=1266, col_offset=33), Name('None', Load(), lineno=1267, col_offset=33), List([Str('foo', lineno=1268, col_offset=33), Str('-', lineno=1268, col_offset=40), Str('bar', lineno=1268, col_offset=45)], Load(), lineno=1268, col_offset=32)], lineno=1266, col_offset=27), List([Str('hello', lineno=1269, col_offset=28)], Load(), lineno=1269, col_offset=27)], [], None, None, lineno=1265, col_offset=8), lineno=1265, col_offset=8)], [], lineno=1264, col_offset=4), FunctionDef('test_stop_at_option', arguments([Name('self', Param(), lineno=1271, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1272, col_offset=8), 'assertParseOK', Load(), lineno=1272, col_offset=8), [List([Str('-c', lineno=1272, col_offset=28), Str('foo', lineno=1272, col_offset=34), Str('-b', lineno=1272, col_offset=41)], Load(), lineno=1272, col_offset=27), Dict([Str('a', lineno=1273, col_offset=28), Str('b', lineno=1273, col_offset=39), Str('c', lineno=1273, col_offset=50)], [Name('None', Load(), lineno=1273, col_offset=33), Name('True', Load(), lineno=1273, col_offset=44), List([Str('foo', lineno=1273, col_offset=56)], Load(), lineno=1273, col_offset=55)], lineno=1273, col_offset=27), List([], Load(), lineno=1274, col_offset=27)], [], None, None, lineno=1272, col_offset=8), lineno=1272, col_offset=8)], [], lineno=1271, col_offset=4), FunctionDef('test_stop_at_invalid_option', arguments([Name('self', Param(), lineno=1276, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1277, col_offset=8), 'assertParseFail', Load(), lineno=1277, col_offset=8), [List([Str('-c', lineno=1277, col_offset=30), Str('3', lineno=1277, col_offset=36), Str('-5', lineno=1277, col_offset=41), Str('-a', lineno=1277, col_offset=47)], Load(), lineno=1277, col_offset=29), Str('no such option: -5', lineno=1277, col_offset=54)], [], None, None, lineno=1277, col_offset=8), lineno=1277, col_offset=8)], [], lineno=1276, col_offset=4)], [], lineno=1229, col_offset=0), ClassDef('ConflictBase', [Name('BaseTest', Load(), lineno=1282, col_offset=19)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1283, col_offset=14)], None, None, []), [Assign([Name('options', Store(), lineno=1284, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1284, col_offset=19), [Str('-v', lineno=1284, col_offset=31), Str('--verbose', lineno=1284, col_offset=37)], [keyword('action', Str('count', lineno=1284, col_offset=57)), keyword('dest', Str('verbose', lineno=1285, col_offset=36)), keyword('help', Str('increment verbosity', lineno=1285, col_offset=52))], None, None, lineno=1284, col_offset=19)], Load(), lineno=1284, col_offset=18), lineno=1284, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=1286, col_offset=8), 'parser', Store(), lineno=1286, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1286, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1286, col_offset=53)), keyword('option_list', Name('options', Load(), lineno=1287, col_offset=59))], None, None, lineno=1286, col_offset=22), lineno=1286, col_offset=8)], [], lineno=1283, col_offset=4), FunctionDef('show_version', arguments([Name('self', Param(), lineno=1289, col_offset=21), Name('option', Param(), lineno=1289, col_offset=27), Name('opt', Param(), lineno=1289, col_offset=35), Name('value', Param(), lineno=1289, col_offset=40), Name('parser', Param(), lineno=1289, col_offset=47)], None, None, []), [Assign([Attribute(Attribute(Name('parser', Load(), lineno=1290, col_offset=8), 'values', Load(), lineno=1290, col_offset=8), 'show_version', Store(), lineno=1290, col_offset=8)], Num(1, lineno=1290, col_offset=37), lineno=1290, col_offset=8)], [], lineno=1289, col_offset=4)], [], lineno=1282, col_offset=0), ClassDef('TestConflict', [Name('ConflictBase', Load(), lineno=1292, col_offset=19)], [Expr(Str('Use the default conflict resolution for Optik 1.2: error.', lineno=1293, col_offset=4), lineno=1293, col_offset=4), FunctionDef('assertTrueconflict_error', arguments([Name('self', Param(), lineno=1294, col_offset=33), Name('func', Param(), lineno=1294, col_offset=39)], None, None, []), [Assign([Name('err', Store(), lineno=1295, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1295, col_offset=14), 'assertRaises', Load(), lineno=1295, col_offset=14), [Name('func', Load(), lineno=1296, col_offset=12), Tuple([Str('-v', lineno=1296, col_offset=19), Str('--version', lineno=1296, col_offset=25)], Load(), lineno=1296, col_offset=19), Dict([Str('action', lineno=1296, col_offset=40), Str('callback', lineno=1297, col_offset=40), Str('help', lineno=1298, col_offset=40)], [Str('callback', lineno=1296, col_offset=51), Attribute(Name('self', Load(), lineno=1297, col_offset=53), 'show_version', Load(), lineno=1297, col_offset=53), Str('show version', lineno=1298, col_offset=49)], lineno=1296, col_offset=39), Name('OptionConflictError', Load(), lineno=1299, col_offset=12), Str('option -v/--version: conflicting option string(s): -v', lineno=1300, col_offset=12)], [], None, None, lineno=1295, col_offset=14), lineno=1295, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1302, col_offset=8), 'assertEqual', Load(), lineno=1302, col_offset=8), [Attribute(Name('err', Load(), lineno=1302, col_offset=25), 'msg', Load(), lineno=1302, col_offset=25), Str('conflicting option string(s): -v', lineno=1302, col_offset=34)], [], None, None, lineno=1302, col_offset=8), lineno=1302, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1303, col_offset=8), 'assertEqual', Load(), lineno=1303, col_offset=8), [Attribute(Name('err', Load(), lineno=1303, col_offset=25), 'option_id', Load(), lineno=1303, col_offset=25), Str('-v/--version', lineno=1303, col_offset=40)], [], None, None, lineno=1303, col_offset=8), lineno=1303, col_offset=8)], [], lineno=1294, col_offset=4), FunctionDef('test_conflict_error', arguments([Name('self', Param(), lineno=1305, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1306, col_offset=8), 'assertTrueconflict_error', Load(), lineno=1306, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1306, col_offset=38), 'parser', Load(), lineno=1306, col_offset=38), 'add_option', Load(), lineno=1306, col_offset=38)], [], None, None, lineno=1306, col_offset=8), lineno=1306, col_offset=8)], [], lineno=1305, col_offset=4), FunctionDef('test_conflict_error_group', arguments([Name('self', Param(), lineno=1308, col_offset=34)], None, None, []), [Assign([Name('group', Store(), lineno=1309, col_offset=8)], Call(Name('OptionGroup', Load(), lineno=1309, col_offset=16), [Attribute(Name('self', Load(), lineno=1309, col_offset=28), 'parser', Load(), lineno=1309, col_offset=28), Str('Group 1', lineno=1309, col_offset=41)], [], None, None, lineno=1309, col_offset=16), lineno=1309, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1310, col_offset=8), 'assertTrueconflict_error', Load(), lineno=1310, col_offset=8), [Attribute(Name('group', Load(), lineno=1310, col_offset=38), 'add_option', Load(), lineno=1310, col_offset=38)], [], None, None, lineno=1310, col_offset=8), lineno=1310, col_offset=8)], [], lineno=1308, col_offset=4), FunctionDef('test_no_such_conflict_handler', arguments([Name('self', Param(), lineno=1312, col_offset=38)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1313, col_offset=8), 'assertRaises', Load(), lineno=1313, col_offset=8), [Attribute(Attribute(Name('self', Load(), lineno=1314, col_offset=12), 'parser', Load(), lineno=1314, col_offset=12), 'set_conflict_handler', Load(), lineno=1314, col_offset=12), Tuple([Str('foo', lineno=1314, col_offset=47)], Load(), lineno=1314, col_offset=47), Name('None', Load(), lineno=1314, col_offset=56), Name('ValueError', Load(), lineno=1315, col_offset=12), Str("invalid conflict_resolution value 'foo'", lineno=1315, col_offset=24)], [], None, None, lineno=1313, col_offset=8), lineno=1313, col_offset=8)], [], lineno=1312, col_offset=4)], [], lineno=1292, col_offset=0), ClassDef('TestConflictResolve', [Name('ConflictBase', Load(), lineno=1318, col_offset=26)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1319, col_offset=14)], None, None, []), [Expr(Call(Attribute(Name('ConflictBase', Load(), lineno=1320, col_offset=8), 'setUp', Load(), lineno=1320, col_offset=8), [Name('self', Load(), lineno=1320, col_offset=27)], [], None, None, lineno=1320, col_offset=8), lineno=1320, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1321, col_offset=8), 'parser', Load(), lineno=1321, col_offset=8), 'set_conflict_handler', Load(), lineno=1321, col_offset=8), [Str('resolve', lineno=1321, col_offset=41)], [], None, None, lineno=1321, col_offset=8), lineno=1321, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1322, col_offset=8), 'parser', Load(), lineno=1322, col_offset=8), 'add_option', Load(), lineno=1322, col_offset=8), [Str('-v', lineno=1322, col_offset=31), Str('--version', lineno=1322, col_offset=37)], [keyword('action', Str('callback', lineno=1322, col_offset=57)), keyword('callback', Attribute(Name('self', Load(), lineno=1323, col_offset=40), 'show_version', Load(), lineno=1323, col_offset=40)), keyword('help', Str('show version', lineno=1323, col_offset=64))], None, None, lineno=1322, col_offset=8), lineno=1322, col_offset=8)], [], lineno=1319, col_offset=4), FunctionDef('test_conflict_resolve', arguments([Name('self', Param(), lineno=1325, col_offset=30)], None, None, []), [Assign([Name('v_opt', Store(), lineno=1326, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1326, col_offset=16), 'parser', Load(), lineno=1326, col_offset=16), 'get_option', Load(), lineno=1326, col_offset=16), [Str('-v', lineno=1326, col_offset=39)], [], None, None, lineno=1326, col_offset=16), lineno=1326, col_offset=8), Assign([Name('verbose_opt', Store(), lineno=1327, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1327, col_offset=22), 'parser', Load(), lineno=1327, col_offset=22), 'get_option', Load(), lineno=1327, col_offset=22), [Str('--verbose', lineno=1327, col_offset=45)], [], None, None, lineno=1327, col_offset=22), lineno=1327, col_offset=8), Assign([Name('version_opt', Store(), lineno=1328, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1328, col_offset=22), 'parser', Load(), lineno=1328, col_offset=22), 'get_option', Load(), lineno=1328, col_offset=22), [Str('--version', lineno=1328, col_offset=45)], [], None, None, lineno=1328, col_offset=22), lineno=1328, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1330, col_offset=8), 'assertTrue', Load(), lineno=1330, col_offset=8), [Compare(Name('v_opt', Load(), lineno=1330, col_offset=24), [Is()], [Name('version_opt', Load(), lineno=1330, col_offset=33)], lineno=1330, col_offset=24)], [], None, None, lineno=1330, col_offset=8), lineno=1330, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1331, col_offset=8), 'assertTrue', Load(), lineno=1331, col_offset=8), [Compare(Name('v_opt', Load(), lineno=1331, col_offset=24), [IsNot()], [Name('verbose_opt', Load(), lineno=1331, col_offset=37)], lineno=1331, col_offset=24)], [], None, None, lineno=1331, col_offset=8), lineno=1331, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1332, col_offset=8), 'assertEqual', Load(), lineno=1332, col_offset=8), [Attribute(Name('v_opt', Load(), lineno=1332, col_offset=25), '_long_opts', Load(), lineno=1332, col_offset=25), List([Str('--version', lineno=1332, col_offset=44)], Load(), lineno=1332, col_offset=43)], [], None, None, lineno=1332, col_offset=8), lineno=1332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1333, col_offset=8), 'assertEqual', Load(), lineno=1333, col_offset=8), [Attribute(Name('version_opt', Load(), lineno=1333, col_offset=25), '_short_opts', Load(), lineno=1333, col_offset=25), List([Str('-v', lineno=1333, col_offset=51)], Load(), lineno=1333, col_offset=50)], [], None, None, lineno=1333, col_offset=8), lineno=1333, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1334, col_offset=8), 'assertEqual', Load(), lineno=1334, col_offset=8), [Attribute(Name('version_opt', Load(), lineno=1334, col_offset=25), '_long_opts', Load(), lineno=1334, col_offset=25), List([Str('--version', lineno=1334, col_offset=50)], Load(), lineno=1334, col_offset=49)], [], None, None, lineno=1334, col_offset=8), lineno=1334, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1335, col_offset=8), 'assertEqual', Load(), lineno=1335, col_offset=8), [Attribute(Name('verbose_opt', Load(), lineno=1335, col_offset=25), '_short_opts', Load(), lineno=1335, col_offset=25), List([], Load(), lineno=1335, col_offset=50)], [], None, None, lineno=1335, col_offset=8), lineno=1335, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1336, col_offset=8), 'assertEqual', Load(), lineno=1336, col_offset=8), [Attribute(Name('verbose_opt', Load(), lineno=1336, col_offset=25), '_long_opts', Load(), lineno=1336, col_offset=25), List([Str('--verbose', lineno=1336, col_offset=50)], Load(), lineno=1336, col_offset=49)], [], None, None, lineno=1336, col_offset=8), lineno=1336, col_offset=8)], [], lineno=1325, col_offset=4), FunctionDef('test_conflict_resolve_help', arguments([Name('self', Param(), lineno=1338, col_offset=35)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1339, col_offset=8), 'assertOutput', Load(), lineno=1339, col_offset=8), [List([Str('-h', lineno=1339, col_offset=27)], Load(), lineno=1339, col_offset=26), Str('Options:\n  --verbose      increment verbosity\n  -h, --help     show this help message and exit\n  -v, --version  show version\n', lineno=1344, col_offset=-1)], [], None, None, lineno=1339, col_offset=8), lineno=1339, col_offset=8)], [], lineno=1338, col_offset=4), FunctionDef('test_conflict_resolve_short_opt', arguments([Name('self', Param(), lineno=1346, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1347, col_offset=8), 'assertParseOK', Load(), lineno=1347, col_offset=8), [List([Str('-v', lineno=1347, col_offset=28)], Load(), lineno=1347, col_offset=27), Dict([Str('verbose', lineno=1348, col_offset=28), Str('show_version', lineno=1348, col_offset=45)], [Name('None', Load(), lineno=1348, col_offset=39), Num(1, lineno=1348, col_offset=61)], lineno=1348, col_offset=27), List([], Load(), lineno=1349, col_offset=27)], [], None, None, lineno=1347, col_offset=8), lineno=1347, col_offset=8)], [], lineno=1346, col_offset=4), FunctionDef('test_conflict_resolve_long_opt', arguments([Name('self', Param(), lineno=1351, col_offset=39)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1352, col_offset=8), 'assertParseOK', Load(), lineno=1352, col_offset=8), [List([Str('--verbose', lineno=1352, col_offset=28)], Load(), lineno=1352, col_offset=27), Dict([Str('verbose', lineno=1353, col_offset=28)], [Num(1, lineno=1353, col_offset=39)], lineno=1353, col_offset=27), List([], Load(), lineno=1354, col_offset=27)], [], None, None, lineno=1352, col_offset=8), lineno=1352, col_offset=8)], [], lineno=1351, col_offset=4), FunctionDef('test_conflict_resolve_long_opts', arguments([Name('self', Param(), lineno=1356, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1357, col_offset=8), 'assertParseOK', Load(), lineno=1357, col_offset=8), [List([Str('--verbose', lineno=1357, col_offset=28), Str('--version', lineno=1357, col_offset=41)], Load(), lineno=1357, col_offset=27), Dict([Str('verbose', lineno=1358, col_offset=28), Str('show_version', lineno=1358, col_offset=42)], [Num(1, lineno=1358, col_offset=39), Num(1, lineno=1358, col_offset=58)], lineno=1358, col_offset=27), List([], Load(), lineno=1359, col_offset=27)], [], None, None, lineno=1357, col_offset=8), lineno=1357, col_offset=8)], [], lineno=1356, col_offset=4)], [], lineno=1318, col_offset=0), ClassDef('TestConflictOverride', [Name('BaseTest', Load(), lineno=1361, col_offset=27)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1362, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1363, col_offset=8), 'parser', Store(), lineno=1363, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1363, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1363, col_offset=53))], None, None, lineno=1363, col_offset=22), lineno=1363, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1364, col_offset=8), 'parser', Load(), lineno=1364, col_offset=8), 'set_conflict_handler', Load(), lineno=1364, col_offset=8), [Str('resolve', lineno=1364, col_offset=41)], [], None, None, lineno=1364, col_offset=8), lineno=1364, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1365, col_offset=8), 'parser', Load(), lineno=1365, col_offset=8), 'add_option', Load(), lineno=1365, col_offset=8), [Str('-n', lineno=1365, col_offset=31), Str('--dry-run', lineno=1365, col_offset=37)], [keyword('action', Str('store_true', lineno=1366, col_offset=38)), keyword('dest', Str('dry_run', lineno=1366, col_offset=57)), keyword('help', Str("don't do anything", lineno=1367, col_offset=36))], None, None, lineno=1365, col_offset=8), lineno=1365, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1368, col_offset=8), 'parser', Load(), lineno=1368, col_offset=8), 'add_option', Load(), lineno=1368, col_offset=8), [Str('--dry-run', lineno=1368, col_offset=31), Str('-n', lineno=1368, col_offset=44)], [keyword('action', Str('store_const', lineno=1369, col_offset=38)), keyword('const', Num(42, lineno=1369, col_offset=59)), keyword('dest', Str('dry_run', lineno=1369, col_offset=68)), keyword('help', Str('dry run mode', lineno=1370, col_offset=36))], None, None, lineno=1368, col_offset=8), lineno=1368, col_offset=8)], [], lineno=1362, col_offset=4), FunctionDef('test_conflict_override_opts', arguments([Name('self', Param(), lineno=1372, col_offset=36)], None, None, []), [Assign([Name('opt', Store(), lineno=1373, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=1373, col_offset=14), 'parser', Load(), lineno=1373, col_offset=14), 'get_option', Load(), lineno=1373, col_offset=14), [Str('--dry-run', lineno=1373, col_offset=37)], [], None, None, lineno=1373, col_offset=14), lineno=1373, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1374, col_offset=8), 'assertEqual', Load(), lineno=1374, col_offset=8), [Attribute(Name('opt', Load(), lineno=1374, col_offset=25), '_short_opts', Load(), lineno=1374, col_offset=25), List([Str('-n', lineno=1374, col_offset=43)], Load(), lineno=1374, col_offset=42)], [], None, None, lineno=1374, col_offset=8), lineno=1374, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1375, col_offset=8), 'assertEqual', Load(), lineno=1375, col_offset=8), [Attribute(Name('opt', Load(), lineno=1375, col_offset=25), '_long_opts', Load(), lineno=1375, col_offset=25), List([Str('--dry-run', lineno=1375, col_offset=42)], Load(), lineno=1375, col_offset=41)], [], None, None, lineno=1375, col_offset=8), lineno=1375, col_offset=8)], [], lineno=1372, col_offset=4), FunctionDef('test_conflict_override_help', arguments([Name('self', Param(), lineno=1377, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1378, col_offset=8), 'assertOutput', Load(), lineno=1378, col_offset=8), [List([Str('-h', lineno=1378, col_offset=27)], Load(), lineno=1378, col_offset=26), Str('Options:\n  -h, --help     show this help message and exit\n  -n, --dry-run  dry run mode\n', lineno=1382, col_offset=-1)], [], None, None, lineno=1378, col_offset=8), lineno=1378, col_offset=8)], [], lineno=1377, col_offset=4), FunctionDef('test_conflict_override_args', arguments([Name('self', Param(), lineno=1384, col_offset=36)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1385, col_offset=8), 'assertParseOK', Load(), lineno=1385, col_offset=8), [List([Str('-n', lineno=1385, col_offset=28)], Load(), lineno=1385, col_offset=27), Dict([Str('dry_run', lineno=1386, col_offset=28)], [Num(42, lineno=1386, col_offset=39)], lineno=1386, col_offset=27), List([], Load(), lineno=1387, col_offset=27)], [], None, None, lineno=1385, col_offset=8), lineno=1385, col_offset=8)], [], lineno=1384, col_offset=4)], [], lineno=1361, col_offset=0), Assign([Name('_expected_help_basic', Store(), lineno=1391, col_offset=0)], Str('Usage: bar.py [options]\n\nOptions:\n  -a APPLE           throw APPLEs at basket\n  -b NUM, --boo=NUM  shout "boo!" NUM times (in order to frighten away all the\n                     evil spirits that cause trouble and mayhem)\n  --foo=FOO          store FOO in the foo list for later fooing\n  -h, --help         show this help message and exit\n', lineno=1400, col_offset=-1), lineno=1391, col_offset=0), Assign([Name('_expected_help_long_opts_first', Store(), lineno=1402, col_offset=0)], Str('Usage: bar.py [options]\n\nOptions:\n  -a APPLE           throw APPLEs at basket\n  --boo=NUM, -b NUM  shout "boo!" NUM times (in order to frighten away all the\n                     evil spirits that cause trouble and mayhem)\n  --foo=FOO          store FOO in the foo list for later fooing\n  --help, -h         show this help message and exit\n', lineno=1411, col_offset=-1), lineno=1402, col_offset=0), Assign([Name('_expected_help_title_formatter', Store(), lineno=1413, col_offset=0)], Str('Usage\n=====\n  bar.py [options]\n\nOptions\n=======\n-a APPLE           throw APPLEs at basket\n--boo=NUM, -b NUM  shout "boo!" NUM times (in order to frighten away all the\n                   evil spirits that cause trouble and mayhem)\n--foo=FOO          store FOO in the foo list for later fooing\n--help, -h         show this help message and exit\n', lineno=1425, col_offset=-1), lineno=1413, col_offset=0), Assign([Name('_expected_help_short_lines', Store(), lineno=1427, col_offset=0)], Str('Usage: bar.py [options]\n\nOptions:\n  -a APPLE           throw APPLEs at basket\n  -b NUM, --boo=NUM  shout "boo!" NUM times (in order to\n                     frighten away all the evil spirits\n                     that cause trouble and mayhem)\n  --foo=FOO          store FOO in the foo list for later\n                     fooing\n  -h, --help         show this help message and exit\n', lineno=1438, col_offset=-1), lineno=1427, col_offset=0), ClassDef('TestHelp', [Name('BaseTest', Load(), lineno=1440, col_offset=15)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1441, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1442, col_offset=8), 'parser', Store(), lineno=1442, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1442, col_offset=22), 'make_parser', Load(), lineno=1442, col_offset=22), [Num(80, lineno=1442, col_offset=39)], [], None, None, lineno=1442, col_offset=22), lineno=1442, col_offset=8)], [], lineno=1441, col_offset=4), FunctionDef('make_parser', arguments([Name('self', Param(), lineno=1444, col_offset=20), Name('columns', Param(), lineno=1444, col_offset=26)], None, None, []), [Assign([Name('options', Store(), lineno=1445, col_offset=8)], List([Call(Name('make_option', Load(), lineno=1446, col_offset=12), [Str('-a', lineno=1446, col_offset=24)], [keyword('type', Str('string', lineno=1446, col_offset=35)), keyword('dest', Str('a', lineno=1446, col_offset=50)), keyword('metavar', Str('APPLE', lineno=1447, col_offset=32)), keyword('help', Str('throw APPLEs at basket', lineno=1447, col_offset=46))], None, None, lineno=1446, col_offset=12), Call(Name('make_option', Load(), lineno=1448, col_offset=12), [Str('-b', lineno=1448, col_offset=24), Str('--boo', lineno=1448, col_offset=30)], [keyword('type', Str('int', lineno=1448, col_offset=44)), keyword('dest', Str('boo', lineno=1448, col_offset=56)), keyword('metavar', Str('NUM', lineno=1449, col_offset=32)), keyword('help', Str('shout "boo!" NUM times (in order to frighten away all the evil spirits that cause trouble and mayhem)', lineno=1451, col_offset=24))], None, None, lineno=1448, col_offset=12), Call(Name('make_option', Load(), lineno=1453, col_offset=12), [Str('--foo', lineno=1453, col_offset=24)], [keyword('action', Str('append', lineno=1453, col_offset=40)), keyword('type', Str('string', lineno=1453, col_offset=55)), keyword('dest', Str('foo', lineno=1453, col_offset=70)), keyword('help', Str('store FOO in the foo list for later fooing', lineno=1454, col_offset=29))], None, None, lineno=1453, col_offset=12)], Load(), lineno=1445, col_offset=18), lineno=1445, col_offset=8), With(Call(Attribute(Name('test_support', Load(), lineno=1461, col_offset=13), 'EnvironmentVarGuard', Load(), lineno=1461, col_offset=13), [], [], None, None, lineno=1461, col_offset=13), Name('env', Store(), lineno=1461, col_offset=51), [Assign([Subscript(Name('env', Load(), lineno=1462, col_offset=12), Index(Str('COLUMNS', lineno=1462, col_offset=16)), Store(), lineno=1462, col_offset=12)], Call(Name('str', Load(), lineno=1462, col_offset=29), [Name('columns', Load(), lineno=1462, col_offset=33)], [], None, None, lineno=1462, col_offset=29), lineno=1462, col_offset=12), Return(Call(Name('InterceptingOptionParser', Load(), lineno=1463, col_offset=19), [], [keyword('option_list', Name('options', Load(), lineno=1463, col_offset=56))], None, None, lineno=1463, col_offset=19), lineno=1463, col_offset=12)], lineno=1461, col_offset=13)], [], lineno=1444, col_offset=4), FunctionDef('assertHelpEquals', arguments([Name('self', Param(), lineno=1465, col_offset=25), Name('expected_output', Param(), lineno=1465, col_offset=31)], None, None, []), [If(Compare(Call(Name('type', Load(), lineno=1466, col_offset=11), [Name('expected_output', Load(), lineno=1466, col_offset=16)], [], None, None, lineno=1466, col_offset=11), [Is()], [Attribute(Name('types', Load(), lineno=1466, col_offset=36), 'UnicodeType', Load(), lineno=1466, col_offset=36)], lineno=1466, col_offset=11), [Assign([Name('encoding', Store(), lineno=1467, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=1467, col_offset=23), 'parser', Load(), lineno=1467, col_offset=23), '_get_encoding', Load(), lineno=1467, col_offset=23), [Attribute(Name('sys', Load(), lineno=1467, col_offset=49), 'stdout', Load(), lineno=1467, col_offset=49)], [], None, None, lineno=1467, col_offset=23), lineno=1467, col_offset=12), Assign([Name('expected_output', Store(), lineno=1468, col_offset=12)], Call(Attribute(Name('expected_output', Load(), lineno=1468, col_offset=30), 'encode', Load(), lineno=1468, col_offset=30), [Name('encoding', Load(), lineno=1468, col_offset=53), Str('replace', lineno=1468, col_offset=63)], [], None, None, lineno=1468, col_offset=30), lineno=1468, col_offset=12)], [], lineno=1466, col_offset=8), Assign([Name('save_argv', Store(), lineno=1470, col_offset=8)], Subscript(Attribute(Name('sys', Load(), lineno=1470, col_offset=20), 'argv', Load(), lineno=1470, col_offset=20), Slice(None, None, None), Load(), lineno=1470, col_offset=20), lineno=1470, col_offset=8), TryFinally([Assign([Subscript(Attribute(Name('sys', Load(), lineno=1473, col_offset=12), 'argv', Load(), lineno=1473, col_offset=12), Index(Num(0, lineno=1473, col_offset=21)), Store(), lineno=1473, col_offset=12)], Call(Attribute(Attribute(Name('os', Load(), lineno=1473, col_offset=26), 'path', Load(), lineno=1473, col_offset=26), 'join', Load(), lineno=1473, col_offset=26), [Str('foo', lineno=1473, col_offset=39), Str('bar.py', lineno=1473, col_offset=46)], [], None, None, lineno=1473, col_offset=26), lineno=1473, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1474, col_offset=12), 'assertOutput', Load(), lineno=1474, col_offset=12), [List([Str('-h', lineno=1474, col_offset=31)], Load(), lineno=1474, col_offset=30), Name('expected_output', Load(), lineno=1474, col_offset=38)], [], None, None, lineno=1474, col_offset=12), lineno=1474, col_offset=12)], [Assign([Subscript(Attribute(Name('sys', Load(), lineno=1476, col_offset=12), 'argv', Load(), lineno=1476, col_offset=12), Slice(None, None, None), Store(), lineno=1476, col_offset=12)], Name('save_argv', Load(), lineno=1476, col_offset=26), lineno=1476, col_offset=12)], lineno=1471, col_offset=8)], [], lineno=1465, col_offset=4), FunctionDef('test_help', arguments([Name('self', Param(), lineno=1478, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1479, col_offset=8), 'assertHelpEquals', Load(), lineno=1479, col_offset=8), [Name('_expected_help_basic', Load(), lineno=1479, col_offset=30)], [], None, None, lineno=1479, col_offset=8), lineno=1479, col_offset=8)], [], lineno=1478, col_offset=4), FunctionDef('test_help_old_usage', arguments([Name('self', Param(), lineno=1481, col_offset=28)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1482, col_offset=8), 'parser', Load(), lineno=1482, col_offset=8), 'set_usage', Load(), lineno=1482, col_offset=8), [Str('Usage: %prog [options]', lineno=1482, col_offset=30)], [], None, None, lineno=1482, col_offset=8), lineno=1482, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1483, col_offset=8), 'assertHelpEquals', Load(), lineno=1483, col_offset=8), [Name('_expected_help_basic', Load(), lineno=1483, col_offset=30)], [], None, None, lineno=1483, col_offset=8), lineno=1483, col_offset=8)], [], lineno=1481, col_offset=4), FunctionDef('test_help_long_opts_first', arguments([Name('self', Param(), lineno=1485, col_offset=34)], None, None, []), [Assign([Attribute(Attribute(Attribute(Name('self', Load(), lineno=1486, col_offset=8), 'parser', Load(), lineno=1486, col_offset=8), 'formatter', Load(), lineno=1486, col_offset=8), 'short_first', Store(), lineno=1486, col_offset=8)], Num(0, lineno=1486, col_offset=44), lineno=1486, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1487, col_offset=8), 'assertHelpEquals', Load(), lineno=1487, col_offset=8), [Name('_expected_help_long_opts_first', Load(), lineno=1487, col_offset=30)], [], None, None, lineno=1487, col_offset=8), lineno=1487, col_offset=8)], [], lineno=1485, col_offset=4), FunctionDef('test_help_title_formatter', arguments([Name('self', Param(), lineno=1489, col_offset=34)], None, None, []), [With(Call(Attribute(Name('test_support', Load(), lineno=1490, col_offset=13), 'EnvironmentVarGuard', Load(), lineno=1490, col_offset=13), [], [], None, None, lineno=1490, col_offset=13), Name('env', Store(), lineno=1490, col_offset=51), [Assign([Subscript(Name('env', Load(), lineno=1491, col_offset=12), Index(Str('COLUMNS', lineno=1491, col_offset=16)), Store(), lineno=1491, col_offset=12)], Str('80', lineno=1491, col_offset=29), lineno=1491, col_offset=12), Assign([Attribute(Attribute(Name('self', Load(), lineno=1492, col_offset=12), 'parser', Load(), lineno=1492, col_offset=12), 'formatter', Store(), lineno=1492, col_offset=12)], Call(Name('TitledHelpFormatter', Load(), lineno=1492, col_offset=36), [], [], None, None, lineno=1492, col_offset=36), lineno=1492, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=1493, col_offset=12), 'assertHelpEquals', Load(), lineno=1493, col_offset=12), [Name('_expected_help_title_formatter', Load(), lineno=1493, col_offset=34)], [], None, None, lineno=1493, col_offset=12), lineno=1493, col_offset=12)], lineno=1490, col_offset=13)], [], lineno=1489, col_offset=4), FunctionDef('test_wrap_columns', arguments([Name('self', Param(), lineno=1495, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1499, col_offset=8), 'parser', Store(), lineno=1499, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1499, col_offset=22), 'make_parser', Load(), lineno=1499, col_offset=22), [Num(60, lineno=1499, col_offset=39)], [], None, None, lineno=1499, col_offset=22), lineno=1499, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1500, col_offset=8), 'assertHelpEquals', Load(), lineno=1500, col_offset=8), [Name('_expected_help_short_lines', Load(), lineno=1500, col_offset=30)], [], None, None, lineno=1500, col_offset=8), lineno=1500, col_offset=8)], [], lineno=1495, col_offset=4), FunctionDef('test_help_unicode', arguments([Name('self', Param(), lineno=1502, col_offset=26)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1503, col_offset=8), 'parser', Store(), lineno=1503, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1503, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1503, col_offset=53))], None, None, lineno=1503, col_offset=22), lineno=1503, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1504, col_offset=8), 'parser', Load(), lineno=1504, col_offset=8), 'add_option', Load(), lineno=1504, col_offset=8), [Str('-a', lineno=1504, col_offset=31)], [keyword('action', Str('store_true', lineno=1504, col_offset=44)), keyword('help', Str(u'ol\xe9!', lineno=1504, col_offset=63))], None, None, lineno=1504, col_offset=8), lineno=1504, col_offset=8), Assign([Name('expect', Store(), lineno=1505, col_offset=8)], Str(u'Options:\n  -h, --help  show this help message and exit\n  -a          ol\xe9!\n', lineno=1509, col_offset=-1), lineno=1505, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1510, col_offset=8), 'assertHelpEquals', Load(), lineno=1510, col_offset=8), [Name('expect', Load(), lineno=1510, col_offset=30)], [], None, None, lineno=1510, col_offset=8), lineno=1510, col_offset=8)], [], lineno=1502, col_offset=4), FunctionDef('test_help_unicode_description', arguments([Name('self', Param(), lineno=1512, col_offset=38)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1513, col_offset=8), 'parser', Store(), lineno=1513, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1513, col_offset=22), [], [keyword('usage', Name('SUPPRESS_USAGE', Load(), lineno=1513, col_offset=53)), keyword('description', Str(u'ol\xe9!', lineno=1514, col_offset=59))], None, None, lineno=1513, col_offset=22), lineno=1513, col_offset=8), Assign([Name('expect', Store(), lineno=1515, col_offset=8)], Str(u'ol\xe9!\n\nOptions:\n  -h, --help  show this help message and exit\n', lineno=1520, col_offset=-1), lineno=1515, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1521, col_offset=8), 'assertHelpEquals', Load(), lineno=1521, col_offset=8), [Name('expect', Load(), lineno=1521, col_offset=30)], [], None, None, lineno=1521, col_offset=8), lineno=1521, col_offset=8)], [], lineno=1512, col_offset=4), FunctionDef('test_help_description_groups', arguments([Name('self', Param(), lineno=1523, col_offset=37)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1524, col_offset=8), 'parser', Load(), lineno=1524, col_offset=8), 'set_description', Load(), lineno=1524, col_offset=8), [Str('This is the program description for %prog.  %prog has an option group as well as single options.', lineno=1525, col_offset=12)], [], None, None, lineno=1524, col_offset=8), lineno=1524, col_offset=8), Assign([Name('group', Store(), lineno=1528, col_offset=8)], Call(Name('OptionGroup', Load(), lineno=1528, col_offset=16), [Attribute(Name('self', Load(), lineno=1529, col_offset=12), 'parser', Load(), lineno=1529, col_offset=12), Str('Dangerous Options', lineno=1529, col_offset=25), Str('Caution: use of these options is at your own risk.  It is believed that some of them bite.', lineno=1530, col_offset=12)], [], None, None, lineno=1528, col_offset=16), lineno=1528, col_offset=8), Expr(Call(Attribute(Name('group', Load(), lineno=1532, col_offset=8), 'add_option', Load(), lineno=1532, col_offset=8), [Str('-g', lineno=1532, col_offset=25)], [keyword('action', Str('store_true', lineno=1532, col_offset=38)), keyword('help', Str('Group option.', lineno=1532, col_offset=57))], None, None, lineno=1532, col_offset=8), lineno=1532, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1533, col_offset=8), 'parser', Load(), lineno=1533, col_offset=8), 'add_option_group', Load(), lineno=1533, col_offset=8), [Name('group', Load(), lineno=1533, col_offset=37)], [], None, None, lineno=1533, col_offset=8), lineno=1533, col_offset=8), Assign([Name('expect', Store(), lineno=1535, col_offset=8)], Str('Usage: bar.py [options]\n\nThis is the program description for bar.py.  bar.py has an option group as\nwell as single options.\n\nOptions:\n  -a APPLE           throw APPLEs at basket\n  -b NUM, --boo=NUM  shout "boo!" NUM times (in order to frighten away all the\n                     evil spirits that cause trouble and mayhem)\n  --foo=FOO          store FOO in the foo list for later fooing\n  -h, --help         show this help message and exit\n\n  Dangerous Options:\n    Caution: use of these options is at your own risk.  It is believed\n    that some of them bite.\n\n    -g               Group option.\n', lineno=1553, col_offset=-1), lineno=1535, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1555, col_offset=8), 'assertHelpEquals', Load(), lineno=1555, col_offset=8), [Name('expect', Load(), lineno=1555, col_offset=30)], [], None, None, lineno=1555, col_offset=8), lineno=1555, col_offset=8), Assign([Attribute(Attribute(Name('self', Load(), lineno=1557, col_offset=8), 'parser', Load(), lineno=1557, col_offset=8), 'epilog', Store(), lineno=1557, col_offset=8)], Str('Please report bugs to /dev/null.', lineno=1557, col_offset=29), lineno=1557, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1558, col_offset=8), 'assertHelpEquals', Load(), lineno=1558, col_offset=8), [BinOp(Name('expect', Load(), lineno=1558, col_offset=30), Add(), Str('\nPlease report bugs to /dev/null.\n', lineno=1558, col_offset=39), lineno=1558, col_offset=30)], [], None, None, lineno=1558, col_offset=8), lineno=1558, col_offset=8)], [], lineno=1523, col_offset=4)], [], lineno=1440, col_offset=0), ClassDef('TestMatchAbbrev', [Name('BaseTest', Load(), lineno=1561, col_offset=22)], [FunctionDef('test_match_abbrev', arguments([Name('self', Param(), lineno=1562, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1563, col_offset=8), 'assertEqual', Load(), lineno=1563, col_offset=8), [Call(Name('_match_abbrev', Load(), lineno=1563, col_offset=25), [Str('--f', lineno=1563, col_offset=39), Dict([Str('--foz', lineno=1564, col_offset=40), Str('--foo', lineno=1565, col_offset=40), Str('--fie', lineno=1566, col_offset=40), Str('--f', lineno=1567, col_offset=40)], [Name('None', Load(), lineno=1564, col_offset=49), Name('None', Load(), lineno=1565, col_offset=49), Name('None', Load(), lineno=1566, col_offset=49), Name('None', Load(), lineno=1567, col_offset=47)], lineno=1564, col_offset=39)], [], None, None, lineno=1563, col_offset=25), Str('--f', lineno=1568, col_offset=25)], [], None, None, lineno=1563, col_offset=8), lineno=1563, col_offset=8)], [], lineno=1562, col_offset=4), FunctionDef('test_match_abbrev_error', arguments([Name('self', Param(), lineno=1570, col_offset=32)], None, None, []), [Assign([Name('s', Store(), lineno=1571, col_offset=8)], Str('--f', lineno=1571, col_offset=12), lineno=1571, col_offset=8), Assign([Name('wordmap', Store(), lineno=1572, col_offset=8)], Dict([Str('--foz', lineno=1572, col_offset=19), Str('--foo', lineno=1572, col_offset=34), Str('--fie', lineno=1572, col_offset=49)], [Name('None', Load(), lineno=1572, col_offset=28), Name('None', Load(), lineno=1572, col_offset=43), Name('None', Load(), lineno=1572, col_offset=58)], lineno=1572, col_offset=18), lineno=1572, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1573, col_offset=8), 'assertRaises', Load(), lineno=1573, col_offset=8), [Name('_match_abbrev', Load(), lineno=1574, col_offset=12), Tuple([Name('s', Load(), lineno=1574, col_offset=28), Name('wordmap', Load(), lineno=1574, col_offset=31)], Load(), lineno=1574, col_offset=28), Name('None', Load(), lineno=1574, col_offset=41), Name('BadOptionError', Load(), lineno=1575, col_offset=12), Str('ambiguous option: --f (--fie, --foo, --foz?)', lineno=1575, col_offset=28)], [], None, None, lineno=1573, col_offset=8), lineno=1573, col_offset=8)], [], lineno=1570, col_offset=4)], [], lineno=1561, col_offset=0), ClassDef('TestParseNumber', [Name('BaseTest', Load(), lineno=1578, col_offset=22)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=1579, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=1580, col_offset=8), 'parser', Store(), lineno=1580, col_offset=8)], Call(Name('InterceptingOptionParser', Load(), lineno=1580, col_offset=22), [], [], None, None, lineno=1580, col_offset=22), lineno=1580, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1581, col_offset=8), 'parser', Load(), lineno=1581, col_offset=8), 'add_option', Load(), lineno=1581, col_offset=8), [Str('-n', lineno=1581, col_offset=31)], [keyword('type', Name('int', Load(), lineno=1581, col_offset=42))], None, None, lineno=1581, col_offset=8), lineno=1581, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1582, col_offset=8), 'parser', Load(), lineno=1582, col_offset=8), 'add_option', Load(), lineno=1582, col_offset=8), [Str('-l', lineno=1582, col_offset=31)], [keyword('type', Name('long', Load(), lineno=1582, col_offset=42))], None, None, lineno=1582, col_offset=8), lineno=1582, col_offset=8)], [], lineno=1579, col_offset=4), FunctionDef('test_parse_num_fail', arguments([Name('self', Param(), lineno=1584, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1585, col_offset=8), 'assertRaises', Load(), lineno=1585, col_offset=8), [Name('_parse_num', Load(), lineno=1586, col_offset=12), Tuple([Str('', lineno=1586, col_offset=25), Name('int', Load(), lineno=1586, col_offset=29)], Load(), lineno=1586, col_offset=25), Dict([], [], lineno=1586, col_offset=35), Name('ValueError', Load(), lineno=1587, col_offset=12), Call(Attribute(Name('re', Load(), lineno=1588, col_offset=12), 'compile', Load(), lineno=1588, col_offset=12), [Str("invalid literal for int().*: '?'?", lineno=1588, col_offset=23)], [], None, None, lineno=1588, col_offset=12)], [], None, None, lineno=1585, col_offset=8), lineno=1585, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1589, col_offset=8), 'assertRaises', Load(), lineno=1589, col_offset=8), [Name('_parse_num', Load(), lineno=1590, col_offset=12), Tuple([Str('0xOoops', lineno=1590, col_offset=25), Name('long', Load(), lineno=1590, col_offset=36)], Load(), lineno=1590, col_offset=25), Dict([], [], lineno=1590, col_offset=43), Name('ValueError', Load(), lineno=1591, col_offset=12), Call(Attribute(Name('re', Load(), lineno=1592, col_offset=12), 'compile', Load(), lineno=1592, col_offset=12), [Str("invalid literal for long().*: '?0xOoops'?", lineno=1592, col_offset=23)], [], None, None, lineno=1592, col_offset=12)], [], None, None, lineno=1589, col_offset=8), lineno=1589, col_offset=8)], [], lineno=1584, col_offset=4), FunctionDef('test_parse_num_ok', arguments([Name('self', Param(), lineno=1594, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1595, col_offset=8), 'assertEqual', Load(), lineno=1595, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1595, col_offset=25), [Str('0', lineno=1595, col_offset=36), Name('int', Load(), lineno=1595, col_offset=41)], [], None, None, lineno=1595, col_offset=25), Num(0, lineno=1595, col_offset=47)], [], None, None, lineno=1595, col_offset=8), lineno=1595, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1596, col_offset=8), 'assertEqual', Load(), lineno=1596, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1596, col_offset=25), [Str('0x10', lineno=1596, col_offset=36), Name('int', Load(), lineno=1596, col_offset=44)], [], None, None, lineno=1596, col_offset=25), Num(16, lineno=1596, col_offset=50)], [], None, None, lineno=1596, col_offset=8), lineno=1596, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1597, col_offset=8), 'assertEqual', Load(), lineno=1597, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1597, col_offset=25), [Str('0XA', lineno=1597, col_offset=36), Name('long', Load(), lineno=1597, col_offset=43)], [], None, None, lineno=1597, col_offset=25), Num(10L, lineno=1597, col_offset=50)], [], None, None, lineno=1597, col_offset=8), lineno=1597, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1598, col_offset=8), 'assertEqual', Load(), lineno=1598, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1598, col_offset=25), [Str('010', lineno=1598, col_offset=36), Name('long', Load(), lineno=1598, col_offset=43)], [], None, None, lineno=1598, col_offset=25), Num(8L, lineno=1598, col_offset=50)], [], None, None, lineno=1598, col_offset=8), lineno=1598, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1599, col_offset=8), 'assertEqual', Load(), lineno=1599, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1599, col_offset=25), [Str('0b11', lineno=1599, col_offset=36), Name('int', Load(), lineno=1599, col_offset=44)], [], None, None, lineno=1599, col_offset=25), Num(3, lineno=1599, col_offset=50)], [], None, None, lineno=1599, col_offset=8), lineno=1599, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1600, col_offset=8), 'assertEqual', Load(), lineno=1600, col_offset=8), [Call(Name('_parse_num', Load(), lineno=1600, col_offset=25), [Str('0b', lineno=1600, col_offset=36), Name('long', Load(), lineno=1600, col_offset=42)], [], None, None, lineno=1600, col_offset=25), Num(0L, lineno=1600, col_offset=49)], [], None, None, lineno=1600, col_offset=8), lineno=1600, col_offset=8)], [], lineno=1594, col_offset=4), FunctionDef('test_numeric_options', arguments([Name('self', Param(), lineno=1602, col_offset=29)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=1603, col_offset=8), 'assertParseOK', Load(), lineno=1603, col_offset=8), [List([Str('-n', lineno=1603, col_offset=28), Str('42', lineno=1603, col_offset=34), Str('-l', lineno=1603, col_offset=40), Str('0x20', lineno=1603, col_offset=46)], Load(), lineno=1603, col_offset=27), Dict([Str('n', lineno=1604, col_offset=29), Str('l', lineno=1604, col_offset=38)], [Num(42, lineno=1604, col_offset=34), Num(32, lineno=1604, col_offset=43)], lineno=1604, col_offset=27), List([], Load(), lineno=1604, col_offset=51)], [], None, None, lineno=1603, col_offset=8), lineno=1603, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1605, col_offset=8), 'assertParseOK', Load(), lineno=1605, col_offset=8), [List([Str('-n', lineno=1605, col_offset=28), Str('0b0101', lineno=1605, col_offset=34), Str('-l010', lineno=1605, col_offset=44)], Load(), lineno=1605, col_offset=27), Dict([Str('n', lineno=1606, col_offset=29), Str('l', lineno=1606, col_offset=37)], [Num(5, lineno=1606, col_offset=34), Num(8, lineno=1606, col_offset=42)], lineno=1606, col_offset=27), List([], Load(), lineno=1606, col_offset=47)], [], None, None, lineno=1605, col_offset=8), lineno=1605, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1607, col_offset=8), 'assertParseFail', Load(), lineno=1607, col_offset=8), [List([Str('-n008', lineno=1607, col_offset=30)], Load(), lineno=1607, col_offset=29), Str("option -n: invalid integer value: '008'", lineno=1608, col_offset=29)], [], None, None, lineno=1607, col_offset=8), lineno=1607, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1609, col_offset=8), 'assertParseFail', Load(), lineno=1609, col_offset=8), [List([Str('-l0b0123', lineno=1609, col_offset=30)], Load(), lineno=1609, col_offset=29), Str("option -l: invalid long integer value: '0b0123'", lineno=1610, col_offset=29)], [], None, None, lineno=1609, col_offset=8), lineno=1609, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=1611, col_offset=8), 'assertParseFail', Load(), lineno=1611, col_offset=8), [List([Str('-l', lineno=1611, col_offset=30), Str('0x12x', lineno=1611, col_offset=36)], Load(), lineno=1611, col_offset=29), Str("option -l: invalid long integer value: '0x12x'", lineno=1612, col_offset=29)], [], None, None, lineno=1611, col_offset=8), lineno=1611, col_offset=8)], [], lineno=1602, col_offset=4)], [], lineno=1578, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=1616, col_offset=4), 'run_unittest', Load(), lineno=1616, col_offset=4), [Name('__name__', Load(), lineno=1616, col_offset=30)], [], None, None, lineno=1616, col_offset=4), lineno=1616, col_offset=4)], [], lineno=1615, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1618, col_offset=3), [Eq()], [Str('__main__', lineno=1618, col_offset=15)], lineno=1618, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=1619, col_offset=4), [], [], None, None, lineno=1619, col_offset=4), lineno=1619, col_offset=4)], [], lineno=1618, col_offset=0)])
