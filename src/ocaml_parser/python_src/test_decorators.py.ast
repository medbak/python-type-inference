Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=2, col_offset=0), FunctionDef('funcattrs', arguments([], None, 'kwds', []), [FunctionDef('decorate', arguments([Name('func', Param(), lineno=5, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('func', Load(), lineno=6, col_offset=8), '__dict__', Load(), lineno=6, col_offset=8), 'update', Load(), lineno=6, col_offset=8), [Name('kwds', Load(), lineno=6, col_offset=29)], [], None, None, lineno=6, col_offset=8), lineno=6, col_offset=8), Return(Name('func', Load(), lineno=7, col_offset=15), lineno=7, col_offset=8)], [], lineno=5, col_offset=4), Return(Name('decorate', Load(), lineno=8, col_offset=11), lineno=8, col_offset=4)], [], lineno=4, col_offset=0), ClassDef('MiscDecorators', [Name('object', Load(), lineno=10, col_offset=22)], [FunctionDef('author', arguments([Name('name', Param(), lineno=12, col_offset=15)], None, None, []), [FunctionDef('decorate', arguments([Name('func', Param(), lineno=13, col_offset=21)], None, None, []), [Assign([Subscript(Attribute(Name('func', Load(), lineno=14, col_offset=12), '__dict__', Load(), lineno=14, col_offset=12), Index(Str('author', lineno=14, col_offset=26)), Store(), lineno=14, col_offset=12)], Name('name', Load(), lineno=14, col_offset=38), lineno=14, col_offset=12), Return(Name('func', Load(), lineno=15, col_offset=19), lineno=15, col_offset=12)], [], lineno=13, col_offset=8), Return(Name('decorate', Load(), lineno=16, col_offset=15), lineno=16, col_offset=8)], [Name('staticmethod', Load(), lineno=11, col_offset=5)], lineno=11, col_offset=4)], [], lineno=10, col_offset=0), ClassDef('DbcheckError', [Name('Exception', Load(), lineno=20, col_offset=20)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=21, col_offset=17), Name('exprstr', Param(), lineno=21, col_offset=23), Name('func', Param(), lineno=21, col_offset=32), Name('args', Param(), lineno=21, col_offset=38), Name('kwds', Param(), lineno=21, col_offset=44)], None, None, []), [Expr(Call(Attribute(Name('Exception', Load(), lineno=23, col_offset=8), '__init__', Load(), lineno=23, col_offset=8), [Name('self', Load(), lineno=23, col_offset=27), BinOp(Str('dbcheck %r failed (func=%s args=%s kwds=%s)', lineno=23, col_offset=33), Mod(), Tuple([Name('exprstr', Load(), lineno=24, col_offset=28), Name('func', Load(), lineno=24, col_offset=37), Name('args', Load(), lineno=24, col_offset=43), Name('kwds', Load(), lineno=24, col_offset=49)], Load(), lineno=24, col_offset=28), lineno=23, col_offset=33)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=20, col_offset=0), FunctionDef('dbcheck', arguments([Name('exprstr', Param(), lineno=27, col_offset=12), Name('globals', Param(), lineno=27, col_offset=21), Name('locals', Param(), lineno=27, col_offset=35)], None, None, [Name('None', Load(), lineno=27, col_offset=29), Name('None', Load(), lineno=27, col_offset=42)]), [Expr(Str('Decorator to implement debugging assertions', lineno=28, col_offset=4), lineno=28, col_offset=4), FunctionDef('decorate', arguments([Name('func', Param(), lineno=29, col_offset=17)], None, None, []), [Assign([Name('expr', Store(), lineno=30, col_offset=8)], Call(Name('compile', Load(), lineno=30, col_offset=15), [Name('exprstr', Load(), lineno=30, col_offset=23), BinOp(Str('dbcheck-%s', lineno=30, col_offset=32), Mod(), Attribute(Name('func', Load(), lineno=30, col_offset=47), 'func_name', Load(), lineno=30, col_offset=47), lineno=30, col_offset=32), Str('eval', lineno=30, col_offset=63)], [], None, None, lineno=30, col_offset=15), lineno=30, col_offset=8), FunctionDef('check', arguments([], 'args', 'kwds', []), [If(UnaryOp(Not(), Call(Name('eval', Load(), lineno=32, col_offset=19), [Name('expr', Load(), lineno=32, col_offset=24), Name('globals', Load(), lineno=32, col_offset=30), Name('locals', Load(), lineno=32, col_offset=39)], [], None, None, lineno=32, col_offset=19), lineno=32, col_offset=15), [Raise(Call(Name('DbcheckError', Load(), lineno=33, col_offset=22), [Name('exprstr', Load(), lineno=33, col_offset=35), Name('func', Load(), lineno=33, col_offset=44), Name('args', Load(), lineno=33, col_offset=50), Name('kwds', Load(), lineno=33, col_offset=56)], [], None, None, lineno=33, col_offset=22), None, None, lineno=33, col_offset=16)], [], lineno=32, col_offset=12), Return(Call(Name('func', Load(), lineno=34, col_offset=19), [], [], Name('args', Load(), lineno=34, col_offset=25), Name('kwds', Load(), lineno=34, col_offset=33), lineno=34, col_offset=19), lineno=34, col_offset=12)], [], lineno=31, col_offset=8), Return(Name('check', Load(), lineno=35, col_offset=15), lineno=35, col_offset=8)], [], lineno=29, col_offset=4), Return(Name('decorate', Load(), lineno=36, col_offset=11), lineno=36, col_offset=4)], [], lineno=27, col_offset=0), FunctionDef('countcalls', arguments([Name('counts', Param(), lineno=40, col_offset=15)], None, None, []), [Expr(Str('Decorator to count calls to a function', lineno=41, col_offset=4), lineno=41, col_offset=4), FunctionDef('decorate', arguments([Name('func', Param(), lineno=42, col_offset=17)], None, None, []), [Assign([Name('func_name', Store(), lineno=43, col_offset=8)], Attribute(Name('func', Load(), lineno=43, col_offset=20), 'func_name', Load(), lineno=43, col_offset=20), lineno=43, col_offset=8), Assign([Subscript(Name('counts', Load(), lineno=44, col_offset=8), Index(Name('func_name', Load(), lineno=44, col_offset=15)), Store(), lineno=44, col_offset=8)], Num(0, lineno=44, col_offset=28), lineno=44, col_offset=8), FunctionDef('call', arguments([], 'args', 'kwds', []), [AugAssign(Subscript(Name('counts', Load(), lineno=46, col_offset=12), Index(Name('func_name', Load(), lineno=46, col_offset=19)), Store(), lineno=46, col_offset=12), Add(), Num(1, lineno=46, col_offset=33), lineno=46, col_offset=12), Return(Call(Name('func', Load(), lineno=47, col_offset=19), [], [], Name('args', Load(), lineno=47, col_offset=25), Name('kwds', Load(), lineno=47, col_offset=33), lineno=47, col_offset=19), lineno=47, col_offset=12)], [], lineno=45, col_offset=8), Assign([Attribute(Name('call', Load(), lineno=48, col_offset=8), 'func_name', Store(), lineno=48, col_offset=8)], Name('func_name', Load(), lineno=48, col_offset=25), lineno=48, col_offset=8), Return(Name('call', Load(), lineno=49, col_offset=15), lineno=49, col_offset=8)], [], lineno=42, col_offset=4), Return(Name('decorate', Load(), lineno=50, col_offset=11), lineno=50, col_offset=4)], [], lineno=40, col_offset=0), FunctionDef('memoize', arguments([Name('func', Param(), lineno=54, col_offset=12)], None, None, []), [Assign([Name('saved', Store(), lineno=55, col_offset=4)], Dict([], [], lineno=55, col_offset=12), lineno=55, col_offset=4), FunctionDef('call', arguments([], 'args', None, []), [TryExcept([Return(Subscript(Name('saved', Load(), lineno=58, col_offset=19), Index(Name('args', Load(), lineno=58, col_offset=25)), Load(), lineno=58, col_offset=19), lineno=58, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=59, col_offset=15), None, [Assign([Name('res', Store(), lineno=60, col_offset=12)], Call(Name('func', Load(), lineno=60, col_offset=18), [], [], Name('args', Load(), lineno=60, col_offset=24), None, lineno=60, col_offset=18), lineno=60, col_offset=12), Assign([Subscript(Name('saved', Load(), lineno=61, col_offset=12), Index(Name('args', Load(), lineno=61, col_offset=18)), Store(), lineno=61, col_offset=12)], Name('res', Load(), lineno=61, col_offset=26), lineno=61, col_offset=12), Return(Name('res', Load(), lineno=62, col_offset=19), lineno=62, col_offset=12)], lineno=59, col_offset=8), ExceptHandler(Name('TypeError', Load(), lineno=63, col_offset=15), None, [Return(Call(Name('func', Load(), lineno=65, col_offset=19), [], [], Name('args', Load(), lineno=65, col_offset=25), None, lineno=65, col_offset=19), lineno=65, col_offset=12)], lineno=63, col_offset=8)], [], lineno=57, col_offset=8)], [], lineno=56, col_offset=4), Assign([Attribute(Name('call', Load(), lineno=66, col_offset=4), 'func_name', Store(), lineno=66, col_offset=4)], Attribute(Name('func', Load(), lineno=66, col_offset=21), 'func_name', Load(), lineno=66, col_offset=21), lineno=66, col_offset=4), Return(Name('call', Load(), lineno=67, col_offset=11), lineno=67, col_offset=4)], [], lineno=54, col_offset=0), ClassDef('TestDecorators', [Attribute(Name('unittest', Load(), lineno=71, col_offset=21), 'TestCase', Load(), lineno=71, col_offset=21)], [FunctionDef('test_single', arguments([Name('self', Param(), lineno=73, col_offset=20)], None, None, []), [ClassDef('C', [Name('object', Load(), lineno=74, col_offset=16)], [FunctionDef('foo', arguments([], None, None, []), [Return(Num(42, lineno=76, col_offset=30), lineno=76, col_offset=23)], [Name('staticmethod', Load(), lineno=75, col_offset=13)], lineno=75, col_offset=12)], [], lineno=74, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=77, col_offset=8), 'assertEqual', Load(), lineno=77, col_offset=8), [Call(Attribute(Name('C', Load(), lineno=77, col_offset=25), 'foo', Load(), lineno=77, col_offset=25), [], [], None, None, lineno=77, col_offset=25), Num(42, lineno=77, col_offset=34)], [], None, None, lineno=77, col_offset=8), lineno=77, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertEqual', Load(), lineno=78, col_offset=8), [Call(Attribute(Call(Name('C', Load(), lineno=78, col_offset=25), [], [], None, None, lineno=78, col_offset=25), 'foo', Load(), lineno=78, col_offset=25), [], [], None, None, lineno=78, col_offset=25), Num(42, lineno=78, col_offset=36)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8)], [], lineno=73, col_offset=4), FunctionDef('test_staticmethod_function', arguments([Name('self', Param(), lineno=80, col_offset=35)], None, None, []), [FunctionDef('notamethod', arguments([Name('x', Param(), lineno=82, col_offset=23)], None, None, []), [Return(Name('x', Load(), lineno=83, col_offset=19), lineno=83, col_offset=12)], [Name('staticmethod', Load(), lineno=81, col_offset=9)], lineno=81, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=84, col_offset=8), 'assertRaises', Load(), lineno=84, col_offset=8), [Name('TypeError', Load(), lineno=84, col_offset=26), Name('notamethod', Load(), lineno=84, col_offset=37), Num(1, lineno=84, col_offset=49)], [], None, None, lineno=84, col_offset=8), lineno=84, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('test_dotted', arguments([Name('self', Param(), lineno=86, col_offset=20)], None, None, []), [Assign([Name('decorators', Store(), lineno=87, col_offset=8)], Call(Name('MiscDecorators', Load(), lineno=87, col_offset=21), [], [], None, None, lineno=87, col_offset=21), lineno=87, col_offset=8), FunctionDef('foo', arguments([], None, None, []), [Return(Num(42, lineno=89, col_offset=26), lineno=89, col_offset=19)], [Call(Attribute(Name('decorators', Load(), lineno=88, col_offset=9), 'author', Load(), lineno=88, col_offset=9), [Str('Cleese', lineno=88, col_offset=27)], [], None, None, lineno=88, col_offset=9)], lineno=88, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=90, col_offset=8), 'assertEqual', Load(), lineno=90, col_offset=8), [Call(Name('foo', Load(), lineno=90, col_offset=25), [], [], None, None, lineno=90, col_offset=25), Num(42, lineno=90, col_offset=32)], [], None, None, lineno=90, col_offset=8), lineno=90, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=91, col_offset=8), 'assertEqual', Load(), lineno=91, col_offset=8), [Attribute(Name('foo', Load(), lineno=91, col_offset=25), 'author', Load(), lineno=91, col_offset=25), Str('Cleese', lineno=91, col_offset=37)], [], None, None, lineno=91, col_offset=8), lineno=91, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('test_argforms', arguments([Name('self', Param(), lineno=93, col_offset=22)], None, None, []), [FunctionDef('noteargs', arguments([], 'args', 'kwds', []), [FunctionDef('decorate', arguments([Name('func', Param(), lineno=98, col_offset=25)], None, None, []), [Expr(Call(Name('setattr', Load(), lineno=99, col_offset=16), [Name('func', Load(), lineno=99, col_offset=24), Str('dbval', lineno=99, col_offset=30), Tuple([Name('args', Load(), lineno=99, col_offset=40), Name('kwds', Load(), lineno=99, col_offset=46)], Load(), lineno=99, col_offset=40)], [], None, None, lineno=99, col_offset=16), lineno=99, col_offset=16), Return(Name('func', Load(), lineno=100, col_offset=23), lineno=100, col_offset=16)], [], lineno=98, col_offset=12), Return(Name('decorate', Load(), lineno=101, col_offset=19), lineno=101, col_offset=12)], [], lineno=97, col_offset=8), Assign([Name('args', Store(), lineno=103, col_offset=8)], Tuple([Str('Now', lineno=103, col_offset=17), Str('is', lineno=103, col_offset=24), Str('the', lineno=103, col_offset=30), Str('time', lineno=103, col_offset=37)], Load(), lineno=103, col_offset=17), lineno=103, col_offset=8), Assign([Name('kwds', Store(), lineno=104, col_offset=8)], Call(Name('dict', Load(), lineno=104, col_offset=15), [], [keyword('one', Num(1, lineno=104, col_offset=24)), keyword('two', Num(2, lineno=104, col_offset=31))], None, None, lineno=104, col_offset=15), lineno=104, col_offset=8), FunctionDef('f1', arguments([], None, None, []), [Return(Num(42, lineno=106, col_offset=25), lineno=106, col_offset=18)], [Call(Name('noteargs', Load(), lineno=105, col_offset=9), [], [], Name('args', Load(), lineno=105, col_offset=19), Name('kwds', Load(), lineno=105, col_offset=27), lineno=105, col_offset=9)], lineno=105, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=107, col_offset=8), 'assertEqual', Load(), lineno=107, col_offset=8), [Call(Name('f1', Load(), lineno=107, col_offset=25), [], [], None, None, lineno=107, col_offset=25), Num(42, lineno=107, col_offset=31)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'assertEqual', Load(), lineno=108, col_offset=8), [Attribute(Name('f1', Load(), lineno=108, col_offset=25), 'dbval', Load(), lineno=108, col_offset=25), Tuple([Name('args', Load(), lineno=108, col_offset=36), Name('kwds', Load(), lineno=108, col_offset=42)], Load(), lineno=108, col_offset=36)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), FunctionDef('f2', arguments([], None, None, []), [Return(Num(84, lineno=111, col_offset=25), lineno=111, col_offset=18)], [Call(Name('noteargs', Load(), lineno=110, col_offset=9), [Str('terry', lineno=110, col_offset=18), Str('gilliam', lineno=110, col_offset=27)], [keyword('eric', Str('idle', lineno=110, col_offset=43)), keyword('john', Str('cleese', lineno=110, col_offset=56))], None, None, lineno=110, col_offset=9)], lineno=110, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=112, col_offset=8), 'assertEqual', Load(), lineno=112, col_offset=8), [Call(Name('f2', Load(), lineno=112, col_offset=25), [], [], None, None, lineno=112, col_offset=25), Num(84, lineno=112, col_offset=31)], [], None, None, lineno=112, col_offset=8), lineno=112, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=113, col_offset=8), 'assertEqual', Load(), lineno=113, col_offset=8), [Attribute(Name('f2', Load(), lineno=113, col_offset=25), 'dbval', Load(), lineno=113, col_offset=25), Tuple([Tuple([Str('terry', lineno=113, col_offset=37), Str('gilliam', lineno=113, col_offset=46)], Load(), lineno=113, col_offset=37), Call(Name('dict', Load(), lineno=114, col_offset=37), [], [keyword('eric', Str('idle', lineno=114, col_offset=47)), keyword('john', Str('cleese', lineno=114, col_offset=60))], None, None, lineno=114, col_offset=37)], Load(), lineno=113, col_offset=36)], [], None, None, lineno=113, col_offset=8), lineno=113, col_offset=8), FunctionDef('f3', arguments([], None, None, []), [Pass( lineno=117, col_offset=18)], [Call(Name('noteargs', Load(), lineno=116, col_offset=9), [Num(1, lineno=116, col_offset=18), Num(2, lineno=116, col_offset=21)], [], None, None, lineno=116, col_offset=9)], lineno=116, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'assertEqual', Load(), lineno=118, col_offset=8), [Attribute(Name('f3', Load(), lineno=118, col_offset=25), 'dbval', Load(), lineno=118, col_offset=25), Tuple([Tuple([Num(1, lineno=118, col_offset=37), Num(2, lineno=118, col_offset=40)], Load(), lineno=118, col_offset=37), Dict([], [], lineno=118, col_offset=44)], Load(), lineno=118, col_offset=36)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8)], [], lineno=93, col_offset=4), FunctionDef('test_dbcheck', arguments([Name('self', Param(), lineno=120, col_offset=21)], None, None, []), [FunctionDef('f', arguments([Name('a', Param(), lineno=122, col_offset=14), Name('b', Param(), lineno=122, col_offset=17)], None, None, []), [Return(BinOp(Name('a', Load(), lineno=123, col_offset=19), Add(), Name('b', Load(), lineno=123, col_offset=23), lineno=123, col_offset=19), lineno=123, col_offset=12)], [Call(Name('dbcheck', Load(), lineno=121, col_offset=9), [Str('args[1] is not None', lineno=121, col_offset=17)], [], None, None, lineno=121, col_offset=9)], lineno=121, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=124, col_offset=8), 'assertEqual', Load(), lineno=124, col_offset=8), [Call(Name('f', Load(), lineno=124, col_offset=25), [Num(1, lineno=124, col_offset=27), Num(2, lineno=124, col_offset=30)], [], None, None, lineno=124, col_offset=25), Num(3, lineno=124, col_offset=34)], [], None, None, lineno=124, col_offset=8), lineno=124, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=8), 'assertRaises', Load(), lineno=125, col_offset=8), [Name('DbcheckError', Load(), lineno=125, col_offset=26), Name('f', Load(), lineno=125, col_offset=40), Num(1, lineno=125, col_offset=43), Name('None', Load(), lineno=125, col_offset=46)], [], None, None, lineno=125, col_offset=8), lineno=125, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('test_memoize', arguments([Name('self', Param(), lineno=127, col_offset=21)], None, None, []), [Assign([Name('counts', Store(), lineno=128, col_offset=8)], Dict([], [], lineno=128, col_offset=17), lineno=128, col_offset=8), FunctionDef('double', arguments([Name('x', Param(), lineno=132, col_offset=19)], None, None, []), [Return(BinOp(Name('x', Load(), lineno=133, col_offset=19), Mult(), Num(2, lineno=133, col_offset=23), lineno=133, col_offset=19), lineno=133, col_offset=12)], [Name('memoize', Load(), lineno=130, col_offset=9), Call(Name('countcalls', Load(), lineno=131, col_offset=9), [Name('counts', Load(), lineno=131, col_offset=20)], [], None, None, lineno=131, col_offset=9)], lineno=130, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=8), 'assertEqual', Load(), lineno=134, col_offset=8), [Attribute(Name('double', Load(), lineno=134, col_offset=25), 'func_name', Load(), lineno=134, col_offset=25), Str('double', lineno=134, col_offset=43)], [], None, None, lineno=134, col_offset=8), lineno=134, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=8), 'assertEqual', Load(), lineno=136, col_offset=8), [Name('counts', Load(), lineno=136, col_offset=25), Call(Name('dict', Load(), lineno=136, col_offset=33), [], [keyword('double', Num(0, lineno=136, col_offset=45))], None, None, lineno=136, col_offset=33)], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=140, col_offset=8), 'assertEqual', Load(), lineno=140, col_offset=8), [Call(Name('double', Load(), lineno=140, col_offset=25), [Num(2, lineno=140, col_offset=32)], [], None, None, lineno=140, col_offset=25), Num(4, lineno=140, col_offset=36)], [], None, None, lineno=140, col_offset=8), lineno=140, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=141, col_offset=8), 'assertEqual', Load(), lineno=141, col_offset=8), [Subscript(Name('counts', Load(), lineno=141, col_offset=25), Index(Str('double', lineno=141, col_offset=32)), Load(), lineno=141, col_offset=25), Num(1, lineno=141, col_offset=43)], [], None, None, lineno=141, col_offset=8), lineno=141, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertEqual', Load(), lineno=142, col_offset=8), [Call(Name('double', Load(), lineno=142, col_offset=25), [Num(2, lineno=142, col_offset=32)], [], None, None, lineno=142, col_offset=25), Num(4, lineno=142, col_offset=36)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=143, col_offset=8), 'assertEqual', Load(), lineno=143, col_offset=8), [Subscript(Name('counts', Load(), lineno=143, col_offset=25), Index(Str('double', lineno=143, col_offset=32)), Load(), lineno=143, col_offset=25), Num(1, lineno=143, col_offset=43)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=8), 'assertEqual', Load(), lineno=144, col_offset=8), [Call(Name('double', Load(), lineno=144, col_offset=25), [Num(3, lineno=144, col_offset=32)], [], None, None, lineno=144, col_offset=25), Num(6, lineno=144, col_offset=36)], [], None, None, lineno=144, col_offset=8), lineno=144, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'assertEqual', Load(), lineno=145, col_offset=8), [Subscript(Name('counts', Load(), lineno=145, col_offset=25), Index(Str('double', lineno=145, col_offset=32)), Load(), lineno=145, col_offset=25), Num(2, lineno=145, col_offset=43)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=149, col_offset=8), 'assertEqual', Load(), lineno=149, col_offset=8), [Call(Name('double', Load(), lineno=149, col_offset=25), [List([Num(10, lineno=149, col_offset=33)], Load(), lineno=149, col_offset=32)], [], None, None, lineno=149, col_offset=25), List([Num(10, lineno=149, col_offset=40), Num(10, lineno=149, col_offset=44)], Load(), lineno=149, col_offset=39)], [], None, None, lineno=149, col_offset=8), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=150, col_offset=8), 'assertEqual', Load(), lineno=150, col_offset=8), [Subscript(Name('counts', Load(), lineno=150, col_offset=25), Index(Str('double', lineno=150, col_offset=32)), Load(), lineno=150, col_offset=25), Num(3, lineno=150, col_offset=43)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=151, col_offset=8), 'assertEqual', Load(), lineno=151, col_offset=8), [Call(Name('double', Load(), lineno=151, col_offset=25), [List([Num(10, lineno=151, col_offset=33)], Load(), lineno=151, col_offset=32)], [], None, None, lineno=151, col_offset=25), List([Num(10, lineno=151, col_offset=40), Num(10, lineno=151, col_offset=44)], Load(), lineno=151, col_offset=39)], [], None, None, lineno=151, col_offset=8), lineno=151, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=152, col_offset=8), 'assertEqual', Load(), lineno=152, col_offset=8), [Subscript(Name('counts', Load(), lineno=152, col_offset=25), Index(Str('double', lineno=152, col_offset=32)), Load(), lineno=152, col_offset=25), Num(4, lineno=152, col_offset=43)], [], None, None, lineno=152, col_offset=8), lineno=152, col_offset=8)], [], lineno=127, col_offset=4), FunctionDef('test_errors', arguments([Name('self', Param(), lineno=154, col_offset=20)], None, None, []), [For(Name('expr', Store(), lineno=157, col_offset=12), List([Str('1+2', lineno=157, col_offset=22), Str('x[3]', lineno=157, col_offset=29), Str('(1, 2)', lineno=157, col_offset=37)], Load(), lineno=157, col_offset=20), [Expr(Call(Name('compile', Load(), lineno=159, col_offset=12), [Name('expr', Load(), lineno=159, col_offset=20), Str('testexpr', lineno=159, col_offset=26), Str('exec', lineno=159, col_offset=38)], [], None, None, lineno=159, col_offset=12), lineno=159, col_offset=12), Assign([Name('codestr', Store(), lineno=161, col_offset=12)], BinOp(Str('@%s\ndef f(): pass', lineno=161, col_offset=22), Mod(), Name('expr', Load(), lineno=161, col_offset=45), lineno=161, col_offset=22), lineno=161, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=162, col_offset=12), 'assertRaises', Load(), lineno=162, col_offset=12), [Name('SyntaxError', Load(), lineno=162, col_offset=30), Name('compile', Load(), lineno=162, col_offset=43), Name('codestr', Load(), lineno=162, col_offset=52), Str('test', lineno=162, col_offset=61), Str('exec', lineno=162, col_offset=69)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12)], [], lineno=157, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=8), 'assertRaises', Load(), lineno=166, col_offset=8), [Name('SyntaxError', Load(), lineno=166, col_offset=26), Name('compile', Load(), lineno=166, col_offset=39), Str('@f1 @f2\ndef f(): pass', lineno=167, col_offset=26), Str('test', lineno=167, col_offset=52), Str('exec', lineno=167, col_offset=60)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), FunctionDef('unimp', arguments([Name('func', Param(), lineno=171, col_offset=18)], None, None, []), [Raise(Name('NotImplementedError', Load(), lineno=172, col_offset=18), None, None, lineno=172, col_offset=12)], [], lineno=171, col_offset=8), Assign([Name('context', Store(), lineno=173, col_offset=8)], Call(Name('dict', Load(), lineno=173, col_offset=18), [], [keyword('nullval', Name('None', Load(), lineno=173, col_offset=31)), keyword('unimp', Name('unimp', Load(), lineno=173, col_offset=43))], None, None, lineno=173, col_offset=18), lineno=173, col_offset=8), For(Tuple([Name('expr', Store(), lineno=175, col_offset=12), Name('exc', Store(), lineno=175, col_offset=18)], Store(), lineno=175, col_offset=12), List([Tuple([Str('undef', lineno=175, col_offset=28), Name('NameError', Load(), lineno=175, col_offset=37)], Load(), lineno=175, col_offset=28), Tuple([Str('nullval', lineno=176, col_offset=28), Name('TypeError', Load(), lineno=176, col_offset=39)], Load(), lineno=176, col_offset=28), Tuple([Str('nullval.attr', lineno=177, col_offset=28), Name('AttributeError', Load(), lineno=177, col_offset=44)], Load(), lineno=177, col_offset=28), Tuple([Str('unimp', lineno=178, col_offset=28), Name('NotImplementedError', Load(), lineno=178, col_offset=37)], Load(), lineno=178, col_offset=28)], Load(), lineno=175, col_offset=25), [Assign([Name('codestr', Store(), lineno=179, col_offset=12)], BinOp(Str('@%s\ndef f(): pass\nassert f() is None', lineno=179, col_offset=22), Mod(), Name('expr', Load(), lineno=179, col_offset=65), lineno=179, col_offset=22), lineno=179, col_offset=12), Assign([Name('code', Store(), lineno=180, col_offset=12)], Call(Name('compile', Load(), lineno=180, col_offset=19), [Name('codestr', Load(), lineno=180, col_offset=27), Str('test', lineno=180, col_offset=36), Str('exec', lineno=180, col_offset=44)], [], None, None, lineno=180, col_offset=19), lineno=180, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=181, col_offset=12), 'assertRaises', Load(), lineno=181, col_offset=12), [Name('exc', Load(), lineno=181, col_offset=30), Name('eval', Load(), lineno=181, col_offset=35), Name('code', Load(), lineno=181, col_offset=41), Name('context', Load(), lineno=181, col_offset=47)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12)], [], lineno=175, col_offset=8)], [], lineno=154, col_offset=4), FunctionDef('test_double', arguments([Name('self', Param(), lineno=183, col_offset=20)], None, None, []), [ClassDef('C', [Name('object', Load(), lineno=184, col_offset=16)], [FunctionDef('foo', arguments([Name('self', Param(), lineno=187, col_offset=20)], None, None, []), [Return(Num(42, lineno=187, col_offset=34), lineno=187, col_offset=27)], [Call(Name('funcattrs', Load(), lineno=185, col_offset=13), [], [keyword('abc', Num(1, lineno=185, col_offset=27)), keyword('xyz', Str('haha', lineno=185, col_offset=34))], None, None, lineno=185, col_offset=13), Call(Name('funcattrs', Load(), lineno=186, col_offset=13), [], [keyword('booh', Num(42, lineno=186, col_offset=28))], None, None, lineno=186, col_offset=13)], lineno=185, col_offset=12)], [], lineno=184, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=188, col_offset=8), 'assertEqual', Load(), lineno=188, col_offset=8), [Call(Attribute(Call(Name('C', Load(), lineno=188, col_offset=25), [], [], None, None, lineno=188, col_offset=25), 'foo', Load(), lineno=188, col_offset=25), [], [], None, None, lineno=188, col_offset=25), Num(42, lineno=188, col_offset=36)], [], None, None, lineno=188, col_offset=8), lineno=188, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=189, col_offset=8), 'assertEqual', Load(), lineno=189, col_offset=8), [Attribute(Attribute(Name('C', Load(), lineno=189, col_offset=25), 'foo', Load(), lineno=189, col_offset=25), 'abc', Load(), lineno=189, col_offset=25), Num(1, lineno=189, col_offset=36)], [], None, None, lineno=189, col_offset=8), lineno=189, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=190, col_offset=8), 'assertEqual', Load(), lineno=190, col_offset=8), [Attribute(Attribute(Name('C', Load(), lineno=190, col_offset=25), 'foo', Load(), lineno=190, col_offset=25), 'xyz', Load(), lineno=190, col_offset=25), Str('haha', lineno=190, col_offset=36)], [], None, None, lineno=190, col_offset=8), lineno=190, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=191, col_offset=8), 'assertEqual', Load(), lineno=191, col_offset=8), [Attribute(Attribute(Name('C', Load(), lineno=191, col_offset=25), 'foo', Load(), lineno=191, col_offset=25), 'booh', Load(), lineno=191, col_offset=25), Num(42, lineno=191, col_offset=37)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8)], [], lineno=183, col_offset=4), FunctionDef('test_order', arguments([Name('self', Param(), lineno=193, col_offset=19)], None, None, []), [FunctionDef('callnum', arguments([Name('num', Param(), lineno=196, col_offset=20)], None, None, []), [Expr(Str("Decorator factory that returns a decorator that replaces the\n            passed-in function with one that returns the value of 'num'", lineno=198, col_offset=-1), lineno=198, col_offset=-1), FunctionDef('deco', arguments([Name('func', Param(), lineno=199, col_offset=21)], None, None, []), [Return(Lambda(arguments([], None, None, []), Name('num', Load(), lineno=200, col_offset=31), lineno=200, col_offset=23), lineno=200, col_offset=16)], [], lineno=199, col_offset=12), Return(Name('deco', Load(), lineno=201, col_offset=19), lineno=201, col_offset=12)], [], lineno=196, col_offset=8), FunctionDef('foo', arguments([], None, None, []), [Return(Num(42, lineno=204, col_offset=26), lineno=204, col_offset=19)], [Call(Name('callnum', Load(), lineno=202, col_offset=9), [Num(2, lineno=202, col_offset=17)], [], None, None, lineno=202, col_offset=9), Call(Name('callnum', Load(), lineno=203, col_offset=9), [Num(1, lineno=203, col_offset=17)], [], None, None, lineno=203, col_offset=9)], lineno=202, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=205, col_offset=8), 'assertEqual', Load(), lineno=205, col_offset=8), [Call(Name('foo', Load(), lineno=205, col_offset=25), [], [], None, None, lineno=205, col_offset=25), Num(2, lineno=205, col_offset=32), Str('Application order of decorators is incorrect', lineno=206, col_offset=28)], [], None, None, lineno=205, col_offset=8), lineno=205, col_offset=8)], [], lineno=193, col_offset=4), FunctionDef('test_eval_order', arguments([Name('self', Param(), lineno=208, col_offset=24)], None, None, []), [Assign([Name('actions', Store(), lineno=222, col_offset=8)], List([], Load(), lineno=222, col_offset=18), lineno=222, col_offset=8), FunctionDef('make_decorator', arguments([Name('tag', Param(), lineno=224, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('actions', Load(), lineno=225, col_offset=12), 'append', Load(), lineno=225, col_offset=12), [BinOp(Str('makedec', lineno=225, col_offset=27), Add(), Name('tag', Load(), lineno=225, col_offset=39), lineno=225, col_offset=27)], [], None, None, lineno=225, col_offset=12), lineno=225, col_offset=12), FunctionDef('decorate', arguments([Name('func', Param(), lineno=226, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('actions', Load(), lineno=227, col_offset=16), 'append', Load(), lineno=227, col_offset=16), [BinOp(Str('calldec', lineno=227, col_offset=31), Add(), Name('tag', Load(), lineno=227, col_offset=43), lineno=227, col_offset=31)], [], None, None, lineno=227, col_offset=16), lineno=227, col_offset=16), Return(Name('func', Load(), lineno=228, col_offset=23), lineno=228, col_offset=16)], [], lineno=226, col_offset=12), Return(Name('decorate', Load(), lineno=229, col_offset=19), lineno=229, col_offset=12)], [], lineno=224, col_offset=8), ClassDef('NameLookupTracer', [Name('object', Load(), lineno=231, col_offset=32)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=232, col_offset=25), Name('index', Param(), lineno=232, col_offset=31)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=233, col_offset=16), 'index', Store(), lineno=233, col_offset=16)], Name('index', Load(), lineno=233, col_offset=29), lineno=233, col_offset=16)], [], lineno=232, col_offset=12), FunctionDef('__getattr__', arguments([Name('self', Param(), lineno=235, col_offset=28), Name('fname', Param(), lineno=235, col_offset=34)], None, None, []), [If(Compare(Name('fname', Load(), lineno=236, col_offset=19), [Eq()], [Str('make_decorator', lineno=236, col_offset=28)], lineno=236, col_offset=19), [Assign([Tuple([Name('opname', Store(), lineno=237, col_offset=20), Name('res', Store(), lineno=237, col_offset=28)], Store(), lineno=237, col_offset=20)], Tuple([Str('evalname', lineno=237, col_offset=35), Name('make_decorator', Load(), lineno=237, col_offset=47)], Load(), lineno=237, col_offset=35), lineno=237, col_offset=20)], [If(Compare(Name('fname', Load(), lineno=238, col_offset=21), [Eq()], [Str('arg', lineno=238, col_offset=30)], lineno=238, col_offset=21), [Assign([Tuple([Name('opname', Store(), lineno=239, col_offset=20), Name('res', Store(), lineno=239, col_offset=28)], Store(), lineno=239, col_offset=20)], Tuple([Str('evalargs', lineno=239, col_offset=35), Call(Name('str', Load(), lineno=239, col_offset=47), [Attribute(Name('self', Load(), lineno=239, col_offset=51), 'index', Load(), lineno=239, col_offset=51)], [], None, None, lineno=239, col_offset=47)], Load(), lineno=239, col_offset=35), lineno=239, col_offset=20)], [Assert(Name('False', Load(), lineno=241, col_offset=27), BinOp(Str('Unknown attrname %s', lineno=241, col_offset=34), Mod(), Name('fname', Load(), lineno=241, col_offset=58), lineno=241, col_offset=34), lineno=241, col_offset=20)], lineno=238, col_offset=21)], lineno=236, col_offset=16), Expr(Call(Attribute(Name('actions', Load(), lineno=242, col_offset=16), 'append', Load(), lineno=242, col_offset=16), [BinOp(Str('%s%d', lineno=242, col_offset=31), Mod(), Tuple([Name('opname', Load(), lineno=242, col_offset=41), Attribute(Name('self', Load(), lineno=242, col_offset=49), 'index', Load(), lineno=242, col_offset=49)], Load(), lineno=242, col_offset=41), lineno=242, col_offset=31)], [], None, None, lineno=242, col_offset=16), lineno=242, col_offset=16), Return(Name('res', Load(), lineno=243, col_offset=23), lineno=243, col_offset=16)], [], lineno=235, col_offset=12)], [], lineno=231, col_offset=8), Assign([Tuple([Name('c1', Store(), lineno=245, col_offset=8), Name('c2', Store(), lineno=245, col_offset=12), Name('c3', Store(), lineno=245, col_offset=16)], Store(), lineno=245, col_offset=8)], Call(Name('map', Load(), lineno=245, col_offset=21), [Name('NameLookupTracer', Load(), lineno=245, col_offset=25), List([Num(1, lineno=245, col_offset=45), Num(2, lineno=245, col_offset=48), Num(3, lineno=245, col_offset=51)], Load(), lineno=245, col_offset=43)], [], None, None, lineno=245, col_offset=21), lineno=245, col_offset=8), Assign([Name('expected_actions', Store(), lineno=247, col_offset=8)], List([Str('evalname1', lineno=247, col_offset=29), Str('evalargs1', lineno=247, col_offset=42), Str('makedec1', lineno=247, col_offset=55), Str('evalname2', lineno=248, col_offset=29), Str('evalargs2', lineno=248, col_offset=42), Str('makedec2', lineno=248, col_offset=55), Str('evalname3', lineno=249, col_offset=29), Str('evalargs3', lineno=249, col_offset=42), Str('makedec3', lineno=249, col_offset=55), Str('calldec3', lineno=250, col_offset=29), Str('calldec2', lineno=250, col_offset=41), Str('calldec1', lineno=250, col_offset=53)], Load(), lineno=247, col_offset=27), lineno=247, col_offset=8), Assign([Name('actions', Store(), lineno=252, col_offset=8)], List([], Load(), lineno=252, col_offset=18), lineno=252, col_offset=8), FunctionDef('foo', arguments([], None, None, []), [Return(Num(42, lineno=256, col_offset=26), lineno=256, col_offset=19)], [Call(Attribute(Name('c1', Load(), lineno=253, col_offset=9), 'make_decorator', Load(), lineno=253, col_offset=9), [Attribute(Name('c1', Load(), lineno=253, col_offset=27), 'arg', Load(), lineno=253, col_offset=27)], [], None, None, lineno=253, col_offset=9), Call(Attribute(Name('c2', Load(), lineno=254, col_offset=9), 'make_decorator', Load(), lineno=254, col_offset=9), [Attribute(Name('c2', Load(), lineno=254, col_offset=27), 'arg', Load(), lineno=254, col_offset=27)], [], None, None, lineno=254, col_offset=9), Call(Attribute(Name('c3', Load(), lineno=255, col_offset=9), 'make_decorator', Load(), lineno=255, col_offset=9), [Attribute(Name('c3', Load(), lineno=255, col_offset=27), 'arg', Load(), lineno=255, col_offset=27)], [], None, None, lineno=255, col_offset=9)], lineno=253, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertEqual', Load(), lineno=257, col_offset=8), [Call(Name('foo', Load(), lineno=257, col_offset=25), [], [], None, None, lineno=257, col_offset=25), Num(42, lineno=257, col_offset=32)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=8), 'assertEqual', Load(), lineno=259, col_offset=8), [Name('actions', Load(), lineno=259, col_offset=25), Name('expected_actions', Load(), lineno=259, col_offset=34)], [], None, None, lineno=259, col_offset=8), lineno=259, col_offset=8), Assign([Name('actions', Store(), lineno=263, col_offset=8)], List([], Load(), lineno=263, col_offset=18), lineno=263, col_offset=8), FunctionDef('bar', arguments([], None, None, []), [Return(Num(42, lineno=264, col_offset=26), lineno=264, col_offset=19)], [], lineno=264, col_offset=8), Assign([Name('bar', Store(), lineno=265, col_offset=8)], Call(Call(Attribute(Name('c1', Load(), lineno=265, col_offset=14), 'make_decorator', Load(), lineno=265, col_offset=14), [Attribute(Name('c1', Load(), lineno=265, col_offset=32), 'arg', Load(), lineno=265, col_offset=32)], [], None, None, lineno=265, col_offset=14), [Call(Call(Attribute(Name('c2', Load(), lineno=265, col_offset=40), 'make_decorator', Load(), lineno=265, col_offset=40), [Attribute(Name('c2', Load(), lineno=265, col_offset=58), 'arg', Load(), lineno=265, col_offset=58)], [], None, None, lineno=265, col_offset=40), [Call(Call(Attribute(Name('c3', Load(), lineno=265, col_offset=66), 'make_decorator', Load(), lineno=265, col_offset=66), [Attribute(Name('c3', Load(), lineno=265, col_offset=84), 'arg', Load(), lineno=265, col_offset=84)], [], None, None, lineno=265, col_offset=66), [Name('bar', Load(), lineno=265, col_offset=92)], [], None, None, lineno=265, col_offset=66)], [], None, None, lineno=265, col_offset=40)], [], None, None, lineno=265, col_offset=14), lineno=265, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=266, col_offset=8), 'assertEqual', Load(), lineno=266, col_offset=8), [Call(Name('bar', Load(), lineno=266, col_offset=25), [], [], None, None, lineno=266, col_offset=25), Num(42, lineno=266, col_offset=32)], [], None, None, lineno=266, col_offset=8), lineno=266, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=267, col_offset=8), 'assertEqual', Load(), lineno=267, col_offset=8), [Name('actions', Load(), lineno=267, col_offset=25), Name('expected_actions', Load(), lineno=267, col_offset=34)], [], None, None, lineno=267, col_offset=8), lineno=267, col_offset=8)], [], lineno=208, col_offset=4)], [], lineno=71, col_offset=0), ClassDef('TestClassDecorators', [Attribute(Name('unittest', Load(), lineno=269, col_offset=26), 'TestCase', Load(), lineno=269, col_offset=26)], [FunctionDef('test_simple', arguments([Name('self', Param(), lineno=271, col_offset=20)], None, None, []), [FunctionDef('plain', arguments([Name('x', Param(), lineno=272, col_offset=18)], None, None, []), [Assign([Attribute(Name('x', Load(), lineno=273, col_offset=12), 'extra', Store(), lineno=273, col_offset=12)], Str('Hello', lineno=273, col_offset=22), lineno=273, col_offset=12), Return(Name('x', Load(), lineno=274, col_offset=19), lineno=274, col_offset=12)], [], lineno=272, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=276, col_offset=16)], [Pass( lineno=276, col_offset=25)], [Name('plain', Load(), lineno=275, col_offset=9)], lineno=275, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertEqual', Load(), lineno=277, col_offset=8), [Attribute(Name('C', Load(), lineno=277, col_offset=25), 'extra', Load(), lineno=277, col_offset=25), Str('Hello', lineno=277, col_offset=34)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8)], [], lineno=271, col_offset=4), FunctionDef('test_double', arguments([Name('self', Param(), lineno=279, col_offset=20)], None, None, []), [FunctionDef('ten', arguments([Name('x', Param(), lineno=280, col_offset=16)], None, None, []), [Assign([Attribute(Name('x', Load(), lineno=281, col_offset=12), 'extra', Store(), lineno=281, col_offset=12)], Num(10, lineno=281, col_offset=22), lineno=281, col_offset=12), Return(Name('x', Load(), lineno=282, col_offset=19), lineno=282, col_offset=12)], [], lineno=280, col_offset=8), FunctionDef('add_five', arguments([Name('x', Param(), lineno=283, col_offset=21)], None, None, []), [AugAssign(Attribute(Name('x', Load(), lineno=284, col_offset=12), 'extra', Store(), lineno=284, col_offset=12), Add(), Num(5, lineno=284, col_offset=23), lineno=284, col_offset=12), Return(Name('x', Load(), lineno=285, col_offset=19), lineno=285, col_offset=12)], [], lineno=283, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=289, col_offset=16)], [Pass( lineno=289, col_offset=25)], [Name('add_five', Load(), lineno=287, col_offset=9), Name('ten', Load(), lineno=288, col_offset=9)], lineno=287, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'assertEqual', Load(), lineno=290, col_offset=8), [Attribute(Name('C', Load(), lineno=290, col_offset=25), 'extra', Load(), lineno=290, col_offset=25), Num(15, lineno=290, col_offset=34)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8)], [], lineno=279, col_offset=4), FunctionDef('test_order', arguments([Name('self', Param(), lineno=292, col_offset=19)], None, None, []), [FunctionDef('applied_first', arguments([Name('x', Param(), lineno=293, col_offset=26)], None, None, []), [Assign([Attribute(Name('x', Load(), lineno=294, col_offset=12), 'extra', Store(), lineno=294, col_offset=12)], Str('first', lineno=294, col_offset=22), lineno=294, col_offset=12), Return(Name('x', Load(), lineno=295, col_offset=19), lineno=295, col_offset=12)], [], lineno=293, col_offset=8), FunctionDef('applied_second', arguments([Name('x', Param(), lineno=296, col_offset=27)], None, None, []), [Assign([Attribute(Name('x', Load(), lineno=297, col_offset=12), 'extra', Store(), lineno=297, col_offset=12)], Str('second', lineno=297, col_offset=22), lineno=297, col_offset=12), Return(Name('x', Load(), lineno=298, col_offset=19), lineno=298, col_offset=12)], [], lineno=296, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=301, col_offset=16)], [Pass( lineno=301, col_offset=25)], [Name('applied_second', Load(), lineno=299, col_offset=9), Name('applied_first', Load(), lineno=300, col_offset=9)], lineno=299, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=8), 'assertEqual', Load(), lineno=302, col_offset=8), [Attribute(Name('C', Load(), lineno=302, col_offset=25), 'extra', Load(), lineno=302, col_offset=25), Str('second', lineno=302, col_offset=34)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8)], [], lineno=292, col_offset=4)], [], lineno=269, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=305, col_offset=4), 'run_unittest', Load(), lineno=305, col_offset=4), [Name('TestDecorators', Load(), lineno=305, col_offset=30)], [], None, None, lineno=305, col_offset=4), lineno=305, col_offset=4), Expr(Call(Attribute(Name('test_support', Load(), lineno=306, col_offset=4), 'run_unittest', Load(), lineno=306, col_offset=4), [Name('TestClassDecorators', Load(), lineno=306, col_offset=30)], [], None, None, lineno=306, col_offset=4), lineno=306, col_offset=4)], [], lineno=304, col_offset=0), If(Compare(Name('__name__', Load(), lineno=308, col_offset=3), [Eq()], [Str('__main__', lineno=308, col_offset=13)], lineno=308, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=309, col_offset=4), [], [], None, None, lineno=309, col_offset=4), lineno=309, col_offset=4)], [], lineno=308, col_offset=0)])
