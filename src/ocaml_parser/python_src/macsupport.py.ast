Module([Expr(Str('Augment the "bgen" package with definitions that are useful on the Apple Macintosh.\n\nIntended usage is "from macsupport import *" -- this implies all bgen\'s goodies.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), ImportFrom('bgen', [alias('*', None)], 0, lineno=9, col_offset=0), Assign([Name('Boolean', Store(), lineno=13, col_offset=0)], Call(Name('Type', Load(), lineno=13, col_offset=10), [Str('Boolean', lineno=13, col_offset=15), Str('b', lineno=13, col_offset=26)], [], None, None, lineno=13, col_offset=10), lineno=13, col_offset=0), Assign([Name('SignedByte', Store(), lineno=14, col_offset=0)], Call(Name('Type', Load(), lineno=14, col_offset=13), [Str('SignedByte', lineno=14, col_offset=18), Str('b', lineno=14, col_offset=32)], [], None, None, lineno=14, col_offset=13), lineno=14, col_offset=0), Assign([Name('Size', Store(), lineno=15, col_offset=0)], Call(Name('Type', Load(), lineno=15, col_offset=7), [Str('Size', lineno=15, col_offset=12), Str('l', lineno=15, col_offset=20)], [], None, None, lineno=15, col_offset=7), lineno=15, col_offset=0), Assign([Name('Style', Store(), lineno=16, col_offset=0)], Call(Name('Type', Load(), lineno=16, col_offset=8), [Str('Style', lineno=16, col_offset=13), Str('b', lineno=16, col_offset=22)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=0), Assign([Name('StyleParameter', Store(), lineno=17, col_offset=0)], Call(Name('Type', Load(), lineno=17, col_offset=17), [Str('StyleParameter', lineno=17, col_offset=22), Str('h', lineno=17, col_offset=40)], [], None, None, lineno=17, col_offset=17), lineno=17, col_offset=0), Assign([Name('CharParameter', Store(), lineno=18, col_offset=0)], Call(Name('Type', Load(), lineno=18, col_offset=16), [Str('CharParameter', lineno=18, col_offset=21), Str('h', lineno=18, col_offset=38)], [], None, None, lineno=18, col_offset=16), lineno=18, col_offset=0), Assign([Name('TextEncoding', Store(), lineno=19, col_offset=0)], Call(Name('Type', Load(), lineno=19, col_offset=15), [Str('TextEncoding', lineno=19, col_offset=20), Str('l', lineno=19, col_offset=36)], [], None, None, lineno=19, col_offset=15), lineno=19, col_offset=0), Assign([Name('ByteCount', Store(), lineno=20, col_offset=0)], Call(Name('Type', Load(), lineno=20, col_offset=12), [Str('ByteCount', lineno=20, col_offset=17), Str('l', lineno=20, col_offset=30)], [], None, None, lineno=20, col_offset=12), lineno=20, col_offset=0), Assign([Name('Duration', Store(), lineno=21, col_offset=0)], Call(Name('Type', Load(), lineno=21, col_offset=11), [Str('Duration', lineno=21, col_offset=16), Str('l', lineno=21, col_offset=28)], [], None, None, lineno=21, col_offset=11), lineno=21, col_offset=0), Assign([Name('ByteOffset', Store(), lineno=22, col_offset=0)], Call(Name('Type', Load(), lineno=22, col_offset=13), [Str('ByteOffset', lineno=22, col_offset=18), Str('l', lineno=22, col_offset=32)], [], None, None, lineno=22, col_offset=13), lineno=22, col_offset=0), Assign([Name('OptionBits', Store(), lineno=23, col_offset=0)], Call(Name('Type', Load(), lineno=23, col_offset=13), [Str('OptionBits', lineno=23, col_offset=18), Str('l', lineno=23, col_offset=32)], [], None, None, lineno=23, col_offset=13), lineno=23, col_offset=0), Assign([Name('ItemCount', Store(), lineno=24, col_offset=0)], Call(Name('Type', Load(), lineno=24, col_offset=12), [Str('ItemCount', lineno=24, col_offset=17), Str('l', lineno=24, col_offset=30)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=0), Assign([Name('PBVersion', Store(), lineno=25, col_offset=0)], Call(Name('Type', Load(), lineno=25, col_offset=12), [Str('PBVersion', lineno=25, col_offset=17), Str('l', lineno=25, col_offset=30)], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=0), Assign([Name('ScriptCode', Store(), lineno=26, col_offset=0)], Call(Name('Type', Load(), lineno=26, col_offset=13), [Str('ScriptCode', lineno=26, col_offset=18), Str('h', lineno=26, col_offset=32)], [], None, None, lineno=26, col_offset=13), lineno=26, col_offset=0), Assign([Name('LangCode', Store(), lineno=27, col_offset=0)], Call(Name('Type', Load(), lineno=27, col_offset=11), [Str('LangCode', lineno=27, col_offset=16), Str('h', lineno=27, col_offset=28)], [], None, None, lineno=27, col_offset=11), lineno=27, col_offset=0), Assign([Name('RegionCode', Store(), lineno=28, col_offset=0)], Call(Name('Type', Load(), lineno=28, col_offset=13), [Str('RegionCode', lineno=28, col_offset=18), Str('h', lineno=28, col_offset=32)], [], None, None, lineno=28, col_offset=13), lineno=28, col_offset=0), Assign([Name('UInt8', Store(), lineno=30, col_offset=0)], Call(Name('Type', Load(), lineno=30, col_offset=8), [Str('UInt8', lineno=30, col_offset=13), Str('b', lineno=30, col_offset=22)], [], None, None, lineno=30, col_offset=8), lineno=30, col_offset=0), Assign([Name('SInt8', Store(), lineno=31, col_offset=0)], Call(Name('Type', Load(), lineno=31, col_offset=8), [Str('SInt8', lineno=31, col_offset=13), Str('b', lineno=31, col_offset=22)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=0), Assign([Name('UInt16', Store(), lineno=32, col_offset=0)], Call(Name('Type', Load(), lineno=32, col_offset=9), [Str('UInt16', lineno=32, col_offset=14), Str('H', lineno=32, col_offset=24)], [], None, None, lineno=32, col_offset=9), lineno=32, col_offset=0), Assign([Name('SInt16', Store(), lineno=33, col_offset=0)], Call(Name('Type', Load(), lineno=33, col_offset=9), [Str('SInt16', lineno=33, col_offset=14), Str('h', lineno=33, col_offset=24)], [], None, None, lineno=33, col_offset=9), lineno=33, col_offset=0), Assign([Name('UInt32', Store(), lineno=34, col_offset=0)], Call(Name('Type', Load(), lineno=34, col_offset=9), [Str('UInt32', lineno=34, col_offset=14), Str('l', lineno=34, col_offset=24)], [], None, None, lineno=34, col_offset=9), lineno=34, col_offset=0), Assign([Name('SInt32', Store(), lineno=35, col_offset=0)], Call(Name('Type', Load(), lineno=35, col_offset=9), [Str('SInt32', lineno=35, col_offset=14), Str('l', lineno=35, col_offset=24)], [], None, None, lineno=35, col_offset=9), lineno=35, col_offset=0), Assign([Name('Float32', Store(), lineno=36, col_offset=0)], Call(Name('Type', Load(), lineno=36, col_offset=10), [Str('Float32', lineno=36, col_offset=15), Str('f', lineno=36, col_offset=26)], [], None, None, lineno=36, col_offset=10), lineno=36, col_offset=0), Assign([Name('wide', Store(), lineno=38, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=38, col_offset=7), [Str('wide', lineno=38, col_offset=25), Str('PyMac_Buildwide', lineno=38, col_offset=33), Str('PyMac_Getwide', lineno=38, col_offset=52)], [], None, None, lineno=38, col_offset=7), lineno=38, col_offset=0), Assign([Name('wide_ptr', Store(), lineno=39, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=39, col_offset=11), [Str('wide', lineno=39, col_offset=22), Str('PyMac_Buildwide', lineno=39, col_offset=30), Str('PyMac_Getwide', lineno=39, col_offset=49)], [], None, None, lineno=39, col_offset=11), lineno=39, col_offset=0), Assign([Name('ConstStr255Param', Store(), lineno=42, col_offset=0)], Call(Name('OpaqueArrayType', Load(), lineno=42, col_offset=19), [Str('Str255', lineno=42, col_offset=35), Str('PyMac_BuildStr255', lineno=42, col_offset=45), Str('PyMac_GetStr255', lineno=42, col_offset=66)], [], None, None, lineno=42, col_offset=19), lineno=42, col_offset=0), Assign([Name('Str255', Store(), lineno=43, col_offset=0)], Call(Name('OpaqueArrayType', Load(), lineno=43, col_offset=9), [Str('Str255', lineno=43, col_offset=25), Str('PyMac_BuildStr255', lineno=43, col_offset=35), Str('PyMac_GetStr255', lineno=43, col_offset=56)], [], None, None, lineno=43, col_offset=9), lineno=43, col_offset=0), Assign([Name('StringPtr', Store(), lineno=44, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=44, col_offset=12), [Str('StringPtr', lineno=44, col_offset=30), Str('PyMac_BuildStr255', lineno=44, col_offset=43), Str('PyMac_GetStr255', lineno=44, col_offset=64)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=0), Assign([Name('ConstStringPtr', Store(), lineno=45, col_offset=0)], Name('StringPtr', Load(), lineno=45, col_offset=17), lineno=45, col_offset=0), Assign([Name('FSSpec_ptr', Store(), lineno=48, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=48, col_offset=13), [Str('FSSpec', lineno=48, col_offset=24), Str('PyMac_BuildFSSpec', lineno=48, col_offset=34), Str('PyMac_GetFSSpec', lineno=48, col_offset=55)], [], None, None, lineno=48, col_offset=13), lineno=48, col_offset=0), Assign([Name('FSSpec', Store(), lineno=49, col_offset=0)], Call(Name('OpaqueByValueStructType', Load(), lineno=49, col_offset=9), [Str('FSSpec', lineno=49, col_offset=33), Str('PyMac_BuildFSSpec', lineno=49, col_offset=43), Str('PyMac_GetFSSpec', lineno=49, col_offset=64)], [], None, None, lineno=49, col_offset=9), lineno=49, col_offset=0), Assign([Name('FSRef_ptr', Store(), lineno=50, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=50, col_offset=12), [Str('FSRef', lineno=50, col_offset=23), Str('PyMac_BuildFSRef', lineno=50, col_offset=32), Str('PyMac_GetFSRef', lineno=50, col_offset=52)], [], None, None, lineno=50, col_offset=12), lineno=50, col_offset=0), Assign([Name('FSRef', Store(), lineno=51, col_offset=0)], Call(Name('OpaqueByValueStructType', Load(), lineno=51, col_offset=8), [Str('FSRef', lineno=51, col_offset=32), Str('PyMac_BuildFSRef', lineno=51, col_offset=41), Str('PyMac_GetFSRef', lineno=51, col_offset=61)], [], None, None, lineno=51, col_offset=8), lineno=51, col_offset=0), FunctionDef('OSTypeType', arguments([Name('typename', Param(), lineno=54, col_offset=15)], None, None, []), [Return(Call(Name('OpaqueByValueType', Load(), lineno=55, col_offset=11), [Name('typename', Load(), lineno=55, col_offset=29), Str('PyMac_BuildOSType', lineno=55, col_offset=39), Str('PyMac_GetOSType', lineno=55, col_offset=60)], [], None, None, lineno=55, col_offset=11), lineno=55, col_offset=4)], [], lineno=54, col_offset=0), Assign([Name('OSType', Store(), lineno=56, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=56, col_offset=9), [Str('OSType', lineno=56, col_offset=20)], [], None, None, lineno=56, col_offset=9), lineno=56, col_offset=0), Assign([Name('ResType', Store(), lineno=57, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=57, col_offset=10), [Str('ResType', lineno=57, col_offset=21)], [], None, None, lineno=57, col_offset=10), lineno=57, col_offset=0), Assign([Name('FourCharCode', Store(), lineno=58, col_offset=0)], Call(Name('OSTypeType', Load(), lineno=58, col_offset=15), [Str('FourCharCode', lineno=58, col_offset=26)], [], None, None, lineno=58, col_offset=15), lineno=58, col_offset=0), Assign([Name('NumVersion', Store(), lineno=61, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=61, col_offset=13), [Str('NumVersion', lineno=61, col_offset=31), Str('PyMac_BuildNumVersion', lineno=61, col_offset=45), Str('BUG', lineno=61, col_offset=70)], [], None, None, lineno=61, col_offset=13), lineno=61, col_offset=0), Assign([Name('Handle', Store(), lineno=64, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=64, col_offset=9), [Str('Handle', lineno=64, col_offset=27), Str('ResObj', lineno=64, col_offset=37)], [], None, None, lineno=64, col_offset=9), lineno=64, col_offset=0), Assign([Name('MenuHandle', Store(), lineno=65, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=65, col_offset=13), [Str('MenuHandle', lineno=65, col_offset=31), Str('MenuObj', lineno=65, col_offset=45)], [], None, None, lineno=65, col_offset=13), lineno=65, col_offset=0), Assign([Name('MenuRef', Store(), lineno=66, col_offset=0)], Name('MenuHandle', Load(), lineno=66, col_offset=10), lineno=66, col_offset=0), Assign([Name('ControlHandle', Store(), lineno=67, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=67, col_offset=16), [Str('ControlHandle', lineno=67, col_offset=34), Str('CtlObj', lineno=67, col_offset=51)], [], None, None, lineno=67, col_offset=16), lineno=67, col_offset=0), Assign([Name('ControlRef', Store(), lineno=68, col_offset=0)], Name('ControlHandle', Load(), lineno=68, col_offset=13), lineno=68, col_offset=0), Assign([Name('WindowPtr', Store(), lineno=71, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=71, col_offset=12), [Str('WindowPtr', lineno=71, col_offset=30), Str('WinObj', lineno=71, col_offset=43)], [], None, None, lineno=71, col_offset=12), lineno=71, col_offset=0), Assign([Name('WindowRef', Store(), lineno=72, col_offset=0)], Name('WindowPtr', Load(), lineno=72, col_offset=12), lineno=72, col_offset=0), Assign([Name('DialogPtr', Store(), lineno=73, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=73, col_offset=12), [Str('DialogPtr', lineno=73, col_offset=30), Str('DlgObj', lineno=73, col_offset=43)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=0), Assign([Name('DialogRef', Store(), lineno=74, col_offset=0)], Name('DialogPtr', Load(), lineno=74, col_offset=12), lineno=74, col_offset=0), Assign([Name('ExistingWindowPtr', Store(), lineno=75, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=75, col_offset=20), [Str('WindowPtr', lineno=75, col_offset=38), Str('WinObj_WhichWindow', lineno=75, col_offset=51), Str('BUG', lineno=75, col_offset=73)], [], None, None, lineno=75, col_offset=20), lineno=75, col_offset=0), Assign([Name('ExistingDialogPtr', Store(), lineno=76, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=76, col_offset=20), [Str('DialogPtr', lineno=76, col_offset=38), Str('DlgObj_WhichDialog', lineno=76, col_offset=51), Str('BUG', lineno=76, col_offset=73)], [], None, None, lineno=76, col_offset=20), lineno=76, col_offset=0), Assign([Name('NullStorage', Store(), lineno=79, col_offset=0)], Call(Name('FakeType', Load(), lineno=79, col_offset=14), [Str('(void *)0', lineno=79, col_offset=23)], [], None, None, lineno=79, col_offset=14), lineno=79, col_offset=0), Assign([Name('Fixed', Store(), lineno=82, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=82, col_offset=8), [Str('Fixed', lineno=82, col_offset=26), Str('PyMac_BuildFixed', lineno=82, col_offset=35), Str('PyMac_GetFixed', lineno=82, col_offset=55)], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=0), Assign([Name('Rect', Store(), lineno=85, col_offset=0), Name('Rect_ptr', Store(), lineno=85, col_offset=7)], Call(Name('OpaqueType', Load(), lineno=85, col_offset=18), [Str('Rect', lineno=85, col_offset=29), Str('PyMac_BuildRect', lineno=85, col_offset=37), Str('PyMac_GetRect', lineno=85, col_offset=56)], [], None, None, lineno=85, col_offset=18), lineno=85, col_offset=0), Assign([Name('Point', Store(), lineno=86, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=86, col_offset=8), [Str('Point', lineno=86, col_offset=26), Str('PyMac_BuildPoint', lineno=86, col_offset=35), Str('PyMac_GetPoint', lineno=86, col_offset=55)], [], None, None, lineno=86, col_offset=8), lineno=86, col_offset=0), Assign([Name('Point_ptr', Store(), lineno=87, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=87, col_offset=12), [Str('Point', lineno=87, col_offset=23), Str('PyMac_BuildPoint', lineno=87, col_offset=32), Str('PyMac_GetPoint', lineno=87, col_offset=52)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=0), Assign([Name('EventRecord', Store(), lineno=90, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=90, col_offset=14), [Str('EventRecord', lineno=90, col_offset=25), Str('PyMac_BuildEventRecord', lineno=90, col_offset=40), Str('PyMac_GetEventRecord', lineno=90, col_offset=66)], [], None, None, lineno=90, col_offset=14), lineno=90, col_offset=0), Assign([Name('EventRecord_ptr', Store(), lineno=91, col_offset=0)], Name('EventRecord', Load(), lineno=91, col_offset=18), lineno=91, col_offset=0), Assign([Name('CFTypeRef', Store(), lineno=94, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=94, col_offset=12), [Str('CFTypeRef', lineno=94, col_offset=30), Str('CFTypeRefObj', lineno=94, col_offset=43)], [], None, None, lineno=94, col_offset=12), lineno=94, col_offset=0), Assign([Name('CFStringRef', Store(), lineno=95, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=95, col_offset=14), [Str('CFStringRef', lineno=95, col_offset=32), Str('CFStringRefObj', lineno=95, col_offset=47)], [], None, None, lineno=95, col_offset=14), lineno=95, col_offset=0), Assign([Name('CFMutableStringRef', Store(), lineno=96, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=96, col_offset=21), [Str('CFMutableStringRef', lineno=96, col_offset=39), Str('CFMutableStringRefObj', lineno=96, col_offset=61)], [], None, None, lineno=96, col_offset=21), lineno=96, col_offset=0), Assign([Name('CFArrayRef', Store(), lineno=97, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=97, col_offset=13), [Str('CFArrayRef', lineno=97, col_offset=31), Str('CFArrayRefObj', lineno=97, col_offset=45)], [], None, None, lineno=97, col_offset=13), lineno=97, col_offset=0), Assign([Name('CFMutableArrayRef', Store(), lineno=98, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=98, col_offset=20), [Str('CFMutableArrayRef', lineno=98, col_offset=38), Str('CFMutableArrayRefObj', lineno=98, col_offset=59)], [], None, None, lineno=98, col_offset=20), lineno=98, col_offset=0), Assign([Name('CFDictionaryRef', Store(), lineno=99, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=99, col_offset=18), [Str('CFDictionaryRef', lineno=99, col_offset=36), Str('CFDictionaryRefObj', lineno=99, col_offset=55)], [], None, None, lineno=99, col_offset=18), lineno=99, col_offset=0), Assign([Name('CFMutableDictionaryRef', Store(), lineno=100, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=100, col_offset=25), [Str('CFMutableDictionaryRef', lineno=100, col_offset=43), Str('CFMutableDictionaryRefObj', lineno=100, col_offset=69)], [], None, None, lineno=100, col_offset=25), lineno=100, col_offset=0), Assign([Name('CFURLRef', Store(), lineno=101, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=101, col_offset=11), [Str('CFURLRef', lineno=101, col_offset=29), Str('CFURLRefObj', lineno=101, col_offset=41)], [], None, None, lineno=101, col_offset=11), lineno=101, col_offset=0), Assign([Name('OptionalCFURLRef', Store(), lineno=102, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=102, col_offset=19), [Str('CFURLRef', lineno=102, col_offset=37), Str('OptionalCFURLRefObj', lineno=102, col_offset=49)], [], None, None, lineno=102, col_offset=19), lineno=102, col_offset=0), ClassDef('OSErrType', [Name('Type', Load(), lineno=106, col_offset=16)], [FunctionDef('errorCheck', arguments([Name('self', Param(), lineno=107, col_offset=19), Name('name', Param(), lineno=107, col_offset=25)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=108, col_offset=8), [Str('if (%s != noErr) return PyMac_Error(%s);', lineno=108, col_offset=15), Name('name', Load(), lineno=108, col_offset=59), Name('name', Load(), lineno=108, col_offset=65)], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=109, col_offset=8), 'used', Store(), lineno=109, col_offset=8)], Num(1, lineno=109, col_offset=20), lineno=109, col_offset=8)], [], lineno=107, col_offset=4)], [], lineno=106, col_offset=0), Assign([Name('OSErr', Store(), lineno=110, col_offset=0)], Call(Name('OSErrType', Load(), lineno=110, col_offset=8), [Str('OSErr', lineno=110, col_offset=18), Str('h', lineno=110, col_offset=27)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=0), Assign([Name('OSStatus', Store(), lineno=111, col_offset=0)], Call(Name('OSErrType', Load(), lineno=111, col_offset=11), [Str('OSStatus', lineno=111, col_offset=21), Str('l', lineno=111, col_offset=33)], [], None, None, lineno=111, col_offset=11), lineno=111, col_offset=0), Assign([Name('InBuffer', Store(), lineno=116, col_offset=0)], Call(Name('VarInputBufferType', Load(), lineno=116, col_offset=11), [Str('char', lineno=116, col_offset=30), Str('long', lineno=116, col_offset=38), Str('l', lineno=116, col_offset=46)], [], None, None, lineno=116, col_offset=11), lineno=116, col_offset=0), Assign([Name('UcharInBuffer', Store(), lineno=117, col_offset=0)], Call(Name('VarInputBufferType', Load(), lineno=117, col_offset=17), [Str('unsigned char', lineno=117, col_offset=36), Str('long', lineno=117, col_offset=53), Str('l', lineno=117, col_offset=61)], [], None, None, lineno=117, col_offset=17), lineno=117, col_offset=0), Assign([Name('OptionalInBuffer', Store(), lineno=118, col_offset=0)], Call(Name('OptionalVarInputBufferType', Load(), lineno=118, col_offset=19), [Str('char', lineno=118, col_offset=46), Str('long', lineno=118, col_offset=54), Str('l', lineno=118, col_offset=62)], [], None, None, lineno=118, col_offset=19), lineno=118, col_offset=0), Assign([Name('InOutBuffer', Store(), lineno=120, col_offset=0)], Call(Name('HeapInputOutputBufferType', Load(), lineno=120, col_offset=14), [Str('char', lineno=120, col_offset=40), Str('long', lineno=120, col_offset=48), Str('l', lineno=120, col_offset=56)], [], None, None, lineno=120, col_offset=14), lineno=120, col_offset=0), Assign([Name('VarInOutBuffer', Store(), lineno=121, col_offset=0)], Call(Name('VarHeapInputOutputBufferType', Load(), lineno=121, col_offset=17), [Str('char', lineno=121, col_offset=46), Str('long', lineno=121, col_offset=54), Str('l', lineno=121, col_offset=62)], [], None, None, lineno=121, col_offset=17), lineno=121, col_offset=0), Assign([Name('OutBuffer', Store(), lineno=123, col_offset=0)], Call(Name('HeapOutputBufferType', Load(), lineno=123, col_offset=12), [Str('char', lineno=123, col_offset=33), Str('long', lineno=123, col_offset=41), Str('l', lineno=123, col_offset=49)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=0), Assign([Name('VarOutBuffer', Store(), lineno=124, col_offset=0)], Call(Name('VarHeapOutputBufferType', Load(), lineno=124, col_offset=15), [Str('char', lineno=124, col_offset=39), Str('long', lineno=124, col_offset=47), Str('l', lineno=124, col_offset=55)], [], None, None, lineno=124, col_offset=15), lineno=124, col_offset=0), Assign([Name('VarVarOutBuffer', Store(), lineno=125, col_offset=0)], Call(Name('VarVarHeapOutputBufferType', Load(), lineno=125, col_offset=18), [Str('char', lineno=125, col_offset=45), Str('long', lineno=125, col_offset=53), Str('l', lineno=125, col_offset=61)], [], None, None, lineno=125, col_offset=18), lineno=125, col_offset=0), ClassDef('VarUnicodeInputBufferType', [Name('VarInputBufferType', Load(), lineno=128, col_offset=32)], [FunctionDef('getargsFormat', arguments([Name('self', Param(), lineno=130, col_offset=22)], None, None, []), [Return(Str('u#', lineno=131, col_offset=15), lineno=131, col_offset=8)], [], lineno=130, col_offset=4)], [], lineno=128, col_offset=0), ClassDef('VarUnicodeReverseInputBufferType', [Name('ReverseInputBufferMixin', Load(), lineno=133, col_offset=39), Name('VarUnicodeInputBufferType', Load(), lineno=133, col_offset=64)], [Pass( lineno=134, col_offset=4)], [], lineno=133, col_offset=0), Assign([Name('UnicodeInBuffer', Store(), lineno=136, col_offset=0)], Call(Name('VarUnicodeInputBufferType', Load(), lineno=136, col_offset=18), [Str('UniChar', lineno=136, col_offset=44), Str('UniCharCount', lineno=136, col_offset=55), Str('l', lineno=136, col_offset=71)], [], None, None, lineno=136, col_offset=18), lineno=136, col_offset=0), Assign([Name('UnicodeReverseInBuffer', Store(), lineno=137, col_offset=0)], Call(Name('VarUnicodeReverseInputBufferType', Load(), lineno=137, col_offset=25), [Str('UniChar', lineno=137, col_offset=58), Str('UniCharCount', lineno=137, col_offset=69), Str('l', lineno=137, col_offset=85)], [], None, None, lineno=137, col_offset=25), lineno=137, col_offset=0), Assign([Name('UniChar_ptr', Store(), lineno=138, col_offset=0)], Call(Name('InputOnlyType', Load(), lineno=138, col_offset=14), [Str('UniCharPtr', lineno=138, col_offset=28), Str('u', lineno=138, col_offset=42)], [], None, None, lineno=138, col_offset=14), lineno=138, col_offset=0), Assign([Name('includestuff', Store(), lineno=144, col_offset=0)], Str('\n#include "pymactoolbox.h"\n\n/* Macro to test whether a weak-loaded CFM function exists */\n#define PyMac_PRECHECK(rtn) do { if ( &rtn == NULL )  {\\\n        PyErr_SetString(PyExc_NotImplementedError, \\\n        "Not available in this shared library/OS version"); \\\n        return NULL; \\\n    }} while(0)\n\n', lineno=154, col_offset=-1), lineno=144, col_offset=0), Assign([Name('finalstuff', Store(), lineno=157, col_offset=0)], Str('\n', lineno=158, col_offset=-1), lineno=157, col_offset=0), Assign([Name('initstuff', Store(), lineno=161, col_offset=0)], Str('\n', lineno=162, col_offset=-1), lineno=161, col_offset=0), ClassDef('OSErrMixIn', [], [Expr(Str('Mix-in class to treat OSErr/OSStatus return values special', lineno=171, col_offset=4), lineno=171, col_offset=4), FunctionDef('makereturnvar', arguments([Name('self', Param(), lineno=172, col_offset=22)], None, None, []), [If(Compare(Attribute(Attribute(Name('self', Load(), lineno=173, col_offset=11), 'returntype', Load(), lineno=173, col_offset=11), '__class__', Load(), lineno=173, col_offset=11), [Eq()], [Name('OSErrType', Load(), lineno=173, col_offset=40)], lineno=173, col_offset=11), [Return(Call(Name('Variable', Load(), lineno=174, col_offset=19), [Attribute(Name('self', Load(), lineno=174, col_offset=28), 'returntype', Load(), lineno=174, col_offset=28), Str('_err', lineno=174, col_offset=45), Name('ErrorMode', Load(), lineno=174, col_offset=53)], [], None, None, lineno=174, col_offset=19), lineno=174, col_offset=12)], [Return(Call(Name('Variable', Load(), lineno=176, col_offset=19), [Attribute(Name('self', Load(), lineno=176, col_offset=28), 'returntype', Load(), lineno=176, col_offset=28), Str('_rv', lineno=176, col_offset=45), Name('OutMode', Load(), lineno=176, col_offset=52)], [], None, None, lineno=176, col_offset=19), lineno=176, col_offset=12)], lineno=173, col_offset=8)], [], lineno=172, col_offset=4)], [], lineno=170, col_offset=0), ClassDef('OSErrFunctionGenerator', [Name('OSErrMixIn', Load(), lineno=178, col_offset=29), Name('FunctionGenerator', Load(), lineno=178, col_offset=41)], [Pass( lineno=178, col_offset=61)], [], lineno=178, col_offset=0), ClassDef('OSErrMethodGenerator', [Name('OSErrMixIn', Load(), lineno=179, col_offset=27), Name('MethodGenerator', Load(), lineno=179, col_offset=39)], [Pass( lineno=179, col_offset=57)], [], lineno=179, col_offset=0), ClassDef('WeakLinkMixIn', [], [Expr(Str('Mix-in to test the function actually exists (!= NULL) before calling', lineno=182, col_offset=4), lineno=182, col_offset=4), FunctionDef('precheck', arguments([Name('self', Param(), lineno=184, col_offset=17)], None, None, []), [Expr(Call(Name('Output', Load(), lineno=185, col_offset=8), [Str('#ifndef %s', lineno=185, col_offset=15), Attribute(Name('self', Load(), lineno=185, col_offset=29), 'name', Load(), lineno=185, col_offset=29)], [], None, None, lineno=185, col_offset=8), lineno=185, col_offset=8), Expr(Call(Name('Output', Load(), lineno=186, col_offset=8), [Str('PyMac_PRECHECK(%s);', lineno=186, col_offset=15), Attribute(Name('self', Load(), lineno=186, col_offset=38), 'name', Load(), lineno=186, col_offset=38)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8), Expr(Call(Name('Output', Load(), lineno=187, col_offset=8), [Str('#endif', lineno=187, col_offset=15)], [], None, None, lineno=187, col_offset=8), lineno=187, col_offset=8)], [], lineno=184, col_offset=4)], [], lineno=181, col_offset=0), ClassDef('WeakLinkFunctionGenerator', [Name('WeakLinkMixIn', Load(), lineno=189, col_offset=32), Name('FunctionGenerator', Load(), lineno=189, col_offset=47)], [Pass( lineno=189, col_offset=67)], [], lineno=189, col_offset=0), ClassDef('WeakLinkMethodGenerator', [Name('WeakLinkMixIn', Load(), lineno=190, col_offset=30), Name('MethodGenerator', Load(), lineno=190, col_offset=45)], [Pass( lineno=190, col_offset=63)], [], lineno=190, col_offset=0), ClassDef('OSErrWeakLinkFunctionGenerator', [Name('OSErrMixIn', Load(), lineno=191, col_offset=37), Name('WeakLinkMixIn', Load(), lineno=191, col_offset=49), Name('FunctionGenerator', Load(), lineno=191, col_offset=64)], [Pass( lineno=191, col_offset=84)], [], lineno=191, col_offset=0), ClassDef('OSErrWeakLinkMethodGenerator', [Name('OSErrMixIn', Load(), lineno=192, col_offset=35), Name('WeakLinkMixIn', Load(), lineno=192, col_offset=47), Name('MethodGenerator', Load(), lineno=192, col_offset=62)], [Pass( lineno=192, col_offset=80)], [], lineno=192, col_offset=0), ClassDef('MacModule', [Name('Module', Load(), lineno=194, col_offset=16)], [Expr(Str('Subclass which gets the exception initializer from macglue.c', lineno=195, col_offset=4), lineno=195, col_offset=4), FunctionDef('exceptionInitializer', arguments([Name('self', Param(), lineno=196, col_offset=29)], None, None, []), [Return(Str('PyMac_GetOSErrException()', lineno=197, col_offset=15), lineno=197, col_offset=8)], [], lineno=196, col_offset=4)], [], lineno=194, col_offset=0)])
