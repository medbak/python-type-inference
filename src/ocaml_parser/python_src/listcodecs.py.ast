Module([Expr(Str(' List all available codec modules.\n\n(c) Copyright 2005, Marc-Andre Lemburg (mal@lemburg.com).\n\n    Licensed to PSF under a Contributor Agreement.\n\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('os', None), alias('codecs', None), alias('encodings', None)], lineno=9, col_offset=0), Assign([Name('_debug', Store(), lineno=11, col_offset=0)], Num(0, lineno=11, col_offset=9), lineno=11, col_offset=0), FunctionDef('listcodecs', arguments([Name('dir', Param(), lineno=13, col_offset=15)], None, None, []), [Assign([Name('names', Store(), lineno=14, col_offset=4)], List([], Load(), lineno=14, col_offset=12), lineno=14, col_offset=4), For(Name('filename', Store(), lineno=15, col_offset=8), Call(Attribute(Name('os', Load(), lineno=15, col_offset=20), 'listdir', Load(), lineno=15, col_offset=20), [Name('dir', Load(), lineno=15, col_offset=31)], [], None, None, lineno=15, col_offset=20), [If(Compare(Subscript(Name('filename', Load(), lineno=16, col_offset=11), Slice(Num(-3, lineno=16, col_offset=21), None, None), Load(), lineno=16, col_offset=11), [NotEq()], [Str('.py', lineno=16, col_offset=28)], lineno=16, col_offset=11), [Continue( lineno=17, col_offset=12)], [], lineno=16, col_offset=8), Assign([Name('name', Store(), lineno=18, col_offset=8)], Subscript(Name('filename', Load(), lineno=18, col_offset=15), Slice(None, Num(-3, lineno=18, col_offset=26), None), Load(), lineno=18, col_offset=15), lineno=18, col_offset=8), TryExcept([Expr(Call(Attribute(Name('codecs', Load(), lineno=21, col_offset=12), 'lookup', Load(), lineno=21, col_offset=12), [Name('name', Load(), lineno=21, col_offset=26)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=12)], [ExceptHandler(Name('LookupError', Load(), lineno=22, col_offset=15), None, [Continue( lineno=24, col_offset=12)], lineno=22, col_offset=8), ExceptHandler(Name('Exception', Load(), lineno=25, col_offset=15), Name('reason', Store(), lineno=25, col_offset=26), [If(Name('_debug', Load(), lineno=28, col_offset=15), [Print(None, [BinOp(Str('* problem importing codec %r: %s', lineno=29, col_offset=22), Mod(), Tuple([Name('name', Load(), lineno=30, col_offset=23), Name('reason', Load(), lineno=30, col_offset=29)], Load(), lineno=30, col_offset=23), lineno=29, col_offset=22)], True, lineno=29, col_offset=16)], [], lineno=28, col_offset=12)], lineno=25, col_offset=8)], [], lineno=20, col_offset=8), Expr(Call(Attribute(Name('names', Load(), lineno=31, col_offset=8), 'append', Load(), lineno=31, col_offset=8), [Name('name', Load(), lineno=31, col_offset=21)], [], None, None, lineno=31, col_offset=8), lineno=31, col_offset=8)], [], lineno=15, col_offset=4), Return(Name('names', Load(), lineno=32, col_offset=11), lineno=32, col_offset=4)], [], lineno=13, col_offset=0), If(Compare(Name('__name__', Load(), lineno=35, col_offset=3), [Eq()], [Str('__main__', lineno=35, col_offset=15)], lineno=35, col_offset=3), [Assign([Name('names', Store(), lineno=36, col_offset=4)], Call(Name('listcodecs', Load(), lineno=36, col_offset=12), [Subscript(Attribute(Name('encodings', Load(), lineno=36, col_offset=23), '__path__', Load(), lineno=36, col_offset=23), Index(Num(0, lineno=36, col_offset=42)), Load(), lineno=36, col_offset=23)], [], None, None, lineno=36, col_offset=12), lineno=36, col_offset=4), Expr(Call(Attribute(Name('names', Load(), lineno=37, col_offset=4), 'sort', Load(), lineno=37, col_offset=4), [], [], None, None, lineno=37, col_offset=4), lineno=37, col_offset=4), Print(None, [Str('all_codecs = [', lineno=38, col_offset=10)], True, lineno=38, col_offset=4), For(Name('name', Store(), lineno=39, col_offset=8), Name('names', Load(), lineno=39, col_offset=16), [Print(None, [BinOp(Str('    %r,', lineno=40, col_offset=14), Mod(), Name('name', Load(), lineno=40, col_offset=26), lineno=40, col_offset=14)], True, lineno=40, col_offset=8)], [], lineno=39, col_offset=4), Print(None, [Str(']', lineno=41, col_offset=10)], True, lineno=41, col_offset=4)], [], lineno=35, col_offset=0)])
