Module([Import([alias('hmac', None)], lineno=1, col_offset=0), Import([alias('hashlib', None)], lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=3, col_offset=0), Import([alias('warnings', None)], lineno=4, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), ClassDef('TestVectorsTestCase', [Attribute(Name('unittest', Load(), lineno=7, col_offset=26), 'TestCase', Load(), lineno=7, col_offset=26)], [FunctionDef('test_md5_vectors', arguments([Name('self', Param(), lineno=9, col_offset=25)], None, None, []), [FunctionDef('md5test', arguments([Name('key', Param(), lineno=12, col_offset=20), Name('data', Param(), lineno=12, col_offset=25), Name('digest', Param(), lineno=12, col_offset=31)], None, None, []), [Assign([Name('h', Store(), lineno=13, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=13, col_offset=16), 'HMAC', Load(), lineno=13, col_offset=16), [Name('key', Load(), lineno=13, col_offset=26), Name('data', Load(), lineno=13, col_offset=31)], [], None, None, lineno=13, col_offset=16), lineno=13, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=14, col_offset=12), 'assertEqual', Load(), lineno=14, col_offset=12), [Call(Attribute(Call(Attribute(Name('h', Load(), lineno=14, col_offset=29), 'hexdigest', Load(), lineno=14, col_offset=29), [], [], None, None, lineno=14, col_offset=29), 'upper', Load(), lineno=14, col_offset=29), [], [], None, None, lineno=14, col_offset=29), Call(Attribute(Name('digest', Load(), lineno=14, col_offset=52), 'upper', Load(), lineno=14, col_offset=52), [], [], None, None, lineno=14, col_offset=52)], [], None, None, lineno=14, col_offset=12), lineno=14, col_offset=12)], [], lineno=12, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=16, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=16, col_offset=16), [Num(11, lineno=16, col_offset=20)], [], None, None, lineno=16, col_offset=16), Mult(), Num(16, lineno=16, col_offset=28), lineno=16, col_offset=16), Str('Hi There', lineno=17, col_offset=16), Str('9294727A3638BB1C13F48EF8158BFC9D', lineno=18, col_offset=16)], [], None, None, lineno=16, col_offset=8), lineno=16, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=20, col_offset=8), [Str('Jefe', lineno=20, col_offset=16), Str('what do ya want for nothing?', lineno=21, col_offset=16), Str('750c783e6ab0b503eaa86e310a5db738', lineno=22, col_offset=16)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=24, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=24, col_offset=16), [Num(170, lineno=24, col_offset=20)], [], None, None, lineno=24, col_offset=16), Mult(), Num(16, lineno=24, col_offset=26), lineno=24, col_offset=16), BinOp(Call(Name('chr', Load(), lineno=25, col_offset=16), [Num(221, lineno=25, col_offset=20)], [], None, None, lineno=25, col_offset=16), Mult(), Num(50, lineno=25, col_offset=26), lineno=25, col_offset=16), Str('56be34521d144c88dbb8c733f0e8b3f6', lineno=26, col_offset=16)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=28, col_offset=8), [Call(Attribute(Str('', lineno=28, col_offset=16), 'join', Load(), lineno=28, col_offset=16), [ListComp(Call(Name('chr', Load(), lineno=28, col_offset=25), [Name('i', Load(), lineno=28, col_offset=29)], [], None, None, lineno=28, col_offset=25), [comprehension(Name('i', Store(), lineno=28, col_offset=36), Call(Name('range', Load(), lineno=28, col_offset=41), [Num(1, lineno=28, col_offset=47), Num(26, lineno=28, col_offset=50)], [], None, None, lineno=28, col_offset=41), [])], lineno=28, col_offset=25)], [], None, None, lineno=28, col_offset=16), BinOp(Call(Name('chr', Load(), lineno=29, col_offset=16), [Num(205, lineno=29, col_offset=20)], [], None, None, lineno=29, col_offset=16), Mult(), Num(50, lineno=29, col_offset=28), lineno=29, col_offset=16), Str('697eaf0aca3a3aea3a75164746ffaa79', lineno=30, col_offset=16)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=32, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=32, col_offset=16), [Num(12, lineno=32, col_offset=20)], [], None, None, lineno=32, col_offset=16), Mult(), Num(16, lineno=32, col_offset=28), lineno=32, col_offset=16), Str('Test With Truncation', lineno=33, col_offset=16), Str('56461ef2342edc00f9bab995690efd4c', lineno=34, col_offset=16)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=36, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=36, col_offset=16), [Num(170, lineno=36, col_offset=20)], [], None, None, lineno=36, col_offset=16), Mult(), Num(80, lineno=36, col_offset=28), lineno=36, col_offset=16), Str('Test Using Larger Than Block-Size Key - Hash Key First', lineno=37, col_offset=16), Str('6b1ab7fe4bd7bf8f0b62e6ce61b9d0cd', lineno=38, col_offset=16)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Expr(Call(Name('md5test', Load(), lineno=40, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=40, col_offset=16), [Num(170, lineno=40, col_offset=20)], [], None, None, lineno=40, col_offset=16), Mult(), Num(80, lineno=40, col_offset=28), lineno=40, col_offset=16), Str('Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data', lineno=41, col_offset=17), Str('6f630fad67cda0ee1fb1f562db3aa53e', lineno=43, col_offset=16)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_sha_vectors', arguments([Name('self', Param(), lineno=45, col_offset=25)], None, None, []), [FunctionDef('shatest', arguments([Name('key', Param(), lineno=46, col_offset=20), Name('data', Param(), lineno=46, col_offset=25), Name('digest', Param(), lineno=46, col_offset=31)], None, None, []), [Assign([Name('h', Store(), lineno=47, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=47, col_offset=16), 'HMAC', Load(), lineno=47, col_offset=16), [Name('key', Load(), lineno=47, col_offset=26), Name('data', Load(), lineno=47, col_offset=31)], [keyword('digestmod', Attribute(Name('hashlib', Load(), lineno=47, col_offset=47), 'sha1', Load(), lineno=47, col_offset=47))], None, None, lineno=47, col_offset=16), lineno=47, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=48, col_offset=12), 'assertEqual', Load(), lineno=48, col_offset=12), [Call(Attribute(Call(Attribute(Name('h', Load(), lineno=48, col_offset=29), 'hexdigest', Load(), lineno=48, col_offset=29), [], [], None, None, lineno=48, col_offset=29), 'upper', Load(), lineno=48, col_offset=29), [], [], None, None, lineno=48, col_offset=29), Call(Attribute(Name('digest', Load(), lineno=48, col_offset=52), 'upper', Load(), lineno=48, col_offset=52), [], [], None, None, lineno=48, col_offset=52)], [], None, None, lineno=48, col_offset=12), lineno=48, col_offset=12)], [], lineno=46, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=50, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=50, col_offset=16), [Num(11, lineno=50, col_offset=20)], [], None, None, lineno=50, col_offset=16), Mult(), Num(20, lineno=50, col_offset=28), lineno=50, col_offset=16), Str('Hi There', lineno=51, col_offset=16), Str('b617318655057264e28bc0b6fb378c8ef146be00', lineno=52, col_offset=16)], [], None, None, lineno=50, col_offset=8), lineno=50, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=54, col_offset=8), [Str('Jefe', lineno=54, col_offset=16), Str('what do ya want for nothing?', lineno=55, col_offset=16), Str('effcdf6ae5eb2fa2d27416d5f184df9c259a7c79', lineno=56, col_offset=16)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=58, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=58, col_offset=16), [Num(170, lineno=58, col_offset=20)], [], None, None, lineno=58, col_offset=16), Mult(), Num(20, lineno=58, col_offset=26), lineno=58, col_offset=16), BinOp(Call(Name('chr', Load(), lineno=59, col_offset=16), [Num(221, lineno=59, col_offset=20)], [], None, None, lineno=59, col_offset=16), Mult(), Num(50, lineno=59, col_offset=26), lineno=59, col_offset=16), Str('125d7342b9ac11cd91a39af48aa17b4f63f175d3', lineno=60, col_offset=16)], [], None, None, lineno=58, col_offset=8), lineno=58, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=62, col_offset=8), [Call(Attribute(Str('', lineno=62, col_offset=16), 'join', Load(), lineno=62, col_offset=16), [ListComp(Call(Name('chr', Load(), lineno=62, col_offset=25), [Name('i', Load(), lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=25), [comprehension(Name('i', Store(), lineno=62, col_offset=36), Call(Name('range', Load(), lineno=62, col_offset=41), [Num(1, lineno=62, col_offset=47), Num(26, lineno=62, col_offset=50)], [], None, None, lineno=62, col_offset=41), [])], lineno=62, col_offset=25)], [], None, None, lineno=62, col_offset=16), BinOp(Call(Name('chr', Load(), lineno=63, col_offset=16), [Num(205, lineno=63, col_offset=20)], [], None, None, lineno=63, col_offset=16), Mult(), Num(50, lineno=63, col_offset=28), lineno=63, col_offset=16), Str('4c9007f4026250c6bc8414f9bf50c86c2d7235da', lineno=64, col_offset=16)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=66, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=66, col_offset=16), [Num(12, lineno=66, col_offset=20)], [], None, None, lineno=66, col_offset=16), Mult(), Num(20, lineno=66, col_offset=28), lineno=66, col_offset=16), Str('Test With Truncation', lineno=67, col_offset=16), Str('4c1a03424b55e07fe7f27be1d58bb9324a9a5a04', lineno=68, col_offset=16)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=70, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=70, col_offset=16), [Num(170, lineno=70, col_offset=20)], [], None, None, lineno=70, col_offset=16), Mult(), Num(80, lineno=70, col_offset=28), lineno=70, col_offset=16), Str('Test Using Larger Than Block-Size Key - Hash Key First', lineno=71, col_offset=16), Str('aa4ae5e15272d00e95705637ce8a3b55ed402112', lineno=72, col_offset=16)], [], None, None, lineno=70, col_offset=8), lineno=70, col_offset=8), Expr(Call(Name('shatest', Load(), lineno=74, col_offset=8), [BinOp(Call(Name('chr', Load(), lineno=74, col_offset=16), [Num(170, lineno=74, col_offset=20)], [], None, None, lineno=74, col_offset=16), Mult(), Num(80, lineno=74, col_offset=28), lineno=74, col_offset=16), Str('Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data', lineno=75, col_offset=17), Str('e8e99d0f45237d786d6bbaa7965c7808bbff1a91', lineno=77, col_offset=16)], [], None, None, lineno=74, col_offset=8), lineno=74, col_offset=8)], [], lineno=45, col_offset=4), FunctionDef('_rfc4231_test_cases', arguments([Name('self', Param(), lineno=79, col_offset=28), Name('hashfunc', Param(), lineno=79, col_offset=34)], None, None, []), [FunctionDef('hmactest', arguments([Name('key', Param(), lineno=80, col_offset=21), Name('data', Param(), lineno=80, col_offset=26), Name('hexdigests', Param(), lineno=80, col_offset=32)], None, None, []), [Assign([Name('h', Store(), lineno=81, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=81, col_offset=16), 'HMAC', Load(), lineno=81, col_offset=16), [Name('key', Load(), lineno=81, col_offset=26), Name('data', Load(), lineno=81, col_offset=31)], [keyword('digestmod', Name('hashfunc', Load(), lineno=81, col_offset=47))], None, None, lineno=81, col_offset=16), lineno=81, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=82, col_offset=12), 'assertEqual', Load(), lineno=82, col_offset=12), [Call(Attribute(Call(Attribute(Name('h', Load(), lineno=82, col_offset=29), 'hexdigest', Load(), lineno=82, col_offset=29), [], [], None, None, lineno=82, col_offset=29), 'lower', Load(), lineno=82, col_offset=29), [], [], None, None, lineno=82, col_offset=29), Subscript(Name('hexdigests', Load(), lineno=82, col_offset=52), Index(Name('hashfunc', Load(), lineno=82, col_offset=63)), Load(), lineno=82, col_offset=52)], [], None, None, lineno=82, col_offset=12), lineno=82, col_offset=12)], [], lineno=80, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=85, col_offset=8), [], [keyword('key', BinOp(Str('\x0b', lineno=85, col_offset=23), Mult(), Num(20, lineno=85, col_offset=30), lineno=85, col_offset=23)), keyword('data', Str('Hi There', lineno=86, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=88, col_offset=19), 'sha224', Load(), lineno=88, col_offset=19), Attribute(Name('hashlib', Load(), lineno=90, col_offset=19), 'sha256', Load(), lineno=90, col_offset=19), Attribute(Name('hashlib', Load(), lineno=92, col_offset=19), 'sha384', Load(), lineno=92, col_offset=19), Attribute(Name('hashlib', Load(), lineno=95, col_offset=19), 'sha512', Load(), lineno=95, col_offset=19)], [Str('896fb1128abbdf196832107cd49df33f47b4b1169912ba4f53684b22', lineno=88, col_offset=35), Str('b0344c61d8db38535ca8afceaf0bf12b881dc200c9833da726e9376c2e32cff7', lineno=90, col_offset=35), Str('afd03944d84895626b0825f4ab46907f15f9dadbe4101ec682aa034c7cebc59cfaea9ea9076ede7f4af152e8b2fa9cb6', lineno=92, col_offset=35), Str('87aa7cdea5ef619d4ff0b4241a1d6cb02379f4e2ce4ec2787ad0b30545e17cdedaa833b7d6b8a702038b274eaea3f4e4be9d914eeb61f1702e696c203a126854', lineno=95, col_offset=35)], lineno=87, col_offset=30))], None, None, lineno=85, col_offset=8), lineno=85, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=102, col_offset=8), [], [keyword('key', Str('Jefe', lineno=102, col_offset=23)), keyword('data', Str('what do ya want for nothing?', lineno=103, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=105, col_offset=19), 'sha224', Load(), lineno=105, col_offset=19), Attribute(Name('hashlib', Load(), lineno=107, col_offset=19), 'sha256', Load(), lineno=107, col_offset=19), Attribute(Name('hashlib', Load(), lineno=109, col_offset=19), 'sha384', Load(), lineno=109, col_offset=19), Attribute(Name('hashlib', Load(), lineno=112, col_offset=19), 'sha512', Load(), lineno=112, col_offset=19)], [Str('a30e01098bc6dbbf45690f3a7e9e6d0f8bbea2a39e6148008fd05e44', lineno=105, col_offset=35), Str('5bdcc146bf60754e6a042426089575c75a003f089d2739839dec58b964ec3843', lineno=107, col_offset=35), Str('af45d2e376484031617f78d2b58a6b1b9c7ef464f5a01b47e42ec3736322445e8e2240ca5e69e2c78b3239ecfab21649', lineno=109, col_offset=35), Str('164b7a7bfcf819e2e395fbe73b56e0a387bd64222e831fd610270cd7ea2505549758bf75c05a994a6d034f65f8f0e6fdcaeab1a34d4a6b4b636e070a38bce737', lineno=112, col_offset=35)], lineno=104, col_offset=30))], None, None, lineno=102, col_offset=8), lineno=102, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=119, col_offset=8), [], [keyword('key', BinOp(Str('\xaa', lineno=119, col_offset=23), Mult(), Num(20, lineno=119, col_offset=30), lineno=119, col_offset=23)), keyword('data', BinOp(Str('\xdd', lineno=120, col_offset=24), Mult(), Num(50, lineno=120, col_offset=31), lineno=120, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=122, col_offset=19), 'sha224', Load(), lineno=122, col_offset=19), Attribute(Name('hashlib', Load(), lineno=124, col_offset=19), 'sha256', Load(), lineno=124, col_offset=19), Attribute(Name('hashlib', Load(), lineno=126, col_offset=19), 'sha384', Load(), lineno=126, col_offset=19), Attribute(Name('hashlib', Load(), lineno=129, col_offset=19), 'sha512', Load(), lineno=129, col_offset=19)], [Str('7fb3cb3588c6c1f6ffa9694d7d6ad2649365b0c1f65d69d1ec8333ea', lineno=122, col_offset=35), Str('773ea91e36800e46854db8ebd09181a72959098b3ef8c122d9635514ced565fe', lineno=124, col_offset=35), Str('88062608d3e6ad8a0aa2ace014c8a86f0aa635d947ac9febe83ef4e55966144b2a5ab39dc13814b94e3ab6e101a34f27', lineno=126, col_offset=35), Str('fa73b0089d56a284efb0f0756c890be9b1b5dbdd8ee81a3655f83e33b2279d39bf3e848279a722c806b485a47e67c807b946a337bee8942674278859e13292fb', lineno=129, col_offset=35)], lineno=121, col_offset=30))], None, None, lineno=119, col_offset=8), lineno=119, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=136, col_offset=8), [], [keyword('key', Call(Attribute(Str('', lineno=136, col_offset=23), 'join', Load(), lineno=136, col_offset=23), [ListComp(Call(Name('chr', Load(), lineno=136, col_offset=32), [Name('x', Load(), lineno=136, col_offset=36)], [], None, None, lineno=136, col_offset=32), [comprehension(Name('x', Store(), lineno=136, col_offset=43), Call(Name('xrange', Load(), lineno=136, col_offset=48), [Num(1, lineno=136, col_offset=55), BinOp(Num(25, lineno=136, col_offset=61), Add(), Num(1, lineno=136, col_offset=66), lineno=136, col_offset=61)], [], None, None, lineno=136, col_offset=48), [])], lineno=136, col_offset=32)], [], None, None, lineno=136, col_offset=23)), keyword('data', BinOp(Str('\xcd', lineno=137, col_offset=24), Mult(), Num(50, lineno=137, col_offset=31), lineno=137, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=139, col_offset=19), 'sha224', Load(), lineno=139, col_offset=19), Attribute(Name('hashlib', Load(), lineno=141, col_offset=19), 'sha256', Load(), lineno=141, col_offset=19), Attribute(Name('hashlib', Load(), lineno=143, col_offset=19), 'sha384', Load(), lineno=143, col_offset=19), Attribute(Name('hashlib', Load(), lineno=146, col_offset=19), 'sha512', Load(), lineno=146, col_offset=19)], [Str('6c11506874013cac6a2abc1bb382627cec6a90d86efc012de7afec5a', lineno=139, col_offset=35), Str('82558a389a443c0ea4cc819899f2083a85f0faa3e578f8077a2e3ff46729665b', lineno=141, col_offset=35), Str('3e8a69b7783c25851933ab6290af6ca77a9981480850009cc5577c6e1f573b4e6801dd23c4a7d679ccf8a386c674cffb', lineno=143, col_offset=35), Str('b0ba465637458c6990e5a8c5f61d4af7e576d97ff94b872de76f8050361ee3dba91ca5c11aa25eb4d679275cc5788063a5f19741120c4f2de2adebeb10a298dd', lineno=146, col_offset=35)], lineno=138, col_offset=30))], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=153, col_offset=8), [], [keyword('key', BinOp(Str('\xaa', lineno=153, col_offset=23), Mult(), Num(131, lineno=153, col_offset=30), lineno=153, col_offset=23)), keyword('data', Str('Test Using Larger Than Block-Size Key - Hash Key First', lineno=154, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=157, col_offset=19), 'sha224', Load(), lineno=157, col_offset=19), Attribute(Name('hashlib', Load(), lineno=159, col_offset=19), 'sha256', Load(), lineno=159, col_offset=19), Attribute(Name('hashlib', Load(), lineno=161, col_offset=19), 'sha384', Load(), lineno=161, col_offset=19), Attribute(Name('hashlib', Load(), lineno=164, col_offset=19), 'sha512', Load(), lineno=164, col_offset=19)], [Str('95e9a0db962095adaebe9b2d6f0dbce2d499f112f2d2b7273fa6870e', lineno=157, col_offset=35), Str('60e431591ee0b67f0d8a26aacbf5b77f8e0bc6213728c5140546040f0ee37f54', lineno=159, col_offset=35), Str('4ece084485813e9088d2c63a041bc5b44f9ef1012a2b588f3cd11f05033ac4c60c2ef6ab4030fe8296248df163f44952', lineno=161, col_offset=35), Str('80b24263c7c1a3ebb71493c1dd7be8b49b46d1f41b4aeec1121b013783f8f3526b56d037e05f2598bd0fd2215d6a1e5295e64f73f63f0aec8b915a985d786598', lineno=164, col_offset=35)], lineno=156, col_offset=30))], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8), Expr(Call(Name('hmactest', Load(), lineno=171, col_offset=8), [], [keyword('key', BinOp(Str('\xaa', lineno=171, col_offset=23), Mult(), Num(131, lineno=171, col_offset=30), lineno=171, col_offset=23)), keyword('data', Str('This is a test using a larger than block-size key and a larger than block-size data. The key needs to be hashed before being used by the HMAC algorithm.', lineno=172, col_offset=24)), keyword('hexdigests', Dict([Attribute(Name('hashlib', Load(), lineno=178, col_offset=19), 'sha224', Load(), lineno=178, col_offset=19), Attribute(Name('hashlib', Load(), lineno=180, col_offset=19), 'sha256', Load(), lineno=180, col_offset=19), Attribute(Name('hashlib', Load(), lineno=182, col_offset=19), 'sha384', Load(), lineno=182, col_offset=19), Attribute(Name('hashlib', Load(), lineno=185, col_offset=19), 'sha512', Load(), lineno=185, col_offset=19)], [Str('3a854166ac5d9f023f54d517d0b39dbd946770db9c2b95c9f6f565d1', lineno=178, col_offset=35), Str('9b09ffa71b942fcb27635fbcd5b0e944bfdc63644f0713938a7f51535c3a35e2', lineno=180, col_offset=35), Str('6617178e941f020d351e2f254e8fd32c602420feb0b8fb9adccebb82461e99c5a678cc31e799176d3860e6110c46523e', lineno=182, col_offset=35), Str('e37b6a775dc87dbaa4dfa9f96e5e3ffddebd71f8867289865df5a32d20cdc944b6022cac3c4982b10d5eeb55c3e4de15134676fb6de0446065c97440fa8c6a58', lineno=185, col_offset=35)], lineno=177, col_offset=30))], None, None, lineno=171, col_offset=8), lineno=171, col_offset=8)], [], lineno=79, col_offset=4), FunctionDef('test_sha224_rfc4231', arguments([Name('self', Param(), lineno=191, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=192, col_offset=8), '_rfc4231_test_cases', Load(), lineno=192, col_offset=8), [Attribute(Name('hashlib', Load(), lineno=192, col_offset=33), 'sha224', Load(), lineno=192, col_offset=33)], [], None, None, lineno=192, col_offset=8), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_sha256_rfc4231', arguments([Name('self', Param(), lineno=194, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=195, col_offset=8), '_rfc4231_test_cases', Load(), lineno=195, col_offset=8), [Attribute(Name('hashlib', Load(), lineno=195, col_offset=33), 'sha256', Load(), lineno=195, col_offset=33)], [], None, None, lineno=195, col_offset=8), lineno=195, col_offset=8)], [], lineno=194, col_offset=4), FunctionDef('test_sha384_rfc4231', arguments([Name('self', Param(), lineno=197, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=198, col_offset=8), '_rfc4231_test_cases', Load(), lineno=198, col_offset=8), [Attribute(Name('hashlib', Load(), lineno=198, col_offset=33), 'sha384', Load(), lineno=198, col_offset=33)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('test_sha512_rfc4231', arguments([Name('self', Param(), lineno=200, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=201, col_offset=8), '_rfc4231_test_cases', Load(), lineno=201, col_offset=8), [Attribute(Name('hashlib', Load(), lineno=201, col_offset=33), 'sha512', Load(), lineno=201, col_offset=33)], [], None, None, lineno=201, col_offset=8), lineno=201, col_offset=8)], [], lineno=200, col_offset=4), FunctionDef('test_legacy_block_size_warnings', arguments([Name('self', Param(), lineno=203, col_offset=40)], None, None, []), [ClassDef('MockCrazyHash', [Name('object', Load(), lineno=204, col_offset=28)], [Expr(Str("Ain't no block_size attribute here.", lineno=205, col_offset=12), lineno=205, col_offset=12), FunctionDef('__init__', arguments([Name('self', Param(), lineno=206, col_offset=25)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=207, col_offset=16), '_x', Store(), lineno=207, col_offset=16)], Call(Attribute(Name('hashlib', Load(), lineno=207, col_offset=26), 'sha1', Load(), lineno=207, col_offset=26), [], [], Name('args', Load(), lineno=207, col_offset=40), None, lineno=207, col_offset=26), lineno=207, col_offset=16), Assign([Attribute(Name('self', Load(), lineno=208, col_offset=16), 'digest_size', Store(), lineno=208, col_offset=16)], Attribute(Attribute(Name('self', Load(), lineno=208, col_offset=35), '_x', Load(), lineno=208, col_offset=35), 'digest_size', Load(), lineno=208, col_offset=35), lineno=208, col_offset=16)], [], lineno=206, col_offset=12), FunctionDef('update', arguments([Name('self', Param(), lineno=209, col_offset=23), Name('v', Param(), lineno=209, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=210, col_offset=16), '_x', Load(), lineno=210, col_offset=16), 'update', Load(), lineno=210, col_offset=16), [Name('v', Load(), lineno=210, col_offset=31)], [], None, None, lineno=210, col_offset=16), lineno=210, col_offset=16)], [], lineno=209, col_offset=12), FunctionDef('digest', arguments([Name('self', Param(), lineno=211, col_offset=23)], None, None, []), [Return(Call(Attribute(Attribute(Name('self', Load(), lineno=212, col_offset=23), '_x', Load(), lineno=212, col_offset=23), 'digest', Load(), lineno=212, col_offset=23), [], [], None, None, lineno=212, col_offset=23), lineno=212, col_offset=16)], [], lineno=211, col_offset=12)], [], lineno=204, col_offset=8), With(Call(Attribute(Name('warnings', Load(), lineno=214, col_offset=13), 'catch_warnings', Load(), lineno=214, col_offset=13), [], [], None, None, lineno=214, col_offset=13), None, [Expr(Call(Attribute(Name('warnings', Load(), lineno=215, col_offset=12), 'simplefilter', Load(), lineno=215, col_offset=12), [Str('error', lineno=215, col_offset=34), Name('RuntimeWarning', Load(), lineno=215, col_offset=43)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=216, col_offset=17), 'assertRaises', Load(), lineno=216, col_offset=17), [Name('RuntimeWarning', Load(), lineno=216, col_offset=35)], [], None, None, lineno=216, col_offset=17), None, [Expr(Call(Attribute(Name('hmac', Load(), lineno=217, col_offset=16), 'HMAC', Load(), lineno=217, col_offset=16), [Str('a', lineno=217, col_offset=26), Str('b', lineno=217, col_offset=31)], [keyword('digestmod', Name('MockCrazyHash', Load(), lineno=217, col_offset=46))], None, None, lineno=217, col_offset=16), lineno=217, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=218, col_offset=16), 'fail', Load(), lineno=218, col_offset=16), [Str('Expected warning about missing block_size', lineno=218, col_offset=26)], [], None, None, lineno=218, col_offset=16), lineno=218, col_offset=16)], lineno=216, col_offset=17), Assign([Attribute(Name('MockCrazyHash', Load(), lineno=220, col_offset=12), 'block_size', Store(), lineno=220, col_offset=12)], Num(1, lineno=220, col_offset=39), lineno=220, col_offset=12), With(Call(Attribute(Name('self', Load(), lineno=221, col_offset=17), 'assertRaises', Load(), lineno=221, col_offset=17), [Name('RuntimeWarning', Load(), lineno=221, col_offset=35)], [], None, None, lineno=221, col_offset=17), None, [Expr(Call(Attribute(Name('hmac', Load(), lineno=222, col_offset=16), 'HMAC', Load(), lineno=222, col_offset=16), [Str('a', lineno=222, col_offset=26), Str('b', lineno=222, col_offset=31)], [keyword('digestmod', Name('MockCrazyHash', Load(), lineno=222, col_offset=46))], None, None, lineno=222, col_offset=16), lineno=222, col_offset=16), Expr(Call(Attribute(Name('self', Load(), lineno=223, col_offset=16), 'fail', Load(), lineno=223, col_offset=16), [Str('Expected warning about small block_size', lineno=223, col_offset=26)], [], None, None, lineno=223, col_offset=16), lineno=223, col_offset=16)], lineno=221, col_offset=17)], lineno=214, col_offset=13)], [], lineno=203, col_offset=4)], [], lineno=7, col_offset=0), ClassDef('ConstructorTestCase', [Attribute(Name('unittest', Load(), lineno=227, col_offset=26), 'TestCase', Load(), lineno=227, col_offset=26)], [FunctionDef('test_normal', arguments([Name('self', Param(), lineno=229, col_offset=20)], None, None, []), [Assign([Name('failed', Store(), lineno=231, col_offset=8)], Num(0, lineno=231, col_offset=17), lineno=231, col_offset=8), TryExcept([Assign([Name('h', Store(), lineno=233, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=233, col_offset=16), 'HMAC', Load(), lineno=233, col_offset=16), [Str('key', lineno=233, col_offset=26)], [], None, None, lineno=233, col_offset=16), lineno=233, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=12), 'fail', Load(), lineno=235, col_offset=12), [Str('Standard constructor call raised exception.', lineno=235, col_offset=22)], [], None, None, lineno=235, col_offset=12), lineno=235, col_offset=12)], lineno=234, col_offset=8)], [], lineno=232, col_offset=8)], [], lineno=229, col_offset=4), FunctionDef('test_withtext', arguments([Name('self', Param(), lineno=237, col_offset=22)], None, None, []), [TryExcept([Assign([Name('h', Store(), lineno=240, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=240, col_offset=16), 'HMAC', Load(), lineno=240, col_offset=16), [Str('key', lineno=240, col_offset=26), Str('hash this!', lineno=240, col_offset=33)], [], None, None, lineno=240, col_offset=16), lineno=240, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=12), 'fail', Load(), lineno=242, col_offset=12), [Str('Constructor call with text argument raised exception.', lineno=242, col_offset=22)], [], None, None, lineno=242, col_offset=12), lineno=242, col_offset=12)], lineno=241, col_offset=8)], [], lineno=239, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('test_withmodule', arguments([Name('self', Param(), lineno=244, col_offset=24)], None, None, []), [TryExcept([Assign([Name('h', Store(), lineno=247, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=247, col_offset=16), 'HMAC', Load(), lineno=247, col_offset=16), [Str('key', lineno=247, col_offset=26), Str('', lineno=247, col_offset=33), Attribute(Name('hashlib', Load(), lineno=247, col_offset=37), 'sha1', Load(), lineno=247, col_offset=37)], [], None, None, lineno=247, col_offset=16), lineno=247, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=12), 'fail', Load(), lineno=249, col_offset=12), [Str('Constructor call with hashlib.sha1 raised exception.', lineno=249, col_offset=22)], [], None, None, lineno=249, col_offset=12), lineno=249, col_offset=12)], lineno=248, col_offset=8)], [], lineno=246, col_offset=8)], [], lineno=244, col_offset=4)], [], lineno=227, col_offset=0), ClassDef('SanityTestCase', [Attribute(Name('unittest', Load(), lineno=251, col_offset=21), 'TestCase', Load(), lineno=251, col_offset=21)], [FunctionDef('test_default_is_md5', arguments([Name('self', Param(), lineno=253, col_offset=28)], None, None, []), [Assign([Name('h', Store(), lineno=256, col_offset=8)], Call(Attribute(Name('hmac', Load(), lineno=256, col_offset=12), 'HMAC', Load(), lineno=256, col_offset=12), [Str('key', lineno=256, col_offset=22)], [], None, None, lineno=256, col_offset=12), lineno=256, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=257, col_offset=8), 'assertTrue', Load(), lineno=257, col_offset=8), [Compare(Attribute(Name('h', Load(), lineno=257, col_offset=24), 'digest_cons', Load(), lineno=257, col_offset=24), [Eq()], [Attribute(Name('hashlib', Load(), lineno=257, col_offset=41), 'md5', Load(), lineno=257, col_offset=41)], lineno=257, col_offset=24)], [], None, None, lineno=257, col_offset=8), lineno=257, col_offset=8)], [], lineno=253, col_offset=4), FunctionDef('test_exercise_all_methods', arguments([Name('self', Param(), lineno=259, col_offset=34)], None, None, []), [TryExcept([Assign([Name('h', Store(), lineno=263, col_offset=12)], Call(Attribute(Name('hmac', Load(), lineno=263, col_offset=16), 'HMAC', Load(), lineno=263, col_offset=16), [Str('my secret key', lineno=263, col_offset=26)], [], None, None, lineno=263, col_offset=16), lineno=263, col_offset=12), Expr(Call(Attribute(Name('h', Load(), lineno=264, col_offset=12), 'update', Load(), lineno=264, col_offset=12), [Str('compute the hash of this text!', lineno=264, col_offset=21)], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=12), Assign([Name('dig', Store(), lineno=265, col_offset=12)], Call(Attribute(Name('h', Load(), lineno=265, col_offset=18), 'digest', Load(), lineno=265, col_offset=18), [], [], None, None, lineno=265, col_offset=18), lineno=265, col_offset=12), Assign([Name('dig', Store(), lineno=266, col_offset=12)], Call(Attribute(Name('h', Load(), lineno=266, col_offset=18), 'hexdigest', Load(), lineno=266, col_offset=18), [], [], None, None, lineno=266, col_offset=18), lineno=266, col_offset=12), Assign([Name('h2', Store(), lineno=267, col_offset=12)], Call(Attribute(Name('h', Load(), lineno=267, col_offset=17), 'copy', Load(), lineno=267, col_offset=17), [], [], None, None, lineno=267, col_offset=17), lineno=267, col_offset=12)], [ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=269, col_offset=12), 'fail', Load(), lineno=269, col_offset=12), [Str('Exception raised during normal usage of HMAC class.', lineno=269, col_offset=22)], [], None, None, lineno=269, col_offset=12), lineno=269, col_offset=12)], lineno=268, col_offset=8)], [], lineno=262, col_offset=8)], [], lineno=259, col_offset=4)], [], lineno=251, col_offset=0), ClassDef('CopyTestCase', [Attribute(Name('unittest', Load(), lineno=271, col_offset=19), 'TestCase', Load(), lineno=271, col_offset=19)], [FunctionDef('test_attributes', arguments([Name('self', Param(), lineno=273, col_offset=24)], None, None, []), [Assign([Name('h1', Store(), lineno=275, col_offset=8)], Call(Attribute(Name('hmac', Load(), lineno=275, col_offset=13), 'HMAC', Load(), lineno=275, col_offset=13), [Str('key', lineno=275, col_offset=23)], [], None, None, lineno=275, col_offset=13), lineno=275, col_offset=8), Assign([Name('h2', Store(), lineno=276, col_offset=8)], Call(Attribute(Name('h1', Load(), lineno=276, col_offset=13), 'copy', Load(), lineno=276, col_offset=13), [], [], None, None, lineno=276, col_offset=13), lineno=276, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=277, col_offset=8), 'assertTrue', Load(), lineno=277, col_offset=8), [Compare(Attribute(Name('h1', Load(), lineno=277, col_offset=24), 'digest_cons', Load(), lineno=277, col_offset=24), [Eq()], [Attribute(Name('h2', Load(), lineno=277, col_offset=42), 'digest_cons', Load(), lineno=277, col_offset=42)], lineno=277, col_offset=24), Str("digest constructors don't match.", lineno=278, col_offset=12)], [], None, None, lineno=277, col_offset=8), lineno=277, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=279, col_offset=8), 'assertTrue', Load(), lineno=279, col_offset=8), [Compare(Call(Name('type', Load(), lineno=279, col_offset=24), [Attribute(Name('h1', Load(), lineno=279, col_offset=29), 'inner', Load(), lineno=279, col_offset=29)], [], None, None, lineno=279, col_offset=24), [Eq()], [Call(Name('type', Load(), lineno=279, col_offset=42), [Attribute(Name('h2', Load(), lineno=279, col_offset=47), 'inner', Load(), lineno=279, col_offset=47)], [], None, None, lineno=279, col_offset=42)], lineno=279, col_offset=24), Str("Types of inner don't match.", lineno=280, col_offset=12)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=281, col_offset=8), 'assertTrue', Load(), lineno=281, col_offset=8), [Compare(Call(Name('type', Load(), lineno=281, col_offset=24), [Attribute(Name('h1', Load(), lineno=281, col_offset=29), 'outer', Load(), lineno=281, col_offset=29)], [], None, None, lineno=281, col_offset=24), [Eq()], [Call(Name('type', Load(), lineno=281, col_offset=42), [Attribute(Name('h2', Load(), lineno=281, col_offset=47), 'outer', Load(), lineno=281, col_offset=47)], [], None, None, lineno=281, col_offset=42)], lineno=281, col_offset=24), Str("Types of outer don't match.", lineno=282, col_offset=12)], [], None, None, lineno=281, col_offset=8), lineno=281, col_offset=8)], [], lineno=273, col_offset=4), FunctionDef('test_realcopy', arguments([Name('self', Param(), lineno=284, col_offset=22)], None, None, []), [Assign([Name('h1', Store(), lineno=286, col_offset=8)], Call(Attribute(Name('hmac', Load(), lineno=286, col_offset=13), 'HMAC', Load(), lineno=286, col_offset=13), [Str('key', lineno=286, col_offset=23)], [], None, None, lineno=286, col_offset=13), lineno=286, col_offset=8), Assign([Name('h2', Store(), lineno=287, col_offset=8)], Call(Attribute(Name('h1', Load(), lineno=287, col_offset=13), 'copy', Load(), lineno=287, col_offset=13), [], [], None, None, lineno=287, col_offset=13), lineno=287, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=289, col_offset=8), 'assertTrue', Load(), lineno=289, col_offset=8), [Compare(Call(Name('id', Load(), lineno=289, col_offset=24), [Name('h1', Load(), lineno=289, col_offset=27)], [], None, None, lineno=289, col_offset=24), [NotEq()], [Call(Name('id', Load(), lineno=289, col_offset=34), [Name('h2', Load(), lineno=289, col_offset=37)], [], None, None, lineno=289, col_offset=34)], lineno=289, col_offset=24), Str('No real copy of the HMAC instance.', lineno=289, col_offset=42)], [], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=290, col_offset=8), 'assertTrue', Load(), lineno=290, col_offset=8), [Compare(Call(Name('id', Load(), lineno=290, col_offset=24), [Attribute(Name('h1', Load(), lineno=290, col_offset=27), 'inner', Load(), lineno=290, col_offset=27)], [], None, None, lineno=290, col_offset=24), [NotEq()], [Call(Name('id', Load(), lineno=290, col_offset=40), [Attribute(Name('h2', Load(), lineno=290, col_offset=43), 'inner', Load(), lineno=290, col_offset=43)], [], None, None, lineno=290, col_offset=40)], lineno=290, col_offset=24), Str("No real copy of the attribute 'inner'.", lineno=291, col_offset=12)], [], None, None, lineno=290, col_offset=8), lineno=290, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=292, col_offset=8), 'assertTrue', Load(), lineno=292, col_offset=8), [Compare(Call(Name('id', Load(), lineno=292, col_offset=24), [Attribute(Name('h1', Load(), lineno=292, col_offset=27), 'outer', Load(), lineno=292, col_offset=27)], [], None, None, lineno=292, col_offset=24), [NotEq()], [Call(Name('id', Load(), lineno=292, col_offset=40), [Attribute(Name('h2', Load(), lineno=292, col_offset=43), 'outer', Load(), lineno=292, col_offset=43)], [], None, None, lineno=292, col_offset=40)], lineno=292, col_offset=24), Str("No real copy of the attribute 'outer'.", lineno=293, col_offset=12)], [], None, None, lineno=292, col_offset=8), lineno=292, col_offset=8)], [], lineno=284, col_offset=4), FunctionDef('test_equality', arguments([Name('self', Param(), lineno=295, col_offset=22)], None, None, []), [Assign([Name('h1', Store(), lineno=297, col_offset=8)], Call(Attribute(Name('hmac', Load(), lineno=297, col_offset=13), 'HMAC', Load(), lineno=297, col_offset=13), [Str('key', lineno=297, col_offset=23)], [], None, None, lineno=297, col_offset=13), lineno=297, col_offset=8), Expr(Call(Attribute(Name('h1', Load(), lineno=298, col_offset=8), 'update', Load(), lineno=298, col_offset=8), [Str('some random text', lineno=298, col_offset=18)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=8), Assign([Name('h2', Store(), lineno=299, col_offset=8)], Call(Attribute(Name('h1', Load(), lineno=299, col_offset=13), 'copy', Load(), lineno=299, col_offset=13), [], [], None, None, lineno=299, col_offset=13), lineno=299, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'assertTrue', Load(), lineno=300, col_offset=8), [Compare(Call(Attribute(Name('h1', Load(), lineno=300, col_offset=24), 'digest', Load(), lineno=300, col_offset=24), [], [], None, None, lineno=300, col_offset=24), [Eq()], [Call(Attribute(Name('h2', Load(), lineno=300, col_offset=39), 'digest', Load(), lineno=300, col_offset=39), [], [], None, None, lineno=300, col_offset=39)], lineno=300, col_offset=24), Str("Digest of copy doesn't match original digest.", lineno=301, col_offset=12)], [], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=302, col_offset=8), 'assertTrue', Load(), lineno=302, col_offset=8), [Compare(Call(Attribute(Name('h1', Load(), lineno=302, col_offset=24), 'hexdigest', Load(), lineno=302, col_offset=24), [], [], None, None, lineno=302, col_offset=24), [Eq()], [Call(Attribute(Name('h2', Load(), lineno=302, col_offset=42), 'hexdigest', Load(), lineno=302, col_offset=42), [], [], None, None, lineno=302, col_offset=42)], lineno=302, col_offset=24), Str("Hexdigest of copy doesn't match original hexdigest.", lineno=303, col_offset=12)], [], None, None, lineno=302, col_offset=8), lineno=302, col_offset=8)], [], lineno=295, col_offset=4)], [], lineno=271, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=306, col_offset=4), 'run_unittest', Load(), lineno=306, col_offset=4), [Name('TestVectorsTestCase', Load(), lineno=307, col_offset=8), Name('ConstructorTestCase', Load(), lineno=308, col_offset=8), Name('SanityTestCase', Load(), lineno=309, col_offset=8), Name('CopyTestCase', Load(), lineno=310, col_offset=8)], [], None, None, lineno=306, col_offset=4), lineno=306, col_offset=4)], [], lineno=305, col_offset=0), If(Compare(Name('__name__', Load(), lineno=313, col_offset=3), [Eq()], [Str('__main__', lineno=313, col_offset=15)], lineno=313, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=314, col_offset=4), [], [], None, None, lineno=314, col_offset=4), lineno=314, col_offset=4)], [], lineno=313, col_offset=0)])
