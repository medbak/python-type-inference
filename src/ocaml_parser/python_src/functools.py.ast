Module([Expr(Str('functools.py - Tools for working with functions and callable objects\n', lineno=2, col_offset=-1), lineno=2, col_offset=-1), ImportFrom('_functools', [alias('partial', None), alias('reduce', None)], 0, lineno=10, col_offset=0), Assign([Name('WRAPPER_ASSIGNMENTS', Store(), lineno=15, col_offset=0)], Tuple([Str('__module__', lineno=15, col_offset=23), Str('__name__', lineno=15, col_offset=37), Str('__doc__', lineno=15, col_offset=49)], Load(), lineno=15, col_offset=23), lineno=15, col_offset=0), Assign([Name('WRAPPER_UPDATES', Store(), lineno=16, col_offset=0)], Tuple([Str('__dict__', lineno=16, col_offset=19)], Load(), lineno=16, col_offset=19), lineno=16, col_offset=0), FunctionDef('update_wrapper', arguments([Name('wrapper', Param(), lineno=17, col_offset=19), Name('wrapped', Param(), lineno=18, col_offset=19), Name('assigned', Param(), lineno=19, col_offset=19), Name('updated', Param(), lineno=20, col_offset=19)], None, None, [Name('WRAPPER_ASSIGNMENTS', Load(), lineno=19, col_offset=30), Name('WRAPPER_UPDATES', Load(), lineno=20, col_offset=29)]), [Expr(Str('Update a wrapper function to look like the wrapped function\n\n       wrapper is the function to be updated\n       wrapped is the original function\n       assigned is a tuple naming the attributes assigned directly\n       from the wrapped function to the wrapper function (defaults to\n       functools.WRAPPER_ASSIGNMENTS)\n       updated is a tuple naming the attributes of the wrapper that\n       are updated with the corresponding attribute from the wrapped\n       function (defaults to functools.WRAPPER_UPDATES)\n    ', lineno=31, col_offset=-1), lineno=31, col_offset=-1), For(Name('attr', Store(), lineno=32, col_offset=8), Name('assigned', Load(), lineno=32, col_offset=16), [Expr(Call(Name('setattr', Load(), lineno=33, col_offset=8), [Name('wrapper', Load(), lineno=33, col_offset=16), Name('attr', Load(), lineno=33, col_offset=25), Call(Name('getattr', Load(), lineno=33, col_offset=31), [Name('wrapped', Load(), lineno=33, col_offset=39), Name('attr', Load(), lineno=33, col_offset=48)], [], None, None, lineno=33, col_offset=31)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8)], [], lineno=32, col_offset=4), For(Name('attr', Store(), lineno=34, col_offset=8), Name('updated', Load(), lineno=34, col_offset=16), [Expr(Call(Attribute(Call(Name('getattr', Load(), lineno=35, col_offset=8), [Name('wrapper', Load(), lineno=35, col_offset=16), Name('attr', Load(), lineno=35, col_offset=25)], [], None, None, lineno=35, col_offset=8), 'update', Load(), lineno=35, col_offset=8), [Call(Name('getattr', Load(), lineno=35, col_offset=38), [Name('wrapped', Load(), lineno=35, col_offset=46), Name('attr', Load(), lineno=35, col_offset=55), Dict([], [], lineno=35, col_offset=61)], [], None, None, lineno=35, col_offset=38)], [], None, None, lineno=35, col_offset=8), lineno=35, col_offset=8)], [], lineno=34, col_offset=4), Return(Name('wrapper', Load(), lineno=37, col_offset=11), lineno=37, col_offset=4)], [], lineno=17, col_offset=0), FunctionDef('wraps', arguments([Name('wrapped', Param(), lineno=39, col_offset=10), Name('assigned', Param(), lineno=40, col_offset=10), Name('updated', Param(), lineno=41, col_offset=10)], None, None, [Name('WRAPPER_ASSIGNMENTS', Load(), lineno=40, col_offset=21), Name('WRAPPER_UPDATES', Load(), lineno=41, col_offset=20)]), [Expr(Str('Decorator factory to apply update_wrapper() to a wrapper function\n\n       Returns a decorator that invokes update_wrapper() with the decorated\n       function as the wrapper argument and the arguments to wraps() as the\n       remaining arguments. Default arguments are as for update_wrapper().\n       This is a convenience function to simplify applying partial() to\n       update_wrapper().\n    ', lineno=49, col_offset=-1), lineno=49, col_offset=-1), Return(Call(Name('partial', Load(), lineno=50, col_offset=11), [Name('update_wrapper', Load(), lineno=50, col_offset=19)], [keyword('wrapped', Name('wrapped', Load(), lineno=50, col_offset=43)), keyword('assigned', Name('assigned', Load(), lineno=51, col_offset=28)), keyword('updated', Name('updated', Load(), lineno=51, col_offset=46))], None, None, lineno=50, col_offset=11), lineno=50, col_offset=4)], [], lineno=39, col_offset=0), FunctionDef('total_ordering', arguments([Name('cls', Param(), lineno=53, col_offset=19)], None, None, []), [Expr(Str('Class decorator that fills in missing ordering methods', lineno=54, col_offset=4), lineno=54, col_offset=4), Assign([Name('convert', Store(), lineno=55, col_offset=4)], Dict([Str('__lt__', lineno=56, col_offset=8), Str('__le__', lineno=59, col_offset=8), Str('__gt__', lineno=62, col_offset=8), Str('__ge__', lineno=65, col_offset=8)], [List([Tuple([Str('__gt__', lineno=56, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=56, col_offset=37), Name('other', Param(), lineno=56, col_offset=43)], None, None, []), Compare(Name('other', Load(), lineno=56, col_offset=50), [Lt()], [Name('self', Load(), lineno=56, col_offset=58)], lineno=56, col_offset=50), lineno=56, col_offset=30)], Load(), lineno=56, col_offset=20), Tuple([Str('__le__', lineno=57, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=57, col_offset=37), Name('other', Param(), lineno=57, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('other', Load(), lineno=57, col_offset=54), [Lt()], [Name('self', Load(), lineno=57, col_offset=62)], lineno=57, col_offset=54), lineno=57, col_offset=50), lineno=57, col_offset=30)], Load(), lineno=57, col_offset=20), Tuple([Str('__ge__', lineno=58, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=58, col_offset=37), Name('other', Param(), lineno=58, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('self', Load(), lineno=58, col_offset=54), [Lt()], [Name('other', Load(), lineno=58, col_offset=61)], lineno=58, col_offset=54), lineno=58, col_offset=50), lineno=58, col_offset=30)], Load(), lineno=58, col_offset=20)], Load(), lineno=56, col_offset=18), List([Tuple([Str('__ge__', lineno=59, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=59, col_offset=37), Name('other', Param(), lineno=59, col_offset=43)], None, None, []), Compare(Name('other', Load(), lineno=59, col_offset=50), [LtE()], [Name('self', Load(), lineno=59, col_offset=59)], lineno=59, col_offset=50), lineno=59, col_offset=30)], Load(), lineno=59, col_offset=20), Tuple([Str('__lt__', lineno=60, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=60, col_offset=37), Name('other', Param(), lineno=60, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('other', Load(), lineno=60, col_offset=54), [LtE()], [Name('self', Load(), lineno=60, col_offset=63)], lineno=60, col_offset=54), lineno=60, col_offset=50), lineno=60, col_offset=30)], Load(), lineno=60, col_offset=20), Tuple([Str('__gt__', lineno=61, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=61, col_offset=37), Name('other', Param(), lineno=61, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('self', Load(), lineno=61, col_offset=54), [LtE()], [Name('other', Load(), lineno=61, col_offset=62)], lineno=61, col_offset=54), lineno=61, col_offset=50), lineno=61, col_offset=30)], Load(), lineno=61, col_offset=20)], Load(), lineno=59, col_offset=18), List([Tuple([Str('__lt__', lineno=62, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=62, col_offset=37), Name('other', Param(), lineno=62, col_offset=43)], None, None, []), Compare(Name('other', Load(), lineno=62, col_offset=50), [Gt()], [Name('self', Load(), lineno=62, col_offset=58)], lineno=62, col_offset=50), lineno=62, col_offset=30)], Load(), lineno=62, col_offset=20), Tuple([Str('__ge__', lineno=63, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=63, col_offset=37), Name('other', Param(), lineno=63, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('other', Load(), lineno=63, col_offset=54), [Gt()], [Name('self', Load(), lineno=63, col_offset=62)], lineno=63, col_offset=54), lineno=63, col_offset=50), lineno=63, col_offset=30)], Load(), lineno=63, col_offset=20), Tuple([Str('__le__', lineno=64, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=64, col_offset=37), Name('other', Param(), lineno=64, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('self', Load(), lineno=64, col_offset=54), [Gt()], [Name('other', Load(), lineno=64, col_offset=61)], lineno=64, col_offset=54), lineno=64, col_offset=50), lineno=64, col_offset=30)], Load(), lineno=64, col_offset=20)], Load(), lineno=62, col_offset=18), List([Tuple([Str('__le__', lineno=65, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=65, col_offset=37), Name('other', Param(), lineno=65, col_offset=43)], None, None, []), Compare(Name('other', Load(), lineno=65, col_offset=50), [GtE()], [Name('self', Load(), lineno=65, col_offset=59)], lineno=65, col_offset=50), lineno=65, col_offset=30)], Load(), lineno=65, col_offset=20), Tuple([Str('__gt__', lineno=66, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=66, col_offset=37), Name('other', Param(), lineno=66, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('other', Load(), lineno=66, col_offset=54), [GtE()], [Name('self', Load(), lineno=66, col_offset=63)], lineno=66, col_offset=54), lineno=66, col_offset=50), lineno=66, col_offset=30)], Load(), lineno=66, col_offset=20), Tuple([Str('__lt__', lineno=67, col_offset=20), Lambda(arguments([Name('self', Param(), lineno=67, col_offset=37), Name('other', Param(), lineno=67, col_offset=43)], None, None, []), UnaryOp(Not(), Compare(Name('self', Load(), lineno=67, col_offset=54), [GtE()], [Name('other', Load(), lineno=67, col_offset=62)], lineno=67, col_offset=54), lineno=67, col_offset=50), lineno=67, col_offset=30)], Load(), lineno=67, col_offset=20)], Load(), lineno=65, col_offset=18)], lineno=55, col_offset=14), lineno=55, col_offset=4), Assign([Name('roots', Store(), lineno=69, col_offset=4)], BinOp(Call(Name('set', Load(), lineno=69, col_offset=12), [Call(Name('dir', Load(), lineno=69, col_offset=16), [Name('cls', Load(), lineno=69, col_offset=20)], [], None, None, lineno=69, col_offset=16)], [], None, None, lineno=69, col_offset=12), BitAnd(), Call(Name('set', Load(), lineno=69, col_offset=28), [Name('convert', Load(), lineno=69, col_offset=32)], [], None, None, lineno=69, col_offset=28), lineno=69, col_offset=12), lineno=69, col_offset=4), If(UnaryOp(Not(), Name('roots', Load(), lineno=70, col_offset=11), lineno=70, col_offset=7), [Raise(Call(Name('ValueError', Load(), lineno=71, col_offset=14), [Str('must define at least one ordering operation: < > <= >=', lineno=71, col_offset=25)], [], None, None, lineno=71, col_offset=14), None, None, lineno=71, col_offset=8)], [], lineno=70, col_offset=4), Assign([Name('root', Store(), lineno=72, col_offset=4)], Call(Name('max', Load(), lineno=72, col_offset=11), [Name('roots', Load(), lineno=72, col_offset=15)], [], None, None, lineno=72, col_offset=11), lineno=72, col_offset=4), For(Tuple([Name('opname', Store(), lineno=73, col_offset=8), Name('opfunc', Store(), lineno=73, col_offset=16)], Store(), lineno=73, col_offset=8), Subscript(Name('convert', Load(), lineno=73, col_offset=26), Index(Name('root', Load(), lineno=73, col_offset=34)), Load(), lineno=73, col_offset=26), [If(Compare(Name('opname', Load(), lineno=74, col_offset=11), [NotIn()], [Name('roots', Load(), lineno=74, col_offset=25)], lineno=74, col_offset=11), [Assign([Attribute(Name('opfunc', Load(), lineno=75, col_offset=12), '__name__', Store(), lineno=75, col_offset=12)], Name('opname', Load(), lineno=75, col_offset=30), lineno=75, col_offset=12), Assign([Attribute(Name('opfunc', Load(), lineno=76, col_offset=12), '__doc__', Store(), lineno=76, col_offset=12)], Attribute(Call(Name('getattr', Load(), lineno=76, col_offset=29), [Name('int', Load(), lineno=76, col_offset=37), Name('opname', Load(), lineno=76, col_offset=42)], [], None, None, lineno=76, col_offset=29), '__doc__', Load(), lineno=76, col_offset=29), lineno=76, col_offset=12), Expr(Call(Name('setattr', Load(), lineno=77, col_offset=12), [Name('cls', Load(), lineno=77, col_offset=20), Name('opname', Load(), lineno=77, col_offset=25), Name('opfunc', Load(), lineno=77, col_offset=33)], [], None, None, lineno=77, col_offset=12), lineno=77, col_offset=12)], [], lineno=74, col_offset=8)], [], lineno=73, col_offset=4), Return(Name('cls', Load(), lineno=78, col_offset=11), lineno=78, col_offset=4)], [], lineno=53, col_offset=0), FunctionDef('cmp_to_key', arguments([Name('mycmp', Param(), lineno=80, col_offset=15)], None, None, []), [Expr(Str('Convert a cmp= function into a key= function', lineno=81, col_offset=4), lineno=81, col_offset=4), ClassDef('K', [Name('object', Load(), lineno=82, col_offset=12)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=83, col_offset=21), Name('obj', Param(), lineno=83, col_offset=27)], 'args', None, []), [Assign([Attribute(Name('self', Load(), lineno=84, col_offset=12), 'obj', Store(), lineno=84, col_offset=12)], Name('obj', Load(), lineno=84, col_offset=23), lineno=84, col_offset=12)], [], lineno=83, col_offset=8), FunctionDef('__lt__', arguments([Name('self', Param(), lineno=85, col_offset=19), Name('other', Param(), lineno=85, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=86, col_offset=19), [Attribute(Name('self', Load(), lineno=86, col_offset=25), 'obj', Load(), lineno=86, col_offset=25), Attribute(Name('other', Load(), lineno=86, col_offset=35), 'obj', Load(), lineno=86, col_offset=35)], [], None, None, lineno=86, col_offset=19), [Lt()], [Num(0, lineno=86, col_offset=48)], lineno=86, col_offset=19), lineno=86, col_offset=12)], [], lineno=85, col_offset=8), FunctionDef('__gt__', arguments([Name('self', Param(), lineno=87, col_offset=19), Name('other', Param(), lineno=87, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=88, col_offset=19), [Attribute(Name('self', Load(), lineno=88, col_offset=25), 'obj', Load(), lineno=88, col_offset=25), Attribute(Name('other', Load(), lineno=88, col_offset=35), 'obj', Load(), lineno=88, col_offset=35)], [], None, None, lineno=88, col_offset=19), [Gt()], [Num(0, lineno=88, col_offset=48)], lineno=88, col_offset=19), lineno=88, col_offset=12)], [], lineno=87, col_offset=8), FunctionDef('__eq__', arguments([Name('self', Param(), lineno=89, col_offset=19), Name('other', Param(), lineno=89, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=90, col_offset=19), [Attribute(Name('self', Load(), lineno=90, col_offset=25), 'obj', Load(), lineno=90, col_offset=25), Attribute(Name('other', Load(), lineno=90, col_offset=35), 'obj', Load(), lineno=90, col_offset=35)], [], None, None, lineno=90, col_offset=19), [Eq()], [Num(0, lineno=90, col_offset=49)], lineno=90, col_offset=19), lineno=90, col_offset=12)], [], lineno=89, col_offset=8), FunctionDef('__le__', arguments([Name('self', Param(), lineno=91, col_offset=19), Name('other', Param(), lineno=91, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=92, col_offset=19), [Attribute(Name('self', Load(), lineno=92, col_offset=25), 'obj', Load(), lineno=92, col_offset=25), Attribute(Name('other', Load(), lineno=92, col_offset=35), 'obj', Load(), lineno=92, col_offset=35)], [], None, None, lineno=92, col_offset=19), [LtE()], [Num(0, lineno=92, col_offset=49)], lineno=92, col_offset=19), lineno=92, col_offset=12)], [], lineno=91, col_offset=8), FunctionDef('__ge__', arguments([Name('self', Param(), lineno=93, col_offset=19), Name('other', Param(), lineno=93, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=94, col_offset=19), [Attribute(Name('self', Load(), lineno=94, col_offset=25), 'obj', Load(), lineno=94, col_offset=25), Attribute(Name('other', Load(), lineno=94, col_offset=35), 'obj', Load(), lineno=94, col_offset=35)], [], None, None, lineno=94, col_offset=19), [GtE()], [Num(0, lineno=94, col_offset=49)], lineno=94, col_offset=19), lineno=94, col_offset=12)], [], lineno=93, col_offset=8), FunctionDef('__ne__', arguments([Name('self', Param(), lineno=95, col_offset=19), Name('other', Param(), lineno=95, col_offset=25)], None, None, []), [Return(Compare(Call(Name('mycmp', Load(), lineno=96, col_offset=19), [Attribute(Name('self', Load(), lineno=96, col_offset=25), 'obj', Load(), lineno=96, col_offset=25), Attribute(Name('other', Load(), lineno=96, col_offset=35), 'obj', Load(), lineno=96, col_offset=35)], [], None, None, lineno=96, col_offset=19), [NotEq()], [Num(0, lineno=96, col_offset=49)], lineno=96, col_offset=19), lineno=96, col_offset=12)], [], lineno=95, col_offset=8), FunctionDef('__hash__', arguments([Name('self', Param(), lineno=97, col_offset=21)], None, None, []), [Raise(Call(Name('TypeError', Load(), lineno=98, col_offset=18), [Str('hash not implemented', lineno=98, col_offset=28)], [], None, None, lineno=98, col_offset=18), None, None, lineno=98, col_offset=12)], [], lineno=97, col_offset=8)], [], lineno=82, col_offset=4), Return(Name('K', Load(), lineno=99, col_offset=11), lineno=99, col_offset=4)], [], lineno=80, col_offset=0)])
