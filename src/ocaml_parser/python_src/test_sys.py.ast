Module([Import([alias('unittest', None), alias('test.test_support', None)], lineno=2, col_offset=0), Import([alias('sys', None), alias('os', None), alias('cStringIO', None)], lineno=3, col_offset=0), Import([alias('struct', None)], lineno=4, col_offset=0), Import([alias('operator', None)], lineno=5, col_offset=0), ClassDef('SysModuleTest', [Attribute(Name('unittest', Load(), lineno=7, col_offset=20), 'TestCase', Load(), lineno=7, col_offset=20)], [FunctionDef('tearDown', arguments([Name('self', Param(), lineno=9, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=10, col_offset=8), 'test_support', Load(), lineno=10, col_offset=8), 'reap_children', Load(), lineno=10, col_offset=8), [], [], None, None, lineno=10, col_offset=8), lineno=10, col_offset=8)], [], lineno=9, col_offset=4), FunctionDef('test_original_displayhook', arguments([Name('self', Param(), lineno=12, col_offset=34)], None, None, []), [Import([alias('__builtin__', None)], lineno=13, col_offset=8), Assign([Name('savestdout', Store(), lineno=14, col_offset=8)], Attribute(Name('sys', Load(), lineno=14, col_offset=21), 'stdout', Load(), lineno=14, col_offset=21), lineno=14, col_offset=8), Assign([Name('out', Store(), lineno=15, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=15, col_offset=14), 'StringIO', Load(), lineno=15, col_offset=14), [], [], None, None, lineno=15, col_offset=14), lineno=15, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=16, col_offset=8), 'stdout', Store(), lineno=16, col_offset=8)], Name('out', Load(), lineno=16, col_offset=21), lineno=16, col_offset=8), Assign([Name('dh', Store(), lineno=18, col_offset=8)], Attribute(Name('sys', Load(), lineno=18, col_offset=13), '__displayhook__', Load(), lineno=18, col_offset=13), lineno=18, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=20, col_offset=8), 'assertRaises', Load(), lineno=20, col_offset=8), [Name('TypeError', Load(), lineno=20, col_offset=26), Name('dh', Load(), lineno=20, col_offset=37)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), If(Call(Name('hasattr', Load(), lineno=21, col_offset=11), [Name('__builtin__', Load(), lineno=21, col_offset=19), Str('_', lineno=21, col_offset=32)], [], None, None, lineno=21, col_offset=11), [Delete([Attribute(Name('__builtin__', Load(), lineno=22, col_offset=16), '_', Del(), lineno=22, col_offset=16)], lineno=22, col_offset=12)], [], lineno=21, col_offset=8), Expr(Call(Name('dh', Load(), lineno=24, col_offset=8), [Name('None', Load(), lineno=24, col_offset=11)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=25, col_offset=8), 'assertEqual', Load(), lineno=25, col_offset=8), [Call(Attribute(Name('out', Load(), lineno=25, col_offset=25), 'getvalue', Load(), lineno=25, col_offset=25), [], [], None, None, lineno=25, col_offset=25), Str('', lineno=25, col_offset=41)], [], None, None, lineno=25, col_offset=8), lineno=25, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=26, col_offset=8), 'assertTrue', Load(), lineno=26, col_offset=8), [UnaryOp(Not(), Call(Name('hasattr', Load(), lineno=26, col_offset=28), [Name('__builtin__', Load(), lineno=26, col_offset=36), Str('_', lineno=26, col_offset=49)], [], None, None, lineno=26, col_offset=28), lineno=26, col_offset=24)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Name('dh', Load(), lineno=27, col_offset=8), [Num(42, lineno=27, col_offset=11)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=28, col_offset=8), 'assertEqual', Load(), lineno=28, col_offset=8), [Call(Attribute(Name('out', Load(), lineno=28, col_offset=25), 'getvalue', Load(), lineno=28, col_offset=25), [], [], None, None, lineno=28, col_offset=25), Str('42\n', lineno=28, col_offset=41)], [], None, None, lineno=28, col_offset=8), lineno=28, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=29, col_offset=8), 'assertEqual', Load(), lineno=29, col_offset=8), [Attribute(Name('__builtin__', Load(), lineno=29, col_offset=25), '_', Load(), lineno=29, col_offset=25), Num(42, lineno=29, col_offset=40)], [], None, None, lineno=29, col_offset=8), lineno=29, col_offset=8), Delete([Attribute(Name('sys', Load(), lineno=31, col_offset=12), 'stdout', Del(), lineno=31, col_offset=12)], lineno=31, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=32, col_offset=8), 'assertRaises', Load(), lineno=32, col_offset=8), [Name('RuntimeError', Load(), lineno=32, col_offset=26), Name('dh', Load(), lineno=32, col_offset=40), Num(42, lineno=32, col_offset=44)], [], None, None, lineno=32, col_offset=8), lineno=32, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=34, col_offset=8), 'stdout', Store(), lineno=34, col_offset=8)], Name('savestdout', Load(), lineno=34, col_offset=21), lineno=34, col_offset=8)], [], lineno=12, col_offset=4), FunctionDef('test_lost_displayhook', arguments([Name('self', Param(), lineno=36, col_offset=30)], None, None, []), [Assign([Name('olddisplayhook', Store(), lineno=37, col_offset=8)], Attribute(Name('sys', Load(), lineno=37, col_offset=25), 'displayhook', Load(), lineno=37, col_offset=25), lineno=37, col_offset=8), Delete([Attribute(Name('sys', Load(), lineno=38, col_offset=12), 'displayhook', Del(), lineno=38, col_offset=12)], lineno=38, col_offset=8), Assign([Name('code', Store(), lineno=39, col_offset=8)], Call(Name('compile', Load(), lineno=39, col_offset=15), [Str('42', lineno=39, col_offset=23), Str('<string>', lineno=39, col_offset=29), Str('single', lineno=39, col_offset=41)], [], None, None, lineno=39, col_offset=15), lineno=39, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=40, col_offset=8), 'assertRaises', Load(), lineno=40, col_offset=8), [Name('RuntimeError', Load(), lineno=40, col_offset=26), Name('eval', Load(), lineno=40, col_offset=40), Name('code', Load(), lineno=40, col_offset=46)], [], None, None, lineno=40, col_offset=8), lineno=40, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=41, col_offset=8), 'displayhook', Store(), lineno=41, col_offset=8)], Name('olddisplayhook', Load(), lineno=41, col_offset=26), lineno=41, col_offset=8)], [], lineno=36, col_offset=4), FunctionDef('test_custom_displayhook', arguments([Name('self', Param(), lineno=43, col_offset=32)], None, None, []), [Assign([Name('olddisplayhook', Store(), lineno=44, col_offset=8)], Attribute(Name('sys', Load(), lineno=44, col_offset=25), 'displayhook', Load(), lineno=44, col_offset=25), lineno=44, col_offset=8), FunctionDef('baddisplayhook', arguments([Name('obj', Param(), lineno=45, col_offset=27)], None, None, []), [Raise(Name('ValueError', Load(), lineno=46, col_offset=18), None, None, lineno=46, col_offset=12)], [], lineno=45, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=47, col_offset=8), 'displayhook', Store(), lineno=47, col_offset=8)], Name('baddisplayhook', Load(), lineno=47, col_offset=26), lineno=47, col_offset=8), Assign([Name('code', Store(), lineno=48, col_offset=8)], Call(Name('compile', Load(), lineno=48, col_offset=15), [Str('42', lineno=48, col_offset=23), Str('<string>', lineno=48, col_offset=29), Str('single', lineno=48, col_offset=41)], [], None, None, lineno=48, col_offset=15), lineno=48, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=49, col_offset=8), 'assertRaises', Load(), lineno=49, col_offset=8), [Name('ValueError', Load(), lineno=49, col_offset=26), Name('eval', Load(), lineno=49, col_offset=38), Name('code', Load(), lineno=49, col_offset=44)], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=50, col_offset=8), 'displayhook', Store(), lineno=50, col_offset=8)], Name('olddisplayhook', Load(), lineno=50, col_offset=26), lineno=50, col_offset=8)], [], lineno=43, col_offset=4), FunctionDef('test_original_excepthook', arguments([Name('self', Param(), lineno=52, col_offset=33)], None, None, []), [Assign([Name('savestderr', Store(), lineno=53, col_offset=8)], Attribute(Name('sys', Load(), lineno=53, col_offset=21), 'stderr', Load(), lineno=53, col_offset=21), lineno=53, col_offset=8), Assign([Name('err', Store(), lineno=54, col_offset=8)], Call(Attribute(Name('cStringIO', Load(), lineno=54, col_offset=14), 'StringIO', Load(), lineno=54, col_offset=14), [], [], None, None, lineno=54, col_offset=14), lineno=54, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=55, col_offset=8), 'stderr', Store(), lineno=55, col_offset=8)], Name('err', Load(), lineno=55, col_offset=21), lineno=55, col_offset=8), Assign([Name('eh', Store(), lineno=57, col_offset=8)], Attribute(Name('sys', Load(), lineno=57, col_offset=13), '__excepthook__', Load(), lineno=57, col_offset=13), lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'assertRaises', Load(), lineno=59, col_offset=8), [Name('TypeError', Load(), lineno=59, col_offset=26), Name('eh', Load(), lineno=59, col_offset=37)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8), TryExcept([Raise(Call(Name('ValueError', Load(), lineno=61, col_offset=18), [Num(42, lineno=61, col_offset=29)], [], None, None, lineno=61, col_offset=18), None, None, lineno=61, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=62, col_offset=15), Name('exc', Store(), lineno=62, col_offset=27), [Expr(Call(Name('eh', Load(), lineno=63, col_offset=12), [], [], Call(Attribute(Name('sys', Load(), lineno=63, col_offset=16), 'exc_info', Load(), lineno=63, col_offset=16), [], [], None, None, lineno=63, col_offset=16), None, lineno=63, col_offset=12), lineno=63, col_offset=12)], lineno=62, col_offset=8)], [], lineno=60, col_offset=8), Assign([Attribute(Name('sys', Load(), lineno=65, col_offset=8), 'stderr', Store(), lineno=65, col_offset=8)], Name('savestderr', Load(), lineno=65, col_offset=21), lineno=65, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), 'assertTrue', Load(), lineno=66, col_offset=8), [Call(Attribute(Call(Attribute(Name('err', Load(), lineno=66, col_offset=24), 'getvalue', Load(), lineno=66, col_offset=24), [], [], None, None, lineno=66, col_offset=24), 'endswith', Load(), lineno=66, col_offset=24), [Str('ValueError: 42\n', lineno=66, col_offset=48)], [], None, None, lineno=66, col_offset=24)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=52, col_offset=4), FunctionDef('test_exc_clear', arguments([Name('self', Param(), lineno=71, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=72, col_offset=8), 'assertRaises', Load(), lineno=72, col_offset=8), [Name('TypeError', Load(), lineno=72, col_offset=26), Attribute(Name('sys', Load(), lineno=72, col_offset=37), 'exc_clear', Load(), lineno=72, col_offset=37), Num(42, lineno=72, col_offset=52)], [], None, None, lineno=72, col_offset=8), lineno=72, col_offset=8), FunctionDef('clear_check', arguments([Name('exc', Param(), lineno=76, col_offset=24)], None, None, []), [Assign([Tuple([Name('typ', Store(), lineno=77, col_offset=12), Name('value', Store(), lineno=77, col_offset=17), Name('traceback', Store(), lineno=77, col_offset=24)], Store(), lineno=77, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=77, col_offset=36), 'exc_info', Load(), lineno=77, col_offset=36), [], [], None, None, lineno=77, col_offset=36), lineno=77, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=12), 'assertTrue', Load(), lineno=78, col_offset=12), [Compare(Name('typ', Load(), lineno=78, col_offset=28), [IsNot()], [Name('None', Load(), lineno=78, col_offset=39)], lineno=78, col_offset=28)], [], None, None, lineno=78, col_offset=12), lineno=78, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=12), 'assertTrue', Load(), lineno=79, col_offset=12), [Compare(Name('value', Load(), lineno=79, col_offset=28), [Is()], [Name('exc', Load(), lineno=79, col_offset=37)], lineno=79, col_offset=28)], [], None, None, lineno=79, col_offset=12), lineno=79, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=12), 'assertTrue', Load(), lineno=80, col_offset=12), [Compare(Name('traceback', Load(), lineno=80, col_offset=28), [IsNot()], [Name('None', Load(), lineno=80, col_offset=45)], lineno=80, col_offset=28)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12), With(Call(Attribute(Attribute(Name('test', Load(), lineno=82, col_offset=17), 'test_support', Load(), lineno=82, col_offset=17), 'check_py3k_warnings', Load(), lineno=82, col_offset=17), [], [], None, None, lineno=82, col_offset=17), None, [Expr(Call(Attribute(Name('sys', Load(), lineno=83, col_offset=16), 'exc_clear', Load(), lineno=83, col_offset=16), [], [], None, None, lineno=83, col_offset=16), lineno=83, col_offset=16)], lineno=82, col_offset=17), Assign([Tuple([Name('typ', Store(), lineno=85, col_offset=12), Name('value', Store(), lineno=85, col_offset=17), Name('traceback', Store(), lineno=85, col_offset=24)], Store(), lineno=85, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=85, col_offset=36), 'exc_info', Load(), lineno=85, col_offset=36), [], [], None, None, lineno=85, col_offset=36), lineno=85, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=86, col_offset=12), 'assertTrue', Load(), lineno=86, col_offset=12), [Compare(Name('typ', Load(), lineno=86, col_offset=28), [Is()], [Name('None', Load(), lineno=86, col_offset=35)], lineno=86, col_offset=28)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=87, col_offset=12), 'assertTrue', Load(), lineno=87, col_offset=12), [Compare(Name('value', Load(), lineno=87, col_offset=28), [Is()], [Name('None', Load(), lineno=87, col_offset=37)], lineno=87, col_offset=28)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=88, col_offset=12), 'assertTrue', Load(), lineno=88, col_offset=12), [Compare(Name('traceback', Load(), lineno=88, col_offset=28), [Is()], [Name('None', Load(), lineno=88, col_offset=41)], lineno=88, col_offset=28)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12)], [], lineno=76, col_offset=8), FunctionDef('clear', arguments([], None, None, []), [TryExcept([Raise(Name('ValueError', Load(), lineno=92, col_offset=22), Num(42, lineno=92, col_offset=34), None, lineno=92, col_offset=16)], [ExceptHandler(Name('ValueError', Load(), lineno=93, col_offset=19), Name('exc', Store(), lineno=93, col_offset=31), [Expr(Call(Name('clear_check', Load(), lineno=94, col_offset=16), [Name('exc', Load(), lineno=94, col_offset=28)], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=16)], lineno=93, col_offset=12)], [], lineno=91, col_offset=12)], [], lineno=90, col_offset=8), Expr(Call(Name('clear', Load(), lineno=97, col_offset=8), [], [], None, None, lineno=97, col_offset=8), lineno=97, col_offset=8), TryExcept([Raise(Name('ValueError', Load(), lineno=102, col_offset=18), Num(13, lineno=102, col_offset=30), None, lineno=102, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=103, col_offset=15), Name('exc', Store(), lineno=103, col_offset=27), [Assign([Tuple([Name('typ1', Store(), lineno=104, col_offset=12), Name('value1', Store(), lineno=104, col_offset=18), Name('traceback1', Store(), lineno=104, col_offset=26)], Store(), lineno=104, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=104, col_offset=39), 'exc_info', Load(), lineno=104, col_offset=39), [], [], None, None, lineno=104, col_offset=39), lineno=104, col_offset=12), Expr(Call(Name('clear', Load(), lineno=105, col_offset=12), [], [], None, None, lineno=105, col_offset=12), lineno=105, col_offset=12), Assign([Tuple([Name('typ2', Store(), lineno=106, col_offset=12), Name('value2', Store(), lineno=106, col_offset=18), Name('traceback2', Store(), lineno=106, col_offset=26)], Store(), lineno=106, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=106, col_offset=39), 'exc_info', Load(), lineno=106, col_offset=39), [], [], None, None, lineno=106, col_offset=39), lineno=106, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=12), 'assertTrue', Load(), lineno=108, col_offset=12), [Compare(Name('typ1', Load(), lineno=108, col_offset=28), [Is()], [Name('typ2', Load(), lineno=108, col_offset=36)], lineno=108, col_offset=28)], [], None, None, lineno=108, col_offset=12), lineno=108, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=109, col_offset=12), 'assertTrue', Load(), lineno=109, col_offset=12), [Compare(Name('value1', Load(), lineno=109, col_offset=28), [Is()], [Name('exc', Load(), lineno=109, col_offset=38)], lineno=109, col_offset=28)], [], None, None, lineno=109, col_offset=12), lineno=109, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=12), 'assertTrue', Load(), lineno=110, col_offset=12), [Compare(Name('value1', Load(), lineno=110, col_offset=28), [Is()], [Name('value2', Load(), lineno=110, col_offset=38)], lineno=110, col_offset=28)], [], None, None, lineno=110, col_offset=12), lineno=110, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=111, col_offset=12), 'assertTrue', Load(), lineno=111, col_offset=12), [Compare(Name('traceback1', Load(), lineno=111, col_offset=28), [Is()], [Name('traceback2', Load(), lineno=111, col_offset=42)], lineno=111, col_offset=28)], [], None, None, lineno=111, col_offset=12), lineno=111, col_offset=12)], lineno=103, col_offset=8)], [], lineno=101, col_offset=8), Expr(Call(Name('clear_check', Load(), lineno=114, col_offset=8), [Name('exc', Load(), lineno=114, col_offset=20)], [], None, None, lineno=114, col_offset=8), lineno=114, col_offset=8)], [], lineno=71, col_offset=4), FunctionDef('test_exit', arguments([Name('self', Param(), lineno=116, col_offset=18)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=117, col_offset=8), 'assertRaises', Load(), lineno=117, col_offset=8), [Name('TypeError', Load(), lineno=117, col_offset=26), Attribute(Name('sys', Load(), lineno=117, col_offset=37), 'exit', Load(), lineno=117, col_offset=37), Num(42, lineno=117, col_offset=47), Num(42, lineno=117, col_offset=51)], [], None, None, lineno=117, col_offset=8), lineno=117, col_offset=8), TryExcept([Expr(Call(Attribute(Name('sys', Load(), lineno=121, col_offset=12), 'exit', Load(), lineno=121, col_offset=12), [Num(0, lineno=121, col_offset=21)], [], None, None, lineno=121, col_offset=12), lineno=121, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=122, col_offset=15), Name('exc', Store(), lineno=122, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=123, col_offset=12), 'assertEqual', Load(), lineno=123, col_offset=12), [Attribute(Name('exc', Load(), lineno=123, col_offset=29), 'code', Load(), lineno=123, col_offset=29), Num(0, lineno=123, col_offset=39)], [], None, None, lineno=123, col_offset=12), lineno=123, col_offset=12)], lineno=122, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=125, col_offset=12), 'fail', Load(), lineno=125, col_offset=12), [Str('wrong exception', lineno=125, col_offset=22)], [], None, None, lineno=125, col_offset=12), lineno=125, col_offset=12)], lineno=124, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=127, col_offset=12), 'fail', Load(), lineno=127, col_offset=12), [Str('no exception', lineno=127, col_offset=22)], [], None, None, lineno=127, col_offset=12), lineno=127, col_offset=12)], lineno=120, col_offset=8), TryExcept([Expr(Call(Attribute(Name('sys', Load(), lineno=132, col_offset=12), 'exit', Load(), lineno=132, col_offset=12), [Num(42, lineno=132, col_offset=21)], [], None, None, lineno=132, col_offset=12), lineno=132, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=133, col_offset=15), Name('exc', Store(), lineno=133, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=134, col_offset=12), 'assertEqual', Load(), lineno=134, col_offset=12), [Attribute(Name('exc', Load(), lineno=134, col_offset=29), 'code', Load(), lineno=134, col_offset=29), Num(42, lineno=134, col_offset=39)], [], None, None, lineno=134, col_offset=12), lineno=134, col_offset=12)], lineno=133, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=136, col_offset=12), 'fail', Load(), lineno=136, col_offset=12), [Str('wrong exception', lineno=136, col_offset=22)], [], None, None, lineno=136, col_offset=12), lineno=136, col_offset=12)], lineno=135, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=138, col_offset=12), 'fail', Load(), lineno=138, col_offset=12), [Str('no exception', lineno=138, col_offset=22)], [], None, None, lineno=138, col_offset=12), lineno=138, col_offset=12)], lineno=131, col_offset=8), TryExcept([Expr(Call(Attribute(Name('sys', Load(), lineno=142, col_offset=12), 'exit', Load(), lineno=142, col_offset=12), [Tuple([Num(42, lineno=142, col_offset=22)], Load(), lineno=142, col_offset=22)], [], None, None, lineno=142, col_offset=12), lineno=142, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=143, col_offset=15), Name('exc', Store(), lineno=143, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=12), 'assertEqual', Load(), lineno=144, col_offset=12), [Attribute(Name('exc', Load(), lineno=144, col_offset=29), 'code', Load(), lineno=144, col_offset=29), Num(42, lineno=144, col_offset=39)], [], None, None, lineno=144, col_offset=12), lineno=144, col_offset=12)], lineno=143, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=146, col_offset=12), 'fail', Load(), lineno=146, col_offset=12), [Str('wrong exception', lineno=146, col_offset=22)], [], None, None, lineno=146, col_offset=12), lineno=146, col_offset=12)], lineno=145, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=148, col_offset=12), 'fail', Load(), lineno=148, col_offset=12), [Str('no exception', lineno=148, col_offset=22)], [], None, None, lineno=148, col_offset=12), lineno=148, col_offset=12)], lineno=141, col_offset=8), TryExcept([Expr(Call(Attribute(Name('sys', Load(), lineno=152, col_offset=12), 'exit', Load(), lineno=152, col_offset=12), [Str('exit', lineno=152, col_offset=21)], [], None, None, lineno=152, col_offset=12), lineno=152, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=153, col_offset=15), Name('exc', Store(), lineno=153, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=154, col_offset=12), 'assertEqual', Load(), lineno=154, col_offset=12), [Attribute(Name('exc', Load(), lineno=154, col_offset=29), 'code', Load(), lineno=154, col_offset=29), Str('exit', lineno=154, col_offset=39)], [], None, None, lineno=154, col_offset=12), lineno=154, col_offset=12)], lineno=153, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=156, col_offset=12), 'fail', Load(), lineno=156, col_offset=12), [Str('wrong exception', lineno=156, col_offset=22)], [], None, None, lineno=156, col_offset=12), lineno=156, col_offset=12)], lineno=155, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=158, col_offset=12), 'fail', Load(), lineno=158, col_offset=12), [Str('no exception', lineno=158, col_offset=22)], [], None, None, lineno=158, col_offset=12), lineno=158, col_offset=12)], lineno=151, col_offset=8), TryExcept([Expr(Call(Attribute(Name('sys', Load(), lineno=162, col_offset=12), 'exit', Load(), lineno=162, col_offset=12), [Tuple([Num(17, lineno=162, col_offset=22), Num(23, lineno=162, col_offset=26)], Load(), lineno=162, col_offset=22)], [], None, None, lineno=162, col_offset=12), lineno=162, col_offset=12)], [ExceptHandler(Name('SystemExit', Load(), lineno=163, col_offset=15), Name('exc', Store(), lineno=163, col_offset=27), [Expr(Call(Attribute(Name('self', Load(), lineno=164, col_offset=12), 'assertEqual', Load(), lineno=164, col_offset=12), [Attribute(Name('exc', Load(), lineno=164, col_offset=29), 'code', Load(), lineno=164, col_offset=29), Tuple([Num(17, lineno=164, col_offset=40), Num(23, lineno=164, col_offset=44)], Load(), lineno=164, col_offset=40)], [], None, None, lineno=164, col_offset=12), lineno=164, col_offset=12)], lineno=163, col_offset=8), ExceptHandler(None, None, [Expr(Call(Attribute(Name('self', Load(), lineno=166, col_offset=12), 'fail', Load(), lineno=166, col_offset=12), [Str('wrong exception', lineno=166, col_offset=22)], [], None, None, lineno=166, col_offset=12), lineno=166, col_offset=12)], lineno=165, col_offset=8)], [Expr(Call(Attribute(Name('self', Load(), lineno=168, col_offset=12), 'fail', Load(), lineno=168, col_offset=12), [Str('no exception', lineno=168, col_offset=22)], [], None, None, lineno=168, col_offset=12), lineno=168, col_offset=12)], lineno=161, col_offset=8), Import([alias('subprocess', None)], lineno=171, col_offset=8), Assign([Name('rc', Store(), lineno=173, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=173, col_offset=13), 'call', Load(), lineno=173, col_offset=13), [List([Attribute(Name('sys', Load(), lineno=173, col_offset=30), 'executable', Load(), lineno=173, col_offset=30), Str('-c', lineno=173, col_offset=46), Str('raise SystemExit, 46', lineno=174, col_offset=30)], Load(), lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=13), lineno=173, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=175, col_offset=8), 'assertEqual', Load(), lineno=175, col_offset=8), [Name('rc', Load(), lineno=175, col_offset=25), Num(46, lineno=175, col_offset=29)], [], None, None, lineno=175, col_offset=8), lineno=175, col_offset=8), Assign([Name('rc', Store(), lineno=177, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=177, col_offset=13), 'call', Load(), lineno=177, col_offset=13), [List([Attribute(Name('sys', Load(), lineno=177, col_offset=30), 'executable', Load(), lineno=177, col_offset=30), Str('-c', lineno=177, col_offset=46), Str('raise SystemExit(47)', lineno=178, col_offset=30)], Load(), lineno=177, col_offset=29)], [], None, None, lineno=177, col_offset=13), lineno=177, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=179, col_offset=8), 'assertEqual', Load(), lineno=179, col_offset=8), [Name('rc', Load(), lineno=179, col_offset=25), Num(47, lineno=179, col_offset=29)], [], None, None, lineno=179, col_offset=8), lineno=179, col_offset=8), FunctionDef('check_exit_message', arguments([Name('code', Param(), lineno=181, col_offset=31), Name('expected', Param(), lineno=181, col_offset=37), Name('env', Param(), lineno=181, col_offset=47)], None, None, [Name('None', Load(), lineno=181, col_offset=51)]), [Assign([Name('process', Store(), lineno=182, col_offset=12)], Call(Attribute(Name('subprocess', Load(), lineno=182, col_offset=22), 'Popen', Load(), lineno=182, col_offset=22), [List([Attribute(Name('sys', Load(), lineno=182, col_offset=40), 'executable', Load(), lineno=182, col_offset=40), Str('-c', lineno=182, col_offset=56), Name('code', Load(), lineno=182, col_offset=62)], Load(), lineno=182, col_offset=39)], [keyword('stderr', Attribute(Name('subprocess', Load(), lineno=183, col_offset=46), 'PIPE', Load(), lineno=183, col_offset=46)), keyword('env', Name('env', Load(), lineno=183, col_offset=67))], None, None, lineno=182, col_offset=22), lineno=182, col_offset=12), Assign([Tuple([Name('stdout', Store(), lineno=184, col_offset=12), Name('stderr', Store(), lineno=184, col_offset=20)], Store(), lineno=184, col_offset=12)], Call(Attribute(Name('process', Load(), lineno=184, col_offset=29), 'communicate', Load(), lineno=184, col_offset=29), [], [], None, None, lineno=184, col_offset=29), lineno=184, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=185, col_offset=12), 'assertEqual', Load(), lineno=185, col_offset=12), [Attribute(Name('process', Load(), lineno=185, col_offset=29), 'returncode', Load(), lineno=185, col_offset=29), Num(1, lineno=185, col_offset=49)], [], None, None, lineno=185, col_offset=12), lineno=185, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=186, col_offset=12), 'assertTrue', Load(), lineno=186, col_offset=12), [Call(Attribute(Name('stderr', Load(), lineno=186, col_offset=28), 'startswith', Load(), lineno=186, col_offset=28), [Name('expected', Load(), lineno=186, col_offset=46)], [], None, None, lineno=186, col_offset=28), BinOp(Str("%s doesn't start with %s", lineno=187, col_offset=16), Mod(), Tuple([Call(Name('repr', Load(), lineno=187, col_offset=46), [Name('stderr', Load(), lineno=187, col_offset=51)], [], None, None, lineno=187, col_offset=46), Call(Name('repr', Load(), lineno=187, col_offset=60), [Name('expected', Load(), lineno=187, col_offset=65)], [], None, None, lineno=187, col_offset=60)], Load(), lineno=187, col_offset=46), lineno=187, col_offset=16)], [], None, None, lineno=186, col_offset=12), lineno=186, col_offset=12)], [], lineno=181, col_offset=8), Expr(Call(Name('check_exit_message', Load(), lineno=191, col_offset=8), [Str('import sys; sys.stderr.write("unflushed,"); sys.exit("message")', lineno=192, col_offset=12), Str('unflushed,message', lineno=193, col_offset=12)], [], None, None, lineno=191, col_offset=8), lineno=191, col_offset=8), Assign([Name('env', Store(), lineno=196, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=196, col_offset=14), 'environ', Load(), lineno=196, col_offset=14), 'copy', Load(), lineno=196, col_offset=14), [], [], None, None, lineno=196, col_offset=14), lineno=196, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=197, col_offset=8), Index(Str('PYTHONIOENCODING', lineno=197, col_offset=12)), Store(), lineno=197, col_offset=8)], Str('latin-1', lineno=197, col_offset=34), lineno=197, col_offset=8), Expr(Call(Name('check_exit_message', Load(), lineno=198, col_offset=8), [Str('import sys; sys.exit(u"h\\xe9")', lineno=199, col_offset=12), Str('h\xe9', lineno=200, col_offset=12)], [keyword('env', Name('env', Load(), lineno=200, col_offset=26))], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('test_getdefaultencoding', arguments([Name('self', Param(), lineno=202, col_offset=32)], None, None, []), [If(Attribute(Attribute(Name('test', Load(), lineno=203, col_offset=11), 'test_support', Load(), lineno=203, col_offset=11), 'have_unicode', Load(), lineno=203, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=204, col_offset=12), 'assertRaises', Load(), lineno=204, col_offset=12), [Name('TypeError', Load(), lineno=204, col_offset=30), Attribute(Name('sys', Load(), lineno=204, col_offset=41), 'getdefaultencoding', Load(), lineno=204, col_offset=41), Num(42, lineno=204, col_offset=65)], [], None, None, lineno=204, col_offset=12), lineno=204, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=206, col_offset=12), 'assertIsInstance', Load(), lineno=206, col_offset=12), [Call(Attribute(Name('sys', Load(), lineno=206, col_offset=34), 'getdefaultencoding', Load(), lineno=206, col_offset=34), [], [], None, None, lineno=206, col_offset=34), Name('str', Load(), lineno=206, col_offset=60)], [], None, None, lineno=206, col_offset=12), lineno=206, col_offset=12)], [], lineno=203, col_offset=8)], [], lineno=202, col_offset=4), FunctionDef('test_setcheckinterval', arguments([Name('self', Param(), lineno=211, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=212, col_offset=8), 'assertRaises', Load(), lineno=212, col_offset=8), [Name('TypeError', Load(), lineno=212, col_offset=26), Attribute(Name('sys', Load(), lineno=212, col_offset=37), 'setcheckinterval', Load(), lineno=212, col_offset=37)], [], None, None, lineno=212, col_offset=8), lineno=212, col_offset=8), Assign([Name('orig', Store(), lineno=213, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=213, col_offset=15), 'getcheckinterval', Load(), lineno=213, col_offset=15), [], [], None, None, lineno=213, col_offset=15), lineno=213, col_offset=8), For(Name('n', Store(), lineno=214, col_offset=12), Tuple([Num(0, lineno=214, col_offset=17), Num(100, lineno=214, col_offset=20), Num(120, lineno=214, col_offset=25), Name('orig', Load(), lineno=214, col_offset=30)], Load(), lineno=214, col_offset=17), [Expr(Call(Attribute(Name('sys', Load(), lineno=215, col_offset=12), 'setcheckinterval', Load(), lineno=215, col_offset=12), [Name('n', Load(), lineno=215, col_offset=33)], [], None, None, lineno=215, col_offset=12), lineno=215, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=216, col_offset=12), 'assertEqual', Load(), lineno=216, col_offset=12), [Call(Attribute(Name('sys', Load(), lineno=216, col_offset=29), 'getcheckinterval', Load(), lineno=216, col_offset=29), [], [], None, None, lineno=216, col_offset=29), Name('n', Load(), lineno=216, col_offset=53)], [], None, None, lineno=216, col_offset=12), lineno=216, col_offset=12)], [], lineno=214, col_offset=8)], [], lineno=211, col_offset=4), FunctionDef('test_recursionlimit', arguments([Name('self', Param(), lineno=218, col_offset=28)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=219, col_offset=8), 'assertRaises', Load(), lineno=219, col_offset=8), [Name('TypeError', Load(), lineno=219, col_offset=26), Attribute(Name('sys', Load(), lineno=219, col_offset=37), 'getrecursionlimit', Load(), lineno=219, col_offset=37), Num(42, lineno=219, col_offset=60)], [], None, None, lineno=219, col_offset=8), lineno=219, col_offset=8), Assign([Name('oldlimit', Store(), lineno=220, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=220, col_offset=19), 'getrecursionlimit', Load(), lineno=220, col_offset=19), [], [], None, None, lineno=220, col_offset=19), lineno=220, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=221, col_offset=8), 'assertRaises', Load(), lineno=221, col_offset=8), [Name('TypeError', Load(), lineno=221, col_offset=26), Attribute(Name('sys', Load(), lineno=221, col_offset=37), 'setrecursionlimit', Load(), lineno=221, col_offset=37)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=222, col_offset=8), 'assertRaises', Load(), lineno=222, col_offset=8), [Name('ValueError', Load(), lineno=222, col_offset=26), Attribute(Name('sys', Load(), lineno=222, col_offset=38), 'setrecursionlimit', Load(), lineno=222, col_offset=38), Num(-42, lineno=222, col_offset=62)], [], None, None, lineno=222, col_offset=8), lineno=222, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=223, col_offset=8), 'setrecursionlimit', Load(), lineno=223, col_offset=8), [Num(10000, lineno=223, col_offset=30)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=224, col_offset=8), 'assertEqual', Load(), lineno=224, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=224, col_offset=25), 'getrecursionlimit', Load(), lineno=224, col_offset=25), [], [], None, None, lineno=224, col_offset=25), Num(10000, lineno=224, col_offset=50)], [], None, None, lineno=224, col_offset=8), lineno=224, col_offset=8), Expr(Call(Attribute(Name('sys', Load(), lineno=225, col_offset=8), 'setrecursionlimit', Load(), lineno=225, col_offset=8), [Name('oldlimit', Load(), lineno=225, col_offset=30)], [], None, None, lineno=225, col_offset=8), lineno=225, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('test_getwindowsversion', arguments([Name('self', Param(), lineno=227, col_offset=31)], None, None, []), [Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=229, col_offset=8), 'test_support', Load(), lineno=229, col_offset=8), 'get_attribute', Load(), lineno=229, col_offset=8), [Name('sys', Load(), lineno=229, col_offset=40), Str('getwindowsversion', lineno=229, col_offset=45)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8), Assign([Name('v', Store(), lineno=230, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=230, col_offset=12), 'getwindowsversion', Load(), lineno=230, col_offset=12), [], [], None, None, lineno=230, col_offset=12), lineno=230, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=231, col_offset=8), 'assertEqual', Load(), lineno=231, col_offset=8), [Call(Name('len', Load(), lineno=231, col_offset=25), [Name('v', Load(), lineno=231, col_offset=29)], [], None, None, lineno=231, col_offset=25), Num(5, lineno=231, col_offset=33)], [], None, None, lineno=231, col_offset=8), lineno=231, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'assertIsInstance', Load(), lineno=232, col_offset=8), [Subscript(Name('v', Load(), lineno=232, col_offset=30), Index(Num(0, lineno=232, col_offset=32)), Load(), lineno=232, col_offset=30), Name('int', Load(), lineno=232, col_offset=36)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=233, col_offset=8), 'assertIsInstance', Load(), lineno=233, col_offset=8), [Subscript(Name('v', Load(), lineno=233, col_offset=30), Index(Num(1, lineno=233, col_offset=32)), Load(), lineno=233, col_offset=30), Name('int', Load(), lineno=233, col_offset=36)], [], None, None, lineno=233, col_offset=8), lineno=233, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=234, col_offset=8), 'assertIsInstance', Load(), lineno=234, col_offset=8), [Subscript(Name('v', Load(), lineno=234, col_offset=30), Index(Num(2, lineno=234, col_offset=32)), Load(), lineno=234, col_offset=30), Name('int', Load(), lineno=234, col_offset=36)], [], None, None, lineno=234, col_offset=8), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=235, col_offset=8), 'assertIsInstance', Load(), lineno=235, col_offset=8), [Subscript(Name('v', Load(), lineno=235, col_offset=30), Index(Num(3, lineno=235, col_offset=32)), Load(), lineno=235, col_offset=30), Name('int', Load(), lineno=235, col_offset=36)], [], None, None, lineno=235, col_offset=8), lineno=235, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=236, col_offset=8), 'assertIsInstance', Load(), lineno=236, col_offset=8), [Subscript(Name('v', Load(), lineno=236, col_offset=30), Index(Num(4, lineno=236, col_offset=32)), Load(), lineno=236, col_offset=30), Name('str', Load(), lineno=236, col_offset=36)], [], None, None, lineno=236, col_offset=8), lineno=236, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=237, col_offset=8), 'assertRaises', Load(), lineno=237, col_offset=8), [Name('IndexError', Load(), lineno=237, col_offset=26), Attribute(Name('operator', Load(), lineno=237, col_offset=38), 'getitem', Load(), lineno=237, col_offset=38), Name('v', Load(), lineno=237, col_offset=56), Num(5, lineno=237, col_offset=59)], [], None, None, lineno=237, col_offset=8), lineno=237, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=238, col_offset=8), 'assertIsInstance', Load(), lineno=238, col_offset=8), [Attribute(Name('v', Load(), lineno=238, col_offset=30), 'major', Load(), lineno=238, col_offset=30), Name('int', Load(), lineno=238, col_offset=39)], [], None, None, lineno=238, col_offset=8), lineno=238, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=239, col_offset=8), 'assertIsInstance', Load(), lineno=239, col_offset=8), [Attribute(Name('v', Load(), lineno=239, col_offset=30), 'minor', Load(), lineno=239, col_offset=30), Name('int', Load(), lineno=239, col_offset=39)], [], None, None, lineno=239, col_offset=8), lineno=239, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=240, col_offset=8), 'assertIsInstance', Load(), lineno=240, col_offset=8), [Attribute(Name('v', Load(), lineno=240, col_offset=30), 'build', Load(), lineno=240, col_offset=30), Name('int', Load(), lineno=240, col_offset=39)], [], None, None, lineno=240, col_offset=8), lineno=240, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertIsInstance', Load(), lineno=241, col_offset=8), [Attribute(Name('v', Load(), lineno=241, col_offset=30), 'platform', Load(), lineno=241, col_offset=30), Name('int', Load(), lineno=241, col_offset=42)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=242, col_offset=8), 'assertIsInstance', Load(), lineno=242, col_offset=8), [Attribute(Name('v', Load(), lineno=242, col_offset=30), 'service_pack', Load(), lineno=242, col_offset=30), Name('str', Load(), lineno=242, col_offset=46)], [], None, None, lineno=242, col_offset=8), lineno=242, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=243, col_offset=8), 'assertIsInstance', Load(), lineno=243, col_offset=8), [Attribute(Name('v', Load(), lineno=243, col_offset=30), 'service_pack_minor', Load(), lineno=243, col_offset=30), Name('int', Load(), lineno=243, col_offset=52)], [], None, None, lineno=243, col_offset=8), lineno=243, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=244, col_offset=8), 'assertIsInstance', Load(), lineno=244, col_offset=8), [Attribute(Name('v', Load(), lineno=244, col_offset=30), 'service_pack_major', Load(), lineno=244, col_offset=30), Name('int', Load(), lineno=244, col_offset=52)], [], None, None, lineno=244, col_offset=8), lineno=244, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=245, col_offset=8), 'assertIsInstance', Load(), lineno=245, col_offset=8), [Attribute(Name('v', Load(), lineno=245, col_offset=30), 'suite_mask', Load(), lineno=245, col_offset=30), Name('int', Load(), lineno=245, col_offset=44)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=246, col_offset=8), 'assertIsInstance', Load(), lineno=246, col_offset=8), [Attribute(Name('v', Load(), lineno=246, col_offset=30), 'product_type', Load(), lineno=246, col_offset=30), Name('int', Load(), lineno=246, col_offset=46)], [], None, None, lineno=246, col_offset=8), lineno=246, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=247, col_offset=8), 'assertEqual', Load(), lineno=247, col_offset=8), [Subscript(Name('v', Load(), lineno=247, col_offset=25), Index(Num(0, lineno=247, col_offset=27)), Load(), lineno=247, col_offset=25), Attribute(Name('v', Load(), lineno=247, col_offset=31), 'major', Load(), lineno=247, col_offset=31)], [], None, None, lineno=247, col_offset=8), lineno=247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=248, col_offset=8), 'assertEqual', Load(), lineno=248, col_offset=8), [Subscript(Name('v', Load(), lineno=248, col_offset=25), Index(Num(1, lineno=248, col_offset=27)), Load(), lineno=248, col_offset=25), Attribute(Name('v', Load(), lineno=248, col_offset=31), 'minor', Load(), lineno=248, col_offset=31)], [], None, None, lineno=248, col_offset=8), lineno=248, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=249, col_offset=8), 'assertEqual', Load(), lineno=249, col_offset=8), [Subscript(Name('v', Load(), lineno=249, col_offset=25), Index(Num(2, lineno=249, col_offset=27)), Load(), lineno=249, col_offset=25), Attribute(Name('v', Load(), lineno=249, col_offset=31), 'build', Load(), lineno=249, col_offset=31)], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=250, col_offset=8), 'assertEqual', Load(), lineno=250, col_offset=8), [Subscript(Name('v', Load(), lineno=250, col_offset=25), Index(Num(3, lineno=250, col_offset=27)), Load(), lineno=250, col_offset=25), Attribute(Name('v', Load(), lineno=250, col_offset=31), 'platform', Load(), lineno=250, col_offset=31)], [], None, None, lineno=250, col_offset=8), lineno=250, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=251, col_offset=8), 'assertEqual', Load(), lineno=251, col_offset=8), [Subscript(Name('v', Load(), lineno=251, col_offset=25), Index(Num(4, lineno=251, col_offset=27)), Load(), lineno=251, col_offset=25), Attribute(Name('v', Load(), lineno=251, col_offset=31), 'service_pack', Load(), lineno=251, col_offset=31)], [], None, None, lineno=251, col_offset=8), lineno=251, col_offset=8), Assign([Tuple([Name('maj', Store(), lineno=255, col_offset=8), Name('min', Store(), lineno=255, col_offset=13), Name('buildno', Store(), lineno=255, col_offset=18), Name('plat', Store(), lineno=255, col_offset=27), Name('csd', Store(), lineno=255, col_offset=33)], Store(), lineno=255, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=255, col_offset=39), 'getwindowsversion', Load(), lineno=255, col_offset=39), [], [], None, None, lineno=255, col_offset=39), lineno=255, col_offset=8)], [], lineno=227, col_offset=4), FunctionDef('test_dlopenflags', arguments([Name('self', Param(), lineno=257, col_offset=25)], None, None, []), [If(Call(Name('hasattr', Load(), lineno=258, col_offset=11), [Name('sys', Load(), lineno=258, col_offset=19), Str('setdlopenflags', lineno=258, col_offset=24)], [], None, None, lineno=258, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=259, col_offset=12), 'assertTrue', Load(), lineno=259, col_offset=12), [Call(Name('hasattr', Load(), lineno=259, col_offset=28), [Name('sys', Load(), lineno=259, col_offset=36), Str('getdlopenflags', lineno=259, col_offset=41)], [], None, None, lineno=259, col_offset=28)], [], None, None, lineno=259, col_offset=12), lineno=259, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=260, col_offset=12), 'assertRaises', Load(), lineno=260, col_offset=12), [Name('TypeError', Load(), lineno=260, col_offset=30), Attribute(Name('sys', Load(), lineno=260, col_offset=41), 'getdlopenflags', Load(), lineno=260, col_offset=41), Num(42, lineno=260, col_offset=61)], [], None, None, lineno=260, col_offset=12), lineno=260, col_offset=12), Assign([Name('oldflags', Store(), lineno=261, col_offset=12)], Call(Attribute(Name('sys', Load(), lineno=261, col_offset=23), 'getdlopenflags', Load(), lineno=261, col_offset=23), [], [], None, None, lineno=261, col_offset=23), lineno=261, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=262, col_offset=12), 'assertRaises', Load(), lineno=262, col_offset=12), [Name('TypeError', Load(), lineno=262, col_offset=30), Attribute(Name('sys', Load(), lineno=262, col_offset=41), 'setdlopenflags', Load(), lineno=262, col_offset=41)], [], None, None, lineno=262, col_offset=12), lineno=262, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=263, col_offset=12), 'setdlopenflags', Load(), lineno=263, col_offset=12), [BinOp(Name('oldflags', Load(), lineno=263, col_offset=31), Add(), Num(1, lineno=263, col_offset=40), lineno=263, col_offset=31)], [], None, None, lineno=263, col_offset=12), lineno=263, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=264, col_offset=12), 'assertEqual', Load(), lineno=264, col_offset=12), [Call(Attribute(Name('sys', Load(), lineno=264, col_offset=29), 'getdlopenflags', Load(), lineno=264, col_offset=29), [], [], None, None, lineno=264, col_offset=29), BinOp(Name('oldflags', Load(), lineno=264, col_offset=51), Add(), Num(1, lineno=264, col_offset=60), lineno=264, col_offset=51)], [], None, None, lineno=264, col_offset=12), lineno=264, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=265, col_offset=12), 'setdlopenflags', Load(), lineno=265, col_offset=12), [Name('oldflags', Load(), lineno=265, col_offset=31)], [], None, None, lineno=265, col_offset=12), lineno=265, col_offset=12)], [], lineno=258, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_refcount', arguments([Name('self', Param(), lineno=267, col_offset=22)], None, None, []), [Global(['n'], lineno=272, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=273, col_offset=8), 'assertRaises', Load(), lineno=273, col_offset=8), [Name('TypeError', Load(), lineno=273, col_offset=26), Attribute(Name('sys', Load(), lineno=273, col_offset=37), 'getrefcount', Load(), lineno=273, col_offset=37)], [], None, None, lineno=273, col_offset=8), lineno=273, col_offset=8), Assign([Name('c', Store(), lineno=274, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=274, col_offset=12), 'getrefcount', Load(), lineno=274, col_offset=12), [Name('None', Load(), lineno=274, col_offset=28)], [], None, None, lineno=274, col_offset=12), lineno=274, col_offset=8), Assign([Name('n', Store(), lineno=275, col_offset=8)], Name('None', Load(), lineno=275, col_offset=12), lineno=275, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'assertEqual', Load(), lineno=276, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=276, col_offset=25), 'getrefcount', Load(), lineno=276, col_offset=25), [Name('None', Load(), lineno=276, col_offset=41)], [], None, None, lineno=276, col_offset=25), BinOp(Name('c', Load(), lineno=276, col_offset=48), Add(), Num(1, lineno=276, col_offset=50), lineno=276, col_offset=48)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8), Delete([Name('n', Del(), lineno=277, col_offset=12)], lineno=277, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=278, col_offset=8), 'assertEqual', Load(), lineno=278, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=278, col_offset=25), 'getrefcount', Load(), lineno=278, col_offset=25), [Name('None', Load(), lineno=278, col_offset=41)], [], None, None, lineno=278, col_offset=25), Name('c', Load(), lineno=278, col_offset=48)], [], None, None, lineno=278, col_offset=8), lineno=278, col_offset=8), If(Call(Name('hasattr', Load(), lineno=279, col_offset=11), [Name('sys', Load(), lineno=279, col_offset=19), Str('gettotalrefcount', lineno=279, col_offset=24)], [], None, None, lineno=279, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=280, col_offset=12), 'assertIsInstance', Load(), lineno=280, col_offset=12), [Call(Attribute(Name('sys', Load(), lineno=280, col_offset=34), 'gettotalrefcount', Load(), lineno=280, col_offset=34), [], [], None, None, lineno=280, col_offset=34), Name('int', Load(), lineno=280, col_offset=58)], [], None, None, lineno=280, col_offset=12), lineno=280, col_offset=12)], [], lineno=279, col_offset=8)], [], lineno=267, col_offset=4), FunctionDef('test_getframe', arguments([Name('self', Param(), lineno=282, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=283, col_offset=8), 'assertRaises', Load(), lineno=283, col_offset=8), [Name('TypeError', Load(), lineno=283, col_offset=26), Attribute(Name('sys', Load(), lineno=283, col_offset=37), '_getframe', Load(), lineno=283, col_offset=37), Num(42, lineno=283, col_offset=52), Num(42, lineno=283, col_offset=56)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=284, col_offset=8), 'assertRaises', Load(), lineno=284, col_offset=8), [Name('ValueError', Load(), lineno=284, col_offset=26), Attribute(Name('sys', Load(), lineno=284, col_offset=38), '_getframe', Load(), lineno=284, col_offset=38), Num(2000000000, lineno=284, col_offset=53)], [], None, None, lineno=284, col_offset=8), lineno=284, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=285, col_offset=8), 'assertTrue', Load(), lineno=285, col_offset=8), [Compare(Attribute(Attribute(Attribute(Name('SysModuleTest', Load(), lineno=286, col_offset=12), 'test_getframe', Load(), lineno=286, col_offset=12), 'im_func', Load(), lineno=286, col_offset=12), 'func_code', Load(), lineno=286, col_offset=12), [Is()], [Attribute(Call(Attribute(Name('sys', Load(), lineno=287, col_offset=15), '_getframe', Load(), lineno=287, col_offset=15), [], [], None, None, lineno=287, col_offset=15), 'f_code', Load(), lineno=287, col_offset=15)], lineno=286, col_offset=12)], [], None, None, lineno=285, col_offset=8), lineno=285, col_offset=8)], [], lineno=282, col_offset=4), FunctionDef('test_current_frames', arguments([Name('self', Param(), lineno=291, col_offset=28)], None, None, []), [Assign([Name('have_threads', Store(), lineno=292, col_offset=8)], Name('True', Load(), lineno=292, col_offset=23), lineno=292, col_offset=8), TryExcept([Import([alias('thread', None)], lineno=294, col_offset=12)], [ExceptHandler(Name('ImportError', Load(), lineno=295, col_offset=15), None, [Assign([Name('have_threads', Store(), lineno=296, col_offset=12)], Name('False', Load(), lineno=296, col_offset=27), lineno=296, col_offset=12)], lineno=295, col_offset=8)], [], lineno=293, col_offset=8), If(Name('have_threads', Load(), lineno=298, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=299, col_offset=12), 'current_frames_with_threads', Load(), lineno=299, col_offset=12), [], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=301, col_offset=12), 'current_frames_without_threads', Load(), lineno=301, col_offset=12), [], [], None, None, lineno=301, col_offset=12), lineno=301, col_offset=12)], lineno=298, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('current_frames_with_threads', arguments([Name('self', Param(), lineno=305, col_offset=36)], None, None, []), [Import([alias('threading', None), alias('thread', None)], lineno=306, col_offset=8), Import([alias('traceback', None)], lineno=307, col_offset=8), Assign([Name('entered_g', Store(), lineno=312, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=312, col_offset=20), 'Event', Load(), lineno=312, col_offset=20), [], [], None, None, lineno=312, col_offset=20), lineno=312, col_offset=8), Assign([Name('leave_g', Store(), lineno=313, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=313, col_offset=18), 'Event', Load(), lineno=313, col_offset=18), [], [], None, None, lineno=313, col_offset=18), lineno=313, col_offset=8), Assign([Name('thread_info', Store(), lineno=314, col_offset=8)], List([], Load(), lineno=314, col_offset=22), lineno=314, col_offset=8), FunctionDef('f123', arguments([], None, None, []), [Expr(Call(Name('g456', Load(), lineno=317, col_offset=12), [], [], None, None, lineno=317, col_offset=12), lineno=317, col_offset=12)], [], lineno=316, col_offset=8), FunctionDef('g456', arguments([], None, None, []), [Expr(Call(Attribute(Name('thread_info', Load(), lineno=320, col_offset=12), 'append', Load(), lineno=320, col_offset=12), [Call(Attribute(Name('thread', Load(), lineno=320, col_offset=31), 'get_ident', Load(), lineno=320, col_offset=31), [], [], None, None, lineno=320, col_offset=31)], [], None, None, lineno=320, col_offset=12), lineno=320, col_offset=12), Expr(Call(Attribute(Name('entered_g', Load(), lineno=321, col_offset=12), 'set', Load(), lineno=321, col_offset=12), [], [], None, None, lineno=321, col_offset=12), lineno=321, col_offset=12), Expr(Call(Attribute(Name('leave_g', Load(), lineno=322, col_offset=12), 'wait', Load(), lineno=322, col_offset=12), [], [], None, None, lineno=322, col_offset=12), lineno=322, col_offset=12)], [], lineno=319, col_offset=8), Assign([Name('t', Store(), lineno=324, col_offset=8)], Call(Attribute(Name('threading', Load(), lineno=324, col_offset=12), 'Thread', Load(), lineno=324, col_offset=12), [], [keyword('target', Name('f123', Load(), lineno=324, col_offset=36))], None, None, lineno=324, col_offset=12), lineno=324, col_offset=8), Expr(Call(Attribute(Name('t', Load(), lineno=325, col_offset=8), 'start', Load(), lineno=325, col_offset=8), [], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Expr(Call(Attribute(Name('entered_g', Load(), lineno=326, col_offset=8), 'wait', Load(), lineno=326, col_offset=8), [], [], None, None, lineno=326, col_offset=8), lineno=326, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=331, col_offset=8), 'assertEqual', Load(), lineno=331, col_offset=8), [Call(Name('len', Load(), lineno=331, col_offset=25), [Name('thread_info', Load(), lineno=331, col_offset=29)], [], None, None, lineno=331, col_offset=25), Num(1, lineno=331, col_offset=43)], [], None, None, lineno=331, col_offset=8), lineno=331, col_offset=8), Assign([Name('thread_id', Store(), lineno=332, col_offset=8)], Subscript(Name('thread_info', Load(), lineno=332, col_offset=20), Index(Num(0, lineno=332, col_offset=32)), Load(), lineno=332, col_offset=20), lineno=332, col_offset=8), Assign([Name('d', Store(), lineno=334, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=334, col_offset=12), '_current_frames', Load(), lineno=334, col_offset=12), [], [], None, None, lineno=334, col_offset=12), lineno=334, col_offset=8), Assign([Name('main_id', Store(), lineno=336, col_offset=8)], Call(Attribute(Name('thread', Load(), lineno=336, col_offset=18), 'get_ident', Load(), lineno=336, col_offset=18), [], [], None, None, lineno=336, col_offset=18), lineno=336, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=337, col_offset=8), 'assertIn', Load(), lineno=337, col_offset=8), [Name('main_id', Load(), lineno=337, col_offset=22), Name('d', Load(), lineno=337, col_offset=31)], [], None, None, lineno=337, col_offset=8), lineno=337, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=338, col_offset=8), 'assertIn', Load(), lineno=338, col_offset=8), [Name('thread_id', Load(), lineno=338, col_offset=22), Name('d', Load(), lineno=338, col_offset=33)], [], None, None, lineno=338, col_offset=8), lineno=338, col_offset=8), Assign([Name('frame', Store(), lineno=341, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=341, col_offset=16), 'pop', Load(), lineno=341, col_offset=16), [Name('main_id', Load(), lineno=341, col_offset=22)], [], None, None, lineno=341, col_offset=16), lineno=341, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=342, col_offset=8), 'assertTrue', Load(), lineno=342, col_offset=8), [Compare(Name('frame', Load(), lineno=342, col_offset=24), [Is()], [Call(Attribute(Name('sys', Load(), lineno=342, col_offset=33), '_getframe', Load(), lineno=342, col_offset=33), [], [], None, None, lineno=342, col_offset=33)], lineno=342, col_offset=24)], [], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8), Assign([Name('frame', Store(), lineno=347, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=347, col_offset=16), 'pop', Load(), lineno=347, col_offset=16), [Name('thread_id', Load(), lineno=347, col_offset=22)], [], None, None, lineno=347, col_offset=16), lineno=347, col_offset=8), Assign([Name('stack', Store(), lineno=348, col_offset=8)], Call(Attribute(Name('traceback', Load(), lineno=348, col_offset=16), 'extract_stack', Load(), lineno=348, col_offset=16), [Name('frame', Load(), lineno=348, col_offset=40)], [], None, None, lineno=348, col_offset=16), lineno=348, col_offset=8), For(Tuple([Name('i', Store(), lineno=349, col_offset=12), Tuple([Name('filename', Store(), lineno=349, col_offset=16), Name('lineno', Store(), lineno=349, col_offset=26), Name('funcname', Store(), lineno=349, col_offset=34), Name('sourceline', Store(), lineno=349, col_offset=44)], Store(), lineno=349, col_offset=16)], Store(), lineno=349, col_offset=12), Call(Name('enumerate', Load(), lineno=349, col_offset=59), [Name('stack', Load(), lineno=349, col_offset=69)], [], None, None, lineno=349, col_offset=59), [If(Compare(Name('funcname', Load(), lineno=350, col_offset=15), [Eq()], [Str('f123', lineno=350, col_offset=27)], lineno=350, col_offset=15), [Break( lineno=351, col_offset=16)], [], lineno=350, col_offset=12)], [Expr(Call(Attribute(Name('self', Load(), lineno=353, col_offset=12), 'fail', Load(), lineno=353, col_offset=12), [Str("didn't find f123() on thread's call stack", lineno=353, col_offset=22)], [], None, None, lineno=353, col_offset=12), lineno=353, col_offset=12)], lineno=349, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=355, col_offset=8), 'assertEqual', Load(), lineno=355, col_offset=8), [Name('sourceline', Load(), lineno=355, col_offset=25), Str('g456()', lineno=355, col_offset=37)], [], None, None, lineno=355, col_offset=8), lineno=355, col_offset=8), Assign([Tuple([Name('filename', Store(), lineno=358, col_offset=8), Name('lineno', Store(), lineno=358, col_offset=18), Name('funcname', Store(), lineno=358, col_offset=26), Name('sourceline', Store(), lineno=358, col_offset=36)], Store(), lineno=358, col_offset=8)], Subscript(Name('stack', Load(), lineno=358, col_offset=49), Index(BinOp(Name('i', Load(), lineno=358, col_offset=55), Add(), Num(1, lineno=358, col_offset=57), lineno=358, col_offset=55)), Load(), lineno=358, col_offset=49), lineno=358, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=359, col_offset=8), 'assertEqual', Load(), lineno=359, col_offset=8), [Name('funcname', Load(), lineno=359, col_offset=25), Str('g456', lineno=359, col_offset=35)], [], None, None, lineno=359, col_offset=8), lineno=359, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=360, col_offset=8), 'assertIn', Load(), lineno=360, col_offset=8), [Name('sourceline', Load(), lineno=360, col_offset=22), List([Str('leave_g.wait()', lineno=360, col_offset=35), Str('entered_g.set()', lineno=360, col_offset=53)], Load(), lineno=360, col_offset=34)], [], None, None, lineno=360, col_offset=8), lineno=360, col_offset=8), Expr(Call(Attribute(Name('leave_g', Load(), lineno=363, col_offset=8), 'set', Load(), lineno=363, col_offset=8), [], [], None, None, lineno=363, col_offset=8), lineno=363, col_offset=8), Expr(Call(Attribute(Name('t', Load(), lineno=364, col_offset=8), 'join', Load(), lineno=364, col_offset=8), [], [], None, None, lineno=364, col_offset=8), lineno=364, col_offset=8)], [Attribute(Attribute(Name('test', Load(), lineno=304, col_offset=5), 'test_support', Load(), lineno=304, col_offset=5), 'reap_threads', Load(), lineno=304, col_offset=5)], lineno=304, col_offset=4), FunctionDef('current_frames_without_threads', arguments([Name('self', Param(), lineno=367, col_offset=39)], None, None, []), [Assign([Name('d', Store(), lineno=370, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=370, col_offset=12), '_current_frames', Load(), lineno=370, col_offset=12), [], [], None, None, lineno=370, col_offset=12), lineno=370, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=371, col_offset=8), 'assertEqual', Load(), lineno=371, col_offset=8), [Call(Name('len', Load(), lineno=371, col_offset=25), [Name('d', Load(), lineno=371, col_offset=29)], [], None, None, lineno=371, col_offset=25), Num(1, lineno=371, col_offset=33)], [], None, None, lineno=371, col_offset=8), lineno=371, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=372, col_offset=8), 'assertIn', Load(), lineno=372, col_offset=8), [Num(0, lineno=372, col_offset=22), Name('d', Load(), lineno=372, col_offset=25)], [], None, None, lineno=372, col_offset=8), lineno=372, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=373, col_offset=8), 'assertTrue', Load(), lineno=373, col_offset=8), [Compare(Subscript(Name('d', Load(), lineno=373, col_offset=24), Index(Num(0, lineno=373, col_offset=26)), Load(), lineno=373, col_offset=24), [Is()], [Call(Attribute(Name('sys', Load(), lineno=373, col_offset=32), '_getframe', Load(), lineno=373, col_offset=32), [], [], None, None, lineno=373, col_offset=32)], lineno=373, col_offset=24)], [], None, None, lineno=373, col_offset=8), lineno=373, col_offset=8)], [], lineno=367, col_offset=4), FunctionDef('test_attributes', arguments([Name('self', Param(), lineno=375, col_offset=24)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=376, col_offset=8), 'assertIsInstance', Load(), lineno=376, col_offset=8), [Attribute(Name('sys', Load(), lineno=376, col_offset=30), 'api_version', Load(), lineno=376, col_offset=30), Name('int', Load(), lineno=376, col_offset=47)], [], None, None, lineno=376, col_offset=8), lineno=376, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=377, col_offset=8), 'assertIsInstance', Load(), lineno=377, col_offset=8), [Attribute(Name('sys', Load(), lineno=377, col_offset=30), 'argv', Load(), lineno=377, col_offset=30), Name('list', Load(), lineno=377, col_offset=40)], [], None, None, lineno=377, col_offset=8), lineno=377, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=378, col_offset=8), 'assertIn', Load(), lineno=378, col_offset=8), [Attribute(Name('sys', Load(), lineno=378, col_offset=22), 'byteorder', Load(), lineno=378, col_offset=22), Tuple([Str('little', lineno=378, col_offset=38), Str('big', lineno=378, col_offset=48)], Load(), lineno=378, col_offset=38)], [], None, None, lineno=378, col_offset=8), lineno=378, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=379, col_offset=8), 'assertIsInstance', Load(), lineno=379, col_offset=8), [Attribute(Name('sys', Load(), lineno=379, col_offset=30), 'builtin_module_names', Load(), lineno=379, col_offset=30), Name('tuple', Load(), lineno=379, col_offset=56)], [], None, None, lineno=379, col_offset=8), lineno=379, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=380, col_offset=8), 'assertIsInstance', Load(), lineno=380, col_offset=8), [Attribute(Name('sys', Load(), lineno=380, col_offset=30), 'copyright', Load(), lineno=380, col_offset=30), Name('basestring', Load(), lineno=380, col_offset=45)], [], None, None, lineno=380, col_offset=8), lineno=380, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=381, col_offset=8), 'assertIsInstance', Load(), lineno=381, col_offset=8), [Attribute(Name('sys', Load(), lineno=381, col_offset=30), 'exec_prefix', Load(), lineno=381, col_offset=30), Name('basestring', Load(), lineno=381, col_offset=47)], [], None, None, lineno=381, col_offset=8), lineno=381, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=382, col_offset=8), 'assertIsInstance', Load(), lineno=382, col_offset=8), [Attribute(Name('sys', Load(), lineno=382, col_offset=30), 'executable', Load(), lineno=382, col_offset=30), Name('basestring', Load(), lineno=382, col_offset=46)], [], None, None, lineno=382, col_offset=8), lineno=382, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=383, col_offset=8), 'assertEqual', Load(), lineno=383, col_offset=8), [Call(Name('len', Load(), lineno=383, col_offset=25), [Attribute(Name('sys', Load(), lineno=383, col_offset=29), 'float_info', Load(), lineno=383, col_offset=29)], [], None, None, lineno=383, col_offset=25), Num(11, lineno=383, col_offset=46)], [], None, None, lineno=383, col_offset=8), lineno=383, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=384, col_offset=8), 'assertEqual', Load(), lineno=384, col_offset=8), [Attribute(Attribute(Name('sys', Load(), lineno=384, col_offset=25), 'float_info', Load(), lineno=384, col_offset=25), 'radix', Load(), lineno=384, col_offset=25), Num(2, lineno=384, col_offset=47)], [], None, None, lineno=384, col_offset=8), lineno=384, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=385, col_offset=8), 'assertEqual', Load(), lineno=385, col_offset=8), [Call(Name('len', Load(), lineno=385, col_offset=25), [Attribute(Name('sys', Load(), lineno=385, col_offset=29), 'long_info', Load(), lineno=385, col_offset=29)], [], None, None, lineno=385, col_offset=25), Num(2, lineno=385, col_offset=45)], [], None, None, lineno=385, col_offset=8), lineno=385, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=386, col_offset=8), 'assertTrue', Load(), lineno=386, col_offset=8), [Compare(BinOp(Attribute(Attribute(Name('sys', Load(), lineno=386, col_offset=24), 'long_info', Load(), lineno=386, col_offset=24), 'bits_per_digit', Load(), lineno=386, col_offset=24), Mod(), Num(5, lineno=386, col_offset=55), lineno=386, col_offset=24), [Eq()], [Num(0, lineno=386, col_offset=60)], lineno=386, col_offset=24)], [], None, None, lineno=386, col_offset=8), lineno=386, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=387, col_offset=8), 'assertTrue', Load(), lineno=387, col_offset=8), [Compare(Attribute(Attribute(Name('sys', Load(), lineno=387, col_offset=24), 'long_info', Load(), lineno=387, col_offset=24), 'sizeof_digit', Load(), lineno=387, col_offset=24), [GtE()], [Num(1, lineno=387, col_offset=54)], lineno=387, col_offset=24)], [], None, None, lineno=387, col_offset=8), lineno=387, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=388, col_offset=8), 'assertEqual', Load(), lineno=388, col_offset=8), [Call(Name('type', Load(), lineno=388, col_offset=25), [Attribute(Attribute(Name('sys', Load(), lineno=388, col_offset=30), 'long_info', Load(), lineno=388, col_offset=30), 'bits_per_digit', Load(), lineno=388, col_offset=30)], [], None, None, lineno=388, col_offset=25), Name('int', Load(), lineno=388, col_offset=61)], [], None, None, lineno=388, col_offset=8), lineno=388, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=389, col_offset=8), 'assertEqual', Load(), lineno=389, col_offset=8), [Call(Name('type', Load(), lineno=389, col_offset=25), [Attribute(Attribute(Name('sys', Load(), lineno=389, col_offset=30), 'long_info', Load(), lineno=389, col_offset=30), 'sizeof_digit', Load(), lineno=389, col_offset=30)], [], None, None, lineno=389, col_offset=25), Name('int', Load(), lineno=389, col_offset=59)], [], None, None, lineno=389, col_offset=8), lineno=389, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=390, col_offset=8), 'assertIsInstance', Load(), lineno=390, col_offset=8), [Attribute(Name('sys', Load(), lineno=390, col_offset=30), 'hexversion', Load(), lineno=390, col_offset=30), Name('int', Load(), lineno=390, col_offset=46)], [], None, None, lineno=390, col_offset=8), lineno=390, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=391, col_offset=8), 'assertIsInstance', Load(), lineno=391, col_offset=8), [Attribute(Name('sys', Load(), lineno=391, col_offset=30), 'maxint', Load(), lineno=391, col_offset=30), Name('int', Load(), lineno=391, col_offset=42)], [], None, None, lineno=391, col_offset=8), lineno=391, col_offset=8), If(Attribute(Attribute(Name('test', Load(), lineno=392, col_offset=11), 'test_support', Load(), lineno=392, col_offset=11), 'have_unicode', Load(), lineno=392, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=393, col_offset=12), 'assertIsInstance', Load(), lineno=393, col_offset=12), [Attribute(Name('sys', Load(), lineno=393, col_offset=34), 'maxunicode', Load(), lineno=393, col_offset=34), Name('int', Load(), lineno=393, col_offset=50)], [], None, None, lineno=393, col_offset=12), lineno=393, col_offset=12)], [], lineno=392, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=394, col_offset=8), 'assertIsInstance', Load(), lineno=394, col_offset=8), [Attribute(Name('sys', Load(), lineno=394, col_offset=30), 'platform', Load(), lineno=394, col_offset=30), Name('basestring', Load(), lineno=394, col_offset=44)], [], None, None, lineno=394, col_offset=8), lineno=394, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=395, col_offset=8), 'assertIsInstance', Load(), lineno=395, col_offset=8), [Attribute(Name('sys', Load(), lineno=395, col_offset=30), 'prefix', Load(), lineno=395, col_offset=30), Name('basestring', Load(), lineno=395, col_offset=42)], [], None, None, lineno=395, col_offset=8), lineno=395, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=396, col_offset=8), 'assertIsInstance', Load(), lineno=396, col_offset=8), [Attribute(Name('sys', Load(), lineno=396, col_offset=30), 'version', Load(), lineno=396, col_offset=30), Name('basestring', Load(), lineno=396, col_offset=43)], [], None, None, lineno=396, col_offset=8), lineno=396, col_offset=8), Assign([Name('vi', Store(), lineno=397, col_offset=8)], Attribute(Name('sys', Load(), lineno=397, col_offset=13), 'version_info', Load(), lineno=397, col_offset=13), lineno=397, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'assertIsInstance', Load(), lineno=398, col_offset=8), [Subscript(Name('vi', Load(), lineno=398, col_offset=30), Slice(None, None, None), Load(), lineno=398, col_offset=30), Name('tuple', Load(), lineno=398, col_offset=37)], [], None, None, lineno=398, col_offset=8), lineno=398, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=399, col_offset=8), 'assertEqual', Load(), lineno=399, col_offset=8), [Call(Name('len', Load(), lineno=399, col_offset=25), [Name('vi', Load(), lineno=399, col_offset=29)], [], None, None, lineno=399, col_offset=25), Num(5, lineno=399, col_offset=34)], [], None, None, lineno=399, col_offset=8), lineno=399, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=400, col_offset=8), 'assertIsInstance', Load(), lineno=400, col_offset=8), [Subscript(Name('vi', Load(), lineno=400, col_offset=30), Index(Num(0, lineno=400, col_offset=33)), Load(), lineno=400, col_offset=30), Name('int', Load(), lineno=400, col_offset=37)], [], None, None, lineno=400, col_offset=8), lineno=400, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=401, col_offset=8), 'assertIsInstance', Load(), lineno=401, col_offset=8), [Subscript(Name('vi', Load(), lineno=401, col_offset=30), Index(Num(1, lineno=401, col_offset=33)), Load(), lineno=401, col_offset=30), Name('int', Load(), lineno=401, col_offset=37)], [], None, None, lineno=401, col_offset=8), lineno=401, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=402, col_offset=8), 'assertIsInstance', Load(), lineno=402, col_offset=8), [Subscript(Name('vi', Load(), lineno=402, col_offset=30), Index(Num(2, lineno=402, col_offset=33)), Load(), lineno=402, col_offset=30), Name('int', Load(), lineno=402, col_offset=37)], [], None, None, lineno=402, col_offset=8), lineno=402, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=403, col_offset=8), 'assertIn', Load(), lineno=403, col_offset=8), [Subscript(Name('vi', Load(), lineno=403, col_offset=22), Index(Num(3, lineno=403, col_offset=25)), Load(), lineno=403, col_offset=22), Tuple([Str('alpha', lineno=403, col_offset=30), Str('beta', lineno=403, col_offset=39), Str('candidate', lineno=403, col_offset=47), Str('final', lineno=403, col_offset=60)], Load(), lineno=403, col_offset=30)], [], None, None, lineno=403, col_offset=8), lineno=403, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=404, col_offset=8), 'assertIsInstance', Load(), lineno=404, col_offset=8), [Subscript(Name('vi', Load(), lineno=404, col_offset=30), Index(Num(4, lineno=404, col_offset=33)), Load(), lineno=404, col_offset=30), Name('int', Load(), lineno=404, col_offset=37)], [], None, None, lineno=404, col_offset=8), lineno=404, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=405, col_offset=8), 'assertIsInstance', Load(), lineno=405, col_offset=8), [Attribute(Name('vi', Load(), lineno=405, col_offset=30), 'major', Load(), lineno=405, col_offset=30), Name('int', Load(), lineno=405, col_offset=40)], [], None, None, lineno=405, col_offset=8), lineno=405, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=406, col_offset=8), 'assertIsInstance', Load(), lineno=406, col_offset=8), [Attribute(Name('vi', Load(), lineno=406, col_offset=30), 'minor', Load(), lineno=406, col_offset=30), Name('int', Load(), lineno=406, col_offset=40)], [], None, None, lineno=406, col_offset=8), lineno=406, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=407, col_offset=8), 'assertIsInstance', Load(), lineno=407, col_offset=8), [Attribute(Name('vi', Load(), lineno=407, col_offset=30), 'micro', Load(), lineno=407, col_offset=30), Name('int', Load(), lineno=407, col_offset=40)], [], None, None, lineno=407, col_offset=8), lineno=407, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=408, col_offset=8), 'assertIn', Load(), lineno=408, col_offset=8), [Attribute(Name('vi', Load(), lineno=408, col_offset=22), 'releaselevel', Load(), lineno=408, col_offset=22), Tuple([Str('alpha', lineno=408, col_offset=40), Str('beta', lineno=408, col_offset=49), Str('candidate', lineno=408, col_offset=57), Str('final', lineno=408, col_offset=70)], Load(), lineno=408, col_offset=40)], [], None, None, lineno=408, col_offset=8), lineno=408, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=409, col_offset=8), 'assertIsInstance', Load(), lineno=409, col_offset=8), [Attribute(Name('vi', Load(), lineno=409, col_offset=30), 'serial', Load(), lineno=409, col_offset=30), Name('int', Load(), lineno=409, col_offset=41)], [], None, None, lineno=409, col_offset=8), lineno=409, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=410, col_offset=8), 'assertEqual', Load(), lineno=410, col_offset=8), [Subscript(Name('vi', Load(), lineno=410, col_offset=25), Index(Num(0, lineno=410, col_offset=28)), Load(), lineno=410, col_offset=25), Attribute(Name('vi', Load(), lineno=410, col_offset=32), 'major', Load(), lineno=410, col_offset=32)], [], None, None, lineno=410, col_offset=8), lineno=410, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=411, col_offset=8), 'assertEqual', Load(), lineno=411, col_offset=8), [Subscript(Name('vi', Load(), lineno=411, col_offset=25), Index(Num(1, lineno=411, col_offset=28)), Load(), lineno=411, col_offset=25), Attribute(Name('vi', Load(), lineno=411, col_offset=32), 'minor', Load(), lineno=411, col_offset=32)], [], None, None, lineno=411, col_offset=8), lineno=411, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=412, col_offset=8), 'assertEqual', Load(), lineno=412, col_offset=8), [Subscript(Name('vi', Load(), lineno=412, col_offset=25), Index(Num(2, lineno=412, col_offset=28)), Load(), lineno=412, col_offset=25), Attribute(Name('vi', Load(), lineno=412, col_offset=32), 'micro', Load(), lineno=412, col_offset=32)], [], None, None, lineno=412, col_offset=8), lineno=412, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=413, col_offset=8), 'assertEqual', Load(), lineno=413, col_offset=8), [Subscript(Name('vi', Load(), lineno=413, col_offset=25), Index(Num(3, lineno=413, col_offset=28)), Load(), lineno=413, col_offset=25), Attribute(Name('vi', Load(), lineno=413, col_offset=32), 'releaselevel', Load(), lineno=413, col_offset=32)], [], None, None, lineno=413, col_offset=8), lineno=413, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=414, col_offset=8), 'assertEqual', Load(), lineno=414, col_offset=8), [Subscript(Name('vi', Load(), lineno=414, col_offset=25), Index(Num(4, lineno=414, col_offset=28)), Load(), lineno=414, col_offset=25), Attribute(Name('vi', Load(), lineno=414, col_offset=32), 'serial', Load(), lineno=414, col_offset=32)], [], None, None, lineno=414, col_offset=8), lineno=414, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=415, col_offset=8), 'assertTrue', Load(), lineno=415, col_offset=8), [Compare(Name('vi', Load(), lineno=415, col_offset=24), [Gt()], [Tuple([Num(1, lineno=415, col_offset=30), Num(0, lineno=415, col_offset=32), Num(0, lineno=415, col_offset=34)], Load(), lineno=415, col_offset=30)], lineno=415, col_offset=24)], [], None, None, lineno=415, col_offset=8), lineno=415, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=416, col_offset=8), 'assertIsInstance', Load(), lineno=416, col_offset=8), [Attribute(Name('sys', Load(), lineno=416, col_offset=30), 'float_repr_style', Load(), lineno=416, col_offset=30), Name('str', Load(), lineno=416, col_offset=52)], [], None, None, lineno=416, col_offset=8), lineno=416, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=417, col_offset=8), 'assertIn', Load(), lineno=417, col_offset=8), [Attribute(Name('sys', Load(), lineno=417, col_offset=22), 'float_repr_style', Load(), lineno=417, col_offset=22), Tuple([Str('short', lineno=417, col_offset=45), Str('legacy', lineno=417, col_offset=54)], Load(), lineno=417, col_offset=45)], [], None, None, lineno=417, col_offset=8), lineno=417, col_offset=8)], [], lineno=375, col_offset=4), FunctionDef('test_43581', arguments([Name('self', Param(), lineno=419, col_offset=19)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=422, col_offset=8), 'assertTrue', Load(), lineno=422, col_offset=8), [Compare(Attribute(Attribute(Name('sys', Load(), lineno=422, col_offset=24), '__stdout__', Load(), lineno=422, col_offset=24), 'encoding', Load(), lineno=422, col_offset=24), [Eq()], [Attribute(Attribute(Name('sys', Load(), lineno=422, col_offset=51), '__stderr__', Load(), lineno=422, col_offset=51), 'encoding', Load(), lineno=422, col_offset=51)], lineno=422, col_offset=24)], [], None, None, lineno=422, col_offset=8), lineno=422, col_offset=8)], [], lineno=419, col_offset=4), FunctionDef('test_sys_flags', arguments([Name('self', Param(), lineno=424, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=425, col_offset=8), 'assertTrue', Load(), lineno=425, col_offset=8), [Attribute(Name('sys', Load(), lineno=425, col_offset=24), 'flags', Load(), lineno=425, col_offset=24)], [], None, None, lineno=425, col_offset=8), lineno=425, col_offset=8), Assign([Name('attrs', Store(), lineno=426, col_offset=8)], Tuple([Str('debug', lineno=426, col_offset=17), Str('py3k_warning', lineno=426, col_offset=26), Str('division_warning', lineno=426, col_offset=42), Str('division_new', lineno=426, col_offset=62), Str('inspect', lineno=427, col_offset=17), Str('interactive', lineno=427, col_offset=28), Str('optimize', lineno=427, col_offset=43), Str('dont_write_bytecode', lineno=427, col_offset=55), Str('no_site', lineno=428, col_offset=17), Str('ignore_environment', lineno=428, col_offset=28), Str('tabcheck', lineno=428, col_offset=50), Str('verbose', lineno=428, col_offset=62), Str('unicode', lineno=429, col_offset=17), Str('bytes_warning', lineno=429, col_offset=28)], Load(), lineno=426, col_offset=17), lineno=426, col_offset=8), For(Name('attr', Store(), lineno=430, col_offset=12), Name('attrs', Load(), lineno=430, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=431, col_offset=12), 'assertTrue', Load(), lineno=431, col_offset=12), [Call(Name('hasattr', Load(), lineno=431, col_offset=28), [Attribute(Name('sys', Load(), lineno=431, col_offset=36), 'flags', Load(), lineno=431, col_offset=36), Name('attr', Load(), lineno=431, col_offset=47)], [], None, None, lineno=431, col_offset=28), Name('attr', Load(), lineno=431, col_offset=54)], [], None, None, lineno=431, col_offset=12), lineno=431, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=432, col_offset=12), 'assertEqual', Load(), lineno=432, col_offset=12), [Call(Name('type', Load(), lineno=432, col_offset=29), [Call(Name('getattr', Load(), lineno=432, col_offset=34), [Attribute(Name('sys', Load(), lineno=432, col_offset=42), 'flags', Load(), lineno=432, col_offset=42), Name('attr', Load(), lineno=432, col_offset=53)], [], None, None, lineno=432, col_offset=34)], [], None, None, lineno=432, col_offset=29), Name('int', Load(), lineno=432, col_offset=61), Name('attr', Load(), lineno=432, col_offset=66)], [], None, None, lineno=432, col_offset=12), lineno=432, col_offset=12)], [], lineno=430, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=433, col_offset=8), 'assertTrue', Load(), lineno=433, col_offset=8), [Call(Name('repr', Load(), lineno=433, col_offset=24), [Attribute(Name('sys', Load(), lineno=433, col_offset=29), 'flags', Load(), lineno=433, col_offset=29)], [], None, None, lineno=433, col_offset=24)], [], None, None, lineno=433, col_offset=8), lineno=433, col_offset=8)], [], lineno=424, col_offset=4), FunctionDef('test_clear_type_cache', arguments([Name('self', Param(), lineno=435, col_offset=30)], None, None, []), [Expr(Call(Attribute(Name('sys', Load(), lineno=436, col_offset=8), '_clear_type_cache', Load(), lineno=436, col_offset=8), [], [], None, None, lineno=436, col_offset=8), lineno=436, col_offset=8)], [], lineno=435, col_offset=4), FunctionDef('test_ioencoding', arguments([Name('self', Param(), lineno=438, col_offset=24)], None, None, []), [Import([alias('subprocess', None)], lineno=439, col_offset=8), Assign([Name('env', Store(), lineno=440, col_offset=8)], Call(Name('dict', Load(), lineno=440, col_offset=14), [Attribute(Name('os', Load(), lineno=440, col_offset=19), 'environ', Load(), lineno=440, col_offset=19)], [], None, None, lineno=440, col_offset=14), lineno=440, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=445, col_offset=8), Index(Str('PYTHONIOENCODING', lineno=445, col_offset=12)), Store(), lineno=445, col_offset=8)], Str('cp424', lineno=445, col_offset=34), lineno=445, col_offset=8), Assign([Name('p', Store(), lineno=446, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=446, col_offset=12), 'Popen', Load(), lineno=446, col_offset=12), [List([Attribute(Name('sys', Load(), lineno=446, col_offset=30), 'executable', Load(), lineno=446, col_offset=30), Str('-c', lineno=446, col_offset=46), Str('print unichr(0xa2)', lineno=446, col_offset=52)], Load(), lineno=446, col_offset=29)], [keyword('stdout', Attribute(Name('subprocess', Load(), lineno=447, col_offset=38), 'PIPE', Load(), lineno=447, col_offset=38)), keyword('env', Name('env', Load(), lineno=447, col_offset=59))], None, None, lineno=446, col_offset=12), lineno=446, col_offset=8), Assign([Name('out', Store(), lineno=448, col_offset=8)], Call(Attribute(Subscript(Call(Attribute(Name('p', Load(), lineno=448, col_offset=14), 'communicate', Load(), lineno=448, col_offset=14), [], [], None, None, lineno=448, col_offset=14), Index(Num(0, lineno=448, col_offset=30)), Load(), lineno=448, col_offset=14), 'strip', Load(), lineno=448, col_offset=14), [], [], None, None, lineno=448, col_offset=14), lineno=448, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=449, col_offset=8), 'assertEqual', Load(), lineno=449, col_offset=8), [Name('out', Load(), lineno=449, col_offset=25), Call(Attribute(Call(Name('unichr', Load(), lineno=449, col_offset=30), [Num(162, lineno=449, col_offset=37)], [], None, None, lineno=449, col_offset=30), 'encode', Load(), lineno=449, col_offset=30), [Str('cp424', lineno=449, col_offset=50)], [], None, None, lineno=449, col_offset=30)], [], None, None, lineno=449, col_offset=8), lineno=449, col_offset=8), Assign([Subscript(Name('env', Load(), lineno=451, col_offset=8), Index(Str('PYTHONIOENCODING', lineno=451, col_offset=12)), Store(), lineno=451, col_offset=8)], Str('ascii:replace', lineno=451, col_offset=34), lineno=451, col_offset=8), Assign([Name('p', Store(), lineno=452, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=452, col_offset=12), 'Popen', Load(), lineno=452, col_offset=12), [List([Attribute(Name('sys', Load(), lineno=452, col_offset=30), 'executable', Load(), lineno=452, col_offset=30), Str('-c', lineno=452, col_offset=46), Str('print unichr(0xa2)', lineno=452, col_offset=52)], Load(), lineno=452, col_offset=29)], [keyword('stdout', Attribute(Name('subprocess', Load(), lineno=453, col_offset=38), 'PIPE', Load(), lineno=453, col_offset=38)), keyword('env', Name('env', Load(), lineno=453, col_offset=59))], None, None, lineno=452, col_offset=12), lineno=452, col_offset=8), Assign([Name('out', Store(), lineno=454, col_offset=8)], Call(Attribute(Subscript(Call(Attribute(Name('p', Load(), lineno=454, col_offset=14), 'communicate', Load(), lineno=454, col_offset=14), [], [], None, None, lineno=454, col_offset=14), Index(Num(0, lineno=454, col_offset=30)), Load(), lineno=454, col_offset=14), 'strip', Load(), lineno=454, col_offset=14), [], [], None, None, lineno=454, col_offset=14), lineno=454, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=455, col_offset=8), 'assertEqual', Load(), lineno=455, col_offset=8), [Name('out', Load(), lineno=455, col_offset=25), Str('?', lineno=455, col_offset=30)], [], None, None, lineno=455, col_offset=8), lineno=455, col_offset=8)], [], lineno=438, col_offset=4), FunctionDef('test_call_tracing', arguments([Name('self', Param(), lineno=457, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=458, col_offset=8), 'assertEqual', Load(), lineno=458, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=458, col_offset=25), 'call_tracing', Load(), lineno=458, col_offset=25), [Name('str', Load(), lineno=458, col_offset=42), Tuple([Num(2, lineno=458, col_offset=48)], Load(), lineno=458, col_offset=48)], [], None, None, lineno=458, col_offset=25), Str('2', lineno=458, col_offset=54)], [], None, None, lineno=458, col_offset=8), lineno=458, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=459, col_offset=8), 'assertRaises', Load(), lineno=459, col_offset=8), [Name('TypeError', Load(), lineno=459, col_offset=26), Attribute(Name('sys', Load(), lineno=459, col_offset=37), 'call_tracing', Load(), lineno=459, col_offset=37), Name('str', Load(), lineno=459, col_offset=55), Num(2, lineno=459, col_offset=60)], [], None, None, lineno=459, col_offset=8), lineno=459, col_offset=8)], [], lineno=457, col_offset=4), FunctionDef('test_executable', arguments([Name('self', Param(), lineno=461, col_offset=24)], None, None, []), [Import([alias('subprocess', None)], lineno=465, col_offset=8), Assign([Name('python_dir', Store(), lineno=468, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=468, col_offset=21), 'path', Load(), lineno=468, col_offset=21), 'dirname', Load(), lineno=468, col_offset=21), [Call(Attribute(Attribute(Name('os', Load(), lineno=468, col_offset=37), 'path', Load(), lineno=468, col_offset=37), 'realpath', Load(), lineno=468, col_offset=37), [Attribute(Name('sys', Load(), lineno=468, col_offset=54), 'executable', Load(), lineno=468, col_offset=54)], [], None, None, lineno=468, col_offset=37)], [], None, None, lineno=468, col_offset=21), lineno=468, col_offset=8), Assign([Name('p', Store(), lineno=469, col_offset=8)], Call(Attribute(Name('subprocess', Load(), lineno=469, col_offset=12), 'Popen', Load(), lineno=469, col_offset=12), [List([Str('nonexistent', lineno=470, col_offset=13), Str('-c', lineno=470, col_offset=28), Str('import sys; print repr(sys.executable)', lineno=470, col_offset=34)], Load(), lineno=470, col_offset=12)], [keyword('executable', Attribute(Name('sys', Load(), lineno=471, col_offset=23), 'executable', Load(), lineno=471, col_offset=23)), keyword('stdout', Attribute(Name('subprocess', Load(), lineno=471, col_offset=46), 'PIPE', Load(), lineno=471, col_offset=46)), keyword('cwd', Name('python_dir', Load(), lineno=471, col_offset=67))], None, None, lineno=469, col_offset=12), lineno=469, col_offset=8), Assign([Name('executable', Store(), lineno=472, col_offset=8)], Call(Attribute(Subscript(Call(Attribute(Name('p', Load(), lineno=472, col_offset=21), 'communicate', Load(), lineno=472, col_offset=21), [], [], None, None, lineno=472, col_offset=21), Index(Num(0, lineno=472, col_offset=37)), Load(), lineno=472, col_offset=21), 'strip', Load(), lineno=472, col_offset=21), [], [], None, None, lineno=472, col_offset=21), lineno=472, col_offset=8), Expr(Call(Attribute(Name('p', Load(), lineno=473, col_offset=8), 'wait', Load(), lineno=473, col_offset=8), [], [], None, None, lineno=473, col_offset=8), lineno=473, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=474, col_offset=8), 'assertIn', Load(), lineno=474, col_offset=8), [Name('executable', Load(), lineno=474, col_offset=22), List([Str("''", lineno=474, col_offset=35), Call(Name('repr', Load(), lineno=474, col_offset=41), [Attribute(Name('sys', Load(), lineno=474, col_offset=46), 'executable', Load(), lineno=474, col_offset=46)], [], None, None, lineno=474, col_offset=41)], Load(), lineno=474, col_offset=34)], [], None, None, lineno=474, col_offset=8), lineno=474, col_offset=8)], [], lineno=461, col_offset=4)], [], lineno=7, col_offset=0), ClassDef('SizeofTest', [Attribute(Name('unittest', Load(), lineno=476, col_offset=17), 'TestCase', Load(), lineno=476, col_offset=17)], [Assign([Name('TPFLAGS_HAVE_GC', Store(), lineno=478, col_offset=4)], BinOp(Num(1, lineno=478, col_offset=22), LShift(), Num(14, lineno=478, col_offset=25), lineno=478, col_offset=22), lineno=478, col_offset=4), Assign([Name('TPFLAGS_HEAPTYPE', Store(), lineno=479, col_offset=4)], BinOp(Num(1L, lineno=479, col_offset=23), LShift(), Num(9, lineno=479, col_offset=27), lineno=479, col_offset=23), lineno=479, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=481, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=482, col_offset=8), 'c', Store(), lineno=482, col_offset=8)], Call(Name('len', Load(), lineno=482, col_offset=17), [Call(Attribute(Name('struct', Load(), lineno=482, col_offset=21), 'pack', Load(), lineno=482, col_offset=21), [Str('c', lineno=482, col_offset=33), Str(' ', lineno=482, col_offset=38)], [], None, None, lineno=482, col_offset=21)], [], None, None, lineno=482, col_offset=17), lineno=482, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=483, col_offset=8), 'H', Store(), lineno=483, col_offset=8)], Call(Name('len', Load(), lineno=483, col_offset=17), [Call(Attribute(Name('struct', Load(), lineno=483, col_offset=21), 'pack', Load(), lineno=483, col_offset=21), [Str('H', lineno=483, col_offset=33), Num(0, lineno=483, col_offset=38)], [], None, None, lineno=483, col_offset=21)], [], None, None, lineno=483, col_offset=17), lineno=483, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=484, col_offset=8), 'i', Store(), lineno=484, col_offset=8)], Call(Name('len', Load(), lineno=484, col_offset=17), [Call(Attribute(Name('struct', Load(), lineno=484, col_offset=21), 'pack', Load(), lineno=484, col_offset=21), [Str('i', lineno=484, col_offset=33), Num(0, lineno=484, col_offset=38)], [], None, None, lineno=484, col_offset=21)], [], None, None, lineno=484, col_offset=17), lineno=484, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=485, col_offset=8), 'l', Store(), lineno=485, col_offset=8)], Call(Name('len', Load(), lineno=485, col_offset=17), [Call(Attribute(Name('struct', Load(), lineno=485, col_offset=21), 'pack', Load(), lineno=485, col_offset=21), [Str('l', lineno=485, col_offset=33), Num(0, lineno=485, col_offset=38)], [], None, None, lineno=485, col_offset=21)], [], None, None, lineno=485, col_offset=17), lineno=485, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=486, col_offset=8), 'P', Store(), lineno=486, col_offset=8)], Call(Name('len', Load(), lineno=486, col_offset=17), [Call(Attribute(Name('struct', Load(), lineno=486, col_offset=21), 'pack', Load(), lineno=486, col_offset=21), [Str('P', lineno=486, col_offset=33), Num(0, lineno=486, col_offset=38)], [], None, None, lineno=486, col_offset=21)], [], None, None, lineno=486, col_offset=17), lineno=486, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=489, col_offset=8), 'header', Store(), lineno=489, col_offset=8)], Str('PP', lineno=489, col_offset=22), lineno=489, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=490, col_offset=8), 'vheader', Store(), lineno=490, col_offset=8)], BinOp(Attribute(Name('self', Load(), lineno=490, col_offset=23), 'header', Load(), lineno=490, col_offset=23), Add(), Str('P', lineno=490, col_offset=37), lineno=490, col_offset=23), lineno=490, col_offset=8), If(Call(Name('hasattr', Load(), lineno=491, col_offset=11), [Name('sys', Load(), lineno=491, col_offset=19), Str('gettotalrefcount', lineno=491, col_offset=24)], [], None, None, lineno=491, col_offset=11), [AugAssign(Attribute(Name('self', Load(), lineno=492, col_offset=12), 'header', Store(), lineno=492, col_offset=12), Add(), Str('2P', lineno=492, col_offset=27), lineno=492, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=493, col_offset=12), 'vheader', Store(), lineno=493, col_offset=12), Add(), Str('2P', lineno=493, col_offset=28), lineno=493, col_offset=12)], [], lineno=491, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=494, col_offset=8), 'longdigit', Store(), lineno=494, col_offset=8)], Attribute(Attribute(Name('sys', Load(), lineno=494, col_offset=25), 'long_info', Load(), lineno=494, col_offset=25), 'sizeof_digit', Load(), lineno=494, col_offset=25), lineno=494, col_offset=8), Import([alias('_testcapi', None)], lineno=495, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=496, col_offset=8), 'gc_headsize', Store(), lineno=496, col_offset=8)], Attribute(Name('_testcapi', Load(), lineno=496, col_offset=27), 'SIZEOF_PYGC_HEAD', Load(), lineno=496, col_offset=27), lineno=496, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=497, col_offset=8), 'file', Store(), lineno=497, col_offset=8)], Call(Name('open', Load(), lineno=497, col_offset=20), [Attribute(Attribute(Name('test', Load(), lineno=497, col_offset=25), 'test_support', Load(), lineno=497, col_offset=25), 'TESTFN', Load(), lineno=497, col_offset=25), Str('wb', lineno=497, col_offset=51)], [], None, None, lineno=497, col_offset=20), lineno=497, col_offset=8)], [], lineno=481, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=499, col_offset=17)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=500, col_offset=8), 'file', Load(), lineno=500, col_offset=8), 'close', Load(), lineno=500, col_offset=8), [], [], None, None, lineno=500, col_offset=8), lineno=500, col_offset=8), Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=501, col_offset=8), 'test_support', Load(), lineno=501, col_offset=8), 'unlink', Load(), lineno=501, col_offset=8), [Attribute(Attribute(Name('test', Load(), lineno=501, col_offset=33), 'test_support', Load(), lineno=501, col_offset=33), 'TESTFN', Load(), lineno=501, col_offset=33)], [], None, None, lineno=501, col_offset=8), lineno=501, col_offset=8)], [], lineno=499, col_offset=4), FunctionDef('check_sizeof', arguments([Name('self', Param(), lineno=503, col_offset=21), Name('o', Param(), lineno=503, col_offset=27), Name('size', Param(), lineno=503, col_offset=30)], None, None, []), [Assign([Name('result', Store(), lineno=504, col_offset=8)], Call(Attribute(Name('sys', Load(), lineno=504, col_offset=17), 'getsizeof', Load(), lineno=504, col_offset=17), [Name('o', Load(), lineno=504, col_offset=31)], [], None, None, lineno=504, col_offset=17), lineno=504, col_offset=8), If(BoolOp(Or(), [BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=505, col_offset=13), [Name('o', Load(), lineno=505, col_offset=18)], [], None, None, lineno=505, col_offset=13), [Eq()], [Name('type', Load(), lineno=505, col_offset=24)], lineno=505, col_offset=13), BinOp(Attribute(Name('o', Load(), lineno=505, col_offset=35), '__flags__', Load(), lineno=505, col_offset=35), BitAnd(), Attribute(Name('self', Load(), lineno=505, col_offset=49), 'TPFLAGS_HEAPTYPE', Load(), lineno=505, col_offset=49), lineno=505, col_offset=35)], lineno=505, col_offset=12), BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=506, col_offset=13), [Name('o', Load(), lineno=506, col_offset=18)], [], None, None, lineno=506, col_offset=13), [NotEq()], [Name('type', Load(), lineno=506, col_offset=24)], lineno=506, col_offset=13), BinOp(Attribute(Call(Name('type', Load(), lineno=506, col_offset=35), [Name('o', Load(), lineno=506, col_offset=40)], [], None, None, lineno=506, col_offset=35), '__flags__', Load(), lineno=506, col_offset=35), BitAnd(), Attribute(Name('self', Load(), lineno=506, col_offset=55), 'TPFLAGS_HAVE_GC', Load(), lineno=506, col_offset=55), lineno=506, col_offset=35)], lineno=506, col_offset=12)], lineno=505, col_offset=12), [AugAssign(Name('size', Store(), lineno=507, col_offset=12), Add(), Attribute(Name('self', Load(), lineno=507, col_offset=20), 'gc_headsize', Load(), lineno=507, col_offset=20), lineno=507, col_offset=12)], [], lineno=505, col_offset=8), Assign([Name('msg', Store(), lineno=508, col_offset=8)], BinOp(Str('wrong size for %s: got %d, expected %d', lineno=508, col_offset=14), Mod(), Tuple([Call(Name('type', Load(), lineno=509, col_offset=19), [Name('o', Load(), lineno=509, col_offset=24)], [], None, None, lineno=509, col_offset=19), Name('result', Load(), lineno=509, col_offset=28), Name('size', Load(), lineno=509, col_offset=36)], Load(), lineno=509, col_offset=19), lineno=508, col_offset=14), lineno=508, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=510, col_offset=8), 'assertEqual', Load(), lineno=510, col_offset=8), [Name('result', Load(), lineno=510, col_offset=25), Name('size', Load(), lineno=510, col_offset=33), Name('msg', Load(), lineno=510, col_offset=39)], [], None, None, lineno=510, col_offset=8), lineno=510, col_offset=8)], [], lineno=503, col_offset=4), FunctionDef('calcsize', arguments([Name('self', Param(), lineno=512, col_offset=17), Name('fmt', Param(), lineno=512, col_offset=23)], None, None, []), [Expr(Str('Wrapper around struct.calcsize which enforces the alignment of the\n        end of a structure to the alignment requirement of pointer.\n\n        Note: This wrapper should only be used if a pointer member is included\n        and no member with a size larger than a pointer exists.\n        ', lineno=518, col_offset=-1), lineno=518, col_offset=-1), Return(Call(Attribute(Name('struct', Load(), lineno=519, col_offset=15), 'calcsize', Load(), lineno=519, col_offset=15), [BinOp(Name('fmt', Load(), lineno=519, col_offset=31), Add(), Str('0P', lineno=519, col_offset=37), lineno=519, col_offset=31)], [], None, None, lineno=519, col_offset=15), lineno=519, col_offset=8)], [], lineno=512, col_offset=4), FunctionDef('test_gc_head_size', arguments([Name('self', Param(), lineno=521, col_offset=26)], None, None, []), [Assign([Name('h', Store(), lineno=523, col_offset=8)], Attribute(Name('self', Load(), lineno=523, col_offset=12), 'header', Load(), lineno=523, col_offset=12), lineno=523, col_offset=8), Assign([Name('size', Store(), lineno=524, col_offset=8)], Attribute(Name('self', Load(), lineno=524, col_offset=15), 'calcsize', Load(), lineno=524, col_offset=15), lineno=524, col_offset=8), Assign([Name('gc_header_size', Store(), lineno=525, col_offset=8)], Attribute(Name('self', Load(), lineno=525, col_offset=25), 'gc_headsize', Load(), lineno=525, col_offset=25), lineno=525, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=527, col_offset=8), 'assertEqual', Load(), lineno=527, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=527, col_offset=25), 'getsizeof', Load(), lineno=527, col_offset=25), [Name('True', Load(), lineno=527, col_offset=39)], [], None, None, lineno=527, col_offset=25), Call(Name('size', Load(), lineno=527, col_offset=46), [BinOp(Name('h', Load(), lineno=527, col_offset=51), Add(), Str('l', lineno=527, col_offset=55), lineno=527, col_offset=51)], [], None, None, lineno=527, col_offset=46)], [], None, None, lineno=527, col_offset=8), lineno=527, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=529, col_offset=8), 'assertEqual', Load(), lineno=529, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=529, col_offset=25), 'getsizeof', Load(), lineno=529, col_offset=25), [List([], Load(), lineno=529, col_offset=39)], [], None, None, lineno=529, col_offset=25), BinOp(Call(Name('size', Load(), lineno=529, col_offset=44), [BinOp(Name('h', Load(), lineno=529, col_offset=49), Add(), Str('P PP', lineno=529, col_offset=53), lineno=529, col_offset=49)], [], None, None, lineno=529, col_offset=44), Add(), Name('gc_header_size', Load(), lineno=529, col_offset=63), lineno=529, col_offset=44)], [], None, None, lineno=529, col_offset=8), lineno=529, col_offset=8)], [], lineno=521, col_offset=4), FunctionDef('test_default', arguments([Name('self', Param(), lineno=531, col_offset=21)], None, None, []), [Assign([Name('h', Store(), lineno=532, col_offset=8)], Attribute(Name('self', Load(), lineno=532, col_offset=12), 'header', Load(), lineno=532, col_offset=12), lineno=532, col_offset=8), Assign([Name('size', Store(), lineno=533, col_offset=8)], Attribute(Name('self', Load(), lineno=533, col_offset=15), 'calcsize', Load(), lineno=533, col_offset=15), lineno=533, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=534, col_offset=8), 'assertEqual', Load(), lineno=534, col_offset=8), [Call(Attribute(Name('sys', Load(), lineno=534, col_offset=25), 'getsizeof', Load(), lineno=534, col_offset=25), [Name('True', Load(), lineno=534, col_offset=39), Num(-1, lineno=534, col_offset=46)], [], None, None, lineno=534, col_offset=25), Call(Name('size', Load(), lineno=534, col_offset=50), [BinOp(Name('h', Load(), lineno=534, col_offset=55), Add(), Str('l', lineno=534, col_offset=59), lineno=534, col_offset=55)], [], None, None, lineno=534, col_offset=50)], [], None, None, lineno=534, col_offset=8), lineno=534, col_offset=8)], [], lineno=531, col_offset=4), FunctionDef('test_objecttypes', arguments([Name('self', Param(), lineno=536, col_offset=25)], None, None, []), [Assign([Name('h', Store(), lineno=538, col_offset=8)], Attribute(Name('self', Load(), lineno=538, col_offset=12), 'header', Load(), lineno=538, col_offset=12), lineno=538, col_offset=8), Assign([Name('vh', Store(), lineno=539, col_offset=8)], Attribute(Name('self', Load(), lineno=539, col_offset=13), 'vheader', Load(), lineno=539, col_offset=13), lineno=539, col_offset=8), Assign([Name('size', Store(), lineno=540, col_offset=8)], Attribute(Name('self', Load(), lineno=540, col_offset=15), 'calcsize', Load(), lineno=540, col_offset=15), lineno=540, col_offset=8), Assign([Name('check', Store(), lineno=541, col_offset=8)], Attribute(Name('self', Load(), lineno=541, col_offset=16), 'check_sizeof', Load(), lineno=541, col_offset=16), lineno=541, col_offset=8), Expr(Call(Name('check', Load(), lineno=543, col_offset=8), [Name('True', Load(), lineno=543, col_offset=14), Call(Name('size', Load(), lineno=543, col_offset=20), [BinOp(Name('h', Load(), lineno=543, col_offset=25), Add(), Str('l', lineno=543, col_offset=29), lineno=543, col_offset=25)], [], None, None, lineno=543, col_offset=20)], [], None, None, lineno=543, col_offset=8), lineno=543, col_offset=8), With(Call(Attribute(Attribute(Name('test', Load(), lineno=545, col_offset=13), 'test_support', Load(), lineno=545, col_offset=13), 'check_py3k_warnings', Load(), lineno=545, col_offset=13), [], [], None, None, lineno=545, col_offset=13), None, [Expr(Call(Name('check', Load(), lineno=546, col_offset=12), [Call(Name('buffer', Load(), lineno=546, col_offset=18), [Str('', lineno=546, col_offset=25)], [], None, None, lineno=546, col_offset=18), Call(Name('size', Load(), lineno=546, col_offset=30), [BinOp(Name('h', Load(), lineno=546, col_offset=35), Add(), Str('2P2Pil', lineno=546, col_offset=39), lineno=546, col_offset=35)], [], None, None, lineno=546, col_offset=30)], [], None, None, lineno=546, col_offset=12), lineno=546, col_offset=12)], lineno=545, col_offset=13), Expr(Call(Name('check', Load(), lineno=548, col_offset=8), [Name('len', Load(), lineno=548, col_offset=14), Call(Name('size', Load(), lineno=548, col_offset=19), [BinOp(Name('h', Load(), lineno=548, col_offset=24), Add(), Str('3P', lineno=548, col_offset=28), lineno=548, col_offset=24)], [], None, None, lineno=548, col_offset=19)], [], None, None, lineno=548, col_offset=8), lineno=548, col_offset=8), Assign([Name('samples', Store(), lineno=550, col_offset=8)], List([Str('', lineno=550, col_offset=19), BinOp(Str('u', lineno=550, col_offset=23), Mult(), Num(100000, lineno=550, col_offset=27), lineno=550, col_offset=23)], Load(), lineno=550, col_offset=18), lineno=550, col_offset=8), For(Name('sample', Store(), lineno=551, col_offset=12), Name('samples', Load(), lineno=551, col_offset=22), [Assign([Name('x', Store(), lineno=552, col_offset=12)], Call(Name('bytearray', Load(), lineno=552, col_offset=16), [Name('sample', Load(), lineno=552, col_offset=26)], [], None, None, lineno=552, col_offset=16), lineno=552, col_offset=12), Expr(Call(Name('check', Load(), lineno=553, col_offset=12), [Name('x', Load(), lineno=553, col_offset=18), BinOp(Call(Name('size', Load(), lineno=553, col_offset=21), [BinOp(Name('vh', Load(), lineno=553, col_offset=26), Add(), Str('iPP', lineno=553, col_offset=31), lineno=553, col_offset=26)], [], None, None, lineno=553, col_offset=21), Add(), BinOp(Call(Attribute(Name('x', Load(), lineno=553, col_offset=40), '__alloc__', Load(), lineno=553, col_offset=40), [], [], None, None, lineno=553, col_offset=40), Mult(), Attribute(Name('self', Load(), lineno=553, col_offset=56), 'c', Load(), lineno=553, col_offset=56), lineno=553, col_offset=40), lineno=553, col_offset=21)], [], None, None, lineno=553, col_offset=12), lineno=553, col_offset=12)], [], lineno=551, col_offset=8), Expr(Call(Name('check', Load(), lineno=555, col_offset=8), [Call(Name('iter', Load(), lineno=555, col_offset=14), [Call(Name('bytearray', Load(), lineno=555, col_offset=19), [], [], None, None, lineno=555, col_offset=19)], [], None, None, lineno=555, col_offset=14), Call(Name('size', Load(), lineno=555, col_offset=33), [BinOp(Name('h', Load(), lineno=555, col_offset=38), Add(), Str('PP', lineno=555, col_offset=42), lineno=555, col_offset=38)], [], None, None, lineno=555, col_offset=33)], [], None, None, lineno=555, col_offset=8), lineno=555, col_offset=8), FunctionDef('get_cell', arguments([], None, None, []), [Assign([Name('x', Store(), lineno=558, col_offset=12)], Num(42, lineno=558, col_offset=16), lineno=558, col_offset=12), FunctionDef('inner', arguments([], None, None, []), [Return(Name('x', Load(), lineno=560, col_offset=23), lineno=560, col_offset=16)], [], lineno=559, col_offset=12), Return(Name('inner', Load(), lineno=561, col_offset=19), lineno=561, col_offset=12)], [], lineno=557, col_offset=8), Expr(Call(Name('check', Load(), lineno=562, col_offset=8), [Subscript(Attribute(Call(Name('get_cell', Load(), lineno=562, col_offset=14), [], [], None, None, lineno=562, col_offset=14), 'func_closure', Load(), lineno=562, col_offset=14), Index(Num(0, lineno=562, col_offset=38)), Load(), lineno=562, col_offset=14), Call(Name('size', Load(), lineno=562, col_offset=42), [BinOp(Name('h', Load(), lineno=562, col_offset=47), Add(), Str('P', lineno=562, col_offset=51), lineno=562, col_offset=47)], [], None, None, lineno=562, col_offset=42)], [], None, None, lineno=562, col_offset=8), lineno=562, col_offset=8), ClassDef('class_oldstyle', [], [FunctionDef('method', arguments([], None, None, []), [Pass( lineno=566, col_offset=16)], [], lineno=565, col_offset=12)], [], lineno=564, col_offset=8), Expr(Call(Name('check', Load(), lineno=567, col_offset=8), [Name('class_oldstyle', Load(), lineno=567, col_offset=14), Call(Name('size', Load(), lineno=567, col_offset=30), [BinOp(Name('h', Load(), lineno=567, col_offset=35), Add(), Str('7P', lineno=567, col_offset=39), lineno=567, col_offset=35)], [], None, None, lineno=567, col_offset=30)], [], None, None, lineno=567, col_offset=8), lineno=567, col_offset=8), Expr(Call(Name('check', Load(), lineno=569, col_offset=8), [Call(Name('class_oldstyle', Load(), lineno=569, col_offset=14), [], [], None, None, lineno=569, col_offset=14), Call(Name('size', Load(), lineno=569, col_offset=32), [BinOp(Name('h', Load(), lineno=569, col_offset=37), Add(), Str('3P', lineno=569, col_offset=41), lineno=569, col_offset=37)], [], None, None, lineno=569, col_offset=32)], [], None, None, lineno=569, col_offset=8), lineno=569, col_offset=8), Expr(Call(Name('check', Load(), lineno=571, col_offset=8), [Attribute(Call(Name('class_oldstyle', Load(), lineno=571, col_offset=14), [], [], None, None, lineno=571, col_offset=14), 'method', Load(), lineno=571, col_offset=14), Call(Name('size', Load(), lineno=571, col_offset=39), [BinOp(Name('h', Load(), lineno=571, col_offset=44), Add(), Str('4P', lineno=571, col_offset=48), lineno=571, col_offset=44)], [], None, None, lineno=571, col_offset=39)], [], None, None, lineno=571, col_offset=8), lineno=571, col_offset=8), Expr(Call(Name('check', Load(), lineno=573, col_offset=8), [Call(Name('complex', Load(), lineno=573, col_offset=14), [Num(0, lineno=573, col_offset=22), Num(1, lineno=573, col_offset=24)], [], None, None, lineno=573, col_offset=14), Call(Name('size', Load(), lineno=573, col_offset=28), [BinOp(Name('h', Load(), lineno=573, col_offset=33), Add(), Str('2d', lineno=573, col_offset=37), lineno=573, col_offset=33)], [], None, None, lineno=573, col_offset=28)], [], None, None, lineno=573, col_offset=8), lineno=573, col_offset=8), Expr(Call(Name('check', Load(), lineno=575, col_offset=8), [Attribute(Call(Name('get_cell', Load(), lineno=575, col_offset=14), [], [], None, None, lineno=575, col_offset=14), 'func_code', Load(), lineno=575, col_offset=14), Call(Name('size', Load(), lineno=575, col_offset=36), [BinOp(Name('h', Load(), lineno=575, col_offset=41), Add(), Str('4i8Pi3P', lineno=575, col_offset=45), lineno=575, col_offset=41)], [], None, None, lineno=575, col_offset=36)], [], None, None, lineno=575, col_offset=8), lineno=575, col_offset=8), Expr(Call(Name('check', Load(), lineno=577, col_offset=8), [Call(Name('BaseException', Load(), lineno=577, col_offset=14), [], [], None, None, lineno=577, col_offset=14), Call(Name('size', Load(), lineno=577, col_offset=31), [BinOp(Name('h', Load(), lineno=577, col_offset=36), Add(), Str('3P', lineno=577, col_offset=40), lineno=577, col_offset=36)], [], None, None, lineno=577, col_offset=31)], [], None, None, lineno=577, col_offset=8), lineno=577, col_offset=8), Expr(Call(Name('check', Load(), lineno=579, col_offset=8), [Call(Name('UnicodeEncodeError', Load(), lineno=579, col_offset=14), [Str('', lineno=579, col_offset=33), Str(u'', lineno=579, col_offset=37), Num(0, lineno=579, col_offset=42), Num(0, lineno=579, col_offset=45), Str('', lineno=579, col_offset=48)], [], None, None, lineno=579, col_offset=14), Call(Name('size', Load(), lineno=579, col_offset=53), [BinOp(Name('h', Load(), lineno=579, col_offset=58), Add(), Str('5P2PP', lineno=579, col_offset=62), lineno=579, col_offset=58)], [], None, None, lineno=579, col_offset=53)], [], None, None, lineno=579, col_offset=8), lineno=579, col_offset=8), Expr(Call(Name('check', Load(), lineno=581, col_offset=8), [Call(Name('UnicodeDecodeError', Load(), lineno=581, col_offset=14), [Str('', lineno=581, col_offset=33), Str('', lineno=581, col_offset=37), Num(0, lineno=581, col_offset=41), Num(0, lineno=581, col_offset=44), Str('', lineno=581, col_offset=47)], [], None, None, lineno=581, col_offset=14), Call(Name('size', Load(), lineno=581, col_offset=52), [BinOp(Name('h', Load(), lineno=581, col_offset=57), Add(), Str('5P2PP', lineno=581, col_offset=61), lineno=581, col_offset=57)], [], None, None, lineno=581, col_offset=52)], [], None, None, lineno=581, col_offset=8), lineno=581, col_offset=8), Expr(Call(Name('check', Load(), lineno=583, col_offset=8), [Call(Name('UnicodeTranslateError', Load(), lineno=583, col_offset=14), [Str(u'', lineno=583, col_offset=36), Num(0, lineno=583, col_offset=41), Num(1, lineno=583, col_offset=44), Str('', lineno=583, col_offset=47)], [], None, None, lineno=583, col_offset=14), Call(Name('size', Load(), lineno=583, col_offset=52), [BinOp(Name('h', Load(), lineno=583, col_offset=57), Add(), Str('5P2PP', lineno=583, col_offset=61), lineno=583, col_offset=57)], [], None, None, lineno=583, col_offset=52)], [], None, None, lineno=583, col_offset=8), lineno=583, col_offset=8), Expr(Call(Name('check', Load(), lineno=585, col_offset=8), [Attribute(Name('str', Load(), lineno=585, col_offset=14), 'lower', Load(), lineno=585, col_offset=14), Call(Name('size', Load(), lineno=585, col_offset=25), [BinOp(Name('h', Load(), lineno=585, col_offset=30), Add(), Str('2PP', lineno=585, col_offset=34), lineno=585, col_offset=30)], [], None, None, lineno=585, col_offset=25)], [], None, None, lineno=585, col_offset=8), lineno=585, col_offset=8), Import([alias('datetime', None)], lineno=589, col_offset=8), Expr(Call(Name('check', Load(), lineno=590, col_offset=8), [Attribute(Attribute(Name('datetime', Load(), lineno=590, col_offset=14), 'timedelta', Load(), lineno=590, col_offset=14), 'days', Load(), lineno=590, col_offset=14), Call(Name('size', Load(), lineno=590, col_offset=39), [BinOp(Name('h', Load(), lineno=590, col_offset=44), Add(), Str('2PP', lineno=590, col_offset=48), lineno=590, col_offset=44)], [], None, None, lineno=590, col_offset=39)], [], None, None, lineno=590, col_offset=8), lineno=590, col_offset=8), Import([alias('__builtin__', None)], lineno=592, col_offset=8), Expr(Call(Name('check', Load(), lineno=593, col_offset=8), [Attribute(Attribute(Name('__builtin__', Load(), lineno=593, col_offset=14), 'file', Load(), lineno=593, col_offset=14), 'closed', Load(), lineno=593, col_offset=14), Call(Name('size', Load(), lineno=593, col_offset=39), [BinOp(Name('h', Load(), lineno=593, col_offset=44), Add(), Str('2PP', lineno=593, col_offset=48), lineno=593, col_offset=44)], [], None, None, lineno=593, col_offset=39)], [], None, None, lineno=593, col_offset=8), lineno=593, col_offset=8), Expr(Call(Name('check', Load(), lineno=595, col_offset=8), [Attribute(Name('int', Load(), lineno=595, col_offset=14), '__add__', Load(), lineno=595, col_offset=14), Call(Name('size', Load(), lineno=595, col_offset=27), [BinOp(Name('h', Load(), lineno=595, col_offset=32), Add(), Str('2P2P', lineno=595, col_offset=36), lineno=595, col_offset=32)], [], None, None, lineno=595, col_offset=27)], [], None, None, lineno=595, col_offset=8), lineno=595, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=597, col_offset=16)], [Pass( lineno=597, col_offset=25)], [], lineno=597, col_offset=8), Expr(Call(Name('check', Load(), lineno=598, col_offset=8), [Attribute(Name('C', Load(), lineno=598, col_offset=14), '__dict__', Load(), lineno=598, col_offset=14), Call(Name('size', Load(), lineno=598, col_offset=26), [BinOp(Name('h', Load(), lineno=598, col_offset=31), Add(), Str('P', lineno=598, col_offset=35), lineno=598, col_offset=31)], [], None, None, lineno=598, col_offset=26)], [], None, None, lineno=598, col_offset=8), lineno=598, col_offset=8), Expr(Call(Name('check', Load(), lineno=600, col_offset=8), [Attribute(Dict([], [], lineno=600, col_offset=14), '__iter__', Load(), lineno=600, col_offset=14), Call(Name('size', Load(), lineno=600, col_offset=27), [BinOp(Name('h', Load(), lineno=600, col_offset=32), Add(), Str('2P', lineno=600, col_offset=36), lineno=600, col_offset=32)], [], None, None, lineno=600, col_offset=27)], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8), Expr(Call(Name('check', Load(), lineno=602, col_offset=8), [Dict([], [], lineno=602, col_offset=14), Call(Name('size', Load(), lineno=602, col_offset=18), [BinOp(BinOp(Name('h', Load(), lineno=602, col_offset=23), Add(), Str('3P2P', lineno=602, col_offset=27), lineno=602, col_offset=23), Add(), BinOp(Num(8, lineno=602, col_offset=36), Mult(), Str('P2P', lineno=602, col_offset=38), lineno=602, col_offset=36), lineno=602, col_offset=34)], [], None, None, lineno=602, col_offset=18)], [], None, None, lineno=602, col_offset=8), lineno=602, col_offset=8), Assign([Name('x', Store(), lineno=603, col_offset=8)], Dict([Num(1, lineno=603, col_offset=13), Num(2, lineno=603, col_offset=18), Num(3, lineno=603, col_offset=23), Num(4, lineno=603, col_offset=28), Num(5, lineno=603, col_offset=33), Num(6, lineno=603, col_offset=38), Num(7, lineno=603, col_offset=43), Num(8, lineno=603, col_offset=48)], [Num(1, lineno=603, col_offset=15), Num(2, lineno=603, col_offset=20), Num(3, lineno=603, col_offset=25), Num(4, lineno=603, col_offset=30), Num(5, lineno=603, col_offset=35), Num(6, lineno=603, col_offset=40), Num(7, lineno=603, col_offset=45), Num(8, lineno=603, col_offset=50)], lineno=603, col_offset=12), lineno=603, col_offset=8), Expr(Call(Name('check', Load(), lineno=604, col_offset=8), [Name('x', Load(), lineno=604, col_offset=14), BinOp(Call(Name('size', Load(), lineno=604, col_offset=17), [BinOp(BinOp(Name('h', Load(), lineno=604, col_offset=22), Add(), Str('3P2P', lineno=604, col_offset=26), lineno=604, col_offset=22), Add(), BinOp(Num(8, lineno=604, col_offset=35), Mult(), Str('P2P', lineno=604, col_offset=37), lineno=604, col_offset=35), lineno=604, col_offset=33)], [], None, None, lineno=604, col_offset=17), Add(), BinOp(Num(16, lineno=604, col_offset=46), Mult(), Call(Name('size', Load(), lineno=604, col_offset=49), [Str('P2P', lineno=604, col_offset=54)], [], None, None, lineno=604, col_offset=49), lineno=604, col_offset=46), lineno=604, col_offset=17)], [], None, None, lineno=604, col_offset=8), lineno=604, col_offset=8), Expr(Call(Name('check', Load(), lineno=606, col_offset=8), [Call(Attribute(Dict([], [], lineno=606, col_offset=14), 'iterkeys', Load(), lineno=606, col_offset=14), [], [], None, None, lineno=606, col_offset=14), Call(Name('size', Load(), lineno=606, col_offset=29), [BinOp(Name('h', Load(), lineno=606, col_offset=34), Add(), Str('P2PPP', lineno=606, col_offset=38), lineno=606, col_offset=34)], [], None, None, lineno=606, col_offset=29)], [], None, None, lineno=606, col_offset=8), lineno=606, col_offset=8), Expr(Call(Name('check', Load(), lineno=608, col_offset=8), [Call(Attribute(Dict([], [], lineno=608, col_offset=14), 'itervalues', Load(), lineno=608, col_offset=14), [], [], None, None, lineno=608, col_offset=14), Call(Name('size', Load(), lineno=608, col_offset=31), [BinOp(Name('h', Load(), lineno=608, col_offset=36), Add(), Str('P2PPP', lineno=608, col_offset=40), lineno=608, col_offset=36)], [], None, None, lineno=608, col_offset=31)], [], None, None, lineno=608, col_offset=8), lineno=608, col_offset=8), Expr(Call(Name('check', Load(), lineno=610, col_offset=8), [Call(Attribute(Dict([], [], lineno=610, col_offset=14), 'iteritems', Load(), lineno=610, col_offset=14), [], [], None, None, lineno=610, col_offset=14), Call(Name('size', Load(), lineno=610, col_offset=30), [BinOp(Name('h', Load(), lineno=610, col_offset=35), Add(), Str('P2PPP', lineno=610, col_offset=39), lineno=610, col_offset=35)], [], None, None, lineno=610, col_offset=30)], [], None, None, lineno=610, col_offset=8), lineno=610, col_offset=8), Expr(Call(Name('check', Load(), lineno=612, col_offset=8), [Name('Ellipsis', Load(), lineno=612, col_offset=14), Call(Name('size', Load(), lineno=612, col_offset=24), [BinOp(Name('h', Load(), lineno=612, col_offset=29), Add(), Str('', lineno=612, col_offset=33), lineno=612, col_offset=29)], [], None, None, lineno=612, col_offset=24)], [], None, None, lineno=612, col_offset=8), lineno=612, col_offset=8), Import([alias('codecs', None), alias('encodings.iso8859_3', None)], lineno=614, col_offset=8), Assign([Name('x', Store(), lineno=615, col_offset=8)], Call(Attribute(Name('codecs', Load(), lineno=615, col_offset=12), 'charmap_build', Load(), lineno=615, col_offset=12), [Attribute(Attribute(Name('encodings', Load(), lineno=615, col_offset=33), 'iso8859_3', Load(), lineno=615, col_offset=33), 'decoding_table', Load(), lineno=615, col_offset=33)], [], None, None, lineno=615, col_offset=12), lineno=615, col_offset=8), Expr(Call(Name('check', Load(), lineno=616, col_offset=8), [Name('x', Load(), lineno=616, col_offset=14), Call(Name('size', Load(), lineno=616, col_offset=17), [BinOp(Name('h', Load(), lineno=616, col_offset=22), Add(), Str('32B2iB', lineno=616, col_offset=26), lineno=616, col_offset=22)], [], None, None, lineno=616, col_offset=17)], [], None, None, lineno=616, col_offset=8), lineno=616, col_offset=8), Expr(Call(Name('check', Load(), lineno=618, col_offset=8), [Call(Name('enumerate', Load(), lineno=618, col_offset=14), [List([], Load(), lineno=618, col_offset=24)], [], None, None, lineno=618, col_offset=14), Call(Name('size', Load(), lineno=618, col_offset=29), [BinOp(Name('h', Load(), lineno=618, col_offset=34), Add(), Str('l3P', lineno=618, col_offset=38), lineno=618, col_offset=34)], [], None, None, lineno=618, col_offset=29)], [], None, None, lineno=618, col_offset=8), lineno=618, col_offset=8), Expr(Call(Name('check', Load(), lineno=620, col_offset=8), [Attribute(Name('self', Load(), lineno=620, col_offset=14), 'file', Load(), lineno=620, col_offset=14), Call(Name('size', Load(), lineno=620, col_offset=25), [BinOp(Name('h', Load(), lineno=620, col_offset=30), Add(), Str('4P2i4P3i3P3i', lineno=620, col_offset=34), lineno=620, col_offset=30)], [], None, None, lineno=620, col_offset=25)], [], None, None, lineno=620, col_offset=8), lineno=620, col_offset=8), Expr(Call(Name('check', Load(), lineno=622, col_offset=8), [Call(Name('float', Load(), lineno=622, col_offset=14), [Num(0, lineno=622, col_offset=20)], [], None, None, lineno=622, col_offset=14), Call(Name('size', Load(), lineno=622, col_offset=24), [BinOp(Name('h', Load(), lineno=622, col_offset=29), Add(), Str('d', lineno=622, col_offset=33), lineno=622, col_offset=29)], [], None, None, lineno=622, col_offset=24)], [], None, None, lineno=622, col_offset=8), lineno=622, col_offset=8), Expr(Call(Name('check', Load(), lineno=624, col_offset=8), [Attribute(Name('sys', Load(), lineno=624, col_offset=14), 'float_info', Load(), lineno=624, col_offset=14), BinOp(Call(Name('size', Load(), lineno=624, col_offset=30), [Name('vh', Load(), lineno=624, col_offset=35)], [], None, None, lineno=624, col_offset=30), Add(), BinOp(Attribute(Name('self', Load(), lineno=624, col_offset=41), 'P', Load(), lineno=624, col_offset=41), Mult(), Call(Name('len', Load(), lineno=624, col_offset=50), [Attribute(Name('sys', Load(), lineno=624, col_offset=54), 'float_info', Load(), lineno=624, col_offset=54)], [], None, None, lineno=624, col_offset=50), lineno=624, col_offset=41), lineno=624, col_offset=30)], [], None, None, lineno=624, col_offset=8), lineno=624, col_offset=8), Import([alias('inspect', None)], lineno=626, col_offset=8), Assign([Name('CO_MAXBLOCKS', Store(), lineno=627, col_offset=8)], Num(20, lineno=627, col_offset=23), lineno=627, col_offset=8), Assign([Name('x', Store(), lineno=628, col_offset=8)], Call(Attribute(Name('inspect', Load(), lineno=628, col_offset=12), 'currentframe', Load(), lineno=628, col_offset=12), [], [], None, None, lineno=628, col_offset=12), lineno=628, col_offset=8), Assign([Name('ncells', Store(), lineno=629, col_offset=8)], Call(Name('len', Load(), lineno=629, col_offset=17), [Attribute(Attribute(Name('x', Load(), lineno=629, col_offset=21), 'f_code', Load(), lineno=629, col_offset=21), 'co_cellvars', Load(), lineno=629, col_offset=21)], [], None, None, lineno=629, col_offset=17), lineno=629, col_offset=8), Assign([Name('nfrees', Store(), lineno=630, col_offset=8)], Call(Name('len', Load(), lineno=630, col_offset=17), [Attribute(Attribute(Name('x', Load(), lineno=630, col_offset=21), 'f_code', Load(), lineno=630, col_offset=21), 'co_freevars', Load(), lineno=630, col_offset=21)], [], None, None, lineno=630, col_offset=17), lineno=630, col_offset=8), Assign([Name('extras', Store(), lineno=631, col_offset=8)], BinOp(BinOp(BinOp(BinOp(Attribute(Attribute(Name('x', Load(), lineno=631, col_offset=17), 'f_code', Load(), lineno=631, col_offset=17), 'co_stacksize', Load(), lineno=631, col_offset=17), Add(), Attribute(Attribute(Name('x', Load(), lineno=631, col_offset=41), 'f_code', Load(), lineno=631, col_offset=41), 'co_nlocals', Load(), lineno=631, col_offset=41), lineno=631, col_offset=17), Add(), Name('ncells', Load(), lineno=632, col_offset=17), lineno=631, col_offset=61), Add(), Name('nfrees', Load(), lineno=632, col_offset=26), lineno=632, col_offset=24), Sub(), Num(1, lineno=632, col_offset=35), lineno=632, col_offset=33), lineno=631, col_offset=8), Expr(Call(Name('check', Load(), lineno=633, col_offset=8), [Name('x', Load(), lineno=633, col_offset=14), Call(Name('size', Load(), lineno=633, col_offset=17), [BinOp(BinOp(BinOp(BinOp(Name('vh', Load(), lineno=633, col_offset=22), Add(), Str('12P3i', lineno=633, col_offset=27), lineno=633, col_offset=22), Add(), BinOp(Name('CO_MAXBLOCKS', Load(), lineno=633, col_offset=37), Mult(), Str('3i', lineno=633, col_offset=50), lineno=633, col_offset=37), lineno=633, col_offset=35), Add(), Str('P', lineno=633, col_offset=57), lineno=633, col_offset=55), Add(), BinOp(Name('extras', Load(), lineno=633, col_offset=63), Mult(), Str('P', lineno=633, col_offset=70), lineno=633, col_offset=63), lineno=633, col_offset=61)], [], None, None, lineno=633, col_offset=17)], [], None, None, lineno=633, col_offset=8), lineno=633, col_offset=8), FunctionDef('func', arguments([], None, None, []), [Pass( lineno=635, col_offset=20)], [], lineno=635, col_offset=8), Expr(Call(Name('check', Load(), lineno=636, col_offset=8), [Name('func', Load(), lineno=636, col_offset=14), Call(Name('size', Load(), lineno=636, col_offset=20), [BinOp(Name('h', Load(), lineno=636, col_offset=25), Add(), Str('9P', lineno=636, col_offset=29), lineno=636, col_offset=25)], [], None, None, lineno=636, col_offset=20)], [], None, None, lineno=636, col_offset=8), lineno=636, col_offset=8), ClassDef('c', [], [FunctionDef('foo', arguments([], None, None, []), [Pass( lineno=640, col_offset=16)], [Name('staticmethod', Load(), lineno=638, col_offset=13)], lineno=638, col_offset=12), FunctionDef('bar', arguments([Name('cls', Param(), lineno=642, col_offset=20)], None, None, []), [Pass( lineno=643, col_offset=16)], [Name('classmethod', Load(), lineno=641, col_offset=13)], lineno=641, col_offset=12), Expr(Call(Name('check', Load(), lineno=645, col_offset=12), [Name('foo', Load(), lineno=645, col_offset=18), Call(Name('size', Load(), lineno=645, col_offset=23), [BinOp(Name('h', Load(), lineno=645, col_offset=28), Add(), Str('P', lineno=645, col_offset=32), lineno=645, col_offset=28)], [], None, None, lineno=645, col_offset=23)], [], None, None, lineno=645, col_offset=12), lineno=645, col_offset=12), Expr(Call(Name('check', Load(), lineno=647, col_offset=12), [Name('bar', Load(), lineno=647, col_offset=18), Call(Name('size', Load(), lineno=647, col_offset=23), [BinOp(Name('h', Load(), lineno=647, col_offset=28), Add(), Str('P', lineno=647, col_offset=32), lineno=647, col_offset=28)], [], None, None, lineno=647, col_offset=23)], [], None, None, lineno=647, col_offset=12), lineno=647, col_offset=12)], [], lineno=637, col_offset=8), FunctionDef('get_gen', arguments([], None, None, []), [Expr(Yield(Num(1, lineno=649, col_offset=29), lineno=649, col_offset=23), lineno=649, col_offset=23)], [], lineno=649, col_offset=8), Expr(Call(Name('check', Load(), lineno=650, col_offset=8), [Call(Name('get_gen', Load(), lineno=650, col_offset=14), [], [], None, None, lineno=650, col_offset=14), Call(Name('size', Load(), lineno=650, col_offset=25), [BinOp(Name('h', Load(), lineno=650, col_offset=30), Add(), Str('Pi2P', lineno=650, col_offset=34), lineno=650, col_offset=30)], [], None, None, lineno=650, col_offset=25)], [], None, None, lineno=650, col_offset=8), lineno=650, col_offset=8), Expr(Call(Name('check', Load(), lineno=652, col_offset=8), [Num(1, lineno=652, col_offset=14), Call(Name('size', Load(), lineno=652, col_offset=17), [BinOp(Name('h', Load(), lineno=652, col_offset=22), Add(), Str('l', lineno=652, col_offset=26), lineno=652, col_offset=22)], [], None, None, lineno=652, col_offset=17)], [], None, None, lineno=652, col_offset=8), lineno=652, col_offset=8), Expr(Call(Name('check', Load(), lineno=653, col_offset=8), [Num(100, lineno=653, col_offset=14), Call(Name('size', Load(), lineno=653, col_offset=19), [BinOp(Name('h', Load(), lineno=653, col_offset=24), Add(), Str('l', lineno=653, col_offset=28), lineno=653, col_offset=24)], [], None, None, lineno=653, col_offset=19)], [], None, None, lineno=653, col_offset=8), lineno=653, col_offset=8), Expr(Call(Name('check', Load(), lineno=655, col_offset=8), [Call(Name('iter', Load(), lineno=655, col_offset=14), [Str('abc', lineno=655, col_offset=19)], [], None, None, lineno=655, col_offset=14), Call(Name('size', Load(), lineno=655, col_offset=27), [BinOp(Name('h', Load(), lineno=655, col_offset=32), Add(), Str('lP', lineno=655, col_offset=36), lineno=655, col_offset=32)], [], None, None, lineno=655, col_offset=27)], [], None, None, lineno=655, col_offset=8), lineno=655, col_offset=8), Import([alias('re', None)], lineno=657, col_offset=8), Expr(Call(Name('check', Load(), lineno=658, col_offset=8), [Call(Attribute(Name('re', Load(), lineno=658, col_offset=14), 'finditer', Load(), lineno=658, col_offset=14), [Str('', lineno=658, col_offset=26), Str('', lineno=658, col_offset=29)], [], None, None, lineno=658, col_offset=14), Call(Name('size', Load(), lineno=658, col_offset=34), [BinOp(Name('h', Load(), lineno=658, col_offset=39), Add(), Str('2P', lineno=658, col_offset=43), lineno=658, col_offset=39)], [], None, None, lineno=658, col_offset=34)], [], None, None, lineno=658, col_offset=8), lineno=658, col_offset=8), Assign([Name('samples', Store(), lineno=660, col_offset=8)], List([List([], Load(), lineno=660, col_offset=19), List([Num(1, lineno=660, col_offset=24), Num(2, lineno=660, col_offset=26), Num(3, lineno=660, col_offset=28)], Load(), lineno=660, col_offset=23), List([Str('1', lineno=660, col_offset=33), Str('2', lineno=660, col_offset=38), Str('3', lineno=660, col_offset=43)], Load(), lineno=660, col_offset=32)], Load(), lineno=660, col_offset=18), lineno=660, col_offset=8), For(Name('sample', Store(), lineno=661, col_offset=12), Name('samples', Load(), lineno=661, col_offset=22), [Expr(Call(Name('check', Load(), lineno=662, col_offset=12), [Name('sample', Load(), lineno=662, col_offset=18), BinOp(Call(Name('size', Load(), lineno=662, col_offset=26), [BinOp(Name('vh', Load(), lineno=662, col_offset=31), Add(), Str('PP', lineno=662, col_offset=36), lineno=662, col_offset=31)], [], None, None, lineno=662, col_offset=26), Add(), BinOp(Call(Name('len', Load(), lineno=662, col_offset=44), [Name('sample', Load(), lineno=662, col_offset=48)], [], None, None, lineno=662, col_offset=44), Mult(), Attribute(Name('self', Load(), lineno=662, col_offset=56), 'P', Load(), lineno=662, col_offset=56), lineno=662, col_offset=44), lineno=662, col_offset=26)], [], None, None, lineno=662, col_offset=12), lineno=662, col_offset=12)], [], lineno=661, col_offset=8), Expr(Call(Name('check', Load(), lineno=668, col_offset=8), [Call(Name('iter', Load(), lineno=668, col_offset=14), [List([], Load(), lineno=668, col_offset=19)], [], None, None, lineno=668, col_offset=14), Call(Name('size', Load(), lineno=668, col_offset=24), [BinOp(Name('h', Load(), lineno=668, col_offset=29), Add(), Str('lP', lineno=668, col_offset=33), lineno=668, col_offset=29)], [], None, None, lineno=668, col_offset=24)], [], None, None, lineno=668, col_offset=8), lineno=668, col_offset=8), Expr(Call(Name('check', Load(), lineno=670, col_offset=8), [Call(Name('reversed', Load(), lineno=670, col_offset=14), [List([], Load(), lineno=670, col_offset=23)], [], None, None, lineno=670, col_offset=14), Call(Name('size', Load(), lineno=670, col_offset=28), [BinOp(Name('h', Load(), lineno=670, col_offset=33), Add(), Str('lP', lineno=670, col_offset=37), lineno=670, col_offset=33)], [], None, None, lineno=670, col_offset=28)], [], None, None, lineno=670, col_offset=8), lineno=670, col_offset=8), Expr(Call(Name('check', Load(), lineno=672, col_offset=8), [Num(0L, lineno=672, col_offset=14), Call(Name('size', Load(), lineno=672, col_offset=18), [Name('vh', Load(), lineno=672, col_offset=23)], [], None, None, lineno=672, col_offset=18)], [], None, None, lineno=672, col_offset=8), lineno=672, col_offset=8), Expr(Call(Name('check', Load(), lineno=673, col_offset=8), [Num(1L, lineno=673, col_offset=14), BinOp(Call(Name('size', Load(), lineno=673, col_offset=18), [Name('vh', Load(), lineno=673, col_offset=23)], [], None, None, lineno=673, col_offset=18), Add(), Attribute(Name('self', Load(), lineno=673, col_offset=29), 'longdigit', Load(), lineno=673, col_offset=29), lineno=673, col_offset=18)], [], None, None, lineno=673, col_offset=8), lineno=673, col_offset=8), Expr(Call(Name('check', Load(), lineno=674, col_offset=8), [Num(-1L, lineno=674, col_offset=15), BinOp(Call(Name('size', Load(), lineno=674, col_offset=19), [Name('vh', Load(), lineno=674, col_offset=24)], [], None, None, lineno=674, col_offset=19), Add(), Attribute(Name('self', Load(), lineno=674, col_offset=30), 'longdigit', Load(), lineno=674, col_offset=30), lineno=674, col_offset=19)], [], None, None, lineno=674, col_offset=8), lineno=674, col_offset=8), Assign([Name('PyLong_BASE', Store(), lineno=675, col_offset=8)], BinOp(Num(2, lineno=675, col_offset=22), Pow(), Attribute(Attribute(Name('sys', Load(), lineno=675, col_offset=25), 'long_info', Load(), lineno=675, col_offset=25), 'bits_per_digit', Load(), lineno=675, col_offset=25), lineno=675, col_offset=22), lineno=675, col_offset=8), Expr(Call(Name('check', Load(), lineno=676, col_offset=8), [Call(Name('long', Load(), lineno=676, col_offset=14), [Name('PyLong_BASE', Load(), lineno=676, col_offset=19)], [], None, None, lineno=676, col_offset=14), BinOp(Call(Name('size', Load(), lineno=676, col_offset=33), [Name('vh', Load(), lineno=676, col_offset=38)], [], None, None, lineno=676, col_offset=33), Add(), BinOp(Num(2, lineno=676, col_offset=44), Mult(), Attribute(Name('self', Load(), lineno=676, col_offset=46), 'longdigit', Load(), lineno=676, col_offset=46), lineno=676, col_offset=44), lineno=676, col_offset=33)], [], None, None, lineno=676, col_offset=8), lineno=676, col_offset=8), Expr(Call(Name('check', Load(), lineno=677, col_offset=8), [Call(Name('long', Load(), lineno=677, col_offset=14), [BinOp(BinOp(Name('PyLong_BASE', Load(), lineno=677, col_offset=19), Pow(), Num(2, lineno=677, col_offset=32), lineno=677, col_offset=19), Sub(), Num(1, lineno=677, col_offset=34), lineno=677, col_offset=19)], [], None, None, lineno=677, col_offset=14), BinOp(Call(Name('size', Load(), lineno=677, col_offset=38), [Name('vh', Load(), lineno=677, col_offset=43)], [], None, None, lineno=677, col_offset=38), Add(), BinOp(Num(2, lineno=677, col_offset=49), Mult(), Attribute(Name('self', Load(), lineno=677, col_offset=51), 'longdigit', Load(), lineno=677, col_offset=51), lineno=677, col_offset=49), lineno=677, col_offset=38)], [], None, None, lineno=677, col_offset=8), lineno=677, col_offset=8), Expr(Call(Name('check', Load(), lineno=678, col_offset=8), [Call(Name('long', Load(), lineno=678, col_offset=14), [BinOp(Name('PyLong_BASE', Load(), lineno=678, col_offset=19), Pow(), Num(2, lineno=678, col_offset=32), lineno=678, col_offset=19)], [], None, None, lineno=678, col_offset=14), BinOp(Call(Name('size', Load(), lineno=678, col_offset=36), [Name('vh', Load(), lineno=678, col_offset=41)], [], None, None, lineno=678, col_offset=36), Add(), BinOp(Num(3, lineno=678, col_offset=47), Mult(), Attribute(Name('self', Load(), lineno=678, col_offset=49), 'longdigit', Load(), lineno=678, col_offset=49), lineno=678, col_offset=47), lineno=678, col_offset=36)], [], None, None, lineno=678, col_offset=8), lineno=678, col_offset=8), Expr(Call(Name('check', Load(), lineno=680, col_offset=8), [Name('unittest', Load(), lineno=680, col_offset=14), Call(Name('size', Load(), lineno=680, col_offset=24), [BinOp(Name('h', Load(), lineno=680, col_offset=29), Add(), Str('P', lineno=680, col_offset=33), lineno=680, col_offset=29)], [], None, None, lineno=680, col_offset=24)], [], None, None, lineno=680, col_offset=8), lineno=680, col_offset=8), Expr(Call(Name('check', Load(), lineno=682, col_offset=8), [Name('None', Load(), lineno=682, col_offset=14), Call(Name('size', Load(), lineno=682, col_offset=20), [BinOp(Name('h', Load(), lineno=682, col_offset=25), Add(), Str('', lineno=682, col_offset=29), lineno=682, col_offset=25)], [], None, None, lineno=682, col_offset=20)], [], None, None, lineno=682, col_offset=8), lineno=682, col_offset=8), Expr(Call(Name('check', Load(), lineno=684, col_offset=8), [Call(Name('object', Load(), lineno=684, col_offset=14), [], [], None, None, lineno=684, col_offset=14), Call(Name('size', Load(), lineno=684, col_offset=24), [BinOp(Name('h', Load(), lineno=684, col_offset=29), Add(), Str('', lineno=684, col_offset=33), lineno=684, col_offset=29)], [], None, None, lineno=684, col_offset=24)], [], None, None, lineno=684, col_offset=8), lineno=684, col_offset=8), ClassDef('C', [Name('object', Load(), lineno=686, col_offset=16)], [FunctionDef('getx', arguments([Name('self', Param(), lineno=687, col_offset=21)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=687, col_offset=35), '__x', Load(), lineno=687, col_offset=35), lineno=687, col_offset=28)], [], lineno=687, col_offset=12), FunctionDef('setx', arguments([Name('self', Param(), lineno=688, col_offset=21), Name('value', Param(), lineno=688, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=688, col_offset=35), '__x', Store(), lineno=688, col_offset=35)], Name('value', Load(), lineno=688, col_offset=46), lineno=688, col_offset=35)], [], lineno=688, col_offset=12), FunctionDef('delx', arguments([Name('self', Param(), lineno=689, col_offset=21)], None, None, []), [Delete([Attribute(Name('self', Load(), lineno=689, col_offset=32), '__x', Del(), lineno=689, col_offset=32)], lineno=689, col_offset=28)], [], lineno=689, col_offset=12), Assign([Name('x', Store(), lineno=690, col_offset=12)], Call(Name('property', Load(), lineno=690, col_offset=16), [Name('getx', Load(), lineno=690, col_offset=25), Name('setx', Load(), lineno=690, col_offset=31), Name('delx', Load(), lineno=690, col_offset=37), Str('', lineno=690, col_offset=43)], [], None, None, lineno=690, col_offset=16), lineno=690, col_offset=12), Expr(Call(Name('check', Load(), lineno=691, col_offset=12), [Name('x', Load(), lineno=691, col_offset=18), Call(Name('size', Load(), lineno=691, col_offset=21), [BinOp(Name('h', Load(), lineno=691, col_offset=26), Add(), Str('4Pi', lineno=691, col_offset=30), lineno=691, col_offset=26)], [], None, None, lineno=691, col_offset=21)], [], None, None, lineno=691, col_offset=12), lineno=691, col_offset=12)], [], lineno=686, col_offset=8), Expr(Call(Name('check', Load(), lineno=696, col_offset=8), [Call(Name('iter', Load(), lineno=696, col_offset=14), [Call(Name('xrange', Load(), lineno=696, col_offset=19), [Num(1, lineno=696, col_offset=26)], [], None, None, lineno=696, col_offset=19)], [], None, None, lineno=696, col_offset=14), Call(Name('size', Load(), lineno=696, col_offset=31), [BinOp(Name('h', Load(), lineno=696, col_offset=36), Add(), Str('4l', lineno=696, col_offset=40), lineno=696, col_offset=36)], [], None, None, lineno=696, col_offset=31)], [], None, None, lineno=696, col_offset=8), lineno=696, col_offset=8), Expr(Call(Name('check', Load(), lineno=698, col_offset=8), [Call(Name('reversed', Load(), lineno=698, col_offset=14), [Str('', lineno=698, col_offset=23)], [], None, None, lineno=698, col_offset=14), Call(Name('size', Load(), lineno=698, col_offset=28), [BinOp(Name('h', Load(), lineno=698, col_offset=33), Add(), Str('PP', lineno=698, col_offset=37), lineno=698, col_offset=33)], [], None, None, lineno=698, col_offset=28)], [], None, None, lineno=698, col_offset=8), lineno=698, col_offset=8), Assign([Name('PySet_MINSIZE', Store(), lineno=701, col_offset=8)], Num(8, lineno=701, col_offset=24), lineno=701, col_offset=8), Assign([Name('samples', Store(), lineno=702, col_offset=8)], List([List([], Load(), lineno=702, col_offset=19), Call(Name('range', Load(), lineno=702, col_offset=23), [Num(10, lineno=702, col_offset=29)], [], None, None, lineno=702, col_offset=23), Call(Name('range', Load(), lineno=702, col_offset=34), [Num(50, lineno=702, col_offset=40)], [], None, None, lineno=702, col_offset=34)], Load(), lineno=702, col_offset=18), lineno=702, col_offset=8), Assign([Name('s', Store(), lineno=703, col_offset=8)], Call(Name('size', Load(), lineno=703, col_offset=12), [BinOp(BinOp(BinOp(Name('h', Load(), lineno=703, col_offset=17), Add(), Str('3P2P', lineno=703, col_offset=21), lineno=703, col_offset=17), Add(), BinOp(Name('PySet_MINSIZE', Load(), lineno=703, col_offset=30), Mult(), Str('lP', lineno=703, col_offset=44), lineno=703, col_offset=30), lineno=703, col_offset=28), Add(), Str('lP', lineno=703, col_offset=51), lineno=703, col_offset=49)], [], None, None, lineno=703, col_offset=12), lineno=703, col_offset=8), For(Name('sample', Store(), lineno=704, col_offset=12), Name('samples', Load(), lineno=704, col_offset=22), [Assign([Name('minused', Store(), lineno=705, col_offset=12)], Call(Name('len', Load(), lineno=705, col_offset=22), [Name('sample', Load(), lineno=705, col_offset=26)], [], None, None, lineno=705, col_offset=22), lineno=705, col_offset=12), If(Compare(Name('minused', Load(), lineno=706, col_offset=15), [Eq()], [Num(0, lineno=706, col_offset=26)], lineno=706, col_offset=15), [Assign([Name('tmp', Store(), lineno=706, col_offset=29)], Num(1, lineno=706, col_offset=35), lineno=706, col_offset=29)], [], lineno=706, col_offset=12), Assign([Name('minused', Store(), lineno=709, col_offset=12)], BinOp(Name('minused', Load(), lineno=709, col_offset=22), Mult(), Num(2, lineno=709, col_offset=30), lineno=709, col_offset=22), lineno=709, col_offset=12), Assign([Name('newsize', Store(), lineno=710, col_offset=12)], Name('PySet_MINSIZE', Load(), lineno=710, col_offset=22), lineno=710, col_offset=12), While(Compare(Name('newsize', Load(), lineno=711, col_offset=18), [LtE()], [Name('minused', Load(), lineno=711, col_offset=29)], lineno=711, col_offset=18), [Assign([Name('newsize', Store(), lineno=712, col_offset=16)], BinOp(Name('newsize', Load(), lineno=712, col_offset=26), LShift(), Num(1, lineno=712, col_offset=37), lineno=712, col_offset=26), lineno=712, col_offset=16)], [], lineno=711, col_offset=12), If(Compare(Name('newsize', Load(), lineno=713, col_offset=15), [LtE()], [Num(8, lineno=713, col_offset=26)], lineno=713, col_offset=15), [Expr(Call(Name('check', Load(), lineno=714, col_offset=16), [Call(Name('set', Load(), lineno=714, col_offset=22), [Name('sample', Load(), lineno=714, col_offset=26)], [], None, None, lineno=714, col_offset=22), Name('s', Load(), lineno=714, col_offset=35)], [], None, None, lineno=714, col_offset=16), lineno=714, col_offset=16), Expr(Call(Name('check', Load(), lineno=715, col_offset=16), [Call(Name('frozenset', Load(), lineno=715, col_offset=22), [Name('sample', Load(), lineno=715, col_offset=32)], [], None, None, lineno=715, col_offset=22), Name('s', Load(), lineno=715, col_offset=41)], [], None, None, lineno=715, col_offset=16), lineno=715, col_offset=16)], [Expr(Call(Name('check', Load(), lineno=717, col_offset=16), [Call(Name('set', Load(), lineno=717, col_offset=22), [Name('sample', Load(), lineno=717, col_offset=26)], [], None, None, lineno=717, col_offset=22), BinOp(Name('s', Load(), lineno=717, col_offset=35), Add(), BinOp(Name('newsize', Load(), lineno=717, col_offset=39), Mult(), Call(Attribute(Name('struct', Load(), lineno=717, col_offset=47), 'calcsize', Load(), lineno=717, col_offset=47), [Str('lP', lineno=717, col_offset=63)], [], None, None, lineno=717, col_offset=47), lineno=717, col_offset=39), lineno=717, col_offset=35)], [], None, None, lineno=717, col_offset=16), lineno=717, col_offset=16), Expr(Call(Name('check', Load(), lineno=718, col_offset=16), [Call(Name('frozenset', Load(), lineno=718, col_offset=22), [Name('sample', Load(), lineno=718, col_offset=32)], [], None, None, lineno=718, col_offset=22), BinOp(Name('s', Load(), lineno=718, col_offset=41), Add(), BinOp(Name('newsize', Load(), lineno=718, col_offset=45), Mult(), Call(Attribute(Name('struct', Load(), lineno=718, col_offset=53), 'calcsize', Load(), lineno=718, col_offset=53), [Str('lP', lineno=718, col_offset=69)], [], None, None, lineno=718, col_offset=53), lineno=718, col_offset=45), lineno=718, col_offset=41)], [], None, None, lineno=718, col_offset=16), lineno=718, col_offset=16)], lineno=713, col_offset=12)], [], lineno=704, col_offset=8), Expr(Call(Name('check', Load(), lineno=720, col_offset=8), [Call(Name('iter', Load(), lineno=720, col_offset=14), [Call(Name('set', Load(), lineno=720, col_offset=19), [], [], None, None, lineno=720, col_offset=19)], [], None, None, lineno=720, col_offset=14), Call(Name('size', Load(), lineno=720, col_offset=27), [BinOp(Name('h', Load(), lineno=720, col_offset=32), Add(), Str('P3P', lineno=720, col_offset=36), lineno=720, col_offset=32)], [], None, None, lineno=720, col_offset=27)], [], None, None, lineno=720, col_offset=8), lineno=720, col_offset=8), Expr(Call(Name('check', Load(), lineno=722, col_offset=8), [Call(Name('slice', Load(), lineno=722, col_offset=14), [Num(1, lineno=722, col_offset=20)], [], None, None, lineno=722, col_offset=14), Call(Name('size', Load(), lineno=722, col_offset=24), [BinOp(Name('h', Load(), lineno=722, col_offset=29), Add(), Str('3P', lineno=722, col_offset=33), lineno=722, col_offset=29)], [], None, None, lineno=722, col_offset=24)], [], None, None, lineno=722, col_offset=8), lineno=722, col_offset=8), Expr(Call(Name('check', Load(), lineno=724, col_offset=8), [Str('', lineno=724, col_offset=14), BinOp(Call(Attribute(Name('struct', Load(), lineno=724, col_offset=18), 'calcsize', Load(), lineno=724, col_offset=18), [BinOp(Name('vh', Load(), lineno=724, col_offset=34), Add(), Str('li', lineno=724, col_offset=39), lineno=724, col_offset=34)], [], None, None, lineno=724, col_offset=18), Add(), Num(1, lineno=724, col_offset=47), lineno=724, col_offset=18)], [], None, None, lineno=724, col_offset=8), lineno=724, col_offset=8), Expr(Call(Name('check', Load(), lineno=725, col_offset=8), [Str('abc', lineno=725, col_offset=14), BinOp(BinOp(Call(Attribute(Name('struct', Load(), lineno=725, col_offset=21), 'calcsize', Load(), lineno=725, col_offset=21), [BinOp(Name('vh', Load(), lineno=725, col_offset=37), Add(), Str('li', lineno=725, col_offset=42), lineno=725, col_offset=37)], [], None, None, lineno=725, col_offset=21), Add(), Num(1, lineno=725, col_offset=50), lineno=725, col_offset=21), Add(), BinOp(Num(3, lineno=725, col_offset=54), Mult(), Attribute(Name('self', Load(), lineno=725, col_offset=56), 'c', Load(), lineno=725, col_offset=56), lineno=725, col_offset=54), lineno=725, col_offset=52)], [], None, None, lineno=725, col_offset=8), lineno=725, col_offset=8), Expr(Call(Name('check', Load(), lineno=727, col_offset=8), [Call(Name('super', Load(), lineno=727, col_offset=14), [Name('int', Load(), lineno=727, col_offset=20)], [], None, None, lineno=727, col_offset=14), Call(Name('size', Load(), lineno=727, col_offset=26), [BinOp(Name('h', Load(), lineno=727, col_offset=31), Add(), Str('3P', lineno=727, col_offset=35), lineno=727, col_offset=31)], [], None, None, lineno=727, col_offset=26)], [], None, None, lineno=727, col_offset=8), lineno=727, col_offset=8), Expr(Call(Name('check', Load(), lineno=729, col_offset=8), [Tuple([], Load(), lineno=729, col_offset=14), Call(Name('size', Load(), lineno=729, col_offset=18), [Name('vh', Load(), lineno=729, col_offset=23)], [], None, None, lineno=729, col_offset=18)], [], None, None, lineno=729, col_offset=8), lineno=729, col_offset=8), Expr(Call(Name('check', Load(), lineno=730, col_offset=8), [Tuple([Num(1, lineno=730, col_offset=15), Num(2, lineno=730, col_offset=17), Num(3, lineno=730, col_offset=19)], Load(), lineno=730, col_offset=15), BinOp(Call(Name('size', Load(), lineno=730, col_offset=23), [Name('vh', Load(), lineno=730, col_offset=28)], [], None, None, lineno=730, col_offset=23), Add(), BinOp(Num(3, lineno=730, col_offset=34), Mult(), Attribute(Name('self', Load(), lineno=730, col_offset=36), 'P', Load(), lineno=730, col_offset=36), lineno=730, col_offset=34), lineno=730, col_offset=23)], [], None, None, lineno=730, col_offset=8), lineno=730, col_offset=8), Expr(Call(Name('check', Load(), lineno=732, col_offset=8), [Call(Name('iter', Load(), lineno=732, col_offset=14), [Tuple([], Load(), lineno=732, col_offset=19)], [], None, None, lineno=732, col_offset=14), Call(Name('size', Load(), lineno=732, col_offset=24), [BinOp(Name('h', Load(), lineno=732, col_offset=29), Add(), Str('lP', lineno=732, col_offset=33), lineno=732, col_offset=29)], [], None, None, lineno=732, col_offset=24)], [], None, None, lineno=732, col_offset=8), lineno=732, col_offset=8), Assign([Name('s', Store(), lineno=736, col_offset=8)], BinOp(Call(Name('size', Load(), lineno=736, col_offset=12), [BinOp(Name('vh', Load(), lineno=736, col_offset=17), Add(), Str('P2P15Pl4PP9PP11PI', lineno=736, col_offset=22), lineno=736, col_offset=17)], [], None, None, lineno=736, col_offset=12), Add(), Call(Name('size', Load(), lineno=736, col_offset=45), [Str('41P 10P 3P 6P', lineno=736, col_offset=50)], [], None, None, lineno=736, col_offset=45), lineno=736, col_offset=12), lineno=736, col_offset=8), ClassDef('newstyleclass', [Name('object', Load(), lineno=737, col_offset=28)], [Pass( lineno=738, col_offset=12)], [], lineno=737, col_offset=8), Expr(Call(Name('check', Load(), lineno=739, col_offset=8), [Name('newstyleclass', Load(), lineno=739, col_offset=14), Name('s', Load(), lineno=739, col_offset=29)], [], None, None, lineno=739, col_offset=8), lineno=739, col_offset=8), Expr(Call(Name('check', Load(), lineno=741, col_offset=8), [Name('int', Load(), lineno=741, col_offset=14), Name('s', Load(), lineno=741, col_offset=19)], [], None, None, lineno=741, col_offset=8), lineno=741, col_offset=8), Import([alias('types', None)], lineno=743, col_offset=8), Expr(Call(Name('check', Load(), lineno=744, col_offset=8), [Attribute(Name('types', Load(), lineno=744, col_offset=14), 'NotImplementedType', Load(), lineno=744, col_offset=14), Name('s', Load(), lineno=744, col_offset=40)], [], None, None, lineno=744, col_offset=8), lineno=744, col_offset=8), Assign([Name('usize', Store(), lineno=746, col_offset=8)], Call(Name('len', Load(), lineno=746, col_offset=16), [Call(Attribute(Str(u'\x00', lineno=746, col_offset=20), 'encode', Load(), lineno=746, col_offset=20), [Str('unicode-internal', lineno=746, col_offset=33)], [], None, None, lineno=746, col_offset=20)], [], None, None, lineno=746, col_offset=16), lineno=746, col_offset=8), Assign([Name('samples', Store(), lineno=747, col_offset=8)], List([Str(u'', lineno=747, col_offset=19), BinOp(Str(u'1', lineno=747, col_offset=24), Mult(), Num(100, lineno=747, col_offset=29), lineno=747, col_offset=24)], Load(), lineno=747, col_offset=18), lineno=747, col_offset=8), For(Name('s', Store(), lineno=750, col_offset=12), Name('samples', Load(), lineno=750, col_offset=17), [Expr(Call(Name('check', Load(), lineno=751, col_offset=12), [Name('s', Load(), lineno=751, col_offset=18), BinOp(Call(Name('size', Load(), lineno=751, col_offset=21), [BinOp(Name('h', Load(), lineno=751, col_offset=26), Add(), Str('PPlP', lineno=751, col_offset=30), lineno=751, col_offset=26)], [], None, None, lineno=751, col_offset=21), Add(), BinOp(Name('usize', Load(), lineno=751, col_offset=40), Mult(), BinOp(Call(Name('len', Load(), lineno=751, col_offset=49), [Name('s', Load(), lineno=751, col_offset=53)], [], None, None, lineno=751, col_offset=49), Add(), Num(1, lineno=751, col_offset=58), lineno=751, col_offset=49), lineno=751, col_offset=40), lineno=751, col_offset=21)], [], None, None, lineno=751, col_offset=12), lineno=751, col_offset=12)], [], lineno=750, col_offset=8), Import([alias('weakref', None)], lineno=753, col_offset=8), Expr(Call(Name('check', Load(), lineno=754, col_offset=8), [Call(Attribute(Name('weakref', Load(), lineno=754, col_offset=14), 'ref', Load(), lineno=754, col_offset=14), [Name('int', Load(), lineno=754, col_offset=26)], [], None, None, lineno=754, col_offset=14), Call(Name('size', Load(), lineno=754, col_offset=32), [BinOp(Name('h', Load(), lineno=754, col_offset=37), Add(), Str('2Pl2P', lineno=754, col_offset=41), lineno=754, col_offset=37)], [], None, None, lineno=754, col_offset=32)], [], None, None, lineno=754, col_offset=8), lineno=754, col_offset=8), Expr(Call(Name('check', Load(), lineno=758, col_offset=8), [Call(Attribute(Name('weakref', Load(), lineno=758, col_offset=14), 'proxy', Load(), lineno=758, col_offset=14), [Name('int', Load(), lineno=758, col_offset=28)], [], None, None, lineno=758, col_offset=14), Call(Name('size', Load(), lineno=758, col_offset=34), [BinOp(Name('h', Load(), lineno=758, col_offset=39), Add(), Str('2Pl2P', lineno=758, col_offset=43), lineno=758, col_offset=39)], [], None, None, lineno=758, col_offset=34)], [], None, None, lineno=758, col_offset=8), lineno=758, col_offset=8), Expr(Call(Name('check', Load(), lineno=760, col_offset=8), [Call(Name('xrange', Load(), lineno=760, col_offset=14), [Num(1, lineno=760, col_offset=21)], [], None, None, lineno=760, col_offset=14), Call(Name('size', Load(), lineno=760, col_offset=25), [BinOp(Name('h', Load(), lineno=760, col_offset=30), Add(), Str('3l', lineno=760, col_offset=34), lineno=760, col_offset=30)], [], None, None, lineno=760, col_offset=25)], [], None, None, lineno=760, col_offset=8), lineno=760, col_offset=8), Expr(Call(Name('check', Load(), lineno=761, col_offset=8), [Call(Name('xrange', Load(), lineno=761, col_offset=14), [Num(66000, lineno=761, col_offset=21)], [], None, None, lineno=761, col_offset=14), Call(Name('size', Load(), lineno=761, col_offset=29), [BinOp(Name('h', Load(), lineno=761, col_offset=34), Add(), Str('3l', lineno=761, col_offset=38), lineno=761, col_offset=34)], [], None, None, lineno=761, col_offset=29)], [], None, None, lineno=761, col_offset=8), lineno=761, col_offset=8)], [], lineno=536, col_offset=4), FunctionDef('test_pythontypes', arguments([Name('self', Param(), lineno=763, col_offset=25)], None, None, []), [Assign([Name('h', Store(), lineno=765, col_offset=8)], Attribute(Name('self', Load(), lineno=765, col_offset=12), 'header', Load(), lineno=765, col_offset=12), lineno=765, col_offset=8), Assign([Name('vh', Store(), lineno=766, col_offset=8)], Attribute(Name('self', Load(), lineno=766, col_offset=13), 'vheader', Load(), lineno=766, col_offset=13), lineno=766, col_offset=8), Assign([Name('size', Store(), lineno=767, col_offset=8)], Attribute(Name('self', Load(), lineno=767, col_offset=15), 'calcsize', Load(), lineno=767, col_offset=15), lineno=767, col_offset=8), Assign([Name('check', Store(), lineno=768, col_offset=8)], Attribute(Name('self', Load(), lineno=768, col_offset=16), 'check_sizeof', Load(), lineno=768, col_offset=16), lineno=768, col_offset=8), Import([alias('_ast', None)], lineno=770, col_offset=8), Expr(Call(Name('check', Load(), lineno=771, col_offset=8), [Call(Attribute(Name('_ast', Load(), lineno=771, col_offset=14), 'AST', Load(), lineno=771, col_offset=14), [], [], None, None, lineno=771, col_offset=14), Call(Name('size', Load(), lineno=771, col_offset=26), [BinOp(Name('h', Load(), lineno=771, col_offset=31), Add(), Str('', lineno=771, col_offset=35), lineno=771, col_offset=31)], [], None, None, lineno=771, col_offset=26)], [], None, None, lineno=771, col_offset=8), lineno=771, col_offset=8), Import([alias('imp', None)], lineno=773, col_offset=8), Expr(Call(Name('check', Load(), lineno=774, col_offset=8), [Call(Attribute(Name('imp', Load(), lineno=774, col_offset=14), 'NullImporter', Load(), lineno=774, col_offset=14), [Attribute(Attribute(Name('self', Load(), lineno=774, col_offset=31), 'file', Load(), lineno=774, col_offset=31), 'name', Load(), lineno=774, col_offset=31)], [], None, None, lineno=774, col_offset=14), Call(Name('size', Load(), lineno=774, col_offset=48), [BinOp(Name('h', Load(), lineno=774, col_offset=53), Add(), Str('', lineno=774, col_offset=57), lineno=774, col_offset=53)], [], None, None, lineno=774, col_offset=48)], [], None, None, lineno=774, col_offset=8), lineno=774, col_offset=8), TryExcept([Raise(Name('TypeError', Load(), lineno=776, col_offset=18), None, None, lineno=776, col_offset=12)], [ExceptHandler(Name('TypeError', Load(), lineno=777, col_offset=15), None, [Assign([Name('tb', Store(), lineno=778, col_offset=12)], Subscript(Call(Attribute(Name('sys', Load(), lineno=778, col_offset=17), 'exc_info', Load(), lineno=778, col_offset=17), [], [], None, None, lineno=778, col_offset=17), Index(Num(2, lineno=778, col_offset=32)), Load(), lineno=778, col_offset=17), lineno=778, col_offset=12), If(Compare(Name('tb', Load(), lineno=780, col_offset=15), [NotEq()], [Name('None', Load(), lineno=780, col_offset=21)], lineno=780, col_offset=15), [Expr(Call(Name('check', Load(), lineno=781, col_offset=16), [Name('tb', Load(), lineno=781, col_offset=22), Call(Name('size', Load(), lineno=781, col_offset=26), [BinOp(Name('h', Load(), lineno=781, col_offset=31), Add(), Str('2P2i', lineno=781, col_offset=35), lineno=781, col_offset=31)], [], None, None, lineno=781, col_offset=26)], [], None, None, lineno=781, col_offset=16), lineno=781, col_offset=16)], [], lineno=780, col_offset=12)], lineno=777, col_offset=8)], [], lineno=775, col_offset=8), Expr(Call(Name('check', Load(), lineno=785, col_offset=8), [Attribute(Name('sys', Load(), lineno=785, col_offset=14), 'flags', Load(), lineno=785, col_offset=14), BinOp(Call(Name('size', Load(), lineno=785, col_offset=25), [Name('vh', Load(), lineno=785, col_offset=30)], [], None, None, lineno=785, col_offset=25), Add(), BinOp(Attribute(Name('self', Load(), lineno=785, col_offset=36), 'P', Load(), lineno=785, col_offset=36), Mult(), Call(Name('len', Load(), lineno=785, col_offset=45), [Attribute(Name('sys', Load(), lineno=785, col_offset=49), 'flags', Load(), lineno=785, col_offset=49)], [], None, None, lineno=785, col_offset=45), lineno=785, col_offset=36), lineno=785, col_offset=25)], [], None, None, lineno=785, col_offset=8), lineno=785, col_offset=8)], [], lineno=763, col_offset=4)], [], lineno=476, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Assign([Name('test_classes', Store(), lineno=789, col_offset=4)], Tuple([Name('SysModuleTest', Load(), lineno=789, col_offset=20), Name('SizeofTest', Load(), lineno=789, col_offset=35)], Load(), lineno=789, col_offset=20), lineno=789, col_offset=4), Expr(Call(Attribute(Attribute(Name('test', Load(), lineno=791, col_offset=4), 'test_support', Load(), lineno=791, col_offset=4), 'run_unittest', Load(), lineno=791, col_offset=4), [], [], Name('test_classes', Load(), lineno=791, col_offset=36), None, lineno=791, col_offset=4), lineno=791, col_offset=4)], [], lineno=788, col_offset=0), If(Compare(Name('__name__', Load(), lineno=793, col_offset=3), [Eq()], [Str('__main__', lineno=793, col_offset=15)], lineno=793, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=794, col_offset=4), [], [], None, None, lineno=794, col_offset=4), lineno=794, col_offset=4)], [], lineno=793, col_offset=0)])
