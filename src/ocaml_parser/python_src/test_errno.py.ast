Module([Expr(Str('Test the errno module\n   Roger E. Masse\n', lineno=4, col_offset=-1), lineno=4, col_offset=-1), Import([alias('errno', None)], lineno=6, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=7, col_offset=0), Import([alias('unittest', None)], lineno=8, col_offset=0), Assign([Name('std_c_errors', Store(), lineno=10, col_offset=0)], Call(Name('frozenset', Load(), lineno=10, col_offset=15), [List([Str('EDOM', lineno=10, col_offset=26), Str('ERANGE', lineno=10, col_offset=34)], Load(), lineno=10, col_offset=25)], [], None, None, lineno=10, col_offset=15), lineno=10, col_offset=0), ClassDef('ErrnoAttributeTests', [Attribute(Name('unittest', Load(), lineno=12, col_offset=26), 'TestCase', Load(), lineno=12, col_offset=26)], [FunctionDef('test_for_improper_attributes', arguments([Name('self', Param(), lineno=14, col_offset=37)], None, None, []), [For(Name('error_code', Store(), lineno=16, col_offset=12), Name('std_c_errors', Load(), lineno=16, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=17, col_offset=12), 'assertTrue', Load(), lineno=17, col_offset=12), [Call(Name('hasattr', Load(), lineno=17, col_offset=28), [Name('errno', Load(), lineno=17, col_offset=36), Name('error_code', Load(), lineno=17, col_offset=43)], [], None, None, lineno=17, col_offset=28), BinOp(Str('errno is missing %s', lineno=18, col_offset=28), Mod(), Name('error_code', Load(), lineno=18, col_offset=52), lineno=18, col_offset=28)], [], None, None, lineno=17, col_offset=12), lineno=17, col_offset=12)], [], lineno=16, col_offset=8)], [], lineno=14, col_offset=4), FunctionDef('test_using_errorcode', arguments([Name('self', Param(), lineno=20, col_offset=29)], None, None, []), [For(Name('value', Store(), lineno=22, col_offset=12), Call(Attribute(Attribute(Name('errno', Load(), lineno=22, col_offset=21), 'errorcode', Load(), lineno=22, col_offset=21), 'itervalues', Load(), lineno=22, col_offset=21), [], [], None, None, lineno=22, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=12), 'assertTrue', Load(), lineno=23, col_offset=12), [Call(Name('hasattr', Load(), lineno=23, col_offset=28), [Name('errno', Load(), lineno=23, col_offset=36), Name('value', Load(), lineno=23, col_offset=43)], [], None, None, lineno=23, col_offset=28), BinOp(Str('no %s attr in errno', lineno=23, col_offset=51), Mod(), Name('value', Load(), lineno=23, col_offset=75), lineno=23, col_offset=51)], [], None, None, lineno=23, col_offset=12), lineno=23, col_offset=12)], [], lineno=22, col_offset=8)], [], lineno=20, col_offset=4)], [], lineno=12, col_offset=0), ClassDef('ErrorcodeTests', [Attribute(Name('unittest', Load(), lineno=26, col_offset=21), 'TestCase', Load(), lineno=26, col_offset=21)], [FunctionDef('test_attributes_in_errorcode', arguments([Name('self', Param(), lineno=28, col_offset=37)], None, None, []), [For(Name('attribute', Store(), lineno=29, col_offset=12), Call(Attribute(Attribute(Name('errno', Load(), lineno=29, col_offset=25), '__dict__', Load(), lineno=29, col_offset=25), 'iterkeys', Load(), lineno=29, col_offset=25), [], [], None, None, lineno=29, col_offset=25), [If(Call(Attribute(Name('attribute', Load(), lineno=30, col_offset=15), 'isupper', Load(), lineno=30, col_offset=15), [], [], None, None, lineno=30, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=31, col_offset=16), 'assertIn', Load(), lineno=31, col_offset=16), [Call(Name('getattr', Load(), lineno=31, col_offset=30), [Name('errno', Load(), lineno=31, col_offset=38), Name('attribute', Load(), lineno=31, col_offset=45)], [], None, None, lineno=31, col_offset=30), Attribute(Name('errno', Load(), lineno=31, col_offset=57), 'errorcode', Load(), lineno=31, col_offset=57), BinOp(Str('no %s attr in errno.errorcode', lineno=32, col_offset=30), Mod(), Name('attribute', Load(), lineno=32, col_offset=64), lineno=32, col_offset=30)], [], None, None, lineno=31, col_offset=16), lineno=31, col_offset=16)], [], lineno=30, col_offset=12)], [], lineno=29, col_offset=8)], [], lineno=28, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=36, col_offset=4), 'run_unittest', Load(), lineno=36, col_offset=4), [Name('ErrnoAttributeTests', Load(), lineno=36, col_offset=30), Name('ErrorcodeTests', Load(), lineno=36, col_offset=51)], [], None, None, lineno=36, col_offset=4), lineno=36, col_offset=4)], [], lineno=35, col_offset=0), If(Compare(Name('__name__', Load(), lineno=39, col_offset=3), [Eq()], [Str('__main__', lineno=39, col_offset=15)], lineno=39, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=40, col_offset=4), [], [], None, None, lineno=40, col_offset=4), lineno=40, col_offset=4)], [], lineno=39, col_offset=0)])
