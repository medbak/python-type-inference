Module([FunctionDef('cstring', arguments([Name('s', Param(), lineno=1, col_offset=12), Name('width', Param(), lineno=1, col_offset=15)], None, None, [Num(70, lineno=1, col_offset=21)]), [Expr(Str('Return C string representation of a Python string.\n\n    width specifies the maximum width of any line of the C string.\n    ', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Assign([Name('L', Store(), lineno=6, col_offset=4)], List([], Load(), lineno=6, col_offset=8), lineno=6, col_offset=4), For(Name('l', Store(), lineno=7, col_offset=8), Call(Attribute(Name('s', Load(), lineno=7, col_offset=13), 'split', Load(), lineno=7, col_offset=13), [Str('\n', lineno=7, col_offset=21)], [], None, None, lineno=7, col_offset=13), [If(Compare(Call(Name('len', Load(), lineno=8, col_offset=11), [Name('l', Load(), lineno=8, col_offset=15)], [], None, None, lineno=8, col_offset=11), [Lt()], [Name('width', Load(), lineno=8, col_offset=20)], lineno=8, col_offset=11), [Expr(Call(Attribute(Name('L', Load(), lineno=9, col_offset=12), 'append', Load(), lineno=9, col_offset=12), [BinOp(Str('"%s\\n"', lineno=9, col_offset=21), Mod(), Name('l', Load(), lineno=9, col_offset=33), lineno=9, col_offset=21)], [], None, None, lineno=9, col_offset=12), lineno=9, col_offset=12)], [], lineno=8, col_offset=8)], [], lineno=7, col_offset=4), Return(Call(Attribute(Str('\n', lineno=11, col_offset=11), 'join', Load(), lineno=11, col_offset=11), [Name('L', Load(), lineno=11, col_offset=21)], [], None, None, lineno=11, col_offset=11), lineno=11, col_offset=4)], [], lineno=1, col_offset=0), FunctionDef('unindent', arguments([Name('s', Param(), lineno=13, col_offset=13), Name('skipfirst', Param(), lineno=13, col_offset=16)], None, None, [Name('True', Load(), lineno=13, col_offset=26)]), [Expr(Str('Return an unindented version of a docstring.\n\n    Removes indentation on lines following the first one, using the\n    leading whitespace of the first indented line that is not blank\n    to determine the indentation.\n    ', lineno=19, col_offset=-1), lineno=19, col_offset=-1), Assign([Name('lines', Store(), lineno=21, col_offset=4)], Call(Attribute(Name('s', Load(), lineno=21, col_offset=12), 'split', Load(), lineno=21, col_offset=12), [Str('\n', lineno=21, col_offset=20)], [], None, None, lineno=21, col_offset=12), lineno=21, col_offset=4), If(Name('skipfirst', Load(), lineno=22, col_offset=7), [Assign([Name('first', Store(), lineno=23, col_offset=8)], Call(Attribute(Name('lines', Load(), lineno=23, col_offset=16), 'pop', Load(), lineno=23, col_offset=16), [Num(0, lineno=23, col_offset=26)], [], None, None, lineno=23, col_offset=16), lineno=23, col_offset=8), Assign([Name('L', Store(), lineno=24, col_offset=8)], List([Name('first', Load(), lineno=24, col_offset=13)], Load(), lineno=24, col_offset=12), lineno=24, col_offset=8)], [Assign([Name('L', Store(), lineno=26, col_offset=8)], List([], Load(), lineno=26, col_offset=12), lineno=26, col_offset=8)], lineno=22, col_offset=4), Assign([Name('indent', Store(), lineno=27, col_offset=4)], Name('None', Load(), lineno=27, col_offset=13), lineno=27, col_offset=4), For(Name('l', Store(), lineno=28, col_offset=8), Name('lines', Load(), lineno=28, col_offset=13), [Assign([Name('ls', Store(), lineno=29, col_offset=8)], Call(Attribute(Name('l', Load(), lineno=29, col_offset=13), 'strip', Load(), lineno=29, col_offset=13), [], [], None, None, lineno=29, col_offset=13), lineno=29, col_offset=8), If(Name('ls', Load(), lineno=30, col_offset=11), [Assign([Name('indent', Store(), lineno=31, col_offset=12)], BinOp(Call(Name('len', Load(), lineno=31, col_offset=21), [Name('l', Load(), lineno=31, col_offset=25)], [], None, None, lineno=31, col_offset=21), Sub(), Call(Name('len', Load(), lineno=31, col_offset=30), [Name('ls', Load(), lineno=31, col_offset=34)], [], None, None, lineno=31, col_offset=30), lineno=31, col_offset=21), lineno=31, col_offset=12), Break( lineno=32, col_offset=12)], [], lineno=30, col_offset=8)], [], lineno=28, col_offset=4), AugAssign(Name('L', Store(), lineno=33, col_offset=4), Add(), ListComp(Subscript(Name('l', Load(), lineno=33, col_offset=10), Slice(Name('indent', Load(), lineno=33, col_offset=12), None, None), Load(), lineno=33, col_offset=10), [comprehension(Name('l', Store(), lineno=33, col_offset=25), Name('lines', Load(), lineno=33, col_offset=30), [])], lineno=33, col_offset=10), lineno=33, col_offset=4), Return(Call(Attribute(Str('\n', lineno=35, col_offset=11), 'join', Load(), lineno=35, col_offset=11), [Name('L', Load(), lineno=35, col_offset=21)], [], None, None, lineno=35, col_offset=11), lineno=35, col_offset=4)], [], lineno=13, col_offset=0)])
