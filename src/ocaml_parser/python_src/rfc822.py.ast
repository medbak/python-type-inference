Module([Expr(Str("RFC 2822 message manipulation.\n\nNote: This is only a very rough sketch of a full RFC-822 parser; in particular\nthe tokenizing of addresses does not adhere to all the quoting rules.\n\nNote: RFC 2822 is a long awaited update to RFC 822.  This module should\nconform to RFC 2822, and is thus mis-named (it's not worth renaming it).  Some\neffort at RFC 2822 updates have been made, but a thorough audit has not been\nperformed.  Consider any RFC 2822 non-conformance to be a bug.\n\n    RFC 2822: http://www.faqs.org/rfcs/rfc2822.html\n    RFC 822 : http://www.faqs.org/rfcs/rfc822.html (obsolete)\n\nDirections for use:\n\nTo create a Message object: first open a file, e.g.:\n\n  fp = open(file, 'r')\n\nYou can use any other legal way of getting an open file object, e.g. use\nsys.stdin or call os.popen().  Then pass the open file object to the Message()\nconstructor:\n\n  m = Message(fp)\n\nThis class can work with any input object that supports a readline method.  If\nthe input object has seek and tell capability, the rewindbody method will\nwork; also illegal lines will be pushed back onto the input stream.  If the\ninput object lacks seek but has an `unread' method that can push back a line\nof input, Message will use that to push back illegal lines.  Thus this class\ncan be used to parse messages coming from a buffered stream.\n\nThe optional `seekable' argument is provided as a workaround for certain stdio\nlibraries in which tell() discards buffered data before discovering that the\nlseek() system call doesn't work.  For maximum portability, you should set the\nseekable argument to zero to prevent that initial \\code{tell} when passing in\nan unseekable object such as a a file object created from a socket object.  If\nit is 1 on entry -- which it is by default -- the tell() method of the open\nfile object is called once; if this raises an exception, seekable is reset to\n0.  For other nonzero values of seekable, this test is not made.\n\nTo get the text of a particular header there are several methods:\n\n  str = m.getheader(name)\n  str = m.getrawheader(name)\n\nwhere name is the name of the header, e.g. 'Subject'.  The difference is that\ngetheader() strips the leading and trailing whitespace, while getrawheader()\ndoesn't.  Both functions retain embedded whitespace (including newlines)\nexactly as they are specified in the header, and leave the case of the text\nunchanged.\n\nFor addresses and address lists there are functions\n\n  realname, mailaddress = m.getaddr(name)\n  list = m.getaddrlist(name)\n\nwhere the latter returns a list of (realname, mailaddr) tuples.\n\nThere is also a method\n\n  time = m.getdate(name)\n\nwhich parses a Date-like field and returns a time-compatible tuple,\ni.e. a tuple such as returned by time.localtime() or accepted by\ntime.mktime().\n\nSee the class definition for lower level access methods.\n\nThere are also some utility functions here.\n", lineno=71, col_offset=-1), lineno=71, col_offset=-1), Import([alias('time', None)], lineno=74, col_offset=0), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=76, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=77, col_offset=0), [Str('in 3.x, rfc822 has been removed in favor of the email package', lineno=77, col_offset=9)], [keyword('stacklevel', Num(2, lineno=78, col_offset=20))], None, None, lineno=77, col_offset=0), lineno=77, col_offset=0), Assign([Name('__all__', Store(), lineno=80, col_offset=0)], List([Str('Message', lineno=80, col_offset=11), Str('AddressList', lineno=80, col_offset=21), Str('parsedate', lineno=80, col_offset=35), Str('parsedate_tz', lineno=80, col_offset=47), Str('mktime_tz', lineno=80, col_offset=62)], Load(), lineno=80, col_offset=10), lineno=80, col_offset=0), Assign([Name('_blanklines', Store(), lineno=82, col_offset=0)], Tuple([Str('\r\n', lineno=82, col_offset=15), Str('\n', lineno=82, col_offset=23)], Load(), lineno=82, col_offset=15), lineno=82, col_offset=0), ClassDef('Message', [], [Expr(Str('Represents a single RFC 2822-compliant message.', lineno=86, col_offset=4), lineno=86, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=88, col_offset=17), Name('fp', Param(), lineno=88, col_offset=23), Name('seekable', Param(), lineno=88, col_offset=27)], None, None, [Num(1, lineno=88, col_offset=38)]), [Expr(Str('Initialize the class instance and read the headers.', lineno=89, col_offset=8), lineno=89, col_offset=8), If(Compare(Name('seekable', Load(), lineno=90, col_offset=11), [Eq()], [Num(1, lineno=90, col_offset=23)], lineno=90, col_offset=11), [TryExcept([Expr(Call(Attribute(Name('fp', Load(), lineno=94, col_offset=16), 'tell', Load(), lineno=94, col_offset=16), [], [], None, None, lineno=94, col_offset=16), lineno=94, col_offset=16)], [ExceptHandler(Tuple([Name('AttributeError', Load(), lineno=95, col_offset=20), Name('IOError', Load(), lineno=95, col_offset=36)], Load(), lineno=95, col_offset=20), None, [Assign([Name('seekable', Store(), lineno=96, col_offset=16)], Num(0, lineno=96, col_offset=27), lineno=96, col_offset=16)], lineno=95, col_offset=12)], [], lineno=93, col_offset=12)], [], lineno=90, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=97, col_offset=8), 'fp', Store(), lineno=97, col_offset=8)], Name('fp', Load(), lineno=97, col_offset=18), lineno=97, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=98, col_offset=8), 'seekable', Store(), lineno=98, col_offset=8)], Name('seekable', Load(), lineno=98, col_offset=24), lineno=98, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=99, col_offset=8), 'startofheaders', Store(), lineno=99, col_offset=8)], Name('None', Load(), lineno=99, col_offset=30), lineno=99, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=100, col_offset=8), 'startofbody', Store(), lineno=100, col_offset=8)], Name('None', Load(), lineno=100, col_offset=27), lineno=100, col_offset=8), If(Attribute(Name('self', Load(), lineno=102, col_offset=11), 'seekable', Load(), lineno=102, col_offset=11), [TryExcept([Assign([Attribute(Name('self', Load(), lineno=104, col_offset=16), 'startofheaders', Store(), lineno=104, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=104, col_offset=38), 'fp', Load(), lineno=104, col_offset=38), 'tell', Load(), lineno=104, col_offset=38), [], [], None, None, lineno=104, col_offset=38), lineno=104, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=105, col_offset=19), None, [Assign([Attribute(Name('self', Load(), lineno=106, col_offset=16), 'seekable', Store(), lineno=106, col_offset=16)], Num(0, lineno=106, col_offset=32), lineno=106, col_offset=16)], lineno=105, col_offset=12)], [], lineno=103, col_offset=12)], [], lineno=102, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=108, col_offset=8), 'readheaders', Load(), lineno=108, col_offset=8), [], [], None, None, lineno=108, col_offset=8), lineno=108, col_offset=8), If(Attribute(Name('self', Load(), lineno=110, col_offset=11), 'seekable', Load(), lineno=110, col_offset=11), [TryExcept([Assign([Attribute(Name('self', Load(), lineno=112, col_offset=16), 'startofbody', Store(), lineno=112, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=112, col_offset=35), 'fp', Load(), lineno=112, col_offset=35), 'tell', Load(), lineno=112, col_offset=35), [], [], None, None, lineno=112, col_offset=35), lineno=112, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=113, col_offset=19), None, [Assign([Attribute(Name('self', Load(), lineno=114, col_offset=16), 'seekable', Store(), lineno=114, col_offset=16)], Num(0, lineno=114, col_offset=32), lineno=114, col_offset=16)], lineno=113, col_offset=12)], [], lineno=111, col_offset=12)], [], lineno=110, col_offset=8)], [], lineno=88, col_offset=4), FunctionDef('rewindbody', arguments([Name('self', Param(), lineno=116, col_offset=19)], None, None, []), [Expr(Str('Rewind the file to the start of the body (if seekable).', lineno=117, col_offset=8), lineno=117, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=118, col_offset=15), 'seekable', Load(), lineno=118, col_offset=15), lineno=118, col_offset=11), [Raise(Name('IOError', Load(), lineno=119, col_offset=18), Str('unseekable file', lineno=119, col_offset=27), None, lineno=119, col_offset=12)], [], lineno=118, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=120, col_offset=8), 'fp', Load(), lineno=120, col_offset=8), 'seek', Load(), lineno=120, col_offset=8), [Attribute(Name('self', Load(), lineno=120, col_offset=21), 'startofbody', Load(), lineno=120, col_offset=21)], [], None, None, lineno=120, col_offset=8), lineno=120, col_offset=8)], [], lineno=116, col_offset=4), FunctionDef('readheaders', arguments([Name('self', Param(), lineno=122, col_offset=20)], None, None, []), [Expr(Str('Read header lines.\n\n        Read header lines up to the entirely blank line that terminates them.\n        The (normally blank) line that ends the headers is skipped, but not\n        included in the returned list.  If a non-header line ends the headers,\n        (which is an error), an attempt is made to backspace over it; it is\n        never included in the returned list.\n\n        The variable self.status is set to the empty string if all went well,\n        otherwise it is an error message.  The variable self.headers is a\n        completely uninterpreted list of lines contained in the header (so\n        printing them will reproduce the header exactly as it appears in the\n        file).\n        ', lineno=136, col_offset=-1), lineno=136, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=137, col_offset=8), 'dict', Store(), lineno=137, col_offset=8)], Dict([], [], lineno=137, col_offset=20), lineno=137, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=138, col_offset=8), 'unixfrom', Store(), lineno=138, col_offset=8)], Str('', lineno=138, col_offset=24), lineno=138, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=139, col_offset=8), 'headers', Store(), lineno=139, col_offset=8), Name('lst', Store(), lineno=139, col_offset=23)], List([], Load(), lineno=139, col_offset=29), lineno=139, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=140, col_offset=8), 'status', Store(), lineno=140, col_offset=8)], Str('', lineno=140, col_offset=22), lineno=140, col_offset=8), Assign([Name('headerseen', Store(), lineno=141, col_offset=8)], Str('', lineno=141, col_offset=21), lineno=141, col_offset=8), Assign([Name('firstline', Store(), lineno=142, col_offset=8)], Num(1, lineno=142, col_offset=20), lineno=142, col_offset=8), Assign([Name('startofline', Store(), lineno=143, col_offset=8), Name('unread', Store(), lineno=143, col_offset=22), Name('tell', Store(), lineno=143, col_offset=31)], Name('None', Load(), lineno=143, col_offset=38), lineno=143, col_offset=8), If(Call(Name('hasattr', Load(), lineno=144, col_offset=11), [Attribute(Name('self', Load(), lineno=144, col_offset=19), 'fp', Load(), lineno=144, col_offset=19), Str('unread', lineno=144, col_offset=28)], [], None, None, lineno=144, col_offset=11), [Assign([Name('unread', Store(), lineno=145, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=145, col_offset=21), 'fp', Load(), lineno=145, col_offset=21), 'unread', Load(), lineno=145, col_offset=21), lineno=145, col_offset=12)], [If(Attribute(Name('self', Load(), lineno=146, col_offset=13), 'seekable', Load(), lineno=146, col_offset=13), [Assign([Name('tell', Store(), lineno=147, col_offset=12)], Attribute(Attribute(Name('self', Load(), lineno=147, col_offset=19), 'fp', Load(), lineno=147, col_offset=19), 'tell', Load(), lineno=147, col_offset=19), lineno=147, col_offset=12)], [], lineno=146, col_offset=13)], lineno=144, col_offset=8), While(Num(1, lineno=148, col_offset=14), [If(Name('tell', Load(), lineno=149, col_offset=15), [TryExcept([Assign([Name('startofline', Store(), lineno=151, col_offset=20)], Call(Name('tell', Load(), lineno=151, col_offset=34), [], [], None, None, lineno=151, col_offset=34), lineno=151, col_offset=20)], [ExceptHandler(Name('IOError', Load(), lineno=152, col_offset=23), None, [Assign([Name('startofline', Store(), lineno=153, col_offset=20), Name('tell', Store(), lineno=153, col_offset=34)], Name('None', Load(), lineno=153, col_offset=41), lineno=153, col_offset=20), Assign([Attribute(Name('self', Load(), lineno=154, col_offset=20), 'seekable', Store(), lineno=154, col_offset=20)], Num(0, lineno=154, col_offset=36), lineno=154, col_offset=20)], lineno=152, col_offset=16)], [], lineno=150, col_offset=16)], [], lineno=149, col_offset=12), Assign([Name('line', Store(), lineno=155, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=155, col_offset=19), 'fp', Load(), lineno=155, col_offset=19), 'readline', Load(), lineno=155, col_offset=19), [], [], None, None, lineno=155, col_offset=19), lineno=155, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=156, col_offset=19), lineno=156, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=157, col_offset=16), 'status', Store(), lineno=157, col_offset=16)], Str('EOF in headers', lineno=157, col_offset=30), lineno=157, col_offset=16), Break( lineno=158, col_offset=16)], [], lineno=156, col_offset=12), If(BoolOp(And(), [Name('firstline', Load(), lineno=160, col_offset=15), Call(Attribute(Name('line', Load(), lineno=160, col_offset=29), 'startswith', Load(), lineno=160, col_offset=29), [Str('From ', lineno=160, col_offset=45)], [], None, None, lineno=160, col_offset=29)], lineno=160, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=161, col_offset=16), 'unixfrom', Store(), lineno=161, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=161, col_offset=32), 'unixfrom', Load(), lineno=161, col_offset=32), Add(), Name('line', Load(), lineno=161, col_offset=48), lineno=161, col_offset=32), lineno=161, col_offset=16), Continue( lineno=162, col_offset=16)], [], lineno=160, col_offset=12), Assign([Name('firstline', Store(), lineno=163, col_offset=12)], Num(0, lineno=163, col_offset=24), lineno=163, col_offset=12), If(BoolOp(And(), [Name('headerseen', Load(), lineno=164, col_offset=15), Compare(Subscript(Name('line', Load(), lineno=164, col_offset=30), Index(Num(0, lineno=164, col_offset=35)), Load(), lineno=164, col_offset=30), [In()], [Str(' \t', lineno=164, col_offset=41)], lineno=164, col_offset=30)], lineno=164, col_offset=15), [Expr(Call(Attribute(Name('lst', Load(), lineno=166, col_offset=16), 'append', Load(), lineno=166, col_offset=16), [Name('line', Load(), lineno=166, col_offset=27)], [], None, None, lineno=166, col_offset=16), lineno=166, col_offset=16), Assign([Name('x', Store(), lineno=167, col_offset=16)], BinOp(BinOp(Subscript(Attribute(Name('self', Load(), lineno=167, col_offset=21), 'dict', Load(), lineno=167, col_offset=21), Index(Name('headerseen', Load(), lineno=167, col_offset=31)), Load(), lineno=167, col_offset=21), Add(), Str('\n ', lineno=167, col_offset=45), lineno=167, col_offset=21), Add(), Call(Attribute(Name('line', Load(), lineno=167, col_offset=53), 'strip', Load(), lineno=167, col_offset=53), [], [], None, None, lineno=167, col_offset=53), lineno=167, col_offset=51), lineno=167, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=168, col_offset=16), 'dict', Load(), lineno=168, col_offset=16), Index(Name('headerseen', Load(), lineno=168, col_offset=26)), Store(), lineno=168, col_offset=16)], Call(Attribute(Name('x', Load(), lineno=168, col_offset=40), 'strip', Load(), lineno=168, col_offset=40), [], [], None, None, lineno=168, col_offset=40), lineno=168, col_offset=16), Continue( lineno=169, col_offset=16)], [If(Call(Attribute(Name('self', Load(), lineno=170, col_offset=17), 'iscomment', Load(), lineno=170, col_offset=17), [Name('line', Load(), lineno=170, col_offset=32)], [], None, None, lineno=170, col_offset=17), [Continue( lineno=172, col_offset=16)], [If(Call(Attribute(Name('self', Load(), lineno=173, col_offset=17), 'islast', Load(), lineno=173, col_offset=17), [Name('line', Load(), lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=17), [Break( lineno=175, col_offset=16)], [], lineno=173, col_offset=17)], lineno=170, col_offset=17)], lineno=164, col_offset=12), Assign([Name('headerseen', Store(), lineno=176, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=176, col_offset=25), 'isheader', Load(), lineno=176, col_offset=25), [Name('line', Load(), lineno=176, col_offset=39)], [], None, None, lineno=176, col_offset=25), lineno=176, col_offset=12), If(Name('headerseen', Load(), lineno=177, col_offset=15), [Expr(Call(Attribute(Name('lst', Load(), lineno=179, col_offset=16), 'append', Load(), lineno=179, col_offset=16), [Name('line', Load(), lineno=179, col_offset=27)], [], None, None, lineno=179, col_offset=16), lineno=179, col_offset=16), Assign([Subscript(Attribute(Name('self', Load(), lineno=180, col_offset=16), 'dict', Load(), lineno=180, col_offset=16), Index(Name('headerseen', Load(), lineno=180, col_offset=26)), Store(), lineno=180, col_offset=16)], Call(Attribute(Subscript(Name('line', Load(), lineno=180, col_offset=40), Slice(BinOp(Call(Name('len', Load(), lineno=180, col_offset=45), [Name('headerseen', Load(), lineno=180, col_offset=49)], [], None, None, lineno=180, col_offset=45), Add(), Num(1, lineno=180, col_offset=61), lineno=180, col_offset=45), None, None), Load(), lineno=180, col_offset=40), 'strip', Load(), lineno=180, col_offset=40), [], [], None, None, lineno=180, col_offset=40), lineno=180, col_offset=16), Continue( lineno=181, col_offset=16)], [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=184, col_offset=23), 'dict', Load(), lineno=184, col_offset=23), lineno=184, col_offset=19), [Assign([Attribute(Name('self', Load(), lineno=185, col_offset=20), 'status', Store(), lineno=185, col_offset=20)], Str('No headers', lineno=185, col_offset=34), lineno=185, col_offset=20)], [Assign([Attribute(Name('self', Load(), lineno=187, col_offset=20), 'status', Store(), lineno=187, col_offset=20)], Str('Non-header line where header expected', lineno=187, col_offset=34), lineno=187, col_offset=20)], lineno=184, col_offset=16), If(Name('unread', Load(), lineno=189, col_offset=19), [Expr(Call(Name('unread', Load(), lineno=190, col_offset=20), [Name('line', Load(), lineno=190, col_offset=27)], [], None, None, lineno=190, col_offset=20), lineno=190, col_offset=20)], [If(Name('tell', Load(), lineno=191, col_offset=21), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=192, col_offset=20), 'fp', Load(), lineno=192, col_offset=20), 'seek', Load(), lineno=192, col_offset=20), [Name('startofline', Load(), lineno=192, col_offset=33)], [], None, None, lineno=192, col_offset=20), lineno=192, col_offset=20)], [Assign([Attribute(Name('self', Load(), lineno=194, col_offset=20), 'status', Store(), lineno=194, col_offset=20)], BinOp(Attribute(Name('self', Load(), lineno=194, col_offset=34), 'status', Load(), lineno=194, col_offset=34), Add(), Str('; bad seek', lineno=194, col_offset=48), lineno=194, col_offset=34), lineno=194, col_offset=20)], lineno=191, col_offset=21)], lineno=189, col_offset=16), Break( lineno=195, col_offset=16)], lineno=177, col_offset=12)], [], lineno=148, col_offset=8)], [], lineno=122, col_offset=4), FunctionDef('isheader', arguments([Name('self', Param(), lineno=197, col_offset=17), Name('line', Param(), lineno=197, col_offset=23)], None, None, []), [Expr(Str('Determine whether a given line is a legal header.\n\n        This method should return the header name, suitably canonicalized.\n        You may override this method in order to use Message parsing on tagged\n        data in RFC 2822-like formats with special header formats.\n        ', lineno=203, col_offset=-1), lineno=203, col_offset=-1), Assign([Name('i', Store(), lineno=204, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=204, col_offset=12), 'find', Load(), lineno=204, col_offset=12), [Str(':', lineno=204, col_offset=22)], [], None, None, lineno=204, col_offset=12), lineno=204, col_offset=8), If(Compare(Name('i', Load(), lineno=205, col_offset=11), [Gt()], [Num(0, lineno=205, col_offset=15)], lineno=205, col_offset=11), [Return(Call(Attribute(Subscript(Name('line', Load(), lineno=206, col_offset=19), Slice(None, Name('i', Load(), lineno=206, col_offset=25), None), Load(), lineno=206, col_offset=19), 'lower', Load(), lineno=206, col_offset=19), [], [], None, None, lineno=206, col_offset=19), lineno=206, col_offset=12)], [], lineno=205, col_offset=8), Return(Name('None', Load(), lineno=207, col_offset=15), lineno=207, col_offset=8)], [], lineno=197, col_offset=4), FunctionDef('islast', arguments([Name('self', Param(), lineno=209, col_offset=15), Name('line', Param(), lineno=209, col_offset=21)], None, None, []), [Expr(Str("Determine whether a line is a legal end of RFC 2822 headers.\n\n        You may override this method if your application wants to bend the\n        rules, e.g. to strip trailing whitespace, or to recognize MH template\n        separators ('--------').  For convenience (e.g. for code reading from\n        sockets) a line consisting of \r\n also matches.\n        ", lineno=216, col_offset=-1), lineno=216, col_offset=-1), Return(Compare(Name('line', Load(), lineno=217, col_offset=15), [In()], [Name('_blanklines', Load(), lineno=217, col_offset=23)], lineno=217, col_offset=15), lineno=217, col_offset=8)], [], lineno=209, col_offset=4), FunctionDef('iscomment', arguments([Name('self', Param(), lineno=219, col_offset=18), Name('line', Param(), lineno=219, col_offset=24)], None, None, []), [Expr(Str('Determine whether a line should be skipped entirely.\n\n        You may override this method in order to use Message parsing on tagged\n        data in RFC 2822-like formats that support embedded comments or\n        free-text data.\n        ', lineno=225, col_offset=-1), lineno=225, col_offset=-1), Return(Name('False', Load(), lineno=226, col_offset=15), lineno=226, col_offset=8)], [], lineno=219, col_offset=4), FunctionDef('getallmatchingheaders', arguments([Name('self', Param(), lineno=228, col_offset=30), Name('name', Param(), lineno=228, col_offset=36)], None, None, []), [Expr(Str('Find all header lines matching a given header name.\n\n        Look through the list of headers and find all lines matching a given\n        header name (and their continuation lines).  A list of the lines is\n        returned, without interpretation.  If the header does not occur, an\n        empty list is returned.  If the header occurs multiple times, all\n        occurrences are returned.  Case is not important in the header name.\n        ', lineno=236, col_offset=-1), lineno=236, col_offset=-1), Assign([Name('name', Store(), lineno=237, col_offset=8)], BinOp(Call(Attribute(Name('name', Load(), lineno=237, col_offset=15), 'lower', Load(), lineno=237, col_offset=15), [], [], None, None, lineno=237, col_offset=15), Add(), Str(':', lineno=237, col_offset=30), lineno=237, col_offset=15), lineno=237, col_offset=8), Assign([Name('n', Store(), lineno=238, col_offset=8)], Call(Name('len', Load(), lineno=238, col_offset=12), [Name('name', Load(), lineno=238, col_offset=16)], [], None, None, lineno=238, col_offset=12), lineno=238, col_offset=8), Assign([Name('lst', Store(), lineno=239, col_offset=8)], List([], Load(), lineno=239, col_offset=14), lineno=239, col_offset=8), Assign([Name('hit', Store(), lineno=240, col_offset=8)], Num(0, lineno=240, col_offset=14), lineno=240, col_offset=8), For(Name('line', Store(), lineno=241, col_offset=12), Attribute(Name('self', Load(), lineno=241, col_offset=20), 'headers', Load(), lineno=241, col_offset=20), [If(Compare(Call(Attribute(Subscript(Name('line', Load(), lineno=242, col_offset=15), Slice(None, Name('n', Load(), lineno=242, col_offset=21), None), Load(), lineno=242, col_offset=15), 'lower', Load(), lineno=242, col_offset=15), [], [], None, None, lineno=242, col_offset=15), [Eq()], [Name('name', Load(), lineno=242, col_offset=35)], lineno=242, col_offset=15), [Assign([Name('hit', Store(), lineno=243, col_offset=16)], Num(1, lineno=243, col_offset=22), lineno=243, col_offset=16)], [If(UnaryOp(Not(), Call(Attribute(Subscript(Name('line', Load(), lineno=244, col_offset=21), Slice(None, Num(1, lineno=244, col_offset=27), None), Load(), lineno=244, col_offset=21), 'isspace', Load(), lineno=244, col_offset=21), [], [], None, None, lineno=244, col_offset=21), lineno=244, col_offset=17), [Assign([Name('hit', Store(), lineno=245, col_offset=16)], Num(0, lineno=245, col_offset=22), lineno=245, col_offset=16)], [], lineno=244, col_offset=17)], lineno=242, col_offset=12), If(Name('hit', Load(), lineno=246, col_offset=15), [Expr(Call(Attribute(Name('lst', Load(), lineno=247, col_offset=16), 'append', Load(), lineno=247, col_offset=16), [Name('line', Load(), lineno=247, col_offset=27)], [], None, None, lineno=247, col_offset=16), lineno=247, col_offset=16)], [], lineno=246, col_offset=12)], [], lineno=241, col_offset=8), Return(Name('lst', Load(), lineno=248, col_offset=15), lineno=248, col_offset=8)], [], lineno=228, col_offset=4), FunctionDef('getfirstmatchingheader', arguments([Name('self', Param(), lineno=250, col_offset=31), Name('name', Param(), lineno=250, col_offset=37)], None, None, []), [Expr(Str('Get the first header line matching name.\n\n        This is similar to getallmatchingheaders, but it returns only the\n        first matching header (and its continuation lines).\n        ', lineno=255, col_offset=-1), lineno=255, col_offset=-1), Assign([Name('name', Store(), lineno=256, col_offset=8)], BinOp(Call(Attribute(Name('name', Load(), lineno=256, col_offset=15), 'lower', Load(), lineno=256, col_offset=15), [], [], None, None, lineno=256, col_offset=15), Add(), Str(':', lineno=256, col_offset=30), lineno=256, col_offset=15), lineno=256, col_offset=8), Assign([Name('n', Store(), lineno=257, col_offset=8)], Call(Name('len', Load(), lineno=257, col_offset=12), [Name('name', Load(), lineno=257, col_offset=16)], [], None, None, lineno=257, col_offset=12), lineno=257, col_offset=8), Assign([Name('lst', Store(), lineno=258, col_offset=8)], List([], Load(), lineno=258, col_offset=14), lineno=258, col_offset=8), Assign([Name('hit', Store(), lineno=259, col_offset=8)], Num(0, lineno=259, col_offset=14), lineno=259, col_offset=8), For(Name('line', Store(), lineno=260, col_offset=12), Attribute(Name('self', Load(), lineno=260, col_offset=20), 'headers', Load(), lineno=260, col_offset=20), [If(Name('hit', Load(), lineno=261, col_offset=15), [If(UnaryOp(Not(), Call(Attribute(Subscript(Name('line', Load(), lineno=262, col_offset=23), Slice(None, Num(1, lineno=262, col_offset=29), None), Load(), lineno=262, col_offset=23), 'isspace', Load(), lineno=262, col_offset=23), [], [], None, None, lineno=262, col_offset=23), lineno=262, col_offset=19), [Break( lineno=263, col_offset=20)], [], lineno=262, col_offset=16)], [If(Compare(Call(Attribute(Subscript(Name('line', Load(), lineno=264, col_offset=17), Slice(None, Name('n', Load(), lineno=264, col_offset=23), None), Load(), lineno=264, col_offset=17), 'lower', Load(), lineno=264, col_offset=17), [], [], None, None, lineno=264, col_offset=17), [Eq()], [Name('name', Load(), lineno=264, col_offset=37)], lineno=264, col_offset=17), [Assign([Name('hit', Store(), lineno=265, col_offset=16)], Num(1, lineno=265, col_offset=22), lineno=265, col_offset=16)], [], lineno=264, col_offset=17)], lineno=261, col_offset=12), If(Name('hit', Load(), lineno=266, col_offset=15), [Expr(Call(Attribute(Name('lst', Load(), lineno=267, col_offset=16), 'append', Load(), lineno=267, col_offset=16), [Name('line', Load(), lineno=267, col_offset=27)], [], None, None, lineno=267, col_offset=16), lineno=267, col_offset=16)], [], lineno=266, col_offset=12)], [], lineno=260, col_offset=8), Return(Name('lst', Load(), lineno=268, col_offset=15), lineno=268, col_offset=8)], [], lineno=250, col_offset=4), FunctionDef('getrawheader', arguments([Name('self', Param(), lineno=270, col_offset=21), Name('name', Param(), lineno=270, col_offset=27)], None, None, []), [Expr(Str('A higher-level interface to getfirstmatchingheader().\n\n        Return a string containing the literal text of the header but with the\n        keyword stripped.  All leading, trailing and embedded whitespace is\n        kept in the string, however.  Return None if the header does not\n        occur.\n        ', lineno=277, col_offset=-1), lineno=277, col_offset=-1), Assign([Name('lst', Store(), lineno=279, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=279, col_offset=14), 'getfirstmatchingheader', Load(), lineno=279, col_offset=14), [Name('name', Load(), lineno=279, col_offset=42)], [], None, None, lineno=279, col_offset=14), lineno=279, col_offset=8), If(UnaryOp(Not(), Name('lst', Load(), lineno=280, col_offset=15), lineno=280, col_offset=11), [Return(Name('None', Load(), lineno=281, col_offset=19), lineno=281, col_offset=12)], [], lineno=280, col_offset=8), Assign([Subscript(Name('lst', Load(), lineno=282, col_offset=8), Index(Num(0, lineno=282, col_offset=12)), Store(), lineno=282, col_offset=8)], Subscript(Subscript(Name('lst', Load(), lineno=282, col_offset=17), Index(Num(0, lineno=282, col_offset=21)), Load(), lineno=282, col_offset=17), Slice(BinOp(Call(Name('len', Load(), lineno=282, col_offset=24), [Name('name', Load(), lineno=282, col_offset=28)], [], None, None, lineno=282, col_offset=24), Add(), Num(1, lineno=282, col_offset=36), lineno=282, col_offset=24), None, None), Load(), lineno=282, col_offset=17), lineno=282, col_offset=8), Return(Call(Attribute(Str('', lineno=283, col_offset=15), 'join', Load(), lineno=283, col_offset=15), [Name('lst', Load(), lineno=283, col_offset=23)], [], None, None, lineno=283, col_offset=15), lineno=283, col_offset=8)], [], lineno=270, col_offset=4), FunctionDef('getheader', arguments([Name('self', Param(), lineno=285, col_offset=18), Name('name', Param(), lineno=285, col_offset=24), Name('default', Param(), lineno=285, col_offset=30)], None, None, [Name('None', Load(), lineno=285, col_offset=38)]), [Expr(Str("Get the header value for a name.\n\n        This is the normal interface: it returns a stripped version of the\n        header value for a given header name, or None if it doesn't exist.\n        This uses the dictionary version which finds the *last* such header.\n        ", lineno=291, col_offset=-1), lineno=291, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=292, col_offset=15), 'dict', Load(), lineno=292, col_offset=15), 'get', Load(), lineno=292, col_offset=15), [Call(Attribute(Name('name', Load(), lineno=292, col_offset=29), 'lower', Load(), lineno=292, col_offset=29), [], [], None, None, lineno=292, col_offset=29), Name('default', Load(), lineno=292, col_offset=43)], [], None, None, lineno=292, col_offset=15), lineno=292, col_offset=8)], [], lineno=285, col_offset=4), Assign([Name('get', Store(), lineno=293, col_offset=4)], Name('getheader', Load(), lineno=293, col_offset=10), lineno=293, col_offset=4), FunctionDef('getheaders', arguments([Name('self', Param(), lineno=295, col_offset=19), Name('name', Param(), lineno=295, col_offset=25)], None, None, []), [Expr(Str('Get all values for a header.\n\n        This returns a list of values for headers given more than once; each\n        value in the result list is stripped in the same way as the result of\n        getheader().  If the header is not given, return an empty list.\n        ', lineno=301, col_offset=-1), lineno=301, col_offset=-1), Assign([Name('result', Store(), lineno=302, col_offset=8)], List([], Load(), lineno=302, col_offset=17), lineno=302, col_offset=8), Assign([Name('current', Store(), lineno=303, col_offset=8)], Str('', lineno=303, col_offset=18), lineno=303, col_offset=8), Assign([Name('have_header', Store(), lineno=304, col_offset=8)], Num(0, lineno=304, col_offset=22), lineno=304, col_offset=8), For(Name('s', Store(), lineno=305, col_offset=12), Call(Attribute(Name('self', Load(), lineno=305, col_offset=17), 'getallmatchingheaders', Load(), lineno=305, col_offset=17), [Name('name', Load(), lineno=305, col_offset=44)], [], None, None, lineno=305, col_offset=17), [If(Call(Attribute(Subscript(Name('s', Load(), lineno=306, col_offset=15), Index(Num(0, lineno=306, col_offset=17)), Load(), lineno=306, col_offset=15), 'isspace', Load(), lineno=306, col_offset=15), [], [], None, None, lineno=306, col_offset=15), [If(Name('current', Load(), lineno=307, col_offset=19), [Assign([Name('current', Store(), lineno=308, col_offset=20)], BinOp(Str('%s\n %s', lineno=308, col_offset=30), Mod(), Tuple([Name('current', Load(), lineno=308, col_offset=43), Call(Attribute(Name('s', Load(), lineno=308, col_offset=52), 'strip', Load(), lineno=308, col_offset=52), [], [], None, None, lineno=308, col_offset=52)], Load(), lineno=308, col_offset=43), lineno=308, col_offset=30), lineno=308, col_offset=20)], [Assign([Name('current', Store(), lineno=310, col_offset=20)], Call(Attribute(Name('s', Load(), lineno=310, col_offset=30), 'strip', Load(), lineno=310, col_offset=30), [], [], None, None, lineno=310, col_offset=30), lineno=310, col_offset=20)], lineno=307, col_offset=16)], [If(Name('have_header', Load(), lineno=312, col_offset=19), [Expr(Call(Attribute(Name('result', Load(), lineno=313, col_offset=20), 'append', Load(), lineno=313, col_offset=20), [Name('current', Load(), lineno=313, col_offset=34)], [], None, None, lineno=313, col_offset=20), lineno=313, col_offset=20)], [], lineno=312, col_offset=16), Assign([Name('current', Store(), lineno=314, col_offset=16)], Call(Attribute(Subscript(Name('s', Load(), lineno=314, col_offset=26), Slice(BinOp(Call(Attribute(Name('s', Load(), lineno=314, col_offset=28), 'find', Load(), lineno=314, col_offset=28), [Str(':', lineno=314, col_offset=35)], [], None, None, lineno=314, col_offset=28), Add(), Num(1, lineno=314, col_offset=42), lineno=314, col_offset=28), None, None), Load(), lineno=314, col_offset=26), 'strip', Load(), lineno=314, col_offset=26), [], [], None, None, lineno=314, col_offset=26), lineno=314, col_offset=16), Assign([Name('have_header', Store(), lineno=315, col_offset=16)], Num(1, lineno=315, col_offset=30), lineno=315, col_offset=16)], lineno=306, col_offset=12)], [], lineno=305, col_offset=8), If(Name('have_header', Load(), lineno=316, col_offset=11), [Expr(Call(Attribute(Name('result', Load(), lineno=317, col_offset=12), 'append', Load(), lineno=317, col_offset=12), [Name('current', Load(), lineno=317, col_offset=26)], [], None, None, lineno=317, col_offset=12), lineno=317, col_offset=12)], [], lineno=316, col_offset=8), Return(Name('result', Load(), lineno=318, col_offset=15), lineno=318, col_offset=8)], [], lineno=295, col_offset=4), FunctionDef('getaddr', arguments([Name('self', Param(), lineno=320, col_offset=16), Name('name', Param(), lineno=320, col_offset=22)], None, None, []), [Expr(Str("Get a single address from a header, as a tuple.\n\n        An example return value:\n        ('Guido van Rossum', 'guido@cwi.nl')\n        ", lineno=325, col_offset=-1), lineno=325, col_offset=-1), Assign([Name('alist', Store(), lineno=327, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=327, col_offset=16), 'getaddrlist', Load(), lineno=327, col_offset=16), [Name('name', Load(), lineno=327, col_offset=33)], [], None, None, lineno=327, col_offset=16), lineno=327, col_offset=8), If(Name('alist', Load(), lineno=328, col_offset=11), [Return(Subscript(Name('alist', Load(), lineno=329, col_offset=19), Index(Num(0, lineno=329, col_offset=25)), Load(), lineno=329, col_offset=19), lineno=329, col_offset=12)], [Return(Tuple([Name('None', Load(), lineno=331, col_offset=20), Name('None', Load(), lineno=331, col_offset=26)], Load(), lineno=331, col_offset=20), lineno=331, col_offset=12)], lineno=328, col_offset=8)], [], lineno=320, col_offset=4), FunctionDef('getaddrlist', arguments([Name('self', Param(), lineno=333, col_offset=20), Name('name', Param(), lineno=333, col_offset=26)], None, None, []), [Expr(Str('Get a list of addresses from a header.\n\n        Retrieves a list of addresses from a header, where each address is a\n        tuple as returned by getaddr().  Scans all named headers, so it works\n        properly with multiple To: or Cc: headers for example.\n        ', lineno=339, col_offset=-1), lineno=339, col_offset=-1), Assign([Name('raw', Store(), lineno=340, col_offset=8)], List([], Load(), lineno=340, col_offset=14), lineno=340, col_offset=8), For(Name('h', Store(), lineno=341, col_offset=12), Call(Attribute(Name('self', Load(), lineno=341, col_offset=17), 'getallmatchingheaders', Load(), lineno=341, col_offset=17), [Name('name', Load(), lineno=341, col_offset=44)], [], None, None, lineno=341, col_offset=17), [If(Compare(Subscript(Name('h', Load(), lineno=342, col_offset=15), Index(Num(0, lineno=342, col_offset=17)), Load(), lineno=342, col_offset=15), [In()], [Str(' \t', lineno=342, col_offset=23)], lineno=342, col_offset=15), [Expr(Call(Attribute(Name('raw', Load(), lineno=343, col_offset=16), 'append', Load(), lineno=343, col_offset=16), [Name('h', Load(), lineno=343, col_offset=27)], [], None, None, lineno=343, col_offset=16), lineno=343, col_offset=16)], [If(Name('raw', Load(), lineno=345, col_offset=19), [Expr(Call(Attribute(Name('raw', Load(), lineno=346, col_offset=20), 'append', Load(), lineno=346, col_offset=20), [Str(', ', lineno=346, col_offset=31)], [], None, None, lineno=346, col_offset=20), lineno=346, col_offset=20)], [], lineno=345, col_offset=16), Assign([Name('i', Store(), lineno=347, col_offset=16)], Call(Attribute(Name('h', Load(), lineno=347, col_offset=20), 'find', Load(), lineno=347, col_offset=20), [Str(':', lineno=347, col_offset=27)], [], None, None, lineno=347, col_offset=20), lineno=347, col_offset=16), If(Compare(Name('i', Load(), lineno=348, col_offset=19), [Gt()], [Num(0, lineno=348, col_offset=23)], lineno=348, col_offset=19), [Assign([Name('addr', Store(), lineno=349, col_offset=20)], Subscript(Name('h', Load(), lineno=349, col_offset=27), Slice(BinOp(Name('i', Load(), lineno=349, col_offset=29), Add(), Num(1, lineno=349, col_offset=31), lineno=349, col_offset=29), None, None), Load(), lineno=349, col_offset=27), lineno=349, col_offset=20)], [], lineno=348, col_offset=16), Expr(Call(Attribute(Name('raw', Load(), lineno=350, col_offset=16), 'append', Load(), lineno=350, col_offset=16), [Name('addr', Load(), lineno=350, col_offset=27)], [], None, None, lineno=350, col_offset=16), lineno=350, col_offset=16)], lineno=342, col_offset=12)], [], lineno=341, col_offset=8), Assign([Name('alladdrs', Store(), lineno=351, col_offset=8)], Call(Attribute(Str('', lineno=351, col_offset=19), 'join', Load(), lineno=351, col_offset=19), [Name('raw', Load(), lineno=351, col_offset=27)], [], None, None, lineno=351, col_offset=19), lineno=351, col_offset=8), Assign([Name('a', Store(), lineno=352, col_offset=8)], Call(Name('AddressList', Load(), lineno=352, col_offset=12), [Name('alladdrs', Load(), lineno=352, col_offset=24)], [], None, None, lineno=352, col_offset=12), lineno=352, col_offset=8), Return(Attribute(Name('a', Load(), lineno=353, col_offset=15), 'addresslist', Load(), lineno=353, col_offset=15), lineno=353, col_offset=8)], [], lineno=333, col_offset=4), FunctionDef('getdate', arguments([Name('self', Param(), lineno=355, col_offset=16), Name('name', Param(), lineno=355, col_offset=22)], None, None, []), [Expr(Str('Retrieve a date field from a header.\n\n        Retrieves a date field from the named header, returning a tuple\n        compatible with time.mktime().\n        ', lineno=360, col_offset=-1), lineno=360, col_offset=-1), TryExcept([Assign([Name('data', Store(), lineno=362, col_offset=12)], Subscript(Name('self', Load(), lineno=362, col_offset=19), Index(Name('name', Load(), lineno=362, col_offset=24)), Load(), lineno=362, col_offset=19), lineno=362, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=363, col_offset=15), None, [Return(Name('None', Load(), lineno=364, col_offset=19), lineno=364, col_offset=12)], lineno=363, col_offset=8)], [], lineno=361, col_offset=8), Return(Call(Name('parsedate', Load(), lineno=365, col_offset=15), [Name('data', Load(), lineno=365, col_offset=25)], [], None, None, lineno=365, col_offset=15), lineno=365, col_offset=8)], [], lineno=355, col_offset=4), FunctionDef('getdate_tz', arguments([Name('self', Param(), lineno=367, col_offset=19), Name('name', Param(), lineno=367, col_offset=25)], None, None, []), [Expr(Str("Retrieve a date field from a header as a 10-tuple.\n\n        The first 9 elements make up a tuple compatible with time.mktime(),\n        and the 10th is the offset of the poster's time zone from GMT/UTC.\n        ", lineno=372, col_offset=-1), lineno=372, col_offset=-1), TryExcept([Assign([Name('data', Store(), lineno=374, col_offset=12)], Subscript(Name('self', Load(), lineno=374, col_offset=19), Index(Name('name', Load(), lineno=374, col_offset=24)), Load(), lineno=374, col_offset=19), lineno=374, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=375, col_offset=15), None, [Return(Name('None', Load(), lineno=376, col_offset=19), lineno=376, col_offset=12)], lineno=375, col_offset=8)], [], lineno=373, col_offset=8), Return(Call(Name('parsedate_tz', Load(), lineno=377, col_offset=15), [Name('data', Load(), lineno=377, col_offset=28)], [], None, None, lineno=377, col_offset=15), lineno=377, col_offset=8)], [], lineno=367, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=382, col_offset=16)], None, None, []), [Expr(Str('Get the number of headers in a message.', lineno=383, col_offset=8), lineno=383, col_offset=8), Return(Call(Name('len', Load(), lineno=384, col_offset=15), [Attribute(Name('self', Load(), lineno=384, col_offset=19), 'dict', Load(), lineno=384, col_offset=19)], [], None, None, lineno=384, col_offset=15), lineno=384, col_offset=8)], [], lineno=382, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=386, col_offset=20), Name('name', Param(), lineno=386, col_offset=26)], None, None, []), [Expr(Str('Get a specific header, as from a dictionary.', lineno=387, col_offset=8), lineno=387, col_offset=8), Return(Subscript(Attribute(Name('self', Load(), lineno=388, col_offset=15), 'dict', Load(), lineno=388, col_offset=15), Index(Call(Attribute(Name('name', Load(), lineno=388, col_offset=25), 'lower', Load(), lineno=388, col_offset=25), [], [], None, None, lineno=388, col_offset=25)), Load(), lineno=388, col_offset=15), lineno=388, col_offset=8)], [], lineno=386, col_offset=4), FunctionDef('__setitem__', arguments([Name('self', Param(), lineno=390, col_offset=20), Name('name', Param(), lineno=390, col_offset=26), Name('value', Param(), lineno=390, col_offset=32)], None, None, []), [Expr(Str('Set the value of a header.\n\n        Note: This is not a perfect inversion of __getitem__, because any\n        changed headers get stuck at the end of the raw-headers list rather\n        than where the altered header was.\n        ', lineno=396, col_offset=-1), lineno=396, col_offset=-1), Delete([Subscript(Name('self', Load(), lineno=397, col_offset=12), Index(Name('name', Load(), lineno=397, col_offset=17)), Del(), lineno=397, col_offset=12)], lineno=397, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=398, col_offset=8), 'dict', Load(), lineno=398, col_offset=8), Index(Call(Attribute(Name('name', Load(), lineno=398, col_offset=18), 'lower', Load(), lineno=398, col_offset=18), [], [], None, None, lineno=398, col_offset=18)), Store(), lineno=398, col_offset=8)], Name('value', Load(), lineno=398, col_offset=34), lineno=398, col_offset=8), Assign([Name('text', Store(), lineno=399, col_offset=8)], BinOp(BinOp(Name('name', Load(), lineno=399, col_offset=15), Add(), Str(': ', lineno=399, col_offset=22), lineno=399, col_offset=15), Add(), Name('value', Load(), lineno=399, col_offset=29), lineno=399, col_offset=27), lineno=399, col_offset=8), For(Name('line', Store(), lineno=400, col_offset=12), Call(Attribute(Name('text', Load(), lineno=400, col_offset=20), 'split', Load(), lineno=400, col_offset=20), [Str('\n', lineno=400, col_offset=31)], [], None, None, lineno=400, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=401, col_offset=12), 'headers', Load(), lineno=401, col_offset=12), 'append', Load(), lineno=401, col_offset=12), [BinOp(Name('line', Load(), lineno=401, col_offset=32), Add(), Str('\n', lineno=401, col_offset=39), lineno=401, col_offset=32)], [], None, None, lineno=401, col_offset=12), lineno=401, col_offset=12)], [], lineno=400, col_offset=8)], [], lineno=390, col_offset=4), FunctionDef('__delitem__', arguments([Name('self', Param(), lineno=403, col_offset=20), Name('name', Param(), lineno=403, col_offset=26)], None, None, []), [Expr(Str('Delete all occurrences of a specific header, if it is present.', lineno=404, col_offset=8), lineno=404, col_offset=8), Assign([Name('name', Store(), lineno=405, col_offset=8)], Call(Attribute(Name('name', Load(), lineno=405, col_offset=15), 'lower', Load(), lineno=405, col_offset=15), [], [], None, None, lineno=405, col_offset=15), lineno=405, col_offset=8), If(UnaryOp(Not(), Compare(Name('name', Load(), lineno=406, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=406, col_offset=23), 'dict', Load(), lineno=406, col_offset=23)], lineno=406, col_offset=15), lineno=406, col_offset=11), [Return(None, lineno=407, col_offset=12)], [], lineno=406, col_offset=8), Delete([Subscript(Attribute(Name('self', Load(), lineno=408, col_offset=12), 'dict', Load(), lineno=408, col_offset=12), Index(Name('name', Load(), lineno=408, col_offset=22)), Del(), lineno=408, col_offset=12)], lineno=408, col_offset=8), Assign([Name('name', Store(), lineno=409, col_offset=8)], BinOp(Name('name', Load(), lineno=409, col_offset=15), Add(), Str(':', lineno=409, col_offset=22), lineno=409, col_offset=15), lineno=409, col_offset=8), Assign([Name('n', Store(), lineno=410, col_offset=8)], Call(Name('len', Load(), lineno=410, col_offset=12), [Name('name', Load(), lineno=410, col_offset=16)], [], None, None, lineno=410, col_offset=12), lineno=410, col_offset=8), Assign([Name('lst', Store(), lineno=411, col_offset=8)], List([], Load(), lineno=411, col_offset=14), lineno=411, col_offset=8), Assign([Name('hit', Store(), lineno=412, col_offset=8)], Num(0, lineno=412, col_offset=14), lineno=412, col_offset=8), For(Name('i', Store(), lineno=413, col_offset=12), Call(Name('range', Load(), lineno=413, col_offset=17), [Call(Name('len', Load(), lineno=413, col_offset=23), [Attribute(Name('self', Load(), lineno=413, col_offset=27), 'headers', Load(), lineno=413, col_offset=27)], [], None, None, lineno=413, col_offset=23)], [], None, None, lineno=413, col_offset=17), [Assign([Name('line', Store(), lineno=414, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=414, col_offset=19), 'headers', Load(), lineno=414, col_offset=19), Index(Name('i', Load(), lineno=414, col_offset=32)), Load(), lineno=414, col_offset=19), lineno=414, col_offset=12), If(Compare(Call(Attribute(Subscript(Name('line', Load(), lineno=415, col_offset=15), Slice(None, Name('n', Load(), lineno=415, col_offset=21), None), Load(), lineno=415, col_offset=15), 'lower', Load(), lineno=415, col_offset=15), [], [], None, None, lineno=415, col_offset=15), [Eq()], [Name('name', Load(), lineno=415, col_offset=35)], lineno=415, col_offset=15), [Assign([Name('hit', Store(), lineno=416, col_offset=16)], Num(1, lineno=416, col_offset=22), lineno=416, col_offset=16)], [If(UnaryOp(Not(), Call(Attribute(Subscript(Name('line', Load(), lineno=417, col_offset=21), Slice(None, Num(1, lineno=417, col_offset=27), None), Load(), lineno=417, col_offset=21), 'isspace', Load(), lineno=417, col_offset=21), [], [], None, None, lineno=417, col_offset=21), lineno=417, col_offset=17), [Assign([Name('hit', Store(), lineno=418, col_offset=16)], Num(0, lineno=418, col_offset=22), lineno=418, col_offset=16)], [], lineno=417, col_offset=17)], lineno=415, col_offset=12), If(Name('hit', Load(), lineno=419, col_offset=15), [Expr(Call(Attribute(Name('lst', Load(), lineno=420, col_offset=16), 'append', Load(), lineno=420, col_offset=16), [Name('i', Load(), lineno=420, col_offset=27)], [], None, None, lineno=420, col_offset=16), lineno=420, col_offset=16)], [], lineno=419, col_offset=12)], [], lineno=413, col_offset=8), For(Name('i', Store(), lineno=421, col_offset=12), Call(Name('reversed', Load(), lineno=421, col_offset=17), [Name('lst', Load(), lineno=421, col_offset=26)], [], None, None, lineno=421, col_offset=17), [Delete([Subscript(Attribute(Name('self', Load(), lineno=422, col_offset=16), 'headers', Load(), lineno=422, col_offset=16), Index(Name('i', Load(), lineno=422, col_offset=29)), Del(), lineno=422, col_offset=16)], lineno=422, col_offset=12)], [], lineno=421, col_offset=8)], [], lineno=403, col_offset=4), FunctionDef('setdefault', arguments([Name('self', Param(), lineno=424, col_offset=19), Name('name', Param(), lineno=424, col_offset=25), Name('default', Param(), lineno=424, col_offset=31)], None, None, [Str('', lineno=424, col_offset=39)]), [Assign([Name('lowername', Store(), lineno=425, col_offset=8)], Call(Attribute(Name('name', Load(), lineno=425, col_offset=20), 'lower', Load(), lineno=425, col_offset=20), [], [], None, None, lineno=425, col_offset=20), lineno=425, col_offset=8), If(Compare(Name('lowername', Load(), lineno=426, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=426, col_offset=24), 'dict', Load(), lineno=426, col_offset=24)], lineno=426, col_offset=11), [Return(Subscript(Attribute(Name('self', Load(), lineno=427, col_offset=19), 'dict', Load(), lineno=427, col_offset=19), Index(Name('lowername', Load(), lineno=427, col_offset=29)), Load(), lineno=427, col_offset=19), lineno=427, col_offset=12)], [Assign([Name('text', Store(), lineno=429, col_offset=12)], BinOp(BinOp(Name('name', Load(), lineno=429, col_offset=19), Add(), Str(': ', lineno=429, col_offset=26), lineno=429, col_offset=19), Add(), Name('default', Load(), lineno=429, col_offset=33), lineno=429, col_offset=31), lineno=429, col_offset=12), For(Name('line', Store(), lineno=430, col_offset=16), Call(Attribute(Name('text', Load(), lineno=430, col_offset=24), 'split', Load(), lineno=430, col_offset=24), [Str('\n', lineno=430, col_offset=35)], [], None, None, lineno=430, col_offset=24), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=431, col_offset=16), 'headers', Load(), lineno=431, col_offset=16), 'append', Load(), lineno=431, col_offset=16), [BinOp(Name('line', Load(), lineno=431, col_offset=36), Add(), Str('\n', lineno=431, col_offset=43), lineno=431, col_offset=36)], [], None, None, lineno=431, col_offset=16), lineno=431, col_offset=16)], [], lineno=430, col_offset=12), Assign([Subscript(Attribute(Name('self', Load(), lineno=432, col_offset=12), 'dict', Load(), lineno=432, col_offset=12), Index(Name('lowername', Load(), lineno=432, col_offset=22)), Store(), lineno=432, col_offset=12)], Name('default', Load(), lineno=432, col_offset=35), lineno=432, col_offset=12), Return(Name('default', Load(), lineno=433, col_offset=19), lineno=433, col_offset=12)], lineno=426, col_offset=8)], [], lineno=424, col_offset=4), FunctionDef('has_key', arguments([Name('self', Param(), lineno=435, col_offset=16), Name('name', Param(), lineno=435, col_offset=22)], None, None, []), [Expr(Str('Determine whether a message contains the named header.', lineno=436, col_offset=8), lineno=436, col_offset=8), Return(Compare(Call(Attribute(Name('name', Load(), lineno=437, col_offset=15), 'lower', Load(), lineno=437, col_offset=15), [], [], None, None, lineno=437, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=437, col_offset=31), 'dict', Load(), lineno=437, col_offset=31)], lineno=437, col_offset=15), lineno=437, col_offset=8)], [], lineno=435, col_offset=4), FunctionDef('__contains__', arguments([Name('self', Param(), lineno=439, col_offset=21), Name('name', Param(), lineno=439, col_offset=27)], None, None, []), [Expr(Str('Determine whether a message contains the named header.', lineno=440, col_offset=8), lineno=440, col_offset=8), Return(Compare(Call(Attribute(Name('name', Load(), lineno=441, col_offset=15), 'lower', Load(), lineno=441, col_offset=15), [], [], None, None, lineno=441, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=441, col_offset=31), 'dict', Load(), lineno=441, col_offset=31)], lineno=441, col_offset=15), lineno=441, col_offset=8)], [], lineno=439, col_offset=4), FunctionDef('__iter__', arguments([Name('self', Param(), lineno=443, col_offset=17)], None, None, []), [Return(Call(Name('iter', Load(), lineno=444, col_offset=15), [Attribute(Name('self', Load(), lineno=444, col_offset=20), 'dict', Load(), lineno=444, col_offset=20)], [], None, None, lineno=444, col_offset=15), lineno=444, col_offset=8)], [], lineno=443, col_offset=4), FunctionDef('keys', arguments([Name('self', Param(), lineno=446, col_offset=13)], None, None, []), [Expr(Str("Get all of a message's header field names.", lineno=447, col_offset=8), lineno=447, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=448, col_offset=15), 'dict', Load(), lineno=448, col_offset=15), 'keys', Load(), lineno=448, col_offset=15), [], [], None, None, lineno=448, col_offset=15), lineno=448, col_offset=8)], [], lineno=446, col_offset=4), FunctionDef('values', arguments([Name('self', Param(), lineno=450, col_offset=15)], None, None, []), [Expr(Str("Get all of a message's header field values.", lineno=451, col_offset=8), lineno=451, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=452, col_offset=15), 'dict', Load(), lineno=452, col_offset=15), 'values', Load(), lineno=452, col_offset=15), [], [], None, None, lineno=452, col_offset=15), lineno=452, col_offset=8)], [], lineno=450, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=454, col_offset=14)], None, None, []), [Expr(Str("Get all of a message's headers.\n\n        Returns a list of name, value tuples.\n        ", lineno=458, col_offset=-1), lineno=458, col_offset=-1), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=459, col_offset=15), 'dict', Load(), lineno=459, col_offset=15), 'items', Load(), lineno=459, col_offset=15), [], [], None, None, lineno=459, col_offset=15), lineno=459, col_offset=8)], [], lineno=454, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=461, col_offset=16)], None, None, []), [Return(Call(Attribute(Str('', lineno=462, col_offset=15), 'join', Load(), lineno=462, col_offset=15), [Attribute(Name('self', Load(), lineno=462, col_offset=23), 'headers', Load(), lineno=462, col_offset=23)], [], None, None, lineno=462, col_offset=15), lineno=462, col_offset=8)], [], lineno=461, col_offset=4)], [], lineno=85, col_offset=0), FunctionDef('unquote', arguments([Name('s', Param(), lineno=472, col_offset=12)], None, None, []), [Expr(Str('Remove quotes from a string.', lineno=473, col_offset=4), lineno=473, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=474, col_offset=7), [Name('s', Load(), lineno=474, col_offset=11)], [], None, None, lineno=474, col_offset=7), [Gt()], [Num(1, lineno=474, col_offset=16)], lineno=474, col_offset=7), [If(BoolOp(And(), [Call(Attribute(Name('s', Load(), lineno=475, col_offset=11), 'startswith', Load(), lineno=475, col_offset=11), [Str('"', lineno=475, col_offset=24)], [], None, None, lineno=475, col_offset=11), Call(Attribute(Name('s', Load(), lineno=475, col_offset=33), 'endswith', Load(), lineno=475, col_offset=33), [Str('"', lineno=475, col_offset=44)], [], None, None, lineno=475, col_offset=33)], lineno=475, col_offset=11), [Return(Call(Attribute(Call(Attribute(Subscript(Name('s', Load(), lineno=476, col_offset=19), Slice(Num(1, lineno=476, col_offset=21), Num(-1, lineno=476, col_offset=24), None), Load(), lineno=476, col_offset=19), 'replace', Load(), lineno=476, col_offset=19), [Str('\\\\', lineno=476, col_offset=35), Str('\\', lineno=476, col_offset=43)], [], None, None, lineno=476, col_offset=19), 'replace', Load(), lineno=476, col_offset=19), [Str('\\"', lineno=476, col_offset=57), Str('"', lineno=476, col_offset=64)], [], None, None, lineno=476, col_offset=19), lineno=476, col_offset=12)], [], lineno=475, col_offset=8), If(BoolOp(And(), [Call(Attribute(Name('s', Load(), lineno=477, col_offset=11), 'startswith', Load(), lineno=477, col_offset=11), [Str('<', lineno=477, col_offset=24)], [], None, None, lineno=477, col_offset=11), Call(Attribute(Name('s', Load(), lineno=477, col_offset=33), 'endswith', Load(), lineno=477, col_offset=33), [Str('>', lineno=477, col_offset=44)], [], None, None, lineno=477, col_offset=33)], lineno=477, col_offset=11), [Return(Subscript(Name('s', Load(), lineno=478, col_offset=19), Slice(Num(1, lineno=478, col_offset=21), Num(-1, lineno=478, col_offset=24), None), Load(), lineno=478, col_offset=19), lineno=478, col_offset=12)], [], lineno=477, col_offset=8)], [], lineno=474, col_offset=4), Return(Name('s', Load(), lineno=479, col_offset=11), lineno=479, col_offset=4)], [], lineno=472, col_offset=0), FunctionDef('quote', arguments([Name('s', Param(), lineno=482, col_offset=10)], None, None, []), [Expr(Str('Add quotes around a string.', lineno=483, col_offset=4), lineno=483, col_offset=4), Return(Call(Attribute(Call(Attribute(Name('s', Load(), lineno=484, col_offset=11), 'replace', Load(), lineno=484, col_offset=11), [Str('\\', lineno=484, col_offset=21), Str('\\\\', lineno=484, col_offset=27)], [], None, None, lineno=484, col_offset=11), 'replace', Load(), lineno=484, col_offset=11), [Str('"', lineno=484, col_offset=43), Str('\\"', lineno=484, col_offset=48)], [], None, None, lineno=484, col_offset=11), lineno=484, col_offset=4)], [], lineno=482, col_offset=0), FunctionDef('parseaddr', arguments([Name('address', Param(), lineno=487, col_offset=14)], None, None, []), [Expr(Str('Parse an address into a (realname, mailaddr) tuple.', lineno=488, col_offset=4), lineno=488, col_offset=4), Assign([Name('a', Store(), lineno=489, col_offset=4)], Call(Name('AddressList', Load(), lineno=489, col_offset=8), [Name('address', Load(), lineno=489, col_offset=20)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=4), Assign([Name('lst', Store(), lineno=490, col_offset=4)], Attribute(Name('a', Load(), lineno=490, col_offset=10), 'addresslist', Load(), lineno=490, col_offset=10), lineno=490, col_offset=4), If(UnaryOp(Not(), Name('lst', Load(), lineno=491, col_offset=11), lineno=491, col_offset=7), [Return(Tuple([Name('None', Load(), lineno=492, col_offset=16), Name('None', Load(), lineno=492, col_offset=22)], Load(), lineno=492, col_offset=16), lineno=492, col_offset=8)], [], lineno=491, col_offset=4), Return(Subscript(Name('lst', Load(), lineno=493, col_offset=11), Index(Num(0, lineno=493, col_offset=15)), Load(), lineno=493, col_offset=11), lineno=493, col_offset=4)], [], lineno=487, col_offset=0), ClassDef('AddrlistClass', [], [Expr(Str('Address parser class by Ben Escoto.\n\n    To understand what this class does, it helps to have a copy of\n    RFC 2822 in front of you.\n\n    http://www.faqs.org/rfcs/rfc2822.html\n\n    Note: this class interface is deprecated and may be removed in the future.\n    Use rfc822.AddressList instead.\n    ', lineno=506, col_offset=-1), lineno=506, col_offset=-1), FunctionDef('__init__', arguments([Name('self', Param(), lineno=508, col_offset=17), Name('field', Param(), lineno=508, col_offset=23)], None, None, []), [Expr(Str("Initialize a new instance.\n\n        `field' is an unparsed address header field, containing one or more\n        addresses.\n        ", lineno=513, col_offset=-1), lineno=513, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=514, col_offset=8), 'specials', Store(), lineno=514, col_offset=8)], Str('()<>@,:;."[]', lineno=514, col_offset=24), lineno=514, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=515, col_offset=8), 'pos', Store(), lineno=515, col_offset=8)], Num(0, lineno=515, col_offset=19), lineno=515, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=516, col_offset=8), 'LWS', Store(), lineno=516, col_offset=8)], Str(' \t', lineno=516, col_offset=19), lineno=516, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=517, col_offset=8), 'CR', Store(), lineno=517, col_offset=8)], Str('\r\n', lineno=517, col_offset=18), lineno=517, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=518, col_offset=8), 'atomends', Store(), lineno=518, col_offset=8)], BinOp(BinOp(Attribute(Name('self', Load(), lineno=518, col_offset=24), 'specials', Load(), lineno=518, col_offset=24), Add(), Attribute(Name('self', Load(), lineno=518, col_offset=40), 'LWS', Load(), lineno=518, col_offset=40), lineno=518, col_offset=24), Add(), Attribute(Name('self', Load(), lineno=518, col_offset=51), 'CR', Load(), lineno=518, col_offset=51), lineno=518, col_offset=49), lineno=518, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=522, col_offset=8), 'phraseends', Store(), lineno=522, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=522, col_offset=26), 'atomends', Load(), lineno=522, col_offset=26), 'replace', Load(), lineno=522, col_offset=26), [Str('.', lineno=522, col_offset=48), Str('', lineno=522, col_offset=53)], [], None, None, lineno=522, col_offset=26), lineno=522, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=523, col_offset=8), 'field', Store(), lineno=523, col_offset=8)], Name('field', Load(), lineno=523, col_offset=21), lineno=523, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=524, col_offset=8), 'commentlist', Store(), lineno=524, col_offset=8)], List([], Load(), lineno=524, col_offset=27), lineno=524, col_offset=8)], [], lineno=508, col_offset=4), FunctionDef('gotonext', arguments([Name('self', Param(), lineno=526, col_offset=17)], None, None, []), [Expr(Str('Parse up to the start of the next address.', lineno=527, col_offset=8), lineno=527, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=528, col_offset=14), 'pos', Load(), lineno=528, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=528, col_offset=25), [Attribute(Name('self', Load(), lineno=528, col_offset=29), 'field', Load(), lineno=528, col_offset=29)], [], None, None, lineno=528, col_offset=25)], lineno=528, col_offset=14), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=529, col_offset=15), 'field', Load(), lineno=529, col_offset=15), Index(Attribute(Name('self', Load(), lineno=529, col_offset=26), 'pos', Load(), lineno=529, col_offset=26)), Load(), lineno=529, col_offset=15), [In()], [BinOp(Attribute(Name('self', Load(), lineno=529, col_offset=39), 'LWS', Load(), lineno=529, col_offset=39), Add(), Str('\n\r', lineno=529, col_offset=50), lineno=529, col_offset=39)], lineno=529, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=530, col_offset=16), 'pos', Store(), lineno=530, col_offset=16)], BinOp(Attribute(Name('self', Load(), lineno=530, col_offset=27), 'pos', Load(), lineno=530, col_offset=27), Add(), Num(1, lineno=530, col_offset=38), lineno=530, col_offset=27), lineno=530, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=531, col_offset=17), 'field', Load(), lineno=531, col_offset=17), Index(Attribute(Name('self', Load(), lineno=531, col_offset=28), 'pos', Load(), lineno=531, col_offset=28)), Load(), lineno=531, col_offset=17), [Eq()], [Str('(', lineno=531, col_offset=41)], lineno=531, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=532, col_offset=16), 'commentlist', Load(), lineno=532, col_offset=16), 'append', Load(), lineno=532, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=532, col_offset=40), 'getcomment', Load(), lineno=532, col_offset=40), [], [], None, None, lineno=532, col_offset=40)], [], None, None, lineno=532, col_offset=16), lineno=532, col_offset=16)], [Break( lineno=533, col_offset=18)], lineno=531, col_offset=17)], lineno=529, col_offset=12)], [], lineno=528, col_offset=8)], [], lineno=526, col_offset=4), FunctionDef('getaddrlist', arguments([Name('self', Param(), lineno=535, col_offset=20)], None, None, []), [Expr(Str('Parse all addresses.\n\n        Returns a list containing all of the addresses.\n        ', lineno=539, col_offset=-1), lineno=539, col_offset=-1), Assign([Name('result', Store(), lineno=540, col_offset=8)], List([], Load(), lineno=540, col_offset=17), lineno=540, col_offset=8), Assign([Name('ad', Store(), lineno=541, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=541, col_offset=13), 'getaddress', Load(), lineno=541, col_offset=13), [], [], None, None, lineno=541, col_offset=13), lineno=541, col_offset=8), While(Name('ad', Load(), lineno=542, col_offset=14), [AugAssign(Name('result', Store(), lineno=543, col_offset=12), Add(), Name('ad', Load(), lineno=543, col_offset=22), lineno=543, col_offset=12), Assign([Name('ad', Store(), lineno=544, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=544, col_offset=17), 'getaddress', Load(), lineno=544, col_offset=17), [], [], None, None, lineno=544, col_offset=17), lineno=544, col_offset=12)], [], lineno=542, col_offset=8), Return(Name('result', Load(), lineno=545, col_offset=15), lineno=545, col_offset=8)], [], lineno=535, col_offset=4), FunctionDef('getaddress', arguments([Name('self', Param(), lineno=547, col_offset=19)], None, None, []), [Expr(Str('Parse the next address.', lineno=548, col_offset=8), lineno=548, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=549, col_offset=8), 'commentlist', Store(), lineno=549, col_offset=8)], List([], Load(), lineno=549, col_offset=27), lineno=549, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=550, col_offset=8), 'gotonext', Load(), lineno=550, col_offset=8), [], [], None, None, lineno=550, col_offset=8), lineno=550, col_offset=8), Assign([Name('oldpos', Store(), lineno=552, col_offset=8)], Attribute(Name('self', Load(), lineno=552, col_offset=17), 'pos', Load(), lineno=552, col_offset=17), lineno=552, col_offset=8), Assign([Name('oldcl', Store(), lineno=553, col_offset=8)], Attribute(Name('self', Load(), lineno=553, col_offset=16), 'commentlist', Load(), lineno=553, col_offset=16), lineno=553, col_offset=8), Assign([Name('plist', Store(), lineno=554, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=554, col_offset=16), 'getphraselist', Load(), lineno=554, col_offset=16), [], [], None, None, lineno=554, col_offset=16), lineno=554, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=556, col_offset=8), 'gotonext', Load(), lineno=556, col_offset=8), [], [], None, None, lineno=556, col_offset=8), lineno=556, col_offset=8), Assign([Name('returnlist', Store(), lineno=557, col_offset=8)], List([], Load(), lineno=557, col_offset=21), lineno=557, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=559, col_offset=11), 'pos', Load(), lineno=559, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=559, col_offset=23), [Attribute(Name('self', Load(), lineno=559, col_offset=27), 'field', Load(), lineno=559, col_offset=27)], [], None, None, lineno=559, col_offset=23)], lineno=559, col_offset=11), [If(Name('plist', Load(), lineno=561, col_offset=15), [Assign([Name('returnlist', Store(), lineno=562, col_offset=16)], List([Tuple([Call(Attribute(Str(' ', lineno=562, col_offset=31), 'join', Load(), lineno=562, col_offset=31), [Attribute(Name('self', Load(), lineno=562, col_offset=40), 'commentlist', Load(), lineno=562, col_offset=40)], [], None, None, lineno=562, col_offset=31), Subscript(Name('plist', Load(), lineno=562, col_offset=59), Index(Num(0, lineno=562, col_offset=65)), Load(), lineno=562, col_offset=59)], Load(), lineno=562, col_offset=31)], Load(), lineno=562, col_offset=29), lineno=562, col_offset=16)], [], lineno=561, col_offset=12)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=564, col_offset=13), 'field', Load(), lineno=564, col_offset=13), Index(Attribute(Name('self', Load(), lineno=564, col_offset=24), 'pos', Load(), lineno=564, col_offset=24)), Load(), lineno=564, col_offset=13), [In()], [Str('.@', lineno=564, col_offset=37)], lineno=564, col_offset=13), [Assign([Attribute(Name('self', Load(), lineno=567, col_offset=12), 'pos', Store(), lineno=567, col_offset=12)], Name('oldpos', Load(), lineno=567, col_offset=23), lineno=567, col_offset=12), Assign([Attribute(Name('self', Load(), lineno=568, col_offset=12), 'commentlist', Store(), lineno=568, col_offset=12)], Name('oldcl', Load(), lineno=568, col_offset=31), lineno=568, col_offset=12), Assign([Name('addrspec', Store(), lineno=569, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=569, col_offset=23), 'getaddrspec', Load(), lineno=569, col_offset=23), [], [], None, None, lineno=569, col_offset=23), lineno=569, col_offset=12), Assign([Name('returnlist', Store(), lineno=570, col_offset=12)], List([Tuple([Call(Attribute(Str(' ', lineno=570, col_offset=27), 'join', Load(), lineno=570, col_offset=27), [Attribute(Name('self', Load(), lineno=570, col_offset=36), 'commentlist', Load(), lineno=570, col_offset=36)], [], None, None, lineno=570, col_offset=27), Name('addrspec', Load(), lineno=570, col_offset=55)], Load(), lineno=570, col_offset=27)], Load(), lineno=570, col_offset=25), lineno=570, col_offset=12)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=572, col_offset=13), 'field', Load(), lineno=572, col_offset=13), Index(Attribute(Name('self', Load(), lineno=572, col_offset=24), 'pos', Load(), lineno=572, col_offset=24)), Load(), lineno=572, col_offset=13), [Eq()], [Str(':', lineno=572, col_offset=37)], lineno=572, col_offset=13), [Assign([Name('returnlist', Store(), lineno=574, col_offset=12)], List([], Load(), lineno=574, col_offset=25), lineno=574, col_offset=12), Assign([Name('fieldlen', Store(), lineno=576, col_offset=12)], Call(Name('len', Load(), lineno=576, col_offset=23), [Attribute(Name('self', Load(), lineno=576, col_offset=27), 'field', Load(), lineno=576, col_offset=27)], [], None, None, lineno=576, col_offset=23), lineno=576, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=577, col_offset=12), 'pos', Store(), lineno=577, col_offset=12), Add(), Num(1, lineno=577, col_offset=24), lineno=577, col_offset=12), While(Compare(Attribute(Name('self', Load(), lineno=578, col_offset=18), 'pos', Load(), lineno=578, col_offset=18), [Lt()], [Call(Name('len', Load(), lineno=578, col_offset=29), [Attribute(Name('self', Load(), lineno=578, col_offset=33), 'field', Load(), lineno=578, col_offset=33)], [], None, None, lineno=578, col_offset=29)], lineno=578, col_offset=18), [Expr(Call(Attribute(Name('self', Load(), lineno=579, col_offset=16), 'gotonext', Load(), lineno=579, col_offset=16), [], [], None, None, lineno=579, col_offset=16), lineno=579, col_offset=16), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=580, col_offset=19), 'pos', Load(), lineno=580, col_offset=19), [Lt()], [Name('fieldlen', Load(), lineno=580, col_offset=30)], lineno=580, col_offset=19), Compare(Subscript(Attribute(Name('self', Load(), lineno=580, col_offset=43), 'field', Load(), lineno=580, col_offset=43), Index(Attribute(Name('self', Load(), lineno=580, col_offset=54), 'pos', Load(), lineno=580, col_offset=54)), Load(), lineno=580, col_offset=43), [Eq()], [Str(';', lineno=580, col_offset=67)], lineno=580, col_offset=43)], lineno=580, col_offset=19), [AugAssign(Attribute(Name('self', Load(), lineno=581, col_offset=20), 'pos', Store(), lineno=581, col_offset=20), Add(), Num(1, lineno=581, col_offset=32), lineno=581, col_offset=20), Break( lineno=582, col_offset=20)], [], lineno=580, col_offset=16), Assign([Name('returnlist', Store(), lineno=583, col_offset=16)], BinOp(Name('returnlist', Load(), lineno=583, col_offset=29), Add(), Call(Attribute(Name('self', Load(), lineno=583, col_offset=42), 'getaddress', Load(), lineno=583, col_offset=42), [], [], None, None, lineno=583, col_offset=42), lineno=583, col_offset=29), lineno=583, col_offset=16)], [], lineno=578, col_offset=12)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=585, col_offset=13), 'field', Load(), lineno=585, col_offset=13), Index(Attribute(Name('self', Load(), lineno=585, col_offset=24), 'pos', Load(), lineno=585, col_offset=24)), Load(), lineno=585, col_offset=13), [Eq()], [Str('<', lineno=585, col_offset=37)], lineno=585, col_offset=13), [Assign([Name('routeaddr', Store(), lineno=587, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=587, col_offset=24), 'getrouteaddr', Load(), lineno=587, col_offset=24), [], [], None, None, lineno=587, col_offset=24), lineno=587, col_offset=12), If(Attribute(Name('self', Load(), lineno=589, col_offset=15), 'commentlist', Load(), lineno=589, col_offset=15), [Assign([Name('returnlist', Store(), lineno=590, col_offset=16)], List([Tuple([BinOp(BinOp(BinOp(Call(Attribute(Str(' ', lineno=590, col_offset=31), 'join', Load(), lineno=590, col_offset=31), [Name('plist', Load(), lineno=590, col_offset=40)], [], None, None, lineno=590, col_offset=31), Add(), Str(' (', lineno=590, col_offset=49), lineno=590, col_offset=31), Add(), Call(Attribute(Str(' ', lineno=591, col_offset=25), 'join', Load(), lineno=591, col_offset=25), [Attribute(Name('self', Load(), lineno=591, col_offset=34), 'commentlist', Load(), lineno=591, col_offset=34)], [], None, None, lineno=591, col_offset=25), lineno=590, col_offset=54), Add(), Str(')', lineno=591, col_offset=54), lineno=591, col_offset=52), Name('routeaddr', Load(), lineno=591, col_offset=59)], Load(), lineno=590, col_offset=31)], Load(), lineno=590, col_offset=29), lineno=590, col_offset=16)], [Assign([Name('returnlist', Store(), lineno=592, col_offset=18)], List([Tuple([Call(Attribute(Str(' ', lineno=592, col_offset=33), 'join', Load(), lineno=592, col_offset=33), [Name('plist', Load(), lineno=592, col_offset=42)], [], None, None, lineno=592, col_offset=33), Name('routeaddr', Load(), lineno=592, col_offset=50)], Load(), lineno=592, col_offset=33)], Load(), lineno=592, col_offset=31), lineno=592, col_offset=18)], lineno=589, col_offset=12)], [If(Name('plist', Load(), lineno=595, col_offset=15), [Assign([Name('returnlist', Store(), lineno=596, col_offset=16)], List([Tuple([Call(Attribute(Str(' ', lineno=596, col_offset=31), 'join', Load(), lineno=596, col_offset=31), [Attribute(Name('self', Load(), lineno=596, col_offset=40), 'commentlist', Load(), lineno=596, col_offset=40)], [], None, None, lineno=596, col_offset=31), Subscript(Name('plist', Load(), lineno=596, col_offset=59), Index(Num(0, lineno=596, col_offset=65)), Load(), lineno=596, col_offset=59)], Load(), lineno=596, col_offset=31)], Load(), lineno=596, col_offset=29), lineno=596, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=597, col_offset=17), 'field', Load(), lineno=597, col_offset=17), Index(Attribute(Name('self', Load(), lineno=597, col_offset=28), 'pos', Load(), lineno=597, col_offset=28)), Load(), lineno=597, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=597, col_offset=41), 'specials', Load(), lineno=597, col_offset=41)], lineno=597, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=598, col_offset=16), 'pos', Store(), lineno=598, col_offset=16), Add(), Num(1, lineno=598, col_offset=28), lineno=598, col_offset=16)], [], lineno=597, col_offset=17)], lineno=595, col_offset=12)], lineno=585, col_offset=13)], lineno=572, col_offset=13)], lineno=564, col_offset=13)], lineno=559, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=600, col_offset=8), 'gotonext', Load(), lineno=600, col_offset=8), [], [], None, None, lineno=600, col_offset=8), lineno=600, col_offset=8), If(BoolOp(And(), [Compare(Attribute(Name('self', Load(), lineno=601, col_offset=11), 'pos', Load(), lineno=601, col_offset=11), [Lt()], [Call(Name('len', Load(), lineno=601, col_offset=22), [Attribute(Name('self', Load(), lineno=601, col_offset=26), 'field', Load(), lineno=601, col_offset=26)], [], None, None, lineno=601, col_offset=22)], lineno=601, col_offset=11), Compare(Subscript(Attribute(Name('self', Load(), lineno=601, col_offset=42), 'field', Load(), lineno=601, col_offset=42), Index(Attribute(Name('self', Load(), lineno=601, col_offset=53), 'pos', Load(), lineno=601, col_offset=53)), Load(), lineno=601, col_offset=42), [Eq()], [Str(',', lineno=601, col_offset=66)], lineno=601, col_offset=42)], lineno=601, col_offset=11), [AugAssign(Attribute(Name('self', Load(), lineno=602, col_offset=12), 'pos', Store(), lineno=602, col_offset=12), Add(), Num(1, lineno=602, col_offset=24), lineno=602, col_offset=12)], [], lineno=601, col_offset=8), Return(Name('returnlist', Load(), lineno=603, col_offset=15), lineno=603, col_offset=8)], [], lineno=547, col_offset=4), FunctionDef('getrouteaddr', arguments([Name('self', Param(), lineno=605, col_offset=21)], None, None, []), [Expr(Str('Parse a route address (Return-path value).\n\n        This method just skips all the route stuff and returns the addrspec.\n        ', lineno=609, col_offset=-1), lineno=609, col_offset=-1), If(Compare(Subscript(Attribute(Name('self', Load(), lineno=610, col_offset=11), 'field', Load(), lineno=610, col_offset=11), Index(Attribute(Name('self', Load(), lineno=610, col_offset=22), 'pos', Load(), lineno=610, col_offset=22)), Load(), lineno=610, col_offset=11), [NotEq()], [Str('<', lineno=610, col_offset=35)], lineno=610, col_offset=11), [Return(None, lineno=611, col_offset=12)], [], lineno=610, col_offset=8), Assign([Name('expectroute', Store(), lineno=613, col_offset=8)], Num(0, lineno=613, col_offset=22), lineno=613, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=614, col_offset=8), 'pos', Store(), lineno=614, col_offset=8), Add(), Num(1, lineno=614, col_offset=20), lineno=614, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=615, col_offset=8), 'gotonext', Load(), lineno=615, col_offset=8), [], [], None, None, lineno=615, col_offset=8), lineno=615, col_offset=8), Assign([Name('adlist', Store(), lineno=616, col_offset=8)], Str('', lineno=616, col_offset=17), lineno=616, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=617, col_offset=14), 'pos', Load(), lineno=617, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=617, col_offset=25), [Attribute(Name('self', Load(), lineno=617, col_offset=29), 'field', Load(), lineno=617, col_offset=29)], [], None, None, lineno=617, col_offset=25)], lineno=617, col_offset=14), [If(Name('expectroute', Load(), lineno=618, col_offset=15), [Expr(Call(Attribute(Name('self', Load(), lineno=619, col_offset=16), 'getdomain', Load(), lineno=619, col_offset=16), [], [], None, None, lineno=619, col_offset=16), lineno=619, col_offset=16), Assign([Name('expectroute', Store(), lineno=620, col_offset=16)], Num(0, lineno=620, col_offset=30), lineno=620, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=621, col_offset=17), 'field', Load(), lineno=621, col_offset=17), Index(Attribute(Name('self', Load(), lineno=621, col_offset=28), 'pos', Load(), lineno=621, col_offset=28)), Load(), lineno=621, col_offset=17), [Eq()], [Str('>', lineno=621, col_offset=41)], lineno=621, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=622, col_offset=16), 'pos', Store(), lineno=622, col_offset=16), Add(), Num(1, lineno=622, col_offset=28), lineno=622, col_offset=16), Break( lineno=623, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=624, col_offset=17), 'field', Load(), lineno=624, col_offset=17), Index(Attribute(Name('self', Load(), lineno=624, col_offset=28), 'pos', Load(), lineno=624, col_offset=28)), Load(), lineno=624, col_offset=17), [Eq()], [Str('@', lineno=624, col_offset=41)], lineno=624, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=625, col_offset=16), 'pos', Store(), lineno=625, col_offset=16), Add(), Num(1, lineno=625, col_offset=28), lineno=625, col_offset=16), Assign([Name('expectroute', Store(), lineno=626, col_offset=16)], Num(1, lineno=626, col_offset=30), lineno=626, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=627, col_offset=17), 'field', Load(), lineno=627, col_offset=17), Index(Attribute(Name('self', Load(), lineno=627, col_offset=28), 'pos', Load(), lineno=627, col_offset=28)), Load(), lineno=627, col_offset=17), [Eq()], [Str(':', lineno=627, col_offset=41)], lineno=627, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=628, col_offset=16), 'pos', Store(), lineno=628, col_offset=16), Add(), Num(1, lineno=628, col_offset=28), lineno=628, col_offset=16)], [Assign([Name('adlist', Store(), lineno=630, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=630, col_offset=25), 'getaddrspec', Load(), lineno=630, col_offset=25), [], [], None, None, lineno=630, col_offset=25), lineno=630, col_offset=16), AugAssign(Attribute(Name('self', Load(), lineno=631, col_offset=16), 'pos', Store(), lineno=631, col_offset=16), Add(), Num(1, lineno=631, col_offset=28), lineno=631, col_offset=16), Break( lineno=632, col_offset=16)], lineno=627, col_offset=17)], lineno=624, col_offset=17)], lineno=621, col_offset=17)], lineno=618, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=633, col_offset=12), 'gotonext', Load(), lineno=633, col_offset=12), [], [], None, None, lineno=633, col_offset=12), lineno=633, col_offset=12)], [], lineno=617, col_offset=8), Return(Name('adlist', Load(), lineno=635, col_offset=15), lineno=635, col_offset=8)], [], lineno=605, col_offset=4), FunctionDef('getaddrspec', arguments([Name('self', Param(), lineno=637, col_offset=20)], None, None, []), [Expr(Str('Parse an RFC 2822 addr-spec.', lineno=638, col_offset=8), lineno=638, col_offset=8), Assign([Name('aslist', Store(), lineno=639, col_offset=8)], List([], Load(), lineno=639, col_offset=17), lineno=639, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=641, col_offset=8), 'gotonext', Load(), lineno=641, col_offset=8), [], [], None, None, lineno=641, col_offset=8), lineno=641, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=642, col_offset=14), 'pos', Load(), lineno=642, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=642, col_offset=25), [Attribute(Name('self', Load(), lineno=642, col_offset=29), 'field', Load(), lineno=642, col_offset=29)], [], None, None, lineno=642, col_offset=25)], lineno=642, col_offset=14), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=643, col_offset=15), 'field', Load(), lineno=643, col_offset=15), Index(Attribute(Name('self', Load(), lineno=643, col_offset=26), 'pos', Load(), lineno=643, col_offset=26)), Load(), lineno=643, col_offset=15), [Eq()], [Str('.', lineno=643, col_offset=39)], lineno=643, col_offset=15), [Expr(Call(Attribute(Name('aslist', Load(), lineno=644, col_offset=16), 'append', Load(), lineno=644, col_offset=16), [Str('.', lineno=644, col_offset=30)], [], None, None, lineno=644, col_offset=16), lineno=644, col_offset=16), AugAssign(Attribute(Name('self', Load(), lineno=645, col_offset=16), 'pos', Store(), lineno=645, col_offset=16), Add(), Num(1, lineno=645, col_offset=28), lineno=645, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=646, col_offset=17), 'field', Load(), lineno=646, col_offset=17), Index(Attribute(Name('self', Load(), lineno=646, col_offset=28), 'pos', Load(), lineno=646, col_offset=28)), Load(), lineno=646, col_offset=17), [Eq()], [Str('"', lineno=646, col_offset=41)], lineno=646, col_offset=17), [Expr(Call(Attribute(Name('aslist', Load(), lineno=647, col_offset=16), 'append', Load(), lineno=647, col_offset=16), [BinOp(Str('"%s"', lineno=647, col_offset=30), Mod(), Call(Attribute(Name('self', Load(), lineno=647, col_offset=39), 'getquote', Load(), lineno=647, col_offset=39), [], [], None, None, lineno=647, col_offset=39), lineno=647, col_offset=30)], [], None, None, lineno=647, col_offset=16), lineno=647, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=648, col_offset=17), 'field', Load(), lineno=648, col_offset=17), Index(Attribute(Name('self', Load(), lineno=648, col_offset=28), 'pos', Load(), lineno=648, col_offset=28)), Load(), lineno=648, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=648, col_offset=41), 'atomends', Load(), lineno=648, col_offset=41)], lineno=648, col_offset=17), [Break( lineno=649, col_offset=16)], [Expr(Call(Attribute(Name('aslist', Load(), lineno=650, col_offset=18), 'append', Load(), lineno=650, col_offset=18), [Call(Attribute(Name('self', Load(), lineno=650, col_offset=32), 'getatom', Load(), lineno=650, col_offset=32), [], [], None, None, lineno=650, col_offset=32)], [], None, None, lineno=650, col_offset=18), lineno=650, col_offset=18)], lineno=648, col_offset=17)], lineno=646, col_offset=17)], lineno=643, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=651, col_offset=12), 'gotonext', Load(), lineno=651, col_offset=12), [], [], None, None, lineno=651, col_offset=12), lineno=651, col_offset=12)], [], lineno=642, col_offset=8), If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=653, col_offset=11), 'pos', Load(), lineno=653, col_offset=11), [GtE()], [Call(Name('len', Load(), lineno=653, col_offset=23), [Attribute(Name('self', Load(), lineno=653, col_offset=27), 'field', Load(), lineno=653, col_offset=27)], [], None, None, lineno=653, col_offset=23)], lineno=653, col_offset=11), Compare(Subscript(Attribute(Name('self', Load(), lineno=653, col_offset=42), 'field', Load(), lineno=653, col_offset=42), Index(Attribute(Name('self', Load(), lineno=653, col_offset=53), 'pos', Load(), lineno=653, col_offset=53)), Load(), lineno=653, col_offset=42), [NotEq()], [Str('@', lineno=653, col_offset=66)], lineno=653, col_offset=42)], lineno=653, col_offset=11), [Return(Call(Attribute(Str('', lineno=654, col_offset=19), 'join', Load(), lineno=654, col_offset=19), [Name('aslist', Load(), lineno=654, col_offset=27)], [], None, None, lineno=654, col_offset=19), lineno=654, col_offset=12)], [], lineno=653, col_offset=8), Expr(Call(Attribute(Name('aslist', Load(), lineno=656, col_offset=8), 'append', Load(), lineno=656, col_offset=8), [Str('@', lineno=656, col_offset=22)], [], None, None, lineno=656, col_offset=8), lineno=656, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=657, col_offset=8), 'pos', Store(), lineno=657, col_offset=8), Add(), Num(1, lineno=657, col_offset=20), lineno=657, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=658, col_offset=8), 'gotonext', Load(), lineno=658, col_offset=8), [], [], None, None, lineno=658, col_offset=8), lineno=658, col_offset=8), Return(BinOp(Call(Attribute(Str('', lineno=659, col_offset=15), 'join', Load(), lineno=659, col_offset=15), [Name('aslist', Load(), lineno=659, col_offset=23)], [], None, None, lineno=659, col_offset=15), Add(), Call(Attribute(Name('self', Load(), lineno=659, col_offset=33), 'getdomain', Load(), lineno=659, col_offset=33), [], [], None, None, lineno=659, col_offset=33), lineno=659, col_offset=15), lineno=659, col_offset=8)], [], lineno=637, col_offset=4), FunctionDef('getdomain', arguments([Name('self', Param(), lineno=661, col_offset=18)], None, None, []), [Expr(Str('Get the complete domain name from an address.', lineno=662, col_offset=8), lineno=662, col_offset=8), Assign([Name('sdlist', Store(), lineno=663, col_offset=8)], List([], Load(), lineno=663, col_offset=17), lineno=663, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=664, col_offset=14), 'pos', Load(), lineno=664, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=664, col_offset=25), [Attribute(Name('self', Load(), lineno=664, col_offset=29), 'field', Load(), lineno=664, col_offset=29)], [], None, None, lineno=664, col_offset=25)], lineno=664, col_offset=14), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=665, col_offset=15), 'field', Load(), lineno=665, col_offset=15), Index(Attribute(Name('self', Load(), lineno=665, col_offset=26), 'pos', Load(), lineno=665, col_offset=26)), Load(), lineno=665, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=665, col_offset=39), 'LWS', Load(), lineno=665, col_offset=39)], lineno=665, col_offset=15), [AugAssign(Attribute(Name('self', Load(), lineno=666, col_offset=16), 'pos', Store(), lineno=666, col_offset=16), Add(), Num(1, lineno=666, col_offset=28), lineno=666, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=667, col_offset=17), 'field', Load(), lineno=667, col_offset=17), Index(Attribute(Name('self', Load(), lineno=667, col_offset=28), 'pos', Load(), lineno=667, col_offset=28)), Load(), lineno=667, col_offset=17), [Eq()], [Str('(', lineno=667, col_offset=41)], lineno=667, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=668, col_offset=16), 'commentlist', Load(), lineno=668, col_offset=16), 'append', Load(), lineno=668, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=668, col_offset=40), 'getcomment', Load(), lineno=668, col_offset=40), [], [], None, None, lineno=668, col_offset=40)], [], None, None, lineno=668, col_offset=16), lineno=668, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=669, col_offset=17), 'field', Load(), lineno=669, col_offset=17), Index(Attribute(Name('self', Load(), lineno=669, col_offset=28), 'pos', Load(), lineno=669, col_offset=28)), Load(), lineno=669, col_offset=17), [Eq()], [Str('[', lineno=669, col_offset=41)], lineno=669, col_offset=17), [Expr(Call(Attribute(Name('sdlist', Load(), lineno=670, col_offset=16), 'append', Load(), lineno=670, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=670, col_offset=30), 'getdomainliteral', Load(), lineno=670, col_offset=30), [], [], None, None, lineno=670, col_offset=30)], [], None, None, lineno=670, col_offset=16), lineno=670, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=671, col_offset=17), 'field', Load(), lineno=671, col_offset=17), Index(Attribute(Name('self', Load(), lineno=671, col_offset=28), 'pos', Load(), lineno=671, col_offset=28)), Load(), lineno=671, col_offset=17), [Eq()], [Str('.', lineno=671, col_offset=41)], lineno=671, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=672, col_offset=16), 'pos', Store(), lineno=672, col_offset=16), Add(), Num(1, lineno=672, col_offset=28), lineno=672, col_offset=16), Expr(Call(Attribute(Name('sdlist', Load(), lineno=673, col_offset=16), 'append', Load(), lineno=673, col_offset=16), [Str('.', lineno=673, col_offset=30)], [], None, None, lineno=673, col_offset=16), lineno=673, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=674, col_offset=17), 'field', Load(), lineno=674, col_offset=17), Index(Attribute(Name('self', Load(), lineno=674, col_offset=28), 'pos', Load(), lineno=674, col_offset=28)), Load(), lineno=674, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=674, col_offset=41), 'atomends', Load(), lineno=674, col_offset=41)], lineno=674, col_offset=17), [Break( lineno=675, col_offset=16)], [Expr(Call(Attribute(Name('sdlist', Load(), lineno=676, col_offset=18), 'append', Load(), lineno=676, col_offset=18), [Call(Attribute(Name('self', Load(), lineno=676, col_offset=32), 'getatom', Load(), lineno=676, col_offset=32), [], [], None, None, lineno=676, col_offset=32)], [], None, None, lineno=676, col_offset=18), lineno=676, col_offset=18)], lineno=674, col_offset=17)], lineno=671, col_offset=17)], lineno=669, col_offset=17)], lineno=667, col_offset=17)], lineno=665, col_offset=12)], [], lineno=664, col_offset=8), Return(Call(Attribute(Str('', lineno=677, col_offset=15), 'join', Load(), lineno=677, col_offset=15), [Name('sdlist', Load(), lineno=677, col_offset=23)], [], None, None, lineno=677, col_offset=15), lineno=677, col_offset=8)], [], lineno=661, col_offset=4), FunctionDef('getdelimited', arguments([Name('self', Param(), lineno=679, col_offset=21), Name('beginchar', Param(), lineno=679, col_offset=27), Name('endchars', Param(), lineno=679, col_offset=38), Name('allowcomments', Param(), lineno=679, col_offset=48)], None, None, [Num(1, lineno=679, col_offset=64)]), [Expr(Str("Parse a header fragment delimited by special characters.\n\n        `beginchar' is the start character for the fragment.  If self is not\n        looking at an instance of `beginchar' then getdelimited returns the\n        empty string.\n\n        `endchars' is a sequence of allowable end-delimiting characters.\n        Parsing stops when one of these is encountered.\n\n        If `allowcomments' is non-zero, embedded RFC 2822 comments are allowed\n        within the parsed fragment.\n        ", lineno=691, col_offset=-1), lineno=691, col_offset=-1), If(Compare(Subscript(Attribute(Name('self', Load(), lineno=692, col_offset=11), 'field', Load(), lineno=692, col_offset=11), Index(Attribute(Name('self', Load(), lineno=692, col_offset=22), 'pos', Load(), lineno=692, col_offset=22)), Load(), lineno=692, col_offset=11), [NotEq()], [Name('beginchar', Load(), lineno=692, col_offset=35)], lineno=692, col_offset=11), [Return(Str('', lineno=693, col_offset=19), lineno=693, col_offset=12)], [], lineno=692, col_offset=8), Assign([Name('slist', Store(), lineno=695, col_offset=8)], List([Str('', lineno=695, col_offset=17)], Load(), lineno=695, col_offset=16), lineno=695, col_offset=8), Assign([Name('quote', Store(), lineno=696, col_offset=8)], Num(0, lineno=696, col_offset=16), lineno=696, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=697, col_offset=8), 'pos', Store(), lineno=697, col_offset=8), Add(), Num(1, lineno=697, col_offset=20), lineno=697, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=698, col_offset=14), 'pos', Load(), lineno=698, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=698, col_offset=25), [Attribute(Name('self', Load(), lineno=698, col_offset=29), 'field', Load(), lineno=698, col_offset=29)], [], None, None, lineno=698, col_offset=25)], lineno=698, col_offset=14), [If(Compare(Name('quote', Load(), lineno=699, col_offset=15), [Eq()], [Num(1, lineno=699, col_offset=24)], lineno=699, col_offset=15), [Expr(Call(Attribute(Name('slist', Load(), lineno=700, col_offset=16), 'append', Load(), lineno=700, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=700, col_offset=29), 'field', Load(), lineno=700, col_offset=29), Index(Attribute(Name('self', Load(), lineno=700, col_offset=40), 'pos', Load(), lineno=700, col_offset=40)), Load(), lineno=700, col_offset=29)], [], None, None, lineno=700, col_offset=16), lineno=700, col_offset=16), Assign([Name('quote', Store(), lineno=701, col_offset=16)], Num(0, lineno=701, col_offset=24), lineno=701, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=702, col_offset=17), 'field', Load(), lineno=702, col_offset=17), Index(Attribute(Name('self', Load(), lineno=702, col_offset=28), 'pos', Load(), lineno=702, col_offset=28)), Load(), lineno=702, col_offset=17), [In()], [Name('endchars', Load(), lineno=702, col_offset=41)], lineno=702, col_offset=17), [AugAssign(Attribute(Name('self', Load(), lineno=703, col_offset=16), 'pos', Store(), lineno=703, col_offset=16), Add(), Num(1, lineno=703, col_offset=28), lineno=703, col_offset=16), Break( lineno=704, col_offset=16)], [If(BoolOp(And(), [Name('allowcomments', Load(), lineno=705, col_offset=17), Compare(Subscript(Attribute(Name('self', Load(), lineno=705, col_offset=35), 'field', Load(), lineno=705, col_offset=35), Index(Attribute(Name('self', Load(), lineno=705, col_offset=46), 'pos', Load(), lineno=705, col_offset=46)), Load(), lineno=705, col_offset=35), [Eq()], [Str('(', lineno=705, col_offset=59)], lineno=705, col_offset=35)], lineno=705, col_offset=17), [Expr(Call(Attribute(Name('slist', Load(), lineno=706, col_offset=16), 'append', Load(), lineno=706, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=706, col_offset=29), 'getcomment', Load(), lineno=706, col_offset=29), [], [], None, None, lineno=706, col_offset=29)], [], None, None, lineno=706, col_offset=16), lineno=706, col_offset=16), Continue( lineno=707, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=708, col_offset=17), 'field', Load(), lineno=708, col_offset=17), Index(Attribute(Name('self', Load(), lineno=708, col_offset=28), 'pos', Load(), lineno=708, col_offset=28)), Load(), lineno=708, col_offset=17), [Eq()], [Str('\\', lineno=708, col_offset=41)], lineno=708, col_offset=17), [Assign([Name('quote', Store(), lineno=709, col_offset=16)], Num(1, lineno=709, col_offset=24), lineno=709, col_offset=16)], [Expr(Call(Attribute(Name('slist', Load(), lineno=711, col_offset=16), 'append', Load(), lineno=711, col_offset=16), [Subscript(Attribute(Name('self', Load(), lineno=711, col_offset=29), 'field', Load(), lineno=711, col_offset=29), Index(Attribute(Name('self', Load(), lineno=711, col_offset=40), 'pos', Load(), lineno=711, col_offset=40)), Load(), lineno=711, col_offset=29)], [], None, None, lineno=711, col_offset=16), lineno=711, col_offset=16)], lineno=708, col_offset=17)], lineno=705, col_offset=17)], lineno=702, col_offset=17)], lineno=699, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=712, col_offset=12), 'pos', Store(), lineno=712, col_offset=12), Add(), Num(1, lineno=712, col_offset=24), lineno=712, col_offset=12)], [], lineno=698, col_offset=8), Return(Call(Attribute(Str('', lineno=714, col_offset=15), 'join', Load(), lineno=714, col_offset=15), [Name('slist', Load(), lineno=714, col_offset=23)], [], None, None, lineno=714, col_offset=15), lineno=714, col_offset=8)], [], lineno=679, col_offset=4), FunctionDef('getquote', arguments([Name('self', Param(), lineno=716, col_offset=17)], None, None, []), [Expr(Str("Get a quote-delimited fragment from self's field.", lineno=717, col_offset=8), lineno=717, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=718, col_offset=15), 'getdelimited', Load(), lineno=718, col_offset=15), [Str('"', lineno=718, col_offset=33), Str('"\r', lineno=718, col_offset=38), Num(0, lineno=718, col_offset=45)], [], None, None, lineno=718, col_offset=15), lineno=718, col_offset=8)], [], lineno=716, col_offset=4), FunctionDef('getcomment', arguments([Name('self', Param(), lineno=720, col_offset=19)], None, None, []), [Expr(Str("Get a parenthesis-delimited fragment from self's field.", lineno=721, col_offset=8), lineno=721, col_offset=8), Return(Call(Attribute(Name('self', Load(), lineno=722, col_offset=15), 'getdelimited', Load(), lineno=722, col_offset=15), [Str('(', lineno=722, col_offset=33), Str(')\r', lineno=722, col_offset=38), Num(1, lineno=722, col_offset=45)], [], None, None, lineno=722, col_offset=15), lineno=722, col_offset=8)], [], lineno=720, col_offset=4), FunctionDef('getdomainliteral', arguments([Name('self', Param(), lineno=724, col_offset=25)], None, None, []), [Expr(Str('Parse an RFC 2822 domain-literal.', lineno=725, col_offset=8), lineno=725, col_offset=8), Return(BinOp(Str('[%s]', lineno=726, col_offset=15), Mod(), Call(Attribute(Name('self', Load(), lineno=726, col_offset=24), 'getdelimited', Load(), lineno=726, col_offset=24), [Str('[', lineno=726, col_offset=42), Str(']\r', lineno=726, col_offset=47), Num(0, lineno=726, col_offset=54)], [], None, None, lineno=726, col_offset=24), lineno=726, col_offset=15), lineno=726, col_offset=8)], [], lineno=724, col_offset=4), FunctionDef('getatom', arguments([Name('self', Param(), lineno=728, col_offset=16), Name('atomends', Param(), lineno=728, col_offset=22)], None, None, [Name('None', Load(), lineno=728, col_offset=31)]), [Expr(Str("Parse an RFC 2822 atom.\n\n        Optional atomends specifies a different set of end token delimiters\n        (the default is to use self.atomends).  This is used e.g. in\n        getphraselist() since phrase endings must not include the `.' (which\n        is legal in phrases).", lineno=734, col_offset=-1), lineno=734, col_offset=-1), Assign([Name('atomlist', Store(), lineno=735, col_offset=8)], List([Str('', lineno=735, col_offset=20)], Load(), lineno=735, col_offset=19), lineno=735, col_offset=8), If(Compare(Name('atomends', Load(), lineno=736, col_offset=11), [Is()], [Name('None', Load(), lineno=736, col_offset=23)], lineno=736, col_offset=11), [Assign([Name('atomends', Store(), lineno=737, col_offset=12)], Attribute(Name('self', Load(), lineno=737, col_offset=23), 'atomends', Load(), lineno=737, col_offset=23), lineno=737, col_offset=12)], [], lineno=736, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=739, col_offset=14), 'pos', Load(), lineno=739, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=739, col_offset=25), [Attribute(Name('self', Load(), lineno=739, col_offset=29), 'field', Load(), lineno=739, col_offset=29)], [], None, None, lineno=739, col_offset=25)], lineno=739, col_offset=14), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=740, col_offset=15), 'field', Load(), lineno=740, col_offset=15), Index(Attribute(Name('self', Load(), lineno=740, col_offset=26), 'pos', Load(), lineno=740, col_offset=26)), Load(), lineno=740, col_offset=15), [In()], [Name('atomends', Load(), lineno=740, col_offset=39)], lineno=740, col_offset=15), [Break( lineno=741, col_offset=16)], [Expr(Call(Attribute(Name('atomlist', Load(), lineno=742, col_offset=18), 'append', Load(), lineno=742, col_offset=18), [Subscript(Attribute(Name('self', Load(), lineno=742, col_offset=34), 'field', Load(), lineno=742, col_offset=34), Index(Attribute(Name('self', Load(), lineno=742, col_offset=45), 'pos', Load(), lineno=742, col_offset=45)), Load(), lineno=742, col_offset=34)], [], None, None, lineno=742, col_offset=18), lineno=742, col_offset=18)], lineno=740, col_offset=12), AugAssign(Attribute(Name('self', Load(), lineno=743, col_offset=12), 'pos', Store(), lineno=743, col_offset=12), Add(), Num(1, lineno=743, col_offset=24), lineno=743, col_offset=12)], [], lineno=739, col_offset=8), Return(Call(Attribute(Str('', lineno=745, col_offset=15), 'join', Load(), lineno=745, col_offset=15), [Name('atomlist', Load(), lineno=745, col_offset=23)], [], None, None, lineno=745, col_offset=15), lineno=745, col_offset=8)], [], lineno=728, col_offset=4), FunctionDef('getphraselist', arguments([Name('self', Param(), lineno=747, col_offset=22)], None, None, []), [Expr(Str('Parse a sequence of RFC 2822 phrases.\n\n        A phrase is a sequence of words, which are in turn either RFC 2822\n        atoms or quoted-strings.  Phrases are canonicalized by squeezing all\n        runs of continuous whitespace into one space.\n        ', lineno=753, col_offset=-1), lineno=753, col_offset=-1), Assign([Name('plist', Store(), lineno=754, col_offset=8)], List([], Load(), lineno=754, col_offset=16), lineno=754, col_offset=8), While(Compare(Attribute(Name('self', Load(), lineno=756, col_offset=14), 'pos', Load(), lineno=756, col_offset=14), [Lt()], [Call(Name('len', Load(), lineno=756, col_offset=25), [Attribute(Name('self', Load(), lineno=756, col_offset=29), 'field', Load(), lineno=756, col_offset=29)], [], None, None, lineno=756, col_offset=25)], lineno=756, col_offset=14), [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=757, col_offset=15), 'field', Load(), lineno=757, col_offset=15), Index(Attribute(Name('self', Load(), lineno=757, col_offset=26), 'pos', Load(), lineno=757, col_offset=26)), Load(), lineno=757, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=757, col_offset=39), 'LWS', Load(), lineno=757, col_offset=39)], lineno=757, col_offset=15), [AugAssign(Attribute(Name('self', Load(), lineno=758, col_offset=16), 'pos', Store(), lineno=758, col_offset=16), Add(), Num(1, lineno=758, col_offset=28), lineno=758, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=759, col_offset=17), 'field', Load(), lineno=759, col_offset=17), Index(Attribute(Name('self', Load(), lineno=759, col_offset=28), 'pos', Load(), lineno=759, col_offset=28)), Load(), lineno=759, col_offset=17), [Eq()], [Str('"', lineno=759, col_offset=41)], lineno=759, col_offset=17), [Expr(Call(Attribute(Name('plist', Load(), lineno=760, col_offset=16), 'append', Load(), lineno=760, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=760, col_offset=29), 'getquote', Load(), lineno=760, col_offset=29), [], [], None, None, lineno=760, col_offset=29)], [], None, None, lineno=760, col_offset=16), lineno=760, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=761, col_offset=17), 'field', Load(), lineno=761, col_offset=17), Index(Attribute(Name('self', Load(), lineno=761, col_offset=28), 'pos', Load(), lineno=761, col_offset=28)), Load(), lineno=761, col_offset=17), [Eq()], [Str('(', lineno=761, col_offset=41)], lineno=761, col_offset=17), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=762, col_offset=16), 'commentlist', Load(), lineno=762, col_offset=16), 'append', Load(), lineno=762, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=762, col_offset=40), 'getcomment', Load(), lineno=762, col_offset=40), [], [], None, None, lineno=762, col_offset=40)], [], None, None, lineno=762, col_offset=16), lineno=762, col_offset=16)], [If(Compare(Subscript(Attribute(Name('self', Load(), lineno=763, col_offset=17), 'field', Load(), lineno=763, col_offset=17), Index(Attribute(Name('self', Load(), lineno=763, col_offset=28), 'pos', Load(), lineno=763, col_offset=28)), Load(), lineno=763, col_offset=17), [In()], [Attribute(Name('self', Load(), lineno=763, col_offset=41), 'phraseends', Load(), lineno=763, col_offset=41)], lineno=763, col_offset=17), [Break( lineno=764, col_offset=16)], [Expr(Call(Attribute(Name('plist', Load(), lineno=766, col_offset=16), 'append', Load(), lineno=766, col_offset=16), [Call(Attribute(Name('self', Load(), lineno=766, col_offset=29), 'getatom', Load(), lineno=766, col_offset=29), [Attribute(Name('self', Load(), lineno=766, col_offset=42), 'phraseends', Load(), lineno=766, col_offset=42)], [], None, None, lineno=766, col_offset=29)], [], None, None, lineno=766, col_offset=16), lineno=766, col_offset=16)], lineno=763, col_offset=17)], lineno=761, col_offset=17)], lineno=759, col_offset=17)], lineno=757, col_offset=12)], [], lineno=756, col_offset=8), Return(Name('plist', Load(), lineno=768, col_offset=15), lineno=768, col_offset=8)], [], lineno=747, col_offset=4)], [], lineno=496, col_offset=0), ClassDef('AddressList', [Name('AddrlistClass', Load(), lineno=770, col_offset=18)], [Expr(Str('An AddressList encapsulates a list of parsed RFC 2822 addresses.', lineno=771, col_offset=4), lineno=771, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=772, col_offset=17), Name('field', Param(), lineno=772, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('AddrlistClass', Load(), lineno=773, col_offset=8), '__init__', Load(), lineno=773, col_offset=8), [Name('self', Load(), lineno=773, col_offset=31), Name('field', Load(), lineno=773, col_offset=37)], [], None, None, lineno=773, col_offset=8), lineno=773, col_offset=8), If(Name('field', Load(), lineno=774, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=775, col_offset=12), 'addresslist', Store(), lineno=775, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=775, col_offset=31), 'getaddrlist', Load(), lineno=775, col_offset=31), [], [], None, None, lineno=775, col_offset=31), lineno=775, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=777, col_offset=12), 'addresslist', Store(), lineno=777, col_offset=12)], List([], Load(), lineno=777, col_offset=31), lineno=777, col_offset=12)], lineno=774, col_offset=8)], [], lineno=772, col_offset=4), FunctionDef('__len__', arguments([Name('self', Param(), lineno=779, col_offset=16)], None, None, []), [Return(Call(Name('len', Load(), lineno=780, col_offset=15), [Attribute(Name('self', Load(), lineno=780, col_offset=19), 'addresslist', Load(), lineno=780, col_offset=19)], [], None, None, lineno=780, col_offset=15), lineno=780, col_offset=8)], [], lineno=779, col_offset=4), FunctionDef('__str__', arguments([Name('self', Param(), lineno=782, col_offset=16)], None, None, []), [Return(Call(Attribute(Str(', ', lineno=783, col_offset=15), 'join', Load(), lineno=783, col_offset=15), [Call(Name('map', Load(), lineno=783, col_offset=25), [Name('dump_address_pair', Load(), lineno=783, col_offset=29), Attribute(Name('self', Load(), lineno=783, col_offset=48), 'addresslist', Load(), lineno=783, col_offset=48)], [], None, None, lineno=783, col_offset=25)], [], None, None, lineno=783, col_offset=15), lineno=783, col_offset=8)], [], lineno=782, col_offset=4), FunctionDef('__add__', arguments([Name('self', Param(), lineno=785, col_offset=16), Name('other', Param(), lineno=785, col_offset=22)], None, None, []), [Assign([Name('newaddr', Store(), lineno=787, col_offset=8)], Call(Name('AddressList', Load(), lineno=787, col_offset=18), [Name('None', Load(), lineno=787, col_offset=30)], [], None, None, lineno=787, col_offset=18), lineno=787, col_offset=8), Assign([Attribute(Name('newaddr', Load(), lineno=788, col_offset=8), 'addresslist', Store(), lineno=788, col_offset=8)], Subscript(Attribute(Name('self', Load(), lineno=788, col_offset=30), 'addresslist', Load(), lineno=788, col_offset=30), Slice(None, None, None), Load(), lineno=788, col_offset=30), lineno=788, col_offset=8), For(Name('x', Store(), lineno=789, col_offset=12), Attribute(Name('other', Load(), lineno=789, col_offset=17), 'addresslist', Load(), lineno=789, col_offset=17), [If(UnaryOp(Not(), Compare(Name('x', Load(), lineno=790, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=790, col_offset=24), 'addresslist', Load(), lineno=790, col_offset=24)], lineno=790, col_offset=19), lineno=790, col_offset=15), [Expr(Call(Attribute(Attribute(Name('newaddr', Load(), lineno=791, col_offset=16), 'addresslist', Load(), lineno=791, col_offset=16), 'append', Load(), lineno=791, col_offset=16), [Name('x', Load(), lineno=791, col_offset=43)], [], None, None, lineno=791, col_offset=16), lineno=791, col_offset=16)], [], lineno=790, col_offset=12)], [], lineno=789, col_offset=8), Return(Name('newaddr', Load(), lineno=792, col_offset=15), lineno=792, col_offset=8)], [], lineno=785, col_offset=4), FunctionDef('__iadd__', arguments([Name('self', Param(), lineno=794, col_offset=17), Name('other', Param(), lineno=794, col_offset=23)], None, None, []), [For(Name('x', Store(), lineno=796, col_offset=12), Attribute(Name('other', Load(), lineno=796, col_offset=17), 'addresslist', Load(), lineno=796, col_offset=17), [If(UnaryOp(Not(), Compare(Name('x', Load(), lineno=797, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=797, col_offset=24), 'addresslist', Load(), lineno=797, col_offset=24)], lineno=797, col_offset=19), lineno=797, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=798, col_offset=16), 'addresslist', Load(), lineno=798, col_offset=16), 'append', Load(), lineno=798, col_offset=16), [Name('x', Load(), lineno=798, col_offset=40)], [], None, None, lineno=798, col_offset=16), lineno=798, col_offset=16)], [], lineno=797, col_offset=12)], [], lineno=796, col_offset=8), Return(Name('self', Load(), lineno=799, col_offset=15), lineno=799, col_offset=8)], [], lineno=794, col_offset=4), FunctionDef('__sub__', arguments([Name('self', Param(), lineno=801, col_offset=16), Name('other', Param(), lineno=801, col_offset=22)], None, None, []), [Assign([Name('newaddr', Store(), lineno=803, col_offset=8)], Call(Name('AddressList', Load(), lineno=803, col_offset=18), [Name('None', Load(), lineno=803, col_offset=30)], [], None, None, lineno=803, col_offset=18), lineno=803, col_offset=8), For(Name('x', Store(), lineno=804, col_offset=12), Attribute(Name('self', Load(), lineno=804, col_offset=17), 'addresslist', Load(), lineno=804, col_offset=17), [If(UnaryOp(Not(), Compare(Name('x', Load(), lineno=805, col_offset=19), [In()], [Attribute(Name('other', Load(), lineno=805, col_offset=24), 'addresslist', Load(), lineno=805, col_offset=24)], lineno=805, col_offset=19), lineno=805, col_offset=15), [Expr(Call(Attribute(Attribute(Name('newaddr', Load(), lineno=806, col_offset=16), 'addresslist', Load(), lineno=806, col_offset=16), 'append', Load(), lineno=806, col_offset=16), [Name('x', Load(), lineno=806, col_offset=43)], [], None, None, lineno=806, col_offset=16), lineno=806, col_offset=16)], [], lineno=805, col_offset=12)], [], lineno=804, col_offset=8), Return(Name('newaddr', Load(), lineno=807, col_offset=15), lineno=807, col_offset=8)], [], lineno=801, col_offset=4), FunctionDef('__isub__', arguments([Name('self', Param(), lineno=809, col_offset=17), Name('other', Param(), lineno=809, col_offset=23)], None, None, []), [For(Name('x', Store(), lineno=811, col_offset=12), Attribute(Name('other', Load(), lineno=811, col_offset=17), 'addresslist', Load(), lineno=811, col_offset=17), [If(Compare(Name('x', Load(), lineno=812, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=812, col_offset=20), 'addresslist', Load(), lineno=812, col_offset=20)], lineno=812, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=813, col_offset=16), 'addresslist', Load(), lineno=813, col_offset=16), 'remove', Load(), lineno=813, col_offset=16), [Name('x', Load(), lineno=813, col_offset=40)], [], None, None, lineno=813, col_offset=16), lineno=813, col_offset=16)], [], lineno=812, col_offset=12)], [], lineno=811, col_offset=8), Return(Name('self', Load(), lineno=814, col_offset=15), lineno=814, col_offset=8)], [], lineno=809, col_offset=4), FunctionDef('__getitem__', arguments([Name('self', Param(), lineno=816, col_offset=20), Name('index', Param(), lineno=816, col_offset=26)], None, None, []), [Return(Subscript(Attribute(Name('self', Load(), lineno=818, col_offset=15), 'addresslist', Load(), lineno=818, col_offset=15), Index(Name('index', Load(), lineno=818, col_offset=32)), Load(), lineno=818, col_offset=15), lineno=818, col_offset=8)], [], lineno=816, col_offset=4)], [], lineno=770, col_offset=0), FunctionDef('dump_address_pair', arguments([Name('pair', Param(), lineno=820, col_offset=22)], None, None, []), [Expr(Str('Dump a (name, address) pair in a canonicalized form.', lineno=821, col_offset=4), lineno=821, col_offset=4), If(Subscript(Name('pair', Load(), lineno=822, col_offset=7), Index(Num(0, lineno=822, col_offset=12)), Load(), lineno=822, col_offset=7), [Return(BinOp(BinOp(BinOp(BinOp(Str('"', lineno=823, col_offset=15), Add(), Subscript(Name('pair', Load(), lineno=823, col_offset=21), Index(Num(0, lineno=823, col_offset=26)), Load(), lineno=823, col_offset=21), lineno=823, col_offset=15), Add(), Str('" <', lineno=823, col_offset=31), lineno=823, col_offset=29), Add(), Subscript(Name('pair', Load(), lineno=823, col_offset=39), Index(Num(1, lineno=823, col_offset=44)), Load(), lineno=823, col_offset=39), lineno=823, col_offset=37), Add(), Str('>', lineno=823, col_offset=49), lineno=823, col_offset=47), lineno=823, col_offset=8)], [Return(Subscript(Name('pair', Load(), lineno=825, col_offset=15), Index(Num(1, lineno=825, col_offset=20)), Load(), lineno=825, col_offset=15), lineno=825, col_offset=8)], lineno=822, col_offset=4)], [], lineno=820, col_offset=0), Assign([Name('_monthnames', Store(), lineno=829, col_offset=0)], List([Str('jan', lineno=829, col_offset=15), Str('feb', lineno=829, col_offset=22), Str('mar', lineno=829, col_offset=29), Str('apr', lineno=829, col_offset=36), Str('may', lineno=829, col_offset=43), Str('jun', lineno=829, col_offset=50), Str('jul', lineno=829, col_offset=57), Str('aug', lineno=830, col_offset=15), Str('sep', lineno=830, col_offset=22), Str('oct', lineno=830, col_offset=29), Str('nov', lineno=830, col_offset=36), Str('dec', lineno=830, col_offset=43), Str('january', lineno=831, col_offset=15), Str('february', lineno=831, col_offset=26), Str('march', lineno=831, col_offset=38), Str('april', lineno=831, col_offset=47), Str('may', lineno=831, col_offset=56), Str('june', lineno=831, col_offset=63), Str('july', lineno=831, col_offset=71), Str('august', lineno=832, col_offset=15), Str('september', lineno=832, col_offset=25), Str('october', lineno=832, col_offset=38), Str('november', lineno=832, col_offset=49), Str('december', lineno=832, col_offset=61)], Load(), lineno=829, col_offset=14), lineno=829, col_offset=0), Assign([Name('_daynames', Store(), lineno=833, col_offset=0)], List([Str('mon', lineno=833, col_offset=13), Str('tue', lineno=833, col_offset=20), Str('wed', lineno=833, col_offset=27), Str('thu', lineno=833, col_offset=34), Str('fri', lineno=833, col_offset=41), Str('sat', lineno=833, col_offset=48), Str('sun', lineno=833, col_offset=55)], Load(), lineno=833, col_offset=12), lineno=833, col_offset=0), Assign([Name('_timezones', Store(), lineno=841, col_offset=0)], Dict([Str('UT', lineno=841, col_offset=14), Str('UTC', lineno=841, col_offset=22), Str('GMT', lineno=841, col_offset=31), Str('Z', lineno=841, col_offset=40), Str('AST', lineno=842, col_offset=14), Str('ADT', lineno=842, col_offset=27), Str('EST', lineno=843, col_offset=14), Str('EDT', lineno=843, col_offset=27), Str('CST', lineno=844, col_offset=14), Str('CDT', lineno=844, col_offset=27), Str('MST', lineno=845, col_offset=14), Str('MDT', lineno=845, col_offset=27), Str('PST', lineno=846, col_offset=14), Str('PDT', lineno=846, col_offset=27)], [Num(0, lineno=841, col_offset=19), Num(0, lineno=841, col_offset=28), Num(0, lineno=841, col_offset=37), Num(0, lineno=841, col_offset=44), Num(-400, lineno=842, col_offset=22), Num(-300, lineno=842, col_offset=35), Num(-500, lineno=843, col_offset=22), Num(-400, lineno=843, col_offset=35), Num(-600, lineno=844, col_offset=22), Num(-500, lineno=844, col_offset=35), Num(-700, lineno=845, col_offset=22), Num(-600, lineno=845, col_offset=35), Num(-800, lineno=846, col_offset=22), Num(-700, lineno=846, col_offset=35)], lineno=841, col_offset=13), lineno=841, col_offset=0), FunctionDef('parsedate_tz', arguments([Name('data', Param(), lineno=850, col_offset=17)], None, None, []), [Expr(Str('Convert a date string to a time tuple.\n\n    Accounts for military timezones.\n    ', lineno=854, col_offset=-1), lineno=854, col_offset=-1), If(UnaryOp(Not(), Name('data', Load(), lineno=855, col_offset=11), lineno=855, col_offset=7), [Return(Name('None', Load(), lineno=856, col_offset=15), lineno=856, col_offset=8)], [], lineno=855, col_offset=4), Assign([Name('data', Store(), lineno=857, col_offset=4)], Call(Attribute(Name('data', Load(), lineno=857, col_offset=11), 'split', Load(), lineno=857, col_offset=11), [], [], None, None, lineno=857, col_offset=11), lineno=857, col_offset=4), If(BoolOp(Or(), [Compare(Subscript(Subscript(Name('data', Load(), lineno=858, col_offset=7), Index(Num(0, lineno=858, col_offset=12)), Load(), lineno=858, col_offset=7), Index(Num(-1, lineno=858, col_offset=16)), Load(), lineno=858, col_offset=7), [In()], [Tuple([Str(',', lineno=858, col_offset=23), Str('.', lineno=858, col_offset=28)], Load(), lineno=858, col_offset=23)], lineno=858, col_offset=7), Compare(Call(Attribute(Subscript(Name('data', Load(), lineno=858, col_offset=36), Index(Num(0, lineno=858, col_offset=41)), Load(), lineno=858, col_offset=36), 'lower', Load(), lineno=858, col_offset=36), [], [], None, None, lineno=858, col_offset=36), [In()], [Name('_daynames', Load(), lineno=858, col_offset=55)], lineno=858, col_offset=36)], lineno=858, col_offset=7), [Delete([Subscript(Name('data', Load(), lineno=860, col_offset=12), Index(Num(0, lineno=860, col_offset=17)), Del(), lineno=860, col_offset=12)], lineno=860, col_offset=8)], [Assign([Name('i', Store(), lineno=863, col_offset=8)], Call(Attribute(Subscript(Name('data', Load(), lineno=863, col_offset=12), Index(Num(0, lineno=863, col_offset=17)), Load(), lineno=863, col_offset=12), 'rfind', Load(), lineno=863, col_offset=12), [Str(',', lineno=863, col_offset=26)], [], None, None, lineno=863, col_offset=12), lineno=863, col_offset=8), If(Compare(Name('i', Load(), lineno=864, col_offset=11), [GtE()], [Num(0, lineno=864, col_offset=16)], lineno=864, col_offset=11), [Assign([Subscript(Name('data', Load(), lineno=865, col_offset=12), Index(Num(0, lineno=865, col_offset=17)), Store(), lineno=865, col_offset=12)], Subscript(Subscript(Name('data', Load(), lineno=865, col_offset=22), Index(Num(0, lineno=865, col_offset=27)), Load(), lineno=865, col_offset=22), Slice(BinOp(Name('i', Load(), lineno=865, col_offset=30), Add(), Num(1, lineno=865, col_offset=32), lineno=865, col_offset=30), None, None), Load(), lineno=865, col_offset=22), lineno=865, col_offset=12)], [], lineno=864, col_offset=8)], lineno=858, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=866, col_offset=7), [Name('data', Load(), lineno=866, col_offset=11)], [], None, None, lineno=866, col_offset=7), [Eq()], [Num(3, lineno=866, col_offset=20)], lineno=866, col_offset=7), [Assign([Name('stuff', Store(), lineno=867, col_offset=8)], Call(Attribute(Subscript(Name('data', Load(), lineno=867, col_offset=16), Index(Num(0, lineno=867, col_offset=21)), Load(), lineno=867, col_offset=16), 'split', Load(), lineno=867, col_offset=16), [Str('-', lineno=867, col_offset=30)], [], None, None, lineno=867, col_offset=16), lineno=867, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=868, col_offset=11), [Name('stuff', Load(), lineno=868, col_offset=15)], [], None, None, lineno=868, col_offset=11), [Eq()], [Num(3, lineno=868, col_offset=25)], lineno=868, col_offset=11), [Assign([Name('data', Store(), lineno=869, col_offset=12)], BinOp(Name('stuff', Load(), lineno=869, col_offset=19), Add(), Subscript(Name('data', Load(), lineno=869, col_offset=27), Slice(Num(1, lineno=869, col_offset=32), None, None), Load(), lineno=869, col_offset=27), lineno=869, col_offset=19), lineno=869, col_offset=12)], [], lineno=868, col_offset=8)], [], lineno=866, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=870, col_offset=7), [Name('data', Load(), lineno=870, col_offset=11)], [], None, None, lineno=870, col_offset=7), [Eq()], [Num(4, lineno=870, col_offset=20)], lineno=870, col_offset=7), [Assign([Name('s', Store(), lineno=871, col_offset=8)], Subscript(Name('data', Load(), lineno=871, col_offset=12), Index(Num(3, lineno=871, col_offset=17)), Load(), lineno=871, col_offset=12), lineno=871, col_offset=8), Assign([Name('i', Store(), lineno=872, col_offset=8)], Call(Attribute(Name('s', Load(), lineno=872, col_offset=12), 'find', Load(), lineno=872, col_offset=12), [Str('+', lineno=872, col_offset=19)], [], None, None, lineno=872, col_offset=12), lineno=872, col_offset=8), If(Compare(Name('i', Load(), lineno=873, col_offset=11), [Gt()], [Num(0, lineno=873, col_offset=15)], lineno=873, col_offset=11), [Assign([Subscript(Name('data', Load(), lineno=874, col_offset=12), Slice(Num(3, lineno=874, col_offset=17), None, None), Store(), lineno=874, col_offset=12)], List([Subscript(Name('s', Load(), lineno=874, col_offset=24), Slice(None, Name('i', Load(), lineno=874, col_offset=27), None), Load(), lineno=874, col_offset=24), Subscript(Name('s', Load(), lineno=874, col_offset=31), Slice(BinOp(Name('i', Load(), lineno=874, col_offset=33), Add(), Num(1, lineno=874, col_offset=35), lineno=874, col_offset=33), None, None), Load(), lineno=874, col_offset=31)], Load(), lineno=874, col_offset=23), lineno=874, col_offset=12)], [Expr(Call(Attribute(Name('data', Load(), lineno=876, col_offset=12), 'append', Load(), lineno=876, col_offset=12), [Str('', lineno=876, col_offset=24)], [], None, None, lineno=876, col_offset=12), lineno=876, col_offset=12)], lineno=873, col_offset=8)], [], lineno=870, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=877, col_offset=7), [Name('data', Load(), lineno=877, col_offset=11)], [], None, None, lineno=877, col_offset=7), [Lt()], [Num(5, lineno=877, col_offset=19)], lineno=877, col_offset=7), [Return(Name('None', Load(), lineno=878, col_offset=15), lineno=878, col_offset=8)], [], lineno=877, col_offset=4), Assign([Name('data', Store(), lineno=879, col_offset=4)], Subscript(Name('data', Load(), lineno=879, col_offset=11), Slice(None, Num(5, lineno=879, col_offset=17), None), Load(), lineno=879, col_offset=11), lineno=879, col_offset=4), Assign([List([Name('dd', Store(), lineno=880, col_offset=5), Name('mm', Store(), lineno=880, col_offset=9), Name('yy', Store(), lineno=880, col_offset=13), Name('tm', Store(), lineno=880, col_offset=17), Name('tz', Store(), lineno=880, col_offset=21)], Store(), lineno=880, col_offset=4)], Name('data', Load(), lineno=880, col_offset=27), lineno=880, col_offset=4), Assign([Name('mm', Store(), lineno=881, col_offset=4)], Call(Attribute(Name('mm', Load(), lineno=881, col_offset=9), 'lower', Load(), lineno=881, col_offset=9), [], [], None, None, lineno=881, col_offset=9), lineno=881, col_offset=4), If(UnaryOp(Not(), Compare(Name('mm', Load(), lineno=882, col_offset=11), [In()], [Name('_monthnames', Load(), lineno=882, col_offset=17)], lineno=882, col_offset=11), lineno=882, col_offset=7), [Assign([Tuple([Name('dd', Store(), lineno=883, col_offset=8), Name('mm', Store(), lineno=883, col_offset=12)], Store(), lineno=883, col_offset=8)], Tuple([Name('mm', Load(), lineno=883, col_offset=17), Call(Attribute(Name('dd', Load(), lineno=883, col_offset=21), 'lower', Load(), lineno=883, col_offset=21), [], [], None, None, lineno=883, col_offset=21)], Load(), lineno=883, col_offset=17), lineno=883, col_offset=8), If(UnaryOp(Not(), Compare(Name('mm', Load(), lineno=884, col_offset=15), [In()], [Name('_monthnames', Load(), lineno=884, col_offset=21)], lineno=884, col_offset=15), lineno=884, col_offset=11), [Return(Name('None', Load(), lineno=885, col_offset=19), lineno=885, col_offset=12)], [], lineno=884, col_offset=8)], [], lineno=882, col_offset=4), Assign([Name('mm', Store(), lineno=886, col_offset=4)], BinOp(Call(Attribute(Name('_monthnames', Load(), lineno=886, col_offset=9), 'index', Load(), lineno=886, col_offset=9), [Name('mm', Load(), lineno=886, col_offset=27)], [], None, None, lineno=886, col_offset=9), Add(), Num(1, lineno=886, col_offset=31), lineno=886, col_offset=9), lineno=886, col_offset=4), If(Compare(Name('mm', Load(), lineno=887, col_offset=7), [Gt()], [Num(12, lineno=887, col_offset=12)], lineno=887, col_offset=7), [Assign([Name('mm', Store(), lineno=887, col_offset=16)], BinOp(Name('mm', Load(), lineno=887, col_offset=21), Sub(), Num(12, lineno=887, col_offset=26), lineno=887, col_offset=21), lineno=887, col_offset=16)], [], lineno=887, col_offset=4), If(Compare(Subscript(Name('dd', Load(), lineno=888, col_offset=7), Index(Num(-1, lineno=888, col_offset=11)), Load(), lineno=888, col_offset=7), [Eq()], [Str(',', lineno=888, col_offset=17)], lineno=888, col_offset=7), [Assign([Name('dd', Store(), lineno=889, col_offset=8)], Subscript(Name('dd', Load(), lineno=889, col_offset=13), Slice(None, Num(-1, lineno=889, col_offset=18), None), Load(), lineno=889, col_offset=13), lineno=889, col_offset=8)], [], lineno=888, col_offset=4), Assign([Name('i', Store(), lineno=890, col_offset=4)], Call(Attribute(Name('yy', Load(), lineno=890, col_offset=8), 'find', Load(), lineno=890, col_offset=8), [Str(':', lineno=890, col_offset=16)], [], None, None, lineno=890, col_offset=8), lineno=890, col_offset=4), If(Compare(Name('i', Load(), lineno=891, col_offset=7), [Gt()], [Num(0, lineno=891, col_offset=11)], lineno=891, col_offset=7), [Assign([Tuple([Name('yy', Store(), lineno=892, col_offset=8), Name('tm', Store(), lineno=892, col_offset=12)], Store(), lineno=892, col_offset=8)], Tuple([Name('tm', Load(), lineno=892, col_offset=17), Name('yy', Load(), lineno=892, col_offset=21)], Load(), lineno=892, col_offset=17), lineno=892, col_offset=8)], [], lineno=891, col_offset=4), If(Compare(Subscript(Name('yy', Load(), lineno=893, col_offset=7), Index(Num(-1, lineno=893, col_offset=11)), Load(), lineno=893, col_offset=7), [Eq()], [Str(',', lineno=893, col_offset=17)], lineno=893, col_offset=7), [Assign([Name('yy', Store(), lineno=894, col_offset=8)], Subscript(Name('yy', Load(), lineno=894, col_offset=13), Slice(None, Num(-1, lineno=894, col_offset=18), None), Load(), lineno=894, col_offset=13), lineno=894, col_offset=8)], [], lineno=893, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Subscript(Name('yy', Load(), lineno=895, col_offset=11), Index(Num(0, lineno=895, col_offset=14)), Load(), lineno=895, col_offset=11), 'isdigit', Load(), lineno=895, col_offset=11), [], [], None, None, lineno=895, col_offset=11), lineno=895, col_offset=7), [Assign([Tuple([Name('yy', Store(), lineno=896, col_offset=8), Name('tz', Store(), lineno=896, col_offset=12)], Store(), lineno=896, col_offset=8)], Tuple([Name('tz', Load(), lineno=896, col_offset=17), Name('yy', Load(), lineno=896, col_offset=21)], Load(), lineno=896, col_offset=17), lineno=896, col_offset=8)], [], lineno=895, col_offset=4), If(Compare(Subscript(Name('tm', Load(), lineno=897, col_offset=7), Index(Num(-1, lineno=897, col_offset=11)), Load(), lineno=897, col_offset=7), [Eq()], [Str(',', lineno=897, col_offset=17)], lineno=897, col_offset=7), [Assign([Name('tm', Store(), lineno=898, col_offset=8)], Subscript(Name('tm', Load(), lineno=898, col_offset=13), Slice(None, Num(-1, lineno=898, col_offset=18), None), Load(), lineno=898, col_offset=13), lineno=898, col_offset=8)], [], lineno=897, col_offset=4), Assign([Name('tm', Store(), lineno=899, col_offset=4)], Call(Attribute(Name('tm', Load(), lineno=899, col_offset=9), 'split', Load(), lineno=899, col_offset=9), [Str(':', lineno=899, col_offset=18)], [], None, None, lineno=899, col_offset=9), lineno=899, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=900, col_offset=7), [Name('tm', Load(), lineno=900, col_offset=11)], [], None, None, lineno=900, col_offset=7), [Eq()], [Num(2, lineno=900, col_offset=18)], lineno=900, col_offset=7), [Assign([List([Name('thh', Store(), lineno=901, col_offset=9), Name('tmm', Store(), lineno=901, col_offset=14)], Store(), lineno=901, col_offset=8)], Name('tm', Load(), lineno=901, col_offset=21), lineno=901, col_offset=8), Assign([Name('tss', Store(), lineno=902, col_offset=8)], Str('0', lineno=902, col_offset=14), lineno=902, col_offset=8)], [If(Compare(Call(Name('len', Load(), lineno=903, col_offset=9), [Name('tm', Load(), lineno=903, col_offset=13)], [], None, None, lineno=903, col_offset=9), [Eq()], [Num(3, lineno=903, col_offset=20)], lineno=903, col_offset=9), [Assign([List([Name('thh', Store(), lineno=904, col_offset=9), Name('tmm', Store(), lineno=904, col_offset=14), Name('tss', Store(), lineno=904, col_offset=19)], Store(), lineno=904, col_offset=8)], Name('tm', Load(), lineno=904, col_offset=26), lineno=904, col_offset=8)], [Return(Name('None', Load(), lineno=906, col_offset=15), lineno=906, col_offset=8)], lineno=903, col_offset=9)], lineno=900, col_offset=4), TryExcept([Assign([Name('yy', Store(), lineno=908, col_offset=8)], Call(Name('int', Load(), lineno=908, col_offset=13), [Name('yy', Load(), lineno=908, col_offset=17)], [], None, None, lineno=908, col_offset=13), lineno=908, col_offset=8), Assign([Name('dd', Store(), lineno=909, col_offset=8)], Call(Name('int', Load(), lineno=909, col_offset=13), [Name('dd', Load(), lineno=909, col_offset=17)], [], None, None, lineno=909, col_offset=13), lineno=909, col_offset=8), Assign([Name('thh', Store(), lineno=910, col_offset=8)], Call(Name('int', Load(), lineno=910, col_offset=14), [Name('thh', Load(), lineno=910, col_offset=18)], [], None, None, lineno=910, col_offset=14), lineno=910, col_offset=8), Assign([Name('tmm', Store(), lineno=911, col_offset=8)], Call(Name('int', Load(), lineno=911, col_offset=14), [Name('tmm', Load(), lineno=911, col_offset=18)], [], None, None, lineno=911, col_offset=14), lineno=911, col_offset=8), Assign([Name('tss', Store(), lineno=912, col_offset=8)], Call(Name('int', Load(), lineno=912, col_offset=14), [Name('tss', Load(), lineno=912, col_offset=18)], [], None, None, lineno=912, col_offset=14), lineno=912, col_offset=8)], [ExceptHandler(Name('ValueError', Load(), lineno=913, col_offset=11), None, [Return(Name('None', Load(), lineno=914, col_offset=15), lineno=914, col_offset=8)], lineno=913, col_offset=4)], [], lineno=907, col_offset=4), Assign([Name('tzoffset', Store(), lineno=915, col_offset=4)], Name('None', Load(), lineno=915, col_offset=15), lineno=915, col_offset=4), Assign([Name('tz', Store(), lineno=916, col_offset=4)], Call(Attribute(Name('tz', Load(), lineno=916, col_offset=9), 'upper', Load(), lineno=916, col_offset=9), [], [], None, None, lineno=916, col_offset=9), lineno=916, col_offset=4), If(Compare(Name('tz', Load(), lineno=917, col_offset=7), [In()], [Name('_timezones', Load(), lineno=917, col_offset=13)], lineno=917, col_offset=7), [Assign([Name('tzoffset', Store(), lineno=918, col_offset=8)], Subscript(Name('_timezones', Load(), lineno=918, col_offset=19), Index(Name('tz', Load(), lineno=918, col_offset=30)), Load(), lineno=918, col_offset=19), lineno=918, col_offset=8)], [TryExcept([Assign([Name('tzoffset', Store(), lineno=921, col_offset=12)], Call(Name('int', Load(), lineno=921, col_offset=23), [Name('tz', Load(), lineno=921, col_offset=27)], [], None, None, lineno=921, col_offset=23), lineno=921, col_offset=12)], [ExceptHandler(Name('ValueError', Load(), lineno=922, col_offset=15), None, [Pass( lineno=923, col_offset=12)], lineno=922, col_offset=8)], [], lineno=920, col_offset=8)], lineno=917, col_offset=4), If(Name('tzoffset', Load(), lineno=925, col_offset=7), [If(Compare(Name('tzoffset', Load(), lineno=926, col_offset=11), [Lt()], [Num(0, lineno=926, col_offset=22)], lineno=926, col_offset=11), [Assign([Name('tzsign', Store(), lineno=927, col_offset=12)], Num(-1, lineno=927, col_offset=22), lineno=927, col_offset=12), Assign([Name('tzoffset', Store(), lineno=928, col_offset=12)], UnaryOp(USub(), Name('tzoffset', Load(), lineno=928, col_offset=24), lineno=928, col_offset=23), lineno=928, col_offset=12)], [Assign([Name('tzsign', Store(), lineno=930, col_offset=12)], Num(1, lineno=930, col_offset=21), lineno=930, col_offset=12)], lineno=926, col_offset=8), Assign([Name('tzoffset', Store(), lineno=931, col_offset=8)], BinOp(Name('tzsign', Load(), lineno=931, col_offset=19), Mult(), BinOp(BinOp(BinOp(Name('tzoffset', Load(), lineno=931, col_offset=31), FloorDiv(), Num(100, lineno=931, col_offset=41), lineno=931, col_offset=31), Mult(), Num(3600, lineno=931, col_offset=46), lineno=931, col_offset=30), Add(), BinOp(BinOp(Name('tzoffset', Load(), lineno=931, col_offset=54), Mod(), Num(100, lineno=931, col_offset=65), lineno=931, col_offset=54), Mult(), Num(60, lineno=931, col_offset=70), lineno=931, col_offset=53), lineno=931, col_offset=30), lineno=931, col_offset=19), lineno=931, col_offset=8)], [], lineno=925, col_offset=4), Return(Tuple([Name('yy', Load(), lineno=932, col_offset=12), Name('mm', Load(), lineno=932, col_offset=16), Name('dd', Load(), lineno=932, col_offset=20), Name('thh', Load(), lineno=932, col_offset=24), Name('tmm', Load(), lineno=932, col_offset=29), Name('tss', Load(), lineno=932, col_offset=34), Num(0, lineno=932, col_offset=39), Num(1, lineno=932, col_offset=42), Num(0, lineno=932, col_offset=45), Name('tzoffset', Load(), lineno=932, col_offset=48)], Load(), lineno=932, col_offset=12), lineno=932, col_offset=4)], [], lineno=850, col_offset=0), FunctionDef('parsedate', arguments([Name('data', Param(), lineno=935, col_offset=14)], None, None, []), [Expr(Str('Convert a time string to a time tuple.', lineno=936, col_offset=4), lineno=936, col_offset=4), Assign([Name('t', Store(), lineno=937, col_offset=4)], Call(Name('parsedate_tz', Load(), lineno=937, col_offset=8), [Name('data', Load(), lineno=937, col_offset=21)], [], None, None, lineno=937, col_offset=8), lineno=937, col_offset=4), If(Compare(Name('t', Load(), lineno=938, col_offset=7), [Is()], [Name('None', Load(), lineno=938, col_offset=12)], lineno=938, col_offset=7), [Return(Name('t', Load(), lineno=939, col_offset=15), lineno=939, col_offset=8)], [], lineno=938, col_offset=4), Return(Subscript(Name('t', Load(), lineno=940, col_offset=11), Slice(None, Num(9, lineno=940, col_offset=14), None), Load(), lineno=940, col_offset=11), lineno=940, col_offset=4)], [], lineno=935, col_offset=0), FunctionDef('mktime_tz', arguments([Name('data', Param(), lineno=943, col_offset=14)], None, None, []), [Expr(Str('Turn a 10-tuple as returned by parsedate_tz() into a UTC timestamp.', lineno=944, col_offset=4), lineno=944, col_offset=4), If(Compare(Subscript(Name('data', Load(), lineno=945, col_offset=7), Index(Num(9, lineno=945, col_offset=12)), Load(), lineno=945, col_offset=7), [Is()], [Name('None', Load(), lineno=945, col_offset=18)], lineno=945, col_offset=7), [Return(Call(Attribute(Name('time', Load(), lineno=947, col_offset=15), 'mktime', Load(), lineno=947, col_offset=15), [BinOp(Subscript(Name('data', Load(), lineno=947, col_offset=27), Slice(None, Num(8, lineno=947, col_offset=33), None), Load(), lineno=947, col_offset=27), Add(), Tuple([Num(-1, lineno=947, col_offset=40)], Load(), lineno=947, col_offset=39), lineno=947, col_offset=27)], [], None, None, lineno=947, col_offset=15), lineno=947, col_offset=8)], [Assign([Name('t', Store(), lineno=949, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=949, col_offset=12), 'mktime', Load(), lineno=949, col_offset=12), [BinOp(Subscript(Name('data', Load(), lineno=949, col_offset=24), Slice(None, Num(8, lineno=949, col_offset=30), None), Load(), lineno=949, col_offset=24), Add(), Tuple([Num(0, lineno=949, col_offset=36)], Load(), lineno=949, col_offset=36), lineno=949, col_offset=24)], [], None, None, lineno=949, col_offset=12), lineno=949, col_offset=8), Return(BinOp(BinOp(Name('t', Load(), lineno=950, col_offset=15), Sub(), Subscript(Name('data', Load(), lineno=950, col_offset=19), Index(Num(9, lineno=950, col_offset=24)), Load(), lineno=950, col_offset=19), lineno=950, col_offset=15), Sub(), Attribute(Name('time', Load(), lineno=950, col_offset=29), 'timezone', Load(), lineno=950, col_offset=29), lineno=950, col_offset=27), lineno=950, col_offset=8)], lineno=945, col_offset=4)], [], lineno=943, col_offset=0), FunctionDef('formatdate', arguments([Name('timeval', Param(), lineno=952, col_offset=15)], None, None, [Name('None', Load(), lineno=952, col_offset=23)]), [Expr(Str("Returns time format preferred for Internet standards.\n\n    Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123\n\n    According to RFC 1123, day and month names must always be in\n    English.  If not for that, this code could use strftime().  It\n    can't because strftime() honors the locale and could generated\n    non-English names.\n    ", lineno=961, col_offset=-1), lineno=961, col_offset=-1), If(Compare(Name('timeval', Load(), lineno=962, col_offset=7), [Is()], [Name('None', Load(), lineno=962, col_offset=18)], lineno=962, col_offset=7), [Assign([Name('timeval', Store(), lineno=963, col_offset=8)], Call(Attribute(Name('time', Load(), lineno=963, col_offset=18), 'time', Load(), lineno=963, col_offset=18), [], [], None, None, lineno=963, col_offset=18), lineno=963, col_offset=8)], [], lineno=962, col_offset=4), Assign([Name('timeval', Store(), lineno=964, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=964, col_offset=14), 'gmtime', Load(), lineno=964, col_offset=14), [Name('timeval', Load(), lineno=964, col_offset=26)], [], None, None, lineno=964, col_offset=14), lineno=964, col_offset=4), Return(BinOp(Str('%s, %02d %s %04d %02d:%02d:%02d GMT', lineno=965, col_offset=11), Mod(), Tuple([Subscript(Tuple([Str('Mon', lineno=966, col_offset=13), Str('Tue', lineno=966, col_offset=20), Str('Wed', lineno=966, col_offset=27), Str('Thu', lineno=966, col_offset=34), Str('Fri', lineno=966, col_offset=41), Str('Sat', lineno=966, col_offset=48), Str('Sun', lineno=966, col_offset=55)], Load(), lineno=966, col_offset=13), Index(Subscript(Name('timeval', Load(), lineno=966, col_offset=62), Index(Num(6, lineno=966, col_offset=70)), Load(), lineno=966, col_offset=62)), Load(), lineno=966, col_offset=13), Subscript(Name('timeval', Load(), lineno=967, col_offset=12), Index(Num(2, lineno=967, col_offset=20)), Load(), lineno=967, col_offset=12), Subscript(Tuple([Str('Jan', lineno=968, col_offset=13), Str('Feb', lineno=968, col_offset=20), Str('Mar', lineno=968, col_offset=27), Str('Apr', lineno=968, col_offset=34), Str('May', lineno=968, col_offset=41), Str('Jun', lineno=968, col_offset=48), Str('Jul', lineno=969, col_offset=13), Str('Aug', lineno=969, col_offset=20), Str('Sep', lineno=969, col_offset=27), Str('Oct', lineno=969, col_offset=34), Str('Nov', lineno=969, col_offset=41), Str('Dec', lineno=969, col_offset=48)], Load(), lineno=968, col_offset=13), Index(BinOp(Subscript(Name('timeval', Load(), lineno=969, col_offset=55), Index(Num(1, lineno=969, col_offset=63)), Load(), lineno=969, col_offset=55), Sub(), Num(1, lineno=969, col_offset=66), lineno=969, col_offset=55)), Load(), lineno=968, col_offset=13), Subscript(Name('timeval', Load(), lineno=970, col_offset=32), Index(Num(0, lineno=970, col_offset=40)), Load(), lineno=970, col_offset=32), Subscript(Name('timeval', Load(), lineno=970, col_offset=44), Index(Num(3, lineno=970, col_offset=52)), Load(), lineno=970, col_offset=44), Subscript(Name('timeval', Load(), lineno=970, col_offset=56), Index(Num(4, lineno=970, col_offset=64)), Load(), lineno=970, col_offset=56), Subscript(Name('timeval', Load(), lineno=970, col_offset=68), Index(Num(5, lineno=970, col_offset=76)), Load(), lineno=970, col_offset=68)], Load(), lineno=966, col_offset=12), lineno=965, col_offset=11), lineno=965, col_offset=4)], [], lineno=952, col_offset=0), If(Compare(Name('__name__', Load(), lineno=977, col_offset=3), [Eq()], [Str('__main__', lineno=977, col_offset=15)], lineno=977, col_offset=3), [Import([alias('sys', None), alias('os', None)], lineno=978, col_offset=4), Assign([Name('file', Store(), lineno=979, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=979, col_offset=11), 'path', Load(), lineno=979, col_offset=11), 'join', Load(), lineno=979, col_offset=11), [Subscript(Attribute(Name('os', Load(), lineno=979, col_offset=24), 'environ', Load(), lineno=979, col_offset=24), Index(Str('HOME', lineno=979, col_offset=35)), Load(), lineno=979, col_offset=24), Str('Mail/inbox/1', lineno=979, col_offset=44)], [], None, None, lineno=979, col_offset=11), lineno=979, col_offset=4), If(Subscript(Attribute(Name('sys', Load(), lineno=980, col_offset=7), 'argv', Load(), lineno=980, col_offset=7), Slice(Num(1, lineno=980, col_offset=16), None, None), Load(), lineno=980, col_offset=7), [Assign([Name('file', Store(), lineno=980, col_offset=21)], Subscript(Attribute(Name('sys', Load(), lineno=980, col_offset=28), 'argv', Load(), lineno=980, col_offset=28), Index(Num(1, lineno=980, col_offset=37)), Load(), lineno=980, col_offset=28), lineno=980, col_offset=21)], [], lineno=980, col_offset=4), Assign([Name('f', Store(), lineno=981, col_offset=4)], Call(Name('open', Load(), lineno=981, col_offset=8), [Name('file', Load(), lineno=981, col_offset=13), Str('r', lineno=981, col_offset=19)], [], None, None, lineno=981, col_offset=8), lineno=981, col_offset=4), Assign([Name('m', Store(), lineno=982, col_offset=4)], Call(Name('Message', Load(), lineno=982, col_offset=8), [Name('f', Load(), lineno=982, col_offset=16)], [], None, None, lineno=982, col_offset=8), lineno=982, col_offset=4), Print(None, [Str('From:', lineno=983, col_offset=10), Call(Attribute(Name('m', Load(), lineno=983, col_offset=19), 'getaddr', Load(), lineno=983, col_offset=19), [Str('from', lineno=983, col_offset=29)], [], None, None, lineno=983, col_offset=19)], True, lineno=983, col_offset=4), Print(None, [Str('To:', lineno=984, col_offset=10), Call(Attribute(Name('m', Load(), lineno=984, col_offset=17), 'getaddrlist', Load(), lineno=984, col_offset=17), [Str('to', lineno=984, col_offset=31)], [], None, None, lineno=984, col_offset=17)], True, lineno=984, col_offset=4), Print(None, [Str('Subject:', lineno=985, col_offset=10), Call(Attribute(Name('m', Load(), lineno=985, col_offset=22), 'getheader', Load(), lineno=985, col_offset=22), [Str('subject', lineno=985, col_offset=34)], [], None, None, lineno=985, col_offset=22)], True, lineno=985, col_offset=4), Print(None, [Str('Date:', lineno=986, col_offset=10), Call(Attribute(Name('m', Load(), lineno=986, col_offset=19), 'getheader', Load(), lineno=986, col_offset=19), [Str('date', lineno=986, col_offset=31)], [], None, None, lineno=986, col_offset=19)], True, lineno=986, col_offset=4), Assign([Name('date', Store(), lineno=987, col_offset=4)], Call(Attribute(Name('m', Load(), lineno=987, col_offset=11), 'getdate_tz', Load(), lineno=987, col_offset=11), [Str('date', lineno=987, col_offset=24)], [], None, None, lineno=987, col_offset=11), lineno=987, col_offset=4), Assign([Name('tz', Store(), lineno=988, col_offset=4)], Subscript(Name('date', Load(), lineno=988, col_offset=9), Index(Num(-1, lineno=988, col_offset=15)), Load(), lineno=988, col_offset=9), lineno=988, col_offset=4), Assign([Name('date', Store(), lineno=989, col_offset=4)], Call(Attribute(Name('time', Load(), lineno=989, col_offset=11), 'localtime', Load(), lineno=989, col_offset=11), [Call(Name('mktime_tz', Load(), lineno=989, col_offset=26), [Name('date', Load(), lineno=989, col_offset=36)], [], None, None, lineno=989, col_offset=26)], [], None, None, lineno=989, col_offset=11), lineno=989, col_offset=4), If(Name('date', Load(), lineno=990, col_offset=7), [Print(None, [Str('ParsedDate:', lineno=991, col_offset=14), Call(Attribute(Name('time', Load(), lineno=991, col_offset=29), 'asctime', Load(), lineno=991, col_offset=29), [Name('date', Load(), lineno=991, col_offset=42)], [], None, None, lineno=991, col_offset=29)], False, lineno=991, col_offset=8), Assign([Name('hhmmss', Store(), lineno=992, col_offset=8)], Name('tz', Load(), lineno=992, col_offset=17), lineno=992, col_offset=8), Assign([Tuple([Name('hhmm', Store(), lineno=993, col_offset=8), Name('ss', Store(), lineno=993, col_offset=14)], Store(), lineno=993, col_offset=8)], Call(Name('divmod', Load(), lineno=993, col_offset=19), [Name('hhmmss', Load(), lineno=993, col_offset=26), Num(60, lineno=993, col_offset=34)], [], None, None, lineno=993, col_offset=19), lineno=993, col_offset=8), Assign([Tuple([Name('hh', Store(), lineno=994, col_offset=8), Name('mm', Store(), lineno=994, col_offset=12)], Store(), lineno=994, col_offset=8)], Call(Name('divmod', Load(), lineno=994, col_offset=17), [Name('hhmm', Load(), lineno=994, col_offset=24), Num(60, lineno=994, col_offset=30)], [], None, None, lineno=994, col_offset=17), lineno=994, col_offset=8), Print(None, [BinOp(Str('%+03d%02d', lineno=995, col_offset=14), Mod(), Tuple([Name('hh', Load(), lineno=995, col_offset=29), Name('mm', Load(), lineno=995, col_offset=33)], Load(), lineno=995, col_offset=29), lineno=995, col_offset=14)], False, lineno=995, col_offset=8), If(Name('ss', Load(), lineno=996, col_offset=11), [Print(None, [BinOp(Str('.%02d', lineno=996, col_offset=21), Mod(), Name('ss', Load(), lineno=996, col_offset=31), lineno=996, col_offset=21)], False, lineno=996, col_offset=15)], [], lineno=996, col_offset=8), Print(None, [], True, lineno=997, col_offset=8)], [Print(None, [Str('ParsedDate:', lineno=999, col_offset=14), Name('None', Load(), lineno=999, col_offset=29)], True, lineno=999, col_offset=8)], lineno=990, col_offset=4), Expr(Call(Attribute(Name('m', Load(), lineno=1000, col_offset=4), 'rewindbody', Load(), lineno=1000, col_offset=4), [], [], None, None, lineno=1000, col_offset=4), lineno=1000, col_offset=4), Assign([Name('n', Store(), lineno=1001, col_offset=4)], Num(0, lineno=1001, col_offset=8), lineno=1001, col_offset=4), While(Call(Attribute(Name('f', Load(), lineno=1002, col_offset=10), 'readline', Load(), lineno=1002, col_offset=10), [], [], None, None, lineno=1002, col_offset=10), [AugAssign(Name('n', Store(), lineno=1003, col_offset=8), Add(), Num(1, lineno=1003, col_offset=13), lineno=1003, col_offset=8)], [], lineno=1002, col_offset=4), Print(None, [Str('Lines:', lineno=1004, col_offset=10), Name('n', Load(), lineno=1004, col_offset=20)], True, lineno=1004, col_offset=4), Print(None, [BinOp(Str('-', lineno=1005, col_offset=10), Mult(), Num(70, lineno=1005, col_offset=14), lineno=1005, col_offset=10)], True, lineno=1005, col_offset=4), Print(None, [Str('len =', lineno=1006, col_offset=10), Call(Name('len', Load(), lineno=1006, col_offset=19), [Name('m', Load(), lineno=1006, col_offset=23)], [], None, None, lineno=1006, col_offset=19)], True, lineno=1006, col_offset=4), If(Compare(Str('Date', lineno=1007, col_offset=7), [In()], [Name('m', Load(), lineno=1007, col_offset=17)], lineno=1007, col_offset=7), [Print(None, [Str('Date =', lineno=1007, col_offset=26), Subscript(Name('m', Load(), lineno=1007, col_offset=36), Index(Str('Date', lineno=1007, col_offset=38)), Load(), lineno=1007, col_offset=36)], True, lineno=1007, col_offset=20)], [], lineno=1007, col_offset=4), If(Compare(Str('X-Nonsense', lineno=1008, col_offset=7), [In()], [Name('m', Load(), lineno=1008, col_offset=23)], lineno=1008, col_offset=7), [Pass( lineno=1008, col_offset=26)], [], lineno=1008, col_offset=4), Print(None, [Str('keys =', lineno=1009, col_offset=10), Call(Attribute(Name('m', Load(), lineno=1009, col_offset=20), 'keys', Load(), lineno=1009, col_offset=20), [], [], None, None, lineno=1009, col_offset=20)], True, lineno=1009, col_offset=4), Print(None, [Str('values =', lineno=1010, col_offset=10), Call(Attribute(Name('m', Load(), lineno=1010, col_offset=22), 'values', Load(), lineno=1010, col_offset=22), [], [], None, None, lineno=1010, col_offset=22)], True, lineno=1010, col_offset=4), Print(None, [Str('items =', lineno=1011, col_offset=10), Call(Attribute(Name('m', Load(), lineno=1011, col_offset=21), 'items', Load(), lineno=1011, col_offset=21), [], [], None, None, lineno=1011, col_offset=21)], True, lineno=1011, col_offset=4)], [], lineno=977, col_offset=0)])
