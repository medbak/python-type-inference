Module([ImportFrom('__future__', [alias('nested_scopes', None)], 0, lineno=1, col_offset=0), ImportFrom('__future__', [alias('division', None)], 0, lineno=2, col_offset=0), Import([alias('unittest', None)], lineno=4, col_offset=0), ImportFrom('test', [alias('test_support', None)], 0, lineno=5, col_offset=0), Assign([Name('x', Store(), lineno=7, col_offset=0)], Num(2, lineno=7, col_offset=4), lineno=7, col_offset=0), FunctionDef('nester', arguments([], None, None, []), [Assign([Name('x', Store(), lineno=9, col_offset=4)], Num(3, lineno=9, col_offset=8), lineno=9, col_offset=4), FunctionDef('inner', arguments([], None, None, []), [Return(Name('x', Load(), lineno=11, col_offset=15), lineno=11, col_offset=8)], [], lineno=10, col_offset=4), Return(Call(Name('inner', Load(), lineno=12, col_offset=11), [], [], None, None, lineno=12, col_offset=11), lineno=12, col_offset=4)], [], lineno=8, col_offset=0), ClassDef('TestFuture', [Attribute(Name('unittest', Load(), lineno=15, col_offset=17), 'TestCase', Load(), lineno=15, col_offset=17)], [FunctionDef('test_floor_div_operator', arguments([Name('self', Param(), lineno=17, col_offset=32)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=18, col_offset=8), 'assertEqual', Load(), lineno=18, col_offset=8), [BinOp(Num(7, lineno=18, col_offset=25), FloorDiv(), Num(2, lineno=18, col_offset=30), lineno=18, col_offset=25), Num(3, lineno=18, col_offset=33)], [], None, None, lineno=18, col_offset=8), lineno=18, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('test_true_div_as_default', arguments([Name('self', Param(), lineno=20, col_offset=33)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=21, col_offset=8), 'assertAlmostEqual', Load(), lineno=21, col_offset=8), [BinOp(Num(7, lineno=21, col_offset=31), Div(), Num(2, lineno=21, col_offset=35), lineno=21, col_offset=31), Num(3.5, lineno=21, col_offset=38)], [], None, None, lineno=21, col_offset=8), lineno=21, col_offset=8)], [], lineno=20, col_offset=4), FunctionDef('test_nested_scopes', arguments([Name('self', Param(), lineno=23, col_offset=27)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=24, col_offset=8), 'assertEqual', Load(), lineno=24, col_offset=8), [Call(Name('nester', Load(), lineno=24, col_offset=25), [], [], None, None, lineno=24, col_offset=25), Num(3, lineno=24, col_offset=35)], [], None, None, lineno=24, col_offset=8), lineno=24, col_offset=8)], [], lineno=23, col_offset=4)], [], lineno=15, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('test_support', Load(), lineno=27, col_offset=4), 'run_unittest', Load(), lineno=27, col_offset=4), [Name('TestFuture', Load(), lineno=27, col_offset=30)], [], None, None, lineno=27, col_offset=4), lineno=27, col_offset=4)], [], lineno=26, col_offset=0), If(Compare(Name('__name__', Load(), lineno=29, col_offset=3), [Eq()], [Str('__main__', lineno=29, col_offset=15)], lineno=29, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=30, col_offset=4), [], [], None, None, lineno=30, col_offset=4), lineno=30, col_offset=4)], [], lineno=29, col_offset=0)])
