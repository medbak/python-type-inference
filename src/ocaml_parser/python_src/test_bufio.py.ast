Module([Import([alias('unittest', None)], lineno=1, col_offset=0), ImportFrom('test', [alias('test_support', 'support')], 0, lineno=2, col_offset=0), Import([alias('io', None)], lineno=4, col_offset=0), Import([alias('_pyio', 'pyio')], lineno=5, col_offset=0), Assign([Name('lengths', Store(), lineno=11, col_offset=0)], BinOp(Call(Name('list', Load(), lineno=11, col_offset=10), [Call(Name('range', Load(), lineno=11, col_offset=15), [Num(1, lineno=11, col_offset=21), Num(257, lineno=11, col_offset=24)], [], None, None, lineno=11, col_offset=15)], [], None, None, lineno=11, col_offset=10), Add(), List([Num(512, lineno=11, col_offset=33), Num(1000, lineno=11, col_offset=38), Num(1024, lineno=11, col_offset=44), Num(2048, lineno=11, col_offset=50), Num(4096, lineno=11, col_offset=56), Num(8192, lineno=11, col_offset=62), Num(10000, lineno=11, col_offset=68), Num(16384, lineno=12, col_offset=33), Num(32768, lineno=12, col_offset=40), Num(65536, lineno=12, col_offset=47), Num(1000000, lineno=12, col_offset=54)], Load(), lineno=11, col_offset=32), lineno=11, col_offset=10), lineno=11, col_offset=0), ClassDef('BufferSizeTest', [Attribute(Name('unittest', Load(), lineno=14, col_offset=21), 'TestCase', Load(), lineno=14, col_offset=21)], [FunctionDef('try_one', arguments([Name('self', Param(), lineno=15, col_offset=16), Name('s', Param(), lineno=15, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('support', Load(), lineno=20, col_offset=8), 'unlink', Load(), lineno=20, col_offset=8), [Attribute(Name('support', Load(), lineno=20, col_offset=23), 'TESTFN', Load(), lineno=20, col_offset=23)], [], None, None, lineno=20, col_offset=8), lineno=20, col_offset=8), Assign([Name('f', Store(), lineno=24, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=24, col_offset=12), 'open', Load(), lineno=24, col_offset=12), [Attribute(Name('support', Load(), lineno=24, col_offset=22), 'TESTFN', Load(), lineno=24, col_offset=22), Str('wb', lineno=24, col_offset=38)], [], None, None, lineno=24, col_offset=12), lineno=24, col_offset=8), TryFinally([Expr(Call(Attribute(Name('f', Load(), lineno=27, col_offset=12), 'write', Load(), lineno=27, col_offset=12), [Name('s', Load(), lineno=27, col_offset=20)], [], None, None, lineno=27, col_offset=12), lineno=27, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=28, col_offset=12), 'write', Load(), lineno=28, col_offset=12), [Str('\n', lineno=28, col_offset=20)], [], None, None, lineno=28, col_offset=12), lineno=28, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=29, col_offset=12), 'write', Load(), lineno=29, col_offset=12), [Name('s', Load(), lineno=29, col_offset=20)], [], None, None, lineno=29, col_offset=12), lineno=29, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=30, col_offset=12), 'close', Load(), lineno=30, col_offset=12), [], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=12), Assign([Name('f', Store(), lineno=31, col_offset=12)], Call(Name('open', Load(), lineno=31, col_offset=16), [Attribute(Name('support', Load(), lineno=31, col_offset=21), 'TESTFN', Load(), lineno=31, col_offset=21), Str('rb', lineno=31, col_offset=37)], [], None, None, lineno=31, col_offset=16), lineno=31, col_offset=12), Assign([Name('line', Store(), lineno=32, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=32, col_offset=19), 'readline', Load(), lineno=32, col_offset=19), [], [], None, None, lineno=32, col_offset=19), lineno=32, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=12), 'assertEqual', Load(), lineno=33, col_offset=12), [Name('line', Load(), lineno=33, col_offset=29), BinOp(Name('s', Load(), lineno=33, col_offset=35), Add(), Str('\n', lineno=33, col_offset=39), lineno=33, col_offset=35)], [], None, None, lineno=33, col_offset=12), lineno=33, col_offset=12), Assign([Name('line', Store(), lineno=34, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=34, col_offset=19), 'readline', Load(), lineno=34, col_offset=19), [], [], None, None, lineno=34, col_offset=19), lineno=34, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=35, col_offset=12), 'assertEqual', Load(), lineno=35, col_offset=12), [Name('line', Load(), lineno=35, col_offset=29), Name('s', Load(), lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=12), lineno=35, col_offset=12), Assign([Name('line', Store(), lineno=36, col_offset=12)], Call(Attribute(Name('f', Load(), lineno=36, col_offset=19), 'readline', Load(), lineno=36, col_offset=19), [], [], None, None, lineno=36, col_offset=19), lineno=36, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=12), 'assertTrue', Load(), lineno=37, col_offset=12), [UnaryOp(Not(), Name('line', Load(), lineno=37, col_offset=32), lineno=37, col_offset=28)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=38, col_offset=12), 'close', Load(), lineno=38, col_offset=12), [], [], None, None, lineno=38, col_offset=12), lineno=38, col_offset=12)], [Expr(Call(Attribute(Name('support', Load(), lineno=40, col_offset=12), 'unlink', Load(), lineno=40, col_offset=12), [Attribute(Name('support', Load(), lineno=40, col_offset=27), 'TESTFN', Load(), lineno=40, col_offset=27)], [], None, None, lineno=40, col_offset=12), lineno=40, col_offset=12)], lineno=25, col_offset=8)], [], lineno=15, col_offset=4), FunctionDef('drive_one', arguments([Name('self', Param(), lineno=42, col_offset=18), Name('pattern', Param(), lineno=42, col_offset=24)], None, None, []), [For(Name('length', Store(), lineno=43, col_offset=12), Name('lengths', Load(), lineno=43, col_offset=22), [Assign([Tuple([Name('q', Store(), lineno=49, col_offset=12), Name('r', Store(), lineno=49, col_offset=15)], Store(), lineno=49, col_offset=12)], Call(Name('divmod', Load(), lineno=49, col_offset=19), [Name('length', Load(), lineno=49, col_offset=26), Call(Name('len', Load(), lineno=49, col_offset=34), [Name('pattern', Load(), lineno=49, col_offset=38)], [], None, None, lineno=49, col_offset=34)], [], None, None, lineno=49, col_offset=19), lineno=49, col_offset=12), Assign([Name('teststring', Store(), lineno=50, col_offset=12)], BinOp(BinOp(Name('pattern', Load(), lineno=50, col_offset=25), Mult(), Name('q', Load(), lineno=50, col_offset=35), lineno=50, col_offset=25), Add(), Subscript(Name('pattern', Load(), lineno=50, col_offset=39), Slice(None, Name('r', Load(), lineno=50, col_offset=48), None), Load(), lineno=50, col_offset=39), lineno=50, col_offset=25), lineno=50, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=51, col_offset=12), 'assertEqual', Load(), lineno=51, col_offset=12), [Call(Name('len', Load(), lineno=51, col_offset=29), [Name('teststring', Load(), lineno=51, col_offset=33)], [], None, None, lineno=51, col_offset=29), Name('length', Load(), lineno=51, col_offset=46)], [], None, None, lineno=51, col_offset=12), lineno=51, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=52, col_offset=12), 'try_one', Load(), lineno=52, col_offset=12), [Name('teststring', Load(), lineno=52, col_offset=25)], [], None, None, lineno=52, col_offset=12), lineno=52, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=12), 'try_one', Load(), lineno=53, col_offset=12), [BinOp(Name('teststring', Load(), lineno=53, col_offset=25), Add(), Str('x', lineno=53, col_offset=38), lineno=53, col_offset=25)], [], None, None, lineno=53, col_offset=12), lineno=53, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=12), 'try_one', Load(), lineno=54, col_offset=12), [Subscript(Name('teststring', Load(), lineno=54, col_offset=25), Slice(None, Num(-1, lineno=54, col_offset=38), None), Load(), lineno=54, col_offset=25)], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], [], lineno=43, col_offset=8)], [], lineno=42, col_offset=4), FunctionDef('test_primepat', arguments([Name('self', Param(), lineno=56, col_offset=22)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=59, col_offset=8), 'drive_one', Load(), lineno=59, col_offset=8), [Str('1234567890\x00\x01\x02\x03\x04\x05\x06', lineno=59, col_offset=23)], [], None, None, lineno=59, col_offset=8), lineno=59, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('test_nullpat', arguments([Name('self', Param(), lineno=61, col_offset=21)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), 'drive_one', Load(), lineno=62, col_offset=8), [Call(Name('bytes', Load(), lineno=62, col_offset=23), [Num(1000, lineno=62, col_offset=29)], [], None, None, lineno=62, col_offset=23)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8)], [], lineno=61, col_offset=4)], [], lineno=14, col_offset=0), ClassDef('CBufferSizeTest', [Name('BufferSizeTest', Load(), lineno=65, col_offset=22)], [Assign([Name('open', Store(), lineno=66, col_offset=4)], Attribute(Name('io', Load(), lineno=66, col_offset=11), 'open', Load(), lineno=66, col_offset=11), lineno=66, col_offset=4)], [], lineno=65, col_offset=0), ClassDef('PyBufferSizeTest', [Name('BufferSizeTest', Load(), lineno=68, col_offset=23)], [Assign([Name('open', Store(), lineno=69, col_offset=4)], Call(Name('staticmethod', Load(), lineno=69, col_offset=11), [Attribute(Name('pyio', Load(), lineno=69, col_offset=24), 'open', Load(), lineno=69, col_offset=24)], [], None, None, lineno=69, col_offset=11), lineno=69, col_offset=4)], [], lineno=68, col_offset=0), ClassDef('BuiltinBufferSizeTest', [Name('BufferSizeTest', Load(), lineno=71, col_offset=28)], [Assign([Name('open', Store(), lineno=72, col_offset=4)], Name('open', Load(), lineno=72, col_offset=11), lineno=72, col_offset=4)], [], lineno=71, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Attribute(Name('support', Load(), lineno=76, col_offset=4), 'run_unittest', Load(), lineno=76, col_offset=4), [Name('CBufferSizeTest', Load(), lineno=76, col_offset=25), Name('PyBufferSizeTest', Load(), lineno=76, col_offset=42), Name('BuiltinBufferSizeTest', Load(), lineno=76, col_offset=60)], [], None, None, lineno=76, col_offset=4), lineno=76, col_offset=4)], [], lineno=75, col_offset=0), If(Compare(Name('__name__', Load(), lineno=78, col_offset=3), [Eq()], [Str('__main__', lineno=78, col_offset=15)], lineno=78, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=79, col_offset=4), [], [], None, None, lineno=79, col_offset=4), lineno=79, col_offset=4)], [], lineno=78, col_offset=0)])
