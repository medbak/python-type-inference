Module([Import([alias('os', None)], lineno=1, col_offset=0), Import([alias('sys', None)], lineno=2, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('TESTFN', None), alias('rmtree', None), alias('unlink', None), alias('captured_stdout', None)], 0, lineno=3, col_offset=0), Import([alias('unittest', None)], lineno=5, col_offset=0), Import([alias('trace', None)], lineno=7, col_offset=0), ImportFrom('trace', [alias('CoverageResults', None), alias('Trace', None)], 0, lineno=8, col_offset=0), ImportFrom('test.tracedmodules', [alias('testmod', None)], 0, lineno=10, col_offset=0), FunctionDef('fix_ext_py', arguments([Name('filename', Param(), lineno=15, col_offset=15)], None, None, []), [Expr(Str('Given a .pyc/.pyo filename converts it to the appropriate .py', lineno=16, col_offset=4), lineno=16, col_offset=4), If(Call(Attribute(Name('filename', Load(), lineno=17, col_offset=7), 'endswith', Load(), lineno=17, col_offset=7), [Tuple([Str('.pyc', lineno=17, col_offset=26), Str('.pyo', lineno=17, col_offset=34)], Load(), lineno=17, col_offset=26)], [], None, None, lineno=17, col_offset=7), [Assign([Name('filename', Store(), lineno=18, col_offset=8)], Subscript(Name('filename', Load(), lineno=18, col_offset=19), Slice(None, Num(-1, lineno=18, col_offset=30), None), Load(), lineno=18, col_offset=19), lineno=18, col_offset=8)], [], lineno=17, col_offset=4), Return(Name('filename', Load(), lineno=19, col_offset=11), lineno=19, col_offset=4)], [], lineno=15, col_offset=0), FunctionDef('my_file_and_modname', arguments([], None, None, []), [Expr(Str('The .py file and module name of this file (__file__)', lineno=22, col_offset=4), lineno=22, col_offset=4), Assign([Name('modname', Store(), lineno=23, col_offset=4)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=23, col_offset=14), 'path', Load(), lineno=23, col_offset=14), 'splitext', Load(), lineno=23, col_offset=14), [Call(Attribute(Attribute(Name('os', Load(), lineno=23, col_offset=31), 'path', Load(), lineno=23, col_offset=31), 'basename', Load(), lineno=23, col_offset=31), [Name('__file__', Load(), lineno=23, col_offset=48)], [], None, None, lineno=23, col_offset=31)], [], None, None, lineno=23, col_offset=14), Index(Num(0, lineno=23, col_offset=59)), Load(), lineno=23, col_offset=14), lineno=23, col_offset=4), Return(Tuple([Call(Name('fix_ext_py', Load(), lineno=24, col_offset=11), [Name('__file__', Load(), lineno=24, col_offset=22)], [], None, None, lineno=24, col_offset=11), Name('modname', Load(), lineno=24, col_offset=33)], Load(), lineno=24, col_offset=11), lineno=24, col_offset=4)], [], lineno=21, col_offset=0), FunctionDef('get_firstlineno', arguments([Name('func', Param(), lineno=26, col_offset=20)], None, None, []), [Return(Attribute(Attribute(Name('func', Load(), lineno=27, col_offset=11), '__code__', Load(), lineno=27, col_offset=11), 'co_firstlineno', Load(), lineno=27, col_offset=11), lineno=27, col_offset=4)], [], lineno=26, col_offset=0), FunctionDef('traced_func_linear', arguments([Name('x', Param(), lineno=36, col_offset=23), Name('y', Param(), lineno=36, col_offset=26)], None, None, []), [Assign([Name('a', Store(), lineno=37, col_offset=4)], Name('x', Load(), lineno=37, col_offset=8), lineno=37, col_offset=4), Assign([Name('b', Store(), lineno=38, col_offset=4)], Name('y', Load(), lineno=38, col_offset=8), lineno=38, col_offset=4), Assign([Name('c', Store(), lineno=39, col_offset=4)], BinOp(Name('a', Load(), lineno=39, col_offset=8), Add(), Name('b', Load(), lineno=39, col_offset=12), lineno=39, col_offset=8), lineno=39, col_offset=4), Return(Name('c', Load(), lineno=40, col_offset=11), lineno=40, col_offset=4)], [], lineno=36, col_offset=0), FunctionDef('traced_func_loop', arguments([Name('x', Param(), lineno=42, col_offset=21), Name('y', Param(), lineno=42, col_offset=24)], None, None, []), [Assign([Name('c', Store(), lineno=43, col_offset=4)], Name('x', Load(), lineno=43, col_offset=8), lineno=43, col_offset=4), For(Name('i', Store(), lineno=44, col_offset=8), Call(Name('range', Load(), lineno=44, col_offset=13), [Num(5, lineno=44, col_offset=19)], [], None, None, lineno=44, col_offset=13), [AugAssign(Name('c', Store(), lineno=45, col_offset=8), Add(), Name('y', Load(), lineno=45, col_offset=13), lineno=45, col_offset=8)], [], lineno=44, col_offset=4), Return(Name('c', Load(), lineno=46, col_offset=11), lineno=46, col_offset=4)], [], lineno=42, col_offset=0), FunctionDef('traced_func_importing', arguments([Name('x', Param(), lineno=48, col_offset=26), Name('y', Param(), lineno=48, col_offset=29)], None, None, []), [Return(BinOp(BinOp(Name('x', Load(), lineno=49, col_offset=11), Add(), Name('y', Load(), lineno=49, col_offset=15), lineno=49, col_offset=11), Add(), Call(Attribute(Name('testmod', Load(), lineno=49, col_offset=19), 'func', Load(), lineno=49, col_offset=19), [Num(1, lineno=49, col_offset=32)], [], None, None, lineno=49, col_offset=19), lineno=49, col_offset=17), lineno=49, col_offset=4)], [], lineno=48, col_offset=0), FunctionDef('traced_func_simple_caller', arguments([Name('x', Param(), lineno=51, col_offset=30)], None, None, []), [Assign([Name('c', Store(), lineno=52, col_offset=4)], Call(Name('traced_func_linear', Load(), lineno=52, col_offset=8), [Name('x', Load(), lineno=52, col_offset=27), Name('x', Load(), lineno=52, col_offset=30)], [], None, None, lineno=52, col_offset=8), lineno=52, col_offset=4), Return(BinOp(Name('c', Load(), lineno=53, col_offset=11), Add(), Name('x', Load(), lineno=53, col_offset=15), lineno=53, col_offset=11), lineno=53, col_offset=4)], [], lineno=51, col_offset=0), FunctionDef('traced_func_importing_caller', arguments([Name('x', Param(), lineno=55, col_offset=33)], None, None, []), [Assign([Name('k', Store(), lineno=56, col_offset=4)], Call(Name('traced_func_simple_caller', Load(), lineno=56, col_offset=8), [Name('x', Load(), lineno=56, col_offset=34)], [], None, None, lineno=56, col_offset=8), lineno=56, col_offset=4), AugAssign(Name('k', Store(), lineno=57, col_offset=4), Add(), Call(Name('traced_func_importing', Load(), lineno=57, col_offset=9), [Name('k', Load(), lineno=57, col_offset=31), Name('x', Load(), lineno=57, col_offset=34)], [], None, None, lineno=57, col_offset=9), lineno=57, col_offset=4), Return(Name('k', Load(), lineno=58, col_offset=11), lineno=58, col_offset=4)], [], lineno=55, col_offset=0), FunctionDef('traced_func_generator', arguments([Name('num', Param(), lineno=60, col_offset=26)], None, None, []), [Assign([Name('c', Store(), lineno=61, col_offset=4)], Num(5, lineno=61, col_offset=8), lineno=61, col_offset=4), For(Name('i', Store(), lineno=62, col_offset=8), Call(Name('range', Load(), lineno=62, col_offset=13), [Name('num', Load(), lineno=62, col_offset=19)], [], None, None, lineno=62, col_offset=13), [Expr(Yield(BinOp(Name('i', Load(), lineno=63, col_offset=14), Add(), Name('c', Load(), lineno=63, col_offset=18), lineno=63, col_offset=14), lineno=63, col_offset=8), lineno=63, col_offset=8)], [], lineno=62, col_offset=4)], [], lineno=60, col_offset=0), FunctionDef('traced_func_calling_generator', arguments([], None, None, []), [Assign([Name('k', Store(), lineno=66, col_offset=4)], Num(0, lineno=66, col_offset=8), lineno=66, col_offset=4), For(Name('i', Store(), lineno=67, col_offset=8), Call(Name('traced_func_generator', Load(), lineno=67, col_offset=13), [Num(10, lineno=67, col_offset=35)], [], None, None, lineno=67, col_offset=13), [AugAssign(Name('k', Store(), lineno=68, col_offset=8), Add(), Name('i', Load(), lineno=68, col_offset=13), lineno=68, col_offset=8)], [], lineno=67, col_offset=4)], [], lineno=65, col_offset=0), FunctionDef('traced_doubler', arguments([Name('num', Param(), lineno=70, col_offset=19)], None, None, []), [Return(BinOp(Name('num', Load(), lineno=71, col_offset=11), Mult(), Num(2, lineno=71, col_offset=17), lineno=71, col_offset=11), lineno=71, col_offset=4)], [], lineno=70, col_offset=0), FunctionDef('traced_caller_list_comprehension', arguments([], None, None, []), [Assign([Name('k', Store(), lineno=74, col_offset=4)], Num(10, lineno=74, col_offset=8), lineno=74, col_offset=4), Assign([Name('mylist', Store(), lineno=75, col_offset=4)], ListComp(Call(Name('traced_doubler', Load(), lineno=75, col_offset=14), [Name('i', Load(), lineno=75, col_offset=29)], [], None, None, lineno=75, col_offset=14), [comprehension(Name('i', Store(), lineno=75, col_offset=36), Call(Name('range', Load(), lineno=75, col_offset=41), [Name('k', Load(), lineno=75, col_offset=47)], [], None, None, lineno=75, col_offset=41), [])], lineno=75, col_offset=14), lineno=75, col_offset=4), Return(Name('mylist', Load(), lineno=76, col_offset=11), lineno=76, col_offset=4)], [], lineno=73, col_offset=0), ClassDef('TracedClass', [Name('object', Load(), lineno=79, col_offset=18)], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=80, col_offset=17), Name('x', Param(), lineno=80, col_offset=23)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=81, col_offset=8), 'a', Store(), lineno=81, col_offset=8)], Name('x', Load(), lineno=81, col_offset=17), lineno=81, col_offset=8)], [], lineno=80, col_offset=4), FunctionDef('inst_method_linear', arguments([Name('self', Param(), lineno=83, col_offset=27), Name('y', Param(), lineno=83, col_offset=33)], None, None, []), [Return(BinOp(Attribute(Name('self', Load(), lineno=84, col_offset=15), 'a', Load(), lineno=84, col_offset=15), Add(), Name('y', Load(), lineno=84, col_offset=24), lineno=84, col_offset=15), lineno=84, col_offset=8)], [], lineno=83, col_offset=4), FunctionDef('inst_method_calling', arguments([Name('self', Param(), lineno=86, col_offset=28), Name('x', Param(), lineno=86, col_offset=34)], None, None, []), [Assign([Name('c', Store(), lineno=87, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=87, col_offset=12), 'inst_method_linear', Load(), lineno=87, col_offset=12), [Name('x', Load(), lineno=87, col_offset=36)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=8), Return(BinOp(Name('c', Load(), lineno=88, col_offset=15), Add(), Call(Name('traced_func_linear', Load(), lineno=88, col_offset=19), [Name('x', Load(), lineno=88, col_offset=38), Name('c', Load(), lineno=88, col_offset=41)], [], None, None, lineno=88, col_offset=19), lineno=88, col_offset=15), lineno=88, col_offset=8)], [], lineno=86, col_offset=4), FunctionDef('class_method_linear', arguments([Name('cls', Param(), lineno=91, col_offset=28), Name('y', Param(), lineno=91, col_offset=33)], None, None, []), [Return(BinOp(Name('y', Load(), lineno=92, col_offset=15), Mult(), Num(2, lineno=92, col_offset=19), lineno=92, col_offset=15), lineno=92, col_offset=8)], [Name('classmethod', Load(), lineno=90, col_offset=5)], lineno=90, col_offset=4), FunctionDef('static_method_linear', arguments([Name('y', Param(), lineno=95, col_offset=29)], None, None, []), [Return(BinOp(Name('y', Load(), lineno=96, col_offset=15), Mult(), Num(2, lineno=96, col_offset=19), lineno=96, col_offset=15), lineno=96, col_offset=8)], [Name('staticmethod', Load(), lineno=94, col_offset=5)], lineno=94, col_offset=4)], [], lineno=79, col_offset=0), ClassDef('TestLineCounts', [Attribute(Name('unittest', Load(), lineno=102, col_offset=21), 'TestCase', Load(), lineno=102, col_offset=21)], [Expr(Str('White-box testing of line-counting, via runfunc', lineno=103, col_offset=4), lineno=103, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=104, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=105, col_offset=8), 'tracer', Store(), lineno=105, col_offset=8)], Call(Name('Trace', Load(), lineno=105, col_offset=22), [], [keyword('count', Num(1, lineno=105, col_offset=34)), keyword('trace', Num(0, lineno=105, col_offset=43)), keyword('countfuncs', Num(0, lineno=105, col_offset=57)), keyword('countcallers', Num(0, lineno=105, col_offset=73))], None, None, lineno=105, col_offset=22), lineno=105, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=106, col_offset=8), 'my_py_filename', Store(), lineno=106, col_offset=8)], Call(Name('fix_ext_py', Load(), lineno=106, col_offset=30), [Name('__file__', Load(), lineno=106, col_offset=41)], [], None, None, lineno=106, col_offset=30), lineno=106, col_offset=8)], [], lineno=104, col_offset=4), FunctionDef('test_traced_func_linear', arguments([Name('self', Param(), lineno=108, col_offset=32)], None, None, []), [Assign([Name('result', Store(), lineno=109, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=109, col_offset=17), 'tracer', Load(), lineno=109, col_offset=17), 'runfunc', Load(), lineno=109, col_offset=17), [Name('traced_func_linear', Load(), lineno=109, col_offset=37), Num(2, lineno=109, col_offset=57), Num(5, lineno=109, col_offset=60)], [], None, None, lineno=109, col_offset=17), lineno=109, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=110, col_offset=8), 'assertEqual', Load(), lineno=110, col_offset=8), [Name('result', Load(), lineno=110, col_offset=25), Num(7, lineno=110, col_offset=33)], [], None, None, lineno=110, col_offset=8), lineno=110, col_offset=8), Assign([Name('expected', Store(), lineno=113, col_offset=8)], Dict([], [], lineno=113, col_offset=19), lineno=113, col_offset=8), Assign([Name('firstlineno', Store(), lineno=114, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=114, col_offset=22), [Name('traced_func_linear', Load(), lineno=114, col_offset=38)], [], None, None, lineno=114, col_offset=22), lineno=114, col_offset=8), For(Name('i', Store(), lineno=115, col_offset=12), Call(Name('range', Load(), lineno=115, col_offset=17), [Num(1, lineno=115, col_offset=23), Num(5, lineno=115, col_offset=26)], [], None, None, lineno=115, col_offset=17), [Assign([Subscript(Name('expected', Load(), lineno=116, col_offset=12), Index(Tuple([Attribute(Name('self', Load(), lineno=116, col_offset=22), 'my_py_filename', Load(), lineno=116, col_offset=22), BinOp(Name('firstlineno', Load(), lineno=116, col_offset=43), Add(), Name('i', Load(), lineno=116, col_offset=58), lineno=116, col_offset=43)], Load(), lineno=116, col_offset=22)), Store(), lineno=116, col_offset=12)], Num(1, lineno=116, col_offset=64), lineno=116, col_offset=12)], [], lineno=115, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=118, col_offset=8), 'assertEqual', Load(), lineno=118, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=118, col_offset=25), 'tracer', Load(), lineno=118, col_offset=25), 'results', Load(), lineno=118, col_offset=25), [], [], None, None, lineno=118, col_offset=25), 'counts', Load(), lineno=118, col_offset=25), Name('expected', Load(), lineno=118, col_offset=55)], [], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8)], [], lineno=108, col_offset=4), FunctionDef('test_traced_func_loop', arguments([Name('self', Param(), lineno=120, col_offset=30)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=121, col_offset=8), 'tracer', Load(), lineno=121, col_offset=8), 'runfunc', Load(), lineno=121, col_offset=8), [Name('traced_func_loop', Load(), lineno=121, col_offset=28), Num(2, lineno=121, col_offset=46), Num(3, lineno=121, col_offset=49)], [], None, None, lineno=121, col_offset=8), lineno=121, col_offset=8), Assign([Name('firstlineno', Store(), lineno=123, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=123, col_offset=22), [Name('traced_func_loop', Load(), lineno=123, col_offset=38)], [], None, None, lineno=123, col_offset=22), lineno=123, col_offset=8), Assign([Name('expected', Store(), lineno=124, col_offset=8)], Dict([Tuple([Attribute(Name('self', Load(), lineno=125, col_offset=13), 'my_py_filename', Load(), lineno=125, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=125, col_offset=34), Add(), Num(1, lineno=125, col_offset=48), lineno=125, col_offset=34)], Load(), lineno=125, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=126, col_offset=13), 'my_py_filename', Load(), lineno=126, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=126, col_offset=34), Add(), Num(2, lineno=126, col_offset=48), lineno=126, col_offset=34)], Load(), lineno=126, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=127, col_offset=13), 'my_py_filename', Load(), lineno=127, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=127, col_offset=34), Add(), Num(3, lineno=127, col_offset=48), lineno=127, col_offset=34)], Load(), lineno=127, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=128, col_offset=13), 'my_py_filename', Load(), lineno=128, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=128, col_offset=34), Add(), Num(4, lineno=128, col_offset=48), lineno=128, col_offset=34)], Load(), lineno=128, col_offset=13)], [Num(1, lineno=125, col_offset=52), Num(6, lineno=126, col_offset=52), Num(5, lineno=127, col_offset=52), Num(1, lineno=128, col_offset=52)], lineno=124, col_offset=19), lineno=124, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=130, col_offset=8), 'assertEqual', Load(), lineno=130, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=130, col_offset=25), 'tracer', Load(), lineno=130, col_offset=25), 'results', Load(), lineno=130, col_offset=25), [], [], None, None, lineno=130, col_offset=25), 'counts', Load(), lineno=130, col_offset=25), Name('expected', Load(), lineno=130, col_offset=55)], [], None, None, lineno=130, col_offset=8), lineno=130, col_offset=8)], [], lineno=120, col_offset=4), FunctionDef('test_traced_func_importing', arguments([Name('self', Param(), lineno=132, col_offset=35)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=133, col_offset=8), 'tracer', Load(), lineno=133, col_offset=8), 'runfunc', Load(), lineno=133, col_offset=8), [Name('traced_func_importing', Load(), lineno=133, col_offset=28), Num(2, lineno=133, col_offset=51), Num(5, lineno=133, col_offset=54)], [], None, None, lineno=133, col_offset=8), lineno=133, col_offset=8), Assign([Name('firstlineno', Store(), lineno=135, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=135, col_offset=22), [Name('traced_func_importing', Load(), lineno=135, col_offset=38)], [], None, None, lineno=135, col_offset=22), lineno=135, col_offset=8), Assign([Name('expected', Store(), lineno=136, col_offset=8)], Dict([Tuple([Attribute(Name('self', Load(), lineno=137, col_offset=13), 'my_py_filename', Load(), lineno=137, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=137, col_offset=34), Add(), Num(1, lineno=137, col_offset=48), lineno=137, col_offset=34)], Load(), lineno=137, col_offset=13), Tuple([Call(Name('fix_ext_py', Load(), lineno=138, col_offset=13), [Attribute(Name('testmod', Load(), lineno=138, col_offset=24), '__file__', Load(), lineno=138, col_offset=24)], [], None, None, lineno=138, col_offset=13), Num(2, lineno=138, col_offset=43)], Load(), lineno=138, col_offset=13), Tuple([Call(Name('fix_ext_py', Load(), lineno=139, col_offset=13), [Attribute(Name('testmod', Load(), lineno=139, col_offset=24), '__file__', Load(), lineno=139, col_offset=24)], [], None, None, lineno=139, col_offset=13), Num(3, lineno=139, col_offset=43)], Load(), lineno=139, col_offset=13)], [Num(1, lineno=137, col_offset=52), Num(1, lineno=138, col_offset=47), Num(1, lineno=139, col_offset=47)], lineno=136, col_offset=19), lineno=136, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=142, col_offset=8), 'assertEqual', Load(), lineno=142, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=142, col_offset=25), 'tracer', Load(), lineno=142, col_offset=25), 'results', Load(), lineno=142, col_offset=25), [], [], None, None, lineno=142, col_offset=25), 'counts', Load(), lineno=142, col_offset=25), Name('expected', Load(), lineno=142, col_offset=55)], [], None, None, lineno=142, col_offset=8), lineno=142, col_offset=8)], [], lineno=132, col_offset=4), FunctionDef('test_trace_func_generator', arguments([Name('self', Param(), lineno=144, col_offset=34)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=145, col_offset=8), 'tracer', Load(), lineno=145, col_offset=8), 'runfunc', Load(), lineno=145, col_offset=8), [Name('traced_func_calling_generator', Load(), lineno=145, col_offset=28)], [], None, None, lineno=145, col_offset=8), lineno=145, col_offset=8), Assign([Name('firstlineno_calling', Store(), lineno=147, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=147, col_offset=30), [Name('traced_func_calling_generator', Load(), lineno=147, col_offset=46)], [], None, None, lineno=147, col_offset=30), lineno=147, col_offset=8), Assign([Name('firstlineno_gen', Store(), lineno=148, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=148, col_offset=26), [Name('traced_func_generator', Load(), lineno=148, col_offset=42)], [], None, None, lineno=148, col_offset=26), lineno=148, col_offset=8), Assign([Name('expected', Store(), lineno=149, col_offset=8)], Dict([Tuple([Attribute(Name('self', Load(), lineno=150, col_offset=13), 'my_py_filename', Load(), lineno=150, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=150, col_offset=34), Add(), Num(1, lineno=150, col_offset=56), lineno=150, col_offset=34)], Load(), lineno=150, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=151, col_offset=13), 'my_py_filename', Load(), lineno=151, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=151, col_offset=34), Add(), Num(2, lineno=151, col_offset=56), lineno=151, col_offset=34)], Load(), lineno=151, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=152, col_offset=13), 'my_py_filename', Load(), lineno=152, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=152, col_offset=34), Add(), Num(3, lineno=152, col_offset=56), lineno=152, col_offset=34)], Load(), lineno=152, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=153, col_offset=13), 'my_py_filename', Load(), lineno=153, col_offset=13), BinOp(Name('firstlineno_gen', Load(), lineno=153, col_offset=34), Add(), Num(1, lineno=153, col_offset=52), lineno=153, col_offset=34)], Load(), lineno=153, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=154, col_offset=13), 'my_py_filename', Load(), lineno=154, col_offset=13), BinOp(Name('firstlineno_gen', Load(), lineno=154, col_offset=34), Add(), Num(2, lineno=154, col_offset=52), lineno=154, col_offset=34)], Load(), lineno=154, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=155, col_offset=13), 'my_py_filename', Load(), lineno=155, col_offset=13), BinOp(Name('firstlineno_gen', Load(), lineno=155, col_offset=34), Add(), Num(3, lineno=155, col_offset=52), lineno=155, col_offset=34)], Load(), lineno=155, col_offset=13)], [Num(1, lineno=150, col_offset=60), Num(11, lineno=151, col_offset=60), Num(10, lineno=152, col_offset=60), Num(1, lineno=153, col_offset=56), Num(11, lineno=154, col_offset=56), Num(10, lineno=155, col_offset=56)], lineno=149, col_offset=19), lineno=149, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=157, col_offset=8), 'assertEqual', Load(), lineno=157, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=157, col_offset=25), 'tracer', Load(), lineno=157, col_offset=25), 'results', Load(), lineno=157, col_offset=25), [], [], None, None, lineno=157, col_offset=25), 'counts', Load(), lineno=157, col_offset=25), Name('expected', Load(), lineno=157, col_offset=55)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8)], [], lineno=144, col_offset=4), FunctionDef('test_trace_list_comprehension', arguments([Name('self', Param(), lineno=159, col_offset=38)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=160, col_offset=8), 'tracer', Load(), lineno=160, col_offset=8), 'runfunc', Load(), lineno=160, col_offset=8), [Name('traced_caller_list_comprehension', Load(), lineno=160, col_offset=28)], [], None, None, lineno=160, col_offset=8), lineno=160, col_offset=8), Assign([Name('firstlineno_calling', Store(), lineno=162, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=162, col_offset=30), [Name('traced_caller_list_comprehension', Load(), lineno=162, col_offset=46)], [], None, None, lineno=162, col_offset=30), lineno=162, col_offset=8), Assign([Name('firstlineno_called', Store(), lineno=163, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=163, col_offset=29), [Name('traced_doubler', Load(), lineno=163, col_offset=45)], [], None, None, lineno=163, col_offset=29), lineno=163, col_offset=8), Assign([Name('expected', Store(), lineno=164, col_offset=8)], Dict([Tuple([Attribute(Name('self', Load(), lineno=165, col_offset=13), 'my_py_filename', Load(), lineno=165, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=165, col_offset=34), Add(), Num(1, lineno=165, col_offset=56), lineno=165, col_offset=34)], Load(), lineno=165, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=166, col_offset=13), 'my_py_filename', Load(), lineno=166, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=166, col_offset=34), Add(), Num(2, lineno=166, col_offset=56), lineno=166, col_offset=34)], Load(), lineno=166, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=167, col_offset=13), 'my_py_filename', Load(), lineno=167, col_offset=13), BinOp(Name('firstlineno_calling', Load(), lineno=167, col_offset=34), Add(), Num(3, lineno=167, col_offset=56), lineno=167, col_offset=34)], Load(), lineno=167, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=168, col_offset=13), 'my_py_filename', Load(), lineno=168, col_offset=13), BinOp(Name('firstlineno_called', Load(), lineno=168, col_offset=34), Add(), Num(1, lineno=168, col_offset=55), lineno=168, col_offset=34)], Load(), lineno=168, col_offset=13)], [Num(1, lineno=165, col_offset=60), Num(11, lineno=166, col_offset=60), Num(1, lineno=167, col_offset=60), Num(10, lineno=168, col_offset=59)], lineno=164, col_offset=19), lineno=164, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=170, col_offset=8), 'assertEqual', Load(), lineno=170, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=170, col_offset=25), 'tracer', Load(), lineno=170, col_offset=25), 'results', Load(), lineno=170, col_offset=25), [], [], None, None, lineno=170, col_offset=25), 'counts', Load(), lineno=170, col_offset=25), Name('expected', Load(), lineno=170, col_offset=55)], [], None, None, lineno=170, col_offset=8), lineno=170, col_offset=8)], [], lineno=159, col_offset=4), FunctionDef('test_linear_methods', arguments([Name('self', Param(), lineno=173, col_offset=28)], None, None, []), [For(Name('methname', Store(), lineno=177, col_offset=12), List([Str('inst_method_linear', lineno=177, col_offset=25)], Load(), lineno=177, col_offset=24), [Assign([Name('tracer', Store(), lineno=178, col_offset=12)], Call(Name('Trace', Load(), lineno=178, col_offset=21), [], [keyword('count', Num(1, lineno=178, col_offset=33)), keyword('trace', Num(0, lineno=178, col_offset=42)), keyword('countfuncs', Num(0, lineno=178, col_offset=56)), keyword('countcallers', Num(0, lineno=178, col_offset=72))], None, None, lineno=178, col_offset=21), lineno=178, col_offset=12), Assign([Name('traced_obj', Store(), lineno=179, col_offset=12)], Call(Name('TracedClass', Load(), lineno=179, col_offset=25), [Num(25, lineno=179, col_offset=37)], [], None, None, lineno=179, col_offset=25), lineno=179, col_offset=12), Assign([Name('method', Store(), lineno=180, col_offset=12)], Call(Name('getattr', Load(), lineno=180, col_offset=21), [Name('traced_obj', Load(), lineno=180, col_offset=29), Name('methname', Load(), lineno=180, col_offset=41)], [], None, None, lineno=180, col_offset=21), lineno=180, col_offset=12), Expr(Call(Attribute(Name('tracer', Load(), lineno=181, col_offset=12), 'runfunc', Load(), lineno=181, col_offset=12), [Name('method', Load(), lineno=181, col_offset=27), Num(20, lineno=181, col_offset=35)], [], None, None, lineno=181, col_offset=12), lineno=181, col_offset=12), Assign([Name('firstlineno', Store(), lineno=183, col_offset=12)], Call(Name('get_firstlineno', Load(), lineno=183, col_offset=26), [Name('method', Load(), lineno=183, col_offset=42)], [], None, None, lineno=183, col_offset=26), lineno=183, col_offset=12), Assign([Name('expected', Store(), lineno=184, col_offset=12)], Dict([Tuple([Attribute(Name('self', Load(), lineno=185, col_offset=17), 'my_py_filename', Load(), lineno=185, col_offset=17), BinOp(Name('firstlineno', Load(), lineno=185, col_offset=38), Add(), Num(1, lineno=185, col_offset=52), lineno=185, col_offset=38)], Load(), lineno=185, col_offset=17)], [Num(1, lineno=185, col_offset=56)], lineno=184, col_offset=23), lineno=184, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=187, col_offset=12), 'assertEqual', Load(), lineno=187, col_offset=12), [Attribute(Call(Attribute(Name('tracer', Load(), lineno=187, col_offset=29), 'results', Load(), lineno=187, col_offset=29), [], [], None, None, lineno=187, col_offset=29), 'counts', Load(), lineno=187, col_offset=29), Name('expected', Load(), lineno=187, col_offset=54)], [], None, None, lineno=187, col_offset=12), lineno=187, col_offset=12)], [], lineno=177, col_offset=8)], [], lineno=173, col_offset=4)], [], lineno=102, col_offset=0), ClassDef('TestRunExecCounts', [Attribute(Name('unittest', Load(), lineno=189, col_offset=24), 'TestCase', Load(), lineno=189, col_offset=24)], [Expr(Str('A simple sanity test of line-counting, via runctx (exec)', lineno=190, col_offset=4), lineno=190, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=191, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=192, col_offset=8), 'my_py_filename', Store(), lineno=192, col_offset=8)], Call(Name('fix_ext_py', Load(), lineno=192, col_offset=30), [Name('__file__', Load(), lineno=192, col_offset=41)], [], None, None, lineno=192, col_offset=30), lineno=192, col_offset=8)], [], lineno=191, col_offset=4), FunctionDef('test_exec_counts', arguments([Name('self', Param(), lineno=194, col_offset=25)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=195, col_offset=8), 'tracer', Store(), lineno=195, col_offset=8)], Call(Name('Trace', Load(), lineno=195, col_offset=22), [], [keyword('count', Num(1, lineno=195, col_offset=34)), keyword('trace', Num(0, lineno=195, col_offset=43)), keyword('countfuncs', Num(0, lineno=195, col_offset=57)), keyword('countcallers', Num(0, lineno=195, col_offset=73))], None, None, lineno=195, col_offset=22), lineno=195, col_offset=8), Assign([Name('code', Store(), lineno=196, col_offset=8)], Str('traced_func_loop(2, 5)', lineno=196, col_offset=15), lineno=196, col_offset=8), Assign([Name('code', Store(), lineno=197, col_offset=8)], Call(Name('compile', Load(), lineno=197, col_offset=15), [Name('code', Load(), lineno=197, col_offset=23), Name('__file__', Load(), lineno=197, col_offset=29), Str('exec', lineno=197, col_offset=39)], [], None, None, lineno=197, col_offset=15), lineno=197, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=198, col_offset=8), 'tracer', Load(), lineno=198, col_offset=8), 'runctx', Load(), lineno=198, col_offset=8), [Name('code', Load(), lineno=198, col_offset=27), Call(Name('globals', Load(), lineno=198, col_offset=33), [], [], None, None, lineno=198, col_offset=33), Call(Name('vars', Load(), lineno=198, col_offset=44), [], [], None, None, lineno=198, col_offset=44)], [], None, None, lineno=198, col_offset=8), lineno=198, col_offset=8), Assign([Name('firstlineno', Store(), lineno=200, col_offset=8)], Call(Name('get_firstlineno', Load(), lineno=200, col_offset=22), [Name('traced_func_loop', Load(), lineno=200, col_offset=38)], [], None, None, lineno=200, col_offset=22), lineno=200, col_offset=8), Assign([Name('expected', Store(), lineno=201, col_offset=8)], Dict([Tuple([Attribute(Name('self', Load(), lineno=202, col_offset=13), 'my_py_filename', Load(), lineno=202, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=202, col_offset=34), Add(), Num(1, lineno=202, col_offset=48), lineno=202, col_offset=34)], Load(), lineno=202, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=203, col_offset=13), 'my_py_filename', Load(), lineno=203, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=203, col_offset=34), Add(), Num(2, lineno=203, col_offset=48), lineno=203, col_offset=34)], Load(), lineno=203, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=204, col_offset=13), 'my_py_filename', Load(), lineno=204, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=204, col_offset=34), Add(), Num(3, lineno=204, col_offset=48), lineno=204, col_offset=34)], Load(), lineno=204, col_offset=13), Tuple([Attribute(Name('self', Load(), lineno=205, col_offset=13), 'my_py_filename', Load(), lineno=205, col_offset=13), BinOp(Name('firstlineno', Load(), lineno=205, col_offset=34), Add(), Num(4, lineno=205, col_offset=48), lineno=205, col_offset=34)], Load(), lineno=205, col_offset=13)], [Num(1, lineno=202, col_offset=52), Num(6, lineno=203, col_offset=52), Num(5, lineno=204, col_offset=52), Num(1, lineno=205, col_offset=52)], lineno=201, col_offset=19), lineno=201, col_offset=8), For(Name('k', Store(), lineno=212, col_offset=12), Call(Attribute(Name('expected', Load(), lineno=212, col_offset=17), 'keys', Load(), lineno=212, col_offset=17), [], [], None, None, lineno=212, col_offset=17), [Expr(Call(Attribute(Name('self', Load(), lineno=213, col_offset=12), 'assertEqual', Load(), lineno=213, col_offset=12), [Subscript(Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=213, col_offset=29), 'tracer', Load(), lineno=213, col_offset=29), 'results', Load(), lineno=213, col_offset=29), [], [], None, None, lineno=213, col_offset=29), 'counts', Load(), lineno=213, col_offset=29), Index(Name('k', Load(), lineno=213, col_offset=58)), Load(), lineno=213, col_offset=29), Subscript(Name('expected', Load(), lineno=213, col_offset=62), Index(Name('k', Load(), lineno=213, col_offset=71)), Load(), lineno=213, col_offset=62)], [], None, None, lineno=213, col_offset=12), lineno=213, col_offset=12)], [], lineno=212, col_offset=8)], [], lineno=194, col_offset=4)], [], lineno=189, col_offset=0), ClassDef('TestFuncs', [Attribute(Name('unittest', Load(), lineno=216, col_offset=16), 'TestCase', Load(), lineno=216, col_offset=16)], [Expr(Str('White-box testing of funcs tracing', lineno=217, col_offset=4), lineno=217, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=218, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), 'tracer', Store(), lineno=219, col_offset=8)], Call(Name('Trace', Load(), lineno=219, col_offset=22), [], [keyword('count', Num(0, lineno=219, col_offset=34)), keyword('trace', Num(0, lineno=219, col_offset=43)), keyword('countfuncs', Num(1, lineno=219, col_offset=57))], None, None, lineno=219, col_offset=22), lineno=219, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=220, col_offset=8), 'filemod', Store(), lineno=220, col_offset=8)], Call(Name('my_file_and_modname', Load(), lineno=220, col_offset=23), [], [], None, None, lineno=220, col_offset=23), lineno=220, col_offset=8)], [], lineno=218, col_offset=4), FunctionDef('test_simple_caller', arguments([Name('self', Param(), lineno=222, col_offset=27)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=223, col_offset=8), 'tracer', Load(), lineno=223, col_offset=8), 'runfunc', Load(), lineno=223, col_offset=8), [Name('traced_func_simple_caller', Load(), lineno=223, col_offset=28), Num(1, lineno=223, col_offset=55)], [], None, None, lineno=223, col_offset=8), lineno=223, col_offset=8), Assign([Name('expected', Store(), lineno=225, col_offset=8)], Dict([BinOp(Attribute(Name('self', Load(), lineno=226, col_offset=12), 'filemod', Load(), lineno=226, col_offset=12), Add(), Tuple([Str('traced_func_simple_caller', lineno=226, col_offset=28)], Load(), lineno=226, col_offset=28), lineno=226, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=227, col_offset=12), 'filemod', Load(), lineno=227, col_offset=12), Add(), Tuple([Str('traced_func_linear', lineno=227, col_offset=28)], Load(), lineno=227, col_offset=28), lineno=227, col_offset=12)], [Num(1, lineno=226, col_offset=59), Num(1, lineno=227, col_offset=52)], lineno=225, col_offset=19), lineno=225, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=229, col_offset=8), 'assertEqual', Load(), lineno=229, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=229, col_offset=25), 'tracer', Load(), lineno=229, col_offset=25), 'results', Load(), lineno=229, col_offset=25), [], [], None, None, lineno=229, col_offset=25), 'calledfuncs', Load(), lineno=229, col_offset=25), Name('expected', Load(), lineno=229, col_offset=60)], [], None, None, lineno=229, col_offset=8), lineno=229, col_offset=8)], [], lineno=222, col_offset=4), FunctionDef('test_loop_caller_importing', arguments([Name('self', Param(), lineno=231, col_offset=35)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=232, col_offset=8), 'tracer', Load(), lineno=232, col_offset=8), 'runfunc', Load(), lineno=232, col_offset=8), [Name('traced_func_importing_caller', Load(), lineno=232, col_offset=28), Num(1, lineno=232, col_offset=58)], [], None, None, lineno=232, col_offset=8), lineno=232, col_offset=8), Assign([Name('expected', Store(), lineno=234, col_offset=8)], Dict([BinOp(Attribute(Name('self', Load(), lineno=235, col_offset=12), 'filemod', Load(), lineno=235, col_offset=12), Add(), Tuple([Str('traced_func_simple_caller', lineno=235, col_offset=28)], Load(), lineno=235, col_offset=28), lineno=235, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=236, col_offset=12), 'filemod', Load(), lineno=236, col_offset=12), Add(), Tuple([Str('traced_func_linear', lineno=236, col_offset=28)], Load(), lineno=236, col_offset=28), lineno=236, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=237, col_offset=12), 'filemod', Load(), lineno=237, col_offset=12), Add(), Tuple([Str('traced_func_importing_caller', lineno=237, col_offset=28)], Load(), lineno=237, col_offset=28), lineno=237, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=238, col_offset=12), 'filemod', Load(), lineno=238, col_offset=12), Add(), Tuple([Str('traced_func_importing', lineno=238, col_offset=28)], Load(), lineno=238, col_offset=28), lineno=238, col_offset=12), Tuple([Call(Name('fix_ext_py', Load(), lineno=239, col_offset=13), [Attribute(Name('testmod', Load(), lineno=239, col_offset=24), '__file__', Load(), lineno=239, col_offset=24)], [], None, None, lineno=239, col_offset=13), Str('testmod', lineno=239, col_offset=43), Str('func', lineno=239, col_offset=54)], Load(), lineno=239, col_offset=13)], [Num(1, lineno=235, col_offset=59), Num(1, lineno=236, col_offset=52), Num(1, lineno=237, col_offset=62), Num(1, lineno=238, col_offset=55), Num(1, lineno=239, col_offset=63)], lineno=234, col_offset=19), lineno=234, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=241, col_offset=8), 'assertEqual', Load(), lineno=241, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=241, col_offset=25), 'tracer', Load(), lineno=241, col_offset=25), 'results', Load(), lineno=241, col_offset=25), [], [], None, None, lineno=241, col_offset=25), 'calledfuncs', Load(), lineno=241, col_offset=25), Name('expected', Load(), lineno=241, col_offset=60)], [], None, None, lineno=241, col_offset=8), lineno=241, col_offset=8)], [], lineno=231, col_offset=4), FunctionDef('test_inst_method_calling', arguments([Name('self', Param(), lineno=243, col_offset=33)], None, None, []), [Assign([Name('obj', Store(), lineno=244, col_offset=8)], Call(Name('TracedClass', Load(), lineno=244, col_offset=14), [Num(20, lineno=244, col_offset=26)], [], None, None, lineno=244, col_offset=14), lineno=244, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=245, col_offset=8), 'tracer', Load(), lineno=245, col_offset=8), 'runfunc', Load(), lineno=245, col_offset=8), [Attribute(Name('obj', Load(), lineno=245, col_offset=28), 'inst_method_calling', Load(), lineno=245, col_offset=28), Num(1, lineno=245, col_offset=53)], [], None, None, lineno=245, col_offset=8), lineno=245, col_offset=8), Assign([Name('expected', Store(), lineno=247, col_offset=8)], Dict([BinOp(Attribute(Name('self', Load(), lineno=248, col_offset=12), 'filemod', Load(), lineno=248, col_offset=12), Add(), Tuple([Str('TracedClass.inst_method_calling', lineno=248, col_offset=28)], Load(), lineno=248, col_offset=28), lineno=248, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=249, col_offset=12), 'filemod', Load(), lineno=249, col_offset=12), Add(), Tuple([Str('TracedClass.inst_method_linear', lineno=249, col_offset=28)], Load(), lineno=249, col_offset=28), lineno=249, col_offset=12), BinOp(Attribute(Name('self', Load(), lineno=250, col_offset=12), 'filemod', Load(), lineno=250, col_offset=12), Add(), Tuple([Str('traced_func_linear', lineno=250, col_offset=28)], Load(), lineno=250, col_offset=28), lineno=250, col_offset=12)], [Num(1, lineno=248, col_offset=65), Num(1, lineno=249, col_offset=64), Num(1, lineno=250, col_offset=52)], lineno=247, col_offset=19), lineno=247, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=252, col_offset=8), 'assertEqual', Load(), lineno=252, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=252, col_offset=25), 'tracer', Load(), lineno=252, col_offset=25), 'results', Load(), lineno=252, col_offset=25), [], [], None, None, lineno=252, col_offset=25), 'calledfuncs', Load(), lineno=252, col_offset=25), Name('expected', Load(), lineno=252, col_offset=60)], [], None, None, lineno=252, col_offset=8), lineno=252, col_offset=8)], [], lineno=243, col_offset=4)], [], lineno=216, col_offset=0), ClassDef('TestCallers', [Attribute(Name('unittest', Load(), lineno=255, col_offset=18), 'TestCase', Load(), lineno=255, col_offset=18)], [Expr(Str('White-box testing of callers tracing', lineno=256, col_offset=4), lineno=256, col_offset=4), FunctionDef('setUp', arguments([Name('self', Param(), lineno=257, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=258, col_offset=8), 'tracer', Store(), lineno=258, col_offset=8)], Call(Name('Trace', Load(), lineno=258, col_offset=22), [], [keyword('count', Num(0, lineno=258, col_offset=34)), keyword('trace', Num(0, lineno=258, col_offset=43)), keyword('countcallers', Num(1, lineno=258, col_offset=59))], None, None, lineno=258, col_offset=22), lineno=258, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=259, col_offset=8), 'filemod', Store(), lineno=259, col_offset=8)], Call(Name('my_file_and_modname', Load(), lineno=259, col_offset=23), [], [], None, None, lineno=259, col_offset=23), lineno=259, col_offset=8)], [], lineno=257, col_offset=4), FunctionDef('test_loop_caller_importing', arguments([Name('self', Param(), lineno=261, col_offset=35)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=262, col_offset=8), 'tracer', Load(), lineno=262, col_offset=8), 'runfunc', Load(), lineno=262, col_offset=8), [Name('traced_func_importing_caller', Load(), lineno=262, col_offset=28), Num(1, lineno=262, col_offset=58)], [], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8), Assign([Name('expected', Store(), lineno=264, col_offset=8)], Dict([Tuple([Tuple([BinOp(Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=265, col_offset=14), 'path', Load(), lineno=265, col_offset=14), 'splitext', Load(), lineno=265, col_offset=14), [Attribute(Name('trace', Load(), lineno=265, col_offset=31), '__file__', Load(), lineno=265, col_offset=31)], [], None, None, lineno=265, col_offset=14), Index(Num(0, lineno=265, col_offset=47)), Load(), lineno=265, col_offset=14), Add(), Str('.py', lineno=265, col_offset=52), lineno=265, col_offset=14), Str('trace', lineno=265, col_offset=59), Str('Trace.runfunc', lineno=265, col_offset=68)], Load(), lineno=265, col_offset=14), BinOp(Attribute(Name('self', Load(), lineno=266, col_offset=17), 'filemod', Load(), lineno=266, col_offset=17), Add(), Tuple([Str('traced_func_importing_caller', lineno=266, col_offset=33)], Load(), lineno=266, col_offset=33), lineno=266, col_offset=17)], Load(), lineno=265, col_offset=13), Tuple([BinOp(Attribute(Name('self', Load(), lineno=267, col_offset=14), 'filemod', Load(), lineno=267, col_offset=14), Add(), Tuple([Str('traced_func_simple_caller', lineno=267, col_offset=30)], Load(), lineno=267, col_offset=30), lineno=267, col_offset=14), BinOp(Attribute(Name('self', Load(), lineno=268, col_offset=17), 'filemod', Load(), lineno=268, col_offset=17), Add(), Tuple([Str('traced_func_linear', lineno=268, col_offset=33)], Load(), lineno=268, col_offset=33), lineno=268, col_offset=17)], Load(), lineno=267, col_offset=13), Tuple([BinOp(Attribute(Name('self', Load(), lineno=269, col_offset=14), 'filemod', Load(), lineno=269, col_offset=14), Add(), Tuple([Str('traced_func_importing_caller', lineno=269, col_offset=30)], Load(), lineno=269, col_offset=30), lineno=269, col_offset=14), BinOp(Attribute(Name('self', Load(), lineno=270, col_offset=17), 'filemod', Load(), lineno=270, col_offset=17), Add(), Tuple([Str('traced_func_simple_caller', lineno=270, col_offset=33)], Load(), lineno=270, col_offset=33), lineno=270, col_offset=17)], Load(), lineno=269, col_offset=13), Tuple([BinOp(Attribute(Name('self', Load(), lineno=271, col_offset=14), 'filemod', Load(), lineno=271, col_offset=14), Add(), Tuple([Str('traced_func_importing_caller', lineno=271, col_offset=30)], Load(), lineno=271, col_offset=30), lineno=271, col_offset=14), BinOp(Attribute(Name('self', Load(), lineno=272, col_offset=17), 'filemod', Load(), lineno=272, col_offset=17), Add(), Tuple([Str('traced_func_importing', lineno=272, col_offset=33)], Load(), lineno=272, col_offset=33), lineno=272, col_offset=17)], Load(), lineno=271, col_offset=13), Tuple([BinOp(Attribute(Name('self', Load(), lineno=273, col_offset=14), 'filemod', Load(), lineno=273, col_offset=14), Add(), Tuple([Str('traced_func_importing', lineno=273, col_offset=30)], Load(), lineno=273, col_offset=30), lineno=273, col_offset=14), Tuple([Call(Name('fix_ext_py', Load(), lineno=274, col_offset=17), [Attribute(Name('testmod', Load(), lineno=274, col_offset=28), '__file__', Load(), lineno=274, col_offset=28)], [], None, None, lineno=274, col_offset=17), Str('testmod', lineno=274, col_offset=47), Str('func', lineno=274, col_offset=58)], Load(), lineno=274, col_offset=17)], Load(), lineno=273, col_offset=13)], [Num(1, lineno=266, col_offset=69), Num(1, lineno=268, col_offset=59), Num(1, lineno=270, col_offset=66), Num(1, lineno=272, col_offset=62), Num(1, lineno=274, col_offset=68)], lineno=264, col_offset=19), lineno=264, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=276, col_offset=8), 'assertEqual', Load(), lineno=276, col_offset=8), [Attribute(Call(Attribute(Attribute(Name('self', Load(), lineno=276, col_offset=25), 'tracer', Load(), lineno=276, col_offset=25), 'results', Load(), lineno=276, col_offset=25), [], [], None, None, lineno=276, col_offset=25), 'callers', Load(), lineno=276, col_offset=25), Name('expected', Load(), lineno=276, col_offset=56)], [], None, None, lineno=276, col_offset=8), lineno=276, col_offset=8)], [], lineno=261, col_offset=4)], [], lineno=255, col_offset=0), ClassDef('TestCoverage', [Attribute(Name('unittest', Load(), lineno=280, col_offset=19), 'TestCase', Load(), lineno=280, col_offset=19)], [FunctionDef('tearDown', arguments([Name('self', Param(), lineno=281, col_offset=17)], None, None, []), [Expr(Call(Name('rmtree', Load(), lineno=282, col_offset=8), [Name('TESTFN', Load(), lineno=282, col_offset=15)], [], None, None, lineno=282, col_offset=8), lineno=282, col_offset=8), Expr(Call(Name('unlink', Load(), lineno=283, col_offset=8), [Name('TESTFN', Load(), lineno=283, col_offset=15)], [], None, None, lineno=283, col_offset=8), lineno=283, col_offset=8)], [], lineno=281, col_offset=4), FunctionDef('_coverage', arguments([Name('self', Param(), lineno=285, col_offset=18), Name('tracer', Param(), lineno=285, col_offset=24), Name('cmd', Param(), lineno=286, col_offset=18)], None, None, [Str('from test import test_pprint; test_pprint.test_main()', lineno=286, col_offset=22)]), [Expr(Call(Attribute(Name('tracer', Load(), lineno=287, col_offset=8), 'run', Load(), lineno=287, col_offset=8), [Name('cmd', Load(), lineno=287, col_offset=19)], [], None, None, lineno=287, col_offset=8), lineno=287, col_offset=8), Assign([Name('r', Store(), lineno=288, col_offset=8)], Call(Attribute(Name('tracer', Load(), lineno=288, col_offset=12), 'results', Load(), lineno=288, col_offset=12), [], [], None, None, lineno=288, col_offset=12), lineno=288, col_offset=8), Expr(Call(Attribute(Name('r', Load(), lineno=289, col_offset=8), 'write_results', Load(), lineno=289, col_offset=8), [], [keyword('show_missing', Name('True', Load(), lineno=289, col_offset=37)), keyword('summary', Name('True', Load(), lineno=289, col_offset=51)), keyword('coverdir', Name('TESTFN', Load(), lineno=289, col_offset=66))], None, None, lineno=289, col_offset=8), lineno=289, col_offset=8)], [], lineno=285, col_offset=4), FunctionDef('test_coverage', arguments([Name('self', Param(), lineno=291, col_offset=22)], None, None, []), [Assign([Name('tracer', Store(), lineno=292, col_offset=8)], Call(Attribute(Name('trace', Load(), lineno=292, col_offset=17), 'Trace', Load(), lineno=292, col_offset=17), [], [keyword('trace', Num(0, lineno=292, col_offset=35)), keyword('count', Num(1, lineno=292, col_offset=44))], None, None, lineno=292, col_offset=17), lineno=292, col_offset=8), With(Call(Name('captured_stdout', Load(), lineno=293, col_offset=13), [], [], None, None, lineno=293, col_offset=13), Name('stdout', Store(), lineno=293, col_offset=34), [Expr(Call(Attribute(Name('self', Load(), lineno=294, col_offset=12), '_coverage', Load(), lineno=294, col_offset=12), [Name('tracer', Load(), lineno=294, col_offset=27)], [], None, None, lineno=294, col_offset=12), lineno=294, col_offset=12)], lineno=293, col_offset=13), Assign([Name('stdout', Store(), lineno=295, col_offset=8)], Call(Attribute(Name('stdout', Load(), lineno=295, col_offset=17), 'getvalue', Load(), lineno=295, col_offset=17), [], [], None, None, lineno=295, col_offset=17), lineno=295, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=296, col_offset=8), 'assertTrue', Load(), lineno=296, col_offset=8), [Compare(Str('pprint.py', lineno=296, col_offset=24), [In()], [Name('stdout', Load(), lineno=296, col_offset=39)], lineno=296, col_offset=24)], [], None, None, lineno=296, col_offset=8), lineno=296, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=297, col_offset=8), 'assertTrue', Load(), lineno=297, col_offset=8), [Compare(Str('case.py', lineno=297, col_offset=24), [In()], [Name('stdout', Load(), lineno=297, col_offset=37)], lineno=297, col_offset=24)], [], None, None, lineno=297, col_offset=8), lineno=297, col_offset=8), Assign([Name('files', Store(), lineno=298, col_offset=8)], Call(Attribute(Name('os', Load(), lineno=298, col_offset=16), 'listdir', Load(), lineno=298, col_offset=16), [Name('TESTFN', Load(), lineno=298, col_offset=27)], [], None, None, lineno=298, col_offset=16), lineno=298, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=299, col_offset=8), 'assertTrue', Load(), lineno=299, col_offset=8), [Compare(Str('pprint.cover', lineno=299, col_offset=24), [In()], [Name('files', Load(), lineno=299, col_offset=42)], lineno=299, col_offset=24)], [], None, None, lineno=299, col_offset=8), lineno=299, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=300, col_offset=8), 'assertTrue', Load(), lineno=300, col_offset=8), [Compare(Str('unittest.case.cover', lineno=300, col_offset=24), [In()], [Name('files', Load(), lineno=300, col_offset=49)], lineno=300, col_offset=24)], [], None, None, lineno=300, col_offset=8), lineno=300, col_offset=8)], [], lineno=291, col_offset=4), FunctionDef('test_coverage_ignore', arguments([Name('self', Param(), lineno=302, col_offset=29)], None, None, []), [Assign([Name('libpath', Store(), lineno=304, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=304, col_offset=18), 'path', Load(), lineno=304, col_offset=18), 'normpath', Load(), lineno=304, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=304, col_offset=35), 'path', Load(), lineno=304, col_offset=35), 'dirname', Load(), lineno=304, col_offset=35), [Attribute(Name('os', Load(), lineno=304, col_offset=51), '__file__', Load(), lineno=304, col_offset=51)], [], None, None, lineno=304, col_offset=35)], [], None, None, lineno=304, col_offset=18), lineno=304, col_offset=8), Assign([Name('tracer', Store(), lineno=306, col_offset=8)], Call(Attribute(Name('trace', Load(), lineno=306, col_offset=17), 'Trace', Load(), lineno=306, col_offset=17), [], [keyword('ignoredirs', List([Attribute(Name('sys', Load(), lineno=306, col_offset=41), 'prefix', Load(), lineno=306, col_offset=41), Attribute(Name('sys', Load(), lineno=306, col_offset=53), 'exec_prefix', Load(), lineno=306, col_offset=53), Name('libpath', Load(), lineno=306, col_offset=70)], Load(), lineno=306, col_offset=40)), keyword('trace', Num(0, lineno=307, col_offset=35)), keyword('count', Num(1, lineno=307, col_offset=44))], None, None, lineno=306, col_offset=17), lineno=306, col_offset=8), With(Call(Name('captured_stdout', Load(), lineno=308, col_offset=13), [], [], None, None, lineno=308, col_offset=13), Name('stdout', Store(), lineno=308, col_offset=34), [Expr(Call(Attribute(Name('self', Load(), lineno=309, col_offset=12), '_coverage', Load(), lineno=309, col_offset=12), [Name('tracer', Load(), lineno=309, col_offset=27)], [], None, None, lineno=309, col_offset=12), lineno=309, col_offset=12)], lineno=308, col_offset=13), If(Call(Attribute(Attribute(Name('os', Load(), lineno=310, col_offset=11), 'path', Load(), lineno=310, col_offset=11), 'exists', Load(), lineno=310, col_offset=11), [Name('TESTFN', Load(), lineno=310, col_offset=26)], [], None, None, lineno=310, col_offset=11), [Assign([Name('files', Store(), lineno=311, col_offset=12)], Call(Attribute(Name('os', Load(), lineno=311, col_offset=20), 'listdir', Load(), lineno=311, col_offset=20), [Name('TESTFN', Load(), lineno=311, col_offset=31)], [], None, None, lineno=311, col_offset=20), lineno=311, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=312, col_offset=12), 'assertEqual', Load(), lineno=312, col_offset=12), [Name('files', Load(), lineno=312, col_offset=29), List([], Load(), lineno=312, col_offset=36)], [], None, None, lineno=312, col_offset=12), lineno=312, col_offset=12)], [], lineno=310, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('test_issue9936', arguments([Name('self', Param(), lineno=314, col_offset=23)], None, None, []), [Assign([Name('tracer', Store(), lineno=315, col_offset=8)], Call(Attribute(Name('trace', Load(), lineno=315, col_offset=17), 'Trace', Load(), lineno=315, col_offset=17), [], [keyword('trace', Num(0, lineno=315, col_offset=35)), keyword('count', Num(1, lineno=315, col_offset=44))], None, None, lineno=315, col_offset=17), lineno=315, col_offset=8), Assign([Name('modname', Store(), lineno=316, col_offset=8)], Str('test.tracedmodules.testmod', lineno=316, col_offset=18), lineno=316, col_offset=8), If(Compare(Name('modname', Load(), lineno=318, col_offset=11), [In()], [Attribute(Name('sys', Load(), lineno=318, col_offset=22), 'modules', Load(), lineno=318, col_offset=22)], lineno=318, col_offset=11), [Delete([Subscript(Attribute(Name('sys', Load(), lineno=319, col_offset=16), 'modules', Load(), lineno=319, col_offset=16), Index(Name('modname', Load(), lineno=319, col_offset=28)), Del(), lineno=319, col_offset=16)], lineno=319, col_offset=12)], [], lineno=318, col_offset=8), Assign([Name('cmd', Store(), lineno=320, col_offset=8)], Str('import test.tracedmodules.testmod as t;t.func(0); t.func2();', lineno=320, col_offset=15), lineno=320, col_offset=8), With(Call(Name('captured_stdout', Load(), lineno=322, col_offset=13), [], [], None, None, lineno=322, col_offset=13), Name('stdout', Store(), lineno=322, col_offset=34), [Expr(Call(Attribute(Name('self', Load(), lineno=323, col_offset=12), '_coverage', Load(), lineno=323, col_offset=12), [Name('tracer', Load(), lineno=323, col_offset=27), Name('cmd', Load(), lineno=323, col_offset=35)], [], None, None, lineno=323, col_offset=12), lineno=323, col_offset=12)], lineno=322, col_offset=13), Expr(Call(Attribute(Name('stdout', Load(), lineno=324, col_offset=8), 'seek', Load(), lineno=324, col_offset=8), [Num(0, lineno=324, col_offset=20)], [], None, None, lineno=324, col_offset=8), lineno=324, col_offset=8), Expr(Call(Attribute(Name('stdout', Load(), lineno=325, col_offset=8), 'readline', Load(), lineno=325, col_offset=8), [], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=8), Assign([Name('coverage', Store(), lineno=326, col_offset=8)], Dict([], [], lineno=326, col_offset=19), lineno=326, col_offset=8), For(Name('line', Store(), lineno=327, col_offset=12), Name('stdout', Load(), lineno=327, col_offset=20), [Assign([Tuple([Name('lines', Store(), lineno=328, col_offset=12), Name('cov', Store(), lineno=328, col_offset=19), Name('module', Store(), lineno=328, col_offset=24)], Store(), lineno=328, col_offset=12)], Subscript(Call(Attribute(Name('line', Load(), lineno=328, col_offset=33), 'split', Load(), lineno=328, col_offset=33), [], [], None, None, lineno=328, col_offset=33), Slice(None, Num(3, lineno=328, col_offset=47), None), Load(), lineno=328, col_offset=33), lineno=328, col_offset=12), Assign([Subscript(Name('coverage', Load(), lineno=329, col_offset=12), Index(Name('module', Load(), lineno=329, col_offset=21)), Store(), lineno=329, col_offset=12)], Tuple([Call(Name('int', Load(), lineno=329, col_offset=32), [Name('lines', Load(), lineno=329, col_offset=36)], [], None, None, lineno=329, col_offset=32), Call(Name('int', Load(), lineno=329, col_offset=44), [Subscript(Name('cov', Load(), lineno=329, col_offset=48), Slice(None, Num(-1, lineno=329, col_offset=54), None), Load(), lineno=329, col_offset=48)], [], None, None, lineno=329, col_offset=44)], Load(), lineno=329, col_offset=32), lineno=329, col_offset=12)], [], lineno=327, col_offset=8), Assign([Name('modname', Store(), lineno=331, col_offset=8)], Call(Attribute(Name('trace', Load(), lineno=331, col_offset=18), 'fullmodname', Load(), lineno=331, col_offset=18), [Attribute(Subscript(Attribute(Name('sys', Load(), lineno=331, col_offset=36), 'modules', Load(), lineno=331, col_offset=36), Index(Name('modname', Load(), lineno=331, col_offset=48)), Load(), lineno=331, col_offset=36), '__file__', Load(), lineno=331, col_offset=36)], [], None, None, lineno=331, col_offset=18), lineno=331, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=332, col_offset=8), 'assertIn', Load(), lineno=332, col_offset=8), [Name('modname', Load(), lineno=332, col_offset=22), Name('coverage', Load(), lineno=332, col_offset=31)], [], None, None, lineno=332, col_offset=8), lineno=332, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=333, col_offset=8), 'assertEqual', Load(), lineno=333, col_offset=8), [Subscript(Name('coverage', Load(), lineno=333, col_offset=25), Index(Name('modname', Load(), lineno=333, col_offset=34)), Load(), lineno=333, col_offset=25), Tuple([Num(5, lineno=333, col_offset=45), Num(100, lineno=333, col_offset=48)], Load(), lineno=333, col_offset=45)], [], None, None, lineno=333, col_offset=8), lineno=333, col_offset=8)], [], lineno=314, col_offset=4)], [], lineno=280, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=337, col_offset=4), [Name('__name__', Load(), lineno=337, col_offset=17)], [], None, None, lineno=337, col_offset=4), lineno=337, col_offset=4)], [], lineno=336, col_offset=0), If(Compare(Name('__name__', Load(), lineno=340, col_offset=3), [Eq()], [Str('__main__', lineno=340, col_offset=15)], lineno=340, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=341, col_offset=4), [], [], None, None, lineno=341, col_offset=4), lineno=341, col_offset=4)], [], lineno=340, col_offset=0)])
