Module([Expr(Str('Script to synchronize two source trees.\n\nInvoke with two arguments:\n\npython treesync.py slave master\n\nThe assumption is that "master" contains CVS administration while\nslave doesn\'t.  All files in the slave tree that have a CVS/Entries\nentry in the master tree are synchronized.  This means:\n\n    If the files differ:\n        if the slave file is newer:\n            normalize the slave file\n            if the files still differ:\n                copy the slave to the master\n        else (the master is newer):\n            copy the master to the slave\n\n    normalizing the slave means replacing CRLF with LF when the master\n    doesn\'t use CRLF\n\n', lineno=24, col_offset=-1), lineno=24, col_offset=-1), Import([alias('os', None), alias('sys', None), alias('stat', None), alias('getopt', None)], lineno=26, col_offset=0), Assign([Name('default_answer', Store(), lineno=29, col_offset=0)], Str('ask', lineno=29, col_offset=17), lineno=29, col_offset=0), Assign([Name('create_files', Store(), lineno=30, col_offset=0)], Str('yes', lineno=30, col_offset=15), lineno=30, col_offset=0), Assign([Name('create_directories', Store(), lineno=31, col_offset=0)], Str('no', lineno=31, col_offset=21), lineno=31, col_offset=0), Assign([Name('write_slave', Store(), lineno=32, col_offset=0)], Str('ask', lineno=32, col_offset=14), lineno=32, col_offset=0), Assign([Name('write_master', Store(), lineno=33, col_offset=0)], Str('ask', lineno=33, col_offset=15), lineno=33, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Global(['always_no', 'always_yes'], lineno=36, col_offset=4), Global(['create_directories', 'write_master', 'write_slave'], lineno=37, col_offset=4), Assign([Tuple([Name('opts', Store(), lineno=38, col_offset=4), Name('args', Store(), lineno=38, col_offset=10)], Store(), lineno=38, col_offset=4)], Call(Attribute(Name('getopt', Load(), lineno=38, col_offset=17), 'getopt', Load(), lineno=38, col_offset=17), [Subscript(Attribute(Name('sys', Load(), lineno=38, col_offset=31), 'argv', Load(), lineno=38, col_offset=31), Slice(Num(1, lineno=38, col_offset=40), None, None), Load(), lineno=38, col_offset=31), Str('nym:s:d:f:a:', lineno=38, col_offset=45)], [], None, None, lineno=38, col_offset=17), lineno=38, col_offset=4), For(Tuple([Name('o', Store(), lineno=39, col_offset=8), Name('a', Store(), lineno=39, col_offset=11)], Store(), lineno=39, col_offset=8), Name('opts', Load(), lineno=39, col_offset=16), [If(Compare(Name('o', Load(), lineno=40, col_offset=11), [Eq()], [Str('-y', lineno=40, col_offset=16)], lineno=40, col_offset=11), [Assign([Name('default_answer', Store(), lineno=41, col_offset=12)], Str('yes', lineno=41, col_offset=29), lineno=41, col_offset=12)], [], lineno=40, col_offset=8), If(Compare(Name('o', Load(), lineno=42, col_offset=11), [Eq()], [Str('-n', lineno=42, col_offset=16)], lineno=42, col_offset=11), [Assign([Name('default_answer', Store(), lineno=43, col_offset=12)], Str('no', lineno=43, col_offset=29), lineno=43, col_offset=12)], [], lineno=42, col_offset=8), If(Compare(Name('o', Load(), lineno=44, col_offset=11), [Eq()], [Str('-s', lineno=44, col_offset=16)], lineno=44, col_offset=11), [Assign([Name('write_slave', Store(), lineno=45, col_offset=12)], Name('a', Load(), lineno=45, col_offset=26), lineno=45, col_offset=12)], [], lineno=44, col_offset=8), If(Compare(Name('o', Load(), lineno=46, col_offset=11), [Eq()], [Str('-m', lineno=46, col_offset=16)], lineno=46, col_offset=11), [Assign([Name('write_master', Store(), lineno=47, col_offset=12)], Name('a', Load(), lineno=47, col_offset=27), lineno=47, col_offset=12)], [], lineno=46, col_offset=8), If(Compare(Name('o', Load(), lineno=48, col_offset=11), [Eq()], [Str('-d', lineno=48, col_offset=16)], lineno=48, col_offset=11), [Assign([Name('create_directories', Store(), lineno=49, col_offset=12)], Name('a', Load(), lineno=49, col_offset=33), lineno=49, col_offset=12)], [], lineno=48, col_offset=8), If(Compare(Name('o', Load(), lineno=50, col_offset=11), [Eq()], [Str('-f', lineno=50, col_offset=16)], lineno=50, col_offset=11), [Assign([Name('create_files', Store(), lineno=51, col_offset=12)], Name('a', Load(), lineno=51, col_offset=27), lineno=51, col_offset=12)], [], lineno=50, col_offset=8), If(Compare(Name('o', Load(), lineno=52, col_offset=11), [Eq()], [Str('-a', lineno=52, col_offset=16)], lineno=52, col_offset=11), [Assign([Name('create_files', Store(), lineno=53, col_offset=12), Name('create_directories', Store(), lineno=53, col_offset=27), Name('write_slave', Store(), lineno=53, col_offset=48), Name('write_master', Store(), lineno=53, col_offset=62)], Name('a', Load(), lineno=53, col_offset=77), lineno=53, col_offset=12)], [], lineno=52, col_offset=8)], [], lineno=39, col_offset=4), TryExcept([Assign([List([Name('slave', Store(), lineno=55, col_offset=9), Name('master', Store(), lineno=55, col_offset=16)], Store(), lineno=55, col_offset=8)], Name('args', Load(), lineno=55, col_offset=26), lineno=55, col_offset=8)], [ExceptHandler(Name('ValueError', Load(), lineno=56, col_offset=11), None, [Print(None, [Str('usage: python', lineno=57, col_offset=14), BoolOp(Or(), [Subscript(Attribute(Name('sys', Load(), lineno=57, col_offset=31), 'argv', Load(), lineno=57, col_offset=31), Index(Num(0, lineno=57, col_offset=40)), Load(), lineno=57, col_offset=31), Str('treesync.py', lineno=57, col_offset=46)], lineno=57, col_offset=31)], False, lineno=57, col_offset=8), Print(None, [Str('[-n] [-y] [-m y|n|a] [-s y|n|a] [-d y|n|a] [-f n|y|a]', lineno=58, col_offset=14)], False, lineno=58, col_offset=8), Print(None, [Str('slavedir masterdir', lineno=59, col_offset=14)], True, lineno=59, col_offset=8), Return(None, lineno=60, col_offset=8)], lineno=56, col_offset=4)], [], lineno=54, col_offset=4), Expr(Call(Name('process', Load(), lineno=61, col_offset=4), [Name('slave', Load(), lineno=61, col_offset=12), Name('master', Load(), lineno=61, col_offset=19)], [], None, None, lineno=61, col_offset=4), lineno=61, col_offset=4)], [], lineno=35, col_offset=0), FunctionDef('process', arguments([Name('slave', Param(), lineno=63, col_offset=12), Name('master', Param(), lineno=63, col_offset=19)], None, None, []), [Assign([Name('cvsdir', Store(), lineno=64, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=64, col_offset=13), 'path', Load(), lineno=64, col_offset=13), 'join', Load(), lineno=64, col_offset=13), [Name('master', Load(), lineno=64, col_offset=26), Str('CVS', lineno=64, col_offset=34)], [], None, None, lineno=64, col_offset=13), lineno=64, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=65, col_offset=11), 'path', Load(), lineno=65, col_offset=11), 'isdir', Load(), lineno=65, col_offset=11), [Name('cvsdir', Load(), lineno=65, col_offset=25)], [], None, None, lineno=65, col_offset=11), lineno=65, col_offset=7), [Print(None, [Str('skipping master subdirectory', lineno=66, col_offset=14), Name('master', Load(), lineno=66, col_offset=46)], True, lineno=66, col_offset=8), Print(None, [Str('-- not under CVS', lineno=67, col_offset=14)], True, lineno=67, col_offset=8), Return(None, lineno=68, col_offset=8)], [], lineno=65, col_offset=4), Print(None, [BinOp(Str('-', lineno=69, col_offset=10), Mult(), Num(40, lineno=69, col_offset=14), lineno=69, col_offset=10)], True, lineno=69, col_offset=4), Print(None, [Str('slave ', lineno=70, col_offset=10), Name('slave', Load(), lineno=70, col_offset=20)], True, lineno=70, col_offset=4), Print(None, [Str('master', lineno=71, col_offset=10), Name('master', Load(), lineno=71, col_offset=20)], True, lineno=71, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=72, col_offset=11), 'path', Load(), lineno=72, col_offset=11), 'isdir', Load(), lineno=72, col_offset=11), [Name('slave', Load(), lineno=72, col_offset=25)], [], None, None, lineno=72, col_offset=11), lineno=72, col_offset=7), [If(UnaryOp(Not(), Call(Name('okay', Load(), lineno=73, col_offset=15), [BinOp(Str('create slave directory %s?', lineno=73, col_offset=20), Mod(), Name('slave', Load(), lineno=73, col_offset=51), lineno=73, col_offset=20)], [keyword('answer', Name('create_directories', Load(), lineno=74, col_offset=27))], None, None, lineno=73, col_offset=15), lineno=73, col_offset=11), [Print(None, [Str('skipping master subdirectory', lineno=75, col_offset=18), Name('master', Load(), lineno=75, col_offset=50)], True, lineno=75, col_offset=12), Print(None, [Str('-- no corresponding slave', lineno=76, col_offset=18), Name('slave', Load(), lineno=76, col_offset=47)], True, lineno=76, col_offset=12), Return(None, lineno=77, col_offset=12)], [], lineno=73, col_offset=8), Print(None, [Str('creating slave directory', lineno=78, col_offset=14), Name('slave', Load(), lineno=78, col_offset=42)], True, lineno=78, col_offset=8), TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=80, col_offset=12), 'mkdir', Load(), lineno=80, col_offset=12), [Name('slave', Load(), lineno=80, col_offset=21)], [], None, None, lineno=80, col_offset=12), lineno=80, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=81, col_offset=15), 'error', Load(), lineno=81, col_offset=15), Name('msg', Store(), lineno=81, col_offset=25), [Print(None, [Str("can't make slave directory", lineno=82, col_offset=18), Name('slave', Load(), lineno=82, col_offset=48), Str(':', lineno=82, col_offset=55), Name('msg', Load(), lineno=82, col_offset=60)], True, lineno=82, col_offset=12), Return(None, lineno=83, col_offset=12)], lineno=81, col_offset=8)], [Print(None, [Str('made slave directory', lineno=85, col_offset=18), Name('slave', Load(), lineno=85, col_offset=42)], True, lineno=85, col_offset=12)], lineno=79, col_offset=8)], [], lineno=72, col_offset=4), Assign([Name('cvsdir', Store(), lineno=86, col_offset=4)], Name('None', Load(), lineno=86, col_offset=13), lineno=86, col_offset=4), Assign([Name('subdirs', Store(), lineno=87, col_offset=4)], List([], Load(), lineno=87, col_offset=14), lineno=87, col_offset=4), Assign([Name('names', Store(), lineno=88, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=88, col_offset=12), 'listdir', Load(), lineno=88, col_offset=12), [Name('master', Load(), lineno=88, col_offset=23)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=4), For(Name('name', Store(), lineno=89, col_offset=8), Name('names', Load(), lineno=89, col_offset=16), [Assign([Name('mastername', Store(), lineno=90, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=90, col_offset=21), 'path', Load(), lineno=90, col_offset=21), 'join', Load(), lineno=90, col_offset=21), [Name('master', Load(), lineno=90, col_offset=34), Name('name', Load(), lineno=90, col_offset=42)], [], None, None, lineno=90, col_offset=21), lineno=90, col_offset=8), Assign([Name('slavename', Store(), lineno=91, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=91, col_offset=20), 'path', Load(), lineno=91, col_offset=20), 'join', Load(), lineno=91, col_offset=20), [Name('slave', Load(), lineno=91, col_offset=33), Name('name', Load(), lineno=91, col_offset=40)], [], None, None, lineno=91, col_offset=20), lineno=91, col_offset=8), If(Compare(Name('name', Load(), lineno=92, col_offset=11), [Eq()], [Str('CVS', lineno=92, col_offset=19)], lineno=92, col_offset=11), [Assign([Name('cvsdir', Store(), lineno=93, col_offset=12)], Name('mastername', Load(), lineno=93, col_offset=21), lineno=93, col_offset=12)], [If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=95, col_offset=15), 'path', Load(), lineno=95, col_offset=15), 'isdir', Load(), lineno=95, col_offset=15), [Name('mastername', Load(), lineno=95, col_offset=29)], [], None, None, lineno=95, col_offset=15), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=95, col_offset=49), 'path', Load(), lineno=95, col_offset=49), 'islink', Load(), lineno=95, col_offset=49), [Name('mastername', Load(), lineno=95, col_offset=64)], [], None, None, lineno=95, col_offset=49), lineno=95, col_offset=45)], lineno=95, col_offset=15), [Expr(Call(Attribute(Name('subdirs', Load(), lineno=96, col_offset=16), 'append', Load(), lineno=96, col_offset=16), [Tuple([Name('slavename', Load(), lineno=96, col_offset=32), Name('mastername', Load(), lineno=96, col_offset=43)], Load(), lineno=96, col_offset=32)], [], None, None, lineno=96, col_offset=16), lineno=96, col_offset=16)], [], lineno=95, col_offset=12)], lineno=92, col_offset=8)], [], lineno=89, col_offset=4), If(Name('cvsdir', Load(), lineno=97, col_offset=7), [Assign([Name('entries', Store(), lineno=98, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=98, col_offset=18), 'path', Load(), lineno=98, col_offset=18), 'join', Load(), lineno=98, col_offset=18), [Name('cvsdir', Load(), lineno=98, col_offset=31), Str('Entries', lineno=98, col_offset=39)], [], None, None, lineno=98, col_offset=18), lineno=98, col_offset=8), For(Name('e', Store(), lineno=99, col_offset=12), Call(Attribute(Call(Name('open', Load(), lineno=99, col_offset=17), [Name('entries', Load(), lineno=99, col_offset=22)], [], None, None, lineno=99, col_offset=17), 'readlines', Load(), lineno=99, col_offset=17), [], [], None, None, lineno=99, col_offset=17), [Assign([Name('words', Store(), lineno=100, col_offset=12)], Call(Attribute(Name('e', Load(), lineno=100, col_offset=20), 'split', Load(), lineno=100, col_offset=20), [Str('/', lineno=100, col_offset=28)], [], None, None, lineno=100, col_offset=20), lineno=100, col_offset=12), If(BoolOp(And(), [Compare(Subscript(Name('words', Load(), lineno=101, col_offset=15), Index(Num(0, lineno=101, col_offset=21)), Load(), lineno=101, col_offset=15), [Eq()], [Str('', lineno=101, col_offset=27)], lineno=101, col_offset=15), Subscript(Name('words', Load(), lineno=101, col_offset=34), Slice(Num(1, lineno=101, col_offset=40), None, None), Load(), lineno=101, col_offset=34)], lineno=101, col_offset=15), [Assign([Name('name', Store(), lineno=102, col_offset=16)], Subscript(Name('words', Load(), lineno=102, col_offset=23), Index(Num(1, lineno=102, col_offset=29)), Load(), lineno=102, col_offset=23), lineno=102, col_offset=16), Assign([Name('s', Store(), lineno=103, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=103, col_offset=20), 'path', Load(), lineno=103, col_offset=20), 'join', Load(), lineno=103, col_offset=20), [Name('slave', Load(), lineno=103, col_offset=33), Name('name', Load(), lineno=103, col_offset=40)], [], None, None, lineno=103, col_offset=20), lineno=103, col_offset=16), Assign([Name('m', Store(), lineno=104, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=104, col_offset=20), 'path', Load(), lineno=104, col_offset=20), 'join', Load(), lineno=104, col_offset=20), [Name('master', Load(), lineno=104, col_offset=33), Name('name', Load(), lineno=104, col_offset=41)], [], None, None, lineno=104, col_offset=20), lineno=104, col_offset=16), Expr(Call(Name('compare', Load(), lineno=105, col_offset=16), [Name('s', Load(), lineno=105, col_offset=24), Name('m', Load(), lineno=105, col_offset=27)], [], None, None, lineno=105, col_offset=16), lineno=105, col_offset=16)], [], lineno=101, col_offset=12)], [], lineno=99, col_offset=8)], [], lineno=97, col_offset=4), For(Tuple([Name('s', Store(), lineno=106, col_offset=9), Name('m', Store(), lineno=106, col_offset=12)], Store(), lineno=106, col_offset=9), Name('subdirs', Load(), lineno=106, col_offset=18), [Expr(Call(Name('process', Load(), lineno=107, col_offset=8), [Name('s', Load(), lineno=107, col_offset=16), Name('m', Load(), lineno=107, col_offset=19)], [], None, None, lineno=107, col_offset=8), lineno=107, col_offset=8)], [], lineno=106, col_offset=4)], [], lineno=63, col_offset=0), FunctionDef('compare', arguments([Name('slave', Param(), lineno=109, col_offset=12), Name('master', Param(), lineno=109, col_offset=19)], None, None, []), [TryExcept([Assign([Name('sf', Store(), lineno=111, col_offset=8)], Call(Name('open', Load(), lineno=111, col_offset=13), [Name('slave', Load(), lineno=111, col_offset=18), Str('r', lineno=111, col_offset=25)], [], None, None, lineno=111, col_offset=13), lineno=111, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=112, col_offset=11), None, [Assign([Name('sf', Store(), lineno=113, col_offset=8)], Name('None', Load(), lineno=113, col_offset=13), lineno=113, col_offset=8)], lineno=112, col_offset=4)], [], lineno=110, col_offset=4), TryExcept([Assign([Name('mf', Store(), lineno=115, col_offset=8)], Call(Name('open', Load(), lineno=115, col_offset=13), [Name('master', Load(), lineno=115, col_offset=18), Str('rb', lineno=115, col_offset=26)], [], None, None, lineno=115, col_offset=13), lineno=115, col_offset=8)], [ExceptHandler(Name('IOError', Load(), lineno=116, col_offset=11), None, [Assign([Name('mf', Store(), lineno=117, col_offset=8)], Name('None', Load(), lineno=117, col_offset=13), lineno=117, col_offset=8)], lineno=116, col_offset=4)], [], lineno=114, col_offset=4), If(UnaryOp(Not(), Name('sf', Load(), lineno=118, col_offset=11), lineno=118, col_offset=7), [If(UnaryOp(Not(), Name('mf', Load(), lineno=119, col_offset=15), lineno=119, col_offset=11), [Print(None, [Str('Neither master nor slave exists', lineno=120, col_offset=18), Name('master', Load(), lineno=120, col_offset=53)], True, lineno=120, col_offset=12), Return(None, lineno=121, col_offset=12)], [], lineno=119, col_offset=8), Print(None, [Str('Creating missing slave', lineno=122, col_offset=14), Name('slave', Load(), lineno=122, col_offset=40)], True, lineno=122, col_offset=8), Expr(Call(Name('copy', Load(), lineno=123, col_offset=8), [Name('master', Load(), lineno=123, col_offset=13), Name('slave', Load(), lineno=123, col_offset=21)], [keyword('answer', Name('create_files', Load(), lineno=123, col_offset=35))], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8), Return(None, lineno=124, col_offset=8)], [], lineno=118, col_offset=4), If(UnaryOp(Not(), Name('mf', Load(), lineno=125, col_offset=11), lineno=125, col_offset=7), [Print(None, [Str('Not updating missing master', lineno=126, col_offset=14), Name('master', Load(), lineno=126, col_offset=45)], True, lineno=126, col_offset=8), Return(None, lineno=127, col_offset=8)], [], lineno=125, col_offset=4), If(BoolOp(And(), [Name('sf', Load(), lineno=128, col_offset=7), Name('mf', Load(), lineno=128, col_offset=14)], lineno=128, col_offset=7), [If(Call(Name('identical', Load(), lineno=129, col_offset=11), [Name('sf', Load(), lineno=129, col_offset=21), Name('mf', Load(), lineno=129, col_offset=25)], [], None, None, lineno=129, col_offset=11), [Return(None, lineno=130, col_offset=12)], [], lineno=129, col_offset=8)], [], lineno=128, col_offset=4), Assign([Name('sft', Store(), lineno=131, col_offset=4)], Call(Name('mtime', Load(), lineno=131, col_offset=10), [Name('sf', Load(), lineno=131, col_offset=16)], [], None, None, lineno=131, col_offset=10), lineno=131, col_offset=4), Assign([Name('mft', Store(), lineno=132, col_offset=4)], Call(Name('mtime', Load(), lineno=132, col_offset=10), [Name('mf', Load(), lineno=132, col_offset=16)], [], None, None, lineno=132, col_offset=10), lineno=132, col_offset=4), If(Compare(Name('mft', Load(), lineno=133, col_offset=7), [Gt()], [Name('sft', Load(), lineno=133, col_offset=13)], lineno=133, col_offset=7), [Expr(Call(Attribute(Name('sf', Load(), lineno=135, col_offset=8), 'close', Load(), lineno=135, col_offset=8), [], [], None, None, lineno=135, col_offset=8), lineno=135, col_offset=8), Expr(Call(Attribute(Name('mf', Load(), lineno=136, col_offset=8), 'close', Load(), lineno=136, col_offset=8), [], [], None, None, lineno=136, col_offset=8), lineno=136, col_offset=8), Print(None, [Str('Master             ', lineno=137, col_offset=14), Name('master', Load(), lineno=137, col_offset=37)], True, lineno=137, col_offset=8), Print(None, [Str('is newer than slave', lineno=138, col_offset=14), Name('slave', Load(), lineno=138, col_offset=37)], True, lineno=138, col_offset=8), Expr(Call(Name('copy', Load(), lineno=139, col_offset=8), [Name('master', Load(), lineno=139, col_offset=13), Name('slave', Load(), lineno=139, col_offset=21)], [keyword('answer', Name('write_slave', Load(), lineno=139, col_offset=35))], None, None, lineno=139, col_offset=8), lineno=139, col_offset=8), Return(None, lineno=140, col_offset=8)], [], lineno=133, col_offset=4), Print(None, [Str('Slave is', lineno=142, col_offset=10), BinOp(Name('sft', Load(), lineno=142, col_offset=22), Sub(), Name('mft', Load(), lineno=142, col_offset=26), lineno=142, col_offset=22), Str('seconds newer than master', lineno=142, col_offset=31)], True, lineno=142, col_offset=4), Expr(Call(Attribute(Name('mf', Load(), lineno=144, col_offset=4), 'seek', Load(), lineno=144, col_offset=4), [Num(0, lineno=144, col_offset=12)], [], None, None, lineno=144, col_offset=4), lineno=144, col_offset=4), Assign([Name('fun', Store(), lineno=145, col_offset=4)], Call(Name('funnychars', Load(), lineno=145, col_offset=10), [Name('mf', Load(), lineno=145, col_offset=21)], [], None, None, lineno=145, col_offset=10), lineno=145, col_offset=4), Expr(Call(Attribute(Name('mf', Load(), lineno=146, col_offset=4), 'close', Load(), lineno=146, col_offset=4), [], [], None, None, lineno=146, col_offset=4), lineno=146, col_offset=4), Expr(Call(Attribute(Name('sf', Load(), lineno=147, col_offset=4), 'close', Load(), lineno=147, col_offset=4), [], [], None, None, lineno=147, col_offset=4), lineno=147, col_offset=4), If(Name('fun', Load(), lineno=148, col_offset=7), [Print(None, [Str('***UPDATING MASTER (BINARY COPY)***', lineno=149, col_offset=14)], True, lineno=149, col_offset=8), Expr(Call(Name('copy', Load(), lineno=150, col_offset=8), [Name('slave', Load(), lineno=150, col_offset=13), Name('master', Load(), lineno=150, col_offset=20), Str('rb', lineno=150, col_offset=28)], [keyword('answer', Name('write_master', Load(), lineno=150, col_offset=41))], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8)], [Print(None, [Str('***UPDATING MASTER***', lineno=152, col_offset=14)], True, lineno=152, col_offset=8), Expr(Call(Name('copy', Load(), lineno=153, col_offset=8), [Name('slave', Load(), lineno=153, col_offset=13), Name('master', Load(), lineno=153, col_offset=20), Str('r', lineno=153, col_offset=28)], [keyword('answer', Name('write_master', Load(), lineno=153, col_offset=40))], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8)], lineno=148, col_offset=4)], [], lineno=109, col_offset=0), Assign([Name('BUFSIZE', Store(), lineno=155, col_offset=0)], BinOp(Num(16, lineno=155, col_offset=10), Mult(), Num(1024, lineno=155, col_offset=13), lineno=155, col_offset=10), lineno=155, col_offset=0), FunctionDef('identical', arguments([Name('sf', Param(), lineno=157, col_offset=14), Name('mf', Param(), lineno=157, col_offset=18)], None, None, []), [While(Num(1, lineno=158, col_offset=10), [Assign([Name('sd', Store(), lineno=159, col_offset=8)], Call(Attribute(Name('sf', Load(), lineno=159, col_offset=13), 'read', Load(), lineno=159, col_offset=13), [Name('BUFSIZE', Load(), lineno=159, col_offset=21)], [], None, None, lineno=159, col_offset=13), lineno=159, col_offset=8), Assign([Name('md', Store(), lineno=160, col_offset=8)], Call(Attribute(Name('mf', Load(), lineno=160, col_offset=13), 'read', Load(), lineno=160, col_offset=13), [Name('BUFSIZE', Load(), lineno=160, col_offset=21)], [], None, None, lineno=160, col_offset=13), lineno=160, col_offset=8), If(Compare(Name('sd', Load(), lineno=161, col_offset=11), [NotEq()], [Name('md', Load(), lineno=161, col_offset=17)], lineno=161, col_offset=11), [Return(Num(0, lineno=161, col_offset=28), lineno=161, col_offset=21)], [], lineno=161, col_offset=8), If(UnaryOp(Not(), Name('sd', Load(), lineno=162, col_offset=15), lineno=162, col_offset=11), [Break( lineno=162, col_offset=19)], [], lineno=162, col_offset=8)], [], lineno=158, col_offset=4), Return(Num(1, lineno=163, col_offset=11), lineno=163, col_offset=4)], [], lineno=157, col_offset=0), FunctionDef('mtime', arguments([Name('f', Param(), lineno=165, col_offset=10)], None, None, []), [Assign([Name('st', Store(), lineno=166, col_offset=4)], Call(Attribute(Name('os', Load(), lineno=166, col_offset=9), 'fstat', Load(), lineno=166, col_offset=9), [Call(Attribute(Name('f', Load(), lineno=166, col_offset=18), 'fileno', Load(), lineno=166, col_offset=18), [], [], None, None, lineno=166, col_offset=18)], [], None, None, lineno=166, col_offset=9), lineno=166, col_offset=4), Return(Subscript(Name('st', Load(), lineno=167, col_offset=11), Index(Attribute(Name('stat', Load(), lineno=167, col_offset=14), 'ST_MTIME', Load(), lineno=167, col_offset=14)), Load(), lineno=167, col_offset=11), lineno=167, col_offset=4)], [], lineno=165, col_offset=0), FunctionDef('funnychars', arguments([Name('f', Param(), lineno=169, col_offset=15)], None, None, []), [While(Num(1, lineno=170, col_offset=10), [Assign([Name('buf', Store(), lineno=171, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=171, col_offset=14), 'read', Load(), lineno=171, col_offset=14), [Name('BUFSIZE', Load(), lineno=171, col_offset=21)], [], None, None, lineno=171, col_offset=14), lineno=171, col_offset=8), If(UnaryOp(Not(), Name('buf', Load(), lineno=172, col_offset=15), lineno=172, col_offset=11), [Break( lineno=172, col_offset=20)], [], lineno=172, col_offset=8), If(BoolOp(Or(), [Compare(Str('\r', lineno=173, col_offset=11), [In()], [Name('buf', Load(), lineno=173, col_offset=19)], lineno=173, col_offset=11), Compare(Str('\x00', lineno=173, col_offset=26), [In()], [Name('buf', Load(), lineno=173, col_offset=34)], lineno=173, col_offset=26)], lineno=173, col_offset=11), [Return(Num(1, lineno=173, col_offset=46), lineno=173, col_offset=39)], [], lineno=173, col_offset=8)], [], lineno=170, col_offset=4), Return(Num(0, lineno=174, col_offset=11), lineno=174, col_offset=4)], [], lineno=169, col_offset=0), FunctionDef('copy', arguments([Name('src', Param(), lineno=176, col_offset=9), Name('dst', Param(), lineno=176, col_offset=14), Name('rmode', Param(), lineno=176, col_offset=19), Name('wmode', Param(), lineno=176, col_offset=31), Name('answer', Param(), lineno=176, col_offset=43)], None, None, [Str('rb', lineno=176, col_offset=25), Str('wb', lineno=176, col_offset=37), Str('ask', lineno=176, col_offset=50)]), [Print(None, [Str('copying', lineno=177, col_offset=10), Name('src', Load(), lineno=177, col_offset=21)], True, lineno=177, col_offset=4), Print(None, [Str('     to', lineno=178, col_offset=10), Name('dst', Load(), lineno=178, col_offset=21)], True, lineno=178, col_offset=4), If(UnaryOp(Not(), Call(Name('okay', Load(), lineno=179, col_offset=11), [Str('okay to copy? ', lineno=179, col_offset=16), Name('answer', Load(), lineno=179, col_offset=34)], [], None, None, lineno=179, col_offset=11), lineno=179, col_offset=7), [Return(None, lineno=180, col_offset=8)], [], lineno=179, col_offset=4), Assign([Name('f', Store(), lineno=181, col_offset=4)], Call(Name('open', Load(), lineno=181, col_offset=8), [Name('src', Load(), lineno=181, col_offset=13), Name('rmode', Load(), lineno=181, col_offset=18)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=4), Assign([Name('g', Store(), lineno=182, col_offset=4)], Call(Name('open', Load(), lineno=182, col_offset=8), [Name('dst', Load(), lineno=182, col_offset=13), Name('wmode', Load(), lineno=182, col_offset=18)], [], None, None, lineno=182, col_offset=8), lineno=182, col_offset=4), While(Num(1, lineno=183, col_offset=10), [Assign([Name('buf', Store(), lineno=184, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=184, col_offset=14), 'read', Load(), lineno=184, col_offset=14), [Name('BUFSIZE', Load(), lineno=184, col_offset=21)], [], None, None, lineno=184, col_offset=14), lineno=184, col_offset=8), If(UnaryOp(Not(), Name('buf', Load(), lineno=185, col_offset=15), lineno=185, col_offset=11), [Break( lineno=185, col_offset=20)], [], lineno=185, col_offset=8), Expr(Call(Attribute(Name('g', Load(), lineno=186, col_offset=8), 'write', Load(), lineno=186, col_offset=8), [Name('buf', Load(), lineno=186, col_offset=16)], [], None, None, lineno=186, col_offset=8), lineno=186, col_offset=8)], [], lineno=183, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=187, col_offset=4), 'close', Load(), lineno=187, col_offset=4), [], [], None, None, lineno=187, col_offset=4), lineno=187, col_offset=4), Expr(Call(Attribute(Name('g', Load(), lineno=188, col_offset=4), 'close', Load(), lineno=188, col_offset=4), [], [], None, None, lineno=188, col_offset=4), lineno=188, col_offset=4)], [], lineno=176, col_offset=0), FunctionDef('okay', arguments([Name('prompt', Param(), lineno=190, col_offset=9), Name('answer', Param(), lineno=190, col_offset=17)], None, None, [Str('ask', lineno=190, col_offset=24)]), [Assign([Name('answer', Store(), lineno=191, col_offset=4)], Call(Attribute(Call(Attribute(Name('answer', Load(), lineno=191, col_offset=13), 'strip', Load(), lineno=191, col_offset=13), [], [], None, None, lineno=191, col_offset=13), 'lower', Load(), lineno=191, col_offset=13), [], [], None, None, lineno=191, col_offset=13), lineno=191, col_offset=4), If(BoolOp(Or(), [UnaryOp(Not(), Name('answer', Load(), lineno=192, col_offset=11), lineno=192, col_offset=7), Compare(Subscript(Name('answer', Load(), lineno=192, col_offset=21), Index(Num(0, lineno=192, col_offset=28)), Load(), lineno=192, col_offset=21), [NotIn()], [Str('ny', lineno=192, col_offset=38)], lineno=192, col_offset=21)], lineno=192, col_offset=7), [Assign([Name('answer', Store(), lineno=193, col_offset=8)], Call(Name('raw_input', Load(), lineno=193, col_offset=17), [Name('prompt', Load(), lineno=193, col_offset=27)], [], None, None, lineno=193, col_offset=17), lineno=193, col_offset=8), Assign([Name('answer', Store(), lineno=194, col_offset=8)], Call(Attribute(Call(Attribute(Name('answer', Load(), lineno=194, col_offset=17), 'strip', Load(), lineno=194, col_offset=17), [], [], None, None, lineno=194, col_offset=17), 'lower', Load(), lineno=194, col_offset=17), [], [], None, None, lineno=194, col_offset=17), lineno=194, col_offset=8), If(UnaryOp(Not(), Name('answer', Load(), lineno=195, col_offset=15), lineno=195, col_offset=11), [Assign([Name('answer', Store(), lineno=196, col_offset=12)], Name('default_answer', Load(), lineno=196, col_offset=21), lineno=196, col_offset=12)], [], lineno=195, col_offset=8)], [], lineno=192, col_offset=4), If(Compare(Subscript(Name('answer', Load(), lineno=197, col_offset=7), Slice(None, Num(1, lineno=197, col_offset=15), None), Load(), lineno=197, col_offset=7), [Eq()], [Str('y', lineno=197, col_offset=21)], lineno=197, col_offset=7), [Return(Num(1, lineno=198, col_offset=15), lineno=198, col_offset=8)], [], lineno=197, col_offset=4), If(Compare(Subscript(Name('answer', Load(), lineno=199, col_offset=7), Slice(None, Num(1, lineno=199, col_offset=15), None), Load(), lineno=199, col_offset=7), [Eq()], [Str('n', lineno=199, col_offset=21)], lineno=199, col_offset=7), [Return(Num(0, lineno=200, col_offset=15), lineno=200, col_offset=8)], [], lineno=199, col_offset=4), Print(None, [Str('Yes or No please -- try again:', lineno=201, col_offset=10)], True, lineno=201, col_offset=4), Return(Call(Name('okay', Load(), lineno=202, col_offset=11), [Name('prompt', Load(), lineno=202, col_offset=16)], [], None, None, lineno=202, col_offset=11), lineno=202, col_offset=4)], [], lineno=190, col_offset=0), If(Compare(Name('__name__', Load(), lineno=204, col_offset=3), [Eq()], [Str('__main__', lineno=204, col_offset=15)], lineno=204, col_offset=3), [Expr(Call(Name('main', Load(), lineno=205, col_offset=4), [], [], None, None, lineno=205, col_offset=4), lineno=205, col_offset=4)], [], lineno=204, col_offset=0)])
