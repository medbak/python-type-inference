Module([Expr(Str('Create an applet from a Python script.\n\nThis puts up a dialog asking for a Python source file (\'TEXT\').\nThe output is a file with the same name but its ".py" suffix dropped.\nIt is created by copying an applet template and then adding a \'PYC \'\nresource named __main__ containing the compiled, marshalled script.\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), Import([alias('sys', None)], lineno=10, col_offset=0), Assign([Attribute(Name('sys', Load(), lineno=11, col_offset=0), 'stdout', Store(), lineno=11, col_offset=0)], Attribute(Name('sys', Load(), lineno=11, col_offset=13), 'stderr', Load(), lineno=11, col_offset=13), lineno=11, col_offset=0), Import([alias('os', None)], lineno=13, col_offset=0), Import([alias('MacOS', None)], lineno=14, col_offset=0), TryExcept([Import([alias('EasyDialogs', None)], lineno=16, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=17, col_offset=7), None, [Assign([Name('EasyDialogs', Store(), lineno=18, col_offset=4)], Name('None', Load(), lineno=18, col_offset=18), lineno=18, col_offset=4)], lineno=17, col_offset=0)], [], lineno=15, col_offset=0), Import([alias('buildtools', None)], lineno=19, col_offset=0), Import([alias('getopt', None)], lineno=20, col_offset=0), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('sys', Load(), lineno=22, col_offset=7), 'executable', Load(), lineno=22, col_offset=7), 'startswith', Load(), lineno=22, col_offset=7), [Attribute(Name('sys', Load(), lineno=22, col_offset=33), 'exec_prefix', Load(), lineno=22, col_offset=33)], [], None, None, lineno=22, col_offset=7), lineno=22, col_offset=3), [Assign([Attribute(Name('sys', Load(), lineno=27, col_offset=4), 'executable', Store(), lineno=27, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=27, col_offset=21), 'path', Load(), lineno=27, col_offset=21), 'join', Load(), lineno=27, col_offset=21), [Attribute(Name('sys', Load(), lineno=27, col_offset=34), 'prefix', Load(), lineno=27, col_offset=34), Str('Resources/Python.app/Contents/MacOS/Python', lineno=28, col_offset=12)], [], None, None, lineno=27, col_offset=21), lineno=27, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=31, col_offset=11), 'path', Load(), lineno=31, col_offset=11), 'exists', Load(), lineno=31, col_offset=11), [Attribute(Name('sys', Load(), lineno=31, col_offset=26), 'executable', Load(), lineno=31, col_offset=26)], [], None, None, lineno=31, col_offset=11), lineno=31, col_offset=7), [Assign([Attribute(Name('sys', Load(), lineno=32, col_offset=8), 'executable', Store(), lineno=32, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=32, col_offset=25), 'path', Load(), lineno=32, col_offset=25), 'join', Load(), lineno=32, col_offset=25), [Attribute(Name('sys', Load(), lineno=32, col_offset=38), 'exec_prefix', Load(), lineno=32, col_offset=38), Str('bin/python', lineno=32, col_offset=56)], [], None, None, lineno=32, col_offset=25), lineno=32, col_offset=8)], [], lineno=31, col_offset=4)], [], lineno=22, col_offset=0), FunctionDef('main', arguments([], None, None, []), [TryExcept([Expr(Call(Name('buildapplet', Load(), lineno=36, col_offset=8), [], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [ExceptHandler(Attribute(Name('buildtools', Load(), lineno=37, col_offset=11), 'BuildError', Load(), lineno=37, col_offset=11), Name('detail', Store(), lineno=37, col_offset=34), [If(Compare(Name('EasyDialogs', Load(), lineno=38, col_offset=11), [Is()], [Name('None', Load(), lineno=38, col_offset=26)], lineno=38, col_offset=11), [Print(None, [Name('detail', Load(), lineno=39, col_offset=18)], True, lineno=39, col_offset=12)], [Expr(Call(Attribute(Name('EasyDialogs', Load(), lineno=41, col_offset=12), 'Message', Load(), lineno=41, col_offset=12), [Name('detail', Load(), lineno=41, col_offset=32)], [], None, None, lineno=41, col_offset=12), lineno=41, col_offset=12)], lineno=38, col_offset=8)], lineno=37, col_offset=4)], [], lineno=35, col_offset=4)], [], lineno=34, col_offset=0), FunctionDef('buildapplet', arguments([], None, None, []), [Assign([Attribute(Name('buildtools', Load(), lineno=45, col_offset=4), 'DEBUG', Store(), lineno=45, col_offset=4)], Num(1, lineno=45, col_offset=21), lineno=45, col_offset=4), Assign([Name('template', Store(), lineno=50, col_offset=4)], Call(Attribute(Name('buildtools', Load(), lineno=50, col_offset=15), 'findtemplate', Load(), lineno=50, col_offset=15), [], [], None, None, lineno=50, col_offset=15), lineno=50, col_offset=4), If(UnaryOp(Not(), Subscript(Attribute(Name('sys', Load(), lineno=54, col_offset=11), 'argv', Load(), lineno=54, col_offset=11), Slice(Num(1, lineno=54, col_offset=20), None, None), Load(), lineno=54, col_offset=11), lineno=54, col_offset=7), [If(Compare(Name('EasyDialogs', Load(), lineno=55, col_offset=11), [Is()], [Name('None', Load(), lineno=55, col_offset=26)], lineno=55, col_offset=11), [Expr(Call(Name('usage', Load(), lineno=56, col_offset=12), [], [], None, None, lineno=56, col_offset=12), lineno=56, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=57, col_offset=12), 'exit', Load(), lineno=57, col_offset=12), [Num(1, lineno=57, col_offset=21)], [], None, None, lineno=57, col_offset=12), lineno=57, col_offset=12)], [], lineno=55, col_offset=8), Assign([Name('filename', Store(), lineno=59, col_offset=8)], Call(Attribute(Name('EasyDialogs', Load(), lineno=59, col_offset=19), 'AskFileForOpen', Load(), lineno=59, col_offset=19), [], [keyword('message', Str('Select Python source or applet:', lineno=59, col_offset=54)), keyword('typeList', Tuple([Str('TEXT', lineno=60, col_offset=26), Str('APPL', lineno=60, col_offset=34)], Load(), lineno=60, col_offset=26))], None, None, lineno=59, col_offset=19), lineno=59, col_offset=8), If(UnaryOp(Not(), Name('filename', Load(), lineno=61, col_offset=15), lineno=61, col_offset=11), [Return(None, lineno=62, col_offset=12)], [], lineno=61, col_offset=8), Assign([Tuple([Name('tp', Store(), lineno=63, col_offset=8), Name('tf', Store(), lineno=63, col_offset=12)], Store(), lineno=63, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=63, col_offset=17), 'path', Load(), lineno=63, col_offset=17), 'split', Load(), lineno=63, col_offset=17), [Name('filename', Load(), lineno=63, col_offset=31)], [], None, None, lineno=63, col_offset=17), lineno=63, col_offset=8), If(Compare(Subscript(Name('tf', Load(), lineno=64, col_offset=11), Slice(Num(-3, lineno=64, col_offset=15), None, None), Load(), lineno=64, col_offset=11), [Eq()], [Str('.py', lineno=64, col_offset=22)], lineno=64, col_offset=11), [Assign([Name('tf', Store(), lineno=65, col_offset=12)], Subscript(Name('tf', Load(), lineno=65, col_offset=17), Slice(None, Num(-3, lineno=65, col_offset=22), None), Load(), lineno=65, col_offset=17), lineno=65, col_offset=12)], [Assign([Name('tf', Store(), lineno=67, col_offset=12)], BinOp(Name('tf', Load(), lineno=67, col_offset=17), Add(), Str('.applet', lineno=67, col_offset=22), lineno=67, col_offset=17), lineno=67, col_offset=12)], lineno=64, col_offset=8), Assign([Name('dstfilename', Store(), lineno=68, col_offset=8)], Call(Attribute(Name('EasyDialogs', Load(), lineno=68, col_offset=22), 'AskFileForSave', Load(), lineno=68, col_offset=22), [], [keyword('message', Str('Save application as:', lineno=68, col_offset=57)), keyword('savedFileName', Name('tf', Load(), lineno=69, col_offset=30))], None, None, lineno=68, col_offset=22), lineno=68, col_offset=8), If(UnaryOp(Not(), Name('dstfilename', Load(), lineno=70, col_offset=15), lineno=70, col_offset=11), [Return(None, lineno=70, col_offset=28)], [], lineno=70, col_offset=8), Assign([Tuple([Name('cr', Store(), lineno=71, col_offset=8), Name('tp', Store(), lineno=71, col_offset=12)], Store(), lineno=71, col_offset=8)], Call(Attribute(Name('MacOS', Load(), lineno=71, col_offset=17), 'GetCreatorAndType', Load(), lineno=71, col_offset=17), [Name('filename', Load(), lineno=71, col_offset=41)], [], None, None, lineno=71, col_offset=17), lineno=71, col_offset=8), If(Compare(Name('tp', Load(), lineno=72, col_offset=11), [Eq()], [Str('APPL', lineno=72, col_offset=17)], lineno=72, col_offset=11), [Expr(Call(Attribute(Name('buildtools', Load(), lineno=73, col_offset=12), 'update', Load(), lineno=73, col_offset=12), [Name('template', Load(), lineno=73, col_offset=30), Name('filename', Load(), lineno=73, col_offset=40), Name('dstfilename', Load(), lineno=73, col_offset=50)], [], None, None, lineno=73, col_offset=12), lineno=73, col_offset=12)], [Expr(Call(Attribute(Name('buildtools', Load(), lineno=75, col_offset=12), 'process', Load(), lineno=75, col_offset=12), [Name('template', Load(), lineno=75, col_offset=31), Name('filename', Load(), lineno=75, col_offset=41), Name('dstfilename', Load(), lineno=75, col_offset=51), Num(1, lineno=75, col_offset=64)], [], None, None, lineno=75, col_offset=12), lineno=75, col_offset=12)], lineno=72, col_offset=8)], [Assign([Name('SHORTOPTS', Store(), lineno=78, col_offset=8)], Str('o:r:ne:v?PR', lineno=78, col_offset=20), lineno=78, col_offset=8), Assign([Name('LONGOPTS', Store(), lineno=79, col_offset=8)], Tuple([Str('output=', lineno=79, col_offset=18), Str('resource=', lineno=79, col_offset=29), Str('noargv', lineno=79, col_offset=42), Str('extra=', lineno=79, col_offset=52), Str('verbose', lineno=79, col_offset=62), Str('help', lineno=79, col_offset=73), Str('python=', lineno=79, col_offset=81), Str('destroot=', lineno=79, col_offset=92)], Load(), lineno=79, col_offset=18), lineno=79, col_offset=8), TryExcept([Assign([Tuple([Name('options', Store(), lineno=81, col_offset=12), Name('args', Store(), lineno=81, col_offset=21)], Store(), lineno=81, col_offset=12)], Call(Attribute(Name('getopt', Load(), lineno=81, col_offset=28), 'getopt', Load(), lineno=81, col_offset=28), [Subscript(Attribute(Name('sys', Load(), lineno=81, col_offset=42), 'argv', Load(), lineno=81, col_offset=42), Slice(Num(1, lineno=81, col_offset=51), None, None), Load(), lineno=81, col_offset=42), Name('SHORTOPTS', Load(), lineno=81, col_offset=56), Name('LONGOPTS', Load(), lineno=81, col_offset=67)], [], None, None, lineno=81, col_offset=28), lineno=81, col_offset=12)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=82, col_offset=15), 'error', Load(), lineno=82, col_offset=15), None, [Expr(Call(Name('usage', Load(), lineno=83, col_offset=12), [], [], None, None, lineno=83, col_offset=12), lineno=83, col_offset=12)], lineno=82, col_offset=8)], [], lineno=80, col_offset=8), If(BoolOp(And(), [Name('options', Load(), lineno=84, col_offset=11), Compare(Call(Name('len', Load(), lineno=84, col_offset=23), [Name('args', Load(), lineno=84, col_offset=27)], [], None, None, lineno=84, col_offset=23), [Gt()], [Num(1, lineno=84, col_offset=35)], lineno=84, col_offset=23)], lineno=84, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=85, col_offset=12), 'stderr', Load(), lineno=85, col_offset=12), 'write', Load(), lineno=85, col_offset=12), [Str('Cannot use options when specifying multiple input files', lineno=85, col_offset=29)], [], None, None, lineno=85, col_offset=12), lineno=85, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=86, col_offset=12), 'exit', Load(), lineno=86, col_offset=12), [Num(1, lineno=86, col_offset=21)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12)], [], lineno=84, col_offset=8), Assign([Name('dstfilename', Store(), lineno=87, col_offset=8)], Name('None', Load(), lineno=87, col_offset=22), lineno=87, col_offset=8), Assign([Name('rsrcfilename', Store(), lineno=88, col_offset=8)], Name('None', Load(), lineno=88, col_offset=23), lineno=88, col_offset=8), Assign([Name('raw', Store(), lineno=89, col_offset=8)], Num(0, lineno=89, col_offset=14), lineno=89, col_offset=8), Assign([Name('extras', Store(), lineno=90, col_offset=8)], List([], Load(), lineno=90, col_offset=17), lineno=90, col_offset=8), Assign([Name('verbose', Store(), lineno=91, col_offset=8)], Name('None', Load(), lineno=91, col_offset=18), lineno=91, col_offset=8), Assign([Name('destroot', Store(), lineno=92, col_offset=8)], Str('', lineno=92, col_offset=19), lineno=92, col_offset=8), For(Tuple([Name('opt', Store(), lineno=93, col_offset=12), Name('arg', Store(), lineno=93, col_offset=17)], Store(), lineno=93, col_offset=12), Name('options', Load(), lineno=93, col_offset=24), [If(Compare(Name('opt', Load(), lineno=94, col_offset=15), [In()], [Tuple([Str('-o', lineno=94, col_offset=23), Str('--output', lineno=94, col_offset=29)], Load(), lineno=94, col_offset=23)], lineno=94, col_offset=15), [Assign([Name('dstfilename', Store(), lineno=95, col_offset=16)], Name('arg', Load(), lineno=95, col_offset=30), lineno=95, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=96, col_offset=17), [In()], [Tuple([Str('-r', lineno=96, col_offset=25), Str('--resource', lineno=96, col_offset=31)], Load(), lineno=96, col_offset=25)], lineno=96, col_offset=17), [Assign([Name('rsrcfilename', Store(), lineno=97, col_offset=16)], Name('arg', Load(), lineno=97, col_offset=31), lineno=97, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=98, col_offset=17), [In()], [Tuple([Str('-n', lineno=98, col_offset=25), Str('--noargv', lineno=98, col_offset=31)], Load(), lineno=98, col_offset=25)], lineno=98, col_offset=17), [Assign([Name('raw', Store(), lineno=99, col_offset=16)], Num(1, lineno=99, col_offset=22), lineno=99, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=100, col_offset=17), [In()], [Tuple([Str('-e', lineno=100, col_offset=25), Str('--extra', lineno=100, col_offset=31)], Load(), lineno=100, col_offset=25)], lineno=100, col_offset=17), [If(Compare(Str(':', lineno=101, col_offset=19), [In()], [Name('arg', Load(), lineno=101, col_offset=26)], lineno=101, col_offset=19), [Assign([Name('arg', Store(), lineno=102, col_offset=20)], Call(Attribute(Name('arg', Load(), lineno=102, col_offset=26), 'split', Load(), lineno=102, col_offset=26), [Str(':', lineno=102, col_offset=36)], [], None, None, lineno=102, col_offset=26), lineno=102, col_offset=20)], [], lineno=101, col_offset=16), Expr(Call(Attribute(Name('extras', Load(), lineno=103, col_offset=16), 'append', Load(), lineno=103, col_offset=16), [Name('arg', Load(), lineno=103, col_offset=30)], [], None, None, lineno=103, col_offset=16), lineno=103, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=104, col_offset=17), [In()], [Tuple([Str('-P', lineno=104, col_offset=25), Str('--python', lineno=104, col_offset=31)], Load(), lineno=104, col_offset=25)], lineno=104, col_offset=17), [Assign([Attribute(Name('sys', Load(), lineno=108, col_offset=16), 'executable', Store(), lineno=108, col_offset=16)], Name('arg', Load(), lineno=108, col_offset=33), lineno=108, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=109, col_offset=17), [In()], [Tuple([Str('-v', lineno=109, col_offset=25), Str('--verbose', lineno=109, col_offset=31)], Load(), lineno=109, col_offset=25)], lineno=109, col_offset=17), [Assign([Name('verbose', Store(), lineno=110, col_offset=16)], Call(Name('Verbose', Load(), lineno=110, col_offset=26), [], [], None, None, lineno=110, col_offset=26), lineno=110, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=111, col_offset=17), [In()], [Tuple([Str('-?', lineno=111, col_offset=25), Str('--help', lineno=111, col_offset=31)], Load(), lineno=111, col_offset=25)], lineno=111, col_offset=17), [Expr(Call(Name('usage', Load(), lineno=112, col_offset=16), [], [], None, None, lineno=112, col_offset=16), lineno=112, col_offset=16)], [If(Compare(Name('opt', Load(), lineno=113, col_offset=17), [In()], [Tuple([Str('-d', lineno=113, col_offset=25), Str('--destroot', lineno=113, col_offset=31)], Load(), lineno=113, col_offset=25)], lineno=113, col_offset=17), [Assign([Name('destroot', Store(), lineno=114, col_offset=16)], Name('arg', Load(), lineno=114, col_offset=27), lineno=114, col_offset=16)], [], lineno=113, col_offset=17)], lineno=111, col_offset=17)], lineno=109, col_offset=17)], lineno=104, col_offset=17)], lineno=100, col_offset=17)], lineno=98, col_offset=17)], lineno=96, col_offset=17)], lineno=94, col_offset=12)], [], lineno=93, col_offset=8), For(Name('filename', Store(), lineno=116, col_offset=12), Name('args', Load(), lineno=116, col_offset=24), [Assign([Tuple([Name('cr', Store(), lineno=117, col_offset=12), Name('tp', Store(), lineno=117, col_offset=16)], Store(), lineno=117, col_offset=12)], Call(Attribute(Name('MacOS', Load(), lineno=117, col_offset=21), 'GetCreatorAndType', Load(), lineno=117, col_offset=21), [Name('filename', Load(), lineno=117, col_offset=45)], [], None, None, lineno=117, col_offset=21), lineno=117, col_offset=12), If(Compare(Name('tp', Load(), lineno=118, col_offset=15), [Eq()], [Str('APPL', lineno=118, col_offset=21)], lineno=118, col_offset=15), [Expr(Call(Attribute(Name('buildtools', Load(), lineno=119, col_offset=16), 'update', Load(), lineno=119, col_offset=16), [Name('template', Load(), lineno=119, col_offset=34), Name('filename', Load(), lineno=119, col_offset=44), Name('dstfilename', Load(), lineno=119, col_offset=54)], [], None, None, lineno=119, col_offset=16), lineno=119, col_offset=16)], [Expr(Call(Attribute(Name('buildtools', Load(), lineno=121, col_offset=16), 'process', Load(), lineno=121, col_offset=16), [Name('template', Load(), lineno=121, col_offset=35), Name('filename', Load(), lineno=121, col_offset=45), Name('dstfilename', Load(), lineno=121, col_offset=55), Num(1, lineno=121, col_offset=68)], [keyword('rsrcname', Name('rsrcfilename', Load(), lineno=122, col_offset=33)), keyword('others', Name('extras', Load(), lineno=122, col_offset=54)), keyword('raw', Name('raw', Load(), lineno=122, col_offset=66)), keyword('progress', Name('verbose', Load(), lineno=123, col_offset=33)), keyword('destroot', Name('destroot', Load(), lineno=123, col_offset=51))], None, None, lineno=121, col_offset=16), lineno=121, col_offset=16)], lineno=118, col_offset=12)], [], lineno=116, col_offset=8)], lineno=54, col_offset=4)], [], lineno=44, col_offset=0), FunctionDef('usage', arguments([], None, None, []), [Print(None, [Str('BuildApplet creates an application from a Python source file', lineno=126, col_offset=10)], True, lineno=126, col_offset=4), Print(None, [Str('Usage:', lineno=127, col_offset=10)], True, lineno=127, col_offset=4), Print(None, [Str('  BuildApplet     interactive, single file, no options', lineno=128, col_offset=10)], True, lineno=128, col_offset=4), Print(None, [Str('  BuildApplet src1.py src2.py ...   non-interactive multiple file', lineno=129, col_offset=10)], True, lineno=129, col_offset=4), Print(None, [Str('  BuildApplet [options] src.py    non-interactive single file', lineno=130, col_offset=10)], True, lineno=130, col_offset=4), Print(None, [Str('Options:', lineno=131, col_offset=10)], True, lineno=131, col_offset=4), Print(None, [Str('  --output o        Output file; default based on source filename, short -o', lineno=132, col_offset=10)], True, lineno=132, col_offset=4), Print(None, [Str('  --resource r      Resource file; default based on source filename, short -r', lineno=133, col_offset=10)], True, lineno=133, col_offset=4), Print(None, [Str('  --noargv          Build applet without drag-and-drop sys.argv emulation, short -n, OSX only', lineno=134, col_offset=10)], True, lineno=134, col_offset=4), Print(None, [Str('  --extra src[:dst] Extra file to put in .app bundle, short -e, OSX only', lineno=135, col_offset=10)], True, lineno=135, col_offset=4), Print(None, [Str('  --verbose         Verbose, short -v', lineno=136, col_offset=10)], True, lineno=136, col_offset=4), Print(None, [Str('  --help            This message, short -?', lineno=137, col_offset=10)], True, lineno=137, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=138, col_offset=4), 'exit', Load(), lineno=138, col_offset=4), [Num(1, lineno=138, col_offset=13)], [], None, None, lineno=138, col_offset=4), lineno=138, col_offset=4)], [], lineno=125, col_offset=0), ClassDef('Verbose', [], [Expr(Str('This class mimics EasyDialogs.ProgressBar but prints to stderr', lineno=141, col_offset=4), lineno=141, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=142, col_offset=17)], 'args', None, []), [If(BoolOp(And(), [Name('args', Load(), lineno=143, col_offset=11), Subscript(Name('args', Load(), lineno=143, col_offset=20), Index(Num(0, lineno=143, col_offset=25)), Load(), lineno=143, col_offset=20)], lineno=143, col_offset=11), [Expr(Call(Attribute(Name('self', Load(), lineno=144, col_offset=12), 'label', Load(), lineno=144, col_offset=12), [Subscript(Name('args', Load(), lineno=144, col_offset=23), Index(Num(0, lineno=144, col_offset=28)), Load(), lineno=144, col_offset=23)], [], None, None, lineno=144, col_offset=12), lineno=144, col_offset=12)], [], lineno=143, col_offset=8)], [], lineno=142, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=146, col_offset=12)], 'args', None, []), [Pass( lineno=147, col_offset=8)], [], lineno=146, col_offset=4), FunctionDef('inc', arguments([Name('self', Param(), lineno=149, col_offset=12)], 'args', None, []), [Pass( lineno=150, col_offset=8)], [], lineno=149, col_offset=4), FunctionDef('label', arguments([Name('self', Param(), lineno=152, col_offset=14), Name('str', Param(), lineno=152, col_offset=20)], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=153, col_offset=8), 'stderr', Load(), lineno=153, col_offset=8), 'write', Load(), lineno=153, col_offset=8), [BinOp(Name('str', Load(), lineno=153, col_offset=25), Add(), Str('\n', lineno=153, col_offset=29), lineno=153, col_offset=25)], [], None, None, lineno=153, col_offset=8), lineno=153, col_offset=8)], [], lineno=152, col_offset=4)], [], lineno=140, col_offset=0), If(Compare(Name('__name__', Load(), lineno=155, col_offset=3), [Eq()], [Str('__main__', lineno=155, col_offset=15)], lineno=155, col_offset=3), [Expr(Call(Name('main', Load(), lineno=156, col_offset=4), [], [], None, None, lineno=156, col_offset=4), lineno=156, col_offset=4)], [], lineno=155, col_offset=0)])
