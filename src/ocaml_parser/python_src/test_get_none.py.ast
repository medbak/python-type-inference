Module([Expr(Str('\nTestCases for checking set_get_returns_none.\n', lineno=3, col_offset=-1), lineno=3, col_offset=-1), Import([alias('os', None), alias('string', None)], lineno=5, col_offset=0), Import([alias('unittest', None)], lineno=6, col_offset=0), ImportFrom('test_all', [alias('db', None), alias('verbose', None), alias('get_new_database_path', None)], 0, lineno=8, col_offset=0), ClassDef('GetReturnsNoneTestCase', [Attribute(Name('unittest', Load(), lineno=13, col_offset=29), 'TestCase', Load(), lineno=13, col_offset=29)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=14, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=15, col_offset=8), 'filename', Store(), lineno=15, col_offset=8)], Call(Name('get_new_database_path', Load(), lineno=15, col_offset=24), [], [], None, None, lineno=15, col_offset=24), lineno=15, col_offset=8)], [], lineno=14, col_offset=4), FunctionDef('tearDown', arguments([Name('self', Param(), lineno=17, col_offset=17)], None, None, []), [TryExcept([Expr(Call(Attribute(Name('os', Load(), lineno=19, col_offset=12), 'remove', Load(), lineno=19, col_offset=12), [Attribute(Name('self', Load(), lineno=19, col_offset=22), 'filename', Load(), lineno=19, col_offset=22)], [], None, None, lineno=19, col_offset=12), lineno=19, col_offset=12)], [ExceptHandler(Attribute(Name('os', Load(), lineno=20, col_offset=15), 'error', Load(), lineno=20, col_offset=15), None, [Pass( lineno=21, col_offset=12)], lineno=20, col_offset=8)], [], lineno=18, col_offset=8)], [], lineno=17, col_offset=4), FunctionDef('test01_get_returns_none', arguments([Name('self', Param(), lineno=24, col_offset=32)], None, None, []), [Assign([Name('d', Store(), lineno=25, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=25, col_offset=12), 'DB', Load(), lineno=25, col_offset=12), [], [], None, None, lineno=25, col_offset=12), lineno=25, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=26, col_offset=8), 'open', Load(), lineno=26, col_offset=8), [Attribute(Name('self', Load(), lineno=26, col_offset=15), 'filename', Load(), lineno=26, col_offset=15), Attribute(Name('db', Load(), lineno=26, col_offset=30), 'DB_BTREE', Load(), lineno=26, col_offset=30), Attribute(Name('db', Load(), lineno=26, col_offset=43), 'DB_CREATE', Load(), lineno=26, col_offset=43)], [], None, None, lineno=26, col_offset=8), lineno=26, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=27, col_offset=8), 'set_get_returns_none', Load(), lineno=27, col_offset=8), [Num(1, lineno=27, col_offset=31)], [], None, None, lineno=27, col_offset=8), lineno=27, col_offset=8), For(Name('x', Store(), lineno=29, col_offset=12), Attribute(Name('string', Load(), lineno=29, col_offset=17), 'letters', Load(), lineno=29, col_offset=17), [Expr(Call(Attribute(Name('d', Load(), lineno=30, col_offset=12), 'put', Load(), lineno=30, col_offset=12), [Name('x', Load(), lineno=30, col_offset=18), BinOp(Name('x', Load(), lineno=30, col_offset=21), Mult(), Num(40, lineno=30, col_offset=25), lineno=30, col_offset=21)], [], None, None, lineno=30, col_offset=12), lineno=30, col_offset=12)], [], lineno=29, col_offset=8), Assign([Name('data', Store(), lineno=32, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=32, col_offset=15), 'get', Load(), lineno=32, col_offset=15), [Str('bad key', lineno=32, col_offset=21)], [], None, None, lineno=32, col_offset=15), lineno=32, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=33, col_offset=8), 'assertEqual', Load(), lineno=33, col_offset=8), [Name('data', Load(), lineno=33, col_offset=25), Name('None', Load(), lineno=33, col_offset=31)], [], None, None, lineno=33, col_offset=8), lineno=33, col_offset=8), Assign([Name('data', Store(), lineno=35, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=35, col_offset=15), 'get', Load(), lineno=35, col_offset=15), [Subscript(Attribute(Name('string', Load(), lineno=35, col_offset=21), 'letters', Load(), lineno=35, col_offset=21), Index(Num(0, lineno=35, col_offset=36)), Load(), lineno=35, col_offset=21)], [], None, None, lineno=35, col_offset=15), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertEqual', Load(), lineno=36, col_offset=8), [Name('data', Load(), lineno=36, col_offset=25), BinOp(Subscript(Attribute(Name('string', Load(), lineno=36, col_offset=31), 'letters', Load(), lineno=36, col_offset=31), Index(Num(0, lineno=36, col_offset=46)), Load(), lineno=36, col_offset=31), Mult(), Num(40, lineno=36, col_offset=49), lineno=36, col_offset=31)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8), Assign([Name('count', Store(), lineno=38, col_offset=8)], Num(0, lineno=38, col_offset=16), lineno=38, col_offset=8), Assign([Name('c', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=39, col_offset=12), 'cursor', Load(), lineno=39, col_offset=12), [], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=8), Assign([Name('rec', Store(), lineno=40, col_offset=8)], Call(Attribute(Name('c', Load(), lineno=40, col_offset=14), 'first', Load(), lineno=40, col_offset=14), [], [], None, None, lineno=40, col_offset=14), lineno=40, col_offset=8), While(Name('rec', Load(), lineno=41, col_offset=14), [Assign([Name('count', Store(), lineno=42, col_offset=12)], BinOp(Name('count', Load(), lineno=42, col_offset=20), Add(), Num(1, lineno=42, col_offset=28), lineno=42, col_offset=20), lineno=42, col_offset=12), Assign([Name('rec', Store(), lineno=43, col_offset=12)], Call(Attribute(Name('c', Load(), lineno=43, col_offset=18), 'next', Load(), lineno=43, col_offset=18), [], [], None, None, lineno=43, col_offset=18), lineno=43, col_offset=12)], [], lineno=41, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=45, col_offset=8), 'assertEqual', Load(), lineno=45, col_offset=8), [Name('rec', Load(), lineno=45, col_offset=25), Name('None', Load(), lineno=45, col_offset=30)], [], None, None, lineno=45, col_offset=8), lineno=45, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=46, col_offset=8), 'assertEqual', Load(), lineno=46, col_offset=8), [Name('count', Load(), lineno=46, col_offset=25), Call(Name('len', Load(), lineno=46, col_offset=32), [Attribute(Name('string', Load(), lineno=46, col_offset=36), 'letters', Load(), lineno=46, col_offset=36)], [], None, None, lineno=46, col_offset=32)], [], None, None, lineno=46, col_offset=8), lineno=46, col_offset=8), Expr(Call(Attribute(Name('c', Load(), lineno=48, col_offset=8), 'close', Load(), lineno=48, col_offset=8), [], [], None, None, lineno=48, col_offset=8), lineno=48, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=49, col_offset=8), 'close', Load(), lineno=49, col_offset=8), [], [], None, None, lineno=49, col_offset=8), lineno=49, col_offset=8)], [], lineno=24, col_offset=4), FunctionDef('test02_get_raises_exception', arguments([Name('self', Param(), lineno=52, col_offset=36)], None, None, []), [Assign([Name('d', Store(), lineno=53, col_offset=8)], Call(Attribute(Name('db', Load(), lineno=53, col_offset=12), 'DB', Load(), lineno=53, col_offset=12), [], [], None, None, lineno=53, col_offset=12), lineno=53, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=54, col_offset=8), 'open', Load(), lineno=54, col_offset=8), [Attribute(Name('self', Load(), lineno=54, col_offset=15), 'filename', Load(), lineno=54, col_offset=15), Attribute(Name('db', Load(), lineno=54, col_offset=30), 'DB_BTREE', Load(), lineno=54, col_offset=30), Attribute(Name('db', Load(), lineno=54, col_offset=43), 'DB_CREATE', Load(), lineno=54, col_offset=43)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=55, col_offset=8), 'set_get_returns_none', Load(), lineno=55, col_offset=8), [Num(0, lineno=55, col_offset=31)], [], None, None, lineno=55, col_offset=8), lineno=55, col_offset=8), For(Name('x', Store(), lineno=57, col_offset=12), Attribute(Name('string', Load(), lineno=57, col_offset=17), 'letters', Load(), lineno=57, col_offset=17), [Expr(Call(Attribute(Name('d', Load(), lineno=58, col_offset=12), 'put', Load(), lineno=58, col_offset=12), [Name('x', Load(), lineno=58, col_offset=18), BinOp(Name('x', Load(), lineno=58, col_offset=21), Mult(), Num(40, lineno=58, col_offset=25), lineno=58, col_offset=21)], [], None, None, lineno=58, col_offset=12), lineno=58, col_offset=12)], [], lineno=57, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=60, col_offset=8), 'assertRaises', Load(), lineno=60, col_offset=8), [Attribute(Name('db', Load(), lineno=60, col_offset=26), 'DBNotFoundError', Load(), lineno=60, col_offset=26), Attribute(Name('d', Load(), lineno=60, col_offset=46), 'get', Load(), lineno=60, col_offset=46), Str('bad key', lineno=60, col_offset=53)], [], None, None, lineno=60, col_offset=8), lineno=60, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=61, col_offset=8), 'assertRaises', Load(), lineno=61, col_offset=8), [Name('KeyError', Load(), lineno=61, col_offset=26), Attribute(Name('d', Load(), lineno=61, col_offset=36), 'get', Load(), lineno=61, col_offset=36), Str('bad key', lineno=61, col_offset=43)], [], None, None, lineno=61, col_offset=8), lineno=61, col_offset=8), Assign([Name('data', Store(), lineno=63, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=63, col_offset=15), 'get', Load(), lineno=63, col_offset=15), [Subscript(Attribute(Name('string', Load(), lineno=63, col_offset=21), 'letters', Load(), lineno=63, col_offset=21), Index(Num(0, lineno=63, col_offset=36)), Load(), lineno=63, col_offset=21)], [], None, None, lineno=63, col_offset=15), lineno=63, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=64, col_offset=8), 'assertEqual', Load(), lineno=64, col_offset=8), [Name('data', Load(), lineno=64, col_offset=25), BinOp(Subscript(Attribute(Name('string', Load(), lineno=64, col_offset=31), 'letters', Load(), lineno=64, col_offset=31), Index(Num(0, lineno=64, col_offset=46)), Load(), lineno=64, col_offset=31), Mult(), Num(40, lineno=64, col_offset=49), lineno=64, col_offset=31)], [], None, None, lineno=64, col_offset=8), lineno=64, col_offset=8), Assign([Name('count', Store(), lineno=66, col_offset=8)], Num(0, lineno=66, col_offset=16), lineno=66, col_offset=8), Assign([Name('exceptionHappened', Store(), lineno=67, col_offset=8)], Num(0, lineno=67, col_offset=28), lineno=67, col_offset=8), Assign([Name('c', Store(), lineno=68, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=68, col_offset=12), 'cursor', Load(), lineno=68, col_offset=12), [], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=8), Assign([Name('rec', Store(), lineno=69, col_offset=8)], Call(Attribute(Name('c', Load(), lineno=69, col_offset=14), 'first', Load(), lineno=69, col_offset=14), [], [], None, None, lineno=69, col_offset=14), lineno=69, col_offset=8), While(Name('rec', Load(), lineno=70, col_offset=14), [Assign([Name('count', Store(), lineno=71, col_offset=12)], BinOp(Name('count', Load(), lineno=71, col_offset=20), Add(), Num(1, lineno=71, col_offset=28), lineno=71, col_offset=20), lineno=71, col_offset=12), TryExcept([Assign([Name('rec', Store(), lineno=73, col_offset=16)], Call(Attribute(Name('c', Load(), lineno=73, col_offset=22), 'next', Load(), lineno=73, col_offset=22), [], [], None, None, lineno=73, col_offset=22), lineno=73, col_offset=16)], [ExceptHandler(Attribute(Name('db', Load(), lineno=74, col_offset=19), 'DBNotFoundError', Load(), lineno=74, col_offset=19), None, [Assign([Name('exceptionHappened', Store(), lineno=75, col_offset=16)], Num(1, lineno=75, col_offset=36), lineno=75, col_offset=16), Break( lineno=76, col_offset=16)], lineno=74, col_offset=12)], [], lineno=72, col_offset=12)], [], lineno=70, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=78, col_offset=8), 'assertNotEqual', Load(), lineno=78, col_offset=8), [Name('rec', Load(), lineno=78, col_offset=28), Name('None', Load(), lineno=78, col_offset=33)], [], None, None, lineno=78, col_offset=8), lineno=78, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=79, col_offset=8), 'assertTrue', Load(), lineno=79, col_offset=8), [Name('exceptionHappened', Load(), lineno=79, col_offset=24)], [], None, None, lineno=79, col_offset=8), lineno=79, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=80, col_offset=8), 'assertEqual', Load(), lineno=80, col_offset=8), [Name('count', Load(), lineno=80, col_offset=25), Call(Name('len', Load(), lineno=80, col_offset=32), [Attribute(Name('string', Load(), lineno=80, col_offset=36), 'letters', Load(), lineno=80, col_offset=36)], [], None, None, lineno=80, col_offset=32)], [], None, None, lineno=80, col_offset=8), lineno=80, col_offset=8), Expr(Call(Attribute(Name('c', Load(), lineno=82, col_offset=8), 'close', Load(), lineno=82, col_offset=8), [], [], None, None, lineno=82, col_offset=8), lineno=82, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=83, col_offset=8), 'close', Load(), lineno=83, col_offset=8), [], [], None, None, lineno=83, col_offset=8), lineno=83, col_offset=8)], [], lineno=52, col_offset=4)], [], lineno=13, col_offset=0), FunctionDef('test_suite', arguments([], None, None, []), [Return(Call(Attribute(Name('unittest', Load(), lineno=88, col_offset=11), 'makeSuite', Load(), lineno=88, col_offset=11), [Name('GetReturnsNoneTestCase', Load(), lineno=88, col_offset=30)], [], None, None, lineno=88, col_offset=11), lineno=88, col_offset=4)], [], lineno=87, col_offset=0), If(Compare(Name('__name__', Load(), lineno=91, col_offset=3), [Eq()], [Str('__main__', lineno=91, col_offset=15)], lineno=91, col_offset=3), [Expr(Call(Attribute(Name('unittest', Load(), lineno=92, col_offset=4), 'main', Load(), lineno=92, col_offset=4), [], [keyword('defaultTest', Str('test_suite', lineno=92, col_offset=30))], None, None, lineno=92, col_offset=4), lineno=92, col_offset=4)], [], lineno=91, col_offset=0)])
