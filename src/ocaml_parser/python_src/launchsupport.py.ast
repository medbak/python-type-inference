Module([Import([alias('string', None)], lineno=6, col_offset=0), Assign([Name('MODNAME', Store(), lineno=9, col_offset=0)], Str('_Launch', lineno=9, col_offset=10), lineno=9, col_offset=0), Assign([Name('OBJECTNAME', Store(), lineno=10, col_offset=0)], Str('UNUSED', lineno=10, col_offset=13), lineno=10, col_offset=0), Assign([Name('KIND', Store(), lineno=11, col_offset=0)], Str('Record', lineno=11, col_offset=7), lineno=11, col_offset=0), Assign([Name('MODPREFIX', Store(), lineno=14, col_offset=0)], Str('Launch', lineno=14, col_offset=12), lineno=14, col_offset=0), Assign([Name('OBJECTTYPE', Store(), lineno=15, col_offset=0)], BinOp(Name('OBJECTNAME', Load(), lineno=15, col_offset=13), Add(), Name('KIND', Load(), lineno=15, col_offset=26), lineno=15, col_offset=13), lineno=15, col_offset=0), Assign([Name('OBJECTPREFIX', Store(), lineno=16, col_offset=0)], BinOp(Name('MODPREFIX', Load(), lineno=16, col_offset=15), Add(), Str('Obj', lineno=16, col_offset=27), lineno=16, col_offset=15), lineno=16, col_offset=0), Assign([Name('INPUTFILE', Store(), lineno=17, col_offset=0)], BinOp(Call(Attribute(Name('string', Load(), lineno=17, col_offset=12), 'lower', Load(), lineno=17, col_offset=12), [Name('MODPREFIX', Load(), lineno=17, col_offset=25)], [], None, None, lineno=17, col_offset=12), Add(), Str('gen.py', lineno=17, col_offset=38), lineno=17, col_offset=12), lineno=17, col_offset=0), Assign([Name('OUTPUTFILE', Store(), lineno=18, col_offset=0)], BinOp(Name('MODNAME', Load(), lineno=18, col_offset=13), Add(), Str('module.c', lineno=18, col_offset=23), lineno=18, col_offset=13), lineno=18, col_offset=0), ImportFrom('macsupport', [alias('*', None)], 0, lineno=20, col_offset=0), Assign([Name('LSAcceptanceFlags', Store(), lineno=23, col_offset=0)], Call(Name('Type', Load(), lineno=23, col_offset=20), [Str('LSAcceptanceFlags', lineno=23, col_offset=25), Str('l', lineno=23, col_offset=46)], [], None, None, lineno=23, col_offset=20), lineno=23, col_offset=0), Assign([Name('LSInitializeFlags', Store(), lineno=24, col_offset=0)], Call(Name('Type', Load(), lineno=24, col_offset=20), [Str('LSInitializeFlags', lineno=24, col_offset=25), Str('l', lineno=24, col_offset=46)], [], None, None, lineno=24, col_offset=20), lineno=24, col_offset=0), Assign([Name('LSRequestedInfo', Store(), lineno=25, col_offset=0)], Call(Name('Type', Load(), lineno=25, col_offset=18), [Str('LSRequestedInfo', lineno=25, col_offset=23), Str('l', lineno=25, col_offset=42)], [], None, None, lineno=25, col_offset=18), lineno=25, col_offset=0), Assign([Name('LSRolesMask', Store(), lineno=26, col_offset=0)], Call(Name('Type', Load(), lineno=26, col_offset=14), [Str('LSRolesMask', lineno=26, col_offset=19), Str('l', lineno=26, col_offset=34)], [], None, None, lineno=26, col_offset=14), lineno=26, col_offset=0), Assign([Name('UniCharCount', Store(), lineno=27, col_offset=0)], Call(Name('Type', Load(), lineno=27, col_offset=15), [Str('UniCharCount', lineno=27, col_offset=20), Str('l', lineno=27, col_offset=36)], [], None, None, lineno=27, col_offset=15), lineno=27, col_offset=0), Assign([Name('OptCFStringRef', Store(), lineno=28, col_offset=0)], Call(Name('OpaqueByValueType', Load(), lineno=28, col_offset=17), [Str('CFStringRef', lineno=28, col_offset=35), Str('OptCFStringRefObj', lineno=28, col_offset=50)], [], None, None, lineno=28, col_offset=17), lineno=28, col_offset=0), Assign([Name('LSItemInfoRecord', Store(), lineno=29, col_offset=0)], Call(Name('OpaqueType', Load(), lineno=29, col_offset=19), [Str('LSItemInfoRecord', lineno=29, col_offset=30), Str('LSItemInfoRecord', lineno=29, col_offset=50)], [], None, None, lineno=29, col_offset=19), lineno=29, col_offset=0), Assign([Name('includestuff', Store(), lineno=31, col_offset=0)], BinOp(Name('includestuff', Load(), lineno=31, col_offset=15), Add(), Str('\n#if PY_VERSION_HEX < 0x02040000\nPyObject *PyMac_GetOSErrException(void);\n#endif\n\n#include <ApplicationServices/ApplicationServices.h>\n\n/*\n** Optional CFStringRef. None will pass NULL\n*/\nstatic int\nOptCFStringRefObj_Convert(PyObject *v, CFStringRef *spec)\n{\n        if (v == Py_None) {\n                *spec = NULL;\n                return 1;\n        }\n        return CFStringRefObj_Convert(v, spec);\n}\n\nPyObject *\nOptCFStringRefObj_New(CFStringRef it)\n{\n        if (it == NULL) {\n                Py_INCREF(Py_None);\n                return Py_None;\n        }\n        return CFStringRefObj_New(it);\n}\n\n/*\n** Convert LSItemInfoRecord to Python.\n*/\nPyObject *\nLSItemInfoRecord_New(LSItemInfoRecord *it)\n{\n        return Py_BuildValue("{s:is:O&s:O&s:O&s:O&s:i}",\n                "flags", it->flags,\n                "filetype", PyMac_BuildOSType, it->filetype,\n                "creator", PyMac_BuildOSType, it->creator,\n                "extension", OptCFStringRefObj_New, it->extension,\n                "iconFileName", OptCFStringRefObj_New, it->iconFileName,\n                "kindID", it->kindID);\n}\n', lineno=75, col_offset=-1), lineno=31, col_offset=15), lineno=31, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=78, col_offset=0), [BinOp(Call(Attribute(Name('string', Load(), lineno=78, col_offset=9), 'lower', Load(), lineno=78, col_offset=9), [Name('MODPREFIX', Load(), lineno=78, col_offset=22)], [], None, None, lineno=78, col_offset=9), Add(), Str('typetest.py', lineno=78, col_offset=35), lineno=78, col_offset=9)], [], None, None, lineno=78, col_offset=0), lineno=78, col_offset=0), Assign([Name('module', Store(), lineno=81, col_offset=0)], Call(Name('MacModule', Load(), lineno=81, col_offset=9), [Name('MODNAME', Load(), lineno=81, col_offset=19), Name('MODPREFIX', Load(), lineno=81, col_offset=28), Name('includestuff', Load(), lineno=81, col_offset=39), Name('finalstuff', Load(), lineno=81, col_offset=53), Name('initstuff', Load(), lineno=81, col_offset=65)], [], None, None, lineno=81, col_offset=9), lineno=81, col_offset=0), Assign([Name('Function', Store(), lineno=86, col_offset=0)], Name('OSErrFunctionGenerator', Load(), lineno=86, col_offset=11), lineno=86, col_offset=0), Assign([Name('functions', Store(), lineno=90, col_offset=0)], List([], Load(), lineno=90, col_offset=12), lineno=90, col_offset=0), Expr(Call(Name('execfile', Load(), lineno=92, col_offset=0), [Name('INPUTFILE', Load(), lineno=92, col_offset=9)], [], None, None, lineno=92, col_offset=0), lineno=92, col_offset=0), For(Name('f', Store(), lineno=96, col_offset=4), Name('functions', Load(), lineno=96, col_offset=9), [Expr(Call(Attribute(Name('module', Load(), lineno=96, col_offset=20), 'add', Load(), lineno=96, col_offset=20), [Name('f', Load(), lineno=96, col_offset=31)], [], None, None, lineno=96, col_offset=20), lineno=96, col_offset=20)], [], lineno=96, col_offset=0), Expr(Call(Name('SetOutputFileName', Load(), lineno=100, col_offset=0), [Name('OUTPUTFILE', Load(), lineno=100, col_offset=18)], [], None, None, lineno=100, col_offset=0), lineno=100, col_offset=0), Expr(Call(Attribute(Name('module', Load(), lineno=101, col_offset=0), 'generate', Load(), lineno=101, col_offset=0), [], [], None, None, lineno=101, col_offset=0), lineno=101, col_offset=0)])
