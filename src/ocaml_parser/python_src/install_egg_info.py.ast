Module([Expr(Str("distutils.command.install_egg_info\n\nImplements the Distutils 'install_egg_info' command, for installing\na package's PKG-INFO metadata.", lineno=4, col_offset=-1), lineno=4, col_offset=-1), ImportFrom('distutils.cmd', [alias('Command', None)], 0, lineno=7, col_offset=0), ImportFrom('distutils', [alias('log', None), alias('dir_util', None)], 0, lineno=8, col_offset=0), Import([alias('os', None), alias('sys', None), alias('re', None)], lineno=9, col_offset=0), ClassDef('install_egg_info', [Name('Command', Load(), lineno=11, col_offset=23)], [Expr(Str('Install an .egg-info file for the package', lineno=12, col_offset=4), lineno=12, col_offset=4), Assign([Name('description', Store(), lineno=14, col_offset=4)], Str("Install package's PKG-INFO metadata as an .egg-info file", lineno=14, col_offset=18), lineno=14, col_offset=4), Assign([Name('user_options', Store(), lineno=15, col_offset=4)], List([Tuple([Str('install-dir=', lineno=16, col_offset=9), Str('d', lineno=16, col_offset=25), Str('directory to install to', lineno=16, col_offset=30)], Load(), lineno=16, col_offset=9)], Load(), lineno=15, col_offset=19), lineno=15, col_offset=4), FunctionDef('initialize_options', arguments([Name('self', Param(), lineno=19, col_offset=27)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=20, col_offset=8), 'install_dir', Store(), lineno=20, col_offset=8)], Name('None', Load(), lineno=20, col_offset=27), lineno=20, col_offset=8)], [], lineno=19, col_offset=4), FunctionDef('finalize_options', arguments([Name('self', Param(), lineno=22, col_offset=25)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=23, col_offset=8), 'set_undefined_options', Load(), lineno=23, col_offset=8), [Str('install_lib', lineno=23, col_offset=35), Tuple([Str('install_dir', lineno=23, col_offset=50), Str('install_dir', lineno=23, col_offset=64)], Load(), lineno=23, col_offset=50)], [], None, None, lineno=23, col_offset=8), lineno=23, col_offset=8), Assign([Name('basename', Store(), lineno=24, col_offset=8)], BinOp(Str('%s-%s-py%s.egg-info', lineno=24, col_offset=19), Mod(), Tuple([Call(Name('to_filename', Load(), lineno=25, col_offset=12), [Call(Name('safe_name', Load(), lineno=25, col_offset=24), [Call(Attribute(Attribute(Name('self', Load(), lineno=25, col_offset=34), 'distribution', Load(), lineno=25, col_offset=34), 'get_name', Load(), lineno=25, col_offset=34), [], [], None, None, lineno=25, col_offset=34)], [], None, None, lineno=25, col_offset=24)], [], None, None, lineno=25, col_offset=12), Call(Name('to_filename', Load(), lineno=26, col_offset=12), [Call(Name('safe_version', Load(), lineno=26, col_offset=24), [Call(Attribute(Attribute(Name('self', Load(), lineno=26, col_offset=37), 'distribution', Load(), lineno=26, col_offset=37), 'get_version', Load(), lineno=26, col_offset=37), [], [], None, None, lineno=26, col_offset=37)], [], None, None, lineno=26, col_offset=24)], [], None, None, lineno=26, col_offset=12), Subscript(Attribute(Name('sys', Load(), lineno=27, col_offset=12), 'version', Load(), lineno=27, col_offset=12), Slice(None, Num(3, lineno=27, col_offset=25), None), Load(), lineno=27, col_offset=12)], Load(), lineno=25, col_offset=12), lineno=24, col_offset=19), lineno=24, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=29, col_offset=8), 'target', Store(), lineno=29, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=29, col_offset=22), 'path', Load(), lineno=29, col_offset=22), 'join', Load(), lineno=29, col_offset=22), [Attribute(Name('self', Load(), lineno=29, col_offset=35), 'install_dir', Load(), lineno=29, col_offset=35), Name('basename', Load(), lineno=29, col_offset=53)], [], None, None, lineno=29, col_offset=22), lineno=29, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=30, col_offset=8), 'outputs', Store(), lineno=30, col_offset=8)], List([Attribute(Name('self', Load(), lineno=30, col_offset=24), 'target', Load(), lineno=30, col_offset=24)], Load(), lineno=30, col_offset=23), lineno=30, col_offset=8)], [], lineno=22, col_offset=4), FunctionDef('run', arguments([Name('self', Param(), lineno=32, col_offset=12)], None, None, []), [Assign([Name('target', Store(), lineno=33, col_offset=8)], Attribute(Name('self', Load(), lineno=33, col_offset=17), 'target', Load(), lineno=33, col_offset=17), lineno=33, col_offset=8), If(BoolOp(And(), [Call(Attribute(Attribute(Name('os', Load(), lineno=34, col_offset=11), 'path', Load(), lineno=34, col_offset=11), 'isdir', Load(), lineno=34, col_offset=11), [Name('target', Load(), lineno=34, col_offset=25)], [], None, None, lineno=34, col_offset=11), UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=34, col_offset=41), 'path', Load(), lineno=34, col_offset=41), 'islink', Load(), lineno=34, col_offset=41), [Name('target', Load(), lineno=34, col_offset=56)], [], None, None, lineno=34, col_offset=41), lineno=34, col_offset=37)], lineno=34, col_offset=11), [Expr(Call(Attribute(Name('dir_util', Load(), lineno=35, col_offset=12), 'remove_tree', Load(), lineno=35, col_offset=12), [Name('target', Load(), lineno=35, col_offset=33)], [keyword('dry_run', Attribute(Name('self', Load(), lineno=35, col_offset=49), 'dry_run', Load(), lineno=35, col_offset=49))], None, None, lineno=35, col_offset=12), lineno=35, col_offset=12)], [If(Call(Attribute(Attribute(Name('os', Load(), lineno=36, col_offset=13), 'path', Load(), lineno=36, col_offset=13), 'exists', Load(), lineno=36, col_offset=13), [Name('target', Load(), lineno=36, col_offset=28)], [], None, None, lineno=36, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=37, col_offset=12), 'execute', Load(), lineno=37, col_offset=12), [Attribute(Name('os', Load(), lineno=37, col_offset=25), 'unlink', Load(), lineno=37, col_offset=25), Tuple([Attribute(Name('self', Load(), lineno=37, col_offset=36), 'target', Load(), lineno=37, col_offset=36)], Load(), lineno=37, col_offset=36), BinOp(Str('Removing ', lineno=37, col_offset=50), Add(), Name('target', Load(), lineno=37, col_offset=62), lineno=37, col_offset=50)], [], None, None, lineno=37, col_offset=12), lineno=37, col_offset=12)], [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=38, col_offset=17), 'path', Load(), lineno=38, col_offset=17), 'isdir', Load(), lineno=38, col_offset=17), [Attribute(Name('self', Load(), lineno=38, col_offset=31), 'install_dir', Load(), lineno=38, col_offset=31)], [], None, None, lineno=38, col_offset=17), lineno=38, col_offset=13), [Expr(Call(Attribute(Name('self', Load(), lineno=39, col_offset=12), 'execute', Load(), lineno=39, col_offset=12), [Attribute(Name('os', Load(), lineno=39, col_offset=25), 'makedirs', Load(), lineno=39, col_offset=25), Tuple([Attribute(Name('self', Load(), lineno=39, col_offset=39), 'install_dir', Load(), lineno=39, col_offset=39)], Load(), lineno=39, col_offset=39), BinOp(Str('Creating ', lineno=40, col_offset=25), Add(), Attribute(Name('self', Load(), lineno=40, col_offset=37), 'install_dir', Load(), lineno=40, col_offset=37), lineno=40, col_offset=25)], [], None, None, lineno=39, col_offset=12), lineno=39, col_offset=12)], [], lineno=38, col_offset=13)], lineno=36, col_offset=13)], lineno=34, col_offset=8), Expr(Call(Attribute(Name('log', Load(), lineno=41, col_offset=8), 'info', Load(), lineno=41, col_offset=8), [Str('Writing %s', lineno=41, col_offset=17), Name('target', Load(), lineno=41, col_offset=31)], [], None, None, lineno=41, col_offset=8), lineno=41, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=42, col_offset=15), 'dry_run', Load(), lineno=42, col_offset=15), lineno=42, col_offset=11), [Assign([Name('f', Store(), lineno=43, col_offset=12)], Call(Name('open', Load(), lineno=43, col_offset=16), [Name('target', Load(), lineno=43, col_offset=21), Str('w', lineno=43, col_offset=29)], [], None, None, lineno=43, col_offset=16), lineno=43, col_offset=12), Expr(Call(Attribute(Attribute(Attribute(Name('self', Load(), lineno=44, col_offset=12), 'distribution', Load(), lineno=44, col_offset=12), 'metadata', Load(), lineno=44, col_offset=12), 'write_pkg_file', Load(), lineno=44, col_offset=12), [Name('f', Load(), lineno=44, col_offset=54)], [], None, None, lineno=44, col_offset=12), lineno=44, col_offset=12), Expr(Call(Attribute(Name('f', Load(), lineno=45, col_offset=12), 'close', Load(), lineno=45, col_offset=12), [], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=12)], [], lineno=42, col_offset=8)], [], lineno=32, col_offset=4), FunctionDef('get_outputs', arguments([Name('self', Param(), lineno=47, col_offset=20)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=48, col_offset=15), 'outputs', Load(), lineno=48, col_offset=15), lineno=48, col_offset=8)], [], lineno=47, col_offset=4)], [], lineno=11, col_offset=0), FunctionDef('safe_name', arguments([Name('name', Param(), lineno=55, col_offset=14)], None, None, []), [Expr(Str("Convert an arbitrary string to a standard distribution name\n\n    Any runs of non-alphanumeric/. characters are replaced with a single '-'.\n    ", lineno=59, col_offset=-1), lineno=59, col_offset=-1), Return(Call(Attribute(Name('re', Load(), lineno=60, col_offset=11), 'sub', Load(), lineno=60, col_offset=11), [Str('[^A-Za-z0-9.]+', lineno=60, col_offset=18), Str('-', lineno=60, col_offset=36), Name('name', Load(), lineno=60, col_offset=41)], [], None, None, lineno=60, col_offset=11), lineno=60, col_offset=4)], [], lineno=55, col_offset=0), FunctionDef('safe_version', arguments([Name('version', Param(), lineno=63, col_offset=17)], None, None, []), [Expr(Str('Convert an arbitrary string to a standard version string\n\n    Spaces become dots, and all other non-alphanumeric characters become\n    dashes, with runs of multiple dashes condensed to a single dash.\n    ', lineno=68, col_offset=-1), lineno=68, col_offset=-1), Assign([Name('version', Store(), lineno=69, col_offset=4)], Call(Attribute(Name('version', Load(), lineno=69, col_offset=14), 'replace', Load(), lineno=69, col_offset=14), [Str(' ', lineno=69, col_offset=30), Str('.', lineno=69, col_offset=34)], [], None, None, lineno=69, col_offset=14), lineno=69, col_offset=4), Return(Call(Attribute(Name('re', Load(), lineno=70, col_offset=11), 'sub', Load(), lineno=70, col_offset=11), [Str('[^A-Za-z0-9.]+', lineno=70, col_offset=18), Str('-', lineno=70, col_offset=36), Name('version', Load(), lineno=70, col_offset=41)], [], None, None, lineno=70, col_offset=11), lineno=70, col_offset=4)], [], lineno=63, col_offset=0), FunctionDef('to_filename', arguments([Name('name', Param(), lineno=73, col_offset=16)], None, None, []), [Expr(Str("Convert a project or version name to its filename-escaped form\n\n    Any '-' characters are currently replaced with '_'.\n    ", lineno=77, col_offset=-1), lineno=77, col_offset=-1), Return(Call(Attribute(Name('name', Load(), lineno=78, col_offset=11), 'replace', Load(), lineno=78, col_offset=11), [Str('-', lineno=78, col_offset=24), Str('_', lineno=78, col_offset=28)], [], None, None, lineno=78, col_offset=11), lineno=78, col_offset=4)], [], lineno=73, col_offset=0)])
