Module([Expr(Str('Tests that run all fixer modules over an input stream.\n\nThis has been broken out into its own test module because of its\nrunning time.\n', lineno=5, col_offset=-1), lineno=5, col_offset=-1), Import([alias('unittest', None)], lineno=9, col_offset=0), ImportFrom('lib2to3', [alias('refactor', None)], 0, lineno=12, col_offset=0), ImportFrom(None, [alias('support', None)], 1, lineno=13, col_offset=0), ClassDef('Test_all', [Attribute(Name('support', Load(), lineno=16, col_offset=15), 'TestCase', Load(), lineno=16, col_offset=15)], [FunctionDef('setUp', arguments([Name('self', Param(), lineno=18, col_offset=14)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=19, col_offset=8), 'refactor', Store(), lineno=19, col_offset=8)], Call(Attribute(Name('support', Load(), lineno=19, col_offset=24), 'get_refactorer', Load(), lineno=19, col_offset=24), [], [], None, None, lineno=19, col_offset=24), lineno=19, col_offset=8)], [], lineno=18, col_offset=4), FunctionDef('test_all_project_files', arguments([Name('self', Param(), lineno=21, col_offset=31)], None, None, []), [For(Name('filepath', Store(), lineno=22, col_offset=12), Call(Attribute(Name('support', Load(), lineno=22, col_offset=24), 'all_project_files', Load(), lineno=22, col_offset=24), [], [], None, None, lineno=22, col_offset=24), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=23, col_offset=12), 'refactor', Load(), lineno=23, col_offset=12), 'refactor_file', Load(), lineno=23, col_offset=12), [Name('filepath', Load(), lineno=23, col_offset=40)], [], None, None, lineno=23, col_offset=12), lineno=23, col_offset=12)], [], lineno=22, col_offset=8)], [], lineno=21, col_offset=4)], [], lineno=16, col_offset=0)])
