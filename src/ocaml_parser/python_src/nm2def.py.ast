Module([Expr(Str("nm2def.py\n\nHelpers to extract symbols from Unix libs and auto-generate\nWindows definition files from them. Depends on nm(1). Tested\non Linux and Solaris only (-p option to nm is for Solaris only).\n\nBy Marc-Andre Lemburg, Aug 1998.\n\nAdditional notes: the output of nm is supposed to look like this:\n\nacceler.o:\n000001fd T PyGrammar_AddAccelerators\n         U PyGrammar_FindDFA\n00000237 T PyGrammar_RemoveAccelerators\n         U _IO_stderr_\n         U exit\n         U fprintf\n         U free\n         U malloc\n         U printf\n\ngrammar1.o:\n00000000 T PyGrammar_FindDFA\n00000034 T PyGrammar_LabelRepr\n         U _PyParser_TokenNames\n         U abort\n         U printf\n         U sprintf\n\n...\n\nEven if this isn't the default output of your nm, there is generally an\noption to produce this format (since it is the original v7 Unix format).\n\n", lineno=36, col_offset=-1), lineno=36, col_offset=-1), Import([alias('os', None), alias('sys', None)], lineno=37, col_offset=0), Assign([Name('PYTHONLIB', Store(), lineno=39, col_offset=0)], BinOp(BinOp(Str('libpython', lineno=39, col_offset=12), Add(), Subscript(Attribute(Name('sys', Load(), lineno=39, col_offset=24), 'version', Load(), lineno=39, col_offset=24), Slice(None, Num(3, lineno=39, col_offset=37), None), Load(), lineno=39, col_offset=24), lineno=39, col_offset=12), Add(), Str('.a', lineno=39, col_offset=40), lineno=39, col_offset=39), lineno=39, col_offset=0), Assign([Name('PC_PYTHONLIB', Store(), lineno=40, col_offset=0)], BinOp(BinOp(BinOp(Str('Python', lineno=40, col_offset=15), Add(), Subscript(Attribute(Name('sys', Load(), lineno=40, col_offset=24), 'version', Load(), lineno=40, col_offset=24), Index(Num(0, lineno=40, col_offset=36)), Load(), lineno=40, col_offset=24), lineno=40, col_offset=15), Add(), Subscript(Attribute(Name('sys', Load(), lineno=40, col_offset=39), 'version', Load(), lineno=40, col_offset=39), Index(Num(2, lineno=40, col_offset=51)), Load(), lineno=40, col_offset=39), lineno=40, col_offset=38), Add(), Str('.dll', lineno=40, col_offset=54), lineno=40, col_offset=53), lineno=40, col_offset=0), Assign([Name('NM', Store(), lineno=41, col_offset=0)], Str('nm -p -g %s', lineno=41, col_offset=5), lineno=41, col_offset=0), FunctionDef('symbols', arguments([Name('lib', Param(), lineno=43, col_offset=12), Name('types', Param(), lineno=43, col_offset=26)], None, None, [Name('PYTHONLIB', Load(), lineno=43, col_offset=16), Tuple([Str('T', lineno=43, col_offset=33), Str('C', lineno=43, col_offset=37), Str('D', lineno=43, col_offset=41)], Load(), lineno=43, col_offset=33)]), [Assign([Name('lines', Store(), lineno=45, col_offset=4)], Call(Attribute(Call(Attribute(Name('os', Load(), lineno=45, col_offset=12), 'popen', Load(), lineno=45, col_offset=12), [BinOp(Name('NM', Load(), lineno=45, col_offset=21), Mod(), Name('lib', Load(), lineno=45, col_offset=26), lineno=45, col_offset=21)], [], None, None, lineno=45, col_offset=12), 'readlines', Load(), lineno=45, col_offset=12), [], [], None, None, lineno=45, col_offset=12), lineno=45, col_offset=4), Assign([Name('lines', Store(), lineno=46, col_offset=4)], ListComp(Call(Attribute(Name('s', Load(), lineno=46, col_offset=13), 'strip', Load(), lineno=46, col_offset=13), [], [], None, None, lineno=46, col_offset=13), [comprehension(Name('s', Store(), lineno=46, col_offset=27), Name('lines', Load(), lineno=46, col_offset=32), [])], lineno=46, col_offset=13), lineno=46, col_offset=4), Assign([Name('symbols', Store(), lineno=47, col_offset=4)], Dict([], [], lineno=47, col_offset=14), lineno=47, col_offset=4), For(Name('line', Store(), lineno=48, col_offset=8), Name('lines', Load(), lineno=48, col_offset=16), [If(BoolOp(Or(), [Compare(Call(Name('len', Load(), lineno=49, col_offset=11), [Name('line', Load(), lineno=49, col_offset=15)], [], None, None, lineno=49, col_offset=11), [Eq()], [Num(0, lineno=49, col_offset=24)], lineno=49, col_offset=11), Compare(Str(':', lineno=49, col_offset=29), [In()], [Name('line', Load(), lineno=49, col_offset=36)], lineno=49, col_offset=29)], lineno=49, col_offset=11), [Continue( lineno=50, col_offset=12)], [], lineno=49, col_offset=8), Assign([Name('items', Store(), lineno=51, col_offset=8)], Call(Attribute(Name('line', Load(), lineno=51, col_offset=16), 'split', Load(), lineno=51, col_offset=16), [], [], None, None, lineno=51, col_offset=16), lineno=51, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=52, col_offset=11), [Name('items', Load(), lineno=52, col_offset=15)], [], None, None, lineno=52, col_offset=11), [NotEq()], [Num(3, lineno=52, col_offset=25)], lineno=52, col_offset=11), [Continue( lineno=53, col_offset=12)], [], lineno=52, col_offset=8), Assign([Tuple([Name('address', Store(), lineno=54, col_offset=8), Name('type', Store(), lineno=54, col_offset=17), Name('name', Store(), lineno=54, col_offset=23)], Store(), lineno=54, col_offset=8)], Name('items', Load(), lineno=54, col_offset=30), lineno=54, col_offset=8), If(Compare(Name('type', Load(), lineno=55, col_offset=11), [NotIn()], [Name('types', Load(), lineno=55, col_offset=23)], lineno=55, col_offset=11), [Continue( lineno=56, col_offset=12)], [], lineno=55, col_offset=8), Assign([Subscript(Name('symbols', Load(), lineno=57, col_offset=8), Index(Name('name', Load(), lineno=57, col_offset=16)), Store(), lineno=57, col_offset=8)], Tuple([Name('address', Load(), lineno=57, col_offset=24), Name('type', Load(), lineno=57, col_offset=32)], Load(), lineno=57, col_offset=24), lineno=57, col_offset=8)], [], lineno=48, col_offset=4), Return(Name('symbols', Load(), lineno=58, col_offset=11), lineno=58, col_offset=4)], [], lineno=43, col_offset=0), FunctionDef('export_list', arguments([Name('symbols', Param(), lineno=60, col_offset=16)], None, None, []), [Assign([Name('data', Store(), lineno=62, col_offset=4)], List([], Load(), lineno=62, col_offset=11), lineno=62, col_offset=4), Assign([Name('code', Store(), lineno=63, col_offset=4)], List([], Load(), lineno=63, col_offset=11), lineno=63, col_offset=4), For(Tuple([Name('name', Store(), lineno=64, col_offset=8), Tuple([Name('addr', Store(), lineno=64, col_offset=14), Name('type', Store(), lineno=64, col_offset=19)], Store(), lineno=64, col_offset=14)], Store(), lineno=64, col_offset=8), Call(Attribute(Name('symbols', Load(), lineno=64, col_offset=28), 'items', Load(), lineno=64, col_offset=28), [], [], None, None, lineno=64, col_offset=28), [If(Compare(Name('type', Load(), lineno=65, col_offset=11), [In()], [Tuple([Str('C', lineno=65, col_offset=20), Str('D', lineno=65, col_offset=24)], Load(), lineno=65, col_offset=20)], lineno=65, col_offset=11), [Expr(Call(Attribute(Name('data', Load(), lineno=66, col_offset=12), 'append', Load(), lineno=66, col_offset=12), [BinOp(Str('\t', lineno=66, col_offset=24), Add(), Name('name', Load(), lineno=66, col_offset=29), lineno=66, col_offset=24)], [], None, None, lineno=66, col_offset=12), lineno=66, col_offset=12)], [Expr(Call(Attribute(Name('code', Load(), lineno=68, col_offset=12), 'append', Load(), lineno=68, col_offset=12), [BinOp(Str('\t', lineno=68, col_offset=24), Add(), Name('name', Load(), lineno=68, col_offset=29), lineno=68, col_offset=24)], [], None, None, lineno=68, col_offset=12), lineno=68, col_offset=12)], lineno=65, col_offset=8)], [], lineno=64, col_offset=4), Expr(Call(Attribute(Name('data', Load(), lineno=69, col_offset=4), 'sort', Load(), lineno=69, col_offset=4), [], [], None, None, lineno=69, col_offset=4), lineno=69, col_offset=4), Expr(Call(Attribute(Name('data', Load(), lineno=70, col_offset=4), 'append', Load(), lineno=70, col_offset=4), [Str('', lineno=70, col_offset=16)], [], None, None, lineno=70, col_offset=4), lineno=70, col_offset=4), Expr(Call(Attribute(Name('code', Load(), lineno=71, col_offset=4), 'sort', Load(), lineno=71, col_offset=4), [], [], None, None, lineno=71, col_offset=4), lineno=71, col_offset=4), Return(BinOp(BinOp(Call(Attribute(Str(' DATA\n', lineno=72, col_offset=11), 'join', Load(), lineno=72, col_offset=11), [Name('data', Load(), lineno=72, col_offset=26)], [], None, None, lineno=72, col_offset=11), Add(), Str('\n', lineno=72, col_offset=32), lineno=72, col_offset=11), Add(), Call(Attribute(Str('\n', lineno=72, col_offset=37), 'join', Load(), lineno=72, col_offset=37), [Name('code', Load(), lineno=72, col_offset=47)], [], None, None, lineno=72, col_offset=37), lineno=72, col_offset=36), lineno=72, col_offset=4)], [], lineno=60, col_offset=0), Assign([Name('DEF_TEMPLATE', Store(), lineno=75, col_offset=0)], Str('EXPORTS\n%s\n', lineno=78, col_offset=-1), lineno=75, col_offset=0), Assign([Name('SPECIALS', Store(), lineno=82, col_offset=0)], Tuple([], Load(), lineno=82, col_offset=11), lineno=82, col_offset=0), FunctionDef('filter_Python', arguments([Name('symbols', Param(), lineno=85, col_offset=18), Name('specials', Param(), lineno=85, col_offset=26)], None, None, [Name('SPECIALS', Load(), lineno=85, col_offset=35)]), [For(Name('name', Store(), lineno=87, col_offset=8), Call(Attribute(Name('symbols', Load(), lineno=87, col_offset=16), 'keys', Load(), lineno=87, col_offset=16), [], [], None, None, lineno=87, col_offset=16), [If(BoolOp(Or(), [Compare(Subscript(Name('name', Load(), lineno=88, col_offset=11), Slice(None, Num(2, lineno=88, col_offset=17), None), Load(), lineno=88, col_offset=11), [Eq()], [Str('Py', lineno=88, col_offset=23)], lineno=88, col_offset=11), Compare(Subscript(Name('name', Load(), lineno=88, col_offset=31), Slice(None, Num(3, lineno=88, col_offset=37), None), Load(), lineno=88, col_offset=31), [Eq()], [Str('_Py', lineno=88, col_offset=43)], lineno=88, col_offset=31)], lineno=88, col_offset=11), [Pass( lineno=89, col_offset=12)], [If(Compare(Name('name', Load(), lineno=90, col_offset=13), [NotIn()], [Name('specials', Load(), lineno=90, col_offset=25)], lineno=90, col_offset=13), [Delete([Subscript(Name('symbols', Load(), lineno=91, col_offset=16), Index(Name('name', Load(), lineno=91, col_offset=24)), Del(), lineno=91, col_offset=16)], lineno=91, col_offset=12)], [], lineno=90, col_offset=13)], lineno=88, col_offset=8)], [], lineno=87, col_offset=4)], [], lineno=85, col_offset=0), FunctionDef('main', arguments([], None, None, []), [Assign([Name('s', Store(), lineno=95, col_offset=4)], Call(Name('symbols', Load(), lineno=95, col_offset=8), [Name('PYTHONLIB', Load(), lineno=95, col_offset=16)], [], None, None, lineno=95, col_offset=8), lineno=95, col_offset=4), Expr(Call(Name('filter_Python', Load(), lineno=96, col_offset=4), [Name('s', Load(), lineno=96, col_offset=18)], [], None, None, lineno=96, col_offset=4), lineno=96, col_offset=4), Assign([Name('exports', Store(), lineno=97, col_offset=4)], Call(Name('export_list', Load(), lineno=97, col_offset=14), [Name('s', Load(), lineno=97, col_offset=26)], [], None, None, lineno=97, col_offset=14), lineno=97, col_offset=4), Assign([Name('f', Store(), lineno=98, col_offset=4)], Attribute(Name('sys', Load(), lineno=98, col_offset=8), 'stdout', Load(), lineno=98, col_offset=8), lineno=98, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=99, col_offset=4), 'write', Load(), lineno=99, col_offset=4), [BinOp(Name('DEF_TEMPLATE', Load(), lineno=99, col_offset=12), Mod(), Name('exports', Load(), lineno=99, col_offset=28), lineno=99, col_offset=12)], [], None, None, lineno=99, col_offset=4), lineno=99, col_offset=4), Expr(Call(Attribute(Name('f', Load(), lineno=100, col_offset=4), 'close', Load(), lineno=100, col_offset=4), [], [], None, None, lineno=100, col_offset=4), lineno=100, col_offset=4)], [], lineno=93, col_offset=0), If(Compare(Name('__name__', Load(), lineno=102, col_offset=3), [Eq()], [Str('__main__', lineno=102, col_offset=15)], lineno=102, col_offset=3), [Expr(Call(Name('main', Load(), lineno=103, col_offset=4), [], [], None, None, lineno=103, col_offset=4), lineno=103, col_offset=4)], [], lineno=102, col_offset=0)])
