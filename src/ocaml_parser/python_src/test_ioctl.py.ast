Module([Import([alias('array', None)], lineno=1, col_offset=0), Import([alias('unittest', None)], lineno=2, col_offset=0), ImportFrom('test.test_support', [alias('run_unittest', None), alias('import_module', None), alias('get_attribute', None)], 0, lineno=3, col_offset=0), Import([alias('os', None), alias('struct', None)], lineno=4, col_offset=0), Assign([Name('fcntl', Store(), lineno=5, col_offset=0)], Call(Name('import_module', Load(), lineno=5, col_offset=8), [Str('fcntl', lineno=5, col_offset=22)], [], None, None, lineno=5, col_offset=8), lineno=5, col_offset=0), Assign([Name('termios', Store(), lineno=6, col_offset=0)], Call(Name('import_module', Load(), lineno=6, col_offset=10), [Str('termios', lineno=6, col_offset=24)], [], None, None, lineno=6, col_offset=10), lineno=6, col_offset=0), Expr(Call(Name('get_attribute', Load(), lineno=7, col_offset=0), [Name('termios', Load(), lineno=7, col_offset=14), Str('TIOCGPGRP', lineno=7, col_offset=23)], [], None, None, lineno=7, col_offset=0), lineno=7, col_offset=0), TryExcept([Assign([Name('tty', Store(), lineno=10, col_offset=4)], Call(Name('open', Load(), lineno=10, col_offset=10), [Str('/dev/tty', lineno=10, col_offset=15), Str('r', lineno=10, col_offset=27)], [], None, None, lineno=10, col_offset=10), lineno=10, col_offset=4)], [ExceptHandler(Name('IOError', Load(), lineno=11, col_offset=7), None, [Raise(Call(Attribute(Name('unittest', Load(), lineno=12, col_offset=10), 'SkipTest', Load(), lineno=12, col_offset=10), [Str('Unable to open /dev/tty', lineno=12, col_offset=28)], [], None, None, lineno=12, col_offset=10), None, None, lineno=12, col_offset=4)], lineno=11, col_offset=0)], [Assign([Name('r', Store(), lineno=15, col_offset=4)], Call(Attribute(Name('fcntl', Load(), lineno=15, col_offset=8), 'ioctl', Load(), lineno=15, col_offset=8), [Name('tty', Load(), lineno=15, col_offset=20), Attribute(Name('termios', Load(), lineno=15, col_offset=25), 'TIOCGPGRP', Load(), lineno=15, col_offset=25), Str('    ', lineno=15, col_offset=44)], [], None, None, lineno=15, col_offset=8), lineno=15, col_offset=4), Expr(Call(Attribute(Name('tty', Load(), lineno=16, col_offset=4), 'close', Load(), lineno=16, col_offset=4), [], [], None, None, lineno=16, col_offset=4), lineno=16, col_offset=4), Assign([Name('rpgrp', Store(), lineno=17, col_offset=4)], Subscript(Call(Attribute(Name('struct', Load(), lineno=17, col_offset=12), 'unpack', Load(), lineno=17, col_offset=12), [Str('i', lineno=17, col_offset=26), Name('r', Load(), lineno=17, col_offset=31)], [], None, None, lineno=17, col_offset=12), Index(Num(0, lineno=17, col_offset=34)), Load(), lineno=17, col_offset=12), lineno=17, col_offset=4), If(Compare(Name('rpgrp', Load(), lineno=18, col_offset=7), [NotIn()], [Tuple([Call(Attribute(Name('os', Load(), lineno=18, col_offset=21), 'getpgrp', Load(), lineno=18, col_offset=21), [], [], None, None, lineno=18, col_offset=21), Call(Attribute(Name('os', Load(), lineno=18, col_offset=35), 'getsid', Load(), lineno=18, col_offset=35), [Num(0, lineno=18, col_offset=45)], [], None, None, lineno=18, col_offset=35)], Load(), lineno=18, col_offset=21)], lineno=18, col_offset=7), [Raise(Call(Attribute(Name('unittest', Load(), lineno=19, col_offset=14), 'SkipTest', Load(), lineno=19, col_offset=14), [Str('Neither the process group nor the session are attached to /dev/tty', lineno=19, col_offset=32)], [], None, None, lineno=19, col_offset=14), None, None, lineno=19, col_offset=8)], [], lineno=18, col_offset=4), Delete([Name('tty', Del(), lineno=21, col_offset=8), Name('r', Del(), lineno=21, col_offset=13), Name('rpgrp', Del(), lineno=21, col_offset=16)], lineno=21, col_offset=4)], lineno=9, col_offset=0), TryExcept([Import([alias('pty', None)], lineno=24, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=25, col_offset=7), None, [Assign([Name('pty', Store(), lineno=26, col_offset=4)], Name('None', Load(), lineno=26, col_offset=10), lineno=26, col_offset=4)], lineno=25, col_offset=0)], [], lineno=23, col_offset=0), ClassDef('IoctlTests', [Attribute(Name('unittest', Load(), lineno=28, col_offset=17), 'TestCase', Load(), lineno=28, col_offset=17)], [FunctionDef('test_ioctl', arguments([Name('self', Param(), lineno=29, col_offset=19)], None, None, []), [Assign([Name('ids', Store(), lineno=32, col_offset=8)], Tuple([Call(Attribute(Name('os', Load(), lineno=32, col_offset=15), 'getpgrp', Load(), lineno=32, col_offset=15), [], [], None, None, lineno=32, col_offset=15), Call(Attribute(Name('os', Load(), lineno=32, col_offset=29), 'getsid', Load(), lineno=32, col_offset=29), [Num(0, lineno=32, col_offset=39)], [], None, None, lineno=32, col_offset=29)], Load(), lineno=32, col_offset=15), lineno=32, col_offset=8), Assign([Name('tty', Store(), lineno=33, col_offset=8)], Call(Name('open', Load(), lineno=33, col_offset=14), [Str('/dev/tty', lineno=33, col_offset=19), Str('r', lineno=33, col_offset=31)], [], None, None, lineno=33, col_offset=14), lineno=33, col_offset=8), Assign([Name('r', Store(), lineno=34, col_offset=8)], Call(Attribute(Name('fcntl', Load(), lineno=34, col_offset=12), 'ioctl', Load(), lineno=34, col_offset=12), [Name('tty', Load(), lineno=34, col_offset=24), Attribute(Name('termios', Load(), lineno=34, col_offset=29), 'TIOCGPGRP', Load(), lineno=34, col_offset=29), Str('    ', lineno=34, col_offset=48)], [], None, None, lineno=34, col_offset=12), lineno=34, col_offset=8), Assign([Name('rpgrp', Store(), lineno=35, col_offset=8)], Subscript(Call(Attribute(Name('struct', Load(), lineno=35, col_offset=16), 'unpack', Load(), lineno=35, col_offset=16), [Str('i', lineno=35, col_offset=30), Name('r', Load(), lineno=35, col_offset=35)], [], None, None, lineno=35, col_offset=16), Index(Num(0, lineno=35, col_offset=38)), Load(), lineno=35, col_offset=16), lineno=35, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=36, col_offset=8), 'assertIn', Load(), lineno=36, col_offset=8), [Name('rpgrp', Load(), lineno=36, col_offset=22), Name('ids', Load(), lineno=36, col_offset=29)], [], None, None, lineno=36, col_offset=8), lineno=36, col_offset=8)], [], lineno=29, col_offset=4), FunctionDef('_check_ioctl_mutate_len', arguments([Name('self', Param(), lineno=38, col_offset=32), Name('nbytes', Param(), lineno=38, col_offset=38)], None, None, [Name('None', Load(), lineno=38, col_offset=45)]), [Assign([Name('buf', Store(), lineno=39, col_offset=8)], Call(Attribute(Name('array', Load(), lineno=39, col_offset=14), 'array', Load(), lineno=39, col_offset=14), [Str('i', lineno=39, col_offset=26)], [], None, None, lineno=39, col_offset=14), lineno=39, col_offset=8), Assign([Name('intsize', Store(), lineno=40, col_offset=8)], Attribute(Name('buf', Load(), lineno=40, col_offset=18), 'itemsize', Load(), lineno=40, col_offset=18), lineno=40, col_offset=8), Assign([Name('ids', Store(), lineno=41, col_offset=8)], Tuple([Call(Attribute(Name('os', Load(), lineno=41, col_offset=15), 'getpgrp', Load(), lineno=41, col_offset=15), [], [], None, None, lineno=41, col_offset=15), Call(Attribute(Name('os', Load(), lineno=41, col_offset=29), 'getsid', Load(), lineno=41, col_offset=29), [Num(0, lineno=41, col_offset=39)], [], None, None, lineno=41, col_offset=29)], Load(), lineno=41, col_offset=15), lineno=41, col_offset=8), Assign([Name('fill', Store(), lineno=43, col_offset=8)], Num(-12345, lineno=43, col_offset=16), lineno=43, col_offset=8), If(Compare(Name('nbytes', Load(), lineno=44, col_offset=11), [IsNot()], [Name('None', Load(), lineno=44, col_offset=25)], lineno=44, col_offset=11), [Expr(Call(Attribute(Name('buf', Load(), lineno=46, col_offset=12), 'extend', Load(), lineno=46, col_offset=12), [BinOp(List([Name('fill', Load(), lineno=46, col_offset=24)], Load(), lineno=46, col_offset=23), Mult(), BinOp(Name('nbytes', Load(), lineno=46, col_offset=33), FloorDiv(), Name('intsize', Load(), lineno=46, col_offset=43), lineno=46, col_offset=33), lineno=46, col_offset=23)], [], None, None, lineno=46, col_offset=12), lineno=46, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=47, col_offset=12), 'assertEqual', Load(), lineno=47, col_offset=12), [BinOp(Call(Name('len', Load(), lineno=47, col_offset=29), [Name('buf', Load(), lineno=47, col_offset=33)], [], None, None, lineno=47, col_offset=29), Mult(), Name('intsize', Load(), lineno=47, col_offset=40), lineno=47, col_offset=29), Name('nbytes', Load(), lineno=47, col_offset=49)], [], None, None, lineno=47, col_offset=12), lineno=47, col_offset=12)], [Expr(Call(Attribute(Name('buf', Load(), lineno=49, col_offset=12), 'append', Load(), lineno=49, col_offset=12), [Name('fill', Load(), lineno=49, col_offset=23)], [], None, None, lineno=49, col_offset=12), lineno=49, col_offset=12)], lineno=44, col_offset=8), With(Call(Name('open', Load(), lineno=50, col_offset=13), [Str('/dev/tty', lineno=50, col_offset=18), Str('r', lineno=50, col_offset=30)], [], None, None, lineno=50, col_offset=13), Name('tty', Store(), lineno=50, col_offset=38), [Assign([Name('r', Store(), lineno=51, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=51, col_offset=16), 'ioctl', Load(), lineno=51, col_offset=16), [Name('tty', Load(), lineno=51, col_offset=28), Attribute(Name('termios', Load(), lineno=51, col_offset=33), 'TIOCGPGRP', Load(), lineno=51, col_offset=33), Name('buf', Load(), lineno=51, col_offset=52), Num(1, lineno=51, col_offset=57)], [], None, None, lineno=51, col_offset=16), lineno=51, col_offset=12)], lineno=50, col_offset=13), Assign([Name('rpgrp', Store(), lineno=52, col_offset=8)], Subscript(Name('buf', Load(), lineno=52, col_offset=16), Index(Num(0, lineno=52, col_offset=20)), Load(), lineno=52, col_offset=16), lineno=52, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=53, col_offset=8), 'assertEqual', Load(), lineno=53, col_offset=8), [Name('r', Load(), lineno=53, col_offset=25), Num(0, lineno=53, col_offset=28)], [], None, None, lineno=53, col_offset=8), lineno=53, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=54, col_offset=8), 'assertIn', Load(), lineno=54, col_offset=8), [Name('rpgrp', Load(), lineno=54, col_offset=22), Name('ids', Load(), lineno=54, col_offset=29)], [], None, None, lineno=54, col_offset=8), lineno=54, col_offset=8)], [], lineno=38, col_offset=4), FunctionDef('test_ioctl_mutate', arguments([Name('self', Param(), lineno=56, col_offset=26)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=57, col_offset=8), '_check_ioctl_mutate_len', Load(), lineno=57, col_offset=8), [], [], None, None, lineno=57, col_offset=8), lineno=57, col_offset=8)], [], lineno=56, col_offset=4), FunctionDef('test_ioctl_mutate_1024', arguments([Name('self', Param(), lineno=59, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=62, col_offset=8), '_check_ioctl_mutate_len', Load(), lineno=62, col_offset=8), [Num(1024, lineno=62, col_offset=37)], [], None, None, lineno=62, col_offset=8), lineno=62, col_offset=8)], [], lineno=59, col_offset=4), FunctionDef('test_ioctl_mutate_2048', arguments([Name('self', Param(), lineno=64, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('self', Load(), lineno=66, col_offset=8), '_check_ioctl_mutate_len', Load(), lineno=66, col_offset=8), [Num(2048, lineno=66, col_offset=37)], [], None, None, lineno=66, col_offset=8), lineno=66, col_offset=8)], [], lineno=64, col_offset=4), FunctionDef('test_ioctl_signed_unsigned_code_param', arguments([Name('self', Param(), lineno=68, col_offset=46)], None, None, []), [If(UnaryOp(Not(), Name('pty', Load(), lineno=69, col_offset=15), lineno=69, col_offset=11), [Raise(Call(Attribute(Name('unittest', Load(), lineno=70, col_offset=18), 'SkipTest', Load(), lineno=70, col_offset=18), [Str('pty module required', lineno=70, col_offset=36)], [], None, None, lineno=70, col_offset=18), None, None, lineno=70, col_offset=12)], [], lineno=69, col_offset=8), Assign([Tuple([Name('mfd', Store(), lineno=71, col_offset=8), Name('sfd', Store(), lineno=71, col_offset=13)], Store(), lineno=71, col_offset=8)], Call(Attribute(Name('pty', Load(), lineno=71, col_offset=19), 'openpty', Load(), lineno=71, col_offset=19), [], [], None, None, lineno=71, col_offset=19), lineno=71, col_offset=8), TryFinally([If(Compare(Attribute(Name('termios', Load(), lineno=73, col_offset=15), 'TIOCSWINSZ', Load(), lineno=73, col_offset=15), [Lt()], [Num(0, lineno=73, col_offset=36)], lineno=73, col_offset=15), [Assign([Name('set_winsz_opcode_maybe_neg', Store(), lineno=74, col_offset=16)], Attribute(Name('termios', Load(), lineno=74, col_offset=45), 'TIOCSWINSZ', Load(), lineno=74, col_offset=45), lineno=74, col_offset=16), Assign([Name('set_winsz_opcode_pos', Store(), lineno=75, col_offset=16)], BinOp(Attribute(Name('termios', Load(), lineno=75, col_offset=39), 'TIOCSWINSZ', Load(), lineno=75, col_offset=39), BitAnd(), Num(4294967295L, lineno=75, col_offset=60), lineno=75, col_offset=39), lineno=75, col_offset=16)], [Assign([Name('set_winsz_opcode_pos', Store(), lineno=77, col_offset=16)], Attribute(Name('termios', Load(), lineno=77, col_offset=39), 'TIOCSWINSZ', Load(), lineno=77, col_offset=39), lineno=77, col_offset=16), Assign([Tuple([Name('set_winsz_opcode_maybe_neg', Store(), lineno=78, col_offset=16)], Store(), lineno=78, col_offset=16)], Call(Attribute(Name('struct', Load(), lineno=78, col_offset=46), 'unpack', Load(), lineno=78, col_offset=46), [Str('i', lineno=78, col_offset=60), Call(Attribute(Name('struct', Load(), lineno=79, col_offset=24), 'pack', Load(), lineno=79, col_offset=24), [Str('I', lineno=79, col_offset=36), Attribute(Name('termios', Load(), lineno=79, col_offset=41), 'TIOCSWINSZ', Load(), lineno=79, col_offset=41)], [], None, None, lineno=79, col_offset=24)], [], None, None, lineno=78, col_offset=46), lineno=78, col_offset=16)], lineno=73, col_offset=12), Assign([Name('our_winsz', Store(), lineno=81, col_offset=12)], Call(Attribute(Name('struct', Load(), lineno=81, col_offset=24), 'pack', Load(), lineno=81, col_offset=24), [Str('HHHH', lineno=81, col_offset=36), Num(80, lineno=81, col_offset=43), Num(25, lineno=81, col_offset=46), Num(0, lineno=81, col_offset=49), Num(0, lineno=81, col_offset=51)], [], None, None, lineno=81, col_offset=24), lineno=81, col_offset=12), Assign([Name('new_winsz', Store(), lineno=83, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=83, col_offset=24), 'ioctl', Load(), lineno=83, col_offset=24), [Name('mfd', Load(), lineno=83, col_offset=36), Name('set_winsz_opcode_pos', Load(), lineno=83, col_offset=41), Name('our_winsz', Load(), lineno=83, col_offset=63)], [], None, None, lineno=83, col_offset=24), lineno=83, col_offset=12), Assign([Name('new_winsz', Store(), lineno=84, col_offset=12)], Call(Attribute(Name('fcntl', Load(), lineno=84, col_offset=24), 'ioctl', Load(), lineno=84, col_offset=24), [Name('mfd', Load(), lineno=84, col_offset=36), Name('set_winsz_opcode_maybe_neg', Load(), lineno=84, col_offset=41), Name('our_winsz', Load(), lineno=84, col_offset=69)], [], None, None, lineno=84, col_offset=24), lineno=84, col_offset=12)], [Expr(Call(Attribute(Name('os', Load(), lineno=86, col_offset=12), 'close', Load(), lineno=86, col_offset=12), [Name('mfd', Load(), lineno=86, col_offset=21)], [], None, None, lineno=86, col_offset=12), lineno=86, col_offset=12), Expr(Call(Attribute(Name('os', Load(), lineno=87, col_offset=12), 'close', Load(), lineno=87, col_offset=12), [Name('sfd', Load(), lineno=87, col_offset=21)], [], None, None, lineno=87, col_offset=12), lineno=87, col_offset=12)], lineno=72, col_offset=8)], [], lineno=68, col_offset=4)], [], lineno=28, col_offset=0), FunctionDef('test_main', arguments([], None, None, []), [Expr(Call(Name('run_unittest', Load(), lineno=90, col_offset=4), [Name('IoctlTests', Load(), lineno=90, col_offset=17)], [], None, None, lineno=90, col_offset=4), lineno=90, col_offset=4)], [], lineno=89, col_offset=0), If(Compare(Name('__name__', Load(), lineno=92, col_offset=3), [Eq()], [Str('__main__', lineno=92, col_offset=15)], lineno=92, col_offset=3), [Expr(Call(Name('test_main', Load(), lineno=93, col_offset=4), [], [], None, None, lineno=93, col_offset=4), lineno=93, col_offset=4)], [], lineno=92, col_offset=0)])
