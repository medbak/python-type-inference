Module([Expr(Str('Configuration file parser.\n\nA setup file consists of sections, lead by a "[section]" header,\nand followed by "name: value" entries, with continuations and such in\nthe style of RFC 822.\n\nThe option values can contain format strings which refer to other values in\nthe same section, or values in a special [DEFAULT] section.\n\nFor example:\n\n    something: %(dir)s/whatever\n\nwould resolve the "%(dir)s" to the value of dir.  All reference\nexpansions are done late, on demand.\n\nIntrinsic defaults can be specified by passing them into the\nConfigParser constructor as a dictionary.\n\nclass:\n\nConfigParser -- responsible for parsing a list of\n                configuration files, and managing the parsed database.\n\n    methods:\n\n    __init__(defaults=None)\n        create the parser and specify a dictionary of intrinsic defaults.  The\n        keys must be strings, the values must be appropriate for %()s string\n        interpolation.  Note that `__name__\' is always an intrinsic default;\n        its value is the section\'s name.\n\n    sections()\n        return all the configuration section names, sans DEFAULT\n\n    has_section(section)\n        return whether the given section exists\n\n    has_option(section, option)\n        return whether the given option exists in the given section\n\n    options(section)\n        return list of configuration options for the named section\n\n    read(filenames)\n        read and parse the list of named configuration files, given by\n        name.  A single filename is also allowed.  Non-existing files\n        are ignored.  Return list of successfully read files.\n\n    readfp(fp, filename=None)\n        read and parse one configuration file, given as a file object.\n        The filename defaults to fp.name; it is only used in error\n        messages (if fp has no `name\' attribute, the string `<???>\' is used).\n\n    get(section, option, raw=False, vars=None)\n        return a string value for the named option.  All % interpolations are\n        expanded in the return values, based on the defaults passed into the\n        constructor and the DEFAULT section.  Additional substitutions may be\n        provided using the `vars\' argument, which must be a dictionary whose\n        contents override any pre-existing defaults.\n\n    getint(section, options)\n        like get(), but convert value to an integer\n\n    getfloat(section, options)\n        like get(), but convert value to a float\n\n    getboolean(section, options)\n        like get(), but convert value to a boolean (currently case\n        insensitively defined as 0, false, no, off for False, and 1, true,\n        yes, on for True).  Returns False or True.\n\n    items(section, raw=False, vars=None)\n        return a list of tuples with (name, value) for each option\n        in the section.\n\n    remove_section(section)\n        remove the given file section and all its options\n\n    remove_option(section, option)\n        remove the given option from the given section\n\n    set(section, option, value)\n        set the given option\n\n    write(fp)\n        write the configuration state in .ini format\n', lineno=88, col_offset=-1), lineno=88, col_offset=-1), TryExcept([ImportFrom('collections', [alias('OrderedDict', '_default_dict')], 0, lineno=91, col_offset=4)], [ExceptHandler(Name('ImportError', Load(), lineno=92, col_offset=7), None, [Assign([Name('_default_dict', Store(), lineno=94, col_offset=4)], Name('dict', Load(), lineno=94, col_offset=20), lineno=94, col_offset=4)], lineno=92, col_offset=0)], [], lineno=90, col_offset=0), Import([alias('re', None)], lineno=96, col_offset=0), Assign([Name('__all__', Store(), lineno=98, col_offset=0)], List([Str('NoSectionError', lineno=98, col_offset=11), Str('DuplicateSectionError', lineno=98, col_offset=29), Str('NoOptionError', lineno=98, col_offset=54), Str('InterpolationError', lineno=99, col_offset=11), Str('InterpolationDepthError', lineno=99, col_offset=33), Str('InterpolationSyntaxError', lineno=100, col_offset=11), Str('ParsingError', lineno=100, col_offset=39), Str('MissingSectionHeaderError', lineno=101, col_offset=11), Str('ConfigParser', lineno=102, col_offset=11), Str('SafeConfigParser', lineno=102, col_offset=27), Str('RawConfigParser', lineno=102, col_offset=47), Str('DEFAULTSECT', lineno=103, col_offset=11), Str('MAX_INTERPOLATION_DEPTH', lineno=103, col_offset=26)], Load(), lineno=98, col_offset=10), lineno=98, col_offset=0), Assign([Name('DEFAULTSECT', Store(), lineno=105, col_offset=0)], Str('DEFAULT', lineno=105, col_offset=14), lineno=105, col_offset=0), Assign([Name('MAX_INTERPOLATION_DEPTH', Store(), lineno=107, col_offset=0)], Num(10, lineno=107, col_offset=26), lineno=107, col_offset=0), ClassDef('Error', [Name('Exception', Load(), lineno=112, col_offset=12)], [Expr(Str('Base class for ConfigParser exceptions.', lineno=113, col_offset=4), lineno=113, col_offset=4), FunctionDef('_get_message', arguments([Name('self', Param(), lineno=115, col_offset=21)], None, None, []), [Expr(Str("Getter for 'message'; needed only to override deprecation in\n        BaseException.", lineno=117, col_offset=-1), lineno=117, col_offset=-1), Return(Attribute(Name('self', Load(), lineno=118, col_offset=15), '__message', Load(), lineno=118, col_offset=15), lineno=118, col_offset=8)], [], lineno=115, col_offset=4), FunctionDef('_set_message', arguments([Name('self', Param(), lineno=120, col_offset=21), Name('value', Param(), lineno=120, col_offset=27)], None, None, []), [Expr(Str("Setter for 'message'; needed only to override deprecation in\n        BaseException.", lineno=122, col_offset=-1), lineno=122, col_offset=-1), Assign([Attribute(Name('self', Load(), lineno=123, col_offset=8), '__message', Store(), lineno=123, col_offset=8)], Name('value', Load(), lineno=123, col_offset=25), lineno=123, col_offset=8)], [], lineno=120, col_offset=4), Assign([Name('message', Store(), lineno=128, col_offset=4)], Call(Name('property', Load(), lineno=128, col_offset=14), [Name('_get_message', Load(), lineno=128, col_offset=23), Name('_set_message', Load(), lineno=128, col_offset=37)], [], None, None, lineno=128, col_offset=14), lineno=128, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=130, col_offset=17), Name('msg', Param(), lineno=130, col_offset=23)], None, None, [Str('', lineno=130, col_offset=27)]), [Assign([Attribute(Name('self', Load(), lineno=131, col_offset=8), 'message', Store(), lineno=131, col_offset=8)], Name('msg', Load(), lineno=131, col_offset=23), lineno=131, col_offset=8), Expr(Call(Attribute(Name('Exception', Load(), lineno=132, col_offset=8), '__init__', Load(), lineno=132, col_offset=8), [Name('self', Load(), lineno=132, col_offset=27), Name('msg', Load(), lineno=132, col_offset=33)], [], None, None, lineno=132, col_offset=8), lineno=132, col_offset=8)], [], lineno=130, col_offset=4), FunctionDef('__repr__', arguments([Name('self', Param(), lineno=134, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=135, col_offset=15), 'message', Load(), lineno=135, col_offset=15), lineno=135, col_offset=8)], [], lineno=134, col_offset=4), Assign([Name('__str__', Store(), lineno=137, col_offset=4)], Name('__repr__', Load(), lineno=137, col_offset=14), lineno=137, col_offset=4)], [], lineno=112, col_offset=0), ClassDef('NoSectionError', [Name('Error', Load(), lineno=139, col_offset=21)], [Expr(Str('Raised when no section matches a requested option.', lineno=140, col_offset=4), lineno=140, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=142, col_offset=17), Name('section', Param(), lineno=142, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=143, col_offset=8), '__init__', Load(), lineno=143, col_offset=8), [Name('self', Load(), lineno=143, col_offset=23), BinOp(Str('No section: %r', lineno=143, col_offset=29), Mod(), Tuple([Name('section', Load(), lineno=143, col_offset=49)], Load(), lineno=143, col_offset=49), lineno=143, col_offset=29)], [], None, None, lineno=143, col_offset=8), lineno=143, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=144, col_offset=8), 'section', Store(), lineno=144, col_offset=8)], Name('section', Load(), lineno=144, col_offset=23), lineno=144, col_offset=8)], [], lineno=142, col_offset=4)], [], lineno=139, col_offset=0), ClassDef('DuplicateSectionError', [Name('Error', Load(), lineno=146, col_offset=28)], [Expr(Str('Raised when a section is multiply-created.', lineno=147, col_offset=4), lineno=147, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=149, col_offset=17), Name('section', Param(), lineno=149, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=150, col_offset=8), '__init__', Load(), lineno=150, col_offset=8), [Name('self', Load(), lineno=150, col_offset=23), BinOp(Str('Section %r already exists', lineno=150, col_offset=29), Mod(), Name('section', Load(), lineno=150, col_offset=59), lineno=150, col_offset=29)], [], None, None, lineno=150, col_offset=8), lineno=150, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=151, col_offset=8), 'section', Store(), lineno=151, col_offset=8)], Name('section', Load(), lineno=151, col_offset=23), lineno=151, col_offset=8)], [], lineno=149, col_offset=4)], [], lineno=146, col_offset=0), ClassDef('NoOptionError', [Name('Error', Load(), lineno=153, col_offset=20)], [Expr(Str('A requested option was not found.', lineno=154, col_offset=4), lineno=154, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=156, col_offset=17), Name('option', Param(), lineno=156, col_offset=23), Name('section', Param(), lineno=156, col_offset=31)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=157, col_offset=8), '__init__', Load(), lineno=157, col_offset=8), [Name('self', Load(), lineno=157, col_offset=23), BinOp(Str('No option %r in section: %r', lineno=157, col_offset=29), Mod(), Tuple([Name('option', Load(), lineno=158, col_offset=24), Name('section', Load(), lineno=158, col_offset=32)], Load(), lineno=158, col_offset=24), lineno=157, col_offset=29)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=159, col_offset=8), 'option', Store(), lineno=159, col_offset=8)], Name('option', Load(), lineno=159, col_offset=22), lineno=159, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=160, col_offset=8), 'section', Store(), lineno=160, col_offset=8)], Name('section', Load(), lineno=160, col_offset=23), lineno=160, col_offset=8)], [], lineno=156, col_offset=4)], [], lineno=153, col_offset=0), ClassDef('InterpolationError', [Name('Error', Load(), lineno=162, col_offset=25)], [Expr(Str('Base class for interpolation-related exceptions.', lineno=163, col_offset=4), lineno=163, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=165, col_offset=17), Name('option', Param(), lineno=165, col_offset=23), Name('section', Param(), lineno=165, col_offset=31), Name('msg', Param(), lineno=165, col_offset=40)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=166, col_offset=8), '__init__', Load(), lineno=166, col_offset=8), [Name('self', Load(), lineno=166, col_offset=23), Name('msg', Load(), lineno=166, col_offset=29)], [], None, None, lineno=166, col_offset=8), lineno=166, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=167, col_offset=8), 'option', Store(), lineno=167, col_offset=8)], Name('option', Load(), lineno=167, col_offset=22), lineno=167, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=168, col_offset=8), 'section', Store(), lineno=168, col_offset=8)], Name('section', Load(), lineno=168, col_offset=23), lineno=168, col_offset=8)], [], lineno=165, col_offset=4)], [], lineno=162, col_offset=0), ClassDef('InterpolationMissingOptionError', [Name('InterpolationError', Load(), lineno=170, col_offset=38)], [Expr(Str('A string substitution required a setting which was not available.', lineno=171, col_offset=4), lineno=171, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=173, col_offset=17), Name('option', Param(), lineno=173, col_offset=23), Name('section', Param(), lineno=173, col_offset=31), Name('rawval', Param(), lineno=173, col_offset=40), Name('reference', Param(), lineno=173, col_offset=48)], None, None, []), [Assign([Name('msg', Store(), lineno=174, col_offset=8)], BinOp(Str('Bad value substitution:\n\tsection: [%s]\n\toption : %s\n\tkey    : %s\n\trawval : %s\n', lineno=174, col_offset=15), Mod(), Tuple([Name('section', Load(), lineno=179, col_offset=18), Name('option', Load(), lineno=179, col_offset=27), Name('reference', Load(), lineno=179, col_offset=35), Name('rawval', Load(), lineno=179, col_offset=46)], Load(), lineno=179, col_offset=18), lineno=174, col_offset=15), lineno=174, col_offset=8), Expr(Call(Attribute(Name('InterpolationError', Load(), lineno=180, col_offset=8), '__init__', Load(), lineno=180, col_offset=8), [Name('self', Load(), lineno=180, col_offset=36), Name('option', Load(), lineno=180, col_offset=42), Name('section', Load(), lineno=180, col_offset=50), Name('msg', Load(), lineno=180, col_offset=59)], [], None, None, lineno=180, col_offset=8), lineno=180, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=181, col_offset=8), 'reference', Store(), lineno=181, col_offset=8)], Name('reference', Load(), lineno=181, col_offset=25), lineno=181, col_offset=8)], [], lineno=173, col_offset=4)], [], lineno=170, col_offset=0), ClassDef('InterpolationSyntaxError', [Name('InterpolationError', Load(), lineno=183, col_offset=31)], [Expr(Str('Raised when the source text into which substitutions are made\n    does not conform to the required syntax.', lineno=185, col_offset=-1), lineno=185, col_offset=-1)], [], lineno=183, col_offset=0), ClassDef('InterpolationDepthError', [Name('InterpolationError', Load(), lineno=187, col_offset=30)], [Expr(Str('Raised when substitutions are nested too deeply.', lineno=188, col_offset=4), lineno=188, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=190, col_offset=17), Name('option', Param(), lineno=190, col_offset=23), Name('section', Param(), lineno=190, col_offset=31), Name('rawval', Param(), lineno=190, col_offset=40)], None, None, []), [Assign([Name('msg', Store(), lineno=191, col_offset=8)], BinOp(Str('Value interpolation too deeply recursive:\n\tsection: [%s]\n\toption : %s\n\trawval : %s\n', lineno=191, col_offset=15), Mod(), Tuple([Name('section', Load(), lineno=195, col_offset=18), Name('option', Load(), lineno=195, col_offset=27), Name('rawval', Load(), lineno=195, col_offset=35)], Load(), lineno=195, col_offset=18), lineno=191, col_offset=15), lineno=191, col_offset=8), Expr(Call(Attribute(Name('InterpolationError', Load(), lineno=196, col_offset=8), '__init__', Load(), lineno=196, col_offset=8), [Name('self', Load(), lineno=196, col_offset=36), Name('option', Load(), lineno=196, col_offset=42), Name('section', Load(), lineno=196, col_offset=50), Name('msg', Load(), lineno=196, col_offset=59)], [], None, None, lineno=196, col_offset=8), lineno=196, col_offset=8)], [], lineno=190, col_offset=4)], [], lineno=187, col_offset=0), ClassDef('ParsingError', [Name('Error', Load(), lineno=198, col_offset=19)], [Expr(Str('Raised when a configuration file does not follow legal syntax.', lineno=199, col_offset=4), lineno=199, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=201, col_offset=17), Name('filename', Param(), lineno=201, col_offset=23)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=202, col_offset=8), '__init__', Load(), lineno=202, col_offset=8), [Name('self', Load(), lineno=202, col_offset=23), BinOp(Str('File contains parsing errors: %s', lineno=202, col_offset=29), Mod(), Name('filename', Load(), lineno=202, col_offset=66), lineno=202, col_offset=29)], [], None, None, lineno=202, col_offset=8), lineno=202, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=203, col_offset=8), 'filename', Store(), lineno=203, col_offset=8)], Name('filename', Load(), lineno=203, col_offset=24), lineno=203, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=204, col_offset=8), 'errors', Store(), lineno=204, col_offset=8)], List([], Load(), lineno=204, col_offset=22), lineno=204, col_offset=8)], [], lineno=201, col_offset=4), FunctionDef('append', arguments([Name('self', Param(), lineno=206, col_offset=15), Name('lineno', Param(), lineno=206, col_offset=21), Name('line', Param(), lineno=206, col_offset=29)], None, None, []), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=207, col_offset=8), 'errors', Load(), lineno=207, col_offset=8), 'append', Load(), lineno=207, col_offset=8), [Tuple([Name('lineno', Load(), lineno=207, col_offset=28), Name('line', Load(), lineno=207, col_offset=36)], Load(), lineno=207, col_offset=28)], [], None, None, lineno=207, col_offset=8), lineno=207, col_offset=8), AugAssign(Attribute(Name('self', Load(), lineno=208, col_offset=8), 'message', Store(), lineno=208, col_offset=8), Add(), BinOp(Str('\n\t[line %2d]: %s', lineno=208, col_offset=24), Mod(), Tuple([Name('lineno', Load(), lineno=208, col_offset=48), Name('line', Load(), lineno=208, col_offset=56)], Load(), lineno=208, col_offset=48), lineno=208, col_offset=24), lineno=208, col_offset=8)], [], lineno=206, col_offset=4)], [], lineno=198, col_offset=0), ClassDef('MissingSectionHeaderError', [Name('ParsingError', Load(), lineno=210, col_offset=32)], [Expr(Str('Raised when a key-value pair is found before any section header.', lineno=211, col_offset=4), lineno=211, col_offset=4), FunctionDef('__init__', arguments([Name('self', Param(), lineno=213, col_offset=17), Name('filename', Param(), lineno=213, col_offset=23), Name('lineno', Param(), lineno=213, col_offset=33), Name('line', Param(), lineno=213, col_offset=41)], None, None, []), [Expr(Call(Attribute(Name('Error', Load(), lineno=214, col_offset=8), '__init__', Load(), lineno=214, col_offset=8), [Name('self', Load(), lineno=215, col_offset=12), BinOp(Str('File contains no section headers.\nfile: %s, line: %d\n%r', lineno=216, col_offset=12), Mod(), Tuple([Name('filename', Load(), lineno=217, col_offset=13), Name('lineno', Load(), lineno=217, col_offset=23), Name('line', Load(), lineno=217, col_offset=31)], Load(), lineno=217, col_offset=13), lineno=216, col_offset=12)], [], None, None, lineno=214, col_offset=8), lineno=214, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=218, col_offset=8), 'filename', Store(), lineno=218, col_offset=8)], Name('filename', Load(), lineno=218, col_offset=24), lineno=218, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=219, col_offset=8), 'lineno', Store(), lineno=219, col_offset=8)], Name('lineno', Load(), lineno=219, col_offset=22), lineno=219, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=220, col_offset=8), 'line', Store(), lineno=220, col_offset=8)], Name('line', Load(), lineno=220, col_offset=20), lineno=220, col_offset=8)], [], lineno=213, col_offset=4)], [], lineno=210, col_offset=0), ClassDef('RawConfigParser', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=224, col_offset=17), Name('defaults', Param(), lineno=224, col_offset=23), Name('dict_type', Param(), lineno=224, col_offset=38), Name('allow_no_value', Param(), lineno=225, col_offset=17)], None, None, [Name('None', Load(), lineno=224, col_offset=32), Name('_default_dict', Load(), lineno=224, col_offset=48), Name('False', Load(), lineno=225, col_offset=32)]), [Assign([Attribute(Name('self', Load(), lineno=226, col_offset=8), '_dict', Store(), lineno=226, col_offset=8)], Name('dict_type', Load(), lineno=226, col_offset=21), lineno=226, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=227, col_offset=8), '_sections', Store(), lineno=227, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=227, col_offset=25), '_dict', Load(), lineno=227, col_offset=25), [], [], None, None, lineno=227, col_offset=25), lineno=227, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=228, col_offset=8), '_defaults', Store(), lineno=228, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=228, col_offset=25), '_dict', Load(), lineno=228, col_offset=25), [], [], None, None, lineno=228, col_offset=25), lineno=228, col_offset=8), If(Name('allow_no_value', Load(), lineno=229, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=230, col_offset=12), '_optcre', Store(), lineno=230, col_offset=12)], Attribute(Name('self', Load(), lineno=230, col_offset=27), 'OPTCRE_NV', Load(), lineno=230, col_offset=27), lineno=230, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=232, col_offset=12), '_optcre', Store(), lineno=232, col_offset=12)], Attribute(Name('self', Load(), lineno=232, col_offset=27), 'OPTCRE', Load(), lineno=232, col_offset=27), lineno=232, col_offset=12)], lineno=229, col_offset=8), If(Name('defaults', Load(), lineno=233, col_offset=11), [For(Tuple([Name('key', Store(), lineno=234, col_offset=16), Name('value', Store(), lineno=234, col_offset=21)], Store(), lineno=234, col_offset=16), Call(Attribute(Name('defaults', Load(), lineno=234, col_offset=30), 'items', Load(), lineno=234, col_offset=30), [], [], None, None, lineno=234, col_offset=30), [Assign([Subscript(Attribute(Name('self', Load(), lineno=235, col_offset=16), '_defaults', Load(), lineno=235, col_offset=16), Index(Call(Attribute(Name('self', Load(), lineno=235, col_offset=31), 'optionxform', Load(), lineno=235, col_offset=31), [Name('key', Load(), lineno=235, col_offset=48)], [], None, None, lineno=235, col_offset=31)), Store(), lineno=235, col_offset=16)], Name('value', Load(), lineno=235, col_offset=56), lineno=235, col_offset=16)], [], lineno=234, col_offset=12)], [], lineno=233, col_offset=8)], [], lineno=224, col_offset=4), FunctionDef('defaults', arguments([Name('self', Param(), lineno=237, col_offset=17)], None, None, []), [Return(Attribute(Name('self', Load(), lineno=238, col_offset=15), '_defaults', Load(), lineno=238, col_offset=15), lineno=238, col_offset=8)], [], lineno=237, col_offset=4), FunctionDef('sections', arguments([Name('self', Param(), lineno=240, col_offset=17)], None, None, []), [Expr(Str('Return a list of section names, excluding [DEFAULT]', lineno=241, col_offset=8), lineno=241, col_offset=8), Return(Call(Attribute(Attribute(Name('self', Load(), lineno=243, col_offset=15), '_sections', Load(), lineno=243, col_offset=15), 'keys', Load(), lineno=243, col_offset=15), [], [], None, None, lineno=243, col_offset=15), lineno=243, col_offset=8)], [], lineno=240, col_offset=4), FunctionDef('add_section', arguments([Name('self', Param(), lineno=245, col_offset=20), Name('section', Param(), lineno=245, col_offset=26)], None, None, []), [Expr(Str("Create a new section in the configuration.\n\n        Raise DuplicateSectionError if a section by the specified name\n        already exists. Raise ValueError if name is DEFAULT or any of it's\n        case-insensitive variants.\n        ", lineno=251, col_offset=-1), lineno=251, col_offset=-1), If(Compare(Call(Attribute(Name('section', Load(), lineno=252, col_offset=11), 'lower', Load(), lineno=252, col_offset=11), [], [], None, None, lineno=252, col_offset=11), [Eq()], [Str('default', lineno=252, col_offset=30)], lineno=252, col_offset=11), [Raise(Name('ValueError', Load(), lineno=253, col_offset=18), BinOp(Str('Invalid section name: %s', lineno=253, col_offset=30), Mod(), Name('section', Load(), lineno=253, col_offset=59), lineno=253, col_offset=30), None, lineno=253, col_offset=12)], [], lineno=252, col_offset=8), If(Compare(Name('section', Load(), lineno=255, col_offset=11), [In()], [Attribute(Name('self', Load(), lineno=255, col_offset=22), '_sections', Load(), lineno=255, col_offset=22)], lineno=255, col_offset=11), [Raise(Call(Name('DuplicateSectionError', Load(), lineno=256, col_offset=18), [Name('section', Load(), lineno=256, col_offset=40)], [], None, None, lineno=256, col_offset=18), None, None, lineno=256, col_offset=12)], [], lineno=255, col_offset=8), Assign([Subscript(Attribute(Name('self', Load(), lineno=257, col_offset=8), '_sections', Load(), lineno=257, col_offset=8), Index(Name('section', Load(), lineno=257, col_offset=23)), Store(), lineno=257, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=257, col_offset=34), '_dict', Load(), lineno=257, col_offset=34), [], [], None, None, lineno=257, col_offset=34), lineno=257, col_offset=8)], [], lineno=245, col_offset=4), FunctionDef('has_section', arguments([Name('self', Param(), lineno=259, col_offset=20), Name('section', Param(), lineno=259, col_offset=26)], None, None, []), [Expr(Str('Indicate whether the named section is present in the configuration.\n\n        The DEFAULT section is not acknowledged.\n        ', lineno=263, col_offset=-1), lineno=263, col_offset=-1), Return(Compare(Name('section', Load(), lineno=264, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=264, col_offset=26), '_sections', Load(), lineno=264, col_offset=26)], lineno=264, col_offset=15), lineno=264, col_offset=8)], [], lineno=259, col_offset=4), FunctionDef('options', arguments([Name('self', Param(), lineno=266, col_offset=16), Name('section', Param(), lineno=266, col_offset=22)], None, None, []), [Expr(Str('Return a list of option names for the given section name.', lineno=267, col_offset=8), lineno=267, col_offset=8), TryExcept([Assign([Name('opts', Store(), lineno=269, col_offset=12)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=269, col_offset=19), '_sections', Load(), lineno=269, col_offset=19), Index(Name('section', Load(), lineno=269, col_offset=34)), Load(), lineno=269, col_offset=19), 'copy', Load(), lineno=269, col_offset=19), [], [], None, None, lineno=269, col_offset=19), lineno=269, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=270, col_offset=15), None, [Raise(Call(Name('NoSectionError', Load(), lineno=271, col_offset=18), [Name('section', Load(), lineno=271, col_offset=33)], [], None, None, lineno=271, col_offset=18), None, None, lineno=271, col_offset=12)], lineno=270, col_offset=8)], [], lineno=268, col_offset=8), Expr(Call(Attribute(Name('opts', Load(), lineno=272, col_offset=8), 'update', Load(), lineno=272, col_offset=8), [Attribute(Name('self', Load(), lineno=272, col_offset=20), '_defaults', Load(), lineno=272, col_offset=20)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=8), If(Compare(Str('__name__', lineno=273, col_offset=11), [In()], [Name('opts', Load(), lineno=273, col_offset=25)], lineno=273, col_offset=11), [Delete([Subscript(Name('opts', Load(), lineno=274, col_offset=16), Index(Str('__name__', lineno=274, col_offset=21)), Del(), lineno=274, col_offset=16)], lineno=274, col_offset=12)], [], lineno=273, col_offset=8), Return(Call(Attribute(Name('opts', Load(), lineno=275, col_offset=15), 'keys', Load(), lineno=275, col_offset=15), [], [], None, None, lineno=275, col_offset=15), lineno=275, col_offset=8)], [], lineno=266, col_offset=4), FunctionDef('read', arguments([Name('self', Param(), lineno=277, col_offset=13), Name('filenames', Param(), lineno=277, col_offset=19)], None, None, []), [Expr(Str("Read and parse a filename or a list of filenames.\n\n        Files that cannot be opened are silently ignored; this is\n        designed so that you can specify a list of potential\n        configuration file locations (e.g. current directory, user's\n        home directory, systemwide directory), and all existing\n        configuration files in the list will be read.  A single\n        filename may also be given.\n\n        Return list of successfully read files.\n        ", lineno=288, col_offset=-1), lineno=288, col_offset=-1), If(Call(Name('isinstance', Load(), lineno=289, col_offset=11), [Name('filenames', Load(), lineno=289, col_offset=22), Name('basestring', Load(), lineno=289, col_offset=33)], [], None, None, lineno=289, col_offset=11), [Assign([Name('filenames', Store(), lineno=290, col_offset=12)], List([Name('filenames', Load(), lineno=290, col_offset=25)], Load(), lineno=290, col_offset=24), lineno=290, col_offset=12)], [], lineno=289, col_offset=8), Assign([Name('read_ok', Store(), lineno=291, col_offset=8)], List([], Load(), lineno=291, col_offset=18), lineno=291, col_offset=8), For(Name('filename', Store(), lineno=292, col_offset=12), Name('filenames', Load(), lineno=292, col_offset=24), [TryExcept([Assign([Name('fp', Store(), lineno=294, col_offset=16)], Call(Name('open', Load(), lineno=294, col_offset=21), [Name('filename', Load(), lineno=294, col_offset=26)], [], None, None, lineno=294, col_offset=21), lineno=294, col_offset=16)], [ExceptHandler(Name('IOError', Load(), lineno=295, col_offset=19), None, [Continue( lineno=296, col_offset=16)], lineno=295, col_offset=12)], [], lineno=293, col_offset=12), Expr(Call(Attribute(Name('self', Load(), lineno=297, col_offset=12), '_read', Load(), lineno=297, col_offset=12), [Name('fp', Load(), lineno=297, col_offset=23), Name('filename', Load(), lineno=297, col_offset=27)], [], None, None, lineno=297, col_offset=12), lineno=297, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=298, col_offset=12), 'close', Load(), lineno=298, col_offset=12), [], [], None, None, lineno=298, col_offset=12), lineno=298, col_offset=12), Expr(Call(Attribute(Name('read_ok', Load(), lineno=299, col_offset=12), 'append', Load(), lineno=299, col_offset=12), [Name('filename', Load(), lineno=299, col_offset=27)], [], None, None, lineno=299, col_offset=12), lineno=299, col_offset=12)], [], lineno=292, col_offset=8), Return(Name('read_ok', Load(), lineno=300, col_offset=15), lineno=300, col_offset=8)], [], lineno=277, col_offset=4), FunctionDef('readfp', arguments([Name('self', Param(), lineno=302, col_offset=15), Name('fp', Param(), lineno=302, col_offset=21), Name('filename', Param(), lineno=302, col_offset=25)], None, None, [Name('None', Load(), lineno=302, col_offset=34)]), [Expr(Str("Like read() but the argument must be a file-like object.\n\n        The `fp' argument must have a `readline' method.  Optional\n        second argument is the `filename', which if not given, is\n        taken from fp.name.  If fp has no `name' attribute, `<???>' is\n        used.\n\n        ", lineno=310, col_offset=-1), lineno=310, col_offset=-1), If(Compare(Name('filename', Load(), lineno=311, col_offset=11), [Is()], [Name('None', Load(), lineno=311, col_offset=23)], lineno=311, col_offset=11), [TryExcept([Assign([Name('filename', Store(), lineno=313, col_offset=16)], Attribute(Name('fp', Load(), lineno=313, col_offset=27), 'name', Load(), lineno=313, col_offset=27), lineno=313, col_offset=16)], [ExceptHandler(Name('AttributeError', Load(), lineno=314, col_offset=19), None, [Assign([Name('filename', Store(), lineno=315, col_offset=16)], Str('<???>', lineno=315, col_offset=27), lineno=315, col_offset=16)], lineno=314, col_offset=12)], [], lineno=312, col_offset=12)], [], lineno=311, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=316, col_offset=8), '_read', Load(), lineno=316, col_offset=8), [Name('fp', Load(), lineno=316, col_offset=19), Name('filename', Load(), lineno=316, col_offset=23)], [], None, None, lineno=316, col_offset=8), lineno=316, col_offset=8)], [], lineno=302, col_offset=4), FunctionDef('get', arguments([Name('self', Param(), lineno=318, col_offset=12), Name('section', Param(), lineno=318, col_offset=18), Name('option', Param(), lineno=318, col_offset=27)], None, None, []), [Assign([Name('opt', Store(), lineno=319, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=319, col_offset=14), 'optionxform', Load(), lineno=319, col_offset=14), [Name('option', Load(), lineno=319, col_offset=31)], [], None, None, lineno=319, col_offset=14), lineno=319, col_offset=8), If(Compare(Name('section', Load(), lineno=320, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=320, col_offset=26), '_sections', Load(), lineno=320, col_offset=26)], lineno=320, col_offset=11), [If(Compare(Name('section', Load(), lineno=321, col_offset=15), [NotEq()], [Name('DEFAULTSECT', Load(), lineno=321, col_offset=26)], lineno=321, col_offset=15), [Raise(Call(Name('NoSectionError', Load(), lineno=322, col_offset=22), [Name('section', Load(), lineno=322, col_offset=37)], [], None, None, lineno=322, col_offset=22), None, None, lineno=322, col_offset=16)], [], lineno=321, col_offset=12), If(Compare(Name('opt', Load(), lineno=323, col_offset=15), [In()], [Attribute(Name('self', Load(), lineno=323, col_offset=22), '_defaults', Load(), lineno=323, col_offset=22)], lineno=323, col_offset=15), [Return(Subscript(Attribute(Name('self', Load(), lineno=324, col_offset=23), '_defaults', Load(), lineno=324, col_offset=23), Index(Name('opt', Load(), lineno=324, col_offset=38)), Load(), lineno=324, col_offset=23), lineno=324, col_offset=16)], [Raise(Call(Name('NoOptionError', Load(), lineno=326, col_offset=22), [Name('option', Load(), lineno=326, col_offset=36), Name('section', Load(), lineno=326, col_offset=44)], [], None, None, lineno=326, col_offset=22), None, None, lineno=326, col_offset=16)], lineno=323, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=327, col_offset=13), [In()], [Subscript(Attribute(Name('self', Load(), lineno=327, col_offset=20), '_sections', Load(), lineno=327, col_offset=20), Index(Name('section', Load(), lineno=327, col_offset=35)), Load(), lineno=327, col_offset=20)], lineno=327, col_offset=13), [Return(Subscript(Subscript(Attribute(Name('self', Load(), lineno=328, col_offset=19), '_sections', Load(), lineno=328, col_offset=19), Index(Name('section', Load(), lineno=328, col_offset=34)), Load(), lineno=328, col_offset=19), Index(Name('opt', Load(), lineno=328, col_offset=43)), Load(), lineno=328, col_offset=19), lineno=328, col_offset=12)], [If(Compare(Name('opt', Load(), lineno=329, col_offset=13), [In()], [Attribute(Name('self', Load(), lineno=329, col_offset=20), '_defaults', Load(), lineno=329, col_offset=20)], lineno=329, col_offset=13), [Return(Subscript(Attribute(Name('self', Load(), lineno=330, col_offset=19), '_defaults', Load(), lineno=330, col_offset=19), Index(Name('opt', Load(), lineno=330, col_offset=34)), Load(), lineno=330, col_offset=19), lineno=330, col_offset=12)], [Raise(Call(Name('NoOptionError', Load(), lineno=332, col_offset=18), [Name('option', Load(), lineno=332, col_offset=32), Name('section', Load(), lineno=332, col_offset=40)], [], None, None, lineno=332, col_offset=18), None, None, lineno=332, col_offset=12)], lineno=329, col_offset=13)], lineno=327, col_offset=13)], lineno=320, col_offset=8)], [], lineno=318, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=334, col_offset=14), Name('section', Param(), lineno=334, col_offset=20)], None, None, []), [TryExcept([Assign([Name('d2', Store(), lineno=336, col_offset=12)], Subscript(Attribute(Name('self', Load(), lineno=336, col_offset=17), '_sections', Load(), lineno=336, col_offset=17), Index(Name('section', Load(), lineno=336, col_offset=32)), Load(), lineno=336, col_offset=17), lineno=336, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=337, col_offset=15), None, [If(Compare(Name('section', Load(), lineno=338, col_offset=15), [NotEq()], [Name('DEFAULTSECT', Load(), lineno=338, col_offset=26)], lineno=338, col_offset=15), [Raise(Call(Name('NoSectionError', Load(), lineno=339, col_offset=22), [Name('section', Load(), lineno=339, col_offset=37)], [], None, None, lineno=339, col_offset=22), None, None, lineno=339, col_offset=16)], [], lineno=338, col_offset=12), Assign([Name('d2', Store(), lineno=340, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=340, col_offset=17), '_dict', Load(), lineno=340, col_offset=17), [], [], None, None, lineno=340, col_offset=17), lineno=340, col_offset=12)], lineno=337, col_offset=8)], [], lineno=335, col_offset=8), Assign([Name('d', Store(), lineno=341, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=341, col_offset=12), '_defaults', Load(), lineno=341, col_offset=12), 'copy', Load(), lineno=341, col_offset=12), [], [], None, None, lineno=341, col_offset=12), lineno=341, col_offset=8), Expr(Call(Attribute(Name('d', Load(), lineno=342, col_offset=8), 'update', Load(), lineno=342, col_offset=8), [Name('d2', Load(), lineno=342, col_offset=17)], [], None, None, lineno=342, col_offset=8), lineno=342, col_offset=8), If(Compare(Str('__name__', lineno=343, col_offset=11), [In()], [Name('d', Load(), lineno=343, col_offset=25)], lineno=343, col_offset=11), [Delete([Subscript(Name('d', Load(), lineno=344, col_offset=16), Index(Str('__name__', lineno=344, col_offset=18)), Del(), lineno=344, col_offset=16)], lineno=344, col_offset=12)], [], lineno=343, col_offset=8), Return(Call(Attribute(Name('d', Load(), lineno=345, col_offset=15), 'items', Load(), lineno=345, col_offset=15), [], [], None, None, lineno=345, col_offset=15), lineno=345, col_offset=8)], [], lineno=334, col_offset=4), FunctionDef('_get', arguments([Name('self', Param(), lineno=347, col_offset=13), Name('section', Param(), lineno=347, col_offset=19), Name('conv', Param(), lineno=347, col_offset=28), Name('option', Param(), lineno=347, col_offset=34)], None, None, []), [Return(Call(Name('conv', Load(), lineno=348, col_offset=15), [Call(Attribute(Name('self', Load(), lineno=348, col_offset=20), 'get', Load(), lineno=348, col_offset=20), [Name('section', Load(), lineno=348, col_offset=29), Name('option', Load(), lineno=348, col_offset=38)], [], None, None, lineno=348, col_offset=20)], [], None, None, lineno=348, col_offset=15), lineno=348, col_offset=8)], [], lineno=347, col_offset=4), FunctionDef('getint', arguments([Name('self', Param(), lineno=350, col_offset=15), Name('section', Param(), lineno=350, col_offset=21), Name('option', Param(), lineno=350, col_offset=30)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=351, col_offset=15), '_get', Load(), lineno=351, col_offset=15), [Name('section', Load(), lineno=351, col_offset=25), Name('int', Load(), lineno=351, col_offset=34), Name('option', Load(), lineno=351, col_offset=39)], [], None, None, lineno=351, col_offset=15), lineno=351, col_offset=8)], [], lineno=350, col_offset=4), FunctionDef('getfloat', arguments([Name('self', Param(), lineno=353, col_offset=17), Name('section', Param(), lineno=353, col_offset=23), Name('option', Param(), lineno=353, col_offset=32)], None, None, []), [Return(Call(Attribute(Name('self', Load(), lineno=354, col_offset=15), '_get', Load(), lineno=354, col_offset=15), [Name('section', Load(), lineno=354, col_offset=25), Name('float', Load(), lineno=354, col_offset=34), Name('option', Load(), lineno=354, col_offset=41)], [], None, None, lineno=354, col_offset=15), lineno=354, col_offset=8)], [], lineno=353, col_offset=4), Assign([Name('_boolean_states', Store(), lineno=356, col_offset=4)], Dict([Str('1', lineno=356, col_offset=23), Str('yes', lineno=356, col_offset=34), Str('true', lineno=356, col_offset=47), Str('on', lineno=356, col_offset=61), Str('0', lineno=357, col_offset=23), Str('no', lineno=357, col_offset=35), Str('false', lineno=357, col_offset=48), Str('off', lineno=357, col_offset=64)], [Name('True', Load(), lineno=356, col_offset=28), Name('True', Load(), lineno=356, col_offset=41), Name('True', Load(), lineno=356, col_offset=55), Name('True', Load(), lineno=356, col_offset=67), Name('False', Load(), lineno=357, col_offset=28), Name('False', Load(), lineno=357, col_offset=41), Name('False', Load(), lineno=357, col_offset=57), Name('False', Load(), lineno=357, col_offset=71)], lineno=356, col_offset=22), lineno=356, col_offset=4), FunctionDef('getboolean', arguments([Name('self', Param(), lineno=359, col_offset=19), Name('section', Param(), lineno=359, col_offset=25), Name('option', Param(), lineno=359, col_offset=34)], None, None, []), [Assign([Name('v', Store(), lineno=360, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=360, col_offset=12), 'get', Load(), lineno=360, col_offset=12), [Name('section', Load(), lineno=360, col_offset=21), Name('option', Load(), lineno=360, col_offset=30)], [], None, None, lineno=360, col_offset=12), lineno=360, col_offset=8), If(Compare(Call(Attribute(Name('v', Load(), lineno=361, col_offset=11), 'lower', Load(), lineno=361, col_offset=11), [], [], None, None, lineno=361, col_offset=11), [NotIn()], [Attribute(Name('self', Load(), lineno=361, col_offset=28), '_boolean_states', Load(), lineno=361, col_offset=28)], lineno=361, col_offset=11), [Raise(Name('ValueError', Load(), lineno=362, col_offset=18), BinOp(Str('Not a boolean: %s', lineno=362, col_offset=30), Mod(), Name('v', Load(), lineno=362, col_offset=52), lineno=362, col_offset=30), None, lineno=362, col_offset=12)], [], lineno=361, col_offset=8), Return(Subscript(Attribute(Name('self', Load(), lineno=363, col_offset=15), '_boolean_states', Load(), lineno=363, col_offset=15), Index(Call(Attribute(Name('v', Load(), lineno=363, col_offset=36), 'lower', Load(), lineno=363, col_offset=36), [], [], None, None, lineno=363, col_offset=36)), Load(), lineno=363, col_offset=15), lineno=363, col_offset=8)], [], lineno=359, col_offset=4), FunctionDef('optionxform', arguments([Name('self', Param(), lineno=365, col_offset=20), Name('optionstr', Param(), lineno=365, col_offset=26)], None, None, []), [Return(Call(Attribute(Name('optionstr', Load(), lineno=366, col_offset=15), 'lower', Load(), lineno=366, col_offset=15), [], [], None, None, lineno=366, col_offset=15), lineno=366, col_offset=8)], [], lineno=365, col_offset=4), FunctionDef('has_option', arguments([Name('self', Param(), lineno=368, col_offset=19), Name('section', Param(), lineno=368, col_offset=25), Name('option', Param(), lineno=368, col_offset=34)], None, None, []), [Expr(Str('Check for the existence of a given option in a given section.', lineno=369, col_offset=8), lineno=369, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('section', Load(), lineno=370, col_offset=15), lineno=370, col_offset=11), Compare(Name('section', Load(), lineno=370, col_offset=26), [Eq()], [Name('DEFAULTSECT', Load(), lineno=370, col_offset=37)], lineno=370, col_offset=26)], lineno=370, col_offset=11), [Assign([Name('option', Store(), lineno=371, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=371, col_offset=21), 'optionxform', Load(), lineno=371, col_offset=21), [Name('option', Load(), lineno=371, col_offset=38)], [], None, None, lineno=371, col_offset=21), lineno=371, col_offset=12), Return(Compare(Name('option', Load(), lineno=372, col_offset=19), [In()], [Attribute(Name('self', Load(), lineno=372, col_offset=29), '_defaults', Load(), lineno=372, col_offset=29)], lineno=372, col_offset=19), lineno=372, col_offset=12)], [If(Compare(Name('section', Load(), lineno=373, col_offset=13), [NotIn()], [Attribute(Name('self', Load(), lineno=373, col_offset=28), '_sections', Load(), lineno=373, col_offset=28)], lineno=373, col_offset=13), [Return(Name('False', Load(), lineno=374, col_offset=19), lineno=374, col_offset=12)], [Assign([Name('option', Store(), lineno=376, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=376, col_offset=21), 'optionxform', Load(), lineno=376, col_offset=21), [Name('option', Load(), lineno=376, col_offset=38)], [], None, None, lineno=376, col_offset=21), lineno=376, col_offset=12), Return(BoolOp(Or(), [Compare(Name('option', Load(), lineno=377, col_offset=20), [In()], [Subscript(Attribute(Name('self', Load(), lineno=377, col_offset=30), '_sections', Load(), lineno=377, col_offset=30), Index(Name('section', Load(), lineno=377, col_offset=45)), Load(), lineno=377, col_offset=30)], lineno=377, col_offset=20), Compare(Name('option', Load(), lineno=378, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=378, col_offset=33), '_defaults', Load(), lineno=378, col_offset=33)], lineno=378, col_offset=23)], lineno=377, col_offset=20), lineno=377, col_offset=12)], lineno=373, col_offset=13)], lineno=370, col_offset=8)], [], lineno=368, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=380, col_offset=12), Name('section', Param(), lineno=380, col_offset=18), Name('option', Param(), lineno=380, col_offset=27), Name('value', Param(), lineno=380, col_offset=35)], None, None, [Name('None', Load(), lineno=380, col_offset=41)]), [Expr(Str('Set an option.', lineno=381, col_offset=8), lineno=381, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('section', Load(), lineno=382, col_offset=15), lineno=382, col_offset=11), Compare(Name('section', Load(), lineno=382, col_offset=26), [Eq()], [Name('DEFAULTSECT', Load(), lineno=382, col_offset=37)], lineno=382, col_offset=26)], lineno=382, col_offset=11), [Assign([Name('sectdict', Store(), lineno=383, col_offset=12)], Attribute(Name('self', Load(), lineno=383, col_offset=23), '_defaults', Load(), lineno=383, col_offset=23), lineno=383, col_offset=12)], [TryExcept([Assign([Name('sectdict', Store(), lineno=386, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=386, col_offset=27), '_sections', Load(), lineno=386, col_offset=27), Index(Name('section', Load(), lineno=386, col_offset=42)), Load(), lineno=386, col_offset=27), lineno=386, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=387, col_offset=19), None, [Raise(Call(Name('NoSectionError', Load(), lineno=388, col_offset=22), [Name('section', Load(), lineno=388, col_offset=37)], [], None, None, lineno=388, col_offset=22), None, None, lineno=388, col_offset=16)], lineno=387, col_offset=12)], [], lineno=385, col_offset=12)], lineno=382, col_offset=8), Assign([Subscript(Name('sectdict', Load(), lineno=389, col_offset=8), Index(Call(Attribute(Name('self', Load(), lineno=389, col_offset=17), 'optionxform', Load(), lineno=389, col_offset=17), [Name('option', Load(), lineno=389, col_offset=34)], [], None, None, lineno=389, col_offset=17)), Store(), lineno=389, col_offset=8)], Name('value', Load(), lineno=389, col_offset=45), lineno=389, col_offset=8)], [], lineno=380, col_offset=4), FunctionDef('write', arguments([Name('self', Param(), lineno=391, col_offset=14), Name('fp', Param(), lineno=391, col_offset=20)], None, None, []), [Expr(Str('Write an .ini-format representation of the configuration state.', lineno=392, col_offset=8), lineno=392, col_offset=8), If(Attribute(Name('self', Load(), lineno=393, col_offset=11), '_defaults', Load(), lineno=393, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=394, col_offset=12), 'write', Load(), lineno=394, col_offset=12), [BinOp(Str('[%s]\n', lineno=394, col_offset=21), Mod(), Name('DEFAULTSECT', Load(), lineno=394, col_offset=32), lineno=394, col_offset=21)], [], None, None, lineno=394, col_offset=12), lineno=394, col_offset=12), For(Tuple([Name('key', Store(), lineno=395, col_offset=17), Name('value', Store(), lineno=395, col_offset=22)], Store(), lineno=395, col_offset=17), Call(Attribute(Attribute(Name('self', Load(), lineno=395, col_offset=32), '_defaults', Load(), lineno=395, col_offset=32), 'items', Load(), lineno=395, col_offset=32), [], [], None, None, lineno=395, col_offset=32), [Expr(Call(Attribute(Name('fp', Load(), lineno=396, col_offset=16), 'write', Load(), lineno=396, col_offset=16), [BinOp(Str('%s = %s\n', lineno=396, col_offset=25), Mod(), Tuple([Name('key', Load(), lineno=396, col_offset=40), Call(Attribute(Call(Name('str', Load(), lineno=396, col_offset=45), [Name('value', Load(), lineno=396, col_offset=49)], [], None, None, lineno=396, col_offset=45), 'replace', Load(), lineno=396, col_offset=45), [Str('\n', lineno=396, col_offset=64), Str('\n\t', lineno=396, col_offset=70)], [], None, None, lineno=396, col_offset=45)], Load(), lineno=396, col_offset=40), lineno=396, col_offset=25)], [], None, None, lineno=396, col_offset=16), lineno=396, col_offset=16)], [], lineno=395, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=397, col_offset=12), 'write', Load(), lineno=397, col_offset=12), [Str('\n', lineno=397, col_offset=21)], [], None, None, lineno=397, col_offset=12), lineno=397, col_offset=12)], [], lineno=393, col_offset=8), For(Name('section', Store(), lineno=398, col_offset=12), Attribute(Name('self', Load(), lineno=398, col_offset=23), '_sections', Load(), lineno=398, col_offset=23), [Expr(Call(Attribute(Name('fp', Load(), lineno=399, col_offset=12), 'write', Load(), lineno=399, col_offset=12), [BinOp(Str('[%s]\n', lineno=399, col_offset=21), Mod(), Name('section', Load(), lineno=399, col_offset=32), lineno=399, col_offset=21)], [], None, None, lineno=399, col_offset=12), lineno=399, col_offset=12), For(Tuple([Name('key', Store(), lineno=400, col_offset=17), Name('value', Store(), lineno=400, col_offset=22)], Store(), lineno=400, col_offset=17), Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=400, col_offset=32), '_sections', Load(), lineno=400, col_offset=32), Index(Name('section', Load(), lineno=400, col_offset=47)), Load(), lineno=400, col_offset=32), 'items', Load(), lineno=400, col_offset=32), [], [], None, None, lineno=400, col_offset=32), [If(Compare(Name('key', Load(), lineno=401, col_offset=19), [Eq()], [Str('__name__', lineno=401, col_offset=26)], lineno=401, col_offset=19), [Continue( lineno=402, col_offset=20)], [], lineno=401, col_offset=16), If(BoolOp(Or(), [Compare(Name('value', Load(), lineno=403, col_offset=20), [IsNot()], [Name('None', Load(), lineno=403, col_offset=33)], lineno=403, col_offset=20), Compare(Attribute(Name('self', Load(), lineno=403, col_offset=43), '_optcre', Load(), lineno=403, col_offset=43), [Eq()], [Attribute(Name('self', Load(), lineno=403, col_offset=59), 'OPTCRE', Load(), lineno=403, col_offset=59)], lineno=403, col_offset=43)], lineno=403, col_offset=19), [Assign([Name('key', Store(), lineno=404, col_offset=20)], Call(Attribute(Str(' = ', lineno=404, col_offset=26), 'join', Load(), lineno=404, col_offset=26), [Tuple([Name('key', Load(), lineno=404, col_offset=38), Call(Attribute(Call(Name('str', Load(), lineno=404, col_offset=43), [Name('value', Load(), lineno=404, col_offset=47)], [], None, None, lineno=404, col_offset=43), 'replace', Load(), lineno=404, col_offset=43), [Str('\n', lineno=404, col_offset=62), Str('\n\t', lineno=404, col_offset=68)], [], None, None, lineno=404, col_offset=43)], Load(), lineno=404, col_offset=38)], [], None, None, lineno=404, col_offset=26), lineno=404, col_offset=20)], [], lineno=403, col_offset=16), Expr(Call(Attribute(Name('fp', Load(), lineno=405, col_offset=16), 'write', Load(), lineno=405, col_offset=16), [BinOp(Str('%s\n', lineno=405, col_offset=25), Mod(), Name('key', Load(), lineno=405, col_offset=35), lineno=405, col_offset=25)], [], None, None, lineno=405, col_offset=16), lineno=405, col_offset=16)], [], lineno=400, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=406, col_offset=12), 'write', Load(), lineno=406, col_offset=12), [Str('\n', lineno=406, col_offset=21)], [], None, None, lineno=406, col_offset=12), lineno=406, col_offset=12)], [], lineno=398, col_offset=8)], [], lineno=391, col_offset=4), FunctionDef('remove_option', arguments([Name('self', Param(), lineno=408, col_offset=22), Name('section', Param(), lineno=408, col_offset=28), Name('option', Param(), lineno=408, col_offset=37)], None, None, []), [Expr(Str('Remove an option.', lineno=409, col_offset=8), lineno=409, col_offset=8), If(BoolOp(Or(), [UnaryOp(Not(), Name('section', Load(), lineno=410, col_offset=15), lineno=410, col_offset=11), Compare(Name('section', Load(), lineno=410, col_offset=26), [Eq()], [Name('DEFAULTSECT', Load(), lineno=410, col_offset=37)], lineno=410, col_offset=26)], lineno=410, col_offset=11), [Assign([Name('sectdict', Store(), lineno=411, col_offset=12)], Attribute(Name('self', Load(), lineno=411, col_offset=23), '_defaults', Load(), lineno=411, col_offset=23), lineno=411, col_offset=12)], [TryExcept([Assign([Name('sectdict', Store(), lineno=414, col_offset=16)], Subscript(Attribute(Name('self', Load(), lineno=414, col_offset=27), '_sections', Load(), lineno=414, col_offset=27), Index(Name('section', Load(), lineno=414, col_offset=42)), Load(), lineno=414, col_offset=27), lineno=414, col_offset=16)], [ExceptHandler(Name('KeyError', Load(), lineno=415, col_offset=19), None, [Raise(Call(Name('NoSectionError', Load(), lineno=416, col_offset=22), [Name('section', Load(), lineno=416, col_offset=37)], [], None, None, lineno=416, col_offset=22), None, None, lineno=416, col_offset=16)], lineno=415, col_offset=12)], [], lineno=413, col_offset=12)], lineno=410, col_offset=8), Assign([Name('option', Store(), lineno=417, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=417, col_offset=17), 'optionxform', Load(), lineno=417, col_offset=17), [Name('option', Load(), lineno=417, col_offset=34)], [], None, None, lineno=417, col_offset=17), lineno=417, col_offset=8), Assign([Name('existed', Store(), lineno=418, col_offset=8)], Compare(Name('option', Load(), lineno=418, col_offset=18), [In()], [Name('sectdict', Load(), lineno=418, col_offset=28)], lineno=418, col_offset=18), lineno=418, col_offset=8), If(Name('existed', Load(), lineno=419, col_offset=11), [Delete([Subscript(Name('sectdict', Load(), lineno=420, col_offset=16), Index(Name('option', Load(), lineno=420, col_offset=25)), Del(), lineno=420, col_offset=16)], lineno=420, col_offset=12)], [], lineno=419, col_offset=8), Return(Name('existed', Load(), lineno=421, col_offset=15), lineno=421, col_offset=8)], [], lineno=408, col_offset=4), FunctionDef('remove_section', arguments([Name('self', Param(), lineno=423, col_offset=23), Name('section', Param(), lineno=423, col_offset=29)], None, None, []), [Expr(Str('Remove a file section.', lineno=424, col_offset=8), lineno=424, col_offset=8), Assign([Name('existed', Store(), lineno=425, col_offset=8)], Compare(Name('section', Load(), lineno=425, col_offset=18), [In()], [Attribute(Name('self', Load(), lineno=425, col_offset=29), '_sections', Load(), lineno=425, col_offset=29)], lineno=425, col_offset=18), lineno=425, col_offset=8), If(Name('existed', Load(), lineno=426, col_offset=11), [Delete([Subscript(Attribute(Name('self', Load(), lineno=427, col_offset=16), '_sections', Load(), lineno=427, col_offset=16), Index(Name('section', Load(), lineno=427, col_offset=31)), Del(), lineno=427, col_offset=16)], lineno=427, col_offset=12)], [], lineno=426, col_offset=8), Return(Name('existed', Load(), lineno=428, col_offset=15), lineno=428, col_offset=8)], [], lineno=423, col_offset=4), Assign([Name('SECTCRE', Store(), lineno=433, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=433, col_offset=14), 'compile', Load(), lineno=433, col_offset=14), [Str('\\[(?P<header>[^]]+)\\]', lineno=434, col_offset=8)], [], None, None, lineno=433, col_offset=14), lineno=433, col_offset=4), Assign([Name('OPTCRE', Store(), lineno=438, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=438, col_offset=13), 'compile', Load(), lineno=438, col_offset=13), [Str('(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$', lineno=439, col_offset=8)], [], None, None, lineno=438, col_offset=13), lineno=438, col_offset=4), Assign([Name('OPTCRE_NV', Store(), lineno=446, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=446, col_offset=16), 'compile', Load(), lineno=446, col_offset=16), [Str('(?P<option>[^:=\\s][^:=]*)\\s*(?:(?P<vi>[:=])\\s*(?P<value>.*))?$', lineno=447, col_offset=8)], [], None, None, lineno=446, col_offset=16), lineno=446, col_offset=4), FunctionDef('_read', arguments([Name('self', Param(), lineno=456, col_offset=14), Name('fp', Param(), lineno=456, col_offset=20), Name('fpname', Param(), lineno=456, col_offset=24)], None, None, []), [Expr(Str("Parse a sectioned setup file.\n\n        The sections in setup file contains a title line at the top,\n        indicated by a name in square brackets (`[]'), plus key/value\n        options lines, indicated by `name: value' format lines.\n        Continuations are represented by an embedded newline then\n        leading whitespace.  Blank lines, lines beginning with a '#',\n        and just about everything else are ignored.\n        ", lineno=465, col_offset=-1), lineno=465, col_offset=-1), Assign([Name('cursect', Store(), lineno=466, col_offset=8)], Name('None', Load(), lineno=466, col_offset=18), lineno=466, col_offset=8), Assign([Name('optname', Store(), lineno=467, col_offset=8)], Name('None', Load(), lineno=467, col_offset=18), lineno=467, col_offset=8), Assign([Name('lineno', Store(), lineno=468, col_offset=8)], Num(0, lineno=468, col_offset=17), lineno=468, col_offset=8), Assign([Name('e', Store(), lineno=469, col_offset=8)], Name('None', Load(), lineno=469, col_offset=12), lineno=469, col_offset=8), While(Name('True', Load(), lineno=470, col_offset=14), [Assign([Name('line', Store(), lineno=471, col_offset=12)], Call(Attribute(Name('fp', Load(), lineno=471, col_offset=19), 'readline', Load(), lineno=471, col_offset=19), [], [], None, None, lineno=471, col_offset=19), lineno=471, col_offset=12), If(UnaryOp(Not(), Name('line', Load(), lineno=472, col_offset=19), lineno=472, col_offset=15), [Break( lineno=473, col_offset=16)], [], lineno=472, col_offset=12), Assign([Name('lineno', Store(), lineno=474, col_offset=12)], BinOp(Name('lineno', Load(), lineno=474, col_offset=21), Add(), Num(1, lineno=474, col_offset=30), lineno=474, col_offset=21), lineno=474, col_offset=12), If(BoolOp(Or(), [Compare(Call(Attribute(Name('line', Load(), lineno=476, col_offset=15), 'strip', Load(), lineno=476, col_offset=15), [], [], None, None, lineno=476, col_offset=15), [Eq()], [Str('', lineno=476, col_offset=31)], lineno=476, col_offset=15), Compare(Subscript(Name('line', Load(), lineno=476, col_offset=37), Index(Num(0, lineno=476, col_offset=42)), Load(), lineno=476, col_offset=37), [In()], [Str('#;', lineno=476, col_offset=48)], lineno=476, col_offset=37)], lineno=476, col_offset=15), [Continue( lineno=477, col_offset=16)], [], lineno=476, col_offset=12), If(BoolOp(And(), [Compare(Call(Attribute(Subscript(Call(Attribute(Name('line', Load(), lineno=478, col_offset=15), 'split', Load(), lineno=478, col_offset=15), [Name('None', Load(), lineno=478, col_offset=26), Num(1, lineno=478, col_offset=32)], [], None, None, lineno=478, col_offset=15), Index(Num(0, lineno=478, col_offset=35)), Load(), lineno=478, col_offset=15), 'lower', Load(), lineno=478, col_offset=15), [], [], None, None, lineno=478, col_offset=15), [Eq()], [Str('rem', lineno=478, col_offset=49)], lineno=478, col_offset=15), Compare(Subscript(Name('line', Load(), lineno=478, col_offset=59), Index(Num(0, lineno=478, col_offset=64)), Load(), lineno=478, col_offset=59), [In()], [Str('rR', lineno=478, col_offset=70)], lineno=478, col_offset=59)], lineno=478, col_offset=15), [Continue( lineno=480, col_offset=16)], [], lineno=478, col_offset=12), If(BoolOp(And(), [Call(Attribute(Subscript(Name('line', Load(), lineno=482, col_offset=15), Index(Num(0, lineno=482, col_offset=20)), Load(), lineno=482, col_offset=15), 'isspace', Load(), lineno=482, col_offset=15), [], [], None, None, lineno=482, col_offset=15), Compare(Name('cursect', Load(), lineno=482, col_offset=37), [IsNot()], [Name('None', Load(), lineno=482, col_offset=52)], lineno=482, col_offset=37), Name('optname', Load(), lineno=482, col_offset=61)], lineno=482, col_offset=15), [Assign([Name('value', Store(), lineno=483, col_offset=16)], Call(Attribute(Name('line', Load(), lineno=483, col_offset=24), 'strip', Load(), lineno=483, col_offset=24), [], [], None, None, lineno=483, col_offset=24), lineno=483, col_offset=16), If(Name('value', Load(), lineno=484, col_offset=19), [Expr(Call(Attribute(Subscript(Name('cursect', Load(), lineno=485, col_offset=20), Index(Name('optname', Load(), lineno=485, col_offset=28)), Load(), lineno=485, col_offset=20), 'append', Load(), lineno=485, col_offset=20), [Name('value', Load(), lineno=485, col_offset=44)], [], None, None, lineno=485, col_offset=20), lineno=485, col_offset=20)], [], lineno=484, col_offset=16)], [Assign([Name('mo', Store(), lineno=489, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=489, col_offset=21), 'SECTCRE', Load(), lineno=489, col_offset=21), 'match', Load(), lineno=489, col_offset=21), [Name('line', Load(), lineno=489, col_offset=40)], [], None, None, lineno=489, col_offset=21), lineno=489, col_offset=16), If(Name('mo', Load(), lineno=490, col_offset=19), [Assign([Name('sectname', Store(), lineno=491, col_offset=20)], Call(Attribute(Name('mo', Load(), lineno=491, col_offset=31), 'group', Load(), lineno=491, col_offset=31), [Str('header', lineno=491, col_offset=40)], [], None, None, lineno=491, col_offset=31), lineno=491, col_offset=20), If(Compare(Name('sectname', Load(), lineno=492, col_offset=23), [In()], [Attribute(Name('self', Load(), lineno=492, col_offset=35), '_sections', Load(), lineno=492, col_offset=35)], lineno=492, col_offset=23), [Assign([Name('cursect', Store(), lineno=493, col_offset=24)], Subscript(Attribute(Name('self', Load(), lineno=493, col_offset=34), '_sections', Load(), lineno=493, col_offset=34), Index(Name('sectname', Load(), lineno=493, col_offset=49)), Load(), lineno=493, col_offset=34), lineno=493, col_offset=24)], [If(Compare(Name('sectname', Load(), lineno=494, col_offset=25), [Eq()], [Name('DEFAULTSECT', Load(), lineno=494, col_offset=37)], lineno=494, col_offset=25), [Assign([Name('cursect', Store(), lineno=495, col_offset=24)], Attribute(Name('self', Load(), lineno=495, col_offset=34), '_defaults', Load(), lineno=495, col_offset=34), lineno=495, col_offset=24)], [Assign([Name('cursect', Store(), lineno=497, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=497, col_offset=34), '_dict', Load(), lineno=497, col_offset=34), [], [], None, None, lineno=497, col_offset=34), lineno=497, col_offset=24), Assign([Subscript(Name('cursect', Load(), lineno=498, col_offset=24), Index(Str('__name__', lineno=498, col_offset=32)), Store(), lineno=498, col_offset=24)], Name('sectname', Load(), lineno=498, col_offset=46), lineno=498, col_offset=24), Assign([Subscript(Attribute(Name('self', Load(), lineno=499, col_offset=24), '_sections', Load(), lineno=499, col_offset=24), Index(Name('sectname', Load(), lineno=499, col_offset=39)), Store(), lineno=499, col_offset=24)], Name('cursect', Load(), lineno=499, col_offset=51), lineno=499, col_offset=24)], lineno=494, col_offset=25)], lineno=492, col_offset=20), Assign([Name('optname', Store(), lineno=501, col_offset=20)], Name('None', Load(), lineno=501, col_offset=30), lineno=501, col_offset=20)], [If(Compare(Name('cursect', Load(), lineno=503, col_offset=21), [Is()], [Name('None', Load(), lineno=503, col_offset=32)], lineno=503, col_offset=21), [Raise(Call(Name('MissingSectionHeaderError', Load(), lineno=504, col_offset=26), [Name('fpname', Load(), lineno=504, col_offset=52), Name('lineno', Load(), lineno=504, col_offset=60), Name('line', Load(), lineno=504, col_offset=68)], [], None, None, lineno=504, col_offset=26), None, None, lineno=504, col_offset=20)], [Assign([Name('mo', Store(), lineno=507, col_offset=20)], Call(Attribute(Attribute(Name('self', Load(), lineno=507, col_offset=25), '_optcre', Load(), lineno=507, col_offset=25), 'match', Load(), lineno=507, col_offset=25), [Name('line', Load(), lineno=507, col_offset=44)], [], None, None, lineno=507, col_offset=25), lineno=507, col_offset=20), If(Name('mo', Load(), lineno=508, col_offset=23), [Assign([Tuple([Name('optname', Store(), lineno=509, col_offset=24), Name('vi', Store(), lineno=509, col_offset=33), Name('optval', Store(), lineno=509, col_offset=37)], Store(), lineno=509, col_offset=24)], Call(Attribute(Name('mo', Load(), lineno=509, col_offset=46), 'group', Load(), lineno=509, col_offset=46), [Str('option', lineno=509, col_offset=55), Str('vi', lineno=509, col_offset=65), Str('value', lineno=509, col_offset=71)], [], None, None, lineno=509, col_offset=46), lineno=509, col_offset=24), Assign([Name('optname', Store(), lineno=510, col_offset=24)], Call(Attribute(Name('self', Load(), lineno=510, col_offset=34), 'optionxform', Load(), lineno=510, col_offset=34), [Call(Attribute(Name('optname', Load(), lineno=510, col_offset=51), 'rstrip', Load(), lineno=510, col_offset=51), [], [], None, None, lineno=510, col_offset=51)], [], None, None, lineno=510, col_offset=34), lineno=510, col_offset=24), If(Compare(Name('optval', Load(), lineno=513, col_offset=27), [IsNot()], [Name('None', Load(), lineno=513, col_offset=41)], lineno=513, col_offset=27), [If(BoolOp(And(), [Compare(Name('vi', Load(), lineno=514, col_offset=31), [In()], [Tuple([Str('=', lineno=514, col_offset=38), Str(':', lineno=514, col_offset=43)], Load(), lineno=514, col_offset=38)], lineno=514, col_offset=31), Compare(Str(';', lineno=514, col_offset=52), [In()], [Name('optval', Load(), lineno=514, col_offset=59)], lineno=514, col_offset=52)], lineno=514, col_offset=31), [Assign([Name('pos', Store(), lineno=517, col_offset=32)], Call(Attribute(Name('optval', Load(), lineno=517, col_offset=38), 'find', Load(), lineno=517, col_offset=38), [Str(';', lineno=517, col_offset=50)], [], None, None, lineno=517, col_offset=38), lineno=517, col_offset=32), If(BoolOp(And(), [Compare(Name('pos', Load(), lineno=518, col_offset=35), [NotEq()], [Num(-1, lineno=518, col_offset=43)], lineno=518, col_offset=35), Call(Attribute(Subscript(Name('optval', Load(), lineno=518, col_offset=49), Index(BinOp(Name('pos', Load(), lineno=518, col_offset=56), Sub(), Num(1, lineno=518, col_offset=60), lineno=518, col_offset=56)), Load(), lineno=518, col_offset=49), 'isspace', Load(), lineno=518, col_offset=49), [], [], None, None, lineno=518, col_offset=49)], lineno=518, col_offset=35), [Assign([Name('optval', Store(), lineno=519, col_offset=36)], Subscript(Name('optval', Load(), lineno=519, col_offset=45), Slice(None, Name('pos', Load(), lineno=519, col_offset=53), None), Load(), lineno=519, col_offset=45), lineno=519, col_offset=36)], [], lineno=518, col_offset=32)], [], lineno=514, col_offset=28), Assign([Name('optval', Store(), lineno=520, col_offset=28)], Call(Attribute(Name('optval', Load(), lineno=520, col_offset=37), 'strip', Load(), lineno=520, col_offset=37), [], [], None, None, lineno=520, col_offset=37), lineno=520, col_offset=28), If(Compare(Name('optval', Load(), lineno=522, col_offset=31), [Eq()], [Str('""', lineno=522, col_offset=41)], lineno=522, col_offset=31), [Assign([Name('optval', Store(), lineno=523, col_offset=32)], Str('', lineno=523, col_offset=41), lineno=523, col_offset=32)], [], lineno=522, col_offset=28), Assign([Subscript(Name('cursect', Load(), lineno=524, col_offset=28), Index(Name('optname', Load(), lineno=524, col_offset=36)), Store(), lineno=524, col_offset=28)], List([Name('optval', Load(), lineno=524, col_offset=48)], Load(), lineno=524, col_offset=47), lineno=524, col_offset=28)], [Assign([Subscript(Name('cursect', Load(), lineno=527, col_offset=28), Index(Name('optname', Load(), lineno=527, col_offset=36)), Store(), lineno=527, col_offset=28)], Name('optval', Load(), lineno=527, col_offset=47), lineno=527, col_offset=28)], lineno=513, col_offset=24)], [If(UnaryOp(Not(), Name('e', Load(), lineno=533, col_offset=31), lineno=533, col_offset=27), [Assign([Name('e', Store(), lineno=534, col_offset=28)], Call(Name('ParsingError', Load(), lineno=534, col_offset=32), [Name('fpname', Load(), lineno=534, col_offset=45)], [], None, None, lineno=534, col_offset=32), lineno=534, col_offset=28)], [], lineno=533, col_offset=24), Expr(Call(Attribute(Name('e', Load(), lineno=535, col_offset=24), 'append', Load(), lineno=535, col_offset=24), [Name('lineno', Load(), lineno=535, col_offset=33), Call(Name('repr', Load(), lineno=535, col_offset=41), [Name('line', Load(), lineno=535, col_offset=46)], [], None, None, lineno=535, col_offset=41)], [], None, None, lineno=535, col_offset=24), lineno=535, col_offset=24)], lineno=508, col_offset=20)], lineno=503, col_offset=21)], lineno=490, col_offset=16)], lineno=482, col_offset=12)], [], lineno=470, col_offset=8), If(Name('e', Load(), lineno=537, col_offset=11), [Raise(Name('e', Load(), lineno=538, col_offset=18), None, None, lineno=538, col_offset=12)], [], lineno=537, col_offset=8), Assign([Name('all_sections', Store(), lineno=541, col_offset=8)], List([Attribute(Name('self', Load(), lineno=541, col_offset=24), '_defaults', Load(), lineno=541, col_offset=24)], Load(), lineno=541, col_offset=23), lineno=541, col_offset=8), Expr(Call(Attribute(Name('all_sections', Load(), lineno=542, col_offset=8), 'extend', Load(), lineno=542, col_offset=8), [Call(Attribute(Attribute(Name('self', Load(), lineno=542, col_offset=28), '_sections', Load(), lineno=542, col_offset=28), 'values', Load(), lineno=542, col_offset=28), [], [], None, None, lineno=542, col_offset=28)], [], None, None, lineno=542, col_offset=8), lineno=542, col_offset=8), For(Name('options', Store(), lineno=543, col_offset=12), Name('all_sections', Load(), lineno=543, col_offset=23), [For(Tuple([Name('name', Store(), lineno=544, col_offset=16), Name('val', Store(), lineno=544, col_offset=22)], Store(), lineno=544, col_offset=16), Call(Attribute(Name('options', Load(), lineno=544, col_offset=29), 'items', Load(), lineno=544, col_offset=29), [], [], None, None, lineno=544, col_offset=29), [If(Call(Name('isinstance', Load(), lineno=545, col_offset=19), [Name('val', Load(), lineno=545, col_offset=30), Name('list', Load(), lineno=545, col_offset=35)], [], None, None, lineno=545, col_offset=19), [Assign([Subscript(Name('options', Load(), lineno=546, col_offset=20), Index(Name('name', Load(), lineno=546, col_offset=28)), Store(), lineno=546, col_offset=20)], Call(Attribute(Str('\n', lineno=546, col_offset=36), 'join', Load(), lineno=546, col_offset=36), [Name('val', Load(), lineno=546, col_offset=46)], [], None, None, lineno=546, col_offset=36), lineno=546, col_offset=20)], [], lineno=545, col_offset=16)], [], lineno=544, col_offset=12)], [], lineno=543, col_offset=8)], [], lineno=456, col_offset=4)], [], lineno=223, col_offset=0), ClassDef('ConfigParser', [Name('RawConfigParser', Load(), lineno=548, col_offset=19)], [FunctionDef('get', arguments([Name('self', Param(), lineno=550, col_offset=12), Name('section', Param(), lineno=550, col_offset=18), Name('option', Param(), lineno=550, col_offset=27), Name('raw', Param(), lineno=550, col_offset=35), Name('vars', Param(), lineno=550, col_offset=46)], None, None, [Name('False', Load(), lineno=550, col_offset=39), Name('None', Load(), lineno=550, col_offset=51)]), [Expr(Str("Get an option value for a given section.\n\n        If `vars' is provided, it must be a dictionary. The option is looked up\n        in `vars' (if provided), `section', and in `defaults' in that order.\n\n        All % interpolations are expanded in the return values, unless the\n        optional argument `raw' is true. Values for interpolation keys are\n        looked up in the same manner as the option.\n\n        The section DEFAULT is special.\n        ", lineno=561, col_offset=-1), lineno=561, col_offset=-1), Assign([Name('d', Store(), lineno=562, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=562, col_offset=12), '_defaults', Load(), lineno=562, col_offset=12), 'copy', Load(), lineno=562, col_offset=12), [], [], None, None, lineno=562, col_offset=12), lineno=562, col_offset=8), TryExcept([Expr(Call(Attribute(Name('d', Load(), lineno=564, col_offset=12), 'update', Load(), lineno=564, col_offset=12), [Subscript(Attribute(Name('self', Load(), lineno=564, col_offset=21), '_sections', Load(), lineno=564, col_offset=21), Index(Name('section', Load(), lineno=564, col_offset=36)), Load(), lineno=564, col_offset=21)], [], None, None, lineno=564, col_offset=12), lineno=564, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=565, col_offset=15), None, [If(Compare(Name('section', Load(), lineno=566, col_offset=15), [NotEq()], [Name('DEFAULTSECT', Load(), lineno=566, col_offset=26)], lineno=566, col_offset=15), [Raise(Call(Name('NoSectionError', Load(), lineno=567, col_offset=22), [Name('section', Load(), lineno=567, col_offset=37)], [], None, None, lineno=567, col_offset=22), None, None, lineno=567, col_offset=16)], [], lineno=566, col_offset=12)], lineno=565, col_offset=8)], [], lineno=563, col_offset=8), If(Name('vars', Load(), lineno=569, col_offset=11), [For(Tuple([Name('key', Store(), lineno=570, col_offset=16), Name('value', Store(), lineno=570, col_offset=21)], Store(), lineno=570, col_offset=16), Call(Attribute(Name('vars', Load(), lineno=570, col_offset=30), 'items', Load(), lineno=570, col_offset=30), [], [], None, None, lineno=570, col_offset=30), [Assign([Subscript(Name('d', Load(), lineno=571, col_offset=16), Index(Call(Attribute(Name('self', Load(), lineno=571, col_offset=18), 'optionxform', Load(), lineno=571, col_offset=18), [Name('key', Load(), lineno=571, col_offset=35)], [], None, None, lineno=571, col_offset=18)), Store(), lineno=571, col_offset=16)], Name('value', Load(), lineno=571, col_offset=43), lineno=571, col_offset=16)], [], lineno=570, col_offset=12)], [], lineno=569, col_offset=8), Assign([Name('option', Store(), lineno=572, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=572, col_offset=17), 'optionxform', Load(), lineno=572, col_offset=17), [Name('option', Load(), lineno=572, col_offset=34)], [], None, None, lineno=572, col_offset=17), lineno=572, col_offset=8), TryExcept([Assign([Name('value', Store(), lineno=574, col_offset=12)], Subscript(Name('d', Load(), lineno=574, col_offset=20), Index(Name('option', Load(), lineno=574, col_offset=22)), Load(), lineno=574, col_offset=20), lineno=574, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=575, col_offset=15), None, [Raise(Call(Name('NoOptionError', Load(), lineno=576, col_offset=18), [Name('option', Load(), lineno=576, col_offset=32), Name('section', Load(), lineno=576, col_offset=40)], [], None, None, lineno=576, col_offset=18), None, None, lineno=576, col_offset=12)], lineno=575, col_offset=8)], [], lineno=573, col_offset=8), If(BoolOp(Or(), [Name('raw', Load(), lineno=578, col_offset=11), Compare(Name('value', Load(), lineno=578, col_offset=18), [Is()], [Name('None', Load(), lineno=578, col_offset=27)], lineno=578, col_offset=18)], lineno=578, col_offset=11), [Return(Name('value', Load(), lineno=579, col_offset=19), lineno=579, col_offset=12)], [Return(Call(Attribute(Name('self', Load(), lineno=581, col_offset=19), '_interpolate', Load(), lineno=581, col_offset=19), [Name('section', Load(), lineno=581, col_offset=37), Name('option', Load(), lineno=581, col_offset=46), Name('value', Load(), lineno=581, col_offset=54), Name('d', Load(), lineno=581, col_offset=61)], [], None, None, lineno=581, col_offset=19), lineno=581, col_offset=12)], lineno=578, col_offset=8)], [], lineno=550, col_offset=4), FunctionDef('items', arguments([Name('self', Param(), lineno=583, col_offset=14), Name('section', Param(), lineno=583, col_offset=20), Name('raw', Param(), lineno=583, col_offset=29), Name('vars', Param(), lineno=583, col_offset=40)], None, None, [Name('False', Load(), lineno=583, col_offset=33), Name('None', Load(), lineno=583, col_offset=45)]), [Expr(Str("Return a list of tuples with (name, value) for each option\n        in the section.\n\n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n\n        The section DEFAULT is special.\n        ", lineno=594, col_offset=-1), lineno=594, col_offset=-1), Assign([Name('d', Store(), lineno=595, col_offset=8)], Call(Attribute(Attribute(Name('self', Load(), lineno=595, col_offset=12), '_defaults', Load(), lineno=595, col_offset=12), 'copy', Load(), lineno=595, col_offset=12), [], [], None, None, lineno=595, col_offset=12), lineno=595, col_offset=8), TryExcept([Expr(Call(Attribute(Name('d', Load(), lineno=597, col_offset=12), 'update', Load(), lineno=597, col_offset=12), [Subscript(Attribute(Name('self', Load(), lineno=597, col_offset=21), '_sections', Load(), lineno=597, col_offset=21), Index(Name('section', Load(), lineno=597, col_offset=36)), Load(), lineno=597, col_offset=21)], [], None, None, lineno=597, col_offset=12), lineno=597, col_offset=12)], [ExceptHandler(Name('KeyError', Load(), lineno=598, col_offset=15), None, [If(Compare(Name('section', Load(), lineno=599, col_offset=15), [NotEq()], [Name('DEFAULTSECT', Load(), lineno=599, col_offset=26)], lineno=599, col_offset=15), [Raise(Call(Name('NoSectionError', Load(), lineno=600, col_offset=22), [Name('section', Load(), lineno=600, col_offset=37)], [], None, None, lineno=600, col_offset=22), None, None, lineno=600, col_offset=16)], [], lineno=599, col_offset=12)], lineno=598, col_offset=8)], [], lineno=596, col_offset=8), If(Name('vars', Load(), lineno=602, col_offset=11), [For(Tuple([Name('key', Store(), lineno=603, col_offset=16), Name('value', Store(), lineno=603, col_offset=21)], Store(), lineno=603, col_offset=16), Call(Attribute(Name('vars', Load(), lineno=603, col_offset=30), 'items', Load(), lineno=603, col_offset=30), [], [], None, None, lineno=603, col_offset=30), [Assign([Subscript(Name('d', Load(), lineno=604, col_offset=16), Index(Call(Attribute(Name('self', Load(), lineno=604, col_offset=18), 'optionxform', Load(), lineno=604, col_offset=18), [Name('key', Load(), lineno=604, col_offset=35)], [], None, None, lineno=604, col_offset=18)), Store(), lineno=604, col_offset=16)], Name('value', Load(), lineno=604, col_offset=43), lineno=604, col_offset=16)], [], lineno=603, col_offset=12)], [], lineno=602, col_offset=8), Assign([Name('options', Store(), lineno=605, col_offset=8)], Call(Attribute(Name('d', Load(), lineno=605, col_offset=18), 'keys', Load(), lineno=605, col_offset=18), [], [], None, None, lineno=605, col_offset=18), lineno=605, col_offset=8), If(Compare(Str('__name__', lineno=606, col_offset=11), [In()], [Name('options', Load(), lineno=606, col_offset=25)], lineno=606, col_offset=11), [Expr(Call(Attribute(Name('options', Load(), lineno=607, col_offset=12), 'remove', Load(), lineno=607, col_offset=12), [Str('__name__', lineno=607, col_offset=27)], [], None, None, lineno=607, col_offset=12), lineno=607, col_offset=12)], [], lineno=606, col_offset=8), If(Name('raw', Load(), lineno=608, col_offset=11), [Return(ListComp(Tuple([Name('option', Load(), lineno=609, col_offset=21), Subscript(Name('d', Load(), lineno=609, col_offset=29), Index(Name('option', Load(), lineno=609, col_offset=31)), Load(), lineno=609, col_offset=29)], Load(), lineno=609, col_offset=21), [comprehension(Name('option', Store(), lineno=610, col_offset=24), Name('options', Load(), lineno=610, col_offset=34), [])], lineno=609, col_offset=20), lineno=609, col_offset=12)], [Return(ListComp(Tuple([Name('option', Load(), lineno=612, col_offset=21), Call(Attribute(Name('self', Load(), lineno=612, col_offset=29), '_interpolate', Load(), lineno=612, col_offset=29), [Name('section', Load(), lineno=612, col_offset=47), Name('option', Load(), lineno=612, col_offset=56), Subscript(Name('d', Load(), lineno=612, col_offset=64), Index(Name('option', Load(), lineno=612, col_offset=66)), Load(), lineno=612, col_offset=64), Name('d', Load(), lineno=612, col_offset=75)], [], None, None, lineno=612, col_offset=29)], Load(), lineno=612, col_offset=21), [comprehension(Name('option', Store(), lineno=613, col_offset=24), Name('options', Load(), lineno=613, col_offset=34), [])], lineno=612, col_offset=20), lineno=612, col_offset=12)], lineno=608, col_offset=8)], [], lineno=583, col_offset=4), FunctionDef('_interpolate', arguments([Name('self', Param(), lineno=615, col_offset=21), Name('section', Param(), lineno=615, col_offset=27), Name('option', Param(), lineno=615, col_offset=36), Name('rawval', Param(), lineno=615, col_offset=44), Name('vars', Param(), lineno=615, col_offset=52)], None, None, []), [Assign([Name('value', Store(), lineno=617, col_offset=8)], Name('rawval', Load(), lineno=617, col_offset=16), lineno=617, col_offset=8), Assign([Name('depth', Store(), lineno=618, col_offset=8)], Name('MAX_INTERPOLATION_DEPTH', Load(), lineno=618, col_offset=16), lineno=618, col_offset=8), While(Name('depth', Load(), lineno=619, col_offset=14), [AugAssign(Name('depth', Store(), lineno=620, col_offset=12), Sub(), Num(1, lineno=620, col_offset=21), lineno=620, col_offset=12), If(BoolOp(And(), [Name('value', Load(), lineno=621, col_offset=15), Compare(Str('%(', lineno=621, col_offset=25), [In()], [Name('value', Load(), lineno=621, col_offset=33)], lineno=621, col_offset=25)], lineno=621, col_offset=15), [Assign([Name('value', Store(), lineno=622, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=622, col_offset=24), '_KEYCRE', Load(), lineno=622, col_offset=24), 'sub', Load(), lineno=622, col_offset=24), [Attribute(Name('self', Load(), lineno=622, col_offset=41), '_interpolation_replace', Load(), lineno=622, col_offset=41), Name('value', Load(), lineno=622, col_offset=70)], [], None, None, lineno=622, col_offset=24), lineno=622, col_offset=16), TryExcept([Assign([Name('value', Store(), lineno=624, col_offset=20)], BinOp(Name('value', Load(), lineno=624, col_offset=28), Mod(), Name('vars', Load(), lineno=624, col_offset=36), lineno=624, col_offset=28), lineno=624, col_offset=20)], [ExceptHandler(Name('KeyError', Load(), lineno=625, col_offset=23), Name('e', Store(), lineno=625, col_offset=33), [Raise(Call(Name('InterpolationMissingOptionError', Load(), lineno=626, col_offset=26), [Name('option', Load(), lineno=627, col_offset=24), Name('section', Load(), lineno=627, col_offset=32), Name('rawval', Load(), lineno=627, col_offset=41), Subscript(Attribute(Name('e', Load(), lineno=627, col_offset=49), 'args', Load(), lineno=627, col_offset=49), Index(Num(0, lineno=627, col_offset=56)), Load(), lineno=627, col_offset=49)], [], None, None, lineno=626, col_offset=26), None, None, lineno=626, col_offset=20)], lineno=625, col_offset=16)], [], lineno=623, col_offset=16)], [Break( lineno=629, col_offset=16)], lineno=621, col_offset=12)], [], lineno=619, col_offset=8), If(BoolOp(And(), [Name('value', Load(), lineno=630, col_offset=11), Compare(Str('%(', lineno=630, col_offset=21), [In()], [Name('value', Load(), lineno=630, col_offset=29)], lineno=630, col_offset=21)], lineno=630, col_offset=11), [Raise(Call(Name('InterpolationDepthError', Load(), lineno=631, col_offset=18), [Name('option', Load(), lineno=631, col_offset=42), Name('section', Load(), lineno=631, col_offset=50), Name('rawval', Load(), lineno=631, col_offset=59)], [], None, None, lineno=631, col_offset=18), None, None, lineno=631, col_offset=12)], [], lineno=630, col_offset=8), Return(Name('value', Load(), lineno=632, col_offset=15), lineno=632, col_offset=8)], [], lineno=615, col_offset=4), Assign([Name('_KEYCRE', Store(), lineno=634, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=634, col_offset=14), 'compile', Load(), lineno=634, col_offset=14), [Str('%\\(([^)]*)\\)s|.', lineno=634, col_offset=25)], [], None, None, lineno=634, col_offset=14), lineno=634, col_offset=4), FunctionDef('_interpolation_replace', arguments([Name('self', Param(), lineno=636, col_offset=31), Name('match', Param(), lineno=636, col_offset=37)], None, None, []), [Assign([Name('s', Store(), lineno=637, col_offset=8)], Call(Attribute(Name('match', Load(), lineno=637, col_offset=12), 'group', Load(), lineno=637, col_offset=12), [Num(1, lineno=637, col_offset=24)], [], None, None, lineno=637, col_offset=12), lineno=637, col_offset=8), If(Compare(Name('s', Load(), lineno=638, col_offset=11), [Is()], [Name('None', Load(), lineno=638, col_offset=16)], lineno=638, col_offset=11), [Return(Call(Attribute(Name('match', Load(), lineno=639, col_offset=19), 'group', Load(), lineno=639, col_offset=19), [], [], None, None, lineno=639, col_offset=19), lineno=639, col_offset=12)], [Return(BinOp(Str('%%(%s)s', lineno=641, col_offset=19), Mod(), Call(Attribute(Name('self', Load(), lineno=641, col_offset=31), 'optionxform', Load(), lineno=641, col_offset=31), [Name('s', Load(), lineno=641, col_offset=48)], [], None, None, lineno=641, col_offset=31), lineno=641, col_offset=19), lineno=641, col_offset=12)], lineno=638, col_offset=8)], [], lineno=636, col_offset=4)], [], lineno=548, col_offset=0), ClassDef('SafeConfigParser', [Name('ConfigParser', Load(), lineno=644, col_offset=23)], [FunctionDef('_interpolate', arguments([Name('self', Param(), lineno=646, col_offset=21), Name('section', Param(), lineno=646, col_offset=27), Name('option', Param(), lineno=646, col_offset=36), Name('rawval', Param(), lineno=646, col_offset=44), Name('vars', Param(), lineno=646, col_offset=52)], None, None, []), [Assign([Name('L', Store(), lineno=648, col_offset=8)], List([], Load(), lineno=648, col_offset=12), lineno=648, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=649, col_offset=8), '_interpolate_some', Load(), lineno=649, col_offset=8), [Name('option', Load(), lineno=649, col_offset=31), Name('L', Load(), lineno=649, col_offset=39), Name('rawval', Load(), lineno=649, col_offset=42), Name('section', Load(), lineno=649, col_offset=50), Name('vars', Load(), lineno=649, col_offset=59), Num(1, lineno=649, col_offset=65)], [], None, None, lineno=649, col_offset=8), lineno=649, col_offset=8), Return(Call(Attribute(Str('', lineno=650, col_offset=15), 'join', Load(), lineno=650, col_offset=15), [Name('L', Load(), lineno=650, col_offset=23)], [], None, None, lineno=650, col_offset=15), lineno=650, col_offset=8)], [], lineno=646, col_offset=4), Assign([Name('_interpvar_re', Store(), lineno=652, col_offset=4)], Call(Attribute(Name('re', Load(), lineno=652, col_offset=20), 'compile', Load(), lineno=652, col_offset=20), [Str('%\\(([^)]+)\\)s', lineno=652, col_offset=31)], [], None, None, lineno=652, col_offset=20), lineno=652, col_offset=4), FunctionDef('_interpolate_some', arguments([Name('self', Param(), lineno=654, col_offset=26), Name('option', Param(), lineno=654, col_offset=32), Name('accum', Param(), lineno=654, col_offset=40), Name('rest', Param(), lineno=654, col_offset=47), Name('section', Param(), lineno=654, col_offset=53), Name('map', Param(), lineno=654, col_offset=62), Name('depth', Param(), lineno=654, col_offset=67)], None, None, []), [If(Compare(Name('depth', Load(), lineno=655, col_offset=11), [Gt()], [Name('MAX_INTERPOLATION_DEPTH', Load(), lineno=655, col_offset=19)], lineno=655, col_offset=11), [Raise(Call(Name('InterpolationDepthError', Load(), lineno=656, col_offset=18), [Name('option', Load(), lineno=656, col_offset=42), Name('section', Load(), lineno=656, col_offset=50), Name('rest', Load(), lineno=656, col_offset=59)], [], None, None, lineno=656, col_offset=18), None, None, lineno=656, col_offset=12)], [], lineno=655, col_offset=8), While(Name('rest', Load(), lineno=657, col_offset=14), [Assign([Name('p', Store(), lineno=658, col_offset=12)], Call(Attribute(Name('rest', Load(), lineno=658, col_offset=16), 'find', Load(), lineno=658, col_offset=16), [Str('%', lineno=658, col_offset=26)], [], None, None, lineno=658, col_offset=16), lineno=658, col_offset=12), If(Compare(Name('p', Load(), lineno=659, col_offset=15), [Lt()], [Num(0, lineno=659, col_offset=19)], lineno=659, col_offset=15), [Expr(Call(Attribute(Name('accum', Load(), lineno=660, col_offset=16), 'append', Load(), lineno=660, col_offset=16), [Name('rest', Load(), lineno=660, col_offset=29)], [], None, None, lineno=660, col_offset=16), lineno=660, col_offset=16), Return(None, lineno=661, col_offset=16)], [], lineno=659, col_offset=12), If(Compare(Name('p', Load(), lineno=662, col_offset=15), [Gt()], [Num(0, lineno=662, col_offset=19)], lineno=662, col_offset=15), [Expr(Call(Attribute(Name('accum', Load(), lineno=663, col_offset=16), 'append', Load(), lineno=663, col_offset=16), [Subscript(Name('rest', Load(), lineno=663, col_offset=29), Slice(None, Name('p', Load(), lineno=663, col_offset=35), None), Load(), lineno=663, col_offset=29)], [], None, None, lineno=663, col_offset=16), lineno=663, col_offset=16), Assign([Name('rest', Store(), lineno=664, col_offset=16)], Subscript(Name('rest', Load(), lineno=664, col_offset=23), Slice(Name('p', Load(), lineno=664, col_offset=28), None, None), Load(), lineno=664, col_offset=23), lineno=664, col_offset=16)], [], lineno=662, col_offset=12), Assign([Name('c', Store(), lineno=666, col_offset=12)], Subscript(Name('rest', Load(), lineno=666, col_offset=16), Slice(Num(1, lineno=666, col_offset=21), Num(2, lineno=666, col_offset=23), None), Load(), lineno=666, col_offset=16), lineno=666, col_offset=12), If(Compare(Name('c', Load(), lineno=667, col_offset=15), [Eq()], [Str('%', lineno=667, col_offset=20)], lineno=667, col_offset=15), [Expr(Call(Attribute(Name('accum', Load(), lineno=668, col_offset=16), 'append', Load(), lineno=668, col_offset=16), [Str('%', lineno=668, col_offset=29)], [], None, None, lineno=668, col_offset=16), lineno=668, col_offset=16), Assign([Name('rest', Store(), lineno=669, col_offset=16)], Subscript(Name('rest', Load(), lineno=669, col_offset=23), Slice(Num(2, lineno=669, col_offset=28), None, None), Load(), lineno=669, col_offset=23), lineno=669, col_offset=16)], [If(Compare(Name('c', Load(), lineno=670, col_offset=17), [Eq()], [Str('(', lineno=670, col_offset=22)], lineno=670, col_offset=17), [Assign([Name('m', Store(), lineno=671, col_offset=16)], Call(Attribute(Attribute(Name('self', Load(), lineno=671, col_offset=20), '_interpvar_re', Load(), lineno=671, col_offset=20), 'match', Load(), lineno=671, col_offset=20), [Name('rest', Load(), lineno=671, col_offset=45)], [], None, None, lineno=671, col_offset=20), lineno=671, col_offset=16), If(Compare(Name('m', Load(), lineno=672, col_offset=19), [Is()], [Name('None', Load(), lineno=672, col_offset=24)], lineno=672, col_offset=19), [Raise(Call(Name('InterpolationSyntaxError', Load(), lineno=673, col_offset=26), [Name('option', Load(), lineno=673, col_offset=51), Name('section', Load(), lineno=673, col_offset=59), BinOp(Str('bad interpolation variable reference %r', lineno=674, col_offset=24), Mod(), Name('rest', Load(), lineno=674, col_offset=68), lineno=674, col_offset=24)], [], None, None, lineno=673, col_offset=26), None, None, lineno=673, col_offset=20)], [], lineno=672, col_offset=16), Assign([Name('var', Store(), lineno=675, col_offset=16)], Call(Attribute(Name('self', Load(), lineno=675, col_offset=22), 'optionxform', Load(), lineno=675, col_offset=22), [Call(Attribute(Name('m', Load(), lineno=675, col_offset=39), 'group', Load(), lineno=675, col_offset=39), [Num(1, lineno=675, col_offset=47)], [], None, None, lineno=675, col_offset=39)], [], None, None, lineno=675, col_offset=22), lineno=675, col_offset=16), Assign([Name('rest', Store(), lineno=676, col_offset=16)], Subscript(Name('rest', Load(), lineno=676, col_offset=23), Slice(Call(Attribute(Name('m', Load(), lineno=676, col_offset=28), 'end', Load(), lineno=676, col_offset=28), [], [], None, None, lineno=676, col_offset=28), None, None), Load(), lineno=676, col_offset=23), lineno=676, col_offset=16), TryExcept([Assign([Name('v', Store(), lineno=678, col_offset=20)], Subscript(Name('map', Load(), lineno=678, col_offset=24), Index(Name('var', Load(), lineno=678, col_offset=28)), Load(), lineno=678, col_offset=24), lineno=678, col_offset=20)], [ExceptHandler(Name('KeyError', Load(), lineno=679, col_offset=23), None, [Raise(Call(Name('InterpolationMissingOptionError', Load(), lineno=680, col_offset=26), [Name('option', Load(), lineno=681, col_offset=24), Name('section', Load(), lineno=681, col_offset=32), Name('rest', Load(), lineno=681, col_offset=41), Name('var', Load(), lineno=681, col_offset=47)], [], None, None, lineno=680, col_offset=26), None, None, lineno=680, col_offset=20)], lineno=679, col_offset=16)], [], lineno=677, col_offset=16), If(Compare(Str('%', lineno=682, col_offset=19), [In()], [Name('v', Load(), lineno=682, col_offset=26)], lineno=682, col_offset=19), [Expr(Call(Attribute(Name('self', Load(), lineno=683, col_offset=20), '_interpolate_some', Load(), lineno=683, col_offset=20), [Name('option', Load(), lineno=683, col_offset=43), Name('accum', Load(), lineno=683, col_offset=51), Name('v', Load(), lineno=683, col_offset=58), Name('section', Load(), lineno=684, col_offset=43), Name('map', Load(), lineno=684, col_offset=52), BinOp(Name('depth', Load(), lineno=684, col_offset=57), Add(), Num(1, lineno=684, col_offset=65), lineno=684, col_offset=57)], [], None, None, lineno=683, col_offset=20), lineno=683, col_offset=20)], [Expr(Call(Attribute(Name('accum', Load(), lineno=686, col_offset=20), 'append', Load(), lineno=686, col_offset=20), [Name('v', Load(), lineno=686, col_offset=33)], [], None, None, lineno=686, col_offset=20), lineno=686, col_offset=20)], lineno=682, col_offset=16)], [Raise(Call(Name('InterpolationSyntaxError', Load(), lineno=688, col_offset=22), [Name('option', Load(), lineno=689, col_offset=20), Name('section', Load(), lineno=689, col_offset=28), BinOp(Str("'%%' must be followed by '%%' or '(', found: %r", lineno=690, col_offset=20), Mod(), Tuple([Name('rest', Load(), lineno=690, col_offset=73)], Load(), lineno=690, col_offset=73), lineno=690, col_offset=20)], [], None, None, lineno=688, col_offset=22), None, None, lineno=688, col_offset=16)], lineno=670, col_offset=17)], lineno=667, col_offset=12)], [], lineno=657, col_offset=8)], [], lineno=654, col_offset=4), FunctionDef('set', arguments([Name('self', Param(), lineno=692, col_offset=12), Name('section', Param(), lineno=692, col_offset=18), Name('option', Param(), lineno=692, col_offset=27), Name('value', Param(), lineno=692, col_offset=35)], None, None, [Name('None', Load(), lineno=692, col_offset=41)]), [Expr(Str('Set an option.  Extend ConfigParser.set: check for string values.', lineno=693, col_offset=8), lineno=693, col_offset=8), If(BoolOp(Or(), [Compare(Attribute(Name('self', Load(), lineno=699, col_offset=11), '_optcre', Load(), lineno=699, col_offset=11), [Is()], [Attribute(Name('self', Load(), lineno=699, col_offset=27), 'OPTCRE', Load(), lineno=699, col_offset=27)], lineno=699, col_offset=11), Name('value', Load(), lineno=699, col_offset=42)], lineno=699, col_offset=11), [If(UnaryOp(Not(), Call(Name('isinstance', Load(), lineno=700, col_offset=19), [Name('value', Load(), lineno=700, col_offset=30), Name('basestring', Load(), lineno=700, col_offset=37)], [], None, None, lineno=700, col_offset=19), lineno=700, col_offset=15), [Raise(Call(Name('TypeError', Load(), lineno=701, col_offset=22), [Str('option values must be strings', lineno=701, col_offset=32)], [], None, None, lineno=701, col_offset=22), None, None, lineno=701, col_offset=16)], [], lineno=700, col_offset=12)], [], lineno=699, col_offset=8), If(Compare(Name('value', Load(), lineno=702, col_offset=11), [IsNot()], [Name('None', Load(), lineno=702, col_offset=24)], lineno=702, col_offset=11), [Assign([Name('tmp_value', Store(), lineno=705, col_offset=12)], Call(Attribute(Name('value', Load(), lineno=705, col_offset=24), 'replace', Load(), lineno=705, col_offset=24), [Str('%%', lineno=705, col_offset=38), Str('', lineno=705, col_offset=44)], [], None, None, lineno=705, col_offset=24), lineno=705, col_offset=12), Assign([Name('tmp_value', Store(), lineno=706, col_offset=12)], Call(Attribute(Attribute(Name('self', Load(), lineno=706, col_offset=24), '_interpvar_re', Load(), lineno=706, col_offset=24), 'sub', Load(), lineno=706, col_offset=24), [Str('', lineno=706, col_offset=47), Name('tmp_value', Load(), lineno=706, col_offset=51)], [], None, None, lineno=706, col_offset=24), lineno=706, col_offset=12), If(Compare(Str('%', lineno=708, col_offset=15), [In()], [Name('tmp_value', Load(), lineno=708, col_offset=22)], lineno=708, col_offset=15), [Raise(Call(Name('ValueError', Load(), lineno=709, col_offset=22), [BinOp(Str('invalid interpolation syntax in %r at position %d', lineno=709, col_offset=33), Mod(), Tuple([Name('value', Load(), lineno=710, col_offset=49), Call(Attribute(Name('tmp_value', Load(), lineno=710, col_offset=56), 'find', Load(), lineno=710, col_offset=56), [Str('%', lineno=710, col_offset=71)], [], None, None, lineno=710, col_offset=56)], Load(), lineno=710, col_offset=49), lineno=709, col_offset=33)], [], None, None, lineno=709, col_offset=22), None, None, lineno=709, col_offset=16)], [], lineno=708, col_offset=12)], [], lineno=702, col_offset=8), Expr(Call(Attribute(Name('ConfigParser', Load(), lineno=711, col_offset=8), 'set', Load(), lineno=711, col_offset=8), [Name('self', Load(), lineno=711, col_offset=25), Name('section', Load(), lineno=711, col_offset=31), Name('option', Load(), lineno=711, col_offset=40), Name('value', Load(), lineno=711, col_offset=48)], [], None, None, lineno=711, col_offset=8), lineno=711, col_offset=8)], [], lineno=692, col_offset=4)], [], lineno=644, col_offset=0)])
