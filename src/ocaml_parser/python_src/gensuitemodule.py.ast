Module([Expr(Str('\ngensuitemodule - Generate an AE suite module from an aete/aeut resource\n\nBased on aete.py.\n\nReading and understanding this code is left as an exercise to the reader.\n', lineno=7, col_offset=-1), lineno=7, col_offset=-1), ImportFrom('warnings', [alias('warnpy3k', None)], 0, lineno=9, col_offset=0), Expr(Call(Name('warnpy3k', Load(), lineno=10, col_offset=0), [Str('In 3.x, the gensuitemodule module is removed.', lineno=10, col_offset=9)], [keyword('stacklevel', Num(2, lineno=10, col_offset=69))], None, None, lineno=10, col_offset=0), lineno=10, col_offset=0), Import([alias('MacOS', None)], lineno=12, col_offset=0), Import([alias('EasyDialogs', None)], lineno=13, col_offset=0), Import([alias('os', None)], lineno=14, col_offset=0), Import([alias('string', None)], lineno=15, col_offset=0), Import([alias('sys', None)], lineno=16, col_offset=0), Import([alias('types', None)], lineno=17, col_offset=0), Import([alias('StringIO', None)], lineno=18, col_offset=0), Import([alias('keyword', None)], lineno=19, col_offset=0), Import([alias('macresource', None)], lineno=20, col_offset=0), Import([alias('aetools', None)], lineno=21, col_offset=0), Import([alias('distutils.sysconfig', None)], lineno=22, col_offset=0), Import([alias('OSATerminology', None)], lineno=23, col_offset=0), ImportFrom('Carbon.Res', [alias('*', None)], 0, lineno=24, col_offset=0), Import([alias('Carbon.Folder', None)], lineno=25, col_offset=0), Import([alias('MacOS', None)], lineno=26, col_offset=0), Import([alias('getopt', None)], lineno=27, col_offset=0), Import([alias('plistlib', None)], lineno=28, col_offset=0), Assign([Name('_MAC_LIB_FOLDER', Store(), lineno=30, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=30, col_offset=16), 'path', Load(), lineno=30, col_offset=16), 'dirname', Load(), lineno=30, col_offset=16), [Attribute(Name('aetools', Load(), lineno=30, col_offset=32), '__file__', Load(), lineno=30, col_offset=32)], [], None, None, lineno=30, col_offset=16), lineno=30, col_offset=0), Assign([Name('DEFAULT_STANDARD_PACKAGEFOLDER', Store(), lineno=31, col_offset=0)], Call(Attribute(Attribute(Name('os', Load(), lineno=31, col_offset=31), 'path', Load(), lineno=31, col_offset=31), 'join', Load(), lineno=31, col_offset=31), [Name('_MAC_LIB_FOLDER', Load(), lineno=31, col_offset=44), Str('lib-scriptpackages', lineno=31, col_offset=61)], [], None, None, lineno=31, col_offset=31), lineno=31, col_offset=0), Assign([Name('DEFAULT_USER_PACKAGEFOLDER', Store(), lineno=32, col_offset=0)], Call(Attribute(Attribute(Name('distutils', Load(), lineno=32, col_offset=27), 'sysconfig', Load(), lineno=32, col_offset=27), 'get_python_lib', Load(), lineno=32, col_offset=27), [], [], None, None, lineno=32, col_offset=27), lineno=32, col_offset=0), FunctionDef('usage', arguments([], None, None, []), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=35, col_offset=4), 'stderr', Load(), lineno=35, col_offset=4), 'write', Load(), lineno=35, col_offset=4), [BinOp(Str('Usage: %s [opts] application-or-resource-file\n', lineno=35, col_offset=21), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=35, col_offset=73), 'argv', Load(), lineno=35, col_offset=73), Index(Num(0, lineno=35, col_offset=82)), Load(), lineno=35, col_offset=73), lineno=35, col_offset=21)], [], None, None, lineno=35, col_offset=4), lineno=35, col_offset=4), Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=36, col_offset=4), 'stderr', Load(), lineno=36, col_offset=4), 'write', Load(), lineno=36, col_offset=4), [Str('Options:\n--output pkgdir  Pathname of the output package (short: -o)\n--resource       Parse resource file in stead of launching application (-r)\n--base package   Use another base package in stead of default StdSuites (-b)\n--edit old=new   Edit suite names, use empty new to skip a suite (-e)\n--creator code   Set creator code for package (-c)\n--dump           Dump aete resource to stdout in stead of creating module (-d)\n--verbose        Tell us what happens (-v)\n', lineno=44, col_offset=-1)], [], None, None, lineno=36, col_offset=4), lineno=36, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=45, col_offset=4), 'exit', Load(), lineno=45, col_offset=4), [Num(1, lineno=45, col_offset=13)], [], None, None, lineno=45, col_offset=4), lineno=45, col_offset=4)], [], lineno=34, col_offset=0), FunctionDef('main', arguments([], None, None, []), [If(Compare(Call(Name('len', Load(), lineno=48, col_offset=7), [Attribute(Name('sys', Load(), lineno=48, col_offset=11), 'argv', Load(), lineno=48, col_offset=11)], [], None, None, lineno=48, col_offset=7), [Gt()], [Num(1, lineno=48, col_offset=23)], lineno=48, col_offset=7), [Assign([Name('SHORTOPTS', Store(), lineno=49, col_offset=8)], Str('rb:o:e:c:dv', lineno=49, col_offset=20), lineno=49, col_offset=8), Assign([Name('LONGOPTS', Store(), lineno=50, col_offset=8)], Tuple([Str('resource', lineno=50, col_offset=20), Str('base=', lineno=50, col_offset=32), Str('output=', lineno=50, col_offset=41), Str('edit=', lineno=50, col_offset=52), Str('creator=', lineno=50, col_offset=61), Str('dump', lineno=50, col_offset=73), Str('verbose', lineno=50, col_offset=81)], Load(), lineno=50, col_offset=20), lineno=50, col_offset=8), TryExcept([Assign([Tuple([Name('opts', Store(), lineno=52, col_offset=12), Name('args', Store(), lineno=52, col_offset=18)], Store(), lineno=52, col_offset=12)], Call(Attribute(Name('getopt', Load(), lineno=52, col_offset=25), 'getopt', Load(), lineno=52, col_offset=25), [Subscript(Attribute(Name('sys', Load(), lineno=52, col_offset=39), 'argv', Load(), lineno=52, col_offset=39), Slice(Num(1, lineno=52, col_offset=48), None, None), Load(), lineno=52, col_offset=39), Name('SHORTOPTS', Load(), lineno=52, col_offset=53), Name('LONGOPTS', Load(), lineno=52, col_offset=64)], [], None, None, lineno=52, col_offset=25), lineno=52, col_offset=12)], [ExceptHandler(Attribute(Name('getopt', Load(), lineno=53, col_offset=15), 'GetoptError', Load(), lineno=53, col_offset=15), None, [Expr(Call(Name('usage', Load(), lineno=54, col_offset=12), [], [], None, None, lineno=54, col_offset=12), lineno=54, col_offset=12)], lineno=53, col_offset=8)], [], lineno=51, col_offset=8), Assign([Name('process_func', Store(), lineno=56, col_offset=8)], Name('processfile', Load(), lineno=56, col_offset=23), lineno=56, col_offset=8), Assign([Name('basepkgname', Store(), lineno=57, col_offset=8)], Str('StdSuites', lineno=57, col_offset=22), lineno=57, col_offset=8), Assign([Name('output', Store(), lineno=58, col_offset=8)], Name('None', Load(), lineno=58, col_offset=17), lineno=58, col_offset=8), Assign([Name('edit_modnames', Store(), lineno=59, col_offset=8)], List([], Load(), lineno=59, col_offset=24), lineno=59, col_offset=8), Assign([Name('creatorsignature', Store(), lineno=60, col_offset=8)], Name('None', Load(), lineno=60, col_offset=27), lineno=60, col_offset=8), Assign([Name('dump', Store(), lineno=61, col_offset=8)], Name('None', Load(), lineno=61, col_offset=15), lineno=61, col_offset=8), Assign([Name('verbose', Store(), lineno=62, col_offset=8)], Name('None', Load(), lineno=62, col_offset=18), lineno=62, col_offset=8), For(Tuple([Name('o', Store(), lineno=64, col_offset=12), Name('a', Store(), lineno=64, col_offset=15)], Store(), lineno=64, col_offset=12), Name('opts', Load(), lineno=64, col_offset=20), [If(Compare(Name('o', Load(), lineno=65, col_offset=15), [In()], [Tuple([Str('-r', lineno=65, col_offset=21), Str('--resource', lineno=65, col_offset=27)], Load(), lineno=65, col_offset=21)], lineno=65, col_offset=15), [Assign([Name('process_func', Store(), lineno=66, col_offset=16)], Name('processfile_fromresource', Load(), lineno=66, col_offset=31), lineno=66, col_offset=16)], [], lineno=65, col_offset=12), If(Compare(Name('o', Load(), lineno=67, col_offset=15), [In()], [Tuple([Str('-b', lineno=67, col_offset=21), Str('--base', lineno=67, col_offset=27)], Load(), lineno=67, col_offset=21)], lineno=67, col_offset=15), [Assign([Name('basepkgname', Store(), lineno=68, col_offset=16)], Name('a', Load(), lineno=68, col_offset=30), lineno=68, col_offset=16)], [], lineno=67, col_offset=12), If(Compare(Name('o', Load(), lineno=69, col_offset=15), [In()], [Tuple([Str('-o', lineno=69, col_offset=21), Str('--output', lineno=69, col_offset=27)], Load(), lineno=69, col_offset=21)], lineno=69, col_offset=15), [Assign([Name('output', Store(), lineno=70, col_offset=16)], Name('a', Load(), lineno=70, col_offset=25), lineno=70, col_offset=16)], [], lineno=69, col_offset=12), If(Compare(Name('o', Load(), lineno=71, col_offset=15), [In()], [Tuple([Str('-e', lineno=71, col_offset=21), Str('--edit', lineno=71, col_offset=27)], Load(), lineno=71, col_offset=21)], lineno=71, col_offset=15), [Assign([Name('split', Store(), lineno=72, col_offset=16)], Call(Attribute(Name('a', Load(), lineno=72, col_offset=24), 'split', Load(), lineno=72, col_offset=24), [Str('=', lineno=72, col_offset=32)], [], None, None, lineno=72, col_offset=24), lineno=72, col_offset=16), If(Compare(Call(Name('len', Load(), lineno=73, col_offset=19), [Name('split', Load(), lineno=73, col_offset=23)], [], None, None, lineno=73, col_offset=19), [NotEq()], [Num(2, lineno=73, col_offset=33)], lineno=73, col_offset=19), [Expr(Call(Name('usage', Load(), lineno=74, col_offset=20), [], [], None, None, lineno=74, col_offset=20), lineno=74, col_offset=20)], [], lineno=73, col_offset=16), Expr(Call(Attribute(Name('edit_modnames', Load(), lineno=75, col_offset=16), 'append', Load(), lineno=75, col_offset=16), [Name('split', Load(), lineno=75, col_offset=37)], [], None, None, lineno=75, col_offset=16), lineno=75, col_offset=16)], [], lineno=71, col_offset=12), If(Compare(Name('o', Load(), lineno=76, col_offset=15), [In()], [Tuple([Str('-c', lineno=76, col_offset=21), Str('--creator', lineno=76, col_offset=27)], Load(), lineno=76, col_offset=21)], lineno=76, col_offset=15), [If(Compare(Call(Name('len', Load(), lineno=77, col_offset=19), [Name('a', Load(), lineno=77, col_offset=23)], [], None, None, lineno=77, col_offset=19), [NotEq()], [Num(4, lineno=77, col_offset=29)], lineno=77, col_offset=19), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=78, col_offset=20), 'stderr', Load(), lineno=78, col_offset=20), 'write', Load(), lineno=78, col_offset=20), [Str('creator must be 4-char string\n', lineno=78, col_offset=37)], [], None, None, lineno=78, col_offset=20), lineno=78, col_offset=20), Expr(Call(Attribute(Name('sys', Load(), lineno=79, col_offset=20), 'exit', Load(), lineno=79, col_offset=20), [Num(1, lineno=79, col_offset=29)], [], None, None, lineno=79, col_offset=20), lineno=79, col_offset=20)], [], lineno=77, col_offset=16), Assign([Name('creatorsignature', Store(), lineno=80, col_offset=16)], Name('a', Load(), lineno=80, col_offset=35), lineno=80, col_offset=16)], [], lineno=76, col_offset=12), If(Compare(Name('o', Load(), lineno=81, col_offset=15), [In()], [Tuple([Str('-d', lineno=81, col_offset=21), Str('--dump', lineno=81, col_offset=27)], Load(), lineno=81, col_offset=21)], lineno=81, col_offset=15), [Assign([Name('dump', Store(), lineno=82, col_offset=16)], Attribute(Name('sys', Load(), lineno=82, col_offset=23), 'stdout', Load(), lineno=82, col_offset=23), lineno=82, col_offset=16)], [], lineno=81, col_offset=12), If(Compare(Name('o', Load(), lineno=83, col_offset=15), [In()], [Tuple([Str('-v', lineno=83, col_offset=21), Str('--verbose', lineno=83, col_offset=27)], Load(), lineno=83, col_offset=21)], lineno=83, col_offset=15), [Assign([Name('verbose', Store(), lineno=84, col_offset=16)], Attribute(Name('sys', Load(), lineno=84, col_offset=26), 'stderr', Load(), lineno=84, col_offset=26), lineno=84, col_offset=16)], [], lineno=83, col_offset=12)], [], lineno=64, col_offset=8), If(BoolOp(And(), [Name('output', Load(), lineno=87, col_offset=11), Compare(Call(Name('len', Load(), lineno=87, col_offset=22), [Name('args', Load(), lineno=87, col_offset=26)], [], None, None, lineno=87, col_offset=22), [Gt()], [Num(1, lineno=87, col_offset=34)], lineno=87, col_offset=22)], lineno=87, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=88, col_offset=12), 'stderr', Load(), lineno=88, col_offset=12), 'write', Load(), lineno=88, col_offset=12), [BinOp(Str('%s: cannot specify --output with multiple inputs\n', lineno=88, col_offset=29), Mod(), Subscript(Attribute(Name('sys', Load(), lineno=88, col_offset=84), 'argv', Load(), lineno=88, col_offset=84), Index(Num(0, lineno=88, col_offset=93)), Load(), lineno=88, col_offset=84), lineno=88, col_offset=29)], [], None, None, lineno=88, col_offset=12), lineno=88, col_offset=12), Expr(Call(Attribute(Name('sys', Load(), lineno=89, col_offset=12), 'exit', Load(), lineno=89, col_offset=12), [Num(1, lineno=89, col_offset=21)], [], None, None, lineno=89, col_offset=12), lineno=89, col_offset=12)], [], lineno=87, col_offset=8), For(Name('filename', Store(), lineno=91, col_offset=12), Name('args', Load(), lineno=91, col_offset=24), [Expr(Call(Name('process_func', Load(), lineno=92, col_offset=12), [Name('filename', Load(), lineno=92, col_offset=25)], [keyword('output', Name('output', Load(), lineno=92, col_offset=42)), keyword('basepkgname', Name('basepkgname', Load(), lineno=92, col_offset=62)), keyword('edit_modnames', Name('edit_modnames', Load(), lineno=93, col_offset=30)), keyword('creatorsignature', Name('creatorsignature', Load(), lineno=93, col_offset=62)), keyword('dump', Name('dump', Load(), lineno=94, col_offset=21)), keyword('verbose', Name('verbose', Load(), lineno=94, col_offset=35))], None, None, lineno=92, col_offset=12), lineno=92, col_offset=12)], [], lineno=91, col_offset=8)], [Expr(Call(Name('main_interactive', Load(), lineno=96, col_offset=8), [], [], None, None, lineno=96, col_offset=8), lineno=96, col_offset=8)], lineno=48, col_offset=4)], [], lineno=47, col_offset=0), FunctionDef('main_interactive', arguments([Name('interact', Param(), lineno=98, col_offset=21), Name('basepkgname', Param(), lineno=98, col_offset=33)], None, None, [Num(0, lineno=98, col_offset=30), Str('StdSuites', lineno=98, col_offset=45)]), [If(Name('interact', Load(), lineno=99, col_offset=7), [Assign([Name('edit_modnames', Store(), lineno=101, col_offset=8)], Name('None', Load(), lineno=101, col_offset=24), lineno=101, col_offset=8)], [Assign([Name('edit_modnames', Store(), lineno=104, col_offset=8)], List([], Load(), lineno=104, col_offset=24), lineno=104, col_offset=8)], lineno=99, col_offset=4), Assign([Name('appsfolder', Store(), lineno=105, col_offset=4)], Call(Attribute(Attribute(Name('Carbon', Load(), lineno=105, col_offset=17), 'Folder', Load(), lineno=105, col_offset=17), 'FSFindFolder', Load(), lineno=105, col_offset=17), [Num(-32765, lineno=105, col_offset=45), Str('apps', lineno=105, col_offset=52), Num(0, lineno=105, col_offset=60)], [], None, None, lineno=105, col_offset=17), lineno=105, col_offset=4), Assign([Name('filename', Store(), lineno=106, col_offset=4)], Call(Attribute(Name('EasyDialogs', Load(), lineno=106, col_offset=15), 'AskFileForOpen', Load(), lineno=106, col_offset=15), [], [keyword('message', Str('Select scriptable application', lineno=107, col_offset=16)), keyword('dialogOptionFlags', Num(4182, lineno=108, col_offset=26)), keyword('defaultLocation', Name('appsfolder', Load(), lineno=109, col_offset=24))], None, None, lineno=106, col_offset=15), lineno=106, col_offset=4), If(UnaryOp(Not(), Name('filename', Load(), lineno=110, col_offset=11), lineno=110, col_offset=7), [Return(None, lineno=111, col_offset=8)], [], lineno=110, col_offset=4), If(UnaryOp(Not(), Call(Name('is_scriptable', Load(), lineno=112, col_offset=11), [Name('filename', Load(), lineno=112, col_offset=25)], [], None, None, lineno=112, col_offset=11), lineno=112, col_offset=7), [If(Compare(Call(Attribute(Name('EasyDialogs', Load(), lineno=113, col_offset=11), 'AskYesNoCancel', Load(), lineno=113, col_offset=11), [Str('Warning: application does not seem scriptable', lineno=114, col_offset=16)], [keyword('yes', Str('Continue', lineno=115, col_offset=20)), keyword('default', Num(2, lineno=115, col_offset=40)), keyword('no', Str('', lineno=115, col_offset=46))], None, None, lineno=113, col_offset=11), [LtE()], [Num(0, lineno=115, col_offset=53)], lineno=113, col_offset=11), [Return(None, lineno=116, col_offset=12)], [], lineno=113, col_offset=8)], [], lineno=112, col_offset=4), TryExcept([Expr(Call(Name('processfile', Load(), lineno=118, col_offset=8), [Name('filename', Load(), lineno=118, col_offset=20)], [keyword('edit_modnames', Name('edit_modnames', Load(), lineno=118, col_offset=44)), keyword('basepkgname', Name('basepkgname', Load(), lineno=118, col_offset=71)), keyword('verbose', Attribute(Name('sys', Load(), lineno=119, col_offset=16), 'stderr', Load(), lineno=119, col_offset=16))], None, None, lineno=118, col_offset=8), lineno=118, col_offset=8)], [ExceptHandler(Attribute(Name('MacOS', Load(), lineno=120, col_offset=11), 'Error', Load(), lineno=120, col_offset=11), Name('arg', Store(), lineno=120, col_offset=24), [Print(None, [Str('Error getting terminology:', lineno=121, col_offset=14), Name('arg', Load(), lineno=121, col_offset=44)], True, lineno=121, col_offset=8), Print(None, [Str('Retry, manually parsing resources', lineno=122, col_offset=14)], True, lineno=122, col_offset=8), Expr(Call(Name('processfile_fromresource', Load(), lineno=123, col_offset=8), [Name('filename', Load(), lineno=123, col_offset=33)], [keyword('edit_modnames', Name('edit_modnames', Load(), lineno=123, col_offset=57)), keyword('basepkgname', Name('basepkgname', Load(), lineno=124, col_offset=24)), keyword('verbose', Attribute(Name('sys', Load(), lineno=124, col_offset=45), 'stderr', Load(), lineno=124, col_offset=45))], None, None, lineno=123, col_offset=8), lineno=123, col_offset=8)], lineno=120, col_offset=4)], [], lineno=117, col_offset=4)], [], lineno=98, col_offset=0), FunctionDef('is_scriptable', arguments([Name('application', Param(), lineno=126, col_offset=18)], None, None, []), [Expr(Str('Return true if the application is scriptable', lineno=127, col_offset=4), lineno=127, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=128, col_offset=7), 'path', Load(), lineno=128, col_offset=7), 'isdir', Load(), lineno=128, col_offset=7), [Name('application', Load(), lineno=128, col_offset=21)], [], None, None, lineno=128, col_offset=7), [Assign([Name('plistfile', Store(), lineno=129, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=129, col_offset=20), 'path', Load(), lineno=129, col_offset=20), 'join', Load(), lineno=129, col_offset=20), [Name('application', Load(), lineno=129, col_offset=33), Str('Contents', lineno=129, col_offset=46), Str('Info.plist', lineno=129, col_offset=58)], [], None, None, lineno=129, col_offset=20), lineno=129, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=130, col_offset=15), 'path', Load(), lineno=130, col_offset=15), 'exists', Load(), lineno=130, col_offset=15), [Name('plistfile', Load(), lineno=130, col_offset=30)], [], None, None, lineno=130, col_offset=15), lineno=130, col_offset=11), [Return(Name('False', Load(), lineno=131, col_offset=19), lineno=131, col_offset=12)], [], lineno=130, col_offset=8), Assign([Name('plist', Store(), lineno=132, col_offset=8)], Call(Attribute(Attribute(Name('plistlib', Load(), lineno=132, col_offset=16), 'Plist', Load(), lineno=132, col_offset=16), 'fromFile', Load(), lineno=132, col_offset=16), [Name('plistfile', Load(), lineno=132, col_offset=40)], [], None, None, lineno=132, col_offset=16), lineno=132, col_offset=8), Return(Call(Attribute(Name('plist', Load(), lineno=133, col_offset=15), 'get', Load(), lineno=133, col_offset=15), [Str('NSAppleScriptEnabled', lineno=133, col_offset=25), Name('False', Load(), lineno=133, col_offset=49)], [], None, None, lineno=133, col_offset=15), lineno=133, col_offset=8)], [], lineno=128, col_offset=4), Assign([Name('currf', Store(), lineno=135, col_offset=4)], Call(Name('CurResFile', Load(), lineno=135, col_offset=12), [], [], None, None, lineno=135, col_offset=12), lineno=135, col_offset=4), TryExcept([Assign([Name('refno', Store(), lineno=137, col_offset=8)], Call(Attribute(Name('macresource', Load(), lineno=137, col_offset=16), 'open_pathname', Load(), lineno=137, col_offset=16), [Name('application', Load(), lineno=137, col_offset=42)], [], None, None, lineno=137, col_offset=16), lineno=137, col_offset=8)], [ExceptHandler(Attribute(Name('MacOS', Load(), lineno=138, col_offset=11), 'Error', Load(), lineno=138, col_offset=11), None, [Return(Name('False', Load(), lineno=139, col_offset=15), lineno=139, col_offset=8)], lineno=138, col_offset=4)], [], lineno=136, col_offset=4), Expr(Call(Name('UseResFile', Load(), lineno=140, col_offset=4), [Name('refno', Load(), lineno=140, col_offset=15)], [], None, None, lineno=140, col_offset=4), lineno=140, col_offset=4), Assign([Name('n_terminology', Store(), lineno=141, col_offset=4)], BinOp(BinOp(BinOp(Call(Name('Count1Resources', Load(), lineno=141, col_offset=20), [Str('aete', lineno=141, col_offset=36)], [], None, None, lineno=141, col_offset=20), Add(), Call(Name('Count1Resources', Load(), lineno=141, col_offset=46), [Str('aeut', lineno=141, col_offset=62)], [], None, None, lineno=141, col_offset=46), lineno=141, col_offset=20), Add(), Call(Name('Count1Resources', Load(), lineno=142, col_offset=8), [Str('scsz', lineno=142, col_offset=24)], [], None, None, lineno=142, col_offset=8), lineno=141, col_offset=70), Add(), Call(Name('Count1Resources', Load(), lineno=142, col_offset=34), [Str('osiz', lineno=142, col_offset=50)], [], None, None, lineno=142, col_offset=34), lineno=142, col_offset=32), lineno=141, col_offset=4), Expr(Call(Name('CloseResFile', Load(), lineno=143, col_offset=4), [Name('refno', Load(), lineno=143, col_offset=17)], [], None, None, lineno=143, col_offset=4), lineno=143, col_offset=4), Expr(Call(Name('UseResFile', Load(), lineno=144, col_offset=4), [Name('currf', Load(), lineno=144, col_offset=15)], [], None, None, lineno=144, col_offset=4), lineno=144, col_offset=4), Return(Compare(Name('n_terminology', Load(), lineno=145, col_offset=11), [Gt()], [Num(0, lineno=145, col_offset=27)], lineno=145, col_offset=11), lineno=145, col_offset=4)], [], lineno=126, col_offset=0), FunctionDef('processfile_fromresource', arguments([Name('fullname', Param(), lineno=147, col_offset=29), Name('output', Param(), lineno=147, col_offset=39), Name('basepkgname', Param(), lineno=147, col_offset=52), Name('edit_modnames', Param(), lineno=148, col_offset=8), Name('creatorsignature', Param(), lineno=148, col_offset=28), Name('dump', Param(), lineno=148, col_offset=51), Name('verbose', Param(), lineno=148, col_offset=62)], None, None, [Name('None', Load(), lineno=147, col_offset=46), Name('None', Load(), lineno=147, col_offset=64), Name('None', Load(), lineno=148, col_offset=22), Name('None', Load(), lineno=148, col_offset=45), Name('None', Load(), lineno=148, col_offset=56), Name('None', Load(), lineno=148, col_offset=70)]), [Expr(Str('Process all resources in a single file', lineno=149, col_offset=4), lineno=149, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Call(Name('is_scriptable', Load(), lineno=150, col_offset=11), [Name('fullname', Load(), lineno=150, col_offset=25)], [], None, None, lineno=150, col_offset=11), lineno=150, col_offset=7), Name('verbose', Load(), lineno=150, col_offset=39)], lineno=150, col_offset=7), [Print(Name('verbose', Load(), lineno=151, col_offset=16), [BinOp(Str('Warning: app does not seem scriptable: %s', lineno=151, col_offset=25), Mod(), Name('fullname', Load(), lineno=151, col_offset=71), lineno=151, col_offset=25)], True, lineno=151, col_offset=8)], [], lineno=150, col_offset=4), Assign([Name('cur', Store(), lineno=152, col_offset=4)], Call(Name('CurResFile', Load(), lineno=152, col_offset=10), [], [], None, None, lineno=152, col_offset=10), lineno=152, col_offset=4), If(Name('verbose', Load(), lineno=153, col_offset=7), [Print(Name('verbose', Load(), lineno=154, col_offset=16), [Str('Processing', lineno=154, col_offset=25), Name('fullname', Load(), lineno=154, col_offset=39)], True, lineno=154, col_offset=8)], [], lineno=153, col_offset=4), Assign([Name('rf', Store(), lineno=155, col_offset=4)], Call(Attribute(Name('macresource', Load(), lineno=155, col_offset=9), 'open_pathname', Load(), lineno=155, col_offset=9), [Name('fullname', Load(), lineno=155, col_offset=35)], [], None, None, lineno=155, col_offset=9), lineno=155, col_offset=4), TryFinally([Expr(Call(Name('UseResFile', Load(), lineno=157, col_offset=8), [Name('rf', Load(), lineno=157, col_offset=19)], [], None, None, lineno=157, col_offset=8), lineno=157, col_offset=8), Assign([Name('resources', Store(), lineno=158, col_offset=8)], List([], Load(), lineno=158, col_offset=20), lineno=158, col_offset=8), For(Name('i', Store(), lineno=159, col_offset=12), Call(Name('range', Load(), lineno=159, col_offset=17), [Call(Name('Count1Resources', Load(), lineno=159, col_offset=23), [Str('aete', lineno=159, col_offset=39)], [], None, None, lineno=159, col_offset=23)], [], None, None, lineno=159, col_offset=17), [Assign([Name('res', Store(), lineno=160, col_offset=12)], Call(Name('Get1IndResource', Load(), lineno=160, col_offset=18), [Str('aete', lineno=160, col_offset=34), BinOp(Num(1, lineno=160, col_offset=42), Add(), Name('i', Load(), lineno=160, col_offset=44), lineno=160, col_offset=42)], [], None, None, lineno=160, col_offset=18), lineno=160, col_offset=12), Expr(Call(Attribute(Name('resources', Load(), lineno=161, col_offset=12), 'append', Load(), lineno=161, col_offset=12), [Name('res', Load(), lineno=161, col_offset=29)], [], None, None, lineno=161, col_offset=12), lineno=161, col_offset=12)], [], lineno=159, col_offset=8), For(Name('i', Store(), lineno=162, col_offset=12), Call(Name('range', Load(), lineno=162, col_offset=17), [Call(Name('Count1Resources', Load(), lineno=162, col_offset=23), [Str('aeut', lineno=162, col_offset=39)], [], None, None, lineno=162, col_offset=23)], [], None, None, lineno=162, col_offset=17), [Assign([Name('res', Store(), lineno=163, col_offset=12)], Call(Name('Get1IndResource', Load(), lineno=163, col_offset=18), [Str('aeut', lineno=163, col_offset=34), BinOp(Num(1, lineno=163, col_offset=42), Add(), Name('i', Load(), lineno=163, col_offset=44), lineno=163, col_offset=42)], [], None, None, lineno=163, col_offset=18), lineno=163, col_offset=12), Expr(Call(Attribute(Name('resources', Load(), lineno=164, col_offset=12), 'append', Load(), lineno=164, col_offset=12), [Name('res', Load(), lineno=164, col_offset=29)], [], None, None, lineno=164, col_offset=12), lineno=164, col_offset=12)], [], lineno=162, col_offset=8), If(Name('verbose', Load(), lineno=165, col_offset=11), [Print(Name('verbose', Load(), lineno=166, col_offset=20), [Str('\nLISTING aete+aeut RESOURCES IN', lineno=166, col_offset=29), Call(Name('repr', Load(), lineno=166, col_offset=65), [Name('fullname', Load(), lineno=166, col_offset=70)], [], None, None, lineno=166, col_offset=65)], True, lineno=166, col_offset=12)], [], lineno=165, col_offset=8), Assign([Name('aetelist', Store(), lineno=167, col_offset=8)], List([], Load(), lineno=167, col_offset=19), lineno=167, col_offset=8), For(Name('res', Store(), lineno=168, col_offset=12), Name('resources', Load(), lineno=168, col_offset=19), [If(Name('verbose', Load(), lineno=169, col_offset=15), [Print(Name('verbose', Load(), lineno=170, col_offset=24), [Str('decoding', lineno=170, col_offset=33), Call(Attribute(Name('res', Load(), lineno=170, col_offset=45), 'GetResInfo', Load(), lineno=170, col_offset=45), [], [], None, None, lineno=170, col_offset=45), Str('...', lineno=170, col_offset=63)], True, lineno=170, col_offset=16)], [], lineno=169, col_offset=12), Assign([Name('data', Store(), lineno=171, col_offset=12)], Attribute(Name('res', Load(), lineno=171, col_offset=19), 'data', Load(), lineno=171, col_offset=19), lineno=171, col_offset=12), Assign([Name('aete', Store(), lineno=172, col_offset=12)], Call(Name('decode', Load(), lineno=172, col_offset=19), [Name('data', Load(), lineno=172, col_offset=26), Name('verbose', Load(), lineno=172, col_offset=32)], [], None, None, lineno=172, col_offset=19), lineno=172, col_offset=12), Expr(Call(Attribute(Name('aetelist', Load(), lineno=173, col_offset=12), 'append', Load(), lineno=173, col_offset=12), [Tuple([Name('aete', Load(), lineno=173, col_offset=29), Call(Attribute(Name('res', Load(), lineno=173, col_offset=35), 'GetResInfo', Load(), lineno=173, col_offset=35), [], [], None, None, lineno=173, col_offset=35)], Load(), lineno=173, col_offset=29)], [], None, None, lineno=173, col_offset=12), lineno=173, col_offset=12)], [], lineno=168, col_offset=8)], [If(Compare(Name('rf', Load(), lineno=175, col_offset=11), [NotEq()], [Name('cur', Load(), lineno=175, col_offset=17)], lineno=175, col_offset=11), [Expr(Call(Name('CloseResFile', Load(), lineno=176, col_offset=12), [Name('rf', Load(), lineno=176, col_offset=25)], [], None, None, lineno=176, col_offset=12), lineno=176, col_offset=12), Expr(Call(Name('UseResFile', Load(), lineno=177, col_offset=12), [Name('cur', Load(), lineno=177, col_offset=23)], [], None, None, lineno=177, col_offset=12), lineno=177, col_offset=12)], [], lineno=175, col_offset=8)], lineno=156, col_offset=4), Expr(Call(Name('UseResFile', Load(), lineno=179, col_offset=4), [Name('cur', Load(), lineno=179, col_offset=15)], [], None, None, lineno=179, col_offset=4), lineno=179, col_offset=4), If(Name('dump', Load(), lineno=180, col_offset=7), [Expr(Call(Name('dumpaetelist', Load(), lineno=181, col_offset=8), [Name('aetelist', Load(), lineno=181, col_offset=21), Name('dump', Load(), lineno=181, col_offset=31)], [], None, None, lineno=181, col_offset=8), lineno=181, col_offset=8)], [], lineno=180, col_offset=4), Expr(Call(Name('compileaetelist', Load(), lineno=182, col_offset=4), [Name('aetelist', Load(), lineno=182, col_offset=20), Name('fullname', Load(), lineno=182, col_offset=30)], [keyword('output', Name('output', Load(), lineno=182, col_offset=47)), keyword('basepkgname', Name('basepkgname', Load(), lineno=183, col_offset=20)), keyword('edit_modnames', Name('edit_modnames', Load(), lineno=183, col_offset=47)), keyword('creatorsignature', Name('creatorsignature', Load(), lineno=184, col_offset=25)), keyword('verbose', Name('verbose', Load(), lineno=184, col_offset=51))], None, None, lineno=182, col_offset=4), lineno=182, col_offset=4)], [], lineno=147, col_offset=0), FunctionDef('processfile', arguments([Name('fullname', Param(), lineno=186, col_offset=16), Name('output', Param(), lineno=186, col_offset=26), Name('basepkgname', Param(), lineno=186, col_offset=39), Name('edit_modnames', Param(), lineno=187, col_offset=8), Name('creatorsignature', Param(), lineno=187, col_offset=28), Name('dump', Param(), lineno=187, col_offset=51), Name('verbose', Param(), lineno=188, col_offset=8)], None, None, [Name('None', Load(), lineno=186, col_offset=33), Name('None', Load(), lineno=186, col_offset=51), Name('None', Load(), lineno=187, col_offset=22), Name('None', Load(), lineno=187, col_offset=45), Name('None', Load(), lineno=187, col_offset=56), Name('None', Load(), lineno=188, col_offset=16)]), [Expr(Str('Ask an application for its terminology and process that', lineno=189, col_offset=4), lineno=189, col_offset=4), If(BoolOp(And(), [UnaryOp(Not(), Call(Name('is_scriptable', Load(), lineno=190, col_offset=11), [Name('fullname', Load(), lineno=190, col_offset=25)], [], None, None, lineno=190, col_offset=11), lineno=190, col_offset=7), Name('verbose', Load(), lineno=190, col_offset=39)], lineno=190, col_offset=7), [Print(Name('verbose', Load(), lineno=191, col_offset=16), [BinOp(Str('Warning: app does not seem scriptable: %s', lineno=191, col_offset=25), Mod(), Name('fullname', Load(), lineno=191, col_offset=71), lineno=191, col_offset=25)], True, lineno=191, col_offset=8)], [], lineno=190, col_offset=4), If(Name('verbose', Load(), lineno=192, col_offset=7), [Print(Name('verbose', Load(), lineno=193, col_offset=16), [Str('\nASKING FOR aete DICTIONARY IN', lineno=193, col_offset=25), Call(Name('repr', Load(), lineno=193, col_offset=60), [Name('fullname', Load(), lineno=193, col_offset=65)], [], None, None, lineno=193, col_offset=60)], True, lineno=193, col_offset=8)], [], lineno=192, col_offset=4), TryExcept([Assign([Tuple([Name('aedescobj', Store(), lineno=195, col_offset=8), Name('launched', Store(), lineno=195, col_offset=19)], Store(), lineno=195, col_offset=8)], Call(Attribute(Name('OSATerminology', Load(), lineno=195, col_offset=30), 'GetAppTerminology', Load(), lineno=195, col_offset=30), [Name('fullname', Load(), lineno=195, col_offset=63)], [], None, None, lineno=195, col_offset=30), lineno=195, col_offset=8)], [ExceptHandler(Attribute(Name('MacOS', Load(), lineno=196, col_offset=11), 'Error', Load(), lineno=196, col_offset=11), Name('arg', Store(), lineno=196, col_offset=24), [If(Compare(Subscript(Name('arg', Load(), lineno=197, col_offset=11), Index(Num(0, lineno=197, col_offset=15)), Load(), lineno=197, col_offset=11), [In()], [Tuple([Num(-1701, lineno=197, col_offset=23), Num(-192, lineno=197, col_offset=30)], Load(), lineno=197, col_offset=22)], lineno=197, col_offset=11), [If(Name('verbose', Load(), lineno=198, col_offset=15), [Print(Name('verbose', Load(), lineno=199, col_offset=24), [Str('GetAppTerminology failed with errAEDescNotFound/resNotFound, trying manually', lineno=199, col_offset=33)], True, lineno=199, col_offset=16)], [], lineno=198, col_offset=12), Assign([Tuple([Name('aedata', Store(), lineno=200, col_offset=12), Name('sig', Store(), lineno=200, col_offset=20)], Store(), lineno=200, col_offset=12)], Call(Name('getappterminology', Load(), lineno=200, col_offset=26), [Name('fullname', Load(), lineno=200, col_offset=44)], [keyword('verbose', Name('verbose', Load(), lineno=200, col_offset=62))], None, None, lineno=200, col_offset=26), lineno=200, col_offset=12), If(UnaryOp(Not(), Name('creatorsignature', Load(), lineno=201, col_offset=19), lineno=201, col_offset=15), [Assign([Name('creatorsignature', Store(), lineno=202, col_offset=16)], Name('sig', Load(), lineno=202, col_offset=35), lineno=202, col_offset=16)], [], lineno=201, col_offset=12)], [Raise(None, None, None, lineno=204, col_offset=12)], lineno=197, col_offset=8)], lineno=196, col_offset=4)], [If(Name('launched', Load(), lineno=206, col_offset=11), [If(Name('verbose', Load(), lineno=207, col_offset=15), [Print(Name('verbose', Load(), lineno=208, col_offset=24), [Str('Launched', lineno=208, col_offset=33), Name('fullname', Load(), lineno=208, col_offset=45)], True, lineno=208, col_offset=16)], [], lineno=207, col_offset=12)], [], lineno=206, col_offset=8), Assign([Name('raw', Store(), lineno=209, col_offset=8)], Call(Attribute(Name('aetools', Load(), lineno=209, col_offset=14), 'unpack', Load(), lineno=209, col_offset=14), [Name('aedescobj', Load(), lineno=209, col_offset=29)], [], None, None, lineno=209, col_offset=14), lineno=209, col_offset=8), If(UnaryOp(Not(), Name('raw', Load(), lineno=210, col_offset=15), lineno=210, col_offset=11), [If(Name('verbose', Load(), lineno=211, col_offset=15), [Print(Name('verbose', Load(), lineno=212, col_offset=24), [Str('Unpack returned empty value:', lineno=212, col_offset=33), Name('raw', Load(), lineno=212, col_offset=65)], True, lineno=212, col_offset=16)], [], lineno=211, col_offset=12), Return(None, lineno=213, col_offset=12)], [], lineno=210, col_offset=8), If(UnaryOp(Not(), Attribute(Subscript(Name('raw', Load(), lineno=214, col_offset=15), Index(Num(0, lineno=214, col_offset=19)), Load(), lineno=214, col_offset=15), 'data', Load(), lineno=214, col_offset=15), lineno=214, col_offset=11), [If(Name('verbose', Load(), lineno=215, col_offset=15), [Print(Name('verbose', Load(), lineno=216, col_offset=24), [Str('Unpack returned value without data:', lineno=216, col_offset=33), Name('raw', Load(), lineno=216, col_offset=72)], True, lineno=216, col_offset=16)], [], lineno=215, col_offset=12), Return(None, lineno=217, col_offset=12)], [], lineno=214, col_offset=8), Assign([Name('aedata', Store(), lineno=218, col_offset=8)], Subscript(Name('raw', Load(), lineno=218, col_offset=17), Index(Num(0, lineno=218, col_offset=21)), Load(), lineno=218, col_offset=17), lineno=218, col_offset=8)], lineno=194, col_offset=4), Assign([Name('aete', Store(), lineno=219, col_offset=4)], Call(Name('decode', Load(), lineno=219, col_offset=11), [Attribute(Name('aedata', Load(), lineno=219, col_offset=18), 'data', Load(), lineno=219, col_offset=18), Name('verbose', Load(), lineno=219, col_offset=31)], [], None, None, lineno=219, col_offset=11), lineno=219, col_offset=4), If(Name('dump', Load(), lineno=220, col_offset=7), [Expr(Call(Name('dumpaetelist', Load(), lineno=221, col_offset=8), [List([Name('aete', Load(), lineno=221, col_offset=22)], Load(), lineno=221, col_offset=21), Name('dump', Load(), lineno=221, col_offset=29)], [], None, None, lineno=221, col_offset=8), lineno=221, col_offset=8), Return(None, lineno=222, col_offset=8)], [], lineno=220, col_offset=4), Expr(Call(Name('compileaete', Load(), lineno=223, col_offset=4), [Name('aete', Load(), lineno=223, col_offset=16), Name('None', Load(), lineno=223, col_offset=22), Name('fullname', Load(), lineno=223, col_offset=28)], [keyword('output', Name('output', Load(), lineno=223, col_offset=45)), keyword('basepkgname', Name('basepkgname', Load(), lineno=223, col_offset=65)), keyword('creatorsignature', Name('creatorsignature', Load(), lineno=224, col_offset=25)), keyword('edit_modnames', Name('edit_modnames', Load(), lineno=224, col_offset=57)), keyword('verbose', Name('verbose', Load(), lineno=225, col_offset=16))], None, None, lineno=223, col_offset=4), lineno=223, col_offset=4)], [], lineno=186, col_offset=0), FunctionDef('getappterminology', arguments([Name('fullname', Param(), lineno=227, col_offset=22), Name('verbose', Param(), lineno=227, col_offset=32)], None, None, [Name('None', Load(), lineno=227, col_offset=40)]), [Expr(Str('Get application terminology by sending an AppleEvent', lineno=228, col_offset=4), lineno=228, col_offset=4), If(UnaryOp(Not(), Call(Attribute(Name('MacOS', Load(), lineno=230, col_offset=11), 'WMAvailable', Load(), lineno=230, col_offset=11), [], [], None, None, lineno=230, col_offset=11), lineno=230, col_offset=7), [Raise(Name('RuntimeError', Load(), lineno=231, col_offset=14), Str('Cannot send AppleEvents, no access to window manager', lineno=231, col_offset=28), None, lineno=231, col_offset=8)], [], lineno=230, col_offset=4), Import([alias('Carbon.Evt', None)], lineno=234, col_offset=4), Expr(Call(Attribute(Attribute(Name('Carbon', Load(), lineno=235, col_offset=4), 'Evt', Load(), lineno=235, col_offset=4), 'WaitNextEvent', Load(), lineno=235, col_offset=4), [Num(0, lineno=235, col_offset=29), Num(0, lineno=235, col_offset=31)], [], None, None, lineno=235, col_offset=4), lineno=235, col_offset=4), If(Call(Attribute(Attribute(Name('os', Load(), lineno=236, col_offset=7), 'path', Load(), lineno=236, col_offset=7), 'isdir', Load(), lineno=236, col_offset=7), [Name('fullname', Load(), lineno=236, col_offset=21)], [], None, None, lineno=236, col_offset=7), [Assign([Name('pkginfo', Store(), lineno=238, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=238, col_offset=18), 'path', Load(), lineno=238, col_offset=18), 'join', Load(), lineno=238, col_offset=18), [Name('fullname', Load(), lineno=238, col_offset=31), Str('Contents', lineno=238, col_offset=41), Str('PkgInfo', lineno=238, col_offset=53)], [], None, None, lineno=238, col_offset=18), lineno=238, col_offset=8), If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=239, col_offset=15), 'path', Load(), lineno=239, col_offset=15), 'exists', Load(), lineno=239, col_offset=15), [Name('pkginfo', Load(), lineno=239, col_offset=30)], [], None, None, lineno=239, col_offset=15), lineno=239, col_offset=11), [Raise(Name('RuntimeError', Load(), lineno=240, col_offset=18), Str('No PkgInfo file found', lineno=240, col_offset=32), None, lineno=240, col_offset=12)], [], lineno=239, col_offset=8), Assign([Name('tp_cr', Store(), lineno=241, col_offset=8)], Call(Attribute(Call(Name('open', Load(), lineno=241, col_offset=16), [Name('pkginfo', Load(), lineno=241, col_offset=21), Str('rb', lineno=241, col_offset=30)], [], None, None, lineno=241, col_offset=16), 'read', Load(), lineno=241, col_offset=16), [], [], None, None, lineno=241, col_offset=16), lineno=241, col_offset=8), Assign([Name('cr', Store(), lineno=242, col_offset=8)], Subscript(Name('tp_cr', Load(), lineno=242, col_offset=13), Slice(Num(4, lineno=242, col_offset=19), Num(8, lineno=242, col_offset=21), None), Load(), lineno=242, col_offset=13), lineno=242, col_offset=8)], [Assign([Tuple([Name('cr', Store(), lineno=245, col_offset=8), Name('tp', Store(), lineno=245, col_offset=12)], Store(), lineno=245, col_offset=8)], Call(Attribute(Name('MacOS', Load(), lineno=245, col_offset=17), 'GetCreatorAndType', Load(), lineno=245, col_offset=17), [Name('fullname', Load(), lineno=245, col_offset=41)], [], None, None, lineno=245, col_offset=17), lineno=245, col_offset=8)], lineno=236, col_offset=4), Assign([Name('talker', Store(), lineno=247, col_offset=4)], Call(Attribute(Name('aetools', Load(), lineno=247, col_offset=13), 'TalkTo', Load(), lineno=247, col_offset=13), [Name('cr', Load(), lineno=247, col_offset=28)], [], None, None, lineno=247, col_offset=13), lineno=247, col_offset=4), TryExcept([Expr(Call(Attribute(Name('talker', Load(), lineno=249, col_offset=8), '_start', Load(), lineno=249, col_offset=8), [], [], None, None, lineno=249, col_offset=8), lineno=249, col_offset=8)], [ExceptHandler(Tuple([Attribute(Name('MacOS', Load(), lineno=250, col_offset=12), 'Error', Load(), lineno=250, col_offset=12), Attribute(Name('aetools', Load(), lineno=250, col_offset=25), 'Error', Load(), lineno=250, col_offset=25)], Load(), lineno=250, col_offset=12), Name('arg', Store(), lineno=250, col_offset=41), [If(Name('verbose', Load(), lineno=251, col_offset=11), [Print(Name('verbose', Load(), lineno=252, col_offset=20), [Str('Warning: start() failed, continuing anyway:', lineno=252, col_offset=29), Name('arg', Load(), lineno=252, col_offset=76)], True, lineno=252, col_offset=12)], [], lineno=251, col_offset=8)], lineno=250, col_offset=4)], [], lineno=248, col_offset=4), Assign([Name('reply', Store(), lineno=253, col_offset=4)], Call(Attribute(Name('talker', Load(), lineno=253, col_offset=12), 'send', Load(), lineno=253, col_offset=12), [Str('ascr', lineno=253, col_offset=24), Str('gdte', lineno=253, col_offset=32)], [], None, None, lineno=253, col_offset=12), lineno=253, col_offset=4), Return(Tuple([Subscript(Subscript(Name('reply', Load(), lineno=256, col_offset=11), Index(Num(1, lineno=256, col_offset=17)), Load(), lineno=256, col_offset=11), Index(Str('----', lineno=256, col_offset=20)), Load(), lineno=256, col_offset=11), Name('cr', Load(), lineno=256, col_offset=29)], Load(), lineno=256, col_offset=11), lineno=256, col_offset=4)], [], lineno=227, col_offset=0), FunctionDef('compileaetelist', arguments([Name('aetelist', Param(), lineno=259, col_offset=20), Name('fullname', Param(), lineno=259, col_offset=30), Name('output', Param(), lineno=259, col_offset=40), Name('basepkgname', Param(), lineno=259, col_offset=53), Name('edit_modnames', Param(), lineno=260, col_offset=12), Name('creatorsignature', Param(), lineno=260, col_offset=32), Name('verbose', Param(), lineno=260, col_offset=55)], None, None, [Name('None', Load(), lineno=259, col_offset=47), Name('None', Load(), lineno=259, col_offset=65), Name('None', Load(), lineno=260, col_offset=26), Name('None', Load(), lineno=260, col_offset=49), Name('None', Load(), lineno=260, col_offset=63)]), [For(Tuple([Name('aete', Store(), lineno=261, col_offset=8), Name('resinfo', Store(), lineno=261, col_offset=14)], Store(), lineno=261, col_offset=8), Name('aetelist', Load(), lineno=261, col_offset=25), [Expr(Call(Name('compileaete', Load(), lineno=262, col_offset=8), [Name('aete', Load(), lineno=262, col_offset=20), Name('resinfo', Load(), lineno=262, col_offset=26), Name('fullname', Load(), lineno=262, col_offset=35)], [keyword('output', Name('output', Load(), lineno=262, col_offset=52)), keyword('basepkgname', Name('basepkgname', Load(), lineno=263, col_offset=24)), keyword('edit_modnames', Name('edit_modnames', Load(), lineno=263, col_offset=51)), keyword('creatorsignature', Name('creatorsignature', Load(), lineno=264, col_offset=29)), keyword('verbose', Name('verbose', Load(), lineno=264, col_offset=55))], None, None, lineno=262, col_offset=8), lineno=262, col_offset=8)], [], lineno=261, col_offset=4)], [], lineno=259, col_offset=0), FunctionDef('dumpaetelist', arguments([Name('aetelist', Param(), lineno=266, col_offset=17), Name('output', Param(), lineno=266, col_offset=27)], None, None, []), [Import([alias('pprint', None)], lineno=267, col_offset=4), Expr(Call(Attribute(Name('pprint', Load(), lineno=268, col_offset=4), 'pprint', Load(), lineno=268, col_offset=4), [Name('aetelist', Load(), lineno=268, col_offset=18), Name('output', Load(), lineno=268, col_offset=28)], [], None, None, lineno=268, col_offset=4), lineno=268, col_offset=4)], [], lineno=266, col_offset=0), FunctionDef('decode', arguments([Name('data', Param(), lineno=270, col_offset=11), Name('verbose', Param(), lineno=270, col_offset=17)], None, None, [Name('None', Load(), lineno=270, col_offset=25)]), [Expr(Str('Decode a resource into a python data structure', lineno=271, col_offset=4), lineno=271, col_offset=4), Assign([Name('f', Store(), lineno=272, col_offset=4)], Call(Attribute(Name('StringIO', Load(), lineno=272, col_offset=8), 'StringIO', Load(), lineno=272, col_offset=8), [Name('data', Load(), lineno=272, col_offset=26)], [], None, None, lineno=272, col_offset=8), lineno=272, col_offset=4), Assign([Name('aete', Store(), lineno=273, col_offset=4)], Call(Name('generic', Load(), lineno=273, col_offset=11), [Name('getaete', Load(), lineno=273, col_offset=19), Name('f', Load(), lineno=273, col_offset=28)], [], None, None, lineno=273, col_offset=11), lineno=273, col_offset=4), Assign([Name('aete', Store(), lineno=274, col_offset=4)], Call(Name('simplify', Load(), lineno=274, col_offset=11), [Name('aete', Load(), lineno=274, col_offset=20)], [], None, None, lineno=274, col_offset=11), lineno=274, col_offset=4), Assign([Name('processed', Store(), lineno=275, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=275, col_offset=16), 'tell', Load(), lineno=275, col_offset=16), [], [], None, None, lineno=275, col_offset=16), lineno=275, col_offset=4), Assign([Name('unprocessed', Store(), lineno=276, col_offset=4)], Call(Name('len', Load(), lineno=276, col_offset=18), [Call(Attribute(Name('f', Load(), lineno=276, col_offset=22), 'read', Load(), lineno=276, col_offset=22), [], [], None, None, lineno=276, col_offset=22)], [], None, None, lineno=276, col_offset=18), lineno=276, col_offset=4), Assign([Name('total', Store(), lineno=277, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=277, col_offset=12), 'tell', Load(), lineno=277, col_offset=12), [], [], None, None, lineno=277, col_offset=12), lineno=277, col_offset=4), If(BoolOp(And(), [Name('unprocessed', Load(), lineno=278, col_offset=7), Name('verbose', Load(), lineno=278, col_offset=23)], lineno=278, col_offset=7), [Expr(Call(Attribute(Name('verbose', Load(), lineno=279, col_offset=8), 'write', Load(), lineno=279, col_offset=8), [BinOp(Str('%d processed + %d unprocessed = %d total\n', lineno=279, col_offset=22), Mod(), Tuple([Name('processed', Load(), lineno=280, col_offset=26), Name('unprocessed', Load(), lineno=280, col_offset=37), Name('total', Load(), lineno=280, col_offset=50)], Load(), lineno=280, col_offset=26), lineno=279, col_offset=22)], [], None, None, lineno=279, col_offset=8), lineno=279, col_offset=8)], [], lineno=278, col_offset=4), Return(Name('aete', Load(), lineno=281, col_offset=11), lineno=281, col_offset=4)], [], lineno=270, col_offset=0), FunctionDef('simplify', arguments([Name('item', Param(), lineno=283, col_offset=13)], None, None, []), [Expr(Str('Recursively replace singleton tuples by their constituent item', lineno=284, col_offset=4), lineno=284, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=285, col_offset=7), [Name('item', Load(), lineno=285, col_offset=12)], [], None, None, lineno=285, col_offset=7), [Is()], [Attribute(Name('types', Load(), lineno=285, col_offset=21), 'ListType', Load(), lineno=285, col_offset=21)], lineno=285, col_offset=7), [Return(Call(Name('map', Load(), lineno=286, col_offset=15), [Name('simplify', Load(), lineno=286, col_offset=19), Name('item', Load(), lineno=286, col_offset=29)], [], None, None, lineno=286, col_offset=15), lineno=286, col_offset=8)], [If(BoolOp(And(), [Compare(Call(Name('type', Load(), lineno=287, col_offset=9), [Name('item', Load(), lineno=287, col_offset=14)], [], None, None, lineno=287, col_offset=9), [Eq()], [Attribute(Name('types', Load(), lineno=287, col_offset=23), 'TupleType', Load(), lineno=287, col_offset=23)], lineno=287, col_offset=9), Compare(Call(Name('len', Load(), lineno=287, col_offset=43), [Name('item', Load(), lineno=287, col_offset=47)], [], None, None, lineno=287, col_offset=43), [Eq()], [Num(2, lineno=287, col_offset=56)], lineno=287, col_offset=43)], lineno=287, col_offset=9), [Return(Call(Name('simplify', Load(), lineno=288, col_offset=15), [Subscript(Name('item', Load(), lineno=288, col_offset=24), Index(Num(1, lineno=288, col_offset=29)), Load(), lineno=288, col_offset=24)], [], None, None, lineno=288, col_offset=15), lineno=288, col_offset=8)], [Return(Name('item', Load(), lineno=290, col_offset=15), lineno=290, col_offset=8)], lineno=287, col_offset=9)], lineno=285, col_offset=4)], [], lineno=283, col_offset=0), FunctionDef('getbyte', arguments([Name('f', Param(), lineno=297, col_offset=12)], 'args', None, []), [Assign([Name('c', Store(), lineno=298, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=298, col_offset=8), 'read', Load(), lineno=298, col_offset=8), [Num(1, lineno=298, col_offset=15)], [], None, None, lineno=298, col_offset=8), lineno=298, col_offset=4), If(UnaryOp(Not(), Name('c', Load(), lineno=299, col_offset=11), lineno=299, col_offset=7), [Raise(Name('EOFError', Load(), lineno=300, col_offset=14), BinOp(Str('in getbyte', lineno=300, col_offset=24), Add(), Call(Name('str', Load(), lineno=300, col_offset=39), [Name('args', Load(), lineno=300, col_offset=43)], [], None, None, lineno=300, col_offset=39), lineno=300, col_offset=24), None, lineno=300, col_offset=8)], [], lineno=299, col_offset=4), Return(Call(Name('ord', Load(), lineno=301, col_offset=11), [Name('c', Load(), lineno=301, col_offset=15)], [], None, None, lineno=301, col_offset=11), lineno=301, col_offset=4)], [], lineno=297, col_offset=0), FunctionDef('getword', arguments([Name('f', Param(), lineno=303, col_offset=12)], 'args', None, []), [Expr(Call(Name('getalign', Load(), lineno=304, col_offset=4), [Name('f', Load(), lineno=304, col_offset=13)], [], None, None, lineno=304, col_offset=4), lineno=304, col_offset=4), Assign([Name('s', Store(), lineno=305, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=305, col_offset=8), 'read', Load(), lineno=305, col_offset=8), [Num(2, lineno=305, col_offset=15)], [], None, None, lineno=305, col_offset=8), lineno=305, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=306, col_offset=7), [Name('s', Load(), lineno=306, col_offset=11)], [], None, None, lineno=306, col_offset=7), [Lt()], [Num(2, lineno=306, col_offset=16)], lineno=306, col_offset=7), [Raise(Name('EOFError', Load(), lineno=307, col_offset=14), BinOp(Str('in getword', lineno=307, col_offset=24), Add(), Call(Name('str', Load(), lineno=307, col_offset=39), [Name('args', Load(), lineno=307, col_offset=43)], [], None, None, lineno=307, col_offset=39), lineno=307, col_offset=24), None, lineno=307, col_offset=8)], [], lineno=306, col_offset=4), Return(BinOp(BinOp(Call(Name('ord', Load(), lineno=308, col_offset=12), [Subscript(Name('s', Load(), lineno=308, col_offset=16), Index(Num(0, lineno=308, col_offset=18)), Load(), lineno=308, col_offset=16)], [], None, None, lineno=308, col_offset=12), LShift(), Num(8, lineno=308, col_offset=23), lineno=308, col_offset=12), BitOr(), Call(Name('ord', Load(), lineno=308, col_offset=28), [Subscript(Name('s', Load(), lineno=308, col_offset=32), Index(Num(1, lineno=308, col_offset=34)), Load(), lineno=308, col_offset=32)], [], None, None, lineno=308, col_offset=28), lineno=308, col_offset=11), lineno=308, col_offset=4)], [], lineno=303, col_offset=0), FunctionDef('getlong', arguments([Name('f', Param(), lineno=310, col_offset=12)], 'args', None, []), [Expr(Call(Name('getalign', Load(), lineno=311, col_offset=4), [Name('f', Load(), lineno=311, col_offset=13)], [], None, None, lineno=311, col_offset=4), lineno=311, col_offset=4), Assign([Name('s', Store(), lineno=312, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=312, col_offset=8), 'read', Load(), lineno=312, col_offset=8), [Num(4, lineno=312, col_offset=15)], [], None, None, lineno=312, col_offset=8), lineno=312, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=313, col_offset=7), [Name('s', Load(), lineno=313, col_offset=11)], [], None, None, lineno=313, col_offset=7), [Lt()], [Num(4, lineno=313, col_offset=16)], lineno=313, col_offset=7), [Raise(Name('EOFError', Load(), lineno=314, col_offset=14), BinOp(Str('in getlong', lineno=314, col_offset=24), Add(), Call(Name('str', Load(), lineno=314, col_offset=39), [Name('args', Load(), lineno=314, col_offset=43)], [], None, None, lineno=314, col_offset=39), lineno=314, col_offset=24), None, lineno=314, col_offset=8)], [], lineno=313, col_offset=4), Return(BinOp(BinOp(BinOp(BinOp(Call(Name('ord', Load(), lineno=315, col_offset=12), [Subscript(Name('s', Load(), lineno=315, col_offset=16), Index(Num(0, lineno=315, col_offset=18)), Load(), lineno=315, col_offset=16)], [], None, None, lineno=315, col_offset=12), LShift(), Num(24, lineno=315, col_offset=23), lineno=315, col_offset=12), BitOr(), BinOp(Call(Name('ord', Load(), lineno=315, col_offset=30), [Subscript(Name('s', Load(), lineno=315, col_offset=34), Index(Num(1, lineno=315, col_offset=36)), Load(), lineno=315, col_offset=34)], [], None, None, lineno=315, col_offset=30), LShift(), Num(16, lineno=315, col_offset=41), lineno=315, col_offset=30), lineno=315, col_offset=11), BitOr(), BinOp(Call(Name('ord', Load(), lineno=315, col_offset=48), [Subscript(Name('s', Load(), lineno=315, col_offset=52), Index(Num(2, lineno=315, col_offset=54)), Load(), lineno=315, col_offset=52)], [], None, None, lineno=315, col_offset=48), LShift(), Num(8, lineno=315, col_offset=59), lineno=315, col_offset=48), lineno=315, col_offset=45), BitOr(), Call(Name('ord', Load(), lineno=315, col_offset=64), [Subscript(Name('s', Load(), lineno=315, col_offset=68), Index(Num(3, lineno=315, col_offset=70)), Load(), lineno=315, col_offset=68)], [], None, None, lineno=315, col_offset=64), lineno=315, col_offset=62), lineno=315, col_offset=4)], [], lineno=310, col_offset=0), FunctionDef('getostype', arguments([Name('f', Param(), lineno=317, col_offset=14)], 'args', None, []), [Expr(Call(Name('getalign', Load(), lineno=318, col_offset=4), [Name('f', Load(), lineno=318, col_offset=13)], [], None, None, lineno=318, col_offset=4), lineno=318, col_offset=4), Assign([Name('s', Store(), lineno=319, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=319, col_offset=8), 'read', Load(), lineno=319, col_offset=8), [Num(4, lineno=319, col_offset=15)], [], None, None, lineno=319, col_offset=8), lineno=319, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=320, col_offset=7), [Name('s', Load(), lineno=320, col_offset=11)], [], None, None, lineno=320, col_offset=7), [Lt()], [Num(4, lineno=320, col_offset=16)], lineno=320, col_offset=7), [Raise(Name('EOFError', Load(), lineno=321, col_offset=14), BinOp(Str('in getostype', lineno=321, col_offset=24), Add(), Call(Name('str', Load(), lineno=321, col_offset=41), [Name('args', Load(), lineno=321, col_offset=45)], [], None, None, lineno=321, col_offset=41), lineno=321, col_offset=24), None, lineno=321, col_offset=8)], [], lineno=320, col_offset=4), Return(Name('s', Load(), lineno=322, col_offset=11), lineno=322, col_offset=4)], [], lineno=317, col_offset=0), FunctionDef('getpstr', arguments([Name('f', Param(), lineno=324, col_offset=12)], 'args', None, []), [Assign([Name('c', Store(), lineno=325, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=325, col_offset=8), 'read', Load(), lineno=325, col_offset=8), [Num(1, lineno=325, col_offset=15)], [], None, None, lineno=325, col_offset=8), lineno=325, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=326, col_offset=7), [Name('c', Load(), lineno=326, col_offset=11)], [], None, None, lineno=326, col_offset=7), [Lt()], [Num(1, lineno=326, col_offset=16)], lineno=326, col_offset=7), [Raise(Name('EOFError', Load(), lineno=327, col_offset=14), BinOp(Str('in getpstr[1]', lineno=327, col_offset=24), Add(), Call(Name('str', Load(), lineno=327, col_offset=42), [Name('args', Load(), lineno=327, col_offset=46)], [], None, None, lineno=327, col_offset=42), lineno=327, col_offset=24), None, lineno=327, col_offset=8)], [], lineno=326, col_offset=4), Assign([Name('nbytes', Store(), lineno=328, col_offset=4)], Call(Name('ord', Load(), lineno=328, col_offset=13), [Name('c', Load(), lineno=328, col_offset=17)], [], None, None, lineno=328, col_offset=13), lineno=328, col_offset=4), If(Compare(Name('nbytes', Load(), lineno=329, col_offset=7), [Eq()], [Num(0, lineno=329, col_offset=17)], lineno=329, col_offset=7), [Return(Str('', lineno=329, col_offset=27), lineno=329, col_offset=20)], [], lineno=329, col_offset=4), Assign([Name('s', Store(), lineno=330, col_offset=4)], Call(Attribute(Name('f', Load(), lineno=330, col_offset=8), 'read', Load(), lineno=330, col_offset=8), [Name('nbytes', Load(), lineno=330, col_offset=15)], [], None, None, lineno=330, col_offset=8), lineno=330, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=331, col_offset=7), [Name('s', Load(), lineno=331, col_offset=11)], [], None, None, lineno=331, col_offset=7), [Lt()], [Name('nbytes', Load(), lineno=331, col_offset=16)], lineno=331, col_offset=7), [Raise(Name('EOFError', Load(), lineno=332, col_offset=14), BinOp(Str('in getpstr[2]', lineno=332, col_offset=24), Add(), Call(Name('str', Load(), lineno=332, col_offset=42), [Name('args', Load(), lineno=332, col_offset=46)], [], None, None, lineno=332, col_offset=42), lineno=332, col_offset=24), None, lineno=332, col_offset=8)], [], lineno=331, col_offset=4), Return(Name('s', Load(), lineno=333, col_offset=11), lineno=333, col_offset=4)], [], lineno=324, col_offset=0), FunctionDef('getalign', arguments([Name('f', Param(), lineno=335, col_offset=13)], None, None, []), [If(BinOp(Call(Attribute(Name('f', Load(), lineno=336, col_offset=7), 'tell', Load(), lineno=336, col_offset=7), [], [], None, None, lineno=336, col_offset=7), BitAnd(), Num(1, lineno=336, col_offset=18), lineno=336, col_offset=7), [Assign([Name('c', Store(), lineno=337, col_offset=8)], Call(Attribute(Name('f', Load(), lineno=337, col_offset=12), 'read', Load(), lineno=337, col_offset=12), [Num(1, lineno=337, col_offset=19)], [], None, None, lineno=337, col_offset=12), lineno=337, col_offset=8)], [], lineno=336, col_offset=4)], [], lineno=335, col_offset=0), FunctionDef('getlist', arguments([Name('f', Param(), lineno=341, col_offset=12), Name('description', Param(), lineno=341, col_offset=15), Name('getitem', Param(), lineno=341, col_offset=28)], None, None, []), [Assign([Name('count', Store(), lineno=342, col_offset=4)], Call(Name('getword', Load(), lineno=342, col_offset=12), [Name('f', Load(), lineno=342, col_offset=20)], [], None, None, lineno=342, col_offset=12), lineno=342, col_offset=4), Assign([Name('list', Store(), lineno=343, col_offset=4)], List([], Load(), lineno=343, col_offset=11), lineno=343, col_offset=4), For(Name('i', Store(), lineno=344, col_offset=8), Call(Name('range', Load(), lineno=344, col_offset=13), [Name('count', Load(), lineno=344, col_offset=19)], [], None, None, lineno=344, col_offset=13), [Expr(Call(Attribute(Name('list', Load(), lineno=345, col_offset=8), 'append', Load(), lineno=345, col_offset=8), [Call(Name('generic', Load(), lineno=345, col_offset=20), [Name('getitem', Load(), lineno=345, col_offset=28), Name('f', Load(), lineno=345, col_offset=37)], [], None, None, lineno=345, col_offset=20)], [], None, None, lineno=345, col_offset=8), lineno=345, col_offset=8), Expr(Call(Name('getalign', Load(), lineno=346, col_offset=8), [Name('f', Load(), lineno=346, col_offset=17)], [], None, None, lineno=346, col_offset=8), lineno=346, col_offset=8)], [], lineno=344, col_offset=4), Return(Name('list', Load(), lineno=347, col_offset=11), lineno=347, col_offset=4)], [], lineno=341, col_offset=0), FunctionDef('alt_generic', arguments([Name('what', Param(), lineno=349, col_offset=16), Name('f', Param(), lineno=349, col_offset=22)], 'args', None, []), [Print(None, [Str('generic', lineno=350, col_offset=10), Call(Name('repr', Load(), lineno=350, col_offset=21), [Name('what', Load(), lineno=350, col_offset=26)], [], None, None, lineno=350, col_offset=21), Name('args', Load(), lineno=350, col_offset=33)], True, lineno=350, col_offset=4), Assign([Name('res', Store(), lineno=351, col_offset=4)], Call(Name('vageneric', Load(), lineno=351, col_offset=10), [Name('what', Load(), lineno=351, col_offset=20), Name('f', Load(), lineno=351, col_offset=26), Name('args', Load(), lineno=351, col_offset=29)], [], None, None, lineno=351, col_offset=10), lineno=351, col_offset=4), Print(None, [Str('->', lineno=352, col_offset=10), Call(Name('repr', Load(), lineno=352, col_offset=16), [Name('res', Load(), lineno=352, col_offset=21)], [], None, None, lineno=352, col_offset=16)], True, lineno=352, col_offset=4), Return(Name('res', Load(), lineno=353, col_offset=11), lineno=353, col_offset=4)], [], lineno=349, col_offset=0), FunctionDef('generic', arguments([Name('what', Param(), lineno=355, col_offset=12), Name('f', Param(), lineno=355, col_offset=18)], 'args', None, []), [If(Compare(Call(Name('type', Load(), lineno=356, col_offset=7), [Name('what', Load(), lineno=356, col_offset=12)], [], None, None, lineno=356, col_offset=7), [Eq()], [Attribute(Name('types', Load(), lineno=356, col_offset=21), 'FunctionType', Load(), lineno=356, col_offset=21)], lineno=356, col_offset=7), [Return(Call(Name('apply', Load(), lineno=357, col_offset=15), [Name('what', Load(), lineno=357, col_offset=21), BinOp(Tuple([Name('f', Load(), lineno=357, col_offset=28)], Load(), lineno=357, col_offset=28), Add(), Name('args', Load(), lineno=357, col_offset=34), lineno=357, col_offset=27)], [], None, None, lineno=357, col_offset=15), lineno=357, col_offset=8)], [], lineno=356, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=358, col_offset=7), [Name('what', Load(), lineno=358, col_offset=12)], [], None, None, lineno=358, col_offset=7), [Eq()], [Attribute(Name('types', Load(), lineno=358, col_offset=21), 'ListType', Load(), lineno=358, col_offset=21)], lineno=358, col_offset=7), [Assign([Name('record', Store(), lineno=359, col_offset=8)], List([], Load(), lineno=359, col_offset=17), lineno=359, col_offset=8), For(Name('thing', Store(), lineno=360, col_offset=12), Name('what', Load(), lineno=360, col_offset=21), [Assign([Name('item', Store(), lineno=361, col_offset=12)], Call(Name('apply', Load(), lineno=361, col_offset=19), [Name('generic', Load(), lineno=361, col_offset=25), BinOp(BinOp(Subscript(Name('thing', Load(), lineno=361, col_offset=34), Slice(None, Num(1, lineno=361, col_offset=41), None), Load(), lineno=361, col_offset=34), Add(), Tuple([Name('f', Load(), lineno=361, col_offset=47)], Load(), lineno=361, col_offset=47), lineno=361, col_offset=34), Add(), Subscript(Name('thing', Load(), lineno=361, col_offset=53), Slice(Num(1, lineno=361, col_offset=59), None, None), Load(), lineno=361, col_offset=53), lineno=361, col_offset=51)], [], None, None, lineno=361, col_offset=19), lineno=361, col_offset=12), Expr(Call(Attribute(Name('record', Load(), lineno=362, col_offset=12), 'append', Load(), lineno=362, col_offset=12), [Tuple([Subscript(Name('thing', Load(), lineno=362, col_offset=27), Index(Num(1, lineno=362, col_offset=33)), Load(), lineno=362, col_offset=27), Name('item', Load(), lineno=362, col_offset=37)], Load(), lineno=362, col_offset=27)], [], None, None, lineno=362, col_offset=12), lineno=362, col_offset=12)], [], lineno=360, col_offset=8), Return(Name('record', Load(), lineno=363, col_offset=15), lineno=363, col_offset=8)], [], lineno=358, col_offset=4), Return(BinOp(Str('BAD GENERIC ARGS: %r', lineno=364, col_offset=11), Mod(), Tuple([Name('what', Load(), lineno=364, col_offset=37)], Load(), lineno=364, col_offset=37), lineno=364, col_offset=11), lineno=364, col_offset=4)], [], lineno=355, col_offset=0), Assign([Name('getdata', Store(), lineno=366, col_offset=0)], List([Tuple([Name('getostype', Load(), lineno=367, col_offset=5), Str('type', lineno=367, col_offset=16)], Load(), lineno=367, col_offset=5), Tuple([Name('getpstr', Load(), lineno=368, col_offset=5), Str('description', lineno=368, col_offset=14)], Load(), lineno=368, col_offset=5), Tuple([Name('getword', Load(), lineno=369, col_offset=5), Str('flags', lineno=369, col_offset=14)], Load(), lineno=369, col_offset=5)], Load(), lineno=366, col_offset=10), lineno=366, col_offset=0), Assign([Name('getargument', Store(), lineno=371, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=372, col_offset=5), Str('name', lineno=372, col_offset=14)], Load(), lineno=372, col_offset=5), Tuple([Name('getostype', Load(), lineno=373, col_offset=5), Str('keyword', lineno=373, col_offset=16)], Load(), lineno=373, col_offset=5), Tuple([Name('getdata', Load(), lineno=374, col_offset=5), Str('what', lineno=374, col_offset=14)], Load(), lineno=374, col_offset=5)], Load(), lineno=371, col_offset=14), lineno=371, col_offset=0), Assign([Name('getevent', Store(), lineno=376, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=377, col_offset=5), Str('name', lineno=377, col_offset=14)], Load(), lineno=377, col_offset=5), Tuple([Name('getpstr', Load(), lineno=378, col_offset=5), Str('description', lineno=378, col_offset=14)], Load(), lineno=378, col_offset=5), Tuple([Name('getostype', Load(), lineno=379, col_offset=5), Str('suite code', lineno=379, col_offset=16)], Load(), lineno=379, col_offset=5), Tuple([Name('getostype', Load(), lineno=380, col_offset=5), Str('event code', lineno=380, col_offset=16)], Load(), lineno=380, col_offset=5), Tuple([Name('getdata', Load(), lineno=381, col_offset=5), Str('returns', lineno=381, col_offset=14)], Load(), lineno=381, col_offset=5), Tuple([Name('getdata', Load(), lineno=382, col_offset=5), Str('accepts', lineno=382, col_offset=14)], Load(), lineno=382, col_offset=5), Tuple([Name('getlist', Load(), lineno=383, col_offset=5), Str('optional arguments', lineno=383, col_offset=14), Name('getargument', Load(), lineno=383, col_offset=36)], Load(), lineno=383, col_offset=5)], Load(), lineno=376, col_offset=11), lineno=376, col_offset=0), Assign([Name('getproperty', Store(), lineno=385, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=386, col_offset=5), Str('name', lineno=386, col_offset=14)], Load(), lineno=386, col_offset=5), Tuple([Name('getostype', Load(), lineno=387, col_offset=5), Str('code', lineno=387, col_offset=16)], Load(), lineno=387, col_offset=5), Tuple([Name('getdata', Load(), lineno=388, col_offset=5), Str('what', lineno=388, col_offset=14)], Load(), lineno=388, col_offset=5)], Load(), lineno=385, col_offset=14), lineno=385, col_offset=0), Assign([Name('getelement', Store(), lineno=390, col_offset=0)], List([Tuple([Name('getostype', Load(), lineno=391, col_offset=5), Str('type', lineno=391, col_offset=16)], Load(), lineno=391, col_offset=5), Tuple([Name('getlist', Load(), lineno=392, col_offset=5), Str('keyform', lineno=392, col_offset=14), Name('getostype', Load(), lineno=392, col_offset=25)], Load(), lineno=392, col_offset=5)], Load(), lineno=390, col_offset=13), lineno=390, col_offset=0), Assign([Name('getclass', Store(), lineno=394, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=395, col_offset=5), Str('name', lineno=395, col_offset=14)], Load(), lineno=395, col_offset=5), Tuple([Name('getostype', Load(), lineno=396, col_offset=5), Str('class code', lineno=396, col_offset=16)], Load(), lineno=396, col_offset=5), Tuple([Name('getpstr', Load(), lineno=397, col_offset=5), Str('description', lineno=397, col_offset=14)], Load(), lineno=397, col_offset=5), Tuple([Name('getlist', Load(), lineno=398, col_offset=5), Str('properties', lineno=398, col_offset=14), Name('getproperty', Load(), lineno=398, col_offset=28)], Load(), lineno=398, col_offset=5), Tuple([Name('getlist', Load(), lineno=399, col_offset=5), Str('elements', lineno=399, col_offset=14), Name('getelement', Load(), lineno=399, col_offset=26)], Load(), lineno=399, col_offset=5)], Load(), lineno=394, col_offset=11), lineno=394, col_offset=0), Assign([Name('getcomparison', Store(), lineno=401, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=402, col_offset=5), Str('operator name', lineno=402, col_offset=14)], Load(), lineno=402, col_offset=5), Tuple([Name('getostype', Load(), lineno=403, col_offset=5), Str('operator ID', lineno=403, col_offset=16)], Load(), lineno=403, col_offset=5), Tuple([Name('getpstr', Load(), lineno=404, col_offset=5), Str('operator comment', lineno=404, col_offset=14)], Load(), lineno=404, col_offset=5)], Load(), lineno=401, col_offset=16), lineno=401, col_offset=0), Assign([Name('getenumerator', Store(), lineno=406, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=407, col_offset=5), Str('enumerator name', lineno=407, col_offset=14)], Load(), lineno=407, col_offset=5), Tuple([Name('getostype', Load(), lineno=408, col_offset=5), Str('enumerator ID', lineno=408, col_offset=16)], Load(), lineno=408, col_offset=5), Tuple([Name('getpstr', Load(), lineno=409, col_offset=5), Str('enumerator comment', lineno=409, col_offset=14)], Load(), lineno=409, col_offset=5)], Load(), lineno=406, col_offset=16), lineno=406, col_offset=0), Assign([Name('getenumeration', Store(), lineno=411, col_offset=0)], List([Tuple([Name('getostype', Load(), lineno=412, col_offset=5), Str('enumeration ID', lineno=412, col_offset=16)], Load(), lineno=412, col_offset=5), Tuple([Name('getlist', Load(), lineno=413, col_offset=5), Str('enumerator', lineno=413, col_offset=14), Name('getenumerator', Load(), lineno=413, col_offset=28)], Load(), lineno=413, col_offset=5)], Load(), lineno=411, col_offset=17), lineno=411, col_offset=0), Assign([Name('getsuite', Store(), lineno=415, col_offset=0)], List([Tuple([Name('getpstr', Load(), lineno=416, col_offset=5), Str('suite name', lineno=416, col_offset=14)], Load(), lineno=416, col_offset=5), Tuple([Name('getpstr', Load(), lineno=417, col_offset=5), Str('suite description', lineno=417, col_offset=14)], Load(), lineno=417, col_offset=5), Tuple([Name('getostype', Load(), lineno=418, col_offset=5), Str('suite ID', lineno=418, col_offset=16)], Load(), lineno=418, col_offset=5), Tuple([Name('getword', Load(), lineno=419, col_offset=5), Str('suite level', lineno=419, col_offset=14)], Load(), lineno=419, col_offset=5), Tuple([Name('getword', Load(), lineno=420, col_offset=5), Str('suite version', lineno=420, col_offset=14)], Load(), lineno=420, col_offset=5), Tuple([Name('getlist', Load(), lineno=421, col_offset=5), Str('events', lineno=421, col_offset=14), Name('getevent', Load(), lineno=421, col_offset=24)], Load(), lineno=421, col_offset=5), Tuple([Name('getlist', Load(), lineno=422, col_offset=5), Str('classes', lineno=422, col_offset=14), Name('getclass', Load(), lineno=422, col_offset=25)], Load(), lineno=422, col_offset=5), Tuple([Name('getlist', Load(), lineno=423, col_offset=5), Str('comparisons', lineno=423, col_offset=14), Name('getcomparison', Load(), lineno=423, col_offset=29)], Load(), lineno=423, col_offset=5), Tuple([Name('getlist', Load(), lineno=424, col_offset=5), Str('enumerations', lineno=424, col_offset=14), Name('getenumeration', Load(), lineno=424, col_offset=30)], Load(), lineno=424, col_offset=5)], Load(), lineno=415, col_offset=11), lineno=415, col_offset=0), Assign([Name('getaete', Store(), lineno=426, col_offset=0)], List([Tuple([Name('getword', Load(), lineno=427, col_offset=5), Str('major/minor version in BCD', lineno=427, col_offset=14)], Load(), lineno=427, col_offset=5), Tuple([Name('getword', Load(), lineno=428, col_offset=5), Str('language code', lineno=428, col_offset=14)], Load(), lineno=428, col_offset=5), Tuple([Name('getword', Load(), lineno=429, col_offset=5), Str('script code', lineno=429, col_offset=14)], Load(), lineno=429, col_offset=5), Tuple([Name('getlist', Load(), lineno=430, col_offset=5), Str('suites', lineno=430, col_offset=14), Name('getsuite', Load(), lineno=430, col_offset=24)], Load(), lineno=430, col_offset=5)], Load(), lineno=426, col_offset=10), lineno=426, col_offset=0), FunctionDef('compileaete', arguments([Name('aete', Param(), lineno=433, col_offset=16), Name('resinfo', Param(), lineno=433, col_offset=22), Name('fname', Param(), lineno=433, col_offset=31), Name('output', Param(), lineno=433, col_offset=38), Name('basepkgname', Param(), lineno=433, col_offset=51), Name('edit_modnames', Param(), lineno=434, col_offset=8), Name('creatorsignature', Param(), lineno=434, col_offset=28), Name('verbose', Param(), lineno=434, col_offset=51)], None, None, [Name('None', Load(), lineno=433, col_offset=45), Name('None', Load(), lineno=433, col_offset=63), Name('None', Load(), lineno=434, col_offset=22), Name('None', Load(), lineno=434, col_offset=45), Name('None', Load(), lineno=434, col_offset=59)]), [Expr(Str('Generate code for a full aete resource. fname passed for doc purposes', lineno=435, col_offset=4), lineno=435, col_offset=4), Assign([List([Name('version', Store(), lineno=436, col_offset=5), Name('language', Store(), lineno=436, col_offset=14), Name('script', Store(), lineno=436, col_offset=24), Name('suites', Store(), lineno=436, col_offset=32)], Store(), lineno=436, col_offset=4)], Name('aete', Load(), lineno=436, col_offset=42), lineno=436, col_offset=4), Assign([Tuple([Name('major', Store(), lineno=437, col_offset=4), Name('minor', Store(), lineno=437, col_offset=11)], Store(), lineno=437, col_offset=4)], Call(Name('divmod', Load(), lineno=437, col_offset=19), [Name('version', Load(), lineno=437, col_offset=26), Num(256, lineno=437, col_offset=35)], [], None, None, lineno=437, col_offset=19), lineno=437, col_offset=4), If(UnaryOp(Not(), Name('creatorsignature', Load(), lineno=438, col_offset=11), lineno=438, col_offset=7), [Assign([Tuple([Name('creatorsignature', Store(), lineno=439, col_offset=8), Name('dummy', Store(), lineno=439, col_offset=26)], Store(), lineno=439, col_offset=8)], Call(Attribute(Name('MacOS', Load(), lineno=439, col_offset=34), 'GetCreatorAndType', Load(), lineno=439, col_offset=34), [Name('fname', Load(), lineno=439, col_offset=58)], [], None, None, lineno=439, col_offset=34), lineno=439, col_offset=8)], [], lineno=438, col_offset=4), Assign([Name('packagename', Store(), lineno=440, col_offset=4)], Call(Name('identify', Load(), lineno=440, col_offset=18), [Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=440, col_offset=27), 'path', Load(), lineno=440, col_offset=27), 'splitext', Load(), lineno=440, col_offset=27), [Call(Attribute(Attribute(Name('os', Load(), lineno=440, col_offset=44), 'path', Load(), lineno=440, col_offset=44), 'basename', Load(), lineno=440, col_offset=44), [Name('fname', Load(), lineno=440, col_offset=61)], [], None, None, lineno=440, col_offset=44)], [], None, None, lineno=440, col_offset=27), Index(Num(0, lineno=440, col_offset=69)), Load(), lineno=440, col_offset=27)], [], None, None, lineno=440, col_offset=18), lineno=440, col_offset=4), If(Name('language', Load(), lineno=441, col_offset=7), [Assign([Name('packagename', Store(), lineno=442, col_offset=8)], BinOp(Name('packagename', Load(), lineno=442, col_offset=22), Add(), BinOp(Str('_lang%d', lineno=442, col_offset=34), Mod(), Name('language', Load(), lineno=442, col_offset=44), lineno=442, col_offset=34), lineno=442, col_offset=22), lineno=442, col_offset=8)], [], lineno=441, col_offset=4), If(Name('script', Load(), lineno=443, col_offset=7), [Assign([Name('packagename', Store(), lineno=444, col_offset=8)], BinOp(Name('packagename', Load(), lineno=444, col_offset=22), Add(), BinOp(Str('_script%d', lineno=444, col_offset=34), Mod(), Name('script', Load(), lineno=444, col_offset=46), lineno=444, col_offset=34), lineno=444, col_offset=22), lineno=444, col_offset=8)], [], lineno=443, col_offset=4), If(Compare(Call(Name('len', Load(), lineno=445, col_offset=7), [Name('packagename', Load(), lineno=445, col_offset=11)], [], None, None, lineno=445, col_offset=7), [Gt()], [Num(27, lineno=445, col_offset=26)], lineno=445, col_offset=7), [Assign([Name('packagename', Store(), lineno=446, col_offset=8)], Subscript(Name('packagename', Load(), lineno=446, col_offset=22), Slice(None, Num(27, lineno=446, col_offset=35), None), Load(), lineno=446, col_offset=22), lineno=446, col_offset=8)], [], lineno=445, col_offset=4), If(Name('output', Load(), lineno=447, col_offset=7), [If(UnaryOp(Not(), Call(Attribute(Attribute(Name('os', Load(), lineno=449, col_offset=15), 'path', Load(), lineno=449, col_offset=15), 'exists', Load(), lineno=449, col_offset=15), [Name('output', Load(), lineno=449, col_offset=30)], [], None, None, lineno=449, col_offset=15), lineno=449, col_offset=11), [Expr(Call(Attribute(Name('os', Load(), lineno=450, col_offset=12), 'mkdir', Load(), lineno=450, col_offset=12), [Name('output', Load(), lineno=450, col_offset=21)], [], None, None, lineno=450, col_offset=12), lineno=450, col_offset=12)], [], lineno=449, col_offset=8), Assign([Name('pathname', Store(), lineno=451, col_offset=8)], Name('output', Load(), lineno=451, col_offset=19), lineno=451, col_offset=8)], [Assign([Name('pathname', Store(), lineno=453, col_offset=8)], Call(Attribute(Name('EasyDialogs', Load(), lineno=453, col_offset=19), 'AskFolder', Load(), lineno=453, col_offset=19), [], [keyword('message', BinOp(Str('Create and select package folder for %s', lineno=453, col_offset=49), Mod(), Name('packagename', Load(), lineno=453, col_offset=91), lineno=453, col_offset=49)), keyword('defaultLocation', Name('DEFAULT_USER_PACKAGEFOLDER', Load(), lineno=454, col_offset=28))], None, None, lineno=453, col_offset=19), lineno=453, col_offset=8), Assign([Name('output', Store(), lineno=455, col_offset=8)], Name('pathname', Load(), lineno=455, col_offset=17), lineno=455, col_offset=8)], lineno=447, col_offset=4), If(UnaryOp(Not(), Name('pathname', Load(), lineno=456, col_offset=11), lineno=456, col_offset=7), [Return(None, lineno=457, col_offset=8)], [], lineno=456, col_offset=4), Assign([Name('packagename', Store(), lineno=458, col_offset=4)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=458, col_offset=18), 'path', Load(), lineno=458, col_offset=18), 'split', Load(), lineno=458, col_offset=18), [Call(Attribute(Attribute(Name('os', Load(), lineno=458, col_offset=32), 'path', Load(), lineno=458, col_offset=32), 'normpath', Load(), lineno=458, col_offset=32), [Name('pathname', Load(), lineno=458, col_offset=49)], [], None, None, lineno=458, col_offset=32)], [], None, None, lineno=458, col_offset=18), Index(Num(1, lineno=458, col_offset=60)), Load(), lineno=458, col_offset=18), lineno=458, col_offset=4), If(UnaryOp(Not(), Name('basepkgname', Load(), lineno=459, col_offset=11), lineno=459, col_offset=7), [Assign([Name('basepkgname', Store(), lineno=460, col_offset=8)], Call(Attribute(Name('EasyDialogs', Load(), lineno=460, col_offset=22), 'AskFolder', Load(), lineno=460, col_offset=22), [], [keyword('message', Str('Package folder for base suite (usually StdSuites)', lineno=460, col_offset=52)), keyword('defaultLocation', Name('DEFAULT_STANDARD_PACKAGEFOLDER', Load(), lineno=461, col_offset=28))], None, None, lineno=460, col_offset=22), lineno=460, col_offset=8)], [], lineno=459, col_offset=4), If(Name('basepkgname', Load(), lineno=462, col_offset=7), [Assign([Tuple([Name('dirname', Store(), lineno=463, col_offset=8), Name('basepkgname', Store(), lineno=463, col_offset=17)], Store(), lineno=463, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=463, col_offset=31), 'path', Load(), lineno=463, col_offset=31), 'split', Load(), lineno=463, col_offset=31), [Call(Attribute(Attribute(Name('os', Load(), lineno=463, col_offset=45), 'path', Load(), lineno=463, col_offset=45), 'normpath', Load(), lineno=463, col_offset=45), [Name('basepkgname', Load(), lineno=463, col_offset=62)], [], None, None, lineno=463, col_offset=45)], [], None, None, lineno=463, col_offset=31), lineno=463, col_offset=8), If(BoolOp(And(), [Name('dirname', Load(), lineno=464, col_offset=11), UnaryOp(Not(), Compare(Name('dirname', Load(), lineno=464, col_offset=27), [In()], [Attribute(Name('sys', Load(), lineno=464, col_offset=38), 'path', Load(), lineno=464, col_offset=38)], lineno=464, col_offset=27), lineno=464, col_offset=23)], lineno=464, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=465, col_offset=12), 'path', Load(), lineno=465, col_offset=12), 'insert', Load(), lineno=465, col_offset=12), [Num(0, lineno=465, col_offset=28), Name('dirname', Load(), lineno=465, col_offset=31)], [], None, None, lineno=465, col_offset=12), lineno=465, col_offset=12)], [], lineno=464, col_offset=8), Assign([Name('basepackage', Store(), lineno=466, col_offset=8)], Call(Name('__import__', Load(), lineno=466, col_offset=22), [Name('basepkgname', Load(), lineno=466, col_offset=33)], [], None, None, lineno=466, col_offset=22), lineno=466, col_offset=8)], [Assign([Name('basepackage', Store(), lineno=468, col_offset=8)], Name('None', Load(), lineno=468, col_offset=22), lineno=468, col_offset=8)], lineno=462, col_offset=4), Assign([Name('suitelist', Store(), lineno=469, col_offset=4)], List([], Load(), lineno=469, col_offset=16), lineno=469, col_offset=4), Assign([Name('allprecompinfo', Store(), lineno=470, col_offset=4)], List([], Load(), lineno=470, col_offset=21), lineno=470, col_offset=4), Assign([Name('allsuites', Store(), lineno=471, col_offset=4)], List([], Load(), lineno=471, col_offset=16), lineno=471, col_offset=4), For(Name('suite', Store(), lineno=472, col_offset=8), Name('suites', Load(), lineno=472, col_offset=17), [Assign([Name('compiler', Store(), lineno=473, col_offset=8)], Call(Name('SuiteCompiler', Load(), lineno=473, col_offset=19), [Name('suite', Load(), lineno=473, col_offset=33), Name('basepackage', Load(), lineno=473, col_offset=40), Name('output', Load(), lineno=473, col_offset=53), Name('edit_modnames', Load(), lineno=473, col_offset=61), Name('verbose', Load(), lineno=473, col_offset=76)], [], None, None, lineno=473, col_offset=19), lineno=473, col_offset=8), Assign([Tuple([Name('code', Store(), lineno=474, col_offset=8), Name('modname', Store(), lineno=474, col_offset=14), Name('precompinfo', Store(), lineno=474, col_offset=23)], Store(), lineno=474, col_offset=8)], Call(Attribute(Name('compiler', Load(), lineno=474, col_offset=37), 'precompilesuite', Load(), lineno=474, col_offset=37), [], [], None, None, lineno=474, col_offset=37), lineno=474, col_offset=8), If(UnaryOp(Not(), Name('code', Load(), lineno=475, col_offset=15), lineno=475, col_offset=11), [Continue( lineno=476, col_offset=12)], [], lineno=475, col_offset=8), Assign([Name('allprecompinfo', Store(), lineno=477, col_offset=8)], BinOp(Name('allprecompinfo', Load(), lineno=477, col_offset=25), Add(), Name('precompinfo', Load(), lineno=477, col_offset=42), lineno=477, col_offset=25), lineno=477, col_offset=8), Assign([Name('suiteinfo', Store(), lineno=478, col_offset=8)], Tuple([Name('suite', Load(), lineno=478, col_offset=20), Name('pathname', Load(), lineno=478, col_offset=27), Name('modname', Load(), lineno=478, col_offset=37)], Load(), lineno=478, col_offset=20), lineno=478, col_offset=8), Expr(Call(Attribute(Name('suitelist', Load(), lineno=479, col_offset=8), 'append', Load(), lineno=479, col_offset=8), [Tuple([Name('code', Load(), lineno=479, col_offset=26), Name('modname', Load(), lineno=479, col_offset=32)], Load(), lineno=479, col_offset=26)], [], None, None, lineno=479, col_offset=8), lineno=479, col_offset=8), Expr(Call(Attribute(Name('allsuites', Load(), lineno=480, col_offset=8), 'append', Load(), lineno=480, col_offset=8), [Name('compiler', Load(), lineno=480, col_offset=25)], [], None, None, lineno=480, col_offset=8), lineno=480, col_offset=8)], [], lineno=472, col_offset=4), For(Name('compiler', Store(), lineno=481, col_offset=8), Name('allsuites', Load(), lineno=481, col_offset=20), [Expr(Call(Attribute(Name('compiler', Load(), lineno=482, col_offset=8), 'compilesuite', Load(), lineno=482, col_offset=8), [Name('major', Load(), lineno=482, col_offset=30), Name('minor', Load(), lineno=482, col_offset=37), Name('language', Load(), lineno=482, col_offset=44), Name('script', Load(), lineno=482, col_offset=54), Name('fname', Load(), lineno=482, col_offset=62), Name('allprecompinfo', Load(), lineno=482, col_offset=69)], [], None, None, lineno=482, col_offset=8), lineno=482, col_offset=8)], [], lineno=481, col_offset=4), Assign([Name('initfilename', Store(), lineno=483, col_offset=4)], Call(Attribute(Attribute(Name('os', Load(), lineno=483, col_offset=19), 'path', Load(), lineno=483, col_offset=19), 'join', Load(), lineno=483, col_offset=19), [Name('output', Load(), lineno=483, col_offset=32), Str('__init__.py', lineno=483, col_offset=40)], [], None, None, lineno=483, col_offset=19), lineno=483, col_offset=4), Assign([Name('fp', Store(), lineno=484, col_offset=4)], Call(Name('open', Load(), lineno=484, col_offset=9), [Name('initfilename', Load(), lineno=484, col_offset=14), Str('w', lineno=484, col_offset=28)], [], None, None, lineno=484, col_offset=9), lineno=484, col_offset=4), Expr(Call(Attribute(Name('MacOS', Load(), lineno=485, col_offset=4), 'SetCreatorAndType', Load(), lineno=485, col_offset=4), [Name('initfilename', Load(), lineno=485, col_offset=28), Str('Pyth', lineno=485, col_offset=42), Str('TEXT', lineno=485, col_offset=50)], [], None, None, lineno=485, col_offset=4), lineno=485, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=486, col_offset=4), 'write', Load(), lineno=486, col_offset=4), [Str('"""\n', lineno=486, col_offset=13)], [], None, None, lineno=486, col_offset=4), lineno=486, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=487, col_offset=4), 'write', Load(), lineno=487, col_offset=4), [BinOp(Str('Package generated from %s\n', lineno=487, col_offset=13), Mod(), Call(Name('ascii', Load(), lineno=487, col_offset=43), [Name('fname', Load(), lineno=487, col_offset=49)], [], None, None, lineno=487, col_offset=43), lineno=487, col_offset=13)], [], None, None, lineno=487, col_offset=4), lineno=487, col_offset=4), If(Name('resinfo', Load(), lineno=488, col_offset=7), [Expr(Call(Attribute(Name('fp', Load(), lineno=489, col_offset=8), 'write', Load(), lineno=489, col_offset=8), [BinOp(Str('Resource %s resid %d %s\n', lineno=489, col_offset=17), Mod(), Tuple([Call(Name('ascii', Load(), lineno=489, col_offset=46), [Subscript(Name('resinfo', Load(), lineno=489, col_offset=52), Index(Num(1, lineno=489, col_offset=60)), Load(), lineno=489, col_offset=52)], [], None, None, lineno=489, col_offset=46), Subscript(Name('resinfo', Load(), lineno=489, col_offset=65), Index(Num(0, lineno=489, col_offset=73)), Load(), lineno=489, col_offset=65), Call(Name('ascii', Load(), lineno=489, col_offset=77), [Subscript(Name('resinfo', Load(), lineno=489, col_offset=83), Index(Num(2, lineno=489, col_offset=91)), Load(), lineno=489, col_offset=83)], [], None, None, lineno=489, col_offset=77)], Load(), lineno=489, col_offset=46), lineno=489, col_offset=17)], [], None, None, lineno=489, col_offset=8), lineno=489, col_offset=8)], [], lineno=488, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=490, col_offset=4), 'write', Load(), lineno=490, col_offset=4), [Str('"""\n', lineno=490, col_offset=13)], [], None, None, lineno=490, col_offset=4), lineno=490, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=491, col_offset=4), 'write', Load(), lineno=491, col_offset=4), [Str('import aetools\n', lineno=491, col_offset=13)], [], None, None, lineno=491, col_offset=4), lineno=491, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=492, col_offset=4), 'write', Load(), lineno=492, col_offset=4), [Str('Error = aetools.Error\n', lineno=492, col_offset=13)], [], None, None, lineno=492, col_offset=4), lineno=492, col_offset=4), Expr(Call(Attribute(Name('suitelist', Load(), lineno=493, col_offset=4), 'sort', Load(), lineno=493, col_offset=4), [], [], None, None, lineno=493, col_offset=4), lineno=493, col_offset=4), For(Tuple([Name('code', Store(), lineno=494, col_offset=8), Name('modname', Store(), lineno=494, col_offset=14)], Store(), lineno=494, col_offset=8), Name('suitelist', Load(), lineno=494, col_offset=25), [Expr(Call(Attribute(Name('fp', Load(), lineno=495, col_offset=8), 'write', Load(), lineno=495, col_offset=8), [BinOp(Str('import %s\n', lineno=495, col_offset=17), Mod(), Name('modname', Load(), lineno=495, col_offset=33), lineno=495, col_offset=17)], [], None, None, lineno=495, col_offset=8), lineno=495, col_offset=8)], [], lineno=494, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=496, col_offset=4), 'write', Load(), lineno=496, col_offset=4), [Str('\n\n_code_to_module = {\n', lineno=496, col_offset=13)], [], None, None, lineno=496, col_offset=4), lineno=496, col_offset=4), For(Tuple([Name('code', Store(), lineno=497, col_offset=8), Name('modname', Store(), lineno=497, col_offset=14)], Store(), lineno=497, col_offset=8), Name('suitelist', Load(), lineno=497, col_offset=25), [Expr(Call(Attribute(Name('fp', Load(), lineno=498, col_offset=8), 'write', Load(), lineno=498, col_offset=8), [BinOp(Str("    '%s' : %s,\n", lineno=498, col_offset=17), Mod(), Tuple([Call(Name('ascii', Load(), lineno=498, col_offset=37), [Name('code', Load(), lineno=498, col_offset=43)], [], None, None, lineno=498, col_offset=37), Name('modname', Load(), lineno=498, col_offset=50)], Load(), lineno=498, col_offset=37), lineno=498, col_offset=17)], [], None, None, lineno=498, col_offset=8), lineno=498, col_offset=8)], [], lineno=497, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=499, col_offset=4), 'write', Load(), lineno=499, col_offset=4), [Str('}\n\n', lineno=499, col_offset=13)], [], None, None, lineno=499, col_offset=4), lineno=499, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=500, col_offset=4), 'write', Load(), lineno=500, col_offset=4), [Str('\n\n_code_to_fullname = {\n', lineno=500, col_offset=13)], [], None, None, lineno=500, col_offset=4), lineno=500, col_offset=4), For(Tuple([Name('code', Store(), lineno=501, col_offset=8), Name('modname', Store(), lineno=501, col_offset=14)], Store(), lineno=501, col_offset=8), Name('suitelist', Load(), lineno=501, col_offset=25), [Expr(Call(Attribute(Name('fp', Load(), lineno=502, col_offset=8), 'write', Load(), lineno=502, col_offset=8), [BinOp(Str("    '%s' : ('%s.%s', '%s'),\n", lineno=502, col_offset=17), Mod(), Tuple([Call(Name('ascii', Load(), lineno=502, col_offset=50), [Name('code', Load(), lineno=502, col_offset=56)], [], None, None, lineno=502, col_offset=50), Name('packagename', Load(), lineno=502, col_offset=63), Name('modname', Load(), lineno=502, col_offset=76), Name('modname', Load(), lineno=502, col_offset=85)], Load(), lineno=502, col_offset=50), lineno=502, col_offset=17)], [], None, None, lineno=502, col_offset=8), lineno=502, col_offset=8)], [], lineno=501, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=503, col_offset=4), 'write', Load(), lineno=503, col_offset=4), [Str('}\n\n', lineno=503, col_offset=13)], [], None, None, lineno=503, col_offset=4), lineno=503, col_offset=4), For(Tuple([Name('code', Store(), lineno=504, col_offset=8), Name('modname', Store(), lineno=504, col_offset=14)], Store(), lineno=504, col_offset=8), Name('suitelist', Load(), lineno=504, col_offset=25), [Expr(Call(Attribute(Name('fp', Load(), lineno=505, col_offset=8), 'write', Load(), lineno=505, col_offset=8), [BinOp(Str('from %s import *\n', lineno=505, col_offset=17), Mod(), Name('modname', Load(), lineno=505, col_offset=38), lineno=505, col_offset=17)], [], None, None, lineno=505, col_offset=8), lineno=505, col_offset=8)], [], lineno=504, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=508, col_offset=4), 'write', Load(), lineno=508, col_offset=4), [Str('\ndef getbaseclasses(v):\n', lineno=508, col_offset=13)], [], None, None, lineno=508, col_offset=4), lineno=508, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=509, col_offset=4), 'write', Load(), lineno=509, col_offset=4), [Str("    if not getattr(v, '_propdict', None):\n", lineno=509, col_offset=13)], [], None, None, lineno=509, col_offset=4), lineno=509, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=510, col_offset=4), 'write', Load(), lineno=510, col_offset=4), [Str('        v._propdict = {}\n', lineno=510, col_offset=13)], [], None, None, lineno=510, col_offset=4), lineno=510, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=511, col_offset=4), 'write', Load(), lineno=511, col_offset=4), [Str('        v._elemdict = {}\n', lineno=511, col_offset=13)], [], None, None, lineno=511, col_offset=4), lineno=511, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=512, col_offset=4), 'write', Load(), lineno=512, col_offset=4), [Str("        for superclassname in getattr(v, '_superclassnames', []):\n", lineno=512, col_offset=13)], [], None, None, lineno=512, col_offset=4), lineno=512, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=513, col_offset=4), 'write', Load(), lineno=513, col_offset=4), [Str('            superclass = eval(superclassname)\n', lineno=513, col_offset=13)], [], None, None, lineno=513, col_offset=4), lineno=513, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=514, col_offset=4), 'write', Load(), lineno=514, col_offset=4), [Str('            getbaseclasses(superclass)\n', lineno=514, col_offset=13)], [], None, None, lineno=514, col_offset=4), lineno=514, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=515, col_offset=4), 'write', Load(), lineno=515, col_offset=4), [Str("            v._propdict.update(getattr(superclass, '_propdict', {}))\n", lineno=515, col_offset=13)], [], None, None, lineno=515, col_offset=4), lineno=515, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=516, col_offset=4), 'write', Load(), lineno=516, col_offset=4), [Str("            v._elemdict.update(getattr(superclass, '_elemdict', {}))\n", lineno=516, col_offset=13)], [], None, None, lineno=516, col_offset=4), lineno=516, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=517, col_offset=4), 'write', Load(), lineno=517, col_offset=4), [Str("        v._propdict.update(getattr(v, '_privpropdict', {}))\n", lineno=517, col_offset=13)], [], None, None, lineno=517, col_offset=4), lineno=517, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=518, col_offset=4), 'write', Load(), lineno=518, col_offset=4), [Str("        v._elemdict.update(getattr(v, '_privelemdict', {}))\n", lineno=518, col_offset=13)], [], None, None, lineno=518, col_offset=4), lineno=518, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=519, col_offset=4), 'write', Load(), lineno=519, col_offset=4), [Str('\n', lineno=519, col_offset=13)], [], None, None, lineno=519, col_offset=4), lineno=519, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=520, col_offset=4), 'write', Load(), lineno=520, col_offset=4), [Str('import StdSuites\n', lineno=520, col_offset=13)], [], None, None, lineno=520, col_offset=4), lineno=520, col_offset=4), Expr(Call(Attribute(Name('allprecompinfo', Load(), lineno=521, col_offset=4), 'sort', Load(), lineno=521, col_offset=4), [], [], None, None, lineno=521, col_offset=4), lineno=521, col_offset=4), If(Name('allprecompinfo', Load(), lineno=522, col_offset=7), [Expr(Call(Attribute(Name('fp', Load(), lineno=523, col_offset=8), 'write', Load(), lineno=523, col_offset=8), [Str('\n#\n# Set property and element dictionaries now that all classes have been defined\n#\n', lineno=523, col_offset=17)], [], None, None, lineno=523, col_offset=8), lineno=523, col_offset=8), For(Name('codenamemapper', Store(), lineno=524, col_offset=12), Name('allprecompinfo', Load(), lineno=524, col_offset=30), [For(Tuple([Name('k', Store(), lineno=525, col_offset=16), Name('v', Store(), lineno=525, col_offset=19)], Store(), lineno=525, col_offset=16), Call(Attribute(Name('codenamemapper', Load(), lineno=525, col_offset=24), 'getall', Load(), lineno=525, col_offset=24), [Str('class', lineno=525, col_offset=46)], [], None, None, lineno=525, col_offset=24), [Expr(Call(Attribute(Name('fp', Load(), lineno=526, col_offset=16), 'write', Load(), lineno=526, col_offset=16), [BinOp(Str('getbaseclasses(%s)\n', lineno=526, col_offset=25), Mod(), Name('v', Load(), lineno=526, col_offset=50), lineno=526, col_offset=25)], [], None, None, lineno=526, col_offset=16), lineno=526, col_offset=16)], [], lineno=525, col_offset=12)], [], lineno=524, col_offset=8)], [], lineno=522, col_offset=4), Assign([Name('application_class', Store(), lineno=529, col_offset=4)], Name('None', Load(), lineno=529, col_offset=24), lineno=529, col_offset=4), If(Name('allprecompinfo', Load(), lineno=530, col_offset=7), [Expr(Call(Attribute(Name('fp', Load(), lineno=531, col_offset=8), 'write', Load(), lineno=531, col_offset=8), [Str('\n#\n# Indices of types declared in this module\n#\n', lineno=531, col_offset=17)], [], None, None, lineno=531, col_offset=8), lineno=531, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=532, col_offset=8), 'write', Load(), lineno=532, col_offset=8), [Str('_classdeclarations = {\n', lineno=532, col_offset=17)], [], None, None, lineno=532, col_offset=8), lineno=532, col_offset=8), For(Name('codenamemapper', Store(), lineno=533, col_offset=12), Name('allprecompinfo', Load(), lineno=533, col_offset=30), [For(Tuple([Name('k', Store(), lineno=534, col_offset=16), Name('v', Store(), lineno=534, col_offset=19)], Store(), lineno=534, col_offset=16), Call(Attribute(Name('codenamemapper', Load(), lineno=534, col_offset=24), 'getall', Load(), lineno=534, col_offset=24), [Str('class', lineno=534, col_offset=46)], [], None, None, lineno=534, col_offset=24), [Expr(Call(Attribute(Name('fp', Load(), lineno=535, col_offset=16), 'write', Load(), lineno=535, col_offset=16), [BinOp(Str('    %r : %s,\n', lineno=535, col_offset=25), Mod(), Tuple([Name('k', Load(), lineno=535, col_offset=45), Name('v', Load(), lineno=535, col_offset=48)], Load(), lineno=535, col_offset=45), lineno=535, col_offset=25)], [], None, None, lineno=535, col_offset=16), lineno=535, col_offset=16), If(Compare(Name('k', Load(), lineno=536, col_offset=19), [Eq()], [Str('capp', lineno=536, col_offset=24)], lineno=536, col_offset=19), [Assign([Name('application_class', Store(), lineno=537, col_offset=20)], Name('v', Load(), lineno=537, col_offset=40), lineno=537, col_offset=20)], [], lineno=536, col_offset=16)], [], lineno=534, col_offset=12)], [], lineno=533, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=538, col_offset=8), 'write', Load(), lineno=538, col_offset=8), [Str('}\n', lineno=538, col_offset=17)], [], None, None, lineno=538, col_offset=8), lineno=538, col_offset=8)], [], lineno=530, col_offset=4), If(Name('suitelist', Load(), lineno=541, col_offset=7), [Expr(Call(Attribute(Name('fp', Load(), lineno=542, col_offset=8), 'write', Load(), lineno=542, col_offset=8), [BinOp(Str('\n\nclass %s(%s_Events', lineno=542, col_offset=17), Mod(), Tuple([Name('packagename', Load(), lineno=542, col_offset=43), Subscript(Subscript(Name('suitelist', Load(), lineno=542, col_offset=56), Index(Num(0, lineno=542, col_offset=66)), Load(), lineno=542, col_offset=56), Index(Num(1, lineno=542, col_offset=69)), Load(), lineno=542, col_offset=56)], Load(), lineno=542, col_offset=43), lineno=542, col_offset=17)], [], None, None, lineno=542, col_offset=8), lineno=542, col_offset=8), For(Tuple([Name('code', Store(), lineno=543, col_offset=12), Name('modname', Store(), lineno=543, col_offset=18)], Store(), lineno=543, col_offset=12), Subscript(Name('suitelist', Load(), lineno=543, col_offset=29), Slice(Num(1, lineno=543, col_offset=39), None, None), Load(), lineno=543, col_offset=29), [Expr(Call(Attribute(Name('fp', Load(), lineno=544, col_offset=12), 'write', Load(), lineno=544, col_offset=12), [BinOp(Str(',\n        %s_Events', lineno=544, col_offset=21), Mod(), Name('modname', Load(), lineno=544, col_offset=44), lineno=544, col_offset=21)], [], None, None, lineno=544, col_offset=12), lineno=544, col_offset=12)], [], lineno=543, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=545, col_offset=8), 'write', Load(), lineno=545, col_offset=8), [Str(',\n        aetools.TalkTo):\n', lineno=545, col_offset=17)], [], None, None, lineno=545, col_offset=8), lineno=545, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=546, col_offset=8), 'write', Load(), lineno=546, col_offset=8), [BinOp(Str('    _signature = %r\n\n', lineno=546, col_offset=17), Mod(), Tuple([Name('creatorsignature', Load(), lineno=546, col_offset=44)], Load(), lineno=546, col_offset=44), lineno=546, col_offset=17)], [], None, None, lineno=546, col_offset=8), lineno=546, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=547, col_offset=8), 'write', Load(), lineno=547, col_offset=8), [BinOp(Str("    _moduleName = '%s'\n\n", lineno=547, col_offset=17), Mod(), Name('packagename', Load(), lineno=547, col_offset=46), lineno=547, col_offset=17)], [], None, None, lineno=547, col_offset=8), lineno=547, col_offset=8), If(Name('application_class', Load(), lineno=548, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=549, col_offset=12), 'write', Load(), lineno=549, col_offset=12), [BinOp(Str('    _elemdict = %s._elemdict\n', lineno=549, col_offset=21), Mod(), Name('application_class', Load(), lineno=549, col_offset=56), lineno=549, col_offset=21)], [], None, None, lineno=549, col_offset=12), lineno=549, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=550, col_offset=12), 'write', Load(), lineno=550, col_offset=12), [BinOp(Str('    _propdict = %s._propdict\n', lineno=550, col_offset=21), Mod(), Name('application_class', Load(), lineno=550, col_offset=56), lineno=550, col_offset=21)], [], None, None, lineno=550, col_offset=12), lineno=550, col_offset=12)], [], lineno=548, col_offset=8)], [], lineno=541, col_offset=4), Expr(Call(Attribute(Name('fp', Load(), lineno=551, col_offset=4), 'close', Load(), lineno=551, col_offset=4), [], [], None, None, lineno=551, col_offset=4), lineno=551, col_offset=4)], [], lineno=433, col_offset=0), ClassDef('SuiteCompiler', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=554, col_offset=17), Name('suite', Param(), lineno=554, col_offset=23), Name('basepackage', Param(), lineno=554, col_offset=30), Name('output', Param(), lineno=554, col_offset=43), Name('edit_modnames', Param(), lineno=554, col_offset=51), Name('verbose', Param(), lineno=554, col_offset=66)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=555, col_offset=8), 'suite', Store(), lineno=555, col_offset=8)], Name('suite', Load(), lineno=555, col_offset=21), lineno=555, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=556, col_offset=8), 'basepackage', Store(), lineno=556, col_offset=8)], Name('basepackage', Load(), lineno=556, col_offset=27), lineno=556, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=557, col_offset=8), 'edit_modnames', Store(), lineno=557, col_offset=8)], Name('edit_modnames', Load(), lineno=557, col_offset=29), lineno=557, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=558, col_offset=8), 'output', Store(), lineno=558, col_offset=8)], Name('output', Load(), lineno=558, col_offset=22), lineno=558, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=559, col_offset=8), 'verbose', Store(), lineno=559, col_offset=8)], Name('verbose', Load(), lineno=559, col_offset=23), lineno=559, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=562, col_offset=8), 'pathname', Store(), lineno=562, col_offset=8)], Name('None', Load(), lineno=562, col_offset=24), lineno=562, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=563, col_offset=8), 'modname', Store(), lineno=563, col_offset=8)], Name('None', Load(), lineno=563, col_offset=23), lineno=563, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=566, col_offset=8), 'fp', Store(), lineno=566, col_offset=8)], Name('None', Load(), lineno=566, col_offset=18), lineno=566, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=567, col_offset=8), 'basemodule', Store(), lineno=567, col_offset=8)], Name('None', Load(), lineno=567, col_offset=26), lineno=567, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=568, col_offset=8), 'enumsneeded', Store(), lineno=568, col_offset=8)], Dict([], [], lineno=568, col_offset=27), lineno=568, col_offset=8)], [], lineno=554, col_offset=4), FunctionDef('precompilesuite', arguments([Name('self', Param(), lineno=570, col_offset=24)], None, None, []), [Expr(Str('Parse a single suite without generating the output. This step is needed\n        so we can resolve recursive references by suites to enums/comps/etc declared\n        in other suites', lineno=573, col_offset=-1), lineno=573, col_offset=-1), Assign([List([Name('name', Store(), lineno=574, col_offset=9), Name('desc', Store(), lineno=574, col_offset=15), Name('code', Store(), lineno=574, col_offset=21), Name('level', Store(), lineno=574, col_offset=27), Name('version', Store(), lineno=574, col_offset=34), Name('events', Store(), lineno=574, col_offset=43), Name('classes', Store(), lineno=574, col_offset=51), Name('comps', Store(), lineno=574, col_offset=60), Name('enums', Store(), lineno=574, col_offset=67)], Store(), lineno=574, col_offset=8)], Attribute(Name('self', Load(), lineno=574, col_offset=76), 'suite', Load(), lineno=574, col_offset=76), lineno=574, col_offset=8), Assign([Name('modname', Store(), lineno=576, col_offset=8)], Call(Name('identify', Load(), lineno=576, col_offset=18), [Name('name', Load(), lineno=576, col_offset=27)], [], None, None, lineno=576, col_offset=18), lineno=576, col_offset=8), If(Compare(Call(Name('len', Load(), lineno=577, col_offset=11), [Name('modname', Load(), lineno=577, col_offset=15)], [], None, None, lineno=577, col_offset=11), [Gt()], [Num(28, lineno=577, col_offset=26)], lineno=577, col_offset=11), [Assign([Name('modname', Store(), lineno=578, col_offset=12)], Subscript(Name('modname', Load(), lineno=578, col_offset=22), Slice(None, Num(27, lineno=578, col_offset=31), None), Load(), lineno=578, col_offset=22), lineno=578, col_offset=12)], [], lineno=577, col_offset=8), If(Compare(Attribute(Name('self', Load(), lineno=579, col_offset=11), 'edit_modnames', Load(), lineno=579, col_offset=11), [Is()], [Name('None', Load(), lineno=579, col_offset=33)], lineno=579, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=580, col_offset=12), 'pathname', Store(), lineno=580, col_offset=12)], Call(Attribute(Name('EasyDialogs', Load(), lineno=580, col_offset=28), 'AskFileForSave', Load(), lineno=580, col_offset=28), [], [keyword('message', Str('Python output file', lineno=580, col_offset=63)), keyword('savedFileName', BinOp(Name('modname', Load(), lineno=581, col_offset=30), Add(), Str('.py', lineno=581, col_offset=38), lineno=581, col_offset=30))], None, None, lineno=580, col_offset=28), lineno=580, col_offset=12)], [For(Tuple([Name('old', Store(), lineno=583, col_offset=16), Name('new', Store(), lineno=583, col_offset=21)], Store(), lineno=583, col_offset=16), Attribute(Name('self', Load(), lineno=583, col_offset=28), 'edit_modnames', Load(), lineno=583, col_offset=28), [If(Compare(Name('old', Load(), lineno=584, col_offset=19), [Eq()], [Name('modname', Load(), lineno=584, col_offset=26)], lineno=584, col_offset=19), [Assign([Name('modname', Store(), lineno=585, col_offset=20)], Name('new', Load(), lineno=585, col_offset=30), lineno=585, col_offset=20)], [], lineno=584, col_offset=16)], [], lineno=583, col_offset=12), If(Name('modname', Load(), lineno=586, col_offset=15), [Assign([Attribute(Name('self', Load(), lineno=587, col_offset=16), 'pathname', Store(), lineno=587, col_offset=16)], Call(Attribute(Attribute(Name('os', Load(), lineno=587, col_offset=32), 'path', Load(), lineno=587, col_offset=32), 'join', Load(), lineno=587, col_offset=32), [Attribute(Name('self', Load(), lineno=587, col_offset=45), 'output', Load(), lineno=587, col_offset=45), BinOp(Name('modname', Load(), lineno=587, col_offset=58), Add(), Str('.py', lineno=587, col_offset=68), lineno=587, col_offset=58)], [], None, None, lineno=587, col_offset=32), lineno=587, col_offset=16)], [Assign([Attribute(Name('self', Load(), lineno=589, col_offset=16), 'pathname', Store(), lineno=589, col_offset=16)], Name('None', Load(), lineno=589, col_offset=32), lineno=589, col_offset=16)], lineno=586, col_offset=12)], lineno=579, col_offset=8), If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=590, col_offset=15), 'pathname', Load(), lineno=590, col_offset=15), lineno=590, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=591, col_offset=19), Name('None', Load(), lineno=591, col_offset=25), Name('None', Load(), lineno=591, col_offset=31)], Load(), lineno=591, col_offset=19), lineno=591, col_offset=12)], [], lineno=590, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=593, col_offset=8), 'modname', Store(), lineno=593, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=593, col_offset=23), 'path', Load(), lineno=593, col_offset=23), 'splitext', Load(), lineno=593, col_offset=23), [Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=593, col_offset=40), 'path', Load(), lineno=593, col_offset=40), 'split', Load(), lineno=593, col_offset=40), [Attribute(Name('self', Load(), lineno=593, col_offset=54), 'pathname', Load(), lineno=593, col_offset=54)], [], None, None, lineno=593, col_offset=40), Index(Num(1, lineno=593, col_offset=69)), Load(), lineno=593, col_offset=40)], [], None, None, lineno=593, col_offset=23), Index(Num(0, lineno=593, col_offset=73)), Load(), lineno=593, col_offset=23), lineno=593, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=595, col_offset=11), 'basepackage', Load(), lineno=595, col_offset=11), Compare(Name('code', Load(), lineno=595, col_offset=32), [In()], [Attribute(Attribute(Name('self', Load(), lineno=595, col_offset=40), 'basepackage', Load(), lineno=595, col_offset=40), '_code_to_module', Load(), lineno=595, col_offset=40)], lineno=595, col_offset=32)], lineno=595, col_offset=11), [Assign([Name('basemodule', Store(), lineno=598, col_offset=12)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=598, col_offset=25), 'basepackage', Load(), lineno=598, col_offset=25), '_code_to_module', Load(), lineno=598, col_offset=25), Index(Name('code', Load(), lineno=598, col_offset=58)), Load(), lineno=598, col_offset=25), lineno=598, col_offset=12)], [Assign([Name('basemodule', Store(), lineno=601, col_offset=12)], Name('None', Load(), lineno=601, col_offset=25), lineno=601, col_offset=12)], lineno=595, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=603, col_offset=8), 'enumsneeded', Store(), lineno=603, col_offset=8)], Dict([], [], lineno=603, col_offset=27), lineno=603, col_offset=8), For(Name('event', Store(), lineno=604, col_offset=12), Name('events', Load(), lineno=604, col_offset=21), [Expr(Call(Attribute(Name('self', Load(), lineno=605, col_offset=12), 'findenumsinevent', Load(), lineno=605, col_offset=12), [Name('event', Load(), lineno=605, col_offset=34)], [], None, None, lineno=605, col_offset=12), lineno=605, col_offset=12)], [], lineno=604, col_offset=8), Assign([Name('objc', Store(), lineno=607, col_offset=8)], Call(Name('ObjectCompiler', Load(), lineno=607, col_offset=15), [Name('None', Load(), lineno=607, col_offset=30), Attribute(Name('self', Load(), lineno=607, col_offset=36), 'modname', Load(), lineno=607, col_offset=36), Name('basemodule', Load(), lineno=607, col_offset=50)], [keyword('interact', Compare(Attribute(Name('self', Load(), lineno=607, col_offset=72), 'edit_modnames', Load(), lineno=607, col_offset=72), [Is()], [Name('None', Load(), lineno=607, col_offset=94)], lineno=607, col_offset=72)), keyword('verbose', Attribute(Name('self', Load(), lineno=608, col_offset=20), 'verbose', Load(), lineno=608, col_offset=20))], None, None, lineno=607, col_offset=15), lineno=607, col_offset=8), For(Name('cls', Store(), lineno=609, col_offset=12), Name('classes', Load(), lineno=609, col_offset=19), [Expr(Call(Attribute(Name('objc', Load(), lineno=610, col_offset=12), 'compileclass', Load(), lineno=610, col_offset=12), [Name('cls', Load(), lineno=610, col_offset=30)], [], None, None, lineno=610, col_offset=12), lineno=610, col_offset=12)], [], lineno=609, col_offset=8), For(Name('cls', Store(), lineno=611, col_offset=12), Name('classes', Load(), lineno=611, col_offset=19), [Expr(Call(Attribute(Name('objc', Load(), lineno=612, col_offset=12), 'fillclasspropsandelems', Load(), lineno=612, col_offset=12), [Name('cls', Load(), lineno=612, col_offset=40)], [], None, None, lineno=612, col_offset=12), lineno=612, col_offset=12)], [], lineno=611, col_offset=8), For(Name('comp', Store(), lineno=613, col_offset=12), Name('comps', Load(), lineno=613, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=614, col_offset=12), 'compilecomparison', Load(), lineno=614, col_offset=12), [Name('comp', Load(), lineno=614, col_offset=35)], [], None, None, lineno=614, col_offset=12), lineno=614, col_offset=12)], [], lineno=613, col_offset=8), For(Name('enum', Store(), lineno=615, col_offset=12), Name('enums', Load(), lineno=615, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=616, col_offset=12), 'compileenumeration', Load(), lineno=616, col_offset=12), [Name('enum', Load(), lineno=616, col_offset=36)], [], None, None, lineno=616, col_offset=12), lineno=616, col_offset=12)], [], lineno=615, col_offset=8), For(Name('enum', Store(), lineno=618, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=618, col_offset=20), 'enumsneeded', Load(), lineno=618, col_offset=20), 'keys', Load(), lineno=618, col_offset=20), [], [], None, None, lineno=618, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=619, col_offset=12), 'checkforenum', Load(), lineno=619, col_offset=12), [Name('enum', Load(), lineno=619, col_offset=30)], [], None, None, lineno=619, col_offset=12), lineno=619, col_offset=12)], [], lineno=618, col_offset=8), Expr(Call(Attribute(Name('objc', Load(), lineno=621, col_offset=8), 'dumpindex', Load(), lineno=621, col_offset=8), [], [], None, None, lineno=621, col_offset=8), lineno=621, col_offset=8), Assign([Name('precompinfo', Store(), lineno=623, col_offset=8)], Call(Attribute(Name('objc', Load(), lineno=623, col_offset=22), 'getprecompinfo', Load(), lineno=623, col_offset=22), [Attribute(Name('self', Load(), lineno=623, col_offset=42), 'modname', Load(), lineno=623, col_offset=42)], [], None, None, lineno=623, col_offset=22), lineno=623, col_offset=8), Return(Tuple([Name('code', Load(), lineno=625, col_offset=15), Attribute(Name('self', Load(), lineno=625, col_offset=21), 'modname', Load(), lineno=625, col_offset=21), Name('precompinfo', Load(), lineno=625, col_offset=35)], Load(), lineno=625, col_offset=15), lineno=625, col_offset=8)], [], lineno=570, col_offset=4), FunctionDef('compilesuite', arguments([Name('self', Param(), lineno=627, col_offset=21), Name('major', Param(), lineno=627, col_offset=27), Name('minor', Param(), lineno=627, col_offset=34), Name('language', Param(), lineno=627, col_offset=41), Name('script', Param(), lineno=627, col_offset=51), Name('fname', Param(), lineno=627, col_offset=59), Name('precompinfo', Param(), lineno=627, col_offset=66)], None, None, []), [Expr(Str('Generate code for a single suite', lineno=628, col_offset=8), lineno=628, col_offset=8), Assign([List([Name('name', Store(), lineno=629, col_offset=9), Name('desc', Store(), lineno=629, col_offset=15), Name('code', Store(), lineno=629, col_offset=21), Name('level', Store(), lineno=629, col_offset=27), Name('version', Store(), lineno=629, col_offset=34), Name('events', Store(), lineno=629, col_offset=43), Name('classes', Store(), lineno=629, col_offset=51), Name('comps', Store(), lineno=629, col_offset=60), Name('enums', Store(), lineno=629, col_offset=67)], Store(), lineno=629, col_offset=8)], Attribute(Name('self', Load(), lineno=629, col_offset=76), 'suite', Load(), lineno=629, col_offset=76), lineno=629, col_offset=8), FunctionDef('class_sorter', arguments([Name('k1', Param(), lineno=631, col_offset=25), Name('k2', Param(), lineno=631, col_offset=29)], None, None, []), [Expr(Str('Sort classes by code, and make sure main class sorts before synonyms', lineno=632, col_offset=12), lineno=632, col_offset=12), If(Compare(Subscript(Name('k1', Load(), lineno=634, col_offset=15), Index(Num(1, lineno=634, col_offset=18)), Load(), lineno=634, col_offset=15), [Lt()], [Subscript(Name('k2', Load(), lineno=634, col_offset=23), Index(Num(1, lineno=634, col_offset=26)), Load(), lineno=634, col_offset=23)], lineno=634, col_offset=15), [Return(Num(-1, lineno=634, col_offset=38), lineno=634, col_offset=30)], [], lineno=634, col_offset=12), If(Compare(Subscript(Name('k1', Load(), lineno=635, col_offset=15), Index(Num(1, lineno=635, col_offset=18)), Load(), lineno=635, col_offset=15), [Gt()], [Subscript(Name('k2', Load(), lineno=635, col_offset=23), Index(Num(1, lineno=635, col_offset=26)), Load(), lineno=635, col_offset=23)], lineno=635, col_offset=15), [Return(Num(1, lineno=635, col_offset=37), lineno=635, col_offset=30)], [], lineno=635, col_offset=12), If(BoolOp(Or(), [UnaryOp(Not(), Subscript(Name('k2', Load(), lineno=636, col_offset=19), Index(Num(3, lineno=636, col_offset=22)), Load(), lineno=636, col_offset=19), lineno=636, col_offset=15), Compare(Subscript(Subscript(Subscript(Name('k2', Load(), lineno=636, col_offset=28), Index(Num(3, lineno=636, col_offset=31)), Load(), lineno=636, col_offset=28), Index(Num(0, lineno=636, col_offset=34)), Load(), lineno=636, col_offset=28), Index(Num(1, lineno=636, col_offset=37)), Load(), lineno=636, col_offset=28), [Eq()], [Str('c@#!', lineno=636, col_offset=43)], lineno=636, col_offset=28)], lineno=636, col_offset=15), [Return(Num(-1, lineno=638, col_offset=24), lineno=638, col_offset=16)], [], lineno=636, col_offset=12), If(BoolOp(Or(), [UnaryOp(Not(), Subscript(Name('k1', Load(), lineno=639, col_offset=19), Index(Num(3, lineno=639, col_offset=22)), Load(), lineno=639, col_offset=19), lineno=639, col_offset=15), Compare(Subscript(Subscript(Subscript(Name('k1', Load(), lineno=639, col_offset=28), Index(Num(3, lineno=639, col_offset=31)), Load(), lineno=639, col_offset=28), Index(Num(0, lineno=639, col_offset=34)), Load(), lineno=639, col_offset=28), Index(Num(1, lineno=639, col_offset=37)), Load(), lineno=639, col_offset=28), [Eq()], [Str('c@#!', lineno=639, col_offset=43)], lineno=639, col_offset=28)], lineno=639, col_offset=15), [Return(Num(1, lineno=641, col_offset=23), lineno=641, col_offset=16)], [], lineno=639, col_offset=12), Return(Num(0, lineno=642, col_offset=19), lineno=642, col_offset=12)], [], lineno=631, col_offset=8), Expr(Call(Attribute(Name('events', Load(), lineno=644, col_offset=8), 'sort', Load(), lineno=644, col_offset=8), [], [], None, None, lineno=644, col_offset=8), lineno=644, col_offset=8), Expr(Call(Attribute(Name('classes', Load(), lineno=645, col_offset=8), 'sort', Load(), lineno=645, col_offset=8), [Name('class_sorter', Load(), lineno=645, col_offset=21)], [], None, None, lineno=645, col_offset=8), lineno=645, col_offset=8), Expr(Call(Attribute(Name('comps', Load(), lineno=646, col_offset=8), 'sort', Load(), lineno=646, col_offset=8), [], [], None, None, lineno=646, col_offset=8), lineno=646, col_offset=8), Expr(Call(Attribute(Name('enums', Load(), lineno=647, col_offset=8), 'sort', Load(), lineno=647, col_offset=8), [], [], None, None, lineno=647, col_offset=8), lineno=647, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=649, col_offset=8), 'fp', Store(), lineno=649, col_offset=8), Name('fp', Store(), lineno=649, col_offset=18)], Call(Name('open', Load(), lineno=649, col_offset=23), [Attribute(Name('self', Load(), lineno=649, col_offset=28), 'pathname', Load(), lineno=649, col_offset=28), Str('w', lineno=649, col_offset=43)], [], None, None, lineno=649, col_offset=23), lineno=649, col_offset=8), Expr(Call(Attribute(Name('MacOS', Load(), lineno=650, col_offset=8), 'SetCreatorAndType', Load(), lineno=650, col_offset=8), [Attribute(Name('self', Load(), lineno=650, col_offset=32), 'pathname', Load(), lineno=650, col_offset=32), Str('Pyth', lineno=650, col_offset=47), Str('TEXT', lineno=650, col_offset=55)], [], None, None, lineno=650, col_offset=8), lineno=650, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=652, col_offset=8), 'write', Load(), lineno=652, col_offset=8), [BinOp(Str('"""Suite %s: %s\n', lineno=652, col_offset=17), Mod(), Tuple([Call(Name('ascii', Load(), lineno=652, col_offset=40), [Name('name', Load(), lineno=652, col_offset=46)], [], None, None, lineno=652, col_offset=40), Call(Name('ascii', Load(), lineno=652, col_offset=53), [Name('desc', Load(), lineno=652, col_offset=59)], [], None, None, lineno=652, col_offset=53)], Load(), lineno=652, col_offset=40), lineno=652, col_offset=17)], [], None, None, lineno=652, col_offset=8), lineno=652, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=653, col_offset=8), 'write', Load(), lineno=653, col_offset=8), [BinOp(Str('Level %d, version %d\n\n', lineno=653, col_offset=17), Mod(), Tuple([Name('level', Load(), lineno=653, col_offset=47), Name('version', Load(), lineno=653, col_offset=54)], Load(), lineno=653, col_offset=47), lineno=653, col_offset=17)], [], None, None, lineno=653, col_offset=8), lineno=653, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=654, col_offset=8), 'write', Load(), lineno=654, col_offset=8), [BinOp(Str('Generated from %s\n', lineno=654, col_offset=17), Mod(), Call(Name('ascii', Load(), lineno=654, col_offset=39), [Name('fname', Load(), lineno=654, col_offset=45)], [], None, None, lineno=654, col_offset=39), lineno=654, col_offset=17)], [], None, None, lineno=654, col_offset=8), lineno=654, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=655, col_offset=8), 'write', Load(), lineno=655, col_offset=8), [BinOp(Str('AETE/AEUT resource version %d/%d, language %d, script %d\n', lineno=655, col_offset=17), Mod(), Tuple([Name('major', Load(), lineno=656, col_offset=13), Name('minor', Load(), lineno=656, col_offset=20), Name('language', Load(), lineno=656, col_offset=27), Name('script', Load(), lineno=656, col_offset=37)], Load(), lineno=656, col_offset=13), lineno=655, col_offset=17)], [], None, None, lineno=655, col_offset=8), lineno=655, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=657, col_offset=8), 'write', Load(), lineno=657, col_offset=8), [Str('"""\n\n', lineno=657, col_offset=17)], [], None, None, lineno=657, col_offset=8), lineno=657, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=659, col_offset=8), 'write', Load(), lineno=659, col_offset=8), [Str('import aetools\n', lineno=659, col_offset=17)], [], None, None, lineno=659, col_offset=8), lineno=659, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=660, col_offset=8), 'write', Load(), lineno=660, col_offset=8), [Str('import MacOS\n\n', lineno=660, col_offset=17)], [], None, None, lineno=660, col_offset=8), lineno=660, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=661, col_offset=8), 'write', Load(), lineno=661, col_offset=8), [BinOp(Str('_code = %r\n\n', lineno=661, col_offset=17), Mod(), Tuple([Name('code', Load(), lineno=661, col_offset=36)], Load(), lineno=661, col_offset=36), lineno=661, col_offset=17)], [], None, None, lineno=661, col_offset=8), lineno=661, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=662, col_offset=11), 'basepackage', Load(), lineno=662, col_offset=11), Compare(Name('code', Load(), lineno=662, col_offset=32), [In()], [Attribute(Attribute(Name('self', Load(), lineno=662, col_offset=40), 'basepackage', Load(), lineno=662, col_offset=40), '_code_to_module', Load(), lineno=662, col_offset=40)], lineno=662, col_offset=32)], lineno=662, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=665, col_offset=12), 'write', Load(), lineno=665, col_offset=12), [BinOp(Str('from %s import *\n', lineno=665, col_offset=21), Mod(), Subscript(Subscript(Attribute(Attribute(Name('self', Load(), lineno=665, col_offset=42), 'basepackage', Load(), lineno=665, col_offset=42), '_code_to_fullname', Load(), lineno=665, col_offset=42), Index(Name('code', Load(), lineno=665, col_offset=77)), Load(), lineno=665, col_offset=42), Index(Num(0, lineno=665, col_offset=83)), Load(), lineno=665, col_offset=42), lineno=665, col_offset=21)], [], None, None, lineno=665, col_offset=12), lineno=665, col_offset=12), Assign([Name('basemodule', Store(), lineno=666, col_offset=12)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=666, col_offset=25), 'basepackage', Load(), lineno=666, col_offset=25), '_code_to_module', Load(), lineno=666, col_offset=25), Index(Name('code', Load(), lineno=666, col_offset=58)), Load(), lineno=666, col_offset=25), lineno=666, col_offset=12)], [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=667, col_offset=13), 'basepackage', Load(), lineno=667, col_offset=13), Compare(Call(Attribute(Name('code', Load(), lineno=667, col_offset=34), 'lower', Load(), lineno=667, col_offset=34), [], [], None, None, lineno=667, col_offset=34), [In()], [Attribute(Attribute(Name('self', Load(), lineno=667, col_offset=50), 'basepackage', Load(), lineno=667, col_offset=50), '_code_to_module', Load(), lineno=667, col_offset=50)], lineno=667, col_offset=34)], lineno=667, col_offset=13), [Expr(Call(Attribute(Name('fp', Load(), lineno=669, col_offset=12), 'write', Load(), lineno=669, col_offset=12), [BinOp(Str('from %s import *\n', lineno=669, col_offset=21), Mod(), Subscript(Subscript(Attribute(Attribute(Name('self', Load(), lineno=669, col_offset=42), 'basepackage', Load(), lineno=669, col_offset=42), '_code_to_fullname', Load(), lineno=669, col_offset=42), Index(Call(Attribute(Name('code', Load(), lineno=669, col_offset=77), 'lower', Load(), lineno=669, col_offset=77), [], [], None, None, lineno=669, col_offset=77)), Load(), lineno=669, col_offset=42), Index(Num(0, lineno=669, col_offset=91)), Load(), lineno=669, col_offset=42), lineno=669, col_offset=21)], [], None, None, lineno=669, col_offset=12), lineno=669, col_offset=12), Assign([Name('basemodule', Store(), lineno=670, col_offset=12)], Subscript(Attribute(Attribute(Name('self', Load(), lineno=670, col_offset=25), 'basepackage', Load(), lineno=670, col_offset=25), '_code_to_module', Load(), lineno=670, col_offset=25), Index(Call(Attribute(Name('code', Load(), lineno=670, col_offset=58), 'lower', Load(), lineno=670, col_offset=58), [], [], None, None, lineno=670, col_offset=58)), Load(), lineno=670, col_offset=25), lineno=670, col_offset=12)], [Assign([Name('basemodule', Store(), lineno=673, col_offset=12)], Name('None', Load(), lineno=673, col_offset=25), lineno=673, col_offset=12)], lineno=667, col_offset=13)], lineno=662, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=674, col_offset=8), 'basemodule', Store(), lineno=674, col_offset=8)], Name('basemodule', Load(), lineno=674, col_offset=26), lineno=674, col_offset=8), Expr(Call(Attribute(Name('self', Load(), lineno=675, col_offset=8), 'compileclassheader', Load(), lineno=675, col_offset=8), [], [], None, None, lineno=675, col_offset=8), lineno=675, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=677, col_offset=8), 'enumsneeded', Store(), lineno=677, col_offset=8)], Dict([], [], lineno=677, col_offset=27), lineno=677, col_offset=8), If(Name('events', Load(), lineno=678, col_offset=11), [For(Name('event', Store(), lineno=679, col_offset=16), Name('events', Load(), lineno=679, col_offset=25), [Expr(Call(Attribute(Name('self', Load(), lineno=680, col_offset=16), 'compileevent', Load(), lineno=680, col_offset=16), [Name('event', Load(), lineno=680, col_offset=34)], [], None, None, lineno=680, col_offset=16), lineno=680, col_offset=16)], [], lineno=679, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=682, col_offset=12), 'write', Load(), lineno=682, col_offset=12), [Str('    pass\n\n', lineno=682, col_offset=21)], [], None, None, lineno=682, col_offset=12), lineno=682, col_offset=12)], lineno=678, col_offset=8), Assign([Name('objc', Store(), lineno=684, col_offset=8)], Call(Name('ObjectCompiler', Load(), lineno=684, col_offset=15), [Name('fp', Load(), lineno=684, col_offset=30), Attribute(Name('self', Load(), lineno=684, col_offset=34), 'modname', Load(), lineno=684, col_offset=34), Name('basemodule', Load(), lineno=684, col_offset=48), Name('precompinfo', Load(), lineno=684, col_offset=60)], [keyword('interact', Compare(Attribute(Name('self', Load(), lineno=684, col_offset=83), 'edit_modnames', Load(), lineno=684, col_offset=83), [Is()], [Name('None', Load(), lineno=684, col_offset=105)], lineno=684, col_offset=83)), keyword('verbose', Attribute(Name('self', Load(), lineno=685, col_offset=20), 'verbose', Load(), lineno=685, col_offset=20))], None, None, lineno=684, col_offset=15), lineno=684, col_offset=8), For(Name('cls', Store(), lineno=686, col_offset=12), Name('classes', Load(), lineno=686, col_offset=19), [Expr(Call(Attribute(Name('objc', Load(), lineno=687, col_offset=12), 'compileclass', Load(), lineno=687, col_offset=12), [Name('cls', Load(), lineno=687, col_offset=30)], [], None, None, lineno=687, col_offset=12), lineno=687, col_offset=12)], [], lineno=686, col_offset=8), For(Name('cls', Store(), lineno=688, col_offset=12), Name('classes', Load(), lineno=688, col_offset=19), [Expr(Call(Attribute(Name('objc', Load(), lineno=689, col_offset=12), 'fillclasspropsandelems', Load(), lineno=689, col_offset=12), [Name('cls', Load(), lineno=689, col_offset=40)], [], None, None, lineno=689, col_offset=12), lineno=689, col_offset=12)], [], lineno=688, col_offset=8), For(Name('comp', Store(), lineno=690, col_offset=12), Name('comps', Load(), lineno=690, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=691, col_offset=12), 'compilecomparison', Load(), lineno=691, col_offset=12), [Name('comp', Load(), lineno=691, col_offset=35)], [], None, None, lineno=691, col_offset=12), lineno=691, col_offset=12)], [], lineno=690, col_offset=8), For(Name('enum', Store(), lineno=692, col_offset=12), Name('enums', Load(), lineno=692, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=693, col_offset=12), 'compileenumeration', Load(), lineno=693, col_offset=12), [Name('enum', Load(), lineno=693, col_offset=36)], [], None, None, lineno=693, col_offset=12), lineno=693, col_offset=12)], [], lineno=692, col_offset=8), For(Name('enum', Store(), lineno=695, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=695, col_offset=20), 'enumsneeded', Load(), lineno=695, col_offset=20), 'keys', Load(), lineno=695, col_offset=20), [], [], None, None, lineno=695, col_offset=20), [Expr(Call(Attribute(Name('objc', Load(), lineno=696, col_offset=12), 'checkforenum', Load(), lineno=696, col_offset=12), [Name('enum', Load(), lineno=696, col_offset=30)], [], None, None, lineno=696, col_offset=12), lineno=696, col_offset=12)], [], lineno=695, col_offset=8), Expr(Call(Attribute(Name('objc', Load(), lineno=698, col_offset=8), 'dumpindex', Load(), lineno=698, col_offset=8), [], [], None, None, lineno=698, col_offset=8), lineno=698, col_offset=8)], [], lineno=627, col_offset=4), FunctionDef('compileclassheader', arguments([Name('self', Param(), lineno=700, col_offset=27)], None, None, []), [Expr(Str('Generate class boilerplate', lineno=701, col_offset=8), lineno=701, col_offset=8), Assign([Name('classname', Store(), lineno=702, col_offset=8)], BinOp(Str('%s_Events', lineno=702, col_offset=20), Mod(), Attribute(Name('self', Load(), lineno=702, col_offset=32), 'modname', Load(), lineno=702, col_offset=32), lineno=702, col_offset=20), lineno=702, col_offset=8), If(Attribute(Name('self', Load(), lineno=703, col_offset=11), 'basemodule', Load(), lineno=703, col_offset=11), [Assign([Name('modshortname', Store(), lineno=704, col_offset=12)], Subscript(Call(Attribute(Name('string', Load(), lineno=704, col_offset=27), 'split', Load(), lineno=704, col_offset=27), [Attribute(Attribute(Name('self', Load(), lineno=704, col_offset=40), 'basemodule', Load(), lineno=704, col_offset=40), '__name__', Load(), lineno=704, col_offset=40), Str('.', lineno=704, col_offset=66)], [], None, None, lineno=704, col_offset=27), Index(Num(-1, lineno=704, col_offset=72)), Load(), lineno=704, col_offset=27), lineno=704, col_offset=12), Assign([Name('baseclassname', Store(), lineno=705, col_offset=12)], BinOp(Str('%s_Events', lineno=705, col_offset=28), Mod(), Name('modshortname', Load(), lineno=705, col_offset=40), lineno=705, col_offset=28), lineno=705, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=706, col_offset=12), 'fp', Load(), lineno=706, col_offset=12), 'write', Load(), lineno=706, col_offset=12), [BinOp(Str('class %s(%s):\n\n', lineno=706, col_offset=26), Mod(), Tuple([Name('classname', Load(), lineno=706, col_offset=47), Name('baseclassname', Load(), lineno=706, col_offset=58)], Load(), lineno=706, col_offset=47), lineno=706, col_offset=26)], [], None, None, lineno=706, col_offset=12), lineno=706, col_offset=12)], [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=708, col_offset=12), 'fp', Load(), lineno=708, col_offset=12), 'write', Load(), lineno=708, col_offset=12), [BinOp(Str('class %s:\n\n', lineno=708, col_offset=26), Mod(), Name('classname', Load(), lineno=708, col_offset=42), lineno=708, col_offset=26)], [], None, None, lineno=708, col_offset=12), lineno=708, col_offset=12)], lineno=703, col_offset=8)], [], lineno=700, col_offset=4), FunctionDef('compileevent', arguments([Name('self', Param(), lineno=710, col_offset=21), Name('event', Param(), lineno=710, col_offset=27)], None, None, []), [Expr(Str('Generate code for a single event', lineno=711, col_offset=8), lineno=711, col_offset=8), Assign([List([Name('name', Store(), lineno=712, col_offset=9), Name('desc', Store(), lineno=712, col_offset=15), Name('code', Store(), lineno=712, col_offset=21), Name('subcode', Store(), lineno=712, col_offset=27), Name('returns', Store(), lineno=712, col_offset=36), Name('accepts', Store(), lineno=712, col_offset=45), Name('arguments', Store(), lineno=712, col_offset=54)], Store(), lineno=712, col_offset=8)], Name('event', Load(), lineno=712, col_offset=67), lineno=712, col_offset=8), Assign([Name('fp', Store(), lineno=713, col_offset=8)], Attribute(Name('self', Load(), lineno=713, col_offset=13), 'fp', Load(), lineno=713, col_offset=13), lineno=713, col_offset=8), Assign([Name('funcname', Store(), lineno=714, col_offset=8)], Call(Name('identify', Load(), lineno=714, col_offset=19), [Name('name', Load(), lineno=714, col_offset=28)], [], None, None, lineno=714, col_offset=19), lineno=714, col_offset=8), If(Name('arguments', Load(), lineno=718, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=719, col_offset=12), 'write', Load(), lineno=719, col_offset=12), [BinOp(Str('    _argmap_%s = {\n', lineno=719, col_offset=21), Mod(), Name('funcname', Load(), lineno=719, col_offset=44), lineno=719, col_offset=21)], [], None, None, lineno=719, col_offset=12), lineno=719, col_offset=12), For(Name('a', Store(), lineno=720, col_offset=16), Name('arguments', Load(), lineno=720, col_offset=21), [Expr(Call(Attribute(Name('fp', Load(), lineno=721, col_offset=16), 'write', Load(), lineno=721, col_offset=16), [BinOp(Str('        %r : %r,\n', lineno=721, col_offset=25), Mod(), Tuple([Call(Name('identify', Load(), lineno=721, col_offset=47), [Subscript(Name('a', Load(), lineno=721, col_offset=56), Index(Num(0, lineno=721, col_offset=58)), Load(), lineno=721, col_offset=56)], [], None, None, lineno=721, col_offset=47), Subscript(Name('a', Load(), lineno=721, col_offset=63), Index(Num(1, lineno=721, col_offset=65)), Load(), lineno=721, col_offset=63)], Load(), lineno=721, col_offset=47), lineno=721, col_offset=25)], [], None, None, lineno=721, col_offset=16), lineno=721, col_offset=16)], [], lineno=720, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=722, col_offset=12), 'write', Load(), lineno=722, col_offset=12), [Str('    }\n\n', lineno=722, col_offset=21)], [], None, None, lineno=722, col_offset=12), lineno=722, col_offset=12)], [], lineno=718, col_offset=8), Assign([Name('has_arg', Store(), lineno=727, col_offset=8)], UnaryOp(Not(), Call(Name('is_null', Load(), lineno=727, col_offset=23), [Name('accepts', Load(), lineno=727, col_offset=31)], [], None, None, lineno=727, col_offset=23), lineno=727, col_offset=19), lineno=727, col_offset=8), Assign([Name('opt_arg', Store(), lineno=728, col_offset=8)], BoolOp(And(), [Name('has_arg', Load(), lineno=728, col_offset=19), Call(Name('is_optional', Load(), lineno=728, col_offset=31), [Name('accepts', Load(), lineno=728, col_offset=43)], [], None, None, lineno=728, col_offset=31)], lineno=728, col_offset=19), lineno=728, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=730, col_offset=8), 'write', Load(), lineno=730, col_offset=8), [BinOp(Str('    def %s(self, ', lineno=730, col_offset=17), Mod(), Name('funcname', Load(), lineno=730, col_offset=37), lineno=730, col_offset=17)], [], None, None, lineno=730, col_offset=8), lineno=730, col_offset=8), If(Name('has_arg', Load(), lineno=731, col_offset=11), [If(UnaryOp(Not(), Name('opt_arg', Load(), lineno=732, col_offset=19), lineno=732, col_offset=15), [Expr(Call(Attribute(Name('fp', Load(), lineno=733, col_offset=16), 'write', Load(), lineno=733, col_offset=16), [Str('_object, ', lineno=733, col_offset=25)], [], None, None, lineno=733, col_offset=16), lineno=733, col_offset=16)], [Expr(Call(Attribute(Name('fp', Load(), lineno=735, col_offset=16), 'write', Load(), lineno=735, col_offset=16), [Str('_object=None, ', lineno=735, col_offset=25)], [], None, None, lineno=735, col_offset=16), lineno=735, col_offset=16)], lineno=732, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=737, col_offset=12), 'write', Load(), lineno=737, col_offset=12), [Str('_no_object=None, ', lineno=737, col_offset=21)], [], None, None, lineno=737, col_offset=12), lineno=737, col_offset=12)], lineno=731, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=738, col_offset=8), 'write', Load(), lineno=738, col_offset=8), [Str('_attributes={}, **_arguments):\n', lineno=738, col_offset=17)], [], None, None, lineno=738, col_offset=8), lineno=738, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=743, col_offset=8), 'write', Load(), lineno=743, col_offset=8), [BinOp(Str('        """%s: %s\n', lineno=743, col_offset=17), Mod(), Tuple([Call(Name('ascii', Load(), lineno=743, col_offset=40), [Name('name', Load(), lineno=743, col_offset=46)], [], None, None, lineno=743, col_offset=40), Call(Name('ascii', Load(), lineno=743, col_offset=53), [Name('desc', Load(), lineno=743, col_offset=59)], [], None, None, lineno=743, col_offset=53)], Load(), lineno=743, col_offset=40), lineno=743, col_offset=17)], [], None, None, lineno=743, col_offset=8), lineno=743, col_offset=8), If(Name('has_arg', Load(), lineno=744, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=745, col_offset=12), 'write', Load(), lineno=745, col_offset=12), [BinOp(Str('        Required argument: %s\n', lineno=745, col_offset=21), Mod(), Call(Name('getdatadoc', Load(), lineno=745, col_offset=55), [Name('accepts', Load(), lineno=745, col_offset=66)], [], None, None, lineno=745, col_offset=55), lineno=745, col_offset=21)], [], None, None, lineno=745, col_offset=12), lineno=745, col_offset=12)], [If(Name('opt_arg', Load(), lineno=746, col_offset=13), [Expr(Call(Attribute(Name('fp', Load(), lineno=747, col_offset=12), 'write', Load(), lineno=747, col_offset=12), [BinOp(Str('        Optional argument: %s\n', lineno=747, col_offset=21), Mod(), Call(Name('getdatadoc', Load(), lineno=747, col_offset=55), [Name('accepts', Load(), lineno=747, col_offset=66)], [], None, None, lineno=747, col_offset=55), lineno=747, col_offset=21)], [], None, None, lineno=747, col_offset=12), lineno=747, col_offset=12)], [], lineno=746, col_offset=13)], lineno=744, col_offset=8), For(Name('arg', Store(), lineno=748, col_offset=12), Name('arguments', Load(), lineno=748, col_offset=19), [Expr(Call(Attribute(Name('fp', Load(), lineno=749, col_offset=12), 'write', Load(), lineno=749, col_offset=12), [BinOp(Str('        Keyword argument %s: %s\n', lineno=749, col_offset=21), Mod(), Tuple([Call(Name('identify', Load(), lineno=749, col_offset=58), [Subscript(Name('arg', Load(), lineno=749, col_offset=67), Index(Num(0, lineno=749, col_offset=71)), Load(), lineno=749, col_offset=67)], [], None, None, lineno=749, col_offset=58), Call(Name('getdatadoc', Load(), lineno=750, col_offset=20), [Subscript(Name('arg', Load(), lineno=750, col_offset=31), Index(Num(2, lineno=750, col_offset=35)), Load(), lineno=750, col_offset=31)], [], None, None, lineno=750, col_offset=20)], Load(), lineno=749, col_offset=58), lineno=749, col_offset=21)], [], None, None, lineno=749, col_offset=12), lineno=749, col_offset=12)], [], lineno=748, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=751, col_offset=8), 'write', Load(), lineno=751, col_offset=8), [Str('        Keyword argument _attributes: AppleEvent attribute dictionary\n', lineno=751, col_offset=17)], [], None, None, lineno=751, col_offset=8), lineno=751, col_offset=8), If(UnaryOp(Not(), Call(Name('is_null', Load(), lineno=752, col_offset=15), [Name('returns', Load(), lineno=752, col_offset=23)], [], None, None, lineno=752, col_offset=15), lineno=752, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=753, col_offset=12), 'write', Load(), lineno=753, col_offset=12), [BinOp(Str('        Returns: %s\n', lineno=753, col_offset=21), Mod(), Call(Name('getdatadoc', Load(), lineno=753, col_offset=45), [Name('returns', Load(), lineno=753, col_offset=56)], [], None, None, lineno=753, col_offset=45), lineno=753, col_offset=21)], [], None, None, lineno=753, col_offset=12), lineno=753, col_offset=12)], [], lineno=752, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=754, col_offset=8), 'write', Load(), lineno=754, col_offset=8), [Str('        """\n', lineno=754, col_offset=17)], [], None, None, lineno=754, col_offset=8), lineno=754, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=758, col_offset=8), 'write', Load(), lineno=758, col_offset=8), [BinOp(Str('        _code = %r\n', lineno=758, col_offset=17), Mod(), Tuple([Name('code', Load(), lineno=758, col_offset=42)], Load(), lineno=758, col_offset=42), lineno=758, col_offset=17)], [], None, None, lineno=758, col_offset=8), lineno=758, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=759, col_offset=8), 'write', Load(), lineno=759, col_offset=8), [BinOp(Str('        _subcode = %r\n\n', lineno=759, col_offset=17), Mod(), Tuple([Name('subcode', Load(), lineno=759, col_offset=47)], Load(), lineno=759, col_offset=47), lineno=759, col_offset=17)], [], None, None, lineno=759, col_offset=8), lineno=759, col_offset=8), If(Name('arguments', Load(), lineno=763, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=764, col_offset=12), 'write', Load(), lineno=764, col_offset=12), [BinOp(Str('        aetools.keysubst(_arguments, self._argmap_%s)\n', lineno=764, col_offset=21), Mod(), Name('funcname', Load(), lineno=764, col_offset=79), lineno=764, col_offset=21)], [], None, None, lineno=764, col_offset=12), lineno=764, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=766, col_offset=12), 'write', Load(), lineno=766, col_offset=12), [Str("        if _arguments: raise TypeError, 'No optional args expected'\n", lineno=766, col_offset=21)], [], None, None, lineno=766, col_offset=12), lineno=766, col_offset=12)], lineno=763, col_offset=8), If(Name('has_arg', Load(), lineno=770, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=771, col_offset=12), 'write', Load(), lineno=771, col_offset=12), [Str("        _arguments['----'] = _object\n", lineno=771, col_offset=21)], [], None, None, lineno=771, col_offset=12), lineno=771, col_offset=12)], [If(Name('opt_arg', Load(), lineno=772, col_offset=13), [Expr(Call(Attribute(Name('fp', Load(), lineno=773, col_offset=12), 'write', Load(), lineno=773, col_offset=12), [Str('        if _object:\n', lineno=773, col_offset=21)], [], None, None, lineno=773, col_offset=12), lineno=773, col_offset=12), Expr(Call(Attribute(Name('fp', Load(), lineno=774, col_offset=12), 'write', Load(), lineno=774, col_offset=12), [Str("            _arguments['----'] = _object\n", lineno=774, col_offset=21)], [], None, None, lineno=774, col_offset=12), lineno=774, col_offset=12)], [Expr(Call(Attribute(Name('fp', Load(), lineno=776, col_offset=12), 'write', Load(), lineno=776, col_offset=12), [Str("        if _no_object is not None: raise TypeError, 'No direct arg expected'\n", lineno=776, col_offset=21)], [], None, None, lineno=776, col_offset=12), lineno=776, col_offset=12)], lineno=772, col_offset=13)], lineno=770, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=777, col_offset=8), 'write', Load(), lineno=777, col_offset=8), [Str('\n', lineno=777, col_offset=17)], [], None, None, lineno=777, col_offset=8), lineno=777, col_offset=8), For(Name('a', Store(), lineno=781, col_offset=12), Name('arguments', Load(), lineno=781, col_offset=17), [If(Call(Name('is_enum', Load(), lineno=782, col_offset=15), [Subscript(Name('a', Load(), lineno=782, col_offset=23), Index(Num(2, lineno=782, col_offset=25)), Load(), lineno=782, col_offset=23)], [], None, None, lineno=782, col_offset=15), [Assign([Name('kname', Store(), lineno=783, col_offset=16)], Subscript(Name('a', Load(), lineno=783, col_offset=24), Index(Num(1, lineno=783, col_offset=26)), Load(), lineno=783, col_offset=24), lineno=783, col_offset=16), Assign([Name('ename', Store(), lineno=784, col_offset=16)], Subscript(Subscript(Name('a', Load(), lineno=784, col_offset=24), Index(Num(2, lineno=784, col_offset=26)), Load(), lineno=784, col_offset=24), Index(Num(0, lineno=784, col_offset=29)), Load(), lineno=784, col_offset=24), lineno=784, col_offset=16), If(Compare(Name('ename', Load(), lineno=785, col_offset=19), [NotEq()], [Str('****', lineno=785, col_offset=28)], lineno=785, col_offset=19), [Expr(Call(Attribute(Name('fp', Load(), lineno=786, col_offset=20), 'write', Load(), lineno=786, col_offset=20), [BinOp(Str('        aetools.enumsubst(_arguments, %r, _Enum_%s)\n', lineno=786, col_offset=29), Mod(), Tuple([Name('kname', Load(), lineno=787, col_offset=25), Call(Name('identify', Load(), lineno=787, col_offset=32), [Name('ename', Load(), lineno=787, col_offset=41)], [], None, None, lineno=787, col_offset=32)], Load(), lineno=787, col_offset=25), lineno=786, col_offset=29)], [], None, None, lineno=786, col_offset=20), lineno=786, col_offset=20), Assign([Subscript(Attribute(Name('self', Load(), lineno=788, col_offset=20), 'enumsneeded', Load(), lineno=788, col_offset=20), Index(Name('ename', Load(), lineno=788, col_offset=37)), Store(), lineno=788, col_offset=20)], Num(1, lineno=788, col_offset=46), lineno=788, col_offset=20)], [], lineno=785, col_offset=16)], [], lineno=782, col_offset=12)], [], lineno=781, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=789, col_offset=8), 'write', Load(), lineno=789, col_offset=8), [Str('\n', lineno=789, col_offset=17)], [], None, None, lineno=789, col_offset=8), lineno=789, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=793, col_offset=8), 'write', Load(), lineno=793, col_offset=8), [Str('        _reply, _arguments, _attributes = self.send(_code, _subcode,\n', lineno=793, col_offset=17)], [], None, None, lineno=793, col_offset=8), lineno=793, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=794, col_offset=8), 'write', Load(), lineno=794, col_offset=8), [Str('                _arguments, _attributes)\n', lineno=794, col_offset=17)], [], None, None, lineno=794, col_offset=8), lineno=794, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=798, col_offset=8), 'write', Load(), lineno=798, col_offset=8), [Str("        if _arguments.get('errn', 0):\n", lineno=798, col_offset=17)], [], None, None, lineno=798, col_offset=8), lineno=798, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=799, col_offset=8), 'write', Load(), lineno=799, col_offset=8), [Str('            raise aetools.Error, aetools.decodeerror(_arguments)\n', lineno=799, col_offset=17)], [], None, None, lineno=799, col_offset=8), lineno=799, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=800, col_offset=8), 'write', Load(), lineno=800, col_offset=8), [Str('        # XXXX Optionally decode result\n', lineno=800, col_offset=17)], [], None, None, lineno=800, col_offset=8), lineno=800, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=804, col_offset=8), 'write', Load(), lineno=804, col_offset=8), [Str("        if '----' in _arguments:\n", lineno=804, col_offset=17)], [], None, None, lineno=804, col_offset=8), lineno=804, col_offset=8), If(Call(Name('is_enum', Load(), lineno=805, col_offset=11), [Name('returns', Load(), lineno=805, col_offset=19)], [], None, None, lineno=805, col_offset=11), [Expr(Call(Attribute(Name('fp', Load(), lineno=806, col_offset=12), 'write', Load(), lineno=806, col_offset=12), [Str('            # XXXX Should do enum remapping here...\n', lineno=806, col_offset=21)], [], None, None, lineno=806, col_offset=12), lineno=806, col_offset=12)], [], lineno=805, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=807, col_offset=8), 'write', Load(), lineno=807, col_offset=8), [Str("            return _arguments['----']\n", lineno=807, col_offset=17)], [], None, None, lineno=807, col_offset=8), lineno=807, col_offset=8), Expr(Call(Attribute(Name('fp', Load(), lineno=808, col_offset=8), 'write', Load(), lineno=808, col_offset=8), [Str('\n', lineno=808, col_offset=17)], [], None, None, lineno=808, col_offset=8), lineno=808, col_offset=8)], [], lineno=710, col_offset=4), FunctionDef('findenumsinevent', arguments([Name('self', Param(), lineno=810, col_offset=25), Name('event', Param(), lineno=810, col_offset=31)], None, None, []), [Expr(Str('Find all enums for a single event', lineno=811, col_offset=8), lineno=811, col_offset=8), Assign([List([Name('name', Store(), lineno=812, col_offset=9), Name('desc', Store(), lineno=812, col_offset=15), Name('code', Store(), lineno=812, col_offset=21), Name('subcode', Store(), lineno=812, col_offset=27), Name('returns', Store(), lineno=812, col_offset=36), Name('accepts', Store(), lineno=812, col_offset=45), Name('arguments', Store(), lineno=812, col_offset=54)], Store(), lineno=812, col_offset=8)], Name('event', Load(), lineno=812, col_offset=67), lineno=812, col_offset=8), For(Name('a', Store(), lineno=813, col_offset=12), Name('arguments', Load(), lineno=813, col_offset=17), [If(Call(Name('is_enum', Load(), lineno=814, col_offset=15), [Subscript(Name('a', Load(), lineno=814, col_offset=23), Index(Num(2, lineno=814, col_offset=25)), Load(), lineno=814, col_offset=23)], [], None, None, lineno=814, col_offset=15), [Assign([Name('ename', Store(), lineno=815, col_offset=16)], Subscript(Subscript(Name('a', Load(), lineno=815, col_offset=24), Index(Num(2, lineno=815, col_offset=26)), Load(), lineno=815, col_offset=24), Index(Num(0, lineno=815, col_offset=29)), Load(), lineno=815, col_offset=24), lineno=815, col_offset=16), If(Compare(Name('ename', Load(), lineno=816, col_offset=19), [NotEq()], [Str('****', lineno=816, col_offset=28)], lineno=816, col_offset=19), [Assign([Subscript(Attribute(Name('self', Load(), lineno=817, col_offset=20), 'enumsneeded', Load(), lineno=817, col_offset=20), Index(Name('ename', Load(), lineno=817, col_offset=37)), Store(), lineno=817, col_offset=20)], Num(1, lineno=817, col_offset=46), lineno=817, col_offset=20)], [], lineno=816, col_offset=16)], [], lineno=814, col_offset=12)], [], lineno=813, col_offset=8)], [], lineno=810, col_offset=4)], [], lineno=553, col_offset=0), ClassDef('CodeNameMapper', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=828, col_offset=17), Name('interact', Param(), lineno=828, col_offset=23), Name('verbose', Param(), lineno=828, col_offset=35)], None, None, [Num(1, lineno=828, col_offset=32), Name('None', Load(), lineno=828, col_offset=43)]), [Assign([Attribute(Name('self', Load(), lineno=829, col_offset=8), 'code2name', Store(), lineno=829, col_offset=8)], Dict([Str('property', lineno=830, col_offset=12), Str('class', lineno=831, col_offset=12), Str('enum', lineno=832, col_offset=12), Str('comparison', lineno=833, col_offset=12)], [Dict([], [], lineno=830, col_offset=25), Dict([], [], lineno=831, col_offset=22), Dict([], [], lineno=832, col_offset=21), Dict([], [], lineno=833, col_offset=27)], lineno=829, col_offset=25), lineno=829, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=835, col_offset=8), 'name2code', Store(), lineno=835, col_offset=8)], Dict([Str('property', lineno=836, col_offset=12), Str('class', lineno=837, col_offset=12), Str('enum', lineno=838, col_offset=12), Str('comparison', lineno=839, col_offset=12)], [Dict([], [], lineno=836, col_offset=25), Dict([], [], lineno=837, col_offset=22), Dict([], [], lineno=838, col_offset=21), Dict([], [], lineno=839, col_offset=27)], lineno=835, col_offset=26), lineno=835, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=841, col_offset=8), 'modulename', Store(), lineno=841, col_offset=8)], Name('None', Load(), lineno=841, col_offset=26), lineno=841, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=842, col_offset=8), 'star_imported', Store(), lineno=842, col_offset=8)], Num(0, lineno=842, col_offset=29), lineno=842, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=843, col_offset=8), 'can_interact', Store(), lineno=843, col_offset=8)], Name('interact', Load(), lineno=843, col_offset=28), lineno=843, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=844, col_offset=8), 'verbose', Store(), lineno=844, col_offset=8)], Name('verbose', Load(), lineno=844, col_offset=23), lineno=844, col_offset=8)], [], lineno=828, col_offset=4), FunctionDef('addnamecode', arguments([Name('self', Param(), lineno=846, col_offset=20), Name('type', Param(), lineno=846, col_offset=26), Name('name', Param(), lineno=846, col_offset=32), Name('code', Param(), lineno=846, col_offset=38)], None, None, []), [Assign([Subscript(Subscript(Attribute(Name('self', Load(), lineno=847, col_offset=8), 'name2code', Load(), lineno=847, col_offset=8), Index(Name('type', Load(), lineno=847, col_offset=23)), Load(), lineno=847, col_offset=8), Index(Name('name', Load(), lineno=847, col_offset=29)), Store(), lineno=847, col_offset=8)], Name('code', Load(), lineno=847, col_offset=37), lineno=847, col_offset=8), If(Compare(Name('code', Load(), lineno=848, col_offset=11), [NotIn()], [Subscript(Attribute(Name('self', Load(), lineno=848, col_offset=23), 'code2name', Load(), lineno=848, col_offset=23), Index(Name('type', Load(), lineno=848, col_offset=38)), Load(), lineno=848, col_offset=23)], lineno=848, col_offset=11), [Assign([Subscript(Subscript(Attribute(Name('self', Load(), lineno=849, col_offset=12), 'code2name', Load(), lineno=849, col_offset=12), Index(Name('type', Load(), lineno=849, col_offset=27)), Load(), lineno=849, col_offset=12), Index(Name('code', Load(), lineno=849, col_offset=33)), Store(), lineno=849, col_offset=12)], Name('name', Load(), lineno=849, col_offset=41), lineno=849, col_offset=12)], [], lineno=848, col_offset=8)], [], lineno=846, col_offset=4), FunctionDef('hasname', arguments([Name('self', Param(), lineno=851, col_offset=16), Name('name', Param(), lineno=851, col_offset=22)], None, None, []), [For(Name('dict', Store(), lineno=852, col_offset=12), Call(Attribute(Attribute(Name('self', Load(), lineno=852, col_offset=20), 'name2code', Load(), lineno=852, col_offset=20), 'values', Load(), lineno=852, col_offset=20), [], [], None, None, lineno=852, col_offset=20), [If(Compare(Name('name', Load(), lineno=853, col_offset=15), [In()], [Name('dict', Load(), lineno=853, col_offset=23)], lineno=853, col_offset=15), [Return(Name('True', Load(), lineno=854, col_offset=23), lineno=854, col_offset=16)], [], lineno=853, col_offset=12)], [], lineno=852, col_offset=8), Return(Name('False', Load(), lineno=855, col_offset=15), lineno=855, col_offset=8)], [], lineno=851, col_offset=4), FunctionDef('hascode', arguments([Name('self', Param(), lineno=857, col_offset=16), Name('type', Param(), lineno=857, col_offset=22), Name('code', Param(), lineno=857, col_offset=28)], None, None, []), [Return(Compare(Name('code', Load(), lineno=858, col_offset=15), [In()], [Subscript(Attribute(Name('self', Load(), lineno=858, col_offset=23), 'code2name', Load(), lineno=858, col_offset=23), Index(Name('type', Load(), lineno=858, col_offset=38)), Load(), lineno=858, col_offset=23)], lineno=858, col_offset=15), lineno=858, col_offset=8)], [], lineno=857, col_offset=4), FunctionDef('findcodename', arguments([Name('self', Param(), lineno=860, col_offset=21), Name('type', Param(), lineno=860, col_offset=27), Name('code', Param(), lineno=860, col_offset=33)], None, None, []), [If(UnaryOp(Not(), Call(Attribute(Name('self', Load(), lineno=861, col_offset=15), 'hascode', Load(), lineno=861, col_offset=15), [Name('type', Load(), lineno=861, col_offset=28), Name('code', Load(), lineno=861, col_offset=34)], [], None, None, lineno=861, col_offset=15), lineno=861, col_offset=11), [Return(Tuple([Name('None', Load(), lineno=862, col_offset=19), Name('None', Load(), lineno=862, col_offset=25), Name('None', Load(), lineno=862, col_offset=31)], Load(), lineno=862, col_offset=19), lineno=862, col_offset=12)], [], lineno=861, col_offset=8), Assign([Name('name', Store(), lineno=863, col_offset=8)], Subscript(Subscript(Attribute(Name('self', Load(), lineno=863, col_offset=15), 'code2name', Load(), lineno=863, col_offset=15), Index(Name('type', Load(), lineno=863, col_offset=30)), Load(), lineno=863, col_offset=15), Index(Name('code', Load(), lineno=863, col_offset=36)), Load(), lineno=863, col_offset=15), lineno=863, col_offset=8), If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=864, col_offset=11), 'modulename', Load(), lineno=864, col_offset=11), UnaryOp(Not(), Attribute(Name('self', Load(), lineno=864, col_offset=35), 'star_imported', Load(), lineno=864, col_offset=35), lineno=864, col_offset=31)], lineno=864, col_offset=11), [Assign([Name('qualname', Store(), lineno=865, col_offset=12)], BinOp(Str('%s.%s', lineno=865, col_offset=23), Mod(), Tuple([Attribute(Name('self', Load(), lineno=865, col_offset=32), 'modulename', Load(), lineno=865, col_offset=32), Name('name', Load(), lineno=865, col_offset=49)], Load(), lineno=865, col_offset=32), lineno=865, col_offset=23), lineno=865, col_offset=12)], [Assign([Name('qualname', Store(), lineno=867, col_offset=12)], Name('name', Load(), lineno=867, col_offset=23), lineno=867, col_offset=12)], lineno=864, col_offset=8), Return(Tuple([Name('name', Load(), lineno=868, col_offset=15), Name('qualname', Load(), lineno=868, col_offset=21), Attribute(Name('self', Load(), lineno=868, col_offset=31), 'modulename', Load(), lineno=868, col_offset=31)], Load(), lineno=868, col_offset=15), lineno=868, col_offset=8)], [], lineno=860, col_offset=4), FunctionDef('getall', arguments([Name('self', Param(), lineno=870, col_offset=15), Name('type', Param(), lineno=870, col_offset=21)], None, None, []), [Return(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=871, col_offset=15), 'code2name', Load(), lineno=871, col_offset=15), Index(Name('type', Load(), lineno=871, col_offset=30)), Load(), lineno=871, col_offset=15), 'items', Load(), lineno=871, col_offset=15), [], [], None, None, lineno=871, col_offset=15), lineno=871, col_offset=8)], [], lineno=870, col_offset=4), FunctionDef('addmodule', arguments([Name('self', Param(), lineno=873, col_offset=18), Name('module', Param(), lineno=873, col_offset=24), Name('name', Param(), lineno=873, col_offset=32), Name('star_imported', Param(), lineno=873, col_offset=38)], None, None, []), [Assign([Attribute(Name('self', Load(), lineno=874, col_offset=8), 'modulename', Store(), lineno=874, col_offset=8)], Name('name', Load(), lineno=874, col_offset=26), lineno=874, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=875, col_offset=8), 'star_imported', Store(), lineno=875, col_offset=8)], Name('star_imported', Load(), lineno=875, col_offset=29), lineno=875, col_offset=8), For(Tuple([Name('code', Store(), lineno=876, col_offset=12), Name('name', Store(), lineno=876, col_offset=18)], Store(), lineno=876, col_offset=12), Call(Attribute(Attribute(Name('module', Load(), lineno=876, col_offset=26), '_propdeclarations', Load(), lineno=876, col_offset=26), 'items', Load(), lineno=876, col_offset=26), [], [], None, None, lineno=876, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=877, col_offset=12), 'addnamecode', Load(), lineno=877, col_offset=12), [Str('property', lineno=877, col_offset=29), Name('name', Load(), lineno=877, col_offset=41), Name('code', Load(), lineno=877, col_offset=47)], [], None, None, lineno=877, col_offset=12), lineno=877, col_offset=12)], [], lineno=876, col_offset=8), For(Tuple([Name('code', Store(), lineno=878, col_offset=12), Name('name', Store(), lineno=878, col_offset=18)], Store(), lineno=878, col_offset=12), Call(Attribute(Attribute(Name('module', Load(), lineno=878, col_offset=26), '_classdeclarations', Load(), lineno=878, col_offset=26), 'items', Load(), lineno=878, col_offset=26), [], [], None, None, lineno=878, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=879, col_offset=12), 'addnamecode', Load(), lineno=879, col_offset=12), [Str('class', lineno=879, col_offset=29), Name('name', Load(), lineno=879, col_offset=38), Name('code', Load(), lineno=879, col_offset=44)], [], None, None, lineno=879, col_offset=12), lineno=879, col_offset=12)], [], lineno=878, col_offset=8), For(Name('code', Store(), lineno=880, col_offset=12), Call(Attribute(Attribute(Name('module', Load(), lineno=880, col_offset=20), '_enumdeclarations', Load(), lineno=880, col_offset=20), 'keys', Load(), lineno=880, col_offset=20), [], [], None, None, lineno=880, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=881, col_offset=12), 'addnamecode', Load(), lineno=881, col_offset=12), [Str('enum', lineno=881, col_offset=29), BinOp(Str('_Enum_', lineno=881, col_offset=37), Add(), Call(Name('identify', Load(), lineno=881, col_offset=46), [Name('code', Load(), lineno=881, col_offset=55)], [], None, None, lineno=881, col_offset=46), lineno=881, col_offset=37), Name('code', Load(), lineno=881, col_offset=62)], [], None, None, lineno=881, col_offset=12), lineno=881, col_offset=12)], [], lineno=880, col_offset=8), For(Tuple([Name('code', Store(), lineno=882, col_offset=12), Name('name', Store(), lineno=882, col_offset=18)], Store(), lineno=882, col_offset=12), Call(Attribute(Attribute(Name('module', Load(), lineno=882, col_offset=26), '_compdeclarations', Load(), lineno=882, col_offset=26), 'items', Load(), lineno=882, col_offset=26), [], [], None, None, lineno=882, col_offset=26), [Expr(Call(Attribute(Name('self', Load(), lineno=883, col_offset=12), 'addnamecode', Load(), lineno=883, col_offset=12), [Str('comparison', lineno=883, col_offset=29), Name('name', Load(), lineno=883, col_offset=43), Name('code', Load(), lineno=883, col_offset=49)], [], None, None, lineno=883, col_offset=12), lineno=883, col_offset=12)], [], lineno=882, col_offset=8)], [], lineno=873, col_offset=4), FunctionDef('prepareforexport', arguments([Name('self', Param(), lineno=885, col_offset=25), Name('name', Param(), lineno=885, col_offset=31)], None, None, [Name('None', Load(), lineno=885, col_offset=36)]), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=886, col_offset=15), 'modulename', Load(), lineno=886, col_offset=15), lineno=886, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=887, col_offset=12), 'modulename', Store(), lineno=887, col_offset=12)], Name('name', Load(), lineno=887, col_offset=30), lineno=887, col_offset=12)], [], lineno=886, col_offset=8), Return(Name('self', Load(), lineno=888, col_offset=15), lineno=888, col_offset=8)], [], lineno=885, col_offset=4)], [], lineno=826, col_offset=0), ClassDef('ObjectCompiler', [], [FunctionDef('__init__', arguments([Name('self', Param(), lineno=891, col_offset=17), Name('fp', Param(), lineno=891, col_offset=23), Name('modname', Param(), lineno=891, col_offset=27), Name('basesuite', Param(), lineno=891, col_offset=36), Name('othernamemappers', Param(), lineno=891, col_offset=47), Name('interact', Param(), lineno=891, col_offset=70), Name('verbose', Param(), lineno=892, col_offset=12)], None, None, [Name('None', Load(), lineno=891, col_offset=64), Num(1, lineno=891, col_offset=79), Name('None', Load(), lineno=892, col_offset=20)]), [Assign([Attribute(Name('self', Load(), lineno=893, col_offset=8), 'fp', Store(), lineno=893, col_offset=8)], Name('fp', Load(), lineno=893, col_offset=18), lineno=893, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=894, col_offset=8), 'verbose', Store(), lineno=894, col_offset=8)], Name('verbose', Load(), lineno=894, col_offset=23), lineno=894, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=895, col_offset=8), 'basesuite', Store(), lineno=895, col_offset=8)], Name('basesuite', Load(), lineno=895, col_offset=25), lineno=895, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=896, col_offset=8), 'can_interact', Store(), lineno=896, col_offset=8)], Name('interact', Load(), lineno=896, col_offset=28), lineno=896, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=897, col_offset=8), 'modulename', Store(), lineno=897, col_offset=8)], Name('modname', Load(), lineno=897, col_offset=26), lineno=897, col_offset=8), Assign([Attribute(Name('self', Load(), lineno=898, col_offset=8), 'namemappers', Store(), lineno=898, col_offset=8)], List([Call(Name('CodeNameMapper', Load(), lineno=898, col_offset=28), [Attribute(Name('self', Load(), lineno=898, col_offset=43), 'can_interact', Load(), lineno=898, col_offset=43), Attribute(Name('self', Load(), lineno=898, col_offset=62), 'verbose', Load(), lineno=898, col_offset=62)], [], None, None, lineno=898, col_offset=28)], Load(), lineno=898, col_offset=27), lineno=898, col_offset=8), If(Name('othernamemappers', Load(), lineno=899, col_offset=11), [Assign([Attribute(Name('self', Load(), lineno=900, col_offset=12), 'othernamemappers', Store(), lineno=900, col_offset=12)], Subscript(Name('othernamemappers', Load(), lineno=900, col_offset=36), Slice(None, None, None), Load(), lineno=900, col_offset=36), lineno=900, col_offset=12)], [Assign([Attribute(Name('self', Load(), lineno=902, col_offset=12), 'othernamemappers', Store(), lineno=902, col_offset=12)], List([], Load(), lineno=902, col_offset=36), lineno=902, col_offset=12)], lineno=899, col_offset=8), If(Name('basesuite', Load(), lineno=903, col_offset=11), [Assign([Name('basemapper', Store(), lineno=904, col_offset=12)], Call(Name('CodeNameMapper', Load(), lineno=904, col_offset=25), [Attribute(Name('self', Load(), lineno=904, col_offset=40), 'can_interact', Load(), lineno=904, col_offset=40), Attribute(Name('self', Load(), lineno=904, col_offset=59), 'verbose', Load(), lineno=904, col_offset=59)], [], None, None, lineno=904, col_offset=25), lineno=904, col_offset=12), Expr(Call(Attribute(Name('basemapper', Load(), lineno=905, col_offset=12), 'addmodule', Load(), lineno=905, col_offset=12), [Name('basesuite', Load(), lineno=905, col_offset=33), Str('', lineno=905, col_offset=44), Num(1, lineno=905, col_offset=48)], [], None, None, lineno=905, col_offset=12), lineno=905, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=906, col_offset=12), 'namemappers', Load(), lineno=906, col_offset=12), 'append', Load(), lineno=906, col_offset=12), [Name('basemapper', Load(), lineno=906, col_offset=36)], [], None, None, lineno=906, col_offset=12), lineno=906, col_offset=12)], [], lineno=903, col_offset=8)], [], lineno=891, col_offset=4), FunctionDef('getprecompinfo', arguments([Name('self', Param(), lineno=908, col_offset=23), Name('modname', Param(), lineno=908, col_offset=29)], None, None, []), [Assign([Name('list', Store(), lineno=909, col_offset=8)], List([], Load(), lineno=909, col_offset=15), lineno=909, col_offset=8), For(Name('mapper', Store(), lineno=910, col_offset=12), Attribute(Name('self', Load(), lineno=910, col_offset=22), 'namemappers', Load(), lineno=910, col_offset=22), [Assign([Name('emapper', Store(), lineno=911, col_offset=12)], Call(Attribute(Name('mapper', Load(), lineno=911, col_offset=22), 'prepareforexport', Load(), lineno=911, col_offset=22), [Name('modname', Load(), lineno=911, col_offset=46)], [], None, None, lineno=911, col_offset=22), lineno=911, col_offset=12), If(Name('emapper', Load(), lineno=912, col_offset=15), [Expr(Call(Attribute(Name('list', Load(), lineno=913, col_offset=16), 'append', Load(), lineno=913, col_offset=16), [Name('emapper', Load(), lineno=913, col_offset=28)], [], None, None, lineno=913, col_offset=16), lineno=913, col_offset=16)], [], lineno=912, col_offset=12)], [], lineno=910, col_offset=8), Return(Name('list', Load(), lineno=914, col_offset=15), lineno=914, col_offset=8)], [], lineno=908, col_offset=4), FunctionDef('findcodename', arguments([Name('self', Param(), lineno=916, col_offset=21), Name('type', Param(), lineno=916, col_offset=27), Name('code', Param(), lineno=916, col_offset=33)], None, None, []), [While(Num(1, lineno=917, col_offset=14), [For(Name('mapper', Store(), lineno=919, col_offset=16), Attribute(Name('self', Load(), lineno=919, col_offset=26), 'namemappers', Load(), lineno=919, col_offset=26), [If(Call(Attribute(Name('mapper', Load(), lineno=920, col_offset=19), 'hascode', Load(), lineno=920, col_offset=19), [Name('type', Load(), lineno=920, col_offset=34), Name('code', Load(), lineno=920, col_offset=40)], [], None, None, lineno=920, col_offset=19), [Return(Call(Attribute(Name('mapper', Load(), lineno=921, col_offset=27), 'findcodename', Load(), lineno=921, col_offset=27), [Name('type', Load(), lineno=921, col_offset=47), Name('code', Load(), lineno=921, col_offset=53)], [], None, None, lineno=921, col_offset=27), lineno=921, col_offset=20)], [], lineno=920, col_offset=16)], [], lineno=919, col_offset=12), For(Name('mapper', Store(), lineno=923, col_offset=16), Attribute(Name('self', Load(), lineno=923, col_offset=26), 'othernamemappers', Load(), lineno=923, col_offset=26), [If(Call(Attribute(Name('mapper', Load(), lineno=924, col_offset=19), 'hascode', Load(), lineno=924, col_offset=19), [Name('type', Load(), lineno=924, col_offset=34), Name('code', Load(), lineno=924, col_offset=40)], [], None, None, lineno=924, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=925, col_offset=20), 'othernamemappers', Load(), lineno=925, col_offset=20), 'remove', Load(), lineno=925, col_offset=20), [Name('mapper', Load(), lineno=925, col_offset=49)], [], None, None, lineno=925, col_offset=20), lineno=925, col_offset=20), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=926, col_offset=20), 'namemappers', Load(), lineno=926, col_offset=20), 'append', Load(), lineno=926, col_offset=20), [Name('mapper', Load(), lineno=926, col_offset=44)], [], None, None, lineno=926, col_offset=20), lineno=926, col_offset=20), If(Attribute(Name('self', Load(), lineno=927, col_offset=23), 'fp', Load(), lineno=927, col_offset=23), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=928, col_offset=24), 'fp', Load(), lineno=928, col_offset=24), 'write', Load(), lineno=928, col_offset=24), [BinOp(Str('import %s\n', lineno=928, col_offset=38), Mod(), Attribute(Name('mapper', Load(), lineno=928, col_offset=52), 'modulename', Load(), lineno=928, col_offset=52), lineno=928, col_offset=38)], [], None, None, lineno=928, col_offset=24), lineno=928, col_offset=24)], [], lineno=927, col_offset=20), Break( lineno=929, col_offset=20)], [], lineno=924, col_offset=16)], [If(Attribute(Name('self', Load(), lineno=933, col_offset=19), 'fp', Load(), lineno=933, col_offset=19), [Assign([Name('m', Store(), lineno=934, col_offset=20)], Call(Attribute(Name('self', Load(), lineno=934, col_offset=24), 'askdefinitionmodule', Load(), lineno=934, col_offset=24), [Name('type', Load(), lineno=934, col_offset=49), Name('code', Load(), lineno=934, col_offset=55)], [], None, None, lineno=934, col_offset=24), lineno=934, col_offset=20)], [Assign([Name('m', Store(), lineno=936, col_offset=20)], Name('None', Load(), lineno=936, col_offset=24), lineno=936, col_offset=20)], lineno=933, col_offset=16), If(UnaryOp(Not(), Name('m', Load(), lineno=937, col_offset=23), lineno=937, col_offset=19), [Return(Tuple([Name('None', Load(), lineno=937, col_offset=33), Name('None', Load(), lineno=937, col_offset=39), Name('None', Load(), lineno=937, col_offset=45)], Load(), lineno=937, col_offset=33), lineno=937, col_offset=26)], [], lineno=937, col_offset=16), Assign([Name('mapper', Store(), lineno=938, col_offset=16)], Call(Name('CodeNameMapper', Load(), lineno=938, col_offset=25), [Attribute(Name('self', Load(), lineno=938, col_offset=40), 'can_interact', Load(), lineno=938, col_offset=40), Attribute(Name('self', Load(), lineno=938, col_offset=59), 'verbose', Load(), lineno=938, col_offset=59)], [], None, None, lineno=938, col_offset=25), lineno=938, col_offset=16), Expr(Call(Attribute(Name('mapper', Load(), lineno=939, col_offset=16), 'addmodule', Load(), lineno=939, col_offset=16), [Name('m', Load(), lineno=939, col_offset=33), Attribute(Name('m', Load(), lineno=939, col_offset=36), '__name__', Load(), lineno=939, col_offset=36), Num(0, lineno=939, col_offset=48)], [], None, None, lineno=939, col_offset=16), lineno=939, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=940, col_offset=16), 'namemappers', Load(), lineno=940, col_offset=16), 'append', Load(), lineno=940, col_offset=16), [Name('mapper', Load(), lineno=940, col_offset=40)], [], None, None, lineno=940, col_offset=16), lineno=940, col_offset=16)], lineno=923, col_offset=12)], [], lineno=917, col_offset=8)], [], lineno=916, col_offset=4), FunctionDef('hasname', arguments([Name('self', Param(), lineno=942, col_offset=16), Name('name', Param(), lineno=942, col_offset=22)], None, None, []), [For(Name('mapper', Store(), lineno=943, col_offset=12), Attribute(Name('self', Load(), lineno=943, col_offset=22), 'othernamemappers', Load(), lineno=943, col_offset=22), [If(BoolOp(And(), [Call(Attribute(Name('mapper', Load(), lineno=944, col_offset=15), 'hasname', Load(), lineno=944, col_offset=15), [Name('name', Load(), lineno=944, col_offset=30)], [], None, None, lineno=944, col_offset=15), Compare(Attribute(Name('mapper', Load(), lineno=944, col_offset=40), 'modulename', Load(), lineno=944, col_offset=40), [NotEq()], [Attribute(Name('self', Load(), lineno=944, col_offset=61), 'modulename', Load(), lineno=944, col_offset=61)], lineno=944, col_offset=40)], lineno=944, col_offset=15), [If(Attribute(Name('self', Load(), lineno=945, col_offset=19), 'verbose', Load(), lineno=945, col_offset=19), [Print(Attribute(Name('self', Load(), lineno=946, col_offset=28), 'verbose', Load(), lineno=946, col_offset=28), [Str('Duplicate Python identifier:', lineno=946, col_offset=42), Name('name', Load(), lineno=946, col_offset=74), Attribute(Name('self', Load(), lineno=946, col_offset=80), 'modulename', Load(), lineno=946, col_offset=80), Attribute(Name('mapper', Load(), lineno=946, col_offset=97), 'modulename', Load(), lineno=946, col_offset=97)], True, lineno=946, col_offset=20)], [], lineno=945, col_offset=16), Return(Name('True', Load(), lineno=947, col_offset=23), lineno=947, col_offset=16)], [], lineno=944, col_offset=12)], [], lineno=943, col_offset=8), Return(Name('False', Load(), lineno=948, col_offset=15), lineno=948, col_offset=8)], [], lineno=942, col_offset=4), FunctionDef('askdefinitionmodule', arguments([Name('self', Param(), lineno=950, col_offset=28), Name('type', Param(), lineno=950, col_offset=34), Name('code', Param(), lineno=950, col_offset=40)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=951, col_offset=15), 'can_interact', Load(), lineno=951, col_offset=15), lineno=951, col_offset=11), [If(Attribute(Name('self', Load(), lineno=952, col_offset=15), 'verbose', Load(), lineno=952, col_offset=15), [Print(Attribute(Name('self', Load(), lineno=953, col_offset=24), 'verbose', Load(), lineno=953, col_offset=24), [BinOp(Str("** No definition for %s '%s' found", lineno=953, col_offset=38), Mod(), Tuple([Name('type', Load(), lineno=953, col_offset=78), Name('code', Load(), lineno=953, col_offset=84)], Load(), lineno=953, col_offset=78), lineno=953, col_offset=38)], True, lineno=953, col_offset=16)], [], lineno=952, col_offset=12), Return(Name('None', Load(), lineno=954, col_offset=19), lineno=954, col_offset=12)], [], lineno=951, col_offset=8), Assign([Name('path', Store(), lineno=955, col_offset=8)], Call(Attribute(Name('EasyDialogs', Load(), lineno=955, col_offset=15), 'AskFileForSave', Load(), lineno=955, col_offset=15), [], [keyword('message', BinOp(Str('Where is %s %s declared?', lineno=955, col_offset=50), Mod(), Tuple([Name('type', Load(), lineno=955, col_offset=78), Name('code', Load(), lineno=955, col_offset=84)], Load(), lineno=955, col_offset=78), lineno=955, col_offset=50))], None, None, lineno=955, col_offset=15), lineno=955, col_offset=8), If(UnaryOp(Not(), Name('path', Load(), lineno=956, col_offset=15), lineno=956, col_offset=11), [Return(None, lineno=956, col_offset=21)], [], lineno=956, col_offset=8), Assign([Tuple([Name('path', Store(), lineno=957, col_offset=8), Name('file', Store(), lineno=957, col_offset=14)], Store(), lineno=957, col_offset=8)], Call(Attribute(Attribute(Name('os', Load(), lineno=957, col_offset=21), 'path', Load(), lineno=957, col_offset=21), 'split', Load(), lineno=957, col_offset=21), [Name('path', Load(), lineno=957, col_offset=35)], [], None, None, lineno=957, col_offset=21), lineno=957, col_offset=8), Assign([Name('modname', Store(), lineno=958, col_offset=8)], Subscript(Call(Attribute(Attribute(Name('os', Load(), lineno=958, col_offset=18), 'path', Load(), lineno=958, col_offset=18), 'splitext', Load(), lineno=958, col_offset=18), [Name('file', Load(), lineno=958, col_offset=35)], [], None, None, lineno=958, col_offset=18), Index(Num(0, lineno=958, col_offset=41)), Load(), lineno=958, col_offset=18), lineno=958, col_offset=8), If(UnaryOp(Not(), Compare(Name('path', Load(), lineno=959, col_offset=15), [In()], [Attribute(Name('sys', Load(), lineno=959, col_offset=23), 'path', Load(), lineno=959, col_offset=23)], lineno=959, col_offset=15), lineno=959, col_offset=11), [Expr(Call(Attribute(Attribute(Name('sys', Load(), lineno=960, col_offset=12), 'path', Load(), lineno=960, col_offset=12), 'insert', Load(), lineno=960, col_offset=12), [Num(0, lineno=960, col_offset=28), Name('path', Load(), lineno=960, col_offset=31)], [], None, None, lineno=960, col_offset=12), lineno=960, col_offset=12)], [], lineno=959, col_offset=8), Assign([Name('m', Store(), lineno=961, col_offset=8)], Call(Name('__import__', Load(), lineno=961, col_offset=12), [Name('modname', Load(), lineno=961, col_offset=23)], [], None, None, lineno=961, col_offset=12), lineno=961, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=962, col_offset=8), 'fp', Load(), lineno=962, col_offset=8), 'write', Load(), lineno=962, col_offset=8), [BinOp(Str('import %s\n', lineno=962, col_offset=22), Mod(), Name('modname', Load(), lineno=962, col_offset=36), lineno=962, col_offset=22)], [], None, None, lineno=962, col_offset=8), lineno=962, col_offset=8), Return(Name('m', Load(), lineno=963, col_offset=15), lineno=963, col_offset=8)], [], lineno=950, col_offset=4), FunctionDef('compileclass', arguments([Name('self', Param(), lineno=965, col_offset=21), Name('cls', Param(), lineno=965, col_offset=27)], None, None, []), [Assign([List([Name('name', Store(), lineno=966, col_offset=9), Name('code', Store(), lineno=966, col_offset=15), Name('desc', Store(), lineno=966, col_offset=21), Name('properties', Store(), lineno=966, col_offset=27), Name('elements', Store(), lineno=966, col_offset=39)], Store(), lineno=966, col_offset=8)], Name('cls', Load(), lineno=966, col_offset=51), lineno=966, col_offset=8), Assign([Name('pname', Store(), lineno=967, col_offset=8)], Call(Name('identify', Load(), lineno=967, col_offset=16), [Name('name', Load(), lineno=967, col_offset=25)], [], None, None, lineno=967, col_offset=16), lineno=967, col_offset=8), If(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=968, col_offset=11), 'namemappers', Load(), lineno=968, col_offset=11), Index(Num(0, lineno=968, col_offset=28)), Load(), lineno=968, col_offset=11), 'hascode', Load(), lineno=968, col_offset=11), [Str('class', lineno=968, col_offset=39), Name('code', Load(), lineno=968, col_offset=48)], [], None, None, lineno=968, col_offset=11), [Assign([Tuple([Name('othername', Store(), lineno=970, col_offset=12), Name('dummy', Store(), lineno=970, col_offset=23), Name('dummy', Store(), lineno=970, col_offset=30)], Store(), lineno=970, col_offset=12)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=970, col_offset=38), 'namemappers', Load(), lineno=970, col_offset=38), Index(Num(0, lineno=970, col_offset=55)), Load(), lineno=970, col_offset=38), 'findcodename', Load(), lineno=970, col_offset=38), [Str('class', lineno=970, col_offset=71), Name('code', Load(), lineno=970, col_offset=80)], [], None, None, lineno=970, col_offset=38), lineno=970, col_offset=12), If(Attribute(Name('self', Load(), lineno=971, col_offset=15), 'fp', Load(), lineno=971, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=972, col_offset=16), 'fp', Load(), lineno=972, col_offset=16), 'write', Load(), lineno=972, col_offset=16), [BinOp(Str('\n%s = %s\n', lineno=972, col_offset=30), Mod(), Tuple([Name('pname', Load(), lineno=972, col_offset=45), Name('othername', Load(), lineno=972, col_offset=52)], Load(), lineno=972, col_offset=45), lineno=972, col_offset=30)], [], None, None, lineno=972, col_offset=16), lineno=972, col_offset=16)], [], lineno=971, col_offset=12)], [If(Attribute(Name('self', Load(), lineno=974, col_offset=15), 'fp', Load(), lineno=974, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=975, col_offset=16), 'fp', Load(), lineno=975, col_offset=16), 'write', Load(), lineno=975, col_offset=16), [BinOp(Str('\nclass %s(aetools.ComponentItem):\n', lineno=975, col_offset=30), Mod(), Name('pname', Load(), lineno=975, col_offset=71), lineno=975, col_offset=30)], [], None, None, lineno=975, col_offset=16), lineno=975, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=976, col_offset=16), 'fp', Load(), lineno=976, col_offset=16), 'write', Load(), lineno=976, col_offset=16), [BinOp(Str('    """%s - %s """\n', lineno=976, col_offset=30), Mod(), Tuple([Call(Name('ascii', Load(), lineno=976, col_offset=56), [Name('name', Load(), lineno=976, col_offset=62)], [], None, None, lineno=976, col_offset=56), Call(Name('ascii', Load(), lineno=976, col_offset=69), [Name('desc', Load(), lineno=976, col_offset=75)], [], None, None, lineno=976, col_offset=69)], Load(), lineno=976, col_offset=56), lineno=976, col_offset=30)], [], None, None, lineno=976, col_offset=16), lineno=976, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=977, col_offset=16), 'fp', Load(), lineno=977, col_offset=16), 'write', Load(), lineno=977, col_offset=16), [BinOp(Str('    want = %r\n', lineno=977, col_offset=30), Mod(), Tuple([Name('code', Load(), lineno=977, col_offset=51)], Load(), lineno=977, col_offset=51), lineno=977, col_offset=30)], [], None, None, lineno=977, col_offset=16), lineno=977, col_offset=16)], [], lineno=974, col_offset=12)], lineno=968, col_offset=8), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=978, col_offset=8), 'namemappers', Load(), lineno=978, col_offset=8), Index(Num(0, lineno=978, col_offset=25)), Load(), lineno=978, col_offset=8), 'addnamecode', Load(), lineno=978, col_offset=8), [Str('class', lineno=978, col_offset=40), Name('pname', Load(), lineno=978, col_offset=49), Name('code', Load(), lineno=978, col_offset=56)], [], None, None, lineno=978, col_offset=8), lineno=978, col_offset=8), Assign([Name('is_application_class', Store(), lineno=979, col_offset=8)], Compare(Name('code', Load(), lineno=979, col_offset=32), [Eq()], [Str('capp', lineno=979, col_offset=40)], lineno=979, col_offset=32), lineno=979, col_offset=8), Expr(Call(Attribute(Name('properties', Load(), lineno=980, col_offset=8), 'sort', Load(), lineno=980, col_offset=8), [], [], None, None, lineno=980, col_offset=8), lineno=980, col_offset=8), For(Name('prop', Store(), lineno=981, col_offset=12), Name('properties', Load(), lineno=981, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=982, col_offset=12), 'compileproperty', Load(), lineno=982, col_offset=12), [Name('prop', Load(), lineno=982, col_offset=33), Name('is_application_class', Load(), lineno=982, col_offset=39)], [], None, None, lineno=982, col_offset=12), lineno=982, col_offset=12)], [], lineno=981, col_offset=8), Expr(Call(Attribute(Name('elements', Load(), lineno=983, col_offset=8), 'sort', Load(), lineno=983, col_offset=8), [], [], None, None, lineno=983, col_offset=8), lineno=983, col_offset=8), For(Name('elem', Store(), lineno=984, col_offset=12), Name('elements', Load(), lineno=984, col_offset=20), [Expr(Call(Attribute(Name('self', Load(), lineno=985, col_offset=12), 'compileelement', Load(), lineno=985, col_offset=12), [Name('elem', Load(), lineno=985, col_offset=32)], [], None, None, lineno=985, col_offset=12), lineno=985, col_offset=12)], [], lineno=984, col_offset=8)], [], lineno=965, col_offset=4), FunctionDef('compileproperty', arguments([Name('self', Param(), lineno=987, col_offset=24), Name('prop', Param(), lineno=987, col_offset=30), Name('is_application_class', Param(), lineno=987, col_offset=36)], None, None, [Name('False', Load(), lineno=987, col_offset=57)]), [Assign([List([Name('name', Store(), lineno=988, col_offset=9), Name('code', Store(), lineno=988, col_offset=15), Name('what', Store(), lineno=988, col_offset=21)], Store(), lineno=988, col_offset=8)], Name('prop', Load(), lineno=988, col_offset=29), lineno=988, col_offset=8), If(Compare(Name('code', Load(), lineno=989, col_offset=11), [Eq()], [Str('c@#!', lineno=989, col_offset=19)], lineno=989, col_offset=11), [Return(None, lineno=991, col_offset=12)], [], lineno=989, col_offset=8), Assign([Name('pname', Store(), lineno=992, col_offset=8)], Call(Name('identify', Load(), lineno=992, col_offset=16), [Name('name', Load(), lineno=992, col_offset=25)], [], None, None, lineno=992, col_offset=16), lineno=992, col_offset=8), If(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=993, col_offset=11), 'namemappers', Load(), lineno=993, col_offset=11), Index(Num(0, lineno=993, col_offset=28)), Load(), lineno=993, col_offset=11), 'hascode', Load(), lineno=993, col_offset=11), [Str('property', lineno=993, col_offset=39), Name('code', Load(), lineno=993, col_offset=51)], [], None, None, lineno=993, col_offset=11), [Assign([Tuple([Name('othername', Store(), lineno=995, col_offset=12), Name('dummy', Store(), lineno=995, col_offset=23), Name('dummy', Store(), lineno=995, col_offset=30)], Store(), lineno=995, col_offset=12)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=995, col_offset=38), 'namemappers', Load(), lineno=995, col_offset=38), Index(Num(0, lineno=995, col_offset=55)), Load(), lineno=995, col_offset=38), 'findcodename', Load(), lineno=995, col_offset=38), [Str('property', lineno=995, col_offset=71), Name('code', Load(), lineno=995, col_offset=83)], [], None, None, lineno=995, col_offset=38), lineno=995, col_offset=12), If(Compare(Name('pname', Load(), lineno=996, col_offset=15), [Eq()], [Name('othername', Load(), lineno=996, col_offset=24)], lineno=996, col_offset=15), [Return(None, lineno=997, col_offset=16)], [], lineno=996, col_offset=12), If(Attribute(Name('self', Load(), lineno=998, col_offset=15), 'fp', Load(), lineno=998, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=999, col_offset=16), 'fp', Load(), lineno=999, col_offset=16), 'write', Load(), lineno=999, col_offset=16), [BinOp(Str('\n_Prop_%s = _Prop_%s\n', lineno=999, col_offset=30), Mod(), Tuple([Name('pname', Load(), lineno=999, col_offset=57), Name('othername', Load(), lineno=999, col_offset=64)], Load(), lineno=999, col_offset=57), lineno=999, col_offset=30)], [], None, None, lineno=999, col_offset=16), lineno=999, col_offset=16)], [], lineno=998, col_offset=12)], [If(Attribute(Name('self', Load(), lineno=1001, col_offset=15), 'fp', Load(), lineno=1001, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1002, col_offset=16), 'fp', Load(), lineno=1002, col_offset=16), 'write', Load(), lineno=1002, col_offset=16), [BinOp(Str('class _Prop_%s(aetools.NProperty):\n', lineno=1002, col_offset=30), Mod(), Name('pname', Load(), lineno=1002, col_offset=71), lineno=1002, col_offset=30)], [], None, None, lineno=1002, col_offset=16), lineno=1002, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1003, col_offset=16), 'fp', Load(), lineno=1003, col_offset=16), 'write', Load(), lineno=1003, col_offset=16), [BinOp(Str('    """%s - %s """\n', lineno=1003, col_offset=30), Mod(), Tuple([Call(Name('ascii', Load(), lineno=1003, col_offset=56), [Name('name', Load(), lineno=1003, col_offset=62)], [], None, None, lineno=1003, col_offset=56), Call(Name('ascii', Load(), lineno=1003, col_offset=69), [Subscript(Name('what', Load(), lineno=1003, col_offset=75), Index(Num(1, lineno=1003, col_offset=80)), Load(), lineno=1003, col_offset=75)], [], None, None, lineno=1003, col_offset=69)], Load(), lineno=1003, col_offset=56), lineno=1003, col_offset=30)], [], None, None, lineno=1003, col_offset=16), lineno=1003, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1004, col_offset=16), 'fp', Load(), lineno=1004, col_offset=16), 'write', Load(), lineno=1004, col_offset=16), [BinOp(Str('    which = %r\n', lineno=1004, col_offset=30), Mod(), Tuple([Name('code', Load(), lineno=1004, col_offset=52)], Load(), lineno=1004, col_offset=52), lineno=1004, col_offset=30)], [], None, None, lineno=1004, col_offset=16), lineno=1004, col_offset=16), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1005, col_offset=16), 'fp', Load(), lineno=1005, col_offset=16), 'write', Load(), lineno=1005, col_offset=16), [BinOp(Str('    want = %r\n', lineno=1005, col_offset=30), Mod(), Tuple([Subscript(Name('what', Load(), lineno=1005, col_offset=51), Index(Num(0, lineno=1005, col_offset=56)), Load(), lineno=1005, col_offset=51)], Load(), lineno=1005, col_offset=51), lineno=1005, col_offset=30)], [], None, None, lineno=1005, col_offset=16), lineno=1005, col_offset=16)], [], lineno=1001, col_offset=12)], lineno=993, col_offset=8), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1006, col_offset=8), 'namemappers', Load(), lineno=1006, col_offset=8), Index(Num(0, lineno=1006, col_offset=25)), Load(), lineno=1006, col_offset=8), 'addnamecode', Load(), lineno=1006, col_offset=8), [Str('property', lineno=1006, col_offset=40), Name('pname', Load(), lineno=1006, col_offset=52), Name('code', Load(), lineno=1006, col_offset=59)], [], None, None, lineno=1006, col_offset=8), lineno=1006, col_offset=8), If(BoolOp(And(), [Name('is_application_class', Load(), lineno=1007, col_offset=11), Attribute(Name('self', Load(), lineno=1007, col_offset=36), 'fp', Load(), lineno=1007, col_offset=36)], lineno=1007, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1008, col_offset=12), 'fp', Load(), lineno=1008, col_offset=12), 'write', Load(), lineno=1008, col_offset=12), [BinOp(Str('%s = _Prop_%s()\n', lineno=1008, col_offset=26), Mod(), Tuple([Name('pname', Load(), lineno=1008, col_offset=49), Name('pname', Load(), lineno=1008, col_offset=56)], Load(), lineno=1008, col_offset=49), lineno=1008, col_offset=26)], [], None, None, lineno=1008, col_offset=12), lineno=1008, col_offset=12)], [], lineno=1007, col_offset=8)], [], lineno=987, col_offset=4), FunctionDef('compileelement', arguments([Name('self', Param(), lineno=1010, col_offset=23), Name('elem', Param(), lineno=1010, col_offset=29)], None, None, []), [Assign([List([Name('code', Store(), lineno=1011, col_offset=9), Name('keyform', Store(), lineno=1011, col_offset=15)], Store(), lineno=1011, col_offset=8)], Name('elem', Load(), lineno=1011, col_offset=26), lineno=1011, col_offset=8), If(Attribute(Name('self', Load(), lineno=1012, col_offset=11), 'fp', Load(), lineno=1012, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1013, col_offset=12), 'fp', Load(), lineno=1013, col_offset=12), 'write', Load(), lineno=1013, col_offset=12), [BinOp(Str('#        element %r as %s\n', lineno=1013, col_offset=26), Mod(), Tuple([Name('code', Load(), lineno=1013, col_offset=59), Name('keyform', Load(), lineno=1013, col_offset=65)], Load(), lineno=1013, col_offset=59), lineno=1013, col_offset=26)], [], None, None, lineno=1013, col_offset=12), lineno=1013, col_offset=12)], [], lineno=1012, col_offset=8)], [], lineno=1010, col_offset=4), FunctionDef('fillclasspropsandelems', arguments([Name('self', Param(), lineno=1015, col_offset=31), Name('cls', Param(), lineno=1015, col_offset=37)], None, None, []), [Assign([List([Name('name', Store(), lineno=1016, col_offset=9), Name('code', Store(), lineno=1016, col_offset=15), Name('desc', Store(), lineno=1016, col_offset=21), Name('properties', Store(), lineno=1016, col_offset=27), Name('elements', Store(), lineno=1016, col_offset=39)], Store(), lineno=1016, col_offset=8)], Name('cls', Load(), lineno=1016, col_offset=51), lineno=1016, col_offset=8), Assign([Name('cname', Store(), lineno=1017, col_offset=8)], Call(Name('identify', Load(), lineno=1017, col_offset=16), [Name('name', Load(), lineno=1017, col_offset=25)], [], None, None, lineno=1017, col_offset=16), lineno=1017, col_offset=8), If(BoolOp(And(), [Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1018, col_offset=11), 'namemappers', Load(), lineno=1018, col_offset=11), Index(Num(0, lineno=1018, col_offset=28)), Load(), lineno=1018, col_offset=11), 'hascode', Load(), lineno=1018, col_offset=11), [Str('class', lineno=1018, col_offset=39), Name('code', Load(), lineno=1018, col_offset=48)], [], None, None, lineno=1018, col_offset=11), Compare(Subscript(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1019, col_offset=16), 'namemappers', Load(), lineno=1019, col_offset=16), Index(Num(0, lineno=1019, col_offset=33)), Load(), lineno=1019, col_offset=16), 'findcodename', Load(), lineno=1019, col_offset=16), [Str('class', lineno=1019, col_offset=49), Name('code', Load(), lineno=1019, col_offset=58)], [], None, None, lineno=1019, col_offset=16), Index(Num(0, lineno=1019, col_offset=64)), Load(), lineno=1019, col_offset=16), [NotEq()], [Name('cname', Load(), lineno=1019, col_offset=70)], lineno=1019, col_offset=16)], lineno=1018, col_offset=11), [If(BoolOp(And(), [Attribute(Name('self', Load(), lineno=1021, col_offset=15), 'fp', Load(), lineno=1021, col_offset=15), BoolOp(Or(), [Name('elements', Load(), lineno=1021, col_offset=28), Compare(Call(Name('len', Load(), lineno=1021, col_offset=40), [Name('properties', Load(), lineno=1021, col_offset=44)], [], None, None, lineno=1021, col_offset=40), [Gt()], [Num(1, lineno=1021, col_offset=58)], lineno=1021, col_offset=40), BoolOp(And(), [Compare(Call(Name('len', Load(), lineno=1021, col_offset=64), [Name('properties', Load(), lineno=1021, col_offset=68)], [], None, None, lineno=1021, col_offset=64), [Eq()], [Num(1, lineno=1021, col_offset=83)], lineno=1021, col_offset=64), Compare(Subscript(Subscript(Name('properties', Load(), lineno=1022, col_offset=16), Index(Num(0, lineno=1022, col_offset=27)), Load(), lineno=1022, col_offset=16), Index(Num(1, lineno=1022, col_offset=30)), Load(), lineno=1022, col_offset=16), [NotEq()], [Str('c@#!', lineno=1022, col_offset=36)], lineno=1022, col_offset=16)], lineno=1021, col_offset=64)], lineno=1021, col_offset=28)], lineno=1021, col_offset=15), [If(Attribute(Name('self', Load(), lineno=1023, col_offset=19), 'verbose', Load(), lineno=1023, col_offset=19), [Print(Attribute(Name('self', Load(), lineno=1024, col_offset=28), 'verbose', Load(), lineno=1024, col_offset=28), [BinOp(Str('** Skip multiple %s of %s (code %r)', lineno=1024, col_offset=42), Mod(), Tuple([Name('cname', Load(), lineno=1024, col_offset=83), Subscript(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1024, col_offset=90), 'namemappers', Load(), lineno=1024, col_offset=90), Index(Num(0, lineno=1024, col_offset=107)), Load(), lineno=1024, col_offset=90), 'findcodename', Load(), lineno=1024, col_offset=90), [Str('class', lineno=1024, col_offset=123), Name('code', Load(), lineno=1024, col_offset=132)], [], None, None, lineno=1024, col_offset=90), Index(Num(0, lineno=1024, col_offset=138)), Load(), lineno=1024, col_offset=90), Name('code', Load(), lineno=1024, col_offset=142)], Load(), lineno=1024, col_offset=83), lineno=1024, col_offset=42)], True, lineno=1024, col_offset=20)], [], lineno=1023, col_offset=16), Raise(Name('RuntimeError', Load(), lineno=1025, col_offset=22), Str('About to skip non-empty class', lineno=1025, col_offset=36), None, lineno=1025, col_offset=16)], [], lineno=1021, col_offset=12), Return(None, lineno=1026, col_offset=12)], [], lineno=1018, col_offset=8), Assign([Name('plist', Store(), lineno=1027, col_offset=8)], List([], Load(), lineno=1027, col_offset=16), lineno=1027, col_offset=8), Assign([Name('elist', Store(), lineno=1028, col_offset=8)], List([], Load(), lineno=1028, col_offset=16), lineno=1028, col_offset=8), Assign([Name('superclasses', Store(), lineno=1029, col_offset=8)], List([], Load(), lineno=1029, col_offset=23), lineno=1029, col_offset=8), For(Name('prop', Store(), lineno=1030, col_offset=12), Name('properties', Load(), lineno=1030, col_offset=20), [Assign([List([Name('pname', Store(), lineno=1031, col_offset=13), Name('pcode', Store(), lineno=1031, col_offset=20), Name('what', Store(), lineno=1031, col_offset=27)], Store(), lineno=1031, col_offset=12)], Name('prop', Load(), lineno=1031, col_offset=35), lineno=1031, col_offset=12), If(Compare(Name('pcode', Load(), lineno=1032, col_offset=15), [Eq()], [Str('c@#^', lineno=1032, col_offset=24)], lineno=1032, col_offset=15), [Expr(Call(Attribute(Name('superclasses', Load(), lineno=1033, col_offset=16), 'append', Load(), lineno=1033, col_offset=16), [Name('what', Load(), lineno=1033, col_offset=36)], [], None, None, lineno=1033, col_offset=16), lineno=1033, col_offset=16)], [], lineno=1032, col_offset=12), If(Compare(Name('pcode', Load(), lineno=1034, col_offset=15), [Eq()], [Str('c@#!', lineno=1034, col_offset=24)], lineno=1034, col_offset=15), [Continue( lineno=1035, col_offset=16)], [], lineno=1034, col_offset=12), Assign([Name('pname', Store(), lineno=1036, col_offset=12)], Call(Name('identify', Load(), lineno=1036, col_offset=20), [Name('pname', Load(), lineno=1036, col_offset=29)], [], None, None, lineno=1036, col_offset=20), lineno=1036, col_offset=12), Expr(Call(Attribute(Name('plist', Load(), lineno=1037, col_offset=12), 'append', Load(), lineno=1037, col_offset=12), [Name('pname', Load(), lineno=1037, col_offset=25)], [], None, None, lineno=1037, col_offset=12), lineno=1037, col_offset=12)], [], lineno=1030, col_offset=8), Assign([Name('superclassnames', Store(), lineno=1039, col_offset=8)], List([], Load(), lineno=1039, col_offset=26), lineno=1039, col_offset=8), For(Name('superclass', Store(), lineno=1040, col_offset=12), Name('superclasses', Load(), lineno=1040, col_offset=26), [Assign([Tuple([Name('superId', Store(), lineno=1041, col_offset=12), Name('superDesc', Store(), lineno=1041, col_offset=21), Name('dummy', Store(), lineno=1041, col_offset=32)], Store(), lineno=1041, col_offset=12)], Name('superclass', Load(), lineno=1041, col_offset=40), lineno=1041, col_offset=12), Assign([Tuple([Name('superclassname', Store(), lineno=1042, col_offset=12), Name('fullyqualifiedname', Store(), lineno=1042, col_offset=28), Name('module', Store(), lineno=1042, col_offset=48)], Store(), lineno=1042, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1042, col_offset=57), 'findcodename', Load(), lineno=1042, col_offset=57), [Str('class', lineno=1042, col_offset=75), Name('superId', Load(), lineno=1042, col_offset=84)], [], None, None, lineno=1042, col_offset=57), lineno=1042, col_offset=12), If(Compare(Name('superclassname', Load(), lineno=1044, col_offset=15), [Eq()], [Name('cname', Load(), lineno=1044, col_offset=33)], lineno=1044, col_offset=15), [Pass( lineno=1045, col_offset=16)], [Expr(Call(Attribute(Name('superclassnames', Load(), lineno=1047, col_offset=16), 'append', Load(), lineno=1047, col_offset=16), [Name('superclassname', Load(), lineno=1047, col_offset=39)], [], None, None, lineno=1047, col_offset=16), lineno=1047, col_offset=16)], lineno=1044, col_offset=12)], [], lineno=1040, col_offset=8), If(Attribute(Name('self', Load(), lineno=1049, col_offset=11), 'fp', Load(), lineno=1049, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1050, col_offset=12), 'fp', Load(), lineno=1050, col_offset=12), 'write', Load(), lineno=1050, col_offset=12), [BinOp(Str('%s._superclassnames = %r\n', lineno=1050, col_offset=26), Mod(), Tuple([Name('cname', Load(), lineno=1050, col_offset=56), Name('superclassnames', Load(), lineno=1050, col_offset=63)], Load(), lineno=1050, col_offset=56), lineno=1050, col_offset=26)], [], None, None, lineno=1050, col_offset=12), lineno=1050, col_offset=12)], [], lineno=1049, col_offset=8), For(Name('elem', Store(), lineno=1052, col_offset=12), Name('elements', Load(), lineno=1052, col_offset=20), [Assign([List([Name('ecode', Store(), lineno=1053, col_offset=13), Name('keyform', Store(), lineno=1053, col_offset=20)], Store(), lineno=1053, col_offset=12)], Name('elem', Load(), lineno=1053, col_offset=31), lineno=1053, col_offset=12), If(Compare(Name('ecode', Load(), lineno=1054, col_offset=15), [Eq()], [Str('c@#!', lineno=1054, col_offset=24)], lineno=1054, col_offset=15), [Continue( lineno=1055, col_offset=16)], [], lineno=1054, col_offset=12), Assign([Tuple([Name('name', Store(), lineno=1056, col_offset=12), Name('ename', Store(), lineno=1056, col_offset=18), Name('module', Store(), lineno=1056, col_offset=25)], Store(), lineno=1056, col_offset=12)], Call(Attribute(Name('self', Load(), lineno=1056, col_offset=34), 'findcodename', Load(), lineno=1056, col_offset=34), [Str('class', lineno=1056, col_offset=52), Name('ecode', Load(), lineno=1056, col_offset=61)], [], None, None, lineno=1056, col_offset=34), lineno=1056, col_offset=12), If(UnaryOp(Not(), Name('name', Load(), lineno=1057, col_offset=19), lineno=1057, col_offset=15), [If(Attribute(Name('self', Load(), lineno=1058, col_offset=19), 'fp', Load(), lineno=1058, col_offset=19), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1059, col_offset=20), 'fp', Load(), lineno=1059, col_offset=20), 'write', Load(), lineno=1059, col_offset=20), [BinOp(Str('# XXXX %s element %r not found!!\n', lineno=1059, col_offset=34), Mod(), Tuple([Name('cname', Load(), lineno=1059, col_offset=72), Name('ecode', Load(), lineno=1059, col_offset=79)], Load(), lineno=1059, col_offset=72), lineno=1059, col_offset=34)], [], None, None, lineno=1059, col_offset=20), lineno=1059, col_offset=20)], [], lineno=1058, col_offset=16)], [Expr(Call(Attribute(Name('elist', Load(), lineno=1061, col_offset=16), 'append', Load(), lineno=1061, col_offset=16), [Tuple([Name('name', Load(), lineno=1061, col_offset=30), Name('ename', Load(), lineno=1061, col_offset=36)], Load(), lineno=1061, col_offset=30)], [], None, None, lineno=1061, col_offset=16), lineno=1061, col_offset=16)], lineno=1057, col_offset=12)], [], lineno=1052, col_offset=8), Expr(Call(Attribute(Name('plist', Load(), lineno=1063, col_offset=8), 'sort', Load(), lineno=1063, col_offset=8), [], [], None, None, lineno=1063, col_offset=8), lineno=1063, col_offset=8), Expr(Call(Attribute(Name('elist', Load(), lineno=1064, col_offset=8), 'sort', Load(), lineno=1064, col_offset=8), [], [], None, None, lineno=1064, col_offset=8), lineno=1064, col_offset=8), If(Attribute(Name('self', Load(), lineno=1066, col_offset=11), 'fp', Load(), lineno=1066, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1067, col_offset=12), 'fp', Load(), lineno=1067, col_offset=12), 'write', Load(), lineno=1067, col_offset=12), [BinOp(Str('%s._privpropdict = {\n', lineno=1067, col_offset=26), Mod(), Name('cname', Load(), lineno=1067, col_offset=51), lineno=1067, col_offset=26)], [], None, None, lineno=1067, col_offset=12), lineno=1067, col_offset=12), For(Name('n', Store(), lineno=1068, col_offset=16), Name('plist', Load(), lineno=1068, col_offset=21), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1069, col_offset=16), 'fp', Load(), lineno=1069, col_offset=16), 'write', Load(), lineno=1069, col_offset=16), [BinOp(Str("    '%s' : _Prop_%s,\n", lineno=1069, col_offset=30), Mod(), Tuple([Name('n', Load(), lineno=1069, col_offset=56), Name('n', Load(), lineno=1069, col_offset=59)], Load(), lineno=1069, col_offset=56), lineno=1069, col_offset=30)], [], None, None, lineno=1069, col_offset=16), lineno=1069, col_offset=16)], [], lineno=1068, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1070, col_offset=12), 'fp', Load(), lineno=1070, col_offset=12), 'write', Load(), lineno=1070, col_offset=12), [Str('}\n', lineno=1070, col_offset=26)], [], None, None, lineno=1070, col_offset=12), lineno=1070, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1071, col_offset=12), 'fp', Load(), lineno=1071, col_offset=12), 'write', Load(), lineno=1071, col_offset=12), [BinOp(Str('%s._privelemdict = {\n', lineno=1071, col_offset=26), Mod(), Name('cname', Load(), lineno=1071, col_offset=51), lineno=1071, col_offset=26)], [], None, None, lineno=1071, col_offset=12), lineno=1071, col_offset=12), For(Tuple([Name('n', Store(), lineno=1072, col_offset=16), Name('fulln', Store(), lineno=1072, col_offset=19)], Store(), lineno=1072, col_offset=16), Name('elist', Load(), lineno=1072, col_offset=28), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1073, col_offset=16), 'fp', Load(), lineno=1073, col_offset=16), 'write', Load(), lineno=1073, col_offset=16), [BinOp(Str("    '%s' : %s,\n", lineno=1073, col_offset=30), Mod(), Tuple([Name('n', Load(), lineno=1073, col_offset=50), Name('fulln', Load(), lineno=1073, col_offset=53)], Load(), lineno=1073, col_offset=50), lineno=1073, col_offset=30)], [], None, None, lineno=1073, col_offset=16), lineno=1073, col_offset=16)], [], lineno=1072, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1074, col_offset=12), 'fp', Load(), lineno=1074, col_offset=12), 'write', Load(), lineno=1074, col_offset=12), [Str('}\n', lineno=1074, col_offset=26)], [], None, None, lineno=1074, col_offset=12), lineno=1074, col_offset=12)], [], lineno=1066, col_offset=8)], [], lineno=1015, col_offset=4), FunctionDef('compilecomparison', arguments([Name('self', Param(), lineno=1076, col_offset=26), Name('comp', Param(), lineno=1076, col_offset=32)], None, None, []), [Assign([List([Name('name', Store(), lineno=1077, col_offset=9), Name('code', Store(), lineno=1077, col_offset=15), Name('comment', Store(), lineno=1077, col_offset=21)], Store(), lineno=1077, col_offset=8)], Name('comp', Load(), lineno=1077, col_offset=32), lineno=1077, col_offset=8), Assign([Name('iname', Store(), lineno=1078, col_offset=8)], Call(Name('identify', Load(), lineno=1078, col_offset=16), [Name('name', Load(), lineno=1078, col_offset=25)], [], None, None, lineno=1078, col_offset=16), lineno=1078, col_offset=8), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1079, col_offset=8), 'namemappers', Load(), lineno=1079, col_offset=8), Index(Num(0, lineno=1079, col_offset=25)), Load(), lineno=1079, col_offset=8), 'addnamecode', Load(), lineno=1079, col_offset=8), [Str('comparison', lineno=1079, col_offset=40), Name('iname', Load(), lineno=1079, col_offset=54), Name('code', Load(), lineno=1079, col_offset=61)], [], None, None, lineno=1079, col_offset=8), lineno=1079, col_offset=8), If(Attribute(Name('self', Load(), lineno=1080, col_offset=11), 'fp', Load(), lineno=1080, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1081, col_offset=12), 'fp', Load(), lineno=1081, col_offset=12), 'write', Load(), lineno=1081, col_offset=12), [BinOp(Str('class %s(aetools.NComparison):\n', lineno=1081, col_offset=26), Mod(), Name('iname', Load(), lineno=1081, col_offset=63), lineno=1081, col_offset=26)], [], None, None, lineno=1081, col_offset=12), lineno=1081, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1082, col_offset=12), 'fp', Load(), lineno=1082, col_offset=12), 'write', Load(), lineno=1082, col_offset=12), [BinOp(Str('    """%s - %s """\n', lineno=1082, col_offset=26), Mod(), Tuple([Call(Name('ascii', Load(), lineno=1082, col_offset=52), [Name('name', Load(), lineno=1082, col_offset=58)], [], None, None, lineno=1082, col_offset=52), Call(Name('ascii', Load(), lineno=1082, col_offset=65), [Name('comment', Load(), lineno=1082, col_offset=71)], [], None, None, lineno=1082, col_offset=65)], Load(), lineno=1082, col_offset=52), lineno=1082, col_offset=26)], [], None, None, lineno=1082, col_offset=12), lineno=1082, col_offset=12)], [], lineno=1080, col_offset=8)], [], lineno=1076, col_offset=4), FunctionDef('compileenumeration', arguments([Name('self', Param(), lineno=1084, col_offset=27), Name('enum', Param(), lineno=1084, col_offset=33)], None, None, []), [Assign([List([Name('code', Store(), lineno=1085, col_offset=9), Name('items', Store(), lineno=1085, col_offset=15)], Store(), lineno=1085, col_offset=8)], Name('enum', Load(), lineno=1085, col_offset=24), lineno=1085, col_offset=8), Assign([Name('name', Store(), lineno=1086, col_offset=8)], BinOp(Str('_Enum_%s', lineno=1086, col_offset=15), Mod(), Call(Name('identify', Load(), lineno=1086, col_offset=28), [Name('code', Load(), lineno=1086, col_offset=37)], [], None, None, lineno=1086, col_offset=28), lineno=1086, col_offset=15), lineno=1086, col_offset=8), If(Attribute(Name('self', Load(), lineno=1087, col_offset=11), 'fp', Load(), lineno=1087, col_offset=11), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1088, col_offset=12), 'fp', Load(), lineno=1088, col_offset=12), 'write', Load(), lineno=1088, col_offset=12), [BinOp(Str('%s = {\n', lineno=1088, col_offset=26), Mod(), Name('name', Load(), lineno=1088, col_offset=39), lineno=1088, col_offset=26)], [], None, None, lineno=1088, col_offset=12), lineno=1088, col_offset=12), For(Name('item', Store(), lineno=1089, col_offset=16), Name('items', Load(), lineno=1089, col_offset=24), [Expr(Call(Attribute(Name('self', Load(), lineno=1090, col_offset=16), 'compileenumerator', Load(), lineno=1090, col_offset=16), [Name('item', Load(), lineno=1090, col_offset=39)], [], None, None, lineno=1090, col_offset=16), lineno=1090, col_offset=16)], [], lineno=1089, col_offset=12), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1091, col_offset=12), 'fp', Load(), lineno=1091, col_offset=12), 'write', Load(), lineno=1091, col_offset=12), [Str('}\n\n', lineno=1091, col_offset=26)], [], None, None, lineno=1091, col_offset=12), lineno=1091, col_offset=12)], [], lineno=1087, col_offset=8), Expr(Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1092, col_offset=8), 'namemappers', Load(), lineno=1092, col_offset=8), Index(Num(0, lineno=1092, col_offset=25)), Load(), lineno=1092, col_offset=8), 'addnamecode', Load(), lineno=1092, col_offset=8), [Str('enum', lineno=1092, col_offset=40), Name('name', Load(), lineno=1092, col_offset=48), Name('code', Load(), lineno=1092, col_offset=54)], [], None, None, lineno=1092, col_offset=8), lineno=1092, col_offset=8), Return(Name('code', Load(), lineno=1093, col_offset=15), lineno=1093, col_offset=8)], [], lineno=1084, col_offset=4), FunctionDef('compileenumerator', arguments([Name('self', Param(), lineno=1095, col_offset=26), Name('item', Param(), lineno=1095, col_offset=32)], None, None, []), [Assign([List([Name('name', Store(), lineno=1096, col_offset=9), Name('code', Store(), lineno=1096, col_offset=15), Name('desc', Store(), lineno=1096, col_offset=21)], Store(), lineno=1096, col_offset=8)], Name('item', Load(), lineno=1096, col_offset=29), lineno=1096, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1097, col_offset=8), 'fp', Load(), lineno=1097, col_offset=8), 'write', Load(), lineno=1097, col_offset=8), [BinOp(Str('    %r : %r,\t# %s\n', lineno=1097, col_offset=22), Mod(), Tuple([Call(Name('identify', Load(), lineno=1097, col_offset=48), [Name('name', Load(), lineno=1097, col_offset=57)], [], None, None, lineno=1097, col_offset=48), Name('code', Load(), lineno=1097, col_offset=64), Call(Name('ascii', Load(), lineno=1097, col_offset=70), [Name('desc', Load(), lineno=1097, col_offset=76)], [], None, None, lineno=1097, col_offset=70)], Load(), lineno=1097, col_offset=48), lineno=1097, col_offset=22)], [], None, None, lineno=1097, col_offset=8), lineno=1097, col_offset=8)], [], lineno=1095, col_offset=4), FunctionDef('checkforenum', arguments([Name('self', Param(), lineno=1099, col_offset=21), Name('enum', Param(), lineno=1099, col_offset=27)], None, None, []), [Expr(Str("This enum code is used by an event. Make sure it's available", lineno=1100, col_offset=8), lineno=1100, col_offset=8), Assign([Tuple([Name('name', Store(), lineno=1101, col_offset=8), Name('fullname', Store(), lineno=1101, col_offset=14), Name('module', Store(), lineno=1101, col_offset=24)], Store(), lineno=1101, col_offset=8)], Call(Attribute(Name('self', Load(), lineno=1101, col_offset=33), 'findcodename', Load(), lineno=1101, col_offset=33), [Str('enum', lineno=1101, col_offset=51), Name('enum', Load(), lineno=1101, col_offset=59)], [], None, None, lineno=1101, col_offset=33), lineno=1101, col_offset=8), If(UnaryOp(Not(), Name('name', Load(), lineno=1102, col_offset=15), lineno=1102, col_offset=11), [If(Attribute(Name('self', Load(), lineno=1103, col_offset=15), 'fp', Load(), lineno=1103, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1104, col_offset=16), 'fp', Load(), lineno=1104, col_offset=16), 'write', Load(), lineno=1104, col_offset=16), [BinOp(Str('_Enum_%s = None # XXXX enum %s not found!!\n', lineno=1104, col_offset=30), Mod(), Tuple([Call(Name('identify', Load(), lineno=1104, col_offset=78), [Name('enum', Load(), lineno=1104, col_offset=87)], [], None, None, lineno=1104, col_offset=78), Call(Name('ascii', Load(), lineno=1104, col_offset=94), [Name('enum', Load(), lineno=1104, col_offset=100)], [], None, None, lineno=1104, col_offset=94)], Load(), lineno=1104, col_offset=78), lineno=1104, col_offset=30)], [], None, None, lineno=1104, col_offset=16), lineno=1104, col_offset=16)], [], lineno=1103, col_offset=12), Return(None, lineno=1105, col_offset=12)], [], lineno=1102, col_offset=8), If(Name('module', Load(), lineno=1106, col_offset=11), [If(Attribute(Name('self', Load(), lineno=1107, col_offset=15), 'fp', Load(), lineno=1107, col_offset=15), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1108, col_offset=16), 'fp', Load(), lineno=1108, col_offset=16), 'write', Load(), lineno=1108, col_offset=16), [BinOp(Str('from %s import %s\n', lineno=1108, col_offset=30), Mod(), Tuple([Name('module', Load(), lineno=1108, col_offset=53), Name('name', Load(), lineno=1108, col_offset=61)], Load(), lineno=1108, col_offset=53), lineno=1108, col_offset=30)], [], None, None, lineno=1108, col_offset=16), lineno=1108, col_offset=16)], [], lineno=1107, col_offset=12)], [], lineno=1106, col_offset=8)], [], lineno=1099, col_offset=4), FunctionDef('dumpindex', arguments([Name('self', Param(), lineno=1110, col_offset=18)], None, None, []), [If(UnaryOp(Not(), Attribute(Name('self', Load(), lineno=1111, col_offset=15), 'fp', Load(), lineno=1111, col_offset=15), lineno=1111, col_offset=11), [Return(None, lineno=1112, col_offset=12)], [], lineno=1111, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1113, col_offset=8), 'fp', Load(), lineno=1113, col_offset=8), 'write', Load(), lineno=1113, col_offset=8), [Str('\n#\n# Indices of types declared in this module\n#\n', lineno=1113, col_offset=22)], [], None, None, lineno=1113, col_offset=8), lineno=1113, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1115, col_offset=8), 'fp', Load(), lineno=1115, col_offset=8), 'write', Load(), lineno=1115, col_offset=8), [Str('_classdeclarations = {\n', lineno=1115, col_offset=22)], [], None, None, lineno=1115, col_offset=8), lineno=1115, col_offset=8), Assign([Name('classlist', Store(), lineno=1116, col_offset=8)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1116, col_offset=20), 'namemappers', Load(), lineno=1116, col_offset=20), Index(Num(0, lineno=1116, col_offset=37)), Load(), lineno=1116, col_offset=20), 'getall', Load(), lineno=1116, col_offset=20), [Str('class', lineno=1116, col_offset=47)], [], None, None, lineno=1116, col_offset=20), lineno=1116, col_offset=8), Expr(Call(Attribute(Name('classlist', Load(), lineno=1117, col_offset=8), 'sort', Load(), lineno=1117, col_offset=8), [], [], None, None, lineno=1117, col_offset=8), lineno=1117, col_offset=8), For(Tuple([Name('k', Store(), lineno=1118, col_offset=12), Name('v', Store(), lineno=1118, col_offset=15)], Store(), lineno=1118, col_offset=12), Name('classlist', Load(), lineno=1118, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1119, col_offset=12), 'fp', Load(), lineno=1119, col_offset=12), 'write', Load(), lineno=1119, col_offset=12), [BinOp(Str('    %r : %s,\n', lineno=1119, col_offset=26), Mod(), Tuple([Name('k', Load(), lineno=1119, col_offset=46), Name('v', Load(), lineno=1119, col_offset=49)], Load(), lineno=1119, col_offset=46), lineno=1119, col_offset=26)], [], None, None, lineno=1119, col_offset=12), lineno=1119, col_offset=12)], [], lineno=1118, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1120, col_offset=8), 'fp', Load(), lineno=1120, col_offset=8), 'write', Load(), lineno=1120, col_offset=8), [Str('}\n', lineno=1120, col_offset=22)], [], None, None, lineno=1120, col_offset=8), lineno=1120, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1122, col_offset=8), 'fp', Load(), lineno=1122, col_offset=8), 'write', Load(), lineno=1122, col_offset=8), [Str('\n_propdeclarations = {\n', lineno=1122, col_offset=22)], [], None, None, lineno=1122, col_offset=8), lineno=1122, col_offset=8), Assign([Name('proplist', Store(), lineno=1123, col_offset=8)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1123, col_offset=19), 'namemappers', Load(), lineno=1123, col_offset=19), Index(Num(0, lineno=1123, col_offset=36)), Load(), lineno=1123, col_offset=19), 'getall', Load(), lineno=1123, col_offset=19), [Str('property', lineno=1123, col_offset=46)], [], None, None, lineno=1123, col_offset=19), lineno=1123, col_offset=8), Expr(Call(Attribute(Name('proplist', Load(), lineno=1124, col_offset=8), 'sort', Load(), lineno=1124, col_offset=8), [], [], None, None, lineno=1124, col_offset=8), lineno=1124, col_offset=8), For(Tuple([Name('k', Store(), lineno=1125, col_offset=12), Name('v', Store(), lineno=1125, col_offset=15)], Store(), lineno=1125, col_offset=12), Name('proplist', Load(), lineno=1125, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1126, col_offset=12), 'fp', Load(), lineno=1126, col_offset=12), 'write', Load(), lineno=1126, col_offset=12), [BinOp(Str('    %r : _Prop_%s,\n', lineno=1126, col_offset=26), Mod(), Tuple([Name('k', Load(), lineno=1126, col_offset=52), Name('v', Load(), lineno=1126, col_offset=55)], Load(), lineno=1126, col_offset=52), lineno=1126, col_offset=26)], [], None, None, lineno=1126, col_offset=12), lineno=1126, col_offset=12)], [], lineno=1125, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1127, col_offset=8), 'fp', Load(), lineno=1127, col_offset=8), 'write', Load(), lineno=1127, col_offset=8), [Str('}\n', lineno=1127, col_offset=22)], [], None, None, lineno=1127, col_offset=8), lineno=1127, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1129, col_offset=8), 'fp', Load(), lineno=1129, col_offset=8), 'write', Load(), lineno=1129, col_offset=8), [Str('\n_compdeclarations = {\n', lineno=1129, col_offset=22)], [], None, None, lineno=1129, col_offset=8), lineno=1129, col_offset=8), Assign([Name('complist', Store(), lineno=1130, col_offset=8)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1130, col_offset=19), 'namemappers', Load(), lineno=1130, col_offset=19), Index(Num(0, lineno=1130, col_offset=36)), Load(), lineno=1130, col_offset=19), 'getall', Load(), lineno=1130, col_offset=19), [Str('comparison', lineno=1130, col_offset=46)], [], None, None, lineno=1130, col_offset=19), lineno=1130, col_offset=8), Expr(Call(Attribute(Name('complist', Load(), lineno=1131, col_offset=8), 'sort', Load(), lineno=1131, col_offset=8), [], [], None, None, lineno=1131, col_offset=8), lineno=1131, col_offset=8), For(Tuple([Name('k', Store(), lineno=1132, col_offset=12), Name('v', Store(), lineno=1132, col_offset=15)], Store(), lineno=1132, col_offset=12), Name('complist', Load(), lineno=1132, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1133, col_offset=12), 'fp', Load(), lineno=1133, col_offset=12), 'write', Load(), lineno=1133, col_offset=12), [BinOp(Str('    %r : %s,\n', lineno=1133, col_offset=26), Mod(), Tuple([Name('k', Load(), lineno=1133, col_offset=46), Name('v', Load(), lineno=1133, col_offset=49)], Load(), lineno=1133, col_offset=46), lineno=1133, col_offset=26)], [], None, None, lineno=1133, col_offset=12), lineno=1133, col_offset=12)], [], lineno=1132, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1134, col_offset=8), 'fp', Load(), lineno=1134, col_offset=8), 'write', Load(), lineno=1134, col_offset=8), [Str('}\n', lineno=1134, col_offset=22)], [], None, None, lineno=1134, col_offset=8), lineno=1134, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1136, col_offset=8), 'fp', Load(), lineno=1136, col_offset=8), 'write', Load(), lineno=1136, col_offset=8), [Str('\n_enumdeclarations = {\n', lineno=1136, col_offset=22)], [], None, None, lineno=1136, col_offset=8), lineno=1136, col_offset=8), Assign([Name('enumlist', Store(), lineno=1137, col_offset=8)], Call(Attribute(Subscript(Attribute(Name('self', Load(), lineno=1137, col_offset=19), 'namemappers', Load(), lineno=1137, col_offset=19), Index(Num(0, lineno=1137, col_offset=36)), Load(), lineno=1137, col_offset=19), 'getall', Load(), lineno=1137, col_offset=19), [Str('enum', lineno=1137, col_offset=46)], [], None, None, lineno=1137, col_offset=19), lineno=1137, col_offset=8), Expr(Call(Attribute(Name('enumlist', Load(), lineno=1138, col_offset=8), 'sort', Load(), lineno=1138, col_offset=8), [], [], None, None, lineno=1138, col_offset=8), lineno=1138, col_offset=8), For(Tuple([Name('k', Store(), lineno=1139, col_offset=12), Name('v', Store(), lineno=1139, col_offset=15)], Store(), lineno=1139, col_offset=12), Name('enumlist', Load(), lineno=1139, col_offset=20), [Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1140, col_offset=12), 'fp', Load(), lineno=1140, col_offset=12), 'write', Load(), lineno=1140, col_offset=12), [BinOp(Str('    %r : %s,\n', lineno=1140, col_offset=26), Mod(), Tuple([Name('k', Load(), lineno=1140, col_offset=46), Name('v', Load(), lineno=1140, col_offset=49)], Load(), lineno=1140, col_offset=46), lineno=1140, col_offset=26)], [], None, None, lineno=1140, col_offset=12), lineno=1140, col_offset=12)], [], lineno=1139, col_offset=8), Expr(Call(Attribute(Attribute(Name('self', Load(), lineno=1141, col_offset=8), 'fp', Load(), lineno=1141, col_offset=8), 'write', Load(), lineno=1141, col_offset=8), [Str('}\n', lineno=1141, col_offset=22)], [], None, None, lineno=1141, col_offset=8), lineno=1141, col_offset=8)], [], lineno=1110, col_offset=4)], [], lineno=890, col_offset=0), FunctionDef('compiledata', arguments([Name('data', Param(), lineno=1143, col_offset=16)], None, None, []), [Assign([List([Name('type', Store(), lineno=1144, col_offset=5), Name('description', Store(), lineno=1144, col_offset=11), Name('flags', Store(), lineno=1144, col_offset=24)], Store(), lineno=1144, col_offset=4)], Name('data', Load(), lineno=1144, col_offset=33), lineno=1144, col_offset=4), Return(BinOp(Str('%r -- %r %s', lineno=1145, col_offset=11), Mod(), Tuple([Name('type', Load(), lineno=1145, col_offset=28), Name('description', Load(), lineno=1145, col_offset=34), Call(Name('compiledataflags', Load(), lineno=1145, col_offset=47), [Name('flags', Load(), lineno=1145, col_offset=64)], [], None, None, lineno=1145, col_offset=47)], Load(), lineno=1145, col_offset=28), lineno=1145, col_offset=11), lineno=1145, col_offset=4)], [], lineno=1143, col_offset=0), FunctionDef('is_null', arguments([Name('data', Param(), lineno=1147, col_offset=12)], None, None, []), [Return(Compare(Subscript(Name('data', Load(), lineno=1148, col_offset=11), Index(Num(0, lineno=1148, col_offset=16)), Load(), lineno=1148, col_offset=11), [Eq()], [Str('null', lineno=1148, col_offset=22)], lineno=1148, col_offset=11), lineno=1148, col_offset=4)], [], lineno=1147, col_offset=0), FunctionDef('is_optional', arguments([Name('data', Param(), lineno=1150, col_offset=16)], None, None, []), [Return(BinOp(Subscript(Name('data', Load(), lineno=1151, col_offset=12), Index(Num(2, lineno=1151, col_offset=17)), Load(), lineno=1151, col_offset=12), BitAnd(), Num(32768, lineno=1151, col_offset=22), lineno=1151, col_offset=12), lineno=1151, col_offset=4)], [], lineno=1150, col_offset=0), FunctionDef('is_enum', arguments([Name('data', Param(), lineno=1153, col_offset=12)], None, None, []), [Return(BinOp(Subscript(Name('data', Load(), lineno=1154, col_offset=12), Index(Num(2, lineno=1154, col_offset=17)), Load(), lineno=1154, col_offset=12), BitAnd(), Num(8192, lineno=1154, col_offset=22), lineno=1154, col_offset=12), lineno=1154, col_offset=4)], [], lineno=1153, col_offset=0), FunctionDef('getdatadoc', arguments([Name('data', Param(), lineno=1156, col_offset=15)], None, None, []), [Assign([List([Name('type', Store(), lineno=1157, col_offset=5), Name('descr', Store(), lineno=1157, col_offset=11), Name('flags', Store(), lineno=1157, col_offset=18)], Store(), lineno=1157, col_offset=4)], Name('data', Load(), lineno=1157, col_offset=27), lineno=1157, col_offset=4), If(Name('descr', Load(), lineno=1158, col_offset=7), [Return(Call(Name('ascii', Load(), lineno=1159, col_offset=15), [Name('descr', Load(), lineno=1159, col_offset=21)], [], None, None, lineno=1159, col_offset=15), lineno=1159, col_offset=8)], [], lineno=1158, col_offset=4), If(Compare(Name('type', Load(), lineno=1160, col_offset=7), [Eq()], [Str('****', lineno=1160, col_offset=15)], lineno=1160, col_offset=7), [Return(Str('anything', lineno=1161, col_offset=15), lineno=1161, col_offset=8)], [], lineno=1160, col_offset=4), If(Compare(Name('type', Load(), lineno=1162, col_offset=7), [Eq()], [Str('obj ', lineno=1162, col_offset=15)], lineno=1162, col_offset=7), [Return(Str('an AE object reference', lineno=1163, col_offset=15), lineno=1163, col_offset=8)], [], lineno=1162, col_offset=4), Return(BinOp(Str('undocumented, typecode %r', lineno=1164, col_offset=11), Mod(), Tuple([Name('type', Load(), lineno=1164, col_offset=40)], Load(), lineno=1164, col_offset=40), lineno=1164, col_offset=11), lineno=1164, col_offset=4)], [], lineno=1156, col_offset=0), Assign([Name('dataflagdict', Store(), lineno=1166, col_offset=0)], Dict([Num(15, lineno=1166, col_offset=16), Num(14, lineno=1166, col_offset=32), Num(13, lineno=1166, col_offset=44), Num(12, lineno=1166, col_offset=56)], [Str('optional', lineno=1166, col_offset=20), Str('list', lineno=1166, col_offset=36), Str('enum', lineno=1166, col_offset=48), Str('mutable', lineno=1166, col_offset=60)], lineno=1166, col_offset=15), lineno=1166, col_offset=0), FunctionDef('compiledataflags', arguments([Name('flags', Param(), lineno=1167, col_offset=21)], None, None, []), [Assign([Name('bits', Store(), lineno=1168, col_offset=4)], List([], Load(), lineno=1168, col_offset=11), lineno=1168, col_offset=4), For(Name('i', Store(), lineno=1169, col_offset=8), Call(Name('range', Load(), lineno=1169, col_offset=13), [Num(16, lineno=1169, col_offset=19)], [], None, None, lineno=1169, col_offset=13), [If(BinOp(Name('flags', Load(), lineno=1170, col_offset=11), BitAnd(), BinOp(Num(1, lineno=1170, col_offset=20), LShift(), Name('i', Load(), lineno=1170, col_offset=23), lineno=1170, col_offset=20), lineno=1170, col_offset=11), [If(Compare(Name('i', Load(), lineno=1171, col_offset=15), [In()], [Call(Attribute(Name('dataflagdict', Load(), lineno=1171, col_offset=20), 'keys', Load(), lineno=1171, col_offset=20), [], [], None, None, lineno=1171, col_offset=20)], lineno=1171, col_offset=15), [Expr(Call(Attribute(Name('bits', Load(), lineno=1172, col_offset=16), 'append', Load(), lineno=1172, col_offset=16), [Subscript(Name('dataflagdict', Load(), lineno=1172, col_offset=28), Index(Name('i', Load(), lineno=1172, col_offset=41)), Load(), lineno=1172, col_offset=28)], [], None, None, lineno=1172, col_offset=16), lineno=1172, col_offset=16)], [Expr(Call(Attribute(Name('bits', Load(), lineno=1174, col_offset=16), 'append', Load(), lineno=1174, col_offset=16), [Call(Name('repr', Load(), lineno=1174, col_offset=28), [Name('i', Load(), lineno=1174, col_offset=33)], [], None, None, lineno=1174, col_offset=28)], [], None, None, lineno=1174, col_offset=16), lineno=1174, col_offset=16)], lineno=1171, col_offset=12)], [], lineno=1170, col_offset=8)], [], lineno=1169, col_offset=4), Return(BinOp(Str('[%s]', lineno=1175, col_offset=11), Mod(), Call(Attribute(Name('string', Load(), lineno=1175, col_offset=20), 'join', Load(), lineno=1175, col_offset=20), [Name('bits', Load(), lineno=1175, col_offset=32)], [], None, None, lineno=1175, col_offset=20), lineno=1175, col_offset=11), lineno=1175, col_offset=4)], [], lineno=1167, col_offset=0), FunctionDef('ascii', arguments([Name('str', Param(), lineno=1177, col_offset=10)], None, None, []), [Expr(Str('Return a string with all non-ascii characters hex-encoded', lineno=1178, col_offset=4), lineno=1178, col_offset=4), If(Compare(Call(Name('type', Load(), lineno=1179, col_offset=7), [Name('str', Load(), lineno=1179, col_offset=12)], [], None, None, lineno=1179, col_offset=7), [NotEq()], [Call(Name('type', Load(), lineno=1179, col_offset=20), [Str('', lineno=1179, col_offset=25)], [], None, None, lineno=1179, col_offset=20)], lineno=1179, col_offset=7), [Return(Call(Name('map', Load(), lineno=1180, col_offset=15), [Name('ascii', Load(), lineno=1180, col_offset=19), Name('str', Load(), lineno=1180, col_offset=26)], [], None, None, lineno=1180, col_offset=15), lineno=1180, col_offset=8)], [], lineno=1179, col_offset=4), Assign([Name('rv', Store(), lineno=1181, col_offset=4)], Str('', lineno=1181, col_offset=9), lineno=1181, col_offset=4), For(Name('c', Store(), lineno=1182, col_offset=8), Name('str', Load(), lineno=1182, col_offset=13), [If(BoolOp(Or(), [Compare(Name('c', Load(), lineno=1183, col_offset=11), [In()], [Tuple([Str('\t', lineno=1183, col_offset=17), Str('\n', lineno=1183, col_offset=23), Str('\r', lineno=1183, col_offset=29)], Load(), lineno=1183, col_offset=17)], lineno=1183, col_offset=11), Compare(Str(' ', lineno=1183, col_offset=38), [LtE(), Lt()], [Name('c', Load(), lineno=1183, col_offset=45), Call(Name('chr', Load(), lineno=1183, col_offset=49), [Num(127, lineno=1183, col_offset=53)], [], None, None, lineno=1183, col_offset=49)], lineno=1183, col_offset=38)], lineno=1183, col_offset=11), [Assign([Name('rv', Store(), lineno=1184, col_offset=12)], BinOp(Name('rv', Load(), lineno=1184, col_offset=17), Add(), Name('c', Load(), lineno=1184, col_offset=22), lineno=1184, col_offset=17), lineno=1184, col_offset=12)], [Assign([Name('rv', Store(), lineno=1186, col_offset=12)], BinOp(BinOp(Name('rv', Load(), lineno=1186, col_offset=17), Add(), Str('\\', lineno=1186, col_offset=22), lineno=1186, col_offset=17), Add(), BinOp(Str('x%02.2x', lineno=1186, col_offset=29), Mod(), Call(Name('ord', Load(), lineno=1186, col_offset=41), [Name('c', Load(), lineno=1186, col_offset=45)], [], None, None, lineno=1186, col_offset=41), lineno=1186, col_offset=29), lineno=1186, col_offset=27), lineno=1186, col_offset=12)], lineno=1183, col_offset=8)], [], lineno=1182, col_offset=4), Return(Name('rv', Load(), lineno=1187, col_offset=11), lineno=1187, col_offset=4)], [], lineno=1177, col_offset=0), FunctionDef('identify', arguments([Name('str', Param(), lineno=1189, col_offset=13)], None, None, []), [Expr(Str('Turn any string into an identifier:\n    - replace space by _\n    - replace other illegal chars by _xx_ (hex code)\n    - append _ if the result is a python keyword\n    ', lineno=1194, col_offset=-1), lineno=1194, col_offset=-1), If(UnaryOp(Not(), Name('str', Load(), lineno=1195, col_offset=11), lineno=1195, col_offset=7), [Return(Str('empty_ae_name_', lineno=1196, col_offset=15), lineno=1196, col_offset=8)], [], lineno=1195, col_offset=4), Assign([Name('rv', Store(), lineno=1197, col_offset=4)], Str('', lineno=1197, col_offset=9), lineno=1197, col_offset=4), Assign([Name('ok', Store(), lineno=1198, col_offset=4)], BinOp(Attribute(Name('string', Load(), lineno=1198, col_offset=9), 'ascii_letters', Load(), lineno=1198, col_offset=9), Add(), Str('_', lineno=1198, col_offset=32), lineno=1198, col_offset=9), lineno=1198, col_offset=4), Assign([Name('ok2', Store(), lineno=1199, col_offset=4)], BinOp(Name('ok', Load(), lineno=1199, col_offset=10), Add(), Attribute(Name('string', Load(), lineno=1199, col_offset=15), 'digits', Load(), lineno=1199, col_offset=15), lineno=1199, col_offset=10), lineno=1199, col_offset=4), For(Name('c', Store(), lineno=1200, col_offset=8), Name('str', Load(), lineno=1200, col_offset=13), [If(Compare(Name('c', Load(), lineno=1201, col_offset=11), [In()], [Name('ok', Load(), lineno=1201, col_offset=16)], lineno=1201, col_offset=11), [Assign([Name('rv', Store(), lineno=1202, col_offset=12)], BinOp(Name('rv', Load(), lineno=1202, col_offset=17), Add(), Name('c', Load(), lineno=1202, col_offset=22), lineno=1202, col_offset=17), lineno=1202, col_offset=12)], [If(Compare(Name('c', Load(), lineno=1203, col_offset=13), [Eq()], [Str(' ', lineno=1203, col_offset=18)], lineno=1203, col_offset=13), [Assign([Name('rv', Store(), lineno=1204, col_offset=12)], BinOp(Name('rv', Load(), lineno=1204, col_offset=17), Add(), Str('_', lineno=1204, col_offset=22), lineno=1204, col_offset=17), lineno=1204, col_offset=12)], [Assign([Name('rv', Store(), lineno=1206, col_offset=12)], BinOp(Name('rv', Load(), lineno=1206, col_offset=17), Add(), BinOp(Str('_%02.2x_', lineno=1206, col_offset=22), Mod(), Call(Name('ord', Load(), lineno=1206, col_offset=33), [Name('c', Load(), lineno=1206, col_offset=37)], [], None, None, lineno=1206, col_offset=33), lineno=1206, col_offset=22), lineno=1206, col_offset=17), lineno=1206, col_offset=12)], lineno=1203, col_offset=13)], lineno=1201, col_offset=8), Assign([Name('ok', Store(), lineno=1207, col_offset=8)], Name('ok2', Load(), lineno=1207, col_offset=13), lineno=1207, col_offset=8)], [], lineno=1200, col_offset=4), If(Call(Attribute(Name('keyword', Load(), lineno=1208, col_offset=7), 'iskeyword', Load(), lineno=1208, col_offset=7), [Name('rv', Load(), lineno=1208, col_offset=25)], [], None, None, lineno=1208, col_offset=7), [Assign([Name('rv', Store(), lineno=1209, col_offset=8)], BinOp(Name('rv', Load(), lineno=1209, col_offset=13), Add(), Str('_', lineno=1209, col_offset=18), lineno=1209, col_offset=13), lineno=1209, col_offset=8)], [], lineno=1208, col_offset=4), Return(Name('rv', Load(), lineno=1210, col_offset=11), lineno=1210, col_offset=4)], [], lineno=1189, col_offset=0), If(Compare(Name('__name__', Load(), lineno=1214, col_offset=3), [Eq()], [Str('__main__', lineno=1214, col_offset=15)], lineno=1214, col_offset=3), [Expr(Call(Name('main', Load(), lineno=1215, col_offset=4), [], [], None, None, lineno=1215, col_offset=4), lineno=1215, col_offset=4), Expr(Call(Attribute(Name('sys', Load(), lineno=1216, col_offset=4), 'exit', Load(), lineno=1216, col_offset=4), [Num(1, lineno=1216, col_offset=13)], [], None, None, lineno=1216, col_offset=4), lineno=1216, col_offset=4)], [], lineno=1214, col_offset=0)])
